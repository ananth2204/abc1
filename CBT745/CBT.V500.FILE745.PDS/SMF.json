{"INMR01": {"INMLRECL": 80, "INMFNODE": "BVOMM", "INMFUID": "RLRICE", "INMTNODE": "BVOMM", "INMTUID": "RLRICE", "INMFTIME": "20090318212429000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1704794, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 4000, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "RLRICE.OS.SMF.CBT", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1704794, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1704794, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"RLRICE.OS.SMF.CBT": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 4000, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3339, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x05\\xa0\\x00\\x04\\x8a0P'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x05\\xa0\\x00\\x04\\x8a0P'", "b'X\\xf1\\xf5P\\x00\\x00\\x00\\xe7\\x00\\x0e\\x00\\xe9\\x00\\n\\x00\\x1b'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"SMFMAIN": {"ttr": 17, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         RECORD &T,&M,&D,&S\n.* ------------------------------------------------------------------ *\n.*                                                                    *\n.*      T    SMF record type                                          *\n.*      M    Processing module name                                   *\n.*      D    Description                                              *\n.*      S    Highest screen number for this record type               *\n.*                                                                    *\n.* ------------------------------------------------------------------ *\n         LCLA  &NBR\n&NBR     SETA  (4*&T)\n         ORG   RECORD_TABLE+&NBR\n         DC    A(A&SYSNDX)\n         ORG\nA&SYSNDX DC    AL2(&T)\n         DC    CL3'&T'\n         AIF   ('&M' EQ '0').LBL0010\n         AIF   ('&M' EQ 'BYPASS').LBL0020\n         DC    VL4(&M)\n         AGO   .LBL0030\n.LBL0010 ANOP\n         DC    AL4(0)\n         AGO   .LBL0030\n.LBL0020 DS    0H\n         DC    AL4(-1)\n.LBL0030 ANOP\n         AIF   (T'&S EQ 'O').LBL0040\n         DC    AL1(&S)\n         AGO   .LBL0050\n.LBL0040 ANOP\n         DC    AL1(1)\n.LBL0050 ANOP\n         DC    AL2(C&SYSNDX-B&SYSNDX)\n\nB&SYSNDX DC    C&D\nC&SYSNDX EQU   *\n         MEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  SMF record formatter for On Screen                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMFMAIN  CSECT\nSMFMAIN  AMODE 31\nSMFMAIN  RMODE ANY\n         USING OSCOMM,R12\n         USING SMFMAIN,R15\n         B     INIT0000\nMODID    DC    CL8'SMFMAIN'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         USING SESSION,R11\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING SMFMAIN,R10                    DEFINE BASE\n         L     R9,COMM_OSSPFD                 SPF DATA\n         USING OSSPFD,R9                      DEFINE BASE\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   INIT0020                       NO\n         LR    R3,R0                          COPY COLUMN\n         LR    R4,R1                          COPY RECORD NUMBER\n         ICM   R2,15,SESS_FORMATTER_DXD_ADDR\n         BNZ   INIT0010\n         L     R0,DXDSIZE\n         ST    R0,SESS_FORMATTER_DXD_LENGTH\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SESS_FORMATTER_DXD_ADDR\n         LR    R2,R1                          SAVE ADDRESS\n         LR    R0,R1\n         L     R1,DXDSIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE WORK AREA\nINIT0010 DS    0H\n         A     R2,DXDSTART                    OFFSET TO OUR PORTION\n         ST    R13,4(R2)                      SAVE R13\n         ST    R2,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING WKMAIN,R13                     DEFINE BASE\n         ITRACE ID=ENTRY1,                                             +\n               RDATA2=R13\n         MVC   DXD_CSECT,MODID                COPY MODULE ID\n         LA    R1,PANEL_NAME                  PANEL NAME\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        GETMAIN VDATA\n         ST    R0,WORK_VDATA_LENGTH           SAVE LENGTH\n         ST    R1,WORK_VDATA_ADDR             SAVE ADDRESS\n         MVC   WORK_VWIDTH,SPF_VWIDTH\n         MVC   WORK_VDEPTH,SPF_VDEPTH\n         LA    R1,DATASPACE_1\n         ST    R1,DSPCREQ_DATASPACE\n         MVC   SPF_DSN,SESS_DSN\n         MVC   SPF_MEMBER,SESS_MEMBER\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         ICM   R15,15,SESS_FORMATTER_DXD_ADDR\n         BZ    ERR0040\n         ST    R13,4(R15)\n         ST    R15,8(R13)\n         LR    R13,R15\n         ITRACE ID=ENTRY2,                                             +\n               DATA1=(SESS_FORMAT_FLAGS,1)\n         XC    WORK_RC,WORK_RC\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0000\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    CLEAN000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=FORMAT\n         L     R7,SESS_IO_AREA                I/O AREA ADDRESS\n         ST    R7,DSPCREQ_RECORD_ADDR\n         USING SMF0FLG,R7\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=FORMAT,                                             +\n               DATA1=(DATASPACE_1_DISPLAY_FIRST_RECORD,1)\n         MVC   SPF_ZCMD,COMM_BLANKS\n         BAL   R15,CLEAR000\n* ------------------------------------------------------------------- *\n*        Retreive the record from the data space                      *\n* ------------------------------------------------------------------- *\n         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETREIVE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT\n         BALR  R14,R15                        READ THE RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_OK\n         BNE   ERR0010                        ERROR\n         ITRACE ID=RECORD,                                             +\n               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         MVI   WORK_SCREEN,1\n* ------------------------------------------------------------------- *\n*        Build common SMF heading                                     *\n* ------------------------------------------------------------------- *\nMAIN0030 DS    0H\n         L     R8,WORK_VDATA_ADDR             VDATA BUFFER ADDRESS\n         L     R6,WORK_VDEPTH                 NUMBER OF LINES OF VDATA\n         USING RECORD_DSECT,R4\n         MVC   WORK_A,COMM_BLANKS             INITIALIZE\n         MVC   WORK_A(HEADING_01_L),HEADING_01\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         CVD   R1,COMM_DWORD\n         MVC   WORK_B(L'EDIT_WORD_3),EDIT_WORD_3\n         ED    WORK_B(L'EDIT_WORD_3),COMM_DWORD+4\n         MVC   WORK_A+(HEADING_RECORD-HEADING_01)(L'HEADING_RECORD),WOR+_+\n               K_B+1\n         SR    R2,R2\n         IC    R2,SMF0RTY\n         CVD   R2,COMM_DWORD\n         MVC   WORK_B(4),=X'40202120'\n         ED    WORK_B(4),COMM_DWORD+6\n         MVC   WORK_A+(HEADING_TYPE-HEADING_01)(3),WORK_B+1\n         UNPK  WORK_B(3),SMF0RTY(2)           UNPACK RECORD TYPE\n         TR    WORK_B(2),HEXCHAR              TRANSLATE\n         MVC   WORK_A+(HEADING_HEX-HEADING_01)(L'HEADING_HEX),WORK_B\n         MVC   0(HEADING_01_L,R8),WORK_A\n         A     R8,WORK_VWIDTH\n         BCTR  R6,0\n         MVC   SPF_SMF_DESC,COMM_BLANKS       INITIALIZE RECORD DESC\n         SR    R2,R2                          CLEAR REGISTER\n         IC    R2,SMF0RTY                     RECORD TYPE\n         SLL   R2,2                           MULTIPLY RECORD ID BY 4\n         L     R4,RECORD_TABLE(R2)            ADDRESS OF RECORD INFO\n         LTR   R4,R4                          DEFINED RECORD TYPE?\n         BZ    MAIN0070                       NO\n         MVC   WORK_A,COMM_BLANKS             INITIALIZE\n         MVC   WORK_A(HEADING_02_L),HEADING_02\n         CLI   RECORD_PROC,X'FF'              BYPASSED TYPE?\n         BE    MAIN0040\n         MVC   WORK_DATE,SMF0DTE\n         AP    WORK_DATE,P1900000             ADD CENTURY\n         MVC   WORK_B(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_B(L'EDIT_WORD_2),WORK_DATE\n         MVC   WORK_A+(HEADING_DATE-HEADING_02)(8),WORK_B+1\n         ICM   R1,15,SMF0TME                  READER TIME\n         BAL   R15,TIME0000                   CONVERT\n         MVC   WORK_A+(HEADING_TIME-HEADING_02)(9),WORK_C\nMAIN0040 DS    0H\n         UNPK  WORK_B(3),SMF0FLG(2)\n         TR    WORK_B(2),HEXCHAR\n         MVC   WORK_A+(HEADING_FLAG-HEADING_02)(L'HEADING_FLAG),WORK_B\n         MVC   WORK_A+(HEADING_ID-HEADING_02)(L'HEADING_ID),SMF0SID\n         MVC   0(HEADING_02_L,R8),WORK_A\n         A     R8,WORK_VWIDTH                 NEXT LINE\n         BCTR  R6,0\n         SR    R15,R15                        CLEAR REGISTER\n         ICM   R15,3,RECORD_DESC_LENGTH\n         BZ    MAIN0060                       NO TEXT\n         CH    R15,=Y(L'SPF_SMF_DESC)         TOO LONG?\n         BNH   MAIN0050\n         LH    R15,=Y(L'SPF_SMF_DESC)         LIMIT LENGTH\nMAIN0050 DS    0H\n         BCTR  R15,0\n         EX    R15,MVC_03\n* ------------------------------------------------------------------- *\n*        Call the record formatter                                    *\n* ------------------------------------------------------------------- *\nMAIN0060 DS    0H\n         MVC   SPF_VDEPTH,WORK_VDEPTH\n         MVC   SPF_VWIDTH,WORK_VWIDTH\n         ICM   R15,15,RECORD_PROC             RECORD PROCESSOR\n         BM    MAIN0070                       BYPASSED TYPE\n         BZ    MAIN0070                       NONE\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,WORK_SCREEN\n         ITRACE ID=CALL,                                               +\n               RDATA1=R15\n         BALR  R14,R15                        CALL RECORD PROCESSOR\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         A     R8,WORK_VWIDTH                 NEXT LINE\n         A     R8,WORK_VWIDTH                 NEXT LINE\n         A     R8,WORK_VWIDTH                 NEXT LINE\n         MVC   WORK_A,COMM_BLANKS\n         MVC   WORK_A(MSG_01_L),MSG_01\n         EX    R3,MVC_02                      COPY DEFAULT MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,WORK_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,WORK_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(SESS_RC,2),                                      +\n               DATA2=(SESS_STATUS,1)\n         CLC   COMM_NEW_FORMAT,COMM_BLANKS    NEW FORMAT?\n         BNE   EXIT0000                       YES\n         CLI   COMM_SESS_FUNC,0               SESSION FUNCTION?\n         BNE   EXIT0000                       YES\n         OC    SESS_RC,SESS_RC                RC=0?\n         BZ    MAIN0300                       YES\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE    SET FUNCTION\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         CLI   SPF_ZVERB,C'B'                 'BOTTOM'?\n         BE    MAIN0610                       YES\n         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?\n         BE    MAIN0400                       YES\n         CLI   SPF_ZVERB,C'L'                 'LEFT?\n         BE    MAIN0700                       YES\n         CLI   SPF_ZVERB,C'R'                 'RIGHT?\n         BE    MAIN0800                       YES\n         CLI   SPF_ZVERB,C'T'                 'TOP'?\n         BE    MAIN0600                       YES\n         CLI   SPF_ZVERB,C'U'                 SCROLL UP?\n         BE    MAIN0500                       YES\n         CLC   ABEND,SPF_ZCMD                 'ABEND'?\n         BE    ABEND000                       YES\n         CLC   SPF_ZCMD,COMM_BLANKS           BLANKS?\n         BNE   EXIT0000                       NO\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0400 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'\n         BE    MAIN0610\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD  RECORD DISPLAYED    D\n         A     R1,F1                                PLUS 1\n         C     R1,DATASPACE_1_LAST_RECORD           TOO HIGH?\n         BH    MAIN0610                             YES\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD  CHANGE RCD NBR\n         B     MAIN0010                             DISPLAY THIS RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0500 DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'\n         BE    MAIN0600\n         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         S     R1,F1\n         BL    MAIN0600\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0600 DS    0H\n         ITRACE ID=TOP\n        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD\n         MVC   SPF_MSG_1(MSG_04_L),MSG_04\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0610 DS    0H\n         ITRACE ID=BOTTOM\n         L     R1,DATASPACE_1_LAST_RECORD\n         BCTR  R1,0\n         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD\n         MVC   SPF_MSG_1(MSG_03_L),MSG_03\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0700 DS    0H\n         ITRACE ID=LEFT\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,1,WORK_SCREEN               CURRENT SCREEN NUMBER\n         BCT   R1,MAIN0710                    MINUS 1\n         B     MAIN0720                       ALREADY AT 1\nMAIN0710 DS    0H\n         STC   R1,WORK_SCREEN                 SET NEW SCREEN NUMBER\nMAIN0720 DS    0H\n         BAL   R15,CLEAR000\n         B     MAIN0030                       BUILD DATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0800 DS    0H\n         ITRACE ID=RIGHT\n         CLC   WORK_SCREEN,RECORD_SCREENS     ALREADY AT MAXIMUM?\n         BE    MAIN0810                       YES\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,WORK_SCREEN                 CURRENT SCREEN NUMBER\n         LA    R1,1(,R1)                      PLUS 1\n         STC   R1,WORK_SCREEN                 SET NEW SCREEN NUMBER\nMAIN0810 DS    0H\n         BAL   R15,CLEAR000\n         B     MAIN0030                       BUILD DATA\n* ------------------------------------------------------------------- *\n*        Clear VDATA                                                  *\n* ------------------------------------------------------------------- *\nCLEAR000 DS    0H\n         L     R1,WORK_VDATA_ADDR             VDATA BUFFER ADDRESS\n         L     R2,WORK_VDEPTH                 NUMBER OF LINES\n         L     R3,WORK_VWIDTH                 SCREEN WIDTH\n         BCTR  R3,0                           MINUS 1\nCLEAR010 DS    0H\n         EX    R3,MVC_01                      CLEAR THE DATA\n         A     R1,WORK_VWIDTH                 NEXT LINE\n         BCT   R2,CLEAR010                    LOOP\n         BR    R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0100\nERR0020  DS    0H\n         DC    H'2',C'BEYOND HIGH RECORD'\nERR0030  DS    0H\n         DC    H'3'\n         DC    C'BEYOND HIGH RECORD'\nERR0040  DS    0H\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTIME0000 DS    0H\n         ITRACE ID=TIME,                                               +\n               RDATA1=R1\n         SR    R0,R0\n         D     R0,F100                        CONVERT TO WHOLE SECONDS\n         SR    R0,R0                          CLEAR REMAINDER\n         D     R0,F3600                       COMPUTE HOURS\n         CVD   R1,COMM_DWORD                  CONVERT HOURS TO DECIMAL\n         MVC   WORK_B(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_B(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   WORK_C+0(2),WORK_B+2           COPY HOURS\n         MVI   WORK_C+2,C':'                  INSERT COLON\n         LR    R1,R0                          COPY REMAINDER\n         SR    R0,R0                          CLEAR R0\n         D     R0,F60                         COMPUTE MINUTES\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   WORK_B(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_B(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   WORK_C+3(2),WORK_B+2           COPY MINUTES\n         MVI   WORK_C+5,C':'                  INSERT COLON\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   WORK_B(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_B(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   WORK_C+6(2),WORK_B+2           COPY SECONDS\n         BR    R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         MVC   COMM_MSG_CSECT,MODID           IDENTIFY CSECT\n         L     R15,COMM_V_OSMSG               OSMSG ENTRY POINT\n         BALR  R14,R15                        BUILD THE MESSAGE\n         BR    R2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN_UP\n         ICM   R1,15,WORK_VDATA_ADDR          VDATA ADDRESS\n         BZ    CLEAN010                       NOT PRESENT\n         L     R0,WORK_VDATA_LENGTH           LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                        FREE VDATA\nCLEAN010 DS    0H\n         LA    R0,WKMAIN_L                    WORK AREA SIZE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE R13\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SESS_FORMATTER_DXD_ADDR,SESS_FORMATTER_DXD_ADDR\n         XC    SESS_FORMATTER_DXD_LENGTH,SESS_FORMATTER_DXD_LENGTH\n         SR    R15,R15\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,WORK_RC                    RETURN CODE\n         L     R13,4(R13)                     RESTORE R13\nEXIT0010 DS    0H\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\nMVC_01   MVC   0(0,R1),COMM_BLANKS            COPY BLANKS\nMVC_02   MVC   0(0,R8),WORK_A                 COPY TO BUFFER\nMVC_03   MVC   SPF_SMF_DESC(0),RECORD_DESC\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSIZE        CXD\nDXDSTART       DC  Q(WKMAIN)\nF1             DC  F'1'\nF60            DC  F'60'\nF100           DC  F'100'\nF3600          DC  F'3600'\n\nP1900000       DC  P'1900000'\n\nEDIT_WORD_1    DC  X'F0212020'\nEDIT_WORD_2    DC  X'F0212020204B202020'\nEDIT_WORD_3    DC  X'4020202020202120'\n\nABEND          DC  C'ABEND'\nDISPLAY        DC  CL8'DISPLAY'\nPANEL_NAME     DC  CL8'OSSMF'\nTOP            DC  C'TOP'\n\nHEXCHAR        EQU *-C'0'\n               DC  C'0123456789ABCDEF'\n\nHEADING_01     DS  0C\n               DC  CL10' '\n               DC  AL1($SCREEN_ATTR_HIGH)\n               DC  C'Record number '\n               DC  AL1($SCREEN_ATTR_NORMAL)\nHEADING_RECORD DC  CL7' '\n               DC  CL3' '\n               DC  AL1($SCREEN_ATTR_HIGH_TURQUOISE)\n               DC  C'Record type '\n               DC  AL1($SCREEN_ATTR_HIGH_YELLOW)\nHEADING_TYPE   DC  CL3' '\n               DC  C'  ('\nHEADING_HEX    DC  CL2' '\n               DC  C')'\n               DC  Al1($SCREEN_ATTR_HIGH_TURQUOISE)\n               DC   C'HEX'\n               DC  AL1($SCREEN_ATTR_NORMAL)\nHEADING_01_L   EQU *-HEADING_01\n\nHEADING_02     DS  0C\n               DC  AL1($SCREEN_ATTR_HIGH)\n               DC  CL10' '\nHEADING_DATE   DC  CL8' '\n               DC  CL2' '\nHEADING_TIME   DC  CL8' '\n               DC  CL10' '\n               DC  AL1($SCREEN_ATTR_HIGH)\n               DC  C'Flags'\n               DC  AL1($SCREEN_ATTR_NORMAL)\nHEADING_FLAG   DC  CL2' '\n               DC  AL1($SCREEN_ATTR_HIGH)\n               DC  C'SYSTEM ID'\n               DC  AL1($SCREEN_ATTR_NORMAL)\nHEADING_ID     DC  CL4' '\nHEADING_02_L   EQU *-HEADING_02\n\nMSG_01         DS  0C\n               DC  C'No formatting for this record type available'\nMSG_01_L       EQU *-MSG_01\n\nMSG_02         DS  0C\n               DC  C'Invalid command'\nMSG_02_L       EQU *-MSG_02\n\nMSG_03         DS  0C\n               DC  C'At bottom of data'\nMSG_03_L       EQU *-MSG_03\n\nMSG_04         DS  0C\n               DC  C'At top of data'\nMSG_04_L       EQU *-MSG_04\n\n               LTORG\n\nRECORD_TABLE   DC  256A(0,0)\n               RECORD 000,SMF0000,'IPL'\n               RECORD 002,SMF0002,'SMF dump start'\n               RECORD 003,SMF0002,'SMF dump end'\n               RECORD 004,SMF0004,'Job step termination'\n               RECORD 005,SMF0005,'Job termination'\n               RECORD 006,0,'JES2 JOE (Job output Element)'\n               RECORD 007,SMF0007,'Data lost'\n               RECORD 008,0,'I/O configuration'\n               RECORD 009,0,'Vary device online'\n               RECORD 010,0,'Allocation recovery'\n               RECORD 011,0,'Vary device offline'\n               RECORD 014,SMF0014,'Data set (input)'\n               RECORD 015,SMF0014,'Data set (output)'\n               RECORD 017,SMF0017,'Scratch data set'\n               RECORD 018,SMF0018,'Rename data set'\n               RECORD 020,SMF0020,'JOB initiation'\n               RECORD 030,SMF0030,'Common address space work',6\n               RECORD 031,SMF0031,'TIOC initialization'\n               RECORD 032,SMF0032,'TSO user work accounting'\n               RECORD 040,SMF0040,'Dynamic DD'\n               RECORD 042,SMF0042,'DFP statistics and configuration'\n               RECORD 060,SMF0060,'VSAM volume data set updated'\n               RECORD 061,SMF0061,'ICF define'\n               RECORD 062,SMF0062,'VSAM component or cluster opened'\n               RECORD 064,SMF0064,'VSAM component or cluster status'\n               RECORD 066,SMF0066,'ICF ALTER activity'\n               RECORD 070,SMF0070,'RMF CPU and CRYPTO measurements',15\n               RECORD 071,SMF0071,'RMF paging activity',15\n               RECORD 075,SMF0075,'Page dataset activity'\n               RECORD 080,SMF0080,'RACF operator record'\n               RECORD 090,SMF0090,'System status'\n               RECORD 094,BYPASS,'BYPASSED'\n               ORG\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWKMAIN            DSECT\n                  COPY     DXDPREF\n\nWORK_VDATA_ADDR   DS       A\nWORK_VDATA_LENGTH DS       F\n\nWORK_VDEPTH       DS       F\nWORK_VWIDTH       DS       F\n\nWORK_SPF_PARMS    DS       0A\nWORK_SPF_1        DS       A\nWORK_SPF_2        DS       A\n\nWORK_RC           DS       H\n\nWORK_DATE         DS       PL4\nWORK_A            DS       CL80\nWORK_B            DS       CL80\nWORK_C            DS       CL80\n\nWORK_SCREEN       DS       X\n\n                  DSPCREQ  DSECT=NO\nWKMAIN            DSECT\nWKMAIN_L          EQU      *-WKMAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECORD_DSECT        DSECT\nRECORD_TYPE         DS    AL2\nRECORD_TYPE_CHAR    DS    CL3\nRECORD_PROC         DS    AL4\nRECORD_SCREENS      DS    AL1\nRECORD_DESC_LENGTH  DS    AL2\nRECORD_DESC         DS    C\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD          DSECT\n                    IFASMFR 0\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COPY    ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COPY    TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COPY    REGEQU\n                    END     SMFMAIN\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMFTBL01": {"ttr": 263, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SMFTBL01 CSECT\nSMFTBL01 AMODE 31\nSMFTBL01 RMODE ANY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(1)\n         DC    CL80'Job initiation/TSO LOGON/TSO LOGOFF'\n\n         DC    AL1(0)\n         DC    Cl80'Successful initiation'\n\n         DC    AL1(1)\n         DC    CL80'Password not valid'\n\n         DC    AL1(2)\n         DC    CL80'Group not valid'\n\n         DC    AL1(3)\n         DC    CL80'OIDCARD not valid'\n\n         DC    AL1(4)\n         DC    CL80'Terminal/console not valid'\n\n         DC    AL1(5)\n         DC    CL80'Application not valid'\n\n         DC    AL1(6)\n         DC    CL80'Revoked user attempting access'\n\n         DC    AL1(7)\n         DC    CL80'User ID automatically revoked'\n\n         DC    AL1(8)\n         DC    CL80'Successful termination'\n\n         DC    AL1(9)\n         DC    CL80'Undefined user ID'\n\n         DC    AL1(10)\n         DC    CL80'Insufficient security label authorization'\n\n         DC    AL1(11)\n         DC    CL80'Not authorized to security label'\n\n         DC    AL1(12)\n         DC    CL80'Successful RACINIT initiation'\n\n         DC    AL1(13)\n         DC    CL80'Successful RACINIT delete'\n\n         DC    AL1(14)\n         DC    CL80'System now requires more authority'\n\n         DC    AL1(15)\n         DC    CL80'Remote job entry  - job not authorized'\n\n         DC    AL1(16)\n         DC    CL80'SURROGAT class is inactive'\n\n         DC    AL1(17)\n         DC    CL80'Submitter not authorized by user'\n\n         DC    AL1(18)\n         DC    CL80'submitter not authorized to security label'\n\n         DC    AL1(19)\n         DC    CL80'User is not authorized to job'\n\n         DC    AL1(20)\n         DC    CL80'WARNING - Insufficient security label authority'\n\n         DC    AL1(21)\n         DC    CL80'WARNING - Security label missing from use, job or p+\n               rofile'\n\n         DC    AL1(22)\n         DC    CL80'WARNING - not authorized to security label'\n\n         DC    AL1(23)\n         DC    CL80'Security labels not compatible'\n\n         DC    AL1(24)\n         DC    CL80'WARNING - Security labels not compatible'\n\n         DC    AL1(25)\n         DC    CL80'Current password has expired'\n\n         DC    AL1(26)\n         DC    CL80'Invalid new password'\n\n         DC    AL1(27)\n         DC    CL80'Verification failed by installation'\n\n         DC    AL1(28)\n         DC    CL80'Group access has been revoked'\n\n         DC    AL1(29)\n         DC    CL80'OIDCARD is required'\n\n         DC    AL1(30)\n         DC    CL80'Network job entry - job not authorized'\n\n         DC    AL1(31)\n         DC    CL80'Warning. Unknown user from trusted node propagated'\n\n         DC    AL1(32)\n         DC    CL80'Successful initiation using PassTicket'\n\n         DC    AL1(33)\n         DC    CL80'Attempted replay of PassTicket'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(2)\n         DC    CL80'Resource access'\n\n         DC    AL1(0)\n         DC    CL80'Successful access'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    AL1(2)\n         DC    CL80'Profile not found - RACFIND specified on macro'\n\n         DC    AL1(3)\n         DC    CL80'Access permitted due to warning'\n\n         DC    AL1(4)\n         DC    CL80'Failed due to PROTECTALL'\n\n         DC    AL1(5)\n         DC    CL80'WARNING issued due to PROTECTALL'\n\n         DC    AL1(6)\n         DC    CL80'Insuficient CATEGORY/SECLEVEL'\n\n         DC    AL1(7)\n         DC    CL80'Insufficient security label authority'\n\n         DC    AL1(8)\n         DC    CL80'WARNING security label missing from job, user, or p+\n               rofile'\n\n         DC    AL1(9)\n         DC    CL80'WARNING insufficent security label authority'\n\n         DC    AL1(10)\n         DC    CL80'WARNING. Data set not cataloged'\n\n         DC    AL1(11)\n         DC    CL80'Data set not cataloged'\n\n         DC    AL1(12)\n         DC    CL80'Profile not found - required for authority checking+\n               '\n\n         DC    AL1(13)\n         DC    CL80'WARNING. Insufficient CATEGORY/SECLEVEL'\n\n         DC    AL1(14)\n         DC    CL80'WARNING.  Non-main execution environment detected. +\n               Access temporarily allowed'\n\n         DC    AL1(15)\n         DC    CL80'Non-main execution environment detected. Access tem+\n               porarily allowed'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(3)\n         DC    CL80'ADDVOL/CHGVOL'\n\n         DC    AL1(0)\n         DC    CL80'Successful processing of new volume'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority (data set only)'\n\n         DC    AL1(2)\n         DC    CL80'Insufficient security label authority'\n\n         DC    AL1(3)\n         DC    CL80'Less specific profile exists with different seclabe+\n               l'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(0)\n         DC    CL80'Rename resource'\n\n         DC    AL1(1)\n         DC    CL80'Group not valid'\n\n         DC    AL1(2)\n         DC    CL80'User not in group'\n\n         DC    AL1(3)\n         DC    CL80'Insufficient authority'\n\n         DC    AL1(4)\n         DC    CL80'Resource already defined'\n\n         DC    AL1(5)\n         DC    CL80'User not defined to RACF'\n\n         DC    AL1(6)\n         DC    CL80'Resource not protected'\n\n         DC    AL1(7)\n         DC    CL80'WARNING.  Resource not protected'\n\n         DC    AL1(8)\n         DC    CL80'User in second qualifier is not RACF defined'\n\n         DC    AL1(9)\n         DC    CL80'Less specific profile with different SECLABEL'\n\n         DC    AL1(10)\n         DC    CL80'Insufficient security label authority'\n\n         DC    AL1(11)\n         DC    CL80'Resource not protected by security'\n\n         DC    AL1(12)\n         DC    CL80'New name not protected by security'\n\n         DC    AL1(13)\n         DC    CL80'new SECLABEL must dominate old SECLABEL'\n\n         DC    AL1(14)\n         DC    CL80'Insufficent SECLABEL authority'\n\n         DC    AL1(15)\n         DC    CL80'WARNING.  Resource not protected by security label'\n\n         DC    AL1(16)\n         DC    CL80'WARNING.  New name not protected by security label'\n\n         DC    AL1(17)\n         DC    CL80'WARNING.  New SECLABEL must dominate old SECLABEL'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(5)\n         DC    CL80'Delete resource'\n\n         DC    AL1(0)\n         DC    CL80'Successful scratch'\n\n         DC    AL1(1)\n         DC    CL80'Resource not found'\n\n         DC    AL1(2)\n         DC    CL80'Invalid volume identification'\n\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(6)\n         DC    CL80'Delete one volume of multivolume resource'\n\n         DC    AL1(1)\n         DC    CL80'Successful deletion'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(7)\n         DC    CL80'Define resource'\n\n         DC    AL1(0)\n         DC    CL80'Successful definition'\n\n         DC    AL1(1)\n         DC    CL80'Group undefined'\n\n         DC    AL1(2)\n         DC    CL80'User not in group'\n\n         DC    AL1(3)\n         DC    CL80'Insufficient authority'\n\n         DC    AL1(4)\n         DC    CL80'Resource already defined'\n\n         DC    AL1(5)\n         DC    CL80'User not defined to RACF'\n\n         DC    AL1(6)\n         DC    CL80'Resource not protected'\n\n         DC    AL1(7)\n         DC    CL80'WARNING.  Resource not protected'\n\n         DC    AL1(8)\n         DC    CL80'WARNING.  Security label missing from job, user or +\n               ofile'\n\n         DC    AL1(9)\n         DC    CL80'WARNING.  Insufficient security label authority'\n\n         DC    AL1(10)\n         DC    CL80'User in second qualifier not defined to RACF'\n\n         DC    AL1(11)\n         DC    CL80'Insufficient security label authority'\n\n         DC    AL1(12)\n         DC    CL80'Less specific profile exists with different SECLABE+\n               L'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(8)\n         DC    CL80'ADDSD'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    AL1(2)\n         DC    CL80'Keyword violation detected'\n\n         DC    AL1(3)\n         DC    CL80'Successful retrieval of data set names affected by +\n               SECLABEL change'\n\n         DC    AL1(4)\n         DC    CL80'Error during retrieval of data set names affected b+\n               y SECLABEL change'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(9)\n         DC    CL80'ADDGROUP'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(10)\n         DC    CL80'ADDUSER'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(11)\n         DC    CL80'ALTDSD'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    AL1(3)\n         DC    CL80'Successful retrieval of data set names affected by +\n               SECLABEL change'\n\n         DC    AL1(4)\n         DC    CL80'Error during retrieval of data set names affected b+\n               y SECLABEL change'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(12)\n         DC    CL80'ALTGROUP'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(13)\n         DC    CL80'ALTUSER'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(14)\n         DC    CL80'CONNECT'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(15)\n         DC    CL80'DELDSD'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(16)\n         DC    CL80'DELGROUP'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(17)\n         DC    CL80'DELUSER'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(18)\n         DC    CL80'PASSWORD'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(19)\n         DC    CL80'PERMIT'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(20)\n         DC    CL80'RALTER'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(21)\n         DC    CL80'RDEFINE'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(22)\n         DC    CL80'RDELETE'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(23)\n         DC    CL80'REMOVE'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(24)\n         DC    CL80'SETROPTS'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(25)\n         DC    CL80'RVARY'\n\n         DC    AL1(0)\n         DC    CL80'No violations detected'\n\n         DC    AL1(1)\n         DC    CL80'Insufficient authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(26)\n         DC    CL80'APPC session establishment'\n\n         DC    AL1(0)\n         DC    CL80'Partner verification was successful'\n\n         DC    AL1(1)\n         DC    CL80'Session established without verification'\n\n         DC    AL1(2)\n         DC    CL80'Local LU key will expire in less than 5 days'\n\n         DC    AL1(3)\n         DC    CL80'Partner LU access has been revoked'\n\n         DC    AL1(4)\n         DC    CL80'Partner LU key does not match this LU key'\n\n         DC    AL1(5)\n         DC    CL80'Session terminated for security reason'\n\n         DC    AL1(6)\n         DC    CL80'Required SESSION KEY not defined'\n\n         DC    AL1(7)\n         DC    CL80'Possible security attach by partner LU'\n\n         DC    AL1(8)\n         DC    CL80'SESSION KEY not defined for partner LU'\n\n         DC    AL1(9)\n         DC    CL80'SESSION KEY not defined for this LU'\n\n         DC    AL1(10)\n         DC    CL80'SNA security-related protocol error'\n\n         DC    AL1(11)\n         DC    CL80'Profile change during verification'\n\n         DC    AL1(12)\n         DC    CL80'Expired session key'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(28)\n         DC    CL80'Directory search'\n\n         DC    AL1(0)\n         DC    CL80'Search allowed'\n\n         DC    AL1(1)\n         DC    CL80'Not authorized to search directory'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(29)\n         DC    CL80'Check access to directory'\n\n         DC    AL1(0)\n         DC    CL80'Access allowed'\n\n         DC    AL1(1)\n         DC    CL80'Caller does not have requested access authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(30)\n         DC    CL80'Check access to file'\n\n         DC    AL1(0)\n         DC    CL80'Access allowed'\n\n         DC    AL1(1)\n         DC    CL80'Caller does not have requested access authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(31)\n         DC    CL80'CHAUDIT'\n\n         DC    AL1(0)\n         DC    CL80'Access allowed'\n\n         DC    AL1(1)\n         DC    CL80'Caller does not have requested access authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(32)\n         DC    CL80'CHDIR'\n\n         DC    AL1(0)\n         DC    CL80'Access allowed'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(33)\n         DC    CL80'CHMOD'\n\n         DC    AL1(0)\n         DC    CL80'Access allowed'\n\n         DC    AL1(1)\n         DC    CL80'Caller does not have requested access authority'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(34)\n         DC    CL80'CHOWN'\n\n         DC    AL1(0)\n         DC    CL80'Access allowed'\n\n         DC    AL1(1)\n         DC    CL80'Caller does not have requested access authority'\n\n         DC    X'FF'\n\n* -------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(35)\n         DC    CL80'Clear SETID bits for file'\n\n         DC    AL1(0)\n         DC    CL80'Access allowed'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(36)\n         DC    CL80'EXEC with SETUID/SETGID'\n\n         DC    AL1(0)\n         DC    CL80'Access allowed'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(37)\n         DC    CL80'GETPSENT'\n\n         DC    AL1(0)\n         DC    CL80'Access allowed'\n\n\n         DC    AL1(1)\n         DC    CL80'Not authorized to access specified process'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(38)\n         DC    CL80'Initialize z/OS UNIX process (DUB)'\n\n         DC    AL1(0)\n         DC    CL80'Successful'\n\n         DC    AL1(1)\n         DC    CL80'User not defined as a z/OS UNIX user'\n\n         DC    AL1(2)\n         DC    CL80'User incompletely defined as a z/OS UNIX user'\n\n         DC    AL1(3)\n         DC    CL80'User''s current group has no z/OS UNIX group identi+\n               fier'\n\n         DC    X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DC    AL1(39)\n         DC    CL80'z/OS UNIX completion (UNDUB)'\n\n         DC    AL1(0)\n         DC    CL80'Process completed successfully'\n\n         DC    X'FF'\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0000": {"ttr": 524, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 0                                    *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R11    SESSION address                                        *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0000  CSECT\nSMF0000  AMODE 31\nSMF0000  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0000,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0000'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12            DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         USING SMF0000,R10           DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART           PLUS DISPLACEMENT TO OUR PORITON\n         ST    R13,4(R1)             SAVE R13\n         ST    R1,8(R13)             CHAIN SAVE AREA\n         LR    R13,R1                COPY WORK AREA ADDRESS\n         USING WK0000,R13            DEFINE BASE\n         USING OSSPFD,R9             DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         USING SMF0FLG,R7\n         L     R3,SPF_VWIDTH         SCREEN WIDTH\n         BCTR  R3,0                  FOR INSTRUCTION LENGTH\n         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA\n         MVC   DXD_X(MSG_01_L),MSG_01\n         ICM   R1,15,SMF0JWT         JOB WAIT TIME\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         ED    DXD_X+(MSG_01_JWT-MSG_01)(L'MSG_01_JWT),COMM_DWORD+4\n         EX    R3,MVC_01             COPY DATA\n         A     R8,SPF_VWIDTH\n         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA\n         MVC   DXD_X(MSG_02_L),MSG_02\n         ICM   R1,15,SMF0BUF         SMF BUFFER SIZE IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         ED    DXD_X+(MSG_02_BUF-MSG_01)(L'MSG_02_BUF),COMM_DWORD+4\n         EX    R3,MVC_01             COPY DATA\n         A     R8,SPF_VWIDTH\n         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA\n         MVC   DXD_X(MSG_03_L),MSG_03\n         ICM   R1,15,SMF0VST         VIRTUAL STORAGE SIZE (1K BLOCKS)\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         ED    DXD_X+(MSG_03_VST-MSG_03)(L'MSG_03_VST),COMM_DWORD+4\n         EX    R3,MVC_01             COPY DATA\n         A     R8,SPF_VWIDTH\n         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA\n         MVC   DXD_X(MSG_04_L),MSG_04\n         UNPK  DXD_Y(3),SMF0OPT(2)   UNPACK OPTIONS\n         TR    DXD_Y(2),HEXCHAR      TRANSLATE\n         MVC   DXD_X+(MSG_04_OPT-MSG_04)(L'MSG_04_OPT),DXD_Y\n         A     R8,SPF_VWIDTH\n         TM    SMF0OPT,X'80'         SYSTEM AND JOB DATA COLLECTED?\n         BNO   MAIN0010              NO\n         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_01),OPT_MSG_01\n         A     R8,SPF_VWIDTH         NEXT LINE\nMAIN0010 DS    0H\n         TM    SMF0OPT,X'40'         STEP DATA TO BE COLLECTED?\n         BNO   MAIN0020              NO\n         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_02),OPT_MSG_02\n         A     R8,SPF_VWIDTH         NEXT LINE\nMAIN0020 DS    0H\n         TM    SMF0OPT,X'20'         EXITS REQUETED?\n         BNO   MAIN0030              NO\n         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_03),OPT_MSG_03\n         A     R8,SPF_VWIDTH         NEXT LINE\nMAIN0030 DS    0H\n         TM    SMF0OPT,X'10'         DATA SET ACCOUNTING?\n         BNO   MAIN0040              NO\n         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_04),OPT_MSG_04\n         A     R8,SPF_VWIDTH         NEXT LINE\nMAIN0040 DS    0H\n         TM    SMF0OPT,X'08'         VOLUME ACCOUNTING?\n         BNO   MAIN0050              NO\n         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_05),OPT_MSG_05\n         A     R8,SPF_VWIDTH         NEXT LINE\nMAIN0050 DS    0H\n         TM    SMF0OPT,X'02'         TEMPORARY DATA SET SCRATCH?\n         BNO   MAIN0060              NO\n         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_06),OPT_MSG_06\n         A     R8,SPF_VWIDTH         NEXT LINE\nMAIN0060 DS    0H\n         TM    SMF0OPT,X'01'         FOREGROUND?\n         BO    MAIN0070              YES\n         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_07),OPT_MSG_07\n         B     MAIN0080\nMAIN0070 DS    0H\n         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_08),OPT_MSG_08\nMAIN0080 DS    0H\n         A     R8,SPF_VWIDTH         NEXT LINE\n\n         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA\n         MVC   DXD_X(MSG_05_L),MSG_05\n         ICM   R1,15,SMF0RST         REAL STORAGE SIZE\n         CVD   R1,COMM_DWORD\n         ED    DXD_X+(MSG_05_RST-MSG_05)(L'MSG_05_RST),COMM_DWORD+4\n         EX    R3,MVC_01             COPY DATA\n         A     R8,SPF_VWIDTH\n         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA\n         MVC   DXD_X(MSG_06_L),MSG_06\n         MVC   DXD_X+(MSG_06_OSL-MSG_06)(L'MSG_06_OSL),SMF0OSL\n         EX    R3,MVC_01             COPY DATA\n         A     R8,SPF_VWIDTH\n         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA\n         MVC   DXD_X(MSG_07_L),MSG_07\n         MVC   DXD_X+(MSG_07_SYN-MSG_07)(L'MSG_07_SYN),SMF0SYN\n         EX    R3,MVC_01             COPY DATA\n         A     R8,SPF_VWIDTH\n         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA\n         MVC   DXD_X(MSG_08_L),MSG_08\n         MVC   DXD_X+(MSG_08_SYP-MSG_07)(L'MSG_08_SYP),SMF0SYP\n         EX    R3,MVC_01             COPY DATA\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R14,12(,R13)          RESTORE R14\n         LR    R15,R2                SET RC\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\nMVC_01   MVC   0(0,R8),DXD_X         COPY TO BUFFER\n* ------------------------------------------------------------------- *\n*        CONSTANTS                                                    *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(WK0000)\nHEXCHAR  EQU   *-C'0'\n         DC    C'0123456789ABCDEF'\n\nMSG_01         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL30'JOB wait time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_JWT     DC    X'4020202020202120'\n               DC    C' in minutes'\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL30'SMF buffer size'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_BUF     DC    X'4020202020202120'\n               DC    C' (bytes)'\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL30'Virtual storage size'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_VST     DC    X'4020202020202120'\n               DC    C' (1k blocks)'\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL30'Options'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_OPT     DC    CL2' '\n               DC    C' (hex)'\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL30'REAL STORAGE SIZE'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_RST     DC    X'4020202020202120'\n               DC    C' (1k blocks)'\nMSG_05_L       EQU   *-MSG_05\n\nMSG_06         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL30'Product name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_OSL     DC    CL8' '\nMSG_06_L       EQU   *-MSG_06\n\nMSG_07         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL30'System name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_SYN     DC    CL8' '\nMSG_07_L       EQU   *-MSG_07\n\nMSG_08         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL30'Sysplex name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_08_SYP     DC    CL8' '\nMSG_08_L       EQU   *-MSG_08\n\nOPT_MSG_01     DC    C'COLLECT SYSTEM AND JOB DATA'\nOPT_MSG_02     DC    C'COLLECT STEP DATA'\nOPT_MSG_03     DC    C'EXITS REQUESTED'\nOPT_MSG_04     DC    C'DATA SET ACCOUNTING'\nOPT_MSG_05     DC    C'VOLUME ACCOUNTING'\nOPT_MSG_06     DC    C'CREATE TEMPORARY DATA SET SCRATCH RECORDS'\nOPT_MSG_07     DC    C'BACKGROUND'\nOPT_MSG_08     DC    C'FOREGROUND'\n* ------------------------------------------------------------------- *\n*        WORK AREA                                                    *\n* ------------------------------------------------------------------- *\nWK0000         DSECT\n               COPY    DXDPREF\nDXD_X          DC      CL80' '\nDXD_Y          DC      CL80' '\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR  0\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0000\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0002": {"ttr": 774, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 2 or 3                               *\n*         SMF dump header and SMF dump trailer                        *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R10    OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0002  CSECT\nSMF0002  AMODE 31\nSMF0002  RMODE ANY\n         USING SMF0002,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0002'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         SR    R15,R15\n         BR    R14\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SMF0002\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0004": {"ttr": 776, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 4  (Job step termination)            *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0004  CSECT\nSMF0004  AMODE 31\nSMF0004  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0004,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0004'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12            DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         USING SMF0004,R10           DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)             SAVE R13\n         ST    R1,8(R13)             CHAIN SAVE AREA\n         LR    R13,R1                COPY WORK AREA ADDRESS\n         USING WK0004,R13            DEFINE BASE\n         USING OSSPFD,R9             DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0010 DS    0H\n         USING SMF4FLG,R7\n         A     R8,SPF_VWIDTH              LEAVE A BLANK LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8\n         MVC   MSG_01_JBN,SMF4JBN         COPY JOB NAME\n         MVC   MSG_01_UIF,SMF4UIF         COPY USER\n         MVC   MSG_01_STMN,SMF4STMN       COPY STEP NAME\n         SR    R1,R1\n         IC    R1,SMF4STN                 STEP NUMBER\n         CVD   R1,COMM_DWORD              CONVERT TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   MSG_01_STN,DXD_A+1         COPY STEP NUMBER\n         DROP  R8\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process reader start date/time                               *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8                   DEFINE BASE\n         MVC   DXD_DATE,SMF4RSD            COPY DATE\n         AP    DXD_DATE,P1900000           ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_02_RSD,DXD_A+1          COPY READER START DATE\n         ICM   R1,15,SMF4RST               READER START TIME\n         BAL   R15,TIME0000                CONVERT TIME\n         MVC   MSG_02_RST,DXD_B            COPY READER START TIME\n         DROP  R8\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process initiator start date/time                            *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8                   DEFINE BASE\n         MVC   DXD_DATE,SMF4STID           COPY DATE\n         AP    DXD_DATE,P1900000           ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_03_STID,DXD_A+1         COPY START DATE\n         ICM   R1,15,SMF4SIT               START TIME\n         BAL   R15,TIME0000                CONVERT TIME\n         MVC   MSG_03_SIT,DXD_B            COPY START TIME\n         DROP  R8\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process Step completion code                                 *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8                   DEFINE BASE\n         UNPK  DXD_A(5),SMF4SCC(3)        UNPACK COMPLETION CODE\n         TR    DXD_A(4),HEXCHAR           TRANSLATE\n         TM    SMF4STI,X'02'              ABEND?\n         BO    MAIN0020                   YES\n         MVC   MSG_04_CC(3),DXD_A+1       USER COMPLETION CODE\n         B     MAIN0040\nMAIN0020 DS    0H\n         TM    SMF4SCC,X'80'              SYSTEM ABEND?\n         BO    MAIN0030                   YES\n         MVC   MSG_04_CC(4),=C'USER'      INDICATE USER ABEND\n         MVC   MSG_04_CC+5(3),DXD_A+1     ABEND CODE\n         B     MAIN0040\nMAIN0030 DS    0H\n         MVC   MSG_04_CC(6),=C'SYSTEM'    INDICATE SYSTEM ABEND\n         MVC   MSG_04_CC+7(3),DXD_A+1     ABEND CODE\nMAIN0040 DS    0H\n         TM    SMF4STI,X'40'              CANCELLED BY IEFUJV?\n         BO    MAIN0050\n         TM    SMF4STI,X'20'              CANCELLED BY IEFUJI?\n         BO    MAIN0060\n         TM    SMF4STI,X'10'              CANCELLED BY IEFUSI?\n         BO    MAIN0070\n         TM    SMF4STI,X'08'              CANCELLED BY IEFACTRT?\n         BO    MAIN0080\n         B     MAIN0090\nMAIN0050 DS    0H\n         MVC   MSG_04_CANCEL,IEFUJV_CANCEL\n         B     MAIN0090\nMAIN0060 DS    0H\n         MVC   MSG_04_CANCEL,IEFUJI_CANCEL\n         B     MAIN0090\nMAIN0070 DS    0H\n         MVC   MSG_04_CANCEL,IEFUSI_CANCEL\n         B     MAIN0090\nMAIN0080 DS    0H\n         MVC   MSG_04_CANCEL,IEFACTRT_CANCEL\nMAIN0090 DS    0H\n         DROP  R8\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process priority and program name                            *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8                   DEFINE BASE\n         SR    R1,R1\n         IC    R1,SMF4PRTY                 PRIORITY\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   MSG_05_PRTY,DXD_A+1         COPY PRIORITY\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n         DROP  R8\n\n         MVC   0(MSG_06_L,R8),MSG_06\n         USING MSG_06,R8                   DEFINE BASE\n         MVC   MSG_06_PGMN,SMF4PGMN        COPY PROGRAM NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process CPU time                                             *\n*---------------------------------------------------------------------*\n         SR    R5,R5                       CLEAR REGISTER\n         ICM   R5,3,SMF4LENN               LENGTH OF DEVICE PORTION\n         LA    R5,SMF4DEVC(R5)             ADDRESS OF ACCOUNTING DATA\n         USING SMF4LNTH,R5\n         MVC   0(MSG_07_L,R8),MSG_07\n         USING MSG_07,R8                   DEFINE BASE\n         SR    R1,R1\n         ICM   R1,7,SMF4SETM               TCB TIME\n         BAL   R15,TIME0000                CONVERT TIME\n         MVC   MSG_07_SETM(8),DXD_B        COPY TCB TIME\n         LR    R1,R0                       COPY REMAINDER\n         SR    R0,R0                       CLEAR R0\n         D     R0,F100                     COMPUTE 100THS\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVI   MSG_07_SETM+8,C'.'          INSERT DECIMAL\n         MVC   MSG_07_SETM+9(2),DXD_A+2    COPY 100THS\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         MVC   0(MSG_08_L,R8),MSG_08\n         USING MSG_08,R8                   DEFINE BASE\n         SR    R1,R1\n         ICM   R1,7,SMF4SRBT               SRB TIME\n         BAL   R15,TIME0000                CONVERT TIME\n         MVC   MSG_08_SRBT(8),DXD_B        COPY SRB TIME\n         SR    R0,R0                       CLEAR R0\n         D     R0,F100                     COMPUTE 100THS\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVI   MSG_08_SRBT+8,C'.'          INSERT DECIMAL\n         MVC   MSG_08_SRBT+9(2),DXD_A+2    COPY 100THS\n         DROP  R5,R8\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process devices (as many as we can)                          *\n*---------------------------------------------------------------------*\n         TM    SMF4RIN,X'04'               DEVICE DATA RECORDED\n         BO    MAIN0130                    NO\n         SR    R4,R4\n         ICM   R4,3,SMF4LENN               LENGTH OF DEVICE DATA\n         BZ    MAIN0130                    NONE\n         SH    R4,H2                       MINUS 2\n         BZ    MAIN0130                    NONE\n         MVC   0(DEVICE_HEADING_L,R8),DEVICE_HEADING\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n         SLL   R4,3                        DIVIDE BY 8\n         LA    R5,SMF4DEVC                 FIRST DEVICE\n         USING SMF4DEVC,R5                 DEFINE BASE\nMAIN0100 DS    0H\n         MVC   0(MSG_09_L,R8),MSG_09\n         USING MSG_09,R8                   DEFINE BASE\n         UNPK  DXD_A(3),SMF4DEVC(2)        UNPACK CLASS\n         TR    DXD_A(2),HEXCHAR            TRANSLATE\n         MVC   MSG_09_DEVC,DXD_A           COPY DEVICE CLASS\n         UNPK  DXD_A(3),SMF4UTYP           UNPACK DEVICE TYPE\n         TR    DXD_A(2),HEXCHAR            TRANSLATE\n         MVC   MSG_09_UTYP,DXD_A           COPY DEVICE TYPE\n         TM    SMF4CUAD,X'80'              VIRTUAL DEVICE?\n         BNO   MAIN0110                    NO\n         MVC   MSG_09_VIRTUAL,VIRTUAL      INDICATE VIRTUAL DEVICE\nMAIN0110 DS    0H\n         NI    SMF4CUAD,X'7F'              FORCE HIGH BIT TO ZERO\n         UNPK  DXD_A(5),SMF4CUAD(3)        UNPACK DEVICE NUMBER\n         TR    DXD_A(4),HEXCHAR            TRANSLATE\n         MVC   MSG_09_CUAD,DXD_A           COPY DEVICE NBR\n         ICM   R1,15,SMF4EXCP              NUMBER OF EXCP'S\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         ED    MSG_09_EXCP,COMM_DWORD+3    EDIT EXCP'S\n         A     R8,SPF_VWIDTH               NEXT LINE\n         LA    R5,8(R5)                    NEXT DEVICE\n         BCT   R6,MAIN0120\n         B     EXIT0000                    SCREEN FULL\nMAIN0120 DS    0H\n         BCT   R4,MAIN0100                 NEXT DEVICE\n         B     MAIN0140\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0130 DS    0H\n         MVC   0(NO_DEVICE_L,R8),NO_DEVICE\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCT   R6,MAIN0140\n         DROP  R5,R8\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0140 DS    0H\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCT   R6,MAIN0150\nMAIN0150 DS    0H\n         SR    R5,R5                       CLEAR REGISTER\n         ICM   R5,3,SMF4RLCT               OFFSET TO RELOCATE SECTION\n         LA    R5,SMF4FLG(R5)              RELOCATION DATA\n         USING SMF4LNTH,R5                 DEFINE BASE\n         MVC   0(MSG_10_L,R8),MSG_10\n         USING MSG_10,R8\n         ICM   R1,15,SMF4PGIN              PAGE IN'S\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         ED    MSG_10_PGIN,COMM_DWORD+3    EDIT PAGE IN'S\n         ICM   R1,15,SMF4PSI               PAGES SWAPPED IN\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         ED    MSG_10_PSI,COMM_DWORD+3     EDIT PAGES SWAPPED IN\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCT   R6,MAIN0160\n         B     EXIT0000\n         DROP  R8\nMAIN0160 DS    0H\n         MVC   0(MSG_11_L,R8),MSG_11\n         USING MSG_11,R8\n         ICM   R1,15,SMF4PGOT              PAGE OUT'S\n         CVD   R1,COMM_DWORD\n         ED    MSG_11_PGOT,COMM_DWORD+3    EDIT PAGE OUT'S\n         ICM   R1,15,SMF4PSO               PAGES SWAPPED OUT\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         ED    MSG_11_PSO,COMM_DWORD+3     EDIT PAGES SWAPPED OUT\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCT   R6,MAIN0170\n         B     EXIT0000\n         DROP  R8\nMAIN0170 DS    0H\n         MVC   0(MSG_12_L,R8),MSG_12       INITIALIZE MESSAGE\n         USING MSG_12,R8\n         ICM   R1,15,SMF4NSW               ADDRESS SPACE SWAPS\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         ED    MSG_12_NSW,COMM_DWORD+3     EDIT SWAPS\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCT   R6,MAIN0180\n         B     EXIT0000\n         DROP  R8\nMAIN0180 DS    0H\n         MVC   0(MSG_13_L,R8),MSG_13       INITIALIZE MESSAGE\n         USING MSG_13,R8\n         ICM   R1,15,SMF4VPI               VIO PAGE-INS\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         ED    MSG_13_VPI,COMM_DWORD+3     EDIT VIO PAGE INS\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCT   R6,MAIN0190\n         B     EXIT0000\n         DROP  R8\nMAIN0190 DS    0H\n         MVC   0(MSG_14_L,R8),MSG_14       INITIALIZE MESSAGE\n         USING MSG_14,R8\n         ICM   R1,15,SMF4VPO               VIO PAGE-OUTS\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         ED    MSG_14_VPO,COMM_DWORD+3     EDIT VIO PAGE OUTS\n         DROP  R8\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nTIME0000 DS    0H\n         ITRACE ID=TIME,                                               +\n               RDATA1=R1\n         SR    R0,R0\n         D     R0,F100               CONVERT TO WHOLE SECONDS\n         SR    R0,R0                 CLEAR REMAINDER\n         D     R0,F3600              COMPUTE HOURS\n         CVD   R1,COMM_DWORD         CONVERT HOURS TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+0(2),DXD_A+2    COPY HOURS\n         MVI   DXD_B+2,C':'          INSERT COLON\n         LR    R1,R0                 COPY REMAINDER\n         SR    R0,R0                 CLEAR R0\n         D     R0,F60                COMPUTE MINUTES\n         CVD   R1,COMM_DWORD         CONVERT MINUTES TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+3(2),DXD_A+2    COPY MINUTES\n         MVI   DXD_B+5,C':'          INSERT COLON\n         CVD   R0,COMM_DWORD         CONVERT SECONDS TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+6(2),DXD_A+2    COPY SECONDS\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)            RESTORE R13\n         L     R14,12(,R13)          RESTORE R14\n         LR    R15,R2                SET RC\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0004)\nF60            DC    F'60'\nF100           DC    F'100'\nF3600          DC    F'3600'\nH2             DC    H'2'\n\nP1900000       DC    P'1900000'\n\nEDIT_WORD_1    DC    X'F0202120'\nEDIT_WORD_2    DC    X'F0202020204B202020'\n\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nIEFUJV_CANCEL   DC   CL21'CANCELLED BY IEFUJV'\nIEFUJI_CANCEL   DC   CL21'CANCELLED BY IEFUJI'\nIEFUSI_CANCEL   DC   CL21'CANCELLED BY IEFUSI'\nIEFACTRT_CANCEL DC   CL21'CANCELLED BY IEFACTRT'\nVIRTUAL         DC   CL7'VIRTUAL'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Job name:'\nMSG_01_JBN     DC    CL8' '\n               DC    C'  Step name:'\nMSG_01_STMN    DC    CL8' '\n               DC    C'  Step number:'\nMSG_01_STN     DC    CL3' '\n               DC    C'  User:'\nMSG_01_UIF     DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Reader date/time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_RSD     DC    CL8' '\n               DC    C' '\nMSG_02_RST     DC    CL8' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Start date/time '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_STID    DC    CL8' '\n               DC    C' '\nMSG_03_SIT     DC    CL8' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Completion      '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_CC      DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG_04_CANCEL  DC    CL21' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Priority        '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_PRTY    DC    CL3' '\nMSG_05_L       EQU   *-MSG_05\n\nMSG_06         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Program         '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_PGMN    DC    CL8' '\nMSG_06_L       EQU   *-MSG_06\n\nMSG_07         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'TCB time        '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_SETM    DC    CL11' '\nMSG_07_L       EQU   *-MSG_07\n\nMSG_08         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'SRB time        '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_08_SRBT    DC    CL11' '\nMSG_08_L       EQU   *-MSG_08\n\nDEVICE_HEADING DS    0C\n               DC    CL20' '\n               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)\n               DC    C'Device statistics'\nDEVICE_HEADING_L EQU *-DEVICE_HEADING\n\nNO_DEVICE      DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)\n               DC    C'No device statistics'\nNO_DEVICE_L    EQU   *-NO_DEVICE\n\nMSG_09         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Class'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_09_DEVC    DC    CL2' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Type'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_09_UTYP    DC    CL2' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  NBR '\nMSG_09_VIRTUAL DC    CL7' '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_09_CUAD    DC    CL4' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  EXCP''s'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_09_EXCP    DC    X'402020206B2020206B202120'\nMSG_09_L       EQU   *-MSG_09\n\nMSG_10         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL20'Page in''s'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_10_PGIN    DC    X'402020206B2020206B202120'\n               DC    C'  ('\nMSG_10_PSI     DC    X'402020206B2020206B202120'\n               DC    C'  pages)'\nMSG_10_L       EQU   *-MSG_10\n\nMSG_11         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL20'Page out''s'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_11_PGOT    DC    X'402020206B2020206B202120'\n               DC    C'  ('\nMSG_11_PSO     DC    X'402020206B2020206B202120'\n               DC    C'  pages)'\nMSG_11_L       EQU   *-MSG_11\n\nMSG_12         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL20'Address space swaps'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_12_NSW     DC    X'402020206B2020206B202120'\nMSG_12_L       EQU   *-MSG_12\n\nMSG_13         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL20'VIO page-in''s'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_13_VPI     DC    X'402020206B2020206B202120'\nMSG_13_L       EQU   *-MSG_13\n\nMSG_14         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    CL20'VIO page-out''s'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_14_VPO     DC    X'402020206B2020206B202120'\nMSG_14_L       EQU   *-MSG_14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0004         DSECT\n               COPY     DXDPREF\nDXD_A          DS       CL80\nDXD_B          DS       CL80\nDXD_DATE       DS       PL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR  4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0004\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0005": {"ttr": 1031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 5  (Job termination)                 *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0005  CSECT\nSMF0005  AMODE 31\nSMF0005  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0005,R15\n         USING OSSPFD,R9\n         B     INIT0000\nMODID    DC    CL8'SMF0005'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12            DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         USING SMF0005,R10           DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)             SAVE R13\n         ST    R1,8(R13)             CHAIN SAVE AREA\n         LR    R13,R1                COPY WORK AREA ADDRESS\n         USING WK0005,R13            DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0010 DS    0H\n         USING SMF5FLG,R7\n         A     R8,SPF_VWIDTH              LEAVE A BLANK LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8\n         MVC   MSG_01_JBN,SMF5JBN         COPY JOB NAME\n         SR    R1,R1                      CLEAR R1\n         IC    R1,SMF5NST                 NUMBER OF STEPS\n         CVD   R1,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_01_NST,COMM_DWORD+6    EDIT NUMBER OF STEPS\n         MVC   MSG_01_UIF,SMF5UIF         COPY USER\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         DROP  R8\n* ------------------------------------------------------------------- *\n*        Process reader start date/time                               *\n* ------------------------------------------------------------------- *\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8                  DEFINE BASE\n         MVC   DXD_DATE,SMF5RSD           COPY DATE\n         AP    DXD_DATE,P1900000          ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_02_RSD,DXD_A+1         COPY READER START DATE\n         ICM   R1,15,SMF5RST              READER START TIME\n         BAL   R15,TIME0000               CONVERT TIME\n         MVC   MSG_02_RST,DXD_B           COPY READER START TIME\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         DROP  R8\n* ------------------------------------------------------------------- *\n*        Process initiator start date/time                            *\n* ------------------------------------------------------------------- *\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8                  DEFINE BASE\n         MVC   DXD_DATE,SMF5JID           COPY DATE\n         AP    DXD_DATE,P1900000           ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_03_JID,DXD_A+1         COPY INITIATOR START DATE\n         ICM   R1,15,SMF5JIT              INITIATOR START TIME\n         BAL   R15,TIME0000               CONVERT TIME\n         MVC   MSG_03_JIT,DXD_B           COPY INITIATOR END TIME\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         DROP  R8\n* ------------------------------------------------------------------- *\n*        Process reader end date/time                                 *\n* ------------------------------------------------------------------- *\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8                  DEFINE BASE\n         MVC   DXD_DATE,SMF5RSTD          COPY DATE\n         AP    DXD_DATE,P1900000          ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_04_RSTD,DXD_A+1        COPY DATE\n         ICM   R1,15,SMF5RSTT             READER END TIME\n         BAL   R15,TIME0000               CONVERT TIME\n         MVC   MSG_04_RSTT,DXD_B          COPY READER END TIME\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         DROP  R8\n* ------------------------------------------------------------------- *\n*        Process Job completion code                                  *\n* ------------------------------------------------------------------- *\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8                  DEFINE BASE\n         UNPK  DXD_A(5),SMF5JCC(3)        UNPACK COMPLETION CODE\n         TR    DXD_A(4),HEXCHAR           TRANSLATE\n         TM    SMF5JBTI,X'02'             ABEND?\n         BO    MAIN0020                   YES\n         MVC   MSG_05_CC(3),DXD_A+1       USER COMPLETION CODE\n         B     MAIN0040\nMAIN0020 DS    0H\n         TM    SMF5JCC,X'80'              SYSTEM ABEND?\n         BO    MAIN0030                   YES\n         MVC   MSG_05_CC(4),=C'USER'      INDICATE USER ABEND\n         MVC   MSG_05_CC+5(3),DXD_A+1     ABEND CODE\n         B     MAIN0040\nMAIN0030 DS    0H\n         MVC   MSG_05_CC(6),=C'SYSTEM'    INDICATE SYSTEM ABEND\n         MVC   MSG_05_CC+7(3),DXD_A+1     ABEND CODE\nMAIN0040 DS    0H\n         TM    SMF5JBTI,X'40'             CANCELLED BY IEFUJV?\n         BO    MAIN0050\n         TM    SMF5JBTI,X'20'             CANCELLED BY IEFUJI?\n         BO    MAIN0060\n         TM    SMF5JBTI,X'10'             CANCELLED BY IEFUSI?\n         BO    MAIN0070\n         TM    SMF5JBTI,X'08'             CANCELLED BY IEFACTRT?\n         BO    MAIN0080\n         B     MAIN0090\nMAIN0050 DS    0H\n         MVC   MSG_05_CANCEL,IEFUJV_CANCEL\n         B     MAIN0090\nMAIN0060 DS    0H\n         MVC   MSG_05_CANCEL,IEFUJI_CANCEL\n         B     MAIN0090\nMAIN0070 DS    0H\n         MVC   MSG_05_CANCEL,IEFUSI_CANCEL\n         B     MAIN0090\nMAIN0080 DS    0H\n         MVC   MSG_05_CANCEL,IEFACTRT_CANCEL\nMAIN0090 DS    0H\n         DROP  R8\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n* ------------------------------------------------------------------- *\n*        Process priority, programmer, and class                      *\n* ------------------------------------------------------------------- *\n         MVC   0(MSG_06_L,R8),MSG_06\n         USING MSG_06,R8                   DEFINE BASE\n         SR    R1,R1\n         IC    R1,SMF5JPTY                 PRIORITY\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   MSG_06_PRTY,DXD_A+1         COPY PRIORITY\n         DROP  R8\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_07_L,R8),MSG_07\n         USING MSG_07,R8                   DEFINE BASE\n         MVC   MSG_07_PRGN,SMF5PRGN        COPY PROGRAMMER NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_08_L,R8),MSG_08\n         USING MSG_08,R8                   DEFINE BASE\n         MVC   MSG_08_JCLASS,SMF5JICL      COPY JOB CLASS\n         DROP  R8\n         A     R8,SPF_VWIDTH               NEXT LINE\n         BCTR  R6,0\n* ------------------------------------------------------------------- *\n*        Process TCB and SRB CPU time                                 *\n* ------------------------------------------------------------------- *\n         MVC   0(MSG_09_L,R8),MSG_09\n         USING MSG_09,R8                   DEFINE BASE\n         SR    R1,R1\n         ICM   R1,7,SMF5JCPU               TCB CPU TIME\n         BAL   R15,TIME0000\n         MVC   MSG_09_JCPU(8),DXD_B        COPY TCB TIME\n         LR    R1,R0                       COPY REMAINDER\n         SR    R0,R0                       CLEAR R0\n         D     R0,F100                     COMPUTE 100THS\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVI   MSG_09_JCPU+8,C'.'          INSERT DECIMAL\n         MVC   MSG_09_JCPU+9(2),DXD_A+2    COPY 100THS\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         MVC   0(MSG_10_L,R8),MSG_10\n         USING MSG_10,R8                   DEFINE BASE\n         SR    R1,R1\n         ICM   R1,7,SMF5SRBT               SRB CPU TIME\n         BAL   R15,TIME0000\n         MVC   MSG_10_SRBT(8),DXD_B        COPY SRB TIME\n         LR    R1,R0                       COPY REMAINDER\n         SR    R0,R0                       CLEAR R0\n         D     R0,F100                     COMPUTE 100THS\n         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVI   MSG_10_SRBT+8,C'.'          INSERT DECIMAL\n         MVC   MSG_10_SRBT+9(2),DXD_A+2    COPY 100THS\n         DROP  R8\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nTIME0000 DS    0H\n         SR    R0,R0\n         D     R0,F100               CONVERT TO WHOLE SECONDS\n         SR    R0,R0                 CLEAR REMAINDER\n         D     R0,F3600              COMPUTE HOURS\n         CVD   R1,COMM_DWORD         CONVERT HOURS TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+0(2),DXD_A+2    COPY HOURS\n         MVI   DXD_B+2,C':'          INSERT COLON\n         LR    R1,R0                 COPY REMAINDER\n         SR    R0,R0                 CLEAR R0\n         D     R0,F60                COMPUTE MINUTES\n         CVD   R1,COMM_DWORD         CONVERT MINUTES TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+3(2),DXD_A+2    COPY MINUTES\n         MVI   DXD_B+5,C':'          INSERT COLON\n         CVD   R0,COMM_DWORD         CONVERT SECONDS TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+6(2),DXD_A+2    COPY SECONDS\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)          RESTORE R14\n         LR    R15,R2                SET RC\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0005)\nF60            DC    F'60'\nF100           DC    F'100'\nF3600          DC    F'3600'\n\nP1900000       DC    P'1900000'\n\nEDIT_WORD_1    DC    X'F0202020'\nEDIT_WORD_2    DC    X'F0202020204B202020'\n\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nIEFUJV_CANCEL   DC   CL21'CANCELLED BY IEFUJV'\nIEFUJI_CANCEL   DC   CL21'CANCELLED BY IEFUJI'\nIEFUSI_CANCEL   DC   CL21'CANCELLED BY IEFUSI'\nIEFACTRT_CANCEL DC   CL21'CANCELLED BY IEFACTRT'\nVIRTUAL         DC   CL7'VIRTUAL'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Job name:'\nMSG_01_JBN     DC    CL8' '\n               DC    C'  NUMBER OF STEPS:'\nMSG_01_NST     DC    X'40202120'\n               DC    C'  User:'\nMSG_01_UIF     DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Reader start date/time   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_RSD     DC    CL8' '\n               DC    C' '\nMSG_02_RST     DC    CL8' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Initiator start date/time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_JID     DC    CL8' '\n               DC    C' '\nMSG_03_JIT     DC    CL8' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Reader end date/time     '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_RSTD    DC    CL8' '\n               DC    C' '\nMSG_04_RSTT    DC    CL8' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Completion               '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_CC      DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG_05_CANCEL  DC    CL21' '\nMSG_05_L       EQU   *-MSG_05\n\nMSG_06         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Priority                 '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_PRTY    DC    CL3' '\nMSG_06_L       EQU   *-MSG_06\n\nMSG_07         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Programmer:              '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_PRGN    DC    CL20' '\nMSG_07_L       EQU   *-MSG_07\n\nMSG_08         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Job Class                '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_08_JCLASS  DC    C' '\nMSG_08_L       EQU   *-MSG_08\n\n\nMSG_09         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'TCB time                 '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_09_JCPU    DC    CL11' '\nMSG_09_L       EQU   *-MSG_09\n\nMSG_10         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'SRB time                 '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_10_SRBT    DC    CL11' '\nMSG_10_L       EQU   *-MSG_10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0005         DSECT\n               COPY    DXDPREF\nDXD_A          DS      CL80\nDXD_B          DS      CL80\nDXD_DATE       DS      PL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD    DSECT\n              IFASMFR  5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY    TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY    REGEQU\n              END     SMF0005\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0006": {"ttr": 1284, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 6                                    *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0006  CSECT\nSMF0006  AMODE 31\nSMF0006  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0006,R15\n         USING OSSPFD,R9\n         B     INIT0000\nMODID    DC    CL8'SMF0006'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12            DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF0006,R10           DEFINE BASE\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)             SAVE R13\n         ST    R1,8(R13)             CHAIN SAVE AREA\n         LR    R13,R1                COPY WORK AREA ADDRESS\n         USING WK0006,R13            DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0010 DS    0H\n         USING SMF6FLG,R7\n         A     R8,SPF_VWIDTH              LEAVE A BLANK LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8\n         MVC   MSG_01_JBN,SMF6JBN         COPY JOB NAME\n         MVC   MSG_01_JBID,SMF6JNM        COPY JOB NUMBER\n         MVC   MSG_01_UIF,SMF6UIF         COPY USER\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         DROP  R8\n* ------------------------------------------------------------------- *\n*        Process reader start date/time                               *\n* ------------------------------------------------------------------- *\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8                  DEFINE BASE\n         MVC   DXD_DATE,SMF6RSD           COPY DATE\n         AP    DXD_DATE,P1900000           ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_02_RSD,DXD_A+1         COPY READER START DATE\n         ICM   R1,15,SMF6RST              READER START TIME\n         BAL   R15,TIME0000               CONVERT TIME\n         MVC   MSG_02_RST,DXD_B           COPY READER START TIME\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         DROP  R8\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8                  DEFINE BASE\n         ICM   R1,15,SMF6NLR              NUMBER OF LOGICAL RECORDS\n         CVD   R1,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_03_NLR,COMM_DWORD+3    EDIT NUMBER OF RECORDS\n         SR    R1,R1                      CLEAR REGISTER\n         IC    R1,SMF6NDS                 NUMBER OF DATA SETS\n         CVD   R1,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_03_NDS,COMM_DWORD+6    EDIT NUMBER OF DATA SETS\n         LA    R1,MSG_03_STATUS\n         TM    SMF6IOE,X'04'              DATA BUFFER READ ERROR?\n         BNO   MAIN0030                   NO\n         MVC   0(L'STATUS_1,R1),STATUS_1  COPY IN STATUS MSG\n         LA    R1,L'STATUS_1+1(R1)        UPDATE OUTPUT ADDRESS\nMAIN0030 DS    0H\n         TM    SMF6IOE,X'01'              CONTROL BUFFER READ ERROR?\n         BNO   MAIN0040                   NO\n         MVC   0(L'STATUS_2,R1),STATUS_2  COPY STATUS MSG\nMAIN0040 DS    0H\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         DROP  R8\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8                  DEFINE BASE\n         MVC   MSG_04_DEVICE,SMF6OUT      OUTPUT DEVICE NAME\n         MVC   MSG_04_GROUP,SMF6GRP       OUTPUT DEVICE GROUP\n         MVC   MSG_04_FCB,SMF6FCB         FCB NAME\n         MVC   MSG_04_UCS,SMF6UCS         UCS IMAGE NAME\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         DROP  R8\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8                  DEFINE BASE\n         ICM   R1,15,SMF6PGE              NUMBER OF PAGES\n         CVD   R1,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_05_PAGES,COMM_DWORD+3  EDIT NUMBER OF PAGES\n         SR    R1,R1                      CLEAR REGISTER\n         ICM   R1,3,SMF6OPR               PRIORITY\n         CVD   R1,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_05_PRIORITY,COMM_DWORD+5\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         DROP  R8\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         TM    SMF6PAD1,X'40'             COMMON SECTION?\n         BO\n*---------------------------------------------------------------------*\n*        Process 3800 printing subsystem section                      *\n*---------------------------------------------------------------------*\n         LA    R1,SMF6\n         MVC   0(MSG_06_L,R8),MSG_06\n         USING MSG_06,R8                  DEFINE BASE\n         LA    R1,MSG_06_COPIES\n         LA    R2,SMF\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nTIME0000 DS    0H\n         SR    R0,R0\n         D     R0,F100               CONVERT TO WHOLE SECONDS\n         SR    R0,R0                 CLEAR REMAINDER\n         D     R0,F3600              COMPUTE HOURS\n         CVD   R1,COMM_DWORD         CONVERT HOURS TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+0(2),DXD_A+2    COPY HOURS\n         MVI   DXD_B+2,C':'          INSERT COLON\n         LR    R1,R0                 COPY REMAINDER\n         SR    R0,R0                 CLEAR R0\n         D     R0,F60                COMPUTE MINUTES\n         CVD   R1,COMM_DWORD         CONVERT MINUTES TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+3(2),DXD_A+2    COPY MINUTES\n         MVI   DXD_B+5,C':'          INSERT COLON\n         CVD   R0,COMM_DWORD         CONVERT SECONDS TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+6(2),DXD_A+2    COPY SECONDS\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)          RESTORE R14\n         LR    R15,R2                SET RC\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0006)\nF60            DC    F'60'\nF100           DC    F'100'\nF3600          DC    F'3600'\n\nP1900000       DC    P'1900000'\n\nEDIT_WORD_1    DC    X'F0202020'\nEDIT_WORD_2    DC    X'F0202020204B202020'\n\nSTATUS_1       DC    C'Data read error'\nSTATUS_2       DC    C'Control read error'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Job name:'\nMSG_01_JBN     DC    CL8' '\n               DC    C'  Job number:'\nMSG_01_JBID    DC    CL8' '\n               DC    C'  User:'\nMSG_01_UIF     DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Reader start date/time   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_RSD     DC    CL8' '\n               DC    C' '\nMSG_02_RST     DC    CL8' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Records'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_NLR     DC    X'402020206B2020206B202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Datasets'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_NDS     DC    X'40202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'I/O status'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_STATUS  DC    CL30' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Device'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_DEVICE  DC    CL8' '\n               DC    C' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Device group'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_GROUP   DC    CL8' '\n               DC    C' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'FCB'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_FCB     DC    CL4' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'UCS'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_UCS     DC    CL4' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Pages'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_PAGES   DC    X'402020206B4040406B202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Priority'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_PRIORITY DC   X'40202120'\nMSG_05_L       EQU   *-MSG_05\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0006         DSECT\n               COPY     DXDPREF\nDXD_A          DS       CL80\nDXD_B          DS       CL80\nDXD_DATE       DS       PL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD    DSECT\n              IFASMFR   6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY      ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY      REGEQU\n              END       SMF0006\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0007": {"ttr": 1292, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 7  (Data lost)                       *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0007  CSECT\nSMF0007  AMODE 31\nSMF0007  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0007,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0007'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING SMF0007,R10                    DEFINE BASE\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0007,R13                     DEFINE BASE\n         USING OSSPFD,R9                      DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0010 DS    0H\n         USING SMF7FLG,R7\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n\n*---------------------------------------------------------------------*\n*        Process SMF date and time                                    *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8                      DEFINE BASE\n         MVC   DXD_DATE,SMF7DTE\n         AP    DXD_DATE,P1900000              ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_01_DTE,DXD_A+1             COPY DATE\n         ICM   R1,15,SMF7TME                  TIME\n         BAL   R15,TIME0000                   CONVERT TIME\n         MVC   MSG_01_TME,DXD_B               COPY TIME\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process loss start date, time, number of records             *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8                      DEFINE BASE\n         MVC   DXD_DATE,SMF7STD               COPY DATE\n         AP    DXD_DATE,P1900000              ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_02_STD,DXD_A+1             COPY LOSS START DATE\n         ICM   R1,15,SMF7STM                  START TIME\n         BAL   R15,TIME0000                   CONVERT TIME\n         MVC   MSG_02_STM,DXD_B               COPY LOSS START TIME\n         ICM   R1,15,SMF7NRO                  NUMBEF OF RECORDS LOST\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_02_RECORDS,COMM_DWORD+3    EDIT NUMBER OF RECORDS\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nTIME0000 DS    0H\n         SR    R0,R0\n         D     R0,F100                        WHOLE SECONDS\n         SR    R0,R0                          CLEAR REMAINDER\n         D     R0,F3600                       COMPUTE HOURS\n         CVD   R1,COMM_DWORD                  CONVERT HOURS\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+0(2),DXD_A+2             COPY HOURS\n         MVI   DXD_B+2,C':'                   INSERT COLON\n         LR    R1,R0                          COPY REMAINDER\n         SR    R0,R0                          CLEAR R0\n         D     R0,F60                         COMPUTE MINUTES\n         CVD   R1,COMM_DWORD                  CONVERT MINUTES\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+3(2),DXD_A+2             COPY MINUTES\n         MVI   DXD_B+5,C':'                   INSERT COLON\n         CVD   R0,COMM_DWORD                  CONVERT SECONDS\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+6(2),DXD_A+2             COPY SECONDS\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         LR    R15,R2                         SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0007)\nF60            DC    F'60'\nF100           DC    F'100'\nF3600          DC    F'3600'\n\nP1900000       DC    P'1900000'\n\nEDIT_WORD_1    DC    X'F0202020'\nEDIT_WORD_2    DC    X'F0202020204B202020'\n\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  SMF date/time '\nMSG_01_DTE     DC    CL8' '\n               DC    C'  '\nMSG_01_TME     DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Loss start date/time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_STD     DC    CL8' '\n               DC    C'  '\nMSG_02_STM     DC    CL8' '\n               DC    C'Records lost:'\nMSG_02_RECORDS DC    X'402020206B2020206B202120'\nMSG_02_L       EQU   *-MSG_02\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0007         DSECT\n               COPY     DXDPREF\nDXD_A          DS       CL80\nDXD_B          DS       CL80\nDXD_DATE       DS       PL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR   7\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      REGEQU\n               END       SMF0007\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0014": {"ttr": 1537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 14 (Data set activity)               *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0014  CSECT\nSMF0014  AMODE 31\nSMF0014  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0014,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0014'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         USING SMF0014,R10                    DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0014,R13                     DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9                      DEFINE BASE\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0010 DS    0H\n         USING SMF14FLG,R7\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8                      DEFINE BASE\n         MVC   DXD_DATE,SMF14RSD              COPY DATE\n         AP    DXD_DATE,P1900000              ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_01_RSD,DXD_A+1             COPY READER START DATE\n         ICM   R1,15,SMF14RST                 READER START TIME\n         BAL   R15,TIME0000                   CONVERT TIME\n         MVC   MSG_01_RST,DXD_B               COPY READER START TIME\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8\n         MVC   MSG_02_JBN,SMF14JBN            COPY JOB NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n\n         SR    R0,R0\n         SR    R14,R14\n         SR    R15,R15\n         IC    R0,SMF14NUC                    NUMBER OF UCB SECTIONS\n         IC    R15,SMF14SUC                   SIZE OF EACH UCB\n         MR    R14,R0                         COMPUTE SIZE OF UCB DATA\n         LA    R1,SMF14UCB(R15)               EXTENDED DATA\n         USING SMF14XIS,R1                    DEFINE BASE\n         SR    R0,R0\n         ICM   R0,3,SMF14SXS                  LENGTH OF ALL DATA\n         SH    R0,H2                          MINUS LENGTH OF LENGTH\n         LA    R1,SMF14XIC                    1ST SECTION\n         USING SMF14XIC,R1\nMAIN0020 DS    0H\n         CLI   SMF14STY,SMF14STP              STEP INFO?\n         BE    MAIN0030                       YES\n         SH    R0,SMF14ESL                    MINUS LENGTH OF THIS DATA\n         BNH   MAIN0040                       NO MORE DATA\n         AH    R1,SMF14ESL                    NEXT SECTION\n         B     MAIN0020\nMAIN0030 DS    0H\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8\n         MVC   MSG_03_STEP,SMF14SPN           COPY STEP NAME\n         DROP  R8\n\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8\n         MVC   MSG_04_PROGRAM,SMF14PGN        COPY PROGRAM NAME\n         DROP  R8\n\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         DROP  R1\nMAIN0040 DS    0H\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8\n         MVC   MSG_05_UID,SMF14UID            COPY USER\n         DROP  R8\n\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n\n         USING INFMJFCB,SMFJFCB1              DEFINE BASE\n         MVC   0(MSG_06_L,R8),MSG_06\n         USING MSG_06,R8                      DEFINE BASE\n         MVC   MSG_06_DD,SMFTIOE5             COPY DD NAME\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_07_L,R8),MSG_07\n         USING MSG_07,R8                      DEFINE BASE\n         MVC   MSG_07_DSN,JFCBDSNM            COPY DATA SET NAME\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         TM    JFCBIND1,JFCPDS                PDS MEMBER?\n         BNO   MAIN0050                       NO\n         MVC   0(MSG_08_L,R8),MSG_08\n         USING MSG_08,R8                      DEFINE BASE\n         MVC   MSG_08_MEMBER,JFCBELNM         COPY MEMBER NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\nMAIN0050 DS    0H\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process indicators                                           *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_09_L,R8),MSG_09\n         USING MSG_09,R8                      DEFINE BASE\n         LA    R1,MSG_09_RIN\n         TM    SMF14RIN,SMF14TDS              TEMP DATA SET?\n         BNO   MAIN0060                       NO\n         MVC   0(L'TEMP,R1),TEMP              COPY 'TEMP'\n         LA    R1,L'TEMP+1(R1)                UPDATE ADDRESS\nMAIN0060 DS    0H\n         TM    SMF14RIN,SMF14EOV              WRITTEN BY EOV?\n         BNO   MAIN0070                       NO\n         MVC   0(L'EOV,R1),EOV                COPY 'EOV'\n         LA    R1,L'EOV+1(R1)                 UPDATE ADDRESS\nMAIN0070 DS    0H\n         TM    SMF14RIN,SMF14VIO              VIO?\n         BNO   MAIN0080                       NO\n         MVC   0(L'VIO,R1),VIO                COPY 'VIO'\n         LA    R1,L'VIO+1(R1)                 UPDATE ADDRESS\nMAIN0080 DS    0H\n         TM    SMF14RIN+1,SMF14IPD            PDSE MANAGED?\n         BNO   MAIN0090                       NO\n         MVC   0(L'PDSE,R1),PDSE              COPY 'PDSE'\n         LA    R1,L'PDSE+1(R1)                UPDATE ADDRES\nMAIN0090 DS    0H\n         TM    SMF14RIN+1,SMF14TRC            TRUNC ISSUED?\n         BNO   MAIN0100                       NO\n         MVC   0(L'TRUNC,R1),TRUNC            COPY 'TRUNC'\nMAIN0100 DS    0H\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process devices                                              *\n*---------------------------------------------------------------------*\n         SR    R4,R4\n         IC    R4,SMF14NUC                    NUMBER OF DEVICES\n         SR    R5,R5\n         IC    R5,SMFTIOE1                    LENGTH OF DD ENTRY\n         LA    R5,SMFTDDEX(R5)\n         SH    R5,H4                          MINUS 4\n         USING SMFUCBDV,R5\n         SR    R2,R2\n         IC    R2,SMF14SUC                    LENGTH OF EACH UCB ENTRY\nMAIN0110 DS    0H\n         MVC   0(MSG_10_L,R8),MSG_10\n         USING MSG_10,R8                      DEFINE BASE\n         UNPK  DXD_A(5),SMFUCBDV(3)           UNPACK DEVICE\n         TR    DXD_A(4),HEXCHAR               TRANSLATE\n         MVC   MSG_10_UCBDV,DXD_A             COPY DEVICE\n         MVC   MSG_10_SRTEV,SMFSRTEV          COPY VOLSER\n         L     R1,SMFEXCP                     NUMBER OF EXCP'S\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_10_EXCP,COMM_DWORD+3       EDIT EXCP'S\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         AR    R5,R2                          NEXT DEVICE\n         BCT   R6,MAIN0120\n         B     EXIT0000                       SCREEN FULL\nMAIN0120 DS    0H\n         BCT   R4,MAIN0110                    LOOP\n         DROP  R8\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nTIME0000 DS    0H\n         ITRACE ID=TIME,                                               +\n               RDATA1=R1\n         SR    R0,R0\n         D     R0,F100                        WHOLE SECONDS\n         SR    R0,R0                          CLEAR REMAINDER\n         D     R0,F3600                       COMPUTE HOURS\n         CVD   R1,COMM_DWORD                  CONVERT HOURS\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+0(2),DXD_A+2             COPY HOURS\n         MVI   DXD_B+2,C':'                   INSERT COLON\n         LR    R1,R0                          COPY REMAINDER\n         SR    R0,R0                          CLEAR R0\n         D     R0,F60                         COMPUTE MINUTES\n         CVD   R1,COMM_DWORD                  CONVERT MINUTES\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+3(2),DXD_A+2             COPY MINUTES\n         MVI   DXD_B+5,C':'                   INSERT COLON\n         CVD   R0,COMM_DWORD                  CONVERT SECONDS\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+6(2),DXD_A+2             COPY SECONDS\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         LR    R15,R2                         SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0014)\nF60            DC    F'60'\nF100           DC    F'100'\nF3600          DC    F'3600'\nH2             DC    H'2'\nH4             DC    H'4'\n\nP1900000       DC    P'1900000'\n\nEDIT_WORD_1    DC    X'F0202120'\nEDIT_WORD_2    DC    X'F0202020204B202020'\n\nEOV            DC    C'EOV '\nTEMP           DC    C'TEMP'\nVIO            DC    C'VIO '\nPDSE           DC    C'PDSE'\nTRUNC          DC    C'TRUNC'\nMEMBER         DC    C'MEMBER:'\n\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Reader start date/time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_RSD     DC    CL8' '\n               DC    C' '\nMSG_01_RST     DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Job name:    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_JBN     DC    CL8' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Step name:   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_STEP    DC    CL8' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Program name:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_PROGRAM DC    CL8' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'User:        '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_UID     DC    CL8' '\nMSG_05_L       EQU   *-MSG_05\n\nMSG_06         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'DD:        '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_DD      DC    CL8' '\nMSG_06_L       EQU   *-MSG_06\n\nMSG_07         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'DSN:       '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_DSN     DC    CL44' '\nMSG_07_L       EQU   *-MSG_07\n\nMSG_08         ds    0c\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Member:    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_08_MEMBER  DC    CL8' '\nMSG_08_L       EQU   *-MSG_08\n\nMSG_09         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Indicators:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_09_RIN     DC    CL60'None'\nMSG_09_L       EQU   *-MSG_09\n\nMSG_10         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Device nbr:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_10_UCBDV   DC    CL4' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'VOLSER'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_10_SRTEV   DC    CL6' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'I/O''s'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_10_EXCP    DC    x'402020206b2020206b202120'\nMSG_10_L       EQU   *-MSG_10\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0014         DSECT\n               COPY     DXDPREF\nDXD_A          DS       CL80\nDXD_B          DS       CL80\nDXD_DATE       DS       PL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD    DSECT\n              IFASMFR   14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMMY         DSECT\n              IBMMAC    JFCB=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY      ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY      REGEQU\n              END       SMF0014\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0017": {"ttr": 1547, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 14 (Data set activity)               *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0017  CSECT\nSMF0017  AMODE 31\nSMF0017  RMODE ANY\n         USING OSCOMM,R12\n         USING SMF0017,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0017'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         USING SESSION,R11                    DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         USING SMF0017,R10                    DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0017,R13                     DEFINE BASE\n         USING OSSPFD,R9                      DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0010 DS    0H\n         USING SMF17FLG,R7\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8\n         MVC   MSG_01_JBN,SMF17JBN            COPY JOB NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8\n         MVC   MSG_02_UID,SMF17UID            COPY USER\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n* ------------------------------------------------------------------- *\n*        Process reader start date/time                               *\n* ------------------------------------------------------------------- *\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8                      DEFINE BASE\n         MVC   DXD_DATE,SMF17RSD\n         AP    DXD_DATE,P1900000              ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_03_RSD,DXD_A+1             COPY READER START DATE\n         ICM   R1,15,SMF17RST                 READER START TIME\n         BAL   R15,TIME0000                   CONVERT TIME\n         MVC   MSG_03_RST,DXD_B               COPY READER START TIME\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        PROCESS data set name                                        *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8                      DEFINE BASE\n         MVC   MSG_04_DSN,SMF17DSN\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        PROCESS VOLSER(S)                                            *\n*---------------------------------------------------------------------*\n         SR    R2,R2\n         ICM   R2,1,SMF17NVL                  NUMBER OF VOLUMES\n         BZ    EXIT0000\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8                      DEFINE BASE\n         LA    R3,SMF17RV2                    1ST VOLSER\nMAIN0020 DS    0H\n         MVC   MSG_05_VOLSER,2(R3)            COPY VOLSER\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCT   R6,MAIN0030\n         B     EXIT0000\nMAIN0030 DS    0H\n         MVC   0(80,R8),COMM_BLANKS           FORCE NEXT LINE TO BLANKS\n         LA    R3,8(R3)                       NEXT VOLUME\n         BCT   R2,MAIN0020                    LOOP\n         DROP  R8\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nTIME0000 DS    0H\n         SR    R0,R0\n         D     R0,F100                        CONVERT TO WHOLE SECONDS\n         SR    R0,R0                          CLEAR REMAINDER\n         D     R0,F3600                       COMPUTE HOURS\n         CVD   R1,COMM_DWORD                  CONVERT HOURS TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+0(2),DXD_A+2             COPY HOURS\n         MVI   DXD_B+2,C':'                   INSERT COLON\n         LR    R1,R0                          COPY REMAINDER\n         SR    R0,R0                          CLEAR R0\n         D     R0,F60                         COMPUTE MINUTES\n         CVD   R1,COMM_DWORD                  CONVERT MINUTES\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+3(2),DXD_A+2             COPY MINUTES\n         MVI   DXD_B+5,C':'                   INSERT COLON\n         CVD   R0,COMM_DWORD                  CONVERT SECONDS\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+6(2),DXD_A+2             COPY SECONDS\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         LR    R15,R2                         SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0017)\nF60            DC    F'60'\nF100           DC    F'100'\nF3600          DC    F'3600'\nH4             DC    H'4'\n\nP1900000       DC    P'1900000'\n\nEDIT_WORD_1    DC    X'F0202020'\nEDIT_WORD_2    DC    X'F0202020204B202020'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Job name:                '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_JBN     DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'User:                    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_UID     DC    CL8' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Reader start date/time   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_RSD     DC    CL8' '\n               DC    C' '\nMSG_03_RST     DC    CL8' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Data set name:           '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_DSN     DC    CL44' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Volser(s):               '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_VOLSER  DC    CL6' '\nMSG_05_L       EQU   *-MSG_05\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0017         DSECT\n               COPY     DXDPREF\nDXD_A          DS       CL80\nDXD_B          DS       CL80\nDXD_DATE       DS       PL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR  17\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0017\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0018": {"ttr": 1796, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 14 (Data set activity)               *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0018  CSECT\nSMF0018  AMODE 31\nSMF0018  RMODE ANY\n         USING OSCOMM,R12\n         USING SMF0018,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0018'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12            DEFINE COMMON AREA BASE\n         USING SESSION,R11           DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         USING SMF0018,R10           DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)             SAVE R13\n         ST    R1,8(R13)             CHAIN SAVE AREA\n         LR    R13,R1                COPY WORK AREA ADDRESS\n         USING WK0018,R13            DEFINE BASE\n         USING OSSPFD,R9             DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0010 DS    0H\n         USING SMF18FLG,R7\n         A     R8,SPF_VWIDTH              LEAVE A BLANK LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8\n         MVC   MSG_01_JBN,SMF18JBN        COPY JOB NAME\n         MVC   MSG_01_UID,SMF18UID        COPY USER\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         DROP  R8\n* ------------------------------------------------------------------- *\n*        Process reader start date/time                               *\n* ------------------------------------------------------------------- *\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8                  DEFINE BASE\n         MVC   DXD_DATE,SMF18RSD\n         AP    DXD_DATE,P1900000          ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_02_RSD,DXD_A+1         COPY READER START DATE\n         ICM   R1,15,SMF18RST             READER START TIME\n         BAL   R15,TIME0000               CONVERT TIME\n         MVC   MSG_02_RST,DXD_B           COPY READER START TIME\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         DROP  R8\n*---------------------------------------------------------------------*\n*        Process JOB name and USER                                    *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8                  DEFINE BASE\n         MVC   MSG_03_JOB,SMF18JBN        COPY DATA SET NAME\n         MVC   MSG_03_USER,SMF18UID       COPY DATA SET NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process old data set name                                    *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8                  DEFINE BASE\n         MVC   MSG_04_DSN,SMF18ODS\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process new data set name                                    *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8                  DEFINE BASE\n         MVC   MSG_05_DSN,SMF18NDS\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process VOLSER(S)                                            *\n*---------------------------------------------------------------------*\n         SR    R2,R2\n         ICM   R2,1,SMF18NVL              NUMBER OF VOLUMES\n         BZ    EXIT0000\n         MVC   0(MSG_06_L,R8),MSG_06\n         USING MSG_04,R8                  DEFINE BASE\n         LA    R3,SMF18RV2                1ST VOLSER\nMAIN0020 DS    0H\n         MVC   MSG_06_VOLSER,2(R3)        COPY VOLSER\n         A     R8,SPF_VWIDTH              NEXT LINE\n         BCT   R6,MAIN0030\n         B     EXIT0000\nMAIN0030 DS    0H\n         MVC   0(80,R8),COMM_BLANKS       FORCE NEXT LINE TO BLANKS\n         LA    R3,8(R3)                   NEXT VOLUME\n         BCT   R2,MAIN0020                LOOP\n         DROP  R8\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nTIME0000 DS    0H\n         SR    R0,R0\n         D     R0,F100               CONVERT TO WHOLE SECONDS\n         SR    R0,R0                 CLEAR REMAINDER\n         D     R0,F3600              COMPUTE HOURS\n         CVD   R1,COMM_DWORD         CONVERT HOURS TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+0(2),DXD_A+2    COPY HOURS\n         MVI   DXD_B+2,C':'          INSERT COLON\n         LR    R1,R0                 COPY REMAINDER\n         SR    R0,R0                 CLEAR R0\n         D     R0,F60                COMPUTE MINUTES\n         CVD   R1,COMM_DWORD         CONVERT MINUTES TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+3(2),DXD_A+2    COPY MINUTES\n         MVI   DXD_B+5,C':'          INSERT COLON\n         CVD   R0,COMM_DWORD         CONVERT SECONDS TO DECIMAL\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+6(2),DXD_A+2    COPY SECONDS\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)          RESTORE R14\n         SR    R15,R15               SET RC\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*        CONSTANTS                                                    *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0018)\nF60            DC    F'60'\nF100           DC    F'100'\nF3600          DC    F'3600'\nH4             DC    H'4'\n\nP1900000       DC    P'1900000'\n\nEDIT_WORD_1    DC    X'F0202020'\nEDIT_WORD_2    DC    X'F0202020204B202020'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Job name:'\nMSG_01_JBN     DC    CL8' '\n               DC    C'  User:'\nMSG_01_UID     DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Reader start date/time   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_RSD     DC    CL8' '\n               DC    C' '\nMSG_02_RST     DC    CL8' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Job name:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_JOB     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'   User ID:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_USER    DC    CL8' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Old data set name:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_DSN     DC    CL44' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'New data set name:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_DSN     DC    CL44' '\nMSG_05_L       EQU   *-MSG_05\n\nMSG_06         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Volser(s): '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_VOLSER  DC    CL6' '\nMSG_06_L       EQU   *-MSG_06\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0018         DSECT\n               COPY     DXDPREF\nDXD_A          DS       CL80\nDXD_B          DS       CL80\nDXD_DATE       DS       PL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR  18\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0018\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0020": {"ttr": 1803, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 20                                   *\n*         JOB initiation                                              *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0020  CSECT\nSMF0020  AMODE 31\nSMF0020  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0020,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0020'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12            DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         USING SMF0020,R10           DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)             SAVE R13\n         ST    R1,8(R13)             CHAIN SAVE AREA\n         LR    R13,R1                COPY WORK AREA ADDRESS\n         USING WK0020,R13            DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9             DEFINE BASE\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         USING SMF20FLG,R7\n\n         MVC   0(MSG_01_L,R8),MSG_01 COPY MESSAGE\n         USING MSG_01,R8             DEFINE BASE\n         MVC   MSG_01_JOB,SMF20JBN   COPY JOB NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         MVC   0(MSG_02_L,R8),MSG_02 COPY MESSAGE\n         USING MSG_02,R8\n         MVC   MSG_02_USER,SMF20UID  COPY USER ID\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         MVC   0(MSG_03_L,R8),MSG_03 COPY MESSAGE\n         USING MSG_03,R8\n         MVC   MSG_03_NAME,SMF20PGM  COPY USER'S NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         SR    R1,R1                 CLEAR REGISTER\n         ICM   R1,3,SMF20RLO         OFFSET TO RELOCATABLE SECTION\n         BZ    MAIN0030              NO RELOCATABLE DATA\n         AR    R1,R7                 PLUS BASE\n         USING SMF20RLA,R1           DEFINE BASE\n         CLI   SMF20RUD,0            ZERO?\n         BE    MAIN0010              YES\n         MVC   0(MSG_04_L,R8),MSG_04 COPY MESSAGE\n         USING MSG_04,R8\n         MVC   MSG_04_UID,SMF20RUD   COPY RACF ID\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0010 DS    0H\n         CLI   SMF20GRP,0            GROUP ZERO?\n         BE    MAIN0020              YES\n         MVC   0(MSG_05_L,R8),MSG_05 COPY MESSAGE\n         USING MSG_05,R8\n         MVC   MSG_05_GID,SMF20GRP   COPY RACF GROUP\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0020 DS    0H\n         CLI   SMF20TID,0            TERMINAL ID ZERO?\n         BE    MAIN0030              YES\n         MVC   0(MSG_06_L,R8),MSG_06 COPY MESSAGE\n         USING MSG_06,R8\n         MVC   MSG_06_TERMINAL,SMF20TID\n         DROP  R1,R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\nMAIN0030 DS    0H\n         SR    R1,R1                 CLEAR REGISTER\n         ICM   R1,1,SMF20NAF         NUMBER OF ACCOUNTING FIELDS\n         BZ    EXIT0000              NONE\n         LA    R2,SMF20ACT           FIRST FIELD\n         ZAP   WORK_COUNTER,P0       INITIALIZE FIELD COUNTER\n         CR    R6,R1                 MORE LINES THAN FIELDS?\n         BL    MAIN0040              NO\n         LR    R6,R1                 LIMIT TO NBR OF FIELDS\nMAIN0040 DS    0H\n         MVC   0(MSG_07_L,R8),MSG_07\n         USING MSG_07,R8\n         AP    WORK_COUNTER,P1       ADD 1 TO FIELD NUMBER\n         ED    MSG_07_NBR,WORK_COUNTER\n         SR    R1,R1\n         IC    R1,0(R2)              LENGTH OF THIS FIELD\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         ED    MSG_07_LENGTH,COMM_DWORD+6\n         LTR   R1,R1                 LENGTH ZERO?\n         BZ    MAIN0060              YES\n         CH    R1,=Y(L'MSG_07_DATA)  TOO LONG?\n         BL    MAIN0050              NO\n         LH    R1,=Y(L'MSG_07_DATA)  LIMIT LENGTH\nMAIN0050 DS    0H\n         BCTR  R1,0\n         EX    R1,MVC_01             COPY ACCOUNTING FIELD\nMAIN0060 DS    0H\n         IC    R1,0(R2)              FIELD LENGTH\n         AR    R2,R1                 NEXT FIELD\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN0040           PROCESS NEXT FIELD\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)          RESTORE R14\n         SR    R15,R15               SET RC\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\nMVC_01   MVC   MSG_07_DATA(0),1(R2)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0020)\nH4             DC    H'4'\nP0             DC    P'0'\nP1             DC    P'1'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Job name    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_JOB     DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'User id     '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_USER    DC    CL8' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Programmer  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_NAME    DC    CL20' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'RACF user id'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_UID     DC    CL8' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'RACF group  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_GID     DC    CL8' '\nMSG_05_L       EQU   *-MSG_05\n\nMSG_06         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Terminal    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_TERMINAL DC   CL8' '\nMSG_06_L       EQU   *-MSG_06\n\n\nMSG_07         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'ACCT field'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_NBR     DC    X'40202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Length'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_LENGTH  DC    X'40202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_DATA    DC    CL40' '\nMSG_07_L       EQU   *-MSG_07\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0020         DSECT\n               COPY     DXDPREF\nWORK_COUNTER   DS       PL2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD    DSECT\n              IFASMFR  20\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     REGEQU\n              END      SMF0020\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0030": {"ttr": 2052, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Common address space work (type 30)                         *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0030  CSECT\nSMF0030  AMODE 31\nSMF0030  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0030,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0030'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING SMF0030,R10                    DEFINE BASE\n         L     R2,SESS_FORMATTER_DXD_ADDR\n         A     R2,DXDSTART\n         ST    R13,4(R2)                      SAVE R13\n         ST    R2,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING WK0030,R13                     DEFINE BASE\n         USING OSSPFD,R9                      DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R1\n         CH    R1,H6\n         BH    ERR0010\n         SLL   R1,2                           TIMES 4\n         B     *(R1)\n         B     MAIN1010\n         B     MAIN2000\n         B     MAIN3000\n         B     MAIN4000\n         B     MAIN5000\n         B     MAIN6000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1010 DS    0H\n         USING SMF30FLG,R7\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process subsystem sections                                   *\n*---------------------------------------------------------------------*\n         SR    R5,R5\n         ICM   R5,3,SMF30SON                  NUMBER OF SECTIONS\n         BZ    MAIN1100                       NONE\n         L     R1,A_MSG_101\n         MVC   0(MSG_101_L,R8),0(R1)\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n         ICM   R4,15,SMF30SOF                 OFFSET TO DATA\n         AR    R4,R7\n         SH    R4,H4\n         USING SMF30PSS,R4                    DEFINE BASE\nMAIN1020 DS    0H\n         L     R1,A_MSG_102\n         MVC   0(MSG_102_L,R8),0(R1)\n         USING MSG_102,R8                     DEFINE BASE\n         MVC   MSG_102_NAME,SMF30PNM          COPY PRODUCT NAME\n         CLI   SMF30TYP+1,1                   JOB START?\n         BE    MAIN1030\n         CLI   SMF30TYP+1,2                   INTERVAL?\n         BE    MAIN1040\n         CLI   SMF30TYP+1,3                   STEP TERMINATION?\n         BE    MAIN1050\n         CLI   SMF30TYP+1,4                   STEP TOTAL?\n         BE    MAIN1060\n         CLI   SMF30TYP+1,5                   JOB TERMINATION?\n         BE    MAIN1070\n         CLI   SMF30TYP+1,6                   SYSTEM ADDRESS SPACE?\n         BE    MAIN1080\n         MVC   MSG_102_TYPE,TYPE_UNKNOWN\n         B     MAIN1090\nMAIN1030 DS    0H\n         MVC   MSG_102_TYPE,TYPE_JOB_START\n         B     MAIN1090\nMAIN1040 DS    0H\n         MVC   MSG_102_TYPE,TYPE_INTERVAL\n         B     MAIN1090\nMAIN1050 DS    0H\n         MVC   MSG_102_TYPE,TYPE_STEP_TERM\n         B     MAIN1090\nMAIN1060 DS    0H\n         MVC   MSG_102_TYPE,TYPE_STEP_TOTAL\n         B     MAIN1090\nMAIN1070 DS    0H\n         MVC   MSG_102_TYPE,TYPE_JOB_TERM\n         B     MAIN1090\nMAIN1080 DS    0H\n         MVC   MSG_102_TYPE,TYPE_SYSTEM\nMAIN1090 DS    0H\n         A     R8,SPF_VWIDTH                  NEXT LINE ON DISPLAY\n         BCTR  R6,0\n         AH    R4,SMF30SLN                    NEXT SECTION\n         BCT   R5,MAIN1020                    LOOP\n         DROP  R4,R8\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process identification sections                              *\n*---------------------------------------------------------------------*\nMAIN1100 DS    0H\n         SR    R5,R5\n         ICM   R5,3,SMF30ION                  NBR OF ID SECTIONS\n         BZ    MAIN1140\n         L     R1,A_MSG_103\n         MVC   0(MSG_103_L,R8),0(R1)\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         ICM   R4,15,SMF30IOF                 OFFSET TO ID SECTION\n         AR    R4,R7\n         SH    R4,H4\n         USING SMF30ID,R4\nMAIN1110 DS    0H\n         ITRACE ID=ID_SECT,                                            +\n               RDATA1=R4,                                              +\n               RDATA2=R5\n         L     R1,A_MSG_104\n         MVC   0(MSG_104_L,R8),0(R1)\n         USING MSG_104,R8\n         MVC   MSG_104_JOB,SMF30JBN           JOB NAME\n         MVC   MSG_104_USER,SMF30RUD          RACF USER ID\n         MVC   MSG_104_GROUP,SMF30GRP         RACF GROUP\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE ON DISPLAY\n         BCTR  R6,R0\n\n         SR    R2,R2\n         ICM   R2,3,SMF30STN                  STEP NUMBER\n         BZ    MAIN1120                       ZERO\n         L     R1,A_MSG_105\n         MVC   0(MSG_105_L,R8),0(R1)\n         USING MSG_105,R8\n         CVD   R2,COMM_DWORD                  CONVERT TO DECIMAL\n         ITRACE ID=STEP_NBR,                                           +\n               RDATA1=R0\n         ED    MSG_105_NUMBER,COMM_DWORD+5\n         MVC   MSG_105_NAME,SMF30STM          STEP NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_106\n         MVC   0(MSG_106_L,R8),0(R1)\n         USING MSG_106,R8\n         MVC   MSG_106_PROGRAM,SMF30PGM       PROGRAM NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\nMAIN1120 DS    0H\n         ITRACE ID=STRTSTOP\n         OC    SMF30STD(3),SMF30STD           1ST 3 BYTES ZERO?\n         BZ    MAIN1130                       YES\n\n         L     R1,A_MSG_107\n         MVC   0(MSG_107_L,R8),0(R1)\n         USING MSG_107,R8\n         MVC   WORK_DATE,SMF30STD\n         AP    WORK_DATE,P1900000             ADD CENTURY\n         MVC   WORK_B(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_B(L'EDIT_WORD_2),WORK_DATE\n         MVC   MSG_107_DATE,WORK_B+1\n         ICM   R1,15,SMF30PPS                 START TIME\n         BAL   R15,TIME0000\n         MVC   MSG_107_TIME,WORK_C            COPY EDITED TIME\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_108\n         MVC   0(MSG_108_L,R8),0(R1)\n         USING MSG_108,R8\n         MVC   WORK_DATE,SMF30RED\n         AP    WORK_DATE,P1900000             ADD CENTURY\n         MVC   WORK_B(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_B(L'EDIT_WORD_2),WORK_DATE\n         MVC   MSG_108_DATE,WORK_B+1\n         ICM   R1,15,SMF30RET                 ENDING TIME\n         BAL   R15,TIME0000\n         MVC   MSG_108_TIME,WORK_C            COPY EDITED TIME\n         DROP  R4,R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN1130 DS    0H\n         ITRACE ID=NEXT_ID,                                            +\n               RDATA1=R4,                                              +\n               RDATA2=R5\n         AH    R4,SMF30ILN                    PLUS LENGTH\n         BCT   R5,MAIN1110                    LOOP\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process I/O activity sections                                *\n*---------------------------------------------------------------------*\nMAIN1140 DS    0H\n         SR    R5,R5\n         ICM   R5,3,SMF30UON                  NUMBER OF I/O SECTIONS\n         BZ    MAIN1160\n         ITRACE ID=IO_SECT,                                            +\n               RDATA1=R5\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n         L     R1,A_MSG_109\n         MVC   0(MSG_109_L,R8),0(R1)\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         ICM   R4,15,SMF30UOF                 OFFSET TO I/O SECTION\n         AR    R4,R7\n         SH    R4,H4\n         USING SMF30URA,R4\nMAIN1150 DS    0H\n         ITRACE ID=PROC_IO,                                            +\n               RDATA1=R4,                                              +\n               RDATA2=R5\n         L     R1,A_MSG_110\n         MVC   0(MSG_110_L,R8),0(R1)\n         USING MSG_110,R8\n         L     R1,SMF30INP                    NUMBER OF CARD IMAGES\n         BAL   R14,NBR0000\n         MVC   MSG_110_CARDS,WORK_EDITWORD\n         L     R1,SMF30TEP                    TOTAL I/O'S\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_110_EXCPS,WORK_EDITWORD\n         L     R1,SMF30TPT                    NUMBER OF TPUTS\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_110_TPUTS,WORK_EDITWORD\n         L     R1,SMF30TGT                    NUMBER OF TGETS\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_110_TGETS,WORK_EDITWORD\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         BCT   R5,MAIN1150\n         DROP  R4,R8\n*---------------------------------------------------------------------*\n*        Process completion section(s)                                *\n*---------------------------------------------------------------------*\nMAIN1160 DS    0H\n         SR    R5,R5\n         ICM   R5,3,SMF30TON                  NBR OF SECTIONS\n         BZ    EXIT0000\n         ITRACE ID=COMPSECT,                                           +\n               RDATA1=R5\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n         L     R1,A_MSG_111\n         MVC   0(MSG_111_L,R8),0(R1)\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         ICM   R4,15,SMF30TOF                 OFFSET TO SECTION\n         AR    R4,R7\n         SH    R4,H4\n         USING SMF30SCC,R4\nMAIN1170 DS    0H\n         ITRACE ID=PROCCOMP,                                           +\n               RDATA1=R4,                                              +\n               RDATA2=R5\n         L     R1,A_MSG_112\n         MVC   0(MSG_112_L,R8),0(R1)\n         USING MSG_112,R8\n         UNPK  WORK_UNPACK(5),SMF30SCC(3)\n         TR    WORK_UNPACK(4),HEXCHAR\n         MVC   MSG_112_CC,WORK_UNPACK+1\n         TM    SMF30SCC,X'80'                 USER ABEND?\n         BO    MAIN1180                       YES\n         TM    SMF30STI,X'80'                 SYSTEM ABEND?\n         BO    MAIN1190                       YES\n         TM    SMF30STI,X'40'                 CANCELLED BY IEFUJV?\n         BO    MAIN1200                       YES\n         TM    SMF30STI,X'20'                 CANCELLED BY IEFUJI?\n         BO    MAIN1210                       YES\n         TM    SMF30STI,X'20'                 CANCELLED BY IEFUSI?\n         BO    MAIN1220                       YES\n         TM    SMF30STI,X'10'                 CANCELLED BY IEFACTRT?\n         BO    MAIN1230                       YES\n         B     MAIN1240\nMAIN1180 DS    0H\n         MVC   MSG_112_STAT(STAT_01L),STAT_01\n         B     MAIN1240\nMAIN1190 DS    0H\n         MVC   MSG_112_STAT(STAT_02L),STAT_02\n         B     MAIN1240\nMAIN1200 DS    0H\n         MVC   MSG_112_STAT(STAT_03L),STAT_03\n         B     MAIN1240\nMAIN1210 DS    0H\n         MVC   MSG_112_STAT(STAT_04L),STAT_04\n         B     MAIN1240\nMAIN1220 DS    0H\n         MVC   MSG_112_STAT(STAT_05L),STAT_05\n         B     MAIN1240\nMAIN1230 DS    0H\n         MVC   MSG_112_STAT(STAT_06L),STAT_06\nMAIN1240 DS    0H\n         TM    SMF30STI,X'08'                 TO BE RESTARTED?\n         BNO   MAIN1250                       YES\n         MVC   MSG_112_RESTART,RESTART\n         DROP  R8\nMAIN1250 DS    0H\n         TM    SMF30SCC,X'80'                 USER ABEND?\n         BO    MAIN1260                       YES\n         TM    SMF30STI,X'80'                 SYSTEM ABEND?\n         BNO   MAIN1270                       NO\nMAIN1260 DS    0H\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         L     R1,A_MSG_113\n         MVC   0(MSG_113_L,R8),0(R1)\n         USING MSG_113,R8\n         ICM   R1,15,SMF30ARC                 ABEND REASON\n         BAL   R14,NBR0000                    EDIT AND SHIFT IT\n         MVC   MSG_113_REASON,WORK_EDITWORD\nMAIN1270 DS    0H\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         BCT   R5,MAIN1170\n         B     EXIT0000\n         DROP  R4,R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN2000 DS    0H\n         ITRACE ID=PROCESSOR\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         L     R1,A_MSG_201\n         MVC   0(MSG_201_L,R8),0(R1)\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         OC    SMF30CON,SMF30CON             ACCOUNTING SECTION?\n         BZ    EXIT0000                      NO\n         ICM   R4,15,SMF30COF                OFFSET TO ACCOUNTING\n         AR    R4,R7\n         SH    R4,H4\n         USING SMF30CAS,R4                   DEFINE BASE\n\n         L     R1,A_MSG_202\n         MVC   0(MSG_202_L,R8),0(R1)\n         USING MSG_202,R8\n         SR    R1,R1\n         ICM   R1,3,SMF30PTY                  PRIORITY\n         CVD   R1,COMM_DWORD\n         ED    MSG_202_PRTY,COMM_DWORD+5\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_203\n         MVC   0(MSG_203_L,R8),0(R1)\n         USING MSG_203,R8\n         ICM   R1,15,SMF30CPT                 TCB TIME\n         BAL   R15,TIME0000\n         MVC   MSG_203_TCB,WORK_C             COPY EDITED TIME\n         ICM   R1,15,SMF30CPS                 SRB TIME\n         BAL   R15,TIME0000\n         MVC   MSG_203_SRB,WORK_C             COPY EDITED TIME\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_204\n         MVC   0(MSG_204_L,R8),0(R1)\n         USING MSG_204,R8\n         ICM   R1,15,SMF30ICU                 TCB TIME\n         BAL   R15,TIME0000\n         MVC   MSG_204_TCB,WORK_C             COPY EDITED TIME\n         ICM   R1,15,SMF30ISB                 SRB TIME\n         BAL   R15,TIME0000\n         MVC   MSG_204_SRB,WORK_C             COPY EDITED TIME\n         SR    R1,R1\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R0\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_205\n         MVC   0(MSG_205_L,R8),0(R1)\n         USING MSG_205,R8\n         ICM   R1,15,SMF30JVU                 STEP VECTOR TIME\n         BAL   R15,TIME0000\n         MVC   MSG_205_TIME,WORK_C\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_206\n         MVC   0(MSG_206_L,R8),0(R1)\n         USING MSG_206,R8\n         ICM   R1,15,SMF30IVU                 INITIATOR VECTOR TIME\n         BAL   R15,TIME0000\n         MVC   MSG_206_TIME,WORK_C\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_207\n         MVC   0(MSG_207_L,R8),0(R1)\n         USING MSG_207,R8\n         ICM   R1,15,SMF30JVA                 STEP VECTOR AFFINITY TIME\n         BAL   R15,TIME0000\n         MVC   MSG_207_TIME,WORK_C\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_208\n         MVC   0(MSG_208_L,R8),0(R1)\n         USING MSG_208,R8\n         ICM   R1,15,SMF30IVA                 INITIATOR VECTOR AFF TIME\n         BAL   R15,TIME0000\n         MVC   MSG_208_TIME,WORK_C\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_209\n         MVC   0(MSG_209_L,R8),0(R1)\n         USING MSG_209,R8\n         ICM   R1,15,SMF30IIP                 TIME FOR I/O INTERRUPTS\n         BAL   R15,TIME0000\n         MVC   MSG_209_TIME,WORK_C\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_210\n         MVC   0(MSG_210_L,R8),0(R1)\n         USING MSG_210,R8\n         ICM   R1,15,SMF30RCT                 TIME BY REGION CNTL TASK\n         BAL   R15,TIME0000\n         MVC   MSG_210_TIME,WORK_C\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R0\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R0\n\n         L     R1,A_MSG_211\n         MVC   0(MSG_211_L,R8),0(R1)\n         USING MSG_211,R8\n         MVC   WORK_DATE,SMF30IDT\n         AP    WORK_DATE,P1900000\n         MVC   WORK_B(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    WORK_B(L'EDIT_WORD_2),WORK_DATE\n         MVC   MSG_211_DATE,WORK_B+1\n         ICM   R1,15,SMF30IST\n         BAL   R15,TIME0000\n         MVC   MSG_211_TIME,WORK_C\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R0\n         DROP  R4\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN3000 DS    0H\n         ITRACE ID=EXCP,                                               +\n               DATA1=(SMF30EON,4)\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_301\n         MVC   0(MSG_301_L,R8),0(R1)\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         SR    R5,R5\n         ICM   R5,3,SMF30EON                  NUMBER OF EXCP SECTIONS\n         BZ    EXIT0000                       NONE\n         ICM   R4,15,SMF30EOF                 OFFSET TO EXCP DATA\n         AR    R4,R7                          PLUS BASE\n         SH    R4,H4                          MINUS LENGTH OF RDW\n         USING SMF30EXP,R4\nMAIN3010 DS    0H\n         L     R1,A_MSG_302\n         MVC   0(MSG_302_L,R8),0(R1)\n         USING MSG_302,R8\n         UNPK  WORK_A(5),SMF30CUA(3)          UNPACK DEVICE NUMBER\n         TR    WORK_A(4),HEXCHAR              TRANSLATE\n         MVC   MSG_302_CUA,WORK_A             COPY DEVICE TO BUFFER\n         MVC   MSG_302_DD,SMF30DDN            COPY DD NAME\n         ICM   R1,15,SMF30BLK                 NUMBER OF EXCP'S\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_302_EXCP,COMM_DWORD+2\n         ICM   R1,15,SMF30DCT                 CONNECT TIME\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_302_CONNECT,COMM_DWORD+2\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN3020\n         B     EXIT0000\nMAIN3020 DS    0H\n         AH    R4,SMF30ELN                    NEXT EXCP SECTION\n         BCT   R5,MAIN3010\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN4000 DS    0H\n         ITRACE ID=STORPAGE,                                           +\n               DATA1=(SMF30RON,4)\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_401\n         MVC   0(MSG_401_L,R8),0(R1)\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         SR    R5,R5\n         ICM   R5,3,SMF30RON                  STORAGE/PAGING SECTIONS\n         BZ    EXIT0000                       NONE\n         ICM   R4,15,SMF30ROF                 OFFSET\n         AR    R4,R7                          PLUS BASE\n         SH    R4,H4                          MINUS LENGTH OF RDW\n         USING SMF30SAP,R4\nMAIN4010 DS    0H\n         L     R1,A_MSG_402\n         MVC   0(MSG_402_L,R8),0(R1)\n         USING MSG_402,R8\n         TM    SMF30SFL,X'80'                 V=R?\n         BNO   MAIN4020                       NO\n         MVI   MSG_402_VR,C'Y'\nMAIN4020 DS    0H\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_403\n         MVC   0(MSG_403_L,R8),0(R1)\n         USING MSG_403,R8\n         TM    SMF30SFL,X'40'                 LIMIT CHANGED BY IEFUSI?\n         BNO   MAIN4030                       NO\n         MVI   MSG_403_USI,C'Y'\n         DROP  R8\nMAIN4030 DS    0H\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_404\n         MVC   0(MSG_404_L,R8),0(R1)\n         USING MSG_404,R8\n         UNPK  MSG_404_KEY(1),SMF30SPK(1)     UNPACK PROTECT KEY\n         OI    MSG_404_KEY,X'F0'              FORCE HIGH BYTE TO X'F'\n         TR    WORK_A,HEXCHAR                 TRANSLATE\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_405\n         MVC   0(MSG_405_L,R8),0(R1)\n         USING MSG_405,R8\n         SR    R1,R1\n         ICM   R1,3,SMF30PRV                  LARGEST SIZE FROM BOTTOM\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_405_SIZE,COMM_DWORD+3\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_406\n         MVC   0(MSG_406_L,R8),0(R1)\n         USING MSG_406,R8\n         SR    R1,R1\n         ICM   R1,3,SMF30SYS                  LARGEST SIZE FROM BOTTOM\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_406_SIZE,COMM_DWORD+3\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_407\n         MVC   0(MSG_407_L,R8),0(R1)\n         USING MSG_407,R8\n         ICM   R1,15,SMF30PGI                 PAGE-INS\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_407_PAGING(15),WORK_EDITWORD\n         ICM   R1,15,SMF30PGO                 PAGE-OUTS\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         LA    R1,MSG_407_PAGING\nMAIN4040 DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BE    MAIN4050                       YES\n         LA    R1,1(,R1)                      NEXT\n         B     MAIN4040\nMAIN4050 DS    0H\n         MVI   0(R1),C'/'\n         MVC   1(10,R1),WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_408\n         MVC   0(MSG_408_L,R8),0(R1)\n         USING MSG_408,R8\n         ICM   R1,15,SMF30PSI                 PAGES IN\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_408_PAGES(15),WORK_EDITWORD\n         ICM   R1,15,SMF30PSO                 PAGES OUT\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         LA    R1,MSG_408_PAGES\nMAIN4060 DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BE    MAIN4070                       YES\n         LA    R1,1(,R1)                      NEXT\n         B     MAIN4060\nMAIN4070 DS    0H\n         MVI   0(R1),C'/'\n         MVC   1(15,R1),WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_409\n         MVC   0(MSG_409_L,R8),0(R1)\n         USING MSG_409,R8\n         ICM   R1,15,SMF30VPI                 PAGES IN\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_409_PAGES(15),WORK_EDITWORD\n         ICM   R1,15,SMF30VPO                 PAGES OUT\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         LA    R1,MSG_409_PAGES\nMAIN4080 DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BE    MAIN4090                       YES\n         LA    R1,1(,R1)                      NEXT\n         B     MAIN4080\nMAIN4090 DS    0H\n         MVI   0(R1),C'/'\n         MVC   1(10,R1),WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_410\n         MVC   0(MSG_410_L,R8),0(R1)\n         USING MSG_410,R8\n         ICM   R1,15,SMF30CPI                 PAGE INs\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_410_PAGES(15),WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_411\n         MVC   0(MSG_411_L,R8),0(R1)\n         USING MSG_411,R8\n         ICM   R1,15,SMF30LPI                 PAGE INs\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_411_PAGES(15),WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_412\n         MVC   0(MSG_412_L,R8),0(R1)\n         USING MSG_412,R8\n         ICM   R1,15,SMF30PST                 PAGE INs\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_412_PAGES(15),WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_413\n         MVC   0(MSG_413_L,R8),0(R1)\n         USING MSG_413,R8\n         ICM   R1,15,SMF30RGB                 SIZE BELOW\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_413_SIZE(15),WORK_EDITWORD\n         ICM   R1,15,SMF30ERG                 SIZE ABOVE\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         LA    R1,MSG_413_SIZE\nMAIN4100 DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BE    MAIN4110                       YES\n         LA    R1,1(,R1)                      NEXT\n         B     MAIN4100\nMAIN4110 DS    0H\n         MVI   0(R1),C'/'\n         MVC   1(10,R1),WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         B     EXIT0000\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN5000 DS    0H\n         ITRACE ID=PERFPAGE,                                           +\n               DATA1=(SMF30PON,4)\n\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         L     R1,A_MSG_501\n         MVC   0(MSG_501_L,R8),0(R1)\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         OC    SMF30PON,SMF30PON\n         BZ    EXIT0000\n         ICM   R4,15,SMF30POF                 OFFSET TO PERFORMANCE\n         AR    R4,R7                          PLUS BASE\n         SH    R4,H4                          MINUS LENGTH OF RDW\n         USING SMF30PRF,R4\n\n         L     R1,A_MSG_502\n         MVC   0(MSG_502_L,R8),0(R1)\n         USING MSG_502,R8\n         ICM   R1,15,SMF30SRV                 TOTAL SERVICE UNITS\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_502_UNITS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_503\n         MVC   0(MSG_503_L,R8),0(R1)\n         USING MSG_503,R8\n         ICM   R1,15,SMF30CSU                 CPU SERVICE UNITS\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_503_UNITS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_504\n         MVC   0(MSG_504_L,R8),0(R1)\n         USING MSG_504,R8\n         ICM   R1,15,SMF30SRB                 SRB SERVICE UNITS\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_504_UNITS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_505\n         MVC   0(MSG_505_L,R8),0(R1)\n         USING MSG_505,R8\n         ICM   R1,15,SMF30IO                  IO SERVICE UNITS\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_505_UNITS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_506\n         MVC   0(MSG_506_L,R8),0(R1)\n         USING MSG_506,R8\n         ICM   R1,15,SMF30MSO                 MSO SERVICE UNITS\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_506_UNITS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_507\n         MVC   0(MSG_507_L,R8),0(R1)\n         USING MSG_507,R8\n         ICM   R1,15,SMF30TAT                 TRANSACTION ACTIVE TIME\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_507_TIME,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_508\n         MVC   0(MSG_508_L,R8),0(R1)\n         USING MSG_508,R8\n         ICM   R1,15,SMF30RES                 RESIDENCY TIME\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_508_TIME,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_509\n         MVC   0(MSG_509_L,R8),0(R1)\n         USING MSG_509,R8\n         ICM   R1,15,SMF30TRS                 TRANSACTIONS\n         BAL   R14,NBR0000                    CONVERT TO DECIMAL\n         MVC   MSG_509_TRANS,WORK_EDITWORD\n         DROP  R8\n\n         B     EXIT0000\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN6000 DS    0H\n         ITRACE ID=OPERPAGE,                                           +\n               DATA1=(SMF30OON,4)\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         L     R1,A_MSG_601\n         MVC   0(MSG_601_L,R8),0(R1)\n         OC    SMF30OON,SMF30OON\n         BZ    EXIT0000\n         ICM   R4,15,SMF30OOF                 OFFSET TO SECTION\n         AR    R4,R7                          PLUS BASE\n         SH    R4,H4                          MINUS LENGTH OF RDW\n         USING SMF30OPS,R4\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_602\n         MVC   0(MSG_602_L,R8),0(R1)\n         USING MSG_602,R8\n         ICM   R1,15,SMF30PDM                 NON SPECIFIC DASD MOUNTS\n         BAL   R14,NBR0000                    CONVERT NUMBER\n         MVC   MSG_602_MOUNTS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_603\n         MVC   0(MSG_603_L,R8),0(R1)\n         USING MSG_603,R8\n         ICM   R1,15,SMF30PRD                 SPECIFIC DASD MOUNTS\n         BAL   R14,NBR0000                    CONVERT NUMBER\n         MVC   MSG_603_MOUNTS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_604\n         MVC   0(MSG_604_L,R8),0(R1)\n         USING MSG_604,R8\n         ICM   R1,15,SMF30PTM                 NON SPECIFIC TAPE MOUNTS\n         BAL   R14,NBR0000                    CONVERT NUMBER\n         MVC   MSG_604_MOUNTS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_605\n         MVC   0(MSG_605_L,R8),0(R1)\n         USING MSG_605,R8\n         ICM   R1,15,SMF30TPR                 SPECIFIC TAPE MOUNTS\n         BAL   R14,NBR0000                    CONVERT NUMBER\n         MVC   MSG_605_MOUNTS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_606\n         MVC   0(MSG_606_L,R8),0(R1)\n         USING MSG_606,R8\n         ICM   R1,15,SMF30MTM                 NON SPECIFIC MSS MOUNTS\n         BAL   R14,NBR0000                    CONVERT NUMBER\n         MVC   MSG_606_MOUNTS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         L     R1,A_MSG_607\n         MVC   0(MSG_607_L,R8),0(R1)\n         USING MSG_607,R8\n         ICM   R1,15,SMF30MSR                 SPECIFIC MSS MOUNTS\n         BAL   R14,NBR0000                    CONVERT NUMBER\n         MVC   MSG_607_MOUNTS,WORK_EDITWORD\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNBR0000  DS    0H\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   WORK_EDITWORD,EDITWORD\n         ED    WORK_EDITWORD,COMM_DWORD\n         LA    R1,L'WORK_EDITWORD-1\nNBR0010  DS    0H\n         CLI   WORK_EDITWORD,C'0'\n         BNER  R14\n         MVC   WORK_EDITWORD(L'WORK_EDITWORD-1),WORK_EDITWORD+1\n         MVI   WORK_EDITWORD+L'WORK_EDITWORD-1,C' '\n         BCT   R1,NBR0010\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTIME0000 DS    0H\n         SR    R0,R0\n         D     R0,F100                        CONVERT TO WHOLE SECONDS\n         SR    R0,R0                          CLEAR REMAINDER\n         D     R0,F3600                       COMPUTE HOURS\n         CVD   R1,COMM_DWORD                  CONVERT HOURS TO DECIMAL\n         MVC   WORK_B(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_B(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   WORK_C+0(2),WORK_B+2           COPY HOURS\n         MVI   WORK_C+2,C':'                  INSERT COLON\n         LR    R1,R0                          COPY REMAINDER\n         SR    R0,R0                          CLEAR R0\n         D     R0,F60                         COMPUTE MINUTES\n         CVD   R1,COMM_DWORD                  CONVERT MINUTES\n         MVC   WORK_B(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_B(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   WORK_C+3(2),WORK_B+2           COPY MINUTES\n         MVI   WORK_C+5,C':'                  INSERT COLON\n         CVD   R0,COMM_DWORD                  CONVERT SECONDS\n         MVC   WORK_B(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    WORK_B(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   WORK_C+6(2),WORK_B+2           COPY SECONDS\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nERR0010  DS    0H\n         ITRACE ID=BAD_SCRN,                                           +\n               RDATA1=R1\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         SR    R15,R15                        SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0030)\n\nA_MSG_101      DC    A(MSG_101)\nA_MSG_102      DC    A(MSG_102)\nA_MSG_103      DC    A(MSG_103)\nA_MSG_104      DC    A(MSG_104)\nA_MSG_105      DC    A(MSG_105)\nA_MSG_106      DC    A(MSG_106)\nA_MSG_107      DC    A(MSG_107)\nA_MSG_108      DC    A(MSG_108)\nA_MSG_109      DC    A(MSG_109)\nA_MSG_110      DC    A(MSG_110)\nA_MSG_111      DC    A(MSG_111)\nA_MSG_112      DC    A(MSG_112)\nA_MSG_113      DC    A(MSG_113)\n\nA_MSG_201      DC    A(MSG_201)\nA_MSG_202      DC    A(MSG_202)\nA_MSG_203      DC    A(MSG_203)\nA_MSG_204      DC    A(MSG_204)\nA_MSG_205      DC    A(MSG_205)\nA_MSG_206      DC    A(MSG_206)\nA_MSG_207      DC    A(MSG_207)\nA_MSG_208      DC    A(MSG_208)\nA_MSG_209      DC    A(MSG_209)\nA_MSG_210      DC    A(MSG_210)\nA_MSG_211      DC    A(MSG_211)\n\nA_MSG_301      DC    A(MSG_301)\nA_MSG_302      DC    A(MSG_302)\n\nA_MSG_401      DC    A(MSG_401)\nA_MSG_402      DC    A(MSG_402)\nA_MSG_403      DC    A(MSG_403)\nA_MSG_404      DC    A(MSG_404)\nA_MSG_405      DC    A(MSG_405)\nA_MSG_406      DC    A(MSG_406)\nA_MSG_407      DC    A(MSG_407)\nA_MSG_408      DC    A(MSG_408)\nA_MSG_409      DC    A(MSG_409)\nA_MSG_410      DC    A(MSG_410)\nA_MSG_411      DC    A(MSG_411)\nA_MSG_412      DC    A(MSG_412)\nA_MSG_413      DC    A(MSG_413)\n\nA_MSG_501      DC    A(MSG_501)\nA_MSG_502      DC    A(MSG_502)\nA_MSG_503      DC    A(MSG_503)\nA_MSG_504      DC    A(MSG_504)\nA_MSG_505      DC    A(MSG_505)\nA_MSG_506      DC    A(MSG_506)\nA_MSG_507      DC    A(MSG_507)\nA_MSG_508      DC    A(MSG_508)\nA_MSG_509      DC    A(MSG_509)\n\nA_MSG_601      DC    A(MSG_601)\nA_MSG_602      DC    A(MSG_602)\nA_MSG_603      DC    A(MSG_603)\nA_MSG_604      DC    A(MSG_604)\nA_MSG_605      DC    A(MSG_605)\nA_MSG_606      DC    A(MSG_606)\nA_MSG_607      DC    A(MSG_607)\n\nF60            DC    F'60'\nF100           DC    F'100'\nF3600          DC    F'3600'\n\nH4             DC    H'4'\nH6             DC    H'6'\n\nP1900000       DC  P'1900000'\n\nEDITWORD       DC    X'F0202020202020202020202020202020'\n\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nEDIT_WORD_1    DC  X'F0212020'\nEDIT_WORD_2    DC  X'F0212020204B202020'\n\nTYPE_UNKNOWN   DC    CL20'Unknown'\nTYPE_JOB_START DC    CL20'JOB start'\nTYPE_INTERVAL  DC    CL20'Interval'\nTYPE_STEP_TERM DC    CL20'Step termination'\nTYPE_STEP_TOTAL DC   CL20'Step total'\nTYPE_JOB_TERM  DC    CL20'Job termination'\nTYPE_SYSTEM    DC    CL20'System address space'\n\nSTAT_01        DC    CL30'User abend'\nSTAT_01L       EQU   *-STAT_01\nSTAT_02        DC    CL30'System abend'\nSTAT_02L       EQU   *-STAT_02\nSTAT_03        DC    CL30'Cancelled by IEFUJV'\nSTAT_03L       EQU   *-STAT_03\nSTAT_04        DC    CL30'Cancelled by IEFUJI'\nSTAT_04L       EQU   *-STAT_04\nSTAT_05        DC    CL30'Cancelled by IEFUSI'\nSTAT_05L       EQU   *-STAT_05\nSTAT_06        DC    CL30'Cancelled by IEFACTRT'\nSTAT_06L       EQU   *-STAT_06\n\nRESTART        DC    C'Restart'\n\nMSG_101        DS    0C\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    28C'-'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Subsystem section(s)'\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    27C'-'\n               DC    C'>'\nMSG_101_L      EQU   *-MSG_101\n\nMSG_102        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Subsystem:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_102_NAME   DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Type'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_102_TYPE   DC    CL20' '\nMSG_102_L      EQU   *-MSG_102\n\nMSG_103        DS    0C\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    25C'-'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Identification section(s)'\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    25C'-'\n               DC    C'>'\nMSG_103_L      EQU   *-MSG_103\n\nMSG_104        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Job name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_104_JOB    DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  User ID'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_104_USER   DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Group'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_104_GROUP  DC    CL8' '\nMSG_104_L      EQU   *-MSG_104\n\nMSG_105        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Step    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_105_NUMBER DC    X'402020202120'\n               DC    C'  '\nMSG_105_NAME   DC    CL8' '\nMSG_105_L      EQU   *-MSG_105\n\nMSG_106        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Program '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_106_PROGRAM DC   CL8' '\nMSG_106_L      EQU   *-MSG_106\n\nMSG_107        DS    0H\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Start   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_107_DATE   DC    CL8' '\n               DC    C' '\nMSG_107_TIME   DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG_107_L      EQU   *-MSG_107\n\nMSG_108        DS    0H\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Stop    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_108_DATE   DC    CL8' '\n               DC    C' '\nMSG_108_TIME   DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG_108_L      EQU   *-MSG_108\n\nMSG_109        DS    0C\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    26C'-'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'I/O activity section(s)'\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    26C'-'\n               DC    C'>'\nMSG_109_L      EQU   *-MSG_109\n\nMSG_110        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Cards'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_110_CARDS  DC    X'402020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Total EXCPs'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_110_EXCPS  DC    X'40202020202020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'   TPUTs/TGETs'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_110_TPUTS  DC    X'40202020202020202120'\n               DC    C' '\nMSG_110_TGETS  DC    X'40202020202020202120'\nMSG_110_L      EQU   *-MSG_110\n\nMSG_111        DS    0C\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    29C'-'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Completion section'\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    28C'-'\n               DC    C'>'\nMSG_111_L      EQU   *-MSG_111\n\nMSG_112        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Completion code'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_112_CC     DC    CL3' '\n               DC    C'   '\nMSG_112_STAT   DC    CL30' '\n               DC    C'  '\nMSG_112_RESTART DC   CL7' '\nMSG_112_L      EQU   *-MSG_112\n\nMSG_113        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Abend reason   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_113_REASON DC    X'F020202020202120'\nMSG_113_L      EQU   *-MSG_113\n\nMSG_201        DS    0C\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    C'<'\n               DC    27C'-'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Processor accounting'\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    27C'-'\n               DC    C'>'\nMSG_201_L      EQU   *-MSG_201\n\nMSG_202        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Priority                        '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_202_PRTY   DC    X'402020202120'\nMSG_202_L      EQU   *-MSG_202\n\nMSG_203        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'STEP TCB time                 '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_203_TCB    DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'   SRB time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_203_SRB    DC    CL8' '\nMSG_203_L      EQU   *-MSG_203\n\nMSG_204        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'INIT TCB time                 '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_204_TCB    DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'   SRB time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_204_SRB    DC    CL8' '\nMSG_204_L      EQU   *-MSG_204\n\nMSG_205        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Step vector time              '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_205_TIME   DC    CL8' '\nMSG_205_L      EQU   *-MSG_205\n\nMSG_206        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Initiator vector time         '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_206_TIME   DC    CL8' '\nMSG_206_L      EQU   *-MSG_206\n\nMSG_207        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Step vector affinity time     '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_207_TIME   DC    CL8' '\nMSG_207_L      EQU   *-MSG_207\n\nMSG_208        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Initiator vector affinity time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_208_TIME   DC    CL8' '\nMSG_208_L      EQU   *-MSG_208\n\nMSG_209        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Time used for I/O interrupts  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_209_TIME   DC    CL8' '\nMSG_209_L      EQU   *-MSG_209\n\nMSG_210        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Time used by RCT              '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_210_TIME   DC    CL8' '\nMSG_210_L      EQU   *-MSG_210\n\nMSG_211        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Interval start for subtype 2 and 3'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_211_DATE   DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_211_TIME   DC    CL8' '\nMSG_211_L      EQU   *-MSG_211\n\nMSG_301        DS    0C\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    C'<'\n               DC    31C'-'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'EXCP section'\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    31C'-'\n               DC    C'>'\nMSG_301_L      EQU   *-MSG_301\n\nMSG_302        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Device'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_302_CUA    DC    CL4' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' DD name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_302_DD     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' IO''s'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_302_EXCP   DC    X'40206B2020206B2020206B202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Connect time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_302_CONNECT DC   X'40206B2020206B2020206B202120'\nMSG_302_L      EQU   *-MSG_302\n\nMSG_401        DS    0C\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    C'<'\n               DC    24C'-'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Storage and paging section'\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    24C'-'\n               DC    C'>'\nMSG_401_L      EQU   *-MSG_401\n\nMSG_402        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'V=R                           '\n               DC    CL11' '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_402_VR     DC    C'N'\nMSG_402_L      EQU   *-MSG_402\n\n\nMSG_403        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'User area limited by IEFUSI?  '\n               DC    CL11' '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_403_USI    DC    C'N'\nMSG_403_L      EQU   *-MSG_403\n\nMSG_404        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Storage protect key           '\n               DC    CL11' '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_404_KEY    DC    C' '\nMSG_404_L      EQU   *-MSG_404\n\nMSG_405        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Largest from bottom of private'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_405_SIZE   DC    X'402020206B2020206B202120'\n               DC    C'K'\nMSG_405_L      EQU   *-MSG_405\n\nMSG_406        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Largest from top of private   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_406_SIZE   DC    X'402020206B2020206B202120'\n               DC    C'K'\nMSG_406_L      EQU   *-MSG_406\n\nMSG_407        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Page INs/Page OUTs to/from AUX'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_407_PAGING DC    CL30' '\nMSG_407_L      EQU   *-MSG_407\n\nMSG_408        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Pages SWAPed in/out           '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_408_PAGES  DC    CL30' '\nMSG_408_L      EQU   *-MSG_408\n\nMSG_409        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'PAGE INs/PAGE OUTs to VIO     '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_409_PAGES  DC    CL30' '\nMSG_409_L      EQU   *-MSG_409\n\nMSG_410        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Common area PAGE INs          '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_410_PAGES  DC    CL30' '\nMSG_410_L      EQU   *-MSG_410\n\nMSG_411        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'LPA PAGE INs                  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_411_PAGES  DC    CL30' '\nMSG_411_L      EQU   *-MSG_411\n\nMSG_412        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Pages stolen from addr space  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_412_PAGES  DC    CL30' '\nMSG_412_L      EQU   *-MSG_412\n\nMSG_413        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Private area size below/above '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_413_SIZE   DC    CL30' '\nMSG_413_L      EQU   *-MSG_413\n\nMSG_501        DS    0C\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    C'<'\n               DC    28C'-'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Performance section'\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    27C'-'\n               DC    C'>'\nMSG_501_L      EQU   *-MSG_501\n\nMSG_502        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Total service units           '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_502_UNITS  DC    CL15' '\nMSG_502_L      EQU   *-MSG_502\n\nMSG_503        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'CPU service units             '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_503_UNITS  DC    CL15' '\nMSG_503_L      EQU   *-MSG_503\n\nMSG_504        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'SRB service units             '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_504_UNITS  DC    CL15' '\nMSG_504_L      EQU   *-MSG_504\n\nMSG_505        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'I/O service units             '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_505_UNITS  DC    CL15' '\nMSG_505_L      EQU   *-MSG_505\n\nMSG_506        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'MSO service units             '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_506_UNITS  DC    CL15' '\nMSG_506_L      EQU   *-MSG_506\n\nMSG_507        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Transaction time (1024 usec)  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_507_TIME   DC    CL15' '\nMSG_507_L      EQU   *-MSG_507\n\nMSG_508        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Residence time (1024 usec)    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_508_TIME   DC    CL15' '\nMSG_508_L      EQU   *-MSG_508\n\nMSG_509        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Transactions                  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_509_TRANS  DC    CL15' '\nMSG_509_L      EQU   *-MSG_509\n\nMSG_601        DS    0C\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    C'<'\n               DC    29C'-'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Operator section'\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    30C'-'\nMSG_601_L      EQU   *-MSG_601\n\nMSG_602        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Non specific DASD mounts      '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_602_MOUNTS DC    CL15' '\nMSG_602_L      EQU   *-MSG_602\n\nMSG_603        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Specific DASD mounts          '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_603_MOUNTS DC    CL15' '\nMSG_603_L      EQU   *-MSG_603\n\nMSG_604        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Non specific TAPE mounts      '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_604_MOUNTS DC    CL15' '\nMSG_604_L      EQU   *-MSG_604\n\nMSG_605        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Specific TAPE mounts          '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_605_MOUNTS DC    CL15' '\nMSG_605_L      EQU   *-MSG_605\n\nMSG_606        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Non specific MSS mounts       '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_606_MOUNTS DC    CL15' '\nMSG_606_L      EQU   *-MSG_606\n\nMSG_607        DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Specific MSS mounts           '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_607_MOUNTS DC    CL15' '\nMSG_607_L      EQU   *-MSG_607\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0030         DSECT\n               COPY     DXDPREF\nWORK_UNPACK    DS       XL8\nWORK_A         DS       CL80\nWORK_B         DS       CL80\nWORK_C         DS       CL80\nWORK_DATE      DS       PL4\nWORK_EDITWORD  DS       XL16\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR 30\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY REGEQU\n               END  SMF0030\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0031": {"ttr": 2571, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 31 (TIOC initialization)             *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0031  CSECT\nSMF0031  AMODE 31\nSMF0031  RMODE ANY\n         USING OSCOMM,R12\n         USING SMF0031,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0031'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                      DEFINE COMMON AREA BASE\n         USING SESSION,R11\n         STM   R14,R12,12(R13)                 SAVE REGS\n         LR    R10,R15                         COPY ENTRY POINT\n         DROP  R15\n         USING SMF0031,R10                     DEFINE BASE\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                       SAVE R13\n         ST    R1,8(R13)                       CHAIN SAVE AREA\n         LR    R13,R1                          COPY WORK AREA ADDRESS\n         USING WK0031,R13                      DEFINE BASE\n         USING OSSPFD,R9                       DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0010 DS    0H\n         USING TTIRFLG,R7\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n\n*---------------------------------------------------------------------*\n*        Process SMF date and time                                    *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8                      DEFINE BASE\n         MVC   DXD_DATE,TTIRCDTE\n         AP    DXD_DATE,P1900000              ADD CENTURY\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   MSG_01_DTE,DXD_A+1             COPY DATE\n         ICM   R1,15,TTIRCDTS                 TIME\n         BAL   R15,TIME0000                   CONVERT TIME\n         MVC   MSG_01_TME,DXD_B               COPY TIME\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8                      DEFINE BASE\n         ICM   R1,15,TTINBF                   NBR OF TIMESHARING BFRS\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_02_BUFFERS,COMM_DWORD+3\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8                      DEFINE BASE\n         ICM   R1,15,TTIBUFSE                 SIZE OF TIMESHARING BFRS\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_03_SIZE,COMM_DWORD+3\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8                      DEFINE BASE\n         ICM   R1,15,TTIOMAX                  BUFFERS BEFORE OWAIT\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_04_BUFFERS,COMM_DWORD+3\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8                      DEFINE BASE\n         ICM   R1,15,TTIIMAX                  BUFFERS BEFORE LWAIT\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_05_BUFFERS,COMM_DWORD+3\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_06_L,R8),MSG_06\n         USING MSG_06,R8                      DEFINE BASE\n         ICM   R1,15,TTIOWTH                  BFRS BEFORE ENDING OWAIT\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_06_BUFFERS,COMM_DWORD+3\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_07_L,R8),MSG_07\n         USING MSG_07,R8                      DEFINE BASE\n         ICM   R1,15,TTIRSTH                  BFRS BEFORE ENDING LWAIT\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_07_BUFFERS,COMM_DWORD+3\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_08_L,R8),MSG_08\n         USING MSG_08,R8                      DEFINE BASE\n         ICM   R1,15,TTIUSLW                  BUFFERS ON FREE QUEUE\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_08_BUFFERS,COMM_DWORD+3\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_09_L,R8),MSG_09\n         USING MSG_09,R8                      DEFINE BASE\n         ICM   R1,15,TTITSBS                  SIZE OF BUFFERS\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_09_SIZE,COMM_DWORD+3\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nTIME0000 DS    0H\n         SR    R0,R0\n         D     R0,F100                        CONVERT TO WHOLE SECONDS\n         SR    R0,R0                          CLEAR REMAINDER\n         D     R0,F3600                       COMPUTE HOURS\n         CVD   R1,COMM_DWORD                  CONVERT HOURS\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+0(2),DXD_A+2             COPY HOURS\n         MVI   DXD_B+2,C':'                   INSERT COLON\n         LR    R1,R0                          COPY REMAINDER\n         SR    R0,R0                          CLEAR R0\n         D     R0,F60                         COMPUTE MINUTES\n         CVD   R1,COMM_DWORD                  CONVERT MINUTES\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+3(2),DXD_A+2             COPY MINUTES\n         MVI   DXD_B+5,C':'                   INSERT COLON\n         CVD   R0,COMM_DWORD                  CONVERT SECONDS\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+6(2),DXD_A+2             COPY SECONDS\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         LR    R15,R2                         SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0031)\nF60            DC    F'60'\nF100           DC    F'100'\nF3600          DC    F'3600'\n\nP1900000       DC    P'1900000'\n\nEDIT_WORD_1    DC    X'F0202020'\nEDIT_WORD_2    DC    X'F0202020204B202020'\n\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  SMF date/time '\nMSG_01_DTE     DC    CL8' '\n               DC    C'  '\nMSG_01_TME     DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Number of timesharing buffers'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_BUFFERS DC    X'402020206B2020206B202120'\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Timesharing buffer size'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_SIZE    DC    X'402020206B2020206B202120'\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Buffers before OWAIT   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_BUFFERS DC    X'402020206B2020206B202120'\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Buffers before LWAIT   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_BUFFERS DC    X'402020206B2020206B202120'\nMSG_05_L       EQU   *-MSG_05\n\nMSG_06         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Buffers to end OWAIT   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_BUFFERS DC    X'402020206B2020206B202120'\nMSG_06_L       EQU   *-MSG_06\n\nMSG_07         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Buffers to end LWAIT   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_BUFFERS DC    X'402020206B2020206B202120'\nMSG_07_L       EQU   *-MSG_07\n\nMSG_08         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Buffers on free queue  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_08_BUFFERS DC    X'402020206B2020206B202120'\nMSG_08_L       EQU   *-MSG_08\n\nMSG_09         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Size of one TSB        '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_09_SIZE    DC    X'402020206B2020206B202120'\nMSG_09_L       EQU   *-MSG_09\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0031         DSECT\n               COPY     DXDPREF\nDXD_A          DS       CL80\nDXD_B          DS       CL80\nDXD_DATE       DS       PL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD    DSECT\n              IFASMFR  31\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     REGEQU\n              END      SMF0031\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0032": {"ttr": 2822, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 32 (TSO user work accounting)        *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0032  CSECT\nSMF0032  AMODE 31\nSMF0032  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0032,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0032'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         DROP  R15\n         USING SMF0032,R10                    DEFINE BASE\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0032,R13                     DEFINE BASE\n         USING OSSPFD,R9                      DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0000 DS    0H\n         USING SMF32FLG,R7\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n\n*---------------------------------------------------------------------*\n*        PROCESS PRODUCT SECTION(S)                                   *\n*---------------------------------------------------------------------*\n         MVC   0(MSG_01_L,R8),MSG_01\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\nMAIN0010 DS    0H\n         SR    R3,R3\n         ICM   R3,3,SMF32PON                  NBR OF PRODUCT SECTIONS\n         BZ    MAIN0100\n         ICM   R4,15,SMF32POF\n         AR    R4,R7                          PLUS BASE\n         SH    R4,H4                          MINUS RDW LENGTH\n         USING SMF32PSS,R4\nMAIN0020 DS    0H\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8\n         MVC   MSG_02_PRODUCT,SMF32PNM        COPY PRODUCT NAME\n         MVC   MSG_02_VERSION,SMF32RVN        COPY VERSION\n         MVC   WORK_TYPE,SMF32TYP+1\n         TM    SMF32TYP+1,1                   INTERVAL?\n         BO    MAIN0030                       YES\n         TM    SMF32TYP+1,2                   SESSION END?\n         BO    MAIN0040                       YES\n         TM    SMF32TYP+1,3                   INTERVAL WITH DETAIL?\n         BO    MAIN0050                       YES\n         TM    SMF32TYP+1,4                   SESSION END WITH DETAIL?\n         BO    MAIN0060\n         B     MAIN0070\nMAIN0030 DS    0H\n         MVC   MSG_02_TYPE,TYPE_INTERVAL\n         B     MAIN0070\nMAIN0040 DS    0H\n         MVC   MSG_02_TYPE,TYPE_END\n         B     MAIN0070\nMAIN0050 DS    0H\n         MVC   MSG_02_TYPE,TYPE_INTERVAL_DETAIL\n         B     MAIN0070\nMAIN0060 DS    0H\n         MVC   MSG_02_TYPE,TYPE_END_DETAIL\nMAIN0070 DS    0H\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN0080\n         B     EXIT0000                       SCREEN IS FULL\nMAIN0080 DS    0H\n         AH    R4,SMF32PLN                    NEXT SECTION\n         BCT   R3,MAIN0020\n         DROP  R4,R8\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0100 DS    0H\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_03_L,R8),MSG_03\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         ICM   R3,3,SMF32ION                  NUMBER OF SECTIONS\n         BZ    MAIN0200\n         ICM   R4,15,SMF32IOF                 OFFSET TO IDENTIFICATION\n         AR    R4,R7\n         SH    R4,H4                          MINUS LENGTH OF RDW\n         USING SMF32ID,R4                     DEFINE BASE\nMAIN0110 DS    0H\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8\n         MVC   MSG_04_JBN,SMF32JBN            COPY JOB NAME\n         MVC   MSG_04_STM,SMF32STM            COPY STEP NAME\n         SR    R1,R1\n         ICM   R1,3,SMF32STN                  STEP NUMBER\n         CVD   R1,COMM_DWORD\n         ED    MSG_04_STN,COMM_DWORD+4\n         MVC   MSG_04_PGM,SMF32PGM            COPY PROGRAM NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN0120\n         B     EXIT0000\nMAIN0120 DS    0H\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8\n         MVC   MSG_05_RUD,SMF32RUD            COPY RACF USER ID\n         MVC   MSG_05_GRP,SMF32GRP            COPY RACF GROUP\n         MVC   MSG_05_USR,SMF32USR            COPY USER'S NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN0130\n         B     EXIT0000                       SCREEN IS FULL\nMAIN0130 DS    0H\n         AH    R4,SMF32ILN                    NEXT SECTION\n         BCT   R3,MAIN0110                    LOOP\n         DROP  R4\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0200 DS    0H\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_06_L,R8),MSG_06\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         MVC   0(MSG_07_L2,R8),MSG_07\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         ICM   R3,3,SMF32CON                  NUMBER OF SECTIONS\n         BZ    MAIN0200\n         ICM   R4,15,SMF32COF                 OFFSET TO IDENTIFICATION\n         AR    R4,R7\n         SH    R4,H4                          MINUS LENGTH OF RDW\n         USING SMF32CDS,R4                    DEFINE BASE\nMAIN0210 DS    0H\n         CLI   WORK_TYPE,X'02'                TYPE 3 OR 4?\n         BH    MAIN0220                       YES\n         MVC   0(MSG_07_L1,R8),MSG_07\n         B     MAIN0230\nMAIN0220 DS    0H\n         MVC   0(MSG_07_L2,R8),MSG_07\nMAIN0230 DS    0H\n         USING MSG_07,R8\n         MVI   0(R8),$SCREEN_ATTR_NORMAL\n         MVC   MSG_07_CMD,SMF32CMD            COPY COMMAND\n         ICM   R1,15,SMF32CNT                 USES\n         CVD   R1,COMM_DWORD\n         MVC   MSG_07_CNT,EDIT_WORD_1         COPY EDIT WORD\n         ED    MSG_07_CNT,COMM_DWORD+4        EDIT TIMES USED\n         CLI   WORK_TYPE,X'03'                TYPE 3 OR 4?\n         BL    MAIN0240                       NO\n         ICM   R1,15,SMF32TCB                 TCB TIME\n         CVD   R1,COMM_DWORD\n         MVC   MSG_07_TCB,EDIT_WORD_1         COPY EDIT WORD\n         ED    MSG_07_TCB,COMM_DWORD+4\n         ICM   R1,15,SMF32SRB                 SRB TIME\n         CVD   R1,COMM_DWORD\n         MVC   MSG_07_SRB,EDIT_WORD_1         COPY EDIT WORD\n         ED    MSG_07_SRB,COMM_DWORD+4\n         ICM   R1,15,SMF32TGT                 TGETS\n         CVD   R1,COMM_DWORD\n         MVC   MSG_07_TGT,EDIT_WORD_1         COPY EDIT WORD\n         ED    MSG_07_TGT,COMM_DWORD+4\n         ICM   R1,15,SMF32TPT                 TPUTS\n         CVD   R1,COMM_DWORD\n         MVC   MSG_07_TPT,EDIT_WORD_1         COPY EDIT WORD\n         ED    MSG_07_TPT,COMM_DWORD+4\n         ICM   R1,15,SMF32EXP                 EXCPS\n         CVD   R1,COMM_DWORD\n         MVC   MSG_07_EXP,EDIT_WORD_1         COPY EDIT WORD\n         ED    MSG_07_EXP,COMM_DWORD+4\n         ICM   R1,15,SMF32TCT                 DEVICE CONNECT TIME\n         CVD   R1,COMM_DWORD\n         MVC   MSG_07_TCT,EDIT_WORD_1         COPY EDIT WORD\n         ED    MSG_07_TCT,COMM_DWORD+4\nMAIN0240 DS    0H\n         A     R8,SPF_VWIDTH                  NEXT LINE ON SCREEN\n         BCT   R6,MAIN0250\n         B     EXIT0000                       SCREEN FULL\nMAIN0250 DS    0H\n         AH    R4,SMF32CLN                    PLUS LENGTH OF EACH\n         BCT   R3,MAIN0210\n\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         LR    R15,R2                         SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0032)\n\nH4             DC    H'4'\n\nEDIT_WORD_1    DC    X'4020202020202120'\n\nTYPE_INTERVAL        DC CL25'Interval'\nTYPE_END             DC CL25'Session end'\nTYPE_INTERVAL_DETAIL DC CL25'Interval with detail'\nTYPE_END_DETAIL      DC CL25'Session end with detail'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    32C'-'\n               DC    C'Product section'\n               DC    32C'-'\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Product       '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_PRODUCT DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Version'      '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_VERSION DC    CL2' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Type'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_TYPE    DC    CL25' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    23C'-'\n               DC    C'Identification section'\n               DC    34C'-'\nMSG_03_L       EQU   *-MSG_03\n\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Job name '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_JBN     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Step number '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_STN     DC    X'4020202020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Step name   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_STM     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  Program name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_PGM     DC    CL8' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'RACF ID  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_RUD     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  RACF Group  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_GRP     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'  User''s name '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_USR     DC    CL8' '\nMSG_05_L       EQU   *-MSG_05\n\nMSG_06         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    32C'-'\n               DC    C'Command section'\n               DC    33C'-'\nMSG_06_L       EQU   *-MSG_06\n\nMSG_07         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG_07_CMD     DC    CL8'COMMAND '\n               DC    CL2' '\nMSG_07_CNT     DC    CL8'    USES'\nMSG_07_L1      EQU   *-MSG_07\n               DC    CL2' '\nMSG_07_TCB     DC    CL8'TCB TIME'\n               DC    CL2' '\nMSG_07_SRB     DC    CL8'SRB TIME'\n               DC    CL2' '\nMSG_07_TGT     DC    CL8'   TGETS'\n               DC    CL2' '\nMSG_07_TPT     DC    CL8'   TPUTS'\n               DC    CL2' '\nMSG_07_EXP     DC    CL8'   EXCPS'\n               DC    CL2' '\nMSG_07_TCT     DC    CL8'DEV CONNECT'\nMSG_07_L2      EQU   *-MSG_07\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0032         DSECT\n               COPY     DXDPREF\nWORK_TYPE      DS       X\nDXD_A          DS       CL80\nDXD_B          DS       CL80\nDXD_DATE       DS       PL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD    DSECT\n              IFASMFR  32\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     REGEQU\n              END      SMF0032\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0040": {"ttr": 2831, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 40                                   *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0040  CSECT\nSMF0040  AMODE 31\nSMF0040  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0040,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0040'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         USING SMF0040,R10                    DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0040,R13                     DEFINE BASE\n         USING OSSPFD,R9                      DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         USING TDDRFLG,R7\n         MVC   0(MSG_01_L,R8),MSG_01          COPY MESSAGE\n         USING MSG_01,R8                      DEFINE BASE\n         MVC   MSG_01_UIF,TDDUIF              COPY JOB\n         MVC   MSG_01_UDATA,TDDUDATA          COPY USER ID\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,TDDINVSQ                    STEP NUMBER\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_01_INVSQ,COMM_DWORD+6\n         CLI   TDDFLG,2                       UNALLOCATION?\n         BE    MAIN0010                       YES\n         CLI   TDDFLG,3                       CONCATENATION?\n         BE    MAIN0020                       YES\n         CLI   TDDFLG,4                       DE-CONCATENATION?\n         BE    MAIN0030                       YES\nMAIN0010 DS    0H\n         MVC   MSG_01_FLG(L'UNALLOCATION),UNALLOCATION\n         B     MAIN0040\nMAIN0020 DS    0H\n         MVC   MSG_01_FLG(L'CONCATENATION),CONCATENATION\n         B     MAIN0040\nMAIN0030 DS    0H\n         MVC   MSG_01_FLG(L'DECONCATENATION),DECONCATENATION\nMAIN0040 DS    0H\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,R0\n\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,R0\n\n         SR    R5,R5\n         ICM   R5,3,TDDVAR                    SIZE OF DEVICE DATA\n         BZ    EXIT0000                       NO DATA\n         SH    R5,H2                          MINUS 2\n         BZ    EXIT0000                       NO DATA\n         SRL   R5,3                           DIVIDE BY 8 (CHEAP WAY)\n         LA    R7,TDDDEVC                     FIRST DEVICE\n         USING TDDDEVC,R7\nMAIN0050 DS    0H\n         ITRACE ID=BLD,                                                +\n               RDATA1=R8,                                              +\n               RDATA2=R6\n         MVC   0(MSG_02_L,R8),MSG_02          COPY MESSAGE\n         USING MSG_02,R8                      DEFINE BASE\n         UNPK  WORK_A(5),TDDCUAD(3)           UNPACK DEVICE ADDRESS\n         TR    WORK_A(4),HEXCHAR              TRANSLATE\n         MVC   MSG_02_CUAD,WORK_A             COPY DEVICE ADDRESS\n         UNPK  WORK_A(3),TDDDEVC(2)           UNPACK DEVICE CLASS\n         TR    WORK_A(2),HEXCHAR              TRANSLATE\n         MVC   MSG_02_DEVC,WORK_A             COPY DEVICE CLASS\n         UNPK  WORK_A(3),TDDUTYP(2)           UNPACK DEVICE TYPE\n         TR    WORK_A(2),HEXCHAR              TRANSLATE\n         MVC   MSG_02_UTYP,WORK_A             COPY DEVICE TYPE\n         ICM   R1,15,TDDNEXCP                 NUMBER OF EXCP'S\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_02_EXCP,COMM_DWORD+3\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCT   R6,MAIN0060\n         B     EXIT0000                       SCREEN FULL\nMAIN0060 DS    0H\n         LA    R7,8(,R7)                      NEXT DEVICE\n         BCT   R5,MAIN0050                    LOOP\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         SR    R15,R15                        SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0040)\nH2             DC    H'2'\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nUNALLOCATION    DC   C'UNALLOCATION'\nCONCATENATION   DC   C'CONCATENATION'\nDECONCATENATION DC   C'DE-CONCATENATION'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Job name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_UIF     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' User id'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_UDATA   DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Step number'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_INVSQ   DC    X'40202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Function'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_FLG     DC    CL20' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Device'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_CUAD    DC    CL4' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Type'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_UTYP    DC    CL2' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Class'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_DEVC    DC    CL2' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' EXCP''s'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_EXCP    DC    X'402020206B2020206B202120'\nMSG_02_L       EQU   *-MSG_02\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0040         DSECT\n               COPY     DXDPREF\nWORK_A         DS       CL8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR  40\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0040\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0042": {"ttr": 3078, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 42 (hex 2A)                          *\n*         DFP statistics and configuration                            *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0042  CSECT\nSMF0042  AMODE 31\nSMF0042  RMODE ANY\n         USING OSCOMM,R12\n         USING SMF0042,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0042'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         USING SESSION,R11\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         USING SMF0042,R10                    DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0042,R13                     DEFINE BASE\n         USING OSSPFD,R9                      DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         USING SMF42FLG,R7\n         MVC   0(MSG_01_L,R8),MSG_01          COPY TO BUFFER\n         USING MSG_01,R8                      DEFINE BASE\n         MVC   MSG_01_SSI,SMF42SSI            COPY SUBSYSTEM ID\n         MVC   MSG_01_STY,SMF42STY+1          COPY RECORD SUB TYPE\n         OI    MSG_01_STY,X'F0'               MAKE IT PRINTABLE\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         CLI   SMF42STY+1,X'01'               SUBTYPE 01?\n         BE    T0010000                       YES\n         CLI   SMF42STY+1,X'06'               SUBTYPE 06?\n         BE    T0060000                       YES\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*        Subtype 01 (BMF statistics)                                  *\n*---------------------------------------------------------------------*\nT0010000 DS    0H\n         ITRACE ID=TYPE001\n         USING SMF42S1,SMF42OPS\n         L     R6,SMF42BMO                    OFFSET TO BMF STATISTICS\n         AR    R6,R7                          PLUS ADDRESS OF BASE\n         SH    R6,H4                          MINUS 4\n         USING SMF4201A,R6                    DEFINE BASE\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8                      DEFINE BASE\n         L     R1,SMF42TNA                    NUMBER OF STORAGE CLASSES\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_02_TNA,COMM_DWORD+5\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8                      DEFINE BASE\n         L     R1,SMF42TRT                    MEMBER PAGE READS\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_03_TRT,COMM_DWORD+5\n         L     R1,SMF42TRH                    MEMBER PAGE HITS\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_03_TRH,COMM_DWORD+5\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8                      DEFINE BASE\n         L     R1,SMF42TDT                    DIRECTORY PAGE READS\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_04_TDT,COMM_DWORD+5\n         L     R1,SMF42TDH                    DIRECTORY PAGE HITS\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_04_TDH,COMM_DWORD+5\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8                      DEFINE BASE\n         L     R1,SMF42BUF                    ACTIVE 4K BUFFERS\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_05_BUF,COMM_DWORD+5\n         L     R1,SMF42BMX                    BUFFER HIGH WATER MARK\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_05_BMX,COMM_DWORD+5\n         LH    R1,SMF42LRU                    BMF LRU INTERVAL\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_05_LRU,COMM_DWORD+5\n         LH    R1,SMF42UIC                    LRU CYCLES\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_05_UIC,COMM_DWORD+5\n         DROP  R8\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*        Subtype 06 (dataset by job)                                  *\n*---------------------------------------------------------------------*\nT0060000 DS    0H\n         ITRACE ID=TYPE006\n         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE\n         MVC   0(T6MSG_01_L,R8),T6MSG_01\n         USING T6MSG_01,R8\n         ICM   R4,15,SMF42OPS                 OFFSET TO PRODUCT SECTION\n         AR    R4,R7                          PLUS BASE\n         SH    R4,H4                          MINUS 4\n         USING SMF42PRD,R4                    DEFINE BASE\n         MVC   T6MSG_01_PDL,SMF42PDL          COPY PRODUCT LEVEL\n         MVC   T6MSG_01_PDN,SMF42PDN          COPY PRODUCT NAME\n         DROP  R4,R8\n\n         A     R8,SPF_VWIDTH\n         LA    R6,SMF42END                    NEXT TRIPLET\n         USING SMF42S6,R6                     DEFINE BASE\n         ICM   R4,15,SMF42JHO                 OFFSET TO JOB HEADER\n         AR    R4,R7                          PLUS BASE\n         SH    R4,H4                          MINUS 4\n         USING SMF4206A,R4\n         MVC   0(T6MSG_02_L,R8),T6MSG_02\n         USING T6MSG_02,R8\n         MVC   T6MSG_02_JNM,S42JDJNM\n         OC    S42JDRSD,S42JDRSD              DATE PRESENT?\n         BZ    T0060005                       ON\n         MVC   DXD_DATE,S42JDRSD\n         AP    DXD_DATE,P1900000\n         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2\n         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE\n         MVC   T6MSG_02_RSD,DXD_A+1\n         ICM   R1,15,S42JDRST\n         BAL   R15,TIME0000                   CONVERT TIME\n         MVC   T6MSG_02_RST,DXD_B             COPY CONVERTED TIME\n         DROP  R8\n\nT0060005 DS    0H\n         A     R8,SPF_VWIDTH\n         MVC   0(T6MSG_03_L,R8),T6MSG_03\n         USING T6MSG_03,R8\n         MVC   T6MSG_03_UID,S42JDUID          COPY USER ID\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         MVC   0(T6MSG_04_L,R8),T6MSG_04\n         USING T6MSG_04,R8\n         CLI   S42JDCOD,0                     CLOSE?\n         BE    T0060010                       YES\n         MVC   T6MSG_04_COD,INTERVAL          TYPE IS 'INTERVAL'\n         B     T0060020\nT0060010 DS    0H\n         MVC   T6MSG_04_COD,CLOSE             TYPE IS 'CLOSE'\nT0060020 DS    0H\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,S42JDPGN                  PERFORMANCE GROUP\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    T6MSG_04_PGN,COMM_DWORD+5\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         MVC   0(T6MSG_05_L,R8),T6MSG_05\n         USING T6MSG_05,R8\n         MVC   T6MSG_05_WSC,S42JDWSC          COPY WLM CLASS\n         MVC   T6MSG_05_WLD,S42JDWLD          COPY WLM WORKLOAD NAME\n         DROP  R4,R8\n\n         A     R8,SPF_VWIDTH\n         A     R8,SPF_VWIDTH\n         AH    R4,SMF42JHL                    DATA SET HEADER\n         USING S42DSH,R4                      DEFINE BASE\n         MVC   0(T6MSG_06_L,R8),T6MSG_06\n         USING T6MSG_06,R8\n         MVC   T6MSG_06_DSN,S42DSN            COPY DATA SET NAME\n         UNPK  DXD_A(5),S42DSDEV(3)           UNPACK DEVICE\n         TR    DXD_A(4),HEXCHAR               TRANSLATE\n         MVC   T6MSG_06_DEV,DXD_A\n         MVC   T6MSG_06_VOL,S42DSVOL          COPY VOLSER\n         DROP  R8\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nTIME0000 DS    0H\n         SR    R0,R0\n         D     R0,F100                        CONVERT TO WHOLE SECONDS\n         SR    R0,R0                          CLEAR REMAINDER\n         D     R0,F3600                       COMPUTE HOURS\n         CVD   R1,COMM_DWORD                  CONVERT HOURS\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+0(2),DXD_A+2             COPY HOURS\n         MVI   DXD_B+2,C':'                   INSERT COLON\n         LR    R1,R0                          COPY REMAINDER\n         SR    R0,R0                          CLEAR R0\n         D     R0,F60                         COMPUTE MINUTES\n         CVD   R1,COMM_DWORD                  CONVERT MINUTES\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+3(2),DXD_A+2             COPY MINUTES\n         MVI   DXD_B+5,C':'                   INSERT COLON\n         CVD   R0,COMM_DWORD                  CONVERT SECONDS\n         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6\n         MVC   DXD_B+6(2),DXD_A+2             COPY SECONDS\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         SR    R15,R15                        SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0042)\nF3600          DC    F'3600'\nF100           DC    F'100'\nF60            DC    F'60'\n\nH4             DC    H'4'\n\nP1900000       DC    P'1900000'\n\nEDIT_WORD_1    DC    X'F0202020'\nEDIT_WORD_2    DC    X'F0202020204B202020'\n\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nCLOSE          DC    CL8'Close   '\nINTERVAL       DC    CL8'Interval'\n\nMSG_01         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Subsystem ID'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_SSI     DC    CL4' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Record subtype'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_STY     DC    C' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Storage classes'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_TNA     DC    X'402020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Measurement time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_TMT     DC    X'402020202120'\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Member data page reads   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_TRT     DC    X'402020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Hits'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_TRH     DC    X'402020202120'\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Directory data page reads'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_TDT     DC    X'402020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Hits'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_TDH     DC    X'402020202120'\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    CL10' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Total 4k buffers'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_BUF     DC    X'402020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' High water mark'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_BMX     DC    X'402020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' BMF LRU time'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_LRU     DC    X'402020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' BMF UIC'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_UIC     DC    X'402020202120'\nMSG_05_L       EQU   *-MSG_05\n\n*  ------------------------------------------------------\n*              SUB TYPE 6 MESSAGES\n*  ------------------------------------------------------\nT6MSG_01       DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Product level    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_01_PDL   DC    CL8' '\n               DC    CL3' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Product name     '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_01_PDN   DC    CL10' '\nT6MSG_01_L     EQU   *-T6MSG_01\n\nT6MSG_02       DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'JOB name         '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_02_JNM   DC    CL8' '\n               DC    CL3' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Reader date/time '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_02_RSD   DC    CL8' '\n               DC    C' '\nT6MSG_02_RST   DC    CL8' '\nT6MSG_02_L     EQU   *-T6MSG_02\n\nT6MSG_03       DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'User             '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_03_UID   DC    CL8' '\nT6MSG_03_L     EQU   *-T6MSG_03\n\nT6MSG_04       DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Type             '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_04_COD   DC    CL8' '\n               DC    CL3' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Performance group'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_04_PGN   DC    X'402020202120'\nT6MSG_04_L     EQU   *-T6MSG_04\n\nT6MSG_05       DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'WLM service class'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_05_WSC   DC    CL8' '\n               DC    CL3' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'WLM workload name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_05_WLD   DC    CL8' '\nT6MSG_05_L     EQU   *-T6MSG_05\n\nT6MSG_06       DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'DSN'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_06_DSN   DC    CL44' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Device'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_06_DEV   DC    CL4' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'VOLSER'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6MSG_06_VOL   DC    CL6' '\nT6MSG_06_L     EQU   *-T6MSG_06\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0042         DSECT\n               COPY     DXDPREF\nDXD_A          DS       CL80\nDXD_B          DS       CL80\nDXD_DATE       DS       PL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IGWSMF  SMF42_01=YES,                                      +\n               SMF42_02=YES,                                           +\n               SMF42_06=YES,                                           +\n               SMF42_0L=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY REGEQU\n               END  SMF0042\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0060": {"ttr": 3330, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 60                                   *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0060  CSECT\nSMF0060  AMODE 31\nSMF0060  RMODE ANY\n         USING OSCOMM,R12\n         USING SMF0060,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0060'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                      DEFINE COMMON AREA BASE\n         USING SESSION,R11\n         STM   R14,R12,12(R13)                 SAVE REGS\n         LR    R10,R15                         COPY ENTRY POINT\n         USING SMF0060,R10                     DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                       SAVE R13\n         ST    R1,8(R13)                       CHAIN SAVE AREA\n         LR    R13,R1                          COPY WORK AREA ADDRESS\n         USING WK0060,R13                      DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9                       DEFINE BASE\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         USING SMF60SYS,R7\n         MVC   0(MSG_01_L,R8),MSG_01           COPY MESSAGE\n         USING MSG_01,R8                       DEFINE BASE\n         MVC   MSG_01_PNM,SMF60PNM             COPY PRODUCT NAME\n         MVC   MSG_01_VER,SMF60VER             COPY VERSION\n         DROP  R8\n         A     R8,SPF_VWIDTH                   NEXT LINE\n         MVC   0(MSG_02_L,R8),MSG_02           COPY MESSAGE\n         USING MSG_02,R8                       DEFINE BASE\n         MVC   MSG_02_JNM,SMF60JNM             COPY JOB NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH                   NEXT LINE\n         MVC   0(MSG_03_L,R8),MSG_03           COPY MESSAGE\n         USING MSG_03,R8                       DEFINE BASE\n         MVC   MSG_03_UID,SMF60UID             COPY USER ID\n         DROP  R8\n         A     R8,SPF_VWIDTH                   NEXT LINE\n         MVC   0(MSG_04_L,R8),MSG_04           COPY MESSAGE\n         USING MSG_04,R8                       DEFINE BASE\n         MVC   MSG_04_CNM,SMF60CNM             VVDS NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH                   NEXT LINE\n         MVC   0(MSG_05_L,R8),MSG_05           COPY MESSAGE\n         USING MSG_05,R8                       DEFINE BASE\n         MVC   MSG_05_ENM,SMF60ENM             ENTRY NAME\n         DROP  R8\n         A     R8,SPF_VWIDTH                   NEXT LINE\n         MVC   0(MSG_06_L,R8),MSG_06           COPY MESSAGE\n         USING MSG_06,R8                       DEFINE BASE\n         LA    R15,TYPES                       FIRST TYPE\n         USING TYPE_DSECT,R15\nMAIN0010 DS    0H\n         CLC   TYPE_TYPE,SMF60TYP              LOCATED THE TYPE?\n         BE    MAIN0020                        YES\n         LA    R15,TYPE_L(,R15)                NEXT TYPE\n         CLI   0(R15),X'FF'                    END OF TABLE?\n         BNE   MAIN0010                        NO\n         MVC   MSG_06_TYP(L'UNKNOWN),UNKNOWN\n         B     EXIT0000\nMAIN0020 DS    0H\n         MVC   MSG_06_TYP,TYPE_DESC\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         SR    R15,R15                        SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0060)\nUNKNOWN        DC    C'Unknown'\n\nTYPES          DS    0C\n               DC    C'A',CL40'Non-VSAM data set'\n               DC    C'B',CL40'Generation data group (GDG) base'\n               DC    C'C',CL40'Cluster'\n               DC    C'D',CL40'Data set'\n               DC    C'G',CL40'Alternate index'\n               DC    C'I',CL40'Index'\n               DC    C'M',CL40'Master catalog'\n               DC    C'P',CL40'Page space'\n               DC    C'R',CL40'Path'\n               DC    C'U',CL40'User catalog'\n               DC    C'V',CL40'Volume'\n               DC    C'X',CL40'Alias'\n               DC    C'Y',CL40'Upgrade'\n               DC    X'FF'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Product name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_PNM     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Version'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_VER     DC    CL2' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Job name    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_JNM     DC    CL8' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'User        '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_UID     DC    CL8' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'VVDS name   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_CNM     DC    CL44' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Entry name  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_ENM     DC    CL44' '\nMSG_05_L       EQU   *-MSG_05\n\nMSG_06         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Entry type  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_TYP     DC    CL40' '\nMSG_06_L       EQU   *-MSG_06\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0060         DSECT\n               COPY     DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTYPE_DSECT     DSECT\nTYPE_TYPE      DS       C\nTYPE_DESC      DS       CL40\nTYPE_L         EQU      *-TYPE_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFI6 60\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0060\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0061": {"ttr": 3336, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 61                                   *\n*         ICF define activity                                         *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD ADDRESS                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF RECORD ADDRESS +4 (DOES NOT INCLUDE LENGTH)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0061  CSECT\nSMF0061  AMODE 31\nSMF0061  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0061,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0061'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         USING SMF0061,R10                    DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0061,R13                     DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9                      DEFINE BASE\n         USING SMF61SYS,R7                    DEFINE BASE\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ICM   R3,15,SMF61DOF                 OFFSET TO DATA\n         AR    R3,R7\n         SH    R3,H4\n         USING SMF61DAT,R3                    DEFINE BASE\nMAIN0010 DS    0H\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8\n         MVC   MSG_01_JOB,SMF61JNM            COPY JOB NAME\n         MVC   MSG_01_USER,SMF61UID           COPY USER ID\n         MVC   MSG_01_CATALOG,SMF61CNM        COPY CATALOG NAME\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         DROP  R8\n         LA    R1,TYPES                       FIRST COMPONENT TYPE\n         USING TYPE_DSECT,R1\nMAIN0020 DS    0H\n         CLI   TYPE_TYPE,X'FF'                END OF TABLE?\n         BE    MAIN0030                       YES\n         CLC   TYPE_TYPE,SMF61TYP             FOUND THE TYPE\n         BE    MAIN0030                       YES\n         LA    R1,TYPE_L(,R1)                 NEXT TYPE\n         B     MAIN0020\nMAIN0030 DS    0H\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8\n         MVC   MSG_02_TYPE,TYPE_DESC          COPY DESCRIPTION\n         MVC   MSG_02_NAME,SMF61ENM           COPY ENTRY NAME\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*        CONSTANTS                                                    *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0061)\nH4             DC    H'4'\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' JOB'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_JOB     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' User'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_USER    DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' CAT'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_CATALOG DC    CL44' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Type'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_TYPE    DC    CL20' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_NAME    DC    CL44' '\nMSG_02_L       EQU   *-MSG_02\n\n\nTYPES          DS    0C\n               DC    C'A',CL20'Non_VSAM data set'\n               DC    C'B',CL20'GDG base'\n               DC    C'C',CL20'VSAM Cluster'\n               DC    C'D',CL20'Data set'\n               DC    C'G',CL20'Alternate index'\n               DC    C'H',CL20'GDG member'\n               DC    C'I',CL20'VSAM Index'\n               DC    C'M',CL20'Master catalog'\n               DC    C'P',CL20'Page space'\n               DC    C'R',CL20'Path'\n               DC    C'U',CL20'User catalog'\n               DC    C'V',CL20'Volume'\n               DC    C'X',CL20'Alias'\n               DC    C'Y',CL20'Upgrade'\n               DC    X'FF',CL20'Unknown'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0061         DSECT\n               COPY     DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFI6 61\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTYPE_DSECT     DSECT\nTYPE_TYPE      DS       X\nTYPE_DESC      DS       CL20\nTYPE_L         EQU      *-TYPE_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0061\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0062": {"ttr": 3341, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 61                                   *\n*         VSAM component or cluster opened                            *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF RECORD ADDRESS +4 (DOES NOT INCLUDE LENGTH)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0062  CSECT\nSMF0062  AMODE 31\nSMF0062  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0062,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0062'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         USING SMF0062,R10                    DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0062,R13                     DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9                      DEFINE BASE\n         USING SMF62FLG,R7                    DEFINE BASE\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8\n         MVC   MSG_01_JOB,SMF62JBN            COPY JOB NAME\n         MVC   MSG_01_USER,SMF62UIF           COPY USER ID\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8\n         TM    SMF62IND,X'80'                 SUCCESSFUL?\n         BO    MAIN0010                       YES\n         TM    SMF62IND,X'40'                 SECURITY VIOLATION?\n         BO    MAIN0020                       YES\n         B     MAIN0030\nMAIN0010 DS    0H\n         MVC   MSG_02_STATUS(SUCCESSFUL_L),SUCCESSFUL\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         B     MAIN0030\nMAIN0020 DS    0H\n         MVC   MSG_02_STATUS(VIOLATION_L),VIOLATION\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\nMAIN0030 DS    0H\n         TM    SMF62IND,X'20'                 CATALOG OR CRA RECORD?\n         BO    MAIN0040                       YES\n         TM    SMF62IND,X'10'                 VVDS OR CATALOG?\n         BO    MAIN0050                       YES\n         B     MAIN0060\nMAIN0040 DS    0H\n         MVC   MSG_02_STATUS(CRA_L),CRA\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         B     MAIN0060\nMAIN0050 DS    0H\n         MVC   MSG_02_STATUS(VVDS_L),VVDS\n         DROP  R8\nMAIN0060 DS    0H\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8\n         MVC   MSG_03_CATALOG,SMF62CNM\n         MVC   MSG_03_VOLSER,SMF62CVS\n         DROP  R8\n\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         LA    R1,SMF62VSR                    FIRST VOLSER/UNIT\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8\n         MVC   MSG_04_NAME,SMF62DNM           COPY DATA SET NAME\n         CH    R6,SMF62VCT                    ALL VOLSERS FIT?\n         BL    MAIN0070                       NO\n         LH    R6,SMF62VCT                    USE ALL VOLSER(S)\nMAIN0070 DS    0H\n         MVC   MSG_04_VOLSER,0(R1)            COPY VOLSER\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         LA    R1,10(,R1)                     NEXT VOLSER/UNIT\n         BCT   R6,MAIN0070\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(R13)\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0062)\nSUCCESSFUL     DC    C'Successful'\nSUCCESSFUL_L   EQU   *-SUCCESSFUL\nVIOLATION      DC    C'Security violation'\nVIOLATION_L    EQU   *-VIOLATION\nCRA            DC    C'Catalog or CRA'\nCRA_L          EQU   *-CRA\nVVDS           DC    C'VVDS OR CATALOG OPENED AS A DATASET'\nVVDS_L         EQU   *-VVDS\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'JOB      '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_JOB     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' User'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_USER    DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Status   '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_STATUS  DC    CL60' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Catalog  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_CATALOG DC    CL44' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'VOLSER'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_VOLSER  DC    CL6' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Component'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_NAME    DC    CL44' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'VOLSER'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_VOLSER  DC    CL6' '\nMSG_04_L       EQU   *-MSG_04\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0062         DSECT\n               COPY     DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IDASMF62\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0062\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0064": {"ttr": 3587, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 64                                   *\n*                                                                     *\n*         VSAM component or cluster status                            *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0064  CSECT\nSMF0064  AMODE 31\nSMF0064  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0064,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0064'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12            DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         USING SMF0064,R10           DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)             SAVE R13\n         ST    R1,8(R13)             CHAIN SAVE AREA\n         LR    R13,R1                COPY WORK AREA ADDRESS\n         USING WK0064,R13            DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9             DEFINE BASE\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         USING SMF64FLG,R7\n         MVC   0(MSG_01_L,R8),MSG_01 COPY\n         USING MSG_01,R8\n         MVC   MSG_01_JBN,SMF64JBN\n         MVC   MSG_01_UIF,SMF64UIF\n         DROP  R8\n         BCTR  R6,0\n\n         A     R8,SPF_VWIDTH         NEXT LINE\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8\n         MVC   MSG_02_CNM,SMF64CNM   COPY CATALOG NAME\n         DROP  R8\n         BCTR  R6,0\n\n         A     R8,SPF_VWIDTH         NEXT LINE\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8\n         MVC   MSG_03_DNM,SMF64DNM   COPY COMPONENT NAME\n         TM    SMF64DTY,X'80'        DATA COMPONENT?\n         BO    MAIN0010\n         TM    SMF64DTY,X'40'        INDEX COMPONENT?\n         BO    MAIN0020\n         MVC   MSG_03_DTY,UNKNOWN\n         B     MAIN0030\nMAIN0010 DS    0H\n         MVC   MSG_03_DTY,DATA       INDICATE DATA COMPONENT\n         B     MAIN0030\nMAIN0020 DS    0H\n         MVC   MSG_03_DTY,INDEX      INDICATE INDEX COMPONENT\nMAIN0030 DS    0H\n         DROP  R8\n         BCTR  R6,0\n\n         A     R8,SPF_VWIDTH         NEXT LINE\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8\n         TM    SMF64RIN,X'80'        COMPONENT CLOSED?\n         BO    MAIN0040              YES\n         TM    SMF64RIN,X'40'        VOLUME SWITCHED?\n         BO    MAIN0050              YES\n         TM    SMF64RIN,X'20'        NO SPACE AVAILABLE?\n         BO    MAIN0060              YES\n         TM    SMF64RIN,X'10'        CATALOG OR CRA RECORD?\n         BO    MAIN0070              YES\n         TM    SMF64RIN,X'08'        COMPONENT CLOSED WITH TYPE=T?\n         BO    MAIN0080              YES\n         TM    SMF64RIN,X'04'        ABEND?\n         BO    MAIN0090              YES\n         TM    SMF64RIN,X'02'        VVDS OR CATALOG OPENED AS DATA SET\n         BO    MAIN0100              YES\n         B     MAIN0110\nMAIN0040 DS    0H\n         MVC   MSG_04_RIN(L'SITUATION_1),SITUATION_1\n         B     MAIN0110\n         B     EXIT0000\nMAIN0050 DS    0H\n         MVC   MSG_04_RIN(L'SITUATION_2),SITUATION_2\n         B     MAIN0110\nMAIN0060 DS    0H\n         MVC   MSG_04_RIN(L'SITUATION_3),SITUATION_3\n         B     MAIN0110\nMAIN0070 DS    0H\n         MVC   MSG_04_RIN(L'SITUATION_4),SITUATION_4\n         B     MAIN0110\nMAIN0080 DS    0H\n         MVC   MSG_04_RIN(L'SITUATION_5),SITUATION_5\n         B     MAIN0110\nMAIN0090 DS    0H\n         MVC   MSG_04_RIN(L'SITUATION_6),SITUATION_6\n         B     MAIN0110\nMAIN0100 DS    0H\n         MVC   MSG_04_RIN(L'SITUATION_7),SITUATION_7\nMAIN0110 DS    0H\n         DROP  R8\n         BCTR  R6,0\n\n         A     R8,SPF_VWIDTH         NEXT LINE\n         SR    R5,R5                 CLEAR R5\n         ICM   R5,3,SMF64ESL         LENGTH OF EXTENT DATA\n         LA    R7,SMF64FCC\n         USING SMF64FCC,R7           DEFINE BASE\n         BZ    EXIT0000\nMAIN0120 DS    0H\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8\n         MVC   MSG_05_VSN,SMF64VSN   COPY VOLSER\n         UNPK  DXD_A(5),SMF64CUU(3)  UNPACK DEVICE\n         TR    DXD_A(4),HEXCHAR      TRANSLATE\n         MVC   MSG_05_CUU,DXD_A      COPY DEVICE\n         DROP  R8\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCT   R6,MAIN0130\n         B     EXIT0000              SCREEN IS FULL\nMAIN0130 DS    0H\n         AH    R7,=H'26'             NEXT EXTENT\n         SH    R5,=H'26'             LENGTH OF EACH EXTENT ENTRY\n         BH    MAIN0120              PROCESS NEXT EXTENT\n\n         USING SMF64SLN,R7           DEFINE BASE\n         A     R8,SPF_VWIDTH         NEXT LINE\n         MVC   0(MSG_06_L,R8),MSG_06\n         USING MSG_06,R8\n         MVC   MSG_06_DDN,SMF64DDN   COPY DD NAME\n         MVC   MSG_06_CLN,SMF64CLN   COPY CLUSTER NAME\n         DROP  R8\n\n         A     R8,SPF_VWIDTH         NEXT LINE\n         MVC   0(MSG_07_L,R8),MSG_07\n         USING MSG_07,R8\n         L     R1,SMF64DBS           BLOCK SIZE\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         ED    MSG_07_DBS,COMM_DWORD+4\n\n         DROP  R8\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCTR  R6,0\n\n         MVC   0(MSG_08_L,R8),MSG_08\n         USING MSG_08,R8\n         L     R1,SMF64DCI           CI SIZE\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         ED    MSG_08_CISZ,COMM_DWORD+4\n\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         MVC   0(MSG_09_L,R8),MSG_09\n         USING MSG_09,R8\n         L     R1,SMF64DLS           LOGICAL RECORD SIZE\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         ED    MSG_09_RECSZ,COMM_DWORD+4\n\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         MVC   0(MSG_10_L,R8),MSG_10\n         USING MSG_10,R8\n         LH    R1,SMF64DKL           KEY LENGTH\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         ED    MSG_10_KEYL,COMM_DWORD+4\n         DROP  R8\n\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCTR  R6,0\n\n         LA    R14,SMF64DEX          FIRST STATISTIC FIELD\n         LA    R15,STATS_FIELDS      FIRST FIELD DESCRIPTION\nMAIN0140 DS    0H\n         MVC   0(MSG_11_L,R8),MSG_11\n         USING MSG_11,R8             DEFINE BASE\n         MVC   MSG_11_NAME_1,0(R15)  COPY DESCRIPTOR\n         L     R1,0(R14)             STATISTIC VALUE\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         ED    MSG_11_VALUE_1,COMM_DWORD+4\n         MVC   MSG_11_NAME_2,25(R15) COPY DESCRIPTOR\n         L     R1,4(R14)             STATISTIC VALUE\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         ED    MSG_11_VALUE_2,COMM_DWORD+4\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCT   R6,MAIN0150\n         B     EXIT0000              SCREEN FULL\nMAIN0150 DS    0H\n         LA    R14,8(,R14)           NEXT STATISTICS\n         LA    R15,50(,R15)          NEXT DESCRIPTORS\n         CLI   0(R15),X'FF'          END OF DESCRIPTORS?\n         BNE   MAIN0140              NO\n\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)          RESTORE R14\n         LR    R15,R2                SET RC\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0064)\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nDATA           DC    CL8'DATA'\nINDEX          DC    CL8'INDEX'\nUNKNOWN        DC    CL8'UNKNOWN'\n\nSITUATION_1    DC    C'Component closed'\nSITUATION_2    DC    C'Volume switched'\nSITUATION_3    DC    C'No space available'\nSITUATION_4    DC    C'Catalog or CRA'\nSITUATION_5    DC    C'Component closed with TYPE=T'\nSITUATION_6    DC    C'Abend'\nSITUATION_7    DC    C'VVDS or catalog referenced as dataset'\n\nSTATS_FIELDS   DS    0C\n               DC    CL25'Extents'\n               DC    CL25'Logical records'\n\n               DC    CL25'Records deleted'\n               DC    CL25'Records inserted'\n\n               DC    CL25'Records updated'\n               DC    CL25'Records retreived'\n\n               DC    CL25'Unused CI space'\n               DC    CL25'CI splits'\n\n               DC    CL25'CA splits'\n               DC    CL25'EXCPs'\n               DC    X'FF'\n\n\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'JOB name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_JBN     DC    X'4020202020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'User id'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_UIF     DC    X'4020202020202120'\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Catalog name      '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_CNM     DC    CL44' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Component name    '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_DNM     DC    CL44' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Type'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_DTY     DC    CL8' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Situation         '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_RIN     DC    CL50' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Volser            '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_VSN     DC    CL6' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'   Device'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_CUU     DC    CL4' '\nMSG_05_L       EQU   *-MSG_05\n\nMSG_06         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'DD name           '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_DDN     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Cluster name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_CLN     DC    CL44' '\nMSG_06_L       EQU   *-MSG_06\n\nMSG_07         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'BLOCK SIZE        '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_DBS     DC    X'4020202020202120'\nMSG_07_L       EQU   *-MSG_07\n\nMSG_08         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'CI SIZE           '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_08_CISZ    DC    X'4020202020202120'\nMSG_08_L       EQU   *-MSG_08\n\nMSG_09         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'RECORD SIZE       '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_09_RECSZ   DC    X'4020202020202120'\nMSG_09_L       EQU   *-MSG_09\n\nMSG_10         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'KEY LENGTH        '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_10_KEYL    DC    X'4020202020202120'\nMSG_10_L       EQU   *-MSG_10\n\nMSG_11         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG_11_NAME_1  DC    CL25' '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_11_VALUE_1 DC    X'4020202020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG_11_NAME_2  DC    CL25' '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_11_VALUE_2 DC    X'4020202020202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG_11_L       EQU   *-MSG_11\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0064         DSECT\n               COPY     DXDPREF\nDXD_A          DC       CL80' '\nDXD_B          DC       CL80' '\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR  64\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0064\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0066": {"ttr": 3597, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 66                                   *\n*                                                                     *\n*         ICF alter activity                                          *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0066  CSECT\nSMF0066  AMODE 31\nSMF0066  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0066,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0066'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12            DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         USING SMF0066,R10           DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)             SAVE R13\n         ST    R1,8(R13)             CHAIN SAVE AREA\n         LR    R13,R1                COPY WORK AREA ADDRESS\n         USING WK0066,R13            DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9             DEFINE BASE\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         USING SMF66SYS,R7\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_01_L,R8),MSG_01 COPY\n         USING MSG_01,R8\n         ITRACE ID=SMF66SUB,                                           +\n               DATA1=(SMF66SUB,2)\n         CLC   =C'DE',SMF66SUB       DELETE?\n         BE    MAIN0010              YES\n         CLC   =C'IN',SMF66SUB       INSERT?\n         BE    MAIN0020              YES\n         MVC   MSG_01_ACTIVITY,UPDATE\n         B     MAIN0030\nMAIN0010 DS    0H\n         MVC   MSG_01_ACTIVITY,DELETE\n         B     MAIN0030\nMAIN0020 DS    0H\n         MVC   MSG_01_ACTIVITY,INSERT\nMAIN0030 DS    0H\n         DROP  R8\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCTR  R6,0\n\n         ICM   R5,15,SMF66POF        OFFSET TO PRODUCT SECTION(S)\n         BZ    EXIT0000              NO PRODUCT SECTION(S)\n         AR    R5,R7                 PLUS BASE\n         SH    R5,H4                 MINUS 4\n         USING SMF66VER,R5           DEFINE BASE\n         SR    R4,R4\n         ICM   R4,3,SMF66PNO         NUMBER OF PRODUCT SECTIONS\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process product and data sections                            *\n*---------------------------------------------------------------------*\nMAIN0100 DS    0H\n         MVC   0(MSG_02_L,R8),MSG_02 INITIALIZE MESSAGE\n         USING MSG_02,R8\n         MVC   MSG_02_VERSION,SMF66VER\n         MVC   MSG_02_PRODUCT,SMF66PNM\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         MVC   0(MSG_03_L,R8),MSG_03 INITIALIZE MESSAGE\n         USING MSG_03,R8\n         MVC   MSG_03_JOB,SMF66JNM\n         MVC   MSG_03_USER,SMF66UID\n         DROP  R8\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCT   R6,MAIN0110\n         B     EXIT0000\n\nMAIN0110 DS    0H\n         MVC   0(MSG_04_L,R8),MSG_04 INITIALIZE MESSAGE\n         USING MSG_04,R8\n         MVC   MSG_04_CATALOG,SMF66CNM\n         DROP  R8\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCT   R6,MAIN0120\n         B     EXIT0000\nMAIN0120 DS    0H\n         MVC   0(MSG_05_L,R8),MSG_05 INITIALIZE MESSAGE\n         USING MSG_05,R8\n         MVC   MSG_05_NAME,SMF66ENM\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         LA    R1,TYPE_TABLE         TYPE TABLE\n         USING TYPE_DSECT,R1\nMAIN0130 DS    0H\n         ITRACE ID=X,DATA1=(TYPE,1),DATA2=(SMF66TYP,1)\n         CLC   TYPE,SMF66TYP         TYPE LOCATED\n         BE    MAIN0140              YES\n         LA    R1,TYPE_L(,R1)        NEXT TYPE\n         CLI   0(R1),X'FF'           END OF TABLE?\n         BNE   MAIN0130              YES\nMAIN0140 DS    0H\n         MVC   0(MSG_06_L,R8),MSG_06\n         USING MSG_06,R8\n         MVC   MSG_06_TYPE,SMF66TYP\n         MVC   MSG_06_DESC,TYPE_DESC\n         DROP  R1,R8\n\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCT   R6,MAIN0150\n         B     MAIN0160\nMAIN0150 DS    0H\n         CLI   SMF66FNC,C'R'         RENAME?\n         BNE   MAIN0160              NO\n         MVC   0(MSG_07_L,R8),MSG_07 INITIALIZE MESSAGE\n         USING MSG_07,R8\n         MVC   MSG_07_NAME,SMF66NNM\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCT   R6,MAIN0160\n         B     EXIT0000\nMAIN0160 DS    0H\n         AH    R5,SMF66PLN           NEXT SECTION\n         BCT   R4,MAIN0100           LOOP\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)          RESTORE R14\n         LR    R15,R2                SET RC\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART        DC    Q(WK0066)\n\nH4              DC    H'4'\n\nDELETE          DC    CL6'DELETE'\nINSERT          DC    CL6'INSERT'\nUPDATE          DC    CL6'UPDATE'\n\nMSG_01          DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Activity          '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_ACTIVITY DC    CL6' '\nMSG_01_L        EQU   *-MSG_01\n\nMSG_02          DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Product name      '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_PRODUCT  DC    CL8' '\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'  Version'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_VERSION  DC    CL2' '\nMSG_02_L        EQU   *-MSG_02\n\nMSG_03          DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Job name          '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_JOB      DC    CL8' '\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'  User ID'\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_USER     DC    CL8' '\nMSG_03_L        EQU   *-MSG_03\n\nMSG_04          DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Catalog name      '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_CATALOG  DC    CL44' '\nMSG_04_L        EQU   *-MSG_04\n\nMSG_05          DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Entry name        '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_NAME     DC    CL44' '\nMSG_05_L        EQU   *-MSG_05\n\nMSG_06          DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'Type              '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_TYPE     DC    C' '\n                DC    C'   '\nMSG_06_DESC     DC    CL15' '\nMSG_06_L        EQU   *-MSG_06\n\nMSG_07          DS    0C\n                DC    AL1($SCREEN_ATTR_HIGH)\n                DC    C'New name          '\n                DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_NAME     DC    CL44' '\nMSG_07_L        EQU   *-MSG_07\n\nTYPE_TABLE      DS    0C\n                DC    C'A',CL15'non VSAM'\n                DC    C'B',CL15'GDG base'\n                DC    C'C',CL15'VSAM Cluster'\n                DC    C'D',CL15'Data set'\n                DC    C'G',CL15'Alternate index'\n                DC    C'I',CL15'Index'\n                DC    C'M',CL15'Master catalog'\n                DC    C'P',CL15'Page space'\n                DC    C'R',CL15'Path'\n                DC    C'U',CL15'User catalog'\n                DC    C'V',CL15'Volume'\n                DC    C'X',CL15'Alias name'\n                DC    C'Y',CL15'Upgrade'\n                DC    X'FF',CL15'Unknown'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0066         DSECT\n               COPY    DXDPREF\nDXD_A          DC      CL80' '\nDXD_B          DC      CL80' '\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTYPE_DSECT     DSECT\nTYPE           DS      C\nTYPE_DESC      DS      CL15\nTYPE_L         EQU     *-TYPE_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFI6 66\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY    ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY    TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY    REGEQU\n               END     SMF0066\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0070": {"ttr": 3845, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 70                                   *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0070  CSECT\nSMF0070  AMODE 31\nSMF0070  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0070,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0070'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         LA    R9,2048(R10)\n         LA    R9,2048(R9)\n         DROP  R15\n         USING SMF0070,R10,R9                 DEFINE BASE\n         LR    R2,R1                          COPY SCREEN NUMBER\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0070,R13                     DEFINE BASE\n         USING SMF70FLG,R7\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=(SMF70STY,1),                                     +\n               RDATA2=R2\n         L     R1,COMM_OSSPFD\n         USING OSSPFD,R1\n         L     R6,SPF_VDEPTH                  NUMBER OF LINES AVAILABLE\n         MVC   DXD_VWIDTH,SPF_VWIDTH\n         DROP  R1\n         A     R8,DXD_VWIDTH                  LEAVE A BLANK LINE\n         BCTR  R6,0\n         CLC   SMF70STY,X_0001                SUBTYPE 1?\n         BE    INIT0010                       YES\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*      We don't have a crypto processor.. if I did try to add         *\n*      code to process it, I wouldn't know if it was working.         *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n*        CLC   SMF70STY,X_0002                SUBTYPE 2?\n*        BE    INIT0020\n         ITRACE ID=BAD_SUB\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nINIT0010 DS    0H\n         CH    R2,H15                         TOO HIGH FOR TYPE 1?\n         BH    MAIN0100                       YES\n         SLL   R2,2                           TIMES  4\n         B     *(R2)\n         B     MAIN0100                       SUBTYPE 1 SCREEN 1\n         B     MAIN0400                       SUBTYPE 1 SCREEN 2\n         B     MAIN0600                       SUBTYPE 1 SCREEN 3\n         B     MAIN0700                       SUBTYPE 1 SCREEN 4\n         B     MAIN0800                       SUBTYPE 1 SCREEN 5\n         B     MAIN0900                       SUBTYPE 1 SCREEN 6\n         B     MAIN1000                       SUBTYPE 1 SCREEN 7\n         B     MAIN1100                       SUBTYPE 1 SCREEN 8\n         B     MAIN1200                       SUBTYPE 1 SCREEN 9\n         B     MAIN1300                       SUBTYPE 1 SCREEN 10\n         B     MAIN1400                       SUBTYPE 1 SCREEN 11\n         B     MAIN1500                       SUBTYPE 1 SCREEN 12\n         B     MAIN1600                       SUBTYPE 1 SCREEN 13\n         B     MAIN3000                       SUBTYPE 1 SCREEN 14\n         B     MAIN4000                       SUBTYPE 1 SCREEN 15\n*---------------------------------------------------------------------*\n*        Subtype 1 screen 1 (CPU control)                             *\n*---------------------------------------------------------------------*\nMAIN0100 DS    0H\n         ITRACE ID=1_1\n         L     R5,SMF70CCS                    OFFSET TO CPU CONTROL\n         AR    R5,R7                          PLUS BASE\n         SH    R5,H4\n         USING SMF70CTL,R5                    DEFINE BASE\n         LH    R4,SMF70CCN                    NUMBER OF CPU SECTION(S)\n         MVC   0(CPU_CONTROL_HEADING_L,R8),CPU_CONTROL_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\nMAIN0110 DS    0H\n         MVC   0(MSG_01_L,R8),MSG_01          INITIALIZE MESSAGE\n         USING MSG_01,R8\n         UNPK  MSG_01_MODEL(5),SMF70MOD(3)    CPU MODEL\n         TR    MSG_01_MODEL,HEXCHAR           TRANSLATE\n         MVI   MSG_01_MODEL+4,C' '\n         SR    R0,R0\n         IC    R0,SMF70VER                    CPU VERSION\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_01_VERSION,COMM_DWORD+6    EDIT CPU VERSION\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0120\n         B     EXIT0000\n         DROP  R8\n\nMAIN0120 DS    0H\n         MVC   0(MSG_02_L,R8),MSG_02          INITIALIZE MESSAGE\n         USING MSG_02,R8\n         IC    R0,SMF70BNP                    NUMBER OF PROCESSORS\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_02_PROCESSORS,COMM_DWORD+6 EDIT NUMBER OF PROCESSORS\n         LA    R15,L'MSG_02_PROCESSORS\nMAIN0130 DS    0H\n         CLI   MSG_02_PROCESSORS,C' '         BLANK?\n         BNE   MAIN0140                       NO\n         MVC   MSG_02_PROCESSORS(L'MSG_02_PROCESSORS-1),MSG_02_PROCESSO+\n               RS+1\n         MVI   MSG_02_PROCESSORS+(L'MSG_02_PROCESSORS-1),C' '\n         BCT   R15,MAIN0130                   LOOP\nMAIN0140 DS    0H\n         DROP  R8\n         A     R8,DXD_VWIDTH                  NEXT LINE\n         BCT   R6,MAIN0150\n         B     EXIT0000                       BUFFER FULL\n\nMAIN0150 DS    0H\n         MVC   0(MSG_03_L,R8),MSG_03          INITIALIZE MESSAGE\n         USING MSG_03,R8\n         TM    SMF70INB,SMF70DIF              DIAGNOSE X'204' FAILURE?\n         BNO   MAIN0160                       NO\n         MVC   MSG_03_MSG(L'DIAG204_FAILED),DIAG204_FAILED\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0160\n         B     EXIT0000\nMAIN0160 DS    0H\n         TM    SMF70INB,SMF70NPC          NUMBER OF PROCESSOR CHANGED?\n         BNO   MAIN0170                   NO\n         MVC   MSG_03_MSG(L'PROCESSOR_CHANGED),PROCESSOR_CHANGED\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0170\n         B     EXIT0000\nMAIN0170 DS    0H\n         TM    SMF70INB,SMF70TSC          DISPATCH INTERVAL CHANGED?\n         BNO   MAIN0180                   NO\n         MVC   MSG_03_MSG(L'DISPATCH_CHANGED),DISPATCH_CHANGED\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0180\n         B     EXIT0000\nMAIN0180 DS    0H\n         TM    SMF70INB,SMF70PHY          'PHYSICAL' PARTITION?\n         BNO   MAIN0190                   NO\n         MVC   MSG_03_MSG(L'PHYSICAL),PHYSICAL\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0190\n         B     EXIT0000\nMAIN0190 DS    0H\n         TM    SMF70INB,SMF70DGE          DIAGNOSE X'204' SUPPORTED?\n         BNO   MAIN0200                   NO\n         MVC   MSG_03_MSG(L'DIAG204_SUPPORTED),DIAG204_SUPPORTED\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0200\n         B     EXIT0000\n         DROP  R8\nMAIN0200 DS    0H\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8\n         TM    SMF70STF,SMF70STS          STORE SYSTEM INFORMATION?\n         BNO   MAIN0210                   NO\n         MVC   MSG_04_MSG(L'STORE_SYSTEM),STORE_SYSTEM\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0210\n         B     EXIT0000\nMAIN0210 DS    0H\n         TM    SMF70STF,SMF70ADC          CPU ADJUSTMENT FACTOR CHANGE?\n         BNO   MAIN0220                   NO\n         MVC   MSG_04_MSG(L'CPU_ADJUSTMENT),CPU_ADJUSTMENT\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0220\n         B     EXIT0000\nMAIN0220 DS    0H\n         TM    SMF70STF,SMF70WUC          SERVICE UNITS FOR MVS CHANGE?\n         BNO   MAIN0230                   NO\n         MVC   MSG_04_MSG(L'MVS_SERVICE_UNITS),MVS_SERVICE_UNITS\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0230\n         B     EXIT0000\nMAIN0230 DS    0H\n         TM    SMF70STF,SMF70RCU          SMF70LAC PROVIDED?\n         BNO   MAIN0240                   NO\n         MVC   MSG_04_MSG(L'SMF70LAC_PROVIDED),SMF70LAC_PROVIDED\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0240\n         B     EXIT0000\nMAIN0240 DS    0H\n         TM    SMF70STF,SMF70HWV          SMF70MDL/SMF70HWM?\n         BNO   MAIN0250                   NO\n         MVC   MSG_04_MSG(L'SMF70MDL_SMF70HWM),SMF70MDL_SMF70HWM\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0250\n         B     EXIT0000\n         DROP  R8\nMAIN0250 DS    0H\n         MVC   0(MSG_05_L,R8),MSG_05      INITIALIZE MESSAGE\n         USING MSG_05,R8\n         SR    R0,R0\n         ICM   R0,3,SMF70GTS              DISPATCH INTERVAL\n         CVD   R0,COMM_DWORD\n         ED    MSG_05_DISPATCH,COMM_DWORD+5\n         LA    R15,L'MSG_05_DISPATCH\nMAIN0260 DS    0H\n         CLI   MSG_05_DISPATCH,C' '       BLANK?\n         BNE   MAIN0270                   NO\n         MVC   MSG_05_DISPATCH(L'MSG_05_DISPATCH-1),MSG_05_DISPATCH+1\n         MVI   MSG_05_DISPATCH+(L'MSG_05_DISPATCH-1),C' '\n         BCT   R15,MAIN0260               LOOP\n         DROP  R8\nMAIN0270 DS    0H\n         A     R8,DXD_VWIDTH              NEXT LINE\n         BCT   R6,MAIN0280\n         B     EXIT0000\nMAIN0280 DS    0H\n         MVC   0(MSG_06_L,R8),MSG_06      INITIALIZE MESSAGE\n         USING MSG_06,R8\n         ICM   R0,3,SMF70DSA              DIAGNOSE SAMPLES\n         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_06_DIAGNOSE,COMM_DWORD+5\n         LA    R15,L'MSG_06_DIAGNOSE\nMAIN0290 DS    0H\n         CLI   MSG_06_DIAGNOSE,C' '       BLANK?\n         BNE   MAIN0300                   NO\n         MVC   MSG_06_DIAGNOSE(L'MSG_06_DIAGNOSE-1),MSG_06_DIAGNOSE+1\n         MVI   MSG_06_DIAGNOSE+(L'MSG_06_DIAGNOSE-1),C' '\n         BCT   R15,MAIN0290\n         DROP  R8\nMAIN0300 DS    0H\n         A     R8,DXD_VWIDTH              NEXT LINE\n         BCT   R6,MAIN0310\n         B     EXIT0000\nMAIN0310 DS    0H\n         MVC   0(MSG_07_L,R8),MSG_07      INITIALIZE MESSAGE\n         USING MSG_07,R8\n         MVC   MSG_07_MODEL_1,SMF70MDL\n         MVC   MSG_07_MODEL_2,SMF70HWM\n         DROP  R8,R5\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*        Subtype 1 screen 2 (CPU data)                                *\n*---------------------------------------------------------------------*\nMAIN0400 DS    0H\n         ITRACE ID=1_2\n         L     R5,SMF70CPS                    OFFSET TO CPU DATA\n         AR    R5,R7                          PLUS BASE\n         SH    R5,H4\n         USING SMF70CPU,R5                    DEFINE BASE\n         LH    R4,SMF70CPN                    NUMBER OF SECTION(S)\n         MVC   0(CPU_DATA_HEADING_L,R8),CPU_DATA_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         MVC   0(MSG_08_L,R8),MSG_08          INITIALIZE MESSAGE\n         USING MSG_08,R8\n         SR    R0,R0                          CLEAR REGISTER\n         ICM   R0,3,SMF70CID                  CPU ID\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_08_CPU,COMM_DWORD+6        EDIT CPU NUMBER\n         LA    R15,L'MSG_08_CPU\nMAIN0410 DS    0H\n         CLI   MSG_08_CPU,C' '                BLANK?\n         BNE   MAIN0430                       NO\nMAIN0420 DS    0H\n         MVC   MSG_08_CPU(L'MSG_08_CPU-1),MSG_08_CPU+1\n         MVI   MSG_08_CPU+(L'MSG_08_CPU-1),C' '\n         BCT   R15,MAIN0420                   LOOP\nMAIN0430 DS    0H\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0440\n         B     EXIT0000                       SCREEN FULL\nMAIN0440 DS    0H\n         MVC   0(MSG_09_L,R8),MSG_09          INITIALIZE MESSAGE\n         USING MSG_09,R8\n         TM    SMF70CNF,SMF70DCI              COMPLETE INTERVAL?\n         BNO   MAIN0450\n         MVC   MSG_09_MSG(L'COMPLETE),COMPLETE\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0450\n         B     EXIT0000                       SCREEN FULL\nMAIN0450 DS    0H\n         TM    SMF70CNF,SMF70PAR              CPU VARIED DURING POST\n         BNO   MAIN0460\n         MVC   MSG_09_MSG(L'CPU_POST),CPU_POST\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0460\n         B     EXIT0000                       SCREEN FULL\nMAIN0460 DS    0H\n         TM    SMF70CNF,SMF70VAC              CPU VARIED ON OR OFF?\n         BNO   MAIN0470\n         MVC   MSG_09_MSG(L'CPU_VARIED),CPU_VARIED\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0470\n         B     EXIT0000                       SCREEN FULL\nMAIN0470 DS    0H\n         TM    SMF70CNF,SMF70STA              CPU OFFLINE?\n         BNO   MAIN0480\n         MVC   MSG_09_MSG(L'CPU_OFFLINE),CPU_OFFLINE\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0480\n         B     EXIT0000                       SCREEN FULL\nMAIN0480 DS    0H\n         MVC   0(MSG_10_L,R8),MSG_10          INITIALIZE MESSAGE\n         USING MSG_10,R8\n         UNPK  MSG_10_SERIAL(7),SMF70SER(4)   UNPACK CPU SERIAL\n         TR    MSG_10_SERIAL,HEXCHAR          TRANSLATE\n         MVI   MSG_10_SERIAL+6,C' '\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0490\n         B     EXIT0000                       SCREEN FULL\nMAIN0490 DS    0H\n         MVC   0(MSG_11_L,R8),MSG_11          INITIALIZE MESSAGE\n         USING MSG_11,R8\n         TM    SMF70TYP,SMF70TIF              IFA PROCESSOR?\n         BO    MAIN0500                       YES\n         MVC   MSG_11_TYPE(L'STANDARD),STANDARD\n         B     MAIN0510\nMAIN0500 DS    0H\n         MVC   MSG_11_TYPE(L'IFA),IFA         IFA PROCESSOR\n         DROP  R8\nMAIN0510 DS    0H\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN0520\n         B     EXIT0000                       SCREEN FULL\nMAIN0520 DS    0H\n         MVC   0(MSG_12_L,R8),MSG_12          INITIALIZE MESSAGE\n         USING MSG_12,R8\n         L     R0,SMF70SLH                    NBR OF TIMES SLIH ENTERED\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_12_SLIH,COMM_DWORD+2       EDIT\n         LA    R15,L'MSG_12_SLIH\nMAIN0530 DS    0H\n         CLI   MSG_12_SLIH,C' '               BLANK?\n         BNE   MAIN0540                       NO\n         MVC   MSG_12_SLIH(L'MSG_12_SLIH-1),MSG_12_SLIH+1\n         MVI   MSG_12_SLIH+(L'MSG_12_SLIH-1),C' '\n         BCT   R15,MAIN0530                   LOOP\n         DROP  R8\nMAIN0540 DS    0H\n         A     R8,DXD_VWIDTH                  NEXT LINE\n         BCT   R6,MAIN0550\n         B     EXIT0000\nMAIN0550 DS    0H\n         MVC   0(MSG_13_L,R8),MSG_13          INITIALIZE MESSAGE\n         USING MSG_13,R8\n         TM    SMF70V,SMF70VON                ONLINE?\n         BO    MAIN0560                       YES\n         MVC   MSG_13_ONLINE(L'NO),NO\n         B     EXIT0000\nMAIN0560 DS    0H\n         MVC   MSG_13_ONLINE(L'YES),YES\n         DROP  R8\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*        Subtype 1 screen 3 (ASID READY)                              *\n*---------------------------------------------------------------------*\nMAIN0600 DS    0H\n         ITRACE ID=READY\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         USING SMF70AID,R5\n         LA    R3,SMF70RMN\n         LA    R2,TABLE_1                 CONTROL TABLE\n         MVC   0(READY_HEADING_L,R8),READY_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n*---------------------------------------------------------------------*\n*        SUBTYPE 1 SCREEN 4 (IN users)                                *\n*---------------------------------------------------------------------*\nMAIN0700 DS    0H\n         ITRACE ID=IN\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         LA    R3,SMF70IMN\n         LA    R2,TABLE_2                 CONTROL TABLE\n         MVC   0(IN_HEADING_L,R8),IN_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n*---------------------------------------------------------------------*\n*        SUBTYPE 1 SCREEN 5 (OUT users)                               *\n*---------------------------------------------------------------------*\nMAIN0800 DS    0H\n         ITRACE ID=OUT\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         LA    R3,SMF70OMN\n         LA    R2,TABLE_2                 CONTROL TABLE\n         MVC   0(OUT_HEADING_L,R8),OUT_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n*---------------------------------------------------------------------*\n*        SUBTYPE 1 SCREEN 6 (WAIT users)                              *\n*---------------------------------------------------------------------*\nMAIN0900 DS    0H\n         ITRACE ID=WAIT\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         LA    R3,SMF70WMN\n         LA    R2,TABLE_2                 CONTROL TABLE\n         MVC   0(WAIT_HEADING_L,R8),WAIT_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n*---------------------------------------------------------------------*\n*        SUBTYPE 1 SCREEN 7 (Batch users)                             *\n*---------------------------------------------------------------------*\nMAIN1000 DS    0H\n         ITRACE ID=BATCH\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         LA    R3,SMF70BMN\n         LA    R2,TABLE_2                 CONTROL TABLE\n         MVC   0(BATCH_HEADING_L,R8),BATCH_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n*---------------------------------------------------------------------*\n*        SUBTYPE 1 SCREEN 8 (STCs)                                    *\n*---------------------------------------------------------------------*\nMAIN1100 DS    0H\n         ITRACE ID=STC\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         LA    R3,SMF70SMN\n         LA    R2,TABLE_2                 CONTROL TABLE\n         MVC   0(STC_HEADING_L,R8),STC_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n*---------------------------------------------------------------------*\n*        SUBTYPE 1 SCREEN 9 (TSO users)                               *\n*---------------------------------------------------------------------*\nMAIN1200 DS    0H\n         ITRACE ID=TSO\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         LA    R3,SMF70TMN\n         LA    R2,TABLE_2                 CONTROL TABLE\n         MVC   0(TSO_HEADING_L,R8),TSO_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n*---------------------------------------------------------------------*\n*        SUBTYPE 1 SCREEN 10 (LREADY)                                 *\n*---------------------------------------------------------------------*\nMAIN1300 DS    0H\n         ITRACE ID=LREADY\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         LA    R3,SMF70LMN\n         LA    R2,TABLE_2                 CONTROL TABLE\n         MVC   0(LREADY_HEADING_L,R8),LREADY_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n*---------------------------------------------------------------------*\n*        SUBTYPE 1 SCREEN 11 (LWAIT)                                  *\n*---------------------------------------------------------------------*\nMAIN1400 DS    0H\n         ITRACE ID=LWAIT\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         LA    R3,SMF70AMN\n         LA    R2,TABLE_2                 CONTROL TABLE\n         MVC   0(LWAIT_HEADING_L,R8),LWAIT_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n*---------------------------------------------------------------------*\n*        SUBTYPE 1 SCREEN 12 (ASCH)                                   *\n*---------------------------------------------------------------------*\nMAIN1500 DS    0H\n         ITRACE ID=ASCH\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         LA    R3,SMF70PMN\n         LA    R2,TABLE_2                 CONTROL TABLE\n         MVC   0(ASCH_HEADING_L,R8),ASCH_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n*---------------------------------------------------------------------*\n*        SUBTYPE 1 SCREEN 13 (OMVS)                                   *\n*---------------------------------------------------------------------*\nMAIN1600 DS    0H\n         ITRACE ID=OMVS\n         L     R5,SMF70ASS\n         AR    R5,R7\n         SH    R5,H4\n         LA    R3,SMF70XMN\n         LA    R2,TABLE_2                 CONTROL TABLE\n         MVC   0(OMVS_HEADING_L,R8),OMVS_HEADING\n         A     R8,DXD_VWIDTH\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         BCTR  R6,0\n         B     MAIN2000\n         DROP  R5\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN2000 DS    0H\n         USING SMF70RMN,R3                <-- PAY ATTENTION!\n         MVC   0(MSG_14_L,R8),MSG_14      INITIALIZE MESSAGE\n         USING MSG_14,R8\n         MVC   MSG_14_DESC,MINIMUM        COPY COUNTER HEADING\n         LH    R0,SMF70RMN                MINUMUM VALUE\n         CVD   R0,COMM_DWORD\n         ED    MSG_14_NBR,COMM_DWORD+2    EDIT\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN2010\n         B     EXIT0000\nMAIN2010 DS    0H\n         MVC   0(MSG_14_L,R8),MSG_14      INITIALIZE MESSAGE\n         USING MSG_14,R8\n         MVC   MSG_14_DESC,MAXIMUM        COPY COUNTER HEADING\n         LH    R0,SMF70RMM                MAXIMUM VALUE\n         CVD   R0,COMM_DWORD\n         ED    MSG_14_NBR,COMM_DWORD+2    EDIT\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN2020\n         B     EXIT0000\nMAIN2020 DS    0H\n         MVC   0(MSG_14_L,R8),MSG_14      INITIALIZE MESSAGE\n         USING MSG_14,R8\n         MVC   MSG_14_DESC,TOTAL          COPY COUNTER HEADING\n         LH    R0,SMF70RTT                MAXIMUM VALUE\n         CVD   R0,COMM_DWORD\n         ED    MSG_14_NBR,COMM_DWORD+2    EDIT\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN2030\n         B     EXIT0000\nMAIN2030 DS    0H\n         LA    R3,SMF70R00                1ST COUNTER\nMAIN2040 DS    0H\n         MVC   0(MSG_14_L,R8),MSG_14\n         USING MSG_14,R8\n         MVC   MSG_14_DESC,0(R2)          COPY HEADING\n         L     R0,0(R3)                   COUNTER VALUE\n         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_14_NBR,COMM_DWORD+2    EDIT\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCT   R6,MAIN2050\n         B     EXIT0000                   SCREEN FULL\nMAIN2050 DS    0H\n         LA    R3,4(,R3)                  NEXT COUNTER\n         LA    R2,10(,R2)                 NEXT DESCRIPTION\n         CLI   0(R2),X'FF'                END OF TABLE?\n         BE    EXIT0000                   YES\n         B     MAIN2040                   LOOP\n*---------------------------------------------------------------------*\n*        Logical partition data                                       *\n*---------------------------------------------------------------------*\nMAIN3000 DS    0H\n         ITRACE ID=LPAR\n         MVC   0(PARTITION_HEADING_L,R8),PARTITION_HEADING\n         A     R8,DXD_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         A     R8,DXD_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         A     R8,DXD_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         L     R5,SMF70BCS                OFFSET TO LPAR DATA\n         AR    R5,R7                      PLUS BASE\n         SH    R5,H4\n         USING SMF70BCT,R5                DEFINE BASE\n         LH    R4,SMF70BCN                NUMBER OF LPAR SECTIONS\nMAIN3010 DS    0H\n         MVC   0(MSG_15_L,R8),MSG_15      INITIALIZE MESSAGE\n         USING MSG_15,R8\n         SR    R0,R0\n         IC    R0,SMF70LPN                PARTITION NUMBER\n         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_15_NUMBER,COMM_DWORD+6 EDIT\n         MVC   MSG_15_NAME,SMF70LPM       LPAR  NAME\n         MVC   MSG_15_CLUSTER,SMF70SPN    CLUSTER NAME\n         MVC   MSG_15_SYSTEM,SMF70STN     SYSTEM NAME\n         ICM   R0,3,SMF70BDN              NUMBER OF CPUS\n         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_15_CPUS,COMM_DWORD+5   EDIT\n         ICM   R0,15,SMF70CSF             MEGABYTES OF CENTRAL STORAGE\n         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_15_CENTRAL,COMM_DWORD+3\n         ICM   R0,15,SMF70ESF             MEGABYTES OF EXPANDED\n         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL\n         ED    MSG_15_EXPANDED,COMM_DWORD+3\n         DROP  R8\n         A     R8,DXD_VWIDTH              NEXT LINE\n         BCT   R6,MAIN3020\n         B     EXIT0000\nMAIN3020 DS    0H\n         AH    R5,SMF70BCL                NEXT LPAR SECTION\n         BCT   R4,MAIN3010                PROCESS NEXT LPAR\n         B     EXIT0000\n         DROP  R5\n*---------------------------------------------------------------------*\n*        CPU IDENTIFICATION                                           *\n*---------------------------------------------------------------------*\nMAIN4000 DS    0H\n         ITRACE ID=CPU_ID\n         MVC   0(CPU_HEADING_L,R8),CPU_HEADING\n         A     R8,DXD_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         A     R8,DXD_VWIDTH              NEXT LINE\n         BCTR  R6,0\n         L     R5,SMF70CNS                OFFSET TO CPU ID DATA\n         AR    R5,R7                      PLUS BASE\n         SH    R5,H4\n         USING SMF70CIS,R5                DEFINE BASE\n         LH    R4,SMF70CNN                NUMBER OF CPU ID SECTIONS\nMAIN4010 DS    0H\n         MVC   0(MSG_16_L,R8),MSG_16      INITIALIZE MESSAGE\n         USING MSG_16,R8\n         MVC   MSG_16_CPU,SMF70CIS        COPY CPU IDENTIFICATION\n         DROP  R8\n         A     R8,DXD_VWIDTH              NEXT LINE\n         BCT   R6,MAIN4020\n         B     EXIT0000\nMAIN4020 DS    0H\n         AH    R5,SMF70CNL                NEXT CPU\n         BCT   R4,MAIN4010                PROCESS NEXT CPU\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                 RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)               RESTORE R14\n         LR    R15,R2                     SET RC\n         LM    R0,R12,20(R13)             RESTORE REMAINING REGISTERS\n         BR    R14                        RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART             DC    Q(WK0070)\nF60                  DC    F'60'\nF100                 DC    F'100'\nF3600                DC    F'3600'\n\nH3                   DC    H'3'\nH4                   DC    H'4'\nH15                  DC    H'15'\n\nX_0001               DC    X'0001'\nX_0002               DC    X'0002'\n\nHEXCHAR              EQU   *-C'0'\n                     DC    C'0123456789ABCDEF'\n\nNOT_KNOWN            DC    C'Subtype not known'\nDIAG204_FAILED       DC    C'Diagnose 204 failed'\nPROCESSOR_CHANGED    DC    C'Number of processors has changed'\nDISPATCH_CHANGED     DC    C'Dispatch interval has changed'\nPHYSICAL             DC    C'Partition named ''physical'' present'\nDIAG204_SUPPORTED    DC    C'Diagnose 204 supported'\nSTORE_SYSTEM         DC    C'Store system information facility'\nCPU_ADJUSTMENT       DC    C'Physical CPU adjustment factor changed'\nMVS_SERVICE_UNITS    DC    C'Service units available to MVS changed'\nSMF70LAC_PROVIDED    DC    C'SMF70LAC provided'\nSMF70MDL_SMF70HWM    DC    C'SMF70MDL and SMF70HWM valid'\nCOMPLETE             DC    C'Data available for complete interval'\nCPU_POST             DC    C'CPU varied during post processor'\nCPU_VARIED           DC    C'Data invalid, CPU varied on or off'\nCPU_OFFLINE          DC    C'CPU is currently OFFLINE'\nSTANDARD             DC    C'Standard'\nIFA                  DC    C'IFA'\nYES                  DC    C'Yes'\nNO                   DC    C'No'\nMAXIMUM              DC    CL10'MAXIMUM'\nMINIMUM              DC    CL10'MINIMUM'\nTOTAL                DC    CL10'TOTAL'\n\nTABLE_1              DS    0C\n                     DC    CL10'Zero'\n                     DC    CL10'1'\n                     DC    CL10'2'\n                     DC    CL10'3'\n                     DC    CL10'4'\n                     DC    CL10'5'\n                     DC    CL10'6'\n                     DC    CL10'7'\n                     DC    CL10'8'\n                     DC    CL10'9'\n                     DC    CL10'10'\n                     DC    CL10'11'\n                     DC    CL10'12'\n                     DC    CL10'13'\n                     DC    CL10'14'\n                     DC    CL10'14+'\n                     DC    X'FF'\n\nTABLE_2              DS    0C\n                     DC    CL10'Zero'\n                     DC    CL10'1-2'\n                     DC    CL10'3-4'\n                     DC    CL10'5-6'\n                     DC    CL10'7-8'\n                     DC    CL10'9-10'\n                     DC    CL10'11-15'\n                     DC    CL10'16-20'\n                     DC    CL10'21-25'\n                     DC    CL10'26-30'\n                     DC    CL10'31-35'\n                     DC    CL10'35+'\n                     DC    X'FF'\n\n\nCPU_CONTROL_HEADING  DS    0C\n                     DC    33C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'CPU CONTROL'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    33C'-'\n                     DC    C'>'\nCPU_CONTROL_HEADING_L EQU  *-CPU_CONTROL_HEADING\n\nCPU_DATA_HEADING     DS    0C\n                     DC    C'<'\n                     DC    34C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'CPU DATA'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    34C'-'\n                     DC    C'>'\nCPU_DATA_HEADING_L   EQU   *-CPU_DATA_HEADING\n\nASID_HEADING         DS    0C\n                     DC    C'<'\n                     DC    33C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'ASID DATA'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    34C'-'\n                     DC    C'>'\nASID_HEADING_L       EQU   *-ASID_HEADING\n\nREADY_HEADING        DS    0C\n                     DC    C'<'\n                     DC    28C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'READY address spaces'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    28C'-'\n                     DC    C'>'\nREADY_HEADING_L      EQU   *-READY_HEADING\n\nIN_HEADING           DS    0C\n                     DC    C'<'\n                     DC    29C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'IN address spaces'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    30C'-'\n                     DC    C'>'\nIN_HEADING_L         EQU   *-IN_HEADING\n\nOUT_HEADING          DS    0C\n                     DC    C'<'\n                     DC    28C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'OUT address spaces'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    30C'-'\n                     DC    C'>'\nOUT_HEADING_L        EQU   *-OUT_HEADING\n\nWAIT_HEADING         DS    0C\n                     DC    C'<'\n                     DC    27C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'WAITING address spaces'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    27C'-'\n                     DC    C'>'\nWAIT_HEADING_L       EQU   *-WAIT_HEADING\n\nBATCH_HEADING        DS    0C\n                     DC    C'<'\n                     DC    28C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'BATCH address spaces'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    28C'-'\n                     DC    C'>'\nBATCH_HEADING_L      EQU   *-BATCH_HEADING\n\nSTC_HEADING          DS    0C\n                     DC    C'<'\n                     DC    29C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'STC address spaces'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    29C'-'\n                     DC    C'>'\nSTC_HEADING_L        EQU   *-STC_HEADING\n\nTSO_HEADING          DS    0C\n                     DC    C'<'\n                     DC    33C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'TSO users'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    34C'-'\n                     DC    C'>'\nTSO_HEADING_L        EQU   *-TSO_HEADING\n\nLREADY_HEADING       DS    0C\n                     DC    C'<'\n                     DC    27C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'LREADY address spaces'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    28C'-'\n                     DC    C'>'\nLREADY_HEADING_L     EQU   *-LREADY_HEADING\n\nLWAIT_HEADING        DS    0C\n                     DC    C'<'\n                     DC    28C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'LWAIT address spaces'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    28C'-'\n                     DC    C'>'\nLWAIT_HEADING_L      EQU   *-LWAIT_HEADING\n\nASCH_HEADING         DS    0C\n                     DC    C'<'\n                     DC    29C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'ASCH address spaces'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    28C'-'\n                     DC    C'>'\nASCH_HEADING_L       EQU   *-ASCH_HEADING\n\nOMVS_HEADING         DS    0C\n                     DC    C'<'\n                     DC    29C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'OMVS address spaces'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    28C'-'\n                     DC    C'>'\nOMVS_HEADING_L       EQU   *-OMVS_HEADING\n\n\nMSG_08               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'CPU ID             '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_08_CPU           DC    X'40202120'\nMSG_08_L             EQU   *-MSG_08\n\nPARTITION_HEADING    DS    0C\n\n                     DC    C'<'\n                     DC    30C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Logical partition'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    29C'-'\n                     DC    C'>'\n\n                     DC    CL4' '\n                     DC    C'#'\n                     DC    C' '\n                     DC    CL8'NAME'\n                     DC    C' '\n                     DC    C'CLUSTER'\n                     DC    C'  '\n                     DC    CL8'SYSTEM'\n                     DC    C' '\n                     DC    CL6'  CPUs'\n                     DC    C' '\n                     DC    CL12'Main STRG MB'\n                     DC    C' '\n                     DC    CL12'Expanded  MB'\nPARTITION_HEADING_L  EQU   *-PARTITION_HEADING\n\nCPU_HEADING          DS    0C\n                     DC    C'<'\n                     DC    29C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'CPU identification'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    30C'-'\nCPU_HEADING_L        EQU   *-CPU_HEADING\n\nMSG_01               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'CPU model          '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_MODEL         DC    CL4' '\n                     DC    C' '\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'  Version '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_VERSION       DC    X'40202120'\nMSG_01_L             EQU   *-MSG_01\n\nMSG_02               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'NBR of processors  '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_PROCESSORS    DC    X'40202120'\nMSG_02_L             EQU   *-MSG_02\n\nMSG_03               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'PR/SM flags        '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_MSG           DC    CL40' '\nMSG_03_L             EQU   *-MSG_03\n\nMSG_04               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Other flags        '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_MSG           DC    CL40' '\nMSG_04_L             EQU   *-MSG_04\n\nMSG_05               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Dispatch interval  '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_DISPATCH      DC    X'402020202120'\nMSG_05_L             EQU   *-MSG_05\n\nMSG_06               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Diagnose samples   '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_DIAGNOSE      DC    X'402020202120'\nMSG_06_L             EQU   *-MSG_06\n\nMSG_07               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Processor model    '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_MODEL_1       DC    CL16' '\n                     DC    C' '\nMSG_07_MODEL_2       DC    CL16' '\nMSG_07_L             EQU   *-MSG_07\n\nMSG_09               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Configuration      '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_09_MSG           DC    CL40' '\nMSG_09_L             EQU   *-MSG_09\n\nMSG_10               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'CPU Serial         '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_10_SERIAL        DC    CL6' '\n                     DC    c' '\nMSG_10_L             EQU   *-MSG_10\n\nMSG_11               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'CPU type           '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_11_TYPE          DC    CL8' '\nMSG_11_L             EQU   *-MSG_11\n\nMSG_12               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'SLIH entered       '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_12_SLIH          DC    X'402020202020202020202120'\nMSG_12_L             EQU   *-MSG_12\n\nMSG_13               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'ONLINE?            '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_13_ONLINE        DC    CL3' '\nMSG_13_L             EQU   *-MSG_13\n\nMSG_14               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\nMSG_14_DESC          DC    CL10' '              '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_14_NBR           DC    X'4020206B2020206B2020206B202120'\nMSG_14_L             EQU   *-MSG_14\n\nMSG_15               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\nMSG_15_NUMBER        DC    X'40202120'\n                     DC    C' '\nMSG_15_NAME          DC    CL8' '               '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_15_CLUSTER       DC    CL8' '\n                     DC    C' '\nMSG_15_SYSTEM        DC    CL8' '\n                     DC    C' '\nMSG_15_CPUS          DC    X'402020202120'\n                     DC    C' '\nMSG_15_CENTRAL       DC    X'402020206B2020206B202120'\n                     DC    C' '\nMSG_15_EXPANDED      DC    X'402020206B2020206B202120'\nMSG_15_L             EQU   *-MSG_15\n\nMSG_16               DS    0C\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    C'CPU '\nMSG_16_CPU           DC    CL16' '\nMSG_16_L             EQU   *-MSG_16\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0070         DSECT\n               COPY     DXDPREF\nDXD_VWIDTH     DS       F\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               ERBSMF70\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      REGEQU\n               END       SMF0070\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0071": {"ttr": 4356, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 70                                   *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R6     Number of lines available in VDATA buffer              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0071  CSECT\nSMF0071  AMODE 31\nSMF0071  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0071,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0071'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         LA    R9,2048(R10)\n         LA    R9,2048(R9)\n         DROP  R15\n         USING SMF0071,R10,R9                 DEFINE BASE\n         LR    R2,R1                          COPY SCREEN NUMBER\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0071,R13                     DEFINE BASE\n         USING SMF71FLG,R7\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=(SMF71STY,1),                                     +\n               RDATA2=R2\n         L     R1,COMM_OSSPFD\n         USING OSSPFD,R1\n*        L     R6,SPF_VDEPTH                    NUMBER OF LINES\n         MVC   DXD_VWIDTH,SPF_VWIDTH\n         DROP  R1\n         A     R8,DXD_VWIDTH                    LEAVE A BLANK LINE\n         BCTR  R6,0\n         CLC   SMF71STY,X_0001                  SUBTYPE 1?\n         BNE   EXIT0000                         NO..\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         CH    R2,H1\n         BH    MAIN0200\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0100 DS    0H\n         ITRACE ID=1_1\n         LA    R0,C_TABLE\n         ST    R0,DXD_C_ADDR                    RESET ADDRESS\n         SR    R5,R5\n         ICM   R5,15,SMF71PRS                   OFFSET TO RMF SECTION\n         AR    R5,R7                            PLUS BASE\n         SH    R5,H4\n         USING SMF71PRO,R5                      DEFINE BASE\n         MVC   0(RMF_HEADING_L,R8),RMF_HEADING\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8\n         MVC   MSG_01_PROD,SMF71PRD             COPY PRODUCT NAME\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8\n         AP    SMF71DAT,P1900000                ADD CENTURY\n         MVC   COMM_INFO_01(L'DATE_EDITWORD),DATE_EDITWORD\n         ED    COMM_INFO_01(L'DATE_EDITWORD),SMF71DAT\n         MVC   MSG_02_DATE,COMM_INFO_01+1\n         UNPK  COMM_INFO_01(9),SMF71IST(5)      UNPACK TIME\n         MVC   MSG_02_TIME+0(2),COMM_INFO_01+1  COPY HH\n         MVI   MSG_02_TIME+2,C':'               INSERT COLON\n         MVC   MSG_02_TIME+3(2),COMM_INFO_01+3  COPY MM\n         MVI   MSG_02_TIME+5,C':'               INSERT COLON\n         MVC   MSG_02_TIME+6(2),COMM_INFO_01+5  COPY SS\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8\n         ICM   R0,15,SMF71SAM                   NUMBER OF SAMPLES\n         CVD   R0,COMM_DWORD                    CONVERT TO DECIMAL\n         ED    MSG_03_SAMPLES,COMM_DWORD+4\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8\n         TM    SMF71FLA,X'40'                   SAMPLES SKIPPED?\n         BO    MAIN0110                         YES\n         MVC   MSG_04_SKIPPED,=CL3'NO'          CHANGE TO 'NO'\nMAIN0110 DS    0H\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8\n         UNPK  COMM_INFO_01(9),SMF71CYC(5)      CYCLE TIME\n         MVC   MSG_05_CYCLE+0(1),COMM_INFO_01+3\n         MVI   MSG_05_CYCLE+1,C'.'\n         MVC   MSG_05_CYCLE+2(3),COMM_INFO_01+4\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_06_L,R8),MSG_06\n         USING MSG_06,R8\n         MVC   MSG_06_MVS,SMF71MVS\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_07_L,R8),MSG_07\n         USING MSG_07,R8\n         CLI   SMF71IML,X'01'                   308X OR 908X?\n         BE    MAIN0120\n         CLI   SMF71IML,X'02'                   4381?\n         BE    MAIN0130\n         CLI   SMF71IML,X'03'                   3090/9021/9121/9221?\n         BE    MAIN0140\n         B     MAIN0150\nMAIN0120 DS    0H\n         MVC   MSG_07_MACHINE,MACHINE_308X\n         B     MAIN0150\nMAIN0130 DS    0H\n         MVC   MSG_07_MACHINE,MACHINE_4381\n         B     MAIN0150\nMAIN0140 DS    0H\n         MVC   MSG_07_MACHINE,MACHINE_3090\nMAIN0150 DS    0H\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_08_L,R8),MSG_08\n         USING MSG_08,R8\n         TM    SMF71PRF,X'80'                   EXPANDED STORAGE?\n         BO    MAIN0160                         YES\n         MVC   MSG_08_FLAGS,=C'NO '\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\nMAIN0160 DS    0H\n         MVC   0(MSG_09_L,R8),MSG_09\n         USING MSG_09,R8\n         TM    SMF71PRF,X'40'                   ECSA ENABLED?\n         BO    MAIN0170                         YES\n         MVC   MSG_09_FLAGS,=C'NO '\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         BCTR  R6,0\nMAIN0170 DS    0H\n         MVC   0(MSG_10_L,R8),MSG_10\n         USING MSG_10,R8\n         TM    SMF71PRF,X'20'                   ECSA DIRECTOR PRESENT?\n         BO    MAIN0180                         YES\n         MVC   MSG_10_FLAGS,=C'NO '\nMAIN0180 DS    0H\n         DROP  R8\n         A     R8,DXD_VWIDTH\n         MVC   0(MSG_11_L,R8),MSG_11\n         USING MSG_11,R8\n         SR    R0,R0\n         IC    R0,SMF71PTN                      PARTITION NUMBER\n         CVD   R0,COMM_DWORD\n         ED    MSG_11_PARTITION,COMM_DWORD+5\n         DROP  R8\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0200 DS    0H\n         SR    R5,R5\n         ICM   R5,15,SMF71PDS                  OFFSET TO RMF SECTION\n         AR    R5,R7                           PLUS BASE\n         SH    R5,H4\n         L     R4,DXD_C_ADDR\n         USING C_SECT,R4\n         ITRACE ID=C_ADDR,                                             +\n               RDATA1=R4\nMAIN0210 DS    0H\n         ITRACE ID=A,RDATA1=R8,RDATA2=R6\n         ITRACE ID=B,RDATA1=R4,DATA2=0(R4)\n         MVC   0(MSG_12_L,R8),MSG_12           INITIALIZE\n         USING MSG_12,R8\n         MVC   MSG_12_MAIN_HEAD,C_MAIN_HEAD\n         ICM   R3,15,C_OFFSET_1                DATA OFFSET\n         BM    MAIN0220                        .. BYPASS THIS FIELD\n         MVC   MSG_12_SUB_HEAD_1,C_SUB_HEAD_1\n         AR    R3,R5                           PLUS BASE\n         ICM   R0,15,0(R3)                     DATA VALUE\n         CVD   R0,COMM_DWORD                   CONVERT TO DECIMAL\n         MVC   MSG_12_VALUE_1,EDITWORD_1\n         ED    MSG_12_VALUE_1,COMM_DWORD+3\nMAIN0220 DS    0H\n         ICM   R3,15,C_OFFSET_2                DATA OFFSET\n         BM    MAIN0230                        .. BYPASS THIS FIELD\n         MVC   MSG_12_SUB_HEAD_2,C_SUB_HEAD_2\n         AR    R3,R5                           PLUS BASE\n         ICM   R0,15,0(R3)                     DATA VALUE\n         CVD   R0,COMM_DWORD                   CONVERT TO DECIMAL\n         MVC   MSG_12_VALUE_2,EDITWORD_1\n         ED    MSG_12_VALUE_2,COMM_DWORD+3\nMAIN0230 DS    0H\n         ICM   R3,15,C_OFFSET_3                DATA OFFSET\n         BM    MAIN0240                        .. BYPASS THIS FIELD\n         MVC   MSG_12_SUB_HEAD_3,C_SUB_HEAD_3\n         AR    R3,R5                           PLUS BASE\n         ICM   R0,15,0(R3)                     DATA VALUE\n         CVD   R0,COMM_DWORD                   CONVERT TO DECIMAL\n         MVC   MSG_12_VALUE_3,EDITWORD_1\n         ED    MSG_12_VALUE_3,COMM_DWORD+3\nMAIN0240 DS    0H\n         ST    R4,DXD_C_ADDR                   SAVE ADDRESS\n         LA    R4,C_SECT_L(,R4)                NEXT CONTROL INFO\n         CLI   0(R4),X'FF'                     END OF TABLE?\n         BE    EXIT0000                        YES.. EXIT\n         A     R8,DXD_VWIDTH                   NEXT LINE\n         BCT   R6,MAIN0210                     BUILD NEXT LINE\n         DROP  R8\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                 RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)               RESTORE R14\n         LR    R15,R2                     SET RC\n         LM    R0,R12,20(R13)             RESTORE REMAINING REGISTERS\n         BR    R14                        RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART             DC    Q(WK0071)\nH1                   DC    H'1'\nH4                   DC    H'4'\nP1900000             DC    P'1900000'\n\nDATE_EDITWORD        DC    X'40212020204B202020'\nEDITWORD_1           DC    X'40202020202020202120'\n\nX_0001               DC    X'0001'\n\nMACHINE_308X         DC    CL25'308X OR 908X'\nMACHINE_4381         DC    CL25'4381'\nMACHINE_3090         DC    CL25'3090, 9021, 9121, OR 9221'\n\n                     LTORG\n\nRMF_HEADING          DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    28C'-'\n                     DC    C' RMF PRODUCT SECTION  '\n                     DC    28C'-'\n                     DC    C'>'\nRMF_HEADING_L        EQU   *-RMF_HEADING\n\nMSG_01               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Product name          '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_PROD          DC    CL8' '\nMSG_01_L             EQU   *-MSG_01\n\nMSG_02               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Interval start        '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_DATE          DC    CL8' '\n                     DC    CL2' '\nMSG_02_TIME          DC    CL8' '\nMSG_02_L             EQU   *-MSG_02\n\nMSG_03               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Number of samples     '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_SAMPLES       DC    X'4020202020202120'\nMSG_03_L             EQU   *-MSG_03\n\nMSG_04               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Samples skipped?      '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_04_SKIPPED       DC    CL3'Yes'\nMSG_04_L             EQU   *-MSG_04\n\nMSG_05               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Cycle time            '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_CYCLE         DC    CL5' '\nMSG_05_L             EQU   *-MSG_05\n\nMSG_06               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'MVS level             '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_MVS           DC    CL8' '\nMSG_06_L             EQU   *-MSG_06\n\nMSG_07               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Machine type          '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_07_MACHINE       DC    CL25' '\nMSG_07_L             EQU   *-MSG_07\n\nMSG_08               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Expanded storage?     '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_08_FLAGS         DC    CL3'Yes'\nMSG_08_L             EQU   *-MSG_08\n\nMSG_09               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'ECSA enabled?         '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_09_FLAGS         DC    CL3'Yes'\nMSG_09_L             EQU   *-MSG_09\n\nMSG_10               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'ECSA director present?'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_10_FLAGS         DC    CL3'Yes'\nMSG_10_L             EQU   *-MSG_10\n\nMSG_11               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Partition number      '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_11_PARTITION     DC    X'40202120'\nMSG_11_L             EQU   *-MSG_11\n\nMSG_12               DS    0C\n                     DC    AL1($SCREEN_ATTR_HIGH)\nMSG_12_MAIN_HEAD     DC    CL20' '\n                     DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_12_SUB_HEAD_1    DC    CL08' '\nMSG_12_VALUE_1       DC    CL10' '\n                     DC    CL2' '\nMSG_12_SUB_HEAD_2    DC    CL08' '\nMSG_12_VALUE_2       DC    CL10' '\n                     DC    CL2' '\nMSG_12_SUB_HEAD_3    DC    CL08' '\nMSG_12_VALUE_3       DC    CL10' '\nMSG_12_L             EQU   *-MSG_12\n\nC_TABLE        DS        0C\n               DC        CL20'Non-vio, non-swap   '\n               DC        CL08'Page in ',AL4(SMF71PIN-SMF71PAG)\n               DC        CL08'Page out',AL4(SMF71POT-SMF71PAG)\n               DC        CL08'Reclaims',AL4(SMF71PRC-SMF71PAG)\n\n               DC        CL20'VIO                 '\n               DC        CL08'Page in ',AL4(SMF71VIN-SMF71PAG)\n               DC        CL08'Page out',AL4(SMF71VOT-SMF71PAG)\n               DC        CL08'        ',AL4(-1)\n\n               DC        CL20'LPA/CSA non-VIO     '\n               DC        CL08'Page in ',AL4(SMF71SNI-SMF71PAG)\n               DC        CL08'Page out',AL4(SMF71SNO-SMF71PAG)\n               DC        CL08'Reclaims',AL4(-1)\n\n               DC        CL20'Page frames         '\n               DC        CL08'Avail   ',AL4(SMF71AFC-SMF71PAG)\n               DC        CL08'Defined ',AL4(SMF71TFC-SMF71PAG)\n               DC        CL08'Nucleus ',AL4(SMF71FIN-SMF71PAG)\n\n               DC        CL20'Page data set slots '\n               DC        CL08'Total   ',AL4(SMF71TSC-SMF71PAG)\n               DC        CL08'VIO     ',AL4(SMF71DSC-SMF71PAG)\n               DC        CL08'non-VIO ',AL4(SMF71VSC-SMF71PAG)\n\n               DC        CL20'Unused frames       '\n               DC        CL08'Min     ',AL4(SMF71MNF-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXF-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVF-SMF71PAG)\n\n               DC        CL20'CSA frames          '\n               DC        CL08'Min     ',AL4(SMF71MNP-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXP-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVP-SMF71PAG)\n\n               DC        CL20'Pageble priv frames '\n               DC        CL08'Min     ',AL4(SMF71MNS-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXS-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVS-SMF71PAG)\n\n               DC        CL20'Total frames        '\n               DC        CL08'Min     ',AL4(SMF71MNT-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXT-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVT-SMF71PAG)\n\n               DC        CL20'SQA fixed frames    '\n               DC        CL08'Min     ',AL4(SMF71MNQ-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXQ-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVQ-SMF71PAG)\n\n               DC        CL20'CSA+LPA fixed frames'\n               DC        CL08'Min     ',AL4(SMF71MNC-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXC-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVC-SMF71PAG)\n\n               DC        CL20'Non LSQA fixed      '\n               DC        CL08'Min     ',AL4(SMF71MNR-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXR-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVR-SMF71PAG)\n\n               DC        CL20'Fixed               '\n               DC        CL08'Min     ',AL4(SMF71MNX-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXX-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVX-SMF71PAG)\n\n               DC        CL20'Unused slots        '\n               DC        CL08'Min     ',AL4(SMF71MNU-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXU-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVU-SMF71PAG)\n\n               DC        CL20'VIO slots           '\n               DC        CL08'Min     ',AL4(SMF71MNV-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXV-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVV-SMF71PAG)\n\n               DC        CL20'non-VIO priv slots  '\n               DC        CL08'Min     ',AL4(SMF71MNM-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXM-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVM-SMF71PAG)\n\n               DC        CL20'Unusable slots      '\n               DC        CL08'Min     ',AL4(SMF71MNB-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXB-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVB-SMF71PAG)\n\n               DC        CL20'Local slots         '\n               DC        CL08'Min     ',AL4(SMF71MNA-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXA-SMF71PAG)\n               DC        CL08'        ',AL4(-1)\n\n               DC        CL20'VIO pages/expanded  '\n               DC        CL08'Written ',AL4(SMF71VME-SMF71PAG)\n               DC        CL08'Migrated',AL4(SMF71VMG-SMF71PAG)\n               DC        CL08'Read    ',AL4(SMF71VRE-SMF71PAG)\n\n               DC        CL20'VIO in expanded     '\n               DC        CL08'Min     ',AL4(SMF71MVE-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71XVE-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVE-SMF71PAG)\n\n               DC        CL20'LPA frames          '\n               DC        CL08'Min     ',AL4(SMF71NLP-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71XLP-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71ALP-SMF71PAG)\n\n               DC        CL20'Fixed LPA frames    '\n               DC        CL08'Min     ',AL4(SMF71NLF-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71XLF-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71ALF-SMF71PAG)\n\n               DC        CL20'Fixed LSQA frames   '\n               DC        CL08'Min     ',AL4(SMF71NLS-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71XLS-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71ALS-SMF71PAG)\n\n               DC        CL20'Fixed below 16M line'\n               DC        CL08'Min     ',AL4(SMF71MNL-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71MXL-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AVL-SMF71PAG)\n\n               DC        CL20'Avail expanded      '\n               DC        CL08'Min     ',AL4(SMF71AMN-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71AMX-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71ASA-SMF71PAG)\n\n               DC        CL20'Migration age       '\n               DC        CL08'Min     ',AL4(SMF71LMA-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71HMA-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71AMA-SMF71PAG)\n\n               DC        CL20'SQA in real         '\n               DC        CL08'Min     ',AL4(SMF71MSR-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71XSR-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71ASR-SMF71PAG)\n\n               DC        CL20'SQA in expanded     '\n               DC        CL08'Min     ',AL4(SMF71MSE-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71XSE-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71ASE-SMF71PAG)\n\n               DC        CL20'LPA in expanded     '\n               DC        CL08'Min     ',AL4(SMF71LME-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71LXE-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71LAE-SMF71PAG)\n\n               DC        CL20'CSA in expanded     '\n               DC        CL08'Min     ',AL4(SMF71CME-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71CXE-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71CAE-SMF71PAG)\n\n               DC        CL20'LSQA in real        '\n               DC        CL08'Min     ',AL4(SMF71MLR-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71XLR-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71ALR-SMF71PAG)\n\n               DC        CL20'LSQA in expanded    '\n               DC        CL08'Min     ',AL4(SMF71MLE-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71XLE-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71ALE-SMF71PAG)\n\n               DC        CL20'REG+SWA in expanded '\n               DC        CL08'Min     ',AL4(SMF71RME-SMF71PAG)\n               DC        CL08'Max     ',AL4(SMF71RXE-SMF71PAG)\n               DC        CL08'Avg     ',AL4(SMF71RAE-SMF71PAG)\n\n               DC        X'FF'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0071         DSECT\n               COPY      DXDPREF\nDXD_VWIDTH     DS        F\nDXD_C_ADDR     DS        A\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nC_SECT         DSECT\nC_MAIN_HEAD    DS        CL20\nC_SUB_HEAD_1   DS        CL8\nC_OFFSET_1     DS        AL4\nC_SUB_HEAD_2   DS        CL8\nC_OFFSET_2     DS        AL4\nC_SUB_HEAD_3   DS        CL8\nC_OFFSET_3     DS        AL4\nC_SECT_L       EQU       *-C_SECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               ERBSMF71\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      REGEQU\n               END       SMF0071\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0075": {"ttr": 4612, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format Page data set activity (SMF type 75)                 *\n*         ICF define activity                                         *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD ADDRESS                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF RECORD ADDRESS +4 (DOES NOT INCLUDE LENGTH)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0075  CSECT\nSMF0075  AMODE 31\nSMF0075  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0075,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0075'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         USING SMF0075,R10                    DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0075,R13                     DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9                      DEFINE BASE\n         USING SMF75FLG,R7                    DEFINE BASE\n         L     R6,SPF_VDEPTH\n         L     R5,SMF75PSS                    OFFSET TO PAGE INFO\n         AR    R5,R7                          PLUS RECORD BASE\n         SH    R5,H4\n         USING SMF75PSD,R5                    DEFINE BSE\n         LH    R4,SMF75PSN                    NBR OF SECTIONS\n         MVC   0(PAGE_HEADING_L,R8),PAGE_HEADING\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0010 DS    0H\n         MVC   0(MSG_01_L,R8),MSG_01          INITIALIZE MESSAGE\nWORK     USING MSG_01,R8\n         MVC   WORK.MSG_01_DSN,SMF75DSN       COPY DATA SET NAME\n         MVC   WORK.MSG_01_VOL,SMF75VOL       COPY VOLSER\n         TM    SMF75PST,SMF75LPA              PLPA?\n         BO    MAIN0020\n         TM    SMF75PST,SMF75COM              COMMON?\n         BO    MAIN0030\n         TM    SMF75PST,SMF75LOC              LOCAL?\n         BO    MAIN0040\n         B     MAIN0050\nMAIN0020 DS    0H\n         MVC   WORK.MSG_01_TYPE,TYPE_PLPA\n         B     MAIN0050\nMAIN0030 DS    0H\n         MVC   WORK.MSG_01_TYPE,TYPE_COMMON\n         B     MAIN0050\nMAIN0040 DS    0H\n         MVC   WORK.MSG_01_TYPE,TYPE_LOCAL\n         DROP  WORK\nMAIN0050 DS    0H\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN0060\n         B     EXIT0000\nMAIN0060 DS    0H\n         TM    SMF75PST,SMF75DSB+SMF75ONL+SMF75OFL\n         BNO   MAIN0100\n         MVC   0(MSG_02_L,R8),MSG_02          INITIALIZE MESSAGE\nWORK     USING MSG_02,R8\n         TM    SMF75PST,SMF75DSB              BAD?\n         BNO   MAIN0070                       NO\n         MVC   WORK.MSG_02_BAD,YES\nMAIN0070 DS    0H\n         TM    SMF75PST,SMF75ONL              VARIED ONLINE?\n         BNO   MAIN0080                       NO\n         MVC   WORK.MSG_02_ONLINE,YES\nMAIN0080 DS    0H\n         TM    SMF75PST,SMF75OFL              VARIED OFFLINE\n         BNO   MAIN0090\n         MVC   WORK.MSG_02_OFFLINE,YES\n         DROP  WORK\nMAIN0090 DS    0H\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCT   R6,MAIN0100\nMAIN0100 DS    0H\n         MVC   0(MSG_03_L,R8),MSG_03          INITIALIZE MESSAGE\nWORK     USING MSG_03,R8\n         L     R0,SMF75SLA                    TOTAL SLOTS\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    WORK.MSG_03_TOTAL,COMM_DWORD+4\n         L     R0,SMF75BDS                    BAD SLOTS\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    WORK.MSG_03_BAD,COMM_DWORD+4\n         L     R0,SMF75MXU                    MAXIMUM IN USE\n         CVD   R0,COMM_DWORD\n         ED    WORK.MSG_03_MAX,COMM_DWORD+4\n         L     R0,SMF75MNU                    MINIMUM IN USE\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    WORK.MSG_03_MIN,COMM_DWORD+4\n         L     R0,SMF75AVU                    AVERAGE NUMBER IN USE\n         CVD   R0,COMM_DWORD\n         ED    WORK.MSG_03_AVERAGE,COMM_DWORD+4\n         DROP  WORK\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCT   R6,MAIN0110\n         B     EXIT0000\nMAIN0110 DS    0H\n         MVC   0(MSG_04_L,R8),MSG_04          INITIALIZE MESSAGE\nWORK     USING MSG_04,R8\n         L     R0,SMF75USE                    NBR OF TIMES USED\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    WORK.MSG_04_USE,COMM_DWORD+4\n         L     R0,SMF75SIO                    NUMBER OF SIO'S\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    WORK.MSG_04_SIOS,COMM_DWORD+4\n         L     R0,SMF75PGX                    PAGES TRANSFERRED\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    WORK.MSG_04_PAGES,COMM_DWORD+4\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCT   R6,MAIN0120\n         B     EXIT0000\n         DROP  WORK\nMAIN0120 DS    0H\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCT   R6,MAIN0130\n         B     EXIT0000\nMAIN0130 DS    0H\n         AH    R5,SMF75PSL                    NEXT PAGE DATA SET\n         BCT   R4,MAIN0010\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0075)\nH4             DC    H'4'\n\nTYPE_PLPA      DC    CL10'PLPA'\nTYPE_COMMON    DC    CL10'COMMON'\nTYPE_LOCAL     DC    CL10'LOCAL'\nYES            DC    CL3'Yes'\n\nPAGE_HEADING   DS    0C\n               DC    20C' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Page dataset(s)'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nPAGE_HEADING_L EQU   *-PAGE_HEADING\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG_01_DSN     DC    CL44' '\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    C'    '\nMSG_01_VOL     DS    CL6' '\n               DC    C'    '\nMSG_01_TYPE    DC    CL10' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    C'Data set bad? '\nMSG_02_BAD     DS    CL3' '\n               DC    C'    Varied online?'\nMSG_02_ONLINE  DS    CL3' '\n               DC    C'    Varied offline?'\nMSG_02_OFFLINE DS    CL3' '\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    C' Slots Total'\nMSG_03_TOTAL   DC    X'4020202020202120'\n               DC    C'  Bad'\nMSG_03_BAD     DC    X'4020202020202120'\n               DC    C'   Use MAX'\nMSG_03_MAX     DC    X'4020202020202120'\n               DC    C'  Min'\nMSG_03_MIN     DC    X'4020202020202120'\n               DC    C'  Avg'\nMSG_03_AVERAGE DC    X'4020202020202120'\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    C' Times in use by ASM     '\nMSG_04_USE     DC    X'4020202020202120'\n               DC    C'  SIOs'\nMSG_04_SIOS    DC    X'4020202020202120'\n               DC    C'  Pages transferred'\nMSG_04_PAGES   DC    X'4020202020202120'\nMSG_04_L       EQU   *-MSG_04\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0075         DSECT\n               COPY      DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT  DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               ERBSMF75\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY      TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0075\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0080": {"ttr": 4618, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 80                                   *\n*         RACF operator record                                        *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0080  CSECT\nSMF0080  AMODE 31\nSMF0080  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0080,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0080'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12            DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         USING SMF0080,R10           DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)             SAVE R13\n         ST    R1,8(R13)             CHAIN SAVE AREA\n         LR    R13,R1                COPY WORK AREA ADDRESS\n         USING WK0080,R13            DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9             DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ITRACE ID=ENTRY\n         USING SMF80FLG,R7\n         MVC   0(MSG_01_L,R8),MSG_01\n         USING MSG_01,R8\n         MVC   MSG_01_USER,SMF80USR\n         MVC   MSG_01_GROUP,SMF80GRP\n         MVC   MSG_01_JOB,SMF80JBN\n         OC    SMF80TRM,SMF80TRM\n         BZ    MAIN0010\n         MVC   MSG_01_TERM,SMF80TRM\n         DROP  R8\nMAIN0010 DS    0H\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         MVC   0(MSG_02_L,R8),MSG_02\n         USING MSG_02,R8\n         TM    SMF80DES,X'80'        VIOLATION?\n         BNO   MAIN0020              NO\n         MVC   MSG_02_DESC(DESC1_L),DESC1\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0020 DS    0H\n         TM    SMF80DES,X'40'        UNDEFINED USER?\n         BNO   MAIN0030              NO\n         MVC   MSG_02_DESC(DESC2_L),DESC2\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0030 DS    0H\n         TM    SMF80DES,X'10'        WARNING?\n         BNO   MAIN0040              NO\n         MVC   MSG_02_DESC(DESC3_L),DESC3\nMAIN0040 DS    0H\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         DROP  R8\nMAIN0050 DS    0H\n         L     R1,=A(EVENTS)\n         USING EVENT_DSECT,R1\nMAIN0060 DS    0H\n         CLI   EVENT_CODE,X'FF'\n         BE    MAIN0070\n         CLC   EVENT_CODE,SMF80EVT\n         BE    MAIN0070\n         LA    R1,EVENT_L(,R1)\n         B     MAIN0060\nMAIN0070 DS    0H\n         MVC   0(MSG_03_L,R8),MSG_03\n         USING MSG_03,R8\n         SR    R0,R0\n         IC    R0,SMF80EVT\n         CVD   R0,COMM_DWORD\n         ED    MSG_03_EVENT,COMM_DWORD+6\n         MVC   MSG_03_DESC,EVENT_DESC\n         DROP  R8\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n\n         ICM   R1,15,EVENT_QUAL\n         DROP  R1\n         BZ    MAIN0100\n         USING QUAL_DSECT,R1\n         MVC   0(MSG_04_L,R8),MSG_04\n         USING MSG_04,R8\nMAIN0080 DS    0H\n         CLI   QUAL_CODE,X'FF'\n         BE    MAIN0090\n         CLC   SMF80EVQ,QUAL_CODE\n         BE    MAIN0090\n         LA    R1,QUAL_L(R1)\n         B     MAIN0080\nMAIN0090 DS    0H\n         MVC   MSG_04_DESC,QUAL_DESC\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         DROP  R1,R8\n\nMAIN0100 DS    0H\n         ITRACE ID=MSG_05,                                             +\n               DATA1=(SMF80ATH,1)\n         MVC   0(MSG_05_L,R8),MSG_05\n         USING MSG_05,R8\n         TM    SMF80ATH,X'80'           NORMAL?\n         BNO   MAIN0110                 NO\n         ITRACE ID=NORMAL\n         MVC   MSG_05_AUTH,AUTH_NORMAL\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0110 DS    0H\n         TM    SMF80ATH,X'40'           SPECIAL?\n         BNO   MAIN0120\n         ITRACE ID=SPECIAL\n         MVC   MSG_05_AUTH,AUTH_SPECIAL\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0120 DS    0H\n         TM    SMF80ATH,X'20'           OPERATIONS?\n         BNO   MAIN0130\n         ITRACE ID=OPERATNS\n         MVC   MSG_05_AUTH,AUTH_OPERATIONS\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0130 DS    0H\n         TM    SMF80ATH,X'10'           AUDITOR?\n         BNO   MAIN0140\n         ITRACE ID=AUDITOR\n         MVC   MSG_05_AUTH,AUTH_AUDITOR\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0140 DS    0H\n         TM    SMF80ATH,X'08'           INSTALLATION EXIT\n         BNO   MAIN0150\n         ITRACE ID=INSTEXIT\n         MVC   MSG_05_AUTH,AUTH_EXIT\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0150 DS    0H\n         TM    SMF80ATH,X'04'           FAILSOFT?\n         BNO   MAIN0160                 NO\n         ITRACE ID=FAILSOFT\n         MVC   MSG_05_AUTH,AUTH_FAILSOFT\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0160 DS    0H\n         TM    SMF80ATH,X'02'           BYPASSED\n         BNO   MAIN0170                 NO\n         ITRACE ID=BYPASSED\n         MVC   MSG_05_AUTH,AUTH_BYPASSED\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\nMAIN0170 DS    0H\n         TM    SMF80ATH,X'01'           TRUSTED\n         BNO   MAIN0180                 NO\n         ITRACE ID=TRUSTED\n         MVC   MSG_05_AUTH,AUTH_TRUSTED\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n         DROP  R8\nMAIN0180 DS    0H\n         A     R8,SPF_VWIDTH\n         BCTR  R6,0\n*---------------------------------------------------------------------*\n*        Process relocate section(s)                                  *\n*---------------------------------------------------------------------*\nMAIN1000 DS    0H\n         SR    R2,R2                 CLEAR REGISTER\n         ICM   R2,3,SMF80CNT         NUMBER OF RELOCATE SECTIONS\n         BZ    MAIN1060              NO RELOCATE DATA\n         LH    R3,SMF80REL           OFFSET TO FIRST SECTION\n         AR    R3,R7                 PLUS BASE\n         SH    R3,H4                 BACK UP TO RECORD PREFIX\n         USING SMF80DTP,R3\n         ITRACE ID=PROCRELO,                                           +\n               RDATA1=R3,                                              +\n               RDATA2=R2\nMAIN1010 DS    0H\n         L     R1,=A(SUBTYPES)\n         USING SUBTYPE_DSECT,R1\nMAIN1020 DS    0H\n         CLI   0(R1),X'FF'           END OF TABLE?\n         BE    MAIN1050              YES\n         CLC   SUBTYPE_CODE,SMF80DTP THIS SUBTYPE?\n         BE    MAIN1030              YES\n         LA    R1,SUBTYPE_L(R1)\n         B     MAIN1020              LOOP\nMAIN1030 DS    0H\n         MVC   0(MSG_06_L,R8),MSG_06\n         USING MSG_06,R8\n         MVC   MSG_06_DESC,SUBTYPE_DESC\n         ICM   R15,15,SUBTYPE_PROC\n         BZ    MAIN1040\n         ITRACE ID=PROC,                                               +\n               DATA1=SMF80DTP,                                         +\n               RDATA2=R15\n         BALR  R14,R15\nMAIN1040 DS    0H\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN1050           NEXT SECTION\n         B     EXIT0000              SCREEN FULL.. STOP\nMAIN1050 DS    0H\n         SR    R1,R1\n         IC    R1,SMF80DLN           LENGTH OF DATA\n         LA    R3,2(R3,R1)\n         BCT   R2,MAIN1010\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1060 DS    0H\n         SR    R2,R2\n         ICM   R2,3,SMF80CT2         ANY EXTENDED LENGTH AREA(S)?\n         BZ    MAIN1140              NO\n         MVC   0(EXTENDED_HEADING_L,R8),EXTENDED_HEADING\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN1070\n         B     EXIT0000\nMAIN1070 DS    0H\n         LH    R3,SMF80RL2           OFFSET TO EXTENDED LENGTH DATA\n         AR    R3,R7                 PLUS BASE\n*        SH    R3,H4                 MINUS LLBB LENGTH\n         USING SMF80TP2,R3           DEFINE BASE\nMAIN1100 DS    0H\n         L     R1,=A(EXTENDED)       EXTENDED SECTION TABLE\n         USING EXTENDED_DSECT,R1\n         ITRACE ID=SMF80TP2,                                           +\n               DATA1=SMF80TP2\nMAIN1110 DS    0H\n         ITRACE ID=FIND_EXT,                                           +\n               RDATA1=R1,                                              +\n               DATA2=0(R1)\n         CLI   0(R1),X'FF'           END OF TABLE?\n         BE    MAIN1130              YES\n         CLC   EXTENDED_CODE,SMF80TP2\n         BE    MAIN1120\n         LA    R1,EXTENDED_L(R1)     NEXT ENTRY\n         B     MAIN1110\nMAIN1120 DS    0H\n         ICM   R15,15,EXTENDED_PROC\n         ITRACE ID=CALL_EXT,                                           +\n               RDATA1=R15\n         BALR  R14,R15               LINK\nMAIN1130 DS    0H\n         SR    R1,R1\n         ICM   R1,3,SMF80DL2\n         LA    R3,4(R3,R1)           PLUS PREFIX LENGTH\n         BCT   R2,MAIN1100           LOOP\n         B     EXIT0000\n         DROP  R1,R8\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1140 DS    0H\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN1150\n         B     EXIT0000\nMAIN1150 DS    0H\n         MVC   0(MSG_07_L,R8),MSG_07\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN2000 DS    0H\n         DROP  R7\n         USING MSG_06,R8\n         USING SMF80DTP,R3\n         SR    R1,R1\n         ICM   R1,1,SMF80DLN         DATA LENGTH\n         BZR   R14\n         CH    R1,=Y(L'MSG_06_VAL)\n         BNH   MAIN2010\n         LH    R1,=Y(L'MSG_06_VAL)\nMAIN2010 DS    0H\n         BCTR  R1,0\n         EX    R1,MVC_01\n         BR    R14\nMVC_01   MVC   MSG_06_VAL(0),SMF80DTA\n\nMAIN2020 DS    0H\n         TM    SMF80DTA,X'80'        ALTER?\n         BO    MAIN2030              YES\n         TM    SMF80DTA,X'40'        CONTROL?\n         BO    MAIN2040              YES\n         TM    SMF80DTA,X'20'        UPDATE?\n         BO    MAIN2050              YES\n         TM    SMF80DTA,X'10'        READ?\n         BO    MAIN2060              YES\n         TM    SMF80DTA,X'08'        NONE?\n         BO    MAIN2070              YES\n         TM    SMF80DTA,X'02'        WRITE?\n         BO    MAIN2080              YES\n         BR    R14\nMAIN2030 DS    0H\n         MVC   MSG_06_VAL(5),=C'ALTER'\n         BR    R14\nMAIN2040 DS    0H\n         MVC   MSG_06_VAL(7),=C'CONTROL'\n         BR    R14\nMAIN2050 DS    0H\n         MVC   MSG_06_VAL(6),=C'UPDATE'\n         BR    R14\nMAIN2060 DS    0H\n         MVC   MSG_06_VAL(4),=C'READ'\n         BR    R14\nMAIN2070 DS    0H\n         MVC   MSG_06_VAL(4),=C'NONE'\n         BR    R14\nMAIN2080 DS    0H\n         MVC   MSG_06_VAL(5),=C'WRITE'\n         BR    R14\n\nMAIN2100 DS    0H\n         DROP  R3\n         USING SMF80FLG,R7\n         CLI   SMF80EVQ,29           DIRECTORY AUTH?\n         BE    MAIN2170\n         DROP  R7\n         USING SMF80DTP,R3\n         TM    SMF80DTA,X'80'        ALTER?\n         BO    MAIN2110              YES\n         TM    SMF80DTA,X'40'        CONTROL?\n         BO    MAIN2120              YES\n         TM    SMF80DTA,X'20'        UPDATE?\n         BO    MAIN2130              YES\n         TM    SMF80DTA,X'10'        READ?\n         BO    MAIN2140              YES\n         TM    SMF80DTA,X'08'        NONE?\n         BO    MAIN2150              YES\n         TM    SMF80DTA,X'04'        EXECUTE?\n         BO    MAIN2160              YES\n         BR    R14\nMAIN2110 DS    0H\n         MVC   MSG_06_VAL(5),=C'ALTER'\n         BR    R14\nMAIN2120 DS    0H\n         MVC   MSG_06_VAL(7),=C'CONTROL'\n         BR    R14\nMAIN2130 DS    0H\n         MVC   MSG_06_VAL(6),=C'UPDATE'\n         BR    R14\nMAIN2140 DS    0H\n         MVC   MSG_06_VAL(4),=C'READ'\n         BR    R14\nMAIN2150 DS    0H\n         MVC   MSG_06_VAL(4),=C'NONE'\n         BR    R14\nMAIN2160 DS    0H\n         MVC   MSG_06_VAL(7),=C'EXECUTE'\n         BR    R14\nMAIN2170 DS    0H\n         TM    SMF80DTA,X'80'        MANDATORY?\n         BO    MAIN2180              YES\n         TM    SMF80DTA,X'40'        REVERSE MANDATORY?\n         BO    MAIN2190              YES\n         TM    SMF80DTA,X'20'        EQUAL MANDATORY?\n         BO    MAIN2200              YES\n         BR    R14\nMAIN2180 DS    0H\n         MVC   MSG_06_VAL(9),=C'MANDATORY'\n         BR    R14\nMAIN2190 DS    0H\n         MVC   MSG_06_VAL(17),=C'REVERSE MANDATORY'\n         BR    R14\nMAIN2200 DS    0H\n         MVC   MSG_06_VAL(15),=C'EQUAL MANDATORY'\n         BR    R14\n\nMAIN2210 DS    0H\n         SR    R1,R1                 CLEAR REGISTER\n         IC    R1,SMF80DTA           DATA SET LEVEL\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDIT_WORD_1),EDIT_WORD_1\n         ED    MSG_06_VAL(L'EDIT_WORD_1),COMM_DWORD+4\n         BR    R14\nEDIT_WORD_1    DC     X'40212020'\n\n\nMAIN2220 DS    0H\n         MVC   MSG_06_VAL(6),SMF80DTA+1\n         TM    SMF80DTA,X'80'\n         BNOR  R14\n         MVC   MSG_06_VAL+8,=C'Not processed'\n         BR    R14\n\nMAIN2230 DS    0H\n         SR    R0,R0\n         IC    R0,SMF80DLN           LENGTH OF DATA\n         LA    R1,SMF80DTA           COMPUTE NUMBER OF ENTRIES\nMAIN2240 DS    0H\n         MVC   MSG_06_VAL(8),1(R1)   COPY USER ID\n         A     R8,SPF_VWIDTH         NEXT LINE\n         BCT   R6,MAIN2250\n         B     EXIT0000              SCREEN FULL\nMAIN2250 DS    0H\n         SH    R0,H9                 MINUS LENGTH OF FLAG AND ID\n         BZR   R14                   ALL ID'S PROCESSED\n         MVC   0(80,R8),COMM_BLANKS\n         LA    R1,9(,R1)             NEXT ID\n         B     MAIN2240\n\nMAIN2260 DS    0H\n         MVC   MSG_06_VAL+00(6),SMF80DTA+0\n         MVC   MSG_06_VAL+10(6),SMF80DTA+6\n         BR    R14\n\nMAIN2300 DS    0H\n         MVC   MSG_06_VAL(8),SMF80DTA+1\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2310\n         B     EXIT0000\nMAIN2310 DS    0H\n         TM    SMF80DTA,X'80'        STATISTICS IN EFFECT?\n         BNO   MAIN2320              NO\n         MVC   MSG_06_VAL(20),=C'Statistics in effect'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2320\n         B     EXIT0000\nMAIN2320 DS    0H\n         TM    SMF80DTA,X'40'        AUDITING IN EFFECT?\n         BNO   MAIN2330              NO\n         MVC   MSG_06_VAL(20),=C'Auditing in effect'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2330\n         B     EXIT0000\nMAIN2330 DS    0H\n         TM    SMF80DTA,X'20'        PROTECTION in EFFECT?\n         BNO   MAIN2340              NO\n         MVC   MSG_06_VAL(20),=C'Protection in effect'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2340\n         B     EXIT0000\nMAIN2340 DS    0H\n         TM    SMF80DTA,X'10'        GENERIC PROFILE IN EFFECT?\n         BNO   MAIN2350              NO\n         MVC   MSG_06_VAL(20),=C'Generic profile in effect'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2350\n         B     EXIT0000\nMAIN2350 DS    0H\n         TM    SMF80DTA,X'08'        GENERIC COMMAND IN EFFECT?\n         BNO   MAIN2360              NO\n         MVC   MSG_06_VAL(20),=C'Generic command in effect'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2360\n         B     EXIT0000\nMAIN2360 DS    0H\n         TM    SMF80DTA,X'04'        GLOBAL ACCESS CHECKING?\n         BNO   MAIN2370              NO\n         MVC   MSG_06_VAL(20),=C'Global access checking'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2370\n         B     EXIT0000\nMAIN2370 DS    0H\n         TM    SMF80DTA,X'02'        RACLIST IN EFFECT?\n         BNO   MAIN2380              NO\n         MVC   MSG_06_VAL(20),=C'RACLIST in effect'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2380\n         B     EXIT0000\nMAIN2380 DS    0H\n         TM    SMF80DTA,X'02'        GENLIST IN EFFECT?\n         BNO   MAIN2390              NO\n         MVC   MSG_06_VAL(20),=C'GENLIST in effect'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2390\n         B     EXIT0000\nMAIN2390 DS    0H\n\nMAIN2400 DS    0H\n         TM    SMF80DTA,X'40'        LOGOPTIONS(ALWAYS)?\n         BNO   MAIN2410              NO\n         MVC   MSG_06_VAL(18),=C'LOGOPTIONS(ALWAYS)'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2410\n         B     EXIT0000\nMAIN2410 DS    0H\n         TM    SMF80DTA,X'20'        LOGOPTIONS(NEVER)?\n         BNO   MAIN2420              NO\n         MVC   MSG_06_VAL(17),=C'LOGOPTIONS(NEVER)'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2420\n         B     EXIT0000\nMAIN2420 DS    0H\n         TM    SMF80DTA,X'10'        LOGOPTIONS(SUCCESSES)?\n         BNO   MAIN2430              NO\n         MVC   MSG_06_VAL(20),=C'LOGOPTIONS(SUCCESSES)'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2430\n         B     EXIT0000\nMAIN2430 DS    0H\n         TM    SMF80DTA,X'08'        LOGOPTIONS(FAILURES)?\n         BNO   MAIN2440              NO\n         MVC   MSG_06_VAL(20),=C'LOGOPTIONS(FAILURES)'\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2440\n         B     EXIT0000\nMAIN2440 DS    0H\n         TM    SMF80DTA,X'04'        LOGOPTIONS(DEFAULT)?\n         BNOR  R14                   NO\n         MVC   MSG_06_VAL(20),=C'LOGOPTIONS(DEFAULT)'\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R14\n         B     EXIT0000\n\nMAIN2450 DS    0H\n         SR    R15,R15\n         IC    R15,SMF80DLN          DATA LENGTH\n         SH    R15,H12\n         BCTR  R15,0\n         EX    R15,MVC_02\n         A     R8,SPF_VWIDTH\n         BCT   R6,MAIN2460\n         B     EXIT0000\nMAIN2460 DS    0H\n         TM    SMF80DTA,X'80'        DATABASE ACTIVE?\n         BNO   MAIN2470              NO\n         MVC   MSG_06_VAL(6),=C'ACTIVE'\n         B     MAIN2480\nMAIN2470 DS    0H\n         TM    SMF80DTA,X'40'        BACKUP?\n         BNO   MAIN2480              NO\n         MVC   MSG_06_VAL(6),=C'BACKUP'\nMAIN2480 DS    0H\n         MVC   MSG_06_VAL+6(4),=C' ON '\n         MVC   MSG_06_VAL+10(6),SMF80DTA+4\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R14\n         B     EXIT0000\nMVC_02   MVC   MSG_06_VAL(0),SMF80DTA+1\n\nMAIN2500 DS    0H\n         TM    SMF80DTA,X'40'        OLD NAME?\n         BO    MAIN2510\n         MVC   MSG_06_VAL(8),=C'NEW NAME'\n         B     MAIN2520\nMAIN2510 DS    0H\n         MVC   MSG_06_VAL(8),=C'OLD NAME'\nMAIN2520 DS    0H\n         SR    R15,R15\n         IC    R15,SMF80DLN\n         BCTR  R15,0\n         BCTR  R15,0\n         EX    R15,MVC_03\n         A     R8,SPF_VWIDTH\n         BCTR  R6,R14\n         B     EXIT0000\nMVC_03   MVC   MSG_06_VAL+9(0),SMF80DTA+1\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)          RESTORE R14\n         LR    R15,R2                SET RC\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                LTORG\nDXDSTART        DC    Q(WK0080)\nH4              DC    H'4'\nH9              DC    H'9'\nH12             DC    H'12'\n\nEXTENDED_HEADING     DS    0C\n                     DC    24C'-'\n                     DC    AL1($SCREEN_ATTR_HIGH)\n                     DC    C'Extended length section(s)'\n                     DC    AL1($SCREEN_ATTR_NORMAL)\n                     DC    24C'-'\nEXTENDED_HEADING_L   EQU   *-EXTENDED_HEADING\n\nDESC1           DC    C'Violation'\nDESC1_L         EQU   *-DESC1\nDESC2           DC    C'Undefined user'\nDESC2_L         EQU   *-DESC2\nDESC3           DC    C'Warning'\nDESC3_L         EQU   *-DESC3\n\nAUTH_NORMAL     DC    CL20'Normal'\nAUTH_SPECIAL    DC    CL20'Special'\nAUTH_OPERATIONS DC    CL20'Operations'\nAUTH_AUDITOR    DC    CL20'auditor'\nAUTH_EXIT       DC    CL20'Installation exit'\nAUTH_FAILSOFT   DC    CL20'Failsoft'\nAUTH_BYPASSED   DC    CL20'Bypassed'\nAUTH_TRUSTED    DC    CL20'Trusted'\n\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'User:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_USER    DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' GROUP:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_GROUP   DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' JOB:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_JOB     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Terminal:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_TERM    DC    CL8' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Descriptors:'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_DESC    DC    CL70'None'\nMSG_02_L       EQU   *-MSG_02\n\nMSG_03         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Event:           '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_03_EVENT   DC    X'40202120'\n               DC    CL2' '\nMSG_03_DESC    DC    CL40' '\nMSG_03_L       EQU   *-MSG_03\n\nMSG_04         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Status:       '\n               DC    AL1($SCREEN_ATTR_NORMAL)\n               DC    CL6' '\nMSG_04_DESC    DC    CL45' '\nMSG_04_L       EQU   *-MSG_04\n\nMSG_05         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Special authorities '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_05_AUTH    DC    CL20'None'\nMSG_05_L       EQU   *-MSG_05\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   WARNING!  Any changes to this message must also be made to        *\n*             the MSG_06 DSECT in the extended length processors.     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG_06         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG_06_DESC    DC    CL20' '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_06_VAL     DC    CL58' '\nMSG_06_L       EQU   *-MSG_06\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG_07         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'No extended length sections'\nMSG_07_L       EQU   *-MSG_07\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEVENTS  DS  0H\n        DC  AL1(01),AL4(QUAL_01),CL40'JOB INITIATION/TSO LOGON-LOGOFF'\n        DC  AL1(02),AL4(QUAL_02),CL40'RESOURCE ACCESS'\n        DC  AL1(03),AL4(QUAL_03),CL40'ADDVOL/CHANGEVOL'\n        DC  AL1(04),AL4(QUAL_04),CL40'RENAME DATASET'\n        DC  AL1(05),AL4(QUAL_05),CL40'SCRATCH DATASET OR TAPE VOLUME'\n        DC  AL1(06),AL4(QUAL_06),CL40'DELETE 1 VOLUME OF MULTIVOLUME'\n        DC  AL1(07),AL4(QUAL_07),CL40'DEFINE DATASET OR TAPE VOLUME'    '\n        DC  AL1(08),AL4(QUAL_08),CL40'ADDSD'\n        DC  AL1(09),AL4(QUAL_08),CL40'ADDGROUP'\n        DC  AL1(10),AL4(QUAL_08),CL40'ADDUSER'\n        DC  AL1(11),AL4(QUAL_08),CL40'ALTDSD'\n        DC  AL1(12),AL4(QUAL_08),CL40'ALTGROUP'\n        DC  AL1(13),AL4(QUAL_08),CL40'ALTUSER'\n        DC  AL1(14),AL4(QUAL_08),CL40'CONNECT'\n        DC  AL1(15),AL4(QUAL_08),CL40'DELDSD'\n        DC  AL1(16),AL4(QUAL_08),CL40'DELGROUP'\n        DC  AL1(17),AL4(QUAL_08),CL40'DELUSER'\n        DC  AL1(18),AL4(QUAL_08),CL40'PASSWORD'\n        DC  AL1(19),AL4(QUAL_08),CL40'PERMIT'\n        DC  AL1(20),AL4(QUAL_08),CL40'RALTER'\n        DC  AL1(21),AL4(QUAL_08),CL40'RDEFINE'\n        DC  AL1(22),AL4(QUAL_08),CL40'RDELETE'\n        DC  AL1(23),AL4(QUAL_08),CL40'REMOVE'\n        DC  AL1(24),AL4(QUAL_08),CL40'SETROPTS'\n        DC  AL1(25),AL4(QUAL_08),CL40'RVARY'\n        DC  AL1(26),AL4(QUAL_26),CL40'APPCLU'\n        DC  AL1(27),AL4(0),CL40'RESERVED'\n        DC  AL1(28),AL4(QUAL_28),CL40'DIRECTORY SEARCH'\n        DC  AL1(29),AL4(QUAL_28),CL40'CHECK ACCESS TO A DIRECTORY'\n        DC  AL1(30),AL4(QUAL_28),Cl40'CHECK ACCESS TO A FILE'\n        DC  AL1(31),AL4(QUAL_28),CL40'CHAUDIT'\n        DC  AL1(32),AL4(QUAL_28),CL40'CHDIR'\n        DC  AL1(33),AL4(QUAL_28),CL40'CHMOD'\n        DC  AL1(34),AL4(QUAL_28),CL40'CHOWN'\n        DC  AL1(35),AL4(QUAL_28),CL40'CLEAR SETID BITS FOR FILE'\n        DC  AL1(36),AL4(QUAL_28),CL40'EXEC WITH SETUID/SETGID'\n        DC  AL1(37),AL4(QUAL_28),CL40'GETPSENT'\n        DC  AL1(38),AL4(QUAL_38),CL40'DUB'\n        DC  AL1(39),AL4(QUAL_28),CL40'UNDUB'\n        DC  AL1(40),AL4(QUAL_28),CL40'KILL'\n        DC  AL1(41),AL4(QUAL_28),CL40'LINK'\n        DC  AL1(42),AL4(QUAL_28),CL40'MKDIR'\n        DC  AL1(43),AL4(QUAL_28),CL40'MKNOD'\n        DC  AL1(44),AL4(QUAL_28),CL40'MOUNT FILE SYSTEM'\n        DC  AL1(45),AL4(QUAL_28),CL40'OPEN (NEW FILE)'\n        DC  AL1(46),AL4(QUAL_28),CL40'PTRACE'\n        DC  AL1(47),AL4(QUAL_28),CL40'RENAME'\n        DC  AL1(48),AL4(QUAL_28),CL40'RMDIR'\n        DC  AL1(49),AL4(QUAL_28),CL40'SETEGID'\n        DC  AL1(50),AL4(QUAL_28),CL40'SETEUID'\n        DC  AL1(51),AL4(QUAL_28),CL40'SETGID'\n        DC  AL1(52),AL4(QUAL_28),CL40'SETUID'\n        DC  AL1(53),AL4(QUAL_28),Cl40'SYMLINK'\n        DC  AL1(54),AL4(QUAL_28),CL40'UNLINK'\n        DC  AL1(55),AL4(QUAL_28),CL40'UNMOUNT FILE SYSTEM'\n        DC  AL1(56),AL4(QUAL_56),CL40'CHECK FILE OWNER'\n        DC  AL1(57),AL4(QUAL_28),CL40'CHECK PRIV'\n        DC  AL1(58),AL4(QUAL_28),CL40'OPEN SLAVE TTY'\n        DC  AL1(59),AL4(QUAL_59),CL40'RACLINK'\n        DC  AL1(60),AL4(QUAL_28),CL40'XXXCHK (CHECK IPC ACCESS)'\n        DC  AL1(61),AL4(QUAL_28),CL40'XXXGET (MAKE ISP)'\n        DC  AL1(62),AL4(QUAL_28),CL40'XXXCTL (R_IPC_CTL)'\n        DC  AL1(63),AL4(QUAL_28),CL40'SETGROUP'\n        DC  AL1(64),AL4(QUAL_28),CL40'CHECK OWNER 2 FILES'\n        DC  AL1(65),AL4(QUAL_28),CL40'ACCESS RIGHTS PASSED'\n        DC  AL1(66),AL4(QUAL_28),CL40'RACDCERT'\n        DC  AL1(67),AL4(QUAL_67),CL40'initACEE'\n        DC  AL1(68),AL4(QUAL_28),CL40'Grant of initial KERBEROS ticket'\n        DC  AL1(69),AL4(QUAL_69),CL40'R_PKIServ GENCERT'\n        DC  AL1(70),AL4(QUAL_70),CL40'R_PKIServ export'\n        DC  AL1(71),AL4(QUAL_71),CL40'Policy access control decision'\n        DC  AL1(72),AL4(QUAL_72),CL40'R_PKIServ QUERY'\n        DC  AL1(73),AL4(QUAL_28),CL40'R_PKIServ UPDATEREQ'\n        DC  AL1(74),AL4(QUAL_74),CL40'R_PKIServ Update cert'\n        DC  AL1(75),AL4(QUAL_28),CL40'Change file ACL'\n        DC  AL1(76),AL4(QUAL_28),CL40'Remove file ACL'\n        DC  AL1(77),AL4(QUAL_28),CL40'Set file security label'\n        DC  AL1(78),AL4(QUAL_28),CL40'Set WRITE-DOWN priviledge'\n        DC  AL1(79),AL4(QUAL_28),CL40'CRL publication'\n        DC  AL1(80),AL4(QUAL_28),CL40'R_PKIServ RESPOND'\n        DC  AL1(81),AL4(QUAL_28),CL40'PASSTICKET EVALUATION'\n        DC  AL1(82),AL4(QUAL_28),CL40'PASSTICKET GENERATION'\n        DC  X'FF',AL4(0),CL40'UNKNOWN'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nQUAL_01  DS  0C         QUALIFIERS FOR EVENT 1\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Invalid password'\n         DC  AL1(02),CL45'Invalid group'\n         DC  AL1(03),CL45'Invalid OID card'\n         DC  AL1(04),CL45'Invalid terminal/console'\n         DC  AL1(05),CL45'Invalid application'\n         DC  AL1(06),CL45'Revoked user attempting logon'\n         DC  AL1(07),CL45'User automatically revoked'\n         DC  AL1(08),CL45'Successful termination'\n         DC  AL1(09),CL45'Undefined user ID'\n         DC  AL1(10),CL45'Insufficient security label authority'\n         DC  AL1(11),CL45'Not authorized to security label'\n         DC  AL1(12),CL45'Successful RACINIT initiation'\n         DC  AL1(13),CL45'Successful RACINIT DELETE'\n         DC  AL1(14),CL45'System now requires more authority'\n         DC  AL1(15),CL45'Remote job entry - job not authorized'\n         DC  AL1(16),CL45'Surrogate class is inactive'\n         DC  AL1(17),CL45'Submittor not authorized by user'\n         DC  AL1(18),CL45'Submittor not authorized to security label'\n         DC  AL1(19),CL45'User not authorized to job'\n         DC  AL1(20),CL45'WARNING insufficent security label authority'\n         DC  AL1(21),CL45'WARNING security label missing'\n         DC  AL1(22),CL45'WARNING not authorized to security label'\n         DC  AL1(23),CL45'Security labels not compatible'\n         DC  AL1(24),CL45'WARNING Security labels not compatible'\n         DC  AL1(25),CL45'Password has expired'\n         DC  AL1(26),CL45'Invalid new password'\n         DC  AL1(27),CL45'Verification failed by installation'\n         DC  AL1(28),CL45'Group access has been revoked'\n         DC  AL1(29),CL45'OIDCARD is required'\n         DC  AL1(30),CL45'Network job entry - job not authorized'\n         DC  AL1(31),CL45'WARNING unknown user from trusted node'\n         DC  AL1(32),CL45'Successful initiation using PASSTICKET'\n         DC  AL1(33),CL45'Attempted replay of PASSTICKET'\n         DC  AL1(34),CL45'Client security label not equivalent'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_02  DS  0C         QUALIFIERS FOR EVENT 2\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Insufficient authority'\n         DC  AL1(02),CL45'Profile not found - RACFIND specified'\n         DC  AL1(03),CL45'Access permitted with WARNING'\n         DC  AL1(04),CL45'Failed due to PROTECTALL'\n         DC  AL1(05),CL45'WARNING due to PROTECTALL'\n         DC  AL1(06),CL45'Insufficent category/seclevel'\n         DC  AL1(07),CL45'Insufficient security label authority'\n         DC  AL1(08),CL45'Security label missing'\n         DC  AL1(09),CL45'WARNING insufficient security label auth'\n         DC  AL1(10),CL45'WARNING data set not cataloged'\n         DC  AL1(11),CL45'Data set not cataloged'\n         DC  AL1(12),CL45'Profile not found'\n         DC  AL1(13),CL45'WARNING insufficent category/seclevel'\n         DC  AL1(14),CL45'WARNING non-main execution environment'\n         DC  AL1(15),CL45'Conditional access allowed'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_03  DS  0C         QUALIFIERS FOR EVENT 3\n         DC  AL1(00),CL45'Successful processing of new volume'\n         DC  AL1(01),CL45'Insufficient authority'\n         DC  AL1(02),CL45'Insufficient security label authority'\n         DC  AL1(03),CL45'Less specific profile exists'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_04  DS  0C         QUALIFIERS FOR EVENT 4\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Invalid group'\n         DC  AL1(02),CL45'User not in group'\n         DC  AL1(03),CL45'Insufficient authority'\n         DC  AL1(04),CL45'Resource name already defined'\n         DC  AL1(05),CL45'User not defined to RACF'\n         DC  AL1(06),CL45'Resource not protected'\n         DC  AL1(07),CL45'WARNING resource not protected'\n         DC  AL1(08),CL45'User in second qualifier not defined'\n         DC  AL1(09),CL45'Less specified profile exists'\n         DC  AL1(10),CL45'Insufficient security label authority'\n         DC  AL1(11),CL45'Resource not protected by security label'\n         DC  AL1(12),CL45'New name not protected by security label'\n         DC  AL1(13),CL45'New security label must dominate old label'\n         DC  AL1(14),CL45'Insufficient security label authority'\n         DC  AL1(15),CL45'WARNING resource not protected by sec label'\n         DC  AL1(16),CL45'WARNING new name not protected by sec label'\n         DC  AL1(17),CL45'WARNING new sec label must dominate old'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_05  DS  0C         QUALIFIERS FOR EVENT 5\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Resource not found'\n         DC  AL1(02),CL45'Invalid volume'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_06  DS  0C         QUALIFIERS FOR EVENT 6\n         DC  AL1(00),CL45'Successful'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_07  DS  0C         QUALIFIERS FOR EVENT 7\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Group undefined'\n         DC  AL1(02),CL45'User not in group'\n         DC  AL1(03),CL45'Insufficient authority'\n         DC  AL1(04),CL45'Resource already defined'\n         DC  AL1(05),CL45'User not defined'\n         DC  AL1(06),CL45'Resource not protected'\n         DC  AL1(07),CL45'WARNING resource not protected'\n         DC  AL1(08),CL45'WARNING security label missing'\n         DC  AL1(09),CL45'Insufficient security label authority'\n         DC  AL1(10),CL45'User in second qualifier not defined'\n         DC  AL1(11),CL45'Insufficient security label authority'\n         DC  AL1(12),CL45'Less specific profile exists'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_08  DS  0C         QUALIFIERS FOR EVENT 8-25\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Insufficent authority'\n         DC  AL1(02),CL45'Keyword violation detected'\n         DC  AL1(03),CL45'Successful listing of data sets'\n         DC  AL1(04),CL45'System error listing data sets'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_26  DS  0C         QUALIFIERS FOR EVENT 26\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Session established without verification'\n         DC  AL1(02),CL45'Local LU key will expire in 5 days or less'\n         DC  AL1(03),CL45'Partner LU access has been revoked'\n         DC  AL1(04),CL45'Partner LU key does not match this LU key'\n         DC  AL1(05),CL45'Session terminated for security reasons'\n         DC  AL1(06),CL45'Required session key not defined'\n         DC  AL1(07),CL45'Possible security attack by partner LU'\n         DC  AL1(08),CL45'Session key not defined for partner LU'\n         DC  AL1(09),CL45'Session key not defined for this LU'\n         DC  AL1(10),CL45'SNA security related protocol error'\n         DC  AL1(11),CL45'Profile change during verification'\n         DC  AL1(12),CL45'Expired session key'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_28  DS  0C         QUALIFIERS FOR EVENT 28\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Not authorized'\n         DC  AL1(02),CL45'Security label failure'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_31  DS  0C         QUALIFIERS FOR EVENT 31\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'User not authorized for specific file'\n         DC  AL1(02),CL45'User not authorized for change audit'\n         DC  AL1(03),CL45'Security label failure'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_38  DS  0C         QUALIFIERS FOR EVENT 38\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'User does not have OMVS segment'\n         DC  AL1(02),CL45'No UID in OMVS segment'\n         DC  AL1(03),CL45'User''s group has no GID'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_56  DS  0C         QUALIFIERS FOR EVENT 56\n         DC  AL1(00),CL45'User is owner'\n         DC  AL1(01),CL45'User is not owner'\n         DC  AL1(02),CL45'Security label failure'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_59  DS  0C         QUALIFIERS FOR EVENT 59\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Insufficient authority'\n         DC  AL1(02),CL45'Keyword violation detected'\n         DC  AL1(03),CL45'Association already defined'\n         DC  AL1(04),CL45'Association already approved'\n         DC  AL1(05),CL45'Association does not match'\n         DC  AL1(06),CL45'Association does not exist'\n         DC  AL1(07),CL45'Invalid password or revoked user'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_67  DS  0C         QUALIFIERS FOR EVENT 67\n         DC  AL1(00),CL45'Successful registration'\n         DC  AL1(01),CL45'Successful deregistration'\n         DC  AL1(02),CL45'Insufficent authority to register a cert'\n         DC  AL1(03),CL45'Insufficent authority to deregister a cert'\n         DC  AL1(04),CL45'No user ID found for certificate'\n         DC  AL1(05),CL45'Certificate is not trusted'\n         DC  AL1(06),CL45'Successful CERTAUTH registration'\n         DC  AL1(07),CL45'Insufficent authority to register CERTAUTH'\n         DC  AL1(08),CL45'Client sec label not equivalent to user''s'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_69  DS  0C         QUALIFIERS FOR EVENT 69\n         DC  AL1(00),CL45'Successful GENCERT'\n         DC  AL1(01),CL45'Insufficient authority for GENCERT'\n         DC  AL1(02),CL45'Successful REQCERT'\n         DC  AL1(03),CL45'Insufficient authority for REQCERT'\n         DC  AL1(04),CL45'Successful GENRENEW'\n         DC  AL1(05),CL45'Insufficient authority for GENRENEW'\n         DC  AL1(04),CL45'Successful REQRENEW'\n         DC  AL1(05),CL45'Insufficient authority for REQRENEW'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_70  DS  0C         QUALIFIERS FOR EVENT 70\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Insufficient authority'\n         DC  AL1(02),CL45'Incorrect pass phrase'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_71  DS  0C         QUALIFIERS FOR EVENT 71\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Permitted with WARNING'\n         DC  AL1(02),CL45'WARNING for insufficient traverse authority'\n         DC  AL1(03),CL45'WARNING for time-of-day'\n         DC  AL1(04),CL45'Not authorized'\n         DC  AL1(05),CL45'Not authorized due to traverse authority'\n         DC  AL1(06),CL45'Not authorized due to time-of-day'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_72  DS  0C         QUALIFIERS FOR EVENT 72\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Insufficient authority'\n         DC  AL1(02),CL45'Successful VERIFY'\n         DC  AL1(03),CL45'Insufficient authority for VERIFY'\n         DC  AL1(04),CL45'No record found for this certificate'\n         DC  X'FF',CL45'Unknown'\n\nQUAL_74  DS  0C         QUALIFIERS FOR EVENT 74\n         DC  AL1(00),CL45'Successful'\n         DC  AL1(01),CL45'Insufficient authority'\n         DC  AL1(02),CL45'Successful REVOKE'\n         DC  AL1(03),CL45'Insufficient authority for REVOKE'\n         DC  X'FF',CL45'Unknown'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUBTYPES DS  0C\n         DC  AL1(01),AL4(MAIN2000),CL20'Resource name'\n         DC  AL1(02),AL4(MAIN2000),CL20'New name'\n         DC  AL1(03),AL4(MAIN2020),CL20'Access requested'\n         DC  AL1(04),AL4(MAIN2100),CL20'Access allowed'\n         DC  AL1(05),AL4(MAIN2210),CL20'Data set level'\n         DC  AL1(06),AL4(0),CL20' '\n         DC  AL1(07),AL4(0),CL20' '\n         DC  AL1(08),AL4(MAIN2000),CL20'User name'\n         DC  AL1(09),AL4(MAIN2000),CL20'Resource name'\n         DC  AL1(10),AL4(MAIN2220),CL20'VOLSER'\n         DC  AL1(11),AL4(MAIN2220),CL20'Resource Name'\n         DC  AL1(12),AL4(MAIN2230),CL20'ID names'\n         DC  AL1(13),AL4(MAIN2260),CL20'From resource'\n         DC  AL1(14),AL4(MAIN2000),CL20'VOLSER(s)'\n         DC  AL1(15),AL4(MAIN2000),CL20'VOLSER'\n         DC  AL1(16),AL4(MAIN2000),CL20'Old VOLSER'\n         DC  AL1(17),AL4(MAIN2000),CL20'Class name'\n         DC  AL1(18),AL4(MAIN2000),CL20'MENTITY'\n         DC  AL1(19),AL4(MAIN2000),CL20'VOLSER of model'\n         DC  AL1(20),AL4(MAIN2000),CL20'Application name'\n         DC  AL1(21),AL4(MAIN2400),CL20'Class options'\n         DC  AL1(22),AL4(MAIN2000),CL20'Class name'\n         DC  AL1(23),AL4(MAIN2000),CL20'Class name'\n         DC  AL1(24),AL4(MAIN2220),CL20'Options'\n         DC  AL1(25),AL4(MAIN2000),CL20'Resource Name'\n         DC  AL1(26),AL4(MAIN2000),CL20'Class Name'\n         DC  AL1(27),AL4(MAIN2000),CL20'Class Name'\n         DC  AL1(28),AL4(MAIN2220),CL20'Class Name'\n         DC  AL1(29),AL4(MAIN2220),CL20'Application data'\n         DC  AL1(30),AL4(MAIN2450),CL20'RACF DB status'\n         DC  AL1(31),AL4(MAIN2000),CL20'Dataset name'\n         DC  AL1(33),AL4(MAIN2500),CL20'Rename'\n         DC  AL1(34),AL4(MAIN2000),CL20'Class name'\n         DC  AL1(35),AL4(MAIN2000),CL20'Class name'\n         DC  AL1(36),AL4(MAIN2000),CL20'Class name'\n         DC  AL1(37),AL4(MAIN2000),CL20'Model name'\n         DC  AL1(38),AL4(MAIN2000),CL20'User or group'\n         DC  AL1(42),AL4(MAIN2000),CL20'Class name'\n         DC  AL1(43),AL4(MAIN2000),CL20'Class name'\n         DC  AL1(46),AL4(MAIN2000),CL20'LOGSTR value'\n         DC  AL1(47),AL4(MAIN2000),CL20'JOB name'\n         DC  AL1(48),AL4(MAIN2000),CL20'USER ID'\n         DC  AL1(49),AL4(MAIN2000),CL20'User name'\n         DC  AL1(50),AL4(MAIN2000),CL20'Security label'\n         DC  AL1(51),AL4(MAIN2000),CL20'Security label'\n         DC  X'FF'\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXTENDED       DS       0X\n               DC       XL2'0100',VL4(SMF80100)\n               DC       XL2'0101',VL4(SMF80101)\n               DC       XL2'0102',VL4(SMF80102)\n               DC       XL2'0103',VL4(SMF80103)\n               DC       XL2'0104',VL4(SMF80104)\n               DC       XL2'0105',VL4(SMF80105)\n               DC       XL2'0106',VL4(SMF80106)\n               DC       XL2'0107',VL4(SMF80107)\n               DC       XL2'0108',VL4(SMF80108)\n               DC       XL2'0109',VL4(SMF80109)\n               DC       XL2'010A',VL4(SMF8010A)\n               DC       XL2'010B',VL4(SMF8010B)\n               DC       XL2'010C',VL4(SMF8010C)\n               DC       XL2'010D',VL4(SMF8010D)\n               DC       XL2'010E',VL4(SMF8010E)\n               DC       XL2'010F',VL4(SMF8010F)\n               DC       XL2'0110',VL4(SMF80110)\n               DC       XL2'0111',VL4(SMF80111)\n               DC       XL2'0112',VL4(SMF80112)\n               DC       XL2'0113',VL4(SMF80113)\n               DC       XL2'0114',VL4(SMF80114)\n               DC       XL2'0115',VL4(SMF80115)\n               DC       XL2'0116',VL4(SMF80116)\n               DC       XL2'0117',VL4(SMF80117)\n               DC       XL2'0118',VL4(SMF80118)\n               DC       XL2'0119',VL4(SMF80119)\n               DC       XL2'011A',VL4(SMF8011A)\n               DC       XL2'011B',VL4(SMF8011B)\n               DC       XL2'011C',VL4(SMF8011C)\n               DC       XL2'011D',VL4(SMF8011D)\n               DC       XL2'011E',VL4(SMF8011E)\n               DC       XL2'011F',VL4(SMF8011F)\n               DC       XL2'0128',VL4(SMF80120)\n               DC       X'FF'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0080         DSECT\n               COPY     DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEVENT_DSECT    DSECT\nEVENT_CODE     DS       X\nEVENT_QUAL     DS       XL4\nEVENT_DESC     DS       CL40\nEVENT_L        EQU      *-EVENT_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nQUAL_DSECT     DSECT\nQUAL_CODE      DS       X\nQUAL_DESC      DS       CL45\nQUAL_L         EQU      *-QUAL_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUBTYPE_DSECT  DSECT\nSUBTYPE_CODE   DS       X\nSUBTYPE_PROC   DS       AL4\nSUBTYPE_DESC   DS       CL20\nSUBTYPE_L      EQU      *-SUBTYPE_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXTENDED_DSECT DSECT\nEXTENDED_CODE  DS       XL2\nEXTENDED_PROC  DS       AL4\nEXTENDED_L     EQU      *-EXTENDED_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR  80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0080\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0090": {"ttr": 5129, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 90                                   *\n*         System status                                               *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0090  CSECT\nSMF0090  AMODE 31\nSMF0090  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0090,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0090'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12                     DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        COPY ENTRY POINT\n         USING SMF0090,R10                    DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)                      SAVE R13\n         ST    R1,8(R13)                      CHAIN SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK0090,R13                     DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9                      DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ITRACE ID=ENTRY\n         USING SMF90FLG,R7\n         ICM   R5,15,SMF90POF                 OFFSET TO PRODUCT SECTION\n         AR    R5,R7                          PLUS BASE\n         SH    R5,H4                          MINUS 4\n         USING SMF90PRH,R5                    DEFINE BASE\n         MVC   0(MSG_01_L,R8),MSG_01          COPY MESSAGE\n         USING MSG_01,R8                      DEFINE BASE\n         MVC   MSG_01_RVN,SMF90RVN            COPY RECORD VERSION\n         MVC   MSG_01_PNM,SMF90PNM            COPY PRODUCT NAME\n         DROP  R8\n\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0\n         MVC   0(MSG_02_L,R8),MSG_02          COPY MESSAGE\n         USING MSG_02,R8\n         SR    R1,R1                          CLEAR REGISTER 1\n         ICM   R1,3,SMF90TID                  SUB-TYPE ID\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         ED    MSG_02_TID,COMM_DWORD+6\n         LTR   R1,R1                          ZERO?\n         BZ    EXIT0000                       YES\n         CH    R1,=Y(TID_TABLE_L/TID_L)       TOO HIGH?\n         BH    EXIT0000                       YES\n         BCTR  R1,0                           CONVERT TO RELATIVE\n         MH    R1,=Y(TID_L)                   MULTIPLY BY LENGTH EACH\n         LA    R1,TID_TABLE(R1)               TID MESSAGE ADDRESS\n         USING TID,R1\n         MVC   MSG_02_DESC,TID_DESC           COPY TID DESCRIPTOR\n         DROP  R8\n         A     R8,SPF_VWIDTH                  NEXT LINE\n         BCTR  R6,0                           MINUS 1\n         ICM   R15,15,TID_ADDR                SUBTYPE PROCESSOR\n         BZ    EXIT0000                       NOT PROCESSED FURTHER\n         BR    R15                            PROCESS THE SUB-TYPE\n         DROP  R5\n\nTYPE6000 DS    0H\n         ICM   R5,15,SMF90DOF                 OFFSET TO DATA SECTION\n         AR    R5,R7                          PLUS BASE\n         SH    R5,H4                          MINUS 4\n         USING SMF90T6,R5\n         MVC   0(T6_MSG_01_L,R8),T6_MSG_01\n         USING T6_MSG_01,R8\n         MVC   T6_MSG_01_SWO,SMF90SWO\n         DROP  R8\n\n         A     R8,SPF_VWIDTH\n         MVC   0(T6_MSG_02_L,R8),T6_MSG_02\n         USING T6_MSG_02,R8\n         MVC   T6_MSG_02_SWN,SMF90SWN\n         B     EXIT0000\n         DROP  R5\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)                   RESTORE R14\n         LR    R15,R2                         SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0090)\nH4             DC    H'4'\n\nTID_TABLE      DS    0C\n               DC    AL4(0),CL35'SET TIME'                 1\n               DC    AL4(0),CL35'SET DATE'                 2\n               DC    AL4(0),CL35'SETDMN'                   3\n               DC    AL4(0),CL35'SET IPS'                  4\n               DC    AL4(0),CL35'SET SMF'                  5\n               DC    AL4(TYPE6000),CL35'SWITCH SMF'        6\n               DC    AL4(0),CL35'HALT EOD'                 7\n               DC    AL4(0),CL35'IPL PROMPT'               8\n               DC    AL4(0),CL35'IPL SMF'                  9\n               DC    AL4(0),CL35'IPL SRM'                 10\n               DC    AL4(0),CL35'SET OPT'                 11\n               DC    AL4(0),CL35'SET ICS'                 12\n               DC    AL4(0),CL35'SETSMF'                  13\n               DC    AL4(0),CL35'SETMPF'                  14\n               DC    AL4(0),CL35'SET SMF (RESTART SMF)'   15\n               DC    AL4(0),CL35'SET DAE'                 16\n               DC    AL4(0),CL35'SET PFK'                 17\n               DC    AL4(0),CL35'SET GRSRNL'              18\n               DC    AL4(0),CL35'SET APPC'                19\n               DC    AL4(0),CL35'SET SCHPRM'              20\n               DC    AL4(0),CL35'SET SCH'                 21\n               DC    AL4(0),CL35'SET CNGRP'               22\n               DC    AL4(0),CL35'WLM service definition'  23\n               DC    AL4(0),CL35'WLM service policy activation'\n               DC    AL4(0),CL35'WLM mode change'         25\n               DC    AL4(0),CL35'IPL LOGREC'              26\n               DC    AL4(0),CL35'ARM restarts enabled'    27\n               DC    AL4(0),CL35'ARM restarts disabled'   28\n               DC    AL4(0),CL35'CSV LNKLST set activated'\n               DC    AL4(0),CL35'WLM reset'               30\n               DC    AL4(0),CL35'Add/remove from LPA'     31\n               DC    AL4(0),CL35'WLM scheduling environment'\nTID_TABLE_L    EQU   *-TID_TABLE\n\n               LTORG\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Product name/version'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_PNM     DC    CL8' '\n               DC    C'/'\nMSG_01_RVN     DC    CL2' '\nMSG_01_L       EQU   *-MSG_01\n\nMSG_02         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Record sub-type  '\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_02_TID     DC    X'40202120'\n               DC    CL3' '\nMSG_02_DESC    DC    CL35'Unknown'\nMSG_02_L       EQU   *-MSG_02\n\nT6_MSG_01      DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Old SMF dataset'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6_MSG_01_SWO  DC    CL10' '\nT6_MSG_01_L    EQU   *-T6_MSG_01\n\nT6_MSG_02      DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'New SMF dataset'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nT6_MSG_02_SWN  DC    CL10' '\nT6_MSG_02_L    EQU   *-T6_MSG_02\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0090         DSECT\n               COPY     DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTID            DSECT\nTID_ADDR       DS       AL4\nTID_DESC       DS       CL35\nTID_L          EQU      *-TID\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR  90\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      SMF0090\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF0099": {"ttr": 5135, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*         Format SMF record type 99  (SRM decisions)                  *\n*                                                                     *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF0099  CSECT\nSMF0099  AMODE 31\nSMF0099  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING SMF0099,R15\n         B     INIT0000\nMODID    DC    CL8'SMF0099'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         USING OSCOMM,R12            DEFINE COMMON AREA BASE\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         USING SMF0099,R10           DEFINE BASE\n         DROP  R15\n         L     R1,SESS_FORMATTER_DXD_ADDR\n         A     R1,DXDSTART\n         ST    R13,4(R1)             SAVE R13\n         ST    R1,8(R13)             CHAIN SAVE AREA\n         LR    R13,R1                COPY WORK AREA ADDRESS\n         USING WK0099,R13            DEFINE BASE\n         MVC   DXD_CSECT,MODID\n         USING OSSPFD,R9             DEFINE BASE\n         ITRACE ID=ENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         SR    R2,R2\n         B     EXITEXIT\nEXIT0004 DS    0H\n         LA    R2,4\nEXITEXIT DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS\n         L     R14,12(,R13)          RESTORE R14\n         SR    R15,R15               SET RC\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(WK0099)\n\nMSG_01         DS    0C\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C'Job name'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_UIF     DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' User id'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_UDATA   DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Step number'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_INVSQ   DC    X'40202120'\n               DC    AL1($SCREEN_ATTR_HIGH)\n               DC    C' Function'\n               DC    AL1($SCREEN_ATTR_NORMAL)\nMSG_01_FLG     DC    CL20' '\nMSG_01_L       EQU   *-MSG_01\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK0099       DSECT\n             COPY     DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             SESSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD   DSECT\n             IRASMF99 DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n             COPY     REGEQU\n             END      SMF0099\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8010A": {"ttr": 5380, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8010A CSECT\nSMF8010A AMODE 31\nSMF8010A RMODE ANY\n         USING SMF8010A,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8010A'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8010A,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'File owner GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF8010A\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8010B": {"ttr": 5383, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8010B CSECT\nSMF8010B AMODE 31\nSMF8010B RMODE ANY\n         USING SMF8010B,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8010B'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8010B,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         CLI   SMF80DA2,X'00'        NO ACCESS?\n         BE    MAIN0010\n         CLI   SMF80DA2,X'01'        EXECUTE ACCESS?\n         BE    MAIN0020\n         CLI   SMF80DA2,X'02'        WRITE ACCESS?\n         BE    MAIN0030\n         CLI   SMF80DA2,X'04'        READ ACCESS?\n         BE    MAIN0040\n         CLI   SMF80DA2,X'06'        READ + WRITE?\n         BE    MAIN0050\n         CLI   SMF80DA2,X'81'        DIRECTORY SEARCH?\n         BE    MAIN0060\n         CLI   SMF80DA2,X'87'        ANY ACCESS?\n         BE    MAIN0070\n         B     EXIT0000\nMAIN0010 DS    0H\n         MVC   MSG_06_VAL(09),=C'NO ACCESS'\n         B     EXIT0000\nMAIN0020 DS    0H\n         MVC   MSG_06_VAL(07),=C'Execute'\n         B     EXIT0000\nMAIN0030 DS    0H\n         MVC   MSG_06_VAL(05),=C'Write'\n         B     EXIT0000\nMAIN0040 DS    0H\n         MVC   MSG_06_VAL(04),=C'Read'\n         B     EXIT0000\nMAIN0050 DS    0H\n         MVC   MSG_06_VAL(14),=C'Read && write'\n         B     EXIT0000\nMAIN0060 DS    0H\n         MVC   MSG_06_VAL(17),=C'Directory search'\n         B     EXIT0000\nMAIN0070 DS    0H\n         MVC   MSG_06_VAL(03),=C'Any'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Reqested access'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF8010B\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8010C": {"ttr": 5387, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8010C CSECT\nSMF8010C AMODE 31\nSMF8010C RMODE ANY\n         USING SMF8010C,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8010C'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8010C,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         TM    SMF80DA2,X'80'        OWNER BITS?\n         BO    MAIN0010\n         TM    SMF80DA2,X'40'        GROUP BITS?\n         BO    MAIN0020\n         TM    SMF80DA2,X'20'        OTHER BITS?\n         BO    MAIN0030\n         TM    SMF80DA2,X'10'        NO BITS\n         BO    MAIN0040\n         TM    SMF80DA2,X'08'        UID ACL ENTRY?\n         BO    MAIN0050\n         TM    SMF80DA2,X'04'        GID ACL ENTRY?\n         BO    MAIN0060\n         TM    SMF80DA2,X'02'        COULD NOT RETRIEVE ACL?\n         BO    MAIN0070\n         TM    SMF80DA2,X'01'        RESTRICTED USER DENIED?\n         BO    MAIN0080\n         B     EXIT0000\nMAIN0010 DS    0H\n         MVC   MSG_06_VAL(09),=C'Owner bits'\n         B     EXIT0000\nMAIN0020 DS    0H\n         MVC   MSG_06_VAL(09),=C'group bits'\n         B     EXIT0000\nMAIN0030 DS    0H\n         MVC   MSG_06_VAL(09),=C'Other bits'\n         B     EXIT0000\nMAIN0040 DS    0H\n         MVC   MSG_06_VAL(04),=C'None'\n         B     EXIT0000\nMAIN0050 DS    0H\n         MVC   MSG_06_VAL(14),=C'UID ACL entry'\n         B     EXIT0000\nMAIN0060 DS    0H\n         MVC   MSG_06_VAL(17),=C'GID ACL entry'\n         B     EXIT0000\nMAIN0070 DS    0H\n         MVC   MSG_06_VAL(22),=C'Could not retreive ACL'\n         B     EXIT0000\nMAIN0080 DS    0H\n         MVC   MSG_06_VAL(22),=C'Restricted user denied'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Bits used to check access'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF8010C\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8010D": {"ttr": 5391, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8010D CSECT\nSMF8010D AMODE 31\nSMF8010D RMODE ANY\n         USING SMF8010D,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8010D'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8010D,R10          DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         TM    SMF80DA2,x'04'        READ?\n         BNO   MAIN0010\n         MVC   MSG_06_VAL+00(4),=C'Read'\nMAIN0010 DS    0H\n         TM    SMF80DA2,x'02'        WRITE?\n         BNO   MAIN0020\n         MVC   MSG_06_VAL+06(5),=C'Write'\nMAIN0020 DS    0H\n         TM    SMF80DA2,x'01'        WRITE?\n         BNO   EXIT0000\n         MVC   MSG_06_VAL+12(7),=C'Execute'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Access permitted'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06         DSECT\n               DS    AL1\nMSG_06_DESC    DS    CL20\n               DS    AL1\nMSG_06_VAL     DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SMF8010D\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8010E": {"ttr": 5394, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8010E CSECT\nSMF8010E AMODE 31\nSMF8010E RMODE ANY\n         USING SMF8010E,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8010E'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8010E,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         SR    R1,R1\n         ICM   R1,3,SMF80DL2         DATA LENGTH\n         CH    R1,=Y(L'MSG_06_VAL)   TOO LONG?\n         BNH   MAIN0010              NO\n         LH    R1,=Y(L'MSG_06_VAL)   LIMIT LENGTH\nMAIN0010 DS    0H\n         BCTR  R1,0\n         EX    R1,MVC_01             COPY PATH NAME\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n\nMVC_01   MVC   MSG_06_VAL(0),SMF80DA2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'2nd PATH name'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  REGEQU\n            END   SMF8010E\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8010F": {"ttr": 5633, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8010F CSECT\nSMF8010F AMODE 31\nSMF8010F RMODE ANY\n         USING SMF8010F,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8010F'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8010F,R10          DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         UNPK  MSG_06_VAL+00(9),SMF80DA2+00(5)\n         UNPK  MSG_06_VAL+08(9),SMF80DA2+04(5)\n         UNPK  MSG_06_VAL+16(9),SMF80DA2+08(5)\n         UNPK  MSG_06_VAL+24(9),SMF80DA2+12(5)\n         MVZ   MSG_06_VAL(16),HEXZERO\n         TR    MSG_06_VAL(16),HEXCHAR\n         MVI   MSG_06_VAL+16,C' '\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'2nd File identifier'\n\nHEXZERO  DC    16X'00'\nHEXCHAR  DC    C'0123456789ABCDEF'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06         DSECT\n               DS    AL1\nMSG_06_DESC    DS    CL20\n               DS    AL1\nMSG_06_VAL     DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD     DSECT\n               IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SMF8010F\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80100": {"ttr": 5636, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80100 CSECT\nSMF80100 AMODE 31\nSMF80100 RMODE ANY\n         USING SMF80100,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80100'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80100,R10          DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         UNPK  MSG_06_VAL(5),SMF80DA2(2)\n         MVZ   MSG_06_VAL(4),HEXZERO\n         TR    MSG_06_VAL(4),HEXCHAR\n         MVI   MSG_06_VAL+4,C' '\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Audit function'\n\nHEXZERO  DC    4X'00'\nHEXCHAR  DC    C'0123456789ABCDEF'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06         DSECT\n               DS    AL1\nMSG_06_DESC    DS    CL20\n               DS    AL1\nMSG_06_VAL     DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SMF80100\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80101": {"ttr": 5639, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80101 CSECT\nSMF80101 AMODE 31\nSMF80101 RMODE ANY\n         USING SMF80101,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80101'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80101,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Old real UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80101\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80102": {"ttr": 5642, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80102 CSECT\nSMF80102 AMODE 31\nSMF80102 RMODE ANY\n         USING SMF80102,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80102'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80102,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Old effective UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80102\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80103": {"ttr": 5645, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80103 CSECT\nSMF80103 AMODE 31\nSMF80103 RMODE ANY\n         USING SMF80103,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80103'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80103,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Old saved UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80103\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80104": {"ttr": 5648, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80104 CSECT\nSMF80104 AMODE 31\nSMF80104 RMODE ANY\n         USING SMF80104,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80104'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80104,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Old real GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80104\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80105": {"ttr": 5651, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80105 CSECT\nSMF80105 AMODE 31\nSMF80105 RMODE ANY\n         USING SMF80105,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80105'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80105,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Old effective GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80105\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80106": {"ttr": 5889, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80106 CSECT\nSMF80106 AMODE 31\nSMF80106 RMODE ANY\n         USING SMF80106,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80106'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80106,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Old saved GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80106\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80107": {"ttr": 5892, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80107 CSECT\nSMF80107 AMODE 31\nSMF80107 RMODE ANY\n         USING SMF80107,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80107'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80107,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         SR    R1,R1\n         ICM   R1,3,SMF80DL2         DATA LENGTH\n         CH    R1,=Y(L'MSG_06_VAL)   TOO LONG?\n         BNH   MAIN0010              NO\n         LH    R1,=Y(L'MSG_06_VAL)   LIMIT LENGTH\nMAIN0010 DS    0H\n         BCTR  R1,0\n         EX    R1,MVC_01             COPY PATH NAME\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n\nMVC_01   MVC   MSG_06_VAL(0),SMF80DA2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Requested PATH name'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80107\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80108": {"ttr": 5895, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80108 CSECT\nSMF80108 AMODE 31\nSMF80108 RMODE ANY\n         USING SMF80108,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80108'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80108,R10          DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         UNPK  MSG_06_VAL+00(9),SMF80DA2+00(5)\n         UNPK  MSG_06_VAL+08(9),SMF80DA2+04(5)\n         UNPK  MSG_06_VAL+16(9),SMF80DA2+08(5)\n         UNPK  MSG_06_VAL+24(9),SMF80DA2+12(5)\n         MVZ   MSG_06_VAL(16),HEXZERO\n         TR    MSG_06_VAL(16),HEXCHAR\n         MVI   MSG_06_VAL+16,C' '\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'File identifier'\n\nHEXZERO  DC    16X'00'\nHEXCHAR  DC    C'0123456789ABCDEF'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06         DSECT\n               DS    AL1\nMSG_06_DESC    DS    CL20\n               DS    AL1\nMSG_06_VAL     DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SMF80108\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80109": {"ttr": 5898, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80109 CSECT\nSMF80109 AMODE 31\nSMF80109 RMODE ANY\n         USING SMF80109,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80109'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80109,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'File owner UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80109\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8011A": {"ttr": 5901, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8011A CSECT\nSMF8011A AMODE 31\nSMF8011A RMODE ANY\n         USING SMF8011A,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8011A'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8011A,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Target real UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF8011A\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8011B": {"ttr": 5904, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8011B CSECT\nSMF8011B AMODE 31\nSMF8011B RMODE ANY\n         USING SMF8011B,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8011B'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8011B,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Target effective UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF8011B\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8011C": {"ttr": 5907, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8011C CSECT\nSMF8011C AMODE 31\nSMF8011C RMODE ANY\n         USING SMF8011C,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8011C'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8011C,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Target saved UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF8011C\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8011D": {"ttr": 6147, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8011D CSECT\nSMF8011D AMODE 31\nSMF8011D RMODE ANY\n         USING SMF8011D,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8011D'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8011D,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Target real GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF8011D\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8011E": {"ttr": 6150, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8011E CSECT\nSMF8011E AMODE 31\nSMF8011E RMODE ANY\n         USING SMF8011E,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8011E'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8011E,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Target effective GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF8011E\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF8011F": {"ttr": 6153, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF8011F CSECT\nSMF8011F AMODE 31\nSMF8011F RMODE ANY\n         USING SMF8011F,R15\n         B     INIT0000\nMODID    DC    CL8'SMF8011F'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF8011F,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Target saved GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF8011F\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80110": {"ttr": 6156, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80110 CSECT\nSMF80110 AMODE 31\nSMF80110 RMODE ANY\n         USING SMF80110,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80110'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80110,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'New real UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80110\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80111": {"ttr": 6159, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80111 CSECT\nSMF80111 AMODE 31\nSMF80111 RMODE ANY\n         USING SMF80111,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80111'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80111,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'New effective UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80111\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80112": {"ttr": 6162, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80112 CSECT\nSMF80112 AMODE 31\nSMF80112 RMODE ANY\n         USING SMF80112,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80112'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80112,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'New saved UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80112\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80113": {"ttr": 6401, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80113 CSECT\nSMF80113 AMODE 31\nSMF80113 RMODE ANY\n         USING SMF80113,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80113'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80113,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'New real GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80113\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80114": {"ttr": 6404, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80114 CSECT\nSMF80114 AMODE 31\nSMF80114 RMODE ANY\n         USING SMF80114,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80114'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80114,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'New effective GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80114\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80115": {"ttr": 6407, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80115 CSECT\nSMF80115 AMODE 31\nSMF80115 RMODE ANY\n         USING SMF80115,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80115'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80115,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'New saved GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80115\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80116": {"ttr": 6410, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80116 CSECT\nSMF80116 AMODE 31\nSMF80116 RMODE ANY\n         USING SMF80116,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80116'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80116,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'UID of deleted file'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80116\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80117": {"ttr": 6413, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80117 CSECT\nSMF80117 AMODE 31\nSMF80117 RMODE ANY\n         USING SMF80117,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80117'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80117,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'GID of deleted file'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80117\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80118": {"ttr": 6416, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80118 CSECT\nSMF80118 AMODE 31\nSMF80118 RMODE ANY\n         USING SMF80118,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80118'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80118,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'UID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80118\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80119": {"ttr": 6419, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80119 CSECT\nSMF80119 AMODE 31\nSMF80119 RMODE ANY\n         USING SMF80119,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80119'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80119,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'GID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80119\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMF80120": {"ttr": 6659, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*      RACF operator record                                           *\n*                                                                     *\n*   At entry                                                          *\n*       R15    program base address                                   *\n*       R14    return address                                         *\n*       R9     OSSPFD address                                         *\n*       R8     VDATA buffer address                                   *\n*       R7     SMF record address +4 (does not include length)        *\n*       R3     Address of section to process                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF80120 CSECT\nSMF80120 AMODE 31\nSMF80120 RMODE ANY\n         USING SMF80120,R15\n         B     INIT0000\nMODID    DC    CL8'SMF80120'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)       SAVE REGS\n         LR    R10,R15               COPY ENTRY POINT\n         DROP  R15\n         USING SMF80120,R10          DEFINE BASE\n         USING OSCOMM,R12            DEFINE BASE\n         USING MSG_06,R8             DEFINE BASE\n         USING SMF80DTP,R3           DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   MSG_06_DESC,DESC\n         ICM   R1,15,SMF80DA2        USERID IN BINARY\n         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL\n         MVC   MSG_06_VAL(L'EDITWORD),EDITWORD\n         ED    MSG_06_VAL(L'EDITWORD),COMM_DWORD+2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LTORG\nDESC     DC    CL20'Target PID'\nEDITWORD DC    X'402020202020202020202120'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*  WARNING!  This DSECT must match MSG_06 in SMF0080                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nMSG_06      DSECT\n            DS    AL1\nMSG_06_DESC DS    CL20\n            DS    AL1\nMSG_06_VAL  DS    CL58\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSMF_RECORD  DSECT\n            IFASMFR 80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY  TRENTRY\n            COPY  DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            COPY REGEQU\n            END  SMF80120\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT745/CBT.V500.FILE745.PDS/SMF.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT745/CBT.V500.FILE745.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}