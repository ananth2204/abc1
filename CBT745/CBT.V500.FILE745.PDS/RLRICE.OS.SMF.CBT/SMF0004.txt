*---------------------------------------------------------------------*
*                                                                     *
*         Format SMF record type 4  (Job step termination)            *
*                                                                     *
*                                                                     *
*   At entry                                                          *
*       R15    program base address                                   *
*       R14    return address                                         *
*       R9     OSSPFD address                                         *
*       R8     VDATA buffer address                                   *
*       R7     SMF record address +4 (does not include length)        *
*                                                                     *
* ------------------------------------------------------------------- *
SMF0004  CSECT
SMF0004  AMODE 31
SMF0004  RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING SMF0004,R15
         B     INIT0000
MODID    DC    CL8'SMF0004'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         USING OSCOMM,R12            DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)       SAVE REGS
         LR    R10,R15               COPY ENTRY POINT
         USING SMF0004,R10           DEFINE BASE
         DROP  R15
         L     R1,SESS_FORMATTER_DXD_ADDR
         A     R1,DXDSTART
         ST    R13,4(R1)             SAVE R13
         ST    R1,8(R13)             CHAIN SAVE AREA
         LR    R13,R1                COPY WORK AREA ADDRESS
         USING WK0004,R13            DEFINE BASE
         USING OSSPFD,R9             DEFINE BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
MAIN0010 DS    0H
         USING SMF4FLG,R7
         A     R8,SPF_VWIDTH              LEAVE A BLANK LINE
         BCTR  R6,0

         MVC   0(MSG_01_L,R8),MSG_01
         USING MSG_01,R8
         MVC   MSG_01_JBN,SMF4JBN         COPY JOB NAME
         MVC   MSG_01_UIF,SMF4UIF         COPY USER
         MVC   MSG_01_STMN,SMF4STMN       COPY STEP NAME
         SR    R1,R1
         IC    R1,SMF4STN                 STEP NUMBER
         CVD   R1,COMM_DWORD              CONVERT TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   MSG_01_STN,DXD_A+1         COPY STEP NUMBER
         DROP  R8
         A     R8,SPF_VWIDTH              NEXT LINE
         BCTR  R6,0
         A     R8,SPF_VWIDTH              NEXT LINE
         BCTR  R6,0
*---------------------------------------------------------------------*
*        Process reader start date/time                               *
*---------------------------------------------------------------------*
         MVC   0(MSG_02_L,R8),MSG_02
         USING MSG_02,R8                   DEFINE BASE
         MVC   DXD_DATE,SMF4RSD            COPY DATE
         AP    DXD_DATE,P1900000           ADD CENTURY
         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2
         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE
         MVC   MSG_02_RSD,DXD_A+1          COPY READER START DATE
         ICM   R1,15,SMF4RST               READER START TIME
         BAL   R15,TIME0000                CONVERT TIME
         MVC   MSG_02_RST,DXD_B            COPY READER START TIME
         DROP  R8
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0
*---------------------------------------------------------------------*
*        Process initiator start date/time                            *
*---------------------------------------------------------------------*
         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8                   DEFINE BASE
         MVC   DXD_DATE,SMF4STID           COPY DATE
         AP    DXD_DATE,P1900000           ADD CENTURY
         MVC   DXD_A(L'EDIT_WORD_2),EDIT_WORD_2
         ED    DXD_A(L'EDIT_WORD_2),DXD_DATE
         MVC   MSG_03_STID,DXD_A+1         COPY START DATE
         ICM   R1,15,SMF4SIT               START TIME
         BAL   R15,TIME0000                CONVERT TIME
         MVC   MSG_03_SIT,DXD_B            COPY START TIME
         DROP  R8
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0
*---------------------------------------------------------------------*
*        Process Step completion code                                 *
*---------------------------------------------------------------------*
         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8                   DEFINE BASE
         UNPK  DXD_A(5),SMF4SCC(3)        UNPACK COMPLETION CODE
         TR    DXD_A(4),HEXCHAR           TRANSLATE
         TM    SMF4STI,X'02'              ABEND?
         BO    MAIN0020                   YES
         MVC   MSG_04_CC(3),DXD_A+1       USER COMPLETION CODE
         B     MAIN0040
MAIN0020 DS    0H
         TM    SMF4SCC,X'80'              SYSTEM ABEND?
         BO    MAIN0030                   YES
         MVC   MSG_04_CC(4),=C'USER'      INDICATE USER ABEND
         MVC   MSG_04_CC+5(3),DXD_A+1     ABEND CODE
         B     MAIN0040
MAIN0030 DS    0H
         MVC   MSG_04_CC(6),=C'SYSTEM'    INDICATE SYSTEM ABEND
         MVC   MSG_04_CC+7(3),DXD_A+1     ABEND CODE
MAIN0040 DS    0H
         TM    SMF4STI,X'40'              CANCELLED BY IEFUJV?
         BO    MAIN0050
         TM    SMF4STI,X'20'              CANCELLED BY IEFUJI?
         BO    MAIN0060
         TM    SMF4STI,X'10'              CANCELLED BY IEFUSI?
         BO    MAIN0070
         TM    SMF4STI,X'08'              CANCELLED BY IEFACTRT?
         BO    MAIN0080
         B     MAIN0090
MAIN0050 DS    0H
         MVC   MSG_04_CANCEL,IEFUJV_CANCEL
         B     MAIN0090
MAIN0060 DS    0H
         MVC   MSG_04_CANCEL,IEFUJI_CANCEL
         B     MAIN0090
MAIN0070 DS    0H
         MVC   MSG_04_CANCEL,IEFUSI_CANCEL
         B     MAIN0090
MAIN0080 DS    0H
         MVC   MSG_04_CANCEL,IEFACTRT_CANCEL
MAIN0090 DS    0H
         DROP  R8
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0
*---------------------------------------------------------------------*
*        Process priority and program name                            *
*---------------------------------------------------------------------*
         MVC   0(MSG_05_L,R8),MSG_05
         USING MSG_05,R8                   DEFINE BASE
         SR    R1,R1
         IC    R1,SMF4PRTY                 PRIORITY
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   MSG_05_PRTY,DXD_A+1         COPY PRIORITY
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0
         DROP  R8

         MVC   0(MSG_06_L,R8),MSG_06
         USING MSG_06,R8                   DEFINE BASE
         MVC   MSG_06_PGMN,SMF4PGMN        COPY PROGRAM NAME
         DROP  R8
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0
*---------------------------------------------------------------------*
*        Process CPU time                                             *
*---------------------------------------------------------------------*
         SR    R5,R5                       CLEAR REGISTER
         ICM   R5,3,SMF4LENN               LENGTH OF DEVICE PORTION
         LA    R5,SMF4DEVC(R5)             ADDRESS OF ACCOUNTING DATA
         USING SMF4LNTH,R5
         MVC   0(MSG_07_L,R8),MSG_07
         USING MSG_07,R8                   DEFINE BASE
         SR    R1,R1
         ICM   R1,7,SMF4SETM               TCB TIME
         BAL   R15,TIME0000                CONVERT TIME
         MVC   MSG_07_SETM(8),DXD_B        COPY TCB TIME
         LR    R1,R0                       COPY REMAINDER
         SR    R0,R0                       CLEAR R0
         D     R0,F100                     COMPUTE 100THS
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVI   MSG_07_SETM+8,C'.'          INSERT DECIMAL
         MVC   MSG_07_SETM+9(2),DXD_A+2    COPY 100THS
         DROP  R8
         A     R8,SPF_VWIDTH
         BCTR  R6,0

         MVC   0(MSG_08_L,R8),MSG_08
         USING MSG_08,R8                   DEFINE BASE
         SR    R1,R1
         ICM   R1,7,SMF4SRBT               SRB TIME
         BAL   R15,TIME0000                CONVERT TIME
         MVC   MSG_08_SRBT(8),DXD_B        COPY SRB TIME
         SR    R0,R0                       CLEAR R0
         D     R0,F100                     COMPUTE 100THS
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVI   MSG_08_SRBT+8,C'.'          INSERT DECIMAL
         MVC   MSG_08_SRBT+9(2),DXD_A+2    COPY 100THS
         DROP  R5,R8
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0
*---------------------------------------------------------------------*
*        Process devices (as many as we can)                          *
*---------------------------------------------------------------------*
         TM    SMF4RIN,X'04'               DEVICE DATA RECORDED
         BO    MAIN0130                    NO
         SR    R4,R4
         ICM   R4,3,SMF4LENN               LENGTH OF DEVICE DATA
         BZ    MAIN0130                    NONE
         SH    R4,H2                       MINUS 2
         BZ    MAIN0130                    NONE
         MVC   0(DEVICE_HEADING_L,R8),DEVICE_HEADING
         A     R8,SPF_VWIDTH               NEXT LINE
         BCTR  R6,0
         SLL   R4,3                        DIVIDE BY 8
         LA    R5,SMF4DEVC                 FIRST DEVICE
         USING SMF4DEVC,R5                 DEFINE BASE
MAIN0100 DS    0H
         MVC   0(MSG_09_L,R8),MSG_09
         USING MSG_09,R8                   DEFINE BASE
         UNPK  DXD_A(3),SMF4DEVC(2)        UNPACK CLASS
         TR    DXD_A(2),HEXCHAR            TRANSLATE
         MVC   MSG_09_DEVC,DXD_A           COPY DEVICE CLASS
         UNPK  DXD_A(3),SMF4UTYP           UNPACK DEVICE TYPE
         TR    DXD_A(2),HEXCHAR            TRANSLATE
         MVC   MSG_09_UTYP,DXD_A           COPY DEVICE TYPE
         TM    SMF4CUAD,X'80'              VIRTUAL DEVICE?
         BNO   MAIN0110                    NO
         MVC   MSG_09_VIRTUAL,VIRTUAL      INDICATE VIRTUAL DEVICE
MAIN0110 DS    0H
         NI    SMF4CUAD,X'7F'              FORCE HIGH BIT TO ZERO
         UNPK  DXD_A(5),SMF4CUAD(3)        UNPACK DEVICE NUMBER
         TR    DXD_A(4),HEXCHAR            TRANSLATE
         MVC   MSG_09_CUAD,DXD_A           COPY DEVICE NBR
         ICM   R1,15,SMF4EXCP              NUMBER OF EXCP'S
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         ED    MSG_09_EXCP,COMM_DWORD+3    EDIT EXCP'S
         A     R8,SPF_VWIDTH               NEXT LINE
         LA    R5,8(R5)                    NEXT DEVICE
         BCT   R6,MAIN0120
         B     EXIT0000                    SCREEN FULL
MAIN0120 DS    0H
         BCT   R4,MAIN0100                 NEXT DEVICE
         B     MAIN0140
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
MAIN0130 DS    0H
         MVC   0(NO_DEVICE_L,R8),NO_DEVICE
         A     R8,SPF_VWIDTH               NEXT LINE
         BCT   R6,MAIN0140
         DROP  R5,R8
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
MAIN0140 DS    0H
         A     R8,SPF_VWIDTH               NEXT LINE
         BCT   R6,MAIN0150
MAIN0150 DS    0H
         SR    R5,R5                       CLEAR REGISTER
         ICM   R5,3,SMF4RLCT               OFFSET TO RELOCATE SECTION
         LA    R5,SMF4FLG(R5)              RELOCATION DATA
         USING SMF4LNTH,R5                 DEFINE BASE
         MVC   0(MSG_10_L,R8),MSG_10
         USING MSG_10,R8
         ICM   R1,15,SMF4PGIN              PAGE IN'S
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         ED    MSG_10_PGIN,COMM_DWORD+3    EDIT PAGE IN'S
         ICM   R1,15,SMF4PSI               PAGES SWAPPED IN
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         ED    MSG_10_PSI,COMM_DWORD+3     EDIT PAGES SWAPPED IN
         A     R8,SPF_VWIDTH               NEXT LINE
         BCT   R6,MAIN0160
         B     EXIT0000
         DROP  R8
MAIN0160 DS    0H
         MVC   0(MSG_11_L,R8),MSG_11
         USING MSG_11,R8
         ICM   R1,15,SMF4PGOT              PAGE OUT'S
         CVD   R1,COMM_DWORD
         ED    MSG_11_PGOT,COMM_DWORD+3    EDIT PAGE OUT'S
         ICM   R1,15,SMF4PSO               PAGES SWAPPED OUT
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         ED    MSG_11_PSO,COMM_DWORD+3     EDIT PAGES SWAPPED OUT
         A     R8,SPF_VWIDTH               NEXT LINE
         BCT   R6,MAIN0170
         B     EXIT0000
         DROP  R8
MAIN0170 DS    0H
         MVC   0(MSG_12_L,R8),MSG_12       INITIALIZE MESSAGE
         USING MSG_12,R8
         ICM   R1,15,SMF4NSW               ADDRESS SPACE SWAPS
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         ED    MSG_12_NSW,COMM_DWORD+3     EDIT SWAPS
         A     R8,SPF_VWIDTH               NEXT LINE
         BCT   R6,MAIN0180
         B     EXIT0000
         DROP  R8
MAIN0180 DS    0H
         MVC   0(MSG_13_L,R8),MSG_13       INITIALIZE MESSAGE
         USING MSG_13,R8
         ICM   R1,15,SMF4VPI               VIO PAGE-INS
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         ED    MSG_13_VPI,COMM_DWORD+3     EDIT VIO PAGE INS
         A     R8,SPF_VWIDTH               NEXT LINE
         BCT   R6,MAIN0190
         B     EXIT0000
         DROP  R8
MAIN0190 DS    0H
         MVC   0(MSG_14_L,R8),MSG_14       INITIALIZE MESSAGE
         USING MSG_14,R8
         ICM   R1,15,SMF4VPO               VIO PAGE-OUTS
         CVD   R1,COMM_DWORD               CONVERT TO DECIMAL
         ED    MSG_14_VPO,COMM_DWORD+3     EDIT VIO PAGE OUTS
         DROP  R8
         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
TIME0000 DS    0H
         ITRACE ID=TIME,                                               +
               RDATA1=R1
         SR    R0,R0
         D     R0,F100               CONVERT TO WHOLE SECONDS
         SR    R0,R0                 CLEAR REMAINDER
         D     R0,F3600              COMPUTE HOURS
         CVD   R1,COMM_DWORD         CONVERT HOURS TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   DXD_B+0(2),DXD_A+2    COPY HOURS
         MVI   DXD_B+2,C':'          INSERT COLON
         LR    R1,R0                 COPY REMAINDER
         SR    R0,R0                 CLEAR R0
         D     R0,F60                COMPUTE MINUTES
         CVD   R1,COMM_DWORD         CONVERT MINUTES TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   DXD_B+3(2),DXD_A+2    COPY MINUTES
         MVI   DXD_B+5,C':'          INSERT COLON
         CVD   R0,COMM_DWORD         CONVERT SECONDS TO DECIMAL
         MVC   DXD_A(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_A(L'EDIT_WORD_1),COMM_DWORD+6
         MVC   DXD_B+6(2),DXD_A+2    COPY SECONDS
         BR    R15
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         SR    R2,R2
         B     EXITEXIT
EXIT0004 DS    0H
         LA    R2,4
EXITEXIT DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         L     R13,4(R13)            RESTORE R13
         L     R14,12(,R13)          RESTORE R14
         LR    R15,R2                SET RC
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART       DC    Q(WK0004)
F60            DC    F'60'
F100           DC    F'100'
F3600          DC    F'3600'
H2             DC    H'2'

P1900000       DC    P'1900000'

EDIT_WORD_1    DC    X'F0202120'
EDIT_WORD_2    DC    X'F0202020204B202020'

HEXCHAR        EQU   *-C'0'
               DC    C'0123456789ABCDEF'

IEFUJV_CANCEL   DC   CL21'CANCELLED BY IEFUJV'
IEFUJI_CANCEL   DC   CL21'CANCELLED BY IEFUJI'
IEFUSI_CANCEL   DC   CL21'CANCELLED BY IEFUSI'
IEFACTRT_CANCEL DC   CL21'CANCELLED BY IEFACTRT'
VIRTUAL         DC   CL7'VIRTUAL'

MSG_01         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  Job name:'
MSG_01_JBN     DC    CL8' '
               DC    C'  Step name:'
MSG_01_STMN    DC    CL8' '
               DC    C'  Step number:'
MSG_01_STN     DC    CL3' '
               DC    C'  User:'
MSG_01_UIF     DC    CL8' '
MSG_01_L       EQU   *-MSG_01

MSG_02         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Reader date/time'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_RSD     DC    CL8' '
               DC    C' '
MSG_02_RST     DC    CL8' '
MSG_02_L       EQU   *-MSG_02

MSG_03         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Start date/time '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_STID    DC    CL8' '
               DC    C' '
MSG_03_SIT     DC    CL8' '
MSG_03_L       EQU   *-MSG_03

MSG_04         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Completion      '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_04_CC      DC    CL10' '
               DC    AL1($SCREEN_ATTR_HIGH)
MSG_04_CANCEL  DC    CL21' '
MSG_04_L       EQU   *-MSG_04

MSG_05         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Priority        '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_05_PRTY    DC    CL3' '
MSG_05_L       EQU   *-MSG_05

MSG_06         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'Program         '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_06_PGMN    DC    CL8' '
MSG_06_L       EQU   *-MSG_06

MSG_07         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'TCB time        '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_07_SETM    DC    CL11' '
MSG_07_L       EQU   *-MSG_07

MSG_08         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'SRB time        '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_08_SRBT    DC    CL11' '
MSG_08_L       EQU   *-MSG_08

DEVICE_HEADING DS    0C
               DC    CL20' '
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'Device statistics'
DEVICE_HEADING_L EQU *-DEVICE_HEADING

NO_DEVICE      DS    0C
               DC    AL1($SCREEN_ATTR_HIGH_YELLOW)
               DC    C'No device statistics'
NO_DEVICE_L    EQU   *-NO_DEVICE

MSG_09         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C' Class'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_09_DEVC    DC    CL2' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  Type'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_09_UTYP    DC    CL2' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  NBR '
MSG_09_VIRTUAL DC    CL7' '
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_09_CUAD    DC    CL4' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    C'  EXCP''s'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_09_EXCP    DC    X'402020206B2020206B202120'
MSG_09_L       EQU   *-MSG_09

MSG_10         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL20'Page in''s'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_10_PGIN    DC    X'402020206B2020206B202120'
               DC    C'  ('
MSG_10_PSI     DC    X'402020206B2020206B202120'
               DC    C'  pages)'
MSG_10_L       EQU   *-MSG_10

MSG_11         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL20'Page out''s'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_11_PGOT    DC    X'402020206B2020206B202120'
               DC    C'  ('
MSG_11_PSO     DC    X'402020206B2020206B202120'
               DC    C'  pages)'
MSG_11_L       EQU   *-MSG_11

MSG_12         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL20'Address space swaps'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_12_NSW     DC    X'402020206B2020206B202120'
MSG_12_L       EQU   *-MSG_12

MSG_13         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL20'VIO page-in''s'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_13_VPI     DC    X'402020206B2020206B202120'
MSG_13_L       EQU   *-MSG_13

MSG_14         DS    0C
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL20'VIO page-out''s'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_14_VPO     DC    X'402020206B2020206B202120'
MSG_14_L       EQU   *-MSG_14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WK0004         DSECT
               COPY     DXDPREF
DXD_A          DS       CL80
DXD_B          DS       CL80
DXD_DATE       DS       PL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SMF_RECORD     DSECT
               IFASMFR  4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     REGEQU
               END      SMF0004
