*---------------------------------------------------------------------*
*                                                                     *
*         Format SMF record type 70                                   *
*                                                                     *
*                                                                     *
*   At entry                                                          *
*       R15    program base address                                   *
*       R14    return address                                         *
*       R8     VDATA buffer address                                   *
*       R7     SMF record address +4 (does not include length)        *
*                                                                     *
* ------------------------------------------------------------------- *
SMF0070  CSECT
SMF0070  AMODE 31
SMF0070  RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING SMF0070,R15
         B     INIT0000
MODID    DC    CL8'SMF0070'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         LA    R9,2048(R10)
         LA    R9,2048(R9)
         DROP  R15
         USING SMF0070,R10,R9                 DEFINE BASE
         LR    R2,R1                          COPY SCREEN NUMBER
         L     R1,SESS_FORMATTER_DXD_ADDR
         A     R1,DXDSTART
         ST    R13,4(R1)                      SAVE R13
         ST    R1,8(R13)                      CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WK0070,R13                     DEFINE BASE
         USING SMF70FLG,R7
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               DATA1=(SMF70STY,1),                                     +
               RDATA2=R2
         L     R1,COMM_OSSPFD
         USING OSSPFD,R1
         L     R6,SPF_VDEPTH                  NUMBER OF LINES AVAILABLE
         MVC   DXD_VWIDTH,SPF_VWIDTH
         DROP  R1
         A     R8,DXD_VWIDTH                  LEAVE A BLANK LINE
         BCTR  R6,0
         CLC   SMF70STY,X_0001                SUBTYPE 1?
         BE    INIT0010                       YES
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*      We don't have a crypto processor.. if I did try to add         *
*      code to process it, I wouldn't know if it was working.         *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
*        CLC   SMF70STY,X_0002                SUBTYPE 2?
*        BE    INIT0020
         ITRACE ID=BAD_SUB
         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
INIT0010 DS    0H
         CH    R2,H15                         TOO HIGH FOR TYPE 1?
         BH    MAIN0100                       YES
         SLL   R2,2                           TIMES  4
         B     *(R2)
         B     MAIN0100                       SUBTYPE 1 SCREEN 1
         B     MAIN0400                       SUBTYPE 1 SCREEN 2
         B     MAIN0600                       SUBTYPE 1 SCREEN 3
         B     MAIN0700                       SUBTYPE 1 SCREEN 4
         B     MAIN0800                       SUBTYPE 1 SCREEN 5
         B     MAIN0900                       SUBTYPE 1 SCREEN 6
         B     MAIN1000                       SUBTYPE 1 SCREEN 7
         B     MAIN1100                       SUBTYPE 1 SCREEN 8
         B     MAIN1200                       SUBTYPE 1 SCREEN 9
         B     MAIN1300                       SUBTYPE 1 SCREEN 10
         B     MAIN1400                       SUBTYPE 1 SCREEN 11
         B     MAIN1500                       SUBTYPE 1 SCREEN 12
         B     MAIN1600                       SUBTYPE 1 SCREEN 13
         B     MAIN3000                       SUBTYPE 1 SCREEN 14
         B     MAIN4000                       SUBTYPE 1 SCREEN 15
*---------------------------------------------------------------------*
*        Subtype 1 screen 1 (CPU control)                             *
*---------------------------------------------------------------------*
MAIN0100 DS    0H
         ITRACE ID=1_1
         L     R5,SMF70CCS                    OFFSET TO CPU CONTROL
         AR    R5,R7                          PLUS BASE
         SH    R5,H4
         USING SMF70CTL,R5                    DEFINE BASE
         LH    R4,SMF70CCN                    NUMBER OF CPU SECTION(S)
         MVC   0(CPU_CONTROL_HEADING_L,R8),CPU_CONTROL_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
MAIN0110 DS    0H
         MVC   0(MSG_01_L,R8),MSG_01          INITIALIZE MESSAGE
         USING MSG_01,R8
         UNPK  MSG_01_MODEL(5),SMF70MOD(3)    CPU MODEL
         TR    MSG_01_MODEL,HEXCHAR           TRANSLATE
         MVI   MSG_01_MODEL+4,C' '
         SR    R0,R0
         IC    R0,SMF70VER                    CPU VERSION
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_01_VERSION,COMM_DWORD+6    EDIT CPU VERSION
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0120
         B     EXIT0000
         DROP  R8

MAIN0120 DS    0H
         MVC   0(MSG_02_L,R8),MSG_02          INITIALIZE MESSAGE
         USING MSG_02,R8
         IC    R0,SMF70BNP                    NUMBER OF PROCESSORS
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_02_PROCESSORS,COMM_DWORD+6 EDIT NUMBER OF PROCESSORS
         LA    R15,L'MSG_02_PROCESSORS
MAIN0130 DS    0H
         CLI   MSG_02_PROCESSORS,C' '         BLANK?
         BNE   MAIN0140                       NO
         MVC   MSG_02_PROCESSORS(L'MSG_02_PROCESSORS-1),MSG_02_PROCESSO+
               RS+1
         MVI   MSG_02_PROCESSORS+(L'MSG_02_PROCESSORS-1),C' '
         BCT   R15,MAIN0130                   LOOP
MAIN0140 DS    0H
         DROP  R8
         A     R8,DXD_VWIDTH                  NEXT LINE
         BCT   R6,MAIN0150
         B     EXIT0000                       BUFFER FULL

MAIN0150 DS    0H
         MVC   0(MSG_03_L,R8),MSG_03          INITIALIZE MESSAGE
         USING MSG_03,R8
         TM    SMF70INB,SMF70DIF              DIAGNOSE X'204' FAILURE?
         BNO   MAIN0160                       NO
         MVC   MSG_03_MSG(L'DIAG204_FAILED),DIAG204_FAILED
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0160
         B     EXIT0000
MAIN0160 DS    0H
         TM    SMF70INB,SMF70NPC          NUMBER OF PROCESSOR CHANGED?
         BNO   MAIN0170                   NO
         MVC   MSG_03_MSG(L'PROCESSOR_CHANGED),PROCESSOR_CHANGED
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0170
         B     EXIT0000
MAIN0170 DS    0H
         TM    SMF70INB,SMF70TSC          DISPATCH INTERVAL CHANGED?
         BNO   MAIN0180                   NO
         MVC   MSG_03_MSG(L'DISPATCH_CHANGED),DISPATCH_CHANGED
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0180
         B     EXIT0000
MAIN0180 DS    0H
         TM    SMF70INB,SMF70PHY          'PHYSICAL' PARTITION?
         BNO   MAIN0190                   NO
         MVC   MSG_03_MSG(L'PHYSICAL),PHYSICAL
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0190
         B     EXIT0000
MAIN0190 DS    0H
         TM    SMF70INB,SMF70DGE          DIAGNOSE X'204' SUPPORTED?
         BNO   MAIN0200                   NO
         MVC   MSG_03_MSG(L'DIAG204_SUPPORTED),DIAG204_SUPPORTED
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0200
         B     EXIT0000
         DROP  R8
MAIN0200 DS    0H
         MVC   0(MSG_04_L,R8),MSG_04
         USING MSG_04,R8
         TM    SMF70STF,SMF70STS          STORE SYSTEM INFORMATION?
         BNO   MAIN0210                   NO
         MVC   MSG_04_MSG(L'STORE_SYSTEM),STORE_SYSTEM
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0210
         B     EXIT0000
MAIN0210 DS    0H
         TM    SMF70STF,SMF70ADC          CPU ADJUSTMENT FACTOR CHANGE?
         BNO   MAIN0220                   NO
         MVC   MSG_04_MSG(L'CPU_ADJUSTMENT),CPU_ADJUSTMENT
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0220
         B     EXIT0000
MAIN0220 DS    0H
         TM    SMF70STF,SMF70WUC          SERVICE UNITS FOR MVS CHANGE?
         BNO   MAIN0230                   NO
         MVC   MSG_04_MSG(L'MVS_SERVICE_UNITS),MVS_SERVICE_UNITS
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0230
         B     EXIT0000
MAIN0230 DS    0H
         TM    SMF70STF,SMF70RCU          SMF70LAC PROVIDED?
         BNO   MAIN0240                   NO
         MVC   MSG_04_MSG(L'SMF70LAC_PROVIDED),SMF70LAC_PROVIDED
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0240
         B     EXIT0000
MAIN0240 DS    0H
         TM    SMF70STF,SMF70HWV          SMF70MDL/SMF70HWM?
         BNO   MAIN0250                   NO
         MVC   MSG_04_MSG(L'SMF70MDL_SMF70HWM),SMF70MDL_SMF70HWM
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0250
         B     EXIT0000
         DROP  R8
MAIN0250 DS    0H
         MVC   0(MSG_05_L,R8),MSG_05      INITIALIZE MESSAGE
         USING MSG_05,R8
         SR    R0,R0
         ICM   R0,3,SMF70GTS              DISPATCH INTERVAL
         CVD   R0,COMM_DWORD
         ED    MSG_05_DISPATCH,COMM_DWORD+5
         LA    R15,L'MSG_05_DISPATCH
MAIN0260 DS    0H
         CLI   MSG_05_DISPATCH,C' '       BLANK?
         BNE   MAIN0270                   NO
         MVC   MSG_05_DISPATCH(L'MSG_05_DISPATCH-1),MSG_05_DISPATCH+1
         MVI   MSG_05_DISPATCH+(L'MSG_05_DISPATCH-1),C' '
         BCT   R15,MAIN0260               LOOP
         DROP  R8
MAIN0270 DS    0H
         A     R8,DXD_VWIDTH              NEXT LINE
         BCT   R6,MAIN0280
         B     EXIT0000
MAIN0280 DS    0H
         MVC   0(MSG_06_L,R8),MSG_06      INITIALIZE MESSAGE
         USING MSG_06,R8
         ICM   R0,3,SMF70DSA              DIAGNOSE SAMPLES
         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL
         ED    MSG_06_DIAGNOSE,COMM_DWORD+5
         LA    R15,L'MSG_06_DIAGNOSE
MAIN0290 DS    0H
         CLI   MSG_06_DIAGNOSE,C' '       BLANK?
         BNE   MAIN0300                   NO
         MVC   MSG_06_DIAGNOSE(L'MSG_06_DIAGNOSE-1),MSG_06_DIAGNOSE+1
         MVI   MSG_06_DIAGNOSE+(L'MSG_06_DIAGNOSE-1),C' '
         BCT   R15,MAIN0290
         DROP  R8
MAIN0300 DS    0H
         A     R8,DXD_VWIDTH              NEXT LINE
         BCT   R6,MAIN0310
         B     EXIT0000
MAIN0310 DS    0H
         MVC   0(MSG_07_L,R8),MSG_07      INITIALIZE MESSAGE
         USING MSG_07,R8
         MVC   MSG_07_MODEL_1,SMF70MDL
         MVC   MSG_07_MODEL_2,SMF70HWM
         DROP  R8,R5
         B     EXIT0000
*---------------------------------------------------------------------*
*        Subtype 1 screen 2 (CPU data)                                *
*---------------------------------------------------------------------*
MAIN0400 DS    0H
         ITRACE ID=1_2
         L     R5,SMF70CPS                    OFFSET TO CPU DATA
         AR    R5,R7                          PLUS BASE
         SH    R5,H4
         USING SMF70CPU,R5                    DEFINE BASE
         LH    R4,SMF70CPN                    NUMBER OF SECTION(S)
         MVC   0(CPU_DATA_HEADING_L,R8),CPU_DATA_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         MVC   0(MSG_08_L,R8),MSG_08          INITIALIZE MESSAGE
         USING MSG_08,R8
         SR    R0,R0                          CLEAR REGISTER
         ICM   R0,3,SMF70CID                  CPU ID
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_08_CPU,COMM_DWORD+6        EDIT CPU NUMBER
         LA    R15,L'MSG_08_CPU
MAIN0410 DS    0H
         CLI   MSG_08_CPU,C' '                BLANK?
         BNE   MAIN0430                       NO
MAIN0420 DS    0H
         MVC   MSG_08_CPU(L'MSG_08_CPU-1),MSG_08_CPU+1
         MVI   MSG_08_CPU+(L'MSG_08_CPU-1),C' '
         BCT   R15,MAIN0420                   LOOP
MAIN0430 DS    0H
         DROP  R8
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0440
         B     EXIT0000                       SCREEN FULL
MAIN0440 DS    0H
         MVC   0(MSG_09_L,R8),MSG_09          INITIALIZE MESSAGE
         USING MSG_09,R8
         TM    SMF70CNF,SMF70DCI              COMPLETE INTERVAL?
         BNO   MAIN0450
         MVC   MSG_09_MSG(L'COMPLETE),COMPLETE
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0450
         B     EXIT0000                       SCREEN FULL
MAIN0450 DS    0H
         TM    SMF70CNF,SMF70PAR              CPU VARIED DURING POST
         BNO   MAIN0460
         MVC   MSG_09_MSG(L'CPU_POST),CPU_POST
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0460
         B     EXIT0000                       SCREEN FULL
MAIN0460 DS    0H
         TM    SMF70CNF,SMF70VAC              CPU VARIED ON OR OFF?
         BNO   MAIN0470
         MVC   MSG_09_MSG(L'CPU_VARIED),CPU_VARIED
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0470
         B     EXIT0000                       SCREEN FULL
MAIN0470 DS    0H
         TM    SMF70CNF,SMF70STA              CPU OFFLINE?
         BNO   MAIN0480
         MVC   MSG_09_MSG(L'CPU_OFFLINE),CPU_OFFLINE
         DROP  R8
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0480
         B     EXIT0000                       SCREEN FULL
MAIN0480 DS    0H
         MVC   0(MSG_10_L,R8),MSG_10          INITIALIZE MESSAGE
         USING MSG_10,R8
         UNPK  MSG_10_SERIAL(7),SMF70SER(4)   UNPACK CPU SERIAL
         TR    MSG_10_SERIAL,HEXCHAR          TRANSLATE
         MVI   MSG_10_SERIAL+6,C' '
         DROP  R8
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0490
         B     EXIT0000                       SCREEN FULL
MAIN0490 DS    0H
         MVC   0(MSG_11_L,R8),MSG_11          INITIALIZE MESSAGE
         USING MSG_11,R8
         TM    SMF70TYP,SMF70TIF              IFA PROCESSOR?
         BO    MAIN0500                       YES
         MVC   MSG_11_TYPE(L'STANDARD),STANDARD
         B     MAIN0510
MAIN0500 DS    0H
         MVC   MSG_11_TYPE(L'IFA),IFA         IFA PROCESSOR
         DROP  R8
MAIN0510 DS    0H
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN0520
         B     EXIT0000                       SCREEN FULL
MAIN0520 DS    0H
         MVC   0(MSG_12_L,R8),MSG_12          INITIALIZE MESSAGE
         USING MSG_12,R8
         L     R0,SMF70SLH                    NBR OF TIMES SLIH ENTERED
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_12_SLIH,COMM_DWORD+2       EDIT
         LA    R15,L'MSG_12_SLIH
MAIN0530 DS    0H
         CLI   MSG_12_SLIH,C' '               BLANK?
         BNE   MAIN0540                       NO
         MVC   MSG_12_SLIH(L'MSG_12_SLIH-1),MSG_12_SLIH+1
         MVI   MSG_12_SLIH+(L'MSG_12_SLIH-1),C' '
         BCT   R15,MAIN0530                   LOOP
         DROP  R8
MAIN0540 DS    0H
         A     R8,DXD_VWIDTH                  NEXT LINE
         BCT   R6,MAIN0550
         B     EXIT0000
MAIN0550 DS    0H
         MVC   0(MSG_13_L,R8),MSG_13          INITIALIZE MESSAGE
         USING MSG_13,R8
         TM    SMF70V,SMF70VON                ONLINE?
         BO    MAIN0560                       YES
         MVC   MSG_13_ONLINE(L'NO),NO
         B     EXIT0000
MAIN0560 DS    0H
         MVC   MSG_13_ONLINE(L'YES),YES
         DROP  R8
         B     EXIT0000
*---------------------------------------------------------------------*
*        Subtype 1 screen 3 (ASID READY)                              *
*---------------------------------------------------------------------*
MAIN0600 DS    0H
         ITRACE ID=READY
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         USING SMF70AID,R5
         LA    R3,SMF70RMN
         LA    R2,TABLE_1                 CONTROL TABLE
         MVC   0(READY_HEADING_L,R8),READY_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
*---------------------------------------------------------------------*
*        SUBTYPE 1 SCREEN 4 (IN users)                                *
*---------------------------------------------------------------------*
MAIN0700 DS    0H
         ITRACE ID=IN
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         LA    R3,SMF70IMN
         LA    R2,TABLE_2                 CONTROL TABLE
         MVC   0(IN_HEADING_L,R8),IN_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
*---------------------------------------------------------------------*
*        SUBTYPE 1 SCREEN 5 (OUT users)                               *
*---------------------------------------------------------------------*
MAIN0800 DS    0H
         ITRACE ID=OUT
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         LA    R3,SMF70OMN
         LA    R2,TABLE_2                 CONTROL TABLE
         MVC   0(OUT_HEADING_L,R8),OUT_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
*---------------------------------------------------------------------*
*        SUBTYPE 1 SCREEN 6 (WAIT users)                              *
*---------------------------------------------------------------------*
MAIN0900 DS    0H
         ITRACE ID=WAIT
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         LA    R3,SMF70WMN
         LA    R2,TABLE_2                 CONTROL TABLE
         MVC   0(WAIT_HEADING_L,R8),WAIT_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
*---------------------------------------------------------------------*
*        SUBTYPE 1 SCREEN 7 (Batch users)                             *
*---------------------------------------------------------------------*
MAIN1000 DS    0H
         ITRACE ID=BATCH
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         LA    R3,SMF70BMN
         LA    R2,TABLE_2                 CONTROL TABLE
         MVC   0(BATCH_HEADING_L,R8),BATCH_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
*---------------------------------------------------------------------*
*        SUBTYPE 1 SCREEN 8 (STCs)                                    *
*---------------------------------------------------------------------*
MAIN1100 DS    0H
         ITRACE ID=STC
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         LA    R3,SMF70SMN
         LA    R2,TABLE_2                 CONTROL TABLE
         MVC   0(STC_HEADING_L,R8),STC_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
*---------------------------------------------------------------------*
*        SUBTYPE 1 SCREEN 9 (TSO users)                               *
*---------------------------------------------------------------------*
MAIN1200 DS    0H
         ITRACE ID=TSO
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         LA    R3,SMF70TMN
         LA    R2,TABLE_2                 CONTROL TABLE
         MVC   0(TSO_HEADING_L,R8),TSO_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
*---------------------------------------------------------------------*
*        SUBTYPE 1 SCREEN 10 (LREADY)                                 *
*---------------------------------------------------------------------*
MAIN1300 DS    0H
         ITRACE ID=LREADY
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         LA    R3,SMF70LMN
         LA    R2,TABLE_2                 CONTROL TABLE
         MVC   0(LREADY_HEADING_L,R8),LREADY_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
*---------------------------------------------------------------------*
*        SUBTYPE 1 SCREEN 11 (LWAIT)                                  *
*---------------------------------------------------------------------*
MAIN1400 DS    0H
         ITRACE ID=LWAIT
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         LA    R3,SMF70AMN
         LA    R2,TABLE_2                 CONTROL TABLE
         MVC   0(LWAIT_HEADING_L,R8),LWAIT_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
*---------------------------------------------------------------------*
*        SUBTYPE 1 SCREEN 12 (ASCH)                                   *
*---------------------------------------------------------------------*
MAIN1500 DS    0H
         ITRACE ID=ASCH
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         LA    R3,SMF70PMN
         LA    R2,TABLE_2                 CONTROL TABLE
         MVC   0(ASCH_HEADING_L,R8),ASCH_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
*---------------------------------------------------------------------*
*        SUBTYPE 1 SCREEN 13 (OMVS)                                   *
*---------------------------------------------------------------------*
MAIN1600 DS    0H
         ITRACE ID=OMVS
         L     R5,SMF70ASS
         AR    R5,R7
         SH    R5,H4
         LA    R3,SMF70XMN
         LA    R2,TABLE_2                 CONTROL TABLE
         MVC   0(OMVS_HEADING_L,R8),OMVS_HEADING
         A     R8,DXD_VWIDTH
         A     R8,DXD_VWIDTH
         BCTR  R6,0
         BCTR  R6,0
         B     MAIN2000
         DROP  R5
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
MAIN2000 DS    0H
         USING SMF70RMN,R3                <-- PAY ATTENTION!
         MVC   0(MSG_14_L,R8),MSG_14      INITIALIZE MESSAGE
         USING MSG_14,R8
         MVC   MSG_14_DESC,MINIMUM        COPY COUNTER HEADING
         LH    R0,SMF70RMN                MINUMUM VALUE
         CVD   R0,COMM_DWORD
         ED    MSG_14_NBR,COMM_DWORD+2    EDIT
         DROP  R8
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN2010
         B     EXIT0000
MAIN2010 DS    0H
         MVC   0(MSG_14_L,R8),MSG_14      INITIALIZE MESSAGE
         USING MSG_14,R8
         MVC   MSG_14_DESC,MAXIMUM        COPY COUNTER HEADING
         LH    R0,SMF70RMM                MAXIMUM VALUE
         CVD   R0,COMM_DWORD
         ED    MSG_14_NBR,COMM_DWORD+2    EDIT
         DROP  R8
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN2020
         B     EXIT0000
MAIN2020 DS    0H
         MVC   0(MSG_14_L,R8),MSG_14      INITIALIZE MESSAGE
         USING MSG_14,R8
         MVC   MSG_14_DESC,TOTAL          COPY COUNTER HEADING
         LH    R0,SMF70RTT                MAXIMUM VALUE
         CVD   R0,COMM_DWORD
         ED    MSG_14_NBR,COMM_DWORD+2    EDIT
         DROP  R8
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN2030
         B     EXIT0000
MAIN2030 DS    0H
         LA    R3,SMF70R00                1ST COUNTER
MAIN2040 DS    0H
         MVC   0(MSG_14_L,R8),MSG_14
         USING MSG_14,R8
         MVC   MSG_14_DESC,0(R2)          COPY HEADING
         L     R0,0(R3)                   COUNTER VALUE
         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL
         ED    MSG_14_NBR,COMM_DWORD+2    EDIT
         DROP  R8
         A     R8,DXD_VWIDTH
         BCT   R6,MAIN2050
         B     EXIT0000                   SCREEN FULL
MAIN2050 DS    0H
         LA    R3,4(,R3)                  NEXT COUNTER
         LA    R2,10(,R2)                 NEXT DESCRIPTION
         CLI   0(R2),X'FF'                END OF TABLE?
         BE    EXIT0000                   YES
         B     MAIN2040                   LOOP
*---------------------------------------------------------------------*
*        Logical partition data                                       *
*---------------------------------------------------------------------*
MAIN3000 DS    0H
         ITRACE ID=LPAR
         MVC   0(PARTITION_HEADING_L,R8),PARTITION_HEADING
         A     R8,DXD_VWIDTH              NEXT LINE
         BCTR  R6,0
         A     R8,DXD_VWIDTH              NEXT LINE
         BCTR  R6,0
         A     R8,DXD_VWIDTH              NEXT LINE
         BCTR  R6,0
         L     R5,SMF70BCS                OFFSET TO LPAR DATA
         AR    R5,R7                      PLUS BASE
         SH    R5,H4
         USING SMF70BCT,R5                DEFINE BASE
         LH    R4,SMF70BCN                NUMBER OF LPAR SECTIONS
MAIN3010 DS    0H
         MVC   0(MSG_15_L,R8),MSG_15      INITIALIZE MESSAGE
         USING MSG_15,R8
         SR    R0,R0
         IC    R0,SMF70LPN                PARTITION NUMBER
         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL
         ED    MSG_15_NUMBER,COMM_DWORD+6 EDIT
         MVC   MSG_15_NAME,SMF70LPM       LPAR  NAME
         MVC   MSG_15_CLUSTER,SMF70SPN    CLUSTER NAME
         MVC   MSG_15_SYSTEM,SMF70STN     SYSTEM NAME
         ICM   R0,3,SMF70BDN              NUMBER OF CPUS
         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL
         ED    MSG_15_CPUS,COMM_DWORD+5   EDIT
         ICM   R0,15,SMF70CSF             MEGABYTES OF CENTRAL STORAGE
         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL
         ED    MSG_15_CENTRAL,COMM_DWORD+3
         ICM   R0,15,SMF70ESF             MEGABYTES OF EXPANDED
         CVD   R0,COMM_DWORD              CONVERT TO DECIMAL
         ED    MSG_15_EXPANDED,COMM_DWORD+3
         DROP  R8
         A     R8,DXD_VWIDTH              NEXT LINE
         BCT   R6,MAIN3020
         B     EXIT0000
MAIN3020 DS    0H
         AH    R5,SMF70BCL                NEXT LPAR SECTION
         BCT   R4,MAIN3010                PROCESS NEXT LPAR
         B     EXIT0000
         DROP  R5
*---------------------------------------------------------------------*
*        CPU IDENTIFICATION                                           *
*---------------------------------------------------------------------*
MAIN4000 DS    0H
         ITRACE ID=CPU_ID
         MVC   0(CPU_HEADING_L,R8),CPU_HEADING
         A     R8,DXD_VWIDTH              NEXT LINE
         BCTR  R6,0
         A     R8,DXD_VWIDTH              NEXT LINE
         BCTR  R6,0
         L     R5,SMF70CNS                OFFSET TO CPU ID DATA
         AR    R5,R7                      PLUS BASE
         SH    R5,H4
         USING SMF70CIS,R5                DEFINE BASE
         LH    R4,SMF70CNN                NUMBER OF CPU ID SECTIONS
MAIN4010 DS    0H
         MVC   0(MSG_16_L,R8),MSG_16      INITIALIZE MESSAGE
         USING MSG_16,R8
         MVC   MSG_16_CPU,SMF70CIS        COPY CPU IDENTIFICATION
         DROP  R8
         A     R8,DXD_VWIDTH              NEXT LINE
         BCT   R6,MAIN4020
         B     EXIT0000
MAIN4020 DS    0H
         AH    R5,SMF70CNL                NEXT CPU
         BCT   R4,MAIN4010                PROCESS NEXT CPU
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         SR    R2,R2
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         L     R13,4(R13)                 RESTORE SAVE AREA ADDRESS
         L     R14,12(,R13)               RESTORE R14
         LR    R15,R2                     SET RC
         LM    R0,R12,20(R13)             RESTORE REMAINING REGISTERS
         BR    R14                        RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART             DC    Q(WK0070)
F60                  DC    F'60'
F100                 DC    F'100'
F3600                DC    F'3600'

H3                   DC    H'3'
H4                   DC    H'4'
H15                  DC    H'15'

X_0001               DC    X'0001'
X_0002               DC    X'0002'

HEXCHAR              EQU   *-C'0'
                     DC    C'0123456789ABCDEF'

NOT_KNOWN            DC    C'Subtype not known'
DIAG204_FAILED       DC    C'Diagnose 204 failed'
PROCESSOR_CHANGED    DC    C'Number of processors has changed'
DISPATCH_CHANGED     DC    C'Dispatch interval has changed'
PHYSICAL             DC    C'Partition named ''physical'' present'
DIAG204_SUPPORTED    DC    C'Diagnose 204 supported'
STORE_SYSTEM         DC    C'Store system information facility'
CPU_ADJUSTMENT       DC    C'Physical CPU adjustment factor changed'
MVS_SERVICE_UNITS    DC    C'Service units available to MVS changed'
SMF70LAC_PROVIDED    DC    C'SMF70LAC provided'
SMF70MDL_SMF70HWM    DC    C'SMF70MDL and SMF70HWM valid'
COMPLETE             DC    C'Data available for complete interval'
CPU_POST             DC    C'CPU varied during post processor'
CPU_VARIED           DC    C'Data invalid, CPU varied on or off'
CPU_OFFLINE          DC    C'CPU is currently OFFLINE'
STANDARD             DC    C'Standard'
IFA                  DC    C'IFA'
YES                  DC    C'Yes'
NO                   DC    C'No'
MAXIMUM              DC    CL10'MAXIMUM'
MINIMUM              DC    CL10'MINIMUM'
TOTAL                DC    CL10'TOTAL'

TABLE_1              DS    0C
                     DC    CL10'Zero'
                     DC    CL10'1'
                     DC    CL10'2'
                     DC    CL10'3'
                     DC    CL10'4'
                     DC    CL10'5'
                     DC    CL10'6'
                     DC    CL10'7'
                     DC    CL10'8'
                     DC    CL10'9'
                     DC    CL10'10'
                     DC    CL10'11'
                     DC    CL10'12'
                     DC    CL10'13'
                     DC    CL10'14'
                     DC    CL10'14+'
                     DC    X'FF'

TABLE_2              DS    0C
                     DC    CL10'Zero'
                     DC    CL10'1-2'
                     DC    CL10'3-4'
                     DC    CL10'5-6'
                     DC    CL10'7-8'
                     DC    CL10'9-10'
                     DC    CL10'11-15'
                     DC    CL10'16-20'
                     DC    CL10'21-25'
                     DC    CL10'26-30'
                     DC    CL10'31-35'
                     DC    CL10'35+'
                     DC    X'FF'


CPU_CONTROL_HEADING  DS    0C
                     DC    33C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'CPU CONTROL'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    33C'-'
                     DC    C'>'
CPU_CONTROL_HEADING_L EQU  *-CPU_CONTROL_HEADING

CPU_DATA_HEADING     DS    0C
                     DC    C'<'
                     DC    34C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'CPU DATA'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    34C'-'
                     DC    C'>'
CPU_DATA_HEADING_L   EQU   *-CPU_DATA_HEADING

ASID_HEADING         DS    0C
                     DC    C'<'
                     DC    33C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'ASID DATA'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    34C'-'
                     DC    C'>'
ASID_HEADING_L       EQU   *-ASID_HEADING

READY_HEADING        DS    0C
                     DC    C'<'
                     DC    28C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'READY address spaces'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    28C'-'
                     DC    C'>'
READY_HEADING_L      EQU   *-READY_HEADING

IN_HEADING           DS    0C
                     DC    C'<'
                     DC    29C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'IN address spaces'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    30C'-'
                     DC    C'>'
IN_HEADING_L         EQU   *-IN_HEADING

OUT_HEADING          DS    0C
                     DC    C'<'
                     DC    28C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'OUT address spaces'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    30C'-'
                     DC    C'>'
OUT_HEADING_L        EQU   *-OUT_HEADING

WAIT_HEADING         DS    0C
                     DC    C'<'
                     DC    27C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'WAITING address spaces'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    27C'-'
                     DC    C'>'
WAIT_HEADING_L       EQU   *-WAIT_HEADING

BATCH_HEADING        DS    0C
                     DC    C'<'
                     DC    28C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'BATCH address spaces'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    28C'-'
                     DC    C'>'
BATCH_HEADING_L      EQU   *-BATCH_HEADING

STC_HEADING          DS    0C
                     DC    C'<'
                     DC    29C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'STC address spaces'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    29C'-'
                     DC    C'>'
STC_HEADING_L        EQU   *-STC_HEADING

TSO_HEADING          DS    0C
                     DC    C'<'
                     DC    33C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'TSO users'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    34C'-'
                     DC    C'>'
TSO_HEADING_L        EQU   *-TSO_HEADING

LREADY_HEADING       DS    0C
                     DC    C'<'
                     DC    27C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'LREADY address spaces'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    28C'-'
                     DC    C'>'
LREADY_HEADING_L     EQU   *-LREADY_HEADING

LWAIT_HEADING        DS    0C
                     DC    C'<'
                     DC    28C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'LWAIT address spaces'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    28C'-'
                     DC    C'>'
LWAIT_HEADING_L      EQU   *-LWAIT_HEADING

ASCH_HEADING         DS    0C
                     DC    C'<'
                     DC    29C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'ASCH address spaces'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    28C'-'
                     DC    C'>'
ASCH_HEADING_L       EQU   *-ASCH_HEADING

OMVS_HEADING         DS    0C
                     DC    C'<'
                     DC    29C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'OMVS address spaces'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    28C'-'
                     DC    C'>'
OMVS_HEADING_L       EQU   *-OMVS_HEADING


MSG_08               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'CPU ID             '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_08_CPU           DC    X'40202120'
MSG_08_L             EQU   *-MSG_08

PARTITION_HEADING    DS    0C

                     DC    C'<'
                     DC    30C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Logical partition'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    29C'-'
                     DC    C'>'

                     DC    CL4' '
                     DC    C'#'
                     DC    C' '
                     DC    CL8'NAME'
                     DC    C' '
                     DC    C'CLUSTER'
                     DC    C'  '
                     DC    CL8'SYSTEM'
                     DC    C' '
                     DC    CL6'  CPUs'
                     DC    C' '
                     DC    CL12'Main STRG MB'
                     DC    C' '
                     DC    CL12'Expanded  MB'
PARTITION_HEADING_L  EQU   *-PARTITION_HEADING

CPU_HEADING          DS    0C
                     DC    C'<'
                     DC    29C'-'
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'CPU identification'
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    30C'-'
CPU_HEADING_L        EQU   *-CPU_HEADING

MSG_01               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'CPU model          '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_01_MODEL         DC    CL4' '
                     DC    C' '
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'  Version '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_01_VERSION       DC    X'40202120'
MSG_01_L             EQU   *-MSG_01

MSG_02               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'NBR of processors  '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_PROCESSORS    DC    X'40202120'
MSG_02_L             EQU   *-MSG_02

MSG_03               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'PR/SM flags        '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_MSG           DC    CL40' '
MSG_03_L             EQU   *-MSG_03

MSG_04               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Other flags        '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_04_MSG           DC    CL40' '
MSG_04_L             EQU   *-MSG_04

MSG_05               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Dispatch interval  '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_05_DISPATCH      DC    X'402020202120'
MSG_05_L             EQU   *-MSG_05

MSG_06               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Diagnose samples   '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_06_DIAGNOSE      DC    X'402020202120'
MSG_06_L             EQU   *-MSG_06

MSG_07               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Processor model    '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_07_MODEL_1       DC    CL16' '
                     DC    C' '
MSG_07_MODEL_2       DC    CL16' '
MSG_07_L             EQU   *-MSG_07

MSG_09               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'Configuration      '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_09_MSG           DC    CL40' '
MSG_09_L             EQU   *-MSG_09

MSG_10               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'CPU Serial         '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_10_SERIAL        DC    CL6' '
                     DC    c' '
MSG_10_L             EQU   *-MSG_10

MSG_11               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'CPU type           '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_11_TYPE          DC    CL8' '
MSG_11_L             EQU   *-MSG_11

MSG_12               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'SLIH entered       '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_12_SLIH          DC    X'402020202020202020202120'
MSG_12_L             EQU   *-MSG_12

MSG_13               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
                     DC    C'ONLINE?            '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_13_ONLINE        DC    CL3' '
MSG_13_L             EQU   *-MSG_13

MSG_14               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
MSG_14_DESC          DC    CL10' '              '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_14_NBR           DC    X'4020206B2020206B2020206B202120'
MSG_14_L             EQU   *-MSG_14

MSG_15               DS    0C
                     DC    AL1($SCREEN_ATTR_HIGH)
MSG_15_NUMBER        DC    X'40202120'
                     DC    C' '
MSG_15_NAME          DC    CL8' '               '
                     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_15_CLUSTER       DC    CL8' '
                     DC    C' '
MSG_15_SYSTEM        DC    CL8' '
                     DC    C' '
MSG_15_CPUS          DC    X'402020202120'
                     DC    C' '
MSG_15_CENTRAL       DC    X'402020206B2020206B202120'
                     DC    C' '
MSG_15_EXPANDED      DC    X'402020206B2020206B202120'
MSG_15_L             EQU   *-MSG_15

MSG_16               DS    0C
                     DC    AL1($SCREEN_ATTR_NORMAL)
                     DC    C'CPU '
MSG_16_CPU           DC    CL16' '
MSG_16_L             EQU   *-MSG_16
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WK0070         DSECT
               COPY     DXDPREF
DXD_VWIDTH     DS       F
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT  DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SMF_RECORD     DSECT
               ERBSMF70
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY      ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY      TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY      REGEQU
               END       SMF0070
