*---------------------------------------------------------------------*
*                                                                     *
*         Format SMF record type 0                                    *
*                                                                     *
*                                                                     *
*   At entry                                                          *
*       R15    program base address                                   *
*       R14    return address                                         *
*       R11    SESSION address                                        *
*       R9     OSSPFD address                                         *
*       R8     VDATA buffer address                                   *
*       R7     SMF record address +4 (does not include length)        *
*                                                                     *
* ------------------------------------------------------------------- *
SMF0000  CSECT
SMF0000  AMODE 31
SMF0000  RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING SMF0000,R15
         B     INIT0000
MODID    DC    CL8'SMF0000'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         USING OSCOMM,R12            DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)       SAVE REGS
         LR    R10,R15               COPY ENTRY POINT
         USING SMF0000,R10           DEFINE BASE
         DROP  R15
         L     R1,SESS_FORMATTER_DXD_ADDR
         A     R1,DXDSTART           PLUS DISPLACEMENT TO OUR PORITON
         ST    R13,4(R1)             SAVE R13
         ST    R1,8(R13)             CHAIN SAVE AREA
         LR    R13,R1                COPY WORK AREA ADDRESS
         USING WK0000,R13            DEFINE BASE
         USING OSSPFD,R9             DEFINE BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         USING SMF0FLG,R7
         L     R3,SPF_VWIDTH         SCREEN WIDTH
         BCTR  R3,0                  FOR INSTRUCTION LENGTH
         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA
         MVC   DXD_X(MSG_01_L),MSG_01
         ICM   R1,15,SMF0JWT         JOB WAIT TIME
         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL
         ED    DXD_X+(MSG_01_JWT-MSG_01)(L'MSG_01_JWT),COMM_DWORD+4
         EX    R3,MVC_01             COPY DATA
         A     R8,SPF_VWIDTH
         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA
         MVC   DXD_X(MSG_02_L),MSG_02
         ICM   R1,15,SMF0BUF         SMF BUFFER SIZE IN BINARY
         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL
         ED    DXD_X+(MSG_02_BUF-MSG_01)(L'MSG_02_BUF),COMM_DWORD+4
         EX    R3,MVC_01             COPY DATA
         A     R8,SPF_VWIDTH
         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA
         MVC   DXD_X(MSG_03_L),MSG_03
         ICM   R1,15,SMF0VST         VIRTUAL STORAGE SIZE (1K BLOCKS)
         CVD   R1,COMM_DWORD         CONVERT TO DECIMAL
         ED    DXD_X+(MSG_03_VST-MSG_03)(L'MSG_03_VST),COMM_DWORD+4
         EX    R3,MVC_01             COPY DATA
         A     R8,SPF_VWIDTH
         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA
         MVC   DXD_X(MSG_04_L),MSG_04
         UNPK  DXD_Y(3),SMF0OPT(2)   UNPACK OPTIONS
         TR    DXD_Y(2),HEXCHAR      TRANSLATE
         MVC   DXD_X+(MSG_04_OPT-MSG_04)(L'MSG_04_OPT),DXD_Y
         A     R8,SPF_VWIDTH
         TM    SMF0OPT,X'80'         SYSTEM AND JOB DATA COLLECTED?
         BNO   MAIN0010              NO
         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_01),OPT_MSG_01
         A     R8,SPF_VWIDTH         NEXT LINE
MAIN0010 DS    0H
         TM    SMF0OPT,X'40'         STEP DATA TO BE COLLECTED?
         BNO   MAIN0020              NO
         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_02),OPT_MSG_02
         A     R8,SPF_VWIDTH         NEXT LINE
MAIN0020 DS    0H
         TM    SMF0OPT,X'20'         EXITS REQUETED?
         BNO   MAIN0030              NO
         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_03),OPT_MSG_03
         A     R8,SPF_VWIDTH         NEXT LINE
MAIN0030 DS    0H
         TM    SMF0OPT,X'10'         DATA SET ACCOUNTING?
         BNO   MAIN0040              NO
         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_04),OPT_MSG_04
         A     R8,SPF_VWIDTH         NEXT LINE
MAIN0040 DS    0H
         TM    SMF0OPT,X'08'         VOLUME ACCOUNTING?
         BNO   MAIN0050              NO
         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_05),OPT_MSG_05
         A     R8,SPF_VWIDTH         NEXT LINE
MAIN0050 DS    0H
         TM    SMF0OPT,X'02'         TEMPORARY DATA SET SCRATCH?
         BNO   MAIN0060              NO
         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_06),OPT_MSG_06
         A     R8,SPF_VWIDTH         NEXT LINE
MAIN0060 DS    0H
         TM    SMF0OPT,X'01'         FOREGROUND?
         BO    MAIN0070              YES
         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_07),OPT_MSG_07
         B     MAIN0080
MAIN0070 DS    0H
         MVC   MSG_04_OPT-MSG_04(L'OPT_MSG_08),OPT_MSG_08
MAIN0080 DS    0H
         A     R8,SPF_VWIDTH         NEXT LINE

         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA
         MVC   DXD_X(MSG_05_L),MSG_05
         ICM   R1,15,SMF0RST         REAL STORAGE SIZE
         CVD   R1,COMM_DWORD
         ED    DXD_X+(MSG_05_RST-MSG_05)(L'MSG_05_RST),COMM_DWORD+4
         EX    R3,MVC_01             COPY DATA
         A     R8,SPF_VWIDTH
         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA
         MVC   DXD_X(MSG_06_L),MSG_06
         MVC   DXD_X+(MSG_06_OSL-MSG_06)(L'MSG_06_OSL),SMF0OSL
         EX    R3,MVC_01             COPY DATA
         A     R8,SPF_VWIDTH
         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA
         MVC   DXD_X(MSG_07_L),MSG_07
         MVC   DXD_X+(MSG_07_SYN-MSG_07)(L'MSG_07_SYN),SMF0SYN
         EX    R3,MVC_01             COPY DATA
         A     R8,SPF_VWIDTH
         MVC   DXD_X,COMM_BLANKS     INITIALIZE WORK AREA
         MVC   DXD_X(MSG_08_L),MSG_08
         MVC   DXD_X+(MSG_08_SYP-MSG_07)(L'MSG_08_SYP),SMF0SYP
         EX    R3,MVC_01             COPY DATA
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         SR    R2,R2
         B     EXITEXIT
EXIT0004 DS    0H
         LA    R2,4
EXITEXIT DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R2
         L     R14,12(,R13)          RESTORE R14
         LR    R15,R2                SET RC
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
MVC_01   MVC   0(0,R8),DXD_X         COPY TO BUFFER
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(WK0000)
HEXCHAR  EQU   *-C'0'
         DC    C'0123456789ABCDEF'

MSG_01         DS    0C
               DC    CL10' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL30'JOB wait time'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_01_JWT     DC    X'4020202020202120'
               DC    C' in minutes'
MSG_01_L       EQU   *-MSG_01

MSG_02         DS    0C
               DC    CL10' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL30'SMF buffer size'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_BUF     DC    X'4020202020202120'
               DC    C' (bytes)'
MSG_02_L       EQU   *-MSG_02

MSG_03         DS    0C
               DC    CL10' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL30'Virtual storage size'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_VST     DC    X'4020202020202120'
               DC    C' (1k blocks)'
MSG_03_L       EQU   *-MSG_03

MSG_04         DS    0C
               DC    CL10' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL30'Options'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_04_OPT     DC    CL2' '
               DC    C' (hex)'
MSG_04_L       EQU   *-MSG_04

MSG_05         DS    0C
               DC    CL10' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL30'REAL STORAGE SIZE'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_05_RST     DC    X'4020202020202120'
               DC    C' (1k blocks)'
MSG_05_L       EQU   *-MSG_05

MSG_06         DS    0C
               DC    CL10' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL30'Product name'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_06_OSL     DC    CL8' '
MSG_06_L       EQU   *-MSG_06

MSG_07         DS    0C
               DC    CL10' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL30'System name'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_07_SYN     DC    CL8' '
MSG_07_L       EQU   *-MSG_07

MSG_08         DS    0C
               DC    CL10' '
               DC    AL1($SCREEN_ATTR_HIGH)
               DC    CL30'Sysplex name'
               DC    AL1($SCREEN_ATTR_NORMAL)
MSG_08_SYP     DC    CL8' '
MSG_08_L       EQU   *-MSG_08

OPT_MSG_01     DC    C'COLLECT SYSTEM AND JOB DATA'
OPT_MSG_02     DC    C'COLLECT STEP DATA'
OPT_MSG_03     DC    C'EXITS REQUESTED'
OPT_MSG_04     DC    C'DATA SET ACCOUNTING'
OPT_MSG_05     DC    C'VOLUME ACCOUNTING'
OPT_MSG_06     DC    C'CREATE TEMPORARY DATA SET SCRATCH RECORDS'
OPT_MSG_07     DC    C'BACKGROUND'
OPT_MSG_08     DC    C'FOREGROUND'
* ------------------------------------------------------------------- *
*        WORK AREA                                                    *
* ------------------------------------------------------------------- *
WK0000         DSECT
               COPY    DXDPREF
DXD_X          DC      CL80' '
DXD_Y          DC      CL80' '
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SMF_RECORD     DSECT
               IFASMFR  0
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY     TRENTRY
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
               COPY     REGEQU
               END      SMF0000
