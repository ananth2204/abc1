* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: FMTMAIN                                               *
*                                                                     *
*  Process USER formats defined via FIELD and IF/ENDIF statements.    *
*                                                                     *
*  This code will be called for four reasons.                         *
*    1) Initialize                                                    *
*    2) Process a control statement that has been read by FMFORMAT    *
*    3) Format/display data                                           *
*    4) Clean up                                                      *
*                                                                     *
*                                                                     *
*  This code has a "common" area sort of like OSCOMM.                 *
*  Good or bad, this common area is the first part of the area        *
*  GETMAINed for DXD work area.  Therefore FMTMAIN's work area        *
*  MUST be the first 'section' of this area.  Make sure the           *
*  link-edit statements specify ORDER statements to insure            *
*  FMTMAIN is the first CSECT in the output load module.              *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
FMTMAIN  CSECT
FMTMAIN  AMODE 31
FMTMAIN  RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING FMTMAIN,R15
         B     INIT0000
MODID    DC    CL8'FMTMAIN'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS     0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         DROP  R15
         USING FMTMAIN,R10                    DEFINE BASE
         L     R9,COMM_OSSPFD
         USING OSSPFD,R9
         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE
         BE    FMT0000                        YES
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL
         BE    FMT1000                        YES
         CLI   SESS_FORMAT_FLAGS,$FORMAT_FORMAT
         BE    FMT2000                        YES
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP
         BE    FMT3000                        YES
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FMT0000  DS    0H
         L     R3,DXDSIZE                     WORK AREA SIZE
         GETMAIN RU,                          ACQUIRE WORK AREA        +
               LV=(R3),                       .. WORK AREA SIZE        +
               LOC=ANY                        .. MAY BE ABOVE OR BELOW
         ST    R1,SESS_FORMATTER_DXD_ADDR     SAVE WORK AREA ADDRESS
         LR    R4,R1                          COPY STORAGE ADDRESS
         LR    R5,R1                          COPY STORAGE ADDRESS
         LR    R2,R1                          COPY WORK AREA ADDRESS
         SR    R1,R1                          CLEAR REGISTER
         MVCL  R2,R0                          CLEAR WORK AREA
         ST    R13,4(R4)                      SAVE R13
         ST    R4,8(R13)                      CHAIN SAVE AREA
         LR    R13,R4                         COPY WORK AREA ADDRESS
         USING DXDMAIN,R13                    DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID                IDENTIFY WORK AREA OWNER
         ITRACE ID=ENTRY,                                              +
               DATA1=(=C'INIT',4),                                     +
               RDATA2=R13
         L     R9,COMM_OSSPFD                 SPF DATA
         USING OSSPFD,R9                      DEFINE BASE
         MVC   DXD_SAVED_RETRY,SESS_RETRY     SAVE CALLER'S RETRY
         XC    DXD_IF_LEVEL,DXD_IF_LEVEL      INITIALIZE IF LEVEL
         XC    DXD_IF_TABLE(64),DXD_IF_TABLE  INITIALIZE IF TABLE
         XC    DXD_FIRST_FMAT,DXD_FIRST_FMAT  NO FMAT BLOCK ON CHAIN
         LA    R0,SESS_FORMATTER_DATA         FMAT BLOCK CHAIN POINT
         ST    R0,DXD_FMAT_CHAIN_POINT        SET CHAIN POINT
         LA    R1,PANEL_NAME                  ADDR OF PANEL NAME
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION
         L     R15,COMM_V_OSVDATA             OSVDATA ENTRY POINT
         BALR  R14,R15                        GET VDATA
         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH
         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS
         B     EXIT0000
* ------------------------------------------------------------------- *
*        Interpret control statement                                  *
* ------------------------------------------------------------------- *
FMT1000  DS    0H
         L     R15,SESS_FORMATTER_DXD_ADDR
         ST    R13,4(R15)                     CHAIN CALLER'S SAVE AREA
         ST    R15,8(R13)                     CHAIN OUR SAVE AREA
         LR    R13,R15
         ITRACE ID=CONTROL,                                            +
               RDATA1=R1
         L     R15,V_FMTCNTRL                 FMTCNTRL ENTRY POINT
         BALR  R14,R15
         ITRACE ID=CONTROLX
         B     EXIT0000
* ------------------------------------------------------------------- *
*        Format data                                                  *
* ------------------------------------------------------------------- *
FMT2000  DS    0H
         L     R15,SESS_FORMATTER_DXD_ADDR
         ST    R13,4(R15)                     CHAIN CALLER'S SAVE AREA
         ST    R15,8(R13)                     CHAIN OUR SAVE AREA
         LR    R13,R15
         ITRACE ID=FORMAT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FMT2020  DS    0H
         LA    R1,DATASPACE_1
         ST    R1,DSPCREQ_DATASPACE
         ITRACE ID=FMT2020,                                            +
               DATA1=DATASPACE_1_NAME,                                 +
               DATA2=(DATASPACE_1_ALET,4)
* ------------------------------------------------------------------- *
*        Build display                                                *
* ------------------------------------------------------------------- *
FMT2030  DS    0H
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
* ------------------------------------------------------------------- *
*        Build DSCB info                                              *
* ------------------------------------------------------------------- *
FMT2040  DS    0H
         MVC   SPF_RECORD_FROM,DSPCREQ_RECORD_NBR
         MVC   SPF_COLUMN_FROM,DATASPACE_1_DISPLAY_FIRST_COLUMN
         ITRACE ID=OSDSCB
         L     R15,COMM_V_OSDSCB              OSDSCB ENTRY POINT
         BALR  R14,R15                        FORMAT THE DSCB INFO
* ------------------------------------------------------------------- *
*        Initialize the VDATA buffer                                  *
* ------------------------------------------------------------------- *
         L     R0,DXD_VDATA_ADDR              BUFFER ADDRESS
         L     R1,DXD_VDATA_LENGTH            NUMBER OF LINES
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE BUFFER
* ------------------------------------------------------------------- *
*        "Retrieve" the data and build the body of the SPF panel      *
* ------------------------------------------------------------------- *
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETREIVE
         MVC   DSPCREQ_RECORD_ADDR,SESS_IO_AREA
         ITRACE ID=GET_RECD,                                           +
               DATA1=(DSPCREQ_RECORD_NBR,4),                           +
               DATA2=(DSPCREQ_RECORD_ADDR,4)
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT
         BALR  R14,R15                        LINK TO OSDSPACE
         ITRACE ID=GET_RC,                                             +
               DATA1=(DSPCREQ_RC,1)
         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED
         BE    ERR0010                        NOT STORED
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0020
         ITRACE ID=RECORD,                                             +
               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +
               DATA2=(DSPCREQ_RECORD_LENGTH,4)
         MVC   DXD_RECORD_ADDR,DSPCREQ_RECORD_ADDR
         MVC   DXD_RECORD_LENGTH,DSPCREQ_RECORD_LENGTH
* ------------------------------------------------------------------- *
*        Process the FMAT blocks                                      *
* ------------------------------------------------------------------- *
         ICM   R7,15,DXD_FIRST_FMAT           FIRST FMAT BLOCK
         USING FMAT,R7
         BZ    FMT2100                        NO FORMAT BLOCKS
FMT2050  DS    0H
         ST    R7,DXD_FMAT_FMAT
         CLI   FMAT_TYPE,$FMAT_END_IF         END IF BLOCK?
         BE    FMT2060                        YES
         CLI   FMAT_TYPE,$FMAT_FIELD          FIELD?
         BE    FMT2070                        YES
         CLI   FMAT_TYPE,$FMAT_IF             IF
         BE    FMT2080                        YES
         DC    H'0'
FMT2060  DS    0H
         L     R15,V_FMTEIF                   FMTEIF ENTRY POINT
         B     FMT2090
FMT2070  DS    0H
         L     R15,V_FMTFLD                   FMTFLD ENTRY POINT
         B     FMT2090
FMT2080  DS    0H
         L     R15,V_FMTIF                    FMTIF ENTRY POINT
FMT2090  DS    0H
         ITRACE ID=FMTLINK,                                            +
               RDATA1=R15
         BALR  R14,R15                        LINK
         ITRACE ID=LINKX,                                              +
               DATA1=(DXD_FMAT_FMAT,4)
         ICM   R7,15,DXD_FMAT_FMAT
         BNZ   FMT2050                        PROCESS NEXT FMAT
         ITRACE ID=FMATDONE
* ------------------------------------------------------------------- *
*        All FMAT blocks processed, display the data                  *
* ------------------------------------------------------------------- *
FMT2100  DS    0H
         ITRACE ID=DISPLAY,                                            +
               DATA1=PANEL_NAME,                                       +
               RDATA2=R15
         MVC   SESS_DISP_PANEL,PANEL_NAME
         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR
         L     R15,COMM_V_OSDISP
         BALR  R14,R15
         ITRACE ID=DISP_RC,                                            +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT WANTED?
         BNE   EXIT0000                         YES
         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?
         BNE   EXIT0000                         YES
         OC    SESS_RC,SESS_RC                  RC=0
         BZ    FMT2120                          YES
         ITRACE ID=ENDING
         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION
         B     EXIT0000
* ------------------------------------------------------------------- *
*        Perform scrolling                                            *
* ------------------------------------------------------------------- *
FMT2120  DS    0H
         ITRACE ID=SCROLL,                                             +
               DATA1=SPF_ZCMD,                                         +
               DATA2=SPF_ZVERB
         CLI   SPF_ZVERB,C'B'                 BOTTOM?
         BE    FMT2130                        YES
         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?
         BE    FMT2140                        YES
         CLI   SPF_ZVERB,C'T'                 TOP?
         BE    FMT2160                        YES
         CLI   SPF_ZVERB,C'U'                 SCROLL UP?
         BE    FMT2170                        YES
         CLC   SPF_ZCMD,COMM_BLANKS           ALL BLANK?
         BE    FMT2030                        YES
         B     ERR0030
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FMT2130  DS    0H
         ITRACE ID=BOTTOM
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR CMD
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD
         B     FMT2030
FMT2140  DS    0H
         ITRACE ID=DOWN
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR COMMAND
         CLI   SPF_ZSCROLLA,C'M'              MAX?
         BE    FMT2130                        YES
         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD RECORD NBR
         A     R1,F1                          PLUS 1
         C     R1,DATASPACE_1_LAST_RECORD     BEYOND LAST?
         BH    FMT2150                        YES
         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD SET RECORD NBR
         B     FMT2030
FMT2150  DS    0H
         MVC   SPF_MSG_1(MSG_01_l),MSG_01     AT BOTTOM OF DATA
         B     FMT2100
FMT2160  DS    0H
         ITRACE ID=TOP
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR COMMAND
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1 SET RECORD NBR
         B     FMT2030
FMT2170  DS    0H
         ITRACE ID=UP
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR COMMAND
         CLI   SPF_ZSCROLLA,C'M'              MAX?
         BE    FMT2160                        YES
         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD CURRENT RECORD
         BCT   R1,FMT2180                     MINUS 1
         MVC   SPF_MSG_1(MSG_02_l),MSG_02     AT TOP OF DATA
         B     FMT2100
FMT2180  DS    0H
         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD SET RECORD NBR
         B     FMT2030
* ------------------------------------------------------------------- *
*        Clean up                                                     *
* ------------------------------------------------------------------- *
FMT3000  DS    0H
         L     R15,SESS_FORMATTER_DXD_ADDR
         ST    R13,4(R15)                     CHAIN CALLER'S SAVE AREA
         ST    R15,8(R13)                     CHAIN OUR SAVE AREA
         LR    R13,R15
         ITRACE ID=CLEANUP                    DOING CLEAN UP
         L     R15,V_FMTCLNUP                 FMTFREE ENTRY POINT
         BALR  R14,R15                        LINK TO FMTFREE
         ITRACE ID=CLEANX
         ITRACE ID=FREE_DXD,                                           +
               RDATA1=R13
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE R13
         L     R3,DXDSIZE
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=(3)
         XC    SESS_FORMATTER_DXD_ADDR,SESS_FORMATTER_DXD_ADDR
         XC    SESS_FORMATTER_DXD_LENGTH,SESS_FORMATTER_DXD_LENGTH
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   COMM_MSG_ID+1,1
         B     ERR1000
ERR0020  DS    0H
         MVI   COMM_MSG_ID+1,2
         B     ERR1000
ERR0030  DS    0H
         MVI   COMM_MSG_ID+1,3
         B     ERR1000
ERR1000  DS    0H
         MVC   COMM_MSG_CSECT,MODID
         MVC   SPF_MSG_1,COMM_MSG_1  COPY MESSAGE
         MVC   SPF_MSG_2,COMM_MSG_2  COPY MESSAGE
         MVC   SPF_MSG_3,COMM_MSG_3  COPY MESSAGE
         MVC   SPF_MSG_4,COMM_MSG_4  COPY MESSAGE
         MVC   SPF_MSG_5,COMM_MSG_5  COPY MESSAGE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLEAN000 DS    0H
         ITRACE ID=CLEAN_UP,                                           +
               DATA1=(DXD_VDATA_ADDR,4),                               +
               DATA2=(DXD_VDATA_LENGTH,4)
         ICM   R1,15,DXD_VDATA_ADDR         VDATA GETMAINED?
         BZ    CLEAN010                     NO
         L     R0,DXD_VDATA_LENGTH          VDATA LENGTH
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                      FREE VDATA
         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR
         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH
CLEAN010 DS    0H
         L     R0,SESS_FORMATTER_DXD_LENGTH WORK AREA SIZE
         LR    R1,R13                       COPY WORK AREA ADDRESS
         L     R13,4(R13)                   RESTORE R13
         FREEMAIN RU,                       FREE WORK AREA             +
               A=(1),                                                  +
               LV=(0)
         XC    SESS_FORMATTER_DXD_ADDR,SESS_FORMATTER_DXD_ADDR
         XC    SESS_FORMATTER_DXD_LENGTH,SESS_FORMATTER_DXD_LENGTH
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         MVC   SESS_RETRY,DXD_SAVED_RETRY
         ITRACE ID=EXIT
         L     R13,4(R13)                  RESTORE SAVE AREA ADDRESS
EXIT0010 DS    0H
         LM    R14,R12,12(R13)             RESTORE REMAINING REGISTERS
         SR    R15,R15                     SET RC
         BR    R14                         RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSIZE             CXD
DXD_START           DC      Q(DXDMAIN)
V_FMTCLNUP          DC      V(FMTCLNUP)
V_FMTCNTRL          DC      V(FMTCNTRL)
V_FMTEIF            DC      V(FMTEIF)
V_FMTFLD            DC      V(FMTFLD)
V_FMTIF             DC      V(FMTIF)

F1                  DC      F'1'

PANEL_NAME          DC      CL8'OSUSER'

MSG_01              DC      C'At bottom of data'
MSG_01_L            EQU     *-MSG_01

MSG_02              DC      C'At top of data'
MSG_02_L            EQU     *-MSG_02

                    LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDMAIN             DSECT
                    COPY     DXDPREF
                    COPY     FMTCOMM
                    DSPCREQ  DSECT=NO
DXD_SAVED_RETRY     DS       A
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    COPY    FMAT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    OSSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    COPY    TRENTRY
* ------------------------------------------------------------------- *
*                   EQUATES                                           *
* ------------------------------------------------------------------- *
                    COPY    REGEQU
                    END     FMTMAIN
