* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: OSVTOC                                                *
*                                                                     *
*  Build main body for VTOC display                                   *
*                                                                     *
*                                                                     *
*                                                                     *
*  Data in the data space was built by OSRDVTOC.  Each record in the  *
*  data space is prefixed with a 44 byte "data set name".  The        *
*  format-3, format-4, and format-5 records to not have a printable   *
*  "data set name" in the first 44 characters as the format-1's do.   *
*  The 44 byte prefix for format-1's is the data set name so in the   *
*  case of format-1's, the DSN is duplicated.  For format-3,          *
*  format-4, and format-5 the prefix is "FORMAT x AT CCHHR" where     *
*  x is 3, 4, or 5 and CCHHR is the disk address of the record        *
*  within the VTOC.  This allows the format-3, format-4, and          *
*  format-5 records to be sorted by "data set name".                  *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
OSVTOC   CSECT
OSVTOC   AMODE 31
OSVTOC   RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING OSVTOC,R15
         B     INIT0000
MODID    DC    CL8'OSVTOC'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(OSVTOCEND-OSVTOC)
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         USING DS1FMTID,SESS_DSCB
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         LA    R9,2048(R10)
         LA    R9,2048(R9)
         DROP  R15
         USING OSVTOC,R10,R9                  DEFINE BASE
         L     R5,COMM_OSSPFD
         USING OSSPFD,R5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE
         BNE   INIT0010
         ICM   R1,15,SESS_FORMATTER_DXD_ADDR
         BNZ   ERR0120

         GETMAIN RU,                                                   +
               LV=OSVTOC_DXD_L,                                        +
               LOC=BELOW
         ST    R1,SESS_FORMATTER_DXD_ADDR
         ST    R13,4(R1)                      SAVE R13
         ST    R1,8(R13)                      CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING OSVTOC_WORK,R13                DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY1
         L     R5,COMM_OSSPFD
         USING OSSPFD,R5
         MVC   SPF_VOLSER,SESS_VOLSER
         MVC   SPF_RECFM,COMM_BLANKS          CLEAR RECORD FORMAT
         MVC   SPF_DSORG,VTOC
         MVI   COMM_MSG_ID,0                  FORCE BYTE 1 TO ZERO

         MVC   DXD_COMPRESS(COMPRESS_L),COMPRESS

         NI    SPF_FLAGS,255-$SPF_VPUT
         MVC   DSPCREQ_RECORD_NBR,F1
         MVC   DXD_VOLLIST_NBR,H1
         MVC   DXD_VOLLIST_UCB,SESS_UCBTYP
         MVC   DXD_VOLLIST_VOL,SESS_VOLSER
         XC    DXD_VOLLIST_SEQ,DXD_VOLLIST_SEQ
         LA    R0,DATASPACE_1
         ST    R0,DSPCREQ_DATASPACE
         MVC   SESS_DISP_PANEL,VTOC_PANEL
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN
         LA    R1,SESS_DISP_PANEL
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15
         ST    R0,DXD_VDATA1_LENGTH           SAVE LENGTH
         ST    R1,DXD_VDATA1_ADDR             SAVE ADDRESS
         MVC   DXD_VWIDTH,SPF_VWIDTH
         MVC   DXD_VDEPTH,SPF_VDEPTH
         LA    R1,SESS_DISP_PANEL
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15
         ST    R0,DXD_VDATA2_LENGTH           SAVE LENGTH
         ST    R1,DXD_VDATA2_ADDR             SAVE ADDRESS
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         ICM   R15,15,SESS_FORMATTER_DXD_ADDR
         BZ    ERR0140
         ST    R13,4(R15)
         ST    R15,8(R13)
         LR    R13,R15
         ITRACE ID=ENTRY2
         XC    DXD_RC,DXD_RC
         L     R5,COMM_OSSPFD
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL
         BE    EXIT0000
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP
         BE    CLEAN000
         CLI   COMM_SESS_FUNC,$SESS_SWITCH    SESSION SWITCH?
         BNE   MAIN0000                       NO
         L     R7,DXD_LINES_REMAINING         RESET LINES REMAINING
         L     R8,DXD_CURRENT_VDATA1_ADDR     RESET VDATA1 ADDRESS
         B     MAIN0090
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
MAIN0010 DS    0H
         CLI   SESS_DATA_TYPE,$DATA_TYPE_VTOC VTOC DATA?
         BNE   MAIN0020                       NO
         BAL   R14,SORT0000                   SORT THE DATA
* ------------------------------------------------------------------- *
*                                                                     *
*      Establish the first VTOC record to be displayed                *
*      Build the heading                                              *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0020 DS    0H
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
MAIN0030 DS    0H
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DSPCREQ_RECORD_NBR
         MVC   SPF_RECORD_FROM,DSPCREQ_RECORD_NBR
         ITRACE ID=OSDSCB
         L     R15,COMM_V_OSDSCB              OSDSCB ENTRY POINT
         BALR  R14,R15                        FORMAT THE DSCB INFO

         L     R0,DXD_VDATA1_ADDR             VDATA ADDRESS
         L     R1,DXD_VDATA1_LENGTH           VDATA LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE VDATA

         CLI   SESS_DATA_TYPE,$DATA_TYPE_VTOC VTOC DATA?
         BNE   ERR0090                        NO

         ITRACE ID=BUILD
         L     R8,DXD_VDATA1_ADDR             BUFFER ADDRESS
         L     R7,DXD_VDEPTH                  NUMBER OF LINES AVAILABLE
         MVC   0(HEADING_01_L,R8),HEADING_01  COPY HEADING
         A     R8,DXD_VWIDTH                  NEXT LINE
         MVC   DXD_LINES,H1                   INITIALIZE LINES BUILT
         BCTR  R7,R0
* ------------------------------------------------------------------- *
*        "Retreive" the data and build the body of the SPF panel      *
* ------------------------------------------------------------------- *
MAIN0040 DS    0H
         CLC   DSPCREQ_RECORD_NBR,SESS_FORMAT1S
         BH    MAIN0060                       END OF RECORDS REACHED
         ITRACE ID=GET_RECD,                                           +
               DATA1=(DSPCREQ_RECORD_NBR,4),                           +
               DATA2=(SESS_FORMAT1S,4)
         LA    R1,DXD_FORMAT_1
         ST    R1,DSPCREQ_RECORD_ADDR         I/O AREA ADDRESS
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETREIVE
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         ITRACE ID=DSPC_RC,                                            +
               DATA1=(DSPCREQ_RC,1)
         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED
         BE    MAIN0050                       NOT STORED
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0110                        OTHER ERROR?
         ITRACE ID=RECORD,                    YES                      +
               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +
               DATA2=(DSPCREQ_RECORD_LENGTH,4)
         CLI   DS1FMTID,C'1'                  FORMAT-1?
         BNE   MAIN0050                       NO
         BAL   R6,FMT10000                    BUILD BASIC STUFF
         L     R1,DSPCREQ_RECORD_NBR          VTOC RECORD NUMBER
         A     R1,F1                          PLUS 1
         ST    R1,DSPCREQ_RECORD_NBR          SAVE UPDATED RECORD NBR
         LH    R1,DXD_LINES                   NBR OF LINES BUILT
         LA    R1,1(,R1)                      PLUS 1
         STH   R1,DXD_LINES                   SAVE TOTAL
         A     R8,DXD_VWIDTH                  NEXT LINE
         BCT   R7,MAIN0040
         B     MAIN0060                       SCREEN IS FULL
MAIN0050 DS    0H
         L     R1,DSPCREQ_RECORD_NBR          VTOC RECORD NUMBER
         A     R1,F1                          PLUS 1
         ST    R1,DSPCREQ_RECORD_NBR          SAVE UPDATED RECORD NBR
         B     MAIN0040                       PROCESS NEXT RECORD
* ------------------------------------------------------------------- *
*        Display the panel                                            *
* ------------------------------------------------------------------- *
MAIN0060 DS    0H
         ITRACE ID=DISPLAY
         MVC   SESS_DISP_PANEL,VTOC_PANEL
         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA1_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA1_LENGTH
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR
         L     R15,COMM_V_OSDISP
         BALR  R14,R15                        LINK TO OSDISP
         ITRACE ID=DISP_RC,                                            +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         CLC   COMM_NEW_FORMAT,COMM_BLANKS
         BNE   EXIT0000                       NEW FORMAT SELECTED
         CLI   COMM_SESS_FUNC,0               SESSION CHANGE?
         BNE   EXIT0000                       YES
         OC    SESS_RC,SESS_RC                DISPLAY RC=0
         BZ    MAIN0070                       YES
         ITRACE ID=ENDING
         MVI   COMM_SESS_FUNC,$SESS_REMOVE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*       Process commands                                              *
*                                                                     *
*       Check for a line command first                                *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0070 DS    0H
         ITRACE ID=CMDS
         L     R8,DXD_VDATA1_ADDR             DYNAMIC AREA ADDRESS
         USING MSG_01,R8                      DEFINE BASE
         SR    R7,R7
         ICM   R7,3,DXD_LINES                 NUMBER OF LINES BUILT
         BZ    MAIN0110                       NONE
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
         NI    DXD_FLAGS,255-$LINE_CMD        RESET FLAG
         B     MAIN0100                       SKIP HEADING
MAIN0080 DS    0H
         OI    MSG_01_SELECT,C' '             FORCE TO UPPER CASE
         ITRACE ID=LINE_CMD,                                           +
               DATA1=(MSG_01_SELECT,1),                                +
               DATA2=MSG_01_DSN
         CLI   MSG_01_SELECT,C' '             BLANK?
         BE    MAIN0090                       YES
         MVC   MSG_01_MSG,COMM_BLANKS         RESET MESSAGE
         OI    DXD_FLAGS,$LINE_CMD            TURN ON FLAG
         CLI   MSG_01_SELECT,C'B'             BROWSE?
         BE    MAIN0600                       YES
         CLI   MSG_01_SELECT,C'C'             CATALOG?
         BE    MAIN0700                       YES
         CLI   MSG_01_SELECT,C'D'             DELETE?
         BE    MAIN0850                       YES
         CLI   MSG_01_SELECT,C'I'             INFORMATION?
         BE    MAIN0300                       YES
         CLI   MSG_01_SELECT,C'R'             RENAME?
         BE    MAIN0800                       YES
         CLI   MSG_01_SELECT,C'S'             Select (browse)?
         BE    MAIN0600                       YES
         CLI   MSG_01_SELECT,C'U'             UNCATALOG?
         BE    MAIN0750                       YES
         CLI   MSG_01_SELECT,C'X'             COMPRESS?
         BE    MAIN0900                       YES
         MVI   COMM_MSG_ID+1,1                SET MESSAGE NUMBER
         B     ERR0100
MAIN0090 DS    0H
         L     R1,DSPCREQ_RECORD_NBR          RECORD NUMBER
         A     R1,F1                          PLUS 1
         ST    R1,DSPCREQ_RECORD_NBR          SAVE RECORD NUMBER
MAIN0100 DS    0H
         A     R8,DXD_VWIDTH
         BCT   R7,MAIN0080
         DROP  R8
         TM    DXD_FLAGS,$LINE_CMD            ANY LINE COMMANDS?
         BO    MAIN0060                       YES
* ------------------------------------------------------------------- *
*       Check for command line (primary) command                      *
* ------------------------------------------------------------------- *
MAIN0110 DS    0H
         CLC   SPF_ZCMD,COMM_BLANKS           ALL BLANK?
         BE    MAIN0120                       YES
         ITRACE ID=PRI_CMD,                                            +
               DATA1=SPF_ZCMD+00,                                      +
               DATA2=SPF_ZCMD+08
         SR    R3,R3                          CLEAR REGISTER
         ICM   R3,3,COMM_OPERANDS_NBR         NUMBER OF OPERANDS
         ICM   R4,15,OPERAND_01_ADDRESS       FIRST OPERAND'S ADDRESS
         CLC   ABEND,0(R4)
         BE    ABEND000
         CLC   DEBUG,0(R4)
         BE    DEBUG000
         CLC   =C'F ',0(R4)                   FIND?
         BE    MAIN1000                       YES
         CLC   =C'L ',0(R4)                   LOCATE?
         BE    MAIN1000                       YES
         CLC   FIND,0(R4)                     LONGER FIND?
         BE    MAIN1000                       YES
         CLC   LOCATE,0(R4)                   LONGER LOCATE?
         BE    MAIN1000                       YES
         CLC   =C'R ',0(R4)                   REFRESH?
         BE    MAIN0020
         CLC   =C'REFRESH',0(R4)              REFRESH?
         BE    MAIN0020
         MVI   COMM_MSG_ID+1,2                SET MESSAGE NUMBER
         B     ERR0100
* ------------------------------------------------------------------- *
*       No commands so check for scroll                               *
* ------------------------------------------------------------------- *
MAIN0120 DS    0H
         L     R1,SPF_ZSCROLLN
         ST    R1,SESS_HORIZONTAL_SCROLL
         BCTR  R1,0
         ST    R1,SESS_VERTICAL_SCROLL
         ITRACE ID=ZVERB,                                              +
               DATA1=SPF_ZVERB,                                        +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZVERB,C'B'                 BOTTOM?
         BE    MAIN0210                       YES
         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?
         BE    MAIN0150                       YES
         CLI   SPF_ZVERB,C'T'                 TOP?
         BE    MAIN0200                       YES
         CLI   SPF_ZVERB,C'U'                 SCROLL UP?
         BE    MAIN0130                       YES
         B     MAIN0060
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0130 DS    0H
         ITRACE ID=UP
         MVC   SPF_ZCMD,COMM_BLANKS                  CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                     MAX?
         BE    MAIN0200                              YES
         L     R1,SESS_VERTICAL_SCROLL               NUMBER TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD   1ST DISPLAYED
         SR    R2,R1                                 MINUS SCROLL
         CH    R2,H1                                 LESS THAN 1?
         BNL   MAIN0140                              NO
         LH    R2,H1                                 FORCE 1ST RECORD
MAIN0140 DS    0H
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD   CHANGE 1ST RCD NBR
         B     MAIN0020                              REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*        SCROLL DOWN                                                  *
* ------------------------------------------------------------------- *
MAIN0150 DS    0H
         ITRACE ID=DOWN
         MVC   SPF_ZCMD,COMM_BLANKS                  CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                     MAX?
         BE    MAIN0210                              YES
         L     R1,SESS_VERTICAL_SCROLL               NUMBER TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD   1ST DISPLAYED
         AR    R2,R1                                 PLUS SCROLL
         C     R2,SESS_FORMAT1S                      BEYOND LAST FMT-1?
         BH    MAIN0160                              YES
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD   CHANGE 1ST REC NBR
         B     MAIN0020                              REBUILD EVERYTHING
MAIN0160 DS    0H
         L     R2,SESS_FORMAT1S                      NBR OF FORMAT-1'S
         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD   MINUS 1ST ON DISP
         C     R2,DXD_VDEPTH                         MORE THAN DEPTH?
         BNH   MAIN0020                              NO.. STAY PUT
         L     R2,SESS_FORMAT1S                      HIGHEST STORED
         S     R2,DXD_VDEPTH                         MINUS 1 SCREEN
         A     R2,F2                                 PLUS 2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD   SET 1ST TO DISPLAY
         B     MAIN0020                              REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         ITRACE ID=TOP
         MVC   SPF_ZCMD,COMM_BLANKS                  CLEAR ZCMD
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1   SET TO RECORD 1
         XC    DXD_FIND_NBR,DXD_FIND_NBR
         B     MAIN0020                              REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0210 DS    0H
         ITRACE ID=BOTTOM
         MVC   SPF_ZCMD,COMM_BLANKS                  CLEAR ZCMD
         L     R2,SESS_FORMAT1S                      HIGHEST RECORD
         S     R2,DXD_VDEPTH                         MINUS DEPTH
         A     R2,F2                                 PLUS 2
         CH    R2,H1                                 STILL HAVE 1?
         BNL   MAIN0220                              YES
         LH    R2,H1                                 FORCE RECORD 1
MAIN0220 DS    0H
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD   CHANGE 1ST RCD NBR
         B     MAIN0020
* ------------------------------------------------------------------- *
*                                                                     *
*        Detail info.                                                 *
*                                                                     *
*        I did NOT include PDS directory block information.           *
*        Directory block info requires reading the PDS(/E).           *
*        The user may not have RACF authorization.                    *
*                                                                     *
*                                                                     *
*        The main data display uses an SPF dynamic area.              *
*        This will also use a dynamic area.  To allow the user to     *
*        enter multiple line commands, the current VDATA buffer       *
*        must not be overwritten.  So first save the current VDATA    *
*        buffer address and length and then acquire a second VDATA    *
*        buffer.                                                      *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
         USING MSG_01,R8
         ITRACE ID=INFO,                                               +
               DATA1=MSG_01_DSN+0,                                     +
               DATA2=MSG_01_DSN+8
         DROP  R8
         ST    R7,DXD_LINES_REMAINING
         ST    R8,DXD_CURRENT_VDATA1_ADDR
         L     R0,DXD_VDATA2_ADDR
         L     R1,DXD_VDATA2_LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE VDATA
         ITRACE ID=FIND_DSN
         USING MSG_01,R8
         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR
         LA    R1,DXD_FORMAT_1
         ST    R1,DSPCREQ_RECORD_ADDR         I/O AREA ADDRESS
         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_DSN_S
         MVC   DSPCREQ_DSN,MSG_01_DSN
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         DROP  R8
         CLI   DSPCREQ_RC,$DSPCREQ_OK         SUCCESSFUL?
         BNE   ERR0110

         L     R8,DXD_VDATA2_ADDR             BUFFER ADDRESS
         L     R7,SPF_VDEPTH                  NUMBER OF LINES
         MVC   0(HEADING_01_L,R8),HEADING_01
         A     R8,SPF_VWIDTH
         BAL   R6,FMT10000                    BUILD LINE 1
         BCTR  R7,0

         A     R8,SPF_VWIDTH
         MVC   0(MSG_02_L,R8),MSG_02          COPY MESSAGE
         USING MSG_02,R8                      DEFINE BASE
         SR    R1,R1
         ICM   R1,3,DS1VOLSQ                  VOLUME SEQUENCE NBR
         CVD   R1,COMM_DWORD
         ED    MSG_02_VOL_SEQ,COMM_DWORD+3    EDIT VOL SEQ
         TM    DS1RECFM,DS1RECFU              UNDEFINED?
         BO    MAIN0320
         TM    DS1RECFM,DS1RECFV              VARIABLE?
         BO    MAIN0330
         TM    DS1RECFM,DS1RECFF              FIXED?
         BO    MAIN0340
         MVC   MSG_02_RECFM,=C'????'          UNKNOWN
         B     MAIN0380
MAIN0320 DS    0H
         MVI   MSG_02_RECFM,C'U'              UNDEFINE RECORD FORMAT
         B     MAIN0380
MAIN0330 DS    0H
         MVI   MSG_02_RECFM,C'V'              VARIABLE LENGTH RECORDS
         B     MAIN0350
MAIN0340 DS    0H
         MVI   MSG_02_RECFM,C'F'              FIXED LENGTH RECORDS
MAIN0350 DS    0H
         TM    DS1RECFM,DS1RECFB              BLOCKED?
         BNO   MAIN0360                       NO
         MVI   MSG_02_RECFM+1,C'B'
MAIN0360 DS    0H
         TM    DS1RECFM,DS1RECFA              ASA CARRIAGE CONTROL?
         BO    MAIN0370
         TM    DS1RECFM,DS1RECMC              MACHINE CARRIAGE CONTROL?
         BNO   MAIN0380
         MVI   MSG_02_RECFM+2,C'A'
         B     MAIN0380
MAIN0370 DS    0H
         MVI   MSG_02_RECFM+2,C'M'
MAIN0380 DS    0H
         SR    R1,R1
         ICM   R1,3,DS1LRECL                  RECORD SIZE (LRECL)
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_02_LRECL,COMM_DWORD+5      EDIT LRECL
         ICM   R1,3,DS1BLKL                   BLOCK SIZE
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_02_BLKSI,COMM_DWORD+5      EDIT BLOCK SIZE
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R7,0

         MVC   0(MSG_03_L,R8),MSG_03
         USING MSG_03,R8                      DEFINE BASE
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,DS1RKP                    KEY POSITION
         CVD   R1,COMM_DWORD
         ED    MSG_03_RKP,COMM_DWORD+5        EDIT KEY POSITION
         SR    R1,R1
         IC    R1,DS1KEYL                     KEY LENGTH
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_03_KEYLEN,COMM_DWORD+6     EDIT KEY LENGTH
         DROP  R8
         A     R8,SPF_VWIDTH                  NEXT LINE
         BCTR  R7,0

         MVC   0(MSG_04_L,R8),MSG_04          COPY MESSAGE
         USING MSG_04,R8                      DEFINE BASE
         UNPK  MSG_04_SMS(3),DS1SMSFG(2)      UNPACK SMS FLAG(S)
         TR    MSG_04_SMS,HEXCHAR             TRANSLATE
         MVI   MSG_04_SMS+2,C' '              RESTORE BLANK
         LA    R1,MSG_04_FLAGS
         TM    DS1SMSFG,DS1SMSDS              SMS MANAGED?
         BNO   MAIN0390                       NO
         MVC   0(L'SMS,R1),SMS                INDICATE SMS
         LA    R1,L'SMS+3(R1)
MAIN0390 DS    0H
         TM    DS1SMSFG,DS1SMSUC              NO BCS?
         BNO   MAIN0400
         MVC   0(L'NOBCS,R1),NOBCS            INDICATE NO BCS
         LA    R1,L'NOBCS+3(R1)
MAIN0400 DS    0H
         TM    DS1SMSFG,DS1REBLK              REBLOCK(ABLE)?
         BNO   MAIN0410                       NO
         MVC   0(L'REBLOCK,R1),REBLOCK        INDICATE REBLOCKABLE
         LA    R1,L'REBLOCK+3(R1)
MAIN0410 DS    0H
         TM    DS1SMSFG,DS1CRSDB              DADSM CREATE BLOCK SIZE?
         BNO   MAIN0420                       NO
         MVC   0(L'DADSM_BLOCKSIZE,R1),DADSM_BLOCKSIZE
         LA    R1,L'DADSM_BLOCKSIZE+3(R1)
MAIN0420 DS    0H
         TM    DS1SMSFG,DS1DSAE               EXTENDED ATTRIBUTES?
         BNO   MAIN0450                       NO
         MVC   0(L'EXTENDED,R1),EXTENDED      EXTENDED ATTRIBUTES
         LA    R1,L'EXTENDED+3(R1)
MAIN0450 DS    0H
         DROP  R8

         A     R8,SPF_VWIDTH
         BCTR  R7,0

         MVC   0(MSG_05_L,R8),MSG_05          COPY MESSAGE
         USING MSG_05,R8                      DEFINE BASE
         UNPK  MSG_05_INDICATORS(3),DS1DSIND(2)
         TR    MSG_05_INDICATORS,HEXCHAR      TRANSLATE
         MVI   MSG_05_INDICATORS+2,C' '       RESTORE BLANK
         LA    R1,MSG_05_FLAGS
         TM    DS1DSIND,DS1IND80              LAST VOLUME?
         BNO   MAIN0460                       NO
         MVC   0(L'LAST,R1),LAST              INDICATE LAST
         LA    R1,L'LAST+3(R1)
MAIN0460 DS    0H
         TM    DS1DSIND,DS1IND40              RACF DEFINED?
         BNO   MAIN0470                       NO
         MVC   0(L'RACF,R1),RACF              INDICATE RACF PROTECTED
         LA    R1,L'RACF+3(R1)
MAIN0470 DS    0H
         TM    DS1DSIND,DS1SECTY              READ & WRITE PROTECTED?
         BNO   MAIN0480                       NO
         MVC   0(L'PASSRDWRT,R1),PASSRDWRT    INDICATE PROTECTED
         LA    R1,L'PASSRDWRT+3(R1)
MAIN0480 DS    0H
         TM    DS1DSIND,DS1WRSEC              WRITE PROTECTED?
         BNO   MAIN0490                       NO
         MVC   0(L'PASSWRT,R1),PASSWRT        INDICATE WRITE PROTECTED
         LA    R1,L'PASSWRT+3(R1)
MAIN0490 DS    0H
         TM    DS1DSIND,DS1IND08              MODIFIED SINCE RECALL?
         BNO   MAIN0500                       NO
         MVC   0(L'MODIFIED,R1),MODIFIED      INDICATE MODIFIED
MAIN0500 DS    0H
         TM    DS1DSIND,DS1CHKPT              SECURE CHECKPOINT?
         BNO   MAIN0510                       NO
         MVC   0(L'CHECKPOINT,R1),CHECKPOINT
MAIN0510 DS    0H
         DROP  R8

         A     R8,SPF_VWIDTH
         BCTR  R7,0

         MVC   0(MSG_06_L,R8),MSG_06          COPY MESSAGE
         USING MSG_06,R8                      DEFINE BASE
         SR    R1,R1                          CLEAR REGISTER
         IC    R1,DS1CREDT                    YEAR CREATED
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   MSG_06_CREATE(2),DXD_WORK_1+4
         MVI   MSG_06_CREATE+2,C'.'
         ICM   R1,3,DS1CREDT+1                DAY CREATED
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   MSG_06_CREATE+3(3),DXD_WORK_1+3

         SR    R1,R1                          CLEAR REGISTER
         IC    R1,DS1EXPDT                    YEAR EXPIRES
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   MSG_06_EXPIRE(2),DXD_WORK_1+4
         MVI   MSG_06_EXPIRE+2,C'.'
         ICM   R1,3,DS1EXPDT+1                DAY EXPIRES
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   MSG_06_EXPIRE+3(3),DXD_WORK_1+3

         SR    R1,R1                          CLEAR REGISTER
         IC    R1,DS1REFD                     YEAR REFERENCED
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   MSG_06_REFERENCE(2),DXD_WORK_1+4
         MVI   MSG_06_REFERENCE+2,C'.'
         ICM   R1,3,DS1REFD+1                 DAY REFERENCED
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+5
         MVC   MSG_06_REFERENCE+3(3),DXD_WORK_1+3
         DROP  R8

         A     R8,SPF_VWIDTH                  LEAVE A BLANK LINE
         BCTR  R7,0

         A     R8,SPF_VWIDTH                  NEXT LINE
         MVC   0(MSG_09_L,R8),MSG_09
         USING MSG_09,R8
         SR    R0,R0                          CLEAR REGISTER
         ICM   R0,3,DS1LSTAR                  LAST USED TRACK
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_09_TRACK,COMM_DWORD+5
         SR    R0,R0
         IC    R0,DS1LSTAR+2                  LAST USED RECORD
         CVD   R0,COMM_DWORD
         ED    MSG_09_RECORD,COMM_DWORD+6
         DROP  R8

         A     R8,SPF_VWIDTH
         BCTR  R7,0
         A     R8,SPF_VWIDTH
         BCTR  R7,0
         MVC   0(HEADING_02_L,R8),HEADING_02
         A     R8,SPF_VWIDTH
         BCTR  R7,0
         MVC   0(HEADING_03_L,R8),HEADING_03
         A     R8,SPF_VWIDTH
         BCTR  R7,0
         LA    R1,DS1EXT1
         USING EXTENT,R1
         LA    R2,3
         ITRACE ID=FMT1XTNT,                                           +
               RDATA1=R8,                                              +
               RDATA2=R7
         BAL   R14,XTNT0100
         OC    DS1PTRDS,DS1PTRDS
         BZ    MAIN0550
         MVC   DXD_SAVE_RECORD_NBR,DSPCREQ_RECORD_NBR
         MVC   DSPCREQ_CCHHR,DS1PTRDS
MAIN0530 DS    0H
         ITRACE ID=RD_F3_1,                                            +
               DATA1=(DSPCREQ_CCHHR,5),                                +
               DATA2=(DSPCREQ_RECORD_ADDR,4)
         LA    R1,DXD_FORMAT_3
         ST    R1,DSPCREQ_RECORD_ADDR
         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_CCHHR
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         ITRACE ID=FMT3_RC,                                            +
               DATA1=(DSPCREQ_RC,1)
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   MAIN0060
         LA    R1,DS3EXT1
         LA    R2,4
         ITRACE ID=FMT3XNT1,                                           +
               RDATA1=R8,                                              +
               RDATA2=R7
         BAL   R14,XTNT0100
         LA    R1,DS3ADEXT
         LA    R2,9
         ITRACE ID=FMT3XNT2,                                           +
               RDATA1=R8,                                              +
               RDATA2=R7
         BAL   R14,XTNT0100
         OC    DS3PTRDS,DS3PTRDS
         BZ    MAIN0540
         MVC   DSPCREQ_CCHHR,DS3PTRDS
         B     MAIN0530
MAIN0540 DS    0H
         MVC   DSPCREQ_RECORD_NBR,DXD_SAVE_RECORD_NBR
         LA    R1,DXD_FORMAT_1
         ST    R1,DSPCREQ_RECORD_ADDR
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETREIVE
* ------------------------------------------------------------------- *
*        Detail info has been built.  Display it.                     *
* ------------------------------------------------------------------- *
MAIN0550 DS    0H
         MVC   SESS_DISP_PANEL,VTOC_PANEL
         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA2_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA2_LENGTH
         L     R15,COMM_V_OSDISP
         BALR  R14,R15
         ITRACE ID=DISP_RC,                                            +
               DATA1=SESS_RC
* ------------------------------------------------------------------- *
*           Restore main display VDATA info                           *
* ------------------------------------------------------------------- *
         L     R7,DXD_LINES_REMAINING
         L     R8,DXD_CURRENT_VDATA1_ADDR
* ------------------------------------------------------------------- *
*           Reset the selection and highlight this row                *
* ------------------------------------------------------------------- *
         USING MSG_01,R8
         MVI   MSG_01_SELECT,C' '
         MVC   MSG_01_MSG(L'INFO),INFO
         MVI   MSG_01_ATTR_3,$SCREEN_ATTR_HIGH
         DROP  R8

         B     MAIN0090
* ------------------------------------------------------------------- *
*                                                                     *
*       Process line "S" or "B" command                               *
*                                                                     *
*       .  Save current 'per dataset' (the VTOC info)                 *
*       .  Allocate the data set (on this volume)                     *
*       .  Create a new data space                                    *
*       .  Determine the data set's DSORG                             *
*       .  Read the data set or PDS (or PDS/E) directory              *
*       .  Display the data                                           *
*       .  DELETE the formatter if necessary                          *
*       .  FREEMAIN the I/O area if necessary                         *
*       .  Delete the data space                                      *
*       .  Free (unallocate) the data set                             *
*       .  Restore previous 'per data set' data                       *
*       .  FREEMAIN saved 'per data set' data                         *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0600 DS    0H
         ITRACE ID=BROWSE,                                             +
               DATA1=MSG_01_DSN+0,                                     +
               DATA2=MSG_01_DSN+8
         ITRACE ID=NEW_SESS
         GETMAIN RU,                                                   +
               LV=SESSION_L,                                           +
               LOC=ANY
         LR    R3,R1                            SAVE ADDRESS
NEW      USING SESSION,R3
         ST    R3,COMM_NEW_SESSION
         LR    R0,R3
         LA    R1,SESSION_L
         LR    R14,R11                          CURRENT SESSION ADDR
         LR    R15,R1                           COPY LENGTH
         MVCL  R0,R14                           COPY SESSION BLOCK
         L     R1,SESS_NEXT                     NEXT ON CHAIN
NEXT     USING SESSION,R1
         ST    R1,NEW.SESS_NEXT                 SET NEXT IN NEW BLOCK
         ST    R11,NEW.SESS_PREV                SET PREV IN NEW BLOCK
         ST    R3,SESS_NEXT                     SET NEXT IN CURRENT
         LTR   R1,R1                            'NEXT' BLOCK?
         BZ    MAIN0610                         NO
         ST    R3,NEXT.SESS_PREV                SET PREV IN NEXT BLOCK
         DROP  NEXT
MAIN0610 DS    0H
         USING MSG_01,R8
         MVI   MSG_01_SELECT,C' '               RESET THE SELECTION
         MVI   NEW.SESS_FORMAT_FLAGS,0
         MVI   NEW.SESS_DATA_TYPE,0             DATA TYPE NOT KNOWN YET
         MVI   NEW.SESS_DATASET_FLAGS,0         RESET DATA SET FLAGS
         MVC   DATASPACE_1_FIRST_RECORD,F1
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1
         MVC   DATASPACE_1_DISPLAY_FIRST_COLUMN,F1
         XC    NEW.SESS_FORMATTER_DXD_ADDR,NEW.SESS_FORMATTER_DXD_ADDR
         XC    NEW.SESS_FORMATTER_DXD_LENGTH,NEW.SESS_FORMATTER_DXD_LEN+
               GTH
         XC    NEW.SESS_LAST_FOUND,NEW.SESS_LAST_FOUND
         XC    NEW.SESS_SEARCH_ARG_LENGTH,NEW.SESS_SEARCH_ARG_LENGTH
         MVC   NEW.SESS_SEARCH_ARG,COMM_BLANKS
         MVC   NEW.SESS_DSN,MSG_01_DSN
         MVC   NEW.SESS_MEMBER,COMM_BLANKS
         XC    NEW.SESS_DISP_VDATA_ADDR,NEW.SESS_DISP_VDATA_ADDR
         XC    NEW.SESS_DISP_VDATA_LENGTH,NEW.SESS_DISP_VDATA_LENGTH
         XC    NEW.SESS_DCB_ADDR,NEW.SESS_DCB_ADDR
         XC    NEW.SESS_DCB_LENGTH,NEW.SESS_DCB_LENGTH
         MVI   SESS_KEYWORD_FLAGS,$KEYWORD_DSN+$KEYWORD_VOL
         MVI   SESS_KEYWORD_FLAGS_2,0
         L     R0,COMM_IO_SIZE                  I/O AREA SIZE
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=BELOW
         ST    R1,NEW.SESS_IO_AREA              SAVE ADDRESS
         ITRACE ID=IO_AREA,                                            +
               RDATA1=R1
         ITRACE ID=CRE_DSPC                     CREATING A DATA SPACE
         LA    R0,NEW.DATASPACE_1
         ST    R0,DSPCREQ_DATASPACE
         MVI   DSPCREQ_FUNC,$DSPCREQ_CREATE
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15                          CREATE DATASPACE
         ITRACE ID=DSPC_RC,                                            +
               DATA1=(DSPCREQ_RC,1)
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0080
         LA    R0,DATASPACE_1                   OUR DATA SPACE INFO
         ST    R0,DSPCREQ_DATASPACE             SET ADDRESS
         MVI   COMM_SESS_FUNC,$SESS_SWITCH
         ST    R7,DXD_LINES_REMAINING
         ST    R8,DXD_CURRENT_VDATA1_ADDR
         DROP  R8
         B     EXIT0000                         EXIT
* ------------------------------------------------------------------- *
*        Process C(atalog) line coummand                              *
* ------------------------------------------------------------------- *
MAIN0700 DS    0H
         ITRACE ID=CATALOG
MAIN0710 DS    0H
         MVC   DXD_CAMLST(CAT_CAMLST_L),CAT_CAMLST_I
         USING MSG_01,R8
         LA    R1,MSG_01_DSN
         ST    R1,DXD_CAMLST+4
         LA    R1,DXD_VOLLIST
         ST    R1,DXD_CAMLST+12
         CATALOG DXD_CAMLST
         LTR   R15,R15                          SUCCESSFUL?
         BNZ   ERR1010                          NO
         MVC   MSG_01_MSG(L'CATALOGED),CATALOGED
         MVI   MSG_01_ATTR_3,$SCREEN_ATTR_HIGH
         MVC   MSG_01_SELECT,C' '
         DROP  R8
         B     MAIN0090
* ------------------------------------------------------------------- *
*        Process U(ncatalog) line command                             *
* ------------------------------------------------------------------- *
MAIN0750 DS    0H
         ITRACE ID=UNCAT
         MVC   DXD_CAMLST(UNCAT_CAMLST_L),UNCAT_CAMLST_I
         USING MSG_01,R8
         LA    R1,MSG_01_DSN
         ST    R1,DXD_CAMLST+4
         CATALOG DXD_CAMLST
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR1020                        NO
         MVC   MSG_01_MSG(L'UNCATED),UNCATED
         MVI   MSG_01_ATTR_3,$SCREEN_ATTR_HIGH
         MVC   MSG_01_SELECT,C' '
         DROP  R8
         B     MAIN0090
* ------------------------------------------------------------------- *
*        Process R(ename) line command                                *
* ------------------------------------------------------------------- *
MAIN0800 DS    0H
         ITRACE ID=RENAME
MAIN0810 DS    0H
         USING MSG_01,R8
         MVC   SPF_DSN,MSG_01_DSN             COPY DATA SET NAME
         MVC   SESS_DISP_PANEL,PANEL_4        COPY PANEL NAME
         L     R15,COMM_V_OSDISP              OSDISP ENTRY
         BALR  R14,R15                        LINK TO OSDISP
         OC    SESS_RC,SESS_RC                RC=0?
         BNZ   MAIN0830                       NO.. ABORT RENAME
         CLC   SPF_NEW_DSN,COMM_BLANKS        ANYTHING IN NEW NAME?
         BE    MAIN0810                       NO.. ASK AGAIN
         CLC   SPF_NEW_DSN,MSG_01_DSN         SET NEW NAME TO OLD
         BE    MAIN0810
         MVC   DXD_CAMLST(RENAME_CAMLST_L),RENAME_CAMLST_i
         LA    R1,MSG_01_DSN
         ST    R1,DXD_CAMLST+4
         LA    R1,SPF_NEW_DSN
         ST    R1,DXD_CAMLST+8
         LA    R1,DXD_VOLLIST
         ST    R1,DXD_CAMLST+12
         SR    R0,R0
         RENAME  DXD_CAMLST
         ITRACE ID=RENAMERC,                                           +
               RDATA1=R15,                                             +
               RDATA2=R0
         LTR   R15,R15                        SUCCESSFUL?
         BZ    MAIN0820                       YES
         LTR   R0,R0                          REASON CODE ZERO?
         BNZ   ERR1030                        NO
MAIN0820 DS    0H
         MVI   MSG_01_SELECT,C' '             RESET COMMAND
         MVC   MSG_01_DSN,SPF_NEW_DSN         CHANGE DSN
         MVC   MSG_01_MSG(L'RENAMED),RENAMED
         MVI   MSG_01_ATTR_3,$SCREEN_ATTR_HIGH
         B     MAIN0090
MAIN0830 DS    0H
         MVI   MSG_01_SELECT,C' '             RESET COMMAND
         MVC   MSG_01_MSG(L'RENAME_ABORTED),RENAME_ABORTED
         MVI   MSG_01_ATTR_3,$SCREEN_ATTR_HIGH
         DROP  R8
         B     MAIN0090
* ------------------------------------------------------------------- *
*        Process D(elete) line command                                *
* ------------------------------------------------------------------- *
MAIN0850 DS    0H
         ITRACE ID=DELETE
         USING MSG_01,R8                      DEFINE BASE
         MVC   SPF_DSN,MSG_01_DSN             COPY DATASET NAME
         MVC   SESS_DISP_PANEL,PANEL_9        PANEL TO USE
         L     R15,COMM_V_OSCNFRM
         BALR  R14,R15                        CONFIRM DELETION
         LTR   R15,R15                        ABORTED?
         BNZ   MAIN0860                       YES
         CLI   SPF_YES_OR_NO,C'N'             ABORTED?
         BE    MAIN0860                       YES
         MVC   DXD_CAMLST(DELETE_CAMLST_L),DELETE_CAMLST_I
         LA    R1,MSG_01_DSN                  DATA SET NAME
         ST    R1,DXD_CAMLST+4                SET ADDRESS
         LA    R1,DXD_VOLLIST                 VOLLIST
         ST    R1,DXD_CAMLST+12               SET ADDRESS
         L     R0,SESS_UCB                    NOT WELL DOCUMENTED
         SCRATCH DXD_CAMLST
         ITRACE ID=SCR_RC,                                             +
               RDATA1=R15
         LTR   R15,R15
         BNZ   ERR1040
         MVI   MSG_01_SELECT,C' '             RESET COMMAND
         MVC   MSG_01_MSG(L'DELETED),DELETED
         MVI   MSG_01_ATTR_3,$SCREEN_ATTR_HIGH
         B     MAIN0090
MAIN0860 DS    0H
         ITRACE ID=ABORTED
         MVI   MSG_01_SELECT,C' '             RESET COMMAND
         MVC   MSG_01_MSG(L'DELETE_ABORTED),DELETE_ABORTED
         MVI   MSG_01_ATTR_3,$SCREEN_ATTR_HIGH
         B     MAIN0090
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0900 DS    0H
         ITRACE ID=COMPRESS
         USING MSG_01,R8                      DEFINE BASE
         MVI   DAIR_OPTS,$DAIR_USE_DD         SET OPTIONS
         ITRACE ID=ALLOC,                                              +
               DATA1=SYSUT1
         MVI   DAIR_FUNC,$DAIR_ALLOC          SET FUNCTION (ALLOCATE)
         MVC   DAIR_DD,SYSUT1                 COPY DDNAME
         MVC   DAIR_DSN,MSG_01_DSN            COPY DATA SET NAME
         MVC   DAIR_MEMBER,COMM_BLANKS        COPY MEMBER NAME
         MVC   DAIR_VOLSER,SESS_VOLSER        COPY VOLSER
         MVI   DAIR_DISP,$DAIR_DISP_SHR
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15
         ITRACE ID=ALLO_RC,                                            +
               DATA1=(DAIR_R15,4)
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0020                        NO
         ITRACE ID=ALLOC,                                              +
               DATA1=SYSUT2
         MVI   DAIR_FUNC,$DAIR_ALLOC          SET FUNCTION (ALLOCATE)
         MVC   DAIR_DD,SYSUT2                 COPY DDNAME
         MVC   DAIR_DSN,MSG_01_DSN            COPY DATA SET NAME
         MVC   DAIR_MEMBER,COMM_BLANKS        COPY MEMBER NAME
         MVC   DAIR_VOLSER,SESS_VOLSER        COPY VOLSER
         MVI   DAIR_DISP,$DAIR_DISP_SHR
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15
         ITRACE ID=ALLO_RC,                                            +
               DATA1=(DAIR_R15,4)
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0020                        NO
         ITRACE ID=ALLOC,                                              +
               DATA1=SYSIN
         MVI   DAIR_OPTS,$DAIR_DUMMY+$DAIR_USE_DD
         MVC   DAIR_DD,SYSIN
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15                        ALLOCATE SYSIN
         ITRACE ID=ALLO_RC,                                            +
               DATA1=(DAIR_R15,4),                                     +
               DATA2=DAIR_DD
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0020                        NO
         ITRACE ID=ALLOC,                                              +
               DATA1=SYSPRINT
         MVC   DAIR_DD,SYSPRINT
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15                        ALLOCATE SYSPRINT
         ITRACE ID=ALLO_RC,                                            +
               DATA1=(DAIR_R15,4),                                     +
               DATA2=DAIR_DD
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0020                        NO
         ITRACE ID=LINKCOPY
         LA    R1,DXD_COMPRESS
         MVC   DXD_LINK(LINK_L),LINK_I
         LINK  EP=IEBCOPY,                                             +
               PARAM=DXD_COMPRESS,                                     +
               MF=(E,DXD_LINK),                                        +
               VL=1
         LR    R2,R15                         SAVE IEBCOPY RETURN CODE
         ITRACE ID=FREE_PRT
         MVI   DAIR_OPTS,0                    CLEAR OPTIONS
         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION (FREE)
         MVC   DAIR_DD,SYSIN                  COPY DDNAME
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0020                        NO
         MVC   DAIR_DD,SYSPRINT               COPY DDNAME
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0020                        NO
         ITRACE ID=FREE_UT1
         MVC   DAIR_DD,SYSUT1                 COPY DDNAME
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0020                        NO
         ITRACE ID=FREE_UT2
         MVC   DAIR_DD,SYSUT2                 COPY DDNAME
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR
         BALR  R14,R15
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0020                        NO
         LR    R2,R15                         IEBCOPY RC=0?
         BNZ   ERR1050                        NO
         MVC   MSG_01_MSG(L'COMPRESSED),COMPRESSED
         MVI   MSG_01_ATTR_3,$SCREEN_ATTR_HIGH
         MVC   MSG_01_SELECT,C' '
         B     MAIN0090                       CONTINUE WITH NEXT CMD
         DROP  R8
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*        Process F(ind) primary command                               *
*                                                                     *
*        . Verify the number of operand(s)                            *
*        . Find the data set name in the data space                   *
*        . Make the data set's entry the first on the display         *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1000 DS    0H
         ITRACE ID=FIND
         CH    R3,H2                          TWO OPERANDS?
         BL    MAIN1020                       LESS
         BNE   ERR0050                        TOO MANY
         CLC   OPERAND_02_LENGTH,H44          TOO LONG?
         BH    ERR0060                        YES
         ICM   R2,15,OPERAND_02_ADDRESS
         MVC   DSPCREQ_DSN,0(R2)              COPY DATA SET NAME
         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR
         B     MAIN1030
MAIN1020 DS    0H
         CLC   DXD_FIND_DSN,COMM_BLANKS       DATA SET NAME PRESENT?
         BE    ERR0050                        NO
         MVC   DSPCREQ_RECORD_NBR,DXD_FIND_NBR
         MVC   DSPCREQ_DSN,DXD_FIND_DSN
MAIN1030 DS    0H
         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_DSN_G
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         CLI   DSPCREQ_RC,$DSPCREQ_OK         LOCATED?
         BNE   MAIN1040                       NO
         MVC   DXD_FIND_NBR,DSPCREQ_RECORD_NBR
         MVC   DXD_FIND_DSN,DSPCREQ_DSN
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND
         B     MAIN0030                       REBUILD
MAIN1040 DS    0H
         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE
         B     MAIN0060                       DISPLAY WITH MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FMT10000 DS    0H
         MVC   0(MSG_01_L,R8),MSG_01
         USING MSG_01,R8
         MVC   MSG_01_DSN,DS1DSNAM
         MVI   MSG_01_ATTR_1,$SCREEN_ATTR_INPUT
         MVI   MSG_01_ATTR_2,$SCREEN_ATTR_NORMAL
         TM    DS1SMSFG,DS1PDSEX              HFS?
         BO    FMT10020
         TM    DS1SMSFG,DS1PDSE               PDSE?
         BO    FMT10010
         TM    DS1DSORG,DS1DSGIS              ISAM? (*GAD*)
         BO    FMT10030                       YES
         TM    DS1DSORG,DS1DSGPS              SEQUENTIAL?
         BO    FMT10040                       YES
         TM    DS1DSORG,DS1DSGDA              DIRECT ACCESS?
         BO    FMT10050                       YES
         TM    DS1DSORG,DS1DSGPO              PDS?
         BO    FMT10060                       YES
         TM    DS1DSORG+1,DS1ACBM             VSAM?
         BO    FMT10080
         MVI   MSG_01_ATTR_1,$SCREEN_ATTR_NORMAL
         MVC   MSG_01_DSORG,UNKNOWN           UNKNOWN
         B     FMT10090
FMT10010 DS    0H
         MVC   MSG_01_DSORG,PDSE
         B     FMT10070
FMT10020 DS    0H
         MVC   MSG_01_DSORG,HFS
         B     FMT10070
FMT10030 DS    0H
         MVC   MSG_01_DSORG,ISAM
         B     FMT10070
FMT10040 DS    0H
         MVC   MSG_01_DSORG,PS
         B     FMT10070
FMT10050 DS    0H
         MVC   MSG_01_DSORG,DA
         B     FMT10070
FMT10060 DS    0H
         MVC   MSG_01_DSORG,PO
FMT10070 DS    0H
         TM    DS1DSORG,DS1DSGU
         BNO   FMT10090
         MVI   MSG_01_DSORG+4,C'U'
         B     FMT10090
FMT10080 DS    0H
         MVC   MSG_01_DSORG,VSAM
FMT10090 DS    0H
         XC    DXD_EXTENTS,DXD_EXTENTS
         XC    DXD_TOTAL_TRACKS,DXD_TOTAL_TRACKS
         LA    R1,DS1EXT1
         LA    R2,3
         BAL   R14,XTNT0000
         OC    DS1PTRDS,DS1PTRDS
         BZ    FMT10120
         MVC   DXD_SAVE_RECORD_NBR,DSPCREQ_RECORD_NBR
         MVC   DSPCREQ_CCHHR,DS1PTRDS
FMT10100 DS    0H
         LA    R1,DXD_FORMAT_3
         ST    R1,DSPCREQ_RECORD_ADDR
         ITRACE ID=RD_F3_2,                                            +
               DATA1=(DSPCREQ_CCHHR,5),                                +
               DATA2=(DSPCREQ_RECORD_ADDR,4)
         MVI   DSPCREQ_FUNC,$DSPCREQ_FIND_CCHHR
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         ITRACE ID=FMT3_RC,                                            +
               DATA1=(DSPCREQ_RC,1)
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   MAIN0060
         LA    R1,DS3EXT1
         LA    R2,4
         BAL   R14,XTNT0000
         LA    R1,DS3ADEXT
         LA    R2,9
         BAL   R14,XTNT0000
         OC    DS3PTRDS,DS3PTRDS
         BZ    FMT10110
         MVC   DSPCREQ_CCHHR,DS3PTRDS
         B     FMT10100
FMT10110 DS    0H
         MVC   DSPCREQ_RECORD_NBR,DXD_SAVE_RECORD_NBR
         LA    R1,DXD_FORMAT_1
         ST    R1,DSPCREQ_RECORD_ADDR
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETREIVE
FMT10120 DS    0H
         ICM   R1,15,DXD_EXTENTS
         CVD   R1,COMM_DWORD
         ED    MSG_01_EXTENTS,COMM_DWORD+4
         ICM   R1,15,DXD_TOTAL_TRACKS
         CVD   R1,COMM_DWORD
         ED    MSG_01_TRACKS,COMM_DWORD+4
         DROP  R8
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
XTNT0000 DS    0H
         ST    R14,DXD_RETURN
XTNT0010 DS    0H
         ITRACE ID=EXTENT1,                                            +
               RDATA1=R1,                                              +
               RDATA2=R2
         USING EXTENT,R1
         CLI   EXTENT_TYPE,0                  UNUSED EXTENT?
         BE    XTNT0020                       YES
         ICM   R0,15,DXD_EXTENTS              NBR OF EXTENTS
         A     R0,F1                          PLUS 1
         STCM  R0,15,DXD_EXTENTS              SAVE TOTAL
         SR    R0,R0
         SR    R14,R14
         SR    R15,R15
         ICM   R14,3,EXTENT_LOW_CYLINDER      STARTING CYLINDER
         MH    R14,SESS_TRACKS                MULTIPLY BY TRACKS/CYL
         ICM   R0,3,EXTENT_LOW_TRACK          STARTING TRACK
         AR    R14,R0                         RELATIVE STARTING TRACK
         ICM   R15,3,EXTENT_HIGH_CYLINDER     ENDING CYLINDER
         MH    R15,SESS_TRACKS                MULTIPLY BY TRACKS/CYL
         ICM   R0,3,EXTENT_HIGH_TRACK         ENDING TRACK
         AR    R15,R0                         RELATIVE ENDING TRACK
         SR    R15,R14                        COMPUTE TRACKS MINUS 1
         A     R15,F1                         ADD 1 BACK
         A     R15,DXD_TOTAL_TRACKS           PLUS TOTAL UP TO NOW
         ST    R15,DXD_TOTAL_TRACKS           SAVE TOTAL
XTNT0020 DS    0H
         LA    R1,EXTENT_L(,R1)
         BCT   R2,XTNT0010
         L     R14,DXD_RETURN
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
XTNT0100 DS    0H
         ST    R14,DXD_RETURN
XTNT0110 DS    0H
         ITRACE ID=EXTENT2,                                            +
               RDATA1=R1,                                              +
               RDATA2=R2
         USING EXTENT,R1
         CLI   EXTENT_TYPE,0                  UNUSED EXTENT?
         BE    XTNT0120                       YES
         MVC   0(MSG_07_L,R8),MSG_07
         USING MSG_07,R8
         SR    R0,R0
         UNPK  MSG_07_TYPE(3),EXTENT_TYPE(2)  UNPACK TYPE
         TR    MSG_07_TYPE,HEXCHAR            TRANSLATE IT
         MVI   MSG_07_TYPE+2,C' '
         IC    R0,EXTENT_SEQUENCE             EXTENT SEQUENCE NBR
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_07_SEQUENCE,COMM_DWORD+6   EDIT IT
         ICM   R0,3,EXTENT_LOW_CYLINDER       STARTING CYLINDER
         LR    R14,R0                         COPY TO R14
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_07_LOW_CYL,COMM_DWORD+5    EDIT STARTING CYLINDER
         MH    R14,SESS_TRACKS                MULTIPLY BY TRACKS/CYL
         ICM   R0,3,EXTENT_LOW_TRACK          STARTING TRACK
         AR    R14,R0                         COMPUTE RELATIVE TRACK
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_07_LOW_TRACK,COMM_DWORD+5  EDIT STARTING TRACK
         ICM   R0,3,EXTENT_HIGH_CYLINDER      ENDING CYLINDER
         LR    R15,R0                         COPY TO R15
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_07_HIGH_CYL,COMM_DWORD+5   EDIT ENDING CYLINDER
         MH    R15,SESS_TRACKS                MULTIPLY BY TRACKS/CYL
         ICM   R0,3,EXTENT_HIGH_TRACK         ENDING TRACK
         AR    R15,R0                         COMPUTE RELATIVE TRACK
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         ED    MSG_07_HIGH_TRACK,COMM_DWORD+5 EDIT ENDING TRACK
         SR    R15,R14                        COMPUTE NBR OF TRACKS-1
         LA    R15,1(,R15)                    ADD 1 BACK
         CVD   R15,COMM_DWORD                 CONVERT TO DECIMAL
         ED    MSG_07_TRACKS,COMM_DWORD+4     EDIT NBR OF TRACKS
         DROP  R8,R1
         A     R8,SPF_VWIDTH                  NEXT LINE ON SCREEN
         BCT   R7,XTNT0120                    MINUS 1 LINE
         B     MAIN0550                       SCREEN FULL
XTNT0120 DS    0H
         LA    R1,EXTENT_L(,R1)               NEXT EXTENT
         BCT   R2,XTNT0110                    LOOP
         L     R14,DXD_RETURN
         BR    R14                            ALL EXTENTS PROCESSED
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SORT0000 DS    0H
         ST    R14,DXD_RETURN
         ITRACE ID=SORT
         MVI   DSPCREQ_FUNC,$DSPCREQ_SORT_DSN
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         L     R14,DXD_RETURN
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0020  DS    0H
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     EXIT0000                       EXIT
ERR0040  DS    0H
         MVI   COMM_MSG_ID+1,11
         MVC   COMM_DWORD(4),DSINFO_ERROR_INFO
         B     ERR0100                        EXIT
ERR0050  DS    0H
         MVI   COMM_MSG_ID+1,3
         B     ERR0100
ERR0060  DS    0H
         MVI   COMM_MSG_ID+1,4
ERR0070  DS    0H
         MVI   COMM_MSG_ID+1,5
         STH   R15,COMM_DWORD                 SAVE RETURN CODE
         B     ERR0100
ERR0080  DS    0H
         DC    H'8'
         DC    C'DISPLAY FAILED'
ERR0090  DS    0H
         MVI   COMM_MSG_ID+1,12
ERR0100  DS    0H
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15                        CALL OSMSG
ERR0110  DS    0H
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     MAIN0060
ERR0120  DS    0H
         DC    H'0'
ERR0140  DS    0H
         DC    H'0'
ERR1010  DS    0H
         MVI   COMM_MSG_ID+1,6
         B     ERR1100
ERR1020  DS    0H
         MVI   COMM_MSG_ID+1,7
         B     ERR1100
ERR1030  DS    0H
         MVI   COMM_MSG_ID+1,8
         B     ERR1100
ERR1040  DS    0H
         MVI   COMM_MSG_ID+1,9
         B     ERR1100
ERR1050  DS    0H
         MVI   COMM_MSG_ID+1,10
ERR1100  DS    0H
         STH   R15,COMM_DWORD                 SAVE RETURN CODE
         MVI   COMM_MSG_ID,0                  FORCE BYTE 1 TO ZERO
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15               CALL OSMSG
         USING MSG_01,R8
         MVC   MSG_01_MSG,COMM_MSG_1
         MVI   MSG_01_ATTR_3,$SCREEN_ATTR_HIGH
         DROP  R8
         B     MAIN0090
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ABEND000 DS    0H
         ITRACE ID=ABEND
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DEBUG000 DS    0H
         ITRACE ID=DEBUG
         L     R15,COMM_V_OSDEBUG
         BALR  R14,R15
         B     MAIN0060
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLEAN000 DS    0H
         ITRACE ID=CLEAN_UP
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R0,DXD_VDATA1_LENGTH
         L     R1,DXD_VDATA1_ADDR
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        FREE VDATA
         L     R0,DXD_VDATA2_LENGTH
         L     R1,DXD_VDATA2_ADDR
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        FREE VDATA
         XC    SESS_FORMATTER_DXD_ADDR,SESS_FORMATTER_DXD_ADDR
         XC    SESS_FORMATTER_DXD_LENGTH,SESS_FORMATTER_DXD_LENGTH
         LA    R0,OSVTOC_DXD_L                WORK AREA SIZE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE R13
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=(0)
         SR    R15,R15
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         L     R1,4(R13)
         ITRACE ID=EXIT,                                               +
               DATA1=(12(R13),4)
         LH    R15,DXD_RC                     RETURN CODE
         L     R13,4(R13)                     RESTORE R13
EXIT0010 DS    0H
         L     R14,12(,R13)                   RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
CAT_CAMLST_I    CAMLST CAT,1,,2
CAT_CAMLST_L    EQU    *-CAT_CAMLST_I
DELETE_CAMLST_I CAMLST SCRATCH,1,,2,,OVRD
DELETE_CAMLST_L EQU    *-DELETE_CAMLST_I
RENAME_CAMLST_I CAMLST RENAME,1,2,3
RENAME_CAMLST_L EQU    *-RENAME_CAMLST_I
UNCAT_CAMLST_I  CAMLST UNCAT,1
UNCAT_CAMLST_L  EQU    *-UNCAT_CAMLST_I
LINK_I          LINK   EP=IEBCOPY,SF=L
LINK_L          EQU    *-LINK_I

F1              DC    F'1'
F2              DC    F'2'
H1              DC    H'1'
H2              DC    H'2'
H8              DC    H'8'
H44             DC    H'44'

HEXCHAR         EQU   *-C'0'
                DC    C'0123456789ABCDEF'

EDIT_WORD_1     DC    X'F02020202020'

ABEND           DC    C'ABEND'
BROWSED         DC    C'*Browsed*'
CATALOGED       DC    CL18'*Cataloged*'
CHECKPOINT      DC    C'Checkpoint'

COMPRESS        DC    AL2(8),CL8'COMPRESS'
COMPRESS_L      EQU   *-COMPRESS

COMPRESSED      DC    C'*Compressed*'
DADSM_BLOCKSIZE DC    C'DADSM blocksize'
DEBUG           DC    C'DEBUG'
DELETED         DC    CL18'*Deleted*'
DELETE_ABORTED  DC    C'*Deletion aborted*'
EXTENDED        DC    C'Extended attributes'
FIND            DC    C'FIND '
VTOC_PANEL      DC    CL8'OSVTOC'
PANEL_4         DC    CL8'OS0004'
PANEL_9         DC    CL8'OS0009'
HFS             DC    CL5'HFS'
ISAM            DC    CL5'ISAM'
INFO            DC    CL18'*Info*'
LAST            DC    C'Last'
LOCATE          DC    C'LOCATE'
MODIFIED        DC    C'Modified'
NOBCS           DC    C'NO BCS'
PS              DC    CL5'PS'
DA              DC    CL5'DA'
PO              DC    CL5'PO'
PDSE            DC    CL5'PDSE'
PASSRDWRT       DC    C'PASSRDWRT'
PASSWRT         DC    C'PASSWRT'
RACF            DC    C'RACF'
REBLOCK         DC    C'Reblockable'
REFRESH         DC    C'REFRESH'
RENAMED         DC    Cl18'*Renamed*'
RENAME_ABORTED  DC    C'*Rename aborted*'
SMS             DC    CL5'SMS'
SYSIN           DC    CL8'SYSIN'
SYSPRINT        DC    CL8'SYSPRINT'
SYSUT1          DC    CL8'SYSUT1'
SYSUT2          DC    CL8'SYSUT2'
VSAM            DC    CL5'VSAM'
VTOC            DC    CL5'VTOC'
UNCATED         DC    CL18'*Uncatl''ged*'
UNKNOWN         DC    CL5'UNKN'

                LTORG

HEADING_01        DS    0C
                  DC    AL01($SCREEN_ATTR_HIGH)
                  DC    C' '
                  DC    C' '
                  DC    CL44'Dataset name'
                  DC    CL01' '
                  DC    CL05'DSORG'
                  DC    CL01' '
                  DC    CL07'Extents'
                  DC    CL02' '
                  DC    CL07' Tracks'
HEADING_01_L      EQU   *-HEADING_01

HEADING_02        DS    0C
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    C'    _________________________'
                  DC    C'  Extent info  '
                  DC    C'__________________________'
HEADING_02_L      EQU   *-HEADING_02

HEADING_03        DS    0C
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    C'    Type   Seq_#        Start CCCC-HHHH     E+
               nd CCCC-HHHH       Tracks'
HEADING_03_L      EQU   *-HEADING_03

MSG_01            DS    0C
MSG_01_ATTR_1     DC    AL1(0)
MSG_01_SELECT     DC    C' '
MSG_01_ATTR_2     DC    AL1($SCREEN_ATTR_NORMAL)
MSG_01_DSN        DC    CL44' '
                  DC    C' '
MSG_01_DSORG      DC    CL5' '
MSG_01_EXTENTS    DC    X'4020202020202120'
MSG_01_ATTR_3     DC    C' '
MSG_01_MSG        DC    CL18' '
                  ORG   MSG_01_MSG
MSG_01_TRACKS     DC    X'4020202020202120'
MSG_01_L          EQU   *-MSG_01

MSG_02            DS    0C
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    CL10'VOL SEQ'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_VOL_SEQ    DC    X'402020202120'
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    C'  RECFM'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_RECFM      DC    CL4' '
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    C'LRECL'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_LRECL      DC    X'402020202120'
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    C'Block size'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_02_BLKSI      DC    X'402020202120'
MSG_02_L          EQU   *-MSG_02

MSG_03            DS    0C
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    CL10'RKP'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_RKP        DC    X'402020202120'
                  DC    CL2' '
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    CL10'Key Length'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_03_KEYLEN     DC    X'40202120'
MSG_03_L          EQU   *-MSG_03

MSG_04            DS    0C
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    CL10'SMS'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_04_SMS        DC    CL2' '
                  DC    CL2' '
MSG_04_FLAGS      DC    CL65' '
MSG_04_L          EQU   *-MSG_04

MSG_05            DS    0C
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    C'Indicators'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_05_INDICATORS DC    CL2' '
                  DC    CL2' '
MSG_05_FLAGS      DS    CL65' '
MSG_05_L          EQU   *-MSG_05

MSG_06            DS    0C
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    CL10'Created'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_06_CREATE     DC    CL6' '
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    C'  Expires'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_06_EXPIRE     DC    CL6' '
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    C' Last referenced'
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_06_REFERENCE  DC    CL6' '
MSG_06_L          EQU   *-MSG_06

MSG_07            DS    0C
                  DC    AL1($SCREEN_ATTR_NORMAL)
                  DC    CL5' '
MSG_07_TYPE       DC    CL2' '
                  DC    CL5' '
MSG_07_SEQUENCE   DC    X'40202120'
                  DC    CL2' '
                  DC    C'      '
MSG_07_LOW_CYL    DC    X'F02020202120'
                  DC    C'-'
MSG_07_LOW_TRACK  DC    X'F02020202120'
                  DC    CL7' '
MSG_07_HIGH_CYL   DC    X'F02020202120'
                  DC    C'-'
MSG_07_HIGH_TRACK DC    X'F02020202120'
                  DC    CL5' '
MSG_07_TRACKS     DC    X'4020202020202120'
MSG_07_L          EQU   *-MSG_07

MSG_09            DS    0C
                  DC    CL21' '
                  DC    AL1($SCREEN_ATTR_HIGH)
                  DC    C'Last used track/record '
                  DC    AL1($SCREEN_ATTR_NORMAL)
MSG_09_TRACK      DC    X'F02020202120'
                  DC    C'-'
MSG_09_RECORD     DC    X'F0202120'
MSG_09_L          EQU   *-MSG_09

OSVTOCEND         EQU   *
* ------------------------------------------------------------------- *
*        WORK AREA                                                    *
* ------------------------------------------------------------------- *
OSVTOC_WORK            DSECT
                       COPY DXDPREF

DXD_VWIDTH             DS   F
DXD_VDEPTH             DS   F

DXD_VDATA1_ADDR        DS   A
DXD_VDATA1_LENGTH      DS   F
DXD_VDATA2_ADDR        DS   A
DXD_VDATA2_LENGTH      DS   F

DXD_CURRENT_VDATA1_ADDR DS  A
DXD_LINES_REMAINING    DS   F

DXD_RETURN             DS   A

DXD_LINK               DS   0A,(LINK_L)X

DXD_CAMLST             DS   0F,(CAT_CAMLST_L)X

DXD_VDATA              DS   A

DXD_EXTENTS            DS   F
DXD_TOTAL_TRACKS       DS   F

DXD_VOLLIST            DS   0F
DXD_VOLLIST_NBR        DS   H
DXD_VOLLIST_UCB        DS   XL4
DXD_VOLLIST_VOL        DS   CL6
DXD_VOLLIST_SEQ        DS   XL2

DXD_FIND_NBR           DS   F
DXD_FIND_DSN           DS   CL44

DXD_RC                 DS   H
DXD_LINES              DS   H

DXD_COMPRESS           DS   0H,(COMPRESS_L)X

DXD_WORK_1             DS   CL10

DXD_FLAGS              DS   X
$LINE_CMD              EQU  X'80'

DXD_SAVE_RECORD_NBR    DS   CL5

DXD_FORMAT_1           DS     0C
                       DS     X
                       DS     CL44
                       IBMMAC VTOC=1

DXD_FORMAT_3           DS     0C
                       DS     X
                       DS     CL44
                       IBMMAC VTOC=3

                       DAIRREQ  DSECT=NO
                       DSINFREQ DSECT=NO
                       DSPCREQ  DSECT=NO

OSVTOC_WORK            DSECT
OSVTOC_DXD_L           EQU      *-OSVTOC_WORK
* ------------------------------------------------------------------- *
*              COMMON DATA                                            *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXTENT   DSECT
EXTENT_TYPE          DS  X
EXTENT_SEQUENCE      DS  X
EXTENT_LOW           DS  0XL4
EXTENT_LOW_CYLINDER  DS  XL2
EXTENT_LOW_TRACK     DS  XL2
EXTENT_HIGH          DS  0XL4
EXTENT_HIGH_CYLINDER DS  XL2
EXTENT_HIGH_TRACK    DS  XL2
EXTENT_L             EQU *-EXTENT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY TRENTRY
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  OSVTOC
