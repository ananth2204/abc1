* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: OSPROF                                                *
*                                                                     *
*  Read or write profile information                                  *
*                                                                     *
*                                                                     *
*  This program either reads information from the user's profile      *
*  or saves information to the profile.                               *
*                                                                     *
*  It is linked separately and dynamically loaded because some of     *
*  the I/O control blocks are still required to be below the 24-bit   *
*  line.  It was just less hassle to put the whole thing below        *
*  the line.                                                          *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
OSPROF   CSECT
OSPROF   AMODE 31
OSPROF   RMODE 24
         USING OSCOMM,R12
         USING SESSION,R11
         USING OSPROF,R15
         B     INIT0000
MODID    DC    CL8'OSPROF'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(PROFEND-OSPROF)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT ADDR
         DROP  R15
         USING OSPROF,R10                     DEFINE BASE
         LR    R8,R1                          SAVE PARM BLOCK ADDRESS
         USING PROFREQ,R8                     DEFINE BASE
         GETMAIN RU,                                                   +
               LV=OSPROF_WORK_L,                                       +
               LOC=BELOW
         ST    R13,4(R1)                      SAVE R13
         ST    R1,8(R13)                      CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING OSPROF_WORK,R13
         MVC   DXD_CSECT,MODID                COPY CSECT NAME
         USING IHADCB,WORK_DCB
         L     R9,COMM_OSSPFD                 OSSPFD ADDRESS
         USING OSSPFD,R9                      DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               RDATA1=R8
         MVI   PROF_RC,$PROF_OK               ASSUME THE BEST
* ------------------------------------------------------------------- *
*        Locate the ISPPROF DD                                        *
* ------------------------------------------------------------------- *
         ITRACE ID=SCANTIOT
         USING PSA,R0                         DEFINE BASE
         L     R1,PSATNEW                     OUR TCB ADDRESS FROM PSA
         USING TCB,R1                         DEFINE TCB BASE
         L     R2,TCBTIO                      TIOT ADDRESS FROM OUR TCB
         USING TIOT1,R2                       DEFINE TIOT BASE
         LA    R3,TIOENTRY                    FIRST TIOT ENTRY
         USING TIOENTRY,R3                    DEFINE TIOT ENTRY BASE
INIT0010 DS    0H
         SR    R4,R4                          CLEAR FOR LENGTHS
         ICM   R4,1,TIOELNGH                  LENGTH OF THIS ENTRY
         BZ    ERR0010                        NOT FOUND
         CLC   TIOEDDNM,ISPPROF_DD            PROFILE DD FOUND?
         BE    INIT0020                       YES
         AR    R3,R4                          NEXT ENTRY
         B     INIT0010                       LOOP
INIT0020 DS    0H
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,7,TIOEJFCB                  JFCB TOKEN
         LA    R1,16(,R1)                     JFCB ADDRESS
         USING JFCB,R1                        DEFINE BASE
         ITRACE ID=PROF_DSN,                                           +
               DATA1=JFCBDSNM+00,                                      +
               DATA2=JFCBDSNM+08
         ITRACE ID=DSN+16,                                             +
               DATA1=JFCBDSNM+16,                                      +
               DATA2=JFCBDSNM+24
         ITRACE ID=DSN+32,                                             +
               DATA1=JFCBDSNM+32,                                      +
               DATA2=(JFCBDSNM+40,4)
         MVC   DAIR_DSN,JFCBDSNM              COPY PROFILE DSN
         MVC   DAIR_DD,OSPROF_DD              SET DD NAME
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   PROF_FUNC,$PROF_READ           READ  PROFILE INFO?
         BE    PROF0100                       YES
         CLI   PROF_FUNC,$PROF_WRITE          WRITE PROFILE INFO?
         BE    PROF1000                       YES
* ------------------------------------------------------------------- *
*        Read profile data                                            *
* ------------------------------------------------------------------- *
PROF0100 DS    0H
         ITRACE ID=READ
         MVI   DAIR_FUNC,$DAIR_ALLOC
         MVI   DAIR_OPTS,$DAIR_USE_DD
         MVC   DAIR_MEMBER,COMM_BLANKS        PDS, NOT A MEMBER
         MVC   DAIR_VOLSER,COMM_BLANKS
         MVC   DAIR_UNIT,COMM_BLANKS
         MVI   DAIR_DISP,$DAIR_DISP_SHR
         BAL   R7,DAIR0000                    ALLOCATE PROFILE DATA SET
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   EXIT0000                       NO..
         MVC   WORK_OPEN(OPEN_L),OPEN_I
         ITRACE ID=OPEN_DIR
         MVC   WORK_DCB(DIRDCB_L),DIRDCB
         OPEN  WORK_DCB,                                               +
               MODE=31,                                                +
               MF=(E,WORK_OPEN)
         ITRACE ID=FIND
         FIND  WORK_DCB,                                               +
               PROFILE_NAME,                                           +
               D
         LR    R2,R15
         ITRACE ID=FIND_RC,                                            +
               RDATA1=R2
         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I
         CLOSE WORK_DCB,                                               +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         FREEPOOL WORK_DCB
         MVI   DAIR_FUNC,$DAIR_FREE
         BAL   R7,DAIR0000                      FREE THE DATA SET
         LTR   R2,R2                            MEMBER FOUND?
         BNZ   EXIT0000                         NO
         MVI   DAIR_FUNC,$DAIR_ALLOC
         MVC   DAIR_MEMBER,PROFILE_NAME
         BAL   R7,DAIR0000                      ALLOCATE WITH MEMBER
         MVC   WORK_DCB(READDCB_L),READDCB
         MVC   WORK_DCBE(DCBE_L),DCBE_I
         LA    R1,WORK_DCBE
         STCM  R1,7,DCBDCBE
         MVC   WORK_OPEN(OPEN_L),OPEN_I
         OPEN  WORK_DCB,                                               +
               MODE=31,                                                +
               MF=(E,WORK_OPEN)
PROF0110 DS    0H
         ITRACE ID=GET_PROF
         GET   WORK_DCB,WORK_IO_AREA
         ITRACE ID=PROF_REC,                                           +
               DATA1=WORK_IO_AREA+0,                                   +
               DATA2=WORK_IO_AREA+8
         CLC   TYPE_PFK,WORK_TYPE             PF-KEY RECORD?
         BE    PROF0120                       YES
         CLC   WORK_TYPE,TYPE_LANGUAGE        LANGUAGE?
         BE    PROF0130                       YES
         CLC   WORK_TYPE,TYPE_ODSN            OUTPUT DSN?
         BE    PROF0150                       YES
         CLC   WORK_TYPE,TYPE_ODISP           OUTPUT DISP?
         BE    PROF0160                       YES
         CLC   WORK_TYPE,TYPE_OUNIT           OUTPUT UNIT?
         BE    PROF0170                       YES
         CLC   WORK_TYPE,TYPE_OVOLSER         OUTPUT VOLSER?
         BE    PROF0180                       YES
         CLC   WORK_TYPE,TYPE_OPRI            OUTPUT PRIMARY SPACE?
         BE    PROF0190                       YES
         CLC   WORK_TYPE,TYPE_OSEC            OUTPUT SECONDARY SPACE?
         BE    PROF0200                       YES
         CLC   WORK_TYPE,TYPE_SEP1            MEMBER SEPARATOR 1?
         BE    PROF0210                       YES
         CLC   WORK_TYPE,TYPE_SEP2            MEMBER SEPARATOR 2?
         BE    PROF0220                       YES
         CLC   WORK_TYPE,TYPE_SEP3            MEMBER SEPARATOR 3?
         BE    PROF0230                       YES
         CLC   WORK_TYPE,TYPE_SEP4            MEMBER SEPARATOR 4?
         BE    PROF0240                       YES
         CLC   WORK_TYPE,TYPE_SEP5            MEMBER SEPARATOR 5?
         BE    PROF0250                       YES
         CLC   WORK_TYPE,TYPE_SEP6            MEMBER SEPARATOR 6?
         BE    PROF0260                       YES
         ITRACE ID=UNKNOWN                    UNKNOWN RECORD IN PROFILE
         B     PROF0110
PROF0120 DS    0H
         ITRACE ID=PFK
         PACK  COMM_DWORD,WORK_TYPE+3(3)
         CVB   R1,COMM_DWORD                  CONVERT TO BINARY
         CH    R1,H24                         TOO LARGE?
         BH    ERR0020                        YES
         BCTR  R1,0                           CONVERT TO RELATIVE
         MH    R1,=Y(L'SPF_PFK_01)            MULTIPLY BY LENGTH EACH
         LA    R2,SPF_PFKS(R1)                PF-KEY DATA IN OSCOMM
         MVC   0(L'SPF_PFK_01,R2),WORK_DATA
         B     PROF0110                       READ NEXT RECORD
PROF0130 DS    0H
         ITRACE ID=LANGUAGE,                                           +
               DATA1=COMM_NATIONAL_LANGUAGE,                           +
               DATA2=WORK_DATA
         CLC   COMM_NATIONAL_LANGUAGE,WORK_DATA
         BE    PROF0110                       SAME LANGUAGE
         MVI   LANG_FUNC,$LANG_LOOKUP         SET FUNCTION
         MVC   LANG_NAME,WORK_DATA            SET LANGUAGE NAME
         LOAD  EP=OSLANG                      LOAD OSLANG
         LR    R15,R0                         COPY OSLANG ENTRY POINT
         LA    R1,LANGREQ                     PARAMETER BLOCK
         ITRACE ID=OSLANG,                                             +
               RDATA1=R1,                                              +
               DATA2=LANG_NAME
         BALR  R14,R15                        LOOKUP THE LANGUAGE
         DELETE EP=OSLANG                     DELETE OSLANG
         CLI   LANG_RC,$LANG_OK               SUCCESSFUL?
         BNE   ERR0030                        NO
         ITRACE ID=CHG_LANG                   CHANGING LANGUAGE MODULES
         CLC   COMM_NATIONAL_LANGUAGE,COMM_BLANKS
         BE    PROF0140                       NO LANGUAGE SET SO FAR
         DELETE EPLOC=COMM_LANGUAGE_MODULE
PROF0140 DS    0H
         MVC   COMM_NATIONAL_LANGUAGE,LANG_NAME
         MVC   COMM_LANGUAGE_MODULE,LANG_MODULE
         LOAD  EPLOC=COMM_LANGUAGE_MODULE
         ST    R0,COMM_MESSAGE_TABLE          SET MESSAGE TABLE ADDRESS
         B     PROF0110                       READ NEXT RECORD
PROF0150 DS    0H
         ITRACE ID=ODSN
         MVC   SPF_OUTPUT_DSN,WORK_DATA       COPY DATA SET NAME
         B     PROF0110
PROF0160 DS    0H
         ITRACE ID=ODISP
         MVC   SPF_OUTPUT_DISP,WORK_DATA
         B     PROF0110
PROF0170 DS    0H
         ITRACE ID=OUNIT
         MVC   SPF_OUTPUT_UNIT,WORK_DATA
         B     PROF0110
PROF0180 DS    0H
         ITRACE ID=OVOLSER
         MVC   SPF_OUTPUT_VOLSER,WORK_DATA
         B     PROF0110
PROF0190 DS    0H
         ITRACE ID=OPRI
         MVC   SPF_OUTPUT_SPACE_PRI,WORK_DATA
         B     PROF0110
PROF0200 DS    0H
         ITRACE ID=OSEC
         MVC   SPF_OUTPUT_SPACE_SEC,WORK_DATA
         B     PROF0110
PROF0210 DS    0H
         ITRACE ID=SEP1
         MVC   SPF_SEPARATOR_1,WORK_DATA
         B     PROF0110
PROF0220 DS    0H
         ITRACE ID=SEP2
         MVC   SPF_SEPARATOR_2,WORK_DATA
         B     PROF0110
PROF0230 DS    0H
         ITRACE ID=SEP3
         MVC   SPF_SEPARATOR_3,WORK_DATA
         B     PROF0110
PROF0240 DS    0H
         ITRACE ID=SEP4
         MVC   SPF_SEPARATOR_4,WORK_DATA
         B     PROF0110
PROF0250 DS    0H
         ITRACE ID=SEP5
         MVC   SPF_SEPARATOR_5,WORK_DATA
         B     PROF0110
PROF0260 DS    0H
         ITRACE ID=SEP6
         MVC   SPF_SEPARATOR_6,WORK_DATA
         B     PROF0110
PROF0500 DS    0H
         ITRACE ID=PROF_EOF
         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I
         CLOSE WORK_DCB,                                               +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         FREEPOOL WORK_DCB
         MVI   DAIR_FUNC,$DAIR_FREE
         BAL   R7,DAIR0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PROF1000 DS    0H
         ITRACE ID=WRITE
         MVI   DAIR_FUNC,$DAIR_ALLOC
         MVI   DAIR_OPTS,$DAIR_USE_DD
         MVC   DAIR_MEMBER,PROFILE_NAME
         MVC   DAIR_VOLSER,COMM_BLANKS
         MVC   DAIR_UNIT,COMM_BLANKS
         MVI   DAIR_DISP,$DAIR_DISP_SHR
         BAL   R7,DAIR0000
         OC    DAIR_R15,DAIR_R15
         BNZ   EXIT0000
         MVC   WORK_OPEN(OPEN_L),OPEN_I
         ITRACE ID=OPEN_DIR
         MVC   WORK_DCB(WRTDCB_L),WRTDCB
         OPEN  (WORK_DCB,OUTPUT),                                      +
               MODE=31,                                                +
               MF=(E,WORK_OPEN)
         MVC   WORK_DATA,COMM_BLANKS
         MVC   WORK_TYPE,TYPE_LANGUAGE
         MVC   WORK_DATA(L'COMM_NATIONAL_LANGUAGE),COMM_NATIONAL_LANGUA+
               GE
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_DATA,COMM_BLANKS
         MVC   WORK_TYPE,TYPE_ODSN
         MVC   WORK_DATA(L'SPF_OUTPUT_DSN),SPF_OUTPUT_DSN
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_ODISP
         MVC   WORK_DATA,COMM_BLANKS
         MVC   WORK_DATA(L'SPF_OUTPUT_DISP),SPF_OUTPUT_DISP
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_OUNIT
         MVC   WORK_DATA,COMM_BLANKS
         MVC   WORK_DATA(L'SPF_OUTPUT_UNIT),SPF_OUTPUT_UNIT
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_OVOLSER
         MVC   WORK_DATA,COMM_BLANKS
         MVC   WORK_DATA(L'SPF_OUTPUT_VOLSER),SPF_OUTPUT_VOLSER
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_OPRI
         MVC   WORK_DATA,COMM_BLANKS
         MVC   WORK_DATA(L'SPF_OUTPUT_SPACE_PRI),SPF_OUTPUT_SPACE_PRI
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_OSEC
         MVC   WORK_DATA,COMM_BLANKS
         MVC   WORK_DATA(L'SPF_OUTPUT_SPACE_SEC),SPF_OUTPUT_SPACE_SEC
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_SEP1
         MVC   WORK_DATA,SPF_SEPARATOR_1
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_SEP2
         MVC   WORK_DATA,SPF_SEPARATOR_2
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_SEP3
         MVC   WORK_DATA,SPF_SEPARATOR_3
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_SEP4
         MVC   WORK_DATA,SPF_SEPARATOR_4
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_SEP5
         MVC   WORK_DATA,SPF_SEPARATOR_5
         PUT   WORK_DCB,WORK_IO_AREA
         MVC   WORK_TYPE,TYPE_SEP6
         MVC   WORK_DATA,SPF_SEPARATOR_6
         PUT   WORK_DCB,WORK_IO_AREA
         ZAP   WORK_PFK_NBR,P1
         LA    R2,SPF_PFK_01
         LA    R3,24
PROF1010 DS    0H
         MVC   WORK_TYPE+2(4),=X'F0202020'
         ED    WORK_TYPE+2(4),WORK_PFK_NBR
         MVC   WORK_TYPE(3),TYPE_PFK
         MVC   WORK_DATA,0(R2)
         PUT   WORK_DCB,WORK_IO_AREA
         LA    R2,L'SPF_PFK_01(,R2)
         AP    WORK_PFK_NBR,P1
         BCT   R3,PROF1010
         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I
         CLOSE (WORK_DCB),                                             +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         FREEPOOL WORK_DCB
         MVI   DAIR_FUNC,$DAIR_FREE
         BAL   R7,DAIR0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0000 DS    0H
         LA    R1,DAIRREQ                     ALLOCATION PARAMETERS
         ITRACE ID=CALLDAIR,                                           +
               RDATA1=R1
         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT
         BALR  R14,R15                        LINK TO OSDAIR
         ITRACE ID=DAIR_RC,                                            +
               DATA1=(DAIR_R15,2)
         BR    R7
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NO_PROF
         MVI   PROF_RC,$PROF_NO_PROFILE
         B     EXIT0000
ERR0020  DS    0H
         ITRACE ID=BAD_PFK,                                            +
               RDATA1=R1
         ABEND 2,DUMP,,USER
ERR0030  DS    0H
         ITRACE ID=BAD_LANG,                                           +
               RDATA1=R1,                                              +
               DATA2=LANG_NAME
         DC    H'0'
         ABEND 3,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=OSPROF_WORK_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DIRDCB   DCB   DSORG=PO,                                               +
               DDNAME=OSPROF,                                          +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               MACRF=R
DIRDCB_L       EQU   *-DIRDCB
READDCB  DCB   DSORG=PS,                                               +
               DDNAME=OSPROF,                                          +
               DCBE=*,                                                 +
               EODAD=PROF0500,                                         +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               MACRF=GM
READDCB_L      EQU   *-READDCB
WRTDCB   DCB   DSORG=PS,                                               +
               DDNAME=OSPROF,                                          +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               MACRF=PM
WRTDCB_L       EQU  *-WRTDCB
DCBE_I   DCBE  RMODE31=BUFF
DCBE_L   EQU   *-DCBE_I
OPEN_I   OPEN  (*,INPUT),                                              +
               MODE=31,                                                +
               MF=L
OPEN_L         EQU   *-OPEN_I
CLOSE_I  CLOSE (*),                                                    +
               MODE=31,                                                +
               MF=L
CLOSE_L        EQU   *-CLOSE_I
H24            DC    H'24'
ISPPROF_DD     DC    CL8'ISPPROF'
OSPROF_DD      DC    CL8'OSPROF'
PROFILE_NAME   DC    CL8'$$OS'
TYPE_PFK       DC    CL3'PFK'
TYPE_LANGUAGE  DC    CL8'LANGUAGE'
TYPE_ODSN      DC    CL8'ODSN'
TYPE_ODISP     DC    CL8'ODISP'
TYPE_OUNIT     DC    CL8'OUNIT'
TYPE_OVOLSER   DC    CL8'OVOLSER'
TYPE_OPRI      DC    CL8'OPRI'
TYPE_OSEC      DC    CL8'OSEC'
TYPE_SEP1      DC    CL8'SEP1'
TYPE_SEP2      DC    CL8'SEP2'
TYPE_SEP3      DC    CL8'SEP3'
TYPE_SEP4      DC    CL8'SEP4'
TYPE_SEP5      DC    CL8'SEP5'
TYPE_SEP6      DC    CL8'SEP6'

P1             DC    P'1'

               LTORG
PROFEND        EQU  *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OSPROF_WORK      DSECT
                 COPY  DXDPREF
WORK_DCB         DS    0F,(READDCB_L)X
WORK_DCBE        DS    0F,(DCBE_L)X
WORK_OPEN        DS    0F,(OPEN_L)X
WORK_CLOSE       DS    0F,(CLOSE_L)X

WORK_PFK_NBR     DS    PL2

WORK_IO_AREA     DS    0C
WORK_TYPE        DS    CL8             PROFILE DATA I/O AREA
WORK_DATA        DS    CL72

WORK_FLAGS       DS    X
$FLAG_INIT       EQU   X'80'

                 DAIRREQ DSECT=NO
                 LANGREQ DSECT=NO
OSPROF_WORK_L    EQU  *-OSPROF_WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IBMMAC DCBD=PS,                                               +
               JFCB=YES,                                               +
               PSA=YES,                                                +
               TCB=YES,                                                +
               TIOT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         PROFREQ  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      OSPROF
