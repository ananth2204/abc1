* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: OSSKEL                                                *
*                                                                     *
*  This can be used as a starting point for developing your           *
*  own 'format'.                                                      *
*                                                                     *
*  The data has already been stored in a 'data space'.  Records are   *
*  accessed using a relative record type scheme.  The first record    *
*  is record number 1, the second is record number 2, etc.  Data is   *
*  retreived using the DSPCREQ parameter block.  The data records     *
*  can be accessed in any order.  This you can retrieve record 6      *
*  then record 15, then record 2. The data can be updated             *
*  as the record length does not change.                              *
*                                                                     *
*  Why would you want to update the data since On Screen is           *
*  read-only?  Any reason you want... the PDS(/E) directory           *
*  displays update the directory entries of you rename or delete      *
*  a member.  If a member is deleted, On Screen "remembers" and       *
*  does not allow any other commands for that member.                 *
*                                                                     *
*  Add any new panels you want to the ISPPLIB.  Any new SPF "fields"  *
*  will need to be VDEFINEd.                                          *
*                                                                     *
*  For full explantions of VDEFINE or SPF dynamic areas please refer  *
*  to the IBM SPF manuals.                                            *
*                                                                     *
*  Most On Screen panels use an SPF dynamic area.  Because On Screen  *
*  uses panels with dynamic areas so frequently, I choose to use      *
*  the name "VDATA" for the SPF variable in in all the panels.        *
*                                                                     *
*  If you choose to use a dynamic area                                *
*   . Set COMM_VDATA_FUNC to $VDATA_GETMAIN and call OSVDATA          *
*     with the address of the panel name in R1.                       *
*     - OSVDATA will issue a PQUERY                                   *
*         SPF_VWIDTH will contain the number of columns               *
*         SPF_VDEPTH will contain the number of rows                  *
*     - OSVDATA will compute the size of the dynamic area             *
*         and GETMAIN storage.                                        *
*     - OSVDATA will return the address of the storage in R1          *
*         and the length in R0.                                       *
*                                                                     *
*   . you should save the returned address and length in your         *
*     own work area.                                                  *
*                                                                     *
*                                                                     *
*   . When you want to display the data                               *
*     set SESS_DISP_PANEL to the name of the panel                    *
*     set SESS_DISP_VDATA_ADDR to the address of the dynamic area     *
*       storage (returned in R1 by OSVDATA on $VDATA_GETMAIN call).   *
*     set SESS_DISP_VDATA_LENGTH to the length of the dynamic area    *
*       storage (returned in R0 by OSVDATA on $VDATA_GETMAIN call).   *
*     set SESS_DISP_CURSOR to where you want the cursor to be in      *
*       the dynamic area or zero.  A bit of explantion here.. the     *
*       cursor position is the byte's number relative to the          *
*       beginning of the area.  So, the first byte is binary 1,       *
*       the second byte is binary 2, etc.  To find the first byte     *
*       on the fourth line, multiply the width by 4 and add 1.        *
*       For the 22nd byte one line 7, multiply the width (SPF_VWIDTH) *
*       by 7 (the line number) add 22 (the column number) and add 1.  *
*                                                                     *
*                                                                     *
*   . during CLEANUP                                                  *
*     set COMM_VDATA_FUNC to $VDATA_FREEMAIN                          *
*     set R0 to the length of the area (the value you got in R0 on    *
*        $VDATA_GETMAIN call)                                         *
*     set R1 to the length of the area (the value you got in R1 on    *
*        $VDATA_GETMAIN call)                                         *
*     call OSVDATA to free the storage                                *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
OSSKEL CSECT
OSSKEL AMODE 31
OSSKEL RMODE ANY
         USING OSCOMM,R12
         USING OSSKEL,R15
         B     INIT0000
MODID    DC    CL8'OSSKEL'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(OSSKELEND-OSSKEL)
INIT0000 DS    0H
         USING SESSION,R11                      DEFINE COMMON AREA BASE
         USING DS1FMTID,SESS_DSCB               DEFINE BASE
         STM   R14,R12,12(R13)                  SAVE REGS
         LR    R10,R15                          COPY ENTRY POINT
         DROP  R15
         USING OSSKEL,R10                       DEFINE BASES
         L     R9,COMM_OSSPFD
         USING OSSPFD,R9
* ------------------------------------------------------------------- *
*        Determine if this is INITIAL invocation                      *
* ------------------------------------------------------------------- *
         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE
         BNE   INIT0010
* ------------------------------------------------------------------- *
*        Initialization                                               *
* ------------------------------------------------------------------- *
         OC    SESS_FORMATTER_DXD_ADDR,SESS_FORMATTER_DXD_ADDR
         BNZ   ERR0020
         LA    R0,OSSKEL_DXD_L
         ST    R0,SESS_FORMATTER_DXD_LENGTH
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,SESS_FORMATTER_DXD_ADDR
         LR    R2,R1
         LR    R0,R1
         LA    R1,OSSKEL_DXD_L
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14
         ST    R13,4(R2)                         SAVE R13
         ST    R2,8(R13)                         CHAIN SAVE AREA
         LR    R13,R2                            COPY WORK AREA ADDRESS
         USING OSSKEL_WORK,R13                   DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY1
         XC    DXD_RC,DXD_RC
         LA    R0,DATASPACE_1
         ST    R0,DSPCREQ_DATASPACE
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETREIVE
         MVC   DXD_PANEL,????????                <--- YOUR PANEL NAME
         LA    R1,DXD_PANEL                      PANEL NAME
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN    SET VDATA FUNCTION
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                           GETMAIN VDATA STORAGE
         ST    R0,DXD_VDATA_LENGTH               SAVE VDATA LENGTH
         ST    R1,DXD_VDATA_ADDR                 SAVE VDATA ADDR
         ITRACE ID=VDATA,                                              +
               RDATA1=R1,                                              +
               RDATA2=R0
         MVC   DXD_VDEPTH,SPF_VDEPTH             SAVE DEPTH
         MVC   DXD_VWIDTH,SPF_VWIDTH             SAVE WIDTH
         XC    DXD_CURSOR,DXD_CURSOR             INITIALIZE CURSOR
         B     EXIT0000
* ------------------------------------------------------------------- *
*        Re-establish save area and determine function                *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         ICM   R15,15,SESS_FORMATTER_DXD_ADDR
         BZ    ERR0020
         ST    R13,4(R15)
         ST    R15,8(R13)
         LR    R13,R15
         ITRACE ID=ENTRY2,                                             +
               DATA1=(SESS_FORMAT_FLAGS,1)
         XC    DXD_RC,DXD_RC
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL  PROCESS CONTROL STMT?
         BE    CNTL0000                           YES
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP  CLEAN UP?
         BE    CLEAN000                           YES
         B     MAIN0000                           OTHERWISE FORMAT
* ------------------------------------------------------------------- *
*                                                                     *
*        PROCESS CONTROL STATEMENTS                                   *
*                                                                     *
*        ADDRESS OF CONTROL STATEMENT IS IN                           *
*                                                                     *
* ------------------------------------------------------------------- *
CNTL0000 DS    0H
         ITRACE ID=CNTLSTMT,                                           +
               RDATA1=R1
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Format data                                                  *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         ITRACE ID=FORMAT
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
* ------------------------------------------------------------------- *
*         Initialize the VDATA buffer                                 *
* ------------------------------------------------------------------- *
         L     R0,DXD_VDATA_ADDR                BUFFER ADDRESS
         L     R1,DXD_VDATA_LENGTH              BUFFER SIZE
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                           INITIALIZE BUFFER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R8,DXD_VDATA_ADDR                BUFFER ADDRESS
         L     R7,DXD_VDEPTH                    NUMBER OF LINES
         L     R6,SESS_IO_AREA                  I/O AREA ADDRESS
         ST    R6,DSPCREQ_RECORD_ADDR
         ITRACE ID=BUILD,                                              +
               RDATA1=R7,                                              +
               RDATA2=R8
* ------------------------------------------------------------------- *
*        "Retrieve" the data and build the body of the SPF panel      *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=GET_RECD,                                           +
               DATA1=(DSPCREQ_RECORD_NBR,4),                           +
               DATA2=(DATASPACE_1_LAST_RECORD,4)
         LA    R1,DSPCREQ                       DATA SPACE PARMS
         L     R15,COMM_OSDSPACE
         BALR  R14,R15                          RETREIVE DATA
         ITRACE ID=GET_RC,                                             +
               DATA1=(DSPCREQ_RC,1)
         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED
         BE    MAIN0110                         NOT STORED
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0010
         ITRACE ID=RECORD,                                             +
               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +
               DATA2=(DSPCREQ_RECORD_LENGTH,4)


*
*
*      Build the data for the dynamic area here.
*
*      R12 is address of OSCOMM
*      R11 is address of SESSION
*      R10 is base of this CSECT
*      R9  is address of SPFDATA
*      R8  is address of current line in VDATA
*      R7  is number of lines remaining in vdata
*
*      Use the equates in $ATTRS to set attribute bytes
*      Line length is in DXD_VWIDTH
*
*







         BCT   R7,MAIN0100                      MINUS 1 LINE
         ITRACE ID=FULL
         B     MAIN0150
MAIN0100 DS    0H
         L     R1,DSPCREQ_RECORD_NBR            CURRENT RECORD NUMBER
         A     R1,F1                            ADD 1
         C     R1,DATASPACE_1_LAST_RECORD       AT END OF RECORDS?
         BH    MAIN0110                         YES
         ST    R1,DSPCREQ_RECORD_NBR            SAVE NEW RECORD NUMBER
         B     MAIN0010                         GET/PROCESS NEXT RECORD
* ------------------------------------------------------------------- *
*                                                                     *
*        End of data reached                                          *
*                                                                     *
*   End of data has been reached.  There is still available space     *
*   in the VDATA area.  You can build 'trailer' type info now.        *
*                                                                     *
*   R8 is the 1st byte of the current in the VDATA buffer.            *
*   R7 is the number of remaining lines                               *
*   DXD_VWIDTH is the length of each line                             *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0110 DS    0H
         ITRACE ID=END_DATA,                                           +
               RDATA1=R7,                       LINES REMAINING        +
               RDATA2=R8                        ADDRESS IN VDATA BUFFER
* ------------------------------------------------------------------- *
*         Build DSCB info                                             *
* ------------------------------------------------------------------- *
MAIN0150 DS    0H
         MVC   SPF_RECORD_FROM,DATASPACE_1_DISPLAY_FIRST_RECORD
         MVC   SPF_COLUMN_FROM,DATASPACE_1_DISPLAY_FIRST_COLUMN
         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR
         ITRACE ID=OSDSCB
         L     R15,COMM_V_OSDSCB                OSDSCB ENTRY POINT
         BALR  R14,R15                          FORMAT THE DSCB INFO
* ------------------------------------------------------------------- *
*                                                                     *
*        Display the panel                                            *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         ITRACE ID=DISPLAY,                                            +
               DATA1=DXD_PANEL,                                        +
               RDATA2=R15
         MVC   SESS_DISP_PANEL,DXD_PANEL
         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH
         MVC   SESS_DISP_CURSOR,DXD_CURSOR
         L     R15,COMM_V_OSDISP
         BALR  R14,R15
         ITRACE ID=DISP_RC,                                            +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         NI    SESS_SEARCH_FLAGS,255-$SESS_SEARCH_NOW
         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT WANTED?
         BNE   EXIT0000                         YES
         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?
         BNE   EXIT0000                         YES
         OC    SESS_RC,SESS_RC                  RC=0
         BZ    MAIN0300                         YES
         ITRACE ID=ENDING
         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Check for command(s)                                         *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
         CLC   SPF_ZCMD,???????????             ????? COMMAND
         BE    .........                        YES
* ------------------------------------------------------------------- *
*                                                                     *
*        No command has been recognized                               *
*        Check for scroll commands                                    *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0310 DS    0H
         MVC   SESS_VERTICAL_SCROLL,SPF_ZSCROLLN
         MVC   SESS_HORIZONTAL_SCROLL,SPF_ZSCROLLN
         ITRACE ID=ZVERB,                                              +
               DATA1=SPF_ZVERB,                                        +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZVERB,C'B'                   BOTTOM?
         BE    MAIN0390                         YES
         CLI   SPF_ZVERB,C'D'                   SCROLL DOWN?
         BE    MAIN0360                         YES
         CLI   SPF_ZVERB,C'L'                   SCROLL LEFT?
         BE    MAIN0410                         YES
         CLI   SPF_ZVERB,C'R'                   SCROLL RIGHT?
         BE    MAIN0440                         YES
         CLI   SPF_ZVERB,C'T'                   TOP?
         BE    MAIN0380                         YES
         CLI   SPF_ZVERB,C'U'                   SCROLL UP?
         BE    MAIN0330                         YES
         CLC   SPF_ZCMD,COMM_BLANKS             ALL BLANK?
         BE    MAIN0150                         YES

    IF YOU GET  HERE, THE COMMAND WAS NOT RECOGNIZED.
    YOU PROBABLY WANT TO PUT MESSAGES IN SPF_MSG_1 TO SPF_MSG_5

         B     MAIN0200                         DISPLAY AGAIN WITH MSG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0330 DS    0H
         ITRACE ID=UP
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                MAX?
         BE    MAIN0380                         YES
         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD                      D
         SR    R2,R1                            MINUS SCROLL AMOUNT
         ICM   R1,15,DATASPACE_1_FIRST_RECORD   ANY STARTING RECORD?
         BNZ   MAIN0340                         YES
         LA    R1,1                             DEFAULT TO 1
MAIN0340 DS    0H
         CR    R2,R1                            LESS THAN MININUM?
         BNL   MAIN0350                         NO
         LR    R2,R1                            DON'T SCROLL PAST 1ST
MAIN0350 DS    0H
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD SET 1ST TO DISPLAY
         B     MAIN0000                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*        SCROLL DOWN                                                  *
* ------------------------------------------------------------------- *
MAIN0360 DS    0H
         ITRACE ID=DOWN
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                MAX?
         BE    MAIN0390                         YES
         L     R1,SESS_VERTICAL_SCROLL          NUMBER TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD                      D
         AR    R2,R1                            PLUS RECORDS TO SCROLL
         C     R2,DATASPACE_1_LAST_RECORD
         BH    MAIN0370                         BEYOND END OF DATA
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD 1ST TO DISPLAY
         B     MAIN0000                         REBUILD EVERYTHING
MAIN0370 DS    0H
         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD STORED
         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD
         C     R2,DXD_VDEPTH                    MORE THAN SCREEN?
         BNH   MAIN0150                         NO.. STAY PUT
         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD STORED
         S     R2,DXD_VDEPTH                    MINUS 1 SCREEN
         A     R2,F2                            PLUS 2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD
         B     MAIN0000                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0380 DS    0H
         ITRACE ID=TOP
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD
         B     MAIN0000                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*        Don't use a "LA   R2,2(,R2)"  here to add 2                  *
*        because "LA" always turns off the high order                 *
*        bit(s) and therefore the sign bit.                           *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0390 DS    0H
         ITRACE ID=BOTTOM
         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD
         L     R2,DATASPACE_1_LAST_RECORD          HIGH RECORD STORED
         BCTR  R2,0
         S     R2,DXD_VDEPTH                       MINUS DEPTH
         A     R2,F2                               PLUS 2
         CH    R2,H1                               ONE OR MORE?
         BNL   MAIN0400                            YES
         LH    R2,H1                               FORCE RECORD 1
MAIN0400 DS    0H
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD
         B     MAIN0000                            REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*        SCROLL LEFT                                                  *
* ------------------------------------------------------------------- *
MAIN0410 DS    0H
         ITRACE ID=LEFT,                                               +
               DATA1=(SESS_HORIZONTAL_SCROLL,4)
         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                   MAX?
         BE    MAIN0420                            YES
         L     R1,SESS_HORIZONTAL_SCROLL           COLUMNS TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         SR    R2,R1                               MINUS SCROLL
         CH    R2,H1                               AT LEAST 1 LEFT?
         BNL   MAIN0430                            NO
MAIN0420 DS    0H
         LH    R2,H1                               STOP AT COLUMN 1
MAIN0430 DS    0H
         ITRACE ID=LEFT_1,                                             +
               RDATA1=R2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         B     MAIN0000                            REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*        SCROLL RIGHT                                                 *
* ------------------------------------------------------------------- *
MAIN0440 DS    0H
         ITRACE ID=RIGHT,                                              +
               DATA1=(DATASPACE_1_DISPLAY_FIRST_COLUMN,4)
         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                   MAX?
         BE    MAIN0470                            YES
         L     R1,SESS_HORIZONTAL_SCROLL           COLUMNS TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         AR    R2,R1                               PLUS SCROLL
         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS       HFS?
         BO    MAIN0460                            YES.. ALLOW ANYTHING
         OC    DS1LRECL,DS1LRECL                   LRECL = ZERO?
         BZ    MAIN0450                            YES..
         CH    R2,DS1LRECL                         over RECORD SIZE?
         BH    MAIN0000                            YES.. STAY PUT
         B     MAIN0460
MAIN0450 DS    0H
         CH    R2,DS1BLKL                          over BLOCK SIZE
         BH    MAIN0000                            YES.. STAY PUT
MAIN0460 DS    0H
         ITRACE ID=RIGHT_1,                                            +
               RDATA1=R2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         B     MAIN0000                            REBUILD EVERYTHING
MAIN0470 DS    0H
         LH    R2,DS1LRECL                         RECORD LENGTH
         S     R1,DXD_VWIDTH                       MINUS 1 SCREEN WIDTH
         A     R1,F1                               PLUS 1
         ITRACE ID=RIGHT_2,                                            +
               RDATA1=R2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         B     MAIN0000
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=DSPC_ERR
         MVC   SPF_MSG_1,COMM_MSG_1                COPY MESSAGES
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         LA    R1,DISPLAY
         ST    R1,DXD_SPF_PARM1
         LA    R1,OSERR
         ST    R1,DXD_SPF_PARM2
         OI    DXD_SPF_PARM2,X'80'
         LA    R1,DXD_SPF_PARMS
         L     R15,COMM_ISPLINK
         BALR  R14,R15                             DISPLAY MESSAGES
         MVC   SPF_MSG_1,COMM_BLANKS               RESET MESSAGES
         MVC   SPF_MSG_2,COMM_BLANKS
         MVC   SPF_MSG_3,COMM_BLANKS
         MVC   SPF_MSG_4,COMM_BLANKS
         MVC   SPF_MSG_5,COMM_BLANKS
         STH   R15,SESS_RC
         MVI   COMM_SESS_FUNC,$SESS_REMOVE         SIGNAL MAINLINE
         B     EXIT0000
ERR0020  DS    0H
         DC    H'0'                                SHOULD NOT HAPPEN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLEAN000 DS    0H
         ITRACE ID=CLEAN_UP,                                           +
               DATA1=(DXD_VDATA_ADDR,4),                               +
               DATA2=(DXD_VDATA_LENGTH,4)
         ICM   R1,15,DXD_VDATA_ADDR                VDATA GETMAINED?
         BZ    CLEAN010                            NO
         L     R0,DXD_VDATA_LENGTH                 VDATA LENGTH
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                             FREE VDATA
         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR
         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH
CLEAN010 DS    0H
         LA    R0,OSSKEL_DXD_L                     WORK AREA SIZE
         LR    R1,R13                              COPY ADDRESS
         L     R13,4(R13)                          RESTORE R13
         FREEMAIN RU,                              FREE WORK AREA      +
               A=(1),                                                  +
               LV=(0)
         XC    SESS_FORMATTER_DXD_ADDR,SESS_FORMATTER_DXD_ADDR
         XC    SESS_FORMATTER_DXD_LENGTH,SESS_FORMATTER_DXD_LENGTH
         SR    R15,R15
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LH    R15,DXD_RC                          RETURN CODE
         L     R13,4(R13)                          RESTORE R13
EXIT0010 DS    0H
         L     R14,12(,R13)                        RESTORE R14
         LM    R0,R12,20(R13)                      RESTORE REGISTERS
         BR    R14                                 RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
F1              DC    F'1'
F2              DC    F'2'
H1              DC    H'1'
DISPLAY         DC    CL8'DISPLAY'
OSERR           DC    CL8'OSERR'                   ERROR MESSAGE PANEL
                LTORG
OSSKELEND       EQU  *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OSSKEL_WORK         DSECT
                    COPY     DXDPREF

DXD_PANEL           DS       CL8            PANEL NAME
DXD_VDATA_ADDR      DS       A              VDATA BUFFER ADDRESS
DXD_VDATA_LENGTH    DS       F              VDATA BUFFER LENGTH
DXD_CURSOR          DS       F              CURSOR POSITION

DXD_VWIDTH          DS       F              DYNAMIC AREA WIDTH
DXD_VDEPTH          DS       F              DYNAMIC AREA DEPTH

DXD_SPF_PARMS       DS       0A
DXD_SPF_PARM1       DS       A
DXD_SPF_PARM2       DS       A

DXD_RC              DS       H

                    DSPCREQ  DSECT=NO
OSSKEL_DXD_L        EQU      *-OSSKEL_WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DUMMY    DSECT
         IBMMAC   VTOC=1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  OSSKEL
