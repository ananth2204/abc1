OS is a data viewing utility.  It is intended to allow you to view
data formatted in multiple ways.

OS dynamically allocates source (data set, HFS path, VTOC, etc).
If the data is in a sequential file or PDS(/E) member, OS reads the
data using BSAM.  If the user gives the name of a PDS(/E), OS obtains
the directory information using DESERV.  If the data set is VSAM,
OS determines the type (KSDS, ESDS, RRDS, etc) and accesses the data
with an ACB with OPTCD's needed for the specific type.  OS also
allows you to view VTOC's.

Unfortunetly as far as I have been able to tell, commands
from the READY prompt or SPF 6 are translated to upper
case before OS "sees" them.  So, to view unix type files, you
usually need to start OS with no DSN or path.  OS will then
prompt with an SPF panel that allows you to enter a path in a
field that does not get "uppercased".

In any case the data is stored a logical record at a time in a
data space.  There are multiple reasons for using a data space.
For one, once the data has been stored in the data space, it can
be viewed forward, backward, sorted, edited, etc.  Any part of the
data can be referenced at any time without having to do I/O to the
source data set.  Any I/O needed is done by system paging which is
less overhead than normal data set I/O.  Another reason is that
data can come from any source you want.  Once you've got the data,
the remainder of OS does not have to be concerned with the data's
source.  The data source does not have to be data sets.  One of
my long-term plans is to OS storage.  A trade-off is that OS
normally reads the entire data set or member before displaying
anything.  If you know ahead of time that you only need to view
a few records, you can use the START or RECORDS parameters to
limit the number of records and therefore I/O's.


As of now OS uses the system default data space size.  IBM's
default is 239 pages.  You can specify a different (and larger)
size when starting OS.  As part of processing a data set, OS
reads the format-1 label record.  My intent is to examine the
extents and compute the size of the data space.  One of those
'round to it's.


Once OS has read the data, it is displayed in a default format.
Sequential files, PDS(/E) members and VSAM data sets are displayed
in character.  PDS(/E) directories with the PDS's RECFM F or V are
displayed with SPF/PDF type data (TTR, version, size, etc).
Directories of PDS(/E)'s with RECFM U are assumed to be load libs
and are shown with TTR, AC, and amode/rmode.  If the user specified
a VTOC, the data is displayed with the data set name, DSORG, number
of extents (on this volume), and total number of tracks used.


Once the data has been read, it is displayed using the form based
on the source.  You can change the format at any time by entering
"FORMAT nnnnnnn" where nnnnnnnn is the name of a member in the
OSFORMATS library.  The supplied formats are:

    BROWSE       character form (browse only)
    DIR          non-loadlib directory
    DIRECTRY     same as DIR
    EDIT         character form (invokes the edit function)
    OSTRACE      formats OS external trace records
    OSTRACE1     formats OS external trace records using "user" format
    HEX          browse in hex (two bytes for each byte
    HFS          regular file from an HFS
    HFSDIR       hfs directory
    LDIR         PDS(/E) "loadlib" directory
    RVTOC        VTOC in "raw" form
    SMF          Displays many of the SMF record types customized
                    for each sub type.
    VHEX         displays data in vertical hex.  Three rows per
                 logical record.  The 1st line is the character,
                 2nd line is the zone nibble and the 3rd line the
                 numeric nibble for each byte.
    VTOC         "standard" VTOC display.  Shows DSN, DSORG, number
                    of extents on this volume, and total tracks.

