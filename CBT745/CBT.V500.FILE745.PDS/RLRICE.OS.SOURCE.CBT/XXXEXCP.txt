* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: OSEXCP                                                *
*                                                                     *
*  Read sequential files or PDS members.                              *
*                                                                     *
*  The data set is already allocated.                                 *
*  The DD name is in SESS_DD.                                         *
*                                                                     *
* ------------------------------------------------------------------- *
OSEXCP   CSECT
OSEXCP   AMODE 31
OSEXCP   RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING OSEXCP,R15
         USING DS1FMTID,SESS_DSCB
         B     INIT0000
MODID    DC    CL8'OSEXCP'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(EXCPEND-OSEXCP)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                  SAVE REGS
         LR    R10,R15                          COPY ENTRY POINT
         DROP  R15
         USING OSEXCP,R10
         GETMAIN RU,                                                   +
               LV=OSEXCP_WORK_L,                                       +
               LOC=BELOW
         ST    R13,4(R1)                        SAVE R13
         ST    R1,8(R13)                        CHAIN SAVE AREA
         LR    R13,R1                           COPY WORK AREA ADDRESS
         USING OSEXCP_WORK,R13                  DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         MVC   WORK_RETRY,SESS_RETRY            SAVE RETRY ADDRESS
         LA    R1,RTRY0000                      OUR RETRY ADDRESS
         ST    R1,SESS_RETRY                    PUT IT INTO EFFECT
         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR
         XC    WORK_IO_1(IO_CONTROL_L),WORK_IO_1
         XC    WORK_IO_2(IO_CONTROL_L),WORK_IO_2
         XC    WORK_DATA_RECORD_NBR,WORK_DATA_RECORD_NBR
         XC    WORK_COUNT_RECORD_NBR,WORK_COUNT_RECORD_NBR
* ------------------------------------------------------------------- *
*        INITIALIZE IO CONTROL AREA(S)                                *
* ------------------------------------------------------------------- *
         LA    R9,WORK_IO_1
         USING IO_CONTROL,R9
         USING IOB,IO_IOB
         LA    R7,WORK_DCB                      DCB
         USING IHADCB,R7                        DEFINE BASE
         LA    R0,WORK_IO_2
         ST    R0,IO_NEXT
         LA    R9,WORK_IO_2
         LA    R0,WORK_IO_1
         ST    R0,IO_NEXT
         LA    R9,WORK_IO_1
         LA    R8,2                             NBR OF CONTROL AREAS
INIT000A DS    0H
         LA    R0,WORK_DCB
         STCM  R0,7,IOBDCBPB                    DCB ADDRESS
         LA    R0,IO_ECB
         STCM  R0,7,IOBECBPB                    ECB ADDRESS
         XC    IOBSTART,IOBSTART                NO I/O STARTED
         MVI   IOBFLAG1,X'02'                   SET IOB FLAG
         MVC   IO_CCW1(DASD_CCW_L),DASD_CCW1    INITIALIZE CCWS
         LA    R0,IOBCC                         DISK ADDRESS
         STCM  R0,7,IO_CCW1+1                   SET ADDRESS
         LA    R0,IO_CCW1
         STCM  R0,7,IO_CCW2+1
         LA    R0,IO_IDAW                       IDAW ADDRESS
         STCM  R0,7,IO_CCW3+1                   SET ADDRESS
         L     R1,CVTPTR
         USING CVT,R1
         L     R1,CVTZDTAB                      DEVICE INFO TABLE
         L     R2,SESS_UCB
         USING UCBOB,R2
         SR    R14,R14
         IC    R14,UCBTBYT4                     DEVICE INFO BYTE 4
         N     R14,=A(DVCTYPMK)                 ONLY LAST 4 BITS
         IC    R14,0(R14,R1)                    INDEX VALUE
         AR    R14,R1                           DEVICE INFO
         MVC   WORK_DVCT(DVCT_L),0(R14)         COPY DEVICE INFO
         ITRACE ID=WORK_DVCT,                                          +
               DATA1=WORK_DVCT+0,                                      +
               DATA2=WORK_DVCT+8
         USING DVCT,WORK_DVCT
         GETMAIN RU,                                                   +
               LV=$BUFFSIZE,                                           +
               LOC=ANY
         ITRACE ID=IO_BUFF,                                            +
               RDATA1=R9,                                              +
               RDATA2=R1
         ST    R1,IO_IDAW
         LA    R14,IO_IDAW
         LA    R9,IO_CONTROL_L(,R9)             NEXT I/O CONTROL AREA
         BCT   R8,INIT000A
         LA    R9,WORK_IO_1
         TM    SESS_EDIT_FLAGS,$SESS_EDIT       EDIT SESSION?
         BO    INIT0020                         YES
         MVC   SESS_DEFAULT_FORMAT,BROWSE
         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT
         BO    INIT0010
         MVC   SESS_FORMAT,BROWSE
INIT0010 DS    0H
         XC    WORK_LENGTH,WORK_LENGTH
         B     INIT0030
INIT0020 DS    0H
         ITRACE ID=EDIT
         MVC   SESS_DEFAULT_FORMAT,EDIT
         MVC   SESS_FORMAT,EDIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0030 DS    0H
*        TM    SESS_EDIT_FLAGS,$SESS_EDIT_EMPTY EMPTY FILE OR MEMBER?
*        BO    MAIN0300
         MVC   WORK_DCB(DASD_DCB_L),DASD_DCB    INITIALIZE DCB
         ITRACE ID=OPEN,                                               +
               RDATA1=R7
         MVC   WORK_OPEN(OPEN_L),OPEN_I
         MVC   DCBDDNAM,SESS_DD                 SET DD NAME IN DCB
         OPEN  ((R7),INPUT),                                           +
               MODE=31,                                                +
               MF=(E,WORK_OPEN)
         TM    DCBOFLGS,DCBOFOPN                SUCCESFUL?
         BNO   ERR0010                          NO
         OI    SESS_DCB_FLAGS,$SESS_DCB_OPEN    INDICATE DCB IS OPEN
         SR    R1,R1
         ICM   R1,7,DCBDEBA
         USING DEBBASIC,R1                      DEFINE BASE
         LA    R6,DEBBASND                      DASD EXTENSION
         USING DEBDASD,R6                       1ST EXTENT
         ITRACE ID=DEBDASD,                                            +
               RDATA1=R6
         MVC   WORK_CCHHR(5),DEBSTRCC           COPY STARTING CCHH
         MVI   WORK_R,0                         FORCE RECORD NBR TO 0
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         ITRACE ID=MAIN0000
         OC    IOBSTART,IOBSTART                I/O STARTED?
         BNZ   MAIN000A                         YES
         LA    R0,IO_CCW1                       1ST CCW
         ST    R0,IOBSTART                      SET CCW ADDR
         MVC   IOBCC(5),WORK_CCHHR              COPY DISK ADDR
         XC    IO_ECB,IO_ECB                    CLEAR ECB
         LA    R2,IOBSTDRD                      IOB
         ITRACE ID=EXCP1,                                              +
               RDATA1=R2,                                              +
               DATA2=IOBCC
         EXCP  (R2)                             INITIATE I/O
MAIN000A DS    0H
         ITRACE ID=WAITING,                                            +
               RDATA1=R9,                                              +
               DATA2=IOBSEEK
         WAIT  ECB=IO_ECB                       WAIT FOR I/O
         ITRACE ID=WAITDONE,                                           +
               DATA1=IO_ECB
         L     R5,IO_IDAW                       I/O AREA ADDRESS
         USING COUNT,R5
         SR    R4,R4
         ICM   R4,3,IO_CCW3+6                   LENGTH ATTEMPTED
         SR    R0,R0
         ICM   R0,3,IOBSTDRD+14
         SR    R4,R0                            MINUS RESIDUAL LENGTH
         L     R9,IO_NEXT                       SWITCH IO CONTROL
*        CLC   WORK_CCHHR,DEBENDCC              AT END OF EXTENT?
*        BH    EOF0020                          YES
         SR    R0,R0                            CLEAR REGISTER
         SR    R1,R1
         IC    R0,COUNT_KEY_LENGTH              KEY LENGTH
         ICM   R1,3,COUNT_DATA_LENGTH           DATA LENGTH
         AR    R0,R1                            SUM OF BOTH
         BZ    EOF0010                          ZERO.. EOF
         ITRACE ID=UPDTADDR,                                           +
               DATA1=(WORK_HH,5)
         SR    R1,R1
         ICM   R1,3,WORK_HH                     CURRENT HEAD NBR
         LA    R1,1(,R1)                        PLUS 1
         CH    R1,DVCTRK                        AT END OF CYLINDER?
         BE    MAIN000B                         YES
         STCM  R1,3,WORK_HH                     UPDATE HEAD NBR
         B     MAIN000C
MAIN000B DS    0H
         ICM   R1,3,WORK_CC                     CYLINDER NBR
         LA    R1,1(,R1)                        PLUS 1
         STCM  R1,3,WORK_CC                     UPDATE CYLINDER NBR
         XC    WORK_HH,WORK_HH                  RESET HEAD NBR
MAIN000C DS    0H
         LA    R0,IO_CCW1
         ST    R0,IOBSTART
         MVC   IOBCC(5),WORK_CCHHR              COPY DISK ADDR
         XC    IO_ECB,IO_ECB                    CLEAR THE ECB
         LA    R2,IOBSTDRD
         ITRACE ID=EXCP2,                                              +
               RDATA1=R2,                                              +
               DATA2=IOBCC
         EXCP  (R2)
* ------------------------------------------------------------------- *
*        Process data from track just read                            *
* ------------------------------------------------------------------- *
         ITRACE ID=TRACK,                                              +
               RDATA1=R5,                                              +
               RDATA2=R4
         ST    R4,WORK_IN_TRACK_LENGTH          SAVE DATA LENGTH
         ST    R5,WORK_IN_TRACK_ADDR            SAVE DATA ADDRESS
MAIN000D DS    0H
         SR    R14,R14
         SR    R15,R15
         IC    R14,COUNT_KEY_LENGTH             KEY LENGTH
         ICM   R15,3,COUNT_DATA_LENGTH          DATA LENGTH
         LA    R4,COUNT_L(R14,R15)              TOTAL LENGTH
         ITRACE ID=BLOCK,                                              +
               RDATA1=R5,                                              +
               RDATA2=R4
         XC    WORK_SEQ,WORK_SEQ                RESET KEY RECORD NBR
         NI    WORK_FLAGS,255-$WORK_FLAGS_KEY
         SR    R1,R1
         ICM   R1,1,COUNT_KEY_LENGTH            KEY LENGTH
         BZ    MAIN000E                         NO PHYSICAL KEY
         OI    WORK_FLAGS,$WORK_FLAGS_KEY       SET INDICATOR
MAIN000E DS    0H
         LA    R1,COUNT_L(,R1)                  PLUS LENGTH OF COUNT
         ST    R1,DSPCREQ_RECORD_LENGTH
         L     R1,WORK_COUNT_RECORD_NBR         RECORD NUMBER
         LA    R1,1(,R1)                        PLUS 1
         ST    R1,WORK_COUNT_RECORD_NBR         UPDATE RECORD NBR
         ST    R1,DSPCREQ_RECORD_NBR
         ST    R5,DSPCREQ_RECORD_ADDR
         LA    R1,DATASPACE_2                   USE DATA SPACE 2
         ST    R1,DSPCREQ_DATASPACE
         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE
         ITRACE ID=STOREKEY,                                           +
               DATA1=0(R5),                                            +
               DATA2=DSPCREQ_RECORD_LENGTH
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE                SPACE MANAGER
         BALR  R14,R15                          STORE THE KEY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         A     R5,DSPCREQ_RECORD_LENGTH         UPDATE BUFFER ADDRESS
         S     R4,DSPCREQ_RECORD_LENGTH         UPDATE LENGTH LEFT
         BNH   EOF0010
         TM    DS1RECFM,DS1RECFU                RECFM U?
         BO    MAIN0110                         YES
         TM    DS1RECFM,DS1RECFB                BLOCKED RECORDS?
         BNO   MAIN0110                         NO
         TM    DS1RECFM,DS1RECFV                RECFM V?
         BO    MAIN0050                         YES
* ------------------------------------------------------------------- *
*        Fixed blocked records                                        *
* ------------------------------------------------------------------- *
MAIN0020 DS    0H
         ITRACE ID=FIXED,                                              +
               RDATA1=R5,                                              +
               RDATA2=R4
         ST    R4,DSPCREQ_RECORD_LENGTH         RECORD ADDRESS
         ST    R5,DSPCREQ_RECORD_ADDR           RECORD ADDRESS
         BAL   R8,MAIN0200
MAIN0040 DS    0H
         AH    R5,DS1LRECL                      PLUS RECORD SIZE
         SH    R4,DS1LRECL                      MINUS RECORD SIZE
         BH    MAIN0020
         B     MAIN0150                         LOOP
* ------------------------------------------------------------------- *
*        Variable length, blocked records                             *
* ------------------------------------------------------------------- *
MAIN0050 DS    0H
         SH    R4,H4                            MINUS LENGTH OF BDW
         BZ    MAIN0150                         NO
         LA    R5,4(,R5)                        SKIP BDW
MAIN0060 DS    0H
         ITRACE ID=VAR,                                                +
               RDATA1=R5,                                              +
               RDATA2=R4
         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD              ?
         BL    MAIN0090                         NO
         LA    R1,4(,R5)                        DATA ADDRESS
         ST    R1,DSPCREQ_RECORD_ADDR           SET ADDRESS
         SR    R1,R1
         ICM   R1,3,0(R5)                       RECORD LENGTH
         SH    R1,H4
         ST    R1,DSPCREQ_RECORD_LENGTH         SET LENGTH
         ITRACE ID=VAR_RECD,                                           +
               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +
               DATA2=(DSPCREQ_RECORD_LENGTH,4)
         BAL   R8,MAIN0200                      STORE RECORD
MAIN0090 DS    0H
         ITRACE ID=VARX,                                               +
               RDATA1=R5,                                              +
               RDATA2=R4
         L     R1,DSPCREQ_RECORD_LENGTH
         LA    R1,4(,R1)                        RESTORE LENGTH
         AR    R5,R1                            NEXT LOGICAL RECORD
         SR    R4,R1                            MINUS RECORD SIZE
         BH    MAIN0060                         PROCESS NEXT RECORD
         B     MAIN0150                         NEXT PHYSICAL BLOCK
* ------------------------------------------------------------------- *
*        Unblocked or undefined records                               *
* ------------------------------------------------------------------- *
MAIN0110 DS    0H
         ITRACE ID=UNBLOCKD,                                           +
               RDATA1=R5,                                              +
               RDATA2=R4
         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD              ?
         BL    MAIN0150                         NO
         TM    DS1RECFM,DS1RECFU                UNDEFINED?
         BO    MAIN0120                         YES
         TM    DS1RECFM,DS1RECFF                FIXED LENGTH?
         BO    MAIN0120                         YES
         LA    R1,4(,R5)                        DATA ADDRESS
         ST    R1,DSPCREQ_RECORD_LENGTH
         SR    R1,R1
         ICM   R1,3,0(R5)                       LENGTH
         SH    R1,H4                            MINUS LLBB LENGTH
         ST    R1,DSPCREQ_RECORD_LENGTH
         B     MAIN0130
MAIN0120 DS    0H
         ST    R5,DSPCREQ_RECORD_ADDR           DATA ADDRESS
         ST    R4,DSPCREQ_RECORD_LENGTH         DATA LENGTH
MAIN0130 DS    0H
         BAL   R8,MAIN0200                      STORE RECORD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0150 DS    0H
         L     R4,WORK_IN_TRACK_LENGTH
         L     R5,WORK_IN_TRACK_ADDR
         SR    R14,R14
         SR    R15,R15
         IC    R14,COUNT_KEY_LENGTH
         ICM   R15,3,COUNT_DATA_LENGTH
         LA    R1,COUNT_L(R14,R15)
         AR    R5,R1
         SR    R4,R1
         BNH   MAIN0000
         ITRACE ID=NXTINTRK,                                           +
               RDATA1=R5,                                              +
               RDATA2=R4
         ST    R4,WORK_IN_TRACK_LENGTH
         ST    R5,WORK_IN_TRACK_ADDR
         B     MAIN000D
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0200 DS    0H
         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_FIRST_RECORD               RECORD?
         BLR   R8                               NO
         L     R1,WORK_DATA_RECORD_NBR          RECORD NBR
         LA    R1,1(,R1)                        PLUS 1
         ST    R1,WORK_DATA_RECORD_NBR          UPDATE NBR
         ST    R1,DSPCREQ_RECORD_NBR            SET RECORD NBR
         MVC   DSPCREQ_COUNT_REC_NBR,WORK_COUNT_RECORD_NBR
         L     R1,WORK_SEQ                      RECORD IN BLOCK
         LA    R1,1(,R1)                        PLUS 1
         ST    R1,WORK_SEQ                      UPDATE
         ST    R1,DSPCREQ_SEQ                   SET RECORD IN BLOCK
         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE
         LA    R1,DATASPACE_1                   USE DATA SPACE 1
         ST    R1,DSPCREQ_DATASPACE
         LA    R1,DSPCREQ                       DATA SPACE PARMS
         L     R15,COMM_OSDSPACE                DATA SPACE MANAGER
         BALR  R14,R15                          LINK TO OSDSPACE
         CLI   DSPCREQ_RC,$DSPCREQ_FULL         DATA SPACE FULL?
         BE    EOF0000                          YES
         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?
         BNE   EXIT0000                         NO
         OC    SESS_NUMBER,SESS_NUMBER          SPECIFIC NBR TO READ?
         BZR   R8                               NO
         CLC   DATASPACE_1_LAST_RECORD,SESS_NUMBER                      T?
         BNL   EOF0010                          YES.. STOP READING
         BR    R8
* ------------------------------------------------------------------- *
*        Empty file or PDS member                                     *
* ------------------------------------------------------------------- *
MAIN0300 DS    0H
         ITRACE ID=EMPTY
         MVC   COMM_MSG_1(MSG_03_L),MSG_03
         B     EXIT0000
* ------------------------------------------------------------------- *
*        EOF                                                          *
* ------------------------------------------------------------------- *
EOF0000  DS    0H
         ITRACE ID=FULL,                                               +
               DATA1=(DATASPACE_1_LAST_RECORD,4) .. LOGICAL RECORD NBR
         B     EOF0030
EOF0010  DS    0H
         ITRACE ID=LOGICEOF,                                           +
               DATA1=(DATASPACE_1_LAST_RECORD,4) .. LOGICAL RECORD NBR
         B     EOF0030
EOF0020  DS    0H
         ITRACE ID=REAL_EOF
EOF0030  DS    0H
         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I
         L     R1,DSPCREQ_RECORD_NBR
         CVD   R1,COMM_DWORD
         MVC   COMM_MSG_2,COMM_BLANKS
         MVC   COMM_MSG_2(MSG_01_L),MSG_01
         ED    COMM_MSG_2+(MSG_01_RECORDS-MSG_01)(L'MSG_01_RECORDS),COM+
               M_DWORD+3
         B     EXIT0000              EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RTRY0000 DS    0H
         ITRACE ID=ABEND,                                              +
               DATA1=(SESS_SYSTEM_CODE,6)
         CLC   SESS_SYSTEM_CODE,X_0013
         BNE   RTRY0010
         CLC   SESS_ABEND_R15,X_0018
         BNE   RTRY0010
         ITRACE ID=NO_MEM,                                             +
               DATA1=SESS_MEMBER
         OI    SESS_STATUS,$STATUS_NO_MEMBER
         NI    SESS_ABEND_FLAG,255-$ABENDED
         MVC   COMM_MSG_LINES,H1
         MVC   COMM_MSG_1(MSG_02_L),MSG_02
         MVC   COMM_MSG_1+(MSG_02_MEMBER-MSG_02)(8),SESS_MEMBER
         B     EXIT0000
RTRY0010 DS    0H
         ITRACE ID=CALLABND
         L     R15,COMM_V_OSABEND
         BALR  R14,R15
         OI    SESS_STATUS,$STATUS_NO_DATA
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         DC    H'1',C'OPEN failed'
ERR0020  DS    0H
         DC    H'2',C'Block size is zero after OPEN'
ERR0040  DS    0H
         DC    H'4'
         DC    C'Length left in VB record went negative'
ERR0050  DS    0H
         DC    H'5'
         DC    C'Length left in FB block went negative'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         TM    SESS_DCB_FLAGS,$SESS_DCB_OPEN
         BNO   EXIT0010
         ITRACE ID=CLOSE,                                              +
               RDATA1=R7
         CLOSE ((R7)),                                                 +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         FREEPOOL (R7)
         XC    SESS_DCB,SESS_DCB
         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH
         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN
EXIT0010 DS    0H
         MVC   SESS_RETRY,WORK_RETRY RESET ABEND RETRY ADDRESS
         LR    R1,R13                COPY WORK AREA ADDRESS
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=OSEXCP_WORK_L
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         SR    R15,R15               SET RC
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DASD_DCB DCB   DSORG=PS,                                               +
               DDNAME=ANYDD,                                           +
               DEVD=DA,                                                +
               MACRF=EXCP
DASD_DCB_L EQU *-DASD_DCB
OPEN_I   OPEN  (*,INPUT),                                              +
               MODE=31,                                                +
               MF=L
OPEN_L         EQU   *-OPEN_I
CLOSE_I  CLOSE (*),                                                    +
               MODE=31,                                                +
               MF=L
CLOSE_L        EQU   *-CLOSE_I

DASD_CCW1      CCW   $CCW_SEARCH,*,$CCW_CC,5
DASD_CCW2      CCW   $CCW_TIC,*,0,8
DASD_CCW3      CCW   $CCW_READ_MULTIPLE_CKD,*,$CCW_SILI+$CCW_IDAW,65535
DASD_CCW_L     EQU   *-DASD_CCW1

F1             DC    F'1'

H1             DC    H'1'
H4             DC    H'4'
H5             DC    H'5'

X_0013         DC    X'0013'
X_0018         DC    X'0018'

BROWSE         DC    CL8'BROWSE'
EDIT           DC    CL8'EDIT  '

MSG_01         DS    0C
MSG_01_RECORDS DC    X'402020206B2020206B202120'
               DC    C' records'
MSG_01_L       EQU   *-MSG_01

MSG_02         DC    0C
               DC    C'Member '
MSG_02_MEMBER  DC    CL8' '
               DC    C' not found'
MSG_02_L       EQU   *-MSG_02

MSG_03         DC    0C
               DC    C'Data set or member has no records'
MSG_03_L       EQU   *-MSG_03

               LTORG

EXCPEND        EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OSEXCP_WORK           DSECT
                      COPY  DXDPREF
WORK_OPEN             DS    0F,(OPEN_L)X
WORK_CLOSE            DS    0F,(CLOSE_L)X
WORK_DCB              DS    0F,(DASD_DCB_L)X

WORK_IO_1             DS    0D,(IO_CONTROL_L)X
WORK_IO_2             DS    0D,(IO_CONTROL_L)X

WORK_RETRY            DS    A                  SAVED RETRY ADDRESS

WORK_IN_TRACK_ADDR    DS    A
WORK_IN_TRACK_LENGTH  DS    F

WORK_LENGTH           DS    F
WORK_COUNT_LENGTH     DS    F

WORK_DATA_RECORD_NBR  DS    F                  DATA RECORDS STORED
WORK_COUNT_RECORD_NBR DS    F                  COUNT/KEY RECORDS STORED
WORK_SEQ              DS    F                  LOGICAL RECORD IN BLOCK

WORK_CCHHR            DS    0H                 DISK ADDRESS
WORK_CC               DS    H                  .. CYLINDER NUMBER
WORK_HH               DS    H                  .. HEAD NUMBER
WORK_R                DS    X                  .. RECORD NBR
WORK_DVCT             DS    0F,(DVCT_L)X

WORK_FLAGS            DS    X
$WORK_FLAGS_KEY       EQU   X'80'              RECORD HAS PHY KEY

                      DSPCREQ DSECT=NO

OSEXCP_WORK_L         EQU   *-OSEXCP_WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
IO_CONTROL       DSECT
IO_NEXT          DS       F
IO_ECB           DS       F
IO_IOB           DS       0F,(IEZIOB_L)X
IO_IDAW          DS       (($BUFFSIZE/2048)+1)A
IO_CCW1          DS       0D,XL8
IO_CCW2          DS       0D,XL8
IO_CCW3          DS       0D,XL8
IO_CONTROL_L     EQU      *-IO_CONTROL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
COUNT             DSECT
COUNT_CC          DS      XL2
COUNT_HH          DS      XL2
COUNT_R           DS      X
COUNT_KEY_LENGTH  DS      X
COUNT_DATA_LENGTH DS      XL2
COUNT_L           EQU     *-COUNT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     SINDEX
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 IBMMAC   CVT=YES
                 IBMMAC   DCBD=PS
                 IHADVCT
DVCT_L           EQU      *-DVCT
                 IBMMAC   DEB=YES
                 IBMMAC   IOB=YES
IEZIOB_L         EQU      *-IOB
                 IBMMAC   UCB=YES
FORMAT_1         DSECT
                 IBMMAC   VTOC=1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COPY     TRENTRY
* ------------------------------------------------------------------- *
*                EQUATES                                              *
* ------------------------------------------------------------------- *
                 COPY     CCW
                 COPY     REGEQU
$BUFFSIZE        EQU      65535
                 END      OSEXCP
