* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: OSRDVTOC                                              *
*                                                                     *
*  Read VTOCs                                                         *
*                                                                     *
* ------------------------------------------------------------------- *
OSRDVTOC CSECT
OSRDVTOC AMODE 31
OSRDVTOC RMODE 24
         USING OSCOMM,R12
         USING SESSION,R11
         USING OSRDVTOC,R15
         B     INIT0000
MODID    DC    CL8'OSRDVTOC'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(VTOCEND-OSRDVTOC)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         DROP  R15
         USING OSRDVTOC,R10                   DEFINE BASE
         GETMAIN RU,                                                   +
               LV=OSRDVTOC_WORK_L,                                     +
               LOC=BELOW
         ST    R13,4(R1)                      SAVE R13
         ST    R1,8(R13)                      CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING OSRDVTOC_WORK,R13              DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         LA    R1,WORK_DATASPACE_RECORD_L     RECORD LENGTH
         ST    R1,DSPCREQ_RECORD_LENGTH       SET RECORD LENGTH
         MVC   DATASPACE_1_FIRST_RECORD,F1    INITIALIZE RECORD NBR
         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR
         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE    SET FUNCTION CODE
         LA    R0,DCB_L
         ST    R0,SESS_DCB_LENGTH
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=BELOW
         LR    R8,R1
         ST    R8,SESS_DCB_ADDR
         MVC   0(DCB_L,R8),DCB_I              INITIALIZE THE DCB
         MVC   WORK_OPEN(OPEN_L),OPEN_I       INITIALIZE OPEN
         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I    INITIALIZE CLOSE
         MVC   WORK_EXLST(EXLST_L),EXLST_I    INITIALIZE EXIT LIST
         MVC   WORK_CCW_1(CCW_L),CCW_I        INITIALIZE CCW STRING
         XC    WORK_RECORDS_READ,WORK_RECORDS_READ
         XC    WORK_FORMAT_3S,WORK_FORMAT_3S  INITIALIZE COUNTER
         XC    WORK_FORMAT_4S,WORK_FORMAT_4S  INITIALIZE COUNTER
         XC    WORK_FORMAT_5S,WORK_FORMAT_5S  INITIALIZE COUNTER
         USING IHADCB,R8                      DEFINE BASE
         LA    R1,WORK_IOB
         ST    R1,DCBIOBAD                    SET IOB ADDRESS
         USING IOB,WORK_IOB
         STCM  R8,7,IOBDCBPB                  SET DCB ADDRESS IN IOB
         LA    R1,WORK_ECB                    I/O ECB ADDRESS
         STCM  R1,7,IOBECBPB                  SET ECB ADDRESS
         MVI   IOBFLAG1,X'02'                 SET FLAG BYTE 1
         LA    R1,WORK_EXLST                  EXIT LIST
         STCM  R1,7,DCBEXLSA                  RELOCATE EXIT LIST
         LA    R1,WORK_JFCB                   JFCB
         STCM  R1,7,WORK_EXLST+1              RELOCATE JFCB
         LA    R1,WORK_CCW_1                  SEARCH CCW ADDRESS
         STCM  R1,7,WORK_CCW_2+1              RELOCATE ADDRESS IN TIC
         LA    R1,WORK_IO_AREA                I/O AREA ADDRESS
         STCM  R1,7,WORK_CCW_3+1              RELOCATE I/O AREA IN READ
         LA    R1,DATASPACE_1                 USE DATA SPACE 1
         ST    R1,DSPCREQ_DATASPACE
         LA    R1,WORK_DATASPACE_RECORD       DATASPACE RECORD
         ST    R1,DSPCREQ_RECORD_ADDR         SET RECORD ADDRESS
         TM    SESS_KEYWORD_FLAGS_2,$KEYWORD_RAWVTOC
         BO    INIT0010
         ITRACE ID=VTOC
         MVC   SESS_DEFAULT_FORMAT,VTOC
         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT
         BO    INIT0020
         MVC   SESS_FORMAT,VTOC
         B     INIT0020
INIT0010 DS    0H
         ITRACE ID=RAWVTOC
         MVC   SESS_DEFAULT_FORMAT,RVTOC
         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT
         BO    INIT0020
         MVC   SESS_FORMAT,RVTOC
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0020 DS    0H
         ITRACE ID=ALLOC
         MVC   DAIR_VOLSER,SESS_VOLSER        SET VOLSER
         MVI   DAIR_DISP,$DAIR_DISP_SHR       SET DISP
         MVI   DAIR_FUNC,$DAIR_ALLOC          SET FUNCTION
         MVI   DAIR_OPTS,$DAIR_VOLUME         SET OPTION
         LA    R1,DAIRREQ                     DAIR PARMS
         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT
         BALR  R14,R15                        ALLOCATE THE VOLUME
         ITRACE ID=ALLOC_RC,                                           +
               RDATA1=R15
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0010                        NO
         MVC   DCBDDNAM,DAIR_DD               SET DDNAME
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LA    R1,WORK_JFCB
         ITRACE ID=RDJFCB,                                             +
               RDATA1=R8,                                              +
               RDATA2=R1
         RDJFCB ((R8)),                                                +
               MF=(E,WORK_OPEN)               READ THE JFCB
         ITRACE ID=RDJFCBRC,                                           +
               RDATA1=R15
         LTR   R15,R15
         BNZ   ERR0020
         MVI   JFCBDSNM,X'04'                 CHANGE DSN
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM
         OI    JFCBTSDM,JFCNWRIT              NO JFCB WRITE-BACK
         ITRACE ID=OPEN
         OPEN  ((R8),INPUT),                  OPEN THE VTOC            +
               MF=(E,WORK_OPEN),                                       +
               TYPE=J
         ITRACE ID=OPEN_RC,                                            +
               RDATA1=R15
         OI    SESS_DCB_FLAGS,$SESS_DCB_OPEN
         LA    R1,WORK_CCW_1
         ST    R1,IOBSTART                    ADDRESS OF 1ST CCW
         LA    R1,WORK_ECB                    ECB ADDRESS
         STCM  R1,7,IOBECBPB                  SET ADDRESS
         LA    R1,IOBCC                       DISK ADDRESS
         STCM  R1,7,WORK_CCW_1+1              RELOCATE ADDR IN SEARCH
         SR    R1,R1
         ICM   R1,7,DCBDEBA                   DEB ADDRESS
         USING DEBBASIC,R1                    DEFINE BASE
         LA    R1,DEBBASND                    END OF BASIC SECTION
         DROP  R1
         USING DEBDASD,R1                     DEFINE BASE
         MVC   WORK_DISK_ADDR,DEBSTRCC        COPY STARTING ADDRESS
         MVI   WORK_DISK_RECORD,0             FORCE RECORD 0
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=SCANTIOT
         USING PSA,R0                         DEFINE BASE
         L     R1,PSATNEW                     OUR TCB ADDRESS FROM PSA
         USING TCB,R1                         DEFINE TCB BASE
         L     R2,TCBTIO                      TIOT ADDRESS FROM OUR TCB
         USING TIOT1,R2                       DEFINE TIOT BASE
         LA    R3,TIOENTRY                    FIRST TIOT ENTRY
         USING TIOENTRY,R3                    DEFINE TIOT ENTRY BASE
INIT0030 DS    0H
         SR    R4,R4                          CLEAR FOR LENGTHS
         ICM   R4,1,TIOELNGH                  LENGTH OF THIS ENTRY
         BZ    ERR0050                        END OF TABLE
         CLC   TIOEDDNM,DAIR_DD               DD FOUND?
         BE    INIT0040                       YES
         AR    R3,R4                          NEXT ENTRY
         B     INIT0030                       LOOP
INIT0040 DS    0H
         SR    R1,R1
         ICM   R1,7,TIOEFSRT                  UCB'S ADDRESS
         ST    R1,SESS_UCB                    SET UCB ADDRESS
         USING UCBOB,R1                       DEFINE BASE
         MVC   SESS_UCBTYP,UCBTYP             COPY UCB DEVICE TYPE INFO
* ------------------------------------------------------------------- *
*        Read 1st track, save format-4 info                           *
* ------------------------------------------------------------------- *
         BAL   R9,EXCP0010
         CLI   WORK_ECB,X'7F'                 SUCCESSFUL?
         BNE   ERR0040                        NO
         ITRACE ID=FMT_4
         LA    R7,WORK_IO_AREA
         USING COUNT,R7
         MVC   SESS_DSCB,WORK_IO_AREA+52      COPY FORMAT-4 TO COMMON
         USING DS4IDFMT,SESS_DSCB             DEFINE BASE
         MVI   WORK_DSCB_TRACK+0,0
         MVC   WORK_DSCB_TRACK+1(0),DS4DEVDT  COPY DSCB'S PER TRACK
         MVC   SESS_TRACKS,DS4DSTRK           COPY TRACKS PER CYLINDER
         MVC   SESS_CYLINDERS,DS4DSCYL        COPY CYLINDERS
         MVC   WORK_VTOC_HIGH,DS4HPCHR        COPY HIGH EXENT INFO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         LA    R7,WORK_IO_AREA
         USING COUNT,R7
         LH    R6,WORK_DSCB_TRACK             DSCB'S PER TRACK
MAIN0010 DS    0H
         L     R1,WORK_RECORDS_READ           RECORDS READ
         A     R1,F1                          PLUS 1
         ST    R1,WORK_RECORDS_READ           SAVE TOTAL
         CLI   DS1FMTID,C'1'                  FORMAT-1?
         BE    MAIN0020
         CLI   DS1FMTID,C'3'                  FORMAT-3?
         BE    MAIN0030
         CLI   DS1FMTID,C'4'                  FORMAT-4?
         BE    MAIN0060
         CLI   DS1FMTID,C'5'                  FORMAT-5?
         BE    MAIN0040
         B     MAIN0080
MAIN0020 DS    0H
         L     R1,SESS_FORMAT1S               NBR OF FORMAT-1'S
         A     R1,F1                          PLUS 1
         ST    R1,SESS_FORMAT1S               UPDATE TOTAL
         MVI   WORK_DATASPACE_X,0
         MVC   WORK_DATASPACE_PREFIX,DS1DSNAM USE DSN FOR PREFIX
         B     MAIN0070
MAIN0030 DS    0H
         L     R1,WORK_FORMAT_3S              FORMAT-3S SO FAR
         LA    R1,1(,R1)                      PLUS 1
         ST    R1,WORK_FORMAT_3S              SAVE TOTAL
         B     MAIN0050
MAIN0040 DS    0H
         L     R1,WORK_FORMAT_5S              FORMAT-5S SO FAR
         LA    R1,1(,R1)                      PLUS 1
         ST    R1,WORK_FORMAT_5S              SAVE TOTAL
         B     MAIN0050
MAIN0050 DS    0H
         MVI   WORK_DATASPACE_X,1
         MVC   WORK_DATASPACE_PREFIX,COMM_BLANKS
         MVC   WORK_DATASPACE_PREFIX(PREFIX_L),PREFIX
         MVC   WORK_DATASPACE_PREFIX+(PREFIX_FORMAT-PREFIX)(1),DS1FMTID
         SR    R0,R0
         ICM   R0,3,COUNT_CYLINDER            CYLINDER NUMBER
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   WORK_EDIT(6),=X'F02020202020'  INITIALIZE EDIT WORD
         ED    WORK_EDIT(6),COMM_DWORD+5      EDIT CYLINDER NUMBER
         MVC   WORK_DATASPACE_PREFIX+(PREFIX_CYLINDER-PREFIX)(4),WORK_E+
               DIT+2
         ICM   R0,3,COUNT_HEAD                HEAD NUMBER
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   WORK_EDIT(6),=X'F02020202020'  INITIALIZE EDIT WORD
         ED    WORK_EDIT(6),COMM_DWORD+5      EDIT CYLINDER NUMBER
         MVC   WORK_DATASPACE_PREFIX+(PREFIX_HEAD-PREFIX)(4),WORK_EDIT++
               2
         SR    R0,R0
         IC    R0,COUNT_RECORD                RECORD NUMBER
         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL
         MVC   WORK_EDIT(4),=X'F0202020'      INITIALIZE EDIT WORD
         ED    WORK_EDIT(4),COMM_DWORD+6      EDIT RECORD NUMBER
         MVC   WORK_DATASPACE_PREFIX+(PREFIX_RECORD-PREFIX)(3),WORK_EDI+
               T+1
         B     MAIN0070
MAIN0060 DS    0H
         MVI   WORK_DATASPACE_X,1
         MVC   SESS_DSN,COMM_BLANKS
         MVC   SESS_DSN(15),=C'VTOC of volume '
         MVC   SESS_DSN+15(6),SESS_VOLSER
         MVC   WORK_DATASPACE_PREFIX,SESS_DSN
COMM     USING DS1FMTID,SESS_DSCB
         MVI   COMM.DS1RECFM,DS1RECFF         FAKE RECFM=F
         LA    R1,185                         LENGTH OF RECORDS
         STCM  R1,3,COMM.DS1LRECL             FAKE LRECL
         STCM  R1,3,COMM.DS1BLKL              FAKE BLOCK SIZE
MAIN0070 DS    0H
         L     R1,DSPCREQ_RECORD_NBR          RECORDS STORED
         A     R1,F1                          PLUS 1
         ST    R1,DSPCREQ_RECORD_NBR          SAVE TOTAL
         MVC   WORK_DATASPACE_DATA,DS1DSNAM   COPY DSCB
         MVC   DSPCREQ_CCHHR,COUNT_CYLINDER   COPY DISK ADDRESS
         ITRACE ID=STORE,                                              +
               DATA1=(DSPCREQ_RECORD_NBR,4),                           +
               DATA2=(DSPCREQ_CCHHR,5)
         LA    R1,DSPCREQ                     DSPCREQ ADDRESS
         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT
         BALR  R14,R15                        STORE THE RECORD
MAIN0080 DS    0H
         LA    R7,DS1END-COUNT(,R7)           NEXT DSCB
         BCT   R6,MAIN0010                    LOOP
* ------------------------------------------------------------------- *
*        Compute address of next track in VTOC                        *
* ------------------------------------------------------------------- *
         ITRACE ID=NEXT_TRK,                                           +
               DATA1=(WORK_VTOC_HIGH,5),                               +
               DATA2=(WORK_DISK_ADDR,5)
         CLC   WORK_DISK_ADDR,WORK_VTOC_HIGH  END OF VTOC?
         BNL   EXIT0000                       YES
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,WORK_DISK_HEAD            CURRENT HEAD NUMBER
         LA    R1,1(,R1)                      PLUS 1
         CH    R1,SESS_TRACKS                 AT MAX?
         BE    MAIN0090                       YES
         STCM  R1,3,WORK_DISK_HEAD            SET UPDATED HEAD
         MVI   WORK_DISK_RECORD,0
         B     MAIN0100                       READ NEXT DSCB
MAIN0090 DS    0H
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,WORK_DISK_CYL             CURRENT CYLINDER NUMBER
         LA    R1,1(,R1)                      PLUS 1
         STCM  R1,3,WORK_DISK_CYL             SET UPDATED CYLINDER
         XC    WORK_DISK_HEAD,WORK_DISK_HEAD  RESET HEAD NUMBER
         MVI   WORK_DISK_RECORD,0
MAIN0100 DS    0H
         MVI   IOBR,0                         FORCE RECORD NBR TO ZERO
         ITRACE ID=NEW_ADDR,                                           +
               DATA1=(WORK_DISK_ADDR,5)
         BAL   R9,EXCP0010                    READ NEXT TRACK
         B     MAIN0000                       PROCESS THE TRACK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXCP0000 DS    0H
         ITRACE ID=RETRY
         B     EXCP0020
EXCP0010 DS    0H
         ITRACE ID=EXCP,                                               +
               DATA1=(WORK_DISK_ADDR,5),                               +
               DATA2=(WORK_CCW_3+1,3)
         MVC   IOBCC(5),WORK_DISK_ADDR
EXCP0020 DS    0H
         XC    WORK_ECB,WORK_ECB              INITIALIZE ECB
         EXCP  IOBSTDRD
         WAIT  ECB=WORK_ECB
         ITRACE ID=EXCP_ECB,                                           +
               DATA1=(WORK_ECB,4)
         CLI   WORK_ECB,X'42'                 END OF VTOC? (BAD I KNOW)
         BER   R9                             YES
         CLI   WORK_ECB,X'44'                 RETRY?
         BE    EXCP0000                       YES
         CLI   WORK_ECB,X'7F'                 SUCCESSFUL I/O?
         BNE   ERR0040                        NO
         SR    R0,R0                          CLEAR REGISTER
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,WORK_CCW_3+6              LENGTH USED
         ICM   R0,3,IOBSTDRD+14               RESIDUAL LENGTH
         SR    R1,R0                          LENGTH READ
         ITRACE ID=BYTES,                                              +
               RDATA1=R1
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=DAIRFAIL
         OI    SESS_STATUS,$STATUS_NO_DATA
         B     EXITFAST
         DROP  R1
ERR0020  DS    0H
         ITRACE ID=RDJFCB_X
         DC    H'0'
ERR0040  DS    0H
         ITRACE ID=IO_ERR
         DC    H'0'
ERR0050  DS    0H
         ITRACE ID=NO_TIOT
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=STATS
         MVC   COMM_MSG_2(MSG_01_L),MSG_01
         L     R0,SESS_FORMAT1S
         CVD   R0,COMM_DWORD
         ED    COMM_MSG_2+(MSG_01_FORMAT_1S-MSG_01)(L'MSG_01_FORMAT_1S)++
               ,COMM_DWORD+4
         L     R0,WORK_FORMAT_3S
         CVD   R0,COMM_DWORD
         ED    COMM_MSG_2+(MSG_01_FORMAT_3S-MSG_01)(L'MSG_01_FORMAT_3S)++
               ,COMM_DWORD+4
         L     R0,WORK_FORMAT_5S
         CVD   R0,COMM_DWORD
         ED    COMM_MSG_2+(MSG_01_FORMAT_5S-MSG_01)(L'MSG_01_FORMAT_5S)++
               ,COMM_DWORD+4
         ITRACE ID=CLOSE,                                              +
               RDATA1=R8
         CLOSE ((R8)),                                                 +
               MF=(E,WORK_CLOSE)
         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN
         ITRACE ID=FREEPOOL,                                           +
               RDATA1=R8
         FREEPOOL (R8)
         ITRACE ID=FREE_DD
         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION
         LA    R1,DAIRREQ                     DAIR PARMS
         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT
         BALR  R14,R15                        FREE THE DD
         ITRACE ID=FREE_RC,                                            +
               RDATA1=R15
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   ERR0010                        NO
EXITFAST DS    0H
         ITRACE ID=FREE_DCB,                                           +
               RDATA1=R8
         L     R0,SESS_DCB_LENGTH
         FREEMAIN RU,                                                  +
               A=(R8),                                                 +
               LV=(0)
         XC    SESS_DCB_ADDR,SESS_DCB_ADDR
         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH
         ITRACE ID=EXIT
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=OSRDVTOC_WORK_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
F1       DC    F'1'

CCW_I    DS    0D
CCW_I_1  CCW   $CCW_SEARCH,*,$CCW_CC,5
CCW_I_2  CCW   $CCW_TIC,CCW_I_1,0,8
CCW_I_3  CCW   $CCW_READ_MULTIPLE_CKD,*,$CCW_SILI,65535
CCW_L    EQU   *-CCW_I

DCB_I    DCB   DSORG=PS,                                               +
               DDNAME=ANYDD,                                           +
               DEVD=DA,                                                +
               EXLST=*,                                                +
               MACRF=EXCP
DCB_L    EQU   *-DCB_I
OPEN_I   OPEN  (*,INPUT),                                              +
               MF=L
OPEN_L   EQU   *-OPEN_I
CLOSE_I  CLOSE *,                                                      +
               MF=L
CLOSE_L  EQU   *-CLOSE_I
EXLST_I  DC    X'87',AL3(*)
EXLST_L  EQU   *-EXLST_I

VTOC             DC    CL8'VTOC'
RVTOC            DC    CL8'RVTOC'

MSG_01           DS    0C
MSG_01_FORMAT_1S DC    X'40202020206B202120'
                 DC    C' Format 1(s)'
MSG_01_FORMAT_3S DC    X'40202020206B202120'
                 DC    C' Format 3(s)'
MSG_01_FORMAT_5S DC    X'40202020206B202120'
                 DC    C' Format 5(s)'
MSG_01_L         EQU   *-MSG_01

PREFIX           DS    0C
                 DC    C'Format-'
PREFIX_FORMAT    DC    C' '
                 DC    C' at '
PREFIX_CYLINDER  DC    CL4' '
                 DC    C'-'
PREFIX_HEAD      DC    CL4' '
                 DC    C'-'
PREFIX_RECORD    DC    CL3' '
PREFIX_L         EQU   *-PREFIX

HEXCHAR          EQU   *-C'0'
                 DC    C'0123456789ABCDEF'

VTOCEND          EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OSRDVTOC_WORK    DSECT
                 COPY  DXDPREF

WORK_CCW         DS    0D
WORK_CCW_1       DS    D
WORK_CCW_2       DS    D
WORK_CCW_3       DS    D

WORK_ECB         DS    F
WORK_IOB         DS    0F,(IOB_L)X
WORK_OPEN        DS    0F,(OPEN_L)X
WORK_CLOSE       DS    0F,(CLOSE_L)X
WORK_EXLST       DS    0F,(EXLST_L)X

WORK_RECORDS_READ DS   F
WORK_FORMAT_3S   DS    F
WORK_FORMAT_4S   DS    F
WORK_FORMAT_5S   DS    F

WORK_MAX_LENGTH  DS    F

WORK_SAVE_R7     DS    A

WORK_DSCB_TRACK  DS    H                  DSCB'S PER TRACK

WORK_DISK_ADDR   DS    0CL5
WORK_DISK_CYL    DS    H
WORK_DISK_HEAD   DS    H
WORK_DISK_RECORD DS    X

WORK_EDIT        DS    CL8

WORK_VTOC_HIGH   DS    CL5
WORK_SAVE_ADDR   DS    CL5

WORK_JFCB        DS    0F
                 IBMMAC JFCB=YES

                 DAIRREQ DSECT=NO
                 DSPCREQ DSECT=NO

WORK_DATASPACE_RECORD   DS  0C
WORK_DATASPACE_X        DS  X             SORT SEQUENCER
WORK_DATASPACE_PREFIX   DS  CL44
WORK_DATASPACE_DATA     DS  CL140
WORK_DATASPACE_RECORD_L EQU *-WORK_DATASPACE_RECORD

WORK_IO_AREA     DS     65536X
OSRDVTOC_WORK_L  EQU    *-OSRDVTOC_WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
COUNT                DSECT
COUNT_CYLINDER       DS     XL2
COUNT_HEAD           DS     XL2
COUNT_RECORD         DS     X
COUNT_KEY_LENGTH     DS     X
COUNT_DATA_LENGTH    DS     XL2
COUNT_DATA           DS     0X
                     IBMMAC VTOC=1
FORMAT_4             DSECT
                     IBMMAC VTOC=4

         IBMMAC DCBD=PS,                                               +
               DEB=YES,                                                +
               PSA=YES,                                                +
               TCB=YES,                                                +
               TIOT=YES,                                               +
               UCB=YES
         IBMMAC IOB=YES
IOB_L    EQU   *-IOB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               OSSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY    TRENTRY
               COPY    CCW
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               COPY    REGEQU
               END     OSRDVTOC
