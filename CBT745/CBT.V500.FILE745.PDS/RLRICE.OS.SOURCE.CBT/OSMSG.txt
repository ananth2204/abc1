* ------------------------------------------------------------------- *
*                                                                     *
*         Construct messages                                          *
*                                                                     *
*                                                                     *
*  This just gets messy.  There's gotta be a better way...            *
*  I'm trying not to have many hard-coded messages.                   *
*  This is supposed to:                                               *
*     1) allow for multiple languages                                 *
*     2) allow text to be built from fixed and/or variable data       *
*                                                                     *
*                                                                     *
*  At start-up time, the PROFILE information can contain the name     *
*  of the message definitions.  US english is OSMSGUS.   OSPROF       *
*  will load the message definitions and put the address in a field   *
*  called COMM_MESSAGE_TABLE.                                         *
*                                                                     *
*                                                                     *
*  Formatters can have their own message tables.  Formatters should   *
*  set SESS_FORMATTER_MESSAGES.                                       *
*                                                                     *
*  When OSMSG searches for a message, it searches the formatter's     *
*  messages if present, then the main messages.                       *
*                                                                     *
*                                                                     *
*      The message table's format is                                  *
*                                                                     *
*         8 byte       Name of CSECT the following messages are       *
*                        associated with                              *
*         4 byte       binary length of all data for this CSECT       *
*                                                                     *
*         2 byte       message id                                     *
*         4 byte       binary length of all data for this message     *
*                                                                     *
*         2 byte       number of lines of returned message            *
*                                                                     *
*         2 byte       Length of all data for this descriptor         *
*         1 byte       Component descriptor                           *
*         2 byte       Length of component in message                 *
*         2 byte       Displacement to data (COMM type components)    *
*         1 byte       Message line number                            *
*         1-80 bytes   Present for constant type components           *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         USING MSG,R8
         USING MSG_CSECT_MSG,R7
OSMSG    CSECT
OSMSG    AMODE 31
OSMSG    RMODE ANY
         USING OSMSG,R15
         USING OSCOMM,R12
         USING SESSION,R11
         B     INIT0000
MODID    DC    CL8'OSMSG'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(MSGEND-OSMSG)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R10,R15                        COPY BASE ADDRESS
         DROP  R15
         USING OSMSG,R10
         L     R15,COMM_DXD                   DXD AREA BASE ADDRESS
         A     R15,DXD_START                  PLUS OFFSET
         ST    R13,4(R15)
         ST    R15,8(R13)
         LR    R13,R15                        COPY DXD AREA ADDRESS
         USING DXDMSG,R13                     DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY,                                              +
               DATA1=COMM_MSG_CSECT,                                   +
               DATA2=(COMM_MSG_ID,2)
         MVC   COMM_MSG_1,COMM_BLANKS
         MVC   COMM_MSG_2,COMM_BLANKS
         MVC   COMM_MSG_3,COMM_BLANKS
         MVC   COMM_MSG_4,COMM_BLANKS
         MVC   COMM_MSG_5,COMM_BLANKS
         ICM   R8,15,SESS_FORMATTER_MESSAGES
         BZ    MSG0010
         ITRACE ID=FMT_MSGS,                                           +
               RDATA1=R8
         BAL   R9,MSG1000                     LOCATE MESSAGE
         LTR   R7,R7                          LOCATED?
         BNZ   MSG0050                        YES
MSG0010  DS    0H
         ICM   R8,15,COMM_MESSAGE_TABLE       MESSAGE TABLE
         BZ    ERR0010
         ITRACE ID=MAINMSGS,                                           +
               RDATA1=R8
* ------------------------------------------------------------------- *
*                                                                     *
*        Locate the message                                           *
*                                                                     *
* ------------------------------------------------------------------- *
         BAL   R9,MSG1000                     LOCATE MESSAGE
         LTR   R7,R7                          LOCATED?
         BZ    EXIT0000                       NO
* ------------------------------------------------------------------- *
*        Message located                                              *
* ------------------------------------------------------------------- *
MSG0050  DS    0H
         XC    DXD_LINE_DISPS(DXD_LINE_DISPS_L),DXD_LINE_DISPS
         MVC   COMM_MSG_LINES,MSG_LINES
         LA    R6,MSG_COMPONENTS              FIRST COMPONENT
         USING MSG_COMPONENT,R6               DEFINE BASE
* ------------------------------------------------------------------- *
*                                                                     *
*        Process each component                                       *
*                                                                     *
*                                                                     *
*     R1   Address of source data in OSCOMM                           *
*     R2   Output address                                             *
*     R3   Address of displacment on output line                      *
*     R4   Output length                                              *
*                                                                     *
* ------------------------------------------------------------------- *
MSG0060  DS    0H
         SR    R1,R1
         ICM   R1,3,MSG_COMPONENT_DISP
         CLI   MSG_COMPONENT_AREA,C'S'        IN SESSION BLOCK?
         BE    MSG0070                        YES
         LA    R1,0(R1,R12)                   ADDR OF DATA COMMON AREA
         B     MSG0080
MSG0070  DS    0H
         LA    R1,0(R1,R11)                   ADDR of DATA IN SESSION
MSG0080  DS    0H
         SR    R2,R2                          CLEAR REGISTER
         IC    R2,MSG_COMPONENT_LINE          LINE NUMBER
         LR    R3,R2                          COPY LINE NUMBER
         BCTR  R2,0                           CONVERT TO RELATIVE LINE
         MH    R2,=Y(L'COMM_MSG_1)            DISPLACEMENT TO THIS LINE
         LA    R2,COMM_MSG_1(R2)              OUTPUT LINE
         BCTR  R3,0
         MH    R3,=Y(L'DXD_LINE_DISP_1)
         LA    R3,DXD_LINE_DISPS(R3)          ADDR OF DISP FOR LINE
         LH    R0,0(R3)                       DISP FOR THIS LINE
         AR    R2,R0                          OUTPUT ADDRESS
         SR    R4,R4                          CLEAR REGISTER
         ICM   R4,3,MSG_COMPONENT_OUTPUT_LENGTH
         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_ADDRESS
         BE    MSG0100
         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_CHAR
         BE    MSG0200
         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_CONSTANT
         BE    MSG0300
         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_HALFWORD
         BE    MSG0400
         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_FULLWORD
         BE    MSG0500
         CLI   MSG_COMPONENT_TYPE,$MSG_COMPONENT_HEX
         BE    MSG0600
         B     ERR0020
MSG0090  DS    0H
         SR    R1,R1
         ICM   R1,3,MSG_COMPONENT_LENGTH
         AR    R6,R1                          NEXT COMPONENT
         CLI   0(R6),X'FF'                    END OF COMPONENTS?
         BE    EXIT0000                       YES
         B     MSG0060                        PROCESS NEXT COMPONENT
* ------------------------------------------------------------------- *
*        ADDRESS components                                           *
* ------------------------------------------------------------------- *
MSG0100  DS    0H
         ITRACE ID=ADDRESS
         MVC   DXD_WORK_IN(4),0(R1)           COPY ADDRESS
         UNPK  DXD_WORK_OUT(9),DXD_WORK_IN(5)
         TR    DXD_WORK_OUT(8),HEXCHAR
         LA    R1,DXD_WORK_OUT+8
         SR    R1,R4                          SOURCE ADDRESS
         BCTR  R4,0
         EX    R4,ADDR_MVC
         B     MSG0700
ADDR_MVC MVC   0(0,R2),0(R1)                  COPY TO MESSAGE
* ------------------------------------------------------------------- *
*        Character components                                         *
* ------------------------------------------------------------------- *
MSG0200  DS    0H
         ITRACE ID=CHAR,                                               +
               RDATA1=R1,                                              +
               DATA2=(0(R1),8)
         BCTR  R4,0                           FOR EXECUTE
         EX    R4,CHAR_MVC
         B     MSG0700
CHAR_MVC MVC   0(0,R2),0(R1)                  COPY TO MESSAGE
* ------------------------------------------------------------------- *
*        Text components                                              *
* ------------------------------------------------------------------- *
MSG0300  DS    0H
         ITRACE ID=CONSTANT,                                           +
               RDATA1=R4,                                              +
               DATA2=MSG_COMPONENT_CONSTANT
         BCTR  R4,0                           FOR EXECUTE
         EX    R4,CONSTANT_MVC
         B     MSG0700
CONSTANT_MVC   MVC  0(0,R2),MSG_COMPONENT_CONSTANT
* ------------------------------------------------------------------- *
*        Halfword components                                          *
* ------------------------------------------------------------------- *
MSG0400  DS    0H
         ITRACE ID=HALFWORD
         SR    R0,R0
         ICM   R0,3,0(R1)
         CVD   R0,COMM_DWORD
         MVC   DXD_WORK_OUT(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_OUT(L'EDIT_WORD_1),COMM_DWORD+5
         LA    R1,DXD_WORK_OUT+L'EDIT_WORD_1
         SR    R1,R4                          OUTPUT ADDRESS
         BCTR  R4,0
         EX    R4,CHAR_MVC
         B     MSG0700
* ------------------------------------------------------------------- *
*        Fullword components                                          *
* ------------------------------------------------------------------- *
MSG0500  DS    0H
         ICM   R0,15,0(R1)
         ITRACE ID=FULLWORD,                                           +
               RDATA1=R1,                                              +
               RDATA2=R0
         CVD   R0,COMM_DWORD
         MVC   DXD_WORK_OUT(L'EDIT_WORD_2),EDIT_WORD_2
         ED    DXD_WORK_OUT(L'EDIT_WORD_2),COMM_DWORD+3
         LA    R1,DXD_WORK_OUT+L'EDIT_WORD_2
         SR    R1,R4                          OUTPUT ADDRESS
         BCTR  R4,0
         EX    R4,CHAR_MVC
         B     MSG0700
* ------------------------------------------------------------------- *
*        Hex components      (up to 4 bytes)                          *
* ------------------------------------------------------------------- *
MSG0600  DS    0H
         ITRACE ID=HEX,                                                +
               DATA1=(0(R1),8)
         MVC   DXD_WORK_IN(4),0(R1)           COPY DATA
         UNPK  DXD_WORK_OUT(9),DXD_WORK_IN(5)
         TR    DXD_WORK_OUT(8),HEXCHAR
         BCTR  R4,0
         EX    R4,HEX_MVC
         B     MSG0700
HEX_MVC  MVC   0(0,R2),DXD_WORK_OUT           COPY TO MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MSG0700  DS    0H
         LA    R4,2(R4)                       RESTORE LENGTH + 1
         AH    R4,0(R3)
         STH   R4,0(R3)
         B     MSG0090
         DROP  R7
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MSG1000  DS    0H
         ITRACE ID=CSECT,                                              +
               DATA1=COMM_MSG_CSECT,                                   +
               DATA2=MSG_CSECT
         CLC   COMM_MSG_CSECT,MSG_CSECT       LOCATED THE MESSAGES?
         BE    MSG1010                        YES
         A     R8,MSG_CSECT_LENGTH            LENGTH of MESSAGES
         CLI   0(R8),X'FF'                    END OF TABLE?
         BE    MSG1040                        YES
         B     MSG1000                        TRY NEXT CSECT
* ------------------------------------------------------------------- *
*        CSECT's message located, find specific message               *
* ------------------------------------------------------------------- *
MSG1010  DS    0H
         LA    R7,MSG_CSECT_MSG               FIRST MESSAGE FOR CSECT
         USING MSG_CSECT_MSG,R7
MSG1020  DS    0H
         ITRACE ID=MSG,                                                +
               DATA1=(COMM_MSG_ID,2),                                  +
               DATA2=(MSG_ID,2)
         CLC   COMM_MSG_ID,MSG_ID             LOCATED THE MESSAGE?
         BE    MSG1030                        YES
         SR    R0,R0
         ICM   R0,15,MSG_LENGTH
         AR    R7,R0                          NEXT MESSAGE
         CLI   0(R7),X'FF'                    END for this csect?
         BE    MSG1050                        YES
         B     MSG1020                        TRY NEXT MESSAGE
MSG1030  DS    0H
         MVI   DXD_RC,0                       MESSAGE LOCATED
         BR    R9
MSG1040  DS    0H
         MVC   COMM_MSG_1(MSG_01_L),MSG_01
         MVC   COMM_MSG_1+(MSG_01_CSECT-MSG_01)(L'MSG_01_CSECT),COMM_MS+
               G_CSECT
         MVI   DXD_RC,4                       CSECT NOT FOUND
         SR    R7,R7                          MSG NOT FOUND
         BR    R9
MSG1050  DS    0H
         MVC   COMM_MSG_1(MSG_02_L),MSG_02
         SR    R1,R1
         ICM   R1,3,COMM_MSG_ID
         CVD   R1,COMM_DWORD
         ED    COMM_MSG_1+(MSG_02_ID-MSG_02)(L'MSG_02_ID),COMM_DWORD+5
         MVC   COMM_MSG_1+(MSG_02_CSECT-MSG_02)(L'MSG_02_CSECT),COMM_MS+
               G_CSECT
         MVI   DXD_RC,8                       MSG NOT FOUND FOR CSECT
         SR    R7,R7                          MSG NOT FOUND
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NO_MSGS
         MVI   DXD_RC,12
         B     EXIT0000
ERR0020  DS    0H
         MVI   DXD_RC,16
         ITRACE ID=BAD_TYPE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT,                                               +
               DATA1=(DXD_RC,1),                                       +
               DATA2=(COMM_MSG_LINES,2)
         SR    R15,R15
         IC    R15,DXD_RC
         L     R13,4(R13)
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START            DC    Q(DXDMSG)

EDIT_WORD_1          DC    X'402020202120'
EDIT_WORD_2          DC    X'40202020202020202120'

HEXCHAR              EQU   *-C'0'
                     DC    C'0123456789ABCDEF'

MSG_01               DS    0C
                     DC    C'OSMSG01E '
                     DC    C'Messages not found for CSECT '
MSG_01_CSECT         DC    CL8' '
MSG_01_L             EQU   *-MSG_01

MSG_02               DS    0C
                     DC    C'OSMSG02E '
                     DC    C'Message number '
MSG_02_ID            DC    X'402020202120'
                     DC    C' not found for CSECT '
MSG_02_CSECT         DC    CL8' '
MSG_02_L             EQU   *-MSG_02

                     LTORG

MSGEND               EQU   *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDMSG               DSECT
                     COPY  DXDPREF

DXD_LINE_DISPS       DS    0H
DXD_LINE_DISP_1      DS    H
DXD_LINE_DISP_2      DS    H
DXD_LINE_DISP_3      DS    H
DXD_LINE_DISP_4      DS    H
DXD_LINE_DISP_5      DS    H
DXD_LINE_DISPS_L     EQU   *-DXD_LINE_DISPS

DXD_RC               DS    X
DXD_WORK_IN          DS    CL16
DXD_WORK_OUT         DS    CL16
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                COPY     MSG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                COPY     REGEQU
                END      OSMSG
