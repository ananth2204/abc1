* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: OSDESERV                                              *
*                                                                     *
*  Obtain PDS or PDS/E directory information                          *
*                                                                     *
*                                                                     *
*                                                                     *
*  I HATE EXCPTIONS...                                                *
*                                                                     *
*  For everything except directories, the DD for the data set can     *
*  be de-allocated as soon as the data is read. BUT...                *
*  Because the directory display can also allow commands that         *
*  update the directory itself (like deleting or renaming members),   *
*  the DD is not de-allocated until the "session" for displaying      *
*  this PDS(/E)'s members ends.                                       *
*                                                                     *
*  Just to add to the "fun", the DCB for obtaining the directory      *
*  info is basically BSAM but the STOWs used for updating members     *
*  requires a DCB with BPAM. So, the same DCB is not used for both    *
*  the DESERV and STOW functions.  In other words this module has     *
*  a DCB and the display module(s) have different DCBs.               *
*                                                                     *
*                                                                     *
*                                                                     *
*  The DESERV service is called to obtain info for the members        *
*  of PDSes or PDS/Es.  Data is obtained on a 'member-by-member'      *
*  basis and stored in a data space.  The first member will be        *
*  stored in record 1, the second in record 2, and so on.             *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
OSDESERV CSECT
OSDESERV AMODE 31
OSDESERV RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING OSDESERV,R15
         B     INIT0000
MODID    DC    CL8'OSDESERV'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(DESERVEND-OSDESERV)
INIT0000 DS    0H
         USING OSCOMM,R12                     DEFINE COMMON AREA BASE
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         DROP  R15
         USING OSDESERV,R10                   DEFINE BASE
         GETMAIN RU,                                                   +
               LV=OSDESERV_WORK_L,                                     +
               LOC=BELOW
         ST    R13,4(R1)                      SAVE R13
         ST    R1,8(R13)                      CHAIN SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING OSDESERV_WORK,R13              DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY
         MVC   WORK_OPEN(OPEN_L),OPEN_I
         MVC   WORK_CLOSE(CLOSE_L),CLOSE_I
         USING IHADCB,R9                      DEFINE DCB ADDRESS
         LA    R0,DCB_L
         ST    R0,SESS_DCB_LENGTH             SET LENGTH
         GETMAIN RU,                                                   +
               LV=DCB_L,                                               +
               LOC=BELOW
         LR    R9,R1
         ST    R9,SESS_DCB_ADDR
         MVC   0(DCB_L,R9),DCB_I              INITIALIZE DCB
         MVC   WORK_DESERV(DESERV_L),DESERV_I
         XC    WORK_ADDR,WORK_ADDR
         XC    WORK_RECORDS,WORK_RECORDS
         LA    R1,DATASPACE_1                 USE DATA SPACE 1
         ST    R1,DSPCREQ_DATASPACE
         LA    R1,DIR_RECORD                  DIRECTORY RECORD ADDRESS
         ST    R1,DSPCREQ_RECORD_ADDR
         LA    R1,DIR_RECORD_L                RECORD LENGTH
         ST    R1,DSPCREQ_RECORD_LENGTH
         MVC   DATASPACE_1_FIRST_RECORD,F1
         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=OPEN,                                               +
               DATA1=SESS_DD
         MVC   DCBDDNAM,SESS_DD               SET DD NAME IN DCB
         OPEN  ((R9),INPUT),                                           +
               MODE=31,                                                +
               MF=(E,WORK_OPEN)
         TM    DCBOFLGS,DCBOFOPN              SUCCESFUL?
         BNO   ERR0010                        NO
         OI    SESS_DCB_FLAGS,$SESS_DCB_OPEN
* ------------------------------------------------------------------- *
*        Issue DESERV to obtain directory info for all members        *
* ------------------------------------------------------------------- *
         ITRACE ID=GET_ALL
         DESERV FUNC=GET_ALL,                 ALL DIRECTORY ENTRIES    +
               AREAPTR=WORK_ADDR,             .. BUFFER FOR DATA       +
               CONN_INTENT=NONE,              .. NO CONNECTION INTENT  +
               DCB=(R9),                      .. DCB ADDRESS           +
               RETCODE=WORK_RETURN_CODE,                               +
               RSNCODE=WORK_REASON_CODE,                               +
               MF=(E,WORK_DESERV,COMPLETE)
         ITRACE ID=DE_RC,                                              +
               DATA1=(WORK_RETURN_CODE,4),                             +
               DATA2=(WORK_REASON_CODE,4)
         OC    WORK_RETURN_CODE,WORK_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*        Process the data returned by DESERV                          *
* ------------------------------------------------------------------- *
         L     R8,WORK_ADDR                   ADDRESS OF RETURNED DATA
         USING DESB,R8                        DEFINE BASE
DESRV000 DS    0H
         L     R7,DESB_COUNT                  NUMBER OF SMDES
         LA    R6,DESB_DATA                   FIRST SMDE
         USING SMDE,R6                        DEFINE BASE
DESRV010 DS    0H
         ITRACE ID=SMDE,                                               +
               RDATA1=R6,                                              +
               RDATA2=R7
         XC    DIR_RECORD(DIR_RECORD_L),DIR_RECORD
         MVC   DIR_NAME,COMM_BLANKS
         SR    R14,R14
         ICM   R14,3,SMDE_NAME_OFF            OFFSET TO NAME
         AR    R14,R6                         PLUS BASE
         SR    R15,R15
         ICM   R15,3,0(R14)                   LENGTH OF NAME
         CH    R15,=Y(L'DIR_NAME)             TOO LONG?
         BNH   DESRV020                       NO
         OI    DIR_FLAGS,$DIR_NAME_TRUNC
         LH    R15,=Y(L'DIR_NAME)             LIMIT LENGTH
DESRV020 DS    0H
         BCTR  R15,0                          MINUS 1
         EX    R15,NAME_MVC                   COPY NAME
         MVC   DIR_TTR,SMDE_MLT
         TM    SMDE_FLAG,SMDE_FLAG_LMOD       LOAD MODULE?
         BO    DESRV030                       YES
         USING DS1FMTID,SESS_DSCB             DEFINE DSCB BASE
         TM    DS1RECFM,DS1RECFV              VARIABLE (OR UNDEFINED)?
         BO    DESRV060                       YES
         CLC   DS1LRECL,H80                   80-BYTE RECORDS?
         BNE   DESRV060                       NO
         CLC   SMDE_USRD_LEN,H30              30 BYTES OF USER DATA?
         BNE   DESRV060                       NO
         SR    R15,R15                        CLEAR R15
         ICM   R15,3,SMDE_USRD_OFF            OFFSET TO USER DATA
         AR    R15,R6                         PLUS BASE
         USING SPFSTATS,R15                   DEFINE BASE
         OI    DIR_FLAGS,$DIR_SPF
         MVC   DIR_SPF_VERSION,SPF_VERSION
         MVC   DIR_SPF_LEVEL,SPF_LEVEL
         MVC   DIR_SPF_C_DATE,SPF_C_DATE
         MVC   DIR_SPF_M_DATE,SPF_M_DATE
         MVC   DIR_SPF_M_TIME(2),SPF_M_TIME
         MVC   DIR_SPF_M_TIME+2(1),SPF_M_SECONDS
         MVC   DIR_SPF_INIT,SPF_INIT
         MVC   DIR_SPF_SIZE,SPF_SIZE
         MVC   DIR_SPF_USER,SPF_USER
         B     DESRV060
         DROP  R15
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DESRV030 DS    0H
         ITRACE ID=LMOD
         CLI   SMDE_LIBTYPE,SMDE_LIBTYPE_PDS
         BE    DESRV040
         CLI   SMDE_LIBTYPE,SMDE_LIBTYPE_PDSE
         BE    DESRV050
         B     DESRV060
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DESRV040 DS    0H
         ITRACE ID=PDS_LMOD
         SR    R14,R14
         ICM   R14,3,SMDE_PMAR_OFF            OFFSET TO PMAR
         AR    R14,R6                         PLUS BASE
         USING PMAR,R14                       DEFINE BASE
         OI    DIR_FLAGS,$DIR_PMAR            PMAR DATA IS PRESENT
         MVC   DIR_PMAR_ATR1,PMAR_ATR1
         MVC   DIR_PMAR_ATR2,PMAR_ATR2
         MVC   DIR_PMAR_ATR3,PMAR_ATR3
         MVC   DIR_PMAR_ATR4,PMAR_ATR4
         MVC   DIR_PMAR_AC,PMAR_AC
         MVC   DIR_PMAR_STOR,PMAR_STOR
         MVC   DIR_PMAR_EPM,PMAR_EPM
         MVC   DIR_PMAR_EPA,PMAR_EPA
         MVC   DIR_PMAR_SSI,PMAR_SSI
         SR    R15,R15                        CLEAR REGISTER
         ICM   R15,3,PMAR_SLEN                SECTION LENGTH
         DROP  R14
         LA    R14,0(R14,R15)                 ADDRESS OF PMARR SECTION
         USING PMARR,R14
         MVC   DIR_PMAR_TTR,PMARR_TTRT        TEXT TTR
         MVC   DIR_PMAR_TTRN,PMARR_TTRN       NOTELIST TTR
         MVC   DIR_PMAR_NL,PMARR_NL           ENTRIES IN NOTE LIST
         MVC   DIR_PMAR_FTBL,PMARR_FTBL       LENGTH OF FIRST TEXT BLK  XT
         MVC   DIR_PMAR_ORG,PMARR_ORG         MODULE ORIGIN
         MVC   DIR_PMAR_RLDS,PMARR_RLDS       NBR OF RLD/CTL RECORDS
         MVC   DIR_PMAR_SLSZ,PMARR_SLSZ       SCATTER LIST LENGTH
         MVC   DIR_PMAR_TTSZ,PMARR_TTSZ       TRANSLATION TABLE LENGTH
         MVC   DIR_PMAR_ESDT,PMARR_ESDT       ESDID OF FIRST TEXT BLOCK
         MVC   DIR_PMAR_ESDC,PMARR_ESDC       ESDID OF EP CTRL SECTION
         ZAP   DIR_PMAR_DATE,P0               DATE NOT PRESENT
         XC    DIR_PMAR_TIME,DIR_PMAR_TIME
         MVC   DIR_PMAR_USER,COMM_BLANKS
         B     DESRV060
         DROP  R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DESRV050 DS    0H
         ITRACE ID=PDSELMOD
         SR    R14,R14
         ICM   R14,3,SMDE_PMAR_OFF            OFFSET TO PMAR
         AR    R14,R6                         PLUS BASE
         USING PMAR,R14                       DEFINE BASE
         OI    DIR_FLAGS,$DIR_PMAR            PMAR DATA IS PRESENT
         MVC   DIR_PMAR_ATR1,PMAR_ATR1
         MVC   DIR_PMAR_ATR2,PMAR_ATR2
         MVC   DIR_PMAR_ATR3,PMAR_ATR3
         MVC   DIR_PMAR_ATR4,PMAR_ATR4
         MVC   DIR_PMAR_AC,PMAR_AC
         MVC   DIR_PMAR_STOR,PMAR_STOR
         MVC   DIR_PMAR_EPM,PMAR_EPM
         MVC   DIR_PMAR_EPA,PMAR_EPA
         MVC   DIR_PMAR_SSI,PMAR_SSI
         ICM   R15,3,PMAR_SLEN                SECTION LENGTH
         DROP  R14
         LA    R14,0(R14,R15)                 ADDRESS OF PMARR SECTION
         USING PMARL,R14
         XC    DIR_PMAR_TTR,DIR_PMAR_TTR
         XC    DIR_PMAR_TTRN,DIR_PMAR_TTRN
         XC    DIR_PMAR_NL,DIR_PMAR_NL
         XC    DIR_PMAR_FTBL,DIR_PMAR_FTBL                              XT
         XC    DIR_PMAR_ORG,DIR_PMAR_ORG
         XC    DIR_PMAR_RLDS,DIR_PMAR_RLDS
         XC    DIR_PMAR_SLSZ,DIR_PMAR_SLSZ
         XC    DIR_PMAR_TTSZ,DIR_PMAR_ESDT
         XC    DIR_PMAR_ESDT,DIR_PMAR_ESDT
         XC    DIR_PMAR_ESDC,DIR_PMAR_ESDC
         PDCHECK PMARL_DATE
         ZAP   DIR_PMAR_DATE,PMARL_DATE
         MVC   DIR_PMAR_TIME,PMARL_TIME
         MVC   DIR_PMAR_USER,PMARL_USER
* ------------------------------------------------------------------- *
*        'STORE' the record in the data space                         *
* ------------------------------------------------------------------- *
DESRV060 DS    0H
         L     R1,WORK_RECORDS                RECORDS STORED SO FAR
         A     R1,F1                          PLUS 1
         ST    R1,WORK_RECORDS                SAVE TOTAL
         ST    R1,DSPCREQ_RECORD_NBR          SET RECORD NUMBER
         ITRACE ID=STORE,                                              +
               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +
               DATA2=(DSPCREQ_RECORD_LENGTH,4)
         LA    R1,DSPCREQ                     DSPCREQ BLOCK ADDRESS
         L     R15,COMM_OSDSPACE              OSDSPACE ENTRY POINT
         BALR  R14,R15
         CLI   DSPCREQ_RC,$DSPCREQ_OK         SUCCESSFUL?
         BNE   ERR0030                        NO
         ICM   R0,15,SMDE_LEN                 LENGTH OF THIS SMDE
         AR    R6,R0                          NEXT SMDE
         BCT   R7,DESRV010                    LOOP
* ------------------------------------------------------------------- *
*        All entries in this block processed.                         *
*        FREEMAIN this block and continue with next block.            *
* ------------------------------------------------------------------- *
         ICM   R0,15,DESB_LEN                 DESB LENGTH
         ICM   R0,8,DESB_SUBPOOL              INSERT SUBPOOL
         LR    R1,R8                          COPY DESB ADDRESS
         ICM   R8,15,DESB_NEXT                NEXT DESB
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=(0)
         LTR   R8,R8                          ADDITIONAL DESB'S?
         BNZ   DESRV000                       YES
* ------------------------------------------------------------------- *
*        All data processed.                                          *
* ------------------------------------------------------------------- *
         ITRACE ID=CLOSE,                                              +
               RDATA1=R9
         CLOSE ((R9)),                                                 +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         ITRACE ID=FREEPOOL
         FREEPOOL (R9)
         L     R0,SESS_DCB_LENGTH
         ITRACE ID=FREE_DCB,                                           +
               RDATA1=R9,                                              +
               RDATA2=R0
         FREEMAIN RU,                                                  +
               A=(R9),                                                 +
               LV=(0)
         XC    SESS_DCB_ADDR,SESS_DCB_ADDR
         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH
         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN
         TM    DS1RECFM,DS1RECFU
         BO    DESRV070
         MVC   SESS_DEFAULT_FORMAT,DIR
         B     DESRV080
DESRV070 DS    0H
         MVC   SESS_DEFAULT_FORMAT,LDIR
DESRV080 DS    0H
         TM    SESS_KEYWORD_FLAGS,$KEYWORD_FORMAT
         BO    DESRV090
         MVC   SESS_FORMAT,SESS_DEFAULT_FORMAT
DESRV090 DS    0H
         ITRACE ID=MSG_01
         L     R1,DSPCREQ_RECORD_NBR          NUMBER OF RECORDS STORED
         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL
         mvc   COMM_MSG_2,COMM_BLANKS
         MVC   COMM_MSG_2(MSG_01_L),MSG_01
         ED    COMM_MSG_2+(MSG_01_RECORDS-MSG_01)(L'MSG_01_RECORDS),COM+,C+
               M_DWORD+3
         SR    R2,R2
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   COMM_MSG_ID+1,1                SET MESSAGE NUMBER
         ST    R15,COMM_DWORD
         B     ERR1000
ERR0020  DS    0H
         ITRACE ID=NO_DATA
         MVI   SESS_STATUS,$STATUS_NO_DATA
         MVI   COMM_MSG_ID+1,2                SET MESSAGE NUMBER
         MVC   COMM_INFO_01(4),WORK_RETURN_CODE
         MVC   COMM_INFO_02(4),WORK_REASON_CODE
ERR0030  DS    0H
         ITRACE ID=CLOSE,                                              +
               RDATA1=R9
         CLOSE ((R9)),                                                 +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         ITRACE ID=FREEPOOL,                                           +
               RDATA1=R9
         FREEPOOL (R9)
         L     R0,SESS_DCB_LENGTH
         ITRACE ID=FREE_DCB,                                           +
               RDATA1=R9,                                              +
               RDATA2=R0
         FREEMAIN RU,                                                  +
               A=(R9),                                                 +
               LV=(0)
         XC    SESS_DCB_ADDR,SESS_DCB_ADDR    CLEAR DCB ADDRESS
         XC    SESS_DCB_LENGTH,SESS_DCB_LENGTH
         NI    SESS_DCB_FLAGS,255-$SESS_DCB_OPEN
ERR1000  DS    0H
         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION
         MVC   DAIR_DD,SESS_DD                SET DD NAME
         LA    R1,DAIRREQ
         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT
         BALR  R14,R15                        FREE THE DD
         MVC   COMM_MSG_CSECT,MODID           SET OUR CSECT'S NAME
         MVI   COMM_MSG_ID,0                  FORCE 1ST BYTE TO ZERO
         ITRACE ID=MESSAGE,                                            +
               DATA1=(COMM_MSG_ID,2)
         L     R15,COMM_V_OSMSG               OSMSG ENTRY POINT
         BALR  R14,R15                        CALL OSMSG
         LA    R2,8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=OSDESERV_WORK_L
         LR    R15,R2
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
NAME_MVC MVC   DIR_NAME(0),2(R14)             COPY NAME
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
DCB_I    DCB   DSORG=PS,                                               +
               DDNAME=ANYDD,                                           +
               EODAD=1,                                                +
               MACRF=R
DCB_L          EQU   *-DCB_I
OPEN_I   OPEN  (*,INPUT),                                              +
               MODE=31,                                                +
               MF=L
OPEN_L         EQU   *-OPEN_I
CLOSE_I  CLOSE (*),                                                    +
               MODE=31,                                                +
               MF=L
CLOSE_L        EQU   *-CLOSE_I
DESERV_I       DESERV FUNC=GET_ALL,                                    +
               MF=L
DESERV_L       EQU   *-DESERV_I
F1             DC    F'1'
H1             DC    H'1'
H30            DC    H'30'
H80            DC    H'80'

P0             DC    P'0'
DIR            DC    CL8'DIR'
LDIR           DC    CL8'LDIR'
NONE           DC    CL8'None'

MSG_01         DS    0C
MSG_01_RECORDS DC    X'402020206B2020206B202120'
               DC    C' members'
MSG_01_L       EQU   *-MSG_01
               LTORG

DESERVEND      EQU   *
* ------------------------------------------------------------------- *
*        WORK AREA                                                    *
* ------------------------------------------------------------------- *
OSDESERV_WORK    DSECT
                 COPY  DXDPREF
WORK_OPEN        DS    0F,(OPEN_L)X
WORK_CLOSE       DS    0F,(CLOSE_L)X
WORK_DESERV      DS    0F,(DESERV_L)X

WORK_ADDR        DS    A
WORK_RETURN_CODE DS    F
WORK_REASON_CODE DS    F

WORK_RECORDS     DS    F                 DIRECTORY RECORDS STORED

                 COPY  DIR

                 DAIRREQ DSECT=NO
                 DSPCREQ DSECT=NO
OSDESERV_WORK_L  EQU   *-OSDESERV_WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IBMMAC DCBD=PS,                                               +
               DES=YES,                                                +
               PMAR=YES,                                               +
               SMDE=YES,                                               +
               DUMMY=X
FORMAT_1 DSECT
         IBMMAC VTOC=1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
*        OSSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY SPFSTATS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  OSDESERV
