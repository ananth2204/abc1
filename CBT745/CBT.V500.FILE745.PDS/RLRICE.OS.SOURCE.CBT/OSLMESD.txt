* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: OSLMESD                                               *
*                                                                     *
*  Display ESD info                                                   *
*                                                                     *
*  The ESD info has already been stored in the data space.            *
*                                                                     *
* ------------------------------------------------------------------- *
OSLMESD  CSECT
OSLMESD  AMODE 31
OSLMESD  RMODE ANY
         USING OSLMESD,R15
         USING OSCOMM,R12
         USING SESSION,R11
         B     INIT0000
MODID    DC    CL8'OSLMESD'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(OSLMESDEND-OSLMESD)
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R10,R15                        COPY BASE ADDRESS
         LA    R9,2048(R10)
         LA    R9,2048(R9)
         DROP  R15
         USING OSLMESD,R10,R9
         L     R5,COMM_OSSPFD                 SPF DATA ADDRESS
         USING OSSPFD,R5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE
         BNE   INIT0010                       NO
         LA    R0,OSLMESD_DXD_L               WORK AREA LENGTH
         ST    R0,SESS_FORMATTER_DXD_LENGTH   SAVE LENGTH
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,SESS_FORMATTER_DXD_ADDR     SAVE ADDRESS
         LR    R2,R1
         LR    R0,R1
         LA    R1,OSLMESD_DXD_L
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE WORK AREA
         ST    R13,4(,R2)
         ST    R2,8(,R13)
         LR    R13,R2                         SET WORK AREA ADDRESS
         USING OSLMESD_DXD,R13                DEFINE BASE
         MVC   DXD_CSECT,MODID                SET MODULE ID
         ITRACE ID=ENTRY1
         LA    R1,DATASPACE_1
         ST    R1,DSPCREQ_DATASPACE
         LA    R1,ESDDATA_DATA
         ST    R1,DSPCREQ_RECORD_ADDR
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
         LA    R1,PANEL_NAME                  PANEL NAME
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        GETMAIN VDATA
         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH
         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS
         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH
         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         L     R1,SESS_FORMATTER_DXD_ADDR     WORK AREA ADDRESS
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         ITRACE ID=ENTRY2
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL
         BE    EXIT0000
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP
         BE    CLEAN000
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
ESD0000  DS    0H
         L     R4,DXD_VDATA_ADDR
         L     R3,DXD_VDEPTH
ESD0010  DS    0H
         MVC   0(80,R4),COMM_BLANKS
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0010
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
         L     R4,DXD_VDATA_ADDR
         L     R3,DXD_VDEPTH
         BCTR  R3,0
         BCTR  R3,0                   < -- RESERVE ROOM FOR TOTAL MSG
ESD0020  DS    0H
         ITRACE ID=RETREIVE,                                           +
               DATA1=(DSPCREQ_RECORD_NBR,4)
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETREIVE
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0010

         MVC   0(MSG_01_L,R4),MSG_01
         USING MSG_01,R4
         MVC   MSG_01_NAME,ESDDATA_NAME
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0030
         DROP  R4
         B     ESD5000                   SCREEN FULL

ESD0030  DS    0H
         MVC   0(MSG_02_L,R4),MSG_02
         USING MSG_02,R4
         MVC   MSG_02_TYPE,ESDDATA_TYPE
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0040
         DROP  R4
         B     ESD5000                   SCREEN FULL

ESD0040  DS    0H
         MVC   0(MSG_03_L,R4),MSG_03
         USING MSG_03,R4
         MVC   MSG_03_QUAL,ESDDATA_QUAL
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0060
         DROP  R4
         B     ESD5000

ESD0060  DS    0H
         MVC   0(MSG_04_L,R4),MSG_04
         USING MSG_04,R4
         UNPK  MSG_04_NAME_SPACE(3),ESDDATA_NAME_SPACE(2)
         TR    MSG_04_NAME_SPACE,HEXCHAR
         MVI   MSG_04_NAME_SPACE+2,C' '
         SR    R14,R14
         IC    R14,ESDDATA_NAME_SPACE
         C     R14,F4
         BH    ESD0070
         MH    R14,=Y(L'MSG_04_DESC)
         LA    R14,NAME_SPACE_DESC(R14)
         MVC   MSG_04_DESC,0(R14)
ESD0070  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0080
         DROP  R4
         B     ESD5000

ESD0080  DS    0H
         MVC   0(MSG_05_L,R4),MSG_05
         USING MSG_05,R4
         MVC   MSG_05_SCOPE,ESDDATA_SCOPE
         CLI   ESDDATA_SCOPE,C'S'
         BE    ESD0090
         CLI   ESDDATA_SCOPE,C'M'
         BE    ESD0100
         CLI   ESDDATA_SCOPE,C'L'
         BE    ESD0110
         CLI   ESDDATA_SCOPE,C'X'
         BE    ESD0120
         B     ESD0130
ESD0090  DS    0H
         MVC   MSG_05_DESC,SCOPE_DESC_S
         B     ESD0130
ESD0100  DS    0H
         MVC   MSG_05_DESC,SCOPE_DESC_M
         B     ESD0130
ESD0110  DS    0H
         MVC   MSG_05_DESC,SCOPE_DESC_L
         B     ESD0130
ESD0120  DS    0H
         MVC   MSG_05_DESC,SCOPE_DESC_X
ESD0130  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0140
         DROP  R4
         B     ESD5000

ESD0140  DS    0H
         MVC   0(MSG_06_L,R4),MSG_06
         USING MSG_06,R4
         UNPK  MSG_06_SYMBOL_ATTR(3),ESDDATA_SYMBOL_ATTR(2)
         TR    MSG_06_SYMBOL_ATTR,HEXCHAR
         MVI   MSG_06_SYMBOL_ATTR+2,C' '
         LA    R14,MSG_06_DESC
         TM    ESDDATA_SYMBOL_ATTR,ESD_STRONG
         BNO   ESD0150
         MVC   0(L'DESC_STRONG,R14),DESC_STRONG
         LA    R14,L'DESC_STRONG+2(,R14)
ESD0150  DS    0H
         TM    ESDDATA_SYMBOL_ATTR,ESD_RENAMEABLE
         BNO   ESD0160
         MVC   0(L'DESC_RENAMEABLE,R14),DESC_RENAMEABLE
         LA    R14,L'DESC_RENAMEABLE+2(,R14)
ESD0160  DS    0H
         TM    ESDDATA_SYMBOL_ATTR,ESD_DESCRIPTOR
         BNO   ESD0170
         MVC   0(L'DESC_DESCRIPTOR,R14),DESC_DESCRIPTOR
         LA    R14,L'DESC_DESCRIPTOR+2(,R14)
ESD0170  DS    0H
         TM    ESDDATA_SYMBOL_ATTR,ESD_MANGLED
         BNO   ESD0180
         MVC   0(L'DESC_MANGLED,R14),DESC_MANGLED
         LA    R14,L'DESC_MANGLED+2(,R14)
ESD0180  DS    0H
         TM    ESDDATA_SYMBOL_ATTR,ESD_XPLINK
         BNO   ESD0190
         MVC   0(L'DESC_XPLINK,R14),DESC_XPLINK
         LA    R14,L'DESC_XPLINK+2(,R14)
ESD0190  DS    0H
         TM    ESDDATA_SYMBOL_ATTR,ESD_ADA_EXISTS
         BNO   ESD0200
         MVC   0(L'DESC_ADA,R14),DESC_ADA
         LA    R14,L'DESC_XPLINK+2(,R14)
ESD0200  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0210
         DROP  R4
         B     ESD5000

ESD0210  DS    0H
         MVC   0(MSG_07_L,R4),MSG_07
         USING MSG_07,R4
         MVC   MSG_07_RESIDENT,ESDDATA_RESIDENT
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0220
         B     ESD5000
         DROP  R4

ESD0220  DS    0H
         MVC   0(MSG_08_L,R4),MSG_08
         USING MSG_08,R4
         ICM   R1,15,ESDDATA_LENGTH
         BAL   R14,NBR0000
         MVC   MSG_08_LENGTH,DXD_NUMBER
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0230
         B     ESD5000
         DROP  R4

ESD0230  DS    0H
         MVC   0(MSG_09_L,R4),MSG_09
         USING MSG_09,R4
         UNPK  MSG_09_ALIGN(3),ESDDATA_ALIGN(2)
         TR    MSG_09_ALIGN,HEXCHAR
         MVI   MSG_09_ALIGN+2,C' '
         CLI   ESDDATA_ALIGN,X'01'         HALFWORD ALIGNED?
         BE    ESD0240
         CLI   ESDDATA_ALIGN,X'02'         FULLWORD ALIGNED?
         BE    ESD0250
         CLI   ESDDATA_ALIGN,X'03'         DOUBLE WORD ALIGNED?
         BE    ESD0260
         CLI   ESDDATA_ALIGN,X'0C'         4K PAGE ALIGNED?
         BE    ESD0270
         B     ESD0280
ESD0240  DS    0H
         MVC   MSG_09_DESC,ALIGN_DESC_HALFWORD
         B     ESD0280
ESD0250  DS    0H
         MVC   MSG_09_DESC,ALIGN_DESC_FULLWORD
         B     ESD0280
ESD0260  DS    0H
         MVC   MSG_09_DESC,ALIGN_DESC_DWORD
         B     ESD0280
ESD0270  DS    0H
         MVC   MSG_09_DESC,ALIGN_DESC_PAGE
         B     ESD0280
ESD0280  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0290
         B     ESD5000
         DROP  R4

ESD0290  DS    0H
         MVC   0(MSG_10_L,R4),MSG_10
         USING MSG_10,R4
         UNPK  MSG_10_USABILITY(3),ESDDATA_USABILITY(2)
         TR    MSG_10_USABILITY,HEXCHAR
         MVI   MSG_10_USABILITY+2,C' '
         CLI   ESDDATA_USABILITY,X'01'         NOT REUSABLE?
         BE    ESD0300
         CLI   ESDDATA_USABILITY,X'02'         REUSABLE?
         BE    ESD0310
         CLI   ESDDATA_USABILITY,X'03'         REENTRANT?
         BE    ESD0320
         CLI   ESDDATA_USABILITY,X'04'         REFRESHABLE?
         BE    ESD0330
         B     ESD0340
ESD0300  DS    0H
         MVC   MSG_10_DESC(L'NONE),NONE
         B     ESD0340
ESD0310  DS    0H
         MVC   MSG_10_DESC,USABILITY_DESC_REUSABLE
         B     ESD0340
ESD0320  DS    0H
         MVC   MSG_10_DESC,USABILITY_DESC_REENTRANT
         B     ESD0340
ESD0330  DS    0H
         MVC   MSG_10_DESC,USABILITY_DESC_REFRESH
ESD0340  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0350
         B     ESD5000
         DROP  R4

ESD0350  DS    0H
         MVC   0(MSG_11_L,R4),MSG_11
         USING MSG_11,R4
         UNPK  MSG_11_AMODE(3),ESDDATA_AMODE(2)
         TR    MSG_11_AMODE,HEXCHAR
         MVI   MSG_11_AMODE+2,C' '
         CLI   ESDDATA_AMODE,X'01'       AMODE 24?
         BE    ESD0360
         CLI   ESDDATA_AMODE,X'02'       AMODE 31?
         BE    ESD0370
         CLI   ESDDATA_AMODE,X'03'       AMODE ANY?
         BE    ESD0380
         CLI   ESDDATA_AMODE,X'04'       AMODE MIN?? (WHAT'S THAT?)
         BE    ESD0390
         CLI   ESDDATA_AMODE,X'06'       AMODE 64?
         BE    ESD0400
         B     ESD0410
ESD0360  DS    0H
         MVC   MSG_11_DESC,AMODE_DESC_24
         B     ESD0410
ESD0370  DS    0H
         MVC   MSG_11_DESC,AMODE_DESC_31
         B     ESD0410
ESD0380  DS    0H
         MVC   MSG_11_DESC,AMODE_DESC_ANY
         B     ESD0410
ESD0390  DS    0H
         MVC   MSG_11_DESC,AMODE_DESC_MIN
         B     ESD0410
ESD0400  DS    0H
         MVC   MSG_11_DESC,AMODE_DESC_64
ESD0410  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0420
         B     ESD5000
         DROP  R4

ESD0420  DS    0H
         MVC   0(MSG_12_L,R4),MSG_12
         USING MSG_12,R4
         UNPK  MSG_12_RMODE(3),ESDDATA_RMODE(2)
         TR    MSG_12_RMODE,HEXCHAR
         MVI   MSG_12_RMODE+2,C' '
         CLI   ESDDATA_RMODE,X'01'            RMODE 24?
         BE    ESD0430
         CLI   ESDDATA_RMODE,X'03'            RMODE 31 OR ANY?
         BE    ESD0440
         B     ESD0450
ESD0430  DS    0H
         MVC   MSG_12_DESC,AMODE_DESC_24      (USE AMODE DESC)
         B     ESD0450
ESD0440  DS    0H
         MVC   MSG_12_DESC,AMODE_DESC_ANY     (USE AMODE DESC)
ESD0450  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0460
         B     ESD5000
         DROP  R4

ESD0460  DS    0H
         MVC   0(MSG_13_L,R4),MSG_13
         USING MSG_13,R4
         UNPK  MSG_13_RECFM(5),ESDDATA_RECFM(3)
         TR    MSG_13_RECFM,HEXCHAR
         MVI   MSG_13_RECFM+4,C' '
         CLC   ESDDATA_RECFM,H1
         BH    ESD0470
         BNE   ESD0480
         MVC   MSG_13_DESC,RECFM_DESC_BYTESTREAM
         B     ESD0480
ESD0470  DS    0H
         MVC   MSG_13_DESC,RECFM_DESC_FIXED
ESD0480  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0490
         B     ESD5000
         DROP  R4

ESD0490  DS    0H
         MVC   0(MSG_14_L,R4),MSG_14
         USING MSG_14,R4
         UNPK  MSG_14_LOAD_FLAGS(3),ESDDATA_LOAD_FLAGS(2)
         TR    MSG_14_LOAD_FLAGS,HEXCHAR
         MVI   MSG_14_LOAD_FLAGS+2,C' '
         LA    R14,MSG_14_DESC
         TM    ESDDATA_LOAD_FLAGS,X'80'        READ ONLY
         BNO   ESD0500
         MVC   0(L'LOAD_DESC_READONLY,R14),LOAD_DESC_READONLY
         LA    R14,L'LOAD_DESC_READONLY+2(,R14)
ESD0500  DS    0H
         TM    ESDDATA_LOAD_FLAGS,X'40'        DO NOT LOAD?
         BNO   ESD0510
         MVC   0(L'LOAD_DESC_NOLOAD,R14),LOAD_DESC_NOLOAD
         LA    R14,L'LOAD_DESC_NOLOAD+2(,R14)
ESD0510  DS    0H
         TM    ESDDATA_LOAD_FLAGS,X'20'        MOVEABLE
         BNO   ESD0520
         MVC   0(L'LOAD_DESC_MOVEABLE,R14),LOAD_DESC_MOVEABLE
         LA    R14,L'LOAD_DESC_MOVEABLE+2(,R14)
ESD0520  DS    0H
         TM    ESDDATA_LOAD_FLAGS,X'10'        SHAREABLE
         BNO   ESD0530
         MVC   0(L'LOAD_DESC_SHAREABLE,R14),LOAD_DESC_SHAREABLE
         LA    R14,L'LOAD_DESC_SHAREABLE+2(,R14)
ESD0530  DS    0H
         TM    ESDDATA_LOAD_FLAGS,X'08'        DEFERRED
         BNO   ESD0540
         MVC   0(L'LOAD_DESC_DEFERRED,R14),LOAD_DESC_DEFERRED
         LA    R14,L'LOAD_DESC_DEFERRED+2(,R14)
ESD0540  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0550
         B     ESD5000
         DROP  R4

ESD0550  DS    0H
         MVC   0(MSG_15_L,R4),MSG_15
         USING MSG_15,R4
         UNPK  MSG_15_BIND_FLAGS(3),ESDDATA_BIND_FLAGS(2)
         TR    MSG_15_BIND_FLAGS,HEXCHAR
         MVI   MSG_15_BIND_FLAGS+2,C' '
         LA    R14,MSG_15_BIND_DESC
         TM    ESDDATA_BIND_FLAGS,X'80'     BINDER GENERATED SD, ETC?
         BNO   ESD0560
         MVC   0(L'BIND_DESC_GENNED,R14),BIND_DESC_GENNED
         LA    R14,L'BIND_DESC_GENNED+2(,R14)
ESD0560  DS    0H
         TM    ESDDATA_BIND_FLAGS,X'40'     NO CLASS DATA?
         BNO   ESD0570
         MVC   0(L'BIND_DESC_NOCLASS,R14),BIND_DESC_NOCLASS
         LA    R14,L'BIND_DESC_NOCLASS+2(,R14)
ESD0570  DS    0H
         TM    ESDDATA_BIND_FLAGS,X'20'     VARIABLE LENGTH RECORDS?
         BNO   ESD0580
         MVC   0(L'BIND_DESC_VARIABLE,R14),BIND_DESC_VARIABLE
         LA    R14,L'BIND_DESC_VARIABLE+2(,R14)
ESD0580  DS    0H
         TM    ESDDATA_BIND_FLAGS,X'10'     DESCRIPTIVE DATA?
         BNO   ESD0590
         MVC   0(L'BIND_DESC_DESCRIPTIVE,R14),BIND_DESC_DESCRIPTIVE
         LA    R14,L'BIND_DESC_DESCRIPTIVE+2(,R14)
ESD0590  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0600
         B     ESD5000
ESD0600  DS    0H
         TM    ESDDATA_BIND_FLAGS,X'0F'
         BNO   ESD0630
         LA    R14,MSG_15_BIND_DESC
         TM    ESDDATA_BIND_FLAGS,X'08'     PART INITIALIZERS?
         BNO   ESD0610
         MVC   0(L'BIND_DESC_INITIALIZERS,R14),BIND_DESC_INITIALIZERs
         LA    R14,L'BIND_DESC_INITIALIZERS+2(,R14)
ESD0610  DS    0H
         TM    ESDDATA_BIND_FLAGS,X'04'     FILL CHARACTER SPECIFIED?
         BNO   ESD0620
         MVC   0(L'BIND_DESC_FILL,R14),BIND_DESC_FILL
         LA    R14,L'BIND_DESC_FILL+2(,R14)
ESD0620  DS    0H
         TM    ESDDATA_BIND_FLAGS,X'02'     PADDING?
         BNO   ESD0630
         MVC   0(L'BIND_DESC_PADDING,R14),BIND_DESC_PADDING
         LA    R14,L'BIND_DESC_PADDING+2(,R14)
ESD0630  DS    0H
         CLC   0(80,R4),COMM_BLANKS
         BE    ESD0640
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0640
         B     ESD5000
         DROP  R4

ESD0640  DS    0H
         MVC   0(MSG_16_L,R4),MSG_16
         USING MSG_16,R4
         UNPK  MSG_16_BIND_CNTL(3),ESDDATA_BIND_CNTL(2)
         TR    MSG_16_BIND_CNTL,HEXCHAR
         MVI   MSG_16_BIND_CNTL+2,C' '
         LA    R14,MSG_16_DESC
         TM    ESDDATA_BIND_CNTL,X'30'     CATENATED TEXT?
         BNZ   ESD0650
         MVC   0(L'BIND_DESC_CATENATED,R14),BIND_DESC_CATENATED
         LA    R14,L'BIND_DESC_CATENATED+2(,R14)
         B     ESD0660
ESD0650  DS    0H
         TM    ESDDATA_BIND_CNTL,X'10'     MERGED TEXT?
         BNO   ESD0660
         MVC   0(L'BIND_DESC_MERGED,R14),BIND_DESC_MERGED
         LA    R14,L'BIND_DESC_MERGED+2(,R14)
ESD0660  DS    0H
         TM    ESDDATA_BIND_CNTL,X'02'     INSTRUCTIONS?
         BNO   ESD0670
         MVC   0(L'BIND_DESC_INSTRUCTIONS,R14),BIND_DESC_INSTRUCTIONS
         LA    R14,L'BIND_DESC_INSTRUCTIONS+2(,R14)
ESD0670  DS    0H
         TM    ESDDATA_BIND_CNTL,X'01'     DATA?
         BNO   ESD0680
         MVC   0(L'BIND_DESC_DATA,R14),BIND_DESC_DATA
         LA    R14,L'BIND_DESC_DATA+2(,R14)
ESD0680  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0690
         B     ESD5000
         DROP  R4

ESD0690  DS    0H
         MVC   0(MSG_17_L,R4),MSG_17
         USING MSG_17,R4
         UNPK  MSG_17_ATTR(3),ESDDATA_ATTRIBUTES(2)
         TR    MSG_17_ATTR,HEXCHAR
         MVI   MSG_17_ATTR+2,C' '
         LA    R14,MSG_17_DESC
         TM    ESDDATA_ATTRIBUTES,X'80'    SYSTEM LE?
         BNO   ESD0700
         MVC   0(L'ATTR_DESC_SYSTEMLE,R14),ATTR_DESC_SYSTEMLE
         LA    R14,L'ATTR_DESC_SYSTEMLE+2(,R14)
ESD0700  DS    0H
         TM    ESDDATA_ATTRIBUTES,X'40'    LIGHTWEIGHT LE?
         BNO   ESD0710
         MVC   0(L'ATTR_DESC_LIGHTLE,R14),ATTR_DESC_LIGHTLE
         LA    R14,L'ATTR_DESC_LIGHTLE+2(,R14)
ESD0710  DS    0H
         TM    ESDDATA_ATTRIBUTES,X'0C'    I LEVEL ERRORS?
         BNZ   ESD0720
         MVC   0(L'ATTR_DESC_ILEVEL,R14),ATTR_DESC_ILEVEL
         LA    R14,L'ATTR_DESC_ILEVEL+2(,R14)
ESD0720  DS    0H
         TM    ESDDATA_ATTRIBUTES,X'0C'    S LEVEL ERRORS?
         BNO   ESD0730
         MVC   0(L'ATTR_DESC_SLEVEL,R14),ATTR_DESC_SLEVEL
         LA    R14,L'ATTR_DESC_SLEVEL+2(,R14)
ESD0730  DS    0H
         TM    ESDDATA_ATTRIBUTES,X'08'    E LEVEL ERRORS?
         BNO   ESD0740
         MVC   0(L'ATTR_DESC_ELEVEL,R14),ATTR_DESC_ELEVEL
         LA    R14,L'ATTR_DESC_ELEVEL+2(,R14)
ESD0740  DS    0H
         TM    ESDDATA_ATTRIBUTES,X'04'    W LEVEL ERRORS?
         BNO   ESD0750
         MVC   0(L'ATTR_DESC_WLEVEL,R14),ATTR_DESC_WLEVEL
         LA    R14,L'ATTR_DESC_WLEVEL+2(,R14)
ESD0750  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0760
         B     ESD5000
         DROP  R4

ESD0760  DS    0H
         MVC   0(MSG_18_L,R4),MSG_18
         USING MSG_18,R4
         MVC   MSG_18_XATTR_CLASS,ESDDATA_XATTR_CLASS
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0770
         B     ESD5000
         DROP  R4

ESD0770  DS    0H
         MVC   0(MSG_19_L,R4),MSG_19
         USING MSG_19,R4
         ICM   R1,15,ESDDATA_XATTR_OFFSET
         BAL   R14,NBR0000
         MVC   MSG_19_XATTR_OFFSET,DXD_NUMBER
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0780
         B     ESD5000
         DROP  R4

ESD0780  DS    0H
         MVC   0(MSG_20_L,R4),MSG_20
         USING MSG_20,R4
         SR    R1,R1
         ICM   R1,3,ESDDATA_SEGMENT
         BAL   R14,NBR0000
         MVC   MSG_20_SEGMENT,DXD_NUMBER
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0790
         B     ESD5000
         DROP  R4

ESD0790  DS    0H
         MVC   0(MSG_21_L,R4),MSG_21
         USING MSG_21,R4
         SR    R1,R1
         ICM   R1,3,ESDDATA_REGION
         BAL   R14,NBR0000
         MVC   MSG_21_REGION,DXD_NUMBER
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0800
         B     ESD5000
         DROP  R4

ESD0800  DS    0H
         MVC   0(MSG_22_L,R4),MSG_22
         USING MSG_22,R4
         MVC   MSG_22_SIGNATURE,ESDDATA_SIGNATURE
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0810
         B     ESD5000
         DROP  R4

ESD0810  DS    0H
         MVC   0(MSG_23_L,R4),MSG_23
         USING MSG_23,R4
         UNPK  MSG_23_AUTOCALL(3),ESDDATA_AUTOCALL(2)
         TR    MSG_23_AUTOCALL,HEXCHAR
         MVI   MSG_23_AUTOCALL+2,C' '
         TM    ESDDATA_AUTOCALL,X'40'
         BNO   ESD0820
         MVC   MSG_23_DESC(L'AUTOCALL_DESC_ALIAS),AUTOCALL_DESC_ALIAS
ESD0820  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0830
         B     ESD5000
         DROP  R4

ESD0830  DS    0H
         MVC   0(MSG_24_L,R4),MSG_24
         USING MSG_24,R4
         UNPK  MSG_24_STATUS(3),ESDDATA_STATUS(2)
         TR    MSG_24_STATUS,HEXCHAR
         MVI   MSG_24_STATUS+2,C' '
         LA    R14,MSG_24_DESC
         TM    ESDDATA_STATUS,ESD_RESOLVED
         BNO   ESD0840
         MVC   0(L'DESC_RESOLVED,R14),DESC_RESOLVED
         LA    R14,L'DESC_RESOLVED+2(,R14)
ESD0840  DS    0H
         TM    ESDDATA_STATUS,ESD_AC_PROC
         BNO   ESD0850
         MVC   0(L'DESC_AC_PROC,R14),DESC_AC_PROC
         LA    R14,L'DESC_AC_PROC+2(,R14)
ESD0850  DS    0H
         TM    ESDDATA_STATUS,ESD_INCLUDE
         BNO   ESD0860
         MVC   0(L'DESC_INCLUDE,R14),DESC_INCLUDE
         LA    R14,L'DESC_INCLUDE+2(,R14)
ESD0860  DS    0H
         TM    ESDDATA_STATUS,ESD_NOT_FOUND
         BNO   ESD0870
         MVC   0(L'DESC_NOT_FOUND,R14),DESC_NOT_FOUND
         LA    R14,L'DESC_NOT_FOUND+2(,R14)
ESD0870  DS    0H
         TM    ESDDATA_STATUS,ESD_EXTERNAL
         BNO   ESD0880
         MVC   0(L'DESC_EXTERNAL,R14),DESC_EXTERNAL
         LA    R14,L'DESC_EXTERNAL+2(,R14)
ESD0880  DS    0H
         TM    ESDDATA_STATUS,ESD_NOCALL
         BNO   ESD0890
         MVC   0(L'DESC_NO_CALL,R14),DESC_NO_CALL
         LA    R14,L'DESC_NO_CALL+2(,R14)
ESD0890  DS    0H
         TM    ESDDATA_STATUS,ESD_NO_REFS
         BNO   ESD0900
         MVC   0(L'DESC_NO_REFS,R14),DESC_NO_REFS
         LA    R14,L'DESC_NO_REFS+2(,R14)
ESD0900  DS    0H
         TM    ESDDATA_STATUS,ESD_LIBRARY
         BNO   ESD0910
         MVC   0(L'DESC_LIBRARY,R14),DESC_LIBRARY
         LA    R14,L'DESC_LIBRARY+2(,R14)
ESD0910  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0920
         B     ESD5000
         DROP  R4

ESD0920  DS    0H
         MVC   0(MSG_25_L,R4),MSG_25
         USING MSG_25,R4
         MVC   MSG_25_TARGET,ESDDATA_TARGET
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0930
         B     ESD5000
         DROP  R4

ESD0930  DS    0H
         MVC   0(MSG_26_L,R4),MSG_26
         USING MSG_26,R4
         MVC   MSG_26_RESIDENT_CLASS,ESDDATA_RESIDENT_CLASS
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0940
         B     ESD5000
         DROP  R4

ESD0940  DS    0H
         MVC   0(MSG_27_L,R4),MSG_27
         USING MSG_27,R4
         ICM   R1,15,ESDDATA_ELEMENT_OFFSET
         BAL   R14,NBR0000
         MVC   MSG_27_ELEMENT_OFFSET,DXD_NUMBER
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0950
         B     ESD5000
         DROP  R4

ESD0950  DS    0H
         MVC   0(MSG_28_L,R4),MSG_28
         USING MSG_28,R4
         A     R4,DXD_VWIDTH
         BCT   R3,ESD0960
         B     ESD5000
         MVC   MSG_28_ADA,ESDDATA_ADA
         DROP  R4

ESD0960  DS    0H
         MVC   0(MSG_29_L,R4),MSG_29
         USING MSG_29,R4
         ICM   R1,15,ESDDATA_PRIORITY
         BAL   R14,NBR0000
         MVC   MSG_29_PRIORITY,DXD_NUMBER
         A     R4,DXD_VWIDTH
         DROP  R4

ESD5000  DS     0H
         A     R4,DXD_VWIDTH
         A     R4,DXD_VWIDTH
         MVC   0(TOTAL_MSG_L,R4),TOTAL_MSG
         USING TOTAL_MSG,R4
         L     R1,DSPCREQ_RECORD_NBR
         CVD   R1,COMM_DWORD
         ED    TOTAL_MSG_CURRENT,COMM_DWORD+5
         L     R1,DATASPACE_1_LAST_RECORD
         CVD   R1,COMM_DWORD
         ED    TOTAL_MSG_TOTAL,COMM_DWORD+5
         DROP  R4

         B     DISP0000

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
NBR0000  DS    0H
         CVD   R1,COMM_DWORD
         MVC   DXD_NUMBER,EDIT_WORD
         ED    DXD_NUMBER,COMM_DWORD+3
         LA    R15,L'DXD_NUMBER
NBR0010  DS    0H
         CLI   DXD_NUMBER,C' '
         BNER  R14
         MVC   DXD_NUMBER(L'DXD_NUMBER),DXD_NUMBER+1
         MVI   DXD_NUMBER+(L'DXD_NUMBER-1),C' '
         BCT   R15,NBR0010
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         MVI   COMM_SESS_FUNC,$SESS_REMOVE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0000 DS    0H
         ITRACE ID=DISPLAY
         MVC   SESS_DISP_PANEL,PANEL_NAME
         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR
         L     R15,COMM_V_OSDISP
         BALR  R14,R15
         ITRACE ID=DISP_RC,                                            +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         CLC   COMM_NEW_FORMAT,COMM_BLANKS NEW FORMAT SELECTED?
         BNE   EXIT0000                    YES
         CLI   COMM_SESS_FUNC,0            SESSION FUNCTION?
         BNE   EXIT0000                    YES
         OC    SESS_RC,SESS_RC             RC=0?
         BZ    DISP0005                    YES
         ITRACE ID=ENDING
         MVI   COMM_SESS_FUNC,$SESS_REMOVE SET FUNCTION
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Check for scroll command(s)                                  *
*                                                                     *
*        Note that 'up', 'down', 'top', and 'bottom' are the only     *
*        valid scroll commands.                                       *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0005 DS    0H
         CLI   SPF_ZSCROLLA,C'C'           CSR?
         BNE   DISP0010                    NO
         MVC   SPF_ZSCROLLN,F1             CSR SCROLLING IS 1 LINE
DISP0010 DS    0H
         ITRACE ID=ZVERB,                                              +
               DATA1=SPF_ZVERB,                                        +
               DATA2=SPF_ZSCROLLA
         CLI   SPF_ZVERB,C'B'              BOTTOM?
         BE    DISP0100                    YES
         CLI   SPF_ZVERB,C'D'              DOWN?
         BE    DISP0200                    YES
         CLI   SPF_ZVERB,C'T'              TOP?
         BE    DISP0300                    YES
         CLI   SPF_ZVERB,C'U'              UP?
         BE    DISP0400                    YES
         B     DISP0000

DISP0100 DS    0H
         ITRACE ID=BOTTOM
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD
         B     ESD0000
DISP0200 DS    0H
         ITRACE ID=DOWN,                                               +
               DATA1=SPF_ZSCROLLA,                                     +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZSCROLLA,C'M'                   MAX?
         BE    DISP0100                            YES.. SAME AS BOTTOM
         L     R1,SPF_ZSCROLLN                     LINES TO SCROLL
         A     R1,DATASPACE_1_DISPLAY_FIRST_RECORD PLUS CURRENT RECORD
         C     R1,DATASPACE_1_LAST_RECORD          BEYOND HIGH RECORD?
         BH    DISP0100                            YES.. GO TO BOTTOM
         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER
         B     ESD0000                             GO BUILD DATA
DISP0300 DS    0H
         ITRACE ID=TOP
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1
         B     ESD0000
DISP0400 DS    0H
         ITRACE ID=UP,                                                 +
               DATA1=SPF_ZSCROLLA,                                     +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZSCROLLA,C'M'                   MAX?
         BE    DISP0300                            YES.. GO TO TOP
         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD
         S     R1,SPF_ZSCROLLN                     MINUS SCROLL
         C     R1,F1                               BELOW 1?
         BL    DISP0300                            YES, GO TO TOP
         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER
         B     ESD0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MSG0000  DS    0H
         ITRACE ID=CALL_MSG,                                           +
               DATA1=(COMM_MSG_ID,2)
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         BR    R2
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLEAN000 DS    0H
         ITRACE ID=CLEAN_UP,                                           +
               DATA1=(DXD_VDATA_ADDR,4),                               +
               DATA2=(DXD_VDATA_LENGTH,4)
         ICM   R1,15,DXD_VDATA_ADDR         VDATA GETMAINED?
         BZ    CLEAN010                     NO
         L     R0,DXD_VDATA_LENGTH          VDATA LENGTH
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                      FREE VDATA
         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR
         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH
CLEAN010 DS    0H
         LA    R0,OSLMESD_DXD_L             WORK AREA SIZE
         LR    R1,R13                       COPY WORK AREA ADDRESS
         L     R13,4(R13)                   RESTORE R13
         FREEMAIN RU,                       FREE WORK AREA             +
               A=(1),                                                  +
               LV=(0)
         XC    SESS_FORMATTER_DXD_ADDR,SESS_FORMATTER_DXD_ADDR
         XC    SESS_FORMATTER_DXD_LENGTH,SESS_FORMATTER_DXD_LENGTH
         SR    R15,R15
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
EXIT0010 DS    0H
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         SR    R15,R15               SET RC
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
HEXCHAR              EQU  *-C'0'
                     DC   C'0123456789ABCDEF'

F1                   DC   F'1'
F4                   DC   F'4'
H1                   DC   H'1'
NONE                 DC   C'NONE'
PANEL_NAME           DC   CL8'OSLMESD'
EDIT_WORD            DC   X'402020206B2020206B202120'

DESC_AC_PROC         DC   C'Processed by AUTOCALL'
DESC_ADA             DC   C'Associated data'
DESC_DESCRIPTOR      DC   C'Descriptor'
DESC_EXTERNAL        DC   C'Resolved outside module'
DESC_INCLUDE         DC   C'INCLUDE attempted'
DESC_LIBRARY         DC   C'Call library requested'
DESC_MANGLED         DC   C'Mangled'
DESC_MINOR           DC   C'Minor (autocalled from LPA)'
DESC_NEVERCALL       DC   C'Nevercall'
DESC_NO_CALL         DC   C'NOCALL/NEVERCALL'
DESC_NO_REFS         DC   C'No references'
DESC_NOT_FOUND       DC   C'Not found'
DESC_RENAMEABLE      DC   C'Renameable'
DESC_RESOLVED        DC   C'Resolved'
DESC_STRONG          DC   C'Strong'
DESC_XPLINK          DC   C'XPLINK'

NAME_SPACE_DESC      DS   0C
                     DC   CL50'Class and section names (SD, ED)'
                     DC   CL50'Labels and references (LD, ER)'
                     DC   CL50'Pseudoregisters (PR, PD)'
                     DC   CL50'Parts (PR, PD) in writeable static'
                     DC   CL50'Reserved'


SCOPE_DESC_L         DC   CL50'Library (ER/strong)'
SCOPE_DESC_M         DC   CL50'Module (SD/CSECT, LD, ER/weak, CM, PR, D+
               S, PD)'
SCOPE_DESC_S         DC   CL50'Section (SD/PRIVATE, ST, ET)'
SCOPE_DESC_X         DC   CL50'Symbol can be imported or exported'

ALIGN_DESC_HALFWORD  DC   CL10'Halfword'
ALIGN_DESC_FULLWORD  DC   CL15'Fullword'
ALIGN_DESC_DWORD     DC   CL15'Double word'
ALIGN_DESC_PAGE      DC   CL15'4k Page'

USABILITY_DESC_REUSABLE  DC  CL12'Reusable'
USABILITY_DESC_REENTRANT DC  CL12'Reentrant'
USABILITY_DESC_REFRESH   DC  CL12'Refreshable'

AMODE_DESC_24          DC   CL3'24'
AMODE_DESC_31          DC   CL3'31'
AMODE_DESC_ANY         DC   CL3'ANY'
AMODE_DESC_MIN         DC   CL3'MIN'
AMODE_DESC_64          DC   CL3'64'

RECFM_DESC_BYTESTREAM  DC  CL12'Byte stream'
RECFM_DESC_FIXED       DC  CL12'Fixed length'

LOAD_DESC_READONLY     DC  C'Read only'
LOAD_DESC_NOLOAD       DC  C'Do not load'
LOAD_DESC_MOVEABLE     DC  C'Moveable'
LOAD_DESC_SHAREABLE    DC  C'Shareable'
LOAD_DESC_DEFERRED     DC  C'Deferred'

BIND_DESC_GENNED       DC  C'Binder generated SD, ED, LD'
BIND_DESC_NOCLASS      DC  C'No class data'
BIND_DESC_VARIABLE     DC  C'Variable length records'
BIND_DESC_DESCRIPTIVE  DC  C'Descriptive data'
BIND_DESC_INITIALIZERS DC  C'Contains initializers'
BIND_DESC_FILL         DC  C'Fill specified'
BIND_DESC_PADDING      DC  C'Class padding'
BIND_DESC_CATENATED    DC  C'Catenated text'
BIND_DESC_MERGED       DC  C'Merged text'
BIND_DESC_INSTRUCTIONS DC  C'Instructions'
BIND_DESC_DATA         DC  C'Data'

ATTR_DESC_SYSTEMLE     DC  C'System LE'
ATTR_DESC_LIGHTLE      DC  C'Lightweight LE'
ATTR_DESC_ELEVEL       DC  C'E-level errors'
ATTR_DESC_ILEVEL       DC  C'I-level errors'
ATTR_DESC_SLEVEL       DC  C'S-level errors'
ATTR_DESC_WLEVEL       DC  C'W-level errors'

AUTOCALL_DESC_ALIAS    DC  CL5'ALIAS'

                       LTORG


TOTAL_MSG            DS   0C
                     DC   AL1($SCREEN_ATTR_NORMAL)
                     DC   C'Displaying item '
                     DC   AL1($SCREEN_ATTR_HIGH)
TOTAL_MSG_CURRENT    DC   X'402020202120'
                     DC   AL1($SCREEN_ATTR_NORMAL)
                     DC   C' of'
                     DC   AL1($SCREEN_ATTR_HIGH)
TOTAL_MSG_TOTAL      DC   X'402020202120'
                     DC   AL1($SCREEN_ATTR_NORMAL)
TOTAL_MSG_L          EQU  *-TOTAL_MSG

MSG_01               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Name           '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_01_NAME          DC   CL8' '
MSG_01_L             EQU  *-MSG_01

MSG_02               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Type           '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_02_TYPE          DC   CL2' '
                     DC   C'         '
MSG_02_DESC          DC   CL60' '
MSG_02_L             EQU  *-MSG_02

MSG_03               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Qualifier      '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_03_QUAL          DC   CL2' '
                     DC   C'         '
MSG_03_DESC          DC   CL60' '
MSG_03_L             EQU  *-MSG_03

MSG_04               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Name space     '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_04_NAME_SPACE    DC   C' '
                     DC   C'         '
MSG_04_DESC          DC   CL50' '
MSG_04_L             EQU  *-MSG_04

MSG_05               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Scope          '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_05_SCOPE         DC   C' '
                     DC   C'         '
MSG_05_DESC          DC   CL50' '
MSG_05_L             EQU  *-MSG_05

MSG_06               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'SYMBOL attr    '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_06_SYMBOL_ATTR   DC   CL2' '
                     DC   C'        '
MSG_06_DESC          DC   CL50' '
MSG_06_L             EQU  *-MSG_06

MSG_07               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'RES section    '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_07_RESIDENT      DC   CL8' '
MSG_07_L             EQU  *-MSG_07

MSG_08               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Length         '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_08_LENGTH        DC   X'402020206B2020206B202120'
MSG_08_L             EQU  *-MSG_08

MSG_09               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Alignment      '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_09_ALIGN         DC   CL2' '
                     DC   C'        '
MSG_09_DESC          DC   CL15' '
MSG_09_L             EQU  *-MSG_09

MSG_10               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Usability      '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_10_USABILITY     DC   CL2' '
                     DC   C'        '
MSG_10_DESC          DC   CL12' '
MSG_10_L             EQU  *-MSG_10

MSG_11               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'AMODE          '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_11_AMODE         DC   CL2' '
                     DC   C'        '
MSG_11_DESC          DC   CL3' '
MSG_11_L             EQU  *-MSG_11

MSG_12               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'RMODE          '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_12_RMODE         DC   CL2' '
                     DC   C'        '
MSG_12_DESC          DC   CL3' '
MSG_12_L             EQU  *-MSG_12

MSG_13               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Record format  '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_13_RECFM         DC   CL4' '
                     DC   C'      '
MSG_13_DESC          DC   CL12' '
MSG_13_L             EQU  *-MSG_13

MSG_14               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'LOAD flags     '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_14_LOAD_FLAGS    DC   CL2' '
                     DC   C'        '
MSG_14_DESC          DC   CL50' '
MSG_14_L             EQU  *-MSG_14

MSG_15               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'BIND flags     '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_15_BIND_FLAGS    DC   CL2' '
                     DC   C'        '
MSG_15_BIND_DESC     DC   CL50' '
MSG_15_L             EQU  *-MSG_15

MSG_16               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'BIND CNTL      '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_16_BIND_CNTL     DC   CL2' '
                     DC   C'        '
MSG_16_DESC          DC   CL50' '
MSG_16_L             EQU  *-MSG_16

MSG_17               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Attributes     '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_17_ATTR          DC   CL2' '
                     DC   C'        '
MSG_17_DESC          DC   CL50' '
MSG_17_L             EQU  *-MSG_17

MSG_18               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'XATTR class    '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_18_XATTR_CLASS   DC   CL8' '
MSG_18_L             EQU  *-MSG_18

MSG_19               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'XATTR offset   '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_19_XATTR_OFFSET  DC   CL12' '
MSG_19_L             EQU  *-MSG_19

MSG_20               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Segment        '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_20_SEGMENT       DC   CL12' '
MSG_20_L             EQU  *-MSG_20

MSG_21               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Region         '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_21_REGION        DC   CL12' '
MSG_21_L             EQU  *-MSG_21

MSG_22               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Signature      '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_22_SIGNATURE     DC   CL8' '
MSG_22_L             EQU  *-MSG_22

MSG_23               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Autocall       '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_23_AUTOCALL      DC   CL2' '
                     DC   C'      '
MSG_23_DESC          DC   CL5' '
MSG_23_L             EQU  *-MSG_23

MSG_24               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Status         '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_24_STATUS        DC   CL2' '
                     DC   C'        '
MSG_24_DESC          DC   CL50' '
MSG_24_L             EQU  *-MSG_24

MSG_25               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Target         '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_25_TARGET        DC   CL8' '
MSG_25_L             EQU  *-MSG_25

MSG_26               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'RESIDENT class '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_26_RESIDENT_CLASS DC  CL50' '
MSG_26_L             EQU  *-MSG_26

MSG_27               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Element offset '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_27_ELEMENT_OFFSET DC  CL12' '
MSG_27_L             EQU  *-MSG_27

MSG_28               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Associated data'
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_28_ADA           DC   CL50' '
MSG_28_L             EQU  *-MSG_28

MSG_29               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Priority       '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_29_PRIORITY      DC   CL12' '
MSG_29_L             EQU  *-MSG_29


OSLMESDEND           EQU  *
* ------------------------------------------------------------------- *
*        WORK AREA                                                    *
* ------------------------------------------------------------------- *
OSLMESD_DXD          DSECT
                     COPY  DXDPREF

DXD_VDATA_ADDR       DS    A
DXD_VDATA_LENGTH     DS    F

DXD_VWIDTH           DS    F
DXD_VDEPTH           DS    F

DXD_NUMBER           DS    CL12

DXD_FLAGS            DS    X
$FLAGS_DISPLAYED     EQU   X'80'            SOME DATA DISPLAYED

                     DSPCREQ  DSECT=NO

                     COPY  ESDDATA
OSLMESD_DXD_L        EQU   *-OSLMESD_DXD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEWBUFF FUNC=MAPBUF,                                          +
               TYPE=ESD,                                               +
               HEADREG=R8,                                             +
               ENTRYREG=R7,                                            +
               SIZE=50,                                                +
               VERSION=5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT    DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD      TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY        ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY        TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY        REGEQU
         END         OSLMESD
