* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: OSVHEX                                                *
*                                                                     *
*  Build main body for vertical hex                                   *
*                                                                     *
* ------------------------------------------------------------------- *
OSVHEX   CSECT
OSVHEX   AMODE 31
OSVHEX   RMODE ANY
         USING OSCOMM,R12
         USING OSVHEX,R15
         B     INIT0000
MODID    DC    CL8'OSVHEX'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(OSVHEXEND-OSVHEX)
INIT0000 DS    0H
         USING OSCOMM,R12                      DEFINE COMMON AREA BASE
         USING SESSION,R11                     DEFINE COMMON AREA BASE
         USING DS1FMTID,SESS_DSCB              DEFINE BASE
         STM   R14,R12,12(R13)                 SAVE REGS
         LR    R10,R15                         COPY ENTRY POINT
         DROP  R15
         USING OSVHEX,R10                       DEFINE BASE
         L     R9,COMM_OSSPFD
         USING OSSPFD,R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE
         BNE   INIT0100
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         ICM   R0,15,SESS_FORMATTER_DXD_ADDR
         BNZ   ERR0070
         LA    R0,OSVHEX_DXD_L
         ST    R0,SESS_FORMATTER_DXD_LENGTH
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,SESS_FORMATTER_DXD_ADDR
         LR    R2,R1
         LR    R0,R1
         LA    R1,OSVHEX_DXD_L
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14
         USING OSVHEX_WORK,R13                  DEFINE WORK AREA BASE
         ST    R13,4(R2)                        SAVE R13
         ST    R2,8(R13)                        CHAIN SAVE AREA
         LR    R13,R2                           COPY WORK AREA ADDRESS
         MVC   DXD_CSECT,MODID
         ITRACE ID=ENTRY1
         LA    R1,DATASPACE_1                   USE DATA SPACE 1
         ST    R1,DSPCREQ_DATASPACE
         TM    SESS_KEYWORD_FLAGS,$KEYWORD_PATH  DATA FROM HFS?
         BO    INIT0010                          YES
         TM    SESS_DATA_TYPE,$DATA_TYPE_VSAM    DATA FROM VSAM FILE?
         BO    INIT0020                          NO
         MVC   DXD_PANEL,OS0001                  PANEL FOR NON-VSAM
         B     INIT0030
INIT0010 DS    0H
         MVC   DXD_PANEL,OSHFS                   PANEL FOR HFS(ES)
         B     INIT0030
INIT0020 DS    0H
         MVC   DXD_PANEL,OS0008                  PANEL FOR VSAM
INIT0030 DS    0H
         LA    R1,DXD_PANEL
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                           GETMAIN VDATA
         ST    R0,DXD_VDATA_LENGTH
         ST    R1,DXD_VDATA_ADDR
         MVC   DXD_VWIDTH,SPF_VWIDTH
         MVC   DXD_VDEPTH,SPF_VDEPTH
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR NO CURSOR POSITION
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0100 DS    0H
         ICM   R15,15,SESS_FORMATTER_DXD_ADDR
         BZ    ERR0080
         ST    R13,4(R15)
         ST    R15,8(R13)
         LR    R13,R15
         ITRACE ID=ENTRY2
         XC    DXD_RC,DXD_RC
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL
         BE    EXIT0000
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP
         BE    CLEAN000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETREIVE
         MVC   DSPCREQ_RECORD_ADDR,SESS_IO_AREA
MAIN0010 DS    0H
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0040 DS    0H
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
MAIN0050 DS    0H
         L     R0,DXD_VDATA_ADDR                VDATA BUFFER ADDRESS
         L     R1,DXD_VDATA_LENGTH              VDATA BUFFER LENGTH
         SR    R14,R14                          CLEAR R14
         SR    R15,R15                          CLEAR R15
         MVCL  R0,R14                           INITIALIZE VDATA BUFFER
         L     R7,DXD_VDEPTH                    LINES AVAIABLE
         L     R8,DXD_VDATA_ADDR                VDATA BUFFER ADDRESS
         SRL   R7,2                             DIVIDE BY 4
         LR    R1,R7                            COPY LINES
         A     R1,DSPCREQ_RECORD_NBR            PLUS STARTING RECORD
         BCTR  R1,0                             MINUS 1
         C     R1,DATASPACE_1_LAST_RECORD       AT END OF RECORDS?
         BNH   MAIN0070                         NO
         L     R1,DATASPACE_1_LAST_RECORD
MAIN0070 DS    0H
         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3
         MVC   SPF_RECORD_TO,DXD_WORK_1+1
* ------------------------------------------------------------------- *
*        "Retreive" the data and build the body of the SPF panel      *
* ------------------------------------------------------------------- *
MAIN0080 DS    0H
         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD
         BH    MAIN0170                         END OF RECORDS REACHED
         ITRACE ID=GET_RECD,                                           +
               DATA1=(DSPCREQ_RECORD_NBR,4),                           +
               DATA2=(DATASPACE_1_LAST_RECORD,4)
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE                OSDSPACE ENTRY POINT
         BALR  R14,R15                          LINK TO OSDSPACE
         CLI   DSPCREQ_RC,$DSPCREQ_NOT_STORED
         BE    MAIN0200                         NOT STORED
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0010
         ITRACE ID=RECORD,                                             +
               DATA1=(DSPCREQ_RECORD_ADDR,4),                          +
               DATA2=(DSPCREQ_RECORD_LENGTH,4)
         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         L     R3,DSPCREQ_RECORD_ADDR
         L     R4,DSPCREQ_RECORD_LENGTH
         CR    R4,R2                            BEYOND END OF RECORD?
         BL    MAIN0130                         YES, NO DATA TO DISPLAY
         BCTR  R2,0                             ADJUST FOR RELATIVE
         AR    R3,R2                            1ST BYTE TO DISPLAY
         SR    R4,R2                            LENGTH DISPLAYABLE
         C     R4,DXD_VWIDTH                    MORE THAN WIDTH?
         BNH   MAIN0090                         NO
         L     R4,DXD_VWIDTH                    LIMIT TO WIDTH
MAIN0090 DS    0H
         BCTR  R4,0                             FOR EXCUTE
* ------------------------------------------------------------------- *
*        Build character line                                         *
* ------------------------------------------------------------------- *
         MVC   DXD_WORK_2(80),0(R3)             COPY DATA
         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII
         BNO   MAIN0100
         TR    DXD_WORK_2,ASCII_TO_EBCDIC
MAIN0100 DS    0H
         TR    DXD_WORK_2,PRINTABLES
         EX    R4,MVC_01                        COPY TO BUFFER
         A     R8,DXD_VWIDTH                    NEXT LINE
* ------------------------------------------------------------------- *
*        Build zone line                                              *
* ------------------------------------------------------------------- *
         MVC   DXD_WORK_2(80),0(R3)             COPY DATA
         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII
         BNO   MAIN0110
         TR    DXD_WORK_2,ASCII_TO_EBCDIC
MAIN0110 DS    0H
         MVN   DXD_WORK_2,HEXZERO               CLEAR THE NUMERICS
         TR    DXD_WORK_2,HEXCHAR               TRANSLATE
         EX    R4,MVC_01                        COPY TO BUFFER
         A     R8,DXD_VWIDTH                    NEXT LINE
* ------------------------------------------------------------------- *
*        Build numerics line                                          *
* ------------------------------------------------------------------- *
         MVC   DXD_WORK_2(80),0(R3)             COPY DATA
         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII
         BNO   MAIN0120
         TR    DXD_WORK_2,ASCII_TO_EBCDIC
MAIN0120 DS    0H
         MVZ   DXD_WORK_2,HEXZERO               CLEAR THE ZONES
         TR    DXD_WORK_2,HEXCHAR               TRANSLATE
         EX    R4,MVC_01                        COPY TO BUFFER
         A     R8,DXD_VWIDTH                    NEXT LINE
         B     MAIN0140
* ------------------------------------------------------------------- *
*        Leave a blank line between 'lines'                           *
* ------------------------------------------------------------------- *
MAIN0130 DS    0H
         A     R8,DXD_VWIDTH                    SKIP CHAR LINE
         A     R8,DXD_VWIDTH                    SKIP ZONE LINE
         A     R8,DXD_VWIDTH                    SKIP NUMERICS LINE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0140 DS    0H
         A     R8,DXD_VWIDTH                    NEXT LINE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BCT   R7,MAIN0150                      MINUS 1 'LINE'
         B     MAIN0170
MAIN0150 DS    0H
         L     R1,DSPCREQ_RECORD_NBR            CURRENT RECORD NUMBER
MAIN0160 DS    0H
         A     R1,F1                            ADD 1
         ST    R1,DSPCREQ_RECORD_NBR            SAVE NEW RECORD NUMBER
         B     MAIN0080                         GET/PROCESS NEXT RECORD
MAIN0170 DS    0H
         CLC   DSPCREQ_RECORD_NBR,DATASPACE_1_LAST_RECORD
         BL    MAIN0200
* ------------------------------------------------------------------- *
*        End of data reached and there is room for the                *
*        "End of data" line                                           *
* ------------------------------------------------------------------- *
         MVC   DXD_WORK_2(EOF_01_L),EOF_01
         L     R1,DATASPACE_1_LAST_RECORD       NUMBER OF RECORDS READ
         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3
         MVC   DXD_WORK_2+(EOF_01_RECORDS-EOF_01)(L'EOF_01_RECORDS),DXD++
               _WORK_1+1
         L     R1,DATASPACE_1_BYTES             NUMBER OF BYTES READ
         CVD   R1,COMM_DWORD                    CONVERT TO DECIMAL
         MVC   DXD_WORK_1(L'EDIT_WORD_1),EDIT_WORD_1
         ED    DXD_WORK_1(L'EDIT_WORD_1),COMM_DWORD+3
         MVC   DXD_WORK_2+(EOF_01_BYTES-EOF_01)(L'EOF_01_BYTES),DXD_WOR+
               K_1+1
         LA    R1,EOF_01_L                      LENGTH OF TRAILER LINE
         C     R1,DXD_VWIDTH                    GREATER THAN WIDTH?
         BNH   MAIN0180                         NO
         L     R1,DXD_VWIDTH                    LIMIT TO SCREEN WIDTH
MAIN0180 DS    0H
         BCTR  R1,0                             FOR EXECUTE
         EX    R1,MVC_01                        COPY TRAILER LINE
MAIN0200 DS    0H
* ------------------------------------------------------------------- *
*        Build DSCB info and From/To                                  *
* ------------------------------------------------------------------- *
         MVC   DATASPACE_1_DISPLAY_LAST_RECORD,DSPCREQ_RECORD_NBR
         MVC   SPF_COLUMN_FROM,DATASPACE_1_DISPLAY_FIRST_COLUMN
         L     R15,COMM_V_OSDSCB
         BALR  R14,R15
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=DISPLAY
         MVC   SESS_DISP_PANEL,DXD_PANEL        SET NAME NAME
         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR
         L     R15,COMM_V_OSDISP
         BALR  R14,R15                          LINK TO OSDISP
         ITRACE ID=DISP_RC,                                            +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         CLC   COMM_NEW_FORMAT,COMM_BLANKS      NEW FORMAT?
         BNE   EXIT0000                         YES
         CLI   COMM_SESS_FUNC,0                 SESSION FUNCTION?
         BNE   EXIT0000                         YES
         OC    SESS_RC,SESS_RC                  RC ZERO?
         BZ    MAIN0400                         YES
         ITRACE ID=ENDING
         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0400 DS    0H
         ITRACE ID=CMDS
         L     R1,SPF_ZSCROLLN                  NBR TO SCROLL
         SRL   R1,2                             'LOGICAL' LINES
         ST    R1,SESS_VERTICAL_SCROLL
         MVC   SESS_HORIZONTAL_SCROLL,SPF_ZSCROLLN
         CLI   SPF_ZVERB,C'B'                   BOTTOM?
         BE    MAIN0510                         YES
         CLI   SPF_ZVERB,C'D'                   DOWN?
         BE    MAIN0530                         YES
         CLI   SPF_ZVERB,C'L'                   LEFT?
         BE    MAIN0550                         YES
         CLI   SPF_ZVERB,C'R'                   RIGHT?
         BE    MAIN0580                         YES
         CLI   SPF_ZVERB,C'T'                   TOP?
         BE    MAIN0620                         YES
         CLI   SPF_ZVERB,C'U'                   UP?
         BE    MAIN0630                         YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OC    SPF_ZCMD,COMM_BLANKS             'TRANSLATE' TO UPPER
         CLC   SPF_ZCMD,COMM_BLANKS             ALL BLANK?
         BE    MAIN0200                         YES
         ITRACE ID=PRI_CMD,                                            +
               DATA1=SPF_ZCMD+00,                                      +
               DATA2=SPF_ZCMD+08
         OC    COMM_OPERANDS_NBR,COMM_OPERANDS_NBR
         BZ    MAIN0200                         NO OPERANDS
         ICM   R4,15,OPERAND_01_ADDRESS
         CLC   CANCEL,0(R4)                     CANCEL?
         BE    CANCEL00                         YES
         CLC   CANCEL(3),0(R4)                  CANCEL?
         BE    CANCEL00                         YES
         CLC   OPERAND_01_LENGTH,H5             POSSIBLY ASCII COMMAND?
         BNE   ERR0060                          NO
         CLC   ASCII,0(R4)                      ASCII COMMAND?
         BNE   ERR0060                          NO
         CLI   COMM_OPERANDS_NBR+1,2            TWO OPERANDS?
         BL    MAIN0410                         NO
         BH    ERR0030                          TOO MANY
         CLC   OPERAND_02_LENGTH,H3             TOO LONG?
         BH    ERR0040                          YES
         ICM   R4,15,OPERAND_02_ADDRESS
         CLC   ON,0(R4)                         TURN ASCII ON?
         BE    MAIN0420
         CLC   OFF,0(R4)                        TURN ASCII OFF?
         BE    MAIN0430                         YES
         B     ERR0050
MAIN0410 DS    0H
         TM    SESS_USER_OPTIONS,$OPTIONS_ASCII
         BO    MAIN0430
MAIN0420 DS    0H
         ITRACE ID=ASCII_ON
         OI    SESS_USER_OPTIONS,$OPTIONS_ASCII
         MVC   SPF_ASCII,ASCII
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         B     MAIN0040
MAIN0430 DS    0H
         ITRACE ID=ASCII_OF
         NI    SESS_USER_OPTIONS,255-$OPTIONS_ASCII
         MVC   SPF_ASCII,COMM_BLANKS
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         B     MAIN0040
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0510 DS    0H
         ITRACE ID=BOTTOM
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         L     R0,SPF_VDEPTH                    DISPLAY DEPTH
         SRL   R0,2                             COMPUTE EFFECTIVE DEPTH
         L     R2,DATASPACE_1_LAST_RECORD       HIGHEST RECORD
         BCTR  R2,0
         SR    R2,R0                            MINUS EFFECTIVE DEPTH
         A     R2,F2                            PLUS 2
         C     R2,DATASPACE_1_FIRST_RECORD      LOWER THAN FIRST?
         BNL   MAIN0520                         NO
         L     R2,DATASPACE_1_FIRST_RECORD      FORCE TO FIRST RECORD
MAIN0520 DS    0H
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD  BR
         B     MAIN0040                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0530 DS    0H
         ITRACE ID=DOWN,                                               +
               DATA1=(DATASPACE_1_DISPLAY_FIRST_RECORD,4),             +
               DATA2=(SESS_VERTICAL_SCROLL,4)
         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                   MAX?
         BE    MAIN0510                            YES
         L     R1,SESS_VERTICAL_SCROLL             NBR TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD FIRST DISPLAYED      D
         AR    R2,R1                               PLUS SCROLL
         C     R2,DATASPACE_1_LAST_RECORD
         BH    MAIN0540                            BEYOND END OF DATA
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD  BR
         B     MAIN0040                            REBUILD EVERYTHING
MAIN0540 DS    0H
         L     R2,DATASPACE_1_LAST_RECORD          HIGHEST STORED
         S     R2,DATASPACE_1_DISPLAY_FIRST_RECORD MINUS 1ST DISPLAYED  ED
         C     R2,DXD_VDEPTH                       MORE THAN ONE SCRN?
         BNH   MAIN0050                            NO.. STAY PUT
         L     R2,DATASPACE_1_LAST_RECORD          HIGHEST STORED
         S     R2,DXD_VDEPTH                       MINUS 1 SCREEN
         A     R2,F2                               PLUS 2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD SET FIRST TO DISPLAY
         B     MAIN0040                            REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*        SCROLL LEFT                                                  *
* ------------------------------------------------------------------- *
MAIN0550 DS    0H
         ITRACE ID=LEFT,                                               +
               DATA1=(SESS_HORIZONTAL_SCROLL,2)
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                MAX?
         BE    MAIN0560                         YES
         L     R1,SESS_HORIZONTAL_SCROLL        COLUMNS TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         SR    R2,R1                            MINUS COLUMNS TO SCROLL
         C     R2,F1                            AT LEAST 1 COLUMN LEFT?
         BNL   MAIN0570                         NO
MAIN0560 DS    0H
         L     R2,F1                            STOP AT COLUMN 1
MAIN0570 DS    0H
         ITRACE ID=LEFT_1,                                             +
               RDATA1=R2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         B     MAIN0040                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*        SCROLL RIGHT                                                 *
* ------------------------------------------------------------------- *
MAIN0580 DS    0H
         ITRACE ID=RIGHT,                                              +
               DATA1=(DATASPACE_1_DISPLAY_FIRST_COLUMN,2)
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                MAX?
         BE    MAIN0610                         YES
         L     R1,SESS_HORIZONTAL_SCROLL        COLUMNS TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         AR    R2,R1                            PLUS COLUMNS TO SCROLL
         TM    SESS_DATA_TYPE,$DATA_TYPE_HFS    HFS?
         BO    MAIN0600                         YES.. ALLOW ANYTHING
         OC    DS1LRECL,DS1LRECL                LRECL = ZERO?
         BZ    MAIN0590                         YES..
         CH    R2,DS1LRECL                      MORE THAN RECORD SIZE?
         BH    MAIN0040                         YES.. STAY PUT
         B     MAIN0600
MAIN0590 DS    0H
         CH    R2,DS1BLKL                       MORE THAN BLOCK SIZE?
         BH    MAIN0040                         YES.. STAY PUT
MAIN0600 DS    0H
         ITRACE ID=RIGHT_1,                                            +
               RDATA1=R2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         B     MAIN0040                         REBUILD EVERYTHING
MAIN0610 DS    0H
         LH    R2,DS1LRECL                      RECORD LENGTH
         S     R1,DXD_VWIDTH                    MINUS 1 SCREEN WIDTH
         A     R1,F1                            PLUS 1
         ITRACE ID=RIGHT_2,                                            +
               RDATA1=R2
         ST    R2,DATASPACE_1_DISPLAY_FIRST_COLUMN
         B     MAIN0040                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0620 DS    0H
         ITRACE ID=TOP
         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD
        MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_FIRST_RECORD
         B     MAIN0040                         REBUILD EVERYTHING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0630 DS    0H
         ITRACE ID=UP
         MVC   SPF_ZCMD,COMM_BLANKS                CLEAR ZCMD
         CLI   SPF_ZSCROLLA,C'M'                   MAX?
         BE    MAIN0620                            YES
         L     R1,SESS_VERTICAL_SCROLL             NUMBER TO SCROLL
         L     R2,DATASPACE_1_DISPLAY_FIRST_RECORD FIRST DISPLAYED      D
         SR    R2,R1                               MINUS SCROLL AMOUNT
         C     R2,DATASPACE_1_FIRST_RECORD         LESS THAN FIRST?
         BNL   MAIN0640                            NO
         L     R2,DATASPACE_1_FIRST_RECORD         DON'T SCROLL
MAIN0640 DS    0H
         ST    R2,DATASPACE_1_DISPLAY_FIRST_RECORD CHANGE FIRST RECORD  BR
         B     MAIN0040
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         DC    H'1',C'ERROR FROM OSDSPACE'
ERR0020  DS    0H
         DC    H'1',C'PARSE FAILURE'
ERR0030  DS    0H
         MVI   COMM_MSG_ID+1,3
         B     ERR0100
ERR0040  DS    0H
         MVI   COMM_MSG_ID+1,4
         B     ERR0100
ERR0050  DS    0H
         MVI   COMM_MSG_ID+1,5
         B     ERR0100
ERR0060  DS    0H
         MVI   COMM_MSG_ID+1,6
         B     ERR0100
ERR0070  DS    0H
         DC    H'0'
ERR0080  DS    0H
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP
         BE    EXIT0000
         DC    H'0'
ERR0100  DS    0H
         MVC   COMM_MSG_CSECT,MODID
         L     R15,COMM_V_OSMSG
         BALR  R14,R15
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         B     MAIN0200
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLEAN000 DS    0H
         ITRACE ID=CLEAN_UP
         ICM   R1,15,DXD_VDATA_ADDR             VDATA ADDRESS
         BZ    CLEAN010
         L     R0,DXD_VDATA_LENGTH              VDATA LENGTH
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                          FREE VDATA
CLEAN010 DS    0H
         LA    R0,OSVHEX_DXD_L                  WORK AREA SIZE
         LR    R1,R13                           COPY WORK AREA ADDRESS
         L     R13,4(R13)                       RESTORE R13
         FREEMAIN RU,                           FREE WORK AREA         +
               A=(1),                                                  +
               LV=(0)
         XC    SESS_FORMATTER_DXD_ADDR,SESS_FORMATTER_DXD_ADDR
         XC    SESS_FORMATTER_DXD_LENGTH,SESS_FORMATTER_DXD_LENGTH
         SR    R15,R15
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CANCEL00 DS    0H
         ITRACE ID=CANCEL
         MVI   SESS_RC+1,4
         MVC   SPF_ZCMD,COMM_BLANKS
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LH    R15,DXD_RC                       RETURN CODE
         L     R13,4(R13)                       RESTORE R13
EXIT0010 DS    0H
         L     R14,12(,R13)                     RESTORE R14
         LM    R0,R12,20(R13)                   RESTORE REGISTERS
         BR    R14                              RETURN
* ------------------------------------------------------------------- *
MVC_01   MVC   0(0,R8),DXD_WORK_2    COPY DATA TO BUFFER
* ------------------------------------------------------------------- *
*        CONSTANTS                                                    *
* ------------------------------------------------------------------- *
F1              DC    F'1'
F2              DC    F'2'
H2              DC    H'2'
H3              DC    H'3'
H5              DC    H'5'
H6              DC    H'6'
H8              DC    H'8'

HEXZERO         DC    80X'00'

CANCEL          DC    C'CANCEL '
OSHFS           DC    CL8'OSHFS'
OS0001          DC    CL8'OS0001'
OS0008          DC    CL8'OS0008'
ASCII           DC    C'ASCII'
OFF             DC    C'OFF'
ON              DC    C'ON'

HEXCHAR         DC    C'0123456789ABCDEF'
                DC    C'1               '
                DC    C'2               '
                DC    C'3               '
                DC    C'4               '
                DC    C'5               '
                DC    C'6               '
                DC    C'7               '
                DC    C'8               '
                DC    C'9               '
                DC    C'A               '
                DC    C'B               '
                DC    C'C               '
                DC    C'D               '
                DC    C'E               '
                DC    C'F               '

EDIT_WORD_1     DC    X'40202020202020202120'
EOF_01          DS    0C
                DC    AL1($SCREEN_ATTR_HIGH)
                DC    C'---- END OF DATA ----'
EOF_01_RECORDS  DC    CL9' '
                DC    C' RECORDS, '
EOF_01_BYTES    DC    CL9' '
                DC    C' BYTES ------------------'
EOF_01_L        EQU   *-EOF_01


ASCII_TO_EBCDIC DS    0C
*                        0 1 2 3 4 5 6 7 8 9 A B C D E F
                DC    X'000102030405060708090A0B0C0D0E0F' 00-0F
                DC    X'101112131415161718191A1B1C1D1E1F' 10-1F
                DC    X'405A7F7B5B6C507D4D5D5C4E6B604B61' 20-2F
                DC    X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' 30-3F
                DC    X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' 40-4F
                DC    X'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5E6D' 50-5F
                DC    X'79818283848586878889919293949596' 60-6F
                DC    X'979899A2A3A4A5A6A7A8A98B6A9BA17F' 70-7F
                DC    X'808182838485868788898A8B8C8D8E8F' 80-8F
                DC    X'909192939495969798999A9B9C9D9E9F' 90-9F
                DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF' A0-AF
                DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF' B0-BF
                DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF' C0-CF
                DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF' D0-DF
                DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF' E0-EF

PRINTABLES      DS    0C
*                        0 1 2 3 4 5 6 7 8 9 A B C D E F
                DC    X'40404040404040404040404040404040' 00-0F
                DC    X'40404040404040404040404040404040' 10-1F
                DC    X'40404040404040404040404040404040' 20-2F
                DC    X'40404040404040404040404040404040' 30-3F
                DC    X'404040404040404040404A4B4C4D4E4F' 40-4F
                DC    X'504040404040404040405A5B5C5D5E5F' 50-5F
                DC    X'60614040404040404040406B6C6D6E6F' 60-6F
                DC    X'404040404040404040407A7B7C7D7E7F' 70-7F
                DC    X'40818283848586878889408B8C8D8E8F' 80-8F
                DC    X'40919293949596979899409B9C9D9E9F' 90-9F
                DC    X'4040A2A3A4A5A6A7A8A940ABACADAEAF' A0-AF
                DC    X'4040404040404040404040BBBCBDBEBF' B0-BF
                DC    X'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF
                DC    X'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF
                DC    X'4040E2E3E4E5E6E7E8E9404040404040' E0-EF
                DC    X'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF

                LTORG

OSVHEXEND       EQU   *
* ------------------------------------------------------------------- *
*        WORK AREA                                                    *
* ------------------------------------------------------------------- *
OSVHEX_WORK       DSECT
                  COPY     DXDPREF

DXD_PANEL         DS       CL8
DXD_VDATA_ADDR    DS       A
DXD_VDATA_LENGTH  DS       F

DXD_VWIDTH        DS       F
DXD_VDEPTH        DS       F

DXD_RC            DS       H

DXD_WORK_1        DS       CL10
DXD_WORK_2        DS       CL100
                  DSPCREQ  DSECT=NO
                  FMATREQ  DSECT=NO
OSVHEX_DXD_L      EQU      *-OSVHEX_WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DUMMY    DSECT
         IBMMAC VTOC=1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  OSVHEX
