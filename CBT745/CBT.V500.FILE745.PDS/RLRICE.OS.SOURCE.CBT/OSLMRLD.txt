* ------------------------------------------------------------------- *
*                                                                     *
*  Module name: OSLMRLD                                               *
*                                                                     *
*  Display RLD (Relocation directory) info                            *
*                                                                     *
* ------------------------------------------------------------------- *
OSLMRLD  CSECT
OSLMRLD  AMODE 31
OSLMRLD  RMODE ANY
         USING OSLMRLD,R15
         USING OSCOMM,R12
         USING SESSION,R11
         B     INIT0000
MODID    DC    CL8'OSLMRLD'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    A(OSLMRLDEND-OSLMRLD)
INIT0000 DS    0H
         STM   R14,R12,12(R13)        SAVE REGISTERS
         LR    R10,R15                COPY BASE ADDRESS
         LA    R9,2048(R10)
         LA    R9,2048(R9)
         DROP  R15
         USING OSLMRLD,R10,R9
         L     R5,COMM_OSSPFD
         USING OSSPFD,R5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE
         BNE   INIT0010                       NO
         LA    R0,OSLMRLD_DXD_L               WORK AREA LENGTH
         ST    R0,SESS_FORMATTER_DXD_LENGTH   SAVE LENGTH
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,SESS_FORMATTER_DXD_ADDR     SAVE ADDRESS
         LR    R2,R1
         LR    R0,R1
         LA    R1,OSLMRLD_DXD_L
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE WORK AREA
         ST    R13,4(,R2)
         ST    R2,8(,R13)
         LR    R13,R2                         SET WORK AREA ADDRESS
         USING OSLMRLD_DXD,R13                DEFINE BASE
         MVC   DXD_CSECT,MODID                SET MODULE ID
         ITRACE ID=ENTRY1
         LA    R1,DATASPACE_1
         ST    R1,DSPCREQ_DATASPACE
         LA    R1,LMOD_RLD_DATA
         ST    R1,DSPCREQ_RECORD_ADDR
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
         LA    R1,PANEL_NAME                  PANEL NAME
         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN SET FUNCTION
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                        GETMAIN VDATA
         ST    R0,DXD_VDATA_LENGTH            SAVE LENGTH
         ST    R1,DXD_VDATA_ADDR              SAVE ADDRESS
         MVC   DXD_VDEPTH,SPF_VDEPTH          SAVE DEPTH
         MVC   DXD_VWIDTH,SPF_VWIDTH          SAVE WIDTH
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         L     R1,SESS_FORMATTER_DXD_ADDR     WORK AREA ADDRESS
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         ITRACE ID=ENTRY2
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL
         BE    EXIT0000
         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP
         BE    CLEAN000
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
RLD0000  DS    0H
         L     R0,DXD_VDATA_ADDR
         L     R1,DXD_VDATA_LENGTH
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14
         MVC   DSPCREQ_RECORD_NBR,DATASPACE_1_DISPLAY_FIRST_RECORD
         L     R4,DXD_VDATA_ADDR
         L     R3,DXD_VDEPTH
         BCTR  R3,0
         BCTR  R3,0                   < -- RESERVE ROOM FOR TOTAL MSG
RLD0020  DS    0H
         ITRACE ID=RETREIVE,                                           +
               DATA1=(DSPCREQ_RECORD_NBR,4)
         MVI   DSPCREQ_FUNC,$DSPCREQ_RETREIVE
         LA    R1,DSPCREQ
         L     R15,COMM_OSDSPACE
         BALR  R14,R15
         CLI   DSPCREQ_RC,$DSPCREQ_OK
         BNE   ERR0040

         MVC   0(MSG_01_L,R4),MSG_01
         USING MSG_01,R4
         UNPK  MSG_01_TYPE(3),LMOD_RLD_TYPE(2)
         TR    MSG_01_TYPE,HEXCHAR
         MVI   MSG_01_TYPE+2,C' '
         A     R4,DXD_VWIDTH
         BCT   R3,RLD0030
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0030  DS    0H
         MVC   0(MSG_02_L,R4),MSG_02
         USING MSG_02,R4
         UNPK  MSG_02_STATUS(3),LMOD_RLD_STATUS(2)
         TR    MSG_02_STATUS,HEXCHAR
         MVI   MSG_02_STATUS+2,C' '
         A     R4,DXD_VWIDTH
         BCT   R3,RLD0040
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0040  DS    0H
         MVC   0(MSG_03_L,R4),MSG_03
         USING MSG_03,R4
         MVC   MSG_03_RESIDENT,LMOD_RLD_RESIDENT
         A     R4,DXD_VWIDTH
         BCT   R3,RLD0050
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0050  DS    0H
         MVC   0(MSG_04_L,R4),MSG_04
         USING MSG_04,R4
         SR    R1,R1
         ICM   R1,3,LMOD_RLD_ADCON_LENGTH
         BAL   R14,NBR0000
         MVC   MSG_04_ADCON_LENGTH,DXD_NUMBER
         A     R4,DXD_VWIDTH
         BCT   R3,RLD0060
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0060  DS    0H
         MVC   0(MSG_05_L,R4),MSG_05
         USING MSG_05,R4
         MVC   MSG_05_RESIDENT_CLASS,LMOD_RLD_RESIDENT_CLASS
         A     R4,DXD_VWIDTH
         BCT   R3,RLD0070
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0070  DS    0H
         MVC   0(MSG_06_L,R4),MSG_06
         USING MSG_06,R4
         ICM   R1,15,LMOD_RLD_RESIDENT_OFFSET
         BAL   R14,NBR0000
         MVC   MSG_06_RESIDENT_OFFSET,DXD_NUMBER
         UNPK  DXD_NUMBER(9),LMOD_RLD_RESIDENT_OFFSET(5)
         TR    DXD_NUMBER(8),HEXCHAR
         MVC   MSG_06_HEX,DXD_NUMBER
         A     R4,DXD_VWIDTH
         BCT   R3,RLD0080
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0080  DS    0H
         MVC   0(MSG_07_L,R4),MSG_07
         USING MSG_07,R4
         ICM   R1,15,LMOD_RLD_CLASS_OFFSET
         BAL   R14,NBR0000
         MVC   MSG_07_CLASS_OFFSET,DXD_NUMBER
         UNPK  DXD_NUMBER(9),LMOD_RLD_CLASS_OFFSET(5)
         TR    DXD_NUMBER(8),HEXCHAR
         MVC   MSG_07_HEX,DXD_NUMBER
         A     R4,DXD_VWIDTH
         BCT   R3,RLD0090
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0090  DS    0H
         MVC   0(MSG_08_L,R4),MSG_08
         USING MSG_08,R4
         UNPK  MSG_08_BIND_ATTR(3),LMOD_RLD_BIND_ATTR(2)
         TR    MSG_08_BIND_ATTR,HEXCHAR
         MVI   MSG_08_BIND_ATTR+2,C' '
         TM    LMOD_RLD_BIND_ATTR,RLD_DIRECTION
         BO    RLD0100
         MVC   MSG_08_DESC(L'DESC_POSITIVE),DESC_POSITIVE
         B     RLD0110
RLD0100  DS    0H
         MVC   MSG_08_DESC(L'DESC_NEGATIVE),DESC_NEGATIVE
RLD0110  DS    0H
         A     R4,SPF_VWIDTH
         BCT   R3,RLD0120
         B     RLD220
RLD0120  DS    0H
         TM    LMOD_RLD_BIND_ATTR,RLD_HOBSET
         BNO   RLD0130
         MVC   MSG_08_DESC(L'DESC_SET_HIGH),DESC_SET_HIGH
         A     R4,SPF_VWIDTH
         BCT   R3,RLD0130
         B     RLD220
RLD0130  DS    0H
         TM    LMOD_RLD_BIND_ATTR,RLD_INT_EXT
         BO    RLD0140
         MVC   MSG_08_DESC(L'DESC_INTERNAL),DESC_INTERNAL
         B     RLD0150
RLD0140  DS    0H
         MVC   MSG_08_DESC(L'DESC_EXTERNAL),DESC_EXTERNAL
RLD0150  DS    0H
         A     R4,DXD_VWIDTH
         BCT   R3,RLD0160
         B     RLD220                    SCREEN FULL
RLD0160  DS    0H
         TM    LMOD_RLD_BIND_ATTR,RLD_HOBCHG
         BNO   RLD0170
         MVC   MSG_08_DESC(L'DESC_CHANGED),DESC_CHANGED
         A     R4,DXD_VWIDTH
         BCT   R3,RLD0170
         B     RLD220                    SCREEN FULL
RLD0170  DS    0H
         TM    LMOD_RLD_BIND_ATTR,RLD_PARTRES
         BNO   RLD0180
         MVC   MSG_08_DESC(L'DESC_PART_RES),DESC_PART_RES
         A     R4,DXD_VWIDTH
         BCT   R3,RLD0180
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0180  DS    0H
         MVC   0(MSG_09_L,R4),MSG_09
         USING MSG_09,R4
         MVC   MSG_09_XATTR_CLASS,LMOD_RLD_XATTR_CLASS
         BCT   R3,RLD0190
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0190  DS    0H
         MVC   0(MSG_10_L,R4),MSG_10
         USING MSG_10,R4
         ICM   R1,15,LMOD_RLD_XATTR_OFFSET
         BAL   R14,NBR0000
         MVC   MSG_10_XATTR_OFFSET,DXD_NUMBER
         BCT   R3,RLD0200
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0200  DS    0H
         MVC   0(MSG_11_L,R4),MSG_11
         USING MSG_11,R4
         MVC   MSG_11_TARGET,LMOD_RLD_TARGET
         BCT   R3,RLD0210
         DROP  R4
         B     RLD220                    SCREEN FULL

RLD0210  DS    0H
         MVC   0(MSG_12_L,R4),MSG_12
         USING MSG_12,R4
         MVC   MSG_12_RESIDENT_PART,LMOD_RLD_RESIDENT_PART
         BCT   R3,RLD0210
         DROP  R4

RLD220   DS    0H
         A     R4,DXD_VWIDTH
         A     R4,DXD_VWIDTH
         MVC   0(TOTAL_MSG_L,R4),TOTAL_MSG
         USING TOTAL_MSG,R4
         L     R1,DSPCREQ_RECORD_NBR
         CVD   R1,COMM_DWORD
         ED    TOTAL_MSG_CURRENT,COMM_DWORD+5
         L     R1,DATASPACE_1_LAST_RECORD
         CVD   R1,COMM_DWORD
         ED    TOTAL_MSG_TOTAL,COMM_DWORD+5
         DROP  R4
         B     DISP0000

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
NBR0000  DS    0H
         CVD   R1,COMM_DWORD
         MVC   DXD_NUMBER,EDIT_WORD
         ED    DXD_NUMBER,COMM_DWORD+3
         LA    R15,L'DXD_NUMBER
NBR0010  DS    0H
         CLI   DXD_NUMBER,C' '
         BNER  R14
         MVC   DXD_NUMBER(L'DXD_NUMBER),DXD_NUMBER+1
         MVI   DXD_NUMBER+(L'DXD_NUMBER-1),C' '
         BCT   R15,NBR0010
         BR    R14
ERR0040  DS    0H
         MVC   SPF_MSG_1,COMM_MSG_1
         MVC   SPF_MSG_2,COMM_MSG_2
         MVC   SPF_MSG_3,COMM_MSG_3
         MVC   SPF_MSG_4,COMM_MSG_4
         MVC   SPF_MSG_5,COMM_MSG_5
         MVI   COMM_SESS_FUNC,$SESS_REMOVE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0000 DS    0H
         ITRACE ID=DISPLAY
         MVC   SESS_DISP_PANEL,PANEL_NAME
         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR
         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH
         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR
         L     R15,COMM_V_OSDISP
         BALR  R14,R15
         ITRACE ID=DISP_RC,                                            +
               DATA1=(SESS_RC,2),                                      +
               DATA2=(SESS_STATUS,1)
         CLC   COMM_NEW_FORMAT,COMM_BLANKS NEW FORMAT SELECTED?
         BNE   EXIT0000                    YES
         CLI   COMM_SESS_FUNC,0            SESSION FUNCTION?
         BNE   EXIT0000                    YES
         OC    SESS_RC,SESS_RC             RC=0?
         BZ    DISP0005                    YES
         ITRACE ID=ENDING
         MVI   COMM_SESS_FUNC,$SESS_REMOVE SET FUNCTION
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Check for scroll command(s)                                  *
*                                                                     *
*        Note that 'up', 'down', 'top', and 'bottom' are the only     *
*        valid scroll commands.                                       *
*                                                                     *
* ------------------------------------------------------------------- *
DISP0005 DS    0H
         CLI   SPF_ZSCROLLA,C'C'           CSR?
         BNE   DISP0010                    NO
         MVC   SPF_ZSCROLLN,F1             CSR SCROLLING IS 1 LINE
DISP0010 DS    0H
         ITRACE ID=ZVERB,                                              +
               DATA1=SPF_ZVERB,                                        +
               DATA2=SPF_ZSCROLLA
         CLI   SPF_ZVERB,C'B'              BOTTOM?
         BE    DISP0100                    YES
         CLI   SPF_ZVERB,C'D'              DOWN?
         BE    DISP0200                    YES
         CLI   SPF_ZVERB,C'T'              TOP?
         BE    DISP0300                    YES
         CLI   SPF_ZVERB,C'U'              UP?
         BE    DISP0400                    YES
         B     DISP0000

DISP0100 DS    0H
         ITRACE ID=BOTTOM
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,DATASPACE_1_LAST_RECORD
         B     RLD0000
DISP0200 DS    0H
         ITRACE ID=DOWN,                                               +
               DATA1=SPF_ZSCROLLA,                                     +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZSCROLLA,C'M'                   MAX?
         BE    DISP0100                            YES.. SAME AS BOTTOM
         L     R1,SPF_ZSCROLLN                     NUMBER TO SCROLL
         A     R1,DATASPACE_1_DISPLAY_FIRST_RECORD PLUS CURRENT RECORD
         C     R1,DATASPACE_1_LAST_RECORD          BEYOND HIGH RECORD?
         BH    DISP0100                            YES.. GO TO BOTTOM
         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER
         B     RLD0000                             GO BUILD DATA
DISP0300 DS    0H
         ITRACE ID=TOP
         MVC   DATASPACE_1_DISPLAY_FIRST_RECORD,F1
         B     RLD0000
DISP0400 DS    0H
         ITRACE ID=UP,                                                 +
               DATA1=SPF_ZSCROLLA,                                     +
               DATA2=(SPF_ZSCROLLN,4)
         CLI   SPF_ZSCROLLA,C'M'                   MAX?
         BE    DISP0300                            YES.. GO TO TOP
         L     R1,DATASPACE_1_DISPLAY_FIRST_RECORD
         S     R1,SPF_ZSCROLLN                     MINUS SCROLL
         C     R1,F1                               BELOW 1?
         BL    DISP0300                            YES, GO TO TOP
         ST    R1,DATASPACE_1_DISPLAY_FIRST_RECORD UPDATE RECORD NUMBER
         B     RLD0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLEAN000 DS    0H
         ITRACE ID=CLEAN_UP,                                           +
               DATA1=(DXD_VDATA_ADDR,4),                               +
               DATA2=(DXD_VDATA_LENGTH,4)
         ICM   R1,15,DXD_VDATA_ADDR         VDATA GETMAINED?
         BZ    CLEAN010                     NO
         L     R0,DXD_VDATA_LENGTH          VDATA LENGTH
         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN
         L     R15,COMM_V_OSVDATA
         BALR  R14,R15                      FREE VDATA
         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR
         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH
CLEAN010 DS    0H
         LA    R0,OSLMRLD_DXD_L             WORK AREA SIZE
         LR    R1,R13                       COPY WORK AREA ADDRESS
         L     R13,4(R13)                   RESTORE R13
         FREEMAIN RU,                       FREE WORK AREA             +
               A=(1),                                                  +
               LV=(0)
         XC    SESS_FORMATTER_DXD_ADDR,SESS_FORMATTER_DXD_ADDR
         XC    SESS_FORMATTER_DXD_LENGTH,SESS_FORMATTER_DXD_LENGTH
         SR    R15,R15
         B     EXIT0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
EXIT0010 DS    0H
         LM    R14,R12,12(R13)       RESTORE REMAINING REGISTERS
         SR    R15,R15               SET RC
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
HEXCHAR              EQU  *-C'0'
                     DC   C'0123456789ABCDEF'

F1                   DC   F'1'
PANEL_NAME           DC   CL8'OSLMRLD'
EDIT_WORD            DC   X'402020206B2020206B202120'

DESC_POSITIVE        DC   C'Relocation direction: Positive'
DESC_NEGATIVE        DC   C'Relocation direction: Negative'
DESC_SET_HIGH        DC   C'Set high bit according to AMODE'
DESC_INTERNAL        DC   C'Internal'
DESC_EXTERNAL        DC   C'External'
DESC_CHANGED         DC   C'High order bit changed by binder'
DESC_PART_RES        DC   C'ADCON located in part'

TOTAL_MSG            DS   0C
                     DC   AL1($SCREEN_ATTR_NORMAL)
                     DC   C'Displaying item '
                     DC   AL1($SCREEN_ATTR_HIGH)
TOTAL_MSG_CURRENT    DC   X'402020202120'
                     DC   AL1($SCREEN_ATTR_NORMAL)
                     DC   C' of'
                     DC   AL1($SCREEN_ATTR_HIGH)
TOTAL_MSG_TOTAL      DC   X'402020202120'
                     DC   AL1($SCREEN_ATTR_NORMAL)
TOTAL_MSG_L          EQU  *-TOTAL_MSG

                     LTORG

MSG_01               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Type           '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_01_TYPE          DC   CL2' '
MSG_01_L             EQU  *-MSG_01

MSG_02               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Status         '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_02_STATUS        DC   CL2' '
MSG_02_L             EQU  *-MSG_02

MSG_03               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Resident       '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_03_RESIDENT      DC   CL60' '
MSG_03_L             EQU  *-MSG_03

MSG_04               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'ADCON length   '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_04_ADCON_LENGTH  DC   CL5' '
MSG_04_L             EQU  *-MSG_04

MSG_05               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Resident class '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_05_RESIDENT_CLASS  DC CL60' '
MSG_05_L             EQU  *-MSG_05

MSG_06               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Resident offset'
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_06_RESIDENT_OFFSET DC CL12' '
                       DC C' (X'''
MSG_06_HEX             DC CL8' '
                       DC C''')'
MSG_06_L             EQU  *-MSG_06

MSG_07               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Class offset   '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_07_CLASS_OFFSET  DC   CL12' '
                     DC   C' (X'''
MSG_07_HEX           DC   CL8' '
                     DC   C''')'
MSG_07_L             EQU  *-MSG_07

MSG_08               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Bind attributes'
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_08_BIND_ATTR     DC   CL2' '
                     DC   CL2' '
MSG_08_DESC          DC   CL60' '
MSG_08_L             EQU  *-MSG_08

MSG_09               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'XATTR class    '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_09_XATTR_CLASS   DC   CL60' '
MSG_09_L             EQU  *-MSG_09

MSG_10               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'XATTR offset   '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_10_XATTR_OFFSET  DC   CL12' '
MSG_10_L             EQU  *-MSG_10

MSG_11               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'TARGET         '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_11_TARGET        DC   CL60' '
MSG_11_L             EQU  *-MSG_11

MSG_12               DS   0C
                     DC   AL1($SCREEN_ATTR_HIGH)
                     DC   C'Resident PART. '
                     DC   AL1($SCREEN_ATTR_NORMAL)
MSG_12_RESIDENT_PART DC   CL60' '
MSG_12_L             EQU  *-MSG_12

OSLMRLDEND           EQU  *
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OSLMRLD_DXD          DSECT
                     COPY  DXDPREF

DXD_VDATA_ADDR       DS    A
DXD_VDATA_LENGTH     DS    F

DXD_VWIDTH           DS    F
DXD_VDEPTH           DS    F

DXD_NUMBER           DS    CL12

                     COPY  RLDDATA

                     DSPCREQ  DSECT=NO
OSLMRLD_DXD_L        EQU   *-OSLMRLD_DXD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEWBUFF FUNC=MAPBUF,                                          +
               TYPE=RLD,                                               +
               HEADREG=R8,                                             +
               ENTRYREG=R7,                                            +
               SIZE=50,                                                +
               VERSION=5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         OSSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     ATTRS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     TRENTRY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      OSLMRLD
