{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012714000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 7113106, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE745.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 7113106, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 7113106, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE745.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00m\\x02'", "DS1TRBAL": "b'\\xcf\\xfc'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\x10\\x00\\n\\x05\\x17\\x00\\x0e\\x00n'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04N\\x00T\\x01\\t5?\\x01\\t5?#(\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf8@@@'", "ispf": {"version": "04.78", "flags": 0, "createdate": "2009-12-19T00:00:00", "modifydate": "2009-12-19T23:28:54", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-478"}, "text": "REGULAR CBT TAPE - VERSION 478    FILE:  745\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT478.FILE745\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 13 MEMBERS COUNTED; CUMULATIVE SIZE IS 67,131 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/19/09    23:28:54    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$TSORECV": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x16\\x01\\x06$\\x0f\\x01\\t\\x07\\x8f\\x06&\\x00 \\x00\\x08\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2006-08-28T00:00:00", "modifydate": "2009-03-19T06:26:16", "lines": 32, "newlines": 8, "modlines": 0, "user": "OS"}, "text": "//SBGOLOBT  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//*  YOU MUST ADAPT THIS JOB TO YOUR INSTALLATION'S NAMING  *//\n//*   STANDARDS.  THIS JOB CREATES THE PDS'ES.  SEE THE     *//\n//*   FM.DOC PDS FOR FURTHER INSTRUCTIONS.                  *//\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD *\n  RECEIVE INDS('SBGOLOB.CBT478.FILE745(DOC)'\n  DSN('SBGOLOB.OS.DOC') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE745(MACS)'\n  DSN('SBGOLOB.OS.MACS') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE745(FORMATS)'\n  DSN('SBGOLOB.OS.FORMATS') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE745(ISPPLIB)'\n  DSN('SBGOLOB.OS.ISPPLIB') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE745(JCL)'\n  DSN('SBGOLOB.OS.JCL') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE745(OPTS)'\n  DSN('SBGOLOB.OS.OPTS') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE745(SMF)'\n  DSN('SBGOLOB.OS.SMF') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE745(SMGR)'\n  DSN('SBGOLOB.OS.SMGR') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE745(SOURCE)'\n  DSN('SBGOLOB.OS.SOURCE') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE745(USERFMT)'\n  DSN('SBGOLOB.OS.USERFMT') VOL(WORK05)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE745": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04N\\x00D\\x01\\t5?\\x01\\t5?#(\\x00\\x9c\\x00\\x9c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf8@@@'", "ispf": {"version": "04.78", "flags": 0, "createdate": "2009-12-19T00:00:00", "modifydate": "2009-12-19T23:28:44", "lines": 156, "newlines": 156, "modlines": 0, "user": "CBT-478"}, "text": "//***FILE 745 is contributed semi-anonymously and contains a very   *   FILE 745\n//*           comprehensive file browser package called FM.  This   *   FILE 745\n//*           is still a work in progress, but it is probably       *   FILE 745\n//*           quite a useful tool already, as it now is.            *   FILE 745\n//*                                                                 *   FILE 745\n//*           Questions:  email sbgolob@cbttape.org                 *   FILE 745\n//*                             sbgolob@attglobal.net               *   FILE 745\n//*                                                                 *   FILE 745\n//*           To install, run the $TSORECV member after             *   FILE 745\n//*           customizing it to your installation's standards,      *   FILE 745\n//*           and then look at the FM.DOC pds which results.        *   FILE 745\n//*                                                                 *   FILE 745\n//*   Description of the FM product.                                *   FILE 745\n//*                                                                 *   FILE 745\n//*     FM  (File Formatter)                                        *   FILE 745\n//*                                                                 *   FILE 745\n//*     FM allows users to view sequential files, PDSs, PDSEs,      *   FILE 745\n//*     and VSAM files of most types and VTOCs.                     *   FILE 745\n//*                                                                 *   FILE 745\n//*     The purpose of FM is to allow data to not only be           *   FILE 745\n//*     viewed in plain text, but also to be 'formatted'.  The      *   FILE 745\n//*     design of FM allows new formats to be added easily.         *   FILE 745\n//*     Some types of data common to most all MVS (OS/390, z/OS     *   FILE 745\n//*     or whatever it is called now) systems like SMF are          *   FILE 745\n//*     already known (at least some SMF record types).             *   FILE 745\n//*                                                                 *   FILE 745\n//*     The utility determines the data set's DSORG                 *   FILE 745\n//*     dynamically.  That is it determines if the data set is      *   FILE 745\n//*     sequential, a PDS, VSAM, etc and uses the appropriate       *   FILE 745\n//*     access method.                                              *   FILE 745\n//*                                                                 *   FILE 745\n//*     If a PDS or PDSE is referenced without a member name, a     *   FILE 745\n//*     list of the members is displayed.  PDS(/E)s with RECFM      *   FILE 745\n//*     U are assumed to be \"loadlibs\", all other RECFMs are        *   FILE 745\n//*     \"non loadlibs\".                                             *   FILE 745\n//*                                                                 *   FILE 745\n//*     Data from the data set or directory is read into a data     *   FILE 745\n//*     space before being displayed.  This has its advantages      *   FILE 745\n//*     and disadvantages.  On the plus side, file I/O is only      *   FILE 745\n//*     required once.  You can scroll forward, backward,           *   FILE 745\n//*     reference anything read into the data space with the        *   FILE 745\n//*     system doing any required I/O via system paging which       *   FILE 745\n//*     has less overhead and is faster than file I/O.  On the      *   FILE 745\n//*     negative side, if the data is too large to be loaded        *   FILE 745\n//*     into the data space, only a portion can be FM'd at a        *   FILE 745\n//*     time.  There are options on invocation that allow you       *   FILE 745\n//*     to specify records to skip, number of records to read,      *   FILE 745\n//*     and for VSAM files you can use FROMKEY and TOKEY or RBA     *   FILE 745\n//*     for positioning.  (I intend to add the FROMKEY and          *   FILE 745\n//*     TOKEY someday!)  The system defualt for the dataspace's     *   FILE 745\n//*     size is 239 pages.  I intend to add a keyword to allow      *   FILE 745\n//*     users to request a larger dataspace.                        *   FILE 745\n//*                                                                 *   FILE 745\n//*     I tried to keep the hard-coded message text to a            *   FILE 745\n//*     minimum.  Since I am only (somewhat) literate in            *   FILE 745\n//*     English (United States variety), the only messages          *   FILE 745\n//*     provided now are English.  If anyone wants to take on       *   FILE 745\n//*     translating the messages, the source for US English is      *   FILE 745\n//*     in source FMMSGUS.  The language you use can be             *   FILE 745\n//*     customized on a user by user basis.  The options are        *   FILE 745\n//*     kept in member FM of the ISPPROF data set.  If you do       *   FILE 745\n//*     create a new messages module, don't forget to add it to     *   FILE 745\n//*     the assemble and link-edit JCL.  I suppose you could        *   FILE 745\n//*     even translate the text in the SPF panels.                  *   FILE 745\n//*                                                                 *   FILE 745\n//*     Other odds/ends                                             *   FILE 745\n//*     As of now, FM depends on SPF.  I have been looking at       *   FILE 745\n//*     'faking out' the SPF functions.                             *   FILE 745\n//*                                                                 *   FILE 745\n//*     There is no provision for HFS stuff as of yet.              *   FILE 745\n//*                                                                 *   FILE 745\n//*     I plan on allowing you to enter \"FM\" as a primary           *   FILE 745\n//*     command so you can start a new \"session\" on a new data      *   FILE 745\n//*     set.                                                        *   FILE 745\n//*                                                                 *   FILE 745\n//*     I work at a JES3 shop.  We don't have any JES2 SMF data     *   FILE 745\n//*     so I don't have much motivation for worrying about          *   FILE 745\n//*     formatting any SMF records that would be created by         *   FILE 745\n//*     JES2.                                                       *   FILE 745\n//*                                                                 *   FILE 745\n//*     I have been thinking about FMing storage.  This would       *   FILE 745\n//*     allow formatting of in storage control blocks.  Anyone      *   FILE 745\n//*     know much about cross memory stuff?  Anyone know how to     *   FILE 745\n//*     get the ALET for another address space?  Is using ALETs     *   FILE 745\n//*     and the access registers even possible for accessing        *   FILE 745\n//*     data in another address space?                              *   FILE 745\n//*                                                                 *   FILE 745\n//*     FM really doesn't 'know' much about tapes.  In the last     *   FILE 745\n//*     several years the use of tape has declined drastically      *   FILE 745\n//*     here.  The older round-reels were notorious for causing     *   FILE 745\n//*     problems.  The main purpose for developing DITTO was        *   FILE 745\n//*     for messing around with tapes.  By the way DO NOT USE       *   FILE 745\n//*     DITTO on any system later than about MVS 3 (ESA).  On       *   FILE 745\n//*     anything later, DITTO CLOBBERS something and the system     *   FILE 745\n//*     becomes unusable requiring an IPL.                          *   FILE 745\n//*                                                                 *   FILE 745\n//*     Commands can be recalled via a question mark (?).           *   FILE 745\n//*     Up to the last 20 commands can be recalled.                 *   FILE 745\n//*                                                                 *   FILE 745\n//*     You can see the contents of various fields in the           *   FILE 745\n//*     common area by entering DEBUG as a primary command.         *   FILE 745\n//*                                                                 *   FILE 745\n//*     FORMATs                                                     *   FILE 745\n//*                                                                 *   FILE 745\n//*     When a sequential file is first displayed, it is shown      *   FILE 745\n//*     using the default format which is BROWSE.  PDS(/E)          *   FILE 745\n//*     directories are displayed as member lists.  You can         *   FILE 745\n//*     change which format is being used by entering \"FORMAT       *   FILE 745\n//*     nnnnnnnn\" as a primary command.                             *   FILE 745\n//*                                                                 *   FILE 745\n//*                                                                 *   FILE 745\n//*     Formats are defined by members in the FMFORMAT library.     *   FILE 745\n//*                                                                 *   FILE 745\n//*     As supplied the formats available are:                      *   FILE 745\n//*                                                                 *   FILE 745\n//*      BROWSE        Displays data 'a-line-at-a-time' that        *   FILE 745\n//*                    allows up, down, left, and right             *   FILE 745\n//*                    scrolling.                                   *   FILE 745\n//*                                                                 *   FILE 745\n//*      DIR           Used to display non-loadlib PDS(/E)          *   FILE 745\n//*                    directories.                                 *   FILE 745\n//*                                                                 *   FILE 745\n//*      HEX           Displays data as two hex characters per      *   FILE 745\n//*                    byte.  The display allows scrolling up,      *   FILE 745\n//*                    down, left, and right.                       *   FILE 745\n//*                                                                 *   FILE 745\n//*      LDIR          Used to display loadlib PDS(/E)              *   FILE 745\n//*                    directories.                                 *   FILE 745\n//*                                                                 *   FILE 745\n//*      RVTOC         Displays VTOC info in \"raw\" form.            *   FILE 745\n//*                                                                 *   FILE 745\n//*      SMF           Assumes the data is SMF data.  Most SMF      *   FILE 745\n//*                    record types have customized displays.       *   FILE 745\n//*                    Some records have multiple \"screens\".        *   FILE 745\n//*                    \"up\" and \"down\" scrolls records, \"left\"      *   FILE 745\n//*                    and \"right\" change \"screens\" for a given     *   FILE 745\n//*                    record.                                      *   FILE 745\n//*                                                                 *   FILE 745\n//*      VHEX          Displays data in 'vertical' hex.  Each       *   FILE 745\n//*                    record is displayed the way ISPF displays    *   FILE 745\n//*                    hex values.                                  *   FILE 745\n//*                                                                 *   FILE 745\n//*      VTOC          Displays data sets on a volume.              *   FILE 745\n//*                                                                 *   FILE 745\n//*     FM does not require APF authorization and does not          *   FILE 745\n//*     update data sets.                                           *   FILE 745\n//*                                                                 *   FILE 745\n//*     It does not do much to verify data is valid (like           *   FILE 745\n//*     packed decimal) before using it.  If dates in PDS(/E)       *   FILE 745\n//*     directores are not valid, SMF data is not valid, etc,       *   FILE 745\n//*     etc, FM will ABEND.  Intercepting ABENDs is another one     *   FILE 745\n//*     of those 'round tuit's.                                     *   FILE 745\n//*                                                                 *   FILE 745\n//*     FM does not update anything, so the best way to learn       *   FILE 745\n//*     how to use it is to just \"play around\" with it.             *   FILE 745\n//*                                                                 *   FILE 745\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DOC": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t\\x07\\x7f\\x01\\t\\x07\\x7f $\\x02\\xdf\\x02\\xdf\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-18T00:00:00", "modifydate": "2009-03-18T20:24:00", "lines": 735, "newlines": 735, "modlines": 0, "user": "OS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "FORMATS": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t\\x07\\x7f\\x01\\t\\x07\\x7f $\\x01-\\x01-\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-18T00:00:00", "modifydate": "2009-03-18T20:24:00", "lines": 301, "newlines": 301, "modlines": 0, "user": "OS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "ISPPLIB": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t\\x07\\x7f\\x01\\t\\x07\\x7f $\\x07d\\x07d\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-18T00:00:00", "modifydate": "2009-03-18T20:24:00", "lines": 1892, "newlines": 1892, "modlines": 0, "user": "OS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "JCL": {"ttr": 1797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t\\x07\\x7f\\x01\\t\\x07\\x7f $\\x02p\\x02p\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-18T00:00:00", "modifydate": "2009-03-18T20:24:00", "lines": 624, "newlines": 624, "modlines": 0, "user": "OS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "MACS": {"ttr": 2053, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t\\x07\\x7f\\x01\\t\\x07\\x7f $\\t\\xa7\\t\\xa7\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-18T00:00:00", "modifydate": "2009-03-18T20:24:00", "lines": 2471, "newlines": 2471, "modlines": 0, "user": "OS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "OPTS": {"ttr": 3077, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t\\x07\\x7f\\x01\\t\\x07\\x7f $\\x00\\x06\\x00\\x06\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-18T00:00:00", "modifydate": "2009-03-18T20:24:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "OS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SMF": {"ttr": 3079, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t\\x07\\x7f\\x01\\t\\x07\\x7f $:&:&\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-18T00:00:00", "modifydate": "2009-03-18T20:24:00", "lines": 14886, "newlines": 14886, "modlines": 0, "user": "OS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SMGR": {"ttr": 9217, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t\\x07\\x7f\\x01\\t\\x07\\x7f $\\t\\x06\\t\\x06\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-18T00:00:00", "modifydate": "2009-03-18T20:24:00", "lines": 2310, "newlines": 2310, "modlines": 0, "user": "OS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SOURCE": {"ttr": 9992, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t\\x07\\x7f\\x01\\t\\x07\\x7f $\\x9e\\x7f\\x9e\\x7f\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-18T00:00:00", "modifydate": "2009-03-18T20:24:00", "lines": 40575, "newlines": 40575, "modlines": 0, "user": "OS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "USERFMT": {"ttr": 26627, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t\\x07\\x7f\\x01\\t\\x07\\x7f $\\x0c;\\x0c;\\x00\\x00\\xd6\\xe2@@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-03-18T00:00:00", "modifydate": "2009-03-18T20:24:00", "lines": 3131, "newlines": 3131, "modlines": 0, "user": "OS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT745/FILE745.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT745", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}