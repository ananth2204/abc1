{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011249000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE117.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE117.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x06\\x08'", "DS1TRBAL": "b'\\x82\\x8e'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\xbc\\x00\\x06\\x00\\xbc\\x00\\x0c\\x00\\x07'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOCWTOE": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "                USING THE \"MESSAGE PROCESSING FACILITY\"\n                  OTHERWISE KNOWN AS \"MANY WTO EXITS\"\n\n ENCLOSED ARE SEVERAL WTO EXITS WRITTEN ACCORDING TO THE STANDARDS OF\n THE \"MESSAGE PROCESSING FACILITY\" UNDER MVS/SP2.1.2.  THESE EXITS HAVE\n REPLACED \"R2D2\" FROM THE CB&T TAPE.  OTHER FEATURES OF \"R2D2\" ARE NOT\n USED AT OUR CENTER.  NO CHANGE WAS MADE TO RUN UNDER MVS/SP2.1.3.\n\n THE EXITS MUST BE ASSEMBLED AS \"RENT,NOALIGN\" AND LINK-EDITED WITH THE\n OPTIONS \"RENT,REUS\" INTO THE LINK LIST.  THE \"MPFLSTxx\" MUST BE IN\n SYS1.PARMLIB AND AN ENTRY MADE IN \"IEASYSxx\".\n\n THESE EXITS CAN ABEND ANYWHERE AND NOT CAUSE ANY PROBLEMS.  THE ONLY\n PROBLEM THAT I HAVE NOTICED IN IMPLEMENTING ANY MPF EXIT IS THAT THE\n IEZMGCR MACRO FROM IBM MUST HAVE AN \"ORG\" IMMEDIATELY AFTER IT TO\n PREVENT PROBLEMS.\n\n IF \"IEAVMXIT\" IS LINKED INTO THE LINKLIST, IT WILL BE USED.  IT NEEDS\n NO ENTRY IN \"MPFLSTxx\".\n\n MOST OF THE EXITS ARE SELF-EXPLANATORY.  THE ONES THAT ARE IMPLEMENTED\n NOW ARE:\n          WTODB103  WTO EXIT- DATACOM/DB BACKOUT MESSAGE\n          WTOD1001  WTO EXIT TO SCHEDULE DATACOM PXX CLEAR TASK\n          WTOECVT   MACRO TO STORE FIELDS FROM IMS /DIS A\n          WTOEDB30  WTO EXIT TO DUMP DATACOM-DB LOG\n          WTOEF97I  WTO EXIT TO SUPPRESS MSG IEF097I\n          WTOEIUTL  WTO EXIT TO ISSUE IMS /DIS A\n          WTOEI000  WTO EXIT TO INTERPRET IMS /DIS A\n          WTOEI554  WTO EXIT TO INTERPRET IMS /DIS A\n          WTOEI996  WTO EXIT TO SAVE IMS REPLY NUMBER\n          WTOENROL  WTO EXIT TO STOP A MESSAGE FROM ROLLING\n          WTOERD    WTOR EXIT TO REPLY \"D\" TO MESSAGE\n          WTOERHLD  WTOR EXIT TO REPLY \"HOLD\" TO MSG IEF225D\n          WTOERM    WTOR EXIT TO REPLY \"M\" TO MESSAGE\n          WTOERNHL  WTOR EXIT TO REPLY \"NOHOLD\" TO MESSAGE\n          WTOEROLL  WTO EXIT TO CAUSE A MESSAGE TO ROLL\n          WTOERU    WTOR EXIT TO REPLY \"U\" TO MESSAGE\n          WTOERWAT  WTOR EXIT TO REPLY \"WAIT\" TO MESSAGE\n          WTOERY    WTOR EXIT TO REPLY \"Y\"\n          WTOER301  WTOR EXIT TO REPLY \"JOBNAME\" TO IEC301A\n          WTOETPS1  WTO EXIT TO CAPTURE TAPE UNLOAD DATA\n          WTOETPS2  WTO EXIT TO DISPLAY TAPE UNLOADED DATA\n|         WTOEUCVT  WTO EXIT TO CREATE A USER CVT IF NONE EXISTS\n          WTOE176I  WTO EXIT TO STOP EXTERNAL WRITER\n          WTOE315I  PROCESS NPM MSGFNM315I AT SHUTDOWN\n          WTOE362A  WTO EXIT TO DUMP AN SMF MANX DATASET\n\n THE TWO EXITS \"WTOETPSn\" ARE USED TO STORE THE LAST TAPE USED ON EACH\n TAPE DRIVE AND DISPLAY IT FOR THE OPERATOR WHEN ANOTHER MOUNT FOR\n THAT TAPE IS ISSUED.  THE MESSAGE IS \"TAPE XXXXXX MAY STILL BE ON\n DRIVE XXX\".  THIS WAS DESIGNED FOR THE IBM 3480 TAPE DRIVE WITH THE\n TAPE STACKER FEATURE BECAUSE IT CAN HOLD SIX \"USED\" TAPES PER DRIVE.\n IN OUR SHOP, THAT WORKS OUT TO A MAXIMUM OF 148 TAPES THAT ARE STILL\n ON THE TAPE DRIVES (UP FROM 28 BEFORE THE TAPE STACKER FEATURE) AND\n EFFECTIVELY LOST AS FAR AS THE TAPE OPERATORS ARE CONCERNED.  THE\n TAPE CONFIGURATION MUST BE ASSEMBLED INTO THE WTOETPS1 EXIT WITH THE\n INTERNALLY DEFINED \"STRING\" MACRO.  THE TABLE TO HOLD THE TAPE VOLUME\n SERIAL NUMBER AND THE TAPE DRIVE ADDRESS IS IN EXTENDED CSA. THE TABLE\n|IS POINTED TO BY A FIELD IN OUR USERCVT (SEE WTOEUCVT) THAT IS ANCHORED\n IN THE CVTUSER FIELD OF THE MVS CVT.  THE EXITS DO A LOT OF VALIDITY\n CHECKING SO EITHER EXIT CAN BE INSTALLED FIRST.\n\n THE \"WTOEIxxx\" EXITS ARE TO AUTOMATICALLY CANCEL IMS BMPS THROUGH THE\n OUTSTANDING REPLY.  THEY DEPEND HEAVILY ON OUR USERCVT AND WILL NOT\n ASSEMBLE WITHOUT IT OR A REPLACEMENT.  THEY ARE INCLUDED AS AN EXAMPLE\n OF WHAT CAN BE DONE USING WTO EXITS TO PROCESS MULTIPLE, ASYNCHRONOUS\n MESSAGES.\n\n\n\n SUPPORTED BY:\n      JAMES F. COOK\n      THE COCA-COLA COMPANY\n      ONE COCA-COLA PLAZA, N.W.\n      ATLANTA, GA  30313\n      (404) 676-8510\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IEAVMXIT": {"ttr": 519, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET IEAVMXIT   AT LEVEL 006 AS OF 12/21/84\nIEAVMXIT TITLE 'IEAVMXIT -- GENERAL PURPOSE WTO EXIT'\nIEAVMXIT CSECT\nIEAVMXIT AMODE 31\nIEAVMXIT RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'IEAVMXIT'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)      PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         CLC   CTXTRCLN,=H'2' ANY ROUTING CODES?\n         BL    RETURN          NO, FORGET IT\n         L     R10,CTXTRCP    LOAD POINTER TO THE ROUTING CODES\n         USING CTXTROUT,R10\n         CLC   TESTROUT,CTXTR001 IS THIS ROUTCDE=11?\n         BNE   RETURN             NO, SKIP IT\n         DROP  R10\n         OI    CTXTRFB2,CTXTRHCO FORCE HARDCOPY ONLY\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nTESTROUT DC    AL2(CTXTR11)   ROUTCDE=11\n         LTORG\n         SPACE 3\n         PRINT   GEN\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   IEAVMXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MPFLST00": {"ttr": 521, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "$HASP002,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)    DOES IT WORK? 4/22/84\n$HASP601,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)    DOES IT WORK? 4/22/84\n$HASP479,SUP(NO),RETAIN(NO),USEREXIT(WTOERY)                    6/16/86\nACF99900,SUP(YES),RETAIN(NO)                                    3/24/85\nDB00103I,SUP(NO),RETAIN(NO),USEREXIT(WTODB103)                  5/06/86\nDB00301I,SUP(NO),RETAIN(NO),USEREXIT(WTOEDB30)                  9/27/85\nDB00302A,SUP(NO),RETAIN(NO),USEREXIT(WTOEROLL)                  6/04/86\nDB01001W,SUP(NO),RETAIN(NO),USEREXIT(WTOD1001)                  9/19/86\nDFS000I,SUP(NO),RETAIN(NO),USEREXIT(WTOEI000)                  11/16/84\nDFS941I,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                  12/06/84\nDFS942I,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                   1/08/85\nDFS996I,SUP(NO),RETAIN(NO),USEREXIT(WTOEI996)                  11/16/84\nFNM315I,SUP(NO),RETAIN(NO),USEREXIT(WTOE315I)                   6/30/86\nIECTMS9,SUP(YES),RETAIN(NO)                                    10/29/85\nIEC301A,SUP(NO),RETAIN(NO),USEREXIT(WTOER301)                   9/17/84\nIEC501A,SUP(NO),RETAIN(NO),USEREXIT(WTOETPS2)                   6/16/86\nIEC501E,SUP(NO),RETAIN(NO),USEREXIT(WTOETPS2)                   6/16/86\nIEC502E,SUP(NO),RETAIN(NO),USEREXIT(WTOETPS1)                   6/12/86\nIEC507D,SUP(NO),RETAIN(NO),USEREXIT(WTOERU)                     8/26/84\nIEC701D,SUP(NO),RETAIN(NO),USEREXIT(WTOERM)                     7/16/85\nIEE362A,SUP(NO),RETAIN(NO),USEREXIT(WTOE362A)                   2/06/85\nIEE828E,SUP(NO),RETAIN(NO),USEREXIT(WTOEROLL)                  11/14/84\nIEFTMS0,SUP(NO),RETAIN(NO),USEREXIT(WTOERU)                     9/29/84\nIEF225D,SUP(NO),RETAIN(NO),USEREXIT(WTOERHLD)                   9/10/86\nIEF233A,SUP(NO),RETAIN(NO),USEREXIT(WTOETPS2)                   6/16/86\nIEF233D,SUP(NO),RETAIN(NO),USEREXIT(WTOETPS2)                   6/16/86\nIEF234E,SUP(NO),RETAIN(NO),USEREXIT(WTOETPS1)                   6/12/86\nIEF238D,SUP(YES),RETAIN(NO),USEREXIT(WTOERWAT)                  9/09/84\nIEF302A,SUP(NO),RETAIN(NO),USEREXIT(WTOERD)                     8/09/85\nIEF383A,SUP(NO),RETAIN(NO),USEREXIT(WTOERU)                     7/07/88\nIEF433D,SUP(NO),RETAIN(NO),USEREXIT(WTOERNHL)                  11/14/84\nIEF434D,SUP(NO),RETAIN(NO),USEREXIT(WTOERNHL)                  11/14/84\nIFB040I,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                   9/09/84\nIFB060I,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                   9/09/84\nIST020I,SUP(NO),RETAIN(NO),USEREXIT(WTOEVTAM)                   9/26/86\nQFS450I,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                   1/10/86\nSCON001,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                   9/18/86\nSDSI001,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                   9/18/86\nSORT001,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                   4/10/86\nSORT002,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                   4/10/86\nSORT999,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                   4/10/86\nSTM001I,SUP(NO),RETAIN(NO),USEREXIT(WTOENROL)                   9/18/86\nTSP200I,SUP(NO),RETAIN(NO),USEREXIT(WTOEROLL)                  10/26/86\nUTL005I,SUP(NO),RETAIN(NO),USEREXIT(WTOEIUTL)                  11/16/84\nUTL006I,SUP(NO),RETAIN(NO),USEREXIT(WTOEIUTL)                  11/16/84\nIEF097I,SUP(YES),RETAIN(NO),USEREXIT(WTOEF97I)                 05/19/86\nIEF176I,SUP(NO),RETAIN(NO),USEREXIT(WTOE176I)                  07/07/86\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NEWGENER": {"ttr": 523, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET O9061S13   AT LEVEL 003 AS OF 05/06/81\nGENER    TITLE 'IEBGENER TYPE UTILITY FOR REMOTE CENTER TRANSMISSIONS'\n****************\n*** PARM VALUES - TSO - ROUTES THE WTO RECORD CNT TO TSO USER\n****************\n*  MODIFIED 01/26/81 FOR THE FOLLOWING:                              RS\n*  (1) MADE REENTRANT.                                               RS\n*  (2) TO CORRECTLY HANDLE RECFM=VBS, A SYSUT1 OPEN EXIT ADDS        RS\n*      BFTEK=A TO THE DCB IF RECORDS ARE SPANNED.                    RS\n*  (3) IF SYSUT1 IS FS/FBS, THE STANDARD BIT IS TURNED OFF, SO THAT  RS\n*      CONCATENATION OF INPUT WILL WORK.                             RS\n*  (4) COPYING OF SYSUT1'S RECFM/LRECL/BLKSIZE INTO THE SYSUT2 DCB,  RS\n*      WHEN THE LATTER IS ZERO, IS MOVED FROM BEFORE THE SYSUT2      RS\n*      OPEN (PRECEDED BY A RDJFCB) TO A SYSUT2 OPEN EXIT; THIS       RS\n*      ALLOWS VALUES IN A PREEXISTING DSCB TO BE HONORED.  (RDJFCB   RS\n*      SHOWED WHAT WAS ON THE DD CARD, BUT NOT WHAT WAS IN THE       RS\n*      LABEL OF AN OLD SYSUT2 DATA SET.)                             RS\n*  (5) ADDITIONAL SYSUTN DD'S (N=3 TO 9) ARE TREATED AS ADDITIONAL   RS\n*      OUTPUT FILES TO WHICH SYSUT1 IS ALSO COPIED.  THIS ONE WAS    RS\n*      REQUESTED BY BOB.                                             RS\n*  (6) IF SYSUT1 HAS RECFM=U, OR IF SYSUT1 AND SYSUT2-9 ARE NOT      RS\n*      BOTH RECFM=F OR BOTH RECFM=V, THE PROGRAM TERMINATES WITH     RS\n*      RETURN CODE 16.  ADDING CODE TO GO FROM F TO V OR VICE VERSA  RS\n*      OR TO CHECK RESIDUALS FROM READING U'S WOULD RELINQUISH       RS\n*      TRNGENER'S LAST CLAIM TO SIMPLICITY.                          RS\n*  (7) REMOVED \"PRIME\" AND \"TERME\" MACROS SINCE I'M NOT FAMILIAR     RS\n*      WITH THEM.                                                    RS\n*  (8) REMOVED THE \"EOF\" OPTION, WHICH DIDN'T WORK ANYWAY.           RS\n*  (9) USED STANDARD MACROS FOR DCB, PSA, TCB, AND TIOT.  WHO KNOWS, RS\n*      THOSE DISPLACEMENTS MIGHT CHANGE SOMEDAY.                     RS\n*  MODIFIED 05/05/81 TO FIX VBS BUG ON CONCATENATED INPUT.       RS0581\n****************                                                     RS\nTRNGENER CSECT                                                       RS\n         SAVE  (14,12)             SAVE REGISTERS                    RS\n         BALR  R12,0               LOAD BASE REGISTER                RS\n         USING *,R12               ADDRESSABILITY                    RS\n         L     R2,0(,R1)           ADDRESS OF PARM                   RS\n         L     R0,GETMPARM         SUBPOOL AND LENGTH                RS\n         GETMAIN R,LV=(0)          GET DYNAMIC AREA                  RS\n         XC    0(72,R1),0(R1)      CLEAR FRONT FOR SAVE AREA         RS\n         ST    R13,4(,R1)          SAVE AREA                         RS\n         ST    R1,8(,R13)            CHAINING                        RS\n         LR    R13,R1              POINT TO NEW AREA                 RS\n         USING WORKAREA,R13        USE DSECT FOR IT                  RS\n         MVC   SYSUT1(DCBLEN),DCBSKEL1  SET UP DCB'S IN              RS\n         MVC   SYSUT2(DCBLEN),DCBSKEL2   DYNAMIC AREA                RS\n         MVC   SYSUT3(DCBLEN),DCBSKEL2                               RS\n         MVI   SYSUT3+(DCBDDNAM+5-IHADCB),C'3'  SET DDNAME           RS\n         MVC   SYSUT4(DCBLEN),DCBSKEL2                               RS\n         MVI   SYSUT4+(DCBDDNAM+5-IHADCB),C'4'  SET DDNAME           RS\n         MVC   SYSUT5(DCBLEN),DCBSKEL2                               RS\n         MVI   SYSUT5+(DCBDDNAM+5-IHADCB),C'5'  SET DDNAME           RS\n         MVC   SYSUT6(DCBLEN),DCBSKEL2                               RS\n         MVI   SYSUT6+(DCBDDNAM+5-IHADCB),C'6'  SET DDNAME           RS\n         MVC   SYSUT7(DCBLEN),DCBSKEL2                               RS\n         MVI   SYSUT7+(DCBDDNAM+5-IHADCB),C'7'  SET DDNAME           RS\n         MVC   SYSUT8(DCBLEN),DCBSKEL2                               RS\n         MVI   SYSUT8+(DCBDDNAM+5-IHADCB),C'8'  SET DDNAME           RS\n         MVC   SYSUT9(DCBLEN),DCBSKEL2                               RS\n         MVI   SYSUT9+(DCBDDNAM+5-IHADCB),C'9'  SET DDNAME           RS\n         MVC   WTOMSG(WTOMSGL),WTOSKEL  MOVE WTO LIST FORM           RS\n         MVI   EXITSW,X'00'        INITIALIZE                        RS\n         XC    FLAG,FLAG             DYNAMIC FIELDS                  RS\n         XC    RTNCODE,RTNCODE                                       RS\n         MVC   EXL2(8),EXL2SKEL    SET UP EXIT LIST FOR OUTPUT DCBS  RS\n         LA    R1,JFCBBUF           IN DYNAMIC AREA (BECAUSE IT HAS  RS\n         STCM  R1,7,EXL2+5          DYNAMIC JFCB BUFFER ADDRESS)     RS\n         SR    R5,R5               ZERO RECORD COUNTER               RS\n         CLC   0(2,R2),=H'3'       IS THERE A PARM (OF RIGHT LENGTH) RS\n         BNE   *+10                FORGET IT IF NOT                  RS\n         MVC   FLAG,2(R2)          SAVE PARM                         RS\n         L     R1,PSATOLD-PSA      OUR TCB ADDRESS                   RS\n         L     R1,TCBTIO-TCB(,R1)  TIOT ADDRESS                      RS\n         MVC   WTOJOB,TIOCNJOB-TIOT1(R1)   PUT OUR JOBNAME-STEPNAME  RS\n         MVC   WTOSTEP,TIOCSTEP-TIOT1(R1)   INTO MESSAGE             RS\n         LA    R2,SYSUT1           POINT TO SYSUT1 DCB               RS\n         ST    R2,LISTFORM         PUT DCB ADDRESS INTO OPEN LIST    RS\n         MVI   LISTFORM,X'80'      FLAG INPUT AND END-OF-LIST        RS\n         LA    R1,LISTFORM         POINT TO LIST FORM                RS\n         OPEN  MF=(E,(1))          OPEN SYSUT1                       RS\n         TM    SYSUT1+(DCBRECFM-IHADCB),DCBRECU  RECFM=U?            RS\n         BNO   GETRECFM            BRANCH IF NOT RECFM=U             RS\n         MVC   RTNCODE,=F'16'      SET RC=16                         RS\n         B     CLOSEIN             QUIT (RECFM=U NOT SUPPORTED)      RS\nGETRECFM SLR   R6,R6                                                 RS\n         IC    R6,SYSUT1+(DCBRECFM-IHADCB)  GET INPUT RECFM          RS\n         SRL   R6,6                SHIFT OUT ALL BUT FIRST 2 BITS    RS\n*   NOW R6=1 FOR VARIABLE, 2 FOR FIXED; WILL COMPARE WITH OUTPUTS.   RS\nOPENOUT  LA    R2,SYSUT2           POINT TO 1ST OUTPUT DCB (SYSUT2)  RS\n         LA    R3,8                LOOP COUNTER                      RS\nOPENLOOP LA    R1,EXL2             PUT ADDRESS OF EXIT LIST          RS\n         STCM  R1,7,DCBEXLSA-IHADCB(R2)  (DYNAMIC) INTO DCB          RS\n         ST    R2,LISTFORM         PUT DCB ADDRESS INTO LIST FORM    RS\n         MVI   LISTFORM,X'80'      FLAG END OF LIST                  RS\n         LA    R1,LISTFORM         POINT TO LIST FORM                RS\n         RDJFCB MF=(E,(1))         SEE IF DD CARD WAS PRESENT        RS\n         LTR   R15,R15             RC = 0 MEANS IT WAS               RS\n         BNZ   OPENNEXT            SKIP OPEN IF NO DD CARD           RS\n         MVI   LISTFORM,X'8F'      FLAG OUTPUT AND END-OF-LIST       RS\n         LA    R1,LISTFORM         POINT TO LIST FORM                RS\n         OPEN  MF=(E,(1))          OPEN AN OUTPUT DCB                RS\n         SLR   R7,R7                                                 RS\n         IC    R7,DCBRECFM-IHADCB(,R2)  GET OUTPUT RECFM             RS\n         SRL   R7,6                SHIFT OUT ALL BUT FIRST 2 BITS    RS\n         CLR   R6,R7               BRANCH IF COPYING RECFM=F TO F    RS\n         BE    OPENNEXT             OR V TO V                        RS\n         MVC   RTNCODE,=F'16'      OTHERWISE SET RC=16               RS\n         B     EOJHALT              AND QUIT                         RS\nOPENNEXT LA    R2,DCBLEN(,R2)      BUMP TO NEXT OUTPUT DCB           RS\n         BCT   R3,OPENLOOP         REPEAT FOR SYSUT2 THRU 9          RS\n*  MAINLINE (SEE HOW SHORT IT IS!)                                   RS\nGETRECD  GET   SYSUT1         READ ANOTHER RECORD\n         TM    EXITSW,X'0F'   IS THE REREAD SWITCH ON?\n         BO    REREAD          YES, REREAD THE RECORD\n         LR    R4,R1               ADDRESS OF INPUT RECORD           RS\n         LA    R2,SYSUT2           POINT TO 1ST OUTPUT DCB (SYSUT2)  RS\n         LA    R3,8                LOOP COUNTER                      RS\nWRITLOOP TM    DCBOFLGS-IHADCB(R2),DCBOFOPN  DID WE OPEN THIS ONE?   RS\n         BNO   WRITNEXT            IF NOT, DON'T WRITE TO IT         RS\n         LR    R1,R2               POINT TO OUTPUT DCB               RS\n         LR    R0,R4               POINT TO RECORD                   RS\n         PUT   (1),(0)             WRITE A RECORD                    RS\nWRITNEXT LA    R2,DCBLEN(,R2)      BUMP TO NEXT OUTPUT DCB           RS\n         BCT   R3,WRITLOOP         REPEAT FOR SYSUT2 THRU 9          RS\n         LA    R5,1(,R5)      ADD ONE TO RECORD COUNTER              RS\n         B     GETRECD        GO TO READ ANOTHER RECORD\nREREAD   NI    EXITSW,X'F0'   LOAD ZERO INTO THE REREAD SWITCH\n         B     GETRECD        GO TO READ ANOTHER RECORD\n*  TERMINATION                                                       RS\nEOJHALT  LA    R2,SYSUT2           POINT TO 1ST OUTPUT DCB (SYSUT2)  RS\n         LA    R3,8                LOOP COUNTER                      RS\nCLOSLOOP TM    DCBOFLGS-IHADCB(R2),DCBOFOPN  DID WE OPEN THIS ONE?   RS\n         BNO   CLOSNEXT            IF NOT, DON'T CLOSE IT            RS\n         ST    R2,LISTFORM         PUT DCB ADDRESS INTO LIST         RS\n         MVI   LISTFORM,X'80'      FLAG END OF LIST                  RS\n         LA    R1,LISTFORM         POINT TO LIST FORM                RS\n         CLOSE MF=(E,(1))          CLOSE AN OUTPUT DCB               RS\nCLOSNEXT LA    R2,DCBLEN(,R2)      BUMP TO NEXT OUTPUT DCB           RS\n         BCT   R3,CLOSLOOP         REPEAT FOR SYSUT2 THRU 9          RS\nCLOSEIN  LA    R2,SYSUT1           POINT TO SYSUT1 DCB               RS\n         ST    R2,LISTFORM         PUT DCB ADDRESS INTO LIST         RS\n         MVI   LISTFORM,X'80'      FLAG END OF LIST                  RS\n         LA    R1,LISTFORM         POINT TO LIST FORM                RS\n         CLOSE MF=(E,(1))          CLOSE SYSUT1                      RS\n         CVD   R5,WORKDW           CONVERT RECORD COUNT TO DECIMAL   RS\n         MVC   WTOADDR(L'EDCNTR),EDCNTR     MOVE EDIT PATTERN TO WTO\n         ED    WTOADDR(L'EDCNTR),WORKDW+1   EDIT COUNT INTO WTO      RS\n* WTO\n         LH    R0,WTOMSG\n         LA    R1,WTOJOB\n         CLC   =C'TSO',FLAG\n         BNE   WTOSVC\n         TPUT  (1),(0),R\n         B     TERME\nWTOSVC   WTO   MF=(E,WTOMSG)  PRINT IT TO MESSAGE CLASS\nTERME    L     R2,RTNCODE          LOAD RETURN CODE (BUT NOT IN R15) RS\n         L     R0,GETMPARM         SUBPOOL AND LENGTH OF DYNAM AREA  RS\n         LR    R1,R13              POINT TO START OF DYNAMIC AREA    RS\n         L     R13,4(,R13)         RESTORE CALLER'S S.A. POINTER     RS\n         FREEMAIN R,LV=(0),A=(1)   FREE OUR LAST PIECE OF CORE       RS\n         L     R14,12(,R13)        RESTORE R14                       RS\n         LR    R15,R2              SET RETURN CODE IN R15            RS\n         LM    R0,R12,20(R13)      RESTORE R0-R12                    RS\n         BR    R14                 EXIT                              RS\n         SPACE 2\nEXL      DS    0F             EXIT LIST FOR SYSUT1\n         DC    X'85'          INFORMING THE EXIT THAT THIS IS A DCBEXIT\n         DC    AL3(DCB1EXIT)   THE ADDRESS OF THE EXIT\n         DS    0H             FORCE HALFWORD ALLIGNMENT\nDCB1EXIT TM    EXITSW,X'F0'   DCB EXIT--TEST FOR FIRST TIME THROUGH\n         BZ    DCBEXIT1        YES, FIRST TIME THROUGH\n         OI    EXITSW,X'0F'   TURN ON THE REREAD SWITCH, DCB CLOSED\n         B     CKSPAN         CHECK FOR VBS ON SECOND FILE       RS0581\nDCBEXIT1 MVI   EXITSW,X'F0'   SET THE FIRST SWITCH OFF\n         OI    SYSUT1+(DCBOFLGS-IHADCB),DCBOFPPC  SET CONCAT SWITCH  RS\nCKSPAN   DS    0H                                                RS0581\n         TM    SYSUT1+(DCBRECFM-IHADCB),DCBRECSB  \"S\" BIT ON?        RS\n         BCR   14,R14         (BNOR)  RETURN IF NOT                  RS\n         TM    SYSUT1+(DCBRECFM-IHADCB),DCBRECV  VARIABLE?           RS\n         BO    SPANNED        YES--\"S\" MEANS SPANNED                 RS\n         NI    SYSUT1+(DCBRECFM-IHADCB),255-DCBRECSB  NO--\"S\" MEANS  RS\n*                                             STANDARD--TURN IT OFF  RS\n         BR    R14            RETURN                                 RS\nSPANNED  OI    SYSUT1+(DCBBFTEK-IHADCB),DCBBFTA  SET BFTEK=A         RS\n         BR    R14            RETURN\n         SPACE 1\nEXL2SKEL DS    0F             SKELETON EXIT LIST FOR SYSUT2-9        RS\n         DC    X'05'          DCB OPEN EXIT IDENTIFIER               RS\n         DC    AL3(DCB2EXIT)   THE ADDRESS OF THE EXIT               RS\n         DC    X'87'          RDJFCB EXIT IDENTIFIER                 RS\n         DC    AL3(0)         JFCB BUFFER ADDRESS PLUGS IN HERE      RS\n         DS    0H             FORCE HALFWORD ALIGNMENT               RS\n         USING IHADCB,R1           R1 POINTS TO THE DCB              RS\nDCB2EXIT CLC   DCBBLKSI,HZERO      IF NO OUTPUT BLKSIZE,             RS\n         BNE   *+10                                                  RS\n         MVC   DCBBLKSI,SYSUT1+(DCBBLKSI-IHADCB)  COPY FROM INPUT    RS\n         CLC   DCBLRECL,HZERO      IF NO OUTPUT LRECL,               RS\n         BNE   *+10                                                  RS\n         MVC   DCBLRECL,SYSUT1+(DCBLRECL-IHADCB)  COPY FROM INPUT    RS\n         CLI   DCBRECFM,X'00'      IF NO OUTPUT RECFM,               RS\n         BCR   7,R14          (BNER)                                 RS\n         MVC   DCBRECFM,SYSUT1+(DCBRECFM-IHADCB)  COPY FROM INPUT    RS\n         BR    R14            RETURN                                 RS\n         DROP  R1                                                    RS\n         SPACE 1\n*  STATIC AREA (UNCHANGEABLE)                                        RS\nDCBSKEL1 DCB   DDNAME=SYSUT1,DSORG=PS,EODAD=EOJHALT,MACRF=GL,EXLST=EXL\n         DS    0F                  ALIGN TO FULLWORD                 RS\nDCBLEN   EQU   *-DCBSKEL1          LENGTH OF A DCB                   RS\nDCBSKEL2 DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,EXLST=EXL2SKEL        RS\nSKELOPEN OPEN  (,),MF=L       SKELETON OPEN LIST FORM                RS\nWTOSKEL  WTO   'JOBNAMEX/NOSTEPNM N,NNN,NNN,NNN,NNN RECORDS COPIED',   X\n               ROUTCDE=11,MF=L\nWTOMSGL  EQU   *-WTOSKEL                                             RS\nGETMPARM DC    0F'0',AL1(001),AL3(WRKAREAL)  GETMAIN SP AND LENGTH   RS\n***** NOTE--CHANGE THIS SUBPOOL IF THIS PROGRAM IS PUT IN LPA. ******RS\nHZERO    DC    H'0'\nEDCNTR   DC    X'40206B2020206B2020206B2020206B202120'\n         LTORG\n*  DYNAMIC AREA                                                      RS\nWORKAREA DSECT                                                       RS\n         DS    18F            STANDARD SAVE AREA                     RS\nSYSUT1   DS    CL(DCBLEN)     SYSUT1 DCB BUILT HERE                  RS\nSYSUT2   DS    CL(DCBLEN)     SYSUT2 DCB BUILT HERE                  RS\nSYSUT3   DS    CL(DCBLEN)     SYSUT3 DCB BUILT HERE                  RS\nSYSUT4   DS    CL(DCBLEN)     SYSUT4 DCB BUILT HERE                  RS\nSYSUT5   DS    CL(DCBLEN)     SYSUT5 DCB BUILT HERE                  RS\nSYSUT6   DS    CL(DCBLEN)     SYSUT6 DCB BUILT HERE                  RS\nSYSUT7   DS    CL(DCBLEN)     SYSUT7 DCB BUILT HERE                  RS\nSYSUT8   DS    CL(DCBLEN)     SYSUT8 DCB BUILT HERE                  RS\nSYSUT9   DS    CL(DCBLEN)     SYSUT9 DCB BUILT HERE                  RS\nLISTFORM DS    F              OPEN/CLOSE/RDJFCB LIST FORM BUILT HERE RS\nEXL2     DS    2F             OUTPUT DCB EXIT LIST BUILT HERE        RS\nFLAG     DS    CL3            PARM IS STORED HERE                    RS\nEXITSW   DS    X              EXIT CONTROL SWITCH CONSTANT           RS\nWORKDW   DS    D              USED FOR CVD                           RS\nRTNCODE  DS    F              RETURN CODE AT TERMINATION             RS\nWTOMSG   DS    0F,CL(WTOMSGL)  WTO LIST FORM BUILT HERE              RS\nWTOJOB   EQU   WTOMSG+4,8                                            RS\nWTOSTEP  EQU   WTOMSG+13,8                                           RS\nWTOADDR  EQU   WTOMSG+21,18                                          RS\nJFCBBUF  DS    0F,CL176       JFCB BUFFER (WE NEVER LOOK AT IT)      RS\nWRKAREAL EQU   *-WORKAREA     LENGTH OF DYNAMIC AREA                 RS\n         PRINT NOGEN\n         DCBD  DSORG=PS\nTIOT     DSECT\n         IEFTIOT1\n         IHAPSA\n         IKJTCB\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REGEQU": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         REGEQU\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USERCVT": {"ttr": 530, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*                THIS DSECT DEFINES THE FIELDS THAT                     00001\n* ARE IN THE AREA POINTED TO BY THE \"CVTUSER\" FIELD IN THE SYSTEM CVT.  00002\n*                                                                       00005\n*        TO ENQUE ON THIS TABLE SPECIFY:                                00006\nUSERCVTQ DC   CL8'USERCVT'     -- QNAME                                 00007\nUSERCVTR DC   C'USERCVT.TABLE' -- RNAME                                 00008\n*     YOU MUST ENQUE WITH THE OPTIONS \"EXCLUSIVE,SYSTEMS\" FOR UPDATING  00009\n*     AND WITH THE OPTIONS \"SHARED,SYSTEMS\" FOR READING.                00010\n*                                                                       00011\n         SPACE 1                                                        00023\nUSERCVT  DSECT                                                          00024\nCSAEYECT DS    D        LOCATION FOR CONTROL BLOCK EYE-CATCHER\nTAPESTKR DS    A        ADDRESS OF TAPE STACKER HOLD AREA               00041\nDATACOMW DS    A        ADDRESS OF DATACOM CANCELLATION WORK AREA\nCICSJOUR DS    A        ADDRESS OF CICS JOURNAL MANAGER WORK AREA\n         DS    3D          RESERVED FOR FUTURE EXPANSION\n         SPACE 1                                                        00043\nUSERCVTL EQU   (((*-USERCVT)/8)+1)*8 LENGTH OF THE CVT USER FIELD       00044\n         SPACE 2                                                        00050\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTODB103": {"ttr": 532, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTODB103   AT LEVEL 002 AS OF 05/08/86\n//O9080RL  JOB (0052,ACCC),\n//         'ASM I. R.',\n//         NOTIFY=O9080R,\n//         CLASS=I,\n//         MSGCLASS=Q,\n//         MSGLEVEL=1\n//R  EXEC A9294A07,USER='O9080R',SYSOUT='(D,,AA01)'\n//AS5 EXEC ACFASM,SOUT='(D,,LA01)',MEMBER=WTODB103\n//SYSLIB DD DISP=SHR,DSN=&ACFX..&ACFMAC\n//       DD DISP=SHR,DSN=SYS1.MACLIB\n//       DD DISP=SHR,DSN=COKE.MACLIB\n//       DD DISP=SHR,DSN=SYS1.HASPSRC\n//       DD DISP=SHR,DSN=SYS1.AMODGEN\n//SYSIN  DD  *\nWTODB103 TITLE 'WTODB103 -- WTO EXIT TO HANDLE DATACOM DB00103I MSG'\n*\n*     THIS IS A TRANSACTIION BACKOUT MESSAGE WHICH CAN AFFECT\n*     VALIDITY OF A BACKUP TAKEN AT THIS TIME.\n*\n*\nWTODB103 CSECT\nWTODB103 AMODE 31\nWTODB103 RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTODB103'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)      PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MAJOR LINE\n         USING CTXTATTR,R10\n         GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVI   MGCRTEXT,C' '\n         MVC   MGCRTEXT+1(L'MGCRTEXT-1),MGCRTEXT\n         MVC   MGCRTEXT(L'SENDHDR),SENDHDR REPLY TO MACRO AREA\n         LH    R9,CTXTTLEN    CALCULATE THE LENGTH FOR THE MOVE\n         CH    R9,SENDLENG    IS THIS MESSAGE SHORT ENOUGH?\n         BNH   SEND0           YES, PROCESS IT\n         LH    R9,SENDLENG     NO, USE A SHORTER PART OF THE MESSAGE\nSEND0    BCTR  R9,0\n         EX    R9,SENDEX      MOVE THE MESSAGE INTO THE BUFFER\n         LA    R8,L'SENDHDR+1(R9)\n         LA    R7,MGCRTEXT(R8)\n         MVI   0(R7),C''''\n         LA    R7,1(R7)\n         LA    R8,1(R8)\n         CLC   =C'JOB-CICS',CTXTTMSG+19  DO NOT HOLD FOR LOGON\n         BNE   SEND1\n         MVC   0(L'SENDUIDS,R7),SENDUIDS\n         LA    R6,L'SENDUIDS\n         B     SEND2\nSEND1    MVC   0(L'SENDLGN+L'SENDUIDS,R7),SENDLGN\n         LA    R6,L'SENDUIDS+L'SENDLGN\nSEND2    LA    R3,4(R8,R6)\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nSENDHDR  DC    C'SEND '''\nSENDLGN  DC    C',LOGON' THIS MUST BE IMMEDIATELY IN FRONT OF SENDUIDS\nSENDUIDS DC    C',USER=(O06376,A00273,O9080R)'\nSENDEX   MVC   MGCRTEXT+L'SENDHDR(0),CTXTTMSG MOVE THE MESSAGE\nSENDLENG DC    AL2(L'MGCRTEXT-L'SENDHDR-L'SENDLGN-L'SENDUIDS)\n         LTORG\n         SPACE 3\n         PRINT   GEN\n         COPY  USERCVT\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         CVT   DSECT=YES,LIST=YES\n         END   WTODB103\n//L  EXEC ACFLINK,SOUT='*',SYSX='SYS2',LIB=LINKLIB,C=' '\n//SYSLIN DD *\n  INCLUDE ACFOBJ(WTODB103)\n  NAME   WTODB103(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOD1001": {"ttr": 771, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOD1001   AT LEVEL 002 AS OF 09/22/86\n//O9080RL  JOB (0052,ACCC),\n//         'ASM I. R.',\n//         NOTIFY=O9080R,\n//         CLASS=I,\n//         MSGCLASS=Q,\n//         MSGLEVEL=1\n//R  EXEC A9294A07,USER='O9080R',SYSOUT='(D,,AA01)'\n//AS5 EXEC ACFASM,SOUT='(D,,LA01)',MEMBER=WTOD1001\n//SYSLIB DD DISP=SHR,DSN=&ACFX..&ACFMAC\n//       DD DISP=SHR,DSN=SYS1.MACLIB\n//       DD DISP=SHR,DSN=COKE.MACLIB\n//       DD DISP=SHR,DSN=SYS1.HASPSRC\n//       DD DISP=SHR,DSN=SYS1.AMODGEN\n//       DD DISP=SHR,DSN=TMS.TMSGEN47.ASM\n//       DD DISP=SHR,DSN=O9080R.CMPAT.ASM\n//SYSIN  DD  *\nWTOD1001 TITLE 'WTOD1001 -- WTO EXIT TO CLEAR THE DATACOM/DB PXX'\nWTOD1001 CSECT\nWTOD1001 AMODE 31\nWTOD1001 RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOD1001'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         CLC   =C'DB01001W',CTXTTMSG\n         BNE   RETURN          NOT CORRECT MESSAGE, FORGET IT\n*        CLC   =C' SYS1.MAN',CTXTTMSG+26 HAS THE RECORD LAYOUT CHANGED?\n*        BE    PROCESS                    NO, PROCESS IT\n*        EX    4,*                        YES, DUMP IT\nPROCESS  GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         CLC   =C'PROD',CTXTTMSG+11  CHECK PRODUCTION OR TEST\n         BNE   TESTMOVE\n         MVC   MGCRTEXT(L'REPLY),PREPLY MOVE PROD REPLY TO MGCR AREA\n         B     *+10\nTESTMOVE MVC   MGCRTEXT(L'REPLY),TREPLY MOVE TEST REPLY TO MGCR AREA\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\n         CLC   CTXTDCLN,=H'2' ANY DESCRIPTOR CODES?\n         BL    RETURN          NO, FORGET IT\n         L     R10,CTXTDCP    LOAD POINTER TO THE DESCRIPTOR CODES\n         USING CTXTDESC,R10\n         MVC   CTXTDC1(L'CTXTDC1+L'CTXTDC2),SETSTATS\n         OI    CTXTRFB1,CTXTRCRC+CTXTRCDC  CHANGE CODES NOW\n         DROP  R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nSETSTATS DC    AL1(CTXTDC04),X'00'       SYSTEM STATUS WILL DO NICELY\nREPLY    DC    C'START XXXXXXXX                '\nTREPLY   DC    C'START CLRTPXX      BY WTOD1001'\nPREPLY   DC    C'START CLRPPXX      BY WTOD1001'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\nDWORD    DS    D\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOD1001\n//L  EXEC ACFLINK,SOUT='*',SYSX='SYS2',LIB=LINKLIB,C=' '\n//* RENT='RENT,'\n//SYSLIN DD *\n  INCLUDE ACFOBJ(WTOD1001)\n  NAME   WTOD1001(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOECVT": {"ttr": 774, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOECVT    AT LEVEL 002 AS OF 11/05/85\n*                THIS DSECT DEFINES THE FIELDS THAT\n*     ARE IN THE AREA POINTED TO BY THE \"WTOECVT\" FIELD IN THE USER\n*     CVT.  THIS AREA IS INITIALIZED BY THE \"WTOEIXXX\" EXIT FOR THE\n*     WTO/WTOR EXITS TO FUNCTION PROPERLY.\n*\n*        THE IMS SYSTEMS MUST HAVE A PREFIX AND A STORAGE AREA IN THIS\n*        TABLE FOR IMS WTO/WTOR EXIT PROCESSING TO WORK CORRECTLY.\nIMS1     DC   C'IMSP' IMS PRODUCTION SYSTEM\nIMS2     DC   C'IMST' IMS TEST SYSTEM\n*\n*                         JAMES COOK                10/84\n*\n         SPACE 1\nWTOCVT   DSECT\nBMPJOBN  DS    D        BMP JOBNAME FOR WTO EXIT TO CANCEL BMPS\nIMSAREA1 DS    D        STORAGE AREA FOR IMS1 RELATED DATA(SEE DSECT\nIMSAREA2 DS    D        STORAGE AREA FOR IMS2  BELOW)\n         SPACE 1\nWTOECVTL EQU   (((*-WTOECVT)/8)+1)*8 LENGTH OF THE WTOECVT FIELD\n         SPACE 1\nIMSAREA  DSECT\nIMSREPLY DS    CL2      NUMBER OF THE IMS OUTSTANDING REPLY\nIMSFLAG  DS    C        FLAGS FOR WTO EXIT PROCESSING\nIMSBMPRG DS    CL5      BMP REGION NUMBER WITHIN IMS FOR EXIT TO CANCEL\n         SPACE 2\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOEDB30": {"ttr": 776, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOEDB30   AT LEVEL 005 AS OF 06/04/86\nWTOEDB30 TITLE 'WTOEDB30 -- WTO EXIT TO DUMP THE DATACOM/DB LOG'\nWTOEDB30 CSECT\nWTOEDB30 AMODE 31\nWTOEDB30 RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOEDB30'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         CLC   =C'DB00301I',CTXTTMSG\n         BNE   RETURN          NOT CORRECT MESSAGE, FORGET IT\n*        CLC   =C' SYS1.MAN',CTXTTMSG+26 HAS THE RECORD LAYOUT CHANGED?\n*        BE    PROCESS                    NO, PROCESS IT\n*        EX    4,*                        YES, DUMP IT\nPROCESS  GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         CLC   =C'PROD',CTXTTMSG+11  CHECK PRODUCTION OR TEST\n         BNE   TESTMOVE\n         MVC   MGCRTEXT(L'REPLY),PREPLY MOVE PROD REPLY TO MGCR AREA\n         B     *+10\nTESTMOVE MVC   MGCRTEXT(L'REPLY),TREPLY MOVE TEST REPLY TO MGCR AREA\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\n         CLC   CTXTDCLN,=H'2' ANY DESCRIPTOR CODES?\n         BL    RETURN          NO, FORGET IT\n         L     R10,CTXTDCP    LOAD POINTER TO THE DESCRIPTOR CODES\n         USING CTXTDESC,R10\n         MVC   CTXTDC1(L'CTXTDC1+L'CTXTDC2),SETSTATS\n         OI    CTXTRFB1,CTXTRCRC+CTXTRCDC  CHANGE CODES NOW\n         DROP  R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nSETSTATS DC    AL1(CTXTDC04),X'00'       SYSTEM STATUS WILL DO NICELY\nREPLY    DC    C'START XXXXXXXX                '\nTREPLY   DC    C'START DCMTSPIL     BY WTOEDB30'\nPREPLY   DC    C'START DCMPSPIL     BY WTOEDB30'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\nDWORD    DS    D\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOEDB30\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOEF97I": {"ttr": 778, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOEF97I   AT LEVEL 002 AS OF 05/19/86\n//O9080RL  JOB (0052,ACCC),\n//         'ASM I. R.',\n//         NOTIFY=O9080R,\n//         CLASS=I,\n//         MSGCLASS=Q,\n//         MSGLEVEL=1\n//R  EXEC A9294A07,USER='O9080R',SYSOUT='(D,,AA01)'\n//AS5 EXEC ACFASM,SOUT='(D,,LA01)',MEMBER=WTOEF97I\n//SYSLIB DD DISP=SHR,DSN=&ACFX..&ACFMAC\n//       DD DISP=SHR,DSN=SYS1.MACLIB\n//       DD DISP=SHR,DSN=COKE.MACLIB\n//       DD DISP=SHR,DSN=SYS1.HASPSRC\n//       DD DISP=SHR,DSN=SYS1.AMODGEN\n//       DD DISP=SHR,DSN=TMS.TMSGEN47.ASM\n//       DD DISP=SHR,DSN=O9080R.CMPAT.ASM\n//SYSIN  DD  *\nWTOEF97I TITLE 'WTOEF97I -- WTOR EXIT TO SUPPRESS IEF097I'\nWTOEF97I CSECT\nWTOEF97I AMODE 31\nWTOEF97I RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOEF97I'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)      PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         OI    CTXTRFB2,CTXTRDTM\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\n         LTORG\n         SPACE 3\n         PRINT   GEN\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOEF97I\n//L  EXEC ACFLINK,SOUT='*',SYSX='SYS2',LIB=LINKLIB,C=' '\n//* RENT='RENT,'\n//SYSLIN DD *\n  INCLUDE ACFOBJ(WTOEF97I)\n  NAME   WTOEF97I(R)\n//ZZDATA DD  DATA,DLM=ZZ\nZZ\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOEIUTL": {"ttr": 780, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOEIUTL   AT LEVEL 005 AS OF 11/12/84\nWTOEIUTL TITLE 'WTOEIUTL -- WTO EXIT TO ISSUE AN IMS /DISPLAY ACTIVE'\nWTOEIUTL CSECT\nWTOEIUTL AMODE 31\nWTOEIUTL RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOEIUTL'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         CLC   =C'UTL005I',CTXTTMSG IS THIS MESSAGE FROM IEFUTL?\n         BNE   START1                NO, TRY AGAIN\n         LM    R4,R5,CTXTTMSG+12     YES, PROCESS IT\n         B     START2\nSTART1   CLC   =C'UTL006I',CTXTTMSG IS THIS MESSAGE FROM JES2?\n         BNE   RETURN                NO, FORGET IT\n         LM    R4,R5,CTXTTMSG+12     YES, PROCESS IT\n         DROP  R10,R11\nSTART2   L     R10,CVTPTR      FIND THE USERCVT\n         USING CVT,R10\n         L     R11,CVTUSER\n         USING USERCVT,R11\n         DROP  R10\n         LM    R6,R7,BMPJOBN  STORE JOBNAME INTO USERCVT\n         CDS   R6,R4,BMPJOBN\n         GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         MVC   IMSRPLY2,=C'NN' SET THE SECOND REPLY\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'IMSDISA),IMSDISA MOVE REPLY TO MACRO AREA\n         LA    R3,(MGCRTEXT-MGCRPL)+L'IMSDISA\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         LA    R10,IMSAREA1   REPLY TO IMS1\n         USING IMSAREA,R10\n         LM    R2,R3,IMSREPLY\n         TM    IMSREPLY,X'F0' IS THIS A REPLY ID?\n         BNO   REPLY1          NO, SKIP IT\n         TM    IMSREPLY+1,X'F0'\n         BNO   REPLY1          NO, SKIP IT\n         MVC   IMSRPLY2,IMSREPLY\n         SR    R0,R0          DELETE REPLYID\n         SR    R1,R1\n         CDS   R2,R0,IMSREPLY\nREPLY1   LA    R10,IMSAREA2   REPLY TO IMS2\n         LM    R2,R3,IMSREPLY\n         TM    IMSREPLY,X'F0' IS THIS A REPLY ID?\n         BNO   REPLY2          NO, SKIP IT\n         TM    IMSREPLY+1,X'F0'\n         BNO   REPLY2          NO, SKIP IT\n         MVC   MGCRTEXT+6(L'IMSREPLY),IMSREPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         SR    R1,R1          DELETE REPLYID\n         CDS   R2,R0,IMSREPLY\n         DROP  R10,R11\nREPLY2   CLC   MGCRTEXT+6(L'IMSREPLY),=C'NN' IS THERE A VALID REPLY?\n         BE    REPLY3          NO, SKIP IT\n         MGCR  MGCRPL\nREPLY3   CLC   IMSRPLY2,=C'NN' IS THERE A VALID REPLY?\n         BE    REPLYEND        NO, SKIP IT\n         MVC   MGCRTEXT+6(L'IMSRPLY2),IMSRPLY2\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\nREPLYEND L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nIMSDISA  DC    C'REPLY NN,''/DISPLAY ACTIVE'' BY WTOEIUTL'\n         LTORG\n         SPACE 3\n         PRINT   GEN\n         COPY  USERCVT\nWORKAREA DSECT\n         DS    18F            SAVE AREA\nIMSRPLY2 DS    CL2            HOLD THE SECOND REPLY\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         CVT   DSECT=YES,LIST=YES\n         END   WTOEIUTL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOEI000": {"ttr": 783, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOEI000   AT LEVEL 008 AS OF 06/17/86\nWTOEI000 TITLE 'WTOEI000 -- WTO EXIT TO PROCESS AN IMS /DISPLAY ACTIVE'\nWTOEI000 CSECT\nWTOEI000 AMODE 31\nWTOEI000 RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOEI000'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R8,CVTPTR      FIND USERCVT\n         USING CVT,R8\n         L     R9,CVTUSER\n         LTR   R9,R9          IS THE USERCVT VALID?\n         BNZ   START1          YES, CONTINUE\n         EX    6,*\n         USING USERCVT,R9\n         DROP  R8\nSTART1   CLC   BMPJOBN,=XL8'00' ANY JOB TO CANCEL?\n         BE    RETURN            NO, FORGET IT\n         L     R11,0(R1)      PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MAJOR LINE\n         USING CTXTATTR,R10\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BO    RETURN          YES, SOMETHING IS WRONG\n         CLC   =C'DFS000I',CTXTTMSG IS THIS THE CORRECT MAJOR LINE?\n         BNE   RETURN          NO, DON'T KNOW WHY I WAS CALLED\n         CLC   =C' REGID JOBNAME ',CTXTTMSG+11 NOT INTERESTED IN THIS\n         BE    RETURN                             LINE.\n         LH    R7,CTXTTLEN    LOAD TEXT LENGTH\n         LA    R6,CTXTTMSG-3(R7) ADDRESS OF THE END OF MESSAGE\n         S     R7,=F'5'\nIMSVER0  CLC   IMS1,0(R6)     WHICH VERSION OF IMS IS THIS?\n         BE    IMSVER1         THIS ONE, HANDLE IT.\n         CLC   IMS2,0(R6)     WHICH VERSION OF IMS IS THIS?\n         BE    IMSVER2         THIS ONE, HANDLE IT.\n         BCTR  R6,0           BACK UP ONE\n         BCT   R7,IMSVER0      AND TRY AGAIN\n         EX    R6,*           IMS VERSION NOT FOUND, FIX IT\nIMSVER1  LA    R8,IMSAREA1    THIS IS THE IMS VERSION\n         B     IMSVER3\nIMSVER2  LA    R8,IMSAREA2     THIS IS THE IMS VERSION\n         USING IMSAREA,R8\nIMSVER3  CLC   =C' VTAM ACB ',CTXTTMSG+11 FINISHED WITH JOB NAMES?\n         BE    VTAMACB        JOB NAME NOT FOUND\n         CLC   BMPJOBN,CTXTTMSG+18 CHECK FOR THE JOB NAME\n         BNE   RETURN         JOB NAME NOT FOUND\n         CLC   =C' BMP ',CTXTTMSG+27 MAKE SURE WE FOUND A BMP\n         BNE   RETURN\n         L     R5,CTXTTMSG+13 LOAD THE REGION ID FOR STORAGE\n         SR    R4,R4\n         IC    R4,CTXTTMSG+12\n         LM    R6,R7,IMSREPLY SAVE THE REGION ID FOR LATER\n         CDS   R6,R4,IMSREPLY\n         LM    R6,R7,BMPJOBN  WIPE OUT THE JOBNAME TO SHORTEN PROCESS\n         SR    R4,R4\n         LR    R5,R4\n         CDS   R6,R4,BMPJOBN\n         CLC   =C' WAITING FOR BLOCK MOVER ',CTXTTMSG+33 ?????\n         BNE   RETURN\n         DROP  R10\n         OI    CTXTRFB1,CTXTRCRC+CTXTRCDC  CHANGE CODES NOW\n         CLC   CTXTDCLN,=H'2' ANY DESCRIPTOR CODES?\n         BL    DESCRPT         NO, MAKE SOME\n         L     R10,CTXTDCP    LOAD POINTER TO THE DESCRIPTOR CODES\n         USING CTXTDESC,R10\n         MVC   CTXTDC1(L'CTXTDC1+L'CTXTDC2),NOROLL\n         B     ROUTCDE\n         DROP  R10\nDESCRPT  LA    R10,NOROLL     MAKE SOME DESCRIPTOR CODES\n         ST    R10,CTXTDCP\n         LH    R4,=H'2'\n         STH   R4,CTXTDCLN\nROUTCDE  CLC   CTXTRCLN,=H'2' ANY ROUTING CODES?\n         BL    ROUTCDE1        NO, MAKE SOME\n         L     R10,CTXTRCP    LOAD POINTER TO THE ROUTING CODES\n         USING CTXTROUT,R10\n         OC    CTXTR001(L'CTXTR001+L'CTXTR002),MASTERI\n         B     MOVEMSG\n         DROP  R10\nROUTCDE1 LA    R10,MASTERI    MAKE SOME DESCRIPTOR CODES\n         ST    R10,CTXTRCP\n         LH    R4,=H'2'\n         STH   R4,CTXTRCLN\nMOVEMSG  L     R10,CTXTTXPJ   LOAD POINTER TO THE MAJOR LINE\n         USING CTXTATTR,R10\n         CLC   =H'120',CTXTTLMX ENOUGH ROOM FOR THE MESSAGE?\n         BNH   MOVEMSG1           YES, PROCESS IT\n         EX    5,*                NO, WHAT HAPPENED?\nMOVEMSG1 MVC   CTXTTMSG+(120-L'LMTDINIT)(L'LMTDINIT),LMTDINIT\n         MVC   CTXTTLEN,CTXTTLMX   GIVE THE MESSAGE ENOUGH ROOM\n         OI    CTXTRFB1,CTXTRCMT      TELL COMMTASK TO CHANGE THE MSG\n         B     RETURN\n         DROP  R10\nVTAMACB  TS    IMSFLAG        THE GUY MAY BE MASQUERADING AS A BMP\n         LA    R8,IMSAREA1\n         TM    IMSFLAG,X'80'\n         BNO   RETURN\n         LA    R8,IMSAREA2\n         TM    IMSFLAG,X'80'\n         BNO   RETURN          THIS GUY CHEATS, CANCEL HIM\n         DROP  R8\n         GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVI   MGCRTEXT,C' '\n         MVC   MGCRTEXT+1(L'MGCRTEXT-1),MGCRTEXT\n         MVC   MGCRTEXT(L'CANCELMS),CANCELMS REPLY TO MACRO AREA\n         MVC   MGCRTEXT+7(L'BMPJOBN),BMPJOBN\n         LA    R3,(MGCRTEXT-MGCRPL)+L'CANCELMS\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         LM    R6,R7,BMPJOBN  WIPE OUT THE JOBNAME TO SHORTEN PROCESS\n         SR    R1,R1\n         CDS   R6,R0,BMPJOBN\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nNOROLL   DC    AL1(CTXTDC02),X'00' IMMEDIATE ACTION REQUIRED\nMASTERI  DC    AL1(CTXTR02),X'00' MASTER CONSOLE INFORMATION\nCANCELMS DC    C'CANCEL XXXXXXXX BY WTOEI000'\nLMTDINIT DC    C'AND IN A LIMITED INITIATOR'\n         LTORG\n         SPACE 3\n         PRINT   GEN\n         COPY  USERCVT\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         CVT   DSECT=YES,LIST=YES\n         END   WTOEI000\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOEI554": {"ttr": 1025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOEI554   AT LEVEL 009 AS OF 05/06/85\nWTOEI554 TITLE 'WTOEI554 -- WTO EXIT TO HANDLE THE IMS DFS554 MESSAGE'\nWTOEI554 CSECT\nWTOEI554 AMODE 31\nWTOEI554 RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOEI554'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)      PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MAJOR LINE\n         USING CTXTATTR,R10\n         GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVI   MGCRTEXT,C' '\n         MVC   MGCRTEXT+1(L'MGCRTEXT-1),MGCRTEXT\n         MVC   MGCRTEXT(L'SENDHDR),SENDHDR REPLY TO MACRO AREA\n         LH    R9,CTXTTLEN    CALCULATE THE LENGTH FOR THE MOVE\n         CH    R9,SENDLENG    IS THIS MESSAGE SHORT ENOUGH?\n         BNH   SEND0           YES, PROCESS IT\n         LH    R9,SENDLENG     NO, USE A SHORTER PART OF THE MESSAGE\nSEND0    BCTR  R9,0\n         EX    R9,SENDEX      MOVE THE MESSAGE INTO THE BUFFER\n         LA    R8,L'SENDHDR+1(R9)\n         LA    R7,MGCRTEXT(R8)\n         MVI   0(R7),C''''\n         LA    R7,1(R7)\n         LA    R8,1(R8)\n         CLC   =C'DFS554',CTXTTMSG DO NOT HOLD FOR LOGON\n         BNE   SEND1\n         MVC   0(L'SENDUIDS,R7),SENDUIDS\n         LA    R6,L'SENDUIDS\n         B     SEND2\nSEND1    MVC   0(L'SENDLGN+L'SENDUIDS,R7),SENDLGN\n         LA    R6,L'SENDUIDS+L'SENDLGN\nSEND2    LA    R3,4(R8,R6)\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nSENDHDR  DC    C'SEND '''\nSENDLGN  DC    C',LOGON' THIS MUST BE IMMEDIATELY IN FRONT OF SENDUIDS\nSENDUIDS DC    C',USER=(O9080H,A00292,A00345)'\nSENDEX   MVC   MGCRTEXT+L'SENDHDR(0),CTXTTMSG MOVE THE MESSAGE\nSENDLENG DC    AL2(L'MGCRTEXT-L'SENDHDR-L'SENDLGN-L'SENDUIDS)\n         LTORG\n         SPACE 3\n         PRINT   GEN\n         COPY  USERCVT\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         CVT   DSECT=YES,LIST=YES\n         END   WTOEI554\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOEI996": {"ttr": 1028, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOEI996   AT LEVEL 004 AS OF 11/12/84\nWTOEI996 TITLE 'WTOEI996 -- WTOR EXIT TO STORE IMS REPLY NUMBER'\nWTOEI996 CSECT\nWTOEI996 AMODE 31\nWTOEI996 RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOEI996'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   ADDRESS OF THE MESSAGE TEXT\n         USING CTXTATTR,R10\n         CLC   =C'DFS996I',CTXTTMSG IS THIS THE CORRECT MESSAGE?\n         BE    START1           YES, PROCESS IT\n         CLC   =C'IEE400I',CTXTTMSG MVS MESSAGES CANCELLED\n         BE    START1           YES, PROCESS IT\n         EX    6,*            NOT SURE WHY I GOT CALLED\nSTART1   L     R8,CVTPTR      LOAD ADDRESS OF USERCVT\n         USING CVT,R8\n         L     R9,CVTUSER\n         LTR   R9,R9          IS IT VALID?\n         BNZ   START2          YES\n         EX    6,*\n         USING USERCVT,R9\n         DROP  R8\nSTART2   CLC   =C'IEE400I',CTXTTMSG MVS MESSAGES CANCELLED\n         BE    IEE400I          YES, PROCESS IT\n         CLC   IMS1,CTXTTMSG+21 WHICH VERSION OF IMS IS THIS?\n         BNE   START3          NOT THIS ONE\n         LA    R8,IMSAREA1     THIS ONE\n         B     START5\nSTART3   CLC   IMS2,CTXTTMSG+21 WHICH VERSION OF IMS IS THIS?\n         BE    START4          THIS ONE\n         EX    6,*\nSTART4   LA    R8,IMSAREA2     THIS ONE\n         USING IMSAREA,R8\nSTART5   SR    R4,R4          CLEAR THE RESULT REGISTERS\n         LR    R5,R4\n         LM    R6,R7,IMSREPLY LOAD THE \"CDS\" AREA\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BNO   RETURN          NO, FORGET IT\n         LH    R4,CTXTRPID    YES, SAVE IT FOR LATER\n         SLL   R4,8           LEAVE ROOM FOR THE FLAG\n         DROP  R10\n         CLC   =XL5'00',IMSBMPRG IS THERE A BMP TO CANCEL?\n         BE    RETURN             NO, SKIP IT\n         TM    IMSBMPRG,C' '\n         BNO   RETURN             NO, SKIP IT\n         GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLYU),REPLYU MOVE REPLY TO MACRO AREA\n         MVC   MGCRTEXT+6(L'CTXTRPID),CTXTRPID\n         MVC   MGCRTEXT+23(L'IMSBMPRG),IMSBMPRG\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLYU\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\n         SR    R4,R4\n         SR    R5,R5\n         B     RETURN1\nIEE400I  LA    R8,IMSAREA1    DELETE MESSAGE IDS FROM USERCVT\n         USING CTXTATTR,R10\n         CLC   IMSREPLY,CTXTTMSG+35\n         BE    IEE400I1\n         LA    R8,IMSAREA2\n         CLC   IMSREPLY,CTXTTMSG+35\n         BNE   RETURN2         NOT MINE, FORGET IT\n         DROP  R10\nIEE400I1 LM    R6,R7,IMSREPLY OVERWRITE THE AREA\n         SR    R5,R5\n         L     R4,=X'0000C000'\n         B     RETURN1\nRETURN   IC    R4,IMSFLAG     SAVE THE FLAG FOR LATER\n         SLL   R4,8\nRETURN1  CDS   R6,R4,IMSREPLY SAVE THE RESULTS\nRETURN2  LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nREPLYU   DC    C'REPLY NN,''/STOP REGION XXXXX,ABDUMP'' BY WTOEI996'\n         LTORG\n         SPACE 3\n         PRINT   GEN\n         COPY  USERCVT\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         CVT   DSECT=YES,LIST=YES\n         END   WTOEI996\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOENROL": {"ttr": 1031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOENROL   AT LEVEL 004 AS OF 10/10/84\nWTOENROL TITLE 'WTOENROL -- WTOR EXIT TO STOP A MESSAGE FROM ROLLING'\nWTOENROL CSECT\nWTOENROL AMODE 31\nWTOENROL RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOENROL'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)      PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         OI    CTXTRFB1,CTXTRCRC+CTXTRCDC  CHANGE CODES NOW\n         CLC   CTXTDCLN,=H'2' ANY DESCRIPTOR CODES?\n         BL    DESCRPT         NO, MAKE SOME\n         L     R10,CTXTDCP    LOAD POINTER TO THE DESCRIPTOR CODES\n         USING CTXTDESC,R10\n         MVC   CTXTDC1(L'CTXTDC1+L'CTXTDC2),NOROLL\n         B     ROUTCDE\n         DROP  R10\nDESCRPT  LA    R10,NOROLL     MAKE SOME DESCRIPTOR CODES\n         ST    R10,CTXTDCP\n         LH    R4,=H'2'\n         STH   R4,CTXTDCLN\nROUTCDE  CLC   CTXTRCLN,=H'2' ANY ROUTING CODES?\n         BL    ROUTCDE1        NO, MAKE SOME\n         L     R10,CTXTRCP    LOAD POINTER TO THE ROUTING CODES\n         USING CTXTROUT,R10\n         MVC   CTXTR001(L'CTXTR001+L'CTXTR002),MASTERI\n         B     RETURN\n         DROP  R10\nROUTCDE1 LA    R10,MASTERI    MAKE SOME DESCRIPTOR CODES\n         ST    R10,CTXTRCP\n         LH    R4,=H'2'\n         STH   R4,CTXTRCLN\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nNOROLL   DC    AL1(CTXTDC02),X'00' IMMEDIATE ACTION REQUIRED\nMASTERI  DC    AL1(CTXTR02),X'00' MASTER CONSOLE INFORMATION\n         LTORG\n         SPACE 3\n         PRINT   GEN\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOENROL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOERD": {"ttr": 1033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOERD     AT LEVEL 002 AS OF 08/09/85\nWTOERD   TITLE 'WTOERD -- WTOR EXIT TO REPLY \"D\" TO MESSAGE'\nWTOERD   CSECT\nWTOERD   AMODE 31\nWTOERD   RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOERD  '\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BNO   RETURN          NO, FORGET IT\n         GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLYD),REPLYD MOVE REPLY TO MACRO AREA\n         MVC   MGCRTEXT+6(L'CTXTRPID),CTXTRPID\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLYD\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nREPLYD   DC    C'REPLY NN,''D'' BY WTOERD'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOERD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOERHLD": {"ttr": 1035, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOERHLD   AT LEVEL 002 AS OF 09/10/86\nWTOERHLD TITLE 'WTOERHLD -- WTOR EXIT TO REPLY \"HOLD\" TO MESSAGE'\nWTOERHLD CSECT\nWTOERHLD AMODE 31\nWTOERHLD RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOERHLD'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BNO   RETURN          NO, FORGET IT\n         CLC   =C'IEF225D ',CTXTTMSG CORRECT MESSAGE?\n         BE    HOLDOK          YES, REPLY TO IT\n         EX    6,*            WHY ARE WE HERE?\nHOLDOK   GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLY),REPLY MOVE REPLY TO MACRO AREA\n         MVC   MGCRTEXT+6(L'CTXTRPID),CTXTRPID\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nREPLY    DC    C'REPLY NN,''HOLD'' BY WTOERHLD'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOERHLD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOERM": {"ttr": 1037, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOERM     AT LEVEL 003 AS OF 06/13/86\nWTOERM   TITLE 'WTOERM -- WTOR EXIT TO REPLY \"M\" TO MESSAGE'\nWTOERM   CSECT\nWTOERM   AMODE 31\nWTOERM   RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOERM  '\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BNO   RETURN          NO, FORGET IT\n         CLC   =C'IEC701D M 56',CTXTTMSG CORRECT MESSAGE SERIES?\n         BE    START1          YES, PROCESS IT\n         CLC   =C'IEC701D M 57',CTXTTMSG CORRECT MESSAGE SERIES?\n         BNE   RETURN          NO, FORGET IT\nSTART1   GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLYU),REPLYU MOVE REPLY TO MACRO AREA\n         MVC   MGCRTEXT+6(L'CTXTRPID),CTXTRPID\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLYU\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nREPLYU   DC    C'REPLY NN,''M'' BY WTOERM'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOERM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOERNHL": {"ttr": 1039, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOERNHL   AT LEVEL 004 AS OF 11/30/84\nWTOERNHL TITLE 'WTOERNHL -- WTOR EXIT TO REPLY \"NOHOLD\" TO MESSAGE'\nWTOERNHL CSECT\nWTOERNHL AMODE 31\nWTOERNHL RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOERNHL'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BNO   RETURN          NO, FORGET IT\n         GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLY),REPLY MOVE REPLY TO MACRO AREA\n         MVC   MGCRTEXT+25(L'CTXTRPID),CTXTRPID\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         TIME  BIN            GET CURRENT TIME OF DAY IN R0\n         SRDA  R0,32          CONVERT TO MINUTES\n         D     R0,=F'6000'\n         SR    R0,R0          CALCULATE THE HOURS\n         D     R0,=F'60'       R0=MINUTES  R1=HOURS\n         LR    R3,R0           R3=MINUTES\n         M     R0,=F'100'\n         AR    R3,R1          R3=HOURS AND MINUTES\n         A     R3,=F'2' ***** WAIT 'N' MINUTES TO REPLY ************\n         CVD   R3,DWORD       CONVERT IT TO DISPLAY\n         UNPK  MGCRTEXT+6(5),DWORD+5(3)\n         OI    MGCRTEXT+10,C'0'\n         MVC   MGCRTEXT+6(2),MGCRTEXT+7\n         MVI   MGCRTEXT+8,C'.'\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nREPLY    DC C'$TA,T=HH.MM,''$VS,''''REPLY NN,''''''''NOHOLD'''''''' BY W\n               WTOERNHL'''''''\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\nDWORD    DS    D\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOERNHL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOEROLL": {"ttr": 1041, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOEROLL   AT LEVEL 005 AS OF 10/16/84\nWTOEROLL TITLE 'WTOEROLL -- WTOR EXIT TO CAUSE A MESSAGE TO ROLL'\nWTOEROLL CSECT\nWTOEROLL AMODE 31\nWTOEROLL RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOEROLL'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)      PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         CLC   CTXTDCLN,=H'2' ANY DESCRIPTOR CODES?\n         BL    RETURN          NO, FORGET IT\n         L     R10,CTXTDCP    LOAD POINTER TO THE DESCRIPTOR CODES\n         USING CTXTDESC,R10\n         MVC   CTXTDC1(L'CTXTDC1+L'CTXTDC2),SETSTATS\n         OI    CTXTRFB1,CTXTRCRC+CTXTRCDC  CHANGE CODES NOW\n         DROP  R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nSETSTATS DC    AL1(CTXTDC04),X'00'       SYSTEM STATUS WILL DO NICELY\n         LTORG\n         SPACE 3\n         PRINT   GEN\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOEROLL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOERU": {"ttr": 1043, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOERU     AT LEVEL 003 AS OF 10/10/84\nWTOERU   TITLE 'WTOERU -- WTOR EXIT TO REPLY \"U\" TO MESSAGE'\nWTOERU   CSECT\nWTOERU   AMODE 31\nWTOERU   RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOERU  '\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BNO   RETURN          NO, FORGET IT\n         GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLYU),REPLYU MOVE REPLY TO MACRO AREA\n         MVC   MGCRTEXT+6(L'CTXTRPID),CTXTRPID\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLYU\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nREPLYU   DC    C'REPLY NN,''U'' BY WTOERU'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOERU\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOERWAT": {"ttr": 1281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOERWAT   AT LEVEL 005 AS OF 10/20/86\nWTOERWAT TITLE 'WTOERWAT -- WTOR EXIT TO REPLY \"WAIT\" TO MESSAGE'\nWTOERWAT CSECT\nWTOERWAT AMODE 31\nWTOERWAT RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOERWAT'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BNO   RETURN          NO, FORGET IT\n         LA    R3,CTXTTMSG    LOAD START OF MESSAGE\n         LA    R4,1           LOAD INCREMENT\n         LA    R5,CTXTTMSG+L'CTXTTMSG-6 END OF MESSAGE\nWAITCK   CLC   =C'''WAIT''',0(R3) IS THERE A \"WAIT\" IN MESSAGE?\n         BE    WAITOK          YES, REPLY TO IT\n         CLC   =C' WAIT ',0(R3) IS THERE A \"WAIT\" IN MESSAGE?\n         BE    WAITOK          YES, REPLY TO IT\n         CLC   =C' WAIT,',0(R3) IS THERE A \"WAIT\" IN MESSAGE?\n         BE    WAITOK          YES, REPLY TO IT\n         BXLE  R3,R4,WAITCK   NOT YET, TRY AGAIN\n         B     RETURN         NO, FORGET IT\nWAITOK   GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLY),REPLY MOVE REPLY TO MACRO AREA\n         MVC   MGCRTEXT+6(L'CTXTRPID),CTXTRPID\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nREPLY    DC    C'REPLY NN,''WAIT'' BY WTOERWAT'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOERWAT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOERY": {"ttr": 1283, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOERY     AT LEVEL 002 AS OF 06/16/86\nWTOERY   TITLE 'WTOERY -- WTOR EXIT TO REPLY \"Y\" TO MESSAGE'\nWTOERY   CSECT\nWTOERY   AMODE 31\nWTOERY   RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOERU  '\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BNO   RETURN          NO, FORGET IT\n         GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLYY),REPLYY MOVE REPLY TO MACRO AREA\n         MVC   MGCRTEXT+6(L'CTXTRPID),CTXTRPID\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLYY\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nREPLYY   DC    C'REPLY NN,''Y'' BY WTOERY'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOERY\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOER301": {"ttr": 1285, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOER301   AT LEVEL 003 AS OF 10/10/84\nWTOER301 TITLE 'WTOER301 -- WTOR EXIT TO REPLY \"JOBNAME\" TO IEC301A'\nWTOER301 CSECT\nWTOER301 AMODE 31\nWTOER301 RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOER301'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BNO   RETURN          NO, FORGET IT\n         CLC   =C'IEC301A S JOB ',CTXTTMSG\n         BNE   RETURN          NOT CORRECT MESSAGE, FORGET IT\n         GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLY),REPLY MOVE REPLY TO MACRO AREA\n         MVC   MGCRTEXT+6(L'CTXTRPID),CTXTRPID\n         MVC   MGCRTEXT+10(8),CTXTTMSG+14\n         SR    R1,R1\n         SR    R2,R2\n         TRT   MGCRTEXT+10(9),BLANKTBL\n         LR    R9,R2\n         LTR   R8,R1          DID IT TRAP?\n         BZ    ABEND0C3\n         MVI   0(R8),C''''\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nABEND0C3 EX    6,*\nREPLY    DC    C'REPLY NN,''XXXXXXXX  BY WTOER301'\nBLANKTBL DC    XL64'00'\n         DC    C''''\n         DC    XL191'00'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOER301\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOETPS1": {"ttr": 1287, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOETPS1   AT LEVEL 004 AS OF 06/17/86\nWTOETPS1 TITLE 'WTOETPS1 -- MACROS TO INITIALIZE TAPE TABLE IN CSA'\n         MACRO\n&NAME1   STRING  &ADDRESS=,&STACKER=N\n         GBLA  &OFFSET\n         LCLA  &RANGE,&I\n         LCLC  &CONST,&START,&A,&STKR\n         AIF   (&OFFSET NE 0).AFTINIT\n&NAME1   B     STRINGGM       BRANCH TO DO THE GETMAIN\nSTRINGIN DS    0H             INITIALIZE THE TAPE TABLE\n.AFTINIT ANOP\n&MAXIMUM SETC  '0123456789ABCDEF'\n&CPTR    SETA  0\n&CONST   SETC  '&ADDRESS(1)'(1,2)\n.*               ASSUMES A THREE DIGIT DEVICE ADDRESS\n&START   SETC  '&ADDRESS(1)'(3,1)\n&RANGE   SETA  1\n         AIF   (K'&ADDRESS LT 2).NORANGE\n&RANGE   SETA  &ADDRESS(2)\n.NORANGE ANOP\n&CPTR    SETA  &CPTR+1\n         AIF   ('&START' NE '&MAXIMUM'(&CPTR,1)).NORANGE\n.*    TABLE LAYOUT:\n.*       RESERVED            CL1\n.*       UNIT ADDRESS        CL3\n.*       NUMBER OF ENTRIES   H\n.*       VOLUME SERIALS      CL6\n         SPACE 1\n&ENTRIES SETA  1 AN ORDINARY TAPE DRIVE\n         SPACE 1\n&STKR    SETC  '&STACKER'\n         AIF   ('&STKR' EQ 'N').NOSTKR\n         SPACE 1\n&ENTRIES SETA  6 A TAPE DRIVE WITH A STACKER FOR UNLOADED TAPES\n         SPACE 1\n.NOSTKR  ANOP\n         MVC   TAPETBL+&OFFSET.(3),=C' &CONST.' INITIALIZE EACH ENTRY\n.*               ASSUMES A THREE DIGIT DEVICE ADDRESS\n&A       SETC  '&MAXIMUM'(&CPTR,1)\n&I       SETA  &OFFSET+3\n         MVI   TAPETBL+&I.,C'&A.'         CALCULATED UNIT NUMBER\n         LA    R1,&ENTRIES                VOLUMES IN DEVICE STACKER\n&I       SETA  &OFFSET+4\n         STH   R1,TAPETBL+&I              STORED IN THE TAPE TABLE\n&OFFSET  SETA  &OFFSET+6+&ENTRIES*6\n&RANGE   SETA  &RANGE-1\n&CPTR    SETA  &CPTR+1\n         AIF   (&CPTR GT 16).MEND\n         AIF   (&RANGE GT 0).NOSTKR\n.MEND    MEND\n         SPACE 3\n         MACRO\n         STRNGEND\n         GBLA  &OFFSET\n&I       SETA  &OFFSET\n         MVC   TAPETBL+&I.(6),=X'FFFFFFFF0000' INITIALIZE FINAL ENTRY\n&OFFSET  SETA  &OFFSET+6\n         B     STRINGPR       BRANCH TO PROCESSING CODE\n&OFFSET  SETA  &OFFSET+12     ADD SPACE FOR THE TABLE HEADER\nHDRLEN   EQU           12     ADD SPACE FOR THE TABLE HEADER\n*        GETMAIN RU,LV=&OFFSET,LOC=ANY,SP=241,RELATED=GETCSA\nSTRINGGM GETMAIN RU,LV=&OFFSET,LOC=ANY,SP=241,RELATED=GETCSA\n         LR    R11,R1         SAVE THE ADDRESS FOR LATER\n         LA    R2,=XL6'00'    CLEAR THE AREA TO HEX ZEROES\n         SR    R3,R3\n         LR    R4,R11\n         LA    R1,&OFFSET     STORE THE LENGTH OF THE TABLE\n         LR    R5,R1\n         BCTR  R5,0\n         MVCL  R4,R2\n         MVC   CSAEYECT,=C'WTOETPS1' SET UP THE TABLE HEADER\n         ST    R1,CSALENG\n         SR    R2,R2          STORE THE TAPE UNIT ADDRESS TABLE ADDRESS\n         CS    R2,R11,TAPESTKR\n         BE    STRINGIN INITIALIZE THE TAPE TABLE\n         L     R2,CSALENG     OOPS, SOMEBODY BEAT ME TO IT\n         MVC   0(4,R11),=C'OLD ' CHANGE THE EYE CATCHER\n         FREEMAIN RU,LV=(R2),A=(R11),SP=241,RELATED=GETCSA\n         B     START2\nSTRINGSZ DC    F'&OFFSET'     CHECK THE SIZE OF THE EXISTING AREA\nSTRINGPR DS    0H\n.MEND    MEND\n         TITLE 'WTOETPS1 -- WTO EXIT TO MAINTAIN TAPE UNLOAD DATA'\nWTOETPS1 CSECT\nWTOETPS1 AMODE 31\nWTOETPS1 RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOETPS1'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R8,CVTPTR      FIND USERCVT\n         USING CVT,R8\n         L     R9,CVTUSER\n         USING USERCVT,R9\n         DROP  R8\n         LTR   R9,R9          IS THE USERCVT VALID?\n         BZ    RETURN          NO, DO NOT DO ANYTHING DUMB\n         L     R8,0(R1)       PICK UP ADDRESS OF CTXT\n         USING CTXT,R8\n         L     R7,CTXTTXPJ    LOAD POINTER TO THE MAJOR LINE\n         USING CTXTATTR,R7\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BO    RETURN          YES, SOMETHING IS WRONG\n         CLC   =C'IEC502E',CTXTTMSG IS THIS THE CORRECT MAJOR LINE?\n         BE    START1          YES, PROCESS IT\n         CLC   =C'IEF234E',CTXTTMSG IS THIS THE CORRECT MAJOR LINE?\n         BNE   RETURN          NO, DON'T KNOW WHY I WAS CALLED\nSTART1   LA    R6,CTXTTMSG+10\n         USING MSGAREA,R6\n         CLI   UNITADDR,C' '  IS THIS A TWO-CHARACTER DISPOSITION\n         BNE   START2           NO, SKIP CHANGES\n         LA    R6,1(R6)         YES, MOVE FURTHER OUT\nSTART2   L     R11,TAPESTKR   FIND THE TAPE UNIT ADDRESS TABLE\n         LTR   R11,R11        IS THERE ONE?\n         BZ    STRINGS         NO, CREATE ONE\n         USING CSATABLE,R11\n         CLC   =C'WTOETPS1',CSAEYECT  IS THIS THE CORRECT TABLE?\n         BE    START3                   YES, CHECK MORE\n         EX    4,*                      NO, FIND OUT WHY\nSTART3   CLC   STRINGSZ,CSALENG       IS THE TABLE THE CORRECT LENGTH?\n         BE    STRINGPR                 YES, LET'S GO\n         SR    R1,R1                  CLEAR THE USERCVT AREA\n         LR    R2,R11\n         CS    R2,R1,TAPESTKR\n         L     R2,CSALENG\n         MVC   0(4,R11),=C'OLD ' CHANGE THE EYE CATCHER\n         FREEMAIN RU,LV=(R2),A=(R11),SP=241,RELATED=GETCSA\nSTRINGS  STRING ADDRESS=(560,16),STACKER=N\n         STRING ADDRESS=(570,8),STACKER=N\n         STRING ADDRESS=(580,2),STACKER=N\n         STRING ADDRESS=588,STACKER=N\n         PRINT GEN\n         STRING ADDRESS=589,STACKER=N\n         STRNGEND\n         PRINT NOGEN\n         DROP  R11\n         SPACE 1\n         LA    R11,HDRLEN(R11)   SKIP PAST THE TAPE TABLE HEADER\nCKVOLSER CLC   =X'FFFFFFFF',0(R11) IS THIS THE END OF THE TABLE?\n         BE    CKVOLSE3              YES, FORGET IT\n         LH    R10,4(R11)          PICK UP THE NUMBER OF TABLE ENTRIES\n         LA    R3,6(R11)           FIND THE FIRST TABLE ENTRY\nCKVOLSE1 CLC   0(6,R3),VOLSER\n         BE    CKVOLSE2              YES, ERASE IT\n         LA    R3,6(R3)              NO, TRY ANOTHER\n         BCT   R10,CKVOLSE1        TRY ANOTHER VOL=SER=\n         LR    R11,R3              SET UP THE NEW POINTER\n         B     CKVOLSER            GO TO IT\nCKVOLSE2 MVC   0(6,R3),=XL6'00'  CLOBBER THE OLD VOLUME SERIAL NUMBER\n         SPACE 1\nCKVOLSE3 CLC   =CL6' ',VOLSER    IS THE VOLUME SERIAL NUMBER BLANK?\n         BE    RETURN              YES, FORGET IT\n         L     R11,TAPESTKR   FIND THE TAPE UNIT ADDRESS TABLE\n         LA    R11,HDRLEN(R11)   SKIP PAST THE TAPE TABLE HEADER\nCHKUNIT  CLC   =X'FFFFFFFF',0(R11) IS THIS THE END OF THE TABLE?\n         BE    RETURN                YES, FORGET IT\n*              ASSUMES A THREE DIGIT UNIT ADDRESS\n         CLC   1(3,R11),UNITADDR IS THIS THE CORRECT UNIT ADDRESS?\n         BE    FOUNDIT             YES, PROCESS IT\n         LH    R1,4(R11)           NO, FIND THE NEXT ONE\n         MH    R1,=H'6'          NUMBER OF TABLE ENTRIES * 6\n         LA    R11,6(R1,R11)     SKIP TO NEXT TABLE ENTRY\n         B     CHKUNIT\nSTACKER  CLC   =XL6'00',0(R11)   IS THERE A TAPE HERE?\n         BE    FOUNDIT1            NO, SKIP THE MOVE\n         BCTR  R1,0              SUBTRACT ONE\n         LR    R3,R1             CALCULATE OFFSET\n         MH    R3,=H'6'          CALCULATE END OF TABLE\n         L     R10,=F'-6'        LOAD INCREMENT\n         LA    R3,0(R3,R11)      POINT TO THE NEXT-TO-LAST ENTRY\nSTACKER1 MVC   6(6,R3),0(R3)     WIPE OUT THE OLDEST ONE\n         BXH   R3,R10,STACKER1   LOOP TO PUSH DOWN THE STACK\n         MVC   6(6,R3),0(R3)     WIPE OUT THE OLDEST ONE\n         B     FOUNDIT1\nFOUNDIT  LH    R1,4(R11)         PICK UP THE UNIT ADDRESS COUNTER\n         LA    R11,6(R11)        SKIP THE HEADING INFORMATION\n         BCT   R1,STACKER        SUBTRACT 1 AND HANDLE STACKER\nFOUNDIT1 MVC   0(6,R11),VOLSER   MOVE VOLSER TO TABLE\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\n         LTORG\n         PRINT GEN\n         COPY  USERCVT\nCSATABLE DSECT\nCSAEYECT DS    D              TABLE EYE-CATCHER\nCSALENG  DS    F              LENGTH OF THE TABLE\nTAPETBL  DS    F              TAPE UNIT ENTRIES\nMSGAREA  DSECT\nUNITADDR DS    CL3            UNIT ADDRESS IN THE MESSAGE\n         DS    C              ,\nVOLSER   DS    CL6            VOLUME SERIAL NUMBER IN THE MESSAGE\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         CVT   DSECT=YES,LIST=YES\n         END   WTOETPS1\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOETPS2": {"ttr": 1291, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOETPS2   AT LEVEL 007 AS OF 09/02/86\nWTOETPS2 TITLE 'WTOETPS2 -- WTO EXIT TO DISPLAY TAPE UNLOADED DATA'\nWTOETPS2 CSECT\nWTOETPS2 AMODE 31\nWTOETPS2 RMODE ANY\nHDRLEN   EQU   12   CONSTANT FROM THE EXIT \"WTOETPS1\" MACRO\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOETPS2'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R8,CVTPTR      FIND USERCVT\n         USING CVT,R8\n         L     R9,CVTUSER\n         LTR   R9,R9          IS THE USERCVT VALID?\n         BZ    RETURN           NO, DO NOT DO ANYTHING DUMB\n         USING USERCVT,R9\n         DROP  R8\n         L     R10,0(R1)      PICK UP ADDRESS OF CTXT\n         USING CTXT,R10\n         L     R8,CTXTTXPJ    LOAD POINTER TO THE MAJOR LINE\n         USING CTXTATTR,R8\n         TM    CTXTTFB1,CTXTTFWR  WTOR?\n         BO    RETURN          YES, SOMETHING IS WRONG\n         CLC   =C'IEC501A',CTXTTMSG IS THIS THE CORRECT MAJOR LINE?\n         BE    START1          YES, PROCESS IT\n         CLC   =C'IEC501E',CTXTTMSG IS THIS THE CORRECT MAJOR LINE?\n         BE    START1          YES, PROCESS IT\n         CLC   =C'IEF233A',CTXTTMSG IS THIS THE CORRECT MAJOR LINE?\n         BE    START1          YES, PROCESS IT\n         CLC   =C'IEF233D',CTXTTMSG IS THIS THE CORRECT MAJOR LINE?\n         BNE   RETURN          NO, DON'T KNOW WHY I WAS CALLED\nSTART1   TRT   CTXTTMSG,COMMATBL  FIND THE INFAMOUS COMMA\n         CLI   0(R1),C','    DID I REALLY FIND IT\n         BE    START2          YES, CONTINUE PROCESSING\n         EX    1,*             NO, PROBLEM SOMEWHERE\nSTART2   LA    R6,1(R1)      PROCESS THE VOL=SER=\n         CLC   =CL6' ',0(R6)  IS THE VOLUME SERIAL NUMBER BLANK?\n         BE    RETURN           YES, FORGET IT\n         CLC   =C'SCRTCH',0(R6) IS THE VOLUME SERIAL NUMBER SCRTCH?\n         BE    RETURN           YES, FORGET IT\n         CLC   =C'PRIVAT',0(R6) IS THE VOLUME SERIAL NUMBER PRIVAT?\n         BE    RETURN           YES, FORGET IT\nSTART4   L     R11,TAPESTKR   FIND THE TAPE UNIT ADDRESS TABLE\n         LTR   R11,R11        IS THERE ONE?\n         BZ    RETURN           NO, FORGET IT\n         USING CSATABLE,R11\n         CLC   =C'WTOETPS1',CSAEYECT  IS THIS THE CORRECT TABLE?\n         BE    START3                   YES, USE IT\n         EX    2,*                      NO, FIND OUT WHY\nSTART3   LA    R11,HDRLEN(R11)   SKIP PAST THE TAPE TABLE HEADER\nCKVOLSER CLC   =X'FFFFFFFF',0(R11) IS THIS THE END OF THE TABLE?\n         BE    RETURN                YES, FORGET IT\n         LH    R4,4(R11)           PICK UP THE NUMBER OF TABLE ENTRIES\n         LA    R5,6(R11)           FIND THE FIRST TABLE ENTRY\nCKVOLSE1 CLC   0(6,R5),0(R6)       IS THIS THE VOLUME SERIAL NUMBER?\n         BE    FOUNDIT               YES, DISPLAY IT\n         LA    R5,6(R5)              NO, TRY ANOTHER\n         BCT   R4,CKVOLSE1         TRY ANOTHER VOL=SER=\n         LR    R11,R5              SET UP THE NEW POINTER\n         B     CKVOLSER            GO TO IT\n         SPACE 1\nFOUNDIT  CLC   =H'108',CTXTTLMX    ENOUGH ROOM FOR THE MESSAGE?\n         BH    RETURN                NO, FORGET IT\n         MVC   CTXTTLEN,CTXTTLMX   GIVE THE MESSAGE ENOUGH ROOM\n         MVC   CTXTTMSG+(108-L'UNITMSG)(L'UNITMSG),UNITMSG\n         MVC   CTXTTMSG+103(4),0(R11) MOVE THE UNIT ADDRESS\n         OI    CTXTRFB1,CTXTRCMT      TELL COMMTASK TO CHANGE THE MSG\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\n         LTORG\nUNITMSG  DC    C'  IT MAY STILL BE ON XXXX.'\nCOMMATBL DC    107X'00'        FIND THE INFAMOUS FIRST COMMA\n         DC    C','\n         DC    148X'00'\n         PRINT GEN\n         COPY  USERCVT\n         SPACE 3\nCSATABLE DSECT\nCSAEYECT DS    D              TABLE EYE-CATCHER\nCSALENG  DS    F              LENGTH OF THE TABLE\nTAPETBL  DS    F              TAPE UNIT ENTRIES\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         CVT   DSECT=YES,LIST=YES\n         END   WTOETPS2\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOEUCVT": {"ttr": 1294, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "WTOEUCVT TITLE 'WTOEUCVT -- WTO EXIT TO CREATE THE USERCVT IN ECSA'\n*\n*  THIS MPF EXIT IS DESIGNED TO ALLOCATE A USERCVT FOR INSTALLATIONS\n*  THAT DO NOT HAVE ONE AND YET WISH TO RUN THE WTOETPSX EXITS INCLUDED\n*  IN THIS COLLECTION OF EXITS.  IT HAS BEEN RUN ON ONE OF OUR SYSTEMS.\nWTOEUCVT CSECT\nWTOEUCVT AMODE 31\nWTOEUCVT RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOEUCVT'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R8,CVTPTR      FIND USERCVT\n         USING CVT,R8\n         L     R9,CVTUSER\n         LTR   R9,R9          IS THE USERCVT VALID?\n         BNZ   OK              YES, DO NOT DO ANYTHING DUMB\n         GETMAIN RU,LV=USERCVTL,LOC=ANY,SP=241,RELATED=GETCSA\n         LR    R11,R1         SAVE THE ADDRESS FOR LATER\n         USING USERCVT,R11\n         LA    R2,=XL6'00'    CLEAR THE AREA TO HEX ZEROES\n         SR    R3,R3\n         LR    R4,R11\n         LA    R5,USERCVTL\n         BCTR  R5,0\n         MVCL  R4,R2\n         MVC   CSAEYECT,=C'WTOEUCVT' SET UP THE TABLE HEADER\n         CS    R9,R11,CVTUSER USE \"CS\" INSTRUCTION TO UPDATE MVS CVT\n         BE    LOOKGOOD       LOOKS GOOD TO ME\n         LA    R2,USERCVTL    OOPS, SOMEBODY BEAT ME TO IT\n         MVC   0(4,R11),=C'OLD ' CHANGE THE EYE CATCHER\n         FREEMAIN RU,LV=(R2),A=(R11),SP=241,RELATED=GETCSA\nOK       WTO   'WTOEUCVT2 USERCVT NOT CREATED BECAUSE IT EXISTS'\n         B     RETURN\nLOOKGOOD WTO   'WTOEUCVT1 USERCVT CREATED SUCCESSFULLY'\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\n         LTORG\n         PRINT GEN\n         COPY  USERCVT\n         SPACE 3\n         PRINT NOGEN\n         REGEQU\n         CVT   DSECT=YES,LIST=YES\n         END   WTOEUCVT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WTOE176I": {"ttr": 1537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOE176I   AT LEVEL 002 AS OF 07/07/86\n//O9080RL  JOB (0052,ACCC),\n//         'ASM I. R.',\n//         NOTIFY=O9080R,\n//         CLASS=I,\n//         MSGCLASS=Q,\n//         MSGLEVEL=1\n//R  EXEC A9294A07,USER='O9080R',SYSOUT='(D,,AA01)'\n//AS5 EXEC ACFASM,SOUT='(D,,LA01)',MEMBER=WTOE176I\n//SYSLIB DD DISP=SHR,DSN=&ACFX..&ACFMAC\n//       DD DISP=SHR,DSN=SYS1.MACLIB\n//       DD DISP=SHR,DSN=COKE.MACLIB\n//       DD DISP=SHR,DSN=SYS1.HASPSRC\n//       DD DISP=SHR,DSN=SYS1.AMODGEN\n//       DD DISP=SHR,DSN=TMS.TMSGEN47.ASM\n//       DD DISP=SHR,DSN=O9080R.CMPAT.ASM\n//SYSIN  DD  *\nWTOE176I TITLE 'WTOE176I -- WTO EXIT TO STOP THE EXT WRITER 0,1'\nWTOE176I CSECT\nWTOE176I AMODE 31\nWTOE176I RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOEDB30'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         CLC   =C'IEF176I',CTXTTMSG\n         BNE   RETURN          NOT CORRECT MESSAGE, FORGET IT\nPROCESS  GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLY),REPLY MOVE  REPLY TO MGCR AREA\n         MVC   MGCRTEXT+5(1),CTXTTMSG+40\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\n         CLC   CTXTDCLN,=H'2' ANY DESCRIPTOR CODES?\n         BL    RETURN          NO, FORGET IT\n         L     R10,CTXTDCP    LOAD POINTER TO THE DESCRIPTOR CODES\n         USING CTXTDESC,R10\n         MVC   CTXTDC1(L'CTXTDC1+L'CTXTDC2),SETSTATS\n         OI    CTXTRFB1,CTXTRCRC+CTXTRCDC  CHANGE CODES NOW\n         DROP  R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nSETSTATS DC    AL1(CTXTDC04),X'00'       SYSTEM STATUS WILL DO NICELY\nREPLY    DC    C'P WTRX'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\nDWORD    DS    D\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOE176I\n//L  EXEC ACFLINK,SOUT='*',SYSX='SYS2',LIB=LINKLIB,C=' '\n//* RENT='RENT,'\n//SYSLIN DD *\n  INCLUDE ACFOBJ(WTOE176I)\n  NAME   WTOE176I(R)\n//ZZDATA DD  DATA,DLM=ZZ\nZZ\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOE315I": {"ttr": 1540, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOE315I   AT LEVEL 006 AS OF 07/02/86\nWTOE315I TITLE 'WTOE315I -- WTO EXIT TO DUMP THE NPM SESSION FILES'\nWTOE315I CSECT\nWTOE315I AMODE 31\nWTOE315I RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOE315I'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         CLC   =C'FNM315I ',CTXTTMSG\n         BNE   RETURN          NOT CORRECT MESSAGE, FORGET IT\nPROCESS  GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLY1),REPLY1 MOVE REPLY TO MACRO AREA\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY1\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         TIME  BIN            GET CURRENT TIME OF DAY IN R0\n         SRDA  R0,32          CONVERT TO MINUTES\n         D     R0,=F'6000'\n         SR    R0,R0          CALCULATE THE HOURS\n         D     R0,=F'60'       R0=MINUTES  R1=HOURS\n         LR    R3,R0           R3=MINUTES\n         M     R0,=F'100'\n         AR    R3,R1          R3=HOURS AND MINUTES\n         A     R3,=F'2'\n         CVD   R3,DWORD       CONVERT IT TO DISPLAY\n         UNPK  MGCRTEXT+6(5),DWORD+5(3)\n         OI    MGCRTEXT+10,C'0'\n         MVC   MGCRTEXT+6(2),MGCRTEXT+7\n         MVI   MGCRTEXT+8,C'.'\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nREPLY1   DC    C'$TA,T=HH.MM,''$T''''O9300CSS'''',P=12''  BY WTOE315I'\n         LTORG\n         SPACE 3\n         PRINT GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\nDWORD    DS    D\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOE315I\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WTOE362A": {"ttr": 1542, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET WTOE362A   AT LEVEL 005 AS OF 09/26/86\nWTOE362A TITLE 'WTOE362A -- WTO EXIT TO DUMP THE SMF MANX DATASETS'\nWTOE362A CSECT\nWTOE362A AMODE 31\nWTOE362A RMODE ANY\n         USING *,R12\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         B     START\n         DC    C'WTOE362A'\n         DC    C'&SYSDATE',C' &SYSTIME'\n         PRINT NOGEN\nSTART    L     R11,0(R1)           PICK UP ADDRESS OF CTXT\n         USING CTXT,R11\n         L     R10,CTXTTXPJ   LOAD POINTER TO THE MESSAGE ATTRIBUTES\n         USING CTXTATTR,R10\n         CLC   =C'IEE362A ',CTXTTMSG\n         BNE   RETURN          NOT CORRECT MESSAGE, FORGET IT\n         CLC   =C' SYS1.MAN',CTXTTMSG+26 HAS THE RECORD LAYOUT CHANGED?\n         BE    PROCESS                    NO, PROCESS IT\n         EX    4,*                        YES, DUMP IT\nPROCESS  GETMAIN RU,LV=WORKEND,SP=230,LOC=(BELOW,ANY)\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLY),REPLY MOVE REPLY TO MACRO AREA\n         MVC   MGCRTEXT+10(4),CTXTTMSG+32\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         TIME  BIN            GET CURRENT TIME OF DAY IN R0\n         SRDA  R0,32          CONVERT TO MINUTES\n         D     R0,=F'6000'\n         SR    R0,R0          CALCULATE THE HOURS\n         D     R0,=F'60'       R0=MINUTES  R1=HOURS\n         LR    R3,R0           R3=MINUTES\n         M     R0,=F'100'\n         AR    R3,R1          R3=HOURS AND MINUTES\n         A     R3,=F'2'\n         CVD   R3,DWORD       CONVERT IT TO DISPLAY\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLY1),REPLY1 MOVE REPLY TO MACRO AREA\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY1\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         UNPK  MGCRTEXT+6(5),DWORD+5(3)\n         OI    MGCRTEXT+10,C'0'\n         MVC   MGCRTEXT+6(2),MGCRTEXT+7\n         MVI   MGCRTEXT+8,C'.'\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         XC    MGCRPL(MGCRSIZ),MGCRPL CLEAR THE MGCR AREA\n         MVC   MGCRTEXT(L'REPLY2),REPLY2 MOVE REPLY TO MACRO AREA\n         LA    R3,(MGCRTEXT-MGCRPL)+L'REPLY2\n         STC   R3,MGCRLGTH    SET THE LENGTH OF THE REPLY\n         UNPK  MGCRTEXT+6(5),DWORD+5(3)\n         OI    MGCRTEXT+10,C'0'\n         MVC   MGCRTEXT+6(2),MGCRTEXT+7\n         MVI   MGCRTEXT+8,C'.'\n         SR    R0,R0          CLEAR R0 FOR SOME REASON\n         MGCR  MGCRPL\n         L     R10,4(R13)     RETURN TO MPF\n         FREEMAIN RU,LV=WORKEND,A=(R13),SP=230\n         LR    R13,R10\n         CLC   CTXTDCLN,=H'2' ANY DESCRIPTOR CODES?\n         BL    RETURN          NO, FORGET IT\n         L     R10,CTXTDCP    LOAD POINTER TO THE DESCRIPTOR CODES\n         USING CTXTDESC,R10\n         MVC   CTXTDC1(L'CTXTDC1+L'CTXTDC2),SETSTATS\n         OI    CTXTRFB1,CTXTRCRC+CTXTRCDC  CHANGE CODES NOW\n         DROP  R10\nRETURN   LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n         SPACE 1\nSETSTATS DC    AL1(CTXTDC04),X'00'       SYSTEM STATUS WILL DO NICELY\nREPLY    DC    C'START @,J=MANx  BY WTOE362A'\nREPLY1   DC    C'$TA,T=HH.MM,''$T''''A9291AA'''',P=12''  BY WTOE362A'\nREPLY2   DC    C'$TA,T=HH.MM,''$T''''A9291AB'''',P=12''  BY WTOE362A'\n         LTORG\n         SPACE 3\n         PRINT   GEN\nWORKAREA DSECT\n         DS    18F            SAVE AREA\nDWORD    DS    D\n         IEZMGCR DSECT=NO\n         ORG\nWORKEND  EQU   *-WORKAREA\n         SPACE 3\n         IEZVX100\n         PRINT NOGEN\n         REGEQU\n         END   WTOE362A\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT117/FILE117.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT117", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}