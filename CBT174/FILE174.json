{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011416000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE174.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE174.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x08\\x08'", "DS1TRBAL": "b'7\\xc8'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01<\\x00\\x02\\x01<\\x00\\n\\x00\\t'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x045\\x00\\x00\\x01\\x02)o\\x01\\x02)o\\x006\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf3@@@'", "ispf": {"version": "04.53", "flags": 0, "createdate": "2002-10-23T00:00:00", "modifydate": "2002-10-23T00:36:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-453"}, "text": "REGULAR CBT TAPE - VERSION 453    FILE:  174\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT453.FILE174\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 6 MEMBERS COUNTED; CUMULATIVE SIZE IS 4,148 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   10/23/02    00:36:00    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00C\\x01\\x02)o\\x01\\x02)o\\x000\\x00\\x11\\x00\\x11\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-10-23T00:00:00", "modifydate": "2002-10-23T00:30:43", "lines": 17, "newlines": 17, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: TAPECOPY\nDate: Mon, 21 Oct 2002 17:11:29 EDT\nFrom: Aron Eisenpress <AFECU@CUNYVM.CUNY.EDU>\nTo: Sam Golob <sbgolob@attglobal.net>\n\nHi Sam,\n\nI was looking through some old notes and found a reminder to send\nyou the documentation on my TAPECOPY program.  I thought I had,\nbut it looks like it didn't make it to file 174 on the CBT tape,\nso here it is (again?).\n\nUnfortunately I haven't had a chance to make any changes to the\nprogram.\n\nBest,\n  Aron\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE174": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x045\\x00\\x00\\x01\\x02)o\\x01\\x02)o\\x005\\x00<\\x00<\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf3@@@'", "ispf": {"version": "04.53", "flags": 0, "createdate": "2002-10-23T00:00:00", "modifydate": "2002-10-23T00:35:00", "lines": 60, "newlines": 60, "modlines": 0, "user": "CBT-453"}, "text": "//***FILE 174 IS THE \"TAPECOPY\" PROGRAM FROM ARON EISENPRESS OF     *   FILE 174\n//*           THE CITY UNIVERSITY COMPUTER CENTER IN NEW YORK.      *   FILE 174\n//*           AMONG ITS MANY OPTIONS, IS THE ABILITY TO CREATE      *   FILE 174\n//*           A STANDARD-LABELED TAPE FROM A NON-LABELED TAPE.      *   FILE 174\n//*           (I USED THIS FEATURE AS PART OF MY PROCESSING OF      *   FILE 174\n//*           THE CBT TAPE - EDITOR.)  MANY ADJUSTMENTS CAN BE      *   FILE 174\n//*           MADE IN THE PROCESSING TO BE ABLE TO HANDLE           *   FILE 174\n//*           MESSED-UP AND UNUSUAL TAPES.                          *   FILE 174\n//*                                                                 *   FILE 174\n//*           Aron Eisenpress                                       *   FILE 174\n//*           Manager, MVS Systems                                  *   FILE 174\n//*           City University of New York                           *   FILE 174\n//*           Computing and Information Services                    *   FILE 174\n//*           555 West 57th Street, 16th floor                      *   FILE 174\n//*           New York, New York  10019-2919                        *   FILE 174\n//*                                                                 *   FILE 174\n//*           Phone: 212/541-0918                                   *   FILE 174\n//*                                                                 *   FILE 174\n//*           email: afecu@cunyvm.cuny.edu                          *   FILE 174\n//*                                                                 *   FILE 174\n//*      THIS IS A GENERALIZED TAPE-TO-TAPE COPY PROGRAM.           *   FILE 174\n//*      IT USES QSAM, FORCING LABEL=BLP, AND PERFORMS ITS          *   FILE 174\n//*      OWN LABEL PROCESSING INTERNALLY.                           *   FILE 174\n//*                                                                 *   FILE 174\n//*      ATTRIBUTES:                                                *   FILE 174\n//*         PROBLEM PROGRAM                                         *   FILE 174\n//*         AUTHORIZED (AC=1) *                                     *   FILE 174\n//*         NON-REENTRANT                                           *   FILE 174\n//*         NONRESIDENT, IN LINKLIB                                 *   FILE 174\n//*                                                                 *   FILE 174\n//*         * PROGRAM AUTHORIZATION IS REQUIRED IN ORDER TO SET     *   FILE 174\n//*            LABEL=BLP VIA OPEN TYPE=J.                           *   FILE 174\n//*                                                                 *   FILE 174\n//*      HAS BEEN FIXED BY THE AUTHOR TO READ TAPES ON A 3480       *   FILE 174\n//*      OR 3480 IDRC DEVICE.  SEEMS GOOD FOR 3490E'S TOO.  I       *   FILE 174\n//*      CHECKED THE UCB \"HEX\" UNIT TYPE FOR 3490E'S  (SBG).        *   FILE 174\n//*                                                                 *   FILE 174\n//*      SYSTEM LEVEL:  THIS PROGRAM IS BELIEVED TO WORK            *   FILE 174\n//*         WITH ALL OPERATING SYSTEM LEVELS FROM OS/MVT            *   FILE 174\n//*         THROUGH MVS/ESA.  THE PRIMARY OPERATING SYSTEM          *   FILE 174\n//*         DEPENDENCY IS IN DETERMINING THE TAPE UNIT              *   FILE 174\n//*         SERIAL NUMBER FOR 34XX TAPE DRIVES, AND THAT            *   FILE 174\n//*         CODE IS DUAL-PATHED AS NEEDED.                          *   FILE 174\n//*                                                                 *   FILE 174\n//*      DISCLAIMER:                                                *   FILE 174\n//*                                                                 *   FILE 174\n//*       +-------------------------------------------------------+ *   FILE 174\n//*       |                                                       | *   FILE 174\n//*       | THIS PROGRAM HAS BEEN USED SUCCESSFULLY, AND TO THE   | *   FILE 174\n//*       | BEST OF OUR KNOWLEDGE IT IS OPERATIONAL.  HOWEVER, NO | *   FILE 174\n//*       | WARRANTY IS MADE TO THE ACCURACY OF THIS PROGRAM OR   | *   FILE 174\n//*       | RELATED MATERIAL, AND NO RESPONSIBILITY IS ASSUMED    | *   FILE 174\n//*       | FOR ANY MODIFICATION DIRECTLY OR INDIRECTLY CAUSED    | *   FILE 174\n//*       | BY THE USE OF THIS PROGRAM.  WHILE WE WOULD LIKE TO   | *   FILE 174\n//*       | KNOW OF ANY ERRORS IN THIS PROGRAM, THERE IS NO       | *   FILE 174\n//*       | COMMITMENT TO FIX THEM.  THIS PROGRAM IS DISTRIBUTED  | *   FILE 174\n//*       | WITHOUT ANY WARRANTIES EITHER EXPRESS OR IMPLIED.     | *   FILE 174\n//*       |                                                       | *   FILE 174\n//*       +-------------------------------------------------------+ *   FILE 174\n//*                                                                 *   FILE 174\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DOC": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x02)o\\x01\\x02)o\\x001\\x01\\\\\\x01\\\\\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-10-23T00:00:00", "modifydate": "2002-10-23T00:31:01", "lines": 348, "newlines": 348, "modlines": 0, "user": "SBGOLOB"}, "text": "\n                TAPECOPY PROGRAM DOCUMENTATION             MARCH 1976\n                -------- ------- -------------  UPDATED SEPTEMBER 1979\n\n     THIS DOCUMENTATION DESCRIBES THE NEW VERSION OF TAPECOPY\nDATED MARCH 1976.  THE MAJOR CHANGES IN THIS VERSION ARE DETAILED\nAT THE END, UNDER \"NEW FEATURES OF THIS VERSION.\"\n\n     TAPECOPY IS DESIGNED TO ALLOW A USER TO EASILY COPY A SINGLE\nTAPE TO ANOTHER TAPE, REGARDLESS OF HOW MANY FILES ARE ON THE TAPE,\nWITH A MINIMUM OF JCL.\n\n                   DD CARDS REQUIRED\n                   -- ----- --------\n\n     THE FOLLOWING DD CARDS ARE REQUIRED:\n         SYSPRINT - FOR INFORMATIONAL AND ERROR MESSAGES.\n                    USUALLY DEFINED AS SYSOUT=A.\n         TAPE1    - DEFINES THE INPUT TAPE.  SEE \"TAPE DD PARAMETERS.\"\n         TAPE2    - DEFINES THE OUTPUT TAPE.  SEE \"TAPE DD PARAMTERS.\"\n\n         NOTE: IF YOU WISH YOU MAY USE DD CARDS WITH DDNAMES OF\n               \"SYSUT1\" AND \"SYSUT2\" IN PLACE OF \"TAPE1\" AND \"TAPE2.\"\n               THIS IS FOR COMPATIBILITY WITH OTHER UTILITIES.\n\n         IF THE INPUT DD DOES NOT DEFINE A TAPE, IT WILL BE TREATED AS\n              A SINGLE FILE WITH NO LABEL PROCESSING.  YOU MAY USE THIS\n              (BY SPECIFYING DD DUMMY) TO RELABEL THE OUTPUT TAPE; SEE\n              \"LABEL SPECIFICATION\" BELOW.\n         IF THE OUTPUT DD DOES NOT DEFINE A TAPE, NO OUTPUT WILL BE\n              WRITTEN.  YOU MAY USE THIS (BY SPECIFYING DD DUMMY) TO\n              FIND OUT WHAT IS ON YOUR INPUT TAPE.\n\n                TAPE DD PARAMETERS\n                ---- -- ----------\n\n      LABEL=    OPTIONAL. SEE \"LABEL SPECIFICATION.\"\n      UNIT=     REQUIRED.\n      VOL=SER=  REQUIRED. SEE \"LABEL SPECIFICATION.\"\n\n                DCB SUBPARAMETERS\n\n      BLKSIZE=  OPTIONAL. FOR INPUT, SEE \"BUFFER ALLOCATION.\"\n                          FOR OUTPUT, SEE \"HEADER LABEL CREATION.\"\n      BUFNO=    OPTIONAL (INPUT ONLY). SEE \"BUFFER ALLOCATION.\"\n      DEN=      FOR 7-TRACK TAPES, SEE \"7-TRACK TAPES.\"\n                FOR 9-TRACK TAPES, REQUIRED ONLY FOR OUTPUT TO THE\n                 FIRST FILE ON THE TAPE AT OTHER THAN THE DEFAULT\n                 DENSITY FOR THE OUTPUT TAPE DRIVE; IGNORED FOR\n                 SUBSEQUENT OUTPUT FILES OR ON INPUT.\n      EROPT=    OPTIONAL (INPUT ONLY). SEE \"I/O ERROR PROCESSING.\"\n      LIMCT=    OPTIONAL (INPUT ONLY). SEE \"END-OF-TAPE DETERMINATION.\"\n      LRECL=    OPTIONAL (OUTPUT ONLY). SEE \"HEADER LABEL CREATION.\"\n      OPTCD=Z   OPTIONAL (INPUT ONLY). SEE \"I/O ERROR PROCESSING.\"\n      RECFM=    OPTIONAL (OUTPUT ONLY). SEE \"HEADER LABEL CREATION.\"\n      TRTCH=    SEE \"7-TRACK TAPES.\"\n\n                   LABEL SPECIFICATION AND THE PARM FIELD\n                   ----- ------------- --- --- ---- -----\n\n     THE DD CARD LABEL= TYPE DESCRIBES THE CURRENT LABEL TYPE\nFOR THE INPUT AND OUTPUT TAPES.  THE FOLLOWING TYPES MAY BE\nSPECIFIED:\n         SL  - THE TAPE CONTAINS IBM OS (OR DOS) STANDARD LABELS.\n               THIS IS THE DEFAULT VALUE SET BY OS IF YOU DO NOT\n                SPECIFY ANY LABEL TYPE.\n         NL  - THE TAPE DOES NOT CONTAIN IBM OS STANDARD LABELS.\n         LTM - THE TAPE DOES NOT CONTAIN IBM OS STANDARD LABELS AND\n                MAY START WITH A TAPE MARK.  IF IT DOES, THE TAPE\n                MARK IS SKIPPED OVER; IF NOT, THE PROCESSING IS THE\n                SAME AS FOR NL.\n         BLP - NO CHECKING OF LABELS IS DONE.  IF THE TAPE DOES IN\n                FACT HAVE LABELS, THEY ARE TREATED AS DATA FILES.\n\n     THE EXEC CARD PARM= FIELD IS OPTIONAL AND HAS THREE SUBFIELDS,\nSEPARATED BY COMMAS.  THEY MAY BE USED AS FOLLOWS:\n     IF THE INSTALLATION STANDARDS DO NOT ALLOW YOU TO SPECIFY THE\n         ACTUAL STANDARD LABEL OF THE INPUT TAPE AS THE VOL=SER= ON THE\n         INPUT DD CARD, SPECIFY THE INSTALLATION EXTERNAL LABEL ON THE\n         DD CARD AND LABEL=(,BLP); SPECIFY THE ACTUAL VOLUME SERIAL THAT\n         APPEARS IN THE STANDARD LABEL AS THE FIRST PARAMETER.  THE\n         ACTUAL VOLUME SERIAL WILL THEN BE VERIFIED BY TAPECOPY, AND THE\n         INPUT TAPE TREATED AS STANDARD-LABELLED.  THIS OPTION MAY BE\n         USED ONLY FOR THE INPUT TAPE.  IF THIS PARAMETER IS NOT USED\n         BUT YOU WISH TO SPECIFY THE SECOND EXEC CARD PARAMETER, USE A\n         COMMA TO INDICATE THE OMISSION.\n     IF YOU WISH TO LABEL THE OUTPUT TAPE (IF IT IS NOT LABELLED),\n         OR CHANGE THE VOLUME SERIAL (IF IT IS), SPECIFY THE CURRENT\n         VOLUME SERIAL AND LABEL TYPE IN THE OUTPUT DD CARD, AND THE NEW\n         VOLUME SERIAL AS THE SECOND EXEC CARD PARAMETER.  THE CURRENT\n         LABEL TYPE AND VOLUME SERIAL, AS SPECIFIED IN THE DD CARD,\n         WILL BE VERIFIED, AND A NEW VOLUME LABEL WITH THE NEW VOLUME\n         SERIAL WILL BE WRITTEN.\n         THE THIRD PARAMETER MAY BE USED TO SPECIFY THE OWNER\n         INFORMATION (UP TO 10 CHARACTERS) IF THE SECOND PARAMETER IS\n         SPECIFIED.  IF THE SECOND PARAMETER IS NOT SPECIFIED, THE THIRD\n         ONE IS IGNORED.  IF THE NEW OWNER INFORMATION IS NOT SPECIFIED,\n         IT WILL BE TAKEN FROM THE OLD VOLUME LABEL, IF THE TAPE HAD\n         STANDARD LABELS; OTHERWISE FROM THE INPUT TAPE VOLUME LABEL, IF\n         IT IS LABELLED.\n\n     YOU MAY START THE TAPE COPY AT OTHER THAN THE BEGINNING OF THE\nINPUT OR OUTPUT TAPES.  SPECIFY THE FILE NUMBER AT WHICH YOU WANT\nTO BEGIN IN THE LABEL= DD PARAMETER, IN THE FILE SEQUENCE SUBPARAMETER.\n\n     IF YOUR INPUT TAPE IS AN IBM PID TAPE, YOU MAY SPECIFY\n\"PID\" AS THE FIRST EXEC CARD PARAMETER AND LABEL=(,NL) ON THE\nTAPE1 DD CARD.  IF YOU DO, THE TAPE COPY WILL STOP WHEN A FILE\nCONTAINING ONLY 1 80-BYTE RECORD IS COPIED (THIS IS THE STANDARD\nIBM PID TRAILER LABEL FILE).  THIS OPTION IS PROVIDED BECAUSE\nONCE-UPON-A-TIME PID TAPES DID NOT HAVE 2 CONSECUTIVE TAPE MARKS\nAT THE END.\n\n                   HEADER LABEL CREATION\n                   ------ ----- --------\n\n     IF THE INPUT TAPE IS NOT LABELLED AND THE OUTPUT TAPE IS,\nSTANDARD HEADER LABELS WILL BE CREATED.  THE DSNAMES WILL BE OF\nTHE FORM \"FILENNNN\", WHERE \"NNNN\" IS THE FILE NUMBER ON THE OUTPUT\nTAPE.  RECFM, LRECL, AND BLKSIZE MAY BE SPECIFIED ON THE TAPE2 DD\nCARD; IF THEY ARE, THE VALUES SPECIFIED WILL BE PUT IN THE LABELS\nCREATED.  IF THEY ARE NOT SPECIFIED, THE FOLLOWING WILL BE SUPPLIED:\nRECFM=U, LRECL=0, BLKSIZE=0.\n\n     IF THE INPUT TAPE HAS IBM DOS STANDARD LABELS AND THE OUTPUT\nTAPE IS LABELLED, RECFM, LRECL, AND BLKSIZE WILL BE PUT IN THE\nOUTPUT LABELS CREATED.  THEY ARE SPECIFIED IN THE SAME MANNER AS\nIF THE INPUT WERE NOT LABELLED.\n\n                   END-OF-TAPE DETERMINATION\n                   ----------- -------------\n\n     YOU MAY LIMIT THE NUMBER OF FILES COPIED BY SPECIFYING AS\nDCB=LIMCT= ON THE TAPE1 DD CARD THE NUMBER OF FILE YOU WANT COPIED.\n\n     IF NO INPUT ERRORS OCCUR, THE TAPE COPY WILL TERMINATE WHEN\nANY ONE OF THE FOLLOWING CONDITIONS IS SATISFIED:\n\n     FOR LABELLED INPUT:\n         THE LIMIT SPECIFIED AS DCB=LIMCT= IS SATISFIED.\n         AN EOV LABEL IS FOUND.\n         TWO CONSECUTIVE TAPE MARKS ARE FOUND AFTER EOF LABELS.\n              (THIS IS THE NORMAL OS INDICATION OF THE END OF A\n              LABELLED TAPE).\n\n     FOR UNLABELLED INPUT:\n         THE LIMIT SPECIFIED AS DCB=LIMCT= IS SATISFIED.\n         TWO CONSECUTIVE TAPE MARKS ARE FOUND AFTER A FILE.\n              (THIS IS THE NORMAL OS INDICATION OF THE END OF AN\n              UNLABELLED TAPE).\n         IF THE INPUT TAPE WAS SPECIFIED AS A PID TAPE (SEE \"LABEL\n              SPECIFICATION\" ABOVE), WHEN A FILE CONTAINING A SINGLE\n              80-BYTE RECORD IS COPIED.\n\n     FOR PROCESSING AFTER AN INPUT ERROR OCCURS, SEE \"I/O ERROR\nPROCESSING\" BELOW.\n\n                   BUFFER ALLOCATION\n                   ------ ----------\n\n     THE SIZE AND NUMBER OF BUFFERS USED FOR THE INPUT AND OUTPUT\nTAPES ARE DETERMINED FROM USER SPECIFICATIONS AND FROM THE INPUT\nLABELS (IF THE INPUT TAPE IS LABELLED), AS FOLLOWS:\n\n     NUMBER OF BUFFERS: THE DEFAULT VALUE IS 2.\n         THIS MAY BE OVERRIDDEN WITH THE DCB=BUFNO= PARAMETER ON THE\n         TAPE1 DD CARD.\n\n     BUFFER SIZE: THE DEFAULT VALUE IS 10232.\n         THIS MAY BE OVERRIDDEN BY SPECIFYING THE DCB=BLKSIZE= PARAMETER\n         ON THE TAPE1 DD CARD.  IF THE INPUT TAPE IS LABELLED, THE\n         BLKSIZE IN THE LABEL FOR EACH INPUT FILE WILL BE USED IF IT IS\n         LARGER THAN THE VALUE SPECIFIED IN THE DD CARD (OR DEFAULTED).\n         NOTE: THE BUFFER SIZE WILL ALWAYS BE 1 BYTE LARGER THAN THE\n               BLKSIZE SO THAT THE PROGRAM CAN DETERMINE AFTER AN INPUT\n               BLOCK IS READ WHETHER IT EXCEEDS THE BLKSIZE BEING USED.\n\n                   STORAGE REQUIRED\n                   ------- --------\n\n     THE STORAGE REQUIRED IS 18K + WHATEVER IS REQUIRED FOR BUFFERS.\n\n     TO CALCULATE THE STORAGE REQUIRED FOR BUFFERS:\n         TAKE THE BLKSIZE BEING USED. (SEE \"BUFFER ALLOCATION\" ABOVE.\n          IF NO BLKSIZE= PARAMETER WAS SPECIFIED FOR TAPE1 AND NO\n          INPUT FILES HAVE A LARGER BLKSIZE, THE DEFAULT BLKSIZE IS\n          10231).\n         ADD 1.\n         ROUND UP TO A MULTIPLE OF 8.\n         MULTIPLY BY BUFNO (DEFAULT IS 2).\n         ADD 8.\n         ROUND UP TO A MULTIPLE OF 2048.\n         IF THE OUTPUT IS A TAPE, MULTIPLY BY 2.\n\n     WITH THE DEFAULT OPTIONS, THE BUFFERS TAKE 40K, SO THE\nPROGRAM WILL RUN IN 58K.\n\n                   RETURN CODES\n                   ------ -----\n\n     THE FOLLOWING ARE THE RETURN CODES SET ON EXIT TO THE OPERATING\nSYSTEM:\n\n          0    THE TAPE COPY COMPLETED NORMALLY\n\n          4    CONFLICTING OR UNSUPPORTED OPTIONS WERE SPECIFIED.\n               NO TAPE PROCESSING WAS DONE.\n\n          8    THE LABELS DO NOT MATCH WHAT WAS SPECIFIED.\n               NO WRITING ON THE OUTPUT TAPE WAS DONE.\n\n         12    AN INPUT ERROR OR LABEL ERROR OCCURRED AND THE TAPE COPY\n               WAS TERMINATED.  TRAILER LABELS ON THE OUTPUT TAPE WERE\n               WRITTEN (IF APPROPRIATE) SO THAT IT CAN BE PROCESSED BY\n               STANDARD ACCESS METHODS.\n|              THIS RETURN CODE IS ALSO ISSUED IF THE BLOCK COUNT IN\n|              THE EOF1/EOV1 LABEL FOR THE INPUT TAPE DOES NOT MATCH\n|              THE NUMBER OF BLOCKS READ.  PROCESSING IS NOT TERMINATED\n|              FOR THIS ERROR.\n\n         16    AN UNRECOVERABLE INPUT ERROR (A CHANNEL ERROR, FOR\n               EXAMPLE) OR AN OUTPUT ERROR OCCURRED.  THE OUTPUT TAPE\n               MAY NOT BE USABLE.\n\n         20    ONE OF THE REQUIRED DD CARDS WAS MISSING.\n\n                   I/O ERROR PROCESSING\n                   --- ----- ----------\n\n                      OUTPUT ERRORS\n\n     OUTPUT ERRORS ARE NOT RECOVERABLE.  AN APPROPRIATE MESSAGE\nIS PRINTED ON SYSPRINT (UNLESS THE ERROR OCCURRED ON SYSPRINT, IN\nWHICH CASE THE MESSAGE IS WRITTEN TO SYSMSG).  PROCESSING TERMINATES\nIMMEDIATELY WITH A RETURN CODE OF 16.\n\n     NOTE THAT THE OPERATING SYSTEM WILL ATTEMPT TO WRITE A TAPE\nMARK TO INDICATE THE END OF THE OUTPUT FILE.  IF THE TAPE IS IN SUCH\nPOOR CONDITION THAT THIS IS IMPOSSIBLE, A SYSTEM COMPLETION CODE\nOF 714-0C WILL RESULT.\n\n                       INPUT ERRORS\n\n     INPUT ERRORS CAUSED BY THE CHANNEL ARE NOT RECOVERABLE AND ARE\nTREATED THE SAME AS OUTPUT ERRORS.\n\n     SOME OTHER INPUT ERRORS ARE TREATED AS NON-RECOVERABLE.  THE\nINPUT TAPE IS NOT READ ANY FURTHER, OUTPUT TRAILER LABELS ARE WRITTEN\n(IF APPROPRIATE), AND PROCESSING TERMINATES.  THESE ARE:\n\n         BUS-OUT CHECK OR COMMAND REJECT\n              THESE ERRORS WILL NOT NORMALLY OCCUR.\n\n         EQUIPMENT CHECK\n              THIS MAY INDICATE THAT THE TAPE DRIVE IS BROKEN, BUT IT\n              MORE USUALLY HAPPENS IF THE TAPE RUNS OFF THE END OF THE\n              REEL OR THE OPERATOR PRESSES THE \"RESET\" BUTTON.\n\n         NOT-CAPABLE\n              THIS OCCURS ON A 9-TRACK TAPE DRIVE WHEN IT DETERMINES\n              THAT THE TAPE IS WRITTEN AT A DENSITY THAT THE TAPE DRIVE\n              IS NOT CAPABLE OF READING.\n\n     THE USER MAY SPECIFY THE DESIRED ACTION IN CASE OF A MORE USUAL\nERROR (SUCH AS A DATA CHECK) VIA THE DCB=EROPT= PARAMETER IN THE\nDD CARD FOR TAPE1.  THE FOLLOWING MAY BE SPECIFIED:\n\n     DCB=EROPT=ABE  TREAT THE ERROR AS UNRECOVERABLE AND TERMINATE\n                    PROCESSING.\n\n     DCB=EROPT=SKP  SKIP THE BAD BLOCK.\n\n     DCB=EROPT=ACC  COPY WHATEVER WAS READ.\n\n     IF DCB=EROPT= IS NOT SPECIFIED, WHATEVER WAS READ WILL BE COPIED,\nBUT PROCESSING WILL TERMINATE AFTER 50 ERRORS OCCUR ON A TAPE.\n\n     IF YOU KNOW THAT YOUR TAPE HAS A LOT OF ERRORS ON IT, YOU CAN\nREDUCE THE AMOUNT OF TIME THAT OS SPENDS IN ERROR RECOVERY AND\nELIMINATE THE ERROR MESSAGES TO THE OPERATOR BY SPECIFIYING\nDCB=OPTCD=Z ON THE INPUT DD CARD.\n\n     APPROPRIATE MESSAGES WILL BE WRITTEN WHENEVER ANY ERROR OCCURS.\n\n                   7-TRACK TAPES\n                   ------- -----\n\n                      DENSITY\n\n     TO BE PROCESSED BY TAPECOPY, 7-TRACK TAPES MUST HAVE ALL FILES\nTHAT WILL BE READ AT THE SAME DENSITY.  IF THE DENSITY IS OTHER\nTHAN 800BPI, IT MUST BE SPECIFIED IN THE DCB=DEN= PARAMETER ON THE\nDD CARD.  THIS APPLIED TO BOTH THE INPUT AND OUTPUT TAPES.\n\n            RECORDING TECHNIQUE (TRTCH)\n\n     IF THE INPUT TAPE IS LABELLED, THE TRTCH FROM EACH HEADER\nLABEL WILL BE USED TO PROCESS THAT FILE.  (LABELS ARE ALWAYS\nWRITTEN WITH TRTCH=ET).\n     IF THE INPUT AND OUTPUT ARE BOTH LABELLED AND TRTCH IS NOT\nSPECIFIED FOR THE OUTPUT TAPE, EACH FILE WILL BE COPIED WITH THE\nSAME TRTCH AS IT IS WRITTEN WITH ON THE INPUT TAPE.\n     IN ALL OTHER CASES, IF THE SYSTEM DEFAULT IS NOT CORRECT,\nDCB=TRTCH= MUST BE SPECIFIED FOR THE INPUT OR OUTPUT TAPES.\n\n                   FACILITIES NOT SUPPORTED\n                   ---------- --- ---------\n\n     THE FOLLOWING FEATURES OF THE OPERATING SYSTEM ARE NOT\nSUPPORTED BY TAPECOPY.  IF THEY ARE SPECIFIED, AN ERROR MESSAGE\nWILL BE WRITTEN AND NO PROCESSING WILL BE DONE.\n\n         OPTCD=C   IF THIS WERE USED, TAPECOPY WOULD NOT BE ABLE TO\n                   DETERMINE HOW LONG EACH BLOCK IT READ WAS.\n\n         OPTCD=Q OR LABEL=(,AL)  TAPECOPY DOES NOT SUPPORT ASCII LABELS.\n\n         LABEL=(,NSL)  TAPECOPY DOES NOT SUPPORT NON-STANDARD LABELS.\n                   AN EXACT COPY OF THE TAPE MAY BE MADE BY SPECIFYING\n                   LABEL=(,BLP) FOR THE INPUT AND OUTPUT TAPES.\n\n         MULTI-VOLUME DATASETS  TAPECOPY ONLY PROCESSES SINGLE TAPES.\n\n         REBLOCKING  TAPECOPY DOES NOT PROVIDE A MEANS TO REBLOCK DATA.\n\n     IF YOU NEED ANY OF THESE FEATURES, USE A DATASET-ORIENTED\nUTILITY LIKE IEBGENER.\n\n                   NEW FEATURES OF THIS VERSION\n                   --- -------- -- ---- -------\n\n     THE FOLLOWING FEATURES HAVE BEEN ADDED IN THE VERSION OF\nTAPECOPY DATED MARCH 1976.  THEY ARE DESCRIBED ABOVE.\n\n     DD CARD PARAMETERS:  DCB=EROPT=; DCB=LIMCT=; LABEL=(,LTM).\n\n     HEADER LABEL CREATION FOR DOS LABELLED TAPES.\n\n     ENHANCED MESSAGES.  ENHANCED ERROR RECOVERY.\n\n     INPUT STANDARD LABEL VALIDATION.  EOV LABEL DETECTION.\n\n     6250BPI DENSITY SUPPORT.  DENSITY ALWAYS PLACED IN OUTPUT LABEL.\n\n|    INPUT TAPE EOF1/EOV1 BLOCK COUNT NOW CHECKED.\n|\n\n                                                      ARON F. EISENPRESS\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCL": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93$_\\x00\\x93$_\\x19\\x03\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-02T00:00:00", "modifydate": "1993-09-02T19:03:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "SBGCSC"}, "text": "//TST2TSGM JOB (TS,2322),'TECH.SUPP-SAM.GOLOB',CLASS=M,NOTIFY=&SYSUID,\n//        MSGLEVEL=(1,1),MSGCLASS=T TYPRUN=HOLD\n//*\n//******************************************************************//\n//*      TAPECOPY EXECUTION                                        *//\n//*          CUNY TAPE COPY PROGRAM FROM ARON F. EISENPRESS        *//\n//******************************************************************//\n//*\n//COPY   EXEC PGM=TAPECOPY\n//STEPLIB DD  DISP=SHR,DSN=TST.TSO.CMDLIB\n//SYSPRINT DD SYSOUT=*\n//TAPE1 DD UNIT=TAPE,DISP=SHR,VOL=SER=VIP800,LABEL=(1,BLP,EXPDT=98000),\n//   DCB=EROPT=ACC\n//TAPE2 DD UNIT=TAPE,DISP=SHR,VOL=SER=VIPCPY,LABEL=(1,BLP,EXPDT=98000),\n//   DCB=TRTCH=NOCOMP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TAPECOPY": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x92\\x02/\\x00\\x93\\x01\\x1f\\x17C\\x0ep\\x0er\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1992-01-22T00:00:00", "modifydate": "1993-01-11T17:43:00", "lines": 3696, "newlines": 3698, "modlines": 0, "user": "SBGCSC"}, "text": "TAPECOPY TITLE '           TAPECOPY - PROGRAM TO COPY TAPE-TO-TAPE'\n************                                          *****************\n* TAPECOPY *                                          * VERSION 09/91 *\n************                                          *****************\n*\n*\n*\n*        THIS IS A GENERALIZED TAPE-TO-TAPE COPY PROGRAM.  IT USES\n*        QSAM, FORCING LABEL=BLP, AND PERFORMS ITS OWN LABEL\n*        PROCESSING INTERNALLY.\n*\n*\n*\n*\n*        FEATURES AND FACILITIES *NOT* SUPPORTED:\n*\n*           ASCII STANDARD LABELS\n*           NON-STANDARD LABELS\n*           MULTI-VOLUME DATASETS\n*           3480/3490 COMPACTION (FUTURE SUPPORT)\n*           BLOCK COUNT GREATER THAN 999999 (FUTURE SUPPORT)\n*\n*\n*\n*        ATTRIBUTES:\n*\n*           PROBLEM PROGRAM\n*           AUTHORIZED (AC=1) *\n*           NON-REENTRANT\n*           NONRESIDENT, IN LINKLIB\n*\n*           * PROGRAM AUTHORIZATION IS REQUIRED IN ORDER TO SET\n*              LABEL=BLP VIA OPEN TYPE=J.\n*\n*\n*\n*        SYSTEM LEVEL: THIS PROGRAM IS BELIEVED TO WORK WITH ALL\n*           OPERATING SYSTEM LEVELS FROM OS/MVT THROUGH MVS/ESA.\n*           THE PRIMARY OPERATING SYSTEM DEPENDENCY IS IN DETERMINING\n*           THE TAPE UNIT SERIAL NUMBER FOR 34XX TAPE DRIVES, AND\n*           THAT CODE IS DUAL-PATHED AS NEEDED.\n*\n*\n*\n*        SYSTEM DSECTS REQUIRED (FROM SYS1.MODGEN):\n*\n*           IEFTIOT1 - TIOT (TASK INPUT/OUTPUT TABLE)\n*           IEFUCBOB - UCB (UNIT CONTROL BLOCK)\n*\n*           NOTE: AT MVS/370 OR SOME LEVELS OF MVS/XA, SYS1.MODGEN\n*              DOESN'T EXIST AND THESE MACROS ARE IN SYS1.AMODGEN.\n*              IEZDEB (DEB) AND IEFJFCBN (JFCB) ARE ALSO NEEDED\n*              FROM SYS1.AMODGEN IF THEY AREN'T IN SYS1.MACLIB.\n*\n*\n*\n*        AUTHOR:\n*\n*           ARON EISENPRESS\n*           MANAGER, MVS SYSTEMS\n*           CITY UNIVERSITY OF NEW YORK--UNIVERSITY COMPUTER CENTER\n*           555 WEST 57TH STREET, 16TH FLOOR\n*           NEW YORK, NEW YORK  10019\n*\n*           PHONE: 212/903-3618\n*\n*           BITNET: AFECU@CUNYVM\n*           INTERNET: AFECU@CUNYVM.CUNY.EDU\n*\n*\n*\n*        COPYRIGHT STATEMENT:\n*\n*           TAPECOPY (C) COPYRIGHT 1976, 1979, 1981, 1982, 1985,\n*                1991, THE CITY UNIVERSITY OF NEW YORK.  PERMISSION\n*                IS GRANTED TO DISTRIBUTE THIS CODE ON THE CBT MVS\n*                UTILTIES TAPE.\n*\n*\n*        DISCLAIMER:\n*\n*          +-------------------------------------------------------+\n*          |                                                       |\n*          | THIS PROGRAM HAS BEEN USED SUCCESSFULLY, AND TO THE   |\n*          | BEST OF OUR KNOWLEDGE IT IS OPERATIONAL.  HOWEVER, NO |\n*          | WARRANTY IS MADE TO THE ACCURACY OF THIS PROGRAM OR   |\n*          | RELATED MATERIAL, AND NO RESPONSIBILITY IS ASSUMED    |\n*          | FOR ANY MODIFICATION DIRECTLY OR INDIRECTLY CAUSED    |\n*          | BY THE USE OF THIS PROGRAM.  WHILE WE WOULD LIKE TO   |\n*          | KNOW OF ANY ERRORS IN THIS PROGRAM, THERE IS NO       |\n*          | COMMITMENT TO FIX THEM.  THIS PROGRAM IS DISTRIBUTED  |\n*          | WITHOUT ANY WARRANTIES EITHER EXPRESS OR IMPLIED.     |\n*          |                                                       |\n*          +-------------------------------------------------------+\n*\n*\n*\n*        CHANGE HISTORY:\n*\n** CORRECTIONS: OCTOBER, 1976:\n**              TPC003I SUBMESSAGE REGARDING DCB INFORMATION FOR THE\n**               OUTPUT TAPE WAS NOT ISSUED IF THE OUTPUT TAPE WAS\n**               NOT SL BUT WAS BEING LABELLED.\n         SPACE\n**              DECEMBER, 1976:\n**              TPC006I MESSAGE HAD AN EXTRANEOUS SEQUENCE NUMBER\n**               WHEN INPUT STARTED AT OTHER THAN THE FIRST FILE\n**               AND OUTPUT WAS NOT A TAPE.\n         SPACE\n**              SEPTEMBER, 1979:\n**              TPC033A MESSAGE HAD INCORRECT BLOCK COUNT IF ANY\n**               PRIOR BLOCKS WERE SKIPPED ON INPUT TAPE.\n**              CODE AT 'COPYTERM' IS NOW USED AFTER MESSAGE\n**               TPC033A IS ISSUED TO AVOID S214 WHEN INPUT FILE\n**               HAS NO EOF.\n**              CODE WAS ADDED TO CHECK THE BLOCK COUNT IN THE\n**               EOF1/EOV1 LABEL AND ISSUE MESSAGE TPC036A IF\n**               IT IS NOT AS EXPECTED.\n**              MISPLACED LABELS COULD HAVE SET INCORRECT RETURN\n**               CODES.\n         SPACE\n**              APRIL, 1981:\n**              TPC032A MESSAGE WAS ISSUED WHEN AN EOV LABEL WAS\n**               FOUND WHEN AN EOF LABEL WAS EXPECTED.  USE OF A\n**               BRANCH TABLE WAS INCORRECT.\n**              MESSAGES TPC018A AND TPC019A HAVE BEEN ADDED\n**               FOR SITUATIONS WHEN SCRATCH TAPES ARE REQUESTED\n**               FOR INPUT OR OUTPUT, RESPECTIVELY.  FOR INPUT,\n**               THIS AVOIDS A 413-18 ABEND; FOR OUTPUT, EITHER\n**               A 413-18 OR AN 837-08 ABEND WOULD OCCUR DEPENDING\n**               ON THE LABEL TYPE SPECIFIED.  SCRATCH TAPES CAN\n**               PROBABLY BE SUPPORTED FOR OUTPUT, BUT SOME METHOD\n**               FOR LABEL VERIFICATION WITHOUT A 413-18 ABEND WOULD\n**               HAVE TO BE FOUND.\n**              CODE HAS BEEN CORRECTED TO NOT INCREASE BLKSIZE TO\n**               LARGER THAN 32,760, TO AVOID AN 013-68 ABEND.\n**               NOTE THAT THERE'S NO WAY OF DETECTING LOSS OF DATA\n**               FROM BLOCKS LARGER THAN 32,760 BYTES, BUT OS WILL\n**               NOT CREATE SUCH BLOCKS (EXCEPT VIA EXCP).\n         SPACE\n**              APRIL, 1982:\n**              THE DATE AND TIME ARE PRINTED IN THE HEADING MESSAGE.\n**              MESSAGE TPC025A IS ISSUED AND THE TAPECOPY TERMINATED\n**               IF THE EXPIRATION DATE ON THE OUTPUT TAPE HAS NOT\n**               PASSED.\n**              MESSAGE TPC037A IS ISSUED AS A STRONG WARNING THAT\n**               DATA COULD BE LOST IF THE LARGEST BLOCK SIZE COPIED\n**               WAS 32,760.\n**              TPC003I MESSAGE NOW INCLUDES THE INPUT VOLUME SERIAL\n**               EVEN WHEN THE \"PID\" OPTION IS USED.\n         SPACE\n**              DECEMBER, 1985:\n**              ADD CODE TO SUPPORT THE 3480 TAPE DRIVE -- TO COPY\n**               THE TU SERIAL NUMBER TO THE HDR2 OUTPUT LABEL.\n**               NOTE THAT OPEN FIXES FOR OZ88788 AND OZ92838 ARE\n**               REQUIRED FOR THIS TO WORK IN 3480 COMPATIBILITY MODE.\n**              UPDATE BASE REGISTERS FOR MORE ADDRESSABILITY.\n         SPACE\n**              JANUARY, 1993:\n**              SUPPORT MVS XA/ESA & DFP XA/ESA.  THE LOCATION OF THE\n**               3480 TU SERIAL (UCBCXTUS) HAS CHANGED.\n**              SUPPORT DATES BEYOND 1999, BOTH IN THE TAPE LABELS\n**               AND IN THE EXECUTION ENVIRONMENT (IN THE DAY-OF-WEEK\n**               AND MONTH-OF-YEAR ALGORITHMS, WHICH HAD PREVIOUSLY\n**               ASSUMED THE YEAR TO BE IN THE 1900'S.  SUPPORT THE\n**               DEFINED \"NEVER-EXPIRE\" DATES (99/365 ET. AL.).\n**              UPDATE BASE REGISTERS FOR MORE ADDRESSABILITY.\n**              ADD DEFINITIONS FOR 3480/3490 COMPACTION FIELDS,\n**               AND FOR GREATER-THAN-999999 BLOCKCOUNT SUPPORT.\n**               HOWEVER, THE SUPPORTING CODE HAS NOT BEEN WRITTEN.\n         TITLE '           TAPECOPY - \"SCAN\" MACRO TO SCAN PARAMETERS'\n         MACRO\n&LABEL   SCAN  &FIELD=,&END=,&NEXT=,&NAME=,&MAXLEN=8,&INIT=,           *\n               &DEFAULT=DEFAULT\n.*    THIS MACRO SCANS A PARAMETER LIST UP TO A COMMA.\n.*    REGISTERS 1 - 9 ARE USED.\n.*    IF A NON-NULL VALUE FOR &INIT IS USED, INITIALIZATION OF\n.*             REGISTERS IS DONE.\n.*\n.*    VARIABLES:\n.*       &FIELD:   RECEIVING FIELD FOR PARAMETER.\n.*       &END:     EXIT FOR END OF LIST.\n.*       &NEXT:    EXIT AFTER FINDING COMMA.\n.*       &NAME:    NAME FOR GENERATED LABELS (<= 6 CHAR.)\n.*             NOTE:  EXIT FOR IMMEDIATE COMMA IS NO&NAME.\n.*       &MAXLEN:  MAXIMUM LENGTH FOR & FIELD (DEFAULT = 8).\n.*       &INIT:    INITIALIZATION (SEE ABOVE).\n.*       &DEFAULT: EXIT (WHEN INIT USED) FOR NO LIST.\n.*\n         LCLA  &LENM1\n         LCLC  &LBL\n&LENM1   SETA  &MAXLEN-1\n         AIF   ('&INIT' EQ '').NOINIT\n         SPACE\n*\n*      REGISTER USAGE:\n*       R1: LIST ADDRESS\n*        2: CONSTANT 1\n*        3: LIST LEN. - 1\n*        4: INDEX FOR LIST.\n*        5: SINGLE CHARACTER BEING TESTED.\n*        6: COMMA\n*        7: NEW LIST LENGTH\n*        8: CONSTANT 1\n*        9: MAX. LEN. OF NEW LIST - 1\n*\n         SPACE\n* INITIALIZE REGISTERS --\n         SPACE\n&LABEL   L     R1,0(,R1)           R1 = PARAMETER ADDRESS\n         LA    R2,1                R2 = 1\n         SR    R3,R3               R3 = 0\n         AH    R3,0(,R1)           R3 = LIST LENGTH\n         BNP   &DEFAULT            IF NO PARAMETERS\n         SR    R3,R2               R3 = LIST LENGTH - 1\n         LA    R1,2(,R1)           R1 = LIST ADDRESS\n         SR    R4,R4               R4 = 0\n         SR    R5,R5               R5 = 0\n         LA    R6,C','             R6 = COMMA\n         AGO   .INIT\n.NOINIT  ANOP\n&LBL     SETC  '&LABEL'\n.INIT    SPACE\n* LOOP TO SCAN PARAMETER LIST\n         SPACE\n&LBL     IC    R5,0(R4,R1)         FIRST CHAR. IN R5\n         CR    R5,R6               A COMMA?\n         BE    NO&NAME             YES; EXIT\n         SR    R7,R7               NO; INITIALIZE: R7 = 0\n         LR    R8,R2               R8 = 1\n         LA    R9,&LENM1           R9 = MAX. LENGTH - 1\n         MVC   &FIELD,=CL&MAXLEN' '  BLANK OUT FIELD\n         B     #&NAME              ENTER LOOP\n@&NAME   IC    R5,0(R4,R1)         NEXT CHAR. IN R5\n         CR    R5,R6               A COMMA?\n         BE    $&NAME              YES; EXIT\n#&NAME   STC   R5,&FIELD.(R7)      NO; STORE\n         BXH   R7,R8,$&NAME        INCR. & TEST FIELD LENGTH\n         BXLE  R4,R2,@&NAME        INCR. & TEST INDEX REG.\n$&NAME   BXH   R4,R2,&END          EXIT IF END OF LIST\n         BE    &NEXT               SKIP IF COMMA LAST CHAR.\n         IC    R5,0(R4,R1)         LOOK FOR COMMA - NEXT CHAR. IN R5\n         BXH   R4,R2,&END          INCR. & TEST INDEX\n         CR    R5,R6               A COMMA?\n         BNE   *-10                LOOP BACK IF NOT\n         B     &NEXT               EXIT IF COMMA\n         SPACE\n*    END OF SCAN\n         SPACE\n         MEND\n         TITLE '           TAPECOPY - PROGRAM TO COPY TAPE-TO-TAPE'\n*******************************************************************\n*                                                                 *\n*              INITIALIZE PROCESSING                              *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nTAPECOPY CSECT\n         SPACE\n* DEFINE REGISTERS SYMBOLICALLY\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\n*---------------------------------------------------------------------*\nCOPYRITE DC    C'TAPECOPY (C) COPYRIGHT 1976, 1979, 1981, 1982, ' SEP91\n         DC    C'1985, 1991 -- CITY UNIVERSITY OF NEW YORK'       SEP91\n         DC    C'VERSION 09/91, ASSEMBLED &SYSDATE &SYSTIME'      SEP91\n*---------------------------------------------------------------------*\n         SPACE\n         PRINT DATA\nBEGINING SAVE  (14,12)             SAVE REGISTERS                 DEC85\n         BALR  R10,0               GET A BASE REGISTER            DEC85\nREGBASE  DS    0H                  AND A LABEL                    DEC85\n         USING REGBASE,R10         TELL THE ASSEMBLER             DEC85\n         LA    R11,4095(,R10)      AND A SECOND BASE              DEC85\n         USING REGBASE+4095,R11    TELL IT AGAIN                  DEC85\n         LA    R12,4095(,R11)      WE NEED A THIRD BASE TOO       DEC85\n         USING REGBASE+4095+4095,R12  (NO HOME PLATE THO)         DEC85\n         LA    R2,SAVE             CHAIN\n         ST    R13,SAVE+4          THE\n         ST    R2,8(,R13)          SAVE\n         LR    R13,R2              AREAS\n*===============================================================  SEP91\n* N.B. CODE FOLLOWING HERE UNTIL LABEL \"AROUND\" *CANNOT* CALL  *  SEP91\n*      ANY SUBROUTINES, BECAUSE THE BASE REGISTERS ARE GOING   *  SEP91\n*      TO BE RELOADED THEN, TO EXTEND ADDRESSABILITY.          *  SEP91\n*===============================================================  SEP91\n         EJECT\n*******************************************************************\n*                                                                 *\n*              PROCESS PARM FIELD:                                *\n*                                                                 *\n*        PARM='LABEL1,LABEL2,OWNER',....                          *\n*                                                                 *\n*        LABEL1 IS TO REPLACE THE VOL=SER=______ ON THE DD CARD   *\n*              FOR TAPE1.  IT IS VALID ONLY FOR LABEL=(,BLP).     *\n*        LABEL2 WILL BE THE NEW LABEL ON TAPE2.  UNLESS           *\n*              LABEL=(,BLP), THE CURRENT LABEL WILL BE VERIFIED.  *\n*        OWNER WILL REPLACE THE CURRENT OWNER INFORMATION IN THE  *\n*              VOLUME LABEL ON TAPE2 IF LABEL2 IS SPECIFIED.      *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* R14 IS USED AS A TEMPORARY BASE REGISTER HERE TO PROVIDE        SEP91\n*  ADDITIONAL ADDRESSABILITY, IF NEEDED, TO \"INVOL\" AND           SEP91\n*  CAVEAT PROGRAMMATUR!                                           SEP91\n         SPACE ,                                                  SEP91\n         L     R14,=A(T)           SET TEMPORARY BASE             SEP91\n         USING T,R14               TELL THE ASSEMBLER             SEP91\n         SPACE 2                                                  SEP91\n* SCAN FOR THE REAL INPUT VOLUME PARAMETER\n         SPACE\n         SCAN FIELD=INVOL,END=DONESCAN,NEXT=SCAN2,NAME=SCAN1,MAXLEN=6, *\n               INIT=YES,DEFAULT=DONESCAN\nNOSCAN1  BXH   R4,R2,DONESCAN      SKIP OVER THE COMMA\n         SPACE\n* SCAN FOR THE NEW OUTPUT VOLUME PARAMETER\n         SPACE\nSCAN2    SCAN  FIELD=OUTVOL,END=DONESCAN,NEXT=SCAN3,NAME=SCAN2,MAXLEN=6\n         SPACE\nMVCOWNER MVC   OWNER(*-*),0(R1)    ** EX'ED **\n         SPACE ,                                                  SEP91\n         LTORG ,                   NEEDN'T ADDRESS MAIN LTORG NOW SEP91\n         SPACE\n* COMPUTE THE PARM LENGTH LEFT.  IF THERE IS ANYTHING LEFT,\n*  IT IS THE OWNER INFORMATION.\n         SPACE\nSCAN3    SR    R3,R4               COMPUTE LENGTH LEFT - 1\n         BM    DONESCAN            SKIP IF NO MORE PARMS\n         OI    FLAG,FLOWNER        SHOW OWNER WAS SPECIFIED\n         LA    R5,L'OWNER-1        10 CHARACTERS IS THE MAX LENGTH\n         CR    R3,R5               COMPARE\n         BNH   EXMVCOWN            GO MOVE IT IF LENGTH OK\n         LR    R3,R5               ELSE SET LENGTH TO MAX\nEXMVCOWN AR    R1,R4               COMPUTE ADDRESS TO MOVE FROM\n         EX    R3,MVCOWNER         DO THE MOVE\nNOSCAN2  DS    0H                  NO 2ND PARM\nDONESCAN DS    0H                  END OF PARMS\n         DROP  R14                 END OF TEMPORARY BASE          SEP91\n         EJECT\n*******************************************************************\n*                                                                 *\n*        OPEN SYSPRINT.  ISSUE A WTP AND TERMINATE                *\n*         IF IT DOESN'T OPEN.                                     *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n         OPEN  (SYSPRINT,OUTPUT)   SESAME\n* THE FOLLOWING TEMPORARY CONVOLUTION IS FOR ADDRESSABILITY TO    SEP91\n*  THE SYSPRINT DCBOFLGS.  ADDRESSABILITY IS REGAINED IN A BIT.   SEP91\n         L     R15,=A(SYSPRINT)    -> SYSPRINT DCB                SEP91\n         TM    DCBOFLGS-IHADCB(R15),DCBOFOPN  DID IT OPEN?        SEP91\n         BO    SYSOPEND            YES, GOODY\n         WTO   'TPC009A  SYSPRINT DD CARD IS MISSING.  SYSPRINT COULD N*\n               OT BE OPENED.  PROCESSING IS TERMINATED.',ROUTCDE=11\n         LA    R15,20              SET RETURN CODE TO 20          SEP91\n         L     R13,SAVE+4          RESTORE R13                    SEP91\n         RETURN (14,12),T,RC=(15)  AND GO BYE-BYE                 SEP91\n* (BRANCH TO \"EXIT\" REPLACED BY ABOVE DUE TO BASE REGISTERS)      SEP91\n         EJECT ,                                                  APR82\n******************************************************************APR82\n*                                                                 APR82\n*        COMPLETE HEADING MESSAGE WITH DATE AND DAY OF WEEK.      APR82\n*                                                                 APR82\n******************************************************************APR82\n         SPACE 2                                                  APR82\n* GET THE DATE AND TIME                                           APR82\n         SPACE ,                                                  APR82\nSYSOPEND TIME  DEC                 DO IT DO IT                    APR82\n* R1 = 0CYYDDDF  (C=0 FOR 1900'S, 1 FOR 2000'S, ETC.)             SEP91\n* R0 = HHMMSSTT                                                   APR82\n         SPACE ,                                                  APR82\n* PUT THE TIME IN THE MESSAGE                                     APR82\n         SPACE ,                                                  APR82\n         ST    R0,TEMP2            SAVE IT SOMEWHERE              APR82\n         UNPK  TEMP(5),TEMP2(3)    EXTRA DIGIT IS REQUIRED        APR82\n         MVC   M1HH,TEMP           PUT HH IN MESSAGE              APR82\n         MVC   M1MM,TEMP+2         PUT MM IN MESSAGE              APR82\n         SPACE ,                                                  APR82\n* CONVERT THE DATE TO BINARY (FOR USE HERE) AND CHARACTER (FOR    APR82\n*  THE EXPIRATION-DATE-CHECK LATER)                               APR82\n         SPACE ,                                                  APR82\n         ST    R1,TEMP+4           SAVE THE DATE                  APR82\n         UNPK  DATE+1(L'DATE-1),TEMP+5(3)  CHARACTERIZE YYDDD     SEP91\n         SR    R9,R9               CLEAR R9                       SEP91\n         IC    R9,TEMP+4           R9 = CENTURY (1 DIGIT)         SEP91\n         IC    R9,XLATECYY(R9)     R9 = HDR1 CENTURY CODE         SEP91\n         STC   R9,DATE             SAVE THE CENTURY CODE          SEP91\n         XC    TEMP(6),TEMP        LEAVE JUST DDDF                APR82\n         CVB   R6,TEMP             R6 = DDD (IN BINARY)           APR82\n         SRL   R1,3*4              R1 = 0000CYYD                  SEP91\n         ST    R1,TEMP+4           SAVE THE DATE AGAIN            APR82\n         OI    TEMP+7,X'0F'        SET SIGN NIBBLE                APR82\n         CVB   R5,TEMP             R5 = CYY (IN BINARY)           SEP91\n         LA    R5,1900(,R5)        ADD BASE YEAR OF 1900          SEP91\n         ST    R5,TEMP2            SAVE YYYY (BINARY) IN TEMP2    SEP91\n         SPACE 2                                                  APR82\n* THIS CODE WILL COMPUTE THE CURRENT MONTH, DAY OF MONTH, AND     APR82\n*  DAY OF WEEK.                                                   APR82\n         SPACE ,                                                  APR82\n* ALGORITHMS FOR DATE CONVERSION ARE FROM COMMUNICATIONS OF THE   APR82\n*  ACM, 10/70, PAGE 621, AND 10/72, PAGE 918.                     APR82\n         SPACE ,                                                  APR82\n         SR    R9,R9               SET UP FOR NON-LEAP YEAR       APR82\n         TM    TEMP2+3,X'03'       IS THIS A LEAP YEAR?           APR82\n         BNZ   NOLEAP              NO, SKIP                       APR82\n* CHECK FOR YEARS MULTIPLE OF 100 AND 400 TO ASSURE LEAPNESS.     SEP91\n         LR    R15,R5              R15 = YEAR                     SEP91\n         SR    R14,R14             CLEAR R14 FOR DIVIDE           SEP91\n         D     R14,=F'100'         SEE IF YEAR IS MULTIPLE OF 100 SEP91\n         LTR   R14,R14             REMAINDER ZERO?                SEP91\n         BNZ   LEAP                NO, YEAR MULTIPLE OF 4 BUT     SEP91\n*                                   NOT OF 100 *IS* A LEAP YEAR   SEP91\n* YEAR MULTIPLE OF 100 IS *NOT* A LEAP YEAR *UNLESS* IT IS ALSO   SEP91\n*  A MULTIPLE OF 400.                                             SEP91\n         LR    R15,R5              COPY YEAR TO R15 AGAIN         SEP91\n         SR    R14,R14             CLEAR R14 AGAIN FOR DIVIDE     SEP91\n         D     R14,=F'400'         NOW SEE IF YEAR IS MULT OF 400 SEP91\n         LTR   R14,R14             REMAINDER ZERO?                SEP91\n         BNZ   NOLEAP              NO, YEAR NOT MULTIPLE OF 400   SEP91\n*                                   IS *NOT* A LEAP YEAR          SEP91\nLEAP     LA    R9,1                YES, SET UP FOR LEAP YEAR      SEP91\nNOLEAP   LA    R1,59(,R9)          CONVERT FROM YYYY.DDD          SEP91\n         CR    R6,R1               TO MM/DD/YYYY                  SEP91\n         BNH   NOLEAP2             BIF NOT PAST FEBRUARY          APR82\n         LA    R6,2(,R6)           ELSE MAKE POSSIBLE             APR82\n         SR    R6,R9               .. LEAP YEAR ADJUSTMENT        APR82\nNOLEAP2  LA    R6,91(,R6)                                         APR82\n         LR    R5,R6                                              APR82\n         M     R4,=F'100'                                         APR82\n         D     R4,=F'3055'                                        APR82\n         LR    R9,R5                                              APR82\n         M     R4,=F'3055'                                        APR82\n         D     R4,=F'100'                                         APR82\n         SR    R6,R5                                              APR82\n         S     R9,=F'2'                                           APR82\n         LR    R7,R9               SAVE MONTH                     APR82\n* NOW R7 = MONTH AND R6 = DAY OF MONTH                            APR82\n         SPACE ,                                                  APR82\n* CALCULATE THE DAY OF THE WEEK                                   APR82\n         LA    R9,10(,R9)                                         APR82\n         LR    R5,R9                                              APR82\n         SR    R4,R4                                              APR82\n         D     R4,=F'13'                                          APR82\n         M     R4,=F'12'                                          APR82\n         SR    R9,R5                                              APR82\n         M     R8,=F'13'                                          APR82\n         S     R9,=F'1'                                           APR82\n         D     R8,=F'5'                                           APR82\n         AR    R9,R6               ADD DAY OF MONTH               APR82\n         LR    R5,R7               GET MONTH AGAIN                APR82\n         L     R4,=F'-1'           R4 = -1 FOR DIVIDE             APR82\n         S     R5,=F'14'                                          APR82\n         D     R4,=F'12'                                          APR82\n         A     R5,TEMP2            ADD YEAR                       APR82\n         LR    R8,R5               SAVE INTERMEDIATE RESULT IN R8 SEP91\n         SR    R4,R4               CLEAR FOR DIVIDE               SEP91\n         D     R4,=F'100'          GET REMAINDER OVER 100         SEP91\n         LR    R5,R4               COPY THE REMAINDER, FOR MULT.  SEP91\n         M     R4,=F'5'                                           APR82\n         D     R4,=F'4'                                           APR82\n         AR    R9,R5                                              APR82\n         SR    R4,R4                                              SEP91\n         LR    R5,R8                                              SEP91\n         D     R4,=F'100'                                         SEP91\n         AR    R5,R5               (DOUBLE THIS)                  SEP91\n         SR    R9,R5                                              SEP91\n         SR    R4,R4                                              SEP91\n         LR    R5,R8                                              SEP91\n         D     R4,=F'400'                                         SEP91\n         SR    R8,R8                                              SEP91\n         AR    R9,R5                                              SEP91\n         BNM   DIVDAYS                                            SEP91\n         L     R8,=F'-1'           IF R9 IS NEGATIVE, SET R8 TOO  SEP91\nDIVDAYS  D     R8,=F'7'            REMAINDER IN R8 = DAY OF WEEK  SEP91\n         LTR   R8,R8               CHECK AGAIN FOR NEGATIVITY     SEP91\n         BNM   DIVDAYS2            BRANCH IF PLUS                 SEP91\n         A     R8,=F'7'            ELSE ADD 7 (REMAINDER CAN'T    SEP91\nDIVDAYS2 DS    0H                    BE MORE NEGATIVE THAN THAT)  SEP91\n* NOW R8 = DAY OF WEEK                                            APR82\n         SPACE 2                                                  APR82\n* FILL IN THE REST OF THE HEADING LINE                            APR82\n         SPACE ,                                                  APR82\n         MVI   M1DATE,C' '         BLANK ..                       APR82\n         MVC   M1DATE+1(M1E-M1DATE-1),M1DATE  THE MESSAGE         APR82\n         SR    R5,R5               CLEAR FOR IC                   APR82\n         SLL   R8,2                DAY OF WEEK TIMES 4            APR82\n         IC    R5,DAYS(R8)         LENGTH OF NAME                 APR82\n         L     R9,DAYS(R8)         OFFSET TO IT                   APR82\n         LA    R9,DAY0(R9)         RELOCATE                       APR82\n         EX    R5,MOVEDAY          MOVE IT IN                     APR82\n         LA    R8,M1DATE+1(R5)     POINT INTO MESSAGE..           APR82\n         MVI   0(R8),C','          PUT IN A COMMA..               APR82\n         SLL   R7,2                MONTH TIMES 4                  APR82\n         IC    R5,MONTHS-4(R7)     LENGTH OF MONTH NAME           APR82\n         L     R9,MONTHS-4(R7)     OFFSET TO MONTH NAME           APR82\n         LA    R9,MONTH1(R9)       RELOCATE                       APR82\n         CVD   R6,TEMP             DECIMALIZE DAY OF THE MONTH..  APR82\n         LA    R1,2(R8,R5)         POINT PAST THE MONTH PLACE     APR82\n         MVC   0(L'EDITDATE+7,R1),EDITDATE  PUT IN THE MASK       APR82\n         ED    0(L'EDITDATE,R1),TEMP+6  EDIT IT IN                APR82\n         EX    R5,MOVEMNTH         MOVE THE MONTH IN              APR82\n         L     R9,TEMP2            GET THE YEAR                   SEP91\n         CVD   R9,TEMP             CONVERT TO DECIMALZ            SEP91\n         UNPK  6(4,R1),TEMP        CONVERT TO CHARACTERS          SEP91\n         OI    9(R1),C'0'          AND FIX THE SIGN NIBBLE        SEP91\n         B     AROUND              FOR CONVENIENCE                APR82\n         SPACE 2                                                  APR82\n* LOCAL INCONSTANTS AND EXECUTEDS                                 APR82\n         SPACE ,                                                  APR82\nMOVEDAY  MVC   M1DATE(*-*),0(R9)   ** EX'ED **                    APR82\nMOVEMNTH MVC   2(*-*,R8),0(R9)     ** EX'ED **                    APR82\n         SPACE ,                                                  APR82\nEDITDATE DC    X'40202120',C', YYYY.'  BDSD MASK + CONSTANTS      SEP91\n         SPACE 2                                                  SEP91\n*===============================================================  SEP91\n* N.B. CODE PRECEDING HERE *CANNOT* CALL ANY SUBROUTINES,      *  SEP91\n*      BECAUSE THE BASE REGISTERS ARE BEING RELOADED NOW,      *  SEP91\n*      TO EXTEND ADDRESSABILITY.                               *  SEP91\n*===============================================================  SEP91\nAROUND   BALR  R10,0               GET A BASE REGISTER            SEP91\nREGBASE2 DS    0H                  AND A LABEL                    SEP91\n         USING REGBASE2,R10        JOKES ARE REPEATED, TELL ASM   SEP91\n         LA    R11,4095(,R10)      AND A SECOND BASE              SEP91\n         USING REGBASE2+4095,R11   TELL IT AGAIN                  SEP91\n         LA    R12,4095(,R11)      WE NEED A THIRD BASE TOO       SEP91\n         USING REGBASE2+4095+4095,R12  (NO HOME PLATE THO)        SEP91\n         SPACE 2                                                  APR82\n* PUT OUT THE HEADING LINE                                        APR82\n         SPACE ,                                                  APR82\n         MVI   MSGHEADR,C'1'       SET CC TO PAGE EJECT           APR82\n         LA    R3,M1               INITIAL MESSAGE\n         BAL   R2,MESSAGE          PUT IT OUT\n         NOP   0                   IGNORE THIS\n         MVI   MSGHEADR,C'-'       SKIP 3 BEFORE NEXT MESSAGE\n         EJECT\n*******************************************************************\n*                                                                 *\n*              SPECIFICATION PROCESSING                           *\n*                                                                 *\n*        DETERMINE PROCESSING REQUIRED, ACCORDING TO              *\n*         SPECIFICATIONS IN THE PARM FIELD AND THE JFCB.          *\n*        ISSUE ERROR MESSAGES FOR INCOMPATIBLE OR                 *\n*         UNSUPPORTED REQUESTS.                                   *\n*                                                                 *\n*        REGISTER USAGE:                                          *\n*              R1: WORK REGISTER                                  *\n*              R2: SUBROUTINE LINKAGE                             *\n*              R3: MESSAGE POINTER FOR ERROR MESSAGES             *\n*              R4: POINTER TO TAPE CONTROL BLOCKS                 *\n*              R8: CONSTANT ONE FROM HERE ON, FOR CONVENIENCE     *\n*              R9: LOOP CONTROL                                   *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* IN CASE THERE ARE NO APPROPRIATE DD CARDS, PRESET THE\n*  RETURN CODE TO 20.\n         SPACE\n         MVI   RC,20               PRESET RETURN CODE TO 20\n         SPACE\n* PUT A ONE IN R8 AND KEEP IT THERE FOR THE REST OF THE PROGRAM\n         SPACE\n         LA    R8,1                R8 = ONE\n         SPACE\n* READ THE JFCB'S FOR TAPE1/TAPE2.  IF THE DD CARDS ARE NOT THERE,\n*  ATTEMPT TO READ THE JFCB'S FOR SYSUT1/SYSUT2.  IF THIS SUCCEEDS,\n*  USE SYSUT1/SYSUT2 AS THE DDNAMES;  OTHERWISE TERMINATE.\n         SPACE\n         RDJFCB (TAPE1,,TAPE2)\n         LTR   R15,R15             SUCCESSFUL?\n         BZ    DDTHERE             YES, ON TO OTHER THINGS\n         SPACE\n* TAPE1/TAPE2 DD CARDS NOT THERE. TRY SYSUT1/SYSUT2.\n         SPACE\n         MVC   DCBDDNAM-IHADCB+TAPE1,=CL8'SYSUT1'\n         MVC   DCBDDNAM-IHADCB+TAPE2,=CL8'SYSUT2'\n         RDJFCB (TAPE1,,TAPE2)\n         LA    R3,M11              PRESET ERROR MESSAGE\n         LTR   R15,R15             OK?\n         LA    R2,TERM-4           SET RETURN POINT FOR MSG\n         BNZ   ERROR               NO, BYE BYE\n         OI    FLAG,FLALTNAM       YES, SHOW WE ARE USING SYSUT1/2\n         SPACE\n* SAVE THE LIMIT (TAPE1 DCB=LIMCT) IF SPECIFIED\n         SPACE\nDDTHERE  MVC   LIMIT+1(3),JFCLIMCT-JFCB+JFCB1  COPY IT\n         SPACE\n* ANY ERROR DETECTED AFTER THIS POINT WILL GIVE A RETURN CODE OF 4.\n         SPACE\n         MVI   RC,4                PRESET RETURN CODE\n         SPACE\n* SET UP FOR TAPE1 PROCESSING\n         SPACE\n         LA    R4,T1               -> TAPE1 CONTROL BLOCKS\n         BALR  R9,0                GO THROUGH CODE AGAIN FROM HERE\n         SPACE\n* THE FOLLOWING CODE IS EXECUTED TWICE\n         SPACE\n         LA    R3,M12              PRESET MULTI-VOLUMES MESSAGE\n         CLI   JFCBVOLS+6-JFCB+JFCB1-T(R4),C' '  2ND VOL SER GIVEN?\n         BALR  R2,0                RETURN FROM ERROR\n         BNE   ERROR               YES, ISSUE ERROR MESSAGE\n         SPACE\n         LA    R3,M13              PRESET LABEL=AL/NSL MESSAGE\n         TM    JFCBLTYP-JFCB+JFCB1-T(R4),JFCBAL+JFCNSL\n         BALR  R2,0                RETURN POINT\n         BNZ   ERROR               ISSUE ERROR MESSAGE\n         SPACE\n         LA    R3,M14              PRESET OPTCD=C/Q MESSAGE\n         TM    JFCOPTCD-JFCB+JFCB1-T(R4),JFCPCIBT+JFCOPTQ\n         BALR  R2,0\n         BNZ   ERROR\n         SPACE ,                                                  APR81\n* SCRATCH TAPES ARE NOT SUPPORTED.  SEE COMMENTS RE APR81 MODS.   APR81\n         SPACE ,                                                  APR81\n         CLI   JFCBVOLS-JFCB+JFCB1-T(R4),X'FF'  NON-SPECIFIC?     APR81\n         BNE   NOTSCRTC            NOPE, NOT A SCRATCH TAPE       APR81\n         LA    R3,M18              PRESET INPUT/SCRATCH MESSAGE   APR81\n         LA    R2,NOTSCRTC-4       PRESET RETURN POINT            APR81\n         TM    INFLAG-T(R4),FLIN   IS THIS THE INPUT TAPE?        APR81\n         BO    ERROR               YES, GO ISSUE MESSAGE          APR81\n         LA    R3,M19              ELSE GET OUTPUT/SCRATCH MSG    APR81\n         B     ERROR               AND ISSUE IT                   APR81\nNOTSCRTC DS    0H                                                 APR81\n         SPACE\n         MVC   INLABEL-T(,R4),JFCBLTYP-JFCB+JFCB1-T(R4)  COPY LABEL\n         SPACE\n         LH    R1,JFCBFLSQ-JFCB+JFCB1-T(R4)  GET FILE SEQUENCE\n         LTR   R1,R1               IF NOT SPECIFIED, IS ALREADY PRESET\n         BZ    DDVOLPRM            (TO ONE)\n         STH   R1,INFILE-T(R4)     ELSE SAVE IN TAPE CONTROL AREA\n         SPACE\nDDVOLPRM CLI   INVOL-T(R4),0       WAS PARM INFO GIVEN?\n         BE    NOVOLPRM            NO, SKIP SPECIAL CODE\n         TM    INFLAG-T(R4),FLIN   IS THIS THE INPUT TAPE?\n         BZ    OUTPROC             NO, GO TO OUTPUT (RELABEL) CODE\n         SPACE\n* PROCESS PARM FOR INPUT VOL SER\n         SPACE\n         CLC   INVOL,=CL6'PID'     PID OPTION REQUESTED?\n         BNE   NORMIN              NO, PARM IS FOR REAL VOL SER\n         LA    R3,M17              PRESET PID/\u00acNL MESSAGE\n         TM    INLABEL-T(R4),JFCNL  IS IT LABEL=NL?\n         BALR  R2,0\n         BZ    ERROR               NO, ISSUE MESSAGE\n         OI    INFLAG-T(R4),FLPID  SET PID FLAG\n         B     NOVOLPRM            CONTINUE\n         SPACE\nNORMIN   LA    R3,M15              SET REAL LABEL/\u00acBLP MESSAGE\n         TM    INLABEL-T(R4),JFCBLP  BLP SPECIFIED?\n         BALR  R2,0\n         BZ    ERROR\n         OI    INFLAG-T(R4),FLINTEXT  SET FLAG, INTERNAL \u00ac= EXTERNAL\n         MVI   INLABEL-T(R4),JFCSL  WE REALLY MEAN SL\n         B     DONEINOT            DONE\n         SPACE\n* PROCESS PARM FOR OUTPUT VOL SER\n         SPACE\nOUTPROC  LA    R3,M16              PRESET RELABEL/FILESEQ>1 MESSAGE\n         CH    R8,INFILE-T(R4)     IS FILE SEQUENCE ONE?\n         BALR  R2,0\n         BNE   ERROR               NO, ISSUE MESSAGE\n         SPACE\n         OI    INFLAG-T(R4),FLRELBL  RELABEL REQUEST\n         B     DONEINOT            SKIP VOLSER MOVE\n         SPACE\nNOVOLPRM MVC   INVOL-T(,R4),JFCBVOLS-JFCB+JFCB1-T(R4)  1ST VOL\n         SPACE\n* TEST IF WE REALLY HAVE A TAPE.  TEST FOR 7-TRACK TAPE.\n         SPACE\nDONEINOT TM    JFCBTSDM-JFCB+JFCB1-T(R4),JFCSDS  SYSIN/SYSOUT?\n         BO    DDNOTTAP            YES, GO SET FLAG\n         SPACE\n         DEVTYPE DCBDDNAM-IHADCB+TAPE1-T(R4),TEMP  GET DEVTYPE\n         CLI   UCBTBYT3-UCBTYP+TEMP,0  IS IT DD DUMMY?\n         BE    DDNOTTAP            YES, SET NOT-A-TAPE FLAG\n         TM    UCBTBYT3-UCBTYP+TEMP,UCB3TAPE  IS IT A TAPE?\n         BZ    DDNOTTAP            NO, SET FLAG\n         TM    UCBTBYT2-UCBTYP+TEMP,UCB2OPT0  IS IT 7-TRACK?\n         BZ    DDDONE              NO, IT'S OK\n         OI    INFLAG-T(R4),FLSEVEN  SHOW IT'S 7-TRACK\n         MVC   INTRTCH-T(,R4),JFCTRTCH-JFCB+JFCB1-T(R4)  COPY TRTCH\n         MVC   INTRTCH2-T(,R4),JFCTRTCH-JFCB+JFCB1-T(R4)  HERE TOO\n         MVI   INTRTCHL-T(R4),JFCTREV  SET LABELS TRTCH (ALWAYS ET)\n         MVI   JFCTRTCH-JFCB+JFCB1-T(R4),0  CLEAR IT\n         B     DDDONE              DONE HERE\n         SPACE\n* THIS DD DOES NOT POINT TO A REAL TAPE.  SET A FLAG AND\n*  FORCE LABEL TYPE TO BLP.\n         SPACE\nDDNOTTAP OI    INFLAG-T(R4),FLNOTTP  SHOW IT'S NOT A TAPE\n         MVI   INLABEL-T(R4),JFCBLP  SET LABEL TYPE TO BLP\n         NI    INFLAG-T(R4),255-FLRELBL  MAKE SURE RELABEL IS OFF\n         TM    INFLAG-T(R4),FLIN   IS THIS THE INPUT?\n         BZ    DDDONE              NO, DONE\n         ST    R8,LIMIT            YES, SET LIMIT TO 1 FILE\n         SPACE\n* SET UP FOR TAPE2 PROCESSING AND LOOP THROUGH AGAIN.\n         SPACE\nDDDONE   LA    R4,T2               -> TAPE2 CONTROL BLOCKS\n         BALR  R9,R9               LOOP THROUGH AGAIN\n         SPACE\n* IF ANY ERROR WAS DETECTED, TERMINATE.\n         SPACE\n         TM    FLAG,FLERROR        ANY ERROR MESSAGE ISSUED?\n         BO    TERM                YES, GO TERMINATE.\n         SPACE\n* COPY BUFNO/BLKSIZE IF SPECIFIED FROM TAPE1 DD CARD\n         SPACE\n         SR    R1,R1               CLEAR A REGISTER\n         IC    R1,JFCBUFNO-JFCB+JFCB1  GET THE BUFNO\n         LTR   R1,R1               WAS IT THERE?\n         BZ    NOBUFNO             NOPE\n         STH   R1,BUFNO            ELSE SAVE OVER THE DEFAULT (2)\nNOBUFNO  LH    R1,JFCBLKSI-JFCB+JFCB1  GET THE BLKSIZE\n         LTR   R1,R1               WAS IT SPECIFIED?\n         BNP   NOBLKSI             NOPE\n         LA    R0,80               MINIMUM IS 80 (FOR LABELS)\n         CR    R1,R0               IS USER BLKSIZE SMALLER?\n         BNL   GOTBLKSI            NO, IT'S OK\n         LR    R1,R0               ELSE FORCE IT TO 80\nGOTBLKSI ST    R1,BLKSIZE          ELSE SAVE OVER THE DEFAULT (10231)\nNOBLKSI  DS    0H\n         EJECT\n*******************************************************************\n*                                                                 *\n*              DESCRIPTION PROCESSING                             *\n*                                                                 *\n*        THIS ROUTINE WRITES NICE MESSAGES TELLING THE USER       *\n*         WHAT WE ARE DOING WITH HIS TAPES.                       *\n*                                                                 *\n*        REGISTER USAGE:                                          *\n*              R0: SPECIAL MESSAGE OFFSET POINTER                 *\n*              R1: MESSAGE OFFSET POINTER                         *\n*              R2: SUBROUTINE CALLS                               *\n*              R3: POINTER TO MESSAGE PARTS                       *\n*              R4: POINTER TO TAPE CONTROL BLOCKS                 *\n*              R5: ADDRESS OF MESSAGE CONSTRUCTION ROUTINE        *\n*              R6: ADDRESS OF MESSAGE WRITE ROUTINE               *\n*              R7: STARTING LINE POSITION FOR OUTPUT              *\n*              R8: CONSTANT ONE (FOR THE REST OF THE PROGRAM)     *\n*              R9: LOOP CONTROL                                   *\n*              R14: WORK REGISTER                                 *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n         LA    R5,DESCMOVE         PRESET SOME REGISTERS\n         LA    R6,DESCPUT          SINCE WE HAVE SOME EXTRAS\n         LA    R7,ERRTEXT+L'ERRUGH  SET OUTPUT LINE POSITION\n         SPACE\n* SET UP FOR TAPE1 PROCESSING\n         SPACE\n         LA    R4,T1               -> TAPE1 CONTROL BLOCKS\n         BALR  R9,0                GO THROUGH CODE AGAIN FROM HERE\n         SPACE\n* THE FOLLOWING CODE IS EXECUTED TWICE\n         SPACE\n* THE FIRST LINE OF MESSAGE TPC003I IS ISSUED VIA THE\n*  NORMAL MESSAGE ROUTINE.  SUBSEQUENT LINES ARE\n*  CONSTRUCTED BY THE CODE AT 'DESCMOVE'.\n         SPACE\n         TM    INFLAG-T(R4),FLNOTTP  IS IT A TAPE?\n         BO    DESCNOTP            IF NOT WE PUT OUT JUST ONE LINE\n         SPACE\n         LA    R2,DESCLABL-4       ELSE RETURN FOR LABEL LINE\n         LA    R3,M3C              PRESET PID MESSAGE\n         MVC   M3CVOL,INVOL-T(R4)  WITH VOLSER                    APR82\n         TM    INFLAG-T(R4),FLPID  IS IT PID OPTION?\n         BO    MESSAGE             YES, ISSUE THE MESSAGE\n         SPACE\n         TM    INFLAG-T(R4),FLINTEXT  INTERNAL/EXTERNAL DIFFERENT?\n         BO    DESCDIF             YES, GO FOR RIGHT MESSAGE\n         MVC   M3AVOL,INVOL-T(R4)  ELSE PUT VOLSER IN MESSAGE\n         LA    R3,M3A              -> MESSAGE\n         TM    INFLAG-T(R4),FLRELBL  IS IT BEING RELABELLED?\n         BZ    MESSAGE             NO, MESSAGE IS SET\n         MVC   M3AVOL,JFCBVOLS-JFCB+JFCB1-T(R4)  GET RIGHT VOLSER\n         B     MESSAGE             GO ISSUE IT\n         SPACE\nDESCDIF  MVC   M3BVOLEX,JFCBVOLS-JFCB+JFCB1-T(R4)  EXTERNAL\n         MVC   M3BVOLIN,INVOL-T(R4)  INTERNAL (FROM PARM FIELD)\n         LA    R3,M3B              -> MESSAGE\n         B     MESSAGE             GO ISSUE IT\n         SPACE\nDESCNOTP LA    R3,M3D              NOT A TAPE.  SET INPUT MESSAGE.\n         LA    R2,DESCDONE-4       RETURN POINT IS FOR NEXT TAPE\n         TM    INFLAG-T(R4),FLIN   IS IT INPUT?\n         BO    MESSAGE             YES, ISSUE MESSAGE\n         LA    R3,M3E              ELSE SET OUTPUT MESSAGE\n         B     MESSAGE             AND GO ISSUE IT.\n         SPACE\nDESCLABL BAL   R2,DESCPUT2         INITIALIZE REGISTERS\n         TM    INLABEL-T(R4),JFCBLP  IS IT BLP?\n         BO    DESCBLP             YES, GO OFF\n         LA    R3,D1A              'THIS TAPE HAS '\n         BALR  R2,R5               INSERT IT\n         TM    INLABEL-T(R4),JFCSL  IS IT SL?\n         BO    DESCSL              YES, GO OFF\n         LA    R3,D1B              'NO LABELS'\n         BALR  R2,R5\n         TM    INLABEL-T(R4),JFCBLTM  IS IT LTM?\n         BZ    DESCLABC            NO, ADD .\n         LA    R3,D1C              ' AND MAY START WITH A TAPE MARK'\n         BALR  R2,R5\n         B     DESCLABC            ADD .\nDESCSL   LA    R3,D1D              'STANDARD LABELS.'\n         BALR  R2,R5\n         B     DESCLABE            LINE COMPLETE\nDESCBLP  LA    R3,D1E              'LABELS (IF ANY) ON THIS TAPE...\n         BALR  R2,R5\n         TM    INFLAG-T(R4),FLIN   IS IT INPUT?\n         BZ    DESCLABC            NO, ADD .\n         LA    R3,D1F              ' AND WILL BE TREATED AS DATA FILES'\n         BALR  R2,R5\nDESCLABC LA    R3,D0               '.'\n         BALR  R2,R5\nDESCLABE BALR  R2,R6               PUT OUT THE LABEL LINE\n         SPACE\n         TM    INFLAG-T(R4),FLRELBL  IS THIS BEING RELABELLED?\n         BZ    DESCFLSQ            NO, SKIP THIS LINE\n         LA    R3,D2A              'THIS TAPE WILL BE '\n         BALR  R2,R5\n         TM    INLABEL-T(R4),JFCSL  WAS IT SL?\n         BZ    DESCRLBL            NO, IT'S JUST BEING LABELLED\n         LA    R3,D2B              'RE'\n         BALR  R2,R5\nDESCRLBL MVC   D2NEWVOL,INVOL-T(R4)  NEW VOLUME SERIAL\n         LA    R3,D2C              'LABELLED AS XXXXXX'\n         BALR  R2,R5\n         TM    FLAG,FLOWNER        WAS OWNER PARM GIVEN?\n         BZ    DESCRLBE            NO, ADD .\n         MVC   D2OWNER,OWNER       YES, PUT IT IN MESSAGE\n         LA    R3,D2D              'WITH OWNER=XXXXXXXXXX'\n         BALR  R2,R5\nDESCRLBE LA    R3,D0               '.'\n         BALR  R2,R5\n         BALR  R2,R6               WRITE OUT THE LINE\n         SPACE\n* THESE TWO ITEMS (FILE # AND FILE COUNT) GO ON THE SAME LINE\n         SPACE\nDESCFLSQ LH    R14,INFILE-T(R4)    GET LABEL #\n         CR    R14,R8              IS IT ONE?\n         BE    DESCLIMT            YES, NO LINE HERE\n         BAL   R2,EDIT             ELSE EDIT THE NUMBER\n         MVC   D3FLSQ,DECIMAL+L'DECIMAL-L'D3FLSQ  INTO MSG\n         LA    R3,D3               'THE TAPE COPY WILL START AT...\n         BALR  R2,R5\n         SPACE\nDESCLIMT TM    INFLAG-T(R4),FLIN   IS THIS THE INPUT TAPE?\n         BZ    DESCLIM2            NO, SKIP THIS PART OF THE MESSAGE\n         L     R14,LIMIT           GET DCB=LIMCT=\n         LTR   R14,R14             SPECIFIED?\n         BZ    DESCLIM2            NO, SKIP THIS ITEM\n         BAL   R2,EDIT             ELSE CONVERT\n         MVC   D4LIMIT,DECIMAL+L'DECIMAL-L'D4LIMIT  INSERT\n         LA    R3,D4               'NOT MORE THAN NNN FILES...\n         BALR  R2,R5\nDESCLIM2 CR    R1,R7               ANYTHING IN THIS LINE?\n         BE    DESCERRS            NO, SKIP IT\n         BALR  R2,R6\n         SPACE\nDESCERRS TM    INFLAG-T(R4),FLIN   IS THIS INPUT?\n         BZ    DESCDSN             NO, SKIP THIS FOR OUTPUT\n         LA    R3,D5A              'AFTER AN INPUT ERROR, '\n         BALR  R2,R5\n         TM    JFCEROPT-JFCB+JFCB1-T(R4),JFCSKP  EROPT=SKP?\n         BO    DESCSKP             YES, BRANCH\n         TM    JFCEROPT-JFCB+JFCB1-T(R4),JFCABN  EROPT=ABE?\n         BO    DESCABN             YES, BRANCH\n         LA    R3,D5D              'IF ANY DATA WAS READ...\n         BALR  R2,R5\n         TM    JFCEROPT-JFCB+JFCB1-T(R4),JFCACC  EROPT=ACC?\n         BO    DESCACC             YES, HE SAID SOMETHING\n         LA    R3,D5E              ' (THIS IS THE DEFAULT.)'\n         BALR  R2,R5\nDESCACC  BALR  R2,R6               PUT OUT LINE\n         B     DESCDONE            GET NEXT TAPE\nDESCSKP  LA    R3,D5B              'THE BAD BLOCK WILL BE SKIPPED.'\n         BALR  R2,R5\n         BALR  R2,R6\n         B     DESCDONE\nDESCABN  LA    R3,D5C              'PROCESSING WILL TERMINATE.'\n         BALR  R2,R5\n         BALR  R2,R6\n         B     DESCDONE\n         SPACE\nDESCDSN  TM    INLABEL,JFCSL       IS THE INPUT SL?\n         BO    DESCDCBS            YES, WE AREN'T MAKING UP NAMES\n         TM    OUTFLAG,FLRELBL     WILL THE OUTPUT BE SL?\n         BO    DESCDSN2            YES, WE ARE MAKING UP NAMES\n         TM    OUTLABEL,JFCSL      IS THE OUTPUT SL?\n         BZ    DESCDCBS            NO, WE AREN'T MAKING UP NAMES\nDESCDSN2 LA    R3,D6               'SINCE THE INPUT TAPE IS NOT...\n         BALR  R2,R5\n         BALR  R2,R6\n         SPACE\nDESCDCBS TM    OUTFLAG,FLRELBL     WILL THE OUTPUT BE SL?         OCT76\n         BO    DESCDCB2            YES, PUT OUT DCB MESSAGES      OCT76\n         TM    OUTLABEL,JFCSL      IS THE OUTPUT SL?              OCT76\n         BZ    DESCDONE            NO, SKIP DCB MESSAGES          OCT76\nDESCDCB2 LR    R0,R1               SAVE STARTING POINT            OCT76\n         CLI   JFCRECFM-JFCB+JFCB1-T(R4),0  RECFM GIVEN?\n         BE    DESCBLK             NO, TRY BLKSIZE\n         LA    R3,D8A              'RECFM'\n         BALR  R2,R5\nDESCBLK  CLC   JFCBLKSI-JFCB+JFCB1-T(,R4),=H'0'  BLKSIZE?\n         BE    DESCLRCL            NO, TRY LRECL\n         LA    R3,D8B              'BLKSIZE'\n         BAL   R2,DESCSPCL         SPECIAL ROUTINE FOR , INSERTION\nDESCLRCL CLC   JFCLRECL-JFCB+JFCB1-T(,R4),=H'0'  LRECL?\n         BE    DESCFINL            NO, DONE\n         LA    R3,D8C              'LRECL'\n         BAL   R2,DESCSPCL         SPECIAL ROUTINE FOR , INSERTION\nDESCFINL CR    R0,R1               ANY TEXT?\n         BE    DESCNONE            NO, SPECIAL TEXT\n         CR    R0,R7               ONLY ONE ITEM?\n         BE    DESCONE             YES, NO 'AND'\n         LR    R1,R0               ELSE BACK UP TO LAST ,\n         LR    R0,R3               SAVE LAST TEXT ITEM\n         LA    R3,D8D              ' AND '\n         BALR  R2,R5\n         LR    R3,R0               RE-INSERT LAST TEXT ITEM\n         BALR  R2,R5\nDESCONE  LA    R3,D8E              ' WILL BE PLACED IN THE OUTPUT...\n         BALR  R2,R5\n         LA    R3,D8F              'AS SPECIFIED.'\n         TM    INLABEL,JFCSL       IS INPUT LABELLED?\n         BZ    DESCLAST            NO, MESSAGE IS SET\n         LA    R3,D8G              'IF THE INPUT HAS NO HDR2 LABELS.'\nDESCLAST BALR  R2,R5\n         BALR  R2,R6\n         B     DESCDONE\nDESCNONE TM    INLABEL,JFCSL       IS INPUT LABELLED?\n         BO    DESCDONE            YES, NO LINE HERE\n         LA    R3,D7               'NO DCB INFORMATION WAS...\n         BALR  R2,R5\n         BALR  R2,R6\n         SPACE\n* SET UP FOR TAPE2 PROCESSING AND LOOP THROUGH AGAIN.\n         SPACE\nDESCDONE LA    R4,T2               -> TAPE2 CONTROL BLOCKS\n         BALR  R9,R9               LOOP THROUGH AGAIN\n         SPACE\n* ISSUE ONE OF THE TWO TPC004I MESSAGES\n         SPACE\n         LH    R14,BUFNO           GET BUFNO\n         BAL   R2,EDIT             MAKE IT PRETTY\n         MVC   M4BUFNO,DECIMAL+L'DECIMAL-L'M4BUFNO  INTO MSG\n         MVC   M4ABUFNO,DECIMAL+L'DECIMAL-L'M4ABUFNO  HERE TOO\n         L     R14,BLKSIZE         GET BUFFER SIZE\n         CH    R14,=H'32760'       IS BLKSIZE=32760 ?             APR81\n         BE    DESCBMS2            YES, DON'T INCREASE IT         APR81\n         AR    R14,R8              UP BY ONE\nDESCBMS2 DS    0H                                                 APR81\n         BAL   R2,EDIT             PRETTY IT UP TOO\n         MVC   M4BLKSI,DECIMAL+L'DECIMAL-L'M4BLKSI  INTO MSG\n         MVC   M4ABLKSI,DECIMAL+L'DECIMAL-L'M4ABLKSI  HERE TOO\n         LA    R2,FILINHDR-4       NEXT ROUTINE IS RETURN\n         LA    R3,M4               THIS MESSAGE IF INPUT UNLABELLED\n         TM    INLABEL,JFCSL       IS IT?\n         BZ    MESSAGE             YES, WE GUESSED IT\n         LA    R3,M4A              NOPE, GET THE RIGHT ONE\n         B     MESSAGE             GO SPEW IT OUT\n         SPACE 3\n* SUBROUTINES USED IN THIS SECTION FOR MESSAGE CONSTRUCTION\n         SPACE\n* ENTER HERE TO ADD A TEXT ITEM WITH SPECIAL , INSERTION\n         SPACE\nDESCSPCL CR    R0,R1               WAS THERE A PREVIOUS ITEM?\n         LR    R0,R1               SAVE FOR COMMA INSERTION\n         BE    DESCMOVE            NO, NORMAL CODE\n         MVI   0(R1),C','          YES, INSERT A COMMA\n         LA    R1,2(,R1)           SKIP A BLANK TOO\n         SPACE\n* ENTER HERE TO ADD A TEXT ITEM\n         SPACE\nDESCMOVE SR    R14,R14             CLEAR A REGISTER\n         IC    R14,0(,R3)          GET ITEM LENGTH - 1\n         EX    R14,DESCMVC         MOVE IT\n         LA    R1,1(R1,R14)        UP LINE POINTER\n         BR    R2                  RETURN TO CALLER\n         SPACE\n* EXECUTED INSTRUCTION\n         SPACE\nDESCMVC  MVC   0(*-*,R1),1(R3)     COPY IN TEXT ITEM\n         SPACE 2\n* ENTER HERE TO WRITE A LINE\n         SPACE\nDESCPUT  LA    R0,LINE             -> START OF LINE\n         SR    R1,R0               R1 HAD NEXT FREE SPACE POINTER\n         STH   R1,DCBLRECL-IHADCB+SYSPRINT  PUT LENGTH IN DCB\n         LH    R1,LINECNT          GET CURRENT LINES-LEFT\n         SR    R1,R8               DEDUCT ONE\n         STH   R1,LINECNT          AND SAVE IT BACK\n         PUT   SYSPRINT,(0)       WRITE IT\n         SPACE\n* ENTER HERE FOR INITIALIZATION ONLY\n         SPACE\nDESCPUT2 MVI   LINE,C' '           BLANKET\n         MVC   LINE+1(L'LINE-1),LINE\n         LR    R1,R7               NEXT ITEM GOES HERE\n         BR    R2                  RETURN TO CALLER\n         EJECT\n*******************************************************************\n*                                                                 *\n*              CONSTRUCT PROTOTYPE HEADER LABELS                  *\n*              IF OUTPUT TAPE IS (OR WILL BE) LABELLED            *\n*                                                                 *\n*              REGISTERS USED: R0, R1, R2, R3.                    *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* TEST IF OUTPUT TAPE IS OR WILL BE LABELLED\n         SPACE\nFILINHDR TM    OUTFLAG,FLRELBL     WILL IT BE?\n         BO    FILOUT              YES, FILL IN LABELS\n         TM    OUTLABEL,JFCSL      OR IS IT ALREADY?\n         BZ    READLABL            NO, NEXT STEP IS LABEL-READING\n         SPACE\n* FL1FILSR IS OUTPUT VOLUME SERIAL\n         SPACE\nFILOUT   MVC   FL1FILSR,OUTVOL\n         SPACE\n* FL1FILSQ FILLED IN LATER, FOR EACH FILE\n         SPACE\n* FL1CREDT FROM JFCB\n         SPACE\n         SR    R1,R1               CLEAR FOR IC\n         IC    R1,JFCBCRDT-JFCB+JFCB2  GET CYY OF CREATION DATE   SEP91\n         CVD   R1,TEMP             CONVERT YY (IGNORE C HERE)     SEP91\n         UNPK  FL1CREDT+1(2),TEMP  READABLIZE IT\n         OI    FL1CREDT+2,C'0'     ...\n         SR    R0,R0               CLEAR R0                       SEP91\n         D     R0,=F'100'          COMPUTE THE CENTURY            SEP91\n         IC    R1,XLATECYY(R1)     CONVERT TO BLANK/C'0'/C'1'     SEP91\n         STC   R1,FL1CREDT         AND SAVE THE CENTURY CODE      SEP91\n         SR    R0,R0               CLEAR R0 FOR ICM               SEP91\n         ICM   R0,B'0011',JFCBCRDT+1-JFCB+JFCB2  AND LOAD DDD     SEP91\n         CVD   R0,TEMP             CONVERT DDD\n         UNPK  FL1CREDT+3(3),TEMP  READABLIZE IT TOO\n         OI    FL1CREDT+L'FL1CREDT-1,C'0'  ...\n         SPACE\n* FL1EXPDT FROM JFCB\n         SPACE\n* NOTE: FL1EXPDT IS SET TO ALL C'0'S IF THE EXPDT IS ZERO,        SEP91\n*  FOR CONSISTENCY WITH MVS DFP/XA AND DFP/ESA.                   SEP91\n         SPACE ,                                                  SEP91\n         ICM   R1,B'0111',JFCBXPDT-JFCB+JFCB2  GET EXPIRE DATE    SEP91\n         BNZ   HASEXPDT            BRANCH IF DATE NON-ZERO        SEP91\n         MVC   FL1EXPDT,=C'000000'  ZERO, SET TO *ALL* ZEROS      SEP91\n         B     DUNEXPDT            AND CONTINUE                   SEP91\nHASEXPDT SRL   R1,16               SHIFT & ISOLATE CYY OF DATE    SEP91\n         CVD   R1,TEMP             CONVERT YY (IGNORE C HERE)     SEP91\n         UNPK  FL1EXPDT+1(2),TEMP  READABLIZE IT\n         OI    FL1EXPDT+2,C'0'     ...\n         SR    R0,R0               CLEAR R0                       SEP91\n         D     R0,=F'100'          COMPUTE THE CENTURY            SEP91\n         IC    R1,XLATECYY(R1)     CONVERT TO BLANK/C'0'/C'1'     SEP91\n         STC   R1,FL1EXPDT         AND SAVE THE CENTURY CODE      SEP91\n         LH    R0,JFCBXPDT+1-JFCB+JFCB2  LOAD DDD                 SEP91\n         CVD   R0,TEMP             CONVERT DDD\n         UNPK  FL1EXPDT+3(3),TEMP  READABLIZE IT TOO\n         OI    FL1EXPDT+L'FL1EXPDT-1,C'0'  ...\nDUNEXPDT DS    0H                                                 SEP91\n         SPACE\n* FL1BLKCT FILLED IN LATER, FOR EACH FILE\n         SPACE\n* FL2RECFM FROM JFCRECFM\n         SPACE\n         TM    JFCRECFM-JFCB+JFCB2,JFCUND  IS IT RECFM=U?\n         BM    FILRECFM            BIF F OR V\n         MVI   FL2RECFM,C'U'       SET TO U IF U OR UNSPEC.\n         B     FILBLKSI            AND GO GET BLKSIZE\nFILRECFM MVI   FL2RECFM,C'F'       TRY RECFM=F\n         TM    JFCRECFM-JFCB+JFCB2,JFCFIX  IS IT RIGHT?\n         BO    FILBLKSI            YES, GET BLKSIZE\n         MVI   FL2RECFM,C'V'       NO, IT MUST BE RECFM=V\n         SPACE\n* FL2BLKL FROM JFCBLKSI\n         SPACE\nFILBLKSI LH    R1,JFCBLKSI-JFCB+JFCB2  GET BLKSIZE\n         CVD   R1,TEMP             TO DECIMAL\n         UNPK  FL2BLKL,TEMP        ...\n         OI    FL2BLKL+L'FL2BLKL-1,C'0'  ...\n         SPACE\n* FL2LRECL FROM JFCLRECL\n         SPACE\n         LH    R1,JFCLRECL-JFCB+JFCB2  GET LRECL\n         LTR   R1,R1               TEST FOR LRECL=X\n         BNM   FILLRECL            BIF NOT\n         L     R1,=F'99999'        LRECL=X GOES INTO LABEL AS '99999'\nFILLRECL CVD   R1,TEMP             TO READABLE\n         UNPK  FL2LRECL,TEMP       ...\n         OI    FL2LRECL+L'FL2LRECL-1,C'0'  ...\n         SPACE\n* FL2DEN FILLED IN AFTER TAPE OPENED FOR OUTPUT\n         SPACE\n* FL2JOBD FROM TIOT\n         SPACE\n         EXTRACT TEMP,'S',FIELDS=TIOT  FIND THE TIOT\n         L     R1,TEMP\n         USING TIOT,R1\n         MVC   FL2JOBD,TIOCNJOB    GET IT THERE\n         SPACE\n* FL2STEPD FROM TIOT\n         SPACE\n         MVC   FL2STEPD,TIOCSTEP   MOVE IT TOO\n         DROP  R1\n         SPACE\n* FL2TRTCH FROM JFCTRTCH (WAS MOVED TO OUTTRTCH)\n*  (IF NOT SPECIFIED, WILL BE FILLED IN FROM INPUT IF IT IS 7-TK)\n         SPACE\n         LM    R1,R3,TRTCHADR      SET UP FOR BXLE\nFILTRTCH CLC   0(1,R1),OUTTRTCH    IS THIS IT?\n         BE    FILTRGOT            YES, MOVE CHAR EQUIVALENT\n         BXLE  R1,R2,FILTRTCH      NO, TRY NEXT\n         B     FILCNTRL            NOT FOUND, LEAVE BLANK\nFILTRGOT MVC   FL2TRTCH,1(R1)      FOUND, COPY IT\n         SPACE\n* FL2CNTRL FROM JFCRECFM\n         SPACE\nFILCNTRL TM    JFCRECFM-JFCB+JFCB2,JFCASA  TEST FOR RECFM=..A\n         BZ    FILCKMCH            NO, SKIP\n         MVI   FL2CNTRL,C'A'       YES, SET LABEL\n         B     FILBLOCK            GO FOR BLOCK ATTRIBUTE\nFILCKMCH TM    JFCRECFM-JFCB+JFCB2,JFCMAC  TEST FOR RECFM=..M\n         BZ    FILBLOCK            NO, SKIP\n         MVI   FL2CNTRL,C'M'       YES, SET LABEL\n         SPACE\n* FL2BLKA FROM JFCRECFM\n         SPACE\nFILBLOCK TM    JFCRECFM-JFCB+JFCB2,JFCRFB+JFCRFS  IS IT RECFM=..B/S?\n         BZ    READLABL            NEITHER, GO READ LABELS\n         MVI   FL2BLKA,C'R'        SET FOR RECFM=..BS\n         BO    READLABL            BOTH, GO READ LABELS\n         MVI   FL2BLKA,C'B'        SET FOR RECFM=..B\n         TM    JFCRECFM-JFCB+JFCB2,JFCRFB  IS IT?\n         BO    READLABL            BIF IF RIGHT\n         MVI   FL2BLKA,C'S'        NO, IT MUST BE RECFM=..S\n         EJECT\n*******************************************************************\n*                                                                 *\n*              LABEL VERIFICATION                                 *\n*                                                                 *\n*        UPDATE JFCBS AND READ LABELS                             *\n*                                                                 *\n*        VERIFY THAT LABELS ARE CORRECT                           *\n*                                                                 *\n*        REGISTER USAGE:                                          *\n*              R1: WORK REGISTER                                  *\n*              R2: SUBROUTINE CALLS                               *\n*              R3: MESSAGE POINTER                                *\n*              R4: POINTER TO TAPE CONTROL BLOCKS                 *\n*              R6, R9: LOOP CONTROL                               *\n*              R8: CONSTANT ONE                                   *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* ANY ERROR DETECTED AFTER THIS POINT WILL GIVE A RETURN CODE OF 8.\n         SPACE\nREADLABL MVI   RC,8                PRESET RETURN CODE TO 8        SEP79\n         SPACE\n* ENSURE TWO BLANK LINES BEFORE THE NEXT MESSAGE\n         SPACE\n         MVI   MSGHEADR,C'-'       PRESET CARRIAGE CONTROL        SEP79\n         SPACE\n* SHOW THE SYNAD EXIT WE ARE VERIFYING LABELS\n         SPACE\n         OI    FLAG,FLVERLBL       LIKE SO\n         SPACE 2\n* SET UP FOR TAPE1 PROCESSING\n         SPACE\n         LA    R4,T1               -> TAPE1 CONTROL BLOCKS\n         BALR  R9,0                GO THROUGH CODE AGAIN FROM HERE\n         SPACE\n* THE FOLLOWING CODE IS EXECUTED TWICE\n         SPACE 2\n* SET JCFB LABEL TYPE TO BLP\n         SPACE\n         MVI   JFCBLTYP-JFCB+JFCB1-T(R4),JFCBLP  LIKE SO\n         SPACE\n* SET DO-NOT-MERGE-FROM-DCB FLAG IN JFCB\n         SPACE\n         OI    JFCBTSDM-JFCB+JFCB1-T(R4),JFCNDCB  LIKE SO\n         SPACE\n* CLEAR TRTCH IN THE JFCB.  IT WILL BE SET IN THE DCB IF REQUIRED.\n         SPACE\n         MVI   JFCTRTCH-JFCB+JFCB1-T(R4),0  CLEAR IT\n         SPACE\n* CLEAR BUFL IN THE JFCB.  IT WILL BE SET IN THE DCB LATER.\n         SPACE\n         MVC   JFCBUFL-JFCB+JFCB1-T(,R4),=H'0'  CLEAR IT\n         SPACE\n* SET FILE SEQUENCE TO ONE TO READ THE LABELS\n         SPACE\n         STH   R8,JFCBFLSQ-JFCB+JFCB1-T(R4)  LIKE SO\n         SPACE\n* SET THE DCB BLKSIZE TO 81 (1 LARGER THAN LABEL SIZE)\n         SPACE\n         MVC   DCBBLKSI-IHADCB+TAPE1-T(,R4),=H'81'  MAGIC NUMBER\n         SPACE\n* SET THE DCB BUFNO TO THE VALUE WE GOT OR DEFAULTED\n         SPACE\n         LH    R1,BUFNO            GET IT\n         STC   R1,DCBBUFNO-IHADCB+TAPE1-T(R4)  SAVE IT\n         SPACE\n* IF THIS IS A 7-TRACK TAPE, SET TRTCH=ET (ALL LABELS ARE LIKE THAT)\n         SPACE\n         MVC   DCBTRTCH-IHADCB+TAPE1-T(,R4),INTRTCHL-T(R4)  PRESET\n         SPACE 2\n* IF THIS TAPE SPECIFIES BLP, GO TO THE NEXT TAPE\n         SPACE\n         TM    INLABEL-T(R4),JFCBLP  IS IT BLP?\n         BO    LBLNEXT2            YES, PROCESS NEXT TAPE\n         SPACE\n* GET THE OLD VOLUME SERIAL IN VOLSERNO\n         SPACE\n         MVC   VOLSERNO,INVOL-T(R4)  MOVE FROM HERE FIRST\n         TM    INFLAG-T(R4),FLRELBL  IF NOT RELABELLING, WE HAVE IT\n         BZ    LBLOPEN             ELSE\n         MVC   VOLSERNO,JFCBVOLS-JFCB+JFCB1-T(R4)  GET FROM JFCB\n         SPACE\n* SET EODAD\n         SPACE\nLBLOPEN  MVC   DCBEODA-IHADCB+TAPE1-T(,R4),=AL3(LBLEOF)\n         BALR  R6,0                SET RETURN POINT\n         SPACE 2\n* THE FOLLOWING CODE MAY BE EXECUTED TWICE... IF VERIFICATION\n*  OF A STANDARD LABEL FAILS, IT IS RETRIED ONCE, SINCE THE\n*  TAPE MAY BE POSITIONED AFTER THE VOLUME LABEL BY AVR\n*  (OR SOME OTHER FRIENDLY COMPONENT OF OS).\n         SPACE\n         NI    FLAG,255-FLINPERR   RESET A FLAG\n         NI    INFLAG-T(R4),255-FLGOTLTM  AND ANOTHER\n         LA    R2,TAPE1-T(R4)      -> DCB\n         OPEN  ((R2),INPUT),TYPE=J  SESAME\n         SPACE\n* READ THE LABEL?\n         SPACE\n         GET   TAPE1-T(R4)         GET IT\n         SPACE\n* PRESET THE ERROR MESSAGE RETURN POINT\n         SPACE\n         LA    R2,LBLNEXT-4        ONLY 1 MSG PER TAPE NEEDED\n         SPACE\n* IF EOF WAS REACHED, CONTROL GOES TO LBLEOF.\n* IF AN INPUT ERROR OCCURRED, THE SYNAD EXIT HAS SET FLINPERR.\n*  AN UNREADABLE TAPE IS UNLABELLED ACCORDING TO OS STANDARDS.\n         SPACE\n         TM    FLAG,FLINPERR       INPUT ERROR?\n         BO    LBLNOT              YES, IT'S NOT LABELLED\n         SPACE\n* A LABEL MUST BE 80 BYTES LONG EXACTLY.\n         SPACE\n         CLC   DCBLRECL-IHADCB+TAPE1-T(,R4),=H'80'  IS IT?\n         BNE   LBLNOT              NO, IT'S NOT LABELLED\n         SPACE\n* CHECK FOR 'VOL1' AS THE FIRST 4 CHARACTERS\n         SPACE\n         CLC   VOLLABI(4),0(R1)    IS IT?\n         BNE   LBLNOT              NO, IT'S NOT LABELLED\n         SPACE 2\n* TAPE HAS STANDARD VOLUME LABEL.  CHECK IF IT SHOULD.\n         SPACE\n         LA    R3,M21              PRESET SL BUT NL SPEC MSG\n         MVC   M21VOL,VOLSERNO-VOLLABI(R1)  PRESET VOLSER MOUNTED\n         TM    INLABEL-T(R4),JFCSL  SHOULD TAPE BE SL?\n         BZ    ERROR               NO, ISSUE ERROR MESSAGE\n         SPACE\n* CHECK THAT CORRECT SL TAPE IS MOUNTED.\n         SPACE\n         LA    R3,M22              PRESET SL BUT WRONG VOLUME MSG\n         MVC   M22VOL,VOLSERNO-VOLLABI(R1)  PRESET VOLSER MOUNTED\n         CLC   VOLSERNO,VOLSERNO-VOLLABI(R1)  IS IT CORRECT?\n         BNE   ERROR               NO, ISSUE ERROR MESSAGE\n         SPACE\n* CORRECT SL TAPE IS MOUNTED.  MERGE INFO INTO POSSIBLE\n*  NEW OUTPUT LABEL TO BE WRITTEN.\n         SPACE\n         TM    INFLAG-T(R4),FLIN   IS THIS THE INPUT TAPE?\n         BO    LBLSLIN             YES, BRANCH\n         MVC   VOLLABI(80),0(R1)   COPY ENTIRE LABEL FROM OUTPUT TAPE\n         CH    R8,OUTFILE          ARE WE WRITING FROM THE START? APR82\n         BNE   LBLNEXT             NO, DONE HERE                  APR82\n         SPACE ,                                                  APR82\n* CHECK THE EXPIRATION DATE ON FILE 1 (BEFORE WE REWRITE THE      APR82\n*  VOLUME LABEL IN A COUPLE OF PAGES).  IF OUTPUT STARTS AFTER    APR82\n*  FILE 1, THE EXPIRATION DATE IS CHECKED IN RDWRPREP, FOR THE    APR82\n*  FILE TO BE WRITTEN.                                            APR82\n* NOTE THAT THE CHECK ROUTINE RESETS SOME FLAGS THAT WILL BE      APR82\n*  RESET ANYWAY AS SOON AS WE EXIT HERE; WERE THIS NOT THE LAST   APR82\n*  TAPE BEING CHECKED IT WOULD BE NECESSARY TO SET THEM AGAIN.    APR82\n         SPACE ,                                                  APR82\n         BAL   R2,CKEXPDT          GO CHECK EXPIRATION DATE       APR82\n*                            ERROR RETURN IS DIRECTLY TO \"TERM\"   APR82\n         SPACE ,                                                  APR82\n         B     LBLNEXT             GET NEXT TAPE (REALLY EXIT)\nLBLSLIN  MVC   VOLOWNER,VOLOWNER-VOLLABI(R1)  COPY OWNER INFO\n         CH    R8,INFILE           ARE WE COPYING FROM BEGINNING?\n         BE    LBLNEXT2            YES, LEAVE TAPE OPEN AFTER VOL LBL\n         B     LBLNEXT             IN CASE O/P WAS NL AND NO PARM\n         SPACE 2\n* TAPE MARK FOUND AT BEGINNING OF TAPE.  TAPE IS NOT LABELLED.\n* IF LABEL=(,LTM) WAS SPECIFIED, SET A FLAG.  THE FIRST FILE\n*  (THE TAPE MARK) WILL BE SKIPPED LATER.\n         SPACE\nLBLEOF   TM    INLABEL-T(R4),JFCBLTM  DID JCL SPECIFY LABEL=(,LTM)?\n         BZ    LBLNOT              NO, CONTINUE\n         OI    INFLAG-T(R4),FLGOTLTM  YES, SET FLAG FOR LATER\n         SPACE\n* TAPE IS NOT LABELLED.  CHECK IF IT SHOULD BE.\n         SPACE\nLBLNOT   TM    INLABEL-T(R4),JFCSL  SHOULD IT BE SL?\n         BZ    LBLNEXT             NO, TAPE IS VERIFIED.\n         SPACE 2\n* TAPE IS NOT LABELLED BUT SHOULD BE SL.  RETRY ONCE (SEE ABOVE).\n         SPACE\n         LA    R2,TAPE1-T(R4)      -> DCB\n         CLOSE ((R2),REWIND)       UN-SESAME\n         BALR  R6,R6               FALL THROUGH AFTER SECOND TIME\n         SPACE\n* TAPE IS STILL NOT LABELLED AFTER RETRY. ISSUE AN ERROR MESSAGE.\n         SPACE\n         LA    R2,LBLNEXT2-4       BYPASS CLOSE SINCE WE DID IT\n         LA    R3,M23              PRESET TAPE CANNOT BE READ MSG\n         TM    FLAG,FLINPERR       WAS THERE AN ERROR?\n         BO    ERROR               YES, RIGHT MESSAGE\n         LA    R3,M24              ELSE SET TAPE IS NOT LABELLED MSG\n         B     ERROR               GO WRITE IT\n         SPACE 2\n* CLOSE THE TAPE\n         SPACE\nLBLNEXT  LA    R2,TAPE1-T(R4)      -> DCB\n         CLOSE ((R2),REWIND)       CLOSE IT\n         SPACE 2\n* PROCESS THE NEXT TAPE\n         SPACE\nLBLNEXT2 LA    R4,T2               -> CONTROL BLOCKS FOR TAPE2\n         BALR  R9,R9               RE-ENTER CODE AGAIN\n         SPACE 2\n* CHECK IF ANY ERROR WAS DETECTED. TERMINATE IF SO.\n         SPACE\n         TM    FLAG,FLERROR        ANY ERROR MESSAGE WRITTEN?\n         BO    TERM                YES, SAY BYE-BYE\n         SPACE\n         NI    FLAG,255-FLVERLBL   WE ARE DONE WITH LABEL VERIFICATION\n         OI    FLAG2,FLLBLRW       PRESET FOR LABEL READ/WRITE\n         EJECT\n*******************************************************************\n*                                                                 *\n*              SL OUTPUT VOLUME LABEL PROCESSING                  *\n*                                                                 *\n*        CONSTRUCT THE NEW VOLUME LABEL IF THE OUTPUT TAPE        *\n*              WILL BE (RE)LABELLED.                              *\n*                                                                 *\n*        IF THE OUTPUT TAPE IS (OR WILL BE) LABELLED AND IS BEING *\n*              WRITTEN FROM FILE 1, WRITE A NEW VOLUME LABEL.     *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* IF THE OUTPUT TAPE IS TO BE (RE)LABELLED, SET ITS LABEL TYPE\n*  FLAG.  WE DON'T NEED THE OLD TYPE BECAUSE IT WAS CHECKED ALREADY.\n         SPACE\n         TM    OUTFLAG,FLRELBL     RELABEL PARM GIVEN?\n         BZ    RELBLOUT            NO, GO TO VOL LABEL MERGE\n         MVI   OUTLABEL,JFCSL      YES, SET LABEL TYPE TO SL\n         SPACE\n* PROTOTYPE OUTPUT LABEL IS ALREADY THERE.  IF OUTPUT TAPE WILL\n*  BE SL, COMPLETE IT AND REWRITE THE LABEL.\n         SPACE\n* OUTPUT LABEL SOURCES:\n*  OWNER: PARM3 IF GIVEN, ELSE OLD OUTPUT TAPE LABEL,\n*         ELSE INPUT TAPE LABEL, ELSE BLANK\n*  VOLSER: PARM2 IF GIVEN, ELSE JCL\n*  REST OF LABEL: OLD OUTPUT TAPE LABEL IF LABELLED,\n*         ELSE STANDARD FORMAT\n         SPACE\nRELBLOUT TM    OUTLABEL,JFCSL      WILL OUTPUT BE SL?\n         BZ    RDWRPREP            NO, GO SET UP FOR REAL WORK\n         CH    R8,OUTFILE          ARE WE WRITING OUTPUT FROM START?\n         BNE   RDWRPREP            NO, DON'T REWRITE VOL LABEL\n         MVC   VOLSERNO,OUTVOL     COPY NEW VOLSER\n         TM    FLAG,FLOWNER        WAS OWNER PARM GIVEN?\n         BZ    WRVOLLBL            NO, WRITE NEW VOLUME LABEL\n         MVC   VOLOWNER,OWNER      ELSE COPY IT\n         SPACE 2\n* WRITE NEW VOLUME LABEL.  LEAVE OUTPUT TAPE OPEN.\n         SPACE\nWRVOLLBL OPEN  (TAPE2,OUTPUT),TYPE=J  SESAME\n         MVC   DCBLRECL-IHADCB+TAPE2,=H'80'  LENGTH FOR LABEL WRITE\n         PUT   TAPE2,VOLLABI       WRITE IT\n         EJECT\n*******************************************************************\n*                                                                 *\n*              PREPARE FOR READ-WRITE PROCESSING                  *\n*                                                                 *\n*        COMPUTE ACTUAL FILE NUMBERS AND UPDATE THE JFCBS.        *\n*                                                                 *\n*        UPDATE MESSAGE TPC006I DEPENDING ON THE TAPECOPY         *\n*              OPTIONS IN USE.                                    *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* ANY ERROR DETECTED AFTER THIS POINT WILL GIVE A RETURN CODE OF 12.\n         SPACE\nRDWRPREP MVI   RC,12               PRESET RETURN CODE             SEP79\n         SPACE\n* COMPUTE ACTUAL FILE NUMBERS FOR BOTH TAPES\n         SPACE\n         LA    R4,T1               -> TAPE1 CONTROL BLOCKS        SEP79\n         BALR  R9,0                REPEAT FROM HERE\n         SPACE\n* THE FOLLOWING CODE IS EXECUTED TWICE\n         SPACE\n         LH    R5,INFILE-T(R4)     GET THE LOGICAL FILE NUMBER\n         TM    INLABEL-T(R4),JFCSL  IS IT STANDARD LABELLED?\n         BZ    RDPRENL             NO, GO TO NL CODE\n         MH    R5,=H'3'            COMPUTE THE PHYSICAL (BLP)\n         SH    R5,=H'2'            FILE SEQUENCE NUMBER\n         B     RDPRENXT            TO NEXT TAPE\n         SPACE\n* IF A LEADING TAPE MARK WAS FOUND AND LABEL=(,LTM) WAS\n*  SPECIFIED, SKIP THE LEADING TAPE MARK AND ISSUE AN\n*  INFORMATIVE MESSAGE.\n         SPACE\nRDPRENL  TM    INFLAG-T(R4),FLGOTLTM  WAS AN LTM FOUND?\n         BZ    RDPRENXT            NO, FILE IS SET\n         AR    R5,R8               UP FILE SEQUENCE NUMBER\n         LA    R3,M5               -> MESSAGE\n         BAL   R2,MESSAGE          ISSUE IT\n         NOP   0                   IGNORE THIS\n         SPACE\n* SAVE THE COMPUTED FILE NUMBER IN THE JFCB\n         SPACE\nRDPRENXT STH   R5,JFCBFLSQ-JFCB+JFCB1-T(R4)  LIKE SO\n         SPACE\n* PROCESS THE OTHER TAPE\n         SPACE\n         LA    R4,T2               -> TAPE2 CONTROL BLOCKS\n         BALR  R9,R9               GO BACK\n         SPACE\n* PRESET THE EOD EXIT FOR LABEL PROCESSING\n         SPACE\n         MVC   DCBEODA-IHADCB+TAPE1,=AL3(EODSL)\n         SPACE 2\n* UPDATE MESSAGE TPC006I DEPENDING ON THE OPTIONS\n         SPACE\n* CHECK IF ANYTHING IS BEING WRITTEN\n         SPACE\n         TM    OUTFLAG,FLNOTTP     IS THE OUTPUT A TAPE?\n         BZ    RDPRECKF            YES, CHECK FILE NUMBERS\n         MVC   M6PART1,=C'READ.  '  SET PART1\n         MVC   M6PART3,=C'READ   '  SET PART2\n* SET OUTPUT FILE SEQUENCE NUMBER EQUAL TO INPUT SO ONLY          DEC76\n*  ONE FILE NUMBER WILL BE PRINTED IN MESSAGE TPC006I.            DEC76\n         MVC   OUTFILE,INFILE      FORCE (DUMMY) OUTFILE NUMBER   DEC76\n         B     RDPRECKL            GO CHECK LABELS\n         SPACE\n* CHECK IF INPUT AND OUTPUT FILE NUMBERS ARE THE SAME\n         SPACE\nRDPRECKF CLC   INFILE,OUTFILE      ARE FILE NUMBERS THE SAME?\n         BE    RDPRECKL            YES, GO CHECK LABELS\n         MVC   M6PART2A,=C' TO FILE'  NO, SET PART2\n         MVI   M6PART2B,C'.'       ...\n         SPACE\n* CHECK IF OUTPUT OR INPUT ARE SL\n         SPACE\nRDPRECKL TM    OUTLABEL,JFCSL      IS THE OUTPUT SL?\n         BO    RDCKEXPD            YES, GO CHECK EXPIRATION DATE  APR82\n         TM    INLABEL,JFCSL       IS THE INPUT SL?\n         BO    RDPREISL            YES, GO SET FOR THAT\n         MVI   M6+1,M6END1-M6-3    NO, ADJUST LENGTH; DELETE DSN=\n         B     RDPREDON            ALL SET\nRDPREISL MVC   M6PART4,=C' INPUT'  ONLY INPUT IS LABELLED\n         B     RDPREDON            ALL SET                        APR82\n         SPACE 2                                                  APR82\n* IF THE OUTPUT TAPE IS SL AND THE FILE NUMBER IS GREATER THAN    APR82\n*  ONE (AND IT IS NOT BEING RELABELLED), CHECK THE EXPIRATION     APR82\n*  DATE.  (IF FILE 1 IS BEING WRITTEN, IT WAS ALREADY CHECKED).   APR82\n* OUTPUT IS SL IF WE GET HERE. (CHECKED AT RDPRECKL)              APR82\n         SPACE ,                                                  APR82\nRDCKEXPD TM    OUTFLAG,FLRELBL     RELABEL PARM GIVEN?            APR82\n         BO    RDPREDON            YES, SKIP EXPDT CHECK HERE     APR82\n         CH    R8,OUTFILE          ARE WE WRITING OUTPUT FROM 1?  APR82\n         BE    RDPREDON            YES, EXPDT CHECK DONE ALREADY  APR82\n         BAL   R2,CKEXPDT          ERROR RETURN IS TO \"TERM\"      APR82\n         EJECT\n*******************************************************************\n*                                                                 *\n*              ENTER PROPER READ/WRITE ROUTINE                    *\n*                                                                 *\n*        AT THIS POINT:                                           *\n*              FOR BOTH TAPES, DCBBLKSI IS SET TO 81              *\n*                              DCBTRTCH IS SET TO ET IF 7-TRACK   *\n*              IN/OUTTRTCH/2 ARE SET TO THE DD CARD VALUES        *\n*               IF 7-TRACK.  IN/OUTTRTCH2 MAY BE CHANGED IF       *\n*               THE INPUT TAPE IS LABELLED.                       *\n*                                                                 *\n*        IF EITHER TAPE (OR BOTH) IS STANDARD LABELLED AND IS     *\n*         BEING PROCESSED FROM THE BEGINNING, IT IS OPEN AND      *\n*         POSITIONED AFTER THE VOLUME LABEL; OTHERWISE CLOSED.    *\n*                                                                 *\n*        REGISTER USAGE IN THESE ROUTINES:                        *\n*              R0, R1: WORK REGISTER                              *\n*              R2: WORK, SERVICE SUBROUTINE LINKAGE               *\n*              R3: WORK, MESSAGE POINTER                          *\n*              R4: WORK, CONTROL BLOCK POINTER                    *\n*              R5: INPUT LABEL READ BRANCH TABLE                  *\n*              R6: BLOCK COUNT                                    *\n*              R7: LARGEST BLOCK SIZE                             *\n*              R8: CONSTANT ONE                                   *\n*              R9: TAPE READ/WRITE SERVICE SUBROUTINE LINKAGE     *\n*              R14: WORK REGISTER                                 *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* BRANCH TO THE PROPER READ/WRITE ROUTINE\n         SPACE\nRDPREDON TM    INLABEL,JFCSL       IS THE INPUT LABELLED?\n         BZ    RDPRENLX            NO, TO NL INPUT ROUTINES\n         TM    OUTLABEL,JFCSL      IS THE OUTPUT LABELLED?\n         BO    COPYSLSL            YES, TO SL/SL\n         B     COPYSLNL            NO, TO SL/NL\nRDPRENLX TM    OUTLABEL,JFCSL      IS THE OUTPUT LABELLED?\n         BO    COPYNLSL            YES, TO NL/SL\n         B     COPYNLNL            NO, TO NL/NL\n         EJECT\n*******************************************************************\n*                                                                 *\n*              SL/SL READ/WRITE ROUTINE                           *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* INITIALIZE TO PROCESS HEADER LABELS\n         SPACE\n* THE INPUT OR OUTPUT TAPE WILL ALREADY BE OPEN (AND POSITIONED\n*  AFTER THE VOLUME LABEL) IF WE ARE AT THE FIRST FILE.  WE CAN\n*  ISSUE AN OPEN ANYWAY (IT IS IGNORED).\n         SPACE\nCOPYSLSL NI    FLAG2,255-FLLBLEOF-FLTLRLBL  RESET LABEL FLAGS\n         OPEN  (TAPE1,INPUT),TYPE=J  OPEN INPUT\n         SPACE\n* OUTPUT IS OPENED AFTER HDR1/2 LABELS ARE READ SO THAT IF\n*  SOMETHING IS WRONG WITH THE INPUT TAPE, THE OUTPUT TAPE\n*  IS NOT CHANGED (EXCEPT IF FILE 1 IS BEING WRITTEN).\n         SPACE\n* READ THE HDR1 LABEL\n*  IF WE FIND AN EOF, THE TAPE COPY IS COMPLETE.\n         SPACE\n         LA    R5,4                SET BRANCH POINTER FOR HDR1\n         BAL   R9,RDLABEL          READ IT\n         B     TERM                ERROR RETURN\n         B     DONE                EOF RETURN\n         MVC   FL1SAVE,0(R1)       COPY THE WHOLE LABEL\n         SPACE\n* SAVE DSNAME FOR MESSAGES\n         SPACE\n         MVC   M6DSN,FL1ID-FL1LABI+FL1SAVE  COPY DSNAME\n         SPACE\n* MERGE FIELDS INTO THE HDR1 LABEL FROM THE PROTOTYPE OR ELSEWHERE\n         SPACE\n         MVC   FL1FILSR-FL1LABI+FL1SAVE,OUTVOL  SET VOL ID\n         LH    R1,OUTFILE          GET LOGICAL FILE NUMBER\n         CVD   R1,TEMP             DECIMALIZE\n         UNPK  FL1FILSQ-FL1LABI+FL1SAVE,TEMP  UNPACK\n         OI    FL1FILSQ+L'FL1FILSQ-1-FL1LABI+FL1SAVE,C'0'  FIX UP\n         MVC   FL1CREDT-FL1LABI+FL1SAVE,FL1CREDT  COPY TODAY'S DATE\n         CLC   =C' 00000',FL1EXPDT  WAS EXPDT GIVEN?\n         BE    COPYNEXP            NO, RETAIN THE OLD ONE\n         CLC   =C'000000',FL1EXPDT  WAS EXPDT GIVEN?              SEP91\n         BE    COPYNEXP            NO, RETAIN THE OLD ONE         SEP91\n         MVC   FL1EXPDT-FL1LABI+FL1SAVE,FL1EXPDT  YES, COPY IT\n         SPACE 2\n* READ THE HDR2 LABEL\n*  IF WE FIND AN EOF, THE PROTOTYPE WILL BE USED.\n         SPACE\nCOPYNEXP LA    R5,8                SET FOR HDR2\n         BAL   R9,RDLABEL          READ IT\n         B     TERM                ERROR RETURN\n         B     SLSLNOH2            EOF RETURN - CONSTRUCT HDR2\n         MVC   FL2SAVE,0(R1)       COPY THE WHOLE LABEL\n         SPACE\n* MERGE FIELDS INTO THE HDR2 LABEL FROM THE PROTOTYPE\n         SPACE\n         MVC   FL2DEN-FL2LABI+FL2SAVE,FL2DEN  (SET BY SLCKDEN)\n         MVC   FL2JOBD-FL2LABI+FL2SAVE,FL2JOBD  THIS JOBNAME\n         MVC   FL2STEPD-FL2LABI+FL2SAVE,FL2STEPD  THIS STEPNAME\n         MVC   FL2ID-FL2LABI+FL2SAVE,FL2ID  34XX SERIAL (OR BLANK)\n         SPACE\n* DETERMINE INPUT AND OUTPUT TRTCH FOR 7-TRACK TAPES.\n*  SET THE OUTPUT LABEL FL2TRTCH IF NECESSARY.\n         SPACE\n         TM    INFLAG,FLSEVEN      IS THE INPUT 7-TRACK?\n         BZ    SLSL7MER            NO, SKIP\n         SPACE\n* DECODE THE TRTCH IN THE INPUT LABEL\n         SPACE\n         LM    R1,R3,TRTCHADR      GET BXLE REGISTERS\nSLSL7TRK CLC   FL2TRTCH-FL2LABI+FL2SAVE,1(R1)  IS THIS IT?\n         BE    SLSL7TRC            YES, GO COPY IT\n         BXLE  R1,R2,SLSL7TRK      NO, TRY NEXT ONE\nSLSL7TRC MVC   INTRTCH2,0(R1)      SAVE INPUT TRTCH\n         SPACE\n* DETERMINE THE TRTCH FOR THE OUTPUT\n         SPACE\nSLSLCK7O TM    OUTFLAG,FLSEVEN     IS THE OUTPUT 7-TRACK?\n         BZ    SLSLWRLB            NO, DONE HERE\n         CLI   OUTTRTCH,0          WAS AN OUTPUT TRTCH GIVEN?\n         BNE   SLSL7MER            YES, MERGE INTO LABEL\n         MVC   OUTTRCH2,INTRTCH2   NO, USE SAME AS INPUT\n         B     SLSLWRLB            DONE HERE; FL2TRTCH SET ALREADY\nSLSL7MER MVC   FL2TRTCH-FL2LABI+FL2SAVE,FL2TRTCH  YES, MERGE LABEL\n         SPACE 2\n* LABELS ARE ALL SET.  OPEN THE OUTPUT TAPE AND WRITE THEM.\n         SPACE\nSLSLWRLB OPEN  (TAPE2,OUTPUT),TYPE=J  ONION?\n         SPACE\n* PROCESS OUTPUT DENSITY IF NOT DONE YET\n         SPACE\n         BAL   R9,SLCKDEN          DO IT\n         SPACE\n* WRITE OUT THE HDR1/2 LABELS.\n         SPACE\n         MVC   DCBLRECL-IHADCB+TAPE2,=H'80'  SET LABEL LENGTH\n         PUT   TAPE2,FL1SAVE       WRITE HDR1\n         PUT   TAPE2,FL2SAVE       WRITE HDR2\n         SPACE\n* IF ANY OTHER LABELS FOLLOW, THEY WILL BE COPIED.\n         SPACE\n         SR    R5,R5               SET BRANCH OFFSET FOR UHL\nSLSLLBLS BAL   R9,RDLABEL          READ A LABEL\n         B     SLSLGO              ERROR, IGNORE (STOP AFTER FILE)\n         B     SLSLGO              EOF\n         LR    R0,R1               AND\n         PUT   TAPE2,(0)           WRITE IT OUT\n         B     SLSLLBLS            THIS ENDS AT EOF\n         SPACE 2\n* IF NO HDR2 LABEL WAS READ, USE THE PROTOTYPE CONSTRUCTED EARLIER.\n*  SAVE THE SPECIFIED (DD CARD) TRTCH INTO IT; THEN CONTINUE\n*  NORMAL 7-TRACK TRTCH PROCESSING.\n         SPACE\nSLSLNOH2 MVC   FL2SAVE,FL2LABI     COPY THE PROTOTYPE\n         TM    INFLAG,FLSEVEN      IS THE INPUT 7-TRACK?\n         BZ    SLSLWRLB            NO, SKIP THIS GARBAGE\n         LM    R1,R3,TRTCHADR      YES, GET TRTCH REGISTERS\nSLSLTSH2 CLC   INTRTCH2,0(R1)      IS THIS THE DD CARD SPEC?\n         BE    SLSLTRH2            YES, MOVE INTO THE LABEL\n         BXLE  R1,R3,SLSLTSH2      NO, TRY THE NEXT ONE\nSLSLTRH2 MVC   FL2TRTCH-FL2LABI+FL2SAVE,1(R1)  COPY IT\n         B     SLSLCK7O            CONTINUE 7-TRACK OUTPUT PROCESSING\n         SPACE 2\n* HEADER LABEL PROCESSING IS COMPLETE\n         SPACE\nSLSLGO   CLOSE (TAPE1,LEAVE,TAPE2,LEAVE)  UN-SESAME\n         SPACE\n* UP THE JFCB FILE SEQUENCE NUMBERS.\n         SPACE\n         LA    R4,JFCB1            -> INPUT JFCB\n         BALR  R3,0                REPEAT AFTER ME\n         LH    R1,JFCBFLSQ-JFCB(R4)  GET SEQUENCE\n         AR    R1,R8               UP BY 1\n         STH   R1,JFCBFLSQ-JFCB(R4)  SAVE IT BACK\n         LA    R4,JFCB2            -> OUTPUT JFCB\n         BALR  R3,R3               REPEAT BEFORE ME\n         SPACE\n* COPY THE LABEL BLKSIZE FOR THE COPY ROUTINE\n         SPACE\n         MVC   INPBLKSI,FL2BLKL-FL2LABI+FL2SAVE  COPY FROM OUTPUT LABEL\n         SPACE 2\n* DO THE COPY\n         SPACE\n         BAL   R9,CPSLDATA         CALL THE COPY ROUTINE\n         SPACE 2\n* PROCESS TRAILER LABELS\n* THEY ARE VALIDITY CHECKED, AND A FLAG IS SET IF AN EOV (RATHER\n*  THAN EOF) LABEL IS FOUND, BUT THE LABELS WRITTEN OUT ARE THE\n*  ONES SAVED FROM HEADER LABEL PROCESSING.\n         SPACE\n* CHANGE THE SAVED LABELS TO BE EOF LABELS.  THE BLOCKCOUNT WAS\n*  ALREADY SAVED (BY THE COPY SUBROUTINE).\n         SPACE\n         MVC   FL1SAVE(3),=C'EOF'  MAKE IT EOF\n         MVC   FL2SAVE(3),=C'EOF'  MAKE IT EOF\n         SPACE\n* OPEN THE TAPES.  IF A TERMINATING DATA ERROR WAS FOUND ON THE\n*  INPUT TAPE IT IS NOT READ ANY FURTHER.\n         SPACE\n         OPEN  (TAPE2,OUTPUT),TYPE=J  OPEN THE OUTPUT\n         MVC   DCBLRECL-IHADCB+TAPE2,=H'80'  SET LABEL LENGTH\n         OI    FLAG2,FLLBLEOF      MAKE SURE SET IN CASE WE BRANCH\n         TM    FLAG2,FLDTAERR      WAS THERE AN INPUT ERROR?\n         BO    SLSLEOFW            YES, GO WRITE LABELS WE HAVE\n         SPACE\n         NI    FLAG2,255-FLLBLEOF  RESET LABEL-EOF FLAG\n         OPEN  (TAPE1,INPUT),TYPE=J  OPEN INPUT LABELS\n         SPACE\n* READ THE EOF1/EOV1 LABEL\n         SPACE\n         LA    R5,16               OFFSET FOR EOF1/EOV1\n         BAL   R9,RDLABEL          READ IT\n         B     SLSLEOFR            ERROR, GO WRITE\n         B     SLNOEOF1            EOF1 MISSING, ISSUE MESSAGE\n         SPACE\n* READ THE EOF2/EOV2 LABEL\n         SPACE\n         LA    R5,20               OFFSET FOR EOF2/EOV2\n         BAL   R9,RDLABEL          READ IT\n         NOP   0                   ERROR RETURN\n         NOP   0                   EOF RETURN\n         SPACE\n* IF EOV LABELS WERE FOUND, CHANGE OUR LABELS TO EOV LABELS.\n         SPACE\nSLSLEOFR TM    FLAG2,FLEOV         WERE EOV LABELS FOUND?\n         BZ    SLSLEOFW            NO, WRITE OUT EOF LABELS\n         MVC   FL1SAVE(3),=C'EOV'  MAKE THESE\n         MVC   FL2SAVE(3),=C'EOV'   EOV LABELS\n         SPACE\n* WRITE OUT THE EOF/EOV LABELS\n         SPACE\nSLSLEOFW PUT   TAPE2,FL1SAVE       EOF1/EOV1\n         PUT   TAPE2,FL2SAVE       EOF2/EOV2\n         SPACE\n* COPY ANY UTL LABELS FOUND.\n         SPACE\n         LA    R5,12               PRESET FOR UTL LABELS\nSLSLEOFL BAL   R9,RDLABEL          READ THEM\n         B     SLSLEOF             ERROR RETURN\n         B     SLSLEOF             EOF RETURN\n         LR    R0,R1               -> UTL LABEL\n         PUT   TAPE2,(0)           WRITE IT OUT\n         B     SLSLEOFL            GET THE NEXT ONE\n         SPACE\n* THIS SL FILE FINISHED.  CLOSE THE TAPES AND UP THE JFCB FLSQ'S.\n         SPACE\nSLSLEOF  CLOSE (TAPE1,LEAVE,TAPE2,LEAVE)  ONION OFF RYE?\n         LA    R4,JFCB1            -> INPUT JFCB\n         BALR  R3,0                REPEAT AFTER ME\n         LH    R1,JFCBFLSQ-JFCB(R4)  GET SEQUENCE\n         AR    R1,R8               UP BY 1\n         STH   R1,JFCBFLSQ-JFCB(R4)  SAVE IT BACK\n         LA    R4,JFCB2            -> OUTPUT JFCB\n         BALR  R3,R3               REPEAT BEFORE ME\n         SPACE 2\n* DECIDE IF THE TAPECOPY IS COMPLETED.\n         SPACE\n         TM    FLAG2,FLLBLERR+FLDTAERR  LABEL/DATA ERROR FOUND?\n         BNZ   TERM                YES, STOP HERE\n         L     R1,LIMIT            GET THE COPY LIMIT\n         SR    R1,R8               DECREMENT COUNT\n         BZ    DONE                EXIT IF COMPLETED\n         ST    R1,LIMIT            ELSE SAVE IT BACK\n         TM    FLAG2,FLEOV         DID WE READ EOV LABELS?\n         BO    DONE                YES, STOP HERE\n         B     COPYSLSL            ELSE GO COPY ANOTHER FILE\n         SPACE 2\n* ISSUE AN ERROR MESSAGE IF EOF1/EOV1 LABEL WAS MISSING.\n         SPACE\nSLNOEOF1 LA    R2,LABLTABL(R5)     SET LABEL-TABLE POINTER\n         LA    R3,=CL17'MISSING.'  ERROR TYPE\n         B     RDLERROR            GO TO COMMON LABEL-ERROR CODE\n*              NOTE THAT RETURN WILL EVENTUALLY BE TO 0(R9).\n         EJECT\n*******************************************************************\n*                                                                 *\n*              SL/NL READ/WRITE ROUTINE                           *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* READ HEADER LABELS.  ALL WE ARE INTERESTED IN IS DSNAME,\n*  BLKSIZE, AND TRTCH.\n         SPACE\nCOPYSLNL NI    FLAG2,255-FLLBLEOF-FLTLRLBL  RESET LABEL FLAGS\n         OPEN  (TAPE1,INPUT),TYPE=J  OPEN IT\n         SPACE\n* READ HDR1 LABEL\n         SPACE\n         LA    R5,4                SET HDR1 OFFSET\n         BAL   R9,RDLABEL          READ IT\n         B     TERM                ERROR RETURN\n         B     DONE                EOF RETURN\n         MVC   M6DSN,FL1ID-FL1LABI(R1)  COPY DSNAME TO TPC006I MESSAGE\n         SPACE\n* READ HDR2 LABEL\n         SPACE\n         LA    R5,8                SET HDR2 OFFSET\n         BAL   R9,RDLABEL          READ IT\n         B     TERM                ERROR RETURN\n         B     SLNLGO              EOF RETURN\n         MVC   INPBLKSI,FL2BLKL-FL2LABI(R1)  COPY INPUT BLKSI FOR COPY\n         SPACE\n* SET INPUT TRTCH IF 7-TRACK\n         SPACE\n         TM    INFLAG,FLSEVEN      IS INPUT 7-TRACK?\n         BZ    SLNLNOT7            NO, SKIP THIS\n         LR    R4,R1               SAVE R1; IT POINTS TO THE LABEL READ\n         LM    R1,R3,TRTCHADR      GET TRTCH REGISTERS\nSLNL7TRK CLC   FL2TRTCH-FL2LABI(,R4),1(R1)  IS THIS IT?\n         BE    SLNL7TRC            YES, WE GOT IT\n         BXLE  R1,R2,SLNL7TRK      NO, TRY THE NEXT ONE\nSLNL7TRC MVC   INTRTCH2,0(R1)      YES, SAVE THE RIGHT VALUE\n         SPACE\n* READ AND IGNORE UHL LABELS\n         SPACE\nSLNLNOT7 SR    R5,R5               SET UHL OFFSET\nSLNLSKPL BAL   R9,RDLABEL          READ IT\n         B     SLNLGO              ERROR RETURN\n         B     SLNLGO              EOF RETURN\n         B     SLNLSKPL            NORMAL RETURN\n         SPACE\n* CLOSE THE LABEL FILE\n         SPACE\nSLNLGO   CLOSE (TAPE1,LEAVE)       CLOSE THE LABEL FILE\n         LH    R1,JFCBFLSQ-JFCB+JFCB1  UP THE\n         AR    R1,R8               BLP FILE SEQUENCE\n         STH   R1,JFCBFLSQ-JFCB+JFCB1  AND SAVE IT BACK\n         SPACE 2\n* COPY THE DATA FILE\n         SPACE\n         BAL   R9,CPSLDATA         DO THE COPY\n         SPACE\n* IF AN TERMINATING ERROR OCCURRED, STOP.\n         SPACE\n         TM    FLAG2,FLDTAERR      TERMINATING ERROR?\n         BO    TERM                YES, BYE BYE\n         SPACE\n* READ TRAILER LABELS. RDLABEL CHECKS FOR EOV LABELS FOUND.\n         SPACE\n         NI    FLAG2,255-FLLBLEOF  RESET LABEL-EOF FLAG\n         OPEN  (TAPE1,INPUT),TYPE=J  OPEN TRAILER LABEL FILE\n         SPACE\n         LA    R5,16               OFFSET FOR EOF1\n         BAL   R9,RDLABEL          READ IT\n         B     TERM                ERROR RETURN\n         B     SLNOEOF1            EOF RETURN - ERROR MSG, THEN TERM\n         SPACE\n         LA    R5,20               OFFSET FOR EOF2\n         BAL   R9,RDLABEL          READ IT\n         B     TERM                ERROR RETURN\n         B     SLNLNEXT            EOF RETURN\n         SPACE\n         LA    R5,12               OFFSET FOR UTL\nSLNLUTL  BAL   R9,RDLABEL          READ IT\n         B     TERM                ERROR RETURN\n         B     SLNLNEXT            EOF RETURN\n         B     SLNLUTL             NORMAL RETURN\n         SPACE\n* CLOSE THE TRAILER LABEL FILE AND UP THE SEQUENCE NUMBER.\n         SPACE\nSLNLNEXT CLOSE (TAPE1,LEAVE)       CLOSE IT\n         LH    R1,JFCBFLSQ-JFCB+JFCB1  GET FLSQ\n         AR    R1,R8               UP IT\n         STH   R1,JFCBFLSQ-JFCB+JFCB1  SAVE IT BACK\n         SPACE\n* DECIDE IF THE TAPECOPY IS COMPLETE\n         SPACE\n         TM    FLAG2,FLLBLERR+FLDTAERR  IF LABEL OR DATA ERROR,\n         BNZ   TERM                TERMINATE\n         L     R1,LIMIT            GET READ LIMIT\n         SR    R1,R8               DECREMENT COUNT\n         BZ    DONE                EXIT IF COMPLETED\n         ST    R1,LIMIT            ELSE SAVE IT BACK\n         TM    FLAG2,FLEOV         WAS AN EOV LABEL FOUND?\n         BO    DONE                YES, WE ARE DONE\n         B     COPYSLNL            ELSE DO THE NEXT FILE\n         EJECT\n*******************************************************************\n*                                                                 *\n*              NL/SL READ/WRITE ROUTINE                           *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* FILL IN PROTOTYPE HEADER LABELS AND WRITE THEM\n         SPACE\nCOPYNLSL NI    FLAG2,255-FLTLRLBL  RESET TRAILER-LABEL FLAG\n         OPEN  (TAPE2,OUTPUT),TYPE=J  OPEN THE HEADER FILE\n         SPACE\n         BAL   R9,SLCKDEN          FILL IN DEN/TU SER IF NOT DONE\n         LH    R1,OUTFILE          GET THE LOGICAL FILE NUMBER\n         CVD   R1,TEMP             TO READABLE\n         UNPK  FL1FILSQ,TEMP       PUT IN HDR1 LABEL\n         OI    FL1FILSQ+L'FL1FILSQ-1,C'0'  ...\n         MVC   FL1BLKCT,=C'000000'  ZERO THE BLOCK COUNT\n         MVC   FL1ID(4),=C'FILE'   CONSTRUCT DSNAME OF FILENNNN\n         MVC   FL1ID+4(4),FL1FILSQ  ...\n         MVC   M6DSN,FL1ID         COPY DSNAME TO MSG TPC006I\n         SPACE\n         MVC   DCBLRECL-IHADCB+TAPE2,=H'80'  LABELS ARE 80 BYTES\n         PUT   TAPE2,FL1LABI       WRITE HDR1\n         PUT   TAPE2,FL2LABI       WRITE HDR2\n         CLOSE (TAPE2,LEAVE)       CLOSE IT\n         LH    R1,JFCBFLSQ-JFCB+JFCB2  UP THE JFCB\n         AR    R1,R8               SEQUENCE NUMBER\n         STH   R1,JFCBFLSQ-JFCB+JFCB2  AND SAVE IT BACK\n         SPACE 2\n* COPY THE DATA FILE\n         SPACE\n         BAL   R9,CPSLDATA         COPY IT\n         SPACE\n* WRITE THE TRAILER LABELS\n         SPACE\n         OPEN  (TAPE2,OUTPUT),TYPE=J  OPEN TRAILER LABEL FILE\n         MVC   DCBLRECL-IHADCB+TAPE2,=H'80'  LABELS ARE 80 BYTES\n         SPACE\n         LA    R4,FL1LABI          -> HDR1\n         BALR  R3,0                REPEAT AFTER ME\n         MVC   0(3,R4),=C'EOF'     CHANGE LABEL TO AN EOF LABEL\n         PUT   TAPE2,(R4)          WRITE IT OUT\n         MVC   0(3,R4),=C'HDR'     CHANGE LABEL BACK TO A HDR\n         LA    R4,FL2LABI          -> HDR2\n         BALR  R3,R3               REPEAT BEFORE ME\n         SPACE\n         CLOSE (TAPE2,LEAVE)       CLOSE IT\n         LH    R1,JFCBFLSQ-JFCB+JFCB2  UP THE JFCB\n         AR    R1,R8               SEQUENCE NUMBER\n         STH   R1,JFCBFLSQ-JFCB+JFCB2  AND SAVE IT BACK\n         SPACE\n* CALL NL-INPUT DECISION ROUTINE. IT RETURNS IF WE SHOULD\n*  CONTINUE COPYING.\n         SPACE\n         BAL   R9,NLCKEOF          CALL IT\n         B     COPYNLSL            CONTINUE WITH THE NEXT FILE\n         EJECT\n*******************************************************************\n*                                                                 *\n*              NL/NL READ/WRITE ROUTINE                           *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nCOPYNLNL BAL   R9,COPYDATA         COPY THE DATA FILE\n         BAL   R9,NLCKEOF          CALL EOF DECISION ROUTINE\n         B     COPYNLNL            COPY ANOTHER FILE\n         SPACE 5\n*******************************************************************\n*                                                                 *\n*              NL INPUT EOF DECISION ROUTINE                      *\n*                                                                 *\n*        EXIT IS TO \"TERM\" OR \"DONE\" IF APPROPRIATE; ELSE         *\n*              RETURN TO CALLER.                                  *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nNLCKEOF  TM    FLAG2,FLDTAERR      WAS THERE A DATA FILE ERROR?\n         BO    TERM                YES, TERMINATE\n         SPACE\n         L     R1,LIMIT            GET CURRENT COPY LIMIT\n         SR    R1,R8               DECREMENT COUNT\n         BZ    DONE                EXIT IF COMPLETED\n         ST    R1,LIMIT            ELSE SAVE UPDATED COUNT\n         SPACE\n         TM    INFLAG,FLPID        IS THE INPUT A PID TAPE?\n         BZ    NLCKEOF2            NO, SKIP THIS\n         CR    R6,R8               WAS THERE ONE BLOCK?\n         BNE   NLCKEOF2            NO, SKIP THIS\n         CH    R7,=H'80'           OF 80 BYTES?\n         BE    DONE                YES, COPY IS COMPLETE\n         SPACE\nNLCKEOF2 LTR   R6,R6               DID WE REACH EOF?\n         BZ    DONE                YES, COPY COMPLETED\n         BR    R9                  NO, RETURN TO CONTINUE\n         EJECT\n*******************************************************************\n*                                                                 *\n*              ROUTINE TO READ INPUT LABELS                       *\n*                                                                 *\n*        THIS ROUTINE READS AND VALIDITY-CHECKS INPUT             *\n*         LABELS ON TAPE1.                                        *\n*                                                                 *\n*        AT ENTRY:                                                *\n*              TAPE1 MUST BE OPEN                                 *\n*              EODAD MUST BE SET APPROPRIATELY                    *\n*              DCBBLKSI MUST BE SET TO 81 (OR MORE)               *\n*              R5 MUST BE SET FOR BRANCH TABLE:                   *\n*                0 FOR UHL LABELS (NOT CHECKED)                   *\n*                4 FOR HDR1 LABEL                                 *\n*                8 FOR HDR2 LABEL                                 *\n*               12 FOR UTL LABELS (NOT CHECKED)                   *\n*               16 FOR EOF1/EOV1 LABEL                            *\n*               20 FOR EOF2/EOV2 LABEL                            *\n*              FOR EOF1/EOV1 LABEL PROCESSING:                    SEP79\n*               R6 CONTAINS OUTPUT TAPE BLOCK COUNT               SEP79\n*               \"INPBLSKP\" CONTAINS COUNT OF INPUT BLOCKS SKIPPED SEP79\n*                                                                 *\n*        REGISTER USAGE:                                          *\n*              R1: RETURNS LABEL ADDRESS ON NORMAL RETURN         *\n*              R2, R3, R4: WORK REGISTERS                         SEP79\n*              R5: BRANCH TABLE INDEX FOR LABEL VALIDATION        *\n*                  (MAY BE DESTROYED ON RETURN)                   SEP79\n*              R9: RETURN REGISTER                                *\n*                  RETURNS:                                       *\n*                   +0 = I/O ERROR OR FORMAT ERROR                *\n*                        (MESSAGE ISSUED; FLLBLERR SET)           *\n*                   +4 = EOF                                      *\n*                   +8 = NORMAL                                   *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* READ A LABEL RECORD\n         SPACE\nRDLABEL  TM    FLAG2,FLLBLEOF      DID WE ALREADY GET AN EOF?\n         BO    4(R9)               YES, TAKE EOF RETURN\n         NI    FLAG,255-FLINPERR   RESET INPUT-ERROR FLAG\n         GET   TAPE1               READ A LABEL\n         SPACE\n* TEST FOR I/O ERROR OR WRONG LENGTH (NOT 80).\n         SPACE\n         LA    R2,LABLTABL(R5)     PRESET LABEL-TABLE POINTER\n         LA    R3,=CL17'UNREADABLE.'  PRESET ERROR CAUSE\n         TM    FLAG,FLINPERR       WAS THERE AN INPUT ERROR?\n         BO    RDLERROR            YES, ISSUE A MESSAGE\n         LA    R3,=CL17'WRONG LENGTH.'  PRESET ERROR CAUSE\n         CLC   DCBLRECL-IHADCB+TAPE1,=H'80'  IS IT 80 BYTES?\n         BNE   RDLERROR            NO, ISSUE A MESSAGE\n         SPACE\n* CHECK FOR THE PROPER LABEL ID.\n         SPACE\n         LA    R3,=CL17'WRONG FORMAT.'  PRESET ERROR CAUSE\n         CLC   0(4,R1),0(R2)       IS IT CORRECT?\n         BNE   RDLBRNCH(R5)        NO, USE BRANCH TABLE           APR81\n         CLC   =C'EOF1',0(R1)      IS THIS AN EOF1 LABEL?\n         BE    RDLEOF1             YES, GO PROCESS BLOCK COUNT\n         B     8(R9)               NO, RETURN TO CALLER\n         SPACE\n* BRANCH TABLE FOR DISAGREEABLE LABELS READ                       SEP79\n         SPACE ,                                                  SEP79\nRDLBRNCH DS    0H                                                 SEP79\n         B     8(R9)               NO CHECKING FOR UHL\n         B     RDLERROR            MESSAGE FOR HDR1\n         B     RDLERROR            MESSAGE FOR HDR2\n         B     8(R9)               NO CHECKING FOR UTL\n         B     RDLEOV1             EOF1 MIGHT BE EOV1\n         B     RDLEOV2             EOF2 MIGHT BE EOV2\n         SPACE\n* CHECK IF EOV LABELS READ INSTEAD OF EOF LABELS\n         SPACE\nRDLEOV1  CLC   =C'EOV1',0(R1)      IS THIS AN EOV1?\n         BNE   RDLERROR            NO, ISSUE MESSAGE\n         OI    FLAG2,FLEOV         YES, SET A FLAG\n         B     RDLEOF1             GO PROCESS BLOCK COUNT         SEP79\nRDLEOV2  TM    FLAG2,FLEOV         DID WE GET AN EOV1?\n         BZ    RDLERROR            NO, WE CAN'T HAVE AN EOV2\n         CLC   =C'EOV2',0(R1)      IS THIS AN EOV2?\n         BE    8(R9)               YES, TAKE NORMAL RETURN\n         SPACE\n* LABEL ERROR DETECTED.  SET A FLAG AND ISSUE MSG TPC032A.\n         SPACE\nRDLERROR OI    FLAG2,FLLBLERR      SET LABEL-ERROR FLAG\n         MVC   M32EXPCT,0(R2)      THIS IS WHAT WE WANTED\n         MVC   M32RESON,0(R3)      THIS IS WHY\n         LH    R14,INFILE          GET THE FILE NUMBER\n         TM    FLAG2,FLTLRLBL      WAS IS ON INPUT LABELS?\n         BZ    RDLGOTFI            YES, FILE NUMBER OK\n         SR    R14,R8              NO, WAS INCREMENTED BY COPY RTN\nRDLGOTFI BAL   R2,EDIT             MAKE IT PRETTY\n         MVC   M32FSEQ,DECIMAL+L'DECIMAL-L'M32FSEQ  PUT IN MESSAGE\n         LA    R4,T1               -> INPUT TAPE, FOR MSG         APR82\n         LA    R3,M32              ISSUE IT\n         BAL   R2,ERROR            ...\n         NOP   0                   IGNORE THIS\n         BR    R9                  TAKE ERROR RETURN TO CALLER\n         SPACE 2                                                  SEP79\n* PROCESS BLOCK COUNT ON EOF1/EOV1 INPUT LABELS                   SEP79\n         SPACE ,                                                  SEP79\nRDLEOF1  A     R6,INPBLSKP         COMPUTE EXPECTED INPUT BLK CNT SEP79\n         SPACE ,                                                  SEP79\n* CONVERT THE BLOCK COUNT IN THE LABEL TO BINARY.  IF THE FIELD   SEP79\n*  DOES NOT CONTAIN VALID NUMERIC CHARACTERS A MESSAGE IS ISSUED. SEP79\n         SPACE ,                                                  SEP79\n         MVC   M36BLLBL,=C'INVALID'  PRESET MESSAGE FIELD         SEP79\n         LA    R2,L'FL1BLKCT       LENGTH OF FIELD                SEP79\n         LA    R3,FL1BLKCT-FL1LABI(,R1)  LOCATION OF FIELD        SEP79\nRDLCK1   CLI   0(R3),C'0'          MAKE SURE WE HAVE              SEP79\n         BL    RDLBLBAD            VALID NUMERICS                 SEP79\n         CLI   0(R3),C'9'          ELSE GO ISSUE                  SEP79\n         BH    RDLBLBAD            AN ERROR MESSAGE               SEP79\n         AR    R3,R8               GET NEXT DIGIT                 SEP79\n         BCT   R2,RDLCK1           AND CHECK IT                   SEP79\n         SPACE ,                                                  SEP79\n         PACK  TEMP,FL1BLKCT-FL1LABI(,R1)  PACK IT                SEP79\n         CVB   R2,TEMP             BINARIZE IT                    SEP79\n         SPACE ,                                                  SEP79\n* COMPARE THE INPUT AND EXPECTED BLOCK COUNTS.                    SEP79\n         SPACE ,                                                  SEP79\n         CR    R2,R6               ARE THEY EQUAL?                SEP79\n         BE    8(R9)               YES, TAKE NORMAL RETURN        SEP79\n         SPACE ,                                                  SEP79\n* INPUT BLOCK COUNT DIFFERS FROM EXPECTED.                        SEP79\n         SPACE ,                                                  SEP79\n         LR    R14,R2              GET BLOCK COUNT FROM LABEL     SEP79\n         BAL   R2,EDIT             MAKE IT LOOK PRETTY            SEP79\n         MVC   M36BLLBL,DECIMAL+L'DECIMAL-L'M36BLLBL  INTO MSG    SEP79\nRDLBLBAD LR    R14,R6              GET ACTUAL BLOCKS READ         SEP79\n         BAL   R2,EDIT             MAKE IT LOOK PRETTY TOO        SEP79\n         MVC   M36BLEXP,DECIMAL+L'DECIMAL-L'M36BLEXP  INTO MSG    SEP79\n         MVC   M36LABEL,0(R1)      COPY LABEL TYPE                SEP79\n         LH    R14,INFILE          GET THE FILE NUMBER            SEP79\n         SR    R14,R8              DECREMENT: THIS IS O/P LABEL   SEP79\n         BAL   R2,EDIT             PRETTIFY IT TOOO               SEP79\n         MVC   M36FILE,DECIMAL+L'DECIMAL-L'M36FILE  PUT IN MSG    SEP79\n         LR    R5,R1               SAVE LABEL ADDRESS             SEP79\n         LA    R3,M36              ISSUE THE MESSAGE              SEP79\n         BAL   R2,ERROR            ...                            SEP79\n         NOP   0                   IGNORE THIS                    SEP79\n         LR    R1,R5               RESTORE LABEL ADDRESS          SEP79\n         B     8(R9)               AND TAKE NORMAL RETURN         SEP79\n         SPACE 3\n* EOF EXIT FOR SL INPUT LABELS\n         SPACE\nEODSL    OI    FLAG2,FLLBLEOF      SET A FLAG FOR FUTURE USE\n         B     4(R9)               TAKE EOF RETURN\n         EJECT\n*******************************************************************\n*                                                                 *\n*              SL OUTPUT DENSITY FIX-UP ROUTINE                   *\n*                                                                 *\n*        THIS ROUTINE COPIES THE OUTPUT DENSITY REALLY BEING      *\n*         USED FROM THE DCB TO THE JFCB FOR TAPE2.  THIS AVOIDS   *\n*         DUAL DENSITY CHECKS AND SPINNING TAPES ON SUBSEQUENT    *\n*         OPENS FOR OUTPUT.                                       *\n*                                                                 *\n*        THIS ROUTINE ALSO FILLS IN THE DENSITY IN THE OUTPUT     *\n*         HDR2 LABELS, AND THE 34XX TAPE DRIVE SERIAL IF THE      *\n*         OUTPUT IS TO A 34XX.                                    *\n*                                                                 *\n*        REGISTER USAGE:                                          *\n*              R1: WORK REGISTER                                  *\n*              R2: WORK REGISTER                                  *\n*              R9: RETURN ADDRESS                                 *\n*                                                                 *\n*        THE OUTPUT DCB MUST BE OPEN WHEN THIS ROUTINE IS CALLED. *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* CHECK IF THIS ROUTINE WAS ALREADY EXECUTED\n         SPACE\nSLCKDEN  TM    FLAG,FLDENFIX       ALREADY ENTERED?\n         BCR   1,R9                YES, RETURN\n         OI    FLAG,FLDENFIX       SHOW WE WERE ENTERED\n         SPACE\n* GET THE OUTPUT DENSITY.  SAVE IT IN THE OUTPUT JFCB.\n         SPACE\n         SR    R1,R1               CLEAR R1 FOR IC\n         IC    R1,DCBDEN-IHADCB+TAPE2  GET THE REAL OUTPUT DENSITY\n         STC   R1,JFCDEN-JFCB+JFCB2  SAVE IT\n         SPACE\n* COMPUTE THE DENSITY FOR THE OUTPUT LABELS.  THIS CODE\n*  WORKS FOR DENSITIES 0 THROUGH 4.\n         SPACE\n         LA    R1,X'30'(,R1)       NOTE THAT DEN=4 STARTS AS X'D3'\n         SRL   R1,6                DENSITY IS NOW X'00' TO X'04'\n         LA    R1,C'0'(,R1)        MAKE IT EBCDIC NUMERIC\n         STC   R1,FL2DEN           PUT IT IN THE LABELS\n         STC   R1,FL2DEN-FL2LABI+FL2SAVE  PUT IT HERE TOO\n         SPACE\n* IF THIS A 3420, GET THE TAPE DRIVE SERIAL FROM THE\n*  UCB TAPE EXTENSION.  OPEN HAS SAVED IT THERE.\n* NOTE THAT THE HIGH-ORDER DIGIT (THE MODEL NUMBER) IS NOT\n*  PRESENT IN THE UCB, AND CAN BE OBTAINED ONLY VIA A SENSE\n*  COMMAND.  THIS CODE LEAVES IT AS ZERO.\n         SPACE\n* IF THIS IS A 3480, GET THE TAPE DRIVE SERIAL FROM THE           DEC85\n*  UCB 3480 TAPE CLASS EXTENSION.  OPEN HAS SAVED IT THERE.       DEC85\n         SPACE ,                                                  DEC85\n         L     R1,DCBDEBAD-IHADCB+TAPE2  -> DEB\n         L     R1,DEBSUCBA-DEBBASIC(R1)  -> UCB\n         USING UCB,R1\n         CLI   UCBTBYT4,X'80'      IS THIS A 3480 (NATIVE MODE)?  DEC85\n         BE    MVS3480             YES, GO HANDLE IT              DEC85\n         CLI   UCBTBYT1,X'33'      IS THIS A 3480 (COMPAT MODE)?  DEC85\n         BE    MVS3480             YES, GO HANDLE IT              DEC85\n         CLI   UCBTBYT4,X'81'      IS THIS A 3490E?               SEP91\n         BE    MVS3480             YES, HANDLE IT AS A 3480       SEP91\n         CLI   UCBTBYT4,X'03'      IS THIS A 3400?\n         BCR   7,R9                NO, RETURN\n         SPACE\n* TEST FOR OS OR VS.. THE UCB FORMATS DIFFER\n* ABSOLUTE OFFSETS ARE USED SO THAT THIS CODE WILL ASSEMBLE\n*  WITH EITHER OS OR MVS.\n         SPACE\n         L     R2,16               -> CVT\n*        TM    CVTDCB,CVTMVS2      IS THIS MVS?\n         TM    116(R2),X'01'       IS THIS MVS?\n         BO    MVSUCB              YES, TO MVS CODE\n         SPACE\n* THE FOLLOWING CODE IS FOR OS, VS1, AND SVS\n         SPACE\n         CLI   UCB+24,24           (UCB+24=UCBSENSN)  24 BYTES SENSE?\n         BCR   7,R9                NO, RETURN\n         L     R1,UCB+48           (UCB+48=UCBXTN)  -> UCB TAPE XTN\n         LH    R1,8(,R1)           (UCBMT+8=UCBCTD)  GET T.U. SERIAL\n         B     COMONUCB            CONTINUE\n         SPACE\n* THE FOLLOWING CODE IS FOR MVS\n         SPACE\nMVSUCB   L     R2,UCB+20           (UCB+20=UCBEXTPT)  COMMON UCB XTN\n         CLI   4(R2),24            (UCBCMEXT+4=UCBSNSCT)  24 BYTES SNS?\n         BCR   7,R9                NO, RETURN\n         L     R1,UCB+44           (UCB+44=UCBXTN)  -> UCB TAPE XTN\n         LH    R1,0(R1)            (UCBMT+0=UCBCTD)  GET T.U. SEIAL\n         B     COMONUCB            GO COMPLETE LABEL              DEC85\n         SPACE ,                                                  DEC85\n* THE 3480 IS SUPPORTED ONLY ON MVS, SO MVS IS ASSUMED HERE.      DEC85\n* THE OFFSET FOR UCBCXTUS DIFFERS IN MVS/XA AND MVS/ESA, SO AN    SEP91\n*  ADDITIONAL TEST IS MADE WITHIN THIS CODE.                      SEP91\n         SPACE ,                                                  DEC85\nMVS3480  L     R1,UCB+20           (UCB+20=UCBEXTPT)  -> COM XTN  DEC85\n         L     R1,24(R1)           (UCBCMEXT+24=UCBCLEXT)         DEC85*\n                                     -> TAPE (3480) CLASS XTN     DEC85\n         L     R2,16               -> CVT                         SEP91\n*        TM    CVTDCB,CVTMVSE      IS THIS MVS/XA (OR HIGHER)?    SEP91\n         TM    116(R2),X'80'       IS THIS MVS/XA (OR HIGHER)?    SEP91\n         BO    MVSXA80             YES, TO MVS/XA CODE            SEP91\n         L     R1,40(R1)           (UCBCX+40=UCBCXTUS)  = SERIAL  DEC85\n         B     MVSCM80             BRANCH TO COMMON 3480 CODE     SEP91\nMVSXA80  L     R1,48(R1)           (UCBCX+48=UCBCXTUS IN DFP/XA)  SEP91\nMVSCM80  DS    0H                     = SERIAL                    SEP91\n         SLA   R1,4                SHIFT LEFT A NIBBLE FOR SIGN   DEC85\n         BCR   8,R9                ZERO?  RETURN IF SO!           DEC85\n         ST    R1,TEMP+4           SAVE IT FOR THE UNPACK         DEC85\n         B     COMONUC2            CONTINUE                       DEC85\n         DROP  R1\n         SPACE\n* COMMON CODE\n         SPACE\nCOMONUCB CVD   R1,TEMP             CONVERT IT\nCOMONUC2 UNPK  FL2ID,TEMP          UNPACK IT TO THE LABEL         DEC85\n         OI    FL2ID+L'FL2ID-1,C'0'  FIX IT UP\n         TR    FL2ID,HEXSTUFF-C'0'  MAKE X'FA'-X'FF' INTO A-F     DEC85\n         MVC   FL2ID-FL2LABI+FL2SAVE,FL2ID  COPY IT HERE TOO\n         BR    R9                  ALL DONE, RETURN\n         EJECT ,                                                  APR82\n******************************************************************APR82\n*                                                                 APR82\n*              SL OUTPUT EXPIRATION-DATE-CHECK ROUTINE            APR82\n*                                                                 APR82\n*        THIS ROUTINE READS THE HDR1 LABEL (IF ANY) FOR           APR82\n*         THE OUTPUT FILE BEING WRITTEN AND CHECKS IF THE         APR82\n*         EXPIRATION DATE HAS PASSED.                             APR82\n*                                                                 APR82\n*        AT ENTRY:                                                APR82\n*              TAPE2 MAY BE OPEN AND POSITIONED AFTER THE         APR82\n*                VOL1 LABEL (FOR THE FIRST FILE); IF IT ISN'T,    APR82\n*                IT WILL BE OPENED.                               APR82\n*              JFCB FILE SEQUENCE NUMBER MUST BE SET.             APR82\n*              DCBBLKSI MUST BE SET TO 81 (OR MORE)               APR82\n*                                                                 APR82\n*        ON EXIT:                                                 APR82\n*              IF THE TAPE SHOULD NOT BE WRITTEN ON, MESSAGE      APR82\n*                TPC025A IS ISSUED, AND EXIT IS TO \"TERM\";        APR82\n*              OTHERWISE, EXIT IS TO (R2).                        APR82\n*              THE TAPE WILL BE CLOSED ON NORMAL EXIT.            APR82\n*              DCBEODA IS MODIFIED, FLVERLBL IS RESET,            APR82\n*                AND FLLBLRW IS SET, TO ALLOW PROPER MESSAGES.    APR82\n*                                                                 APR82\n*        REGISTER USAGE:                                          APR82\n*              R2: RETURN REGISTER                                APR82\n*              R3: WORK REGISTER                                  APR82\n*              OTHER REGISTERS MAY BE USED WHEN THE ERROR         APR82\n*                    EXIT WILL BE TAKEN.                          APR82\n*                                                                 APR82\n******************************************************************APR82\n         SPACE 2                                                  APR82\n* SET UP DCBEODA, AND SET SOME FLAGS                              APR82\n         SPACE ,                                                  APR82\nCKEXPDT  MVC   DCBEODA-IHADCB+TAPE2,=AL3(EODEXPDT)  SET EODAD     APR82\n         NI    FLAG,255-FLVERLBL   RESET LABEL-VERIFICATION FLAG  APR82\n*                                  (TO GET TPC034A MESSAGES)      APR82\n         OI    FLAG2,FLLBLRW       LIKEWISE, SET LABEL-READ FLAG  APR82\n         NI    FLAG,255-FLINPERR   RESET INPUT-ERROR FLAG         APR82\n         SPACE ,                                                  APR82\n* OPEN THE OUTPUT TAPE FOR INPUT.  IT WILL BE OPEN ALREADY (AND   APR82\n*  POSITIONED AFTER THE VOL1 LABEL) IF WE ARE GOING TO WRITE THE  APR82\n*  FIRST FILE ON THE TAPE.                                        APR82\n         SPACE ,                                                  APR82\n         OPEN  (TAPE2,INPUT),TYPE=J  OPEN UP IN THE NAME OF ME!   APR82\n         SPACE 2                                                  APR82\n* READ A LABEL RECORD (SHOULD BE HDR1)                            APR82\n         SPACE ,                                                  APR82\n         GET   TAPE2               READ A LABEL                   APR82\n         SPACE ,                                                  APR82\n* TEST FOR I/O ERROR OR WRONG LENGTH (NOT 80).                    APR82\n         SPACE ,                                                  APR82\n         LA    R3,=CL17'UNREADABLE.'  PRESET ERROR CAUSE          APR82\n         TM    FLAG,FLINPERR       WAS THERE AN INPUT ERROR?      APR82\n         BO    CKEERROR            YES, ISSUE A MESSAGE           APR82\n         LA    R3,=CL17'WRONG LENGTH.'  PRESET ERROR CAUSE        APR82\n         CLC   DCBLRECL-IHADCB+TAPE2,=H'80'  IS IT 80 BYTES?      APR82\n         BNE   CKEERROR            NO, ISSUE A MESSAGE            APR82\n         SPACE ,                                                  APR82\n* CHECK FOR A HDR1 LABEL                                          APR82\n         SPACE ,                                                  APR82\n         LA    R3,=CL17'WRONG FORMAT.'  PRESET ERROR CAUSE        APR82\n         CLC   =C'HDR1',0(R1)      WE EXPECT A HDR1               APR82\n         BNE   CKEERROR            NOT FOUND, ISSUE A MESSAGE     APR82\n         SPACE ,                                                  SEP91\n* CHECK IF THERE IS AN EXPIRATION DATE.  IF THERE WAS NONE        SEP91\n*  SPECIFIED, FL1EXPDT MAY HAVE BEEN RECORDED AS \"000000\",        SEP91\n*  WHICH MAY COMPARE HIGHER THAN THE CURRENT DATE.                SEP91\n         SPACE ,                                                  SEP91\n         CLC   =C'000000',FL1EXPDT-FL1LABI(R1)  COMPARE           SEP91\n         BE    EODEXPDT            IF EQUAL, THEN NO EXPDT        SEP91\n         SPACE ,                                                  APR82\n* CHECK THE EXPIRATION DATE AGAINST TODAY'S DATE.                 APR82\n         SPACE ,                                                  APR82\n         CLC   DATE,FL1EXPDT-FL1LABI(R1)  COMPARE DATES           SEP91\n         BL    CKDERROR            BIF NOT YET EXPIRED            APR82\n         SPACE ,                                                  SEP91\n* CHECK THE EXPIRATION DATE AGAINST DEFINED \"NEVER-EXPIRE\" DATES. SEP91\n         SPACE ,                                                  SEP91\n         CLC   =C' 99365',FL1EXPDT-FL1LABI(R1)  1999/365?         SEP91\n         BE    CKDERROR            BIF MATCHED                    SEP91\n         CLC   =C' 99366',FL1EXPDT-FL1LABI(R1)  1999/366?         SEP91\n         BE    CKDERROR            BIF MATCHED                    SEP91\n         CLC   =C' 99999',FL1EXPDT-FL1LABI(R1)  1999/999?         SEP91\n         BE    CKDERROR            BIF MATCHED                    SEP91\n         SPACE ,                                                  APR82\n* THE OUTPUT TAPE PASSES.  CLOSE IT AND RETURN.                   APR82\n         SPACE ,                                                  APR82\nEODEXPDT CLOSE (TAPE2,LEAVE)       CLOSET (EOD GOES HERE, TOO)    APR82\n         SPACE ,                                                  APR82\n         BR    R2                  RETURN                         APR82\n         SPACE 2                                                  APR82\n* EXPIRATION DATE HASN'T PASSED.  ISSUE MESSAGE TPC025A.          APR82\n         SPACE ,                                                  APR82\nCKDERROR MVC   M25EXPDY+1(L'M25EXPDY-1),FL1EXPDT-FL1LABI(R1)      SEP91\n*                                  COPY CYY OF LABEL'S EXPDT      SEP91\n         MVI   M25EXPDY,C'2'       PRESET AS 2XYY CENTURY         SEP91\n         CLI   M25EXPDY+1,C' '     C=BLANK MEANS YEAR IS 19XX     SEP91\n         BNE   CKDERR1             BRANCH IF NOT, ALL SET         SEP91\n         MVC   M25EXPDY(2),=C'19'  ELSE CORRECT FOR 1900'S        SEP91\nCKDERR1  MVC   M25EXPDD,FL1EXPDT+3-FL1LABI(R1)  COPY DDD OF EXPDT SEP91\n         LA    R3,M25              -> MESSAGE                     APR82\n         B     CKEGVMSG            GO ISSUE THE MESSAGE           APR82\n         SPACE 2                                                  APR82\n* ERROR READING HDR1 LABEL, ISSUE MESSAGE TPC032A.                APR82\n         SPACE ,                                                  APR82\nCKEERROR MVC   M32EXPCT,=C'HDR1'   WE EXPECTED A HDR1 LABEL       APR82\n         MVC   M32RESON,0(R3)      BUT THIS HAPPENED              APR82\n         LH    R14,OUTFILE         GET THE FILE NUMBER            APR82\n         BAL   R2,EDIT             MAKE IT PRETTY                 APR82\n         MVC   M32FSEQ,DECIMAL+L'DECIMAL-L'M32FSEQ  PUT IN MESSAGEAPR82\n         LA    R3,M32              -> MESSAGE                     APR82\nCKEGVMSG LA    R4,T2               -> TAPE2                       APR82\n         BAL   R2,ERROR            ISSUE IT...                    APR82\n         NOP   0                   IGNORE THIS RETURN             APR82\n         CLOSE (TAPE2,REWIND)      CLOSE THE TAPE, AND            APR82\n         B     TERM                EXIT, THIS ERROR IS TERMINAL   APR82\n         EJECT\n*******************************************************************\n*                                                                 *\n*              COMMON DATA-FILE COPY ROUTINE                      *\n*                                                                 *\n*        AT ENTRY:                                                *\n*              BOTH TAPE DCBS ARE CLOSED                          *\n*              JFCBFLSQ IS SET FOR BOTH TAPES                     *\n*              M6DSN HAS BEEN FILLED IN IF APPROPRIATE            *\n*              INTRTCH2/OUTTRCH2 ARE THE ACTUAL TRTCH'S TO        *\n*               BE USED (OR ZERO IF NOT 7-TRACK).                 *\n*              IF ENTERED AT CPSLDATA, \"INBLKSI\" CONTAINS THE     *\n*               EBCDIC BLKSIZE FIELD FROM THE TAPE LABELS.        *\n*               IT WILL BE USED IF IT IS LARGER THAN \"BLKSIZE\".   *\n*              OTHERWISE, OR IF ENTERED AT COPYDATA, THE VALUE IN *\n*               \"BLKSIZE\" WILL BE USED.                           *\n*              R9: RETURN ADDRESS                                 *\n*                                                                 *\n*        AT EXIT:                                                 *\n*              BOTH TAPE DCBS ARE CLOSED                          *\n*              JFCBFLSQ HAS BEEN INCREMENTED                      *\n*              INFILE/OUTFILE HAVE BEEN INCREMENTED               *\n*              MESSAGE TPC006I HAS BEEN ISSUED                    *\n*              FL1BLKCT HAS BEEN FILLED IN                        *\n*              DCB/JFCB FIELDS AND LOCAL FLAGS ARE RESET TO       *\n*               ALLOW TRAILER LABEL PROCESSING.                   *\n*              FLDTAERR IS SET IF:                                *\n*               BUFFERS COULD NOT BE OBTAINED, OR                 *\n*               A BLOCK EXCEEDED THE BLKSIZE BEING USED, OR       *\n*               AN INPUT ERROR OCCURRED AND THE USER SPECIFIED    *\n*                DCB=EROPT=ABE, OR                                *\n*               AN INPUT ERROR WHICH WAS NOT RECOVERABLE OCCURRED.*\n*                                                                 *\n*        REGISTER USAGE:                                          *\n*              R1: WORK REGISTER                                  *\n*              R2: WORK, SUBROUTINE LINKAGE                       *\n*              R3: LOOP CONTROL, MESSAGE POINTER                  *\n*              R4: CONTROL BLOCK POINTER                          *\n*              R6: OUTPUT BLOCK COUNT                             *\n*              R7: LARGEST BLOCK SIZE                             *\n*              R8: CONSTANT ONE                                   *\n*              R9: RETURN ADDRESS                                 *\n*              R14: WORK REGISTER                                 *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* THIS ENTRY POINT CONVERTS THE EBCDIC BLKSIZE IN\n*  \"INPBLKSI\" TO BINARY AND USES IT IF LARGER THAN\n*  THE VALUE IN \"BLKSIZE\".\n         SPACE\nCPSLDATA LA    R1,L'INPBLKSI       SET FIELD LENGTH\n         LA    R2,INPBLKSI         POINT TO IT\nCPSLCK1  CLI   0(R2),C'0'          MAKE SURE WE HAVE\n         BL    COPYDATA            VALID NUMERICS\n         CLI   0(R2),C'9'          ELSE IGNORE THIS FIELD\n         BH    COPYDATA            ...\n         AR    R2,R8               GET NEXT DIGIT\n         BCT   R1,CPSLCK1          AND CHECK IT\n         SPACE\n         PACK  TEMP,INPBLKSI       PACK IT\n         CVB   R2,TEMP             BINARIZE IT\n         MVI   INPBLKSI,C' '       MAKE IT UN-REUSABLE\n         C     R2,BLKSIZE          IS IT LARGER?\n         BNL   CPSLGOTB            YES, USE IT\n         SPACE 2\n* UPDATE DCBBLKSI.  SET DCBTRTCH.\n         SPACE\nCOPYDATA L     R2,BLKSIZE          GET BLKSIZE TO BE USED\nCPSLGOTB CH    R2,=H'32760'        IS BLKSIZE=32760 ?             APR81\n         BE    COPYBIGG            YES, ** DON'T ADD ONE **       APR81\n         AR    R2,R8               ADD 1 TO TELL IF BLOCK TOO BIG APR81\nCOPYBIGG DS    0H                                                 APR81\n         STH   R2,DCBBLKSI-IHADCB+TAPE1  SAVE IN\n         STH   R2,DCBBLKSI-IHADCB+TAPE2   BOTH DCBS\n         MVC   DCBTRTCH-IHADCB+TAPE1,INTRTCH2  SET INPUT TRTCH\n         MVC   DCBTRTCH-IHADCB+TAPE2,OUTTRCH2  SET OUTPUT TRTCH\n         SPACE\n* INITIALIZE REGISTERS\n         SPACE\n         SR    R6,R6               R6 IS BLOCK COUNT\n         SR    R7,R7               R7 IS LARGEST BLOCK LENGTH\n         ST    R6,INPBLSKP         ZERO BLOCKS-SKIPPED COUNTER    SEP79\n         SPACE\n* CHECK IF BUFFER WE HAVE ALREADY IS LARGE ENOUGH\n         SPACE\n         CH    R2,DCBBUFL-IHADCB+TAPE1  IS BUFFER LARGE ENOUGH?\n         BNH   COPYOPEN            YES, GO SESAME\n         SPACE\n* FREE ANY BUFFERS ALLOCATED\n         SPACE\n         LA    R4,TAPE1            -> TAPE1 DCB\n         BALR  R3,0                LOOP THROUGH THIS CODE TWICE\n         STH   R2,DCBBUFL-IHADCB(R4)  SAVE IN BUFL\n         TM    DCBBUFCB+3-IHADCB(R4),1  IS THERE A BUFFER?\n         BO    COPYGETB            NO, CONTINUE\n         FREEPOOL ((R4))           ELSE FREE IT\nCOPYGETB LA    R4,TAPE2            -> TAPE2 DCB\n         BALR  R3,R3               REPEAT\n         SPACE\n* COMPUTE THE AMOUNT OF STORAGE NEEDED FOR BUFFERS\n         SPACE\n         LA    R1,7                FOR ROUNDING\n         AR    R2,R1               ROUND\n         OR    R2,R1                UP\n         XR    R2,R1                 TO 8-BYTE BOUNDARY\n         MH    R2,BUFNO            TIMES NUMBER OF BUFFERS\n         LA    R2,8(,R2)           ADD 8-BYTE BUFFER HEADER\n         LA    R1,2047             FOR ROUNDING\n         AR    R2,R1               ROUND\n         OR    R2,R1                UP\n         XR    R2,R1                 TO 2K BOUNDARY\n         TM    OUTFLAG,FLNOTTP     IS OUTPUT DUMMY?\n         BO    COPYNOUT            YES, IT DOESN'T GET OPENED\n         AR    R2,R2               ELSE DOUBLE FOR OUTPUT TOO\nCOPYNOUT LA    R2,2048(,R2)        ADD 2K FOR OVERHEAD\n         SPACE\n* R2 NOW CONTAINS AMOUNT OF STORAGE REQUIRED FOR BUFFERS\n*  PLUS A 2K OVERHEAD ALLOWANCE.\n* TRY TO OBTAIN THIS MUCH STORAGE.\n* IF SUCCESSFUL, FREE IT AND DO THE OPEN.\n* IF UNSUCCESSFUL, ISSUE A MESSAGE AND TERMINATE.\n         SPACE\n         GETMAIN EC,LV=(R2),A=TEMP  TRY TO GET IT\n         LTR   R15,R15             WAS IT SUCCESSFUL?\n         BZ    COPYGOTS            YES, GO FREE IT AND DO OPEN\n         SPACE\n* GETMAIN UNSUCCESSFUL. ISSUE MESSAGE TPC031A AND CLEAN UP.\n         SPACE\n         LR    R14,R2              STORAGE REQUESTED\n         SRL   R14,10              CONVERT TO K\n         SH    R14,=H'2'           -2K OVERHEAD REQUESTED\n         BAL   R2,EDIT             MAKE PRETTY\n         MVC   M31STOR,DECIMAL+L'DECIMAL-L'M31STOR  TO MESSAGE\n         LA    R3,M31              -> MESSAGE\n         BAL   R2,ERROR            PUT IT OUT\n         NOP   0                   IGNORE THIS\n         OI    FLAG2,FLDTAERR      SET FLAG TO TERMINATE\n         SR    R1,R1               ZERO BUFL\n         STH   R1,DCBBUFL-IHADCB+TAPE1  TO KEEP US FROM ATTEMPTING\n         STH   R1,DCBBUFL-IHADCB+TAPE2   TO GET THIS BUFSIZE AGAIN\n         B     COPYEOF1            RETURN SO TRAILER LABELS WRITTEN\n         SPACE\n* GETMAIN SUCCESSFUL. FREE THE STORAGE.\n         SPACE\nCOPYGOTS FREEMAIN R,LV=(R2),A=TEMP  FREE IT\n         SPACE 2\n* OPEN THE DCBS\n         SPACE\nCOPYOPEN OPEN  (TAPE1,INPUT),TYPE=J  OPEN THE INPUT\n         SPACE\n         TM    OUTFLAG,FLNOTTP     IS OUTPUT NOT A TAPE?\n         BO    COPYSTRT            YES, DON'T OPEN IT\n         OPEN  (TAPE2,OUTPUT),TYPE=J  NO, OPEN IT\n         SPACE\n* COPY DENSITY FROM DCB TO JFCB TO AVOID DENSITY CONFLICTS\n*  ON SUBSEQUENT OPENS.\n         SPACE\n         TM    FLAG,FLDENFIX       HAS DENSITY BEEN COPIED?\n         BO    COPYSTRT            YES, SKIP IT\n         MVC   JFCDEN-JFCB+JFCB2,DCBDEN-IHADCB+TAPE2  NO, COPY IT\n         OI    FLAG,FLDENFIX       AND SET THE FLAG\n         SPACE\n* SET THE EODAD EXIT\n         SPACE\nCOPYSTRT MVC   DCBEODA-IHADCB+TAPE1,=AL3(COPYEOF)  SET OURS\n         NI    FLAG2,255-FLLBLRW   RESET LABEL READ/WRITE FLAG\n         SPACE 2\n* REALLY DO IT NOW\n         SPACE\nCOPYLOOP NI    FLAG,255-FLINPERR   RESET INPUT-ERROR FLAG\n         GET   TAPE1               READ A BLOCK\n         LH    R2,DCBLRECL-IHADCB+TAPE1  GET LENGTH READ\n         SPACE\n* IF AN INPUT ERROR OCCURRED, SKIP THIS BLOCK OR TERMINATE,\n*  AS APPROPRIATE.  THE INPUT ERROR MESSAGE WAS ISSUED ALREADY\n*  BY THE SYNAD EXIT.\n         SPACE\n         TM    FLAG,FLINPERR       WAS THERE A READ ERROR?\n         BZ    COPYNOER            NO, CONTINUE\n         TM    FLAG2,FLDTAERR      WAS ERROR TERMINATING?\n         BO    COPYTERM            YES, STOP AND GO CLEAN UP\n         TM    FLAG2,FLNODATA      WAS ANY DATA READ?\n         BO    COPYSKIP            NO, SKIP THIS BLOCK            SEP79\n         TM    JFCEROPT-JFCB+JFCB1,JFCSKP  DID USER SPECIFY EROPT=SKP?\n         BO    COPYSKIP            YES, SKIP THIS BLOCK           SEP79\n         SPACE\n* CHECK THAT THE BLOCK IS NOT LARGER THAN THE BLKSIZE BEING\n*  USED.  IF IT IS, PART OF IT WAS LOST.  ISSUE A MESSAGE\n*  AND TERMINATE PROCESSING.\n         SPACE\nCOPYNOER CH    R2,DCBBLKSI-IHADCB+TAPE1  IS LRECL=BLKSIZE?\n         BL    COPYOK              NO, BLOCK IS GOOD\n         CH    R2,=H'32760'        IS LRECL=BLKSIZE=32760 ?       APR81\n         BE    COPYOK              YES, MUST CONSIDER BLOCK OK.   APR81\n         LA    R14,1(,R6)          YES, GET BLOCK NUMBER\n         A     R14,INPBLSKP        CORRECT FOR BLOCKS SKIPPED     SEP79\n         BAL   R2,EDIT             INTO MESSAGE\n         MVC   M33BLOCK,DECIMAL+L'DECIMAL-L'M33BLOCK  LIKE SO\n         LH    R14,INFILE          AND FILE NUMBER\n         BAL   R2,EDIT             ...\n         MVC   M33FILE,DECIMAL+L'DECIMAL-L'M33FILE  LIKE SO\n         LH    R14,DCBBLKSI-IHADCB+TAPE1  GET BLKSIZE IN USE\n         SR    R14,R8              - 1 SINCE WE ADD ONE\n         BAL   R2,EDIT             IT TOO TO MSG\n         MVC   M33BLKSI,DECIMAL+L'DECIMAL-L'M33BLKSI  LIKE SO\n         LA    R3,M33              -> MESSAGE\n         BAL   R2,ERROR            ISSUE IT\n         NOP   0                   IGNORE THIS\n         OI    FLAG2,FLDTAERR      SET TERMINAL FLAG\n         B     COPYTERM            AND GO CLEAN UP, DON'T FSF     SEP79\n         SPACE\nCOPYOK   AR    R6,R8               UP BLOCK COUNT\n         CR    R2,R7               IS THIS A NEW LARGEST BLOCK?\n         BNH   COPYPUT             NO, GO WRITE IT\n         LR    R7,R2               YES, SAVE ITS SIZE\nCOPYPUT  TM    OUTFLAG,FLNOTTP     IS OUTPUT BEING WRITTEN?\n         BO    COPYLOOP            NO, READ ANOTHER BLOCK\n         SPACE\n         STH   R2,DCBLRECL-IHADCB+TAPE2  YES, SET SIZE OF BLOCK\n         LR    R0,R1               COPY ITS LOCATION\n         PUT   TAPE2,(0)           WRITE IT OUT\n         B     COPYLOOP            READ ANOTHER BLOCK\n         SPACE ,                                                  SEP79\n* THIS BLOCK IS BEING SKIPPED DUE TO A READ ERROR.  UPDATE THE    SEP79\n*  COUNT OF INPUT BLOCKS SKIPPED.                                 SEP79\n         SPACE ,                                                  SEP79\nCOPYSKIP L     R14,INPBLSKP        GET COUNT OF BLOCKS SKIPPED    SEP79\n         AR    R14,R8              ADD ONE                        SEP79\n         ST    R14,INPBLSKP        SAVE IT BACK                   SEP79\n         B     COPYLOOP            AND CONTINUE COPY              SEP79\n         SPACE 2\n* TERMINAL READ ERROR OCCURRED. CLOSE TAPE1 WITH REWIND TO\n*  AVOID FORWARD-SPACE-FILE OVER GARBAGE.\n         SPACE\nCOPYTERM CLOSE (TAPE1,REWIND,TAPE2,LEAVE)  CLOSE IT\n         B     COPYEOF0            CONTINUE\n         SPACE 2\n* END OF FILE REACHED.  PUT OUT A NICE MESSAGE AND DO END-OF-FILE\n*  UPDATING.\n         SPACE\nCOPYEOF  CLOSE (TAPE1,LEAVE,TAPE2,LEAVE)  TAPE2 MIGHT NOT BE OPEN\nCOPYEOF0 MVC   DCBEODA-IHADCB+TAPE1,=AL3(EODSL)  RESET EODAD\n         SPACE\n* UPDATE LOGICAL FILE NUMBERS AND PUT THEM IN MSG TPC006I.\n* NOTE: THIS IS DONE BEFORE TRAILER LABEL PROCESSING FOR\n*  SL OUTPUT.  ERROR ROUTINES THERE MUST REMEMBER TO SUBTRACT\n*  ONE FROM INFILE/OUTFILE.\n         SPACE\nCOPYEOF1 LH    R14,INFILE          GET LOGICAL INPUT FILE NUMBER\n         BAL   R2,EDIT             MAKE READABLE\n         MVC   M6FSEQ,DECIMAL+L'DECIMAL-L'M6FSEQ  PUT IN MESSAGE\n         CH    R14,OUTFILE         ARE LOGICAL FILE NUMBERS THE SAME?\n         LA    R14,1(,R14)         .. INCREMENT IT, SAVE COND CODE\n         STH   R14,INFILE          .. SAVE IT BACK\n         BE    COPYEOF2            YES, NO SEPARATE OUTFILE PROCESSING\n         LH    R14,OUTFILE         NO, GET OUTFILE NUMBER\n         BAL   R2,EDIT             AS ABOVE\n         MVC   M6FSEQ2,DECIMAL+L'DECIMAL-L'M6FSEQ2  COPY TO MSG\n         AR    R14,R8              INCREMENT IT\nCOPYEOF2 STH   R14,OUTFILE         SAVE NEW OUTFILE VALUE\n         SPACE\n* UP THE PHYSICAL (BLP) FILE NUMBERS IN THE JFCBS, RESET\n*  DCBBLKSI TO 81, AND RESET DCBTRTCH FOR LABEL PROCESSING.\n         SPACE\n         LA    R4,T1               -> INPUT TAPE CONTROL BLOCKS\n         BALR  R3,0                THIS CODE IS EXECUTED TWICE\n         LH    R1,JFCBFLSQ-JFCB+JFCB1-T(R4)  GET FILE SEQUENCE NUMBER\n         AR    R1,R8               INCREMENT IT\n         STH   R1,JFCBFLSQ-JFCB+JFCB1-T(R4)  REPLACE IT\n         MVC   DCBTRTCH-IHADCB+TAPE1-T(,R4),INTRTCHL-T(R4)  SL TRTCH\n         MVC   INTRTCH2-T(,R4),INTRTCH-T(R4)  RESET THIS ONE TOO\n         MVC   DCBBLKSI-IHADCB+TAPE1-T(,R4),=H'81'  BLKSIZE FOR LBLS\n         LA    R4,T2               -> OUTPUT TAPE CONTROL BLOCKS\n         BALR  R3,R3               REPEAT THE ABOVE\n         OI    FLAG2,FLLBLRW+FLTLRLBL  PRESET FLAGS FOR TRAILER LABELS\n         SPACE\n* FILL IN MESSAGE TPC006I\n* FILL IN THE BLOCK COUNT IN THE EOF1 LABEL\n         SPACE\n         LR    R14,R6              GET BLOCK COUNT\n         BAL   R2,EDIT             INTO\n         MVC   M6BLKCNT,DECIMAL+L'DECIMAL-L'M6BLKCNT  MESSAGE\n         UNPK  FL1BLKCT,TEMP       AND LABEL TOO\n         OI    FL1BLKCT+L'FL1BLKCT-1,C'0'  ...\n         MVC   FL1BLKCT-FL1LABI+FL1SAVE,FL1BLKCT  HERE TOO\n         LR    R14,R7              GET LARGEST BLOCK SIZE\n         BAL   R2,EDIT             INTO\n         MVC   M6BLKSI,DECIMAL+L'DECIMAL-L'M6BLKSI  MESSAGE\n         SPACE\n* ISSUE THE MESSAGE\n         SPACE\n         LA    R3,M6               -> MESSAGE\n         BAL   R2,MESSAGE          ISSUE IT\n         NOP   0                   IGNORE THIS\n         SPACE ,                                                  APR82\n* ISSUE A STRONG WARNING IF THE LARGEST BLOCK SIZE IS 32,760      APR82\n         SPACE ,                                                  APR82\n         C     R7,=F'32760'        IF SO, LOST DATA CAN'T         APR82\n         BL    COPYEOF3              BE DETECTED....              APR82\n         LA    R3,M37              -> WARNING MESSAGE 1           APR82\n         BAL   R2,ERROR            ISSUE IT, SET RETURN CODE      APR82\n         NOP   0                   IGNORE THIS                    APR82\n         MVI   MSGHEADR,C' '       SINGLE-SPACE NEXT MESSAGE      APR82\n         LA    R3,M37B             -> NEXT MESSAGE LINE           APR82\n         BAL   R2,ERROR            ISSUE IT TOO                   APR82\n         NOP   0                   IGNORE THIS TOO                APR82\n         SPACE\n* RETURN TO CALLER\n         SPACE\nCOPYEOF3 BR    R9                  BYE BYE, COME AGAIN SOON       APR82\n         EJECT\n*******************************************************************\n*                                                                 *\n*              END OF PROCESSING                                  *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nEXIT     CLOSE SYSPRINT            FIRST IN CASE TAPE CLOSE BOMBS\n         SPACE\n         CLOSE (TAPE1,REWIND,TAPE2,REWIND)  IN CASE THEY ARE LEFT OPEN\n         SPACE\n         SR    R15,R15             GET THE RETURN CODE\n         IC    R15,RC              PREVIOUSLY SET\n         L     R13,SAVE+4          RESTORE R13\n         RETURN (14,12),T,RC=(15)  GO BACK\n         EJECT\n*******************************************************************\n*                                                                 *\n*              SYSPRINT SYNAD EXIT                                *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nSYNADPR  SYNADAF ACSMETH=QSAM      GET SYNADAF INFO\n         MVC   M8+64(60),68(R1)    COPY INTO MESSAGE\n         SYNADRLS\n         WTO   MF=(E,M8)           ISSUE MESSAGE\n         MVI   RC,16               SET RETURN CODE TO 16\n         B     EXIT                AND HOPE\n         SPACE 2\nM8       WTO   'TPC008A  SYSPRINT OUTPUT ERROR.  TERMINATING.  ERROR IN*\n               FO = AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEF*\n               FFFFFFFFF',ROUTCDE=11,MF=L\n         EJECT\n*******************************************************************\n*                                                                 *\n*              SYNAD EXIT FOR TAPES                               *\n*                                                                 *\n*        REGISTERS MODIFIED: R0-R4, R14-R15                       *\n*        NOTE: R4 POINTS TO THE TAPE CONTROL BLOCKS SO THE        *\n*              ERROR MESSAGE CAN HAVE THE DDNAME IN IT.           *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* SET THE INPUT-ERROR FLAG.\n* IF VOLUME LABEL VERIFICATION IS IN PROGRESS, RETURN; AN\n*  UNREADABLE VOLUME LABEL IS CONSIDERED AS AN UNLABELLED TAPE.\n         SPACE\nSYNAD    OI    FLAG,FLINPERR       SET THE FLAG\n         TM    FLAG,FLVERLBL       ARE WE VERIFYING LABELS?\n         BCR   1,R14               YES, RETURN\n         SPACE\n* SAVE SOME REGISTERS\n         SPACE\n         STM   R0,R1,SYNADR01      R0, R1\n         ST    R14,SYNADR14        RETURN REGISTER\n         NI    FLAG2,255-FLNODATA  RESET NO-DATA-READ FLAG\n         SPACE\n* FILL IN THE BEGINNING OF MSG TPC034A.\n         SPACE\n         LR    R4,R1               R4 -> ERROR DCB\n         S     R4,=A(TAPE1-T)      R4 -> TAPE CONTROL BLOCKS\n         LH    R14,INFILE-T(R4)    GET FILE NUMBER\n         TM    FLAG2,FLLBLRW+FLTLRLBL  IS THIS TRAILER LABELS?\n         BNO   SYNAFLED            NO, SKIP\n         SR    R14,R8              ELSE ADJUST TO RIGHT FILE\nSYNAFLED BAL   R2,EDIT             DECIMALIZE FILE NUMBER\n         MVC   M34FILE,DECIMAL+L'DECIMAL-L'M34FILE  INTO MSG\n         MVI   M34WHERE,C' '       BLANK THIS\n         MVC   M34WHERE+1(L'M34WHERE-1),M34WHERE  OUT\n         TM    FLAG2,FLLBLRW       WERE WE ON LABELS?\n         BZ    SYNANLBL            NO, SKIP\n         MVC   M34WHERE+9(7),=C'LABELS.'  ELSE SET THIS\n         LA    R2,=CL7'TRAILER'    ASSUME TRAILER\n         TM    FLAG2,FLTLRLBL      TEST FOR IT\n         BO    SYNAGLBL            YES, MOVE IT IN\n         LA    R2,=CL7' HEADER'    NO, SET HEADER\nSYNAGLBL MVC   M34WHERE+1(7),0(R2)  PUT IN MESSAGE\n         B     SYNAYLBL            SKIP\nSYNANLBL MVI   M34WHERE,C'.'       NOT LABELS.\n         SPACE\n* TEST FOR INPUT OR OUTPUT ERROR.  OUTPUT ERRORS CANNOT\n*  BE RECOVERED FROM, AND CAUSE IMMEDIATE PROGRAM TERMINATION.\n         SPACE\nSYNAYLBL TM    SYNADR1,X'40'       WAS THIS AN OUTPUT ERROR?\n         BO    SYNAOUTP            YES, BRANCH\n         MVC   M34TYPE,=C' IN'     INPUT, SET MESSAGE\n         SPACE\n* DETERMINE IF THE INPUT ERROR IS UNRECOVERABLE\n         SPACE\n         L     R1,SYNADR0          -> IOB\n         LA    R2,=CL47'CHANNEL/CONTROL ERROR. PROCESSING TERMINATING.'\n         TM    13(R1),X'3F'        TEST CSWSTAT2 FOR CHANNEL ERRORS\n         BNZ   SYNAFTRM            YES, TERMINATE\n         SPACE\n* CERTAIN ERRORS GIVE A SPECIAL MESSAGE AND CAUSE TERMINATION\n*  AFTER TRAILER LABEL PROCESSING.\n         SPACE\n* TEST FOR BUS-OUT CHECK/COMMAND REJECT\n         SPACE\n         TM    2(R1),X'A0'         TEST FOR BUS-OUT CHECK/CMD REJECT\n         BO    SYNAFTRM            YES, SET TERMINATION FLAG\n         SPACE\n* TEST FOR EQUIPMENT CHECK\n         SPACE\n         LA    R2,=CL47'EQUIPMENT CHECK. TAPE MAY BE MIS-POSITIONED.'\n         TM    2(R1),X'10'         TEST FOR EQUIPMENT CHECK\n         BO    SYNAFTRM            YES, SET TERMINATION FLAG\n         SPACE\n* TEST FOR NOT-CAPABLE\n         SPACE\n         LA    R2,=CL47'TAPE DENSITY CANNOT BE READ BY THIS TAPE DRIVE.*\n               '\n         TM    3(R1),X'01'         TEST FOR NOT-CAPABLE\n         BO    SYNAFTRM            YES, SET TERMINATION FLAG\n         SPACE\n* IF THE USER SPECIFIED EROPT=ABE, SET THE TERMINATION FLAG\n         SPACE\n         TM    JFCEROPT-JFCB+JFCB1,JFCABN  DID HE?\n         BO    SYNAMTRM            YES, GET MSG AND SET FLAG\n         SPACE\n* IF NO DATA WAS TRANSFERRED, SKIP THIS BLOCK\n         SPACE\n         TM    SYNADR1,X'10'       WAS ANY?\n         BO    SYNAGOTD            YES, BRANCH\n         OI    FLAG2,FLNODATA      NO, SET FLAG\n         LA    R2,=CL47'NO DATA READ; THIS BLOCK SKIPPED.'  SET MSG\n         B     SYNACOMM            TO COMMON CODE\n         SPACE\n* TEST IF THE USER SPECIFIED EROPT=SKP\n         SPACE\nSYNAGOTD LA    R2,=CL47'THIS BLOCK SKIPPED.'  SET MSG\n         TM    JFCEROPT-JFCB+JFCB1,JFCSKP  DID HE?\n         BO    SYNACOMM            YES, TO COMMON CODE\n         SPACE\n* USER WANTS THE DATA\n         SPACE\n         LA    R2,=CL47'DATA READ WILL BE COPIED.'  SET MSG\n         B     SYNACOMM            TO COMMON CODE\n         SPACE\n* OUTPUT ERROR PROCESSING\n         SPACE\nSYNAOUTP MVC   M34TYPE,=C'OUT'     SET 'OUTPUT'\n         SPACE\n* COMMON AND MORE COMMON CODE FOLLOWS\n         SPACE\nSYNAMTRM LA    R2,=CL47'PROCESSING TERMINATING.'  SET MSG\n         SPACE\nSYNAFTRM OI    FLAG2,FLDTAERR      SET FLAG\n         SPACE\nSYNACOMM MVC   M34WHAT,0(R2)       PUT IT IN THE MESSAGE\n         SPACE\n* WRITE OUT MSG TPC034A\n         SPACE\n         LA    R3,M34              -> MESSAGE\n         LA    R13,SYNADSAV        -> SPECIAL SAVE AREA\n         BAL   R2,ERROR            ISSUE THE MESSAGE\n         NOP   0                   IGNORE THIS\n         SPACE\n* FOLLOW IT WITH A LINE OF SYNAD INFORMATION\n         SPACE\n         MVI   LINE,C' '           BLANKET\n         MVC   LINE+1(L'LINE-1),LINE  OUT\n         MVC   ERRTEXT(20),=C'ERROR INFORMATION = '  HEADER\n         LM    R0,R1,SYNADR01      RESTORE PARM REGISTERS\n         SYNADAF ACSMETH=QSAM      GET THE SYNAD INFO\n         MVC   ERRTEXT+20(60),68(R1)  COPY IT\n         SYNADRLS\n* THE FOLLOWING CONVOLUTION IS TO REGAIN ADDRESSABILITY TO THE    DEC85\n*  SYSPRINT DCBLRECL FIELD (NOW BEYOND ALL BASE REGISTERS).       DEC85\n         LA    R15,SYSPRINT        -> SYSPRINT DCB                DEC85\n         MVI   DCBLRECL+1-IHADCB(R15),ERRTEXT-LINE+80  SET LENGTH DEC85\n         LA    R13,SYNADSAV        MAKE SURE WE HAVE OUR SAVE AREA\n         LH    R1,LINECNT          DECREMENT\n         SR    R1,R8               LINES\n         STH   R1,LINECNT          REMAINING ON PAGE\n         PUT   SYSPRINT,LINE       WRITE IT\n         SPACE\n* IF WE HAVE AN OUTPUT ERROR OR A CHANNEL ERROR, TERMINATE NOW\n         SPACE\n         TM    SYNADR1,X'40'       IS THIS AN OUTPUT ERROR?\n         BO    SYNATERM            YES, TERMINATE\n         L     R1,SYNADR0          -> IOB\n         TM    13(R1),X'3F'        TEST CSWSTAT2 AGAIN\n         BNZ   SYNATERM            BIF CHANNEL ERROR\n         SPACE\n* IF THE USER DEFAULTED EROPT=ACC, DECREMENT THE ERROR COUNT.\n*  IF IT REACHES ZERO, ISSUE A MESSAGE AND SET THE TERMINATION\n*  FLAG.\n         SPACE\n         CLI   JFCEROPT-JFCB+JFCB1,0  WAS EROPT= SPECIFIED?\n         BNE   SYNARETN            YES, NO LIMIT\n         LH    R1,SYNAERLM         NO, GET ERRORS LEFT\n         SR    R1,R8               REDUCE BY 1\n         STH   R1,SYNAERLM         AND SAVE IT BACK\n         BP    SYNARETN            OK, CONTINUE\n         OI    FLAG2,FLDTAERR      NO, SET TERMINATION FLAG\n         LA    R3,M35              AND ISSUE MSG TPC035A\n         BAL   R2,ERROR            ...\n         NOP   0                   IGNORE THIS\n         SPACE\n* RESTORE REGISTERS AND RETURN TO SYNAD ROUTINES\n         SPACE\nSYNARETN LM    R0,R1,SYNADR01      R0, R1\n         LA    R13,SAVE            RESTORE THE SAVE AREA PTR\n         L     R14,SYNADR14        RETURN REGISTER\n         BR    R14                 RETURN\n         SPACE\n* TERMINATE IMMEDIATELY.  SET RETURN CODE TO 16.\n         SPACE\nSYNATERM MVI   RC,16               SET RETURN CODE\n         LA    R13,SAVE            RESTORE THE SAVE AREA PTR\n         B     TERM                GO BYE-BYE\n         SPACE 3\n* SYNAD ROUTINE DATA AREAS\n         SPACE\nSYNADR01 DS    2F                  REGISTER SAVE FOR R0, R1\nSYNADR0  EQU   SYNADR01\nSYNADR1  EQU   SYNADR01+4\nSYNADR14 DS    F                   REGISTER SAVE FOR R14\n         SPACE\nSYNAERLM DC    H'50'               LIMIT IF USER DEFAULTS EROPT=ACC\n         EJECT\n*******************************************************************\n*                                                                 *\n*              MESSAGE ROUTINE                                    *\n*                                                                 *\n*        REGISTERS ON ENTRY TO THIS ROUTINE:                      *\n*              R2: RETURN ADDRESS - 4                             *\n*              R3: -> MESSAGE (SEE MESSAGE FORMAT BELOW)          *\n*              R4: -> TAPE PARMS IF REQUIRED FOR MESSAGE          *\n*                                                                 *\n*        NOTE: RETURN TO R2+4 FACILITATES ISSUING MULTIPLE        *\n*              ERROR MESSAGES WITHOUT OUT-OF-LINE BRANCHING.      *\n*                                                                 *\n*        REGISTERS ALTERED: R0, R1, R14, R15                      *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* ENTER HERE FOR ERROR MESSAGES\n         SPACE\nERROR    OI    FLAG,FLERROR        SHOW WE GOT AN ERROR\n         SPACE 2\n* ENTER HERE FOR NON-ERROR MESSAGES\n         SPACE\nMESSAGE  MVC   LINE(L'MSGHEADR),MSGHEADR  PUT IN HEADER + BLANK\n         MVC   LINE+L'MSGHEADR(L'LINE-L'MSGHEADR),LINE+L'MSGHEADR-1\n         MVI   MSGHEADR,C'0'       DOUBLE-SPACE ON NEXT MESSAGE\n         SPACE\n* CONSTRUCT MESSAGE NUMBER\n         SPACE\n         SR    R14,R14             GET ERROR NUMBER\n         IC    R14,0(,R3)          FROM MESSAGE\n         N     R14,=F'127'         TURN OFF HIGH-ORDER BIT\n         CVD   R14,TEMP            AND PUT INTO THE\n         UNPK  ERRNUM(3),TEMP      TEXT LINE\n         OI    ERRNUM+2,C'0'       MAKE IT READABLE\n         TM    0(R3),X'80'         IS THIS JUST INFORMATIONAL?\n         BZ    ERR0                YES, BRANCH\n         MVI   ERRNUM+3,C'A'       NO, CHANGE LEVEL\nERR0     SR    R1,R1               CLEAR LENGTH ACCUMULATOR\n         IC    R14,1(,R3)          GET TEXT LENGTH\n         N     R14,=F'127'         TURN OFF DDNAME FLAG BIT\n         TM    1(R3),X'80'         IS DDNAME FLAG ON?\n         BZ    ERR2                NO, GO ON\n         SPACE\n* INSERT DDNAME AT BEGINNING OF MESSAGE\n         SPACE\n         LA    R1,L'ERRUGH         UP LENGTH\n         MVC   ERRTEXT(L'ERRUGH),ERRUGH  PUT IN HEADER\n         TM    0(R4),FLIN          IS THIS INPUT?\n         BO    ERR1                YES, MSG SAYS INPUT\n         MVC   ERRTEXT(3),=C'OUT'  NO, MAKE IT SAY OUTPUT\n         MVI   ERRTEXT+17,C'2'     AND \"TAPE2\"\nERR1     TM    FLAG,FLALTNAM       ARE WE USING SYSUT1/2?\n         BZ    ERR2                NO, DONE HERE\n         IC    R15,ERRTEXT+17      YES, SAVE DD NUMBER\n         MVC   ERRTEXT+13(7),=C'SYSUT )'  CHANGE 'TAPE' TO 'SYSUT'\n         STC   R15,ERRTEXT+18      SAVE IT BACK\n         SPACE\n* MOVE IN THE ERROR TEXT\n         SPACE\nERR2     LA    R15,ERRTEXT(R1)     COMPUTE WHERE TO PUT IT\n         EX    R14,ERRMOVE         R14 HAS LENGTH-1 FROM BEFORE\n         LA    R1,ERRTEXT-LINE+1(R1,R14)  COMPUTE TOTAL LENGTH\n* THE FOLLOWING CONVOLUTION IS TO REGAIN ADDRESSABILITY TO THE    DEC85\n*  SYSPRINT DCBLRECL FIELD (NOW BEYOND ALL BASE REGISTERS).       DEC85\n         LA    R15,SYSPRINT        -> SYSPRINT DCB                DEC85\n         STH   R1,DCBLRECL-IHADCB(,R15)  PUT LENGTH IN DCB        DEC85\n         SPACE\n* DECREMENT LINE COUNT.  SKIP TO A NEW PAGE IF NEEDED.\n         SPACE\n         CLI   LINE,C'1'           IS THIS A PAGE SKIP?\n         BE    ERR4                YES, RESET THE LINES-LEFT FIELD\n         LH    R1,LINECNT          ELSE LOAD IT\n         SR    R1,R8               DECREMENT IT\n         CLI   LINE,C' '           IS THIS A SINGLE-SPACE?\n         BE    ERR3                YES, ALL SET\n         SR    R1,R8               ELSE DECREMENT IT AGAIN\n         CLI   LINE,C'0'           IS THIS A DOUBLE-SPACE?\n         BE    ERR3                YES, ALL SET\n         SR    R1,R8               ASSUME TRIPLE-SPACE\nERR3     LTR   R1,R1               ARE ANY LINES LEFT?\n         BP    ERR5                YES, CONTINUE\n         MVI   LINE,C'1'           ELSE FORCE A PAGE EJECT\nERR4     LA    R1,58               AND RESET COUNTER\nERR5     STH   R1,LINECNT          SAVE IT BACK\n         SPACE\n* WRITE OUT THE LINE\n         SPACE\n         PUT   SYSPRINT,LINE       PUT OUT THE LINE\n         B     4(,R2)              RETURN TO WHEREVER\n         SPACE\n* EXECUTED MVC\n         SPACE\nERRMOVE  MVC   0(*-*,R15),2(R3)\n         SPACE 2\n* ENTER HERE TO GIVE MSG TPC002I AND TERMINATE NORMALLY.\n         SPACE\nDONE     TM    FLAG,FLERROR        ANY ERROR MESSAGE WRITTEN?\n         BO    DONEDONE            YES, DON'T ALTER RETURN CODE\n         MVI   RC,0                SET RETURN CODE TO 0\nDONEDONE LA    R2,EXIT-4           SET RETURN POINT\n         LA    R3,M2               ISSUE MESSAGE 2\n         MVI   MSGHEADR,C'-'       2 BLANK LINES FIRST\n         B     MESSAGE             ISSUE IT\n         SPACE 2\n* ENTER HERE TO ISSUE MSG TPC010A AND TERMINATE.\n         SPACE\nTERM     LA    R2,EXIT-4           POINT TO EXIT ROUTINE\n         LA    R3,M10              -> MESSAGE\n         MVI   MSGHEADR,C'-'       2 BLANK LINES FIRST\n         B     ERROR               GO BYE BYE\n         SPACE 2\n* THIS ROUTINE DECIMALIZES THE NUMBER IN R14.\n         SPACE\nEDIT     CVD   R14,TEMP            BINARY -> PACKED DECIMAL\n         MVC   EDECIMAL,MASK       COPY A MASK\n         ED    EDECIMAL,TEMP+4     UNPACK/EDIT THE NUMBER\n         BR    R2                  RETURN\n         SPACE 2\n* CONSTANTS AND OUTPUT AREA\n         SPACE\nERRUGH   DC    C' INPUT TAPE (TAPE1)  - '  INSERTED IF DD FLAG\n         SPACE\nMSGHEADR DC    C'0TPCNNNI '\n         SPACE\nLINE     DS    CL133               OUTPUT AREA\nERRNUM   EQU   LINE+4\nERRTEXT  EQU   LINE+10\n         SPACE\nEDECIMAL DS    0CL9                EDIT WORK AREA\n         DS    CL2                 TWO MAKE THE NUMBER OF NIBBLES RIGHT\nDECIMAL  DS    CL7                 ANSWER COMES OUT HERE\n         SPACE\nMASK     DC    X'40202020206B202120'  BDDDD,DSD\n         SPACE\nLINECNT  DC    H'58'               LINES-LEFT COUNTER\n         EJECT\n*******************************************************************\n*                                                                 *\n*              MESSAGES                                           *\n*                                                                 *\n*        FORMAT: 1 BYTE ERROR NUMBER (BINARY)                     *\n*                  WITH HIGH-ORDER BIT ON IF ACTION-LEVEL         *\n*                1 BYTE TEXT LENGTH - 1                           *\n*                  WITH HIGH-ORDER BIT ON TO INSERT DDNAME        *\n*                FOLLOWED BY ERROR MESSAGE TEXT                   *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n         PRINT NODATA\n         SPACE 2\n*******************************************************************\n*                                                                 *\n*              STATUS MESSAGES                                    *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nM1       DC    AL1(1,M1E-*-2),C'TAPE-TO-TAPE PROGRAM, ARON F. EISENPRES*\n               S  (REV 09/91)            '                        SEP91\n         DC    C'RUN AT '                                         APR82\nM1HH     DC    C'HH',C':'                                         APR82\nM1MM     DC    C'MM',C' ON '                                      APR82\nM1DATE   DC    C'WEDNESDAY, SEPTEMBER XX, YYYY' (MAX LENGTH TEXT) SEP91\nM1E      EQU   *\n         SPACE 2\nM2       DC    AL1(2,M2E-*-2),C'END OF TAPE COPY.'\nM2E      EQU   *\n         SPACE 2\n* ONLY ONE OF THE FOLLOWING TPC003I MESSAGES IS ISSUED FOR EACH TAPE\n         SPACE\nM3A      DC    AL1(3,M3AE-*-2+128),C'VOLUME SERIAL IS '\nM3AVOL   DC    C'VOLSER',C'.'\nM3AE     EQU   *\n         SPACE\nM3B      DC    AL1(3,M3BE-*-2+128),C'EXTERNAL LABEL IS '\nM3BVOLEX DC    C'VOLSER',C', BUT VOLUME SERIAL REALLY IS '\nM3BVOLIN DC    C'VOLSER',C'.'\nM3BE     EQU   *\n         SPACE\nM3C      DC    AL1(3,M3CE-*-2+128),C'THIS IS AN IBM PID TAPE.'\n         DC    C'  THE VOLUME SERIAL IS '                         APR82\nM3CVOL   DC    C'VOLSER',C'.'                                     APR82\nM3CE     EQU   *\n         SPACE\nM3D      DC    AL1(3,M3DE-*-2+128),C'THIS IS NOT A TAPE.  IT WILL BE TR*\n               EATED AS A 1-FILE TAPE WITH NO LABEL PROCESSING.'\nM3DE     EQU   *\n         SPACE\nM3E      DC    AL1(3,M3EE-*-2+128),C'THIS IS NOT A TAPE.  THE INPUT TAP*\n               E WILL BE READ BUT NOTHING WILL BE WRITTEN.'\nM3EE     EQU   *\n         SPACE 2\n* ONLY ONE OF THE FOLLOWING TPC004I MESSAGES IS ISSUED\n         SPACE\nM4       DC    AL1(4,M4E-*-2)\nM4BUFNO  DC    C'NNN',C' BUFFERS OF '\nM4BLKSI  DC    C'NN,NNN',C' BYTES WILL BE USED FOR EACH TAPE.'\nM4E      EQU   *\n         SPACE\nM4A      DC    AL1(4,M4AE-*-2)\nM4ABUFNO DC    C'NNN',C' BUFFERS OF '\nM4ABLKSI DC    C'NN,NNN',C' BYTES (OR BLKSIZE+1 FOR EACH FILE, IF LARGE*\n               R, TO 32,760) WILL BE USED FOR EACH TAPE.'         APR81\nM4AE     EQU   *\n         SPACE 2\nM5       DC    AL1(5,M5E-*-2+128),C'LEADING TAPE MARK WAS FOUND AND HAS*\n                BEEN SKIPPED OVER.'\nM5E      EQU   *\n         SPACE 2\nM6       DC    AL1(6,M6E-*-2),C'FILE '\nM6FSEQ   DC    C'NNN',C' '\nM6PART1  DC    C'COPIED.'          OR 'READ' IF O/P NOT A TAPE\nM6PART2  DC    C'            '     OR SEE BELOW\n         ORG   M6PART2-1           FOLLOWING IF FSEQ \u00ac= FSEQ2\nM6PART2A DS    C' TO FILE',C' '    NOTE\nM6FSEQ2  DS    C'NNN'              THE\nM6PART2B DS    C'.'                DS'S\n         ORG   ,                   SHOULD BE HERE ALREADY\n         DC    C'  BLOCKS '\nM6PART3  DC    C'WRITTEN',C' = '   OR 'READ'\nM6BLKCNT DC    C'NNN,NNN',C';  LONGEST BLOCK = '\nM6BLKSI  DC    C'NN,NNN',C' BYTES.'\nM6END1   EQU   *                   END HERE IF NL/NL COPY\n         DC    C'  '\nM6PART4  DC    C'OUTPUT'           OR 'INPUT'\n         DC    C' DSN = '\nM6DSN    DC    CL17'DSNAME',C'.'\nM6E      EQU   *\n         SPACE 2\nM10      DC    AL1(10+128,M10E-*-2),C'TAPE COPY REQUEST IS TERMINATED.'\nM10E     EQU   *\n         SPACE 2\n*******************************************************************\n*                                                                 *\n*              PARAMETER ERROR MESSAGES                           *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nM11      DC    AL1(11+128,M11E-*-2),C'DD CARDS FOR TAPE1/TAPE2 OR SYSUT*\n               1/SYSUT2 ARE NOT PRESENT.  TOO BAD.'\nM11E     EQU   *\n         SPACE 2\nM12      DC    AL1(12+128,M12E-*-2+128),C'MULTIPLE VOLUMES WERE SPECIFI*\n               ED BUT CANNOT BE HANDLED BY TAPECOPY.  USE IEBGENER OR A*\n               NOTHER UTILITY.'\nM12E     EQU   *\n         SPACE 2\nM13      DC    AL1(13+128,M13E-*-2+128),C'LABEL=(,AL) OR (,NSL) WAS SPE*\n               CIFIED BUT CANNOT BE HANDLED BY TAPECOPY.  TOO BAD.'\nM13E     EQU   *\n         SPACE 2\nM14      DC    AL1(14+128,M14E-*-2+128),C'DCB=OPTCD=C OR Q WAS SPECIFIE*\n               D BUT CANNOT BE HANDLED BY TAPECOPY.  TOO BAD.'\nM14E     EQU   *\n         SPACE 2\nM15      DC    AL1(15+128,M15E-*-2+128),C'IF YOU SPECIFY THE ACTUAL LAB*\n               EL IN THE PARM FIELD, YOU MUST SPECIFY LABEL=(,BLP).'\nM15E     EQU   *\n         SPACE 2\nM16      DC    AL1(16+128,M16E-*-2+128),C'IT IS NOT POSSIBLE TO RELABEL*\n                A TAPE IF YOU DO NOT START WRITING AT THE BEGINNING.  T*\n               OO BAD.'\nM16E     EQU   *\n         SPACE 2\nM17      DC    AL1(17+128,M17E-*-2+128),C'PARM=PID IS VALID ONLY WITH L*\n               ABEL=(,NL).  TOO BAD.'\nM17E     EQU   *\n         SPACE 2                                                  APR81\nM18      DC    AL1(18+128,M18E-*-2+128),C'A VOLUME SERIAL MUST '  APR81\n         DC    C'BE SPECIFIED TO IDENTIFY THE INPUT TAPE.'        APR81\nM18E     EQU   *                                                  APR81\n         SPACE 2                                                  APR81\nM19      DC    AL1(19+128,M19E-*-2+128),C'NO VOLUME SERIAL '      APR81\n         DC    C'WAS SPECIFIED.  TAPECOPY CANNOT HANDLE SCRATCH ' APR81\n         DC    C'TAPES.  TOO BAD.'                                APR81\nM19E     EQU   *                                                  APR81\n         SPACE 2\n*******************************************************************\n*                                                                 *\n*              LABEL VERIFICATION ERROR MESSAGES                  *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nM21      DC    AL1(21+128,M21E-*-2+128),C'TAPE HAS STANDARD LABELS (VOL*\n               UME SERIAL IS '\nM21VOL   DC    C'VOLSER',C') BUT JCL DOES NOT SPECIFY LABEL=(,SL).'\nM21E     EQU   *\n         SPACE 2\nM22      DC    AL1(22+128,M22E-*-2+128),C'TAPE HAS STANDARD LABELS (VOL*\n               UME SERIAL IS '\nM22VOL   DC    C'VOLSER',C') BUT VOLUME SERIAL DOES NOT MATCH THAT SPEC*\n               IFIED.'\nM22E     EQU   *\n         SPACE 2\nM23      DC    AL1(23+128,M23E-*-2+128),C'TAPE WAS SPECIFIED AS HAVING *\n               STANDARD LABELS, BUT IT CANNOT BE READ.  TOO BAD.'\nM23E     EQU   *\n         SPACE 2\nM24      DC    AL1(24+128,M24E-*-2+128),C'TAPE WAS SPECIFIED AS HAVING *\n               STANDARD LABELS, BUT IT DOESN''T.  TOO BAD.'\nM24E     EQU   *\n         SPACE 2\nM25      DC    AL1(25+128,M25E-*-2+128),C'EXPIRATION DATE ('      APR82\nM25EXPDY DC    C'CCYY',C'/'                                       SEP91\nM25EXPDD DC    C'DDD',C') HAS NOT BEEN REACHED.  TAPE CANNOT '    SEP91\n         DC    C'BE OVERWRITTEN.'                                 APR82\nM25E     EQU   *                                                  APR82\n         SPACE 2\n*******************************************************************\n*                                                                 *\n*              EXECUTION ERROR MESSAGES                           *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nM31      DC    AL1(31+128,M31E-*-2)\nM31STOR  DC    C'N,NNN',C' K IS REQUIRED FOR BUFFERS BUT NOT AVAILABLE *\n               IN THE REGION.  RERUN TAPECOPY IN A LARGER REGION.'\nM31E     EQU   *\n         SPACE 2\nM32      DC    AL1(32+128,M32E-*-2+128),C'LABEL ERROR.  '         APR82\nM32EXPCT DC    C'HDRX',C' LABEL FOR FILE '\nM32FSEQ  DC    C'NNN',C' IS '\nM32RESON DC    CL17'MESSED UP'     UNREADABLE/BAD LENGTH/FORMAT/MISSING\n         DC    C'  RUN TPLABELS WITH PARM=FULL.'\nM32E     EQU   *\n         SPACE 2\nM33      DC    AL1(33+128,M33E-*-2),C'BLOCK '\nM33BLOCK DC    C'NNN,NNN',C' IN FILE '\nM33FILE  DC    C'NNN',C' OF THE INPUT TAPE EXCEEDS THE BLKSIZE USED ('\nM33BLKSI DC    C'NN,NNN',C' BYTES).  SPECIFY DCB=BLKSIZE= FOR TAPE1.'\nM33E     EQU   *\n         SPACE 2\nM34      DC    AL1(34+128,M34E-*-2+128)\nM34TYPE  DC    C' IN',C'PUT ERROR IN FILE '\nM34FILE  DC    C'NNN'\nM34WHERE DC    CL16' TRAILER LABELS.',C'  '\nM34WHAT  DC    CL47'TAPE DENSITY CANNOT BE READ BY THIS TAPE DRIVE.'\nM34E     EQU   *\n         SPACE 2\nM35      DC    AL1(35+128,M35E-*-2),C'TOO MANY ERRORS.  SPECIFY DCB=ERO*\n               PT=ACC EXPLICITLY TO ALLOW AN UNLIMITED NUMBER OF INPUT *\n               ERRORS.'\nM35E     EQU   *\n         SPACE 2                                                  SEP79\nM36      DC    AL1(36+128,M36E-*-2),C'** WARNING ** INPUT '       SEP79\n         DC    C'BLOCK COUNT ('                                   SEP79\nM36BLLBL DC    C'NNN,NNN',C') IN '                                SEP79\nM36LABEL DC    C'XXX1',C' LABEL FOR FILE '                        SEP79\nM36FILE  DC    C'NNN',C' DOES NOT MATCH NUMBER OF BLOCKS READ ('  SEP79\nM36BLEXP DC    C'NNN,NNN',C').'                                   SEP79\nM36E     EQU   *                                                  SEP79\n         SPACE 2                                                  APR82\nM37      DC    AL1(37+128,M37E-*-2),C'** WARNING ** LARGEST '     APR82\n         DC    C'BLOCK LENGTH IS 32,760 -- POSSIBLE LOSS OF '     APR82\n         DC    C'DATA IF ACTUAL BLOCK LENGTH IS LARGER.'          APR82\nM37E     EQU   *                                                  APR82\n         SPACE 2                                                  APR82\nM37B     DC    AL1(37+128,M37BE-*-2),C'** WARNING **   (DO NOT '  APR82\n         DC    C'USE TAPECOPY FOR FDR/DSF BACKUP TAPES, AS '      APR82\n         DC    C'DATA WILL BE LOST.)'                             APR82\nM37BE    EQU   *                                                  APR82\n         SPACE 3\n*******************************************************************\n*                                                                 *\n*              DESCRIPTIVE TEXT                                   *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* THE FOLLOWING PIECES ARE USED TO CONSTRUCT THE LINES\n*  FOLLOWING MESSAGE TPC003I FOR EACH TAPE.\n         SPACE 2\nD0       DC    AL1(D0E-*-2),C'.'\nD0E      EQU   *\n         SPACE 2\nD1A      DC    AL1(D1AE-*-2),C'THIS TAPE HAS '\nD1AE     EQU   *\n         SPACE\nD1B      DC    AL1(D1BE-*-2),C'NO LABELS'\nD1BE     EQU   *\n         SPACE\nD1C      DC    AL1(D1CE-*-2),C' AND MAY START WITH A TAPE MARK'\nD1CE     EQU   *\n         SPACE\nD1D      DC    AL1(D1DE-*-2),C'STANDARD LABELS.'\nD1DE     EQU   *\n         SPACE\nD1E      DC    AL1(D1EE-*-2),C'LABELS (IF ANY) ON THIS TAPE WILL NOT BE*\n                CHECKED'\nD1EE     EQU   *\n         SPACE\nD1F      DC    AL1(D1FE-*-2),C' AND WILL BE TREATED AS DATA FILES'\nD1FE     EQU   *\n         SPACE 2\nD2A      DC    AL1(D2AE-*-2),C'THIS TAPE WILL BE '\nD2AE     EQU   *\n         SPACE\nD2B      DC    AL1(D2BE-*-2),C'RE'\nD2BE     EQU   *\n         SPACE\nD2C      DC    AL1(D2CE-*-2),C'LABELLED AS '\nD2NEWVOL DC    C'VOLSER'\nD2CE     EQU   *\n         SPACE\nD2D      DC    AL1(D2DE-*-2),C' WITH OWNER='\nD2OWNER  DC    CL10'OWNER'\nD2DE     EQU   *\n         SPACE 2\nD3       DC    AL1(D3E-*-2),C'THE TAPE COPY WILL START AT FILE '\nD3FLSQ   DC    C'NNN',C'.  '\nD3E      EQU   *\n         SPACE 2\nD4       DC    AL1(D4E-*-2),C'NOT MORE THAN '\nD4LIMIT  DC    C'NNN',C' FILES WILL BE READ.'\nD4E      EQU   *\n         SPACE 2\nD5A      DC    AL1(D5AE-*-2),C'AFTER AN INPUT ERROR, '\nD5AE     EQU   *\n         SPACE\nD5B      DC    AL1(D5BE-*-2),C'THE BAD BLOCK WILL BE SKIPPED.'\nD5BE     EQU   *\n         SPACE\nD5C      DC    AL1(D5CE-*-2),C'PROCESSING WILL TERMINATE.'\nD5CE     EQU   *\n         SPACE\nD5D      DC    AL1(D5DE-*-2),C'IF ANY DATA WAS READ IT WILL BE COPIED.'\nD5DE     EQU   *\n         SPACE\nD5E      DC    AL1(D5EE-*-2),C' (THIS IS THE DEFAULT.)'\nD5EE     EQU   *\n         SPACE 2\nD6       DC    AL1(D6E-*-2),C'SINCE THE INPUT TAPE IS NOT LABELLED, DSN*\n               AMES OF FILE0001, FILE0002, ... WILL BE CREATED.'\nD6E      EQU   *\n         SPACE 2\nD7       DC    AL1(D7E-*-2),C'NO DCB INFORMATION WAS SPECIFIED TO BE PL*\n               ACED IN THE OUTPUT TAPE LABELS.'\nD7E      EQU   *\n         SPACE 2\nD8A      DC    AL1(D8AE-*-2),C'RECFM'\nD8AE     EQU   *\n         SPACE\nD8B      DC    AL1(D8BE-*-2),C'BLKSIZE'\nD8BE     EQU   *\n         SPACE\nD8C      DC    AL1(D8CE-*-2),C'LRECL'\nD8CE     EQU   *\n         SPACE\nD8D      DC    AL1(D8DE-*-2),C' AND '\nD8DE     EQU   *\n         SPACE\nD8E      DC    AL1(D8EE-*-2),C' WILL BE PLACED IN THE OUTPUT TAPE LABEL*\n               S '\nD8EE     EQU   *\n         SPACE\nD8F      DC    AL1(D8FE-*-2),C'AS SPECIFIED.'\nD8FE     EQU   *\n         SPACE\nD8G      DC    AL1(D8GE-*-2),C'IF THE INPUT HAS NO HDR2 LABELS.'\nD8GE     EQU   *\n         EJECT\n*******************************************************************\n*                                                                 *\n*              TAPE LABEL FORMATS                                 *\n*                                                                 *\n*        FIELDS MARKED * WILL ALWAYS BE REPLACED IN OUTPUT        *\n*              LABELS.                                            *\n*        FIELDS MARKED + WILL BE REPLACED IN OUTPUT LABELS ONLY   *\n*              IF THE INPUT TAPE WAS NOT LABELLED OR DID NOT      *\n*              HAVE HDR2 LABELS.                                  *\n*        FIELDS MARKED - ARE PROCESSED SPECIALLY:                 *\n*              VOLOWNER WILL BE REPLACED IF THE LABEL ON THE      *\n*               OUTPUT TAPE IS BEING REWRITTEN AND THE 3RD        *\n*               EXEC CARD PARAMETER WAS SPECIFIED.                *\n*              FL1EXPDT WILL BE REPLACED IF IT WAS SPECIFIED      *\n*               IN THE JCL.                                       *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n         PRINT DATA\n         SPACE 2\n* FORMAT OF VOLUME LABEL\n         SPACE\nVOLLABI  DC    C'VOL'\nVOLNO    DC    C'1'\nVOLSERNO DC    CL6' '            * VOLUME SERIAL\n         DC    C' '                (UNUSED, WAS VOLUME SECURITY)  SEP91\n         DC    CL24' '                                            SEP91\nVOLTRTCH DC    CL2' '              TAPE RECORDING TECHNIQUE?      SEP91\n*                                       (P=COMPACTION)            SEP91\n         DC    CL4' '                                             SEP91\nVOLOWNER DC    CL10' '           - OWNER\n         DC    CL29' '\n         SPACE 2\n* FORMAT OF DATASET LABEL 1\n         SPACE\nFL1LABI  DC    C'HDR'              OR 'EOV' OR 'EOF'\nFL1NO    DC    C'1'\nFL1ID    DC    CL17' '           + LOW-ORDER 17 BYTES OF DSNAME\nFL1FILSR DC    CL6' '            * VOLUME SERIAL\nFL1VOLSQ DC    C'0001'\nFL1FILSQ DC    C'0001'           * FILE SEQUENCE\nFL1GNO   DC    CL4' '              GENERATION NUMBER\nFL1VNG   DC    CL2' '              VERSION NUMBER\nFL1CREDT DC    C'CYYDDD'         * CREATION DATE\nFL1EXPDT DC    C'CYYDDD'         - EXPIRATION DATE\nFL1FSEC  DC    C'0'                NO SECURITY\nFL1BLKCT DC    C'000000'         * BLOCK COUNT\nFL1SYSCD DC    CL13'IBM MVS/DFP' + SYSTEM CODE                    SEP91\n* NOTE: PRIOR TO DFP V3, THE SYSTEM CODE WAS C'IBM OS/VS 370'     SEP91\n         DC    CL3' '                                             SEP91\nFL1BLKHI DC    CL4' '              BLOCK COUNT HIGH-ORDER FIELDS  SEP91\n         SPACE 2\n* FORMAT OF DATASET LABEL 2\n         SPACE\nFL2LABI  DC    C'HDR'              OR 'EOV' OR 'EOF'\nFL2NO    DC    C'2'\nFL2RECFM DC    CL1' '            + RECFM (U/F/V)\nFL2BLKL  DC    CL5' '            + BLKSIZE\nFL2LRECL DC    CL5' '            + LRECL, OR '99999' FOR LRECL=X\nFL2DEN   DC    CL1' '            * DENSITY\nFL2FILP  DC    C'0'\nFL2JOBD  DC    CL8' '            * JOBNAME\nFL2JSSP  DC    C'/'\nFL2STEPD DC    CL8' '            * STEPNAME\nFL2TRTCH DC    CL2' '            * TRTCH FOR 7-TRACK TAPE\n*                                    OR FOR 3480/3490 COMPACTION  SEP91\nFL2CNTRL DC    CL1' '            + PRINTER CONTROL (A/M)\n         DC    C' '\nFL2BLKA  DC    CL1' '            + BLOCK ATTRIBUTE (B/S/R)\n         DC    CL3' '\nFL2ID    DC    CL5' '            * 34XX ONLY: CREATING TAPE SERIAL\nFL2DSIND DC    CL1' '              DATASET INDICATOR (C=CHKPT DS) SEP91\n         DC    CL32' '                                            SEP91\n         SPACE 3\n* SAVE AREAS FOR FL1/2 LABELS READ FROM INPUT TAPE\n         SPACE\nFL1SAVE  DS    CL80\n         SPACE\nFL2SAVE  DS    CL80\n         EJECT\n*******************************************************************\n*                                                                 *\n*              ASSORTED CONSTANTS AND INCONSTANTS                 *\n*                                                                 *\n*******************************************************************\n         SPACE ,\n         LTORG\n         EJECT\n*******************************************************************\n*                                                                 *\n*              FLAGS                                              *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* A USEFUL FLAG\n         SPACE\nFLAG     DC    AL1(0)\n* DEFINITION OF FLAG BITS:\nFLALTNAM EQU   X'80'               ON= USING SYSUT1/2, NOT TAPE1/2\nFLERROR  EQU   X'40'               ON= TERMINATING CONDITION DETECTED\nFLOWNER  EQU   X'20'               ON= NEW OWNER INFO SPECIFIED\nFLVERLBL EQU   X'10'               ON= LABEL BEING READ (FOR SYNAD)\nFLINPERR EQU   X'08'               ON= READ ERROR (SET BY SYNAD)\nFLDENFIX EQU   X'04'               ON= DENSITY ETC FILLED IN AFTER OPEN\n         SPACE\n* ANOTHER FLAG\n         SPACE\nFLAG2    DC    AL1(0)\n* DEFINITION OF FLAG2 BITS:\nFLEOV    EQU   X'80'               ON= EOV LABEL FOUND\nFLLBLEOF EQU   X'40'               ON= EOF ON LABEL FILE\nFLLBLERR EQU   X'20'               ON= ERROR ON LABEL FILE\nFLDTAERR EQU   X'10'               ON= TERMINATING ERROR ON DATA FILE\nFLNODATA EQU   X'08'               ON= SYNAD FOUND NO DATA WAS READ\nFLLBLRW  EQU   X'04'               ON= READING/WRITING LABELS\nFLTLRLBL EQU   X'02'               ON= PROCESSING TRAILER LABELS\n         SPACE 2\n*******************************************************************\n*                                                                 *\n*              SPECIFICATION PARAMETERS                           *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nOWNER    DC    CL10' '             OWNER ID (PARM3) IF GIVEN\n         SPACE\nBUFNO    DC    H'2'                BUFNO FOR TAPE1/2\nBLKSIZE  DC    F'10231'            BLKSIZE FOR TAPE1/2\nLIMIT    DC    F'0'                LIMIT ON NUMBER OF FILES TO COPY\n         SPACE 2\n*******************************************************************\n*                                                                 *\n*              TABLES                                             *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* TABLE FOR TRTCH CONVERSION BETWEEN EBCDIC AND JFCTRTCH VALUES.\n         SPACE\nTRTCHADR DC    A(TRTCHTBL,TRTCHTB2-TRTCHTBL,TRTCHTBE)\n         SPACE\nTRTCHTBL DC    AL1(JFCEVEN),C'E '\nTRTCHTB2 DC    AL1(JFCTRAN),C'T '\n         DC    AL1(JFCCONV),C'C '\n*        DC    AL1(JFCCOMP),C'P '  3480/3490 COMPRESSION?         SEP91\nTRTCHTBE DC    AL1(JFCTREV),C'ET'\n         DC    AL1(0),C'  '        OVERFLOW ENTRY\n         SPACE 2\n* TABLE OF LABEL IDS FOR INPUT LABEL VERIFICATION.\n         SPACE\nLABLTABL DC    C'UHL '             INDEXED BY R5 DURING LABEL READ\n         DC    C'HDR1'\n         DC    C'HDR2'\n         DC    C'UTL '\n         DC    C'EOF1'\n         DC    C'EOF2'\n         SPACE 2                                                  APR82\n* TABLE OF DAY NAMES, FOR HEADER LINE                             APR82\n         SPACE ,                                                  APR82\nDAYS     DS    0F                                                 APR82\n         DC    AL1(L'DAY0-1),AL3(DAY0-DAY0)                       APR82\n         DC    AL1(L'DAY1-1),AL3(DAY1-DAY0)                       APR82\n         DC    AL1(L'DAY2-1),AL3(DAY2-DAY0)                       APR82\n         DC    AL1(L'DAY3-1),AL3(DAY3-DAY0)                       APR82\n         DC    AL1(L'DAY4-1),AL3(DAY4-DAY0)                       APR82\n         DC    AL1(L'DAY5-1),AL3(DAY5-DAY0)                       APR82\n         DC    AL1(L'DAY6-1),AL3(DAY6-DAY0)                       APR82\nDAY0     DC    C'SUNDAY'                                          APR82\nDAY1     DC    C'MONDAY'                                          APR82\nDAY2     DC    C'TUESDAY'                                         APR82\nDAY3     DC    C'WEDNESDAY'                                       APR82\nDAY4     DC    C'THURSDAY'                                        APR82\nDAY5     DC    C'FRIDAY'                                          APR82\nDAY6     DC    C'SATURDAY'                                        APR82\n         SPACE 2                                                  APR82\n* TABLE OF MONTH NAMES, LIKEWISE                                  APR82\n         SPACE ,                                                  APR82\nMONTHS   DS    0F                                                 APR82\n         DC    AL1(L'MONTH1-1),AL3(MONTH1-MONTH1)                 APR82\n         DC    AL1(L'MONTH2-1),AL3(MONTH2-MONTH1)                 APR82\n         DC    AL1(L'MONTH3-1),AL3(MONTH3-MONTH1)                 APR82\n         DC    AL1(L'MONTH4-1),AL3(MONTH4-MONTH1)                 APR82\n         DC    AL1(L'MONTH5-1),AL3(MONTH5-MONTH1)                 APR82\n         DC    AL1(L'MONTH6-1),AL3(MONTH6-MONTH1)                 APR82\n         DC    AL1(L'MONTH7-1),AL3(MONTH7-MONTH1)                 APR82\n         DC    AL1(L'MONTH8-1),AL3(MONTH8-MONTH1)                 APR82\n         DC    AL1(L'MONTH9-1),AL3(MONTH9-MONTH1)                 APR82\n         DC    AL1(L'MONTH10-1),AL3(MONTH10-MONTH1)               APR82\n         DC    AL1(L'MONTH11-1),AL3(MONTH11-MONTH1)               APR82\n         DC    AL1(L'MONTH12-1),AL3(MONTH12-MONTH1)               APR82\n         DC    AL1(L'MONTH13-1),AL3(MONTH13-MONTH1)               APR82\nMONTH1   DC    C'JANUARY'                                         APR82\nMONTH2   DC    C'FEBRUARY'                                        APR82\nMONTH3   DC    C'MARCH'                                           APR82\nMONTH4   DC    C'APRIL'                                           APR82\nMONTH5   DC    C'MAY'                                             APR82\nMONTH6   DC    C'JUNE'                                            APR82\nMONTH7   DC    C'JULY'                                            APR82\nMONTH8   DC    C'AUGUST'                                          APR82\nMONTH9   DC    C'SEPTEMBER'                                       APR82\nMONTH10  DC    C'OCTOBER'                                         APR82\nMONTH11  DC    C'NOVEMBER'                                        APR82\nMONTH12  DC    C'DECEMBER'                                        APR82\nMONTH13  DC    C'INVALID'          IN CASE DAY=366 NON-LEAP YR    APR82\n         SPACE 2\n*******************************************************************\n*                                                                 *\n*              MISCELLANEOUS                                      *\n*                                                                 *\n*******************************************************************\n         SPACE 2\n* DCB EXIT LISTS\n         SPACE\n         DC    0F'0'\nLIST1    DC    X'87',AL3(JFCB1)\nLIST2    DC    X'87',AL3(JFCB2)\n         SPACE\n* SAVE AREAS\n         SPACE\nSAVE     DS    18F\nSYNADSAV DS    18F                 ALTERNATE SAVE DURING SYNAD\n         SPACE\n* DOUBLEWORD-ALIGNED WORK AREA\n         SPACE\nTEMP     DS    D\n         SPACE ,                                                  APR82\n* ANOTHER WORK AREA (FULLWORD ONLY)                               APR82\n         SPACE ,                                                  APR82\nTEMP2    DS    F                                                  APR82\n         SPACE\n* NUMBER OF BLOCKS SKIPPED ON INPUT TAPE                          SEP79\n         SPACE ,                                                  SEP79\nINPBLSKP DC    F'0'                BLOCKS SKIPPED THIS INPUT FILE SEP79\n         SPACE\n* RETURN-CODE SAVE BYTE\n         SPACE\nRC       DC    AL1(0)              RETURN CODE\n         SPACE\n* BLOCK SIZE FROM LABEL, USED IF LARGER THAN BLKSIZE FOR\n*  DATA-FILE BUFFER ALLOCATION.\n         SPACE\nINPBLKSI DC    CL5' '              LABEL BLOCK SIZE\n         SPACE ,                                                  APR82\n* TODAY'S DATE, IN CHARACTER (FOR EXPDT CHECK)                    APR82\n         SPACE ,                                                  APR82\nDATE     DC    C'CYYDDD'                                          SEP91\n         SPACE ,                                                  DEC85\n* TRANSLATE TABLE (VIRTUAL ORIGIN IS *-C'0', OR *-240)            DEC85\n*  TO CONVERT UNPACKED HEX VALUES OF A-F (X'FA'-X'FF')            DEC85\n*  INTO READABLE CHARACTER VALUES (C'A' THROUGH C'F').            DEC85\n         SPACE ,                                                  DEC85\nHEXSTUFF DC    C'0123456789ABCDEF'                                DEC85\n         SPACE ,                                                  SEP91\n* CENTURY TRANSLATION TABLE, TO CONVERT CENTURY TO TAPE LABEL     SEP91\n*  CHARACTER (19XX=BLANK, 20XX=0, 21XX=1)                         SEP91\n         SPACE ,                                                  SEP91\nXLATECYY DC    C' 01'                                             SEP91\n         EJECT\n*******************************************************************\n*                                                                 *\n*              TAPE CONTROL BLOCKS                                *\n*                                                                 *\n*        THE FOLLOWING MUST APPEAR IN THE SAME ORDER FOR          *\n*         THE INPUT AND OUTPUT TAPES:                             *\n*              FLAG BYTE                                          *\n*              LABEL TYPE                                         *\n*              TRTCH SAVE BYTES                                   *\n*              VOLUME SERIAL                                      *\n*              LOGICAL FILE SEQUENCE NUMBER                       *\n*              JFCB                                               *\n*              DCB                                                *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nT        DS    0F                  FOR COMMON CODE REFERENCES\n         SPACE 2\n*******************************************************************\n*                                                                 *\n*              CONTROL BLOCKS FOR TAPE1                           *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nT1       DS    0F\nINFLAG   DC    AL1(FLIN)           THIS IS THE INPUT TAPE\n* FLAG BITS IN IN/OUTFLAG:\nFLIN     EQU   X'80'               ON= THIS IS THE INPUT TAPE\nFLRELBL  EQU   X'40'               ON= OUTPUT TAPE, TO BE RELABELLED\nFLSEVEN  EQU   X'20'               ON= THIS IS A 7-TRACK TAPE\nFLNOTTP  EQU   X'10'               ON= THIS IS NOT A REAL TAPE\nFLPID    EQU   X'08'               ON= PID OPTION FOR INPUT TAPE\nFLINTEXT EQU   X'04'               ON= INTERNAL LABEL \u00ac= EXTERNAL LABEL\nFLGOTLTM EQU   X'02'               ON= LTM FOUND DURING LABEL VER\n         SPACE\nINLABEL  DC    AL1(0)              SET DURING SPECIFICATION PROCESSING\nINTRTCH  DC    AL1(0)               \"    \"           \"           \"\nINTRTCH2 DC    AL1(0)              SET FROM HDR LABEL OR INTRTCH\nINTRTCHL DC    AL1(0)              SET TO ET IF LABELLED\nINVOL    DC    XL6'00'             SET FROM PARM FIELD OR JFCB\nINFILE   DC    H'1'                SET FROM LABEL= IN JCL\nJFCB1    DS    44F                 JFCB FOR INPUT TAPE\n         SPACE\nTAPE1    DCB   BFALN=D,BFTEK=S,DDNAME=TAPE1,DEVD=TA,DSORG=PS,EROPT=ACC,*\n               EXLST=LIST1,MACRF=GL,RECFM=U,SYNAD=SYNAD\n         EJECT\n*******************************************************************\n*                                                                 *\n*              CONTROL BLOCKS FOR TAPE2                           *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nT2       DS    0F\nOUTFLAG  DC    AL1(0)              THIS IS THE OUTPUT TAPE\nOUTLABEL DC    AL1(0)              SET DURING SPECIFICATION PROCESSING\nOUTTRTCH DC    AL1(0)               \"    \"           \"           \"\nOUTTRCH2 DC    AL1(0)              SET FROM OUTTRTCH OR INPUT\nOUTTRCHL DC    AL1(0)              SET TO ET IF LABELLED\nOUTVOL   DC    XL6'00'             SET FROM PARM FIELD OR JFCB\nOUTFILE  DC    H'1'                SET FROM LABEL= IN JCL\nJFCB2    DS    44F                 JFCB FOR OUTPUT TAPE\n         SPACE\nTAPE2    DCB   BFALN=D,BFTEK=S,DDNAME=TAPE2,DEVD=TA,DSORG=PS,EROPT=ACC,*\n               EXLST=LIST2,MACRF=(GL,PM),RECFM=U,SYNAD=SYNAD\n         EJECT\n*******************************************************************\n*                                                                 *\n*              SYSPRINT DCB                                       *\n*                                                                 *\n*******************************************************************\n         SPACE 2\nSYSPRINT DCB   BLKSIZE=133,DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),        *\n               RECFM=UA,SYNAD=SYNADPR\n         TITLE '           TAPECOPY - SYSTEM DSECTS'\n         DCBD  DSORG=PS,DEVD=TA\n         EJECT\n         IEZDEB\n         EJECT\nJFCB     DSECT\n         IEFJFCBN\n         EJECT\nTIOT     DSECT\n         IEFTIOT1\n         EJECT\nUCB      DSECT\n         IEFUCBOB\n         SPACE 5\n         END   BEGINING                                           APR82\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT174/FILE174.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT174", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}