{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012617000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE693.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE693.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\t\\x03'", "DS1TRBAL": "b'\\xb6\\x9e'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xd4\\x00\\x08\\x04\\xd5\\x00\\x02\\x00\\n'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04O\\x00@\\x01\\x10\\x16/\\x01\\x10\\x16/\\x11$\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf9@@@'", "ispf": {"version": "04.79", "flags": 0, "createdate": "2010-06-11T00:00:00", "modifydate": "2010-06-11T11:24:40", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-479"}, "text": "REGULAR CBT TAPE - VERSION 479    FILE:  693\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT479.FILE693\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 22 MEMBERS COUNTED; CUMULATIVE SIZE IS 4,123 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   06/11/10    11:24:39    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x19\\x00'\\x01\\x04'_\\x01\\x10\\x16\\x0f\\x10H\\x00j\\x00\\xa5\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@\"", "ispf": {"version": "01.25", "flags": 0, "createdate": "2004-10-01T00:00:00", "modifydate": "2010-06-09T10:48:27", "lines": 106, "newlines": 165, "modlines": 0, "user": "TKMILLE"}, "text": " LAST UPDATE: 06/09/2010  Version 01.01.09\n                          TERRY MILLER\n                          CONOCOPHILLIPS\n                          tkmille@ConocoPhillips.com\n\n MODIFICATION LEVEL: V01.01.09\n\n ADDED THE \"NOMSG\" PARAMETER TO THE ZERODIR REXX EXEC TO\n SUPPRESS MESSAGES FROM THE CONSOLE.\n UPDATED THE HELP PANEL (\"HELPZER\") FOR THE \"ZERODIR\" REXX EXEC.\n\n MODIFICATION LEVEL: V01.01.08\n\n THIS PDS CONTAINS SOURCE AND DOCUMENTATION FOR THE 'PDSCLEAN'\n PROGRAM.\n\n THIS 'PDSCLEAN' PROGRAM WAS PICKED UP AND IMPROVED FROM CBT FILE 040\n (PEOPLES NATIONAL BANK OF WASHINGTON) AND IMPROVED UPON BY\n TERRY MILLER AND RICHARD RICE AT CONOCO PHILLIPS.\n THE WTOS WERE CHANGE TO A SYSPRINT REPORT AND CODE WAS ADDED TO\n EMPTY PDS/E'S AND TO USE IEBCOPY TO UNLOAD AND RELOAD MEMBERS\n OF A PDS WHEN ALTERING THE NUMBER OF DIRECTORY BLOCKS.\n\n THE 'PDSCLEAN' MODULE MUST RESIDE IN AN APF-AUTHORIZED LIBRARY\n WITH AUTHORIZATION CODE 001 (AC=1).\n\n THE REXX EXECS INCLUDED (ALTERDIR, COMPRESS, AND ZERODIR) ALSO\n ASSUME THAT MODULE 'PDSCLEAN' RESIDES IN A LINKLISTED LIBRARY.\n THESE EXECS ALSO REQUIRE AN ENTRY IN THE IKJTSO00 MVS PARMLIB\n MEMBER (OR EQUIVALENT AUTHORIZATION) UNDER THE 'AUTHPGM'\n SECTION TO AUTHORIZE ITS BEING CALLED FROM THE TSO/E\n ENVIRONMENT.\n\n THE BATCH PROC INCLUDED ASSUMES THE MODULE 'PDSCLEAN' RESIDES IN\n A LINKLISTED LIBRARY.\n\n FOR MORE DOCUMENTATION ON PROGRAM 'PDSCLEAN', SEE MEMBER 'HELPPDS'\n INCLUDED IN THIS PDS.\n\n PLEASE REPORT ANY BUGS TO TERRY MILLER AT TKMILLE@CONOCOPHILLIPS.COM\n\n      PDSCLEAN - SOURCE MEMBER FOR PROGRAM 'PDSCLEAN'.\n                 CLEANS OUT A PDS WITHOUT REQUIRING A DELETE/DEFINE.\n                 WORKS WITH BOTH PDS FILES AND PDS/E FILES.\n                 ALSO, THE NUMBER OF DIRECTORY BLOCKS CAN BE CHANGED\n                 FOR PDS FILES. CAN BE EXECUTED IN TSO\n                 FOREGROUND AS WELL (SEE ALTERDIR AND ZERODIR BELOW).\n                 THIS PROGRAM MUST BE ASSEMBLED WITH THE HIGH-LEVEL\n                 ASSEMBLER DUE TO THE LENGTH OF THE DATA FIELDS.\n\n      ALTERDIR - REXX EXEC TO ALTER THE NUMBER OF PDS DIRECTORIES\n                 FOR A PDS FILE. CALLS PROGRAM 'PDSCLEAN' TO\n                 PERFORM THE TASK.  THIS EXEC ASSUMES THE PROGRAM\n                 'PDSCLEAN' RESIDES IN THE LINKLIST.\n\n      ZERODIR  - REXX EXEC TO EMPTY THE DIRECTORY FOR PDS FILES AND\n                 PDS/E FILES.  CALLS PROGRAM 'PDSCLEAN' TO\n                 PERFORM THE TASK.  THIS EXEC ASSUMES THE PROGRAM\n                 'PDSCLEAN' RESIDES IN THE LINKLIST.\n\n      COMPRESS - REXX EXEC TO COMPRESS PDS AND/OR PDS/E FILES.\n                 CALLS PROGRAM 'PDSCLEAN' TO PERFORM THIS TASK.\n                 THIS EXEC ASSUMES THE PROGRAM 'PDSCLEAN'\n                 RESIDES IN THE LINKLIST.  THIS EXEC IS AN\n                 ALTERNATIVE TO CALLING 'IEBCOPY' INTERACTIVELY\n                 TO COMPRESS A PDS OR PDS/E LIBRARY.\n\n      PROC     - PDSCLEAN BATCH PROCEDURE (PROC).\n\n      HELPPDS  - HELP DOCUMENTATION FOR PROGRAM 'PDSCLEAN'.\n\n      HELPALT  - HELP SCREEN FOR THE 'ALTERDIR' EXEC\n\n      HELPCOM  - HELP SCREEN FOR THE 'COMPRESS' EXEC\n\n      HELPZER  - HELP SCREEN FOR THE 'ZERODIR'  EXEC\n\n      SAMPRPT  - SAMPLE SYSPRINT REPORT FROM PDSCLEAN.\n\n CERTIFICATION\n -------------\n\n BATCH:\n\n   THESE UTILITIES HAVE BEEN RUN IN A Z/OS ENVIRONMENT.\n   THE SOURCE CODE FOR \"PDSCLEAN\" MUST BE ASSEMBLED WITH THE\n   HIGH-LEVEL ASSEMBLER.\n\n   THE 'PDSCLEAN' MODULE MUST RESIDE IN AN APF-AUTHORIZED LIBRARY.\n\n TSO REXX EXECS (ALTERDIR, COMPRESS, ZERODIR):\n\n   THE REXX EXECS INCLUDED ASSUME THE THE 'PDSCLEAN' MODULE\n   RESIDES IN A LINKLISTED LIBRARY.\n\n   AN IKJTSO00 ENTRY FOR 'PDSCLEAN' SHOULD ALSO RESIDE IN THE MVS\n   PARMLIB MEMBER UNDER THE 'AUTHPGM' SECTION OR THE EQUIVALENT\n   AUTHORIZATION) TO AUTHORIZE IT (PROGRAM PDSCLEAN) TO BE CALLED\n   FROM THE TSO/E ENVIRONMENT.\n\n PROBLEM REPORTING\n -----------------\n\n PLEASE REPORT ANY BUGS OR SUGGESTIONS FOR IMPROVEMENT TO:\n        TERRY MILLER AT Tkmille@ConocoPhillips.com\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE1": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x042/\\x01\\x042/\\t\\x13\\x00>\\x00>\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-17T00:00:00", "modifydate": "2004-11-17T09:13:04", "lines": 62, "newlines": 62, "modlines": 0, "user": "SBGOLOB"}, "text": "This is a note from author Terry Miller about the 11/16/04 version\nof this package, and the PDSCLEAN program.  (S.GOLOB)\n\nSam,\n\nI have finalized my IVP Test for this File 693 bundle.\n\nI have also cleaned up a couple of items in the code. I made\nthe following changes to the bundle:\n\n1)  For the following error message, I changed the processing in\n     the source code to issue a RC 8 .  Formerly, I was issuing a\n     RC 16 and  terminating the program for this error.\n\n     Since it was not necessary to terminate the program or to be\n     so severe on the person for this error, I made the code\n     change.  Here is the error message for which I made this\n     change:\n\n              **YOU MUST USE DISP=OLD OR DISP=MOD\n              WITH PDS/E DATASET ALLOCATIONS!\n\n     This is a requrement is a limitation placed upon the STOW\n     macro by IBM.  The program uses the STOW macro to initialize\n     (empty)\n\n      PDS/Es.   IBM reguires that the PDS/E be opened as OUTPUT\n      and must be allocated with either DISP=OLD or DISP=MOD.\n\n2)   I changed the code to allow blank lines.  The program\n     ignores blank lines and treats them as comment lines.\n\n3)   I updated the IVP Test member.  I am now happy with it.  It\n     tests everything that I can think of.\n\n4)   I updated the HELPPDS member to document treating blank\n      SYSIN records as comments.  This is the help member for the\n      PDSCLEAN program.\n\n5)  I updated the SAMPRPT (Sample Report) member to show the new\n     report headings (with the modification level included).\n\n6)  I updated the $$DOC member to show the latest modification\n     level of the source code.\n\nI tested this code yesterday and this morning and I am quite\ncontent with publishing it.\n\nI have attached a new zipped bundle and the source code (2nd\nattachment).\n\n<<CBT693.zip>>\n<<PDSCLEAN.ASM>>\n\nTerry K. Miller\nConoco Phillips Company\n221 Information Center\n511 S. Keeler Ave.\nBartlesville, Oklahoma 74004\nPhone:    918-661-0327\nFax:         918-662-2924\nEmail:      <mailto:Terry.K.Miller@ConocoPhillips.Com>\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE2": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\t\\x16o\\x01\\t\\x16o\\x118\\x00#\\x00#\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-06-15T00:00:00", "modifydate": "2009-06-15T11:38:55", "lines": 35, "newlines": 35, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:    Re: Update to CBT FILE693 - PDSCLEAN\nFrom:       Tkmille@ConocoPhillips.Com\nDate:       15 Jun 2009 08:21:33 -0500\nTo:         sbgolob@cbttape.org\nCC:         tkmille@ConocoPhillips.Com, rlrice@ConocoPhillips.Com\n\n Re: Update to CBT FILE 693 - PDSCLEAN ...\n\n Sam,\n\n Here is my finalized version of File 693 ...\n\n Here is version V01.01.07 of my CBT File 693 - PDSCLEAN.\n (empties pds files, alters director block allocations for pds files,\n  and compresses pds files).\n\n Three Revisions:\n   Made the PDSCLEAN program reentrant.\n   Made the PDSCLEAN program AMODE 31.\n   Issue an informational Ignore message when a user tries to\n         compress a PDSE file (compress not necessary for PDSE's)\n\n V01.01.07 of PDSCLEAN.\n\n Regards,\n\n Terry Miller\n ConocoPhillips\n 620-03 Information Center\n 511 S. Keeler Ave.\n Bartlesville, Oklahoma 74004\n Phone:    918-661-0327\n Fax:      918-661-3636\n Email:    Tkmille@ConocoPhillips.com\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE3": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\t\\x18/\\x01\\t\\x18/\\x18!\\x00\\x1d\\x00\\x1d\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-07-01T00:00:00", "modifydate": "2009-07-01T18:21:37", "lines": 29, "newlines": 29, "modlines": 0, "user": "SBGOLOB"}, "text": "Re: Update to CBT FILE 693 - PDSCLEAN ...\n\n Sam,\n\n Just a few more comment changes.  This is my final draft.\n You can post it now.  If you have already posted it, you can\n ignore this one.\n\n Here is version V01.01.08 of my CBT File 693 - PDSCLEAN.\n (empties pds files, alters director block allocations for pds files,\n  and compresses pds files).\n\n One Revision:\n   Changed the entry point for CVTPCNVT conversion routine for\n   converting a relative track address to an actual track address.\n   This change accomodates PDS datasets which are larger than\n   65,635 tracks in size for the ALTERDIR function.\n\n Regards,\n\n Terry Miller\n ConocoPhillips\n 620-03 Information Center\n 511 S. Keeler Ave.\n Bartlesville, Oklahoma 74004\n Phone:    918-661-0327\n Fax:      918-661-3636\n Email:    Tkmille@ConocoPhillips.com\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE4": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x10\\x16/\\x01\\x10\\x16/\\x11!\\x00 \\x00 \\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-06-11T00:00:00", "modifydate": "2010-06-11T11:21:59", "lines": 32, "newlines": 32, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  Re: Update to CBT FILE693 - PDSCLEAN\nFrom:     <Tkmille@ConocoPhillips.Com>\nDate:     09 Jun 2010 10:53:59 -0500\nTo:       <SbGolob@cbttape.org>\nCC:       <tkmille@ConocoPhillips.Com>\n\n\n Re: Update to CBT FILE 693 - PDSCLEAN ...\n\n Sam,\n\n Here is the latest version (V01.01.09):\n\n 06/09/2010 - V01.01.09\n           - ADDED THE \"NOMSG\" PARAMETER TO THE ZERODIR REXX EXEC\n             TO SUPPRESS MESSAGES FROM THE CONSOLE.\n             UPDATED THE HELP PANEL (\"HELPZER\") FOR THE \"ZERODIR\"\n             REXX EXEC.\n\n See XMIT attachment for V01.01.09 of PDSCLEAN.\n\n Regards,\n\n Terry Miller\n ConocoPhillips\n 620-03 Information Center\n 511 S. Keeler Ave.\n  Bartlesville, Oklahoma 74004\n  Phone:    918-661-0327\n  Fax:      918-661-3636\n  Email:    Tkmille@ConocoPhillips.com\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$LOADLIB": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x01\\t\\x18/\\x01\\t\\x18/\\x18#\\x00\\x8c\\x00\\x8c\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd3\\xc9\\xc2@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2009-07-01T00:00:00", "modifydate": "2009-07-01T18:23:00", "lines": 140, "newlines": 140, "modlines": 0, "user": "LOADLIB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "@FILE693": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04O\\x004\\x01\\x10\\x16/\\x01\\x10\\x16/\\x11$\\x00\\x82\\x00\\x82\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf9@@@'", "ispf": {"version": "04.79", "flags": 0, "createdate": "2010-06-11T00:00:00", "modifydate": "2010-06-11T11:24:34", "lines": 130, "newlines": 130, "modlines": 0, "user": "CBT-479"}, "text": "//***FILE 693 is from Terry K. Miller and Richard L. Rice, and      *   FILE 693\n//*           contains a modernized version of the PDSCLEAN program *   FILE 693\n//*           from CBT Tape File 040.  This version of PDSCLEAN     *   FILE 693\n//*           can be used to empty either a PDS or a PDS/E of all   *   FILE 693\n//*           its members, and it can also be used to expand the    *   FILE 693\n//*           number of directory blocks in a PDS, and it can be    *   FILE 693\n//*           used to compress a PDS dataset.                       *   FILE 693\n//*                                                                 *   FILE 693\n//*           Various help members and three REXX execs to invoke   *   FILE 693\n//*           the PDSCLEAN program in the foreground, are included, *   FILE 693\n//*           as well as sample JCL to run PDSCLEAN in the          *   FILE 693\n//*           background.                                           *   FILE 693\n//*                                                                 *   FILE 693\n//*           email:  tkmille@conocophillips.com                    *   FILE 693\n//*                                                                 *   FILE 693\n//*           Last Revision: 06/09/2010 V01.01.09                   *   FILE 693\n//*                                                                 *   FILE 693\n//*> * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * <*   FILE 693\n//*                                                                 *   FILE 693\n//*                     Important note  !!!!                        *   FILE 693\n//*                     --------- ----  ----                        *   FILE 693\n//*                                                                 *   FILE 693\n//*  ==> Program PDSCLEAN must be linked with AC=1 and must reside  *   FILE 693\n//*  ==> in an APF-Authorized Library or program PDSCLEAN will      *   FILE 693\n//*  ==> terminate with a Condition Code 016.                       *   FILE 693\n//*  ==>                                                            *   FILE 693\n//*  ==> Program PDSCLEAN should also reside in the IKJTSO00 member *   FILE 693\n//*  ==> in the AUTHPGM Section to Authorize its being called in    *   FILE 693\n//*  ==> Rexx Execs ALTERDIR, COMPRESS, and ZERODIR. Otherwise,     *   FILE 693\n//*  ==> Program PDSCLEAN will terminate with a Condition Code 016. *   FILE 693\n//*                                                                 *   FILE 693\n//*> * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * <*   FILE 693\n//*                                                                 *   FILE 693\n//*     This PDS contains source and documentation for the          *   FILE 693\n//*     'PDSCLEAN' program.                                         *   FILE 693\n//*                                                                 *   FILE 693\n//*     This 'PDSCLEAN' program was picked up and improved from     *   FILE 693\n//*     CBT FILE 040 (PEOPLES NATIONAL BANK of WASHINGTON) and      *   FILE 693\n//*     improved (I hope) by TERRY MILLER and RICHARD RICE at       *   FILE 693\n//*     ConocoPhillips.  The WTOS were changed to a SYSPRINT        *   FILE 693\n//*     report and code was added to empty PDS/E'S and to use       *   FILE 693\n//*     IEBCOPY to UNLOAD and RELOAD members of a PDS when          *   FILE 693\n//*     altering the number of directory blocks (ALTERDIR Function).*   FILE 693\n//*                                                                 *   FILE 693\n//*     The 'PDSCLEAN' module should reside in an APF-Authorized    *   FILE 693\n//*     library, and it should be linkedited with SETCODE AC(1).    *   FILE 693\n//*     This is so that IEBCOPY can be called in an APF authorized  *   FILE 693\n//*     state, which is very critical, as indicated above.          *   FILE 693\n//*                                                                 *   FILE 693\n//*     For more documentation on program 'PDSCLEAN', see           *   FILE 693\n//*     member 'HELPPDS' included in this pds.                      *   FILE 693\n//*                                                                 *   FILE 693\n//*     For a Change Log, review member 'CHANGES' included in this  *   FILE 693\n//*     pds.                                                        *   FILE 693\n//*                                                                 *   FILE 693\n//*     Please report any bugs to Terry Miller at                   *   FILE 693\n//*     tkmille@conocophillips.com                                  *   FILE 693\n//*                                                                 *   FILE 693\n//*          PDSCLEAN - SOURCE MEMBER FOR PROGRAM 'PDSCLEAN'.       *   FILE 693\n//*                     CLEANS OUT A PDS WITHOUT REQUIRING A        *   FILE 693\n//*                     DELETE/DEFINE.  WORKS WITH BOTH PDS         *   FILE 693\n//*                     FILES AND PDS/E FILES.  ALSO, THE NUMBER    *   FILE 693\n//*                     OF DIRECTORY BLOCKS CAN BE CHANGED FOR      *   FILE 693\n//*                     PDS FILES. CAN BE EXECUTED IN TSO           *   FILE 693\n//*                     FOREGROUND AS WELL (SEE ALTERDIR AND        *   FILE 693\n//*                     ZERODIR BELOW).  THIS PROGRAM MUST BE       *   FILE 693\n//*                     ASSEMBLED WITH THE HIGH-LEVEL ASSEMBLER     *   FILE 693\n//*                     DUE TO THE LENGTH OF THE DATA FIELDS.       *   FILE 693\n//*                                                                 *   FILE 693\n//*                     THIS PROGRAM SHOULD BE LINKLISTED AND       *   FILE 693\n//*                     APF-AUTHORIZED AND LINKEDITED USING         *   FILE 693\n//*                     SETCODE AC(1).                              *   FILE 693\n//*                                                                 *   FILE 693\n//*          ALTERDIR - REXX EXEC TO ALTER THE NUMBER OF PDS        *   FILE 693\n//*                     DIRECTORIES FOR A PDS FILE. CALLS           *   FILE 693\n//*                     PROGRAM 'PDSCLEAN' TO PERFORM THE TASK.     *   FILE 693\n//*                     THIS EXEC ASSUMES THAT PROGRAM 'PDSCLEAN'   *   FILE 693\n//*                     RESIDES IN THE LINKLIST.                    *   FILE 693\n//*                                                                 *   FILE 693\n//*          CHANGES  - CHANGE LOG SHOWING THE CHANGES APPLIED ON   *   FILE 693\n//*                     EACH VERSION LEVEL.                         *   FILE 693\n//*                                                                 *   FILE 693\n//*          COMPRESS - REXX EXEC TO COMPRESS A PDS OR A PDS/E.     *   FILE 693\n//*                     CALLS PROGRAM 'PDSCLEAN' TO PERFORM THE     *   FILE 693\n//*                     COMPRESS TASK.  THIS EXEC ASSUMES THAT      *   FILE 693\n//*                     PROGRAM 'PDSCLEAN' RESIDES IN THE LINKLIST. *   FILE 693\n//*                                                                 *   FILE 693\n//*          ZERODIR  - REXX EXEC TO EMPTY THE DIRECTORY FOR PDS    *   FILE 693\n//*                     FILES AND PDS/E FILES.  CALLS PROGRAM       *   FILE 693\n//*                     'PDSCLEAN' TO PERFORM THE TASK.  THIS       *   FILE 693\n//*                     EXEC ASSUMES THAT PROGRAM 'PDSCLEAN'        *   FILE 693\n//*                     RESIDES IN THE LINKLIST.                    *   FILE 693\n//*                                                                 *   FILE 693\n//*          PROC     - PDSCLEAN BATCH PROCEDURE (PROC).            *   FILE 693\n//*                                                                 *   FILE 693\n//*          HELPALT  - HELP SCREEN FOR THE 'ALTERDIR' EXEC         *   FILE 693\n//*                                                                 *   FILE 693\n//*          HELPCOM  - HELP SCREEN FOR THE 'COMPRES'  EXEC         *   FILE 693\n//*                                                                 *   FILE 693\n//*          HELPPDS  - HELP DOCUMENTATION FOR PROGRAM 'PDSCLEAN'.  *   FILE 693\n//*                                                                 *   FILE 693\n//*          HELPZER  - HELP SCREEN FOR THE 'ZERODIR'  EXEC         *   FILE 693\n//*                                                                 *   FILE 693\n//*                                                                 *   FILE 693\n//*                                                                 *   FILE 693\n//*  CERTIFICATION                                                  *   FILE 693\n//*  -------------                                                  *   FILE 693\n//*                                                                 *   FILE 693\n//*  BATCH:                                                         *   FILE 693\n//*                                                                 *   FILE 693\n//*    THESE UTILITIES HAVE BEEN RUN IN A Z/OS ENVIRONMENT.         *   FILE 693\n//*    THE SOURCE CODE FOR \"PDSCLEAN\" MUST BE ASSEMBLED WITH THE    *   FILE 693\n//*    HIGH-LEVEL ASSEMBLER.                                        *   FILE 693\n//*                                                                 *   FILE 693\n//*    THE 'PDSCLEAN' MODULE MUST RESIDE IN AN APF-AUTHORIZED       *   FILE 693\n//*    LIBRARY.                                                     *   FILE 693\n//*                                                                 *   FILE 693\n//*  TSO REXX EXECS (ALTERDIR, COMPRESS, ZERODIR):                  *   FILE 693\n//*                                                                 *   FILE 693\n//*    THE REXX EXECS INCLUDED ASSUME THE THE 'PDSCLEAN' MODULE     *   FILE 693\n//*    RESIDES IN A LINKLISTED LIBRARY.                             *   FILE 693\n//*                                                                 *   FILE 693\n//*    AN IKJTSO00 ENTRY FOR 'PDSCLEAN' SHOULD ALSO RESIDE IN THE   *   FILE 693\n//*    MVS PARMLIB MEMBER UNDER THE 'AUTHPGM' SECTION OR EQUIVALENT *   FILE 693\n//*    AUTHORIZATION) TO AUTHORIZE IT (PROGRAM PDSCLEAN) TO BE      *   FILE 693\n//*    CALLED FROM THE TSO/E ENVIRONMENT.                           *   FILE 693\n//*                                                                 *   FILE 693\n//*    THE 'PDSCLEAN' MODULE MUST RESIDE IN AN APF-AUTHORIZED       *   FILE 693\n//*    LIBRARY.                                                     *   FILE 693\n//*                                                                 *   FILE 693\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ALTERDIR": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01$\\x00W\\x01\\x04)\\x9f\\x01\\x054\\x8f\\x11#\\x01O\\x01\\x03\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.36", "flags": 0, "createdate": "2004-10-25T00:00:00", "modifydate": "2005-12-14T11:23:57", "lines": 335, "newlines": 259, "modlines": 0, "user": "TKMILLE"}, "text": "/* REXX      ALTERDIR                                                 */\n/**********************************************************************/\n/* MODULE  = ALTERDIR                                                 */\n/*                                                                    */\n/* #\u00a2# AUTHOR          TKMILLE                                        */\n/* #\u00a2# CREATED         TKMILLE  09/15/2004                            */\n/* #\u00a2# UPDATED         TKMILLE  12/14/2005                            */\n/*                                                                    */\n/*  PURPOSE = This exec execute will call program PDSCLEAN to         */\n/*            alter the number of directory blocks allocated for a    */\n/*            PDS Dataset.  The alteration can only be an increase    */\n/*            in directory blocks and NOT a decrease.                 */\n/*                                                                    */\n/*  SYNTAX:   ALTERDIR  dsname  #dirblks [Force]  [Debug]             */\n/*                                                                    */\n/*  INPUT                                                             */\n/*  PARMS:                                                            */\n/*                                                                    */\n/*               dsname  = The dataset name to be altered.  Must be a */\n/*                         pds file. Cannot be a PDS/E file, as these */\n/*                         file manage their own directories.  Must   */\n/*                         be DSORG=PS.                               */\n/*                         The dsname MUST be fully qualified and does*/\n/*                         not need to be enclosed in tic marks or    */\n/*                         quotes.  They will be ignored if they are  */\n/*                         included.  This parameter is required.     */\n/*                                                                    */\n/*             #dirblks  = Specifies the number of additional         */\n/*                         number of directory blocks to add.  This   */\n/*                         number must be numeric and cannot be       */\n/*                         negative number. It must be from 1 to 8    */\n/*                         numeric digits (a whole number).  The      */\n/*                         leading \"+\" (plus) sign is not necessary,  */\n/*                         but can be used for clarity for the user.  */\n/*                         This parameter is required.                */\n/*                                                                    */\n/*                FORCE  = This is an optional keyword parameter used */\n/*                         to force the excution of an ALTERDIR       */\n/*                         command even if exclusive control of the   */\n/*                         resource cannot be obtained.  Use of FORCE */\n/*                         is not necessary if exclusive control of   */\n/*                         the resource can be obtained. This         */\n/*                         parameter MUST follow both the dsname and  */\n/*                         the #dirblks parameter.                    */\n/*                         This parameter should be used with caution.*/\n/*                         Exclusive serialization is the safest way  */\n/*                         to ensure data integrity of the resource   */\n/*                         for all users.                             */\n/*                                                                    */\n/*                DEBUG  = The parameter which displays the exec      */\n/*                         statements as they are being executed.     */\n/*                         This parameter is optional and used for    */\n/*                         debugging purposes.  This parameter MUST   */\n/*                         MUST follow both the dsname and the        */\n/*                         #dirblks parameter.                        */\n/*                                                                    */\n/*  OUTPUT PARMS:                                                     */\n/*                                                                    */\n/*       rc (return code) is passed to the calling EXEC or CLIST.     */\n/*       (Reference &LASTCC in a clist, rc in a REXX exec).           */\n/*                                                                    */\n/*  Certification:                                                    */\n/*                                                                    */\n/*    Program PDSCLEAN should also reside in the IKJTSO00 member      */\n/*    in the AUTHPGM Section to Authorize its being called from       */\n/*    the TSO/E Environment.                                          */\n/*                                                                    */\n/* Return Codes from the ALTERDIR exec:                               */\n/*                                                                    */\n/* 0     => Successful call to program PDSCLEAN via ALTERDIR exec     */\n/* 4     => Minor error in program PDSCLEAN from ALTERDIR parms       */\n/* 8     => Return code 8 can be returned for any of the following    */\n/*          situations:                                               */\n/*          Command is missing or invalid from the ALTERDIR exec.     */\n/*          DSNAME is missing or invalid (2nd parameter)              */\n/*          Directory blocks value is missing or invalid (3rd parm)   */\n/*          Received a bad return code from the STOW macro            */\n/*          Tried to issue 'ALTERDIR' function against a PDS/E dsn    */\n/*          DDNAME specified on Parm passed to PDSCLEAN is not in the */\n/*            Tiot Table (this error should not occur).               */\n/*          The resource could not be exclusively serialized and the  */\n/*            FORCE parameter was not used.                           */\n/* 12    => Invalid Rexx Exec command                                 */\n/* 16    => Severe Error - Program Terminates Immediately             */\n/*                                                                    */\n/*  Example Calls:                                                    */\n/*                                                                    */\n/* ALTERDIR MY.PDS     +5                                             */\n/* ALTERDIR MY.PDS2    10                                             */\n/*                                                                    */\n/**********************************************************************/\nversion_level = \"V01.01.06\"\nArg parms\nTrace \"O\"\n\nIf envirnmt <> \"BACK\" & ,\n   Sysvar(\"SYSISPF\") <> \"ACTIVE\"  Then Do /* Invoke the ISPF Environ*/\n     \"ISPF CMD(%ALTERDIR\" parms \")\"\n     Return 0\nEnd\n\nuserid      = Userid()\nrtcd        = 0\nForce_Parm  = \"NO\"\n\npdsdsn    = WORD(parms,1)                /* Get PDS dataset name    */\npdsdsn    = STRIP(pdsdsn,both,\"'\")       /* remove enclosed ticks   */\npdsdsn    = STRIP(pdsdsn,both,'\"')       /* remove enclosed quotes  */\ndirblks   = WORD(parms,2)                /* Get#  directory blocks  */\nldirblks  = LENGTH(dirblks)\nparms     = DELWORD(parms,1,2)\n\ndebug       = \"\"\nnbr_words   = words(parms)\n\nDo i = 1 to nbr_words\n   Parse_It =  WORD(parms,i)\n   Upper Parse_It\n   If ABBREV('DEBUG',Parse_It,3) = 1  then Do\n      debug = \"DEBUG\"\n      parms = DELWORD(parms,i,1)\n      i = i - 1\n      iterate\n   End\n   Parse var Parse_It \" FORCE \" -6 parse_value\n   If parse_value <> \"\" Then Do\n      Force_Parm = \"YES\"\n      parms    = DELWORD(parms,i,1)\n      i = i - 1\n   End\nEnd\n\nIf debug = \"DEBUG\"  then Do\n   Trace \"I\"\nEnd\n\nenvirnmt  = Sysvar(\"sysenv\")\nnesting   = Sysvar(\"sysnest\")\nsysicmd   = Sysvar(\"sysicmd\")\nsyspcmd   = Sysvar(\"syspcmd\")\nsysscmd   = Sysvar(\"sysscmd\")\n\nmsg_stat  = Msg(\"OFF\")\ntime      = Time()\nhours     = Substr(time,1,2)\nmins      = Substr(time,4,2)\nsecs      = Substr(time,7,2)\ntimeql    = \"T\"||hours||mins||secs\nddname    = \"$$DDD1$$\"\nsysprint  = \"\"userid\".$ALTDIR$.SYSPRINT.\"||timeql\n$sysprt$  = \"\"userid\".$ALTDIR$.$SYSPRT$.\"||timeql\nsysin     = \"\"userid\".$ALTDIR$.SYSIN.\"||timeql\n\nsdirblks  = dirblks\nIf SUBSTR(sdirblks,1,1) = \"+\"  Then Do\n   sdirblks  = SUBSTR(sdirblks,2,ldirblks - 1)\nEnd\n\ndatatype  = DATATYPE(sdirblks)\n\nIf datatype <> 'NUM' Then Do\n   Say \"Directory blocks value is not numeric  => \" dirblks\n   Say \"\"\"\"ALTERDIR\"\"\" function is ended prematurely !!!\"\n   Say ;\n   Signal End_Up\nEnd\n\nIf LENGTH(sdirblks) < 1 | LENGTH(sdirblks) > 8  Then Do\n   Say \"Directory blocks length must be 1-8 digits  => \" dirblks\n   Say \"\"\"\"ALTERDIR\"\"\" function is ended prematurely !!!\"\n   Say ;\n   Signal End_Up\nEnd\n\n/* Rexx  SYSDSN function                                 */\n/*                                                       */\n/* Sysdsn results:                                       */\n/*                                                       */\n/* = \"OK\"                                                */\n/* = \"MEMBER NOT FOUND\"                                  */\n/* = \"MEMBER SPECIFIED, BUT DATASET IS NOT PARTITIONED\"  */\n/* = \"DATASET NOT FOUND\"                                 */\n/* = \"ERROR PROCESSING REQUESTED DATASET\"                */\n/* = \"PROTECTED DATASET\"                                 */\n/* = \"VOLUME NOT ON SYSTEM\"                              */\n/* = \"INVALID DATASET NAME, dsname\"                      */\n/* = \"MISSING DATASET NAME\"                              */\n/* = \"UNAVAILABLE DATASET\"                               */\n\nexists  = SYSDSN(\"'\"pdsdsn\"'\")\n\nIf exists <> \"OK\"  Then Do\n   Say \"PDSDSN           =>\" pdsdsn\n   Say \"SYSDSN status is =>\" exists\n   Say \"\"\"\"ALTERDIR\"\"\" function is ended prematurely !!!\"\n   Say ;\n   Signal End_Up\nEnd\n\nmsgval = MSG(\"OFF\")\n\nlistdsi_rc = LISTDSI(\"'\"pdsdsn\"'\" DIRECTORY NORECALL SMSINFO)\n\nmsgval = MSG(msgval)\n\nIf (listdsi_rc <> 0 & listdsi_rc <> 4) Then Do\n   Say ;\n   Say \"Error executing the ALTERDIR command for dataset \"\"\"pdsdsn\"\"\" !\"\n   Say \"LISTDSI Function Failed - Return Code is \"listdsi_rc\" !!!\"\n   Say ;\n   rtcd  = 12\n   Signal End_up\nEnd\n\npdse_? = \"NO\"\nIf sysused = \"N/A\" Then pdse_? = \"YES\"\n\nAllocate_The_PDS:\n\n\"ALLOC FI(\"ddname\")  DA('\"pdsdsn\"') OLD REUSE\"\nalloc_rc = rc\nIf alloc_rc <> 0 Then Do\n   \"ALLOC FI(\"ddname\")  DA('\"pdsdsn\"') SHR REUSE\"\n   alloc2_rc = rc\n   Select\n     When alloc2_rc = 0 & Force_Parm = \"YES\" Then Nop\n     When alloc2_rc = 0 Then Do\n      \"FREE FI(DD01)    DA('\"input\"' \"input\")\"\n      Say ;\n      Say \" PDS dataset \"\"\"pdsdsn\"\"\" cannot be exclusively serialized !\"\n      Say \" Use the FORCE parameter to override exclusive serialization\"\n      Say \" The dataset is allocated to some other resource - Either   \"\n      Say \" try the ALTERDIR command later or use the FORCE parameter. \"\n      Say \"\"\"\"ALTERDIR\"\"\" function is ended prematurely !!!\"\n      Say ;\n      rtcd   = 8\n      Signal End_up\n     End\n     Otherwise Do\n      \"FREE FI(DD01)    DA('\"input\"' \"input\")\"\n      Say ;\n      Say \" PDS dataset \"\"\"pdsdsn\"\"\" cannot be allocated. It does not\"\n      Say \" exist.  Recheck spelling and try again.                  \"\n      Say \"\"\"\"ALTERDIR\"\"\" function is ended prematurely !!!\"\n      Say ;\n      rtcd   = 8\n      Signal End_up\n     End\n   End\nEnd\n\nAllocate_PDSCLEAN_Files:\n\n\"DELETE ('\"sysin\"' '\"sysprint\" '\"$sysprt$\"')\"\n\n\"ALLOC FI(SYSUDUMP) DUMMY REUSE\"\n\"ALLOC FI(DMBENAN)  DUMMY REUSE\"  /* TURN OFF DUMP-MASTER DUMPS */\n\"ALLOC FI(FCOPYOFF) DUMMY REUSE\"  /* TURN OFF FASTCOPY CA-PDSMAN */\n\"ALLOC FI(UNLOAD)  NEW REUSE SP(50,50) CYLINDERS\"\n\"ALLOC FI(SYSUT1)  NEW REUSE SP(50,50) CYLINDERS\"\n\"ALLOC FI(SYSUT2)  NEW REUSE SP(50,50) CYLINDERS\"\n\"ALLOC FI(SYSIN)   DA('\"sysin\"') NEW REUSE SPACE(1,1) TRACKS\",\n   \"RECFM(F B) LRECL(80) BLKSIZE(0) DSORG(PS) \"\n\"ALLOC FI(SYSPRINT) DA('\"sysprint\"') MOD REUSE SPACE(1,1) TRACKS\",\n   \"RECFM(F B A) LRECL(125) BLKSIZE(2000) DSORG(PS) \"\n\"ALLOC FI($SYSPRT$) DA('\"$sysprt$\"') MOD REUSE SPACE(1,1) TRACKS\",\n   \"RECFM(F B A) LRECL(125) BLKSIZE(2000) DSORG(PS) \"\n\nsysinrec.1 = \" ALTERDIR\" ddname dirblks\n\n\"EXECIO 1 DISKW SYSIN    (STEM sysinrec. FINIS\"\nexeciorc     = rc\nIf execiorc <> 0   Then Do\n   Say ;\n   Say \"Error executing the EXECIO DISKW Rexx command for file\",\n       \"SYSIN   !!!\"\n   Say \"EXECIO Return Code is \"execiorc\" !!!\"\n   Say \"\"\"\"ALTERDIR\"\"\" function is ended prematurely !!!\"\n   Say ;\n   rtcd = 12\n   Signal End_up\nEnd\n\n\"CALL *(PDSCLEAN)\"\nPdsclean_rc = rc\nIf Pdsclean_rc > rtcd Then\n   rtcd   = Pdsclean_rc\n\n\"FREE FI($$DDD1$$ UNLOAD SYSUT1 SYSUT2 SYSIN SYSUDUMP DMBENAN)\"\n\"FREE FI(FCOPYOFF)\"\n\"DELETE ('\"sysin\"')\"\n\nMerge_The_Sysprint_Files:\n\n\"ALLOC FI(SYSUT1) DA('\"$sysprt$\"')         SHR REUSE\"\n\"ALLOC FI(SYSUT2) DA('\"sysprint\"')         MOD REUSE\"\n/* \"ALLOC FI(SYSPRINT) DA(*)                      REUSE\"  */\n\"ALLOC FI(SYSPRINT) DUMMY                      REUSE\"\n\"ALLOC FI(SYSUDUMP) DUMMY                      REUSE\"\n\"ALLOC FI(SYSIN)    DUMMY                      REUSE\"\n\n/* Address \"LINKMVS\" \"IEBGENER\" */\n\"TSOEXEC CALL *(IEBGENER)\"\nIebgener_rc = rc\nIf Iebgener_rc > rtcd Then\n   rtcd   = Pdsclean_rc\n\n\"FREE FI(SYSUT1 SYSPRINT SYSUDUMP SYSIN)\"\n\nIf envirnmt <> \"BACK\" Then Signal Browse_Sysprint  /* Background ? */\n\n\"NEWSTACK\"\n\"EXECIO * DISKR SYSUT2 (FINIS\"\nsysprint_lines = Queued()\nDo i = 1 to sysprint_lines\n   Pull sysprt_line\n   Say  sysprt_line\nEnd\n\"DELSTACK\"\n\nSignal End_Up\n\nBrowse_Sysprint:\n\nAddress ISPEXEC \"LMINIT DATAID(DATAID) DDNAME(SYSUT2)\"\nAddress ISPEXEC \"BROWSE DATAID(\"dataid\")\"\nAddress ISPEXEC \"LMFREE DATAID(\"dataid\")\"\n\nEnd_up:\n\"FREE DA('\"sysprint\"' '\"$sysprt$\"')\"\n\"DELETE ('\"sysprint\"' '\"$sysprt$\"')\"\n\"FREE FI(SYSPRINT $SYSPRT$ SYSUT2)\"\n\n/*  The End  */\nReturn rtcd\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASSEMBLE": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\t\\x00B\\x01\\x04'_\\x01\\t\\x16\\x0f\\tA\\x00\\x1e\\x00\\x1a\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@\"", "ispf": {"version": "01.09", "flags": 0, "createdate": "2004-10-01T00:00:00", "modifydate": "2009-06-09T09:41:42", "lines": 30, "newlines": 26, "modlines": 0, "user": "TKMILLE"}, "text": "//ASSEMBLE JOB '                                               ', *LOS\n// TIME=1440,MSGCLASS=Z,MSGLEVEL=1,NOTIFY=&SYSUID,REGION=0M\n//*PPJES LOS=5,MAN=TKM,PMED=M,AD='221 IC'\n//*MAIN LINES=(9999,W),FETCH=NONE,FAILURE=CANCEL,CLASS=SS\n//*MAIN CARDS=(9999,W,20)\n//*\n//ASSEMBLE EXEC PGM=IEV90,\n//         PARM='DECK,NOOBJECT,LINECOUNT(55)'\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=SYSDA,SPACE=(23476,(150,50),RLSE)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSPUNCH DD DSN=&&LOADSET,DISP=(NEW,PASS,DELETE),UNIT=SYSDA,\n//         SPACE=(3200,(400,050),RLSE),\n//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)\n//SYSIN    DD DISP=SHR,DSN=SMPE.PDSCLEAN(PDSCLEAN)  <= SOURCE LIBRARY\n//*\n//LINKEDIT EXEC PGM=IEWL,COND=(5,LT,ASSEMBLE),\n//         PARM='LIST,LET,MAP,RENT,REUS'\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DISP=(OLD,DELETE),DSN=&&LOADSET\n//         DD DDNAME=SYSIN\n//SYSLMOD  DD DISP=SHR,DSN=SYS1.ILINKLIB,    <=  YOUR APF LOAD LIBRARY\n//         UNIT=SYSDA,VOL=SER=SWT001\n//SYSUT1   DD UNIT=SYSDA,SPACE=(23476,(150,50),RLSE)\n//SYSIN    DD *\n ENTRY PDSCLEAN\n SETCODE AC(1)\n NAME  PDSCLEAN(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASSEMSBG": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07\\x006\\x01\\x04'_\\x01\\t\\x16\\x7f\\x130\\x00\\x1c\\x00\\x1a\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.07", "flags": 0, "createdate": "2004-10-01T00:00:00", "modifydate": "2009-06-16T13:30:36", "lines": 28, "newlines": 26, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBC JOB ' ASSEMBLE PDSCLEAN PROGRAM                     ',\n//     TIME=(2,00),REGION=0M,NOTIFY=&SYSUID,MSGCLASS=X,CLASS=B\n//*\n//ASSEMBLE EXEC PGM=ASMA90,\n//         PARM='DECK,NOOBJECT,LINECOUNT(55)'\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=SYSALLDA,SPACE=(23476,(150,50),RLSE)\n//SYSLIB   DD DISP=SHR,DSN=SBGOLOB.S19.MACLIB\n//         DD DISP=SHR,DSN=SBGOLOB.S19.MODGEN\n//SYSPUNCH DD DSN=&&LOADSET,DISP=(NEW,PASS,DELETE),UNIT=SYSALLDA,\n//         SPACE=(3200,(400,050),RLSE),\n//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT478.FILE693(PDSCLEAN)\n//*\n//LINKEDIT EXEC PGM=IEWL,COND=(5,LT,ASSEMBLE),\n//         PARM='LIST,LET,MAP'\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DISP=(OLD,DELETE),DSN=&&LOADSET\n//         DD DDNAME=SYSIN\n//SYSLIB   DD DISP=SHR,DSN=SYS1.CSSLIB\n//SYSLMOD  DD DISP=SHR,DSN=SBGOLOB.PDSCLEAN.LOAD <= YOUR LOAD LIBRARY\n//SYSUT1   DD UNIT=SYSALLDA,SPACE=(23476,(150,50),RLSE)\n//SYSIN    DD *\n ENTRY PDSCLEAN\n SETSSI CB478693\n SETCODE AC(1)\n NAME  PDSCLEAN(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHANGES": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x12\\x01\\x054\\x7f\\x01\\x10\\x16\\x0f\\x10I\\x00F\\x00\\x01\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2005-12-13T00:00:00", "modifydate": "2010-06-09T10:49:12", "lines": 70, "newlines": 1, "modlines": 0, "user": "TKMILLE"}, "text": "                    PDSCLEAN VERSION CHANGE HISTORY\n\n 06/09/2010 - V01.01.09\n           - ADDED THE \"NOMSG\" PARAMETER TO THE ZERODIR REXX EXEC\n             TO SUPPRESS MESSAGES FROM THE CONSOLE.\n             UPDATED THE HELP PANEL (\"HELPZER\") FOR THE \"ZERODIR\"\n             REXX EXEC.\n\n 06/23/2009 - V01.01.08\n           - CHANGED PROGRAM TO USE THE UNIVERSAL DATASET\n               CONVERSION ROUTINE CVTPCNVT (IECPCNVT) TO\n               ACCOMODATE PDS DATASETS HAVING MORE THAN 65,635\n               TRACKS IN THE ALTERDIR FUNCTION. CHANGED\n               PROGRAM TO USE ENTRY POINT AT OFFSET +12 FROM\n               THE ADDRESS IN CVTPCNVT PER IBM DOCUMENT\n               SC26-7400-07 (DFSMSDFP ADVANCED SERVICES MANUAL).\n               THIS IS THE ENTRY POINT TO ACCOMODATE ANY PDS\n               DATASET REGARDLESS OF SIZE (NBR OF TRACKS).\n\n 06/09/2009 - V01.01.07\n\n           - CHANGED PROGRAM PDSCLEAN TO BE REENTRANT\n           - CHANGED PROGRAM PDSCLEAN TO BE AMODE 31\n           - CHANGED PROGRAM PDSCLEAN TO ISSUE AN INFORMATIONAL\n                MESSAGE (WITH RETURN CODE ZERO) IF A USER TRIES\n                TO COMPRESS A PDS/E DATASET.  PDS/E DATASETS DO\n                NOT NEED TO BE COMPRESSED.\n\n 12/13/2005 - V01.01.06\n\n           - REXX EXEC UPDATES\n                ALTERDIR - ADDED 'FORCE' PARAMETER FOR OVERRIDING\n                           EXCLUSIVE SERIALIZATION FAILURES.  WITH\n                           THE 'FORCE' OPTION, THE ALTERDIR COMMAND\n                           CAN BE EXECUTED WITH JUST A SHARED ENQUE.\n                           THE PREVIOUS VERSION REQUIRED EXCLUSIVE\n                           SERIALIZATION.\n                COMPRESS - ADDED 'FORCE' PARAMETER\n                ZERODIR  - ADDED 'FORCE' PARAMETER\n           - CHANGE LOG UPDATE\n                CHANGES  - ADDED A CHANGE LOG FOR VERSION DOCUMENTATION\n           - HELP SCREEN UPDATES\n                HELPALT  - ADDED DOCUMENTATION FOR THE 'FORCE' PARM\n                HELPCOM  - ADDED DOCUMENTATION FOR THE 'FORCE' PARM\n                HELPPDS  - ADDED DOCUMENTATION FOR IBM APAR OA13224.\n                           WITH THIS APAR IMPLEMENTED, PROGRAM\n                           'PDSCLEAN' WILL ALLOW DISP=SHR PROCESSING\n                           FOR PDSE FILES WITH THE ZERODIR FUNCTION.\n                HELPZER  - ADDED DOCUMENTATION FOR THE 'FORCE' PARM\n           - IVP UPDATES\n                IVPTEST  - ADDED DOCUMENTATION FOR IBM APAR OA13224.\n           - PROGRAM PDSCLEAN UPDATES\n                PDSCLEAN - UPDATED THE VERSION ID AND COMMENTS\n                           REGARDING SERIALIZATION WITH IBM APAR\n                           OA13224.\n                SAMPRPT  - UPDATED THE VERSION ID OF THE SAMPLE REPORT\n\n 11/16/2004 - V01.01.05 -  BASE VERSION - I DID NOT DOCUMENT VERSION\n                           CHANGES PRIOR TO VERSION 01.01.05.  JUST\n                           TOOK ME 5 TRIES TO GET IT RIGHT.\n\n                           ADDED CODE TO CLEAN A PDS/E AND CHANGE THE\n                           INPUT TO PDSCLEAN TO A SYSIN FILE.\n\n                           ADDED CODE TO COMPRESS A PDS OR PDS/E\n                           LIBRARY.\n\n\n\n     *****  END OF CHANGE HISTORY LOG  *****\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "COMPRESS": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00G\\x01\\x040\\x1f\\x01\\x054\\x8f\\x11#\\x01$\\x01\\x05\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "2004-10-27T00:00:00", "modifydate": "2005-12-14T11:23:47", "lines": 292, "newlines": 261, "modlines": 0, "user": "TKMILLE"}, "text": "/* REXX      COMPRESS                                                 */\n/**********************************************************************/\n/* MODULE  = COMPRESS                                                 */\n/*                                                                    */\n/* #\u00a2# AUTHOR          TKMILLE                                        */\n/* #\u00a2# CREATED         TKMILLE  10/27/2004                            */\n/* #\u00a2# UPDATED         TKMILLE  12/14/2005                            */\n/*                                                                    */\n/*  PURPOSE = This exec execute will call program PDSCLEAN to         */\n/*            Compress a PDS or PDS/E library.                        */\n/*                                                                    */\n/*  SYNTAX:   COMPRESS  dsname  [Force]  [Debug]                      */\n/*                                                                    */\n/*  INPUT PARMS:                                                      */\n/*                                                                    */\n/*              dsname   = The dataset name to be compressed.         */\n/*                         The dsname MUST be fully qualified and does*/\n/*                         not need to be enclosed in tic marks or    */\n/*                         quotes.  They will be ignored if they are  */\n/*                         included. This parameter is required.      */\n/*                                                                    */\n/*                FORCE  = This is an optional keyword parameter used */\n/*                         to force the excution of an COMPRESS       */\n/*                         command even if exclusive control of the   */\n/*                         resource cannot be obtained.  Use of FORCE */\n/*                         is not necessary if exclusive control of   */\n/*                         the resource can be obtained. This         */\n/*                         parameter MUST follow the dsname parameter.*/\n/*                         This parameter should be used with caution.*/\n/*                         Exclusive serialization is the safest way  */\n/*                         to ensure data integrity of the resource   */\n/*                         for all users.                             */\n/*                                                                    */\n/*                DEBUG  = The parameter which displays the exec      */\n/*                         statements as they are being executed.     */\n/*                         This parameter is optional and used for    */\n/*                         debugging purposes.  This parameter MUST   */\n/*                         MUST follow the dsname parameter.          */\n/*                                                                    */\n/*  OUTPUT PARMS:                                                     */\n/*                                                                    */\n/*       rc (return code) is passed to the calling EXEC or CLIST.     */\n/*       (Reference &LASTCC in a clist, rc in a REXX exec).           */\n/*                                                                    */\n/*  Certification:                                                    */\n/*                                                                    */\n/*    Program PDSCLEAN should also reside in the IKJTSO00 member      */\n/*    in the AUTHPGM Section to Authorize its being called from       */\n/*    the TSO/E Environment.                                          */\n/*                                                                    */\n/* Return Codes from the COMPRESS exec:                               */\n/*                                                                    */\n/* 0     => Successful call to program PDSCLEAN via COMPRESS exec     */\n/* 4     => Minor error in program PDSCLEAN from COMPRESS parms       */\n/* 8     => Return code 8 can be returned for any of the following    */\n/*          situations:                                               */\n/*          Command is missing or invalid from the COMPRESS exec.     */\n/*          DSNAME is missing or invalid (2nd parameter)              */\n/*          DDNAME specified on Parm passed to PDSCLEAN is not in the */\n/*            Tiot Table (this error should not occur).               */\n/*          The resource could not be exclusively serialized and the  */\n/*            FORCE parameter was not used.                           */\n/* 12    => Invalid Rexx Exec command                                 */\n/* 16    => Severe Error - Program Terminates Immediately             */\n/*                                                                    */\n/*  Example Calls:                                                    */\n/*                                                                    */\n/* COMPRESS MY.PDS                                                    */\n/* COMPRESS MY.PDSE                                                   */\n/*                                                                    */\n/**********************************************************************/\nversion_level = \"V01.01.06\"\nArg parms\nTrace \"O\"\nuserid      = Userid()\nrtcd        = 0\n\nIf envirnmt <> \"BACK\" & ,\n   Sysvar(\"SYSISPF\") <> \"ACTIVE\"  Then Do /* Invoke the ISPF Environ*/\n     \"ISPF CMD(%COMPRESS\" parms \")\"\n     Return 0\nEnd\n\nForce_Parm  = \"NO\"\n\npdsdsn   = WORD(parms,1)                /* Get PDS dataset name    */\nparms    = DELWORD(parms,1,1)\npdsdsn   = STRIP(pdsdsn,both,\"'\")       /* remove enclosed ticks   */\npdsdsn   = STRIP(pdsdsn,both,'\"')       /* remove enclosed quotes  */\n\ndebug       = \"\"\nnbr_words   = words(parms)\n\nDo i = 1 to nbr_words\n   Parse_It =  WORD(parms,i)\n   Upper Parse_It\n   If ABBREV('DEBUG',Parse_It,3) = 1  then Do\n      debug = \"DEBUG\"\n      parms = DELWORD(parms,i,1)\n      i = i - 1\n      iterate\n   End\n   Parse var Parse_It \" FORCE \" -6 parse_value\n   If parse_value <> \"\" Then Do\n      Force_Parm = \"YES\"\n      parms    = DELWORD(parms,i,1)\n      i = i - 1\n   End\nEnd\n\nIf debug = \"DEBUG\"  then Do\n   Trace \"I\"\nEnd\n\nenvirnmt  = Sysvar(\"sysenv\")\nnesting   = Sysvar(\"sysnest\")\nsysicmd   = Sysvar(\"sysicmd\")\nsyspcmd   = Sysvar(\"syspcmd\")\nsysscmd   = Sysvar(\"sysscmd\")\n\nmsg_stat  = Msg(\"OFF\")\ntime      = Time()\nhours     = Substr(time,1,2)\nmins      = Substr(time,4,2)\nsecs      = Substr(time,7,2)\ntimeql    = \"T\"||hours||mins||secs\nddname    = \"$$DDD1$$\"\nsysprint  = \"\"userid\".$COMPRS$.SYSPRINT.\"||timeql\n$sysprt$  = \"\"userid\".$COMPRS$.$SYSPRT$.\"||timeql\nsysin     = \"\"userid\".$COMPRS$.SYSIN.\"||timeql\n\n/* Rexx  SYSDSN function                                 */\n/*                                                       */\n/* Sysdsn results:                                       */\n/*                                                       */\n/* = \"OK\"                                                */\n/* = \"MEMBER NOT FOUND\"                                  */\n/* = \"MEMBER SPECIFIED, BUT DATASET IS NOT PARTITIONED\"  */\n/* = \"DATASET NOT FOUND\"                                 */\n/* = \"ERROR PROCESSING REQUESTED DATASET\"                */\n/* = \"PROTECTED DATASET\"                                 */\n/* = \"VOLUME NOT ON SYSTEM\"                              */\n/* = \"INVALID DATASET NAME, dsname\"                      */\n/* = \"MISSING DATASET NAME\"                              */\n/* = \"UNAVAILABLE DATASET\"                               */\n\nexists  = SYSDSN(\"'\"pdsdsn\"'\")\n\nIf exists <> \"OK\"  Then Do\n   Say \"PDSDSN           =>\" pdsdsn\n   Say \"SYSDSN status is =>\" exists\n   Say \"\"\"\"COMPRESS\"\"\" function is ended prematurely !!!\"\n   Say ;\n   Signal End_Up\nEnd\n\nmsgval = MSG(\"OFF\")\n\nlistdsi_rc = LISTDSI(\"'\"pdsdsn\"'\" DIRECTORY NORECALL SMSINFO)\n\nmsgval = MSG(msgval)\n\nIf (listdsi_rc <> 0 & listdsi_rc <> 4) Then Do\n   Say ;\n   Say \"Error executing the COMPRESS command for dataset \"\"\"pdsdsn\"\"\" !\"\n   Say \"LISTDSI Function Failed - Return Code is \"listdsi_rc\" !!!\"\n   Say ;\n   rtcd  = 12\n   Signal End_up\nEnd\n\npdse_? = \"NO\"\nIf sysused = \"N/A\" Then pdse_? = \"YES\"\n\nAllocate_The_PDS:\n\n\"ALLOC FI(\"ddname\")  DA('\"pdsdsn\"') OLD REUSE\"\nalloc_rc = rc\nIf alloc_rc <> 0 Then Do\n   \"ALLOC FI(\"ddname\")  DA('\"pdsdsn\"') SHR REUSE\"\n   alloc2_rc = rc\n   Select\n     When alloc2_rc = 0 & Force_Parm = \"YES\" Then Nop\n     When alloc2_rc = 0 Then Do\n      \"FREE FI(DD01)    DA('\"input\"' \"input\")\"\n      Say ;\n      Say \" PDS dataset \"\"\"pdsdsn\"\"\" cannot be exclusively serialized !\"\n      Say \" Use the FORCE parameter to override exclusive serialization\"\n      Say \" The dataset is allocated to some other resource - Either   \"\n      Say \" try the COMPRESS command later or use the FORCE parameter. \"\n      Say \"\"\"\"COMPRESS\"\"\" function is ended prematurely !!!\"\n      Say ;\n      rtcd   = 8\n      Signal End_up\n     End\n     Otherwise Do\n      \"FREE FI(DD01)    DA('\"input\"' \"input\")\"\n      Say ;\n      Say \" PDS dataset \"\"\"pdsdsn\"\"\" cannot be allocated. It does not\"\n      Say \" exist.  Recheck spelling and try again.                  \"\n      Say \"\"\"\"COMPRESS\"\"\" function is ended prematurely !!!\"\n      Say ;\n      rtcd   = 8\n      Signal End_up\n     End\n   End\nEnd\n\nAllocate_PDSCLEAN_Files:\n\n\"DELETE ('\"sysin\"' '\"sysprint\" '\"$sysprt$\"')\"\n\n\"ALLOC FI(SYSUDUMP) DUMMY REUSE\"\n\"ALLOC FI(DMBENAN)  DUMMY REUSE\"  /* TURN OFF DUMP-MASTER DUMPS */\n\"ALLOC FI(FCOPYOFF) DUMMY REUSE\"  /* TURN OFF FASTCOPY CA-PDSMAN */\n\"ALLOC FI(UNLOAD)  NEW REUSE SP(50,50) CYLINDERS\"\n\"ALLOC FI(SYSUT1)  NEW REUSE SP(50,50) CYLINDERS\"\n\"ALLOC FI(SYSUT2)  NEW REUSE SP(50,50) CYLINDERS\"\n\"ALLOC FI(SYSIN)   DA('\"sysin\"') NEW REUSE SPACE(1,1) TRACKS\",\n   \"RECFM(F B) LRECL(80) BLKSIZE(0) DSORG(PS) \"\n\"ALLOC FI(SYSPRINT) DA('\"sysprint\"') MOD REUSE SPACE(1,1) TRACKS\",\n   \"RECFM(F B A) LRECL(125) BLKSIZE(2000) DSORG(PS) \"\n\"ALLOC FI($SYSPRT$) DA('\"$sysprt$\"') MOD REUSE SPACE(1,1) TRACKS\",\n   \"RECFM(F B A) LRECL(125) BLKSIZE(2000) DSORG(PS) \"\n\nsysinrec.1 = \" COMPRESS\" ddname\n\n\"EXECIO 1 DISKW SYSIN    (STEM sysinrec. FINIS\"\nexeciorc     = rc\nIf execiorc <> 0   Then Do\n   Say ;\n   Say \"Error executing the EXECIO DISKW Rexx command for file\",\n       \"SYSIN   !!!\"\n   Say \"EXECIO Return Code is \"execiorc\" !!!\"\n   Say \"\"\"\"COMPRESS\"\"\" function is ended prematurely !!!\"\n   Say ;\n   rtcd = 12\n   Signal End_up\nEnd\n\n\"CALL *(PDSCLEAN)\"\nPdsclean_rc = rc\nIf Pdsclean_rc > rtcd Then\n   rtcd   = Pdsclean_rc\n\n\"FREE FI($$DDD1$$ UNLOAD SYSUT1 SYSUT2 SYSIN SYSUDUMP DMBENAN)\"\n\"FREE FI(FCOPYOFF)\"\n\"DELETE ('\"sysin\"')\"\n\nMerge_The_Sysprint_Files:\n\n\"ALLOC FI(SYSUT1) DA('\"$sysprt$\"')         SHR REUSE\"\n\"ALLOC FI(SYSUT2) DA('\"sysprint\"')         MOD REUSE\"\n/* \"ALLOC FI(SYSPRINT) DA(*)                      REUSE\"  */\n\"ALLOC FI(SYSPRINT) DUMMY                      REUSE\"\n\"ALLOC FI(SYSUDUMP) DUMMY                      REUSE\"\n\"ALLOC FI(SYSIN)    DUMMY                      REUSE\"\n\n/* Address \"LINKMVS\" \"IEBGENER\" */\n\"TSOEXEC CALL *(IEBGENER)\"\nIebgener_rc = rc\nIf Iebgener_rc > rtcd Then\n   rtcd   = Pdsclean_rc\n\n\"FREE FI(SYSUT1 SYSPRINT SYSUDUMP SYSIN)\"\n\nIf envirnmt <> \"BACK\" Then Signal Browse_Sysprint  /* Background ? */\n\n\"NEWSTACK\"\n\"EXECIO * DISKR SYSUT2 (FINIS\"\nsysprint_lines = Queued()\nDo i = 1 to sysprint_lines\n   Pull sysprt_line\n   Say  sysprt_line\nEnd\n\"DELSTACK\"\n\nSignal End_Up\n\nBrowse_Sysprint:\n\nAddress ISPEXEC \"LMINIT DATAID(DATAID) DDNAME(SYSUT2)\"\nAddress ISPEXEC \"BROWSE DATAID(\"dataid\")\"\nAddress ISPEXEC \"LMFREE DATAID(\"dataid\")\"\n\nEnd_up:\n\"FREE DA('\"sysprint\"' '\"$sysprt$\"')\"\n\"DELETE ('\"sysprint\"' '\"$sysprt$\"')\"\n\"FREE FI(SYSPRINT $SYSPRT$ SYSUT2)\"\n\n/*  The End  */\nReturn rtcd\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HELPALT": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00F\\x01\\x04%\\x9f\\x01\\x054\\x8f\\x10B\\x00L\\x00@\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2004-09-15T00:00:00", "modifydate": "2005-12-14T10:42:46", "lines": 76, "newlines": 64, "modlines": 0, "user": "TKMILLE"}, "text": ")F FUNCTION - ALTER THE NUMBER OF PDS DIRECTORY BLOCKS      V01.01.06\n              IN A PDS FILE.\n\n\n   SYNTAX  -  ALTERDIR  dsname  #dirblks [Force] [Debug]\n\n   INPUT\n   PARMS:\n\n               dsname  = THE DATASET NAME TO BE ALTERED.  MUST BE A\n                         PDS FILE. CANNOT BE A PDS/E FILE, AS THESE\n                         FILE MANAGE THEIR OWN DIRECTORIES.  MUST\n                         BE DSORG=PO.\n                         THE DSNAME MUST BE FULLY QUALIFIED AND DOES\n                         NOT NEED TO BE ENCLOSED IN TIC MARKS OR\n                         QUOTES.  THEY WILL BE IGNORED IF THEY ARE\n                         INCLUDED.  THIS PARAMETER IS REQUIRED.\n\n             #DIRBLKS  = SPECIFIES THE NUMBER (+NNNN) OF ADDITIONAL\n                         DIRECTORY BLOCKS TO ADD.  THIS\n                         NUMBER MUST BE NUMERIC AND CANNOT BE\n                         NEGATIVE NUMBER. IT MUST BE FROM 1 TO 8\n                         NUMERIC DIGITS (A WHOLE NUMBER).  THE\n                         LEADING \"+\" (PLUS) SIGN IS NOT NECESSARY,\n                         BUT CAN BE USED FOR CLARITY FOR THE USER.\n                         THIS PARAMETER IS REQUIRED.\n\n                FORCE  = THIS IS AN OPTIONAL KEYWORD PARAMETER USED\n                         TO FORCE THE EXCUTION OF AN ALTERDIR\n                         COMMAND EVEN IF EXCLUSIVE CONTROL OF THE\n                         RESOURCE CANNOT BE OBTAINED.  USE OF FORCE\n                         IS NOT NECESSARY IF EXCLUSIVE CONTROL OF\n                         THE RESOURCE CAN BE OBTAINED. THIS PARAMETER\n                         MUST FOLLOW BOTH THE DSNAME AND THE #DIRBLKS\n                         PARAMETERS.\n                         THIS PARAMETER SHOULD BE USED WITH CAUTION.\n                         EXCLUSIVE SERIALIZATION IS THE SAFEST WAY\n                         TO ENSURE DATA INTEGRITY OF THE RESOURCE\n                         FOR ALL USERS.\n\n                DEBUG  = THE PARAMETER WHICH DISPLAYS THE EXEC\n                         STATEMENTS AS THEY ARE BEING EXECUTED.\n                         THIS PARAMETER IS OPTIONAL AND USED FOR\n                         DEBUGGING PURPOSES. THIS PARAMETER MUST\n                         FOLLOW BOTH THE DSNAME AND THE #DIRBLKS\n                         PARAMETERS.\n\n   OUTPUT PARMS:\n\n          RC (RETURN CODE) IS PASSED TO THE CALLING EXEC OR CLIST.\n          (REFERENCE &LASTCC IN A CLIST, RC IN A REXX EXEC).\n\n\n    RETURN CODES FROM THE ALTERDIR EXEC:\n\n    0     => SUCCESSFUL CALL TO PROGRAM PDSCLEAN VIA ALTERDIR EXEC\n    4     => MINOR ERROR IN PROGRAM PDSCLEAN FROM ALTERDIR PARMS\n    8     => RETURN CODE 8 CAN BE RETURNED FOR ANY OF THE FOLLOWING\n             SITUATIONS:\n             COMMAND IS MISSING OR INVALID FROM THE ALTERDIR EXEC.\n             DSNAME IS MISSING OR INVALID (2ND PARAMETER)\n             DIRECTORY BLOCKS VALUE IS MISSING OR INVALID (3RD PARM)\n             RECEIVED A BAD RETURN CODE FROM THE STOW MACRO\n             TRIED TO ISSUE 'ALTERDIR' FUNCTION AGAINST A PDS/E DSN\n             DDNAME SPECIFIED ON PARM PASSED TO PDSCLEAN IS NOT IN THE\n               TIOT TABLE (THIS ERROR SHOULD NOT OCCUR).\n             THE RESOURCE COULD NOT BE EXCLUSIVELY SERIALIZED AND THE\n               FORCE PARAMETER WAS NOT USED.\n    12    => INVALID REXX EXEC COMMAND\n    16    => SEVERE ERROR - TERMINATES ALL SYSIN PROCESSING\n\n   EXAMPLE CALLS:\n\n    ALTERDIR MY.PDS     +5\n    ALTERDIR MY.PDS3     0    (SAME EFFECT AS A COMPRESS)\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HELPCOM": {"ttr": 1034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x001\\x01\\x040\\x1f\\x01\\t\\x15\\x9f\\x192\\x00F\\x002\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2004-10-27T00:00:00", "modifydate": "2009-06-08T19:32:31", "lines": 70, "newlines": 50, "modlines": 0, "user": "TKMILLE"}, "text": ")F FUNCTION - COMPRESS A PDS OR A PDS/E FILE. V01.01.07\n\n   SYNTAX  -  COMPRESS  dsname  [Force] [Debug]\n\n   INPUT\n   PARMS:\n\n             COMPRESS   = THE COMMAND TO INVOKE THIS EXEC.\n                          THIS MUST BE THE FIRST PARAMETER !\n\n               dsname   = THE DATASET NAME TO BE ALTERED.  MUST BE A\n                          PDS FILE (PO). SHOULD NOT BE A PDSE (POE), AS\n                          THESE FILES MANAGE THEIR OWN DIRECTORIES (PDSE\n                          FILES ARE IGNORED WITH A RETURN CODE ZERO).\n                          THE DSNAME MUST BE FULLY QUALIFIED AND DOES\n                          NOT NEED TO BE ENCLOSED IN TIC MARKS OR\n                          QUOTES.  THEY WILL BE IGNORED IF THEY ARE\n                          INCLUDED.  THIS PARAMETER IS REQUIRED.\n\n                FORCE   = THIS IS AN OPTIONAL KEYWORD PARAMETER USED\n                          TO FORCE THE EXCUTION OF A COMPRESS\n                          COMMAND EVEN IF EXCLUSIVE CONTROL OF THE\n                          RESOURCE CANNOT BE OBTAINED.  USE OF FORCE\n                          IS NOT NECESSARY IF EXCLUSIVE CONTROL OF\n                          THE RESOURCE CAN BE OBTAINED. THIS\n                          PARAMETER MUST FOLLOW THE DSNAME PARAMETER.\n                          THIS PARAMETER SHOULD BE USED WITH CAUTION.\n                          EXCLUSIVE SERIALIZATION IS THE SAFEST WAY\n                          TO ENSURE DATA INTEGRITY OF THE RESOURCE\n                          FOR ALL USERS.\n\n                 DEBUG  = THE PARAMETER WHICH DISPLAYS THE EXEC\n                          STATEMENTS AS THEY ARE BEING EXECUTED.\n                          THIS PARAMETER IS OPTIONAL AND USED FOR\n                          DEBUGGING PURPOSES. THIS PARAMETER MUST\n                          FOLLOW THE DSNAME PARAMETER.\n\n   OUTPUT PARMS:\n\n          RC (RETURN CODE) IS PASSED TO THE CALLING EXEC OR CLIST.\n          (REFERENCE &LASTCC IN A CLIST, RC IN A REXX EXEC).\n\n\n    RETURN CODES FROM THE COMPRESS EXEC:\n\n    0     => SUCCESSFUL CALL TO PROGRAM PDSCLEAN VIA COMPRESS EXEC\n    4     => MINOR ERROR IN PROGRAM PDSCLEAN FROM COMPRESS PARMS\n    8     => RETURN CODE 8 CAN BE RETURNED FOR ANY OF THE FOLLOWING\n             SITUATIONS:\n             COMMAND IS MISSING OR INVALID FROM THE COMPRESS EXEC.\n             DSNAME IS MISSING OR INVALID (2ND PARAMETER)\n             RECEIVED A BAD RETURN CODE FROM THE STOW MACRO\n             DDNAME SPECIFIED ON PARM PASSED TO PDSCLEAN IS NOT IN THE\n               TIOT TABLE (THIS ERROR SHOULD NOT OCCUR).\n             THE RESOURCE COULD NOT BE EXCLUSIVELY SERIALIZED AND THE\n               FORCE PARAMETER WAS NOT USED.\n    12    => INVALID REXX EXEC COMMAND\n    16    => SEVERE ERROR - TERMINATES ALL SYSIN PROCESSING\n\n   EXCEPTIONS:\n\n    PDSE DATASETS DO NOT NEED TO BE COMPRESSED.  AN INFORMATIONAL\n    MESSAGE IS DISPLAYED WHEN A PDSE IS ATTEMPTED TO BE COMPRESSED\n    INDICATING THIS WITH A ZERO RETURN CODE.\n\n   EXAMPLE CALLS:\n\n    COMPRESS  MY.PDS\n    COMPRESS  MY.PDSE\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HELPPDS": {"ttr": 1036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00V\\x01\\x040/\\x01\\t\\x16\\x0f\\t1\\x00\\x8f\\x00\\x83\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2004-10-28T00:00:00", "modifydate": "2009-06-09T09:31:56", "lines": 143, "newlines": 131, "modlines": 0, "user": "TKMILLE"}, "text": ")F FUNCTION - PERFORMS THREE FUNCTIONS FOR PDS AND          V01.01.07\n              PDS/E DATASETS:\n\n   1)  CLEANS (EMPTIES) PDS AND PDSE DATASETS\n   2)  INCREASES THE DIRECTORY BLOCK ALLOCATION VALUE FOR PDS DATASETS\n   3)  COMPRESSES PDS DATASETS\n\n\n   THIS PROGRAM WAS PICKED UP FROM THE CBT TAPE (CBT FILE 040 FROM\n   PEOPLES NATIONAL BANK OF WASHINGTON).\n\n   ADDED CODE TO CLEAN A PDS/E AND CHANGE THE INPUT TO A SYSIN FILE.\n   ADDED CODE TO CHANGE THE INPUT TO PROCESSING A SYSIN FILE.\n                               - TKMILLE/RLRICE 09/01/2004\n   ADDED CODE TO COMPRESS A PDS OR PDS/E LIBRARY.\n                               - TKMILLE        10/27/2004\n   CHANGED THE PROGRAM TO BE REENTRANT AND AMODE 31.\n                               - TKMILLE        06/09/2009\n\n   THIS PROGRAM WILL PERFORM THREE (3) FUNCTIONS:\n   1) REINITIALIZE ONE OR MORE PARTIONED DATASETS (OR PDSE'S)\n   2) INCREASE THE NUMBER OF DIRECTORY BLOCKS FOR A PARTITIONED\n      DATASET.\n   3) COMPRESS A PDS DATASET.\n\n   BY REINITIALIZE IT IS MEANT THAT THE DIRECTORY BLOCKS WILL\n   BE REWRITTEN TO ZEROS AND THE NEXT AVAILABLE POINTER RESET\n   TO THE START OF THE DIRECTORY.\n   ALSO THE NEXT AVAILABLE DATA AREA POINTER IS RESET TO FOLLOW\n   DIRECTORY AREA.\n   THE ADVANTAGE OF THIS METHOD IS THAT THE DATA SET\n   DOES NOT HAVE TO BE SCRATCHED AND REALLOCATED THEREBY\n   PRESERVING THE ALLOCATED AREA (SECONDARY EXTENTS ARE NOT RELEASED)\n   THIS EFFECTIVELY ACCOMPLISHES A COMPRESS OF THE EMPTY DATASET.\n\n   FOR PDS/E DATASETS, THE STOW MACRO IS USED TO INITIALIZE\n   THE MEMBERS OF THE DATASET.  IF IBM APAR OA13224 IS NOT APPLIED\n   ON THE RUNNING SYSTEM, THEN THE DISPOSITION IN THE JCL MUST\n   BE SET TO EITHER DISP=MOD OR DISP=OLD FOR PDS/E DATASETS.\n   HOWEVER, IF THIS APAR IS APPLIED, THE DISPOSITION CAN BE DISP=SHR\n   FOR PDSE's. THIS APAR DOES NOT AFFECT PDS DATASETS. HOWEVER,\n   IT IS A GOOD IDEA TO USE THESE DISPOSTIONS FOR PDS DATASETS\n   AS WELL.\n\n   INPUT SYSIN RECORDS IN ONE OF THESE THREE COMMAND FORMATS:\n   (THE FUNCTION VERB CAN START IN ANY COLUMN)\n\n   ZErodir  DDNAME\n   COmpress DDNAME\n   ALterdir DDNAME +NNNN  (WHERE NNNN IS ADDITIONAL DIRECTORY BLOCKS\n                           NNNN IS A NUMERIC NUMBER FROM 1-8 DIGITS.\n                           NEGATIVE DIRBLKS VALUES ARE NOT ALLOWED.\n                           NNNN CAN ALSO BE CODED WITHOUT THE '+'\n                           SIGN.)\n\n   THE FOLLOWING DDNAMES MUST BE ADDED TO THE JCL WHEN USING\n   THE 'ALTERDIR' OR 'COMPRESS' FUNCTION.  THESE 3 ADDITIONAL DDNAMES\n   ARE USED TO CALL IEBCOPY TO UNLOAD/RELOAD THE PDS MEMBERS:\n\n   //UNLOAD   DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))\n   //SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))\n   //SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))\n\n   THE 'ALTERDIR' COMMAND FUNCTION ALSO COMPRESSES PDS DATASETS USING\n   'IEBCOPY' UNLOAD/RELOAD TO/FROM A TEMP FILE.  IT IS THEREFORE A\n   GOOD IDEA TO USE DISP=OLD ON THE FILE ALLOCATION FOR 'ALTERDIR'\n   AND 'COMPRESS' FUNCTIONS.\n\n   IF THE IEBCOPY RELOAD PROCESS FAILS FOR LACK OF SPACE TO RELOAD\n   THE MEMBERS, THE DIRECTORY BLOCKS ARE RESET TO THEIR ORIGINAL\n   ALLOCATION VALUE AND THE PDS IS RELOADED WITH THE UNLOAD IMAGE\n   TO RESTORE THE PDS TO ITS ORIGINAL STATE (SEE RECOV_FL).\n\n   THE NUMBER OF DIRECTORY BLOCKS CAN BE INCREASED (NOT DECREASED)\n   BY RESPECIFYING THE ADDITIONAL AMOUNT OF BLOCKS ON THE 'ALTERDIR'\n   STATEMENT (DOES NOT APPLY TO PDS/ES).\n\n   SAMPLE JCL:\n   //PDSCLEAN EXEC PGM=PDSCLEAN\n   //SYSPRINT DD SYSOUT=*\n   //$SYSPRT$ DD SYSOUT=*\n   //SYSUDUMP DD SYSOUT=*\n   //DD1      DD DISP=OLD,DSN=MY.PDS1\n   //DD2      DD DISP=OLD,DSN=MY.PDS2\n   //DD3      DD DISP=OLD,DSN=MY.PDSE1\n   //DD4      DD DISP=SHR,DSN=MY.PDSE2    DISP=SHR OK WITH APAR OA13224\n   //DD5      DD DISP=OLD,DSN=MY.PDS3\n   //DD6      DD DISP=OLD,DSN=MY.UNCOMPR.PDS\n   //UNLOAD   DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))\n   //SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))\n   //SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))\n   //SYSIN    DD *\n      ZERODIR  DD1\n      ZE       DD2\n      ALTERDIR DD2 +7\n      ZERODIR  DD3\n      ZERODIR  DD4\n      AL       DD5  6\n      COMPRESS DD5\n      CO       DD6\n      ALTERDIR DD6 +0    (SAME EFFECT AS A COMPRESS)\n   /*\n\n   NOTES:\n    (1) IN THE SAMPLE JCL LISTED ABOVE, DDNAMES\n        \"DD1\", \"DD2\", \"DD3\" AND \"DD4\" WILL BE CLEANED (EMPTIED).\n        (DDNAMES \"DD3\" AND \"DD4\" ARE PDSES).\n    (2) DDNAME \"DD2\" WILL ALSO HAVE ITS DIRECTORY BLOCK ALLOCATION\n        VALUE CHANGE TO OLD ALLOCATION VALUE + 7 BLOCKS.\n    (3) DDNAME \"DD5\" WILL ALSO HAVE ITS DIRECTORY BLOCK ALLOCATION\n        VALUE CHANGE TO OLD ALLOCATION VALUE + 6 BLOCKS.\n    (4) YOU CANNOT SPECIFY A NEGATIVE DIRECTORY BLOCK CHANGE ON THE\n        'ALTERDIR' COMMAND STATEMENT.\n    (5) YOU CANNOT USE ANY OF THE FOLLOWING DDNAMES WITH YOUR\n        COMMANDS BECAUSE THEY ARE ALREADY USED BY PDSCLEAN:\n           UNLOAD  SYSUT1  SYSUT2\n    (6) THE COMMANDS 'EMPTYO' AND 'EMPTY' CAN BE USED IN LIEU OF\n        'ZERODIR'.  THESE ARE ALIASES THAT SOME PEOPLE ARE USED TO\n        USING IN PLACE OF 'ZERODIR'.\n    (7) DISP=OLD MUST BE USED TO 'ZERODIR' PDS/E DATASETS UNLESS APAR\n        OA13224 IS APPLIED.  HOWEVER, THIS SHOULD BE USED WITH PDS\n        AND PDS/E FILES ANYWAY (WHETHER USING 'ALTERDIR', 'COMPRESS',\n        OR 'ZERODIR'), BUT IT IS NOT MANDATORY.\n    (8) IF A DIRECTORY BLOCKS VALUE IS CODED ON THE 'ZERODIR'\n        COMMAND, IT IS IGNORED.\n    (9) COMMENTS ARE ALLOWED TO BE CODED AFTER THE COMMANDS.  THESE\n        MUST BE DELIMITED WITH A TRAILING BLANK BEHIND THE COMMAND.\n        BLANK LINES ARE ALSO ALLOWED.  OTHER THAN THIS, COMMENTS ARE\n        NOT ALLOWED IN THE FORM OF LEADING \"/*\" OR \"*\".\n\n   RETURN CODES FROM PDSCLEAN:\n\n   0      => SUCCESSFULL CALL TO PDSCLEAN\n   4      => MINOR ERROR IN PDSCLEAN SYSIN INPUT COMMANDS (WARNING)\n   8      => COMMAND CODE IS MISSING OR INVALID ON SYSIN RECORD\n             DDNAME IS MISSING OR INVALID ON SYSIN RECORD\n             DIRECTORY BLOCKS VALUE MISSING OR INVALID ON SYSIN\n                 RECORD ON THE 'ALTERDIR' COMMAND\n             BAD RETURN CODE FROM STOW MACRO\n             TRIED TO ISSUE 'ALTERDIR' FUNCTION AGAINST A PDS/E FILE\n             DDNAME SPECIFIED ON SYSIN RECORD NOT FOUND IN TIOT TABLE\n  16      => SEVERE ERROR - TERMINATES ALL SYSIN PROCESSING\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HELPZER": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x19\\x01\\x04%\\x9f\\x01\\x10\\x16\\x0f\\x11\\x14\\x00C\\x002\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2004-09-15T00:00:00", "modifydate": "2010-06-09T11:14:19", "lines": 67, "newlines": 50, "modlines": 0, "user": "TKMILLE"}, "text": ")F FUNCTION - EMPTY THE DIRECTORY OF A PDS OR A PDS/E FILE. V01.01.09\n              THIS, IN EFFECT, DELETES ALL OF THE MEMBERS.\n\n)X SYNTAX -\n             ZERODIR   dsname  [Nomsg]  [Force]  [Debug]\n\n)O OPERANDS -\n\n               dsname   = THE DATASET NAME TO BE EMPTIED.  MUST BE A\n                          PDS OR A PDS/E FILE (MUST BE DSORG=PO OR\n                          POE).\n                          THE DSNAME MUST BE FULLY QUALIFIED AND DOES\n                          NOT NEED TO BE ENCLOSED IN TIC MARKS OR\n                          QUOTES.  THEY WILL BE IGNORED IF THEY ARE\n                          INCLUDED.\n\n                 FORCE  = THIS IS AN OPTIONAL KEYWORD PARAMETER USED\n                          TO FORCE THE EXCUTION OF AN ZERODIR\n                          COMMAND EVEN IF EXCLUSIVE CONTROL OF THE\n                          RESOURCE CANNOT BE OBTAINED.  USE OF FORCE\n                          IS NOT NECESSARY IF EXCLUSIVE CONTROL OF\n                          THE RESOURCE CAN BE OBTAINED. THIS PARAMETER\n                          MUST FOLLOW THE DSNAME PARAMETER.\n                          THIS PARAMETER SHOULD BE USED WITH CAUTION.\n                          EXCLUSIVE SERIALIZATION IS THE SAFEST WAY\n                          TO ENSURE DATA INTEGRITY OF THE RESOURCE\n                          FOR ALL USERS.\n\n                NOMSG   = THIS IS AN OPTIONAL KEYWORD PARAMETER USED\n             or NOMSGS    TO BYPASS THE DISPLAY OF THE SUMMARY\n                          MESSAGES.  WITH THE \"NOMSG\" PARM, ONLY A\n                          RETURN CODE IS RETURNED.  NO MESSAGES ARE\n                          DISPLAYED ON THE CONSOLE.\n\n                 DEBUG  = THE PARAMETER WHICH DISPLAYS THE EXEC\n                          STATEMENTS AS THEY ARE BEING EXECUTED.\n                          THIS PARAMETER IS OPTIONAL AND USED FOR\n                          DEBUGGING PURPOSES.  THIS PARAMETER MUST\n                          FOLLOW THE DSNAME PARAMETER.\n\n   OUTPUT PARMS:\n\n          RC (RETURN CODE) IS PASSED TO THE CALLING EXEC OR CLIST.\n          (REFERENCE &LASTCC IN A CLIST, RC IN A REXX EXEC).\n\n\n    RETURN CODES FROM THE ZERODIR EXEC:\n\n    0     => SUCCESSFUL CALL TO PROGRAM PDSCLEAN VIA ZERODIR EXEC\n    4     => MINOR ERROR IN PROGRAM PDSCLEAN FROM ZERODIR PARMS\n    8     => RETURN CODE 8 CAN BE RETURNED FOR ANY OF THE FOLLOWING\n             SITUATIONS:\n             COMMAND IS MISSING OR INVALID FROM THE ZERODIR EXEC.\n             DSNAME IS MISSING OR INVALID (2ND PARAMETER)\n             RECEIVED A BAD RETURN CODE FROM THE STOW MACRO\n             DDNAME SPECIFIED ON PARM PASSED TO PDSCLEAN IS NOT IN THE\n               TIOT TABLE (THIS ERROR SHOULD NOT OCCUR).\n             THE RESOURCE COULD NOT BE EXCLUSIVELY SERIALIZED AND THE\n               FORCE PARAMETER WAS NOT USED.\n    12    => INVALID REXX EXEC COMMAND\n    16    => SEVERE ERROR - TERMINATES ALL SYSIN PROCESSING\n\n   EXAMPLE CALLS:\n\n    ZERODIR  MY.PDS\n    ZERODIR  MY.PDSE\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IVPTEST": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00Y\\x01\\x041\\x7f\\x01\\t\\x16\\x1f\\x082\\x00H\\x00\\x03\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2004-11-12T00:00:00", "modifydate": "2009-06-10T08:32:59", "lines": 72, "newlines": 3, "modlines": 0, "user": "TKMILLE"}, "text": "//IVPTEST  JOB ' PDSCLEAN IVPTEST                              ',\n//     TIME=(2,00),REGION=0M\n//************************************************************\n//*  IVP TEST - TERRY MILLER  LAST REVISION DATE: 06/09/2009\n//*  CREATE TWO PDS FILES AND ONE PDSE FILE WITH MEMBERS FOR\n//*  IVP TESTING BEFORE SUBMITTING THIS JOB.\n//*  CHANGE ALL \"HLQ\" TO YOUR HLQ BEFORE SUBMITTING THIS JOB.\n//*  V01.01.07\n//*\n//*  AUDIT SUMMARY SHOULD SHOW (DEPENDING ON WHETHER APAR OA13224*\n//*  IS APPLIED):\n//*\n//*  TOTAL NUMBER OF INPUT SYSIN RECORDS PROCESSED      => 0000043\n//*  TOTAL NUMBER OF INVALID SYSIN RECORDS PROCESSED    => 0000006\n//*  TOTAL NUMBER OF VALID SYSIN RECORDS PROCESSED      => 0000037\n//*  TOTAL NUMBER OF ERRORS ENCOUNTERED                 => 0000004*\n//*  TOTAL NUMBER OF DATASETS CLEANED (EMPTIED)         => 0000017*\n//*  TOTAL NUMBER OF DIRECTORY BLOCK ALTERATIONS        => 0000008\n//*  TOTAL NUMBER OF PDS/PDSE LIBRARIES COMPRESSED      => 0000007\n//*  MAXIMUM RETURN CODE ENCOUNTERED ON THIS EXECUTION  => 0000008\n//*\n//************************************************************\n//PDSCLEAN    EXEC PDSCLEAN\n//DD1         DD DISP=SHR,DSN=HLQ.TESTPDS\n//DD3         DD DISP=SHR,DSN=HLQ.TESTPDS2\n//DD4         DD DISP=SHR,DSN=HLQ.TESTPDSE\n//DD5         DD DISP=OLD,DSN=HLQ.TESTPDSE\n//SYSIN       DD *,DCB=(BLKSIZE=80)\n   ALT\n   ZER\n   ALT        DD1  A           (NON-NUMERIC DIRECTORY BLOCKS)\n   ALT        DD1  -2          (NEGATIVE DIRECTORY BLOCKS)\n   ALT        DD1  999999999   (DIRECTORY BLOCKS FIELD IS TOO BIG)\n   A          DD2  0           (FUNCTION NAME LENGTH < 2)\n   AZZ        DD2  0           (INVALID FUNCTION NAME)\n   ALT        DD2  0           (DDNAME NOT FOUND IN TIOT)\n   ALTERDIR   DD3  +99999999   (SHOULD FAIL - NOT ENOUGH ROOM)\n   ALTERDIR   DD4  +5          (SHOULD FAIL - CAN'T ALTER A PDSE)\n   ZERODIR    DD4              (WILL FAIL IF APAR OA13224 NOT APPLIED)\n   ALTERDIR   DD1  +1          (SHOULD WORK OK)\n   ALTERDI    DD1  +1          (SHOULD WORK OK)\n   ALTERD     DD1  +1          (SHOULD WORK OK)\n   ALTER      DD1  +1          (SHOULD WORK OK)\n   ALTE       DD1  +1          (SHOULD WORK OK)\n   ALT        DD1  +1          (SHOULD WORK OK)\n   AL         DD1  +1          (SHOULD WORK OK)\n   ALTERDIR   DD3  +5          (SHOULD WORK OK)\n   COMPRESS   DD1  0           (SHOULD WORK OK)\n   COMPRES    DD1  0           (SHOULD WORK OK)\n   COMPRE     DD1  0           (SHOULD WORK OK)\n   COMPR      DD1  0           (SHOULD WORK OK)\n   COMP       DD1  0           (SHOULD WORK OK)\n   COM        DD1  0           (SHOULD WORK OK)\n   CO         DD1  0           (SHOULD WORK OK)\n   COMPRESS   DD4              (SHOULD IGNORE PDSE'S)\n   ZERODIR    DD1  0           (SHOULD WORK OK)\n   ZERODI     DD1  0           (SHOULD WORK OK)\n   ZEROD      DD1  0           (SHOULD WORK OK)\n   ZERO       DD1  0           (SHOULD WORK OK)\n   ZER        DD1  0           (SHOULD WORK OK)\n   ZE         DD1  0           (SHOULD WORK OK)\n   EMPTYDIR   DD1  0           (SHOULD WORK OK)\n   EMPTYDI    DD1  0           (SHOULD WORK OK)\n   EMPTYD     DD1  0           (SHOULD WORK OK)\n   EMPTY      DD1  0           (SHOULD WORK OK)\n   EMPTYO     DD1  0           (SHOULD WORK OK)\n   EMPT       DD1  0           (SHOULD WORK OK)\n   EMP        DD1  0           (SHOULD WORK OK)\n   EM         DD1  0           (SHOULD WORK OK)\n   ZERODIR    DD3              (SHOULD WORK OK)\n   ZERODIR    DD5              (SHOULD WORK OK PDS/E)\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDSCLEAN": {"ttr": 1286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x000\\x01\\t\\x14\\x7f\\x01\\x10\\x00\\x7f\\x10\\x15\\x07\\xd2\\x073\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2009-05-27T00:00:00", "modifydate": "2010-01-07T10:15:30", "lines": 2002, "newlines": 1843, "modlines": 0, "user": "TKMILLE"}, "text": "*          PPPP  DDDD   SSSS  CCCC L     EEEEE   A   N   N            *\n*          P   P D   D S     C     L     E      A A  NN  N            *\n*          PPPP  D   D  SSS  C     L     EEEE  A   A N N N            *\n*          P     D   D     S C     L     E     AAAAA N  NN            *\n*          P     DDDD  SSSS   CCCC LLLLL EEEEE A   A N   N            *\n*                                                                     *\n         TITLE 'PDSCLEAN - PDS/PDSE UTILITY PROGRAM'\nPDSCLEAN  CSECT\nPDSCLEAN  AMODE 31\nPDSCLEAN  RMODE 24\n***********************************************************************\n*                                                                     *\n*  THIS PROGRAM WAS PICKED UP FROM THE CBT TAPE (CBT FILE 040 FROM    *\n*  PEOPLES NATIONAL BANK OF WASHINGTON).                              *\n*                                                                     *\n*  ADDED CODE TO CLEAN A PDS/E AND CHANGE THE INPUT TO A SYSIN FILE.  *\n*  ADDED CODE TO CHANGE THE INPUT TO PROCESSING A SYSIN FILE.         *\n*                              - TKMILLE/RLRICE 09/01/2004            *\n*  ADDED CODE TO COMPRESS A PDS DATASET.                              *\n*                              - TKMILLE        10/27/2004            *\n*  MADE THE PROGRAM REENTRANT AND AMODE 31.                           *\n*                              - TKMILLE        06/09/2009            *\n*  CHANGED PROGRAM TO USE THE UNIVERSAL DATASET CONVERSION ROUTINE    *\n*     CVTPCNVT (IECPCNVT) TO ACCOMODATE PDS DATASETS HAVING MORE      *\n*     THAN 65,635 TRACKS IN THE ALTERDIR FUNCTION. CHANGED PROGRAM    *\n*     TO USE ENTRY POINT AT OFFSET +12 FROM THE ADDRESS IN CVTPCNVT   *\n*     PER THE IBM DOCUMENT SC26-7400-07 (DFSMSdfp Advanced Services   *\n*     Manual).                 - TKMILLE        06/23/2009            *\n*                                                                     *\n*  THIS PROGRAM WILL PERFORM THREE (3) FUNCTIONS:                     *\n*  1) REINITIALIZE ONE OR MORE PARTIONED DATASETS (OR PDSE'S)         *\n*  2) INCREASE THE NUMBER OF DIRECTORY BLOCKS FOR A PARTITIONED       *\n*     DATASET.                                                        *\n*  3) COMPRESS A PDS DATASET.                                         *\n*                                                                     *\n*  BY REINITIALIZE IT IS MEANT THAT THE DIRECTORY BLOCKS WILL         *\n*  BE REWRITTEN TO ZEROS AND THE NEXT AVAILABLE POINTER RESET         *\n*  TO THE START OF THE DIRECTORY.                                     *\n*  ALSO THE NEXT AVAILABLE DATA AREA POINTER IS RESET TO FOLLOW       *\n*  DIRECTORY AREA.                                                    *\n*  THE ADVANTAGE OF THIS METHOD IS THAT THE DATA SET                  *\n*  DOES NOT HAVE TO BE SCRATCHED AND REALLOCATED THEREBY              *\n*  PRESERVING THE ALLOCATED AREA.                                     *\n*                                                                     *\n*  FOR PDS/E DATASETS, THE STOW MACRO IS USED TO INITIALIZE THE       *\n*  MEMBERS OF THE DATASET.  UNLESS IBM APAR OA13224 IS IMPLEMENTED,   *\n*  THE DISPOSITION IN THE JCL MUST BE SET TO EITHER DISP=MOD          *\n*  OR DISP=OLD FOR PDS/E DATASETS (IT IS A GOOD IDEA TO USE           *\n*  EXCLUSIVE SERIALIZATION ANYWAY FOR THE 'PDSCLEAN' FUNCTIONS TO     *\n*  GUARANTEE DATA INTEGRITY FOR ALL USING THE LIBRARIES INVOLVED).    *\n*                                                                     *\n*  INPUT SYSIN RECORDS IN ONE OF THESE THREE COMMAND FORMATS:         *\n*  (THE FUNCTION VERB CAN START IN ANY COLUMN)                        *\n*                                                                     *\n*  ZErodir  DDNAME                                                    *\n*  COmpress DDNAME                                                    *\n*  ALterdir DDNAME +NNNN  (WHERE NNNN IS ADDITIONAL DIRECTORY BLOCKS  *\n*                          NNNN IS A NUMERIC NUMBER FROM 1-8 DIGITS.  *\n*                          NEGATIVE DIRBLKS VALUES ARE NOT ALLOWED.   *\n*                          NNNN CAN ALSO BE CODED WITHOUT THE '+'     *\n*                          SIGN.)                                     *\n*                                                                     *\n*  THE FOLLOWING DDNAMES MUST BE ADDED TO THE JCL WHEN USING          *\n*  THE 'ALTERDIR' OR 'COMPRESS' FUNCTION.  THESE 3 ADDITIONAL DDNAMES *\n*  ARE USED TO CALL IEBCOPY TO UNLOAD/RELOAD THE PDS MEMBERS:         *\n*                                                                     *\n*  //UNLOAD      DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))               *\n*  //SYSUT1      DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))               *\n*  //SYSUT2      DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))               *\n*                                                                     *\n*  THE 'ALTERDIR' COMMAND FUNCTION ALSO COMPRESSES PDS DATASETS USING *\n*  'IEBCOPY' UNLOAD/RELOAD TO/FROM A TEMP FILE.  IT IS THEREFORE A    *\n*  GOOD IDEA TO USE DISP=OLD ON THE FILE ALLOCATION FOR 'ALTERDIR',   *\n*  'COMPRESS', AND 'ZERODIR' FUNCTIONS.                               *\n*                                                                     *\n*  IF THE IEBCOPY RELOAD PROCESS FAILS FOR LACK OF SPACE TO RELOAD    *\n*  THE MEMBERS, THE DIRECTORY BLOCKS ARE RESET TO THEIR ORIGINAL      *\n*  ALLOCATION VALUE AND THE PDS IS RELOADED WITH THE UNLOAD IMAGE     *\n*  TO RESTORE THE PDS TO ITS ORIGINAL STATE (SEE RECOV_FL).           *\n*                                                                     *\n*  THE NUMBER OF DIRECTORY BLOCKS CAN BE INCREASED (NOT DECREASED)    *\n*  BY RESPECIFYING THE ADDITIONAL AMOUNT OF BLOCKS ON THE 'ALTERDIR'  *\n*  STATEMENT (DOES NOT APPLY TO PDS/ES).                              *\n*                                                                     *\n*  SAMPLE JCL:                                                        *\n*  //PDSCLEAN EXEC PGM=PDSCLEAN                                       *\n*  //SYSPRINT DD SYSOUT=*                                             *\n*  //$SYSPRT$ DD SYSOUT=*                                             *\n*  //SYSUDUMP DD SYSOUT=*                                             *\n*  //DD1      DD DISP=OLD,DSN=MY.PDS1                                 *\n*  //DD2      DD DISP=OLD,DSN=MY.PDS2                                 *\n*  //DD3      DD DISP=OLD,DSN=MY.PDSE1                                *\n*  //DD4      DD DISP=SHR,DSN=MY.PDSE2   OK WITH APAR OA13224 APPLIED *\n*  //DD5      DD DISP=OLD,DSN=MY.PDS3                                 *\n*  //DD6      DD DISP=OLD,DSN=MY.UNCOMPR.PDS                          *\n*  //UNLOAD   DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))                  *\n*  //SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))                  *\n*  //SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))                  *\n*  //SYSIN    DD *                                                    *\n*     ZERODIR  DD1                                                    *\n*     ZE       DD2                                                    *\n*     ALTERDIR DD2 +7                                                 *\n*     ZERODIR  DD3                                                    *\n*     ZERODIR  DD4                                                    *\n*     AL       DD5  6                                                 *\n*     COMPRESS DD5                                                    *\n*     CO       DD6                                                    *\n*     ALTERDIR DD6 +0    (SAME EFFECT AS A COMPRESS)                  *\n*  /*                                                                 *\n*                                                                     *\n*  NOTES:                                                             *\n*   (1) IN THE SAMPLE JCL LISTED ABOVE, DDNAMES                       *\n*       \"DD1\", \"DD2\", \"DD3\" AND \"DD4\" WILL BE CLEANED (EMPTIED).      *\n*       (DDNAMES \"DD3\" AND \"DD4\" ARE PDSES).                          *\n*   (2) DDNAME \"DD2\" WILL ALSO HAVE ITS DIRECTORY BLOCK ALLOCATION    *\n*       VALUE CHANGE TO OLD ALLOCATION VALUE + 7 BLOCKS.              *\n*   (3) DDNAME \"DD5\" WILL ALSO HAVE ITS DIRECTORY BLOCK ALLOCATION    *\n*       VALUE CHANGE TO OLD ALLOCATION VALUE + 6 BLOCKS.              *\n*   (4) YOU CANNOT SPECIFY A NEGATIVE DIRECTORY BLOCK CHANGE ON THE   *\n*       'ALTERDIR' COMMAND STATEMENT.                                 *\n*   (5) YOU CANNOT USE ANY OF THE FOLLOWING DDNAMES WITH YOUR         *\n*       COMMANDS BECAUSE THEY ARE ALREADY USED BY PDSCLEAN:           *\n*          UNLOAD  SYSUT1  SYSUT2                                     *\n*   (6) THE COMMANDS 'EMPTYO' AND 'EMPTY' CAN BE USED IN LIEU OF      *\n*       'ZERODIR'.  THESE ARE ALIASES THAT SOME PEOPLE ARE USED TO    *\n*       USING IN PLACE OF 'ZERODIR'.                                  *\n*   (7) DISP=OLD MUST BE USED TO 'ZERODIR' PDS/E DATASETS UNLESS IBM  *\n*       APAR OA13224 IS APPLIED.  THIS IS A GOOD IDEA ANYWAY TO       *\n*       ENSURE DATA INTEGRITY, BUT IT IS NOT MANDATORY. EXCLUSIVE     *\n*       SERIALIZATION SHOULD BE USED FOR ALL OF THE 'PDSCLEAN'        *\n*       FUNCTIONS IF POSSIBLE.                                        *\n*   (8) IF A DIRECTORY BLOCKS VALUE IS CODED ON THE 'ZERODIR'         *\n*       COMMAND, IT IS IGNORED.                                       *\n*   (9) COMMENTS ARE ALLOWED TO BE CODED AFTER THE COMMANDS.  THESE   *\n*       MUST BE DELIMITED WITH A TRAILING BLANK BEHIND THE COMMAND.   *\n*       BLANK LINES ARE ALSO ALLOWED.  OTHER THAN THIS, COMMENTS ARE  *\n*       NOT ALLOWED IN THE FORM OF LEADING \"/*\" OR \"*\".               *\n*                                                                     *\n*  REGISTER USAGE:                                                    *\n*                                                                     *\n*  R0-R4   - WORK REGISTERS                                           *\n*  R5      - MAPS CVT DSECT                                           *\n*  R6      - MAPS EXCP DCB                                            *\n*  R7      - WORK REGISTER                                            *\n*  R8      - THIRD PROGRAM BASE REGISTER CHAINED TO R10               *\n*  R9      - MAPS TCB DSECT                                           *\n*  R10     - SECOND PROGRAM BASE REGISTER CHAINED TO R12              *\n*  R11     - MAPS IOB DSECT (STANDARD SECTION)                        *\n*  R12     - FIRST PROGRAM BASE REGISTER                              *\n*  R13     - MAPS OBTAINED SAVEAREA                                   *\n*  R14-R15 - WORK REGISTERS                                           *\n*                                                                     *\n*  RETURN CODES FROM PDSCLEAN:                                        *\n*                                                                     *\n*  0      => SUCCESSFULL CALL TO PDSCLEAN                             *\n*  4      => MINOR ERROR IN PDSCLEAN SYSIN INPUT COMMANDS (WARNING)   *\n*  8      => COMMAND CODE IS MISSING OR INVALID ON SYSIN RECORD       *\n*            DDNAME IS MISSING OR INVALID ON SYSIN RECORD             *\n*            DIRECTORY BLOCKS VALUE MISSING OR INVALID ON SYSIN       *\n*                RECORD ON THE 'ALTERDIR' COMMAND                     *\n*            BAD RETURN CODE FROM STOW MACRO                          *\n*            TRIED TO ISSUE 'ALTERDIR' FUNCTION AGAINST A PDS/E FILE  *\n*            DDNAME SPECIFIED ON SYSIN RECORD NOT FOUND IN TIOT TABLE *\n* 16      => SEVERE ERROR - TERMINATES ALL SYSIN PROCESSING           *\n*                                                                     *\n*                                                                     *\n*  CERTIFICATION                                                      *\n*  -------------                                                      *\n*                                                                     *\n*  THE SOURCE CODE FOR 'PDSCLEAN' MUST BE ASSEMBLED WITH              *\n*  THE HIGH-LEVEL ASSEMBLER.                                          *\n*                                                                     *\n*  THE 'PDSCLEAN' MODULE MUST RESIDE IN AN APF-AUTHORIZED             *\n*  LIBRARY WITH AUTHORIZATION CODE 001 (AC=1).                        *\n*                                                                     *\n*  THE 'PDSCLEAN' MODULE MUST RESIDE IN THE IKJTSO00 MEMBER IN THE    *\n*  'AUTHPGM' SECTION IF THIS PROGRAM IS CALLED FROM A TSO REXX        *\n*  EXEC (SUCH AS 'ALTERDIR', 'COMPRESS', AND 'ZERODIR' WHICH COME     *\n*  ALONG WITH THIS PROGRAM ON THE CBT TAPE - FILE 693).               *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*        HOUSEKEEPING                                                 *\n*                                                                     *\n***********************************************************************\n         SAVE  (14,12),,PDSCLEAN_ASSEMBLED_ON_&SYSDATC._&SYSTIME\n         LR    R12,R15              Load entry address\n         LA    R10,2048(,R12)       Chain R10 to R12 Base\n         LA    R10,2048(,R10)\n         LA    R8,2048(,R10)        Chain R8  to R10 Base\n         LA    R8,2048(,R8)\n         USING PDSCLEAN,R12,R10,R8  Declare entry base registers\n         LR    R5,R1                Preserve passed parmlist address\n         LR    R6,R13               Store SAVEAREA Backward link\n         L     R3,=A(STORSIZE)      Size of storage to obtain\n         STORAGE OBTAIN,LENGTH=(R3),LOC=(BELOW)\n         ST    R1,8(,R13)           Set SAVEAREA Forward link\n         LR    R13,R1               Address of obtained area\n         USING STORAREA,R13         Addressability to obtained area\nINITOBTN DS    0H                  Initialize the obtained storage area\n         LR    R2,R13               Address of target of move (obtnd)\n         L     R3,=A(STORSIZE)      Length of the target of move\n         XR    R14,R14             From address (irrelevant with len=0)\n         XR    R15,R15              Pad/Length to propagate in odd reg\n         MVCL  R2,R14          Propagate binary zeroes in obtained area\n         L     R1,0(,R5)            Pick up address of parm field\n         ST    R1,PARMADDR          Store passed pointer to parms\n         ST    R6,4(,R13)           Set SAVEAREA Backward link\n*********************************************************************\n         TITLE 'HOUSEKEEPING AND INITIALIZATION'\n*********************************************************************\n         ZAP   SYSINCNT,ZEROPK                    INITIALIZE\n         ZAP   VALIDCNT,ZEROPK                    INITIALIZE\n         ZAP   INVLDCNT,ZEROPK                    INITIALIZE\n         ZAP   ERRORCNT,ZEROPK                    INITIALIZE\n         ZAP   CLEANCNT,ZEROPK                    INITIALIZE\n         ZAP   COMPRSCT,ZEROPK                    INITIALIZE\n         ZAP   DIRCHGCT,ZEROPK                    INITIALIZE\n         MVC   PGMECB,=A(0)                       INITIALIZE\n         MVC   PGMTCB,=A(0)                       INITIALIZE\n         MVC   FUNCTION,BLANKLIN                  INITIALIZE\n         MVC   DDNAME,BLANKLIN                    INITIALIZE\n         MVC   ABENDCD,BLANKLIN                   INITIALIZE\n         MVI   ABENDCD1,C'0'                      INITIALIZE\n         MVC   HEADING1(HEADING1L),BLANKLIN       INITIALIZE\n         MVC   H1LIT1,=CL9'PDSCLEAN '             INITIALIZE\n         MVC   H1LIT2,=CL42'  PDS/PDSE CLEAN/ALTER/COMPRESS PROGRAM   '\n         MVC   TRAILER1(TRAILER1L),BLANKLIN       INITIALIZE\n         MVC   T1LIT1,=CL4' => '                  INITIALIZE\n         MVC   SYSINLN(SYSINLNL),BLANKLIN         INITIALIZE\n         MVC   SYSRECMS,=CL13'SYSIN REC => '      INITIALIZE\n         MVC   MSGTXTLN(MSGTXTL),BLANKLIN         INITIALIZE\n         MVC   READCCW(READCCWL),READCCWI         RELOCATE READCCW\n         LA    R0,IDSEARCH\n         STCM  R0,7,READCCW+1\n         LA    R0,READCCW\n         STCM  R0,7,READCCW+9\n         LA    R0,COUNT\n         STCM  R0,7,READCCW+17\n         MVC   WRITECCW(WRITCCWL),WRITCCWI        RELOCATE WRITECCW\n         LA    R0,IDSEARCH\n         STCM  R0,7,WRITECCW+1\n         LA    R0,WRITECCW\n         STCM  R0,7,WRITECCW+9\n         LA    R0,COUNT\n         STCM  R0,7,WRITECCW+17\n         MVC   EOFCCW(EOFCCWL),EOFCCWI            RELOCATE EOFCCW\n         LA    R0,IDSEARCH\n         STCM  R0,7,EOFCCW+1\n         LA    R0,EOFCCW\n         STCM  R0,7,EOFCCW+9\n         LA    R0,COUNT\n         STCM  R0,7,EOFCCW+17\n         MVC   IEBCOPY_OPTLIST(IEBCOPY_OPTLISTL),IEBCOPY_OPTLISTI\n         MVC   IEBCOPY_DDNMLIST(IEBCOPY_DDNMELSL),IEBCOPY_DDNMELST\n         MVI   IEBCOPY_FUNCTION,C' '              INITIALIZE\n         MVC   SYSPRINT(SYSPRINL),SYSPRINI       RELOCATE SYSPRINT DCB\n         MVC   SYSIN(SYSINIL),SYSINI             RELOCATE SYSIN    DCB\n         MVC   EXCPDCB(EXCPDCBL),EXCPDCBI        RELOCATE EXCPDCB  DCB\n         MVC   PDSEDCB(PDSEDCBL),PDSEDCBI        RELOCATE PDSEDCB  DCB\n*\n         B     HOUSE_CONT\n***********************************************************************\n***********************************************************************\nMOD_LEVEL  DC  CL9'V01.01.08'      PROGRAM VERSION RELEASE MOD. LEVEL\n***********************************************************************\n*********************************************************************\n*        Main routine\n*********************************************************************\nHOUSE_CONT DS  0H\n         MVC   H1VERS,MOD_LEVEL  PROGRAM MAINTENANCE LEVEL VERS.REL.MOD\n         TIME  ,                   GET CURRENT DATE AND TIME\n         STM   R0,R1,CURRTIME       STORE THE CURRENT TIME AND JULDATE\n         CLI   CURRDATE+1,X'80'\n         BH    CENT20\n         MVI   CURRDATE+0,X'20'\n         B     UNPKJDAT\nCENT20   DS    0H\n         MVI   CURRDATE+0,X'19'\nUNPKJDAT DS    0H\n         UNPK  JULIANDT(7),CURRDATE(4)       STORE THE JULIAN DATE\n         OI    JULIANDT+6,X'F0'              FIX THE SIGN\n         MVC   H1DATE(4),JULIANDT\n         MVI   H1DATE+4,C'.'\n         MVC   H1DATE+5(3),JULIANDT+4\n         MVC   DATEXXXX(7),JULIANDT\n         MVC   STORTIME,CURRTIME\n         MVI   STORTMSG,X'0F'\n         UNPK  TIME9(9),STORTIME(5)          UNPACK THE TIME\n         MVC   DISPTMHH(2),TIME9\n         MVI   DISPTMC1,C':'\n         MVC   DISPTMMM(2),TIME9+2\n         MVI   DISPTMC2,C':'\n         MVC   DISPTMSS(2),TIME9+4\n         MVC   H1TIME(8),DISPTIME\n         LA    R3,SYSPRINT                 DCB to open\n         MVC   WKOPENCL(OPENIL),OPENI\n         LA    R4,WKOPENCL                 OPEN/CLOSE WORK AREA\n         OPEN  ((R3),OUTPUT),MODE=31,MF=(E,(R4))   OPEN SYSPRINT DCB\n         PUT   SYSPRINT,HEADING1   OUTPUT HEADING LINE 1\n*---------------------------------------------------------------------*\n*                                                                     *\n*  PROCESS THE SYSIN RECORDS AND PARSE OUT THE TOKEN KEYWORDS         *\n*                                                                     *\n*  REGISTER USAGE:                                                    *\n*                                                                     *\n*   R2  - CHARACTER POINTER WITHIN SYSIN RECORD                       *\n*   R3  - FIRST SIGNIFICANT CHAR WITHIN CURRENT TOKEN BEING PARSED    *\n*   R4  - LENGTH OF TOKEN CURRENTLY BEING PARSED                      *\n*   R5  - POINTS TO THE SYSIN INPUT RECORD BUFFER AREA                *\n*   R6  - RIGHT JUSTIFIER INDEX REGISTER FOR DIR BLOCKS FIELD ON THE  *\n*         'ALTERDIR' COMMAND.                                         *\n*         ALSO USED TO PASS RETURN CODE TO MAX RETURN CODE ROUTINE    *\n*                                                                     *\n*  INPUT SYSIN RECORDS (ONE OF THESE THREE FORMATS):                  *\n*                                                                     *\n*  ZERODIR  DDNAME                                                    *\n*  COMPRESS DDNAME                                                    *\n*  ALTERDIR DDNAME +NNNN  (WHERE NNNN IS ADDITIONAL DIRECTORY BLOCKS  *\n*                          NNNN IS A NUMERIC NUMBER FROM 1-8 DIGITS.  *\n*                          NEGATIVE DIRBLKS VALUES ARE CHANGED TO     *\n*                          THEIR POSITIVE ABSOLUTE VALUE SINCE THEY   *\n*                          (NEGATIVES) ARE NOT ALLOWED.               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         TITLE 'TEST THE APF AUTHORIZATION - PROCEDURE'\n*---------------------------------------------------------------------*\nTEST_APF DS  0H\n         TESTAUTH                  CHECK APF AUTHORIZATION\n         LTR   R15,R15             APF AUTHORIZED ?\n         BZ    OPEN_SYSIN          YES - SKIP\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,NOTAUTHM     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,BLANKLIN\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\nOPEN_SYSIN DS  0H\n*---------------------------------------------------------------------*\n         TITLE 'PROCESS SYSIN RECORD - PROCEDURE'\n         LA    R3,SYSIN                DCB to open\n         MVC   WKOPENCL(OPENIL),OPENI\n         LA    R4,WKOPENCL             OPEN/CLOSE WORK AREA\n         OPEN  ((R3),INPUT),MODE=31,MF=(E,(R4))   OPEN SYSIN DCB\n         MVI   OPENED_SYSIN,C'Y'\n*---------------------------------------------------------------------*\nGET_SYSIN  DS  0H\n         GET   SYSIN,SYSINREC\n         LA    R5,SYSINREC\n         CLC   SYSINREC(SYSINRCL),BLANKLIN  IS THIS A BLANK SYSIN LINE?\n         BE    GET_SYSIN                    YES - IGNORE IT\n         MVI   HAVE_FUNC,C'N'\n         MVI   HAVE_DDN,C'N'\n         MVI   HAVE_DB,C'N'\n         AP    SYSINCNT,ONEPK          INCREMENT SYSIN INPUT REC COUNT\n         PUT   SYSPRINT,BLANKLIN       OUTPUT BLANK LINE\n         MVC   SYSRECRD,SYSINREC\n         PUT   SYSPRINT,SYSINLN        OUTPUT SYSIN RECORD\n         LA    R2,SYSINREC-1\n**********************************************************************\n*** FUNCTION LOOP (GET FUNCTION TOKEN) *******************************\n**********************************************************************\nFUNC_LOOP  DS  0H\n         LA    R2,1(,R2)\n         LA    R1,SYSINRCL(,R5)\n         CR    R2,R1               EXCEEDED SYSIN RECORD LENGTH ?\n         BH    ASSESS_TOKENS       YES - REACHED END OF RECORD\n         CLI   0(R2),C' '           HAVE A BLANK DELIMITER ?\n         BE    FL_01                YES - THEN VALIDATE THE TOKEN\n         CLI   0(R2),X'00'          HAVE A NULL DELIMITER ?\n         BE    FL_01                YES - THEN VALIDATE THE TOKEN\n         CLI   HAVE_FUNC,C'Y'\n         BE    FUNC_LOOP\n         MVI   HAVE_FUNC,C'Y'\n         LR    R3,R2                R3 POINTS TO START OF INPUT TOKEN\n         B     FUNC_LOOP\nFL_01    DS    0H                  HAVE A BLANK OR NULL CHARACTER\n         CLI   HAVE_FUNC,C'Y'\n         BNE   FUNC_LOOP           HAVEN'T HAD 1ST TOKEN YET (FUNCTION)\n         LR    R4,R2\n         LR    R1,R3\n         SR    R4,R1               GET LENGTH OF FUNCTION TOKEN\n         ST    R4,FUNCTLN          STORE LENGTH OF FUNCTION TOKEN\n         BCTR  R4,0                SUBTRACT 1 FOR EX OPCODE\n         MVC   FUNCTION,BLANKLIN\n         MVC   MSGDSN,BLANKLIN\n         EX    R4,MVINVMSG\n         EX    R4,MVFUNCTN\n         CLC   FUNCTLN,=A(2)       IS LENGTH OF TOKEN < 2 ?\n         BL    TOKNLNER            FUNCTION LENGTH ERROR\n         LA    R1,8(,R3)\n         CR    R2,R1               EXCEEDED FUNCTION LENGTH (8 CHARS)?\n         BH    INVFUNCN\n         EX    R4,CMPZEROD         COMMAND FUNCTION = 'ZERODIR' ?\n         BE    LDZERDIR            YES - VALID FUNCTION - MOVE ON\n         EX    R4,CMPALTDR         COMMAND FUNCTION = 'ALTERDIR' ?\n         BE    LDALTDIR            YES - VALID FUNCTION - MOVE ON\n         EX    R4,CMPCOMPR         COMMAND FUNCTION = 'COMPRESS' ?\n         BE    LDCOMPRS            YES - VALID FUNCTION - MOVE ON\n         EX    R4,CMPEMPTY         COMMAND FUNCTION = 'EMPTY' ?\n         BE    LDZERDIR            YES - REPLACE WITH 'ZERODIR' - GO ON\n         EX    R4,CMPEMPTO         COMMAND FUNCTION = 'EMPTYO' ?\n         BE    LDZERDIR            YES - REPLACE WITH 'ZERODIR' - GO ON\n         EX    R4,CMPEMPDR         COMMAND FUNCTION = 'EMPTYDIR' ?\n         BE    LDZERDIR            YES - REPLACE WITH 'ZERODIR' - GO ON\n         B     INVFUNCN\nMVFUNCTN DS    0H\n         MVC   FUNCTION(0),0(R3)\nCMPZEROD DS    0H\n         CLC   0(0,R3),ZERODIR\nCMPALTDR DS    0H\n         CLC   0(0,R3),ALTERDIR\nCMPCOMPR DS    0H\n         CLC   0(0,R3),COMPRESS\nCMPEMPTY DS    0H\n         CLC   0(0,R3),EMPTY\nCMPEMPTO DS    0H\n         CLC   0(0,R3),EMPTYO\nCMPEMPDR DS    0H\n         CLC   0(0,R3),EMPTYDIR\nMVINVMSG DS    0H\n         MVC   MSGDSN(0),0(R3)\nLDALTDIR DS   0H\n         MVC   FUNCTION,ALTERDIR    LOAD FUNCTION \"ALTERDIR\"\n         B     DDNAME_LOOP\nLDZERDIR DS   0H\n         MVC   FUNCTION,ZERODIR     LOAD FUNCTION \"ZERODIR\"\n         B     DDNAME_LOOP\nLDCOMPRS DS   0H\n         MVC   FUNCTION,COMPRESS    LOAD FUNCTION \"COMPRESS\"\n**********************************************************************\n*** DDNAME LOOP (GET DDNAME TOKEN) ***********************************\n**********************************************************************\nDDNAME_LOOP    DS 0H\n         LA    R2,1(,R2)\n         LA    R1,SYSINRCL(,R5)\n         CR    R2,R1               EXCEEDED SYSIN RECORD LENGTH ?\n         BH    ASSESS_TOKENS       YES - REACHED THE END OF RECORD\n         CLI   0(R2),C' '           HAVE A BLANK DELIMITER ?\n         BE    DD_01                YES - THEN VALIDATE THE TOKEN\n         CLI   0(R2),X'00'          HAVE A NULL DELIMITER ?\n         BE    DD_01                YES - THEN VALIDATE THE TOKEN\n         CLI   HAVE_DDN,C'Y'\n         BE    DDNAME_LOOP\n         MVI   HAVE_DDN,C'Y'\n         LR    R3,R2                R3 POINTS TO START OF INPUT TOKEN\n         B     DDNAME_LOOP\nDD_01    DS    0H                  HAVE A BLANK OR NULL CHARACTER\n         CLI   HAVE_DDN,C'Y'\n         BNE   DDNAME_LOOP         HAVEN'T HAD 2ND TOKEN YET (DDNAME)\n         LR    R4,R2\n         LR    R1,R3\n         SR    R4,R1               GET LENGTH OF DDNAME TOKEN\n         ST    R4,DDNAMELN         STORE LENGTH OF DDNAME TOKEN\n         BCTR  R4,0                SUBTRACT 1 FOR EX OPCODE\n         MVC   DDNAME,BLANKLIN\n         MVC   MSGDSN,BLANKLIN\n         EX    R4,MVDDNME\n         LA    R1,8(,R3)\n         EX    R4,MVDDMSG\n         CR    R2,R1               EXCEEDED DDNAME LENGTH (8 DIGITS)?\n         BH    INVDDNME\n         EX    R4,CMPUNLOD\n         BE    INVDDNME\n         EX    R4,CMPSYUT1\n         BE    INVDDNME\n         EX    R4,CMPSYUT2\n         BE    INVDDNME\n         B     DIRBLK_LOOP\nMVDDNME  DS    0H\n         MVC   DDNAME(0),0(R3)\nMVDDMSG  DS    0H\n         MVC   MSGDSN(0),0(R3)\nCMPUNLOD DS    0H\n         CLC   0(0,R3),DDUNLOAD\nCMPSYUT1 DS    0H\n         CLC   0(0,R3),DDSYSUT1\nCMPSYUT2 DS    0H\n         CLC   0(0,R3),DDSYSUT2\n**********************************************************************\n* DIRECTORY BLOCKS LOOP (GET DIRECTORY BLOCKS FOR ALTERDIR FUNCTION) *\n**********************************************************************\nDIRBLK_LOOP DS 0H\n         MVI   NEG_DB,C'N'          RESET NEGATIVE DIRBLKS INDICATOR\n         MVI   NONUM_DB,C'N'        RESET NON-NUMERIC DIRBLKS INDIC.\n         CLC   FUNCTION,ALTERDIR    IS THIS FUNCTION=ALTERDIR REC ?\n         BE    DIRBL_CNT1           YES - GET DIRECTORY BLOCKS\n         MVC   DIRBLKS,=8CL1'0'     NO - IGNORE DIR BLOCKS\n         LA    R1,0\n         ST    R1,DIRBLKFW          LOAD ZEROS FOR DIR BLKS - NOT USED\n         B     ASSESS_TOKENS        END OF LOOKING AT THIS RECORD\nDIRBL_CNT1  DS 0H\n         LA    R2,1(,R2)\n         LA    R1,SYSINRCL(,R5)\n         CR    R2,R1               EXCEEDED SYSIN RECORD LENGTH ?\n         BH    ASSESS_TOKENS       YES - REACHED END OF RECORD\n         CLI   0(R2),C' '           HAVE A ' ' ?\n         BE    DB_01                YES - CHECK FOR END OF TOKEN\n         CLI   0(R2),X'00'          HAVE A NULL DELIMITER ?\n         BE    DB_01                YES - CHECK FOR END OF TOKEN\n         CLI   0(R2),C'+'           HAVE A '+' SIGN ?\n         BE    DIRBL_CNT1           YES - IGNORE IT AND STRIP IT OFF\n         CLI   0(R2),C'-'           HAVE A '-' NEGATIVE SIGN ?\n         BNE   NUM_CHK1             NO - CHECK FOR NUMERIC\n         MVI   NEG_DB,C'Y'          YES - INDICATE NEGATIVE DIRBLKS\n         B     DIRBL_CNT2\nNUM_CHK1 DS    0H\n         CLI   0(R2),C'0'           LESS THAN NUMERIC CHAR ?\n         BNL   NUM_CHK2             NO  - CHECK HIGH END OF NUM RANGE\n         MVI   NONUM_DB,C'Y'        YES - INDICATE NON-NUMERIC DIRBLKS\n         B     DIRBL_CNT2\nNUM_CHK2 DS    0H\n         CLI   0(R2),C'9'           GREATER THAN NUMERIC CHAR ?\n         BNH   DIRBL_CNT2           NO - OK ON HIGH END\n         MVI   NONUM_DB,C'Y'        YES - INDICATE NON-NUMERIC DIRBLKS\nDIRBL_CNT2  DS 0H\n         CLI   HAVE_DB,C'Y'\n         BE    DIRBL_CNT1\n         MVI   HAVE_DB,C'Y'\n         LR    R3,R2                R3 POINTS TO START OF INPUT TOKEN\n         B     DIRBL_CNT1\nDB_01    DS    0H                  HAVE A BLANK OR NULL CHARACTER\n         CLI   HAVE_DB,C'Y'\n         BNE   DIRBL_CNT1          HAVEN'T HAD 3RD TOKEN YET (DIRBLKS)\n         LR    R4,R2\n         LR    R1,R3\n         SR    R4,R1               GET LENGTH OF DIRBLKS TOKEN\n         ST    R4,DIRBLKLN         SAVE LENGTH OF DIRBLKS\n         BCTR  R4,0                SUBTRACT 1 FOR EX OPCODE\n         LA    R1,8(,R3)\n         MVC   DIRBLKS,=8CL1'0'\n         MVC   MSGDSN,BLANKLIN\n         EX    R4,MVDBMSG\n         CLI   NEG_DB,C'Y'        NEGATIVE DIRECTORY BLOCKS VALUE ?\n         BE    NEGDIRBL             YES - NEGATIVE DIRBLKS NOT ALLOWED\n         CLI   NONUM_DB,C'Y'      NON-NUMERIC DIRECTORY BLOCKS VALUE ?\n         BE    DBNOTNUM             YES - NON-NUMERICS NOT ALLOWED\n         CR    R2,R1               EXCEEDED DIRBLKS LENGTH (8 DIGITS)?\n         BH    INVDIRBL\n         L     R4,DIRBLKLN         RESTORE LENGTH OF DIRBLKS TOKEN\n         LA    R6,8                SET TOTAL LENGTH OF DISPLAY FIELD\n         SR    R6,R4            GET INDEX DISPLACEMENT & RIGHT JUSTIFY\n         LA    R1,DIRBLKS\n         AR    R1,R6\n         BCTR  R4,0\n         EX    R4,MVDIRBLK\n         PACK  DOUBLE,DIRBLKS      CONVERT DIBLKS TO FULL WORD BINARY\n         CVB   R1,DOUBLE\n         ST    R1,DIRBLKFW\n         B     ASSESS_TOKENS\nMVDIRBLK DS    0H\n         MVC   0(0,R1),0(R3)\nMVDBMSG  DS    0H\n         MVC   MSGDSN(0),0(R3)\n**********************************************************************\n*** WE HAVE HIT THE END OF SYSIN RECORD PARSE      *******************\n*** SEE IF ALL OF THE SYSIN REC TOKENS ARE PRESENT *******************\n**********************************************************************\nASSESS_TOKENS DS 0H\n         CLI   HAVE_FUNC,C'Y'\n         BNE   MISSFUNC\nCHK_DDN  DS    0H\n         CLI   HAVE_DDN,C'Y'\n         BNE   MISSDDNM\nCHK_DBLKS DS    0H\n         CLC   FUNCTION,ALTERDIR\n         BNE   FINISH_SYSIN_REC\n         CLI   HAVE_DB,C'Y'\n         BNE   MISSDIRB\n**********************************************************************\n*** FINISH PROCESSING THE SYSIN RECORD - GOOD OR BAD ? ***************\n**********************************************************************\nFINISH_SYSIN_REC DS 0H\n         CLI   HAVE_FUNC,C'Y'\n         BNE   INVLD_SYSIN            NO - INVALID TOKEN\n         CLI   HAVE_DDN,C'Y'\n         BNE   INVLD_SYSIN            NO - INVALID TOKEN\n         CLC   FUNCTION,ALTERDIR      IS THIS FUNCTION=ALTERDIR REC ?\n         BNE   GOOD_SYSIN             NO - GOOD TOKEN\n         CLI   HAVE_DB,C'Y'\n         BE    GOOD_SYSIN             YES - GOOD TOKEN\nINVLD_SYSIN DS 0H\n         AP    INVLDCNT,ONEPK        INCREMENT INVALID SYSIN REC COUNT\nGOOD_SYSIN DS  0H\n         AP    VALIDCNT,ONEPK        INCREMENT VALID SYSIN REC COUNT\n         B     SRCH4_DD              SEARCH TIOT DD ENTRIES FOR DDNAME\nEND_SYSIN  DS   0H\n         LA    R3,SYSIN             DCB to close\n         MVC   WKOPENCL(OPENIL),OPENI\n         LA    R4,WKOPENCL          OPEN/CLOSE WORK AREA\n         CLOSE ((R3)),MODE=31,MF=(E,(R4))   CLOSE SYSIN DCB\n         B     PRINT_SUMMARY         ALL DONE - PRINT SUMMARY\n*---------------------------------------------------------------------*\n*---------------------------------------------------------------------*\n         EJECT\n         TITLE 'PDSCLEAN - SCAN TIOT FOR DDNAME'\n***********************************************************************\n*                                                                     *\n*    1)  SCAN TIOT FOR DDNAME MATCH AGAINST CURRENT SYSIN FUNCTION'S  *\n*        DDNAME.                                                      *\n*    2)  WHEN FINDING ONE, EITHER CLEAN IT OR ALTER THE DIRECTORY     *\n*        BLOCKS OR COMPRESS THE DATASET DEPENDING ON THE FUNCTION     *\n*        CODE PASSED.                                                 *\n*                                                                     *\n***********************************************************************\nSRCH4_DD DS    0H\n         LA    R2,TIOTADDR\n         MVC   EXTRACTW(EXTRACTL),EXTRACTI   RELOCATE EXTRACT MACRO\n         EXTRACT (R2),FIELDS=TIOT,MF=(E,EXTRACTW) GET ADDR OF TIOT AREA\n         L     R2,TIOTADDR         LOAD ADDRESS OF TIOT INTO R2\n         USING TIOT1,R2            MAP THE START OF THE TIOT\n         LA    R2,TIOENTRY         POINT TO FIRST DD ENTRY\n         DROP  R2                  DONE WITH TIOT BASE\n         USING TIOENTRY,R2         MAP THE DD ENTRIES IN THE TIOT\n         SR    R3,R3               CLEAR R3 (WILL HOLD TIOT DD ENT LEN)\nTIOTSCAN DS    0H\n         IC    R3,TIOELNGH         1 BYTE - LENTH OF THIS TIOT DD ENTRY\n         LTR   R3,R3               0 = END OF TIOT\n         BZ    TIOTDDNF            ERROR - DID NOT FIND DDNAME IN TIOT\n         CLC   DDNAME,TIOEDDNM  |- TIOT DDNAME = SYSIN RECORD DDNAME ?\n         LA    R2,TIOENTRY(R3)  |  ADDRESS OF NEXT TIOT ENTRY\n         BNE   TIOTSCAN         |- NO - CHECK NEXT TIOT DDNAME\n         DROP  R2                  DONE WITH TIOT ENTRIES\n***********************************************************************\n*        HAVE A DDNAME ENTRY MATCH ON SYSIN DDNAME                    *\n***********************************************************************\n         L     R5,16               CVT ADDRESS\n         USING CVT,R5              MAP CVT\n         LA    R6,EXCPDCB          DCB ADDRESS\n         USING IHADCB,R6           MAP DCB\n         MVC   DCBDDNAM,DDNAME     MOVE CURRENT DDNAME TO DCB\nREADJFCB DS    0H\n         MVC   JFCBLIST(JFCBLSTL),JFCBLSTI   RELOCATE JFCB EXIT LIST\n         MVC   WKRDJFCB(RDJFCBIL),RDJFCBI    RELOCATE JFCB MACRO LIST\n         LA    R0,JFCBLIST\n         STCM  R0,7,DCBEXLSA                 LOAD EXIT LIST ADDRESS\n         LA    R0,JFCBAR\n         STCM  R0,7,JFCBLIST+1               LOAD JFCB BUFFER ADDRESS\n*\n         RDJFCB ((R6)),MF=(E,WKRDJFCB)       READ IN JFCB\n*\n         LTR   R15,R15             TEST FOR GOOD READ\n         BNZ   JFCBERR             SHOULD NEVER HAPPEN\nFMT1DSCB DS    0H\n         MVC   CAMPRMLS(CAMLSTIL),CAMLSTI   INITIALIZE OBTAIN PARMLIST\n         LA    R0,JFCBDSNM\n         ST    R0,CAMLDSN\n         LA    R0,JFCBVOLS\n         ST    R0,CAMLVOL\n         LA    R0,CAMWORK\n         ST    R0,CAMLWRK\n         LA    R0,CAMPRMLS\n*\n         OBTAIN CAMPRMLS           READ IN THE FORMAT 1 DSCB VTOC REC\n*\n         LTR   R15,R15             VTOC READ SUCCESSFUL?\n         BNZ   OBTNERR             NO - ERROR ON OBTAIN\n***********************************************************************\n*        HAVE A DSORG=PO (OR POE) DATASET ? IF NOT - ERROR SITUATION  *\n***********************************************************************\n         TM    DS1DSORG,DS1DSGPO   IS THIS A DSORG=PO (OR POE) DATASET?\n         BNO   DSORGERR            NO  - INCORRECT DSORG - ERROR\n         TM    DS1SMSFG,DS1PDSE    IS THIS A PDS/E FILE ?\n         BO    HAVEPDSE            YES - THIS IS A PDS/E FILE\n         CLC   FUNCTION,COMPRESS   NO  - COMPRESS FUNCTION ?\n         BE    COMPRS00            YES - PROCESS IEBCOPY COMPRESS\n         B     TIOTCONT            NO  - NOT A COMPRESS FUNCTION\nHAVEPDSE DS    0H\n         CLC   FUNCTION,COMPRESS   COMPRESS FUNCTION ?\n         BE    COMPRERR            YES - DON'T NEED TO COMPRESS PDSE'S\n***********************************************************************\n*        HAVE A PDSE/DATASET - CHECK FUNCTION TYPE FOR 'ZERODIR'      *\n***********************************************************************\n         BAS   R14,PDSE0000        YES - PROCESS PDS/E FILE\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,PDSECLMS     LOAD PDS/E-WAS-CLEANED MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    CLEANCNT,ONEPK      INCREMENT CLEAN COUNTER\n         B     GET_SYSIN           GET NEXT SYSIN INPUT RECORD\nTIOTCONT DS    0H\n         LA    R11,EXCPIOB         ADDRESSABILITY TO IOB STANDARD AREA\n         USING IOBSTDRD,R11        MAP STANDARD SECTION OF IOB DSECT\n         BAS   R14,BLDIOB          RE-INITIALIZE IOB\n         MVI   CTR,X'01'           RECORD 1\n         MVI   CTKL,X'08'          8   BYTE KEY/BLOCK\n         MVC   CTDL,=H'256'        256 BYTES/DIRECTORY BLOCK\n         BAS   R14,BALFACT         GET FACTORS FOR TRACK BALANCING\n         OI    JFCBTSDM,JFCNDCB    DO NOT MERGE DCB INTO JFCB\n         SR    R4,R4               CLEAR REG4\n         CLC   FUNCTION,ALTERDIR   IS THIS AN ALTERDIR FUNCTION ?\n         BE    DIRECT00            YES - UNLOAD PDS FIRST\nREADDIRB DS    0H\n         TITLE 'PDSCLEAN - COUNT DIRECTORY BLOCKS BEFORE ALTERDIR'\n         MVC   WKOPENCL(OPENIL),OPENI   OPEN EXCPDCB TO READ DIRECTORY\n         LA    R3,WKOPENCL                 OPEN/CLOSE WORK AREA\n         OPEN  ((R6),INPUT),MODE=24,TYPE=J,MF=(E,(R3))  OPEN EXCPDCB\n         SR    R4,R4          CLEAR REG4 FOR DIR BLOCK COUNTER\n         TM    DCBOFLGS,DCBOFOPN      GOOD OPEN ?\n         BZ    OPENERR                NO - OPEN ERROR\n         LA    R0,READCCW\n         ST    R0,IOBSTART\n         MVI   GETPUT_FUNCTION,C'G'\nGETLOOP  DS    0H\n         BAS   R14,DOIO       GET NEXT DIR BLK\n         LTR   R15,R15        CHECK RETURN CODE\n         BNZ   CLOSEIN        4 -- I/O ERROR - TREAT AS EOF\n         CLI   CTKL,X'08'     CORRECT KEY LENGTH\n         BNE   CLOSEIN        NO -- TREAT AS EOF\n         CLC   CTDL,=H'0'     EOF DATA LENGTH\n         BE    CLOSEIN        YES\n         CLC   CTDL,=H'256'   REC TOO LONG ? (PAST DIR RECS ?)\n         BH    CLOSEIN        YES -- TREAT AS EOF\n         LA    R4,1(,R4)      NO - INCREMENT DIRECTORY BLOCK COUNT\n         BAS   R14,BUMPTTTR   BUMP TO NEXT DIRECTORY RECORD\n         B     GETLOOP        READ TO EOF ON DIRECTORY\nCLOSEIN  DS    0H\n         MVC   WKOPENCL(OPENIL),OPENI\n         ST    R4,OLDDIRBL         STORE THE OLD DIR BLK ALLOC VALUE\n         LA    R3,WKOPENCL         OPEN/CLOSE WORK AREA\n         CLOSE ((R6)),MODE=24,MF=(E,(R3))  CLOSE EXCPDCB\n         CVD   R4,DOUBLE\n         UNPK  DIRBLKDI,DOUBLE  UNPACK THE # OF DIRECTORY BLOCKS\n         OI    DIRBLKDI+6,X'F0'  FIX THE SIGN NIBBLE\n         CLC   FUNCTION,ALTERDIR   IS THIS AN ALTERDIR FUNCTION?\n         BNE   REWRITE          NO - ZERODIR FUNCTION\n         CLI   RECOV_FL,C'Y'    RECOVER PROCESS GOING ON ?\n         BNE   CLOSEIN2         NO - SKIP RESTORE PROCESS LOGIC\nRECOVER  DS    0H               YES - PROCESS RECOVERY NOW\n         L     R1,NEWDIRBL      LOAD THE NEW DIR BLOCK VALUE IN R1\n         L     R4,OLDDIRBL      LOAD THE OLD DIR BLOCK VALUE IN R4\n         ST    R4,NEWDIRBL      RESTORE THE OLD DIRECTORY BLOCK VALUE\n         ST    R1,OLDDIRBL      SAVE NEW AS OLD DIRECTORY BLOCK VALUE\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,PDSRECM1     LOAD PDS-IS-BEING-RECOVERED MESSAGE1\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         MVC   MSGTXT,PDSRECM2     LOAD PDS-IS-BEING-RECOVERED MESSAGE2\n         MVC   MSGDSN,BLANKLIN\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         MVC   MSGTXT,PDSRECM3     LOAD PDS-IS-BEING-RECOVERED MESSAGE3\n         MVC   MSGDSN,BLANKLIN\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         MVC   MSGTXT,PDSRECM4     LOAD PDS-IS-BEING-RECOVERED MESSAGE3\n         MVC   MSGDSN,BLANKLIN\n         MVC   MSGDSN(4),ABENDCD   LOAD ABEND CODE INTO MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    ERRORCNT,ONEPK\n         B     REWRITE          RESTORE DIRECTORY BLOCK COUNT & ZEROEM\nCLOSEIN2 DS    0H\n         L     R1,DIRBLKFW      LOAD THE ADDITIONAL DIR BLOCK VALUE\n         AR    R1,R4            GET THE NEW DIR BLK ALLOCATION VALUE\n         ST    R1,NEWDIRBL      SAVE THE NEW DIRECTORY BLOCK VALUE\n         CR    R1,R4            DID DIRECTORY BLOCKS DECREASE ?\n         BL    DIRBLDEC              YES - DON'T ALLOW THIS\n         L     R4,NEWDIRBL      LOAD THE NEW DIR BLOCK VALUE IN R4\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*        R4 CONTAINS THE NUMBER OF DIRECTORY BLOCKS TO BE WRITTEN     *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n         TITLE 'PDSCLEAN - WRITE NEW DIRECTORY'\nREWRITE  DS    0H\n         C     R4,=A(0)       ANY DIR BLKS ?\n         BE    DIRCTERR       NO\n         ST    R4,DIRBLKSF    STORE THE # OF DIRECTORY BLOCKS\n         MVC   WKOPENCL(OPENIL),OPENI    OPEN EXCPDCB TO WRITE NEW DIR\n         LA    R3,WKOPENCL         OPEN/CLOSE WORK AREA\n         OPEN  ((R6),OUTPUT),MODE=24,TYPE=J,MF=(E,(R3)) WRITE NEW DIRS\n         TM    DCBOFLGS,DCBOFOPN      GOOD OPEN ?\n         BZ    OPENERR                NO - OPEN ERROR\n         XC    DCBTRBAL,DCBTRBAL  CLEAR TRACK BALANCE FIELD\n         BAS   R14,BLDIOB     RE-INITIALIZE IOB\n         LA    R0,WRITECCW\n         ST    R0,IOBSTART\n         MVC   KEY,=XL8'FFFFFFFFFFFFFFFF'\n         XC    DATAX,DATAX\n         MVC   DATAX(10),=XL10'000EFFFFFFFFFFFFFFFF'\n         MVI   CTKL,X'08'\n         MVC   CTDL,=H'256'\n         MVI   GETPUT_FUNCTION,C'P'\nPUTLOOP  DS    0H\n         BAS   R14,DOIO       WRITE NEXT DIR BLK\n         LTR   R15,R15        CHECK RETURN CODE\n         BNZ   WRITEERR       4 -- I/O ERROR\n         BAS   R14,UPDDCB     UPDATE DCB FIELDS\n         XC    KEY,KEY\n         XC    DATAX,DATAX\n         BAS   R14,BUMPTTTR   BUMP TO NEXT REC\n         BCT   R4,PUTLOOP          KEEP GOING\n         LA    R0,EOFCCW\n         ST    R0,IOBSTART\n         MVI   CTKL,X'00'     ZERO KEY LEN FOR EOF REC\n         MVC   CTDL,=H'0'     ZERO DATA LEN FOR EOF REC\n         BAS   R14,DOIO       WRITE EOF REC\n         LTR   R15,R15        CHECK RETURN CODE\n         BNZ   EOFERR         4 -- I/O ERROR\n         BAS   R14,UPDDCB     UPDATE DCB\n         MVC   WKOPENCL(OPENIL),OPENI\n         LA    R3,WKOPENCL         OPEN/CLOSE WORK AREA\n         CLOSE ((R6)),MODE=24,MF=(E,(R3))  CLOSE EXCPDCB\n         CLC   FUNCTION,ALTERDIR   IS THIS AN ALTERDIR FUNCTION?\n         BE    PUTL_ALT            YES - PRINT DIRECTORY UPDT MSGS\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,PDSCLNMS     LOAD PDS-WAS-CLEANED MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    CLEANCNT,ONEPK      INCREMENT CLEAN COUNTER\n         B     GET_SYSIN           GET NEXT SYSIN INPUT RECORD\nPUTL_ALT DS    0H\n         CLI   RECOV_FL,C'Y'     RECOVERY PROCESS IN PROGRESS ?\n         BE    PUTL_AL2          YES - SKIP TO RESET ALTERATION MSG\n*\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,PDSALTMS     LOAD PDS-WAS-ALTERED MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n*\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,ORIGBLKS     LOAD ORIGINAL DIR BLK VALUE MESSAGE\n         MVC   MSGDSN,BLANKLIN\n         MVC   MSGDSN(7),DIRBLKDI  LOAD ORIGINAL # OF DIRECTORY BLOCKS\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n*\n         AP    DIRCHGCT,ONEPK    INCREMENT DIRECTORIES-CHANGED COUNTER\n         MVI   ALTER_SUCC,C'Y'   INDICATE SUCCESSFUL ALTERATION\n*\n         MVC   MSGTXT,PDSALTTO     LOAD PDS-DIR-WAS-ALTERED MESSAGE\n         B     PUTL_AL3\nPUTL_AL2 DS    0H\n         MVC   MSGTXT,PDSRESET     LOAD PDS-DIR-WAS-RESET   MESSAGE\nPUTL_AL3 DS    0H\n         L     R1,NEWDIRBL\n         CVD   R1,DOUBLE\n         UNPK  DIRBLKDI,DOUBLE     UNPACK THE # OF DIRECTORY BLOCKS\n         OI    DIRBLKDI+6,X'F0'    FIX THE SIGN NIBBLE\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGDSN,BLANKLIN\n         MVC   MSGDSN(7),DIRBLKDI  LOAD NEW # OF DIRECTORY BLOCKS\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n*\n***********************************************************************\n* CALL 'IEBCOPY' A SECOND TIME TO RELOAD THE UNLOAD IMAGE FROM A\n*   TEMPORARY WORK FILE.\n***********************************************************************\nRELOADIE DS    0H\n         MVC   IEBCOPY_OPTLIST(IEBCOPY_OPTLISTL),IEBCOPY_OPTLISTI\n         MVC   IEBCOPY_DDNMLIST(IEBCOPY_DDNMELSL),IEBCOPY_DDNMELST\n         MVC   IEBCOPY_DDNMLIST+IEBCOPY_DDINPUT-IEBCOPY_DDNMELST(8),=CL+\n               8'UNLOAD  '                          LOAD INPUT  DDNAME\n         MVC   IEBCOPY_DDNMLIST+IEBCOPY_DDOUTPUT-IEBCOPY_DDNMELST(8),DD+\n               NAME                                 LOAD OUTPUT DDNAME\n         MVI   IEBCOPY_FUNCTION,C'R'          INDICATE RELOAD FUNCTION\n         BAS   R14,IEBCPY00     BRANCH TO IEBCOPY ROUTINE TO RELOAD PDS\n*\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,RELOADMS     LOAD PDS RELOADED SUCCESSFULLY MSG\n         MVC   MSGDSN,BLANKLIN\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n*\n         CLI   RECOV_FL,C'Y'     RECOVERY PROCESS IN PROGRESS ?\n         BNE   RESETIEB          NO - EXIT AND GET NEXT SYSIN RECORD\nRECVFIN  DS    0H                YES - FINISH RECOVERY PROCESS\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,RECPDSMS     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,BLANKLIN BLANK OUT THE DSN IN MSG\n         MVC   MSGDSN,JFCBAR       MOVE IN DSNAME INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         LA    R15,8                SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n*\nRESETIEB DS    0H\n         MVI   RECOV_FL,C'N'       RESET THE RECOVERY FLAG\n         MVC   IEBCOPY_OPTLIST(IEBCOPY_OPTLISTL),IEBCOPY_OPTLISTI\n         MVC   IEBCOPY_DDNMLIST(IEBCOPY_DDNMELSL),IEBCOPY_DDNMELST\n         MVC   IEBCOPY_DDNMLIST+IEBCOPY_DDINPUT-IEBCOPY_DDNMELST(8),BLA+\n               NKLIN                           BLANK OUT INPUT  DDNAME\n         MVC   IEBCOPY_DDNMLIST+IEBCOPY_DDOUTPUT-IEBCOPY_DDNMELST(8),BL+\n               ANKLIN                          BLANK OUT OUTPUT DDNAME\n         MVI   IEBCOPY_FUNCTION,C' '           BLANK OUT FUNCTION\n         B     GET_SYSIN           GET NEXT SYSIN INPUT RECORD\n***********************************************************************\n*        SET THE MAXIMUM RETURN CODE FOR THIS PROGRAM EXECUTION       *\n***********************************************************************\nSET_RC   DS    0H\n         L     R1,MAX_RC\n         CR    R15,R1              R15 HAS TEMP RC VALUE - > MAX RC ?\n         BNH   SET_RCEX            NO - DON'T THEN ALTER MAX RC - EXIT\n         ST    R15,MAX_RC          UPDATE MAXIMUM RETURN CODE\nSET_RCEX DS    0H\n         BR    R14\n*\nPRINT_SUMMARY DS  0H\n         TITLE 'PDSCLEAN - END OF JOB LOGIC - PRINT SUMMARY'\n*\n         UNPK  T1COUNT,SYSINCNT    TOTAL NUMBER OF SYSIN INPUT RECS\n         OI    T1COUNT+6,X'F0'\n         MVC   T1MSG,SYSINMS\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         PUT   SYSPRINT,TRAILER1   OUTPUT THE TRAILER RECORD\n*\n         UNPK  T1COUNT,INVLDCNT    NUMBER OF INVALID SYSIN RECS\n         OI    T1COUNT+6,X'F0'\n         MVC   T1MSG,INVSYSMS\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         PUT   SYSPRINT,TRAILER1   OUTPUT THE TRAILER RECORD\n*\n         UNPK  T1COUNT,VALIDCNT    NUMBER OF VALID SYSIN RECS\n         OI    T1COUNT+6,X'F0'\n         MVC   T1MSG,VLDSYSMS\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         PUT   SYSPRINT,TRAILER1   OUTPUT THE TRAILER RECORD\n*\n         UNPK  T1COUNT,ERRORCNT    NUMBER OF LOGIC ERRORS\n         OI    T1COUNT+6,X'F0'\n         MVC   T1MSG,ERRORSMS\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         PUT   SYSPRINT,TRAILER1   OUTPUT THE TRAILER RECORD\n*\n         UNPK  T1COUNT,CLEANCNT    NUMBER OF DSNS CLEANED (EMPTIED)\n         OI    T1COUNT+6,X'F0'\n         MVC   T1MSG,CLNCNTMS\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         PUT   SYSPRINT,TRAILER1   OUTPUT THE TRAILER RECORD\n*\n         UNPK  T1COUNT,DIRCHGCT    NUMBER OF DSNS ALTERED (DIR BLKS)\n         OI    T1COUNT+6,X'F0'\n         MVC   T1MSG,ALTCNTMS\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         PUT   SYSPRINT,TRAILER1   OUTPUT THE TRAILER RECORD\n*\n         UNPK  T1COUNT,COMPRSCT    NUMBER OF LIBS COMPRESSED\n         OI    T1COUNT+6,X'F0'\n         MVC   T1MSG,COMCNTMS\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         PUT   SYSPRINT,TRAILER1   OUTPUT THE TRAILER RECORD\n*\n         L     R1,MAX_RC\n         CVD   R1,DOUBLE\n         UNPK  MAX_RC_DI,DOUBLE    UNPACK THE MAXIMUM RETURN CODE\n         OI    MAX_RC_DI+6,X'F0'   FIX THE SIGN NIBBLE\n         MVC   T1COUNT,MAX_RC_DI\n         MVC   T1MSG,MAXRCMSG\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         PUT   SYSPRINT,TRAILER1   OUTPUT THE TRAILER RECORD\n*\n         LA    R3,SYSPRINT          DCB to close\n         MVC   WKOPENCL(OPENIL),OPENI\n         LA    R4,WKOPENCL         OPEN/CLOSE WORK AREA\n         CLOSE ((R3)),MODE=31,MF=(E,(R4))  CLOSE SYSPRINT DCB\n*\n         L     R4,MAX_RC            Load the maximum return code\n*\nRETURN   DS    0H\n         LR    R2,R13               Pointer to storage area\n         L     R3,=A(STORSIZE)      Size of storage obtained\n         L     R13,4(,R13)          Restore Caller's SAVEAREA address\n         STORAGE RELEASE,LENGTH=(R3),ADDR=(R2)\n         L     R14,12(,R13)         Restore R14\n         LR    R15,R4               Set Return Code\n         LM    R0,R12,20(R13)       Restore caller's registers\n         BSM   0,R14                Return to caller\n*\nTOKNLNER DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,TOKLENMS     LOAD APPROPRIATE MESSAGE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    INVLDCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN\n*\nINVFUNCN DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,INVFUNMS     LOAD APPROPRIATE MESSAGE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    INVLDCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN\n*\nINVDDNME DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,INVDDNMS     LOAD APPROPRIATE MESSAGE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    INVLDCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN\n*\nDBNOTNUM DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,NOTNUMMS     LOAD APPROPRIATE MESSAGE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    INVLDCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN\n*\nINVDIRBL DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,INVDBLMS     LOAD APPROPRIATE MESSAGE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    INVLDCNT,ONEPK\n         LA    R15,8                SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN\n*\nNEGDIRBL DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,NEGDBLMS     LOAD APPROPRIATE MESSAGE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    INVLDCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN\n*\nMISSFUNC DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,NOFUNCMS     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,BLANKLIN     BLANK OUT DSN FIELD IN MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         MVC   MSGTXT,NOFUNCM2     LOAD APPROPRIATE MESSAGE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    INVLDCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN\n*\nMISSDDNM DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,NODDNMMS     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,BLANKLIN     BLANK OUT DSN FIELD IN MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    INVLDCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN\n*\nMISSDIRB DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,NODRBLMS     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,BLANKLIN     BLANK OUT DSN FIELD IN MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         MVC   MSGTXT,NODRBLM2     LOAD APPROPRIATE MESSAGE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    INVLDCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN\n*\nDSORGERR DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,DSORGERM     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    ERRORCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN\n*\nOBTNERR  DS    0H\n         ST    R15,SAVER15         SAVE R15 CONTENTS\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,OBTNERRM     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         MVC   MSGTXT,RETREASM     LOAD APPROPRIATE MESSAGE\n         UNPK  UNPKAREA(9),SAVER15(5)     GET RETURN CODE\n         MVZ   UNPKAREA(9),HEXZERO\n         TR    UNPKAREA(9),HEXCHAR\n         MVC   MSGDSN,BLANKLIN\n         MVC   MSGDSN(8),UNPKAREA  LOAD THE RETURN CODE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\n*\nSTOWERR  DS    0H\n         ST    R0,SAVER0           SAVE R0  CONTENTS\n         ST    R15,SAVER15         SAVE R15 CONTENTS\n         MVC   WKOPENCL(OPENIL),OPENI\n         LA    R3,PDSEDCB\n         LA    R4,WKOPENCL         OPEN/CLOSE WORK AREA\n         CLOSE ((R3)),MODE=31,MF=(E,(R4))  CLOSE PDSEDCB  DCB\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,STOWERRM     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         MVC   MSGTXT,RETREASM     LOAD APPROPRIATE MESSAGE\n         UNPK  UNPKAREA(9),SAVER15(5)     GET RETURN CODE\n         MVZ   UNPKAREA(9),HEXZERO\n         TR    UNPKAREA(9),HEXCHAR\n         MVC   MSGDSN,BLANKLIN\n         MVC   MSGDSN(8),UNPKAREA  LOAD THE RETURN CODE\n         MVC   MSGDSN+8(3),=CL3' / '\n         UNPK  UNPKAREA(9),SAVER0(5)      GET REASON CODE\n         MVZ   UNPKAREA(9),HEXZERO\n         TR    UNPKAREA(9),HEXCHAR\n         MVC   MSGDSN+11(8),UNPKAREA  LOAD THE REASON CODE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         L     R15,SAVER15         RESTORE R15 CONTENTS (RETURN CODE)\n         CH    R15,=H'20'          RETURN CODE = X'14' ?\n         BNE   STOWCNT             NO\n         L     R0,SAVER0           RESTORE R0 CONTENTS (REASON CODE)\n         CH    R0,=H'04'           REASON CODE = X'04' ?\n         BNE   STOWCNT             NO\n         MVC   MSGTXT,DISPSHM1     YES - INVALID DISPOSTION ON ALLOCTN\n         MVC   MSGDSN,BLANKLIN\n         MVC   MSGDSN(36),DISPSHM2\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    ERRORCNT,ONEPK\n         LA    R15,8               SET STOW MACRO RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN       DON'T TERMINATE - GET NEXT SYSIN RECORD\nSTOWCNT  DS    0H\n         B     SEVERE_ERROR\n*\nDIRBLDEC DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,DIRBLDCG     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\n*\nDOIOERR  DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,IOERMSG      LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n* ------------------------------------------------------------------- *\n* ENTER INTO RECOVERY PHASE TO RECOVER THE PDS.  THE ADDITION OF\n*    DIRECTORY BLOCKS DID NOT LEAVE ROOM TO RESTORE THE PDS MEMBERS.\n* ------------------------------------------------------------------- *\n         MVI   RECOV_FL,C'Y'  TURN ON RECOVERY FLAG TRY TO RECOVER PDS\n         B     RECOVER         RESTORE DIRECTORY BLOCKS AND DATA\n*\nWRITEERR DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,DIRIOMSG     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\n*\nEOFERR   DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,DIREOFMS     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\n*\nJFCBERR  DS   0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,JFCBMSG      LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\n*\nOPENERR  DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,OPENMSG      LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\n*\nDIRCTERR DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,DIRBLKMS     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\n*\nDEVDAERR DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,DEVADMSG     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\n*\nBALERR   DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,BALERMSG     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\n*\nCAPERR   DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,CAPACMSG     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR\n*\nTIOTDDNF DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,TIOTNFMS     LOAD APPROPRIATE MESSAGE\n         MVC   MSGDSN,BLANKLIN BLANK OUT THE DSN IN MSG\n         MVC   MSGDSN(8),DDNAME    MOVE IN DDNAME INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    ERRORCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN       DON'T TERMINATE - GET NEXT SYSIN RECORD\n*\nPDSEDIRW DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,PDSEDIRM     LOAD APPROPRIATE WARNING MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    ERRORCNT,ONEPK\n         LA    R15,8               SET WARNING RETURN CODE\n         BAS   R14,SET_RC          CHECK MAXIMUM RETURN CODE\n         B     GET_SYSIN       DON'T TERMINATE - GET NEXT SYSIN RECORD\n*\nCOMPRERR DS    0H\n         MVC   MSG39,PDSECOMP\n         MVC   MSG39(7),PDSELIT\n         MVC   MSGTXT,MSG39        LOAD LIB-WAS-NOT-COMPRESSED MESSAGE\n         MVC   MSGDSN,BLANKLIN BLANK OUT THE DSN IN MSG\n         MVC   MSGDSN,JFCBAR       MOVE IN DSNAME INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     GET_SYSIN         EXIT AND GET NEXT SYSIN RECORD\n*\nATTACHFL DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,ATTACHMS     LOAD APPROPRIATE WARNING MESSAGE\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         B     SEVERE_ERROR        TERMINATE - SEVERE ERROR\n*\nIEBCPYER DS    0H\n         PUT   SYSPRINT,BLANKLIN   OUTPUT BLANK LINE\n         MVC   MSGTXT,IEBCPYM1     LOAD APPROPRIATE ERROR MESSAGE\n         CLI   IEBCOPY_FUNCTION,C'U'  JUST DID UNLOAD FUNCTION ?\n         BE    COPYERMS            YES - HAPPENED ON IEBCOPY UNLOAD\n         MVC   MSGTXT,IEBCPYM2     NO  - HAPPENED ON IEBCOPY RELOAD\nCOPYERMS DS    0H\n         MVC   MSGDSN,JFCBAR       MOVE IN DSN INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n*\n         MVC   MSGTXT,RETREASM     LOAD APPROPRIATE MESSAGE\n         UNPK  UNPKAREA(9),IEBCOPY_RETURN_CODE(5)\n         MVZ   UNPKAREA(9),HEXZERO\n         TR    UNPKAREA(9),HEXCHAR\n         MVC   MSGDSN,BLANKLIN\n         MVC   MSGDSN(8),UNPKAREA  LOAD THE RETURN CODE\n         MVC   MSGDSN+8(3),=CL3' / '\n         UNPK  UNPKAREA(9),IEBCOPY_REASON_CODE(5)\n         MVZ   UNPKAREA(9),HEXZERO\n         TR    UNPKAREA(9),HEXCHAR\n         MVC   MSGDSN+11(8),UNPKAREA  LOAD THE REASON CODE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n*\n         CLC   ABENDCD(4),BLANKLIN   ABENDCD = BLANKS ?\n         BE    COPYERM2\n*\n         MVC   MSGTXT,IEBCPYM3     LOAD ABEND CODE IF PRESENT\n         MVC   MSGDSN,BLANKLIN\n         MVC   MSGDSN(4),ABENDCD   LOAD THE ABEND CODE\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\nCOPYERM2 DS    0H\n         L     R15,IEBCOPY_RETURN_CODE SET WARNING RETURN CODE\n         BAS   R14,SET_RC              CHECK MAXIMUM RETURN CODE\n         B     SEVERE_ERROR\n*\nSEVERE_ERROR  DS  0H\n         LA    R15,16              SET SEVERE RETURN CODE\n         BAS   R14,SET_RC          SET MAXIMUM RETURN CODE\n         CLI   OPENED_SYSIN,C'Y'   HAS SYSIN FILE BEEN OPENED ?\n         BE    END_SYSIN           YES - CLOSE SYSIN AND THEN TERMINATE\n         B     PRINT_SUMMARY       NO  - TERMINATE\n*\n         TITLE 'BLDIOB'\nBLDIOB   DS    0H\n         XC    EXCPIOB,EXCPIOB     CLEAR EXCPIOB\n         MVI   IOBFLAG1,IOBDATCH+IOBCMDCH+IOBUNREL\n         LA    R0,EXCPDCB\n         STCM  R0,7,IOBDCBPB\n         LA    R0,EXCPECB\n         STCM  R0,7,IOBECBPB\n         MVC   TTTR,=X'00000001'  FIRST REC\n         BR    R14\n*                                                                     *\n         TITLE 'DOIO Routine'\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*  THIS CVTPCNVT ROUTINE (SEE DFSMSdfp Advanced Services Manual       *\n*  SC26-7400-07) IS USED TO CONVERT A RELATIVE TRACK ADDRESS TO       *\n*  AN ACTUAL (REAL or ABSOLUTE) TRACK ADDRESS. 06/09/2009.            *\n*                                                                     *\n*  CVTPCNVT (IECPCNVT) REGISTER USAGE FOR ENTRY @CVTPCNVT+12.         *\n*        R0             TTTR TO BE CONVERTED (REL TRACK ADDRESS)      *\n*        R1             DEB ADDR                                      *\n*        R2             SEEK ADDR (MBBCCHHR TO BE COMPUTED)           *\n*        R3 - R8        UNCHANGED                                     *\n*        R9 - R12       ***** USED AND DESTROYED BY CVTPCNVT *****    *\n*        R13            PDS CONCATENTATION NUMBER IN LOW ORDER BYTE   *\n*                       ALSO DESTROYED BY CVTPCNVT.                   *\n*        R14            RETURN ADDR                                   *\n*        R15            ENTRY POINT/RETURN CODE FOR CVTPCNVT          *\n*                                                                     *\n***********************************************************************\n*                                                                     *\nDOIO     DS    0H\n         ST    R14,DOIOR14    SAVE BAS RETURN ADDR\n         L     R0,TTTR        PASS TTTR (RELATIVE TRACK/BLOCK NUMBER)\n         SR    R1,R1\n         ICM   R1,7,DCBDEBA   LOAD DEB ADDRESS\n         LA    R2,IOBSEEK     COMPUTE SEEK ADDRESS (MBBCCHHR)\n         STM   R9,R12,DOIOSAVE SAVE REGISTERS FOR CVTPCNVT CALL\n         L     R15,CVTPCNVT   CVTPCNVT (IECPCNVT) ENTRY POINT\n         LR    R3,R13         SAVE R13 - CVTPCNVT DESTROYS R9-R13\n         SR    R13,R13        ZERO CONCATENATION VALUE LOW-ORDER BYTE\n         BAS   R14,12(,R15)   CALL @CVTPCNVT + 12\n         LR    R13,R3         RESTORE R13\n         LM    R9,R12,DOIOSAVE\n         LTR   R15,R15        CHECK RETURN CODE\n         BNZ   DOIOERR        ERROR - CONVERT FAILED\n         MVC   IDCC,IOBCC     SEARCH CC\n         MVC   IDHH,IOBHH     SEARCH HH\n         SR    R1,R1          CLEAR\n         IC    R1,TTTRRECN    POST REC NUMBER\n         BCTR  R1,0           LESS 1 FOR SEARCH\n         STC   R1,IDR         POST SEARCH REC NUMBER\n         MVC   CTCC,IOBCC\n         MVC   CTHH,IOBHH\n         MVC   CTR,IOBR\n         XC    EXCPECB,EXCPECB  CLEAR EXCPECB\n         EXCP  EXCPIOB\n         WAIT  ECB=EXCPECB    WAIT FOR SUBTASK TO COMPLETE\n         L     R14,DOIOR14    RESTORE BAS RETURN ADDR\n         SR    R15,R15        0 RETURN CODE\n**********************************************************************\n* ECB Completion Codes are documented in IBM Manual SC26-7400-07,\n* \"DFSMSdfp Advanced Services\", Chapter 4 - Executing Your Own\n* Channel Programs\", Page 122-123.  TKMILLE 06/09/2009\n**********************************************************************\n         CLI   EXCPECB,X'7F'  I/O OK ?\n         BER   R14            YES RETURN WITH RC=0\n         LA    R15,4          I/O ERROR RETURN CODE 4\n         BR    R14            RETURN\n         TITLE 'PDSCLEAN - BUMP TTTR TO NEXT REC'\nBUMPTTTR DS    0H\n         SR    R1,R1          CLEAR\n         IC    R1,TTTRRECN    PICK UP REC NUMBER\n         LA    R1,1(,R1)      BUMP\n         CH    R1,RECMAX      TOO MANY ?\n         BNH   BUMPEND        NO\n         SR    R1,R1\n         ICM   R1,7,TTTRTRK   PICK UP TRACK NUMBER (TTT)\n         LA    R1,1(,R1)      BUMP\n         STCM  R1,7,TTTRTRK   POST NEW TRACK NUMBER (TTT)\n         LA    R1,1           RESET REC NUMBER\nBUMPEND  DS    0H\n         STC   R1,TTTRRECN    POST NEW REC NUMBER\n         BR    R14            EXIT\n         TITLE 'PDSCLEAN - COMPUTE TRACK BALANCE FACTORS'\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*        THIS ROUTINE USES THE DEVTYPE AND TRKCALC MACROS WHICH       *\n*        ARE DOCUMENTED IN THE IBM DFSMSdfp Advanced Services Manual  *\n*        SC26-7400-07.                                                *\n*                                                                     *\n*        DEVTYPE GETS THE DEVICE TYPE, TRACK PER CYLINDER AND         *\n*        CYLINDERS PER VOLUME.                                        *\n*                                                                     *\n*        TRKCALC FUNCTN=TRKCAP CALCULATES THE TRACK CAPACITY          *\n*           FOR A DIRECT ACCESS DEVICE.                               *\n*                                                                     *\n*        TRKCALC FUNCTN=TRKBAL CALCULATES THE NEW TRACK BALANCE.      *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n         TITLE 'PDSCLEAN - CALCULATE THE TRACK CAPACITY'\nBALFACT  DS    0H             COMPUTE TRACK BALANCE FACTORS\n         ST    R14,BALFR14         SAVE BAS RETURN ADDR\n         LA    R3,DEVAREA\n         USING DVAREA,R3\n         DEVTYPE DDNAME,DEVAREA,DEVTAB,RPS\n         CLI   DVACLASS,UCB3DACC  IS DEVICE CLASS DASD (DIRECT ACCESS)?\n         BNE   DEVDAERR           NO  - SEVERE ERROR\n         SPACE 2\n         TRKCALC FUNCTN=TRKCAP,  GET TRACK CAPACITY IN RECORDS         +\n               TYPE=DVAUNIT,     USE CURRENT DEVICE TYPE               +\n               RKDD=CTRKDD,      USE STARTING ADDRESS                  +\n               MF=(E,STAR),      USE STAR LIST                         +\n               REGSAVE=YES       RESTORE REGISTERS\n         LTR   R15,R15           IF ERROR\n         BNZ   CAPERR               SEVERE ERROR\n         STH   R0,RECMAX         SET MAXIMUM RECORD\n         L     R14,BALFR14       RESTORE BAS RETURN ADDR\n         BR    R14               RETURN\n         DROP  R3\n*                                                                     *\n         TITLE 'PDSCLEAN - UPDATE DCBTRBAL AND DCBFDAD'\nUPDDCB   DS    0H\n         ST    R14,UPDDR14         STORE BAS RETURN ADDR\n         LA    R3,DEVAREA\n         USING DVAREA,R3\n         MVC   DCBFDAD,IOBSEEK     POST FULL ADDR OF LAST REC\n         TRKCALC FUNCTN=TRKBAL,    CALCULATE TRACK BALANCE             +\n               TYPE=DVAUNIT,       USE CURRENT DEVICE TYPE             +\n               BALANCE=DCBTRBAL,   OLD BALANCE FROM DCB                +\n               RKDD=CTRKDD,        USE CURRENT RECORD ADDRESS          +\n               MF=(E,STAR),        USE STAR LIST                       +\n               REGSAVE=YES         RESET REGISTERS\n         LTR   R15,R15           IF OVERFLOW\n         BNZ   BALERR               SEVERE ERROR\n         STH   R0,DCBTRBAL       RESET DCB TRACK BALANCE\n         L     R14,UPDDR14       RESTORE BAS RETURN ADDR\n         BR    R14               RETURN\n         DROP  R3,R5,R6,R11\n* ------------------------------------------------------------------- *\n* PROCESS PDS/E FILES.  CALL THE STOW MACRO TO ZERO THE MEMBERS.      *\n* ------------------------------------------------------------------- *\nPDSE0000 DS    0H\n         ST    R14,PDSER14         STORE BAS RETURN ADDR\n         CLC   FUNCTION,ALTERDIR   DIRECTORY BLK CHG FUNCTION ?\n         BE    PDSEDIRW            YES - PRINT WARNING AND EXIT\n         LA    R3,PDSEDCB          PREPARE FOR ZERODIR FUNCTION\n         USING IHADCB,R3\n         MVC   DCBDDNAM,DDNAME\n         MVC   WKOPENCL(OPENIL),OPENI\n         LA    R4,WKOPENCL                 OPEN/CLOSE WORK AREA\n         OPEN  ((R3),OUTPUT),MODE=31,MF=(E,(R4))   OPEN PDSEDCB  DCB\n         STOW  PDSEDCB,,I          IBM APAR OA13224 ALLOWS DISP=SHR\n         LTR   R15,R15\n         BNZ   STOWERR\n         CLOSE ((R3)),MODE=31,MF=(E,(R4))          CLOSE PDSEDCB DCB\n         SR    R15,R15\n         L     R14,PDSER14         RESTORE BAS RETURN ADDR\n         BR    R14\n         DROP  R3\n*\n* ------------------------------------------------------------------- *\n* IF THE FUNCTION IS \"ALTERDIR\", THEN DO THE FOLLOWING:               *\n* 1) CALL \"IEBCOPY\" PROGRAM TO UNLOAD THE PDS MEMBERS TO TEMP DSN     *\n* 2) CHECK IEBCOPY RC.  IF IEBCOPY CALL IS SUCCESSFUL, CONTINUE ON.   *\n* 3) BRANCH BACK TO READ THE OLD DIRECTORY BLOCKS TO COUNT THEM.      *\n* TKMILLE- 09/04/2004                                                 *\n* ------------------------------------------------------------------- *\n         TITLE 'HAVE AN ALTERDIR OR COMPRESS FUNCTION PROCEDURE'\nDIRECT00 DS    0H\n*\n***********************************************************************\n* CALL 'IEBCOPY' THE FIRST TIME TO UNLOAD THE PDS IMAGE TO A\n*   TEMPORARY WORK FILE.  THIS IMAGE WILL BE RELOADED LATER ON TO\n*   COMPRESS THE PDS.\n***********************************************************************\n         CLI   RECOV_FL,C'Y'        IS THE RECOVERY PROCESS ACTIVE ?\n         BE    DIRECT10             YES - THEN DON'T UNLOAD THE PDS\n         MVC   IEBCOPY_OPTLIST(IEBCOPY_OPTLISTL),IEBCOPY_OPTLISTI\n         MVC   IEBCOPY_DDNMLIST(IEBCOPY_DDNMELSL),IEBCOPY_DDNMELST\n         MVC   IEBCOPY_DDNMLIST+IEBCOPY_DDINPUT-IEBCOPY_DDNMELST(8),DDN+\n               AME                                  LOAD INPUT  DDNAME\n         MVC   IEBCOPY_DDNMLIST+IEBCOPY_DDOUTPUT-IEBCOPY_DDNMELST(8),=C+\n               L8'UNLOAD  '                         LOAD OUTPUT DDNAME\n         MVI   IEBCOPY_FUNCTION,C'U'          INDICATE UNLOAD FUNCTION\n         MVI   RECOV_FL,C'N'       RESET THE RECOVERY FLAG\n         BAS   R14,IEBCPY00     BRANCH TO IEBCOPY ROUTINE TO UNLOAD PDS\n         CLC   FUNCTION,COMPRESS   COMPRESS FUNCTION ?\n         BE    RELOADIE            YES - PROCESS IEBCOPY RELOAD\nDIRECT10 DS    0H\n         B     READDIRB\n*\n*\n         TITLE 'HAVE A COMPRESS FUNCTION PROCEDURE'\n*\nCOMPRS00 DS    0H\n*\n***********************************************************************\n* CALL 'IEBCOPY' TO COMPRESS THE LIBRARY (PDS OR PDS/E).\n***********************************************************************\n*\n         MVC   IEBCOPY_OPTLIST(IEBCOPY_OPTLISTL),IEBCOPY_OPTLISTI\n         MVC   IEBCOPY_DDNMLIST(IEBCOPY_DDNMELSL),IEBCOPY_DDNMELST\n         MVC   IEBCOPY_DDNMLIST+IEBCOPY_DDINPUT-IEBCOPY_DDNMELST(8),DDN+\n               AME                                  LOAD INPUT  DDNAME\n         MVC   IEBCOPY_DDNMLIST+IEBCOPY_DDOUTPUT-IEBCOPY_DDNMELST(8),DD+\n               NAME                                 LOAD OUTPUT DDNAME\n         MVI   IEBCOPY_FUNCTION,C'C'          INDICATE UNLOAD FUNCTION\n*\n         BAS   R14,IEBCPY00     BRANCH TO IEBCOPY ROUTINE TO COMPRESS\n*\n         MVC   MSG39,COMPRSMS\n         MVC   MSG39(7),PDSELIT\n         TM    DS1SMSFG,DS1PDSE    IS THIS A PDS/E FILE ?\n         BO    PRTCOMMS            YES - PRINT COMPRESS MESSAGE\n         MVC   MSG39(7),PDSLIT\nPRTCOMMS DS    0H\n         MVC   MSGTXT,MSG39        LOAD LIB-WAS-COMPRESSED MESSAGE\n         MVC   MSGDSN,BLANKLIN BLANK OUT THE DSN IN MSG\n         MVC   MSGDSN,JFCBAR       MOVE IN DSNAME INTO SYSPRINT MSG\n         PUT   SYSPRINT,MSGTXTLN   OUTPUT MESSAGE LINE\n         AP    COMPRSCT,ONEPK    INCREMENT COMPRESSED LIBS COUNTER\nCOMPRS10 DS    0H\n         B     RESETIEB          EXIT AND GET NEXT SYSIN RECORD\n*\n* ------------------------------------------------------------------- *\n* CALL IEBCOPY TO UNLOAD/RELOAD A PDS FOR 'ALTERDIR' COMMAND FUNCTION *\n*   OR TO COMPRESS A PDS OR PDS/E FOR THE 'COMPRESS' COMMAND FUNCTION *\n* TKMILLE - 09/04/2004                                                *\n* ------------------------------------------------------------------- *\n         TITLE 'IEBCOPY  - PROCEDURE'\nIEBCPY00 DS    0H\n         ST    R14,IEBCR14              STORE BAS RETURN ADDR\n         XC    PGMECB,PGMECB                      CLEAR ECB\n         MVC   ATTACHW(ATTACHIL),ATTACHI      RELOCATE ATTACH PARMLIST\n         MVC   IEBCOPY_RETURN_CODE,=A(0)      INITIALIZE\n         MVC   IEBCOPY_REASON_CODE,=A(0)      INITIALIZE\n         ATTACH EP=IEBCOPY,          ATTACH REQUESTED PROGRAM          +\n               ECB=PGMECB,           .. ECB ADDRESS                    +\n               PURGE=HALT,IEBCOPY,   .. HALT SUBTASK I/O IF IT ABENDS  +\n               PARAM=(IEBCOPY_OPTLIST,IEBCOPY_DDNMLIST), IEBCOPY PARMS +\n               VL=1,                                INDICATE END PARMS +\n               SF=(E,ATTACHW),       .. ATTACH PARM LIST               +\n               MF=(E,IEBCOPY_PLIST)  .. IEBCOPY PARM LIST\n         ST    R1,PGMTCB             SAVE TCB ADDRESS\n         LR    R7,R15                SAVE ATTACH RETURN CODE\nIEBCPY10 DS    0H\n         LTR   R7,R7                 ATTACH SUCCESSFUL?\n         BNZ   ATTACHFL              NO - ATTACH FAILED\n         WAIT  ECB=PGMECB            WAIT FOR SUBTASK TO COMPLETE\n         L     R9,PGMTCB             TCB OF ATTACHED TASK\n         USING TCB,R9                DEFINE ADDRESSABILITY\n         SR    R1,R1                 CLEAR REGISTER\n         ICM   R1,3,TCBCMPC          STEP COMPLETION CODE\n         SRL   R1,4                  SHIFT 4 BITS\n         LTR   R1,R1                 SYSTEM ABEND PRESENT ?\n         BNZ   SYSABEND              YES - SYSTEM ABEND\n         TM    TCBFLGS1,TCBFA        USER ABEND PRESENT ?\n         DROP  R9\n         BO    USERABND              YES - USER ABEND\n         DETACH PGMTCB               REMOVE THE ATTACHED TASK\n         L     R7,IEBCOPY_RETURN_CODE   LOAD IEBCOPY RETURN CODE\n         LTR   R7,R7                 RETURN CODE = 0 ?\n         MVC   ABENDCD(4),BLANKLIN   CLEAR ABENDCD\n         BNZ   IEBCPYER              NO - ERROR ON IEBCOPY\n         MVC   IEBCOPY_DDNMLIST+IEBCOPY_DDINPUT-IEBCOPY_DDNMELST(8),BLA+\n               NKLIN                           BLANK OUT INPUT  DDNAME\n         MVC   IEBCOPY_DDNMLIST+IEBCOPY_DDOUTPUT-IEBCOPY_DDNMELST(8),BL+\n               ANKLIN                          BLANK OUT OUTPUT DDNAME\n         L     R14,IEBCR14           RESTORE BAS RETURN ADDR\n         BR    R14                   YES - GOOD RETURN CODE IEBCOPY\n*\nUSERABND DS    0H                    HAVE USER ABEND\n         STH   R1,DOUBLE             SAVE ABEND CODE\n         UNPK  ABENDCD(5),DOUBLE(3)  UNPACK ABEND CODE\n         MVZ   ABENDCD,HEX0F0F       TURN OFF ZONES\n         TR    ABENDCD,HEXCHAR       TRANSLATE TO PRINTABLE\n         MVI   ABENDCD+4,C' '        RESTORE THE BLANK\n         DETACH PGMTCB               REMOVE THE ATTACHED TASK\n         B     IEBCPYER              NO - USER ABEND ON IEBCOPY\n*\nSYSABEND DS    0H                    HAVE SYSTEM ABEND\n         STH   R1,DOUBLE             SAVE ABEND CODE\n         UNPK  ABENDCD(5),DOUBLE(3)  UNPACK ABEND CODE\n         MVZ   ABENDCD,HEX0F0F       TURN OFF ZONES\n         TR    ABENDCD,HEXCHAR       TRANSLATE TO PRINTABLE\n         MVI   ABENDCD+4,C' '        RESTORE THE BLANK\n         CLI   IEBCOPY_FUNCTION,C'U' JUST DID UNLOAD FUNCTION ?\n         DETACH PGMTCB               REMOVE THE ATTACHED TASK\n         BE    IEBCPYER            YES - HAPPENED ON IEBCOPY UNLOAD\n*        CLC   ABENDCD(4),=CL4'0D37'   GET S0D37 ABEND ON RELOAD ?\n*        BNE   IEBCPYER              NO - USER ABEND ON IEBCOPY\n* ------------------------------------------------------------------- *\n* ENTER INTO RECOVERY PHASE TO RECOVER THE PDS.  THE ADDITION OF\n*    DIRECTORY BLOCKS DID NOT LEAVE ROOM TO RESTORE THE PDS MEMBERS.\n* ------------------------------------------------------------------- *\n         CLI   RECOV_FL,C'Y'  ALREADY IN RECOVERY MODE ?\n         BE    SEVERE_ERROR   YES - TERMINATE - SEVERE ERROR\nTRYRECOV DS    0H                    HAVE SYSTEM ABEND\n         MVI   RECOV_FL,C'Y'  TURN ON RECOVERY FLAG TRY TO RECOVER PDS\n         B     RECOVER         RESTORE DIRECTORY BLOCKS AND DATA\n*\n**********************************************************************\n*    STATIC STORAGE FOLLOWS\n**********************************************************************\n         LTORG\n**********************************************************************\n         TITLE 'IEBCOPY  - STATIC DATA AREAS'\n**********************************************************************\nIEBCOPY_PARMINIT      DS  0H\nIEBCOPY_OPTLISTI      DC  AL2(IEBCOPY_OPTPARML)\nIEBCOPY_OPTPARM       DC  C'SIZE=1M,WORK=1M,REPLACE'\nIEBCOPY_OPTPARML      EQU *-IEBCOPY_OPTPARM\nIEBCOPY_OPTLISTL      EQU *-IEBCOPY_OPTLISTI\n*\nIEBCOPY_DDNMELST      DC  AL2(IEBCOPY_DDNMPRML)\nIEBCOPY_DDNMPARM      DC  4XL8'0'                   SKIP FOUR DDNAMES\nIEBCOPY_SYSIN_DDNAME  DC  1CL8'$SYSIN$$' RENAME THE IEBCOPY SYSIN DDNME\nIEBCOPY_SYSPRT_DDNAME DC  1CL8'$SYSPRT$' RENAME IEBCOPY SYSPRINT DDNAME\n                      DC  1XL8'0'                   SKIP ONE DDNAME\nIEBCOPY_DDINPUT       DC  CL8'SYSUT1  '             INPUT DDNAME\nIEBCOPY_DDOUTPUT      DC  CL8'SYSUT2  '             OUTPUT DDNAME\nIEBCOPY_DDNMPRML      EQU *-IEBCOPY_DDNMPARM\nIEBCOPY_DDNMELSL      EQU *-IEBCOPY_DDNMELST\n*\nREADCCWI DS    0D\n         CCW   X'31',*,X'40',5      SEARCH CHAIN\n         CCW   X'08',*-8,0,0               TIC\n         CCW   X'1E',*,X'20',8+8+256   READ COUNT KEY DATA\nREADCCWL EQU   *-READCCWI\n*\nWRITCCWI DS    0D\n         CCW   X'31',*,X'40',5      SEARCH CHAIN\n         CCW   X'08',*-8,0,0               TIC\n         CCW   X'1D',*,X'20',8+8+256   WRITE COUNT KEY DATA\nWRITCCWL EQU   *-WRITCCWI\n*\nEOFCCWI  DS    0D\n         CCW   X'31',*,X'40',5      SEARCH CHAIN\n         CCW   X'08',*-8,0,0               TIC\n         CCW   X'1D',*,X'20',8         WRITE COUNT KEY DATA\nEOFCCWL  EQU   *-EOFCCWI\n*\n**********************************************************************\n         TITLE 'PDSCLEAN - MACRO LISTS'\n**********************************************************************\nRDJFCBI  DS    0F\n         RDJFCB  *,MF=L                   JFCB MACRO INIT AREA\nRDJFCBIL EQU   *-RDJFCBI\n*\nOPENI    DS    0F\n         OPEN  (*,OUTPUT),MODE=31,MF=L\nOPENIL   EQU   *-OPENI\n*\nCAMLSTI  DS    0F\n         CAMLST SEARCH,1,2,3        OBTAIN PARMLIST INIT AREA\nCAMLSTIL EQU   *-CAMLSTI\n*\nEXTRACTI DS    0F\n         EXTRACT MF=L               EXTRACT PARAMETER LIST\nEXTRACTL EQU   *-EXTRACTI\n*\nATTACHI  DS    0F\n         ATTACH EP=*-*,              ATTACH REQUESTED PROGRAM          +\n               ECB=*-*,              .  ECB ADDRESS                    +\n               PURGE=HALT,IEBCOPY,   .. HALT SUBTASK I/O IF IT ABENDS  +\n               SF=L\nATTACHIL EQU   *-ATTACHI\n*\nWTOI     DS    0F\n         WTO   '                                                       +\n                                                                       +\n                              ',MF=L,ROUTCDE=(11)\nWTOIL    EQU   *-WTOI\n*\n**********************************************************************\n         TITLE 'PDSCLEAN - DCBS'\n**********************************************************************\nPDSEDCBI DCB   DDNAME=XXXXXXXX,                                        +\n               DSORG=PO,                                               +\n               MACRF=W\nPDSEDCBL EQU  *-PDSEDCBI\n*\nEXCPDCBI DCB   DDNAME=XXXXXXXX,                                        +\n               DEVD=DA,                                                +\n               DSORG=PO,                                               +\n               EXLST=*,                                                +\n               MACRF=E\nEXCPDCBL EQU  *-EXCPDCBI\n*\nJFCBLSTI       DS    0F\n               DC    XL1'87',AL3(0)             INIT JFCB EXIT LIST\nJFCBLSTL       EQU   *-JFCBLSTI\n*\nSYSINI   DCB   DDNAME=SYSIN,MACRF=(GM),DSORG=PS,EODAD=END_SYSIN,       +\n               LRECL=80,RECFM=FB\nSYSINIL  EQU  *-SYSINI\n*\nSYSPRINI DCB   DDNAME=SYSPRINT,MACRF=(PM),DSORG=PS,                    +\n               LRECL=125,RECFM=FBA\nSYSPRINL EQU  *-SYSPRINI\n*\nZEROPK    DC    PL1'0'\nONEPK     DC    PL1'1'\nALTERDIR  DC    CL8'ALTERDIR'\nCOMPRESS  DC    CL8'COMPRESS'\nEMPTYDIR  DC    CL8'EMPTYDIR'\nEMPTY     DC    CL8'EMPTY   '\nEMPTYO    DC    CL8'EMPTYO  '\nZERODIR   DC    CL8'ZERODIR '\nDDUNLOAD  DC    CL8'UNLOAD  '\nDDSYSUT1  DC    CL8'SYSUT1  '\nDDSYSUT2  DC    CL8'SYSUT2  '\nHEXZERO   DC    8X'00'\nHEX0F0F   DC    4X'0F'                CONSTANT\nHEXCHAR   DC    C'0123456789ABCDEF'   CONSTANT\nPDSLIT    DC    CL7'  PDS  '\nPDSELIT   DC    CL7'  PDS/E'\n*\nBLANKLIN  DC    CL125' '\n**********************************************************************\n         TITLE 'PDSCLEAN - MESSAGES'\n**********************************************************************\nNOTAUTHM DC    CL39'**MODULE PDSCLEAN IS NOT APF AUTHORIZED'\nTOKLENMS DC    CL39'**INVALID FUNCTION (LENGTH < 2 CHARS)=>'\nINVFUNMS DC    CL39'**INVALID FUNCTION                   =>'\nINVDDNMS DC    CL39'**INVALID DDNAME                     =>'\nINVDBLMS DC    CL39'**INVALID DIRBLKS (LENGTH > 8 CHARS) =>'\nNOTNUMMS DC    CL39'**NON-NUMERIC DIRBLKS                =>'\nNEGDBLMS DC    CL39'**NEGATIVE DIRBLKS                   =>'\nNOFUNCMS DC    CL39'**NO FUNCTION SPECIFIED -              '\nNOFUNCM2 DC    CL39'  USE ZERODIR, ALTERDIR, OR COMPRESS.  '\nNODDNMMS DC    CL39'**NO DDNAME SPECIFIED                =>'\nNODRBLMS DC    CL39'**DIRECTORY BLOCKS NOT SPECIFIED -     '\nNODRBLM2 DC    CL39'  MUST BE INCLUDED ON \"ALTERDIR\" CMD.  '\nPDSCLNMS DC    CL39'  PDS WAS EMPTIED                    =>'\nORIGBLKS DC    CL39'  PDS ORIGINAL DIRECTORY BLOCK COUNT =>'\nPDSALTMS DC    CL39'  PDS DIRECTORY WAS ALTERED          =>'\nPDSALTTO DC    CL39'  PDS DIRECTORY BLOCKS CHANGED TO    =>'\nPDSRESET DC    CL39'  PDS DIRECTORY BLOCKS RESET BACK TO =>'\nPDSRECM1 DC    CL39'**PDS DIRECTORY ALTERATION FAILED !  =>'\nPDSRECM2 DC    CL39'  PDS IS BEING RECOVERED AFTER A       '\nPDSRECM3 DC    CL39'  FAILED ATTEMPT TO INCREASE DIR BLKS. '\nPDSRECM4 DC    CL39'**NOT ENOUGH SPACE TO RELOCATE MEMBERS '\nRECPDSMS DC    CL39'  PDS RECOVERED BACK TO ORIGINAL STATE '\nIOERMSG  DC    CL39'**TTR TRANSLATE FAILURE                '\nCOMPRSMS DC    CL39'        WAS COMPRESSED               =>'\nPDSECLMS DC    CL39'  PDS/E WAS EMPTIED                  =>'\nDSORGERM DC    CL39'**INVALID DSORG (NOT PO OR POE)      =>'\nOBTNERRM DC    CL39'**INVALID CALL TO OBTAIN MACRO         '\nSTOWERRM DC    CL39'**INVALID CALL TO STOW MACRO           '\nDISPSHM1 DC    CL39'**YOU MUST USE DISP=OLD OR DISP=MOD    '\nDISPSHM2 DC    CL39'  WITH PDS/E DATASET ALLOCATIONS!      '\nDIRBLDCG DC    CL39'**DIRECTORY BLOCKS WERE DECREASED!     '\nRETREASM DC    CL39'  RETURN CODE / REASON CODE =          '\nDIRIOMSG DC    CL39'**I/O ERROR WRITING THE DIRECTORY      '\nDIREOFMS DC    CL39'**I/O ERROR WRITING THE DIRECTORY EOF  '\nJFCBMSG  DC    CL39'**ERROR READING JFCB                   '\nOPENMSG  DC    CL39'**ERROR OPENING FILE                   '\nDIRBLKMS DC    CL39'**NO DIRECTORY BLOCKS                  '\nDEVADMSG DC    CL39'**DEVICE TYPE NOT DISK                 '\nBALERMSG DC    CL39'**TRACK BALANCE ERROR                  '\nCAPACMSG DC    CL39'**TRACK CAPACITY ERROR                 '\nTIOTNFMS DC    CL39'**DDNAME NOT FOUND - NOT ALLOCATED   =>'\nPDSEDIRM DC    CL39'**YOU CANNOT ALTER PDS/E DIRECTORIES =>'\nPDSECOMP DC    CL39'        DOESNT NEED TO BE COMPRESSED =>'\nATTACHMS DC    CL39'**ATTACH TO IEBCOPY PROGRAM FAILED     '\nIEBCPYM1 DC    CL39'**IEBCOPY FAILED ON UNLOAD PROCESS     '\nIEBCPYM2 DC    CL39'**IEBCOPY FAILED ON RELOAD PROCESS     '\nIEBCPYM3 DC    CL39'**IEBCOPY PROGRAM RECEIVED ABEND CODE  '\nRELOADMS DC    CL39'  PDS WAS UNLOADED/RELOADED WITH RC=0  '\nSYSINMS  DC    CL50'TOTAL NUMBER OF INPUT SYSIN RECORDS PROCESSED     '\nVLDSYSMS DC    CL50'TOTAL NUMBER OF VALID SYSIN RECORDS PROCESSED     '\nINVSYSMS DC    CL50'TOTAL NUMBER OF INVALID SYSIN RECORDS PROCESSED   '\nERRORSMS DC    CL50'TOTAL NUMBER OF ERRORS ENCOUNTERED                '\nCLNCNTMS DC    CL50'TOTAL NUMBER OF DATASETS CLEANED (EMPTIED)        '\nALTCNTMS DC    CL50'TOTAL NUMBER OF DIRECTORY BLOCK ALTERATIONS       '\nCOMCNTMS DC    CL50'TOTAL NUMBER OF PDS/PDSE LIBRARIES COMPRESSED     '\nMAXRCMSG DC    CL50'MAXIMUM RETURN CODE ENCOUNTERED ON THIS EXECUTION '\n*\n**********************************************************************\n*    DYNAMIC STORAGE FOLLOWS  (ACQUIRED STORAGE AREA)\n**********************************************************************\n         TITLE 'PDSCLEAN - DYNAMIC DATA AREAS'\n**********************************************************************\nSTORAREA  DSECT ,                 REENTRANT STORAGE\nSAVEAREA  DS    20F\nPARMADDR  DS    F                 Parameter Address\nSAVER0    DS    F\nSAVER15   DS    F\nFUNCTION  DS    CL8\nFUNCTLN   DS    F\nDDNAME    DS    CL8\nDDNAMELN  DS    F\nDIRBLKS   DS    ZL8\nDIRBLKLN  DS    F\nDIRBLKFW  DS    F\nSYSINCNT  DS    PL4               INPUT   SYSIN RECORD COUNTER\nVALIDCNT  DS    PL4                 VALID SYSIN RECORD COUNTER\nINVLDCNT  DS    PL4               INVALID SYSIN RECORD COUNTER\nERRORCNT  DS    PL4               LOGIC ERRORS ENCOUNTERED COUNTER\nOPENED_SYSIN DS CL1               SYSIN FILE HAS-BEEN-OPENED INDICATOR\nHAVE_FUNC DS    CL1\nHAVE_DDN  DS    CL1\nHAVE_DB   DS    CL1\nNEG_DB    DS    CL1\nNONUM_DB  DS    CL1\nALTER_SUCC DS   CL1        INDICATES A SUCCESSFUL DIR BLK ALTERATION\nRECOV_FL  DS    CL1        IEBCOPY RELOAD FAILED FLAG - RECOVER PDS\nDOIOSAVE  DS    4F\nCLEANCNT  DS    PL4               CLEAN COUNTER\nCOMPRSCT  DS    PL4               COMPRESSED LIBRARIES COUNTER\nDIRCHGCT  DS    PL4               DIRECTORIES CHANGED COUNTER\nABENDCD   DS    CL4               ABEND CODE RETURNED FROM IEBCOPY\nABENDCD1  DS    CL1\nDIRBLKSF  DS    F                 STORE THE # OF DIRECTORY BLOCKS\nDIRBLKDI  DS    ZL7               STORE DISPLAY MSG # OF DIR BLOCKS\nUNPKAREA  DS    CL9\nDOUBLE    DS    D                 DOUBLE WORD\nFULL      DS    F                 FULL WORD\nMAX_RC    DS    F                 MAXIMUM RETURN CODE\nMAX_RC_DI DS    ZL7               MAXIMUM RETURN CODE DISPLAY FIELD\nPGMECB    DS    F                 ECB POSTED AT SUBTASK TERMINATION\nPGMTCB    DS    F                 TCB ADDRESS OF ATTACHED TASK\n*\n***********************************************************************\n         TITLE 'DIRECTXX  - DATA AREAS'\n***********************************************************************\n         DS    0F\nOLDDIRBL DS    F\nNEWDIRBL DS    F\nEXCPECB  DS    F\nDOIOR14  DS    F\nBALFR14  DS    F\nUPDDR14  DS    F\nPDSER14  DS    F\nIEBCR14  DS    F\nTIOTADDR DS    A\nRECMAX   DS    H\n*\n* TTRn is R0 form for entry at address CVTPCNVT+0 (old entry point)\n* @CVTPCNVT entry point does not support pds datasets with more than\n* 65,535 tracks.  This entry point (original entry point) is more\n* restrictive so it is longer used.\n*\n*TTRN     DS    0F\n*TTRNTRK  DS    XL2        relative track number (halfword)\n*TTRNRECN DS    XL1        relative record number\n*TTRNCONC DS    XL1        PDS concatenation number\n*\n* TTTR is R0 form for entry at CVTPCNVT+12 (for all datasets)\n*\nTTTR     DS    0F\nTTTRTRK  DS    XL3         relative track number (for tracks > 65535)\nTTTRRECN DS    XL1         relative record number\n*                          PDS concatenation number is in Reg 13 (low\n*                              order byte)\n*\nIDSEARCH DS    0XL5\nIDCC     DS    XL2\nIDHH     DS    XL2\nIDR      DS    X\n*\nDEVAREA  DS    CL(DVAEND-DVAREA)\n*\nSTAR     TRKCALC MF=D              TRKCALC LIST WITH LABELS\n         DS    0D\nCOUNT    DS    0CL8                SEEK ADDRESS\nCTCC     DS    XL2                    CYLINDER ADDRESS\nCTHH     DS    XL2                    HEAD     ADDRESS\nCTRKDD   DS    0XL4                   TRKCALC DATA\nCTR      DS    X                         RECORD NUMBER\nCTKL     DS    X                         KEY LENGTH\nCTDL     DS    XL2                       DATA LENGTH\nKEY      DS    XL8                 KEY\nDATAX    DS    XL256               DATA\n*\n         DS    0D\nEXCPIOB  DS    CL(IOBR-IOBSTDRD+L'IOBR)  MAP STANDARD SECTION OF IOB\n*\nSYSINREC  DS    80CL1\nSYSINRCL  EQU   *-SYSINREC\n*\n***********************************************************************\n* BASE SYSTEM RETURNED DATE AND TIME\n***********************************************************************\n         DS    0F\nCURRTIME DS    F                  CURRENT TIME OF DAY HHMMSSHH (BINARY)\nCURRDATE DS    PL4                CURRENT JULIAN DATE\n*\nDISPTIME DS    0F                    CURRENT TIME IN DISPLAY FORMAT\nDISPTMHH DS    CL2                   HOURS\nDISPTMC1 DS    CL1                   COLON\nDISPTMMM DS    CL2                   MINUTES\nDISPTMC2 DS    CL1                   COLON\nDISPTMSS DS    CL2                   SECONDS\nDISPTIML EQU   *-DISPTIME            LENGTH OF DISPTIME\n*\nTIMEXXXX DS    CL8                   CURRENT TIME HH:MM:SS\n*\nSTORTIME DS    F                     USED TO CONVERT TO PACKED DECIMAL\nSTORTMSG DS    XL1                   SIGN FOR PACKED DECIMAL\nTIME9    DS    CL9                   STORE PACKED-TO-ZONE CONVERSION\n*\nJULIANDT DS    0F                    7 DIGIT JULIAN DATE\nJULCENTY DS    CL2                   JULIAN DATE'S CENTURY\nJULIANYR DS    CL2                   JULIAN DATE'S YEAR\nJULDAYS  DS    CL3                   JULIAN DATE'S DAYS\nJULDATEL EQU   *-JULIANDT            LENGTH OF JULIANDT\n*\nDATEXXXX DS    CL7                   JULIAN DATE YYYYDDDD\n*\n**********************************************************************\n         TITLE 'RELOCATED DCBS AND MACROS'\n**********************************************************************\nPDSEDCB   DS    0F,CL(PDSEDCBL)      PDSEDCB  DCB RELOCATE AREA\nEXCPDCB   DS    0F,CL(EXCPDCBL)      EXCPDCB  DCB RELOCATE AREA\nSYSIN     DS    0F,CL(SYSINIL)       SYSIN    DCB RELOCATE AREA\nSYSPRINT  DS    0F,CL(SYSPRINL)      SYSPRINT DCB RELOCATE AREA\n*\nWKOPENCL  DS    0F,CL(OPENIL)        OPEN/CLOSE MACRO RELOCATE AREA\nWKRDJFCB  DS    0F,CL(RDJFCBIL)      RDJFCB MACRO RELOCATE AREA\nEXTRACTW  DS    0F,CL(EXTRACTL)      EXTRACT MACRO RELOCATE AREA\nATTACHW   DS    0F,CL(ATTACHIL)      ATTACH  MACRO LIST RELOCATE AREA\nREADCCW   DS    0D,CL(READCCWL)      RELOCATE READCCW\nWRITECCW  DS    0D,CL(WRITCCWL)      RELOCATE WRITECCW\nEOFCCW    DS    0D,CL(EOFCCWL)       RELOCATE EOFCCW\n*\n**********************************************************************\n         TITLE 'IEBCOPY FUNCTION DATA AREAS'\n**********************************************************************\nIEBCOPY_PLIST    DS 2F                      RELOCATE IEBCOPY PLIST\nIEBCOPY_OPTLIST  DS 0H,CL(IEBCOPY_OPTLISTL) RELOCATE IEBCOPY PARMS\n                 CNOP  6,8\nIEBCOPY_DDNMLIST DS 0H,CL(IEBCOPY_DDNMELSL) RELOCATE IEBCOPY PARMLIST\nIEBCOPY_FUNCTION    DS  CL1     U - UNLOAD  R - RELOAD  C - COMPRESS\nIEBCOPY_RETURN_CODE   DS  F\nIEBCOPY_REASON_CODE   DS  F\n*\nGETPUT_FUNCTION       DS  XL1   DIRECTORY I/O FUNCTION - GET/PUT (G/P)\n*\nJFCBLIST  DS    F                    JFCB EXIT LIST RELOCATE AREA\nJFCBAR    DS    CL(JFCBLGTH)         RDJFCB WORK AREA BUFFER\n          ORG   JFCBAR\n          IEFJFCBN LIST=YES\n*\n**********************************************************************\n* OBTAIN SEARCH PARAMETER LIST FOLLOWS\n**********************************************************************\nCAMPRMLS    DS    0F                CAMLST PARAMETER LIST\nCAMLFUNC    DS    X                 FUNCTION\nCAML2       DS    X                 NOT USED WITH SEARCH\nCAML3       DS    X                 NOT USED WITH SEARCH\nCAML4       DS    X                 NOT USED WITH SEARCH\nCAMLDSN     DS    F                 CAMLIST DATASET NAME\nCAMLVOL     DS    F                 CAMLIST VOLSER\nCAMLWRK     DS    F                 CAMLIST WORK AREA\n*\nCAMWORK     DS    0D,CL148\n            ORG   CAMWORK-44     RECORD KEY IS NOT INPUT\n            IECSDSL1 (1)         FORMAT 1 DSCB\n            ORG   ,\n            SPACE 3\n            EJECT\n*\nMSG39       DS  CL39             RELOCATE ERROR MESSAGE\n*\n**********************************************************************\n         TITLE 'SYSPRINT HEADING AND DETAIL LINES'\n**********************************************************************\n*\nHEADING1 DS    0CL125         FIRST HEADING RECORD FOR SYSPRINT\n         DS    CL1                     CARRIAGE CONTROL CHARACTER\nH1LIT1   DS    CL9\nH1VERS   DS    CL9             PROGRAM MAINTENANCE LEVEL VERS.REL.MOD\nH1LIT2   DS    CL42\n         DS    CL1\nH1DATE   DS    CL8             CURRENT JULIAN DATE\n         DS    CL1\nH1TIME   DS    CL8             CURRENT TIME\n         DS    46CL1\nHEADING1L  EQU *-HEADING1\n*\nTRAILER1 DS    0CL125          TRAILER RECORD FOR SYSPRINT\n         DS    15CL1\nT1MSG    DS    CL50\nT1LIT1   DS    CL4\nT1COUNT  DS    ZL7             CLEAN COUNT DISPLAYED\n         DS    53CL1\nTRAILER1L  EQU *-TRAILER1\n*\nSYSINLN  DS    0CL125\n         DS    CL1\nSYSRECMS DS    CL13\nSYSRECRD DS    CL80\n         DS    30CL1\nSYSINLNL   EQU *-SYSINLN\n*\nMSGTXTLN DS    0CL125\n         DS    CL1\nMSGTXT   DS    CL39\n         DS    CL3\nMSGDSN   DS    CL44\n         DS    38CL1\nMSGTXTL     EQU *-MSGTXTLN\n*\nEXECWTO  DS    CL(WTOIL)        WTO MESSAGE AREA\nEXECWTOL EQU   *-EXECWTO\n*\nSTORSIZE    EQU   *-STORAREA\n*\n**********************************************************************\n         TITLE 'DSECTS'\n**********************************************************************\n         DCBD   DSORG=PO,DEVD=DA , | DCB DSECT\nCVT      DSECT ,\n         CVT  LIST=YES,DSECT=YES , | Communications Vector Table DSECT\n         IKJTCB LIST=YES ,\n         IEZIOB ,                  | Input/Output Block DSECT\n         IHADVA ,                  | Device Type DSECT\n         IEFUCBOB ,                | Unit Control Block DSECT\nTIOTD    DSECT ,\n         IEFTIOT1 ,                | Task Input/Output Table DSECT\n         IEZWPL ,                  | WTO Parameter List DSECT\n         YREGS ,                   | Register equates\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PROC": {"ttr": 2055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00G\\x01\\x04$\\x8f\\x01\\x041?\\x15!\\x00\\x19\\x00\\x0f\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2004-09-04T00:00:00", "modifydate": "2004-11-08T15:21:47", "lines": 25, "newlines": 15, "modlines": 0, "user": "TKMILLE"}, "text": "//PDSCLEAN  PROC\n//*******************************************************************\n//* THIS PROGRAM DOES THE FOLLOWING THREE FUNCTIONS:\n//*   1) EMPTY A PDS OR PDS/E DATASET\n//*   2) ALTER THE ALLOCATED DIRECTORY BLOCKS OF A PDS DATASET\n//*   3) COMPRESS A PDS OR PDS/E DATASET\n//*\n//* ENTER ONE OF THE FOLLOWING TWO COMMANDS ON THE //SYSIN DDNAME\n//*    STATEMENT. MULTIPLE COMMANDS CAN BE ENTERED TO PERFORM MORE\n//*    THAN ONE FUNCTION.\n//*\n//* ZERODIR  DDNAME\n//* COMPRESS DDNAME\n//* ALTERDIR DDNAME +NNN (WHERE NNNN IS ADDITIONAL DIRECTORY BLOCKS\n//*                       NNNN IS A NUMERIC NUMBER FROM 1-8 DIGITS.\n//*                       NEGATIVE DIRBLKS VALUES NOT ALLOWED.)\n//*\n//*******************************************************************\n//PDSCLEAN    EXEC PGM=PDSCLEAN\n//SYSPRINT    DD SYSOUT=*,DCB=(RECFM=FBA,LRECL=125,BLKSIZE=2000)\n//$SYSPRT$    DD SYSOUT=*,DCB=(RECFM=FBA,LRECL=125,BLKSIZE=2000)\n//SYSUDUMP    DD SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1995)\n//UNLOAD      DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))\n//SYSUT1      DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))\n//SYSUT2      DD UNIT=SYSALLDA,SPACE=(CYL,(050,050))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAMPRPT": {"ttr": 2057, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00P\\x01\\x040\\x0f\\x01\\t\\x17O\\x14W\\x00#\\x00!\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2004-10-26T00:00:00", "modifydate": "2009-06-23T14:57:50", "lines": 35, "newlines": 33, "modlines": 0, "user": "TKMILLE"}, "text": "PDSCLEAN V01.01.08  PDS/PDSE CLEAN/ALTER/COMPRESS PROGRAM    2009.174\n\nSYSIN REC =>    ALTERDIR   DD1  +5\n\n  PDS DIRECTORY WAS ALTERED          =>   HLQ.PDS1\n\n  PDS ORIGINAL DIRECTORY BLOCK COUNT =>   0000100\n\n  PDS DIRECTORY BLOCKS CHANGED TO    =>   0000105\n\n  PDS WAS UNLOADED/RELOADED WITH RC=0\n\nSYSIN REC =>    ZERODIR    DD2\n\n  PDS WAS EMPTIED                    =>   HLQ.PDS2\n\nSYSIN REC =>    COMPRESS   DD3\n\n  PDS   WAS COMPRESSED               =>   HLQ.TESTPDSE\n\n              TOTAL NUMBER OF INPUT SYSIN RECORDS PROCESSED      => 0000003\n\n              TOTAL NUMBER OF INVALID SYSIN RECORDS PROCESSED    => 0000000\n\n              TOTAL NUMBER OF VALID SYSIN RECORDS PROCESSED      => 0000003\n\n              TOTAL NUMBER OF ERRORS ENCOUNTERED                 => 0000000\n\n              TOTAL NUMBER OF DATASETS CLEANED (EMPTIED)         => 0000001\n\n              TOTAL NUMBER OF DIRECTORY BLOCK ALTERATIONS        => 0000001\n\n              TOTAL NUMBER OF PDS/PDSE LIBRARIES COMPRESSED      => 0000001\n\n              MAXIMUM RETURN CODE ENCOUNTERED ON THIS EXECUTION  => 0000000\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZERODIR": {"ttr": 2059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x002\\x01\\x10\\x16\\x0f\\x01\\x10\\x16\\x0f\\x10P\\x01L\\x01L\\x00\\x00\\xe3\\xd2\\xd4\\xc9\\xd3\\xd3\\xc5@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2010-06-09T00:00:00", "modifydate": "2010-06-09T10:50:32", "lines": 332, "newlines": 332, "modlines": 0, "user": "TKMILLE"}, "text": "/* REXX      ZERODIR                                                  */\n/**********************************************************************/\n/* MODULE  = ZERODIR                                                  */\n/*                                                                    */\n/* #\u00a2# AUTHOR          TKMILLE                                        */\n/* #\u00a2# CREATED         TKMILLE  09/15/2004                            */\n/* #\u00a2# UPDATED         TKMILLE  06/09/2010                            */\n/*                                                                    */\n/*  PURPOSE = This exec execute will call program PDSCLEAN to         */\n/*            empty the directory (delete the members) for a PDS or   */\n/*            PDS/E dataset.                                          */\n/*                                                                    */\n/*  SYNTAX:   ZERODIR   dsname  [Nomsg]  [Force]  [Debug]             */\n/*                                                                    */\n/*  INPUT                                                             */\n/*  PARMS:                                                            */\n/*                                                                    */\n/*             ZERODIR   = The command to invoke this exec.           */\n/*                         This MUST be the FIRST PARAMETER !         */\n/*                                                                    */\n/*              dsname   = The dataset name to be emptied.  Must be a */\n/*                         PDS or a PDS/E dataset.                    */\n/*                         The dsname MUST be fully qualified and does*/\n/*                         not need to be enclosed in tic marks or    */\n/*                         quotes.  They will be ignored if they are  */\n/*                         included.  This parameter is required.     */\n/*                                                                    */\n/*               NOMSG   = This is an optional keyword parameter used */\n/*            or NOMSGS    to bypass the display of the summary       */\n/*                         messages.  With the NOMSG parm, only a     */\n/*                         return code is returned.  No messages are  */\n/*                         displayed on the console.                  */\n/*                                                                    */\n/*               FORCE   = This is an optional keyword parameter used */\n/*                         to force the excution of a ZERODIR         */\n/*                         command even if exclusive control of the   */\n/*                         resource cannot be obtained.  Use of FORCE */\n/*                         is not necessary if exclusive control of   */\n/*                         the resource can be obtained.  This        */\n/*                         parameter MUST follow the dsname parameter.*/\n/*                         This parameter should be used with caution.*/\n/*                         Exclusive serialization is the safest way  */\n/*                         to ensure data integrity of the resource   */\n/*                         for all users.                             */\n/*                                                                    */\n/*                DEBUG  = The parameter which displays the exec      */\n/*                         statements as they are being executed.     */\n/*                         This parameter is optional and used for    */\n/*                         debugging purposes. This parameter MUST    */\n/*                         follow the dsname parameter.               */\n/*                                                                    */\n/*  OUTPUT PARMS:                                                     */\n/*                                                                    */\n/*       rc (return code) is passed to the calling EXEC or CLIST.     */\n/*       (Reference &LASTCC in a clist, rc in a REXX exec).           */\n/*                                                                    */\n/*  Certification:                                                    */\n/*                                                                    */\n/*    Program PDSCLEAN should also reside in the IKJTSO00 member      */\n/*    in the AUTHPGM Section to Authorize its being called from       */\n/*    the TSO/E Environment.                                          */\n/*                                                                    */\n/* Return Codes from the ZERODIR exec:                                */\n/*                                                                    */\n/* 0     => Successful call to program PDSCLEAN via ZERODIR exec      */\n/* 4     => Minor error in program PDSCLEAN from ZERODIR parms        */\n/* 8     => Return code 8 can be returned for any of the following    */\n/*          situations:                                               */\n/*          Command is missing or invalid from the ZERODIR exec.      */\n/*          DSNAME is missing or invalid (2nd parameter)              */\n/*          DDNAME specified on Parm passed to PDSCLEAN is not in the */\n/*            Tiot Table (this error should not occur).               */\n/*          The resource could not be exclusively serialized and the  */\n/*            FORCE parameter was not used.                           */\n/* 12    => Invalid Rexx Exec command                                 */\n/* 16    => Severe Error - Program Terminates Immediately             */\n/*                                                                    */\n/*  Example Calls:                                                    */\n/*                                                                    */\n/* ZERODIR MY.PDS                                                     */\n/* ZERODIR MY.PDS2                                                    */\n/* ZERODIR MY.PDSE                                                    */\n/* ZERODIR MY.PDSE NOMSG                                              */\n/* ZERODIR MY.PDSE NOMSGS                                             */\n/* ZERODIR MY.PDS  FORCE                                              */\n/* ZERODIR MY.PDS  FORCE DEBUG                                        */\n/*                                                                    */\n/**********************************************************************/\nversion_level = \"V01.01.09\"\nArg parms\nTrace \"O\"\n\nenvirnmt  = Sysvar(\"sysenv\")\nnesting   = Sysvar(\"sysnest\")\nsysicmd   = Sysvar(\"sysicmd\")\nsyspcmd   = Sysvar(\"syspcmd\")\nsysscmd   = Sysvar(\"sysscmd\")\nPARSE source . How_Called .\nmsg_stat = Msg(\"OFF\")\n\nIf envirnmt <> \"BACK\" & ,\n   Sysvar(\"SYSISPF\") <> \"ACTIVE\"  Then Do /* Invoke the ISPF Environ*/\n     \"ISPF CMD(%ZERODIR\" parms \")\"\n     Return 0\nEnd\n\nuserid      = Userid()\nrtcd        = 0\nForce_Parm  = \"NO\"\nNomsg_Parm  = \"NO\"\n\npdsdsn   = word(parms,1)                /* Get PDS dataset name    */\npdsdsn   = Strip(pdsdsn,both,\"'\")       /* remove enclosed ticks   */\npdsdsn   = Strip(pdsdsn,both,'\"')       /* remove enclosed quotes  */\nparms    = DELWORD(parms,1,1)\n\ndebug       = \"\"\nnbr_words   = words(parms)\n\nDo i = 1 to nbr_words\n   Parse_It =  WORD(parms,i)\n   Upper Parse_It\n   If ABBREV('DEBUG',Parse_It,3) = 1  then Do\n      debug = \"DEBUG\"\n      parms = DELWORD(parms,i,1)\n      i = i - 1\n      iterate\n   End\n   If Parse_it = \"FORCE\" Then Do\n      Force_Parm = \"YES\"\n      parms    = DELWORD(parms,i,1)\n      i = i - 1\n      iterate\n   End\n   If Parse_it = \"NOMSG\" Then Do\n      Nomsg_Parm = \"YES\"\n      parms    = DELWORD(parms,i,1)\n      i = i - 1\n   End\n   If Parse_it = \"NOMSGS\" Then Do\n      Nomsg_Parm = \"YES\"\n      parms    = DELWORD(parms,i,1)\n      i = i - 1\n   End\nEnd\n\nIf debug = \"DEBUG\"  then Do\n   Trace \"I\"\nEnd\n\ntime     = Time()\nhours    = Substr(time,1,2)\nmins     = Substr(time,4,2)\nsecs     = Substr(time,7,2)\ntimeql   = \"T\"||hours||mins||secs\n\nddname   = \"$$DDD1$$\"\nsysprint = \"\"userid\".$ZERODIR.SYSPRINT.\"||timeql\nsysin    = \"\"userid\".$ZERODIR.SYSIN.\"||timeql\n\n/* Rexx  SYSDSN function                                 */\n/*                                                       */\n/* Sysdsn results:                                       */\n/*                                                       */\n/* = \"OK\"                                                */\n/* = \"MEMBER NOT FOUND\"                                  */\n/* = \"MEMBER SPECIFIED, BUT DATASET IS NOT PARTITIONED\"  */\n/* = \"DATASET NOT FOUND\"                                 */\n/* = \"ERROR PROCESSING REQUESTED DATASET\"                */\n/* = \"PROTECTED DATASET\"                                 */\n/* = \"VOLUME NOT ON SYSTEM\"                              */\n/* = \"INVALID DATASET NAME, dsname\"                      */\n/* = \"MISSING DATASET NAME\"                              */\n/* = \"UNAVAILABLE DATASET\"                               */\n\nexists  = SYSDSN(\"'\"pdsdsn\"'\")\n\nIf exists <> \"OK\"  Then Do\n   If Nomsg_Parm = \"NO\" Then Do\n      Say \"PDSDSN           =>\" pdsdsn\n      Say \"SYSDSN status is =>\" exists\n      Say \"\"\"\"ZERODIR\"\"\" function is ended prematurely !!!\"\n      Say ;\n   End\n   rtcd  = 12\n   Signal End_Up\nEnd\n\nmsgval = MSG(\"OFF\")\n\nlistdsi_rc = LISTDSI(\"'\"pdsdsn\"'\" DIRECTORY NORECALL SMSINFO)\n\nmsgval = MSG(msgval)\n\nIf (listdsi_rc <> 0 & listdsi_rc <> 4) Then Do\n   If Nomsg_Parm = \"NO\" Then Do\n    Say ;\n    Say \"Error executing the ZERODIR command for dataset \"\"\"pdsdsn\"\"\" !\"\n    Say \"LISTDSI Function Failed - Return Code is \"listdsi_rc\" !!!\"\n    Say ;\n   End\n   rtcd  = 12\n   Signal End_up\nEnd\n\npdse_? = \"NO\"\nIf sysused = \"N/A\" Then pdse_? = \"YES\"\n\nAllocate_The_PDS:\n\n\"ALLOC FI(\"ddname\")  DA('\"pdsdsn\"') OLD REUSE\"\nalloc_rc = rc\nIf alloc_rc <> 0 Then Do\n   \"ALLOC FI(\"ddname\")  DA('\"pdsdsn\"') SHR REUSE\"\n   alloc2_rc = rc\n   Select\n     When alloc2_rc = 0 & Force_Used = \"YES\" Then Nop\n     When alloc2_rc = 0 Then Do\n      \"FREE FI(DD01)    DA('\"input\"' \"input\")\"\n      If Nomsg_Parm = \"NO\" Then Do\n      Say ;\n      Say \" PDS dataset \"\"\"pdsdsn\"\"\" cannot be exclusively serialized !\"\n      Say \" Use the FORCE parameter to override exclusive serialization\"\n      Say \" The dataset is allocated to some other resource - Either   \"\n      Say \" try the ZERODIR command later or use the FORCE parameter.  \"\n      Say \"\"\"\"ZERODIR\"\"\" function is ended prematurely !!!\"\n      Say ;\n      End\n      rtcd   = 8\n      Signal End_up\n     End\n     Otherwise Do\n      \"FREE FI(DD01)    DA('\"input\"' \"input\")\"\n      If Nomsg_Parm = \"NO\" Then Do\n      Say ;\n      Say \" PDS dataset \"\"\"pdsdsn\"\"\" cannot be allocated. It does not\"\n      Say \" exist.  Recheck spelling and try again.                  \"\n      Say \"\"\"\"ZERODIR\"\"\" function is ended prematurely !!!\"\n      Say ;\n      End\n      rtcd   = 8\n      Signal End_up\n     End\n   End\nEnd\n\n\"DELETE ('\"sysin\"' '\"sysprint\" '\"$sysprt$\"')\"\n\n\"ALLOC FI(SYSUDUMP) DUMMY REUSE\"\n\"ALLOC FI(DMBENAN)  DUMMY REUSE\"  /* TURN OFF DUMP-MASTER DUMPS */\n\"ALLOC FI(FCOPYOFF) DUMMY REUSE\"  /* TURN OFF FASTCOPY CA-PDSMAN */\n\"ALLOC FI(UNLOAD)  NEW REUSE SP(50,50) CYLINDERS\"\n\"ALLOC FI(SYSUT1)  NEW REUSE SP(50,50) CYLINDERS\"\n\"ALLOC FI(SYSUT2)  NEW REUSE SP(50,50) CYLINDERS\"\n\"ALLOC FI(SYSIN)   DA('\"sysin\"') NEW REUSE SPACE(1,1) TRACKS\",\n   \"RECFM(F B) LRECL(80) BLKSIZE(0) DSORG(PS) \"\n\"ALLOC FI(SYSPRINT) DA('\"sysprint\"') MOD REUSE SPACE(1,1) TRACKS\",\n   \"RECFM(F B A) LRECL(125) BLKSIZE(2000) DSORG(PS) \"\n\"ALLOC FI($SYSPRT$) DA('\"$sysprt$\"') MOD REUSE SPACE(1,1) TRACKS\",\n   \"RECFM(F B A) LRECL(125) BLKSIZE(2000) DSORG(PS) \"\n\nsysinrec.1 = \" ZERODIR\" ddname\n\n\"EXECIO 1 DISKW SYSIN    (STEM sysinrec. FINIS\"\nexeciorc     = rc\nIf execiorc <> 0   Then Do\n   If Nomsg_Parm = \"NO\" Then Do\n      Say ;\n      Say \"Error executing the EXECIO DISKW Rexx command for file\",\n          \"SYSIN   !!!\"\n      Say \"EXECIO Return Code is \"execiorc\" !!!\"\n      Say \"\"\"\"ZERODIR\"\"\" function is ended prematurely !!!\"\n      Say ;\n   End\n   rtcd = 12\n   Signal End_up\nEnd\n\n\"CALL *(PDSCLEAN)\"\nPdsclean_rc = rc\nIf Pdsclean_rc > rtcd Then\n   rtcd = Pdsclean_rc\n\n\"FREE FI($$DDD1$$ UNLOAD SYSUT1 SYSUT2 SYSIN SYSUDUMP DMBENAN)\"\n\"FREE FI(FCOPYOFF)\"\n\"DELETE ('\"sysin\"')\"\n\nMerge_The_Sysprint_Files:\n\n\"ALLOC FI(SYSUT1) DA('\"$sysprt$\"')         SHR REUSE\"\n\"ALLOC FI(SYSUT2) DA('\"sysprint\"')         MOD REUSE\"\n/* \"ALLOC FI(SYSPRINT) DA(*)                      REUSE\"  */\n\"ALLOC FI(SYSPRINT) DUMMY                      REUSE\"\n\"ALLOC FI(SYSUDUMP) DUMMY                      REUSE\"\n\"ALLOC FI(SYSIN)    DUMMY                      REUSE\"\n\n/* Address \"LINKMVS\" \"IEBGENER\"  */\n\"TSOEXEC CALL *(IEBGENER)\"\nIebgener_rc = rc\nIf Iebgener_rc > rtcd Then\n   rtcd = Pdsclean_rc\n\n\"FREE FI(SYSUT1 SYSPRINT SYSUDUMP SYSIN)\"\n\nIf Nomsg_Parm  = \"YES\" Then Signal End_up\n\nIf envirnmt <> \"BACK\" Then Signal Browse_Sysprint  /* Background ? */\n\n\"NEWSTACK\"\n\"EXECIO * DISKR SYSUT2 (FINIS\"\nsysprint_lines = Queued()\nDo i = 1 to sysprint_lines\n   Pull sysprt_line\n   Say  sysprt_line\nEnd\n\"DELSTACK\"\n\nSignal End_Up\n\nBrowse_Sysprint:\n\nAddress ISPEXEC \"LMINIT DATAID(DATAID) DDNAME(SYSUT2)\"\nAddress ISPEXEC \"BROWSE DATAID(\"dataid\")\"\nAddress ISPEXEC \"LMFREE DATAID(\"dataid\")\"\n\nEnd_up:\n\"FREE DA('\"sysprint\"' '\"$sysprt$\"')\"\n\"DELETE ('\"sysprint\"' '\"$sysprt$\"')\"\n\"FREE FI(SYSPRINT $SYSPRT$ SYSUT2)\"\n\n/*  The End  */\nReturn rtcd\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT693/FILE693.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT693", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}