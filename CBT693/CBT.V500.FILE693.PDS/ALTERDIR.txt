/* REXX      ALTERDIR                                                 */
/**********************************************************************/
/* MODULE  = ALTERDIR                                                 */
/*                                                                    */
/* #¢# AUTHOR          TKMILLE                                        */
/* #¢# CREATED         TKMILLE  09/15/2004                            */
/* #¢# UPDATED         TKMILLE  12/14/2005                            */
/*                                                                    */
/*  PURPOSE = This exec execute will call program PDSCLEAN to         */
/*            alter the number of directory blocks allocated for a    */
/*            PDS Dataset.  The alteration can only be an increase    */
/*            in directory blocks and NOT a decrease.                 */
/*                                                                    */
/*  SYNTAX:   ALTERDIR  dsname  #dirblks [Force]  [Debug]             */
/*                                                                    */
/*  INPUT                                                             */
/*  PARMS:                                                            */
/*                                                                    */
/*               dsname  = The dataset name to be altered.  Must be a */
/*                         pds file. Cannot be a PDS/E file, as these */
/*                         file manage their own directories.  Must   */
/*                         be DSORG=PS.                               */
/*                         The dsname MUST be fully qualified and does*/
/*                         not need to be enclosed in tic marks or    */
/*                         quotes.  They will be ignored if they are  */
/*                         included.  This parameter is required.     */
/*                                                                    */
/*             #dirblks  = Specifies the number of additional         */
/*                         number of directory blocks to add.  This   */
/*                         number must be numeric and cannot be       */
/*                         negative number. It must be from 1 to 8    */
/*                         numeric digits (a whole number).  The      */
/*                         leading "+" (plus) sign is not necessary,  */
/*                         but can be used for clarity for the user.  */
/*                         This parameter is required.                */
/*                                                                    */
/*                FORCE  = This is an optional keyword parameter used */
/*                         to force the excution of an ALTERDIR       */
/*                         command even if exclusive control of the   */
/*                         resource cannot be obtained.  Use of FORCE */
/*                         is not necessary if exclusive control of   */
/*                         the resource can be obtained. This         */
/*                         parameter MUST follow both the dsname and  */
/*                         the #dirblks parameter.                    */
/*                         This parameter should be used with caution.*/
/*                         Exclusive serialization is the safest way  */
/*                         to ensure data integrity of the resource   */
/*                         for all users.                             */
/*                                                                    */
/*                DEBUG  = The parameter which displays the exec      */
/*                         statements as they are being executed.     */
/*                         This parameter is optional and used for    */
/*                         debugging purposes.  This parameter MUST   */
/*                         MUST follow both the dsname and the        */
/*                         #dirblks parameter.                        */
/*                                                                    */
/*  OUTPUT PARMS:                                                     */
/*                                                                    */
/*       rc (return code) is passed to the calling EXEC or CLIST.     */
/*       (Reference &LASTCC in a clist, rc in a REXX exec).           */
/*                                                                    */
/*  Certification:                                                    */
/*                                                                    */
/*    Program PDSCLEAN should also reside in the IKJTSO00 member      */
/*    in the AUTHPGM Section to Authorize its being called from       */
/*    the TSO/E Environment.                                          */
/*                                                                    */
/* Return Codes from the ALTERDIR exec:                               */
/*                                                                    */
/* 0     => Successful call to program PDSCLEAN via ALTERDIR exec     */
/* 4     => Minor error in program PDSCLEAN from ALTERDIR parms       */
/* 8     => Return code 8 can be returned for any of the following    */
/*          situations:                                               */
/*          Command is missing or invalid from the ALTERDIR exec.     */
/*          DSNAME is missing or invalid (2nd parameter)              */
/*          Directory blocks value is missing or invalid (3rd parm)   */
/*          Received a bad return code from the STOW macro            */
/*          Tried to issue 'ALTERDIR' function against a PDS/E dsn    */
/*          DDNAME specified on Parm passed to PDSCLEAN is not in the */
/*            Tiot Table (this error should not occur).               */
/*          The resource could not be exclusively serialized and the  */
/*            FORCE parameter was not used.                           */
/* 12    => Invalid Rexx Exec command                                 */
/* 16    => Severe Error - Program Terminates Immediately             */
/*                                                                    */
/*  Example Calls:                                                    */
/*                                                                    */
/* ALTERDIR MY.PDS     +5                                             */
/* ALTERDIR MY.PDS2    10                                             */
/*                                                                    */
/**********************************************************************/
version_level = "V01.01.06"
Arg parms
Trace "O"

If envirnmt <> "BACK" & ,
   Sysvar("SYSISPF") <> "ACTIVE"  Then Do /* Invoke the ISPF Environ*/
     "ISPF CMD(%ALTERDIR" parms ")"
     Return 0
End

userid      = Userid()
rtcd        = 0
Force_Parm  = "NO"

pdsdsn    = WORD(parms,1)                /* Get PDS dataset name    */
pdsdsn    = STRIP(pdsdsn,both,"'")       /* remove enclosed ticks   */
pdsdsn    = STRIP(pdsdsn,both,'"')       /* remove enclosed quotes  */
dirblks   = WORD(parms,2)                /* Get#  directory blocks  */
ldirblks  = LENGTH(dirblks)
parms     = DELWORD(parms,1,2)

debug       = ""
nbr_words   = words(parms)

Do i = 1 to nbr_words
   Parse_It =  WORD(parms,i)
   Upper Parse_It
   If ABBREV('DEBUG',Parse_It,3) = 1  then Do
      debug = "DEBUG"
      parms = DELWORD(parms,i,1)
      i = i - 1
      iterate
   End
   Parse var Parse_It " FORCE " -6 parse_value
   If parse_value <> "" Then Do
      Force_Parm = "YES"
      parms    = DELWORD(parms,i,1)
      i = i - 1
   End
End

If debug = "DEBUG"  then Do
   Trace "I"
End

envirnmt  = Sysvar("sysenv")
nesting   = Sysvar("sysnest")
sysicmd   = Sysvar("sysicmd")
syspcmd   = Sysvar("syspcmd")
sysscmd   = Sysvar("sysscmd")

msg_stat  = Msg("OFF")
time      = Time()
hours     = Substr(time,1,2)
mins      = Substr(time,4,2)
secs      = Substr(time,7,2)
timeql    = "T"||hours||mins||secs
ddname    = "$$DDD1$$"
sysprint  = ""userid".$ALTDIR$.SYSPRINT."||timeql
$sysprt$  = ""userid".$ALTDIR$.$SYSPRT$."||timeql
sysin     = ""userid".$ALTDIR$.SYSIN."||timeql

sdirblks  = dirblks
If SUBSTR(sdirblks,1,1) = "+"  Then Do
   sdirblks  = SUBSTR(sdirblks,2,ldirblks - 1)
End

datatype  = DATATYPE(sdirblks)

If datatype <> 'NUM' Then Do
   Say "Directory blocks value is not numeric  => " dirblks
   Say """"ALTERDIR""" function is ended prematurely !!!"
   Say ;
   Signal End_Up
End

If LENGTH(sdirblks) < 1 | LENGTH(sdirblks) > 8  Then Do
   Say "Directory blocks length must be 1-8 digits  => " dirblks
   Say """"ALTERDIR""" function is ended prematurely !!!"
   Say ;
   Signal End_Up
End

/* Rexx  SYSDSN function                                 */
/*                                                       */
/* Sysdsn results:                                       */
/*                                                       */
/* = "OK"                                                */
/* = "MEMBER NOT FOUND"                                  */
/* = "MEMBER SPECIFIED, BUT DATASET IS NOT PARTITIONED"  */
/* = "DATASET NOT FOUND"                                 */
/* = "ERROR PROCESSING REQUESTED DATASET"                */
/* = "PROTECTED DATASET"                                 */
/* = "VOLUME NOT ON SYSTEM"                              */
/* = "INVALID DATASET NAME, dsname"                      */
/* = "MISSING DATASET NAME"                              */
/* = "UNAVAILABLE DATASET"                               */

exists  = SYSDSN("'"pdsdsn"'")

If exists <> "OK"  Then Do
   Say "PDSDSN           =>" pdsdsn
   Say "SYSDSN status is =>" exists
   Say """"ALTERDIR""" function is ended prematurely !!!"
   Say ;
   Signal End_Up
End

msgval = MSG("OFF")

listdsi_rc = LISTDSI("'"pdsdsn"'" DIRECTORY NORECALL SMSINFO)

msgval = MSG(msgval)

If (listdsi_rc <> 0 & listdsi_rc <> 4) Then Do
   Say ;
   Say "Error executing the ALTERDIR command for dataset """pdsdsn""" !"
   Say "LISTDSI Function Failed - Return Code is "listdsi_rc" !!!"
   Say ;
   rtcd  = 12
   Signal End_up
End

pdse_? = "NO"
If sysused = "N/A" Then pdse_? = "YES"

Allocate_The_PDS:

"ALLOC FI("ddname")  DA('"pdsdsn"') OLD REUSE"
alloc_rc = rc
If alloc_rc <> 0 Then Do
   "ALLOC FI("ddname")  DA('"pdsdsn"') SHR REUSE"
   alloc2_rc = rc
   Select
     When alloc2_rc = 0 & Force_Parm = "YES" Then Nop
     When alloc2_rc = 0 Then Do
      "FREE FI(DD01)    DA('"input"' "input")"
      Say ;
      Say " PDS dataset """pdsdsn""" cannot be exclusively serialized !"
      Say " Use the FORCE parameter to override exclusive serialization"
      Say " The dataset is allocated to some other resource - Either   "
      Say " try the ALTERDIR command later or use the FORCE parameter. "
      Say """"ALTERDIR""" function is ended prematurely !!!"
      Say ;
      rtcd   = 8
      Signal End_up
     End
     Otherwise Do
      "FREE FI(DD01)    DA('"input"' "input")"
      Say ;
      Say " PDS dataset """pdsdsn""" cannot be allocated. It does not"
      Say " exist.  Recheck spelling and try again.                  "
      Say """"ALTERDIR""" function is ended prematurely !!!"
      Say ;
      rtcd   = 8
      Signal End_up
     End
   End
End

Allocate_PDSCLEAN_Files:

"DELETE ('"sysin"' '"sysprint" '"$sysprt$"')"

"ALLOC FI(SYSUDUMP) DUMMY REUSE"
"ALLOC FI(DMBENAN)  DUMMY REUSE"  /* TURN OFF DUMP-MASTER DUMPS */
"ALLOC FI(FCOPYOFF) DUMMY REUSE"  /* TURN OFF FASTCOPY CA-PDSMAN */
"ALLOC FI(UNLOAD)  NEW REUSE SP(50,50) CYLINDERS"
"ALLOC FI(SYSUT1)  NEW REUSE SP(50,50) CYLINDERS"
"ALLOC FI(SYSUT2)  NEW REUSE SP(50,50) CYLINDERS"
"ALLOC FI(SYSIN)   DA('"sysin"') NEW REUSE SPACE(1,1) TRACKS",
   "RECFM(F B) LRECL(80) BLKSIZE(0) DSORG(PS) "
"ALLOC FI(SYSPRINT) DA('"sysprint"') MOD REUSE SPACE(1,1) TRACKS",
   "RECFM(F B A) LRECL(125) BLKSIZE(2000) DSORG(PS) "
"ALLOC FI($SYSPRT$) DA('"$sysprt$"') MOD REUSE SPACE(1,1) TRACKS",
   "RECFM(F B A) LRECL(125) BLKSIZE(2000) DSORG(PS) "

sysinrec.1 = " ALTERDIR" ddname dirblks

"EXECIO 1 DISKW SYSIN    (STEM sysinrec. FINIS"
execiorc     = rc
If execiorc <> 0   Then Do
   Say ;
   Say "Error executing the EXECIO DISKW Rexx command for file",
       "SYSIN   !!!"
   Say "EXECIO Return Code is "execiorc" !!!"
   Say """"ALTERDIR""" function is ended prematurely !!!"
   Say ;
   rtcd = 12
   Signal End_up
End

"CALL *(PDSCLEAN)"
Pdsclean_rc = rc
If Pdsclean_rc > rtcd Then
   rtcd   = Pdsclean_rc

"FREE FI($$DDD1$$ UNLOAD SYSUT1 SYSUT2 SYSIN SYSUDUMP DMBENAN)"
"FREE FI(FCOPYOFF)"
"DELETE ('"sysin"')"

Merge_The_Sysprint_Files:

"ALLOC FI(SYSUT1) DA('"$sysprt$"')         SHR REUSE"
"ALLOC FI(SYSUT2) DA('"sysprint"')         MOD REUSE"
/* "ALLOC FI(SYSPRINT) DA(*)                      REUSE"  */
"ALLOC FI(SYSPRINT) DUMMY                      REUSE"
"ALLOC FI(SYSUDUMP) DUMMY                      REUSE"
"ALLOC FI(SYSIN)    DUMMY                      REUSE"

/* Address "LINKMVS" "IEBGENER" */
"TSOEXEC CALL *(IEBGENER)"
Iebgener_rc = rc
If Iebgener_rc > rtcd Then
   rtcd   = Pdsclean_rc

"FREE FI(SYSUT1 SYSPRINT SYSUDUMP SYSIN)"

If envirnmt <> "BACK" Then Signal Browse_Sysprint  /* Background ? */

"NEWSTACK"
"EXECIO * DISKR SYSUT2 (FINIS"
sysprint_lines = Queued()
Do i = 1 to sysprint_lines
   Pull sysprt_line
   Say  sysprt_line
End
"DELSTACK"

Signal End_Up

Browse_Sysprint:

Address ISPEXEC "LMINIT DATAID(DATAID) DDNAME(SYSUT2)"
Address ISPEXEC "BROWSE DATAID("dataid")"
Address ISPEXEC "LMFREE DATAID("dataid")"

End_up:
"FREE DA('"sysprint"' '"$sysprt$"')"
"DELETE ('"sysprint"' '"$sysprt$"')"
"FREE FI(SYSPRINT $SYSPRT$ SYSUT2)"

/*  The End  */
Return rtcd
