                         U S I N G   H L A S M

The HLASM command is a tool to run the IBM High Level Assembler in
your TSO session rather than in the background as a batch job.  For
example -

hlasm tstparse
 RUNNING HIGH LEVEL ASSEMBLER
 Assembler Done No Statements Flagged
 ASMA90 RC = 0
 READY

The first parameter, tstparse in this example, specifies the input
data set, userid.TSTPARSE.ASM.

Most of the time High Level Assembler error messages are directed
to the TSO terminal (or, if you are running HLASM in TSO in batch
to the SYSTSPRT data set) -

hlasm tstparse
 RUNNING HIGH LEVEL ASSEMBLER
 000018 0000 0000            00000    13          LA    R5,WASIZE
Load the size of the work area
 ASMA044E Undefined symbol - R5
 ASMA029E Incorrect register specification - R5
 ASMA435I Record 8 in XXXXXX.TSTPARSE.ASM on volume: XXXX15
 Assembler Done      1 Statement  Flagged /   8 was Highest Severity
Code
 ASMA90 RC = 8

However, the error messages can be directed to a data set.

The command can create three other output data sets: a data set
containing the Assembler listing, a data set containing the
"object" output of the Assembler, and a data set containing
associated data (ADATA) output.  When the command specifies a
regular input data set, these data sets default to
userid.dsn.ASMLIST, userid.dsn.OBJ, and userid.dsn.ADATA.  You
must request ADATA output by specifying the ADATA option in the
HLASM command line.

You can specify a fully qualified input data set by enclosing the
name in quotation marks: 'prod.pgms(tstparse)'.  When you specify
a fully qualified data set name, the HLASM command will prompt
the user for the print and object data set names, or they can be
specified in the HLASM command line.  For example -

hlasm 'xxxxxx.tstparse.asm'
 ENTER NAME OF DATA SET TO CONTAIN THE ASSEMBLER LISTING -
tsthlasm
 ENTER NAME OF DATA SET TO CONTAIN THE ASSEMBLER OBJECT OUTPUT -
tsthlasm
 RUNNING HIGH LEVEL ASSEMBLER
 Assembler Done No Statements Flagged
 ASMA90 RC = 0

or

hlasm 'xxxxxx.tstparse.asm' print(tsthlasm) object(tsthlasm)
 RUNNING HIGH LEVEL ASSEMBLER
 Assembler Done No Statements Flagged
 ASMA90 RC = 0

You can also specify a data set as just a member name enclosed in
parenthesis: (member).  When you just specify a member, HLASM
uses data set userid.suffix(member).

hlasm (member)

is equivalent to

hlasm 'userid.asm(member)' object('userid.obj(member)')
print('userid.asmlist(member)')

You specify the member name by itself with a keyword like
print((member)) to use data set USERID.ASMLIST(MEMBER).

Assembler Options

The High Level Assembler accepts a large number of options
described in the HLASM Programmer's Guide.  You can specify most
of these options in the HLASM command line.

hlasm dataset option option ...

****************** Running HLASM while in ISPF edit ********************

The HLASM command processor is a TSO line mode command.  TSO line
mode commands and ISPF are not exactly compatible.  However,
within these linmitations HLASM within ISPF works reasonably
well.

You can run HLASM while you are in ISPF EDIT from the command line.
For example -

  File  Edit  Edit_Settings  Menu  Utilities  Compilers  Test  Help
----------------------------------------------------------------------
EDIT       XXXXXX.HLASM.TEST.ASM                           Columns 000
Command ===> save;tso hlasm hlasm.test                        Scroll =
****** ***************************** Top of Data *********************
050000 HLASM    TITLE '                   S T E V E   M Y E R S ''   H
100000                   T S O   C O M M A N D'
150000 ***************************************************************
200000 *
250000 * Title - HLASM
300000 *
350000 * Function / Operation - HLASM is a TSO command to run the High

Here the terminal operator chose to combine the ISPF SAVE command
and run HLASM after ISPF completed the SAVE command.  The
assembly is the HLASM command in this data set.

After the assembly completed here is the bottom part of the screen.

465000 *     fully qualified names.  Fully qualified data set names ar
470000 *     surrounded by quotation marks; unqualifieed dataset names
475000 *     simple character string.  'Sys1.maclib' is an example of
RUNNING HIGH LEVEL ASSEMBLER
Assembler Done HLASM No Statements Flagged
ASMA90 RC = 0
***

There is enough to see whether the assembly completed OK or not.
The terminal operator can easily display the assembly listing in a
second ISPF window and correct any errors.
