#!/bin/bash
#-----------------------------------------------------------------------
# (c) copyright Enrico Sorichetti, 2005-2011
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
function xUse() {
	echo "${myself} - flags : "
	echo "${myself} -    -h : this  help"
	xleave
}

#-----------------------------------------------------------------------
function xClear() {
	echo -ne "\033[2J"
}

#-----------------------------------------------------------------------
function xStart() {
#	echo "${myself} - v1.1 copyright Enrico Sorichetti, 2005-2011."
	echo "${myself} - Started `date +%H:%M:%S`"
}

#-----------------------------------------------------------------------
function xLeave() {
	echo "${myself} - Ended `date +%H:%M:%S`"
	if  [ "${1}". == "." ] ; then
		exit 0
	else
		exit ${1}
	fi
}

#-----------------------------------------------------------------------
function xPause() {
	echo "${myself} - Press (ENTER) to continue"
	read z
}

#-----------------------------------------------------------------------
function xCancel() {
	echo "${myself} - - - - - - - - - - - - - - - - - - - - - - - - - - -"
	echo "${myself} - ${1}"
	echo "${myself} - - - - - - - - - - - - - - - - - - - - - - - - - - -"
	xLeave 8
}

#-----------------------------------------------------------------------
#
function xLog() {
	echo "${myself} - ${1}"
}

#-----------------------------------------------------------------------
function xYesNo() {
	for ((;;)) ; do
		echo "${myself} - Enter [y](ENTER) to continue"
		echo "${myself} -       [n/q]      to Exit"
		read z
		if  [ "${z}". == "." ] ; then
			return 0
		fi
		z=${z:0:1}
		z="`echo -E "${z}" | tr [:upper:] [:lower:]`"
		case ${z} in
			y) return 0
				;;
			n) return 1
				;;
			q) return 1
				;;
		esac
	done
}

#-----------------------------------------------------------------------
function xLower() {
	if  [ "${1}". == "." ] ; then
		RESULT=""
	else
		RESULT=`echo -E "${1}" | tr [:upper:] [:lower:]`
	fi
}

#-----------------------------------------------------------------------

myself="`basename ${0}`"
myself="${myself%%.*}"
system="`uname -s`"

xStart

source="`pwd`"
prefix="`dirname  ${source}`"
prefix="`dirname  ${prefix}`"

toolnm="`basename ${source}`"
toolnm="${toolnm%%-*}"

if  ! test -f "configure" ; then
    xLog "configure not found for \"${toolnm}\" "
    exit
fi

if  [ "`grep <configure disable-nls`". != "." ] ; then
    DISABLE_NLS="--disable-nls "
else
    DISABLE_NLS=""
fi

if  [ "`grep <configure with-pic`". != "." ] ; then
    WITH_PIC="--with-pic "
else
    WITH_PIC=""
fi

if  [ "`grep <configure without-gettext`". != "." ] ; then
    WITHOUT_GETTEXT"--without-gettext "
else
    WITHOUT_GETTEXT=""
fi

IF_M4=""
if  [ "${toolnm}". == "m4". ] ; then
    IF_M4="--enable-c++ "
fi

IF_SED=""
if  [ "${toolnm}". == "sed". ] ; then
    IF_SED="--disable-i18n "
fi

IF_GREP=""
if  [ "${toolnm}". == "grep". ] ; then
    IF_GREP="--disable-perl-regexp "
fi

IF_GETTEXT=""
if  [ "${toolnm}". == "gettext". ] ; then
    IF_GETTEXT="${IF_GETTEXT}--without-emacs "
    IF_GETTEXT="${IF_GETTEXT}--without-git "
    IF_GETTEXT="${IF_GETTEXT}--disable-java "
    IF_GETTEXT="${IF_GETTEXT}--disable-native-java "
fi

IF_ENSCRIPT=""
if  [ "${toolnm}". == "enscript". ] ; then
    IF_ENSCRIPT="${IF_ENSCRIPT}--with-included-gettext "
fi

IF_WGET=""
if  [ "${toolnm}". == "wget". ] ; then
    IF_WGET="${IF_WGET}--without-ssl "
fi

IF_NANO=""
if  [ "${toolnm}". == "nano". ] ; then
    IF_NANO="--enable-color --enable-extra --enable-multibuffer --enable-nanorc "
fi

GCC="CC=gcc"
GCC=""
GXX="CC=gcc"
GXX=""

CFLAGS=""
CFLAGS="CFLAGS=-O3 "

CXXFLAGS=""
CXXFLAGS="CXXFLAGS=-O3 "

LDFLAGS="LDFLAGS=-arch x86_64 "
LDFLAGS=""

xLog "Ready to run ${source}/Configure..."
xLog ">>>>./configure --prefix=\"${prefix}\" \\"
xLog ">>>>  ${DISABLE_NLS}${WITHOUT_GETTEXT}${WITH_PIC}\\"
xLog ">>>>  ${IF_PKG}${IF_M4}${IF_SED}${IF_GREP}${IF_ENSCRIPT}${IF_WGET}${IF_NANO}\\"
xLog ">>>>  ${GCC}${GXX}\\"
xLog ">>>>  ${CFLAGS}${CXXFLAGS}${LDFLAGS}"

xYesNo
ynRC=$?
if  [ ${ynRC} == 1 ] ; then
    NORUN="echo"
else
    NORUN=""
fi

RC=0
${NORUN}    ./configure --prefix="${prefix}" \
            ${DISABLE_NLS}${WITHOUT_GETTEXT}${WITH_PIC}\
            ${IF_M4}${IF_SED}${IF_GREP}${IF_GETTEXT}${IF_ENSCRIPT}${IF_WGET}\
            ${GCC}${GXX}\
            ${CFLAGS}${CXXFLAGS}${LDFLAGS}

RC=$?

if  [ ${RC} != 0 ] ; then
 xCancel "./configure script failed for \"${toolnm}\" "
fi

