{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011832000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1704794, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE358.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1704794, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1704794, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE358.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x1b\\x06'", "DS1TRBAL": "b'\\x83Z'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\xa3\\x00\\x00\\x02\\xa4\\x00\\x0c\\x00\\x1c'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04?\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\x10\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf3@@@'", "ispf": {"version": "04.63", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:10:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-463"}, "text": "REGULAR CBT TAPE - VERSION 463    FILE:  358\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT463.FILE358\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 21 MEMBERS COUNTED; CUMULATIVE SIZE IS 15,696 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   10/20/03    00:10:03    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x03)?\\x01\\x03)?\\x00\\x00\\x00\\x1a\\x00\\x1a\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:00:33", "lines": 26, "newlines": 26, "modlines": 0, "user": "SBGOLOB"}, "text": "Hi Sam,\n\nI'm a heavy user of a lot of CBT products.  I've installed the\nSOUTSYS product but it was a real pain because there were many\npieces missing.  I called and received all the missing pieces\nfrom the original writer and have repackaged it.  I have\nsuccessfully installed it on OS/390 2.9 and z/OS 1.4.  It\nactually does a fair job of sysout archival.  My client and I\nwere both pleasantly surprised that it worked well under z/OS\n1.4.\n\nSo, if it helps, here's the repackaged product.  It would be\ngreat if someone could look at it and make sure it looks right to\nensure that it was packaged correctly and retained proper\nnotification of 'ownership', etc.\n\nEmail, IM or call me if you have any questions.\n\nThanks,\n\nKevin Mitts\nkevin.mitts@mindspring.com\n913-515-0638 cell\nKevMitts - AIM\nKevin Mitts - MSN IM\nkevinmitts - Yahoo IM\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$CHANGE": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x03\\x11\\x1f\\x01\\x03\\x11\\x1f\\x10U\\x002\\x002\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-04-21T00:00:00", "modifydate": "2003-04-21T10:55:37", "lines": 50, "newlines": 50, "modlines": 0, "user": "BCIKLM"}, "text": " $$CHANGE\n\n     THIS MEMBER DESCRIBES THE CHANGES TO THE  'SOUTSYS'\n     PRODUCTION BROWSE SERVICE ROUTINES (4.S).\n\n\n\n    APR  2003  MODIFIED INSTALLATION PROCESS.\n\n\n\n    SEPT 1986  ADDED CODE TO SOUTSUB TO DETECT THAT ALL THE DATA IS\n               NOT WRITTEN TO THE ACTIVE FILE. THIS HAPPENS BECAUSE\n               OF BLOCKING OF THE ACTIVE FILE. A WARNING MESSAGE\n               WILL BE PLACED ON THE OUTPUT FROM 4.S STATING THAT\n               ALL THE DATA WAS NOT RETRIEVED AND TO RUN THE FLUSH\n               PROGRAM OR WAIT FOR ANOTHER JOB TO WRITE.\n\n\n\n    SEPT 1986  ADDED CODE TO SOUTSUB TO PUT MESSAGES TO THE\n               3480 TAPE DRIVES DURING SEARCHES.\n               (USES THE DEVTTYPE AND MSGDISP MVS MACROS)\n\n\n               (NOTE: MEMBER SOUTSUBO  DOES NOT CONTAIN THE 3480 CODE)\n\n\n\n\n    NOV  1986  ADDED CODE TO SOUTCLN TO DELETE ALL VSAM JOURNAL RECORDS\n               THAT POINT TO THE ACTIVE FILE. IF A //DELACT DD CARD IS\n               PRESENT, THE RECORDS ARE DELETED.\n               THIS WAS NEEDED BECAUSE THE JOURNAL WAS OUT OF SYNC WITH\n               THE ACTIVE BECAUSE SOMEONE STARTED DISKWTR WITHOUT FIRST\n               RUNNING SAVEWTR. THE ACTIVE FILE WAS OVERLAID AND THEREFORE\n               THERE WERE RECORDS IN THE JOURNAL POINTING TO THE ACTIVE\n               FOR RECORDS THAT WERE NOT REALLY THERE. ALSO, CLEANWTR\n               NEVER DELETED ACTIVE RECORDS BECAUSE THEY NEVER MET THE\n               DATE RETENTION PERIOD.\n                TO USE THIS FEATURE:\n                    1)  RUN SAVEWTR FIRST AND DO NOT RE-START DISKWTR.\n                        THIS WILL CLEAR OUT THE CURRENT ACTIVE FILE.\n                    2)  ADD A //DELACT DD  CARD TO THE CLEANWTR PROC.\n                        (DSN=&&X,DISP=(,DELETE),UNIT=SYSDA,SPACE=(TRK,0)\n                    3)  RUN CLEANWTR\n                        THIS WILL DELETE ANY VSAM RECORD STILL POINTING TO\n                        THE ACTIVE FILE.\n                        SAVEWTR AND DISKWTR SHOULD THEN RESTART\n                    4)  TAKE OUT THE //DELACT DD CARD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$DESCR": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x03\\x11\\x1f\\x01\\x03\\x11\\x1f\\x10X\\x00\\t\\x00\\t\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-04-21T00:00:00", "modifydate": "2003-04-21T10:58:33", "lines": 9, "newlines": 9, "modlines": 0, "user": "BCIKLM"}, "text": "Basically, the system uses an exit to the external writer to write\nall sysout for the class chosen to a sequential disk file.  It keeps\ntrack of where every file starts in a Vsam file, and when the  seq.\ndisk file is full, copies it to a different file on disk and\ncompresses it.  After a period of time set by the user, each\ncompressed seq. file is modded onto tape.  ISPF panels are used to\nlook at any sysout in the system.  Data on tape can be printed to\nheld output, or looked at online, except you have to wait for the\ntape mount.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$INFO": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\x06\\x00\\xfb\\x00\\xfb\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:06:00", "lines": 251, "newlines": 251, "modlines": 0, "user": "BCIKLM"}, "text": " $$INFO\n\n     THIS MEMBER DESCRIBES THE FUNCTION AND USE OF THE 'SOUTSYS'\n     PRODUCTION BROWSE SERVICE ROUTINES (4.S).\n\n\n\n\n\n     FUNCTION: THESE ROUTINES ALLOW AN INSTALLATION TO DIRECT\n               THE OUTPUT FROM PRODUCTION BATCH JOBS TO A DISK\n               DATASET AND RETRIEVE THE JOB OUTPUT ON DEMAND\n               VIA TSO USING SPF FULL-SCREEN BROWSE OR OPTIONALLY\n               SUBMIT A BATCH JOB TO RETRIEVE THE DATA.\n               ADDITIONALLY, IT PROVIDES FOR ARCHIVAL OF THE\n               SYSOUT DATA FOR A USER DEFINED PERIOD OF TIME\n               VIA TAPE GENERATION DATASETS.\n\n\n\n\n\n     THIS FILE IS INPUT TO IEBUPDTE 'AS IS'.  TO USE, CREATE A\n     PARTITIONED DATASET (FIXED-80) AND EXECUTE IEBUPDTE\n     TO CREATE THE MEMBERS DEFINED BELOW.\n\n               DISKWTR  THIS IS A 'STARTABLE' PROCEDURE THAT\n                        EXECUTES THE JES2 'EXTERNAL WTR' ROUTINE.\n                        OUTPUT IS DIRECTED TO A DISK DATASET\n                        (USER DEFINED) TO ALLOW THE SYSOUT\n                        TO BE AVAILABLE ON DEMAND BY TSO USERS.\n                        IT ALSO DETERMINES IF THE ACTIVE DATASET\n                        IS MORE THAN 80% FULL AND AUTOMATICALLY\n                        STOPS THE DISKWTR PROC AND\n                        STARTS THE SAVEWTR PROC\n\n               FLUSH    THIS IS A 'STARTABLE' PROCEDURE THAT CAN BE\n                        USED TO FILL THE LAST BLOCK OF DATA ON THE\n                        ACTIVE FILE WHILE DISKWTR IS RUNNING.\n                        1) BECAUSE OF THE BLKSIZE OF THE ACTIVE FILE,\n                           THE LAST BLOCK IS NOT WRITTEN TO THE ACTIVE\n                           FILE UNTIL IT IS FULL\n                        2) IF THAT JOB IS SELECTED IN \"4.S\" THE WHOLE\n                           JOB IS NOT RETRIEVED.\n                        3) RUN \"FLUSH\" TO FILL THE LAST BLOCK\n                        4) RE-SELECT THE JOB IN 4.S\n\n\n               SAVEWTR  THIS IS A STARTABLE PROCEDURE THAT WILL:\n                        1) INSURES THAT THE DISKWTR IS INACTIVE\n                        2) COPIES THE ACTIVE DISK DATASET TO:\n                           TAPE OR DISK. IF COPIED TO DISK, OLD\n                           DISK DATASETS ARE COPIED TO TAPE.\n                        3) REFORMATS THE DISK-DATASET WHEN COMPLETE\n                        3) RESTARTS THE DISKWTR ROUTINE\n                        4) GENERATES A REPORT LISTING THE JOBS,\n                           STEPS, RETCODES, AND TAPE VOLUMES FOR\n                           THE JOBS COPIED TO TAPE.\n                   NOTE: ALWAYS START DISKWTR BY STARTING SAVEWTR\n                         (SAVEWTR WILL START DISKWTR)\n\n              CLEANWTR  THIS IS A STARTABLE PROCEDURE THAT WILL:\n                        1) INSURE THAT THE DISKWTR IS INACTIVE\n                        2) DELETES OLD VSAM RECORDS FROM THE VSAM\n                           JOURNAL.\n                        3) DELETES VSAM RECORDS THAT POINT TO NON-\n                           EXISTING SYSOUT DATASETS/TAPES.\n                           (IE: IF YOU WOULD UNCATALOG A SYSOUT TAPE\n                                BEFORE RUNNING THIS PROC)\n                        4) DYNAMICALLY DELETES EMPTY DAILY/ARCHIVE\n                           DATASETS\n                        5) GENERATES A REPORT OF LARGE SYSOUT REPORTS.\n                        6) REORGS THE VSAM JOURNAL\n                        7) WILL OPTIONALLY DELETE ALL VSAM RECORDS POINTING\n                           TO THE ACTIVE FILE (NEEDED IF DISKWTR WAS\n                           STARTED WITHOUT RUNNING SAVEWTR FIRST)\n                           A \"//DELACT DD\" CARD IS NEEDED\n\n               SOUTWTR  IS THE ROUTINE EXECUTED BY THE 'SAVEWTR' PROC.\n                        IT IS USED TO PREFORM THE FOLLOWING:\n                          1) FORMAT A NEW ACTIVE DISK DATASET\n                          2) REBUILD THE VSAM JOURNAL IF IT IS\n                             DESTROYED\n                          3) READ AN INPUT DATASET AND CREATE A NEW\n                             TAPE AND UPDATE THE JOURNAL\n                             (IE: USED FOR A SNAPPED TAPE)\n                          4) COPY THE ACTIVE FILE TO A DAILY TAPE\n                          5) COPY THE ACTIVE FILE TO A DAILY DISK\n                             AND COPY OLD DAILY DISKS TO AN ARCHIVE\n                             TAPE.\n\n               SOUTSEP  IS THE EXTERNAL WRITER JOB-SEPARATOR ROUTINE.\n                        IT'S FUNCTION IS TO PLACE UNIQUE 'SOUT\n                        SEPARATORS' IN THE OUTPUT FILE TO DELIMIT JOB\n                        OUTPUT AND TO CREATE A VSAM \"JOURNAL\" RECORD\n                        FOR EACH. IT ALSO SENSES WHEN THE ACTIVE\n                        FILE IS 80% FULL AND STARTS THE SAVEWTR\n                        JOB. IF YOU ARE NOT USING SAVEWTR AS THE\n                        STARTED TASKS NAME, MODIFY THIS PROGRAM\n                        TO POINT TO THE PROPER NAME.\n\n               SOUTSUB  IS CALLED FROM THE TSO PROGRAM (CMNFS00) OR\n                        FROM THE BATCH SOUTPRT PROGRAM. IT IS USED\n                        TO OBTAIN THE RECORDS FROM THE VSAM JOURNAL\n                        AND/OR TO RETRIEVE SPECIFIED SYSOUT LISTINGS.\n\n               SOUTCALL USED BY THE SPF PROGRAM (CMNFS00) TO\n                        AUTHORIZE A TSO USER FOR A TAPE MOUNT.\n\n               SOUTCLN  USED BY THE CLEANWTR PROC TO CLEAN UP\n                        OLD VSAM JOURNAL RECORDS AND DELETE EMPTY\n                        DATASETS. OPTIONALLY REPORT ON LARGE\n                        SYSOUT REPORTS.\n\n               SOUTCPR  IS THE COMPRESSION ROUTINE USED TO COMPRESS\n                        DATA WHEN COPYING FROM THE ACTIVE TO THE\n                        DAILY DISK OR TAPE DATASETS. IT ALSO PERFORMS\n                        THE DE-COMPRESSION FOR BROWSING.\n\n               SOUTDATE IS THE ROUTINE USED TO GET A DATE BASED\n                        ON A NUMBER OF DAYS YOU WANT TO BACKUP.\n\n               SOUTPRT  IS USED WHEN A USER SUBMITS A BATCH JOB\n                        TO PRINT A SYSOUT LISTING.\n\n               SOUTXIT  IS USED BY THE SAVEWTR PROGRAM TO REPORT\n                        ON JOBS CONTAINED IN THE ACTIVE DISK-DATASET.\n\n               SOUTCVT  IS THE PROGRAM TO CONVERT YOUR OLD JOURNAL\n                        DATASETS TO THE NEW VSAM RECORD FORMAT.\n                        (ONLY USED IF YOU ARE CONVERTING)\n\n               LOCINDEX IS A ROUTINE EXTRACTED FROM THE LISTSPC\n                        PROGRAM. IT IS USED IN SOUTCLN AND SOUTWTR\n                        TO OBTAIN DATASET NAMES IN THE SOUT SYSTEM.\n\n               CMNFS00,CMNFS00A,CMNFS00B,CMNFS00C,CMNFS00D,CMNFS00E\n               CMNFS01,CMNFS02,CMNFS03\n                        PANELS USED IN THE SPF 4.S SYSTEM\n                        THEY SHOULD BE ADDED TO THE SPF PANELS DATASET.\n\n               CMNFSKEL IS THE SKELETON JCL TO BE ADDED TO THE SPF\n                        SKELETON LIBRARY AS MEMBER CMNFS00.\n\n               CMNFS00@ IS THE TSO/ISPF PROGRAM THAT IS INVOKED\n                        UNDER THE 4.S SPF SESSION. IT'S FUNCTION\n                        IS TO LIST ALL THE ENTRIES FOR A JOB (SPF TABLE)\n                        OR TO LOCATE A NAMED JOB IN THE SOUT SUBSYSTEM\n                        DATASETS AND COPY IT TO A USER DATASET.  ONCE\n                        COPIED, THE SPF BROWSE ROUTINE IS CALLED\n                        TO ALLOW FULL-SCREEN BROWSING OF THE SYSOUT.\n                        IT CAN ALSO SUBMIT A BATCH JOB TO RETRIEVE\n                        THE SYSOUT REPORT.\n                        IT SOULD BE NAMED 'CMNFS00' IN YOUR LIBRARY.\n\n\n     INSTALLATION REQUIREMENTS:\n\n                 1) MODIFY THE SOUT SYSTEM SOURCE AS FOLLOWS:\n                      SOUTCALL- INCLUDE 'MVSGPSVC' NUMBER IF USERS\n                                ARE ALLOWED TO REQUEST TAPE MOUNTS\n                                FOR ARCHIVE TAPES (OR MAKE IT\n                                AUTHORIZED ANOTHER WAY).\n\n                      DISKWTR, SAVEWTR, CLEANWTR\n                                MODIFY THE PREFIX \"DD\" (SYS2.OPSWTR) TO\n                                YOUR STANDARDS. THIS IS USED AS A LOCK\n                                DATASET AND ALSO BY THE SOUTWTR AND\n                                SOUTCLN PROGRAMS AS A HIGH LEVEL PREFIX\n                                FOR OBTAINING DATASET NAMES.\n                                THE DISKWTR PROC MUST ALSO INCLUDE THE\n                                CLASS TO BE USED.\n\n                                (IN SAVEWTR, CHANGE //OLDPFX TO YOUR\n                                 OLD SOUTSYS PREFIX IF YOU USING THE\n                                 REBUILD OPTION AND ARE ALSO IN THE\n                                 CONVERSION PROCESS)\n\n                                (IN CLEANWTR, CHANGE //OLDPFX TO YOUR\n                                 OLD SOUTSYS PREFIX IF YOU ARE\n                                 CONVERTING. ELSE DELETE IT)\n\n                                (IN CLEANWTR,AND SAVEWTR, THERE ARE\n                                 START AND STOP COMMANDS FOR DISKWTR\n                                 AND SAVEWTR. IF YOU ARE NOT USING\n                                 THESE NAMES FOR YOU START TASKS,\n                                 MAKE THE APPROPRIATE CHANGE.)\n\n                      SPF PANEL CMNFS00\n                                MODIFY CMNFSWTR = SYS2.OPSWTR  TO\n                                YOUR STANDARDS\n                                MODIFY CMNFSWTO = SYS2.OPSTAPE TO\n                                POINT TO YOUR OLD SYSOUT PREFIX\n                                (ONLY USED IF YOU ARE CONVERTING;\n                                 DELETE IF YOU ARE A NEW USER)\n\n                 2) ASSEMBLE AND LINK THE PROGRAMS INTO LINKLIST DS.\n                    ASSEMBLE AND LINK CMNFS00 INTO YOUR SPF LOAD DS.\n                    (APPLY OPTIONAL XWTRZAP IF YOU WISH)\n\n                 3) CREATE THE 'ACTIVE' DISKWTR DATASET ON A\n                    RESIDENT VOLUME (ABOUT 50-100 CYLS).\n                    **MUST** BE ON A CYL BOUNDRY\n                    USE JOB \"FORMAT\"\n\n                 4) CREATE THE 'JOURNAL' VSAM  DATASET.\n                    ESTIMATE THE NUMBER OF JOBS YOU MIGHT HOLD\n                    IN THE SYSTEM AND CHANGE THE RECORD COUNT\n                    IN JOB 'INITJRNL'. THERE MUST BE AT LEAST ONE\n                    ENTRY IN THE FILE. THIS JOB WILL CREATE IT.\n                    IT WILL BE DELETED IN THE FIRST RUN OF CLEANWTR.\n\n                 5) INSTALL THE 'DISKWTR', 'SAVEWTR' AND 'CLEANWTR'\n                    PROCS IN IN 'SYS1.PROCLIB' AND START DISKWTR.\n\n                 6) INSTALL THE NINE PANELS INTO THE ISPPLIB DATASET\n                    AND UPDATE THE PRIMARY OPTION MENU AS WELL.\n\n                 7) INSTALL THE CMNFSKEL IN THE SPF ISPSLIB DATASET\n                    AS MEMBER CMNFS00.\n\n                    ----- INSTALLED -----\n\n                 9) START THE \"DISKWTR\" STARTED TASK\n                10) PRODUCE SYSOUT (CORRECT MSGCLASS) TO GENERATE\n                    JOB(S) IN THE DISKWTR CLASS.\n                11) USE SPF '4.S' TO BROWSE SELECTED JOBS (AND/OR\n                    NON-MSGCLASS SYSOUT (HELP IS AVAILABLE).\n                12) DETERMINE IF YOU WANT TO KEEP SOME REPORTS\n                    ONLINE OR ALWAYS GO TO TAPE. UPDATE THE\n                    SAVEWTR PROC PARMS TO REFLECT YOUR CHOICE.\n                13) START THE 'SAVEWTR' PROC - \"S SAVEWTR\"\n                    TO BUILD THE FIRST DAILY DATASET.\n                    IT WILL RE-START DISKWTR.\n                14) RECOMMENDED ONCE A WEEK, RUN THE CLEANWTR\n                    PROC TO DELETE OLD VSAM RECORDS AND OLD\n                    DATASETS AND TO REORG THE JOURNAL FILE.\n                15) FROM THIS POINT ON, ALWAYS START SAVEWTR\n                    TO START DISKWTR. (NEVER START DISKWTR)\n                    AT IPL TIME, START SAVEWTR.\n                    (UPDATE YOUR \"IPL\" MEMBER IN AUTO TO START SAVEWTR\n\n\n             NOTE:  RECOMMENDED TO PLACE SOUTCALL AND SOUTSEP INTO\n                    YOUR IEALPA00 MEMBER OF SYS1.PARMLIB.\n                    THIS WILL ELIMINATE MULTIPLE LOADINGS OF SOUTSEP\n                    FOR EACH REPORT WRITTEN AND WILL ALSO ALLOW ANY\n                    USER MOUNT AUTHORIZATION WHEN USING 4.S.\n\n\n                    TEST THE ROUTINES ---- GOOD LUCK\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$INSTAL": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\x06\\x00v\\x00v\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:06:00", "lines": 118, "newlines": 118, "modlines": 0, "user": "BCIKLM"}, "text": "Installation Notes\n-----------------------------------------------------------------------\n\n 1 - SOUTSYS load modules should be in a LNKLST dataset.\n 2 - Two SOUTSYS load modules (SOUTSEP & SOUTCALL) must reside in MLPA.\n 3 - SOUTSYS requires a generic SVC residing in LPALIB.  This module\n     is assembled and linked in the last step of member $ASM\n 4 - A JES2 output class is requred for SOUTSYS processing.  Default\n     is sysout class C.\n 5 - After the initial install, DISKWTR must NEVER be manually started\n     or data may be lost.  Instead, start SAVEWTR and provide automation\n     to start DISKWTR once SAVEWTR has ended.\n\nTasks to be completed to install and implement SOUTSYS\n-----------------------------------------------------------------------\n\n 1 - Issue the $RECEIVE REXX exec to create and populate SOUTSYS\n     target libraries.  Review the $RECEIVE member for more information.\n\n       TSO EXEC 'soutsys.install.library($RECEIVE)' EXEC\n\n     After library population, you will be placed in ISPF browse on a\n     few members of the INSTALL library\n\n 2 - Make changes to SOUTSYS assembler source (in hlq.ASM) if needed\n     o Modify program \"SOUTCALL\" to point to your generic SVC\n       (MVSGPSVC). Default is SVC 252.\n\n     o Modify program \"SOUTSEP\" to modify JCL procedure names if\n       required.\n       - When the ACTIVE file is 80% full, SOUTSEP will stop \"DISKWTR\"\n         and start SAVEWTR.  Change these names if required\n\n     o Modify program \"CMNFS00@\" to set the default number of days to\n       display when doing a list (Default is 3 days).\n\n     o If your system does not support EXPDT=99000 (Catalog control)\n       then modify program SOUTWTR:\n       - Find string \"TAPEXPDT\" (3 occurences - one is a comment)\n       - Uncomment the last 2 occurences to allow for dynamic\n         allocation\n\n 3 - Modify SOUTSYS JCL Procedures (in hlq.PROCLIB) if needed\n     o Modify DISKWTR procedure\n       - Modify PREFIX= parm to set your selected dataset prefix\n       - Modify PARM= for the first step to set your JES2 output class\n         to be used by DISKWTR for offload\n\n     o Modify SAVEWTR procedure\n       - Modify PREFIX= to set your selected dataset prefix\n       - Modify DAILY= parm to point daily to tape or disk output\n       - Modify DAYS= parm to set the number of days to keep online if\n         DAILY=DISK\n\n     o Modify CLEANWTR procedure\n       - Modify PREFIX= to set your selected dataset prefix\n       - Modify PARM= to set the number of days to keep records\n       - Modify PARM= to set the number of lines to report on for large\n         outputs\n\n 4 - Modify SOUTSYS ISPPLIB member CMNFS00 to enter your selected\n     dataset prefix for variable &CMNFSWTR\n\n 5 - Modify and submit member $ASM to assemble and link-edit SOUTSYS\n     load modules.  Return code of 04 is acceptable for the assembly\n     steps for modules SOUTSUB and LOCINDEX.\n\n 6 - Copy all members of hlq.PROCLIB to a valid system PROCLIB\n\n 7 - Modify and submit member $ACTIVE to create a SOUTSYS ACTIVE file.\n     Expect a D37 abend on the second step of this job.\n\n 8 - Modify and submit member $JOURNAL to create a SOUTSYS JOURNAL\n     file\n\n 9 - Provide security for STC's and datasets\n     o Add user SOUTSYS\n     o Add STARTED profiles for DISKWTR, SAVEWTR and CLEANWTR\n     o Add dataset profile for your selected dataset prefix\n\n10 - Copy members SOUTSEP and SOUTCALL from the SOUTSYS load library\n     into 'SYS1.LINKLIB' or another load library cataloged in the\n     master catalog\n\n11 - Copy member ISPFSOUT to a REXX library within the user SYSEXEC\n     concatenation.  Modify if required.\n\n12 - Add the following ISPF panel command to any ISPF panels to gain\n     access to SOUTSYS via ISPF.\n\n       SS,'CMD(%ISPFSOUT) SCRNAME(SOUTSYS)'\n\n13 - Add SOUTSEP and SOUTCALL to MLPA list in SYS1.PARMLIB(IEALPA00)\n     See SOUTSYS INSTALL member IEALPA00 for a sample.\n\n14 - Add the following statement to 'SYS1.PARMLIB(IEASVC00)'.  Change\n     252 and IGC0025B if a different SVC was used.\n\n       SVCPARM 252,REPLACE,TYPE(3),EPNAME(IGC0025B)      /* SOUTSYS */\n\n15 - IPL\n\n16 - Manually start DISKWTR (S DISKWTR).  This will initialize the\n     environment.\n\n17 - Test\n     o In SDSF (or a similar tool), move output to the designated\n       SOUTSYS class and monitor the system log to ensure that\n       SOUTSYS has captured the output.  You will simply see messages\n       similar to:\n\n         $HASP250 INIT PURGED -- (JOB KEY WAS B94E1EBB)\n\n18 - Add automation to start DISKWTR once SAVEWTR has ended.\n\n19 - Add 'S SAVEWTR' to SYS1.PARMLIB(COMMND00) to start SAVEWTR with\n     every IPL\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NEWDOC": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\x06\\x01\\xed\\x01\\xed\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:06:00", "lines": 493, "newlines": 493, "modlines": 0, "user": "BCIKLM"}, "text": "\n\n********************   WHATS NEW  *************************\n\n THIS SECTION DESCRIBES THE THE CHANGES THAT HAVE BEEN MADE TO THE OLD\n PRODUCTION BROWSE SERVICE ROUTINES (4.S).\n\n\n 1) THE MULTIPLE DAILY/ARCHIVE JOURNAL DATASETS HAVE BEEN CONVERTED\n    TO ONE VSAM JOURNAL: THE RECORD IS 42 BYTES AND IS IN THE FOLLOWING\n    FORMAT:\n\n    BYTES      DESCRIPTION\n    -----      -------------------------------------------------------\n    1-8        JOB NAME (1 TO 8 CHARACTERS)\n\n    9-13       DATE - IN PACKED REVERSED FORMAT (PL5)\n               THE DATE IS REVERSED (IE: PL5'0999999999' MINUS DATE) SO\n               THAT THE RECORD IS STORED IN THE VSAM FILE WITH THE\n               LATEST RUN OF THE JOB THE FIRST RECORD READ. (LIFO)\n               BEFORE PACKING, THE DATE IS IN THE FORMAT: YYYYMMDD\n               THE FULL YEAR IS USED FOR YEAR 2000 COMPATABILITY.\n\n    14-17      TIME - IN PACKED REVERSED FORMAT (PL4)\n               THE TIME IS REVERSED (IE: PL4'09999999' MINUS TIME) SO\n               THAT THE RECORD IS STORED IN THE VSAM FILE WITH THE\n               LATEST RUN OF THE JOB THE FIRST RECORD READ. (LIFO)\n               BEFORE PACKING, THE TIME IS IN THE FORMAT: HHMMSS\n\n    18-25      JOB NUMBER IN THE FORMAT: 99999JOB , 99999STC , 99999TSU\n\n    26         MSGCLASS OF THE JOB WHEN WRITTEN TO DISKWTR\n\n    27-29      TTR - THIS IS THE RELATIVE TTR CALCULATED WHEN THE\n               SEPERATOR RECORD IS WRITTEN TO THE ACTIVE OR DAILY DISK\n               DATASETS. IT IS SET TO ZERO WHEN THE DATA IS ON TAPE.\n\n    30         A ONE BYTE INDICATOR OF THE DAY OF THE WEEK WHEN THE JOB\n               WAS ADDED TO THE DISKWTR SYSTEM (X'00'-MON; X'06'-SUN)\n\n    31-34      NUMBER OF LINES IN THE SYSOUT REPORT. (PL4). IT IS SET\n               TO ZERO WHEN THE RECORD IS FIRST WRITTEN ON THE ACTIVE\n               FILE (WILL SHOW UP IN 4.S AS ?) AND IS CALCULATED WHEN\n               SAVEWTR MOVES THE DATA FROM THE ACTIVE TO THE DAILY FILE.\n               (IF CONVERTING, THE OLD SYSOUT REPORTS ALSO SHOW UP AS?).\n\n    35         IS THE DEVICE TYPE WHERE THE DATA EXISTS. IF ON TAPE,\n               IT IS SET TO 'T' OR IF ON DISK, IT IS THE DEVICE CODE\n               (IE: X'2E' - FOR A 3380)\n\n    36         IS THE DATASET TYPE USED TO EXPAND THE SYSOUT DATASET\n               NAME ALONG WITH THE STAMP(NEXT ENTRY).\n               A-ACTIVE; D-DAILY; R-ARCHIVE; O-OLD SYSTEM ARCHIVE\n\n    37-42      IS THE DATASET DATE/TIME STAMP (PL6). IT IS USED ALONG\n               WITH THE DATASET TYPE ABOVE TO CREATE THE DATASET NAME\n               WHERE THE SYSOUT REPORT EXISTS. THIS FIELD CONSISTS\n               OF THE DATE IN THE FORMAT: XYYMMDD WERE 'X' IS THE FIRST\n               CHARACTER OF THE FULL YEAR (IE: 1 FOR 1984 OR 2 FOR 2001)\n               THE TIME IS IN THE FORMAT: HHMM. THESE TWO FILES ARE\n               THEN PLACED TOGETHER AND PACKED (IE:XYYMMDDHHMM).\n               THIS FIELD IS SET TO ALL 9'S WHEN THE DATASET TYPE IS\n               THE ACTIVE FILE. IF CONVERTING ON ARE KEEPING THE OLD\n               SYSOUT GDG'S, THE FIRST 5 CHARACTERS ARE SET TO 9'S\n               AND THE GDG NUMBER AND VERSION NUMBER ARE ADDED AND THE\n               FIELD IS PACKED (IE: 99999001000  FOR  G0010V00)\n\n\n 2) AS STATED ABOVE, IN THE DATE DESCRIPTION, THIS SYSTEM IS\n    YEAR 2000 COMPATABLE.\n\n\n 3) A COMPRESSION ROUTINE HAS BEEN ADDED TO COMPRESS THE DATA WHEN IT\n    IS OFFLOADED FROM THE ACTIVE TO THE DAILY FILES. THE COMPRESSION\n    ROUTINE WILL COMPRESS ANY OCCURENCE OF 4 OR MORE OF THE SAME CHAR.\n    THIS ROUTINE WILL ALSO DE-COMPRESS THE DATA FOR BROWSING.\n    SEE THE SOUTCPR PROGRAM FOR MORE DETAIL OF THE COMPRESSION.\n\n\n 4) DATASET GDG'S ARE NO LONGER NEEDED. WHEN DATASETS ARE CREATED,\n    THEY ARE DATE/TIME STAMPED. THIS ELIMINATES THE NEED FOR SECOND\n    OR THIRD DATASET QUALIFIERS (IE: SYS2.OPSWTR AND SYS2.OPSTAPE)\n    USED FOR KEEPING DATA OVER LONG PERIODS OF TIME.\n\n\n 5) SAVEWTR NOW DOES ALL THE ALLOCATION OF DAILY AND ARCHIVE FILES\n    DYNAMICALLY. SOME OF THE OPTIONS OF SAVEWTR (SEE THE SAVEWTR\n    PROGRAM FOR COMPLETE DISCRIPTION) FOLLOW:\n\n      A) COPY THE ACTIVE FILE TO DAILY TAPES\n\n      B) COPY THE ACTIVE FILE TO DAILY DISKS\n         AND OFFLOAD OLD DAILY DISKS TO ARCHIVE TAPES.\n         (THIS IS CONTROLLED BY THE DAYS PARM FOR SOUTWTR)\n         WHEN COPYING TO DAILY DISKS, YOU CAN SPECIFY ANY DISK (SYSDA)\n         OR YOU CAN SPECIFY 1 TO 3 DESIGNATED PACKS. WHEN YOU SPECIFY\n         2 OR 3 PACKS, THE PACK WITH THE MOST SPACE WILL BE CHOOSEN.\n\n      C) FORMAT THE ACTIVE FILE\n\n      D) REBUILD THE VSAM INDEX. IT WILL READ ALL THE ACTIVE,DAILY\n         AND ARCHIVE DATASETS AND REBUILD THE VSAM RECORDS WHEN\n         SEPERATOR RECORDS ARE FOUND. A PARM PASSED REQUESTS A\n         REBUILD OF EVERYTHIHG OR SELECTED TYPES (IE: ONLY DAILY)\n\n      E) WILL READ AN INPUT TAPE AND CUT A NEW DAILY OR ARCHIVE TAPE\n         AND ALSO ADD OR UPDATE THE VSAM JOURNAL RECORDS. THIS OPTION\n         CAN BE USED IF A TAPE IS SNAPPED. YOU COULD USE DEBE TO COPY\n         THE BROKEN TAPE TO A NEW TAPE AND THEN USE THE NEW TAPE AS\n         INPUT INTO SAVEWTR.\n\n\n 6) WHEN SAVEWTR IS CREATING TAPES, EITHER DAILY OR ARCHIVE, IT WILL\n    ALWAYS MOD ON TO THE LAST TAPE USED. WHEN A TAPE IS CLOSE TO\n    BEING FULL, SAVEWTR WILL AUTOMATICALLY CLOSE THAT TAPE DATASET\n    AND START A NEW DATASET ON A FRESH TAPE. A FULL TAPE HAS BEEN\n    ESTIMATED AT APPROXIMATELY 2000 FT. THIS IS ENOUGH SLACK FOR\n    SHORT REELS. THIS LOGIC SHOULD ELIMINATE MULTI-REEL DAILY AND\n    ARCHIVE TAPES. BECAUSE OF THE DATE/TIME STAMPING OF DATASETS,\n    THE NEED FOR GDG'S , MULTIPLE DATASET PREFIXES AND THE NEED TO\n    RUN ARCHWTR AND ARCH HISTORY JOBS HAVE BEEN ELIMINATED.\n\n 7) THE SPF 4.S PANELS HAVE BEEN MODIFIED. THE TABLE OPTION NOW SHOWS\n    THE DAY(MON TUE ETC.), NUMBER OF LINES AND IF THE SYSOUT IS ONLINE\n    OR ON TAPE. TO PROVIDE FOR THESE FIELDS, THE DATASET NAME WAS TAKEN\n    OFF OF THE PANEL. IF YOU NEED TO SEE A DATASET NAME, ENTER \"Q\"\n    NEXT TO A SYSOUT REPORT AND THE JOURNAL AND DAILY/ARCHIVE DATASET\n    NAMES ARE SUPPLIED.\n\n    ALSO, OPTION 5.S (BATCH) HAS BEEN MERGED INTO 4.S. FROM ONE PANEL,\n    YOU CAN NOW SELECT A JOB FOR ONLINE BROWSE OR FOR BATCH SUBMISSION.\n\n\n 8) THIS SYSTEM IS NOT COMPATABLE WITH THE OLD SYSTEM.\n    (YOUR OLD SOUTXIT CAN STILL BE USED - SEE #10)\n    ALL OF THE PROGRAMS HAVE BEEN MODIFIED TO USE THE NEW\n    VSAM JOURNAL.\n\n    THE ONLY COMPATABILITY BETWEEN THIS SYSTEM AND THE OLD, IS THAT\n    THIS SYSTEM CAN READ THE OLD SYSOUT TAPES IN A NON-COMPRESSED STATE.\n    THIS WAS NEEDED SO THAT YOU WOULD NOT BE REQUIRED TO READ ALL OF\n    YOUR OLD DAILY/ARCHIVE TAPES THRU THE NEW SAVEWTR PROGRAM.\n    (EVEN THOUGH YOU CAN IF YOU WANT TO; USING THE FIXTAPE OPTION)\n    A CONVERT PROGRAM IS SUPPLIED THAT READS YOUR OLD JOURNAL DATASETS\n    AND CREATES VSAM RECORDS WITH A GDG FORMATTED DATE/ TIME\n    STAMP. (SEE EXPLANATION OF THE DATE/TIME STAMP IN #1 ABOVE)\n\n\n 9) A CLEAN PROGRAM (SOUTCLN) IS SUPPLIED WHICH WILL RUN THRU THE\n    VSAM JOURNAL AND PERFORM THE FOLLOWING TASKS:\n\n      A) DELETE ALL OLD VSAM RECORDS BASED ON A DAYS OLD PARAMETER.\n\n      B) MONITOR THE AMOUNT OF VALID DATA ON DAILY/ARCHIVE DATASETS\n         AND DYNAMICALLY DELETE ANY TAPES OR DISKS THAT ARE\n         DETERMINED TO BE EMPTY.\n\n      C) OPTIONALLY CREATE A REPORT OF ANY SYSOUT THAT EXCEEDS A\n         SPECIFIED NUMBER OF LINES. (IE: WILL REPORT ON ANY SYSOUT\n         REPORT THAT IS LARGER THAN 20,000 LINES). THIS REPORT LOOKS\n         AT THE LAST 7 DAYS ONLY.\n\n\n 10) YOUR OLD SOUTXIT PROGRAM IS CAN BE USED WITHOUT ANY CHANGES.\n     THE DATA IS STILL PASSED TO IT IN THE SAME FORMAT.\n\n\n 11) SAVEWTR WILL HANDLE CREATING DAILY DATASETS ON DISK OR TAPE.\n     YOU CAN ALSO CHANGE FROM TAPE TO DISK OR FROM DISK TO TAPE\n     AT ANY TIME. THIS ALLOWS YOU TO KEEP DAILYS ON DISK AND ONLY\n     COPY OLD DAILY DISKS TO ARCHIVE TAPE. IF YOU RUN LOW ON DISK\n     SPACE, YOU CAN, ON THE FLY, CHANGE SAVEWTR TO PUT THE DAILYS\n     TO TAPE. AT A LATER TIME, YOU CAN PUT THE DAILYS BACK TO DISK.\n     SAVEWTR WILL ALWAYS PLACES ARCHIVED DATASETS ON TAPE, BUT DAILY\n     DATASETS CAN BE PLACED ON EITHER DISK OR TAPE.\n\n     NOTE: IF YOU CHANGE DAILYS FROM DISK TO TAPE, THE EXISTING\n           DISK DAILY DATASETS WILL FIRST BE COPIED TO THE ARCHIVE\n           TAPE AND THEN THE ACTIVE FILE WILL BE COPIED TO DAILY TAPE.\n           (SEE EXPLANATION THE THE SOUTSWTR PROGRAM)\n\n\n 12) THE SOUTSEP PROGRAM HAS BEEN MODIFIED TO SENSE WHEN THE ACTIVE\n     DISK DATASET IS FILLING UP. IT WILL AUTOMATICALLY START YOUR\n     SAVEWTR (STARTED TASK) WHEN THE ACTIVE FILE REACHES 80% FULL.\n     THIS SHOULD ELIMINATE MOST OF THE D37'S THAT OCCUR IN DISKWTR.\n\n\n 13) THE SOUTWTR PROGRAM HAS BEEN MODIFIED TO HANDLE BOTH THE\n     3420 (1600/6250 BPI)  AND THE NEW 3480 CARTRIDGE TAPE DRIVES.\n\n\n 14) IF THE OPTIONAL \"SPECLDEL\" DD IS SUPPLIED, THE REQUESTED REPORTS\n     WILL BE DELETED FROM THE JOURNAL FILE IN THE SAVEWTR AND CLEANWTR\n     PROCESSING. A SPECIFIC JOBNAME AND JOB NUMBER CAN BE SPECIFIED, OR\n     JUST A JOBNAME WITH NO NUMBER, OR A GENERIC JOBNAME (LAST CHAR IS *)\n\n     PROCS AFFECTED: SAVEWTR AND CLEANWTR\n\n      NOTE: THE SPECIAL DELETE DATASET SHOULD BE  LRECL=80\n            FORMAT OF THE FILE IS:\n                          1         2         3\n           COL   123456789012345678901234567890\n                 JJJJJJJJ XXX#####             <== JOB# IS OPTIONAL)\n                    |      |   |-----JOB NUMBER\n                    |      |---------JOB LIT  (IE: JOB STC TSU)\n                    |----------------JOB NAME (IE: PAYROLL\n                                                   PAY*  <= GENERIC)\n\n\n\n\n\n\n\n\n\n\n\n THIS SECTION DESCRIBES SOME OF THE IMPORTANT THINGS TO CONSIDER\n BEFORE INSTALLING AND RUNNING THIS NEW VSAM SYSTEM.\n\n\n 1) WHATEVER PREFIX THAT YOU CHOOSE FOR THE DISKWTR SYSTEM MUST\n    BE UNIQUE TO THIS SYSTEM ONLY. (IE: SYS2.OPSWTR)\n    THIS IS BECAUSE THE CLEANWTR/SOUTCLN PROGRAM USES THIS PREFIX\n    TO DETERMINE THE EMPTY DAILY/ARCHIVE DATASETS. SOUTCLN INTERNALLY\n    DOES A LISTSPC ON THAT PREFIX AND BUILDS A DATASET TABLE. AS IT\n    WALKS THRU THE VSAM JOURNAL, IT KEEPS A COUNTER OF ALL THE VALID\n    SYSOUT REPORTS ON EACH DATASET. AFTER THE WHOLE JOURNAL IS READ,\n    IT THE LOOKS AT ALL THE DATASETS AND DYNAMICALLY DELETES ANY\n    DATASET THAT IS DETERMINED TO BE EMPTY.\n    (IE: IF YOU SELECT \"SYS2.OPSWTR\" AS THE PREFIX AND YOU UNLOAD\n         THE PROGRAMS, PROCS, AND SPF PANELS TO A DATASET NAMED\n         \"SYS2.OPSWTR.ASM\"; THE FIRST TIME CLEANWTR RUNS, IT WILL\n         DELETE THIS DATASET BECAUSE IT DOES NOT CONTAIN ANY VALID\n         SYSOUT REPORTS)\n\n\n\n 2) IF YOU ARE CONVERTING FROM THE OLD SYSTEM TO THIS NEW VSAM VERSION,\n    CHECK YOUR 'SYS1.PARMLIB(IEALPA00)' MEMBER. IF YOU WERE LPA'ING\n    SOUTSEP AND SOUTCALL , YOU WILL NEED TO IPL BEFORE THE NEW PROGRAMS\n    WILL TAKE EFFECT. YOU COULD BYPASS AN IPL BY STEPLIBING TO THE\n    LINKLIST LIBRARY WHILE TESTING.\n\n\n\n 3) THE LOCK DATASET IN THIS SYSTEM MUST BE YOUR PREFIX.\n    IF YOU SELECT  \"SYS2.OPSWTR\" AS YOUR PREFIX, IN THE PROCS\n    DISKWTR, SAVEWTR AND CLEANWTR THE PREFIX DD MUST BE:\n\n    //PREFIX  DD DSN=SYS2.OPSWTR,DISP=...\n\n     DO NOT USE THE OLD LOCK NAME HERE (IE: SYS2.OPSWTR.LOCK)\n     THE PREFIX NAME MUST BE ONLY THE PREFIX THE WILL BE PUT ON\n           PREFIX...DAILY.DXXXXXXX.TXXXXX\n                    AND\n           PREFIX...ARCHIVE.DXXXXXXX.TXXXXX\n\n\n\n 4) IF YOU ARE IN A CONVERSION MODE, SET THE \"OLDPFX\" DD IN\n    THE SAVEWTR AND CLEANWTR PROCS TO YOUR OLD PREFIX (INCLUDE \"DATA\")\n\n    (IE: OLD SYSTEM DATASETS = SYS2.OPSTAPE.DATA.ARCHIVE.G1234V00)\n     USE THE FOLLOWING:\n\n    //OLDPFX  DD DSN=SYS2.OPSTAPE.DATA,DISP=...\n\n    (NOTE: IN SAVEWTR, THIS IS ONLY REQUIRED IF YOU ARE REBUILDING)\n\n     THE SAME HOLDS HERE AS FOR #4 ABOVE\n\n     OLDPFX NAME MUST BE ONLY THE PREFIX THE WILL BE PUT ON\n           OLDPFX...ARCHIVE.G0000V00\n\n\n\n 5) THE MAXIMUM PREFIX FOR THIS SYSTEM CAN ONLY BE 21 CHARACTERS.\n    THE OLD SYSTEM COULD HANDLE 25. THIS SYSTEM CAN STILL HANDLE\n    A 25 CHARACTER OLD PREFIX IF YOU ARE IN A CONVERSION MODE.\n\n\n\n\n 6) EVEN THOUGH DISKWTR CAN SENSE THAT THE ACTIVE FILE IS 80% FULL,\n    IT MAY NOT ALWAY AVERT  D37'S.  SOUTSEP ONLY GETS CONTROL WHEN\n    A NEW REPORT IS BEING WRITTEN BY THE EXTERNAL WTR. IF THE FILE\n    IS, AS AN EXAMPLE,  75% FULL AND A 500,000 LINE REPORT IS PUT\n    TO THE DISKWTR CLASS. SOUTSEP WRITES THE SEPERATOR RECORD AND\n    INSERTS A RECORD INTO THE VSAM JOURNAL. IT THE SEES THAT THE\n    ACTIVE FILE IS ONLY 75% FULL AND RETURNS CONTROL BACK TO THE\n    THE EXTERNAL WRITTER. THE EXTERNAL WRITTER, WHILE OFFLOADING\n    THE LARGE REPORT, WILL D37 THE ACTIVE FILE. THIS CANNOT BE\n    AVOIDED UNLESS YOU SOME HOW ARE CONTROLLING LARGE REPORTS.\n\n    NOTE: WHEN EXTERNAL WRITER CALLS THE SOUTSEP PROGRAM, THERE\n          IS NO PLACE WHERE THE NUMBER OF LINES IS PASSED TO SOUTSEP.\n          IF THERE WAS, WE COULD DO SOME CALCULATIONS WITH IT.\n          BUT AS OF NOW, WE HAVE TO LIVE WITH OCCASIONAL D37'S OR\n          DO NOT RELY ON THE 80% FULL TEST AND START YOUR OWN SAVEWTR\n          THRU AUTO AT SPECIFIED TIME INTERVALS.\n\n\n\n\n 7) SOUTSEP/SAVEWTR ASSUMES  THAT YOU ARE USING CATALOG CONTROL\n    IN YOUR TAPE MANAGEMENT SYSTEM. (EXPDT=99000) IF YOU ARE NOT,\n    YOU MAY HAVE TO MODIFY THE DYNAMIC ALLOCATION PARM IN THE\n    SOUTWTR PROGRAM. LOOK FOR \"TAPEXPDT\" AND UNCOMMENT THE LINES\n    BEFORE ASSEMBLING THE PROGRAM (THERE ARE 2 OCCURRANCES)\n    THIS IS UNTESTED AS OF 7/30/84\n\n\n\n\n 8) ALL LOGIC IN SOUTSEP FOR DIFFERENT RECORD FORMAT SYSOUTS HAS\n    BEEN REMOVED. ONLY RECFM=FBA AND LRECL=133 IS SUPPORTED.\n    THIS WAS BECAUSE THE SPF PROGRAM THAT PRINTED THE DATA\n    USED ONLY RECFM=FBA,LRECL=133.\n\n\n\n\n 9) ALL TTR CALCULATION LOGIC (IN SOUTSEP AND SOUTWTR) IS BASED ON\n    THE DISK DATASETS BEING IN ONLY ONE EXTENT. IT IS IMPORTANT\n    TO ALLOCATE YOUR \"ACTIVE\" FILE IN ONE CONTIGUOUS (CYL) EXTENT.\n    THE SOUTWTR PROGRAM WILL ALLOCATE THE DAILY DISK FILES (IF YOU\n    PUT DAILYS TO DISK) THE SAME SIZE AS THE  ACTIVE, BUT DOES NOT\n    REQUEST CONTIGUOUS SPACE. IF CONTIGUOUS SPACE WAS NOT FOUND IN\n    ALLOCATION, SOME INVALID TTR'S COULD BE CALCULATED. THE ONLY\n    PROBLEM THAT WILL ARISE FROM THIS BAD TTR IS THAT WHEN YOU\n    SELECT A SYSOUT REPORT  WITH THE BAD TTR, THE SOUTSUB PROGRAM\n    WILL POSITIONED THE READ TO EARLY IN THE DAILY FILE. IT WILL\n    THEN READ SEQUENTIALLY UNTIL THE REQUESTED REPORT IS FOUND.\n    (IT SHOULD NEVER HAVE A TTR CALCULATED PAST THE REQUIRED POSITION)\n\n\n\n\n 10) AS IN THE OLD SYSTEM, ALWAYS START DISKWTR THRU THE SAVEWTR\n     STARTED TASK. NEVER START DISKWTR!!!!. IF YOU DO, DISKWTR\n     WILL DESTROY ANY OLD DATA IN THE ACTIVE FILE.\n     SAVEWTR OFFLOADS THE ACTIVE FILE AND RE-INITIALIZES IT; IT THEN\n     STARTS DISKWTR. ALSO, AFTER ANY IPL, START SAVEWTR.\n\n\n\n\n 11) IT IS RECOMMENDED TO PLACE  PROGRAMS \"SOUTCALL\" AND \"SOUTSEP\"\n     INTO YOU IEALPA00 MEMBER IN SYS1.PARMLIB. THIS WILL ALLOW\n     THE MVSGPSVC TO AUTHORIZE ALL USERS FOR TAPE MOUNTS THRU SOUTCALL.\n     IT WILL ALSO ELIMINATE MULTIPLE LOADINGS OF SOUTSEP FOR EACH\n     REPORT WRITTEN TO THE DISKWTR.\n\n\n\n\n 12) IF THE OPTIONAL \"SPECLDEL\" DD IS SUPPLIED, THE REQUESTED REPORTS\n     WILL BE DELETED FROM THE JOURNAL FILE IN THE SAVEWTR AND CLEANWTR\n     PROCESSING. A SPECIFIC JOBNAME AND JOB NUMBER CAN BE SPECIFIED, OR\n     JUST A JOBNAME WITH NO NUMBER, OR A GENERIC JOBNAME (LAST CHAR IS *)\n\n      NOTE: THE SPECIAL DELETE DATASET SHOULD BE  LRECL=80\n            FORMAT OF THE FILE IS:\n                          1         2         3\n           COL   123456789012345678901234567890\n                 JJJJJJJJ XXX#####             <== JOB# IS OPTIONAL)\n                    |      |   |-----JOB NUMBER\n                    |      |---------JOB LIT  (IE: JOB STC TSU)\n                    |----------------JOB NAME (IE: PAYROLL\n                                                   PAY*  <= GENERIC)\n\n\n\n\n\n\n\n\n\n\n\n*** SPECIAL DELETE REPORTS PROCESSING *****\n\n\n\nTHE SOUTSYS SYSTEM NOW PROVIDES A MEANS OF DELETING UNWANTED\nREPORTS FROM THE SYSTEM. THIS MEMBER CONTAINS DOCUMENTATION FOR\nTHE USE OF THIS FEATURE.\n\nNOTE: ALL REPORTS WILL ALWAYS BE ADDED TO THE ACTIVE FILE VIA\n      THE EXTERNAL WRITER AND SOUTSEP EXIT.\n\nA) A OPTIONAL DD CARD CAN BE ADDED TO THE \"SAVEWTR\" AND \"CLEANWTR\"\n   PROCEDURES. IF THEY ARE NOT PRESENT, PROCESSING CONTINUES AS\n   NORMAL WITH ALL JOBS/REPORTS BEING PLACED ON THE DAILY/ARCHIVE FILES.\n\nB) IF THE \"SAVEWTR\" PROC CONTAINS THE \"SPECLDEL\" DD CARD, THE FOLLOWING\n   WILL TAKE PLACE WHEN THE SAVEWTR RUNS:\n     1) IF DAILY DISK FILES ARE BEING COPIED TO TAPE, AND A DELETE\n        JOBNAME IS MATCHED; THE JOURNAL RECORD WILL BE DELETED AND\n        THE REPORT WILL NOT BE PUT ON THE ARCHIVE FILE\n\n     2) WHEN THE ACTIVE FILE IS COPIED TO A DAILY DISK OR TAPE AND A\n        DELETE JOBNAME IS MATCHED; THE JOURNAL RECORD WILL BE DELETED\n        AND THE REPORT WILL NOT BE PUT TO THE DAILY DATASET.\n\nC) IF THE \"CLEANWTR\" PROC CONTAINS THE \"SPECLDEL\" DD CARD, THE FOLLOWING\n   WILL TAKE PLACE WHEN THE CLEANWTR RUNS:\n      1) NORMAL DELETE OF JOBS IF THE EXPIRATION DATE IS REACHED\n      2) IF THE DATE HAS NOT EXPIRED, A COMPARE IS DONE OF JOBNAME\n         AND THE SPECIAL DELETE DATASET; IF A MATCH IS FOUND, THE\n         JOURNAL RECORD IS DELETED ONLY;\n\nD) THE SPECIAL DELETE DATASET SHOULD BE  LRECL=80\n  ===> THERE CAN BE A MAXIMUM OF 99 JOBS IN THIS DATASET\n  ===> SAVEWTR WILL ABEND WITH A ABEND CODE 27 IF THERE ARE MORE?????\n\n            FORMAT OF THE FILE IS:\n                          1         2         3\n           COL   123456789012345678901234567890\n                 JJJJJJJJ XXX#####             <== JOB# IS OPTIONAL)\n                    |      |   |-----JOB NUMBER\n                    |      |---------JOB LIT  (IE: JOB STC TSU)\n                    |----------------JOB NAME (IE: PAYROLL\n                                                   PAY*  <= GENERIC)\n\n     1) THE JOB NUMBER IS OPTIONAL - IF SUPPLIED, IT MUST BE THE FULL JOB\n        NUMBER.  (IE:  STC00123   JOB01999   TSU00020)\n\n     2) THE JOB NAME IS REQUIRED - IT CAN BE A FULL 8 CHARACTER JOB NAME OR\n        IT CAN BE A GENERIC NAME.  A GENERIC NAME CAONTAINS A * IN THE LAST\n        CHARACTER. (IE:  PAY*  D*  TMS*)\n\n\nE) VARIOUS USES FOLLOW;\n\n   1) IF YOU USE A FLUSH OR PUSH JOB TO PUT DUMMY REPORTS TO THE ACTIVE\n      FILE (TO FILL THE LAST BLOCK SO 4.S CAN LOOK AT THE MOST CUUENT JOB),\n      THE SPECLDEL DATASET CAN CONTAIN THAT STARTED TASK NAME. THOSE\n      JOBS WILL BE DELETED FROM THE JOURNAL AND WILL NOT BE COPIED TO\n      THE DAILY FILES WHEN SAVEWTR RUNS.\n\n   2) IF A JOB ACCIDENTALLY GETS PLACED ON THE DISKWTR SYSTEM; (IE: PAYROLL)\n      UPDATE THE SPECLDEL DATASET WITH THAT JOBNAME. WHEN THE COPY FROM\n      THE ACTIVE TO DAILY TAKES PLACE, THAT JOB IS DELETED.\n\n      IF THE COPY ALREADY TOOK PLACE, YOU CAN WAIT FOR THE COPY FROM DAILY\n      TO ARCHIVE TO TAKE PLACE AND THEN THE JOB WILL BE DELETED.\n        OR\n      YOU CAN RUN THE CLEANWTR JOB WITH THE SPECLDEL DD. THIS WILL DELETE\n      ONLY THE JOURNAL RECORD. (NOTE: IF THE JOURNAL RECORD IS NOT THERE,\n      YOU CAN'T GET THE DATA)\n\n   3) THE REBUILD AND FIXTAPE OPTIONS HAVE BEEN MODIFIED ALSO.\n      IE: IF YOU HAD RUN A SPECIAL CLEANWTR TO DELETE A JOB AND THE HAD\n      TO RUN A THE FIXTAPE OPTION; WHEN THE SEPERATOR FOR A DELETED JOB\n      IS FOUND, FIXTAPE WILL RE-ADD THE JOURNAL RECORD TO SYNC THE FILES.\n      IF THE SPECLDEL DD IS IN THE FIXTAPE JOB, THAT RECORD WILL NOT\n      BE RE-ADDED.\n\n\n\n\n\n\n\n\n\n\n\n*** WARNING FOR MISSING DATA ON ACTIVE FILE\n\n   CODE HAS BEEN ADDED TO THE SOUTSUB PROGRAM TO WARN REQUESTORS THAT\n   THE LAST BLOCK OF DATA HAS NOT BEEN WRITTEN TO THE ACTIVE FILE.\n\n   ( THIS IS DUE TO THE BLOCKING OF ACTIVE FILE)\n\n\n   1) IF PART OF THE REQUESTED REPORT IS ON THE ACTIVE FILE, AND THE REST\n      IS CONTAINED ON THE LAST BLOCK, A WARNING IS ADDED TO THE REPORT\n      STATING THAT ALL THE DATA IS NOT THERE.\n\n   2) IF A SMALL REPORT (IE: LESS THAN 46 LINES IF ACTIVE IS BLOCKED 6118)\n      IS REQUESTED, A ONE LINE WARNING IS ISSUED STATING THAT THE DATA\n      IS NOT ON THE ACTIVE FILE YET.\n\n   3) THIS CODE ALSO ELIMINATES THE SOUTSUB PROGRAM FROM READING THE\n      ENTIRE ACTIVE FILE TO DETERMINE THAT THE SEPERATOR AND REPORT\n      HAVE NOT BEEN WRITTEN YET. THE OUTPUT FROM A JOBNAME LIST USE TO\n      APPEAR ON THE BROWSE SCREEN IF THIS CONDITION OCCURED.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$ACTIVE": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\x06\\x00\\x1b\\x00\\x1b\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:06:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "BCIKLM"}, "text": "//*--------------------------------------------------------------------\n//* BEFORE RUNNING:\n//*  1) CHANGE THE \"PREFIX\" SYMBOLIC\n//*  2) CHANGE THE VOLSER\n//*  3) CHANGE THE SPACE TO YOUR SELECTED SIZE FOR THE ACTIVE\n//*     FILE (SET UP AS 80 CYLS ON 3380 DEVICE)\n//*\n//* EXPECT A \"D37\" ABEND WHEN USING THE 'FORMAT' OPTION\n//* (SOUTWTR WRITES PAD RECORDS UNTIL THE FILE IS FULL)\n//*--------------------------------------------------------------------\n//FORMAT  PROC PREFIX='SYS3.SOUTSYS'\n//*\n//STEP02   EXEC PGM=IEFBR14\n//DD1      DD   DSN=&PREFIX..ACTIVE,\n//             DISP=(,CATLG),VOL=SER=VVVVVV,\n//             UNIT=SYSDA,SPACE=(CYL,(100),,CONTIG,ROUND),\n//             DCB=(LRECL=133,BLKSIZE=6251,RECFM=FBA)\n//*\n//FORMAT   EXEC PGM=SOUTWTR,PARM='FORMAT'\n//ALLOCRPT DD   SYSOUT=*\n//SYSPRINT DD   SYSOUT=*\n//SYSUDUMP DD   SYSOUT=*\n//PREFIX   DD   DSN=&PREFIX,DISP=(,DELETE),\n//         UNIT=SYSDA,SPACE=(TRK,0)\n//*\n//  PEND\n//  EXEC FORMAT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$ASM": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\x06\\x00R\\x00R\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:06:00", "lines": 82, "newlines": 82, "modlines": 0, "user": "BCIKLM"}, "text": "//*--------------------------------------------------------------------\n//* THIS JOB WILL ASSEMBLE THE SOUTSYS SYSTEM\n//*\n//* 1. INSURE THAT THE REQUIRED CHANGES HAVE BEEN MADE TO THE\n//*    ASSEMBLY MEMBERS PRIOR TO RUNNING THIS JOB\n//* 2. VERIFY THE ASM.SYSLIB MACLIBS\n//* 3. VERIFY THE LNKLIB PARM  LIBRARY\n//* 4. VERIFY THE HLQ.OBJLIB REFRERENCES\n//* 5. VERIFY THE LKED.SYSLIB  LIBRARYS\n//*    (NEEDS LIBRARY WHERE \"ISPLINK\" EXISTS)\n//* 6. VERIFY THE LAST TWO STEPS THAT LINKEDIT AN SVC\n//* 7. SUBMIT THIS JOB\n//*--------------------------------------------------------------------\n//ASMSOUT  PROC I=,O=,LEPARM='MAP',LNKLIB='SYS2.LINKLIB'\n//ASM      EXEC PGM=ASMA90,     <=== ASM H\n//          PARM='TERM,XREF(SHORT),DECK,LIST'\n//SYSTERM  DD   SYSOUT=*\n//SYSPRINT DD   SYSOUT=*\n//SYSLIB   DD   DISP=SHR,DSN=SYS3.SOUTSYS.MACLIB,\n//             DCB=(LRECL=80,RECFM=FB,BLKSIZE=6320)\n//         DD   DISP=SHR,DSN=SYS1.MACLIB\n//         DD   DISP=SHR,DSN=SYS1.AMODGEN\n//SYSUT1   DD   SPACE=(CYL,(2,3)),UNIT=VIO\n//SYSUT2   DD   SPACE=(CYL,(2,3)),UNIT=VIO\n//SYSUT3   DD   SPACE=(CYL,(2,3)),UNIT=VIO\n//SYSLIN   DD   DUMMY\n//SYSPUNCH DD   SPACE=(CYL,(2,3)),UNIT=VIO,DISP=(,PASS),DSN=&&OBJ,\n//             DCB=(LRECL=80,RECFM=FB,BLKSIZE=3200)\n//SYSIN    DD   DISP=SHR,DSN=SYS3.SOUTSYS.ASM(&I)\n//*--------------------------------------------------------------------\n//LKED     EXEC PGM=IEWL,PARM='LIST,&LEPARM'\n//SYSPRINT DD   SYSOUT=*\n//SYSUT1   DD   SPACE=(CYL,(2,3)),UNIT=VIO\n//SYSLIB   DD   DISP=SHR,DSN=ISP.SISPLOAD  <=== WHERE ISPLINK EXISTS\n//SYSLMOD  DD   DISP=SHR,DSN=&LNKLIB(&O)\n//SYSLIN   DD   DISP=(OLD,DELETE),DSN=&&OBJ\n//         DD   DDNAME=SYSIN\n//         PEND\n//*--------------------------------------------------------------------\n//*        ASSEMBLE AND LINK THE SERVICE ROUTINES TO LINKLIST\n//*--------------------------------------------------------------------\n//CMNFS00  EXEC ASMSOUT,I=CMNFS00@,O=CMNFS00\n//SOUTCALL EXEC ASMSOUT,I=SOUTCALL,O=SOUTCALL,LEPARM='RENT,AC=1'\n//SOUTCLN  EXEC ASMSOUT,I=SOUTCLN,O=SOUTCLN\n//SOUTCPR  EXEC ASMSOUT,I=SOUTCPR,O=SOUTCPR\n//SOUTDATE EXEC ASMSOUT,I=SOUTDATE,O=SOUTDATE\n//SOUTPRT  EXEC ASMSOUT,I=SOUTPRT,O=SOUTPRT,LEPARM='AC=1'\n//SOUTSEP  EXEC ASMSOUT,I=SOUTSEP,O=SOUTSEP,LEPARM='RENT,AC=1'\n//SOUTSUB  EXEC ASMSOUT,I=SOUTSUB,O=SOUTSUB,LEPARM='AC=1'\n//SOUTWTR  EXEC ASMSOUT,I=SOUTWTR,O=SOUTWTR,LEPARM='AC=1'\n//SOUTXIT  EXEC ASMSOUT,I=SOUTXIT,O=SOUTXIT\n//LOCINDEX EXEC ASMSOUT,I=LOCINDEX,O=LOCINDEX\n//*--------------------------------------------------------------------\n//* ASM/LKED THE CONVERSION PROGRAM IF NEEDED\n//*--------------------------------------------------------------------\n//SOUTCVT EXEC ASMSOUT,I=SOUTCVT,O=SOUTCVT\n//*--------------------------------------------------------------------\n//* THIS JCL IS USED TO ASSEMBLE AND LINK THE SVC\n//*--------------------------------------------------------------------\n//ASMSVC   EXEC  PGM=ASMA90,\n//            PARM='NODECK,OBJECT,XREF(SHORT),LIST'\n//SYSUT1   DD DSN=&&SYSUT1,SPACE=(4096,(120,120),,,ROUND),\n//            UNIT=SYSDA,DCB=BUFNO=1\n//SYSLIN   DD DISP=SHR,DSN=SYS3.SOUTSYS.OBJLIB(IGC0025B)      <=======\n//SYSLIB   DD DSN=SYS3.SOUTSYS.ASM,DISP=SHR,DCB=(BLKSIZE=9600)\n//         DD DSN=SYS3.SOUTSYS.MACLIB,DISP=SHR\n//         DD DISP=SHR,DSN=SYS1.SHASMAC\n//         DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.AMODGEN\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DSN=SYS3.SOUTSYS.ASM(MVSGPSVC),DISP=SHR\n//*--------------------------------------------------------------------\n//LKEDSVC  EXEC PGM=IEWL,REGION=2000K,COND=(4,LT,ASMSVC),\n//         PARM=(NCAL,LET,RENT,LIST,XREF)\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(20,20))\n//OBJLIB   DD DISP=SHR,DSN=SYS3.SOUTSYS.OBJLIB          <==========\n//SYSLMOD  DD DSN=SYS1.LPALIB,DISP=SHR\n//SYSLIN   DD *\n  INCLUDE OBJLIB(IGC0025B)\n  NAME    IGC0025B(R)\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$JOURNAL": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\x06\\x00@\\x00@\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:06:00", "lines": 64, "newlines": 64, "modlines": 0, "user": "BCIKLM"}, "text": "//*--------------------------------------------------------------------\n//* BEFORE RUNNING:\n//*   1) CHANGE JOURNAL PREFIX (LEAVE \"JOURNAL\" AS SUFFIX)\n//*      (USED IN 5 PLACES)\n//*   2) CHANGE VOLUME\n//*   3) CHANGE NUMBER OF RECORDS\n//*--------------------------------------------------------------------\n//* UNCOMMENT THE FOLLOWING AND CHANGE ACCORDINGLY IF YOU WANT\n//* TO POSITION JOURNAL ON A PACK\n//*\n//*         EXEC PGM=IEFBR14\n//*DD1      DD   DSN=&&TEMP1,DISP=(,PASS),\n//*         UNIT=SYSDA,SPACE=(TRK,(6255)),VOL=SER=PVT863\n//*\n//IDCAMS    EXEC PGM=IDCAMS,REGION=4096K\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD *\n    DELETE (SYS3.SOUTSYS.JOURNAL) PURGE CLUSTER\n /* APPROX 11 3380 CYLINDERS PER 100,000 RECORDS    */\n /*                                                 */\n /* SHARE OPTIONS CHANGED FROM 2,4 TO 2,3           */\n /* BECAUSE IT WILL NOT UPDATE HIGH RBA IN DISP=SHR */\n /* WE MAINTAIN DATA INTEGRITY WITH LOCK DATASET    */\n /* AND ONLY 1 UPDATE JOB                           */\n /*                                                 */\n DEF CLUSTER (NAME(SYS3.SOUTSYS.JOURNAL) -\n     INDEXED -\n     VOL(VVVVVV) -\n     CYL(25,10) -\n     SHR(2 3) -\n     KEYS(22 0) -\n     RECSZ(42 42) -\n     FSPC(20 20) -\n     SPEED -\n     IMBED ) -\n    DATA -\n     (NAME(SYS3.SOUTSYS.JOURNAL.DATA) CISZ(4096)) -\n    INDEX -\n     (NAME(SYS3.SOUTSYS.JOURNAL.INDEX) )\n//*\n//IEBDG     EXEC PGM=IEBDG\n//SYSPRINT  DD SYSOUT=*\n//DD1   DD DSN=&&TEMP2,DISP=(,PASS),\n//         UNIT=SYSDA,SPACE=(42,(10),RLSE),\n//         DCB=(RECFM=F,LRECL=42,BLKSIZE=42)\n//SYSIN     DD *\n DSD OUTPUT=(DD1)\n FD  NAME=F1,LENGTH=8,PICTURE=8,'*JRNINIT'\n FD  NAME=F2,LENGTH=5,PICTURE=5,P'99999'\n FD  NAME=F3,LENGTH=4,PICTURE=4,P'9999'\n FD  NAME=F4,LENGTH=9,PICTURE=9,'00000JOBX'\n FD  NAME=F5,LENGTH=4,PICTURE=4,B'0000'\n FD  NAME=F6,LENGTH=4,PICTURE=4,P'0000'\n FD  NAME=F7,LENGTH=2,PICTURE=2,' A'\n FD  NAME=F8,LENGTH=6,PICTURE=6,P'999999'\n CREATE QUANTITY=1,FILL=X'40',NAME=(F1,F2,F3,F4,F5,F6,F7,F8)\n END\n//*\n//IDCAMS    EXEC PGM=IDCAMS,REGION=4096K\n//SYSPRINT  DD SYSOUT=*\n//DD1   DD DSN=&&TEMP2,DISP=(OLD,DELETE)\n//SYSIN     DD *\n REPRO INFILE(DD1) ODS(SYS3.SOUTSYS.JOURNAL)\n//*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$RECEIVE": {"ttr": 1026, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\x06\\x00F\\x00F\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:06:00", "lines": 70, "newlines": 70, "modlines": 0, "user": "BCIKLM"}, "text": "/* This REXX EXEC is expected to be invoked by the EXEC command\n   thus:\n\n   EXec 'dsname($RECEIVE)'\n\n   Prompting will occur for HLQ and optional VOLSER.\n\n   It will then issue the TSO RECEIVE command for the\n   the following members to create these new data sets:\n\n   Member       Dataset\n   ASM          hlq.ASM\n   ISPMLIB      hlq.ISPMLIB\n   ISPPLIB      hlq.ISPPLIB\n   ISPSLIB      hlq.ISPSLIB\n   MACLIB       hlq.MACLIB\n   PARMLIB      hlq.PARMLIB\n   PROCLIB      hlq.PROCLIB\n\n   You will then need to copy these datasets/members into\n   datasets for production use.\n\n   After these data sets are created several of the members\n   of this install data set will be browsed.\n   */\n\nparse source x1 x2 x3 x4 dsn .\n x = PROMPT(\"ON\") /* enable prompting */\n\nsay \"Enter desired HLQ for target data sets\",\n    \"(default is\" sysvar(\"syspref\")\".SOUTSYS):\"\npull hlq\nhlq = strip(hlq)\n\nif hlq = \"\" then hlq = sysvar(\"syspref\")\".SOUTSYS\"\n\nsay \"Enter optional volser for target data sets\",\n    \"default is to allow standard allocation to\",\n    \"find a volume.\"\npull volser\nvolser = strip(volser)\n\nif volser <> \"\" then vol = \"vol(\"volser\")\"\n                else vol = \"\"\n\nSay \"Using HLQ:\" hlq\nif vol <> \"\" then\n   Say \"Using Volser:\" volser\n\nqueue \"dsn('\"hlq\".ASM')\" vol\n\"Receive inds('\"dsn\"(ASM)')\"\nqueue \"dsn('\"hlq\".ISPMLIB')\" vol\n\"Receive inds('\"dsn\"(ISPMLIB)')\"\nqueue \"dsn('\"hlq\".ISPPLIB')\" vol\n\"Receive inds('\"dsn\"(ISPPLIB)')\"\nqueue \"dsn('\"hlq\".ISPSLIB')\" vol\n\"Receive inds('\"dsn\"(ISPSLIB)')\"\nqueue \"dsn('\"hlq\".MACLIB')\" vol\n\"Receive inds('\"dsn\"(MACLIB)')\"\nqueue \"dsn('\"hlq\".PARMLIB')\" vol\n\"Receive inds('\"dsn\"(PARMLIB)')\"\nqueue \"dsn('\"hlq\".PROCLIB')\" vol\n\"Receive inds('\"dsn\"(PROCLIB)')\"\n\nif sysvar('sysispf') <> \"ACTIVE\" then exit\nAddress ISPEXEC\n   \"Browse dataset('\"dsn\"($$CHANGE)')\"\n   \"Browse dataset('\"dsn\"($$DESCR)')\"\n   \"Browse dataset('\"dsn\"($$INFO)')\"\n   \"Browse dataset('\"dsn\"($$NEWDOC)')\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE358": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04?\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\t\\x00D\\x00D\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf3@@@'", "ispf": {"version": "04.63", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:09:00", "lines": 68, "newlines": 68, "modlines": 0, "user": "CBT-463"}, "text": "//***FILE 358 is source code for the SYSLOG Storage Program         *   FILE 358\n//*           package from Eric Bielefeld of Milwaukee, Wisconsin,  *   FILE 358\n//*           as repackaged and completed by Kevin Mitts.           *   FILE 358\n//*                                                                 *   FILE 358\n//*  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *   FILE 358\n//*                                                                 *   FILE 358\n//*     Repackager's Note:                                          *   FILE 358\n//*                                                                 *   FILE 358\n//*     I'm a heavy user of a lot of CBT products.  I've            *   FILE 358\n//*     installed the SOUTSYS product but it was a real pain        *   FILE 358\n//*     because there were many pieces missing.  I called and       *   FILE 358\n//*     received all the missing pieces from the original           *   FILE 358\n//*     writer and have repackaged it.  I have successfully         *   FILE 358\n//*     installed it on OS/390 2.9 and z/OS 1.4.  It actually       *   FILE 358\n//*     does a fair job of sysout archival.  My client and I        *   FILE 358\n//*     were both pleasantly surprised that it worked well          *   FILE 358\n//*     under z/OS 1.4.                                             *   FILE 358\n//*                                                                 *   FILE 358\n//*     So, if it helps, here's the repackaged product.             *   FILE 358\n//*     See member $$INSTAL to do the installation.                 *   FILE 358\n//*                                                                 *   FILE 358\n//*                  Kevin Mitts                                    *   FILE 358\n//*                  kevin.mitts@mindspring.com                     *   FILE 358\n//*                  913-515-0638 cell                              *   FILE 358\n//*                  KevMitts - AIM                                 *   FILE 358\n//*                  Kevin Mitts - MSN IM                           *   FILE 358\n//*                  kevinmitts - Yahoo IM                          *   FILE 358\n//*                                                                 *   FILE 358\n//*  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *   FILE 358\n//*                                                                 *   FILE 358\n//*     SUBJECT: SYSOUT WRITER UTILITY                              *   FILE 358\n//*     FROM: Eric Bielefeld <EBIE@phmining.COM>                    *   FILE 358\n//*                                                                 *   FILE 358\n//*     Note.  If you think you are missing macros for an           *   FILE 358\n//*            assembly, please look for them in member             *   FILE 358\n//*            $MACLIB.                                             *   FILE 358\n//*                                                                 *   FILE 358\n//*     I DON'T KNOW IF YOU HAVE BEEN FOLLOWING IBM-MAIN            *   FILE 358\n//*     LATELY, BUT THERE HAS BEEN A DISCUSSION ON UTILITIES        *   FILE 358\n//*     FOR PUTTING SYSLOG ON TAPE, OR OTHER MEANS OF KEEPING       *   FILE 358\n//*     IT AROUND.  WE HAVE A PUBLIC DOMAIN PROGRAM CALLED          *   FILE 358\n//*     SOUTSYS THAT I THINK SOME PEOPLE COULD USE.  I THINK IT     *   FILE 358\n//*     WOULD BE A GOOD CANDIDATE FOR THE CBT TAPE.                 *   FILE 358\n//*                                                                 *   FILE 358\n//*     HERE IS A DESCRIPTION FROM THE INSTALL PDS THAT GIVES A     *   FILE 358\n//*     GOOD OVERVIEW OF THE PRODUCT.  WE USE IT AT HARNISCHFEGER   *   FILE 358\n//*     TO KEEP ALL OF OUR MESSAGE CLASS OUTPUT AND SYSLOG.  WE     *   FILE 358\n//*     KEEP IT ONLINE FOR 8 DAYS, AND THEN IT IS ARCHIVED TO       *   FILE 358\n//*     TAPE WHICH WE KEEP UNTIL IT IS 90 DAYS OLD.                 *   FILE 358\n//*                                                                 *   FILE 358\n//*     BASICALLY, THE SYSTEM USES AN EXIT TO THE EXTERNAL          *   FILE 358\n//*     WRITER TO WRITE ALL SYSOUT FOR THE CLASS CHOSEN TO A        *   FILE 358\n//*     SEQUENTIAL DISK FILE.  IT KEEPS TRACK OF WHERE EVERY        *   FILE 358\n//*     FILE STARTS IN A VSAM FILE, AND WHEN THE  SEQ. DISK         *   FILE 358\n//*     FILE IS FULL, COPIES IT TO A DIFFERENT FILE ON DISK AND     *   FILE 358\n//*     COMPRESSES IT.  AFTER A PERIOD OF TIME SET BY THE USER,     *   FILE 358\n//*     EACH COMPRESSED SEQ. FILE IS MODDED ONTO TAPE.  ISPF        *   FILE 358\n//*     PANELS ARE USED TO LOOK AT ANY SYSOUT IN THE SYSTEM.        *   FILE 358\n//*     DATA ON TAPE CAN BE PRINTED TO HELD OUTPUT, OR LOOKED       *   FILE 358\n//*     AT ONLINE, EXCEPT YOU HAVE TO WAIT FOR THE TAPE MOUNT.      *   FILE 358\n//*                                                                 *   FILE 358\n//*               Eric Bielefeld                                    *   FILE 358\n//*               Sr. MVS Systems Programmer                        *   FILE 358\n//*               P&H Mining Equipment Corp.                        *   FILE 358\n//*               Milwaukee, WI                                     *   FILE 358\n//*               414-671-7849                                      *   FILE 358\n//*               EBIE@phmining.com                                 *   FILE 358\n//*                                                                 *   FILE 358\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASM": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00R\\x01\\x03\\x11\\x1f\\x01\\x03\\x11\\x1f\\x10R+\\x1d+\\x1d\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-04-21T00:00:00", "modifydate": "2003-04-21T10:52:52", "lines": 11037, "newlines": 11037, "modlines": 0, "user": "BCIKLM"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "IEALPA00": {"ttr": 5386, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\x06\\x00\\x05\\x00\\x05\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:06:00", "lines": 5, "newlines": 5, "modlines": 0, "user": "BCIKLM"}, "text": "INCLUDE LIBRARY(SYS1.LINKLIB)\n        MODULES(\n                SOUTCALL\n                SOUTSEP\n               )\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ISPFSOUT": {"ttr": 5388, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)?\\x01\\x03)?\\x00\\x06\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-20T00:00:00", "modifydate": "2003-10-20T00:06:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "BCIKLM"}, "text": "/*---------------------------------------------------------------------\n * SYS3.SOUTSYS.INSTALL(ISPFSOUT)\n *\n * REXX program to access SOUTSYS\n *---------------------------------------------------------------------\n */\n\ntrace o\n\naddress ISPEXEC\n\n\"LIBDEF ISPPLIB DATASET ID(\",\n                         \"'SYS3.SOUTSYS.ISPPLIB'\",\n                         \")\"\n\n\"LIBDEF ISPSLIB DATASET ID(\",\n                         \"'SYS3.SOUTSYS.ISPSLIB'\",\n                         \")\"\n\n\"LIBDEF ISPMLIB DATASET ID(\",\n                         \"'SYS3.SOUTSYS.ISPMLIB'\",\n                         \")\"\n\n\"SELECT PGM(CMNFS00) NEWAPPL(SOUT) PASSLIB SCRNAME(SOUTSYS)\"\n\n\"LIBDEF ISPPLIB\"\n\"LIBDEF ISPSLIB\"\n\"LIBDEF ISPMLIB\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ISPMLIB": {"ttr": 5390, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x03\\x11\\x1f\\x01\\x03\\x11\\x1f\\x10S\\x00\\x0f\\x00\\x0f\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-04-21T00:00:00", "modifydate": "2003-04-21T10:53:09", "lines": 15, "newlines": 15, "modlines": 0, "user": "BCIKLM"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "ISPPLIB": {"ttr": 5633, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01\\x03\\x11\\x1f\\x01\\x03\\x11\\x1f\\x10S\\x00\\xcd\\x00\\xcd\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-04-21T00:00:00", "modifydate": "2003-04-21T10:53:21", "lines": 205, "newlines": 205, "modlines": 0, "user": "BCIKLM"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "ISPSLIB": {"ttr": 5637, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x03\\x11\\x1f\\x01\\x03\\x11\\x1f\\x10S\\x00!\\x00!\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-04-21T00:00:00", "modifydate": "2003-04-21T10:53:33", "lines": 33, "newlines": 33, "modlines": 0, "user": "BCIKLM"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "MACLIB": {"ttr": 5639, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00G\\x01\\x03\\x11\\x1f\\x01\\x03\\x11\\x1f\\x10S\\n\\xd8\\n\\xd8\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-04-21T00:00:00", "modifydate": "2003-04-21T10:53:47", "lines": 2776, "newlines": 2776, "modlines": 0, "user": "BCIKLM"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PARMLIB": {"ttr": 6666, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x11\\x1f\\x01\\x03\\x11\\x1f\\x10T\\x00x\\x00x\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-04-21T00:00:00", "modifydate": "2003-04-21T10:54:00", "lines": 120, "newlines": 120, "modlines": 0, "user": "BCIKLM"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PROCLIB": {"ttr": 6915, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x03\\x11\\x1f\\x01\\x03\\x11\\x1f\\x10T\\x00\\xcf\\x00\\xcf\\x00\\x00\\xc2\\xc3\\xc9\\xd2\\xd3\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-04-21T00:00:00", "modifydate": "2003-04-21T10:54:11", "lines": 207, "newlines": 207, "modlines": 0, "user": "BCIKLM"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT358/FILE358.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT358", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}