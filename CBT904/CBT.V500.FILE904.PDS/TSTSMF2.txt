* ********************************************************************
* Licensed Materials - Property of IBM
*
* 5655-X01 Copyright IBM Corp. 2011
*
* All Rights Reserved
*
* US Government Users Restricted Rights - Use, duplication or
* disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
* ********************************************************************
TSTSMF2  TITLE '- SAMPLE STATEXIT TO INTERFACE WITH SMF'        46497
TSTSMF2  START ,                                                46497
         DGA$SAMP ,                                            DGA_STD
         COPY  DMGBLS                                           46497
         DMOS                                                   46497
         LCLC  &LASTPTF,&UID                                    1348110
&LASTPTF SETC  'R000000'                                        1348110
&LASTPTF SETC  'PM54250'                            QC19822     QC19765
&LASTPTF SETC  'PM77776'                                       R356952
&UID     SETC  ''       USE UP TO 8 CHARACTERS FOR LOCAL MOD    1348110
***********************************************************************
*                                                                     *
* FUNCTION:      CONNECT:DIRECT (TM) APPLICATION PROGRAM              *
*                                                                     *
* MODULE NAME:   TSTSMF2                                              *
*                                                                     *
* LEVEL:         VERSION 1, RELEASE 3                                 *
*                                                                     *
* DATE WRITTEN:  FEB. 1985                                            *
*                                                                     *
* PROGRAMMER:    K. C. THOMSON  SYSTEMS CONSULTANT                    *
*                                                                     *
* DESCRIPTION:   THIS ASSEMBLER PROGRAM IS AN SMF INTERFACE FOR       *
*                CONNECT:DIRECT FOR ZOS THAT WILL WRITE THE           *
*                CONNECT:DIRECT STATUS RECORD TO THE SMF LOG DATASET. *
*                SMF RECORD TYPE = 248                       AJC98272 *
*                                                                     *
*                THIS PROGRAM IS DESIGNED FROM INFORMATION            *
*                SUPPLIED IN IBM SMF MANUAL GC28-0706                 *
*                                                                     *
*                THE PROGRAM GETS 2K OF MAIN STORAGE TO HOLD          *
*                THE CONNECT:Direct STATISTICS RECORD.                *
*                IT THEN ADDS THE STANDARD SMF HEADER AND             *
*                UPDATES THE RDW LENGTH TO WRITE THE RECORD           *
*                AS USER TYPE 248 (X'F8')                    AJC98272 *
*                                                                     *
*                THE SMTWTM MACRO THEN WRITES THE RECORD TO THE       *
*                SMF LOG DATA SET.                                    *
*                                                                     *
*                                                                     *
*                CONNECT:Direct CONTROL BLOCKS PASSED:                *
*                                                                     *
*                            DMAER                                    *
*                            DMCPTR                                   *
*                            DMPTR                                    *
*                            DMDPTR                                   *
*                            DMDTR                                    *
*                            DMFPTR                                   *
*                            DMPSSR                                   *
*                            DMSFR                                    *
*                            DMSTDCR                                  *
*                            DMTCQIF                                  *
*                            DMTCQGT                                  *
*                            DMXOR                                    *
*                                                                     *
*     THESE CONTROL BLOCKS CAN BE FOUND IN SAMPLIB THAT IS            *
*     SHIPPED ON THE PRODUCT TAPE.                                    *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*          CONNECT:Direct MUST BE APF AUTHORIZED                      *
*                                                               CPUTIME
*      THIS ASSEMBLER PROGRAM EXECUTES AS A C:D-ZOS             CPUTIME
*      STATISTICS EXIT ROUTINE.  IT IS A SAMPLE EXIT THAT       CPUTIME
*      RETRIEVES CPU TIME FOR PROCESS STEPS AND ADDS IT TO      CPUTIME
*      THE END OF THE STATISTICS RECORD FOR LATER REPORTING     CPUTIME
*      OR WHATEVER PURPOSE THE CUSTOMER DESIRES.                CPUTIME
*                                                               CPUTIME
*      NOTE: ALTHOUGH 'PT' RECORDS FOR PROCESS TERMINATION      CPUTIME
*            IS INCLUDED IN THIS SAMPLE EXIT, THE TIME          CPUTIME
*            FOR 'PT' WILL NOT BE ACCURATE WHEN RUN TASKS       CPUTIME
*            ARE INVOLVED.  THIS IS BECAUSE RUN TASKS           CPUTIME
*            EXECUTE AS SEPARATE SUBTASKS (SEE CODE             CPUTIME
*            BELOW WHICH ADDS 'RT' TIME).  ALSO, THE            CPUTIME
*            SNODE PORTION OF A PROCESS DOES NOT CREATE         CPUTIME
*            'PT' RECORDS BECAUSE THE PROCESS ONLY EXISTS       CPUTIME
*            AT THE PNODE.                                      CPUTIME
*                                                               CPUTIME
*      NOTE: FOR DEBUGGING DISPLAYS, ADD A SYSOUT DD TO THE     CPUTIME
*            DTF WITH THE NAME MATCHING THE NAME ON THE         CPUTIME
*            START INSTRUCTION ABOVE.  &DMCSECT WILL BE         CPUTIME
*            RESOLVED TO THAT NAME.  THIS MODULE NAME MUST      CPUTIME
*            NOT BEGIN WITH 'CD'.                               CPUTIME
*                                                               CPUTIME
* ATTRIBUTES:    REENTRANT, REUSABLE, RELOCATABLE, REFRESHABLE        *
*                                                                     *
*                                                                     *
* CSECT NAME: TSTSMF2                                                 *
*                                                                     *
* DSECT NAME: SMFDSECT                                                *
*                                                                     *
*                                                                     *
* MACROS USED: SMFWTM                                                 *
*              TIME                                                   *
*              GETMAIN                                                *
*              FREEMAIN                                               *
*              SAVE                                                   *
*              RETURN                                                 *
*                                                                     *
* DDNAMES:                                                            *
*         NONE (WRITES TO SMF LOG DATASET VIA SMFWTM)                 *
*                                                                     *
*                                                                     *
* FUNCTION:                                                           *
*                                                                     *
*    THIS MODULE IS ENVOKED WHEN CONNECT:Direct WRITES TO THE         *
*    STATISTICS LOG.                                                  *
*                                                                     *
* ENTRY POINTS - TSTSMF2                                              *
*                                                                     *
*                                                                     *
* INPUT                                                               *
*                                                                     *
*    REGISTER 1 POINTS TO A 4 BYTE ADDRESS FOR THE FOLLOWING          *
*    PARAMETER: CONNECT:Direct STATISTICS RECORD                      *
*                                                                     *
*                                                                     *
* REGISTER                                                            *
*  EQUATES:                                                           *
*                R0     =     WORK REGISTER.                          *
*                R1     =     RDW POINTER (SMF RECORD)                *
*                R2     =     HOLD REGISTOR FOR STATS REC ADDRESS     *
*                R3     =     DSECT BASE.. FROM GETMAIN               *
*                R4     =     GETMAIN WORK AREA                       *
*                R5     =     WORK REGISTER.                          *
*                R6     =     WORK REGISTER.                          *
*                R7     =     WORK REGISTER.                          *
*                R8     =     WORK REGISTER.                          *
*                R9     =     WORK REGISTER.                          *
*                R10    =     WORK REGISTER.                          *
*                R11    =     TCA                                     *
*                R12    =     BASE REGISTER.                          *
*                R13    =     SAVEAREA POINTER.                       *
*                R14    =     RETURN REGISTER.                        *
*                R15    =     ENTRY POINT.                            *
*                                                                     *
*                                                                     *
*        NOTE: IN AN XA ENVIRONMENT, UNLESS "ALLOC.STORAGE=BELOW"     *
*              WAS SPECIFIED IN THE DTF INITIALIZATION PARMS, THE     *
*              EXIT SHOULD BE LINKED WITH AMODE=31 BECAUSE THE        *
*              CALLERS SAVE AREA AND THE STATISTICS RECORD WILL       *
*              BE LOCATED ABOVE 16 MEGABYTES.                         *
*                                                                     *
***********************************************************************
         DMCTR  DSECT=YES              MAP STATISTICS RECORDS   CPUTIME
         DMTCA  DSECT=YES              MAP TASK CONTROL AREA    CPUTIME
         DMRAT  DSECT=YES              MAP RESOURCE TABLE       1004557
         DMFSQCB DSECT=YES             MAP SECURITY CB          R356952
         DMXOR   DSECT=YES             MAP XOR records
         EJECT
D0       EQU   0                       DISP OF 0
D12      EQU   12                      DISP OF 12
D16      EQU   16                      DISP OF 16
L2       EQU   2                       LENGTH OF 2
L4       EQU   4                       LENGTH OF 4
         EJECT
***********************************************************************
*        PROGRAM START                                                *
***********************************************************************
&DMCSECT SCENTER BASE=(R12),GETMAIN=SMFDSECT#,                  1348110X
               AMODE=31,RMODE=24,LASTPTF=&LASTPTF,UID=&UID      1348110
&DMCSECT SCSTART WKAREA=WKAREA,WKAREA2=WKAREA2                  CPUTIME
         USING SMFDSECT,R13                                    1368488
         L     R2,0(,R1)                GET STAT REC ADDR       R117181
         USING CTR,R2                   MAP STAT RECORD         CPUTIME
         L     R11,4(,R1)               GET SQCB ADDR           R356952
         USING SQCB,R11                 MAP SQCB                R356952
         L     R11,SQTCA                MAP TCA                 R356952
         DROP  R11                      UNMAP SQCB              R356952
         USING TCA,R11                  MAP THE TCA             CPUTIME
         TIME      BIN
         ST    R0,SMFTIME               TIME FOR SMF RECORD
         ST    R1,SMFDATE               DATE FOR SMF RECORD
         L     R1,16                    A(CVT)                  \cb
         L     R1,196(,R1)              A(SMCA)                 \cb
         MVC   SYSID,16(R1)             SET SYSTEM ID           \cb
         MVC   SMFSYS(2),SMFRCD         SET SMF SYS/REC TYPE
*
*   Change the following B to NOP if you want CPUTIME           1004557
*
**===>   B     NCPUTIME      AJC08003   NO CPUTIME DESIRED      1004557
         L     R1,TARAT                 LOAD TABLE ADRS         1004557
         USING RAT,R1                   MAP THE TABLE           1004557
         TM    RAFLAG14,RAPLXMGR        IF PLEX MANAGER         1004557
         BO    NCPUTIME                  CPUTIME LOGIC INVALID  1004557
         DROP R1                                                1004557
*
         CLC   CTRTYPE,=CL2'PT'         IS THIS A PT REC?       CPUTIME
         BE    CPUTIME                  BRANCH IF YES           CPUTIME
         CLC   CTRTYPE,=CL2'CT'         IS THIS A CT REC?       CPUTIME
         BE    CPUTIME                  BRANCH IF YES           CPUTIME
         CLC   CTRTYPE,=CL2'RT'         IS THIS A RT REC?       CPUTIME
         BE    CPUTIME                  BRANCH IF YES           CPUTIME
         CLC   CTRTYPE,=CL2'RJ'         IS THIS A RJ REC?       CPUTIME
         BNE   NCPUTIME                 BRANCH IF NOT           CPUTIME
CPUTIME  DS    0H                       DO CPU TIME WORK        CPUTIME
         XC    TIMEUSED,TIMEUSED                                CPUTIME
*                                                               CPUTIME
*     WE WILL GET THE CPU TIME IN MICROSECONDS FROM THE TCB,    CPUTIME
*     WRITE IT OUT WITH A DISPLAY AND APPEND IT TO THE DESIRED  CPUTIME
*     RECORDS.                                                  CPUTIME
*                                                               CPUTIME
*     A USER PROCESSING THESE ALTERED STAT RECORDS WOULD HAVE TOCPUTIME
*     KNOW THAT THE CPU TIME IS THE LAST 16 BYTES OF THE RECORD CPUTIME
*     AS 'CPUTIME=XXXXXXXX', WHERE XXXXXXXX IS IN BINARY FORMAT CPUTIME
*     REPRESENTING MICROSECONDS.                                CPUTIME
*                                                               CPUTIME
         TIMEUSED STORADR=TIMEUSED,LINKAGE=SYSTEM,CPU=MIC       CPUTIME
         CLC   CTRTYPE,=CL2'RT'         IS THIS A RT TERMINATION?PUTIME
         BNE   NORTIME                  BRANCH IF NOT           CPUTIME
         DISPLAY (C'&DMCSECT: LAST RT TIME=',TAWKAREA),(C,X),   1004557*
               USRINFO                                 AJC08003 CPUTIME
         DISPLAY (C'&DMCSECT: CURRENT TIME=',TIMEUSED),(C,X),   1004557*
               USRINFO                                 AJC08003 CPUTIME
*                                                               CPUTIME
*     SINCE THE RUN TASK IS A SEPARATE SUBTASK (TCB), CPU IS'NT CPUTIME
*     ACCOUNTED FOR IN THIS TIMEUSED CALL.  TAWKAREA CONTAINS   CPUTIME
*     THE TIMEUSED FROM THE SUBTASK.  TO ACCURATELY REFLECT CPU CPUTIME
*     ASSOCIATED WITH THE RUN TASK, THE VALUES MUST BE ADDED    CPUTIME
*     TOGETHER AND STORED IN 'TIMEUSED'.                        CPUTIME
*                                                               CPUTIME
         CLC   TAWKAREA,=D'0'          RT TIME ZERO?            CPUTIME
         BE    NORTIME                 YES, SKIP ADD OVERHEAD   CPUTIME
         LM    R0,R1,TIMEUSED          LOAD TIME VALUE          CPUTIME
         AL    R1,TAWKAREA+4           ADD LOW ORDER WORD       CPUTIME
         BC    B'1100',NOCARRY         SKIP IF NO CARRY         CPUTIME
         A     R0,=F'1'                ADJUST FOR CARRY         CPUTIME
NOCARRY  DS    0H                                               CPUTIME
         AL    R0,TAWKAREA             ADD HIGH ORDER WORD      CPUTIME
         STM   R0,R1,TIMEUSED          STORE RESULTS            CPUTIME
NORTIME  DS    0H                                               CPUTIME
*              USRINFO                                 AJC08003 CPUTIME
         DISPLAY (C'&DMCSECT: CPUTIME=',TIMEUSED,C', CTRTYPE=', 1004557*
               CTRTYPE,C', TAID=',TAID),(C,X,C,C,C,C),USRINFO   CPUTIME
*                                                               CPUTIME
*     NOW APPEND THE CPUTIME (BINARY) TO THE END OF THE RECORD. CPUTIME
*                                                               CPUTIME
         LH    R3,CTRECLN          GET LENGTH OF STAT RECORD    CPUTIME
         LA    R4,0(R3,R2)         POINT TO END OF CURR REC     CPUTIME
         MVC   0(8,R4),=C'CPUTIME=' MOVE IN EYECATCHER          CPUTIME
         MVC   8(8,R4),TIMEUSED    MOVE IN CPU TIME             CPUTIME
         LA    R3,16(,R3)          BUMP LENGTH BY 16            CPUTIME
         STH   R3,CTRECLN          UPDATE RECORD LENGTH         CPUTIME
NCPUTIME DS    0H                                               CPUTIME
*------------------------------------------------------Start-AJC08004-*
*        Start of STATEXIT section - Process 'XO' records             *
*---------------------------------------------------------------------*
         CLC   CTRTYPE,=CL2'XO'      @@ IS THIS A Trace On/Off Record?
         BNE   SMFEXIT                  NO, then ignore the record
         DISPLAY (C'&DMCSECT: XO Record found'),(C),USRINFO
         LR    R6,R2                    Copy R2 into R6
         USING XOR,R6                   MAP XOR  RECORD
         TM    XOFLG1,XOSESQ            Session=Q Specified ?
         BO    PXORREC                  Yes, process record
         TM    XOFLG1,XOSESR            Session=R Specified ?
         BO    PXORREC                  Yes, process record
         B     SMFEXIT                  NO, THEN IGNORE THE RECORD
*---------------------------------------------------------------------*
*        Issue WTO for XO record with MsgID = STRA035I or STRA036I    *
*                  and (LOCAL NODE)   MsgID = STRA010I or STRA009I    *
*---------------------------------------------------------------------*
PXORREC  DS    0H
         DISPLAY (C'&DMCSECT: Modify sessions'),(C),USRINFO
         MVC   WTO(WTO#),WTOMODEL
         MVC   CMDUSER(8),XOUID         Move in the command user
         LA    R8,8                     Set length for Display
       DISPLAY (C'&DMCSECT: issued by   = ',CMDUSER),(C,C),LEN=(,(R8)),*
               USRINFO
*--- PROCESS MSGID and SNODE
         MVC   CMDMSID,XOMSGID          FILL IN PROCESS MSGID
         CLC   CMDMSID,=CL8'STRA036I'   Was it a Quiesce CMD ?
         BE    SETQUI
         CLC   CMDMSID,=CL8'STRA010I'   Was it a local quiesce ?
         BNE   RESUME
SETQUI   MVC   CMDNAME,=CL3'QUI'        Move in the command name
         B     QUIESCE
RESUME   DS    0H
         CLC   CMDMSID,=CL8'STRA035I'   Was it a Resume CMD ?
         BE    SETRES
         CLC   CMDMSID,=CL8'STRA009I'   Was it a local Resume ?
         BNE   QUIESCE
SETRES   MVC   CMDNAME,=CL3'RES'        No, then move in RESume
QUIESCE  DS    0H
         DISPLAY (C'&DMCSECT: MSG ID      = ',XOMSGID),(C,C),USRINFO
         MVC   CMDNODE,XONODNAM  @@     FILL IN Node name for modify
         DISPLAY (C'&DMCSECT: Snode       = ',XONODNAM),(C,C),USRINFO
         CLC   CMDNAME,=CL3'XXX'        Was CMD sucessful ?
         BE    SMFEXIT                  No, then skip WTO
         CLC   XONODNAM,=CL16' '        Yes, then check nodename
         BNE   SETWTO                   not blank, then issue WTO
         MVC   CMDNODE,=CL16'** LOCAL-NODE **'
SETWTO   DS    0H
         WTO   MF=(E,WTO)
SMFEXIT  DS    0H                                      End   AJC08004
*   MOVE STAT RECORD TO SMF BUFFER
         LH    R1,0(,R2)                GET LENGTH OF STAT RECORD
*        CH    R1,=H'1006'              SEE HOW BIG THE RECORD R356952
         CH    R1,=Y(L'DMREC)           SEE HOW BIG THE RECORD R356952
         BH    USE1006                  IS - TOO BIG           i708600
         CH    R1,=H'1'                 SEE IF NEGATIVE OR 0   i708600
         BL    USE1006                     - TOO LOW           i708600
         B     MOVEREC                  OK - MOVE IT ALL       i708600
USE1006  DS    0H                       USE LEN OF 1006        i708600
*   IF HERE, THE LENGTH OF THE RECORD IS EITHER NEGATIVE OR    i708600
*   TOO BIG TO FIT IN THE STORAGE GETMAINED ABOVE.             i708600
*                                                              i708600
*   YOU CAN EITHER 1) CHANGE THE LENGTH OF THE MOVE TO 1006    i708600
*   BYTES BY USING THE "LH" INSTRUCTION BELOW OR, 2)           i708600
*   CHOOSE TO JUST EXIT THE PROGRAM BY COMMENTING OUT THE      i708600
*   "LH" INSTRUCTION BELOW AND UNCOMMENTING THE "B  GETOUT"    i708600
*   INSTRUCTION.                                               i708600
*                                                              i708600
*   OPTION 1.  ADJUST MOVE LENGTH TO 1006 BYTES.               i708600
*        LH    R1,=H'1006'                  LEN TO MOVE        R356952
         LH    R1,=Y(L'DMREC)               LEN TO MOVE        R356952
*   OPTION 2.  EXIT THE PROGRAM.                               i708600
*        B     GETOUT                   BAD LENGTH - EXIT PGM. i708600
MOVEREC  DS    0H                                              i708600
         LR    R15,R1                   REPLICATE FOR LONG MOVE
         LR    R5,R1                    SAVE LEN FOR LATER     i708600
         LA    R0,0(,R2)                POINT AT STAT RECORD
         LA    R14,DMREC                POINT AT TARGET ADDR
         MVCL  R14,R0                MOVE STATS REC TO SMF BUFF
****     LH    R1,0(,R2)       *****  REFRESH STATS REC LENGTH i708600
         LR    R1,R5                    LENGTH saved EARLIER   i708600
         AH    R1,RDWLEN                SET UP NEW RDW LENGTH
         STH   R1,SMFRDWLL              SET TOTAL SMF RECORD LENGTH
         XC    SMFRDWZZ,SMFRDWZZ        SET RDWZZ TO BINARY ZEROS
         LA    R1,SMFOUT                POINT AT SMF RECORD
         SMFWTM    (1)         AJC98272 WRITE SMF RECORD TYPE 248
         LR    R3,R15                   SAVE RETURN CODE
***********************************************************************
* THIS HAS NOT BEEN CODED JUST A NOTE TO PROGRAMER                    *
*                                                                     *
* TEST REGISTOR 15 FOR RETURN CODE AFTER SMFWMT                       *
* I HAVE SAVED THE RETURN CODE IN REG 3                               *
* VALID RETURN CODES ARE                                              *
*    REG 15 = 0  WRITE TO SMF LOG OK                                  *
*                                                                     *
*             4  NOT WRITTEN RECORD WILL NOT FIT IN SMF DATA SET      *
*             8  RDW LENGTH LESS THAN 18 BYTES                        *
*            16  SMF DATA SET "FULL"                                  *
*            20  SMF RECORD SUPPRESED                                 *
*                                                                     *
*    SEE PAGE 56, SMF MANUAL GC28-0706                                *
* LOAD RETURN CODE AND PASS TO CALLING PROGRAM                        *
***********************************************************************
GETOUT   DS    0H                       FREEMAIN AND EXIT      i708600
         SCRETURN RC=(R3)               FREEMAIN AND EXIT      QC19765
*QC19765 LR    R1,R13                   SET WORKAREA ADR IN R1  46497
*QC19765 L     R13,4(,R13)              POINT TO PREV SAVE      46497
*QC19765 ST    R3,16(,R13)              SAVE RC IN R15 LOCATION 46497
*QC19765 FREEMAIN  R,LV=SMFDSECT#,A=(1) FREE SAVE AREA          46497
*QC19765 DS    0H                       RETURN
*QC19765 LM    R14,R12,12(R13)          RESTORE THE REGISTERS   R117181
*QC19765 BSM   0,R14                    ..IF XA                 R117181
***********************************************************************
*   DEFINE DATA CONSTANTS                                             *
***********************************************************************
         DS    0F
*DWLEN   DC    Y(DMSREC-SMFOUT)         SMF HEADER LEN         R356952
RDWLEN   DC    Y(DMREC-SMFOUT)          SMF HEADER LEN         R356952
SMFRCD   DC    X'02F8'         AJC98272 SMF SYSTEM TYPE (ZOS) +
*                              AJC98272 RECORD TYPE (DEC '248', X'F8')*
CDID     DC    C'CD '
*                                                        Start AJC08004
WTOMODEL WTO   'CDXOR01X Modify Session = XXX issued by CCCCCCCC MSG=xx*
               xxxxxx Node=NNNNNNNNNNNNNNNN',ROUTCDE=(11),MF=L  46497
WTO#     EQU   *-WTOMODEL                                       46497
*                                                        End   AJC08004
***********************************************************************
*                                                                     *
*   DEFINE DSECT FOR SMF STATISTICS  RECORD (TYPE X'F8')     AJC98272 *
*   USER TYPE 248                                            AJC98272 *
*                                                                     *
***********************************************************************
SMFDSECT DSECT
         DS    9D                       SAVE AREA               46497
WKAREA   DS    D           DISPLAY MACRO WORKAREA               CPUTIME
WKAREA2  DS    8D          DISPLAY MACRO WORKAREA               CPUTIME
         DEBUG LINKAGE=(R10,DEBUG,DEBUG2)                       CPUTIME
DEBUG    DS    D           DISPLAY MACRO WORKAREA               CPUTIME
DEBUG2   DS    D           DISPLAY MACRO WORKAREA               CPUTIME
TIMEUSED DS    D                        TIMEUSED AREA           CPUTIME
         DS    1H
*                                                        Start AJC08004
WTO      WTO   'CDXOR01X Modify Session = XXX issued by CCCCCCCC MSG=xx*
               xxxxxx Node=NNNNNNNNNNNNNNNN',ROUTCDE=(11),MF=L
CMDNAME  EQU   WTO+4+26,3
CMDUSER  EQU   WTO+4+40,8
CMDMSID  EQU   WTO+4+53,8
CMDNODE  EQU   WTO+4+67,16
         DS    F
PACDEC   DS    D
ZONDEC   DS    D
NMBR     DS    CL9' '
PNUM     DS    CL8' '                                    End   AJC08004
PAD      DS    F
SMFOUT   EQU   *
SMFRDWLL DS    BL2'0'                   RECORD DESC WORD LENGTH (RDWLL)
SMFRDWZZ DS    BL2'0'                   RECORD DESC WORD FLAGS  (RDWZZ)
SMFSYS   DS    BL1'0'                   SYSTEM TYPE
SMFTYPE  DS    BL1'0'                   RECORD TYPE
SMFTIME  DS    XL4                      TIME
SMFDATE  DS    PL4                      DATE
SYSID    DS    CL4                      SYSTEM ID
*MSREC   EQU   *                        STATISTICS RECORD      R356952
DMREC    DS    CL2048                   STATSTICS RECORD AREA   1348110
SMFDSECT# EQU  *-SMFDSECT               LENGTH                  46497
         EJECT
***********************************************************************
*                                                                     *
*  MAINTENANCE:                                                       *
*                                                                     *
*  I708600 07-01-94: IF THERE IS AN INVALID STATISTICS RECORD         *
*     LC   LENGTH, THEN ONLY MOVE 1006 BYTES (THE SIZE OF THE         *
*          DMREC AREA).                                               *
*                                                                     *
* P46497  06/29/98 CLEANUP 'USING' FOR ASMA90 AND AMODE/RMODE         *
*         JEL                                                         *
*                                                                     *
* CPUTIME 01/15/2002 - ADD CPUTIME TO CT, PT, RT AND RJ RECORDS       *
*    TOP               (CAN BE TURNED OFF - SEE COMMENTS)             *
*                                                                     *
* 1004557 12/10/02 BYPASS CPUTIME LOGIC ON PLEX MANAGER AND COMMENT   *
*         JEL      DEBUGGING DISPLAYS.  CPUTIME IS ONLY VALID ON      *
*                  PLEX SERVERS OR STAND ALONE INSTANCES SINCE        *
*                  PROCESSES DO NOT RUN ON PLEX MANAGERS.             *
*                                                                     *
* TRAC*API 08/22/2006 Document R11 (TCA) register usage.              *
*         TOP                                                         *
*                                                                     *
* 1348110 09/05/07 Use SCENTER to create standard eye catcher.        *
*         JEL                                                         *
*                                                                     *
* 1368488 2008/03/04 ASMA307E error due to missing USING dropped      *
*         JEL        by SR1348110.                                    *
*                                                                     *
* QC16454 2010/05/19 Remove reference to obsolete mapping macros.     *
*         JEL                                                         *
*                                                                     *
* DGA_STD 01FEB2011  Change to standard SMP/E naming per IBM naming   *
*         SThompson  standards.                                       *
*                                                                     *
* QC19765 2011/12/13 Avoid possible S30A when RMODE(ANY) override is  *
* QC19822 JEL        used by using SCRETURN instead of FREEMAIN.      *
*                                                                     *
* R356952 2012/11/15 Avoid truncation of long records by increasing   *
* PM77776    JEL     length checked to match current maximum.         *
*                    Also, do not assume R11 points to TCA but set    *
*                    the address from the SQCB in the parameter list. *
*                                                                     *
* AJC98272 09/29/98 Change user SMF record type from 132 to 248.      *
*          (007)                                                      *
*                                                                     *
* AJC08003 01/03/08 Modified version of DMGSMF code provided by C:D   *
*                   Change CSECT name and Enable CPUTIME processing   *
*          (004)    Change &DMCSECT to USRINFO on all DISPLAY macros  *
*                                                                     *
* AJC08004 01/04/08 Add code to produce a WTO (CDXOR01X) whenever a   *
*                   XO stats record is passed for a Modify Sessions   *
*     (50 + 5 + 12) command.                                          *
*                                                                     *
***********************************************************************
         SCEND ,                                                1348110
