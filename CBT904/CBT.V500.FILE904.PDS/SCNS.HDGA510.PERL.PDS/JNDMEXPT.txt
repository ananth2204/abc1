#!/usr/bin/perl
# ndmdaily.pl - filter to convert ConnectDirect Unix Statistics file into NDM report format

# Here's an example of an input record broken up to make readable.
# STAR=20040826 10:45:07|PNAM=MVS2AS02|PNUM=60102|SSTA=20040826 10:45:06|
# STRT=20040826 10:45:06|STOP=20040826 10:45:07|STPT=20040826 10:45:07|SELA=00:00:01|SUBM=SCNSXMT@SWPNDM01|
# SNOD=SWPGIPAS02|CCOD=0|RECI=CTRC|RECC=CAPR|MSGI=SCPA000I|MSST=Copy step successful.|STDL=Thu Aug 26 10:45:07 2004|
# CSDS=Thu Aug 26 10:45:06 2004|LCCD=0|LMSG=SCPA000I|OCCD=0|OMSG=SCPA000I|PNAM=MVS2AS02|PNUM=60102|
# SNAM=STEP01|SBND=SWPNDM01|SBID=SCNSXMT|PNOD=SWPNDM01|SNOD=SWPGIPAS02|LNOD=S|FROM=P|XLAT=Y|SCMP=N|ECMP=Y|ECPR=9.79|
# ECTP=ECZ|ZLVL=1|ZWIN=13|ZMEM=4|OERR=N|CKPT=N|LKFL=N|RSTR=N|RUSZ=4096|PACC=|SACC=|PPMN=PRTINFO|SFIL=SYS2.DOCUMENT|
# SDS1=S|SDS2= |SDS3= |SBYR=696960|SFSZ=0|SRCR=8712|SBYX=68262|SRUX=0|SVSQ=0|SVCN=0|SVOL=|DFIL=/home/tcieri/prts.dat|
# PPMN=PRTINFO|DDS1=R|DDS2= |DDS3= |DBYW=400752|DRCW=8712|DBYX=68262|DRUX=17|DVSQ=0|DVCN=0|DVOL=|ICRC=N|PCRC=N

# Here is the header and an example of an output record.
#    USERID      PROC #   PROC NAME    STEP NAME    EXCEPTION INFORMATION
#    ******      ******   *********    *********    *****************************************************************
#
#    PRODJOB     81579    O0405P01     PRECHECK     11/01/2012 PNODE = SWPNDM01          SNODE = SWPEAET01
#                                                   TRANSMISSION TIME = 0:00:00.25       COMPLETION CODE = 00000000
#                                                   COPY STEP SUCCESSFUL.
#                                                   SRC DSNAME IS D0370.CUSTOM.JJ370FTR.G1118V00
#                                                   DEST DSNAME IS /apps/swp/ndmlanding/etltlm/SrcFiles/Pos/FT/JJ370FTR.TXT
#                                                        SENDING NODE ==> SWPNDM01         RECEIVING NODE ==> SWPEAET01
#                                                        BYTES READ   ==> 168              BYTES WRITTEN  ==> 149
#                                                        RUs   READ   ==> 1                RUs   WRITTEN  ==> 0
#                                                        RECS READ    ==> 5                RECS WRITTEN   ==> 5
#                                                        BYTES SENT   ==> 154              BYTES RECEIVED ==> 154
#                                                        COMPRESSION% ==> 8.3              COMPRESSION%   ==> -3.2
#                                                        VOLSER       ==> STGS42           VOLSER         ==>
#    -----------------------------------------------------------------------------------------------------------------------

# Change Log:
#
# 2009-012  Truncate the Procname at 8 characters (PNAM). Also, add a subroutine to format the byte count to include commas.
# 2012-314  Changed upper case 'EQ' and 'NE' to lower case for z/OS.
#

##
## Check syntax
##
## If the offset of the last argument is not 0, in other words if the number of arguments is not exactly 1,
## then print the text that appears between << and ARGERR
if ($#ARGV != 0){
   print <<ARGERR;
***
$0:
Fatal Error: Wrong number of arguments.

Usage:
       $0 input_file

Parameters:
   input_file is any file containing NDM logs in the following format
      each line is a record with fields delimited by vertical bar
      each field is a label=value pair
      the following labels are processed:
         SBID, PNUM, PNAM, SNAM, RECI, STRT, STPT, XMIT, PNOD, ECPR, CTYP,
         RUSZ, SBYX, CCOD, MSGI, STAR, SCMP, ECMP

ARGERR
   exit;
}

$ifilename = $ARGVÝ0¨;                                  # First command line argument is input file
if (! -e $ifilename){
   print "Fatal Error: Could not find input file $ifilename\n";
   exit;
}
open IFILE, "<$ifilename" || die "Fatal Error opening input file: $ifilename.\n";

# Determine the name of the server we are running on
$cdnode = `uname -n | /bin/tr 'Ý:lower:¨' 'Ý:upper:¨'`;
# Print the Header first
print "                                                    Connect:Direct Exception Report  (ARS00003)       \n";
print "                                                           Node = $cdnode                      \n";
print "          \n";
print "   USERID     PROC #   PROC NAME  STEP NAME   EXCEPTION INFORMATION                                          \n"   ;
print "   ******     ******   *********  *********   ************************************************************************************** \n";
print "\n";

# Read each line in, process and output immediately.
while (<IFILE>){
   if ((m/RECI\=CTRC/) or                               # Don't bother processing fields that do not contain RECI=CTRC
       (m/RECI\=RJED/) or                               #                                                 or RECI=RJED
       (m/RECI\=RTED/) or                               #                                                 or RECI=RTED
       (m/RECI\=USEC/)){                                #                                                 or RECI=USEC
      chomp;                                            # Remove the newline
      @fields=split/\|/;                                # Split record into fields on "|" save in the array named @fields
      foreach $field (@fields){                         # For each | separated field
         ($flabel, $fvalue) = split(/=/, $field, 2);    # Split it into label=value pairs

         # Do some field specific processing.

         $H{$flabel}=$fvalue;                           # And add an entry into hash indexed by label & containing value
      }
      if ($H{RECI} eq 'CTRC'){
        if ($H{PNOD} eq $H{SNOD}){$lclnod = $H{SNOD};}
      }
      if (($H{CCOD} ne '0') && ($H{CCOD} ne '2')){

      # Now do the processing that requires data in multiple fields since you'll finally have it here.

      # Format the date for printing
      $styrs =  substr($H{STAR}, 0, 4);
      $stmos =  substr($H{STAR}, 4, 2);
      $stday =  substr($H{STAR}, 6, 2);
      $H{TIME} = substr($H{STAR}, 9, 8);
      $H{DATE} = $stmos . "/" . $stday . "/" . $styrs ;

      # Change record type (RECI) for readability (i.e. COPY, RUNJ, RUNT etc.)
      if ($H{RECI} eq 'CTRC'){$H{RECT}="** COPY **";}
      if ($H{RECI} eq 'RJED'){$H{RECT}="** RUNJOB **";}
      if ($H{RECI} eq 'RTED'){$H{RECT}="** RUNTASK **";}
      if ($H{RECI} eq 'USEC'){$H{RECT}="** USER SEC **";}

      # Check for errors.

      # SBID and first half of SUBM should match
      ($sbid2, $trash) = split(/@/, $H{SUBM});
      if ($sbid2 ne $H{SBID}){print STDERR "Warning: SBID and first half of SUBM do not match.\n";}

      # SCMP and ECMP should never both be 'Y'.
      if (($H{SCMP} eq 'Y') && ($H{ECMP} eq 'Y')){print STDERR "Warning: SCMP and ECMP are both 'Y'.\n";}


      # Now print individual record.
      print "  ";                                      # Leading 4 spaces

      $tmp=sprintf("%8s",  $H{SBID}); print "$tmp ";
      $tmp=sprintf("%9s", &commify($H{PNUM})); print "$tmp ";
      $tmp=sprintf("%10.8s",  $H{PNAM}); print "$tmp ";
      $tmp=sprintf("%10s",  $H{SNAM}); print "$tmp ";

      # Now determine Sending and Receiving Nodes

      if ($H{FROM} eq 'P'){$H{XNOD} = $H{PNOD}; $H{RNOD} = $H{SNOD};}
      if ($H{FROM} eq 'S'){$H{XNOD} = $H{SNOD}; $H{RNOD} = $H{PNOD};}
      if ($H{RECI} eq 'USEC'){
         $H{XNOD} = $H{SBND};
         if ($H{SNOD} ne $H{SBND}){$H{PNOD} = $H{SBND}; $H{RNOD} = $H{SNOD};}
         if ($H{SNOD} eq $H{SBND}){$H{PNOD} = $lclnod; $H{RNOD} = $H{PNOD};}
       }

      # Now print the transmission info.

      print "   $H{RECT} \n"                                            ;
      print "                                              $H{DATE} $H{TIME} PNODE = ";
      $tmp=sprintf("%-16s",  $H{PNOD}); print "$tmp ";
      print "SNODE = $H{SNOD} \n";
      print "                                              COMPLETION CODE = ";
      $tmp=sprintf("%08s",  $H{CCOD}); print "$tmp ";
      print "                  MSG ID = ";
      $tmp=sprintf("%8s",  $H{MSGI}); print "$tmp ";
      print "\n";
      print "                                              SENDING NODE ==> ";
      $tmp=sprintf("%-16s",  $H{XNOD}); print "$tmp ";
      print "\n";
      print "                                              SRC DSNAME   ==> ";
      $tmp=sprintf("%8s",  $H{SFIL}); print "$tmp ";
      print "\n";
      print "                                              RECEIVING NODE ==> ";
      $tmp=sprintf("%-16s",  $H{RNOD}); print "$tmp ";
      print "\n";
      print "                                              DEST DSNAME    ==> ";
      $tmp=sprintf("%8s",  $H{DFIL}); print "$tmp ";
      print "\n";
      print "                                              ";
      $tmp=sprintf("%8s",  $H{MSST}); print "$tmp ";
      print "\n";
      print "   --------------------------------------------------------------------------------------------------------------------------------- \n";
      }

      foreach $field (keys(%H)){                         # Be sure to reinitialize all fields.
         $H{$field}="";
      }
   }
}
sub commify {
    local($_) = shift;
    1 while s/¬(-?\d+)(\d{3})/$1,$2/;
    return $_;
}
