* ********************************************************************
* Licensed Materials - Property of IBM
*
* 5655-X01 Copyright IBM Corp. 2011
*
* All Rights Reserved
*
* US Government Users Restricted Rights - Use, duplication or
* disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
* ********************************************************************
TSTXSIZP TITLE '- SAMPLE STAGE 1-2 SUBMIT EXIT - 1.0.0'         46497
TSTXSIZP START ,                                                46497
         DGA$SAMP ,                                            DGA_STD
         COPY  DMGBLS
         DMOS                                                   46497
         LCLC  &LASTPTF,&UID
&LASTPTF SETC  'R000000'
&UID     SETC  ''       USE UP TO 8 CHARACTERS FOR LOCAL MOD
**********************************************************************
*                                                                    *
*                            CONNECT:Direct PROLOG                   *
*                                                                    *
* FUNCTION:       CONNECT:Direct STAGE 1-2 SUBMIT EXIT INTERFACE     *
*                                                                    *
* MODULE NAME:    TSTXSIZP (Connect:Direct SUBMIT exit)              *
*                                                                    *
* DATE WRITTEN:   April 2001                                         *
*                                                                    *
* ATTRIBUTES:     RENT,REUS (STAGE 2)                                *
*                 NORENT,NOREUS (STAGE 1)                            *
*                                                                    *
* INPUT:          R1->TCQE: THE CONNECT:Direct PROCESS CONTROL BLOCK *
*                                                                    *
* DESCRIPTION:   This assembler program executes as a Connect:Direct *
*                exit routine. It is intended to execute as a stage  *
*                (2) SUBMIT exit. It is designed to check the process*
*                AND issue DISPLAYs to document the step type and    *
*                size of the process. It is intended to be a tool to *
*                aid in determining the proper CISIZE for the VSAM   *
*                TCQ dataset. Ideally, the TCFQ should fix an entire *
*                process in one CI.                             Tony *
*                                                                    *
*                 TO VIEW OUTPUT FROM DISPLAY, ALLOCATE DDNAME       *
*                 "SUBDSN" IN THE ADDRESS SPACE WHERE THIS PROGRAM   *
*                 WILL EXECUTE.                                      *
*                                                                    *
* Changes 2007-345 Changes with C:D z/OS v4.6. Use new DD of USRINFO *
*                 for DISPLAY requests instead of SUBDSN.       Tony *
*         2007-345 aded code to accomodate for larger format process *
*                 > 64K. Search on TCQTCX (4) occurrances.      Tony *
*                                                                    *
**********************************************************************
         EJECT
         DMTCQE DSECT=YES
         EJECT
         DMTCQSH DSECT=YES
         EJECT
         DMSDESCR DSECT=YES
         EJECT
         DMDDESCR DSECT=YES
         EJECT
*---------------------------------------------------------------------*
*        LOCAL VARIABLE SECTION                                       *
*---------------------------------------------------------------------*
DSECT    DSECT
         DS   18F                     OS SAVE AREA
         DMWKAREA
 DEBUG LINKAGE=(R10,DEBUG1,DEBUG2)
DEBUG1   DS     D
DEBUG2   DS     D
PACDEC   DS     D
ZONDEC   DS     D
ZONCNT   DS     D
TMPCNT   DS     H
PSIZE    DS     H
TSIZE    DS     F
DSECT#   EQU  *-DSECT                 LENGTH OF DSECT
*-------------------------------------------------------------------*
*     MAINLINE                                                      *
*-------------------------------------------------------------------*
&DMCSECT SCENTER BASE=(R12),GETMAIN=DSECT#,                     1348110X
               AMODE=31,RMODE=24,LASTPTF=&LASTPTF,UID=&UID      1348110
&DMCSECT SCSTART WKAREA=WKAREA,WKAREA2=WKAREA2                  1348110
         USEBASE DSECT,R13           ADDRESSABILITY             1348110
         L     R3,0(,R1)             LOAD TCQE ADDR
         USEBASE TCQE,R3
         LA    R2,0                  SET GOOD RC
         ST    R2,TQRTNCD            STORE RC
         LH    R11,TQSTMTN          @GET NUMBER OF STATEMENTS IN PROC
         EJECT
*-------------------------------------------------------------------*
*     DISPLAY some pertinent process information from the TCQE      *
*-------------------------------------------------------------------*
         SR      R9,R9               Zero register
         STH     R9,TMPCNT           Store temporary step count
         DISPLAY (C'&DMCSECT: Proc name   = ',TQPROCNM),(C,C),USRINFO
**       DISPLAY (C'&DMCSECT: Proc #      = ',TQPROCNO),(C,X),USRINFO
**       DISPLAY (C'&DMCSECT: Step name   = ',TQCSTEP),(C,X),USRINFO
         XR      R8,R8               Clear R8
         LA      R8,1616             account for Hdr size
         ST      R8,TSIZE            Store Proc size
         CVD     R8,PACDEC           Convert to packed decimal
         UNPK    ZONDEC,PACDEC+4(4)  unpack
         OI      ZONDEC+7,x'F0'      take care of sign field
         CVD     R11,PACDEC          Convert to packed decimal
         UNPK    ZONCNT,PACDEC+4(4)  unpack
         OI      ZONCNT+7,x'F0'      take care of sign field
*>x      DISPLAY (C'&DMCSECT: # statements= ',TQSTMTN,                 +
               C' Type Hdrx  size ',TSIZE),(C,X,C,X),USRINFO
         DISPLAY (C'&DMCSECT: # statements= ',ZONCNT,                  +
               C' Type Hdr  size ',ZONDEC),(C,C,C,C),USRINFO
         DISPLAY (C'&DMCSECT: Priority    = ',TQPRTY),(C,X),USRINFO
         DISPLAY (C'&DMCSECT: Psess cls BY= ',TQPRSBYT,                +
               C'   BI= ',TQPRSBIT),(C,X,C,X),USRINFO
         DISPLAY (C'&DMCSECT: P    Node   = ',TQPNODE),(C,C),USRINFO
         DISPLAY (C'&DMCSECT: S    Node   = ',TQSNODE),(C,C),USRINFO
*-------------------------------------------------------------------*
*     Move onto the TCQSH Control Block                             *
*-------------------------------------------------------------------*
         XR    R7,R7                 CLEAR R7
         ICM   R7,B'0011',TQCSPRD    GET OFFSET TO FIRST STATEMENT
         TM    TQFLAGA,TQGT64K       IS NEW FORMAT               TCQTCX
         BNO   OLDFMT                BRANCH IF NOT               TCQTCX
         SLL   R7,4                  X 16                        TCQTCX
OLDFMT   DS    0H                                                TCQTCX
         LR    R4,R3                 (TCQE)
         AR    R4,R7                 ADD TO TCQE ADDRESS
PROCLOOP EQU     *
         USEBASE TCQSH,R4            POINT TO STEP HEADER
NEXTSTEP DS      0H
         CLC     TQSTMTN,=H'1'      @More than One step?
         BNP     EXIT               @NO, Then we are done.
*        STH     R11,TMPCNT          STORE STEP COUNT
         LH      R9,TMPCNT           Load temporary step coutn
         LA      R9,1(R9)            Increment step counter
         STH     R9,TMPCNT           STORE STEP COUNT
         XR      R8,R8               Clear R8
         CLC     TSHFUNCD,=X'0050'   IS THIS A COPY?
         BNE     NOCOPY              NO, GO to NEXT Step
         AH      R8,=H'1024'         Set length to 1024
NOCOPY   DS      0H
         CLC     TSHFUNCD,=X'0054'   IS THIS A RUNJOB ?
         BNE     NOSUBM              NO, GO to NEXT Step
         AH      R8,=H'176'          Set length to 176
NOSUBM   DS      0H
         CLC     TSHFUNCD,=X'0058'   IS THIS A SUBMIT ?
         BNE     NORUNJ              NO, GO to NEXT Step
         AH      R8,=H'176'          Set length to 176 (can be bigger)
         AH      R8,TQSUBLNG         account for DSN len in SUBMT
*>Diag   DISPLAY (C'&DMCSECT: Rel Steps',TMPCNT,                       +
               C'      Type ',TSHFUNCD,                                +
               C' DSN= ',TQSUBLNG),(C,X,C,X,C,X),USRINFO
NORUNJ   DS      0H
         CLC     TSHFUNCD,=X'0059'   IS THIS A RUNTASK?
         BNE     NORUNT              NO, GO to NEXT Step
         AH      R8,=H'128'          Set length to 128
NORUNT   DS      0H
         CLC     TSHFUNCD,=X'0501'   IS THIS A GOTO ?
         BNE     NOGOTO              NO, GO to NEXT Step
         AH      R8,=H'96'           Set length to 96
NOGOTO   DS      0H
         CLC     TSHFUNCD,=X'0502'   IS THIS A IF ?
         BNE     NOIF                NO, GO to NEXT Step
         AH      R8,=H'208'          Set length to 208
NOIF     DS      0H
         CLC     TSHFUNCD,=X'0504'   IS THIS A EXIT ?
         BNE     NOEXIT              NO, GO to NEXT Step
         AH      R8,=H'96'           Set length to 96
NOEXIT   DS      0H
         STH     R8,PSIZE            STORE PROC SIZE
         L       R15,TSIZE           Load running total
         AR      R15,R8              Add Step size total
         ST      R15,TSIZE           Store running total
         CVD     R8,PACDEC           Convert to packed decimal
         UNPK    ZONDEC,PACDEC+4(4)  unpack
         OI      ZONDEC+7,x'F0'      take care of size
         CVD     R9,PACDEC           Convert to packed decimal
         UNPK    ZONCNT,PACDEC+4(4)  unpack
         OI      ZONCNT+7,x'F0'      take care of size
*>x      LH      R8,PSIZE            Store running total
*>Diag   DISPLAY (C'&DMCSECT: Rel Stepx',TMPCNT,                       +
               C'      Type ',TSHFUNCD,                                +
               C' size ',TSHRECLN),(C,X,C,X,C,X),USRINFO
         DISPLAY (C'&DMCSECT: Rel Step ',ZONCNT,                       +
               C'   Type ',TSHFUNCD,                                   +
               C' size ',ZONDEC),(C,C,C,X,C,C),USRINFO
**       DISPLAY (C'&DMCSECT: (Diag) ',(R8),(R15),TSIZE),              +
               (C,X,X,X),USRINFO
         CVD     R15,PACDEC          Convert to packed decimal
         UNPK    ZONDEC,PACDEC+4(4)  unpack
         OI      ZONDEC+7,x'F0'      take care of size
         L       R15,TSIZE           Store running total
**       DISPLAY (C'&DMCSECT: (Dia2) ',(R8),(R15),ZONDEC),             +
               (C,X,X,C),USRINFO
         AH      R4,TSHRECLN        @Yes, point to next TCQSH
         BCT     R11,PROCLOOP       @Yes, then check next step
*>x      DISPLAY (C'&DMCSECT: End of Processx',                        +
               C'          Total size = ',TSIZE),(C,C,X),USRINFO
         DISPLAY (C'&DMCSECT: End of Process ',                        +
               C'          Total size = ',ZONDEC),(C,C,C),USRINFO
EXIT     DS      0H
         L       R15,TQRTNCD         LOAD RC
*     SCRETURN WILL FREE SCENTER STORAGE AND RETURN TO CALLER
         SCRETURN RC=(R15)
         END
