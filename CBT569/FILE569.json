{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012357000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE569.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE569.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x05'", "DS1TRBAL": "b'\\x86\\x02'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04:\\x00\\x0e\\x04;\\x00\\x02\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02\\x11/\\x01\\x02\\x11/\\x13X\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-04-22T00:00:00", "modifydate": "2002-04-22T13:58:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 445    FILE:  569\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT445.FILE569\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 5 MEMBERS COUNTED; CUMULATIVE SIZE IS 758 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   04/22/02    13:58:32    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$NOTES": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x16\\x01\\x02\\x11/\\x01\\x02\\x11/\\x138\\x00<\\x00<\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-04-22T00:00:00", "modifydate": "2002-04-22T13:38:16", "lines": 60, "newlines": 60, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: Old TSO Games!\nDate: Mon, 22 Apr 2002 09:19:28 -0400\nFrom: \"Thornton, Dick\" <rthornton@trigon.com>\nTo: 'Sam Golob' <sbgolob@attglobal.net>\n\nHi Sam,\n\nI built a load library with those mainframe games I told you\nabout.  I think the games are all written in either Fortran or PL/I\n- old freebie versions before IBM began charging for compilers.\nTwo of them abend with a message \"IEHOPOA not found\" when I try to\nrun them.  I included them anyway, as they were good games, and you\nmay be able to come up with whatever it is they need.\n\nI found that when you concatenate the PL/1-F run time library\n(the IH****** members from File 092) all these games run fine. (SBG)\n\nI think we used to have a FORTRAN run-time library in the linklist\nhere years ago, but it no longer exists.  (The Fortran Library is\nFile 326 of the CBT Tape.)\n\nThe games were outlawed by management here years ago, but I learned\nthat a co-worker had captured them and renamed them to appear to be\nproduction programs based on our corporate naming standards.  I have\nleft the names as-is, but you might want to rename them.  The games\nare:\n\n     ZNC1010P is BLACKJACK\n     ZNC1020P is TTT (Three-dimensional Tic-Tac-Toe) (needs PL/1-F)\n     ZNC1030P is TARGET\n     ZNC1040P is EMPEROR\n     ZNC1050P is MASTERMIND (needs PL/1-F)\n     ZNC1060P is COFFEE\n     ZNC1070P is FOOTBALL\n     ZNC1080P is STARTREK\n     ZNC1110P is a game with numbers in an oval shaped display\n\nI also found a set of rules that include BLACKJACK, TTT, TARGET,\nCOFFEE, FOOTBALL, and STARTREK.  It is in one of the PDS's I sent\nearlier, but I will send a copy with this email, as well.  I am\nsending it as a binary EBCDIC file, so let me know if you need it\nsome other way.\n\nTo execute the games, I found they work by issuing a CALL for\nthem at the TSO READY prompt. In ISPF you'd have to go to the\ncommand screen or else precede the CALL with \"TSO\". Anyway,\nexcept for STARTREK, the execute command is:\n\n     \"CALL \"BC0THOR.TST.GAMES(ZNC1020)\"\n\nWhich works for all the games except STARTREK (ZNC1080P), which\nrequires that you first allocate two files:\n\n     \"ALLOC F(FT05F001) DA(*)\"\n     \"ALLOC F(FT06F001) DA(*)\"\n     \"CALL 'userid.FILE568.PDS(ZNC1080P)'\"\n\nThanks,\nDick Thornton\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE568": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x008\\x01\\x01\\x02_\\x01\\x02\\x11/\\x13W\\x00<\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2002-04-22T13:57:38", "lines": 60, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 568 is a load module library which is a set of old TSO    *   FILE 568\n//*           computer games.  This library was sent in by Dick     *   FILE 568\n//*           Thornton.  The games are circa 1980 or so, and if     *   FILE 568\n//*           you include the run-time PL/1-F library from File     *   FILE 568\n//*           092 in ISPLLIB or the link list, or get to it some    *   FILE 568\n//*           other way, all these games should work fine on        *   FILE 568\n//*           current MVS systems.                                  *   FILE 568\n//*                                                                 *   FILE 568\n//*           emails:  (check to see which are relevant):           *   FILE 568\n//*               dickthor@hotmail.com                              *   FILE 568\n//*               cthornton@swva.net                                *   FILE 568\n//*               rthornton@trigon.com                              *   FILE 568\n//*                                                                 *   FILE 568\n//*           Please see member $$$NOTES and member GAMERULE in     *   FILE 568\n//*           File 569 for further information.  Some of the        *   FILE 568\n//*           games have built-in rules instructions.               *   FILE 568\n//*                                                                 *   FILE 568\n//*      Additional Notes....                                       *   FILE 568\n//*                                                                 *   FILE 568\n//*      These games were outlawed by management here years ago,    *   FILE 568\n//*      but I learned that a co-worker had captured them and       *   FILE 568\n//*      renamed them to appear to be production programs based     *   FILE 568\n//*      on our corporate naming standards.  I have left the        *   FILE 568\n//*      names as-is, but you might want to rename them.  The       *   FILE 568\n//*      games are:                                                 *   FILE 568\n//*                                                                 *   FILE 568\n//*           ZNC1010P is BLACKJACK                                 *   FILE 568\n//*           ZNC1020P is TTT (Three-dimensional Tic-Tac-Toe)       *   FILE 568\n//*                    (needs PL/1-F library)                       *   FILE 568\n//*           ZNC1030P is TARGET                                    *   FILE 568\n//*           ZNC1040P is EMPEROR                                   *   FILE 568\n//*           ZNC1050P is MASTERMIND (needs PL/1-F library)         *   FILE 568\n//*           ZNC1060P is COFFEE                                    *   FILE 568\n//*           ZNC1070P is FOOTBALL                                  *   FILE 568\n//*           ZNC1080P is STARTREK                                  *   FILE 568\n//*           ZNC1110P is a game with numbers in an oval shaped     *   FILE 568\n//*                    display (KALAH)                              *   FILE 568\n//*                                                                 *   FILE 568\n//*      I also found a set of rules that include BLACKJACK,        *   FILE 568\n//*      TTT, TARGET, COFFEE, FOOTBALL, and STARTREK.  It is in     *   FILE 568\n//*      one of the PDS's I sent earlier, but I will send a copy    *   FILE 568\n//*      with this email, as well.  It is member GAMERULE of        *   FILE 568\n//*      File 569.                                                  *   FILE 568\n//*                                                                 *   FILE 568\n//*      To execute the games, I found they work by issuing a       *   FILE 568\n//*      CALL for them at the TSO READY prompt.  In ISPF you'd      *   FILE 568\n//*      have to go to the command screen or else precede the       *   FILE 568\n//*      CALL with \"TSO\".  Anyway, except for STARTREK, the         *   FILE 568\n//*      execute command is:                                        *   FILE 568\n//*                                                                 *   FILE 568\n//*           \"CALL \"userid.FILE568.PDS(ZNC1020)\"                   *   FILE 568\n//*                                                                 *   FILE 568\n//*      Which works for all the games except STARTREK              *   FILE 568\n//*      (ZNC1080P), which requires that you first allocate two     *   FILE 568\n//*      files:                                                     *   FILE 568\n//*                                                                 *   FILE 568\n//*           \"ALLOC F(FT05F001) DA(*)\"                             *   FILE 568\n//*           \"ALLOC F(FT06F001) DA(*)\"                             *   FILE 568\n//*           \"CALL 'userid.FILE568.PDS(ZNC1080P)'\"                 *   FILE 568\n//*                                                                 *   FILE 568\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE569": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00)\\x01\\x01\\x02_\\x01\\x02\\x11/\\x13U\\x00\\x13\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2002-04-22T13:55:29", "lines": 19, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 569 is an FB-80 library which contains rules for the      *   FILE 569\n//*           TSO computer games in the load library in File 568.   *   FILE 569\n//*           This library was sent in by Dick Thornton.            *   FILE 569\n//*                                                                 *   FILE 569\n//*           The games are circa 1980 or so, and if you include    *   FILE 569\n//*           the run-time PL/1-F library from File 092 in          *   FILE 569\n//*           ISPLLIB or the link list, or get to it some other     *   FILE 569\n//*           way, all these games should work fine on current      *   FILE 569\n//*           MVS systems (04/02).                                  *   FILE 569\n//*                                                                 *   FILE 569\n//*           emails:  (check to see which are relevant):           *   FILE 569\n//*               dickthor@hotmail.com                              *   FILE 569\n//*               cthornton@swva.net                                *   FILE 569\n//*               rthornton@trigon.com                              *   FILE 569\n//*                                                                 *   FILE 569\n//*           Please see member $$$NOTES and member GAMERULE in     *   FILE 569\n//*           File 569 for further information.  Some of the        *   FILE 569\n//*           games have built-in rules instructions.               *   FILE 569\n//*                                                                 *   FILE 569\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GAMERULE": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00$\\x01\\x02\\x11/\\x01\\x02\\x11/\\x13&\\x02_\\x02\\\\\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-04-22T00:00:00", "modifydate": "2002-04-22T13:26:24", "lines": 607, "newlines": 604, "modlines": 0, "user": "SBGOLOB"}, "text": "***********************************************************************\nZNC1010 IS BLAKJACK          (member ZNC1010P)\nZNC1020 IS TTT3D             (member ZNC1020P)\nZNC1030 IS TARGET            (member ZNC1030P)\nZNC1040 IS EMPEROR           (member ZNC1040P)\nZNC1050 IS MASMIND           (member ZNC1050P)\nZNC1060 IS COFFEE            (member ZNC1060P)\nZNC1070 IS FUTBOL            (member ZNC1070P)\nZNC1080 IS STARTREK          (member ZNC1080P)\nZNC1110 IS KALAH             (member ZNC1110P)\n***********************************************************************\n\n\n***********************************************************************\n**                                                                   **\n**                 ***** RULES FOR STARTREK *****                    **\n**                                                                   **\n***********************************************************************\n***********************************************************************\n  COMMANDS:\n\n     SR = SHORT RANGE SENSOR SCAN\n     LR = LONG RANGE SENSOR SCAN\n     PH = FIRE PHASERS\n     PT = FIRE PHOTON TORPEDOES\n     DA = DAMAGE CONTROL REPORT\n     DE = SELF-DESTRUCT\n     AB = ABANDON SHIP\n     SU = ACTIVATE ENERGY SHIELDS\n     SD = DEACTIVATE ENERGY SHIELDS\n     DR = FIRE EXPERIMENTAL DEATH RAY\n     TP = ACTIVATE TELEPORTATION UNIT\n     IM = ENGAGE IMPULSE ENGINES\n     RE = MAINTAIN POSITION\n     MO = MOVE (WARP ENG.)\n     WA = SET WARP FACTOR\n     DO = DOCK\n     NG = NEW GAME\n     CH = SHOW STAR CHART\n     LO = LOG ENTRY\n     BC = BATTLE COMPUTER\n     RA = CURRENT RATING\n     QU = QUIT\n\n\n\n     THE GALAXY IS DIVIDED INTO 64 QUADRANTS WITH\n  THE FOLLOWING COORDINATES:\n   Y-- 1   2   3   4   5   6   7   8   -\n     --------------------------------- X\n    :   :   :   :   :   :   :   :   :   1\n     --------------------------------- -\n    :   :   :   :   :   :   :   :   :   2\n     --------------------------------- -\n    :   :   :   :   :   :   :   :   :   3\n     --------------------------------- -\n    :   :   :   :   :   :   :   :   :   4\n     --------------------------------- -\n    :   :   :   :   :   :   :   :   :   5\n     --------------------------------- -\n    :   :   :   :   :   :   :   :   :   6\n     --------------------------------- -\n    :   :   :   :   :   :   :   :   :   7\n     --------------------------------- -\n    :   :   :   :   :   :   :   :   :   8\n     --------------------------------- -\n  EACH QUADRANT IS DIVIDED INTO 100 SECTORS.\n\n\n\n   ::: AVAILABLE RESOURCES :::\n\n\n\n  WARP ENGINES:\n\n  COURSE = A REAL NUMBER FROM 0. TO 12..\n NUMBERS CORRESPOND TO THE DIGITS ON A CLOCK (I.E.\n 2.5 INDICATES THE DIRECTION THAT THE HOUR HAND\n POINTS WHEN IT IS 2:30)\n\n\n  WARP FACTOR = A REAL NUMBER FROM 1. TO 10.\n THE HIGHER THE WARP FACTOR, THE LESS TIME USED\n AND THE MORE ENERGY CONSUMED IN TRAVELLING FROM POINT TO\n POINT. WARP FACTORS GREATER THAN 6. MAY CAUSE\n ENGINE DAMAGE.\n\n\n\n   WHEN YOU CHANGE QUADRANTS, HOWEVER, THE POSITIONS OF\n  ALL OBJECTS IN THE NEW QUADRANT ARE RANDOMIZED TO SIMULATE 3-D TRAVEL.\n\n  *** NOTE:  EVERY USE OF THE WARP ENGINES TAKES TIME.\n  THE AMOUNT OF TIME USED IS PROPORTIONAL TO THE\n  WARP FACTOR USED.\n  IF THE ENTERPRISE IS BLOCKED BY SOMETHING\n  DURING INTRA-QUADRANT TRAVEL IT WILL STOP IN FRONT\n  OF IT (AND WASTE TIME) ***\n\n  *** NOTE: THERE IS A TIME PORTAL AVAILABLE BY TRAVELLING\n  AT WARP 10.  YOU MAY BE CARRIED EITHER FORWARD OR\n  BACKWARD IN TIME\n\n  *** NOTE:  IF THE ENTERPRISE RAMS A KLINGON VESSEL, EITHER\n  DELIBERATELY OR ACCIDENTALLY, THE KLINGON WILL BE\n  DESTROYED AND THE ENTERPRISE HEAVILY DAMAGED.\n\n  *** NOTE: THERE IS A COMMAND AVAILABLE TO MAINTAIN POSITION.\n ONE CAN SPECIFY THE LENGTH OF TIME TO REST (RE).\n THIS COMMAND ALLOWS ONE TO REPAIR DAMAGED DEVICES.\n\n\n\n  IMPULSE ENGINES:\n\n IMPULSE ENGINES ARE A SUPPLEMENT TO THE WARP\n ENGINES.  THEY COST 200 UNITS OF ENERGY TO ENGAGE\n AND 100 UNITS PER STARDATE; WITH IMPULSE ENGINES\n ONE CAN MOVE AT 1/2 QUADRANT PER STARDATE.\n\n\n\n\n\n  SHORT RANGE SENSORS:\n\n     THE SHORT RANGE SENSORS OF THE ENTERPRISE DISPLAY\n  A DETAILED VIEW OF THE QUADRANT IT IS CURRENTLY IN.\n  THE ENTERPRISE LOOKS LIKE /E/ ON THE SCREEN.\n  KLINGON BATTLE CRUISERS LOOK LIKE /K/ ON THE SCREEN.\n  STARBASES LOOK LIKE /B/ AND STARS LOOK LIKE * .\n  THE KLINGONS MAY HAVE POWERFUL COMMAND SHIPS, /C/.\n\n  *** NOTE: DOCKING IS A TWO STEP PROCEDURE--FIRST YOU\n  MUST MOVE ADJACENT TO THE BASE.  THEN EXECUTE \"DO\" TO DOCK.\n  WHILE DOCKED, STARBASE SHIELDS PROTECT THE STARSHIP.\n\n  *** NOTE: CONDITION YELLOW MEANS YOU ARE DANGEROUSLY\n  LOW ON ENERGY AND SHOULD MAKE FOR A BASE POSTHASTE.\n\n\n\n\n\n\n  LONG RANGE SENSORS:\n\n     THE LONG RANGE SENSORS OF THE ENTERPRISE DISPLAY\n  THE NUMBER OF OBJECTS IN THE 9 CLOSEST QUADRANTS,\n  WITH THE ENTERPRISE IN THE CENTRAL ONE.\n  EACH DIGIT OF THE NUMBER IN EACH BOX MEANS SOMETHING:\n     THE ONES DIGIT REPRESENTS THE NUMBER OF STARS.\n         TENS                                STARBASES.\n         HUNDREDS                            KLINGONS.\n         THOUSANDS                           SUPERNOVA.\n  FOR EXAMPLE:\n  319 MEANS  3 KLINGONS, 1 STARBASE, AND 9 STARS.\n  206 MEANS 2 KLINGONS, 0 STARBASES, AND 6 STARS.\n  7 MEANS 0 KLINGONS, 0 STARBASES, AND 7 STARS.\n\n\n\n  ENERGY SHIELDS:\n\n     WHILE THE ENERGY SHIELDS OF A STARSHIP ARE ACTIVATED,\n  KLINGON ATTACKS ARE NULLIFIED.  EVERY TIME YOU MOVE WITH\n  YOUR SHIELDS UP, ENERGY IS USED PROPORTIONAL TO WARP FACTOR\n\n  SHIELD STRENGTH IS A MEASURE OF HOW MUCH ENERGY\n  THE SHIELDS CAN WARD OFF DURING ATTACKS.   IT IS\n  PRINTED AFTER SHIELD STATUS IN A S.R. SCAN.\n  WHEN ATTACKED, SHIELD STRENGTH IS LOWERED,AND\n  THE EFFECT IS CUMULATIVE.  WHEN STRENGTH REACHES\n  0.0 THE SHIELDS ARE DISABLED.  STRENGTH MAY BE\n  REGAINED BY DOCKING.\n\n\n\n  PHASERS:\n\n     ANY PORTION OF THE ENERGY AVAILABLE CAN BE FIRED.\n  THE BATTLE COMPUTER DIVIDES THIS AMOUNT AMONG THE\n  KLINGON CRUISERS IN THE QUADRANT AND DETERMINES\n  THE VARIOUS DIRECTIONS OF FIRE.  THE EFFECTIVENESS\n  OF A HIT DEPENDS MOSTLY ON THE DISTANCE TO THE\n  TARGET.  A KLINGON BATTLE CRUISER STARTS WITH  400\n  UNITS OF ENERGY.  IT CAN FIRE AN AMOUNT EQUAL TO\n  WHATEVER ENERGY IT HAS LEFT.\n\n\n  PHOTON TORPEDOES:\n\n     INITIALLY THE ENTERPRISE HAS  10 PHOTON TORPEDOES.\n  ONE TORPEDO DESTROYS WHATEVER IT HITS.  THE RANGE\n  OF PHOTON TORPEDOES (LIKE PHASERS) IS LIMITED TO\n  THE CURRENT QUADRANT.  THE COURSE OF A PHOTON TORPEDO\n  IS SET THE SAME WAY AS THAT OF THE ENTERPRISE.\n  YOU MAY, IF YOU WISH, FIRE A BURST OF THREE TORPEDOES\n  AT ONCE.  THERE IS A TIME LAG IN LAUNCHING THEM, AND\n  THEY ARE FIRED IN A COUNTERCLOCKWISE SEQUENCE.\n  FOR EXAMPLE, A TORPEDO COURSE OF 3.49 WITH A BURST\n  ANGLE OF 0.24 WOULD FIRE TORPEDOES AT DIRECTIONS\n  3.25, 3.49, AND 3.73 . IF A PHOTON TORPEDO HITS\n  A STAR THAT STAR NOVAS AND DESTROYS ANYTHING IN\n  ADJACENT SECTORS. THE ENTERPRISE WILL NOT BE DESTROYED\n  BUT WILL LOSE 2000 UNITS OF ENERGY.\n  THERE IS ONE CHANCE IN TWENTY THAT THE STAR WILL SUPERNOVA,\n  IN WHICH CASE THE ENTERPRISE WILL AUTOMATICALLY ATTEMPT\n  TO LEAVE THE QUADRANT (GOOD LUCK).\n\n\n\n\n  DAMAGE CONTROL REPORT:\n\n     THE DAMAGE CONTROL REPORT LISTS THE MAIN DEVICES AND\n  TIME REQUIRED TO BE REPAIRED. REPAIR  IS 10 TIMES FASTER WHILE DOCKED.\n\n\n\n  STAR CHART:\n\n        AT ANY TIME, ONE CAN OBTAIN A STAR CHART THAT SHOWS WHAT IS\n  IN ALL QUADRANTS THAT THE ENTERPRISE HAS SCANNED, WITH EITHER LONG\n  OR SHORT RANGE SENSORS.  THE FORMAT OF EACH QUADRANT IS IDENTICAL\n  TO THAT OF THE LONG RANGE SCAN.\n\n\n\n\n  BATTLE COMPUTER:\n\n        A BATTLE COMPUTER IS AVAILABLE WHICH MAKES AVAILABLE MANY\n  USEFUL CALCULATIONS. COMMANDS ARE:\n        PH      PHASER STRENGTH NEEDED TO KILL EACH KLINGON IN QUADRANT\n        CO      COURSE TO ANY OTHER POINT (SECTORS OR QUADRANTS)\n        DI      DISTANCE TO ANY OTHER POINT.\n        BO      BOTH COURSE AND DISTANCE\n        ST      EXIT FROM BATTLE COMPUTER MODE.\n\n\n  *** NOTE: KLINGONS ARE NOT STATIONARY. THEY CAN EITHER\n  MOVE IN AND ATTACK OR RETREAT. KLINGONS WILL NOT\n  MOVE INTO A QUADRANT CONTAINING A STAR BASE NOR WILL\n  THEY RETREAT FROM A QUADRANT CONTAINING A KLINGON\n  COMMAND SHIP. HOWEVER, WITHIN ANY GIVEN QUADRANT, KLINGONS\n  ARE STATIONARY (I.E. DO NOT MOVE ABOUT\n  WITHIN THE QUADRANT).\n\n\n\n*** NOTE: A RECENT IMPROVEMENT  ALLOWS YOU TO TYPE ALL\nTHE ARGUMENTS TO A GIVEN COMMAND ON ONE LINE. FOR EXAMPLE, THE SEQUENCE\n        COMMAND:    MO\n        COURSE:     3.14159\n        DISTANCE:   1.57\n   CAN BE ABBREVIATED TO THE FOLLOWING:\n        COMMAND:    MO 3.14159 1.57\nIF A COMMAND TAKES N ARGUMENTS AND YOU TYPE N-1 OF THEM ON ONE LINE,\nTHE LAST QUESTION ORDINARILY ASKED WILL BE ASKED JUST AS IF YOU HAD\nTYPED EACH ARGUMENT ON A SEPARATE LINE (THE BATTLE COMPUTER IS AN\nEXCEPTION) OR TYPED ALL ARGUMENTS ON ONE LINE, BUT NOTHING IN BETWEEN.\n\n\n\n SELF DESTRUCT:\n THE COMMAND \"SELF DESTRUCT\" (DE), PLUS THE SECRET PASSWORD REQUIRED\nFOR ACTIVATION, SETS IN MOTION THE SHIP'S DESTRUCT MECHANISM. USED ONLY\nIN THE MOST DESPERATE OF CIRCUMSTANCES, THE END IS SHORT AND SWEET. AT\nCOMPLETION OF THE SELF DESTRUCT SEQUENCE, THE USER IS LOGGED OFF.\nNEEDLESS TO SAY, THIS IS THE COWARD'S WAY OUT.\n\n\n ABANDON SHIP:\n THIS COMMAND ALLOWS THE CAPTAIN OF THE ENTERPRISE AND SELECT CREW\nMEMBERS TO ESCAPE ANY IMPENDING DOOM IN A SHUTTLE CRAFT. YOU MAY BE\nCAPTURED BY THE DEADLY KLINGONS, BUT IF YOU ARE CAPTURED, YOU MIGHT FIND\nYOUR WAY BACK TO THE FEDERATION. IF SO, MAYBE YOU CAN TALK THEM INTO\nGIVING YOU COMMAND OF ANOTHER SHIP, BUT YOU WILL NEVER BE GIVEN\nA THIRD SHIP.\n\n LOG ENTRY:\n THE LOG ENTRY WILL RECORD VARIOUS INFORMATION IN THE CAPTAIN'S LOG. THI\nINFORMATION IS STORED IN THE \"STARTR.LOG\" FILE IN THE USER'S AREA. IT\nWILL ALSO BE PRINTED ON THE TERMINAL WHEN THE COMMAND IS GIVEN (LO). AN\nAUTOMATIC LOG ENTRY IS MADE AT THE COMPLETION OF EACH MISSION. FROM TIME\nTO TIME, THE CAPTAIN SHOULD RETRIEVE THE INFORMATION CONTAINED IN THE\nLOG.\n\n TELEPORTER:\n THE TELEPORTATION UNIT ABOARD THE ENTERPRISE TRANSMITS A SECRET SIGNAL\nTO A RANDOM STARBASE WHICH ACTIVATES THE STARBASE'S TELEPORTATION\nEQUIPMENT WHEN THE COMMAND (TP) IS GIVEN BY THE CAPTAIN. THE SHIP IS\nTHEN TELEPORTED TO THE DISTANT STARBASE AND DOCKED AUTOMATICALLY. THE\nTELEPORTATION PROCESS REQUIRES A TIME EXPENDITURE OF .75 STARDATES. THE\nUNIT ABOARD THE SHIP MAY BECOME DAMAGED AND RENDERED USELESS FOR A\nPERIOD OF TIME.\n\n EXPERIMENTAL DEATH RAY:\n EXPERIMENTAL MEANS EXPERIMENTAL. FEDERATION SCIENTISTS HAD HOPED TO\nPERFECT THE DEATH RAY BEFORE IT WAS INSTALLED IN YOUR SHIP, BUT THEY\nLACKED THE NECESSARY FUNDS TO COMPLETE THE PROJECT, DUE TO COST\nOVERRUNS. IT WAS DESIGNED TO DESTROY ALL OF THE DEADLY KLINGONS IN\nTHE QUADRANT WHERE IT WAS USED, BUT FIELD REPORTS HAVE VARIED\nSIGNIFICANTLY WITH REGARD TO REPORTED OPERATION OF THE EXPERIMENTAL\nDEATH RAY. UTMOST CAUTION, THEREFORE, SHOULD BE EXERCISED IN THE USE OF\nTHIS WEAPON UNTIL THE BUGS HAVE BEEN ELIMINATED. THE COMMAND (DR) WILL\nPROMPT A QUESTION AS TO WHETHER YOU ARE SURE YOU WISH TO FIRE THE\nEXPERIMENTAL DEATH RAY. YOU SHOULD RESPOND WITH A YES (Y) OR A NO (N).\nSHOULD YOU WISH TO BYPASS THE QUESTION, TYPE \"DR YES (Y)\" OR \"DR NO (N)\"\nINSTEAD. GOOD LUCK . . . YOU'LL NEED IT.\n\n\n\n\n\n***********************************************************************\n***********************************************************************\n**                                                                   **\n**                 ***** RULES FOR FOOTBALL *****                    **\n**                                                                   **\n***********************************************************************\n***********************************************************************\n\n THERE ARE 4 CLOCKED QUARTERS. THE QUARTER DURATION WILL BE SET BEFORE\n KICKOFF. THERE ARE NO TIME-OUT'S ALLOWED.\n\n TO END THE GAME ENTER 99\n\n OFFENSIVE PLAYS ARE:\n\n           10 = RUN\n\n           11 = DRAW\n\n           12 = SWEEP\n\n           13 = SCREEN\n\n           14 = SHORT PASS\n\n           15 = LONG PASS\n\n           16 = PUNT\n\n           17 = FIELD GOAL TRY\n\n\n DEFENSIVE PLAYS ARE:\n\n           20 = HOLD. USE AGAINST RUN AND DRAW\n\n           21 = NORMAL. USE AGAINST SWEEP AND SCREEN\n\n           22 = BLITZ (RED DOG). USE AGAINST ALL PASSES.\n\n           23 = INTERCEPT. BETTER ODDS FOR PASS INTERCEPTION.\n\n           24 = BLOCK. USE AGAINST ALL KICKS.\n***********************************************************************\n***********************************************************************\n**                                                                   **\n**                 ***** RULES FOR BLAKJAK ******                    **\n**                                                                   **\n***********************************************************************\n***********************************************************************\n\nWE PLAY WITH A DOUBLE DECK, TO REDUCE SHUFFLING.\nTHIS IS A GENTLEMAN'S GAME: NOONE WINS TIES.\nYOUR BLACKJACK PAYS DOUBLE.\n5 CARDS, 21 OR UNDER, PAYS DOUBLE.\nTHREE SEVENS PAYS DOUBLE.\nANY COMBINATION OF 6, 7, AND 8 PAYS DOUBLE.\nDEALER'S BLACKJACK WINS AUTOMATICALLY.\nBLACKJACK IS 21 IN 2 CARDS.\nAN ACE (A) IS ONE OR ELEVEN AT YOUR OPTION.\nYOU START WITH A STAKE OF $100, AND YOU MAY BET FROM $1 TO $100.\nYOU MAY NOT BET LESS THAN $1.\nTHE GAME IS OVER IF YOU GO BROKE.\nYOU CANNOT BET MORE MONEY THAN YOU HAVE.\nYOU LOSE IF YOU GO OVER 21.\nDEALER MUST HIT 16 OR LESS, BUT MUST STICK AT 17 OR OVER.\nDEALER RE-SHUFFLES THE DECK AFTER EACH BLACKJACK.\nDEALER RE-SHUFFLES THE DECK AFTER ALL THE ACES HAVE BEEN PLAYED.\nUSE THE FOLLOWING COMMANDS DURING PLAY:\n   D = CALL FOR A NEW DECK\n   Q = STOP THE GAME\n   H = HIT (GET ANOTHER CARD)\n   S = STICK (DON'T GET ANOTHER CARD)\n\n\n\n\n\n***********************************************************************\n***********************************************************************\n**                                                                   **\n**                 ***** RULES FOR TTT *****                         **\n**                                                                   **\n***********************************************************************\n***********************************************************************\n\n\n  TTT IS A THREE-DIMENSIONAL TIC-TAC-TOE GAME.\n  THE BOARD CONSISTS OF 64 SQUARES, ARRANGED ON 4 LEVELS OF 16 (4X4)\n      SQUARES EACH:\n\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n\n      LEVEL 1          LEVEL 2          LEVEL 3          LEVEL 4\n\n\n   YOU HAVE TO IMAGINE THAT LEVEL 1 IS DIRECTLY ABOVE LEVEL 2, WHICH\n   IS DIRECTLY ABOVE LEVEL 3, WHICH IS DIRECTLY ABOVE LEVEL 4.LOOKING\n   SIDEWAYS AT THE STACK, YOU WOULD SEE:\n\n    ___.___.___.___  LEVEL 1\n    ___.___.___.___  LEVEL 2\n    ___.___.___.___  LEVEL 3\n    ___.___.___.___  LEVEL 4\n\n   THE PURPOSE OF THE GAME IS TO GET 4 IN A ROW. THE ROW CAN BE\n   HORIZONTAL, VERTICAL, OR DIAGONAL.\n\n   TO ENTER YOUR MOVE, TYPE IN A 3-DIGIT NUMBER. THE FIRST NUMBER IS\n   THE LEVEL, THE SECOND IS THE ROW, AND THE THIRD IS THE COLUMN. YOU\n   CAN SEE THE LEVEL FROM THE ABOVE BOARD DRAWINGS. ROW AND COLUMN\n   WITHIN A LEVEL ARE:\n                             COLUMNS\n                           1   2   3   4\n                   R  1   ___|___|___|___\n                   O  2   ___|___|___|___\n                   W  3   ___|___|___|___\n                   S  4   ___|___|___|___\n\n\n   SOME MOVE EXAMPLES ARE SHOWN BELOW. THE @ IS LOCATED AT 111 (LEVEL 1,\n   ROW 1, COLUMN 1), THE # IS AT 234 (LEVEL 2, ROW 3, COLUMN 4), THE 0\n   IS AT 413 (LEVEL 4, ROW 1, COLUMN 3), AND THE X IS AT 342 (LEVEL 3,\n   ROW 4, COLUMN 2).\n\n    _@_|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|_0_|___\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n    ___|___|___|___  ___|___|___|_#_  ___|___|___|___  ___|___|___|___\n    ___|___|___|___  ___|___|___|___  ___|_X_|___|___  ___|___|___|___\n\n   AFTER EACH MOVE, THE COMPUTER WILL SHOW YOU THE GAME BOARD WITH YOUR\n   NEW MOVE AND HIS FOLLOWING MOVE. YOUR CURRENT MOVE SHOWS UP AS A #,\n   AND ALL YOUR PREVIOUS MOVES ARE SHOWN BY X'S. THE COMPUTER'S CURRENT\n   MOVE IS AN @, AND PREVIOUS COMPUTER MOVES ARE SHOWN BY 0'S.\n\n   TO LET THE COMPUTER MOVE FIRST, ENTER 000 FOR YOUR FIRST MOVE.\n\n   TO END A GAME (GIVE UP) AND START A NEW ONE, ENTER -1.\n\n   TO STOP PLAYING TIC-TAC-TOE, ENTER 999.\n\n   TO RE-DISPLAY THE GAME BOARD, ENTER 666. NOTE THAT THERE WILL BE NO\n   \"CURRENT\" MOVES WHEN YOU DO THIS, ONLY 0'S AND X'S. IT OFTEN HELPS\n   TO DO THIS TO BETTER SEE WHERE ALL THE MOVES ARE AFTER YOU'VE NOTED\n   THE CURRENT MOVES. CLEAR THE SCREEN AND ENTER 666 TO BE SURE THE\n   BOARD DOESN'T GO OFF THE BOTTOM.\n\n\n   HERE ARE SOME WINNING POSITIONS:\n     (A) HORIZONTAL\n\n    _X_|_X_|_X_|_X_  ___|___|___|___  ___|___|___|___  ___|___|___|___\n    ___|___|___|___  _Y_|_Y_|_Y_|_Y_  ___|___|___|___  ___|___|___|___\n    ___|___|___|___  ___|___|___|___  _V_|_V_|_V_|_V_  ___|___|___|___\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  _W_|_W_|_W_|_W_\n\n    (B) VERTICAL: (THE SIDEWAYS VIEW MAY HELP TO SEE THESE)\n\n    _S_|___|___|___  _S_|___|___|___  _S_|___|___|___  _S_|___|___|___\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n    ___|___|_T_|___  ___|___|_T_|___  ___|___|_T_|___  ___|___|_T_|___\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n\n                              _S_.___._T_.___\n                              _S_.___._T_.___\n                              _S_.___._T_.___\n                              _S_.___._T_.___\n\n    (C) DIAGONAL: (THE SIDEWAYS VIEW MAY HELP HERE, TOO)\n\n    _S_|___|___|___  ___|_S_|___|___  ___|___|_S_|___  ___|___|___|_S_\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n\n      THIS DIAGONAL IS        _S_.___.___.___\n      LEFT-TO-RIGHT, TOP      ___._S_.___.___\n      TO BOTTOM ACROSS THE    ___.___._S_.___\n      REAR.                   ___.___.___._S_\n\n\n    (D) ANOTHER DIAGONAL:\n\n    ___|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|_S_\n    ___|___|___|___  ___|___|___|___  ___|___|_S_|___  ___|___|___|___\n    ___|___|___|___  ___|_S_|___|___  ___|___|___|___  ___|___|___|___\n    _S_|___|___|___  ___|___|___|___  ___|___|___|___  ___|___|___|___\n\n      THIS DIAGONAL IS        _S_.___.___.___\n      LEFT-TO-RIGHT, TOP      ___._S_.___.___\n      TO BOTTOM, FRONT TO     ___.___._S_.___\n      REAR ACROSS THE         ___.___.___._S_\n      WHOLE BOARD.\n\n\n***********************************************************************\n***********************************************************************\n**                                                                   **\n**                 ***** RULES FOR TARGET  *****                     **\n**                                                                   **\n***********************************************************************\n***********************************************************************\n\n  THIS GAME SIMULATES THE FIRING OF AN ARTILLERY GUN. YOU ARE THE\n  OFFICER IN CHARGE, WHO DIRECTS THE GUN CREW BY GIVING THE ELEVATION\n  TO BE USED. THIS IS SPECIFIED IN DEGREES, FROM 0 TO 90 DEGREES.\n  THE ELEVATION ANGLE CAN BE GIVEN AS A DECIMAL NUMBER WITH UP TO\n  2 DECIMAL PLACES, OR AS A WHOLE NUMBER. EXAMPLES OF CORRECT\n  ELEVATIONS ARE: 10  45.0  39.75  89.6 ETC. THE MAXIMUM RANGE OF\n  YOUR GUN IS 46,500 YARDS, WHICH OCCURS WHEN THE ELEVATION IS 45\n  DEGREES. ANY ELEVATION LESS THAN 45 OR GREATER THAN 45 WILL DECREASE\n  THE RANGE OF THE GUN.\n\n  WHEN THE GAME BEGINS, YOU ARE TOLD THE DISTANCE TO THE TARGET, AND\n  ASKED FOR THE ELEVATION TO BE USED. THE GUN IS ASSUMED TO BE\n  POINTED IN THE RIGHT DIRECTION.\n\n  FOR THE FIRST GAME, THE ENEMY DOES NOT SHOOT BACK, AND YOU HAVE THE\n  TIME TO EXPERIMENT AROUND A LOT IN TRYING TO HIT THE TARGET. A HIT\n  WITHIN 100 YARDS OF THE TARGET DESTROYS IT. AFTER THE FIRST GAME,\n  THE ENEMY FIRES BACK AFTER EACH SHOT YOU MAKE. ENEMY FIRE GETS\n  CLOSER WITH EACH SHOT, UNTIL YOU HAVE BEEN DESTROYED, SO YOU HAVE\n  TO BE MORE ACCURATE TO SURVIVE.\n\n  AFTER YOU DESTROY THE TARGET, THE COMPUTER WILL ASK IF YOU WISH TO\n  CHARGE OR RETREAT. IF YOU REPLY \"CHARGE\", ANOTHER TARGET WILL BE\n  PRESENTED, AND THE GAME CONTINUES. IF YOU REPLY \"RETREAT\", THE GAME\n  IS ENDED.\n\n                H\n                            .\n             H     H   .         .\n                   .                .\n           H    .    H                .\n              .                         .\n         H  .          H                  .\n          .         L      L                .\n       H.   L            H        L           .\n      .                   H            L        .\n\n   THE ABOVE PICTURE SHOWS WHAT HAPPENS AS THE ANGLE OF ELEVATION IS\n   INCREASED AND DECREASED. THE ..... LINE SHOWS 45 DEGREES (MAXIMUM\n   RANGE). THE HHHH LINE SHOWS WHAT HAPPENS WITH ELEVATIONS GREATER\n   THAN 45 DEGREES, AND THE LLLL LINE WITH ELEVATIONS LOWER THAN 45\n   DEGREES.\n\n\n\n\n\n***********************************************************************\n***********************************************************************\n**                                                                   **\n**                 ***** RULES FOR COFFEE *****                      **\n**                                                                   **\n***********************************************************************\n***********************************************************************\n\n  THE COMPUTER WILL PICK A NUMBER BETWEEN 0000 AND 9999 RANDOMLY.\n  THE IDEA IS TO GUESS THE EXACT NUMBER. AFTER EACH GUESS, THE COMPUTER\n  WILL TELL YOU IF THE GUESS WAS TOO HIGH OR TOO LOW. YOU MUST ENTER\n  A 4-DIGIT NUMBER HIGHER THAN THE PREVIOUS LOWEST GUESS, AND LOWER\n  THAN THE PREVIOUS HIGHEST GUESS. WINNER BUYS THE COFFEE.\n\n\n\n\n***********************************************************************\n***********************************************************************\n**                                                                   **\n**            ***** RULES FOR               *****                    **\n**                                                                   **\n***********************************************************************\n***********************************************************************\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT569/FILE569.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT569", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}