More about adding a new SSCVT entry

The program listed in the article Adding a new SSCVT entry
without an IPL (Issue 35, August 1989, Page 41) is very
helpful but could cause a problem.  At label PUTSSCVT the
address of the new SSCVT is stored via a Store Register (ST)
instruction.  If another program is still running and adding a
new SSCVT too, one of them may be lost.  The solution lies in
using the Assembler Compare and Swap (CS) instruction
instead.  The section of code in question looks like this:

         L     R3,JESSSCT
         USING SSCT,R3
SRCHSSCT CLC   SSCTSCTA,=F'0'
         BE    PUTSSCVT
         L     R3,SSCTSCTA
         B     SRCHSSCT
PUTSSCVT ST    R1,SSCTSCTA

To ensure that no other program uses the same SSCVT for
chaining a new SSCVT, it should look like this:

SRCHSTRT L     R14,JESSSCT         LOAD ADDRESS OF FIRST SSCVT
         USING SSCT,R14            ADDRESS SSCVT
SRCHSSCT LR    R15,R14             SAVE R14
         ICM   R14,15,SSCTSCTA     LOAD ADDRESS OF NEXT SSCVT
         BNZ   SRCHSSCT            IF R14 NOT ZERO, FIND NEXT
         CS    R14,R1,SSCTSCTA     INSERT NEW SSCVT IN SSCVT-CHAIN
         BC    4,SRCHSTRT          IF COND-CODE = 4, CS FAILED, SSCTSCTA
*                                  IS NOT ZERO ANY MORE

The CS instruction works as follows:

The first and second operands are compared.  If they are equal,
the third operand is stored at the location of the second
operand.  If they are unequal, the second operand is loaded into
the location of the first operand.  The result of the comparison
is indicated in the condition code.  A serialization function is
performed before the operand is fetched and again after the
operation is completed.  For more information, please refer to
the Principles of Operation manual.

Michael Reukauff (West Germany)             c Michael Reukauff 1990

