Positioning messages at specific lines

One of the requests that I recently received from our REXX
programmers was to be able to position the output from the
SAY command at a particular area of the screen. They were
having problems when using SAY because the display of the
text it contains does not always start at the top left-hand corner
of the screen. This was causing problems when some of the
applications they had developed were issuing error messages.

To overcome this problem I wrote the following TSO
command processor. This command will display text at the line
specified in the second parameter of the command. For
example, if the following line was included in a REXX
program:

      BPOS 'ERROR IN REXX' LINE(23)

the message 'ERROR IN REXX' will appear on line 23 of the
terminal.

This is accomplished by using the STLINENO TSO macro and
the BPOS command which is used in most of our REXX
routines where a standard output to the terminal is to be
displayed on a particular line.

*        **************************************************************
*        * PURPOSE:      THIS PROGRAM IS USED TO DISPLAY A LINE OF    *
*        *               TEXT AT A SPECIFIC POINT ON THE SCREEN.      *
*        *               THE FORMAT OF THE COMMAND IS:-               *
*        *               BPOS MESSAGE LINE(XX)                        *
*        *               WHERE MESSAGE IS THE MESSAGE THAT IS TO BE   *
*        *               DISPLAYED.                                   *
*        *               WHERE LINE(XX) IS THE LINE NUMBER OF THE     *
*        *               DEVICE IN QUESTION.                          *
*        **************************************************************
BPOS     CSECT
         SAVE      (14,12)             /* SAVE REGISTERS.            */
         LR        R12,R15             /* LOAD ENTRY POINT.          */
         USING     BPOS,R12            /* ESTABLISH A BASE.          */
         ST        R13,SAVEAREA+4      /* STORE SAVEAREA ADDRESS.    */
         LA        R15,SAVEAREA        /* CHAIN SAVEAREA.            */
         ST        R15,8(R13)          /* CHAIN SAVEAREA.            */
         LR        R13,R15             /* LOAD NEW SAVEAREA.         */
BP0010   EQU       *
         USING     CPPL,R1             /* COMMAND PROCESSOR PLIST.   */
         LA        R5,UPPL             /* LOAD USER UPPL ADDR.       */
         USING     PPL,R5              /* ADDRESS IT.                */
         L         R0,CPPLUPT          /* GET UPT ADDRESS.           */
         ST        R0,PPLUPT           /* STORE INTO PARAMETER LIST. */
         L         R0,CPPLECT          /* GET ECT ADDRESS.           */
         ST        R0,PPLECT           /* STORE IN PARAMETER LIST.   */
         L         R0,UECB             /* GET UECB ADDRESS.          */
         ST        R0,PPLECB           /* STORE IN PARAMETER LIST.   */
         L         R0,=A(UCPL)         /* GET UPCT ADDRESS.          */
         ST        R0,PPLPCL           /* STORE IN PARAMETER LIST.   */
         L         R0,=A(ANSWER)       /* GET ANSWER AREA ADDRESS.   */
         ST        R0,PPLANS           /* STORE IN PARAMETER LIST.   */
         MVC       PPLCBUF(4),CPPLCBUF /* COMMAND AREA.              */
         SR        R0,R0               /* ZEROIZE REGISTER ZERO.     */
         ST        R0,PPLUWA           /* STORE IN PARAMETER LIST.   */
         CALLTSSR  EP=IKJPARS,MF=(E,(R5)) /* ISSUE CALL TO IKJPARS.  */
         LTR       R15,R15             /* CALL SUCCESSFUL?           */
         BZ        B0020               /* YES, CONTINUE              */
         LR        R7,R15              /* SAVE REGISTER.             */
         CVD       R15,PFLD            /* NO, MAKE RETCODE DECIMAL.  */
         UNPK      RC,PFLD             /* FORMAT FOR DISPLAY.        */
         MVZ       RC+1(1),RC          /* REMOVE SIGN.               */
         MVC       ERRFLD(40),BPOS001I /* MOVE IN ERROR MESSAGE.     */
         TPUT      ERRMSG,L'ERRMSG     /* WRITE IT TO THE SCREEN.    */
         LR        R15,R7              /* RESTORE CALLTSSR RETCODE.  */
         B         EXIT                /* RETURN TO CALLER.          */
B0020    EQU       *
         L         R11,ANSWER          /* GET ANSWER AREA.           */
         USING     IKJPARMD,R11        /* ADDRESS IT.                */
BP030    EQU       *
         SR        R3,R3               /* ZEROIZE REGISTER THREE.    */
         LH        R3,MESSAGE+4        /* LOAD LENGTH OF MESSAGE.    */
         LTR       R3,R3               /* NO MESSAGE SPECIFIED?      */
         BNZ       BP040               /* MESSAGE THERE, CONTINUE.   */
         MVC       ERRFLD(40),BPOS002I /* NO, MOVE IN ERROR MESSAGE. */
         TPUT      ERRMSG,L'ERRMSG     /* WRITE IT TO THE SCREEN.    */
         L         R15,=F'80'          /* LOAD RETURN CODE.          */
         B         EXIT                /* RETURN TO CALLER.          */
BP040    EQU       *
         BCTR      R3,0                /* SUBTRACT ONE FROM REG 3.   */
         CH        R3,=H'81'           /* IS IT 81 BYTES?            */
         BL        BP041               /* NOT HIGHER CONTINUE.       */
         MVC       ERRFLD(40),BPOS003I /* NO, MOVE IN ERROR MESSAGE. */
         TPUT      ERRMSG,L'ERRMSG     /* WRITE IT TO THE SCREEN.    */
         L         R15,=F'84'          /* LOAD RETURN CODE.          */
         B         EXIT                /* RETURN TO CALLER.          */
BP041    EQU       *
         STCM      R3,B'0001',MOVE1+1  /* SET UP MOVE INSTRUCTION.   */
         LA        R8,OMSG             /* LOAD ADDRESS OF OUTPUT.    */
         L         R9,MESSAGE          /* LOAD ADDRESS OF USER MSG.  */
MOVE1    MVC       0(LEN,R8),0(R9)     /* SET UP FOR OUTPUT.         */
         SR        R3,R3               /* ZEROIZE REGISTER THREE.    */
         LH        R3,LINNUM+4         /* LOAD LENGTH OF LINE PARM.  */
         LTR       R3,R3               /* NO LINE SPECIFIED?         */
         BNZ       BP042               /* LINE THERE, CONTINUE.      */
         MVC       ERRFLD(40),BPOS004I /* NO, MOVE IN ERROR MESSAGE. */
         TPUT      ERRMSG,L'ERRMSG     /* WRITE IT TO THE SCREEN.    */
         L         R15,=F'88'          /* LOAD RETURN CODE.          */
         B         EXIT                /* RETURN TO CALLER.          */
BP042    EQU       *
         CH        R3,=H'1'            /* LINE NUMBER SINGLE DIGIT?  */
         BH        BP045               /* NO, THEN PROCESS 2 DIGIT.  */
         L         R3,LINNUM           /* YES, LOAD INTO REGISTER 3. */
         PACK      PFLD,0(1,R3)        /* FORMAT FOR STLINENO MACRO. */
         B         BP047               /* GO ISSUE MACRO.            */
BP045    EQU       *
         L         R3,LINNUM           /* LOAD INTO REGISTER 3.      */
         PACK      PFLD,0(2,R3)        /* FORMAT 2 DIGIT FOR MACRO.  */
BP047    EQU       *
         SR        R4,R4               /* ZEROIZE REGISTER 4.        */
         CVB       R4,PFLD             /* PUT LINE NUMBER IN IT.     */
         STLINENO  LINE=(R4),MODE=OFF  /* ISSUE STLINENO MACRO.      */
         LTR       R15,R15             /* MACRO SUCCESSFUL?          */
         BZ        BP050               /* YES, BRANCH TO PROCESS.    */
         LR        R7,R15              /* SAVE RETCODE.              */
         CVD       R15,PFLD            /* NO, MAKE RETCODE DECIMAL.  */
         UNPK      RC,PFLD             /* FORMAT FOR DISPLAY.        */
         MVZ       RC+1(1),RC          /* REMOVE SIGN.               */
         MVC       ERRFLD(40),BPOS005I /* MOVE IN ERROR MESSAGE.     */
         TPUT      ERRMSG,L'ERRMSG     /* WRITE IT TO THE SCREEN.    */
         LR        R15,R7              /* RESTORE STLINENO RETCODE.  */
         B         EXIT                /* RETURN TO CALLER.          */
BP050    EQU       *
         TPUT      OMSG,L'OMSG         /* WRITE TO USER MESSAGE.     */
         SR        R15,R15             /* ZEROIZE RETURN CODE.       */
EXIT     EQU       *
         L         R13,4(R13)          /* RELOAD SAVEAREA ADDRESS.   */
         RETURN    (14,12),RC=(15)     /* RETURN TO TSO.             */
BPOS001I DC        CL40'BPOS001I:CALLTSSR MACRO FAILURE RC =    '
BPOS002I DC        CL40'BPOS002I:NO MESSAGE SPECIFIED ON INPUT  '
BPOS003I DC        CL40'BPOS003I:MESSAGE TOO LONG MUST BE LT 80 '
BPOS004I DC        CL40'BPOS004I:NO LINE SPECIFIED ON INPUT     '
BPOS005I DC        CL40'BPOS005I:STLINENO MACRO FAILURE RC =    '
ERRMSG   DS        0CL80
ERRFLD   DC        CL40'                                          '
RC       DS        CL2
         DS        CL38
PFLD     DC        D'0'
LEN      EQU       0
OMSG     DC        CL80' '
SAVEAREA DS        18F
         LTORG
UPPL     DC        7F'0'
UECB     DC        F'0'
ANSWER   DC        F'0'
UCPL     IKJPARM
MESSAGE  IKJPOSIT  QSTRING,PROMPT='REQUIRED USER MESSAGE, PLEASE ENTER'
LINE     IKJKEYWD
         IKJNAME   'LINE',SUBFLD=LINESIZE
LINESIZE IKJSUBF
LINNUM   IKJIDENT  'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,               X
               PROMPT='LINE PARAMETER REQUIRED',MAXLNTH=2
         IKJENDP
         IKJTCB    LIST=YES
         IKJCPPL
         IKJPPL
         CVT       DSECT=YES
         END


John Bradley
Senior Technical Support Engineer (UK)                   c Xephon 1993

