Locating unfound volumes in the ATL

      .SLS0126D,USEREXIT(WTOEXITC)

      TAPE 123456 IS IN VAULT FIRE SLOT 0011

WTO EXIT

**  THIS WTO EXIT WILL BE CALLED EACH TIME THE FOLLOWING MSG
**  IS ISSUED BY THE STORAGETEK HSC SOFTWARE:-
**  .SLS0126D MOUNT OF xxxxxx ON DRIVE yyy - VOLUME NOT
**  IN LIBRARY;  RETRY, PERM ENTER, TEMP ENTER, OR IGNORE
**  (R,P,T,I)
**  IT SHOULD BE LINKED AS RENT,REUS,AMODE=31,RMODE=24
**  AND WITH AN AC(1)
**  ITS PURPOSE IS TO DO A CHECK ON CA-1 FOR THE TAPE AND
**  OUTPUT
**  A WTO 'TAPE XXXXXX IS IN VAULT SAFE SLOT 9999' WHERE
**  SAFE IS THE NAME OF YOUR CA-1 VAULT AND 9999 IS ITS SLOT NUMBER
** ******************* REGISTER USAGE *************************
**     R0 - WTO MESSAGE
**     R1 - WTO PARAM LIST
**     R2 - SAVE AREA
**     R3 - MSG NO
**     R4 - OUT AREA
**     R5 - DATA AREA
**     R6 - SLOT
**     R7 - MESSAGE TEXT AREA / SLOT NO
**     R8 - TMC RECORD
**     R9 - TAPENO
**     R10 - OUTNO
**     R11 -
**     R12 - SAVEAREA
**     R13 - SAVEAREA
**     R14 - SAVEAREA
**     R15 - SAVEAREA
WTOEXITC CSECT
         REGIS                       SET UP REGISTER NOTATION
         STM   R14,R12,12(R13)       SAVE CALLER'S REGISTERS
         LR    R12,R15               ESTABLISH ADDRESSABILITY
         USING WTOEXITC,R12
         L     R6,0(,R1)             ESTABLISH CTXT ADDRESSABILITY
         USING CTXT,R6
         L     R7,CTXTTXPJ           ADDRESS MESSAGE TEXT AREA
         USING CTXTATTR,R7
         LA    R3,CTXTTMSG           ADDRESS MESSAGE
         STORAGE OBTAIN                                                X
                LENGTH=DATALENG,                                       X
                ADDR=(5),                                              X
                SP=0,                                                  X
                BNDRY=DBLWD,                                           X
                LOC=RES,                                               X
                RTCD=(15),                                             X
                COND=YES
         LTR   R15,R15               GOOD GETMAIN?
         BNZ   GETFAIL               NO ERROR MESSAGE AND LEAVE
         USING DATAAREA,R5           AND MAP BY DSECT
         ST    R13,SAVEAREA+4        SAVE PREVIOUS ADDRESS
         LR    R2,R13                KEEP OLD SAVE AREA ADDRESS
         LA    R13,SAVEAREA          ADDRESS MY SAVE AREA
         ST    R13,8(,R2)            SAVE BACK POINTER
* END OF ALLOCATION REQUEST BLOCK
MODE     MODES GOTO=31               CHANGE MODE UNTIL I/O REQUIRED
GOODMSG  DS    0H
         MVC   TAPENO(6),CTXTTMSG+19 INSERT TAPE SERIAL NO
         LA    R9,TAPENO             TAPE NUMBER ADDRESS IN R9
* TAPE NUMBER EXTRACTED AND PLACED IN R9
READ00   DS    0H
         MODES GOTO=24               I/O REQUIRED BACK TO 24
* NOW TO DYNAMICALLY ALLOCATE THE CA-1 TMC
         LA    R1,DYNAPTR            ADDRESS REQUEST BLOCK POINTER
         SVC   99                    ENTER DYNAMIC ALLOCATION
         LTR   R15,R15               GOOD ALLOCATION?
         BNZ   DYNERR1               NO GOTO ERROR
         B     ONWARD                OK CONTINUE
DYNERR1  DS    0H
WTOC     WTO 'ALLOCATION ERROR - PLEASE INVESTIGATE'
         B     ABEND
DYNAPTR  DS    0F
         DC    X'80',AL3(DYNAREQ)    POINTER TO REQUEST BLOCK
DYNAREQ  DS    0F                    REQUEST BLOCK
DYNAL    DC    AL1(DYNRBLN)          RB LENGTH
DYNAV    DC    X'01'                 DSN ALLOC
DYNAFL1  DC    XL2'00'               NO SPEC
DYNAERR  DC    XL2'00'               MUST BE ZERO
DYNAINF  DC    XL2'00'               MUST BE ZERO
DYNATP   DC    AL4(DYNATPL)          POINTER TO LIST OF TEXT UNITS
DYNARQX  DC    XL4'00'               REQUEST BLOCK EXTENSION ADDRESS
DYNALF2  DC    XL4'00'               NO SPEC
DYNRBLN  EQU   *-DYNAREQ             RB LENGTH
DYNATPL  DS    0F
         DC    X'00',AL3(DAIRDD)     PTR TO DDNAME TEXT UNIT
         DC    X'00',AL3(DAIRDSN)    PTR TO DSNAME TEXT UNIT
         DC    X'00',AL3(DAIRSTAT)   PTR TO DISP=OLD TEXT UNIT
         DC    X'00',AL3(DAIRDISP)   PTR TO DISP=(OLD,KEEP) TEXT UNIT
         DC    X'00',AL3(DAIRFAIL)   PTR TO DISP=(OLD,KEEP,KEEP) TXT UNT
         DC    X'00',AL3(DAIRDD)     PTR TO DDNAME TEXT UNIT
         DC    X'00',AL3(DAIRCLOS)   PTR TO FREE-CLOSE TEXT UNIT
DAIRDD   DS    0F                    DDNAME TEXT UNIT
         DC    X'0001',X'0001'
         DC    X'0008'               EIGHT BYTES LONG
DAIRDDNM DC    CL8'TMC'              DDNAME OF TAPE CATALOG
DAIRDSN  DS    0F                    DSNAME TEXT UNIT
         DC    X'0002',X'0001'
         DC    X'002C'                44 BYTES LONG
DSNAME   DC    C'CA1 TMC NAME'        PUT YOUR CA1 TMC IN HERE
DSNSEQ   DC    (44-(*-DSNAME))X'40'   PAD OUT
DAIRSTAT DS    0F                     INITIAL STATUS
         DC    X'0004',X'0001'
         DC    X'0001'                ONE BYTE LONG
         DC    X'08'                  DISP=SHR
DAIRDISP DS    0F                     FINAL STATUS
         DC    X'0005',X'0001'
         DC    X'0001'                ONE BYTE LONG
         DC    X'08'                  DISP=(OLD,KEEP)
DAIRFAIL DS    0F                     FAILURE STATUS
         DC    X'0006',X'0001'
         DC    X'0001'                ONE BYTE LONG
         DC    X'08'                  DISP=(OLD,KEEP,KEEP)
DAIRCLOS DS    0F                     FREE=CLOSE
         DC    X'001C',X'0000'
ONWARD   TMMTMOPN                                                      X
               CA1TMC,                                                 X
                ABEND,                                                 X
                ACTIVE=NO
* NEXT WE HAVE TO INITIALIZE THE CA-1 SVC CALL PARAMETER LIST
TMCSVC   TMMOPTMC NOTACT=ABEND
GETTMC   TMMGETVL TAPENO,TMCRCD,TERMINUS,ENQ=NO
*        CA MACRO VOLSER,IOAREA,LABEL TO GO TO IF RCD NOT FOUND
* TMC RECORD NOW IN TMCRCD STORAGE
         LA    R8,TMCRCD              PUT ADDRESS OF TMC IN R8
         USING MAP,R8                 MAP R8 CONTENTS WITH TMC
         L     R4,TMOUTAR             GET THE OUTCODE
         L     R6,TMSLOT              AND THE SLOT NUMBER
         MODES GOTO=31                I/O COMPLETE
* NOW CONVERT THE SLOT NO FORM BIN 4 TO DEC PRINTABLE
         CVD   R6,PDN                 CONVERT BIN TO PACKED DECIMAL
         UNPK  ZDN(10),PDN(8)         UNPACK THE OUTPUT TO ZONED DECIMAL
         0I    ZDN+9,X'F0'            CHANGE SIGN CODE TO ZONE CODE
         MVI   SIGN,C'+'              INIT EBCDIC SIGN
         LTR   R6,R6                  TEST SIGN OF BINARY INTEGER
         BNM   FINISH                 IF ITS NOT MINUS THEN ITS OK!
         MVI   SIGN,C'-'              ELSE GIVE IT A MINUS
* SLOT NO STILL HAS LEADING ZEROS, WE HAVE TO REMOVE THESE
FINISH   LA    R6,TMSLOTN             PUT IN NEW SLOT NUMBER
         MVC   SLOTNO(5),TMSLOTN+6    MOVE 5 CHAR SLOT INTO SLOTNO
         LA    R7,SLOTNO              MOVE 4 CHAR SLOT NUMBER TO R7
* SLOT NO AND VAULT NAME CAPTURED, NOW BUILD WTO COMPONENT
         MVC   WTOO+23(6),TAPENO
         MVC   WTOO+36(4),TMOUTAR
         MVC   WTOO+46(5),SLOTNO
WTOO     WTO  'YOURMSG - TAPE=xxxxx VAULT=xxxx SLOT=xxxxx',DESC=(11)
         XR    R0,R0
TERMINUS DS    0H
         MODES GOTO=24                I/O COMPLETE BACK TO 24
         TMMTMCLO CA1TMC
         MODES GOTO=31
FRED     DS    0H
         LR    13,4(,R13)
         STORAGE RELEASE,                                              X
                LENGTH=DATALENG,                                       X
                ADDR=(5),                                              X
                SP=(0),                                                X
                COND=NO
         DS     0H
         RETURN (14,12),RC=0
GETFAIL  DS    0H
         WTO   'GETMAIN FAILURE IN WTOEXITC',DESC=(11)
         B     TERMINUS
ABEND    DC    H'00'
         B     TERMINUS
TAPENO   DS    CL6
TMCRCD   DS    CL340
PDN      DS    D
TMSLOTN  DS    0CL11
SIGN     DS    C
ZDN      DS    ZL10
SLOTNO   DS    CL4
CA1TMC   TMMTMDCB                                                      X
                DDNAME=TMC,                                            X
                LRECL=TMC,                                             X
                LIST=ALSO,                                             X
                EODAD=ABEND
DATAAREA DSECT
SAVEAREA DS    9D
DATALENG EQU   *-DATAREA
         IEZVX100
MAP      DSECT
         TMMTMREC
         TMMTMVT
         IEFZB4DO
         IEFZB4D2
         END

Graeme Lister
Systems Programmer (UK)                                    c Xephon 1995

