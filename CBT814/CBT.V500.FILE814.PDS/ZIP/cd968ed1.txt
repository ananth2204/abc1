A macro to begin an Assembler program

A macro to create all of the things necessary at the start of an Assembler
program is very handy.  It frees the programmer from having to remember how to
code save linkage, or determining which previous program to clone.  The code can
be developed once, and then used consistently and confidently in every program
written.

An example of a macro follows, which provides the things we need in our
Assembler programs.  This particular macro is called INTRO and it can provide a
generic program start or a CICS program start.  It generates register equates,
which when used for all register references, provide entries in the Assembler
cross reference.  One or two base registers can be used.  Standard register save
areas are generated.  An eyecatcher area is included for locating the following
information in a dump or load module:

¥    program name
¥    version
¥    programmer name
¥    assembly date and time.

For the CICS people this provides CICS register equates, and a variable TIOAL.

The source code for the macro and a sample invocation are shown below.


THE INTRO MACRO

         MACRO
&NAM     INTRO &BASEREG=R2,&AUTHOR=ANONYMOUS,&PROGNAM=ASMPROG,         X
               &VERSION=NOVERSION,&PROGTYP=,&TIOAL=80,&PRINT=GEN
.*--------------------------------------------------------------------
.* GENERATE THE THINGS NEEDED AT THE START OF AN ASSEMBLER PROGRAM.
.* ALL PARMS OPTIONAL.  COMPANION MACRO 'EXIT'.
.* EXAMPLES:
.* INTRO PROGNAM=MYPROG,BASEREG=R2
.*
.* INTRO BASEREG=(R10,R11),AUTHOR=WIZARD,PROGRAM=MAGIC,VERSION=TEST3
.*
.* INTRO BASEREG=R5,AUTHOR=SAM,PROGRAM=DBLOAD,VERSION=4.5,PROGTYP=CICS,
.*       TIOAL=300,PRINT=GEN
.*--------------------------------------------------------------------
.* THIS MACRO WILL GENERATE THE FOLLOWING:
.*   A PRIVATE SECTION CONTAINING:
.*     REGISTER EQUATES
.*   A CSECT CONTAINING:
.*     1 OR 2 BASE REGISTERS (BASEREG=R1 OR BASEREG=(R1,R2) ) NO DEFAULT
.*     STANDARD REGISTER SAVE LINKAGE
.*     DUMP ID LITERALS OF: PROGNAM,VERSION, AUTHOR, ASMDATE,ASMTIME
.*   FOR CICS PROGRAMS (PROGTYP=CICS)
.*     REGISTER EQUATES FOR TIOABAR(10),TCTTEAR(11)
.*     NOTE OTHER DSECTS SHOULD PRECEDE THIS MACRO.
.*     COPY DSECTS FOR CSA,TCA,TCTTE,TIOA
.*     REGISTER R13 DOESN'T POINT TO REGISTER SAVE AREA.
.*     TIOAL LENGTH. (TIOAL=NN).
.*   MISC
.*     PRINT=GEN WILL PRINT COPY MACRO EXPANSIONS. IS ALWAYS RESET TO
.*           NOGEN AFTERWARDS.
.*     GLOBAL SYMBOLIC &PROGNAM FOR USE IN OPEN CODE
.*--------------------------------------------------------------------
         GBLC &PRGNAM
&PRGNAM  SETC '&PROGNAM'           VALUE TO OPEN CODE GLOBAL
         LCLA &C                   COUNTER
&C       SETA 1
         LCLC &BASE1
         LCLC &BASE2
&BASE1   SETC '&BASEREG(1)'
&BASE2   SETC '&BASEREG(2)'
R0       EQU   0                   REGISTER EQUATES
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU  10
         AIF  ('&PROGTYP' NE 'CICS').NCICS1
TIOABAR  EQU  10                    TIOA ADDRESS REGISTER
.NCICS1  ANOP
R11      EQU  11
         AIF  ('&PROGTYP' NE 'CICS').NCICS2
TCTTEAR  EQU  11                    TCTTE ADDRESS REGISTER
.NCICS2  ANOP
         AIF  ('&PROGTYP' NE 'CICS').NCICS3
R12      EQU  12                    TCA   ADDRESS REGISTER
         AGO  .CICS1
.NCICS3  ANOP
R12      EQU  12
.CICS1   ANOP
         AIF  ('&PROGTYP' NE 'CICS').NCICS4
R13      EQU  13                    CSA   ADDRESS REGISTER
         AGO  .CICS2
.NCICS4  ANOP
R13      EQU  13
.CICS2   ANOP
R14      EQU  14
R15      EQU  15
         SPACE 3
         PRINT &PRINT
         AIF  ('&PROGTYP' NE 'CICS').NCICS9
         COPY  DFHCSADS             ADDRESSED BY REG 13
         COPY  DFHTCADS             ADDRESSED BY REG 12
         COPY  DFHTCTTE
         COPY  DFHTIOA
OUTMSG   DS    CL.&TIOAL            OUTPUT MESSAGE AREA
.NCICS9  ANOP
         PRINT GEN
&PROGNAM CSECT
*      SAVE CALLERS REGISTERS, CREATE MY SAVEAREA, AND LINKAGES
         AIF   ('BASE1'(1,1)  EQ 'R').CONT2
&BASE1   SETC  'R&BASE1'  MAKE INTO REG EQU
.CONT2   ANOP
         AIF   ('&BASE1' EQ 'R13').MNOTE
         AIF   ('&BASE1' EQ 'R15').MNOTE
         AIF   ('&BASE2' EQ 'R13').MNOTE
         AIF   ('&BASE2' EQ 'R15').MNOTE
         AGO   .CONT3
.MNOTE   MNOTE 12,'REGISTER 13,15 MAY NOT BE USED AS A BASE,SORRY'
         MNOTE  *,'ANY OTHER REGISTER IS OK'
         MEXIT
.CONT3   AIF   ('&BASE2' NE '').TWOCODE     NEED 2 BASE REG
         STM   R14,R12,12(R13)     SAVE CALLER'S REGS.
         LR    &BASE1,R15          GET BASE.
         USING &PROGNAM,&BASE1
         ST    R13,SAVEREGS+4      CHAIN
         AIF  ('&PROGTYP' EQ 'CICS').CICS3
         LA    R13,SAVEREGS          SAVE
         ST    R13,8(R13)              AREAS.
.CICS3   ANOP
         AGO   .LITS
.TWOBASE ANOP                      TWO BASE REGISTERS
         AIF   ('&BASE2'(1,1) EQ 'R').TWOCODE
&BASE2   SETC  'R&BASE2'   MAKE INTO REG EQU
.TWOCODE ANOP
         STM   R14,R12,12(R13)     SAVE CALLER'S REGS.
         LR    &BASE1,R15                SET BASE.
         LA    &BASE2,2048(&BASE1)           SET SECOND
         LA    &BASE2,2048(&BASE2)           BASE.
         USING &PROGNAM,&BASE1,&BASE2
         ST    R13,SAVEREGS+4      CHAIN
         AIF   ('&PROGTYP' EQ 'CICS').CICS4
         LA     R13,SAVEREGS          SAVE
         ST     R13,8(R13)              AREAS.
.CICS4   ANOP
.LITS    ANOP
         XR     R15,R15             SET RETURN CODE TO ZERO
         B      ST                  DUMP LITERALS FOLLOW
.* WOULD HAVE LIKED TO DO THIS BUT DOESN'T WORK
.*       DC    CL(32-(*-((*/32)*32)))' ' ALIGN TO LEFT DUMP MARGIN
         DS    0L
         DC    CL32'&PROGNAM,&VERSION,&AUTHOR'
         DC    CL32'ASSEMBLY DATE/TIME &SYSDATE &SYSTIME'
SAVEREGS DS    18F                 SAVE MY REGISTERS IF I CALL SOMEONE
ST       DS    0H                  START OF USER CODE
         AIF  ('&PROGTYP' NE 'CICS').NCICS6
         L     TCTTEAR,TCAFCAAA          ADDRESS TCTTE
         L     TIOABAR,TCTTEDA           ADDRESS TIOA
.NCICS6  ANOP
         PRINT NOGEN
         EJECT
         MEND


A TYPICAL INVOCATION

22           INTRO BASEREG=R10,PROGNAM=UCB,VERSION=1,AUTHOR=DONDUNN
23+R0       EQU   0                   REGISTER EQUATES
24+R1       EQU   1
25+R2       EQU   2
26+R3       EQU   3
27+R4       EQU   4
28+R5       EQU   5
29+R6       EQU   6
30+R7       EQU   7
31+R8       EQU   8
32+R9       EQU   9
33+R10      EQU  10
34+R11      EQU  11
35+R12      EQU  12
36+R13      EQU  13
37+R14      EQU  14
38+R15      EQU  15
40+         PRINT GEN
41+         PRINT GEN
42+UCB      CSECT
43+*      SAVE CALLERS REGISTERS, CREATE MY SAVEAREA, AND LINKAGES
44+         STM   R14,R12,12(R13)    SAVE CALLER'S REGS.
45+         LR    R10,R15            GET BASE.
46+         USING UCB,R10
47+         ST    R13,SAVEREGS+4     CHAIN
48+         LA    R13,SAVEREGS         SAVE
49+         ST    R13,8(R13)             AREAS.
50+         XR    R15,R15            SET RETURN CODE TO ZERO
51+         B     ST                 DUMP LITERALS FOLLOW
52+         DS    0L
53+         DC    CL32'UCB,1,DONDUNN'
54+         DC    CL32'ASSEMBLY DATE/TIME 06/11/87 10.53'
55+SAVEREGS DS    18F                SAVE MY REGISTERS IF I CALL SOMEONE
56+ST       DS    0H                 START OF USER CODE


Donald Dunn
Senior Software Specialist
Sacramento Municipal Utility District (USA)  © Xephon 1987

























































