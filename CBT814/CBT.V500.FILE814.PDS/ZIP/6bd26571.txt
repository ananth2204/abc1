Dynamic RACF exit loader

When developing RACF exits it is normally necessary to IPL
each time a change is made. This makes the process very time-
consuming and error prone. The following program will allow
a test version of any RACF exit to be temporarily activated and
deactivated dynamically.

The program is run as a batch job or started task. It loads the
test exit module TESTEXIT from either an APF-authorized
STEPLIB or LINKLIST library into the CSA. It then resets the
RACF vector table entry for that exit to point to the new
module and activates it.

In the example below, the RACINIT pre-processing exit
ICHRIX01 is set. A wait is performed on the operator
command ECB. After an operator modify or stop command is
received, the test exit is deactivated and the original RACF exit
(if any) is restored. This technique can be used for any of the
RACF exits and any other MVS exit that operates with a
similar address pointer method in common storage.


Source of program RACFLDR

***  MODULE : RACFLDR
*    DYNAMICALLY LOAD RACF EXITS (EXAMPLE OF RACINIT PRE-EXIT)
*    WILL LOAD TESTEXIT MODULE FROM APF STEPLIB OR LINKLIST
*    INTO CSA, CHANGE THE RACF CVT TO POINT TO THIS MODULE
*    AND TEST WAIT FOR AN OPERATOR STOP COMMAND (P JOBNAME).
*    THEN THE ORIGINAL EXIT ADDRESS IS RESTORED, THE TESTEXIT
*    REMOVED FROM CSA AND THE JOB ENDS. RUN WITH TIME=1440.
***  APF AUTHORIZED, NOT REENTRANT
RACFLDR  CSECT
RACFLDR  AMODE 31
RACFLDR  RMODE 24
         SPLEVEL SET=2
         STM   R14,R12,12(R13)   SAVE REGISTERS
         LR    R12,R15           ADDRESSABILITY
         USING RACFLDR,R12
         GETMAIN R,LV=WORKLEN    GETMAIN DYNAMIC AREA
         LR    R10,R1            R10 -> DYNAMIC AREA
         USING WORKAREA,R10      ADDRESS DYNAMIC AREA
         ST    R13,SAVEAREA+4    SAVE CALLERS SAVEAREA ADDRESS
         ST    R10,8(R13)        SAVE SAVEAREA ADDRESS
         LR    R13,R10           SAVE AREA PTR
* TEST WE HAVE APF AUTHORITY
         TESTAUTH FCTN=1         APF AUTHORIZED
         LTR   R15,R15           TEST
         BNZ   BADAPF            NO
* PREPARE OPERATOR MODIFY PROCESSING
         LA    R7,OPERC                ADDR OPERC
         EXTRACT (7),'S',FIELDS=(COMM) GET COMMAREA ADDR
         L     R7,OPERC                ADDR OF COMMS FIELDS
         L     R8,0(R7)                COMMS ECB ADDR
         ST    R8,OPERCECB             SAVE IT
         LA    R9,4(R7)                GET ORIGIN ADDRESS FOR QEDIT
         ICM   R7,15,0(R9)             IS THERE START COMMAND WAITING
         BZ    BATCH                   NO BATCH EXECUTION
         QEDIT ORIGIN=(R9),BLOCK=(R7)  YES FREE START COMMAND
BATCH    EQU   *
         QEDIT ORIGIN=(R9),CIBCTR=10   ALLOW STACKED COMMANDS (10)
* MODESET KEY ZERO
         MODESET KEY=ZERO        KEY 0
* LOCATE THE RACF CVT
         L     R5,CVTPTR         GET CVT ADDRESS
         USING CVT,R5
         L     R5,CVTRAC         GET RCVT ADDRESS
         USING RCVT,R5
* LOAD OUR EXIT ROUTINE FOR RACINIT (CHANGE FOR OTHER RACF EXITS)
         L     R8,RCVTRIX        SAVE OLD EXIT ADDRESS, ICHRIX01
         LOAD  EP=TESTEXIT,GLOBAL=(YES,P)  LOAD OUR TEST EXIT
         ST    R0,RCVTRIX        SET TEST EXIT ADDRESS
         WTO   'RACFLDR - RACF TEST EXIT NOW ENABLED'
         L     R7,OPERCECB       ADDRESS ECB
         WAIT  ECB=(7)           WAIT FOR STOP/MODIFY COMMAND
         ST    R8,RCVTRIX        RESET EXIT ADDRESS AS BEFORE
         DELETE EP=TESTEXIT      DELETE TESTEXIT
         WTO   'RACFLDR - RACF TEST EXIT NOW RESET'
         B     OUT               EXIT
BADAPF   EQU   *                 NO APF AUTHORITY FOR MODULE
         WTO   'RACFLDR - MODULE IS NOT APF AUTH'
         B     OUT2
OUT      EQU   *                 EXIT PROGRAM
         MODESET KEY=NZERO       KEY NON-ZERO
OUT2     EQU   *
         L     R13,SAVEAREA+4    RESTORE R13
         FREEMAIN R,LV=WORKLEN,A=(10) FREE DYNAMIC AREA
         LA    R15,0             RETURN CODE TO R15
         L     R14,12(R13)       RESTORE R14
         LM    R0,R12,20(R13)    RESTORE R0 TO R12
         BR    R14               RETURN
         LTORG
WORKAREA DSECT
SAVEAREA DS    18F               SAVE AREA
OPERCECB DS    F                 SYSTEM OPER COMM ECB
OPERC    DS    F                 SYSTEM OPER ADDR
WORKLEN  EQU   *-WORKAREA
* DSECTS
         CVT   DSECT=YES         CVT MAP
         ICHPRCVT                RCVT MAP
         YREGS
         END


                                                c Reserved 1992

