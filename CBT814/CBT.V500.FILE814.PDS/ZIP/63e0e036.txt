31-bit I/O program for MVS/ESA

Sequential input/output operations may be performed only by
24-bit mode programs running below the 16-megabyte line.
This limits the programmer to producing a program which runs
below the line if it contains sequential input/output.  The other
alternative is to load and call a separate I/O routine running
below the line.

My skeleton input/output program overcomes this constraint by
moving below the 16-megabyte line the instructions and related
storage which are limited to running in 24-bit mode, and then
branching to them.  The rest of the program runs above the line
in 31-bit mode.

This program has only been run under MVS/ESA although it
should run under MVS/XA 2.2 without any changes.  To run
under an earlier release of MVS/XA, the OPEN and CLOSE
macros must also be moved below the 16-megabyte line and
the MODE=31 removed.

MSSKEL31 TITLE 'SKELETON 31 BIT I/O PROGRAM   -   MSSKEL31'
MSSKEL31 CSECT
MSSKEL31 AMODE ANY
MSSKEL31 RMODE ANY
         B     TSSTART-MSSKEL31(R15)     JUMP OVER PROGRAM ID
         DC    C'MSSKEL31       &SYSDATE   &SYSTIME'
TSSTART  SAVE  (14,12)
         LA    R12,0(R15)               LOAD BASE R12
         USING MSSKEL31,R12
*  SET UP BELOW THE LINE STORAGE
         L     R2,=A(STOR24L)           LOAD GETMAIN LENGTH
         GETMAIN RU,LV=(2),LOC=BELOW
         LR    R15,R13                  LOAD OLD SAVE AREA ADDRESS
         LR    R13,R1                   LOAD STORAGE ADDRESS
         USING STOR24,R13               STORAGE DSECT
         ST    R15,SAVE+4               CHAIN SAVE
         ST    R13,8(R15)                          AREAS
         MVC   IND,IN                   MOVE INPUT DCB BELOW THE LINE
         MVC   OUTD,OUT                 MOVE OUTPUT DCB BELOW THE LINE
         MVC   SGETCODE,GETCODE         MOVE GET ROUTINE BELOW 16M
         MVC   SPUTCODE,PUTCODE         MOVE PUT ROUTINE BELOW 16M
         MVC   SEODCODE,EODCODE         MOVE EOD ROUTINE BELOW 16M
         LA    R1,SEODCODE              ADDRESS EOD ROUTINE
         STCM  R1,7,IND+DCBEODA-IHADCB  SET EOD ADDRESS IN INPUT DCB
         LA    R3,IND                   ADDRESS INPUT DCB
         LA    R4,OUTD                  ADDRESS OUTPUT DCB
         OPEN  ((3),(INPUT),(4),(OUTPUT)),MODE=31
*  MAIN PROGRAM CODE
MSGET    DS    0H
         BAL   R14,GET                  GET A RECORD
         MVC   RECOUT,RECIN             MOVE INPUT TO OUTPUT
         BAL   R14,PUT                  PUT A RECORD
         B     MSGET
*  END OF DATA ROUTINE
RETURN   DS    0H
         LA    R3,IND                   ADDRESS INPUT DCB
         LA    R4,OUTD                  ADDRESS OUTPUT DCB
         CLOSE ((3),,(4)),MODE=31
         LR    R3,R13                   COPY STORAGE ADDRESS
         L     R13,SAVE+4               RESET SAVE AREA ADDRESS
         L     R2,=A(STOR24L)           LOAD STORAGE LENGTH
         FREEMAIN RU,LV=(2),A=(3)
         RETURN (14,12),RC=0
*  GET ROUTINE
GET      DS    0H
         STM   R14,R3,GETSAVE
         LA    R3,RETURN                LOAD EOD ADDRESS
         O     R3,=X'80000000'          SET 31 BIT ADDRESS
         LA    R1,IND                   ADDRESS INPUT DCB
         LA    R0,RECIN                 ADDRESS WORK AREA
         LA    R15,SGETCODE             ADDRESS 24 BIT GET ROUTINE
         BASSM R2,R15                   CALL BELOW THE LINE GET ROUTINE
         LM    R14,R3,GETSAVE
         BR    R14
GETSAVE  DS    6F                       SAVE AREA
*  PUT ROUTINE
PUT      DS    0H
         STM   R14,R3,PUTSAVE
         LA    R1,OUTD                  ADDRESS OUTPUT DCB
         LA    R0,RECOUT                ADDRESS WORK AREA
         LA    R15,SPUTCODE             ADDRESS 24 BIT PUT ROUTINE
         BASSM R2,R15                   CALL BELOW THE LINE PUT ROUTINE
         LM    R14,R3,PUTSAVE
         BR    R14
PUTSAVE  DS    6F                       SAVE AREA
*  INSTRUCTIONS THAT MUST RUN BELOW THE 16M LINE IN 24 BIT MODE
*  GET PATTERN CODE
GETCODE  GET   (1),(0)
         BSM   0,R2                     RETURN
GETLEN   EQU   *-GETCODE                LENGTH OF GET CODE
*  PUT PATTERN CODE
PUTCODE  PUT   (1),(0)
         BSM   0,R2                     RETURN
PUTLEN   EQU   *-PUTCODE                LENGTH OF PUT CODE
*  EOD PATTERN CODE
EODCODE  BSM   0,R3                     GO TO EOD ADDRESS
EODLEN   EQU   *-EODCODE                LENGTH OF EOD CODE
IN       DCB   DDNAME=IN,MACRF=GM,DSORG=PS
INL      EQU   *-IN
OUT      DCB   DDNAME=OUT,MACRF=PM,DSORG=PS
OUTL     EQU   *-OUT
         LTORG
*  BELOW THE LINE STORAGE DSECT ADDRESSED VIA R13
STOR24   DSECT
SAVE     DS    9D      SAVE AREA BELOW FOR GET/PUT, MUST BE FIRST ENTRY
*                      POINTED TO BY R13
IND      DS    CL(INL)                  INPUT DCB
OUTD     DS    CL(OUTL)                 OUTPUT DCB
RECIN    DS    CL80                     INPUT RECORD
RECOUT   DS    CL80                     OUTPUT RECORD
IOCODE   DS    0H                       24 BIT MODE INSTRUCTIONS
SGETCODE DS    XL(GETLEN)               GET ROUTINE
SPUTCODE DS    XL(PUTLEN)               PUT ROUTINE
SEODCODE DS    XL(EODLEN)               EOD ROUTINE
         DS    0D                       ALIGN STORAGE END
STOR24L  EQU   *-STOR24
         DCBD  DSORG=PS
         END   MSSKEL31


Martin Stallard
Systems Programmer
Land Rover Parts (UK)                         c Land Rover Parts 1991

