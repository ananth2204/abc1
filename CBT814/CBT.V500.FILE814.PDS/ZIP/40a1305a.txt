Total storage management

Our installation has the following storage capacity:

¥     150 gigabytes on IBM 3380-K DASD

¥     0.5 gigabytes on Memorex SSD

¥     An STK Automatic Cartridge Storage unit with 8
      transporters and 6000 cartridges.

The relevant software is MVS/XA 2.2, DMS, STOP-X37, and
CA-1.

Datasets are generated on DASD pools and copied to cartridges
by the incremental back-up function of DMS.  Datasets are
deleted from DASD and re-catalogued with the name ARCIVE
when we reach the space warning threshold or when we don't
need the datasets any longer.  If we need a dataset which is
already archived, the automatic restore function of DMS
restores it from cartridge to DASD using ACS.

Our goal is to generate a new dataset using the name with
which it has been archived and re-catalogued on volume
ARCIVE.  We want to be able to achieve this without
modifying catalogued procedures or changing our initial
housekeeping steps to delete or uncatalogue the datasets
concerned.  Unfortunately, the automatic restore function is
always invoked even if the dataset uses DISP=(,CATLG) on
the DD card.  This occurs regardless of whether the automatic
restore function is managed by DFHSM or DMS.  It should be
noted that we use STOP-X37 to avoid receiving the 'NOT
CATALOGED 2' message.

To prevent getting automatic restores that we didn't need, we
coded the following JES2 exit 6.  If the exit encounters
DISP=(,CATLG), it locates the dataset and, if the volume is
ARCIVE, will uncatalogue the dataset.

         MACRO
         SUBR   &SUBR
         LA     R15,&SUBR
         BALR   R14,R15
         MEND
*****      START OF JES2 EXIT 6 ROUTINE                 *****
         COPY  $HASPGBL
JES2EX6  $MODULE $BUFFER,                                              C
               RPL,                                                    C
               $BFD,                                                   C
               $CAT,                                                   C
               $DCT,                                                   C
               $HASPEQU,                                               C
               $HCT,                                                   C
               $JCT,                                                   C
               $JOE,                                                   C
               $JQE,                                                   C
               $MIT,                                                   C
               $PCE,                                                   C
               $PADDR,                                                 C
               $PDDB,                                                  C
               $PPPWORK
USEREX6  $ENTRY BASE=R12
         SAVE   (14,12)
         LR    R12,R15               INITIALIZES BASE REG.
         LR    R3,R0
         LR    R4,R1
*       DYNAMIC ACQUISITION OF MEMORY FOR REENTRANCY        *
         GETMAIN RU,LV=MYDSSIZE
*        LTR   R15,R15  SPIBM 7-11-89:DOESN'T WORK WHEN RU IS
*        BNZ   EXIT           SPECIFIED AS THE SYSTEM ABENDS
         LR    R11,R1          ADDRESS AREA OBTAINED
         USING MYDSECT,R11        ADDRESS WORK AREAS
         ST    R13,SAVEAREA+4
         LA    R13,SAVEAREA
         LR    R0,R3
         LR    R1,R4
         ST    R1,REG1
         ST    R13,8(R13)
*****                   ***SUMMARY***                   *****
*  THE EXIT WAS DESIGNED TO MANAGE DISKS IN A POOL.         *
*  THE LOGIC OF THE ROUTINE IS SUCH THAT IF THE ALLOCATION  *
*  OF A NEW DATASET, IE WITH DISP EQUAL TO NEW, IS          *
*  EXECUTED WITH THE PARAMETER VOL=SER THE ROUTINE TAKES    *
*  NO ACTION.                                               *
*  IF THE ALLOCATION IS MADE WITHOUT THE PARAMETER VOL=SER  *
*  AND WITH THE PARAMETER UNIT=3380 OR UNIT=(3380,X), WITH  *
*  X NUMERIC, OR UNIT=WK OR UNIT=(WK,X), WITH X NUMERIC,    *
*  THE ROUTINE SUBSTITUTES THE UNIT PARAMETER WITH          *
*  UNIT=(WK,10).                                            *
*  IF THE ALLOCATION IS MADE WITHOUT THE PARAMETER VOL=SER  *
*  AND WITH THE PARAMETER UNIT=GE OR UNIT=(GE,X), WITH X    *
*  NUMERIC, THE ROUTINE SUBSTITUTES THE UNIT PARAMETER WITH *
*  UNIT=(GE,06).                                            *
*  IF THE ALLOCATION IS MADE WITH THE PARAMETER             *
*  UNIT=ESOTERIC NAME OTHER THAN GE OR WK THE ROUTINE       *
*  TAKES NO ACTION.                                         *
*                 * SBIBM 13-11-89 *                        *
*  A NEW SUBR 'DSNAME' WAS INTRODUCED FROM WHICH THE        *
*  LOCATE AND CATALOG MACROS ARE INVOKED TO UNCATALOG       *
*  DATASETS WITH DISP=(NEW,CATLG) AND CATALOGUED ON THE     *
*  PSEUDO VOLUME ARCIVE.  THIS AVOIDS ENDING WITH AN        *
*  UNNECESSARY AUTOMATIC RESTORE ON THE PART OF DMS.        *
*  THE REGISTERS USED AT THE GLOBAL LEVEL IN THE EXIT ARE:  *
*         R0          INPUT                                 *
*         R1          INPUT                                 *
*         R3          POINTS TO THE DDNAME                  *
*         R5          TYPE OF EDIT                          *
*         R7          LENGTH OF DATASET AT TIME OF LOCATE   *
*****     R9          POINTS TO UNIT PARAMETER          *****
         C     R0,=F'0'
         BNE   MSG
         MVC   $UNIT(7),$UNIT1
         L     R10,4(,R1)
         CLI   4(R10),X'6E'
         BNE   FINE
         MVI   $DISP,X'00'    UPDATE TO UNCATALOG DSETS NEW,CATLG
         LR    R3,R10         CATALOGUED ON VOLUME ARCIVE.
         SUBR  DISP
         C     R15,=F'0'
         BE    FINE
         LR    R10,R3
         SUBR  VOLUME
         C     R15,=F'0'
         BNE   FINE
         LR    R10,R3
         SUBR  DSNAME
         LR    R10,R3
         SUBR  UNIT
         C     R15,=F'0'
         BE    FINE
         LR    R9,R15
         LR    R10,R15
         SUBR  SORTWK
         C     R5,=F'0'
         BE    NOSORT
         SUBR  EDIT
         L     R1,REG1
         L     R7,0(,R1)
         MVI   0(R7),C'Y'
         B     FINE
NOSORT   LR    R10,R9
         SUBR  D3380
         C     R15,=F'0'
         BNE   WKPOOL
         LR    R10,R9
         SUBR  WK
         C     R15,=F'0'
         BNE   WKPOOL
         LR    R10,R9
         SUBR  GE
         C     R15,=F'0'
         BNE   GEPOOL
         LR    R10,R9
         SUBR  NOEXIT6
         C     R15,=F'0'
         BE    FINE
         SUBR  EDIT
         L     R1,REG1
         L     R7,0(,R1)
         MVI   0(R7),C'Y'
         B     FINE
GEPOOL   LR    R10,R9
         MVC   $UNIT(7),$GE
         SUBR  EDIT
         L     R1,REG1
         L     R7,0(,R1)
         MVI   0(R7),C'Y'
         B     FINE
WKPOOL   LR    R10,R9
         MVC   $UNIT(7),$WK
         SUBR  EDIT
         L     R1,REG1
         L     R7,0(,R1)
         MVI   0(R7),C'Y'
FINE     EQU   *
*****     RELEASE AREA OBTAINED FOR REENTRANCE          *****
         L     R13,SAVEAREA+4
         FREEMAIN RU,LV=MYDSSIZE,A=(R11)
         RETURN (14,12),RC=0
$MVC     MVC   1(0,R4),$UNIT
MSG      EQU   *
         L     R1,REG1
         L     R7,0(,R1)
         CLI   0(R7),C'Y'
         BNE   FINE
         MVC   WTOAREA+0(WTOLEN),WTO01  CLEAN UP MESSAGE AREA
         LA    R6,WTOAREA               PRT MESSAGE AREA
         LA    R6,4(R6)
         MVC   0(L'MSGUNIT,R6),MSGUNIT     ADD TO MESSAGE.
         LA    R6,WTOAREA              PRT MESSAGE ADDRESS.
         WTO   MF=(E,(R6))                  PERFORM WTO.
         B     FINE
*****             SUBROUTINE - DISP                     *****
*  SUMMARY         - LOOKS FOR PARAMETER DISP=NEW AND       *
*                    EQUIVALENTS OR PARAMETER DISP=MOD WITH *
*                    DDNAME=SYSCKEOV AND EQUIVALENTS ON THE *
*                    DD CARD.                               *
*  INPUT REGISTERS  - R10 POINTS TO THE START OF DD         *
*  OUTPUT REGISTERS - R15 POINTS TO THE PARAMETER DISP, IF  *
*                     R15=0 THE DISP IS DIFFERENT FROM NEW, *
*                     IF R15=1 THE DISP IS NOT PRESENT (THE *
*****                 DEFAULT IS NEW,DELETE,DELETE).    *****
DISP     EQU   *
         LA    R10,5(R10)
DISP00   EQU   *
         CLI   0(R10),X'FE'
         BE    DISP10
         CLI   0(R10),X'46'
         BE    DISP20
         LA    R10,1(R10)
         B     DISP00
DISP10   EQU   *
         LA    R15,1
         BR    R14
DISP20   EQU   *
         CLI   2(R10),X'00'
         BE    DISP44
         CLC   3(3,R10),=C'NEW'
         BE    DISP44
         CLC   3(3,R10),=C'MOD'
         BE    DISP30
         LA    R15,0
         BR    R14
DISP30   EQU   *
         XR    R7,R7
         IC    R7,6(R3)
         CH    R7,=H'8'
         BE    DISP40
         LA    R15,0
         BR    R14
DISP40   EQU   *
         CLC   7(8,R3),=C'SYSCKEOV'
         BE    DISP50
         LA    R15,0
         BR    R14
DISP44   EQU   *
         CLI   1(R10),X'01'
         BE    DISP50
         XR    R7,R7
         IC    R7,2(R10)
         AR    R7,R10
         AH    R7,=H'4'
         CLC   0(5,R7),=C'CATLG'
         BNE   DISP50
         MVI   $DISP,X'01'
DISP50   EQU   *
         LR    R15,R10
         BR    R14
*****             SUBROUTINE  - DSNAME                  *****
*  SUMMARY   - LOOKS FOR THE PARAMETER DSN ON THE DD CARD.  *
*  INPUT REGISTERS  - R10 POINTS TO THE START OF DD.        *
DSNAME   EQU   *
         CLI   $DISP,NEWCATLG
         BNE   DSNEXIT
         MVC   NAME(16),NAME1
         MVC   REMOVE(12),REMOVE1
         LA    R7,DSNLOCAT
         ST    R7,ADSNLOC
         LA    R7,CAMAREA
         ST    R7,ACAMAREA
         LA    R7,DSNUNCAT
         ST    R7,ADSNUNCT
         LA    R10,5(R10)
DSN00    EQU   *
         CLI   0(R10),X'FE'
         BE    DSNEXIT
         CLI   0(R10),X'4A'
         BE    DSN10
         LA    R10,1(R10)
         B     DSN00
DSN10    EQU   *
         CLI   1(R10),X'01'
         BNE   DSNEXIT
         TM    2(R10),X'80'
         BO    DSN20
         XR    R7,R7
         IC    R7,2(R10)
         B     LENDSN
DSN20    XR    R7,R7
         IC    R7,3(R10)
LENDSN   EQU   *
         BCTR  R7,0
         MVI   $DSNAME,X'40'
         MVC   $DSNAME+1(43),$DSNAME
         EX    R7,MVCDSN
         MVC   DSNLOCAT(44),$DSNAME
         STM   R0,R14,SAVEREGS
         LOCATE NAME
         LM    R0,R14,SAVEREGS
         LTR   R15,R15
         BNZ   DSNEXIT
         CLC   =C'ARCIVE',CAMAREA+6
         BNE   DSNEXIT
         MVC   DSNUNCAT(44),$DSNAME
         STM   R0,R14,SAVEREGS
         CATALOG REMOVE
         LM    R0,R14,SAVEREGS
         LTR   R15,R15
         BNZ   DSNEXIT
         STM   R0,R14,SAVEREGS
         MVC   WTOAREA+0(WTOLEN),WTO01 CLEAN UP MESSAGE AREA.
         LA    R6,WTOAREA            PRT MESSAGE AREA.
         LA    R6,4(R6)
         MVC   0(L'MSGUNCAT,R6),MSGUNCAT    ADD TO MESSAGE.
         MVC   L'MSGUNCAT(44,R6),$DSNAME     ADD TO MESSAGE.
         LA    R6,WTOAREA             PRT MESSAGE ADDRESS.
         WTO   MF=(E,(R6))                 PERFORM WTO.
         LM    R0,R14,SAVEREGS
DSNEXIT  EQU   *
         BR    R14
MVCDSN   MVC   $DSNAME(0),3(R10)
*****   SUBROUTINE  -  VOLUME                           *****
*  SUMMARY   -  LOOKS FOR VOL PARAMETER ON THE DD CARD.     *
*  INPUT REGISTERS  -  R10 POINTS TO THE START OF DD.       *
*  OUTPUT REGISTERS -  R15 POINTS TO THE VOL PARAMETER, IF  *
*                      R15=0 THE PARAMETER IS NOT PRESENT.  *
VOLUME   EQU   *
         LA    R10,5(R10)
VOL00    EQU   *
         CLI   0(R10),X'FE'
         BE    VOL01
         CLI   0(R10),X'4F'
         BE    VOL02
         LA    R10,1(R10)
         B     VOL00
VOL01    EQU   *
         LA    R15,0
         BR    R14
VOL02    EQU   *
         LR    R15,R10
         BR    R14

The rest of the source code for this JES2 exit 6 routine will be
published in next month's issue when we shall be concluding
this article.

Vincenzo Fontana
Technical Support
Enel Centro Di Teleinformatica (Italy)          © Vincenzo Fontana 1990

