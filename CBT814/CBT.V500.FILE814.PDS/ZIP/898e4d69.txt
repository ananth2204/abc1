Return codes and batch TSO

I read with interest the article published in Issue 28 of MVS
Update in January 1989 which referred to the absence of an
IEBRETURNCODE type of utility.  Batch TSO provides this
in part.  Batch IDCAMS can also be used to raise a particular
return code.  Batch TSO is superior in that you can build your
own logic into the CLIST, and, depending on the results, set
your own chosen return code.  I have made extensive use of
batch TSO to set return codes based on, for instance, the date,
the time, the day of the week.  The examples I have included
here are for the time and the day of the week.

The following job is submitted by automatic command once a
day.  We have our own procedures for ensuring that automatic
commands are not allowed to go off more than once a day.
The job copies the JES2 offload dataset to a backup dataset,
depending on the day.

The RCTIME CLIST checks that the current time is within the
boundaries of the two parameters passed to the CLIST.  A
return code of '00' means that it is within the prescribed time
range, a return code of '01' means that it is not.

The RCDAY CLIST sets a return code based on the day of the
week (eg 01 for Monday, 02 for Tuesday, etc) and performs a
similar function to the program published in Issue 8 in May
1987.

SUBMITTED JOB

//Jobname  JOB (Account),'SUPERVISOR OPS',CLASS=D,
//             MSGCLASS=X,MSGLEVEL=(1,1)
//TIME      EXEC PGM=IKJEFT01,PARM='%RCTIME T1(0745) T2(0800)'
//*   DETERMINE THE CURRENT TIME AND SET THE RETURN-CODE
//SYSPRINT  DD  SYSOUT=T
//SYSTSPRT  DD  SYSOUT=T
//SYSPROC   DD  DSN=clist.library,DISP=SHR
//SYSTSIN   DD  DUMMY
//*                        ISSUE THE WTO IF THE TIME IS OUTSIDE
//*                        NORMAL PERIOD OF 07:45 TO 08:00
//MESSAGE   EXEC WTO,COND=(01,NE,TIME)
---> * * * * * * * DAILY SPOOL OFFLOAD BACKUP  * * * * * * <---
---> *      THIS JOB SHOULD ONLY RUN   O N C E   A DAY   * <---
---> *      USUALLY AT 07.46AM.   IF YOU RUN IT MORE     * <---
---> *      THAN ONCE, YOU WILL LOSE  A L L  THE         * <---
---> *      OFFLOAD DATA.   IF IT HAS ALREADY RUN,       * <---
---> *      CANCEL Jobname.  ($C'Jobname')               * <---
---> *      OTHERWISE REPLY "CON" TO CONTINUE.           * <---
---> * * * * * * * * * * * * * * * * * * * * * * * * * * * <---
/*
//RC        EXEC PGM=IKJEFT01,PARM='%RCDAY'
//*   DETERMINE THE DAY AND SET THE RETURN-CODE
//SYSPRINT  DD  SYSOUT=T
//SYSTSPRT  DD  SYSOUT=T
//SYSPROC   DD  DSN=clist.library,DISP=SHR
//SYSTSIN   DD  DUMMY
//*
//STEPMON  EXEC PGM=IEFBR14,COND=(01,NE,RC)
//SYSPRINT  DD  SYSOUT=X
//SYSIN     DD  DUMMY
//SYSUT1    DD  DSN=hlq.SPOOL.OFF1BUP.MON,DISP=(OLD,DELETE)
//SYSUT2    DD  DUMMY
//*
//STEPMN2  EXEC PGM=IEBGENER,COND=(01,NE,RC)
//SYSPRINT  DD  SYSOUT=X
//SYSIN     DD  DUMMY
//SYSUT1    DD  DSN=hlq.SPOOL.OFFLOAD1,DISP=OLD
//SYSUT2    DD  DSN=hlq.SPOOL.OFF1BUP.MON,DISP=(,CATLG),
//           SPACE=(CYL,(50,30)),VOL=SER=SYSnnn,UNIT=SYSDA,
//           DCB=hlq.SPOOL.OFF1BUP.DCB
//*

   etc

//STEPSUN  EXEC PGM=IEFBR14,COND=(07,NE,RC)
//SYSPRINT  DD  SYSOUT=X
//SYSIN     DD  DUMMY
//SYSUT1    DD  DSN=hlq.SPOOL.OFF1BUP.SUN,DISP=(OLD,DELETE)
//SYSUT2    DD  DUMMY
//*
//STEPSU2  EXEC PGM=IEBGENER,COND=(07,NE,RC)
//SYSPRINT  DD  SYSOUT=X
//SYSIN     DD  DUMMY
//SYSUT1    DD  DSN=hlq.SPOOL.OFFLOAD1,DISP=OLD
//SYSUT2    DD  DSN=hlq.SPOOL.OFF1BUP.SUN,DISP=(,CATLG),
//           SPACE=(CYL,(50,30)),VOL=SER=SYSnnn,UNIT=SYSDA,
//           DCB=hlq.SPOOL.OFF1BUP.DCB
//*
//CLEANUP  EXEC PGM=IEBGENER,COND=(00,EQ,RC)
//SYSPRINT  DD  SYSOUT=X
//SYSIN     DD  DUMMY
//SYSUT1    DD  DSN=NULLFILE,DCB=hlq.SPOOL.OFF1BUP.DCB
//SYSUT2    DD  DSN=hlq.SPOOL.OFFLOAD1,DISP=OLD

Where hlq is the high-level qualifier, clist.library is a PDS
containing your CLISTs, jcl.library is where you keep your
housekeeping JCL, and SYSnnn is the volume you have the
datasets on.

RCTIME CLIST

PROC 0 T1() T2()
/* PURPOSE:  TO DETERMINE IF THE MAINFRAME TIME IS BETWEEN THE     */
/*           TWO TIMES FED TO THIS CLIST (IN HHMM FORMAT)          */
/*           IF IT IS, EXIT WITH RETURN CODE 00, OTHERWISE 01.     */
/* USED:     jcl.library(OFFBUP) AND OTHER JOBS THAT IN THE        */
/*           NORMAL COURSE RUN AT A PRE-DEFINED TIME EACH DAY      */
IF &T1 = &STR() THEN EXIT CODE(1)
IF &T2 = &STR() THEN EXIT CODE(1)
SET &TIME = &SUBSTR(1:2,&SYSSTIME)&SUBSTR(4:5,&SYSSTIME)
IF &TIME < &T1 THEN EXIT CODE(1)
IF &TIME > &T2 THEN EXIT CODE(1)

RCDAY CLIST

PROC 0 D() M() Y()
/* PURPOSE:  SET RETURN-CODE OF 1,2,3,4,5,6,7, DEPENDING ON        */
/*           THE DAY (MONDAY, TUESDAY, WEDNESDAY, THURSDAY ETC)    */
/* USED:     jcl.library(SCSTUES,SCSFRI,JOB0700,JOB1600,OFFBUP)    */
/*           AND OTHER JOBS THAT ARE RELATED TO CERTAIN DAYS       */
IF &D = &STR() THEN SET &D = &SUBSTR(4:5,&SYSDATE)
IF &M = &STR() THEN SET &M = &SUBSTR(1:2,&SYSDATE)
IF &Y = &STR() THEN SET &Y = &SUBSTR(7:8,&SYSDATE)
SET &LEAP = 0
IF &Y // 4 = 0 THEN SET &LEAP = 1
/* CALCULATE JULIAN DATE                                             */
IF &M = 12 THEN SET &JUL = 334 + &LEAP + &D
IF &M = 11 THEN SET &JUL = 304 + &LEAP + &D
IF &M = 10 THEN SET &JUL = 273 + &LEAP + &D
IF &M = 9 THEN SET &JUL = 243 + &LEAP + &D
IF &M = 8 THEN SET &JUL = 212 + &LEAP + &D
IF &M = 7 THEN SET &JUL = 181 + &LEAP + &D
IF &M = 6 THEN SET &JUL = 151 + &LEAP + &D
IF &M = 5 THEN SET &JUL = 120 + &LEAP + &D
IF &M = 4 THEN SET &JUL = 090 + &LEAP + &D
IF &M = 3 THEN SET &JUL = 059 + &LEAP + &D
IF &M = 2 THEN SET &JUL = 031 + &D
IF &M = 1 THEN SET &JUL = &D
/* FIND THE INCLUSIVE NUMBER OF DAYS TO THE FIRST SUNDAY IN THE YEAR */
/* SUBTRACTED FROM 8.                                                */
/* &W1 = NUMBER OF YEARS SINCE 1920 */
SET &W1 = &Y - 20
/* &W2 = NUMBER OF COMPLETED LEAPYEARS SINCE 1920 */
SET &W2 = &W1 - 1
SET &W2 = &W2 / 4
/* &W3 = CORRECTION FACTOR MULTIPLIED BY SOME NUMBER OF SEVENS */
SET &W3 = 3 + &W1 + &W2
/* &COR = THE REMAINDER OF &W3 / 7 */
SET &COR = &W3 // 7
SET &F = &JUL // 7
SET &F = &F + &COR
SET &F = &F // 7
SET &F = &F+1
EXIT CODE(&F)


Ted Smith
Supervisor, Technical Support Group
Security Computer Services (Australia)            c Xephon 1990

