Allowing the help desk to reset passwords


BACKGROUND

With the installation of CICS 3.3 and the required addition of
RACF security, the number of RACF user-ids increased from
approximately 600 to approximately 1,100. The resultant
increase in requests to have passwords reset and user-ids
resumed caused the security administrator to be swamped with
telephone calls. To address this situation, a policy change was
implemented to allow the help desk to reset passwords
following verification. The problem then was how to give the
help desk the capability of resetting passwords while restricting
them from all other RACF functions. The solution to the
problem was to create a new TSO command which provided
this function.


SOLUTION

The resultant Assembler program obtains the special attribute
for the invoker, issues the ALTUSER command using the TSO
Service Facility, and then removes the special attribute from
the invoker's in-storage ACEE: at no time is the RACF
database itself modified to grant the special attribute. It also
ensures that the invoker cannot reset a privileged user and then
log-on to that user-id to obtain either the special or operations
attribute for general use. The program also turns on logging to
guarantee that any functions which are performed using this
command are logged to the SMF datasets for later reporting.
This has allowed the security administrator to see if there are
any patterns of user-ids being reset with undue frequency.

Invocation of the new command is protected through READ
access to a new profile of 'PASSWORD.RESET' which was
added to the RACF FACILITY class. As the FACILITY class
is RACLISTed, the SETROPS REFRESH
RACLIST(FACILITY) command will need to be issued
whenever the access list is modified.


PROGRAM DETAILS

As we run RACF 1.9, 'ENTITYX' was used in the
RACROUTE macros to prevent having to recompile in the
event that a length was to change through the application of
RACF maintenance. 'ENTITY' will have to be used on RACF
versions below the 1.9 level. Also, the RELEASE parameter
will need to be modified to reflect the proper level of RACF.

The new command is invoked from TSO with the TSO
RESETP userid command, where userid is the RACF user-id to
be resumed. The new password will be the user-id itself. Since
the new command is a TSO command, it can of course be
executed as a TSO batch job.

The program must be in an authorized library and must be
linked AC=1. It must also be included in
SYS1.PARMLIB(IKJTSO00) under the AUTHCMD and
AUTHPGM keywords, and ALTUSER must be added to
SYS1.PARMLIB(IKJTSO00) under the AUTHTSF keyword.


JCL to assemble and link the program

//JOBCARD  JOB
//ASM      EXEC PGM=ASMA90,PARM=(OBJECT,NODECK)
//SYSLIB   DD  DSN=SYS1.MODGEN,DISP=SHR
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,SPACE=(4096,(600,100))
//SYSUT2   DD  DSN=&&SYSUT2,UNIT=VIO,SPACE=(4096,(300,50))
//SYSUT3   DD  DSN=&&SYSUT3,UNIT=VIO,SPACE=(4096,(300,50))
//SYSUDUMP DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSLIN   DD  DSN=&&OBJLIB,DISP=(NEW,PASS),SPACE=(4096,(600,100)),
//             UNIT=SYSDA,DCB=BLKSIZE=80
//SYSIN    DD  DSN=srclib(source),DISP=SHR     ** Your Source Library **
//*
//LKED     EXEC PGM=IEWL,COND=(4,LT,ASM),
//         PARM='LIST,XREF,MAP,NCAL,AC=1'
//SYSPRINT DD  SYSOUT=*
//SYSLMOD  DD  DSN=loadlib(loadmod),DISP=SHR   ** Your Load Library   **
//SYSUT1   DD  DSN=&&SYSUT1,SPACE=(4096,(120,120),,,ROUND),UNIT=VIO,
//             DCB=BUFNO=1
//SYSLIN   DD  DSN=&&OBJLIB,DISP=(OLD,DELETE)
//         DD  *
 NAME RESETP(R)
/*


PROGRAM SOURCE CODE

*        Register Usage
*        R1  = Pointer to Parameter List
*        R2  = Pointer to Userid
*        R3  = Length of Parameter
*        R4  = Entity
*        R5  = Work Register
*        R6  = Work Register
*        R7  = Number of Spaces preceding Userid
*        R8  = Anchor for RACF Extract Result
*        R9  = Work Register
*        R10 = Return Code
&MOD     SETC  'RESETP'                SET CSECT NAME
&MODLEN  SETA  K'&MOD
&MOD     CSECT
&MOD     AMODE 31
&MOD     RMODE 24
         SAVE  (14,12),,RESETP-&SYSDATE-&SYSTIME
         BALR  12,0                    STANDARD LINKAGE
         USING *,12
         LA    11,SAVEREG
         ST    13,4(11)
         ST    11,8(13)
         LR    13,11
         L     R2,0(R1)                GET NAME ADDR
         LH    R3,0(R2)                GET NAME LENGTH
         CH    R3,=AL2(5+&MODLEN)      TEST FOR USERID
         BNH   NOPARM                  IF ZERO, IGNORE
         AH    R2,=AL2(5+&MODLEN)      POINT TO BEGINNING OF SUPP NAME
         SH    R3,=AL2(5+&MODLEN)      SUBTRACT HEADER TO GET NAME LEN
         SR    R7,R7                   SPACE COUNTER
NAMECK   EQU   *                       SCAN FOR FIRST NON-BLANK
         LA    R9,0(R2,R7)             LOAD ADDR OF CHAR IN NAME
         CLI   0(R9),C' '              IS IT BLANK?
         BNE   FIRSTNB                 IF NOT BRANCH TO FIRSTNB
         LA    R7,1(R7)                INCREMENT COUNTER
         CR    R7,R3                   END OF NAME ?
         BH    BADPARM                 YES, WRITE ERROR
         B     NAMECK                  NO, GET NEXT CHARACTER
FIRSTNB  EQU   *                       FIRST NONBLANK CHAR FOUND
         SR    R3,R7                   SUBTRACT NO OF BLANKS IN NAME
         ST    R3,NAMEPROF             STORE LENGTH OF USERID
         LA    R5,7                    SET STANDARD LENGTH
         CR    R3,R5                   COMPARE NAME LENGTH WITH STD
         BH    LONGPARM                IF TOO LONG WRITE ERROR
         BCTR  R3,0                    SUBTRACT 1 FROM LENGTH
         EX    R3,GETNAME              MOVE IN PARAMETER
         OC    NAME,=CL7' '            TRANSLATE NAME TO UPPERCASE
         L     R1,PSAAOLD-PSA(0)       R1 POINTS AT ASCB
         USING ASCB,R1
         L     R1,ASCBASXB             R1 POINTS AT ASXB
         USING ASXB,R1
         L     R2,ASXBSENV             R2 POINTS AT ACEE
         USING ACEE,R2                 ESTABLISH ADDRESSABILITY TO ACEE
         DROP  R1                      REMOVE ADDRESSABILITY
AUTHCK   EQU   *
         LA    R4,PROFILE              LOAD ADDRESS OF PROFILE TO CHECK
         RACROUTE REQUEST=AUTH,WORKA=RACFWORK,LOG=ASIS,RELEASE=1.9,    X
               ENTITYX=((R4)),CLASS='FACILITY',ATTR=READ
         LTR   R10,R15                 CHECK RACF RETURN CODE
         BNZ   NOTAUTH                 IF NOT AUTH BRANCH TO ERROR
SPECCK   EQU   *
         EX    R3,MOVENAME             PREPARE FOR RACF CALL
         LA    R4,NAMEPROF             LOAD ADDRESS OF USERID TO CHECK
         RACROUTE REQUEST=EXTRACT,TYPE=EXTRACT,RELEASE=1.9,            X
               CLASS='USER',ENTITYX=((R4)),FIELDS=FLDLIST,             X
               SEGMENT='BASE',WORKA=RACFWORK
         LTR   R10,R15                 CHECK RACF RETURN CODE
         BNZ   RACFFAIL                IF EXTRACT FAILED WRITE ERROR
         LR    R8,R1                   SAVE RESULTS ADDRESS
         USING RESULTS,R8              ESTABLISH ADDRESSABILITY
         MVC   RACFSPEC,RESULT1        COPY RESULTS
         MVC   RACFOPER,RESULT2        COPY RESULTS
         SR    R5,R5                   ZERO OUT REGISTER
         SR    R6,R6                   ZERO OUT REGISTER
         ICM   R5,B'0001',SUBPOOL      GET THE SUBPOOL
         ICM   R6,B'0111',SUBPOOLL     GET THE SUBPOOL LENGTH
         DROP  R8                      REMOVE ADDRESSABILITY
         FREEMAIN R,LV=(R6),A=(R8),SP=(R5) FREE RESULT AREA
         CLI   RACFSPEC,X'80'          IS THIS USER A 'SPECIAL' USER?
         BE    NOTSPEC                 NOT AUTHORIZED, WRITE ERROR
         CLI   RACFOPER,X'80'          IS THIS USER 'OPERATIONS' USER?
         BE    NOTSPEC                 NOT AUTHORIZED, WRITE ERROR
ONSPEC   EQU   *
         MODESET KEY=ZERO              GET READY TO CHANGE BIT IN ACEE
         OI    ACEEFLG1,ACEESPEC       SET SPECIAL ON
         OI    ACEEFLG1,ACEELOGU       ENSURE ACTIONS ARE LOGGED
         MODESET KEY=NZERO             RETURN TO USER KEY
EXCMD    EQU   *
         EX    R3,SETUSER              INSERT USERID INTO CMDBUF
         EX    R3,SETPASS              INSERT PASSWORD INTO CMDBUF
         L     R15,CVTPTR              ESTABLISH
         L     R15,CVTTVT(,R15)        ADDRESSABILITY TO THE
         L     R15,TSVTASF-TSVT(,R15)  TSO SERVICE FACILITY
         CALL  (15),(FLAGS,CMDBUF,BUFLEN,RETCODE,RSNCODE,ABNDCODE),VL
         LTR   R15,R15                 CHECK RETURN CODE OF TSF
         BNZ   CMDFAIL                 SEND ERROR MESSAGE
         CLC   RETCODE,=F'0000'        CHECK RETURN CODE OF ALTUSER
         BH    CMDFAIL                 SEND ERROR MESSAGE
         SR    R10,R10                 SET RETURN CODE
         TPUT  =CL33'USERID RESUMED AND PASSWORD RESET',33
OFFSPEC  EQU   *
         MODESET KEY=ZERO              GET READY TO CHANGE BIT IN ACEE
         NI    ACEEFLG1,255-ACEESPEC   SET SPECIAL OFF
         NI    ACEEFLG1,255-ACEELOGU   TURN LOGGING OFF
         MODESET KEY=NZERO             RETURN TO USER KEY
EXIT     EQU   *
         L     R13,SAVEREG+4           RETURN
         LR    R15,R10                 SET RETURN CODE
         RETURN (14,12),RC=(15)
NOTAUTH  EQU   *
         TPUT  =CL44'YOU ARE NOT AUTHORIZED TO RESET RACF USERIDS',44
         B     EXIT
NOTSPEC  EQU   *
         TPUT  =CL43'YOU ARE NOT AUTHORIZED TO RESET THIS USERID',43
         LA    R10,16                  SET RETURN CODE
         B     EXIT
BADPARM  EQU   *
         TPUT  =CL42'USERID SHOULD BE A 7 CHARACTER RACF USERID',42
         LA    R10,16                  SET RETURN CODE
         B     EXIT
LONGPARM EQU   *
         TPUT  =CL43'USERID CANNOT EXCEED 7 CHARACTERS IN LENGTH',43
         LA    R10,16                  SET RETURN CODE
         B     EXIT
NOPARM   EQU   *
         TPUT  =CL42'USERID MUST BE SPECIFIED TO RESET PASSWORD',42
         LA    R10,16                  SET RETURN CODE
         B     EXIT
RACFFAIL EQU   *
         TPUT  =CL36'RACF EXTRACT FAILED - NOTIFY SYSTEMS',36
         B     EXIT
CMDFAIL  EQU   *
         TPUT  =CL38'PASSWORD RESET FAILED - NOTIFY SYSTEMS',38
         B     OFFSPEC
SAVEREG  DC    18F'0'                  SAVE AREA
NAME     DC    CL7' '                  PARAMETER SUPPLIED TO PROGRAM
RACFSPEC DC    X'0' '                  RACF SPECIAL AUTHORITY
RACFOPER DC    X'0' '                  RACF OPERATIONS AUTHORITY
PROFILE  DC    H'0'                    RACF PROFILE BUFFER LENGTH
PROFLEN  DC    H'0014'                 RACF PROFILE NAME LENGTH
PROFNAME DC    CL14'PASSWORD.RESET'    RACF PROFILE NAME
NAMEPROF DC    H'0'                    RACF PROFILE BUFFER LENGTH
NAMELEN  DC    H'0007'                 RACF PROFILE NAME LENGTH
USERID   DC    CL7' '                  RACF PROFILE NAME
FLDLIST  DC    A(2)                    FIELDS TO TEST FOR RACF EXTRACT
         DC    CL8'FLAG2'              CHECK FOR THE SPECIAL ATTRIBUTE
         DC    CL8'FLAG3'              CHECK FOR THE OPERATIONS ATTRIB
GETNAME  MVC   NAME(0),0(R9)           EX INSTRUCTION TO MOVE NAME
MOVENAME MVC   USERID(0),NAME          MOVE NAME TO USERID TO CHECK
SETUSER  MVC   CMDBUF+8(0),NAME        INSERT USERID INTO CMDBUF
SETPASS  MVC   CMDBUF+25(0),NAME       INSERT NEW PASSWORD INTO CMDBUF
FLAGS    DS    0F                      MAPS FIRST PARM TO IKJEFTSR
RESFLAGS DC    H'0'                    FLAG WORD
ABFLAGS  DC    X'01'                   DUMP IF ABEND OCCURS
FNCFLAGS DC    X'01'                   TELL TSR TO EXECUTE A COMMAND
CMDBUF   DC    CL40'ALTUSER         PASSWORD(       ) RESUME'
BUFLEN   DC    F'40'                   LENGTH OF COMMAND BUFFER
RETCODE  DS    F                       RETURN CODE FROM COMMAND
RSNCODE  DS    F                       REASON CODE
ABNDCODE DS    F                       ABEND CODE
RACFWORK DS    128F                    WORKAREA FOR RACROUTE
         REGS                          DEFINE REGISTERS
CVTPTR   EQU   16                      TSO SERVICE FACILITY
CVTTVT   EQU   X'9C'                   TSO SERVICE FACILITY
         LTORG
RESULTS  DSECT                         OUTPUT FROM EXTRACT
SUBPOOL  DS    XL1                     IDENTIFIES SUBPOOL
SUBPOOLL DS    XL3                     IDENTIFIES SUBPOOL LENGTH
RESLTOFF DS    XL2                     OFFSET TO RESULTS
RACFFLAG DS    X                       FLAG BYTE
RESRV    DS    XL9                     RESERVED BY IBM
PLANG    DS    XL3                     PRIMARY LANGUAGE
SLANG    DS    XL3                     SECONDARY LANGUAGE
PLANGD   DS    X                       PRIMARY LANGUAGE - SETROPTS
SLANGD   DS    X                       SECONDARY LANGUAGE - SETROPTS
RUSERID  DS    CL8                     EXTRACTED USERID
RGROUP   DS    CL8                     EXTRACTED CONNECT GROUP
RESLTLN1 DS    XL4                     LENGTH OF FIELD ONE
RESULT1  DS    X                       RESULT OF THE EXTRACT
RESLTLN2 DS    XL4                     LENGTH OF FIELD TWO
RESULT2  DS    X                       RESULT OF THE EXTRACT
         IHAPSA
         IHAASCB
         IHAASXB
         IHAACEE
         IKJTSVT
         END


William R Olsen
Systems Analyst
Nevada Power Company (USA)                        c Xephon 1993

