ISPF edit macros

INTRODUCTION

At our installation we have three edit macros which can be used to 
help make lines and boxes.  The three edit macros are:

¥	ZVLINE for vertical lines

¥	ZHLINE for horizontal lines

¥	ZBOX for drawing boxes.

A detailed explanation of their use can be found in the initial 
comments to the CLISTs.  These edit macros are written so that 
they can be called recursively from other edit macros to make 
more complex drawings.

EDIT MACRO ZVLINE

 /* EDIT MACRO TO DRAW A VERTICAL LINE FROM CURSOR POSITION AND DOWN
 /* PARAMETERS: LENGTH OF LINE OR DELIMITER (DEFAULTS TO LENGTH OF 1)
 /*             CHARACTER TO FORMAT THE LINE (DEFAULTS TO |)
 /*             IF DELIMITER IS USED LINE WILL BE DRAWN UNTIL DELIMITER
 /*             CURSOR WILL BE PLACED AT LAST CHARACTER OF LINE OR
 /*             DELIMITER IF ANY.
PROC 0
CONTROL   MSG NOFLUSH NOLIST NOCONLIST NOSYMLIST
IF &SYSNEST = NO THEN DO
 ISREDIT MACRO (LINELEN,CHARTYPE) PROCESS
END
ISPEXEC CONTROL ERRORS RETURN
ERROR DO
 SET &RET = &LASTCC
 RETURN
END
GLOBAL &LINELEN &CHARTYPE
SET &RET = 0
IF &STR(&LINELEN..) = . THEN DO
 SET &LINELEN = 1
END
SET &DELIM =
IF &DATATYPE(&STR(&LINELEN)) = CHAR THEN DO
 SET &DELIM = &SUBSTR(1:1,&STR(&LINELEN))
 ISREDIT (LINELEN) = LINENUM .ZLAST
 ISREDIT (ROW,COL) = CURSOR
 SET &LINELEN = &LINELEN - &ROW + 1
END
SET &LINTYPE = &STR(&CHARTYPE)
IF &STR(&LINTYPE..) = . THEN DO
 SET &LINTYPE = &STR(|)
END
ELSE DO
 SET &LINTYPE = &SUBSTR(1:1,&STR(&LINETYPE))
END
IF &LINELEN = 0 THEN DO
 SET &ZEDLMSG = LINELENGTH MUST BE AT LEAST ONE
 ISPEXEC SETMSG MSG(ISRZ000)
 EXIT CODE(16)
END
ISREDIT (L) = LINENUM .ZLAST
IF &L = 0 THEN DO
 ISREDIT LINE_AFTER .ZFIRST = DATALINE MASKLINE
END
ISREDIT (ROW,COL) = CURSOR
IF &ROW = 0 | &COL = 0 THEN DO
 SET &ZEDLMSG = +
 SYNTAX IS LENGTH OR DELIMITER AND OPTIONALLY LINE CHARACTER
 ISPEXEC SETMSG MSG(ISRZ000)
 EXIT CODE(16)
END
ISREDIT (BOT) = LINENUM .ZLAST
SET &N = 0
DO WHILE &N < &LINELEN
 IF &BOT < &EVAL(&ROW + &N) AND &STR(&DELIM..) = . THEN DO
  ISREDIT LINE_AFTER .ZLAST = DATALINE MASKLINE
  ISREDIT LINE &EVAL(&ROW + &N) = LINE + < &COL '&LINTYPE'>
  SET &ENDPOS = &ROW + &N
 END
 IF (&BOT >= &EVAL(&ROW + &N - 1) AND &STR(&DELIM..) = .) OR +
 (&BOT >= &EVAL(&ROW + &N) AND &STR(DELIM..) ^= .) THEN DO
 ISREDIT (LINESTR) = LINE &EVAL(&ROW + &N)
 SET &ENDPOS = &ROW + &N
 IF &SUBSTR(&COL:&COL,&STR(&LINESTR)) = +
 &STR(&DELIM) AND &STR(&DELIM..) ^= . THEN DO
  SET &N = &LINELEN
 END
 ELSE DO
  ISREDIT LINE &EVAL(&ROW + &N) = LINE + < &COL '&LINTYPE'>
 END
END
 SET &N = &N + 1
END
SET &ROW = &ENDPOS
ISREDIT CURSOR = (ROW,COL)
EXIT CODE(&MAXCC)

EDIT MACRO ZHLINE

PROC 0 
 /* EDIT MACRO TO DRAW A HORIZONTAL LINE FROM CURSOR POSITION
 /* PARAMETERS: LENGTH OF LINE OR DELIMITER (DEFAULTS TO LENGTH OF 1)
 /*             CHARACTER TO FORMAT THE LINE (DEFAULTS TO HYPHEN)
 /*             IF DELIMITER IS USED LINE WILL BE DRAWN UNTIL DELIMITER
CONTROL   MSG NOFLUSH NOLIST NOCONLIST NOSYMLIST
IF &SYSNEST = NO THEN DO
 ISREDIT MACRO (LINELEN,CHARTYPE) PROCESS
END
ISPEXEC CONTROL ERRORS RETURN
ERROR DO
 SET &RET = &LASTCC
 RETURN
END
GLOBAL &LINELEN &CHARTYPE
SET &RET = 0
IF &STR(&LINELEN..) = . THEN DO
 SET &LINELEN = 1
END
SET &DELIM =
IF &DATATYPE(&STR(&LINELEN)) = CHAR THEN DO
 SET &DELIM = &SUBSTR(1:1,&STR(&LINELEN))
 ISREDIT (LINELEN) = LRECL
END
SET &LINTYPE = &STR(&CHARTYPE)
IF &STR(&LINTYPE..) = . THEN DO
 SET &LINTYPE = &STR(-)
END
ELSE DO
 SET &LINTYPE = &SUBSTR(1:1,&STR(&LINTYPE))
END
ISREDIT (ROW,COL) = CURSOR
IF &LINELEN = 0 THEN DO
 SET &ZEDLMSG = LINELENGTH MUST BE AT LEAST ONE
 ISPEXEC SETMSG MSG(ISRZ000)
 EXIT CODE(16)
END
ISREDIT (L) = LINENUM .ZLAST
IF &L = 0 THEN DO
 ISREDIT LINE_AFTER .ZFIRST = DATALINE MASKLINE
END
IF &ROW = 0 | &COL = 0 THEN DO
 SET &ZEDLMSG = +
 SYNTAX IS LENGTH OF LINE OR DELIMITER, AND OPTIONALLY LINE CHARACTER
 ISPEXEC SETMSG MSG(ISRZ000)
 EXIT CODE(16)
END
ISREDIT (MAXLINE) = LRECL
SET &MAXLINE = &MAXLINE + 1 = &COL
SET &N = 0
SET &LINE =
DO WHILE &N < &LINELEN AND &N < &MAXLINE
 ISREDIT (LINESTR) = LINE &ROW
 SET &ENDPOS = &COL + &N
 IF &SUBSTR(&ENDPOS:&ENDPOS,&STR(&LINESTR)) = +
 &STR(&DELIM) AND &STR(&DELIM..) ^= . THEN DO
  SET &N = LINELEN
 END
 ELSE DO
  SET &N = N + 1
  SET &LINE = &STR(&LINE)&STR(&LINTYPE)
 END
END
IF &STR(&LINE..) ^= . THEN DO
 ISREDIT LINE &ROW = LINE + < &COL '&LINE'>
END
SET &COL = &ENDPOS + 1
IF &STR(&DELIM..) ^= . THEN DO
 SET &COL = &ENDPOS
END
ISREDIT CURSOR = (ROW,COL)
EXIT CODE(&MAXCC)

EDIT MACRO ZBOX

 /* EDIT MACRO TO DRAW A BOX (OR A BOX LINE IE ONE DIMENSIONAL BOX)
 /*            THE TOP LEFT CORNER WILL BE IN THE CURSOR POSITION.
 /*            CURSOR WILL BE LEFT INSIDE THE BOX TOP LEFT CORNER, OR IN
 /*            CASE OF A LINE AT THE END OF THE LINE.
 /* PARAMETERS: 1: WIDTH (HORIZONTAL LENGTH) DEFAULTS TO 3
 /*             2: DEPTH (VERTICAL LENGTH) DEFAULTS TO 3
 /*             3: CORNER CHARACTER (DEFAULT +) OR OFF OR FULL
 /*             4: SIDE CHARACTER (DEFAULT - HORIZONTALLY AND | VERTI-
 /*                CALLY) OR OFF OR FULL
 /*             5: FULL (DEFAULT TO EMPTY)
 /*
 /*             IF FULL IS USED, THE BOX WILL BE DRAWN AROUND EXISTING
 /*             DATA WHICH WILL REMAIN INSIDE THE BOX. IF EMPTY THEN THE
 /*             BOX WILL ALWAYS BE DRAWN WITH BLANK CENTRE.
 /*             IF OFF IS USED IN CORNER AND NO SIDE CHARACTER IS
 /*             INDICATED, THE BOX WILL BE REMOVED;
 /*             IF OFF IS USED IN CORNER AND SIDECHARACTER IS INDICATED,
 /*             OR CORNER IS INDICATED TOGETHER WITH SIDECHARACTER OFF,
 /*             THEN THE APPROPRIATE BOX PARTS WILL BE REMOVED.
 /*             FOR REMOVAL OF BOX OR PART OF A BOX, FULL OR EMPTY RULES
 /*             AS ABOVE WILL APPLY.
 /*             A LINE CAN BE DRAWN USING A DEPTH OR WIDTH OF 1.
 /* EXAMPLES: ZBOX 5 3               +Ñ+
 /*                                  |   |
 /*                                  +Ñ+
 /*
 /*           ZBOX 1 1               +
 /*
 /*           ZBOX 7 1 A B           ABBBBBA
 /*                                                                +
 /*           ZBOX 7 3 < *           <*****<  <*****<  <     <  <  |  <
 /*           PLACE ZXC INSIDE       *     *  * ZCX *    ZCX      Z|X
 /*           ZBOX 7 3 < OFF FULL    <*****<  <*****<  <     <  <  |  <
 /*           ZBOX 1 5 
PROC 0
CONTROL   MSG NOFLUSH NOLIST NOCONLIST NOSYMLIST
IF &SYSNEST = NO THEN DO
 ISREDIT MACRO (WIDTH,DEPTH,CORNER,CHARTYPE,FULL) PROCESS
END
ISPEXEC CONTROL ERRORS RETURN
GLOBAL &WIDTH &DEPTH &CORNER &CHARTYPE &FULL
ERROR DO
 SET &RET = &LASTCC
 RETURN
END
SET &RET = 0
IF &STR(&WIDTH..) = . THEN DO
 SET &WIDTH = 3
END
IF &STR(&DEPTH..) = . THEN DO
 SET &DEPTH = 3
END
IF &STR(&CORNER..) = . THEN DO
 SET &CORNER = &STR(+)
END
ELSE DO
 IF &STR(&CORNER) = OFF THEN DO
  SET &CORNER = &STR( )
  SET &CORNOFF = YES
 END
 ELSE DO
  IF &STR(&CORNER) = FULL THEN DO
   SET &FULL = &CORNER
   SET &CORNER = &STR(+)
  END
  ELSE DO
   SET &CORNER = &SUBSTR(1:1,&STR(&CORNER))
  END
 END
END
SET &LIDCHAR = &STR(&CHARTYPE)
IF &STR(&LIDCHAR..) = . THEN DO
 IF &STR(&CORNOFF..) = YES. THEN DO
  SET &LIDCHAR = &STR()
  SET &VERTCHAR = &STR(&LIDCHAR)
 END
 ELSE DO
  SET &LIDCHAR = &STR(-)
  SET &VERTCHAR = &STR(|)
 END
END
ELSE DO
 IF &STR(&LIDCHAR) = OFF THEN DO
  SET &LIDCHAR = &STR( )
  SET &VERTCHAR = &STR(&LIDCHAR)
 END
 ELSE DO
  IF &STR(&LIDCHAR) = FULL THEN DO
   SET &FULL = &LIDCHAR
   IF &STR(&CORNOFF..) = YES. THEN DO
    SET &LIDCHAR = &STR( )
    SET &VERTCHAR = &STR(&LIDCHAR)
   END
   ELSE DO
    SET &LIDCHAR = &STR(-)
    SET &VERTCHAR = &STR(|)
   END
  END
  ELSE DO
   SET &LIDCHAR = &SUBSTR(1:1,&STR(&LIDCHAR))
   SET &VERTCHAR = &STR(&LIDCHAR)
  END
 END
END
IF &DATATYPE(&STR(&WIDTH)) ^= NUM | &DATATYPE(&STR(&DEPTH)) ^= NUM +
THEN DO
 SET &ZEDLMSG = SIZE OF BOX MUST BE INDICATED AS NUMERIC WIDTH AND DEPTH
 ISPEXEC SETMSG MSG(ISRZ000)
 EXIT CODE(16)
END
ISREDIT (L) = LINENUM .ZLAST
IF &L = 0 THEN DO
 ISREDIT LINE_AFTER .ZFIRST = DATALINE MASKLINE
END
ISREDIT (ROW,COL) = CURSOR
IF &ROW = 0 | &COL = 0 THEN DO
 SET &ZEDLMSG = +
 SYNTAX IS WIDTH AND DEPTH, AND EVT: CHARS FOR CORNER AND SIDE AND FULL
 ISPEXEC SETMSG MSG(ISRZ000)
 EXIT CODE(16)
END
SET &HYPH = &WIDTH - 2
SET &EXCL = &DEPTH - 2
IF &WIDTH < 1 | &DEPTH < 1 THEN DO
 SET &ZEDLMSG = BOX SIZE TOO SMALL, A SIDE MUST BE AT LEAST ONE LONG.
 ISPEXEC SETMSG MSG(ISRZ000)
 EXIT CODE(16)
END
ISREDIT (MAXLINE) = LRECL
SET &MAXLINE = &MAXLINE + 1 - &COL
SET &N = 0
SET &TOPBOT = &STR(&CORNER)
SET &SIDE = &STR(&VERTCHAR)
SET &RSIDE = &COL
ISREDIT (BOT) = LINENUM .ZLAST
DO WHILE &N < &HYPH AND &EVAL(&N + 1) < &MAXLINE
 SET &N = &N + 1
 SET &TOPBOT = &STR(&TOPBOT)&STR(&LIDCHAR)
 SET &SIDE = &STR(&SIDE)&STR( )
END
IF &WIDTH > 1 AND &EVAL(&N + 1) < &MAXLINE THEN DO
 SET &TOPBOT = &STR(&TOPBOT)&STR(&CORNER)
 SET &SIDE = &STR(&SIDE)&STR(&VERTCHAR)
 SET &RSIDE = &RSIDE + &N + 1
END
SET &N = 0
ISREDIT LINE &EVAL(&ROW + &N) = LINE + < &COL '&TOPBOT'>
DO WHILE &N < &EXCL
 SET &N = &N + 1
 IF &BOT < &EVAL(&ROW + &N) THEN DO
  ISREDIT LINE_AFTER .ZLAST = DATALINE MASKLINE
 END
 IF &FULL.. = FULL. THEN DO
  ISREDIT LINE &EVAL(&ROW + &N) = +
  LINE + < &COL '&VERTCHAR' &RSIDE '&VERTCHAR'>
 END
 ELSE DO
  ISREDIT LINE &EVAL(&ROW + &N) = LINE + < &COL '&SIDE'>
 END
END
SET &N = &N + 1
IF &BOT < &EVAL(&ROW + &N) AND &DEPTH > 1 THEN DO
 ISREDIT LINE_AFTER .ZLAST = DATALINE MASKLINE
END
IF &DEPTH > 1 THEN DO
 ISREDIT LINE &EVAL(&ROW + &N) = LINE + < &COL '&TOPBOT'>
 SET &ROW = &ROW + 1
 IF &WIDTH = 1 THEN DO
  SET &ROW = &ROW + &N - 1
  SET &COL = &COL - 1
 END
END
ELSE DO
 SET &COL = &RSIDE - 1
END
SET &COL = &COL + 1
ISREDIT CURSOR = (ROW,COL)
EXIT CODE(&MAXCC)


Nils Plum
Systems Programmer (Denmark)	© Nils Plum 1989

