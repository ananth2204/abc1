Enhancement for the extended copy edit macro

MVS Update issue 23 (August 1988) presented an extended copy
macro written by Sheldon Lee Lasky.  I installed the CX macro
on our system and our users have found it very useful.

In our use of the CX macro we discovered it could not copy lines
containing a quotation mark followed by a space (" ).

I traced the problem to line 2J of the macro which is:

    ISREDIT LINE_AFTER &CXAFTER = DATALINE "&NRSTR(&CXLINE)"

The LINE_AFTER assignment statement adds a line after a
specified line in the current dataset.  The statement expects a
delimited string to follow the DATALINE keyword.  A delimited
string is any string starting and ending with an apostrophe (') but
not containing embedded apostrophes, or one starting and ending
with a quotation mark (") but not containing embedded quotation
marks.

Since the delimited string "&NRSTR(&CXLINE)" starts and ends
with a quotation mark (") it must not contain embedded quotation
marks.  If the line stored in the &CXLINE variable contains
embedded quotation marks, TSO thinks the first embedded
quotation mark is the end of the delimited string, and the
remainder of the string is additional parameter.  This results in
error ISRE180 - TOO MANY PARAMETERS or ISRE060 -
INCOMPLETE STRING: a return code of 20 is generated and the
line is not added.  Since the CX macro does not check the return
code after the LINE_AFTER command it does not know the error
occurred and continues processing.

My solution to this problem is to first check the return code from
the LINE_AFTER statement.  If a return code greater than 4
results, then I assume the problem was caused by quotation marks
and try the LINE_AFTER command again but this time using
apostrophes (') to delimit the string.  If this fails as well I check to
see if it is an ISRE180 or ISRE060 error message.  If it is neither
then the cause is unknown so I set an error message and exit.  If it
is an ISRE180 or ISRE060 error, there must be both imbedded
quotation marks and apostrophes in the string.  I resolve this
problem by changing the quotation marks in the string to question
marks (?), then use the LINE_AFTER command again to add the
line.  I then use a CHANGE command to change the question
marks back to quotation marks.

Below is the code I added between lines 2J and 2K in the CX
macro to handle imbedded quotation marks.

  ISREDIT LINE_AFTER &CXAFTER = DATALINE "&NRSTR(&CXLINE)"          /*2J
  SET CC = &LASTCC                                                  /*3A
  IF &CC > 4 THEN DO                                                /*3B
    ISREDIT LINE_AFTER &CXAFTER = DATALINE '&NRSTR(&CXLINE)'        /*3C
    IF &LASTCC = 20 THEN DO                                         /*3D
      IF &ZERRMSG ^= ISRE180 AND &ZERRMSG ^= ISRE060 THEN DO        /*3E
        SET CXMSG = &ZERRMSG                                        /*3F
        SET CXSM  = &ZERRSM                                         /*3G
        ISPEXEC SETMSG MSG(CX001D)                                  /*3H
        GOTO STEP990                                                /*3I
        ENDO                                                        /*
      ELSE DO                                                       /*3J
        SET CXLEN = &LENGTH(&STR(&CXLINE))                          /*3K
        SET QCNT = 0                                                /*3L
        SET PTR = 1                                                 /*3M
                                                                    /*
        DO WHILE &PTR < &CXLEN                                      /*3N
          IF &SUBSTR(&PTR,&CXLINE) = &STR(") THEN DO                /*3O
            SET CXBEFORQ = &SUBSTR(1:&PTR-1,&CXLINE)                /*3P
            SET CXAFTERQ = &SUBSTR(&PTR+1:&CXLEN,&CXLINE)           /*3Q
            SET CXLINE = &STR(&CXBEFORQ)&STR(?)&STR(&CXAFTERQ)      /*3R
                                                                    /*
            SET QCNT = &QCNT + 1                                    /*3S
            SET QCOLM&QCNT = &PTR                                   /*3T
          ENDO                                                      /*
          SET PTR = &PTR + 1                                        /*3U
        ENDO                                                        /*
        ISREDIT LINE_AFTER &CXAFTER = DATALINE "&CXLINE"            /*3V
        SET CC = &LASTCC                                            /*3W
        IF &CC > 4 THEN DO                                          /*3X
           SET CXMSG = &ZERRMSG                                     /*3Y
           SET CXSM = &ZERRSM                                       /*3Z
           ISPEXEC SETMSG MSG(CX001D)                               /*4A
           GOTO STEP990                                             /*4B
        ENDO                                                        /*
        SET &CNT = 1                                                /*4C
        SET &NEWLINE = &CXAFTER + 1                                 /*4D
        ISREDIT LABEL &NEWLINE = .QLINE                             /*4E
                                                                    /*
        DO WHILE &CNT <= &QCNT                                      /*4F
          SET COLM = &&QCOLM&CNT                                    /*4G
          ISREDIT CHANGE '?' '"' .QLINE .QLINE FIRST &COLM          /*4H
          SET CNT = &CNT+1                                          /*4I
        ENDO                                                        /*
                                                                    /*
      ENDO                                                          /*4J
    ENDO                                                            /*4K
  ENDO                                                              /*4L
  SET &CXAFTER = &CXAFTER + 1                                       /*2K
COMMENTS
3A  Save the return code from the LINE_AFTER command.
3B  If return code greater than 4 the LINE_AFTER command
failed.
3C  Try LINE_AFTER command again using apostrophes (')
around the data.
3D  If the LINE_AFTER failed again there may be both an
apostrophe and a space (' ) and a quotation mark and a space
(" ) in the data.  This will result in either an ISRE180 or
ISRE060 error.
3E  If the error message-id is neither ISRE180 nor ISRE060, the
cause is unknown.
3F  Save the error message-id.
3G  Save the short message for the error.
3H  Set message to:
    'CX MACRO ERROR, CODE &CC'
    ERROR &CXMSG - &CXSM ON LINE_AFTER COMMAND'
3I  Branch to end routine.
3J  If error ISRE180 (too many parameters) or ISRE060
(incomplete string) occurred, the problem is caused by a
quotation mark followed by a space (" ) and an apostrophe
followed by a space (' ) in the string.  The solution is to
change the quotation marks temporarily.
3K  Get the length of the line.
3L  Initialise the quotation mark counter to zero.
3M  Initialise a character pointer to one.
3N  Perform loop for each character in the line.
3O  Look for a quotation mark (").
3P  Save the characters before the quotation mark.
3Q  Save the characters after the quotation mark.
3R  String the line back together replacing the quotation mark (")
with a question mark (?).
3S  Add one to the counter of quotation marks found.
3T  Save the column number where the quotation mark was
found.
3U  Increment the column pointer.
3V  Execute the LINE_AFTER command again to add the
translated line.
3W  Save the return code from the LINE_AFTER command.
3X  If return code greater than 4 the LINE_AFTER command
failed.
3Y  Save the error message-id.
3Z  Save the short message for the error.
4A  Set message to:
    'CX MACRO ERROR, CODE &CC'
    'ERROR &CXMSG - &CXSM ON LINE_AFTER COMMAND'
4B  Go to end routine.
4C  Initialise a counter to one.
4D  Calculate the line number of the new line.
4E  Put a label (.QLINE) on the new line.
4F  Perform loop once for each quotation mark that was changed
to a question mark.
4G  Get the column number for the change.
4H  Change question mark (?) back to quotation mark (") on the
new line labelled .QLINE in the specified column.
4I  Increment the count of question marks changed back to
quotes.
4J  End of code for handling apostrophe and quotes.
4K  End of code for handling ISRE180 error.
4L  End of code for handling LINE_AFTER error.
MESSAGES FOR EDIT MACRO CX
Add this new message to the end of member CX00 in a PDS in
the ISPMLIB concatenation.
    CX001D   'CX MACRO ERROR, CODE &CC'     .ALARM=YES
    'ERROR &CXMSG - &CXSM OCCURRED ON LINE_AFTER COMMAND'


Mike Robinson
Technical Analyst
Union Gas Ltd (Canada) © Union Gas Ltd 1989

