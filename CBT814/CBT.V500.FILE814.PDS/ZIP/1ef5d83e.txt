A multi-lingual compiler and link-edit macro

This ISPF edit macro is designed to reduce some of the tedium
of compilation and linkage editing.  It creates and submits a
batch job to produce the relevant load module.  Messages are
returned to the terminal to inform the programmer of the
success or failure of the compilation and link-edit steps.

The correct Assembler/compiler is selected according to the
final qualifier of the dataset name, ie PL/I for '.PLI',
VSFORTRAN for '.FORT' and Assembler for '.ASM'.  In
each case the load module is put into an existing dataset, but
with a final qualifier of '.LOAD'.  The member name of the
load module is also the same as that of the source, except that a
physical sequential source dataset produces a load module
member name of 'TEMPNAME'.

Default compilation and link-edit options are selected
according to the language of the source.  These can be
overridden by specifying the options as arguments, for example
by entering COMPLINK 'ESD,RENT' AC=1 on the command
line.  If multiple compilation and/or link-edit options are
specified in this way, they must be separated by commas and
enclosed in quotes.

The source code for compilation can be restricted by specifying
a pair of 'CC' line commands.  Only source lines delimited by
the 'CC' commands will be included.  Similarly, 'excluded'
lines can be omitted.

Customization of this macro to include your system libraries
should be straightforward.  The program logic allows easy
expansion to include other languages.

/***********************************************************************
/* NAME: COMPLINK
/* FUNCTION    :   ISPF EDIT MACRO TO CREATE AND SUBMIT JOB TO COMPILE
/*                 AND LINK-EDIT ASSEMBLER, PL/I OR FORTRAN SOURCE CODE
/* PARAMETERS  :   PARM1 (COMPOPTS)  -  ASSEMBLER/COMPILER OPTIONS
/*                 PARM2 (LINKOPTS)  -  LINKAGE EDITOR     OPTIONS
/* RETURN CODES:    0 - SUCCESSFUL COMPLETION
/*                  4 - UNKNOWN LANGUAGE
/*                  8 - SUBMISSION FAILURE
/*                 12 - NO SOURCE CODE SELECTED
/*                 16 - INCOMPLETE CC COMMAND BLOCK PAIR
/***********************************************************************
ISREDIT MACRO (COMPOPTS,LINKOPTS) NOPROCESS
/*                     INITIALIZATION
ISPEXEC CONTROL ERRORS RETURN
ISREDIT (DSN) = DATASET
ISREDIT (MEM) = MEMBER
ISREDIT (LRECL) = LRECL
ISREDIT PROCESS RANGE C
IF &LASTCC = 16 THEN DO
   SET ZEDSMSG = &STR(BLOCK COMMAND INCOMPLETE)
   SET ZEDSMSG = &STR(+
       ENTER A MATCHING "CC" COMMAND TO COMPLETE THE BLOCK COMMAND PAIR)
   ISPEXEC SETMSG MSG(ISRZ001)
   EXIT CODE(16)
END
ISREDIT (FRANGE) = LINENUM .ZFRANGE
ISREDIT (LRANGE) = LINENUM .ZLRANGE
ISPEXEC VGET (ZSCREEN)
IF &MEM = THEN DO
   SET ITEM = DATASET
   SET MEM = TEMPNAME
END
ESLE SET ITEM = MEMBER
SET LEN     = &LENGTH(&DSN)
SET TEMPDS  = CLINK&ZSCREEN..LIST
SET BLOCK   = &EVAL(77*&LRECL)
SET NBLOCKS = &EVAL((&LRANGE-&FRANGE)/77+1)
ISPEXEC CONTROL DISPLAY SM START(22)
/* DETERMINE LANGUAGE FROM DATASET NAME TYPE
SET CODE = UNKNOWN
IF &SUBSTR(&LEN-3:&LEN,&DSN) = .ASM   THEN DO
   SET CODE = ASSEMBLER
   SET LOADDSN = &SUBSTR(1:&LEN-3,&DSN)LOAD
END
IF &SUBSTR(&LEN-3:&LEN,&DSN) = .PLI   THEN DO
   SET CODE = PLI
   SET LOADDSN = &SUBSTR(1:&LEN-3,&DSN)LOAD
END
IF &SUBSTR(&LEN-4:&LEN,&DSN) = .FORT  THEN DO
   SET CODE = FORTRAN
   SET LOADDSN = &SUBSTR(1:&LEN-4,&DSN)LOAD
END
IF &CODE = UNKNOWN THEN DO
   SET ZEDSMSG = &STR(UNKNOWN LANGUAGE)
   SET ZEDLMSG = +
       &STR(DATASET'S FINAL QUALIFIER INDICATES UNKNOWN LANGUAGE)
   ISPEXEC SETMSG MSG(ISRZ001)
   EXIT CODE(4)
END
/* SET DEFAULT COMPILER/ASSEMBLER AND LINKAGE EDITOR OPTIONS
/* IF NONE SPECIFIED
IF &CODE = PLI AND &STR(&COMPOPTS) = THEN SET COMPOPTS = +
   &STR('MACRO,NIS,S,MAP,NEST,SYN,OPT(2),A')
IF &CODE = ASSEMBLER AND &STR(&COMPOPTS) = THEN SET COMPOPTS = +
   &STR('MAP,RENT,REUS')
IF &CODE = FORTRAN AND &STR(&COMPOPTS) = THEN SET COMPOPTS = +
   &STR('OBJECT,OPT(0),SOURCE')
IF &STR(&LINKOPTS) = THEN SET LINKOPTS = &STR('LET,MAP,XREF')
IF &SUBSTR(1:1,&COMPOPTS) ^= &STR(') THEN +
   SET COMPOPTS = &STR('&COMPOPTS')
IF &SUBSTR(1:1,&LINKOPTS) ^= &STR(') THEN +
   SET LINKOPTS = &STR('&LINKOPTS')
/* ALLOCATE TEMPORARY DATASET WITH UNIQUE NAME
ALLOC DD(TEMPFILE) DA(&TEMPDS) UNIT(DISK) NEW BLOCK(&BLOCK) +
      SPACE(&NBLOCKS,1) DELETE RECFM(F B) LRECL(&LRECL)
/*                        WRITE PRELIMINARY JCL
OPENFILE TEMPFILE OUTPUT
SET TEMPFILE = &STR(//&SYSUID.&SUBSTR(1:1,&CODE) JOB (),'&CODE+LINK')
PUTFILE TEMPFILE
SET TEMPFILE = &STR(/*JOBPARM LINES=20)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//*)
PUTFILE TEMPFILE
IF &ITEM = MEMBER THEN DO
   SET TEMPFILE = &STR(//* TO COMPILE AND LINK THE )&CODE PROGRAM+
   &STR( '&DSN(&MEM.)')
   PUTFILE TEMPFILE
END
ELSE DO
   SET TEMPFILE = &STR(//* TO COMPILE AND LINK THE )&CODE PROGRAM+
   &STR( '&DSN')
   PUTFILE TEMPFILE
END
SET TEMPFILE = &STR(//*)
PUTFILE TEMPFILE
/*                   WRITE JCL TO COMPILE PL/I PROGRAMS
IF &CODE = PLI THEN DO
   SET TEMPFILE = &STR(//COMPILE  EXEC PGM=IEL0AA,PARM=&STR(&COMPOPTS))
   PUTFILE TEMPFILE
   SET TEMPFILE = &STR(//SYSLIB   DD   DSN=SYS1.PLIBASE,DISP=SHR)
   PUTFILE TEMPFILE
   SET TEMPFILE = +
        &STR(//SYSLIN   DD   DSN=&&SYSLIN,UNIT=VIO,SPACE=(CYL,(1,1)),)
   PUTFILE TEMPFILE
   SET TEMPFILE = +
        &STR(//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),)
   PUTFILE TEMPFILE
   SET TEMPFILE = &STR(//         DISP=(NEW,PASS,DELETE))
   PUTFILE TEMPFILE
   SET TEMPFILE = +
        &STR(//SYSUT1   DD   DSN=&&UT1,UNIT=VIO,SPACE=(CYL,(1,1)))
   PUTFILE TEMPFILE
END
/*                   WRITE JCL FOR ASSEMBLER
IF &CODE = ASSEMBLER THEN DO
   SET  TEMPFILE = &STR(//COMPILE  EXEC PGM=IEV90,PARM=&STR(&COMPOPTS))
   PUTFILE TEMPFILE
   SET  TEMPFILE = &STR(//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR)
   PUTFILE TEMPFILE
   SET  TEMPFILE = &STR(//         DD DSN=SYS1.AMACLIB,DISP=SHR)
   PUTFILE TEMPFILE
   SET  TEMPFILE = &STR(//         DD DSN=SYS1.AMODGEN,DISP=SHR)
   PUTFILE TEMPFILE
   SET  TEMPFILE = +
         &STR(//SYSUT1  DD UNIT=VIO,SPACE=(CYL,(1,1)),DSN=&&UT1)
   PUTFILE TEMPFILE
   SET TEMPFILE = +
        &STR(//SYSPUNCH DD  DSN=&&SYSLIN,UNIT=VIO,SPACE=(CYL,(1,1)),)
   PUTFILE TEMPFILE
   SET TEMPFILE = +
        &STR(//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),)
   PUTFILE TEMPFILE
   SET TEMPFILE = &STR(//         DISP=(NEW,PASS,DELETE))
   PUTFILE TEMPFILE
END
/*                WRITE JCL TO COMPILE FORTRAN PROGRAMS
IF &CODE = FORTRAN THEN DO
   SET TEMPFILE = &STR(//COMPILE  EXEC PGM=FORTVS2,PARM=&STR(&COMPOPTS))
   PUTFILE TEMPFILE
   SET TEMPFILE = &STR(//SYSLIB   DD   DSN=SYS1.VSF2FORT,DISP=SHR)
   PUTFILE TEMPFILE
   SET TEMPFILE = +
        &STR(//SYSLIN   DD   DSN=&&SYSLIN,UNIT=VIO,SPACE=(CYL,(1,1)),)
   PUTFILE TEMPFILE
   SET TEMPFILE = +
        &STR(//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),)
   PUTFILE TEMPFILE
   SET TEMPFILE = &STR(//         DISP=(NEW,PASS,DELETE))
   PUTFILE TEMPFILE
   SET TEMPFILE = &STR(//SYSTERM  DD   DUMMY)
   PUTFILE TEMPFILE
   SET TEMPFILE = &STR(//SYSPUNCH DD   DUMMY)
   PUTFILE TEMPFILE
END
SET TEMPFILE = &STR(//SYSPRINT DD   SYSOUT=*)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//SYSIN    DD   *,DLM='@$')
PUTFILE TEMPFILE
/*                     INCLUDE SOURCE CODE
SET LINENO = &FRANGE
SET DATA = NO
DO WHILE (&LINENO <= &LRANGE )
   ISREDIT LABEL &LINENO = .HERE
   ISREDIT (XSTATUS) = XSTATUS .HERE
   IF &XSTATUS = NX THEN DO
      ISREDIT (TEMPFILE) = LINE .HERE
      PUTFILE TEMPFILE
      SET DATA = YES
   END
   SET LINENO = &LINENO + 1
END
/*                  CHECK THAT THERE WAS SOURCE TO INCLUDE
IF &DATA = NO THEN DO
   CLOSFILE TEMPFILE
   FREE DA(&TEMPDS)
   SET ZEDSMSG = &STR(EMPTY &ITEM)
   SET ZEDLMSG = &STR(+
       THE &ITEM IS CURRENTLY EMPTY OR ALL SELECTED LINES ARE EXCLUDED)
   ISPEXEC SETMSG MSG(ISRZ001)
   EXIT CODE(12)
END
/* WRITE JCL FOR LINKAGE-EDITOR AND MESSAGES
SET TEMPFILE = @$
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//LINK    EXEC PGM=HEWL,COND=(4,LT,COMPILE),)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//        PARM=&STR(&LINKOPTS))
PUTFILE TEMPFILE
IF &CODE = PLI THEN DO
   SET TEMPFILE = &STR(//SYSLIB  DD   DSN=SYS1.PLIBASE,DISP=SHR)
   PUTFILE TEMPFILE
END
IF &CODE = FORTRAN THEN DO
   SET TEMPFILE = &STR(//SYSLIB  DD   DSN=SYS1.VSF2FORT,DISP=SHR)
   PUTFILE TEMPFILE
END
SET TEMPFILE = &STR(//SYSLIN   DD  DSN=&&SYSLIN,DISP=(OLD,DELETE))
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//         DD  DDNAME=SYSIN)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//SYSLMOD  DD  DSN=&LOADDSN,DISP=SHR)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FA,BLKSIZE=121))
PUTFILE TEMPFILE
SET TEMPFILE = +
    &STR(//SYSUT1   DD   DSN=&&UT1,UNIT=VIO,SPACE=(CYL,(1,1)))
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//SYSIN    DD   *)
PUTFILE TEMPFILE
SET TEMPFILE = &STR( NAME &MEM(R))
PUTFILE TEMPFILE
SET TEMPFILE = &STR(/*)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//*)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//MESSAGE  EXEC PGM=IKJEFT01,COND=(4,LT))
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//SYSTSPRT DD   DUMMY)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//SYSTSIN  DD   *)
PUTFILE TEMPFILE
IF &ITEM = DATASET THEN DO
   SET TEMPFILE = &STR(+
   SEND '&DSN SUCCESSFULLY COMPILED AND LINK-EDITED :' +)
   PUTFILE TEMPFILE
   SET TEMPFILE = &STR(U(&SYSUID),L)
   PUTFILE TEMPFILE
END
ELSE DO
   SET TEMPFILE = &STR(+
   SEND '&DSN(&MEM) SUCCESSFULLY COMPILED AND LINK-EDITED :' +)
   PUTFILE TEMPFILE
   SET TEMPFILE = &STR(U(&SYSUID),L)
   PUTFILE TEMPFILE
END
SET TEMPFILE = &STR(/*)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//*)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//MESSERR  EXEC PGM=IKJEFT01,COND=(5,GT,COMPILE))
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//SYSTSPRT DD   DUMMY)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//SYSTSIN  DD   *)
PUTFILE TEMPFILE
IF &ITEM = DATASET THEN DO
   SET TEMPFILE = &STR(SEND 'COMPILATION OF &DSN FAILED :' +)
   PUTFILE TEMPFILE
   SET TEMPFILE =  &STR(U(&SYSUID),L)
   PUTFILE TEMPFILE
END
ELSE DO
   SET TEMPFILE = &STR(SEND 'COMPILATION OF &DSN(&MEM) FAILED :' +)
   PUTFILE TEMPFILE
   SET TEMPFILE = &STR(U(&SYSUID),L)
   PUTFILE TEMPFILE
END
SET TEMPFILE = &STR(/*)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//*)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//MESERR1  EXEC PGM=IKJEFT01,COND=((1,GT,LINK),+
    (4,LT,COMPILE)))
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//SYSTSPRT DD  DUMMY)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(//SYSTSIN  DD  *)
PUTFILE TEMPFILE
SET TEMPFILE = &STR(SEND 'LINK-EDITING TO &LOADDSN(&MEM) FAILED :' +
    U(&SYSUID),L)
PUTFILE TEMPFILE
  SET TEMPFILE = &STR(/*)
PUTFILE TEMPFILE
CLOSFILE TEMPFILE
/*             SUBMIT AND FREE TEMPORARY DATASET
/* COPY '&SYSPREF..&TEMPDS' LIB.CNTL(TEMP)
SUBMIT '&SYSPREF..&TEMPDS'
SET RETCODE = &LASTCC
FREE DA(&TEMPDS)
IF &RETCODE = 0 THEN DO
   SET ZEDSMSG = &STR(SUBMITTED)
   SET ZEDLMSG = &STR(COMPILATION AND LINK EDIT JOB SUBMITTED)
   ISPEXEC SETMSG MSG(ISRZ001)
END
ELSE DO
   SET ZEDSMSG = &STR(SUBMISSION FAILED)
   SET ZEDLMSG = +
       &STR(COMPILATION AND LINK EDIT JOB FAILED TO BE SUBMITTED)
   ISPEXEC SETMSG MSG(ISRZ001)
   EXIT CODE(8)
END
EXIT CODE(0)


Dr David Robson
Senior Analyst
Tessella (Abingdon) Ltd (UK)                          c Xephon 1991

