Finding members in concatenated libraries

The following REXX EXECs will search various types of
concatenated library and display the datasets that contain a
specified member. MVS Update issue 43 contained a REXX
EXEC which provided such a display for a hard-coded set of
libraries. MVS Update issue 46 contained a REXX EXEC to
display the names of the LINKLIST datasets. We have
combined these two EXECs so that LINKLIST libraries can be
searched for a given member without hard coding the dataset
names. In addition, we have added similar code for a search of
the LPA list. The first EXEC below (which we have called
LIBSRCH) contains this code.

A logical extension was to provide a similar facility for datasets
allocated in a TSO session. The second REXX below
(TSOSRCH) does this. In this case a DDNAME (such as
ISPPLIB or SYSPROC) has to be specified as well as a
member name. The REXX simply interrogates the output of a
LISTA command in order to determine which datasets are
allocated to the specified DDNAME. It then uses logic similar
to LIBSRCH to display the datasets containing the specified
member. This can save much time when you have (like us)
many datasets in your TSO concatenations, especially when
one member can appear in a number of libraries.


LIBSRCH REXX EXEC

/* THIS REXX EXEC DISPLAYS ALL LPA LIST AND LINK LIST         */
/* LIBRARIES CONTAINING A GIVEN MODULE.                       */
/*      ENTER 'LIBSRCH MODULE'                                */
ARG MODULE
CLEAR
DO FOREVER
  SELECT
    WHEN MODULE = '' THEN
      SAY '    ENTER THE MODULE TO SEARCH FOR.'
    WHEN LENGTH(MODULE) > 8 THEN
      SAY '    ENTER THE MODULE TO SEARCH FOR. (UP TO 8 CHARACTERS)'
    OTHERWISE LEAVE
  END
  PULL MODULE
END
Z = SYSVAR(SYSPREF)
SIGNAL ON ERROR NAME ERROR
SIGNAL ON FAILURE NAME ERROR
SIGNAL ON HALT NAME ERROR
"PROFILE NOPREFIX"
DSN.   = ''
/* CODE FOR LPA LIBRARIES                                     */
/* THE LAYOUT IS: CONSTANT            4 'LPAT'                */
/*                NUM OF ENTRIES      4                       */
/*                LENGTH OF ENTRY     1   ) TIMES NUM         */
/*                DSN                 44  ) OF ENTRIES        */
SAY'    *** LPALIST  CHECK FOR 'MODULE' ***'
CVT     = STORAGE(10,4)             /* START OF CVT           */
DCVT    = C2D(CVT)                  /* DECIMAL START OF CVT   */
DSMEXT  = DCVT + 1196               /* DECIMAL SMEXT POINTER  */
XSMEXT  = D2X(DSMEXT,8)             /* HEX SMEXT POINTER      */
ADDR1   = STORAGE(XSMEXT,4)         /* START OF SMEXT         */
DADDR1  = C2D(ADDR1)                /* DECIMAL START OF SMEXT */
DLPAT   = DADDR1 + 56               /* DECIMAL LPAT POINTER   */
XLPAT   = D2X(DLPAT,8)              /* HEX LPAT POINTER       */
ADDR1   = STORAGE(XLPAT,4)          /* START OF LPAT TABLE    */
XADDR1  = C2X(ADDR1)                /* HEX START OF LPAT TABLE*/
DATA    = STORAGE(XADDR1,8)         /* GET LUMP OF LPAT DATA  */
NUMENT  = SUBSTR(DATA,5,4)          /* NUMBER OF ENTRIES      */
DNUMENT = C2D(NUMENT)               /* CONVERT TO DECIMAL     */
LEN     = (DNUMENT*45) + 8          /* MAX SIZE REQD          */
DATA    = STORAGE(XADDR1,LEN)       /* GET LUMP OF LPAT DATA  */
START   = 10                        /* START OF 1ST ENTRY     */
SAY                                 /*                        */
DO I = 1 TO DNUMENT                 /*                        */
   DSN.I = SUBSTR(DATA,START,44)    /* DATASET NAME           */
   START = START + 45               /* NEXT ENTRY             */
   END                              /*                        */
DO I = 1 TO DNUMENT WHILE DSN.I ^= ''
  X = STRIP(DSN.I,T)                /* STRIP TRAILING BLANKS  */
  Y = SYSDSN(X'('MODULE')')
  IF Y = OK THEN
    DO
      SAY '   ' X
      F = 1
    END
END
/* CODE FOR LINKLIST LIBRARIES                                */
/* THE LAYOUT IS: CONSTANT            4 'LLT '                */
/*                NUM OF ENTRIES      4                       */
/*                LENGTH OF ENTRY     1   ) TIMES NUM         */
/*                DSN                 44  ) OF ENTRIES        */
SAY' '
SAY'    *** LINKLIST CHECK FOR 'MODULE' ***'
CVT     = STORAGE(10,4)             /* START OF CVT           */
DCVT    = C2D(CVT)                  /* DECIMAL START OF CVT   */
DLLT    = DCVT + 1244               /* DECIMAL LLT POINTER    */
XLLT    = D2X(DLLT,8)               /* HEX LLT POINTER        */
ADDR1   = STORAGE(XLLT,4)           /* START OF LLT           */
XADDR1  = C2X(ADDR1)                /* HEX START OF LLT       */
DATA    = STORAGE(XADDR1,8)         /* GET LUMP OF LLT DATA   */
NUMENT  = SUBSTR(DATA,5,4)          /* NUMBER OF ENTRIES      */
DNUMENT = C2D(NUMENT)               /* CONVERT TO DECIMAL     */
LEN     = (DNUMENT*45) + 8          /* MAX SIZE REQD          */
DATA    = STORAGE(XADDR1,LEN)       /* GET LUMP OF LLT DATA   */
START   = 10                        /* START OF 1ST ENTRY     */
SAY                                 /*                        */
DO I = 1 TO DNUMENT                 /*                        */
   DSN.I = SUBSTR(DATA,START,44)    /* DATASET NAME           */
   START = START + 45               /* NEXT ENTRY             */
   END                              /*                        */
DO I = 1 TO DNUMENT WHILE DSN.I ^= ''
  X = STRIP(DSN.I,T)                /* STRIP TRAILING BLANKS  */
  Y = SYSDSN(X'('MODULE')')
  IF Y = OK THEN
    DO
      SAY '   ' X
      F = 1
    END
END
IF F ^= 1 THEN
  SAY '    *** 'MODULE' NOT FOUND. ***'
ERROR: IF Z^ = ' ' THEN
  "PROFILE PREFIX("Z")"


TSOSRCH REXX EXEC

/* THIS REXX EXEC WILL SEARCH THE DATASETS                    */
/* ALLOCATED (WITH A DISPOSITION OF 'KEEP') TO                */
/* A SPECIFIED DDNAME IN A TSO SESSION. IT WILL               */
/* DISPLAY WHICH DATASETS CONTAIN A GIVEN MEMBER.             */
/*      ENTER   'TSOSRCH DDNAME MEMBER'                       */
Z = SYSVAR(SYSPREF)
SIGNAL ON ERROR NAME ERROR
SIGNAL ON FAILURE NAME ERROR
SIGNAL ON HALT NAME ERROR
"PROFILE NOPREFIX"
ARG DDNAME MEMBER
CLEAR
DO FOREVER
  SELECT
    WHEN DDNAME = '' THEN
      SAY '    ENTER THE DDNAME TO SEARCH FOR.'
    WHEN LENGTH(DDNAME) > 8 THEN
      SAY '    ENTER THE DDNAME TO SEARCH FOR. (UP TO 8 CHARACTERS)'
    OTHERWISE LEAVE
  END
  PULL DDNAME
END
DO FOREVER
  SELECT
    WHEN MEMBER = '' THEN
      SAY '    ENTER THE MEMBER TO SEARCH FOR.'
    WHEN LENGTH(MEMBER) > 8 THEN
      SAY '    ENTER THE MEMBER TO SEARCH FOR. (UP TO 8 CHARACTERS)'
    OTHERWISE LEAVE
  END
  PULL MEMBER
END
SAY'    *** 'DDNAME' CHECK FOR 'MEMBER' ***'
SAY
/* ISSUE A LISTA COMMAND AND STORE THE OUTPUT IN VARIABLES. */
/* READ THE VARIABLES BACK TWO AT A TIME SINCE THE ONE      */
/* DATASET SPANS TWO LINES OF OUTPUT.                       */
X = OUTTRAP('VAR.')
"LISTA ST"
LINES = VAR.0 + 1
DO I = 1 TO VAR.0
   J = I+1
   A = SUBWORD(VAR.I,1,1)
   B = SUBWORD(VAR.J,1,1)
   C = SUBWORD(VAR.J,2,1)
   IF C = 'KEEP' & FLAG = 'Y' THEN FLAG = 'N' /* NEW DDNAME SO      */
                                              /* RESET FLAG         */
   IF B = DDNAME THEN DO                      /* SET FLAGS TO SAY   */
      FLAG = 'Y'                              /* DDNAME WAS FOUND   */
      DDFOUND = 'Y'
   END
   IF B = 'KEEP' | C = 'KEEP' THEN DO
      IF FLAG = 'Y' THEN DO
         FND = SYSDSN(A'('MEMBER')')
         IF FND = OK THEN DO
               SAY '   ' A
               MODFOUND = Y
         END
      END
   END
END
IF DDFOUND ^= Y THEN
  SAY '    *** DDNAME 'DDNAME' NOT FOUND. ***'
IF DDFOUND = 'Y' & MODFOUND ^= Y THEN
  SAY '    *** MEMBER 'MEMBER' NOT FOUND. ***'
ERROR: IF Z^ = ' ' THEN
  "PROFILE PREFIX("Z")"


Colin Helmstedt
Senior Systems Programmer
Water Board (Australia)                               c Water Board 1992

