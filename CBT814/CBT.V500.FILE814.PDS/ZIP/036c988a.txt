Checking for idle TSO users

The program TSOTERM is started from the operator console.  It will check for all
TSO users which are in a 'logging on' state and, for those who have been in that
state for more than 1 minute, it cancels the log-on.  It will then additionally
check the currently logged-on TSO users to see if any user has been in a
continuous wait state for more than 15 minutes.  If so, these users will be
cancelled too.  There is a built-in table of TSO log-on procedure names that is
checked against each TSO user's log-on to determine if they are exempt from
cancellation.  In this way, certain groups or TSO user-ids may be allowed to
stay logged on.  This program was written to avoid the excessive job wait time
we allow from SMF, which is currently 30 minutes.  So effectively, TSO users are
allowed a half of the job wait time allowed to batch jobs and started tasks.  It
also prevents people from just typing in LOGON at the terminal and walking away,
since this would contribute to the TSO USERMAX count and, if the maximum number
of users were logged on, would not allow any other users on,  even though users
in the 'logging on' state are not truly logged on.

This program must be assembled and link-edited into an APF-authorised library
either in the LINKLIST or in a load library that can be pointed to by a STEPLIB
DD card.


SOURCE CODE FOR TSOTERM

TSOTERM  CSECT                    ESTABLISH CSECT
         SAVE  (14,12),,TSOTERM-&SYSDATE
         LR    R12,R15                LOAD R12 W/EPA ADDRESS
         USING TSOTERM,R12            ESTABLISH ADDRESSABLITY TO CSECT
         LA    R8,SAVEAREA            LOAD ADDR OF MY S/A
         ST    R8,8(R13)              ST MY S/A ADDR IN CALLERS S/A
         ST    R13,4(R8)              ST CALLERS S/A ADDR IN MY S/A
         LR    R13,R8                 LOAD ADDR OF MY S/A IN R13
         L     R11,CVTPTR             LOAD R11 W/A(CVT)
         L     R11,CVTASVT-CVT(R11)   LOAD R11 W/A(ASVT)
         L     R10,ASVTMAXU-ASVT(R11) LOAD R10 W/MAX NO. ASCBS
         LA    R9,ASVTENTY-ASVT(R11)  LOAD R9 W/A(FIRST ASCB ENTRY)
         MODESET KEY=ZERO,MODE=SUP    GET INTO SUPERVISOR STATE
CHEKLOOP TM    ASVTENTY-ASVTENTY(R9),ASVTAVAL IS THIS ENTRY AVAILABLE?
         BO    BUMP                   YES, GO POINT TO NEXT ENTRY
         L     R8,ASVTENTY-ASVTENTY(R9) LOAD R8 W/A(ASCB)
         CLC   ASCBTSB-ASCB(4,R8),=F'0' IS TSB ADDRESS ZERO?
         BE    BUMP                   YES, THEN NOT A TSO ASID
         CLC   ASCBJBNS-ASCB(4,R8),=F'0' IS ASCBJBNS ADDRESS ZERO?
         BNE   HASNAME                NO, THEN ITS NOT A STARTING
         BAL   R14,CALCTIME           CALCULATE TIME
         C     R5,=F'60'              IS IT GOING FOR MORE THAN 1 MIN.
         BL    BUMP                   NO, NOT IN TRANS FOR 1 MIN.
         XR    R4,R4                  CLEAR R4 TO PUT IN ASID
         LH    R4,ASCBASID-ASCB(R8)   LOAD R4 W/ASID
         ST    R13,R13SAVE            SAVE R13 VALUE(A(MY SAVEAREA))
         LA    R13,MEMSAVE            LOAD R13 W/A(GETMAINED AREA)
         CALLRTM TYPE=MEMTERM,COMPCOD=X'222',ASID=(R4) TERMINATE
         L     R13,R13SAVE            RELOAD R13 VALUE(A(MY SAVEAREA))
         STIMER WAIT,BINTVL=STRTTIME  WAIT A WHILE
         B     BUMP                   GO BUMP TO NEXT ASVT ENTRY
HASNAME  L     R7,ASCBCSCB-ASCB(R8)   LOAD R7 W/A(CSCB)
         LA    R6,LOGTABL             LOAD R6 W/A(LOGON PROC TABLE)
LOGLOOP  CLI   0(R6),C' '             IS IT END OF TABLE
         BE    DOCANC                 YES, GO CANCEL IT
         CLC   16(8,R7),0(R6)         IS THERE A MATCH
         BE    BUMP                   GO BUMP TO NEXT ASVT ENTRY
         LA    R6,8(R6)               POINT TO NEXT LOGON TABLE ENTRY
         B     LOGLOOP                GO CHECK AGAIN
DOCANC   BAL   R14,CALCTIME           CALCULATE TIME
         C     R5,=F'900'             IS IT INACTIVE > 15 MIN(900 SEC)
         BL    BUMP                   NO, GO BUMP TO NEXT ASVT ENTRY
         L     R8,ASCBJBNS-ASCB(R8)   LOAD R8 W/A(TSO USERID)
         MVC   CANMSG+13(7),0(R8)     MOVE USERID TO COMMAND
         LA    R1,CANMSG              LOAD R1 W/A(CANCEL COMMAND)
         SVC   34                     ISSUE COMMAND SVC
         STIMER WAIT,BINTVL=TIME      WAIT A WHILE
BUMP     LA    R9,ASVTENTY-ASVTENTY+4(R9) LOAD R9 W/A(NEXT ASCB ENTRY)
         BCT   R10,CHEKLOOP           GO BACK TO LOOP THRU ASVT
RETURN   MODESET KEY=NZERO,MODE=PROB  GET INTO PROBLEM STATE
         L     R13,SAVEAREA+4         RELOAD R13 W/ADDR OF CALLERS S/A
         RETURN (14,12),RC=0          RETURN TO OS WITH RETCODE=0
CALCTIME L     R5,CVTPTR              LOAD R5 W/A(CVT)
         L     R5,CVTOPCTP-CVT(R5)    LOAD R5 W/A(RMCT)
         L     R5,RMCTTOD-RMCT(R5)    LOAD R5 W/SRM TIME OF DAY
         L     R6,ASCBOUCB-ASCB(R8)   LOAD R6 W/A(OUCB)
         S     R5,OUCBTMS-OUCB(R6)    SUB TRANS TIME(OUCBTMO) FROM TOD
         SR    R4,R4                  CLEAR R4 FOR DIVIDE
         D     R4,=F'1024'            DIVIDE TO GET SECONDS
         BR    R14
SAVEAREA DC    18F'0'
MEMSAVE  DC    18F'0'
R13SAVE  DC    F'0'
STRTTIME DC    AL4(100*10)            TIME TO WAIT(10 SECONDS)
TIME     DC    AL4(100*1)             TIME TO WAIT(1 SECOND)
CANMSG   WTO   'CANCEL U=1234567      TSOTERM',MF=L,ROUTCDE=(11)
LOGTABL  DC    CL8'LOGTECH'           START OF LOGON PROC TABLE
         DC    CL8'LOGIO'
         DC    CL8'LOGHRS'
LOGEND   DC    CL8'        '          END OF LOGON PROC TABLE
         CVT   DSECT=YES
RMCT     DSECT
RMCTTOD  EQU RMCT+124
         IHAASVT
         IHAASCB
         IRAOUCB
         END


SAMPLE PROCEDURE TO INVOKE TSOTERM

//TSOTERM   PROC
//TSOTERM   EXEC PGM=TSOTERM
//SYSABEND  DD SYSOUT=Q


Bruce Bordonaro
System Software Manager



















