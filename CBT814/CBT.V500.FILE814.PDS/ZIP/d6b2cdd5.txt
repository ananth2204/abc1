JES exit 7 for VM files

At our site, a large part of program development is done on
CMS, and assemblies, etc are sent to various MVS guests
through RSCS.  We have set up an MVS user-id, which is used
on all such jobs (coming from VM) in order to standardize our
JCL decks.  This works fine, but has a drawback in that all
reader files returned to VM are given the name of the job name
(in this case our special user-id, plus one character) and a type
of 'OUTPUT'.  The latter is set by RSCS and cannot readily be
changed.  However, using this JES exit 7 to replace the job
name in the Network Job Header (NJH) with the first eight
non-blank characters of the programmer name field, will result
in that information being used for the VM reader file name
field.  For example, for these job cards:

 //VMUSERXX JOB ,'PROG1 ASSEMBLY',CLASS=A,MSGCLASS=E
 //VMUSERXX JOB ,'PROG2 ASSEMBLY',CLASS=A,MSGCLASS=E
 //VMUSERXX JOB ,'PROG3 ASSEMBLY',CLASS=A,MSGCLASS=E

the VM reader files without the exit would be:

ORIGINID FILE CLASS RECORDS  CPY HOLD DATE  TIME     NAME      TYPE    DIST
RSCS     0020 A PRT 00000010 001 NONE 05/01 08:30:44 VMUSERXX  OUTPUT  MVS
RSCS     0021 A PRT 00000010 001 NONE 05/01 08:31:02 VMUSERXX  OUTPUT  MVS
RSCS     0022 A PRT 00000010 001 NONE 05/01 08:32:26 VMUSERXX  OUTPUT  MVS

and would look like this with the exit:

ORIGINID FILE CLASS RECORDS  CPY HOLD DATE  TIME     NAME      TYPE    DIST
RSCS     0025 A PRT 00000010 001 NONE 05/01 08:34:21 PROG1     OUTPUT  MVS
RSCS     0026 A PRT 00000010 001 NONE 05/01 08:35:33 PROG2     OUTPUT  MVS
RSCS     0027 A PRT 00000010 001 NONE 05/01 08:36:05 PROG3     OUTPUT  MVS

Our site runs VM/XA SP 2.1, RSCS 2.3, MVS/ESA 3.1.3,
and JES2 3.1.1.


JESXIT07 SOURCE CODE

***********************************************************************
*                       E    X    I    T    7                         *
*                   J C T    R E A D / W R I T E                      *
***********************************************************************
*   -FUNCTION-                                                        *
*   1) TO UPDATE THE NETWORK JOB HEADER FOR SYSOUT TRANSMITTER FILES  *
*      FOR JOBNAME 'VMUSERXX'. THESE WILL BE ASSEMBLIES/ETC FROM      *
*      PROGRAMMERS ON VM. WE WILL REPLACE THE JOBNAME IN THE HEADER   *
*      WITH THE FIRST 8 BYTES OF THE PROGRAMMER NAME. RSCS USES THIS  *
*      FIELD ('NJHGJNAM' - SEE RSCS MODULE 'DMTNHD') TO CREATE THE    *
*      VM READER FILENAME IN THE TAG CONTROL BLOCK. THUS, IF THE NAME *
*      OF THE PROGRAM BEING ASSEMBLED, ETC IS PLACED IN THE PROGRAM-  *
*      ER NAME FIELD, THE DOZENS (HUNDREDS) OF ASSEMBLIES RETURNING   *
*      TO VM WILL NOT ALL HAVE A FILETYPE OF 'VMUSERXX'. HOWEVER, THE *
*      JOBNAME ON MVS WILL BE UNAFFECTED.                             *
***********************************************************************
         COPY $HASPGBL
JESXIT07 $MODULE NOTICE=(SP311),                                       X
               TITLE='JCL AND JES CONTROL STATEMENT ',                 X
               $BUFFER,                GENERATE HASP BUFFER DSECT      X
               $CAT,                   GENERATE HASP CAT DSECT         X
               $HASPEQU,               GENERATE HASP EQUATES           X
               $JCT,                   GENERATE HASP JCT DSECT         X
               $MIT,                   GENERATE HASP MIT DSECT         X
               $PCE,                   GENERATE HASP PCE DSECT         X
               $JQE,                   GENERATE HASP JQE DSECT         X
               $HCT,                   GENERATE HASP HCT DSECT         X
               $NHD,                   GENERATE HASP NHD DSECT         X
               $JOE                    GENERATE HASP JOE DSECT
***********************************************************************
*        ON CALL TO THE INSTALLATION EXIT THE FOLLOWING               *
*        REGISTERS WILL BE SET UP:                                    *
*        REG             VALUE                                        *
*        R0              A CODE FROM JES2:                            *
*                        0  INDICATES JCT HAS BEEN READ FROM SPOOL    *
*                        4  INDICATES JCT BEING WRITTEN TO SPOOL      *
*        R1              ADDRESS OF BUFFER THAT CONTAINS THE JCT      *
*        R2-R10          N/A                                          *
*        R11             ADDR. HCT                                    *
*        R12             N/A                                          *
*        R13             ADDR. PCE                                    *
*        R14             RETURN ADDRESS                               *
*        R15             ENTRY ADDRESS                                *
*        ON RETURN FROM THE USER EXIT, THE REGISTERS SHOULD BE        *
*        AS THEY WERE ON ENTRY, WITH THE EXECPTION OF R15 WHICH       *
*        WILL CONTAIN A RETURN CODE, AS DETERMINED WITHIN THE EXIT.   *
*        RETURN CODE                                                  *
*        0       - CONTINUE PROCESSING                                *
*                - CALL NEXT EXIT ROUTINE IF SPECIFIED                *
*        4       - CONTINUE PROCESSING                                *
*                - IGNORE NEXT EXIT ROUTINE, EVEN IF SPECIFIED        *
***********************************************************************
EXIT7A  $ENTRY CSECT=YES,BASE=R12   PROVIDE EXIT ROUTINE ENTRY POINT
        $SAVE                       SAVE CALLER'S REGISTERS
         LR    R12,R15              GET BASE
         LR    R10,R1               GET JCT ADDRESS
         USING JCT,R10              JCT ADDRESSABILITY - R10
         USING HCT,R11              HCT ADDRESSABILITY - R11
         LTR   R0,R0                JCT BEING READ FROM SPOOL?
         BNZ   RETURN               NO...
         CLC   JCTJNAME,=C'VMUSERXX'  SPECIAL JOBNAME?
         BNE   RETURN               NO
         TM    PCEID,PCENJEID       NJE?
         BNO   RETURN               NO...RETURN
         TM    PCEID+1,PCENSTID     NJE SYSOUT TRANSMITTER?
         BNO   RETURN               NO...RETURN
         CLC   JCTPNAME(8),=8C' '   PROGNAME = SPACES?
         BE    RETURN               YES..NOTHING TO MOVE
         LH    R1,JCTNJHLN          GET NETWORK JOB HEADER LENGTH
         LTR   R1,R1                ANY?
         BZ    RETURN               NO...
         LA    R1,JCTNJHDR          YES..POINT TO NJH
         USING NJH,R1               ESTABLISH ADDRESSABILITY
*---------------------------------------------------------------------*
* LOCATE FIRST NON-BLANK, AND MOVE UP TO 8 BYTES TO NJHGJNAM, TERM-   *
* INATING THE MOVE AT THE FIRST EMBEDDED/TRAILING BLANK...            *
*---------------------------------------------------------------------*
         LA    R2,JCTPNAME          POINT TO START OF PROGNAME
         LA    R3,7                 CHECK UP TO 7 BYTES
         MVC   NJHGJNAM(8),=8C' '   RESET FIELD
LOOP1    DS    0H
         CLI   0(R2),C' '           BLANK?
         BNE   MOVENAME             NO...GO AND MOVE CHARACTERS
         LA    R2,1(R2)             YES..BUMP ALONG TO NEXT ONE
         BCT   R3,LOOP1             CHECK UP TO 7 CHARACTERS
MOVENAME DS    0H
         LA    R3,8                 MOVE UP TO 8 BYTES
         LA    R4,NJHGJNAM          RECEIVING FIELD
LOOP2    DS    0H
         MVC   0(1,R4),0(R2)        MOVE 1 CHARACTER AT A TIME
         LA    R2,1(R2)             BUMP TO NEXT 'INPUT' CHARACTER
         LA    R4,1(R4)             BUMP TO NEXT 'OUTPUT' CHARACTER
         CLI   0(R2),C' '           IMBEDDED/TRAINING BLANK?
         BE    RETURN               YES..THAT'S ALL THEN
         BCT   R3,LOOP2             MOVE UP TO 8 CHARACTERS
         B     RETURN               THAT'S IT...
*---------------------------------------------------------------------*
* RETURN TO SENDER...                                                 *
*---------------------------------------------------------------------*
RETURN   DS    0H
         XR    R15,R15                 SET RC=0
        $RETURN RC=(15)
*---------------------------------------------------------------------*
* DATA AREAS...                                                       *
*---------------------------------------------------------------------*
         LTORG
        $MODEND
         END


G Carson
Systems Programmer (UK)                                    c Xephon 1991

