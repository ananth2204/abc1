A software availability monitor

The purpose of the following program is to assist the operator in 
monitoring the availability of several subsystems that are running 
on the system (eg TLMS, DSPRINT, ADMPRINT, SASWTR, 
ROSCOE, AS etc).  The program sends the following highlighted 
message to the operatorUs console whenever it detects that a 
particular job, whose name is defined in a special table, is not 
running:

	OP0001I MONITOR: xxxxxxxx IS NOT EXECUTING

where xxxxxxxx is the name of the job.  The program performs 
this check once a minute.

The procedure to start the program contains an EXEC statement 
and a DD statement named PARMLIB as follows:

	//MONITOR PROC
	//MON1    EXEC PGM=MON1
	//PARMLIB DD   DSN=SYS1.PARMLIB(IEAJOB00),DISP=SHR,
	//             UNIT=(,,DEFER),FREE=CLOSE

In the above example, PARMLIB defines a member in 
SYS1.PARMLIB that contains the names of the jobs to be 
monitored.  You must define one name per line starting at column 
one.  Comments must be placed after column eight.  Blank cards 
are ignored.

The name of the jobs to be monitored can be changed  or verified 
dynamically using the MODIFY console command, for example:

%	F MON1,+ jobname adds a new job name to the table.

%	F MON1,- jobname deletes a job name from the table.

%	F MON1,LIST displays the contents of the table.

The above commands only affect the dynamic table - the 
PARMLIB member remains unchanged.  Use of MON1 can be 
extended in an environment with NetView or a similar product.  
NetView could be used, by means of automatic commands, to add 
and delete names from the MON1 dynamic table, according to a 
scheduling table containing the names of the important subsystems 
and the period for which they must be active.

MON1 always sends the following message when it terminates, 
whether it is a normal or an abnormal termination, indicating that 
it is no longer available:

	OP0001I MONITOR: MON1 IS TERMINATING

We have been running MON1 under MVS/XA 2.1.3 and 
MVS/XA 2.2.0 since July 1988.  It has proved to be extremely 
useful in guaranteeing better availability for software at our 
installation.

*** FUNCTION         - THIS PROGRAM READS A JOBNAME  LIST  FROM  A  *** 
*                      PARMLIB MEMBER (IEAJOB00) AND CONSTRUCTS AN    * 
*                      INTERNAL TABLE WITH THOSE JOBNAMES. THEN IT    * 
*                      CHECKS IF EACH JOB IS EXECUTING. IF ANY JOB    * 
*                      IS NOT EXECUTING, THE OPERATOR IS  NOTIFIED    * 
*                      VIA WTO.   THE  SEARCH  IS  REPEATED  EVERY    * 
*                      MINUTE UNTIL JOB MONITOR IS STOPPED.           * 
*   OPERATOR         -   A) LIST:      SHOW CURRENT JOBNAME TABLE     * 
*   COMMANDS             B) STOP:      TERMINATE JOB MONITOR EXECUTION* 
*   ( VIA                C) +JOBNAME:  ADD JOBNAME TO JOBNAME TABLE   * 
*    MODIFY)                           DURING CURRENT EXECUTION       * 
*                        D) -JOBNAME:  DELETE JOBNAME FROM JOBNAME    * 
*                                      TABLE DURING CURRENT EXECUTION * 
*   ATRIBUTES        - AMODE 24, RMODE 24                             * 
*   SAMPLE JCL FOR EXECUTION:                                         * 
*            PROCEDURE NAME:  MON1                                    * 
*   //MONITOR   PROC                                                  * 
*   //MON1      EXEC PGM=MON1,TIME=1440                               * 
*   //PARMLIB   DD   DSN=SYS1.PARMLIB(IEAJOB00),DISP=SHR,FREE=CLOSE,  * 
*   //          UNIT=(,,DEFER)                                        * 
*   //*** PARMLIB MEMBER IEAJOB00 CONTAINS JOBNAME LIST ***           * 
*   RULES FOR CODING MEMBER IEAJOB00:                                 * 
*          - EACH CARD MUST CONTAIN ONE JOBNAME, STARTING AT COLUMN 1 * 
***        - BLANK CARDS ARE IGNORED                                *** 
         START                                                          
MONITOR  CSECT                                                          
         ENTRY MONITOR                                                  
         USING *,R15                                                    
         STM   R14,R12,12(R13)                                          
         ST    R13,*+16          LINKAGE CONVENTIONS                    
         LR    R14,R13                                                  
         CNOP  0,4                                                      
         BAL   R13,*+76                                                 
         DROP  R15                                                      
         USING *,R13                                                    
         DC    18F'0'                                                   
         ST    R13,8(R14)                                               
         ESTAE ESTAE1,CT,TERM=YES,RECORD=YES ESTAB. ESTAE ENVIRONMENT   
         MVC   DATAAREA,DATAAREA-1 INITIALIZE OPERATOR COMMAND AREA     
         LA    R11,ANSRAREA        ADDRESS OF RESPONSE AREA FOR QEDIT   
         EXTRACT (R11),FIELDS=COMM OBTAIN ADDRESS OF COMM. AREA         
         L     R11,ANSRAREA        LOAD ADDRESS OF COMM. AREA           
         USING COMLIST,R11         REG 11 - BASE REGISTER TO IEZCOM     
         L     R12,COMCIBPT        OBTAIN ADDRESS OF CIB                
         USING CIBNEXT,R12         REG 12 - BASE REGISTER TO IEZCIB     
         CLI   CIBVERB,CIBSTART    FIRST CIB FOR START COMMAND?         
         BNE   SETCOUNT            NO, CONTINUE INITIALIZATION          
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R12)  YES, FREE IT                
SETCOUNT EQU   *
         QEDIT ORIGIN=COMCIBPT,CIBCTR=255   SET MODIFY LIMIT TO 255     
         LA    R7,TABLE           REG 7 - POINTER TO JOB TABLE          
         OPEN  (PARMLIB,(INPUT))  OPEN PARAMETER LIST                   
         USING IHADCB,R3          REG.3 - BASE REGISTER TO PARMLIB DCB  
         LA    R3,PARMLIB                                               
         TM    DCBOFLGS,X'10'     PARMLIB DD STATEMENT MISSING?         
         DROP  R3                                                       
         BZ    ERRORRT            YES, NOTIFY OPERATOR AND TERMINATE    
         LA    R3,0               NO, SET JOBNAME COUNTER TO ZERO AND.. 
         B     READP                  GET FIRST CARD                    
ERRORRT  EQU   *
         WTO   ('OP0009I',C),                                          X
               (' ****************************************',D),        X
               (' MONITOR: UNABLE TO ALLOCATE JOBNAME LIST',D),        X
               ('          DATA SET                       ',D),        X
               (' ****************************************',DE),       X
               ROUTCDE=13,DESC=7                                        
         ABEND 0                                                        
READP    EQU   *
         GET   PARMLIB,CARD       GET A CARD FROM PARAMETER LIST        
         CLC   CARD(8),SPACES     CARD CONTAINS A JOBNAME?              
         BE    READP              NO, GET ANOTHER CARD                  
         MVC   0(8,R7),CARD       YES, MOVE JOBNAME TO JOB TABLE ...    
         MVI   8(R7),INACTIVE      INITIALIZE JOB STATUS ...            
         LA    R3,1(R3)            ADD 1 TO JOBNAME COUNTER ...         
         LA    R7,9(R7)            R7 POINTS TO NEXT AVAILABLE ENTRY    
         C     R3,NUMMAX           JOB TABLE IS FULL?                   
         BNE   READP              NO, GET ANOTHER CARD                  
WTO00A   EQU   *
         WTO   ('OP0007I',C),    YES, NOTIFY OPERATOR AND CONTINUE     X
               (' **********************************************',L),  X
               (' MONITOR: MAXIMUM NUMBER OF JOBS LIMIT EXCEEDED',L),  X
               (' **********************************************',DE), X
               ROUTCDE=13,DESC=7                                        
         B     CLOSEPA                                                  
MAIN     EQU   *
         C     R3,ZERO JOB TABLE EMPTY AFTER PROCESSING PARAMETER LIST? 
         BNE   CLOSEPA          NO, CLOSE PARMLIB                       
WTO00B   EQU   *
         WTO   ('OP0008I',C),   YES, NOTIFY OPERATOR AND TERMINATE     X
               (' *************************************',L),           X
               (' MONITOR: NO JOB FOUND IN JOBNAME LIST',D),           X
               ('          DATA SET                    ',D),           X
               (' *************************************',DE),          X
               ROUTCDE=13,DESC=7                                        
         ABEND 0                                                        
CLOSEPA  EQU   *
         CLOSE PARMLIB                                                  
         USING CVT,R3            REG. 3 - BASE REGISTER TO CVT          
         USING ASVT,R4           REG. 4 - BASE REGISTER TO ASVT         
         USING ASCB,R5           REG. 5 - BASE REGISTER TO ASCB         
         MVC   CVTADDR,16(R0)    CVTADDR <----  CVT ADDRESS             
         L     R3,CVTADDR        LOAD REG. 3 WITH CVT ADDRESS           
         MVC   ASVTADDR,CVTASVT  ASVTADDR <---- ASVT ADDRESS            
         L     R4,ASVTADDR       LOAD REG. 4 WITH ASVT ADDRESS          
         MVC   MAXUSER,ASVTMAXU  MAXUSER <-- NUMBER OF ASVT ENTRIES     
BEGIN    EQU   *
         L     R10,MAXUSER   LOAD REG 10 WITH NUMBER OF ASVT ENTRIES    
         LA    R6,ASVTENTY   LOAD REG 6 WITH FIRST ASVT ENTRY ADDRESS   
         MVC   CURASVT,ASVTENTY  CURASVT <-- FIRST ENTRY OF ASVT        
SEARCH   EQU   *
         LA    R7,TABLE          R7 POINTS TO FIRST JOB TABLE ENTRY     
         TM    CURASVT,X'80'     IS THIS ASVT ENTRY VALID?              
         BO    INCREM       NO,  BRANCH TO INCREM                       
         L     R5,CURASVT   YES, LOAD R5 WITH ASCB ADDRESS ...          
         L     R8,ASCBJBNS       R8 POINTS TO JOBNAMES ...              
         MVC   JOB1,0(R8)        JOB1 <-- JOBNAMES (STARTED TASK) ...   
         L     R8,ASCBJBNI       R8 POINTS TO JOBNAMEI ...              
         MVC   JOB2,0(R8)        JOB2 <-- JOBNAMEI (BATCH JOB)          
NEXTJOB  EQU   *
         CLI   8(R7),EMPTY       IS JOB TABLE ENTRY INVALID?            
         BE    NEXT              YES, PROCESS NEXT JOB TABLE ENTRY      
         MVC   JOBID,0(R7)       JOBID <-- CURRENT JOB TABLE ENTRY      
         CLC   JOBID,JOB1        JOBID IS EQUAL TO JOB1?                
         BNE   OTHERJOB          NO, COMPARE WITH JOB2                  
         MVI   8(R7),ACTIVE  YES,STATUS OF CURRENT JOB TABLE ENTRY IS.. 
         B     INCREM           ACTIVE AND  PROCESS NEXT ASVT ENTRY     
OTHERJOB EQU   *
         CLC   JOBID,JOB2        JOBID IS EQUAL TO JOB2?                
         BNE   NEXT              NO, PROCESS NEXT JOB TABLE ENTRY       
         MVI   8(R7),ACTIVE  YES,STATUS OF CURRENT JOB TABLE ENTRY IS.. 
         B     INCREM           ACTIVE AND  PROCESS NEXT ASVT ENTRY     
NEXT     EQU   *
         LA    R7,9(R7)          R7 POINTS TO NEXT JOB TABLE ENTRY      
         CLC   0(2,R7),EFES      LAST ENTRY PROCESSED?                  
         BNE   NEXTJOB           NO,  PROCESS THIS JOB TABLE ENTRY      
INCREM   EQU   *
         AH    6,=X'0004'        YES, PROCESS NEXT ASVT ENTRY           
         MVC   CURASVT,0(R6)     CURASVT <-- CURENT ASVT ENTRY          
         BCT   R10,SEARCH  LAST ASVT ENTRY NOT PROCESSED? YES, REPEAT   
COMM     EQU   *
         L     R12,COMCIBPT      OBTAIN ADDRESS OF CIB                  
         L     R9,COMECBPT       OBTAIN ADDRESS OF COMM. ECB            
         TM    0(R9),X'40'       COMM. ECB WAS POSTED ?                 
         BNO   VERIFY            NO, VERIFY ACTIVE JOBS                 
         CLI   CIBVERB,CIBSTOP   IS IT A STOP COMMAND?                  
         BE    FINAL             YES, MONITOR WILL STOP                 
         CLI   CIBVERB,CIBMODFY  IS IT A MODIFY COMMAND?                
         BNE   IGNORE            NO, INVALID OPERATOR COMMAND           
         LH    R9,CIBDATLN       OBTAIN LENGHT OF DATA FIELD            
         LTR   R9,R9             R9 EQUAL ZERO?                         
         BZ    IGNORE            ERROR, NULL INPUT                      
         BCTR  R9,R0             DECREASE LENGHT BY ONE                 
         EX    R9,DATAMOVE       MOVE OPERATOR COMMAND TO DATAAREA      
         QEDIT ORIGIN=COMCIBPT,BLOCK=(12)  FREE  MODIFY CIB             
         CLI   DATAAREA,C'+'     REPLY IS '+........'?                  
         BE    ACTIVT        YES, BRANCH TO ACTIVATE JOB ROUTINE        
         CLI   DATAAREA,C'-'       REPLY IS '-........'?                
         BE    DEACTIVT      YES, BRANCH TO DEACTIVATE JOB ROUTINE      
         CLC   DATAAREA(4),=C'LIST' REPLY IS 'LIST'?                    
         BE    LISTA         YES, BRANCH TO JOB TABLE LISTING ROUTINE   
         CLC   DATAAREA(4),=C'STOP' REPLY IS 'STOP'?                    
         BE    FINAL         YES, MONITOR WILL STOP                     
IGNORE   EQU   *
         WTO   ('OP0010I',C),   YES, NOTIFY OPERATOR - INVALID COMMAND X
               (' *********************************',L),               X
               (' MONITOR: INVALID OPERATOR COMMAND',L),               X
               (' *********************************',DE),              X
               ROUTCDE=13,DESC=7                                        
         B     COMM               CHECK IF THERE IS ANOTHER MODIFY      
ACTIVT   EQU   *
         LA    R7,TABLE           LOAD R7 WITH JOB TABLE ADDRESS        
COMPARE1 EQU   *
         CLC   DATAAREA+1(8),0(R7) IS JOBNAME TO BE ACTIVATED?          
         BNE   NEXTAT1           NO,  CHECK NEXT ENTRY                  
         MVI   8(R7),ACTIVE      YES, VALIDATE ENTRY,  ....             
         MVC   WTO02+78(8),DATAAREA+1   MOVE JOBNAME TO WTO AREA, ...   
         BAL   R14,WTO02               ISSUE WTO, ...                   
         MVC   DATAAREA,DATAAREA-1       RESTORE COMMAND AREA, ...      
         B     COMM                   CHECK IF THERE IS ANOTHER MODIFY  
NEXTAT1  EQU   *
         LA    R7,9(R7)              R7 POINTS TO NEXT JOB TABLE ENTRY  
         CLC   0(2,R7),EFES          LAST ENTRY PROCESSED?              
         BNE   COMPARE1              NO, COMPARE WITH THIS JOB          
         LA    R7,TABLE              YES, JOBNAME IS NOT IN JOB TABLE   
EMPTYENT EQU   *
         CLI   8(R7),EMPTY           CURRENT JOB TABLE ENTRY IS VALID?  
         BNE   NEXTENT             NO, CHECK NEXT ENTRY                 
         MVC   0(8,R7),DATAAREA+1  YES, MOVE JOBNAME TO JOB TABLE ENTRY 
         MVI   8(R7),ACTIVE             INITIALIZE JOB AS ACTIVE        
         MVC   WTO02+78(8),DATAAREA+1   MOVE JOBNAME TO WTO AREA,...    
         BAL   R14,WTO02                ISSUE WTO,...                   
         MVC   DATAAREA,DATAAREA-1      RESTORE COMMAND AREA, ...       
         B     COMM                   CHECK IF THERE IS ANOTHER MODIFY  
NEXTENT  EQU   *
         LA    R7,9(R7)              R7 POINTS TO NEXT JOB TABLE ENTRY  
         CLC   0(2,R7),EFES          LAST ENTRY PROCESSED?              
         BNE   EMPTYENT                NO,  CHECK THIS ENTRY            
         CLC   0(10,R7),EFES         YES, JOB TABLE HAS UNUSED ENTRY?   
         BNE   TABLFULL            NO, BRANCH TO JOB TABLE FULL ROUTINE 
         MVC   0(8,R7),DATAAREA+1  YES, MOVE JOBNAME TO JOB TABLE ENTRY 
         MVI   8(R7),ACTIVE             INITIALIZE JOB AS ACTIVE,...    
         MVC   WTO02+78(8),DATAAREA+1   MOVE JOBNAME TO WTO AREA,..     
         BAL   R14,WTO02                ISSUE WTO,...                   
         MVC   DATAAREA,DATAAREA-1      RESTORE COMMAND AREA, ...       
         B     COMM                   CHECK IF THERE IS ANOTHER MODIFY  
TABLFULL EQU   *
         MVC   WTO05+91(8),DATAAREA+1 MOVE JOBNAME TO WTO AREA          
WTO05    EQU   *
         WTO   ('OP0005I',C),                                          X
               (' ***********************************************',L), X
               (' MONITOR: JOBNAMEX NOT ADDED - JOB TABLE IS FULL',L), X
               (' ***********************************************',DE),X
               ROUTCDE=13,DESC=7                                        
         MVC   DATAAREA,DATAAREA-1      RESTORE COMMAND AREA, ...       
         B     COMM                   CHECK IF THERE IS ANOTHER MODIFY  
DEACTIVT EQU   *
         LA    R7,TABLE               R7 POINTS TO JOB TABLE            
COMPARE2 EQU   *
         CLC   DATAAREA+1(8),0(R7) IS  JOBNAME TO BE DEACTIVATED?       
         BNE   NEXTAT2             ENTRY? NO, CHECK NEXT ENTRY          
         MVI   8(R7),EMPTY         YES, MAKE THIS ENTRY INVALID,...     
         MVC   WTO06+82(8),DATAAREA+1   MOVE JOBNAME TO WTO AREA, ...   
WTO06    EQU   *
         WTO   ('OP0003I',C),                                          X
               (' ****************************************',L),        X
               (' MONITOR: JOBNAMEX DELETED FROM JOB TABLE',L),        X
               (' ****************************************',DE),       X
               ROUTCDE=13,DESC=7                                        
         MVC   DATAAREA,DATAAREA-1     RESTORE COMMAND AREA, ...        
         B     COMM                   CHECK IF THERE IS ANOTHER MODIFY  
NEXTAT2  EQU   *
         LA    R7,9(R7)              R7 POINTS TO NEXT JOB TABLE ENTRY  
         CLC   0(2,R7),EFES          LAST ENTRY PROCESSED?              
         BNE   COMPARE2              NO, CHECK CURRENT ENTRY            
         MVC   WTO07+84(8),DATAAREA+1 YES, MOVE JOBNAME TO WTO AREA,... 
WTO07    EQU   *
         WTO   ('OP0004I',C),                                          X
               (' ****************************************',L),        X
               (' MONITOR: JOBNAMEX NOT FOUND IN JOB TABLE',L),        X
               (' ****************************************',DE),       X
               ROUTCDE=13,DESC=7                                        
         MVC   DATAAREA,DATAAREA-1     RESTORE COMMAND AREA, ...        
         B     COMM                   CHECK IF THERE IS ANOTHER MODIFY  
LISTA    EQU   *
         LA    R7,TABLE             R7 POINTS TO FIRST JOB TABLE ENTRY  
         MVC   WTO08+68(44),WTO08+67                                    
         MVC   WTO08+117(44),WTO08+116   RESTORE ...                    
         MVC   WTO08+166(44),WTO08+165         WTO ....                 
         MVC   WTO08+215(44),WTO08+214            AREA                  
         MVC   WTO08+264(44),WTO08+263                                  
         MVC   WTO08+313(44),WTO08+312                                  
         MVC   WTO08+362(44),WTO08+361                                  
         MVC   WTO08+411(44),WTO08+410                                  
         LA    R9,WTO08+68            R9 POINTS TO FIRST LINE IN WTO    
         LA    R10,0                   INITIALIZE JOB COUNTER           
COMPARE4 EQU   *
         CLI   8(R7),EMPTY    JOB TABLE ENTRY IS INVALID?               
         BE    NOT            YES, ENTRY IS NOT LISTED                  
         MVC   0(8,R9),0(R7)  NO, MOVE JOBNAME TO WTO AREA ...          
         LA    R10,1(R10)     ADD 1 TO JOB COUNTER ...                  
         LA    R9,9(R9)       R9 POINTS TO NEXT POSITION IN WTO AREA..  
         C     R10,=F'5'      CURRENT LINE IS FULL?...                  
         BNE   NOT            NO, PROCESS NEXT ENTRY                    
         LA    R10,0          YES, RESTORE JOB COUNTER...               
         LA    R9,4(R9)         AND R9 POINTS TO NEXT LINE IN WTO AREA  
NOT      EQU   *
         LA    R7,9(R7)       R7 POINTS TO NEXT JOB TABLE ENTRY         
         CLC   0(2,R7),EFES   LAST ENTRY PROCESSED?                     
         BNE   COMPARE4       NO, CHECK CURRENT ENTRY                   
WTO08    EQU   *
         WTO   ('OP0006I',C),                                          X
               (' MONITOR: *JOB TABLE CURRENT LIST*',L),               X
               ('                                             ',D),    X
               ('                                             ',D),    X
               ('                                             ',D),    X
               ('                                             ',D),    X
               ('                                             ',D),    X
               ('                                             ',D),    X
               ('                                             ',D),    X
               ('                                             ',DE),   X
               ROUTCDE=13,DESC=7                                        
         MVC   DATAAREA,DATAAREA-1     RESTORE REPLY AREA, ...          
         B     COMM                   CHECK IF THERE IS ANOTHER MODIFY  
VERIFY   EQU   *
         LA    R7,TABLE         R7 POINTS TO FIRST JOB TABLE ENTRY      
NEXTVER  EQU   *
         CLI   8(R7),EMPTY      IS THIS ENTRY INVALID?                  
         BE    NOTREST          YES, IGNORE ENTRY                       
         CLI   8(R7),ACTIVE     NO, JOB IS ACTIVE?                      
         BE    ACTIVEJ               YES, RESTORE FLAG OF THIS ENTRY    
         MVC   WTO00C+78(8),0(R7)   NO,MOVE JOBNAME TO WTO AREA AND ..  
WTO00C   EQU   *
         WTO   ('OP0001I',C),                                          X
               (' ***********************************',L),             X
               (' MONITOR:  JOBNAMEX IS NOT EXECUTING',L),             X
               (' ***********************************',DE),            X
               ROUTCDE=13,DESC=2                                        
ACTIVEJ  EQU   *
         MVI   8(R7),INACTIVE       RESTORE FLAG                        
NOTREST  EQU   *
         LA    R7,9(R7)          R7 POINTS TO NEXT ENTRY                
         CLC   0(2,R7),EFES      LAST ENTRY PROCESSED?                  
         BNE   NEXTVER           NO,  CHECK CURRENT ENTRY               
SETTIMER EQU   *
         STIMER WAIT,BINTVL=TIME   WAIT A MINUTE AND ...                
         B     BEGIN                DO ALL AGAIN                        
WTO02    EQU   *
         WTO   ('OP0002I',C),                                          X
               (' ************************************',L),            X
               (' MONITOR: JOBNAMEX ADDED TO JOB TABLE',L),            X
               (' ************************************',DE),           X
               ROUTCDE=13,DESC=7                                        
         BR    R14                                                      
FINAL    EQU   *
         USING TIOT1,R6                 REG 6 - BASE REGISTER TO TIOT   
         EXTRACT TIOTADDR,FIELDS=TIOT   GET TIOT ADDRESS                
         L     R6,TIOTADDR              LOAD R6, TIOTADDR               
         MVC   FINALWTO+80(8),TIOCNJOB  MOVE JOBNAME TO WTO             
         SLR   R0,R0                                                    
FINALWTO EQU   *
         WTO   ('OP0001I',C),                                          X
               (' ***********************************',L),             X
               (' MONITOR:            IS TERMINATING ',L),             X
               (' ***********************************',DE),            X
               ROUTCDE=13,DESC=1                                        
         L     R13,4(R13)                                               
         LM    R14,R12,12(R13)          LINKAGE CONVENTIONS             
         LA    R15,0(0,R0)                                              
         BR    R14                      RETURN TO CALLER                
         PUSH  USING                                                    
ESTAE1   EQU   *
         USING *,R15                                                    
         BALR  R13,R0                                                   
         PUSH  USING                                                    
         USING *,R13                                                    
         LR    R10,R1                   SAVE R1                         
         USING TIOT1,R6                 REG 6 - BASE REGISTER TO TIOT   
         EXTRACT TIOTADDE,FIELDS=TIOT   GET TIOT ADDRESS                
         L     R6,TIOTADDE              LOAD R6, TIOTADDR               
         MVC   WTOESTAE+80(8),TIOCNJOB  MOVE JOBNAME TO WTO             
         SLR   R0,R0                                                    
WTOESTAE EQU   *
         WTO   ('OP0001I',C),                                          X
               (' ***********************************',L),             X
               (' MONITOR:            IS TERMINATING ',L),             X
               (' ***********************************',DE),            X
               ROUTCDE=13,DESC=1                                        
         LR    R1,R10                    RESTORE R1                     
         SETRP RC=0                      CONTINUE WITH TERMINATION      
         BR    14                                                       
TIOTADDE DS    F
         POP   USING                                                    
         POP   USING                                                    
         DS    0F                                                       
TIME     DC    X'00001770'              TIME INTERVAL : ONE MINUTE      
TIOTADDR DS    F                        TIOT ADDRESS                    
         DS    0D                                                       
TABLE    DC    40X'FFFFFFFFFFFFFFFFFF'    JOB TABLE                     
*  EACH ENTRY HAS 9 BYTES:  JOBNAME: 8 BYTES  FLAGS:   1 BYTE            
         DC    X'FFFFFF'                                                
*   JOB TABLE FLAGS *******                                             
INACTIVE EQU   X'40'                     JOB NOT FOUND IN SYSTEM        
ACTIVE   EQU   X'FF'                     JOB IS RUNNING                 
EMPTY    EQU   X'F0'                     ENTRY IS INVALID               
JOB1     DS    D                                                        
JOB2     DS    D                                                        
JOBID    DS    D                                                        
SPACES   DC    X'4040404040404040'                                      
EFES     DC    X'FFFFFFFFFFFFFFFFFFFF'                                  
CVTADDR  DS    F                   CVT  ADDRESS                         
ASVTADDR DS    F                   ASVT ADDRESS                         
CURASVT  DS    F                   CURRENT ASVT ENTRY(POINTER TO ASCB)  
MAXUSER  DS    F                   NUMBER OF ASVT ENTRIES               
NUMMAX   DC    F'40'               MAXIMUM NUMBER OF JOB TABLE ENTRIES  
ZERO     DC    F'00'                                                    
         DS    0F                                                       
         DC    X'40404040'         SPACE TO CLEAN   DATAAREA            
DATAAREA DS    CL80                                                     
ANSRAREA DS    F                                                        
DATAMOVE MVC   DATAAREA(0),CIBDATA MOVE DATA FROM CIB TO DATAAREA       
CARD     DS    CL80                                                     
PARMLIB  DCB   DDNAME=PARMLIB,LRECL=80,RECFM=FB,MACRF=GM,DSORG=PS,     X
               EODAD=MAIN                                               
         LTORG                                                          
         CVT     DSECT=YES                                              
         IHAASCB DSECT=YES                                              
         IHAASVT DSECT=YES                                              
         IHASDWA DSECT=YES                                              
         DCBD                                                           
         DSECT                                                          
         IEZCOM                                                         
         DSECT                                                          
         IEZCIB                                                         
         DSECT                                                          
         IEFTIOT1                                                       
         END                                                            


Paulo Victor Xavier Djmal
Systems Programmer (Brazil)	) Xephon 1989

