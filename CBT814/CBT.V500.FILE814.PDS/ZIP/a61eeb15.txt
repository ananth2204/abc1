Building a one-pack MVS system


Reinitializing the volume
//INITOFF  EXEC PGM=ICKDSF
//SYSPRINT DD SYSOUT=*
//IPLDECK  DD DSN=SYS1.SAMPLIB(IEAIPL0   0   ),DISP=SHR
//SYSIN    DD *
 INIT UNIT(185)                 -
      VOLID(SY1MIN)             -
      VERIFY(SY1MIN)            -
      VTOC(1,0   ,30   )              -
      INDEX(3,0   ,30   )             -
      IPLDD(IPLDECK,OBJFORMAT)
/*


Building the mini-resident system
//************  CAVEAT    : BEWARE CHA 'X' 'Y'  ALL ********************
//*              SEVERAL ITEMS EXTREMELY SENSITIVE                     *
//*
//S0   1       EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD *
 EXPORT CATALOG.SY1MIN                    -
        DISCONNECT
 SET MAXCC  = 0
 DEFINE MASTERCATALOG                     -
                     (                    -
                     NAME(CATALOG.SY1MIN) -
                     CYLINDERS(5 5)       -
                     VOLUME(SY1MIN)       -
                     ICFCAT               -
                     )
/*
//*--------------------------------------------------------------------*
//* NOTE:  A RETURN CODE OF 4 IN THE NEXT STEP CAN BE EXPECTED DUE
//*        TO THE TOLERATE ENQUEUE FAILURE OPTION
//*--------------------------------------------------------------------*
//*    COPY DATASETS FROM PRODUCTION (SELECTED SYS1, ALL ISP, ISR,
//*                                   SMS AND SYS2)
//*--------------------------------------------------------------------*
//**
//S0   2      EXEC PGM=ADRDSSU
//SYSPRINT DD SYSOUT=*
//OUTDD    DD DISP=SHR,UNIT=SYSDA,VOL=SER=SY1MIN
//SYSIN     DD *
  COPY DATASET                       -
              (                      -
               INCLUDE               -
                      (              -
                       ISP.**        -
                       ISR.**        -
                       ISF.**        -
                       LNK.**        -
                       SMS.**        -
                       SYS1.CMDLIB   -
                       SYS1.CSSLIB   -
                       SYS1.DAE      -
                       SYS1.HELP     -
                       SYS1.IMAGELIB -
                       SYS1.LINKLIB  -
                       SYS1.LOGREC   -
                       SYS1.LPALIB   -
                       SYS1.MACLIB   -
                       SYS1.MIGLIB   -
                       SYS1.MODGEN   -
                       SYS1.NUCLEUS  -
                       SYS1.PARMLIB  -
                       SYS1.PROCLIB  -
                       SYS1.SAMPLIB  -
                       SYS1.SVCLIB   -
                       SYS1.VTAMLIB  -
                       SYS1.VTAMLST  -
                       SYS2.CLIST    -
                       SYS2.DOCLIB   -
                       SYS2.ISPMLIB  -
                       SYS2.ISPPLIB  -
                       SYS2.ISPSLIB  -
                       SYS2.ISPTLIB  -
                       SYS2.JCLLIB   -
                       SYS2.LOADLIB  -
                       SYS2.MINIRSDT -
                       SYS2.PROCLIB  -
                       SYS2.PROCLIB  -
                       SYS2.REPORT.* -
                       SYS2.VTAMLIB  -
                       SYS2.VTAMLST  -
                       TZ0   0   .ISPF.ISPPROF -
                     )               -
              EXCLUDE                -
                     (               -
                      ISF.*.A*,      -
                      ISP.*.A*,      -
                      ISR.*.A*,      -
                      ISR.ISPFLMF.*  -
                     )               -
             )                       -
       OUTDD(OUTDD)                  -
       TOLERATE(ENQFAILURE)          -
       RENAMEU                                                -
                                                              -
             (                                                -
             (TZ0   0   .ISPF.ISPPROF,SYS2.TZ0   0   .ISPF.ISPPROF)       -
             (SMS.BASE.ACDS,SMS.BASE.ACDS.TEMP) -
             (SMS.BASE.COMMDS,SMS.BASE.COMMDS.TEMP) -
             (SMS.BASE.SCDS,SMS.BASE.SCDS.TEMP) -
             (SMS.NULL.ACDS,SMS.NULL.ACDS.TEMP) -
             (SMS.NULL.COMMDS,SMS.NULL.COMMDS.TEMP) -
             (SMS.NULL.SCDS,SMS.NULL.SCDS.TEMP) -
             )                                                -
       RECATALOG(CATALOG.SY1MIN)
  /*                                                                */
  /* A RETURN CODE OF 4 IS TO BE EXPECTED FROM THE PREVIOUS COMMAND */
  /* DUE TO THE TOLERATE ENQUEUE FAILURE OPTION                     */
  /* IN ORDER TO SIMPLIFY CONDITION CODE CHECKING, THE STEP WILL    */
  /* END WITH A RETURN CODE OF 0    INSTEAD OF 4                       */
  /*                                                                */
 IF LASTCC = 4 THEN SET MAXCC = 0
/*
//*--------------------------------------------------------------------*
//*    ALLOCATE AND CATALOG JES2 DATASETS (SPOOL & CHECKPOINT)
//*                         DUMP DATASETS (0   0    - 0   2)
//*                         PAGE DATASETS (PLPA, LOCAL AND COMMON)
//*                         SMF  DATASETS (SYS1.MAN1 AND MAN2)
//*                         STAGEINDEX
//*--------------------------------------------------------------------*
//S0   3      EXEC PGM=IDCAMS
//STEPCAT  DD DISP=SHR,DSN=CATALOG.SY1MIN
//SYSPRINT DD SYSOUT=*
//SY1MINDD DD DISP=OLD,UNIT=SYSDA,VOL=SER=SY1MIN
//HASPACE  DD DSN=SYS1.HASPACE,DISP=(,KEEP),
//            UNIT=SYSDA,SPACE=(CYL,50   ),
//            VOL=SER=SY1MIN,DCB=DSORG=PSU
//HASPCKPT DD DSN=SYS1.HASPCKPT,DISP=(,KEEP),
//            UNIT=SYSDA,SPACE=(CYL,1),
//            VOL=SER=SY1MIN,DCB=DSORG=PSU
//DUMP0   0      DD DISP=(,KEEP),UNIT=SYSDA,VOL=SER=SY1MIN,
//            DCB=(RECFM=F,LRECL=4160   ,BLKSIZE=4160   ),
//            SPACE=(CYL,10   ),DSN=SYS1.DUMP0   0   .TEMP
//DUMP0   1   DD DISP=(,KEEP),UNIT=SYSDA,VOL=SER=SY1MIN,
//            DCB=(RECFM=F,LRECL=4160   ,BLKSIZE=4160   ),
//            SPACE=(CYL,10   ),DSN=SYS1.DUMP0   1.TEMP
//DUMP0   2   DD DISP=(,KEEP),UNIT=SYSDA,VOL=SER=SY1MIN,
//            DCB=(RECFM=F,LRECL=4160   ,BLKSIZE=4160   ),
//            SPACE=(CYL,10   ),DSN=SYS1.DUMP0   2.TEMP
//SYSIN    DD *
 /********************************************/
 /*         DEFINE SMF DATASET               */
 /********************************************/
  DEFINE CLUSTER                        -
                (                       -
                 NAME(SYS1.MAN1)        -
                 VOLUME(SY1MIN)         -
                 NONINDEXED             -
                 CYLINDERS(25)          -
                 RECORDSIZE(40   96,32767) -
                 REUSE                  -
                 SPANNED                -
                 SPEED                  -
                 SHAREOPTIONS(2)        -
                )                       -
                CATALOG(CATALOG.SY1MIN)

  DEFINE CLUSTER                        -
                (                       -
                 NAME(SYS1.MAN2)        -
                 VOLUME(SY1MIN)         -
                 NONINDEXED             -
                 CYLINDERS(25)          -
                 RECORDSIZE(40   96,32767) -
                 REUSE                  -
                 SPANNED                -
                 SPEED                  -
                 SHAREOPTIONS(2)        -
                )                       -
                CATALOG(CATALOG.SY1MIN)

 /********************************************/
 /*         DEFINE STAGEINDEX                */
 /********************************************/
  DEFINE CLUSTER                          -
                (                         -
                 NAME(SYS1.STGINDEX)      -
                 VOLUME(SY1MIN)           -
                 CYLINDERS(10   )            -
                 KEYS(12 8)               -
                 RECORDSIZE(20   41 20   41)    -
                 REUSE                    -
                 BUFFERSPACE(20   480   )       -
                )                         -
         DATA(CONTROLINTERVALSIZE(20   48))  -
         INDEX(CONTROLINTERVALSIZE(40   96)) -
         CATALOG(CATALOG.SY1MIN)

 /********************************************/
 /*         DEFINE PLPA PAGE DATASET         */
 /********************************************/
  DEFINE PAGESPACE                          -
                   (                        -
                    FILE(SY1MINDD)          -
                    NAME(PAGE.VSY1MIN.PLPA) -
                    RECORDS(10   0   0   0   )           -
                    VOLUME(SY1MIN)          -
                   )                        -
                   CATALOG(CATALOG.SY1MIN)

 /********************************************/
 /*        DEFINE LOCAL PAGE DATASETS        */
 /********************************************/
  DEFINE PAGESPACE                            -
                   (                          -
                    FILE(SY1MINDD)            -
                    NAME(PAGE.VSY1MIN.LOCAL1) -
                    RECORDS(750   0   )             -
                    VOLUME(SY1MIN)            -
                   )                          -
                   CATALOG(CATALOG.SY1MIN)

 /********************************************/
 /*        DEFINE COMMON PAGE DATASET        */
 /********************************************/
  DEFINE PAGESPACE                            -
                   (                          -
                    FILE(SY1MINDD)            -
                    NAME(PAGE.VSY1MIN.COMMON) -
                    RECORDS(20   0   0   )             -
                    VOLUME(SY1MIN)            -
                   )                          -
                   CATALOG(CATALOG.SY1MIN)

 /********************************************/
 /*        CATALOG JES2 DATASETS             */
 /********************************************/
  DEFINE NONVSAM                    -
                (                   -
                 NAME(SYS1.HASPACE) -
                 DEVT(3380   )         -
                 VOLUME(SY1MIN)     -
                )                   -
                CATALOG(CATALOG.SY1MIN)

  DEFINE NONVSAM                     -
                (                    -
                 NAME(SYS1.HASPCKPT) -
                 DEVT(3380   )          -
                 VOLUME(SY1MIN)      -
                )                    -
                CATALOG(CATALOG.SY1MIN)

 /********************************************/
 /*        CATALOG DUMP DATASETS             */
 /********************************************/

  DEFINE NONVSAM(NAME(SYS1.DUMP0   0   .TEMP) -
                 DEVT(3380   ) -
                 VOLUME(SY1MIN)) -
                 CATALOG(CATALOG.SY1MIN)
  DEFINE NONVSAM(NAME(SYS1.DUMP0   1.TEMP) -
                 DEVT(3380   ) -
                 VOLUME(SY1MIN)) -
                 CATALOG(CATALOG.SY1MIN)
  DEFINE NONVSAM(NAME(SYS1.DUMP0   2.TEMP) -
                 DEVT(3380   ) -
                 VOLUME(SY1MIN)) -
                 CATALOG(CATALOG.SY1MIN)

 /********************************************/
 /*       LIST THE NEW MASTER CATALOG        */
 /********************************************/

 LISTCAT
/*
//*-------------------------------------------------------------------*
//*    INITIALIZE SYS1.LOGREC.
//*-------------------------------------------------------------------*
//S0   4      EXEC PGM=IFCDIP0   0
//SERERDS  DD  DSN=SYS1.LOGREC,DISP=OLD,UNIT=SYSDA,VOL=SER=SY1MIN
//FRAMES   DD  DDNAME=IEFRDER
//*--------------------------------------------------------------------*
//*    CREATE AND INITIALIZE A RACF RESTRUCTURED PRIMARY DATABASE
//*--------------------------------------------------------------------*
//S0   5      EXEC PGM=IRRMIN0   0   ,PARM='NEW'
//SYSPRINT DD SYSOUT=*
//SYSTEMP  DD DSN=SYS1.MODGEN(IRRTEMP1),DISP=SHR
//SYSRACF  DD DSN=SYS1.RACF1,DISP=(,KEEP),
//            UNIT=SYSDA,SPACE=(CYL,(6),,CONTIG),
//            VOL=SER=SY1MIN,DCB=(RECFM=F,BLKSIZE=40   96,DSORG=PS)
//*--------------------------------------------------------------------*
//*    CREATE AND INITIALIZE A RACF RESTRUCTURED SECONDARY DATABASE
//*--------------------------------------------------------------------*
//S0   6      EXEC PGM=IRRMIN0   0   ,PARM='NEW'
//SYSPRINT DD SYSOUT=*
//SYSTEMP  DD DSN=SYS1.MODGEN(IRRTEMP1),DISP=SHR
//SYSRACF  DD DSN=SYS1.RACF2,DISP=(,KEEP),
//            UNIT=SYSDA,SPACE=(CYL,(6),,CONTIG),
//            VOL=SER=SY1MIN,DCB=(RECFM=F,BLKSIZE=40   96,DSORG=PS)
//*--------------------------------------------------------------------*
//*    COPY THE EXISTING PRIMARY RACF DATABASE TO THE NEW ONE,
//*    PERFORM AN INDEX SCAN AND THE BAM/ALLOCATION VERIFICATION
//*    ON THE EXISTING PRIMARY DB
//*--------------------------------------------------------------------*
//S0   7      EXEC PGM=IRRUT40   0   ,PARM='LOCKINPUT'
//SYSPRINT DD SYSOUT=*
//INDD1    DD DSN=SYS1.RACFX,DISP=SHR
//OUTDD1   DD DSN=SYS1.RACF1,DISP=SHR,UNIT=SYSDA,VOL=SER=SY1MIN
//*--------------------------------------------------------------------*
//*    COPY THE EXISTING SECONDARY RACF DATABASE TO THE NEW ONE
//*    PERFORM AN INDEX SCAN AND THE BAM/ALLOCATION VERIFICATION
//*    ON THE EXISTING SECONDARY DB
//*--------------------------------------------------------------------*
//S0   8      EXEC PGM=IRRUT40   0   ,PARM='LOCKINPUT'
//SYSPRINT DD SYSOUT=*
//INDD1    DD DSN=SYS1.RACFX.BACKUP,DISP=SHR
//OUTDD1   DD DSN=SYS1.RACF2,DISP=SHR,UNIT=SYSDA,VOL=SER=SY1MIN
//*--------------------------------------------------------------------*
//*    UNLOCK THE DATABASES
//*--------------------------------------------------------------------*
//S0   9      EXEC PGM=IRRUT40   0   ,PARM='UNLOCKINPUT'
//SYSPRINT DD SYSOUT=*
//INDD1    DD DSN=SYS1.RACFX,DISP=SHR
//INDD2    DD DSN=SYS1.RACFX.BACKUP,DISP=SHR
//*--------------------------------------------------------------------*
//*    CATALOG THE RACF DATABASES
//*--------------------------------------------------------------------*
//S10         EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DEFINE NONVSAM                         -
                (                        -
                 NAME(SYS1.RACF1)        -
                 DEVT(3380   )              -
                 VOLUME(SY1MIN)          -
                )                        -
                CATALOG(CATALOG.SY1MIN)
  DEFINE NONVSAM                         -
                (                        -
                 NAME(SYS1.RACF2)        -
                 DEVT(3380   )              -
                 VOLUME(SY1MIN)          -
                )                        -
                CATALOG(CATALOG.SY1MIN)
/*
//*--------------------------------------------------------------------*
//*    ASSEMBLY OF THE RACF DATABASE NAME TABLE
//*--------------------------------------------------------------------*
//S11      EXEC PGM=IEV90   ,PARM='OBJECT,NODECK,NOTEST'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  UNIT=VIO,SPACE=(170   0   ,(60   0   ,10   0   ))
//SYSUT2   DD  UNIT=VIO,SPACE=(170   0   ,(60   0   ,10   0   ))
//SYSUT3   DD  UNIT=VIO,SPACE=(170   0   ,(60   0   ,10   0   ))
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY,SYSOUT=*
//SYSLIN   DD  DSN=&&OBJSET,DISP=(NEW,PASS),
//             UNIT=VIO,SPACE=(80   ,(20   0   ,50   )),DCB=(BLKSIZE=40   0   )
//SYSIN    DD  *
ICHRDSNT CSECT  ,
ICHRDSNT AMODE  31
ICHRDSNT RMODE  24
***********************************************************************
*   MODULE NAME = ICHRDSNT                                            *
*   DESCRIPTIVE NAME = RACF DATABASE NAME TABLE.                      *
*   FUNCTION = THIS TABLE CONTAINS THE NAMES FOR THE RACF DATABASES.  *
*              -- THE NAMES ARE IN PAIRS, THE FIRST BEING THE         *
*                 PRIMARY DATABASE AND THE SECOND BEING THE BACK-UP   *
*                 DATABASE.                                           *
*   THE FORMAT OF THE FLAG FIELD IS AS FOLLOWS:                       *
*   BIT SETTING        MEANING                                        *
*    0   0   .. ....         NO UPDATES TO BACK-UP DATABASE                 *
*    10   .. ....         UPDATE BACK-UP DATABASE EXCEPT STATISTICS      *
*    11.. ....         UPDATE BACK-UP DATABASE INCLUDING STATISTICS   *
*    .... ...1         USE THE RESIDENT DATA BLOCK OPTION, IF BIT     *
*                      7 IS ZERO, ONLY INDEX BLOCKS WILL BE KEPT IN   *
*                      STORAGE. OTHERWISE INDEX, BAM, AND PROFILE     *
*                      BLOCKS WILL BE KEPT IN STORAGE.                *
*   RECOMENDED NUMBER OF RESIDENT BLOCKS:                             *
*     MVS/XA     = 255                                                *
*     MVS/ESA    = 255                                                *
***********************************************************************
         DC   AL1(1)                 NUMBER OF ENTRIES
*                                    PRIMARY DATABASE NAME
         DC   CL44'SYS1.RACF1'                                   /*R1*/
*                                    BACKUP DATABASE NAME
         DC   CL44'SYS1.RACF2'                                   /*R2*/
         DC   AL1(255)               NUMBER OF RESIDENT BLOCKS
         DC   B'10   0   0   0   0   0   1'            DUPLEX UPDATES
*                                    RESIDENT DATA BLOCKS
         END
//*--------------------------------------------------------------------*
//*    LINKEDIT OF THE RACF DATABASE NAME TABLE
//*--------------------------------------------------------------------*
//S12      EXEC PGM=IEWL,PARM='XREF,LET,LIST,NCAL,TEST'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(10   24,(50   ,20   ))
//SYSLMOD  DD  DSN=SYS1.LINKLIB(ICHRDSNT),
//             UNIT=SYSDA,VOL=SER=SY1MIN,DISP=SHR
//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,DELETE)
//*--------------------------------------------------------------------*
//*    COPY CUSTOMIZED PARMLIB AND PROCLIB MEMBERS
//*
//* IKJACCNX   MINIMAL LOGON PROCEDURE EXTENSION (CLIST)
//* TSOSYS0   X   SYSTEMS GROUP LOGON PROCEDURE EXTENSION (CLIST)
//*
//* IKJACCNT   MINIMAL LOGON PROCEDURE (PROCLIB)
//* TSOSYS0   1   SYSTEMS GROUP LOGON PROCEDURE EXTENSION (PROCLIB)
//*
//* COMMND99   IPL INITIAL COMMANDS (PARMLIB)
//*            DAILY JOBS, ... LEFT OUT
//* IEAAPF99   APF LIST (PARMLIB)
//*            SYSTEM LIBRARIES ADAPTED TO SY1MIN VOLUME SERIAL
//* IEASYS99   POINTERS TO NEW MEMBERS (PARMLIB)
//* JES2NEW    JES2 INITIALIZATION DECK (PARMLIB)
//*            SPOOL- AND CHECKPOINT DATASET ON SY1MIN
//* LOAD0   0        MASTER CATALOG NAME AND VOLUME SET TO SY1MIN (PARMLIB)
//*
//* JES2       JES2 JCL (PROCEDURE)
//*            NON-SYSTEM PROCLIBS LEFT OUT
//*
//* CNMNET     VTAM STARTUP WITHOUT NCP (PROCEDURE)
//*
//* ATCCON0   0      VTAM INITIALLY ACTIVE MAJOR NODES (VTAMLST)
//*            NCP, SWITCHED, PATH, ... EXCLUDED
//*--------------------------------------------------------------------*
//S13      EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=*
//MINIRSDT DD DSN=SYS2.MINIRSDT,DISP=SHR
//CMDPROC  DD DSN=SYS2.CLIST,DISP=SHR,UNIT=SYSDA,VOL=SER=SY1MIN
//CVTAMLST DD DSN=SYS2.VTAMLST,DISP=SHR,
//            UNIT=SYSDA,VOL=SER=SY1MIN
//CPROCLIB DD DSN=SYS2.PROCLIB,DISP=SHR,
//            UNIT=SYSDA,VOL=SER=SY1MIN
//PARMLIB1 DD DSN=SYS1.PARMLIB,DISP=SHR,UNIT=SYSDA,VOL=SER=SY1MIN
//PROCLIB1 DD DISP=SHR,DSN=SYS1.PROCLIB,UNIT=SYSDA,VOL=SER=SY1MIN
//SYSIN    DD *
         COPY    INDD=((MINIRSDT,R)),OUTDD=CMDPROC
          SELECT MEMBER=IKJACCNX
          SELECT MEMBER=TSOSYS0   X
         COPY    INDD=((MINIRSDT,R)),OUTDD=PARMLIB1
          SELECT MEMBER=COMMND99
          SELECT MEMBER=IEAAPF99
          SELECT MEMBER=IEASYS99
          SELECT MEMBER=LOAD0   0
          SELECT MEMBER=JES2NEW
         COPY    INDD=((MINIRSDT,R)),OUTDD=PROCLIB1
          SELECT MEMBER=JES2
         COPY    INDD=((MINIRSDT,R)),OUTDD=CPROCLIB
          SELECT MEMBER=IKJACCNT
          SELECT MEMBER=TSOSYS0   1
          SELECT MEMBER=CNMNET
         COPY    INDD=((MINIRSDT,R)),OUTDD=CVTAMLST
          SELECT MEMBER=ATCCON0   0
/*
//*--------------------------------------------------------------------*
//*    INITIALIZE THE NEW MASTER CATALOG POINTER IN THE NUCLEUS
//*
//*    FORMAT OF SYSCATNN: VVVVVVTALLNNNNN...
//*    WHERE VVVVVV VOLSER
//*          T      CATALOG TYPE (1=ICF, 2=ICF WITH SYS% TO SYS1
//*                               CONVERSION ACTIVE)
//*          A       ALIAS LEVEL
//*          LL      CAS SERVIVE TASK LOWER LIMIT (18-C8, DEFAULT 3C)
//*          NNN..   CATALOG NAME
//*--------------------------------------------------------------------*
//S14      EXEC PGM=ICEGENER
//SYSPRINT  DD  SYSOUT=*
//SYSUT1    DD *
SY1MIN123CCATALOG.SY1MIN
//SYSUT2    DD DSN=SYS1.NUCLEUS(SYSCATLG),DISP=OLD,
//             UNIT=SYSDA,VOL=SER=SY1MIN
//SYSIN     DD DUMMY
//*--------------------------------------------------------------------*
//*    ALLOCATE AND CATALOG TEMPORARY UADS AND BRODCAST DATASETS
//*--------------------------------------------------------------------*
//S15      EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//BRODCAST  DD DSN=SYS1.BRODCAST.TEMP,DISP=(,KEEP),
//             UNIT=SYSDA,SPACE=(CYL,(2,0   )),
//             VOL=SER=SY1MIN,DCB=SYS1.BRODCAST
//UADS      DD DSN=SYS1.UADS.TEMP,DISP=(,KEEP),
//             UNIT=SYSDA,SPACE=(TRK,(2,2,10   )),
//             VOL=SER=SY1MIN,DCB=SYS1.UADS
//SYSIN     DD *
  DEFINE NONVSAM(NAME(SYS1.BRODCAST.TEMP) -
                 DEVT(3380   ) -
                 VOLUME(SY1MIN)) -
                 CATALOG(CATALOG.SY1MIN)
  DEFINE NONVSAM(NAME(SYS1.UADS.TEMP) -
                 DEVT(3380   ) -
                 VOLUME(SY1MIN)) -
                 CATALOG(CATALOG.SY1MIN)
/*
//*--------------------------------------------------------------------*
//*    SYNCHRONISE THE UADS AND THE BRODCAST DATASETS
//*    DEFINE TZ0   0    IN THE UADS
//*--------------------------------------------------------------------*
//S16      EXEC PGM=IKJEFT0   1
//SYSTSPRT  DD SYSOUT=*
//SYSUADS   DD DSN=SYS1.UADS.TEMP,DISP=SHR,
//             VOL=SER=SY1MIN,UNIT=SYSDA
//SYSLBC    DD DSN=SYS1.BRODCAST.TEMP,DISP=SHR,
//             VOL=SER=SY1MIN,UNIT=SYSDA
//SYSTSIN   DD *
ACCOUNT
    SYNC
    A (TZ0   0    TZ0   0    ACCT# IKJACCNT) SIZE(40   96)                    +
     UNIT(SYSALLDA) ACCT JCL NOLIM NOMOUNT OPER
    A (TZ0   0    * *) DATA(IKJACCNX) UNIT(SYSALLDA) SIZE(40   96)
    LIST (*)
END
/*
//*--------------------------------------------------------------------*
//*    RENAME THE TEMPORARY SMS, BRODCAST AND UADS DATASETS,
//*    THE DUMP DATASETS AND THE ISPF PROFILE FOR TZ0   0
//*--------------------------------------------------------------------*
//S17      EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  ALTER SMS.BASE.*.TEMP               -
        NEWNAME(SMS.BASE.*)           -
        CAT(CATALOG.SY1MIN)
  ALTER SMS.BASE.*.TEMP.DATA          -
        NEWNAME(SMS.BASE.*.DATA)      -
        CAT(CATALOG.SY1MIN)
  ALTER SMS.NULL.*.TEMP               -
        NEWNAME(SMS.NULL.*)           -
        CAT(CATALOG.SY1MIN)
  ALTER SMS.NULL.*.TEMP.DATA          -
        NEWNAME(SMS.NULL.*.DATA)      -
        CAT(CATALOG.SY1MIN)

  ALTER SYS1.BRODCAST.TEMP            -
        NEWNAME(SYS1.BRODCAST)        -
        CAT(CATALOG.SY1MIN)
  ALTER SYS1.UADS.TEMP                -
        NEWNAME(SYS1.UADS)            -
        CAT(CATALOG.SY1MIN)

  ALTER SYS1.DUMP0   0   .TEMP              -
        NEWNAME(SYS1.DUMP0   0   )          -
        CAT(CATALOG.SY1MIN)
  ALTER SYS1.DUMP0   1.TEMP              -
        NEWNAME(SYS1.DUMP0   1)          -
        CAT(CATALOG.SY1MIN)
  ALTER SYS1.DUMP0   2.TEMP              -
        NEWNAME(SYS1.DUMP0   2)          -
        CAT(CATALOG.SY1MIN)
  ALTER SYS2.TZ0   0   .ISPF.ISPPROF        -
        NEWNAME(TZ0   0   .ISPF.ISPPROF)    -
        CAT(CATALOG.SY1MIN)
/*
//*--------------------------------------------------------------------*
//*    REMOVE THE POINTER TO OUR NEW MASTER CATALOG
//*--------------------------------------------------------------------*
//S18      EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 EXPORT CATALOG.SY1MIN -
        DISCONNECT
/*
//*
//*--------------------------------------------------------------------*
//*    TAKE A FULL DUMP PHYSICAL BACK-UP OF SY1MIN
//*--------------------------------------------------------------------*
//S19     EXEC  PGM=ADRDSSU
//SYSPRINT DD SYSOUT=*
//DASD     DD DISP=OLD,UNIT=SYSDA,VOL=SER=SY1MIN
//CARTRIDG DD DSN=BACKUP.SY1MIN(+1),DISP=(NEW,CATLG),UNIT=CASS,
//            LABEL=(1,SL)
//SYSIN    DD *
  DUMP IDD(DASD) ODD(CARTRIDG) FULL ALLEXCP ALLDATA(*)
/*

Jan de Decker
Senior Systems Programmer
JED:SP NV (Belgium)            c Xephon 1996

