LISTV command for tape volumes in a TCDB

THE LISTV REXX EXEC

/* REXX */
/* This rexx is intended to bring together all the relevant details */
/* for a cartridge based in a 3495, or one which has volume serial */
/* information stored in a tcdb */
ARG VOLUME
ADDRESS TSO
LINE.='NO DATA' /* initialize outtrap variable */
index=1         /* and prepare a count variable */
                /* issue an outtrap to trap listcat output */
CALL OUTTRAP('LINE.')
                /* now issue the listcat */
                /* note the prefixing of the serial number by v */
'LISTC VOLENTRIES(V'VOLUME') ALL'
/* if the return code is non zero, then the tape is not tcdb */
/* controlled. therefore output error panel */
IF RC^=0 THEN DO
   MESS0='VOLUME' VOLUME 'NOT FOUND'
   LOC='NONE'
   STOR='NONE'
   MOUNT='NONE'
   ERR='NONE'
   DSN='NONE'
   VOL1='NONE'
   VOL2=''
   CALL MESSPOP
   EXIT
   END
/* now loop through the stack and pick up the tape location */
/* the storage group, when it was last mounted and its error status */
DO INDEX=1 BY 1 WHILE LINE.INDEX^='NO DATA'
LINE=LINE LINE.INDEX
END
/* now scan line for relevant fields */
DO POINT=1 TO WORDS(LINE) BY 1
IF INDEX(WORD(LINE,POINT),'LOCATION') = 1,
         THEN LOC=WORD(LINE,POINT)
IF INDEX(WORD(LINE,POINT),'STORAGE-GROUP')= 1,
         THEN STOR=WORD(LINE,POINT)
IF INDEX(WORD(LINE,POINT),'LAST-MOUNTED')=1,
         THEN MOUNT=WORD(LINE,POINT)
IF INDEX(WORD(LINE,POINT),'ERROR-STATUS')=1,
         THEN ERR=WORD(LINE,POINT)
   END
/* Now call the dataset name retrieval code */
/* ie ask CA-1 for information */
/* not forgetting to keep a record of the volume originally input */
ADDRESS ISPEXEC
VOLHOLD=VOLUME
'VPUT (VOLUME)'
'SELECT PGM(CA1GET)'
'VGET (DSN)'
/* dataset name is returned in dsn */
/* transfer it to dsname for catalog and volume check */
DSNAME=DSN
'VPUT (DSNAME)'
'SELECT PGM(CATGET)'
IF RC=0 THEN 'VGET (VOLUME)'
   ELSE VOLUME='NOT KNOWN TO MVS'
/* split returned value into two variables in case more than 10 */
/* volume serial numbers associated */
VOL1=SUBWORD(VOLUME,1,10)
VOL2=SUBWORD(VOLUME,10)
/* prepare title line */
MESS0='VOLUME' VOLHOLD 'IS IN THE FOLLOWING STATE'
CALL MESSPOP
EXIT
MESSPOP:
/* store variables, then display panel */
'ISPEXEC VPUT (MESS0 LOC STOR MOUNT ERR DSN VOL1 VOL2)'
'ISPEXEC ADDPOP ROW(1) COLUMN(5)'
'ISPEXEC DISPLAY PANEL(LISTVP)'
'ISPEXEC REMPOP'
RETURN

THE LISTVP PANEL

)ATTR DEFAULT(%+_)
       %   TYPE(OUTPUT) INTENS(HIGH)
)BODY WINDOW(70,13)
%MESS0
+
%DSN
+
%LOC
%STOR
%MOUNT
%ERR
+
+MVS CATALOG CHECK STATES THAT VOLUME SET CONSISTS OF
+
%VOL1
%VOL2
)INIT
VGET (MESS0 LOC STOR MOUNT ERR DSN VOL1 VOL2)
)END

THE CA1GET program

* THIS MODULE IS AN ISPF ONLY MODULE WHICH WILL RETRIEVE
* DATASET INFORMATION FROM CA-1 FOR A SUPPLIED VOLUME SERIAL
* NUMBER.
* VOLUME NUMBER IS SUPPLIED AS AN ISPF VARIABLE: VOLUME
* RETURNED DATASET NAME IS RETURNED IN ISPF VARIABLE: DSNAME
CA1GET   CSECT
* PREPARE MODULE AS REQUIRED FOR CA-1 USING TMMLINK MACRO
* ENSURE SYSLIB IN THE ASSEMBLY POINTS TO THE CA-1 MACRO LIBRARY
CA1GET1 TMMLINK ENTRY,BASE=(12),SYSMOD=CA1GET,EQUS=YES,SAVE=MYSAVE
* NOW DEFINE THE TWO ISPF VARIABLES FOR USE
* AND THEN GET THE VOLUME TO BE ANALYSED
         CALL ISPLINK,(VDEF,VOLUME,VOLSER,CHAR,VOLLEN),VL
         CALL ISPLINK,(VDEF,DSNAME,DSN,CHAR,DSNL),VL
         CALL ISPLINK,(VGET,VOLUME),VL
* ISSUE TMMOPTC MACRO. THIS IS A REQUIRED MACRO BEFORE GETTING INFO.
         TMMOPTMC
* THEN ISSUE THE GET FOR THE VOLUME. NOTE THAT THE TMC IS NOT ENQ'ED
* AS IT SHOULD NOT BE NEEDED FOR AN ENQUIRY, AND THAT A FAILURE TO
* FIND THE VOLUME WILL TRANSFER TO ROUTINE ABEND001 TO SET RCODE 8
* ABEND001 IS A CA-1 DEFAULT RETURN POINT. THE PREVIOUS TMMOPTMC
* MACRO WILL GO THERE AS WELL IF PROBLEMS OCCUR.
         TMMGETVL VOLSER,RECORD,ABEND001,ENQ=NO
* THE CA-1 RECORD HAS BEEN RETURNED IN AREA RECORD. MAP THIS WITH
* A TMMTMREC MACRO, AND ADDRESS USING R3.
         LA    R3,RECORD
         USING TMRECORD,R3
* MOVE THE DATASET NAME TO THE ISPF VARIABLE WORK AREA
* AND RETURN IT TO THE CALLER
         MVC   DSN,TMDSN
         CALL ISPLINK,(VPUT,DSNAME),VL
         L     R13,4(,R13)
         RETURN (14,12),RC=0
ABEND001 DS    0H
         L     R13,4(,R13)
         RETURN (14,12),RC=8
* NOTE @@@PATCH REQUIRED TO GET MACROS TO RESOLVE.
@@@PATCH DS    200C
CHAR     DC    CL8'CHAR'
VOLUME   DC    CL8'(VOLUME)'
VOLSER   DC    CL6' '
VOLLEN   DC    F'6'
DSNAME   DC    CL8'(DSN)'
DSN      DC    CL44' '
DSNL     DC    F'44'
VDEF     DC    CL8'VDEFINE'
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
MYSAVE   DS    9D
RECORD   DC    340C' '
         TMMTMREC
         END

The CATGET program

* THE PURPOSE OF THIS MODULE IS TO RETURN THE VOLUME SERIAL NUMBER(S)
* ASSOCIATED WITH A CATALOGUED DATASET. IT DOES THIS AS AN ISPF-BASED
* FUNCTION TO WHICH THE INPUT VARIABLE (DSNAME) CONTAINS THE DSN TO
* LOCATE, AND (VOLUME) CONTAINS THE VOLUME NUMBERS. NOTE THAT IF MORE
* THAN ONE SERIAL NUMBER IS INVOLVED, (VOLUME) CONTAINS THESE AS A
* LITERAL STRING SEPARATED BY BLANKS. IT IS LEFT TO THE INVOKER'S REXX
* TO BREAK THIS STRING INTO WORDS.
CATGET   AMODE 24
CATGET   CSECT
* USE BAKR TO PRESERVE REGISTERS
         BAKR  14,0
         REGS
         LR    R12,R15
         USING CATGET,R12
* DEFINE THE ISPF VARIABLES AND RETRIEVE THE DSNAME TO LOOK FOR
         CALL ISPLINK,(VDEF,DSNAME,DSN,CHAR,DSNL),VL
         CALL ISPLINK,(VDEF,VOLUME,VOLSER,CHAR,VOLLEN),VL
         CALL ISPLINK,(VGET,DSNAME),VL
* ISSUE LOCATE FOR THE DATASET
         LOCATE INCAM
* IF NOT FOUND, THEN ISSUE A RETURN CODE OF 8
         LTR   R15,R15
         BZ    RETDETS           * CLEAN GET, SO DATA FOUND
         B     SETREC            * NO DATA SO RETURN CODE 8
* HAVING REACHED HERE, AND ASSUMING THE FILE IS FOUND THEN WE CAN LIST
* THE DETAILS BACK TO THE CALLER
RETDETS  DS    0H
         XR    R2,R2             * CLEAR A COUNT REGISTER
         LH    R2,LOC            * AND GET COUNT OF VOLUMES
         LA    R3,LOC            * AND MAP AREA
         USING VOLMAP,R3
         LA    R4,VOLSER         * AND MAP RETURN AREA
VOLOOP   DS    0H
         MVC   0(6,R4),VOLLOC    * MOVE IN FIRST VOLUME
         LA    R4,7(,R4)         * PREPARE NEXT VOLUME ALLOWING A SPACE
         LA    R3,12(,R3)        * GO TO NEXT ONE FROM CAMLIST
         BCT   R2,VOLOOP         * AND LOOP ROUND IF NECESSARY
* NOW RETURN VARIABLE TO ISPF
         CALL ISPLINK,(VPUT,VOLUME),VL
* SET ZERO RETURN CODE AND RETURN TO CALLER
         LA    R15,0
         PR
SETREC   DS    0H
         LA    R15,8
         PR
MYSAVE   DS    9D
CHAR     DC    CL8'CHAR'
VOLUME   DC    CL8'(VOLUME)'
VOLSER   DC    CL140' '
VOLLEN   DC    F'140'
DSNAME   DC    CL8'(DSNAME)'
DSN      DC    CL44' '
DSNL     DC    F'44'
VDEF     DC    CL8'VDEFINE'
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
* ENSURE DOUBLEWORD ALIGNMENT, REQUIRED FOR LOCATE
         DS    0D
LOC      DS    256C
*     ISSUE CAMLST MACRO, REQUIRED FOR LOCATE
INCAM    CAMLST NAME,DSN,,LOC
VOLMAP   DSECT
FILLER   DS    CL6
VOLLOC   DS    CL6
         END


Systems Programmer (UK)                                                        c Xephon 1995

