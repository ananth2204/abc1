A DASD recovery program


//RECVY   EXEC  PGM=DASRECVR,PARM=     <==== required PARM
//STEPLIB  DD   DSN=user.loadlib,DISP=SHR
//SYSPRINT DD   SYSOUT=*
//SYSUDUMP DD   SYSOUT=*
//SORTWK01 DD   UNIT=WORK,SPACE=(CYL,(5,1))
//SORTWK02 DD   UNIT=WORK,SPACE=(CYL,(5,1))
//SORTWK03 DD   UNIT=WORK,SPACE=(CYL,(5,1))
//PRINTER  DD   SYSOUT=*,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1330)
//SMFREC   DD   DSN=SMF.TYPE1517,DISP=SHR
//SYSIN    DD   *


//RECVY   EXEC  PGM=DASRECVR,PARM=D
        etc
//SYSIN    DD   *
DATASET.ONE
DATASET.TWO


//RECVY   EXEC  PGM=DASRECVR,PARM=V
        etc
//SYSIN    DD   *
USER01
USER02


//RECVY   EXEC  PGM=DASRECVR,PARM=J
        etc
//SYSIN    DD   *
BIJ001A
BIJ001B


DASRECVR SOURCE CODE

         TITLE 'LIST UPDATES TO A DISK PACK'
         MACRO
         BALS  &REG,&BRTO
         BAL   &REG,&BRTO
         DC    S(*+2)
         MEND
DASRECVR CSECT
ZERO     EQU   X'00'                    ZERO
SIGNF    EQU   X'F0'                    POSITIVE SIGN
VOL      EQU   X'01'                    OPTION= VOL
DSN      EQU   X'02'                    OPTION= DSN
JOBTSU   EQU   X'04'                    JOBNAME OR TSU NAME
ALL      EQU   X'08'                    OPTION= ALL
PACKDSN  EQU   X'03'                    PACK + DSN
TP       EQU   X'10'                    OPTION= TAPE
TAPE     EQU   X'80'                    TAPE DEVICE
ENDOFTAB EQU   X'FF'                    END OF TABLE
FULLSTOP EQU   C'.'                     FULL STOP
MAXPACKS EQU   4                        MAX PACK DSN OR JOBNAMES PER
         TITLE 'PROLOGUE'
         SAVE  (14,12),,DASRECVR_&SYSDATE-&SYSTIME
         USING DASRECVR,R12             SET UP BASE ADDRESSABILITY
         LR    R12,R15                  ENTRY POINT ADDRESS
         ST    R13,PREVSA               PREVIOUS SAVEAREA ADDRESS
         LR    R15,R13                  SWITCH
         LA    R13,SAVEAREA             LENGTH OF WORKAREA
         ST    R13,8(,R15)              STORE IN CALLER'S NEXT SA
         TITLE 'CHECK FOR PARM INFORMATION'
PARMINFO EQU   *
         OI    OPTNSW,VOL               VOL SCAN IS THE DEFAULT
         L     R3,0(,R1)                @ OF PARM FIELD
         LH    R4,0(,R3)                PARM LENGTH
         LTR   R4,R4                    ANY PARM?
         BZ    OPENFLE                  NO- TAKE THE DEFAULT
         LA    R3,2(,R3)                MOVE OVER LENGTH FIELD
         LA    R5,PARMTAB               @ PARM TABLE
         USING PARMVALS,R5              ADDRESS IT
CHKPARM  EQU   *
         SR    R6,R6                    ZEROIZE
         ICM   R6,B'0001',PARMLEN       PARM LENGTH
         CR    R6,R4                    EQUAL LENGTHS?
         BNE   NXTPARM                  NO- TRY AGAIN
         BCTR  R6,0                     -1 FOR CLC
         EX    R6,COMPARM               COMPARE PARM VALUES
         BNE   NXTPARM                  NO- TRY AGAIN
         MVC   OPTNSW,PARMOR            MOVE IN THE VALUE
         B     OPENFLE                  OPEN THE FILES
NXTPARM  EQU   *
         ICM   R6,B'0001',PARMELEN      POINT TO
         AR    R5,R6                    NEXT ENTRY
         CLC   PARMELEN,ENDOFTAB        END OF TABLE?
         BE    USER002                  YES- INVALID PARM
         B     CHKPARM                  CHECK NEXT TABLE ENTRY
COMPARM  CLC   3(*-*,R5),0(R3)          COMPARE EQUAL?
         TITLE 'OPEN FILES'
OPENFLE  EQU   *
         BALS  R2,OPENFLES              OPEN THE FILES
         TM    OPTNSW,ALL               OPTION = ALL?
         BO    SCANSMF                  YES-
         TM    OPTNSW,TP                OPTION = TAPE?
         BO    SCANSMF                  YES-
         BALS  R2,RDSYSIN               CONSTRUCT TABLE OF REQUIRED
*                                       PACKS
SCANSMF  EQU   *
         LA    R1,SRT1ADDR              POINT TO SORT PARAMETERS
         TM    OPTNSW,DSN               OPTION = DSN?
         BNO   CHECKTPE                 NO- TAKE DEFAULT SORT
         LA    R1,SRT2ADDR              POINT TO SORT PARAMETERS
         B     CALLSORT                 SORT
CHECKTPE EQU   *
         TM    OPTNSW,TP                OPTION = TAPE?
         BNO   CALLSORT                 NO- TAKE DEFAULT SORT
         LA    R1,SRT3ADDR              POINT TO SORT PARAMETERS
CALLSORT EQU   *
         LINK  EP=SORT                  LINK TO SORT
         TM    OPTNSW,ALL               OPTION = ALL?
         BO    CLOSE                    YES-
         TM    OPTNSW,TP                OPTION = TAPE?
         BO    CLOSE                    YES-
         ICM   R11,B'1111',STARTADR     FIRST FREEMAIN ADDRESS
         ICM   R0,B'1111',SUBPLEN       SUBPOOL AND LENGTH
         LA    R9,VOLLEN(0,0)           DEFAULT
         TM    OPTNSW,DSN               DSN OPTION?
         BNO   CHKJOB                   TO
         LA    R9,DSNLEN(0,0)           DSN LENGTH
         B     CALCPTR                  CALCULATE POINTER
CHKJOB   EQU   *
         TM    OPTNSW,JOBTSU            JOB OR TSU OPTION?
         BNO   CALCPTR                  NO-
         LA    R9,JOBLEN(0,0)           JOB OR TSU LENGTH
CALCPTR  EQU   *
         M     R8,=AL4(MAXPACKS)        POINTER ADDRESS
         LR    R8,R11                   POSITION TO THE
FREEBUF  EQU   *
         AR    R8,R9                    POINTER ADDRESS
         ICM   R8,B'1111',0(R8)         NEXT AREA ADDRESS
         FREEMAIN R,LV=(0),A=(11),RELATED=(GETBUF,'GET BUFFER STORAGE')
         LR    R11,R8                   ADDRESS OF AREA TO FREE
         LTR   R8,R8                    END OF CHAIN?
         BNM   FREEBUF                  NO-
CLOSE    EQU   *
         CLOSE (SMF,,SYSINPUT,,PRINT)   CLOSE ALL FILES
RETURN   EQU   *
         L     R13,PREVSA               ADDRESS OF THE PREVIOUS SA
         LM    R14,R12,12(R13)          RESTORE THE CALLER'S REGISTERS
         SR    R15,R15                  CC
         BR    R14                      RETURN TO CALLER
         TITLE 'OPEN THE FILES'
OPENFLES EQU   *
         MVC   OPENEXIT+2(2),0(R2)      EXIT ADDRESS
         OPEN  (SMF,(INPUT),SYSINPUT,(INPUT),PRINT,(OUTPUT))
         USING IHADCB,R9                INFORM THE ASSEMBLER
         LA    R9,SMF                   ADDRESS THE SMF DCB
         TM    DCBOFLGS,X'10'           OPEN OKAY?
         BZ    USER001                  NO-
         LA    R9,SYSINPUT              ADDRESS THE SYSIN DCB
         TM    DCBOFLGS,X'10'           OPEN OKAY?
         BZ    USER001                  NO-
         LA    R9,PRINT                 ADDRESS THE PRINTER DCB
         TM    DCBOFLGS,X'10'           OPEN OKAY?
         BZ    USER001                  NO-
         DROP  R9                       INFORM THE ASSEMBLER
OPENEXIT B     0
         TITLE 'CONSTRUCT TABLE OF VOLUMES'
RDSYSIN  EQU   *
         MVC   RDSYSEXT+2(2),0(R2)      EXIT ADDRESS
         SR    R8,R8                    ZEROIZE
GSTORAGE EQU   *
         BALS  R2,GETSTOR               OBTAIN STORAGE
         LR    R3,R1                    AREA ADDRESS
         STCM  R3,B'1111',STARTADR      STORE FOR FREEMAIN
         USING PACKS,R3                 DSECT ADDRESSABILITY
BULDTAB  EQU   *
         GET   SYSINPUT,INREC           READ
CHKOPT   EQU   *
         TM    OPTNSW,JOBTSU            JOB OR TSU OPTION?
         BNO   DISC                     NO-
         MVC   JOBORTSU,JTNAME          STORE JOB OR TSU NAME
         LA    R3,JOBLEN(,R3)           POSITION ONTO NEXT ENTRY
         B     INCRR8                   GO AND READ NEXT CARD
DISC     EQU   *
         TM    OPTNSW,VOL               VOL?
         BNO   DSNOPT                   NO
         MVC   VOLUME,VOLNAME           STORE PACK NAME OR DSN
         LA    R3,VOLLEN(,R3)           POSITION ONTO NEXT ENTRY
*                                       OR JOBNAME
         B     INCRR8                   GO AND READ NEXT CARD
DSNOPT   EQU   *
         MVC   DSNME,DSNAME             STORE DSN
         LA    R3,DSNLEN(,R3)           POSITION ONTO NEXT ENTRY
INCRR8   EQU   *
         LA    R8,1(,R8)                COUNT NO OF ENTRIES
         BCT   R4,BULDTAB               DO WHILE R4 > 0?
         GET   SYSINPUT,INREC           READ
         BALS  R2,GETSTOR               OBTAIN STORAGE
         ST    R1,0(,R3)                CHAIN GETMAINED AREAS
         LR    R3,R1                    AREA ADDRESS
         B     CHKOPT                   DO WHILE NOT EOF?
SYSINEOF EQU   *
         STCM  R8,B'1111',NOPACKS       NO OF TABLE ENTRIES
         LTR   R8,R8                    ANY INPUT?
         BZ    USER003                  NO- ABORT
RDSYSEXT B     0
         TITLE 'OBTAIN STORAGE'
GETSTOR  EQU   *
         MVC   GSTOREXT+2(2),0(R2)      EXIT ADDRESS
         LA    R11,VOLLEN               MAX PACK LENGTH
         TM    OPTNSW,VOL               VOL?
         BO    CALCLEN                  YES-
         LA    R11,JOBLEN               MAX JOBNAME LENGTH
         TM    OPTNSW,JOBTSU            JOB OR TSU OPTION?
         BO    CALCLEN                  YES
         LA    R11,DSNLEN               MAX JOBNAME LENGTH
CALCLEN  EQU   *
         M     R10,=AL4(MAXPACKS)       MAX ENTRY LENGTH PER GETMAIN
         LR    R10,R11                  STORE FOR A BIT
         LA    R11,L'NEXTPTR(,R11)      LENGTH OF NEXT POINTER
         LR    R0,R11                   SWITCH FOR R TYPE GETMAIN
         ICM   R0,B'1000',=X'00'        INDICATE SUBPOOL ZERO
         ST    R0,SUBPLEN               STORE FOR FREEMAIN
GETBUF   EQU   *
         GETMAIN R,LV=(0),RELATED=(FREEBUF,'FREE BUFFER')
         AR    R10,R1                   POSITION TO POINTER ENTRY
         MVC   0(L'NEXTPTR,R10),=XL4'FFFFFFFF'  INIT POINTER ENTRY
         LA    R4,MAXPACKS              MAX ENTRIES PER
*                                       OBTAINED STORAGE
GSTOREXT B     0
         TITLE 'ABEND SECTION'
USER001  EQU   *
         ABEND 001,DUMP
USER002  EQU   *
         ABEND 002,DUMP
USER003  EQU   *
         ABEND 003,DUMP
*************************STORAGE ITEMS*********************************
SAVEAREA DC    18F'0'                   REGISTER SAVEAREA
PREVSA   EQU   SAVEAREA+4,4             PREVIOUS SAVEAREA
SUBPLEN  DC    F'0'                     SUBPOOL AND LENGTH
SRTPARMS DS    0X                       SORT PARMS
SMFDCB   DC    A(SMF)                   SMF DCB ADDRESS
PRTDCB   DC    A(PRINT)                 PRINT DCB ADDRESS
OPTNSW   DC    X'00'                    OPTION SWITCH
STARTADR DC    AL4(0)                   FIRST GETMAINED AREA ADDRESS
NOPACKS  DC    AL4(0)                   NO OF ENTRIES IN TABLE
SRT1ADDR DC    X'80',AL3(SRTLST01)      ADDRESS OF SORT PARMS 1
SRT2ADDR DC    X'80',AL3(SRTLST02)      ADDRESS OF SORT PARMS 2
SRT3ADDR DC    X'80',AL3(SRTLST03)      ADDRESS OF SORT PARMS 3
*********************** SORT PARAMETERS *******************************
         CNOP  2,4                      ALIGN TO CORRECT BOUNDARY
SRTLST01 DC    AL2(SRT01END-SRTLST01)   PARM LIST LENGTH
         DC    A(SORTA)                 BEGINNING ADDRESS OF SORT STMT
         DC    A(SORTAEND)              ENDING ADDRESS OF SORT STMT
         DC    A(RECA)                  BEGINNING ADDRESS OF REC STMT
         DC    A(RECAEND)               ENDING ADDRESS OF REC STMT
         DC    A(E15)                   E15 ADDRESS
         DC    A(E35)                   E35 ADDRESS
         DC    X'F7'                    USER PARM INDICATOR
         DC    AL3(SRTPARMS)            SORT PARMS
SRT01END EQU   *
SORTA    DC    C' SORT FIELDS=(35,6,CH,A,11,4,PD,A,7,4,BI,A)'
SORTAEND DC    C' '
RECA     DC    C' RECORD TYPE=V,LENGTH=(32760,,,,300)'
RECAEND  DC    C' '
         CNOP  2,4                      ALIGN TO CORRECT BOUNDARY
SRTLST02 DC    AL2(SRT02END-SRTLST02)   PARM LIST LENGTH
         DC    A(SORTB)                 BEGINNING ADDRESS OF SORT STMT
         DC    A(SORTBEND)              ENDING ADDRESS OF SORT STMT
         DC    A(RECA)                  BEGINNING ADDRESS OF REC STMT
         DC    A(RECAEND)               ENDING ADDRESS OF REC STMT
         DC    A(E15)                   E15 ADDRESS
         DC    A(E35)                   E35 ADDRESS
         DC    X'F7'                    USER PARM INDICATOR
         DC    AL3(SRTPARMS)            SORT PARMS
SRT02END EQU   *
SORTB    DC    C' SORT FIELDS=(45,44,CH,A,35,6,CH,A,'
         DC    C'11,4,PD,A,7,4,BI,A)'
SORTBEND DC    C' '
         CNOP  2,4                      ALIGN TO CORRECT BOUNDARY
SRTLST03 DC    AL2(SRT03END-SRTLST03)   PARM LIST LENGTH
         DC    A(SORTC)                 BEGINNING ADDRESS OF SORT STMT
         DC    A(SORTCEND)              ENDING ADDRESS OF SORT STMT
         DC    A(RECA)                  BEGINNING ADDRESS OF REC STMT
         DC    A(RECAEND)               ENDING ADDRESS OF REC STMT
         DC    A(E15)                   E15 ADDRESS
         DC    A(E35)                   E35 ADDRESS
         DC    X'F7'                    USER PARM INDICATOR
         DC    AL3(SRTPARMS)            SORT PARMS
SRT03END EQU   *
SORTC    DC    C' SORT FIELDS=(11,4,PD,A,7,4,BI,A)'
SORTCEND DC    C' '
*********************** INPUT RECORD **********************************
INREC    DS    CL80
VOLNAME  EQU   INREC,6                  VOL NAME
DSNAME   EQU   INREC,44                 DSN
JTNAME   EQU   INREC,8                  JOBNAME OR TSU NAME
************************ PARM TABLE ***********************************
PARMTAB  DS    0XL1
         DC    AL1(9),X'01',AL1(6),CL6'TYPE=V'
         DC    AL1(9),X'02',AL1(6),CL6'TYPE=D'
         DC    AL1(9),X'04',AL1(6),CL6'TYPE=J'
         DC    AL1(9),X'08',AL1(6),CL6'TYPE=A'
         DC    AL1(10),X'10',AL1(7),CL7'TYPE=TP'
         DC    AL1(255),X'00',AL1(6),CL6'      '
*********************** SMF DCB ***************************************
SMF      DCB   DSORG=PS,DEVD=DA,MACRF=(GL),DDNAME=SMFREC,EODAD=SMFEOF, X
               BFTEK=A
*********************** SYSIN DCB *************************************
SYSINPUT DCB   DSORG=PS,DEVD=DA,MACRF=(GM),DDNAME=SYSIN,EODAD=SYSINEOF
************************ PRINTER DCB **********************************
PRINT    DCB   DSORG=PS,DEVD=DA,MACRF=(PM),DDNAME=PRINTER
         LTORG
         TITLE 'E15 SORT EXIT'
**************************** E15 **************************************
E15      CSECT
         SAVE  (14,12),,E15_&SYSDATE-&SYSTIME
         USING E15,R12                  SET UP BASE ADDRESSABILITY
         LR    R12,R15                  ENTRY POINT ADDRESS
         ST    R13,PREVSA2              PREVIOUS SAVEAREA ADDRESS
         LR    R15,R13                  SWITCH
         LA    R13,SAVEARA2             LENGTH OF WORKAREA
         ST    R13,8(,R15)              STORE IN CALLER'S NEXT SA
         L     R6,4(,R1)                USER EXIT ADDRESS CONSTANT
         USING SPARM,R6                 INFORM THE ASSEMBLER
         L     R4,SSMFDCB               PICK UP SMF DCB ADDRESS
         TITLE 'READ SMF RECORDS'
READSMF  EQU   *
         GET   (R4)                     READ A RECORD
         LR    R3,R1                    RECORD @
         USING SMFREC15,R3              INFORM THE ASSEMBLER
         CLI   SMF14RTY,15              RECORD TYPE 15?
         BE    SMF15                    YES-
         CLI   SMF14RTY,17              RECORD TYPE 17?
         BNE   READSMF                  NO-
SMF17    EQU   *
         USING SMFREC17,R3              INFORM THE ASSEMBLER
         TM    SOPTNSW,TP               TAPE OPTION?
         BNO   MVEVSER                  NO-
         CLI   SMF17FVL,X'F0'           < 0?
         BL    READSMF                  YES-
         CLI   SMF17FVL,X'F9'           > 9?
         BH    READSMF                  YES-
MVEVSER  EQU   *
         MVC   SMF17UID(L'SMF17FVL),SMF17FVL  MOVE VOL SER FOR SORT
         B     RET12                    RETURN TO SORT
SMF15    EQU   *
         USING SMFREC15,R3              INFORM THE ASSEMBLER
         TM    SOPTNSW,TP               TAPE DEVICE?
         BNO   CHKJFCB                  NO-
         CLI   SMFUCBTY+2,TAPE          TAPE?
         BNE   READSMF                  NO-
CHKJFCB  EQU   *
         LA    R5,SMFJFCB1              JFCB @
         USING JFCB,R5                  INFORM THE ASSEMBLER
         MVC   SMF14UID(L'JFCBVOLS/5),JFCBVOLS MOVE VOL SER FOR SORT
         MVC   SMF14RST(L'SMF14RST+L'SMF14RSD),SMF14SDC
         MVC   STRDDNM,SMFTIOE5         DDNAME
         MVC   SMF14SDC(L'JFCBDSNM),JFCBDSNM  DSNAME
         MVC   JFCBELNM,STRDDNM         DDNAME
         B     RET12                    RETURN TO SORT
         TITLE 'RETURN RECORD TO THE SORT'
RET12    EQU   *
         L     R13,PREVSA2              PREVIOUS SAVEAREA
         L     R0,20(R13)               RESTORE R0
         LR    R1,R3                    @ OF SORT RECORD
         L     R14,12(R13)              RESTORE R14
         LM    R2,R12,28(R13)           RESTORE R2 THRU R12
         LA    R15,12(0,0)              INSERT SORT RECORD
         BR    R14                      RETURN TO THE SORT
         TITLE 'LAST CALL TO E15'
SMFEOF   EQU   *
         L     R13,PREVSA2              PREVIOUS SAVEAREA
         LM    R14,R12,12(R13)          RESTORE SORTS REGISTERS
         LA    R15,8(0,0)               DO NOT CALL US AGAIN
         BR    R14                      RETURN TO THE SORT
         LTORG
***************************  STORAGE ITEMS ****************************
SAVEARA2 DC    18F'0'                   REGISTER SAVEAREA
PREVSA2  EQU   SAVEARA2+4,4             PREVIOUS SAVEAREA
STRDDNM  DS    CL8                      STORED DDNAME
         LTORG
         TITLE 'E35 SORT EXIT'
**************************** E35 **************************************
E35      CSECT
         SAVE  (14,12),,E35_&SYSDATE-&SYSTIME
         USING E35,R12                  SET UP BASE ADDRESSABILITY
         LR    R12,R15                  ENTRY POINT ADDRESS
         ST    R13,PREVSA3              PREVIOUS SAVEAREA ADDRESS
         LR    R15,R13                  SWITCH
         LA    R13,SAVEARA3             LENGTH OF WORKAREA
         ST    R13,8(,R15)              STORE IN CALLER'S NEXT SA
         L     R3,0(,R1)                RECORD LEAVING THE SORT
         LTR   R3,R3                    ANY MORE SORT RECORDS?
         BZ    RET8                     NO-
         L     R6,8(,R1)                USER PARMS
         USING SPARM,R6                 INFORM THE ASSEMBLER
         USING SMFREC15,R3              INFORM THE ASSEMBLER
         CLI   SMF14RTY,15              TYPE 15 RECORD?
         BE    TYPE15                   YES-
         CLI   SMF14RTY,17              TYPE 17 RECORD?
         BE    TYPE17                   NO- KEEP READING
RET4     EQU   *
         L     R13,PREVSA3              @ OF PREV SA
         LM    R14,R12,12(R13)          CALLER'S REGISTERS
         LA    R15,4(0,0)               DELETE
         BR    R14                      RETURN TO SORT
RET8     EQU   *
         L     R13,PREVSA3              @ OF PREV SA
         LM    R14,R12,12(R13)          CALLER'S REGISTERS
         LA    R15,8(0,0)               DELETE
         BR    R14                      RETURN TO SORT
         TITLE 'EXAMINE THE SMF RECORD'
TYPE17   EQU   *
         USING SMFREC17,R3              INFORM THE ASSEMBLER
         TM    SOPTNSW,ALL              OPTION = ALL?
         BO    PRTTYP17                 YES-
         TM    SOPTNSW,TP               OPTION = TAPE?
         BO    PRTTYP17                 YES-
         TM    SOPTNSW,VOL              OPTION = VOL?
         BNO   P17JOB                   NO-
         SR    R7,R7                    ZEROIZE
         ICM   R7,B'0001',SMF17NVL      NO OF VOLUMES TO SCAN
         LA    R10,SMF17FVL             POINT TO VOLUMES
         BAL   R2,SCAN                  CHECK IF REQUIRED RECORD
         B     PRTTYP17                 YES-
P17JOB   EQU   *
         TM    SOPTNSW,JOBTSU           OPTION = JOB?
         BNO   P17DSN                   NO-
         LA    R10,SMF17JBN             JOB NAME/TSU NAME
         BAL   R2,SCAN                  CHECK IF REQUIRED RECORD
         B     PRTTYP17                 YES-
P17DSN   EQU   *
         LA    R10,SMF17DSN             DSN OPTION
         BAL   R2,SCAN                  CHECK IF REQUIRED RECORD
PRTTYP17 EQU   *
         BALS  R2,PRTSMF17              PRINT RECORD TYPE 17
         B     RET4                     RETURN TO SORT
TYPE15   EQU   *
         USING SMFREC15,R3              INFORM THE ASSEMBLER
         TM    SOPTNSW,ALL              OPTION = ALL?
         BO    PRTTYP15                 YES-
         TM    SOPTNSW,TP               OPTION = TAPE?
         BO    PRTTYP15                 YES-
         TM    SOPTNSW,VOL              OPTION = VOL?
         BNO   P15JOB                   NO-
         LA    R10,SMFJFCB1             POINT TO THE JFCB
         USING JFCB,R10                 INFORM THE ASSEMBLER
         SR    R7,R7                    ZEROIZE
         ICM   R7,B'0001',JFCBNVOL      NO OF VOLUMES TO SCAN
         LA    R10,JFCBVOLS             POINT TO VOLUMES
         BAL   R2,SCAN                  CHECK IF REQUIRED RECORD
         B     PRTTYP15                 YES-
P15JOB   EQU   *
         TM    SOPTNSW,JOBTSU           OPTION = JOB?
         BNO   P15DSN                   NO-
         LA    R10,SMF14JBN             JOB NAME/TSU NAME
         BAL   R2,SCAN                  CHECK IF REQUIRED RECORD
         B     PRTTYP15                 YES-
P15DSN   EQU   *
         LA    R10,SMF14SDC             POINT TO DSN
         BAL   R2,SCAN                  CHECK IF REQUIRED RECORD
PRTTYP15 EQU   *
         BALS  R2,PRTSMF15              PRINT RECORD TYPE 15
         B     RET4                     RERURN TO SORT
SCAN     EQU   *
         ICM   R8,B'1111',SAREAADR      TABLE @
         ICM   R9,B'1111',SNOVOLS       NO OF ENTRIES TO SCAN
         LA    R11,MAXPACKS             MAX CATALOGS PER
*                                       GETMAINED STORAGE
FIND     EQU   *
         TM    SOPTNSW,JOBTSU           JOBNAME OPTION?
         BNO   TESTDISK                 NO-
         CLC   0(L'SMF14JBN,R8),0(R10)  = JOBS?
         BER   R2                       YES- RETURN
         LA    R8,L'SMF14JBN(,R8)       NEXT ENTRY
         B     NXTENTRY                 NEXT ENTRY IN TABLE
TESTDISK EQU   *
         TM    SOPTNSW,VOL              VOL OPTION?
         BNO   TESTDSN                  NO-
         USING SMFREC17,R3              INFORM THE ASSEMBLER
         LR    R4,R7                    STORE FOR FUTURE REFERENCE
         LR    R5,R10                   STORE FOR FUTURE REFERENCE
VOLLOOP  EQU   *
         CLC   0(L'VOLUME,R8),0(R10)    = VOLUMES?
         BER   R2                       YES- RETURN
         LA    R10,L'VOLUME(,R10)       NEXT ENTRY
         CLI   SMF17RTY,17              SCRATCH RECORD?
         BNE   DECRR7                   NO-
         LA    R10,L'SMF17RV2(,R10)     JUMP A LITTLE
DECRR7   EQU   *
         BCT   R7,VOLLOOP               DO WHILE R7 > 0?
         LA    R8,L'VOLUME(,R8)           NEXT ENTRY
         LR    R7,R4                    RESTORE
         LR    R10,R5                   RESTORE
         B     NXTENTRY                 NEXT ENTRY IN TABLE
TESTDSN  EQU   *
         CLC   0(L'DSNME,R8),0(R10)     = DSN?
         BER   R2                       YES- RETURN
         LA    R8,L'DSNME(,R8)          NEXT ENTRY
NXTENTRY EQU   *
         BCT   R9,SUBR11                DO WHILE R9 > 0?
         B     RET4                     RETURN TO SORT
SUBR11   EQU   *
         BCT   R11,FIND                 DO WHILE R11 > 0?
         LA    R11,MAXPACKS             MAX VOLUMES DSNS OR JOBNAMES
*                                       PER GETMAINED STORAGE
         ICM   R8,B'1111',0(R8)         POINTER TO NEXT ENTRY
         B     FIND                     KEEP LOOKING
SMFSCNEX B     0                        RETURN TO CALLER
         TITLE 'PRINT TYPE 17 RECORD'
PRTSMF17 EQU   *
         MVC   PRT17EX+2(2),0(R2)       RETURN ADDRESS
         USING SMFREC17,R3              INFORM THE ASSEMBLER
         L     R4,SPRTDCB               @ OF PRINT DCB
         TM    SOPTNSW,DSN+JOBTSU+TP    DSN OR JOB OR TAPE OPTION?
         BNZ   P17LCNT                  YES-
         CLC   STRVOL,SMF17UID          = VOLUMES?
         BE    P17LCNT                  YES- PRINT IT
         MVC   STRVOL,SMF17UID          STORE VOLUME
         ZAP   PAGENO,=P'0'             RESET PAGE NO
         BALS  R2,HEADINGS              PRINT THE HEADINGS
         B     P17                      PRINT THE REST
P17LCNT  EQU   *
         CP    LINECNT,=P'65'           SKIP TO NEW PAGE?
         BNH   P17                      NO-
         BALS  R2,HEADINGS              PRINT THE HEADINGS
P17      EQU   *
         MVC   PUSER,SMF17JBN           JOB NAME
         MVC   FW,SMF17DTE              DATE RECORD MOVED TO SMF BUFFER
         UNPK  DW(L'YY+L'DDD),DATE      CONVERT THE JULIAN DATE
         OI    DW+L'YY+L'DDD-1,SIGNF    FORCE THE SIGN TO F
         MVC   PSMFYEAR,YY              MOVE JULIAN
         MVI   PSTOP4,FULLSTOP          DATE TO THE
         MVC   PSMFDAYS,DDD             PRINT AREA
         LA    R11,SMF17TME             TIME RECORD MOVED TO SMF BUFFER
         BALS  R2,CONVTIME              CONVERT TIME TO HH.MM.SS.TH
         MVC   PSMFTIME,EDPAT2          EDIT PATTERN
         ED    PSMFTIME,HHMMSSTH        MAKE IT PRINTABLE
         MVC   PDISP(L'LDELETE),LDELETE DELETE
         MVC   PDSN,SMF17DSN            DATASET NAME
         TM    SOPTNSW,VOL              OPTION = VOL?
         BO    PRTIT2                   YES-
         MVC   PVOLUME,SMF17UID         VOLSER
PRTIT2   EQU   *
         PUT   (R4),PRTLINE             WRITE TO SPOOL
         BALS  R2,CLEAR                 CLEAR THE PRINTLINE
         AP    LINECNT,=P'1'            INCREMENT LINE COUNT
PRT17EX  B     0
         TITLE 'PRINT TYPE 15 RECORD'
PRTSMF15 EQU   *
         MVC   PRT15EX+2(2),0(R2)       RETURN ADDRESS
         USING SMFREC15,R3              INFORM THE ASSEMBLER
         L     R4,SPRTDCB               @ OF PRINT DCB
         TM    SOPTNSW,DSN+JOBTSU+TP    DSN OR JOB OR TAPE OPTION?
         BNZ   P15LCNT                  YES-
         CLC   STRVOL,SMF14UID          = VOLUMES?
         BE    P15LCNT                  YES- PRINT IT
         MVC   STRVOL,SMF14UID          STORE VOLUME
         ZAP   PAGENO,=P'0'             RESET PAGE NO
         BALS  R2,HEADINGS              PRINT THE HEADINGS
         B     P15                      PRINT THE REST
P15LCNT  EQU   *
         CP    LINECNT,=P'65'           SKIP TO NEW PAGE?
         BNH   P15                      NO-
         BALS  R2,HEADINGS              PRINT THE HEADINGS
P15      EQU   *
         MVC   PUSER,SMF14JBN           JOB NAME
         MVC   FW,SMF14DTE              DATE RECORD MOVED TO SMF BUFFER
         UNPK  DW(L'YY+L'DDD),DATE      CONVERT THE JULIAN DATE
         OI    DW+L'YY+L'DDD-1,SIGNF    FORCE THE SIGN TO F
         MVC   PSMFYEAR,YY              MOVE JULIAN
         MVI   PSTOP4,FULLSTOP          DATE TO THE
         MVC   PSMFDAYS,DDD             PRINT AREA
         LA    R11,SMF14TME             TIME RECORD MOVED TO SMF BUFFER
         BALS  R2,CONVTIME              CONVERT TIME TO HH.MM.SS.TH
         MVC   PSMFTIME,EDPAT2          EDIT PATTERN
         ED    PSMFTIME,HHMMSSTH        MAKE IT PRINTABLE
         LA    R10,SMFJFCB1             JFCB @
         USING JFCB,R10                 INFORM THE ASSEMBLER
         MVC   PDISP(L'LOLD),LOLD       OLD
         TM    JFCBIND2,JFCNEW          NEW?
         BNO   TSTMOD                   NO-
         MVC   PDISP(L'LNEW),LNEW       NEW
         B     PRTDSN                   PRINT DSN
TSTMOD   EQU   *
         TM    JFCBIND2,JFCMOD          MOD?
         BNO   PRTDSN                   NO- MUST BE OLD
         MVC   PDISP(L'LMOD),LMOD       MOD
PRTDSN   EQU   *
         MVC   PDSN,SMF14SDC            DATASET NAME
         MVC   PDDN,JFCBELNM            DDNAME
         TM    SOPTNSW,VOL              OPTION = VOL?
         BO    PRTIT1                   YES-
         MVC   PVOLUME,SMF14UID         VOLSER
PRTIT1   EQU   *
         PUT   (R4),PRTLINE             WRITE TO SPOOL
         BALS  R2,CLEAR                 CLEAR THE PRINTLINE
         AP    LINECNT,=P'1'            INCREMENT LINE COUNT
PRT15EX  B     0
         TITLE 'PRINT THE HEADINGS'
HEADINGS EQU   *
         MVC   HEADEXIT+2(2),0(R2)      RETURN ADDRESS
         L     R4,SPRTDCB               @ OF PRINT DCB
         BALS  R2,CLEAR                 CLEAR THE PRINTLINE
         MVI   SKIPCHAR,C'1'            SKIP TO TOP OF PAGE
         TM    SOPTNSW,VOL+ALL          OPTION = VOL + ALL?
         BZ    OPTDSN                   NO-
         MVC   PHEAD1,LHEAD1            HEADING
         MVC   PVOL,STRVOL              HEADING
         B     GETTIME                  GET THE TIME
OPTDSN   EQU   *
         TM    SOPTNSW,DSN              OPTION = DSN?
         BNO   OPTJOB                   NO-
         MVC   PHEAD2,LHEAD2            HEADING
         B     GETTIME                  GET THE TIME
OPTJOB   EQU   *
         TM    SOPTNSW,JOBTSU           OPTION = JOB OR TSU?
         BNO   OPTTAPE                  NO-
         MVC   PHEAD3,LHEAD3            HEADING
         B     GETTIME                  GET THE TIME
OPTTAPE  EQU   *
         MVC   PHEAD8,LHEAD8            HEADING
GETTIME  EQU   *
         TIME  DEC                      OBTAIN THE DATE AND TIME
* R1 = DATE(00YYDDDF) R0 = TIME(HHMMSSTH)
         ST    R1,FW                    STORE DATE
         UNPK  DW(L'YY+L'DDD),DATE      CONVERT THE JULIAN DATE
         OI    DW+L'YY+L'DDD-1,SIGNF    FORCE THE SIGN TO F
         MVC   PYEAR,YY                 MOVE JULIAN
         MVI   PSTOP1,FULLSTOP          DATE TO THE
         MVC   PDAYS,DDD                PRINT AREA
         STCM  R0,B'1110',FW            MOVE IN HHMMSS
         MVI   FW+L'FW-1,X'0C'          MOVE IN HHMMSS0C
         MVO   FW,FW(3)                 ADJUST TO 0HHMMSSC
         UNPK  DW,FW                    CONVERT TO CHARACTER
         OI    DW+L'DW-1,SIGNF          FORCE THE SIGN TO F
         MVC   PHOURS,HH                HOURS
         MVI   PSTOP2,FULLSTOP          .
         MVC   PMINS,MM                 MINUTES
         MVI   PSTOP3,FULLSTOP          .
         MVC   PSECS,SS                 SECONDS
         AP    PAGENO,=P'1'             ADD 1 TO PAGE NO
         MVC   PHEAD4,LHEAD4            HEADING
         MVC   PAGENUM,EDPAT1           EDIT PATTERN
         ED    PAGENUM,PAGENO           PAGE NUMBER
         PUT   (R4),PRTLINE             WRITE TO SPOOL
         BALS  R2,CLEAR                 CLEAR THE PRINTLINE
         MVI   SKIPCHAR,C'0'            SKIP TWO LINES
         MVC   PHEAD5,LHEAD5            HEADING
         MVC   PHEAD6,LHEAD6            HEADING
         MVC   PHEAD7,LHEAD7            HEADING
         TM    SOPTNSW,VOL              OPTION = VOL?
         BO    PRTIT                    YES-
         MVC   PHEAD9,LHEAD9            HEADING
PRTIT    EQU   *
         PUT   (R4),PRTLINE             WRITE TO SPOOL
         BALS  R2,CLEAR                 CLEAR THE PRINTLINE
         PUT   (R4),PRTLINE             WRITE TO SPOOL
         ZAP   LINECNT,=P'4'            ADD 4 TO LINE COUNT
HEADEXIT B     0
* CLEAR THE PRINT AREA
CLEAR    EQU   *
         MVC   CLREXIT+2(2),0(R2)       RETURN ADDRESS
         MVI   SKIPCHAR,C' '            SPACEFILL THE
         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE  PRINTLINE
CLREXIT  B     0
         TITLE 'CONVERT TIME TO HH.MM.SS.TH'
* CONVERT TIME ROUTINE
* R11 = ADDRESS OF 4 BYTE BINARY TIME IN 1/100 OF A SECOND
CONVTIME EQU   *
         MVC   CONVTEXT+2(2),0(R2)      EXIT ADDRESS
         SR    R8,R8                    CLEAR
         ICM   R9,B'1111',0(R11)        TIME IN BINARY
         D     R8,TON                   CONVERT TO SECONDS
         CVD   R8,DW                    CONVERT 1/100 (REMAINDER)
         ICM   R8,B'0011',TIME100       1/100 SECOND
         SRL   R8,4(0)                  REMOVE THE SIGN
         STCM  R8,B'0011',T100          AND SAVE FOR MVO
         SR    R8,R8                    CLEAR
         D     R8,SIXTY                 OBTAIN SECS
         CVD   R8,DW                    CONVERT SECONDS
         ICM   R8,B'0011',SECONDS       SECONDS
         SRL   R8,4(0)                  REMOVE THE SIGN
         STCM  R8,B'0011',SECS          AND SAVE FOR MVO
         SR    R8,R8                    CLEAR
         D     R8,SIXTY                 CONVERT
         CVD   R8,DW                    TO
         ICM   R8,B'0011',MINUTES       MINUTES
         SRL   R8,4(0)                  REMOVE THE SIGN
         STCM  R8,B'0011',MINS          AND SAVE FOR MVO
         CVD   R9,DW                    AND
         ICM   R8,B'0011',HOURS         HOURS
         SRL   R8,4(0)                  REMOVE THE SIGN
         STCM  R8,B'0011',HRS           AND SAVE FOR MVO
* STRING TIME TOGETHER TO OBTAIN 0HHMMSSTHC
         MVO   HHMMSSTH,T100            COMBINE
         MVO   HHMMSS,SECS              TO
         MVO   HHMM,MINS                MAKE
         MVO   HHS,HRS                  HHMMSSTH
CONVTEXT B     0                        RETURN TO CALLER
         LTORG
         TITLE 'STORAGE ITEMS'
*************************STORAGE ITEMS*********************************
SAVEARA3 DC    18F'0'                  REGISTER SAVEAREA
PREVSA3  EQU   SAVEARA3+4,4            PREVIOUS SAVEAREA
STRVOL   DC    CL8' '                  STORED CATALOG NAME
LINECNT  DC    PL2'66'                 LINE COUNT
PAGENO   DC    PL2'0'                  PAGE NUMBER
TON      DC    F'100'                  TON
SIXTY    DC    F'60'                   SIXTY
FW       DS    F                       FULLWORD
DATE     EQU   FW+1,3                  DATE
DW       DC    D'0'                    WORKAREA
TIME100  EQU   DW+6,2                  HUNDRETH OF A SECOND
SECONDS  EQU   DW+6,2                  SECONDS
MINUTES  EQU   DW+6,2                  MINUTES
HOURS    EQU   DW+6,2                  HOURS
YY       EQU   DW,2                    YY
DDD      EQU   DW+2,3                  DDD
HH       EQU   DW+2,2                  HH
MM       EQU   DW+4,2                  MM
SS       EQU   DW+6,2                  SS
T100     DS    PL2                     HUNDREDTHS
SECS     DS    PL2                     SECONDS
MINS     DS    PL2                     MINUTES
HRS      DS    PL2                     HRS
HHMMSSTH DC    PL5'0'                  0HHMMSSTH
HHMMSS   EQU   HHMMSSTH,4              HHMMSS
HHMM     EQU   HHMMSSTH,3              HHMM
HHS      EQU   HHMMSSTH,2              HH
************************* PRINTLINE ***********************************
PRTLINE  DS    CL133
SKIPCHAR EQU   PRTLINE,1
PHEAD1   EQU   PRTLINE+54,18
PHEAD2   EQU   PRTLINE+51,31
PHEAD3   EQU   PRTLINE+54,26
PHEAD4   EQU   PRTLINE+125,4
PHEAD5   EQU   PRTLINE+3,40
PHEAD6   EQU   PRTLINE+60,12
PHEAD7   EQU   PRTLINE+92,6
PHEAD8   EQU   PRTLINE+54,26
PHEAD9   EQU   PRTLINE+101,6
PVOL     EQU   PRTLINE+73,6
PYEAR    EQU   PRTLINE+104,2
PSTOP1   EQU   PRTLINE+106,1
PDAYS    EQU   PRTLINE+107,3
PHOURS   EQU   PRTLINE+112,2
PSTOP2   EQU   PRTLINE+114,1
PMINS    EQU   PRTLINE+115,2
PSTOP3   EQU   PRTLINE+117,1
PSECS    EQU   PRTLINE+118,2
PAGENUM  EQU   PRTLINE+129,4
PUSER    EQU   PRTLINE+1,8
PSMFYEAR EQU   PRTLINE+11,2
PSTOP4   EQU   PRTLINE+13,1
PSMFDAYS EQU   PRTLINE+14,3
PSMFTIME EQU   PRTLINE+17,13
PDISP    EQU   PRTLINE+34,1
PDSN     EQU   PRTLINE+45,44
PDDN     EQU   PRTLINE+91,8
PVOLUME  EQU   PRTLINE+101,6
*****************************LITERALS**********************************
LHEAD1   DC    CL18'LIST OF UPDATES TO'
LHEAD2   DC    CL31'LIST OF UPDATES BY DATASET NAME'
LHEAD3   DC    CL26'LIST OF UPDATES BY JOBNAME'
LHEAD4   DC    CL4'PAGE'
LHEAD5   DC    CL40'USER     DATE       TIME     DISPOSITION'
LHEAD6   DC    CL12'DATASET NAME'
LHEAD7   DC    CL6'DDNAME'
LHEAD8   DC    CL26'LIST OF UPDATES BY TAPE NO'
LHEAD9   DC    CL6'VOLSER'
LDELETE  DC    CL8'*DELETE*'
LNEW     DC    CL5'*NEW*'
LOLD     DC    CL3'OLD'
LMOD     DC    CL3'MOD'
************************** EDIT PATTERNS ******************************
EDPAT1   DC    XL4'40202120'
EDPAT2   DC    XL13'402021204B20204B20204B2020'
************************* DCB DSECT ***********************************
         DCBD  DSORG=(PS),DEVD=DA
********************* CATALOG TABLE DSECT *****************************
PACKS    DSECT
DSNME    DS    CL44                    DSN
DSNLEN   EQU   L'DSNME                 DSN LENGTH
JOBORTSU EQU   PACKS,8                 JOB OR TSU NAME
JOBLEN   EQU   L'JOBORTSU              JOB OR TSU NAME LENGTH
VOLUME   EQU   PACKS,6                 VOLUME
VOLLEN   EQU   L'VOLUME                VOLUME LENGTH
NEXTPTR  DS    XL4                     NEXT AREA ADDRESS
*                                      GETMAINED AREA
*********************** PARM TABLE DSECT ******************************
PARMVALS DSECT
PARMELEN DS    AL1                     PARM ENTRY TABLE LENGTH
PARMOR   DS    XL1                     OR VALUE
PARMLEN  DS    AL1                     PARM LENGTH
PARMVAL  DS    C                       PARM VALUE
*********************** SORT PARMS DSECT ******************************
SPARM    DSECT
SSMFDCB  DS    F                       SMF DCB @
SPRTDCB  DS    F                       PRINT DCB @
SOPTNSW  DS    X                       OPTION SWITCH
SAREAADR DS    AL4                     GETMAINED AREA ADDRESS
SNOVOLS  DS    AL4                     NO OF TABLE ENTRIES
*************************** JFCB DSECT ********************************
JFCB     DSECT
         IEFJFCBN
*************************** SMF DSECTS ********************************
SMFREC15 DSECT
         IFASMFR1 15
SMFREC17 DSECT
         IFASMFR1 17
         END   DASRECVR


Rem Perretta
Senior Systems Programmer (UK)       c Xephon 1996

