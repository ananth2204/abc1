Using RACF to authorize SDSF commands

SDSF 3.3 now provides a RACF interface to control the user's
command authorities. However this interface has two
disadvantages: firstly it is very complex to implement fully and
secondly it does not allow authorities to be granted specifically
for a given MVS system.

This article shows how to use the SDSF user exit ISFUSER to
gain the advantages of RACF control without the complexity
and limitations of the SDSF/RACF interface. To avoid the need
to update the ISFPARMS definition to grant access privileges,
a single entry can be made there which grants the basic
minimum commands that all users need to use. The ISFUSER
exit then tests RACF profiles to extend those privileges during
SDSF initialization and this can include a test on the system
name so that production systems can have greater restrictions.

The RACF profile names tested are constructed
'AUTH.option.system' where option represents the SDSF
command privilege and system the MVS node. These profiles
can be stored in the FACILITY class or other suitable RACF
class. The extra authorities are granted by turning on bits in the
SDSF user exit parameter area. No logging is performed by the
RACHECK because it would be normal for many users not to
have some or all of the additional privileges.


Exit - ISFUSER

*--- SDSF USER EXIT - ISFUSER - RENT, REUS, REFR, AC=0, A31, RANY
*    THIS EXIT EXTENDS THE ACCESS PERMISSIONS GRANTED IN THE SDSF
*--- ISFPARMS DEFINITIONS USING RACF RESOURCE CHECKING WITH RACHECK.
         COPY  ISFGEN
         COPY  ISFEQU
         TITLE 'ISFUSER - SDSF USER EXIT MODULE'
ISFUSER  CSECT
         ISFMODE AMODE=31,RMODE=ANY
         USING ISFUSER,R15         SET TEMPORARY BASE
         ISFMODID
         DROP  R15                 DONE WITH TEMPORARY BASE
         STM   R14,R12,12(R13)     SAVE ALL REGISTERS
         LR    R12,R15             BASE REGISTER
         USING ISFUSER,R12
         LR    R11,R1              USER EXIT PARM
         USING USERPARM,R11
         LR    R10,R0              CALL TYPE
         ISFTRC TYPE=EMCALL,ID=1   ENTRY TRACE POINT (HITS R0)
         B     CALLTYPE(R10)       GO TO PROPER CODE
CALLTYPE B     INITCK              INITIALIZATION
         B     RETURN              COMMAND CHECK
         B     RETURN              DISPLAY SYSOUT CHECK
         B     TERM                TERMINATION
         B     RETURN              PRE SAF
         B     FAIL                SAF INDETERMINATE (USE ISFGRP)
         B     RETURN              TABLE ENTRY BUILD
*--- INITIALIZATION USER CHECK SECTION, GET STORAGE AND THEN PERFORM
*--- SOME RACHECKS TO SET EXTRA PRIVILEGES IF AUTHORIZED BY RACF.
INITCK   EQU  *                    INITIALIZATION USER CHECK
         L     R0,WORKAMTF         WORKAMTF IS A FULLWORD CONSTANT
         GETMAIN R,LV=(0)          CALLED IN KEY 1, SP230
         ST    R1,UPRUWORD         SAVE ADDRESS
         L     R4,UPRUWORD         USER STORAGE
         USING USERDATA,R4         ADDRESS IT
         MVC   IRES,BLANKS         CLEAR
         MVC   IRES1,=CL5'SDSF.'   PREFIX OF RESOURCE NAME
* GET NAME OF THIS MVS SYSTEM BY LOOKING UP SMFID
         L     R6,CVTPTR           R6 -> CVT PTR
         USING CVTMAP,R6           ADDR IT
         L     R7,CVTSMCA          R7 -> SMCA
         USING SMCABASE,R7         ADDR IT
         DROP  R6
         LA    R6,NSYSIDS          R6 =  NUMBER OF KNOWN SYSTMS
         LA    R8,SYSTAB           R8 -> TABLE OF KNOWN SYSTEMS
SCANID   EQU   *
         CLC   SMCASID,0(R8)       IS THIS OUR SMF SYSID ?
         BE    FOUNDID             YES
         LA    R8,12(R8)           R8 -> NEXT TABLE ENTRY
         BCT   R6,SCANID           DECR R6 AND LOOP ROUND
FOUNDID  EQU   *
         MVI   IRES3,C'.'          START WITH .
     