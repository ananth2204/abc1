IMS DBRC command generator

RECONRX0 SOURCE CODE

/* REXX - RECONRX0 ***************************************************/
/* TITLE   : DBRC COMMAND GENERATOR                                  */
/*   READ OUTPUT OF THE FOLLOWING LIST COMMANDS:                     */
/*            LIST.RECON STATUS                                      */
/*            LIST.DB ALL DBDS                                       */
/*            LIST.DBDSGRP ALL                                       */
/*            LIST.CAGRP ALL                                         */
/*   GENERATE THE FOLLOWING INIT COMMANDS:                           */
/*            INIT.RECON                                             */
/*            INIT.DB                                                */
/*            INIT.DBDS                                              */
/*            CHANGE.DBDS                                            */
/*            INIT.ADS                                               */
/*            INIT.DBDSGRP                                           */
/*            INIT.CAGRP                                             */
/* *******************************************************************/
/* TRACE I */
/************************************* DEFINE FILES USED *****/
/* NEXT 7 LINES NEEDED FOR FOREGROUND REXX EXECUTION ONLY */
/*SYSUT1='MY.RECON.LISTING'      */
/*SYSUT2='MY.RECON.INITCMD'      */
/************************************* ALLOCATE FILES USED ***/
  SAY "ALLOCATING DATASETS..."
/*"FREE FI(SYSUT1,SYSUT2)"             */
/*"ALLOC FI(SYSUT1) DA('"SYSUT1"') SHR" */
/*"ALLOC FI(SYSUT2) DA('"SYSUT2"') SHR" */
/************************************* READ INPUT FILE  ******/
"DELSTACK"
DO FOREVER
  "EXECIO 1 DISKR SYSUT1"
  IF RC=2 THEN LEAVE
  PULL INRECORD
  PARSE VAR INRECORD 3 INRECORD.TYPE 11
  SELECT
    WHEN INRECORD.TYPE = 'RECON   ' THEN
      CALL PROCESS_RECON_RECORD
    WHEN INRECORD.TYPE = 'DB      ' THEN
      CALL PROCESS_DB_RECORD
    WHEN INRECORD.TYPE = 'DBDS    ' THEN
      CALL PROCESS_DBDS_RECORD
    WHEN INRECORD.TYPE = '   -ADS ' THEN
      CALL PROCESS_ADS_RECORD
    WHEN INRECORD.TYPE = 'DBDSGRP ' THEN
      CALL PROCESS_DBDSGRP_RECORD
    WHEN INRECORD.TYPE = 'CAGRP   ' THEN
      CALL PROCESS_CAGRP_RECORD
    OTHERWISE
      NOP
  END
END
/************************************* FINALIZATION        ***/
EOF_RTN:
  IF RC=2 THEN SAY 'END-OF-FILE'
  "EXECIO 0 DISKW SYSUT2(FINIS"
  "EXECIO 0 DISKR SYSUT1(FINIS"
/* NEXT 2 LINES ONLY NEEDED FOR REXX FOREGROUND EXECUTION */
/*"FREE  FI(SYSUT1,SYSUT2)"                               */
/*"ISPEXEC EDIT DATASET('"SYSUT2"')"                      */
  EXIT
/************************************* CALLED ROUTINES     ***/
/************************************* PROCESS RECON RECORDS */
PROCESS_RECON_RECORD:
  INRECORD = ' '
  LISTRECON.COMMAND = 'INIT.RECON'
  DO UNTIL INDEX(INRECORD,'CATALOGED') ^= 0
    "EXECIO 1 DISKR SYSUT1"
    IF RC=2 THEN LEAVE
    PULL INRECORD
    IF INDEX(INRECORD,'CATALOGED=')    > 0 THEN
    DO
      SEPARATOR = 'CATALOGED='
      PARSE VAR INRECORD . (SEPARATOR) WK.CATDS .
      IF WK.CATDS = 'YES' THEN
        LISTRECON.CATDS = 'CATDS'
      ELSE
        LISTRECON.CATDS = 'NOCATDS'
    END
    IF INDEX(INRECORD,'FORCER')        > 0 THEN
      LISTRECON.FORCER = 'FORCER'
    IF INDEX(INRECORD,'NOFORCER')      > 0 THEN
      LISTRECON.FORCER = 'NOFORCER'
    IF INDEX(INRECORD,'DASD UNIT=')    > 0 THEN
    DO
      SEPARATOR = 'DASD UNIT='
      PARSE VAR INRECORD . (SEPARATOR) WK.DASDUNIT .
      LISTRECON.DASDUNIT = 'DASDUNIT('||WK.DASDUNIT||')'
    END
    IF INDEX(INRECORD,'CHECK=')        > 0 THEN
    DO
      SEPARATOR = 'CHECK='
      PARSE VAR INRECORD . (SEPARATOR) LISTRECON.CHECK .
    END
    IF INDEX(INRECORD,'TAPE UNIT=')    > 0 THEN
    DO
      SEPARATOR = 'TAPE UNIT='
      PARSE VAR INRECORD . (SEPARATOR) WK.TAPEUNIT .
      LISTRECON.TAPEUNIT = 'TAPEUNIT('||WK.TAPEUNIT||')'
    END
    IF INDEX(INRECORD,'SSID=')         > 0 THEN
    DO
      SEPARATOR = 'SSID='
      PARSE VAR INRECORD . (SEPARATOR) WK.SSID .
      LISTRECON.SSID = 'SSID('||WK.SSID||')'
    END
    IF INDEX(INRECORD,'CONTROL=')      > 0 THEN
    DO
      SEPARATOR = 'CONTROL='
      PARSE VAR INRECORD . (SEPARATOR) WK.CONTROL .
      IF WK.CONTROL= 'SHARE' THEN
        LISTRECON.CONTROL='SHARECTL'
      ELSE
        LISTRECON.CONTROL='RECOVCTL'
    END
    IF INDEX(INRECORD,'STARTNEW=')     > 0 THEN
    DO
      SEPARATOR = 'STARTNEW='
      PARSE VAR INRECORD . (SEPARATOR) WK.STARTNEW .
      IF WK.STARTNEW= 'YES' THEN
        LISTRECON.STARTNEW='STARTNEW'
      ELSE
        LISTRECON.STARTNEW='NONEW'
    END
  END
  QUEUE LISTRECON.COMMAND,
        LISTRECON.CATDS,
        LISTRECON.DASDUNIT,
        LISTRECON.FORCER,
        LISTRECON.CHECK,
        '-'
  "EXECIO 1 DISKW SYSUT2"
  QUEUE '          ',
        LISTRECON.CONTROL,
        LISTRECON.SSID,
        LISTRECON.STARTNEW,
        LISTRECON.TAPEUNIT
  "EXECIO 1 DISKW SYSUT2"
  RETURN
/************************************* PROCESS DB RECORDS ****/
PROCESS_DB_RECORD:
  INRECORD = ' '
  LISTDB.COMMAND = 'INIT.DB   '
  LISTDB.DBD=''
  LISTDB.RECOV='        '           /* DEFAULTS             */
  LISTDB.SHARELVL='0'               /* DEFAULTS             */
  LISTDB.TYPE='IMS'                 /* DEFAULTS             */
  DO UNTIL (INDEX(INRECORD,'-----------') ^= 0)
    "EXECIO 1 DISKR SYSUT1"
    IF RC=2 THEN LEAVE
    PULL INRECORD
    IF INDEX(INRECORD,'DBD=')     > 0 THEN
    DO
      SEPARATOR = 'DBD='
      PARSE VAR INRECORD . (SEPARATOR) WK.DBD .
      LISTDB.DBD='DBD('||WK.DBD||')'
    END
    IF INDEX(INRECORD,'SHARE LEVEL=') > 0 THEN
    DO
      SEPARATOR = 'SHARE LEVEL='
      PARSE VAR INRECORD . (SEPARATOR) WK.SHARELVL .
      LISTDB.SHARELVL='SHARELVL('||WK.SHARELVL||')'
    END
    IF INDEX(INRECORD,'TYPE=') > 0 THEN
    DO
      SEPARATOR = 'TYPE='
      PARSE VAR INRECORD . (SEPARATOR) WK.TYPE .
      LISTDB.TYPE='TYPE'||WK.TYPE
    END
    IF INDEX(INRECORD,'RECOVERABLE           =NO') > 0 THEN
      LISTDB.RECOV ='NONRECOV'
  END
  QUEUE LISTDB.COMMAND,
        LISTDB.DBD,
        LISTDB.SHARELVL,
        LISTDB.TYPE,
        LISTDB.RECOV
  "EXECIO 1 DISKW SYSUT2"
  RETURN
/************************************* PROCESS DBDS RECORDS **/
PROCESS_DBDS_RECORD:
  INRECORD = ' '
  LISTDBDS.COMMAND = 'INIT.DBDS '
  LISTDBDS.DEFLTJCL=''              /* DEFAULT              */
  LISTDBDS.ICJCL=''                 /* DEFAULT              */
  LISTDBDS.OICJCL=''                /* DEFAULT              */
  LISTDBDS.RECOVJCL=''              /* DEFAULT              */
  LISTDBDS.RECOVPD='0'              /* DEFAULT              */
  LISTDBDS.REUSE=''                 /* DEFAULT              */
  LISTDBDS.DBD=''                   /* INITIALIZE           */
  LISTDBDS.DSN=''                   /* INITIALIZE           */
  LISTDBDS.DDN=''                   /* INITIALIZE           */
  LISTDBDS.AREA=''                  /* INITIALIZE           */
  LISTDBDS.GENMAX=''                /* INITIALIZE           */
  DO UNTIL INDEX(INRECORD,'---------') ^= 0
    "EXECIO 1 DISKR SYSUT1"
    IF RC=2 THEN LEAVE
    PULL INRECORD
    IF (INDEX(INRECORD,'ADS LIST: ') ^= 0) THEN LEAVE
    IF INDEX(INRECORD,'DBD=')     > 0 THEN
    DO
      SEPARATOR = 'DBD='
      PARSE VAR INRECORD . (SEPARATOR) WK.DBD .
      LISTDBDS.DBD='DBD('||WK.DBD||')'
    END
    IF INDEX(INRECORD,'DSN=')     > 0 THEN
    DO
      SEPARATOR = 'DSN='
      PARSE VAR INRECORD . (SEPARATOR) WK.DSN .
      LISTDBDS.DSN='DSN('||WK.DSN||')'
    END
    IF INDEX(INRECORD,'DDN=')     > 0 THEN
    DO
      SEPARATOR = 'DDN='
      PARSE VAR INRECORD . (SEPARATOR) WK.DDN .
      LISTDBDS.DDN='DDN('||WK.DDN||')'
    END
    IF INDEX(INRECORD,'AREA=')     > 0 THEN
    DO
      SEPARATOR = 'AREA='
      PARSE VAR INRECORD . (SEPARATOR) WK.AREA .
      LISTDBDS.AREA='AREA('||WK.AREA||')'
    END
    IF INDEX(INRECORD,'GENMAX=')   > 0 THEN
    DO
      SEPARATOR = 'GENMAX='
      PARSE VAR INRECORD . (SEPARATOR) WK.GENMAX .
      LISTDBDS.GENMAX='GENMAX('||WK.GENMAX||')'
    END
    IF INDEX(INRECORD,'DEFLTJCL=') > 0 THEN
    DO
      SEPARATOR = 'DEFLTJCL='
      PARSE VAR INRECORD . (SEPARATOR) WK.DEFLTJCL .
      IF WK.DEFLTJCL = '**NULL**' THEN
        LISTDBDS.DEFLTJCL=''
      ELSE
        LISTDBDS.DEFLTJCL='DEFLTJCL('||WK.DEFLTJCL||')'
    END
    IF INDEX(INRECORD,'ICJCL=')    > 0 THEN
    DO
      SEPARATOR = 'ICJCL='
      PARSE VAR INRECORD . (SEPARATOR) WK.ICJCL .
      LISTDBDS.ICJCL='ICJCL('||WK.ICJCL||')'
    END
    IF INDEX(INRECORD,'OICJCL=') > 0 THEN
    DO
      SEPARATOR = 'OICJCL='
      PARSE VAR INRECORD . (SEPARATOR) WK.OICJCL .
      LISTDBDS.OICJCL='OICJCL('||WK.OICJCL||')'
    END
    IF INDEX(INRECORD,'RECOVJCL=') > 0 THEN
    DO
      SEPARATOR = 'RECOVJCL='
      PARSE VAR INRECORD . (SEPARATOR) WK.RECOVJCL .
      LISTDBDS.RECOVJCL='RECOVJCL('||WK.RECOVJCL||')'
    END
    IF INDEX(INRECORD,'RECOVPD=')  > 0 THEN
    DO
      SEPARATOR = 'RECOVPD='
      PARSE VAR INRECORD . (SEPARATOR) WK.RECOVPD .
      LISTDBDS.RECOVPD='RECOVPD('||WK.RECOVPD||')'
    END
    IF INDEX(INRECORD,'REGISTERED ADS #') > 0 THEN
    DO
      SEPARATOR = 'REGISTERED ADS #        ='
      PARSE VAR INRECORD . (SEPARATOR) WK.ADSCOUNT .
    END
    IF INDEX(INRECORD,'REUSE') > 0 THEN
      LISTDBDS.REUSE ='REUSE'
    IF INDEX(INRECORD,'NOREUSE') > 0 THEN
      LISTDBDS.REUSE ='NOREUSE'
  END
  QUEUE LISTDBDS.COMMAND,
        LISTDBDS.DBD,
        LISTDBDS.DDN,
        LISTDBDS.AREA,
        LISTDBDS.DSN,
        '-'
  "EXECIO 1 DISKW SYSUT2"
  QUEUE '          ',
        LISTDBDS.ICJCL,
        LISTDBDS.OICJCL,
        LISTDBDS.RECOVJCL,
        LISTDBDS.DEFLTJCL,
        '-'
  "EXECIO 1 DISKW SYSUT2"
  QUEUE '          ',
        LISTDBDS.GENMAX,
        LISTDBDS.RECOVPD,
        LISTDBDS.REUSE
  "EXECIO 1 DISKW SYSUT2"
  RETURN
/************************************* PROCESS ADS RECORDS **/
PROCESS_ADS_RECORD:
  INRECORD = ' '
  LISTADS.COMMAND = 'INIT.ADS  '
  LISTADS.DBD=LISTDBDS.DBD          /* INITIALIZE           */
  LISTADS.AREA=LISTDBDS.AREA        /* INITIALIZE           */
  LISTADS.ADDN=''                   /* INITIALIZE           */
  LISTADS.ADSN=''                   /* INITIALIZE           */
  LISTADS.STATUS=LISTDBDS.STATUS    /* INITIALIZE           */
  QUEUE 'CHANGE.DBDS',
        LISTADS.DBD,
        LISTADS.AREA,
        'NORECOV'
  "EXECIO 1 DISKW SYSUT2"
  DO WK.ADSCOUNT
    QUEUE LISTADS.COMMAND,
          LISTADS.DBD,
          LISTADS.AREA,
          '-'
    "EXECIO 1 DISKW SYSUT2"
    "EXECIO 1 DISKR SYSUT1"
    PULL INRECORD
    PARSE VAR INRECORD WK.ADDN,
                       WK.ADSN,
                       WK.STATUS,
                     .
    LISTADS.ADDN='ADDN('||WK.ADDN||')'
    LISTADS.ADSN='ADSN('||WK.ADSN||')'
    QUEUE '          ',
        LISTADS.ADDN,
        LISTADS.ADSN
    "EXECIO 1 DISKW SYSUT2"
  END
  RETURN
/************************************* PROCESS DBDSGRP RECORDS */
PROCESS_DBDSGRP_RECORD:
  INRECORD = ' '
  LISTDBDSGRP.COMMAND = 'INIT.DBDSGRP'
  LISTDBDSGRP.GRPNAME = ''
  "EXECIO 1 DISKR SYSUT1"
  IF RC=2 THEN LEAVE
  PULL INRECORD
  IF INDEX(INRECORD,'GRPNAME=') > 0 THEN
  DO
    SEPARATOR = 'GRPNAME='
    PARSE VAR INRECORD . (SEPARATOR) WK.GRPNAME .
    LISTDBDSGRP.GRPNAME='GRPNAME('||WK.GRPNAME||')'
  END
  IF INDEX(INRECORD,'MEMBERS=') > 0 THEN
  DO
    SEPARATOR = 'MEMBERS='
    PARSE VAR INRECORD . (SEPARATOR) WK.MEMBERS .
  END
  QUEUE LISTDBDSGRP.COMMAND,
        LISTDBDSGRP.GRPNAME,
        '-'
  "EXECIO 1 DISKW SYSUT2"
  QUEUE '           GRPMEM(            -'
  "EXECIO 1 DISKW SYSUT2"
  DO WK.MEMBERS
    "EXECIO 1 DISKR SYSUT1"
    IF RC=2 THEN LEAVE
    PULL INRECORD
    PARSE VAR INRECORD WK.DBD,
                       WK.DDN,
                       .
    /* PAGE BREAKS CAN CAUSE PROBLEM. */
    /* THIS CODE WILL HANDLE IT.      */
    IF INDEX(INRECORD,'LISTING OF RECON') > 0 THEN
    DO
      "EXECIO 1 DISKR SYSUT1"
      IF RC=2 THEN LEAVE
      PULL INRECORD
      PARSE VAR INRECORD WK.DUMMY,
                         WK.DBD,
                         WK.DDN,
                         .
    END
    LISTDBDSGRP.MEMBER = '             ('||WK.DBD||','||WK.DDN') -'
    QUEUE LISTDBDSGRP.MEMBER
    "EXECIO 1 DISKW SYSUT2"
  END
  QUEUE ')'
  "EXECIO 1 DISKW SYSUT2"
RETURN
/************************************* PROCESS CAGRP RECORDS */
PROCESS_CAGRP_RECORD:
  INRECORD = ' '
  LISTCAGRP.COMMAND = 'INIT.CAGRP'
  LISTCAGRP.GRPNAME = ''
  LISTCAGRP.GRPMAX  = ''
  LISTCAGRP.CAJCL   = 'CAJCL'       /* DEFAULTS             */
  LISTCAGRP.DEFLTJCL= 'DEFLTJCL'    /* DEFAULTS             */
  LISTCAGRP.REUSE   = 'NOREUSE'     /* DEFAULTS             */
  DO 3
    "EXECIO 1 DISKR SYSUT1"
    IF RC=2 THEN LEAVE
    PULL INRECORD
    IF INDEX(INRECORD,'GRPNAME=') > 0 THEN
    DO
      SEPARATOR = 'GRPNAME='
      PARSE VAR INRECORD . (SEPARATOR) WK.GRPNAME .
      LISTCAGRP.GRPNAME='GRPNAME('||WK.GRPNAME||')'
    END
    IF INDEX(INRECORD,'GRPMAX=') > 0 THEN
    DO
      SEPARATOR = 'GRPMAX='
      PARSE VAR INRECORD . (SEPARATOR) WK.GRPMAX .
      LISTCAGRP.GRPMAX='GRPMAX('||WK.GRPMAX||')'
    END
    IF INDEX(INRECORD,'CAJCL=') > 0 THEN
    DO
      SEPARATOR = 'CAJCL='
      PARSE VAR INRECORD . (SEPARATOR) WK.CAJCL .
      LISTCAGRP.CAJCL='CAJCL('||WK.CAJCL||')'
    END
    IF INDEX(INRECORD,'MEMBERS=') > 0 THEN
    DO
      SEPARATOR = 'MEMBERS='
      PARSE VAR INRECORD . (SEPARATOR) WK.MEMBERS .
    END
    IF INDEX(INRECORD,'DFLTJCL=') > 0 THEN
    DO
      SEPARATOR = 'DFLTJCL='
      PARSE VAR INRECORD . (SEPARATOR) WK.DFLTJCL .
      IF WK.DFLTJCL = '**NULL**' THEN
        LISTCAGRP.DFLTJCL=''
      ELSE
        LISTCAGRP.DFLTJCL='DFLTJCL('||WK.DFLTJCL||')'
    END
    IF INDEX(INRECORD,'REUSE') > 0 THEN
      LISTCAGRP.REUSE ='REUSE'
    IF INDEX(INRECORD,'NOREUSE') > 0 THEN
      LISTCAGRP.REUSE ='NOREUSE'
  END
  QUEUE LISTCAGRP.COMMAND,
        LISTCAGRP.GRPNAME,
        LISTCAGRP.GRPMAX,
        LISTCAGRP.CAJCL,
        LISTCAGRP.REUSE,
        '-'
  "EXECIO 1 DISKW SYSUT2"
  QUEUE '           GRPMEM(            -'
  "EXECIO 1 DISKW SYSUT2"
  DO WK.MEMBERS
    "EXECIO 1 DISKR SYSUT1"
    IF RC=2 THEN LEAVE
    PULL INRECORD
    PARSE VAR INRECORD WK.DBD,
                       WK.DDN,
                       .
    /* PAGE BREAKS CAN CAUSE PROBLEM. */
    /* THIS CODE WILL HANDLE IT.      */
    IF INDEX(INRECORD,'LISTING OF RECON') > 0 THEN
    DO
      "EXECIO 1 DISKR SYSUT1"
      IF RC=2 THEN LEAVE
      PULL INRECORD
      PARSE VAR INRECORD WK.DUMMY,
                         WK.DBD,
                         WK.DDN,
                         .
    END
    LISTCAGRP.MEMBER = '             ('||WK.DBD||','||WK.DDN') -'
    QUEUE LISTCAGRP.MEMBER
    "EXECIO 1 DISKW SYSUT2"
  END
  QUEUE ')'
  "EXECIO 1 DISKW SYSUT2"
  RETURN

JCL TO RUN PROCESS

//MYUSRIDJ  JOB (XXXXXXXXXXX,XXX),'RECON UTILS     ',
//   CLASS=A,MSGCLASS=T,NOTIFY=MYUSRID,REGION=4M
//*********************************************************************
//*        DELETE OUTPUT FILES FROM PREVIOUS RUN                      *
//*********************************************************************
//JS000    EXEC PGM=IEFBR14,REGION=4096K
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DSN=MYUSRID.RECON.LISTING,DISP=(MOD,DELETE,DELETE)
//SYSUT2   DD DSN=MYUSRID.RECON.INITCMD,DISP=(MOD,DELETE,DELETE)
//*********************************************************************
//*        LIST RECON DATASET                                         *
//*********************************************************************
//JS010    EXEC PGM=DSPURX00,REGION=4096K
//STEPLIB  DD DSN=IMST.USER.RESLIB,DISP=SHR
//         DD DSN=IMST.RESLIB,DISP=SHR
//         DD DSN=IMST.DYNAMLIB,DISP=SHR
//JCLPDS   DD DSN=IMST.JCLLIB,DISP=SHR
//IMS      DD DSN=IMST.DBDLIB,DISP=SHR
//SYSPRINT DD DSN=MYUSRID.RECON.LISTING,
//            DISP=(NEW,CATLG,DELETE),
//            UNIT=SYSDA,SPACE=(133,(150,30),RLSE),
//            AVGREC=K,DSORG=PS,
//            RECFM=FBA,LRECL=133
//SYSIN    DD *
 LIST.RECON STATUS
 LIST.DB ALL DBDS
 LIST.DBDSGRP ALL
 LIST.CAGRP ALL
/*
//*********************************************************************
//*        READ RECON DATASET LISTING2 AND                            *
//*        GENERATE INIT RECON COMMANDS                               *
//*********************************************************************
//JS020  EXEC PGM=IKJEFT01,COND=(4,LT),DYNAMNBR=20,
//            PARM=RECONRX0
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD DUMMY
//SYSUDUMP DD SYSOUT=*
//SYSUT1   DD DSN=MYUSRID.RECON.LISTING,
//            DISP=SHR
//SYSUT2   DD DSN=MYUSRID.RECON.INITCMD,
//            DISP=(NEW,CATLG,DELETE),
//            UNIT=SYSDA,SPACE=(80,(5,1),RLSE),AVGREC=K,
//            LRECL=80,RECFM=FB
//SYSEXEC  DD DISP=SHR,DSN=MYUSRID.REXX.EXECS
//


Larry Prestosa (USA)                                                             c Xephon 1996

