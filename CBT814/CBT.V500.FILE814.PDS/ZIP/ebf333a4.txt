Incorporating SYSIN data within a procedure
The method described in MVS Update issue 16 (January 1988) did not appeal for
three reasons:
1    It seemed unnecessarily complex.
2    Our accounting routines use the program name for performance analysis so it
is desirable to use a separate step to generate the SYSIN.
3    The authorised library restrictions seemed as if they could be inhibiting.
For the past 14 years, CCN Systems has been using an Assembler module to create
a temporary SYSIN dataset via PARM information, hence the antiquated coding -
it was written in pre-Dynamic Allocation days.  It was actually created to
assist with DOS-MFT conversion.  MFT was later superseded by VS1, with MVS
coming along in 1982 and XA in 1987 - the PM17 source has been unchanged, merely
re-compiled.
Typical procedure JCL would be:
//COPYMEMB PROC  MEMBER=error
//PM17     EXEC  PGM=PM17,
// PARM=' C I=INPUT,O=OUTPUT/ S M=&MEMBER'
//SYSUT2   DD    DSN=&&TEMP,UNIT=SYSDA,SPACE=(TRK,1)
//*
//COPY     EXEC  PGM=IEBCOPY
//SYSIN    DD    DSN=&&TEMP,DISP=(SHR,DELETE)
//iebcopy  JCL
This would be invoked by:
//COPY     EXEC  COPYMEMB,MEMBER=FRED
Symbolic parameters are used to modify the PARM data.  Where variable data is
not required it has been found preferable to use
//SYSIN    DD     DSN=CCN.PARMLIB(MEMBER),DISP=SHR
This produces the smallest system overhead, although using PM17 would make the
procedure self-documenting.
The Ô/Õ is used to delimit cards - this could be replaced by any other character
if required.
The PM17 program uses a DCB exit to insert RECFM=FB, LRECL=80,BLKSIZE=400 if
they are not overridden in the JCL.
PM17     TITLE 'GROUNOD - GENERATE OUTPUT FOR UTILITY INPUT ON DISK'
PM17     CSECT
         BALR  R15,R00
         USING *,R15               SAVE REGISTERS
         STM   R14,R12,12(R13)
         ST    R13,*+30            CHAIN TO SAVE AREA
         LR    R14,R13
         LA    R13,*+20            POINT AT  SAVE AREA
         ST    R13,8(R14)
         B     *+84
         DC    CL8'PM17'
         DC    18F'0'
         DROP  R15
         BALR  R12,R00             SET UP BASE REGISTER
         USING *,R12
         L     R02,0(R01)
         LH    R03,0(R02)
         LTR   R03,R03             ANY PARM INFORMATION?
         BNZ   GOTSOME
         ABEND 100                 No - abort job
GOTSOME  EQU   *
         XR    R04,R04
         XR    R05,R05
         LA    R02,2(R02)
         LR    R07,R02
         OPEN  (DOWN,(OUTPUT))
LOOP1    EQU   *
         CR    R05,R03             Last Character?
         LA    R06,END
         BE    ENDFLD
         CLI   0(R02),C'/'         Change card delimiter if necessary
         BNE   NEXTCHAR
         BAL   R06,ENDFLD
NEXTCHAR EQU   *
         LA    R02,1(R02)
         LA    R04,1(R04)
         LA    R05,1(R05)
         B     LOOP1
ENDFLD   EQU   *
         BCTR  R04,R00
         EX    R04,MVC
         PUT   DOWN,AREA
         MVI   AREA,C' '           Clear out AREA
         MVC   AREA+1(200),AREA
         MVC   AREA+201(199),AREA+200
         LA    R07,1(R02)
         L     R04,=F'-1'
         BR    R06
END      EQU   *
         CLOSE DOWN
         LA    R15,0               Set RC=0 - what else??
         L     R13,4(R13)
         L     R14,12(R13)
         LM    R00,R12,20(R13)     RESTORE REGISTERS
         BR    14                  RETURN
MVC      EQU   *
         MVC   AREA(0),0(R07)
EXITRTN  EQU   *
         CLC   DOWN+62(2),=H'0'       Insert BLKSIZE=400
         BNE   EXIT01                 if necessary
         MVC   DOWN+62(2),=H'400'
EXIT01   EQU   *
         CLC   DOWN+82(2),=H'0'       Insert LRECL=80
         BNE   EXIT02                 if necessary
         MVC   DOWN+82(2),=H'80'
EXIT02   EQU   *
         CLI   DOWN+36,X'00'          Insert RECFM=FB
         BNE   EXIT03                 if necessary
         MVI   DOWN+36,X'90'
EXIT03   EQU   *
         BR    R14
DOWN     DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,EXLST=EXLST
AREA     DC    5CL80' '
EXLST    DS    0F
         DC    X'85'
         DC    AL3(EXITRTN)
         LTORG
         END


A Allen
Systems Programming Manager
CCN Systems (UK)    © Xephon 1988
















