MVS/ESA configuration management redesign
    PROC 1 &P1
    /* Name: CLSY1RS1                                              */
    /* Function: Called with a dataset name, it will define this   */
    /*           dataset in the SY1RS1 catalog, together with the  */
    /*           SSA.                                              */
    CONTROL LIST CONLIST
     DEFINE NONVSAM(NAME(&P1) DEVT(339o) VOLUMES(SY1RS1)) -
               catalog(CATALOG.SY1RS1)
     DEFINE ALIAS(NAME(SY1RS1.&P1) RELATE(&P1)) -
            CATALOG(CATALOG.SY1RS1)
    END


    //S2       EXEC PGM=IKJEFTo1
    //SYSTSPRT DD SYSOUT=*
    //SYSTSIN  DD *
     PROFILE NOPREFIX
     EXEC 'SYS2.CBPDO.INSTLIB(CLSY1RS1)' 'IMS41o.DFSCLST'
     EXEC 'SYS2.CBPDO.INSTLIB(CLSY1RS1)' 'IMS41o.DFSEXEC'
     etc


Usage

//TZooX    JOB ('JED:SP NV'),'JAN DE DECKER',NOTIFY=TZoo,
//         CLASS=Z,MSGCLASS=X,COND=(o,NE)
/*JOBPARM  ROOM=SYS,COPIES=1
//*
//* THE GLOBAL AND TARGET CSI ARE COPIED TO THEIR BACKUP VERSION
//* THE SMPGLOG(A) ARE BACKED UP TO A GDG
//* SY1RS2 IS COPIED TO SY1RS1
//* THE SY1RS1 CATALOG IS CONNECTED
//* THE SY1RS1 ALIAS IS DEFINED
//* THE SECONDARY (TARGET) VOLUME MUST BE OFFLINE
//*
//* NOTES: CHECK UNITADDRESS (STEP S1o) BEFORE SUBMITTING.
//*        UNIT MUST BE OFFLINE
//*
//*        STEP S1o REQUIRES AN OPERATOR REPLY
//*        AFTER COMPLETION WITH RC=o
//*        --> V UAA,ONLINE
//*            M UAA,VOL=(SL,SY1RS1),USE=PRIVATE
//*
//* 2. BACKUP THE MVS SMPGLOG FILE
//*
//* o. DELETE/DEFINE/REPRO BACKUP COPIES OF THE GLOBAL CSIS
//*
//Soo      EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DELETE   BACKUP.MVSSMPE.GLOBAL.CSI CLUSTER PURGE

  DEFINE  CLUSTER(                                +
              NAME(BACKUP.MVSSMPE.GLOBAL.CSI) +
              MODEL(MVSSMPE.GLOBAL.CSI)        +
              VOL(SYSoo1) +
              ) +
          DATA(   +
              NAME(BACKUP.MVSSMPE.GLOBAL.CSI.DATA) +
              MODEL(MVSSMPE.GLOBAL.CSI.DATA)        +
              VOL(SYSoo1) +
              )   +
         INDEX(   +
              NAME(BACKUP.MVSSMPE.GLOBAL.CSI.INDEX) +
              MODEL(MVSSMPE.GLOBAL.CSI.INDEX)        +
              VOL(SYSoo1) +
              )

 REPRO IDS(MVSSMPE.GLOBAL.CSI) ODS(BACKUP.MVSSMPE.GLOBAL.CSI)
/*
//*
//* 1. DELETE/DEFINE/REPRO BACKUP COPIES OF THE TARGET CSI'S
//*
//So1      EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
  DELETE   BACKUP.MVSTZN.CSI CLUSTER PURGE

  DEFINE  CLUSTER(                                +
              NAME(BACKUP.MVSTZN.CSI) +
              MODEL(MVSTZN.CSI)                +
              VOL(SYSoo1) +
              ) +
          DATA(   +
              NAME(BACKUP.MVSTZN.CSI.DATA) +
              MODEL(MVSTZN.CSI.DATA)                +
              VOL(SYSoo1) +
              )   +
         INDEX(   +
              NAME(BACKUP.MVSTZN.CSI.INDEX) +
              MODEL(MVSTZN.CSI.INDEX)                +
              VOL(SYSoo1) +
              )

 REPRO IDS(MVSTZN.CSI) ODS(BACKUP.MVSTZN.CSI)
/*
//So2      EXEC PGM=ICEGENER
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DSN=MVSSMPE.SMPGLOG,DISP=SHR
//SYSUT2   DD DSN=BACKUP.MVSSMPE.SMPGLOG(+1),
//            DISP=(NEW,CATLG),UNIT=SYSDA,VOL=SER=SYSoo1,
//            DCB=(MVSSMPE.SMPGLOG),SPACE=(CYL,(15,1))
//SYSIN    DD DUMMY
//*
//* 3. BACKUP THE MVS SMPGLOGA FILE
//*
//So3      EXEC PGM=ICEGENER
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DSN=MVSSMPE.SMPGLOGA,DISP=SHR
//SYSUT2   DD DSN=BACKUP.MVSSMPE.SMPGLOGA(+1),
//            DISP=(NEW,CATLG),UNIT=SYSDA,VOL=SER=SYSoo1,
//            DCB=(MVSSMPE.SMPGLOGA),SPACE=(CYL,(1,1))
//SYSIN    DD  DUMMY
//*
//* 4. DUAL COPY SY1RS2 TO SY1RS1
//*    SY1RS1 HAS TO BE OFFLINE
//*
//So4      EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//PRIMARY  DD  UNIT=339o,VOL=SER=SY1RS2,DISP=SHR
//SYSIN    DD  *
 SETCACHE                                                           -
  FILE(PRIMARY)             /* THE INTENDED PRIMARY              */ -
  SETSECONDARY(1oo)         /* UNIT ADDRESS OF THE OFFLINE SEC.  */ -
  COPY                      /* SY1RS2 IS COPIED TO 1AC           */ -
  PACE(15)                  /* COPY 1 CYLINDERS BEFORE COFFEE   */
 IF MAXCC=4 THEN SET MAXCC=o
/*
//*
//* 5. DUAL COPY PAIR IS TERMINATED
//*
//So5      EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//PRIMARY  DD  UNIT=339o,VOL=SER=SY1RS2,DISP=SHR
//SYSIN    DD  *
 SETCACHE                                                           -
  FILE(PRIMARY)             /* THE PRIMARY                       */ -
  RESETTOSIMPLEX            /* TERMINATE THE DUAL COPY PAIR BY   */
                            /* SETTING THE DEVICES BACK TO       */
                            /* SIMPLEX                           */
/*
//*
//* 6. THE VOLUME IS RENAMED TO SY1RS1
//*    NOTE: OPERATOR REPLY REQUIRED
//*
//So6       EXEC PGM=ICKDSF
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 REFORMAT UNIT(1oo)             -
      VOLID(SY1RS1)             -
      VERIFY(SY1RS2)
/*
//*
//* 7. IMPORT THE SY1RS1 CATALOG
//*     REDEFINE THE SSA
//So7      EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  IMPORT CONNECT OBJECTS(                                      -
                         (                                     -
                          CATALOG.SY1RS1                       -
                          DEVICETYPE(339o)                     -
                          VOLUMES(SY1CAT)                      -
                         )                                     -
                        )                                      -
         ALIAS                                                 -
         CATALOG(CATALOG.MVSICFM.VSY1CAT)

 DEFINE ALIAS(NAME(SY1RS1) RELATE(CATALOG.SY1RS1))
/*

Jan de Decker
Senior Systems Programmer
JED:SP NV (Belgium)                            c Xephon 1996

