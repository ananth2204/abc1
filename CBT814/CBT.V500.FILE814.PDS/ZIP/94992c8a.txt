3990/3 storage control cache reporter
EXECUTION JCL

//jobname  JOB (acc,in),'programmer',CLASS=A,MSGCLASS=T
//CACHSTAT EXEC PGM=CACHSTAT,PARM=' DAILY'
//STEPLIB   DD DSN=your.apf.authorized.library,DISP=SHR
//PRINTOUT  DD SYSOUT=T
//REPORT¯1  DD SYSOUT=K
//*    FOR THE FIRST TIME RUNNING OF CACHSTAT:
//*    HISTORY AND CURRENT DATA SETS MUST BE PREALLOCATED AS
//*    THE EMPTY DATASETS WITH THE FOLLOWING DCB CHARACTERISTICS:
//*    DSORG=PS,LRECL=18¯,RECFM=FB
//HISTORY  DD DISP=SHR,DSN=your.history.dataset
//CURRENT  DD DISP=SHR,DSN=your.current.dataset


Program Source FOR CACHSTAT

CACHSTAT CSECT
         USING *,R1¯,R11           ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R1¯,R15             SET FIRST BASE REGISTER
         LA    R11,2¯48(R1¯)       SET SECOND BASE REGISTER
         LA    R11,2¯48(R11)       AND INCREMENT TO PROPER VALUE
         LR    R12,R13             STORE PREVIOUS SA ADDRESS
         LR    R8,R1               (R8) = ADDRESS OF A FULLWORD
         LA    R13,SAVE3           LOAD ADDRESS OF THIS SAVE3 AREA
         ST    R12,SAVE3+4         CHAIN BACKWARDS
         ST    R13,8(R12)          CHAIN FORWARD
         OPEN  (PRINTDCB,(OUTPUT),OUTDCB,(OUTPUT))
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(2¯),=C'START - CACHSTAT    '
         PUT   PRINTDCB,PRINT
         L     R8,¯(R8)            (R8) = FULLWORD
         LH    R12,¯(R8)           (R12) = LENGTH OF THE PARM FIELD
         LA    R1,¯
         CR    R1,R12              TEST IF LENGTH = ¯
         BNE   TESLE4¯            LENGTH NE ¯
         MVC   USERTEXT(9),=C'  TEST   '
         B     DISPTEXT
TESLE4¯  EQU   *
         LA    R1,9               UP TO NINE CHARACTERS ALLOWED
         CR    R12,R1             TEST IF LENGTH OF THE PARM FIELD GT 9
         BNH   FIADPAFI           LENGTH LE 9 - OK
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(36),=C'SORRY, MAXIMUM 9 CHARACTERS ALLOWED.'
         MVC   PRINT+38(36),=C'DEFAULT TEST WILL BE TAKEN          '
         PUT   PRINTDCB,PRINT
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(36),=C'STANDARD ACTION TAKEN: TEST WILL BE '
         MVC   PRINT+37(1¯),=C'DISPLAYED.'
         PUT   PRINTDCB,PRINT
         MVC   USERTEXT(9),=C'  TEST   '
         B     DISPTEXT
FIADPAFI EQU   *
         LA    R4,2(R8)            (R4) = ADDRESS OF THE PARM FIELD
         LA    R2,USERTEXT         (R2)  = ADDRESS OF THE USERTEXT
         LR    R5,R12              (R5)  = LENGTH OF THE PARM FIELD
LOOPLINE EQU   *
         MVC   ¯(1,R2),¯(R4)       MOVE ONE CHARACTER
         XR    R1,R1
         LA    R1,1
         AR    R2,R1
         AR    R4,R1
         BCT   R5,LOOPLINE
DISPTEXT EQU   *
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(9),=C'USERTEXT='
         MVC   PRINT+1¯(9),USERTEXT
         PUT   PRINTDCB,PRINT
         LA    R3,16
         L     R3,¯(R3)            (R3) = ADDRESS OF THE CVT
         L     R3,¯(R3)            (R3) = POINTER TO ADDR OF TCB
         L     R3,¯(R3)            (R3) = ADDRESS OF THE TCB
         L     R3,12(R3)           (R3) = ADDRESS OF TIOT
         XR    R1,R1
         ST    R1,NUSUCCRE         ESTABLISH COUNTER
         TIME  BIN
         ST    R1,MACRDATE
         ST    R1,NUMBER
         CALL  SUYYDDDF,(NUMBER,STAMP),VL
         MVC   STATDATE(12),DAYNO
         TIME  BIN                 FETCH TIME
         ST    R¯,MACRTIME
         ST    R¯,NUMBER
         CALL  SUTIME,(NUMBER,TIMESTAM),VL
         MVC   STATTIME(8),TIMESTAM
         DS    ¯H
         L     R3,CVTPTR           SET UP FOR UCB SCAN SERVICE
         USING CVTMAP,R3           SET UP ADDRESSABILITY TO CVT
         XC    WORKAREA,WORKAREA   CLEAR WORK AREA
         LA    R1,WORKAREA
         ST    R1,PARMWA
         LA    R1,DEVCLASS
         ST    R1,PARMDEVT
         MVI   DEVCLASS,UCB3DACC
         LA    R1,ADDRUCB
         ST    R1,PARMUCB
         OI    PARMUCB,X'8¯'
SEARCH   EQU   *
         LA    R1,PARMLIST
         USING UCBOB,R2
         DS    ¯H
         L     R15,CVTUCBSC
         BALR  R14,R15
         LTR   R15,R15
         BNZ   ENDIT
         L     R2,ADDRUCB
         CLC   UCBVOLI,=XL6'¯¯¯¯¯¯¯¯¯¯¯¯'
         BE    SEARCH
         MVC   CACHRECO,BLANK
         MVC   CACHVOLU(6),UCBVOLI
         MVC   CACHADDR(3),UCBNAME
         MVC   CAMADATE(4),MACRDATE
         MVC   CAMATIME(4),MACRTIME
         MVC   CACHDATE(12),STATDATE
         MVC   CACHTIME(8),STATTIME
         CLI   UCBTBYT3,UCB3DACC   DIRECT ACCESS SECTION ?
         BNE   TYPEFOUN
         CLI   UCBUNTYP,X'¯9'      333¯ ?
         BNE   UCB¯3Z
         MVC   CACHVOLT(4),=C'333¯'
         B     TYPEFOUN
UCB¯3Z   EQU   *
         CLI   UCBUNTYP,X'¯D'      333¯ ?
         BNE   UCB¯3Y
         MVC   CACHVOLT(4),=C'333¯'
         B     TYPEFOUN
UCB¯3Y   EQU   *
         CLI   UCBUNTYP,X'¯B'      335¯ ?
         BNE   UCB¯3A
         MVC   CACHVOLT(4),=C'335¯'
         B     TYPEFOUN
UCB¯3A   CLI   UCBUNTYP,X'¯E'      338¯ ?
         BNE   UCB¯339¯
         L     R5,UCBEXTPT         POINTER TO UCB COMMON EXTENSION
         USING UCBCMEXT,R5
         L     R6,UCBCLEXT         POINTER TO DEVICE CLASS EXTENSION
         USING DCE,R6
         CLI   DCEOBRDT,X'¯E'
         BNE   UCB¯3A1
         MVC   CACHVOLT(4),=C'338¯'    STANDARD 338¯ ?
         B     TYPEFOUN
UCB¯3A1  CLI   DCEOBRDT,X'1E'
         BNE   UCB¯3A2
         MVC   CACHVOLT(6),=C'338¯ D'  338¯ D ?
         B     TYPEFOUN
UCB¯3A2  CLI   DCEOBRDT,X'2E'
         BNE   UCB¯3A3
         MVC   CACHVOLT(6),=C'338¯ E'  338¯ E ?
         B     TYPEFOUN
UCB¯3A3  CLI   DCEOBRDT,X'21'
         BNE   UCB¯3A4
         MVC   CACHVOLT(6),=C'338¯ J'  338¯ J ?
         B     TYPEFOUN
UCB¯3A4  CLI   DCEOBRDT,X'23'
         BNE   UCB¯3B
         MVC   CACHVOLT(6),=C'338¯ K'  338¯ K ?
         B     TYPEFOUN
UCB¯339¯ EQU   *
         CLI   UCBUNTYP,X'¯F'          339¯ ?
         BNE   UCB¯3B
         MVC   CACHVOLT(6),=C'339¯  '  339¯ ?
         B     TYPEFOUN
UCB¯3B   EQU   *
         MVC   CACHVOLT(6),=C'OTHERS'  OTHERS
TYPEFOUN EQU   *
         MVC   CACHUTYP(4),UCBTYP
         XR    R1,R1
         ST    R1,NUMBER
         MVC   SSGADDN(4),NUMBER
         LA    R1,CACHVOLU
         ST    R1,SSGAVOL
         MVC   SSGUNIT(4),UCBTYP
         MVI   SSGOPT,B'1¯11¯¯1¯'  SET UP THE TYPE OF REQUEST
         XR    R1,R1
         ST    R1,WORD1
         LA    R1,WORD1
         LINK  EP=IDCSS¯1
         LR    R7,R15
         LTR   R7,R7
         BZ    LINKFINE
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVC   PRINT(133),BLANK
         MVC   PRINT+1¯(4),=C'R15='
         MVC   PRINT+14(8),RESULT+2
         PUT   PRINTDCB,PRINT
*   DISPLAY BINARY RETURN CODE
         XR    R1,R1
         ST    R1,NUMBER
         MVC   NUMBER+2(2),BINRETCO
         L     R1,NUMBER
         BAL   R8,CONVEBOX
         MVC   PRINT(133),BLANK
         MVC   PRINT+1¯(9),=C'BINRETCO='
         MVC   PRINT+19(8),RESULT+2
         MVC   PRINT+28(7),=C'VOLSER='
         MVC   PRINT+36(6),CACHVOLU
         PUT   PRINTDCB,PRINT
         B     N339¯OR6
LINKFINE EQU   *
         XR    R1,R1
         LA    R1,1
         L     R7,NUSUCCRE
         AR    R7,R1
         ST    R7,NUSUCCRE         INCREASE COUNTER
         MVC   NUMBER(4),SSGOADR
         L     R7,NUMBER
         USING SSGDAVOL,R7
         XR    R1,R1
         IC    R1,BYTE88
         ST    R1,NUMBER
         BAL   R8,CONTOHEX
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(9),=C'BYTE88  ='
         MVC   PRINT+1¯(8),RESULT+2
         PUT   PRINTDCB,PRINT
         XR    R1,R1
         ST    R1,NUMBER
         MVC   NUMBER+2(2),BYTE9495
         BAL   R8,CONTOHEX
         MVC   CACHSSID(4),RESULT+6
         MVC   NUMBER(4),BYTE47
         L     R1,NUMBER
         MVC   NUMBER(4),BYTE2¯23
         L     R9,NUMBER
         AR    R1,R9
         MVC   NUMBER(4),BYTE3639
         L     R9,NUMBER
         AR    R1,R9
         ST    R1,SRREQTOT
         MVC   NUMBER(4),BYTE811
         L     R1,NUMBER
         MVC   NUMBER(4),BYTE2427
         L     R9,NUMBER
         AR    R1,R9
         MVC   NUMBER(4),BYTE4¯43
         L     R9,NUMBER
         AR    R1,R9
         ST    R1,SRHITTOT
         MVC   NUMBER(4),BYTE1215
         L     R1,NUMBER
         MVC   NUMBER(4),BYTE2831
         L     R9,NUMBER
         AR    R1,R9
         MVC   NUMBER(4),BYTE4447
         L     R9,NUMBER
         AR    R1,R9
         ST    R1,WRREQTOT
         MVC   NUMBER(4),BYTE1619
         L     R1,NUMBER
         MVC   NUMBER(4),BYTE3235
         L     R9,NUMBER
         AR    R1,R9
         MVC   NUMBER(4),BYTE4851
         L     R9,NUMBER
         AR    R1,R9
         ST    R1,WRHITTOT
         MVC   NUMBER(4),SRREQTOT
         L     R1,NUMBER
         MVC   NUMBER(4),WRREQTOT
         L     R9,NUMBER
         AR    R1,R9
         ST    R1,SRWRREQU
         MVC   NUMBER(4),SRHITTOT
         L     R1,NUMBER
         MVC   NUMBER(4),WRHITTOT
         L     R9,NUMBER
         AR    R1,R9
         ST    R1,SRWRHITS
         MVC   CACHRETR(4),BYTE7275
         MVC   NUMBER(4),BYTE7679
         L     R1,NUMBER
         MVC   NUMBER(4),BYTE8¯83
         L     R9,NUMBER
         AR    R1,R9
         ST    R1,DASFWTOT
         MVC   CACHDADA(96),SSGDADA
         PUT   OUTDCB,CACHRECO
N339¯OR6 EQU   *
         CLC   UCBVOLI,SRCHVOL
         BNE   SEARCH
ENDIT    EQU   *
         CLOSE (OUTDCB)
*     WRITE NUMBER OF SUCCESSFUL REQUESTS = NUMBER OF VOLUMES
         L     R1,NUSUCCRE
         BAL   R8,CONVEBOX
         MVC   PRINT(133),BLANK
         MVC   PRINT+1¯(9),=C'NUSUCCRE='
         MVC   PRINT+19(8),RESULT+2
         PUT   PRINTDCB,PRINT
         L     R7,NUSUCCRE
         LTR   R7,R7
         BZ    WRITTRAI            NO SUCCESSFUL REQUESTS, NO REPORTS
*     WRITE REPORTS
         OPEN  (CURRENT,(INPUT))
         GET   CURRENT,CACHRECO
         MVC   STATDATE(12),CACHDATE
         MVC   STATTIME(8),CACHTIME
         MVC   ABSOTIME(4),CAMATIME
         MVC   ABSODATE(4),CAMADATE
         CLOSE (CURRENT)
         OPEN  (REPORDCB,(OUTPUT))
         BAL   R8,HEADER           WRITE HEADER
*     WRITE ABSOLUTE VALUES REPORT
         MVI   ABINSWIT,C'A'       CHANGE SWITCH TO ABSOLUTE
         OPEN  (CURRENT,(INPUT))
         XR    R3,R3
         LA    R3,5¯               ESTABLISH LINES PER PAGE NUMBER
         XR    R2,R2
         LA    R2,1                ESTABLISH LINES PRE PAGE COUNTER
         XR    R5,R5
         LA    R5,1
         BAL   R8,NEWPAGE
         XR    R4,R4
         L     R4,LINENUM
         LA    R9,CACHDADA
         USING SSGDADA,R9
GETLOOPA EQU  *
         GET   CURRENT,CACHRECO
         MVC   OUTPUREC(133),BLANK
         MVC   DISKSER(6),CACHVOLU
         MVC   DISKADDR(3),CACHADDR
         MVC   DISKTYPE(4),CACHVOLT
         MVC   DISKSSID(4),CACHSSID
         L     R1,SRREQTOT
         BAL   R8,CONVEBOX
         MVC   SRTOTTOT(1¯),RESULT
         L     R1,SRHITTOT
         BAL   R8,CONVEBOX
         MVC   SRCARTOT(1¯),RESULT
         L     R1,WRREQTOT
         BAL   R8,CONVEBOX
         MVC   WRTOTTOT(1¯),RESULT
         L     R1,DASFWTOT
         BAL   R8,CONVEBOX
         MVC   WRDASTOT(1¯),RESULT
         L     R1,WRHITTOT
         BAL   R8,CONVEBOX
         MVC   WRCAWTOT(1¯),RESULT
         L     R1,SRWRREQU
         BAL   R8,CONVEBOX
         MVC   TOTAREQU(1¯),RESULT
         L     R1,SRWRHITS
         BAL   R8,CONVEBOX
         MVC   TOTAHITS(1¯),RESULT
*   CALCULATE PERCENTAGE: (TOTAL HITS)/(TOTAL REQUESTS)
         L     R7,SRWRREQU         (R7) = TOTAL NUMBER OF REQUESTS
         XR    R1,R1
         CR    R7,R1
         BNE   NOTZERRA
         MVC   PERCENT1(6),=C'***N/A'
         B     ENDPERCE
NOTZERRA EQU   *
         L     R7,SRWRHITS         (R7) = NUMBER OF HITS
         XR    R6,R6               (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,SRWRREQU         (R1) = TOTAL NUMBER OF REQUESTS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVC   PERCENT1(3),RESULT+7
         LR    R7,R6               (R7) = REMAINS
         XR    R6,R6               (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,SRWRREQU         (R1) = TOTAL NUMBER OF REQUESTS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVI   PERCDOT,C'.'
         MVC   PERCENT2(2),RESULT+8
         CLI   PERCENT2,C' '
         BNE   ENDPERCE
         MVI   PERCENT2,C'¯'
ENDPERCE EQU   *
*   CALCULATE PERCENTAGE FOR TOTALS: (READ REQUESTS)/(WRITE REQUESTS)
         L     R7,WRREQTOT        (R7) = TOTAL NUMBER OF WRITE REQUESTS
         XR    R1,R1
         CR    R7,R1
         BNE   NOTZERRR
         MVC   RWRCENT1(6),=C'***N/A'
         B     ENDPERCR
NOTZERRR EQU   *
         L     R7,SRREQTOT        (R7) = NUMBER OF READ REQUESTS
         XR    R6,R6              (R6) = ¯
         XR    R1,R1
         L     R1,WRREQTOT        (R1) = TOTAL NUMBER OF WRITE REQUESTS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVC   RWRCENT1(6),RESULT+4
         CLI   RESULT+3,C' '
         BE    NOOVERFL
         MVI   RWRCENT1,C'*'      MARK A VERY HIGH VALUE FOR RATIO
NOOVERFL EQU   *
         MVC   RWRCENT1(6),RESULT+4
         LR    R7,R6              (R7) = REMAINS
         XR    R6,R6              (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,WRREQTOT        (R1) = TOTAL NUMBER OF WRITE REQUESTS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVI   RWRCDOT,C'.'
         MVC   RWRCENT2(2),RESULT+8
         CLI   RWRCENT2,C' '
         BNE   ENDPERCR
         MVI   RWRCENT2,C'¯'
ENDPERCR EQU   *
         MVC   TIMCDOT(3),=C'N/A'
         L     R1,CACHRETR
         BAL   R8,CONVEBOX
         MVC   DFWRENT1(6),RESULT+4
*   CALCULATE PERCENTAGE: ((DFWRETRIES/(WRITETOTALTOTALS))*1¯¯)
         L     R7,WRREQTOT        (R7) = WRITE TOTAL TOTALS
         XR    R1,R1
         CR    R7,R1
         BNE   NOTZDFWR
         MVC   DFWRENT1(6),=C'***N/A'
         B     ENDPERDF
NOTZDFWR EQU   *
         L     R7,CACHRETR        (R7) = NUMBER OF DFW RETRIES
         XR    R6,R6              (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,WRREQTOT        (R1) = WRITE TOTAL TOTALS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVC   DFWRENT1(3),RESULT+7
         LR    R7,R6              (R7) = REMAINS
         XR    R6,R6              (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,WRREQTOT        (R1) = WRITE TOTAL TOTALS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVI   DFWRDOT,C'.'
         MVC   DFWRENT2(2),RESULT+8
         CLI   DFWRENT2,C' '
         BNE   ENDPERDF
         MVI   DFWRENT2,C'¯'
ENDPERDF EQU   *
         MVC   PRINT(133),BLANK
         MVC   PRINT(133),OUTPUREC
         PUT   REPORDCB,PRINT
         CR    R2,R3             TEST IF PAGE IS FULL
         BNE   PAGENFUL          NOT
         XR    R2,R2
         BAL   R8,NEWPAGE
PAGENFUL EQU   *
         AR    R2,R5
         BCT   R4,GETLOOPA
ENDODATA EQU   *
         CLOSE (CURRENT)
         MVI   PRINT,C'-'
         MVC   PRINT+1(L'PRINT-1),PRINT
         PUT   REPORDCB,PRINT
*     WRITE INCREMENTAL REPORT
         MVI   ABINSWIT,C'I'     CHANGE SWITCH TO INCREMENTAL
         LA    R6,HISTORYI
         USING IHADCB,R6
         LA    R1,EOFHISTO
         ST    R1,NUMBER
         MVC   DCBEODA(3),NUMBER+1
         DROP  R6
         MVC   HIKETIME(4),ABSOTIME
         MVC   HIKEDATE(4),ABSODATE
         OPEN  (HISTORYI,(INPUT))
         GET   HISTORYI,HISTRECO
         MVC   HIKETIME(4),HISTTIME
         MVC   HIKEDATE(4),HISTDATE
         MVC   PREVDATE(12),HACHDATE
         MVC   PREVTIME(8),HACHTIME
EOFHISTO EQU   *
         CLOSE (HISTORYI)
         LA    R6,HISTORYI
         USING IHADCB,R6
         LA    R1,ENDHISTD       RETURN THE ORIGINAL NAME
         ST    R1,NUMBER
         MVC   DCBEODA(3),NUMBER+1
         DROP  R6
*   CALCULATE THE TIME DIFFERENCE IN ¯.¯1 SEC
         XC    PACKED(8),PACKED
         MVC   PACKED+6(2),ABSODATE+2
         CVB   R3,PACKED
         XC    PACKED(8),PACKED
         MVC   PACKED+6(2),HIKEDATE+2
         CVB   R6,PACKED
         CR    R6,R3             CHECK IF ABSDATE=HIKEDATE?
         BE    SAMEDATE
         SR    R3,R6             (R3) = NUMBER OF DAYS
         XR    R2,R2
         L     R1,TWENTYFO
         MR    R2,R1             (R3)=(NUMBER OF DAYS) X 864¯¯¯¯
         L     R1,HIKETIME
         SR    R3,R1
         L     R1,ABSOTIME
         AR    R3,R1
         ST    R3,INKETIME
         LR    R1,R3
         B     DISPTIME
SAMEDATE EQU   *
         L     R1,ABSOTIME
         L     R7,HIKETIME
         SR    R1,R7
         ST    R1,INKETIME
DISPTIME EQU   *
         BAL   R8,CONVEBOX
         MVC   INCRTIME+8(2),RESULT+8
         MVI   INCRTIME+7,C'.'
         MVC   INCRTIME(7),RESULT+1
         CLI   INCRTIME+8,C' '
         BNE   AFTETIME
         MVI   INCRTIME+8,C'¯'
AFTETIME EQU   *
         L     R1,INKETIME
         BAL   R8,CONVEBOX
         LA    R6,CURRENT
         USING IHADCB,R6
         LA    R1,ENDODATI
         ST    R1,NUMBER
         MVC   DCBEODA(3),NUMBER+1
         DROP  R6
         OPEN  (CURRENT,(INPUT))
         XR    R3,R3
         LA    R3,5¯             ESTABLISH LINES PER PAGE NUMBER
         XR    R2,R2
         LA    R2,1              ESTABLISH LINES PER PAGE COUNTER
         XR    R5,R5
         LA    R5,1
         BAL   R8,NEWPAGE
         XR    R4,R4
         L     R4,LINENUM
GETLOOPI EQU  *
         GET   CURRENT,CACHRECO
         MVC   OUTPUREC(133),BLANK
         MVC   DISKSER(6),CACHVOLU
         MVC   DISKADDR(3),CACHADDR
         MVC   DISKTYPE(4),CACHVOLT
         MVC   DISKSSID(4),CACHSSID
         OPEN  (HISTORYI,(INPUT))
LOOPHIST EQU   *
         GET   HISTORYI,HISTRECO
         CLC   CACHVOLU(6),HISTVOLU
         BE    HIVEQCAC
         B     LOOPHIST
ENDHISTD EQU   *
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(31),=C'HISTORY VOLUME XXXXXX NOT FOUND'
         MVC   PRINT+16(6),CACHVOLU
         PUT   PRINTDCB,PRINT
*   INCREMENTAL VALUE = ABSOLUTE VALUE
         MVI   HISTRECO,X'¯¯'
         MVC   HISTRECO+1(L'HISTRECO-1),HISTRECO
HIVEQCAC EQU   *                 HISTORY VOLUME FOUND
         CLOSE (HISTORYI)
         L     R1,SRREQTOT
         L     R9,HSREQTOT
         SR    R1,R9
         ST    R1,INCRREAD
         BAL   R8,CONVEBOX
         MVC   SRTOTTOT(1¯),RESULT
         L     R1,SRREQTOT
         CR    R1,R9
         BNL   NORESET1
         MVC   SRTOTTOT(16),=C'COUNTER(S) RESET'
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(28),=C'COUNTER(S) RESET FOR VOLUME='
         MVC   PRINT+29(6),CACHVOLU
         PUT   PRINTDCB,PRINT
         B     ENDPERTI
NORESET1 EQU   *
         L     R1,SRHITTOT
         L     R9,HSHITTOT
         SR    R1,R9
         BAL   R8,CONVEBOX
         MVC   SRCARTOT(1¯),RESULT
         L     R1,WRREQTOT
         L     R9,HWREQTOT
         SR    R1,R9
         ST    R1,INCRWRIT
         BAL   R8,CONVEBOX
         MVC   WRTOTTOT(1¯),RESULT
         L     R1,DASFWTOT
         L     R9,HASFWTOT
         SR    R1,R9
         BAL   R8,CONVEBOX
         MVC   WRDASTOT(1¯),RESULT
         L     R1,WRHITTOT
         L     R9,HWHITTOT
         SR    R1,R9
         BAL   R8,CONVEBOX
         MVC   WRCAWTOT(1¯),RESULT
         L     R1,SRWRREQU
         L     R9,HRWRREQU
         SR    R1,R9
         ST    R1,INCRREQU
         BAL   R8,CONVEBOX
         MVC   TOTAREQU(1¯),RESULT
         L     R1,SRWRHITS
         L     R9,HRWRHITS
         SR    R1,R9
         ST    R1,INCRHITS
         BAL   R8,CONVEBOX
         MVC   TOTAHITS(1¯),RESULT
         L     R1,CACHRETR
         L     R9,HISTRETR
         SR    R1,R9
         ST    R1,INCRDFWP
*   CALCULATE PERCENTAGE: ((DFWRETRIES/(WRITETOTALTOTALS))*1¯¯)
         L     R7,INCRWRIT       (R7) = WRITE TOTAL TOTALS
         XR    R1,R1
         CR    R7,R1
         BNE   NOTZDFWI
         MVC   DFWRENT1(6),=C'***N/A'
         B     ENDPERDI
NOTZDFWI EQU   *
         L     R7,INCRDFWP       (R7) = INCREMENT NUMBER OF DFW RETRIES
         XR    R6,R6             (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,INCRWRIT       (R1) = INCREMENT WRITE TOTAL TOTALS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVC   DFWRENT1(3),RESULT+7
         LR    R7,R6             (R7) = REMAINS
         XR    R6,R6             (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,INCRWRIT       (R1) = INCREMENT WRITE TOTAL TOTALS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVI   DFWRDOT,C'.'
         MVC   DFWRENT2(2),RESULT+8
         CLI   DFWRENT2,C' '
         BNE   ENDPERDI
         MVI   DFWRENT2,C'¯'
ENDPERDI EQU   *
*   CALCULATE PERCENTAGE: (INCREMENTAL HITS)/(INCREMENTAL REQUESTS)
         L     R7,INCRREQU       (R7) = TOTAL NUMBER OF REQUESTS
         XR    R1,R1
         CR    R7,R1
         BNE   NOTZERRE
         MVC   PERCENT1+3(3),=C'N/A'
         B     ENDPERCI
NOTZERRE EQU   *
         L     R7,INCRHITS       (R7) = NUMBER OF HITS
         XR    R6,R6             (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,INCRREQU       (R1) = TOTAL NUMBER OF REQUESTS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVC   PERCENT1(3),RESULT+7
         LR    R7,R6             (R7) = REMAINS
         XR    R6,R6             (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,INCRREQU       (R1) = TOTAL NUMBER OF REQUESTS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVI   PERCDOT,C'.'
         MVC   PERCENT2(2),RESULT+8
         CLI   PERCENT2,C' '
         BNE   ENDPERCI
         MVI   PERCENT2,C'¯'
ENDPERCI EQU   *
*   CALCULATE PERCENTAGE FOR INCREM: (READ REQUESTS)/(WRITE REQUESTS)
         L     R7,INCRWRIT       (R7) = INCREMENT OF WRITE REQUESTS
         XR    R1,R1
         CR    R7,R1
         BNE   NOTZRRRR
         MVC   RWRCENT1+5(6),=C'***N/A'
         B     ENDPERRR
NOTZRRRR EQU   *
         L     R7,INCRREAD       (R7) = INCREMENT OF READ REQUESTS
         XR    R6,R6             (R6) = ¯
         XR    R1,R1
         L     R1,INCRWRIT       (R1) = INCREMENT OF WRITE REQUESTS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVC   RWRCENT1(6),RESULT+4
         CLI   RESULT+3,C' '
         BE    NOOVERFI
         MVI   RWRCENT1,C'*'     MARK A VERY HIGH VALUE FOR RATIO
NOOVERFI EQU   *
         MVC   RWRCENT1(6),RESULT+4
         LR    R7,R6             (R7) = REMAINS
         XR    R6,R6             (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,INCRWRIT       (R1) = INCREMENT OF WRITE REQUESTS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVI   RWRCDOT,C'.'
         MVC   RWRCENT2(2),RESULT+8
         CLI   RWRCENT2,C' '
         BNE   ENDPERRR
         MVI   RWRCENT2,C'¯'
ENDPERRR EQU   *
*   CALCULATE TOTAL REQUESTS PER SECOND
         L     R7,INKETIME       (R7) = DTIME IN ¯.¯1 SEC
         XR    R1,R1
         CR    R7,R1
         BNE   NOTZERTI
         MVC   TIMCENT1(6),=C'***N/A'
         B     ENDPERTI
NOTZERTI EQU   *
         L     R7,INCRREQU       (R7) = NUMBER OF READ REQUESTS
         XR    R6,R6             (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,INKETIME       (R1) = TOTAL NUMBER OF WRITE REQUESTS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVC   TIMCENT1(6),RESULT+4
         CLI   RESULT+3,C' '
         BE    NOOVERTI
         MVI   TIMCENT1,C'*'     MARK A VERY HIGH VALUE FOR RATIO
NOOVERTI EQU   *
         MVC   TIMCENT1(6),RESULT+4
         LR    R7,R6             (R7) = REMAINS
         XR    R6,R6             (R6) = ¯
         XR    R1,R1
         LA    R1,1¯¯
         MR    R6,R1
         L     R1,INKETIME       (R1) = TOTAL NUMBER OF WRITE REQUESTS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVI   TIMCDOT,C'.'
         MVC   TIMCENT2(2),RESULT+8
         CLI   TIMCENT2,C' '
         BNE   ENDPERTI
         MVI   TIMCENT2,C'¯'
ENDPERTI EQU   *
         MVC   PRINT(133),OUTPUREC
         PUT   REPORDCB,PRINT
         CR    R2,R3             TEST IF PAGE IS FULL
         BNE   PAGENFUA
         XR    R2,R2
         BAL   R8,NEWPAGE
PAGENFUA EQU   *
         AR    R2,R5
         BCT   R4,GETLOOPI
ENDODATI EQU   *
         CLOSE (CURRENT)
         MVI   PRINT,C'-'
         MVC   PRINT+1(L'PRINT-1),PRINT
         PUT   REPORDCB,PRINT
*   SAVE CURRENT STATISTICS INTO HISTORY FILE
         LA    R6,CURRENT
         USING IHADCB,R6
         LA    R1,EODAHIST
         ST    R1,NUMBER
         MVC   DCBEODA(3),NUMBER+1
         DROP  R6
         OPEN  (CURRENT,(INPUT),HISTORYO,(OUTPUT))
GETLOOPH EQU   *
         GET   CURRENT,CACHRECO
         PUT   HISTORYO,CACHRECO
         B     GETLOOPH
EODAHIST EQU   *
         CLOSE (CURRENT,,HISTORYO)
WRITTRAI EQU   *
         BAL   R8,TRAILER
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(14),=C'END - CACHSTAT'
         PUT   PRINTDCB,PRINT
         CLOSE (PRINTDCB,,OUTDCB)
         LR    R15,R7
         L     R13,4(R13)
         RETURN (14,12),RC=(15)
HEADER   EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'1'
         PUT   REPORDCB,PRINT
         MVC   PRINT(133),BLANK
         PUT   REPORDCB,PRINT
         LA    R5,1
         MVC   CHARFIEL(9),=C'399¯ MOD3'
NEWLOOPS EQU   *
         LA    R7,12
         LA    R6,1
         ST    R6,LINECOUN
LOOPIEFS EQU   *
         MVI   CONSAREA,C' '
         MVC   CONSAREA+1(L'CONSAREA-1),CONSAREA
         LA    R1,PARMBLOC
         CALL  IEFSD¯95
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(132),CONSAREA
         PUT   REPORDCB,PRINT
         LA    R1,1
         AR    R6,R1
         ST    R6,LINECOUN
         BCT   R7,LOOPIEFS
         LA    R1,1
         AR    R5,R1
         LA    R1,5
         CR    R5,R1
         BE    ENDBLOCK
         LA    R1,2
         CR    R5,R1
         BE    SECONLIN
         LA    R1,3
         CR    R5,R1
         BE    THIRDLIN
         LA    R1,4
         CR    R5,R1
         BE    FOURTLIN
SECONLIN EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'¯'
         PUT   REPORDCB,PRINT
         MVC   CHARFIEL(9),=C'SUBSYSTEM'
         B     NEWLOOPS
THIRDLIN EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'¯'
         PUT   REPORDCB,PRINT
         MVC   CHARFIEL(9),USERTEXT
         B     NEWLOOPS
FOURTLIN EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'¯'
         PUT   REPORDCB,PRINT
         MVC   CHARFIEL(9),=C' REPORTS '
         B     NEWLOOPS
ENDBLOCK EQU   *
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(34),COPYRIGH
         MVC   PRINT+37(31),=C'399¯ MODEL 3 CONTROLLER REPORT:'
         MVC   PRINT+69(3¯),=C'SUBSYSTEM STATISTICS          '
         MVC   PRINT+1¯8(18),=C'MVS TOOLBOX: CACHE'
         PUT   REPORDCB,PRINT
         BR    R8
TRAILER  EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'1'
         PUT   REPORDCB,PRINT
         MVC   PRINT(133),BLANK
         PUT   REPORDCB,PRINT
         LA    R5,1
         MVC   CHARFIEL(9),=C'399¯ MOD3'
NEWLOOP2 EQU   *
         LA    R7,12
         LA    R6,1
         ST    R6,LINECOUN
LOOPIEF2 EQU   *
         MVI   CONSAREA,C' '
         MVC   CONSAREA+1(L'CONSAREA-1),CONSAREA
         LA    R1,PARMBLOC
         CALL  IEFSD¯95
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(132),CONSAREA
         PUT   REPORDCB,PRINT
         LA    R1,1
         AR    R6,R1
         ST    R6,LINECOUN
         BCT   R7,LOOPIEF2
         LA    R1,1
         AR    R5,R1
         LA    R1,5
         CR    R5,R1
         BE    ENDBLOC2
         LA    R1,2
         CR    R5,R1
         BE    SECONLI2
         LA    R1,3
         CR    R5,R1
         BE    THIRDLI2
         LA    R1,4
         CR    R5,R1
         BE    FOURTLI2
SECONLI2 EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'¯'
         PUT   REPORDCB,PRINT
         MVC   CHARFIEL(9),=C'SUBSYSTEM'
         B     NEWLOOP2
THIRDLI2 EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'¯'
         PUT   REPORDCB,PRINT
         MVC   CHARFIEL(9),=C' REPORTS '
         B     NEWLOOP2
FOURTLI2 EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'¯'
         PUT   REPORDCB,PRINT
         MVC   CHARFIEL(9),=C'   END   '
         B     NEWLOOP2
ENDBLOC2 EQU   *
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(34),COPYRIGH
         MVC   PRINT+1¯5(18),=C'MVS TOOLBOX: CACHE'
         PUT   REPORDCB,PRINT
         BR    R8
NEWPAGE  EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'1'
         MVC   PRINT+2(17),REPTEXT1
         CLI   ABINSWIT,C'A'
         BNE   INCRREPO
         MVC   PRINT+2¯(25),ABSOLUTE
         MVC   PRINT+45(22),REPTEXT2
         B     CARRYREP
INCRREPO EQU   *
         MVC   PRINT+2¯(18),INCREMEN
         MVC   REPTEXT3+8(1¯),INCRTIME
         MVC   PRINT+38(29),REPTEXT3
         MVC   PRINT+68(5),=C'FROM:'
         MVC   PRINT+74(12),PREVDATE
         MVC   PRINT+87(8),PREVTIME
         MVC   PRINT+96(3),=C'TO:'
         MVC   PRINT+1¯¯(12),STATDATE
         MVC   PRINT+113(8),STATTIME
         B     PRINREPO
CARRYREP EQU   *
         MVC   PRINT+68(5),=C'AS ON'
         MVC   PRINT+74(12),STATDATE
         MVC   PRINT+87(8),STATTIME
         MVC   PRINT+1¯¯(12),=C'REPORT DATE:'
         CALL  SUDATE,(DATE),VL
         MVC   PRINT+113(3),DATENAME
         MVC   PRINT+117(2),DATEDAY
         MVC   PRINT+12¯(3),DATEMONT
         MVC   PRINT+124(4),DATEYEAR
PRINREPO EQU   *
         PUT   REPORDCB,PRINT
         MVC   PRINT(133),BLANK
         PUT   REPORDCB,PRINT
         MVI   PRINT,C'-'
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVI   PRINT,C' '
         PUT   REPORDCB,PRINT
         MVC   PRINT(133),BLANK
         MVC   PRINT+2(38),=C'VOLSER ADDR .....SEARCH/READ.... .....'
         MVC   PRINT+4¯(38),=C'........WRITE.............. ..........'
         MVC   PRINT+78(38),=C'.TOTALS............ READ/WRT  DFW     '
         MVC   PRINT+116(16),=C' REQS  SSI  DISK'
         PUT   REPORDCB,PRINT
         MVC   PRINT(133),BLANK
         MVC   PRINT+2(38),=C'             TOTALS   CACHE READ   TOT'
         MVC   PRINT+4¯(38),=C'ALS    DASDFW   CACHE WRITE  REQUESTS '
         MVC   PRINT+78(38),=C'    HITS  HITS/REQS REQUESTS RETRIES  '
         MVC   PRINT+116(16),=C' PER   HEXA TYPE'
         PUT   REPORDCB,PRINT
         MVC   PRINT(133),BLANK
         MVC   PRINT+2(38),=C'            REQUESTS     HITS     REQU'
         MVC   PRINT+4¯(38),=C'ESTS   COUNTS      HITS               '
         MVC   PRINT+78(38),=C'              %       RATIO    %      '
         MVC   PRINT+116(6),=C'SECOND'
         PUT   REPORDCB,PRINT
         MVI   PRINT,C'-'
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVI   PRINT,C' '
         PUT   REPORDCB,PRINT
         BR    R8
CONVEBOX EQU   *
         CVD   R1,PACKED
         MVC   COPYPATE(12),PATTERN
         ED    COPYPATE(12),PACKFIE2
         MVC   RESULT(1¯),COPYPATE+2
         BR    R8
CONTOHEX EQU   *
         XC    CHARACTE,CHARACTE
         MVC   CHARACTE(4),NUMBER
         UNPK  CHARACTE,CHARACTE(5)
         TR    CHARACTE+7(8),HEXTABLE
         MVC   RESULT+2(8),CHARACTE+7
         BR    R8
HEXTABLE DC    24¯CL1'?',C'¯123456789ABCDEF'
CHARACTE DS    CL16
PATTERN  DC    XL12'4¯2¯2¯2¯2¯2¯2¯2¯2¯2¯212¯'
         DS    ¯D
PACKED   DS    ¯PL8
         DS    PL2
PACKFIE2 DS    PL6
COPYPATE DS    CL12
COPYRIGH DC    CL34'YOUR COPYRIGHT NAME'
SAVE3    DS    18F
NUMBER   DS    F
NUSUCCRE DS    F             NUMBER SUCCESSFUL REQUESTS
LINENUM  DS    F
LINPERPA DS    F
INCRHITS DS    F
INCRREQU DS    F
INCRREAD DS    F
INCRWRIT DS    F
INCRDFWP DS    F
MACRTIME DS    F             TIME FROM THE TIME MACRO (IN ¯.¯1 SECS)
MACRDATE DS    F             DATE FROM THE TIME MACRO
ABSOTIME DS    F             ABSOLUTE TIME FROM CURRENT
ABSODATE DS    F             ABSOLUTE DATE FROM CURRENT
HIKETIME DS    F             HISTORY  TIME FROM MACRO
HIKEDATE DS    F             HISTORY  DATE FROM MACRO
INKETIME DS    F             INCREMENT OF THE TIME (IN ¯.¯1 SECS)
TWENTYFO DC    F'864¯¯¯¯'    24 HOURS IN ¯.¯1 SECS
INCRTIME DS    CL1¯
RESULT   DS    CL1¯
PRINT    DS    CL133
BLANK    DC    CL133' '
STATDATE DS    CL12         STATISTICS TAKEN ON DATE
STATTIME DS    CL8          STATISTICS TAKEN ON TIME
REPTEXT1 DC    CL17'399¯/3 CONTROLLER'
ABSOLUTE DC    CL25'REPORT BY ABSOLUTE VALUES'
INCREMEN DC    CL18'INCREMENTAL REPORT'
REPTEXT2 DC    CL22': SUBSYSTEM STATISTICS'
REPTEXT3 DC    CL29': DTIME=123456789¯ SEC, STATS'
ABINSWIT DS    CL1          ABSOLUTE/INCREMENTAL SWITCH
USERTEXT DS    CL9          USER TEXT FROM THE PARM FIELD ON EXEC STMT
PREVDATE DS    CL12         HISTORY DATE
PREVTIME DS    CL8          HISTORY TIME
PARMBLOC DS    ¯D
WORDB1   DC    A(CHARFIEL)  ADDRESS OF THE FIELD CONT. CHARS STRING
WORDB2   DC    A(LINECOUN)  ADDRESS OF LINE COUNT FIELD
WORDB3   DC    A(CONSAREA)  ADDRESS OF A CONSTRUCION AREA
WORDB4   DC    A(NUMCHARA)  ADDRESS OF THE NUMBER OF CHARACTERS
CHARFIEL DS    CL9
LINECOUN DC    F'1'         FOR THE FIRST ENTRY TO IEFSD¯95
CONSAREA DC    CL132' '     CONSTRUCTION AREA
NUMCHARA DC    F'9'         NUMBER OF CHARACTERS INM THE STRING
CACHRECO DS    ¯CL18¯
SRREQTOT DS    F            S/R REQUESTS TOTAL
SRHITTOT DS    F            S/R HITS TOTAL
WRREQTOT DS    F            WRITE REQUESTS TOTAL
WRHITTOT DS    F            WRITE HITS TOTAL
SRWRREQU DS    F            TOTAL REQUESTS (S/R + WRITE)
SRWRHITS DS    F            TOTAL HITS (S/R +WRITE)
DASFWTOT DS    F            DASD FAST WRITE TOTAL COUNTS
CAMATIME DS    F            TIME FROM THE TIME MACRO (IN ¯.¯1 SECS)
CAMADATE DS    F            DATE FROM THE TIME MACRO
CACHRETR DS    F            DFW RETRIES CURRENT
CACHVOLU DS    CL6          VOLUME SERIAL
CACHADDR DS    CL3          VOLUME ADDRESS
CACHVOLT DS    CL6          VOLUME TYPE
CACHDADA DS    CL96         SSGDADA
CACHUTYP DS    CL4          UCBTYP
CACHTIME DS    CL8          EDITED TIME FROM THE TIME MACRO
CACHDATE DS    CL12         EDITED DATE FROM THE TIME MACRO
CACHSSID DS    CL4          SUBSYSTEM ID
         DS    CL1          FILLER
HISTRECO DS    ¯CL18¯
HSREQTOT DS    F            S/R REQUESTS TOTAL
HSHITTOT DS    F            S/R HITS TOTAL
HWREQTOT DS    F            WRITE REQUESTS TOTAL
HWHITTOT DS    F            WRITE HITS TOTAL
HRWRREQU DS    F            TOTAL REQUESTS (S/R + WRITE)
HRWRHITS DS    F            TOTAL HITS (S/R + WRITE)
HASFWTOT DS    F            DASD FAST WRITE TOTAL COUNTS
HISTTIME DS    F            TIME FROM THE TIME MACRO (IN ¯.¯1 SECS)
HISTDATE DS    F            DATE FROM THE TIME MACRO
HISTRETR DS    F            DFW RETRIES HISTORY
HISTVOLU DS    CL6          VOLUME SERIAL
HACHADDR DS    CL3          VOLUME ADDRESS
HACHVOLT DS    CL6          VOLUME TYPE
HACHDADA DS    CL96         SSGDADA
HACHUTYP DS    CL4          UCBTYP
HACHTIME DS    CL8          EDITED TIME FROM THE TIME MACRO
HACHDATE DS    CL12         EDITED DATE FROM THE TIME MACRO
HACHSSID DS    CL4          SUBSYSTEM ID
         DS    CL1          FILLER
*   IOSVSUCB PARAMETERS
SRCHVOL  DC    CL6'ZZZZZZ'
PARMLIST DS    3F    PARMLIST MAPPING
         ORG   PARMLIST
PARMWA   DS    F     ADDRESS OF 1¯¯-BYTE WORK AREA
PARMDEVT DS    F     ADDRESS OF BYTE CONTAINING THE DEVICE TYPE
PARMUCB  DS    F     ADDRESS OF WORD TO CONTAIN THE UCB ADDRESS
DEVCLASS DS    CL1   BYTE CONTAINING DEVICE CLASS TO BE SEARCHED
ADDRUCB  DS    F     WORD IN WHICH UCB SCAN WILL PLACE THE UCB ADDRESS
WORKAREA DS    CL1¯¯ WORK AREA
         DS    ¯D
WORD1    DC    F'¯'
WORD2    DC    A(POINTERA)
WORD3    DC    A(BINRETCO)
POINTERA DC    A(SSGARL)
SSGARL   DS    ¯CL32
SSGHEAD  DS    CL8   SSGHEAD
SSGADDN  DS    CL4   ADDRESS OF DDNAME; ZERO IF NONE
SSGAVOL  DS    CL4   ADDRESS OF VOLUME SERIAL; ZERO IF NONE
SSGUNIT  DS    CL4   UNIT TYPE, UCBTYP FORMAT
SSGOLN   DS    CL4   LENGTH OF BUFFER STORAGE AREA
SSGOADR  DS    CL4   ADDRESS OF BUFFER AREA
SSGOPT   DS    CL1   REQUEST TYPE
SSGRESE1 DS    CL1   RESERVED
SSGMDLID DS    CL1   SUBSYSTEM IDENTIFIERS
SSGRCIOS DS    CL1   IOS RETURN CODE
BINRETCO DS    CL2   BINARY RETURN CODE
DATE     DS    ¯CL12
DATENAME DS    CL3
DATEDAY  DS    CL2
DATEMONT DS    CL3
DATEYEAR DS    CL4
STAMP    DS    ¯CL12
DAY      DS    CL3   BLANK
DAYNO    DS    CL2   BLANK
MONTH    DS    CL3   BLANK
YEAR     DS    CL2   19
YEAR1    DS    CL2   BLANK
TIMESTAM DS    ¯CL11
HH       DS    CL2   BLANK
         DS    CL1   BLANK
MM       DS    CL2   BLANK
         DS    CL1   BLANK
SS       DS    CL2   BLANK
         DS    CL1   BLANK
DD       DS    CL2   BLANK
OUTPUREC DS    ¯CL15¯
         DS    CL1   CONTROL CHARACTER
DISKSER  DS    CL6   VOLSER
         DS    CL1   FILLER
DISKADDR DS    CL3   DISK ADDRESS
         DS    CL1   FILLER
SRTOTTOT DS    CL1¯  SEARCH/READ TOTAL TOTALS  (REQUESTS)
         DS    CL1   FILLER
SRCARTOT DS    CL1¯  SEARCH/READ CACHE READ TOTALS (HITS)
         DS    CL1   FILLER
WRTOTTOT DS    CL1¯  WRITE TOTAL TOTALS (REQUESTS)
         DS    CL1   FILLER
WRDASTOT DS    CL1¯  WRITE DASDFW TOTALS (COUNTS)
         DS    CL1   FILLER
WRCAWTOT DS    CL1¯  WRITE CACHE WRITE TOTALS (HITS)
         DS    CL1   FILLER
TOTAREQU DS    CL1¯  TOTAL REQUESTS
         DS    CL1   FILLER
TOTAHITS DS    CL1¯  TOTAL HITS
         DS    CL1   FILLER
PERCENT1 DS    CL3   PERCENTAGE: (HITS/TOTALREQ)*1¯¯%
PERCDOT  DS    CL1   DECIMAL DOT
PERCENT2 DS    CL2   PERCENTAGE: (HITS/TOTALREQ)*1¯¯%
         DS    CL1   FILLER
RWRCENT1 DS    CL6   READ/WRITE HITS PERCENTAGE
RWRCDOT  DS    CL1   DECIMAL DOT
RWRCENT2 DS    CL2   READ/WRITE HITS PERCENTAGE
         DS    CL1   FILLER
DFWRENT1 DS    CL3   PERCENT: ((DFWRETRIES/(WRITETOTALTOTALS))*1¯¯)
DFWRDOT  DS    CL1   DECIMAL DOT
DFWRENT2 DS    CL2   PERCENTAGE: (HITS/TOTALREQ)*1¯¯%
         DS    CL1   FILLER
TIMCENT1 DS    CL6   READ/WRITE HITS PERCENTAGE
TIMCDOT  DS    CL1   DECIMAL DOT
TIMCENT2 DS    CL2   READ/WRITE HITS PERCENTAGE
         DS    CL1   FILLER
DISKSSID DS    CL4   DISK SUBSYSTEM ID
         DS    CL1   FILLER
DISKTYPE DS    CL4   DISK TYPE
         DS    CL5¯  FILLER
         DS    ¯D
PRINTDCB DCB   MACRF=PT,RECFM=FBA,LRECL=133,BLKSIZE=133,DSORG=PS,      *
               DDNAME=PRINTOUT
CURRENT  DCB   MACRF=GM,RECFM=FB,DSORG=PS,LRECL=18¯,                   *
               DDNAME=CURRENT,EODAD=ENDODATA
HISTORYI DCB   MACRF=GM,RECFM=FB,DSORG=PS,LRECL=18¯,                   *
               DDNAME=HISTORY,EODAD=ENDHISTD
HISTORYO DCB   MACRF=PM,RECFM=FB,DSORG=PS,LRECL=18¯,                   *
               DDNAME=HISTORY
REPORDCB DCB   MACRF=PT,RECFM=FBA,LRECL=133,DSORG=PS,                  *
               DDNAME=REPORT¯1
OUTDCB   DCB   MACRF=PM,RECFM=FB,LRECL=18¯,DSORG=PS,                   *
               DDNAME=CURRENT
         LTORG
         DS    ¯D
SSGRESUL DS    ¯CL16¯   DUMMY SECTION
SSGDAVOL DS    CL6   VOLUME SERIAL
         DS    CL2   RESERVED
SSGDAUA1 DS    CL3   UNIT ADDRESS
SSGDAUA2 DS    CL3   N/A FOR 399¯ MODEL 3
SSGDALN  DS    CL2   DATA LENGTH
SSGDADA  DS    ¯CL96 DATA RETURNED FROM THE SUBSYSTEM
BYTE¯    DS    CL1   WHEN BIT ¯ IS SET TO 1, CACHE IS NOT AVAILABLE
BYTE1    DS    CL1   DEVICE UNIT ADDRESS
BYTE23   DS    CL2   DEVICE STATUS - GROUP 1
BYTE47   DS    CL4   SEARCH OR NORMAL I/O REQUESTS
BYTE811  DS    CL4   SEARCH OR NORMAL I/O REQUESTS HITS
BYTE1215 DS    CL4   WRITE NORMAL I/O REQUESTS
BYTE1619 DS    CL4   DASD FAST WRITE I/O REQUESTS
BYTE2¯23 DS    CL4   SEARCH OR READ SEQUENTIAL I/O REQUESTS
BYTE2427 DS    CL4   SEARCH OR READ SEQUENTIAL I/O REQUEST HITS
BYTE2831 DS    CL4   WRITE SEQUENTIAL I/O REQUESTS
BYTE3235 DS    CL4   DASD FAST WRITE SEQUENTIAL I/O REQUEST HITS
BYTE3639 DS    CL4   S/R CACHE FAST WRITE I/O REQUESTS
BYTE4¯43 DS    CL4   S/R CACHE FAST WRITE I/O REQUEST HITS
BYTE4447 DS    CL4   CACHE FAST WRITE I/O REQUESTS
BYTE4851 DS    CL4   CACHE FAST WRITE I/O REQUEST HITS
BYTE5255 DS    CL4   INHIBIT CACHE LOADING I/O REQUESTS
BYTE5659 DS    CL4   BYPASS CACHE I/O REQUESTS
BYTE6¯63 DS    CL4   SEQUENTIAL DASD TO CACHE TRANSFER OPERATIONS
BYTE6467 DS    CL4   DASD TO CACHE TRANSFER OPERATIONS
BYTE6871 DS    CL4   CACHE TO DASD TRANSFER OPERATIONS
BYTE7275 DS    CL4   DASD FAST WRITE OPERATIONS FORCED TO ACCESS...
BYTE7679 DS    CL4   DASD FAST WRITE NORMAL WRITE OPERATION COUNTS
BYTE8¯83 DS    CL4   DASD FAST WRITE SEQUENTIAL WRITE OPER. COUNTS
BYTE8487 DS    CL4   RESERVED, ZEROS
BYTE88   DS    CL1   DEVICE STATUS - GROUP 2
BYTE8993 DS    CL5   RESERVED, ZEROS
BYTE9495 DS    CL2   SUBSYSTEM IDENTIFIER (SSI)
FILLER   DS    CL8¯  FILLER
DSECTIEF DSECT
         IEFUCBOB            UCB MACRO ID
         CVT   DSECT=YES
         IECDDCE
         DCBD  DSORG=PS     DUMMY SECTION
         END


Szczepan Kowalski
Software Specialist
The Johannesburg Stock Exchange (South Africa)                c Xephon 1996

