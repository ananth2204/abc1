An ISPF hypertext edit macro

HTX is a useful edit macro for moving between ISPF displays.

If you invoke HTX while pointing to a dataset name in your
document, HTX will start an ISPF edit of that file, then return to
your present position after you finish that edit.  If you invoke
HTX while pointing to a member name in your document, HTX
will start an ISPF edit of that member, then return to your present
position after you finish that edit.

If HTX doesn't find the requested member in the current PDS, it
will look in the last alternate library you specified for the current
edit profile (eg PLI, ASM, CNTL, etc).  If the member isn't in the
alternate library, or if you haven't yet specified one, HTX will ask
you to name an alternate library to search and will remember that
library for future searches.

This is handy if you need to:

¥   Look up COPYLIB members to verify variable names and
types.

¥   Change a DATALIB member or PROC referenced in a piece
of JCL.

¥   Compare external subroutines, and their CALLing statements.

¥   Examine COPY members referenced in long CICS tables.

¥   Edit chapters in a TEXT PDS imbedded via SCRIPT .IM
tags.

HTX also allows you the option of specifying the member name
or a full dataset name on the ISPF COMMAND line, if the
desired member is not referenced in your document or the member
is in a different PDS.

HTX is especially handy when assigned to an ISPF program
function key.  Enter KEYS at the ISPF edit COMMAND line, and
replace the entry for PF12 for example with HTX.  This will set
up PF12 as an HTX command. You then need only point to a
dataset name or member name in your document, and press PF12,
to edit that member.

EXAMPLE ONE - EDITING PL/I SUBROUTINES

Get into ISPF edit on your base document.  Type HTX at the
COMMAND line, but don't press ENTER yet.  Point the cursor at
the desired member name (eg DPSGTRV), then press ENTER.
The cursor can be anywhere within the member name.

EDIT ----- SSVDPS.#0032.PLI(DPSGWOS) - 01.42 ----------------
COMMAND ===> HTX
025300  %SKIP;
025400                        PUT SKIP LIST('CALL TRVL MODULE');
025500                        /* CALL MODULE TO DO ALL TRAVEL */
025600                        /* CALCULATIONS.                */
025700                        CALL DPSGTRV(
025800                                 DCLDPDWOHD.NUM_WKORD,
025900                                 DCLDPDWODAY.DTE_WKORD_WORKED,
026100                                 LAST_EMP_ID,
 ...                                    ...
HTX will put you into edit mode on the desired member.
EDIT -----   SSVDPS.#0032.PLI(DPSGTRV) - 01.05 ----------------
COMMAND ===>
****** ***************************** TOP OF DATA *************
000100  DPSGTRV:PROCEDURE(NUM_WKORD,
000200                    DTE_WKORD_WORKED,
000300                    CDE_EMP_ID,
000500                    CDE_EMP_ACTV,
  ...                       ....

EXAMPLE TWO - SETTING UP HTX  AS A PF KEY

Enter the command KEYS to display your ISPF PF keys.  Change
one of your PF keys (eg PF12) to HTX.

---------------- PF KEY DEFINITIONS AND LABELS - ALTERNATE KEYS ------
COMMAND ===>
NOTE: The definitions and labels below apply only to terminals with 24
PF1  ===> help
PF2  ===> split

   etc

PF12 ===> htx

PF1  LABEL ===>            PF2  LABEL ===>            PF3  LABEL ===>
PF4  LABEL ===>            PF5  LABEL ===> noshow     PF6  LABEL ===>
PF7  LABEL ===> noshow     PF8  LABEL ===> noshow     PF9  LABEL ===>
PF10 LABEL ===>            PF11 LABEL ===>            PF12 LABEL ===>

Press ENTER key to display primary keys.  Enter END command to exit.

EXAMPLE THREE - EDITING CICS TABLES USING A PF KEY

Get into ISPF edit on your base document.  Point the cursor at the
desired member name (eg MJCPPT), then press your HTX key (ie
PF12).  The cursor can be anywhere within the member name.

EDIT ----- CICS170.TABLES(DFHPPTMI) - 01.89 -----------------
COMMAND ===>
****** ***************************** TOP OF DATA *************
000100 PPTMI    TITLE 'PROCESSING PROGRAM TABLE  ---  CICS/VS 1.7.0'
000200          DFHPPT TYPE=INITIAL,                               X
000300                SUFFIX=MI
000400 *                                 TABLE ENTRIES FOR:
000500          COPY CCHPPT              - CONTRACTOR CHARGES PPT
000600          COPY MJCPPT              - MJC PPT ENTRIES
000700          COPY TBSPPT              - TELEPHONE BUDGET SYSTEM
      ...           ...                    ...

HTX will put you into edit mode on the desired member.

EDIT ----- CICS170.TABLES(MJCPPT) - 01.04 -------------------
COMMAND ===>
****** ***************************** TOP OF DATA *************
000400          DFHPPT TYPE=ENTRY,PROGRAM=MJSNT
000410          DFHPPT TYPE=ENTRY,PROGRAM=MJSNTA
000420          DFHPPT TYPE=ENTRY,PROGRAM=MJINIT
      ...           ...                    ...

EXAMPLE FOUR - EDITING MEMBERS OF OTHER LIBRARIES

Get into edit on some JCL, point to a PROC name, and press your
HTX PF key.

EDIT ----- SSVSAG.#0456.CNTL(SY0201T) - 01.05 --------------- COLUMNS
COMMAND ===>                                                  SCROLL =
****** ***************************** TOP OF DATA *********************
==MSG> -CAUTION- PROFILE CHANGED TO "NUMBER ON STD" (FROM "NUMBER OFF"
==MSG>        DATA HAS VALID STANDARD NUMBERS.
000100 //SY0201   JOB ,'PAC2 UPDATE',CLASS=C,MSGCLASS=Q
000300 //* PAC2 WEDNESDAY UPDATE RUN - TEST
000500 //SY0201 EXEC TSY0201,TEMPDSN=&&,
000510 //  PRODSER=TSOS01,DLIB='SSV.DATALIB'
000511 //STEP1B.SYSUT1 DD DSN=SSVPAC2.TMC.PAC2
000520 //STEP6.M4OLD DD DSN=PAC2.MASTER(0)
000600 //STEP6.M4SUBF1 DD UNIT=3380,VOL=SER=TSOS01,SPACE=( ...
...
****** **************************** BOTTOM OF DATA *******************

You will be prompted for an alternate library for CNTL members
if this is the first time you HTX a CNTL dataset.

--------------------  HyperText PROFILE SPECIFICATION :  CNTL      ---
COMMAND ===>
Enter the fully qualified data set name of an alternate
library to search for TSY0201

   DATA SET NAME ===>


   Press END to abort search.

Enter the name of the library you want searched.


--------------------  HyperText PROFILE SPECIFICATION :  CNTL      ---
COMMAND ===>

   Enter the fully qualified data set name of an alternate
   library to search for TSY0201

   DATA SET NAME ===> 'SYS1.SSVPROC'


   Press END to abort search.

HTX will start an edit on the requested member of that library.

EDIT ----- SYS1.SSVPROC(TSY0201) - 01.12 --------------------
COLUMNS
COMMAND ===>                                                  SCROLL =
****** ***************************** TOP OF DATA *********************
000100 //PAC2UPDT PROC SOUT=N,RUNLIB='DPOPROD.MISC.EXLIB',
000110 //         TEMPDSN='PAC2.',
000111 //         PERMDSN='PAC2',
000120 //         PRODSER=PROD03,
000200 //         DLIB='DPOPROD.BATCH.DATALIB'
000300 //************************************************************
000400 //*  PAC2 UPDATE.
000500 //*  USER PREPARED INPUT IS USED TO UPDATE PAC2 MASTER.
000600 //*  NEW EDITION IS WRITTEN TO BOTH DISK AND TAPE.
000601 //*************************************************************
000602 //*
000603 //* COPY THE PAC2 TIME CHARGE ENTRIES FROM PAC2.TMC.PAC2

You can return to your previous edit from this point, if you like.
Alternatively, you can issue HTX further along, using whatever
names you find in this new file.  You can HTX into a fully
qualified dataset name.

EDIT ----- SYS1.SSVPROC(TSY0201) - 01.12 -------------------- COLUMNS
COMMAND ===> HTX                                              SCROLL =
002400 //SYSDBOUT  DD SYSOUT=&SOUT
002500 //PAC2FKW   DD DSN=SSD.DATALIB(PCHDUPDT),DISP=SHR,
002600 //           DCB=BLKSIZE=6160
002700 //          DD DSN=PAC2.UPDATE,DISP=OLD
002710 //          DD DSN=&TEMPDSN.PFUNLD,DISP=OLD
002800 //PAC2INP   DD DSN=&TEMPDSN.PFINP,DISP=(,CATLG,DELETE),
002900 //           DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160),
003000 //           SPACE=(TRK,(30,2),RLSE),UNIT=SYSDA,VOL=SER=&PRODSE

and HTX will follow the dataset name that you chose.

EDIT ----- SSD.DATALIB(PCHDUPDT) - 01.99 --------------------
COLUMNS
COMMAND ===>                                                  SCROLL =
****** ***************************** TOP OF DATA *********************
000100
000200
000300 EN=S,FUN=102288UASPI          2  * ,
000400      CRS=      ***    *  *,
000500      PRS=   1     1      11,
****** **************************** BOTTOM OF DATA *******************

The file you point to can also be a sequential file.

EDIT ----- SYS1.SSVPROC(TSY0201) - 01.12 -------------------- COLUMNS
COMMAND ===> HTX                                              SCROLL =
002700 //          DD DSN=PAC2.UPDATE,DISP=OLD
002710 //          DD DSN=&TEMPDSN.PFUNLD,DISP=OLD
002800 //PAC2INP   DD DSN=&TEMPDSN.PFINP,DISP=(,CATLG,DELETE),
002900 //           DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160),
003000 //           SPACE=(TRK,(30,2),RLSE),UNIT=SYSDA,VOL=SER=&PRODSE
003100 //PAC2SFC   DD DSN=&TEMPDSN.PFSFC,DISP=(,CATLG,DELETE),
003200 //           DCB=(RECFM=F,LRECL=80,BLKSIZE=6160),
003300 //           SPACE=(TRK,(1,1),RLSE),UNIT=SYSDA,VOL=SER=&PRODSER
 ...           ...

HTX will follow full dataset names even without members.

EDIT ----- PAC2.UPDATE -------------------------------------- COLUMNS
COMMAND ===> _                                                SCROLL =
****** ***************************** TOP OF DATA *********************
000010
000020
000030 EN=3,ST=X,PRO=807049,PL=3781,FD=102588,BE=0,EQT=001.0,
000040 EN=6,ST=C,PRO=707458,RE=2654,AC=1000,RGT=07.0,
000050 EN=6,ST=C,PRO=888022,RE=2654,AC=1000,RGT=15.0,
000060 EN=6,ST=C,PRO=888025,RE=2654,AC=1000,RGT=02.0,PRT=01.0,
000070 EN=6,ST=C,PRO=888026,RE=2654,AC=1000,RGT=08.0,PRT=01.0,
000080 EN=6,ST=N,PRO=992044,RE=1843,AC=1000,RGT=37.5,
      ...           ...                    ...

HTX EDIT MACRO

ISREDIT MACRO (HTXPRM) NOPROCESS
/*  HTX EDIT MACRO,                                                  */
/*  DEVELOPED BY ABE GETZLER,                                        */
/*  FUNCTION:  HYPERTEXT EDITOR OF INCLUDES, CALLS, AND COPIES.      */
/*  USAGE:     PLACE CURSOR ON A MEMBER NAME, AND PRESS  HTX PFKEY,  */
/*             OR, POINT TO A FULL DSNAME, AND PRESS  HTX PFKEY,     */
/*             OR, ENTER  HTX MEMBERNAME AT COMMAND===> LINE,        */
/*             OR, ENTER  HTX DSNAME     AT COMMAND===> LINE.        */
/* CONTROL LIST CONLIST SYMLIST         /*                          */
   CONTROL NOMSG
   ISPEXEC CONTROL ERRORS RETURN
IF &HTXPRM =  THEN -
  DO   /* NO PARM WAS SUPPLIED, SO MUST EXTRACT A  FILE  NAME.    */
    ISREDIT (L0,C0) = CURSOR        /* SAVE INITIAL POSITION      */
    SET L0 = &EVAL(&L0)
    SET C0 = &EVAL(&C0)
    ISREDIT SEEK P'^' SUFFIX NEXT   /* FIND THE END OF THE NAME   */
    ISREDIT (L2,C2) = CURSOR
    SET &L2 = &EVAL(&L2)
    SET &C2 = &EVAL(&C2)
    ISREDIT SEEK P'@' PREFIX PREV   /* FIND THE BEGINNING OF THE NAME */
    ISREDIT (L1,C1) = CURSOR
    SET &L1 = &EVAL(&L1)
    SET &C1 = &EVAL(&C1)
    IF &L1 NE &L2 ] &C1 = &C2 ] (&C2 - &C1) > 8 THEN -
      DO                            /* SKIP OVER GARBAGE          */
        ISREDIT SEEK P'^' SUFFIX NEXT
        EXIT CODE(8)
      END
    ISREDIT (PROFLINE) = LINE .ZCSR /* EXTRACT THE MEMBER NAME    */
    SET &MEMBER = &SUBSTR(&C1:&C2,&NRSTR(&PROFLINE))
    /* TRY TO EXTRACT A FULL DATASET NAME FROM JCL                */
    ISREDIT SEEK ',' NEXT           /* LOOK FOR END OF DSN AT ',' */
    ISREDIT (LRCOMMA,CRCOMMA) = CURSOR
    SET LRCOMMA = &EVAL(&LRCOMMA)
    SET CRCOMMA = &EVAL(&CRCOMMA)
    ISREDIT CURSOR = &L0 &C0        /* RESET POSITION             */
    ISREDIT SEEK "'" NEXT           /* LOOK FOR DSN END AT BLANK  */
    ISREDIT (LRQUOTE,CRQUOTE) = CURSOR
    SET LRQUOTE = &EVAL(&LRQUOTE)
    SET CRQUOTE = &EVAL(&CRQUOTE)
    ISREDIT CURSOR = &L0 &C0        /* RESET POSITION             */
    ISREDIT SEEK ' ' NEXT           /* LOOK FOR DSN END AT BLANK  */
    ISREDIT (LRSPACE,CRSPACE) = CURSOR
    SET LRSPACE = &EVAL(&LRSPACE)
    SET CRSPACE = &EVAL(&CRSPACE)
    ISREDIT CURSOR = &L0 &C0        /* RESET POSITION             */
    ISREDIT SEEK '=' PREV           /* LOOK FOR START OF DSN AT ',' */
    ISREDIT (LLEQUAL,CLEQUAL) = CURSOR
    SET LLEQUAL = &EVAL(&LLEQUAL)
    SET CLEQUAL = &EVAL(&CLEQUAL)
    ISREDIT CURSOR = &L0 &C0        /* RESET POSITION             */
    ISREDIT SEEK "'" PREV           /* LOOK FOR START OF DSN AT ' ' */
    ISREDIT (LLQUOTE,CLQUOTE) = CURSOR
    SET LLQUOTE = &EVAL(&LLQUOTE)
    SET CLQUOTE = &EVAL(&CLQUOTE)
    ISREDIT CURSOR = &L0 &C0        /* RESET POSITION             */
    SET LEFTDSN = 0                 /* INITIALIZE LEFT OF DSN     */
    IF &LLEQUAL = &L0 && &CLEQUAL > &LEFTDSN && &CLEQUAL < &C0 THEN +
      SET LEFTDSN = &CLEQUAL + 1
    IF &LLQUOTE = &L0 && &CLQUOTE >= &LEFTDSN && &CLQUOTE < &C0 THEN +
      SET LEFTDSN = &CLQUOTE + 1
    SET RIGHTDSN = 73               /* INITIALIZE RIGHT OF DSN    */
    IF &LRSPACE = &L0 && &CRSPACE > &C0 THEN +
      SET RIGHTDSN = &CRSPACE - 1
    IF &LRCOMMA = &L0 && &CRCOMMA < &RIGHTDSN && &CRCOMMA > &C0 THEN +
      SET RIGHTDSN = &CRCOMMA - 1
    IF &LRQUOTE = &L0 && &CRQUOTE <= &RIGHTDSN && &CRQUOTE > &C0 THEN +
      SET RIGHTDSN = &CRQUOTE - 1
    IF (&RIGHTDSN - &LEFTDSN <= 44) && (&RIGHTDSN > &LEFTDSN) && +
       (&RIGHTDSN < 73) && (&LEFTDSN > 0) THEN +
      DO
        SET DSNAME = &SUBSTR(&LEFTDSN:&RIGHTDSN,&NRSTR(&PROFLINE))
        IF (&SYSDSN('&DSNAME') = OK) ] +
           (&SYSDSN('&DSNAME') = &STR(MEMBER NOT FOUND)) THEN +
          DO
            ISPEXEC  EDIT DATASET('&DSNAME')
            IF &LASTCC <= 4 THEN EXIT CODE(8)
          END
        ELSE +
          DO
            ISREDIT (THISDSN) = DATASET
            SET DSNAME = &THISDSN(&MEMBER)
          END
      END
    ELSE +
      DO
        ISREDIT (THISDSN) = DATASET
        SET DSNAME = &THISDSN(&MEMBER)
      END
    ISREDIT (THISMEMB) = MEMBER
    IF (&SYSDSN('&DSNAME') NE OK) ] +
       (&MEMBER = &THISMEMB) +
       THEN +
      DO                            /* COMPLAIN IF NO SUCH FILE   */
        IF (&SYSDSN('&DSNAME') = &STR(MEMBER NOT FOUND)) ] +
           (&MEMBER = &THISMEMB) +
           THEN +
            DO
            ISREDIT (P) = PROFILE
            IF &LENGTH(&P) > 6 THEN +
               SET P = &SUBSTR(1:6,&P)
            SET HT&P = &STR()
            ISPEXEC VGET (HT&P) PROFILE
            SET LCC = &LASTCC
            SET HTLIB = &&HT&P
            SET HTLIB = &HTLIB
            SET HTLIB = &HTLIB
            IF (&LCC NE 0) ] (&LENGTH(&HTLIB) < 1) THEN +
             DO
                SET HTLIB = &STR( )
                ISPEXEC VPUT (P,HTLIB,MEMBER) SHARED
                ISPEXEC DISPLAY PANEL(HT001)
                IF &LENGTH(&HTLIB) = 0 THEN EXIT CODE(0)
                SET &HT&P = &HTLIB
                ISPEXEC VPUT (HT&P) PROFILE
             END
            IF &SUBSTR(1:1,&HTLIB) = '  THEN +
              SET DSNAME = &SUBSTR(2:&LENGTH(&HTLIB)-1,&HTLIB)(&MEMBER)
            ELSE +
              SET DSNAME = &HTLIB(&MEMBER)
            IF &SYSDSN('&DSNAME') NE OK THEN +
              DO
                ISPEXEC VPUT (P,HTLIB,MEMBER) SHARED
                ISPEXEC DISPLAY PANEL(HT001)
                IF &LENGTH(&HTLIB) = 0 THEN EXIT CODE(0)
                SET &HT&P = &HTLIB
                ISPEXEC VPUT (HT&P) PROFILE
              END
            ELSE +
              SET HTLIB = &STR(&&HT&P)
            IF &SUBSTR(1:1,&HTLIB) = '  THEN +
              SET DSNAME = &SUBSTR(2:&LENGTH(&HTLIB)-1,&HTLIB)(&MEMBER)
            ELSE +
              SET DSNAME = &HTLIB(&MEMBER)
            ISREDIT SEEK P'^' SUFFIX NEXT
            ISREDIT SEEK P'^' NEXT
            ISPEXEC  EDIT DATASET('&DSNAME')
            IF &LASTCC <= 4 THEN EXIT CODE(8)
          END
        SET &ZEDSMSG = &STR((&MEMBER): &SYSDSN('&DSNAME'))
        SET &ZEDLMSG = &STR('&DSNAME': &SYSDSN('&DSNAME'))
        ISPEXEC SETMSG MSG(ISRZ000)
        ISREDIT SEEK P'^' SUFFIX NEXT
        ISREDIT SEEK P'^' SUFFIX NEXT
        EXIT CODE(8)
      END
    ISPEXEC  EDIT DATASET('&DSNAME')
    IF &LASTCC > 4 THEN -
      DO
        SET &ZEDSMSG = "UNABLE TO EDIT '&DSNAME'"
        SET &ZEDLMSG = "UNABLE TO EDIT '&DSNAME'"
        ISPEXEC SETMSG MSG(ISRZ000)
        ISREDIT SEEK P'^' SUFFIX NEXT
        ISREDIT SEEK P'^' SUFFIX NEXT
        EXIT CODE(8)
      END
    EXIT
  END
ELSE -
  DO                                /* A PARAMETER WAS SUPPLIED   */
    IF &LENGTH(&HTXPRM) > 8 THEN -
      DO                            /* FULL DSNAME SUPPLIED       */
        SET MEMBER = &HTXPRM
        SET DSNAME = &HTXPRM        /* ACCOUNT FOR TSO CONVENTIONS */
        IF &SUBSTR(1:1,&DSNAME) = '  THEN -
          SET DSNAME = &SUBSTR(2:&LENGTH(&DSNAME)-1,&DSNAME)
        ELSE -
          SET DSNAME = &SYSUID..&DSNAME
      END
    ELSE -
      DO                            /* PROBABLY JUST A MEMBER NAME */
        SET &MEMBER = &HTXPRM
        ISREDIT (DSNAME) = DATASET
        SET DSNAME = &DSNAME(&MEMBER)
      END
    IF (&SYSDSN('&DSNAME') NE OK) +
       && (&SYSDSN('&DSNAME') NE &STR(MEMBER NOT FOUND)) THEN +
      DO                            /* NOTIFY USER OF NONEXISTENCE */
        SET &ZEDSMSG = &STR((&MEMBER): &SYSDSN('&DSNAME').)
        SET &ZEDLMSG = &STR('&DSNAME': &SYSDSN('&DSNAME').)
        ISPEXEC SETMSG MSG(ISRZ000)
        EXIT CODE(12)
      END
    ISPEXEC  EDIT DATASET('&DSNAME')
    EXIT
  END

ISPF PANEL

)ATTR DEFAULT(%+_)
      /*  % TYPE(TEXT) INTENS(HIGH)      defaults displayed for      */
      /*  + TYPE(TEXT) INTENS(LOW)       information only            */
      /*  _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)             */
  $ TYPE(INPUT) INTENS(LOW) PAD(_)    /* input field padded with '_' */
  ! TYPE(INPUT) INTENS(LOW) PAD(' ')  /* input field padded with ' ' */
  @ TYPE(OUTPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)
)BODY
%--------------------  HyperText PROFILE SPECIFICATION : @P        %------------
%COMMAND ===>_ZCMD
+
%
+   Enter the fully qualified data set name of an alternate
+   library to search for@MEMBER      +
+
+
+   DATA SET NAME ===>_HTLIB

+
+
+   Press%END+to abort search.
+
)INIT
  .HELP = TUTORPAN           /* Insert name of tutorial panel    */
     VGET (P,HTLIB,MEMBER) SHARED
)PROC
    VER (&HTLIB,DSNAME)
    VER (&HTLIB,NB)
)END


Abe Getzler
Senior Technical Analyst
Brooklyn Union Gas (USA) © Brooklyn Union Gas 1989

