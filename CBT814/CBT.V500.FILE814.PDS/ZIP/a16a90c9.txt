PDS analysis routine

Typical invocation EXEC

/* REXX */
ADDRESS ISPEXEC "SELECT CMD(%PDSANL)" /* PDSANL Processing Exec */

PDSANL processing EXEC

/* REXX - PDS SELECTION */
vr = '1.1' /* version.release */
ADDRESS ISPEXEC
"VGET (DSNPDS) PROFILE"
msg = ''
DO FOREVER /* outer loop */
  "DISPLAY PANEL(PDANL001) MSG("msg")"
  IF RC > 0 THEN LEAVE
  IF LEVEL <> ' ' THEN
    irc = makedsnlist()
  IF irc > 4 THEN ITERATE
  lmsg = SYSDSN(dsnpds) /* test whether dataset exists */
  IF lmsg <> 'OK' THEN DO
    msg = 'PDANL000'
    smsg = 'ALLOCATION ERROR'
    ITERATE
  END
  /* test whether PO dataset */
  rc = LISTDSI(dsnpds 'DIR')
  IF sysdsorg <> 'PO' THEN DO
    msg = 'PDANL004'
    ITERATE
  END
  IF sysmembers = 0 THEN DO
    msg = 'PDANL006' /* no members */
    ITERATE
  END
  /* process index */
  totsize = 0 /* current size */
  nosize = 0 /* member without statistics */
  nsel = 0 /* number of selected entries */
  nign = 0 /* number of ignored entries */
  CALL dirlist /* create directory list */
  IF nsel > 0 THEN DO
    "TBTOP temp" /* position at top of table */
    OP = ''
    pan = 'PDANL002' /* table display panel */
    csr = ''
    DO FOREVER
      "TBDISPL temp PANEL("pan") CSRROW("csr")"
      pan = ''
      IF RC > 4 THEN LEAVE
      /* create normalized dataset name */
      dsn = STRIP(dsnpds,'T',"'")
      dsn = STRIP(dsn,'T',' ')"("memname
      dsn = STRIP(dsn,'T',' ')")'"
      SELECT
        WHEN cmd = 'L' THEN DO
          /* locate member */
          "TBTOP temp"
          "TBVCLEAR temp"
          memname = oprd
          "TBSCAN temp ARGLIST(memname) CONDLIST(GE) POSITION(csr)"
          pan = 'PDANL002'
        END
        WHEN op = 'B' THEN DO
          /* browse member */
          "CONTROL ERRORS RETURN"
          "CONTROL DISPLAY SAVE"
          "BROWSE DATASET("dsn")"
          IF RC = 0
            THEN msg = '*browsed'
            ELSE msg = '*error' RC
          "TBMOD temp SAVE(msg)"
          "CONTROL DISPLAY RESTORE"
          "CONTROL ERRORS CANCEL"
        END
        WHEN op = 'E' THEN DO
          /* edit member */
          "CONTROL ERRORS RETURN"
          "CONTROL DISPLAY SAVE"
          "EDIT DATASET("dsn")"
          IF RC = 0
            THEN msg = '*edited'
            ELSE msg = '*error' RC
          "TBMOD temp SAVE(msg)"
          "CONTROL DISPLAY RESTORE"
          "CONTROL ERRORS CANCEL"
        END
        WHEN op = 'D' THEN DO
          /* delete member */
          "LMMDEL DATAID("div") MEMBER("memname")"
          IF RC = 0
            THEN DO
              msg = '*deleted'
              IF spfsize <> '' THEN totsize = totsize - spfsize
            END
            ELSE
            IF RC = 8
              THEN msg = '*not found'
              ELSE msg = '*error:' RC
            "TBMOD temp SAVE(msg)"
        END
        WHEN op = 'X' THEN DO
          /* exclude member from display */
          "TBDELETE temp"
          nign = nign+1
          IF spfsize <> '' THEN totsize = totsize - spfsize
        END
        OTHERWISE
          NOP
      END
    END
  END
  msg = 'PDANL005'
  "TBEND temp" /* release table */
  "LMCLOSE DATAID("div")"
END
EXIT
dirlist:
/* member list */
  "TBCREATE temp KEYS(memname) NAMES(spfcdate spfmdate spfsize spfuid)",
  "NOWRITE REPLACE"
  IF vol = ' '
    THEN volparm = ''
    ELSE volparm = "VOLUME("vol")"
  IF mode = 'I'
    THEN shrparm = 'SHR'
    ELSE shrparm = 'SHRW'
  "LMINIT DATAID(div) DATASET("dsnpds") ENQ("shrparm")" volparm
  IF RC <> 0 THEN DO;
    SAY "Open error: '"dsnpds"'";
    EXIT 8;
  END;
  "LMOPEN DATAID("div") OPTION("openmode")"
  DO WHILE RC < 8
    memname = ' '
    "LMMLIST DATAID("div") MEMBER(memname) STATS(YES)"
    IF RC > 4 THEN LEAVE
    spfcdate = ZLCDATE
    spfmdate = ZLMDATE
    spfsize = ZLCNORC
    spfuid = ZLUSER
    ok = 0
    /* test ranges */
    IF (spfcdate >= cdat1) & (spfcdate <= cdat2) ,
     & (spfmdate >= mdat1) & (spfmdate <= mdat2) ,
     & (spfsize >= siz1) & (spfsize <= siz2) ,
     THEN ok = 1
    /* test userid */
    IF uid <> '' THEN DO
      IF (spfuid <> uid) THEN ok = 0
    END
    IF spfsize = '' THEN DO
      nosize = nosize+1
      ok = 1
    END
    /* test member name */
    len = LENGTH(mname1)
    IF len > 0 THEN
      IF (SUBSTR(memname,1,len) < mname1) THEN ok = 0
    len = LENGTH(mname2)
    IF len > 0 THEN
      IF (SUBSTR(memname,1,len) > mname2) THEN ok = 0
    IF ok = 1 THEN DO
      "TBADD temp"
      nsel = nsel+1
      IF spfsize <> '' THEN totsize = totsize + spfsize
    END
  END
  RETURN
makedsnlist:
  n = 0 /* running counter */
  "CONTROL DISPLAY LOCK"
  "DISPLAY MSG(PDANL003)"
  "TBCREATE dsntab KEYS(dsnpds) NOWRITE REPLACE"
  "LMDINIT LISTID(did) LEVEL("level")"
  olddsn = dsnpds
  dsnpds = ' '
  "CONTROL DISPLAY LOCK"
  "DISPLAY MSG(PDANL003)" /* MSG: catalog being searched */
  DO WHILE RC = 0
    "LMDLIST LISTID("did") OPTION(LIST) DATASET(dsnpds) STATS(YES)"
    IF (RC = 0 & zdldsorg = 'PO') THEN "TBADD dsntab"
    n = n+1
    IF n//10 = 0 THEN DO /* display progress message every 10th entry */
      "CONTROL DISPLAY LOCK"
      "DISPLAY MSG(PDANL007)"
    END
  END
  "TBTOP dsntab"
  pan = 'PDANL003'
  dsnpds = olddsn
  "TBDISPL dsntab PANEL("pan")"
  dsnpds = "'"dsnpds"'"
  RETURN RC

PDANL001 Panel

)ATTR
_ TYPE(INPUT) CAPS(ON) JUST(LEFT)
# TYPE(INPUT) CAPS(ON) JUST(RIGHT) PAD(0)
@ TYPE(OUTPUT) SKIP(ON)
% TYPE(TEXT) INTENS(HIGH) SKIP(ON)
+ TYPE(TEXT) INTENS(LOW) SKIP(ON)
)BODY
%PDSANL.1(&VR) ------ Partitioned Data Set Analysis/Selection -----------------+
%COMMAND ===>_ZCMD
+
+PO-dataset definition:
%               Dataset name%===>_DSNPDS
%            Processing mode%===>_Z+          (%I+=input,%O+=output)
%                     Volume+===>_VOL   +     (if data set not catalogued)
+Selection parameters:
%         Member name (from)+===>_MNAME1  +   (may be generic)
%                       (to)+===>_MNAME2  +   (may be generic)
%        Date created (from)+===>_CDATE1+     (ddmmyy, default 000000)
%                       (to)+===>_CDATE2+     (ddmmyy, default 311299)
%  Date last modified (from)+===>_MDATE1+     (ddmmyy, default 000000)
%                       (to)+===>_MDATE2+     (ddmmyy, default 311299)
%                Size (from)+===>_SIZE1+      (lines, default 00000)
%                       (to)+===>_SIZE2+      (lines, default 99999)
%                     Userid+===>_UID     +   (default, all)
+
+Press %ENTER+to perform analysis/selection
+Press %END +(%&END+) to terminate
+Press %HELP+(%&HEL+) for %Help
)INIT
.ZVARS = 'MODE'
.CURSOR = DSNPDS
&END = PFK(END)
&HEL = PFK(HELP)
&ZCMD   = ' '
IF (&MODE = '') &MODE = 'I'
)PROC
/* test for generic DSN
&A = TRUNC(&DSNPDS,'*')
&LEVEL = ' '
IF (&A = &DSNPDS)
  &A = TRUNC(&DSNPDS,1)
  IF (&A ^= '''')
    &DSNPDS = '''&ZUSER..&DSNPDS'''
  VER (&DSNPDS,NB,DSNAME)
ELSE
  &LEVEL = '&DSNPDS'
&LIST = 'I,O'
&OPENMODE = TRANS(&MODE I,INPUT O,OUTPUT MSG=PDANL001)
VER (&MNAME1,NAME)
VER (&MNAME2,NAME)
/* test date created (from)
&CDAT1 = '00/00/00' /* default
IF (&CDATE1 ^= &Z)
  &DD = TRUNC(&CDATE1,2)
  &MM = .TRAIL
  &MM = TRUNC(&MM,2)
  &YY = .TRAIL
  &CDAT1 = '&YY/&MM/&DD'
/* test date created (to)
&CDAT2 = '99/99/99' /* default
IF (&CDATE2 ^= &Z)
  &DD = TRUNC(&CDATE2,2)
  &MM = .TRAIL
  &MM = TRUNC(&MM,2)
  &YY = .TRAIL
  &CDAT2 = '&YY/&MM/&DD'
/* test date modified (from)
&MDAT1 = '00/00/00'
IF (&MDATE1 ^= &Z)
  &DD = TRUNC(&MDATE1,2)
  &MM = .TRAIL
  &MM = TRUNC(&MM,2)
  &YY = .TRAIL
  &MDAT1 = '&YY/&MM/&DD'
/* test date modified (to)
&MDAT2 = '99/99/99'
IF (&MDATE2 ^= &Z)
  &DD = TRUNC(&MDATE2,2)
  &MM = .TRAIL
  &MM = TRUNC(&MM,2)
  &YY = .TRAIL
  &MDAT2 = '&YY/&MM/&DD'
/* test size
VER (&SIZE1,NUM)
&SIZ1 = '0000'
IF (&SIZE1 ^= &Z) &SIZ1 = &SIZE1
VER (&SIZE2,NUM)
&SIZ2 = '9999'
IF (&SIZE2 ^= &Z) &SIZ2 = &SIZE2
/*
VPUT (MNAME1 MNAME2 CDAT1 CDAT2 MDAT1 MDAT2 SIZ1 SIZ2 UID) SHARED
VPUT (DSNPDS MODE) PROFILE
)END

PDANL002 Panel

)ATTR DEFAULT(%~_)
_ TYPE(INPUT) CAPS(ON) JUST(LEFT)
@ TYPE(OUTPUT) SKIP(ON) JUST(RIGHT)
\ TYPE(OUTPUT) SKIP(ON) JUST(LEFT)
% TYPE(TEXT) INTENS(HIGH) SKIP(ON)
~ TYPE(TEXT) INTENS(LOW) SKIP(ON)
)BODY
%PDSANL.2(&VR) ------ Partitioned Data Set Analysis/Selection ------------------
%COMMAND ===>_ZCMD                                            %SCROLL ===>_SAMT~
~             |
~             +--%L~ocate%member
~Dataset:%&DSNPDS
~                          Total size:@TOTSIZE~lines
~       Original number of selections:@NSEL   ~members
~           Number of entries ignored:@NIGN   ~members
~Number of entries without statistics:@NOSIZE ~members
~+---- Line selection &TEXT
~|
~V name     created   modified   size      ID
~-----------------------------------------------------------------------
)MODEL CLEAR(MSG)
_Z\MEMNAME \SPFCDATE \SPFMDATE @SPFSIZE @SPFUID  \MSG
)INIT
IF (&SAMT = &Z) &SAMT = HALF
.ZVARS='OP'
IF (&MODE = 'I')
  &TEXT = '(X = Exclude, B = Browse, E = Edit)'
ELSE
  &TEXT = '(X = Exclude, B = Browse, E = Edit, D = Delete)'
)REINIT
IF (.MSG = &Z)
  &OP = ' '
  &ZCMD = ' '
REFRESH(TOTSIZE NIGN ZCMD)
)PROC
IF (&MODE = 'I')
  &LIST='X,B,E'
  VER(&OP,LIST,X,B,E,MSG=PDANL001)
ELSE
  &LIST='X,B,E,D'
  VER(&OP,LIST,X,B,E,D,MSG=PDANL001)
/* Command
&CMD=TRUNC(&ZCMD,' ')
&CMD=TRANS(&CMD L,L LOC,L LOCATE,L *,*)
&OPRD=.TRAIL
)END

PDANL003 Panel

)ATTR DEFAULT(%~_)
_ TYPE(INPUT) CAPS(ON) JUST(LEFT)
@ TYPE(OUTPUT) SKIP(ON) JUST(RIGHT)
\ TYPE(OUTPUT) SKIP(ON) JUST(LEFT)
% TYPE(TEXT) INTENS(HIGH) SKIP(ON)
~ TYPE(TEXT) INTENS(LOW) SKIP(ON)
)BODY
%PDSANL.3(&VR) ------ Partitioned Data Set Analysis/Selection ------------------
%COMMAND ===>_ZCMD                                            %SCROLL ===>_SAMT~
~
~              Generic dataset:%&DSNPDS
~+---- Line selection (%S~= Select)
~|
~V dataset name
~-----------------------------------------------------------------------
)MODEL CLEAR(MSG)
_Z\DSNPDS                                          \MSG
)INIT
IF (&SAMT = &Z) &SAMT = HALF
.ZVARS='OP'
)PROC
&LIST='S'
VER(&OP,LIST,S,MSG=PDANL001)
)END

PDANL00 Message Member

PDANL000 '&SMSG'
'&LMSG'
PDANL001 'invalid line selection'
'valid entries: &LIST'
PDANL002 'invalid generic DSN'
'prefix missing from dataset name'
PDANL003 'catalog being searched'
'catalog is being seached for matching generic names'
PDANL004 'dataset not PO'
'DSORG is &sysdsorg but should be PO'
PDANL005 'no selections made'
'no selections made'
PDANL006 'no members'
'dataset is empty'
PDANL007 '&n entries searched'
' '

Sample Display (Selection)

PDSANL.1(1.1) ------ Partitioned Data Set Analysis/Selection -----------------
COMMAND ===>

PO-dataset definition:
               Dataset name ===> SYSEXEC.EXEC
            Processing mode ===> O           ( I =input, O =output)
                     Volume ===>             (if data set not catalogued)
Selection parameters:
         Member name (from) ===>             (may be generic)
                       (to) ===>             (may be generic)
        Date created (from) ===>             (ddmmyy, default 000000)
                       (to) ===>             (ddmmyy, default 311299)
  Date last modified (from) ===> 010295      (ddmmyy, default 000000)
                       (to) ===>             (ddmmyy, default 311299)
                Size (from) ===>             (lines, default 00000)
                       (to) ===>             (lines, default 99999)
                     Userid ===>             (default, all)

Press  ENTER to perform analysis/selection
Press  END  ( PF15 ) to terminate
Press  HELP (      ) for  Help

Sample Display (Selection Results)

PDSANL.2(1.1) ------ Partitioned Data Set Analysis/Selection ----  ROW 1 OF 12
COMMAND ===>                                                  SCROLL ===> HALF
             !
             +-- L ocate member
Dataset: 'TSOUS01.SYSEXEC.EXEC'
                          Total size:      50 lines
       Original number of selections:       6 members
           Number of entries ignored:       0 members
Number of entries without statistics:       1 members
+---- Line selection (X = Exclude, B = Browse, E = Edit, D = Delete)
!
V name     created   modified   size      ID
-----------------------------------------------------------------------
  AX       95/01/14  95/02/10         5  TSOUS01
  B01      95/02/14  95/02/14        15  TSOUS01
  C12      94/12/23  95/02/13        15  TSOUS01
  GOALT
  PAN6G    95/02/16  95/02/16        14  TSOUS01
  XG       95/02/12  95/02/13         1  TSOUS01
 ******************************* BOTTOM OF DATA ********************************


A S Rudd
Technical Consultant (Germany)                                 c A S Rudd 1995

