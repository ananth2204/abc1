TSO session security - further advice
The TSOLOCK program described in the article Unattended ACF2 TSO session
security [MVS Update, July 1988, pages 41-43] is similar to one I wrote several
years ago and I have a few words of caution to share about its use.
It is possible to break out of TSOLOCK without entering the password if you have
the right sort of terminal.
On an SNA 3270, the ATTN key is disabled between the time you press it and the
time the system responds.  On a non-SNA 3270, it is possible to queue up an
extra attention interrupt by pressing PA1, then RESET, then PA1 again before the
system responds.  If you repeat this quickly, enough times, it is possible to
catch the program while it is in the STAX exit, but before it has re-established
the STAX.  This causes TSO to terminate the program, just as if it had no STAX
exit.
We countered this with a brute-force approach.  Instead of issuing one STAX at
the beginning of the program, we issued 50 in a loop.  While inelegant, it was
effective, because there was no way a user could stack up 50 PA1s before one of
the STAX exits responded.
On the subject of elegance, the program would be somewhat more readable if the
instruction at TSOL0030 were replaced with a test of a flag, followed by a
conditional branch.  Programs that modify their instructions are hard to follow,
and are a real problem if you try to make them re-entrant.
The usefulness of a TSO lock is somewhat diminished when you use it with a
multi-session package, such as NCCF/TAF, CA-VMAN, or one of the others on the
market.  Although your TSO session may be locked, if the package has a ‘hot key’
for switching between sessions, a person can switch to another session, which
may not be secured.
With some packages, you can switch to the multi-session manager, kill the TSO
session, and have the package automatically re-log you on to TSO, without having
to enter your password.  In this case, using TSOLOCK may make you less safe,
because it creates a false sense of security.

Lynn Grant
Technical Consultant (USA)    © Xephon 1988

































