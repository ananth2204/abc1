Maintaining ISPF EDIT labels across sessions


EDIT ---- ANDREW.ASM(ENF2)  - 01,29 ---------------------------COLUMNS 001 072
COMMAND ===>                                                  SCROLL ===> CSR
.TEST  TESTAUTH DS    0H
009700          TESTAUTH FCTN=1              IS THIS PROGRAM AUTHORIZED ?
009800          BZ    SETCOMMS               YES: CONTINUE
009900          WTO   'ENF001: TESTAUTH RETURN NON-AUTHORIZED'
010000          B     CLOSEUP                GO AND CLEAN UP
010100 *---------------------------------------------------------------------*
010200 * SET UP OPERATOR COMMUNICATIONS INTERFACE                            *
010300 *---------------------------------------------------------------------*
.COMMS SETCOMMS DS    0H
010500          EXTRACT COMM,'S',FIELDS=(COMM) GET COMMAREA ADDRESS
010600          L     R7,COMM                ADDR OF COMMS FIELDS


IF help requested THEN
        DISPLAY help message
        EXIT
ENDIF
IF table file doesn't exist THEN
        Allocate new table file
ELSE
        Allocate old table file
ENDIF
Cause ISPF to use the TAGS table file for I/O rather than the
defaults (LIBDEFs)
SELECT Request-type
        WHEN List label display requested
            Look at each line of current edit session
                   IF there is a label on this line THEN
                           report to user
        WHEN Save requested
            IF this is the first time TAGS has been used THEN
                   Create the TAGS table structure
            Look at each line of the current edit session
                   IF there is a label here THEN
                           save label details in the TAGS table
            Report back to the user the number of labels saved
        WHEN GET or CLEAR requested
            IF GET labels requested THEN
                   Activate TAGSEND macro instead of END on PF3
            Set up TAGS table search argument
            FOR each label found in the TAGS table DO
                   IF CLEAR requested THEN
                           Delete the row from the TAGS table
                   IF GET requested THEN
                           Define the label
            ENDFOR
            Report back to user number of labels processed
        OTHERWISE
            Tell user unknown command
END SELECT
Close tables and files
EXIT


TAGS Macro

/* Sit REXX Sit! */
"ISREDIT MACRO (REQUEST)"
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/*  TAGS: Maintain ISPF EDIT labels between EDIT sessions.           */
/*        See HELP section below for functions.                      */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
LCREQ = REQUEST    /* For nice messages only */
upper REQUEST
if abbrev("HELP",REQUEST,1) | REQUEST = "?" then
do
   say
   say "TAGS: Usage: TAGS SAVE | GET | LIST | CLEAR | HELP"
   say
   say "      TAGS can be used to save ISPFEDIT labels placed in a"
   say "      source member so that they can be retrieved for later"
   say "      use."
   say
   say "      TAGS SAVE  will save all labels currently defined."
   say "      TAGS GET   will retrieve and redefine all labels"
   say "                 previously saved by a TAGS SAVE command."
   say "                 TAGS GET is the default to enable IMACROs"
   say "      TAGS CLEAR will forget about any previously saved labels"
   say "      TAGS LIST  will list any currently defined labels"
   say
   exit 0
end
/*
 * The default is GET to enable it to be used as an IMACRO
 */
if REQUEST = "" then
   REQUEST = "GET"
/*
 * Allocate a new TAGS ISPF Table lib if necessary ...
 */
"ISPEXEC VGET (ZUSER)"
tagsfile = "'"ZUSER'.TAGSTAB'"'"
dsstat = sysdsn(tagsfile)
select
when dsstat = "DATASET NOT FOUND" then
do
   "ALLOC F(TAGSTBL) DS("tagsfile") NEW CATALOG DSORG(PO) DIR(5)
   UNIT(SYSDA) SPACE(2 1) TRACKS RECFM(F B) LRECL(80) BLKSIZE(6080)"
   if RC > 0 then
   do
      ZEDSMSG="Allocate failed"
      ZEDLMSG="TAGS: Allocation of (new) "tagsfile" failed"
      "ISPEXEC SETMSG MSG(ISRZ001)"
      exit 8
   end
end when dsstat = "OK" then
do
   "ALLOC F(TAGSTBL) DS("tagsfile") SHR REUSE"
   if RC ^= 0 then
   do
      ZEDSMSG="Allocate failed"
      ZEDLMSG="TAGS: Allocation of "tagsfile" failed"
      "ISPEXEC SETMSG MSG(ISRZ001)"
      exit 8
   end
end
otherwise
   ZEDSMSG="Allocate failed"
   ZEDLMSG="TAGS: Allocation of "tagsfile" failed: "dsstat
   "ISPEXEC SETMSG MSG(ISRZ001)"
   exit 8
end
"ISPEXEC LIBDEF ISPTLIB LIBRARY ID(TAGSTBL)"
if RC > 0 then
do
   ZEDSMSG="LIBDEF ISPTLIB failed"
   ZEDLMSG="TAGS: Attempt to LIBDEF ISPTLIB to TAGSTBL failed"
   "ISPEXEC SETMSG MSG(ISRZ001)"
   exit 8
end
"ISPEXEC LIBDEF ISPTABL LIBRARY ID(TAGSTBL)"
if RC > 0 then
do
   ZEDSMSG="LIBDEF ISPTABL failed"
   ZEDLMSG="TAGS: Attempt to LIBDEF ISPTABL to TAGSTBL failed"
   "ISPEXEC SETMSG MSG(ISRZ001)"
   exit 8
end
"ISREDIT (DSNAME) = DATASET"
/*
 * Handle sequential datasets - no valid member name causes problems
 */
x = listdsi("'"DSNAME"'")
if SYSDSORG = "PO" then
   "ISREDIT (MEMBER) = MEMBER"
else
   MEMBER = "$seqfile"
select
when REQUEST = "LIST" then
do
   "ISREDIT (LLAST) = LINENUM .ZLAST"   /* Get the last line no  */
/*
 *  Loop through each line of the member checking each for a label
 */
   say "TAGS: Currently defined labels:"
   numlisted = 0
   do LINENO = 1 to LLAST
      "ISREDIT (TAGNAME,LABLEVL) = LABEL &LINENO"
      if RC = 0 then
      do
          numlisted = numlisted + 1
          say "TAGS: Label: "TAGNAME" at line: "LINENO
      end
   end
   ZEDSMSG=numlisted" label(s) listed"
   ZEDLMSG="TAGS: "numlisted" label(s) currently defined"
   "ISPEXEC SETMSG MSG(ISRZ001)"
end
when REQUEST = "SAVE" then
do
   "ISPEXEC TBOPEN TAGS WRITE"
   if RC = 8 then     /* table didn't exist - so create it */
   do
      "ISPEXEC TBCREATE TAGS KEYS(DSNAME,MEMBER,TAGNAME) NAMES(LINENO)
                WRITE REPLACE"
      if RC = 12 then
      do
         ZEDSMSG="Table in use"
         ZEDLMSG="TAGS: Table in use -- try again"
         "ISPEXEC SETMSG MSG(ISRZ001)"
         "FREE F(TAGSTBL)"
         exit 8
      end
      else if RC > 12 then
      do
         ZEDSMSG="Table create failed"
         ZEDLMSG="TAGS: Unexpected return code from TBCREATE :"RC
         "ISPEXEC SETMSG MSG(ISRZ001)"
         "FREE F(TAGSTBL)"
         exit 8
      end
   end
   else if RC > 8 then
   do
      ZEDSMSG="Table open failed"
      ZEDLMSG="TAGS: Unexpected return code from TBOPEN :"RC
      "ISPEXEC SETMSG MSG(ISRZ001)"
      "FREE F(TAGSTBL)"
      exit 8
   end
   "ISREDIT (LLAST) = LINENUM .ZLAST"   /* Get the last line no */
   labs = 0                             /* Stats: #labels    */
/*
 * Loop through each line of the member checking each for a label
 */
   do LINENO = 1 to LLAST
      "ISREDIT (TAGNAME,LABLEVL) = LABEL &LINENO"
      if RC = 0 then                    /* Found label ! */
      do
         labs = labs + 1                /* Increment stats */
         "ISPEXEC TBADD TAGS"
         if RC = 8 then
         do
            "ISPEXEC TBDELETE TAGS"     /* delete it ! */
            "ISPEXEC TBADD TAGS"        /* and try again */
            if RC > 8 then
            do
               ZEDSMSG="Add label failed"
               ZEDLMSG="TAGS: Unexpected return code from TBADD :"RC
               "ISPEXEC SETMSG MSG(ISRZ001)"
            end
         end
         else if RC > 8 then
         do
            ZEDSMSG="Add label failed"
            ZEDLMSG="TAGS: Unexpected return code from TBADD :"RC
            "ISPEXEC SETMSG MSG(ISRZ001)"
         end
      end
   end
   "ISPEXEC TBCLOSE TAGS"
   if RC > 0 then
   do
      ZEDSMSG="Table close failed:
      ZEDLMSG="TAGS: Unexpected return code from TBCLOSE :"RC
      "ISPEXEC SETMSG MSG(ISRZ001)"
      "FREE F(TAGSTBL)"
      exit 8
   end
   ZEDSMSG=labs" labels saved"
   ZEDLMSG="TAGS: Labels found (and saved): "labs
   "ISPEXEC SETMSG MSG(ISRZ001)"
end
when REQUEST = "GET" | REQUEST = "CLEAR" then
do
   "ISPEXEC CONTROL DISPLAY REFRESH"     /* Display labels on return */
   "ISPEXEC TBOPEN TAGS WRITE"
   if RC > 0 then
   do
      ZEDSMSG="Table open failed"
      ZEDLMSG="TAGS: Unexpected return code from TBOPEN :"RC
      "ISPEXEC SETMSG MSG(ISRZ001)"
      "FREE F(TAGSTBL)"
      exit 8
   end
   "ISPEXEC TBTOP TAGS"                  /* Set to top of TAGS table */
/*
 * For each of these functions we want to set up a search mask
 * looking for all occurrences of table row matching the dsname and
 * member names
 */
   "ISPEXEC TBSARG TAGS NEXT NAMECOND(DSNAME,EQ,MEMBER,EQ)"
   "ISPEXEC TBSTATS TAGS ROWCURR(NUMROWS)"  /* Get number of rows */
/*
 *  Activate the TAGSEND macro so that TAGS SAVE is automatically
 *  invoked when the user presses END
 */
   if REQUEST = "GET" then
      "ISREDIT DEFINE end ALIAS TAGSEND"
   numadded = 0        /* Counter for stats purposes */
   do i = 0 to NUMROWS
      "ISPEXEC TBSCAN TAGS"
      if RC = 8 then   /* row not found - we are at end possibilities */
      do
         if REQUEST = "GET" then        /* Fudge for readable message */
            LCREQ = "retriev"
         ZEDSMSG="Label(s) "LCREQ"ed: "numadded
         ZEDLMSG="TAGS: Found "numadded" label(s) and "LCREQ"ed"
         "ISPEXEC SETMSG MSG(ISRZ001)"
         leave
      end
      else
      do
         select
         when REQUEST = "LIST" then
            say "TAGS: Label: "TAGNAME" at line: "LINENO
         when REQUEST = "CLEAR" then
            "ISPEXEC TBDELETE TAGS"
         when REQUEST = "GET" then
         do
            "ISREDIT LABEL &LINENO = &TAGNAME 0"
            if RC > 0 then
            do
               ZEDSMSG="Label add failed"
               ZEDLMSG="TAGS: Unexpected return code from LABEL:"RC
               "ISPEXEC SETMSG MSG(ISRZ001)"
               leave
            end
            else nop
         end
         otherwise nop
         end
         numadded = numadded + 1
      end
   end
   "ISPEXEC TBCLOSE TAGS"
   if RC > 0 then
   do
      ZEDSMSG="Close table failed"
      ZEDLMSG="TAGS: Unexpected return code from TBCLOSE:"RC
      "ISPEXEC SETMSG MSG(ISRZ001)"
      exit 8
   end
end
otherwise
   ZEDSMSG="Unknown TAGS command"
   ZEDLMSG="TAGS: Use TAGS HELP for more information"
   "ISPEXEC SETMSG MSG(ISRZ001)"
end /* select */
"ISPEXEC LIBDEF ISPTABL"
"ISPEXEC LIBDEF ISPTLIB"
"FREE F(TAGSTBL)"
exit 0


TAGSEND macro

/* SIT REXX SIT ! */
/*
 * This macro is invoked when END is pressed from an EDIT session
 * after TAGS GET has been called.
 */
ADDRESS ISREDIT
"MACRO"
"TAGS SAVE"                   /* Save all labels */
"DEFINE END RESET"            /* Reset END command to normal */
"END"                         /* END session (with save) */
EXIT 0


Andrew Gardner
Senior Systems Programmer (Australia)              c Andrew Gardner 1996

