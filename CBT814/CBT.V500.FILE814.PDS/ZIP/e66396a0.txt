Setting the programmer name in TSO SYSOUT

Many MVS installations use the programmer name field on the
JES2 batch job card to hold the distribution code for printed
output. One problem with this is that TSO output does not have
any programmer name set. The result is output getting lost
when generated by a TSO user's session.

The reason is that TSO, when building a 'job' card for a
foreground session, does not construct all the job card
parameters. The routine shown below can be executed after
TSO log-on to update the JES2 control block that contains the
programmer name field.

With the following routine, which I have called SETJES2,
foreground-generated SYSOUT will have the JES2
programmer name set to the same value as the RACF user-id
name field for the TSO user-id. It would be simple to modify
the program to take the value from other parts of the RACF
ACEE such as the installation data field.


SETJES2

*****************************************************************
*  SETJES2 - AUTHORIZED TSO COMMAND PROCESSOR
*  NOT REENTRANT, AC=1, ENTRY POINT SETJES2
*  MUST RUN AS A CP (NOT BE CALLED) AND MUST RUN AUTHORIZED SO
*  BE FROM AN AUTHORIZED LIBRARY, LINKED AC=1, AND IN IKJTSO00.
*  THIS CP ALLOWS A DIST CODE ON FOREGROUND OUTPUT, BY MOVING
*  THE USER NAME TO THE JES2 PGMRNAME FIELD WHICH IS OTHERWISE
*  BLANK FOR TSO USERS. THE NAME IS FOUND USING THE RACF ACEE.
*  RETURN CODES:
*  00 - OPERATION SUCCESSFUL
*  01 - NOT APF AUTHORIZED
*  02 - NO NAME AVAILABLE
*****************************************************************
SETJES2  CSECT
SETJES2  AMODE 31
SETJES2  RMODE 24
         STM   R14,R12,12(R13)   SAVE REGISTERS
         LR    R12,R15           ADDRESSABILITY
         USING SETJES2,R12       BASE REGS
         L     R0,SIZDATD        R0 = SIZE OF DYNAMIC AREA
         GETMAIN R,LV=(0)        GETMAIN DYNAMIC AREA
         LR    R10,R1            R10 -> DYNAMIC AREA
         USING DATD,R10          ADDRESS DYNAMIC AREA
         ST    R13,SAVEAREA+4    SAVE CALLER'S SAVEAREA ADDRESS
         ST    R10,8(R13)        SAVE SAVEAREA ADDRESS
         LR    R13,R10           SAVE AREA PTR
* TEST APF AUTHORITY OF MODULE
         TESTAUTH FCTN=1         TEST APF
         LTR   R15,R15           RESULT
         BZ    CONT0             OK
         TPUT  =CL40'SETJES2 - NOT APF AUTHORIZED',40
         MVC   RC,=F'01'         RC 01
         B     EXIT              EXIT
* FIND TCB AND ACEE
CONT0    EQU   *
         L     R7,CVTPTR               LOAD ADDR OF CVT POINTER
         L     R7,CVTTCBP-CVTMAP(R7)   LOAD ADDR OF NEXT/CURR TCB
         L     R8,12(R7)               LOAD ADDR OF CURRENT ASCB
         ST    R7,SAVEADDR             SAVE ADDR
         L     R8,ASCBASXB-ASCB(R8)    LOAD ADDR OF CURRENT ASXB
         L     R8,ASXBSENV-ASXB(R8)    LOAD ADDR OF RACF ACEE
         ICM   R8,15,ACEEUNAM-ACEE(R8) LOAD ADDR OF RACF PGMR NAME STRG
         BNZ   SETNAME                 FOUND NAME
         MVC   RC,=F'02'               RC 02
         B     EXIT                    EXIT
* SET NAME OF USER, COULD USE PART OF INSTDATA INSTREAD IF PREFFERED
SETNAME  EQU   *
         MVC   DIST,1(R8)              USER NAME AS DIST CODE
* LOCATE JES2 JCT
         L     R7,SAVEADDR             LOAD ADDR
         L     R7,4(R7)                LOAD ADDR OF CURRENT TCB
         L     R7,TCBJSCB-TCB(R7)      LOAD ADDR OF JSCB
         L     R7,JSCBACT-IEZJSCB(R7)  LOAD ADDR OF ACTIVE JSCB
         L     R7,JSCBSSIB-IEZJSCB(R7) LOAD ADDR OF LIFE-OF-JOB SSIB
         L     R7,SSIBSUSE-SSIB(R7)    LOAD ADDR OF JES2 SJB
         L     R7,SJBJCT-SJB(R7)       LOAD ADDR OF JES2 JCT
* CHECK DIST IS CURRENTLY BLANK
         CLC   JCTPNAME-JCT(20,R7),BLANKS   IS IT BLANKS
         BNE   EXIT                         NO
* UPDATE IT AND EXIT
         MODESET KEY=ZERO
         MVC   JCTPNAME-JCT(20,R7),DIST  CHANGE JES2 PGMR NAME
         MODESET KEY=NZERO
         B     EXIT
* LEAVE PROGRAM
EXIT     EQU   *
         L     R13,SAVEAREA+4    RESTORE R13
         L     R3,RC             RETURN CODE
         L     R0,SIZDATD        R0 = DYNAMIC AREA SIZE
         LR    R1,R10            R1 -> DYNAMIC AREA ADDRESS
         FREEMAIN R,LV=(0),A=(1) FREE DYNAMIC AREA
         LR    R15,R3            RETURN CODE
         L     R14,12(R13)       RESTORE R14
         LM    R0,R12,20(R13)    RESTORE R0 TO R12
         BR    R14               RETURN
* DATA AREAS                                                     *
         LTORG
DATA     DS    0F
SIZDATD  DC    AL1(0)            DYNAMIC AREA SIZE
         DC    AL3(ENDDATD-DATD)
         DS    0D
RC       DC    F'0'              PROGRAM RETURN CODE - DEFAULT 0
BLANKS   DC    CL255' '          BLANKS
DIST     DC    CL20' '
* UNINITIALIZED STORAGE (GETMAINED)
DATD     DSECT                   GETMAINED STORAGE AREA
SAVEAREA DS    18F               SAVE AREA
SAVEADDR DS    F                 ADDR
ENDDATD  EQU   *
* DSECTS
         CVT   DSECT=YES
         IKJTCB
         IEZJSCB
         IEFJSSIB
         IHAASCB
         IHAASXB
         IHAACEE
         IFGRPL
         $SJB
         $BUFFER
         $HASPEQU
         $JCT
         $TQE
         END   SETJES2


                                                            c Xephon 1993

