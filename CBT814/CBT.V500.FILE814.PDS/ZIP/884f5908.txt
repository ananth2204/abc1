DDNAME manipulation facilities

      CONCAT (ddname,ddname {,ddname...}) {,PERM}

      DECONCAT ddname

      DDRENAME oldddname, newddname

      DDSPLIT oldddname, newddname, concat#

      DDRENAME SYSPROC XXPROC
      ALLOC F(SYSPROC) DA(myuserlib) SHR
      CONCAT (SYSPROC,XXPROC)

      DECONCAT SYSPROC
      FREE F(SYSPROC)
      DDRENAME XXPROC SYSPROC

ALLOC F(SYSPROC) DA('cmdlib01','cmdlib02','cmdlib03','cmdlib04','cmdlib05') SHR
      DDSPLIT SYSPROC LIB03 3
      DDSPLIT SYSPROC LIB04 4
      DECONCAT SYSPROC

      ALLOC F(SYSPROC) DA('cmdlib01','cmdlib02') SHR
      ALLOC F(LIB03) DA('cmdlib03') SHR
      ALLOC F(LIB04) DA('cmdlib04','cmdlib05') SHR

      CONCAT (SYSPROC LIB04) PERM

      ALLOC F(SYSPROC) DA('cmdlib01','cmdlib02','cmdlib04','cmdlib05')

CONCAT SOURCE

 TITLE 'CONCAT, CONCATENATE TWO "DDNAME"S TSO COMMAND.'
         MACRO ,
         $ASMDATE ,
         B     4+8+8+8(,R15)
         DC    CL8'&SYSECT'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         MEND  ,
CONCAT   CSECT ,
CONCAT   AMODE ANY
CONCAT   RMODE ANY
        $ASMDATE ,
         STM   R14,R12,12(R13)
         LR    R9,R1               SAVE "CPPL" PTR
         LR    R12,R15             SAVE ENTRY POINT AS BASE
         USING CONCAT,R12
         LA    R3,WORKLEN          LENGTH OF WORKAREA
        GETMAIN R,LV=(R3)
         LA    R1,0(,R1)
         LR    R2,R1
         SLR   R15,R15
         MVCL  R2,R14
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         LA    R10,0(,R13)         WORKAREA
         USING WORKAREA,R10          AND ADDRESS IT
         USING CPPL,R9
         MVC   (PPLUPT-PPL)+CCPPL,CPPLUPT A(UPT)
         MVC   (PPLECT-PPL)+CCPPL,CPPLECT A(ECT)
         MVC   (PPLCBUF-PPL)+CCPPL,CPPLCBUF A(CBUF)
         DROP  R9                  DIS-OWN "CPPL"
         L     R0,=A(CCPCL)                  A(PCL)
         ST    R0,(PPLPCL-PPL)+CCPPL         A(PCL)
         LA    R0,PPLXECB                    A(ECB)
         ST    R0,(PPLECB-PPL)+CCPPL         A(ECB)
         LA    R0,PPLXANS                    A(ANS)
         ST    R0,(PPLANS-PPL)+CCPPL         A(ANS)
         ST    R10,(PPLUWA-PPL)+CCPPL        A(WORKAREA)
         LA    R0,TXTDDN+(S99TUENT-S99TUNIT) ->FIRST "TXT_DDNAME"
         ST    R0,DDNXPTR            SAVE ->FIRST "TXT_DDNAME"
         MVC   TXTDDN+(S99TUKEY-S99TUNIT)(2+2),=AL2(DCCDDNAM,0)
        CALLTSSR EP=IKJPARS,MF=(E,CCPPL)
         LTR   R15,R15
         BZ    PARSOK
 B *+1  TPUT   PERR,PERRL
         B     RETURN
PARSOK   EQU   *
         CLC   TXTDDN+(S99TUNUM-S99TUNIT)(2),=Y(1) AT LEAST TWO PLEASE
         BNH   NOT2DDER *** FEWER THAN TWO "DDNAMES" SUPPLIED
         LA    R1,ALCS99RB         POINT AT REQUEST BLOCK
         ST    R1,PTRS99RB           AND SAVE IN POINTER
         OI    PTRS99RB,X'80'      SET END-OF-LIST POINTER
         XC    ALCS99RB,ALCS99RB   CLEAR REQUEST BLOCK
         LA    R1,TEXTPTRS         POINT AT TEXT UNIT POINTER LIST
         ST    R1,ALCS99RB+(S99TXTPP-S99RB) AND SAVE ADDRESS
         MVI   ALCS99RB+(S99RBLN-S99RB),(S99RBEND-S99RB) SET LENGTH
         MVI   ALCS99RB+(S99VERB-S99RB),S99VRBCC SET "CONCAT" REQUEST
         LA    R14,TXTDDN          "DDNAME" TEXT UNIT
         SLR   R15,R15             DON'T "PERMANENTLY_CONCATENATE"
         O     R14,=X'80000000'    SET END-OF-LIST MARKER
         L     R7,PPLXANS          GET "PDL"
         CLI   (TEMPPDE+1)-PDL(R7),1 "PERMANENTLY_CONCATENATE"?
         BH    NOTPERM                 NO, THEN DON'T SET
         LA    R14,0(,R14)         LOSE END-OF-LIST MARKER
         LA    R15,TXTPERM         "PERMANENTLY_CONCATENATE"
         O     R15,=X'80000000'    SET END-OF-LIST MARKER
         MVC   TXTPERM(2+2),=Y(DCCPERMC,*-*) "PERMANENTLY_CONCATENATE"
NOTPERM  EQU   *                                                  MH-I1
         STM   R14,R15,TEXTPTRS    SAVE IN TEXT-POINTER LIST
         LA    R1,PTRS99RB
        DYNALLOC ,                 GO TO DYNAMIC ALLOCATION
         SLR   R9,R9               ASSUME RETURN CODE = 0
         LTR   R15,R15             TEST RETURN CODE FROM "DYNALLOC"
         BZ    DYNALCOK              OKAY, CARRY ON
         ST    R15,S99RETCD        SAVE "R15" RETURN CODE
        LOAD   EPLOC=JEFF02NM      LOAD "IKJEFF02"
         ST    R0,JEFF02EP         SAVE "IKJEFF02" ENTRY POINT
         LA    R14,ALCS99RB
         LA    R15,S99RETCD
         LA    R0,JEFF02EP         "IKJEFF02" ENTRY POINT
         LA    R1,=X'00,32'        FLAGS
         L     R2,4(,R13)          PREVIOUS SAVE-AREA
         L     R2,24(,R2)          CALLER'S "R1"="CPPL"
         STM   R14,R2,JEFF18PM     SAVE AS "IKJEFF18" PARM-LIST
         LA    R1,JEFF18PM         POINT AT "IKJEFF18" PARM-LIST
        LINK   EP=IKJEFF18         ISSUE DIAGNOSTIC MESSAGE
        DELETE EPLOC=JEFF02NM      DELETE "IKJEFF02"
         XC    JEFF02EP,JEFF02EP   REMOVE "IKJEFF02" ENTRY POINT
         LA    R9,8  *** R15 ^= 0 AFTER SVC 99
DYNALCOK EQU   *
RETURN   EQU   *
        IKJRLSA PPLXANS
         LA    R0,WORKLEN
         LA    R1,0(,R13)
         L     R13,4(,R13)
        FREEMAIN R,LV=(0),A=(1)
         LR    R15,R9              COPY RETURN CODE               MH-A1
        RETURN (14,12),RC=(15)
NOT2DDER EQU   *
        TPUT   MSGNT2DD,L'MSGNT2DD
         LA    R9,8                SET RETURN CODE EIGHT
         B     RETURN
VALIDCK  EQU   *
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         BALR  R12,0
         L     R12,PROGBASE-*(,R12)
         LR    R7,R1               COPY PARM
         L     R10,4(,R7)          WORKAREA
         L     R6,0(,R7)           "PDE" ADDRESS
         L     R4,0(,R6)           ADDR OF "DDNAME" PARAMETER
         LH    R5,4(,R6)           LENGTH
         LTR   R5,R5               ARE WE SURE SOMETHING THERE?
         BNP   VALRET4               NO, THEN ERROR
         L     R8,DDNXPTR          LOAD ->NEXT "TXT_DDNAME" ENTRY
         USING S99TUFLD,R8         ADDRESS "S99TUFLD" IN "R8"
         STH   R5,S99TULEN           SAVE ENTRY LENGTH
         MVC   S99TUPRM(8),=CL8' '
         LR    R15,R5
         BCTR  R15,0               MINUS 1 FOR "EX"
         EX    R15,*+4             MVC   S99TUPRM(*-*),0(R4)
           MVC   S99TUPRM(*-*),0(R4)
        DEVTYPE S99TUPRM,JEFF18PM  CHECK "DDNAME" PRESENT
         LTR   R15,R15             WAS "DDNAME" FOUND
         BNZ   VALRET4               NO, THEN ERROR
         LA    R8,S99TUPRM(R5)     STEP OVER
         ST    R8,DDNXPTR            SAVE ->NEXT "TXT_DDNAME"
         DROP  R8                  DIS-OWN "S99TUFLD" IN "R8"
         LA    R15,1                          UP NUMBER OF "DDNAMES"
         AH    R15,TXTDDN+(S99TUNUM-S99TUNIT) UP NUMBER OF "DDNAMES"
         STH   R15,TXTDDN+(S99TUNUM-S99TUNIT) UP NUMBER OF "DDNAMES"
         SLR   R15,R15
VALRET   EQU   *
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
VALRET4  EQU   *
         LA    R15,4
         B     VALRET
PROGBASE DC    A(CONCAT)
JEFF02NM DC    CL8'IKJEFF02'       "IKJEFF02" PARM-LIST
MSGNT2DD DC    C'Must be at least two "DDNAME"s supplied!'
         LTORG ,
WORKAREA DSECT ,
WORKSAVE DC    18F'0'
DDNXPTR  DC    A(0)                ->NEXT "TXTDDNX" ENTRY TO USE
TXTDDN   DC    Y(DCCDDNAM,*-*)     "DDNAME" TEXT UNIT
TXTDDNX  DC    256XL(2+8)'00'      UP TO 256 "DDNAME" ENTRIES
TXTPERM  DC    Y(DCCPERMC,*-*)     "PERMANENTLY_CONCATENATE"
         DC    0D'0'
ALCS99RB DC    XL(S99RBEND-S99RB)'00' SVC 99 REQUEST BLOCK
PTRS99RB DC    A(ALCS99RB)         -> ALCS99RB
TEXTPTRS DC    2A(0)               SVC 99 TEXT UNIT POINTER LIST
S99RETCD DC    A(0)                "R15" AFTER "SVC-99"
JEFF18PM DC    12A(0)              "IKJEFF18" PARM-LIST
JEFF02EP DC    A(0)                "IKJEFF02" PARM-LIST
PPLXECB  DC    A(0)                ????
PPLXANS  DC    A(0)                ADDR OF PDL BUILT BY PARSE RTN
CCPPL    DC    A(0)                -> "UPT"
         DC    A(0)                -> "ECT"
         DC    A(PPLXECB)          -> "ECB"
         DC    A(0)                -> "PDL"
         DC    A(PPLXANS)          -> "ANSWER AREA"
         DC    A(0)                -> "CBUF"
         DC    A(0)                -> "USER WORK AREA"
WORKLEN  EQU   *-WORKAREA
CONCAT   CSECT ,
CCPCL    IKJPARM DSECT=PDL
DDNPDE   IKJIDENT 'DDNAME',UPPERCASE,LIST,VALIDCK=VALIDCK,             *
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   *
               PROMPT='LIST of DDNAME to be CONCATENATED',             *
               HELP='LIST of DDNAME to be CONCATENATED'
TEMPPDE  IKJKEYWD DEFAULT='PERM'
         IKJNAME 'PERM'
         IKJNAME 'TEMP'
         IKJENDP
        IKJPPL ,
        IKJCPPL ,
        IEFZB4D2 ,
        IEFZB4D0 ,
        CVT   DSECT=YES,LIST=YES
CONCAT   CSECT ,
        REGEQU ,
         END   CONCAT

DDRENAME SOURCE

 TITLE 'DDRENM, RENAME "DDNAME" TSO COMMAND.'
**LINK   SETCODE AC(1)
         MACRO ,
         $ASMDATE ,
         B     4+8+8+8(,R15)
         DC    CL8'&SYSECT'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         MEND  ,
         MACRO ,
DDRENM   CSECT ,
DDRENM   AMODE ANY
DDRENM   RMODE ANY
        $ASMDATE ,
         STM   R14,R12,12(R13)
         LR    R9,R1               SAVE "CPPL" PTR
         LR    R12,R15             SAVE ENTRY POINT AS BASE
         USING DDRENM,R12
         LA    R3,WORKLEN          LENGTH OF WORKAREA
        GETMAIN R,LV=(R3)
         LA    R1,0(,R1)
         LR    R2,R1
         SLR   R15,R15
         MVCL  R2,R14
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         LA    R10,0(,R13)         WORKAREA
         USING WORKAREA,R10          AND ADDRESS IT
         USING CPPL,R9
         MVC   (PPLUPT-PPL)+CCPPL,CPPLUPT A(UPT)
         MVC   (PPLECT-PPL)+CCPPL,CPPLECT A(ECT)
         MVC   (PPLCBUF-PPL)+CCPPL,CPPLCBUF A(CBUF)
         DROP  R9                  DIS-OWN "CPPL"
         L     R0,=A(CCPCL)                  A(PCL)
         ST    R0,(PPLPCL-PPL)+CCPPL         A(PCL)
         LA    R0,PPLXECB                    A(ECB)
         ST    R0,(PPLECB-PPL)+CCPPL         A(ECB)
         LA    R0,PPLXANS                    A(ANS)
         ST    R0,(PPLANS-PPL)+CCPPL         A(ANS)
         ST    R10,(PPLUWA-PPL)+CCPPL        A(WORKAREA)
        CALLTSSR EP=IKJPARS,MF=(E,CCPPL)
         LTR   R15,R15
         BZ    PARSOK
 B *+1  TPUT   PERR,PERRL
         B     RETURN
PARSOK   EQU   *
        IKJRLSA PPLXANS
         TM    OLDDDN,X'BF'        ANYTHING SPECIFIED?
         BZ    *+1                   NO, ERROR
         TM    NEWDDN,X'BF'        ANYTHING SPECIFIED?
         BZ    *+1                   NO, ERROR
         L     R1,PSAAOLD-PSA      PUT "OUR_ASCB" INTO "R1"
         LH    R15,ASCBASID-ASCB(,R1) GET "ASID"
         STH   R15,ENQASID         SAVE FOR "ENQ"
        MODESET KEY=NZERO,MODE=SUP GET INTO "SUPERVISER-STATE"
         L     R2,PSATOLD-PSA      GET "TCB" ADDRESS
         L     R2,TCBJSTCB-TCB(,R2) MAKE SURE "JOB-STEP-TCB"
         L     R2,TCBJSCB-TCB(,R2) GET "JSCB" ADDRESS FROM "TCB"
         L     R2,JSCDSABQ-IEZJSCB(,R2) GET "DSAB_QDB"
         ST    R2,ENQDSAB          SAVE FOR "ENQ"
         MVC   ENQMFL,RENQMFL      SET UP "ENQ"
        ENQ (SYSZTIOT,ENQRNAME,E,L'ENQRNAME,SYSTEM),MF=(E,ENQMFL)
QDBFELMP EQU   X'0C'
QDB      EQU   0
         LA    R3,(QDBFELMP-QDB)-(DSABFCHN-DSAB)(,R2) 1ST "DSAB"
         LA    R9,8                ASSUME THERE IS AN ERROR
         USING DSAB,R3             ADDRESS "DSAB" IN "R3"
LOOPDSAB EQU   *
         L     R3,DSABFCHN         GET NEXT "DSAB"
         LTR   R3,R3               ANY MORE "DSAB"S?
         BNP   DONEDSAB              NO, THEN NOT FOUND ERROR
         CLC   DSABID,=CL4'DSAB'   ENSURE CORRECT
         BNE   *+1   *** "DSABID" INVALID
         L     R4,DSABTIOT         GET "TIOT"
         L     R5,DSABSIOT         GET "SIOT"
         CLI   TIOELNGH-TIOENTRY(R4),16 LENGTH OF "TIOT" ENTRY
         BL    LOOPDSAB            IGNORE "TIOT" IF TOO SHORT
         CLC   OLDDDN,TIOEDDNM-TIOENTRY(R4) THIS "DDNAME"?
         BNE   LOOPDSAB            NO, THEN IGNORE
         CLC   OLDDDN,SCTDDNAM-IEFSIOT(R5)  THIS "DDNAME"?
         BNE   *+1                 NO, THEN ERROR
         LH    R15,DSABOPCT        GET "OPEN_DCB" COUNT
         LTR   R15,R15             IS FILE IN USE?
         BP    INUSEERR              YES, THEN ERROR
         LM    R6,R7,NEWDDN        "NEW_DDNAME"
        MODESET EXTKEY=SCHED,SAVEKEY=(2) SWITCH KEY
         STM   R6,R7,TIOEDDNM-TIOENTRY(R4) SAVE "NEW_DDNAME"
         STM   R6,R7,SCTDDNAM-IEFSIOT(R5)  SAVE "NEW_DDNAME"
*>>??      LA    R15,L'TIOEDDNM      LENGTH TO MOVE
*>>??      MVCK  TIOEDDNM-TIOENTRY(R15,R4),NEWDDN,R2 "NEW_DDNAME"
*>>??      LA    R15,L'SCTDDNAM      LENGTH TO MOVE
*>>??      MVCK  SCTDDNAM-IEFSIOT(R15,R5),NEWDDN,R2  "NEW_DDNAME"
         SPKA  0(R2)               GET BACK TO PREVIOUS KEY
         BAL   R8,DODEQ            RELEASE ENQ ON "SYSZTIOT"
         SLR   R9,R9               SET ZERO RETURN CODE
DONEDSAB EQU   *
RETURN   EQU   *
         LA    R0,WORKLEN
         LA    R1,0(,R13)
         L     R13,4(,R13)
        FREEMAIN R,LV=(0),A=(1)
         LR    R15,R9              COPY RETURN CODE
        RETURN (14,12),RC=(15)
INUSEERR EQU   *
         BAL   R8,DODEQ            RELEASE ENQ ON "SYSZTIOT"
        TPUT   MSGINUSE,L'MSGINUSE
         LA    R9,8                SET RETURN CODE EIGHT
         B     RETURN
DODEQ    EQU   *
        DEQ    (SYSZTIOT,ENQRNAME,L'ENQRNAME,SYSTEM),MF=(E,ENQMFL)
         BR    R8
VALOLDDD EQU   *
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         BALR  R12,0
         L     R12,PROGBASE-*(,R12)
         LR    R7,R1               COPY PARM
         L     R10,4(,R7)          WORKAREA
         L     R6,0(,R7)           "PDE" ADDRESS
         L     R4,0(,R6)           ADDR OF "DSN" PARAMETER
         LH    R5,4(,R6)           LENGTH
         LTR   R5,R5               ARE WE SURE SOMETHING THERE?
         BNP   VALRET4               NO, THEN ERROR
         MVC   OLDDDN(8),=CL8' '
         BCTR  R5,0                MINUS 1 FOR MVC
         EX    R5,*+4              MVC   OLDDDN(*-*),0(R4)
           MVC   OLDDDN(*-*),0(R4)
        DEVTYPE OLDDDN,WORK        CHECK "DDNAME" PRESENT
         LTR   R15,R15             WAS "DDNAME" FOUND
         BNZ   VALRET4               NO, THEN ERROR
         SLR   R15,R15
         B     VALRET                AND RETURN
VALNEWDD EQU   *
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         BALR  R12,0
         L     R12,PROGBASE-*(,R12)
         LR    R7,R1               COPY PARM
         L     R10,4(,R7)          WORKAREA
         L     R6,0(,R7)           "PDE" ADDRESS
         L     R4,0(,R6)           ADDR OF "DSN" PARAMETER
         LH    R5,4(,R6)           LENGTH
         LTR   R5,R5               ARE WE SURE SOMETHING THERE?
         BNP   VALRET4               NO, THEN ERROR
         MVC   NEWDDN(8),=CL8' '
         BCTR  R5,0                MINUS 1 FOR MVC
         EX    R5,*+4              MVC   NEWDDN(*-*),0(R4)
           MVC   NEWDDN(*-*),0(R4)
        DEVTYPE NEWDDN,WORK        CHECK "DDNAME" PRESENT
         LTR   R15,R15             WAS "DDNAME" FOUND
         BZ    VALRET4               YES, THEN ERROR
         SLR   R15,R15
VALRET   EQU   *
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
VALRET4  EQU   *
         LA    R15,4
         B     VALRET
PROGBASE DC    A(DDRENM)
SYSZTIOT DC    CL8'SYSZTIOT'
RENQMFL  ENQ   (SYSZTIOT,ENQRNAME-WORKAREA,E,L'ENQRNAME,SYSTEM),MF=L
RENQMFLL EQU   *-RENQMFL
MSGINUSE DC    C'Can''t RENAME, DDNAME has OPEN files!'
         LTORG ,
WORKAREA DSECT ,
WORKSAVE DC    18F'0'
WORK     DC    XL256'00'           WORK AREA
OLDDDN   DC    CL8' '
NEWDDN   DC    CL8' '
ENQMFL   DC    XL(RENQMFLL)'00'
ENQRR    DC    0D'0'
ENQASID  DC    Y(0)
ENQDSAB  DC    AL4(0)
ENQRNAME EQU   ENQRR,*-ENQRR,C'X'
PPLXECB  DC    A(0)                ????
PPLXANS  DC    A(0)                ADDR OF PDL BUILT BY PARSE RTN
CCPPL    DC    A(0)                -> "UPT"
         DC    A(0)                -> "ECT"
         DC    A(PPLXECB)          -> "ECB"
         DC    A(0)                -> "PDL"
         DC    A(PPLXANS)          -> "ANSWER AREA"
         DC    A(0)                -> "CBUF"
         DC    A(0)                -> "USER WORK AREA"
WORKLEN  EQU   *-WORKAREA
DDRENM   CSECT ,
CCPCL    IKJPARM DSECT=PDL
ODDNPDE  IKJIDENT 'DDNAME',UPPERCASE,VALIDCK=VALOLDDD,                 *
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   *
               PROMPT='DDNAME to be RENAMEd',                          *
               HELP='DDNAME to be RENAMEd'
NDDNPDE  IKJIDENT 'NEW DDNAME',UPPERCASE,VALIDCK=VALNEWDD,             *
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   *
               PROMPT='Required DDNAME',                               *
               HELP='New DDNAME that is required'
         IKJENDP
CCPCL    AMODE ANY
CCPCL    RMODE ANY
DSECTS   DSECT ,
        IKJPPL
        IKJCPPL
        CVT    DSECT=YES,LIST=YES
        IHAPSA ,
        IHAASCB ,
        IKJTCB SYS=AOS2,DSECT=YES,LIST=YES
        IEZJSCB ,                  "JSCB" MAP
IEFTIOT  DSECT ,
        IEFTIOT1 ,
IEFSIOT  DSECT ,
        IEFASIOT ,
        IHADSAB ,
DDRENM   CSECT ,
        REGEQU  ,
         END   DDRENM

DDSPLIT SOURCE

 TITLE 'DDSPLT, SPLIT "DDNAME" TSO COMMAND.'
**LINK   SETCODE AC(1)
         MACRO ,
         $ASMDATE ,
         B     4+8+8+8(,R15)
         DC    CL8'&SYSECT'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         MEND  ,
DDSPLT   CSECT ,
DDSPLT   AMODE ANY
DDSPLT   RMODE ANY
        $ASMDATE ,
         STM   R14,R12,12(R13)
         LR    R9,R1               SAVE "CPPL" PTR
         LR    R12,R15             SAVE ENTRY POINT AS BASE
         USING DDSPLT,R12
         LA    R3,WORKLEN          LENGTH OF WORKAREA
        GETMAIN R,LV=(R3)
         LA    R1,0(,R1)
         LR    R2,R1
         SLR   R15,R15
         MVCL  R2,R14
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         LA    R10,0(,R13)         WORKAREA
         USING WORKAREA,R10          AND ADDRESS IT
         USING CPPL,R9
         MVC   (PPLUPT-PPL)+CCPPL,CPPLUPT A(UPT)
         MVC   (PPLECT-PPL)+CCPPL,CPPLECT A(ECT)
         MVC   (PPLCBUF-PPL)+CCPPL,CPPLCBUF A(CBUF)
         DROP  R9                  DIS-OWN "CPPL"
         L     R0,=A(CCPCL)                  A(PCL)
         ST    R0,(PPLPCL-PPL)+CCPPL         A(PCL)
         LA    R0,PPLXECB                    A(ECB)
         ST    R0,(PPLECB-PPL)+CCPPL         A(ECB)
         LA    R0,PPLXANS                    A(ANS)
         ST    R0,(PPLANS-PPL)+CCPPL         A(ANS)
         ST    R10,(PPLUWA-PPL)+CCPPL        A(WORKAREA)
        CALLTSSR EP=IKJPARS,MF=(E,CCPPL)
         LTR   R15,R15
         BZ    PARSOK
 B *+1  TPUT   PERR,PERRL
         B     RETURN
PARSOK   EQU   *
        IKJRLSA PPLXANS
         TM    OLDDDN,X'BF'        ANYTHING SPECIFIED?
         BZ    *+1                   NO, ERROR
         TM    NEWDDN,X'BF'        ANYTHING SPECIFIED?
         BZ    *+1                   NO, ERROR
         L     R1,PSAAOLD-PSA      PUT "OUR_ASCB" INTO "R1"
         LH    R15,ASCBASID-ASCB(,R1) GET "ASID"
         STH   R15,ENQASID         SAVE FOR "ENQ"
        MODESET KEY=NZERO,MODE=SUP GET INTO "SUPERVISER-STATE"
         L     R2,PSATOLD-PSA      GET "TCB" ADDRESS
         L     R2,TCBJSTCB-TCB(,R2) MAKE SURE "JOB-STEP-TCB"
         L     R2,TCBJSCB-TCB(,R2) GET "JSCB" ADDRESS FROM "TCB"
         L     R2,JSCDSABQ-IEZJSCB(,R2) GET "DSAB_QDB"
         ST    R2,ENQDSAB          SAVE FOR "ENQ"
         MVC   ENQMFL,RENQMFL      SET UP "ENQ"
        ENQ (SYSZTIOT,ENQRNAME,E,L'ENQRNAME,SYSTEM),MF=(E,ENQMFL)
QDBFELMP EQU   X'0C'
QDB      EQU   0
         LA    R3,(QDBFELMP-QDB)-(DSABFCHN-DSAB)(,R2) 1ST "DSAB"
         LA    R9,8                ASSUME THERE IS AN ERROR
         USING DSAB,R3             ADDRESS "DSAB" IN "R3"
LOOPDSAB EQU   *
         L     R3,DSABFCHN         GET NEXT "DSAB"
         LTR   R3,R3               ANY MORE "DSAB"S?
         BNP   DONEDSAB              NO, THEN NOT FOUND ERROR
         CLC   DSABID,=CL4'DSAB'   ENSURE CORRECT
         BNE   *+1   *** "DSABID" INVALID
         L     R4,DSABTIOT         GET "TIOT"
         L     R5,DSABSIOT         GET "SIOT"
         CLI   TIOELNGH-TIOENTRY(R4),16 LENGTH OF "TIOT" ENTRY
         BL    LOOPDSAB            IGNORE "TIOT" IF TOO SHORT
         CLC   OLDDDN,TIOEDDNM-TIOENTRY(R4) THIS "DDNAME"?
         BNE   LOOPDSAB            NO, THEN IGNORE
         CLC   OLDDDN,SCTDDNAM-IEFSIOT(R5)  THIS "DDNAME"?
         BNE   *+1 LOOPDSAB        NO, THEN IGNORE
         LH    R15,DSABOPCT        GET "OPEN_DCB" COUNT
         LTR   R15,R15             IS IT IN USE?
         BP    INUSEERR              YES, THEN ERROR
         L     R6,CCNUM            LOAD REQUIRED CONCAT_NUM
         SH    R6,=Y(1)            ALREADY GOT FIRST
         BNP   *+1                   <=1, THEN ERROR
LOOPSPLT EQU   *
         L     R3,DSABFCHN         GET NEXT "DSAB"
         LTR   R3,R3               ANY MORE "DSAB"S?
         BNP   DONEDSAB              NO, THEN NOT FOUND ERROR
         CLC   DSABID,=CL4'DSAB'   ENSURE CORRECT
         BNE   *+1   *** "DSABID" INVALID
         L     R4,DSABTIOT         GET "TIOT"
         L     R5,DSABSIOT         GET "SIOT"
         CLI   TIOELNGH-TIOENTRY(R4),16 LENGTH OF "TIOT" ENTRY
         BL    *+1  LOOPDSAB       IGNORE "TIOT" IF TOO SHORT
         CLI   TIOEDDNM-TIOENTRY(R4),C' ' STILL THIS "DDNAME"?
         BNE   *+1  LOOPDSAB       NO, THEN IGNORE
         BCT   R6,LOOPSPLT         LOOP BACK FOR NEXT
         LM    R6,R7,NEWDDN        "NEW_DDNAME"
        MODESET EXTKEY=SCHED,SAVEKEY=(2) SWITCH KEY
         STM   R6,R7,SCTDDNAM-IEFSIOT(R5)  SAVE "NEW_DDNAME"
*>>??      LA    R15,L'SCTDDNAM      LENGTH TO MOVE
*>>??      MVCK  SCTDDNAM-IEFSIOT(R15,R5),NEWDDN,R2  "NEW_DDNAME"
         SPKA  0(R2)               GET BACK TO PREVIOUS KEY
         SLR   R9,R9               SET ZERO RETURN CODE
DONEDSAB EQU   *
         BAL   R8,DODEQ            RELEASE ENQ ON "SYSZTIOT"
RETURN   EQU   *
         LA    R0,WORKLEN
         LA    R1,0(,R13)
         L     R13,4(,R13)
        FREEMAIN R,LV=(0),A=(1)
         LR    R15,R9              COPY RETURN CODE
        RETURN (14,12),RC=(15)
INUSEERR EQU   *
         BAL   R8,DODEQ            RELEASE ENQ ON "SYSZTIOT"
        TPUT   MSGINUSE,L'MSGINUSE
         LA    R9,8                SET RETURN CODE EIGHT
         B     RETURN
DODEQ    EQU   *
        DEQ    (SYSZTIOT,ENQRNAME,L'ENQRNAME,SYSTEM),MF=(E,ENQMFL)
         BR    R8
VALOLDDD EQU   *
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         BALR  R12,0
         L     R12,PROGBASE-*(,R12)
         LR    R7,R1               COPY PARM
         L     R10,4(,R7)          WORKAREA
         L     R6,0(,R7)           "PDE" ADDRESS
         L     R4,0(,R6)           ADDR OF "DSN" PARAMETER
         LH    R5,4(,R6)           LENGTH
         LTR   R5,R5               ARE WE SURE SOMETHING THERE?
         BNP   VALRET4               NO, THEN ERROR
         MVC   OLDDDN(8),=CL8' '
         BCTR  R5,0                MINUS 1 FOR MVC
         EX    R5,*+4              MVC   OLDDDN(*-*),0(R4)
           MVC   OLDDDN(*-*),0(R4)
        DEVTYPE OLDDDN,WORK        CHECK "DDNAME" PRESENT
         LTR   R15,R15             WAS "DDNAME" FOUND
         BNZ   VALRET4               NO, THEN ERROR
         SLR   R15,R15
         B     VALRET                AND RETURN
VALNEWDD EQU   *
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         BALR  R12,0
         L     R12,PROGBASE-*(,R12)
         LR    R7,R1               COPY PARM
         L     R10,4(,R7)          WORKAREA
         L     R6,0(,R7)           "PDE" ADDRESS
         L     R4,0(,R6)           ADDR OF "DSN" PARAMETER
         LH    R5,4(,R6)           LENGTH
         LTR   R5,R5               ARE WE SURE SOMETHING THERE?
         BNP   VALRET4               NO, THEN ERROR
         MVC   NEWDDN(8),=CL8' '
         BCTR  R5,0                MINUS 1 FOR MVC
         EX    R5,*+4              MVC   NEWDDN(*-*),0(R4)
           MVC   NEWDDN(*-*),0(R4)
        DEVTYPE NEWDDN,WORK        CHECK "DDNAME" PRESENT
         LTR   R15,R15             WAS "DDNAME" FOUND
         BZ    VALRET4               YES, THEN ERROR
         SLR   R15,R15
         B     VALRET                AND RETURN
VALCCN   EQU   *
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         BALR  R12,0
         L     R12,PROGBASE-*(,R12)
         LR    R7,R1               COPY PARM
         L     R10,4(,R7)          WORKAREA
         L     R6,0(,R7)           "PDE" ADDRESS
         L     R4,0(,R6)           ADDR OF "DSN" PARAMETER
         L     R4,0(,R4)           ACTUAL "CCN" VALUE
         CH    R4,=Y(1)            MUST BE MORE THAN 1
         BNH   VALRET4               NO, THEN ERROR
         ST    R4,CCNUM            SAVE CONCAT_NUM
         SLR   R15,R15
         B     VALRET                AND RETURN
VALRET   EQU   *
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
VALRET4  EQU   *
         LA    R15,4
         B     VALRET
PROGBASE DC    A(DDSPLT)
SYSZTIOT DC    CL8'SYSZTIOT'
RENQMFL  ENQ   (SYSZTIOT,ENQRNAME-WORKAREA,E,L'ENQRNAME,SYSTEM),MF=L
RENQMFLL EQU   *-RENQMFL
MSGINUSE DC    C'Can''t RENAME, DDNAME has OPEN files!'
         LTORG ,
WORKAREA DSECT ,
WORKSAVE DC    18F'0'
WORK     DC    XL256'00'           WORK AREA
OLDDDN   DC    CL8' '
NEWDDN   DC    CL8' '
CCNUM    DC    F'0'
ENQMFL   DC    XL(RENQMFLL)'00'
ENQRR    DC    0D'0'
ENQASID  DC    Y(0)
ENQDSAB  DC    AL4(0)
ENQRNAME EQU   ENQRR,*-ENQRR,C'X'
PPLXECB  DC    A(0)                ????
PPLXANS  DC    A(0)                ADDR OF PDL BUILT BY PARSE RTN
CCPPL    DC    A(0)                -> "UPT"
         DC    A(0)                -> "ECT"
         DC    A(PPLXECB)          -> "ECB"
         DC    A(0)                -> "PDL"
         DC    A(PPLXANS)          -> "ANSWER AREA"
         DC    A(0)                -> "CBUF"
         DC    A(0)                -> "USER WORK AREA"
WORKLEN  EQU   *-WORKAREA
DDSPLT   CSECT ,
CCPCL    IKJPARM DSECT=PDL
ODDNPDE  IKJIDENT 'DDNAME',UPPERCASE,VALIDCK=VALOLDDD,                 *
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   *
               PROMPT='DDNAME to be RENAMEd',                          *
               HELP='DDNAME to be RENAMEd'
NDDNPDE  IKJIDENT 'NEW DDNAME',UPPERCASE,VALIDCK=VALNEWDD,             *
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   *
               PROMPT='Required DDNAME',                               *
               HELP='New DDNAME that is required'
CCNPDE   IKJIDENT 'CONCAT NUMBER',INTEG,VALIDCK=VALCCN,                *
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=8,                  *
               PROMPT='Required DDNAME split number',                  *
               HELP='Concatenation number where split is required'
         IKJENDP
CCPCL    AMODE ANY
CCPCL    RMODE ANY
DSECTS   DSECT ,
        IKJPPL ,
        IKJCPPL ,
        CVT    DSECT=YES,LIST=YES
        IHAPSA ,
        IHAASCB ,
        IKJTCB SYS=AOS2,DSECT=YES,LIST=YES
        IEZJSCB ,                  "JSCB" MAP
IEFTIOT  DSECT ,
        IEFTIOT1 ,
IEFSIOT  DSECT ,
        IEFASIOT ,
        IHADSAB ,
DDSPLT   CSECT ,
        REGEQU ,
         END   DDSPLT

DECONCAT SOURCE

 TITLE 'DECONC, DECONCATENATE TWO "DDNAME"S TSO COMMAND.'
         MACRO ,
         $ASMDATE ,
         B     4+8+8+8(,R15)
         DC    CL8'&SYSECT'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         MEND  ,
DECONC   CSECT ,
DECONC   AMODE ANY
DECONC   RMODE ANY
        $ASMDATE ,
         STM   R14,R12,12(R13)
         LR    R9,R1               SAVE "CPPL" PTR
         LR    R12,R15             SAVE ENTRY POINT AS BASE
         USING DECONC,R12
         LA    R3,WORKLEN          LENGTH OF WORKAREA
        GETMAIN R,LV=(R3)
         LA    R1,0(,R1)
         LR    R2,R1
         SLR   R15,R15
         MVCL  R2,R14
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         LA    R10,0(,R13)         WORKAREA
         USING WORKAREA,R10          AND ADDRESS IT
         USING CPPL,R9
         MVC   (PPLUPT-PPL)+CCPPL,CPPLUPT A(UPT)
         MVC   (PPLECT-PPL)+CCPPL,CPPLECT A(ECT)
         MVC   (PPLCBUF-PPL)+CCPPL,CPPLCBUF A(CBUF)
         DROP  R9                  DIS-OWN "CPPL"
         L     R0,=A(CCPCL)                  A(PCL)
         ST    R0,(PPLPCL-PPL)+CCPPL         A(PCL)
         LA    R0,PPLXECB                    A(ECB)
         ST    R0,(PPLECB-PPL)+CCPPL         A(ECB)
         LA    R0,PPLXANS                    A(ANS)
         ST    R0,(PPLANS-PPL)+CCPPL         A(ANS)
         ST    R10,(PPLUWA-PPL)+CCPPL        A(WORKAREA)
        CALLTSSR EP=IKJPARS,MF=(E,CCPPL)
         LTR   R15,R15
         BZ    PARSOK
 B *+1  TPUT   PERR,PERRL
         B     RETURN
PARSOK   EQU   *
         MVC   TXTDDN+(S99TUKEY-S99TUNIT)(2+2),=AL2(DCCDDNAM,1)
         LA    R1,ALCS99RB         POINT AT REQUEST BLOCK
         ST    R1,PTRS99RB           AND SAVE IN POINTER
         OI    PTRS99RB,X'80'      SET END-OF-LIST POINTER
         XC    ALCS99RB,ALCS99RB   CLEAR REQUEST BLOCK
         LA    R1,TEXTPTRS         POINT AT TEXT UNIT POINTER LIST
         ST    R1,ALCS99RB+(S99TXTPP-S99RB) AND SAVE ADDRESS
         MVI   ALCS99RB+(S99RBLN-S99RB),(S99RBEND-S99RB) SET LENGTH
         MVI   ALCS99RB+(S99VERB-S99RB),S99VRBDC SET "DECONC" REQUEST
         LA    R14,TXTDDN          "DDNAME" TEXT UNIT
         ST    R14,TEXTPTRS        SAVE IN TEXT-POINTER LIST
         OI    TEXTPTRS,X'80'      SET END-OF-LIST POINTER
         LA    R1,PTRS99RB
        DYNALLOC ,                 GO TO DYNAMIC ALLOCATION
         SLR   R9,R9               ASSUME RETURN CODE 0
         LTR   R15,R15             TEST RETURN CODE FROM "DYNALLOC"
         BZ    DYNALCOK              OKAY, CARRY ON
         ST    R15,S99RETCD        SAVE "R15" RETURN CODE
        LOAD   EPLOC=JEFF02NM      LOAD "IKJEFF02"
         ST    R0,JEFF02EP         SAVE "IKJEFF02" ENTRY POINT
         LA    R14,ALCS99RB
         LA    R15,S99RETCD
         LA    R0,JEFF02EP         "IKJEFF02" ENTRY POINT
         LA    R1,=X'00,32'        FLAGS
         L     R2,4(,R13)          PREVIOUS SAVE-AREA
         L     R2,24(,R2)          CALLER'S "R1"="CPPL"
         STM   R14,R2,JEFF18PM     SAVE AS "IKJEFF18" PARM-LIST
         LA    R1,JEFF18PM         POINT AT "IKJEFF18" PARM-LIST
        LINK   EP=IKJEFF18         ISSUE DIAGNOSTIC MESSAGE
        DELETE EPLOC=JEFF02NM      DELETE "IKJEFF02"
         XC    JEFF02EP,JEFF02EP   REMOVE "IKJEFF02" ENTRY POINT
         LA    R9,8   *** R15 ^= 0 AFTER SVC 99
DYNALCOK EQU   *
RETURN   EQU   *
        IKJRLSA PPLXANS
         LA    R0,WORKLEN
         LA    R1,0(,R13)
         L     R13,4(,R13)
        FREEMAIN R,LV=(0),A=(1)
         LR    R15,R9              COPY RETURN CODE
        RETURN (14,12),RC=(15)
VALIDCK  EQU   *
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         BALR  R12,0
         L     R12,PROGBASE-*(,R12)
         LR    R7,R1               COPY PARM
         L     R10,4(,R7)          WORKAREA
         L     R6,0(,R7)           "PDE" ADDRESS
         L     R4,0(,R6)           ADDR OF "DDNAME" PARAMETER
         LH    R5,4(,R6)           LENGTH
         LTR   R5,R5               ARE WE SURE SOMETHING THERE?
         BNP   VALRET4               NO, THEN ERROR
         STH   R5,TXTDDNX+(S99TULEN-S99TUFLD) SET ENTRY LENGTH
         MVC   TXTDDNX+(S99TUPRM-S99TUFLD)(8),=CL8' '
         BCTR  R5,0                MINUS 1 FOR "EX"
         EX    R5,*+4              MVC   TXTDDNX+...(*-*),0(R4)
           MVC   TXTDDNX+(S99TUPRM-S99TUFLD)(*-*),0(R4)
         LA    R1,TXTDDNX+(S99TUPRM-S99TUFLD)
        DEVTYPE (1),JEFF18PM       CHECK "DDNAME" PRESENT
         LTR   R15,R15             WAS "DDNAME" FOUND?
         BNZ   VALRET4               NO, THEN ERROR
         SLR   R15,R15
VALRET   EQU   *
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
VALRET4  EQU   *
         LA    R15,4
         B     VALRET
PROGBASE DC    A(DECONC)
JEFF02NM DC    CL8'IKJEFF02'       "IKJEFF02"
         LTORG ,
WORKAREA DSECT ,
WORKSAVE DC    18F'0'
TXTDDN   DC    Y(DCCDDNAM,*-*)     "DDNAME" TEXT UNIT
TXTDDNX  DC    XL(2+8)'00'         "DDNAME"
         DC    0D'0'
ALCS99RB DC    XL(S99RBEND-S99RB)'00' SVC 99 REQUEST BLOCK
PTRS99RB DC    A(ALCS99RB)         -> ALCS99RB
TEXTPTRS DC    6A(0)               SVC 99 TEXT UNIT POINTER LIST
S99RETCD DC    A(0)                "R15" AFTER "SVC-99"
JEFF18PM DC    12A(0)              "IKJEFF18" PARM-LIST
JEFF02EP DC    A(0)                "IKJEFF02" PARM-LIST
PPLXECB  DC    A(0)                ????
PPLXANS  DC    A(0)                ADDR OF PDL BUILT BY PARSE RTN
CCPPL    DC    A(0)                -> "UPT"
         DC    A(0)                -> "ECT"
         DC    A(PPLXECB)          -> "ECB"
         DC    A(0)                -> "PDL"
         DC    A(PPLXANS)          -> "ANSWER AREA"
         DC    A(0)                -> "CBUF"
         DC    A(0)                -> "USER WORK AREA"
WORKLEN  EQU   *-WORKAREA
DECONC   CSECT ,
CCPCL    IKJPARM DSECT=PDL
DDNPDE   IKJIDENT 'DDNAME',UPPERCASE,VALIDCK=VALIDCK,                  *
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   *
               PROMPT='DDNAME to be DECONCATenated',                   *
               HELP='DDNAME to be DECONCATenated'
         IKJENDP
        IKJPPL
        IKJCPPL
        IKJPSCB ,
        IEFZB4D2 ,
        IEFZB4D0 ,
        CVT   DSECT=YES,LIST=YES
        IHAPSA ,
        IHAASCB ,
DECONC   CSECT ,
        REGEQU ,
         END   DECONC


Martin Hamilton
Technical Consultant
Thomson Tour Operations Ltd (UK)         c Thomson Tour Operations 1995

