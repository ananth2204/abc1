Hardcopy DSLIST
This program was written in response to a group of TSO users who created a large
number of relatively small files.  To control these what they wanted was the
LONG option of the DSLIST produced as a hardcopy listing.
The generic name is passed via the PARM in the JCL; there was no requirement to
try and handle uncatalogued datasets or to restrict the search to specific
devices.  The catalog search is done by the TSO Catalog Service Module IKJEHCIR.
This has to be passed an amount of storage sufficient to hold all catalog data
that satisfies the generic search.  As written the program allocates it 16K.
IKJEHCIR will issue a return code of 32 if the buffer is too small and U0228
will terminate accordingly.
The catalog information is used to search the VTOCs for each dataset.  The RC
column on the printout is the return code from the VTOC search.  The most likely
non-zero value will be 8 Ð a dataset is on the catalog but not on the disk.  A
non-zero return code will not terminate the program.  A dummy return code of 4
is produced if the dataset is not held on DASD.
In calculating the space allocated, only 3350 and 3380 devices are supported.
The space shown is the allocation on that device; there is one line for each
pack in a multi-volume file.  The primary allocation is always shown in tracks.
The DD statement for SYSOUT needs to be defined with a DCB parameter of
(LRECL=133,RECFM=FA).
* THIS PROGRAM ACCEPTS A GENERIC DSNAME FOR THE PARAMETER LIST AND
* PASSES IT ON TO THE TSO CATALOG INFORMATION ROUTINE WHICH RETURNS
* A LIST OF ALL DATASETS WITH THOSE QUALIFIERS.
U0228    CSECT
         USING *,R15
         SAVE  (14,12),,*
         BALR  R12,R0
         USING *,R12
         ST    R13,SAVER+4
         MVC   8(4,R13),SAVEA
         L     R13,SAVEA
         B     START
SAVER    DC    18F'0'
SAVEA    DC    A(SAVER)
START    L     R5,0(R1)                LOAD PARAMETER ADDRESS
         OPEN  (SYSOUT,(OUTPUT))       OPEN FILE
         LH    R2,0(R5)                LOAD PARAM DATA LENGTH
         CH    R2,=H'0'                GOT TO BE SOME DATA
         BE    NODATA                  THERE ISN'T - TERMINATE
         BCTR  R2,R0                   SUB 1 FOR EX
         EX    R2,PDATA                MOVE TO PARAMETER LIST
* GET AND FORMAT DATE AND TIME
         TIME
         ST    R0,TIMEDATE             STORE TIME
         MVC   EDWF(11),=X'F020217A20207A20202020'
         ED    EDWF(11),TIMEDATE       FORMAT TIME
         MVC   RTIME,EDWF+1            MOVE TO PRINT LINE
         ST    R1,TIMEDATE             STORE DATE - JULIAN
         BAL   R8,CONVDATE             CONVERT DATE TO DD/MM/YY
         MVC   EDWF(10),=X'F0202021612020612020'
         ED    EDWF(10),TIMEDATE       FORMAT THE DATE
         MVC   RDATE,EDWF+2            MOVE TO PRINT LINE
         LA    R5,2048                 GET SOME STORAGE
         LA    R5,2048(R5)
         SLA   R5,1                    MULTIPLY BY 2 (GIVING 8K)
         SLA   R5,1                    AND AGAIN (GIVING 16K)
         LR    R10,R5                  SAVE LENGTH OF GETMAIN
         GETMAIN RU,LV=(R5),SP=2
         LR    R4,R1                   STORE ADDR FOR CLEARING
         LR    R11,R1                  AND SAVE IN ITS BASE
         STCM  R4,B'1111',CIRWA        STORE ADDR IN PARM LIST
         XR    R7,R7                   CLEAR STORAGE TO X'00'
         MVCL  R4,R6
         STH   R10,0(R11)              AND SAVE ITS LENGTH
         LOAD  EP=IKJEHCIR             LOAD CAT SERVICE MODULE
         LR    R15,R0                  SAVE LOAD ADDRESS
         LA    R1,PARML                POINT TO PARAMETERS
         BALR  R14,R15                 AND RUN
         LTR   R15,R15                 CATALOG SEARCH OK?
         BNE   CATFAIL                 NO - TERMINATE
         LA    R10,VTOCD               POINT TO VTOC DATA
         USING VTOC,R10
         LA    R11,4(R11)              JUMP CATALOG TABLE PFX.
         USING CATWA,R11
DATALP   MVI   LINES,C' '              CLEAR PRINT LINE
         MVC   LINES+1(131),LINES
         CLI   0(R11),X'FF'            END OF TABLE?
         BE    RETURN                  YES - TERMINATE
         MVC   LDSN,CATDSN             MOVE DATASET NAME TO PRINT
         MVC   VTOCD,CATDSN
         MVC   LVOL,CATSER             - AND DEVICE SERIAL NO.
         MVC   WSVOLS,CATVOLS          - AND NO.OF VOLUMES
         TM    CLASS,B'00100000'       IS DSN ON DISK?
         BNO   NODISK                  NO - IGNORE VTOC SEARCH
         OBTAIN GETLST                 READ THE VTOC
         STC   R15,CIRLOCRC            SAVE RETURN CODE
         BAL   R8,CONVRC               FORMAT INTO PRINTLINE
         CLI   CIRLOCRC,X'08'          RETURN CODE 8
         BNE   *+18                    NO.
         MVC   LMSG(15),=C'NOT ON THE DISK'
         BAL   R8,PRINT                PRINT
         B     NEXT                    AND TRY NEXT ENTRY
         CLI   CIRLOCRC,X'00'          RC0
         BE    *+12                    YES
         BAL   R8,PRINT                PRINT
         B     NEXT
         MVC   WF2(3),DS1CREDT         MOVE FILE CREATE DATE
         BAL   R8,VTOCDATE             CONVERT TO DDMMYY
         MVC   EDWF(10),=X'F0202021612020612020'
         ED    EDWF(10),TIMEDATE       EDIT
         MVC   LCREATE,EDWF+2          - INTO PRINT BUFFER
         MVC   WF2(3),DS1REFD          MOVE LAST REFERENCED DATE
         BAL   R8,VTOCDATE             CONVERT TO DDMMYY
         MVC   EDWF(10),=X'F0202021612020612020'
         ED    EDWF(10),TIMEDATE       EDIT
         MVC   LREF,EDWF+2             - INTO PRINT BUFFER
* FORMAT DATASET ORGANISATION
         TM    DS1DSORG,DS1DSGIS       INDEXED SEQUENTIAL
         BNO   *+14
         MVC   LORG,=C'IS'
         B     DATALP1
         TM    DS1DSORG,DS1DSGPS       PHYSICAL SEQUENTIAL
         BNO   *+14
         MVC   LORG,=C'PS'
         B     DATALP1
         TM    DS1DSORG,DS1DSGDA       DIRECT
         BNO   *+14
         MVC   LORG,=C'DA'
         B     DATALP1
         TM    DS1DSORG,DS1DSGPO       PARTITIONED
         BNO   DATALP1
         MVC   LORG,=C'PO'
DATALP1  TM    DS1RECFM,B'11000000'    UNDEFINED RECORD TYPE
         BNO   *+12                    NO
         MVI   LRECFM,C'U'
         B     DATALP2
         TM    DS1RECFM,B'10000000'    FIXED?
         BNO   *+12                    NO
         MVI   LRECFM,C'F'
         B     *+16
         TM    DS1RECFM,B'01000000'    VARIABLE?
         BNO   DATALP2                 NO - FORGET IT
         MVI   LRECFM,C'V'
         TM    DS1RECFM,B'00010000'    BLOCKED?
         BNO   *+8                     NO
         MVI   LRECFM+1,C'B'
         TM    DS1RECFM,B'00001000'    SPANNED
         BNO   *+8
         MVI   LRECFM+2,C'S'
         TM    DS1RECFM,B'00000100'    ASA CONTROL CHARS
         BNO   DATALP2                 NO
         CLI   LRECFM+1,C' '           YES - DETERMINE IF FLAG TO
         BNE   *+12                    - BE PUT IN POSITION 2
         MVI   LRECFM+1,C'A'                 - OR 3
         B     DATALP2
         MVI   LRECFM+2,C'A'
DATALP2  BAL   R8,NOOFEXTS             FORMAT NO OF EXTENTS
         ICM   R15,B'0011',DS1LRECL    LOAD RECORD LENGTH
         CVD   R15,WF3
         MVC   EDWF(6),=X'402020202120'
         ED    EDWF(6),WF3+5           FORMAT FOR PRINTING
         MVC   LRECL,EDWF+1
         ICM   R15,B'0011',DS1BLKL     BLOCKSIZE
         CVD   R15,WF3
         MVC   EDWF(6),=X'402020202120'
         ED    EDWF(6),WF3+5           FORMAT FOR PRINTING
         MVC   LBLKSIZE,EDWF+1
         ICM   R15,B'0111',DS1SCALO+1  SECONDARY SPACE ALLOCATION
         CVD   R15,WF3
         MVC   EDWF(6),=X'402020202120'
         ED    EDWF(6),WF3+5           FORMAT FOR PRINTING
         MVC   LSECALL,EDWF+1
         TM    DS1SCALO,X'C0'          CYLINDER ALLOCATION
         BNO   *+14
         MVC   LALLFL,=C'CYL'
         B     DATALP3
         TM    DS1SCALO,X'80'          TRACK ALLOCATION
         BNO   *+14
         MVC   LALLFL,=C'TRK'
         B     DATALP3
         TM    DS1SCALO,X'40'          BLOCK ALLOCATION
         BNO   DATALP3
         MVC   LALLFL,=C'BLK'
* DETERMINE THE SPACE ALLOCATED TO THE DATASET - ASSUME THE
* DATASET IS ALL ON A SINGLE DRIVE
DATALP3  LA    R15,DS1EXT1+2           POINT TO FIRST EXTENT DESCRIPTOR
         ZAP   WF2,=P'0'               INITIALISE COUNTER
         XR    R6,R6                   CLEAR ACCUMULATOR
         TM    TYPE,B'00001011'        DATASET ON A 3350?
         BNO   *+12                    NO-3380 - TYPE=B'00001110'
         LH    R4,=H'30'               3350 - 30 TRACKS/CYL
         B     NEXTEXT2
         LH    R4,=H'15'               3380 - 15 TRACKS/CYL
         B     NEXTEXT2
NEXTEXT  LA    R15,10(R15)             POINT TO NEXT DESCRIPTOR
         AP    WF2,=P'1'               INCREMENT COUNTER
         CP    WF2,=P'3'               THIRD DESCRIPTOR?
         BL    NEXTEXT2                NO - LOWER
         BH    NEXTEXT1                GREATER THAN
         MVC   WF1(L'DS1PTRDS),DS1PTRDS SAVE PTR TO NEXT DSCB
         OBTAIN GETSEEK
         LTR   R15,R15                 OBTAIN OK?
         BE    *+32                    YES
         STC   R15,CIRLOCRC            SAVE RETURN CODE
         BAL   R8,CONVRC               CONVERT FOR DISPLAY
         MVC   LMSG(11),=C'TYPE 3 DSCB'
         BAL   R8,PRINT
         MVC   RC,=H'12'               RETURN CODE12
         B     RETURN
         LA    R15,VTOCDATA+6          JUMP TO START OF DATA
         B     NEXTEXT2
NEXTEXT1 CP    WF2,=P'7'               8TH EXTENT
         BNE   NEXTEXT2                NO
         LA    R15,1(R15)              YES-JUMP OVER FORMAT IDENTIFIER
NEXTEXT2 XR    R3,R3                   CLEAR REGISTER
         ICM   R3,B'0011',4(R15)       LOAD UPPER CYL LIMIT
         MR    R2,R4                   MULTIPLY CYLS BY TRACKS/CYL
         LR    R1,R3                   SAVE RESULT
         XR    R3,R3                   RE-CLEAR REGISTER
         ICM   R3,B'0011',6(R15)       LOAD UPPER LIMIT TRACKS
         LA    R3,1(R3)                PLUS 1
         AR    R1,R3                   ADD TO CYL VALUE
         XR    R3,R3
         ICM   R3,B'0011',0(R15)       LOAD LOWER LIMIT CYLS
         MR    R2,R4                   MULTIPLY BY TRACKS/CYL
         XR    R2,R2                   CLEAR REGISTER
         ICM   R2,B'0011',2(R15)       LOAD LOWER LIMIT TRACKS
         AR    R2,R3                   ADD CYL VALUE
         SR    R1,R2                   SUBTRACT FROM UPPER VALUE
         BP    *+8
         LA    R1,1(R1)                IF 0 FORCE 1
         AR    R6,R1                   ADD FINAL VALUE TO ACCUMULATOR
         BCT   R7,NEXTEXT              ANY MORE EXTENTS?
         CVD   R6,WF3                  CONVERT ALLOC TO DECIMAL
         MVC   EDWF(6),=X'402020202120'
         ED    EDWF(6),WF3+5           FORMAT FOR PRINTING
         MVC   LALLOC,EDWF+1           MOVE TO PRINT LINE
NEXTEXT3 BAL   R8,PRINT                PRINT
         XR    R7,R7                   CLEAR A REGISTER
         IC    R7,WSVOLS               LOAD NO. OF VOLUMES REMAINING
         SH    R7,=H'1'                SUBTRACT 1
         BNP   NEXT                    NOT POSITIVE - FINISHED
         STC   R7,WSVOLS               SAVE REMAINING VOLS
         MVI   LINES,C' '              CLEAR PRINT LINE
         MVC   LINES+1(131),LINES
         XR    R15,R15                 CLEAR ANOTHER REGISTER
         IC    R15,CATVOLS             LOAD TOTAL NO.OF VOLS
         SR    R15,R7                  SUB THE NO.PROCESSED
         MH    R15,=H'12'              MULTIPLY BY LEN OF VOL ENTRY
         LA    R15,46(R15,R11)         POINT TO VOL ENTRY
         MVC   LVOL,4(R15)             MOVE VOLSER TO PRINTLINE
         MVC   LDSN(8),=C'...DITTO'    DUMMY DSNAME
         LR    R7,R15                  SAVE ADDRESS
         OBTAIN GETLST
         STC   R15,CIRLOCRC            SAVE RETURN CODE
         BAL   R8,CONVRC               FORMAT INTO PRINTLINE
         CLI   CIRLOCRC,X'08'          RETURN CODE 8
         BNE   *+14                    NO.
         MVC   LMSG(15),=C'NOT ON THE DISK'
         B     NEXTEXT3                AND TRY NEXT ENTRY
         CLI   CIRLOCRC,X'00'          RC0
         BNE   NEXTEXT3                NO - IGNORE
         ZAP   WF2,=P'0'               ZEROISE COUNTER
         LR    R15,R7                  RESTORE VOLUME ENTRY ADDRESS
         BAL   R8,NOOFEXTS             FORMAT NO OF EXTENTS
         XR    R6,R6                   CLEAR ACCUMULATOR
         B     NEXTEXT+4               AND PROCESS EXTENTS
NODISK   MVC   LMSG(16),=C'NOT DISK DATASET'
         MVC   LRC,=C'04'              DUMMY RETURN CODE
         BAL   R8,PRINT                PRINT MSG
         B     NEXT
NEXT     XR    R14,R14                 CLEAR REGISTER
         IC    R14,CATVOLS             LOAD NO OF VOLS
         MH    R14,=H'12'              MULTIPLY BY LEN OF VOL ENTRY
         LA    R11,46(R14,R11)         POINT TO NEXT ENTRY
         B     DATALP
RETURN   CLOSE SYSOUT
         LH    R15,RC                  LOAD RETURN CODE
         L     R13,SAVER+4
         RETURN (14,12),RC=(15)
NODATA   MVC   RC,=H'16'
         B     RETURN
NOOFEXTS XR    R14,R14                 CLEAR A WORK REGISTER
         IC    R14,DS1NOEPV            LOAD NO OF EXTENTS
         LR    R7,R14                  SAVE THIS FOR LATER
         CVD   R14,WF1                 CONVERT TO DECIMAL
         UNPK  LXT,WF1+6(2)            UNPACK INTO PRINTLINE
         OI    LXT+1,X'F0'             REMOVE SIGN
         BR    R8
CATFAIL  MVI   LINES,C' '              BLANK OUT PRINT LINE
         MVC   LINES+1(131),LINES
         MVC   LDSN(15),=C'CATALOG FAILURE'
         BAL   R8,CONVRC               CONVERT RC TO DISPLAY
         BAL   R8,PRINT                AND PRINT
         MVC   RC,=H'20'               SET RETURN CODE20
         B     RETURN                  AND EXIT
CONVRC   XC    LRC,LRC                 BLANK OUT DISPLAY FIELD
         MVN   LRC+1(1),CIRLOCRC       MOVE NUMERIC BITS
         UNPK  LRC(1),CIRLOCRC         UNPACK-REVERSE ZONE/NUMERICS
         NI    LRC,X'0F'               LOSE THE ZONE BITS
         TR    LRC,TRTRC               CHANGE TO DISPLAY
         BR    R8                      AND RETURN
TRTRC    DC    C'0123456789ABCDEF'
* REFORMAT THE VTOC DATES FOR CONVERSION  TO DDMMYY
VTOCDATE XC    TIMEDATE,TIMEDATE       CLEAR WORK FIELD
         MVC   TIMEDATE+3(1),WF2       MOVE THE YEAR
         L     R14,TIMEDATE            LOAD
         CVD   R14,WF1                 CONVERT TO DECIMAL
         UNPK  WF3(2),WF1+6(2)         UNPACK
         OI    WF3+1,X'F0'             REMOVE THE SIGN
         MVC   TIMEDATE+2(2),WF2+1     MOVE THE DAY NUMBER
         L     R14,TIMEDATE            LOAD
         CVD   R14,WF1                 CONVERT TO DECIMAL
         UNPK  WF3+2(3),WF1+6(2)       UNPACK
         PACK  TIMEDATE,WF3(5)         AND PACK AS A SINGLE FIELD
CONVDATE UNPK  EDWF(5),TIMEDATE        UNPACK INPUT - YYDDD
         OI    EDWF+4,X'F0'            REMOVE ANY SIGN
         MVC   EDWF+14(2),EDWF         MOVE YEAR TO SAVE AREA
         PACK  WF2,EDWF(2)             PACK YEAR
         DP    WF2,=P'4'               CHECK FOR LEAP YEAR
         CP    WF2+7(1),=P'0'          - REMAINDER 0
         BH    *+10                    - NOT A LEAP YEAR
         ZAP   MONTH+2(2),=P'29'       SET FEB TO 29 DAYS
         PACK  WF2+4(4),EDWF+2(3)      PACK NO OF DAYS
         ZAP   WF2(4),=P'1'            SET MONTH COUNTER
         LA    R5,MONTH                LOAD ADDR OF TABLE
DAYLOOP  SP    WF2+4(4),0(2,R5)        DEDUCT MONTH VALUE FROM NO DAYS
         BNP   DAYLN                   TERM IF NEGATIVE OR ZERO
         AP    WF2(4),=P'1'            ADD 1 TO MONTH NO
         LA    R5,2(R5)                MOVE ALONG TABLE
         B     DAYLOOP
DAYLN    AP    WF2+4(4),0(2,R5)        ADD CURR MONTH BACK
         UNPK  EDWF+12(2),WF2(4)       UNPACK MONTH
         OI    EDWF+13,X'F0'           REMOVE SIGN
         UNPK  EDWF+10(2),WF2+4(4)     UNPACK DAY
         OI    EDWF+11,X'F0'           REMOVE SIGN
         PACK  TIMEDATE,EDWF+10(6)     PACK INTO OUTPUT
         ZAP   MONTH+2(2),=P'28'       FORCE FEB TO 28 DAYS
         BR    R8                      AND RETURN
PRINT    ST    R8,R8SAVE               SAVE RETURN ADDRESS
         CP    LC,=P'60'               NEW PAGE NEEDED?
         BL    *+8                     NO.
         BAL   R8,HDR                  YES - PRINT HEADINGS
         XR    R5,R5                   CLEAR REGISTER
         IC    R5,LINESL               LOAD LENGTH OF LINE
         EX    R5,LINEMVC              MOVE TO BUFFER
         BAL   R8,PRINT1               AND PRINT
         AP    LC,=P'1'                UP THE LINE COUNTER
         L     R8,R8SAVE               RESTORE RETURN ADDRESS
         BR    R8                      AND GO BACK.
HDR      ST    R8,R8SAVE1              SAVE RETURN ADDRESS
         IC    R5,T1L                  LOAD HEADING LENGTH
         EX    R5,TMVC                 MOVE TO BUFFER
         MVI   PRTDATA,C'1'            NEW PAGE
         BAL   R8,PRINT1               AND PRINT
         IC    R5,COLSL                LOAD COLUMN HEADING LENGTH
         EX    R5,COLMVC               MOVE TO BUFFER
         MVI   PRTDATA,C'0'            DOUBLE SPACE
         BAL   R8,PRINT1               AND PRINT
         ZAP   LC,=P'3'                RESET LINE COUNTER
         L     R8,R8SAVE1              RESTORE RETURN ADDRESS
         BR    R8                      AND GO BACK
PRINT1   PUT   SYSOUT,PRTDATA
         MVI   PRTDATA,C' '            CLEAR BUFFER
         MVC   PRTDATA+1(132),PRTDATA
         BR    R8
PDATA    MVC   TPARM(0),2(R5)
LINEMVC  MVC   PRTDATA+1(0),LINES
TMVC     MVC   PRTDATA+1(0),TITLE
COLMVC   MVC   PRTDATA+1(0),COLS
         LTORG
         DC    C'PARAMETER LIST >>>>'
         DS    0D
PARML    EQU   *
CIROPT   DC    X'06'
         DC    XL2'00'
CIRLOCRC DC    X'00'
CIPSRCH  DC    A(TPARM)
         DC    A(0)
CIRWA    DS    CL4
CIRSAVE  DC    A(CIRSA)
         DC    AL1(128)
CIRPSWD  DC    AL3(0)
CIRSA    DC    CL72' '
PRTDATA  DC    CL133' '
TITLE    EQU   *                       PAGE HEADINGS
RDATE    DS    CL8
         DC    CL33' '
         DC    C'LIST OF DATASETS - '
TPARM    DC    CL44' '
         DC    CL6'U0228'
RTIME    DS    CL8
COLS     EQU   *                       COLUMN HEADINGS
         DC    CL45'DATASET NAME'
         DC    C'RC CREATED  LAST REF DSORG LRECL RECFM BLKS TRKALL 2NDC
               ALL    XT VOLSER'
LINES    EQU   *
LDSN     DC    CL44' '                 DATASET NAME
         DC    C' '
LRC      DC    CL2' '                  CAMLST SEARCH RC
         DC    C' '
LCREATE  DC    CL8' '                  DATASET CREATE DATE
         DC    C' '
LREF     DC    CL8' '                  LAST REFERENCED
         DC    CL3' '
LORG     DC    CL2' '                  DATASET ORGANISATION
         DC    CL2' '
LRECL    DC    CL5' '                  RECORD LENGTH
         DC    CL2' '
LRECFM   DC    CL3' '                  RECORD FORMAT
         DC    C' '
LBLKSIZE DC    CL5' '                  BLOCKSIZE
         DC    CL2' '
LALLOC   DC    CL5' '                  TRACKS ALLOCATED
         DC    CL2' '
LSECALL  DC    CL5' '                  SECONDARY ALLOCATION
LALLFL   DC    CL3' '
         DC    C' '
LXT      DC    CL2' '                  NO OF EXTENTS
         DC    C' '
LVOL     DC    CL6' '                  VOLSER
         DC    C' '
LMSG     DC    CL16' '
LINESE   EQU   *
T1L      DC    AL1(COLS-TITLE-1)
COLSL    DC    AL1(LINES-COLS-1)
LINESL   DC    AL1(LINESE-LINES-1)
LC       DC    PL2'100'
EDWF     DS    2D
         ORG   EDWF
WF1      DS    D
WF3      DS    D
         ORG
WF2      DS    CL8
R8SAVE   DS    F
R8SAVE1  DS    F
TIMEDATE DS    F
RC       DC    H'0'
WSVOLS   DS    X
         DC    C'VTOC WORK AREA >>>>'
VTOCD    DC    CL44' '
VTOCDATA DS    CL140
MONTH    DC    P'31',P'28',P'31',P'30',P'31',P'30',P'31',P'31',P'30',P'C
               31',P'30',P'31'
SYSOUT   DCB   DDNAME=SYSOUT,                                          C
               DSORG=PS,                                               C
               MACRF=PM
GETLST   CAMLST SEARCH,VTOCD,LVOL,VTOCDATA
GETSEEK  CAMLST SEEK,WF1,LVOL,VTOCDATA
CATWA    DSECT
CATFL    DS    C
CATDSN   DS    CL44
CATVOLS  DS    X
CATDEV   DS    0CL4
MODEL    DS    C
OPTIONS  DS    C
CLASS    DS    C
TYPE     DS    C
CATSER   DS    CL6
         DS    CL2
CATNEXT  EQU   *
VTOC     DSECT
         IECSDSL1 (1)
         END


Jack Allen
DBA
Babcock Energy (UK) © Xephon 1988


