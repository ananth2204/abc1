Displaying the SMF-id on all ISPF panels


THE PROBLEM

With the increasing popularity of VTAM session managers, it
is almost a standard practice (at least for system programmers)
to log on to multiple systems (Amdahl's MDF or IBM's
PR/SM) and perform maintenance activities such as ISPF edits,
submitting batch jobs, or entering console commands.  This
type of product has certainly made the life of a system
programmer a lot easier.  But, unfortunately, it has also
introduced a new problem.  Namely, before pressing the
ENTER key on the keyboard for any one of the above
activities, it would be nice to know just exactly which system
one is logged on to!  For example, not knowing which system
one is on, a command intended for stopping JES2 on a test
system could be entered to a production system instead.

To find out which system one is on, ideally, the best way is to
display the SMF-id on all the ISPF panels.  Unfortunately, the
standard ISPF panels do not display SMF-ids and to change the
panels manually to do so would be almost impossible and not
advisable.


THE SOLUTION

I decided to write a simple front end to the standard TMP
(IKJEFT01).  The front end, PWLTMP, will first attach a
subtask, PWLTASK1, and then link to the standard IKJEFT01.
The whole purpose of PWLTASK1 is to wake up at regular
intervals and write out the current system's SMF-id to a user
defined location at the terminal, thus avoiding changing any
ISPF panels to display SMF-ids.

The time interval I picked is 6 seconds.  Any other value can
be used by changing variable INTVL in program PWLTASK1.
This time interval is the maximum wait time before the SMF-id
will be displayed on the current panel.  By selecting the
optimum time interval, the SMF-id will usually show up on the
panel after pressing the ENTER key two to  three times.  (The
objective is, of course, to show the SMF-id before making any
permanent changes or entering any critical commands.)

The location that I have found to be most convenient is row 1
column 50.  This is usually an information area that can be
safely overlaid with the SMF-id.

Following are some simple steps to install PWLTMP:

1       Compile and link PWLTMP, PWLTASK1, and
       PWLCOMM1 into your log-on library.  As the standard
       IKJEFT01 is APF-authorized, PWLTMP and PWLTASK1
       must be linked with 'AC=1'.

2       Change your log-on procedure to log-on to PWLTMP
       instead of IKJEFT01.

3       Insert the following line in your start-up CLIST before
       invoking ISPF:
       CALL your.library(PWLCOMM1)  'SMFID=ON,ROW=01,COL=50'

As the subtask PWLTASK1 always writes to a pre-defined
position on the screen, regardless of which panel is being
displayed, it might be, at times, necessary to change the
display position or turn off the SMFID display temporarily.  To
do so, the program PWLCOMM1 can be called any time to:

1       Enable/disable the display of the SMF-id.

2       Change the location (row number and column number) to
       display the SMF-id.

Examples

1       To turn off the SMF-id display:

       CALL your.library(PWLCOMM1)  'SMFID=OFF'

2       To display the SMF-id at row 2 column 25:

       CALL your.library(PWLCOMM1)  'SMFID=ON,ROW=02,COL=25'

The routine, PWLSBA, called by PWLCOMM1 may be of
particular interest to some readers.  It illustrates how to
calculate the 3270 buffer address from the input row and
column numbers.  Another interesting point is the
communication area used by PWLTASK1 and PWLCOMM1.
This area is obtained by PWLTASK1.  An enqueue is issued
using the area address as the minor name.  To find the address
of the communication area, PWLCOMM1 simply issues a
GQSCAN - the returned resource name is the required address.

This method to display SMF-id should be turned off when
using ISPF option 6 or native TSO.  (It will still work but the
screen may need to be cleared before entering the next
command!)  Otherwise, I have used this facility successfully
with most standard ISPF panels (on 3270 terminals with screen
size of 80 columns by 24 rows or 43 rows) and have found it to
be extremely valuable when switching between multiple
systems.  It has certainly prevented me (more than once!) from
entering jobs or commands to the wrong system.


SOURCE LISTING FOR PWLTMP

PWLTMP CSECT
         USING PWLTMP,R12
         STM   R14,R12,12(R13)
         LR    R12,R15
         LR    R7,R13
         LR    R8,R1                      SAVE R1
         GETMAIN RC,LV=328,SP=1           (72+256 BYTES)
         LTR   R15,R15
         BNZ   RETURN3
         LR    R13,R1
         ST    R7,4(R13)
         ST    R13,8(R7)
         B     INIT
         DC    C'PWLTMP'
INIT     DS    0H
         LR    R1,R8                RESTORE R1
INIT01   DS    0H
         LA    R1,72(R13)           PT TO COMMUNICATION AREA
         MVC   0(8,R1),=C'PWLCOMM1' MOVE IN ID
         ST    R1,RNAME
         ENQ   (QNAME,RNAME,E,4,STEP)
         LTR   R15,R15
         BZ    ENQOK
         WTO   'ERR1'
ENQOK    DS    0H
         ATTACH EP=PWLTASK1
         ST    R1,TCB2
         LR    R1,R8
         ST    R13,SAVE13
         LINK  EP=IKJEFT01
         USING *,R12
         BALR  R12,R0
         LA    R2,2
         SR    R12,R2
         DETACH TCB2
         L     R13,SAVE13
         LR    R2,R13
         L     R13,4(,R13)
         FREEMAIN RC,LV=328,A=(2),SP=1
RETURN3  DS    0H
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
QNAME    DC    C'PWLCOMM1'
RNAME    DS    F                  ADDR OF COMMUNICATION AREA
SAVE13   DS    18F
TCB2     DC    F'0'
         LTORG
         END   PWLTMP


SOURCE LISTING FOR PWLTASK1

PWLTASK1 CSECT
         USING PWLTASK1,R12
         STM   R14,R12,12(R13)
         LR    R12,R15
         LR    R7,R13
         LR    R8,R1                      SAVE R1
         GETMAIN RC,LV=72,SP=1
         LTR   R15,R15
         BNZ   RETURN3
         LR    R13,R1
         ST    R7,4(R13)
         ST    R13,8(R7)
         B     INIT
         DC    C'PWLTASK1'
INIT     DS    0H
         LR    R1,R8                RESTORE R1
         MODESET MODE=SUP
         MODESET KEYADDR=ZERO,SAVEKEY=OLDKEY,WORKREG=2
         $#SMFID
         MVC   MYSMFID(4),0(R1)
         GQSCAN AREA=(SCANAREA,296),SCOPE=STEP,RESNAME=(QNAME1)
         L     R1,SCANAREA+40
         CLC   0(8,R1),=C'PWLCOMM1'
         BNE   INIT01
         ST    R1,COMM1ADR          SAVE ADDR OF COMMUNICATION AREA
INIT01   DS    0H
         STIMER WAIT,BINTVL=INTVL   6 SECS
         ICM   R2,15,COMM1ADR
         BZ    INIT01               CAN'T FIND COMMUNICATION AREA
         TM    8(R2),X'80'          SMFID BIT ON?
         BNO   INIT01
         MVC   MESS2ADR(2),10(R2)   ADDR OF SMFID
         L     R2,X'224'            ASCB
         MVC   FOOT+00(4),0(R2)
         L     R2,X'3C'(R2)         TSB
         MVC   FOOT+04(4),0(R2)
         ICM   R2,15,X'60'(R2)      TSBX
         MVC   FOOT+08(4),0(R2)
         BZ    NOSMFID
         ICM   R2,15,X'24'(R2)      TVWA
         MVC   FOOT+12(4),0(R2)
         BZ    NOSMFID
         ICM   R2,15,X'2C'(R2)      TVWAEOQ
         MVC   FOOT+16(4),0(R2)
         BZ    SMFID
         ST    R2,FOOT+20
         CLC   MYSMFID(4),X'1A'(R2)        SMFID DISPLAYED?
         BE    NOSMFID
         CLC   MYSMFID(4),X'1E'(R2)        FOR VTAM 3.3
         BE    NOSMFID
         MVC   FOOT+24(32),0(R2)
SMFID    DS    0H
         MVC   MESSAGE2+6(4),MYSMFID
         LA    R4,MESSAGE2
         TPUT  (R4),MESS2L,FULLSCR,NOWAIT
         L     R1,FOOT+56
         LA    R1,1(R1)
         ST    R1,FOOT+56
NOSMFID  DS    0H
         B     INIT01
RETURN3  DS    0H
         LR    R2,R13
         L     R13,4(,R13)
         FREEMAIN RC,LV=72,A=(2),SP=1
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
SAVEL    DC    F'72'
ECB1     DC    F'0'
TCB1     DC    F'0'
T10MIN   DC    F'60000'          LOW ORDER BIT=0.01 SEC
INTVL    DC    F'600'            LOW ORDER BIT=0.01 SEC
ZERO     DC    F'0'
OLDKEY   DC    F'0'
FOOT     DS    40F
MYSMFID  DC    CL4' '
REPLY    DC    CL1' '
MESSAGE  DS    0H
         DC    X'C11140401DE8'     SET FIELD INTENSIFIED AT R1C1
         DC    CL4'1 HR'                     PROTECTED
MESSL    EQU   *-MESSAGE
MESSAGE2 DS    0H
         DC    X'C111'             SET FIELD INTENSIFIED AT R1C6
MESS2ADR DC    X'40C5'             DEFAULT ADDR = R1C6
         DC    X'1DE8'             PROTECTED
         DC    CL4'SMFI'                     PROTECTED
MESS2L   EQU   *-MESSAGE2
COMM1ADR DC    F'0'
QNAME1   DC    C'PWLCOMM1'
SCANAREA DS    CL296
         LTORG
         ISGRIB
         END   PWLTASK1


SOURCE LISTING FOR PWLCOMM1

         TITLE ' UPDATE COMMUNICATION AREA'
PWLCOMM1 INIT
         LTR   R1,R1
         BZ    EXIT
         LR    R8,R1              SAVE INPUT PARM ADDR
PARSE02  DS    0H
         ICM   R2,15,0(R8)
         BZ    EXIT
         LA    R4,PARMIN
         LH    R5,0(R2)
         LR    R3,R5
         LA    R2,2(R2)
         MVCL  R4,R2
         LA    R2,PARMIN
         $#FIND REC=(R2),CHAR=('SMFID=','S=')
         LTR   R1,R1
         BZ    PARSE10
         CLC   =C'ON',0(R1)
         BNE   PARSE10
         OI    PFLAG1,PSMFIDON
PARSE10  DS    0H
         LA    R2,PARMIN
         $#FIND REC=(R2),CHAR=('ROW=','R=')
         LTR   R1,R1
         BZ    PARSE20
         PACK  WORK1(8),0(2,R1)       ROW NUMBER
         CVB   R1,WORK1
         STH   R1,BUFADDR
         OI    PFLAG1,PROW
PARSE20  DS    0H
         LA    R2,PARMIN
         $#FIND REC=(R2),CHAR=('COL=','C=')
         LTR   R1,R1
         BZ    PARSE80
         PACK  WORK1(8),0(2,R1)       COL NUMBER
         CVB   R1,WORK1
         STH   R1,BUFADDR+2
         OI    PFLAG1,PCOL
PARSE80  DS    0H
         TM    0(R8),X'80'                HANDLE ONLY 1 PARM FOR NOW
         BNO   EXIT
PARSE90  DS    0H
         TM    PFLAG1,PROW
         BO    PARSE92
         MVC   BUFADDR(2),=XL2'1'         DEFAULT ROW 1
PARSE92  DS    0H
         TM    PFLAG1,PCOL
         BO    PARSE94
         MVC   BUFADDR+2(2),=XL2'6'       DEFAULT COL 6
PARSE94  DS    0H
         LA    R1,BUFADDR
         CALL  PWLSBA
         CLC   BUFADDR(2),=H'0'
         BNE   SCAN10
         WTO   'ERROR FROM SBA'
         B     EXIT
SCAN10   DS    0H
         GQSCAN AREA=(SCANAREA,296),SCOPE=STEP,RESNAME=(QNAME1)
         L     R1,SCANAREA+40
         CLC   0(8,R1),=C'PWLCOMM1'
         BNE   EXIT
         ST    R1,COMM1ADR
         MVC   10(2,R1),BUFADDR         SAVE BUFFER ADDRESS
         TM    PFLAG1,PSMFIDON
         BNO   SCAN20
         OI    8(R1),PSMFIDON           TURN ON SMFID DISPLAY
         B     EXIT
SCAN20   DS    0H
         NI    8(R1),255-PSMFIDON       TURN OFF SMFID DISPLAY
         B     EXIT
PARMIN   DS    10F
WORK1    DS    D
BUFADDR  DS    F
COMM1ADR DS    F                        ADDR OF COMMUNICATION AREA
QNAME1   DC    C'PWLCOMM1'
SCANAREA DS    CL296
PFLAG1   DS    XL1
PSMFIDON EQU   X'80'
PROW     EQU   X'40'                    COL NUMBER SPECIFIED
PCOL     EQU   X'20'                    ROW NUMBER SPECIFIED
         ISGRIB
         END   PWLCOMM1


SOURCE LISTING FOR PWLSBA

         TITLE ' CALCULATE 3270 BUFFER ADDRESS '
PWLSBA   INIT
* R1=ADDR OF PARMLST IN THE FOLLOWING FORMAT:
*        DS    XL2                      ROW NUMBER
*        DS    XL2                      COL NUMBER
         LR    R8,R1                    SAVE PARMLST ADDR
         LH    R2,0(R1)                 ROW NUMBER
         LH    R3,2(R1)                 COL NUMBER
         CH    R2,=H'0'
         BNH   ERREXIT
         CH    R2,ROWS
         BH    ERREXIT
         CH    R3,=H'0'
         BNH   ERREXIT
         CH    R3,COLS
         BH    ERREXIT
         SH    R2,=H'1'
         SH    R3,=H'1'
         MH    R2,COLS                  ASSUME COL SIZE = 80
         AR    R3,R2                    BYTE ADDR
         ST    R3,FOOT1
         SLL   R3,2                     GET FIRST 6 BITS
         STCM  R3,2,WA
         SRL   R3,2
         N     R3,=XL4'3F'              LAST 6 BITS
         STC   R3,WA+1
         TR    WA,TRTAB
         MVC   0(2,R8),WA               SAVE 12 BIT ADDR IN INPUT PARM
         B     EXIT
ERREXIT  DS    0H
         XC    0(2,R8),0(R8)            ZERO OUT RETURN BUFFER ADDR
         B     EXIT
ROWS     DC    X'0018'                  ROW SIZE = 24
COLS     DC    X'0050'                  COL SIZE = 80
WA       DC    XL2'00'
FOOT1    DS    F
TRTAB    DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
         END   PWLSBA


SOURCE LISTING FOR MACRO $#FIND

         MACRO
&LBL     $#FIND   &REC=,&CHAR=
         AIF   ('&REC' EQ '').ERR1
         AIF   ('&REC'(1,1) EQ '(').ISREG1
         LA    R1,&REC
         AGO   .XM02
.ISREG1  ANOP
         LA    R1,0&REC
.XM02    ANOP
         AIF   ('&CHAR' EQ '').ERR2
&T1      SETA  N'&CHAR
         B     FN01&SYSNDX
C1&SYSNDX DC   C&CHAR(1)
C2&SYSNDX DC   C&CHAR(2)
&L11     SETA  K'&CHAR(1)
&L22     SETA  K'&CHAR(2)
&L11     SETA  &L11-2
&L22     SETA  &L22-2
&L1      SETC  '&L11'
&L2      SETC  '&L22'
         MNOTE ' &L11  &L22  &L1  &L2  '
FN01&SYSNDX DS 0H
         LA    R15,72                      COUNTER
FN02&SYSNDX DS 0H
         CLC   C1&SYSNDX,0(R1)
         BE    FN03&SYSNDX
         CLC   C2&SYSNDX,0(R1)
         BE    FN04&SYSNDX
         LA    R1,1(R1)
         BCT   R15,FN02&SYSNDX
         LA    R1,0
         B     FN99&SYSNDX
FN03&SYSNDX DS 0H
         LA    R1,&L1.(R1)
         B     FN99&SYSNDX
FN04&SYSNDX DS 0H
         LA    R1,&L2.(R1)
         B     FN99&SYSNDX
FN99&SYSNDX DS 0H
.ERR1    ANOP
.ERR2    ANOP
.MEND    MEND


SOURCE LISTING FOR MACRO $#SMFID

         MACRO
         $#SMFID
.* FIND SMFID
         L     R1,16                     CVT
         L     R1,X'C4'(R1)              SMCA
         LA    R1,X'10'(R1)              POINT TO SMFID
.EXIT    MEXIT
         MEND


JCL TO ASSEMBLE AND LINK PWLTMP

//TMP    EXEC  ASMLKED,LPARM='AMODE=24,AC=1',PROG=PWLTMP
//LKED.SYSLMOD  DD DSN=your.library,DISP=OLD
//LKED.SYSIN DD *
  NAME  PWLTMP(R)


JCL TO ASSEMBLE AND LINK PWLTASK1

//TASK1  EXEC  ASMLKED,LPARM='AMODE=24,AC=1',PROG=PWLTASK1
//LKED.SYSLMOD  DD DSN=your.library,DISP=OLD
//LKED.SYSIN DD *
  NAME  PWLTASK1(R)


JCL TO ASSEMBLE PWLSBA

//SBA    EXEC  ASM,PROG=PWLSBA
//ASM.SYSPUNCH DD DSN=your.obj(&PROG),DISP=SHR


JCL TO ASSEMBLE AND LINK PWLCOMM1

//COMM1  EXEC  ASMLKED,LPARM='AMODE=24',PROG=PWLCOMM1
//LKED.SYSLMOD  DD DSN=MZ.TESTLIB,DISP=SHR
//LKED.SYSLIB   DD DSN=your.obj,DISP=SHR
//LKED.SYSIN DD *
  INCLUDE SYSLIB(PWLSBA)
  ENTRY PWLCOMM1
  NAME  PWLCOMM1(R)


Peter W K Lee
Software Analyst (Canada)                            c Xephon 1991

