Dynamic account number control

//W887399 PROC
//*------------- table generation
//A EXEC PGM=CRTABP17
//SYSOUT   DD SYSOUT=Z
//EW1401   DD DSN=O16000.WVW14M01,DISP=SHR
//S00201   DD DSN=&&A,UNIT=DISK,DISP=(,PASS),DCB=(BLKSIZE=800,
// LRECL=80,RECFM=FB),SPACE=(TRK,(1,1))
//*------------- table assembly
//ASM     EXEC PGM=IFOX00,PARM=OBJ,REGION=512K
// ....
//SYSGO   DD   DSN=&&OBJSET,UNIT=SYSSQ,SPACE=(80,(200,50)),
//            DISP=(MOD,PASS)
//SYSIN   DD DSN=&&A,DISP=(OLD,PASS)
//*------------- table link
//LKED    EXEC PGM=IEWL,PARM=(XREF,LET,LIST,NCAL),REGION=512K,
//            COND=(8,LT,ASM)
//SYSLIN  DD   DSN=&&OBJSET,DISP=(OLD,DELETE)
//*------------- library on LNKLSTxx
//SYSLMOD DD DSN=SYS1.LINKLIB1(TABLAP17),DISP=SHR
//*-------------
//SYSUT1  DD   DSN=&&SYSUT1,UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),
//            SPACE=(1024,(50,20))
//SYSPRINT DD  SYSOUT=Z
//*
//* Refresh LLA for use
//*

SOURCE CODE FOR THE SMF EXIT

* LOAD A PROGRAM ("TABLAP17") FROM LINKLST, THIS PROGRAM IS A TABLE
* WITH VALID ACCOUNT NUMBERS GENERATED BY A BATCH PROGRAM WITH
* INFORMATION ABOUT OUR PROGRAM CONTROL SYSTEM
* NOTE: IN OUR SHOP, THE STANDARD ACCOUNT NUMBER'S LENGTH = 10
IEFUJV   CSECT
         STM   14,12,12(13)        SAVE REGISTERS
         BALR  11,0                LOAD R11 WITH NEXT INSTRUCTION
         USING *,11                SET ADDRESSABILITY
         LM    3,5,0(1)            LOAD R3, R4, AND R5 WITH PARAMETERS
         TM    0(5),X'01'          JOB STATEMENT?
         BZ    RETURN0             NO. GO TO RETURN
         LA    5,72(4)             LOAD R5 WITH END OF JOB CARD
LOOPJOB  CLC   0(5,4),=C' JOB '    IS WORD JOB?
         BE    BUSCANUM            YES. GO TO ANALYSE ACCOUNT NUMBER
         LA    4,1(4)              NO. ADD 1 TO R4
         CR    4,5                 END OF CARD?
         BL    LOOPJOB             NO. GO TO NEXT CHARACTER
         B     ERROR1              YES. GO TO ERROR
BUSCANUM LA    4,5(4)              SKIP JOB WORD
LOOPNUM  CLI   0(4),C' '           IS FIRST CHARACTER SPACE?
         BNE   VALIDNUM            NO. GO TO VALIDATE
         LA    4,1(4)              ADD 1 TO R4
         CR    4,5                 END OF CARD?
         BL    LOOPNUM             NO. GO TO ANALYSE NEXT CHARACTER
         B     ERROR1              YES. GO TO ERROR
VALIDNUM EQU   *
         CLI   0(4),C'('           IS FIRST CHARACTER NON-BLANK A "("?
         BNE   *+8                 NO. IS A NUMBER. SKIP ADD
         LA    4,1(4)              ADD 1 TO R4. SKIP "("
         LOAD  EP=TABLAP17         LOAD PROGRAM WITH VALID A/C NO
         LR    6,0                 LOAD R6 WITH START OF TABLE
VALACCT  CLC   0(10,4),0(6)        IS JOB A/C NO EQUAL TABLE A/C NO?
         BE    RETURN0             YES. GO TO RETURN
         CLC   0(10,6),=10X'FF'    IS END OF TABLE?
         BE    ERROR2              YES. GO TO ERROR
         LA    6,10(6)             ADD LENGTH OF ELEMENT TO R6
         B     VALACCT             GO TO ANOTHER COMPARE
RETURN0  SR    7,7                 SET R7 TO ZERO. JOB CONTINUE
         B     EXIT                GO TO END
RETURN4  LA    7,4                 SET R7 TO FOUR. JOB CANCELLED
EXIT     EQU   *
         DELETE EP=TABLAP17        DELETE LOAD
         ST    7,16(13)            SET R7 TO PLACE OF R15 ON SAVEAREA
         LM    14,12,12(13)        RESTORE REGISTERS
         BR    14                  RETURN TO CALLER
*        ERROR ROUTINES
ERROR1   WTO   'IEFUJV  ** INCORRECT ACCOUNT IN JOB CARD',ROUTCDE=(1)
         B     RETURN4             GO TO RETURN
ERROR2   WTO   'IEFUJV  ** ERROR IN ACCOUNT NUMBER',ROUTCDE=(1)
         B     RETURN4             GO TO RETURN
         LTORG
TABLA    DSECT
TABLA01  DS    999CL10
         END

SOURCE CODE FOR CRTABP17

 IDENTIFICATION DIVISION.
 PROGRAM-ID     CRTABP17.
************************************************************************
*  THIS PROGRAM GENERATES THE TABLE FOR IEFUJV                         *
************************************************************************
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SPECIAL-NAMES.
     DECIMAL-POINT IS COMMA.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT EW1401           ASSIGN TO DA-EW1401
                             ORGANIZATION IS INDEXED
                             ACCESS MODE  IS SEQUENTIAL
                             RECORD KEY   IS W14-CLAVE
                             FILE STATUS  IS FS-W14-STATUS.
     SELECT S00201           ASSIGN TO UT-S-S00201.
 DATA DIVISION.
 FILE SECTION.
 FD  S00201
     RECORD    CONTAINS  80 CHARACTERS
     BLOCK     CONTAINS   0 RECORDS
     RECORDING MODE      IS F
     LABEL     RECORDS   ARE STANDARD.
 01          S002REG             PIC X(80).
 FD  EW1401
     BLOCK     CONTAINS 0   RECORDS
     LABEL     RECORDS  ARE STANDARD.
     COPY    CW14REG.
 WORKING-STORAGE SECTION.
 01          FILLER              PIC X(43)
             VALUE '*-*  START OF WORKING STORAGE SECTION   *-*'.
 01          FIN-ARCHI           PIC X(01) VALUE SPACES.
 01          FS-FILE-STATUS.
    05       FS-W14-STATUS       PIC XX      VALUE '00'.
     88      FS-W14-STATUS-OK                VALUE '00' '97'.
 01          R001.
             05   ROTULO         PIC X(09) VALUE SPACES.
             05   CODIGO         PIC X(06) VALUE SPACES.
             05   FILLER         PIC X(65) VALUE SPACES.
 01          R002.
             05   FILLER         PIC X(09) VALUE SPACES.
             05   FILLER         PIC X(06) VALUE 'DC'.
             05   CONSTANTE      PIC X(01) VALUE 'C'.
             05   FILLER         PIC X(01) VALUE ''''.
             05   ACCOUNT        PIC 9(10) VALUE ZERO.
             05   ACCOUNT-HV REDEFINES ACCOUNT PIC X(10).
             05   FILLER         PIC X(01) VALUE ''''.
             05   FILLER         PIC X(52) VALUE SPACES.
 01          R003.
             05   FILLER         PIC X(09) VALUE SPACES.
             05   FILLER         PIC X(06) VALUE 'DC'.
             05   FILLER         PIC X(65) VALUE '10X''FF'''.
 PROCEDURE DIVISION.
     OPEN        INPUT           EW1401
                 OUTPUT          S00201.
     IF          FS-W14-STATUS NOT = '00' AND NOT = '97'
                 DISPLAY 'FILE STATUS ERROR OPENING W14'
                 GO TO SALIDA.
     MOVE 'TABLAP17'      TO ROTULO.
     MOVE 'CSECT'         TO CODIGO.
     WRITE S002REG FROM R001.
     PERFORM     LECTURA-REG-W14
        THRU     LECTURA-REG-W14-EXIT
        UNTIL    FIN-ARCHI = 'F'.
     WRITE S002REG FROM R003.
     MOVE SPACES          TO R001.
     MOVE 'END'           TO CODIGO.
     CLOSE       EW1401
                 S00201.
     IF          FS-W14-STATUS NOT = '00'
                 DISPLAY 'FILE STATUS ERROR CLOSING W14'.
 SALIDA.
     GOBACK.
 LECTURA-REG-W14.
     READ EW1401 NEXT RECORD AT END MOVE 'F' TO FIN-ARCHI
                                    GO TO LECTURA-REG-W14-EXIT.
     IF          FS-W14-STATUS NOT = '00'
                 DISPLAY 'FILE STATUS ERROR READING'
                 MOVE 'F' TO FIN-ARCHI
                 GO TO LECTURA-REG-W14-EXIT.
     IF W14-EST = 'B' OR 'C' GO TO LECTURA-REG-W14-EXIT.
     MOVE W14-ACCOUNT    TO ACCOUNT.
     IF ACCOUNT = '9999999900' OR
                  '0000000000' GO TO LECTURA-REG-W14-EXIT.
     WRITE S002REG FROM R002.
 LECTURA-REG-W14-EXIT.
     EXIT.


Nestor Lacabe
Systems Programmer
Sevel Argentina SA (Argentina)                                    c Xephon 1995

