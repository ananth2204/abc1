Changing strings in an entire PDS

Sometimes it is necessary to make the same changes to most, if
not all, of the members of a PDS. Usually, you would have to edit
each member separately and issue the CHANGE edit command.

With the CHANGPDS program, you supply:

o      The processing option (ie CHECK or UPDATE)

o      The PDS to be updated

o      The member selection criterion

o      The changes to be performed.

It will then make all the changes required in all the members of
the PDS, according to the selection criterion.

JCL to invoke the program

//jobname JOB .....
//* Processing Option.
//*  You must choose either 'CHECK' or 'UPDATE'
//*   'CHECK' - Don't perform the updates, just
//*             make a simulation and create a
//*             report of the changes that would
//*             be done.
//*   'UPDATE'- Perform the updates and create
//*             a report of the changes done.
//*
//*  If you just want to perform a SCAN by a
//*  specific string, you can use the 'CHECK'
//*  option changing the string by itself.
//*
//CHANGE EXEC PGM=CHANGPDS,
//             PARM='CHECK'
//*            PARM='UPDATE'
//STEPLIB  DD DSN=user.loadlib,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
//*
//* PDS to be updated.
//*   You must supply the PDS that will be
//*   changed in both cards: SYSUT1 and SYSUT2.
//*   If you will use the option 'CHECK', you
//    may allocate them using DISP=SHR
//*
//SYSUT1   DD DSN=SYS1.PROCLIB,DISP=OLD
//SYSUT2   DD DSN=SYS1.PROCLIB,DISP=OLD
//*
//* Member Selection Criterion.
//*   Here you can make the member selection
//*   as you want. In the example below, only
//*   members beginning with 'A' and finishing
/*    with 'L' will be processed.
//*
//SELECT   DD *
A******L
/*
//*
//* Changes to be done.
//*   Here you write all the changes that you
//*   want to be done. Use the  character '<'
//*   to be  used  as a  delimiter between the
//*   strings ( ACTUAL<NEW ).
//*
//SYSIN    DD *
DSN=PRD.LOADLIB<DSN=TST.LOADLIB<
DCB=BUFNO=10<DCB=BUFNO=20<
/*
//

CHANGPDS SOURCE CODE

         TITLE 'CHANGPDS - PERFORMS CHANGES IN A ENTIRE PDS'
CHANGPDS CSECT
         STM   14,12,12(13)
         LR    3,15
         USING CHANGPDS,3,4,5
         LA    4,1(3)
         LA    4,4095(4)
         LA    5,1(4)
         LA    5,4095(5)
         LA    10,1(5)
         LA    10,4095(10)
         ST    13,SAVE+4
         LR    9,13
         LA    13,SAVE
         ST    13,8(9)
         LR    R6,R1                    SAVE POINTER PARM ADDRESS
* OPEN DATASETS
BEGIN    EQU   *
         OPEN  (SYSUT1,,SYSIN,,SELECT,,SYSPRINT,(OUTPUT))    OPEN
         OPEN  (SYSUT2,UPDAT)                                  FILES
         MVC   TPRINT00,TPRINT00-1     CLEAN PRINTER AREA
         PUT   SYSPRINT,TPRINT00       PRINT A NULL LINE
*  CHECK OUT THE PARMS
OPTIONS  EQU   *
         LR    R1,R6                 GET THE POINTER PARM ADDRESS BACK
         L     R12,0(R1)             GET PARM ADDRESS
         LH    R1,0(R12)             GET PARM LENGTH
         CH    R1,=H'5'              MINIMUM PARM LENGTH
         BL    ERROPT                IF LESS, GO TO ERROR ROUTINE
         CH    R1,=H'6'              MAXIMUM PARM LENGTH
         BH    ERROPT                IF GREATER, GO TO ERROR ROUTINE
         CLC   2(5,R12),=C'CHECK'    WAS THE PARM 'CHECK' CHOSEN?
         BNE   OPTION2               NO, CHECK ANOTHER POSSIBLE OPTION
         MVC   PARM,=C'CHECK '
         B     PRTOPT                GO TO PRINTER OPTION ROUTINE
OPTION2  EQU   *
         CLC   2(6,R12),=C'UPDATE'   WAS THE PARM 'UPDATE' CHOSEN?
         BNE   ERROPT              NO, THEN IT'S AN INVALID OPTION
         MVC   PARM,=C'UPDATE'
PRTOPT   EQU   *
         MVC   TPRINT00,TPRINT00-1 CLEAN THE PRINTER AREA
         MVC   TPRINT00(22),=C' PARAMETER ISSUED     : '
         MVC   TPRINT00+22(6),PARM MOVE OPTION CHOSEN TO BE PRINTED
         PUT   SYSPRINT,TPRINT00   PRINT OPTION CHOSEN
* CHECK OUT OF THE MEMBER SELECTION CRITERION
CRITERIO EQU   *
         GET   SELECT,SELECTI0     GET THE SELECTION CRITERION
         LA    R6,SELECTIO
         LA    R7,SELECTIO+8
LOOPSEL  EQU   *
         CLI   0(R6),C' '          IS THE CHARACTER A BLANK ?
         BE    ERRSEL              YES, THEN IT'S AN INVALID SELECTION
         LA    R6,1(R6)
         CR    R6,R7
         BNE   LOOPSEL
PRTSEL   EQU   *
         MVC   TPRINT00,TPRINT00-1 CLEAN THE PRINTER AREA
         MVC   TPRINT00(22),=C' SELECTION CRITERION: '
         MVC   TPRINT00+22(8),SELECTIO MOVE SELECTION TO BE PRINTED
         PUT   SYSPRINT,TPRINT00   PRINT SELECTION CRITERION
* MEMBERS' TABLE
         USING TABLE,R10           ESTABLISH BASE FOR TABLE OF CHANGES
         L     R10,=V(TABLE)
         LA    R7,TABPDS
* DIRECTORY PROCESSING
DIRECT   EQU   *
         XR    R0,R0
         IC    R0,TTR0+2
         AH    R0,=H'1'
         CH    R0,=H'46'           NUMBER OF RECORDS BY TRACK (3380
*        CH    R0,=H'43'           NUMBER OF RECORDS BY TRACK (3375
*        CH    R0,=H'36'           NUMBER OF RECORDS BY TRACK (3350
         BH    NEWTTR
         STC   R0,TTR0+2
LOAD     EQU   *
         L     R0,TTR0             LOAD OF REGISTERS FOR THE ROUTINE
         L     R1,SYSUT1+X'2C'     OF TRANSLATION FROM RELATIVE
         LA    R2,ACTUAL           ADDRESS TO ABSOLUTE ADDRESS.
         L     R15,16              ADDRESS OF CVT
         L     R15,28(R15)         ADDR TRANSLATION ROUTINE (IECPCCNVT)
         STM   R9,R13,SAVEROT      SAVE REGISTERS USEDS BY THE ROUTINE
         BALR  R14,R15             CALL IECPCCNVT
         LM    R9,R13,SAVEROT
         LTR   R15,R15             TEST REGISTER 15
         BZ    READDIR             0 - THEN READ THE DIRECTORY
         MVC   TPRINT00(30),MSG5   NOT 0 - MOVE MSG ERROR TO BE PRINTED
         CVD   R15,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  TPRINT00+30(1),DOUBLE+7(1)
         PUT   SYSPRINT,TPRINT00     PRINT MESSAGE ERROR WITH THE RC
         ABEND 777,DUMP
NEWTTR   EQU   *
         MVI   TTR0+2,X'01'
         LH    R0,TTR0
         AH    R0,=H'1'
         STH   R0,TTR0
         B     LOAD
READDIR  EQU   *
         XDAP  ECB1,RI,SYSUT1,AREADIR,264,,ACTUAL  READ A
         WAIT  ECB=ECB1                            BLOCK DIRECTORY
         CLC   ECB1(4),=X'7F000000'  WAS THE READ PROCESS OK ?
         BE    PROCDIR               YES, PROCESS THE DIRECTORY
         MVC   TPRINT00(30),MSG4     NO, MOVE MSG ERROR TO BE PRINTED
         PUT   SYSPRINT,TPRINT00     PRINT MESSAGE ERROR
         ABEND 777,DUMP
PROCDIR  EQU   *
         LA    R6,AREADIR+10
VEREND   EQU   *
         CLC   0(8,R6),=8X'FF'       IS THE END OF THE BLOCK DIRECTORY?
         BE    ENDDIR                YES, STOP PROCESSING THE DIRECTORY
         LR    R2,R6
         LA    R9,SELECTIO
         LA    R11,SELECTIO+8
FILTER   EQU   *
         CLC   0(1,R2),0(R9)         SELECT
         BNE   FILTER2                 ONLY
FILTER0  EQU   *                         MEMBERS
         LA    R2,1(R2)                    THAT
         LA    R9,1(R9)                      CORRESPOND
         CR    R9,R11                          TO
         BE    LOADPDS                           THE
         B     FILTER                              SELECTION
FILTER2  EQU   *                                     CRITERION
         CLI   0(R9),C'*'
         BE    FILTER0
         B     ENDTRK
LOADPDS  EQU   *
         MVC   0(8,R7),0(R6)         PUT THE MEMBER ON THE TABLE
         LA    R7,12(R7)
         AP    NPDS,=P'1'            ADD 1 TO THE NUMBER OF MEMBERS
         CP    NPDS,=P'5500'         WAS THE LIMIT OF MEMBERS REACHED ?
         BL    ENDTRK           NO, THEN CHECK IF IT'S THE LAST MEMBER
         MVC   TPRINT00(30),MSG6     YES, MOVE MSG ERROR TO BE PRINTED
         SH    R7,=H'12'
         MVC   TPRINT00+30(8),0(R7)  MOVE LAST MEMBER PROCESSED
         PUT   SYSPRINT,TPRINT00
         ABEND 777,DUMP
ENDTRK   EQU   *
         CLC   0(8,R6),KEY        IS IT THE LAST MEMBER ON THE TRACK ?
         BE    DIRECT             YES, THEN READ ANOTHER BLOCK
         IC    R8,11(R6)
         SLL   R8,27
         SRL   R8,27
         MH    R8,=H'2'
         LA    R6,12(R8,R6)
         B     VEREND
ENDDIR   EQU   *
         CP    NPDS,=P'0'       WAS THE NUMBER OF MEMBERS PROCESSED 0 ?
         BNE   CALCPDS          NO, THEN BUILD MEMBER'S TTR
         MVC   TPRINT00(30),MSG10  YES, MOVE MSG ERROR TO BE PRINTED
         PUT   SYSPRINT,TPRINT00   PRINT MESSAGE ERROR
         ABEND 777,DUMP
CALCPDS  EQU   *
         XC    DOUBLE,DOUBLE
         MVC   DOUBLE+4(4),NPDS   NUMBER OF MEMBERS USED IN 'BLDL'
         CVB   R12,DOUBLE
         STH   R12,TOTPDS
         BLDL  SYSUT1,TOTPDS      BUILD THE MEMBER'S TTR
         LTR   R15,R15            TEST REGISTER 15
         BZ    RDPARM             0 - THEN READ THE SYSIN CARDS
         MVC   TPRINT00(30),MSG7  NOT 0 - MOVE MSG ERROR TO BE PRINTED
         CVD   R15,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  TPRINT00+30(1),DOUBLE+7(1)
         PUT   SYSPRINT,TPRINT00  PRINT MSG ERROR WITH THE RC
         ABEND 777,DUMP
* CHECK OUT OF THE SYSIN CARDS (CHANGES)
RDPARM   EQU   *
         LA    R8,CHANGES         GET ADDRESS OF CHANGES AREA
RDPARM2  EQU   *
         GET   SYSIN,CARD1        GET A CARD
         LA    R2,CARD1
         LA    R11,0
LENGTH1  EQU   *
         CLI   0(R2),C'<'         IS THE CHARACTER THE DELIMITER ?
         BE    LENGTH2            YES, PROCESS NEXT STRING
         LA    R11,1(R11)
         LA    R2,1(R2)
         CH    R11,=H'36'    WAS THE LIMIT OF STRING'S LENGTH REACHED?
         BE    ERSYSIN            YES, GO TO ERROR ROUTINE
         B     LENGTH1            NO, CONTINUE THE SCAN PROCESSING
LENGTH2  EQU   *
         LA    R2,1(R2)
         LA    R12,0
LENGTH3  EQU   *
         CLI   0(R2),C'<'         IS THE CHARACTER THE DELIMITER ?
         BE    LENGTHS           YES, THEN COMPARE THE LENGTH'S STRINGS
         LA    R12,1(R12)
         LA    R2,1(R2)
         CH    R12,=H'36'     WAS THE LIMIT OF STRING'S LENGTH REACHED?
         BE    ERSYSIN               YES, GO TO ERROR ROUTINE
         B     LENGTH3               NO, CONTINUE THE SCAN PROCESSING
LENGTHS  EQU   *
         CR    R11,R12               ARE THE STRING'S LENGTHS EQUAL ?
         BNE   ERSYSIN               NO, GO TO ERROR ROUTINE
         CH    R11,=H'0'             IS THE FIRST STRING LENGTH 0 ?
         BE    ERSYSIN               YES, GO TO ERROR ROUTINE
         CH    R12,=H'0'             IS THE SECOND STRING LENGTH 0 ?
         BE    ERSYSIN               YES, GO TO ERROR ROUTINE
         SH    R11,=H'1'           SUBTRACT 1 TO DO THE 'EXECUTE' LATER
         ST    R11,LEN               SAVE THE LENGTH
INCTAB   EQU   *
         SR    R2,R12                INCLUDE
         STH   R11,0(R8)               A
         EX    R11,MOVETAB1              CHANGE
         EX    R11,MOVETAB2                ON
         LA    R8,72(R8)                     THE
         B     RDPARM2                         TABLE OF CHANGES
ENDSYSIN EQU   *
         MVC   0(2,R8),=X'FFFF'      INCLUDE A
         LA    R8,CHANGES              SIGNAL OF
         LH    R12,0(R8)                 END
         CH    R12,=X'FFFF'                ON THE
         BE    ERSYSIN                       TABLE OF CHANGES
* POSITIONING OF THE MEMBERS
POSITION EQU   *
         LA    R11,TABPDS
         LA    R12,DECBA
POSIT    EQU   *
         MVI   UPDMEMB,C' '          TURN THE FLAG OF MEMBER CHANGE OFF
         LA    R0,8(R11)             GET MEMBER'S TTR
         FIND  SYSUT2,(R0),C         POSITIONING OF THE MEMBER
         LTR   R15,R15               TEST REGISTER 15
         BZ    RDSCAN                0 - THEN READ A BLOCK
         MVC   TPRINT00(30),MSG8  NOT 0 - MOVE MSG ERROR TO BE PRINTED
         MVC   TPRINT00+30(8),0(R11) MOVE MEMBER NAME
         PUT   SYSPRINT,TPRINT00     PRINT
         ABEND 777,DUMP
* READING THE PHYSICAL RECORD (BLOCK)
RDSCAN   EQU   *
         READ  (R12),SF,,,'S',MF=E   READ A BLOCK
         CHECK (R12)
         LH    R8,=H'72'             72 = NUMBER OF CHARACTERS PER CARD
         XR    R6,R6
         LH    R6,SYSUT2+X'52'       ADDRESS OF BLOCK'S LENGTH
         CVD   R6,FB
         DP    FB,=P'80'
         ZAP   FB,FB(6)
         CVB   R6,FB                 NO OF CARDS (RECORDS) IN THE BLOCK
         LA    R9,AREAA
         LA    R7,AREAA
         MVC   CARD,0(R9)       GET A CARD
RDTAB    EQU   *
         USING TABLE,R10        ESTABLISH A BASE FOR TABLE OF CHANGES
         L     R10,=V(TABLE)
* SCAN PROCESSING
PROCSCAN EQU   *
         LH    R2,0(R10)        GET STRING'S LENGTH
         CH    R2,X'FFFF'       IS IT THE END OF THE TABLE ?
         BE    PROCSCA2         YES, THEN DISPLACE 1 IN THE CARD
         EX    R2,COMPARE       ARE THE STRINGS CARD/SYSIN EQUAL ?
         BNE   JUMPTAB          NO, CHECK NEXT CHANGE ON THE TABLE
         B     UPDATE           YES, THEN PROCESS THE UPDATE
PROCSCA2 EQU   *
         LA    R7,1(R7)
         BCT   R8,RDTAB
ANOTHER  EQU   *
         B     PRTCHANG         PRINT UPDATES PROCESSED
ANOTHER2 EQU   *
         LA    R7,80(R9)        DISPLACE TO ANOTHER CARD IN THE BLOCK
         LA    R9,80(R9)
         LH    R8,=H'72'        72 = NUMBER OF CHARACTERS PER CARD
         MVC   CARD,0(R9)
         BCT   R6,RDTAB         IS THE END OF THE BLOCK ?
         B     WRITE            YES, THEN REWRITE THE BLOCK
JUMPTAB  EQU   *
         LA    R10,72(R10)      DISPLACE 1 CARD ON THE TABLE OF CHANGES
         B     PROCSCAN         RESTART SCAN
* PERFORMS THE UPDATE
UPDATE   EQU   *
         EX    R2,MOVE          UPDATE THE CARD
         MVI   CHANGE,C'*'      TURN THE FLAG ON. BLOCK WAS UPDATED
         MVI   UPDREG,C'*'      TURN THE FLAG ON. CARD  WAS UPDATED
         AP    NUPDTES,=P'1'    ADD 1 TO COUNTER OF CHANGES
         LA    R7,1(R2,R7)
         BCT   R8,RDTAB
* WRITING THE NEW PHYSICAL RECORD
WRITE    EQU   *
         CLI   CHANGE,C'*'      WAS THE BLOCK UPDATED ?
         BNE   RDSCAN           NO, THEN DON'T REWRITE THE BLOCK
         LH    R2,SYSUT2+X'52'  ADDRESS OF BLOCK'S LENGTH
         CLC   PARM,=C'CHECK '  WAS THE OPTION CHECK CHOSEN?
         BE    WRITE2           YES, THEN DON'T REWRITE THE BLOCK
         WRITE (R12),SF,,,(R2),MF=E  REWRITE THE BLOCK
         CHECK (R12)
WRITE2   EQU   *
         MVI   CHANGE,C' '      TURN THE FLAG OF BLOCK'S CHANGES OFF
         B     RDSCAN
* OCCURRENCES CHANGED (PRINTER)
PRTCHANG EQU   *
         CLI   UPDREG,C'*'      WAS THE CARD UPDATED ?
         BNE   ANOTHER2         NO, THEN PROCESS ANOTHER CARD
         CLI   UPDMEMB,C'*'        MEMBER ALREADY UPDATED ?
         BNE   PRTMEMB             NO, THEN PRINT THE MEMBER NAME
PRTCHAN2 EQU   *
         MVC   TPRINT00,TPRINT00-1 CLEAN PRINTER AREA
         MVC   TPRINT00+3(7),=C'BEFORE: '
         MVC   TPRINT00+11(80),CARD  PREVIOUS CARD
         PUT   SYSPRINT,TPRINT00
         MVC   TPRINT00+3(8),=C'AFTER : '
         MVC   TPRINT00+11(80),0(R9) NEW CARD
         PUT   SYSPRINT,TPRINT00
         MVI   UPDREG,C' '         TURN THE FLAG OF CARD'S CHANGES OFF
         B     ANOTHER2            PROCESS ANOTHER CARD
PRTMEMB  EQU   *
         MVC   TPRINT00,TPRINT00-1 CLEAN PRINTER AREA
         PUT   SYSPRINT,TPRINT00   PRINT A NULL LINE
         MVC   TPRINT00+1(8),0(R11) MOVE MEMBER NAME TO BE PRINTED
         PUT   SYSPRINT,TPRINT00   PRINT THE MEMBER NAME
         MVI   UPDMEMB,C'*'       TURN THE FLAG OF MEMBER'S CHANGES OFF
         B     PRTCHAN2
* END OF THE SCAN IN THE MEMBER. NEXT POSITIONING.
ENDSCAN  EQU   *
         AP    NCONT,=P'1'  ADD 1 TO COUNTER OF MEMBERS PROCESSED
         CP    NCONT,NPDS   WERE ALL THE MEMBERS PROCESSED ?
         BE    END          YES, THEN STOP PROCESSING
         LA    R11,12(R11)  NO, THEN DISPLACE TO ANOTHER MEMBER
         B     POSIT        GO MAKE THE POSITIONING OF THE NEW MEMBER
* ERROR ROUTINES
ERSYSIN  EQU   *            ERROR WITH THE SYSIN CARDS
         MVC   TPRINT00(60),MSG9
         PUT   SYSPRINT,TPRINT00
         ABEND 777,DUMP
ERRSEL   EQU   *            ERROR WITH SELECTION CRITERION
         MVC   TPRINT00(30),MSG12
         PUT   SYSPRINT,TPRINT00
         ABEND 777,DUMP
ERROPT   EQU   *            ERROR WITH THE PROCESSING OPTION
         MVC   TPRINT00(40),MSG11
         PUT   SYSPRINT,TPRINT00
         ABEND 777,DUMP
* END OF PROCESSING.
END      EQU   *
         MVC   TPRINT00,TPRINT00-1     CLEAN PRINTER AREA
         PUT   SYSPRINT,TPRINT00       PRINT A NULL LINE
         UNPK  TPRINT00+1(8),NUPDTES   MOVE TOTAL NUMBER OF CHANGES
         OI    TPRINT00+8,X'F0'
         MVC   TPRINT00+10(38),=C'OCCURRENCES WILL BE CHANGED IN THE PDC
               S'
         CLC   PARM,=C'CHECK '
         BE    END2
         MVC   TPRINT00+10(38),=C'OCCURRENCES CHANGED IN THE PDS       C
                '
END2     EQU   *
         PUT   SYSPRINT,TPRINT00
         CLOSE (SYSPRINT,,SYSUT1,,SYSUT2,,SYSIN)  CLOSE FILES
         L     R13,SAVE+4                            RETURN
         SR    R15,R15                                  TO
         RETURN (14,12),RC=(15)                            CALLER
* DATA AREA
SYSUT2   DCB   DSORG=PO,MACRF=(R,W),DDNAME=SYSUT2,EODAD=ENDSCAN,NCP=2, C
               RECFM=U
SYSUT1   DCB   DSORG=PO,MACRF=(E),DDNAME=SYSUT1
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,LRECL=133,RECFM=FA
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,LRECL=80,RECFM=FB,       C
               BLKSIZE=80,EODAD=ENDSYSIN
SELECT   DCB   DSORG=PS,MACRF=GM,DDNAME=SELECT,LRECL=80,RECFM=FB,      C
               BLKSIZE=80,EODAD=ERRSEL
         READ  DECBA,SF,SYSUT2,AREAA,'S',MF=L
COMPARE  CLC   0(0,R7),2(R10)    COMPARE THE STRINGS (BY 'EX')
MOVE     MVC   0(0,R7),37(R10)   CHANGE  THE STRINGS (BY 'EX')
MOVETAB1 MVC   2(0,R8),CARD1     UPDATE  THE CHANGES TABLE (BY 'EX')
MOVETAB2 MVC   37(0,R8),0(R2)    UPDATE  THE CHANGES TABLE (BY 'EX')
         LTORG
MSG4     DC    CL030'-ERROR READING THE DIRECTORY  '
MSG5     DC    CL030'-ERROR TRANSLATING THE  TTR C='
MSG6     DC    CL030'-MORE THAN 5500 MEMBERS MEMBER='
MSG7     DC    CL030'-ERROR IN THE PDS LOAD'
MSG8     DC    CL030'-ERROR POSITIONING THE MEMBER. MEMBER='
MSG9     DC    CL060'-PARMS NOT ENOUGH, WRONG OR NOT COMPATIBLES'
MSG10    DC    CL030'-NO MEMBERS CHOSEN'
MSG11    DC    CL040'-PARM MUST BE ''CHECK'' OR ''UPDATE'''
MSG12    DC    CL030'-SELECTION CRITERION NOT VALID'
CHANGE   DC    CL1' '           IF '*' THE BLOCK  WAS CHANGED
UPDREG   DC    CL1' '           IF '*' THE CARD   WAS CHANGED
UPDMEMB  DC    CL1' '           IF '*' THE MEMBER WAS CHANGED
         DS    0D
SAVE     DS    18F              SAVE AREA
ACTUAL   DS    D
TTR0     DC    F'0'
SAVEROT  DC    5F'0'            SAVE AREA TO THE CALL
DOUBLE   DS    D                WORK AREA
FB       DS    D                WORK AREA
LEN      DS    F                WORK AREA
AREADIR  DS    0CL264           RECEIVE A DIRECTORY BLOCK
KEY      DS    CL8
         DS    CL256
         DC    CL1' '
TPRINT00 DS    CL133            PRINTER AREA
NUPDTES  DS    PL4'0'           TOTAL CHANGES
NCONT    DC    PL4'0'           NUMBER OF MEMBERS BEING PROCESSED
NPDS     DC    PL4'0'           TOTAL NUMBER OF MEMBERS
PARM     DC    CL6' '           'CHECK' OR 'UPDATE'
SELECTI0 DS    0CL80            RECEIVE THE MEMBER SELECTION CRITERION
SELECTIO DS    CL8
         DS    CL72
CARD1    DS    CL80             RECEIVE THE SYSIN CARDS
CARD     DS    CL80             KEEP THE CARD THAT'S BEING PROCESSED
         DS    0D               ALIGNMENT
AREAA    DS    CL30000          RECEIVE THE PHYSICAL RECORD (BLOCKS)
TABLE    CSECT
CHANGES  DC    4032X'00'             UPDATES TABLE
TOTPDS   DC    X'0000'               NUMBER OF MEMBERS
LENPDS   DC    X'000C'               LENGTH OF EACH DIRECTORY ENTRY
TABPDS   DC    66000X'00'            MEMBERS TABLE
         END


Laercio Marques de Albuquerque
Systems Programmer (Brazil)                                      c Xephon 1994

