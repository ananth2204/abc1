Routine to find outstanding WTORs

The following code locates the message text of outstanding 
WTORs by extracting data from Write to Operator Queue 
Elements (WQEs) that reside in the CONSOLE address space.  
This basic sample program only writes the messages to a 
SYSOUT file but the logic may be useful for system routines and 
exits.

To find the first WTOR, locate the Unit Control Module (UCM) 
base from the CVT.  Next, find the Operator Reply Element 
(ORE) chain that is anchored from the UCM base.  Each ORE 
represents an outstanding reply and points to an associated WQE 
in the CONSOLE address space which contains the message text.  
This program must run authorised because of the MODESET 
macro and the cross memory instruction it uses.

THE SOURCE CODE

REPLIES  CSECT
REPLIES  AMODE 24
REPLIES  RMODE 24
         SAVE  (14,12),,*          SAVE REGISTERS
         BALR  R12,R0              LOAD BASE REGISTER
         USING *,R12               ESTABLISH ADDRESSING
         ST    R13,SAVE+4          STORE SAVE AREA POINTER
         LA    R13,SAVE            LOAD SAVE AREA ADDRESS
         OPEN  (REPFILE,OUTPUT)    OPEN OUTPUT FILE
         MODESET MODE=SUP          SUPERVISOR STATE
         EPAR  R1                  EXTRACT PRIMARY ASID
         ST    R1,PRIMASID         STORE PRIMARY ASID
         LA    R1,1
         AXSET AX=(R1)             AUTHORIZATION INDEX FOR ALL ASIDS
         MODESET MODE=PROB         RETURN TO PROBLEM STATE
         L     R2,16               CVT ADDRESS
         USING CVT,R2              MAPPING OF THE CVT
         L     R2,CVTCUCB          UCM BASE ADDRESS
         USING UCM,R2              MAPPING OF THE UCM BASE
         SR    R3,R3
         LH    R3,UCMCTID          ASID OF CONSOLE ADDRESS SPACE
         ST    R3,CONSASID         SAVE IT FOR LATER
         L     R2,UCMRPYQ          ADDRESS OF FIRST ORE 
         USING OREF,R2             MAPPING OF THE ORE
GETWQE   MODESET KEY=ZERO,MODE=SUP ORE IS IN KEY ZERO STORAGE
         L     R1,LABEL1           SWTICH TO 31 BIT ADDRESSING
         BSM   R0,R1
LABEL1   DC    A(GETORE+X'80000000')
GETORE   DS    0H
         L     R3,ORERWQE          ADDRESS OF ASSOCIATED REAL WQE
         USING WQE,R3              MAPPING OF THE WQE
         LA    R1,LABEL2           GET BACK TO 24 BIT ADDRESSING
         BSM   R0,R1
LABEL2   DS    0H
         L     R1,CONSASID         ASID OF CONSOLE ADDRESS SPACE
         SSAR  R1                  SET SECONDARY ASID TO CONSOLE ASID
         LA    R4,128              WQE TEXT LENGTH MAX IS 128 BYTES
         SR    R5,R5               ZERO STORAGE ACCESS KEY
         LA    R6,MSGTXT           ADDRESS WHERE TO PLACE MSGTEXT
         MVCP  0(R4,R6),31(R3),R5  MOVE DATA TO THIS ADDRESS SPACE
         L     R1,PRIMASID         ASID OF THIS ADDRESS SPACE
         SSAR  R1                  SET SECONDARY ASID TO THIS ASID
         MODESET KEY=NZERO,MODE=PROB BACK TO PROBLEM STATE
         PUT   REPFILE, MSGTXT     WRITE MESSAGE TEXT TO OUTPUT FILE
         MODESET KEY=ZERO          ORE IS IN KEY ZERO STORAGE
         L     R1,LABEL3           SWITCH TO 31 BIT ADDRESSING
         BSM   R0,R1
LABEL3   DC    A(NEXTORE+X'80000000')
NEXTORE  DS    0H
         L     R2,ORELKP           ADDRESS OF NEXT ORE
         LA    R1,LABEL4           GET BACK INTO 24 BIT ADDRESSING
         BSM   R0,R1
LABEL4   DS    0H
         MODESET KEY=NZERO         GET OUT OF KEY ZERO
         LTR   R2,R2               IS THERE ANOTHER ORE?
         BNZ   GETWQE              YES, THEN GO PROCESS IT
         CLOSE REPFILE             CLOSE OUTPUT FILE
         L     R13,SAVE+4          RESTORE SAVE AREA POINTER
         RETURN (14,12),RC=0       NORMAL RETURN
SAVE     DS    18F
PRIMASID DS    F
CONSASID DS    F
MSGTXT   DS    CL128
REPFILE  DCB   DDNAME=REPFILE,LRECL=128,MACRF=PM,DSORG=PS
         CVT   DSECT=YES
         IHAWQE
         IHAORE
         IEECUCM FORMAT=NEW
         END   REPLIES


Michael Skopec
Systems Analyst
Ameritech Applied Technologies (USA)	© Ameritech Applied Technologies 1989

