DASD reorganization

I recently had reason to automate the process of reorganizing a
DASD, its datasets, ICF catalogs, and indexed VTOC in order
to achieve faster seek times. My objective was to have DASD with:

o      An indexed VTOC placed one-third of the way into the volume.

o      The index placed on the first tracks of the first VTOC's cylinder.

o      The VVDS located adjacent to the VTOC index.

o      All datasets and ICF catalogs moved using 'logical DFDSS'.

o      All datasets to have the most efficient block size
      automatically calculated.

Traditionally these characteristics improve performance. They
also help to establish installation standards. The following
procedure accomplishes these goals using IBM utilities. The
procedure performs a logical dataset dump/restore, and checks
whether ICF catalogs exist on the volume. Then ICKDSF
rebuilds an indexed VTOC and DFDSS moves datasets from
one DASD to another. It is a critical process, therefore, to
allow easy recovery, STEP14 runs a full volume dump to tape:
if an unexpected error occurs, STEP24 executes a physical
DFDSS restore.

Information about the VTOCs, indexes, and VVDSs can be
retrieved using IEHLIST's output (STEP12 to STEP25).

The procedure can easily be altered for working only with
permanent datasets (ie instead of &TEMPn) so that you can
execute it one step at a time. Of course, you should check if
the volume is allocated from another job.

The procedure has been tested under MVS/XA 2.2.3 and
MVS/ESA 3.1.3.

//SSYA05A  JOB  ,SSYA05,CLASS=A,MSGCLASS=X,REGION=7M,COND=(11,EQ),
//      TIME=1440,RESTART=STEP10
//**----------------------------------------------------------------**
//** THE PROCEDURE REORGANIZES A DASD, TO INCREASE PERFORMANCE.     **
//** AFTER ITS EXECUTION, IBM UTILITIES WILL ALLOCATE ALL DATASETS  **
//** TO  OPTIMIZE I/O.                                              **
//**                                                                **
//** REMEMBER TO PERFORM THE 'CHANGE COMMAND' AS FOLLOWS:           **
//** - 'XXXXXX'       -->     VOLUME TO CONVERT       (ON-LINE).    **
//** - 'YYYY'         -->     UNIT TYPE.                            **
//** - 'ICF.PREFIX'   -->     USER-CATALOG'S PREFIX.                **
//**----------------------------------------------------------------**
//STEP10   EXEC PGM=IEBGENER
//SYSIN    DD   DUMMY
//SYSPRINT DD   DUMMY
//SYSUT2   DD   DSN=&TEMP1(VCLIST),DISP=(,PASS),UNIT=VIO,
//     SPACE=(TRK,(1,1,1))
//SYSUT1   DD   *
PROC 1    VCLIST
CONTROL   END(ENDO) MAIN
OPENFILE  WK1 OUTPUT
SET       WKA        = &STR()
SET       SYSOUTTRAP = 400
LISTCAT   USERCAT VOL
LOOP00: +
DO       I =        1 TO 400 BY 1 UNTIL I = 400
SET  SWWRT   =  0
SET  LNT     = &&SYSOUTLINE&I
IF &SYSINDEX(USERCATALOG,&LNT) NE 0 THEN     DO
SET  ICF     = &SUBSTR(17:&LENGTH(&STR(&LNT)),&LNT)
                                             ENDO
IF &SYSINDEX(VOLSER,&LNT)      NE 0 THEN     DO
IF &SUBSTR(26:32,&LNT) = &VCLIST THEN SET SWWRT = 1
                                             ENDO
IF &SWWRT NE 1 THEN GOTO LOOP01
        IF  &WKA    NE &STR() THEN      DO
            SET    &WK1   =  &STR(&WKA&STR(,      -))
            PUTFILE WK1
                                        ENDO
            SET &WKA      = &STR(&STR(   )&ICF)
LOOP01: +
ENDO
 IF     &WKA NE &STR() THEN       DO
    SET &WK1 = &STR(&WKA&STR(      -))
    PUTFILE WK1
                                  ENDO
CLOSEFILE   WK1
IF  &WKA NE &STR()    THEN  EXIT  CODE(00)
MLEXIT:                     EXIT  CODE(99)
/*
//**-------------------------------------------------------------**
//**        EXECUTING CLIST/STEP10.                              **
//**-------------------------------------------------------------**
//STEP11   EXEC PGM=IKJEFT01,PARM='%VCLIST XXXXXX',COND=(0,NE,STEP10)
//WK1      DD DSN=&TEMP3,UNIT=VIO,SPACE=(TRK,(1)),DISP=(,PASS),
//    DCB=(LRECL=80,BLKSIZE=6240,RECFM=FB)
//SYSPROC  DD DSN=&TEMP1,DISP=(OLD,DELETE)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD DUMMY
//**-------------------------------------------------------------**
//**        IEHLIST  -   XXXXXX                                  **
//**-------------------------------------------------------------**
//STEP12    EXEC PGM=IEHLIST
//SYSPRINT  DD SYSOUT=*
//DD1       DD UNIT=YYYY,VOL=SER=XXXXXX,DISP=SHR
//SYSIN     DD *
 LISTVTOC FORMAT,VOL=YYYY=XXXXXX
/*
//**-------------------------------------------------------------**
//**        DUMP USER CATALOGS                                   **
//**-------------------------------------------------------------**
//STEP13    EXEC PGM=ADRDSSU,PARM='UTILMSG=YES',COND=(99,EQ,STEP11)
//SYSPRINT  DD   SYSOUT=*
//ID        DD   VOL=REF=*.STEP12,DD1,DISP=OLD
//OQ        DD   DSN=&TEMP4,UNIT=3380,SPACE=(CYL,(30,10)),DISP=(,PASS)
//SYSIN     DD    *
  DUMP DS(INC(                -
/*
//          DD   DSN=&TEMP3,DISP=(OLD,PASS)
//          DD    *
       ))  LIDD(ID) ODD(OQ) CAN TOL(ENQF) COM
                IF MAXCC GT 0 THEN SET MAXCC = 11
/*
//**-------------------------------------------------------------**
//**        DUMP    - XXXXXX                                     **
//**-------------------------------------------------------------**
//STEP14    EXEC PGM=ADRDSSU,PARM='UTILMSG=YES',COND=(4,LT,STEP13)
//SYSPRINT  DD   SYSOUT=*
//ID        DD   VOL=REF=*.STEP12.DD1,DISP=OLD
//OT        DD DSN=SYS1.DP.DXXXXXX,UNIT=3480,DISP=(,CATLG),VOL=(,,,10)
//OD        DD   DSN=&TEMP2,UNIT=3380,SPACE=(CYL,(50,50)),DISP=(,PASS)
//SYSIN     DD   *
 RELEASE INCLUDE(**)  MINTRKS(6)  DYNAM(XXXXXX)
   IF LASTCC LE 4 THEN DO
    DUMP INDD(ID)    ODD(OT) OPT(4) COM
                       END
      IF LASTCC LE 4 THEN DO
       DUMP DS(EXC(ICF.PREFIX.**,SYS1.VVDS.**,SYS1.VTOCIX.**)) -
            LIDD(ID) ODD(OD) OPT(3) COM DEL PRG
                          END
   IF   MAXCC GT 4  THEN   SET MAXCC = 11
/*
//**-------------------------------------------------------------**
//**        DELETE  USER CATALOGS                                **
//**-------------------------------------------------------------**
//STEP15    EXEC PGM=IDCAMS,COND=(99,EQ,STEP11)
//SYSPRINT  DD   SYSOUT=*
//DD1       DD   VOL=REF=*.STEP12.DD1,DISP=SHR
//SYSIN     DD   *
    DEL (            -
/*
//          DD   DSN=&TEMP3,DISP=(OLD,PASS)
//          DD   *
    ) UCAT FRC PRG FILE (DD1)
            IF MAXCC GT 4 THEN SET MAXCC = 11
/*
//**-------------------------------------------------------------**
//**  3380D VTOC (295,5,25)    INDEX (295,0,5)       DSF  VTOC   **
//**  3380E  "   (590,5,25)      "   (590,0,5)        "   1/3    **
//**  3380K  "   (885,5,25)      "   (885,0,5)        "   SIZE   **
//**  3390B  "   (742,5,25)      "   (742,0,5)        "   DISK   **
//**-------------------------------------------------------------**
//STEP16    EXEC PGM=ICKDSF,COND=(4,LT,STEP14)
//D1        DD   VOL=REF=*.STEP12.DD1,DISP=SHR
//SYSPRINT  DD   SYSOUT=*
//SYSIN     DD *
 ANALYZE NODRIVE SPEED SCAN CYL(2654,2655) DNAME(D1)
 IF   LASTCC = 0   THEN      DO
 IF   MAXCC LE  12 THEN DO
 INIT DNAME(D1) VOLID(XXXXXX) VTOC(885,5,25) INDEX(885,0,5) PRG NVFY
 SET  MAXCC =   13
                        END
                             END
 ELSE             -
 ANALYZE NODRIVE SPEED SCAN CYL(2225,2226) DNAME(D1)
 IF   LASTCC = 0   THEN      DO
 IF   MAXCC LE  12 THEN DO
 INIT DNAME(D1) VOLID(XXXXXX) VTOC(742,5,25) INDEX(742,0,5) PRG NVFY
 SET  MAXCC =   14
                        END
                             END
 ELSE             -
 ANALYZE NODRIVE SPEED SCAN CYL(1769,1770) DNAME(D1)
 IF   LASTCC = 0   THEN      DO
 IF   MAXCC LE 12  THEN DO
 INIT DNAME(D1) VOLID(XXXXXX) VTOC(590,5,25) INDEX(590,0,5) PRG NVFY
 SET MAXCC =    15
                        END
                             END
 ELSE             -
 ANALYZE NODRIVE SPEED SCAN CYL(884,885) DNAME(D1)
 IF   LASTCC = 0   THEN      DO
 IF   MAXCC LE  12 THEN DO
 INIT DNAME(D1) VOLID(XXXXXX) VTOC(295,5,25) INDEX(295,0,5) PRG NVFY
 SET  MAXCC =   16
                        END
                             END
 ELSE             -
 SET  MAXCC =    11
/*
//**-----------------------------------------------------------**
//**      WORK DATASET                                         **
//**-----------------------------------------------------------**
//STEP17   EXEC PGM=IEFBR14,COND=(13,NE,STEP16)
//DD17     DD DSN=SYS1.ALLC.VVDS,VOL=REF=*.STEP12.DD1,DISP=(,KEEP),
// SPACE=(TRK,(13259),,CONTIG),DCB=(LRECL=80,BLKSIZE=6160,RECFM=FB)
//STEP18   EXEC PGM=IEFBR14,COND=(14,NE,STEP16)
//DD18     DD DSN=*.STEP17.DD17,VOL=REF=*,STEP12.DD1,DISP=(,KEEP),
// SPACE=(TRK,(11114),,CONTIG),DCB=*.STEP17.DD17
//STEP19   EXEC PGM=IEFBR14,COND=(15,NE,STEP16)
//DD19     DD   DSN=*.STEP17.DD17,VOL=REF=*.STEP12.DD1,DISP=(,KEEP),
// SPACE=(TRK,(8834),,CONTIG),DCB=*.STEP17.DD17
//STEP20   EXEC PGM=IEFBR14,COND=(16,NE,STEP16)
//DD20     DD   DSN=*.STEP17.DD17,VOL=REF=*.STEP12.DD1,DISP=(,KEEP),
// SPACE=(TRK,(4409),,CONTIG),DCB=*.STEP17.DD17
//**-----------------------------------------------------------**
//**      DEFINE       SYS1.VVDS                               **
//**-----------------------------------------------------------**
//STEP21   EXEC PGM=IDCAMS
//VOL      DD   VOL=REF=*.STEP12.DD1,DISP=SHR
//SYSPRINT DD   SYSOUT=*
//SYSIN DD *
     DEF NVSAM (NAME(SYS1.ALLC.VVDS) DEVT(YYYY) VOL(XXXXXX) )
     DEF CL (NAME(SYS1.VVDS.VXXXXXX) VOL(XXXXXX) NIXD TRK(15 5))
     DEL SYS1.ALLC.VVDS NVSAM
     IF MAXCC GT 4 THEN SET MAXCC = 11
/*
//**-------------------------------------------------------------**
//**        RESTORE USER CATALOGS                                **
//**-------------------------------------------------------------**
//STEP22    EXEC PGM=ADRDSSU,PARM='UTILMSG=YES',COND=(99,EQ,STEP11)
//SYSPRINT  DD   SYSOUT=*
//INPU      DD   DSN=&TEMP4,DISP=(OLD,PASS)
//OUTU      DD   VOL=REF=*.STEP12.DD1,DISP=OLD
//SYSIN     DD   *
  REST IDD(INPU) ODD(OUTU) DS(INC(    -
/*
//          DD   DSN=&TEMP3,DISP=(OLD,PASS)
//          DD   *
    ))  REP
/*
//**-------------------------------------------------------------**
//**        LOGICAL RESTORE  - XXXXXX                            **
//**-------------------------------------------------------------**
//STEP23    EXEC PGM=ADRDSSU,PARM='UTILMSG=YES',COND=(0,NE,STEP22)
//INPU      DD   DSN=&TEMP2,DISP=(OLD,PASS)
//SYSPRINT  DD   SYSOUT=*
//SYSIN     DD *
 RESTORE IDD(INPU) ODY(XXXXXX) REBL(**) REPL RECAT(*) -
 DS(EXC(ICF.PREFIX.**,SYS1.VTOCIX.**,SYS1.VVDS.**))
/*
//**-------------------------------------------------------------**
//**        PHYSICAL RESTORE.                                    **
//**-------------------------------------------------------------**
//STEP24    EXEC PGM=ADRDSSU,PARM='UTILMSG=YES',
//   COND=((4,LT,STEP23),(0,EQ,STEP22))
//INPU      DD   DSN=*.STEP14.OT,DISP=OLD
//SYSPRINT  DD   SYSOUT=*
//SYSIN     DD *
 RESTORE IDD(INPU) ODY(XXXXXX) PRG
/*
//**-------------------------------------------------------------**
//**        IEHLIST - XXXXXX.                                    **
//**-------------------------------------------------------------**
//STEP25    EXEC PGM=IEHLIST
//SYSPRINT  DD SYSOUT=*
//DD1       DD VOL=REF=*.STEP12.DD1,DISP=OLD
//SYSIN     DD *
 LISTVTOC FORMAT,VOL=YYYY=XXXXXX
/*


Massimo Ambrosini (Italy)                         c Xephon 1993

