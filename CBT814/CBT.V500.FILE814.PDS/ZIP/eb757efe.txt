Optimizing the processing of SMF data


INTRODUCTION

MVS (especially MVS/ESA) gives you options for optimizing
the processing of SMF data.  The MVS SMF component
generates a lot of records which mostly are dumped to tape for
later processing such as billing, statistics, or other useful
applications.  Without tailoring the SMF parameters and
thereby selecting only those records which will be of interest
later, this component will generate huge amounts of data.  We
know of one installation which has to handle about eight 3480
cartridges per month (it is not a large installation).


THE PROBLEM

The default setting for SMF includes:

o      SMF record selection

o      Control interval size (CISIZE) for the SMF dataset

o      SMF dump data block sizes.

All of these parameters and defaults may be optimized for
performance and service consumption.

SMF record selection controls the amount of data being saved
for later processing.  The default is the collection of all record
types (0-255).

The default control interval size is 4096 bytes for the ESDS
VSAM dataset to which SMF data is being written in the first
instance.

The default block size for the OUTDD dataset, to which
dumped SMF records are saved, is 4096 bytes as well.  VSAM
processing for the ESDS SMF dataset also defaults.


THE SOLUTION

First of all you will have to customize the selection of record
types.  As with any I/O tuning, where the fastest I/O is no I/O,
so it is with SMF record collection.  Be sure you really need
the type of SMF record for later processing before enabling the
collection of it.  The process will be controlled in
SYS1.PARMLIB member SMFPRMxx.

Some records are of interest for only a relatively short period of
time.  The installation uses the contents of those records to
fine-tune the environment for performance.  Afterwards, those
records are useless and might as well be deleted.  With
IFASMFDP, only records of interest might be saved for a
longer period of time.

When handling data contained in the SMF datasets
(SYS1.MANx), the DUMP procedure can be optimized for
performance, be it elapsed time or resource consumption.
With MVS/ESA, the CISIZE for the SMF datasets can be
adjusted to the optimal CISIZE for 3380 track size.  Setting the
CISIZE to 22K bytes uses half-track blocking and will result in
a spectacular reduction of SMF's I/O activity to its dataset.
While adjusting CISIZE for SMF clusters is a standard feature
in MVS/ESA 3.1.0, in MVS/XA it is only available as a PTF.

The IFASMFDP utility allows the user to select and dump
SMF records from VSAM and QSAM datasets to a sequential
dataset (QSAM), so it can be used to dump and/or clear SMF
datasets or to process already dumped SMF data saved in a
sequential dataset.

While processing the data, IFASMFDP can re-block incoming
records for the output dataset, so it is possible to specify a large
block size for the output dataset.

As the format of the output dataset is Variable Blocked
Spanned  (VBS), half-track blocking for DASD or even a 32K
block size for tape is available.

As the SMF datasets are normal ESDS datasets, the
SMFDUMP procedure may further be enhanced by specifying
AMP parameters. Using a BUFND number sufficiently large to
contain a track or even a whole control area reduces I/O
activity in a spectacular way. Our tests resulted in a reduction
to less then 10 percent of the original number of EXCPs. While
changing the CISIZE is an ESA-only option, specifying
BUFND and/or BLKSIZE can also be done in an MVS/XA
environment.


EXAMPLES

SMFDUMP job

//SAVE     EXEC PGM=IFASMFDP
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=SYS1.MANx,DISP=SHR,
//             AMP='BUFND=151'     (take a complete CA)
//SYSUT2   DD  DSN=SAVE.SEQ.SMF,DISP=(,CATLG),
//             UNIT=SYSDA,DCB=BLKSIZE=32000
//             SPACE=(CYL,(30,10),RLSE)
//SYSIN    DD  *
...

Results

BIBLIOGRAPHY

System Management Facility GC28-1819-02.


Heinz-Jurgen Heitlander
Syskoplan GmbH (West Germany)                  c Xephon 1991

