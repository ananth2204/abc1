Using common dataspaces in MVS

      xxxx,DSPINIT,'CCIDTABL'

DSPINIT TITLE 'IPL TIME DATASPACE CREATION ROUTINE'
DSPINIT CSECT  ,        LINK-EDIT REUS,RENT INTO A LINK LIST LIBRARY
DSPINIT AMODE  31       MODULE SHOULD RECEIVE CONTROL IN AMODE 31
DSPINIT RMODE  ANY      CSECT MAY RESIDE ABOVE THE LINE
 YREGS ,                INCLUDE REGISTER EQUATES
 COPY  JSXMACS          INCLUDE JES328X STRUCTURED MACRO DEFINITIONS
 BAKR  R14,0            SAVE STATUS AND RETURN ADDRESS IN LINKAGE STACK
 LR    R10,R15          R10 = BASE REG IN PROGRAM
 USING DSPINIT,R10      ESTABLISH CSECT ADDRESSABILITY
 LR    R2,R1            R2 = COPY OF POINTER TO PARM LIST
 STORAGE OBTAIN,LENGTH=WA_SIZE,    GET DYNAMIC WORK AREA               C
               LOC=BELOW,                                              C
               SP=2
 LR    R11,R1           R11 = ADDRESS OF DYNAMIC WORK AREA
 LR    R14,R1           R14 = ADDRESS OF DYNAMIC WORK AREA
 LR    R0,R1            R0  = ADDRESS OF DYNAMIC WORK AREA
 LA    R1,WA_SIZE       R1  = SIZE OF WORK AREA
 XR    R15,R15          R15 = MVCL PADDING CHARACTER
 MVCL  R0,R14           PAD ENTIRE WORK AREA WITH NULLS
 USING WORKAREA,R11     ESTABLISH WORK AREA ADDRESSABILITY
 LA    R13,MAINSAVE     R13 = ADDRESS OF NEW SAVE AREA
 MVC   4(4,R13),=C'F1SA' ACRONYM TO TELL STATUS SAVED IN STACK
 MVC   EYE,=C'EYE1'     ACRONYM IN DYNAMIC WORK AREA IN CASE DUMP
 MVC   WTO_L,MSG0       INIT WTO MACRO IN DYNAMIC WORK AREA
 WTO   MF=(E,WTO_L)     DISPLAY DSPINIT VERSION ON CONSOLE
 MVC   ESTAE_L,ESTAE_I  INIT ESTAE MACRO IN DYNAMIC WORK AREA
 ESTAEX ESTAE_EXIT,CT,         ESTABLISH ABEND RECOVERY ENVIRONMENT -  C
               PARAM=WORKAREA, ESTAE PARAMETER IS WORK AREA ADDRESS    C
               MF=(E,ESTAE_L)
 MVC   NAMEDSP,=CL8'DEFAULT1' INIT DEFAULT NAME OF DATASPACE
 L     R2,4(R2)         R2 = ADDRESS OF SUBSYS INIT PARM LIST
 IF  (CLI,(JSILGTPR-JSIPL)(R2),NE,0)  IF A PARAMETER IN IEFSSN99 MEMBER
     L     R2,(JSIADRPR-JSIPL)(R2)  R2 = ADDRESS OF PARAMETER TEXT
     MVC   NAMEDSP,0(R2)            INIT NAME OF DATASPACE
 ENDIF
 SAC   512              SWITCH PSW TO AR MODE
 SYSSTATE ASCENV=AR     ENSURE AR-MODE MACRO EXPANSION FROM NOW ON
 DSPSERV CREATE,                  CREATE SHARED DATASPACE              C
               NAME=NAMEDSP,      DATASPACE NAME IS IN NAMEDSP         C
               STOKEN=STOKDSP,    DS TOKEN IS TO BE STORED IN STOKDSP  C
               BLOCKS=BLKSDSP,    SIZE OF DS IN BLOCKS                 C
               ORIGIN=ORIGDSP,    DS ORIGIN IS TO BE STORED IN ORIGDSP C
               KEY=STORGKEY,      STORAGE KEY FOR DATA SPACE           C
               SCOPE=COMMON,      DS IS TO BE ACCESSIBLE FOR EVERYONE  C
               FPROT=NO,          NO FETCH PROTECTION                  C
               MF=(E,DSPSERV_L)
 IF (LTR,R15,R15,Z)     IF DATA SPACE CREATION SUCCESSFUL, PUT ON PASN
    ALESERV ADD,STOKEN=STOKDSP,   ADD DS TO ACCESS LIST                C
               AL=PASN,           ADD TO ALL PASN-ALS IN THE SYSTEM    C
               ALET=ALETDSP,      STORE ALET IN ALETDSP                C
               MF=(E,ALESERV_L)
    IF (LTR,R15,R15,Z)     IF DS NOW IN ACCESS LIST, TEST IF DS USABLE
       L      R3,=F'4096'     R3 = TARGET LENGTH FOR MVCL  =4K
       XR     R5,R5           R5 = MVCL SOURCE LENGTH AND PADDING CHAR
       XR     R4,R4           R4 = MVCL DUMMY SOURCE ADDRESS
       SAR    R4,R4           AR4 = ZERO, PRIMARY AS
       LAM    R2,R2,ALETDSP   AR2 = ALET OF NEWLY CREATED DATASPACE
       L      R2,ORIGDSP      R2 = ORIGIN OF DATASPACE
       MVCL   R2,R4           PAD 4K OF DS WITH NULLS
       SAC    0               P-MODE FROM NOW ON, DATA SPACE IS TESTED
       SYSSTATE ASCENV=P      REQUEST PRIMARY MODE MACRO EXPANSIONS
       MVC    LEVEL,=A(IEANT_SYSTEM_LEVEL)  INIT NT LEVEL PARAMETER
       MVC    NAME,=CL16'ZDSP'     INIT FIXED PART OF TOKEN-NAME
       MVC    NAME_DN,NAMEDSP      INIT DATASPACE NAME IN TOKEN-NAME
       MVC    TKN_ALET,ALETDSP     INIT DATASPACE ALET IN TN PAIR
       MVC    TKN_ORIG,ORIGDSP     INIT DATASPACE ORIGIN IN TN PAIR
       MVC    TKN_SIZE,=A(DSPSIZE) INIT DATASPACE SIZE IN TN PAIR
       CALL   IEANTCR,        CALL TOKEN CREATE LINKAGE ROUTINE        C
               (LEVEL,NAME,TOKEN,PERSIST,RC),VL,                       C
               MF=(E,LINK_L)
       IF (LTR,R15,R15,Z)     IF RETURN CODE FROM IEANTCR ZERO
          MVC WTO_L,MSG4           INIT WTO MACRO IN DYNAMIC WORK AREA
          MVC MSG4_NM,NAMEDSP      SINK DATA SPACE NAME IN MSGE TEXT
          UNPK MSG4_ALE,ALETDSP(5) EXPAND ALET TO 2 BYTES PER BYTE
          TR  MSG4_ALE,HEXTAB      CONVERT ALET TO EBCDIC HEX CHARS
          MVI MSG4_ALE+8,C''''     APPEND QUOTE TO HEX VALUE
          WTO MF=(E,WTO_L)         ISSUE MESSAGE TO OPERATOR
       ELSE
          ST  R15,UNPK_BIN    STORE RETURN CODE FOR CONVERT 2 EBCDIC
          UNPK UNPK_CHR,UNPK_BIN   EXPAND RC TO 2 BYTES PER BYTE
          TR  UNPK_CHR,HEXTAB      TRANSLATE INTO VALID EBCDIC CHARS
          MVC WTO_L,MSG3           INIT WTO MACRO IN DYNAMIC WORK AREA
          MVC MSG3_RC,UNPK_CHR+4   SINK RETURN CODE IN MESSAGE TEXT
          WTO MF=(E,WTO_L)         ISSUE MESSAGE TO OPERATOR
       ENDIF
    ELSE
       SAC 0               SWITCH PSW TO PRIMARY MODE
       ST  R15,UNPK_BIN    STORE RETURN CODE FOR CONVERT 2 EBCDIC
       UNPK UNPK_CHR,UNPK_BIN    EXPAND RC TO 2 BYTES PER BYTE
       TR  UNPK_CHR,HEXTAB       TRANSLATE TO VALID EBCDIC CHARS
       MVC WTO_L,MSG2            INIT WTO MACRO IN DYNAMIC WORK AREA
       MVC MSG2_RC,UNPK_CHR+4    SINK RETURN CODE IN MESSAGE TEXT
       WTO MF=(E,WTO_L)          ISSUE MESSAGE TO OPERATOR
    ENDIF
 ELSE
    SAC 0               SWITCH PSW TO PRIMARY MODE
    ST  R15,UNPK_BIN    STORE RETURN CODE FOR CONVERT 2 EBCDIC
    UNPK UNPK_CHR,UNPK_BIN    EXPAND RC TO 2 BYTES PER BYTE
    TR  UNPK_CHR,HEXTAB       TRANSLATE TO VALID EBCDIC CHARS
    MVC WTO_L,MSG1            INIT WTO MACRO IN DYNAMIC WORK AREA
    MVC MSG1_RC,UNPK_CHR+4    SINK RETURN CODE IN MESSAGE TEXT
    WTO MF=(E,WTO_L)    ISSUE MESSAGE TO OPERATOR
 ENDIF
 MVC   ESTAE_L,ESTAE_I  INIT ESTAE MACRO IN DYNAMIC WORK AREA
 ESTAEX 0,              CANCEL ABEND RECOVERY ENVIRONMENT -            C
               MF=(E,ESTAE_L)
 LA    R13,MAINSAVE     R13 = ADDRESS OF SAVE AREA, RELOADED
 LA  R1,WORKAREA        R1 = ADDRESS OF DYNAMIC WORK AREA
 STORAGE RELEASE,ADDR=(1),LENGTH=WA_SIZE,SP=2
 XR R15,R15             R15 = RETURN CODE ZERO
 PR ,                   RETURN TO CALLER WITH RC IN R15
* ESTAE_EXIT IS THE ENTRY POINT OF THE ESTAE EXIT ESTABLISHED BEFORE
* SETTING UP THE DATASPACE. IF AN ABEND OCCURS THE RETRY ROUTINE WILL
* FREE THE DYNAMIC WORK AREA AND RETURN WITH RC 0, IN ORDER NOT TO
* DISTURB THE IPL IN PROGRESS.
ESTAE_EXIT DS 0H        ENTRY POINT OF ESTAE EXIT ROUTINE
 SAC   0                ENSURE PSW IN PRIMARY MODE
 STM   R14,R12,12(R13)  SAVE CALLER'S REGS
 LR    R10,R15          R12 = EPA OF ESTAE_EXIT
 LA    R15,ESTAE_EXIT-DSPINIT R15 = OFFSET OF ESTAE_EXIT IN CSECT
 SLR   R10,R15          R12 = EXIT6 BASE REG, RELIABLE
 USING SDWA,R1          ESTABLISH ADDRESSABILTY ON SDWA
 L     R11,SDWAPARM     R11 = ADDRESS OF POINTER TO WORK AREA
 L     R11,0(R11)       R11 = ADDRESS OF WORK AREA, RELIABLE
 ST    R11,SDWASR11     SET R11 FOR RETRY ROUTINE
 LA    R2,MAINSAVE      R2 = ADDRESS OF DSPINIT SAVE AREA
 ST    R2,SDWASR13      SET R13 FOR RETRY ROUTINE
 ST    R10,SDWASR10     SET R10 FOR RETRY ROUTINE, DSPINIT BASE REG
 SETRP REGS=(14,12),    RESTORE REGS 14 TO 12 FOR RETURN TO RTM        C
               DUMP=YES,       REQUEST NO DUMP,                        C
               RC=4,           GO FOR RETRY, NOT PERCOLATION           C
               RETADDR=RETRY,  RETRY AT ADDRESS RETRY                  C
               RETREGS=YES,    RELOAD REGS FROM SDWASRSV ON RETRY      C
               FRESDWA=NO,     SDWA MAY BE FREED WHEN ON EXIT          C
               RECORD=YES,     RECORD SDWA ON SYS1.LOGREC              C
               REMREC=YES      REMOVE ESTAE BEFORE RETRY ROUTINE
 DROP R1                SDWA ADDRESSABILITY NO LONGER VALID
RETRY DS 0H             RETRY POINT SET IN ESTAE EXIT
 MVC   WTO_L,MSG5       INITIALIZE WTO LIST IN WORK AREA
 WTO   MF=(E,WTO_L)     GO ISSUE 'STAE EXIT ENTERED' MESSAGE
 LA    R1,WORKAREA      R1 = ADDRESS OF DYNAMIC WORK AREA
 STORAGE RELEASE,ADDR=(1),LENGTH=WA_SIZE,SP=2
 XR    R15,R15          R15 = RETURN CODE ZERO
 PR    ,                RETURN TO CALLER WITH RC IN R15
MSG0     WTO   'DSPINIT compiled &SYSDATE &SYSTIME',MF=L
MSG1     WTO   'DSPINIT DSPSERV-CREATE rc 1234 hex',MF=L
MSG1_RC  EQU   WTO_L+4+26,4
MSG2     WTO   'DSPINIT ALESERV-ADD rc 1234 hex',MF=L
MSG2_RC  EQU   WTO_L+4+23,4
MSG3     WTO   'DSPINIT rc from IEANTCR 1234 hex',MF=L
MSG3_RC  EQU   WTO_L+4+24,4
MSG4     WTO   'DSPINIT dataspace 12345678 created, ALET = x''12345678'C
               '',MF=L
MSG4_NM  EQU   WTO_L+4+18,8     WHERE TO SINK DATA SPACE NAME IN MSG
MSG4_ALE EQU   WTO_L+4+45,9     WHERE TO SINK COMMON ALET IN MSG
MSG5     WTO   'DSPINIT: ESTAEX exit entered',MF=L
ESTAE_I  ESTAEX PURGE=NONE,     DONT DISTURB ANY I/O GOING ON          C
               ASYNCH=YES,      ALLOW ASYNCHRONOUS EXIT REQUESTS       C
               TERM=NO,         NO ESTAE EXIT IF JES2 MAIN TASK ENDS   C
               MF=L
DSPSIZE  EQU   100000   INITIAL SIZE OF DATA SPACE IN BYTES
BLKSDSP  DC    A((DSPSIZE+4095)/4096)  DATA SPACE SIZE IN 4K-BLKS
STORGKEY DC    X'80'    STORAGE KEY VALUE FOR DSPSERV MACRO
         DC    C'0123456789ABCDEF'   BIN 2 EBCDIC XLATE TABLE
HEXTAB   EQU   *-256    BEGIN ADDRESS OF TRANSLATE TABLE
         LTORG
WORKAREA DSECT          DYNAMIC WORK AREA MAP
EYE      DS    CL4      EYECATCHER IN CASE OF DUMP
MAINSAVE DS    18F      REGISTER SAVE AREA
STOKDSP  DS    D        STOKEN RETURNED BY DSPSERV CREATE MACRO
ORIGDSP  DS    F        DATASPACE ORIGIN FROM CREATE
ALETDSP  DS    F        ALET RECEIVED FROM ALESERV ADD MACRO
NAMEDSP  DS    CL8      THE NAME OF THE DATA SPACE
UNPK_BIN DS    CL5      UNPACK WORK AREA, CONTAINS VALUE IN BINARY
UNPK_CHR DS    CL9      UNPACK WORK AREA, EBCDIC CHARACTERS
WA_PTR   DS    F        ADDRESS OF DYNAMIC WORK AREA FOR ESTAE
LINK_L   DS    5F       STORAGE TO CONSTRUCT IEANTCR PARAMETER LIST
LEVEL    DS    F        TOKEN-NAME PAIR LEVEL
NAME     DS    CL16     NAME OF THE TN PAIR:  ZDSPXXXXXXXX
NAME_DN  EQU   NAME+4,8 DATASPACE NAME PART OF TOKEN NAME
TOKEN    DS    CL16     TOKEN TO BE ASSOCIATED WITH NAME, SUBFIELDS:
TKN_ALET EQU   TOKEN,4    DATASPACE ALET RECEIVED FROM ALESERV ADD PASN
TKN_ORIG EQU   TOKEN+4,4  ORIGIN ADDRESS OF THE DATASPACE
TKN_SIZE EQU   TOKEN+8,4  DATASPACE SIZE
PERSIST  DS    F        PERSIST PARAMTER, ALWAYS ZERO
RC       DS    F        RETURN CODE FROM TN ROUTINE
WTO_     WTO   '1234567890123456789012345678901234567890123456789012345C
               67890',MF=L