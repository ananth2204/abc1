Moving SMP/E entries - an enhancement


Source CODE FOR THE EXTRACT PROGRAM

 IDENTIFICATION DIVISION.
 PROGRAM-ID.    EXTRACT.
* THIS PROGRAM READS IN SMP/E UNLOAD OUTPUT AND EXTRACTS EITHER
* 1) LMOD IN MOD ENTRIES, AND GENASM IN MAC ENTRIES        OR
* 2) DELETE/SUPING IN SYSMOD ENTRIES
* DEPENDING ON THE PARAMETER CARD RECORD AND WRITES THE ENTRIES
* OUT TO A SEQUENTIAL FILE FOR SUBSEQUENT PROCESSING.
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SOURCE-COMPUTER.   IBM-370.
 OBJECT-COMPUTER.   IBM-370.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT INFILE           ASSIGN TO UT-S-INFILE.
     SELECT PARACARD         ASSIGN TO UT-S-PARACARD.
     SELECT OUTFILE          ASSIGN TO UT-S-OUTFILE.
 DATA DIVISION.
 FILE SECTION.
 FD  INFILE                  LABEL RECORDS ARE STANDARD
                             RECORD CONTAINS 80 CHARACTERS
                             BLOCK CONTAINS 0 RECORDS.
 01  INFILE-REC                  PIC X(80).
 FD  PARACARD                LABEL RECORDS ARE STANDARD
                             RECORD CONTAINS 80 CHARACTERS
                             BLOCK CONTAINS 0 RECORDS.
 01  PARACARD-REC                PIC X(80).
 FD  OUTFILE                 LABEL RECORDS ARE STANDARD
                             RECORD CONTAINS 80 CHARACTERS
                             BLOCK CONTAINS 0 RECORDS.
 01  OUTFILE-REC                 PIC X(80).
 WORKING-STORAGE SECTION.
 01  WS-INFILE-REC.
     03  WS-REP                  PIC XXX.
     03  FILLER                  PIC X(7).
     03  WS-ENTRY-TYPE           PIC X(6).
     03  FILLER                  PIC X(12).
     03  WS-ENTRY-NAME           PIC X(8).
     03  FILLER                  PIC X(44).
 01  WS-INFILE-REC-RED REDEFINES WS-INFILE-REC.
     03  FILLER                  PIC X(10).
     03  WS-SUBENTRY-TYPE        PIC X(6).
     03  FILLER                  PIC X(12).
     03  WS-SUBENTRY-NAME1       PIC X(8).
     03  FILLER                  PIC X.
     03  WS-SUBENTRY-BRACKET1    PIC X.
     03  WS-SUBENTRY-NAME2       PIC X(8).
     03  FILLER                  PIC X.
     03  WS-SUBENTRY-BRACKET2    PIC X.
     03  WS-SUBENTRY-NAME3       PIC X(8).
     03  FILLER                  PIC X.
     03  WS-SUBENTRY-BRACKET3    PIC X.
     03  WS-SUBENTRY-NAME4       PIC X(8).
     03  FILLER                  PIC X.
     03  WS-SUBENTRY-BRACKET4    PIC X.
     03  FILLER                  PIC X(12).
 01  WS-PARACARD-REC.
     03  WS-PARACARD-TYPE        PIC X(6).
     03  FILLER                  PIC X(74).
 01  WS-OUTFILE-REC              PIC X(80).
 01  WS-RECORD                   PIC X         VALUE 'N'.
   88  WS-RECORD-WANTED                        VALUE 'Y'.
 01  WS-MORE-THAN-FOUR           PIC X         VALUE 'N'.
   88  WS-MORE-THAN-FOUR-SUBENTRIES            VALUE 'Y'.
 PROCEDURE DIVISION.
 OPENIT.
*    OPEN DATASETS
*    READ PARAMETER CARD
     OPEN INPUT  INFILE
                 PARACARD
          OUTPUT OUTFILE.
     READ PARACARD INTO WS-PARACARD-REC
                   AT END
                   CLOSE PARACARD.
 READIT.
*    READ INPUT RECORD
*    CHECK ENTRY TYPE FOR REPLACE RECORDS
*    PROCESS IF REQUIRED COMBINATION
     READ INFILE INTO WS-INFILE-REC
                 AT END
                 GO CLOSEIT.
     IF  WS-REP = 'REP'
         IF (WS-PARACARD-TYPE = 'SYSMOD' AND
             WS-ENTRY-TYPE = 'SYSMOD')
         OR (WS-PARACARD-TYPE = 'LMOD'   AND
             WS-ENTRY-TYPE = 'MOD' OR 'MAC')
             MOVE 'Y' TO WS-RECORD
         ELSE
             MOVE 'N' TO WS-RECORD.
     IF  WS-RECORD-WANTED
         PERFORM PROCTYPE.
     GO READIT.
 CLOSEIT.
*    CLOSE DATASETS
*    TERMINATE
     CLOSE INFILE
           PARACARD
           OUTFILE.
     STOP RUN.
 PROCTYPE.
*    PERFORM GETNAMES IF REQUIRED COMBINATION
*    PARACARD=SYSMOD, ENTRY=SYSMOD, SUBENTRY=DELETE OR SUPING
     IF  WS-PARACARD-TYPE = 'SYSMOD'
     AND WS-SUBENTRY-TYPE = 'DELETE' OR 'SUPING'
         PERFORM GETNAMES.
*    PARACARD=LMOD, ENTRY=MOD, SUBENTRY=LMOD
     IF  WS-PARACARD-TYPE = 'LMOD'
     AND WS-SUBENTRY-TYPE = 'LMOD'
         PERFORM GETNAMES.
*    PARACARD=LMOD, ENTRY=MAC, SUBENTRY=GENASM
     IF  WS-PARACARD-TYPE = 'LMOD'
     AND WS-SUBENTRY-TYPE = 'GENASM'
         PERFORM GETNAMES.
*    RESET SUBENTRIES FLAG
     IF  WS-MORE-THAN-FOUR-SUBENTRIES
         MOVE 'N' TO WS-MORE-THAN-FOUR
         PERFORM GETNAMES.
     GO READIT.
 GETNAMES.
*    OBTAIN LMODS OR SYSMODS AS APPROPRIATE
*    GET FIRST SUBENTRY
     MOVE SPACES TO WS-OUTFILE-REC.
     MOVE WS-SUBENTRY-NAME1 TO WS-OUTFILE-REC.
     WRITE OUTFILE-REC FROM WS-OUTFILE-REC.
     IF  WS-SUBENTRY-BRACKET1 = ')'
         GO READIT.
*    GET SECOND SUBENTRY
     MOVE SPACES TO WS-OUTFILE-REC.
     MOVE WS-SUBENTRY-NAME2 TO WS-OUTFILE-REC.
     WRITE OUTFILE-REC FROM WS-OUTFILE-REC.
     IF  WS-SUBENTRY-BRACKET2 = ')'
         GO READIT.
*    GET THIRD SUBENTRY
     MOVE SPACES TO WS-OUTFILE-REC.
     MOVE WS-SUBENTRY-NAME3 TO WS-OUTFILE-REC.
     WRITE OUTFILE-REC FROM WS-OUTFILE-REC.
     IF  WS-SUBENTRY-BRACKET3 = ')'
         GO READIT.
*    GET FOURTH SUBENTRY
     MOVE SPACES TO WS-OUTFILE-REC.
     MOVE WS-SUBENTRY-NAME4 TO WS-OUTFILE-REC.
     WRITE OUTFILE-REC FROM WS-OUTFILE-REC.
*    SET FLAG IF MORE SUBENTRIES
     IF  WS-SUBENTRY-BRACKET4 NOT = ')'
         MOVE 'Y' TO WS-MORE-THAN-FOUR.
     GO READIT.
*    END OF EXTRACT PROGRAM


Source CODE FOR THE DELDUPS PROGRAM

 IDENTIFICATION DIVISION.
 PROGRAM-ID.    DELDUPS.
* THIS PROGRAM READS IN SORTED 80-BYTE RECORDS,
* DROPS DUPLICATES AND WRITES OUT THE REMAINDER.
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SOURCE-COMPUTER.   IBM-370.
 OBJECT-COMPUTER.   IBM-370.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT INFILE           ASSIGN TO UT-S-INFILE.
     SELECT OUTFILE          ASSIGN TO UT-S-OUTFILE.
 DATA DIVISION.
 FILE SECTION.
 FD  INFILE                  LABEL RECORDS ARE STANDARD
                             RECORD CONTAINS 80 CHARACTERS
                             BLOCK CONTAINS 0 RECORDS.
 01  INFILE-REC                  PIC X(80).
 FD  OUTFILE                 LABEL RECORDS ARE STANDARD
                             RECORD CONTAINS 80 CHARACTERS
                             BLOCK CONTAINS 0 RECORDS.
 01  OUTFILE-REC                 PIC X(80).
 WORKING-STORAGE SECTION.
 01  WS-INFILE-REC               PIC X(80).
 01  WS-INFILE-REC-OLD           PIC X(80).
 01  WS-READ                     PIC X         VALUE 'Y'.
   88  WS-FIRST-READ                           VALUE 'Y'.
 PROCEDURE DIVISION.
 OPENIT.
*    OPEN DATASETS
     OPEN INPUT  INFILE
          OUTPUT OUTFILE.
 READIT.
*    READ INPUT RECORD
*    PROCESS RECORD AS REQUIRED
     READ INFILE INTO WS-INFILE-REC
                 AT END
                 GO CLOSEIT.
*    SET FIRST TIME FLAG
     IF  WS-FIRST-READ
         MOVE 'N' TO WS-READ
         GO WRITEIT.
*    DROP DUPLICATE RECORD
     IF  WS-INFILE-REC = WS-INFILE-REC-OLD
         GO READIT.
 WRITEIT.
*    WRITE OUTPUT RECORD
     WRITE OUTFILE-REC FROM WS-INFILE-REC.
     MOVE WS-INFILE-REC TO WS-INFILE-REC-OLD.
     GO READIT.
 CLOSEIT.
*    CLOSE DATASETS
*    TERMINATE
     CLOSE INFILE
           OUTFILE.
     STOP RUN.
*    END OF DELDUPS PROGRAM


COPYFMID JCL

//U1300SMP JOB 0060103010,'COPY FMIDS',MSGLEVEL=(1,1),MSGCLASS=X,
//         CLASS=X,NOTIFY=U1300,REGION=4M
//*
//*********************************************************************
//**      SMP/E UNLOAD DLIB ZONE FOR SPECIFIED FMID                  **
//*********************************************************************
//*
//S1      EXEC PGM=GIMSMP
//SMPCSI   DD  DSN=--HLQ--.GLOBAL.CSI,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  SYSOUT=*
//SMPPUNCH DD  DSN=SYSP.--FMID--.DLIB,DISP=(NEW,CATLG),UNIT=3380,
//             VOL=SER=ES4SP1,SPACE=(CYL,(1,1),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SMPCNTL  DD  *
  SET BDY (--DZN--) .

  UNLOAD FORFMID(--FMID--) ASSEM MAC MOD SRC SYSMOD .
/*
//*
//*********************************************************************
//**      GET SYSMODS DELD/SUPD BY FMID IN DLIB ZONE                 **
//*********************************************************************
//*
//S2      EXEC PGM=EXTRACT
//STEPLIB  DD  DSN=SYSP.U1300.LOADLIB,DISP=SHR
//INFILE   DD  DSN=SYSP.--FMID--.DLIB,DISP=SHR
//OUTFILE  DD  DSN=&&DSMOD1,DISP=(NEW,PASS),UNIT=SYSVIO
//PARACARD DD  *
SYSMOD
/*
//*
//*********************************************************************
//**      SORT DLIB ZONE SYSMODS INTO ASCENDING SEQUENCE             **
//*********************************************************************
//*
//S3      EXEC PGM=SORT
//SYSUDUMP DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//SORTWK01 DD  UNIT=SYSVIO,SPACE=(CYL,(1,1))
//SORTIN   DD  DSN=&&DSMOD1,DISP=(OLD,PASS)
//SORTOUT  DD  DSN=&&DSMOD2,DISP=(NEW,PASS),UNIT=SYSVIO
//SYSIN    DD  *
  SORT FIELDS=(1,8,CH,A)
  RECORD TYPE=F,LENGTH=80
  OPTION NOINC
  END
/*
//*
//*********************************************************************
//**      DROP DUPLICATE DLIB ZONE SYSMODS                           **
//*********************************************************************
//*
//S4      EXEC PGM=DELDUPS
//STEPLIB  DD  DSN=SYSP.U1300.LOADLIB,DISP=SHR
//INFILE   DD  DSN=&&DSMOD2,DISP=(OLD,PASS)
//OUTFILE  DD  DSN=&&DSMOD3,DISP=(NEW,PASS),UNIT=SYSVIO
//*
//*********************************************************************
//**      SMP/E UNLOAD DLIB ZONE SYSMODS                             **
//*********************************************************************
//*
//S5      EXEC PGM=GIMSMP
//SMPCSI   DD  DSN=--HLQ--.GLOBAL.CSI,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  SYSOUT=*
//SMPPUNCH DD  DSN=SYSP.--FMID--.DLIBSMOD,DISP=(NEW,CATLG),UNIT=3380,
//             VOL=SER=ES4SP1,SPACE=(CYL,(1,1),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SMPCNTL  DD  *
  SET BDY (--DZN--) .

  UNLOAD SYSMOD (
/*
//         DD  DSN=&&DSMOD3,DISP=(OLD,PASS)
//         DD  *
                 ) .
/*
//*
//*********************************************************************
//**      SMP/E UNLOAD TGT ZONE FOR SPECIFIED FMID                   **
//*********************************************************************
//*
//S6      EXEC PGM=GIMSMP
//SMPCSI   DD  DSN=--HLQ--.GLOBAL.CSI,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  SYSOUT=*
//SMPPUNCH DD  DSN=SYSP.--FMID--.TGT,DISP=(NEW,CATLG),UNIT=3380,
//             VOL=SER=ES4SP1,SPACE=(CYL,(1,1),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SMPCNTL  DD  *
  SET BDY (--TZN--) .

  UNLOAD FORFMID(--FMID--) ASSEM MAC MOD SRC SYSMOD .
/*
//*
//*********************************************************************
//**      GET SYSMODS DELD/SUPD BY FMID IN TGT ZONE                  **
//*********************************************************************
//*
//S7      EXEC PGM=EXTRACT
//STEPLIB  DD  DSN=SYSP.U1300.LOADLIB,DISP=SHR
//INFILE   DD  DSN=SYSP.--FMID--.TGT,DISP=SHR
//OUTFILE  DD  DSN=&&TSMOD1,DISP=(NEW,PASS),UNIT=SYSVIO
//PARACARD DD  *
SYSMOD
/*
//*
//*********************************************************************
//**      SORT TGT ZONE SYSMODS INTO ASCENDING SEQUENCE              **
//*********************************************************************
//*
//S8      EXEC PGM=SORT
//SYSUDUMP DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//SORTWK01 DD  UNIT=SYSVIO,SPACE=(CYL,(1,1))
//SORTIN   DD  DSN=&&TSMOD1,DISP=(OLD,PASS)
//SORTOUT  DD  DSN=&&TSMOD2,DISP=(NEW,PASS),UNIT=SYSVIO
//SYSIN    DD  *
  SORT FIELDS=(1,8,CH,A)
  RECORD TYPE=F,LENGTH=80
  OPTION NOINC
  END
/*
//*
//*********************************************************************
//**      DROP DUPLICATE TGT ZONE SYSMODS                            **
//*********************************************************************
//*
//S9      EXEC PGM=DELDUPS
//STEPLIB  DD  DSN=SYSP.U1300.LOADLIB,DISP=SHR
//INFILE   DD  DSN=&&TSMOD2,DISP=(OLD,PASS)
//OUTFILE  DD  DSN=&&TSMOD3,DISP=(NEW,PASS),UNIT=SYSVIO
//*
//*********************************************************************
//**      SMP/E UNLOAD TGT ZONE SYSMODS                              **
//*********************************************************************
//*
//S10     EXEC PGM=GIMSMP
//SMPCSI   DD  DSN=--HLQ--.GLOBAL.CSI,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  SYSOUT=*
//SMPPUNCH DD  DSN=SYSP.--FMID--.TGTSMOD,DISP=(NEW,CATLG),UNIT=3380,
//             VOL=SER=ES4SP1,SPACE=(CYL,(1,1),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SMPCNTL  DD  *
  SET BDY (--TZN--) .

  UNLOAD SYSMOD (
/*
//         DD  DSN=&&TSMOD3,DISP=(OLD,PASS)
//         DD  *
                 ) .
/*
//*
//*********************************************************************
//**      GET LMODS FOR MOD ENTRIES IN TGT ZONE                      **
//*********************************************************************
//*
//S11     EXEC PGM=EXTRACT
//STEPLIB  DD  DSN=SYSP.U1300.LOADLIB,DISP=SHR
//INFILE   DD  DSN=SYSP.--FMID--.TGT,DISP=SHR
//OUTFILE  DD  DSN=&&LMOD1,DISP=(NEW,PASS),UNIT=SYSVIO
//PARACARD DD  *
LMOD
/*
//*
//*********************************************************************
//**      SORT TGT ZONE LMODS INTO ASCENDING SEQUENCE                **
//*********************************************************************
//*
//S12     EXEC PGM=SORT
//SYSUDUMP DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//SORTWK01 DD  UNIT=SYSVIO,SPACE=(CYL,(1,1))
//SORTIN   DD  DSN=&&LMOD1,DISP=(OLD,PASS)
//SORTOUT  DD  DSN=&&LMOD2,DISP=(NEW,PASS),UNIT=SYSVIO
//SYSIN    DD  *
  SORT FIELDS=(1,8,CH,A)
  RECORD TYPE=F,LENGTH=80
  OPTION NOINC
  END
/*
//*
//*********************************************************************
//**      DROP DUPLICATE TGT ZONE SYSMODS                            **
//*********************************************************************
//*
//S13     EXEC PGM=DELDUPS
//STEPLIB  DD  DSN=SYSP.U1300.LOADLIB,DISP=SHR
//INFILE   DD  DSN=&&LMOD2,DISP=(OLD,PASS)
//OUTFILE  DD  DSN=&&LMOD3,DISP=(NEW,PASS),UNIT=SYSVIO
//*
//*********************************************************************
//**      SMP/E UNLOAD TGT ZONE LMODS                                **
//*********************************************************************
//*
//S14     EXEC PGM=GIMSMP
//SMPCSI   DD  DSN=--HLQ--.GLOBAL.CSI,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  SYSOUT=*
//SMPPUNCH DD  DSN=SYSP.--FMID--.TGTLMOD,DISP=(NEW,CATLG),UNIT=3380,
//             VOL=SER=ES4SP1,SPACE=(CYL,(1,1),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//SMPCNTL  DD  *
  SET BDY (--TZN--) .

  UNLOAD LMOD (
/*
//         DD  DSN=&&LMOD3,DISP=(OLD,PASS)
//         DD  *
               ) .
/*
//


Iain McArthur
MVS Systems Programmer (UK)                      c Xephon 1996

