SETUP card generation

At our installation, all accesses to datasets on tape require the
use of the JES2 SETUP card to indicate to the operators that the
job will need a tape before it can start executing.  The process of
finding out the tape numbers for a dataset  can be quite tedious,
especially if the dataset is contained on many tapes.  We had
previously envisioned a solution where all tapes would be logged
in and out  of the computer room.  Jobs would be submitted
without SETUP cards.  Then, using system exits, it would be
determined if the tapes needed for the job were in the computer
room or not.  If not, then at specified time intervals, the system
would request that tapes be brought in, and the jobs needing them
would be released automatically when they were logged in.  Our
organisation has a long-term goal to migrate from tape to DASD,
so any solution would be less useful as time went on.

So, for a quick fix, I devised the following CLIST that will figure
out what tapes are needed for a dataset.  It will also tell you if
the tape has been mounted previously on that day.  At our
installation, the tapes are taken back into the library at the end
of the day, so if the tape has already been used once that day, the
SETUP is pointless because the tape will already be in the
computer room.  The CLIST is designed to run with JES2, TSO/E,
and CA-1.  The CALL statement must be modified to indicate the
LOADLIB where your installation has placed TMSBINQ.

    /* THIS IS AN EDIT MACRO TO GENERATE SETUP CARDS */
CONTROL NOFLUSH NOLIST NOMSG NOCAPS
ISREDIT MACRO NOPROCESS
ISREDIT PROCESS DEST RANGE 0
SET &CC = &LASTCC
IF &CC = 12 THEN DO
   SET ZEDLMSG = &STR(ENTER 'A' OR 'B' ON A LINE TO INDICATE THE +
       POSITION OF SETUP CARD(S))
   ISPEXEC SETMSG MSG(ISRZ001)
   EXIT CODE(12)
END
ISREDIT (DESTL) = LINENUM .ZDEST
SET SETSTRT = &STR(/*SETUP REQUIRES)
ISREDIT (LINE,COL) = CURSOR
ISREDIT (STOP) = DATA_WIDTH
ISREDIT (DATA) = LINE &LINE
SET DSN = &SUBSTR(&COL:&STOP,&SYSNSUB(1,&DATA))
SET STOPB = &SYSINDEX(&STR( ),&SYSNSUB(1,&DSN))
SET STOPC = &SYSINDEX(&STR(,),&SYSNSUB(1,&DSN))
IF &STOPB = 0 THEN SET STOPB = 7STOPC
IF &STOPC = 0 THEN SET STOPC = 7STOPB
IF &STOPC < &STOPB THEN SET STOPB = &STOPC
SET STOPB = &STOPB - 1
SET &DSN = &SUBSTR(1:&STOPB,&SYSNSUB(1,&DSN))
FREE ATTR(TP133 TP80) F(SYSIN TMSRPT)
CONTROL NOMSG FLUSH
DELETE &SYSUID..TAPE.DELETE.ME
DELETE &SYSUID..TAPE2.DELETE.ME
CONTROL MSG FLUSH
ATTR TP133 LRECL(133) RECFM(F B A) BLKSIZE(3990) DSORG(PS)
ALLOC F(TMSRPT) DA(&SYSUID..TAPE.DELETE.ME) USING(TP133) SPACE(1) -
      TRACK NEW CATALOG
ATTR TP80 LRECL(80) RECFM(F B) BLKSIZE(6160) DSORG(PS)
ALLOC F(SYSIN) DA(&SYSUID..TAPE2.DELETE.ME) USING(TP80) SPACE(1)  -
      TRACK NEW CATALOG
OPENFILE SYSIN OUTPUT
SET &SYSIN=&STR(DSN=&SYSNSUB(1,&DSN),SHORT)
PUTFILE SYSIN
CLOSFILE SYSIN
CALL 'SYS2.TMS.LINKLST(TMSBINQ)'
ERROR DO
   CLOSFILE TMSRPT
   GOTO TMSEOJ
END
OPENFILE TMSRPT INPUT
SET VOLCNT = 0
SET FOUND = N
SET SETLINE = &STR(&SETSTRT)
SET CJOB = NF
SET AJOB = NF
ISPEXEC VGET ZJDATE
SET DATE1 = &SUBSTR(1:2,&ZJDATE)
SET DATE2 = &SUBSTR(4:6,&ZJDATE)
SET TODAY = &DATE1&DATE2
LOOP: +
      GETFILE TMSRPT
      SET &IND = &SUBSTR(42:47,&TMSRPT)
      IF &STR(&IND) ^= &STR(CRTDT=) THEN GOTO CKLDATE
      SET CRTDT = &SUBSTR(48:52,&TMSRPT)
      IF &STR(&CRTDT) ^= &STR(&TODAY) THEN GOTO CKLDATE
      SET CJOB = &SUBSTR(14:21,&TMSRPT)
CKLDATE: +
      SET &IND = &SUBSTR(93:98,&TMSRPT)
      IF &STR(&IND) ^= &STR(LDATE=) THEN GOTO CKSEQ
      SET LDATE = &SUBSTR(99:103,&TMSRPT)
      IF &STR(&LDATE) ^= &STR(&TODAY) THEN GOTO CKSEQ
      SET AJOB = &SUBSTR(83:90,&TMSRPT)
CKSEQ: +
      SET &IND = &SUBSTR(9:15,&TMSRPT)
      IF &STR(&IND) ^= &STR(VOLSEQ=) THEN GOTO LOOP
      SET FOUND = Y
      SET VOLSER = &SUBSTR(2:7,&TMSRPT)
      SET SETLINE = &STR(&SETLINE)&STR( )&STR(&VOLSER)
      SET &VOLCNT = &VOLCNT + 1
      IF &VOLCNT > 6 THEN DO
         SET &VOLCNT = 0
         ISREDIT LINE_AFTER &DESTL = "&SETLINE"
         SET SETLINE = &STR(&SETSTRT)
         SET DESTL = &DESTL + 1
      END
      GOTO LOOP
TMSEOJ: +
      ERROR OFF
      IF &VOLCNT ^= 0 THEN DO
        ISREDIT LINE_AFTER &DESTL = "&SETLINE"
        SET DESTL = &DESTL + 1
      END
      SET TP = &STR(TAPE)
      IF &VOLCNT > 1 THEN SET TP = &STR(TAPES)
      IF &CJOB ^= NF THEN DO
         ISREDIT LINE_AFTER &DESTL = +
          MSGLINE "  NOTE:  &TP CREATED TODAY BY JOB &CJOB"
         SET DESTL = &DESTL + 1
      END
      IF &AJOB ^= NF THEN DO
         ISREDIT LINE_AFTER &DESTL = +
          MSGLINE "  NOTE:  &TP ACCESSED TODAY BY JOB &AJOB"
         SET DESTL = &DESTL + 1
      END
      IF &FOUND = N THEN DO
         SET ZEDSMSG = &STR(NOT ON TAPE)
         SET ZEDLMSG = &STR(&DSN WAS NOT FOUND TO BE ON TAPE)
         ISPEXEC SETMSG MSG(ISRZ001)
         EXIT CODE(4)
      END


Nik Conwell
Systems Programmer
Peerless insurance (USA) © Peerless Insurance 1989

