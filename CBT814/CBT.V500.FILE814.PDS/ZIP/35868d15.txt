Day, date, and time conversion routine

It is often necessary to access the current day, date, or time.
The following module, which has been named DA#TIME,
calculates the current day, date, and time in a format that is
easy to read.  The format of the output it produces is as
follows:

Bytes 1-3      Day of the week (MON, TUE, WED etc)
Bytes 4-11      Time (hh:mm:ss)
Bytes 12-22      Date (dd/MTH/yyyy).

DA#TIME is invoked like this:

            :
            LINK   EP=DA#TIME,PARAM=(DATETIME)
            :
            :
DATETIME    DS     0CL22
DAY         DS     CL3
TIME        DS     CL8
DATE        DS     CL11


DA#TIME SOURCE CODE

*---------------------------------------------------------------*
* MODULE NAME    : DA#TIME                                      *
*---------------------------------------------------------------*
* PARMS RECEIVED FROM CALLER: R1 POINTS TO THE ADDRESS THAT     *
*                             POINTS TO THE AREA IN THE CALLER'S*
*                             WORKING STORAGE AREA WHERE DA#TIME*
*                             WILL PLACE THE FORMATTED DAY,     *
*                             DATE AND TIME. THE AREA MUST BE   *
*                             LARGE ENOUGH TO CONTAIN THE       *
*                             RESULT (22 BYTES IN LENGTH). THE  *
*                             FORMAT OF THE INFO DA#TIME WRITES *
*                             INTO THE AREA SPECIFIED BY THE    *
*                             CALLER IS :                       *
*  OFFSETS       TYPE    LENGTH   DESCRIPTION         FORMAT    *
*  -------       ----    ------   -----------         ------    *
*     0         EBCDIC     3      DAY OF THE WEEK      DDD      *
*     3         EBCDIC     8      TIME               HH:MM:SS   *
*     11        EBCDIC     11     DATE              DD/MMM/YYYY *
*---------------------------------------------------------------*
DA#TIME CSECT
         USING *,R12        SET UP BASE
         SAVE  (14,12),,TIME-DATE-CONVERSION..&SYSDATE
         LR    R12,R15      SET UP ADDRESSABILITY
         LR    R2,R13       SAVE EXT SAVE AREA ADRS
         LA    R13,REGSAVE  -> TO OUT SAVEAREA
         ST    R13,8(R2)    CHAIN SAVE AREAS
         ST    R2,4(R13)    CHAIN SAVE AREAS
* A D R S   W H E R E   T O   P L A C E   R E S U L T *
         L     R10,0(R1)  R10->AREA WHERE RESULT IS TO BE PLACED
* ISSUE TIME MACRO (R0=TIME, R1=JULIAN DATE) *
         TIME
         ST    R1,DATE       SAVE JULIAN DATE
         STCM  R1,03,DAY+1   SAVE JULIAN DATE (DAY ONLY)
         STCM  R1,03,DAY1+1  SAVE JULIAN DATE (DAY ONLY)
* E X T R A C T   T H E   Y E A R *
         SRL   R1,16       ONLY WANT THE YEAR
         LR    R4,R1       R1 TO ALSO CONTAIN YEAR
         AL    R4,=F'88'   +88
         CL    R4,=F'176'  RESULT < 176 ?
         BL    CENT21      YES..THEN IT'S 21ST CENTURY
         ICM   R1,2,=X'19' NO..THEN IT'S 20TH CENTURY
         B     CENT20      CONTINUE
CENT21   EQU   *
         ICM   R1,2,=X'20' IT'S 21ST CENTURY
CENT20   EQU   *
         SLL   R1,4        MAKE PLACE FOR THE SIGN
         ST    R1,WRK#0                 STORE IT
         OI    WRK#0+3,X'0F'            CORRECT SIGN
         MVC   WRK#2(4),WRK#0           SAVE IT
         UNPK  NORMDATE+7(4),WRK#0+1(3) UNPK CURRENT YEAR
         NI    WRK#0+3,X'FC'        ENSURE SIGNS ARE THE SAME
         SP    WRK#0(4),BASEYEAR(3) DIFFERENCE BETWEEN YEARS
         MVC   WRK#1(4),WRK#0       SAVE RESULT
         DP    WRK#0(4),=PL1'4'     HOW MANY LEAP YEARS HAVE GONE
         AP    WRK#1(4),WRK#0(3)    ADD RESULTS
         TM    WRK#0+3,X'F0'        CURR YEAR A LEAP YEAR?
         BNM   LEAPYEAY             YES..ADD INCREMENT NOT VALID
         AP    WRK#1(4),ONE(1)      ADD ONE
         B     GETDAY               GET CURRENT DAY
LEAPYEAR EQU   *
         AP    FEBDAYS(2),ONE       INC FEB DAYS
GETDAY   EQU   *
         CLC   WRK#1+2(2),SEVEN     LESS THAN 7 ?
         BL    LOOKUP               YES..GO BLD DAYS TABLE
         SP    WRK#1(4),SEVEN       NO..DECREMENT BY 7
         B     GETDAY               TRY AGAIN
LOOKUP   EQU   *
         L     R5,WRK#1         GET ENTRY NUM INTO R5
         SRL   R5,4             LOSE SIGN
         SR    R4,R4            CLEAR R4
         M     R4,=F'3'         CALC DISPLACEMENT INTO TABLE
         LA    R4,FRSTDAY       GET START OF DAYS FIELD
         AR    R4,R5            ADD DISPLACMENT
         LA    R7,DAYS          START OF DAYS TABLE
         LA    R8,4             TO INC R7 (EACH ENTRY=3 BYTES)
         LA    R9,DAYSL-4       R9->TO END OF DAYS TABLE
BLDTABLE EQU   *
         MVC   1(3,R7),0(R4)    BUILD DAYS TABLE
         LA    R4,3(,R4)        NEXT DAYS
         BXLE  R7,R8,BLDTABLE   MORE? YES..THEN CONTINUE
         B     TIME             FORMAT TIME
* C A L C   C U R R E N T   T I M E *
TIME     EQU   *
         SRL   R0,8                LOSE HUNDREDTHS OF A SECOND
         SLL   R0,4                MAKE PLACE FOR SIGN
         ST    R0,WRK#0            SAVE IT
         OI    WRK#0+3,X'0F'       CORRECT SIGN
         ED    PAT#TIME(10),WRK#0  FORMAT TIME HH:MM:SS
         MVC   NORMTIME(8),PAT#TIME+2  EXTRACT FORMATTED TIME
* C A L C U L A T E   D A Y   O F   W E E K *
         DP    DAY(3),SEVEN+1(1)  CALCULATE WEEK
         SR    R4,R4              CLEAR R4
         ICM   R4,3,DAY           GET QUOTIENT(REMAINDER NOT USED)
         STCM  R4,07,DAY          PUT IT BACK(REMAINDER LOST)
         MP    DAY(3),SEVEN+1(1)  CALC 1ST DAY OF WEEK
         SP    DAY1(3),DAY(3)     CALC CURRENT DAY OF WEEK
         LA    R5,DAYS            READY R5 WITH START OF DAY TAB
FINDDAY  EQU   *
         CLC   0(1,R5),DAY1+2     DAY FOUND?
         BE    GOTDAY             YES..GET DAY
         LA    R5,4(,R5)          NO..POINT TO NEXT DAY
         B     FINDDAY            CHECK AGAIN
GOTDAY   EQU   *
         MVC   NORMDAY(3),1(R5)   MOVE DAY OUT
* C A L C U L A T E   D A T E *
CALCDATE EQU   *
         MVC   DATE1(2),DATE+2   GET JULIAN DATE (DAY ONLY)
         LA    R5,DATES          START OF CONVERSION TABLE
LOOP     EQU   *
         CLC   DATE1(2),0(R5)    CHECK DATES
         BNH   DATEOK            DATE FOUND?
         SP    DATE1(2),0(2,R5)  NO..SUB DAYS OF MONTH
         LA    R5,5(,R5)         NEXT ENTRY IN TABLE
         B     LOOP              TRY AGAIN
DATEOK   EQU   *
         OI    DATE1+1,X'0F'        CORRECT SIGN
         UNPK  DATE2(3),DATE1(2)    UNPK IT
         MVC   NORMDATE(2),DATE2+1  MOVE DATE OUT
         MVC   NORMDATE+3(3),2(R5)  MOVE MONTH OUT
* M O V E   D A T E   &   T I M E   T O   C A L L E R ' S   A R E A
         MVC   0(22,R10),NORMDAY    MOVE IT TO CALLER'S AREA
* R E T U R N   T O   C A L L E R *
FINISH   EQU   *
         L     R13,REGSAVE+4        RESTORE R13
         LM    R14,R12,12(R13)      RESTORE REGS
         SR    R15,R15              PLUG RC
         BR    R14                  RETURN TO CALLER
NORMDAY  DS    CL3
NORMTIME DS    CL8
NORMDATE DC    CL11'XX/XXX/XXXX'
NORMLEN  EQU   *-NORMDAY
PAT#TIME DC    XL10'402120207A20207A2020'
BASEYEAR DC    PL3'1988'
DAY      DC    XL3'00'
DAY1     DC    XL3'00'
ONE      DC    PL1'1'
FOUR     DC    PL1'4'
SEVEN    DC    XL2'7C'
DATE     DS    F
DATE1    DS    CL2
DATE2    DS    CL3
WRK#0    DS    F
WRK#1    DS    F
WRK#2    DS    F
FRSTDAY  DC    C'FRISATSUNMONTUEWEDTHRFRISATSUNMONTUEWEDTHR'
DAYS     EQU   *
         DC    XL1'1C',CL3'FRI'
         DC    XL1'2C',CL3'SAT'
         DC    XL1'3C',CL3'SUN'
         DC    XL1'4C',CL3'MON'
         DC    XL1'5C',CL3'TUE'
         DC    XL1'6C',CL3'WED'
         DC    XL1'0C',CL3'THR'
DAYSL    EQU   *-DAYS
DATES    EQU   *
         DC    PL2'31',CL3'JAN'
FEBDAYS  DC    PL2'28',CL3'FEB'
         DC    PL2'31',CL3'MAR'
         DC    PL2'30',CL3'APR'
         DC    PL2'31',CL3'MAY'
         DC    PL2'30',CL3'JUN'
         DC    PL2'31',CL3'JUL'
         DC    PL2'31',CL3'AUG'
         DC    PL2'30',CL3'SEP'
         DC    PL2'31',CL3'OCT'
         DC    PL2'30',CL3'NOV'
         DC    PL2'31',CL3'DEC'
REGSAVE  DS    18F
         REGS
         LTORG
         END   DA#TIME


Dieter Appelhans
Consultant Systems Programmer (UK)                  c Xephon 1992

