A 'search all' edit macro

    ALL <^>string <ONLY/OTHER> <BOUNDS>
    ALL NOSPACE <BOUNDS>
    ALL +
    ALL

Some examples

      ALL Update

      ALL Update BOUNDS

      ALL ^Update

      ALL Update ONLY

      ALL Update OTHER

      ALL NOSPACE BOUNDS

      ALL +

      ALL "+"

      ALL P'#NB'

      ALL P'^' bounds

      ALL C'Canada'

      ALL

ALL REX EXEC

/* ------------ Rexx -------------- */
/* During EDIT, use to search all   */
/* and also to reset                */
/* -------------------------------- */
trace o
'ISREDIT MACRO (search,action) NOPROCESS'
action=translate(action)
if search='+' then do
   xclstat='yes'
   search=''
   end
  else xclstat='no'
select
 when search='?'    then signal help
 when xclstat='yes' then call displ_search
 when search=''     then call reset_search
 otherwise call displ_search
end
exit
/* ------------------ displ_search ------------- */
displ_search:
if search='' then do
   'ISREDIT (row,column) = CURSOR'
   if column=0 then do
      zedsmsg='*No Action'
      zedlmsg='* Error **** Cursor  not on a data line '
      'ISPEXEC SETMSG MSG(ISRZ001)'
      exit
      end
   'ISREDIT (data) = LINE ' row
   if substr(data,column,1)=' ' then stpos=column
     else do i=column by -1
             space=substr(data,i,1)
             if space='' | i=1 then do
                stpos=i
                leave
                end
          end
  data=substr(data,stpos)
  parse var data search .
  if search='' then do
      zedsmsg='*No Action'
      zedlmsg='* Error **** No data after cursor'
      'ISPEXEC SETMSG MSG(ISRZ001)'
      exit
      end
  if right(search,1)='+' then search=substr(search,1,length(search)-1)
  end
 else do
   if translate(search)='NOSPACE' then do
      search="^' '"
      nosp='y'
      end
     else nosp='n'
 end
 if length(search)>1 & left(search,1)='^' then do
    status='exclude'
    search=substr(search,2)
    end
  else status='include'
select
  when left(search,1)="'" & right(search,1)="'" then nop
  when left(search,1)='"' & right(search,1)='"' then nop
  when translate(left(search,2))="C'" & right(search,1)="'" then nop
  when translate(left(search,2))='C"' & right(search,1)='"' then nop
  when translate(left(search,2))="P'" & right(search,1)="'" then nop
  when translate(left(search,2))='P"' & right(search,1)='"' then nop
  otherwise search="'"search"'"
end
'ISREDIT (SAVE) = USER_STATE'
'ISREDIT (width) = LRECL'
'ISREDIT (start,end) = BOUNDS'
if wordpos('OTHER',action)>0 then action='OTHER'
if wordpos('ONLY',action)>0 then action='ONLY'
if wordpos('BOUNDS',action)>0 | nosp='y' then bounds=start end
  else bounds='1' width
if nosp='y' then search="'"copies(' ',word(bounds,2)-word(bounds,1)+1)"'"
select
 when strip(start,'l','0')=1 & end=width then inform=''
 when bounds = '' then do
  inform='*Warning* >>> Bounds Left Column=' start 'Right Column=' end '<<< '
  end
 otherwise  do
  inform='*Note* >>> Bounds Left Column=' start 'Right Column='         end '<<< '
  end
end
'ISREDIT RESET'
if status='include' then do
   'ISREDIT EXCLUDE ALL'
   'ISREDIT FIND' search 'ALL' bounds
   if rc^=0 then signal nomatch
   'ISREDIT (nstrings,nlines) = FIND_COUNTS'
   end
 else do
   'ISREDIT EXCLUDE' search 'ALL' bounds
   if rc^=0 then signal nomatch
   end
select
 when action='ONLY' then 'ISREDIT DELETE ALL X'
 when action='OTHER' then do
      'ISREDIT DELETE ALL NX'
      'ISREDIT RESET EXCLUDE'
      end
 when status='exclude' then queue 'ISREDIT LOCATE 0'
 otherwise do
      queue 'ISREDIT FIND FIRST' search
      if nlines=1 then do
         queue 'ISREDIT RESET'
         zedsmsg=' 1  Hit'
         zedlmsg='* Note **** ' search "has a single hit"
         'ISPEXEC SETMSG MSG(ISRZ001)'
         end
      end
end
'ISREDIT USER_STATE = (SAVE)'
if inform^='' then 'ISREDIT LINE_AFTER 0 = MSGLINE (inform)'
return
/* -------------------- nomatch ------------------- */
nomatch:
zedsmsg='*No Hits*'
zedlmsg='* Error **** ' search "has no hits in the file"
'ISPEXEC SETMSG MSG(ISRZ001)'
'ISREDIT RESET'
'ISREDIT USER_STATE = (SAVE)'
if strip(start,'l','0')=1 and end=width then nop
  else do
   'ISREDIT LOCATE 0'
   error='*No Hits*   'inform
   'ISREDIT LINE_AFTER 0 = MSGLINE (error)'
   end
return
/* -------------------- reset_search -------------- */
reset_search:
row=0
label='n'
'ISREDIT PROCESS RANGE /'
if rc=0 then do
   'ISREDIT (cmd) = RANGE_CMD'
   'ISREDIT (row) = LINENUM .ZFRANGE'
   label='y'
   end
 else do
   'ISREDIT (row) = LINENUM .M'
    if rc=8 then 'ISREDIT (row,column) = CURSOR'
      else label='y'
    end
'ISREDIT RESET LABEL'
if row>1 then queue 'ISREDIT locate' strip(row,'l','0')
  else queue 'ISREDIT UP MAX'
queue 'ISREDIT RESET'
if row>1 & label='n' then queue 'ISREDIT CURSOR = ' row column
return
/* -------------------- Help  --------------------- */
help:
say 'Use ALL command to display all the occurrences of a particular string'
say 'You can use a picture string also'
say 'Use PF5 to find subsequent searches'
say 'Use ALL to reset'
say 'While resetting, if a label .M or "/" is in the prefix area'
say 'or if you place cursor on a specific find'
say 'that line will become the current line'
say 'Some Examples of ALL'
say '--------------------'
say 'ALL canada       - shows all occurrences of canada'
say 'ALL ^canada      - shows all lines which do not contain canada'
say 'ALL canada ONLY  - has only those lines which contain canada'
say 'ALL canada OTHER - has only those lines which do not contain canada'
say 'ALL canada BOUNDS- shows all occurrences of canada within the bounds '
say 'ALL nospace    - shows non-blank lines                         '
say 'ALL nospace BOUNDS- shows all non-blanks within the bounds '
say 'ALL +          - shows all occurrences of the cursor word'
say 'ALL "+"        - shows all occurrences of + '
say 'ALL ?          - displays help'
say ''
say 'ALL            - resets and displays all the excluded lines'
exit


Moyeen Ahmed Khan
Senior Systems Designer
Manulife Financial (Canada)                                                      c Xephon 1995

