SLR exit for enhanced DASD utilization reporting

SLR collects data into table DASD_DSNSTAT from the output
dataset created by the DCOLLECT command under IDCAMS.
The dataset name is associated with a project using the
parameter table DASD_DSNPARM. One limitation of this
translation is that wildcard characters are not allowed in the
dataset qualifiers in DASD_DSNPARM. Hence, each time a
new high-level qualifier is added it is necessary to update
DASD_DSNPARM for correct reporting. If projects are
distinguished by certain positional characters in the same
qualifier, this translation is not very flexible. A typical example
is the case of TSO users where the user-ids in a project vary
only in a specified number of low-level characters.

The following SLR record build exit can take care of this in a
better way. On first entry to this exit the dataset DSNPARM is
read to create its own translation table. The record layout is as
follows:

Columns 1-8          First qualifier
Columns 10-17      Second qualifier
Columns 19-26      Third qualifier
Columns 28-35      Project.

Each qualifier can contain the wildcard character '%',
indicating that it can match with any character in the
corresponding position in the dataset name. A qualifier can be
left blank to match any qualifier in the corresponding position
in the dataset name. The DASD_DSNPARM table can now be
left empty. When a new input record is read during the
COLLECT process, the exit is entered. The parameters passed
include a pointer to the record. The exit translates the first
qualifier of the dataset name to a matching project code. SLR
by default uses the first qualifier as the project code.


Sample job stream

//SLRCOL  JOB ...
//****************************
//* RUN SLR COLLECT PROCEDURE
//****************************
//COLLECT   EXEC  DRERUN,SLRPARM=UPDATE
//MAINFILE  DD DISP=OLD,DSN= *slr main database*
//WORKFILE  DD DISP=OLD,DSN= *slr work database*
//LOG       DD DSN= *dcollect output dataset*
//IN        DD *
     EDIT LOGSOURCE
       CHANGE R(LOGSOURCE= *log source* ) V(BUILDEXIT=SLREXIT)
     ENDEDIT
  COLLECT ALL  LOGSOURCE( *log source* ) FILE(LOG) BUF(8000K)
/*
//DSNPARM   DD *
XXX%%    YY%%%     Z%%%    PROJ1
XYZ                        PROJ2
/*


SLR EXIT SOURCE CODE

SLREXIT   CSECT
          SAVE   (14,12)                SAVE REGS
          LR     12,15                  SET UP BASE REG
          USING  SLREXIT,12             ESTABLISH ADDRESSABILITY
          ST     13,SAVE+4              FORWARD POINTER
          LA     13,SAVE                NEW REGISTER SAVE AREA
          MVC    PARMLIST(24),0(1)      PARAMETER LIST PASSED
          L      5,ENTINDPT             ENTRY INDICATOR POINTER
          L      6,0(5)                 GET ENTRY INDICATOR
          LTR    6,6                    ENTRY INDICATOR 0 ?
          BZ     FIRSTENT               THEN FIRST ENTRY TO EXIT
          C      6,=F'4'                ENTRY IND = 4 ?
          BE     NORMENT                THEN NORMAL ENTRY
          B      LASTENT                ENTIND = 8 ; LAST ENTRY
*  PROCESS THE FIRST ENTRY HERE
FIRSTENT  OPEN   TRANFILE               OPEN  TRANSLATION DATASET
          LTR    15,15                  CHECK RET CODE
          BNZ    NULLTAB                NO TRANSLATION TO BE DONE
          XR     2,2                    INITIALIZE TRANSLATION TABLE
          LA     3,TRNTAB                   LENGTH TO ZERO
NEXTTRN   GET    TRANFILE               READ NEXT TRANSLATION RECORD
          USING  TRANREC,3              ESTABLISH ADDRESSABILITY
          MVC    TRNQUL1,0(1)           SAVE FIRST QUALIFIER
          MVC    TRNQUL2,9(1)           SAVE SECOND QUALIFIER
          MVC    TRNQUL3,18(1)          SAVE THIRD QUALIFIER
          MVC    TRNPROJ,27(1)          SAVE PROJECT CODE
          LA     5,TRNQUL1              ADDRESS OF FIRST QUALIFIER
          BAL    10,WILDCNT             COUNT WILDCARD CHARACTERS
          STH    4,TRNCNT1              SAVE WILDCARD COUNT
          LA     5,TRNQUL2              ADDRESS OF SECOND QUALIFIER
          BAL    10,WILDCNT             COUNT WILD CARD CHARS
          STH    4,TRNCNT2              SAVE WILDCARD COUNT
          LA     5,TRNQUL3              ADDRESS OF THIRD QUALIFIER
          BAL    10,WILDCNT             COUNT WILDCARD CHARS
          STH    4,TRNCNT3              SAVE WILDCARD COUNT
          DROP   3                      DROP ADDRESSABILITY
          LA     3,38(,3)               POINT TO NEXT TABLE ENTRY
          LA     2,1(2)                 INCREMENT TABLE COUNTER
          CH     2,=H'100'              TABLE OVERFLOW?
          BH     TABOFLW                  THEN EXIT
          B      NEXTTRN                ELSE READ NEXT RECORD
*  SUBROUTINE TO GET COUNT OF WILDCARD ( % ) CHARS IN EACH QUALIFIER
WILDCNT   XR     4,4                    INITIALIZE WILDCARD COUNT
          LA     6,8                    LENGTH OF EACH QUALIFIER
NXTCHR1   CLI    0(5),C'%'              CHECK IF WILDCARD CHAR
          BNE    SKIP1                  IF NOT SKIP IT
          LA     4,1(4)                    ELSE INCREMENT COUNTER
SKIP1     LA     5,1(,5)                POINT TO NEXT CHAR
          BCT    6,NXTCHR1              REPEAT 8 TIMES
          BR     10                     RETURN
*  TOO MANY ENTRIES IN TRANSLATION TABLE .. SO DO NOT USE IT
TABOFLW   WTO    '  TOO MANY ENTRIES IN TRANSLATION TABLE',            X
               ROUTCDE=(1,10),DESC=(6)
          CLOSE  TRANFILE               CLOSE TRANSLATION FILE
NULLTAB   XR     2,2                    TABLE LENGTH SET TO ZERO
          STH    2,TRTABLEN             SAVE IT
          B      EXIT1                  RETURN FROM EXIT
*  EOF REACHED ON TRANSLATION FILE
TRANEND   CLOSE  TRANFILE               CLOSE TRANSLATION FILE
          STH    2,TRTABLEN             SAVE THE TABLE LENGTH
*  SORT THE TRANSLATION TABLE
          LA     3,TRNTAB               ADDRESS OF TRANSLATION TABLE
          LR     5,2                    TABLE LENGTH
OUTLOOP   CH     5,=H'1'                CONTAINS 1 OR NO ITEM
          BNH    EXIT1                    THEN NO SORTING NEEDED
          LA     4,38(,3)               POINT TO NEXT ITEM OF TABLE
          LR     6,5                    LOAD UNSORTED TABLE LENGTH
          BCTR   6,0                    REDUCE BY 1
COMPARE   CLC    32(6,3),32(4)          COMPARE KEYS
          BNH    NOSWAP                 IF KEY NOT HIGH THEN NO SWAP
          MVC    TEMPREC,0(3)           SAVE FIRST RECORD
          MVC    0(38,3),0(4)           MOVE SECOND TO FIRST
          MVC    0(38,4),TEMPREC        MOVE SAVED RECORD TO SECOND
NOSWAP    LA     4,38(4)                POINT TO NEXT ITEM
          BCT    6,COMPARE              REPEAT N-1 TIMES
          LA     3,38(,3)               POINT TO NEXT ITEM
          BCT    5,OUTLOOP              REPEAT OUTER LOOP
*  ENTER NORMAL ENTRY HERE
NORMENT   L      5,PRECPT               RECORD ADDRESS POINTER
          L      6,0(5)                 RECORD ADDRESS
          LA     6,4(,6)                SKIP RDW OF THE RECORD
          ST     6,SAVE6                SAVE RECORD ADDRESS
          LH     2,TRTABLEN             GET COUNT OF TRANSLATION TABLE
          LTR    2,2                    IS IT ZERO
          BZ     NOREXIT                THEN NO PROCESSING
          USING  IDCDOUT,6              ADDRESSABILITY TO RECORD
          CLC    DCURCTYP,=CL2'D'       IF TYPE 'D' RECORD
          BE     DCOMPNT                  THEN DATA COMPONENT
          CLC    DCURCTYP,=CL2'A'       IF TYPE 'A' RECORD
          BE     ACOMPNT                  THEN ASSOCIATION COMPONENT
          B      NOREXIT                ELSE NO PROCESSING
DCOMPNT   LA     1,DCDDSNAM             ADDRESS OF DATA COMPONENT
          BAL    10,SPLIT               SPLIT INTO QUALIFIERS
          BAL    10,MATCH               MATCH WITH TABLE
          L      6,SAVE6                RESTORE RECORD ADDRESS
          MVC    DCDDSNAM,DSNAME1       MOVE THE NEW NAME TO RECORD
          B      NOREXIT                EXIT FROM NORMAL PROCESS
ACOMPNT   LA     1,DCADSNAM             ADDRESS OF COMPONENT NAME
          BAL    10,SPLIT               SPLIT INTO QUALIFIERS
          BAL    10,MATCH               MATCH WITH DSNPARM TABLE
          L      6,SAVE6                RESTORE RECORD ADDRESS
          MVC    DCADSNAM,DSNAME1       MOVE THE NEW NAME TO RECORD
          LA     1,DCAASSOC             ADDRESS OF ASSOCIATION NAME
          BAL    10,SPLIT               SPLIT INTO QUALIFIERS
          BAL    10,MATCH               MATCH WITH DSNPARM TABLE
          L      6,SAVE6                RESTORE RECORD ADDRESS
          MVC    DCAASSOC,DSNAME1       MOVE THE NEW NAME TO RECORD
NOREXIT   L      6,RETCODPT             RETURN CODE POINTER
          XR     5,5                    RET CODE ZERO
          ST     5,0(6)                 STORE RET CODE
          L      5,PRECPT               ADDRESS OF PASSED RECORD
          ST     5,PBLRECPT             STORE AS ADDRESS OF NEW RECORD
          B      EXIT1                  COMMON EXIT POINT
*  SPLIT DATASET NAME INTO QUALIFIERS
SPLIT     MVI    QUALTAB,C' '           INITIALIZE QUALIFIER TABLE
          MVC    QUALTAB+1(175),QUALTAB     WITH SPACES
          LA     2,QUALTAB              ADDRESS OF QUAL TABLE
          LR     3,2                    SAVE ADDRESS FOR LATER USE
          LA     5,44                   LENGTH OF DATASET NAME
          LR     4,1                    ADDRESS OF DATASET NAME
NXTCHAR   MVC    0(1,3),0(4)            MOVE ONE CHAR TO QUAL TABLE
          LA     3,1(,3)                POINT TO NEXT CHAR
          LA     4,1(,4)                       "
          CLI    0(4),C'.'              IF SEPARATOR FOUND
          BE     NXTQUAL                   THEN START NEXT QUALIFIER
          CLI    0(4),C' '              IF SPACE IN NAME
          BE     SPLITOVR                  THEN NAME IS OVER
          BCT    5,NXTCHAR              ELSE CHECK NEXT CHAR
          B      SPLITOVR                  THEN NAME IS OVER
NXTQUAL   LA     2,8(2)                 POINT TO NEXT QUALIFIER
          LR     3,2                    FOR USE IN NEXT QUAL SCANNING
          LA     4,1(,4)                SKIP '.' IN THE NAME
          BCTR   5,0
          BCT    5,NXTCHAR              REDUCE LENGTH
SPLITOVR  BR     10                     SPLITTING IS FINISHED
*  MATCH THE DATASET NAME WITH PARAMETER TABLE
MATCH     LA     2,TRNTAB               ADDRESS OF TRANSLATION TABLE
          LH     5,TRTABLEN             LENGTH OF TABLE
MATCH1    LA     3,QUALTAB              ADDRESS OF QUALIFIER TABLE
          LH     4,32(,2)               NO OF WILD CARDS IN QUAL 1
          BAL    9,MATCH2               MATCH FIRST QUAL. WITH TABLE
          LTR    1,1                    IF  SUCCESSFUL MATCH
          BZ     CONT1                     THEN  CONTINUE
          LA     2,38(,2)               ELSE POINT TO NEXT TRAN ENTRY
          BCT    5,MATCH1               REPEAT MATCH N TIMES
          B      NOMATCH                NO MATCH FOUND
CONT1     LA     2,8(,2)                ADDRESS OF SECOND QUALIFIER
          LA     3,8(,3)                ADDRESS IN TRANS TABLE
          LH     4,26(,2)               WILD CARDS IN 2ND QUALIFIER
          BAL    9,MATCH2               MATCH SECOND QUALIFIER
          LTR    1,1                    IF SUCCESSFUL MATCH
          BZ     CONT2                     THEN CONTINUE
          LA     2,30(,2)               ELSE POINT TO NEXT TABLE ENTRY
          BCT    5,MATCH1               REPEAT N TIMES
          B      NOMATCH                NO MATCH FOUND
CONT2     LA     2,8(,2)                ADDRESS OF THIRD QUALIFIER
          LA     3,8(,3)                ADDRESS IN TRANS TABLE
          LH     4,20(,2)               NO OF WILD CARDS
          BAL    9,MATCH2               MATCH
          LTR    1,1                    IF SUCCESSFUL
          BZ     CONT3                     THEN CONTINUE
          LA     2,22(,2)               ELSE POINT TO NEXT TABLE ITEM
          BCT    5,MATCH1               REPEAT N TIMES
          B      NOMATCH                NO MATCH FOUND
CONT3     EQU    *                      FIRST QUALIFIER IS PROJECT
          MVC    QUALTAB(8),8(2)        FIRST QUALIFIER IS PROJECT
NOMATCH   MVI    DSNAME1,C' '
          MVC    DSNAME1+1(43),DSNAME1  INITIALIZE DSNAME1 WITH SPACE
*  COMBINE QUALIFIERS INTO DATASET NAME
          LA     2,DSNAME1              ADDRESS OF DSNAME1 FIELDS
          LA     3,QUALTAB              ADDRESS OF QUALIFIER
MOVNXT    MVC    0(8,2),0(3)            MOVE ONE QUAL TO DSNAME1
          LA     3,8(,3)                POINT TO SECOND QUAL
          CLC    0(8,3),SPACE           LAST QUAL SPACE
          BE     NOMORE                 IF YES FINISHED
SKIPNXT   CLI    0(2),C' '              CHECK FOR SPACES IN MOVED QUAL
          BE     MOVNXT1                IF FOUND THEN CHANGE
          LA     2,1(,2)                POINT TO NEXT CHAR
          B      SKIPNXT                REPEAT TILL SPACE FOUND
MOVNXT1   MVI    0(2),C'.'              ADD SEPARATOR
          LA     2,1(,2)                POINT TO NEXT CHAR
          B      MOVNXT                 EXAMINE NEXT QUALIFIER
NOMORE    BR     10                     RETURN FROM MATCH
*  MATCH ONE QUALIFIER AGAINST CORRESPONDING TRANSLATION TABLE ENTRY
MATCH2    LTR    4,4                    COUNT OF WILD CARDS
          BNZ    WILDCH                 IF NOT ZERO WILD CARD MATCH
          CLC    0(8,2),SPACE           IF MATCHING WITH SPACE THEN OK
          BE     MATCH3
          CLC    0(8,2),0(3)            DIRECT MATCH
          BE     MATCH3                 IF EQUAL THEN MATCHED
          LA     1,1                    NO MATCH RET CODE
          BR     9                      RETURN
MATCH3    XR     1,1                    MATCH RET CODE
          BR     9                      RETURN
WILDCH    STM    2,3,SAVE2              SAVE REGISTERS
          LA     4,8                    COUNTER SET TO 8
WILDCH1   CLC    0(1,2),0(3)            CHECK ONE CHARACTER
          BE     CHKNXT                 IF EQUAL THEN PROCEED
          CLI    0(2),C'%'              CHECK IF WILDCARD
          BE     CHKSPCE                THEN CHECK FOR SPACE
WILDCH2   LA     1,1                    NO MATCH RET CODE
          LM     2,3,SAVE2              RESTORE REGISTERS
          BR     9                      RETURN TO CALLER
CHKSPCE   CLI    0(3),C' '              SPACE IN QUALIFIER
          BE     WILDCH2                THEN NOT MATCHING
CHKNXT    LA     2,1(,2)                POINT TO NEXT CHAR
          LA     3,1(,3)                       "
          BCT    4,WILDCH1              REPEAT 8 TIMES
          XR     1,1                    SUCCESSFUL RET CODE
          LM     2,3,SAVE2              RESTORE REGISTERS
          BR     9                      RETURN TO CALLER
* HERE WHEN ENTERING THE LAST TIME
LASTENT   L      6,RETCODPT             ADDRESS OF RET CODE
          LA     5,8                    SRT RET CODE = 8
          ST     5,0(6)                 STORE IN PARM BLOCK
*  COMMON EXIT POINT FOR ALL PASSES
EXIT1     L      13,SAVE+4              RESTORE INITIAL R13
          LM     14,12,12(13)           RESTORE ALL REGISTERS
          BR     14                     RETURN FINALLY
          LTORG
PARMLIST  DS     6F                     PARAMETERS PASSED TO THE EXIT
          ORG    PARMLIST
ENTINDPT  DS     F                      ENTRY INDICATOR POINTER
PRECPT    DS     F                      POINTER TO PASSED RECORD
PLOGSCPT  DS     F                      POINTER TO LOG SOURCE
PBLRECPT  DS     F                      POINTER TO BUILT RECORD
RETCODPT  DS     F                      RETURN CODE POINTER
USERFWPT  DS     F                      USER DEFINED FULLWORD POINTER
SAVE      DS     18F                    REGISTER SAVE AREA
SAVE2     DS     2F                     REG SAVE AREA
SAVE6     DS     F                      REG SAVE AREA
TRANFILE  DCB    DDNAME=DSNPARM,DSORG=PS,MACRF=(GL),RECFM=FB,          X
               EODAD=TRANEND
TEMPREC   DS     CL38                   SORT RECORD SAVE AREA
DSNAME1   DS     CL44                   DATASET NAME
          DS     CL8
SPACE     DC     CL8' '
QUALTAB   DS     22CL8                  TABLE OF DATASET QUALIFIERS
TRTABLEN  DS     H                      TRANSLATION TABLE LENGTH
TRNTAB    DS     100CL38                TRANSLATION TABLE
          IDCDOUT                       DCOLLECT RECORD LAYOUT
TRANREC   DSECT                         TRANSLATION PARAMETER RECORD
TRNQUL1   DS     CL8                    FIRST QUALIFIER
TRNQUL2   DS     CL8                    SECOND QUALIFIER
TRNQUL3   DS     CL8                    THIRD QUALIFIER
TRNPROJ   DS     CL8                    PROJECT CODE
TRNCNT1   DS     H                      WILD CARD CHARS IN QUAL1
TRNCNT2   DS     H                      WILD CARD CHARS IN QUAL2
TRNCNT3   DS     H                      WILD CARD CHARS IN QUAL3
          END    SLREXIT


M V George
Systems Programmer
Ministry of Interior (Qatar)                              c Xephon 1993

