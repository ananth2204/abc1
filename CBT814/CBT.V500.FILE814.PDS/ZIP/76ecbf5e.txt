Floating point number conversion

The processing of floating point numbers in Assembler programs is fairly rare,
especially in conjunction with the graphics sometimes required.  The data
manipulation itself is relatively straightforward and the only difficulties
arise in data conversion.

The following three subroutines perform conversion to or from the floating point
format:

¥    CVTFPC - floating point to character
¥    CVTFPI - floating point to integer
¥    CVTIFP - integer to floating point.


CVTFPC   DS    0H FLOATING-POINT --> CHARACTER CONVERSION
**
* CVTFPC - CONVERT CONTENTS OF FLOATING-POINT REGISTER (E0)
*          TO CHARACTER FORM (AAAAAAAA.BBBBBBBB),
*          THE INTEGER AND FRACTION PARTS HAVE VARIABLE LENGTH.
*          R15: RETURNED WITH THE ADDRESS OF THE OUTPUT FIELD
*          (LENGTH 8 BYTES)
*          R1:  RETURNED WITH THE NO. OF FRACTIONAL DIGITS
**
         LA    R1,0
CVFPC2   STE   E0,E
         CE    E0,E'0'
         BE    CVFPC1              ZERO
         CLI   E,X'46'
         BNL   CVFPC1
         ME    E0,=E'10'
         LA    R1,1(R1)            NO. OF FRACTIONAL DIGITS +1
         B     CVFPC2
CVFPC1   ST    R1,NFRACT
* R1: NO. OF FRACTIONAL DIGITS
         SR    R0,R0
         ICM   R0,B'0111',E+1
         CVD   R0,D
* ROUND, IF MORE THAN 2 FRACTIONAL DIGITS
         CH    R1,=H'2'
         BNH   CVFPC3
         AP    D,=P'50'            +50
         NC    D+L'D-2(2),=X'F00F' SET LAST 2 DIGITS TO 0
* CONSTRUCT EDIT-MASK
CVFPC3   LA    R15,11
         SR    R15,R1
* R15: NO. OF INTEGER DIGITS
         MVC   EDMK(0),=12X'20'
         EX    R15,*-6
         MVI   EDMK,X'40'          FILL-CHAR
         LA    R0,X'21'
         STC   R0,EDMK-1(R15)
         LA    R1,EDMK(R15)        SIGNIFICANCE-START
         LA    R15,EDMK+1(R15)
         MVC   0(9,R15),=X'4B2020202020202020' FRACTION
         EDMK  EDMK(13),D+2
* R1: SIGNIFICANCE START
* MAXIMUM EDITED FIELD LENGTH = 8
         LA    R15,EDMK+13
* R15: END OF EDITED FIELD+1
* REMOVE TRAILING BLANKS
         L     R0,NFRACT
* R0: NO. OF FRACTIONAL DIGITS
CVFPC5   BCTR  R15,0
         CLI   0(R15),C'0'
         BNE   CVFPC4
         BCT   R0,CVFPC5
         BCTR  R15,0
CVFPC4   CLI   0(R15),C'.'
         BNE   *+6
         BCTR  R15,0
         MVC   1(8,R15),=CL8' '
* R1: START-ADDR OF EDITED FIELD
* RIGHT-JUSTIFY EDITED FIELD
         LA    R15,8(R1)
CVFPC6   BCTR  R15,0
         CLI   0(R15),C' '
         BE    CVFPC6
* R15: END OF FIELD (RIGHT)
         SH    R15,=H'7'
* R15: END OF FIELD (LEFT)
* R0: NO. OF FRACTIONAL DIGITS
         LR    R1,R0
         BR    R14                 RETURN


CVTFPI   DS    0H FLOATING-POINT --> INTEGER
**
*  CVTFPI - CONVERT CONTENTS OF FLOATING-POINT REGISTER (E0)
*           TO INTEGER .
*           R0:  RETURNED WITH THE INTEGER
**
CVFPI2   STE   E0,E
         LA    R0,0                R0=0
         LA    R1,0                R1=0
         CE    E0,=E'0'
         BE    CVFPI1              ZERO
         IC    R1,E                EXPONENT
         N     R1,=X'0000000F'
         ICM   R0,B'0111',E+1
         LA    R15,6
         SR    R15,R1              DISPLACEMENT
         MH    R15,=H'4'
         SRL   R0,0(R15)
CVFPI1   BR    R14                 RETURN


CVTIFP   DS    0H INTEGER --> FLOATING-POINT CONVERSION
**
* CVTIFP - CONVERT CONTENTS OF INTEGER REGISTER (R0)
*          TO FLOATING-POINT (E0).
**
         N     R0,=X'00FFFFFF'
         SLL   R0,8
         LA    R1,6                NO. OF HEX-DIGITS
CVTIFP2  ST    R0,IFPX             STORE
         SLA   R0,4                SHIFT 1 HEX-POSITION LEFT
         BO    CVTIFP1             SIGNIFICANT DIGIT FOUND
         BCT   R1,CVTIFP2
* END OF FIELD, ZERO
CVTIFP1  L     R0,IFPX
         LA    R1,X'40'(R1)        EXPONENT
         ST    R0,IFPX+1           MANTISSA
         STC   R1,IFPX             EXPONENT
         LE    E0,IFPX
         BR    R14                 RETURN


IFPX     DS    F
NFRACT   DC    E'0'
E        DC    E'0'
D        DS    PL8
RD       DS    PL8
         DC    CL8' '
EDMK     DC    CL24' '
         DC    CL8' '
E0       EQU   0                   FP-REGISTER 0
         END


Anthony Rudd
Technical Specialist (West Germany)     © Anthony Rudd 1987
























































