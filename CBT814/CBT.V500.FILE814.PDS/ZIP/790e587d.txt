RACF special and operations attribute

At our installation all our data is RACF protected. This means
that some people must have special rights to bypass protection for
system tasks, such as dumping or restoring entire volumes,
assisting users to make the correct RACF definitions, maintaining
global RACF definitions, etc.

This is typically the responsibility of systems programmers, space
managers, security personnel etc. RACF provides the option to
define users with the 'special' or 'operations' attributes, to allow
them to perform these tasks. A user with these attributes has the
required extra access rights to data and profiles, but has to be
extremely careful not to misuse these rights  when performing
other, more common, tasks.

To prevent our special and operations users from using these extra
rights by accident, we developed an Assembler program
(SPCOPER) that lets users switch on and switch off the special
and operations attributes. We now define these users to RACF
without extra attributes. When the user needs the extra rights for a
special task, he or she can call the program to get the rights he or
she needs. The program can be called from a TSO session or can
be used in the EXEC card of the first job step. The switched-on
attributes will take immediate effect, and last until the address
space ends by job termination, log-off etc. Since the changes are
only made in in-core control blocks, they do not affect subsequent
sessions or jobs. Also the extra attributes can be switched off by
calling the program again, after the special task is completed. The
program accepts just one parameter, with value 'SPECIAl',
'OPERATions', 'NOSPECial', or 'NOOPERations'.

It is evident that an installation has to be very careful with a
powerful program like this: it could punch a hole in a security
system. Therefore the progam includes a RACF check to verify
the caller's right to use the program. He or she needs access to the
resources SPCOPER.SPEC or SPCOPER.OPER in a RACF
facility class to change his or her 'special' or 'operations'
attribute. (You have to insert the name of the class your installation
uses for these kinds of facility in the RACROUTE
REQUEST=AUTH statement in the program.) These resource
profiles should be well protected and regularly checked. The
program needs to run authorized. Therefore it must be linked with
AC=1 to an APF-authorized library: of course APF-authorized
libraries must be well protected too. Also the SMF records that
RACF creates for all actions that have been permitted because the
user had the special or operations attribute should be viewed
carefully (via the RACF Report Writer). To run the authorized
program in a TSO environment, it has to be included in the
program part of the IKJTSOxx member in SYS1.PARMLIB.

Example of SPCOPER use in a job

//MYJOB    JOB  ..........
/*GET OPERATIONS ATTRIBUTE
//STOPER   EXEC PGM=SPCOPER,PARM=OPERATIONS
/*STEP THAT NEEDS OPERATIONS ATTRIBUTE
//STEP1    EXEC ..........

Example of SPCOPER use in a TSO session

CALL 'your.apf.library(SPCOPER)' 'SPECIAL'

Assembler source FOR SPCOPER

SPCOPER  CSECT
         BAKR  14,0                    PUSH REGISTERS
         LR    12,15                   LOAD ENTRY ADDRESS INTO R12
         USING SPCOPER,12              ESTABLISH ADDRESSABILITY
         L     2,0(1)                  LOAD PARM POINTER
         LH    3,0(2)                  R3:=PARM LENGTH
         CH    3,=H'6'                 LESS THAN 6 ?
         BL    RC4                     YES, NOT ALLOWED
         LA    3,2(2)                  LOAD PARM DATA ADDRESS
         CLC   0(2,3),=C'NO'           SET OFF ?
         BNE   SPCOP10                 NO - HE WANTS IT ON
         MVC   RESSUF,2(3)             MOVE TYPE TO RESOURCE NAME
         B     SPCOP20                 AND DO VERIFICATION
SPCOP10  MVC   RESSUF,0(3)             MOVE TYPE TO RESOURCE NAME
SPCOP20  RACROUTE REQUEST=AUTH,WORKA=WA,ENTITYX=ENTITYX,RELEASE=1.9,   *
               ATTR=READ,CLASS='facility',MSGSUPP=NO
         CH    15,=H'4'                IS THE RESNAME DEFINED ?
         BE    RC4                     NO - THEN THE PARM WAS ILLEGAL
         LTR   15,15                   OTHER NONZERO RETURN CODE ?
         BNZ   RETURN                  YES - RACF TOLD WHY, LEAVE PROG
         L     2,X'224'                GET THE
         L     2,ASCBASXB-ASCB(2)       POINTER
         L     2,ASXBSENV-ASXB(2)        TO THE ACEE
         MODESET KEY=ZERO
         CLC   0(4,3),=C'SPEC'
         BNE   SPCOP30
         OI    ACEEFLG1-ACEE(2),ACEESPEC
         B     SPCOP60
SPCOP30  CLC   0(4,3),=C'OPER'
         BNE   SPCOP40
         OI    ACEEFLG1-ACEE(2),ACEEOPER
         B     SPCOP60
SPCOP40  CLC   0(6,3),=C'NOSPEC'
         BNE   SPCOP50
         NI    ACEEFLG1-ACEE(2),255-ACEESPEC
         B     SPCOP60
SPCOP50  CLC   0(6,3),=C'NOOPER'
         BNE   SPCOP60
         NI    ACEEFLG1-ACEE(2),255-ACEEOPER
SPCOP60  MODESET KEY=NZERO
RETURN   PR                            POP REGISTERS AND RETURN
RC4      WTO   'ILLEGAL PARAMETER',ROUTCDE=(11)
         LA    15,4
         B     RETURN
         LTORG
WA       DS    CL512
ENTITYX  DC    H'0',H'12',C'SPCOPER.'
RESSUF   DC    CL4'????'
         IHAACEE
         IHAASCB
         IHAASXB
         END   SPCOPER


J van de Pieterman
Systems Programmer
Hoogovens nv (The Netherlands)                                          c Xephon 1994

