ACS routine test case generator

INTRODUCTION

Those who have already converted to SMS know how clumsy
and difficult it is to test ACS routines. It is difficult to understand
why IBM doesn't offer a better utility for this job. Creating test
cases for tests is even more difficult than testing ACS routines. It
is basically manual work and very very slow. You must fill many
fields in numerous data entry displays only to press ENTER and
have ISMF tell you that it has detected an error in some of those
fields. For the above reasons I wrote a REXX EXEC, TCASE.

INSTALLATION

TCASE consists of two parts: a REXX EXEC, TCASE, and an
ISPF edit macro, TCASEMAC. Both must be copied into a
library, which is automatically allocated to your TSO session
under the SYSPROC or ISPEXEC DDNAME concatenation,
depending on your installation's conventions.

If you want to rename TCASE, do so. If you want to rename
TCASEMAC you should change that name also in the macro call
in TCASE.

SOME EXPLANATION

TCASE works as a line command in ISMF'S dataset list display.
When you create ACS routine test cases using ISMF you can find
that ISMF creates normal members in a standard PDS library.
Examining those members shows their structure:

o      Keyword (often the same as the field name in the ISMF Test
      Case Entry panel), followed by a colon.

o      Value.

Figure 1 illustrates an example of the type of output produced.

TCASE creates such members using the fields generated by
ISMF.

It is clear that TCASE cannot generate all the fields that can be
manually entered, only those that have an equivalent column  in
ISMF's display.

HOW IT WORKS

1      The most important variables are PAR1 to PAR20.

2      Using VGET dialog service TCASE reads the dataset's
      parameters from the shared pool:

      o      COBJ, dataset name

      o      CDSORG, dataset organization

      o      CALLOCSP, space primary allocation

      o      CSECALLO, space secondary allocation

      o      CCREATD2, creation date yyyy/mm/dd

      o      CLASTRE2, date last referenced yyyy/mm/dd

      o      CCHNGIND, change indicator

      o      CDEVTYPE, device type

      o      CNUMEXT, number of extents.

      These are variables that can be obtained from ISMF's dataset
      list display and that have a similar meaning when creating test
      cases. I think that the names of the variables have varied from
      one ISMF version to another - check your names!

3      The name of the member to be created is generated by
      TCASE. It has two parts: a fixed prefix, defined in TCASE,
      and a suffix, which is a number beginning at 1. The number is
      stored in the user's ISPF profile and during every run TCASE
      will increment this number by 1. If more than one user runs
      TCASE, similar-named members may be created and will
      replace each other. That's why I suggest that TCASE is run
      under only certain TSO user-ids.

4      I have filled DESCRIPTION1 and DESCRIPTION2 fields
      with information that is important to me. You don't need to do
      this. Description fields play no role during ACS routine
      testing.

5      DDNAME is fixed.

6      When TCASE encounters a VSAM dataset it sets a KS
      value into RECORG parameter indicating a KSDS dataset.

7      DSTYPE parameter gets a fixed value PERM.

8      If the dataset name contains a specific generation of a
      generation dataset, DSTYPE gets a value GDS.

9      Real temporary datasets are identified by their names.

10      Execution mode is fixed for BATCH.

11      Some user-ids may be used to simulate the TSO
      environment.

12      The ACS environment is fixed to ALLOC. Other
      environments are worth testing too, especially CONVERT.

13      The dataset size is calculated using CALLOCSP,
      CSECALLO, and CNUMEXT parameters.

14      If a RACF user-id and/or group has some special function
      in your SMS implementation, the code that determines its
      value could easily be added.

15      In this example the prefix for all member names is TST.

16      Parameters from PAR1 to PAR20 are put in the shared
      variable pool using the VPUT service.

17      The DSN variable contains the name of the ACS testing
      library - use your own!

18      The TCASEMAC EDIT macro is called.

19      The number of the member is incremented by 1 and stored
      in the profile pool using VPUT.

TCASEMAC simply gets variables from the shared variable pool
and creates a member from variables PAR1 to PAR20. If you like
you could modify TCASEMAC to form a loop.

HOW TO USE IT

Using ISMF, create a dataset list using dataset name masking and
other ISMF filtering options suitable for your purpose. Then enter
TCASE as a line command to those datasets whose dataset
information you want to use as testing material. Repeat this as
many times as necessary.

Using TCASE it is easy to create test material which is based on
real life - based on the information of your installation's
production datasets.

I suggest that you create a fixed set of test cases using a particular
prefix. This will be the basis of ACS routine testing now and in
the future. When you have to make major changes in your ACS
routines they are easily tested using that basic set.

TCASE REXX EXEC

/* REXX */
/* BUILDS TEST MATERIAL FOR SMS FROM ISMF DATASET DISPLAY          */
/* TRACE R */
MEMBER = 0
/* INITIALIZE VARIABLES                                            */
    PAR1 = " "
    PAR2 = " "
    PAR3 = " "
    PAR4 = " "
    PAR5 = " "
    PAR6 = " "
    PAR7 = " "
    PAR8 = " "
    PAR9 = " "
    PAR10 = " "
    PAR11 = " "
    PAR12 = " "
    PAR13 = " "
    PAR14 = " "
    PAR15 = " "
    PAR16 = " "
    PAR17 = " "
    PAR18 = " "
    PAR19 = " "
    PAR20 = " "
/* GET ISMF GENERATED VARIABLES FROM SHARED POOL                   */
    ADDRESS ISPEXEC "VGET (COBJ CDSORG CALLOCSP CSECALLO
                           CCREATD2 CLASTRE2 CCHNGIND
                           CDEVTYPE CNUMEXT) SHARED"
    IF RC ^= 0 THEN
      DO
      SAY "DID NOT GET ISMF VARIABLES FROM SHARED POOL, RC="RC
/*    EXIT    */
      END
/* GET THE NUMBER OF THE LATEST MEMBER                             */
/* THIS WILL FAIL DURING THE FIRST RUN, BECAUSE THERE IS NO        */
/* TESTCNRO VARIABLE IN PROFILE POOL, I HOPE                       */
    ADDRESS ISPEXEC "VGET (TESTCNRO)A PROFILE"
    IF RC ^= 0 THEN
      DO
      SAY "DID NOT GET MEMBER NUMBER FROM PROFILE POOL, RC="RC
      END
/* CREATION DATE AND LAST REFERENCED DATE WILL BE PUT IN THE      */
/* DESCRIPTION1 FIELD, NORMALLY THIS FIELD IS AVAILABLE FOR       */
/* USER COMMENTS                                                  */
    PARNO = 1
    HEADER = "DESCRIPTION1: "
    INTERPRET PAR||PARNO "= HEADER"
    PARNO = PARNO + 1
    HEADER = "CREATED: "CCREATD2" REFERENCED: "CLASTRE2
    INTERPRET PAR||PARNO "= HEADER"
/* DESCRIPTION2 FIELD WILL CONTAIN THE CHANGE INDICATOR            */
    PARNO = PARNO + 1
    HEADER = "DESCRIPTION2: "
    INTERPRET PAR||PARNO "= HEADER"
    PARNO = PARNO + 1
    HEADER = "CHANGED: "CCHNGIND
    INTERPRET PAR||PARNO "= HEADER"
/* DATASET NAME                                                    */
    PARNO = PARNO + 1
    HEADER = "DSN: "
    INTERPRET PAR||PARNO "= HEADER||COBJ"
/* DDNAME, THIS INFORMATION IS NOT AVAILABLE FROM ISMF             */
/* YOU MAY NEED THIS FIELD WHEN TESTING ACS ROUTINES               */
/* SMS MIGHT BE DEPENDING ON DDNAME IN SOME CASES                  */
    PARNO = PARNO + 1
    HEADER = "DD: "
    XDDNIMKI = "OUTPUT"
    INTERPRET PAR||PARNO "= HEADER||XDDNIMI"
/* VSAM DATASETS ARE PROCESSED                                     */
/* DSORG 'VS' IS AVAILABLE FROM ISMF                               */
/* IF COMPONENT IS INDEX, THEN RECORG IS SET TO 'KS'               */
/* OTHERWISE RECORG IS 'ES'                                        */
    PARNO = PARNO + 1
    HEADER = "DSORG: "
    INTERPRET PAR||PARNO "= HEADER||CDSORG"
    PARNO = PARNO + 1
    IF CDSROG = "VS" THEN
      DO
      PIT = LENGTH(COBJ)
      HEADER = "RECORG: "
      GEORG = "ES"
      IF SUBSTR(COBJ,PIT-4,5) = "INDEX" THEN
        DO
        GEORG = "KS"
        END
      INTERPRET PAR||PARNO "= HEADER||GEORG"
      PARNO = PARNO + 1
      END
/* MOST DATASET ARE 'PERM' BY DSTYPE                               */
    HEADER = "DSTYPE: "
    TYPERA = "PERM"
    PIT = LENGTH(COBJ)
/* GENERATION DATASETS ARE PICKED AND THEIR DSTYPE IS 'GDS'        */
    IF SUBSTR(COBJ,PIT-2,3) = "V00" THEN
      DO
      IF SUBSTR(COBJ,PIT-7,1) = "G" THEN
        DO
        TYPERA = "GDS"
        END
      END
/* TEMPORARY DATASETS ARE 'TEMP'                                   */
    IF SUBSTR(COBJ,1,3) = "SYS" THEN
      DO
      IF SUBSTR(COBJ,18,2) = "RA" THEN
        DO
        IF SUBSTR(COBJ,10,1) = "T" THEN
          DO
          TYPERA = "TEMP"
          END
        END
      END
    INTERPRET PAR||PARNO "= HEADER||TYPERA"
/* EXECUTION MODE IS BATCH                                         */
    PARNO = PARNO + 1
    HEADER = "XMODE: "
    XXMODE = "BATCH"
/* FOR CERTAIN USER DATASETS EXECUTION MODE COULD BE 'TSO'         */
    IF SUBSTR(XOBJ,1,7) = "USERID" THEN
      DO
      XXMODE = "TSO"
      END
    INTERPRET PAR||PARNO "= HEADER||XXMODE"
/* ACS ENVIRONMENT IS SET TO 'ALLOC'                               */
/* OTHERS SHOULD BE TESTED TOO                                     */
    PARNO = PARNO + 1
    HEADER = "ACSENVIR: "
    ALLOKKI = "ALLOC"
    INTERPRET PAR||PARNO "= HEADER||ALLOKKI"
/* DATASET SIZE IS CALCULATED BASED ON ISMF INFORMATION:           */
/* ACTUAL SIZE IS JUST ISMF CALLOCSP PARAMETER                     */
    PARNO = PARNO + 1
    HEADER = "SIZE: "
    APU = CALLOCSP
    APU = APU + 0
    INTERPRET PAR||PARNO "= HEADER||APU"
/* MAXSIZE:  OS DATASETS: PRIMARY SPACE +  15 * SECONDARY SPACE    */
/*         VSAM DATASETS: PRIMARY SPACE + 123 * SECONDARY SPACE    */
    PARNO = PARNO + 1
    HEADER = "MAXSIZE: "
    MAXEXT = 16
    YKSEXT = CALLOCSP
    IF CDSORG = "VS" THEN
      DO
      MAXEXT = 123
      END
    MAXEXT = MAXEXT - CNUMEXT
    MAXSIZE =  MAXEXT * CSECALLO + YKSEXT
    INTERPRET PAR||PARNO "= HEADER||MAXSIZE"
/* DSNTYPE IS DETERMINED FROM DSORG                                */
    PARNO = PARNO + 1
    IF CDSORG = "PO" THEN
      DO
      HEADER = "DSNTYPE: "
      TYYPPI = "PDS"
      INTERPRET PAR||PARNO "= HEADER||TYYPPI"
      PARNO = PARNO + 1
      END
/* RACF INFORMATION IS GENERATED                                   */
    HEADER = "GROUP: "
    RGROUP = "ANYGROUP"
    RUSER = "KILROY"
    IF SUBSTR(COBJ,1,7) = "USERID1" THEN
      DO
      RGROUP = "GROUP1"
      RUSER = "USERID2"
      END
    IF SUBSTR(COBJ,1,7) = "USERID2" THEN
      DO
      RGROUP = "GROUP1"
      RUSER = "USERID2"
      END
    INTERPRET PAR||PARNO "= HEADER||RGROUP"
    PARNO = PARNO + 1
    HEADER = "USER: "
    INTERPRET PAR||PARNO "= HEADER||RUSER"
/* ISMF INFORMATION CONTAINS UNIT TYPE                             */
    PARNO = PARNO + 1
    HEADER = "UNIT: "
    INTERPRET PAR||PARNO "= HEADER||CDEVTYPE"
/* DISPLAY PARAMETERS                                              */
    SAY PAR1
    SAY PAR2
    SAY PAR3
    SAY PAR4
    SAY PAR5
    SAY PAR6
    SAY PAR7
    SAY PAR8
    SAY PAR9
    SAY PAR10
    SAY PAR11
    SAY PAR12
    SAY PAR13
    SAY PAR14
    SAY PAR15
    SAY PAR16
    SAY PAR17
    SAY PAR18
    SAY PAR19
    SAY PAR20
/* GENERATE NAME OF NEXT MEMBER                                    */
    MEMBER = TESTCNRO
    MEMBER = MEMBER + 1
/* 'TST' IS COMMON SUFFIX FOR ALL THE MEMBERS THAT ARE GENERATED   */
/* BY THIS EXEC                                                    */
    LIBMEMB = "TST"MEMBER
    SAY "MEMBER TO BE EDITED IS "LIBMEMB
/* VPUT VARIABLES FOR EDIT MACRO                                   */
    ADDRESS ISPEXEC "VPUT (PAR1 PAR2 PAR3 PAR4 PAR5 PAR6 PAR7 PAR8
                           PAR9 PAR10 PAR11 PAR12 PAR13 PAR14 PAR15
                           PAR16 PAR17 PAR18 PAR19 PAR20) SHARED"
    IF RC ^= 0 THEN
      DO
      SAY "VPUT FAILED, RC="RC
      END
/* REPLACE YOUR.ACS.TESTLIB BY THE NAME OF YOUR REAL ACS TEST LIB  */
    DSN = "YOUR.ACS.TESTLIB("LIBMEMB")"
/* AND CALL EDIT MACRO                                             */
    ADDRESS ISPEXEC "EDIT DATSET('"DSN"') MACRO(TCASEMAC)"
  IF RC ^= 0 THEN
    DO
    SAY "EDIT FAILED, RC="RC
    END
                          /*  4 - DATA NOT SAVED                  */
                          /* 14 - MEMBER IN USE OR DATASET IN USE */
                          /* 16 - NO MEMBERS IN LIBRARY           */
                          /* 20 - SEVERE ERROR                    */
/* SAVE THE NUMBER OF THE NEXT MEMBER
    TESTCNRO = MEMBER
    ADDRESS ISPEXEC "VPUT (TESTCNRO) PROFILE"
    IF RC ^= 0 THEN
      DO
      SAY "FAILED TO STORE THE MEMBER NUMBER, RC="RC
      END
EXIT

TCASEMAC EDIT MACRO

/* REXX */
/* THIS MACRO CREATES THE MEMBERS INTO TEST LIBRARY             */
ADDRESS ISREDIT "MACRO"
/*    TRACE R   */
ADDRESS ISREDIT "NUMBER = OFF"
/* VGET VARIABLES                                               */
ADDRESS ISPEXEC "VGET (PAR1 PAR2 PAR3 PAR4 PAR5 PAR6 PAR7 PAR8 PAR9
                       PAR10 PAR11 PAR12 PAR13 PAR14 PAR15 PAR16
                       PAR17 PAR18) SHARED"
IF RC ^= 0 THEN
  DO
  SAY "VGET FOR VARIABLES FAILED, RC="RC
  ADDRESS ISREDIT "CANCEL"
  END
IF PAR1 ^= " " THEN
  DO
  DATA = """"PAR1""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR2 ^= " " THEN
  DO
  DATA = """"PAR2""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR3 ^= " " THEN
  DO
  DATA = """"PAR3""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR4 ^= " " THEN
  DO
  DATA = """"PAR4""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR5 ^= " " THEN
  DO
  DATA = """"PAR5""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR6 ^= " " THEN
  DO
  DATA = """"PAR6""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR7 ^= " " THEN
  DO
  DATA = """"PAR7""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR8 ^= " " THEN
  DO
  DATA = """"PAR8""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR9 ^= " " THEN
  DO
  DATA = """"PAR9""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR10 ^= " " THEN
  DO
  DATA = """"PAR10""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR11 ^= " " THEN
  DO
  DATA = """"PAR11""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR12 ^= " " THEN
  DO
  DATA = """"PAR12""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR13 ^= " " THEN
  DO
  DATA = """"PAR13""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR14 ^= " " THEN
  DO
  DATA = """"PAR14""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR15 ^= " " THEN
  DO
  DATA = """"PAR15""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR16 ^= " " THEN
  DO
  DATA = """"PAR16""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR17 ^= " " THEN
  DO
  DATA = """"PAR17""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
IF PAR18 ^= " " THEN
  DO
  DATA = """"PAR18""""
  ADDRESS ISREDIT "LINE_AFTER .ZLAST = "DATA
  END
ADDRESS ISREDIT "END"
EXIT


Space Manager (Finland)                                                              c Xephon 1994

