Issuing VM commands from TSO or CLISTs
The following programs will issue any CP commands from TSO or through the PARM
field of a CLIST.  This can be very helpful when designing end-user ISPF dialogs
with hidden VM commands and performing automatic system maintenance for VM from
TSO in batch.
To take full advantage of this facility the MVS machine must have more than
class G authorisation.  The response from the CP command is received into a
page-aligned 4K area.  Some commands will return more than 4K but since the
requirement is that the output area must be on consecutive page frames, only one
page frame is used.  There is, as far as I can see, no possibility of ensuring
that an area in MVS (either in-line in the program or GETMAINed) is placed on
consecutive page frames.
The following programs should run under any current release of MVS, VM, and TSO.
ISSUING CP COMMAND FROM TSO
&ID      SETC  'CP'
&IDLEN   SETA  K'&ID
&ID      INITR                          See issue 15 pp 20-24
         L     R2,0(R1)                 GET PARM ADDR
         LH    R3,0(R2)                 GET PARM LENGTH
         CH    R3,=AL2(5+&IDLEN)        GET OUT IF ZERO
         BNH   EXIT                     GET OUT IF ZERO
         SH    R3,=AL2(5+1+&IDLEN)      REDUCE FOR EXECUTE
         EX    R3,*+4                   MOVE COMMAND
         OC    COMMAND(0),7(R2)         MOVE COMMAND & TR TO UPCASE
         AUTHON                         REQUEST AUTH
         MODESET KEY=ZERO,MODE=SUP      GET KEY ZERO AND SUPV STATE
         STIDP CPUID                    GET CPUID
         CLI   CPUID,255                RUNNING UNDER VM
         BNE   RETURN                   IF NOT EXIT
         LA    R8,L'COMMAND             GET LENGTH OF COMMAND
         ICM   R8,8,FLAGRESP            INDICATE RESPONSE
         LH    R9,=H'4096'              GET LENGTH OF RESP BUF
         LRA   R7,RESPONSE              GET REAL ADDR OF RESPONSE
         LRA   R6,COMMAND               GET ADDR OF COMMAND
         DC    X'83680008'              DIAGNOSE
         MODESET KEY=NZERO,MODE=PROB    RETURN TO USER KEY AND STATE
         LH    R10,=H'4096'             GET LENGTH OF RESPONSE
         LA    R11,RESPONSE             GET ADDR OF RESPONSE
RESPLOOP EQU   *
         LTR   R10,R10                  NOTHING LEFT IN INPUT
         BZ    EXIT                     NO MORE SERVICE
         SR    R9,R9                    GET USED OUTPUT LENGTH
         LA    R7,WTOS                  GET ADDR OF OUTPUT
         LA    R8,L'WTOS                GET LENGTH OF OUTPUT
         MVI   WTOS,C' '                CLEAR WTO AREA
         MVC   WTOS+1(L'WTOS-1),WTOS    CLEAR WTO AREA
RESPMOVE EQU   *
         LTR   R10,R10                  NOTHING LEFT IN INPUT
         BZ    RESEND                   THEN EXIT
         CLI   0(R11),X'15'             TEST FOR DELIMITOR
         BE    RESEND                   THEN EXIT
         MVC   0(1,R7),0(R11)           MOVE TO OUTPUT
         LA    R7,1(R7)                 GO TO NEXT OUTPUT
         LA    R11,1(R11)               GO TO NEXT INPUT
         LA    R9,1(R9)                 ADD TO LENGTH
         BCTR  R10,0                    COUNT DOWN RESIDUAL INPUT
         C     R9,=A(L'WTOS)            USED OUTPUT UP
         BL    RESPMOVE                 RECYCLE
         CLC   WTOS,=CL256' '           NOTHING
         BE    RESPLOOP                 THEN DONT WRITE
         TPUT  WTOS,L'WTOS              SHOW RESPONSE
         B     RESPLOOP                 RECYCLE
RESEND   EQU   *
         LTR   R9,R9                    TEST FOR ZERO LENGTH
         BZ    BYPWRT                   DONT WRITE
         B     WTOS+L'WTOS              BRANCH AROUND
WTOS     DS    CL124                    WTO AREA
         CLC   WTOS,=CL256' '           NOTHING
         BE    BYPWRT                   THEN DONT WRITE
         TPUT  WTOS,L'WTOS              SHOW RESPONSE
BYPWRT   EQU   *
         LA    R11,1(R11)               GO TO NEXT INPUT
         LTR   R10,R10                  NOTHING LEFT IN INPUT
         BZ    EXIT                     NO MORE SERVICE
         BCTR  R10,0                    COUNT DOWN RESIDUAL INPUT
         B     RESPLOOP                 RECYCLE
RETURN   EQU   *
         MODESET KEY=NZERO,MODE=PROB    RETURN TO USER KEY AND STATE
         AUTHOFF                        REQUEST NO AUTH
         EXITR                          RETURN
EXIT     EQU   *
         AUTHOFF                        REQUEST NO AUTH
         EXITR                          See issue 15 pp 25-26
CPUID    DC    D'0'
COMMAND  DC    CL256' '
FLAGRESP DC    X'40'                    INDICATE RESPONSE
         LTORG
         DS    0D
RESPONSE DC    16CL256' ' SET LAST TO FORCE ON PAGE BOUNDARY
         END
The format of the command is:
CP cp-command
For example:
CP MON ENABLE PERF
ISSUING CP COMMAND FROM PARM FIELD
Likewise, a similar program for issuing CP-commands from JCL exists; it accepts
the CP command from the PARM field of an EXEC card:
CPCOM    INITR                          See issue 15 pp 20-24
         L     R2,0(R1)                 GET PARM ADDR
         LH    R3,0(R2)                 GET PARM LENGTH
         LTR   R3,R3                    GET OUT IF ZERO
         BZ    EXIT                     GET OUT IF ZERO
         BCTR  R3,0                     REDUCE FOR EXECUTE
         EX    R3,*+4                   MOVE COMMAND
         OC    COMMAND(0),2(R2)         MOVE COMMAND & TR TO UPCASE
         AUTHON                         REQUEST AUTH
         MODESET KEY=ZERO,MODE=SUP      GET KEY ZERO AND SUPV STATE
         STIDP CPUID                    GET CPUID
         CLI   CPUID,255                RUNNING UNDER VM
         BNE   RETURN                   IF NOT EXIT
         LA    R8,L'COMMAND             GET LENGTH OF COMMAND
         ICM   R8,8,FLAGRESP            INDICATE RESPONSE
         LH    R9,=H'4096'              GET LENGTH OF RESP BUF
         LRA   R7,RESPONSE              GET REAL ADDR OF RESPONSE
         LRA   R6,COMMAND               GET ADDR OF COMMAND
         DC    X'83680008'              DIAGNOSE
         MODESET KEY=NZERO,MODE=PROB    RETURN TO USER KEY AND STATE
         MVI   WTOT,C' '                CLEAR WTO AREA
         MVC   WTOT+1(L'WTOT-1),WTOT    CLEAR WTO AREA
         MVC   WTOT,COMMAND             SHOW COMMAND
         CNOP  0,4                      ALIGN
         BAL   R1,WTOT+L'WTOT           POINT TO OUTPUT
         DC    AL2(4+L'WTOT)            BUILD WTO PARM
         DC    AL2(0)                   BUILD WTO PARM
WTOT     DS    CL100                    WTO AREA
         SVC   35                       SHOW COMMAND
         LH    R10,=H'4096              GET LENGTH OF RESPONSE
         LA    R11,RESPONSE             GET ADDR OF RESPONSE
RESPLOOP EQU   *
         LTR   R10,R10                  NOTHING LEFT IN INPUT
         BZ    EXIT                     NO MORE SERVICE
         SR    R9,R9                    GET USED OUTPUT LENGTH
         LA    R7,WTOS                  GET ADDR OF OUTPUT
         LA    R8,L'WTOS                GET LENGTH OF OUTPUT
         MVI   WTOS,C' '                CLEAR WTO AREA
         MVC   WTOS+1(L'WTOS-1),WTOS    CLEAR WTO AREA
RESPMOVE EQU   *
         LTR   R10,R10                  NOTHING LEFT IN INPUT
         BZ    RESEND                   THEN EXIT
         CLI   0(R11),X'15'             TEST FOR DELIMITOR
         BE    RESEND                   THEN EXIT
         MVC   0(1,R7),0(R11)           MOVE TO OUTPUT
         LA    R7,1(R7)                 GO TO NEXT OUTPUT
         LA    R11,1(R11)               GO TO NEXT INPUT
         LA    R9,1(R9)                 ADD TO LENGTH
         BCTR  R10,0                    COUNT DOWN RESIDUAL INPUT
         C     R9,=A(L'WTOS)            USED OUTPUT UP
         BL    RESPMOVE                 RECYCLE
         LA    R1,WTOS-4                POINT TO OUTPUT
         CLC   WTOS,=CL256' '           NOTHING
         BE    RESPLOOP                 THEN DONT WRITE
         SVC   35                       SHOW RESPONSE
         B     RESPLOOP                 RECYCLE
RESEND   EQU   *
         LTR   R9,R9                    TEST FOR ZERO LENGTH
         BZ    BYPWRT                   DONT WRITE
         CNOP  0,4                      ALIGN
         BAL   R1,WTOS+L'WTOS           POINT TO OUTPUT
         DC    AL2(4+L'WTOS)            BUILD WTO PARM
         DC    AL2(0)                   BUILD WTO PARM
WTOS     DS    CL124                    WTO AREA
         CLC   WTOS,=CL256' '           NOTHING
         BE    BYPWRT                   THEN DONT WRITE
         SVC   35                       SHOW RESPONSE
BYPWRT   EQU   *
         LA    R11,1(R11)               GO TO NEXT INPUT
         LTR   R10,R10                  NOTHING LEFT IN INPUT
         BZ    EXIT                     NO MORE SERVICE
         BCTR  R10,0                    COUNT DOWN RESIDUAL INPUT
         B     RESPLOOP                 RECYCLE
RETURN   EQU   *
         MODESET KEY=NZERO,MODE=PROB    RETURN TO USER KEY AND STATE
         AUTHOFF                        REQUEST NO AUTH
         EXITR                          See issue 15 pp 25-26
EXIT     EQU   *
         SR    R0,R0                    REQUEST NO AUTH
         SVC   235                      REQUEST NO AUTH
         EXITR                          RETURN
CPUID    DC    D'0'
COMMAND  DC    CL100' '
FLAGRESP DC    X'40'                    INDICATE RESPONSE
         LTORG
         DS    0D
RESPONSE DC    16CL256' ' SET LAST TO FORCE ON PAGE BOUNDARY
         END


Nils Plum
Systems Programmer (Denmark)  © Nils Plum 1988









