SDSF user exit for use with ACF2
The Spool Display and Search Facility (SDSF) is an extremely useful product to
display spool files, but the options available to define who may access which
spool files are relatively simplistic.  This example of an SDSF user exit
provides an extension of the access definitions by testing an ACF2 rule if SDSF
would otherwise deny access.  This rule can then be used to define unusual or
complex access requirements, such as the sharing of output within a project
group and so on.  The ACF2 rule tested is a dataset name of SYSOUT.JOBNAME,
where JOBNAME is the job selected by the SDSF user.  RACF users may adapt this
exit to test a RACF profile instead.
         COPY  HASPGEN
         COPY  ISFEQU
***             A C F 2   VALIDATION FOR SDSF                       ***
*   THIS EXIT WILL ADD AN ACF2 VALIDATION CALL FOR A DATASET NAME     *
*   FOR ANY ACCESS SDSF DECIDES TO DENY NORMALLY.                     *
*   THE DATASET NAME USED FOR THE ACF2 VALIDATION CALL IS CONSTRUCTED *
*   AS SYSOUT.JOBNAME WHERE THE JOBNAME IS THE JOB SPOOL FILE         *
*   SELECTED BY THE USER. THIS ALLOWS ACCESS RULES FOR OUTPUT         *
*   TO BE CENTRALLY AND SIMPLY MAINTAINED IN THE USUAL ACF2 WAY.      *
*   FOR SELECT ACCESS (BROWSE) DATASET READ ACCESS IS TESTED, FOR     *
*   ALL OTHER ACCESS TYPE WRITES ACCESS IS TESTED. DO NOT CODE THE    *
*   RULES WITH ALLOC ACCESS OR USERS COULD CREATE DATASETS.           *
*   REFER TO THE SDSF MANUAL AND THE SAMPLE ISFUSER EXIT PROVIDED     *
*** BY IBM FOR MORE DETAILS ON THE USE OF THIS EXIT.                ***
ISFUSER  CSECT
         ISFSAVE
         XR    R12,R12
         LR    R12,R15             BASE REGISTER
         USING ISFUSER,R12
         LR    R11,R1              USER EXIT PARM
         USING USERPARM,R11
         LR    R10,R0              CALL TYPE
         B     CALLTYPE(R10)       GO TO PROPER CODE
CALLTYPE B     INITCK              INITIALISATION
         B     CMDCK               COMMAND CHECK
         B     DSPCK               DISPLAY SYSOUT CHECK
         B     EXIT                EXIT PROCESSING
INITCK   DS    0H                  INITIALISATION USER CHECK
CMDCK    DS    0H                  OPERATOR COMMAND CHECK
         B     RETURN
***                    DISPLAY SYSOUT CHECK SECTION                 ***
DSPCK    DS    0H                  DISPLAY SYSOUT CHECK
         NC    AUTHRETC,AUTHRETC      USER AUTHORISED?
         BZ    RETURN                 BRANCH IF YES
**   CODE ADDED TO ALLOW ACF2 DATASET RULE FOR QUALIFIER "SYSOUT"
         LR    R4,R13                   SAVE OLD SAVE AREA
         L     R0,SIZDATD               GET SOME STORAGE TO PLAY WITH
         GETMAIN R,LV=(0)               *
         LR    R8,R1                    *
         USING DATD,R8                  ADDRESS IT
         LR    R13,R8                   TEMP SAVE AREA
         MODESET EXTKEY=ZERO,SAVEKEY=(2)  GET KEY ZERO
**   CONSTRUCT A DATASET NAME OF "SYSOUT.JOBNAME" FOR THE JOB
         MVC   DATASET,BLANKS                 CLEAR DATASET NAME
         MVC   DATASET(7),SYSOUT              SET HIGH PART OF DSNAME
         MVC   DATASET+7(8),UJOBNAME          SET JOB TO BE LOOKED AT
**   PREPARE THE ACF2 PARAMETER LIST AREA
         XC    ACFSPARM(ACFSPRML),ACFSPARM    CLEAR ACF2 PARMLIST
         MVI   ACFSPREQ,ACFSPRDS              INDICATE DSNAME CALL
         MVI   ACFSPID1,ACFSPIUR              INDICATE USER CALL
**   SET VALIDATE TO READ OR WRITE ACCESS ACCORDING TO ACTION CODE
         CLI   UACTCHAR,C's'          IS ACTION SELECT
         BE    READ                   TRY READ ACCESS
         CLI   UACTCHAR,C'S'          IS ACTION SELECT
         BE    READ                   TRY READ ACCESS
         B     WRITE                  ELSE WRITE ACCESS
**   READ ACCESS OR WRITE ACCESS
READ     EQU   *
         MVI   ACFSPAC1,ACFSPAIN      READ ACCESS
         B     VALIDATE
WRITE    EQU   *
         MVI   ACFSPAC1,ACFSPAOU      WRITE ACCESS
         B     VALIDATE
VALIDATE EQU   *
         LA    R1,DATASET             GET ADDRESS OF DATASET NAME
         ST    R1,ACFSPDSN            PUT IN ACF2 PARMLIST
         ACFGACVT R7,NONE=NACF        GET ACF2 CVT ADDRESS
         USING ACCVT,R7               ADDRESS ACF2 CVT
         LA    R1,ACFSPARM            POINT TO ACF2 PARMLIST
         ACFSVC (1),TYPE=S,NONE=NACF,CVT=HAVE
         LR    R6,R15                 SAVE RETURN CODE
         MODESET KEYADDR=(2)          RESTORE KEY ONE
         L     R0,SIZDATD             FREE STORAGE AREA
         LR    R1,R8                  *
         FREEMAIN R,LV=(0),A=(1)      *
         LR    R13,R4                 OLD SAVE AREA
         LTR   R6,R6                  TEST RETURN CODE
         BNZ   FAIL                   ACCESS NOT ALLOWED
         B     RETURN                 ACCESS ALLOWED
NACF     EQU   *
         WTO   'ACF2 CVT NOT AVAILABLE TO SDSF EXIT'
         B     FAIL
         LTORG
DATA     DS    0F
SIZDATD  DC    AL1(0)
         DC    AL3(ENDDATD-DATD)
BLANKS   DC    CL44' '             BLANKS
SYSOUT   DC    C'SYSOUT.'          DATASET NAME HIGH QUALIFIER
***                    EXIT CLEAN UP SECTION                       ***
EXIT     DS    0H                  EXIT PROCESSING
RETURN   RETURN (14,12),T,RC=0     RETURN RETURN CODE 0
FAIL     RETURN (14,12),T,RC=4     RETURN RETURN CODE 4
         LTORG
***             USER EXIT COMMUNICATION AREA                       ***
USERPARM DSECT                     USER EXIT PARM
         ISFUPRM
DATD     DSECT
SAVEAREA DS    18F                 SAVE AREA
         ACDSV DSECT=NO            ACF2 PARAMETER LIST
DATASET  DS    CL44                DATASET NAME
BUFF     DS    44C
ENDDATD  EQU   *
         ACCVT                     ACF2 CVT MAP
         ACUCB                     ACF2 ACUCB MAP
         END


Peter Toogood
Systems Programmer (UK)  © Xephon 1988













