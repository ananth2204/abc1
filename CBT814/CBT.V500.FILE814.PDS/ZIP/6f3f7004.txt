Displaying DASD set-up information


INTRODUCTION

The following Assembler language code has been written to
produce two TSO command processors that can be used to
enquire on DASD set-up.  The command processors were
written in response to a request by our operations department
for an on-line facility to extract DASD unit addresses and
DASD volume serial numbers from a TSO session.  We found
that operations personnel were not updating DASD charts
regularly and when a request arose to mount a DASD volume
as 'private' they often could not relate the volume serial
number to a unit address or vice versa.

In response to this request I wrote the two programs that
follow.  BVOL is used to extract the related unit address for
the volume serial number that is entered as a parameter.
BUNIT does the opposite and returns a volume serial number
for the unit address that is entered as a parameter.

The commands could be modified to work as operator
commands to be issued through system consoles, or even
merged into one command processor.  The reason I wrote them
in this simplistic format was to ensure that they could be
maintained by non-Assembler programmers.

The programs have been used on MVS/XA 2.2.0 and MVS/XA
2.2.3 systems.  They function under TSO 1.4 and TSO 2.1.


BVOL PROGRAM SOURCE CODE

*        **************************************************************
*        * PROGRAM PURPOSE: TO LIST THE ASSOCIATED UNIT ADDRESS       *
*        *                  FOR A DIRECT ACCESS STORAGE DEVICE WHEN   *
*        *                  THE VOLUME SERIAL IS ENTERED AS PART OF   *
*        *                  THE COMMAND.                              *
*        * COMMAND FORMAT: THIS COMMAND CAN BE ENTERED FROM BASE TSO  *
*        *                 IN THE FOLLOWING FORMAT:-                  *
*        *                 BVOL volser                                *
*        *                 EG: FOR VOLUME SYS001 YOU WOULD ENTER:-    *
*        *                 BVOL SYS001                                *
*        * COMMAND OUTPUT: THE COMMAND WILL RETURN TO YOUR TSO SCREEN *
*        *                 THE FOLLOWING OUTPUT MESSAGE IF THE VOLUME *
*        *                 SERIAL EXISTS:-                            *
*        *                 UNIT ADDRESS IS:- UUU                      *
*        *                 WHERE 'UUU' IS THE DEVICE'S UNIT ADDRESS.  *
*        * ERROR MESSAGES: THE FOLLOWING ERROR MESSAGES CAN BE ISSUED *
*        *                 BY THE COMMAND.                            *
*        *                 WHEN AN INVALID UNIT ADDRESS IS ENTERED:-  *
*        *                 ERROR IN INPUT FIELD COMMAND CANCELLED.    *
*        *                 WHEN THE UNIT ADDRESS ENTERED DOES NOT     *
*        *                 EXIST ON THE SYSTEM:-                      *
*        *                 ERROR, VOLUME NOT FOUND IN SYSTEM.         *
*        **************************************************************
BVOL     CSECT
         SAVE      (14,12)             /* SAVE CALLERS REGISTERS.    */
         LR        R12,R15             /* LOAD ENTRY POINT ADDRESS.  */
         USING     BVOL,R12            /* BASE ON REGISTER 12.       */
         ST        R13,SAVEAREA+4      /* STORE SAVEAREA ADDRESS.    */
         LA        R15,SAVEAREA        /* LOAD NEW SAVEAREA ADDRESS. */
         ST        R15,8(R13)          /* STORE NEW SAVEAREA ADDR.   */
         LR        R13,R15             /* SETUP NEW SAVEAREA.        */
START    EQU       *
         L         R10,16              /* LOAD ADDRESS OF CVT.       */
         USING     CVT,R10             /* BASE ON REGISTER 10.       */
         L         R9,CVTUCBA          /* ADDRESS OF UCBS.           */
         USING     UCBT,R9             /* BASE ON REGISTER 9.        */
CHECK    EQU       *
         L         R2,0(0,R1)          /* LOAD PARAMETER ADDRESS.    */
         L         R3,0(0,R2)          /* LOAD LENGTH OF COMMAND.    */
         SH        R3,=H'04'           /* MINUS LENGTH HEADER WORD.  */
         SH        R3,2(0,R2)          /* SUBTRACT HDR WORD LENGTH.  */
         LTR       R3,R3               /* REGISTER 3 = ZERO?         */
         BZ        ERROR               /* YES, GO ISSUE MESSAGE.     */
         AH        R2,2(0,R2)          /* INCREMENT REGISTER 2.      */
         LA        R2,4(0,R2)          /* POINT TO COMMAND OPERANDS. */
         EX        R3,ORCHR            /* MAKE UPPER CASE.           */
CMD01    EQU       *
         CLI       0(R2),C' '          /* FIRST CHARACTER SPACE?     */
         BNE       CMD02               /* NO, EXAMINE COMMAND.       */
         LA        R2,1(0,R2)          /* POINT TO NEXT CHARACTER.   */
         BCT       R3,CMD01            /* LOOP IF NOT END OF LINE.   */
         B         ERROR               /* BRANCH TO ERROR IF END.    */
CMD02    EQU       *
         LA        R6,0(R2)            /* LOAD START ADDR OF UNIT.   */
CMD03    EQU      *
         MVC       INFLD(6),0(R6)      /* GET INPUT FIELD.           */
         CLC       INFLD,=C'      '    /* IS IT BLANK?               */
         BE        ERROR               /* YES, GO ISSUE MESSAGE.     */
LOOP1    EQU       *
         CLC       VOLSER(3),INFLD     /* IS VOLSER = INPUT?         */
         BE        WRITE1              /* YES, GO ISSUE TPUT.        */
         L         R8,NEXTUCB          /* NO, POINT TO NEXT UCB.     */
         LTR       R8,R8               /* VALID UCB?                 */
         BNP       NOTFOUND            /* NO, GO ISSUE ERROR.        */
         DROP      R9                  /* RELEASE R9.                */
         LR        R9,R8               /* RELOAD R9.                 */
         USING     UCBT,R9             /* RE-BASE IT.                */
         B         LOOP1               /* GO BACK AND CHECK NEXT.    */
WRITE1   EQU       *
         MVC       MSG1+26(6),UNITADD  /* MOVE UNIT TO OUTPUT.       */
         TPUT      MSG1,L'MSG1         /* WRITE TO SCREEN.           */
         B         EXIT                /* BRANCH TO EXIT.            */
NOTFOUND EQU       *
         TPUT      ERRMSG2,L'ERRMSG2   /* ISSUE ERROR MESSAGE.       */
         B         EXIT                /* BRANCH TO EXIT.            */
ERROR    EQU       *
         TPUT      ERRMSG1,L'ERRMSG1   /* ISSUE ERROR MESSAGE.       */
EXIT     EQU       *
         SR        R15,R15             /* ZERO RETURN CODE.          */
         L         R13,4(R13)          /* RELOAD CALLERS SAVEAREA.   */
         RETURN    (14,12),RC=(15)     /* RETURN TO CALLER.          */
ORCHR    OC        0(0,R2),SPCS        /* OUT OF LINE INSTRUCTION.   */
SAVEAREA DS        18F
SPCS     DC        CL80' '
INFLD    DC        CL3' '
MSG1     DC        C'UNIT ADDRESS IS:-       '
ERRMSG1  DC        C'ERROR IN INPUT FIELD COMMAND CANCELLED'
ERRMSG2  DC        C'ERROR, VOLUME NOT FOUND IN SYSTEM'
         LTORG
         CVT       DSECT=YES
UCBT     DSECT
UCBAFIL  DS        CL7' '
NEXTUCB  DS        F
UCBBFIL  DS        CL1' '
UNITADD  DS        CL3
UCBCFIL  DS        CL12' '
VOLSER   DS        CL6' '
         END


BUNIT

*        **************************************************************
*        * PROGRAM PURPOSE: TO LIST THE ASSOCIATED VOLUME SERIAL      *
*        *                  FOR A DIRECT ACCESS STORAGE DEVICE WHEN   *
*        *                  THE UNIT ADDRESS IS ENTERED AS PART OF    *
*        *                  THE COMMAND.                              *
*        * COMMAND FORMAT: THIS COMMAND CAN BE ENTERED FROM BASE TSO  *
*        *                 IN THE FOLLOWING FORMAT:-                  *
*        *                 BUNIT unitaddress                          *
*        *                 EG: FOR UNIT ADDRESS A23 YOU WOULD ENTER:- *
*        *                 BUNIT A23                                  *
*        * COMMAND OUTPUT: THE COMMAND WILL RETURN TO YOUR TSO SCREEN *
*        *                 THE FOLLOWING OUTPUT MESSAGE IF THE UNIT   *
*        *                 ADDRESS EXISTS:-                           *
*        *                 VOLUME SERIAL NUMBER IS:- VVVVVV           *
*        *                 WHERE 'VVVVVV' IS THE DEVICE'S             *
*        *                 VOLUME SERIAL NUMBER.                      *
*        * ERROR MESSAGES: THE FOLLOWING ERROR MESSAGES CAN BE ISSUED *
*        *                 BY THE COMMAND.                            *
*        *                 WHEN AN INVALID UNIT ADDRESS IS ENTERED:-  *
*        *                 ERROR IN INPUT FIELD, COMMAND CANCELLED.   *
*        *                 WHEN THE UNIT ADDRESS ENTERED DOES NOT     *
*        *                 EXIST ON THE SYSTEM:-                      *
*        *                 ERROR, UNIT NOT FOUND ON SYSTEM.           *
*        **************************************************************
BUNIT    CSECT
         SAVE      (14,12)             /* SAVE CALLERS REGISTERS.    */
         LR        R12,R15             /* LOAD ENTRY POINT ADDRESS.  */
         USING     BUNIT,R12           /* BASE ON REGISTER 12.       */
         ST        R13,SAVEAREA+4      /* STORE SAVEAREA ADDRESS.    */
         LA        R15,SAVEAREA        /* LOAD NEW SAVEAREA ADDRESS. */
         ST        R15,8(R13)          /* STORE NEW SAVEAREA ADDR.   */
         LR        R13,R15             /* SETUP NEW SAVEAREA.        */
START    EQU       *
         L         R10,16              /* LOAD ADDRESS OF CVT.       */
         USING     CVT,R10             /* BASE ON REGISTER 10.       */
         L         R9,CVTUCBA          /* ADDRESS OF UCBS .          */
         USING     UCBT,R9             /* BASE ON REGISTER 9.        */
CHECK    EQU       *
         L         R2,0(0,R1)          /* LOAD PARAMETER ADDRESS.    */
         L         R3,0(0,R2)          /* LOAD LENGTH OF COMMAND.    */
         SH        R3,=H'04'           /* MINUS LENGTH HEADER WORD.  */
         SH        R3,2(0,R2)          /* SUBTRACT HDR WORD LENGTH.  */
         LTR       R3,R3               /* REGISTER 3 = ZERO?         */
         BZ        ERROR               /* YES, GO ISSUE MESSAGE.     */
         AH        R2,2(0,R2)          /* INCREMENT REGISTER 2.      */
         LA        R2,4(0,R2)          /* POINT TO COMMAND OPERANDS. */
         EX        R3,ORCHR            /* MAKE UPPER CASE.           */
CMD01    EQU       *
         CLI       0(R2),C' '          /* FIRST CHARACTER SPACE?     */
         BNE       CMD02               /* NO, EXAMINE COMMAND.       */
         LA        R2,1(0,R2)          /* POINT TO NEXT CHARACTER.   */
         BCT       R3,CMD01            /* LOOP IF NOT END OF LINE.   */
         B         ERROR               /* BRANCH TO ERROR IF END.    */
CMD02    EQU       *
         LA        R6,0(R2)            /* LOAD START ADDR OF UNIT.   */
CMD03    EQU       *
         MVC       INFLD(3),0(R6)      /* GET INPUT FIELD.           */
         CLC       INFLD,=C'   '       /* IS IT BLANK?               */
         BE        ERROR               /* YES, GO ISSUE MESSAGE.     */
LOOP1    EQU       *
         CLC       UNITADD(3),INFLD    /* IS ADDRESS = INPUT?        */
         BE        WRITE1              /* YES, GO ISSUE TPUT.        */
         L         R8,NEXTUCB          /* NO, POINT TO NEXT UCB.     */
         LTR       R8,R8               /* VALID UCB?                 */
         BNP       NOTFOUND            /* NO, GO ISSUE ERROR.        */
         DROP      R9                  /* RELEASE R9.                */
         LR        R9,R8               /* RELOAD R9.                 */
         USING     UCBT,R9             /* RE-BASE IT.                */
         B         LOOP1               /* GO BACK AND CHECK NEXT.    */
WRITE1   EQU       *
         MVC       MSG1+26(6),VOLSER   /* MOVE VOLSER TO OUTPUT.     */
         TPUT      MSG1,L'MSG1         /* WRITE TO SCREEN.           */
         B         EXIT                /* BRANCH TO EXIT.            */
NOTFOUND EQU       *
         TPUT      ERRMSG2,L'ERRMSG2   /* ISSUE ERROR MESSAGE.       */
         B         EXIT                /* BRANCH TO EXIT.            */
ERROR    EQU       *
         TPUT      ERRMSG1,L'ERRMSG1   /* ISSUE ERROR MESSAGE.       */
EXIT     EQU       *
         SR        R15,R15             /* ZERO RETURN CODE.          */
         L         R13,4(R13)          /* RELOAD CALLERS SAVEAREA.   */
         RETURN    (14,12),RC=(15)     /* RETURN TO CALLER.          */
ORCHR    OC        0(0,R2),SPCS        /* OUT OF LINE INSTRUCTION.   */
SAVEAREA DS        18F
SPCS     DC        CL80' '
INFLD    DC        CL3' '
MSG1     DC        C'VOLUME SERIAL NUMBER IS:-       '
ERRMSG1  DC        C'ERROR IN INPUT FIELD COMMAND CANCELLED'
ERRMSG2  DC        C'ERROR, UNIT NOT FOUND IN SYSTEM'
         LTORG
         CVT       DSECT=YES
UCBT     DSECT
UCBAFIL  DS        CL7' '
NEXTUCB  DS        F
UCBBFIL  DS        CL1' '
UNITADD  DS        CL3
UCBCFIL  DS        CL12' '
VOLSER   DS        CL6' '
         END


John Bradley
Technical Support Engineer (UK)                         c Xephon 1991

