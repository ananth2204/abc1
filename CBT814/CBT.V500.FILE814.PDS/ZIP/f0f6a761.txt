Program exception handling under SPF

SPF is a very useful product for the quick preparation of man-to-computer
dialogue systems.  The standard test facility, SPF 7, is usually adequate for
problem solving.  This does not apply in the case of program exceptions that
normally result in a rapid and unexplained exit from SPF.

The following program can be used in the SPF environment to intercept the
program exception.  This main program sets the ESTAE exit and loads the program
to be tested, which is passed  a parameter.  The ESTAE routine in the main
program processes the ABEND (user or system) and displays the appropriate
debugging messages on the terminal.

The following messages are displayed:

program  entry-pointaddr
errorcode erroraddress displacement
reg00  reg01  reg02  reg03
reg04 ...
errorcode: U-nnnn        User-ABEND
                         (nnnn User-ABEND Code, decimal)
           S-xxx         System-ABEND
                         (xxx System-ABEND Code, hexadecimal)
regnn:     register contents (nn = 00,...,15) in hexadecimal.


THE PROGRAM

***********************************************************************
* PROGRAM-NAME:        QTSPF00                                        *
* FUNCTION    :        ESTAE-EXIT IN TSO                              *
* PARAMETER   :        N...NP...                                      *
*                      N...N NAME OF PROGRAM TO  BE LOADED AND CALLED *
*                            (8 CHARACTERS)                           *
*                      P...  PARAMETERS TO BE PASSED TO CALLED PGM    *
* DESCRIPTION :        THIS PROGRAM SETS THE ESTAE-EXIT.              *
*                      THE SPECIFIED PROGRAM (EXEC-PARAMETER 1-8) IS  *
*                      LOADED, THE PARAMETER (EXEC-PARAMETER 9- (IF   *
*                      SPECIFIED)), IS PASSED TO THE CALLED PROGRAM.  *
*                      IF THE CALLED PROGRAM CAUSES AN ABEND, THEN    *
*                      THE CONTROL IS PASSED TO THE ESTAE-EXIT (IN    *
*                      THIS PROGRAM).                                 *
*                      THIS PROGRAM DETERMINES THE ADDRESS AND THE    *
*                      DISPLACEMENT, WHICH ARE DISPLAYED VIA TPUT.    *
*                      THE FOLLOWING MESSAGES ARE DISPLAYED:          *
*                      LINE 1: <PGMNAME> <EP-ADDR>                    *
*                      LINE 2: <ERRCODE> <ADDR> <DISPL>               *
*                              <ERRCODE> - ABENDCODE                  *
*                                           U-NNNN  USER-ABEND        *
*                                                   (NNNN DECIMAL)    *
*                                           S-XXX   SYSTEM-ABEND      *
*                                                   (XXX HEXADECIMAL) *
*                              <ADDR> - ABEND-ADDRESS                 *
*                              <DISPL> - ABEND-DISPLACEMENT FROM      *
*                                        START (<EP-ADDR>) OF         *
*                                        CURRENT PROGRAM (<PGMNAME>)  *
*                      LINE 3-: <R00> ... <R03>, <R04> ... ETC        *
***********************************************************************
QTSPF00  CSECT
         ...   set up base-register (R12) and chain save-areas
         L     R2,0(R1)            A(EXEC-PARM)
         LH    R1,0(R2)            L(EXEC-PARM)
         BCTR  R1,0                LC(EXEC-PARM)
         MVC   PARM(0),2(R2)
         EX    R1,*-6              STORE EXEC-PARM
         MVC   PGMNAME,PARMPGM     PGM-NAME
         LH    R1,0(R2)            L(EXEC-PARM)
         SH    R1,=H'8'            L(EXEC-PARM,NEW)
         BP    *+6                 L>0
         SR    R1,R1               L=0
         STH   R1,PARMLEN          L(EXEC-PARM,NEW)
         LOAD  EPLOC=PGMNAME       LOAD PGM
* R0:A(PGM ENTRY-POINT)
         ST    R0,EPADDR           EP-ADDR
* SET ESTAE-EXIT
         ESTAE A100
         L     R15,EPADDR          EP-ADDR
         LA    R1,APARMNEW         A(PTR-PARAMETER,NEW)
         BALR  R14,R15             CALL PGM
         ...                       return
A100     DS    0H
* ABEND ESTAE-EXIT
* SET BASE-REGISTER
         BALR  R11,0
         USING *,R11
* R11: BASE-REGISTER
* R1: A(SDWA)
         LR    R4,R1
         USING SDWA,R4
         ST    R1,EPADDR           EP-ADDR
         BAL   R14,CVTHEX          CONVERT R1 TO HEX
* R15: A(RESULT)
         MVC   PEPADDR,2(R15)
         TPUT  PMSG1,L'PMSG1       1. LINE
         SR    R2,R2
         SR    R3,R3
         ICM   R2,B'0111',SDWACMPC   COMPLETION-CODE
* R2: 00SSSUUU
*        SSS = SYSTEM COMPLETION-CODE
*        UUU = USER COMPLETION-CODE
         SRDL  R2,R12
* R2: 00000SSS
* R3: UUU00000
         SRL   R3,20
* R3: 00000UUU
* SYSTEM-ABEND?
         LTR   R2,R2
         BZ    A110                USER-ABEND
* SYSTEM-ABEND
* R2: 00000SSS SSS = SYSTEM COMPLETION-CODE
         LR    R1,R2
* R1: 00000SSS SSS = SYSTEM COMPLETION-CODE
         N     R1,=X'00000FF0'     CLEAR LOW-ORDER
         C     R1,=X'000000C0'     0CX-ABEND?
         BNE   A130                NO
* DETERMINE DISPLACEMENT
         SR    R1,R1               CLEAR R1
         ICM   R1,B'0111',SDWANXTA   ADDR OF NEXT INSTR.
         BAL   R14,CVTHEX          CONVERT R1 TO HEX
* R15: A(RESULT)
         MVC   PADDR(6),2(R15)
         S     R1,EPADDR           - EP-ADDR
* R1: PSEUDO-DISPLACEMENT
         MVI   PDISPL,C'+'         DEFAULT (+VE)
* -VE?
         LTR   R1,R1
         BNM   *+8
         MVI   PDISPL,C'-'         SET -VE
         LPR   R1,R1               SET R1 +VE
* R1: DISPLACEMENT
         BAL   R14,CVTHEX          CONVERT R1 TO HEX
* R15: A(RESULT)
         MVC   PDISPL+1(6),2(R15)
* SYSTEM-ABEND
A130     MVC   PCODE(6),=CL6'S-'
         STH   R2,WK1              <WK1>-0SSS
         UNPK  WK2(4),WK1(3)       <WK2>=FSFSFSXX
         TR    WK2(3),TR1-X'F0'    <WK2>=.S.S.S (CHAR. EQUIVALENT)
         MVC   PCODE+2(3),WK2
         B     A120
* USER-ABEND
A110     MVC   PCODE(6),=CL6'U-'
         CVD   R3,D
         UNPK  PCODE+2(4),D
         OC    PCODE+2(4),=4C'0'
A120     TPUT  PMSG2,L'PMSG2       2. LINE
* REGISTERS
         ZAP   RNO,P'-1'           INITIALISE
         LA    R2,SDWAGRSV         A(1. GP REGISTER)
         LA    R3,4                NO. OF LINES (4 REGS/LINE)
A160     LA    R5,4                4 ENTRIES/LINES
         LA    R4,PMSG3            A(TARGET-FLD)
         USING PRDSECT,R4
A150     AP    RNO,=P'1'           <RNO>=<RNO>+1
         L     R1,0(R2)            REGISTER CONTENTS
         LA    R2,4(R2)            A(NEXT ENTRY)
         BAL   R14,CVTHEX          CONVERT R1 TO HEX
* R15: A(RESULT)
         MVI   PRNO,C'R'           PREFIX
         UNPK  PRNO+1(2),RNO       REG.NO.
         OC    PRNO+1(2),=2C'0'
         MVC   PREG,0(R15)         FORMATTED CONTENTS
         LA    R4,PRLEN(R4)        A(NEXT ENTRY)
         BCT   R5,A150             LOOP
* END OF LINE
         TPUT  PMSG3,L'PMSG3       3.,... LINE
         BCT   R3,A160             NEXT LINE
         ESTAE 0                   RESET
         ABEND 0                   END
         DC    A(0)
CVTHEX   ST    R14,CVTHEX-4
* CONVERT CONTENTS OF R1 TO HEXADECIMAL (DISPLAY FORMAT)
* R1: INPUT
* R15: OUTPUT - A(HEX-STRING, 8 BYTES)
         ST    R1,WK1              <WK1>=DDDDDDDD
         UNPK  WK2(9),WK1(5)       <WK2>=FSFSFSFSFSFSFSFSXX
         TR    WK2(8),TR1-X'F0'    <WK2>=.S.S.S.S.S.S.S.S
         LA    R15,WK2             A(OUTPUT)
         L     R14,CVTHEX-4        RETURN-ADDR
         BR    R14                 RETURN
* TRANSLATION-TABLE
         DS    CL240               FILLER, REQD FOR RELATIVE ADDRESSING
TR1      DC    C'0123456789ABCDEF'
* WORK-AREAS
WK1      DS    XL5
WK2      DS    XL9
D        DS    PL8
RNO      DS    P'16'               REG.NO.
EPADDR   DS    A                   ENTRY-POINT ADDR
* MESSAGE-AREAS
* LINE-1
PMSG1    DS    CL60' '
         ORG   PMSG1
         DC    C'PGM: '
PGMNAME  DS    CL8                 PGM-NAME
         DC    C'  EP-ADDR:'
PEPADDR  DS    CL6                 ENTRY-POINT
         ORG
* LINE-2
PMSG2    DC    CL60' '
         ORG   PMSG2
         DC    C'ABEND-CODE: '
PCODE    DS    CL6                 ABEND-CODE
         DC    C' ADDR: '
PADDR    DS    CL6                 ABEND ABSOLUTE ADDR
         DC    C' DISPL: '
PDISPL   DS    CL7                 ABEND RELATIVE ADDR
         ORG
* LINE-3,...,6
PMSG3    DC    CL60' '
* PARAMETER AREA
APARMNEW DC    A(PARMNEW)          POINTER TO PARAMETER-AREA
PARM     DC    CL256' '
         ORG   PARM
PARMPGM  DS    CL8                 PARM-PGMNAME
         ORG   *-2
PARMNEW  DS    0C                  PARM-PGMNAME
PARMLEN  DS    HL2                 PARM-LENGTH (NEW)
         DS    0C                  PARM-DATA (NEW)
         ORG
PRDSECT  DSECT
PRNO     DS    C'RNN',C' '         REGISTER NO.
PREG     DS    CL8                 REGISTER CONTENT
         DS    CL2                 FILLER
PRLEN    EQU   *-PRNO              ENTRY-LENGTH
* SYSTEM DIAGNOSTIC WORK-AREA DSECT
SDWA     DSECT
         IHASDWA
         END


Anthony Rudd
Technical Specialist (West Germany)     © Xephon 1987































