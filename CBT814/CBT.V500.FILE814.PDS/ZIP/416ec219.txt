Adding datasets to an existing allocation

This program will add extra datasets to a DDNAME or will
create the DDNAME from the extra datasets alone.  Additional
datasets can be added both before and after the datasets that
make up the existing DDNAME.  Pre-allocate the extra
datasets on DDNAMEs before or after as appropriate.

The program cannot re-allocate a DDNAME that is already
open.  For example the ISPF panels library, ISPPLIB, cannot
be re-allocated when the user is already in ISPF.
The program can be invoked either via the TSO 'call'
command or directly as a TSO command.  The DDNAME to
be altered is entered either as the call parameter (eg CALL
(XALLOC) 'SYSLIB') or as the only operand of the TSO
command (eg XALLOC SYSLIB).  The DDNAME is re-
allocated with DISP=SHR whatever the original DISP.

The caller should check that the datasets are suitable for
concatenation before running the program because no check is
made in the code.  However, the program does ensure that
there are no problems with block size variations in the
concatenation.  The block size of the first dataset is set to the
maximum of all the datasets.

There is an arbitrary limit of around 40 (via the equate
DSNLIM) on the number of datasets allowed in the final
concatenation.  The limit is approximate because the 'after'
DDNAME only counts as one dataset even if it actually
represents more than one.

This program has run unchanged on MVS/SP, MVS/XA, and
MVS/ESA systems.

XALLOC   CSECT ,
         SAVE  (14,12),,XALLOC-&SYSDATE-&SYSTIME   SAVE REGS/SET ID
         LR    R12,R15               BASE REG FOR CSECT
         USING XALLOC,R12
         CNOP  0,4                   ALIGN TO FULLWORD
         LA    R15,*+8               SET SA ADDRESS AND CLEAR HI-ORDER
         B     *+76                  SKIP SAVE AREA
         DC    18A(0)                SAVE AREA
         ST    R13,4(R15)            => CALLING PROGS SAVEAREA
         ST    R15,8(R13)            => MY SAVEAREA
         LR    R13,R15               BY CONVENTION
*              PROCESS THE INPUT (DDNAME) PARM
         LR    R2,R1               SAVE PARM POINTER
         LA    R10,EMSG1           SET PROGRAM ERR MSG POINTER
         TM    0(R2),X'80'         ONE AND ONLY PARM ?
         BO    CALLPARM            BIF SO..MUST BE A CALL PARM
*                                  OTHERWISE ITS A CPPL PARM
         L     R2,0(,R2)           => CBUF
         LH    R3,0(,R2)           TOTAL CBUF LEN
         LH    R4,2(,R2)           OFFSET TO 1ST OPERAND
         LA    R5,4(R4,R2)         => CMD OPERAND (IF ANY)
         LA    R4,4(,R4)           INCREASE OFFSET FOR NEXT LINE
         SR    R3,R4               IF ZERO..THERES NO PARM...
         BZ    NOPARM              BIF NO PARM ENTERED
         LR    R2,R5               => PARM
         B     GOTPARM             AND CARRY ON
CALLPARM DS    0H
         L     R2,0(,R2)           => ACTUAL PARM
         LH    R3,0(,R2)           PARM LEN
         LTR   R3,R3               IS IT ZERO ?
         BZ    NOPARM              BIF SO
         LA    R2,2(,R2)           => ACTUAL PARM
         B     GOTPARM             AND CARRY ON
NOPARM   DS    0H
         TPUT  =CL12'ENTER DDNAME',12
         TGET  PARMDD,8
         LR    R3,R1               SAVE NO OF CHARS INPUT
         CH    R15,=H'12'          TGET RC=12: DDNAME > 8 CHARS ?
         BE    ERR11               BIF SO...BYEEE
         CLC   PARMDD,BLANKS       NOTHING ENTERED ?
         BE    ERR10               BIF SO...GIVE UP
         B     PARMOK              LEAVE PARM ALONE
MVCPARM  MVC   PARMDD(*-*),0(R2)   << EXECUTED >>
GOTPARM  DS    0H
         CH    R3,=H'8'            PARM LEN > 8 ?
         BH    ERR11
         BCTR  R3,0                DSNAME LEN - 1 FOR EXECUTE
         EX    R3,MVCPARM          COPY DSN PARM
PARMOK   DS    0H
         OC    PARMDD,BLANKS       CONVERT TO UPPER CASE
*              VALIDATION FOR THE DDNAME PARM...CHECK DDNAME BYTES
         LA    R2,ALPHANAT         => CHARS VALID FOR 1ST DDNAME BYTE
         LA    R3,L'ALPHANAT       NO OF VALID CHARS IN STRING
         LA    R4,8                CHARS IN DDNAME
         LA    R5,PARMDD           => DDNAME PARM
VALOOP   DS    0H
         CLC   0(1,R2),0(R5)       VALID CHAR IN THIS POSITION ?
         BE    VALOOPX1            BIF SO..OK SO FAR
         LA    R2,1(,R2)           => NEXT VALID CHAR
         BCT   R3,VALOOP           CHECK AGAINST ALL INVALID DDNAMES
         B     ERR11               INVALID CHAR IN DDNAME
VALOOPX1 DS    0H
         LA    R2,ALPHANAT         => CHARS VALID FOR ANY DDNAME BYTE
         LA    R3,L'ALPHANAT+11    # CHARS IN STRING (INC NUMS/BLANK)
         LA    R5,1(,R5)           => NEXT DDNAME CHAR
         BCT   R4,VALOOP           CHECK AGAINST ALL INVALID DDNAMES
*              CHECK THE DDNAME PARM AGAINST THE FORBIDDEN DDNAME LIST
         LA    R2,BADDD            => DDNAMES INVALID FOR SVC99
         LA    R3,BADDDNO          NO OF ENTRIES IN BAD DD TABLE
BADLOOP  DS    0H
         CLC   PARMDD,0(R2)        PARM DD NOT ALLOWED BY SVC99 ?
         BE    ERR12               BIF SO..BYE BYE
         LA    R2,8(,R2)           => NEXT BAD DD ENTRY
         BCT   R3,BADLOOP          CHECK AGAINST ALL INVALID DDNAMES
         MVC   CO99DD+2(8),PARMDD  STORE DDNAME IN SVC99 PARM LIST
*              SCAN THE TIOT FOR THE 3 KEY DDNAMES
SCANDD   DS    0H
         SLR   R5,R5                   ZERO DSN COUNT FIELD
         L     R3,540                  => CURRENT TCB
         L     R3,12(,R3)              => TIOT
         LA    R3,24(,R3)              SKIP OVER TIOT PREFIX
         SLR   R2,R2                   INIT OFFSET TO NEXT DD ENTRY
TLOOP    DS    0H                      LOOP AROUND TIOT DD ENTRIES
         CLI   0(R3),X'00'             ENTRY LENGTH ZERO ?
         BE    ETLOOP                  BIF SO..END OF TIOT
         IC    R2,0(R3)                STORE ENTRY LEN
         TM    1(R3),X'80'             THIS ENTRY IN USE ?
         BO    NEXTDD                  BIF NOT
         CLI   4(R3),X'40'             BLANK DDNAME ? (=SAME AS LAST)
         BE    TESTBEF                 BIF SO..PART OF CONCATENATION
         MVC   THISDD,4(R3)            SAVE CURRENT (NON-BLANK) DDNAME
TESTBEF  DS    0H
         CLC   FRONTDD,THISDD          DDNAME TO GO IN FRONT ?
         BNE   TESTAFT                 BIF NOT..TRY NEXT OPTION
         OI    DDFLAG,ISBEFORE         'BEFORE' DDNAME PRESENT
         LA    R5,1(,R5)               INCREMENT REQUIRED DS COUNT
         CLC   FRONTDD,4(R3)           THIS DATASET TO GO AT FRONT ?
         BNE   DDINFO                  BIF NOT
         TM    FLAG,PARM1ST            PARM DD BEFORE FRONTDD ?
         BZ    DDINFO                  BIF NOT...EASY OPTION
         LA    R6,CO99DD+10            => ENTRY 2 IN CONCAT DD LIST
         B     DDINFO                  GET DS INFO AND NEXT DD ENTRY
TESTAFT  DS    0H
         CLC   BACKDD,THISDD           DDNAME TO GO AT END ?
         BNE   TESTPARM                BIF NOT..TRY PARM DDNAME
         OI    DDFLAG,ISAFTER          'AFTER' DDNAME PRESENT
         B     DDINFO                  GET DS INFO AND NEXT DD ENTRY
TESTPARM DS    0H
         CLC   PARMDD,THISDD           PARM ENTERED DDNAME ?
         BNE   NEXTDD                  BIF NOT..TRY NEXT DD ENTRY
         OI    DDFLAG,ISPARM           PARM ENTERED DDNAME PRESENT
         LA    R5,1(,R5)               INCREMENT REQUIRED DS COUNT
*              GET THE DSNAME AND VOLSER FOR THIS TIOT ENTRY
DDINFO   DS    0H
         TM    3(R3),X'A2'             TERM=TS/SYSIN/SYSOUT DATASET ?
         BNZ   ERR6                    BIF SO...NO GO
         ICM   R4,B'0111',12(R3)       => JFCB
         MVC   DSNAME,16(R4)           SAVE DSNAME FOR OBTAIN
         MVC   VOLSER,134(R4)          DITTO VOLSER
         TM    FLAG,SECOND             SECOND TIME AROUND ?
         BO    DYNAMDS                 BIF SO..DYNALC THIS DS
         CLC   FRONTDD,4(R3)           DDNAME TO GO IN FRONT ?
         BNE   NOTBEF                  BIF NOT
         MVC   DSN1,DSNAME             SAVE DSN OF FIRST DS
         MVC   VOL1,VOLSER             DITTO VOLSER
         TM    DDFLAG,ISPARM           ALREADY FOUND THE PARM DD ?
         BZ    NOTBEF                  BIF NOT...MAKES THINGS EASY
*              PARM DD FIRST...NEED TO COUNT UP FRONTDD DATASETS
         OI    FLAG,PARM1ST            SHOW PARM DDNAME BEFORE FRONTDD
         LA    R1,1                    INIT DSN COUNT FOR THIS DD
         SLR   R15,R15                 ZERO WORK REG
         LR    R7,R3                   COPY TIOT ENTRY PTR
BEFLOOP  DS    0H
         IC    R15,0(R7)               LEN OF THIS TIOT ENTRY
         AR    R7,R15                  => NEXT TIOT ENTRY
         CLI   0(R7),X'00'             LAST TIOT ENTRY ?
         BE    BEFLEND                 BIF SO..THAT ALL HERE
         TM    1(R7),X'80'             ENTRY IN USE ?
         BO    BEFLOOP                 BIF NOT...LOOP BACK
         CLC   BLANKS,4(R7)            BLANK DD (SAME DDNAME) ?
         BNE   BEFLEND                 BIF NOT...THATS ALL HERE
         ICM   R8,B'0111',12(R7)       => JFCB
         CLC   DSN1,16(R8)             DSN SAME AS 1ST IN LIST ?
         BE    BEFLOOP                 BIF SO...DONT COUNT THIS DS
         LA    R1,1(,R1)               ADD TO BEFORE DS COUNT
         B     BEFLOOP                 AND LOOP BACK FOR MORE
BEFLEND  DS    0H
         STH   R1,BEFCNT               COUNT OF DSETS IN FRONTDD
NOTBEF   DS    0H
         CLI   DSN1,C' '               DSN1 ALREADY SET ?
         BNE   OBTAIN                  BIF SO..DONT NEED THIS DSNAME
         CLC   PARMDD,4(R3)            DDNAME = PARM DDNAME
         BNE   OBTAIN                  BIF NOT
         MVC   DSN1,DSNAME             SAVE DSN OF FIRST DS
         MVC   VOL1,VOLSER             DITTO VOLSER
*              READ THE FMT1 DSCB TO SET MAX BLKSIZE
OBTAIN   DS    0H
         TM    FLAG,NOPARMDD           BEEN HERE BEFORE ?
         BO    NEXTDD                  BIF SO...MAXBLK ALREADY SET
         OBTAIN CAMLST1                GET DSCB1 (FOR THE BLKSIZE)
         LTR   R15,R15                 OBTAIN SUCCESSFUL ?
         BZ    DSCBOK                  BIF SO...
         TPUT  =CL14'OBTAIN FAILURE',14
         B     NEXTDD                  PROCESS NEXT DATASET
DSCBOK   DS    0H
         CLC   MAXBLK,DSCB1+42         BIGGEST BLKSIZE SO FAR ?
         BNL   NEXTDD                  BIF NOT....
         MVC   MAXBLK,DSCB1+42         OTHERWISE SAVE THE BLKSIZE
         B     NEXTDD                  PROCESS NEXT DATASET
*              DYNALLOC THIS DATASET
DYNAMDS  DS    0H                      DYNALLOC THIS FILE
         CLC   THISDD,BACKDD           'AFTER' DDNAME ?
         BE    NEXTDD                  BIF SO...SAVE FOR CONCAT AS IS..
         CLC   DSNAME,DSN1             1ST FILE IN CONCAT ?
         BNE   NOTDS1                  BIF NOT..
         TM    FLAG,GOTDS1             ALREADY SEEN DSN1 ?
         BZ    FLAGDS1                 BIF NOT..1ST TIME THRU...
         LH    R1,DDCOUNT              OTHERWISE GET DDCOUNT
         BCTR  R1,0                    MINUS 1 FOR CORRECTION
         STH   R1,DDCOUNT              AND RESTORE IT
FLAGDS1  DS    0H
         OI    FLAG,GOTDS1             INDICATE DSN1 FOUND
         B     NEXTDD                  PROCESS NEXT DD
NOTDS1   DS    0H
         MVC   DSN99,DSNAME            DSNAME FOR SVC99
         MVC   VOL99,VOLSER            VOLSER FOR SVC99
         LA    R1,S99RBP               => REQ BLK PTR
         SVC   99                      DYNALLOC
         ST    R15,MYDFRC              STORE SVC 99 RETURN CODE
         LTR   R15,R15                 DYNALLOC OK ?
         BNZ   ERR1                    BIF NOT
         LH    R14,DS99TXDD+4          LEN OF RETURNED DDNAME
         BCTR  R14,0                   MINUS 1 FOR EX
         MVC   DYNDD,BLANKS            BLANK WORK FIELD
         EX    R14,MVCDD               SAVE RETURNED DDNAME
         MVC   0(2,R6),=H'8'           STORE LEN OF DD ENTRY
         MVC   2(8,R6),DYNDD           STASH DDNAME FOR CONCAT
         LA    R6,10(,R6)              => NEXT DYNALLOC DD ENTRY
NEXTDD   DS    0H                      END OF TIOT LOOP
         AR    R3,R2                   => NEXT DD ENTRY
         B     TLOOP                   GET NEXT DD ENTRY
MVCDD    MVC   DYNDD(*-*),DS99DD       << EXECUTED >>
*              END OF TIOT REACHED....
ETLOOP   DS    0H
         TM    DDFLAG,ISAFTER+ISBEFORE ANY BEFORE/AFTER DD CARDS ?
         BZ    ERR13                   BIF NOT...NOTHING TO ADD ON
         TM    DDFLAG,ISPARM           DO WE HAVE MAIN DDNAME ?
         BO    MAINDDOK                BIF SO..CONTINUE
         OI    FLAG,NOPARMDD           INDICATE MAIN DDNAME MISSING
         TM    DDFLAG,ISBEFORE         BEFORE DDNAME PRESENT ?
         BO    MAINDDOK                BIF SO...EASY STUFF
         MVI   FLAG,NOPARMDD           SET FLAG READY FOR REPEAT...
         MVI   DDFLAG,0                RESET DDFLAG FOR REPEAT
         MVC   FRONTDD,BACKDD          REPLACE BEFORE DD BY BACK DD
         MVI   BACKDD,X'FF'            INVALIDATE BACK DDNAME
         MVI   DSN1,X'40'              SHOW DSN1 NOT SET
         B     SCANDD                  AND START THE TIOT LOOP AGAIN
MAINDDOK DS    0H
         TM    FLAG,SECOND             HAVE WE BEEN HERE BEFORE ?
         BO    ALLOC                   BIF SO ...GET REALLOCATING
         TM    DDFLAG,ISAFTER          AFTER DD CARD PRESENT ?
         BZ    SKIPADD                 BIF NOT...DD COUNT OK
         LA    R5,1(,R5)               OTHERWISE ADD 1 FOR AFTER DD
SKIPADD  DS    0H
         STH   R5,DDCOUNT              SAVE NO OF DATASETS
         CLC   DDCOUNT,=AL2(DSNLIM)    TOTAL DSNS > MAX DSET COUNT ?
         BH    ERR14                   BIF SO...NO CAN DO
         STH   R5,DDCOUNT              SAVE NO OF DATASETS
         OI    FLAG,SECOND             SECOND TIME AROUND THE TIOT...
         LA    R6,CO99DD+10            => ENTRY 2 IN CONCAT DD LIST
         TM    FLAG,PARM1ST            PARM DD BEFORE FRONTDD ?
         BZ    SCANDD                  BIF NOT...EASY OPTION
         LA    R6,CO99DD               => START OF CONCAT DD LIST
         LH    R7,BEFCNT               NO OF DSETS IN FRONTDD
         MH    R7,=H'10'               TIMES LEN OF 1 DD ENTRY
         LA    R6,0(R7,R6)             => 1ST ENTRY FOR PARM DDNAMES
         B     SCANDD                  HERE WE GO AGAIN...
*              NOW DEALLOCATE/REALLOCATE/CONCATENATE.......
*              FIRST DEALLOCATE THE 'TARGET' DDNAME
ALLOC    DS    0H
         TM    DDFLAG,ISAFTER      AFTER DD CARD PRESENT ?
         BZ    NOAFTDD             BIF NOT...DDNAME LIST OK
         LA    R6,CO99DD           => CONCAT DDNAME LIST
         LH    R7,DDCOUNT          NO OF DDNAMES IN LIST
         BCTR  R7,0                MINUS 1 FOR AFTER DDNAME ITSELF
         MH    R7,=H'10'           TIMES LEN OF ONE DD ENTRY
         LA    R6,0(R7,R6)         => DD ENTRY FOR AFTER DDNAME
         MVC   0(2,R6),=H'8'       STORE LEN OF DD ENTRY
         MVC   2(8,R6),BACKDD      STASH END DDNAME FOR CONCAT
NOAFTDD  DS    0H
         TM    FLAG,NOPARMDD       PARM DDNAME PRESENT ?
         BO    ALLOC1              BIF NOT..JUST ALLOC DSN1 ETC
         MVI   S99VERB,X'02'       SET ACTION = DEALLOCATE
         MVC   S99TUP,=A(DA99TUPL) => DEALLOC TEXT UNIT PTRS
         LA    R1,S99RBP           => PARM LIST FOR DSNAME DYNALLOC
         SVC   99                  DEALLOC THE MAIN DDNAME
         ST    R15,MYDFRC          STORE SVC 99 RETURN CODE
         LTR   R15,R15             RETCODE ZERO ?
         BNZ   ERR2                BIF NOT...ERROR
*              ALLOC THE FIRST DS WITH THE REQUIRED DDNAME AND BLKSIZE
ALLOC1   DS    0H
         MVI   S99VERB,X'01'       SET ACTION = DSNAME ALLOCATION
         MVC   S99TUP,=A(DS99TUPL) => ALLOC TEXT UNIT PTRS
         MVC   DS99TUBL,=A(DS99TXBL) => MAX BLKSIZE IN CONCATENATION
         MVC   DS99TXDD(2),=H'1'   = DDNAME SPECIFIED
         MVC   DS99TXDD+4(2),=H'8' = DDNAME LENGTH
         MVC   DS99DD,PARMDD       ...AND THIS IS IT
         MVC   DSN99,DSN1          DSNAME FOR SVC99
         MVC   VOL99,VOL1          VOLSER FOR SVC99
         LA    R1,S99RBP           => SVC99 PARM LIST
         SVC   99                  DYNALLOC
         ST    R15,MYDFRC          STORE SVC 99 RETURN CODE
         LTR   R15,R15             RETCODE ZERO ?
         BNZ   ERR3                BIF NOT...ERROR
*              ADD ON THE REST OF THE DATASETS (IF ANY)
         CLC   DDCOUNT,=H'1'       ONLY ONE DDNAME PRESENT ?
         BE    CONCATX             BIF SO...THAT AINT CONCATENATION
         MVI   S99VERB,X'03'       SET ACTION = CONCATENATION
         MVC   S99TUP,=A(CO99TUPL) => ALLOC TEXT UNIT PTRS
         LA    R1,S99RBP           => SVC99 PARM LIST
         SVC   99                  DYNALLOC
         ST    R15,MYDFRC          STORE SVC 99 RETURN CODE
         LTR   R15,R15             RETCODE ZERO ?
         BNZ   ERR4                BIF NOT...ERROR
CONCATX  DS    0H
*              NOW DEALLOCATE THE 'BEFORE' DDNAME (IF PRESENT)
         TM    DDFLAG,ISBEFORE     BEFORE DDNAME PRESENT ?
         BZ    RETURN0             BIF SO...THATS ALL FOLKS
         MVI   S99VERB,X'02'       SET ACTION = DEALLOCATE
         MVC   S99TUP,=A(DA99TUPL) => DEALLOC TEXT UNIT PTRS
         MVC   PARMDD,FRONTDD      MOVE IN DDNAME FOR DEALLOCATION
         LA    R1,S99RBP           => PARM LIST FOR DSNAME DYNALLOC
         SVC   99                  DEALLOC THE MAIN DDNAME
         ST    R15,MYDFRC          STORE SVC 99 RETURN CODE
         LTR   R15,R15             RETCODE ZERO ?
         BNZ   ERR5                BIF NOT...ERROR
         B     RETURN0             THATS EVERYTHING...SUCCESS...
*              PROCESS ERRORS....=> ERROR MSG
ERR14    AH    R10,0(,R10)         => NEXT MSG
ERR13    AH    R10,0(,R10)         => NEXT MSG
ERR12    AH    R10,0(,R10)         => NEXT MSG
ERR11    AH    R10,0(,R10)         => NEXT MSG
ERR10    AH    R10,0(,R10)         => NEXT MSG
ERR6     AH    R10,0(,R10)         => NEXT MSG
ERR5     AH    R10,0(,R10)         => NEXT MSG
ERR4     AH    R10,0(,R10)         => NEXT MSG
ERR3     AH    R10,0(,R10)         => NEXT MSG
ERR2     AH    R10,0(,R10)         => NEXT MSG
ERR1     DS    0H
         LH    R15,2(,R10)         LEN OF MESSAGE
         TPUT  6(10),(15)          WRITE ERROR MESSAGE
         LH    R11,4(,R10)         SET RETCODE
         C     R11,=A(LDMSGNO)     IS IT A DAIR ERROR ?
         BNH   DAIRFAIL            BIF SO...
         LR    R15,R11             SET ERROR RETCODE
         B     RETURN
*              ALLOCATION ERROR: INDICATE DAIR ERROR TYPE
DAIRFAIL DS    0H
         LA    R1,MYDFAREA         => DAIR/SVC99 ERROR PARM LIST
         LINK  EP=IKJEFF18         ISSUE 'REAL TSO' SVC99 MESSAGE
QUIET2   DS    0H
         LR    R15,R11             SET ERROR RETCODE
         B     RETURN
*              T E R M I N A T E
RETURN0  DS    0H
         SLR   R15,R15                 SET RETURN CODE TO ZERO
RETURN   DS    0H
         L     R13,4(R13)          => CALLING PROGS SAVE AREA
         ST    R15,16(R13)         RETURN CODE (R15)
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         BR    R14
*              CONSTANTS AND STORAGE RESERVATIONS
         LTORG
ALPHANAT DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ$@#' VALID IN DDNAME BYTE1
         DC    C' 0123456789'       CHARS VALID IN REST OF DDNAME
BADDD    DC    CL8'STEPLIB'        DDNAMES THAT CANT BE DYNALLOC'ED
         DC    CL8'JOBLIB'
         DC    CL8'STEPCAT'
         DC    CL8'JOBCAT'
FRONTDD  DC    CL8'BEFORE'
BACKDD   DC    CL8'AFTER'
BADDDNO  EQU   (*-BADDD)/8
CAMLST1  CAMLST SEARCH,DSNAME,VOLSER,DSCB1
DSCB1    DS    0CL140              SPACE FOR A FORMAT 1 DSCB
DS1FMTID DS    CL96                FMT1 DSCB BYTES 45-140
DS1DSN   DS    CL44                FMT1 DSCB BYTES 1-44 (DSN)
DSNAME   DS    CL44                DSN FOR OBTAIN
VOLSER   DS    CL6                 VOLSER FOR OBTAIN
DSN1     DC    CL44' '             DSN FOR 1ST DS OF CONCAT
VOL1     DS    CL6                 VOLSER FOR SAME
DDFLAG   DC    X'00'
ISAFTER  EQU   X'80'
ISBEFORE EQU   X'40'
ISPARM   EQU   X'20'
FLAG     DC    X'00'
SECOND   EQU   X'40'               SECOND TIME AROUND TIOT
GOTDS1   EQU   X'20'               PROCESSED 1ST DATASET IN CONCAT
PARM1ST  EQU   X'10'               PARM DD BEFORE FRONTDD IN TIOT
NOPARMDD EQU   X'08'               PARM DD DOES NOT EXIST
BLANKS   DC    CL8' '
THISDD   DS    CL8                 CURRENT DDNAME BEING PROCESSED
DYNDD    DS    CL8                 DDNAME RETURNED BY DYNALLOC
BEFCNT   DS    H                   NO OF DATASETS IN FRONTDD
         MACRO
&LABEL   #MSG  &RC,&MSG
.*********************************************************************
.*    THIS MACRO GENERATES A MESSAGE ENTRY CONSISTING OF:            *
.*    1. AL2'LEN OF ENTIRE ENTRY'                                    *
.*    2. AL2'LEN OF MESSAGE TEXT'                                    *
.*    3. AL2'RETURN CODE (RC)'                                       *
.*    4. C'MESSAGE TEXT'                                             *
.*    EXAMPLE USAGE: #MSG 8,'HELLO SAILOR'                           *
.*    - GENERATES THE FOLLOWING CODE:                                *
.*       DC    AL2(X+6),AL2(X),AL2(8),CLX'HELLO SAILOR'              *
.*********************************************************************
         LCLA  &A
&A       SETA  (K'&MSG-2)          DROP LEN OF QUOTES FROM TEXT LEN
&LABEL   DC    AL2(&A+6),AL2(&A),AL2(&RC),C&MSG
         MEND
EMSG1    #MSG  1,'DSNAME ALLOCATION FAILED'
EMSG2    #MSG  2,'DEALLOCATE FAILED'
EMSG3    #MSG  3,'REALLOCATE FAILED'
EMSG4    #MSG  4,'CONCATENATE FAILED'
EMSG5    #MSG  5,'CLEANUP DEALLOCATION FAILED'
LDMSGNO  EQU   5              LAST DAIR ERR MSG NO
EMSG6    #MSG  6,'INVALID FOR SYSIN/SYSOUT'
EMSG10   #MSG  10,'NO DDNAME PARM ENTERED'
EMSG11   #MSG  11,'ENTERED DDNAME IS INVALID'
EMSG12   #MSG  12,'PARM DDNAME IS RESTRICTED'
EMSG13   #MSG  13,'NO BEFORE OR AFTER DDNAME'
EMSG14   #MSG  14,'TOO MANY DATASETS TO BE CONCATENATED'
*              FIELDS FOR DYNAMIC ALLOCATION
S99RBP   DC    XL1'80',AL3(S99RB)    SVC 99 RB POINTER
S99RB    DS    0F                    SVC 99 REQUEST BLK (MAC IEFZB4D0)
         DC    XL1'14'               S99RBLN
S99VERB  DC    XL1'01'               S99VERB (01=DSNAME ALLOCATION)
         DC    H'0'                  S99FLAG1
S99RSC   DC    F'0'                  S99ERROR/S99INFO
S99TUP   DC    A(DS99TUPL)           => TEXT UNIT POINTERS
         DC    2F'0'                 RESERVED & FLAGS2
*              SVC99 TEXT UNIT POINTERS FOR DSNAME ALLOCATION
DS99TUPL DS    0A                    SVC 99 TEXT UNIT POINTERS
DS99TUDD DC    A(DS99TXDD)           TU PTR, DDNAME
DS99TUPE DC    A(DS99TXPE)           TU PTR, PERM ALLOC
DS99TUDS DC    A(DS99TXDS)           TU PTR, DSNAME
DS99TUVO DC    A(DS99TXVO)           TU PTR, VOLSER
DS99TUUN DC    A(DS99TXUN)           TU PTR, UNIT
DS99TUBL DC    A(0)                  TU PTR, BLKSIZE
DS99TUST DC    XL1'80',AL3(DS99TXST) TU PTR, DISP
*              SVC99 TEXT UNITS: DSNAME ALLOCATION
DS99TXDD DC    H'85',H'1',H'8'         TEXT UNIT, RETURN DDNAME
DS99DD   DC    CL8' '                  RETURNED DDNAME
DS99TXPE DC    H'82',H'0'              TEXT UNIT, PERM ALLOCATION
DS99TXDS DC    H'02',H'1',H'44'        TEXT UNIT, DSN (=>NEXT LINE)
DSN99    DS    CL44                    ACTUAL DSNAME
DS99TXVO DC    H'16',H'1',H'6'         TEXT UNIT, VOLSER (=>NEXT LINE)
VOL99    DS    CL6                     ACTUAL VOLSER
DS99TXUN DC    H'21',H'1',H'8',CL8'SYSALLDA'  TEXT UNIT, UNIT
DS99TXBL DC    H'48',H'1',H'2'         TEXT UNIT, BLKSIZE (=>NEXT LINE)
MAXBLK   DC    H'0'                    MAX BLKSIZE IN CONCATENATION
DS99TXST DC    H'04',H'1',H'1',X'08'   TEXT UNIT, DISP=SHR
*              SVC99 TEXT UNIT POINTERS FOR DEALLOCATION
DA99TUPL DS    0A
DA99TUDD DC    A(DA99TXDD)           TU PTR, DDNAME
DA99TUPA DC    XL1'80',AL3(DA99TXPA) TU PTR, DEALLOC EVEN PERMALLOC DS
*              SVC99 TEXT UNITS FOR DEALLOCATION
DA99TXDD DC    H'1',H'1',H'8'               TEXT UNIT FOR DDNAME
PARMDD   DC    CL8' '                       INPUT DDNAME PARM
DA99TXPA DC    H'7',H'0'                    TEXT UNIT, IGNORE PERMALC
*              SVC99 TEXT UNITS POINTERS FOR CONCATENATION
CO99TUPL DS    0A
CO99TUDD DC    A(CO99TX)             TU PTR, CONCATENATE DDNAMES
CO99TUPC DC    XL1'80',AL3(CO99TXPC) TU PTR, PERM CONCATENATED
*              SVC99 TEXT UNITS FOR CONCATENATION
CO99TXPC DC    H'4',H'0'           TU FOR PERM CONCAT ATTRIBUTE
CO99TX   DC    H'1'
DDCOUNT  DS    H                   NO OF DD/DSNAMES TO BE CONCATENATED
CO99DD   DC    H'8',CL8' '         FIRST DDNAME ENTRY
DSNLIM   EQU   40                  MAX NO OF DSNAMES IN CONCATENATION
         DS    (DSNLIM-1)CL10
*              FIELDS FOR SVC99 FAILURE MESSAGES
MYDFAREA DS    0F                  (IKJEFFDF DFDSECT=YES)
DFS99RBP DC    A(S99RB)            => SVC99 RB
DFRCP    DC    A(MYDFRC)           => SVC99 RETCODE
DFJEFF02 DC    A(MYJEFF02)         => IKJEFF02 ADDRESS
DFIDP    DC    A(MYDFID)           => TYPE OF FAILURE
DFCPPLP  DC    F'0'                NO CPPL
MYDFRC   DS    F                   SVC 99 RETURN CODE
MYJEFF02 DC    F'0'                NO IKJEFF02 ADDRESS
MYDFID   DC    XL2'8032'           GENERAL SVC 99 FAILURE/USE WTP
*        IEFZB4D0                  MAP DYNALLOC PARM LIST
*        IEFZB4D2                  DYNALLOC KEY TABLE (USED IN TU'S)
         END   ,


                                                                       c Xephon 1990

