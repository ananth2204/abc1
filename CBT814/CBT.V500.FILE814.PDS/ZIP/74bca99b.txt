3480 ACL allocation preference

When we decided to install some Automatic Cartridge Loaders (ACLs) on our 3480
drives, I found it difficult at first to discover how the system would select
these drives in preference to other devices when satisfying mount scratch tape
requests.

There are three modes in which the drives may be run:

1    MANUAL mode - this does not load or unload cartridges automatically.  In
fact, the drive behaves as though the ACL was not present at all.  This mode
would only be used in error recovery situations, where the operator needs total
control over the drive.

2    AUTO mode - as soon as a cartridge is re-wound and unloaded, the next one
in the input stack is loaded into the drive and made available for the next
request from the system.

3    SYSTEM mode - in this mode, the ACL will only satisfy mount requests for
scratch tapes.  Any mounts for specific volumes must be performed manually by
the operator.

This is what I have found out about the way ACLs are preferred over non-ACL
drives.  We are running MVS/XA 2.1.3, DFP 2.2.0, JES2.  This allocation
preference does not take place in JES3.

¥    To enable the system to select drives with ACLs with cartridges in the
hopper in preference to other drives (for scratch mount requests), the 3480s
must be running in SYSTEM mode (see above).

¥    There are two bits in the UCB for 3480s that are to do with ACLs, at offset
X'2B', in the field UCBTFL1.  The X'08' bit, when on, indicates that the device
has an ACL installed.  The X'04' bit, when on, indicates that the ACL is
considered 'active' by the system.

¥    This 'active' bit is only turned on (at present) when the drive processes
an unload command from the system (ie pressing the UNLOAD button won't do it)
and there are more cartridges in the input hopper ready to be used.

¥    It is the 3480s with this 'active' bit on in the UCB that will be preferred
by the system allocation routines for scratch cartridge mount requests.

This 'active' bit is always off after IPL, or when the drive is varied on-line
to the system.  This means that until a cartridge has been up on the drive and
unloaded by the system, the bit will not be turned on, so that the drive will
not be preferred over non-ACL drives for scratch mount requests.  Therefore if
not all your 3480s have an ACL fitted, you may initially have some mount
requests for scratch cartridges going to drives without ACLs fitted, even if the
ACLs that are present are primed with cartridges.

You can either wait until the ACL drives are selected via the normal allocation
routines for this bit to be turned on, or you can use the following method, as
described by IBM:

1    Vary the drive off-line

2    Load up the input stack

3    Put the drive in SYSTEM mode

4    Put a cartridge in the feed position and press START

5    Vary the drive on-line

6    Issue a system UNLOAD command.

This does work, but it is a rather clumsy process in my opinion.

Armed with this knowledge about the bits in the UCB, I came up with this idea to
reduce the number of mount messages coming up on the operator's console, as we
are in the process of reducing console traffic as much as possible to make life
easier for the operators.  I had already written a WTO exit to help us with our
3480s.  Because of the simultaneous installation of our 3480s and a tape
management system (which was to look after 3480 cartridges only, not our
existing large 3420 library), we wanted a way of controlling user access to the
new 3480 drives, at least for a short period.  This I accomplished via the
system WTO exit, using the tape mount messages (IEF233A, IEC501A, IEC501E, and
IEF233D) as triggers for the exit.  What the exit did was this:

1    Pick up the device number from the mount message

2    Issue IOSLOOK to get the UCB address of the device in question

3    Check the UCB to see if the device is a 3480

4    If it is a 3480, check the user's authority by checking a special profile
defined to RACF.  The actual criteria we use are:

     ¥    Check for READ access to the RACF profile

     ¥    If READ access, check program name being used against a list of
programs we decided to allow to be used with 3480s

     ¥    If the program was in the list, allow the job to continue

     ¥    If the program was not in the list, check for UPDATE access to the
RACF profile

     ¥    If UPDATE access, allow any program name, and so allow the job to
continue

5    If the user is not authorised, issue a message and cancel the job.

With this exit already in place and working for some time, it was a simple job
to add the extra code to suppress the mount message if the mount request was for
a scratch cartridge, and there were cartridges in the input hopper (bit X'04' on
in the UCB).

This now means that the operators will only see mount messages which they
actually need to action themselves, that is:

¥    Mounts for specific cartridges

¥    Mounts for scratch tapes on non-ACL 3480 drives

¥    Mounts for scratch tapes on ACL drives where the input hopper is empty.

This is a great help to our operators because the consoles are situated in a
bridge area remote from the room (albeit next-door) where the 3480 drives are
installed.  Now they know when the input hoppers have emptied because they begin
seeing the scratch mount requests coming up on the screen.  (I did experiment
with a WTO exit triggered by tape UNLOAD messages, which tested the bits in the
UCB in order to produce a warning message as soon as the hopper was empty, but
unfortunately it didn't work, as the UNLOAD message is issued when the tape
starts re-winding, and it may be 20-30 seconds before the cartridge is actually
unloaded from the drive and the bit in the UCB is turned off.)

In order to use this WTO exit (or your own version of it), you must put the exit
somewhere on the linklist, and put the following entries in the MPFLSTnn member
you are using (probably MPFLST00) in SYS1.PARMLIB.

IEC501A,SUP(NO),USEREXIT(WX3480)
IEC501E,SUP(NO),USEREXIT(WX3480)
IEF233A,SUP(NO),USEREXIT(WX3480)
IEF233D,SUP(NO),USEREXIT(WX3480)

As it stands, this code performs a very specific function peculiar to the
requirements at our installation, and I doubt if anyone else would want to use
the authorisation routines as they appear here; but they may provoke some useful
ideas, and the suppression of 'unnecessary mount messages' should be of interest
to most installations.

*---------------------------------------------------------------------*
* SYSTEM WTO EXIT                                                     *
*  -PURPOSE-     : IMPLEMENT RACF PROTECTION FOR 3480 DEVICES VIA     *
*                : THE MOUNT MESSAGE(IEF233A,IEC501A,IEC501E,IEF233D).*
*                : SUPPRESS MOUNT MESSAGE IF THE ACL HOPPER IS NOT    *
*                : EMPTY AND THE REQUEST IS FOR A SCRATCH TAPE.       *
*  -RESIDES-     : LINKLIST                                           *
*---------------------------------------------------------------------*
WX3480   CSECT
WX3480   AMODE 31
WX3480   RMODE ANY
*---------------------------------------------------------------------*
* THE RULES THAT THIS EXIT ENFORCES ON 3480 USAGE ARE AS FOLLOWS:     *
* CHECK TO SEE IF THE CALLER HAS READ ACCESS TO RESOURCE "USE3480" IN *
* CLASS "APPL". IF NOT, ISSUE A MESSAGE AND CANCEL THE JOB. IF YES,   *
* FIND THE PROGRAM NAME ASSOCIATED WITH THE ACTIVE JSCB, AND SEE IF   *
* THIS IS IN A HARD CODED LIST OF PERMISSIBLE NAMES. IF SO, ALLOW THE *
* JOB TO CONTINUE. IF NOT, CHECK TO SEE IF THE CALLER HAS UPDATE      *
* ACCESS TO THE "USE3480" RESOURCE. IF SO, ALLOW THE JOB TO CONTINUE, *
* ELSE ISSUE A MESSAGE AND CANCEL THE JOB.                            *
*                    +------------------------+                       *
*                    | THIS ONLY APPLIES TO   |                       *
*                    | BATCH JOBS. NO CHECK   |                       *
*                    | IS DONE FOR TSO USERS  |                       *
*                    | OR STARTED TASKS.      |                       *
*                    +------------------------+                       *
*---------------------------------------------------------------------*
         USING *,R15
         B     WXCODE             BRANCH AROUND EYECATCHER
         DC    C'WTO EXIT WX3480 &SYSDATE'
WXCODE   STM   R14,R12,12(R13)    SAVE REGS
         BALR  R12,0
         USING *,R12
         L     R3,0(R1)           ADDRESS OF CTXT
         USING CTXT,R3            GET ADDRESSABLE ON IT
         L     R4,CTXTTXPJ        GET ADDRESS OF TEXT LINE
         USING CTXTATTR,R4
         GETMAIN RU,LV=AREALEN,LOC=BELOW,SP=230
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1             CHAIN SAVE AREAS...
         USING AREA,R13
         MVC   CANCMESS(WTOLEN),WTOSKEL SET UP MESSAGE
*                                 GET JOB NAME
         L     R1,CVTPTR        ->CVT
         L     R1,CVTTCBP-CVT(R1) ->TCB/ASCB LIST
         L     R1,12(R1)        ->CURRENT ASCB
         ICM   R1,15,ASCBJBNI-ASCB(R1) PICK UP JOBNAME ADDRESS, IF ANY
         BZ    EXIT3480           IF NOT A BATCH JOB, IGNORE IT
         MVC   JOBNAME(8),0(R1)
         OC    JOBNAME(8),=CL8' ' CHANGE TO UPPER CASE
*---------------------------------------------------------------------*
* WE NOW NEED TO GET THE DEVICE NUMBER FOR THE MOUNT IN HEX SO THAT   |
* WE CAN INVOKE IOSLOOK IN ORDER TO INTERROGATE THE UCB.              |
*---------------------------------------------------------------------*
         XC    DEVNUM,DEVNUM      WORK AREA
         MVC   DEVNUM+1(3),CTXTTMSG+10 GET DEVICE NUMBER FROM MESSAGE
         TR    DEVNUM+1(3),TRTABLE  TRANSLATE CHARS
         PACK  UCBNUM(3),DEVNUM(5)
         SLR   R2,R2
         ICM   R2,3,UCBNUM        NOW WE HAVE DEVICE NUMBER IN HEX
*---------------------------------------------------------------------*
* IOSLOOK STORES REGS 0-15 AT +0 FROM R13, SO WE NEED TO ALLOW FOR    |
* THIS TO PREVENT OUR SAVE AREA CHAINING BEING CORRUPTED.             |
*---------------------------------------------------------------------*
         LR    R5,R13             SAVE WORK AREA ADDRESS
         LA    R13,8(,R13)        SHUNT R13 FOR IOSLOOK SAVE AREA
         IOSLOOK DEV=(2),UCB=(2)  GET UCB ADDRESS
         LR    R13,R5             RESTORE DSECT ADDRESS
         LTR   R15,R15            GOT UCB ?
         BNZ   EXIT3480           (NO )-ALLOW REQUEST
* R2 NOW POINTS TO UCB OF DEVICE IN MOUNT MESSAGE
         USING UCBCMSEG,R2
         CLC   UCBTYP+2(2),=X'8080' IS THIS A 3480 UCB ?
         BNE   EXIT3480           (NO )-ALLOW REQUEST
*---------------------------------------------------------------------*
* SEE IF THIS IS A SCRATCH TAPE (VOLSER "PRIVAT" OR "SCRTCH"). IF SO, |
* AND THE ACL HOPPER IS *NOT* EMPTY (IE:THE MOUNT WILL BE SATISFIED   |
* BY THE ACL) THEN SUPPRESS THE MOUNT MESSAGE FROM THE CONSOLE.       |
*---------------------------------------------------------------------*
         CLC   CTXTTMSG+14(6),=C'PRIVAT'
         BE    SCRMOUNT           (YES)-IT'S A SCRATCH MOUNT
         CLC   CTXTTMSG+14(6),=C'SCRTCH'
         BNE   DONTSUPP           (NO )-IT'S NOT A SCRATCH MOUNT
*---------------------------------------------------------------------*
* THERE ARE TWO BITS IN THE UCB TO DO WITH ACLS - UCBTFL1 BIT4 SAYS   |
* THERE IS AN ACL INSTALLED ON THIS DEVICE, AND BIT5 SAYS IT IS       |
* MARKED AS 'ACTIVE'. WHEN AN ACL IS MARKED AS ACTIVE, THE DEVICE     |
* WILL BE PREFERRED IN ALLOCATION BY THE SYSTEM FOR SCRATCH REQUESTS. |
* IF BOTH BITS ARE ON, THEN THE ACL IS INSTALLED *AND* ACTIVE, SO THE |
* MOUNT WILL BE SATISFIED BY THE ACL. THEREFORE THE MESSAGE CAN BE    |
* SUPPRESSED. IF THEY ARE NOT BOTH ON, THEN EITHER THE ACL IS NOT     |
* INSTALLED, OR IT IS EMPTY, AND THE MOUNT NEEDS TO BE SEEN.          |
*---------------------------------------------------------------------*
SCRMOUNT TM    UCBTFL1,ACLINST+ACLACTIV INSTALLED *AND* ACTIVE ?
         BNO   DONTSUPP           (NO )-DISPLAY THE MOUNT MESSAGE
         OI    CTXTRFB2,CTXTRHCO  FORCE HARDCOPY ONLY
*---------------------------------------------------------------------*
* THE UCB IS A 3480, SO CHECK CALLERS AUTHORITY AGAINST RESOURCE      *
* "USE3480" IN CLASS "APPL". FIRST CHECK FOR "READ" ACCESS.           *
*---------------------------------------------------------------------*
DONTSUPP MVC   USE3480(8),=CL8'USE3480'
         MVC   APPL(9),APPLSKEL
         MVC   RACTEST(RACLEN),RACSKEL SET UP PARM LIST
         RACROUTE REQUEST=AUTH,ATTR=READ,ENTITY=USE3480,               *
               WORKA=RACWORK,CLASS=APPL,MF=(E,RACTEST)
         B     BRTAB(R15)
BRTAB    B     CHEKNAME           RC=0, OK, SO CHECK PROGRAM NAME
         B     NOPROCES           RC=4, REQUEST WAS NOT PROCESSED
         B     NOTAUTH            RC=8, NOT AUTHORISED
*---------------------------------------------------------------------*
* CALLER HAS AT LEAST READ ACCESS, NOW CHECK THE PROGRAM BEING USED.  *
* AS THE STEP MAY NOT HAVE INITIALISED YET, IT IS NO GOOD LOOKING FOR *
* THIS IN ANY TCB/RB CHAIN, SO WE HAVE TO FIND THE SCT (STEP CONTROL  *
* TABLE).                                                             *
*---------------------------------------------------------------------*
CHEKNAME L     R1,CVTPTR          ->CVT
         L     R1,CVTTCBP-CVT(R1) ->TCB/ASCB WORDS
         L     R1,0(R1)           ->CURRENT TCB
         L     R1,TCBJSCB-TCB(R1) ->JSCB
         L     R1,JSCBACT-IEZJSCB(R1) ->ACTIVE JSCB
         L     R1,JSCSCT-IEZJSCB(R1) ->SCT FOR ACTIVE JSCB
         LA    R1,124(,R1)        PROGNAME FOR THIS STEP
         MVC   INFOMESS(INFOLEN),INFOSKEL SET UP ERROR MSG, IN CASE..
         MVC   PROGNAME(8),0(R1)
*---------------------------------------------------------------------*
* NOW COMPARE PROGRAM NAME IN THE SCT WITH THOSE ALLOWED TO PEOPLE    *
* WHO ONLY HAVE "READ" ACCESS.                                        *
*---------------------------------------------------------------------*
         LA    R1,PROGTABL
PROGLOOP CLC   PROGNAME(8),0(R1)
         BE    EXIT3480           PROGRAM IS ALLOWED, EXIT GRACEFULLY
         LA    R1,8(,R1)          ELSE SHUNT TO NEXT ENTRY
         CLC   0(8,R1),ENDTABLE   END OF LIST ?
         BNE   PROGLOOP           (NO )-TRY AGAIN
*---------------------------------------------------------------------*
* PROGRAM NAME IS NOT ALLOWED, SO SEE IF THEY HAVE "UPDATE" ACCESS,   *
* WHICH ALLOWS THEM TO USE ANY PROGRAM.                               *
*---------------------------------------------------------------------*
         MVC   USE3480(8),=CL8'USE3480'
         MVC   APPL(9),APPLSKEL
         MVC   RACTEST(RACLEN),RACSKEL SET UP PARM LIST
         RACROUTE REQUEST=AUTH,ATTR=UPDATE,ENTITY=USE3480,             *
               WORKA=RACWORK,CLASS=APPL,MF=(E,RACTEST)
         B     BRTAB1(R15)
BRTAB1   B     EXIT3480           RC=0, OK, SO EXIT
         B     NOPROCES           RC=4, REQUEST WAS NOT PROCESSED
*                                 RC=8, NOT AUTHORISED
         WTO   MF=(E,INFOMESS)
NOTAUTH  WTO   MF=(E,CANCMESS)
         MVC   CANCELJ(CANCLEN),CANCSKEL MOVE MGCR PARMS BELOW LINE
         MVC   CANCJOB(8),JOBNAME
         SLR   R0,R0
         MGCR  CANCELJ            AND COMMIT SUICIDE...
         B     EXIT3480
NOPROCES WTO   MF=(E,ROUTFAIL)    TELL THE WORLD THAT RACROUTE FAILED..
EXIT3480 LR    R10,R13            DECHAIN...
         L     R13,4(R13)
         FREEMAIN RU,LV=AREALEN,A=(10),SP=230
         LM    R14,R12,12(R13)    RESTORE REGS AND..
         BR    R14                RETURN TO CALLER
*---------------------------------------------------------------------*
* CONSTANTS FOR INITIALISING VARIOUS PARAMETER LISTS...               *
*---------------------------------------------------------------------*
ROUTFAIL WTO   'WX34802I RACROUTE FAILED RC=4',MF=L
CANCSKEL DC    X'80'
         DC    AL1(CANCLEN)
         DC    X'0000'
         DC    C'CANCEL ........'
WTOSKEL  WTO   'WX34801I ........ CANCELLED - NOT AUTHORISED TO USE 348*
               0',ROUTCDE=3,MF=L
WTOLEN   EQU   *-WTOSKEL
INFOSKEL WTO   'WX34802I YOU ARE NOT ALLOWED TO USE PROGRAM XXXXXXXX WI*
               TH 3480',ROUTCDE=3,MF=L
INFOLEN  EQU   *-INFOSKEL
RACSKEL  RACROUTE REQUEST=AUTH,MF=L
APPLSKEL DC    AL1(4),CL8'APPL'
*---------------------------------------------------------------------*
* TABLE OF PERMISSIBLE PROGRAMS FOR THOSE WITH "READ" ACCESS          *
*---------------------------------------------------------------------*
PROGTABL DC    CL8'IEBCOPY '
         DC    CL8'ADRDSSU '      DF/DSS
         etc
ENDTABLE DC    CL8'ENDTABLE'
TRTABLE  DC    256X'FF'
         ORG   TRTABLE+C'A'
         DC    X'FAFBFCFDFEFF'
         ORG   TRTABLE+C'0'
         DC    C'0123456789'
         ORG   ,
*---------------------------------------------------------------------*
* MAP OF GETMAINED WORKING STORAGE                                    *
*---------------------------------------------------------------------*
AREA     DSECT
         DS    18F                SAVE AREA
DEVNUM   DS    CL5
UCBNUM   DS    CL3
ACLINST  EQU   X'08'              ACL IS INSTALLED
ACLACTIV EQU   X'04'              ACL IS MARKED "ACTIVE"
CANCMESS WTO   'WX34801I ........ CANCELLED - NOT AUTHORISED TO USE 348*
               0',ROUTCDE=3,MF=L
JOBNAME  EQU   CANCMESS+13
INFOMESS WTO   'WX34802I YOU ARE NOT ALLOWED TO USE PROGRAM XXXXXXXX WI*
               TH 3480',ROUTCDE=3,MF=L
PROGNAME EQU   INFOMESS+48
APPL     DS    AL1(4),CL8'APPL'
USE3480  DS    CL8'USE3480'
RACTEST  RACROUTE REQUEST=AUTH,MF=L
RACLEN   EQU   *-RACTEST
CANCELJ  DC    X'80'
         DC    AL1(CANCLEN)
         DC    X'0000'
         DC    C'CANCEL '
CANCJOB  DC    C'........'
CANCLEN  EQU   *-CANCELJ
RACWORK  DS    128F               RACROUTE WORK AREA
AREALEN  EQU   *-AREA
         IEZVX100 ,               WTO EXIT PARM LIST MAP
         IEFUCBOB ,               UCB MAP
         CVT   DSECT=YES
         IHAASCB ,
         IKJTCB ,
         IEZJSCB ,
         IECDIOCM ,               NEEDED FOR IOSLOOK
         END


David Pritchard
MVS/XA Systems Programmer
Lucas Computing Services (UK) © Lucas Computing Services 1987
























