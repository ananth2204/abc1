Limiting the number of logged-on TSO users
In the September 1988 issue of MVS Update an article was published on the
subject of limiting the number of TSO users in a group simultaneously logged on.
At our site we found a different solution.  When a user logs on, we count the
number of users already logged-on in his group and compare this number with the
maximum allowed for this group.  If this maximum is already reached, the user
gets a message and is logged off immediately.
DESCRIPTION OF THE PROGRAMS
At our site each group of TSO users has its own log-on procedure and log-on
command procedure (CLIST), in which the datasets needed for the group are
allocated, programs are invoked etc.  As the first listing shows, the CLIST to
be invoked at log-on is passed to the TMP as a parameter, making it impossible
to bypass it.
In the CLIST, ISPEDF, a program is called that gives a return code, which
decides what  is to happen next.  The allowed maximum log-on count for the group
of the user is passed to this program as a parameter.  If the maximum is not yet
reached (and there are no errors otherwise), a zero return code is received from
the program and the log-on process is continued.  If a non-zero return code is
received, the user is logged-off immediately.  To ensure that the user will not
be able to interrupt execution of the CLIST, an attention interrupt routine is
included, causing immediate log-off in the case of an attention interrupt.
The source code of the Assembler program is shown below.  First we determine the
user’s group from the prefix of his user-id as present in his ASCB.  Then we
check all address spaces via the ASVT.  If the name of an address space has the
same prefix as the user logging-on and this address space is connected with a
terminal (ie a Terminal Status Block is present), we increment a counter.  The
number counted is compared with the maximum number, which is passed as a
parameter to the program and converted to binary.  If the maximum is reached, a
message is displayed on the user’s terminal, a WTO is sent to the console for
information and a return code of 8 is given.
CONCLUSION
In order to make use of our program, some requirements must be met.  First, the
users to be limited by log-on count as a group should have user-ids with the
same prefix.  Second, such a group should have its own log-on procedure (as
assigned in the UADS)  and a corresponding log-on command procedure (CLIST).  If
this is the case, this method is easy to implement (no exit routines needed) and
to maintain (changing the maximum user count or disabling the whole simply by
editing a dataset member).
LOG-ON PROCEDURE
//IKJEDF  PROC
//FOCUSPR EXEC PGM=IKJEFT01,DYNAMNBR=50,REGION=2048K,PARM='%ISPEDF'
//* DOC: LOGON PROCEDURE FOR GROUP EDF
//* ALLOCATIONS
//*
LOG-ON COMMAND PROCEDURE
PROC 0 PANEL()
/* CLIST TO BE EXECUTED AT LOG-ON FOR GROUP EDF.
/* USER IS IMMEDIATELY LOGGED-OFF IF USERMAX EXCEEDED.
ATTN LOGOFF
SVCLS      /*CLEAR SCREEN
CONTROL NOFLUSH MAIN END(ENDO)
PROFILE MODE WTPMSG MSGID
TSOEXEC CALL 'PRDDSV05.PROD.LOAD(TSOLIM)' 'USERMAX=06'
SET R = &SYSCMDRC
IF (&R = 0) THEN +
  DO
/*  ALLOCATIONS, CALL'S ETC.
  ENDO
ELSE +
  DO
   WRITE RETURNCODE = &R
   LOGOFF
  ENDO
THE SOURCE CODE FOR TSOLIM
* Parms: USERMAX=nn, where nn = 00 - 99.                            *
* Returncodes: 0 - Maximum for group not yet reached                *
*              8 - Maximum for group is reached                     *
*             16 - Length of parameter incorrect                    *
*             18 - 'USERMAX=' not specified                         *
TSOLIM   CSECT
         USING *,R12
         SAVE  (14,12),,TSOLIM..MENNO..TJOELKER..&SYSDATE
         LR    R12,R15           Load base register
         L     R6,0(R1)          Load address parmlist
         ST    R13,SAVEA+4       Old save area pointer in new area
         LA    R5,SAVEA          Get address new save area
         ST    R5,8(R13)         New save area pointer in old area
         LR    R13,R5            Set new save area pointer
         XR    R15,R15                Zero return code
         L     R7,CVTPTR              Get CVT address
* GET USER'S GROUP
         L     R8,CVTTCBP-CVT(R7)     Get address of address table
         L     R8,12(R8)              Get address current ASCB
         L     R8,ASCBJBNS-ASCB(R8)   Get address jobname
         MVC   GRP(3),0(R8)           Put group name in variable
* COUNT NUMBER OF USERS WITHIN GROUP.
         L     R7,CVTASVT-CVT(R7)     Get ASVT address
         LA    R7,ASVTENTY-ASVT(R7)   Get ASVTENTY address
         XR    R11,R11                Initialise counter
ASVTLOOP L     R8,0(R7)               Get address first ASCB
         CLC   0(4,R8),=C'ASCB'       Is this an ASCB??
         BNE   ASVTNEXT               No, try next ASVTENTY
         L     R9,ASCBJBNS-ASCB(R8)   Get jobname address
         LTR   R9,R9                  Pointer empty?
         BZ    ASVTNEXT               Yes, try next
         L     R10,ASCBTSB-ASCB(R8)   Get TSB address
         LTR   R10,R10                Empty?
         BZ    ASVTNEXT               Yes, not a TSO user, try next
         CLC   GRP,0(R9)              Address space of same group?
         BNE   ASVTNEXT               No, try next
         LA    R11,1(R11)             Add one to counter
ASVTNEXT LA    R7,4(R7)               Next ASVT entry
         CLC   0(4,R7),=X'80000000'   Is this the last ASVT entry??
         BE    EXITLOOP               Yes, ready
         TM    0(R7),X'80'            ASID assigned?
         BO    ASVTNEXT               No, get next ASVT entry
         B     ASVTLOOP
* GET USERMAX PARM.
EXITLOOP XR    R3,R3                  Zero R3
         ICM   R3,B'0011',0(R6)       Get parmlength
         CH    R3,=X'000A'            Length equals 10?
         BE    LENOK                  OK, go on
         LA    R15,16(0)              No, set returncode 16 ...
         B     EXIT                   ... and exit
LENOK    CLC   STRING,2(R6)           String 'USERMAX=' present?
         BE    STROK                  OK, go on
         LA    R15,18(0)              No, set returncode 18 ...
         B     EXIT                   ... and exit
STROK    MVC   MAX(2),10(R6)          Get maxuser count
         PACK  CNT(1),MAX(2)          Convert to packed format
         CVB   R4,CNTF                Convert to binary
         CLR   R11,R4                 Compare actual and max. count
         BNH   EXIT                   Count less or eq. max.?
         TPUT  TEXT,L'TEXT            No send msg ...
         MVC   WTOXXX+38(3),GRP       Put groupname in console message
WTOXXX   WTO   'Max. number of users in group GRP reached; LOGON reject+
               ed.',ROUTCDE=2,DESC=4
         LA    R15,8(0)               ... and set returncode 8.
EXIT     L     R13,4(R13)             Restore savearea pointer
         RETURN (14,12),,RC=(15)      Return
         DS    0D                Align
SAVEA    DS    18F               Save area
CNTF     DS    0XL8              Temporary storage for conversion
CNT0     DC    XL7'00'
CNT      DC    XL1'00'           Count from parm (packed)
MAX      DC    XL2'00'           Count from parm (zoned)
GRP      DS    CL3
STRING   DC    C'USERMAX='
TEXT     DC    C'Message text'
         DS    0F                Align
         LTORG
         CVT   DSECT=YES         CVT map
         IHAASVT                 ASVT map
         IHAASCB                 ASCB map
         END   TSOLIM


Menno Tjoelker
Systems Programmer  © St Automatiseringscentrum De Veur 1989
St Automatiseringscentrum De Veur (The Netherlands)
















































