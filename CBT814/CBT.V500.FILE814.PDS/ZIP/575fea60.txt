AMASPZAP security checking

After constantly having battles with auditors trying to convince
them to allow application programmers to have access to the
AMASPZAP program, I have come up with the following
DCB OPEN exit, IFG0EX0B, which installs as part of the
OPEN SVC (SVC 19). Auditors constantly argue that
AMASPZAP is a sensitive utility. The only sensitive area in
AMASPZAP is its ability to ZAP a DASD VTOC. This exit
checks to see if a VTOC update is being performed and calls
the security system, via a RACROUTE macro, to validate
update access to a pseudo-dataset name which represents the
VTOC.

The exit checks for a dataset name of 44 bytes of X'04's as the
dataset name being accessed: this represents the VTOC as
referenced by AMASPZAP. If the VTOC is being accessed,
the exit builds a pseudo-dataset name of FORMAT4.DSCB.Vvolser where volser is the volume serial
number of the DASD volume whose VTOC is being updated.
The addition of volser at the end of the dataset name allows the
checking to be very granular, allowing individual users VTOC
update access to any subset of DASD VTOCs. This pseudo-
dataset name is passed to the security system (in our case CA-
TOP SECRET) via the RACROUTE macro. If RACF (or its
equivalent) is not active in the system, or if the access is
allowed, the exit returns normally. If the access is disallowed,
the exit issues a system 913 abend with a return code of 38, the
same abend/return code combination that is issued when
standard OPEN SVC processing denies access to a dataset as
documented in IBM message IEC150I.


IFG0EX0B CSECT
*        REGS                          REGISTER EQUATES
         SAVE  (14,12),,IFG0EX0B-&SYSDATE
         LR    R12,R15                 ESTABLISH BASE REGISTER
         USING IFG0EX0B,R12
         LR    R4,R1                   SAVE A(PARM LIST)
         USING OIEXL,R4
         L     R15,OIEXTIOT            LOAD A(TIOT ENTRY)
         USING TIOENTRY,R15
         TM    TIOELINK,TIOESSDS+TIOTTERM IS IT SYSIN/SYSOUT/TERMINAL
         BNZ   RETURN                  YES, GO RETURN TO CALLER
         DROP  R15
         L     R15,OIEXJFCB            LOAD A(JFCB)
         USING INFMJFCB,R15
         CLC   VTOCDSCB,JFCBDSNM       IS DSNAME = 44X'04'
         BNE   RETURN                  NO, GO RETURN TO CALLER
         DROP  R15
         TM    OIEXOOPT,OIEXOUPD       IS IT OPEN FOR UPDATE/OUTPUT
         BZ    RETURN                  NO, GO RETURN TO CALLER
         ICM   R11,15,OIEXUCB          LOAD A(UCB), IF ANY
         BZ    RETURN                  NONE, GO RETURN TO CALLER
         USING UCBOB,R11
         TM    UCBSTAT,UCBONLI         IS DEVICE ON-LINE
         BZ    RETURN                  NO, GO RETURN TO CALLER
         TM    UCBDVCLS,UCB3DACC       IS IT A DASD UCB
         BZ    RETURN                  NO, GO RETURN TO CALLER
         TM    UCBJBNR,UCBVRDEV        IS IT A VIO DEVICE
         BO    RETURN                  YES, GO RETURN
         LA    R0,WORKAL               LOAD LENGTH(GETMAIN AREA)
         GETMAIN RU,LV=(0)             GET STORAGE
         ST    R13,4(,R1)              SAVE
         ST    R1,8(,R13)                   AREA
         LR    R13,R1                            LINKAGE
         USING WORKA,R13
         MVC   RACDSND(RACDSNL),RACDSN MOVE LIST FORM RACROUTE TO AREA
         MVC   DSNWORK,F4DSN           MOVE DSNAME
         MVC   QUAL,VOLQUAL            MOVE QUALIFIER
         MVC   VOLSER,UCBVOLI          MOVE VOLSER
         DROP  R11
         LA    R1,RACDSND              LOAD A(RACROUTE PLIST)
         LA    R2,RACWORK              LOAD A(RACROUTE WORKAREA)
         LA    R3,DSNWORK              LOAD A(ENTITY)
         RACROUTE REQUEST=AUTH,WORKA=(2), CHECK RACF AUTHORITY         X
               ENTITY=((3)),MF=(E,(1))
         CH    R15,=H'8'               CHECK FOR HIGHEST ALLOWABLE RC
         BH    RETURN2                 GREATER, GO RETURN TO CALLER
         B     BRTAB(R15)              ELSE, BRANCH THROUGH TABLE
BRTAB    B     RETURN2                 BRANCH RC = 0-ACCESS ALLOWED
         B     RETURN2                 BRANCH RC = 4-RACF NOT ACTIVE
         B     DENY                    BRANCH RC = 8-ACCESS DISALLOWED
DENY     ABEND X'0913',,,SYSTEM,REASON=X'38' ISSUE ABEND S913-38
RETURN2  LR    R1,R13                  LOAD A(SAVEAREA)
         L     R13,4(,R13)             LOAD A(CALLER'S SAVEAREA)
         LA    R0,WORKAL               LOAD LENGTH(GETMAIN AREA)
         FREEMAIN RU,LV=(0),A=(1)      FREE STORAGE
RETURN   SR    R15,R15                 SET RETURN CODE
         RETURN (14,12),,RC=(15)       RETURN TO CALLER
RACDSN   RACROUTE REQUEST=AUTH,ATTR=UPDATE,DSTYPE=M, ----------------| X
               CLASS=DSNCLASS,MF=L                                   |
RACDSNL  EQU   *-RACDSN                ------------------------------|
DSNCLASS DC    AL1(7),CL8'DATASET'     CLASS FOR RACROUTE
F4DSN    DC    CL44' '                 ------------------------------|
         ORG   F4DSN                   RESET LOCATION COUNTER        |
F4DSCB   DC    C'FORMAT4.DSCB'         EBCDIC VERSION OF VTOC DSCB   |
F4DSCBL  EQU   *-F4DSCB                ------------------------------|
         ORG   ,                       RESET LOCATION COUNTER
VOLQUAL  DC    C'.V'                   .V VOLSER PREFIX
VTOCDSCB DC    0XL44'00',44X'04'       HEX VERSION OF VTOC DSCB
         LTORG
WORKA    DSECT ,
SAVEAREA DS    18F
RACDSND  DS    XL(RACDSNL)             RACROUTE AREA
DSNWORK  DS    CL(L'F4DSN)             AREA FOR FORMAT4.DSCB.VVOLSER-|
         ORG   DSNWORK+F4DSCBL         RESET LOCATION COUNTER        |
QUAL     DS    CL(L'VOLQUAL)           AREA FOR .V                   |
VOLSER   DS    CL(L'UCBVOLI)           AREA FOR VOLSER---------------|
         ORG   ,                       RESET LOCATION COUNTER
RACWORK  DS    CL512                   WORK AREA FOR RACROUTE
WORKAL   EQU   *-WORKA                 LENGTH(WORKA DSECT)
         IECOIEXL
JFCB     DSECT
         IEFJFCBN
TIOT     DSECT
         IEFTIOT1
         IEFUCBOB LIST=NO,DEVCLAS=DA
         END


                                                                        c Xephon 1993

