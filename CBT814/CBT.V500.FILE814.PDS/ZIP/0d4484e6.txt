Unattended ACF2 TSO session security
When working in any terminal session environment, one typically finds it
convenient to be able to leave the session active, step away momentarily to do
other work, and return to resume at the point of interruption with the session
intact and unchanged.  This is particularly desirable with TSO, where the
elapsed time and system overhead associated with exiting from an environment,
such as ISPF, logging off, then logging back on and re-establishing the required
environment, can be prohibitive.  Unfortunately, it is obvious that the session
may be vulnerable from a security standpoint while it remains unattended.  The
solution is a software ÔlockÕ which affords protection to an active session
during the unattended interval.
TSOLOCK is a TSO command processor that meets this objective under ACF2 in an
effective and efficient manner.  After the TSOLOCK command is entered the
session will respond only to an Ôattention interruptÕ; the response consists of
a prompt for the ACF2 log-on password.  The only way to leave the TSOLOCK
environment (other than via session cancellation through the operator or the
system request key) is to specify the password correctly.
TSOLOCK must be authorised as a command processor as described in the MVS SPL:
TSO manual, or via an installation-defined alternative.  The ACF2 macro library
is required for successful assembly.
TSOLOCK  CSECT
         SAVE  (14,12)
         BALR  R12,0
         USING *,R12
         STAX  TSOL2000,REPLACE=NO      SET INITIAL STAX
         XC    ACVALD(ACVLEN),ACVALD    ZERO THE ACF PARAMETER LIST
         MVI   ACVFCN,1                 SET THE REQUEST TYPE
         OI    ACVSFCN,ACVSRVLD         PASSWORD REVALIDATION
         OI    ACVCNTL,ACVCNACT         SUPPRESS LOGONID FIELD UPDATES
         MVC   ACVMSG,=A(ACF2MSG)       OUTPUT MESSAGE ADDRESS
         STFSMODE                       SET FULLSCREEN MODE
TSOL0020 TPUT  LOCKMSG,LOCKMSGL,FULLSCR ISSUE LOCK MESSAGE
         TGET  DUMMY,0                  DO DUMMY TGET
TSOL0030 B     TSOL0020                 THIS INST. NOOP'ED BY STAX EXIT
* THE STAX EXIT ENABLES THE FOLLOWING CODE FOR PROCESSING *
         TPUT  CLRSCRN,CLRSCRNL,FULLSCR CLEAR THE SCREEN
TSOL0045 TPUT  PASSMSG,PASSMSGL         ISSUE REQUEST FOR PASSWORD
         TPUT  FLDSET1,FLDSET1L,CONTROL SET FIELD CONTROL
         TGET  ACVPSWD,8                GET PASSWORD
         LTR   R1,R1                    ANYTHING READ?
         BZ    TSOL0045                 NO
         TCLEARQ INPUT                  CLEAR OUT ANYTHING > 8
         OC    ACVPSWD,=8X'40'          CONVERT TO UPPER CASE
         ACFSVC ACVALD,NONE=TSOL0060
         LTR   R15,R15                  VALID PASSWORD SUPPLIED?
         BZ    TSOL1000                 YES
         TPUT  ACF2MSG+4,124            ISSUE MESSAGE
         MVI   ACF2MSG,C' '
         MVC   ACF2MSG+1(127),ACF2MSG   CLEAR MESSAGE AREA
         B     TSOL0045                 RECYCLE
TSOL0060 TPUT  NOACMSG,NOACMSGL         INDICATE ACF2 NOT ACTIVE
TSOL1000 RETURN (14,12),RC=0            RELOAD REGISTERS
         DROP  R12                      DROP CURRENT BASE
* STAX EXIT *
TSOL2000 SAVE  (14,12)
         BALR  R12,0
         USING *,R12
TSOL2005 STAX  TSOL2000,REPLACE=NO      STAX AGAIN TO KEEP AHEAD
         TM    FLAG,THROUGH             ALREADY THROUGH?
         BO    TSOL2040                 YES
         L     R1,=A(TSOL0030)          GET BRANCH AFTER DUMMY TGET
         MVI   1(R1),0                  DISABLE IT
         OI    FLAG,THROUGH             SHOW WE'VE BEEN THROUGH
TSOL2040 RETURN (14,12),RC=0            RETURN
* DATA AREA *
FLAG     DC    X'00'                    FLAG BYTE
THROUGH  EQU   X'80'                    WE'VE BEEN THROUGH STAX EXIT
CLRSCRN  DC    X'27F50311404013'        CLEAR SCREEN, CURSOR AT TOP
CLRSCRNL EQU   *-CLRSCRN
NOACMSG  DC    C'TSOLOCK01 - ACF2 IS NOT CURRENTLY ACTIVE'
NOACMSGL EQU   *-NOACMSG
PASSMSG  DC    C'TSOLOCK05 - ENTER YOUR TSO LOGON PASSWORD:'
PASSMSGL EQU   *-PASSMSG
LOCKMSG  EQU   *
  DC X'27F503114040131DE8'               CLEAR SCREEN, CURSOR AT TOP
  DC X'114A4F',C'|||||| |||||| |||||| ||     |||||| |||||| ||  ||'
  DC X'114B5F',C'  ||   ||     ||  || ||     ||  || ||     || || '
  DC X'114C6F',C'  ||   |||||| ||  || ||     ||  || ||     ||||  '
  DC X'114D7F',C'  ||       || ||  || ||     ||  || ||     || || '
  DC X'114F4F',C'  ||   |||||| |||||| |||||| |||||| |||||| ||  ||'
LOCKMSGL EQU   *-LOCKMSG
FLDSET1  DC    X'1D4D'                  SET NONDISPLAY/NONPRINT FIELD
FLDSET1L EQU   *-FLDSET1
ACF2MSG  DC    CL128' '                 ACF2-PLUGGED MESSAGE AREA
DUMMY    DC    0CL80' '
         ACVALD DSECT=NO
         ACCVT
         END


     © Xephon 1988









































