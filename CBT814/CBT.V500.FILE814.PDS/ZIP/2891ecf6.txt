3990-3 monitoring from TSO


SHOW3990 SOURCE CODE

* THIS PROGRAM SHOWS 3990 STATISTICS UNDER TSO
* FOR INFORMATION ABOUT LINK TO IDCSS01 SEE:
*    "CACHE DEVICE ADMINISTRATION". GC35-0101-1
*    "3990 STORAGE CONTROL REFERENCE". GA32-0099
SHOW3990 CSECT
* SET ENVIRONMENT
        STM   14,12,12(13)
        LR    12,15
        USING SHOW3990,12,11,10
        LR    11,12
        LA    11,4095(11)
        LA    11,1(11)
        LR    10,11
        LA    10,4095(10)
        LA    10,1(10)
        ST    13,SAVE+4
        LA    13,SAVE
        XC    UCID,UCID                    CLEAR CONTROL UNIT ID
        MVI   SSGOPT,X'88'                 SET LINK OPTION TO "ALL"
        BAL   3,LINKBUFF                   LINK TO CALL
OTRAVEZ EQU   *
        MVI   VOLMARK,C'N'                 SET VOLUME'S FLAG TO "NO"
        MVC   SCRCOPY(80),LIN1UC           MOVE TITLES 1
        MVC   SCRCOPY+160(80),LIN3UC       MOVE TITLES 2
        MVC   SCRCOPY+320(80),LIN5UC       MOVE TITLES 3
        XC    TOTUCNVS,TOTUCNVS            CLEAR ACUM OF "NVS FULL"
        XC    TOTUCR,TOTUCR                CLEAR ACUM "READS"
        XC    TOTUCW,TOTUCW                CLEAR ACUM "WRITES"
        XC    TOTUCRH,TOTUCRH              CLEAR ACUM "READ HITS"
        XC    TOTUCWH,TOTUCWH              CLEAR ACUM "WRITE HITS"
        LA    3,BUFFAREA                   (R3) = START DATA AREA
        LA    4,SCRCOPY+480                (R4) = FIRST DETAIL LINE
        LA    5,SCRCOPY+1760               (R5) = ERROR LINE
OTROVOL EQU   *
        CLC   UCID,=X'0000'                IS FIRST TIME?
        BNE   *+10                         NO. SKIP
        MVC   UCID,110(3)                  YES. SET CONTROL UNIT 1
        CLC   UCID,110(3)                  IS CONTROL UNIT OK?
        BNE   OTHDASD                      NO. GO TO NEXT VOLUME
        MVC   0(6,4),0(3)                  MOVE VOLUME TO SCREEN
        MVC   VOLUME,0(3)                  MOVE VOLUME TO WORKAREA
        L     6,88(3)                      LOAD NVS FULL
        A     6,TOTUCNVS                   ADD TO ACUM "NVS FULL"
        ST    6,TOTUCNVS                   STORE TOTAL
        L     6,20(3)                      LOAD NORMAL READ
        A     6,36(3)                      ADD SEQ READ
        A     6,52(3)                      ADD FAST WRITE READ
        ST    6,TOTDEVR                    STORE TOTAL READ OF VOL
        A     6,TOTUCR                     ADD TO CU'S TOTAL READ
        ST    6,TOTUCR                     STORE CU'S TOTAL READ
        L     6,24(3)                      LOAD NORMAL READ HIT
        A     6,40(3)                      ADD SEQ READ HIT
        A     6,56(3)                      ADD FAST WRITE READ HIT
        ST    6,TOTDEVRH                   SAVE VOL'S TOTAL READ HIT
        A     6,TOTUCRH                    ADD CU'S TOTAL READ HIT
        ST    6,TOTUCRH                    SAVE CU'S TOTAL READ HIT
        XR    6,6                          CLEAR R6
        L     7,TOTDEVRH                   LOAD VOL'S TOTAL READ HIT
        M     6,=F'10000'                  MULTIPLY FOR DECIMAL POINT
        CLC   TOTDEVR,=F'0'                IS TOTAL READ = 0 ?
        BE    *+8                          YES. SKIP DIVIDE
        D     6,TOTDEVR                    DIVIDE FOR COMPUTE %
        CVD   7,DW1                        MOVE
        MVC   15(7,4),MASK2                     % READ HITS
        ED    15(7,4),DW1+5                                 TO SCREEN
        L     6,TOTDEVR                    LOAD TOTAL READ OF VOL
        CVD   6,DW1                        MOVE
        MVC   6(10,4),MASK1                     TOTAL READ
        ED    6(10,4),DW1+3                                 TO SCREEN
        L     6,28(3)                      LOAD NORMAL WRITE
        A     6,44(3)                      ADD SEQ WRITE
        A     6,60(3)                      ADD FAST WRITE
        ST    6,TOTDEVW                    SAVE VOL'S TOTAL WRITE
        A     6,TOTUCW                     ADD CU'S TOTAL WRITE
        ST    6,TOTUCW                     SAVE CU'S TOTAL WRITE
        L     6,32(3)                      LOAD NORMAL WRITE HIT
        A     6,48(3)                      ADD SEQ WRITE HIT
        A     6,64(3)                      ADD FAST WRITE HIT
        ST    6,TOTDEVWH                   SAVE VOL'S TOTAL WRITE HIT
        A     6,TOTUCWH                    ADD CU'S TOTAL WRITE HIT
        ST    6,TOTUCWH                    SAVE CU'S TOTAL WRITE HIT
        XR    6,6                          CLEAR R6 FOR DIVIDE
        L     7,TOTDEVWH                   LOAD VOL'S TOTAL WRITE HIT
        M     6,=F'10000'                  MULTIPLY FOR DECIMAL POINT
        CLC   TOTDEVW,=F'0'                IS VOL'S TOTAL WRITE = 0 ?
        BE    *+8                          YES. SKIP DIVIDE
        D     6,TOTDEVW                    DIVIDE FOR COMPUTE %
        CVD   7,DW1                        MOVE
        MVC   31(7,4),MASK2                     % WRITE HITS
        ED    31(7,4),DW1+5                                 TO SCREEN
        L     6,TOTDEVW                    LOAD VOL'S TOTAL WRITE
        CVD   6,DW1                        MOVE
        MVC   22(10,4),MASK1                    TOTAL WRITE
        ED    22(10,4),DW1+3                                TO SCREEN
        LA    4,40(4)                      (4) = NEXT FRAME ON SCREEN
        CR    4,5                          IS LINE ERROR
        BNL   PANTFULL                     YES. GO TO SCREEN FULL
OTHDASD EQU   *
        AH    3,14(3)                      ADD TO R3 LENGTH OF AREA
        LA    3,16(3)                      ADD TO R3 PREFIX AREA
        CLC   0(6,3),=6X'00'               IS VOLUME = X'00'S ?
        BNE   OTROVOL                      NO. GO TO NEXT VOLUME
        B FINPANT                          YES. GO TO SEND SCREEN
PANTFULL EQU  *
        MVC   SCRCOPY+1760(14),=C'SCREEN FULL   '  MOVE ERROR MSG
FINPANT EQU   *
        MVC   SCRCOPY+65(1),UCID           MOVE UNIT CONTROL ID
        MVC   SCRCOPY+66(1),UCID                     TO SCREEN
        MVC   SCRCOPY+67(1),UCID+1
        MVC   SCRCOPY+68(1),UCID+1
        TR    SCRCOPY+65(1),TAB2
        TR    SCRCOPY+66(1),TAB1
        TR    SCRCOPY+67(1),TAB2
        TR    SCRCOPY+68(1),TAB1
        XR    6,6                          CLEAR R6
        L     7,TOTUCRH                    LOAD UC'S TOTAL READ HIT
        M     6,=F'10000'                  MULTIPLY FOR DECIMAL POINT
        CLC   TOTUCR,=F'0'                 IS UC'S TOTAL READ = 0 ?
        BE    *+8                          YES. SKIP DIVIDE
        D     6,TOTUCR                     DIVIDE FOR COMPUTE %
        CVD   7,DW1                        MOVE
        MVC   SCRCOPY+183(7),MASK2             % UC READ HITS
        ED    SCRCOPY+183(7),DW1+5                          TO SCREEN
        L     6,TOTUCR                     LOAD UC'S TOTAL READ
        CVD   6,DW1                        MOVE
        MVC   SCRCOPY+166(10),MASK1            UC'S TOTAL READ
        ED    SCRCOPY+166(10),DW1+3                       TO SCREEN
        XR    6,6                          CLEAR R6
        L     7,TOTUCWH                    LOAD UC'S TOTAL WRITE HIT
        M     6,=F'10000'                  MULTIPLY FOR DECIMAL POINT
        CLC   TOTUCW,=F'0'                 IS UC'S TOTAL WRITE = 0 ?
        BE    *+8                          YES. SKIP DIVIDE
        D     6,TOTUCW                     DIVIDE FOR COMPUTE %
        CVD   7,DW1                        MOVE
        MVC   SCRCOPY+213(7),MASK2             % UC'S WRITE HITS
        ED    SCRCOPY+213(7),DW1+5                       TO SCREEN
        L     6,TOTUCW                     LOAD UC'S TOTAL WRITES
        CVD   6,DW1                        MOVE
        MVC   SCRCOPY+197(10),MASK1            UC'S TOTAL WRITES
        ED    SCRCOPY+197(10),DW1+3                      TO SCREEN
        L     6,TOTUCNVS                   LOAD UC'S TOTAL NVS FULL
        CVD   6,DW1                        MOVE
        MVC   SCRCOPY+231(9),MASK1             UC'S TOTAL NVS FULL
        ED    SCRCOPY+231(9),DW1+4                       TO SCREEN
SEND    EQU   *
        LA    8,SCRCOPY+160                LOAD ADDR OF LINE DETAIL 1
        LA    7,7                          LOAD 7 ON R7
LOOPC   TR    0(240,8),TABLE               TRANSLATE BAD BYTES
        LA    8,240(8)                     ADD 240 TO ADDR
        BCT   7,LOOPC                      END OF LOOP
* ERASE "*" OF COL 1 ON NEXT SENTENCES FOR DEBUGGING
*       MVC   SCRCOPY+1760(24),WRK24       MOVE INPUT AREA TO ERRLINE
*       MVC   SCRCOPY+1786(6),VOLUME       MOVE VOLUME TO ERROR LINE
        TPUT  SCREEN,LENS,FULLSCR          SEND SCREEN
        TGET  INPDATA,L'INPDATA,ASIS,WAIT  GET INPUT DATA
        LTR   15,15                        OK ?
        BNZ   RETURN                       NO. GO TO RETURN
* ERASE "*" OF COL 1 ON NEXT SENTENCES FOR DEBUGGING
*       MVC   WRK24(1),INPDATA             MOVE HEX INPUT DATA TO
*       MVC   WRK24+1(1),INPDATA           WORKAREA
*       MVC   WRK24+2(1),INPDATA+1
*       MVC   WRK24+3(1),INPDATA+1
*       MVC   WRK24+4(1),INPDATA+2
*       MVC   WRK24+5(1),INPDATA+2
*       MVC   WRK24+6(1),INPDATA+3
*       MVC   WRK24+7(1),INPDATA+3
*       MVC   WRK24+8(1),INPDATA+4
*       MVC   WRK24+9(1),INPDATA+4
*       MVC   WRK24+10(1),INPDATA+5
*       MVC   WRK24+11(1),INPDATA+5
*       MVC   WRK24+12(1),INPDATA+6
*       MVC   WRK24+13(1),INPDATA+6
*       MVC   WRK24+14(1),INPDATA+7
*       MVC   WRK24+15(1),INPDATA+7
*       MVC   WRK24+16(1),INPDATA+8
*       MVC   WRK24+17(1),INPDATA+8
*       MVC   WRK24+18(1),INPDATA+9
*       MVC   WRK24+19(1),INPDATA+9
*       MVC   WRK24+20(1),INPDATA+10
*       MVC   WRK24+21(1),INPDATA+10
*       MVC   WRK24+22(1),INPDATA+11
*       MVC   WRK24+23(1),INPDATA+11
*       TR    WRK24(1),TAB2                TRANSLATE HEX TO EBCDIC
*       TR    WRK24+1(1),TAB1
*       TR    WRK24+2(1),TAB2
*       TR    WRK24+3(1),TAB1
*       TR    WRK24+4(1),TAB2
*       TR    WRK24+5(1),TAB1
*       TR    WRK24+6(1),TAB2
*       TR    WRK24+7(1),TAB1
*       TR    WRK24+8(1),TAB2
*       TR    WRK24+9(1),TAB1
*       TR    WRK24+10(1),TAB2
*       TR    WRK24+11(1),TAB1
*       TR    WRK24+12(1),TAB2
*       TR    WRK24+13(1),TAB1
*       TR    WRK24+14(1),TAB2
*       TR    WRK24+15(1),TAB1
*       TR    WRK24+16(1),TAB2
*       TR    WRK24+17(1),TAB1
*       TR    WRK24+18(1),TAB2
*       TR    WRK24+19(1),TAB1
*       TR    WRK24+20(1),TAB2
*       TR    WRK24+21(1),TAB1
*       TR    WRK24+22(1),TAB2
*       TR    WRK24+23(1),TAB1
        CLI   AID,243                      KEY PF3?
        BE    RETURN                       YES. GO TO RETURN
        BAL   3,CLRSCR                     NO. LINK TO CLEAR SCREEN
        CLI   AID,X'F4'                    KEY PF4?
        BE    SUBS                         YES. GO TO SUBSYSTEM
        MVI   SSGOPT,X'88'                 SET LINK'S OPTIONS
        BAL   3,LINKBUFF                   LINK TO CALL
        CLI   AID,X'F5'                    KEY PF5?
        BE    OTHUC                        YES. GO TO NEXT CU
        CLI   AID,X'F6'                    KEY PF6?
        BE    NXTDASD                      YES. GO TO NEXT VOLUME
        CLI   AID,X'F7'                    KEY PF7?
        BE    DASD                         YES. GO TO SPECIFIC VOLUME
        CLI   VOLMARK,C'Y'                 IS VOLMARK = Y ?
        BE    DASD                         YES. GO TO SPECIFIC VOLUME
        B     OTRAVEZ                      ENTER? GO TO REFRESH
* PROCESS NEXT CONTROL UNIT
OTHUC   EQU   *
        LA    3,BUFFAREA                   R3 = ADDR TO CALL AREA
CLCUCID EQU   *
        CLC   UCID,110(3)                  UCID VS UC OF VOLUME ?
        BL    SETUCID                      LOW. GO TO SET UCID
        AH    3,14(3)                      ADD TO R3 LENGTH OF ELEM
        LA    3,16(3)                      ADD TO R3 LENGTH OF PREFIX
        CLC   0(6,3),=6X'00'               IS LAST VOLUME?
        BNE   CLCUCID                      NO. GO TO OTHER COMPARE
        LA    3,BUFFAREA                   YES. SET FIRST CONTROL UNIT
SETUCID EQU   *
        MVC   UCID,110(3)                  SET CONTROL UNIT ID
        B     OTRAVEZ                      GO TO NORMAL PROCESS
* PROCESS SPECIFIC VOLUME DETAIL
DASD    EQU   *
        LA    3,BUFFAREA                   (R3) = ADDR CALL AREA
        OC    VOLUME,=CL6' '               CONVERT TO UPPER CASE
SCANDASD EQU  *
        CLC   0(6,3),VOLUME                IS VOLUME OK ?
        BE    DISPDASD                     YES. GO TO MOVE TO SCREEN
        AH    3,14(3)                      NO. ADD TO R3 L'ELEMENT
        LA    3,16(3)                      ADD TO R3 ELEMENT'S PREFIX
        CLC   0(6,3),=6X'00'               IS LAST VOLUME ?
        BNE   SCANDASD                     NO. GO TO OTHER SCAN
        MVC   SCRCOPY+1800(18),=CL24'DISC NOT FOUND    '  MOVE ERROR
        MVC   SCRCOPY+1819(6),VOLUME       TO ERROR LINE
        MVC   VOLUME,=C'MVSCP1'            SET VALID VOLUME
        B     SEND                         GO TO SEND SCREEN
* PROCESS NEXT VOLUME DETAIL
NXTDASD EQU   *
        LA    3,BUFFAREA                   (R3) = ADDR CALL AREA
SCANNXTD EQU  *
        CLC   0(6,3),VOLUME                IS VOLUME OK ?
        BE    OKNXT                        YES. GO TO PROCESS VOLUME
        AH    3,14(3)                      NO. ADD TO R3 L'ELEMENT
        LA    3,16(3)                      ADD TO R3 ELEMENT'S PREFIX
        CLC   0(6,3),=6X'00'               IS LAST VOLUME ?
        BNE   SCANNXTD                     NO. GO TO OTHER SCAN
        MVC   SCRCOPY+1800(18),=CL24'DISC NOT FOUND    '  MOVE ERROR
        MVC   SCRCOPY+1819(6),VOLUME       TO ERROR LINE
        LA    3,BUFFAREA                   (R3) = ADDR CALL AREA
        B     DISPDASD                     GO TO MOVE TO SCREEN
OKNXT   EQU   *
        AH    3,14(3)                      NO. ADD TO R3 L'ELEMENT
        LA    3,16(3)                      ADD TO R3 ELEMENT'S PREFIX
        MVC   VOLUME,0(3)                  SET NEXT VOLUME
        CLC   0(6,3),=6X'00'               IS LAST VOLUME?
        BNE   DISPDASD                     NO. GO TO MOVE TO SCREEN
        LA    3,BUFFAREA                   (R3) = ADDR CALL AREA
        MVC   VOLUME,0(3)                  SET FIRST VOLUME
* MOVE VOLUME DETAIL INFORMATION TO SCREEN
DISPDASD EQU  *
        MVI   VOLMARK,C'Y'                 MOVE "YES" TO VOLUME MARK
        MVC   VOLUME,0(3)                  MOVE VOLUME FROM CALL AREA
        MVC   LIN1DV+55(6),0(3)            MOVE VOLUME TO SCREEN
        MVC   LIN3DV+19(1),110(3)          MOVE UNIT CONTROL ID
        MVC   LIN3DV+20(1),110(3)
        MVC   LIN3DV+21(1),111(3)                   TO SCREEN
        MVC   LIN3DV+22(1),111(3)
        TR    LIN3DV+19(1),TAB2            TRANSLATE UNIT CONTROL ID
        TR    LIN3DV+20(1),TAB1
        TR    LIN3DV+21(1),TAB2                     ON SCREEN
        TR    LIN3DV+22(1),TAB1
        MVC   LIN3DV+35(3),8(3)            MOVE STATUS OF VOLUME
        MVC   LIN3DV+47(1),18(3)
        MVC   LIN3DV+48(1),18(3)                    TO SCREEN
        MVC   LIN3DV+49(1),19(3)
        MVC   LIN3DV+50(1),19(3)
        TR    LIN3DV+47(1),TAB2            TRANSLATE STATUS OF VOLUME
        TR    LIN3DV+48(1),TAB1
        TR    LIN3DV+49(1),TAB2                     ON SCREEN
        TR    LIN3DV+50(1),TAB1
        MVC   LIN4DV+6(3),=C'INA'          SET CACHE STATUS
        TM    18(3),X'C0'
        BNZ   *+10
        MVC   LIN4DV+6(3),=C'ACT'                 ON SCREEN
        MVC   LIN4DV+19(3),=C'INA'         SET FAST WRITE STATUS
        TM    18(3),X'30'
        BNZ   *+10
        MVC   LIN4DV+19(3),=C'ACT'                ON SCREEN
        MVC   LIN4DV+32(4),=C'NO  '        SET DUPLEX STATUS
        TM    18(3),X'08'
        BZ    *+10
        MVC   LIN4DV+32(4),=C'PRIM'
        TM    18(3),X'04'
        BZ    *+10
        MVC   LIN4DV+32(4),=C'SEC '               ON SCREEN
        MVC   LIN4DV+49(3),=C'SUS'         SET DUPLEX AVAILABILITY
        TM    18(3),X'03'                         STATUS
        BNZ   *+10
        MVC   LIN4DV+49(3),=C'ACT'                ON SCREEN
        MVC   LIN4DV+62(3),=C'YES'         SET PINNED STATUS
        TM    19(3),X'C0'
        BNZ   *+10
        MVC   LIN4DV+62(3),=C'NO '                ON SCREEN
        MVC   LIN4DV+72(3),=C'N/A'         SET ADDRESS OF DUPLEX
        TM    19(3),X'3F'
        BZ    FINSTAT
        MVC   DW1(1),19(3)
        NI    DW1,X'3F'
        MVC   LIN4DV+72(1),DW1
        MVC   LIN4DV+73(1),DW1
        TR    LIN4DV+72(1),TAB2
        TR    LIN4DV+73(1),TAB1                   ON SCREEN
FINSTAT EQU   *
        L     5,20(3)                      MOVE NORMAL READ
        CVD   5,DW1
        MVC   LIN6DV+16(10),MASK1
        ED    LIN6DV+16(10),DW1+3                 TO SCREEN
        L     5,24(3)                      MOVE NORMAL READ HIT
        CVD   5,DW1
        MVC   LIN6DV+44(10),MASK1
        ED    LIN6DV+44(10),DW1+3                 TO SCREEN
        XR    4,4                          COMPUTE
        M     4,=F'10000'
        CLC   20(4,3),=F'0'
        BE    *+8
        D     4,20(3)                             % NORMAL READ HITS
        CVD   5,DW1                        MOVE % NORMAL READ HITS
        MVC   LIN6DV+66(7),MASK2
        ED    LIN6DV+66(7),DW1+5                  TO SCREEN
        L     5,36(3)                      MOVE SEQ READ
        CVD   5,DW1
        MVC   LIN7DV+16(10),MASK1
        ED    LIN7DV+16(10),DW1+3                 TO SCREEN
        L     5,40(3)                      MOVE SEQ READ HIT
        CVD   5,DW1
        MVC   LIN7DV+44(10),MASK1
        ED    LIN7DV+44(10),DW1+3                 TO SCREEN
        XR    4,4                          COMPUTE
        M     4,=F'10000'
        CLC   36(4,3),=F'0'
        BE    *+8
        D     4,36(3)                             % SEQ READ HITS
        CVD   5,DW1                        MOVE % SEQ READ HITS
        MVC   LIN7DV+66(7),MASK2
        ED    LIN7DV+66(7),DW1+5                  TO SCREEN
        L     5,52(3)                      MOVE FAST WRITE READS
        CVD   5,DW1
        MVC   LIN8DV+16(10),MASK1
        ED    LIN8DV+16(10),DW1+3                 TO SCREEN
        L     5,56(3)                      MOVE FW READ HIT
        CVD   5,DW1
        MVC   LIN8DV+44(10),MASK1
        ED    LIN8DV+44(10),DW1+3                 TO SCREEN
        XR    4,4                          COMPUTE
        M     4,=F'10000'
        CLC   52(4,3),=F'0'
        BE    *+8
        D     4,52(3)                             % FW READ HITS
        CVD   5,DW1                        MOVE % FW READ HITS
        MVC   LIN8DV+66(7),MASK2
        ED    LIN8DV+66(7),DW1+5                  TO SCREEN
        L     6,20(3)                      LOAD NORMAL READS
        A     6,36(3)                      ADD SEQ READS
        A     6,52(3)                      ADD FW READS
        CVD   6,DW1                        MOVE TOTAL READS
        MVC   LIN9DV+16(10),MASK1
        ED    LIN9DV+16(10),DW1+3                 TO SCREEN
        L     5,24(3)                      LOAD NORMAL READS HITS
        A     5,40(3)                      ADD SEQ READS HITS
        A     5,56(3)                      ADD FW READS HITS
        CVD   5,DW1                        MOVE TOTAL READS HITS
        MVC   LIN9DV+44(10),MASK1
        ED    LIN9DV+44(10),DW1+3                 TO SCREEN
        XR    4,4                          COMPUTE
        M     4,=F'10000'
        C     6,=F'0'
        BE    *+6
        DR    4,6                                 % TOTAL READ HITS
        CVD   5,DW1                        MOVE % TOTAL READS HITS
        MVC   LIN9DV+66(7),MASK2
        ED    LIN9DV+66(7),DW1+5                  TO SCREEN
        L     5,28(3)                      MOVE NORMAL WRITES
        CVD   5,DW1
        MVC   LIN11DV+16(10),MASK1
        ED    LIN11DV+16(10),DW1+3                TO SCREEN
        L     5,32(3)                      MOVE NORMAL WRITES HITS
        CVD   5,DW1
        MVC   LIN11DV+44(10),MASK1
        ED    LIN11DV+44(10),DW1+3                TO SCREEN
        XR    4,4                          COMPUTE
        M     4,=F'10000'
        CLC   28(4,3),=F'0'
        BE    *+8
        D     4,28(3)                             % NORMAL WRTS HITS
        CVD   5,DW1                        MOVE %NORMAL WRITES HITS
        MVC   LIN11DV+66(7),MASK2
        ED    LIN11DV+66(7),DW1+5                 TO SCREEN
        L     5,44(3)                      MOVE SEQ WRITES
        CVD   5,DW1
        MVC   LIN12DV+16(10),MASK1
        ED    LIN12DV+16(10),DW1+3                TO SCREEN
        L     5,48(3)                      MOVE SEQ WRITES HITS
        CVD   5,DW1
        MVC   LIN12DV+44(10),MASK1
        ED    LIN12DV+44(10),DW1+3                TO SCREEN
        XR    4,4                          COMPUTE
        M     4,=F'10000'
        CLC   44(4,3),=F'0'
        BE    *+8
        D     4,44(3)                             % SEQ WRTS HITS
        CVD   5,DW1                        MOVE % SEQ WRITES HITS
        MVC   LIN12DV+66(7),MASK2
        ED    LIN12DV+66(7),DW1+5                 TO SCREEN
        L     5,60(3)                      MOVE FW WRITES
        CVD   5,DW1
        MVC   LIN13DV+16(10),MASK1
        ED    LIN13DV+16(10),DW1+3                TO SCREEN
        L     5,64(3)                      MOVE FW WRITES HITS
        CVD   5,DW1
        MVC   LIN13DV+44(10),MASK1
        ED    LIN13DV+44(10),DW1+3                TO SCREEN
        XR    4,4                          COMPUTE
        M     4,=F'10000'
        CLC   60(4,3),=F'0'
        BE    *+8
        D     4,60(3)                             % FW WRTS HITS
        CVD   5,DW1                        MOVE % SEQ WRITES HITS
        MVC   LIN13DV+66(7),MASK2
        ED    LIN13DV+66(7),DW1+5                 TO SCREEN
        L     6,28(3)                      LOAD NORMAL WRITES
        A     6,44(3)                      ADD SEQ WRITES
        A     6,60(3)                      ADD FW WRITES
        CVD   6,DW1                        MOVE TOTAL WRITES
        MVC   LIN14DV+16(10),MASK1
        ED    LIN14DV+16(10),DW1+3                TO SCREEN
        L     5,32(3)                      LOAD NORMAL WRITES HITS
        A     5,48(3)                      ADD SEQ WRITES HITS
        A     5,64(3)                      ADD FW WRITES HITS
        CVD   5,DW1                        MOVE TOTAL WRITES HITS
        MVC   LIN14DV+44(10),MASK1
        ED    LIN14DV+44(10),DW1+3                TO SCREEN
        XR    4,4                          COMPUTE
        M     4,=F'10000'
        C     6,=F'0'
        BE    *+6
        DR    4,6                                 % TOTAL WRTS HITS
        CVD   5,DW1                        MOVE % TOTAL WRITES HITS
        MVC   LIN14DV+66(7),MASK2
        ED    LIN14DV+66(7),DW1+5                 TO SCREEN
        L     5,68(3)                      MOVE INHIBIT CACHE
        CVD   5,DW1
        MVC   LIN16DV+16(10),MASK1
        ED    LIN16DV+16(10),DW1+3                TO SCREEN
        L     5,72(3)                      MOVE BYPASS CACHE
        CVD   5,DW1
        MVC   LIN16DV+44(10),MASK1
        ED    LIN16DV+44(10),DW1+3                TO SCREEN
        L     5,76(3)                      MOVE NUMBER OF TRACKS SEQ
        CVD   5,DW1                             MIGRATED FROM DASD
        MVC   LIN18DV+16(10),MASK1
        ED    LIN18DV+16(10),DW1+3                TO SCREEN
        L     5,80(3)                      MOVE NUMBER OF TOTAL TRKS
        CVD   5,DW1                             MIGRATED FROM DASD
        MVC   LIN18DV+44(10),MASK1
        ED    LIN18DV+44(10),DW1+3                TO SCREEN
        L     5,84(3)                      MOVE NUMBER OF TOTAL TRKS
        CVD   5,DW1                             MIGRATED TO DASD
        MVC   LIN18DV+66(10),MASK1
        ED    LIN18DV+66(10),DW1+3                TO SCREEN
        L     5,88(3)                      MOVE NUMBER OF NVS FULL
        CVD   5,DW1
        MVC   LIN20DV+16(10),MASK1
        ED    LIN20DV+16(10),DW1+3                TO SCREEN
        MVC   SCRCOPY(80),LIN1DV           MOVE LINES
        MVC   SCRCOPY+160(160),LIN3DV
        MVC   SCRCOPY+400(240),LIN6DV
        MVC   SCRCOPY+640(80),LIN9DV
        MVC   SCRCOPY+800(240),LIN11DV
        MVC   SCRCOPY+1040(80),LIN14DV
        MVC   SCRCOPY+1200(80),LIN16DV
        MVC   SCRCOPY+1360(80),LIN18DV
        MVC   SCRCOPY+1520(80),LIN20DV            TO SCREEN AREA
        B     SEND                         GO TO SEND SCREEN
* PROCESS SUBSYSTEM DATA
SUBS    EQU   *
        MVI   SSGOPT,X'44'                 MOVE SUBSYSTEM OPTIONS
        CLC   VOLUME,=6X'00'               IS VOLUME KEY CLEAR ?
        BE    *+10                         YES. SKIP MOVE
        MVC   VOLSER,VOLUME                MOVE VOLUME KEY TO PARM
        BAL   3,LINKBUFF                   LINK TO CALL
        CLC   RETCDE,=X'0000'              IS CALL OK ?
        BE    *+20                         YES. SKIP
        MVC   VOLSER,=C'MVSCP1'            NO. SET VALID VOLUME
        MVC   VOLUME,=C'MVSCP1'            SET VALID VOLUME
        BAL   3,LINKBUFF                   LINK TO CALL AGAIN
        LA    3,BUFFAREA                   SET R3 WITH CALL AREA
        MVC   LIN1SS+57(1),54(3)           MOVE SUBSYSTEM ID
        MVC   LIN1SS+58(1),54(3)
        MVC   LIN1SS+59(1),55(3)
        MVC   LIN1SS+60(1),55(3)                  TO SCREEN
        TR    LIN1SS+57(1),TAB2            TRANSLATE SUBSYSTEM ID
        TR    LIN1SS+58(1),TAB1
        TR    LIN1SS+59(1),TAB2
        TR    LIN1SS+60(1),TAB1                   ON SCREEN
        XR    4,4                          CLEAR R4
        IC    4,18(3)                      MOVE NUMBER OF DEVICE ON
        CVD   4,DW1                             CONTROL UNIT
        UNPK  LIN3SS+19(3),DW1+6(2)
        MVZ   LIN3SS+19(3),=3C'0'                 TO SCREEN
* CACHE STATUS ANALYSIS
        TM    20(3),B'10000000'
        BNZ   BIT1NZ
        TM    20(3),B'01000000'
        BZ    *+14
        MVC   LIN5SS+19(31),=C'AN INTERNAL ERROR STOPPED CACHE'
        B     CACHSTAT
        TM    20(3),B'00100000'
        BZ    *+14
        MVC   LIN5SS+19(31),=C'CACHING IS PENDING ACTIVE      '
        B     CACHSTAT
        MVC   LIN5SS+19(31),=C'CACHING IS ACTIVE              '
        B     CACHSTAT
BIT1NZ  EQU   *
        TM    20(3),B'01000000'
        BNZ   *+14
        MVC   LIN5SS+19(31),=C'CACHE HAS BEEN DEACTIVATED     '
        B     CACHSTAT
        TM    20(3),B'00100000'
        BZ    *+14
        MVC   LIN5SS+19(31),=C'PENDING OFF FAILURE            '
        B     CACHSTAT
        MVC   LIN5SS+19(31),=C'PENDING OFF IN PROCESS         '
CACHSTAT EQU  *
        TM    20(3),B'00010000'
        BZ    *+10
        MVC   LIN5SS+19(31),=C'CACHE DISABLED FOR MAINTENANCE '
        TM    20(3),B'00000010'
        BZ    *+10
        MVC   LIN5SS+19(31),=C'IML DEVICE NOT AVAILABLE       '
        TM    20(3),B'00000001'
        BZ    *+10
        MVC   LIN5SS+19(31),=C'CACHE FAST WRITE DEACTIVATED   '
* NVS STATUS ANALYSIS
        TM    21(3),B'10000000'
        BZ    NVSB1Z
        TM    21(3),B'01000000'
        BZ    *+14
        MVC   LIN7SS+19(31),=C'PENDING. DESTAGING IN PROCESS  '
        B     FINNVS
        MVC   LIN7SS+19(31),=C'UNAVAILABLE.                   '
        B     FINNVS
NVSB1Z  EQU   *
        TM    21(3),B'01000000'
        BZ    *+14
        MVC   LIN7SS+19(31),=C'STOPPED. INTERNAL ERROR        '
        B     FINNVS
        MVC   LIN7SS+19(31),=C'ACTIVE                         '
FINNVS  EQU   *
        TM    21(3),B'00010000'
        BZ    *+10
        MVC   LIN7SS+19(31),=C'DISABLED FOR MAINTENANCE       '
        TM    21(3),B'00001000'
        BZ    *+10
        MVC   LIN7SS+19(31),=C'PENDING FOR ERRORS             '
        CLI   26(3),X'FF'
        BNE   CACHCAP
        MVC   LIN9SS+19(5),=C'N / A'
        MVC   LIN9SS+47(5),=C'N / A'
        MVC   LIN11SS+19(5),=C'N / A'
        MVC   LIN11SS+47(5),=C'N / A'
        B     NVSCAP
* CACHE CAPACITY
CACHCAP EQU   *
        MVC   DW1,26(3)                    MOVE CACHE CAPACITY
        L     4,DW1
        CVD   4,DW1
        MVC   LIN9SS+19(10),MASK1
        ED    LIN9SS+19(10),DW1+3                  TO SCREEN
        MVC   DW1,30(3)                    MOVE CACHE AVAILABLE
        L     4,DW1
        CVD   4,DW1
        MVC   LIN9SS+52(10),MASK1
        ED    LIN9SS+52(10),DW1+3                  TO SCREEN
        MVC   DW1,34(3)                    MOVE PINNED SPACE
        L     4,DW1
        CVD   4,DW1
        MVC   LIN11SS+19(10),MASK1
        ED    LIN11SS+19(10),DW1+3                 TO SCREEN
        MVC   DW1,38(3)                    MOVE OFFLINE CACHE
        L     4,DW1
        CVD   4,DW1
        MVC   LIN11SS+52(10),MASK1
        ED    LIN11SS+52(10),DW1+3                 TO SCREEN
NVSCAP  EQU   *
        MVC   DW1,44(3)                    MOVE NVS CAPACITY
        L     4,DW1
        CVD   4,DW1
        MVC   LIN13SS+19(10),MASK1
        ED    LIN13SS+19(10),DW1+3                 TO SCREEN
        CLI   44(3),X'FF'                  IS ADDRESS ?
        BNE   NVSPCAP                      NO. GO TO PINNED NVS
        MVC   LIN13SS+52(5),=C'N / A'      YES. MOVE NOT APPLICABLE
        B     FINNVSC                      GO TO END OF NVS
NVSPCAP EQU   *
        MVC   DW1,48(3)                    MOVE PINNED NVS
        L     4,DW1
        CVD   4,DW1
        MVC   LIN13SS+52(10),MASK1
        ED    LIN13SS+52(10),DW1+3                 TO SCREEN
FINNVSC EQU   *
        MVC   SCRCOPY(80),LIN1SS           MOVE DETAIL LINES
        MVC   SCRCOPY+160(80),LIN3SS
        MVC   SCRCOPY+320(80),LIN5SS
        MVC   SCRCOPY+480(80),LIN7SS
        MVC   SCRCOPY+640(80),LIN9SS
        MVC   SCRCOPY+800(80),LIN11SS
        MVC   SCRCOPY+960(80),LIN13SS              TO SCREEN
        B     SEND                         GO TO SEND SCREEN
* ROUTINE FOR CLEAR SCREEN
CLRSCR  EQU   *
        XC    SCRCOPY(255),SCRCOPY
        XC    SCRCOPY+255(255),SCRCOPY+255
        XC    SCRCOPY+510(255),SCRCOPY+510
        XC    SCRCOPY+765(255),SCRCOPY+765
        XC    SCRCOPY+1020(255),SCRCOPY+1020
        XC    SCRCOPY+1275(255),SCRCOPY+1275
        XC    SCRCOPY+1530(255),SCRCOPY+1530
        XC    SCRCOPY+1785(54),SCRCOPY+1785
        BR    3
* ROUTINE FOR CALL TO DFP
LINKBUFF EQU  *
        LA    1,PARMLIST                    (1) = PARMLIST ADDRESS
        LINK  EP=IDCSS01                    CALL TO DFP
        CLC   RETCDE,=X'0000'               IS OK ?
        BCR   8,3                           YES. RETURN TO R3
        CLC   RETCDE,=X'000C'               IS RETCDE = X'000C' ?
        BNE   MOVEERR                       NO GO TO MOVE ERROR
* ERASE "*" OF COL 1 ON NEXT SENTENCES FOR DEBUGGING
*       MVC   SCRCOPY+1826(1),SSGUNIT+3
*       TR    SCRCOPY+1826(1),TAB1
        TM    SSGUNIT+3,X'01'               IS 3380 ?
        BZ    *+12                          YES. SET TO 3390
        NI    SSGUNIT+3,X'FE'               NO. SET TO 3380
        B     *+8                           GO TO CALL
        OI    SSGUNIT+3,X'01'               SET TO 3390
        LA    1,PARMLIST                    (1) = PARMLIST ADDRESS
        LINK  EP=IDCSS01                    CALL TO DFP
* ERASE "*" OF COL 1 ON NEXT SENTENCES FOR DEBUGGING
*       MVC   SCRCOPY+1827(1),SSGUNIT+3
*       TR    SCRCOPY+1827(1),TAB1
        NI    SSGUNIT+3,X'FE'               SET TO 3380
        CLC   RETCDE,=X'0000'               IS OK ?
        BCR   8,3                           YES. RETURN TO R3
MOVEERR EQU   *
        MVC   SCRCOPY+1800(21),=C'ERROR EN LINK RETCDE:' MOVE MSG ERR
        LH    4,RETCDE                      MOVE ERROR CODE
        CVD   4,DW1
        UNPK  SCRCOPY+1822(3),DW1+6(2)
        MVZ   SCRCOPY+1822(3),=3C'0'
        MVC   SCRCOPY+1828(1),SSGUNIT+3
        TR    SCRCOPY+1828(1),TAB1                   TO SCREEN
        BR    3                             RETURN TO R3
RETURN  EQU   *
        RETURN (14,12),T,RC=0               RETURN TO CALLER
* CONSTANTS
DW1     DS    D               WORKAREA
TOTUCNVS DS   F               TOTAL CONTROL UNIT FULL NVS
TOTUCR  DS    F               TOTAL CONTROL UNIT READ
TOTUCRH DS    F               TOTAL CONTROL UNIT READ HIT
TOTUCW  DS    F               TOTAL CONTROL UNIT WRITE
TOTUCWH DS    F               TOTAL CONTROL UNIT WRITE HIT
TOTDEVR DS    F               TOTAL DEVICE READ
TOTDEVRH DS   F               TOTAL DEVICE READ HIT
TOTDEVW DS    F               TOTAL DEVICE WRITE
TOTDEVWH DS   F               TOTAL DEVICE WRITE HIT
SAVE    DS    18F             SAVE AREA
PARMLIST DS   0F              START OF PARAMETER LIST FOR LINK
WORD1   DC    F'0'            WORD1 MUST BE ZERO
WORD2   DC    A(ARGPTR)       POINTER TO WORD WITH ADDRESS OF SSGARGL
WORD3   DC    A(RETCDE)       POINTER TO 2-BYTE RETURN CODE
ARGPTR  DC    A(ARGLIST)      POINTER TO SSARGL
RETCDE  DS    CL2             RETURN CODE FROM LINK
UCID    DS    H               UNIT CONTROL IDENTIFICATION
ARGLIST DS    0F              START OF ARGUMENT LIST SSARGL
SSGHEAD DS    CL8             WORKAREA WILL BE SET FOR IDCSS01
SSGADDN DC    F'0'            ADDR OF DDNAME ZERO IN THIS CASE
SSGAVOL DC    A(VOLSER)       ADDR OF VOLUME SERIAL
SSGUNIT DC    X'3010200E'     UNIT TYPE 3380. X'3010200F' = 3390
SSGOLN  DC    F'8192'         LENGTH OF BUFFER AREA
SSGOADR DC    A(BUFFAREA)     ADDR OF BUFFER AREA
SSGOPT  DC    X'88'           REQUEST TYPE X'88' COUNTS ALL
        DS    C               RESERVED      X'44' SUBSYSTEM SPECIFIED
SSGMDLID DS   C               SUBSYSTEM IDENTIFIER
SSGRCIOS DS   C               IOS RETURN CODE
VOLSER  DC    C'MVSCP1'       VOLUME SERIAL OF INSTALLATION
VOLMARK DC    C' '            FLAG FOR SEND VOLUME
MASK1   DC    X'40202020202020202120'    MASK FOR EDIT TOTALS
MASK2   DC    X'402021204B2020'          MASK FOR EDIT %
* DETAIL LINES FOR CONTROL UNITS WITH VOLUMES
LIN1UC  DC    CL80'         CACHE MEMORY ANALYSIS                CONTRX
              OL UNIT.....:       '
LIN3UC  DC    CL80'TOT R:           %RHIT:       TOT W:            %WHX
              IT:         NVS FULL:        '
LIN5UC  DC    CL80'VOLUME  TOT READ %RHIT  TOT WRIT %WHIT  VOLUME  TOTX
               READ %RHIT  TOT WRIT %WHIT'
* DETAIL LINES FOR SUBSYSTEM STATUS
LIN1SS  DC    CL80'         CACHE MEMORY ANALYSIS                SUBSYX
              STEM:                        '
LIN3SS  DC    CL80'NUMBER OF DEVICES:                                 X
                                           '
LIN5SS  DC    CL80'CACHE STATUS.....:                                 X
                                           '
LIN7SS  DC    CL80'NVS STATUS.......:                                 X
                                           '
LIN9SS  DC    CL80'CACHE CAPACITY...:                 AVAILABLE:CACHE:X
                                           '
LIN11SS DC    CL80'PINNED SPACE.....:                 OFFLINE CACHE..:X
                                           '
LIN13SS DC    CL80'NVS CAPACITY.....:                 NVS PINNED.....:X
                                           '
* DETAIL LINES FOR VOLUMES SPECIFIC
LIN1DV  DC    CL80'        CACHE MEMORY ANALYSIS                 VOLUMX
              E.:                '
LIN3DV  DC    CL80'CONTROL UNIT.....:     ADDRESS..:      STATUS:     X
                                    '
LIN4DV  DC    CL80'CACHE:      FAST/W:     DUPLEX:        DUPL-STAT:  X
                  PINNED:     ADR:      '
LIN6DV  DC    CL80'READ NORMAL...:            READ HIT.......:        X
                    % HIT...:           '
LIN7DV  DC    CL80'READ SEQUENT..:            READ SEQ HIT..:         X
                    % HIT...:           '
LIN8DV  DC    CL80'READ CACHE....:            READ CACHE HIT:         X
                    % HIT...:           '
LIN9DV  DC    CL80'TOTAL READ....:            TOTAL READ HIT:         X
                    % HIT...:           '
LIN11DV DC    CL80'WRITE NORMAL..:            WRITE HIT.....:         X
                    % HIT...:           '
LIN12DV DC    CL80'WRITE SEQ.....:            WRITE SEQ HIT.:         X
                    % HIT...:           '
LIN13DV DC    CL80'FAST WRITE REQ:            FAST WRITE HIT:         X
                    % HIT...:           '
LIN14DV DC    CL80'TOTAL WRITE...:            TOT WRITE HIT.:         X
                    % HIT...:           '
LIN16DV DC    CL80'INHIBIT CACHE.:            BYPASS CACHE..:         X
                                        '
LIN18DV DC    CL80'SEQ FROM DASD.:            TOT FROM DASD.:         X
                    TO DASD.:           '
LIN20DV DC    CL80'TOT NVS FULL..:                                    X
                                        '
* CONSTANT FOR SCREEN
SCREEN  EQU   *
        DC    X'F5C7'
ATTR1   DC    X'1140401DF4'
SCRCOPY DC    1839X'40'
DEFPFKS DC    CL72'ENT=<REFR> PF3=END PF4=STATUS PF5=NXT UC PF6=NXT VOX
              L PF7+VOL="VOL ST"-->'
        DC    X'1D4013'
VOL     DC    CL6' '
        DC    X'1D60'
        DC    C' '
LENS    EQU   *-SCREEN
* INPUT DATA
INPDATA DS    0CL12
AID     DS    C
AIDADDR DS    CL2
VOLADDR DS    CL3
VOLUME  DS    CL6
        DS    0F
TABLE   DS    0XL256            TABLE FOR TRANSLATE ALPHANUMERIC
        DC    64X'40'
        DC    XL16'40404040404040404040404B4C4D4040'
        DC    XL16'404040404040404040404040405D4040'
        DC    XL16'6061404040404040404040406C406E4F'
        DC    XL16'404040404040404040407A4040407E40'
        DC    XL16'408182838485868788898A8B8C8D8E8F'
        DC    XL16'909192939495969798999A9B9C9D9E9F'
        DC    XL16'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
        DC    XL16'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
        DC    XL16'C0C1C2C3C4C5C6C7C8C9CA4040404040'
        DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'
        DC    XL16'E0E1E2E3E4E5E6E7E8E9404040404040'
        DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'
TAB1    DC    16X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6' TABLE FOR NIBBLE 2
TAB2    DC    16X'F0'                               TABLE FOR NIBBLE 1
        DC    16X'F1'
        DC    16X'F2'
        DC    16X'F3'
        DC    16X'F4'
        DC    16X'F5'
        DC    16X'F6'
        DC    16X'F7'
        DC    16X'F8'
        DC    16X'F9'
        DC    16X'C1'
        DC    16X'C2'
        DC    16X'C3'
        DC    16X'C4'
        DC    16X'C5'
        DC    16X'C6'
WRK24   DC    CL24' '         WORKAREA FOR DEBUGGING
        LTORG                 WARNING. LTORG MUST BE SET HERE
        DS    0F
* BUFFER AREA WITH NO ADDRESSING
BUFFAREA DS   4CL2048
        END

Nestor Lacabe
Systems Programmer
Sevel Argentina SA (Argentina)                 c Xephon 1996

