JES2 enhanced information reporting


INTRODUCTION

The accompanying TSO/ISPF application provides extensions
to existing JES2 console commands and furnishes a basis for
adding further information retrieval capabilities.  As supplied,
the application (entitled JIDS for JES2 Information Display
Service) extracts a subset of JQE-based information for
reporting purposes.  It provides the following extensions to
console-based commands:

1      The 'job name' field can be masked with leading,
      imbedded, or trailing '*'s (to mask a single character), or
      trailing '-'s (to mask trailing characters).

2      The number of track groups can be explicitly specified, as
      opposed to a percentage of spool as in the
      '$DSPOOL,JOBS=' console command.  This is useful
      when it is desirable to know the amount of spool occupied
      by jobs using less than 1%.  The field is treated as a
      threshold, ie jobs using a number of track groups equal to
      or greater than the number specified are displayed.

3      The total number of track groups for jobs selected is
      provided at the end of the display.

4      For maximum performance, all possible processing is done
      in memory.  The output screen is memory-resident and is
      accessed using the ISPF BRIF (browse interface) service;
      thus ISPF browse commands and facilities are available.

To install JIDS, proceed as follows:

1      Allocate a source-type library and create each module
      designated as a 'member' below with the name given, eg
      JIDS, JIDSFLDS, etc.

2      Move member JIDS0001 to your ISPF panel library, and
      JIDS01 to your message library.

3      Add an entry for JIDS to the desired primary option panel.
      This might appear similar to the following:

      %Select option ===>_ZCMD    +
      %
      % J    +JIDS
      %
      )PROC
        &ZSEL = TRANS( TRUNC (&ZCMD,'.')
                      J,'PGM(JIDS)'
      )END

4      Assemble members JIDS and JIDSREAD separately and
      link-edit them together into a load library accessible to
      your TSO session, specifying a member name of JIDS and
      an entry point of JIDS.  For the assembly, make the usual
      MVS macro libraries, the JES2 HASPSRC library, and the
      JIDS source library which you have just created available
      on SYSLIB.  Link-edit parameters should include
      'RENT,AMODE=31,RMODE=ANY'.  In addition, the
      program must be APF-authorized to allow use of cross
      memory services - consult the TSO Customization or
      equivalent manual for information on how to accomplish this.

5      Exit and re-enter ISPF and select the JIDS option from the
      primary option panel.


JIDS mainline member

 TITLE 'J I D S - JES2 INFORMATION DISPLAY SERVICE'
         MACRO
&NAME    LABEL
&NAME    MVC   LABEL,=CL8'&NAME'
         MEND
         COPY $HASPGBL
$DSECTS  $MODULE $HCT,$JQE,$SVT
         $MODEND
         DROP
JIDS     AMODE 31
JIDS     RMODE ANY
JIDS     CSECT
         STM   R14,R12,12(R13)          LINKAGE
         LR    R12,R15
         USING JIDS,R12
         GETMAIN RU,LV=WORKLEN
         LR    R2,R1
         LR    R0,R1
         L     R1,=A(WORKLEN)
         LA    R14,0
         LA    R15,0
         MVCL  R0,R14                   ZERO THE WORKAREA
         ST    R13,4(R2)
         ST    R2,8(R13)
         LR    R13,R2
         USING WORKAREA,R13
         LA    R2,BRIFWORK              BRIF ROUTINES WORK AREA ADDRESS
         ST    R2,DLGDATA               DIALOG DATA PARAMETER
* VDEFINE VARIABLES *
         LOAD  EP=ISPLINK               FIND ISPF SERVICE ROUTINE
         ST    R0,ISPLINK               SAVE ITS ADDRESS
         LR    R15,R0
         CALL  (15),(=CL8'VDEFINE',=CL8'LABEL',LABEL,=CL8'CHAR',=F'8'),X
               VL,MF=(E,CALLLIST)
         LA    R10,0                    INITIALIZE HCT BASE REGISTER
         LA    R9,0                     INITIALIZE JQE BASE REGISTER
* INITIALIZE ADDITIONAL FIELDS *
JIDS0040 DS    0H                       PATTERN FIELDS
         LA    R0,PATTERND              TARGET ADDRESS
         LA    R1,PATTERNL              LENGTH
         LA    R14,PATTERNC             SOURCE ADDRESS
         LR    R15,R1                   SAME LENGTH
         MVCL  R0,R14                   MOVE PATTERN
* DISPLAY THE JIDS PANEL *
         L     R15,ISPLINK              ISPF ADDRESS
         CALL (15),(=CL8'DISPLAY',=CL8'JIDS0001',MSGID,=CL8'JQEJNAME'),X
               VL,MF=(E,CALLLIST)
         B     *+4(R15)
         B     JIDS0100                 OK
         B     JIDS0100                 WON'T HAPPEN
         B     JIDS9000                 TERMINATION REQUESTED
* GET THE PANEL VARIABLES *
JIDS0100 DS    0H
         L     R15,ISPLINK              ISPF ADDRESS
         CALL (15),(=CL8'VCOPY',NAMES40,LENS40,PTRS40),                X
               VL,MF=(E,CALLLIST)
         ICM   R2,15,LENS40+00          ANY JES2SSNM ENTERED?
         BZ    JIDS0110                 NO
         MVC   JES2SSNM,BLANKS          BLANK TARGET FIELD
         LA    R14,JES2SSNM             TARGET FIELD ADDRESS
         L     R15,PTRS40+00            SOURCE FIELD ADDRESS
         BCTR  R2,0                     DECREMENT LENGTH FOR EXECUTE
         EX    R2,EXMVC                 MOVE JES2SSNM
JIDS0110 DS    0H
         ICM   R2,15,LENS40+04          ANY JQEJNAME ENTERED?
         BZ    JIDS0120                 NO
         MVC   JIDJNAME,BLANKS          BLANK TARGET FIELD
         LA    R14,JIDJNAME             TARGET FIELD ADDRESS
         L     R15,PTRS40+04            SOURCE FIELD ADDRESS
         BCTR  R2,0                     DECREMENT LENGTH FOR EXECUTE
         EX    R2,EXMVC                 MOVE JQEJNAME
JIDS0120 DS    0H
         ICM   R2,15,LENS40+08          ANY JQEJOBNO ENTERED?
         BZ    JIDS0125                 NO
         LA    R14,WORK                 TARGET FIELD ADDRESS
         L     R15,PTRS40+08            SOURCE FIELD ADDRESS
         BCTR  R2,0                     DECREMENT LENGTH FOR EXECUTE
         EX    R2,EXPACK                PACK THE FIELD
         CVB   R2,0(R14)                CONVERT TO HEX.
         STH   R2,JIDJOBNO              STORE
JIDS0125 DS    0H
         ICM   R2,15,LENS40+12          ANY JQE3JOB ENTERED?
         BZ    JIDS0130                 NO
         MVC   JID3JOB,BLANKS           BLANK TARGET FIELD
         LA    R14,JID3JOB              TARGET FIELD ADDRESS
         L     R15,PTRS40+12            SOURCE FIELD ADDRESS
         BCTR  R2,0                     DECREMENT LENGTH FOR EXECUTE
         EX    R2,EXMVC                 MOVE JQE3JOB
JIDS0130 DS    0H
         ICM   R2,15,LENS40+16          ANY JQETYPE ENTERED?
         BZ    JIDS0150                 NO
         MVC   JIDTYPE,BLANKS           BLANK TARGET FIELD
         LA    R14,JIDTYPE              TARGET FIELD ADDRESS
         L     R15,PTRS40+16            SOURCE FIELD ADDRESS
         BCTR  R2,0                     DECREMENT LENGTH FOR EXECUTE
         EX    R2,EXMVC                 MOVE JQETYPE
JIDS0150 DS    0H
         ICM   R2,15,LENS40+20          ANY JQETGNUM ENTERED?
         BZ    JIDS1000                 NO
         LA    R14,WORK                 TARGET FIELD
         L     R15,PTRS40+20            SOURCE FIELD
         BCTR  R2,0                     DECREMENT LENGTH FOR EXECUTE
         EX    R2,EXPACK                PACK THE FIELD
         CVB   R2,0(R14)                CONVERT TO HEX.
         STH   R2,JIDTGNUM              STORE
* FIND THE SSCVT FOR THE REQUESTED JES *
JIDS1000 DS    0H
         L     R11,CVTPTR               CVT
JIDS1010 LABEL
         ICM   R11,15,CVTJESCT-CVT(R11) JESCT
         BZ    JIDS8020                 NOT THERE
         USING JESCT,R11
JIDS1020 LABEL
         ICM   R11,15,JESSSCT           FIRST SSCVT
         BZ    JIDS8020                 NOT THERE
         USING SSCT,R11
JIDS1050 DS    0H
         CLC   JES2SSNM,SSCTSNAM        THE ONE WE WANT?
         BE    JIDS1200                 YES
JIDS1060 LABEL
         ICM   R11,15,SSCTSCTA          NEXT SSCVT
         BZ    JIDS8020                 NO MORE LEFT
         B     JIDS1050                 RECYCLE
* GET THE SSVT AND DETERMINE IF IT'S FOR A JES2 SUBSYSTEM *
JIDS1200 LABEL
         ICM   R11,15,SSCTSSVT          SSVT
         BZ    JIDS8020                 NOT THERE
         USING SVT,R11
JIDS1210 LABEL
         ICM   R2,15,SVTSOUT            GET PROCESS SYSOUT RTN. ADDR
         BZ    JIDS8060                 ZERO, NOT LIKELY A JES2 SUBSYS
JIDS1220 LABEL
         CLC   =C'$$$$H',4(R2)          JES2 MODULE NAME CONVENTION?
         BNE   JIDS8060                 NO, NOT LIKELY A JES2 SUBSYS
* GET THE HCT *
         LTR   R10,R10                  HCT ALREADY GOT?
         BNZ   JIDS1240                 YES, SKIP RETRIEVAL
         L     R2,SVTASCB               JES2 ASCB ADDRESS
         LH    R2,ASCBASID-ASCB(R2)     JES2 ASID
         L     R3,SVTHCT                GET HCT ADDRESS
         L     R4,=A($HCTLEN)           GET HCT LENGTH
         LA    R5,$HCTAREA              LOAD ADDRESS OF DESTINATION
         BAL   R14,XMSFETCH             GET THE HCT
         LTR   R15,R15                  OK?
         BNZ   JIDS8080                 NO
         LA    R10,$HCTAREA
         USING HCT,R10
* GET OUTPUT RESULTS SCREEN STORAGE *
JIDS1240 DS    0H
         ICM   R0,15,JIDSORSA           STORAGE ALREADY GOT?
         BNZ   JIDS1260                 YES, SKIP GETMAIN
         LH    R2,$MAXJOBS              GET MAX. JOBS
         MH    R2,RECLEN+2              MULTIPLY BY RECORD LENGTH
         LA    R2,JIDSHDGL(R2)          ADD LENGTH OF HEADERS
         LA    R2,JIDSTRLL(R2)          AND TRAILERS
         ST    R2,JIDSORTL              STORE TOTAL LENGTH
         GETMAIN RU,LV=(R2)             GET STORAGE
         ST    R1,JIDSORSA              OUTPUT RESULTS START ADDR.
         LR    R0,R1                    LOAD STORAGE ADDRESS
JIDS1260 DS    0H
         L     R1,JIDSORTL              LOAD LENGTH
         LA    R14,0
         ICM   R15,15,=X'40000000'      BLANK PAD
         MVCL  R0,R14                   BLANK OBTAINED STORAGE
         L     R0,JIDSORSA              TARGET ADDRESS
         LA    R1,JIDSHDGL              LENGTH TO MOVE
         LA    R14,JIDSHDG              SOURCE ADDRESS
         LR    R15,R1                   SAME LENGTH
         MVCL  R0,R14                   MOVE HEADERS
         L     R2,JIDSORSA              OUTPUT RESULTS START ADDR.
         LA    R2,JIDSHDGL(R2)          START OF OUTPUT ENTRIES
         ST    R2,JIDSORCA              SAVE ADDRESS
* GET JQE AND JQE EXTENSION STORAGE *
         LTR   R9,R9                    STORAGE ALREADY GOT?
         BNZ   JIDS1270                 YES
         LH    R2,$JQELEN               GET JQE LENGTH
         MH    R2,$MAXJOBS              TIMES NO. OF JOBS
         ST    R2,JQESLEN               STORE LENGTH
         AH    R2,$MAXEXSZ              ADD SIZE OF EXTENSION AREA
         GETMAIN RU,LV=(R2)             GET STORAGE
         ST    R1,JQESADDR              STORE JQE ADDRESS
         A     R1,JQESLEN
         ST    R1,JQEXADDR              STORE JQE EXTENSION ADDRESS
* GET ALL JQE'S *
JIDS1270 DS    0H
         L     R2,$HASCB                JES2 ASCB ADDRESS
         LH    R2,ASCBASID-ASCB(R2)     JES2 ASID
         L     R3,$JOBQPTR              JOB QUEUE POINTER
         L     R4,JQESLEN               LENGTH OF ALL JQE'S
         L     R5,JQESADDR              TARGET ADDRESS
         BAL   R14,XMSFETCH             GET ALL JQE'S
         LTR   R15,R15                  OK?
         BNZ   JIDS8080                 NO
* GET JQE EXTENSIONS *
         L     R2,$HASCB                JES2 ASCB ADDRESS
         LH    R2,ASCBASID-ASCB(R2)     JES2 ASID
         L     R3,$JQEEXT               JOB QUEUE EXTENSION POINTER
         LH    R4,$MAXEXSZ              LENGTH OF EXTENSION AREA
         L     R5,JQEXADDR              TARGET ADDRESS
         BAL   R14,XMSFETCH             GET ALL JQE'S
         LTR   R15,R15                  OK?
         BNZ   JIDS8080                 NO
         L     R9,JQESADDR              START OF JQE'S
         USING JQE,R9
         LA    R8,0                     INITIALIZE JOB COUNTER
* CHECK JQE'S *
* COMPARE JOB NAMES *
JIDS1300 DS    0H
         CLI   JQETYPE,$FREE            ON FREE QUEUE?
         BE    JIDS2000                 YES, IGNORE
         CLC   =H'0',JQEJOBNO           JOB NUMBER OF 0?
         BE    JIDS2000                 YES, IGNORE
         CLC   JIDJNAME,ZEROS           ANY JOB NAME SPECIFIED?
         BE    JIDS1400                 NO, ANYTHING QUALIFIES
         LA    R2,JIDJNAME              FIRST COMPARE FIELD
         LA    R3,JQEJNAME              SECOND COMPARE FIELD
         LA    R4,L'JIDJNAME            LENGTH TO COMPARE
         BAL   R14,FLDCOMP              COMPARE FIELDS
         LTR   R15,R15                  MATCH?
         BNZ   JIDS2000                 NO, IGNORE
* COMPARE JOB NUMBERS *
JIDS1400 DS    0H
         CLC   JIDJOBNO,ZEROS           ANY JOB NUMBER SPECIFIED?
         BE    JIDS1410                 NO, ANYTHING QUALIFIES
         CLC   JIDJOBNO,JQEJOBNO        MATCH?
         BNE   JIDS2000                 NO, IGNORE
* COMPARE JOB TYPES *
JIDS1410 DS    0H
         CLC   JID3JOB,ZEROS            ANY JOB TYPE SPECIFIED?
         BE    JIDS1610                 NO, ANYTHING QUALIFIES
         CLC   =C'JOB',JID3JOB          'JOB' TYPE SPECIFIED?
         BNE   JIDS1420                 NO
         TM    JQEFLAG3,JQE3JOB         'JOB' TYPE JQE?
         BNZ   JIDS2000                 NO, IGNORE
         B     JIDS1610                 YES
JIDS1420 DS    0H
         CLC   =C'STC',JID3JOB          'STC' TYPE SPECIFIED?
         BNE   JIDS1430                 NO
         TM    JQEFLAG3,JQE3STC         'STC' TYPE JQE?
         BNO   JIDS2000                 NO, IGNORE
         B     JIDS1610                 YES
JIDS1430 DS    0H
         CLC   =C'TSU',JID3JOB          'TSU' TYPE SPECIFIED?
         BNE   JIDS1440                 NO, SHOULDN'T HAPPEN
         TM    JQEFLAG3,JQE3TSU         'TSU' TYPE JQE?
         BNO   JIDS2000                 NO, IGNORE
         B     JIDS1610                 YES
JIDS1440 DS    0H
         ABEND 0
* COMPARE LOGICAL QUEUE TYPES *
JIDS1610 DS    0H
         CLC   JIDTYPE,ZEROS            ANY LOGICAL QUEUE SPECIFIED?
         BE    JIDS1660                 NO, ANYTHING QUALIFIES
         LA    R2,QTYPETAB              POINT TO QUEUE TYPE TABLE
JIDS1620 DS    0H
         CLC   JIDTYPE,0(R2)            MATCH?
         BE    JIDS1630                 YES
         LA    R2,8(R2)                 NEXT TABLE ENTRY
         CLI   0(R2),0                  END OF TABLE?
         BNE   JIDS1620                 NO
         ABEND 1                        SHOULDN'T HAPPEN
JIDS1630 DS    0H
         CLC   JQETYPE,7(R2)            COMPARE TYPE CODES
         BE    JIDS1660                 MATCH, PROCEED
         MVC   WORK(1),JQETYPE          MOVE JQETYPE BYTE
         TM    WORK,$XEQ                EXECUTION QUEUE?
         BZ    JIDS1640                 NO
         NI    WORK,$XEQ                YES, ZERO OTHER BITS
JIDS1640 DS    0H
         LA    R3,0                     CLEAR R3
         IC    R3,7(R2)                 GET TABLE TYPE CODE
         LA    R14,WORK                 POINT TO JQETYPE
         EX    R3,EXTM                  TEST FOR MATCHING BIT(S)
         BZ    JIDS2000                 NONE, IGNORE
* COMPARE NUMBER OF TRACK GROUPS *
JIDS1660 DS    0H
         CLC   JIDTGNUM,ZEROS           ANY TRACK GRP. VALUE SPECIFIED?
         BE    JIDS1800                 NO, ANYTHING QUALIFIES
         LH    R2,JQETGNUM              GET JQE TRACK GROUPS OR OFFSET
         TM    JQEFLAG5,JQE5XUSD        EXTENSION USED FOR TRK. GRPS.?
         BZ    JIDS1670                 NO
         AL    R2,JQEXADDR              YES, POINT TO EXTENSION
         TM    $JEXTTGN(R2),X'80'       VALID TRACK GROUP VALUE?
         BO    JIDS2000                 NO, IGNORE
         LH    R2,$JEXTTGN(R2)          GET TRACK GROUPS
JIDS1670 DS    0H
         CH    R2,JIDTGNUM              COMPARE TRACK GROUP VALUES
         BL    JIDS2000                 JQE IS LOWER, IGNORE
* QUALIFYING JQE FOUND, MOVE FIELDS TO OUTPUT RESULTS SCREEN AREA *
JIDS1800 DS    0H
         AP    JIDSJQEC,=P'1'           INCREMENT QUALIFYING JQE CTR.
         L     R2,JIDSORCA              OUTPUT RESULTS CURRENT ADDR.
* MOVE JOB NAME *
         MVC   00(L'JQEJNAME,R2),JQEJNAME MOVE JOB NAME
* MOVE JOB NUMBER *
         LH    R3,JQEJOBNO              GET JOB NUMBER
         CVD   R3,WORK                  CONVERT TO PACKED
         MVC   11(6,R2),EDTPTRN1        MOVE EDIT PATTERN
         ED    11(6,R2),WORK+5          EDIT JOB NUMBER
* MOVE JOB TYPE *
         TM    JQEFLAG3,JQE3JOB         'JOB' TYPE?
         BZ    JIDS1810                 YES
         TM    JQEFLAG3,JQE3STC         'STC' TYPE?
         BO    JIDS1820                 YES
         TM    JQEFLAG3,JQE3TSU         'TSU' TYPE?
         BO    JIDS1830                 YES
         MVC   19(3,R2),=C'???'
         B     JIDS1900
JIDS1810 DS    0H
         MVC   21(3,R2),=C'JOB'
         B     JIDS1900
JIDS1820 DS    0H
         MVC   21(3,R2),=C'STC'
         B     JIDS1900
JIDS1830 DS    0H
         MVC   21(3,R2),=C'TSU'
         B     JIDS1900
* MOVE QUEUE TYPE *
JIDS1900 DS    0H
         LA    R3,QTYPETAB
JIDS1910 DS    0H
         CLC   JQETYPE,7(R3)            QUEUE TYPE CODES MATCH?
         BE    JIDS1920                 YES
         MVC   WORK(1),JQETYPE          MOVE JQETYPE BYTE
         TM    WORK,$XEQ                EXECUTION QUEUE?
         BZ    JIDS1915                 NO
         NI    WORK,$XEQ                YES, ZERO OTHER BITS
JIDS1915 DS    0H
         LA    R4,0                     CLEAR R4
         IC    R4,7(R3)                 GET TABLE TYPE CODE
         LA    R14,WORK                 POINT TO JQETYPE
         EX    R4,EXTM                  TEST FOR MATCHING BIT(S)
         BO    JIDS1920                 MATCH FOUND
         LA    R3,8(R3)
         CLI   0(R3),0                  END OF TABLE?
         BNE   JIDS1910                 NO
         MVC   29(3,R2),=C'???'         INDICATE UNKNOWN QUEUE TYPE
         B     JIDS1930
JIDS1920 DS    0H
         MVC   29(7,R2),0(R3)           MOVE QUEUE TYPE
* MOVE NUMBER OF TRACK GROUPS *
JIDS1930 DS    0H
         LH    R3,JQETGNUM              GET NO. OF TRACK GROUPS
         TM    JQEFLAG5,JQE5XUSD        EXTENSION USED FOR TRK. GRPS.?
         BZ    JIDS1940                 NO
         AL    R3,JQEXADDR              YES, POINT TO EXTENSION
         TM    $JEXTTGN(R3),X'80'       VALID TRACK GROUP VALUE?
         BZ    JIDS1935                 YES
         MVC   47(3,R2),=C'N/A'         NO, MOVE 'NOT AVAILABLE'
         B     JIDS1950
JIDS1935 DS    0H
         LH    R3,$JEXTTGN(R3)          GET TRACK GROUPS
JIDS1940 DS    0H
         CVD   R3,WORK                  CONVERT TO PACKED
         MVC   44(6,R2),EDTPTRN1        MOVE EDIT PATTERN
         ED    44(6,R2),WORK+5          EDIT NO. OF TRACK GROUPS
         A     R3,TGTOTAL               ADD RUNNING TOTAL
         ST    R3,TGTOTAL               STORE BACK
JIDS1950 DS    0H
         AH    R2,RECLEN+2              BUMP CURRENT ADDR. BY REC. LEN.
         ST    R2,JIDSORCA              UPDATE
* CHECK IF ALL JQE'S PROCESSED *
JIDS2000 DS    0H
         LA    R8,1(R8)                 INCREMENT JOB NUMBER
         CH    R8,$MAXJOBS              AT LIMIT?
         BNL   JIDS2100                 YES
         AH    R9,$JQELEN               NEXT JQE
         B     JIDS1300                 REPEAT
* COMPLETE THE OUTPUT RESULTS SCREEN *
JIDS2100 DS    0H
         L     R0,JIDSORCA              TARGET ADDRESS
         LA    R1,JIDSTRLL              LENGTH OF TRAILERS
         LA    R14,JIDSTRL              SOURCE ADDRESS
         LR    R15,R1                   SAME LENGTH
         MVCL  R0,R14                   MOVE TRAILERS
         ST    R0,JIDSOREA              STORE OUTPUT RESULTS END ADDR.
         L     R2,JIDSORCA
         L     R3,TGTOTAL               GET TRACK GROUP TOTAL
         CVD   R3,WORK                  CONVERT TO DECIMAL
         MVC   JIDSTRLT-JIDSTRL+44(6,R2),EDTPTRN1 MOVE EDIT PATTERN
         ED    JIDSTRLT-JIDSTRL+44(6,R2),WORK+5   EDIT TRACK GRP. TOTAL
         MVC   JIDSTRLN-JIDSTRL+28(6,R2),EDTPTRN1 MOVE EDIT PATTERN
         ED    JIDSTRLN-JIDSTRL+28(6,R2),JIDSJQEC EDIT JQE COUNTER
* CALL THE ISPF BROWSE INTERFACE SERVICE *
         XC    CALLLIST(CALLLISL),CALLLIST ZERO THE PARM LIST
         L     R15,ISPLINK              LOAD ROUTINE ADDRESS
         CALL (15),(=CL8'BRIF',=C' ',=CL2'F',RECLEN,=V(JIDSREAD),,     X
               DLGDATA),VL,MF=(E,CALLLIST)
         B     JIDS0040                 REITERATE
* ERROR PROCESSING *
* REQUIRED SUBSYSTEM CONTROL BLOCKS MISSING *
JIDS8020 DS    0H
         MVC   MSGID,=CL8'JIDS010C'     SET MESSAGE ID
         XC    CALLLIST(CALLLISL),CALLLIST ZERO THE PARM LIST
         L     R15,ISPLINK
         CALL  (15),(=CL8'SETMSG',MSGID),VL,MF=(E,CALLLIST)
         B     JIDS0040
* CHECKS FOR A JES2-TYPE SUBSYSTEM FAILED *
JIDS8060 DS    0H
         MVC   MSGID,=CL8'JIDS010F'     SET MESSAGE ID
         XC    CALLLIST(CALLLISL),CALLLIST ZERO THE PARM LIST
         L     R15,ISPLINK
         CALL  (15),(=CL8'SETMSG',MSGID),VL,MF=(E,CALLLIST)
         B     JIDS0040
* CROSS MEMORY ERROR *
JIDS8080 DS    0H
         MVC   MSGID,=CL8'JIDS010I'     SET MESSAGE ID
         XC    CALLLIST(CALLLISL),CALLLIST ZERO THE PARM LIST
         L     R15,ISPLINK
         CALL  (15),(=CL8'SETMSG',MSGID),VL,MF=(E,CALLLIST)
         B     JIDS0040
* RETURN PROCESSING *
JIDS9000 DS    0H
         CLC   JQESADDR,ZEROS           ANY JQE'S AREA?
         BE    JIDS9010                 NO, SKIP FREE
         L     R2,JQESADDR              JQE ADDRESS
         L     R3,JQESLEN               JQE LENGTH
         AH    R3,$MAXEXSZ              ADD JQE EXTENSION LENGTH
         FREEMAIN RU,A=(R2),LV=(R3)     FREE THE JQE AREA
JIDS9010 DS    0H
         CLC   JIDSORSA,ZEROS           ANY OUTPUT RESULTS AREA?
         BE    JIDS9020                 NO, SKIP FREE
         L     R2,JIDSORSA              OUTPUT RESULTS START ADDR.
         L     R3,JIDSORTL              TOTAL LENGTH
         FREEMAIN RU,A=(R2),LV=(R3)     FREE THE OUTPUT RESULTS AREA
JIDS9020 DS    0H
         LR    R2,R13                   LOAD CURRENT SAVE AREA ADDR.
         L     R13,4(R13)               LOAD OLD SAVE AREA ADDR.
         FREEMAIN RU,A=(R2),LV=WORKLEN  FREE CURRENT SAVE AREA
         LM    R14,R12,12(R13)          RELOAD REGISTERS
         LA    R15,0
         BR    R14                      RETURN
* EXECUTED INSTRUCTIONS *
EXMVC    MVC   0(0,R14),0(R15)
EXPACK   PACK  0(8,R14),0(0,R15)
EXTM     TM    0(R14),0
* INTERNAL SUBROUTINES *
* EXECUTE A CROSS-MEMORY DATA FETCH *
XMSFETCH DS    0H
         ST    R14,R14SAVE1             SAVE RETURN ADDRESS
         MODESET MODE=SUP               SUPERVISOR STATE
XMSF0005 LABEL
         AXEXT
         LTR   R15,R15                  OK?
         BNZ   XMSF6000                 NO
         STH   R0,PCAUTH                SAVE IT
         LA    R0,1                     LOAD NEW AX
XMSF0007 LABEL
         AXSET AX=(0)                   SET IT
         LTR   R15,R15                  OK?
         BNZ   XMSF6000                 NO
         SSAR  R2                       SECONDARY ASID
         LA    R0,0                     SET KEY 0
XMSF0010 DS    0H
         MVCP  0(R4,R5),0(R3),R0        MOVE
         BZ    XMSF0020                 DONE
         LA    R3,256(R3)               INCREMENT ADDRESSES
         LA    R5,256(R5)
         SH    R4,=H'256'               ADJUST LENGTH
         B     XMSF0010                 RECYCLE UNTIL DONE
XMSF0020 DS    0H
         EPAR  R2                       PRIMARY ASID
         SSAR  R2                       SET SECONDARY TO PRIMARY
XMSF0030 LABEL
         AXSET AX=PCAUTH                PCAUTH AX = ORIGINAL
XMSF6000 DS    0H
         LR    R2,R15                   SAVE RETURN CODE
         MODESET MODE=PROB
         LR    R15,R2                   RESTORE RETURN CODE
         L     R14,R14SAVE1             RESTORE RETURN ADDRESS
         BR    R14                      RETURN TO CALLER
* COMPARE MASKABLE FIELDS *
FLDCOMP  DS    0H
         ST    R14,R14SAVE1             SAVE RETURN ADDRESS
FLDC0020 DS    0H
         CLI   0(R2),C'-'               MATCH ON ALL REMAINING?
         BE    FLDC0100                 YES
         CLI   0(R2),C'*'               MATCH ON THIS CHARACTER?
         BE    FLDC0050                 YES
         CLC   0(1,R2),0(R3)            EXPLICIT MATCH?
         BNE   FLDC0150                 NO
FLDC0050 DS    0H
         LA    R2,1(R2)                 NEXT CHARACTER
         LA    R3,1(R3)                 NEXT CHARACTER
         BCT   R4,FLDC0020              REPEAT
FLDC0100 DS    0H
         LA    R15,0                    INDICATE FULL MATCH
         B     FLDC0200
FLDC0150 DS    0H
         LA    R15,4                    INDICATE NO MATCH
FLDC0200 DS    0H
         L     R14,R14SAVE1             RESTORE RETURN ADDRESS
         BR    R14                      RETURN
* DATA AREA *
LENS20   DC    F'8',F'4'
NAMES40  DC    C'(JES2SSNM JQEJNAME JQEJOBNO JQE3JOB JQETYPE JQETGNUM)'
EDTPTRN1 DC    X'402020202120'
PATTERNC DS    0D                       PATTERN IN CSECT
         DC    CL8' '                   MSGID
         DC    F'80'                    RECLEN
         DC    PL3'0'                   JIDSJQEC
         DS    CL4                      JES2SSNM
         DS    CL8                      JIDJNAME
         DS    H                        JIDJOBNO
         DS    CL7                      JIDTYPE
         DS    H                        JIDTGNUM
         DS    F                        TGTOTAL
PATTERNL EQU   *-PATTERNC               PATTERN LENGTH
PCAUTH   DC    H'0'                     PC AUTHORIZATION
ZEROS    DC    XL8'0'                   SOURCE FIELD FOR ZEROING
BLANKS   DC    CL8' '                   SOURCE FIELD FOR BLANKING
QTYPETAB DC    CL7'XEQ    ',AL1($XEQ)
         DC    CL7'INPUT  ',AL1($INPUT)
         DC    CL7'XMIT   ',AL1($XMIT)
         DC    CL7'SETUP  ',AL1($SETUP)
         DC    CL7'RECEIVE',AL1($RECEIVE)
         DC    CL7'OUTPUT ',AL1($OUTPUT)
         DC    CL7'HARDCPY',AL1($HARDCPY)
         DC    CL7'PURGE  ',AL1($PURGE)
         DC    X'0'                     END OF TABLE
         COPY  JIDSHDG
         COPY  JIDSTRL
         LTORG
* DSECTS *
WORKAREA DSECT                          JIDS WORK AREA
         DS    18F                      SAVE AREA FOR JIDS CALLS
BRIFWORK DS    0D                       BRIF ROUTINES WORK AREA
         DS    18F                      SAVE AREA FOR BRIF RTNS. CALLS
         COPY  JIDSFLDS                 COPY FIELD DEFINITIONS
$HCTAREA DS    ($HCTLEN)X               HCT AREA
WORKLEN  EQU   *-WORKAREA
         CVT DSECT=YES,LIST=NO
         IHAASCB
         IEFJESCT
         IEFJSCVT
         END


JIDSFLDS copy member

DLGDATA  DS    A                        ADDRESS OF THIS WORK AREA
WORK     DS    0D,XL8                   MISC. WORK AREA
R14SAVE1 DS    A                        R14 SAVE WORD
ISPLINK  DS    A                        ISPF ROUTINE ADDRESS
LABEL    DS    CL8                      LABEL WHERE ERROR OCCURS
JES2SSNM DS    CL4                      JES2 SUBSYSTEM NAME
LENS40   DS    6F                       LENGTHS
PTRS40   DS    6A                       POINTERS
JIDSORTL DS    F                        OUTPUT RESULTS TOTAL LENGTH
JIDSORSA DS    A                        OUTPUT RESULTS START ADDRESS
JIDSOREA DS    A                        OUTPUT RESULTS END ADDRESS
JIDSORCA DS    A                        OUTPUT RESULTS CURRENT ADDRESS
JQESLEN  DS    F                        LENGTH OF ALL JQE'S
JQESADDR DS    A                        START ADDRESS OF JQE'S
JQEXADDR DS    A                        START ADDRESS OF JQE EXTENSIONS
PATTERND DS    0D                       PATTERN IN DSECT
MSGID    DC    CL8' '                   MESSAGE ID
RECLEN   DC    F'80'                    RECORD LENGTH
JIDSJQEC DC    PL3'0'                   JIDS QUALIFYING JQE CTR.
JIDJNAME DS    CL8                      JOB NAME
JIDJOBNO DS    H                        JOB NUMBER
JID3JOB  DS    CL3                      JOB TYPE
JIDTYPE  DS    CL7                      LOGICAL QUEUE TYPE
JIDTGNUM DS    H                        NO. OF TRACK GROUPS
TGTOTAL  DS    F                        TOTAL NO. OF TRACK GROUPS
*                                       END OF PATTERN AREA
CALLLIST CALL  ,(,,,,,,,,,,),MF=L       CALL LIST FORM
CALLLISL EQU   *-CALLLIST               LENGTH


JIDSHDG copy member

JIDSHDG  EQU   *
 DC 80C'-'
 DC 80C'-'
 ORG *-80
 ORG *+35
 DC C'  J I D S  '
 ORG
 DC 80C'-'
 DC 80C'-'
 ORG *-80
 ORG *+22
 DC C'  JES2 Information Display Service  '
 ORG
 DC 80C'-'
 DC CL80' '
 DC CL80'Job name  Job no.  Job type   Queue   Track groups'
 DC CL80'--------  -------  --------  -------  ------------'
 DC CL80' '
JIDSHDGL EQU   *-JIDSHDG                LENGTH OF HEADINGS


JIDSREAD subroutine member

 TITLE 'J I D S R E A D - JIDS OUTPUT RESULTS READ SUBROUTINE'
JIDSREAD AMODE 31
JIDSREAD RMODE ANY
JIDSREAD CSECT
         STM   R14,R12,12(R13)          SAVE REGISTERS
         LR    R3,R1                    SAVE R1
         LR    R12,R15                  LOAD BASE REGISTER
         USING JIDSREAD,R12             SET USING
         L     R2,12(R3)                DIALOG DATA ADDRESS POINTER
         L     R2,0(R2)                 BRIFWORK ADDRESS
         ST    R13,4(R2)                CHAIN SAVE AREAS
         ST    R2,8(R13)
         LR    R13,R2                   WORK AREA ADDRESS
         USING BRIFWORK,R13             SET USING
* GET PARAMETERS *
         L     R4,8(R3)                 REL. REC. NO. REQUESTED ADDRESS
         L     R4,0(R4)                 REL. REC. NO. REQUESTED
* POSITION TO OUTPUT RESULTS 'RECORD' *
         BCTR  R4,0                     CONVERT REC. NO. TO DISPL.
         MH    R4,RECLEN+2              TIMES LENGTH OF A 'RECORD'
         A     R4,JIDSORSA              ADD OUTPUT RESULTS START ADDR.
         CL    R4,JIDSOREA              PAST END OF TABLE DATA?
         BNL   JIDS0100                 YES
         L     R2,0(R3)                 ADDR OF BRIF RECORD ADDR
         ST    R4,0(R2)                 STORE ADDRESS
         LA    R15,0                    SET RETURN CODE
         B     JIDS1000                 GO TO RETURN
* END OF TABLE PROCESSING *
JIDS0100 DS    0H
         LA    R0,0
         L     R1,JIDSOREA
         SL    R1,JIDSORSA
         LH    R2,RECLEN+2
         DR    R0,R2                    LAST REC. NO. IN R1
         L     R0,JIDSOREA
         SH    R0,RECLEN+2              LAST REC. ADDR IN R0
         L     R2,0(R3)                 ADDR. OF LAST REC. ADDR
         ST    R0,0(R2)                 STORE LAST REC. ADDR
         L     R2,8(R3)                 LAST REC. NO. ADDR
         ST    R1,0(R2)                 STORE LAST REC. NO.
         LA    R15,8                    SET RETURN CODE
* RETURN TO CALLER *
JIDS1000 DS    0H
         L     R13,4(R13)               RELOAD OLD SAVE AREA ADDRESS
         L     R14,12(R13)              RELOAD REGISTERS
         LM    R0,R12,20(R13)
         BR    R14                      RETURN
* DSECTS *
BRIFWORK DSECT
         DS    18F                      SAVE AREA
         COPY  JIDSFLDS                 COMMON FIELD DEFINITIONS
         END


JIDSTRL copy member

JIDSTRL  EQU   *
 DC CL80'                                      ------------'
JIDSTRLT EQU   *
 DC CL80'Totals:'
 DC CL80' '
JIDSTRLN EQU   *
 DC CL80'Number of entries displayed: xxxxx'
JIDSTRLL EQU   *-JIDSTRL                LENGTH OF TRAILINGS


JIDS0001 panel member

)ATTR
 ^ TYPE(INPUT) INTENS(HIGH) CAPS(ON)
)BODY
+-----------------------------------------------------------------------
+---------------------------------%  J I D S  +-------------------------
+-----------------------------------------------------------------------
+--------------------%  JES2 Information Display Service  +-------------
+-----------------------------------------------------------------------
+
+Command%===>_ZCMD
+
+Subsystem name of desired JES2%===>^Z   +
+
%    Search argument        Permissible choices      Source      Type
%-----------------------   ----------------------   --------   ---------
+
+Job name%===>^Z       +   Any job name             JQEJNAME     Mask
+Job no.%===>^Z    +       Up to 5 decimal digits   JQEJOBNO
+Job type%===>^Z  +        JOB STC TSU              JQEFLAG3
+Queue%===>^Z      +       XEQ INPUT XMIT SETUP     JQETYPE
+                          RECEIVE OUTPUT HARDCPY
+                          PURGE
+Track groups%===>^Z    +  Up to 5 decimal digits   JQETGNUM   Threshold
)INIT
 .ZVARS = '(JES2SSNM JQEJNAME JQEJOBNO JQE3JOB JQETYPE JQETGNUM)'
)PROC
 VPUT JES2SSNM PROFILE
 VER (&JES2SSNM,NONBLANK)
 VER (&JQEJOBNO,NUM)
 VER (&JQEJOBNO,RANGE,1,32767)
 VER (&JQE3JOB,LIST,JOB,STC,TSU)
 VER (&JQETYPE,LIST,XEQ,INPUT,XMIT,SETUP,RECEIVE,OUTPUT,HARDCPY,PURGE)
 VER (&JQETGNUM,NUM)
)END


JIDS01 message member

JIDS010C 'Missing control blocks  '
'Label &LABEL: The requested subsystem is unlocatable and likely inactive'

JIDS010F 'JES2 verification failed'
'Label &LABEL: The requested subsystem failed JES2 verification checks'

JIDS010I 'Cross memory error      '
'Label &LABEL: An operation associated with cross memory services failed'

                                                c Xephon 1992

