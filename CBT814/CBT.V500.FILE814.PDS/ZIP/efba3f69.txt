JES2 exit to control excessive output

Typically, in your JES2 parameter deck you will have a
statement similar to the following:

                           /* ---Default Estimated Sysout Lines/Job-*/
ESTLNCT  NUM=50,           /* 50000 Lines for 1st Message           */
         INT=10000,        /*  then at 10000 Line Intervals         */
         OPT=0             /* Allow Jobs to Continue                */

This allows you to receive message '$HASP375 ESTIMATED
LINES EXCEEDED' when (in this case) the job outputs
50,000 lines. The message is then repeated for every additional
10,000 lines.

The following exit allows you to take some action based upon
certain job information such as job name, programmer name
etc. In our own case, we abend the job if the first character of
the job name indicates that it is a test job. I compare
JCTJNAME to our 'test job' name. You could just as easily
base your decision on any of the following fields:

JCTPNAME   CL20   PROGRAMMER'S NAME FROM JOB CARD
JCTMCLAS   C      MSGCLASS FROM JOB CARD
JCTJCLAS   C      EXECUTION JOB CLASS
JCTIPRIO   X      INITIAL JOB PRIORITPY
JCTPRIO    X      EXECUTION PRIORITY
JCTACCTN   CL4    JOB ACCOUNTING NUMBER FROM JOB CARD
JCTROOMN   CL4    PROGRAMMER'S ROOM NUMBER
JCTETIME   F      ESTIMATED EXECUTION TIME

Assemble and link-edit this program into an LPALIB library
(in our case, I called the module HASPU09) with
AMODE(31), RMODE(24), and AC(1). Then place the
following statements in your JES2 parameter deck:

LOADMOD(HASPU09)           /* Load ILAC version of EXIT 9          */
EXIT(9)   ROUTINE=UEXIT09, /* Associate EXIT9 with HASPU09.....    */
          STATUS=ENABLED,  /*  ..Enable EXIT9 on initialization    */
          TRACE=NO         /*  ..and don't trace execution.....    */

You can then dynamically deactivate (or reactivate) the exit if
you need to by issuing the following JES2 command:

      $T EXIT(9),STATUS=DISABLED

We have implemented this under JES2 Version 3.1.3
(MVS/ESA 3.1.3).

 TITLE 'HASPU09 - JES2 EXIT 9 TO CANCEL JOB IF OUTPUT LINES EXCEEDED'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*      MODULE NAME :- HASPU09                                       *
*      OPERATION   :- CHECK IF THE FIRST CHARACTER OF THE JOB CARD  *
*                     IS A '@' ( TEST JOB ) AND SET R0 AS FOLLOWS:-*
*                     R0=1000 0000  0000 0000  0000 0000  0000 0001 *
*                     R0=8    0     0    0     0    0     0    1    *
*                     BIT0=0 - TAKE ACTION BASED ON VALUE CURRENTLY *
*                              SPECIFIED FOR 'EXCESSIVE OUTPUT'     *
*                         =1 - TAKE ACTION BASED ON VALUE IN BITS   *
*                              24-31                                *
*                     BIT1=0 - USE OUTPUT OVERFLOW INCREMENT SPECIFI*
*                              ON INT= OF ESTLNCT,ESTPUN,ESTPAGE    *
*                         =1 - USE OUTPUT OVERFLOW INCREMENT SPECIFI*
*                              BY EXIT ROUTINE IN PARAMETER LIST    *
*                     BIT2=0 - SEND $HASP375 TO THE OPERATOR        *
*                         =1 - SUPPRESS THE DEFAULT ERROR MESSAGE   *
*                     BITS3-23 ARE N/A                              *
*                     BYTE3                                         *
*                         =0 - CONTINUE PROCESSING                  *
*                         =1 - ABEND 722 WITHOUT A DUMP             *
*                         =2 - ABEND 722 WITH A DUMP                *
*      ENTRY POINT :- HASPU09                                       *
*      REFERENCE   :- JES2 USER MODIFICATIONS AND MACROS            *
*                     EXIT 9: JOB OUTPUT OVERFLOW                   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         COPY  $HASPGBL                  COPY JES2 GLOBALS
*        ESTABLISH VALUES OF ASSEMBLER GLOBAL VARIABLES AND GENERATE
*        DESCTS AND EQU FOR THE ASSEMBLY.
HASPU09  $MODULE ENVIRON=USER,           FOR THE USER (HASPSSSM) ENV   +
               TITLE='JES2 EXIT09 - ESTIMATED LINES EXCEEDED - ILAC',  +
               SYSP=(GEN,GEN,DATA,GEN,GEN),                            +
               $HASPEQU,                 REQUIRED FOR REG CONVENTIONS  +
               $JCT,                     JOB CONTROL TABLE             +
               $MIT,                     MODULE INFORMATION TABLE      +
               $BUFFER,                  REQUIRED BY $JCT              +
               $SCAT,                    REQUIRED BY $SVT              +
               $XECB,                    REQUIRED BY $SVT              +
               $HFAME,                   REQUIRED BY $SVT              +
               RPL                       REQUIRED BY $BUFFER
         USING JCT,R7                    ESTABLISH JCT ADDRESSABILITY
UEXIT09  $ENTRY BASE=R12                 EXIT ROUTINE'S ENTRY POINT
         STM   R14,R12,12(R13)           SAVE REGISTERS
         LR    R12,R15                   SET LOCAL BASE REGISTER
         CLC   JCTJNAME(1),=C'@'         IS THIS A TEST JOB ?
         BE    KILLJOB                   YES => KILL THE JOB
         B     LETITGO                   ALLOW THE OUTPUT
KILLJOB  EQU   *
         LM    R14,R12,12(R13)           RESTORE REGISTERS
         XR    R0,R0                     CLEAR OUR PRIOR TO 'OR'
         X     R0,X'800000001'           SET R0 TO CANCEL THE JOB
         SR    R15,R15                   DEFAULT RETURN CODE IS ZERO
         LA    R15,8                     SET BAD RETURN CODE
         BR    R14                       RETURN TO JES2
LETITGO  EQU   *                         NORMAL EXIT
         LM    R14,R12,12(R13)           RESTORE REGISTERS
         ST    R15,R15                   DEFAULT RETURN CODE IS ZERO
         BR    R14                       RETURN TO JES2
         DROP  R7,R12                    DROP ADDRESSABILITIES
         LTORG ,
         $MODEND ,
         END   ,


Odhran McCloskey
Senior Systems Programmer
Irish Life Assurance plc (Ireland)                   c Xephon 1993

