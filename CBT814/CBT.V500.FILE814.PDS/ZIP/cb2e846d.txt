VTOC modification utility

The following TSO command comes in handy when someone
needs to amend the attributes of a dataset on disk without a lot of
hassle - usually when someone else has screwed them up by
accident. The program uses CVAF macros to read and update the
VTOC entry - called a Format 1 DSCB (DataSet Control Block)
- so is entirely safe, even with indexed VTOCs, and should be
operating system independent.

The program works by first extracting the command operands
using IKJPARS, reading the F1DSCB, amending it, then
updating it. An ENQ on 'SYSVTOC/volume' is wrapped around
the process. The unusual technique used here is to build two
masks: one to clear the values to be replaced and one with the
new values to set. These are then simply ANDed and ORed over
the F1DSCB. This means that processing between the read and
update is kept to a minimum, reducing the chance of anything
going wrong. This also means that most of the logic is performed
in the IKJPARS parameter checking exits, which set up the
masks. Obviously, playing with the VTOC needs this program to
be authorized, both by the linkage editor and in IEATSO00. The
command operands are:

VMOD dsname                   single or list of dataset names,
      {,VOL(vvvvvv)}           if specific VOLUME required,
      {,BLKSIZE(bbbbb)}        to set new block size,
      {,LRECL(lllll)}          to set new logical record length,
      {,RECFM(rrrr)}           to set new record format,
      {,KEYLEN(kkk)}           to set new key length,
      {,DSORG(ooo)}            to set new DSORG,
      {,CREDT(ccccc)}          to set new creation date,
      {,EXPDT(eeeee)}          to set new expiry date,
      {,PASSWORD(p)}           to set new password attribute,
      {,SEC(ss)}               to set new secondary allocation amount,
      {,ADDR}                  to display the CCHHR of format-1 DSCB

The operands are obvious except for PASSWORD. Consider the
PASSWORD flags as two bits, ie: B'0x' - not protected, B'10' -
protected against both read and write, and B'14' protected against
write but not read. Then:

o      U turns off bit B'1x' to unprotect (but leaves B'x4' alone)

o      P turns on B'1x' to protect (uses previously set read/write
bit)

o      R sets B'10' for read and write needing a password

o      W sets B'14' for only write needing a password.

CREDT and EXPDT are dates in Julian format (YYJJJ), or '0' for
none, or '*' for yesterday.

VTOCMOD SOURCE CODE

**LINK   SETCODE AC(1)
         PRINT OFF FOR MACRO DEFINITIONS
         MACRO ,
         $ASMDATE ,
         B     4+8+8+8(,R15)
         DC    CL8'&SYSECT'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         MEND  ,
VTOCMOD  CSECT ,
VTOCMOD  AMODE 24
VTOCMOD  RMODE 24
DSECTS   DSECT ,
UCB      DSECT ,
        IEFUCBOB ,
        IKJPPL ,
        IKJCPPL ,
        IKJPSCB ,
        CVT    DSECT=YES,LIST=YES
        IHAPSA ,
CVPL    ICVAFPL ,
VTOCMOD  CSECT ,
        DCBD   DSORG=DA,DEVD=DA
VTOCMOD  CSECT ,
       $ASMDATE ,
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING VTOCMOD,R12
         L     R5,=A(WORKLEN)
        GETMAIN R,LV=(R5)
         LA    R10,0(,R1)
         LR    R4,R10
         SLR   R7,R7
         MVCL  R4,R6
         ST    R10,8(,R13)
         ST    R13,4(,R10)
         LM    R14,R2,12(R13)
         LR    R13,R10
         USING WORKAREA,R10
         MVI   VTOCENQ,X'FF'       SET "MODESET"/"ENQ" NOT DONE
         LR    R11,R1
         USING CPPL,R11            ADDRESS "CPPL" IN "R11"
         L     R3,CPPLPSCB
         TM    PSCBATR1-PSCB(R3),PSCBCTRL "OPER" PRIV?
         BZ    NOTOPER               NO, THEN CAN'T DO IT
         MVI   ANDMASK,X'FF'       INITIALIZE "AND_MASK"
         MVC   ANDMASK+1(L'ANDMASK-1),ANDMASK
         MVC   (PPLUPT-PPL)+PARSPARM(4),CPPLUPT A(UPT)
         MVC   (PPLECT-PPL)+PARSPARM(4),CPPLECT A(ECT)
         XC    PARSECB(4),PARSECB  CLEAR "ECB"
         LA    R1,PARSECB          "ECB"
         ST    R1,(PPLECB-PPL)+PARSPARM A(ECB)
         ST    R10,(PPLUWA-PPL)+PARSPARM A(UWA=WORKAREA)
         L     R1,=A(PCL)          A(PCL)
         ST    R1,(PPLPCL-PPL)+PARSPARM A(PCL)
         LA    R1,PARSPPDL         WHERE TO PUT "PDL_ADDR"
         ST    R1,(PPLANS-PPL)+PARSPARM A(ANS)
         MVC   (PPLCBUF-PPL)+PARSPARM(4),CPPLCBUF A(CBUF)
         DROP  R11                 DISOWN "CPPL" IN "R11"
         LA    R1,PARSPARM         "IKJPARS" PARAMETER LIST
        CALLTSSR EP=IKJPARS
         CH    R15,=Y(4)           BRANCH ON "IKJPARS" RETURN
         BE    PARSER04            04: INCOMPLETE PARAMETERS
         BH    PARSEROR            >4.. "IKJPARS" ERROR
         L     R9,PARSPPDL         GET "PDL"
         USING IKJPARMD,R9           AND ADDRESS "PDL" IN "R9"
         LA    R5,@DSN             -> FIRST "DSNAME_PDE"
DSNLOOP  EQU   *
         MVI   WWVOLUME,C' '
         MVC   WWVOLUME+1(L'WWVOLUME+L'DS1DSNAM-1),WWVOLUME
         L     R1,0(,R5)           START OF "DSNAME"
         LH    R2,4(,R5)           LENGTH OF "DSNAME"
         BCTR  R2,0                  - 1 FOR "EX"
         EX    R2,MVCDSNAM         MVC   DS1DSNAM(*-*),0(R1)
         TM    @VOL+6,X'80'        IS "VOLUME" SPECIFIED?
         BZ    VOLMISS               NO, THEN ASK CATALOG
         LH    R1,@VOL+4             YES, LENGTH OF "VOLUME"
         L     R2,@VOL                    START OF "VOLUME"
         BCTR  R1,0                  - 1 FOR "EX"
         EX    R1,MVCVOLUM         MVC   WWVOLUME(*-*),0(R2)
         B     VOLCONT               NOW BRANCH TO READ "F1DSCB"
         DROP  R9                  DISOWN "PDL" IN "R9"
VOLMISS  EQU   *
         MVC   CAMLST(RCAMLSTL),RCAMLST MODEL "CAMLST"
         LA    R1,DS1DSNAM         POINT AT...
         ST    R1,CAMLST+4                  "DSNAME"
         LA    R1,LONGWORK         POINT AT...
         ST    R1,CAMLST+12                 WORKAREA
        LOCATE CAMLST
         STC   R15,RETCODE         SAVE "LOCATE" RETURN CODE
         LTR   R15,R15             WAS "DSNAME" FOUND IN CATALOG?
         BNZ   DSNNTCAT              NO, THEN ERROR
         MVC   WWVOLUME,LONGWORK+6 COPY RETURNED "VOLUME"
VOLCONT  EQU   *
         XC    LONGWORK(100),LONGWORK CLEAR WORK AREA
         LA    R2,UCBSCNTP         ->"UCBTYPE"
         ST    R2,UCBSCNPM+4       ->"UCBTYPE"
         MVI   UCBSCNTP,UCB3DACC   "UCBTYPE"=DASD
         LA    R2,LONGWORK         -> WORK AREA
         ST    R2,UCBSCNPM+0       -> WORK AREA
         LA    R2,WWPUCB           -> "UCB" RETURN ADDR
         ST    R2,UCBSCNPM+8       -> "UCB" RETURN ADDR
         OI    UCBSCNPM+8,X'80'    SET END_OF_LIST
SCNUCBLP EQU   *
         L     R2,CVTPTR           CVT
         L     R15,CVTUCBSC-CVT(,R2) CVTUCBSC
         LA    R1,UCBSCNPM         -> PARM LIST
         BALR  R14,R15             GOSUB "UCBSCAN" ROUTINE
         LTR   R15,R15             ANOTHER ONE FOUND?
         BNZ   VOLNTMNT              NO, THEN ALL LOOKED AT
         L     R15,WWPUCB          PICK UP "UCB" ADDRESS
         CLC   WWVOLUME,UCBVOLI-UCBOB(R15) THIS VOLUME?
         BNE   SCNUCBLP
         MVC   CVAFDIR(RCVAFDIRL),RCVAFDIR MODEL "CVAFDIR"
         XC    BUFLIST(BFLHLN+BFLELN),BUFLIST
         OI    BFLHFL,BFLHDSCB   "DSCB" TO BE READ WITH "BUFLIST"
         MVI   BFLHNOE,1           ONLY ONE ENTRY
         LA    R1,DS1FMTID         WHERE TO PUT "F1DSCB"
         ST    R1,BFLEBUF
         OI    BFLEFL,BFLECHR    "CCHHR" OF DSCB" TO BE RETURNED
         MVI   BFLELTH,DS1END-DS1FMTID  LENGTH TO BE RETURNED
         L     R2,WWPUCB           LOAD "UCB" ADDRESS
  NOP   TESTMODE
        MODESET MODE=SUP
         MVC   VTOCENQ(RVTOCENQL),RVTOCENQ MODEL "ENQ"
        ENQ    (=CL8'SYSVTOC',WWVOLUME,E,L'WWVOLUME,SYSTEMS),          *
               MF=(E,VTOCENQ)
TESTMODE EQU   *
        CVAFDIR ACCESS=READ,                                           *
               DSN=DS1DSNAM,                                           *
               BUFLIST=BUFLIST,                                        *
               VERIFY=NO,                                              *
               UCB=(R2),                                               *
               IOAREA=KEEP,                                            *
               MAPRCDS=NO,                                             *
               IXRCDS=NOKEEP,                                          *
               BRANCH=NO,                                              *
               MF=(E,CVAFDIR)
         LTR   R3,R15              CHECK "CVAFDIR" RETURN CODE
         BZ    VTREADOK            ALL WAS WELL
         BAL   R9,DEQVTOC          FREE OFF RESOURCES
         BAL   R9,CVAFEMSG         ISSUE ERROR MESSAGE
         CLI   (CVSTAT-CVPL)+CVAFDIR,1 DATASET NOT FOUND?
         BE    DSNNTFND            YES, THEN SAY SO
         B     DSNERSET            ELSE MOVE ONTO NEXT "DSNAME"
VTREADOK EQU   *
         MVC   CCHHR,BFLEARG       SAVE "CCHHR"
         CLI   ANDMASK,X'FF'       ANY NEW OPTIONS TO SET?
         BNE   ISNEWSET            YES, THEN WE NEED TO UPDATE
         CLC   ANDMASK+1(L'ANDMASK-1),ANDMASK
         BNE   ISNEWSET            YES, THEN WE NEED TO UPDATE
         CLI   SETMASK,X'00'       ANY NEW OPTIONS TO SET?
         BNE   ISNEWSET            YES, THEN WE NEED TO UPDATE
         CLC   SETMASK+1(L'SETMASK-1),SETMASK
         BNE   ISNEWSET            YES, THEN WE NEED TO UPDATE
         SLR   R1,R1
         ICM   R1,B'1111',WWSCALO  LOAD NEW SEC-ALLOC VALUE
         BNZ   ISSCASET            IS NEW SCA, GO SET IT
         BAL   R9,RLSECVAF         FREE OFF RESOURCES
         B     NONEWSET            AND AVOID RE-WRITE
ISNEWSET EQU   *
         NC    DS1FMTID(L'ANDMASK),ANDMASK REMOVE OLD BITS
         OC    DS1FMTID(L'SETMASK),SETMASK AND SET NEW BITS
         ICM   R1,B'1111',WWSCALO  LOAD NEW SEC-ALLOC VALUE
         BZ    NONEWSCA            NO, THEN UPDATE "VTOC" NOW
ISSCASET EQU   *
         TM    DS1SCALO,X'C0'      HAS SEC-ALLOC BEEN SET?
         BZ    SCANTALW            NO, THEN NOT ALLOWED
         TM    DS1SCALO,X'0F'      WERE THERE SPECIAL REQUESTS?
         BNZ   SCANTALW            YES, THEN NOT ALLOWED
         STCM  R1,B'0111',DS1SCALO+1   SAVE NEW SEC-ALLOC VALUE
         B     NONEWSCA                AND GO UPDATE "VTOC"
SCANTALW EQU   *
         BAL   R9,RLSECVAF         FREE OFF RESOURCES
         LA    R1,#SECNALD         SECONDARY ALLOCATION NOT ALLO
         LA    R0,L'#SECNALD       LENGTH OF MESSAGE
        TPUT   (1),(0),EDIT        ISSUE MESSAGE
         B     DSNERSET
NONEWSCA EQU   *
         L     R2,WWPUCB           LOAD "UCB" ADDRESS
        CVAFDIR ACCESS=WRITE,                                          *
               IOAREA=NOKEEP,                                          *
               MAPRCDS=NO,                                             *
               IXRCDS=NOKEEP,                                