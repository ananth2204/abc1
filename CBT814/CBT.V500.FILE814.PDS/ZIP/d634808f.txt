Converting PF key definitions
A very inconvenient effect of converting from XA 2.1.x to XA 2.2.x is that PF
keys previously defined on one MVS console are lost.  Therefore after the SYSGEN
for XA 2.2.x you have to build a PFKTABxx member for each console in
SYS1.PARMLIB.  However, there is an easier method to circumvent this problem.
It so happens that for every console defined in your XA 2.1.x system, a module
exists in SYS1.DCMLIB containing the current PF key content as defined by your
operators.  The SYS1.DCMLIB does not exist in XA 2.2.x.  Now letÕs look at the
way to save and convert your current PF key definitions.
PFKLST   CSECT
         B     32(0,15)
         DC    AL1(28)
         DC    CL7'PFKLST'
         DC    CL9'&SYSDATE'
         DC    CL11'&SYSTIME'
         STM   14,12,12(13)
         LA    12,0(15)
         USING PFKLST,12
         LA    14,SAVEAREA
         LM    15,1,16(13)
         ST    14,8(13)
         ST    13,4(14)
         LR    13,14
         CNOP  0,4
         B     *+4+72
SAVEAREA DC    18F'0'
         OPEN  (PFKSET,(OUTPUT))       OPEN OUTPUT FILE
         LA    R3,ACONS                GET ADDR OF CONSOLE-TABLE
         L     R8,ACONS£               GET COUNT OF CONSOLES IN TABLE
LOOP     DS    0H
         SH    (R8),=H'1'
         BM    QD03                    THE LAST ONE ?
         MVC   DEVNO,4(R3)        NO - MOVE DEVICE NUMBER TO OUTPUT LINE
         L     R2,0(R3)                GET ADDRESS
         USING IEEPFK,R2
         LH    R4,KEY           GET LENGTH OF ALL PF-KEYS IN THIS MODULE
         LA    R5,0(R4,R2)             GET THE LAST ONE
         PUT   PFKSET,COMMENT          WRITE A COMMENT LINE
         PUT   PFKSET,INFOLINE         WRITE THE HEADER LINE
         PUT   PFKSET,COMMENT          WRITE A COMMENT LINE
         LA    R2,PFKNO                GET ADDRESS OF FIRST PF-KEY
         USING PFKNO,R2
QD04     CR    (R2),(R5)               DO WHILE NOT THE LAST KEY
         BNL   QD06
         TM    FLAG,X'80'              IS THIS KEY USED ?
         BNO   QIF1                    NO
         MVC   TEXT,PFKTEXT            MOVE COMMAND TEXT TO OUTPUT LINE
         LA    R1,TEXT+L'TEXT-1        SETUP LAST BYTE IN COMMAND TEXT
QD07     DS    0H             SEARCH FOR THE LAST BLANK IN COMMAND TEXT
         CLI   0(R1),C' '              IS THERE A BLANK ?
         BNE   QD09                    NO
         SH    R1,=H'1'                GET NEXT LOWER BYTE
         B     QD07
QD09     MVC   1(2,R1),KZU             MOVE ') TO TEXT
         TM    FLAG,X'20'              IS PF-KEY CONVERSATIONAL ?
         BNO   QIF3                    NO  - SET CON(N) - DEFAULT
         MVI   CONV,C'Y'               YES - SET CON(Y)
         B     QIF5
QIF3     MVI   CONV,C'N''              SET CON(N) - DEFAULT
QIF5     SR    R1,R1                   CLEAR REG 1
         IC    R1,PFKNO                GET IN CURRENT PF-KEY NUMBER
         CVD   R1,DOWO                 CONVERT IT TO DECIMAL
         OI    DOWO+7,X'0F'
         UNPK  PFK£,DOWO+6(2)          CONVERT TO CHARACTER
         PUT   PFKSET,COMMAND          WRITE OUT COMMAND TEXT
         PUT   PFKSET,CONVER           WRITE OUT "CON(Y/N)"
QIF1     LA    R2,ENDPFK-PFKNO(R2)     SETUP NEXT PF-KEY
         B     QD04
QD06     LA    R3,7(R3)                SETUP NEXT TABLE ENTRY
         B     LOOP
QD03     CLOSE PFKSET                  CLOSE YOUR OUTPUT DATASET
         L     13,4(13)
         SR    15,15
         L     14,12(13)
         LM    0,12,20(13)
         BSM   0,14                    RETURN TO MVS
** ACONS ARE FILLED FROM LINKAGE EDITOR
** //SYSLIB DD DSN=SYS1.DCMLIB,DISP=SHR
*        CONSOLE ID'S FOR YOUR SYSTEM
*                MEMBER FROM DEVICE
*                DCMLIB      NUMBER OF THE CONSOLE
*                  !          !
ACONS    DS    0F
         DC    V(IEEPKOB0),C'OB0'
         DC    V(IEEPKOB1),C'OB1'
         DC    V(IEEPKOB2),C'OB2'
         ...
         etc
         ...
ACONS£   DC    A((*-ACONS)/7)
COMMAND  DS    0H                   ONE LINE FOR EACH PARMLIB MEMBER
         DC    C'PFK('
PFK£     DC    CL2' ',C')'
         DC    C' CMD('''
TEXT     DC    CL108' '                PF-KEY TEXT
         DC    CL2' '
COMEND   EQU   *
COMLENG  EQU   *-COMMAND
COMBLK   EQU   5*COMLENG
KZU      DC    C'''',C')'
INFOLINE DC    CL(COMLENG)' '
         ORG   INFOLINE
         DC    C'PFKTAB TABLE(TAB'     FIRST LINE OF PFKTABxx MEMBER
*                                      FOR EACH CONSOLE
DEVNO    DC    CL3' '
         DC    C')'
         ORG
CONVER   DC    CL(COMLENG)' '          CONVERSATIONAL ?
         ORG   CONVER
         DC    C'CON('
CONV     DC    C'N',C')'
         ORG
COMMENT  DC    CL(COMLENG)' '          COMMENT LINE
         ORG   COMMENT
         DC    C'/*'
         ORG   COMMENT+69
         DC    C'*/'
         ORG
DOWO     DS    D
PFKSET   DCB   DDNAME=PFK,LRECL=COMLENG,BLKSIZE=COMBLK
IEEPFK   DSECT
         DC    A(0)
         DC    XL10'0'
KEY      DC    AL2(0)
         DC    H'0'
PFKNO    DC    FL1'0'
FLAG     DC    X'00'
PFKTEXT  DC    CL108' '
ENDPFK   EQU   *
         END
Assemble and link this program with the following JCL:
//   YOUR JOBCARD
//ASM  EXEC  PGM=IEV90,PARM='OBJECT,NODECK,LINECOUNT(83),NOALIGN',
//   REGION=256K
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  DSN=&SYSUT1,UNIT=SYSALLDA,
//             SPACE=(1700,(150,150),,,ROUND)
//SYSUT2   DD  DSN=&SYSUT2,UNIT=SYSALLDA,
//             SPACE=(1700,(150,150),,,ROUND)
//SYSUT3   DD  DSN=&SYSUT3,UNIT=SYSALLDA,
//             SPACE=(1700,(150,150),,,ROUND)
//SYSPRINT DD  SYSOUT=*
//SYSLIN   DD  DSN=&LOADSET,UNIT=SYSALLDA,DISP=(,PASS),
//             SPACE=(80,(200,100)),
//             DCB=(BLKSIZE=400,LRECL=80,RECFM=FB)
//LKED   EXEC  PGM=IEWL,COND=(8,LT,ASM),REGION=512K,
//             PARM='XREF,LIST,LET,REUS'
//SYSLIB   DD  DSNAME=SYS1.DCMLIB,DISP=SHR
//SYSLIN   DD  DSN=&LOADSET,DISP=(OLD,DELETE)
//SYSLMOD  DD  DSN=&GOSET(PFKLST),UNIT=SYSALLDA,
//             DISP=(NEW,PASS),
//             SPACE=(1024,(40,,1),,CONTIG)
//SYSUT1   DD  DSNAME=&SYSUT1,UNIT=SYSALLDA,
//             SPACE=(1024,(40,20),,CONTIG)
//SYSPRINT DD  SYSOUT=*
//GO      EXEC PGM=*.LKED.SYSLMOD,COND=(4,LT,LKED),REGION=512K
//STEPLIB  DD  DSNAME=*.LKED.SYSLMOD,DISP=SHR
//PFK     DD DSN=YOUR.PFKLST.DSN,DISP=(,CATLG,DELETE),UNIT=SYST,
//  SPACE=(TRK,(1,1))
The output from this job is a dataset (YOUR.PFKLST.DSN).  Since the new PARMLIB
format for the PFKs in XA 2.2 accepts only text between columns 1 and 72 and the
output from this program is about 123 columns long, you must split all records
that are longer than 70 columns.  To do this we have written the following ISPF
edit macro:
ISREDIT MACRO
SET RC = 0
SET X  = 0
ISREDIT C ALL X'01' X'31'
ISREDIT C ALL X'02' X'32'
ISREDIT C ALL X'03' X'33'
ISREDIT C ALL X'04' X'34'
ISREDIT C ALL X'05' X'35'
ISREDIT C ALL X'06' X'36'
ISREDIT C ALL X'07' X'37'
ISREDIT C ALL X'08' X'38'
ISREDIT C ALL X'09' X'39'
SET BLK = &STR(          )
SET BLK3 = &STR(   )
SET BLK = &STR(&BLK.&BLK.&BLK.&BLK.&BLK.&BLK.&BLK3.)
ISREDIT EX ALL '&BLK' 60 123
DO WHILE &RC = 0
   ISREDIT FIND NEXT X'5E' NX
   SET RC = &LASTCC
   IF &RC = 0 THEN DO
      ISREDIT (RX,CX) = CURSOR
      ISREDIT (LINE)  = LINE &RX
      SET LINE = &STR(&LINE)
      IF &LENGTH(&STR(&LINE)) > 69 THEN DO
         ISREDIT FIND LAST X'5E' .ZCSR .ZCSR 1 70
         ISREDIT (R,C) = CURSOR
         SET C = &EVAL(&C+1)
         ISREDIT TSPLIT .ZCSR &C
         SET R2 = &EVAL(&RX + 1)
         ISREDIT EX P'=' .ZCSR .ZCSR
         ISREDIT CURSOR = &R2 1
         ISREDIT EX P'=' .ZCSR .ZCSR
     END
  END
  SET X  = &EVAL(&X+1)
END
ISREDIT C ALL X'31' X'01'
ISREDIT C ALL X'32' X'02'
ISREDIT C ALL X'33' X'03'
ISREDIT C ALL X'34' X'04'
ISREDIT C ALL X'35' X'05'
ISREDIT C ALL X'36' X'06'
ISREDIT C ALL X'37' X'07'
ISREDIT C ALL X'38' X'08'
ISREDIT C ALL X'39' X'09'
ISREDIT RESET
SET ZEDSMSG = &STR(&X ROW SPLITED)
SET ZEDLMSG = &STR(&X PFK ROWS SPLITED)
ISPEXEC SETMSG MSG(ISRZ000)
END
After execution of this edit macro YOUR.PFKLST.DSN is in the right PARMLIB
format.  You can then copy this dataset to the PARMLIB member PFKTABxx .

Detlef Insel and Ewald Sussner
Datev AG (West Germany)  © Xephon 1989













































