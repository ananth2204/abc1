REXX macro to gather dataset information

Often when looking at or building JCL for a job, it would be nice
to be able to gather some basic information about existing datasets
that are being used within the job stream without having to go to
another panel such as ISPF 3.2 or 3.4. There are user-built macros
around that allow you to edit/browse a dataset but we didn't know
of one that would give other basic information such as DCB
attributes, space allocation, etc.

By using the REXX LISTDSI we gather this information and
display it to the user if they desire. Then, if the user wishes, a
browse or edit request to the file is made. This macro will not
resolve symbolics if present in the dataset name. However, if the
dataset is a GDG it will resolve a '(0)', '(-nnn)', or '(+nnn)'
specification. If the dataset is a VSAM file a LISTCAT is issued
as opposed to the LISTDSI.

Since this is cursor-sensitive, the cursor must be placed on the
same line that the dataset in question is on. This macro's name is
INSPECT and it resides in a library in the log-on procedure
SYSPROC section. I have set up a PF key that executes the
INSPECT macro, so all I have to do is move my cursor to the line
the dataset is on and hit my PF key.

/* Rexx - MACRO to gather dataset information and browse/edit a file  */
/**********************************************************************/
/* This section sets up the macro. It determines what the input was   */
/* based on cursor position and then comes up with a character string */
/* to be processed                                                    */
/**********************************************************************/
ADDRESS ISREDIT
MACRO
"(input) = line .ZCSR"
input = TRANSLATE(input)
ADDRESS
IF POS('DSN=',input) = '0' THEN CALL NO_INPUT
ELSE NOP
input = SUBSTR(input,POS("DSN=",input) + 4)
IF POS(',',input) = '0' THEN end = POS(" ",input) - 1
ELSE end = POS(',',input) -1
input = SUBSTR(input,1,end)
/**********************************************************************/
/* This section looks to see if there is a "(" and ")" in the string. */
/* If there is it determines if this is a PDS or GDG. If this is a    */
/* PDS it strips of the member name and passes the dataset name on    */
/* to the LISTDSI portion of this EXEC.                               */
/* IF this is a GDG dataset the Generation is resolved before the     */
/* dataset is passed on to the LISTDSI portions of the MACRO.         */
/**********************************************************************/
IF POS('(',input) ^= '0' & POS(')',input) ^= '0' THEN
DO
  entry = SUBSTR(input,1,POS('(',input) -1 )
  IF POS('(+',input) ^= '0' | POS('(-',input) ^= '0' | POS('(0',input) ,
  ^= '0' THEN NOP
  ELSE
  DO
    input = entry
    SIGNAL LIST_IT
   END
  lngth = ( POS(')',input) - POS('(',input) )
nm_bk = ( STRIP(SUBSTR(input,POS('(',input)+1,lngth-1),L,"-") + 1 ) * 2
  x = OUTTRAP(gdg.,,'NOCONCAT')
  "LISTCAT LEV('"entry"')"
  IF nm_bk > (gdg.0) THEN CALL NOT_FOUND ; ELSE NOP
  nm_bk = (gdg.0 - nm_bk) + 1
  input = STRIP(SUBSTR(gdg.nm_bk,17),T," ")
END
ELSE NOP
/**********************************************************************/
/* Gather information by issuing the LISTDSI command and ask the user */
/* if he/she wants to see this information.                           */
/**********************************************************************/
LIST_IT :
x = LISTDSI("'"input"'" 'DIRECTORY')
IF x = '16' THEN CALL NOT_FOUND ; ELSE NOP
DSREF_RESP :
SAY " Would you like General information on this file "
SAY " Reply Y or N "
PARSE PULL rsp_a
rsp_a = TRANSLATE(rsp_a)
SELECT
  WHEN rsp_a = 'Y' | rsp_a = 'YES' THEN SIGNAL DSREF
  WHEN rsp_a = 'N' | rsp_a = 'NO'  THEN SIGNAL AGAIN
  OTHERWISE
  DO
    SAY "Response Invalid"
    SIGNAL DSREF_RESP
  END
END
ELSE
/**********************************************************************/
/* Print out the dataset information to the user's screen. If this is */
/* a VSAM file then a call is made to VSAM label which will issue     */
/* a LISTCAT. If you only issue a LISTDSI to a VSAM file then a lot   */
/* of the fields you get back have "????" in them .                   */
/**********************************************************************/
DSREF :
IF sysdsorg = 'VS' THEN SIGNAL VSAM
ELSE NOP
SAY "          DSREF Dataset Information"
SAY "         ***************************"
SAY " DSN = "input
SAY " Data Control Block Information"
SAY " ------------------------------"
SAY " DCB=(LRECL="syslrecl",BLKSIZE="sysblksize",RECFM="sysrecfm")"
SAY " Dataset organization is "sysdsorg
SAY " Data currently resides on "sysvolume" which is a "sysunit
SAY ""
SAY " Space Information"
SAY " -----------------"
SAY " The Dataset's Current space units are allocated in "sysunits||"S"
SAY " Its current allocation is - primary   = "sysprimary
SAY "                           - secondary = "sysseconds
SAY " Current Blocks per track = "sysblkstrk
SAY " Space used so far is "sysused sysunits
SAY " Current extents are" sysextents
say ""
SAY " Misc Information"
SAY " ----------------"
SAY " It was created "syscreate" and last referenced "sysrefdate
IF sysdsorg ^= 'PO' THEN NOP
ELSE
DO
  SAY " Number of members            = "sysmembers
  SAY " Number of allocated Dir Blks = "sysadirblk
  SAY " Number of used Dir Blks      = "sysudirblk
END
SAY ""
SAY ""
/**********************************************************************/
/* Ask the user if he/she wants to view file. If yes then ensure that */
/* the file they want to view can be opened by this routine. If the   */
/* file cannot be browsed/edit then you tell them so.                 */
/**********************************************************************/
AGAIN :
SAY ' Would you like to look in the Dataset ?'
SAY ' Reply "E" to go into the Dataset in EDIT MODE'
SAY ' Reply "B" to go into the Dataset in BROWSE MODE'
SAY ' Reply "N" not to look at the Dataset at all'
PARSE PULL rsp
rsp = TRANSLATE(rsp)
SELECT
  WHEN rsp = 'E' | rsp = 'B' THEN NOP
  WHEN rsp = 'N' | rsp = 'N' THEN EXIT
  OTHERWISE
  DO
    SAY "Response Invalid"
    SIGNAL AGAIN
  END
END
/**********************************************************************/
/* Do some checks to see if this MACRO will process the edit/browse   */
/* request. If it can then issue the request. If user requested EDIT  */
/* and file is RECFM=U ( load ), override the EDIT request to a Browse*/
/**********************************************************************/
SELECT
  WHEN sysrecfm = 'U' & rsp = 'E' THEN CALL LOAD
  WHEN sysdsorg = 'VBS' | sysdsorg = 'FBS' THEN SIGNAL SPANNED
  WHEN sysdsorg = 'DA' THEN SIGNAL DIRECT
  OTHERWISE
  DO
     IF SYSLRECL > 256 THEN SAY 'EDIT/BROWSE not allowed , LRECL > 256'
     ELSE
     DO
       IF rsp = 'E' THEN
       DO
         "WHOGOT '"input"'"
         IF rc = '0' | sysdsorg = 'PO' THEN
         DO
           ADDRESS ISPEXEC
           "EDIT DATASET('"input"')"
           ADDRESS
         END
         ELSE SAY 'Dataset currently in use'
       END
       ELSE
       DO
         ADDRESS ISPEXEC
         "BROWSE DATASET('"input"')"
         ADDRESS
       END
     END
  END
END
/**********************************************************************/
/* End of Main Routine                                                */
/**********************************************************************/
EXIT
/**********************************************************************/
/* Label Load                                                         */
/**********************************************************************/
LOAD :
SAY "Dataset has RECFM=U, EDIT request overridden to BROWSE"
ADDRESS ISPEXEC
"BROWSE DATASET('"input"')"
ADDRESS
EXIT
/**********************************************************************/
/* Label VSAM                                                         */
/**********************************************************************/
VSAM:
"LISTCAT ENT('"input"') ALL"
"CLRSCRN"
SAY " This Dataset is a VSAM file "
SAY " INSPECT will not BROWSE/EDIT this file"
ADDRESS
EXIT
/**********************************************************************/
/* Label Spanned                                                      */
/**********************************************************************/
SPANNED:
SAY " This is a spanned record file"
SAY " INSPECT will not BROWSE/EDIT this file"
EXIT
/**********************************************************************/
/* Label Direct                                                       */
/**********************************************************************/
DIRECT :
SAY " This file is Direct Access"
SAY " INSPECT will not BROWSE/EDIT this file"
EXIT
/**********************************************************************/
/* Label Not_Found                                                    */
/**********************************************************************/
NOT_FOUND :
SAY " INSPECT MACRO found no information available for this       "
SAY " dataset. Some reasons could be :                            "
SAY "    1.) Dataset not found in Catalog                         "
SAY "    2.) Dataset reside on tape                               "
SAY "    3.) Dataset is migrated by HSM to ML2                    "
SAY "    4.) Volume that dataset resides on is off-line           "
EXIT
/**********************************************************************/
/* Label No_Input                                                     */
/**********************************************************************/
NO_INPUT :
SAY " Input Error - INSPECT MACRO did not find a dataset"
SAY "               Ensure your cursor is positioned on the line"
SAY "               where 'DSN=' appears. "
EXIT


Scott Gaw
System Support Analyst
Alberta Treasury Branches (Canada)                                    c Scott Gaw 1994

