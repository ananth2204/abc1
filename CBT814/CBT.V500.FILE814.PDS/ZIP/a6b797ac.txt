De-compilation of RACF profiles

RACF profiles tend to be built up over time as a result of the
TSO commands issued by RACF administrators and others.
However, if you want to rename your high-level qualifiers or
move profiles to a different RACF database, there is no IBM
tool to reconstruct the original commands.

The REXX shown below provides this facility.  It accepts two
parameters: the first is the search filter and the second the class
name.  The search filter works in the same way as the RACF
search command.  The class defaults to DATASET but can
also be a general resource class name.

The result is a file written to the DDNAME DDOUT consisting
of the ADDSD/RDEFINE and PERMIT commands that, if re-
executed, would create the same profiles that currently exist.
This file can then be edited to change the high-level qualifier or
sent to another system before re-execution.  It can also be used
for report generation purposes. Before executing this REXX,
allocate the DDNAME DDOUT to a sequential file with a
LRECL of 80.  For large lists of profiles it can be run in batch.


RGENR REXX source

/* REXX - RACF RULE SOURCE GENERATOR.           */
/* WILL RECREATE THE RACF COMMANDS TO BUILD A   */
/* GIVEN SET OF RACF PROFILES, USEFUL BEFORE    */
/* RENAMING PROFILES OR MERGING QUALIFIERS ETC. */
/* PARM 1 - FILTER (EG SYS1.**)                 */
/* PARM 2 - CLASS  (DEFAULT DATASET)            */
/* FILE DDOUT WILL BE WRITTEN TO AND CONTAIN    */
/* THE RACF ADDSD/RDEFINE AND PERMIT COMMANDS   */
/* NECESSARY TO BUILD THE EXISTING PROFILES.    */
/* THESE CAN BE EDITED AND RE-EXECUTED LATER.   */
ARG FILTER CLASS
IF CLASS = ' ' THEN
   CLASS = 'DATASET'
/* PRODUCE LIST OF PROFILES FOR FILTER */
REC.0 = 0
X = OUTTRAP('SER.')
ADDRESS TSO "SEARCH FILTER("FILTER") CLASS("CLASS")"
X = OUTTRAP('OFF')
DO I = 1 TO SER.0
   PROF = STRIP(SER.I)
   LPROF = LENGTH(PROF)
   IF LPROF > 3 THEN
      IF SUBSTR(PROF,LPROF-3,4) = ' (G)' THEN
         DO
            PROF = SUBSTR(PROF,1,LPROF-4)
            GEN = 'GEN'
         END
      ELSE
         GEN = ' '
   X = OUTTRAP('PRF.')
   IF CLASS = 'DATASET' THEN
      ADDRESS TSO "LISTDSD DA('"PROF"') AUTH"
   ELSE
      ADDRESS TSO "RLIST "CLASS" "PROF" AUTH"
   X = OUTTRAP('OFF')
   IF CLASS = 'DATASET' THEN
      SRT = 2
   ELSE
      SRT = 1
   CALL DEFINE
   CALL INCREM
   REC.K = ' '
   CALL ACCESS
   CALL INCREM
   REC.K = ' '
END
K = REC.0 + 1
REC.K = ''
"EXECIO * DISKW DDOUT (STEM REC. FINIS"
EXIT 0
/* PRODUCE DEFINITIONS FOR THIS PROFILE */
DEFINE:
AUD = ' '; INS = ' '; LEV = ' '; OWN = ' '; UAC = ' '; WAR = ' '
IF CLASS = 'DATASET' THEN
   WSB = 4
ELSE
   WSB = 5
DO J = 1 TO PRF.0
   IF SUBSTR(PRF.J,SRT,12) = 'LEVEL  OWNER' THEN
      DO
         K = J + 2
         LEV = SUBWORD(PRF.K,1,1)
         OWN = SUBWORD(PRF.K,2,1)
         UAC = SUBWORD(PRF.K,3,1)
         WAR = SUBWORD(PRF.K,WSB,1)
      END
   IF SUBSTR(PRF.J,SRT,8) = 'AUDITING' THEN
      DO
         K = J + 2
         AUD = SUBWORD(PRF.K,1,1)
      END
   IF SUBSTR(PRF.J,SRT,6) = 'NOTIFY' THEN
      DO
         K = J + 2
         NOT = SUBWORD(PRF.K,1,1)
         IF NOT = 'NO' THEN
            NOT = ''
         ELSE
            NOT = "NOTIFY("NOT")"
      END
   IF SUBSTR(PRF.J,SRT,17) = 'INSTALLATION DATA' THEN
      DO
         K = J + 2
         INS = STRIP(SUBSTR(PRF.K,SRT))
         K = J + 3
         INS = INS STRIP(SUBSTR(PRF.K,SRT))
         INS = STRIP(INS)
      END
END
CALL INCREM
IF CLASS = 'DATASET' THEN
   REC.K = "ADDSD '"PROF"' "GEN" -"
ELSE
   REC.K = "RDEFINE "CLASS" "PROF" -"
CALL INCREM
REC.K = " LEVEL("LEV") OWNER("OWN") "NOT" -"
CALL INCREM
REC.K = " UACC("UAC") AUDIT("AUD") -"
IF WAR = 'YES' THEN
   DO
      CALL INCREM
      REC.K = " WARNING -"
   END
CALL INCREM
REC.K = " DATA('"INS"')"
RETURN 0
/* PRODUCE PERMIT LIST FOR THIS PROFILE */
ACCESS:
START = 0
DO J = 1 TO PRF.0
   IF START = 1 THEN
      IF SUBSTR(PRF.J,1,17) = '            ' THEN
         START = 0
   IF START = 1 THEN
      DO
         RID = SUBWORD(PRF.J,1,1)
         IF SUBSTR(RID,1,1) \= '-' & RID \= 'NO' THEN
            DO
               ACC = SUBWORD(PRF.J,2,1)
               CALL INCREM
               S = SUBSTR('        ',1,8-LENGTH(RID))
               IF CLASS = 'DATASET' THEN
                  REC.K = "PE '"PROF"' ID("RID")"S" ACC("ACC")" GEN
               ELSE
                  DO
                     CLS = 'CL('CLASS')'
                     REC.K = "PE "PROF" ID("RID")"S" ACC("ACC")" GEN CLS
                  END
            END
      END
   IF CLASS = 'DATASET' THEN
      IF SUBSTR(PRF.J,1,17) = '    ID     ACCESS' THEN
         START = 1
   IF CLASS \= 'DATASET' THEN
      IF SUBSTR(PRF.J,1,16) = 'USER      ACCESS' THEN
         START = 1
END
RETURN 0
/* INCREMENT COUNTER IN OUTPUT ARRAY */
INCREM:
REC.0 = REC.0 + 1
K = REC.0
RETURN 0


                                                                        c Xephon 1992

