Customisation experiences with ISPF 2.2.0


EDIT RECOVERY AS DEFAULT

The way that edit profiles are defined has changed from Version 1 to Version 2.
Instead of setting the default edit profile in panel EDIT01, the default profile
is now contained in the ISPF profile dataset, of which there is one for every
TSO user.  In this installation it is called &SYSUID..ISPF.ISPPROF.  ISPF is
constructed in such a way that edit recovery is automatically turned off unless
it is manually changed for every TSO user in the edit profile of ZDEFAULT.

To turn the RECOVERY option on automatically for all existing TSO users,
allocate file ISPPROF to a general profile dataset called SYSX.ISPPROF, go into
EDIT under Version 2, issue the command RECOVERY ON, save the file, then copy
SYSX.ISPPROF (ISREDIT) to the &SYSUID..ISPF.ISPPROF dataset with REPLACE for all
TSO users just before they start using Version 2.

Other edit profile options can be stored as new defaults in ZDEFAULT.  All
future new TSO users should also have the correct set-up in their ISPF profiles.
You can, for instance, use a CLIST or ISPF function to create new TSO users,
thus ensuring that they get a copy of SYSX.ISPPROF in their own ISPF profile
dataset.


SDSF INTERFACE TO ISPF V2R2

Support for SDSF under Version 2 has changed.  All panels or CLISTs under ISPF
calling SDSF must be changed.  Calls have been made compatible by testing for
the ISPF version that is available in an ISPF variable.  The documentation of
this interface change is lacking; the information was retrieved from INFO APAR
II02399.

In addition, the library ISFTLIB has to be added to log-on procedures under a DD
statement ISPTLIB, this is wrongly indicated in the SDSF installation guide as a
DD statement ISFTLIB.  For further information see the SECOM entry D5798DGN0198.

An example of how to call SDSF from a panel is shown below.  The example
contains compatibility for Version 1 and Version 2 and supports calls to SDSF
for primary and secondary JES2 using separate spools.

% 8 +SDSF       - SPOOL FACILITY JES2 %
% 8A+SDSF       - SPOOL FACILITY JESA %
 .
)INIT
 .
  &ZQ = ' '
 .
)PROC
 .
    &ZQ = TRUNC(&ZCMD,'.')
 .
                8,'PANEL(ZSDSFOPT) NEWAPPL(ISF)'
             '8A','PANEL(ZSDSFOPT) NEWAPPL(ISF)'
 .
   &ZTRAIL = .TRAIL
   /* THE TECHNIQUE WITH ZCMD DOES NOT WORK FOR V2 USING NESTED CALL */
   IF (&ZCMD = '8')
       IF (&ZENVIR = ' ')          /* BLANK FOR V1 */
           &SEL = 'PGM(ISFINIT)'
   /* THE TECHNIQUE WITH ZQ DOES NOT WORK FOR V1 USING NESTED CALL */
   IF (&ZQ = '8')
       IF (&ZENVIR ^= ' ')        /* NONBLANK FOR V2 AND HIGHER */
           &SEL = 'PGM(ISFISP) NOCHECK NEWAPPL(ISF)'
           IF (&ZTRAIL ^= ' ')
               &ZSEL = 'PANEL(ZSDSFOP2) NEWAPPL(ISF)'
   /* THE FOLLOWING IS FOR SUPPORTING ALTERNATE JES */
   IF (&ZCMD = '8A')
       IF (&ZENVIR = ' ')         /* BLANK FOR V1 */
           &SEL = 'PGM(ISFINITA)'
   IF (&ZQ = '8A')
       IF (&ZENVIR ^= ' ')        /* NONBLANK FOR V2 AND HIGHER */
           &SEL = 'PGM(ISFISPA) NOCHECK NEWAPPL(ISF)'
           IF (&ZTRAIL ^= ' ')
               &ZSEL = 'PANEL(ZSDSFOPA) NEWAPPL(ISF)'
)END

ISPF MODULES IN LPA

All vendors, including IBM, always recommend installing nearly everything in the
Link Pack Area (LPA), but LPA can be a scarce resource, even under XA.  We have
found that very few ISPF modules should go into the LPA, if any at all.  The
ones that I would recommend including in the LPA are:

ISRPCP and its aliases ISPF and PDF     1088      bytes
ISRSUBX   936  bytes
ISREDIT   3640 bytes
ISRPTC    1160 bytes
ISRBRO    2864 bytes
ISRLNENG  6848 bytes

A consequence of moving ISREDIT from LINKLIB to LPA is message IKJ56500I MODULE
ISREDIT NOT FOUND when ISREDIT is used in CLISTs to make them edit macros.
ISREDIT should be placed in the command table ISPTCM with an attribute of X'02'.


EDIT RECOVERY AND ISPEXEC EDIT

The design changes to edit recovery affect edits called by CLISTs using the
ISPEXEC EDIT DATASET format.  In the case of a dataset being edited first with a
standard ISPF EDIT or ISPEXEC EDIT DATASET, and the edit session being
interrupted, if the next edit session is resumed using ISPEXEC EDIT DATASET, the
pending edit recovery is ignored (only standard ISPF EDIT will recognise it).
This means that in such a situation the edit is resumed without fetching the
edit recovery file, and therefore for the time being, the changes are lost.
Later on, when going into standard ISPF EDIT, the recovery action is taken with
the possibility of overlaying data.

To circumvent the problem some coding should be put just ahead of the ISPEXEC
EDIT DATASET statements.  A CLIST subroutine called EDITRECV has been
implemented, and a call to this CLIST has been put into all our CLISTs using
ISPEXEC EDIT DATASET.

The CLIST has the following format and solves the above problem, but does not
take into account the possibility of using end keys on panel ISREDM02:

/*                                                                  */
/*  FETCHES PENDING EDIT RECOVERY IF ANY FROM ISPEXEC EDIT          */
/*                                                                  */
PROC 0
CONTROL NOMSG NOFLUSH NOLIST NOCONLIST NOSYMLIST
 SET &RECOV =  NO
 DO WHILE &RECOV = NO
  ISPEXEC EDREC QUERY
  IF LASTCC = 4 THEN DO
   ISPEXEC CONTROL DISPLAY REFRESH
   ISPEXEC DISPLAY PANEL(ISREDM02)
   IF &ZEDCMD.. = . THEN DO
    ISPEXEC EDREC PROCESS
   END
   IF &ZEDCMD = C THEN DO
    ISPEXEC EDREC CANCEL
   END
   IF &ZEDCMD = D THEN DO
    ISPEXEC EDREC DEFER
   END
  END
  ELSE DO
   SET & RECOV = YES
  END
 END
EXIT

NATIONAL CHARACTER SUPPORT

Support for the translation of lower case national characters is now a standard
feature in Version 2 of ISPF providing an appropriate language is used.  Support
for Danish, Norwegian, and Swedish can be accomplished easily, and probably also
other languages.  The dollar sign ($), the number or hash sign (#), and the 'at'
sign (@) can be used for their upper case national characters.

IBM claims to support Danish directly but this does not work without the fixes
mentioned below.  Norwegian and Swedish will be supported since the internal
representation of the character set is identical, but this is not mentioned in
the documentation.

Turning on the Danish translation tables in panels ISPOPT1, ISPOPT3A, and
ISPOPT3B results in an S806 abend, module accessed ISRDA78 etc.  This has been
reported to IBM but IBM has no solution.  We have provided our own solution,
which  was easy to develop.

Link module ISR3278 with an alias of ISRDA78, ISR3278A with an alias of
ISRDA78A, and ISR3278T with an alias of ISRDA78T.  To activate the modules,
panels ISPOPT1, ISPOP3A, and ISPOPT3B have been modified to contain the
following statements:

+TERMINAL TYPE    %===> ZTERM   +(3278  - 3276/3278/3279/3290 TERMINAL)
+                                (3278A - 3276/3278/3279 APL KEYBOARD)
+                                (3278T - 3276/3278/3279 TEXT KEYBOARD)
+                                (3290A - 3290 WITH APL KEYBOARD)
 VER (&ZTERM NB LIST 3278,3278A,3278T,3290A)
&ZCHARLM = TRANS(&ZTERM
                 3278  ,   ISPDA78
                 3278A ,   ISPDA78A
                 3290A ,   ISPDA78A
                 3278T ,   ISPDA78T)
IF  (&ZKEYS = 24)
  VER (&ZTERM LIST 3278,3290A MSG=ISPO002)

There is a side effect of switching between Version 1 and Version 2 and back
again using different translation tables.  The translation table used last is
recorded in the &SYSUID..ISPF.ISPPROF member ISPSPROF so:

¥    When switching from Version 1 to Version 2, using the normal translation
table of ISP3278, an English-only translation table will be fetched unless the
user goes into  option 0.3.

¥    When switching from Version 1 to Version 2, using the customised lower case
Version 1 national translation table of ISP3278Z in Version 2 will give an S806
abend for module ISP3278Z.

¥    Switching back to Version 1 during a period of parallel running, or having
to fall back to Version 1 having been in Version 2, results, under Version 1, in
an S806 abend for ISPDA78.
The compatible solution we implemented was:

¥    Under Version 1, re-link ISP3278, ISP3278A, ISP3278T with the aliases of
ISPDA78, ISEDA78A, ISPDA78T, respectively.

¥    Change Version 1 panels of ISPOPT1, ISPOPT3A, ISPOPT3B in SYSX.ISPPLIB as
mentioned above for Version 2.

¥    Log on to TSO using a log-on procedure calling ISPF Version 2, allocate
ISPPROF to SYSX.ISPPROF, go into ISPF.  The translation table of ISPDA78 is now
recorded in member ISPSPROF.

¥    Just before the cut-over, copy SYSX.ISPPROF(ISPSPROF) to
&SYSUID..ISPF.ISPPROF with REPLACE for all TSO users to ensure that the correct
translation tables are used in Version 2.


Nils Plum
Systems Programmer (Denmark)  © Nils Plum 1987



















































