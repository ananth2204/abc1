Uncataloguing DFRMMsms tape datasets

/**rexx**/
/*  PROGRAM-ID           DB2TAPE                                   */
/*  Remarks              This REXX exec will uncatalog all DB2     */
/*                       archive tapes that are no longer          */
/*                       registered in DFRMM.                      */
/*  Input Parameters     - Up to three DB2 archive HLQs.           */
/*trace i*/
sysauth.edgdate = "european"
save_prompt = prompt("off")
/* Check the input parameters                                      */
parse upper arg db2hlq1 db2hlq2 db2hlq3
if arg() = 0 then do
   say '**** No Parameters Input - Please Inform DB2 Support ****'
   zispfrc= 12
   exit(zispfrc)
end
if (db2hlq1 ^= '') then do
   if (length(db2hlq1) > 8) then do
      say '*** Parameter 1 > than 8 Characters. Inform DB2 Support ***'
      zispfrc= 12
      exit(zispfrc)
   end
end
if (db2hlq2 ^= '') then do
   if (length(db2hlq2) > 8) then do
      say '*** Parameter 2 > than 8 Characters. Inform DB2 Support ***'
      zispfrc= 12
      exit(zispfrc)
   end
end
if (db2hlq3 ^= '') then do
   if (length(db2hlq3) > 8) then do
      say '*** Parameter 3 > than 8 Characters. Inform DB2 Support ***'
      zispfrc= 12
      exit(zispfrc)
   end
end
/* Set the number of parameters input into stem variables          */
x= 0
if (db2hlq1 ^= '') then do
   x= x + 1
   db2hlq.x= db2hlq1
end
if (db2hlq2 ^= '') then do
   x= x + 1
   db2hlq.x= db2hlq2
end
if (db2hlq3 ^= '') then do
   x= x + 1
   db2hlq.x= db2hlq3
end
db2hlq.0= x
/* Issue an IDCAMS LISTCAT for each high level qualifier issued.   */
/* Call the listcat scan routine.                                  */
/* Call the DB2/DFRMM/UNCATALOG section.                           */
do i= 1 to db2hlq.0 by 1
   curr_db2_hlq= db2hlq.i
   x= outtrap("cluster.",'*',"noconcat")
   ADDRESS "TSO" "LISTCAT LEVEL("CURR_DB2_HLQ") NVSAM VOLUME"
   if (rc > 0) then do
      say '** Listcat has failed for' db2hlq.i 'Inform DB2 Support **'
      zispfrc= rc
      exit(zispfrc)
   end
   call listcat_scan
   if (db2.dsname.0 = 0) then
      iterate
   call process_db2_datasets
end
exit(0)
/* Scan the LISTCAT output and create the following stem variables: */
/* db2_dsname.y=         DB2 Archive Dataset Name                   */
/* db2_volser.y=         DB2 Archive Dataset Tape Volume Serial No  */
/* db2_devtyp.y=         DB2 Archive Dataset Tape Device Type       */
listcat_scan:
volind= ' '
y= 1
db2.dsname.0= 0
do x= 1 to cluster.0 by 1
   if substr(cluster.x,1,9) = 'NONVSAM -' then do
      reclen= length(cluster.x)
      reclen= reclen - 16
      volind= ' '
      db2_dsname.y= substr(cluster.x,17,reclen)
   end
   if substr(cluster.x,8,8) = 'VOLSER--' then do
      if (volind= 'Y') then
         iterate
      volind= 'Y'
      db2_volser.y= substr(cluster.x,26,6)
      db2_devtyp.y= substr(cluster.x,52,8)
      y= y + 1
   end
end
y= y - 1
db2.dsname.0= y
return
/* This routine will call DFRMM to verify that the DB2 dataset can   */
/* be uncatalogued. The first call to DFRMM uses the SD command.     */
/* This will check if DFRMM has still a record of the dataset. If    */
/* this is not the case the DB2 dataset is uncatalogued. If DFRMM    */
/* still has a record of this dataset the DFRMM LV command is issued */
/* to check the status of the tape the DB2 dataset was written to.   */
/* If the status of the tape is SCRATCH the DB2 dataset is scratched.*/
/* The following return and reason codes are set by the DFRMM,       */
/* RMM SD command:                                                   */
/* Return Code   Reason Code        Description                      */
/*     0             0              Command Completed Normally       */
/*     4             2              Search- More records May exist   */
/*     4             4              Search- Fewer records returned   */
/*                                  than requested.                  */
/*     4             8              No data sets meet search         */
/*                                  criteria.                        */
/* The following return and reason codes are set by the DFRMM        */
/* RMM LV command:                                                   */
/* Return Code   Reason Code        Description                      */
/*     0             0              Command Completed Normally       */
/*     12            18             Volume does not exist            */
/* The DFRMM variable EDG@VST is set by the RMM LV command as        */
/* follows:                                                          */
/*  EDG@VST = SCRATCH     -   Requested volume is a scratch volume.  */
/*  EDG@VST = MASTER      -   Requested volume is a master  volume.  */
/*  EDG@VST = USER        -   Requested volume is a user    volume.  */
/* The DFRMM return code is returned in variable RC, and the DFRMM   */
/* reason code is returned in variable EDG@RC                        */
process_db2_datasets:
do x= 1 to db2.dsname.0 by 1
   if (db2_devtyp.x ^= '78048081') then
      iterate
   reclen= length(db2_dsname.x)
   fullstop_pos= pos('.',db2_dsname.x,1)
   if fullstop_pos= 0 then
      iterate
   reclen= reclen - fullstop_pos
   if (reclen < 10) then
      iterate
   fullstop_pos= fullstop_pos + 1
   if substr(db2_dsname.x,fullstop_pos,10) ^= 'ARCHLOG1.A' &,
      substr(db2_dsname.x,fullstop_pos,10) ^= 'ARCHLOG1.B' &,
      substr(db2_dsname.x,fullstop_pos,10) ^= 'ARCHLOG2.A' &,
      substr(db2_dsname.x,fullstop_pos,10) ^= 'ARCHLOG2.B' then
      iterate
   edg@rc= 0
   ADDRESS "TSO" "RMM SD DSNAME('"db2_dsname.x"') OWNER(*)"
   select
     when (rc = 0) then
          nop
     when (rc = 4) & (edg@rc = 2) then
          nop
     when (rc = 4) & (edg@rc = 4) then
          nop
     when (rc = 4) & (edg@rc = 8) then do
          call db2_uncatalog
          iterate
          end
     otherwise
          say '** RMM SD has failed. RC ='rc' Reason Code ='edg@rc' **'
          say '** DSN= 'db2_dsname.x' volume= 'db2_volser.x' **'
          exit(rc)
   end
   edg@rc= 0
   ADDRESS "TSO" "RMM LV "db2_volser.x""
   select
     when (rc = 0) then
          nop
     when (rc = 12) & (edg@rc = 18) then do
          call db2_uncatalog
          iterate
          end
      otherwise
         say '** RMM LV has failed. RC ='rc' Reason Code ='edg@rc' **'
         say '** DSN= 'db2_dsname.x' volume= 'db2_volser.x' **'
         exit(rc)
   end
   if (edg@vst = 'SCRATCH') then do
      call db2_uncatalog
   end
end
return
/* This routine will call IDCAMS to uncatalog the DB2 archive       */
/* dataset.                                                         */
db2_uncatalog:
ADDRESS "TSO" "DELETE '"db2_dsname.x"' noscratch"
if (rc ^= 0) then do
   say '*** TSO DELETE Failed For 'db2_dsname.x'. RC = 'rc' ***'
end
else do
   say 'uncatalog' db2_dsname.x db2_volser.x
end
return
set_zispfrc:
arg zispfrc
ADDRESS "ISPEXEC" "VPUT (ZISPFRC) SHARED"
return


R F Perretta
Senior Systems Programmer (UK)                        c Xephon 1995

