Retrieving a dataset name from a program

It is often very useful to know which dataset name has been
assigned to a particular DDNAME from a program.  This
information can be used to print the dataset name on a report so
that, should the JCL become detached, the input file that was used
is apparent.  It also enables programmers to use dynamic
allocation against members of a PDS for use with the QSAM access
method, thus avoiding the complexities of BPAM for processing a
PDS.

Using QSAM for processing a PDS means that high-level languages
can be used for the I/O directly.  To achieve this, one would need
to get the dataset name with the routine shown below, optionally
read the PDS directory, and allocate particular members (old or
new) with a suitable dynamic allocation interface such as the one
supplied on the SHARE tape or one coded specifically for the
purpose.

Following the allocation of the member (effectively a sequential
file) the I/O can be performed from any language, and the
member is simply unallocated.  However, to allocate the
'dataset(member)' the dataset name must be known and this
routine allows this using the DDNAME.  It should be pointed out
that dynamic allocation is not restricted to TSO and can be used in
any job, often resulting in simpler JCL and better defaults.

         TITLE 'GETDSN - MODULE TO EXTRACT THE DSN FOR A DDNAME'
GETDSN   CSECT ,
*********************************************************************
** PROGRAM:    GETDSN
** PARAMETERS: (2) PASSED AS STANDARD FORMAT CALL SEQUENCE
**             DDNAME   CL8  (input)
**             DSNAME   CL44 (output)
** FUNCTION:   CHECK DDNAME EXISTS IN TASK INPUT/OUTPUT TABLE (TIOT).
**             READS JFCB TO EXTRACT DSNAME, RETURN THE DATASET NAME.
** RET CODE:   R15 = 0 IF OK, R15 = 4 IF DDNAME NOT IN TIOT.
*********************************************************************
         STM   R14,R12,12(R13)          SAVE REGS
         LR    R12,R15                  SET BASE REG
         USING GETDSN,R12
         ST    R13,SAVEAREA+4           BACKWARD CHAIN
         LR    R11,R13
         LA    R13,SAVEAREA             POINT TO OUR SAVE AREA ADDR
         ST    R13,8(,R11)              FORWARD CHAIN
         TITLE 'GETDSN - START OF PROCESSING CODE'
         LM    R2,R3,0(R1)             LOAD PARAMETER LIST
         EXTRACT TIOTADDR,FIELDS=(TIOT) GET TIOT ADDR
         MVC   DDNAME,0(R2)             MOVE DDNAME
         L     R1,TIOTADDR              SEARCH TIOT FOR DDNAME
         LA    R1,24(,R1)               STEP TO DD ENTRIES
         XR    R0,R0                    CLEAR LENGTH REGISTER
LOOP1    IC    R0,0(R1)                 GET LENGTH OF THIS ENTRY
         LTR   R0,R0                    IS LENGTH ZERO?
         BZ    NOTFOUND                 YES THEN NOTFOUND
         CLC   4(8,R1),DDNAME           IS DDNAME THE SAME?
         BE    FOUND                    YES THEN FOUND
         CLC   36(4,R1),=F'0'           END OF TIOT?
         BE    NOTFOUND                 YES THEN NOTFOUND
         AR    R1,R0                    POINT TO NEXT ENTRY
         B     LOOP1                    AND PROCESS IT
NOTFOUND LA    R15,4                    SET RET CODE FOR BAD DDNAME
         B     OUT                      AND GOTO EXIT
FOUND    LA    R15,0                    SET RET CODE FOR GOOD DDNAME
         LA    R11,DUMDCB               FIND OUR DCB
         MVC   40(8,R11),DDNAME         MOVE IN THE DDNAME
         RDJFCB DUMDCB                  READ JFCB
         MVC   0(44,R3),JFCBAREA        MOVE IT
         XC    JFCBAREA,JFCBAREA        CLEAR JFCB
         XC    DDNAME,DDNAME            CLEAR DDNAME
         B     OUT                      AND GOTO EXIT
OUT      L     R13,4(R13)               RELOAD SAVE AREA ADDR
         RETURN (14,12),RC=(15)         RETURN TO CALLER
         LTORG
SAVEAREA DC    18F'0'
TIOTADDR DC    F'0'
DDNAME   DC    CL8' '
DUMDCB   DCB   DDNAME=NOTSET,DSORG=PS,MACRF=PL,EXLST=EXLST
EXLST    DS    0F
         DC    X'87',AL3(JFCBAREA)      FUNCTION,AREA
JFCBAREA DC    176X'00'                 JFCB AREA
         END


    © Reserved 1989

