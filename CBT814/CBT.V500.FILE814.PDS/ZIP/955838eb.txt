Notifying users of arriving mail

At our installation, our operations people were constantly
ringing users to inform them that there were TSO transmit files
for them that needed to be received.  As you can imagine, this
began to be a real problem when hundreds of these files needed
to be received, so I decided to try to find a quick way to inform
our users that mail had arrived for them.  Files that are
transmitted node to node can be handled by the JES2 EXIT13
by setting the return code to 8, but files that are transmitted
within a single node or across an MAS system cannot be
handled with this exit.

I decided to use the TSO transmit termination exit,
INMXZ02R.  This version, as opposed to INMXZ02, uses a
standard parameter list and runs with AMODE=31 and
RMODE=ANY.  Using the addressee chain, which is passed as
a parameter, this exit will construct the JES2 HASP549
message and, using the TSO service facility, will issue a TSO
send command to send the following message to each user
defined in the addressee chain:

      $HASP549 MAIL FROM(nodeid/userid) RECORDS(nnnn)

The send command is issued with the parameters LOGON and
WAIT.  The environment for this exit is:

o      State: problem program
o      Key: 8
o      RMODE: any
o      AMODE: 31
o      APF: authorized.

The exit can reside in the LPA, LINKLIST, or a private
STEPLIB provided it is authorized.

A test has been inserted to check if the output is destined for
another node.  This is done to ensure that the send command is
not issued under these circumstances.

Further information can be obtained from SC28-1380 TSO/E
Customization and SC28-1364 TSO/E Programming Services.

Our current level of JES2 is 2.2.3, although this exit has run
successfully with previous levels.

INMXZ02R TITLE 'NOTIFY RECEPIENTS THAT TRANSMIT FILE HAS BEEN SENT'
INMXZ02R CSECT
***********************************************************************
*        MODULE NAME.   INMXZ02R                                      *
*        REMARKS.       THIS MODULE WILL NOTIFY THE RECEIVER THAT A   *
*                       TRANSMITTED FILE HAS ARRIVED. THIS EXIT IS    *
*                       USED IN CONJUNCTION WITH THE JES2 EXIT 13.    *
*                       A TSO SEND COMMAND ISSUED THRU THE TSO SERVICE*
*                       FACILITY IS USED TO NOTIFY USERS WITH THE     *
*                       FOLLOWING MESSAGE:                            *
*            $HASP549 MAIL FROM (NODEID/USERID) RECORDS(NNN)          *
***********************************************************************
ZERO     EQU   X'F0'                   CHARACTER ZERO
BLANK    EQU   X'40'                   BLANK
         $HASPEQU
         TITLE 'MAIN PROCESSING LOGIC'
INMXZ02R AMODE 31
INMXZ02R RMODE ANY
         SAVE  (14,12),,INMXZ02R_&SYSDATE-&SYSTIME
         USING INMXZ02R,R12             SET UP BASE ADDRESSABILITY
         LR    R12,R15                  ENTRY POINT ADDRESS
         LR    R10,R1                   PARAMETER LIST ADDRESS
GETSTOR  EQU   *
         LA    R0,WORKLEN               LENGTH OF WORKAREA
         GETMAIN R,LV=(0),RELATED=(FREE,'GET STORAGE')
         ST    R13,4(,R1)               ADDRESS OF PREVIOUS SA
         ST    R1,8(,R13)               ADDRESS OF NEXT SA
         LR    R13,R1                   OUR SAVEAREA ADDRESS
         USING WORKAREA,R13             ADDRESSABILITY
         L     R4,68(,R10)              TRANSMIT RETURN CODE
         CLC   8(4,R4),=X'00000000'     TRANSMIT WORK?
         BNE   RETURN                   NO- JUST RETURN
         L     R5,60(,R10)              @ PARM ENTRY 17
         L     R5,8(,R5)                @ OF ADDRESSEE CHAIN
         USING ADDRSE,R5                INFORM THE ASSEMBLER
         TITLE 'CONSTRUCT THE TSO SEND COMMAND'
SENDCOMD EQU   *
         CLC   ADDRNNME(L'TORONTO),TORONTO SENDING TO TORONTO?
         BE    NXTADRSE                 YES- IGNORE
         SR    R6,R6                    ZEROIZE
         LA    R4,MSGTEXT               @ SEND COMMAND BUILD AREA
         MVC   0(L'SENDCMD,R4),SENDCMD  MESSAGE TEXT
         USING PSA,0                    INFORM THE ASSEMBLER
         L     R11,FLCCVT               CVT ADDRESS
         USING CVT,R11                  INFORM THE ASSEMBLER
         L     R11,CVTJESCT             JES CVT
         USING JESCT,R11                INFORM THE ASSEMBLER
         L     R11,JESSSCT              SSCT @
         USING SSCT,R11                 INFORM THE ASSEMBLER
CHKSSCT  EQU   *
         LTR   R11,R11                  END OF SSCT CHAIN?
         BZ    INCR                     YES- GIVE UP
         CLC   SSCTSNAM,=C'JES2'        JES2 SUBSYSTEM?
         BNE   NXTSSCT                  NO-
         L     R1,SSCTSSVT              SSVT @
         USING SSVT,R1                  INFORM THE ASSEMBLER
         MVC   JESCOMC,SVTCOMCH         HASP COMMAND CHARACTER
         B     INCR                     MOVE ALONG MESSAGE TEXT
NXTSSCT  EQU   *
         L     R11,SSCTSCTA             @ OF NEXT SSCVT
         B     CHKSSCT                  CHECK IT OUT
INCR     EQU   *
         LA    R4,L'SENDCMD(,R4)        MOVE ALONG MESSAGE AREA
         LA    R6,L'SENDCMD(,R6)        MESSAGE LENGTH SO FAR
         MVC   0(L'MSGTEXT1,R4),MSGTEXT1 MESSAGE TEXT
         LA    R4,L'MSGTEXT1(,R4)       MOVE ALONG MESSAGE AREA
         LA    R6,L'MSGTEXT1(,R6)       MESSAGE LENGTH SO FAR
         SR    R7,R7                    ZEROIZE
         ICM   R7,B'0011',SNDNDELN      SENDERS NODE LENGTH
         AR    R6,R7                    MESSAGE LENGTH SO FAR
         BCTR  R7,0                     -1 FOR MVC
         EX    R7,MOVENODE              MOVE NODE TO MESSAGE AREA
         LA    R4,1(R7,R4)              MOVE ALONG MESSAGE TEXT
         MVI   0(R4),C'/'               NODE/
         LA    R4,1(,R4)                MOVE ALONG MESSAGE TEXT
         LA    R6,1(,R6)                MESSAGE LENGTH SO FAR
         SR    R7,R7                    ZEROIZE
         ICM   R7,B'0011',SNDUIDLN      SENDERS USERID LENGTH
         AR    R6,R7                    MESSAGE LENGTH SO FAR
         BCTR  R7,0                     -1 FOR MVC
         EX    R7,MOVEUID               MOVE USERID TO MESSAGE AREA
         LA    R4,1(R7,R4)              MOVE ALONG MESSAGE TEXT
         MVC   0(L'MSGTEXT2,R4),MSGTEXT2 MESSAGE TEXT
         LA    R4,L'MSGTEXT2(,R4)       MOVE ALONG MESSAGE TEXT
         LA    R6,L'MSGTEXT2(,R6)       MESSAGE LENGTH SO FAR
         L     R7,64(,R10)              @ PARM ENTRY 17
         L     R7,8(,R7)                @ NO JES2 OUTPUT RECORDS
         CVD   R7,DW                    CONVERT TO DECIMAL
         MVC   NORECS,EDPAT             EDIT PATTERN
         ED    NORECS,JES2RECS          CONVERT TO CHARACTER
         LA    R8,NORECS                @ EDIT AREA
         LA    R9,L'NORECS(0,0)         LEN OF EDIT AREA
ZEROSCAN EQU   *
         CLI   0(R8),BLANK              BLANK?
         BNE   NONBLANK                 NO-
         LA    R8,1(,R8)                NEXT CHARACTER
         BCT   R9,ZEROSCAN              DO WHILE R9 > 0?
         B     BRACKET                  INSERT BRACKET
NONBLANK EQU   *
         AR    R6,R9                    LENGTH OF MESSAGE SO FAR
         BCTR  R9,0                     -1 FOR MVC
         EX    R9,MOVERCNT              MOVE COUNT TO MESSAGE TEXT
         LA    R4,1(R9,R4)              MOVE ALONG MESSAGE TEXT
BRACKET  EQU   *
         MVC   0(L'MSGTEXT3,R4),MSGTEXT3 MESSAGE TEXT
         LA    R4,L'MSGTEXT3(,R4)       MOVE ALONG MESSAGE TEXT
         LA    R6,L'MSGTEXT3(,R6)       MESSAGE LENGTH SO FAR
         SR    R7,R7                    ZEROIZE
         ICM   R7,B'0011',ADREUIDL      ADDRESSEES USERID LENGTH
         AR    R6,R7                    MESSAGE LENGTH SO FAR
         BCTR  R7,0                     -1 FOR MVC
         EX    R7,MOVEEUID              MOVE USERID TO MESSAGE AREA
         LA    R4,1(R7,R4)              MOVE ALONG MESSAGE TEXT
         MVC   0(L'MSGTEXT4,R4),MSGTEXT4 MESSAGE TEXT
         LA    R6,L'MSGTEXT4(,R6)       MESSAGE LENGTH SO FAR
         TITLE 'CALL SEND COMMAND PROCESSOR'
CALLSEND EQU   *
         MVC   FLAGS,=XL4'00000101'     FLAGS
         STCM  R6,B'1111',CMDLEN        COMMAND LENGTH
         MVC   RETCODE,FWZEROS          RETURN  CODE
         MVC   REASONC,FWZEROS          REASONC CODE
         MVC   ABENDCD,FWZEROS          ABEND   CODE
         L     R15,CVTPTR(0,0)          @ CVT
         USING CVT,R15                  INFORM THE ASSEMBLER
         L     R15,CVTTVT               @ TSO VECTOR TABLE
         L     R15,TSVTASF-TSVT(,R15)   @ OF AUTH SERVICE FACILITY
         MVC   CALLPARM,CALL            CALL PARAMETER LIST
         CALL  (15),(FLAGS,MSGTEXT,CMDLEN,RETCODE,REASONC,ABENDCD),VL, X
               MF=(E,CALLPARM)
NXTADRSE EQU   *
         L     R5,0(,R5)                NEXT ADDRESSEE IN THE CHAIN
         LTR   R5,R5                    ANYBODY THERE?
         BNZ   SENDCOMD                 YES- KEEP SENDING THE MESSAGES
         B     RETURN                   NO-  LETS GET OUT OF HERE
         TITLE 'RETURN TO CALLER'
RETURN   EQU   *
         LR    R1,R13                  SAVE NEW SAVEAREA ADDRESS
         L     R13,PREVSA              INIT SAVEAREA ADDRESS
         LA    R0,WORKLEN              LENGTH OF WORKAREA
FREE     EQU   *
         FREEMAIN R,LV=(0),A=(1),RELATED=(GETTOR,'FREE STORAGE')
         RETURN (14,12),,,RC=0          RESTORE REGS
         TITLE 'STANDALONE MVCS'
MOVENODE MVC   0(*-*,R4),SENDNODE      MOVE SENDERS NODE TO MESSAGE
MOVEUID  MVC   0(*-*,R4),SENDUID       MOVE SENDERS UID TO MESSAGE
MOVEEUID MVC   0(*-*,R4),ADREUID       MOVE ADDRESSEES UID TO MESSAGE
MOVERCNT MVC   0(*-*,R4),0(R8)         MOVE TOTAL RECORDS TRANSMITTED
         LTORG
FWZEROS  DC    X'00000000'
TORONTO  DC    CL2'N1'
SENDCMD  DC    CL15'SEND ''@HASP549 '
MSGTEXT1 DC    CL10'MAIL FROM('
MSGTEXT2 DC    CL10') RECORDS('
MSGTEXT3 DC    CL5')'',U('
MSGTEXT4 DC    CL12'),LOGON,WAIT'
EDPAT    DC    XL10'40202020202020202120'
TEXTKEY  DC    XL4'00000001'
CALL     CALL  ,(,,,,,),VL,MF=L
CALLLEN  EQU   *-CALL
************************WORKAREA DSECT*********************************
WORKAREA DSECT
SAVEAREA DS    CL72                    SAVEAREA
PREVSA   EQU   SAVEAREA+4,4            ADDRESS OF PREVIOUS SAVEAREA
DW       DS    D                       WORK AREA
JES2RECS EQU   DW+3,5                  NO OF RECORDS TRANSMITTED
NORECS   DS    CL10                    NO OF JES2 RECS IN CHAR FORMAT
MSGTEXT  DS    CL100                   MESSAGE AREA
JESCOMC  EQU   MSGTEXT+6,1             POSITION FOR JES COMMAND CHAR
         DS    0F                      ALIGNMENT
FLAGS    DS    XL4                     FLAGS
CMDLEN   DS    F                       SEND COMMAND LENGTH
RETCODE  DS    F                       RETURN CODE
REASONC  DS    F                       TSF REASON CODE
ABENDCD  DS    F                       ABEND CODE
CALLPARM DS    XL(CALLLEN)             CALL PARM LENGTH
WORKLEN  EQU   *-SAVEAREA              LENGTH OF WORKAREA
************************ADDRESSEE DSECT********************************
ADDRSE   DSECT
ADDRNEXT DS    XL4                     @ NEXT ENTRY IN CHAIN
ADDRNLEN DS    XL2                     ADDRESSEES NODE LENGTH
ADDRNNME DS    XL8                     ADDRESSEES NODE NAME
ADREUIDL DS    XL2                     ADDRESSEES USERID LEN
ADREUID  DS    CL8                     ADDRESSEES USERID
         DS    CL76                    FILLER
SNDUIDLN DS    XL2                     SENDERS USERID LEN
SENDUID  DS    CL8                     SENDERS USERID
SNDNDELN DS    XL2                     SENDERS NODE LEN
SENDNODE DS    CL8                     SENDERS NODE
*****************************CVT DSECT*********************************
         CVT   DSECT=YES,LIST=NO
***********************TSO VECTOR TABLE DSECT**************************
         IKJTSVT
*************************PSA MAPPING MACRO*****************************
         IHAPSA DSECT=YES,LIST=NO
************************SSCT MAPPING MACRO*****************************
         IEFJSCVT
*********************JES CONTROL TABLE MAPPING MACRO*******************
         IEFJESCT TYPE=DSECT
***************************HASP XECB***********************************
         $XECB
***************************HASP SCAT***********************************
         $SCAT
***************************HASP HFAME**********************************
         $HFAME
********************HASP SUBSYSTEM VECTOR TABLE************************
         $SVT
         END  INMXZ02R


R F Perretta
Chief Systems Programmer (UK)                                    c Xephon 1991

