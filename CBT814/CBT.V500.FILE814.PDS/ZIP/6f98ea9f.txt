Resetting link-edit attributes


Problem addressed

The linkage editor is a powerful program for the processing of
object and load modules. One weakness that the linkage editor
has, is that it cannot alter certain program attributes. For
example, a load module may not be given the attribute REUS:
the object module is required for such attributes to be set. This
usually means that a recompilation is required even though the
linkage editor will set the attribute without regard to the
program's content. This requirement for recompilation has
several drawbacks:

1      It can be time-consuming if many programs are involved.

2      Recompilation may not be possible because, for example,
      the source program is not available or the macro libraries
      are incompatible with those used for the original compilation.

The LINKATTR program enables selected attributes to be set
using the load module as input.


Solution

The LINKATTR program performs an update-in-place of the
specified load module, and sets the new attribute in the
directory entry. The specified attributes are ORed over the
existing attribute values: no check is made as to whether
conflicting attributes have been specified.


Invocation

//stepname EXEC PGM=LINKATTR,PARM='execparm'
//SYSUT1   DD   DSN=libraryname,DISP=OLD

where

o      execparm is modulename[switch]...

o      switch is /REUS, /RENT, or /LET.

o      libraryname is the dataset name of the library that contains
      the specified load module modulename.


Return codes

0      OK
4      OK, no switch parameter specified
8      Invalid parameter length
12      Invalid switch parameter
16      OPEN error (dataset not allocated, etc)
20      BLDL error (member not found, etc)
24      STOW error
28      CLOSE error.


Sample JCL

//S1       EXEC PGM=LINKATTR,PARM='ALPHA/REUS'
//SYSUT1   DD   DSN=TEST.LOAD,DISP=OLD

This job sets the attribute for the program ALPHA contained in
the TEST.LOAD library to 'reusable'.


LINKATTR program code

         TITLE '(Re)set LINKEDIT-module attributes'
LINKATTR CSECT
* initialize addressing
         STM   R14,R12,12(R13)      save registers
         BALR  R12,0                base register
         USING *,R12
         LA    R15,SA               A(save area)
         ST    R13,4(R15)           backward ptr
         ST    R15,8(R13)           forward ptr
         LR    R13,R15              A(new save area)
         B     SA_END               jump over save area
SA       DS    18A                  save area
SA_END   DS    0H
         LA    R15,8                set default return code (=no parm)
         L     R2,0(R1)
         LH    R3,0(R2)             L(EXEC parm)
         LTR   R3,R3
         BZ    EOJ                  :no parameter
         CH    R3,=AL2(L'PARM)
         BH    EOJ                  :parameter too long
         BCTR  R3,0                 LC(parm)
         MVC   PARM(0),2(R2)
         EX    R3,*-6               move parameter
         LA    R3,1(R3)             reset length
         LA    R4,0                 initialize L(pgmname)
* search for switches
         LA    R2,PARM
A110     CLI   0(R2),C'/'
         BE    A100
A150     LA    R2,1(R2)
         BCT   R3,A110
* end, last switch found; process module
         B     A200
A100     LTR   R4,R4
         BNZ   A140                 pgmname already found
         LR    R4,R2
         S     R4,=A(PARM)          L(pgmname)
         BZ    EOJ                  no name
         CH    R4,=AL2(L'PGMNAME)
         BH    EOJ                  name too long
         BCTR  R4,0                 LC(name)
         MVC   PGMNAME(0),PARM
         EX    R4,*-6               move pgmname
         LA    R4,1                 set length flag
A140     LA    R15,SW_TAB           switch table
         USING SW_TABX,R15
         LA    R0,SW_TABN           no of entries
         SR    R1,R1
A130     IC    R1,SWLC              LC(name)
         CLC   SWNAME(0),0(R2)
         EX    R1,*-6
         BE    A120
         LA    R15,SW_TABL(R15)     next entry
         BCT   R0,A130
* end of switch table, entry not found
         LA    R15,12               set return code
         B     EOJ
A120     OC    ATTR,SWATTR          set attribute bit
         B     A150                 process next entry
A200     LA    R15,4                return code(no switch specified)
         OC    ATTR,ATTR
         BZ    EOJ                  no switch specified
         OPEN  (SYSUT1,UPDAT)
         LTR   R15,R15              test OPEN return code
         LA    R15,16               return code(OPEN error)
         BNZ   EOJ                  :terminate
         BLDL  SYSUT1,BLDL
         LTR   R15,R15              test BLDL return code
         LA    R15,20               return code(BLDL error)
         BNZ   EOJ                  :terminate
* member found; read blocks
A210     READ  DECB,SF,SYSUT1,IOAREA,'S',MF=E
         CHECK DECB
         WRITE DECB,SF,SYSUT1,IOAREA,'S',MF=E
         CHECK DECB
         B     A210
A220     DS    0F EOF
* move BLDL data into STOW Control Block
         MVC   STOW_C(L'STOW_C+L'STOW_UD),BLDL_C
         OC    PDSATR(1),ATTR
         STOW  SYSUT1,PGMNAME,R     replace directory entry
         LTR   R15,R15              test STOW return code
         LA    R15,24               return code(STOW error)
         BNZ   EOJ                  :terminate
         CLOSE SYSUT1
         LTR   R15,R15              test CLOSE return code
         LA    R15,28               return code(CLOSE error)
         BNZ   EOJ                  :terminate
         LA    R15,0                processing successful
EOJ      DS    0H                   job end
         L     R13,4(R13)           restore A(old save area)
         RETURN (14,12),RC=(15)
SYSUT1   DCB   DDNAME=SYSUT1,EODAD=A220,DSORG=PO,MACRF=(R,W),RECFM=U
         READ  DECB,SF,SYSUT1,IOAREA,'S',MF=L
BLDL     DS    0F                   BLDL workarea
         DC    AL2(1,L'USERDATA)
PGMNAME  DC    CL8' '
TTRKZ    DS    XL3,XL1,XL1
BLDL_C   DS    XL1
USERDATA DS    XL58
PDSATR   EQU   PGMNAME+20
         ORG   TTRKZ
         DS    XL3                  TTR address (from BLDL)
STOW_C   DS    XL1
STOW_UD  DS    XL58
         ORG
PARM     DC    CL120' ',C' '        EXEC PARM
ATTR     DC    X'0'
* switch table
SW_TAB   DC    AL1(4),CL8'/RENT',X'80'
         DC    AL1(4),CL8'/REUS',X'40'
         DC    AL1(3),CL8'/LET ',X'02'
SW_TABN  EQU   (*-SW_TAB)/SW_TABL   no of entries
         LTORG
IOAREA   DS    CL32760              record buffer
SW_TABX  DSECT
SWLC     DS    AL1                  length code(SWNAME entry)
SWNAME   DS    CL8                  switch (prefixed with '/')
SWATTR   DS    XL1                  attribute bits
SW_TABL  EQU   *-SW_TABX
         END


A S Rudd
Technical Consultant (Germany)                        c A S Rudd 1992

