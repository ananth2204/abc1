Restricting the RESET command - an update
I promised in a previous article [Restricting the RESET command, Issue 5,
February 1987, pages 6-13] that when we had installed MVS/SP 2.2.0, I would
rework my previous contribution to MVS Update, which extends the MVS RESET
command to be controlled by the specifications in the IEAICS PARMLIB member.
The updated version of the original article follows, with the addition of the
MVS/SP2.2.0 revised AMASPZAP input and RESETICS program.
This modification arose as a result of problems that I have encountered in a few
installations.  People, be they operators, systems programmers, or scheduling
clerks, have a habit of resetting jobs to any performance group they can find.
They especially like those performance groups reserved for on-line systems and
major operating systems components such as JES2, GRS, ACF2, etc.  This has
caused problems for me in system measurement since I look at usage by
performance group, not to mention the performance problems that it can cause.
IBM provides a facility to set jobs into their initial performance group by
means of the IEAICS member of SYS1.PARMLIB, be they batch jobs, started tasks,
or TSO users.  I decided to extend the IEAICS member specifications to the MVS
RESET command.  The process of inserting this modification is as follows:
1    The program RESETICS is assembled and linked into a LINKLIST library.  It
must be linked with the linkage editor attribute AMODE(31) since it accesses
control blocks above the 16 megabyte line.  Since the program is re-entrant, it
may be placed in SYS1.LPALIB or anywhere else in the system LPALIST
concatenation.
2    The RESET command processing module (IEEMB810) is ZAPped with a patch which
will make it link to program RESETICS.  Note the IEEMB810 is marked as re-
entrant and re-usable even though it resides in SYS1.LINKLIB.  The ZAP, which
stores into an in-line parameter list, violates this re-entrancy but will work
anyway.  The alternative is to write RESETICS as a user SVC, change the ZAP to
replace the SYSEVENT SVC (SVC 95) with the user SVC call, and have RESETICS
issue the SYSEVENT and pass the result back to IEEMB810.  This would simplify
the ZAP enormously.  I implemented it as I did because I like to be able to pull
things in and out ‘on the fly’.  That is, at any time I can replace RESETICS
with an IEFBR14 program.
3    If you are running with a dynamic BLDL facility, such as PMO or DYNABLDL
from the Connecticut Bank tape, or if running MVS/XA LLA, do not forget to do a
refresh to pick up the new version of IEEMB810.
You now have complete control over which performance groups will be used for
which jobs and users.  The one thing you must do is be specific in the IEAICS
member as to what you want.  By this I mean that if you have a performance group
to swap a job out (ours is 86), it must be specified as an optional performance
group on each IEAICS line entry so it will be allowed on a RESET command.  If
you have multiple low, high, and medium priority batch performance groups, they
must all be specified as optional performance groups in addition to the control
performance group.
The example below shows that, for subsystem JES2, the control performance group
is 1, and optionally 3, 4, or 86 may be specified for jobs which do not have
specific matches on name or class.  Under JES2, jobs beginning with the
characters IDMS will have a default performance group of 83 and optionally 86.
Note that for all entries, I specify my swap out performance group (86), so any
job or user is able to be swapped out.  This should be specified at both the
subsystem level and the detail level.  This is because the RESETICS program will
not go to check the subsystem level information if a match is found at the
detail level.  Also note that the order of specification of entries within the
IEAICS member is relatively unimportant.  Under each subsystem, entries are
arranged by transaction name, user-id, class, and lastly, accounting
information.  Within each of these, first full non-generic names are shown
followed by generic names in descending size order.
This modification has been tested in MVS/SP 2.2.0 with JES2 2.2.0.  It does not,
however, support use of account codes as a criterion for resetting a job’s
performance group since the accounting information in the MVS JCT/ACT control
blocks is kept in the user’s SWA.  I did not want to invest the extra coding
required to use cross memory services to retrieve this information.  This
version of RESETICS also incorporates a new feature not in the previous one.  If
the performance group value entered on the RESET command is invalid for the
particular job or user, then the individual transaction name, user-id, or class
control performance group is substituted.  If one of these specifications does
not exist, then the subsystem default control performance group is used as the
new default.  In either case, a message is issued to the operator console to
inform him that the invalid performance group request was overridden to the
IEAICS default.
Since some of the SRM-related macros reside in SYS1.PVTMACS, I have hard coded
the required offsets for the necessary fields in the RESETICS program.  They are
preceded by a comment line containing the macro calls to invoke them.  You may
wish to use them if you have the macros available on your system.  The equates
are used to create otherwise undefined symbols for the IRARMCT macro to assemble
properly.  If you use the IRARMCT macro and find that some of the labels used by
it are not defined, simply equate each undefined label to zero so that the
assembler can find it.  In this case it is a rather harmless technique, so the
macro can be used to access other defined fields.
There are some other comments in the code dealing with the IBM SRM routine
IRARMFPG, which is the ‘find performance group’ routine.  This routine uses
stack areas which are similar to standard OS save areas.  I have included a few
stack areas in the RESETICS program for it to use.  If the routine changes to
use more stack areas the eyecatcher in the program should get overlaid and the
program would issue a message detecting the error.  The simple solution would be
to add a few more stack areas.  Additionally, in the parameter list passed to
IRARMFPG, the pointer to the RRPA is zero, because I do not know how to build an
RRPA at this time.  In the current IRARMFPG code, however, the RRPA pointer is
not used; this may change in the future.  The ASCB address, which is documented
as being required by IRARMFPG, is also not currently used by it but is filled in
anyway since it is so easily accessible.
SAMPLE IEAICS MEMBER
SUBSYS=JES2,PGN=1,OPGN=(3,4,86)
  TRXNAME=IDMS(1),PGN=83,OPGN=86
  TRXNAME=CICP(1),PGN=84,OPGN=86
  TRXNAME=CICT(1),PGN=85,OPGN=86
  TRXNAME=VIDEO(1),PGN=82,OPGN=86
  TRXCLASS=8,PGN=3,OPGN=(4,86)
SUBSYS=STC,PGN=80,OPGN=(86,98)
  TRXNAME=GRS,PGN=95
  TRXNAME=OMEGAMON,PGN=60,OPGN=86
  TRXNAME=JES(1),PGN=99,OPGN=86
  TRXNAME=MSX(1),PGN=98,OPGN=86
  TRXNAME=NET(1),PGN=97,OPGN=86
  TRXNAME=VPS,PGN=97,OPGN=86
  TRXNAME=TCAM(1),PGN=96,OPGN=86
  TRXNAME=RMF(1),PGN=60,OPGN=86
SUBSYS=TSO,PGN=2,OPGN=(7,11,86)
  USERID=BRUCEB,PGN=2,OPGN=(11,80,86)
  USERID=APPL(1),PGN=5,OPGN=(80,86)
THE ZAP TO IEEMB810
++USERMOD(LM00145).
++VER(Z038) FMID(HBB2102).
++ZAP(IEEMB810) /* THIS ZAP HOOKS INTO IEEMB810 BEFORE A
                   SYSEVENT RESETPG IS ISSUED.  IT CALLS PROGRAM
                   RESETICS TO VALIDATE THE PERFORMANCE GROUP
                   ENTERED ON THE RESET COMMAND.  IEEMB810 IS
                   MARKED REENTRANT/REUSABLE AND THIS ZAP WILL
                   VIOLATE REENTRANCY (SEE COMMENTS MARKED WITH
                   ASTERISK).  AN ALTERNATIVE METHOD IS TO
                   REWRITE RESETICS AS AN SVC TO REPLACE THE
                   IEEMB810 SYSEVENT RESETPG. */.
 NAME IEEMB810
* START ZAP VERIFICATION
 VER 03B4 47F0C39A                  B     SVC95         VERIFY BRANCH
 VER 03B8 001F                      DC    AL2(31)       VERIFY SYSEVENT CODE
 VER 03BA 0A5F             SVC95    SVC   95            VERIFY SYSEVENT SVC
 VER 0490 0000000000000000          DC    4F'0'         VERIFY PATCH
 VER 0498 0000000000000000
 VER 04A0 0000000000000000          DC    4F'0'         VERIFY PATCH
 VER 04A8 0000000000000000
 VER 04B0 0000000000000000          DC    4F'0'         VERIFY PATCH
 VER 04B8 0000000000000000
* START ZAP REPLACE
 REP 03B4 47F0C470                  B     NEWCODE       REPLACE BRANCH
 REP 0490 41F0C488         NEWCODE  LA    15,PGMNAME    LOAD R15 W/A(PGMNAME)
 REP 0494 50F0C480                  ST    15,PGMPTR    *STORE A(PGM) IN PARM*
 REP 0498 50E0C490                  ST    14,R14SAVE   *SAVE R14 FOR RETURN*
 REP 049C 45F0C494                  BAL   15,SVC        BRANCH TO LINK
 REP 04A0 00000000         PGMPTR   DC    F'0'          A(MODULE NAME)--|
 REP 04A4 00000000         DCBPTR   DC    F'0'          DCB POINTER     |
 REP 04A8 D9C5E2C5E3C9C3E2 PGMNAME  DC    CL8'RESETICS' PROGRAM NAME----|
 REP 04B0 00000000         R14SAVE  DC    F'0'          R14 SAVEAREA
 REP 04B4 0A06             SVC      SVC   6             LINK TO RESETICS
 REP 04B6 58E0C490                  L     14,R14SAVE    RELOAD R14
 REP 04BA 47F0C39A                  B     SVC95         BACK TO MAINLINE
RESETICS
RESETICS AMODE 31
RESETICS RMODE ANY
RESETICS CSECT                         ESTABLISH CSECT
         SAVE  (14,12),,RESETICS-&SYSDATE
         LR    R12,R15                 LOAD R12 W/EPA ADDRESS
         USING RESETICS,R12            ESTABLISH ADDRESSABILITY TO CSECT
         GETMAIN RU,LV=WORKLEN         GETMAIN WORKAREA
         LR    R2,R1                   LOAD R2 W/A(AREA) FOR MVCL
         LA    R3,WORKLEN              LOAD R3 W/WORKAREA LENGTH
         SR    R5,R5                   CLEAR R5 FOR MVCL PAD + FROM LEN
         MVCL  R2,R4                   CLEAR WORK AREA
         ST    R13,4(R1)               ST CALLERS S/A ADDR IN MY S/A
         ST    R1,8(R13)               ST MY S/A ADDR IN CALLERS S/A
         LR    R13,R1                  LOAD ADDR OF MY S/A IN R13
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
         L     R1,4(R13)               POINT TO CALLERS SAVEAREA
         LM    R0,R1,20(R1)            RELOAD R0/R1 FROM CALLER
         STCM  R0,12,ASID              SAVE ASID NUMBER
         STCM  R1,3,PGN                SAVE PERFORMANCE GROUP
         MVC   EYECATCH,EYEVALUE       MOVE EYECATCHER TO GETMAIN AREA
         L     R15,CVTPTR              LOAD R15 W/A(CVT)
         USING CVTMAP,R15              ESTABLISH ADDRESSABILITY
         L     R14,CVTOPCTP            LOAD R14 W/A(RMCT)
         USING RMCT,R14                ESTABLISH ADDRESSABILITY
         ST    R14,RMCTADDR            SAVE A(RMCT)
         ICM   R11,15,RMCTICST         LOAD R11 W/A(ICSC) IF ANY
         BZ    RETURN                  NONE, THEN ALLOW RESET AS IS
         L     R15,CVTASVT             LOAD R15 W/A(ASVT)
         USING ASVT,R15                ESTABLISH ADDRESSABILITY
         LA    R15,ASVTENTY-4          LOAD R15 W/A(1ST ASVT ENTRY-4)
         SR    R4,R4                   CLEAR R4
         LH    R4,ASID                 LOAD R4 WITH ASID
         SLL   R4,2                    MULTIPLY R4 BY 4 FOR INDEXING
         LA    R15,0(R4,R15)           LOAD R15 W/A(REQ. ASVT ENTRY)
         TM    0(R15),ASVTAVAL         IS ENTRY AVAILABLE
         BO    RETURN                  YES, THEN ALLOW RESET AS IS
         L     R15,0(R15)              LOAD R15 W/A(ASCB IN QUESTION)
         USING ASCB,R15                ESTABLISH ADDRESSABILITY
         ST    R15,ASCBADDR            SAVE A(ASCB)
         L     R15,ASCBOUCB            LOAD R15 W/A(OUCB)
         USING OUCB,R15                ESTABLISH ADDRESSABILITY
         ST    R15,OUCBADDR            SAVE A(OUCB)
         LA    R15,FPGOAREA            LOAD R15 W/A(PSEUDO FPGO AREA)
         ST    R15,FPGOADDR            SAVE ADDRESS
         LA    R1,ICSPAREA             LOAD R15 W/A(PSEUDO ICSP PLIST)
         ST    R1,ICSPADDR             SAVE ADDRESS
         OI    ICSPADDR,X'80'          TURN ON FULL ICSP INDICATOR
         USING ICSP,R1                 ESTABLISH ADDRESSABILITY
         L     R15,OUCBADDR            RELOAD A(OUCB)
         MVI   ICSPSUBN,C' '           CLEAR SUBSYSTEM NAME
         MVC   ICSPSUBN+1(7),ICSPSUBN  CLEAR SUBSYSTEM NAME
         MVC   ICSPSUBN(4),OUCBSUBN    MOVE SUBSYSTEM NAME
         MVC   ICSPTRXN,OUCBTRXN       MOVE TRANSACTION NAME
         MVC   ICSPUSRD,OUCBUSRD       MOVE USERID
         MVC   ICSPCLS,OUCBCLS         MOVE CLASS
         MVI   ICSPACTL,0              INDICATE NO ACCOUNTING INFO
* THIS CODE DOES NOT SUPPORT ACCOUNTING INFO VALIDITY CHECKING
         MVC   ICSPPGN,PGN             MOVE PGN TO CHECK
         L     R15,RMCTRMSB            LOAD A(RMSB)
         USING RMSB,R15                ESTABLISH ADDRESSABILITY
         L     R15,RMSBFPG             LOAD A(FIND PGN ROUTINE)
         LM    R0,R5,FPGOADDR          LOAD R0-R5 WITH PARMS
         LR    R6,R13                  SAVE R13 SAVEAREA POINTER
         LA    R13,SAVEADJ             SKIP SAVEAREA PL/1 WORD(FOR FPG)
         BALR  R14,R15                 INVOKE FIND PGN ROUTINE
         LR    R13,R6                  RESTORE R13 SAVEAREA POINTER
         CLC   EYECATCH,EYEVALUE       IS EYECATCHER CLOBBERED
         BNE   ERROR                   YES, ERROR
         C     R14,FOUR                IS RETURN CODE GOOD
         BH    SETDEF                  NO, GO SET DEFAULT PGN
         CLC   PGN,FPGONPG             WAS REQUESTED PGN RETURNED
         BE    RETURN                  YES, ALLOW IT
SETDEF   MVC   WTOPGN(MODLWTOL),MODLWTO MOVE MODEL WTO TO GETMAIN AREA
         CLI   ICSPUSRD,C' '           IS USERID BLANK
         BE    BATSTC                  YES, MUST BE BATCH/STC(USE TRXN)
         MVC   WTOPGN+MNAME(L'MNAME),ICSPUSRD MOVE USERID TO MESSAGE
         B     CNVTPGN                 GO MAKE NEW PGN PRINTABLE
BATSTC   MVC   WTOPGN+MNAME(L'MNAME),ICSPTRXN MOVE TRX NAME TO MESSAGE
CNVTPGN  LH    R1,FPGONPG              LOAD R1 W/NEW PGN VALUE
         CVD   R1,CNVTAREA             CONVERT PGN VALUE TO DECIMAL
         OI    CNVTAREA+7,X'0F'        MAKE SIGN PRINTABLE
         UNPK  WTOPGN+MPGNN(3),CNVTAREA+6(2) MAKE IT PRINTABLE
         LH    R1,PGN                  LOAD R1 W/OLD PGN VALUE
         CVD   R1,CNVTAREA             CONVERT PGN VALUE TO DECIMAL
         OI    CNVTAREA+7,X'0F'        MAKE SIGN PRINTABLE
         UNPK  WTOPGN+MPGNO(3),CNVTAREA+6(2) MAKE IT PRINTABLE
         WTO   MF=(E,WTOPGN)           ISSUE MESSAGE
         L     R15,SAVEAREA+4          LOAD R15 W/A(CALLER'S SAVE AREA)
         MVC   26(2,R15),FPGONPG       PUT NEW PGN IN HIS SAVEAREA R1
RETURN   LR    R1,R13                  LOAD R1 W/A(SAVEAREA)
         L     R13,4(R13)              LOAD R13 W/ADDR OF CALLERS S/A
         FREEMAIN RU,LV=WORKLEN,A=(1)  FREEMAIN WORKAREA
         RETURN (14,12),RC=0           RETURN TO OS WITH RETCODE=0
ERROR    WTO   'ICS002E STACK AREA HAS BEEN OVERLAYED DURING A RESET COX
               MMAND',ROUTCDE=14,DESC=7
         B     RETURN
         TITLE 'RESETICS-CONSTANTS AND DATA AREAS'
FOUR     DC    F'4'                    HIGHEST RETURN CODE TO ACCEPT
MODLWTO  WTO   'ICS001I PERFORM=*** CHANGED TO DEFAULT PERFORM=*** FOR X
               ********', ROUTCDE=14,DESC=7,MF=L MODEL WTO
MODLWTOL EQU   *-MODLWTO               MODEL WTO LENGTH
MPGNO    EQU   20,3                    OFFSET FOR OLD PERFORMANCE GROUP
MPGNN    EQU   51,3                    OFFSET FOR NEW PERFORMANCE GROUP
MNAME    EQU   59,8                    OFFSET FOR TRXNAME/USERID
EYEVALUE DC    CL8'EYE**EYE'           EYECATCHER INFO FOR GETMAIN AREA
WORKAREA DSECT
SAVEAREA DC    18F'0'                  SHOULD BE FIRST IN WORKAREA ---|
SAVEADJ  EQU   SAVEAREA+4              ADJUSTED SAVEAREA FOR FPG      |
         DC    33F'0'                  STACK AREA 1                   |
         DC    33F'0'                  STACK AREA 2                   |
         DC    33F'0'                  STACK AREA 3 ------------------|
* THE ABOVE BRACKETED AREA ARE STACK SAVE AREAS USED BY IRARMFPG.  THE
* EYECATCHER BELOW IS USED TO DETERMINE IF IRARMFPG HAS CHANGED TO USE
* MORE STACK SAVE AREAS.  IF SO, ADD MORE STACK SAVE AREAS.
EYECATCH DC    CL8' '                  EYECATCHER
FPGOADDR DC    F'0'                    A(FPGO) -----------------------|
ICSPADDR DC    F'0'                    A(ICSP)                        |
RMCTADDR DC    F'0'                    A(RMCT)                        |
RRPAADDR DC    F'0'                    A(RRPA)-LEFT AS ZEROS          |
OUCBADDR DC    F'0'                    A(OUCB)                        |
ASCBADDR DC    F'0'                    A(ASCB) -----------------------|
* THE ABOVE BRACKETED AREA R0 THROUGH R5 VALUES PASSED TO IRARMFPG.
* THE RRPAADDR IS NOT USED AND IS LEFT AS ZERO-ESPECIALLY SINCE I DON'T
* KNOW HOW TO BUILD IT.  THE ASCBADDR IS NOT USED BUT IS FILLED IN
* ANYWAY FOR COMPATIBILITY.
CNVTAREA DS    D                       AREA TO MAKE NEW PGN PRINTABLE
ASID     DC    H'0'                    ASID OF JOB BEING RESET
PGN      DC    H'0'                    PGN JOB BEING RESET TO
WTOPGN   DS    CL(MODLWTOL)            AREA FOR MODEL WTO
ICSPAREA DS    CL(ICSPLNG)             PSEUDO ICSP PLIST
         DS    0F                      ALIGN TO FULLWORD
FPGOAREA DS    CL(OUCBRSV5-OUCBFPGO)   PSEUDO FPGO AREA
FPGONPG  EQU   FPGOAREA,4              PSEUDO OUCBNPG FROM IRARMFPG
ZERO     DC    H'0'                    DEFAULT INVALID PGN
         DS    0F                      ALIGN TO FULLWORD
WORKLEN  EQU   *-WORKAREA              WORKAREA LENGTH
         CVT   DSECT=YES,LIST=NO
         IHAASVT                       ASVT
         IHAASCB                       ASCB
         IRAOUCB                       OUCB
* THE EQUATES BELOW ARE TO RESOLVE REFERENCES IN THE IRARMCT MACRO.
* IF YOU GET ASSEMBLY ERRORS, ADD THE NAMES HERE WITH ' EQU   0'
* OR YOU CAN HARD-CODE OFFSETS INTO RMCT.
CCT      EQU   0
ICT      EQU   0
MCT      EQU   0
RMPT     EQU   0
RMCA     EQU   0
RMEX     EQU   0
IRAEPPA  EQU   0
EPDTSCN  EQU   0
EPATSCN  EQU   0
LSCT     EQU   0
IRAEPPR  EQU   0
IRACTMQE EQU   0
IRAWTQE  EQU   0
IRALSQE  EQU   0
IRAOTQE  EQU   0
IRAINQE  EQU   0
RQSV     EQU   0
IRAOUCB  EQU   0
IRAOUXB  EQU   0
IRASRBT  EQU   0
RCT      EQU   0
RSPL     EQU   0
CMCT     EQU   0
ESCT     EQU   0
EPAT     EQU   0
*        IRARMCT                        SRM CONTROL TABLE
RMCT     DSECT
RMCTRMSB EQU   RMCT+44                  POINTER TO RMSB
RMCTICST EQU   RMCT+220                 POINTER TO ICSC TABLE
*        IRARMSB                        SRM VECTOR TABLE
RMSB     DSECT
RMSBFPG  EQU   RMSB+92                  POINTER TO FIND PGN ROUTINE
*        IRAICSP                        ICS PLIST
ICSP     DSECT
         DS    CL180                    SIZE OF ICSP
ICSPSUBN EQU   ICSP,8                   SUBSYSTEM NAME
ICSPTRXN EQU   ICSP+8,8                 TRANSACTION NAME
ICSPUSRD EQU   ICSP+16,8                USERID
ICSPCLS  EQU   ICSP+24,8                CLASS
ICSPPGN  EQU   ICSP+32,2                PERFORMANCE GROUP IN HEX
ICSPFLAG EQU   ICSP+34,1                STATUS FLAGS
ICSPDP   EQU   ICSP+35,1                DISPATCHING PRTY IN HEX
ICSPACTL EQU   ICSP+36,1                LENGTH OF ACCOUNT NUMBER
ICSPACTN EQU   ICSP+37,143              ACCOUNT NUMBER FROM JCL
ICSPLNG  EQU   *-ICSP                   LENGTH OF ICSP
         END


Bruce Bordonaro
System Software Manager
EDS (USA) © EDS 1988























































