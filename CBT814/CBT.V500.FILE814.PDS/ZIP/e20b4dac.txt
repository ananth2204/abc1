ISPF macro to display dataset enqueues

      TSO $LE 'SYS1.ISP*'

ASSEMBLER SOURCE OF LISTENQ UTILITY

LISTENQ  CSECT
         EXTRN ISPLINK
         SAVE  (14,12)
         BASR  R12,¯
         USING *,R12                         R12 = BASE REGISTER
         LR    R7,R1                         SAVE PARM ADDRESS
         GETMAIN R,LV=LGWAREA                GET WORKAREA
         LTR   R15,R15
         BNZ   ERR1
         LR    R1¯,R1                        SET DSECT ADDRESSABILITY
         USING DSECT,R1¯
         LR    R2,R1                         COMPUTE ADDRESS OF WORK
         LA    R3,LGDSECT                    AREA FOR GQSCAN
         AR    R2,R3
         ST    R2,ADDGET                     STORE IT FOR LATER USE...
         LA    R3,SAVEAREA                   SET UP SAVEAREA LINKAGE
         ST    R3,8(R13)
         ST    R13,SAVEAREA+4
         LR    R13,R3
         L     R1,¯(R7)                      GET DSNAME
         SR    R15,R15                       GET LENGTH
         ICM   R15,B'¯¯11',¯(R1)             IS IT NULL ?
         BZ    ERRPARM                       IT IS A MISTAKE
         CH    R15,H44                       LONGER THAN 44 ?
         BH    ERRPARM                       ANOTHER MISTAKE
         ST    R15,LGRNAME                   STORE LENGTH
         BCTR  R15,R¯                        LENGTH = LENGTH - 1
         MVC   DSNENQ(44),BLANK
         EX    R15,MVCRNAME                  EXECUTE MOVE
         LA    R14,VDEFINE                   PREPARE DEFINE VARIABLES
         LA    R15,VARSPF
         LA    R¯,DSNENQ
         LA    R1,TYPSPF
         LA    R2,LGSPF
         LA    R3,LIST
         STM   R14,R3,ZONE
         OI    ZONE+2¯,X'8¯'                 MARK LAST PARM ADDRESS
         LA    R1,ZONE
         CALL  ISPLINK,MF=(E,(1))            DEFINE ISPF VARIABLES
*                                            CREATE AN ISPF TABLE TO
*                                            RECEIVE DATA TO DISPLAY
         CALL  ISPLINK,(TBCREATE,PANENQ,,NAMES,NOWRITE,REPLACE),VL
         MVC   GQSCANL(LGGQSCAN),GQSCANI     PREPARE GQSCAN
         SR    R¯,R¯                         INIT TO ZERO COUNTERS
         ST    R¯,NBTOT
         ST    R¯,NBOWN
         ST    R¯,NBOLD
         ST    R¯,NBSHR
         ST    R¯,TOKEN
         L     R3,ADDGET                     GET ADDRESS OF WORK AREA
*                                            FOR GQSCAN
         L     R2,LGRNAME
         LR    R15,R2
         BCTR  R15,R¯                        R15 = R15 - 1
         LA    R14,DSNENQ
         LA    R14,¯(R15,R14)
         CLI   ¯(R14),C'*'                   IS IT A GENERIC NAME ?
         BNE   SCANLOOP                      NO
         BCTR  R2,R¯                         YES, REMOVE *
         ST    R2,LGRNAME
         OI    GQFLAG2,GENERIC               IT WILL BE A GENERIC SCAN
SCANLOOP GQSCAN AREA=((3),LGSTOR),SCOPE=ALL,TOKEN=TOKEN,               X
               RESNAME=(,DSNENQ,(2)),REQCNT=1,MF=(E,GQSCANL)
         ST    R15,RETCODE
         B     *+4(R15)                      TEST RC USING A TABLE
         B     OKAY                          ¯  OK
         B     NONE                          4  NO ENQ
         B     OKAY                          8  TOKEN SPECIFIED => OK
         B     ERR2                          12 ABNORMAL END
         B     ERR2                          16 INCORRECT SYSNAME
         B     ERR2                          2¯ TOO MANY ENQS
OKAY     STCM  R¯,B'11¯¯',RIBLEN             R¯ => 2 HALF WORDS
         STH   R¯,RIBELEN                    1ST => FIXED RIB LENGTH
         STH   R1,NBRIB                      R1 = NUMBER OF RIBS COPIED
         L     R15,NBTOT                     LOAD COUNTER
         AR    R15,R1                        + NUMBER OF COPIED RIBS
         ST    R15,NBTOT                     STORE COUNTER
         LR    R8,R1                         SAVE NUMBER OF RIBS
*        LTR   R8,R1
*        BZ    RETLOST
         USING RIB,R4                        SET UP DSECT ADDRESSABLITY
         USING RIBVAR,R5
         USING RIBE,R6
         LR    R4,R3
RIBLOOP  STH   R8,NBRIB                      STORE NUM RIBS TO PROCESS
         LR    R5,R4
         AH    R5,RIBLEN                     OFFSET TO RIBVAR
         LR    R6,R5
         AH    R6,RIBVLEN                    OFFSET TO FIRST RIBE
         MVC   QNAME,RIBQNAME
         MVC   RNAME(44),BLANK
         SLR   R7,R7
         IC    R7,RIBRNMLN                   GET RNAME LENGTH
         BCTR  R7,R¯                         -1 FOR MOVE
         EX    R7,MOVERNAM                   MOVE
RIBERTN  ICM   R7,B'1111',RIBNRIBE           NUM OF RIBE IN THIS SCAN
         BZ    SCANRLOP                      IF ZERO, NEXT SCAN
         L     R15,NBOWN                     COMPUTE NEW COUNTERS
         AR    R15,R7                        NUM OF TASKS
         ST    R15,NBOWN
         L     R15,NBOLD
         A     R15,RIBNTWE                   NUM OF TASKS WAIT EXCL
         ST    R15,NBOLD
         L     R15,NBSHR
         A     R15,RIBNTWS                   NUM OF TASKS WAIT SHR
         ST    R15,NBSHR
*                                  ANALYSE A SINGLE RIBE ENTRY
RIBELOOP MVC   JOBNAME,RIBEJBNM              JOB NAME OF REQUESTOR
         UNPK  ZONE(5),RIBEASID(3)           ASID
         TR    ZONE(4),TABTR-24¯             TRANSLATE ASID
         LA    R15,3
         LA    R14,ZONE
BCTASID  CLI   ¯(R14),C'¯'                   REPLACE ¯ BY ' '
         BNE   FINASID
         MVI   ¯(R14),C' '
         LA    R14,1(R14)
         BCT   R15,BCTASID
FINASID  MVC   ASID(L'ASID),ZONE
         MVC   SYSTEM,RIBESYSN               SYSTEM NAME OF REQUESTOR
         MVC   ST2(4),TXTOLD                 DEFAULT EXCL (OLD)
         TM    RIBERFLG,RIBETYPE             TYPE OF REQUEST
         BZ    CKWAIT                        SHR ?
         MVC   ST2(4),TXTSHR                 YES
CKWAIT   MVC   ST1(4),TXTWAIT                DEFAULT WAIT
         TM    RIBESFLG,RIBESTAT             REQUEST STATUS
         BZ    CKRESV                        OWNER ?
         MVC   ST1(4),TXTOWN                 YES
CKRESV   MVC   ST3(4),BLANK
         MVC   UNIT(3),BLANK
         MVC   VOLSER(6),BLANK
         TM    RIBERFLG,RIBERESV             RESERVE ?
         BNO   NOTRESV                       NO
         MVC   ST3(4),TXTRESV                YES
         L     R15,RIBEUCB                   GET UCB ADDRESS
         MVC   UNIT(3),UCBNAME-UCBCMSEG(R15) MOVE UNIT AND VOLSER
         MVC   VOLSER(6),UCBVOLI-UCBCMSEG(R15)
NOTRESV  CALL  ISPLINK,(TBADD,PANENQ),VL     ADD ENTRY IN TABLE
         AH    R6,RIBELEN                    ADD OFFSET TO NEXT RIBE
         BCT   R7,RIBELOOP                   LOOP ON RIBE
SCANRLOP LR    R4,R6                         ALL RIBE PROCEED
         LH    R8,NBRIB                      RESTORE RIB COUNTER
         BCT   R8,RIBLOOP                    PROCESS NEXT RIB
         CLC   RETCODE(4),=AL4(¯)            SCAN PROCESSING COMPLETE
         BE    DISPL                         YES, DISPLAY
         ICM   R15,B'1111',TOKEN
         BNZ   SCANLOOP                      PROCESS NEXT SCAN
DISPL    EQU   *                             DISPLAY SECTION
         L     R15,NBTOT                     TOTAL NUMBER
         CVD   R15,ZONE
         MVC   TOT(6),MASK
         ED    TOT(6),ZONE+5
         L     R15,NBOWN                     OWNER'S NUMBER
         CVD   R15,ZONE
         MVC   OWN(6),MASK
         ED    OWN(6),ZONE+5
         L     R15,NBOLD                     EXCL WAIT NUMBER
         CVD   R15,ZONE
         MVC   OLD(6),MASK
         ED    OLD(6),ZONE+5
         L     R15,NBSHR                     SHR WAIT NUMBER
         CVD   R15,ZONE
         MVC   SHR(6),MASK
         ED    SHR(6),ZONE+5
*                                            DISPLAY PANEL AFTER SORT
         CALL  ISPLINK,(TBTOP,PANENQ),VL
         CALL  ISPLINK,(TBSORT,PANENQ,SORTLIST),VL
         CALL  ISPLINK,(TBDISPL,PANENQ,PANENQ),VL
         CALL  ISPLINK,(TBEND,PANENQ),VL
         B     RETURN
*                                            ERROR MESSAGES
ERR1     EQU   *                             ERROR DURING GETMAIN
         LA    R15,MSG1A
         B     ERR1¯
ERR2     EQU   *
         LA    R15,MSG1C
         B     ERR1¯
ERRPARM  EQU   *                             ERROR WITH PARM
         LA    R15,MSG1B
         B     ERR1¯
*                                            INFO MESSAGES
NONE     EQU   *                             NO ENQ
         LA    R15,MSG1D
         B     ERR1¯
ERR1¯    EQU   *                             COMMON ROUTINE
         LA    R14,SETMSG
         STM   R14,R15,ZONE
         LA    R15,4
         ST    R15,RETCODE
         LA    R1,ZONE
         OI    4(R1),X'8¯'
         CALL  ISPLINK,MF=(E,(1))
         B     RETURN
RETURN   EQU   *
         CALL   ISPLINK,(VDELETE,VARSPF9),VL DELETE ISPF VARIABLES
         L     R13,SAVEAREA+4
         L     R7,RETCODE                    SAVE RC
         LR    R1,R1¯
         FREEMAIN R,LV=LGWAREA,A=(1)         FREE WORKAREA
         LR    R15,R7                        RESTORE RC
         RETURN (14,12),RC=(15)            RETURN TO MVS AND USE RC=R15
*                                            EXECUTE INSTRUCTIONS
MVCRNAME MVC   DSNENQ(¯),2(R1)
MOVERNAM MVC   RNAME(¯),RIBRNAME
GQSCANI  GQSCAN MF=L                         LIST FORM OF GQSCAN
LGGQSCAN EQU   *-GQSCANI
H44      DC    H'44'
BLANK    DC    CL44' '
TXTSHR   DC    C'SHR '                       TYPE OF ENQ
TXTOLD   DC    C'OLD '
TXTOWN   DC    C'OWN '
TXTWAIT  DC    C'WAIT'
TXTRESV  DC    C'RESV'
VDEFINE  DC    CL8'VDEFINE'                  ISPF FUNCTIONS
VDELETE  DC    CL8'VDELETE'
TBCREATE DC    CL8'TBCREATE'
TBDELETE DC    CL8'TBDELETE'
TBADD    DC    CL8'TBADD'
TBTOP    DC    CL8'TBTOP'
TBSORT   DC    CL8'TBSORT'
TBDISPL  DC    CL8'TBDISPL'
TBEND    DC    CL8'TBEND'
SETMSG   DC    CL8'SETMSG'
NOWRITE  DC    CL8'NOWRITE'
REPLACE  DC    CL8'REPLACE'
DISPLAY  DC    CL8'DISPLAY'
LIST     DC    CL8'LIST'
MSG1A    DC    CL8'$LE¯¯1A'                  MESSAGES
MSG1B    DC    CL8'$LE¯¯1B'
MSG1C    DC    CL8'$LE¯¯1C'
MSG1D    DC    CL8'$LE¯¯1D'
PANENQ   DC    CL8'$LE    '                  PANEL NAME
TABTR    DC    C'¯123456789ABCDEF'           TRANSLATE TABLE
*              ISPF VARIABLES DEFINITIONS
TYPSPF   DC    15CL8'CHAR'                   VARIABLE TYPES
*              VARIABLES LENGTHS
LGSPF    DC    F'44',4F'6',F'8',F'44',F'8',4F'4',F'3',F'6',F'8'
VARSPF   DC    C'(DSNENQ,TOT,OWN,OLD,SHR,'
         DC    C'QNAME,RNAME,JOBNAME,ASID,ST1,ST2,ST3,'
         DC    C'UNIT,VOLSER,SYSTEM)'
NAMES    DC    C'(QNAME,RNAME,JOBNAME,ASID,ST1,ST2,ST3,'
         DC    C'UNIT,VOLSER,SYSTEM)'
*              SORT SEQUENCE
SORTLIST DC    C'(QNAME,C,A,RNAME,C,A,JOBNAME,C,A,ASID,C,A,'
         DC    C'SYSTEM,C,A)'
MASK     DC    X'4¯2¯2¯2¯212¯'
VARSPF9  DC    C'(*)'
         LTORG
DSECT    DSECT                               WORKAREA
SAVEAREA DS    18F                           SAVEAREA
ZONE     DS    3D
ADDGET   DS    F                             ADDRESS OF WORKAREA
NBTOT    DS    F                             TOTAL NUMBER OF ENQS
NBOWN    DS    F                             NUMBER OF OWNERS
NBSHR    DS    F                             NUMBER OF SHR WAITS
NBOLD    DS    F                             NUMBER OF EXCL WAITS
TOKEN    DS    F                             TOKEN FOR GQSCAN
LGRNAME  DS    F                             RESOURCE NAME LENGTH
RETCODE  DS    F                             RETURN CODE OF GQSCAN
RIBLEN   DS    H                             RIB LENGTH
RIBELEN  DS    H                             RIBE LENGTH
NBRIB    DS    H                             NUMBER OF RIBS
*              ISPF VARIABLES
DSNENQ   DS    CL44                          RESOURCE NAME
TOT      DS    CL6                           TOTAL NUMBER OF ENQS
OWN      DS    CL6                           NUMBER OF OWNERS
OLD      DS    CL6                           NUMBER OF EXCL WAITS
SHR      DS    CL6                           NUMBER OF SHR WAITS
QNAME    DS    CL8                           QNAME
RNAME    DS    CL44                          RNAME
JOBNAME  DS    CL8                           JOBNAME OF OWNER/WAITER
ASID     DS    CL4                           ASID OF OWNER/WAITER
ST1      DS    CL4                           TYPE: OWN/WAIT
ST2      DS    CL4                           ENQ TYPE: SHR/OLD
ST3      DS    CL4                           RESERVE
UNIT     DS    CL3                           UNIT FOR RESERVE
VOLSER   DS    CL6                           VOLSER FOR RESERVE
SYSTEM   DS    CL8                           SYSTEM ID
GQSCANL  GQSCAN MF=L                         GQSCAN LIST FORM
LGDSECT  EQU   *-DSECT
LGSTOR   EQU   1¯24*8                        8K AREA FOR GQSCAN MACRO
LGWAREA  EQU   LGDSECT+LGSTOR                WORKAREA LENGTH
GQFLAG2  EQU   GQSCANL+45                    FOR GENERIC SEARCH
GENERIC  EQU   B'¯¯¯¯¯1¯¯'
         ISGRIB
         IEFUCBOB
         REGISTER
         END

ISPF PANEL $LE TO DISPLAY THE RESULT OF $LE

)ATTR
 | TYPE(OUTPUT)  INTENS(LOW)   COLOR(BLUE)
 ? TYPE(OUTPUT)  INTENS(LOW)    COLOR(GREEN)
 * TYPE(INPUT)   INTENS(LOW)    COLOR(GREEN)
 $ TYPE(TEXT)    INTENS(HIGH)   COLOR(BLUE)
 $ TYPE(TEXT)  INTENS(HIGH)   COLOR(YELLOW)
 @ TYPE(OUTPUT)  INTENS(HIGH)   COLOR(RED)
 < TYPE(OUTPUT)  INTENS(HIGH)    COLOR(WHITE)
)BODY EXPAND(^^)
%^ ^ ENQ'S LIST ^ ^
$COMMAND ===>_ZCMD                                          %SCROLL ===>_AMT +
+
+DSNAME . . .@DSNENQ                                   +NB RESOURCES. .<TOT   +
+                                                      +OWNERS . . . . .<OWN   +
$QNAME    RESOURCE NAME                                +WAIT (OLD) . . .<OLD   +
$         JOBNAME  ASID                SYSTEM          +WAIT (SHR) . . .<SHR   +
)MODEL
|QNAME   <RNAME                                       |UNIT|VOLSER+
         ?JOBNAME |ASID|ST1 |ST2 |ST3 |SYSTEM  +
)INIT
 .HELP = $LEH
)PROC
)END

ISPF MESSAGE MEMBER $LE¯¯

$LE¯¯1A .ALARM=YES
'ERROR DURING MACRO "GETMAIN".'
$LE¯¯1B .ALARM=YES
'INVALIDE DSNNAME LENGTH (1 TO 44 CHAR)'
$LE¯¯1C .ALARM=YES
'ERROR DURING MACRO "GQSCAN".'
$LE¯¯1D .ALARM=YES
'NO ENQ ON "&DSNENQ"'

CLIST $LE

PROC 1 IN
CALL 'xxxxxxx.ISPF.ISPLLIB(LSTENQ)' &IN


Patrick Renard
Systems Programmer (France)                                                   c Xephon 1994

