Programs to check back-ups

Source code for BACKLIST

BACKLIST CSECT
         USING *,R10,R11
         STM   R14,R12,12(R13)
         LR    R10,R15
         LA    R11,2048(R10)
         LA    R11,2048(R11)
         LR    R12,R13
         LR    R8,R1
GETMATD  GETMAIN R,LV=200
         LR    R9,R1  (R9)= ADDR OF THE ALLOCATED VIRT STORAGE AREA
         LTR   15,15
         BZ    OKGETMAT
         B     GETMFAIL
OKGETMAT EQU   *
         LA    R13,SAVE3           LOAD ADDRESS OF THIS SAVE3 AREA
         ST    R12,SAVE3+4         CHAIN BACKWARDS
         ST    R13,8(R12)          CHAIN FORWARD
         ST    R9,R9SAVE
         USING DUVBSNEW,R9         ESTABLISH ADDRESSABILITY
         OPEN  (PRINTDCB,(OUTPUT))
         MVC   PRINT,BLANK
         MVC   PRINT+1(16),=C'----------------'
         PUT   PRINTDCB,PRINT
         LA    R7,0
         L     R8,0(R8)
         LH    R12,0(R8)
         LA    R1,0
         CR    R1,R12
         BNE   TESLE44
         MVC   PRINT,BLANK
         MVC   PRINT+1(20),=C'PARM FIELD EMPTY    '
         PUT   PRINTDCB,PRINT
         B     FINI                NO PARAMETERS IN THE PARM FIELD
TESLE44  EQU    *
         LA    R1,44
         CR    R12,R1
         BNH   FIADPAFI
         MVC   PRINT,BLANK
         MVC   PRINT+1(37),=C'LENGTH OF THE PARM FIELD GT 44  CHARS'
         PUT   PRINTDCB,PRINT
         B     FINI                LENGTH OF THE PARM FIELD GT 44
FIADPAFI EQU   *
         LA    R4,2(R8)            (R4) = ADDRESS OF THE PARM FIELD
         MVI   OUTREC,C' '
         MVC   OUTREC+1(L'OUTREC-1),OUTREC
         LA    R5,VOLSER           (R5) = ADDRESS OF THE VOLSER FIELD
         MVI   VOLSER,C' '
         MVC   VOLSER+1(L'VOLSER-1),VOLSER
LOOP1    EQU   *
         MVC   0(1,R5),0(R4)       MOVE ONE CHARACTER
         OI    0(R5),B'01000000'   CHANGE LOWER TO UPPER CASE
         A     R5,=F'1'
         A     R4,=F'1'
         BCT   R12,LOOP1
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(4),=C'VOL='
         MVC   PRINT+5(6),VOLSER
         PUT   PRINTDCB,PRINT
FIRST    RDJFCB OUTDCB             READ IN JFCB
         LA    R3,WORKAREA
         USING INFMJFCB,R3
         XI    JFCBIND2,B'11001000'     CHANGE FROM SHARE TO MOD
         OPEN  (OUTDCB,(OUTPUT)),TYPE=J,MF=(E,FIRST)
         PUT   OUTDCB,OUTREC
         CLOSE (OUTDCB)
ENDATA   EQU   *
         L     R9,R9SAVE
         FREEMAIN R,LV=200,A=(9)
         DROP  R9
FINI     EQU   *
         CLOSE (PRINTDCB)
GETMFAIL EQU   *
         L     R13,4(R13)
         LR    R15,R7
         RETURN (14,12),RC=(15)
SAVE3    DS    18F
R9SAVE   DS    F
PRINT    DS    CL133
BLANK    DC    CL133' '
EX1      DS    0F
         DC    X'07'
         DC    AL3(WORKAREA)
WORKAREA DS    0F,CL176
         DS    0D
PRINTDCB DCB   MACRF=PT,RECFM=FBA,LRECL=133,BLKSIZE=133,DSORG=PS,      *
               DDNAME=PRINTOUT
OUTDCB   DCB   MACRF=PM,RECFM=FB,LRECL=80,BLKSIZE=3200,DSORG=PS,       *
               DDNAME=OUTPUT,EXLST=EX1
         LTORG
         DS    0D
         DSECT         MAPPING MACRO
         IEFJFCBN
DUVBSNEW DSECT         MAPPING MACRO
         DS    0D
OUTREC   DS    0CL80
VOLSER   DS    CL6
FILLER   DS    CL74
         END

Source code for BACKCHEC

BACKCHEC CSECT
         USING *,R10,R11           ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE 3 REGISTERS
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,2048(R10)       SET SECOND BASE REGISTER
         LA    R11,2048(R11)       AND INCREMENT TO PROPER VALUE
         LR    R12,R13             STORE PREVIOUS SA ADDRESS
         LR    R8,R1
GETMATD  GETMAIN R,LV=800
         LR    R9,R1  (R9)= ADDR OF THE ALLOCATED VIRT STORAGE AREA
         LTR   15,15
         BZ    OKGETMAT
         B     FINI
OKGETMAT EQU   *
         USING SVC34DSE,R9         ESTABLISH ADDRESSABILITY
         LA    R13,SAVE3           LOAD ADDRESS OF THIS SAVE3 AREA
         ST    R12,SAVE3+4         CHAIN BACKWARDS
         ST    R13,8(R12)          CHAIN FORWARD
         OPEN  (PRINTDCB,(OUTPUT))
         L     R8,0(R8)            TEST THE PARM FIELD FROM EXEC JCL
         LH    R12,0(R8)
         LA    R1,0
         CR    R1,R12
         BNE   TESLE100
         B     FINDSMF             NO PARAMETERS IN THE PARM FIELD
TESLE100 EQU   *                   TEST THE LENGTH OF PARM FIELD
         LA    R1,100
         CR    R12,R1
         BNH   FIADPAFI
         B     FINDSMF     LENGTH OF THE PARM FIELD GT 100, IGNORED
FIADPAFI EQU   *
         LA    R4,2(R8)    (R4) = ADDRESS OF THE PARM FIELD
*    FIND THE PARAMETER LIST IN THE EXEC STATEMENT
         LA    R5,PARMFIEL (R5) = ADDRESS OF THE PARMFIEL FIELD
         MVI   PARMFIEL,C' '
         MVC   PARMFIEL+1(L'PARMFIEL-1),PARMFIEL
LOOP1    EQU   *
         MVC   0(1,R5),0(R4)       MOVE ONE CHARACTER
         OI    0(R5),B'01000000'   CHANGE LOWER TO UPPER CHARS
         A     R5,=F'1'
         A     R4,=F'1'
         BCT   R12,LOOP1
FINDSMF  EQU   *                   FIND SMF ID
         USING CVTFIX,R8           MAKE CVT ADDRESSABLE
         L     R8,CVTPTR
         SH    R8,=H'256'          STEP BACK OVER CVT PREFIX
*   PICK UP SMF ID
         L     R5,CVTSMCA          SYSTEM MANAGEMENT CONTROL AREA
         USING SMCABASE,R5
         MVC   SMFID(4),SMCASID
         DROP  R5
         DROP  R8
         MVC   PRINT,BLANK
         MVC   PRINT+1(20),=C'SMFID=              '
         MVC   PRINT+7(4),SMFID
         PUT   PRINTDCB,PRINT
         MVC   SRCHVOL(6),=C'ZZZZZZ'
         MVC   PRINT,BLANK
         MVC   PRINT+1(39),=C'----------------------------------------'
         MVC   PRINT+40(39),=C'---------------------------------------'
         PUT   PRINTDCB,PRINT
         MVC   PRINT,BLANK
         MVC   PRINT+1(40),=C' VOLSER   STATUS       RESULT OF THE BAC'
         MVC   PRINT+41(39),=C'KUP     TYPE          COMMENTS         '
         PUT   PRINTDCB,PRINT
         MVC   PRINT,BLANK
         MVC   PRINT+1(39),=C'----------------------------------------'
         MVC   PRINT+40(39),=C'---------------------------------------'
         PUT   PRINTDCB,PRINT
         L     R3,CVTPTR
         USING CVTMAP,R3
         XC    WORKAREA,WORKAREA
         LA    R1,WORKAREA
         ST    R1,PARMWA
         LA    R1,DEVCLASS
         ST    R1,PARMDEVT
         MVI   DEVCLASS,UCB3DACC
         LA    R1,ADDRUCB
         ST    R1,PARMUCB
         OI    PARMUCB,X'80'
*           EXECUTE UCB SCAN SERVICE
SEARCH   EQU   *
         LA    R1,PARMLIST
         USING UCBOB,R2
         DS    0H
         L     R15,CVTUCBSC
         BALR  R14,R15
         LTR   R15,R15
         BNZ   NOMATCH
         L     R2,ADDRUCB
         CLC   UCBVOLI,=XL6'000000000000'
         BE    SEARCH
         L     R7,UCBEXTPT
         MVC   VOLUTYPE(6),BLANK
         MVC   PRINT,BLANK
         MVC   PRINT+2(6),UCBVOLI
         MVC   PRINT+11(7),=C'OFFLINE'
*           DISPLAY THE DEVICE STATUS UCBSTAT
         TM    UCBSTAT,UCBONLI    TEST IF ON-LINE?
         BNO   DISNOTON           DISK IS NOT ON-LINE
         MVC   PRINT+11(7),=C'ONLINE '
         LA    R5,PARMFIEL        (R5) = ADDRESS OF THE PARMFIEL FIELD
NEXTPARM EQU   *
         CLI   0(R5),C' '
         BE    CHECKSTA           NO MORE PARMS
         MVC   PARMVOL(6),0(R5)
         CLC   UCBVOLI(6),PARMVOL
         BNE   CARRYCHE
         MVC   PRINT+25(20),=C'VOLSER IN PARM - N/A'
         PUT   PRINTDCB,PRINT
         B     CLOSEINP
CARRYCHE EQU   *
         A     R5,=F'7'
         B     NEXTPARM
CHECKSTA EQU   *
         CLI   UCBTBYT3,UCB3DACC  DIRECT ACCESS SECTION ?
         BNE   TYPEFOUN
         CLI   UCBUNTYP,X'09'     3330 ?
         BNE   UCB03Z
         MVC   VOLUTYPE(4),=C'3330'
         B     TYPEFOUN
UCB03Z   EQU   *
         CLI   UCBUNTYP,X'0D'     3330 ?
         BNE   UCB03Y
         MVC   VOLUTYPE(4),=C'3330'
         B     TYPEFOUN
UCB03Y   EQU   *
         CLI   UCBUNTYP,X'0B'     3350 ?
         BNE   UCB03A
         MVC   VOLUTYPE(4),=C'3350'
         B     TYPEFOUN
UCB03A   CLI   UCBUNTYP,X'0E'     3380 ?
         BNE   UCB03390
         L     R5,UCBEXTPT        POINTER TO UCB COMMON EXTENSION
         USING UCBCMEXT,R5
         L     R6,UCBCLEXT        POINTER TO DEVICE CLASS EXTENSION
         USING DCE,R6
         CLI   DCEOBRDT,X'0E'     OBR DEVICE TYPE CODE BYTE 4
         BNE   UCB03A1
         MVC   VOLUTYPE(4),=C'3380'   STANDARD 3380
         B     TYPEFOUN
UCB03A1  CLI   DCEOBRDT,X'1E'
         BNE   UCB03A2
         MVC   VOLUTYPE(6),=C'3380 D' 3380 D
         B     TYPEFOUN
UCB03A2  CLI   DCEOBRDT,X'2E'
         BNE   UCB03A3
         MVC   VOLUTYPE(6),=C'3380 E' 3380 E
         B     TYPEFOUN
UCB03A3  CLI   DCEOBRDT,X'21'
         BNE   UCB03A4
         MVC   VOLUTYPE(6),=C'3380 J' 3380 J
         B     TYPEFOUN
UCB03A4  CLI   DCEOBRDT,X'23'
         BNE   UCB03B
         MVC   VOLUTYPE(6),=C'3380 K' 3380 K
         B     TYPEFOUN
UCB03390 EQU   *
         CLI   UCBUNTYP,X'0F'         3390 ?
         BNE   UCB03B
         CLI   DCEOBRDT,X'23'
         BNE   UCB03B
         MVC   VOLUTYPE(6),=C'3390 ?' 3390 ?
         B     TYPEFOUN
UCB03B   EQU   *
         MVC   VOLUTYPE(6),=C'3390  ' 3390
         B     TYPEFOUN
TYPEFOUN EQU   *
         MVC   PRINT+49(6),VOLUTYPE
         OPEN  (INDCB,(INPUT))
GETRECOR EQU   *
         GET   INDCB,INPREC
         CLC   INPVOLSE(6),UCBVOLI
         BE    BACKSUCC               BACK-UP SUCCESSFUL
         B     GETRECOR
BACKSUCC EQU   *
         MVC   PRINT+25(11),=C'SUCCESSFUL '
         PUT   PRINTDCB,PRINT
         B     CLOSEINP
ENDDATA  EQU   *
         MVC   PRINT+25(15),=C'NOT SUCCESSFUL '
         PUT   PRINTDCB,PRINT
DISPLAYM EQU   *
         WTO   '|-------------------------------------|',              *
               ROUTCDE=(1,5,11)
         WTO   '|  HELLO MR OPERATOR! <---------------|',              *
               ROUTCDE=(1,5,11)
*     DISPLAY FIRST MESSAGE LINE ON THE OPS CONSOLE
         LA    R1,84
         STH   R1,WTOTEX1L            LENGTH
         MVI   WTOTEXT1,C' '
         MVC   WTOTEXT1+1(L'WTOTEXT1-1),WTOTEXT1
         MVC   WTOTEXT1(39),=C'|  BACKUP  OF XXXXXX NOT SUCCESSFUL   |'
         MVC   WTOTEXT1+14(6),UCBVOLI
         MVC   WTOMCSFL(2),=X'8000'
         MVC   WTODESDE(2),=X'0000'
         MVC   WTOROCOD(2),=X'0040'
         LA    R0,0
         LA    R1,WTOLIST
         WTO   MF=(E,(1))
         WTO   '|-------------------------------------|',              *
               ROUTCDE=(1,5,11)
IPOEOD   EQU   *
         MVI   IPORPECB,0          CLEAR OUT ECB FOR REPLY
         WTOR  'REPLY C TO CONTINUE PROCESSING OR R TO REPEAT DISPLAY',X
               IPOREPLY,1,IPORPECB,ROUTCDE=(1,5,11)
         WAIT  1,ECB=IPORPECB      WAIT FOR OPERATOR TO REPLY
         CLI   IPOREPLY,C'C'       IS IT CONTINUE?
         BE    IPOEND              YES - CONTINUE PROCES