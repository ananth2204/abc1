Restricting TSO users by group

The September issue of MVS Update contains an article on
restricting TSO users by group.  We also have a need to restrict
users by group at our site and the approach we have taken to
achieve this is documented below.

The main advantage of our approach over the one previously
shown in MVS Update is simplicity.  The program is approximately
100 lines of code long and there is no need for an SSNT entry or
any table maintenance to perform.

The implementation consists of an Assembler program that reads
system control blocks and returns the number of logged-on users
that match a user-id prefix (passed to the program as a
parameter) as a return code in register 15.  (Group affiliations at
our site are determined by the user-id prefix.)

At log-on time, the user is driven through a CLIST that executes
the program and, if the user exceeds the maximum for the
particular group that he belongs to, the CLIST issues a message to
the user and logs him off.  The code for the program is based on
the MVS Update issue 2 article, Displaying the active TSO user list.

SPTSOU00 CSECT
* ACCESS THE ASVT AND FROM THOSE ASCB'S THAT ARE TSO ASCB'S EXTRACT  *
* THE USER ID AND PLACE IN A TABLE IN WORKING STORAGE.  COMPARE THE  *
* USERID WITH PARAMETER PASSED TO THIS ROUTINE. (I.E J, JSD ETC) IF A*
* MATCH IS FOUND, ADD 1 TO AN ACCUMULATOR.  LOAD THE VALUE OF THE    *
* ACCUMULATOR INTO REGISTER 15 AS A RETURN CODE AND RETURN TO CALLER.*
* IF NO PARAMETER IS PASSED THEN RETURN THE TOTAL NUMBER OF LOGGED ON*
* USERS.                                                             *
*           REGISTERS : ON ENTRY THE FOLLOWING REGISTERS ARE SET UP  *
*                R1  = ADDRESS OF PARAMETER PASSED TO THIS PROGRAM   *
*                R14 = RETURN ADDRESS                                *
*                R13 = ADDRESS OF 18 WORD SAVE AREA                  *
*                R15 = ADDRESS OF THIS MODULE                        *
*                       AT EXIT THE REGISTERS CONTAIN THE FOLLOWING: *
*                R0 - R14 = SAME AS AT ENTRY                         *
*                R15 =      RETURN CODE FROM THIS EXIT               *
*                (I.E. THE NUMBER OF USERS IN A PARTICULAR GROUP)    *
*           MACROS :     GETMAIN                                     *
*                        FREEMAIN                                    *
*                        WTO     (ASCB NOT FOUND ERROR MESSAGE)      *
         USING *,R15                      TEMPORARY BASE
         B     START                      BRANCH AROUND MODULE NAME
         DC    CL8'SPTSOU00'              MODULE NAME
         DC    CL8'&SYSDATE'              ASSEMBLE DATE
         DC    CL8' &SYSTIME'             ASSEMBLE TIME
START    STM   R14,R12,12(R13)            SAVE REGISTERS
         LR    R12,R15                    LOAD ENTRY ADDRESS
         DROP  R15                        DROP TEMPORARY BASE
         USING SPTSOU00,R12               BASE REGISTER 12
         L     R2,0(,R1)                  SAVE PARM ADDRESS
         SR    R10,R10                    ZERO TSO COUNT
         GETMAIN R,LV=WRKLNGTH            GET WORKING STORAGE
         LR    R9,R1                      SAVE WORKING STORAGE ADDRESS
         USING WORKAREA,R9                ADDRESSABILITY TO WORK AREA
         LA    R8,TSOTABLE                POINT TO START OF TABLE
         LA    R11,40                     SET TABLESIZE COUNTER
TABLOOP  MVC   0(10,R8),SPACE10           MOVE SPACES
         LA    R8,10(,R8)                 INCREMENT TO NEXT POSITION
         BCT   R11,TABLOOP                GO ROUND AGAIN
         SR    R11,R11                    CLEAR REG 11
         LA    R8,TSOTABLE                POINT TO START OF TABLE
**       SET UP POINTERS TO CONTROL BLOCKS
         L     R3,16                      POINT TO CVT
         L     R3,556(,R3)                ADDRESS OF ASVT
         L     R4,516(,R3)                MAXIMUM NUM ADDRESS SPACES
         LA    R5,528(,R3)                LOAD 1ST ASCB ENTRY
         B     MAINLINE
LOOP1    LA    R5,4(,R5)                  INCREMENT TO NEXT ASCB
         BCT   R4,MAINLINE                SET TO LAST ASCB ENTRY
         LA    R8,TSOTABLE                POINT TO START OF TABLE
         B     TSOSECT                    DO TSO PROCESSING.
MAINLINE CLI   0(R5),X'80'                ASCB ASSIGNED  ?
         BE    LOOP1                      NO. LOOK AGAIN
         L     R6,0(,R5)                  LOAD ADDRESS OF 1ST ASCB
         CLC   0(4,R6),=C'ASCB'           VALID ASCB ?
         BNE   ERROR                      NO. AT WRONG POINT
         L     R7,60(,R6)                 LOAD TSB ADDRESS
         LTR   R7,R7                      TSO USER ?
         BZ    LOOP1                      NO. CHECK NEXT ASCB
         LA    R10,1(,R10)                ADD ONE TO COUNT OF USERS
         L     R7,176(,R6)                LOAD ADDRESS OF USER-ID
         MVC   0(6,R8),0(R7)              MOVE USERID TO TABLE
         LA    R8,6(,R8)                  INCREMENT TO NEXT ENTRY
         B     LOOP1                      GET NEXT ASCB
**       PROCESS TSO USERS FOUND
TSOSECT  SR    R3,R3                      CLEAR REGISTER 3
         LH    R2,0(,R2)                  LOAD LENGTH OF PARM FIELD
         LTR   R3,R3                      PARM PRESENT?
         BZ    NOPARM                     NO. RETURN NUMBER OF USERS
         SH    R3,ONE                     SUBTRACT 1 FROM LENGTH
         LA    R2,2(,R2)                  INCREMENT PAST LENGTH
TSOSUB   CLC   0(6,R8),SPACES             MORE TSO USERS ?
         BE    EXIT                       NO. END
         EX    R3,COMPARE                 PARM = USER PREFIX ?
         BNE   TSOSUBA                    NO. INCREMENT TO NEXT ENTRY
         LA    R11,1(,R11)                ADD 1 TO COUNT OF USERS FOUND
TSOSUBA  LA    R8,6(,R8)                  INCREMENT TO NEXT ENTRY
         B     TSOSUB                     GO ROUND AGAIN.
ERROR    WTO   'DIDNT FIND ASCB'          ASCB NOT FOUND
         B     EXIT                       END
NOPARM   LR    R11,R10                    TOT. NUMBER OF TSO USERS.
EXIT     FREEMAIN R,LV=WRKLNGTH,A=(9)     FREE WORKING STORAGE
         LR    R15,R11                    LOAD COUNT OF USERS FOUND
         L     R14,12(,R13)               ENSURE RETURN ADDRESS
         LM    R0,R12,20(R13)             RESTORE REGISTERS 0 - 12
         BR    R14                        RETURN TO CALLER
         DS    0F
COMPARE  CLC   0(0,R8),0(R2)              USER PREFIX = PARAMETER?
         DS    0F
SPACES   DC    CL6' '
SPACE10  DC    CL10' '
ONE      DC    H'1'
WORKAREA DSECT
         DS    0F
TSOTABLE DS    4CL100
WRKLNGTH EQU   *-WORKAREA
         END


SAMPLE CLIST

PROC 0
/* FOR THOSE USERS THAT ARE NOT SPECIAL USERS CHECK THE
NUMBER OF TSO
/* USERS LOGGED ON AND DENY ACCESS IF THE MAXIMUM HAS BEEN EXCEEDED
/* FOR THE PARTICULAR GROUP.
 SET &MAXUSERS = 55         /* 55 MAX FOR TSO USERS.
 SET &ALLUSERS =
 CALL 'SP01.LDLIB(SPTSOU00) '&ALLUSERS'
 SET &ALLUSERS = &LASTCC
 IF &ALLUSERS > &MAXUSERS THEN DO
    WRITE - MAXIMUM TSO USERS LOGGED ON - PLEASE TRY
AGAIN LATER
    LOGOFF
 END
 SET &J = J
 CALL 'SP01.LDLIB(SPTSOU00)' '&J'
 SET &J = &LASTCC
 IF &SUBSTR(1:1,&SYSUID) = J THEN DO       /* EXCLUDE        */
    SET &JMAX = 4                          /* SPECIAL        */
    SET &JSP = JSP                         /* USERS          */
    CALL 'SP01.LDLIB(SPTSOU00)' '&JSP'     /* FROM GROUP     */
    SET &JSP = &LASTCC                     /* COUNT          */
    SET &JR = JR
    CALL 'SP01.LDLIB(SPTSOU00)' '&JR'
    SET &JR = &LASTCC
    SET &J = &J-&JSP-&JR
    IF &J > &JMAX THEN DO
       WRITE   MAXIMUM TSO USERS FOR YOUR GROUP LOGGED ON +
             - PLEASE TRY AGAIN LATER
    LOGOFF
    END
 END
 EXIT


Craig Baker
Systems Programmer
Security Computer Services (Australia) © Xephon 1989

