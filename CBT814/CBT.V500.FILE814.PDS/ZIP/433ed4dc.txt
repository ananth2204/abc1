Communicating with the operator

THE PROBLEM

Often, as a systems or application programmer, it is necessary
to communicate with the operations staff when dealing with a
problem that has occurred.  When this process is taking place
from a remote site such as home, using dial-up
communications, having the telephone line tied up by the
terminal/modem can be very constraining.  When a message
needs to be conveyed to the operator, it must be done in one of
two ways: either log-off the terminal and use the phone or send
the message using the TSO SEND command and hope the
operator observes it.  In all probability, the operator will not
see the message before it rolls off the screen.  This can be very
bothersome if the message is critical to the problem at hand.

THE SOLUTION

I have written a simple program for use under TSO, which
makes the process of communicating with an operator both
prompt and reliable.  The program, called OPERCOMM,
accepts a message of up to 72 characters as its input parameter.
The information is then conveyed to the operator as a
highlighted, non-rollable, wait-for-reply message.  When the
operator replies to the message, the reply is transferred back to
the issuing terminal.  The terminal will not be available for
input until the operator has replied.  However, if the message
you wish to get across is of vital importance, it is good to know
that the highlighted and non-rollable attributes have been
assigned to it on the console.  If it becomes necessary to break
out of the wait for reply, hit the attention key.  If you do break
out of OPERCOMM, the message will be rolled off the console
screen.  A typical dialog using OPERCOMM might go as
follows:

     OPERCOMM - Why is it taking so long to mount the MVS dump tape?
     R XX,We are having trouble finding it.
     OPERCOMM - Check the rack marked 'special MVS tapes'.
     R XX,Thanks for the info we forgot the dump tape is on that rack.

*   PROGRAM OPERCOMM ACCEPTS UP TO A 72 CHARACTER MESSAGE AND WRITES IT
*   TO THE CONSOLE.  IT THEN WAITS FOR A REPLY AND PRESENTS THE REPLY
*   BACK TO THE TERMINAL.  THE REPLY MUST ALSO BE 72 CHARS OR LESS.
OPERCOMM CSECT
         STM   14,12,12(13)        SAVE CALLER'S REGISTERS.
         BALR  12,0                ESTABLISH OUR BASE.
         USING *,12
         L     3,0(,1)             POINT TO THE MESSAGE.
         LH    4,0(,3)             GET LENGTH.
         SH    4,=H'12'            SUBTRACT HEADER.
         LTR   4,4                 TEST IT.
         BZ    BADMSG              IF ZERO, THERE IS NO MESSAGE.
         CH    4,=H'73'            IS THE MESSAGE LONGER THAN 72 CHARS?
         BH    BADMSG              IF YES, CAN'T PROCESS IT.
         BCTR  4,0                 GET READY FOR THE WTOR,
         EX    4,MVCMSG            BY MOVING IN THE MESSAGE.
WTORC    WTOR  '                                                       X
                                 ',REPLY,72,ECB1,ROUTCDE=(1,2)
         WAIT  ECB=ECB1            WAIT FOR THE REPLY
         LA    10,REPLY            GET THE ADDRESS OF REPLY AND
         TPUT  (10),72             PRESENT IT TO THE TERMINAL.
         B     ZERORC
BADMSG   TPUT  =C'INVALID MESSAGE, CHECK FOR 72 CHARS OR LESS',43
         LA    15,12               SET RETURN CODE TO 12.
         B     GOBACK
ZERORC   LA    15,0                SET RETURN CODE TO 0.
GOBACK   L     14,12(,13)          GET THE CALLERS RETURN ADDRESS.
         LM    0,12,20(13)         RESTORE CALLERS REGISTERS.
         BR    14                  GO BACK TO CALLER.
MVCMSG   MVC   WTORC+16(0),12(3)    MOVE MESSAGE INTO WTOR.
REPLY    DC    CL72' '
ECB1     DC    F'0'
         LTORG
         END


Ernie Ishman
Senior Systems Programmer
Geisinger System Services (USA)                         © Xephon 1990

