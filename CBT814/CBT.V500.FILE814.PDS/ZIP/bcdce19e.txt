Freespace analysis update

This is an update to my freespace analysis program that
appeared in MVS Update, issues 58 and 59. The sort section of
this program takes far too long because of the time required to
call DFSORT. To remedy this I have replaced the call to
DFSORT with a simple bubble sort. This has reduced the sort
time from several seconds to an almost instantaneous refresh.


SORT SECTION OF FRSP PROGRAM

SORT0000 DS    0F
         MVC   REPOPTN,BLANKS          BLANK REPLY FIELD
         MVI   POPFLAG,C'Y'            FLAG THAT POPUP SELECTED
         LM    R2,R3,POP02             LOAD POPUP SCREEN ADDRESS
         TPUT  (R2),(R3),FULLSCR,WAIT  PUT POPUP ON SCREEN
         TGET  REPBUF,REPBUFL,ASIS,WAIT  GET REPLY
         CLI   REPAID,X'F3'            WAS PF3 HIT ?
         BE    PROC0001                 YES THEN GO REDISPLAY
         CLI   REPAID,X'C3'            WAS PF15 HIT ?
         BE    PROC0001                 YES THEN GO REDISPLAY
         CLI   REPAID,X'7D'            WAS ENTER HIT ?
         BNE   SORT0000                 YES THEN SEE WHAT WAS SELECTED
         CLI   REPOPTN,C' '            IS OPTION BLANK ?
         BNE   SORT0010                 NO THEN SELECTED BY NUMBER
         BAL   R14,ROWCOL              CALCULATE CURSOR POSITION
         B     SORT0020                GO CHECK CURSOR SELECTION
SORT0010 DS    0F
         CLI   REPOPTN,C'1'            WAS SORT 1 SELECTED ?
         BNE   SORT0011                 NO THEN CHECK NEXT
         LM    R2,R3,HIL01             HIGHLIGHT OPTION SELECTED
         TPUT  (R2),(R3),FULLSCR,WAIT  PUT HIGHLIGHT
         B     SORT0200                GO DO THE SORT
SORT0011 CLI   REPOPTN,C'2'            WAS SORT 1 SELECTED ?
         BNE   SORT0012                 NO THEN CHECK NEXT
         LM    R2,R3,HIL02             HIGHLIGHT OPTION SELECTED
         TPUT  (R2),(R3),FULLSCR,WAIT  PUT HIGHLIGHT
         B     SORT0200                GO DO THE SORT
SORT0012 CLI   REPOPTN,C'3'            WAS SORT 1 SELECTED ?
         BNE   SORT0013                 NO THEN CHECK NEXT
         LM    R2,R3,HIL03             HIGHLIGHT OPTION SELECTED
         TPUT  (R2),(R3),FULLSCR,WAIT  PUT HIGHLIGHT
         B     SORT0200                GO DO THE SORT
SORT0013 CLI   REPOPTN,C'4'            WAS SORT 1 SELECTED ?
         BNE   SORT0014                 NO THEN CHECK NEXT
         LM    R2,R3,HIL04             HIGHLIGHT OPTION SELECTED
         TPUT  (R2),(R3),FULLSCR,WAIT  PUT HIGHLIGHT
         B     SORT0200                GO DO THE SORT
SORT0014 CLI   REPOPTN,C'5'            WAS SORT 1 SELECTED ?
         BNE   SORT0015                 NO THEN CHECK NEXT
         LM    R2,R3,HIL05             HIGHLIGHT OPTION SELECTED
         TPUT  (R2),(R3),FULLSCR,WAIT  PUT HIGHLIGHT
         B     SORT0200                GO DO THE SORT
SORT0015 CLI   REPOPTN,C'6'            WAS SORT 6 SELECTED ?
         BNE   SORT0016                 NO THEN CHECK NEXT
         LM    R2,R3,HIL06             HIGHLIGHT OPTION SELECTED
         TPUT  (R2),(R3),FULLSCR,WAIT  PUT HIGHLIGHT
         B     SORT0200                GO DO THE SORT
SORT0016 B     SORT0000                HIDE POPUP
SORT0020 DS    0F
         CLI   CSRCOL,X'12'            MAKE SURE
         BNH   SORT0000                  THE ROW AND
         CLI   CSRCOL,X'29'                COL ARE
         BNL   SORT0000                     WITHIN THE
         CLI   CSRROW,X'04'                   SELECTABLE
         BNH   SORT0000                         AREA OF
         CLI   CSRROW,X'0B'                       THE POPUP
         BNL   SORT0000                             SCREEN
         XR    R2,R2                   CLEAR R2
         IC    R2,CSRROW               LOAD THE ROW NUMBER
         SH    R2,=H'4'                SUBTRACT 4 TO MAKE NUMBER
         STC   R2,REPOPTN                BETWEEN 1 AND 4
         OI    REPOPTN,X'F0'               TURN INTO CHAR NUMBER
         B     SORT0010                     CHECK NUMBER FOR OPTION
*
SORT0200 L    R2,DATABASE                Load base address
         LA   R3,74(R2)                  point to second record
         MVI  SWAPFLAG,C'N'              set swap flag
SORT0210 CLI  0(R3),X'00'                check for end of data
         BE   SORT0230                    yes then check flag
         CLI  REPOPTN,C'6'               check
         BE   SORT0216                     the
         CLI  REPOPTN,C'5'                   sort
         BE   SORT0215                         option
         CLI  REPOPTN,C'4'                       to
         BE   SORT0214                             be
         CLI  REPOPTN,C'3'                          processed
         BE   SORT0213
         CLI  REPOPTN,C'2'
         BE   SORT0212
         CLC  0(4,R2),0(R3)
         BNH  SORT0221
         B    SORT0220
SORT0212 CLC  6(6,R2),6(R3)
         BNH  SORT0221
         B    SORT0220
SORT0213 CLC  22(9,R2),22(R3)
         BNL  SORT0221
         B    SORT0220
SORT0214 CLC  39(9,R2),39(R3)
         BNL  SORT0221
         B    SORT0220
SORT0215 CLC  59(9,R2),59(R3)
         BNL  SORT0221
         B    SORT0220
SORT0216 CLC  65(7,R2),65(R3)
         BNL  SORT0221
SORT0220 XC   0(74,R2),0(R3)                   swap the
         XC   0(74,R3),0(R2)                     contents by three
         XC   0(74,R2),0(R3)                       xc
         MVI  SWAPFLAG,C'Y'                    set swap flag
SORT0221 LA   R3,74(R3)                        point to next
         LA   R2,74(R2)                        point to next
         B    SORT0210                         go check next
SORT0230 CLI  SWAPFLAG,C'N'                    check swap flag
         BNE  SORT0200                          not clean run, repeat
         B     PROC0001                        GO REDISPLAY SCREEN
SWAPFLAG DC   C'N'


Wayne MacDonald
Systems Programmer
GIO (Australia)                                                             c Xephon 1992

