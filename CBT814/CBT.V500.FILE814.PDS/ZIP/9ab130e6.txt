C and PDSs (continued)


ASSEMBLER FUNCTIONS

* Macro to set addressing mode
           MACRO
&LABEL     XACAP &CAP=
           LCLB  &CAP24SW,&CAP31SW           OCCURRENCE SWITCHES
           AIF   ('&CAP' NE '24' AND '&CAP' NE '31').ERROR1
&CAP24SW   SETB  ('&CAP' EQ '24')
&CAP31SW   SETB  ('&CAP' EQ '31')
           AIF   (&CAP24SW).NOT31    BR IF CAP=24
           CNOP  0,4                 ALIGN INLINE VECTOR
           L     14,*+8              SET RESUME ADDRESS
           BSM   0,14                CHANGE ADDRESSING MODES
           DC    A(*+4+X'80000000')  VECTOR TO SWITCH TO A=31
           AGO   .ADRDONE
.NOT31     ANOP
           LA    14,*+6              VECTOR TO SWITCH TO A=24
           BSM   0,14                CHANGE ADDRESSING MODES
.ADRDONE   ANOP
           MEXIT                     NORMAL EXIT
.*   ERROR MNOTES
.ERROR1    MNOTE 8,'XACAP CAP PARAMETER IS INVALID'
           MEXIT                     EXIT FOR ERRORS
           MEND
* DUMMY FUNCTION TO BE SURE THAT C2PDSA CAN BE FOUND BY THE LINKER
C2PDSA   CSECT
C2PDSA   AMODE 31
C2PDSA   RMODE 24
         BR    R14
         DC    C' VDPIETERMAN/KEIZER '
         DC    C' INITIAL RELEASE C-PDS-INTERFACE ASSEMBLER PART '
*  FUNCTION TO CONCATENATE STRINGS
STR@@CNC CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R10,R1              SAVE ADDR OF PARM POINTERS
         L     R8,0(0,R10)         ADDRESS OF FIRST PARAMETER
         LR    R7,R10              INITIALIZE TO LOOP THRU PARM ADDR'S
CNC10    TM    0(R7),X'80'         ?LEFTMOST BIT OF PARM ADDR ON?
         BO    CNC40                YES: ALL PARMS DONE
         LA    R7,4(0,R7)           NO:  GET ADDR OF NEXT PARM ADDR
         L     R6,0(0,R7)          GET ADDRESS OF PARM
CNC20    CLI   0(R6),X'00'         FIND END OF STRING(C-SYNTAX=00)
         BE    CNC30
         MVC   0(1,R8),0(R6)       MOVE ONE BYTE TO RESULT BUFFER
         LA    R6,1(R6)            INCREMENT FROM-ADDRESS
         LA    R8,1(R8)            INCREMENT TO-ADDRESS
         B     CNC20
CNC30    B     CNC10               GO FOR THE NEXT PARM
CNC40    MVI   0(R8),X'00'         GIVE HIM A C-STRING TERMINATOR
         L     R15,0(0,R10)        RETURN ADDRESS OF BUILT STRING
CNC90    EDCEPIL
         LTORG
* CREATE A PDS HANDLE & OPEN THE PDS
* PARM1: ZERO-TERMINATED DDNAME                INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   PTR TO CREATED HANDLE                 OUTPUT
*        0 ERRORS, SEE ERRNO: 501 NOT ALLOCATED
*                             502 NOT PARTITIONED
*                             503 MEMBER ALLOCATED
*                             504 OPEN FAILED
*                             512 UNSUPPORTED RECFM
PDS@@OPN CSECT
* PROLOG AND ADDRESSABILITY
         EDCPRLG BASEREG=11            ASSEMBLER/C PROLOG
         LR    R2,R1                   SAVE PARAMETER LIST POINTER
* SETUP A PDS HANDLE
OPN000   EQU   *
         GETMAIN R,LV=PDSHSIZE         GET STORAGE FOR THE HANDLE
         LR    R4,R1                   MOVE TO
         LA    R5,PDSHSIZE             MOVE TO LENGTH
         LA    R6,PDSHANDL             MOVE FROM
         LR    R7,R5                   MOVE FROM LENGTH
         MVCL  R4,R6                   MOVE
         LR    R12,R1                  HANDLE ADDRESSABILITY
         USING PDSHANDL,R12
         LA    R10,PDSDCB              ADDRESS OF DCB IN HANDLE
         USING IHADCB,R10
* COPY ERRORNO ADDRESS TO HANDLE
         L     R6,4(0,R2)              ADDRESS OF PARM 2 = ERRNO
         LA    R7,0                    CODE FOR OK
         ST    R7,0(0,R6)              STORE IN ERRNO FIELD
* COPY THE ZERO-TERMINATED DDNAME TO THE DCB (SPACE FILLED)
OPN200   EQU   *
         L     R6,0(0,R2)              ADDRESS OF PARM 1
         LA    R8,DCBDDNAM             DDNAME FIELD IN DCB
         MVC   DCBDDNAM(8),=CL8' '     INIT DDNAME TO BLANKS
         LA    R9,8                    MAX BYTES
OPN210   CLI   0(R6),X'00'             ?END OF STRING(C-SYNTAX=00)
         BE    OPN230                   Y:LEAVE
         MVC   0(1,R8),0(R6)           MOVE ONE BYTE TO DDNAME
         LA    R6,1(R6)                INCREMENT FROM-ADDRESS
         LA    R8,1(R8)                INCREMENT TO-ADDRESS
         BCT   R9,OPN210
OPN230   EQU   *
         MVC   PDSDDNAM,DCBDDNAM       SAVE THE DDNAME IN THE HANDLE
OPN299   EQU   *
* CHECK DSORG
OPN300   EQU   *
         MVC   RB00DDN(8),DCBDDNAM     DDNAME TO REQUESTBLOCK
         MVC   RB00DSNA,=CL44' '       INIT DSNAME TO BLANKS
         LA    R1,RB00PTR              POINT TO REQUESTBLOCK
         SVC   99                      DYNALLOC
         LA    R7,501                  CODE FOR NOT ALLOCATED
         LTR   R15,R15                 ?OK
         BNZ   OPN600                   N: LEAVE IT
         LA    R7,502                  CODE FOR NOT PATITIONED
         TM    RB00DSOR,X'02'          PO?
         BNO   OPN600                  NO, ERROR
         LA    R7,503                  CODE FOR MEMBER ALLOCATED
         CLC   RB00MBRL,=X'0000'       ?MEMBER SPECIFIED
         BNE   OPN600                   Y: FAIL
* OPEN THE PDS
         MVC   PDSDSNAM,RB00DSNA       SAVE DSNAME IN HANDLE
         OPEN  ((R10),(INPUT))
         LA    R7,504                  CODE FOR OPEN FAILED
         LTR   R15,R15
         BNZ   OPN600
         MVC   PDSBLKSI,DCBBLKSI   SAVE THE BLKSIZE IN THE HANDLE
* SETUP FOR DIFFERENT RECFM'S
         L     R3,DATABUFZ         DEFAULT DATA BUFFER SIZE FOR FIXED
         LA    R7,512              CODE FOR UNSUPPORTED RECFM
         MVI   PDSRECFM,C'F'       ASSUME RECFM=F
         TM    DCBRECFM,X'08'      ?SPANNED
         BO    OPN600               Y: THIS NOT SUPPORTED
         TM    DCBRECFM,X'C0'      ?UNDEFINED
         BO    OPN600               Y: THIS NOT SUPPORTED
         TM    DCBRECFM,X'80'      ?FIXED
         BO    OPN410               Y: THIS WAS ASSUMED
         MVI   PDSRECFM,C'V'        N: THEN IT IS VARIABLE
         LH    R3,DCBBLKSI } FOR VARIABLE
         AH    R3,DCBLRECL }
         ST    R3,DATABUFZ         PUT THIS SIZE IN THE PDSHANDLE
OPN410   EQU   *
* GET STORAGE FOR THE DATABUFFER
         GETMAIN R,LV=(3)              GET STORAGE FOR THE DATABUFFER
         ST    R1,DATABUFA
* RETURN THE ADDRESS OF CREATED HANDLE (ALL IS WELL)
         LR    R15,R12
         B     OPN900
* RETURN NULL (THERE IS SOMETHING ROTTEN)
OPN600   EQU   *                       INDICATE WE FAILED
         L     R6,4(0,R2)              LOAD ADDRESS OF ERRNO FIELD
         ST    R7,0(0,R6)              STORE IN ERRNO FIELD
         MVC   0(3,R12),=C'XXX'        REMOVE EYECATCHER
         FREEMAIN R,A=(R12),LV=PDSHSIZE      REMOVE HANDLE
         LA    R15,0                   RETURN NO HANDLE
* EPILOG
OPN900   EQU   *
OPN901   EDCEPIL
         DROP  R10
         DROP  R12
         LTORG
RB0000   DS    0F
RB00PTR  DC    X'80',AL3(RB00LN)       REQUEST BLOCK POINTER
RB00LN   DC    X'14'                   REQUEST BLOCK LENGTH
RB00VERB DC    X'07'                   INFORMATION WANTED
RB00FLG1 DC    H'0'                    ALLOCATION INDICATORS
RB00ERR  DC    H'0'                    ERROR REASON CODE
RB00INFO DC    H'0'                    INFORMATION REASON CODE
RB00TXTP DC    A(RB00TUPL)             TEXT UNIT POINTER LIST ADDR.
         DC    F'0'                    RESERVED
RB00FLG2 DC    F'0'                    INDICATORS
RB00TUPL DC    A(RB00TU01)
         DC    A(RB00TU02)
         DC    A(RB00TU03)
         DC    X'80',AL3(RB00TU04)
RB00TU01 DC    H'1'                    DDNAME SPEC. KEY
         DC    H'1'                    NUMBER OF PARAMETERS
         DC    H'8'                    LENGTH OF DDNAME
RB00DDN  DC    CL8' '                  DDNAME
RB00TU02 DC    H'6'                    RETURN MEMBERNAME
         DC    H'1'                    NUMBER OF PARAMETERS
RB00MBRL DC    H'8'                    LENGTH OF MBR
RB00MBR  DC    CL8' '                  MBRNAME
RB00TU03 DC    H'10'                   RETURN DSORG
         DC    H'1'                    NUMBER OF PARAMETERS
         DC    H'2'
RB00DSOR DS    H                       DSORG
RB00TU04 DC    H'5'                    RETURN DSNAME
         DC    H'1'                    NUMBER OF PARAMETERS
         DC    H'44'
RB00DSNA DC    CL44' '                 DSNAME
         DS    0D
PDSHANDL DC    CL8'PDSHANDL'           EYECATCHER
         DC    XL1'00'                 TO USE EYECATCHER AS C STRING
PDSSTAT  DC    C'I'                    STATUS: (I)INPUT (O)UTPUT
PDSDDNAM DC    CL8' '                  PDS DDNAME
         DC    X'00'                   TERMINATOR FOR C-STRING
         DS    0H
PDSLMIN  DC    CL8' '                  MBR WORK FOR FIND,STOW,ENQ,DEQ
         DC    4X'00'                  FLAGS FOR STOW
PDSDSNAM DC    CL44' '                 DSNAME
         DC    X'00'                   TERMINATOR FOR C-STRING
DATABUFZ DC    F'32764'                DATABUFFER SIZE
DATABUFA DS    F                       DATABUFFER ADDRESS
PDSMBRS  DC    F'0'                    # MEMBERS IN USE
PDSMLADR DC    F'0'                    ADDRESS FIRST MEMLIST BLOCK
PDSMNEXT DC    F'0'                    ADDR NEXT MEMBER IN MEMBER LIST
PDSBLKSI DS    H                       BLKSIZE OF PDS
PDSEOF   DC    XL1'00'                 LAST READ WAS EOF
PDSRECFM DC    XL1'00'                 RECFM OF PDS
PDSDCB   DCB   MACRF=(R,W),DSORG=PO
PDSHSIZE EQU   *-PDSHANDL              SIZE OF PDSHANDLE DSECT
* CLOSE THE PDS: INDICATED BY PDS-HANDLE PARAMETER
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   0 OK                                  OUTPUT
*        -1 ERRORS, SEE ERRNO: 505 INVALID HANDLE
*                              506 MEMBERS STILL OPEN
*                              507 CLOSE FAILED
PDS@@CLS CSECT
         EDCPRLG BASEREG=11            ASSEMBLER/C PROLOG
         LR    R2,R1                   SAVE PARAMETER LIST POINTER
* PDS HANDLE ADDRESSABILITY AND VERIFICATION
         L     R12,0(0,R2)             ADDRESS OF PARM 1 = HANDLE
         LA    R7,505                  CODE FOR INVALID PDS HANDLE
         USING PDSHANDL,R12
         CLC   PDSHANDL,=CL8'PDSHANDL' CHECK EYECATCHER
         BNE   CLS050                  INVALID HANDLE
         L     R9,PDSMBRS              NUMBER OF OPEN MEMBERS
         LA    R7,506                  CODE FOR MEMBERS IN USE
         LTR   R9,R9                   ?OPEN MEMBERS
         BNZ   CLS050                   Y: BACK TO CALLER
* CLOSE THE PDS
         LA    R10,PDSDCB              ADDRESS OF DCB IN HANDLE
         LA    R7,507                  CODE FOR CLOSE FAILED
         CLOSE ((R10))
         LTR   R15,R15                 ?CLOSE OK
         BNZ   CLS050                   N: BACK TO CALLER
* IF WE HAVE A DIRECTORY STRUCTURE, DELETE IT
         L     R3,PDSMLADR         GET ADDRESS FIRST AREA
CLS005   EQU   *
         LTR   R3,R3               ?DO WE POINT TO AN AREA
         BZ    CLS010               N: DONE
         L     R4,0(R3)             Y: SAVE FORWARD POINTER
         FREEMAIN RC,LV=12000,A=(R3)
         LR    R3,R4               SET FORWARD POINTER
         B     CLS005
CLS010   EQU   *
* FREE PDS STORAGE
         L     R6,DATABUFA
         L     R3,DATABUFZ             GET THE DATA BUFFER SIZE
         FREEMAIN R,A=(R6),LV=(R3) FREE DATA BUFFER
         MVC   PDSHANDL,=C'OLDHANDL'   REMOVE EYECATCHER
         FREEMAIN R,A=(R12),LV=PDSHSIZE FREE PDS HANDLE
         LA    R15,0                   RETURNCODE = 0
         LA    R7,0                    CODE FOR ALL IS WELL
         B     CLS090
CLS050   L     R15,=F'-1'              RETURNCODE = EOF (CLOSE FAILED)
         DROP  R12
CLS090   EQU   *                       CLEANUP AND RETURN
         L     R6,4(0,R2)              ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)              STORE IN ERRNO FIELD
         EDCEPIL                       CLEANUP AND RETURN
         LTORG
* CHECK THE PDS HANDLE, GIVEN AS PARAMETER
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   1 OK                                  OUTPUT
*        0 INVALID, SEE ERRNO: 505 INVALID HANDLE
PDS@@PHN CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   PHN050              INVALID HANDLE
* LOAD ADDRESS OF ZERO-TERMINATED DDNAME
         LA    R15,1               INDICATE HANDLE OK
         LA    R7,0                CODE FOR ALL IS WELL
         B     PHN090              RETURN
PHN050   LA    R15,0               INDICATE HANDLE NOT OK
         LA    R7,505              CODE FOR INVALID HANDLE
         DROP  R12
PHN090   EQU   *
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* RETURN THE DDNAME OF PDS INDICATED BY PDS-HANDLE PARAMETER
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   PTR TO 0-TERMINATED PADDED DDNAME     OUTPUT
*        0 INVALID, SEE ERRNO: 505 INVALID HANDLE
PDS@@DDN CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   DDN050              INVALID HANDLE
* LOAD ADDRESS OF ZERO-TERMINATED DDNAME
         LA    R15,PDSDDNAM        ADDRESS OF DDNAME
         LA    R7,0
         B     DDN090              RETURN
DDN050   LA    R15,0
         LA    R7,505
         DROP  R12
DDN090   EQU   *
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* RETURN THE DSNAME OF PDS INDICATED BY PDS-HANDLE PARAMETER
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   PTR TO 0-TERMINATED PADDED DSNAME     OUTPUT
*        0 INVALID, SEE ERRNO: 505 INVALID HANDLE
PDS@@DSN CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   DSN050              INVALID HANDLE
* LOAD ADDRESS OF ZERO-TERMINATED DSNAME
         LA    R15,PDSDSNAM        ADDRESS OF DSNAME
         LA    R7,0
         B     DSN090              RETURN
DSN050   LA    R15,0
         LA    R7,505
         DROP  R12
DSN090   EQU   *
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* RETURN THE IO-BUFFER OF PDS INDICATED BY PDS-HANDLE PARAMETER
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   PTR TO IO-BUFFER                      OUTPUT
*        0 INVALID, SEE ERRNO: 505 INVALID HANDLE
PDS@@BUF CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   BUF050              INVALID HANDLE
* LOAD ADDRESS OF BUFFER
         LA    R7,0                CODE FOR ALL IS WELL
         L     R15,DATABUFA        ADDRESS OF BUFFER
         B     BUF090              RETURN
BUF050   LA    R15,0
         LA    R7,505              CODE FOR INVALID PDS HANDLE
         DROP  R12
BUF090   EQU   *
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* RETURN THE EOF STATUS OF PDS INDICATED BY PDS-HANDLE PARAMETER
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   0 NOT EOF                             OUTPUT
*        8 EOF OR INVALID, SEE ERRNO: 500 EOF
*                                     505 INVALID HANDLE
PDS@@EOF CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
         LA    R15,8
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R7,505              CODE FOR INVALID PDS HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   EOF090              INVALID HANDLE
         LA    R7,0                CODE FOR OK
* LOAD EOF STATUS
         LA    R15,8
         CLI   PDSEOF,X'00'        TEST EOF SWITCH
         BNE   EOF090
         LA    R15,0
         DROP  R12
EOF090   EQU   *
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* RETURN THE RECFM  OF PDS INDICATED BY PDS-HANDLE PARAMETER
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   PTR TO RECFM                          OUTPUT
*        0 ERROR, SEE ERRNO: 505 INVALID HANDLE
PDS@@RFM CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
         LA    R15,0
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R7,505              CODE FOR INVALID PDS HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   RFM090              INVALID HANDLE
         LA    R7,0                CODE FOR OK
* LOAD ADDRESS OF RECFM
         LA    R15,PDSRECFM
         DROP  R12
RFM090   EQU   *
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* RETURN THE BUFFER SIZE OF PDS INDICATED BY PDS-HANDLE PARAMETER
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   BUFFER SIZE                           OUTPUT
*        0 ERROR, SEE ERRNO: 505 INVALID HANDLE
PDS@@BUS CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
         LA    R15,0
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R7,505              CODE FOR INVALID PDS HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   BUS090              INVALID HANDLE
         LA    R7,0                CODE FOR OK
* LOAD LRECL
         LA    R10,PDSDCB
         USING IHADCB,R10
         L     R15,DATABUFZ
         DROP  R10
         DROP  R12
BUS090   EQU   *
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* RETURN THE BLKSIZE OF PDS INDICATED BY PDS-HANDLE PARAMETER
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   BLKSIZE                               OUTPUT
*        0 ERROR, SEE ERRNO: 505 INVALID HANDLE
PDS@@BLS CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
         LA    R15,0
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R7,505              CODE FOR INVALID PDS HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   BLS090              INVALID HANDLE
         LA    R7,0                CODE FOR OK
         LH    R15,PDSBLKSI
         DROP  R12
BLS090   EQU   *
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* RETURN THE RECL OF PDS INDICATED BY PDS-HANDLE PARAMETER
*       FIXED: RECL = LRECL
*    VARIABLE: RECL = LRECL-4
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   RECL                                  OUTPUT
*        0 ERROR, SEE ERRNO: 505 INVALID HANDLE
PDS@@LRL CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
         LA    R15,0
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R7,505              CODE FOR INVALID PDS HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   LRL090              INVALID HANDLE
         LA    R7,0                CODE FOR OK
* LOAD LRECL
         LA    R10,PDSDCB
         USING IHADCB,R10
         LH    R15,DCBLRECL
         CLI   PDSRECFM,C'F'       ?IS IT FIXED
         BE    LRL090               Y: TAKE THIS VALUE
         SH    R15,=H'4'            N: SUBTRACT 4
         DROP  R10
         DROP  R12
LRL090   EQU   *
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* ENQUE(RET=NONE) THE DSNAME INDICATED BY GIVEN HANDLE
* PARM1: PTR TO HANDLE                         INPUT
* R15:   0 OK                                  OUTPUT
*        505 INVALID HANDLE
PDS@@NQD CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R15,505             CODE FOR INVALID HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   NQD990              INVALID HANDLE
         MVC   NQDRNAME(44),PDSDSNAM
         ENQ   (NQDQNAME,NQDRNAME,E,44,SYSTEMS),RET=NONE
         LA    R15,0
NQD990   EQU   *
         EDCEPIL                   CLEANUP AND RETURN
NQDQNAME DC    CL8'SPFEDIT'
NQDRNAME DC    CL44' '
         LTORG
* ENQUE(RET=USE) THE DSNAME INDICATED BY GIVEN HANDLE + GIVEN MBRNAME
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO 0-TERMINATED MEMBERNAME        INPUT
* R15:   0 NOW ENQUEUED                        OUTPUT
*        505 INVALID HANDLE
*        ELSE RC OF ENQ
PDS@@NQM CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R15,505             CODE FOR INVALID HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   NQM990              INVALID HANDLE
         MVC   NQMRNAME(44),PDSDSNAM
* COPY THE ZERO-TERMINATED MEMBERNAME TO THE RNAME FIELD
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = MEMBERNAME
         LA    R8,NQMRNAME+44
         MVC   0(8,R8),=CL8' '     FIRST CLEAR THIS NAME
         LA    R9,8                MAX BYTES ALLOWED
NQM110   EQU   *
         CLI   0(R6),X'00'         FIND END OF STRING(C-SYNTAX=00)
         BE    NQM130
         MVC   0(1,R8),0(R6)       MOVE ONE BYTE TO MEMBERNAME
         LA    R6,1(R6)            INCREMENT FROM-ADDRESS
         LA    R8,1(R8)            INCREMENT TO-ADDRESS
         BCT   R9,NQM110
NQM130   EQU   *
         ENQ   (NQMQNAME,NQMRNAME,E,52,SYSTEMS),RET=USE
         LTR   R15,R15
         BNZ   NQM990
         L     R1,PDSMBRS
         LA    R1,1(R1)            INCREMENT # OF MEMBERS IN USE
         ST    R1,PDSMBRS
NQM990   EQU   *
         EDCEPIL                   CLEANUP AND RETURN
NQMQNAME DC    CL8'SPFEDIT'
NQMRNAME DC    CL52' '
         LTORG
* DEQUE THE DSNAME INDICATED BY GIVEN HANDLE
* PARM1: PTR TO HANDLE                         INPUT
* R15:   0 NOW DEQUEUED                        OUTPUT
*        505 INVALID HANDLE
*        ELSE RC OF DEQ
PDS@@DQD CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R15,505             CODE FOR INVALID HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   DQD990              INVALID HANDLE
         MVC   DQDRNAME(44),PDSDSNAM
         DEQ   (DQDQNAME,DQDRNAME,44,SYSTEMS),RET=NONE
DQD990   EQU   *
         EDCEPIL                   CLEANUP AND RETURN
DQDQNAME DC    CL8'SPFEDIT'
DQDRNAME DC    CL44' '
         LTORG
* DEQUE THE DSNAME INDICATED BY GIVEN HANDLE + GIVEN MEMBERNAME
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO 0-TERMINATED MEMBERNAME        INPUT
* R15:   0 NOW DEQUEUED                        OUTPUT
*        505 INVALID HANDLE
*        ELSE RC OF DEQ
PDS@@DQM CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R15,505             CODE FOR INVALID HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   DQM990              INVALID HANDLE
         MVC   DQMRNAME(44),PDSDSNAM
* COPY THE ZERO-TERMINATED MEMBERNAME TO THE RNAME FIELD
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = MEMBERNAME
         LA    R8,DQMRNAME+44
         MVC   0(8,R8),=CL8' '     FIRST CLEAR THIS NAME
         LA    R9,8                MAX BYTES ALLOWED
DQM110   EQU   *
         CLI   0(R6),X'00'         FIND END OF STRING(C-SYNTAX=00)
         BE    DQM130
         MVC   0(1,R8),0(R6)       MOVE ONE BYTE TO MEMBERNAME
         LA    R6,1(R6)            INCREMENT FROM-ADDRESS
         LA    R8,1(R8)            INCREMENT TO-ADDRESS
         BCT   R9,DQM110
DQM130   EQU   *
         DEQ   (DQMQNAME,DQMRNAME,52,SYSTEMS),RET=NONE
         L     R1,PDSMBRS
         BCTR  R1,0                DECREMENT # OF MEMBERS IN USE
         ST    R1,PDSMBRS
         LA    R15,0
DQM990   EQU   *
         EDCEPIL                   CLEANUP AND RETURN
DQMQNAME DC    CL8'SPFEDIT'
DQMRNAME DC    CL52' '
         LTORG
* FIND THE SPECIFIED MEMBER OF THE PDS INDICATED BY GIVEN HANDLE
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO 0-TERMINATED MEMBERNAME        INPUT
* PARM3: PTR TO ERRNO                          OUTPUT
* R15:   0 FOUND                               OUTPUT
*        NZ SEE ERRNO: 505 INVALID HANDLE
*                      516 MEMBER NOT FOUND
PDS@@FND CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R15,8
         LA    R7,505              CODE FOR INVALID HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   FND990              INVALID HANDLE
* CHECK STATUS OF PDS: IF NOT I REOPEN FOR INPUT
         LA    R10,PDSDCB          ADDRESS OF DCB IN HANDLE
         CLI   PDSSTAT,C'I'
         BE    FND005
         CLOSE ((R10))
         OPEN  ((R10),(INPUT))
         MVI   PDSSTAT,C'I'
FND005   EQU   *
* COPY THE ZERO-TERMINATED MEMBERNAME TO THE HANDLE
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = MEMBERNAME
         LA    R8,PDSLMIN          LAST FOUND OR STOWED MEMBER
         MVC   PDSLMIN,=CL8' '     FIRST CLEAR THIS NAME
         LA    R9,8                MAX BYTES ALLOWED
FND110   EQU   *
         CLI   0(R6),X'00'         FIND END OF STRING(C-SYNTAX=00)
         BE    FND130
         MVC   0(1,R8),0(R6)       MOVE ONE BYTE TO MEMBERNAME
         LA    R6,1(R6)            INCREMENT FROM-ADDRESS
         LA    R8,1(R8)            INCREMENT TO-ADDRESS
         BCT   R9,FND110
FND130   EQU   *
* FIND THE GIVEN MEMBERNAME
         XACAP CAP=24
         FIND  PDSDCB,PDSLMIN,D    FIND THE SPECIFIED MEMBER
         XACAP CAP=31
         LA    R7,516              CODE FOR MEMBER NOT FOUND
         LTR   R15,R15             ?FIND OK
         BNZ   FND990              N: GO BACK
         MVI   PDSEOF,X'00'        CLEAR EOF SWITCH
         LA    R7,0                CODE FOR ALL IS WELL
         DROP  R12
FND990   EQU   *
         L     R6,8(0,R2)          ADDRESS OF PARM 3 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* STOW THE SPECIFIED MEMBER OF THE PDS INDICATED BY GIVEN HANDLE
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO 0-TERMINATED MEMBERNAME        INPUT
* PARM3: PTR TO ERRNO                          OUTPUT
* R15:   0 STOWED                              OUTPUT
*        NZ SEE ERRNO: 505 INVALID HANDLE
PDS@@STW CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R15,8
         LA    R7,505              CODE FOR INVALID HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   STW990              INVALID HANDLE
* CHECK STATUS OF PDS: IF NOT O REOPEN FOR OUPUT
         LA    R10,PDSDCB          ADDRESS OF DCB IN HANDLE
         CLI   PDSSTAT,C'O'
         BE    STW005
         CLOSE ((R10))
         OPEN  ((R10),(OUTPUT))
         MVI   PDSSTAT,C'O'
STW005   EQU   *
* COPY THE ZERO-TERMINATED MEMBERNAME TO THE HANDLE
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = MEMBER
         LA    R8,PDSLMIN          LAST FOUND MEMBER FIELD IN HANDLE
         MVC   PDSLMIN,=CL8' '     FIRST CLEAR THIS NAME
         LA    R9,8                MAX BYTES ALLOWED
STW110   EQU   *
         CLI   0(R6),X'00'         FIND END OF STRING(C-SYNTAX=00)
         BE    STW130
         MVC   0(1,R8),0(R6)       MOVE ONE BYTE TO MEMBERNAME
         LA    R6,1(R6)            INCREMENT FROM-ADDRESS
         LA    R8,1(R8)            INCREMENT TO-ADDRESS
         BCT   R9,STW110
STW130   EQU   *
* STOW THE GIVEN MEMBERNAME
         MVC   PDSLMIN+8(4),=XL4'00000000'
         XACAP CAP=24
         STOW  PDSDCB,PDSLMIN,R    STOW THE SPECIFIED MEMBER
         XACAP CAP=31
         LA    R7,0                CODE FOR ALL IS WELL
         LA    R15,0
         DROP  R12
STW990   EQU   *
         L     R6,8(0,R2)          ADDRESS OF PARM 3 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* DELETE THE SPECIFIED MEMBER OF THE PDS INDICATED BY GIVEN HANDLE
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO 0-TERMINATED MEMBERNAME        INPUT
* PARM3: PTR TO ERRNO                          OUTPUT
* R15:   0 DELETED                             OUTPUT
*        NZ SEE ERRNO: 505 INVALID HANDLE
PDS@@MDL CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R7,505              CODE FOR INVALID HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   MDL990              INVALID HANDLE
* CHECK STATUS OF PDS: IF NOT O REOPEN FOR OUPUT
         LA    R10,PDSDCB          ADDRESS OF DCB IN HANDLE
         CLI   PDSSTAT,C'O'
         BE    MDL005
         CLOSE ((R10))
         OPEN  ((R10),(OUTPUT))
         MVI   PDSSTAT,C'O'
MDL005   EQU   *
* COPY THE ZERO-TERMINATED MEMBERNAME TO THE HANDLE
         L     R6,4(0,R2)          ADDRESS OF PARM 1
         LA    R8,PDSLMIN          LAST FOUND MEMBER FIELD IN HANDLE
         MVC   PDSLMIN,=CL8' '      FIRST CLEAR THIS NAME
         LA    R9,8                MAX BYTES ALLOWED
MDL110   EQU   *
         CLI   0(R6),X'00'         FIND END OF STRING(C-SYNTAX=00)
         BE    MDL130
         MVC   0(1,R8),0(R6)       MOVE ONE BYTE TO DDNAME
         LA    R6,1(R6)            INCREMENT FROM-ADDRESS
         LA    R8,1(R8)            INCREMENT TO-ADDRESS
         BCT   R9,MDL110
MDL130   EQU   *
* DELETE THE GIVEN MEMBERNAME
         XACAP CAP=24
         STOW  PDSDCB,PDSLMIN,D    DELETE THE SPECIFIED MEMBER
         XACAP CAP=31
         LA    R7,0                CODE FOR ALL IS WELL
         LA    R15,0
         DROP  R12
MDL990   EQU   *
         L     R6,8(0,R2)          ADDRESS OF PARM 3 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* READ AS MANY BLOCKS AS POSIBLE INTO THE DATABUFFER
* FOR VARIABLE RECFM ONLY ONE BLOCK PER BUFFER
* PARM1: PTR TO HANDLE                         INPUT
* R15:   NUMBER OF BYTES READ                  OUTPUT
*        0  INVALID HANDLE OR EOF WHEN PDSEOF SET
PDS@@RDM CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R15,0               ASSUME 0 BYTES RETURNED
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   RDM990              INVALID HANDLE
         LA    R10,PDSDCB          ADDRESS OF DCB IN HANDLE
         USING IHADCB,R10
* CHECK STATUS OF PDS: IF NOT I REOPEN FOR INPUT
         CLI   PDSSTAT,C'I'
         BE    RDM005
         CLOSE ((R10))
         OPEN  ((R10),(INPUT))
         MVI   PDSSTAT,C'I'
RDM005   EQU   *
* SET EOF ROUTINE ADDRESS IN DCB
         LA    R3,RDM250
         ST    R3,DCBEODAD
* SETUP REGISTERS FOR READ(LOOP)
         L     R8,DATABUFA         ADDRESS OF DATABUFFER
         L     R7,DATABUFA         DATABUFFER START ADDR
         A     R7,DATABUFZ         END OF DATABUFFER
         SH    R7,PDSBLKSI         R7=MAX BLOCK START ADDR IN BUFFER
* READ UNTIL BUFFER FULL
RDM050   EQU   *
         CR    R8,R7               ?NEXT BLOCK FITS IN BUFFER
         BH    RDM350               N: STOP READING BLOCKS
         XACAP CAP=24
         READ  PDSRECB,SF,(R10),(R8)  READ A BLOCK
         CHECK PDSRECB
         XACAP CAP=31
         LH    R3,DCBBLKSI
         CLI   PDSRECFM,C'V'       ?IS IT A VARIABLE BLOCK
         BE    RDM100               Y: THEN DON'T LOOP
         L     R1,PDSRECB+16       GET RECORD POINTER WORD
         SH    R3,14(R1)           BLKSIZE - RESIDUAL COUNT
         AR    R8,R3               R8 POINTS FOR NEXT BLOCK
         B     RDM050
* EXIT READ ROUTINE
RDM100   EQU   *                <-- VARIABLE BLOCK READ AND NOT EOF
         LR    R8,R3               RETURN BLKSIZE
         B     RDM990
RDM250   EQU   *                <-- EOF REACHED
         XACAP CAP=31
         MVI   PDSEOF,X'FF'        INDICATE  EOF
RDM350   EQU   *                <-- BUFFER FULL
         S     R8,DATABUFA         R8=BYTES READ
         LR    R15,R8              RETURN #BYTES
         DROP R12
         DROP R10
RDM990   EDCEPIL                   CLEANUP AND RETURN
         LTORG
* WRITE BLOCKS FROM THE DATABUFFER
* FOR VARIABLE RECFM ONLY ONE BLOCK PER BUFFER(INCL BDW AND RDW'S)
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO NUMBER OF BYTES                INPUT
* R15:   0 OK                                  OUTPUT
*        4 INVALID HANDLE
PDS@@WRM CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R15,4               ASSUME THERE IS AN ERROR
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   WRM990              INVALID HANDLE
         LA    R10,PDSDCB          ADDRESS OF DCB IN HANDLE
         USING IHADCB,R10
* CHECK STATUS OF PDS: IF NOT O REOPEN FOR OUPUT
         CLI   PDSSTAT,C'O'
         BE    WRM005
         CLOSE ((R10))
         OPEN  ((R10),(OUTPUT))
GOON     EQU   *
         MVI   PDSSTAT,C'O'
WRM005   EQU   *
* SETUP REGISTERS FOR WRITE(LOOP)
         L     R6,4(0,R2)          PARM2 = PTR TO NUMBER OF BYTES
         L     R6,0(0,R6)          GET  NUMBER OF BYTES
         L     R8,DATABUFA         ADDRESS OF DATABUFFER
         CLI   PDSRECFM,C'F'       ?IS IT A FIXED BLOCK
         BE    WRM050               Y: DO WRITE LOOP
         STH   R6,DCBBLKSI          N: USE PARM2 AS BLKSIZE
         B     WRM060              GO WRITE
* WRITE UNTIL BUFFER EMPTY
WRM050   EQU   *
         MVC   DCBBLKSI,PDSBLKSI   MOVE ORIGINAL BLKSIZE TO DCB
         CH    R6,PDSBLKSI         ?DATA SIZE >= BLKSIZE
         BNL   WRM060               Y: USE ORIGINAL BLKSIZE
         STH   R6,DCBBLKSI          N: USE CURRENT DATA SIZE
WRM060   EQU   *
         XACAP CAP=24
         WRITE PDSWECB,SF,(R10),(R8),'S' WRITE A BLOCK
         CHECK PDSWECB
         XACAP CAP=31
         CLI   PDSRECFM,C'V'       ?IS IT A VARIABLE BLOCK
         BE    WRM100               Y: THEN DON'T LOOP
         AH    R8,DCBBLKSI         R8 POINTS FOR NEXT BLOCK
         SH    R6,DCBBLKSI         R6 CONTAINS # OF BYTES LEFT
         LTR   R6,R6               ?MORE BYTES TO WRITE
         BNZ   WRM050               Y: LOOP
* EXIT WRITE ROUTINE
WRM100   EQU   *
         LA    R15,0
         DROP R12
         DROP R10
WRM990   EDCEPIL                   CLEANUP AND RETURN
         LTORG
* GET THE NEXT MEMBER FROM THE DIRECTORY STRUCTURE
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   PTR TO NEXT MEMBERNAME                OUTPUT
*        0 SEE ERRNO: 505 INVALID HANDLE
*                     513 DIRECTORY NOT OPEN
PDS@@NMD CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         LA    R7,505              CODE FOR INVALID HANDLE
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   NMD080              INVALID HANDLE, RETURN 0
* GET NEXT MEMBER
         LA    R7,513              CODE FOR DIRECTORY NOT OPEN
         L     R3,PDSMNEXT         GET ADDRESS OF NEXT MEMBER
         LTR   R3,R3               ?IS THERE A MEMBER LIST
         BZ    NMD080               N: RETURN 0
         LA    R7,0                CODE FOR OK
         CLC   0(8,R3),=8X'FF'     ?DO WE POINT TO THE END
         BE    NMD080               Y: RETURN 0
         LR    R15,R3               N: RETURN PTR TO MEMBER NAME
         L     R3,8(R3)            GET ADDRESS NEXT NEXT MEMBER
         ST    R3,PDSMNEXT         STORE THIS AS NEXT MEMBER
         B     NMD990
NMD080   EQU   *
         LA    R15,0               CODE FOR END OF LIST
         B     NMD990
NMD990   EQU   *
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* FREEMAIN THE DIRECTORY STRUCTURE
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   0 OK                                  OUTPUT
*        -1 ERRORS, SEE ERRNO: 505 INVALID HANDLE
PDS@@CLD CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         L     R15,=F'-1'          ASSUME AN ERROR
         LA    R7,505
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   CLD990              INVALID HANDLE
* IF WE HAVE A DIRECTORY STRUCTURE, DELETE IT
         LA    R7,0
         L     R3,PDSMLADR         GET ADDRESS FIRST AREA
CLD005   EQU   *
         LTR   R3,R3               ?DO WE POINT TO AN AREA
         BZ    CLD010               N: DONE
         L     R4,0(R3)             Y: SAVE FORWARD POINTER
         FREEMAIN RC,LV=12000,A=(R3)
         LR    R3,R4               SET FORWARD POINTER
         B     CLD005
CLD010   EQU   *
         LA    R15,0
         ST    R15,PDSMLADR        INDICATE NO DIRECTORY STRUCTURE
         LA    R15,0               RETURN OK
CLD990   EQU   *                   CLEANUP AND RETURN
         DROP  R12
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
         LTORG
* OPEN DIRECTORY, BUILD STRUCTURE, CLOSE DIRECTORY
* AND PUT POINTER TO FIRST ENTRY IN HANDLE
* PARM1: PTR TO HANDLE                         INPUT
* PARM2: PTR TO ERRNO                          OUTPUT
* R15:   0 OK                                  OUTPUT
*        -1 ERRORS, SEE ERRNO: 505 INVALID HANDLE
PDS@@RDD CSECT
         EDCPRLG BASEREG=11        ASSEMBLER/C PROLOG
         LR    R2,R1               SAVE PARAMETER LIST POINTER
* GET AND CHECK THE PDS HANDLE
         L     R12,0(0,R2)         ADDRESS OF PARM 1 = HANDLE
         USING PDSHANDL,R12
         L     R15,=F'-1'          ASSUME AN ERROR
         LA    R7,505
         CLC   PDSHANDL,=CL8'PDSHANDL'   CHECK EYECATCHER
         BNE   RDD990              INVALID HANDLE
         LA    R10,DIRDCB          ADDRESS OF DIRECTORY DCB
         USING IHADCB,R10
         LA    R7,0
         ST    R2,RDDSAVR2         SAVE PARMLIST PTR
* IF WE HAVE A DIRECTORY STRUCTURE, DELETE IT
         L     R3,PDSMLADR         GET ADDRESS FIRST AREA
RDD005   EQU   *
         LTR   R3,R3               ?DO WE POINT TO AN AREA
         BZ    RDD010               N: DONE
         L     R4,0(R3)             Y: SAVE FORWARD POINTER
         FREEMAIN RC,LV=12000,A=(R3)
         LR    R3,R4               SET FORWARD POINTER
         B     RDD005
RDD010   EQU   *
* READ DIRECTORY
         MVC   DCBDDNAM,PDSDDNAM
         OPEN  ((R10),(INPUT))
         MVC   PREVNAME,=8X'FF'    INIT PREVNAME
RDD050   EQU     *
         GETMAIN RC,LV=12000       GET STORAGE
         ST    R1,PDSMLADR         STORE THE ADDRESS IN HANDLE
         ST    R1,LASTGETM         AND IN LAST-GETMAINED
         LA    R15,0
         ST    R15,0(R1)           SET FORWARD POINTER TO 0
         LA    R1,4(R1)
         ST    R1,FREEADDR         ADDRESS OF FIRST FREE ENTRY
RDD060   EQU     *
         XACAP CAP=24
         READ  PDSDECB,SF,(R10),DIRBUF,'S'
         CHECK PDSDECB             WAIT FOR GOOD DECB
         XACAP CAP=31
         CLC   DCBTIOT(4),SAVTIOT  ?PTR TO TIOT CHANGED
         BE    RDD070               N: JUMP
         MVC   SAVTIOT,DCBTIOT      Y: SAVE IT
         MVI   HIGH,C'N'
RDD070   EQU   *
         CLI   HIGH,C'Y'           ?THIS PDS HIGH
         BE    RDD060               Y: GO READ NEXT BLOCK
         LA    R4,DIRBUF            N: BUFFER ADDRESS
         LA    R2,2
RDD100   LA    R9,0(R2,R4)
         CLC   0(8,R9),=8X'FF'     ?LAST MEMBER REACHED IN THIS PDS
         BNE   RDD150               N: JUMP
         MVI   HIGH,C'Y'            Y: SET INDICATOR
         B     RDD060              GO READ
RDD150   EQU   *
         LA    R15,CHAIN000
         BALR  R14,R15             CHAIN MEMBERNAME
         IC    R9,11(R2,R4)
         LA    R8,0
         SLL   R9,27               HALFWORDS OF USER DATA
         SLDL  R8,6                IN REG 8
         LA    R2,12(R8,R2)        ADRESS OF NEXT MEMBER
         CH    R2,0(R4)            ?END OF DIRBLOCK
         BL    RDD100               N: GO FOR MEMBER
         B     RDD060               Y: GO READ
* EXIT READ ROUTINE
RDD250   EQU   *
         XACAP CAP=31
         CLOSE (R10)               CLOSE DIRECTORY
         L     R15,LOWENTRY+8      GET START OF MEMBER LIST
         ST    R15,PDSMNEXT        AND STORE IN HANDLE
         LA    R15,0               RETURN OK
         DROP  R12
         DROP  R10
RDD990   EQU   *                   CLEANUP AND RETURN
         L     R2,RDDSAVR2         LOAD SAVED PARMLIST PTR
         L     R6,4(0,R2)          ADDRESS OF PARM 2 = ERRNO
         ST    R7,0(0,R6)          STORE IN ERRNO FIELD
         EDCEPIL                   CLEANUP AND RETURN
*          SUBROUTINE: IF MEMBER NOT IN CHAIN, CHAIN IT.
*                      R9: ADDRESS TO MEMBERNAME
CHAIN000 BAKR  R14,0
         LA    R2,LOWENTRY
         CLC   0(8,R9),PREVNAME    COMPARE WITH PREVIOUS
         BE    CHAIN999             EQUAL: DONE
         BL    CHAIN050             LOW:   START AT BEGIN
         L     R2,PREVADDR          HIGH:  SEARCH ON
CHAIN050 EQU   *
         L     R4,FREEADDR
CHAIN100 EQU   *
         CLC   0(8,R9),0(R2)       COMPARE WITH LIST
         BE    CHAIN999             EQUAL: DONE
         BL    CHAIN300             LOW:   GO PUT IN CHAIN
         LR    R3,R2                HIGH:  SEARCH ON
         L     R2,8(R2)
         B     CHAIN100
CHAIN300 EQU   *
         L     R6,LASTGETM         GET ADDRESS OF LAST GETMAINED AREA
         LR    R1,R6
         AH    R1,=H'12000'        POINT TO END
         CR    R4,R1               ?ARE WE AT END
         BL    CHAIN310             N: USE THIS ENTRY
         GETMAIN RC,LV=12000       GET STORAGE
         ST    R1,0(R6)            STORE IN PREVIOUS FORWARD POINTER
         ST    R1,LASTGETM         AND IN LAST-GETMAINED
         LA    R15,0
         ST    R15,0(R1)           SET FORWARD POINTER TO 0
         LA    R4,4(R1)            GET ADDRESS OF FIRST FREE ENTRY
CHAIN310 EQU   *
         MVC   0(8,R4),0(R9)       PUT MEMBERNAME AND
         MVC   8(4,R4),8(R3)       PTR IN THIS ENTRY
         ST    R4,PREVADDR         SAVE THIS ENTRY ADDRESS
         MVC   PREVNAME(8),0(R9)   AND THIS MEMBERNAME
         ST    R4,8(R3)            PTR TO THIS INTO PREV
         LA    R5,12(R4)           POINT TO NEXT FREE
         ST    R5,FREEADDR         AND SAVE THIS
CHAIN999 EQU   *
         PR
CHASAV14 DC    F'0'
         LTORG
RDDSAVR2 DS    F
DIRBUF   DS    CL256
DIRDCB   DCB   RECFM=U,LRECL=256,BLKSIZE=256,DSORG=PS,                 *
               MACRF=(R),EODAD=RDD250
LASTGETM DC    F'0'
SAVTIOT  DC    F'0'
HIGH     DC    C'N'
PREVADDR DC    A(LOWENTRY)
PREVNAME DC    8X'FF'
FREEADDR DC    A(0)
LOWENTRY DC    8X'00',A(HIGENTRY)
HIGENTRY DC    8X'FF',A(0)
         DCBD  DSORG=PO
         DSECT
         IEFJFCBN
         END


J van de Pieterman
Systems Programmer
Hoogovens (The Netherlands)             c Xephon 1996

