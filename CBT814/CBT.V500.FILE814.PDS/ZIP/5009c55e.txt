Making mass updates to a PDS in batch

We often need to make changes to members of PDSs.
Sometimes the changes apply to all, or almost all, of the
members; for instance, when we upgrade a release of a product
and we have to alter the dataset names. In a production system,
where time is money, the PDSs can be very large and it can
take us a long time to edit, make the changes, save the
member, repeat the process for the next one in the library, and
so on.

I have written a CLIST, which is executed in batch, where you
indicate the dataset name of the PDS and the changes you want
to make in the established format of edit commands (ie FIND
xxx, CHANGE xxx yyy, EXCLUDE, etc).


EXECUTION JCL

//@SYSCRE05  JOB ,CRESCENCIO,TIME=1440,REGION=9M,
//           CLASS=1,MSGCLASS=Y,MSGLEVEL=(1,1),NOTIFY=@SYCRE
//LIBRA    PROC
//* This step copies your input stream to a library that will
//* be concatenated to SYSPROC in the next step
//STEP1    EXEC PGM=IEBGENER
//SYSUT1   DD DUMMY
//SYSUT2   DD DSN=&&TEMP2(ZZZZZ),DISP=(NEW,PASS),
//         SPACE=(TRK,(1,1,1)),
//         UNIT=3390,DCB=(LRECL=80,RECFM=FB,BLKSIZE=3120)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//* This step scans and updates the library you indicate in
//* SYSTSIN. It simulates a TSO session by allocating the DDNAMEs
//* you use there. The parameters and options are indicated at the
//* end.
//STEP2    EXEC PGM=IKJEFT1A,REGION=9500K,DYNAMNBR=60,COND=(0,LT)
//STEPLIB  DD DSN=ISR.V3R2M0.ISRLOAD,DISP=SHR
//         DD DSN=ISP.V3R2M0.ISPLOAD,DISP=SHR
//ISPLLIB  DD DSN=ISR.V3R2M0.ISRLOAD,DISP=SHR
//         DD DSN=ISP.V3R2M0.ISPLOAD,DISP=SHR
//ISPPLIB  DD DSN=ISR.V3R2M0.ISRPENU,DISP=SHR
//         DD DSN=ISP.V3R2M0.ISPPENU,DISP=SHR
//ISPSLIB  DD DSN=ISR.V3R2M0.ISRSENU,DISP=SHR
//         DD DSN=ISP.V3R2M0.ISPSLIB,DISP=SHR
//ISPMLIB  DD DSN=ISR.V3R2M0.ISRMENU,DISP=SHR
//         DD DSN=ISP.V3R2M0.ISPMENU,DISP=SHR
//ISPTLIB  DD DSN=ISP.V3R2M0.ISPTENU,DISP=SHR
//ISPLOG   DD SYSOUT=*,DCB=(LRECL=125,BLKSIZE=129,RECFM=VA)
//ISPPROF  DD DSN=&&TEMP,DISP=(NEW,DELETE,DELETE),
//         SPACE=(TRK,(15,15,10)),
//         UNIT=3390,DCB=(LRECL=80,RECFM=FB,BLKSIZE=3120,BUFNO=10)
//SYSUADS  DD DSN=SYS1.UADS,DISP=SHR
//SYSLBC   DD DSN=SYS1.BRODCAST,DISP=SHR
//SYSHELP  DD DSN=SYS1.HELP,DISP=SHR
//ISPTABL  DD DUMMY
//ISPFILE  DD DUMMY
//SYSTSPRT DD SYSOUT=*
//SYSABEND DD SYSOUT=*
//SYSOUT   DD TERM=TS,SYSOUT=*
//SYSPRINT DD TERM=TS,SYSOUT=*
//SYSTERM  DD TERM=TS,SYSOUT=*
//* Replace the next pds with your clist library that contains LIBRAX.
//SYSPROC  DD DSN=@SY.GRL.ISRCLIB,DISP=SHR,DCB=LRECL=80
//         DD DSN=&&TEMP2,DISP=SHR
//  PEND
//STEPX EXEC LIBRA
//* Replace the next commands with yours; always leave ISREDIT as the
//* first word; do not remove the ISREDIT MACRO, the ISREDIT END
//* or the EXIT CODE(0) lines.
//*
//STEP1.SYSUT1 DD *
ISREDIT MACRO
  ISREDIT C ALL APRCICS BPRCICS
  ISREDIT C ALL APR0    BPR0
  ISREDIT END
EXIT CODE(0)
/*
//* Sometimes the job ends with RC=0 and has not been successful.
//* Always check the messages at the end of the output.
//* The general format for the parameters is:
//* ===> LIBRAX pdsname ZZZZZ membname listname <===
//* LIBRAX   - Do not change.It's the name of the CLIST.
//* pdsname  - Put here the library you want to update.
//* ZZZZZ    - Do not change. It's the macro name.
//* membname - START to scan all the PDS. Other value: the membname
//*            where to start from.
//* listname - NOLIST to scan all the PDS. Other value: the name of
//*            a list (a pds or a sequential file), that contains
//*            the member names that you want to update: from cols.
//*            1:8 of each line.
//STEP2.SYSTSIN  DD *
 PROFILE  NOPREFIX
 ISPSTART CMD(LIBRAX @SY.LIXO.CNTL ZZZZZ   -
              START     NOLIST                        ) BDISPMAX(1)
//
//* THE PREVIOUS LINE SHOWS HOW TO SCAN THE ENTIRE PDS TO APPLY CHANGES
//* THE FOLLOWING LINE SHOWS HOW TO USE A START MEMBER IN THE PDS
//*     (USEFUL WHEN THE PDS IS VERY BIG AND THE JOB ABENDS WITH
//*      LACK OF MEMORY; IN THIS CASE YOU RESTART THE JOB WITH THE
//*      NEXT MEMBER OF THE PDS TO CONTINUE THE CHANGES)
              MEMBNAME  NOLIST                        ) BDISPMAX(1)
//* THE FOLLOWING LINE SHOWS HOW TO USE A LIST OF MEMBERS TO CHANGE
              START     @SYCRE.GERAL.CNTL(LIST)       ) BDISPMAX(1)
//*


CLIST LIBRAX

PROC 4 BIB MAC MEMB LISTAGEM
ISPEXEC CONTROL ERRORS RETURN
   ERROR DO
      SET &RC = &LASTCC
      IF &K   = 0   THEN RETURN
      IF &RC  = 4   THEN RETURN
      IF &RC  = 8   THEN SET &RC = 0
      IF &RC  = 14  THEN WRITE MEMBER IN USE !!!
      IF &RC  = 400 THEN SET &RC = 0
      ERROR OFF
      GOTO FIM
   END
/*   +===========================================+
/*   |   EDIT ONE BY ONE THE MEMBERS OF A PDS    |
/*   |     (CAN USE A MACRO TO CHANGE DATA)      |
/*   +===========================================+
IF &LISTAGEM ^= NOLIST THEN DO
   ALLOC FI(F) DA('&LISTAGEM') SHR
   OPENFILE F INPUT
   GETFILE F
   SET MEMB = &SUBSTR(1:8,&F)
   SET MEMB = &MEMB
END
IF &MEMB = START  THEN SET &MEMB =
IF &MEMB = THEN SET &OPT = LIST
           ELSE SET &OPT = FREE
ISPEXEC  LMINIT   DATAID(EDD) DATASET('&BIB')                    +
                  ENQ(SHR) ORG(LISTA)
ISPEXEC  LMOPEN   DATAID(&EDD) OPTION(INPUT) LRECL(LREC)         +
                  RECFM(RECF) ORG(LISTC)
SET K = 0
ISPEXEC  LMMLIST  DATAID(&EDD) OPTION(&OPT)                      +
                  MEMBER(MEMBRO) STATS(NO)
IF &MEMB =  THEN
            ELSE SET MEMBRO = &STR(&MEMB)
SET K = 1
DO WHILE A NE B
   ISPEXEC  LMMFIND  DATAID(&EDD) MEMBER(&MEMBRO)
   SET &MEMBRO = &MEMBRO
   ISPEXEC EDIT DATASET('&BIB(&MEMBRO)') MACRO(&MAC)
   IF &LISTAGEM = N0LIST THEN -
      ISPEXEC  LMMLIST  DATAID(&EDD) OPTION(LIST)                  +
                        MEMBER(MEMBRO) STATS(NO)
   ELSE DO
        GETFILE F
        SET MEMBRO = &SUBSTR(1:8,&F)
        SET MEMBRO = &MEMBRO
        END
END
FIM: -
IF &LISTAGEM ^= NOLIST THEN DO
   CLOSFILE F
   FREE FI(F)
END
ISPEXEC LMCLOSE DATAID(&EDD)
ISPEXEC LMFREE  DATAID(&EDD)
SET &ZISPFRC = &RC
ISPEXEC VPUT (ZISPFRC) SHARED
WRITE ******************************************************************
WRITE =============>   LAST MEMBER EDITED : &MEMBRO
WRITE =============>   LAST MEMBER EDITED : &MEMBRO
WRITE =============>   LAST MEMBER EDITED : &MEMBRO
WRITE ******************************************************************
EXIT


Crescencio Ferreira
Systems Programmer
Banco Comercial Portugues (Portugal)                         c C Ferreira 1993

