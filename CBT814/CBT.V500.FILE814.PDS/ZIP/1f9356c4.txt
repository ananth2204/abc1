An Assembler macro to view registers


REGVIEW SOURCE CODE

*===================================================================*
*  REGVIEW - displays the contents of registers.                    *
*  Insert this macro in the desired location of your program.       *
*  All generated labels are unique and start with "X".              *
*  The program can be AMODE 24 or 31, and must be RMODE 24.         *
*  For TSO, just invoke REGVIEW. For Batch, invoke REGVIEW BATCH.   *
*===================================================================*
         MACRO
         REGVIEW &PARM
&A       SETA  &SYSNDX             set index to make labels unique
         B     XTR&A               branch to main code area
*===================================================================*
*        REGVIEW WORKING STORAGE                                    *
*===================================================================*
         DS    0F                  align storage
XREG&A   DS    16F                 register store area
X16&A    DC    F'16'               value for loop counter
X04&A    DC    F'4'                value for R7 increment
X12&A    DC    F'12'               value for R8 increment
*
XHEX5&A  DS    0CL5
XHEX&A   DS    F                   register to process
         DS    CL1
*
XUNP9&A  DS    0CL9
XUNP&A   DS    CL8                 unpacked register
         DS    CL1
*
XTR1&A   DC    X'0F0F0F0F0F0F0F0F' register formatters
XTR2&A   DC    C'0123456789ABCDEF'
*
XOUT0&A  DC    C'0-3'              output area: line headers
XOUT1&A  DC    C'4-7'
XOUT2&A  DC    C'8-B'
XOUT3&A  DC    C'C-F'
*===================================================================*
*        REGVIEW MAIN CODE AREA                                     *
*===================================================================*
XTR&A    STM   R0,R15,XREG&A       store all regs
*
         LA    R7,XREG&A           R7: base reg for loading regs
         L     R6,X16&A            loop counter = 16
*
         STORAGE OBTAIN,           acquire area for output lines       *
               ADDR=(R8),                                              *
               LENGTH=192,                                             *
               LOC=BELOW,                                              *
               COND=YES
         LTR   R15,R15
         BNZ   XEXIT&A
*
         LR    R9,R8               keep address in R9 for output
         MVI   0(R8),X'40'         initialize area with a space
         MVC   1(191,R8),0(R8)     and propagate it
         MVC   0(3,R8),XOUT0&A     labels on each output line
         MVC   48(3,R8),XOUT1&A
         MVC   96(3,R8),XOUT2&A
         MVC   144(3,R8),XOUT3&A
         A     R8,X04&A            skip first label (4 bytes)
*
XLOOP&A  MVC   XHEX&A,0(R7)        move register to process
         UNPK  XUNP9&A,XHEX5&A
         NC    XUNP&A,XTR1&A
         TR    XUNP&A,XTR2&A
         MVC   0(8,R8),XUNP&A      move result to output
         A     R7,X04&A            increment pointer (4 bytes)
         A     R8,X12&A            increment pointer (12 bytes)
         BCT   R6,XLOOP&A          loop for each register
*===================================================================*
*        SELECT OUTPUT TYPE: TPUT OR SYSPRINT                       *
*===================================================================*
         AIF ('&PARM' EQ 'BATCH').XBATCH
*
         TPUT  0(R9),48          output results to screen
         TPUT  48(R9),48
         TPUT  96(R9),48
         TPUT  144(R9),48
*
         AGO   .XEND
*===================================================================*
.XBATCH  ANOP                    output results to sysprint
         B     XOPEN&A           branch around dcb
*
PRINT&A  DCB   DSORG=PS,RECFM=F,MACRF=(PM),                            *
               LRECL=48,BLKSIZE=48,DDNAME=SYSPRINT
*
XOPEN&A  OPEN  (PRINT&A,OUTPUT)
         PUT   PRINT&A,0(R9),48
         PUT   PRINT&A,48(R9),48
         PUT   PRINT&A,96(R9),48
         PUT   PRINT&A,144(R9),48
         CLOSE PRINT&A
*===================================================================*
.XEND    ANOP
*
         STORAGE RELEASE,                                              *
               ADDR=(R9),                                              *
               LENGTH=192,                                             *
               COND=YES
*
XEXIT&A  LM    R0,R15,XREG&A       restore all regs
*===================================================================*
*        REGVIEW END                                                *
*===================================================================*
         MEND


Lu’s Paulo Figueiredo Sousa Ribeiro
Systems Programmer
Edinfor (Portugal)                        c Xephon 1996

