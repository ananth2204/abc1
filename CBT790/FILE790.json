{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012811000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 999362, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE790.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 999362, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 999362, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE790.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x10\\x0c'", "DS1TRBAL": "b'\\x04\\x1e'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05X\\x00\\n\\x05Y\\x00\\x0b\\x00\\x11'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04R\\x00C\\x01\\x11\\x05O\\x01\\x11\\x05O\"(\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf2@@@'", "ispf": {"version": "04.82", "flags": 0, "createdate": "2011-02-23T00:00:00", "modifydate": "2011-02-23T22:28:43", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-482"}, "text": "REGULAR CBT TAPE - VERSION 482    FILE:  790\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT482.FILE790\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 10 MEMBERS COUNTED; CUMULATIVE SIZE IS 9,246 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/23/11    22:28:43    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$INST121": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x11\\x05O\\x01\\x11\\x05O!Q\\x00'\\x00'\\x00\\x00\\xf1K\\xf2K\\xf1@@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2011-02-23T00:00:00", "modifydate": "2011-02-23T21:51:00", "lines": 39, "newlines": 39, "modlines": 0, "user": "1.2.1"}, "text": "SRS Installation Instructions:\n\n1. SRS is distributed in two files: src.xmt (source code) and\n   linklib.xmt (execution library).  The files are in TSO TRANSMIT form\n   and must be unformatted with the TSO RECEIVE command to translate\n   them into useable PDSes.\n\n2. Binary Upload both files.\n   - If using IND$FILE or a similar file transfer program DO NOT\n     specify 'Convert to EBCDIC' or 'Delete CRLF'.\n   - If using FTP, specify BINARY transfer mode\n\n3. For each file, issue TSO command RECEIVE INDS(dsn), where dsn is the\n   data set name assigned to each uploaded file.  When message INMR906A\n   appears, enter DS(newdsn) to specify the desired names for the source\n   and execution libraries on your system.\n\n4. Update PROGxx or IEAAPFxx to APF authorize the execution library.\n   Dynamically authorize the execution library or IPL the system.\n\n5. Member SRS in the source library is a sample cataloged procedure that\n   can be used to invoke SRS.  Change the STEPLIB data set name to the\n   execution library name you've chosen for your system.  Make any other\n   updates to suit your installation standards and copy the proc to a\n   system procedure library or use a JCLLIB statement in SRS execution\n   JCL to point to the SRS source library.\n\nNOTES:\n\n- Review the $ABOUT member in the source library for information\n  on how to use SRS.\n\n- SRS 1.2.1 was assembled on z/OS 1.6.  The Linklib shipped should be\n  downward and upward compatible with prior and future releases.\n\n- If you install SRS, please send a note to\n  ddanner9@yahoo.com so I can add you to the distribution\n  list for future product upgrades.  Of course comments and/or\n  enhancement requests are also welcome!\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$INST130": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x11\\x05O\\x01\\x11\\x05O!P\\x00-\\x00-\\x00\\x00\\xf1K\\xf3K\\xf0@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2011-02-23T00:00:00", "modifydate": "2011-02-23T21:50:00", "lines": 45, "newlines": 45, "modlines": 0, "user": "1.3.0"}, "text": "SRS Installation Instructions:\n\n***---------------------------------------------------------------***\n*** Note that this release of SRS requires z/OS 1.9 or higher.    ***\n*** For older releases of z/OS, please continue to use SRS 1.2.1. ***\n***---------------------------------------------------------------***\n\n1. SRS is distributed in two files: src.xmt (source code) and\n   linklib.xmt (execution library).  The files are in TSO TRANSMIT form\n   and must be unformatted with the TSO RECEIVE command to translate\n   them into useable PDSes.\n\n2. Binary Upload both files.\n   - If using IND$FILE or a similar file transfer program DO NOT\n     specify 'Convert to EBCDIC' or 'Delete CRLF'.\n   - If using FTP, specify BINARY transfer mode\n\n3. For each file, issue TSO command RECEIVE INDS(dsn), where dsn is the\n   data set name assigned to each uploaded file.  When message INMR906A\n   appears, enter DS(newdsn) to specify the desired names for the source\n   and execution libraries on your system.\n\n4. It is NOT necessary to APF authorize the execution library.\n\n5. Member SRS in the source library is a sample cataloged procedure that\n   can be used to invoke SRS.  Change the STEPLIB data set name to the\n   execution library name you've chosen for your system.  Make any other\n   updates to suit your installation standards and copy the proc to a\n   system procedure library or use a JCLLIB statement in SRS execution\n   JCL to point to the SRS source library.\n\nNOTES:\n\n- Review the $ABOUT member in the source library for information\n  on how to use SRS.\n\n- SRS 1.3.0 was assembled on z/OS 1.9.  The Linklib shipped should be\n  upward compatible with future releases.\n\n- If you install SRS, please send a note to\n  ddanner9@yahoo.com so I can add you to the distribution\n  list for future product upgrades.  Of course comments and/or\n  enhancement requests are also welcome!\n\n- SRS is available for free download at http://cbttape.org/\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$README": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00@\\x01\\x08&/\\x01\\x08&/\\tX\\x00\\x1d\\x00\\x10\\x00\\x00\\xc4\\xe6\\xc4@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2008-09-18T00:00:00", "modifydate": "2008-09-18T09:58:40", "lines": 29, "newlines": 16, "modlines": 0, "user": "DWD"}, "text": "This package contains TWO VERSIONS of the SYSOUT Retrieval\nServices (SRS) product:\n\n** SRS V1.3.0 is for z/OS 1.9 and higher *ONLY*     **  (member SRS130)\n** SRS V1.2.1 is for all supported releases of z/OS **  (member SRS121)\n\nLoad libraries for each of these versions, have been provided for\nyour convenience.\n\nExecutable code is in XMIT format.  To expand (under TSO):\n\n   RECEIVE INDS(this.dataset(SRS121))\n   RECEIVE INDS(this.dataset(SRS121L))\n\n             or\n\n   RECEIVE INDS(this.dataset(SRS130))\n   RECEIVE INDS(this.dataset(SRS130L))\n\nPlease select the installation directory appropriate for your\nrelease of z/OS and review the $INSTALL member in that directory\nfor installation instructions.\n\nAfter restoring the SRS source library, you can review the $NEWS\nmember to see what's new in this SRS release.\n\nThe $ABOUT member in this pds contains a brief overview of\nSRS and a list of supported options.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@ABOUT": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x11\\x05O\\x01\\x11\\x05O!W\\x00\\x86\\x00\\x86\\x00\\x00\\xc4\\xe6\\xc4@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2011-02-23T00:00:00", "modifydate": "2011-02-23T21:57:00", "lines": 134, "newlines": 134, "modlines": 0, "user": "DWD"}, "text": "SYSOUT Retrieval Services (SRS) is a product that retrieves data from\nthe JES spool using the SYSOUT Application Program Interface (SAPI).\nSRS supports a robust set of SYSOUT selection criteria (documented\nbelow) that can be specified by the user on the EXEC PARM= statement.\nUsing these criteria, SRS builds the necessary data structures and\ncalls SAPI asking for SYSOUT data that matches the selection request.\nIf JES finds and returns a spool data set, SRS copies the data to a\nfile specified by the user.\n\nFor more complex applications, SRS supports a user-written \"despooler\"\nroutine.  In this mode, SRS still processes selection criteria, and\nmakes the SAPI call.  But instead of writing the spool data to a file,\nSRS calls the despooler routine, one record at a time, to process the\ndata.  The SRSJWRAP program (which is included with SRS) is one example\nof a special despooler routine.\n\nSRS can be invoked from a batch job or started task as follows:\n\n//DESPOOL EXEC SRS,PARM='<options>'\n\n<options> specify a combination of SRS control options and SYSOUT\nselection criteria.  An explanation of each option follows.\nRequired characters are in uppercase while optional characters are\nin lowercase.  For example, the DDname keyword can be specified as\nDD=, DDN=, DDNA=, DDNAM=, or DDNAME=.\n\nThe following options specify what SYSOUT to select.\n\nQ=<c> -or-  The SYSOUT class\nCLASS=<c>   default: none\n            example: CLASS=A\n\nJobname=    The jobname (wild-card characters supported)\n <jobname>  default: none\n            example: JOBN=MYJOB\n\nJI=         The 8-character JES jobid\n <jobid> or default: none\nJOBId=      example: JOBI=J98754 or JI=JOB98754\n <jobid>\n\nDest=       The destination (or 'ALL' to select all destinations)\n <destid>   default: LOCAL\n            example: DEST=SRSDEST\n\nForms=      The forms ID (or 'ALL' to select all forms)\n <forms>    default: STD\n            example: FORMS=STDX\n\nWriter=     The writer name (or 'ALL' to select all writer names)\n <writer>   default: null (SYSOUT with NO writer name)\n            example: WRITER=SRSWTR\n\nSTATus=     The status of data sets to select\n <status>   'HELD', 'NONHELD', or 'ALL' can be specified\n            default: NONHELD\n\nDDname=     The DDNAME of the spool data set (wild-card\n <ddname>   characters supported)\n            default: none\n            example: DD=JES*\n\n\nThe following options control SRS processing.\n\nProgram=    The name of the special despooler program\n <pgnmane>  default: none (SRSGENER is used)\n\nPPARM=      Parameter list passed to the despooler program\n (parms)    or to the standard despooler routine.\n            Note: parms must be enclosed in parentheses.\n            default: none\n\nLIMit=      The maximum number of output groups to select (1-9999)\n <lim>      default: no limit\n\nWAIT=YES/NO Whether SRS is to wait for data sets or end when no\n            more spool data sets remain to select\n            default: NO if invoked in batch; YES if STC\n\nDISP=       The disposition of selected spool data sets\n <disp>     'KEEP' or 'DELETE' can be specified.\n            default: DELETE\n\nSEP=        Specifies whether separator records are to be written to\n <sep_opt>  the output data stream prior to the actual SYSOUT data.\n            Valid options are:\n\n            JOB - writes a record containing the job name and JOBID\n                  before each job's selected SYSOUT\n\n            OUTGRP - writes a record containing (in addition to the JOB\n              or     record) the SYSOUT class, destination, writer name,\n             YES     forms name, and output group name before each\n                     output group's selected SYSOUT\n\n            DATASET - writes a record containing (in addition to the\n              or      OUTGRP record) the DDNAME before each data set's\n              DS      selected SYSOUT\n\n            NO - no separator records are produced\n\n            Default: NO\n\nSEPId=      Specifies a one to eight byte character string that can be\n <sepid>    used to identify separator records.  <sepid> will appear\n            at the beginning of each separator.\n            default: *SRS>\n            example: SEPID=**SEP**\n\nOPTs=       Specifies a one or two character suffix that is appended\n <options>  to 'SRSOPT' to form the options module name.  The options\n            module must be accessible (STEPLIB, link list, etc.) and\n            must have been created using a current version of the\n            SRSOPTS macro.\n            default: S (uses module SRSOPTS)\n            example: OPTS=99 (uses module SRSOPT99)\n\nThe following options can be specified on the PPARM= keyword if\ndefault processing (i.e. no special despooler program) is in effect.\n\nOUTFILE=file Specifies the DDNAME of the data set to write spool data\n             records to\n             default: SYSUT2\n\nDEFER_OPEN=YES/NO Specifies whether the OUTFILE= file should be opened\n                  at SRS initialization or after the first record is\n                  despooled.  If 'YES' is specified and the OUTFILE=\n                  file is a new data set that does not specify LRECL\n                  information, SRS will use the record length of the\n                  first record despooled as the LRECL.  If 'NO', LRECL\n                  must be specified on the OUTFILE= file or a S013-34\n                  abend will occur.\n                  default: YES\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE790": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04R\\x005\\x01\\x11\\x05O\\x01\\x11\\x05O\"(\\x00+\\x00+\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf2@@@'", "ispf": {"version": "04.82", "flags": 0, "createdate": "2011-02-23T00:00:00", "modifydate": "2011-02-23T22:28:35", "lines": 43, "newlines": 43, "modlines": 0, "user": "CBT-482"}, "text": "//***FILE 790 is from Dave Danner (by way of Ken Tomiak) and        *   FILE 790\n//*           contains his SRS (Sysout Retrieval Services) package. *   FILE 790\n//*                                                                 *   FILE 790\n//*           email:  ddanner9@yahoo.com                            *   FILE 790\n//*                                                                 *   FILE 790\n//*    About SRS (SYSOUT Retrieval Services)                        *   FILE 790\n//*    ----- ---  ------ --------- --------                         *   FILE 790\n//*                                                                 *   FILE 790\n//*    SYSOUT Retrieval Services (SRS) is a product that            *   FILE 790\n//*    retrieves data from the JES spool using the SYSOUT           *   FILE 790\n//*    Application Program Interface (SAPI).  SRS supports a        *   FILE 790\n//*    robust set of SYSOUT selection criteria (documented in       *   FILE 790\n//*    the $ABOUT member of this pds) that can be specified         *   FILE 790\n//*    by the user on the EXEC PARM= statement.  Using these        *   FILE 790\n//*    criteria, SRS builds the necessary data structures and       *   FILE 790\n//*    calls SAPI asking for SYSOUT data that matches the           *   FILE 790\n//*    selection request.  If JES finds and returns a spool         *   FILE 790\n//*    data set, SRS copies the data to a file specified by         *   FILE 790\n//*    the user.                                                    *   FILE 790\n//*                                                                 *   FILE 790\n//*    For more complex applications, SRS supports a                *   FILE 790\n//*    user-written \"despooler\" routine.  In this mode, SRS         *   FILE 790\n//*    still processes selection criteria, and makes the SAPI       *   FILE 790\n//*    call.  But instead of writing the spool data to a file,      *   FILE 790\n//*    SRS calls the despooler routine, one record at a time,       *   FILE 790\n//*    to process the data.  The SRSJWRAP program (which is         *   FILE 790\n//*    included with SRS) is one example of a special               *   FILE 790\n//*    despooler routine.                                           *   FILE 790\n//*                                                                 *   FILE 790\n//*    SRS can be invoked from a batch job or started task as       *   FILE 790\n//*    follows:                                                     *   FILE 790\n//*                                                                 *   FILE 790\n//*    //DESPOOL EXEC SRS,PARM='<options>'                          *   FILE 790\n//*                                                                 *   FILE 790\n//*    <options> specify a combination of SRS control options       *   FILE 790\n//*    and SYSOUT selection criteria.  An explanation of each       *   FILE 790\n//*    option may be found in the $ABOUT member of this pds.        *   FILE 790\n//*                                                                 *   FILE 790\n//*    Required characters are in uppercase while optional          *   FILE 790\n//*    characters are in lowercase.  For example, the DDname        *   FILE 790\n//*    keyword can be specified as DD=, DDN=, DDNA=, DDNAM=,        *   FILE 790\n//*    or DDNAME=.                                                  *   FILE 790\n//*                                                                 *   FILE 790\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SRS121": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x08&/\\x01\\x08&/\\tG\\x11\\x15\\x11\\x15\\x00\\x00\\xc4\\xe6\\xc4@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2008-09-18T00:00:00", "modifydate": "2008-09-18T09:47:59", "lines": 4373, "newlines": 4373, "modlines": 0, "user": "DWD"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SRS121L": {"ttr": 2312, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x16\\x01\\x08&/\\x01\\x08&/\\tE\\x01\\x01\\x01\\x01\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd3\\xc9\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2008-09-18T00:00:00", "modifydate": "2008-09-18T09:45:16", "lines": 257, "newlines": 257, "modlines": 0, "user": "LOADLIB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SRS130": {"ttr": 2563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x11\\x05O\\x01\\x11\\x05O!U\\x0f\\xe3\\x0f\\xe3\\x00\\x00\\xf1K\\xf3K\\xf0@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2011-02-23T00:00:00", "modifydate": "2011-02-23T21:55:00", "lines": 4067, "newlines": 4067, "modlines": 0, "user": "1.3.0"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SRS130L": {"ttr": 4104, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x11\\x05O\\x01\\x11\\x05O!S\\x00\\xf7\\x00\\xf7\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd3\\xc9\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2011-02-23T00:00:00", "modifydate": "2011-02-23T21:53:00", "lines": 247, "newlines": 247, "modlines": 0, "user": "LOADLIB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT790/FILE790.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT790", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}