{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011351000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE159.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE159.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x04'", "DS1TRBAL": "b'\\xa6j'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x18\\x00\\x04\\x01\\x18\\x00\\x07\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"UCBFIND": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET CBT1500    AT LEVEL 001 AS OF 01/09/86\nUCBFIND  CSECT                                                          00001\nUCBFIND  AMODE 31                                                       00002\nUCBFIND  RMODE ANY                                                      00003\n*********************************************************************   00004\n*********************************************************************   00005\n**-- MAINTENANCE:                                                  **   00006\n**07/30/84 - COMMENT OUT LOAD OF XDC TO REDUCE ACTIVITY TO LNKLST  **   00007\n**                                                                 **   00008\n**01/09/86 - FREE SUBPOOL 230 KEY 1 STORAGE FROM IEFAB4UV (VS.     **   00009\n**           LETTING TASK TERMINATION FREE IT).  UPDATED COMMENTS  **   00010\n**           ON \"NOT ENOUGH STORAGE FOR ALL UCB'S\" PROCESSING, AND **   00011\n**           REQUIREMENTS OF THIS MODULE BEING LINKED AS RE-ENTERANT*   00012\n**           (THE FREEMAIN IN KEY1 WILL NOT WORK UNLESS IT IS RENT)**   00013\n*********************************************************************   00014\n*********************************************************************   00015\n**                                                                 **   00016\n**        UCBFIND IS A SUBROUTINE FOR USE IN SP3 OR X-A SYSTEM FOR **   00017\n**  UCB LOOK UP FUNCTIONS. THE CHARTS BELOW DESCRIBES THE FUNCTIONS**   00018\n**-----------------------------------------------------------------**   00019\n**-----------------------------------------------------------------**   00020\n**-  COMMENT OUT THE #DIE MACRO (USED FOR CSR'S DBC TESTING OF ----**   00021\n**-- AUTHORIZED CODE) OR PRIOR TO PRODUCTION INSTALL, ZAP THE CODE:**   00022\n**-- 0328 00DEAD                        NO-OPS 070007  ------------**   00023\n**-- 032B 02     >>>>>>>TO>>>>>>>>>>>>>   \"    00      ------------**   00024\n**---032C F140                            \"    0700    ------------**   00025\n**-----------------------------------------------------------------**   00026\n**FUNC|       INPUT DATA                 |  RETURNED OUTPUT DATA   **   00027\n**CODE|                                  |                         **   00028\n**----|----------------------------------|-------------------------**   00029\n** 00 |GENERIC OR ESOTERIC NAME          |  ALL MATCHING UCBS      **   00030\n** 01 |DEV CLASS+TYPE FOR GENERIC DEVICE |  ALL MATCHING UCBS      **   00031\n** 01 |DEV CLASS+TYPE FOR ESOTERIC DEVICE|ALL MATCHING UCBS X-A ONLY*   00032\n** 02 |1 COMPLETE VOL-SER                |  CURRENTLY NOT SUPPORTED**   00033\n** 03 |FIRST 3 CHARS OF VOL-SER          |  CURRENTLY NOT SUPPORTED**   00034\n**-----------------------------------------------------------------**   00035\n** 00   DEVICE SEARCH VIA GENERIC NAME:******************************   00036\n**          THE EDT IS SEARCHED FOR GENERIC NAME.  IF MATCH FOUND, **   00037\n**  THE COMPLETE MASK (DEVICE CLASS AND DEVICE TYPE) IS RETRIEVED  **   00038\n**  FROM THE EDT.  THE NAME IS GENERIC IF THE DEVICE TYPE NOT 00.  **   00039\n**  ALL UCBS OF 'THAT DEVICE CLASS' ARE REQUESTED FROM THE SCAN    **   00040\n**  SERVICE ROUTINE.  EACH RETRIEVED UCB IS COMPARED WITH THE HELD **   00041\n**  DEVICE TYPE. UCB ADDRESSES OF ALL MATCHES ARE STORED IN THE    **   00042\n**  CALLERS STORAGE AREA WITH A COUNT OF THE NUMBER FOUND.         **   00043\n**                                                                 **   00044\n** 00   DEVICE SEARCH VIA ESOTERIC NAME:*****************************   00045\n**          THE EDT IS SEARCHED FOR ESOTERIC NAME. IF MATCH FOUND, **   00046\n**  THE COMPLETE MASK (DEVICE CLASS AND DEVICE TYPE) IS RETRIEVED  **   00047\n**  FROM THE EDT.  THE NAME IS ESOTERIC IF THE DEVICE TYPE = 00.   **   00048\n**  THE SCAN SERVICE ROUTINE CAN NOT BE USED, IEFAB4UV IS UTILIZED **   00049\n**  (PROTECT KEY 1)                                                **   00050\n**                                                                 **   00051\n** 01   DEVICE SEARCH VIA DEVICE CLASS + TYPE FOR GENERIC NAME:******   00052\n**  THE DEVICE IS GENERIC IF THE DEVICE TYPE NOT 00.  ALL UCBS OF  **   00053\n**  'THAT DEVICE CLASS' ARE REQUESTED FROM THE SCAN SERVICE ROUTINE**   00054\n**  EACH RETRIEVED UCB IS COMPARED WITH THE HELD DEVICE TYPE. ALL  **   00055\n**  MATCHES ARE STORED IN THE CALLER'S STORAGE AREA WITH A COUNT.  **   00056\n**                                                                      00057\n** 01   DEVICE SEARCH VIA DEVICE CLASS + TYPE FOR ESOTERIC NAME:*****   00058\n**  SUPPORTED ONLY UNDER X-A:                                           00059\n**  THE DEVICE IS ESOTERIC IF THE DEVICE TYPE = 00.  IEFAB4UV IS   **   00060\n**  INVOKED WITH THE UCBTYP AS INPUT REQUESTING A UNIT NAME AS     **   00061\n**  OUTPUT (THIS FUNCTION ONLY WORKS UNDER X-A).  IEFAB4UV IS THEN **   00062\n**  REINVOKED WITH THE UNIT NAME AS INPUT. OUTPUT CONSISTS OF THE  **   00063\n**  UCBS AND A COUNT OF THEM                                       **   00064\n**                                                                 **   00065\n**  **** THE FOLLOWING IS ONLY FOR SCAN SERVICE ROUTINE *****      **   00066\n**  IF ALL THE UCB ADDRESSES DO NOT FIT INTO THE OUTPUT AREA, THE  **   00067\n**  CALLER MUST RE-INVOKE THE SUBROUTINE WITH THE SAME REQUEST,    **   00068\n**  ''WITHOUT'' CLEARING OUT THE 100 BYTE WORK AREA (INFO IN THAT  **   00069\n**  AREA TELLS THE SUBROUTINE WHERE TO CONTINUE PROCESSING UCBS.   **   00070\n**  **THIS CODE IS NOT COMPLETED, AND ONLY A FUTURE SUGGESTION**   **   00071\n*********************************************************************   00072\n*********************************************************************   00073\n**                                                                 **   00074\n**    CMD BUFFER (INPUT) POINTED TO BY CPPL:                       **   00075\n**                                                                 **   00076\n**  ____________________________________________                   **   00077\n**  |   XX    |XXXXXX|CCCCCCCC|    XXXXXXXX    |                   **   00078\n**  |________________|________|________________|                   **   00079\n**  |FUNCTION |(NOT  | NAME/  |  ADDRESS OF A  |                   **   00080\n**  |  CODE   | USED)| DEVICE | 2K OUTPUT AREA |                   **   00081\n**  |         |      |  TYPE  |                |                   **   00082\n**  |_________|______|________|________________|                   **   00083\n**                                                                 **   00084\n** F  -XX FUNCTION BITS -                                          **   00085\n**  00: GENERIC/ESOTERIC NAME BEING PASSED FOR UCBS                **   00086\n**  01: UNITTYP (3010200E) IS BEING PASSED FOR MATCHING UCBS       **   00087\n**              (00012000) ESOTERIC DEVICES **WORKS ONLY FOR X-A   **   00088\n**  THE FOLLOWING FUNCTIONS ARE NOT SUPPORTED:                     **   00089\n**  02: 1 COMPLETE VOL-SER IS BEING PASSED FOR MATCHING UCB        **   00090\n**  03: FIRST 3 CHARS OF VOL-SER BEING PASSED FOR MATCHING UCBS    **   00091\n**    -XXXXXX NOT UTILIZED CURRENTLY                               **   00092\n** CL8-GENERIC/ESOTERIC/VOL-SER NAME                               **   00093\n**    OR:                                                          **   00094\n**    -XX DEVICE CLASS                                             **   00095\n**    -XXXXXX NOT UTILIZED FOR FUNCTION=01                         **   00096\n** F  -AN ADDRESS OF A 2K STORAGE AREA WHICH THE CALLER IS         **   00097\n**     RESPONSIBLE TO GET/FREEMAIN. IT WILL CONTAIN ALL THE OUTPUT **   00098\n**     FROM THE SUBROUTINE. THE BREAKDOWN OF ITS CONTENTS IS:      **   00099\n**     -100 BYTE WORK AREA WHICH MUST BE INITIALIZED TO BINARY     **   00100\n**         ZEROS 'ONLY' ON THE FIRST CALL TO THIS SUBROUTINE FOR A **   00101\n**         SPECIFIC FUNCTION. FOR SUBSEQUENT ACCESSES 'OF SAME'    **   00102\n**         FUNCTION, DO 'NOT' TOUCH THE CONTENTS OF THIS WORK AREA **   00103\n**     -4 BYTES (1 FULLWORD) FOR RETURNED COUNT OF # OF UCBS BEING **   00104\n**          RETURNED. THIS SHOULD BE INITIALIZED TO ZEROS          **   00105\n**     -2800 BYTES (700 FULLWORDS) FOR RETURNED UCB ADDRESSES. THIS**   00106\n**         SHOULD BE INITIALIZED TO ZEROS                          **   00107\n*********************************************************************   00108\n**  THIS MODULE \"MUST\" BE LINKED RE-ENTERANT OR THE FREEMAIN WITHIN**   00109\n**  KEY=1 MODE WILL NOT EXECUTE (OC4 DUE TO FETCH LOADING A NONRENT**   00110\n**  MODULE INTO A DIFFERENT SUBPOOL THAN A RENT MODULE).  IF XDC   **   00111\n**  IS USED TO TEST, THE MODULE \"MUST\" BE MARKED NON-RENT. YOU WILL**   00112\n**  THEREFORE HAVE TO SKIP OVER THE KEY=1 FREEMAIN IN EODAD ROUTINE.*   00113\n*********************************************************************   00114\n**  RETURN CODE SETTINGS:                                          **   00115\n**  R15 = 00 - ALL UCBS RETURNED                                   **   00116\n**  R15 = 04 - NOT ALL UCBS RETURNED, MUST RETURN FOR THE REST     **   00117\n**  R15 = 08 - NO UCBS FOUND                                       **   00118\n**  R15 = 16 - FUNCTION NOT SUPPORTED                              **   00119\n**  R15 = 20 - STORAGE NOT AVAIL TO IEFAB4UV FOR UCB LIST          **   00120\n**  R15 = 24 - DEVICE TYPE NOT DEFINED TO SYSTEM                   **   00121\n**  R15 = 28 - NOT ALL UCBS RETURNED, RECODE FOR MORE THAT 700 UCBS**   00122\n**  R15 = 99 - PROBLEM - ABEND PROGRAM                             **   00123\n*********************************************************************   00124\n*********************************************************************   00125\nR0       EQU   0                                                        00126\nR1       EQU   1    WORK REG (PTR TO CPPL, UCB ADDR, ETC.)              00127\nR2       EQU   2    DSECT FOR INPUT PARM + 2K OUTPUT WORK AREA          00128\nR3       EQU   3    PTR TO UCB SLOT IN PARM AREA                        00129\nR4       EQU   4    PTR TO CVT                                          00130\nR5       EQU   5    PTR TO JESCT, PTR TO EDT                            00131\nR6       EQU   6    # OF UNIT NAMES IN EDT                              00132\nR7       EQU   7    LENGTH OF EDT ENTRY                                 00133\nR8       EQU   8    PTR TO EDT ENTRY (GENERIC NAME)                     00134\nR9       EQU   9                                                        00135\nR10      EQU   10   1ST BASE REG                                        00136\nR11      EQU   11   2ND BASE REG                                        00137\nR12      EQU   12   HOLD RETURN CODE                                    00138\nR13      EQU   13   GETMAIN AREA FOR RE-ENT CODING                      00139\nR14      EQU   14   BRANCH REG                                          00140\nR15      EQU   15                                                       00141\n*                                                                       00142\nPROLOG   EQU   *                                                        00143\n         USING *,R15                                                    00144\n         BC    15,PSTART                                                00145\n         DC    CL8'UCBFIND'       MODULE NAME                           00146\n         DC    CL8'&SYSDATE'      DATE MODULE COMPILED                  00147\n         DC    CL8'&SYSTIME'      TIME MODULE COMPILED                  00148\nPSTART   STM   R14,R12,12(R13)                                          00149\n         LR    R10,R15            LOAD REGS                             00150\n         DROP  R15                                                      00151\n         USING UCBFIND,R10,R11    BASE REGS                             00152\n         LA    R11,4095(R10)      INITIALIZE 2ND BASE REG               00153\n         LA    R11,1(R11)         MAKE IT AN EVEN 4096                  00154\n         LR    R2,R1              SAVE PTR TO PARM                      00155\n         GETMAIN R,LV=LDYNAMIC    LEN OF DYNAMIC AREA                   00156\n         LR    R3,R1                                                    00157\n         ST    R13,4(R3)          SAVE HSA IN LSA                       00158\n         ST    R3,8(R13)          SAVE LSA IN HSA                       00159\n         L     R1,24(R13)         RESTORE REG ONE                       00160\n         LR    R13,R3             SET UP NEW SAVE AREA                  00161\n         USING DYNMAREA,R13                                             00162\n         SR    R12,R12            INITIALIZE RC REG                     00163\n         MVC   WTOMSG(92),WTOPATRN CLEAR WTO MSGAREA + SET CNTL BITS    00164\n         L     R4,CVTPTR          GET CVT ADDR                          00165\n         USING CVTMAP,R4          ADDR TO CVT                           00166\n         L     R5,CVTJESCT        JES CONTROL TABLE                     00167\n         L     R1,CVTUCBSC        LOAD ADDR OF UCB SCAN SERV RTN        00168\n         ST    R1,SSADDR          SAVE IT FOR LATER                     00169\n         L     R1,0(R4)           OLD-NEW TCB PTR                       00170\n         L     R1,4(R1)           OLD TCB PTR                           00171\n         ST    R1,TCBHOLD         HOLD ADDR OF CURRENT TCB              00172\n         MVI   SYSTEMSW,X'00'     INITIALIZE SW FOR SYSTEM TYPE         00173\n         TM    CVTDCB,CVTMVSE     IF =1 IT IS X-A                       00174\n         BC    8,MVS              IT IS MVS                             00175\nXA       MVI   SYSTEMSW,X'11'     TURN ON THE SW TO SAY IT IS XA        00176\nMVS      EQU   *                                                        00177\n         DROP  R4                                                       00178\n******* GET PARM INFO:                                                  00179\nFUNDUCBS LA    R4,0(R2)           GET PAST THE PARM LENGTH              00180\n         USING PARMAREA,R4                                              00181\n         L     R2,PARM2K          ADDRESS OF THE 2K WORK (OUTPUT) AREA  00182\n         USING OUT2K,R2           ADDRESS TO 2K AREA                    00183\n         MVC   HOLDNAME,=CL8' '   CLEAR OUT HOLD AREA                   00184\n         MVC   HOLDMASK,=XL4'00'  CLEAR OUT HOLD AREA                   00185\nTESTFUNC CLI   PARMFUNC,X'00'     X'00' = ESOTERIC/GENERIC NAME INPUT   00186\n         BC    8,INNAME           FIND UCBS VIA ESOTERIC/GENERIC INPUT  00187\n         CLI   PARMFUNC,X'01'     X'01' = DEVICE CLASS GIVEN AS INPUT   00188\n         BC    8,INDEV            FIND UCBS = GIVEN DEVICE CLASS        00189\n         CLI   PARMFUNC,X'02'     X'02' = VOL-SER GIVEN AS INPUT        00190\n         BC    8,GIVE1VOL         FIND 1 UCB = GIVEN VOL-SER            00191\n         CLI   PARMFUNC,X'03'     X'03' = FIRST 3 CHARS OF VOL-SER      00192\n         BC    8,GIVEVOLS         FIND ALL UCB MATCHING FIRST 3 CHARS   00193\n         MVC   WTOMSG+4(80),MSG01 FUNCTION NOT SUPPORTED                00194\n         BAL   R14,WTOIT          WRITE MSG                             00195\n         LA    R12,22             R12=16 FUNCTION NOT SUPPORTED         00196\n         BC    15,ENDIT           EOJ                                   00197\n*********************************************************************   00198\n*********PROCESSING ROUTINE WHEN INPUT IS ESOTERIC/GENERIC NAME         00199\n*********************************************************************   00200\nINNAME   MVC   HOLDNAME,PARMNAME  MOVE IN ESOTERIC/GENERIC NAME         00201\n         BAL   R14,EDTRTN         GO TO EDT RTN TO GET DEV CLASS + TYPE 00202\n         LTR   R12,R12            RC=0 ?                                00203\n         BNZ   NONAME0            NO, NAMES NOT FOUND SAY IT + EOJ      00204\n         CLI   HOLDDEVT,X'00'     DEV TYPE=00 (ESOTERIC NAME)?          00205\n         BC    6,INNAMESR         NO, GENERIC, BRANCH TO SCAN SERV RTN  00206\n         MVC   HOLDMASK,=XL4'00'  CLEAR OUT DEV MASK, NOT LONGER NEEDED 00207\n         MVC   HOLDFLAG,FLGNAME   IEFAB4UV FLAGS FOR UNIT NAME          00208\n         BAL   R14,IEFAB4UV       IEFAB4UV: ESOTERIC NAME IN-UCBS OUT   00209\n         LTR   R12,R12            WERE UCBS FOUND?                      00210\n         BC    8,INNAMEUC         YES, GO BRANCH TO UCB MOVE RTN NOW    00211\n         CH    R12,=H'4'          RETURN CODE=4?                        00212\n         BC    8,NONAME           NAME NOT FOUND-RETURN WITH RC=8       00213\n         CH    R12,=H'16'         RETURN CODE=16?                       00214\n         BC    8,NOIEFSTO         NO STORG AVAIL FOR IEFAB4UV UCB LIST  00215\n         LA    R12,153            R12=99 LOAD THE ABEND RETURN CODE     00216\n         BC    15,ABENDIT         ABEND ALL OTHER RETURN CODES          00217\nINNAMEUC BAL   R14,IEFUCBS        GO MOVE THE UCBS TO CALLERS STORAGE   00218\n         BC    15,EODAD           EOJ                                   00219\nINNAMESR BAL   R14,SCANSERV       TO SCAN SERV RTN + DO GENERIC SEARCH  00220\n         BC    15,ENDIT           EOJ                                   00221\n*********************************************************************   00222\n*********END OF ROUTINE FOR ESOTERIC/GENERIC INPUT                      00223\n*********************************************************************   00224\n*                                                                       00225\n*********************************************************************   00226\n*********PROCESSING ROUTINE WHEN INPUT IS  DEV TYPE + CLASS:            00227\n*********************************************************************   00228\nINDEV    MVC   HOLDMASK,PARMDEV   MOVE IN 4 BYTE UCBTYP                 00229\n         CLI   HOLDDEVT,X'00'     IS DEVICE TYPE=00 (ESOTERIC NAME)?    00230\n         BC    6,INDEVSR          NO, BRANCH TO BRANCH SERV RTN         00231\n**THE FOLLOWING IS ESOTERIC SEARCH **                                   00232\n**THE FOLLOWING FUNCTION ONLY SUPPORTED UNDER X-A. CHECK ENVIRONMENT.   00233\n         TM    SYSTEMSW,X'11'     IS THIS X-A                           00234\n         BC    1,INDEVXA          YES, DO THE X-A PROCESSING            00235\n         MVC   WTOMSG+4(80),MSG12 ONLY SUPPORTED UNDER X-A              00236\n         BAL   R14,WTOIT          WRITE MSG                             00237\n         LA    R12,22             R12=16 FUNCTION NOT SUPPORTED         00238\n         BC    15,ENDIT           EOJ                                   00239\nINDEVXA  MVC   HOLDFLAG,FLGDEV    IEFAB4UV FLAGS FOR UCBTYP             00240\n         BAL   R14,IEFAB4UV       UCBTYP IN - UNIT NAME OUT             00241\n         LTR   R12,R12            WAS A UNIT NAME FOUND?                00242\n         BC    8,INDEVIEF         YES, LINK AGAIN TO GET UCBS THIS TIME 00243\n         CH    R12,=H'4'          NOT FOUND                             00244\n         BC    8,NONAME           SEND MSG NAME NOT FOUND               00245\n         CH    R12,=H'24'         ENVIRONMENT IS INCORRECT              00246\n         BC    8,NOEDTPTR         SAY NO EDT PTR IN JESCT               00247\n         CH    R12,=H'28'         IEFEB4UV DOES NOT SUPPORT FUNCTION    00248\n         BC    8,NOTSUP           SAY NOT SUPPORTED FUNCTION            00249\n         LA    R12,153            R12=99                                00250\n         BC    15,ABENDIT         EOJ                                   00251\n* MOVE UNIT-NAME INTO HOLDNAME FOR NEXT IEFAB4UV LINK:                  00252\nINDEVIEF MVC   HOLDNAME,IEFOUTNM  MOVE NAME/LOOK-UP-VALUE FOR NEXT BAL  00253\n         MVC   HOLDMASK,=XL4'00'  CLEAR DEV CLASS+TYPE/NO LONGER NEEDED 00254\n         MVC   HOLDFLAG,FLGNAME   IEFAB4UV FLAGS FOR UNIT NAME          00255\n         BAL   R14,IEFAB4UV       IEFAB4UV: UNIT NAME IN - UCBS OUT     00256\n         LTR   R12,R12            WERE UCBS FOUND?                      00257\n         BC    8,INDEVUC          YES, GO BRANCH TO UCB MOVE RTN NOW    00258\n         CH    R12,=H'4'          RETURN CODE=4?                        00259\n         BC    8,NONAME           NAME NOT FOUND-RETURN WITH RC=8       00260\n         CH    R12,=H'16'         RETURN CODE=16?                       00261\n         BC    8,NOIEFSTO         NO STORG AVAIL FOR IEFAB4UV UCB LIST  00262\n         BC    15,ABENDIT      ???ABEND ALL OTHER RETURN CODES          00263\nINDEVUC  BAL   R14,IEFUCBS        GO MOVE THE UCBS TO CALLERS STORAGE   00264\n         BC    15,EODAD           EOJ                                   00265\nINDEVSR  BAL   R14,SCANSERV       TO SCAN SERV RTN + DO GENERIC SEARCH  00266\n         BC    15,ENDIT           EOJ                                   00267\n*********************************************************************   00268\n*********END OF ROUTINE FOR DEV TYPE + CLASS INPUT                      00269\n*********************************************************************   00270\n*                                                                       00271\n*********************************************************************   00272\n*****     EDT (ELIGIBLE DEVICE TABLE) SUBROUTINE     ****************   00273\n**********INPUT = ESOTERIC/GENERIC NAME, OUTPUT = DEVICE CLASS+TYPE     00274\n*********************************************************************   00275\nEDTRTN   STM   R14,R9,SUBSAVE     SAVE R0-R9,R14-R15 FOR SUBROUTINE     00276\n         LA    R12,0              ZERO OUT RETURN CODE REG              00277\n         USING JESCT,R5                                                 00278\n         L     R5,JESEDT          PTR TO EDT                            00279\n         L     R5,EDTLUVSP(,R5)   LOOK-UP SECTION                       00280\n         L     R6,LUVENTNO(,R5)   # OF UNIT NAMES                       00281\n         L     R7,LUVENTLN(,R5)   LENGTH OF ENTRY                       00282\n         LA    R8,LUVENTRY(,R5)   FIRST ENTRY                           00283\n         DROP  R5                                                       00284\nLOOP     CLC   HOLDNAME,LUVUNAME(R8) UNIT FOUND?                        00285\n         BE    EDTFOUND                                                 00286\n         LA    R8,0(R7,R8)        GET NEXT ENTRY                        00287\n         BCT   R6,LOOP            CONTINUE                              00288\n         LA    R12,8              SET RC                                00289\n         BC    15,EDTEND          END THE SUBROUTINE                    00290\nEDTFOUND MVC   HOLDMASK,LUVVALUE(R8) SAVE UCBTYP TBYT1,2,DEVCLASS,+TYPE 00291\nEDTEND   STM   R14,R9,SUBSAVE     RESTORE REGS                          00292\n         BCR   15,R14             RETURN TO CALLER                      00293\n*********************************************************************** 00294\n*****     END OF EDT SUBROUTINE     *********************************** 00295\n*********************************************************************** 00296\n*                                                                       00297\n*********************************************************************   00298\n*****     SCAN SERVICE ROUTINE SUBROUTINE     ***********************   00299\n*****INPUT = GENERIC NAME, OUTPUT = UCBS. (IEFAB4UV CAN ALSO BE USED)   00300\n*********************************************************************   00301\n* NOW THAT YOU HAVE THE DEVICE MASK (DEVICE CLASS AND UNIT TYPE)        00302\n* GO TO THE SCAN SERVICE ROUTINE TO SEARCH UCB'S FOR THAT CLASS.        00303\n* WHEN RETRIEVED, COMPARE THE UNIT TYPE.  IF A MATCH, ADD THE UCB       00304\n* ADDRESS TO THE PARM (UCB SLOTS), THEN CONTINUE SEARCHING              00305\n*********************************************************************   00306\nSCANSERV STM   R14,R9,SUBSAVE     HOLD THESE REGS SO THEY CAN BE REUSED 00307\n         LA    R12,0              CLEAR OUT RETURN REG                  00308\n         LA    R1,OUTWORK                                               00309\n         ST    R1,SSPRMWA         STORE ADDR IN SSPRMLST                00310\n         LA    R1,SSDEVC          ADDR OF DEVICE CLASS                  00311\n         ST    R1,SSPRMDEV        STORE ADDR IN SSPRMLST                00312\n         MVC   SSDEVC,HOLDCLAS    SEARCH FOR CORRECT CLASS OF UCBS ONLY 00313\n         LA    R1,SSUCB           ADDR OF RETURNED UCB                  00314\n         ST    R1,SSPRMUCB        STORE UCB IN SSPRMLST                 00315\n         OI    SSPRMUCB,X'80'     END OF SSPRMLST                       00316\n         LA    R3,OUTUCBS         LOAD ADDR OF FIRST UCB SLOT           00317\n         SR    R5,R5              INITIALIZE CNTR FOR # OF UCBS FOUND   00318\nSCANLOOP LA    R1,SSPRMLST                                              00319\n         L     R15,SSADDR                                               00320\n         BALR  R14,R15            GO TO SCAN SERVICE INTERFACE          00321\n         LTR   R15,R15            WAS A UCB RETURNED?                   00322\n         BNZ   SCANEOL            NO, END THE SCAN LOOP (R12=0)         00323\n         L     R1,SSUCB           GET UCB ADDRESS THAT THE SCAN         00324\n         USING UCBOB,R1           ADDRESSABILITY TO UCB                 00325\n         CLC   UCBTBYT3(2),HOLDDEV   IS CLASS + DEVICE TYPE EQUAL?      00326\n         BC    7,SCANLOOP         NO, LOOP WITH SCAN SERVICE AGAIN      00327\n         MVC   0(4,R3),SSUCB      MOVE IT INTO PARM UCB SLOT            00328\n         AH    R5,=H'1'           ADD 1 TO UCB COUNTER                  00329\n         CH    R5,=H'700'         COMPARE TO THE TOTAL UCBS IT CAN HOLD 00330\n         BC    4,INCSLOT          THERE IS ROOM LEFT                    00331\n         MVC   WTOMSG+4(80),MSG02 NOT ENOUGH PARM STORAGE               00332\n         BAL   R14,WTOIT          WRITE MSG                             00333\n         LA    R12,40             SET RC=28 NOT ALL UCBS RETURNED       00334\n         BC    15,SCANEOL         EOJ                                   00335\nINCSLOT  LA    R3,4(0,R3)         MOVE TO NEXT SLOT                     00336\n         BC    15,SCANLOOP        GO BACK TO SCAN SERVICE AGAIN         00337\nSCANEOL  ST    R5,OUTCNT          MOVE THE UCB COUNT TO OUTPUT AREA     00338\n         LTR   R5,R5              WERE THERE UCBS FOUND?                00339\n         BC    2,SCANEND          YES, GO END IT                        00340\n         MVC   WTOMSG+4(80),MSG05       NO UCBS FOUND                   00341\n         BAL   R14,WTOIT          WRITE MSG                             00342\n         LA    R12,8              RC = NO UCBS FOUND                    00343\n         BC    15,ENDIT           GO END IT                             00344\nSCANEND  LM    R14,R9,SUBSAVE     RESTORE REGS                          00345\n         BCR   15,R14             RETURN TO CALLER                      00346\n**********************************************************************  00347\n*****     END OF SCAN SERVICE ROUTINE SUBROUTINE     *****************  00348\n**********************************************************************  00349\n*                                                                       00350\n*********************************************************************** 00351\n*****     IEFAB4UV SUBROUTINE     ************************************* 00352\n**1) INPUT=ESOTERIC UNIT NAMES, OUTPUT = UCBS                           00353\n**2) INPUT=DEVICE TYPE (UCBTYP), OUTPUT = UNIT NAME                     00354\n**   R2 = PTR TO OUT2.8K                                                00355\n**   MOVE TO KEY=1 STORAGE FLAGS + PROPER INFO + LINK TO IEFAB4UV       00356\n*********************************************************************** 00357\n*                                                                       00358\nIEFAB4UV EQU  *                                                         00359\nESOTERIC STM   R14,R9,SUBSAVE     HOLD THESE REGS SO THEY CAN BE REUSED 00360\n         LA    R12,0              CLEAR OUT RETURN REG                  00361\n         L    R6,TCBHOLD          HOLD ADDR OF TCB                      00362\n         USING TCB,R6                                                   00363\n******* MUST BE SUPERVISOR MODE TO GETMAIN KEY1 SP:                     00364\n         SR   R1,R1                                                     00365\n         SVC  254                                                       00366\n         L    R14,SPNO236              SUBPOOL 236 (KEY 1)              00367\n         MODESET MODE=SUP                                               00368\n         GETMAIN R,LV=LKEY1SP,SP=(R14) FOR KEY SUBPOOL STORAGE          00369\n******* MUST BE KEY0 (OR KEY1) TO MOVE INTO SP236 (WRITE PROTECTED):    00370\n         MODESET EXTKEY=ZERO                                            00371\n         ST   R1,KEY1ADDR         SAVE KEY1 GETMAIN'D AREA PTR          00372\n         LR   R7,R1              PTR TO KEY1 STORAGE                    00373\n*****************************************************************DBC    00374\n** TO USE CSR'S DEBUGGING CONTROLLER (DBC) USE THE FOLLOWING:  **DBC    00375\n*****************************************************************DBC    00376\n***DO ESTAE AFTER MODESET=SUP TO GET ESTAE IN CORRECT MODE:      DBC    00377\n*        LOAD  EP=XDC                                            DBC    00378\n*        LR    R14,R0                                            DBC    00379\n*        MVC   ESTAREA(DBCMFLN),DBCMFL                           DBC    00380\n*        ESTAE (R14),MF=(E,ESTAREA)                              DBC    00381\n*****THE FOLLOWING MACRO CAUSES AN ABEND + YOU ARE PUT INTO DBC  DBC    00382\n*****CONVERT TO NO-OPS PRIOR TO RELEASING INTO PRODUCTION        DBC    00383\n*        #DIE                                                           00384\n*****************************************************************DBC    00385\n******* SET UP PARAMETER LIST FOR KEY 1 STORAGE FOR IEFAB4UV:           00386\n         USING KEY1SP,R7         ADDR TO DSECT                          00387\n         LA   R1,UNITABLE                                               00388\n         ST   R1,UTBLPTR                                                00389\n         LA   R1,FLAGS                                                  00390\n         ST   R1,FLAGPTR                                                00391\n         LA   R1,ATTRAREA                                               00392\n         ST   R1,ATTRPTR                                                00393\n         MVC  UNAME(8),HOLDNAME  MOVE IN UNIT NAME IF GIVEN             00394\n         MVC  UCBPTR,HOLDMASK    MOVE IN DEV TYPE + CLASS IF GIVEN      00395\n         MVC  FLAGS,HOLDFLAG     MOVE IN FLAGS WHICH ARE BEING HELD     00396\n******* KEY0 NO LONGER NEEDED, ALL INFO ALREADY MOVED TO SP236 STORAGE: 00397\n         MODESET EXTKEY=TCB,WORKREG=9   R6 STILL ADDRESSED TO TCB DSECT 00398\n         LA   R1,4                                                      00399\n         SVC  254                                                       00400\n         LA   R1,IEFPARM                                                00401\n         LINK EP=IEFAB4UV                                               00402\n*                                                                       00403\n         LR   R12,R15         SAVE THE RETURN CODE FOR LATER CHECKING   00404\n*********************************************************************** 00405\n* INPUT STORAGE AREA (KEY 1 SUBPOOL 236) CAN BE FREED IMMEDIATELY AFTER 00406\n* RETURNED INFO MOVED OUT.  ANSWERS (FOR FUNCTION UNIT NAME IN, UCBS    00407\n* OUT) ARE RETURNED IN KEY 1 SUBPOOL 230 STORAGE.  THAT CAN BE FREED    00408\n* AFTER ALL THE UCBS ARE MOVED OUT.  THIS CODE MUST BE IN KEY=1 TO DO   00409\n* THAT + THEREFORE MUST BE RE-ENTERANT. NON-RENT WILL NOT WORK FOR      00410\n* KEY=1 FREEMAIN BECAUSE FETCH LOADS A NON-RENT PROGRAM INTO A SUBPOOL  00411\n* WHICH WILL CAUSE AN ABEND 0C4 AFTER THE MODESET TO KEY=1.             00412\n*********************************************************************** 00413\nGOTANS   L    R7,UTBLPTR          POINTER TO UNIT TABLE                 00414\n         DROP R7                  NO LONGER NEEDED                      00415\n         USING UNITABLE,R7        ADDRESS TO UNIT TABLE                 00416\n         MVC  UCBLIST,UCBPTR      SAVE PTR TO UCB LIST                  00417\n         MVC  IEFOUTNM,UNAME      HOLD UNITNAME/LOOK-UP-VALUE           00418\n*RETURNED ATTRIB INFO NOT HELD BECAUSE NOT YET NEEDED IN UCBFIND CODE   00419\n         L    R14,SPNO236                                               00420\n         L    R1,KEY1ADDR                                               00421\n         FREEMAIN R,LV=LKEY1SP,SP=(R14),A=(R1)                          00422\nIEFEND   LM   R14,R9,SUBSAVE      RESTORE REGS                          00423\n         BCR  15,R14              RETURN TO CALLER                      00424\n*********************************************************************** 00425\n**********END OF IEFAB4UV SUBROUTINE*********************************** 00426\n*********************************************************************** 00427\n*                                                                       00428\n*********************************************************************** 00429\n*****     IEFUCBS SUBROUTINE     *********************************      00430\n***SUBROUTINE TO MOVE UCBS RETURNED FROM IEFAB4UV INTO CALLERS STORAGE  00431\n*********************************************************************** 00432\nIEFUCBS  STM   R14,R9,SUBSAVE     HOLD THESE REGS SO THEY CAN BE REUSED 00433\n         LA    R12,0              RESET RETURN CODE REG                 00434\n         L     R9,UCBLIST         PTR TO UCB LIST                       00435\n         CLI   0(R9),X'E6'        IS THIS THE UCB LIST? E6 = SP230      00436\n         BC    7,NOTUCBLS         NOT UCB LIST SEND MSG                 00437\n**** 0(R9) IS THE LENGTH OF UCB LIST RETURNED, WE DO NOT NEED IT        00438\n         DROP  R7                 FROM KEY1 PARM DSECT                  00439\n         MVC   OUTCNT,4(R9)       MOVE # OF UCBS TO CALLERS STORAGE     00440\n         L     R7,4(R9)           NUMBER OF UCBS IN LIST                00441\n         LA    R9,8(R9)           ADDRESS OF 1ST UCB PTR                00442\n         LA    R15,OUTUCBS        FIRST UCB PTR SLOT IN CALLERS STORAGE 00443\n         L     R8,=F'700'         ROOM FOR 700 UCBS IN CALLERS STORAGE  00444\nMOVEUCBS MVC   0(4,R15),0(R9)     MOVE UCB ADDR TO CALLERS STORAGE      00445\n         BCT   R7,NEXTUCB         GET READY TO MOVE NEXT ONE            00446\n         BC    15,IEFUCEND        NO MORE UCBS, END OF IEFUCBS SUB      00447\nNEXTUCB  BCT   R8,MOREROOM        MORE UCBS + MORE CALLERS STORAGE LEFT 00448\n*********************************************************************   00449\n*RETURN TO CALLER WITH 700 UCBS + NOTIFY HIM THAT MORE UCBS ARE AVAIL   00450\n*THAT THE 700 FULLWORDS SHOULD BE INCREASED. SUBPOOL 230 WILL NOT BE    00451\n*FREED BY THE SUBROUTINE, IT WILL AUTOMATICALLY FREED AT TASK           00452\n*TERMINATION (WHEN CALLER ENDS).                                        00453\n*********************************************************************   00454\nRANOUT   MVC   WTOMSG+4(80),MSG02 WORK AREA NOT LARGE ENOUGH            00455\n         BAL   R14,WTOIT          WRITE WTO MSG                         00456\n         LA    R12,40             R12=28 NOT ALL UCBS BEING RETURNED    00457\n         BC    15,IEFUCEND        END OF IEFUCBS SUB                    00458\nMOREROOM LA    R9,4(R9)           POINT TO NEXT UCB FROM IEFAB4UV       00459\n         LA    R15,4(R15)         POINT TO NEXT SLOT IN USERS STORAGE   00460\n         B     MOVEUCBS           CONTINUE MOVING UCBS                  00461\nIEFUCEND LM    R14,R9,SUBSAVE     RESTORE REGS                          00462\n         BCR   15,R14             RETURN TO CALLER OF IEFUCBS           00463\n******************************************************************      00464\n*****     END OF IEFUCBS SUBROUTINE     **************************      00465\n******************************************************************      00466\n*                                                                       00467\n******************************************************************      00468\n*****     WTO PROCESSING ROUTINES BASED ON RETURN CODES     ******      00469\n******************************************************************      00470\nNONAME0  MVC   WTOMSG+4(80),MSG00   ESOTERIC NAME NOT FOUND - RETRY'    00471\n         BAL   R14,WTOIT          RC = NO UCBS FOUND                    00472\n         LA    R12,8              RC = NO UCBS FOUND                    00473\n         BC    15,ENDIT           END OF SUBROUTINE                     00474\nNONAME   MVC   WTOMSG+4(80),MSG06   ESOTERIC NAME NOT FOUND - RETRY'    00475\n         BAL   R14,WTOIT          RC = NO UCBS FOUND                    00476\n         LA    R12,8              RC = NO UCBS FOUND                    00477\n         BC    15,ENDIT           END OF SUBROUTINE                     00478\nNOIEFSTO MVC   WTOMSG+4(80),MSG07 NO STORGE AVAIL FOR IEFAB4UV UCB LIST 00479\n         BAL   R14,WTOIT          RC = NO IEFAB4UV STORAGE AVAILABLE    00480\n         MVC   WTOMSG+4(80),MSG02 NOT ALL UCBS RETURNED-CONTACT TEC.    00481\n         BAL   R14,WTOIT          RC = NO IEFAB4UV STORAGE AVAILABLE    00482\n         LA    R12,32             RC=20 SEND BACK TO THE CALLER         00483\n         BC    15,ENDIT           END OF SUBROUTINE                     00484\nNOTUCBLS MVC   WTOMSG+4(80),MSG08   RETURNED UCB LIST INVALID           00485\n         BAL   R14,WTOIT          RC = 24 RETURNED UCB LIST INVALID     00486\n         LA    R12,36             R12=24 IEFAB4UV RC=0-UCB LIST INVALID 00487\n         BC    15,ENDIT           END OF SUBROUTINE                     00488\nNOEDTPTR MVC   WTOMSG+4(80),MSG10  EDT PTR NOT FOUND IN JESCT           00489\n         BAL   R14,WTOIT          RC = NO UCBS FOUND                    00490\n         LA    R12,8              RC = NO UCBS FOUND                    00491\n         BC    15,ENDIT           END OF SUBROUTINE                     00492\nNOTSUP   MVC   WTOMSG+4(80),MSG11  EDT PTR NOT FOUND IN JESCT           00493\n         BAL   R14,WTOIT          RC = NO UCBS FOUND                    00494\n         LA    R12,8              RC = NO UCBS FOUND                    00495\n         BC    15,ENDIT           END OF SUBROUTINE                     00496\nGIVE1VOL MVC   WTOMSG+4(80),MSG01 FUNCTION NOT SUPPORTED                00497\n         BAL   R14,WTOIT          WRITE MSG                             00498\n         LA    R12,22             R12=16 FUNCTION NOT SUPPORTED         00499\n         BC    15,ENDIT           EOJ                                   00500\nGIVEVOLS MVC   WTOMSG+4(80),MSG01 FUNCTION NOT SUPPORTED                00501\n         BAL   R14,WTOIT          WRITE MSG                             00502\n         LA    R12,22             R12=16 FUNCTION NOT SUPPORTED         00503\n         BC    15,ENDIT           EOJ                                   00504\nABENDIT  MVC   WTOMSG+4(80),MSG13                                       00505\n         BAL   R14,WTOIT                                                00506\n         BC    15,EODAD                                                 00507\nWTOIT    WTO   MF=(E,WTOMSG)                                            00508\n         MVC   WTOMSG+4(84),=84CL1' '                                   00509\n         BR    R14                RETURN TO ISSUSER                     00510\n**********************************************************************  00511\n*****     END OF WTO SECTION     *************************************  00512\n**********************************************************************  00513\n*                                                                       00514\n**********************************************************************  00515\n*****     END OF JOB PROCESSING     **********************************  00516\n**********************************************************************  00517\nEODAD    L     R6,TCBHOLD                                               00518\n         USING TCB,R6                                                   00519\n         SR    R1,R1              PREPARE FOR AUTHORIZATION             00520\n         SVC   254                TO PREPARE FOR KEY=1                  00521\n         MODESET MODE=SUP         TO PREPARE FOR KEY=1                  00522\n         L     R1,UCBLIST         PTR TO GETMAIN'D AREA                 00523\n         L     R0,0(R1)           SUBPOOL 230 + LEN OF STORAGE          00524\n         LTR   R1,R1              IS A FREEMAIN REQUIRED                00525\n         BC    8,EODADB           NO BRANCH AROUND IT                   00526\n         MODESET EXTKEY=SCHED                                           00527\n         SVC   10                 FREEMAIN OF SUBPOOL 230               00528\nEODADB   MODESET KEY=ZERO                                               00529\n         MODESET EXTKEY=TCB,WORKREG=9                                   00530\n         MODESET MODE=PROB                                              00531\n         LA    R1,4                                                     00532\n         SVC   254                                                      00533\n         LR    R1,R13             DYNAMIC AREA ADDR                     00534\n         LA    R0,LDYNAMIC        SIZE OF AREA                          00535\n         L     R13,4(,R13)        PREV SAVE AREA                        00536\n         LA    R1,0(,R1)          CLEAR HI ORDER                        00537\n         SVC   10                 FREEMAIN                              00538\n         LM    R14,R11,12(R13)    RESTORE REGS                          00539\n         LR    R15,R12            RETURN CODE                           00540\n         L     R12,68(R13)        RESTORE R12                           00541\n         MVI   12(R13),X'FF'      INDICATE RETURN                       00542\n         BR    R14                GO BACK TO TMP                        00543\n         EJECT                                                          00544\nENDIT    LR    R1,R13             DYNAMIC AREA ADDR                     00545\n         LA    R0,LDYNAMIC        SIZE OF AREA                          00546\n         L     R13,4(,R13)        PREV SAVE AREA                        00547\n         LA    R1,0(,R1)          CLEAR HI ORDER FOR FREEMAIN           00548\n         SVC   10                 FREEMAIN                              00549\n         LM    R14,R11,12(R13)    RESTORE REGS                          00550\n         LR    R15,R12            RETURN CODE                           00551\n         L     R12,68(R13)        RESTORE REG 12                        00552\n         MVI   12(R13),X'FF'      INDICATE RETURN                       00553\n         BR    R14                GO BACK TO TMP                        00554\n         EJECT                                                          00555\n****************************************************************        00556\n**** LITERALS BELOW DO NOT REQUIRE GETMAIN STORAGE:                     00557\n****************************************************************        00558\n******* THE FOLLOWING ARE FOR DBC ESTAE                         DBC     00559\n*DBCMFL   ESTAE ,MF=L                                           DBC     00560\n*DBCMFLN  EQU   *-DBCMFL                                        DBC     00561\n******* WTO MESSAGES + WTO FORMAT FOR 80 CHAR MSGS:                     00562\nWTOPATRN WTO   '                                                       X00563\n                                            ',ROUTCDE=(11),MF=L         00564\nMSG00 DC CL80'CBT1500 - GENERIC/ESOTERIC NAME NOT FOUND'                00565\nMSG01 DC CL80'CBT1500 - SPECIFIED PARM FUNCTION NOT SUPPORTED'          00566\nMSG02 DC CL80'CBT1500 - NOT ALL UCBS RETURNED - CONTACT TEC SUPPORT'    00567\nMSG03 DC CL80'CBT1500 - GENERIC NAME NOT FOUND'                         00568\nMSG04 DC CL80'CBT1500 - ESOTERIC NAMES NOT SUPPORTED BY THIS UTILITY'   00569\nMSG05 DC CL80'CBT1500 - NO UCBS FOUND MATCHING THE DEVICE NAME'         00570\nMSG06 DC CL80'CBT1500 - NO UCBS FOUND MATCHING THIS ESOTERIC NAME'      00571\nMSG07 DC CL80'CBT1500 - NO STORAGE AVAILABLE FOR IEFAB4UV''S UCB LIST'  00572\nMSG08 DC CL80'CBT1500 - RETURNED UCB LIST INVALID'                      00573\nMSG09 DC CL80'CBT1500 - DEVICE TYPE NOT DEFINED TO SYSTEM'              00574\nMSG10 DC CL80'CBT1500 - IEFAB4UV: ENVIRONMENT PROB NO EDT PTR IN JESCT' 00575\nMSG11 DC CL80'CBT1500 - FUNCTION NOT SUPPORTED BY IEFEB4UV'             00576\nMSG12 DC CL80'CBT1500 - FUNC=01+ ESOTERIC UCBTYP SUPPORTED ONLY IN X-A' 00577\nMSG13 DC CL80'CBT1500 - ABEND UCBFIND SUBROUTINE - CONTACT TEC SUPPORT' 00578\n******* THE FOLOWING ARE FOR EDT SEARCHING:                             00579\nEDTLUVSP EQU   X'000'                                                   00580\nLUVENTNO EQU   X'000'                                                   00581\nLUVENTLN EQU   X'004'                                                   00582\nLUVENTRY EQU   X'008'                                                   00583\nLUVUNAME EQU   X'000'                                                   00584\nLUVVALUE EQU   X'008'                                                   00585\n******* THE FOLLOWING ARE FOR IEFAB4UV:                                 00586\nALLBLANK DS    200CL9' '                                                00587\n         DS    0F                                                       00588\nSPNO236  DC    X'000000EC'        SUBPOOL 236                           00589\nSPNO230  DC    X'000000E6'        SUBPOOL 230                           00590\nFLGNAME  DC    XL2'1000'          BIT 3 UCB SEARCH FOR UNIT NAME        00591\nFLGDEV   DC    XL2'2100'          BITS 2+7 CONVERT UCBTYP TO UNITNAME   00592\n         DS    0F                                                       00593\nSUBZAP   DC    X'FF000000'                                              00594\n**********************************************************************  00595\n**FOLLOWING WAS TAKEN FROM MODULE: IEFW21SD  CSECT: IEFAB4UV WHICH      00596\n**INTERFACES TO EDT (ELIGIBLE DEVICE TABLE). GENERATING MACRO NAME IS   00597\n**IEFZB421, BUT COULDN'T BE FOUND, SO HARDCODED OFFSETS ARE BEING USED  00598\n**********************************************************************  00599\n**LUVSECT  EQU   0                                                  **  00600\n**LUVHDR   EQU   LUVSECT                                            **  00601\n**LUVENTNO EQU   LUVHDR                                             **  00602\n**LUVENTRY EQU   0                                                  **  00603\n**UNITNAME EQU   LUVENTRY                                           **  00604\n**LUVALUE  EQU   LUVENTRY+8                                         **  00605\n**LUVGMTP  EQU   LUVENTRY+12                                        **  00606\n**LUVGENNO EQU   LUVENTRY+16                                        **  00607\n**LUVGENP  EQU   LUVENTRY+20                                        **  00608\n**LUVFLAGS EQU   LUVENTRY+24                                        **  00609\n**********************************************************************  00610\n******* GETMAIN AREA STARTS HERE:                                       00611\nDYNMAREA DSECT                                                          00612\nMYSAVE   DS    18F                                                      00613\nSUBSAVE  DS    12F                SAVE AREA FOR SUBROUTINES             00614\nADDRCPPL DS    F                  CPPL ADDR FOR DSECT                   00615\nADDRCBUF DS    F                  ADDR OF CMD BUFFER                    00616\nADDRUPT  DS    F                  ADDR OF UPT                           00617\nADDRPSCB DS    F                  ADDR OF PSCB                          00618\nADDRECT  DS    F                  ADDR OF ECT                           00619\nSYSTEMSW DS    X                  SW FOR XA/MVS SYSTEM TYPE             00620\n******* THE FOLLOWING IS FOR DBC:                                       00621\n*ESTAREA  ESTAE ,MF=L                                                   00622\n******* THE FOLLOWING IS FOR IEFAB4UV:                                  00623\nCPPLADDR DS    F                                                        00624\n         DS    0F                                                       00625\nTCBHOLD  DS    F                                                        00626\nIEFOUTNM DS    CL8        TMP HOLD FOR UNITNAME/LOOK-UP-VALUE FROM IEF  00627\nHOLDFLAG DS    XL2        TMP HOLD LOCATION FOR IEFAB4UV FLAGS          00628\nKEY1ADDR DS    F                                                        00629\nLISTLEN  DS    F                                                        00630\nUCBLIST  DS    F          PTR TO UCB LIST                               00631\n         DS    0D                                                       00632\n******* THE FOLLOWING ARE FOR WTO:                                      00633\nWTOMSG   WTO   '1234567890123456789212345678931234567894123456789512345X00634\n               67896123456789712345678981234',ROUTCDE=(11),MF=L         00635\n******* FOR SCAN SERVICE ROUTINE:                                       00636\nSSPRMLST DS    3F                 SSPRMLST MAPPING FOR UCB              00637\n         ORG   SSPRMLST                                                 00638\nSSPRMWA  DS    F                  ADDR OF 100-BYTE WORK AREA            00639\nSSPRMDEV DS    F                  ADDR OF DEV TYPE TO SCAN FOR          00640\nSSPRMUCB DS    F                  ADDR OF RETURNED UCB                  00641\n         SPACE                                                          00642\nSSDEVC   DS    CL1                DEVICE CLASS TO SEARCH FOR            00643\nSSUCB    DS    F                  RETURNED UCB ADDR                     00644\nSSADDR   DS    F                  ADDR OF SCANSERVICE ROUTINE           00645\n*                                                                       00646\n******* FOR EDT SEARCHING:                                              00647\nHOLDNAME DS    CL8  CURRENT WORKING NAMES(ESOTERIC,GENERIC,LOOK-UP-VAL) 00648\n*HOLDDEVT DS    CL4                INPUT DEV CLASS + TYPE               00649\nHOLDMASK DS    0CL4               MASK (DEVICE CLASS + DEV TYPE)        00650\nTYP1     DS    CL1                UCBTBYT1                              00651\nTYP2     DS    CL1                UCBTBYT2                              00652\nHOLDDEV  DS    0CL2               DEVICE CLASS + TYPE                   00653\nHOLDCLAS DS    CL1                DEVICE CLASS                          00654\nHOLDDEVT DS    CL1                DEVICE TYPE                           00655\nCNTUCB   DS    F                  COUNT OF # OF UCBS FOUND              00656\n         DS    0D                                                       00657\nLDYNAMIC EQU   *-DYNMAREA                                               00658\n******* THE FOLLOWING MAPS THE PARM SENT AS INPUT TO THE SUBROUTINE:    00659\nPARMAREA DSECT                                                          00660\nPARMFUNC DS    XL1                                                      00661\n         DS    XL3                                                      00662\nPARMNAME DS    0CL8                                                     00663\nPARMDEV  DS    0XL4                                                     00664\nPARMTYP1 DS    X                                                        00665\nPARMTYP2 DS    X                                                        00666\nPARMDEVC DS    X                                                        00667\nPARMDEVT DS    X                                                        00668\n         DS    CL4                                                      00669\nPARM2K   DS    F           PTR TO 2K STORAGE AREA                       00670\n******* MAP THE 2K AREA (USED FOR SUBROUTINE OUTPUT):                   00671\nOUT2K    DSECT                                                          00672\nOUTWORK  DS    XL100                                                    00673\nOUTCNT   DS    F                                                        00674\nOUTUCBS  DS    700F                                                     00675\n*********************************************************************** 00676\n******* DSECT FOR KEY1 SUBPOOL GETMAIN'D STORAGE                        00677\n*********************************************************************** 00678\nKEY1SP   DSECT                     GETMAIN DSECT FOR KEY1 SUBPOOL       00679\n* IEFAB4UV PARAMETER LIST:                                              00680\nIEFPARM  DS    0FL2                IEFAB4UV PARAMETER LIST MAPING       00681\nUTBLPTR  DS    F                   ADDRESS OF UNIT TABLE                00682\nFLAGPTR  DS    F                   ADDR OF DEVTYPE BYTE TO BE SEARCHED  00683\n*                                                                       00684\n* UNITABLE IS NOT DEFINED AS ANOTHER 'DSECT' SO LKEY1SP WILL SHOW TOTAL 00685\n* LENGTH OF REQUIRED KEY 1 STORAGE.  A   'USING UNITABLE,R7'  IS USED   00686\n* WITHIN THE CODE WITH OFFSETS CALCULATED AT 8X DISPLACED TO COMPENSATE 00687\n* FOR ABOVE IEFPARM STORAGE.                                            00688\n*                                                                       00689\n* IEFAB4UV UNIT TABLE:                                                  00690\nUNITABLE DS    0CL20                                                    00691\nUNAME    DS    8C                                                       00692\nUCBPTR   DS    F                                                        00693\nATTRPTR  DS    F                                                        00694\n         DS    F                                                        00695\n*                                                                       00696\n* IEFAB4UV FLAGS:                                                       00697\nFLAGS    DS    XL2                                                      00698\n* IEFAB4UV ATTRIBUTE AREA:                                              00699\nATTRAREA DS    CL10                                                     00700\nLKEY1SP  EQU   *-KEY1SP                                                 00701\n**********************************************************************  00702\n         EJECT                                                          00703\n         IEFUCBOB                  UCB MAPPING MACRO                    00704\n         EJECT                                                          00705\n         IEFJESCT                                                       00706\n         EJECT                                                          00707\n         IKJTCB                                                         00708\n         EJECT                                                          00709\n         CVT   DSECT=YES                                                00710\n         EJECT                                                          00711\n         IKJECT                                                         00712\n         EJECT                                                          00713\n         IKJUPT                                                         00714\n         EJECT                                                          00715\n         IKJCPPL                                                        00716\n         EJECT                                                          00717\n         IKJPPL                                                         00718\n         EJECT                                                          00719\n         IKJIOPL                                                        00720\n#PAN$AUD CSECT                                                          007204\n$PAN#AUD DC    CL21'001CBT1500   01/09/86'                              007205\n         END   UCBFIND                                                  00721\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT159/FILE159.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT159", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}