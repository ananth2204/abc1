//CLARKEP  JOB (001),'INSTALL LISTPDS',CLASS=A,MSGCLASS=X,
// NOTIFY=CLARKE  ,RESTART=STARTTST
//* ********************************************************
//* *  INSTALL THE 'PFD2ISPF'  PROGRAM                     *
//* *  And Test JCL is at the End.                         *
//* ********************************************************
//LISTPDS  EXEC ASMFCL,
//         PARM.ASM='OBJECT,NODECK,LIST,TEST',
//         PARM.LKED='LIST,MAP,TEST,NORENT'
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
PFD2 TITLE 'PFD2ISPF --  Fix statistics for ISPF from Fujitsu"s PFD'
*---------------------------------------------------------------------*
*
* TITLE - Convert PFD to ISPF Statistics
*
* NAME - PFD2ISPF,  ENTRY POINT - PFD2ISPF
*
*        Quick and dirty convert from FAL Stats to IBM ISPF Stats.
*
*        USE AT YOUR OWN RISK!!!
*        UPDATES Files in PLACE.  Please BACKUP first.
*
* Coded by Clem Clarke, Perth Australia.
*
* STATUS - VERSION 1.0,  October 3, 2004
*
*          Shamelessly using code from the
*          'LISTPDS' Program originally
*
*                 DEVELOPED BY . . .
*                    GENE CZARCINSKI
*                    NASA/GODDARD SPACE FLIGHT CENTER
*                    GREENBELT, MARYLAND
*
*          Thank you.
*
*
* Function/operation - "PFD2ISPF" is an OS/360 data set utility
*       program for converting Fujitsu/Siemens PFD statistics to
*       IBM ISPF statistics, which are used by both ISPF, and
*       RPF on MVS 3.8 under Hercules.
*
*       To keep the statistics, this program was developed.
*
*       The Fujitsu's PFD stats are two bytes shorter than
*       the ISPF stats.  All that must be done is to increase the
*       length of each entry that is too short to the correct
*       length, and STOW the member name again.
*
*       I can't just read the directory, then reset each stat,
*       because the directory changes when we do a BLDL, and we
*       may get caught out, so I'll read the directory, write out
*       a list of each member that needs changing, then read
*       it back one member at a time, then BLDL for that member
*       and issue a STOW with the member details changed.
*
*---------------------------------------------------------------------*
*
*
*---------------------------------------------------------------------*
         EJECT
R0       EQU   0                   OS PARM REG; WORK REG
R1       EQU   1                   OS PARM REG; WORK REG
R2       EQU   2                   LOCAL WORK REG
R3       EQU   3                   LOCAL WORK REG
R4       EQU   4
R5       EQU   5                   LRECL CNTR FOR MEMBER
R6       EQU   6                   BLOCK LENGTH
R7       EQU   7                   BLOCK POINTER
R8       EQU   8                   IHADCB BASE REG
R9       EQU   9                   MAIN BASE REG - 3
R10      EQU   10                  LOCAL LINK REG
R11      EQU   11                  PROGRAM BASE REG #2
R12      EQU   12                  MAIN BASE REG - 1
R13      EQU   13                  POINTER TO OS SAVE AREA
R14      EQU   14                  OS LINK REG; WORK REG
R15      EQU   15                  OS BRANCH REG; WORK REG
OFLGS    EQU   B'00010000'         DCB OPEN ERROR FLAG
         EJECT
*---------------------------------------------------------------------*
*        MAIN PROGRAM BEGIN
*---------------------------------------------------------------------*
PFD2ISPF CSECT
         SAVE  (14,12),,PFD2ISPF-Version1
         LR    R12,R15             INIT MAIN BASE REGS
         LA    R11,2048
         AR    R11,R11
         LR    R9,R11
         AR    R9,R9
         AR    R11,R12
         AR    R9,R12
         USING PFD2ISPF,R12,R11,R9 AND PGM ADDRESSABILITY.
         USING IHADCB,R8           SET DCB ADDRESSABILITY
         LR    R4,R1               SAVE PARM LIST POINTER.
         LA    R15,SAVEAREA        INIT SAVE AREAS
         ST    R13,4(R15)
         ST    R15,8(R13)
         LR    R13,R15
         SPACE
*---------------------------------------------------------------------*
*        PROGRAM INITIALIZATION
*---------------------------------------------------------------------*
         SPACE
PGMINIT  EQU   *
         SPACE
*---------------------------------------------------------------------*
*        INITIALIZE THE SYSPRINT FILE
*---------------------------------------------------------------------*
         SPACE
         LA    R8,SYSPRINT         INIT THE SYSPRINT FILE
         OPEN  (SYSPRINT,OUTPUT)
         TM    DCBOFLGS,OFLGS      OPEN OK?
         BO    INITPR              YES.
WTP      DS    0H
         WTO   'LPDS00I  LISTPDS OPEN ERROR ON SYSPRINT',          +++++
               ROUTCDE=(11),DESC=7
         ABEND 20,DUMP             YES, ABEND TO GET DUMP.
ABORT    DS    0H
         L     R13,4(R13)          ELSE ... ABORT
         RETURN (14,12),T,RC=20
*---------------------------------------------------------------------*
*        INITIALIZE THE SYSPRINT FILE
*---------------------------------------------------------------------*
INITPR   DS    0H
         SPACE
         LA    R8,SYSUT1           INIT THE SYSUT1 FILE
         OPEN  (SYSUT1,OUTPUT)
         TM    DCBOFLGS,OFLGS      OPEN OK?
         BO    INITPR2             YES.
         WTO   'LPDS00I  LISTPDS OPEN ERROR ON SYSUT1',            +++++
               ROUTCDE=(11),DESC=7
         ABEND 20,DUMP             YES, ABEND TO GET DUMP.
*---------------------------------------------------------------------*
*        INITIALIZE SYSLIB AND THE LCB'S
*---------------------------------------------------------------------*
INITPR2  DS    0H
         SPACE
FILEINIT DS    0H
         LA    R8,SYSLIB
         OPEN  (SYSLIB,(UPDAT))
         TM    DCBOFLGS,OFLGS      OPEN OK?
         BO    FI07                YES.
         WTO   'SYSLIB Failed to Open'
         B     TERMINAT
         SPACE
FI07     DS    0H
CHKLIB15 DS    0H
         LA    R8,SYSLIB
*        TM    SAVRECFM,B'11000000'    RECFM=U?
*        BO    CHKLIB16
         LA    R8,SYSLIB
         TM    DCBRECFM,B'10000000'    RECFM=F?
         BO    CHKLIB17
         TM    DCBRECFM,B'01000000'    RECFM=V?
         BO    CHKLIB18
         WTO   'Invalid RECFM Format, must be Fixed or Variable'
         ABEND 21
         SPACE
*---------------------------------------------------------------------*
*        RECFM=F
*---------------------------------------------------------------------*
         SPACE
CHKLIB17 DS    0H
         SPACE
*---------------------------------------------------------------------*
*        RECFM=V
*---------------------------------------------------------------------*
         SPACE
CHKLIB18 DS    0H
         SPACE
*---------------------------------------------------------------------*
*        END OF LIB CHECK
*---------------------------------------------------------------------*
         SPACE
CHKLIB40 DS    0H
         LA    R8,SYSLIB
         SPACE
         OPEN  (SYSLIB2,INPUT)       OPEN THE PDS MEMBER FILE
         SPACE
BLDNAM00 DS   0H
         GET   SYSLIB2,PDSDIR Read the Directory Block
         LA    R3,PDSDIR
         LH    R2,0(R3)            Get Size of directory block
         LA    R3,2(R3)            Point to first member
BLDNAM36 DS    0H
         IC    R7,11(,R3)
         N     R7,=F'31'
         SLL   R7,1
         LA    R6,DIRUSER-DIRNAMEX(,R7)
         LA    R0,DIRNAMEX-DIR(,R6)
*        CH    R7,=H'30'           COULD THIS BE SPF STATS        .SPF.
*        BE    BLDISSPF            Yes, Branch (C. Clarke 2004)   .SPF.
         CH    R7,=H'28'           How about Fujitsu PFD?         .PFD.
         BNE   BLDNOSPF            No, Branch                     .PFD.
BLDISSPF TM    11(R3),X'60'        ANY TTR'S IN USERDATA          .SPF.
         BNZ   BLDNOSPF            YES, NOT SPF STATS             .SPF.
         SR    R14,R14
         IC    R14,11(R3)
         LA    R14,1(R14)
         STC   R14,11(R3)
         MVI   OUTLINE,C' '
         MVC   OUTLINE+1(L'OUTLINE-1),OUTLINE
         MVC   OUTLINE(8),0(R3)                                   .SPF.
         PUT   SYSPRINT,OUTLINE
         LR    R14,R7
         BCTR  R14,0
         LA    R14,8+4(R14)       + l'member+L'TTR
         EX    R14,MVCX
MVCX     MVC   OUTLINE(*-*),0(R3)                                 .SPF.
         LA    R14,OUTLINE(R14)
         PUT   SYSUT1,OUTLINE Write the name to alter (Pass 2)
BLDNOSPF DS    0H                                                 .SPF.
         CLI   0(R3),X'FF'         TEST FOR END
         BE    BLDNAM95
         AR    R3,R6
         SR    R2,R6
         BP    BLDNAM36
         B     BLDNAM00
         SPACE
*---------------------------------------------------------------------*
*        END OF DIRECTORY.
*---------------------------------------------------------------------*
         SPACE
PDSEOF   DS    0H
         WTO   'End of File on SYSLIB'
*---------------------------------------------------------------------*
*        Start of Pass 2.  Reset Member Stats
*---------------------------------------------------------------------*
BLDNAM95 DS    0H
BEGIN9   DS    0H
         CLOSE SYSUT1
         OPEN  (SYSUT1,INPUT)
FIXSPF   GET   SYSUT1,MEM2CHNG
         MVC   BLDLN1,MEM2CHNG
* The BLDL and Point aren't really necessary...
         BLDL  SYSLIB,BLDLLIST Construct directory entry list
         POINT SYSLIB,BLDLTTR1
         STOW  SYSLIB,MEM2CHNG,R
         LTR   R15,R15
         BZ    FIXSPF
         WTO  'Bad Stow'
         ABEND 40
ENDRUN99 DS    0H
EOFWORK  DS    0H
TERMINAT DS    0H
         L     R13,4(R13)
         LA    R15,0
         LA    R14,0
         RETURN (14,12),T,RC=(15)
         EJECT
         SPACE
*---------------------------------------------------------------------*
*        DCB'S FOR PFD2ISPF
*---------------------------------------------------------------------*
         SPACE
         PRINT NOGEN
SYSPRINT DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,                +++++
               RECFM=FB,LRECL=121,BLKSIZE=1210
SYSUT1   DCB   DSORG=PS,MACRF=(PM,GM),DDNAME=SYSUT1,               +++++
               RECFM=FB,LRECL=80,BLKSIZE=800,EODAD=EOFWORK
SYSLIB   DCB   DSORG=PO,MACRF=(R,W),DDNAME=SYSLIB
SYSLIB2  DCB   DSORG=PS,MACRF=(GM),DDNAME=SYSLIB,EODAD=PDSEOF,     +++++
               RECFM=F,LRECL=256,BLKSIZE=256
* Sysin isn't used...
SYSIN    DCB   DSORG=PS,MACRF=(R),DDNAME=SYSIN,                     ++++
               RECFM=FB,LRECL=80       EXLST=EXLST1
         DCBD  DSORG=(PS,PO),DEVD=(DA)
         EJECT
PFD2ISPF CSECT ,
         SPACE
SAVEAREA DC    9D'0'               STD OS SAVE AREA
OUTLINE  DC    CL121' '
         DC    D'0'
PDSDIR   DS    CL300
         DC    0D'0'
MEM2CHNG DC    CL8' '
DIRNAME  DC    CL8' '
         DC    CL160' '
         DC    0D'0'
BLDLLIST DS    0F BLDL parmlist
BLDLFF   DC    H'1'         Number of entries in BLDL list
BLDLLL   DC    H'40'        Length of storage for directory entry
BLDLN1   DC    CL8'MEMBER1' Member name
BLDLTTR1 DS    CL3          TTR of 1st member
BLDLK1   DS    CL1          Concatenation # of 1st member
         DC    CL100' '
STOWLIST DS    0F           List of member names for STOW
         DC    CL8'MEMBERA' Name of member
         DS    CL3          TTR of first record (created by STOW)
         DC    X'23'        C byte, 1 user TTRN, 4 bytes of user data
         DS    CL4          TTRN of NOTE list
         DS    CL100
*... one list entry per member (16 bytes each)
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        DEFINE THE DSECT'S HERE
*---------------------------------------------------------------------*
         SPACE
*---------------------------------------------------------------------*
         SPACE
DIR      DSECT
DIRCRDCT DC    XL4'0'              RECORD COUNT
DIRPG1   DC    H'0'                PAGE NUMBER
DIRFLAGS DC    B'00000000'         FLAGS
         DC    X'00'               NOT USED
DIRUSERL DC    H'0'                LENGTH OF USER DATA
DIRNAMEX DC    CL8' '              MEMBER NAME
DIRTTR   DC    XL4'0'
DIRUSER  EQU   *
DIREND   EQU   *
DIRLEN   EQU   *-DIR    ... PLUS LEN OF 'USER DATA'
         SPACE
*---------------------------------------------------------------------*
         SPACE
         DC    0D'0'
         END   PFD2ISPF
//LKED.SYSLMOD DD DSN=SYS2.LINKLIB,DISP=SHR
//LKED.SYSIN DD *
 NAME PFD2ISPF(R)
//* Test the Program.
//*
//* Copy a PDS to a Temporary file, and execute
//*
//* NOTE: The PDS is UPDATED in PLACE!!!!!
//* ALWAYS, ALWAYS make a backup first!
//*
//STARTTST EXEC PGM=IEFBR14
//DELETE   DD  DSN=CLARKE.JOL51TMP.PFD,DISP=(OLD,DELETE),
// VOL=REF=CLARKE.JOL
//COPYFILE EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//MACIN    DD  DSN=CLARKE.JOL40TMP.CMDLIB,DISP=(SHR,PASS)
//MACOUT   DD  DSN=CLARKE.JOL51TMP.PFD,DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(15,12,50),RLSE),
//             VOL=REF=CLARKE.JOL
   COPY    INDD=MACIN,OUTDD=MACOUT
//*
//* Run the Fix Program
//*
//FIXPFD EXEC PGM=PFD2ISPF
//STEPLIB  DD DSN=SYS2.LINKLIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD SPACE=(CYL,1),UNIT=SYSDA
//SYSLIB   DD DSN=CLARKE.JOL51TMP.PFD,DISP=SHR
//
