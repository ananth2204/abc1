{"INMR01": {"INMLRECL": 80, "INMFNODE": "ORIGNODE", "INMFUID": "ORIGUID", "INMTNODE": "DESTNODE", "INMTUID": "DESTUID", "INMFTIME": "20110620142058000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 4796800, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 5, "INMDSNAM": "RAKF.RRKF006E", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 4796800, "INMDSORG": "PS", "INMLRECL": 5616, "INMBLKSZ": 5620, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 4796800, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"RAKF.RRKF006E": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 5620, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 14, "DVAMAXRC": 32760, "DVACYL": 886, "DVATRK": 15, "DVATRKLN": 47968, "DVAOVHD": 256, "num_header_records": 0, "DS1REFD": "000000", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x00\\x00\\x00\\x00'", "DS1LSTAR": "b'\\x00\\x00\\x00'", "DS1TRBAL": "b''"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0bvD\\x04\\x9a\\xec\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0bvD\\x04\\x9a\\xec\\xd8'", "b'X\\x00:\\x18\\x00\\x00\\x00\\x08\\x00\\x0e\\x00\\x0f\\x00\\x08\\x00d'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC$ZIP": {"ttr": 2829, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x06\\x00\\x00\\x01\\x11\\x17\\x1f\\x01\\x11\\x17\\x1f\\x14\\x04\"\\x15\"\\x15\\x00\\x00\\\\\\xd9\\xc1\\xd2\\xc6\\\\@@@@'", "ispf": {"version": "02.06", "flags": 0, "createdate": "2011-06-20T00:00:00", "modifydate": "2011-06-20T14:04:00", "lines": 8725, "newlines": 8725, "modlines": 0, "user": "*RAKF*"}, "mimetype": "application/zip", "datatype": "binary", "extension": ".zip"}, "A@PREP": {"ttr": 2826, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x06\\x00\\x00\\x01\\x11\\t?\\x01\\x11\\x17\\x1f\\x12\\x00\\x00P\\x00P\\x00\\x00\\\\\\xd9\\xc1\\xd2\\xc6\\\\@@@@'", "ispf": {"version": "02.06", "flags": 0, "createdate": "2011-04-03T00:00:00", "modifydate": "2011-06-20T12:00:00", "lines": 80, "newlines": 80, "modlines": 0, "user": "*RAKF*"}, "text": "//RAKFPREP JOB (RAKF),\n//             'RAKF Installation',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             REGION=8192K,\n//             MSGLEVEL=(1,1)\n//* ------------------------------------------------------------------*\n//* Prepare system for RAKF 1.2.0 installation                        *\n//*                                                                   *\n//* Expected return codes: Step UCLIN:  00                            *\n//*                        Step LIBS:   00                            *\n//*                        Step DELETE: 08 or lower                   *\n//* ------------------------------------------------------------------*\n//*\n//* ------------------------------------------------------------------*\n//* Delete MVS stub modules from SMP                                  *\n//* ------------------------------------------------------------------*\n//UCLIN   EXEC SMPAPP\n//SMPCNTL  DD  *\n UCLIN CDS .\n  DEL SYSMOD(EBB1102) MOD(ICHRIN00) .\n  DEL MOD(IEFBR14) LMOD(ICHSEC00) .\n  DEL MOD(ICHRIN00) .\n  DEL LMOD(ICHSEC00) .\n  DEL LMOD(IGC0013{) .\n ENDUCL .\n UCLIN ACDS .\n  DEL SYSMOD(EBB1102) MOD(ICHRIN00) .\n  DEL MOD(ICHRIN00) .\n ENDUCL .\n/*\n//* ------------------------------------------------------------------*\n//* Allocate target und and distribution libraries                    *\n//* ------------------------------------------------------------------*\n//LIBS    EXEC PGM=IEFBR14\n//ASAMPLIB DD  DISP=(,CATLG),DSN=HLQ.ASAMPLIB,VOL=SER=dddddd,\n//             UNIT=SYSDA,DCB=(RECFM=FB,LRECL=80,BLKSIZE=19040),\n//             SPACE=(TRK,(120,40,10))\n//SAMPLIB  DD  DISP=(,CATLG),DSN=HLQ.SAMPLIB,VOL=SER=ssssss,\n//             UNIT=SYSDA,DCB=(RECFM=FB,LRECL=80,BLKSIZE=19040),\n//             SPACE=(TRK,(120,40,10))\n//AMACLIB  DD   DISP=(,CATLG),DSN=HLQ.AMACLIB,VOL=SER=dddddd,\n//             UNIT=SYSDA,DCB=(RECFM=FB,LRECL=80,BLKSIZE=5600),\n//             SPACE=(TRK,(2,1,1))\n//MACLIB   DD  DISP=(,CATLG),DSN=HLQ.MACLIB,VOL=SER=ssssss,\n//             UNIT=SYSDA,DCB=(RECFM=FB,LRECL=80,BLKSIZE=5600),\n//             SPACE=(TRK,(2,1,1))\n//ASRCLIB  DD  DISP=(,CATLG),DSN=HLQ.ASRCLIB,VOL=SER=dddddd,\n//             UNIT=SYSDA,DCB=(RECFM=FB,LRECL=80,BLKSIZE=5600),\n//             SPACE=(TRK,(30,10,4))\n//SRCLIB   DD  DISP=(,CATLG),DSN=HLQ.SRCLIB,VOL=SER=ssssss,\n//             UNIT=SYSDA,DCB=(RECFM=FB,LRECL=80,BLKSIZE=5600),\n//             SPACE=(TRK,(30,10,4))\n//APROCLIB DD  DISP=(,CATLG),DSN=HLQ.APROCLIB,VOL=SER=dddddd,\n//             UNIT=SYSDA,DCB=(RECFM=FB,LRECL=80,BLKSIZE=19040),\n//             SPACE=(TRK,(2,1,1))\n//APARMLIB DD  DISP=(,CATLG),DSN=HLQ.APARMLIB,VOL=SER=dddddd,\n//             UNIT=SYSDA,DCB=(RECFM=F,LRECL=80,BLKSIZE=80),\n//             SPACE=(TRK,(1,1,1))\n//* ------------------------------------------------------------------*\n//* Delete MVS stub modules and/or pre-SMP RAKF modules               *\n//* from LINKLIB and LPALIB                                           *\n//* ------------------------------------------------------------------*\n//DELETE  EXEC PGM=IEHPROGM\n//SYSPRINT DD  SYSOUT=*\n//DD1      DD  VOL=SER=rrrrrr,DISP=OLD,UNIT=tttt\n//SYSIN    DD  *\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=ICHSFR00\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=IGC0013A\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=IGC0013B\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=IGC0013C\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=IGC0013{\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=ICHRIN00\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LINKLIB,MEMBER=ICHSEC00\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LINKLIB,MEMBER=RAKFPROF\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LINKLIB,MEMBER=RAKFUSER\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LINKLIB,MEMBER=RAKFPWUP\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LINKLIB,MEMBER=RAKFINIT\n/*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "AUXINST": {"ttr": 2564, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x11\\x16\\x7f\\x01\\x11\\x16\\x7f!\\x15\\x00.\\x00.\\x00\\x00\\\\\\xe4\\xe3\\xc9\\xd3\\xe2\\\\@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2011-06-16T00:00:00", "modifydate": "2011-06-16T21:15:00", "lines": 46, "newlines": 46, "modlines": 0, "user": "*UTILS*"}, "text": "//AUXINST JOB (UTILITY),\n//            'Install Utilities',\n//            CLASS=A,\n//            MSGCLASS=X,\n//            MSGLEVEL=(0,0)\n//* ------------------------------------------------------------------*\n//* Install auxiliary utilities needed by sample RACF-indication jobs *\n//*                                                                   *\n//* Expected return codes: Step RECEIVE: 00                           *\n//*                        Step INSTALL: 00                           *\n//* ------------------------------------------------------------------*\n//*\n//* ------------------------------------------------------------------*\n//* Receive distribution library                                      *\n//* ------------------------------------------------------------------*\n//*\n//RECEIVE  EXEC PGM=RECV370\n//RECVLOG   DD SYSOUT=*\n//XMITIN    DD DSN=hlq.SAMPLIB(AUXUTILS),DISP=SHR\n//SYSPRINT  DD SYSOUT=*\n//SYSUT1    DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(100,50)),\n//             DISP=(,DELETE,DELETE)\n//SYSUT2    DD DSN=&&AUX,DISP=(,PASS),SPACE=(TRK,(50,0,1),RLSE),\n//             DCB=(LRECL=0,BLKSIZE=19069,RECFM=U),UNIT=SYSDA\n//SYSIN     DD DUMMY\n//SYSUDUMP  DD SYSOUT=*\n//*\n//* ------------------------------------------------------------------*\n//* Copy utilities to system libraries                                *\n//* ------------------------------------------------------------------*\n//*\n//INSTALL  EXEC PGM=IEBCOPY\n//AUX      DD  DISP=(OLD,DELETE),DSN=&&AUX\n//LINKLIB  DD  DISP=SHR,DSN=SYS2.LINKLIB <--+\n//CMDLIB   DD  DISP=SHR,DSN=SYS2.CMDLIB  <--+---- change if necessary\n//LPALIB   DD  DISP=SHR,DSN=SYS1.LPALIB  <--+\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n COPY INDD=((AUX,R)),OUTDD=LINKLIB\n SELECT MEMBER=(MAWK)\n COPY INDD=((AUX,R)),OUTDD=CMDLIB\n SELECT MEMBER=(VTOC,CDSCB)\n COPY INDD=((AUX,R)),OUTDD=LPALIB\n SELECT MEMBER=(IGC0024D)\n/*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "AUXUTILS": {"ttr": 11, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x11\\x16\\x7f\\x01\\x11\\x16\\x7f!\\x15\\x13\\x1f\\x13\\x1f\\x00\\x00\\\\\\xe4\\xe3\\xc9\\xd3\\xe2\\\\@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2011-06-16T00:00:00", "modifydate": "2011-06-16T21:15:00", "lines": 4895, "newlines": 4895, "modlines": 0, "user": "*UTILS*"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "INITPWUP": {"ttr": 9, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x06\\x00\\x00\\x01\\x11\\x15\\x9f\\x01\\x11\\x15\\x9f\\x190\\x00&\\x00&\\x00\\x00\\\\\\xd9\\xc1\\xd2\\xc6\\\\@@@@'", "ispf": {"version": "02.06", "flags": 0, "createdate": "2011-06-08T00:00:00", "modifydate": "2011-06-08T19:30:00", "lines": 38, "newlines": 38, "modlines": 0, "user": "*RAKF*"}, "text": "//INITPWUP JOB (RAKF),\n//             'RAKF Customization',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             MSGLEVEL=(1,1)\n//* ------------------------------------------------------------------*\n//* Allocate the RAKF password queue dataset SYS1.SECURE.PWUP         *\n//*                                                                   *\n//* Expected return codes: Step DELETE:  08 or lower                  *\n//*                        Step SCRATCH: 08 or lower                  *\n//*                        Step ALLOC:   00                           *\n//* ------------------------------------------------------------------*\n//*\n//* ------------------------------------------------------------------*\n//* Delete SYS1.SECURE.PWUP                                           *\n//* ------------------------------------------------------------------*\n//LISTCAT  EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n DELETE SYS1.SECURE.PWUP\n/*\n//* ------------------------------------------------------------------*\n//* Scratch SYS1.SECURE.PWUP                                          *\n//* ------------------------------------------------------------------*\n//SCRATCH EXEC PGM=IEHPROGM\n//SYSPRINT DD  SYSOUT=*\n//DD1      DD  VOL=SER=rrrrrr,DISP=OLD,UNIT=tttt\n//SYSIN    DD  *\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.SECURE.PWUP\n/*\n//* ------------------------------------------------------------------*\n//* Allocate SYS1.SECURE.PWUP                                         *\n//* ------------------------------------------------------------------*\n//ALLOC   EXEC PGM=IEFBR14\n//PWUP     DD  DISP=(,CATLG),DSN=SYS1.SECURE.PWUP,VOL=SER=rrrrrr,\n//             UNIT=tttt,DCB=(RECFM=F,LRECL=18,BLKSIZE=18),\n//             SPACE=(TRK,(1,1))\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "INITTBLS": {"ttr": 7, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x06\\x00\\x00\\x01\\x11\\x15\\x9f\\x01\\x11\\x15\\x9f\\x190\\x00\\x17\\x00\\x17\\x00\\x00\\\\\\xd9\\xc1\\xd2\\xc6\\\\@@@@'", "ispf": {"version": "02.06", "flags": 0, "createdate": "2011-06-08T00:00:00", "modifydate": "2011-06-08T19:30:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "*RAKF*"}, "text": "//INITTBLS JOB (RAKF),\n//             'RAKF Customization',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             MSGLEVEL=(1,1)\n//* ------------------------------------------------------------------*\n//* Allocate PDS SYS1.SECURE.CNTL and populate it                     *\n//* with initial users and groups tables                              *\n//*                                                                   *\n//* Expected return code:  Step TABLES: 00                            *\n//* ------------------------------------------------------------------*\n//*\n//TABLES  EXEC PGM=IEBCOPY\n//SAMPLES DD DISP=SHR,DSN=hlq.SAMPLIB\n//RAKF    DD DISP=(,CATLG),DSN=SYS1.SECURE.CNTL,VOL=SER=rrrrrr,\n//           UNIT=SYSDA,DCB=(RECFM=FB,LRECL=80,BLKSIZE=19040),\n//           SPACE=(TRK,(10,3,3))\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n COPY INDD=SAMPLES,OUTDD=RAKF\n SELECT MEMBER=((uuuuuuuu,USERS),(MINPRF,PROFILES))\n/*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RAKFRMV": {"ttr": 2566, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x06\\x00\\x00\\x01\\x11\\x15\\x9f\\x01\\x11\\x16\\x7f!\\x15\\x00\\xc5\\x00\\xc1\\x00\\x00\\\\\\xd9\\xc1\\xd2\\xc6\\\\@@@@'", "ispf": {"version": "02.06", "flags": 0, "createdate": "2011-06-08T00:00:00", "modifydate": "2011-06-16T21:15:00", "lines": 197, "newlines": 193, "modlines": 0, "user": "*RAKF*"}, "text": "//RAKFRMV  JOB (RAKF),\n//             'RAKF Removal',\n//             CLASS=A,\n//             MSGCLASS=X,\n//             REGION=8192K,\n//             MSGLEVEL=(1,1)\n//* ------------------------------------------------------------------*\n//* Remove RAKF 1.2.0                                                 *\n//*                                                                   *\n//*   /\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/     *\n//*   Danger!!! Danger!!! Danger!!! Danger!!! Danger!!! Danger!!!     *\n//*   \\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\     *\n//*                                                                   *\n//*  This job is to be used for RAKF removal only if RAKF is in       *\n//*  ACCEPTed state. If RAKF is APPLIed but not ACCEPTed use the      *\n//*  the SMP command \"RESTORE S(TRKF120)\" instead of this job         *\n//*  to remove it.                                                    *\n//*                                                                   *\n//*  After RAKF removal the system is NOT IPLable until the original  *\n//*  MVS stub modules have been reinstated. Refer to job RAKF2MVS     *\n//*  for reinstating these modules                                    *\n//*                                                                   *\n//*   /\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/     *\n//*   Danger!!! Danger!!! Danger!!! Danger!!! Danger!!! Danger!!!     *\n//*   \\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\     *\n//*                                                                   *\n//*                                                                   *\n//* Expected return codes: Step UCLIN:    00                          *\n//* Expected return codes: Step SCRATCH:  00                          *\n//* ------------------------------------------------------------------*\n//*\n//* ------------------------------------------------------------------*\n//* Remove RAKF elements from SMP                                     *\n//* ------------------------------------------------------------------*\n//UCLIN   EXEC SMPAPP\n//SMPCNTL  DD  *\n UCLIN CDS .\n  DEL LMOD(ICHRIN00) .\n  DEL LMOD(ICHSEC00) .\n  DEL LMOD(ICHSFR00) .\n  DEL LMOD(RACIND)   .\n  DEL LMOD(RAKFPROF) .\n  DEL LMOD(RAKFPWUP) .\n  DEL LMOD(RAKFUSER) .\n  DEL  MOD(CJYRCVT)  .\n  DEL  MOD(ICHRIN00) .\n  DEL  MOD(ICHSEC00) .\n  DEL  MOD(ICHSFR00) .\n  DEL  MOD(IGC0013A) .\n  DEL  MOD(IGC0013C) .\n  DEL  MOD(IGC00130) .\n  DEL  MOD(RACIND)   .\n  DEL  MOD(RAKFPROF) .\n  DEL  MOD(RAKFPSAV) .\n  DEL  MOD(RAKFPWUP) .\n  DEL  MOD(RAKFUSER) .\n  DEL  SRC(CJYRCVT)  .\n  DEL  SRC(ICHRIN00) .\n  DEL  SRC(ICHSEC00) .\n  DEL  SRC(ICHSFR00) .\n  DEL  SRC(IGC0013A) .\n  DEL  SRC(IGC0013C) .\n  DEL  SRC(IGC00130) .\n  DEL  SRC(RACIND)   .\n  DEL  SRC(RAKFPROF) .\n  DEL  SRC(RAKFPSAV) .\n  DEL  SRC(RAKFPWUP) .\n  DEL  SRC(RAKFUSER) .\n  DEL  MAC($$$$$DOC) .\n  DEL  MAC($$$$INFO) .\n  DEL  MAC($$COPYRT) .\n  DEL  MAC($$NOTICE) .\n  DEL  MAC($DOC$ZIP) .\n  DEL  MAC(A@PREP)   .\n  DEL  MAC(AUXINST)  .\n  DEL  MAC(AUXUTILS) .\n  DEL  MAC(B@RECV)   .\n  DEL  MAC(C@APPLY)  .\n  DEL  MAC(D@ACCPT)  .\n  DEL  MAC(LPABACK)  .\n  DEL  MAC(LPAREST)  .\n  DEL  MAC(MINPRF)   .\n  DEL  MAC(MINUSR)   .\n  DEL  MAC(RACIND)   .\n  DEL  MAC(RAKFRMV)  .\n  DEL  MAC(RAKF2MVS) .\n  DEL  MAC(TK3USR)   .\n  DEL  MAC(ZAPMVS38) .\n  DEL  MAC(ZJW0003)  .\n  DEL  MAC(CJYPCBLK) .\n  DEL  MAC(CJYRCVTD) .\n  DEL  MAC(CJYUCBLK) .\n  DEL  MAC(IEZCTGFL) .\n  DEL  MAC(INITPWUP) .\n  DEL  MAC(INITTBLS) .\n  DEL  MAC(YREGS)    .\n  DEL  MAC(RAKF)     .\n  DEL  MAC(RAKFPROF) .\n  DEL  MAC(RAKFPWUP) .\n  DEL  MAC(RAKFUSER) .\n  DEL  MAC(RAKFINIT) .\n  DEL  MAC(VSAMLRAC) .\n  DEL  MAC(VSAMSRAC) .\n  DEL  MAC(VTOCLRAC) .\n  DEL  MAC(VTOCSRAC) .\n  DEL  SYSMOD(RRKF001) .\n  DEL  SYSMOD(RRKF002) .\n  DEL  SYSMOD(RRKF003) .\n  DEL  SYSMOD(RRKF004) .\n  DEL  SYSMOD(RRKF005) .\n  DEL  SYSMOD(RRKF006) .\n  DEL  SYSMOD(TRKF120) .\n ENDUCL .\n UCLIN ACDS .\n  DEL  SRC(CJYRCVT)  .\n  DEL  SRC(ICHRIN00) .\n  DEL  SRC(ICHSEC00) .\n  DEL  SRC(ICHSFR00) .\n  DEL  SRC(IGC0013A) .\n  DEL  SRC(IGC0013C) .\n  DEL  SRC(IGC00130) .\n  DEL  SRC(RACIND)   .\n  DEL  SRC(RAKFPROF) .\n  DEL  SRC(RAKFPSAV) .\n  DEL  SRC(RAKFPWUP) .\n  DEL  SRC(RAKFUSER) .\n  DEL  MAC($$$$$DOC) .\n  DEL  MAC($$$$INFO) .\n  DEL  MAC($$COPYRT) .\n  DEL  MAC($$NOTICE) .\n  DEL  MAC($DOC$ZIP) .\n  DEL  MAC(A@PREP)   .\n  DEL  MAC(AUXINST)  .\n  DEL  MAC(AUXUTILS) .\n  DEL  MAC(B@RECV)   .\n  DEL  MAC(C@APPLY)  .\n  DEL  MAC(D@ACCPT)  .\n  DEL  MAC(LPABACK)  .\n  DEL  MAC(LPAREST)  .\n  DEL  MAC(MINPRF)   .\n  DEL  MAC(MINUSR)   .\n  DEL  MAC(RACIND)   .\n  DEL  MAC(RAKFRMV)  .\n  DEL  MAC(RAKF2MVS) .\n  DEL  MAC(TK3USR)   .\n  DEL  MAC(ZAPMVS38) .\n  DEL  MAC(ZJW0003)  .\n  DEL  MAC(CJYPCBLK) .\n  DEL  MAC(CJYRCVTD) .\n  DEL  MAC(CJYUCBLK) .\n  DEL  MAC(IEZCTGFL) .\n  DEL  MAC(INITPWUP) .\n  DEL  MAC(INITTBLS) .\n  DEL  MAC(YREGS)    .\n  DEL  MAC(RAKF)     .\n  DEL  MAC(RAKFPROF) .\n  DEL  MAC(RAKFPWUP) .\n  DEL  MAC(RAKFUSER) .\n  DEL  MAC(RAKFINIT) .\n  DEL  MAC(VSAMLRAC) .\n  DEL  MAC(VSAMSRAC) .\n  DEL  MAC(VTOCLRAC) .\n  DEL  MAC(VTOCSRAC) .\n  DEL  SYSMOD(RRKF001) .\n  DEL  SYSMOD(RRKF002) .\n  DEL  SYSMOD(RRKF003) .\n  DEL  SYSMOD(RRKF004) .\n  DEL  SYSMOD(RRKF005) .\n  DEL  SYSMOD(RRKF006) .\n  DEL  SYSMOD(TRKF120) .\n ENDUCL .\n/*\n//* ------------------------------------------------------------------*\n//* Remove RAKF elements from LINKLIB, LPALIB, PARMLIB and PROCLIB    *\n//* ------------------------------------------------------------------*\n//SCRATCH EXEC PGM=IEHPROGM\n//SYSPRINT DD  SYSOUT=*\n//DD1      DD  VOL=SER=rrrrrr,DISP=OLD,UNIT=tttt\n//SYSIN    DD  *\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=ICHSFR00\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=IGC0013A\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=IGC0013B\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=IGC0013C\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=IGC0013{\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LPALIB,MEMBER=ICHRIN00\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LINKLIB,MEMBER=ICHSEC00\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LINKLIB,MEMBER=RACIND\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LINKLIB,MEMBER=RAKFPROF\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LINKLIB,MEMBER=RAKFUSER\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.LINKLIB,MEMBER=RAKFPWUP\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.PROCLIB,MEMBER=RAKF\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.PROCLIB,MEMBER=RAKFPROF\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.PROCLIB,MEMBER=RAKFPWUP\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.PROCLIB,MEMBER=RAKFUSER\n   SCRATCH VOL=tttt=rrrrrr,DSNAME=SYS1.PARMLIB,MEMBER=RAKFINIT\n/*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VSAMLRAC": {"ttr": 2819, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x06\\x00\\x00\\x01\\x11\\x16o\\x01\\x11\\x16o!0\\x00c\\x00c\\x00\\x00\\\\\\xd9\\xc1\\xd2\\xc6\\\\@@@@'", "ispf": {"version": "02.06", "flags": 0, "createdate": "2011-06-15T00:00:00", "modifydate": "2011-06-15T21:30:00", "lines": 99, "newlines": 99, "modlines": 0, "user": "*RAKF*"}, "text": "//VSAMLRAC JOB (RACIND),\n//             'Set RACF Indicator',\n//             CLASS=A,REGION=4M,\n//             MSGCLASS=X,\n//             MSGLEVEL=(0,0)\n//********************************************************************\n//*\n//* Name: VSAMLRAC\n//*\n//* Desc: List RACF Indicator Status of all VSAM Objects\n//*\n//********************************************************************\n//*\n//* load list awk script\n//*\n//LOADLST  EXEC PGM=IEBGENER\n//SYSPRINT DD DUMMY\n//SYSIN    DD DUMMY\n//SYSUT2   DD DSN=&&LSTAWK,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5)),\n//            DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//SYSUT1   DD *\n#\n# initialize\n#\nBEGIN {\n line = \"+-----------+--------------------------------------------+----+\"\n catalog = \"none\"\n}\n#\n# check page header for new catalog and start new table if necessary\n#\n/LISTING FROM CATALOG --/ {\n if (catalog != $6) {\n  if (catalog != \"none\") {print line}\n  catalog = $6\n  print \" \"\n  print \"Catalog: \" catalog\n  print \" \"\n  print line\n  printf(\"\u00a6%-11s\u00a6%-44s\u00a6%-4s\\n\",\"Type\",\"Name\",\"RACF\u00a6\")\n }\n}\n#\n# set entry type and name if VSAM object is found\n#\n/CLUSTER /   {type = \"Cluster\";   entry = $3}\n/0   DATA /  {type = \"Data\";      entry = $4}\n/0   INDEX / {type = \"Index\";     entry = $4}\n/PAGESPACE / {type = \"Pagespace\"; entry = $3}\n/PATH /      {type = \"Path\";      entry = $3}\n#\n# print table entry if RACF indicator is found\n#\n/RACF/ {\n racf = \"yes\"\n if (index(substr($0,index($0,\"RACF\")),\"YES\") == 0) {racf = \"no\"}\n print line\n printf(\"\u00a6%-11s\u00a6%-44s\u00a6%-3s \u00a6\\n\",type,entry,racf)\n}\n#\n# finish last table\n#\nEND {print line}\n/*\n//*\n//* list all usercatalogs\n//*\n//LISTUCAT EXEC PGM=IDCAMS\n//SYSPRINT DD DSN=&&UCAT,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(1,1))\n//SYSIN    DD *\n LISTCAT UCAT\n/*\n//*\n//* create IDCAMS 'LISTCAT ALL' commands for all catalogs\n//*\n//AMSINPUT EXEC PGM=MAWK,PARM='-f SCRIPT'\n//SCRIPT   DD *\nBEGIN           {print \" LISTCAT ALL\"}\n/0USERCATALOG / {print \" LISTCAT ALL CAT(\" $3 \")\"}\n/*\n//STDIN    DD DSN=&&UCAT,DISP=(OLD,DELETE)\n//STDOUT   DD DSN=&&CAT,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5)),\n//            DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//STDERR   DD SYSOUT=*\n//*\n//* list all entries in all catalogs\n//*\n//LISTCAT  EXEC PGM=IDCAMS\n//SYSIN    DD DSN=&&CAT,DISP=(OLD,DELETE)\n//SYSPRINT DD DSN=&&LIST,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5))\n//*\n//* print all VSAM entries with their RACF indicator status\n//*\n//LISTRACF EXEC PGM=MAWK,PARM='-f SCRIPT'\n//SCRIPT   DD DSN=&&LSTAWK,DISP=(OLD,DELETE)\n//STDIN    DD DSN=&&LIST,DISP=(OLD,DELETE)\n//STDOUT   DD SYSOUT=*\n//STDERR   DD SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VSAMSRAC": {"ttr": 2822, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x06\\x00\\x00\\x01\\x11\\x16o\\x01\\x11\\x16o!0\\x00\\xc1\\x00\\xc1\\x00\\x00\\\\\\xd9\\xc1\\xd2\\xc6\\\\@@@@'", "ispf": {"version": "02.06", "flags": 0, "createdate": "2011-06-15T00:00:00", "modifydate": "2011-06-15T21:30:00", "lines": 193, "newlines": 193, "modlines": 0, "user": "*RAKF*"}, "text": "//VSAMSRAC JOB (RACIND),\n//             'Set RACF Indicator',\n//             CLASS=A,REGION=4M,\n//             MSGCLASS=X,\n//             MSGLEVEL=(0,0)\n//********************************************************************\n//*\n//* Name: VSAMSRAC\n//*\n//* Desc: Set RACF Indicator ON or OFF for all VSAM Objects\n//*\n//********************************************************************\n//*\n//* load set awk script\n//*\n//LOADSET  EXEC PGM=IEBGENER\n//SYSPRINT DD DUMMY\n//SYSIN    DD DUMMY\n//SYSUT2   DD DSN=&&SETAWK,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5)),\n//            DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//SYSUT1   DD *\nBEGIN {\n#\n### ==> BEGIN of customization section           <==\n#\n# the setracf parameter determines the action to be taken:\n#   OFF --> turn all RACF indicators off\n#   ON  --> turn all RACF indicators on\n#\n setracf = \"OFF\"\n#setracf = \"ON\"\n#\n### ==> END of customization section             <==\n### ==> DON'T make any changes beyond this point <==\n#\n#\n# initialize\n#\n catalog = \"none\"\n}\n#\n# check page header for new catalog and\n# generate CATALOG control statement if necessary\n#\n/LISTING FROM CATALOG --/ {\n if (catalog != $6) {\n  catalog = $6\n  printf(\"CATALOG   %-44s\\n\",catalog)\n }\n}\n#\n# set entry name if VSAM object is found\n# and is not catalog data or index\n#\n/CLUSTER /   {entry = $3}\n/0   DATA /  {entry = $4}\n/0   INDEX / {entry = $4}\n/PAGESPACE / {entry = $3}\n/PATH /      {entry = $3}\n#\n# generate RACxxx control statement if RACF indicator is found\n#\n/RACF/ {\n if ((entry != \"VSAM.CATALOG.BASE.DATA.RECORD\") &&\n     (entry != \"VSAM.CATALOG.BASE.INDEX.RECORD\")) {\n  printf(\"RAC%-7s%-44s\\n\",setracf,entry)\n }\n}\n/*\n//*\n//* load list awk script\n//*\n//LOADLST  EXEC PGM=IEBGENER\n//SYSPRINT DD DUMMY\n//SYSIN    DD DUMMY\n//SYSUT2   DD DSN=&&LSTAWK,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5)),\n//            DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//SYSUT1   DD *\n#\n# initialize\n#\nBEGIN {\n line = \"+-----------+--------------------------------------------+----+\"\n catalog = \"none\"\n}\n#\n# check page header for new catalog and start new table if necessary\n#\n/LISTING FROM CATALOG --/ {\n if (catalog != $6) {\n  if (catalog != \"none\") {print line}\n  catalog = $6\n  print \" \"\n  print \"Catalog: \" catalog\n  print \" \"\n  print line\n  printf(\"\u00a6%-11s\u00a6%-44s\u00a6%-4s\\n\",\"Type\",\"Name\",\"RACF\u00a6\")\n }\n}\n#\n# set entry type and name if VSAM object is found\n#\n/CLUSTER /   {type = \"Cluster\";   entry = $3}\n/0   DATA /  {type = \"Data\";      entry = $4}\n/0   INDEX / {type = \"Index\";     entry = $4}\n/PAGESPACE / {type = \"Pagespace\"; entry = $3}\n/PATH /      {type = \"Path\";      entry = $3}\n#\n# print table entry if RACF indicator is found\n#\n/RACF/ {\n racf = \"yes\"\n if (index(substr($0,index($0,\"RACF\")),\"YES\") == 0) {racf = \"no\"}\n print line\n printf(\"\u00a6%-11s\u00a6%-44s\u00a6%-3s \u00a6\\n\",type,entry,racf)\n}\n#\n# finish last table\n#\nEND {print line}\n/*\n//*\n//* list all usercatalogs\n//*\n//LISTUCAT EXEC PGM=IDCAMS\n//SYSPRINT DD DSN=&&UCAT,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(1,1))\n//SYSIN    DD *\n LISTCAT UCAT\n/*\n//*\n//* create IDCAMS 'LISTCAT ALL' commands for all catalogs\n//*\n//AMSINPUT EXEC PGM=MAWK,PARM='-f SCRIPT'\n//SCRIPT   DD *\nBEGIN           {print \" LISTCAT ALL\"}\n/0USERCATALOG / {print \" LISTCAT ALL CAT(\" $3 \")\"}\n/*\n//STDIN    DD DSN=&&UCAT,DISP=(OLD,DELETE)\n//STDOUT   DD DSN=&&CAT,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5)),\n//            DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//STDERR   DD SYSOUT=*\n//*\n//* list all entries in all catalogs before RACIND\n//*\n//LSTBEFOR EXEC PGM=IDCAMS\n//SYSIN    DD DSN=&&CAT,DISP=(OLD,PASS)\n//SYSPRINT DD DSN=&&LIST,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5))\n//*\n//* print all VSAM entries with their RACF indicator status\n//*\n//PRTBEFOR EXEC PGM=MAWK,PARM='-f SCRIPT'\n//SCRIPT   DD DSN=&&LSTAWK,DISP=(OLD,PASS)\n//STDIN    DD DSN=&&LIST,DISP=(OLD,PASS)\n//STDOUT   DD SYSOUT=*\n//STDERR   DD SYSOUT=*\n//*\n//* create RACIND control statements\n//*\n//MAKEIND  EXEC PGM=MAWK,PARM='-f SCRIPT'\n//SCRIPT   DD DSN=&&SETAWK,DISP=(OLD,DELETE)\n//STDIN    DD DSN=&&LIST,DISP=(OLD,PASS)\n//STDOUT   DD DSN=&&RACIND,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5)),\n//            DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//STDERR   DD SYSOUT=*\n//*\n//* print RACIND control statements\n//*\n//PRINTIND EXEC PGM=IEBGENER\n//SYSPRINT DD DUMMY\n//SYSIN    DD DUMMY\n//SYSUT1   DD DSN=&&RACIND,DISP=(OLD,PASS)\n//SYSUT2   DD SYSOUT=*\n//*\n//* execute RACIND utility to set or unset RACF indicators\n//*\n//RACIND  EXEC PGM=RACIND\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DSN=&&RACIND,DISP=(OLD,DELETE)\n//*\n//* list all entries in all catalogs after RACIND\n//*\n//LSTAFTER EXEC PGM=IDCAMS\n//SYSIN    DD DSN=&&CAT,DISP=(OLD,DELETE)\n//SYSPRINT DD DSN=&&LIST,DISP=(OLD,PASS)\n//*\n//* print all VSAM entries with their RACF indicator status\n//*\n//PRTAFTER EXEC PGM=MAWK,PARM='-f SCRIPT'\n//SCRIPT   DD DSN=&&LSTAWK,DISP=(OLD,DELETE)\n//STDIN    DD DSN=&&LIST,DISP=(OLD,DELETE)\n//STDOUT   DD SYSOUT=*\n//STDERR   DD SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VTOCLRAC": {"ttr": 2817, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x06\\x00\\x00\\x01\\x11\\x16o\\x01\\x11\\x16o!0\\x00\\x16\\x00\\x16\\x00\\x00\\\\\\xd9\\xc1\\xd2\\xc6\\\\@@@@'", "ispf": {"version": "02.06", "flags": 0, "createdate": "2011-06-15T00:00:00", "modifydate": "2011-06-15T21:30:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "*RAKF*"}, "text": "//VTOCLRAC JOB (RACIND),\n//             'Set RACF Indicator',\n//             CLASS=A,REGION=4M,\n//             MSGCLASS=X,\n//             MSGLEVEL=(0,0)\n//********************************************************************\n//*\n//* Name: VTOCLRAC\n//*\n//* Desc: List RACF Indicator for all none VSAM datasets\n//*       on all online DASDs\n//*\n//********************************************************************\n//*\n//PRTVTOC EXEC PGM=IKJEFT01,DYNAMNBR=20\n//VTOCOUT  DD SYSOUT=*\n//SYSTSPRT DD DUMMY\n//SYSTSIN  DD *\nVTOC ALL LIM(DSO NE VS) P(NEW (DSN V RA)) S(RA,D,DSN,A) -\n  LIN(66) H('1RACF STATUS')\n/*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "VTOCSRAC": {"ttr": 2570, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x06\\x00\\x00\\x01\\x11\\x16o\\x01\\x11\\x16o!0\\x00\\x89\\x00\\x89\\x00\\x00\\\\\\xd9\\xc1\\xd2\\xc6\\\\@@@@'", "ispf": {"version": "02.06", "flags": 0, "createdate": "2011-06-15T00:00:00", "modifydate": "2011-06-15T21:30:00", "lines": 137, "newlines": 137, "modlines": 0, "user": "*RAKF*"}, "text": "//VTOCSRAC JOB (RACIND),\n//             'Set RACF Indicator',\n//             CLASS=A,REGION=4M,\n//             MSGCLASS=X,\n//             MSGLEVEL=(0,0)\n//********************************************************************\n//*\n//* Name: VTOCSRAC\n//*\n//* Desc: Set RACF Indicator in VTOC ON or OFF for all datasets\n//*       on all online DASDs except:\n//*       - all VSAM dataspaces\n//*       - all temporary datasets SYSnnnnn.Tnnnnnn.RAnnn\n//*       - the PASSWORD dataset\n//*\n//* Note: If DASD volumes are present in your system that should not\n//* ----- be modified (i.e. IPL and SPOOL volumes for other systems\n//*       like START1 and SPOOL0 in TK3 systems), these should be\n//*       varied offline before submitting this job.\n//*\n//********************************************************************\n//*\n//* load set awk script\n//*\n//LOADSET  EXEC PGM=IEBGENER\n//SYSPRINT DD DUMMY\n//SYSIN    DD DUMMY\n//SYSUT2   DD DSN=&&SETAWK,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5)),\n//            DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//SYSUT1   DD *\nBEGIN {\n#\n### ==> BEGIN of standard customization section   <==\n#\n# the setracf parameter determines the action to be taken:\n#   OFF --> turn all RACF indicators off\n#   ON  --> turn all RACF indicators on\n#\n setracf = \"OFF\"\n#setracf = \"ON\"\n#\n### ==> END of standard customization section     <==\n#\n# initialize\n#\n racf = \"NORACF\"\n if (setracf == \"ON\") {racf = \"RACF\"}\n}\n#\n### ==> BEGIN of extended customization section   <==\n#\n### ==> The following patterns define the         <==\n### ==> datasets to be excluded by name and would <==\n### ==> not normally need any customization.      <==\n#\n### ==> In case any need to change the exclude    <==\n### ==> list arises nonetheless, these patterns   <==\n### ==> can be amended as needed.                 <==\n#\n#\n# ignore the PASSWORD dataset AND ..\n#\n!/\u00acPASSWORD / && \\\n#\n# .. ignore temporary datasets SYSnnnnn.Tnnnnnn.RAnnn\n#\n!/\u00acSYS\u00dd0-9\u00a8\u00dd0-9\u00a8\u00dd0-9\u00a8\u00dd0-9\u00a8\u00dd0-9\u00a8\\.\\\nT\u00dd0-9\u00a8\u00dd0-9\u00a8\u00dd0-9\u00a8\u00dd0-9\u00a8\u00dd0-9\u00a8\u00dd0-9\u00a8\\.RA\u00dd0-9\u00a8\u00dd0-9\u00a8\u00dd0-9\u00a8\\./ \\\n{\n#\n### ==> END of extended customization section     <==\n### ==> DON'T make any changes beyond this point  <==\n#\n#\n# create CDSCB commands\n#\n print \"CDSCB '\" $1 \"' VOL(\" $2 \") UNIT(SYSALLDA) SHR \" racf\n}\n/*\n//*\n//* print RACF status of all none VSAM datasets on all volumes\n//*\n//PRTVTOC EXEC PGM=IKJEFT01,DYNAMNBR=20\n//VTOCOUT  DD SYSOUT=*\n//SYSTSPRT DD DUMMY\n//SYSTSIN  DD *\nVTOC ALL LIM(DSO NE VS) P(NEW (DSN V RA)) S(RA,D,DSN,A) -\n  LIN(66) H('1RACF STATUS BEFORE CHANGE')\n/*\n//*\n//* list all none VSAM datasets on all volumes for processing\n//*\n//LSTVTOC EXEC PGM=IKJEFT01,DYNAMNBR=20\n//SYSTSPRT DD DSN=&&LISTCC,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5))\n//SYSTSIN  DD *\nVTOC ALL LIM(DSO NE VS) P(NEW (DSN V)) S(DSN A) NOH\n/*\n//*\n//* remove carriage control characters\n//*\n//REMOVECC EXEC PGM=MAWK,PARM='-f SCRIPT'\n//SCRIPT   DD *\nBEGIN         {header = 1; trailer = 0}\n/\u00ac  TOTALS -/ {trailer = 1}\n              {if ((!header) && (!trailer)) print substr($0,2,80)}\n/\u00ac1VTOC ALL / {header = 0}\n/*\n//STDIN    DD DSN=&&LISTCC,DISP=(OLD,DELETE)\n//STDOUT   DD DSN=&&LIST,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5)),\n//            DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//STDERR   DD SYSOUT=*\n//*\n//* generate CDSCB commands\n//*\n//GENCDSCB EXEC PGM=MAWK,PARM='-f SCRIPT'\n//SCRIPT   DD DSN=&&SETAWK,DISP=(OLD,DELETE)\n//STDIN    DD DSN=&&LIST,DISP=(OLD,DELETE)\n//STDOUT   DD DSN=&&CDSCB,DISP=(,PASS),UNIT=VIO,SPACE=(TRK,(5,5)),\n//            DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//STDERR   DD SYSOUT=*\n//*\n//* execute CDSCB commands to change RACF indicator\n//*\n//RACIND  EXEC PGM=IKJEFT01,DYNAMNBR=20\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DSN=&&CDSCB,DISP=(OLD,DELETE)\n//*\n//* print RACF status of all none VSAM datasets on all volumes\n//*\n//PRTVTOC EXEC PGM=IKJEFT01,DYNAMNBR=20\n//VTOCOUT  DD SYSOUT=*\n//SYSTSPRT DD DUMMY\n//SYSTSIN  DD *\nVTOC ALL LIM(DSO NE VS) P(NEW (DSN V RA)) S(RA,D,DSN,A) -\n  LIN(66) H('1RACF STATUS AFTER CHANGE')\n/*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT850/CBT.V500.FILE850.PDS/RRKF006E.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT850/CBT.V500.FILE850.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}