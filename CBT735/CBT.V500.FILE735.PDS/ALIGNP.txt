/* REXX */
/*                                                                  */
/*  WRITTEN BY TOM BARTHOLD (TBARTHOLD@COMCAST.NET)                 */
/*                                                                  */
/*  THIS MACRO ALIGNS THE "THRU" IN "PERFORM" STATEMENTS            */
/*  YOU SHOULD BLOCK OUT THE LINES TO BE AFFECTED WITH "CC"         */
/*  ONLY "PERFORM" STATEMENTS ARE AFFECTED                          */
/*                                                                  */
/*  THIS MACRO IS CALLED FROM "ALIGN" MACRO TOO.                    */
/*                                                                  */
/********************************************************************/
     NEST=SYSVAR('SYSNEST')
     IF NEST = 'NO' THEN
       DO
        "ISREDIT MACRO NOPROCESS"
        "ISREDIT PROCESS RANGE C"
        END

     "ISREDIT (CMD) = RANGE_CMD"
  /*                            */
     "ISREDIT NUMBER ON STD COBOL"
     "ISREDIT (FIRST)=LINENUM .ZFRANGE"
     "ISREDIT (LAST) =LINENUM .ZLRANGE"
      CNT=LAST-FIRST+1
      MAXPOS=0
      FIL = '                                                  '
      BLANK = ' '
/*                                                    */
      IF CMD ¼= 'C' THEN
         DO
           SAY 'NO "C" LINE COMMANDS USED'
           EXIT
         END

      CUR=FIRST
      DO WHILE CUR ¼> LAST
        "ISREDIT (LV) = LINE" CUR
        WPOS = WORDPOS('THRU',LV)
        MPOS = WORDPOS('PERFORM',LV)
        IF WPOS > 0 & MPOS > 0 THEN
        DO
          TWORD = 0
          RRC = 0
          FSTWPOS = WORDINDEX(LV,1)
          BLK=SUBSTR(FIL,1,FSTWPOS-1)
          DO WHILE RRC = 0
             TWORD = TWORD + 1
             XWORD.TWORD = SUBWORD(LV,TWORD,1)
             IF XWORD.TWORD ¼> ' ' THEN RRC = 1
          END
          LDATA=BLK
          SAVETWORD = TWORD
          TWORD = 1
          DO WHILE TWORD < SAVETWORD
             LDATA=LDATA||XWORD.TWORD||BLANK
             TWORD=TWORD+1
          END
/*        SAY 'LDATA=' LDATA */
         "ISPEXEC VPUT (CUR LDATA) SHARED"
         ALIGN2
        END
        CUR = CUR + 1
     END

      CUR=FIRST
      DO WHILE CUR ¼> LAST
        "ISREDIT (LV) = LINE" CUR
        WPOS = WORDPOS('THRU',LV)
        MPOS = WORDPOS('PERFORM',LV)
        IF WPOS > 0 & MPOS > 0 THEN
        DO
          CPOS = WORDINDEX(LV,WPOS)
          IF CPOS > MAXPOS THEN
             MAXPOS = CPOS
        END
        CUR = CUR + 1
     END
/*                                                    */
      CUR=FIRST
 /*   TRACE ALL */
      DO WHILE CUR ¼> LAST
        "ISREDIT (LV) = LINE" CUR
        WPOS = WORDPOS('THRU',LV)
        MPOS = WORDPOS('PERFORM',LV)
        IF TSPLIT = 'Y' THEN
            DO
              TSPLIT = 'N'
              LV = '  '||LV
              LDATA=LV
             "ISPEXEC VPUT (CUR LDATA) SHARED"
             ALIGN2
            END
        IF WPOS > 0 & MPOS > 0 THEN
        DO
          CPOS = WORDINDEX(LV,WPOS)
          XFROM=LEFT(LV,CPOS-2)
          XTO=SUBSTR(LV,CPOS+5,65-CPOS)
          XP = MAXPOS - CPOS
          BLK=SUBSTR(FIL,1,XP)
          LDATA =  XFROM||BLK "THRU" XTO
         "ISPEXEC VPUT (CUR LDATA) SHARED"
         IF LENGTH(LDATA) > 66 THEN
            LEND = LENGTH(LDATA) - 66
         IF LENGTH(LDATA) > 66 & SUBSTR(LDATA,67,LEND) ¼> ' ' THEN
            ALIGN2
         IF LENGTH(LDATA) < 67 THEN
            ALIGN2
         IF LENGTH(LDATA) > 66 & SUBSTR(LDATA,67,LEND) > ' ' THEN
            DO
               WPOS = WORDPOS('THRU',LV)
               CPOS = WORDINDEX(LV,WPOS)
               "ISREDIT TSPLIT " CUR CPOS-1
               TSPLIT = 'Y'
               LAST=LAST+1
            END
        END
        CUR = CUR + 1
     END

     IF NEST = 'NO' THEN
        LOGIT ALIGNP

    "ISREDIT RESET"
    "ISREDIT RENUM STD COBOL"
     EXIT
