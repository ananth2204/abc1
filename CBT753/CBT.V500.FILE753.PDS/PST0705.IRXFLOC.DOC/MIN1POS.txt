 Name:        MIN1POS

 Purpose:     Determine the leftmost occurance of a series of 'scan'
              arguments within a string.

 Environment: REXX subroutine/function for all MVS/ESA environments.
              MIN1POS  is part of the system function package
              IRXFLOC as modified by Stelco.

 Features:

 Arguments:
           1. The string to be scanned.

           2 to n.  The scan values. Each of these arguments must
              be one byte long.

 Results:     The position of each of the scan values is determined.
              The minimum value (greater than zero) of those
              positions is returned.

              If none of the scan values occurs within the string,
              then the position returned is the length of the string
              plus 1.

 Errors/Warnings:

 Notes:
    Unlike the POS function, MIN1POS does not allow for a starting
    position. The equivalent can be accomplished via SUBSTR and
    arithmetic. Refer to the example.

    The prototype for MIN1POS was written as a REXX exec for
    expediency of implementation.  That prototype is no longer
    in effect.

 Examples:
    1. Extract a symbolic variable name from a JCL statement.  This
       example presumes the only valid (right) delimters for a
       symbolic variable are .  ( and &   Note that blank and comma
       are not specified with this usage of MINIPOS because the
       DELIMSTR function would have excluded those two characters.

       parse value jclstmnt(24) with ddname dd dd_ops
       dsn = delimstr(substr(dd_ops,pos('DSN=',dd_ops)+4))
       sym_pos = pos('&',dsn)+1
       sym_length = MIN1POS(substr(dsn,sym_pos),'.','&','(') - 1
       symbol = substr(dsn,sym_pos,sym_length)

       In the code above, MIN1POS calculates the length of the
       symbolic variable.
