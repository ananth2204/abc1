 Name:        SCC@DSN

 Purpose:     Determine if a specified dataset exits.

 Environment: REXX subroutine/function for all MVS/ESA environments.
              SCC@DSN resides in the IRXFLOC "function package".

 Features:    SCC@DSN extracts the catalog entry to determine the
              volume serial number. It then ensures that the dataset
              exists on that volume.

              Datasets belonging to a GenerationDataGroup are supported at
              the relative generation level.  SCC@DSN will optionally
              translate a relative level of a GDG to its absolute value.

              Uncatalogued datasets can be verified.

              A dataset which is catalogued to tape is partially
              supported. SCC@DSN does not check that the dataset
              exists on the volume.

 Arguments:   1. The dataset name as per JCL.

                 For a GenerationDataGroup, the dataset name is
                 qualified as per JCL. i.e. STP.XX00.GDG(0)

              2. (optional; use for uncatalogued datasets)
                 The volume serial number.

                 When the second argument is specified, SCC@DSN avoids
                 checking the system catalog via the LOCATE macro.

              3. (optional) variable name to which the value of the
                 volume serial number will be assigned.

              4. (optional) variable name to which the value of the
                 absolute dataset name (of a relative
                 GenerationDataGroup) will be assigned.

 Results:     0 = dataset does not exist or dataset is migrated.

              1 = dataset does exist.

              (when 3rd argument is used.) The variable is assigned
              the value of the series volume serial numbers. If the
              dataset is catalogued to multiple volumes, the series
              entries are separated by commas.

 Notes:
   MIGRATED datasets.
      Migrated datasets are supported but as per the 'tape dataset'
      feature. If the 3rd argument is coded, the value returned in
      that variable will be MIGRAT regardless of the level of
      migration.  If the dataset is migrated to tape, it will be
      considerd to exist (because SCC@DSN does not verify tape
      datasets). If the dataset is migrated to dasd, it will be
      considered to not exist.

         dsn = 'STTEST.WHATEVER'
         exist? = scc@dsn(dsn,,'VOL_SER')
         if vol_ser = 'MIGRAT' then
              say dsn 'is migrated to' word('dasd tape',exist?+1)


   If the 3rd arguement is used, ensure the variable name is enclosed
   within quotation marks so that REXX does not assign the variable's
   (pre-set) value before passing it to the function/subroutine.

   SCC@DSN was developed for a specfic jobstream where, under
   (abnormal) situations, no levels of a generation data group would
   be available to a jobstep which archives and deletes all the
   levels of the generation data group.

   SCC@DSN can be used effectively in a batch environment via the
   RC@FUNC exec to support conditional JCL.  (Note that as a
   function SCC@DSN does not set a return code but because RC@FUNC
   is an exec it does set the return code.) See example 2 below.

   If SCC@DSN is utilized to verify that a catalog entry for a disk
   dataset actually exists on the speified volume, then the second
   argument should be used to avoid re-checking the system catalog.

   Although in most situations the functionality of SCC@DSN is the
   same as SYSDSN, the following distinctions should be noted.
      SCC@DSN is independent of the host environment; SYSDSN is
      available only under address TSO.

      The dataset name for SCC@DSN is as per JCL. The dataset name
      for SYSDSN is as per TSO convention. i.e. unquoted dsn's have
      the PROFILE PREFIX applied; fully qualified dsn's must be
      enclosed within (single) quotation marks.

      SCC@DSN does not support/validate member names within a
      partiioned dataset; SYSDSN does.

      SCC@DSN validates relative generation data groups; SYSDSN
      validates generation data groups only as an absolute dataset
      name.

      SCC@DSN sets only a logical value (0 or 1) without
      'explanation' of when the dataset is not found; SYSDSN sets a
      text value which attempts to explain why the dataset was not
      found.

      SCC@DSN will validate a dataset name regardless of the system
      catalog via the second (volser) argument; SYSDSN will only
      validate a catalogued dataset name.

      SCC@DSN determines the migration level of a dataset; SYSDSN will
      cause a migrated dataset to be recalled.

 Examples:
   1. Allocate to a dataset if it exists
          if scc@dsn(userid()'.CLIST') then
               call sccalloc 'CLISTDD', userid()'.CLIST'

   2. Batch JCL to execute a step if a dataset exists
          //SETCC  EXEC  PGM=IRXJCL,
          //             PARM='RC@FUNC SCC@DSN("STP.XX00.D2")
          //    INCLUDE  MEMBER=SYSEXEC
          //         IF  (SETCC.RUN & SETCC.RC = 1) THEN
          //RUN    EXEC  PGM=STXX000
          //HISTORY  DD  DISP=SHR,DSN=STP.XX00.D2
          //RPT001OT DD  SYSOUT=(,)
          //       ENDIF






