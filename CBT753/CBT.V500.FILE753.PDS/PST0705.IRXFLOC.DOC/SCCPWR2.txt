 Name:        SCCPWR2

 Purpose:     Calculate the next higher power of 2 from a
              specified number.

 Environment: REXX subroutine/function for all MVS/ESA environments.
              SCCD2O resides in the IRXFLOC "function package".

 Arguments:
           1. The number for which the next higher power of 2
              is to be calculated.

 Results:     The lowest power of 2 which is greater than the argument.

 Notes:
    SCCPWR2 is useful to the program which must perform a binary search.
    A binary search for a REXX programs implies that a stemmed variable
    has been loaded with a series of unique and sequenced values.
    SCCPDSD creates such a table.

    An efficient binary search has a 'do loop' which iterates the power of 2
    times. Use the  FACTORS  function to determine that iteration count.

 Example: This example is used to demonstrate how to perform a binary search.
          It is not necessarily a good example of how to use  SCCPDSD.

         parse upper arg ddname member_list
         call sccpdsd ddname, '*', 'D.0'
         max_entries = sccpwr2(d.0)
         mid_point = max_entries / 2
         parse value factors(max_entries) with 4 loop_count
         m.0 = 'does not exist'
         m.1 = 'exists'
         do while member_list \= ''
              parse var member_list member member_list
              nay-yea = binary_search(member)
              say member m.nay_yea 'in the ddname' ddname'.'
         end
         exit
         Binary_search:
              incr_decr = mid_point
              point = mid_point
              do loop_count
                   ? = left(d.point,8)
                   incr_decr = mid_point / 2
                   select
                        when point > d.0 then point = point - incr_decr
                        when arg(1) == ? then return 1
                        when arg(1) > ?  then point = point + incr_decr
                        otherwise             point = point - incr_decr
                   end
              end
            return 0
