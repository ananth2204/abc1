 Name:        DELIMSTR

 Purpose:     Extract the string whose (right) delimiter is
              determined by the left character of the input string.

 Environment: REXX subroutine/function for all MVS/ESA environments.
              DELIMSTR is part of the system function package
              IRXFLOC as modified by Stelco.

 Features:    If the input string has an unbalanced right delimiter,
              the result is padded with balancing characters.

 Arguments:
           1. The string from which the delimited string is to be
              extracted. The leftmost character of that string
              determines the (expected) right delimiter.

              If the (input) string begins with other than a single
              quote, a double quote, or a left parenthesis; the
              delimiting character is the first occurance of a
              comma, a blank, or the end of the input string.  For
              such a string, the right deimiter is not included in
              DELIMSTR's result.

              If the (input) string begins with a quote (single or
              double), DELIMSTR will return a quoted string.
              Quoted strings can contain embedded two-for-one
              quotes. If a balancing quote is not found in the
              input, one is generated in the result.

              If the (input) string begins with a left parenthesis,
              DELIMSTR will extract the string up to the balancing
              right parenthesis.  If the parenthetical string itself
              contains a quoted string, the quoted string is
              honoured as described above. (Parenthesis within the
              quoted string are excluded from the balancing
              algorithm.)  If a balancing right parentheses are not
              found in the input, they are generated in the result.

 Results:     The extracted string padded as necessary.

 Errors/Warnings:

 Notes:
    An input string beginning with a blank or a comma will result in
    a null string.

    DELIMSTR was designed for (and is recommended for) parsing the
    subparameters of JCL statements. This includes JOB, EXEC and DD
    statements but care must be taken when the input string does
    not conform to JCL syntax; see the example below.

 Examples:
    1. Extract the SPACE parameter of a DD statement string.

       dd_statement = jclstmnt(thisline)
       parse var dd_statement . dd dd_operands
       if dd \= 'DD' then do; say 'Not a DD'; exit; end
       @space = pos('SPACE=',dd_operands)
       if @space = 0 then do; say 'No SPACE'; exit; end
       space = delimstr(substr(dd_operands,@space+6))
       if length(space) > length(substr(dd_operands,@space+6)) then
         do
            say 'SPACE operand contains unbalanced parens.'
            exit
         end
