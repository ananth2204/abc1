/*  REXX                                                              */
/**********************************************************************/
/*  MODULE  = BADVSAM    (Finds VSAM components defined with obsolete */
/*                        parameters - IMBED, REPLICAT, KEY RANGE)    */
/*                                                                    */
/*  PURPOSE:                                                          */
/*  Rexx BADVSAM uses program IGGCSI00 to find VSAM Datasets defined  */
/*  with IMBED, REPLICATE, AND KEYRANGE.                              */
/*                                                                    */
/*  This exec should be executed in batch mode.                       */
/**********************************************************************/
version_level = "V01.01.07"

   work_area  = '00002000'x || copies('00'x,8192-4)
   badvsam_cnt = 0
   call find_user_catalog_names
   do k = 1 to user_catalogs.0
      say 'Processing ICF Catalog' user_catalogs.k
      call process_user_catalog
      say ' '
   end
say ;
say "Total Number of VSAM Components Containing Obsolete Parameters",
    "=>" badvsam_cnt
say ;
exit
process_user_catalog :
   true = 1; false = 0
   finished = false
   modrsnrc = substr(' ',1,4)
   CSI_field = copies(' ',200)
   CSI_field = overlay('**',1)                        /* csifiltk   */
   CSI_field = overlay(user_catalogs.k,CSI_field,45)  /* csicatnm   */
   CSI_field = overlay('C',CSI_field,133)             /* csisdtyps  */
   CSI_field = overlay('Y',CSI_field,151)             /* csis1cat   */
   CSI_field = overlay('0001'x,CSI_field,153)         /* csinumen   */
   CSI_field = overlay('VSAMTYPE',CSI_field,155)      /* csifldnm 1 */
   address linkpgm 'IGGCSI00  modrsnrc  CSI_field work_area'
   csiusdln = c2d(substr(work_area,9,4))       /* used length */
   csicflg  = substr(work_area,15,1)
   if csicflg <> '00'x then
      signal ERROR
   csiresum = substr(CSI_field,150,1)
   i = 65   /* skip catalog info */
   do until finished
      dataset_type = substr(work_area,i+1,1)
      dataset_name = strip(substr(work_area,i+2,44),'T')
      csieflg = substr(work_area,i,1)
      if csieflg > 'BF'x then  /* error indicator */
         i = i +46 + 4
      else
         do
            if c2d(substr(work_area,i+46,2)) <> 8 then
               do
                  say 'ERROR value of i is 'i
                  say substr(work_area,i,60)
                  say c2x(substr(work_area,i,60))
                  signal ERROR
               end
            if dataset_type <> 'C' then  /* will be D or I */
               do
                  VSAM_info = substr(work_area,i+46+6,1)
                  if bitand(VSAM_info,'34'x) > '00'x then
                     do
                        say '      ' dataset_name
                        badvsam_cnt = badvsam_cnt + 1
                        if bitand(VSAM_info,'20'x) > '00'x then
                           say '       .......Imbed'
                        if bitand(VSAM_info,'10'x) > '00'x then
                           say '       .......Replicate'
                        if bitand(VSAM_info,'04'x) > '00'x then
                           say '       .......Keyrange'
                     end
               end
            i = i + 46 + 8
         end
      if i > csiusdln then  /* at the end of the returned info */
         do
            if csiresum <> 'Y' then
               finished = true
            else
               do /* get the next control blocks worth */
               address linkpgm 'IGGCSI00  modrsnrc  CSI_field work_area'
                  csiusdln = c2d(substr(work_area,9,4))
                  csicflg  = substr(work_area,15,1)
                  if csicflg <> '00'x then
                     signal ERROR
                  csiresum = substr(CSI_field,150,1)
                  i = 65
               end
         end
   end
return
find_user_catalog_names : procedure expose user_catalogs. work_area
   catname = master_catalog()
   modrsnrc = substr(' ',1,4)
   CSI_field = copies(' ',200)
   CSI_field = overlay('**',CSI_field,1)          /* csifiltk   */
   CSI_field = overlay(catname,CSI_field,45)      /* csicatnm   */
   CSI_field = overlay('U',CSI_field,133)         /* csisdtyps  */
   CSI_field = overlay('Y',CSI_field,151)         /* csis1cat   */
   CSI_field = overlay('0000'x,CSI_field,153)     /* csinumen   */
   address linkpgm 'IGGCSI00  modrsnrc  CSI_field work_area'
   csiusdln = c2d(substr(work_area,9,4))      /* used length */
   csicflg  = substr(work_area,15,1)
   if csicflg <> '00'x then
      signal ERROR
   i = 65
   k = 0
   do until i > csiusdln  /* this assumes all fit in the work area */
      k = k + 1
      user_catalogs.k = strip(substr(work_area,i+2,44),T)
      i = i + 46 + c2d(substr(work_area,i+46,2))
   end
   user_catalogs.0 = k
return
master_catalog : procedure expose work_area
   modrsnrc = substr(' ',1,4)
   CSI_field = copies(' ',200)
   CSI_field = overlay('SYS1.LINKLIB',CSI_field,1) /* csifiltk   */
   CSI_field = overlay('A',CSI_field,133)          /* csisdtyps  */
   CSI_field = overlay('Y',CSI_field,151)          /* csis1cat   */
   CSI_field = overlay('0000'x,CSI_field,153)      /* csinumen   */
   address linkpgm 'IGGCSI00  modrsnrc  CSI_field work_area'
   csicflg  = substr(work_area,15,1)
   if csicflg <> '00'x then
      signal ERROR
return (strip(substr(work_area,17,44),T))
Error: Return
