/*  REXX                                                              */
/**********************************************************************/
/*  MODULE  = REORGVS4   (Recreate a VSAM Cluster - Used with the     */
/*                        REORGVS exec).                              */
/*                                                                    */
/*  #¢# AUTHOR             TKMILLE                                    */
/*  #¢# CREATED            TKMILLE 01/05/2006                         */
/*  #¢# LAST UPDATE        TKMILLE 09/16/2008                         */
/*                                                                    */
/*  PURPOSE = This exec will input a Racf LISTDSD command for a file  */
/*            and will parse out the appropriate parameters to        */
/*            produce the RACF Commands to recreate a discrete Racf   */
/*            profile for the file after it is deleted and            */
/*            reallocated.                                            */
/*                                                                    */
/*            If there is no Racf profile for the dataset or if a     */
/*            profile exists but it is not a discrete dataclass       */
/*            profile, nothing will be generated since the profile    */
/*            will not be disturbe when the file is deleted.          */
/*                                                                    */
/*            Input File SYSPRINT must be preallocated prior to the   */
/*            execution of this exec.                                 */
/*                                                                    */
/*            Output File COMMANDS must be preallocated prior to the  */
/*            execution of this exec.                                 */
/*                                                                    */
/*            The output of this exec will be a stream the following  */
/*            RACF Commands:                                          */
/*                                                                    */
/*              ADDSD 'PROFILE NAME' UACC(uaccess) AUDIT(auditinfo)   */
/*                    OWNER(ownerid) [NOTIFY(notify id)]              */
/*                                                                    */
/*              ALTDSD 'PROFILE NAME' OWNER(ownerid)                  */
/*                                                                    */
/*              PERMIT 'PROFILE NAME' ID(groups and userids) +        */
/*                     ACCESS(access levels)                          */
/*                                                                    */
/*              PERMIT 'PROFILE NAME' ID(submit userid)   DELETE      */
/*                                                                    */
/*                                                                    */
/*  PARMS:                                                            */
/*  (Required Parms):                                                 */
/*                                                                    */
/*          None                                                      */
/*                                                                    */
/*  (Optional Parms):                                                 */
/*                                                                    */
/*          DEBUG  =      The parameter which displays the statements */
/*                        as they are executed.                       */
/*                                                                    */
/*  Modifications/Tailoring:                                          */
/*                                                                    */
/*  Make the following modification before storing this Rexx exec.    */
/*                                                                    */
/*  1)        Change the length of "sysid" to your specification.     */
/*            The default is 3 characters if this is not              */
/*            modified.                                               */
/*                                                                    */
/*                                                                    */
/*  Return Codes:                                                     */
/*                                                                    */
/*    0   - Successful execution of the exec                          */
/*   12   - Invalid SYSPRINT input file or SYSPRINT file was not      */
/*          preallocated or Invalid COMMANDS output file or the file  */
/*          was not preallocated.                                     */
/*                                                                    */
/**********************************************************************/
version_level = "V01.01.08"
Arg parms
Trace "O"

debug    = ""
Do i = 1 to words(parms)
         If ABBREV("DEBUG",word(parms,i),3) = 1  then Do
            debug = "DEBUG"
            parms = DELWORD(parms,i,1)
            i = i - 1
            iterate
         End
End
If debug = "DEBUG"  then Do
   Trace "I"
End

userid                     = Userid()
rtcd                       = 0
sysid                      = Left(MVSVAR(sysname),3," ")
cmd_count                  = 0
input_count                = 0
output_count               = 0
had_p3                     = ""
had_p4                     = ""
had_p5                     = ""
had_p7                     = ""
had_p9                     = ""
had_p10                    = ""
had_p12                    = ""
had_p14                    = ""
had_std_access_entries     = ""
had_cnd_access_entries     = ""
end_std_access_list        = ""
end_cnd_access_list        = ""
ii                         = 0
jj                         = 0
kk                         = 0
uacc_line_count            = -99
audit_line_count           = -99
notify_line_count          = -99
your_access_line_count     = -99
global_audit_line_count    = -99
volumes_resides_line_count = -99
std_access_list_line_count = -99
cnd_access_list_line_count = -99


Read_SYSPRINT_Loop:

input_count = input_count + 1

"EXECIO 1 DISKR SYSPRINT (STEM sysprint. "
execiorc     = rc
If execiorc  = 2   Then Do       /* On end of file - Finish up  */
   input_count = input_count - 1
   Signal Print_Racf_Information
End

If execiorc <> 0   Then Do
   Say ;
   Say "Error executing the EXECIO DISKR Rexx command for file",
       "SYSPRINT !!!"
   Say "File SYSPRINT was not properly preallocated or is invalid"
   Say "Input I/O count is " input_count
   Say "EXECIO Return Code is "execiorc" !!!"
   Say "Exec REORGVS4 is Terminated Prematurely     ..."
   rtcd = 12
   Signal End_up
End

p1  = POS("NO RACF DESCRIPTION FOUND",sysprint.1)
If p1  > 0                                         Then ,
   Signal End_Up

p2  = POS("INFORMATION FOR DATASET",sysprint.1)
If p2  > 0                                         Then Do
   dsn  = SUBSTR(sysprint.1,p2 + 24,44)
   dsn  = STRIP(WORD(dsn,1))
   p3  = POS(" (G) ",sysprint.1)
   If p3 > 0                                       Then Do
      /* If this is not a discrete Racf profile, exit this exec  */
      Say ;
      Say "Dataset '"||STRIP(dsn)||"' has a Generic Racf Profile"
      Say "The Racf Profile was unaffected by the reorganization"
      Say ;
      Signal End_Up
   End
   Else Do
      Call   Initialize_Variables
      dsn  = SUBSTR(sysprint.1,p2 + 24,44)
      dsn  = STRIP(WORD(dsn,1))
      Signal Read_SYSPRINT_Loop
   End
End

p3  = POS(" UNIVERSAL ACCESS ",sysprint.1)
If p3  > 0                                         Then Do
   had_p3  = "Y"
   uacc_line_count = input_count
   Signal Read_SYSPRINT_Loop
End

If had_p3  = "Y" & ,
   (input_count = uacc_line_count + 2)             Then Do
       ownerid = WORD(sysprint.1,2)
       uacc    = WORD(sysprint.1,3)
       Signal Read_SYSPRINT_Loop
End

p4  = POS("AUDITING",sysprint.1)
If p4  > 0                                         Then Do
   had_p4  = "Y"
   audit_line_count = input_count
   Signal Read_SYSPRINT_Loop
End

If had_p4  = "Y" & ,
   (input_count = audit_line_count + 2)            Then Do
       audit_lit  = WORD(sysprint.1,1)
       Signal Read_SYSPRINT_Loop
End

p5  = POS("NOTIFY",sysprint.1)
If p5  > 0                                         Then Do
   had_p5  = "Y"
   notify_line_count = input_count
   Signal Read_SYSPRINT_Loop
End

If had_p5  = "Y" & (input_count = notify_line_count + 2 ) Then Do
   p6  = POS("NO USER TO BE NOTIFIED",sysprint.1)
   If p6  = 0                                      Then Do
      notify_id   = WORD(sysprint.1,1)
   End
   Signal Read_SYSPRINT_Loop
End

p7  = POS("YOUR ACCESS  CREATION",sysprint.1)
If p7  > 0                                         Then Do
   had_p7  = "Y"
   your_access_line_count     = input_count
   Signal Read_SYSPRINT_Loop
End

/* If this is not a discrete Racf profile, exit this exec          */

If had_p7  = "Y" & (input_count = your_access_line_count + 2 ) Then Do
   p8  = POS(" MODEL ",sysprint.1)
   If p8  > 0                                      Then Do
      Say ;
      Say "Dataset '"||STRIP(dsn)||"' has a Model Racf Profile"
      Say "The Racf Profile was unaffected by the reorganization"
      Say ;
      Signal End_Up
   End
   Else Do
      your_access  = WORD(sysprint.1,1)
      Signal Read_SYSPRINT_Loop
   End
End

p9  = POS("GLOBALAUDIT",sysprint.1)
If p9  > 0                                         Then Do
   had_p9  = "Y"
   global_audit_line_count = input_count
   Signal Read_SYSPRINT_Loop
End

If had_p9  = "Y" & ,
   (input_count = global_audit_line_count + 2 )    Then Do
      global_audit_lit   = WORD(sysprint.1,1)
      Signal Read_SYSPRINT_Loop
End

p10 = POS("VOLUMES ON WHICH DATASET RESIDES",sysprint.1)
If p10 > 0                                         Then Do
   had_p10 = "Y"
   volumes_resides_line_count = input_count
   Signal Read_SYSPRINT_Loop
End

If had_p10 = "Y" & ,
   (input_count = volumes_resides_line_count + 2 ) Then Do
   p11 = POS("NO VOLUMES IN DATASET PROFILE",sysprint.1)
   If p11 > 0                                      Then ,
      Signal End_Up
   Else Do
      volser = WORD(sysprint.1,1)
      Signal Read_SYSPRINT_Loop
   End
End

p12 = POS("   ID     ACCESS",sysprint.1)
If p12 > 0                                         Then Do
   had_p12 = "Y"
   std_access_list_line_count = input_count
   Signal Read_SYSPRINT_Loop
End

p14 = POS("   ID    ACCESS",sysprint.1)
If p14 > 0                                         Then Do
   had_p14 = "Y"
   cnd_access_list_line_count = input_count
   Signal Read_SYSPRINT_Loop
End

If had_p12 = "Y" & end_std_access_list = "" & ,
   (input_count > std_access_list_line_count + 1 )       Then Do
      p13 = POS("NO ENTRIES IN STANDARD ACCESS LIST",sysprint.1)
      Select
         When p13 > 0                                    Then Do
            /* No entries in the Standard Access List     */
            had_std_access_entries = "N"
            end_std_access_list    = "Y"
            Signal Read_SYSPRINT_Loop
         End
         When SUBSTR(sysprint.1,2,30) = Copies(" ",30)   Then Do
            /* End of Standard Access List Entries */
            end_std_access_list    = "Y"
            Signal Read_SYSPRINT_Loop
         End
         Otherwise Do
            /* Add the next Standard Access List Entry  */
            had_std_access_entries = "Y"
            ii         = ii + 1
            std_id.ii      = WORD(sysprint.1,1)
            std_access.ii  = WORD(sysprint.1,2)
            Signal Read_SYSPRINT_Loop
         End
      End
End

If had_p14 = "Y" & end_cnd_access_list = "" & ,
   (input_count > cnd_access_list_line_count + 1 )       Then Do
      p15 = POS("NO ENTRIES IN CONDITIONAL ACCESS LIST",sysprint.1)
      Select
         When p15 > 0                                    Then Do
            /* No entries in the Conditional Access List  */
            had_cnd_access_entries = "N"
            end_cnd_access_list    = "Y"
            Signal Read_SYSPRINT_Loop
         End
         When SUBSTR(sysprint.1,2,30) = Copies(" ",30)   Then Do
            /* End of Conditional Access List Entries */
            end_cnd_access_list    = "Y"
            Signal Read_SYSPRINT_Loop
         End
         When WORD(sysprint.1,1) = "READY"               Then Do
            /* End of Conditional Access List Entries */
            end_cnd_access_list    = "Y"
            Signal Read_SYSPRINT_Loop
         End
         When WORD(sysprint.1,1) = "END"                 Then Do
            /* End of Conditional Access List Entries */
            end_cnd_access_list    = "Y"
            Signal Read_SYSPRINT_Loop
         End
         Otherwise Do
            /* Add the next Conditional Access List Entry  */
            had_cnd_access_entries = "Y"
            jj             = jj + 1
            cnd_id.jj      = WORD(sysprint.1,1)
            cnd_access.jj  = WORD(sysprint.1,2)
            cnd_class.jj   = WORD(sysprint.1,4)
            cnd_entity.jj  = WORD(sysprint.1,5)
            Signal Read_SYSPRINT_Loop
         End
      End
End

Signal Read_SYSPRINT_Loop


Print_Racf_Information:


/*****  Display Results  *******************************************/

Say ;
Say "Dataset '"||STRIP(dsn)||"' has a Discrete Racf Profile"
Say "  The Discrete profile will be re-created ...         "
Say ;
Say "DATASET NAME     =" dsn
Say "OWNER            =" ownerid
Say "UACC             =" uacc
Say "YOUR USERID      =" userid
Say "YOUR ACCESS      =" your_access
Say "RACF VOLSER      =" volser
Say "AUDITING         =" audit_lit
Say "NOTIFY           =" notify_id
Say "GLOBALAUDIT      =" global_audit_lit

If had_std_access_entries = "Y"                        Then Do
   Say ;
   Say ii||" Entries in the Standard Access List:"
   Say ;
End
Else Do
   Say ;
   Say "No Entries in the Standard Access List"
   Say ;
End

If had_std_access_entries = "Y"                        Then ,
   Do kk = 1 to ii
       Say "Std Access Id =>" LEFT(std_id.kk,8," ")||"   "||,
           "Access Level =>" LEFT(std_access.kk,10," ")
End

If had_cnd_access_entries = "Y"                        Then Do
   Say ;
   Say jj||" Entries in the Conditional Access List:"
   Say ;
End
Else Do
   Say ;
   Say "No Entries in the Conditional Access List"
   Say ;
End

If had_cnd_access_entries = "Y"                        Then ,
   Do kk = 1 to jj
       Say "Cnd Access Id => "||LEFT(cnd_id.kk,8," ")||"  "||,
           "Access Level => "||LEFT(cnd_access.kk,8," ")||"  "||,
           "Class => "||LEFT(cnd_class.kk,10," ")
       Say "       Entity => "||LEFT(cnd_entity.kk,10," ")
End

/*****  End Display ************************************************/


Output_Racf_Commands:

commands.1 = " ADDSD  '"||STRIP(dsn)||"' UACC("||STRIP(uacc)||")    +"
Call Output_A_Racf_Record

commands.1 = "        AUDIT("||audit_lit||") OWNER("||ownerid||")"
Call Output_A_Racf_Record

commands.1 = " ALTDSD '"||STRIP(dsn)||"' OWNER("||ownerid||")"
Call Output_A_Racf_Record

If had_std_access_entries = "Y"                        Then ,
   Do kk = 1 to ii
     commands.1 = " PERMIT '"||STRIP(dsn)||"' ID("||,
                  STRIP(std_id.kk)||") ACCESS("||,
                  STRIP(std_access.kk)||")"
     Call Output_A_Racf_Record
End

If had_cnd_access_entries = "Y"                        Then ,
   Do kk = 1 to jj
     commands.1 = " PERMIT '"||STRIP(dsn)||"' ID("||,
                  STRIP(cnd_id.kk)||") ACCESS("||,
                  STRIP(cnd_access.kk)||")    +"
     Call Output_A_Racf_Record

     commands.1 = "      WHEN("||STRIP(cnd_class.kk)||"("||,
                  STRIP(cnd_entity.kk)||"))"
     Call Output_A_Racf_Record
End

commands.1 = " PERMIT '"||STRIP(dsn)||"'"||,
             " ID("||LEFT(userid,8," ")||") DELETE"
Call Output_A_Racf_Record

Say ;
Say "Number of Racf Command Lines Output =>" output_count
Say ;

Signal End_Up


Initialize_Variables:

had_p3                     = ""
had_p4                     = ""
had_p5                     = ""
had_p7                     = ""
had_p9                     = ""
had_p10                    = ""
had_p12                    = ""
had_p14                    = ""
had_std_access_entries     = ""
had_cnd_access_entries     = ""
end_std_access_list        = ""
end_cnd_access_list        = ""
ii                         = 0
jj                         = 0
kk                         = 0
dsn                        = ""
ownerid                    = ""
uacc                       = ""
your_access                = ""
volser                     = ""
audit_lit                  = ""
notify_id                  = ""
global_audit_lit           = ""
uacc_line_count            = -99
audit_line_count           = -99
notify_line_count          = -99
your_access_line_count     = -99
global_audit_line_count    = -99
volumes_resides_line_count = -99
std_access_list_line_count = -99
cnd_access_list_line_count = -99

Return


Output_A_Racf_Record:

output_count = output_count + 1

commands.1 = LEFT(commands.1,80," ")

"EXECIO 1 DISKW COMMANDS (STEM commands. "
execiorc     = rc
If execiorc <> 0   Then Do
   Say ;
   Say "Error executing the EXECIO DISKW Rexx command for file",
       "COMMANDS !!!"
   Say "File COMMANDS was not properly preallocated or invalid",
       "or an I/O error was encountered"
   Say "Output I/O count is " output_count
   Say "EXECIO Return Code is "execiorc" !!!"
   Say "Exec REORGVS4 is Terminated Prematurely     ..."
   rtcd = 12
   Signal End_up
End

Return


End_Up:

"EXECIO 0 DISKR SYSPRINT (FINIS"
commands.1   = "  "
"EXECIO 1 DISKW COMMANDS (STEM commands."
"EXECIO 0 DISKW COMMANDS (FINIS"

Say ;
Say "REORGVS4 Exec - Generate RACF Commands ..."
Say ;
Say "version_level                =>" version_level
Say ;
Say "REORGVS4 exec return code is   " rtcd
Say ;

Return rtcd
