/* REXX      DYNALC                                                   */
/**********************************************************************/
/* MODULE  = DYNALC                                                   */
/*                                                                    */
/* #¢# AUTHOR                   TERRY MILLER  01/27/2006              */
/*                                                                    */
/*  PURPOSE = Dynamic allocation of a DASD dataset to a ddname.       */
/*                                                                    */
/*  This exec dynamically allocates a dataset to a particular         */
/*  DDNAME with a given disposition.  This exec does not allow        */
/*  more than one dataset to be concatenated to a ddname for          */
/*  allocation.                                                       */
/*                                                                    */
/*  If the allocation fails on the first attempt, the exec will       */
/*  attempt to allocate the dataset up to the number of times         */
/*  specified in the ATTEMPTS parameter.  An attempt will be made     */
/*  at the interval specified in the INTERVAL parameter (in seconds). */
/*  The minimum interval value is 3 seconds.  The total elapsed       */
/*  duration time cannot exceed 90 minutes (5400 seconds).            */
/*                                                                    */
/*  If the allocation is successful, the variable "rc" is set to 0.   */
/*  See the various return codes below.                               */
/*                                                                    */
/*  INPUT PARMS:                                                      */
/*                                                                    */
/*   DD(ddname)     = The ddname to be allocated.  If this parameter  */
/*                    is omitted, the ddname will default to DUMMY.   */
/*                                                                    */
/*   DA(dsname)     = The dataset name to be allocted to the          */
/*                    ddname.  The dataset name should be             */
/*                    fully qualified, but does not need to be        */
/*                    enclosed in tics.  If this parameter is         */
/*                    omitted, the dsname will default to NULLFILE.   */
/*                                                                    */
/*   DISP(SHR/MOD/OLD/ = The disposition to be used for the           */
/*        NEW)           allocation.  If this parameter is omitted,   */
/*                       the dispostion (status) will default to SHR. */
/*                       If the DISP(NEW) is specified, the allocation*/
/*                       will be made with 5 primary cylinders and    */
/*                       5 secondary cylinders.                       */
/*                                                                    */
/*   INTERVAL(nnn)  = The number of seconds to wait between           */
/*                    allocation attempts (if the dataset is          */
/*                    not allocated on the first attempt).  If this   */
/*                    paramter is omitted, the default interval will  */
/*                    be 3 seconds.  Also, if the INTERVAL value      */
/*                    passed is less than 3 seconds, it will be reset */
/*                    to 3 seconds.                                   */
/*                                                                    */
/*   ATTEMPTS(nnn)  = The number of attemptsn portion of the          */
/*                    DSNAME(relgen) passed as an input parm.  If     */
/*                    this parameter is omitted, it will default to   */
/*                    1 attempt.  (The result of (INTERVALS*ATTEMPTS) */
/*                    cannot exceed 5400 seconds (90 minutes).        */
/*                                                                    */
/*   DEBUG          = The parameter which causes an interactive trace */
/*                    of one exec statement at a time.                */
/*                                                                    */
/*   OUTPUT PARMS:                                                    */
/*                                                                    */
/*   rc       = Return Code from the DYNALC function.  Values are:    */
/*                                                                    */
/*      0 - Successful call to DYNALC                                 */
/*     10 - The dataset to be allocated is not cataloged if the       */
/*          disposition is SHR, MOD, or OLD.  If the disposition is   */
/*          NEW, the dataset already exists.                          */
/*     11 - The DDNAME is invalid (more than 8 characters)            */
/*     12 - An invalid disposition was passed                         */
/*     13 - The INTERVAL parameter is more than 6 digits in length    */
/*          or is not numeric                                         */
/*     14 - The ATTEMPTS parameter is more than 6 digits in length    */
/*          or is not numeric                                         */
/*     15 - The elapsed time allowed for allocation exceeds the limit */
/*          of 90 minutes (5400 seconds).                             */
/*     16 - If the allocation failed after the specified number of    */
/*          times (ATTEMPTS) requested.                               */
/*                                                                    */
/*  EXECUTION:  This exec can be called by another REXX exec or by a  */
/*              clist, or as a stand-alone command.                   */
/*                                                                    */
/*  If this exec is called by a clist, the return code will be        */
/*  contained in the &LASTCC variable.  If it is called by a REXX     */
/*  exec, it will be contained in the rc variable.                    */
/*                                                                    */
/*  Example CLIST Call:                                               */
/*    DYNALC DD(DD1) DA(MY.DSN) DISP(SHR) INTERVAL(5) ATTEMPTS(2)     */
/*    IF &LASTCC ¬= 0 THEN GOTO ERRORRTN                              */
/*                                                                    */
/*  Example REXX Call:                                                */
/*    "DYNALC DD(DD1) DA(MY.DSN) DISP(SHR) INTERVAL(5) ATTEMPTS(2)"   */
/*    If rc ¬= 0 then signal ERRORRTN                                 */
/*                                                                    */
/**********************************************************************/
version_level = "V01.01.01"
Arg parms
Trace "O"
msg_stat = Msg("OFF")

Get_parms:
debug    = ""
Do I = 1 to words(parms)
         If word(parms,I) = "DEB"       then debug    = "DEBUG"
    Else If word(parms,I) = "DEBU"      then debug    = "DEBUG"
    Else If word(parms,I) = "DEBUG"     then debug    = "DEBUG"
end
If debug = "DEBUG"  then  Trace "?I"

parse var parms  "DD(" dd ")"
If dd    = ""    then dd = "DUMMY"

parse var parms  "DA(" da ")"
If da    = ""    then da = "NULLFILE"
da       = Strip(da,both,"'")            /* remove enclosed ticks   */
da       = Strip(da,both,'"')            /* remove double   ticks   */

parse var parms  "DISP(" disp ")"
If disp  = ""    then disp = "SHR"

parse var parms  "INTERVAL(" interval ")"
If interval = ""    then interval = 3

parse var parms  "ATTEMPTS(" attempts ")"
If attemtps = ""    then attempts = 1

rtcd     = 0
allocnt  = 0
elapsed  = 0
waitint  = 0

Check_dsn_existence:
/*  See if the dataset is cataloged                                  */
catlged  = Sysdsn("'"da"'")

If disp   = "NEW"  then ,
     If (catlged = "OK"  |  catlged = "UNAVAILABLE DATASET")   then do
        rtcd = 10
        Signal Endup
     end
     Else Nop
Else If (catlged ¬= "OK"  &  catlged ¬= "UNAVAILABLE DATASET")  then do
        rtcd = 10
        Signal Endup
     end

If length(dd) > 8  then do
   rtcd = 11
   Signal Endup
end

Select
   When disp    = "SHR"                         then Nop
   When disp    = "OLD"                         then Nop
   When disp    = "MOD"                         then Nop
   When disp    = "NEW"                         then Nop
   Otherwise  do
      rtcd = 12
      Signal Endup
   end
end

If datatype(interval,"W") = 0  |  length(interval) > 6  then do
   rtcd = 13
   Signal Endup
end

If interval < 3 then interval = 3

If datatype(attempts,"W") = 0  |  length(attempts) > 6  then do
   rtcd = 14
   Signal Endup
end

If attemtps < 1 then attemtps = 1

elapsed    = ((attempts - 1) * interval)

If elapsed > 5400  then do   /* Total elapsed time cannot be > than */
   rtcd = 15                 /* 5400 seconds (90 minutes)           */
   Signal Endup
end

Go_allocate:
allocnt = allocnt + 1

If disp  = "NEW"   then
     "ALLOC FI("dd") DA('"da"') REUSE SP(05,05) CYLINDERS" disp
Else "ALLOC FI("dd") DA('"da"') REUSE" disp

alloccc  = rc

If alloccc = 0   then Signal Endup
If disp  = "NEW" then Signal Endup

If allocnt >= attempts then do   /* If the allocated count is > than  */
   rtcd     = 16                 /* the # of attempts specified,      */
   Signal Endup                  /* discontinue trying to allocate.   */
end                              /* Set the rc for allocation failure.*/

If allocnt  = 1  then do     /* Convert the wait interval to HHMMSS   */
    waithh  = interval % 3600
    waitmm  = (interval - (waithh * 3600)) % 60
    waitss  = interval  - (waithh * 3600) - (waitmm * 60)
    waithh  = Right(waithh,2,'0')
    waitmm  = Right(waitmm,2,'0')
    waitss  = Right(waitss,2,'0')
    waitint = waithh||waitmm||waitss
end

"CALL '$XXXXXXXX.$REORGVS.LOADLIB(WAITFOR)' '"waitint"'"

Signal Go_allocate            /*  again to allocate the dataset.   */

Endup:
Return rtcd
