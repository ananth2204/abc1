//REORGVSS JOB ' REORGVS JCL                                   ',
//     TIME=(2,00),REGION=0M
//**********************************************************************
//*  INSERT YOUR INSTALLATION'S JOBCARD BEFORE USING THE "REORGVS"
//*  FACILITY.
//*
//*  DO NOT REMOVE THE "//**//SKIP" AND "//**//RESUME" LINES !!!!
//*  DO NOT CHANGE THE SYMBOLIC PARAMETERS IN THIS JCL !!!!
//*    THE SYMBOLICS HAVE AN "&" AS THE FIRST CHARACTER OF EACH
//*    VARIABLE AND ARE SUBSTITUTED BY REXX EXEC "REORGVS".
//*    THE EXEC LOOKS FOR THE FOLLOWING SYMBOLIC VARIABLES:
//*        &HLQ - THE HIGH-LEVEL QUALIFER FOR THE WORK FILES
//*       &FSEQ - RANDOM SEQUENCE NUMBER TO MAKE WORK FILES UNIQUE
//*    &CLUSTER - NAME OF THE VSAM CLUSTER TO BE REORGANIZED
//**********************************************************************
//* REALLOCATES AND REORGANIZES A VSAM CLUSTER WITH SAME ATTRIBUTES
//* AS BEFORE.
//* ASSUMPTIONS FOR THIS JOB:
//*   A) THE VSAM CLUSTER MUST BE CATALOGED BEFORE RUNNING THIS JOB.
//*   B) THE VSAM CLUSTER MUST NOT BE ALLOCATED BEFORE RUNNING THIS
//*      JOB.
//* 1) INPUT A VSAM CLUSTER NAME.
//* 2) PARSE OUT THE ATTRIBUTES NECESSARY TO BUILD THE "DEFINE CLUSTER"
//*      STATEMENTS TO CLONE THE FILES ON ANOTHER VOLUME AND/OR LPAR.
//* 3) EXECUTE THE IDCAMS DEFINE STATEMENTS TO:
//*    A)  EXPORT THE CLUSTER TO A WORK FILE BACKUP IMAGE
//*    B)  REALLOCATE THE CLUSTER (REMOVING IMBED AND REPLICAT PARMS)
//*    C)  RELOAD THE CORRECTLY ALLOCATED CLUSTER FROM THE WORK FILE.
//* 4) REALLOCATE THE ALTERNATE INDEXES AND PATHS (IF THEY EXIST).
//* 5) REBUILD THE ALTERNATE INDEXES (IF THEY EXIST).
//* 6) RELOAD THE DISCRETE RACF PROFILES (IF THEY EXIST) FOR THE
//*        CLUSTER TO PROTECT IT AGAIN (ASSUMES THAT YOU USE RACF
//*        FOR A SECURITY PRODUCT).
//**********************************************************************
//* DELETE THE WORK FILES BEFORE THE REORG
//**********************************************************************
//DELETE1  EXEC PGM=IDCAMS
//SYSPRINT DD DUMMY
//DELETE1.SYSIN  DD *   *** <= DO NOT CHANGE THESE STATEMENTS  ********
  DELETE  &HLQ.$REORGVS.RACF.PROFILE.SAVE.FS&FSEQ          PURGE
  DELETE  &HLQ.$REORGVS.EXPORT.IMAGE.FS&FSEQ               PURGE
  DELETE  &HLQ.$REORGVS.EXPORT.SYSPRINT.FS&FSEQ            PURGE
  DELETE  &HLQ.$REORGVS.LISTC.COMMANDS.FS&FSEQ             PURGE
  DELETE  &HLQ.$REORGVS.LISTC.AIX.COMMANDS.FS&FSEQ         PURGE
  DELETE  &HLQ.$REORGVS.LISTC.SYSPRINT.FS&FSEQ             PURGE
  DELETE  &HLQ.$REORGVS.LISTC.AIX.SYSPRINT.FS&FSEQ         PURGE
  DELETE  &HLQ.$REORGVS.EXPORT.COMMANDS.FS&FSEQ            PURGE
  DELETE  &HLQ.$REORGVS.DEFINE.COMMANDS.FS&FSEQ            PURGE
  DELETE  &HLQ.$REORGVS.IMPORT.COMMANDS.FS&FSEQ            PURGE
  DELETE  &HLQ.$REORGVS.DEFN.AIX.COMMANDS.FS&FSEQ          PURGE
  DELETE  &HLQ.$REORGVS.RACF.PROFILE.CMDS.FS&FSEQ          PURGE
  SET MAXCC = 0
/*
//**********************************************************************
//* BUILD "LISTC ALL ENT" IDCAMS COMMANDS FOR THE CLUSTER DEFINITION.
//* ALSO, BUILD THE IDCAMS "EXPORT" AND "IMPORT" COMMANDS TO EXPORT
//* AND IMPORT THE VSAM CLUSTER DATA.
//**********************************************************************
//BUILDCMD  EXEC PGM=IKJEFT01,DYNAMNBR=30
//SYSPROC   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.EXEC
//          DD DISP=SHR,DSN=$MY.SYSPROC.LIB$
//SYSTSPRT  DD SYSOUT=*
//LIST      DD *
&CLUSTER
//EXPORT    DD DSN=&HLQ.$REORGVS.EXPORT.COMMANDS.FS&FSEQ,
//          DISP=(NEW,CATLG,CATLG),UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=080,BLKSIZE=0,DSORG=PS),
//          SPACE=(TRK,(001,001),RLSE)
//COMMANDS  DD DSN=&HLQ.$REORGVS.LISTC.COMMANDS.FS&FSEQ,
//          DISP=(NEW,CATLG,DELETE),UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=080,BLKSIZE=0,DSORG=PS),
//          SPACE=(TRK,(001,001),RLSE)
//IMPORT    DD DSN=&HLQ.$REORGVS.IMPORT.COMMANDS.FS&FSEQ,
//          DISP=(NEW,CATLG,DELETE),UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=080,BLKSIZE=0,DSORG=PS),
//          SPACE=(TRK,(001,001),RLSE)
//SYSTSIN   DD *
 %REORGVS1
//*
//CHK100    IF (BUILDCMD.RC GT 4 OR BUILDCMD.ABEND)   THEN
//ABEND100  EXEC PGM=ABENDER,PARM='0100'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**//SKIP   THE FOLLOWING STEPS IF IN TEST MODE ***********************
//**********************************************************************
//* EXECUTE THE "EXPORT" COMMAND TO EXPORT THE CLUSTER RECORDS
//**********************************************************************
//EXPORT   EXEC PGM=IDCAMS
//* SYSPRINT DD SYSOUT=*
//SYSPRINT DD DISP=(NEW,CATLG,DELETE),
//         DSN=&HLQ.$REORGVS.EXPORT.SYSPRINT.FS&FSEQ,
//         SPACE=(TRK,(001,001),RLSE),UNIT=SYSDA,
//         DCB=(RECFM=FBA,LRECL=133,BLKSIZE=0,DSORG=PS)
//SYSUDUMP DD SYSOUT=*
//SYSUT1   DD DISP=OLD,DSN=&CLUSTER
//IMAGE    DD DISP=(NEW,CATLG,DELETE),
//         DSN=&HLQ.$REORGVS.EXPORT.IMAGE.FS&FSEQ,
//         SPACE=(CYL,(030,030),RLSE),UNIT=SYSDA,
//         DCB=(RECFM=VBS,LRECL=32760,BLKSIZE=0)
//SYSIN    DD DISP=SHR,
//         DSN=&HLQ.$REORGVS.EXPORT.COMMANDS.FS&FSEQ
//*
//*CHK150   IF (EXPORT.RC GT 4 OR EXPORT.ABEND)   THEN
//*ABEND150 EXEC PGM=ABENDER,PARM='0150'
//*STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//*         ENDIF
//*
//**********************************************************************
//* DISPLAY THE "EXPORT" SYSPRINT REPORT
//**********************************************************************
//EXPORTPR EXEC PGM=IEBGENER
//SYSPRINT DD DUMMY
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT1   DD DISP=SHR,
//         DSN=&HLQ.$REORGVS.EXPORT.SYSPRINT.FS&FSEQ
//SYSUT2   DD SYSOUT=*
//*
//CHK200    IF (EXPORTPR.RC GT 4 OR EXPORTPR.ABEND)   THEN
//ABEND200  EXEC PGM=ABENDER,PARM='0200'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* PARSE OUT THE "EXPORT" SYSPRINT REPORT AND DETERMINE THE RESULTS.
//* CONSIDER 3 POSSIBLITILES FOR THE EXPORT COMPLETION:
//*  1) THE EXPORT COMPLETED SUCCESSFULLY
//*  2) THE VSAM CLUSTER WAS EMPTY WITH COND CODE 12 AND FEEDBACK 160
//*  3) THE EXPORT COMPLETED UNSUCCESSFULLY FOR OTHER REASONS BESIDES
//*       HAVING AN EMPTY VSAM CLUSTER
//**********************************************************************
//EXPPARSE  EXEC PGM=IKJEFT01,DYNAMNBR=30
//SYSPROC   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.EXEC
//          DD DISP=SHR,DSN=$MY.SYSPROC.LIB$
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD DISP=SHR,
//          DSN=&HLQ.$REORGVS.EXPORT.SYSPRINT.FS&FSEQ
//SYSTSIN   DD *
 %REORGVS6
//*
//CHK250    IF (EXPPARSE.RC GT 4 OR EXPPARSE.ABEND)   THEN
//ABEND250  EXEC PGM=ABENDER,PARM='0250'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**//RESUME THE FOLLOWING STEPS IF IN TEST MODE ***********************
//**********************************************************************
//* EXECUTE "LISTC ALL ENT" IDCAMS COMMANDS TO PRODUCE A SYSPRINT
//*       IMAGE PRIOR TO THE REORG.
//**********************************************************************
//LISTCAT   EXEC PGM=IDCAMS
//SYSPRINT  DD DSN=&HLQ.$REORGVS.LISTC.SYSPRINT.FS&FSEQ,
//          DISP=(NEW,CATLG,DELETE),UNIT=SYSDA,
//          DCB=(RECFM=FBA,LRECL=133,BLKSIZE=0,DSORG=PS),
//          SPACE=(TRK,(010,010),RLSE)
//SYSIN     DD DISP=SHR,
//          DSN=&HLQ.$REORGVS.LISTC.COMMANDS.FS&FSEQ
/*
//CHK300    IF (LISTCAT.RC GT 4 OR LISTCAT.ABEND)   THEN
//ABEND300  EXEC PGM=ABENDER,PARM='0300'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* PRINT THE "PRIOR IMAGE" LISTCAT SYSPRINT REPORT FOR THE CLUSTER
//**********************************************************************
//LISTCATP EXEC PGM=IEBGENER
//SYSPRINT DD DUMMY
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT1   DD DISP=SHR,
//         DSN=&HLQ.$REORGVS.LISTC.SYSPRINT.FS&FSEQ
//SYSUT2   DD SYSOUT=*
//*
//CHK350    IF (LISTCATP.RC GT 4 OR LISTCATP.ABEND)   THEN
//ABEND350  EXEC PGM=ABENDER,PARM='0350'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* READ THE IDCAMS SYSPRINT FILE TO PICK UP THE CLUSTER DEFINITION
//*   ATTRIBUTES.  BUILD "DELETE" AND "DEFINE CLUSTER" DEFINITION
//*   STATEMENTS TO DELETE AND REALLOCATE THE VSAM CLUSTER.
//**********************************************************************
//GENDEFIN  EXEC PGM=IKJEFT01,DYNAMNBR=30
//SYSPROC   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.EXEC
//          DD DISP=SHR,DSN=$MY.SYSPROC.LIB$
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD DISP=SHR,DSN=&HLQ.$REORGVS.LISTC.SYSPRINT.FS&FSEQ
//REPORT    DD SYSOUT=*
//PARMFILE  DD DISP=SHR,DSN=&HLQ.$REORGVS.PARMFILE.FS&FSEQ
//DEFINES   DD DSN=&HLQ.$REORGVS.DEFINE.COMMANDS.FS&FSEQ,
//          DISP=(NEW,CATLG,DELETE),UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=080,BLKSIZE=0,DSORG=PS),
//          SPACE=(TRK,(001,001),RLSE)
//AIXCMDS   DD DSN=&HLQ.$REORGVS.LISTC.AIX.COMMANDS.FS&FSEQ,
//          DISP=(NEW,CATLG,DELETE),UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=080,BLKSIZE=0,DSORG=PS),
//          SPACE=(TRK,(001,001),RLSE)
//SYSTSIN   DD *
 %REORGVS2
//*
//CHK400    IF (GENDEFIN.RC GT 4 OR GENDEFIN.ABEND)   THEN
//ABEND400  EXEC PGM=ABENDER,PARM='0400'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* EXECUTE THE "LISTC ALL ENT(AIXDSN)" IDCAMS STATEMENTS
//*       TO LIST THE CATALOG AIX COMPONENTS.
//**********************************************************************
//LISTCAIX  EXEC PGM=IDCAMS
//SYSPRINT  DD DSN=&HLQ.$REORGVS.LISTC.AIX.SYSPRINT.FS&FSEQ,
//          DISP=(NEW,CATLG,DELETE),UNIT=SYSDA,
//          DCB=(RECFM=FBA,LRECL=133,BLKSIZE=0,DSORG=PS),
//          SPACE=(TRK,(010,010),RLSE)
//SYSUDUMP  DD SYSOUT=*
//SYSIN     DD DISP=SHR,
//          DSN=&HLQ.$REORGVS.LISTC.AIX.COMMANDS.FS&FSEQ
//*
//CHK420    IF (LISTCAIX.RC GT 4 OR LISTCAIX.ABEND)   THEN
//ABEND420  EXEC PGM=ABENDER,PARM='0420'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* READ THE IDCAMS SYSPRINT FILE TO PICK UP THE AIX DEFINITION
//*   ATTRIBUTES.  BUILD "DELETE" AND "DEFINE AIX" DEFINITION
//*   STATEMENTS TO DELETE AND REALLOCATE THE AIX COMPONENTS.
//*   ALSO BUILD THE "DEFINE PATH" ASSOCIATIONS FOR EACH AIX
//*   COMPONENT.
//**********************************************************************
//GENDFAIX  EXEC PGM=IKJEFT01,DYNAMNBR=30
//SYSPROC   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.EXEC
//          DD DISP=SHR,DSN=$MY.SYSPROC.LIB$
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD DISP=SHR,
//          DSN=&HLQ.$REORGVS.LISTC.AIX.SYSPRINT.FS&FSEQ
//REPORT    DD SYSOUT=*
//DEFINES   DD DSN=&HLQ.$REORGVS.DEFN.AIX.COMMANDS.FS&FSEQ,
//          DISP=(NEW,CATLG,DELETE),UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=080,BLKSIZE=0,DSORG=PS),
//          SPACE=(TRK,(001,001),RLSE)
//SYSTSIN   DD *
 %REORGVS3
//*
//CHK430    IF (GENDFAIX.RC GT 4 OR GENDFAIX.ABEND)   THEN
//ABEND430  EXEC PGM=ABENDER,PARM='0430'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* PRINT THE "PRIOR IMAGE" LISTCAT SYSPRINT REPORT FOR THE CLUSTER
//**********************************************************************
//LISTCATA EXEC PGM=IEBGENER
//SYSPRINT DD DUMMY
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT1   DD DISP=SHR,
//         DSN=&HLQ.$REORGVS.LISTC.AIX.SYSPRINT.FS&FSEQ
//SYSUT2   DD SYSOUT=*
//*
//CHK450    IF (LISTCATA.RC GT 4 OR LISTCATA.ABEND)   THEN
//ABEND450  EXEC PGM=ABENDER,PARM='0450'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//GETRACF   EXEC PGM=IKJEFT01,DYNAMNBR=30
//SYSPROC   DD DISP=SHR,DSN=$MY.SYSPROC.LIB$
//SYSTSPRT  DD DSN=&HLQ.$REORGVS.RACF.PROFILE.SAVE.FS&FSEQ,
//          DISP=(NEW,CATLG,DELETE),UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=133,BLKSIZE=0,DSORG=PS),
//          SPACE=(TRK,(001,001),RLSE)
//SYSTSIN   DD *
 LISTDSD DA('&CLUSTER') ALL
/*
//CHK500    IF (GETRACF.RC GT 4 OR GETRACF.ABEND)   THEN
//ABEND500  EXEC PGM=ABENDER,PARM='0500'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**//SKIP   THE FOLLOWING STEPS IF IN TEST MODE ***********************
//**********************************************************************
//* EXECUTE THE "DELETE" AND "DEFINE CLUSTER" IDCAMS STATEMENTS
//*       TO DELETE AND REALLOCATE THE CLUSTER.
//**********************************************************************
//DEFNCLUS  EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSIN     DD DISP=SHR,
//          DSN=&HLQ.$REORGVS.DEFINE.COMMANDS.FS&FSEQ
//*
//CHK550    IF (DEFNCLUS.RC GT 4 OR DEFNCLUS.ABEND)   THEN
//ABEND550  EXEC PGM=ABENDER,PARM='0550'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* EXECUTE THE "IMPORT" COMMAND TO IMPORT THE CLUSTER RECORDS.
//**********************************************************************
//IMPORT    EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//IMAGE     DD DISP=SHR,
//          DSN=&HLQ.$REORGVS.EXPORT.IMAGE.FS&FSEQ
//SYSIN     DD DISP=SHR,
//          DSN=&HLQ.$REORGVS.IMPORT.COMMANDS.FS&FSEQ
//*
//CHK600    IF (IMPORT.RC GT 4 OR IMPORT.ABEND)   THEN
//ABEND600  EXEC PGM=ABENDER,PARM='0600'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* EXECUTE THE "DELETE" AND "DEFINE AIX" IDCAMS STATEMENTS
//*       TO DELETE AND REALLOCATE THE AIX COMPONENTS AND
//*       EXECUTE THE "DEFINE PATH" ASSOCIATIONS FOR EACH AIX.
//**********************************************************************
//DEFNAIX   EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSIN     DD DISP=SHR,
//          DSN=&HLQ.$REORGVS.DEFN.AIX.COMMANDS.FS&FSEQ
//*
//CHK650    IF (DEFNAIX.RC GT 4 OR DEFNAIX.ABEND)   THEN
//ABEND650  EXEC PGM=ABENDER,PARM='0650'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**//RESUME THE FOLLOWING STEPS IF IN TEST MODE ***********************
//**********************************************************************
//* BUILD THE RACF DISCRETE PROFILE ADD, ALTER, AND PERMIT COMMANDS
//* (IF A DISCRETE RACF PROFILE EXISTS).
//**********************************************************************
//BLDRACF   EXEC PGM=IKJEFT01,DYNAMNBR=30
//SYSPROC   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.EXEC
//          DD DISP=SHR,DSN=$MY.SYSPROC.LIB$
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD DISP=SHR,DSN=&HLQ.$REORGVS.RACF.PROFILE.SAVE.FS&FSEQ
//COMMANDS  DD DSN=&HLQ.$REORGVS.RACF.PROFILE.CMDS.FS&FSEQ,
//          DISP=(NEW,CATLG,DELETE),UNIT=SYSDA,
//          DCB=(RECFM=FB,LRECL=080,BLKSIZE=0,DSORG=PS),
//          SPACE=(TRK,(001,001),RLSE)
//SYSTSIN   DD *
 %REORGVS4
/*
//CHK700    IF (BLDRACF.RC GT 4 OR BLDRACF.ABEND)   THEN
//ABEND700  EXEC PGM=ABENDER,PARM='0700'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**//SKIP   THE FOLLOWING STEPS IF IN TEST MODE ***********************
//**********************************************************************
//*REBUILD THE RACF DISCRETE PROFILE (IF ONE EXISTS).
//**********************************************************************
//GENPROF  EXEC PGM=IKJEFT01,DYNAMNBR=30,COND=EVEN
//SYSPROC  DD DISP=SHR,DSN=$MY.SYSPROC.LIB$
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD DISP=SHR,DSN=&HLQ.$REORGVS.RACF.PROFILE.CMDS.FS&FSEQ
/*
//CHK750    IF (GENPROF.RC GT 4 OR GENPROF.ABEND)   THEN
//ABEND750  EXEC PGM=ABENDER,PARM='0750'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* EXECUTE "LISTC ALL ENT" IDCAMS COMMANDS TO PRODUCE A SYSPRINT
//*       IMAGE AFTER THE THE REORG.
//**********************************************************************
//LISTCAT2  EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DISP=SHR,
//          DSN=&HLQ.$REORGVS.LISTC.COMMANDS.FS&FSEQ
/*
//CHK800    IF (LISTCAT2.RC GT 4 OR LISTCAT2.ABEND)   THEN
//ABEND800  EXEC PGM=ABENDER,PARM='0800'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* EXECUTE "LISTC ALL ENT" IDCAMS COMMANDS TO PRODUCE A SYSPRINT
//*       IMAGE OF THE AIX COMPONENTS AFTER THE THE REORG.
//**********************************************************************
//LISTAIX2  EXEC PGM=IDCAMS
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD DISP=SHR,
//          DSN=&HLQ.$REORGVS.LISTC.AIX.COMMANDS.FS&FSEQ
/*
//CHK820    IF (LISTAIX2.RC GT 4 OR LISTAIX2.ABEND)   THEN
//ABEND820  EXEC PGM=ABENDER,PARM='0820'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* IF THE IMPORT FUNCTION IS SUCCESSFUL, THEN LOG THE ENTRY IN THE
//* LOGFILE (SYS3.$REORGVS.LOGFILE).  THE LOGFILE IS DYNAMICALLY
//* ALLOCATED TO ALLOW MULTIPLE REORG JOBS TO RUN AT ONE TIME.
//* (THERE WILL NOT BE A FILE ALLOCATION IN THE JCL FOR FILE
//* LOGFILE).
//**********************************************************************
//LOGITGD   EXEC PGM=IKJEFT01,DYNAMNBR=30,COND=(4,LT)
//SYSPROC   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.EXEC
//          DD DISP=SHR,DSN=$MY.SYSPROC.LIB$
//SYSTSPRT  DD SYSOUT=*
//LIST      DD *
&CLUSTER
//EXPORT    DD DSN=&HLQ.$REORGVS.EXPORT.IMAGE.FS&FSEQ,
//          DISP=SHR
//SYSTSIN   DD *
 %REORGVS5  GOOD
//*
//CHK850    IF (LOGITGD.RC GT 4 OR LOGITGD.ABEND)   THEN
//ABEND850  EXEC PGM=ABENDER,PARM='0850'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//*
//**********************************************************************
//* IF THE IMPORT FUNCTION IS UNSUCCESSFUL, THEN LOG THE ENTRY IN THE
//* LOGFILE (SYS3.$REORGVS.LOGFILE).  THE LOGFILE IS DYNAMICALLY
//* ALLOCATED TO ALLOW MULTIPLE REORG JOBS TO RUN AT ONE TIME.
//* (THERE WILL NOT BE A FILE ALLOCATION IN THE JCL FOR FILE
//* LOGFILE).
//**********************************************************************
//LOGITB    IF (RC GT 4 OR ABEND)                              THEN
//LOGITBAD  EXEC PGM=IKJEFT01,DYNAMNBR=30
//SYSPROC   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.EXEC
//          DD DISP=SHR,DSN=$MY.SYSPROC.LIB$
//SYSTSPRT  DD SYSOUT=*
//LIST      DD *
&CLUSTER
//EXPORT    DD DSN=&HLQ.$REORGVS.EXPORT.IMAGE.FS&FSEQ,
//          DISP=SHR
//SYSTSIN   DD *
 %REORGVS5  BAD
//*
//CHK900    IF (LOGITBAD.RC GT 4 OR LOGITBAD.ABEND)   THEN
//ABEND900  EXEC PGM=ABENDER,PARM='0900'
//STEPLIB   DD DISP=SHR,DSN=$XXXXXXXX.$REORGVS.LOADLIB
//          ENDIF
//          ENDIF
//*
//**********************************************************************
//* DELETE THESE WORK FILES EVEN UPON ABEND
//**********************************************************************
//DELETE2  EXEC PGM=IDCAMS,COND=EVEN
//SYSPRINT DD DUMMY
//SYSIN    DD *   *** <= DO NOT CHANGE THESE STATEMENTS  ********
  DELETE  &HLQ.$REORGVS.EXPORT.COMMANDS.FS&FSEQ            PURGE
  SET MAXCC = 0
/*
//**********************************************************************
//* DELETE MORE WORK FILES AFTER THE REORG IS SUCCESSFUL
//* KEEP &HLQ.$REORGVS.EXPORT.IMAGE.FS&FSEQ FILE.  DON'T DELETE.
//**********************************************************************
//DELETE3  EXEC PGM=IDCAMS
//SYSPRINT DD DUMMY
//SYSIN    DD *   *** <= DO NOT CHANGE THESE STATEMENTS  ********
  DELETE  &HLQ.$REORGVS.PARMFILE.FS&FSEQ                   PURGE
  DELETE  &HLQ.$REORGVS.SUBMIT.JCL.FS&FSEQ                 PURGE
  DELETE  &HLQ.$REORGVS.EXPORT.SYSPRINT.FS&FSEQ            PURGE
  DELETE  &HLQ.$REORGVS.LISTC.COMMANDS.FS&FSEQ             PURGE
  DELETE  &HLQ.$REORGVS.LISTC.AIX.COMMANDS.FS&FSEQ         PURGE
  DELETE  &HLQ.$REORGVS.LISTC.SYSPRINT.FS&FSEQ             PURGE
  DELETE  &HLQ.$REORGVS.LISTC.AIX.SYSPRINT.FS&FSEQ         PURGE
  DELETE  &HLQ.$REORGVS.IMPORT.COMMANDS.FS&FSEQ            PURGE
  DELETE  &HLQ.$REORGVS.DEFINE.COMMANDS.FS&FSEQ            PURGE
  DELETE  &HLQ.$REORGVS.DEFN.AIX.COMMANDS.FS&FSEQ          PURGE
  DELETE  &HLQ.$REORGVS.RACF.PROFILE.SAVE.FS&FSEQ          PURGE
  DELETE  &HLQ.$REORGVS.RACF.PROFILE.CMDS.FS&FSEQ          PURGE
  SET MAXCC = 0
/*
//* END OF JOB
