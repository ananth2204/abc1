000100 01  SQLITE3-RETURN-VALUES.
000200     05 SQLITE-ABORT                         PIC S9(9) COMP-5
000300            VALUE IS 4 .
000400     05 SQLITE-ABORT-ROLLBACK                PIC S9(9) COMP-5
000500            VALUE IS 516 .
000600     05 SQLITE-ACCESS-EXISTS                 PIC S9(9) COMP-5
000700            VALUE IS 0 .
000800     05 SQLITE-ACCESS-READ                   PIC S9(9) COMP-5
000900            VALUE IS 2 .
001000     05 SQLITE-ACCESS-READWRITE              PIC S9(9) COMP-5
001100            VALUE IS 1 .
001200     05 SQLITE-ALTER-TABLE                   PIC S9(9) COMP-5
001300            VALUE IS 26 .
001400     05 SQLITE-ANALYZE                       PIC S9(9) COMP-5
001500            VALUE IS 28 .
001600     05 SQLITE-ANY                           PIC S9(9) COMP-5
001700            VALUE IS 5 .
001800     05 SQLITE-ATTACH                        PIC S9(9) COMP-5
001900            VALUE IS 24 .
002000     05 SQLITE-AUTH                          PIC S9(9) COMP-5
002100            VALUE IS 23 .
002200     05 SQLITE-BLOB                          PIC S9(9) COMP-5
002300            VALUE IS 4 .
002400     05 SQLITE-BUSY                          PIC S9(9) COMP-5
002500            VALUE IS 5 .
002600     05 SQLITE-BUSY-RECOVERY                 PIC S9(9) COMP-5
002700            VALUE IS 261 .
002800     05 SQLITE-CANTOPEN                      PIC S9(9) COMP-5
002900            VALUE IS 14 .
003000     05 SQLITE-CANTOPEN-FULLPATH             PIC S9(9) COMP-5
003100            VALUE IS 782 .
003200     05 SQLITE-CANTOPEN-ISDIR                PIC S9(9) COMP-5
003300            VALUE IS 526 .
003400     05 SQLITE-CANTOPEN-NOTEMPDIR            PIC S9(9) COMP-5
003500            VALUE IS 270 .
003600     05 SQLITE-CHECKPOINT-FULL               PIC S9(9) COMP-5
003700            VALUE IS 1 .
003800     05 SQLITE-CHECKPOINT-PASSIVE            PIC S9(9) COMP-5
003900            VALUE IS 0 .
004000     05 SQLITE-CHECKPOINT-RESTART            PIC S9(9) COMP-5
004100            VALUE IS 2 .
004200     05 SQLITE-CONFIG-COVRNG-INDEX-SCN       PIC S9(9) COMP-5
004300            VALUE IS 20 .
004400     05 SQLITE-CONFIG-GETMALLOC              PIC S9(9) COMP-5
004500            VALUE IS 5 .
004600     05 SQLITE-CONFIG-GETMUTEX               PIC S9(9) COMP-5
004700            VALUE IS 11 .
004800     05 SQLITE-CONFIG-GETPCACHE              PIC S9(9) COMP-5
004900            VALUE IS 15 .
005000     05 SQLITE-CONFIG-GETPCACHE2             PIC S9(9) COMP-5
005100            VALUE IS 19 .
005200     05 SQLITE-CONFIG-HEAP                   PIC S9(9) COMP-5
005300            VALUE IS 8 .
005400     05 SQLITE-CONFIG-LOG                    PIC S9(9) COMP-5
005500            VALUE IS 16 .
005600     05 SQLITE-CONFIG-LOOKASIDE              PIC S9(9) COMP-5
005700            VALUE IS 13 .
005800     05 SQLITE-CONFIG-MALLOC                 PIC S9(9) COMP-5
005900            VALUE IS 4 .
006000     05 SQLITE-CONFIG-MEMSTATUS              PIC S9(9) COMP-5
006100            VALUE IS 9 .
006200     05 SQLITE-CONFIG-MMAP-SIZE              PIC S9(9) COMP-5
006300            VALUE IS 22 .
006400     05 SQLITE-CONFIG-MULTITHREAD            PIC S9(9) COMP-5
006500            VALUE IS 2 .
006600     05 SQLITE-CONFIG-MUTEX                  PIC S9(9) COMP-5
006700            VALUE IS 10 .
006800     05 SQLITE-CONFIG-PAGECACHE              PIC S9(9) COMP-5
006900            VALUE IS 7 .
007000     05 SQLITE-CONFIG-PCACHE                 PIC S9(9) COMP-5
007100            VALUE IS 14 .
007200     05 SQLITE-CONFIG-PCACHE2                PIC S9(9) COMP-5
007300            VALUE IS 18 .
007400     05 SQLITE-CONFIG-SCRATCH                PIC S9(9) COMP-5
007500            VALUE IS 6 .
007600     05 SQLITE-CONFIG-SERIALIZED             PIC S9(9) COMP-5
007700            VALUE IS 3 .
007800     05 SQLITE-CONFIG-SINGLETHREAD           PIC S9(9) COMP-5
007900            VALUE IS 1 .
008000     05 SQLITE-CONFIG-SQLLOG                 PIC S9(9) COMP-5
008100            VALUE IS 21 .
008200     05 SQLITE-CONFIG-URI                    PIC S9(9) COMP-5
008300            VALUE IS 17 .
008400     05 SQLITE-CONSTRAINT                    PIC S9(9) COMP-5
008500            VALUE IS 19 .
008600     05 SQLITE-CONSTRAINT-CHECK              PIC S9(9) COMP-5
008700            VALUE IS 275 .
008800     05 SQLITE-CONSTRAINT-COMMITHOOK         PIC S9(9) COMP-5
008900            VALUE IS 531 .
009000     05 SQLITE-CONSTRAINT-FOREIGNKEY         PIC S9(9) COMP-5
009100            VALUE IS 787 .
009200     05 SQLITE-CONSTRAINT-FUNCTION           PIC S9(9) COMP-5
009300            VALUE IS 1043 .
009400     05 SQLITE-CONSTRAINT-NOTNULL            PIC S9(9) COMP-5
009500            VALUE IS 1299 .
009600     05 SQLITE-CONSTRAINT-PRIMARYKEY         PIC S9(9) COMP-5
009700            VALUE IS 1555 .
009800     05 SQLITE-CONSTRAINT-TRIGGER            PIC S9(9) COMP-5
009900            VALUE IS 1811 .
010000     05 SQLITE-CONSTRAINT-UNIQUE             PIC S9(9) COMP-5
010100            VALUE IS 2067 .
010200     05 SQLITE-CONSTRAINT-VTAB               PIC S9(9) COMP-5
010300            VALUE IS 2323 .
010400     05 SQLITE-COPY                          PIC S9(9) COMP-5
010500            VALUE IS 0 .
010600     05 SQLITE-CORRUPT                       PIC S9(9) COMP-5
010700            VALUE IS 11 .
010800     05 SQLITE-CORRUPT-VTAB                  PIC S9(9) COMP-5
010900            VALUE IS 267 .
011000     05 SQLITE-CREATE-INDEX                  PIC S9(9) COMP-5
011100            VALUE IS 1 .
011200     05 SQLITE-CREATE-TABLE                  PIC S9(9) COMP-5
011300            VALUE IS 2 .
011400     05 SQLITE-CREATE-TEMP-INDEX             PIC S9(9) COMP-5
011500            VALUE IS 3 .
011600     05 SQLITE-CREATE-TEMP-TABLE             PIC S9(9) COMP-5
011700            VALUE IS 4 .
011800     05 SQLITE-CREATE-TEMP-TRIGGER           PIC S9(9) COMP-5
011900            VALUE IS 5 .
012000     05 SQLITE-CREATE-TEMP-VIEW              PIC S9(9) COMP-5
012100            VALUE IS 6 .
012200     05 SQLITE-CREATE-TRIGGER                PIC S9(9) COMP-5
012300            VALUE IS 7 .
012400     05 SQLITE-CREATE-VIEW                   PIC S9(9) COMP-5
012500            VALUE IS 8 .
012600     05 SQLITE-CREATE-VTABLE                 PIC S9(9) COMP-5
012700            VALUE IS 29 .
012800     05 SQLITE-DBCONFIG-ENABLE-FKEY          PIC S9(9) COMP-5
012900            VALUE IS 1002 .
013000     05 SQLITE-DBCONFIG-ENABLE-TRIGGER       PIC S9(9) COMP-5
013100            VALUE IS 1003 .
013200     05 SQLITE-DBCONFIG-LOOKASIDE            PIC S9(9) COMP-5
013300            VALUE IS 1001 .
013400     05 SQLITE-DBSTATUS-CACHE-HIT            PIC S9(9) COMP-5
013500            VALUE IS 7 .
013600     05 SQLITE-DBSTATUS-CACHE-MISS           PIC S9(9) COMP-5
013700            VALUE IS 8 .
013800     05 SQLITE-DBSTATUS-CACHE-USED           PIC S9(9) COMP-5
013900            VALUE IS 1 .
014000     05 SQLITE-DBSTATUS-CACHE-WRITE          PIC S9(9) COMP-5
014100            VALUE IS 9 .
014200     05 SQLITE-DBSTATUS-LOOKASIDE-HIT        PIC S9(9) COMP-5
014300            VALUE IS 4 .
014400     05 SQLITE-DBSTAT-LKASD-MISS-FULL        PIC S9(9) COMP-5
014500            VALUE IS 6 .
014600     05 SQLITE-DBSTAT-LKASD-MISS-SIZE        PIC S9(9) COMP-5
014700            VALUE IS 5 .
014800     05 SQLITE-DBSTATUS-LOOKASIDE-USED       PIC S9(9) COMP-5
014900            VALUE IS 0 .
015000     05 SQLITE-DBSTATUS-MAX                  PIC S9(9) COMP-5
015100            VALUE IS 9 .
015200     05 SQLITE-DBSTATUS-SCHEMA-USED          PIC S9(9) COMP-5
015300            VALUE IS 2 .
015400     05 SQLITE-DBSTATUS-STMT-USED            PIC S9(9) COMP-5
015500            VALUE IS 3 .
015600     05 SQLITE-DELETE                        PIC S9(9) COMP-5
015700            VALUE IS 9 .
015800     05 SQLITE-DENY                          PIC S9(9) COMP-5
015900            VALUE IS 1 .
016000     05 SQLITE-DETACH                        PIC S9(9) COMP-5
016100            VALUE IS 25 .
016200     05 SQLITE-DONE                          PIC S9(9) COMP-5
016300            VALUE IS 101 .
016400     05 SQLITE-DROP-INDEX                    PIC S9(9) COMP-5
016500            VALUE IS 10 .
016600     05 SQLITE-DROP-TABLE                    PIC S9(9) COMP-5
016700            VALUE IS 11 .
016800     05 SQLITE-DROP-TEMP-INDEX               PIC S9(9) COMP-5
016900            VALUE IS 12 .
017000     05 SQLITE-DROP-TEMP-TABLE               PIC S9(9) COMP-5
017100            VALUE IS 13 .
017200     05 SQLITE-DROP-TEMP-TRIGGER             PIC S9(9) COMP-5
017300            VALUE IS 14 .
017400     05 SQLITE-DROP-TEMP-VIEW                PIC S9(9) COMP-5
017500            VALUE IS 15 .
017600     05 SQLITE-DROP-TRIGGER                  PIC S9(9) COMP-5
017700            VALUE IS 16 .
017800     05 SQLITE-DROP-VIEW                     PIC S9(9) COMP-5
017900            VALUE IS 17 .
018000     05 SQLITE-DROP-VTABLE                   PIC S9(9) COMP-5
018100            VALUE IS 30 .
018200     05 SQLITE-EMPTY                         PIC S9(9) COMP-5
018300            VALUE IS 16 .
018400     05 SQLITE-ERROR                         PIC S9(9) COMP-5
018500            VALUE IS 1 .
018600     05 SQLITE-FAIL                          PIC S9(9) COMP-5
018700            VALUE IS 3 .
018800     05 SQLITE-FCNTL-BUSYHANDLER             PIC S9(9) COMP-5
018900            VALUE IS 15 .
019000     05 SQLITE-FCNTL-CHUNK-SIZE              PIC S9(9) COMP-5
019100            VALUE IS 6 .
019200     05 SQLITE-FCNTL-FILE-POINTER            PIC S9(9) COMP-5
019300            VALUE IS 7 .
019400     05 SQLITE-FCNTL-LOCKSTATE               PIC S9(9) COMP-5
019500            VALUE IS 1 .
019600     05 SQLITE-FCNTL-MMAP-SIZE               PIC S9(9) COMP-5
019700            VALUE IS 18 .
019800     05 SQLITE-FCNTL-OVERWRITE               PIC S9(9) COMP-5
019900            VALUE IS 11 .
020000     05 SQLITE-FCNTL-PERSIST-WAL             PIC S9(9) COMP-5
020100            VALUE IS 10 .
020200     05 SQLITE-FCNTL-PWRSAFE-OVERWRITE       PIC S9(9) COMP-5
020300            VALUE IS 13 .
020400     05 SQLITE-FCNTL-PRAGMA                  PIC S9(9) COMP-5
020500            VALUE IS 14 .
020600     05 SQLITE-FCNTL-SIZE-HINT               PIC S9(9) COMP-5
020700            VALUE IS 5 .
020800     05 SQLITE-FCNTL-SYNC-OMITTED            PIC S9(9) COMP-5
020900            VALUE IS 8 .
021000     05 SQLITE-FCNTL-TEMPFILENAME            PIC S9(9) COMP-5
021100            VALUE IS 16 .
021200     05 SQLITE-FCNTL-VFSNAME                 PIC S9(9) COMP-5
021300            VALUE IS 12 .
021400     05 SQLITE-FCNTL-WIN32-AV-RETRY          PIC S9(9) COMP-5
021500            VALUE IS 9 .
021600     05 SQLITE-FLOAT                         PIC S9(9) COMP-5
021700            VALUE IS 2 .
021800     05 SQLITE-FORMAT                        PIC S9(9) COMP-5
021900            VALUE IS 24 .
022000     05 SQLITE-FULL                          PIC S9(9) COMP-5
022100            VALUE IS 13 .
022200     05 SQLITE-FUNCTION                      PIC S9(9) COMP-5
022300            VALUE IS 31 .
022400     05 SQLITE-GET-LOCKPROXYFILE             PIC S9(9) COMP-5
022500            VALUE IS 2 .
022600     05 SQLITE-IGNORE                        PIC S9(9) COMP-5
022700            VALUE IS 2 .
022800     05 SQLITE-INDEX-CONSTRAINT-EQ           PIC S9(9) COMP-5
022900            VALUE IS 2 .
023000     05 SQLITE-INDEX-CONSTRAINT-GE           PIC S9(9) COMP-5
023100            VALUE IS 32 .
023200     05 SQLITE-INDEX-CONSTRAINT-GT           PIC S9(9) COMP-5
023300            VALUE IS 4 .
023400     05 SQLITE-INDEX-CONSTRAINT-LE           PIC S9(9) COMP-5
023500            VALUE IS 8 .
023600     05 SQLITE-INDEX-CONSTRAINT-LT           PIC S9(9) COMP-5
023700            VALUE IS 16 .
023800     05 SQLITE-INDEX-CONSTRAINT-MATCH        PIC S9(9) COMP-5
023900            VALUE IS 64 .
024000     05 SQLITE-INSERT                        PIC S9(9) COMP-5
024100            VALUE IS 18 .
024200     05 SQLITE-INTEGER                       PIC S9(9) COMP-5
024300            VALUE IS 1 .
024400     05 SQLITE-INTERNAL                      PIC S9(9) COMP-5
024500            VALUE IS 2 .
024600     05 SQLITE-INTERRUPT                     PIC S9(9) COMP-5
024700            VALUE IS 9 .
024800     05 SQLITE-IOCAP-ATOMIC                  PIC S9(9) COMP-5
024900            VALUE IS 1 .
025000     05 SQLITE-IOCAP-ATOMIC1K                PIC S9(9) COMP-5
025100            VALUE IS 4 .
025200     05 SQLITE-IOCAP-ATOMIC16K               PIC S9(9) COMP-5
025300            VALUE IS 64 .
025400     05 SQLITE-IOCAP-ATOMIC2K                PIC S9(9) COMP-5
025500            VALUE IS 8 .
025600     05 SQLITE-IOCAP-ATOMIC32K               PIC S9(9) COMP-5
025700            VALUE IS 128 .
025800     05 SQLITE-IOCAP-ATOMIC4K                PIC S9(9) COMP-5
025900            VALUE IS 16 .
026000     05 SQLITE-IOCAP-ATOMIC512               PIC S9(9) COMP-5
026100            VALUE IS 2 .
026200     05 SQLITE-IOCAP-ATOMIC64K               PIC S9(9) COMP-5
026300            VALUE IS 256 .
026400     05 SQLITE-IOCAP-ATOMIC8K                PIC S9(9) COMP-5
026500            VALUE IS 32 .
026600     05 SQLITE-IOCAP-PWRSAFE-OVERWRITE       PIC S9(9) COMP-5
026700            VALUE IS 4096 .
026800     05 SQLITE-IOCAP-SAFE-APPEND             PIC S9(9) COMP-5
026900            VALUE IS 512 .
027000     05 SQLITE-IOCAP-SEQUENTIAL              PIC S9(9) COMP-5
027100            VALUE IS 1024 .
027200     05 SQLITE-IOCAP-UNDEL-WHEN-OPEN         PIC S9(9) COMP-5
027300            VALUE IS 2048 .
027400     05 SQLITE-IOERR                         PIC S9(9) COMP-5
027500            VALUE IS 10 .
027600     05 SQLITE-IOERR-ACCESS                  PIC S9(9) COMP-5
027700            VALUE IS 3338 .
027800     05 SQLITE-IOERR-BLOCKED                 PIC S9(9) COMP-5
027900            VALUE IS 2826 .
028000     05 SQLITE-IOERR-CHECKRESERVEDLOCK       PIC S9(9) COMP-5
028100            VALUE IS 3594 .
028200     05 SQLITE-IOERR-CLOSE                   PIC S9(9) COMP-5
028300            VALUE IS 4106 .
028400     05 SQLITE-IOERR-DELETE                  PIC S9(9) COMP-5
028500            VALUE IS 2570 .
028600     05 SQLITE-IOERR-DELETE-NOENT            PIC S9(9) COMP-5
028700            VALUE IS 5898 .
028800     05 SQLITE-IOERR-DIR-CLOSE               PIC S9(9) COMP-5
028900            VALUE IS 4362 .
029000     05 SQLITE-IOERR-DIR-FSYNC               PIC S9(9) COMP-5
029100            VALUE IS 1290 .
029200     05 SQLITE-IOERR-FSTAT                   PIC S9(9) COMP-5
029300            VALUE IS 1802 .
029400     05 SQLITE-IOERR-FSYNC                   PIC S9(9) COMP-5
029500            VALUE IS 1034 .
029600     05 SQLITE-IOERR-LOCK                    PIC S9(9) COMP-5
029700            VALUE IS 3850 .
029800     05 SQLITE-IOERR-MMAP                    PIC S9(9) COMP-5
029900            VALUE IS 6154 .
030000     05 SQLITE-IOERR-NOMEM                   PIC S9(9) COMP-5
030100            VALUE IS 3082 .
030200     05 SQLITE-IOERR-RDLOCK                  PIC S9(9) COMP-5
030300            VALUE IS 2314 .
030400     05 SQLITE-IOERR-READ                    PIC S9(9) COMP-5
030500            VALUE IS 266 .
030600     05 SQLITE-IOERR-SEEK                    PIC S9(9) COMP-5
030700            VALUE IS 5642 .
030800     05 SQLITE-IOERR-SHMLOCK                 PIC S9(9) COMP-5
030900            VALUE IS 5130 .
031000     05 SQLITE-IOERR-SHMMAP                  PIC S9(9) COMP-5
031100            VALUE IS 5386 .
031200     05 SQLITE-IOERR-SHMOPEN                 PIC S9(9) COMP-5
031300            VALUE IS 4618 .
031400     05 SQLITE-IOERR-SHMSIZE                 PIC S9(9) COMP-5
031500            VALUE IS 4874 .
031600     05 SQLITE-IOERR-SHORT-READ              PIC S9(9) COMP-5
031700            VALUE IS 522 .
031800     05 SQLITE-IOERR-TRUNCATE                PIC S9(9) COMP-5
031900            VALUE IS 1546 .
032000     05 SQLITE-IOERR-UNLOCK                  PIC S9(9) COMP-5
032100            VALUE IS 2058 .
032200     05 SQLITE-IOERR-WRITE                   PIC S9(9) COMP-5
032300            VALUE IS 778 .
032400     05 SQLITE-LAST-ERRNO                    PIC S9(9) COMP-5
032500            VALUE IS 4 .
032600     05 SQLITE-LIMIT-ATTACHED                PIC S9(9) COMP-5
032700            VALUE IS 7 .
032800     05 SQLITE-LIMIT-COLUMN                  PIC S9(9) COMP-5
032900            VALUE IS 2 .
033000     05 SQLITE-LIMIT-COMPOUND-SELECT         PIC S9(9) COMP-5
033100            VALUE IS 4 .
033200     05 SQLITE-LIMIT-EXPR-DEPTH              PIC S9(9) COMP-5
033300            VALUE IS 3 .
033400     05 SQLITE-LIMIT-FUNCTION-ARG            PIC S9(9) COMP-5
033500            VALUE IS 6 .
033600     05 SQLITE-LIMIT-LENGTH                  PIC S9(9) COMP-5
033700            VALUE IS 0 .
033800     05 SQLITE-LIMIT-LIKE-PATTERN-LEN        PIC S9(9) COMP-5
033900            VALUE IS 8 .
034000     05 SQLITE-LIMIT-SQL-LENGTH              PIC S9(9) COMP-5
034100            VALUE IS 1 .
034200     05 SQLITE-LIMIT-TRIGGER-DEPTH           PIC S9(9) COMP-5
034300            VALUE IS 10 .
034400     05 SQLITE-LIMIT-VARIABLE-NUMBER         PIC S9(9) COMP-5
034500            VALUE IS 9 .
034600     05 SQLITE-LIMIT-VDBE-OP                 PIC S9(9) COMP-5
034700            VALUE IS 5 .
034800     05 SQLITE-LOCK-EXCLUSIVE                PIC S9(9) COMP-5
034900            VALUE IS 4 .
035000     05 SQLITE-LOCK-NONE                     PIC S9(9) COMP-5
035100            VALUE IS 0 .
035200     05 SQLITE-LOCK-PENDING                  PIC S9(9) COMP-5
035300            VALUE IS 3 .
035400     05 SQLITE-LOCK-RESERVED                 PIC S9(9) COMP-5
035500            VALUE IS 2 .
035600     05 SQLITE-LOCK-SHARED                   PIC S9(9) COMP-5
035700            VALUE IS 1 .
035800     05 SQLITE-LOCKED                        PIC S9(9) COMP-5
035900            VALUE IS 6 .
036000     05 SQLITE-LOCKED-SHAREDCACHE            PIC S9(9) COMP-5
036100            VALUE IS 262 .
036200     05 SQLITE-MISMATCH                      PIC S9(9) COMP-5
036300            VALUE IS 20 .
036400     05 SQLITE-MISUSE                        PIC S9(9) COMP-5
036500            VALUE IS 21 .
036600     05 SQLITE-MUTEX-FAST                    PIC S9(9) COMP-5
036700            VALUE IS 0 .
036800     05 SQLITE-MUTEX-RECURSIVE               PIC S9(9) COMP-5
036900            VALUE IS 1 .
037000     05 SQLITE-MUTEX-STATIC-LRU              PIC S9(9) COMP-5
037100            VALUE IS 6 .
037200     05 SQLITE-MUTEX-STATIC-LRU2             PIC S9(9) COMP-5
037300            VALUE IS 7 .
037400     05 SQLITE-MUTEX-STATIC-MASTER           PIC S9(9) COMP-5
037500            VALUE IS 2 .
037600     05 SQLITE-MUTEX-STATIC-MEM              PIC S9(9) COMP-5
037700            VALUE IS 3 .
037800     05 SQLITE-MUTEX-STATIC-MEM2             PIC S9(9) COMP-5
037900            VALUE IS 4 .
038000     05 SQLITE-MUTEX-STATIC-OPEN             PIC S9(9) COMP-5
038100            VALUE IS 4 .
038200     05 SQLITE-MUTEX-STATIC-PMEM             PIC S9(9) COMP-5
038300            VALUE IS 7 .
038400     05 SQLITE-MUTEX-STATIC-PRNG             PIC S9(9) COMP-5
038500            VALUE IS 5 .
038600     05 SQLITE-NOLFS                         PIC S9(9) COMP-5
038700            VALUE IS 22 .
038800     05 SQLITE-NOMEM                         PIC S9(9) COMP-5
038900            VALUE IS 7 .
039000     05 SQLITE-NOTADB                        PIC S9(9) COMP-5
039100            VALUE IS 26 .
039200     05 SQLITE-NOTFOUND                      PIC S9(9) COMP-5
039300            VALUE IS 12 .
039400     05 SQLITE-NOTICE                        PIC S9(9) COMP-5
039500            VALUE IS 27 .
039600     05 SQLITE-NOTICE-RECOVER-ROLLBACK       PIC S9(9) COMP-5
039700            VALUE IS 539 .
039800     05 SQLITE-NOTICE-RECOVER-WAL            PIC S9(9) COMP-5
039900            VALUE IS 283 .
040000     05 SQLITE-NULL                          PIC S9(9) COMP-5
040100            VALUE IS 5 .
040200     05 SQLITE-OK                            PIC S9(9) COMP-5
040300            VALUE IS 0 .
040400     05 SQLITE-OPEN-AUTOPROXY                PIC S9(9) COMP-5
040500            VALUE IS 32 .
040600     05 SQLITE-OPEN-CREATE                   PIC S9(9) COMP-5
040700            VALUE IS 4 .
040800     05 SQLITE-OPEN-DELETEONCLOSE            PIC S9(9) COMP-5
040900            VALUE IS 8 .
041000     05 SQLITE-OPEN-EXCLUSIVE                PIC S9(9) COMP-5
041100            VALUE IS 16 .
041200     05 SQLITE-OPEN-FULLMUTEX                PIC S9(9) COMP-5
041300            VALUE IS 65536 .
041400     05 SQLITE-OPEN-MAIN-DB                  PIC S9(9) COMP-5
041500            VALUE IS 256 .
041600     05 SQLITE-OPEN-MAIN-JOURNAL             PIC S9(9) COMP-5
041700            VALUE IS 2048 .
041800     05 SQLITE-OPEN-MASTER-JOURNAL           PIC S9(9) COMP-5
041900            VALUE IS 16384 .
042000     05 SQLITE-OPEN-MEMORY                   PIC S9(9) COMP-5
042100            VALUE IS 128 .
042200     05 SQLITE-OPEN-NOMUTEX                  PIC S9(9) COMP-5
042300            VALUE IS 32768 .
042400     05 SQLITE-OPEN-PRIVATECACHE             PIC S9(9) COMP-5
042500            VALUE IS 262144 .
042600     05 SQLITE-OPEN-READONLY                 PIC S9(9) COMP-5
042700            VALUE IS 1 .
042800     05 SQLITE-OPEN-READWRITE                PIC S9(9) COMP-5
042900            VALUE IS 2 .
043000     05 SQLITE-OPEN-SHAREDCACHE              PIC S9(9) COMP-5
043100            VALUE IS 131072 .
043200     05 SQLITE-OPEN-SUBJOURNAL               PIC S9(9) COMP-5
043300            VALUE IS 8192 .
043400     05 SQLITE-OPEN-TEMP-DB                  PIC S9(9) COMP-5
043500            VALUE IS 512 .
043600     05 SQLITE-OPEN-TEMP-JOURNAL             PIC S9(9) COMP-5
043700            VALUE IS 4096 .
043800     05 SQLITE-OPEN-TRANSIENT-DB             PIC S9(9) COMP-5
043900            VALUE IS 1024 .
044000     05 SQLITE-OPEN-URI                      PIC S9(9) COMP-5
044100            VALUE IS 64 .
044200     05 SQLITE-OPEN-WAL                      PIC S9(9) COMP-5
044300            VALUE IS 524288 .
044400     05 SQLITE-PERM                          PIC S9(9) COMP-5
044500            VALUE IS 3 .
044600     05 SQLITE-PRAGMA                        PIC S9(9) COMP-5
044700            VALUE IS 19 .
044800     05 SQLITE-PROTOCOL                      PIC S9(9) COMP-5
044900            VALUE IS 15 .
045000     05 SQLITE-RANGE                         PIC S9(9) COMP-5
045100            VALUE IS 25 .
045200     05 SQLITE-READ                          PIC S9(9) COMP-5
045300            VALUE IS 20 .
045400     05 SQLITE-READONLY                      PIC S9(9) COMP-5
045500            VALUE IS 8 .
045600     05 SQLITE-READONLY-CANTLOCK             PIC S9(9) COMP-5
045700            VALUE IS 520 .
045800     05 SQLITE-READONLY-RECOVERY             PIC S9(9) COMP-5
045900            VALUE IS 264 .
046000     05 SQLITE-READONLY-ROLLBACK             PIC S9(9) COMP-5
046100            VALUE IS 776 .
046200     05 SQLITE-REINDEX                       PIC S9(9) COMP-5
046300            VALUE IS 27 .
046400     05 SQLITE-REPLACE                       PIC S9(9) COMP-5
046500            VALUE IS 5 .
046600     05 SQLITE-ROLLBACK                      PIC S9(9) COMP-5
046700            VALUE IS 1 .
046800     05 SQLITE-ROW                           PIC S9(9) COMP-5
046900            VALUE IS 100 .
047000     05 SQLITE-SAVEPOINT                     PIC S9(9) COMP-5
047100            VALUE IS 32 .
047200     05 SQLITE-SCHEMA                        PIC S9(9) COMP-5
047300            VALUE IS 17 .
047400     05 SQLITE-SELECT                        PIC S9(9) COMP-5
047500            VALUE IS 21 .
047600     05 SQLITE-SET-LOCKPROXYFILE             PIC S9(9) COMP-5
047700            VALUE IS 3 .
047800     05 SQLITE-SHM-EXCLUSIVE                 PIC S9(9) COMP-5
047900            VALUE IS 8 .
048000     05 SQLITE-SHM-LOCK                      PIC S9(9) COMP-5
048100            VALUE IS 2 .
048200     05 SQLITE-SHM-NLOCK                     PIC S9(9) COMP-5
048300            VALUE IS 8 .
048400     05 SQLITE-SHM-SHARED                    PIC S9(9) COMP-5
048500            VALUE IS 4 .
048600     05 SQLITE-SHM-UNLOCK                    PIC S9(9) COMP-5
048700            VALUE IS 1 .
048800     05 SQLITE-STATIC                        PIC S9(9) COMP-5
048900            VALUE IS 0 .
049000     05 SQLITE-STATUS-MALLOC-COUNT           PIC S9(9) COMP-5
049100            VALUE IS 9 .
049200     05 SQLITE-STATUS-MALLOC-SIZE            PIC S9(9) COMP-5
049300            VALUE IS 5 .
049400     05 SQLITE-STATUS-MEMORY-USED            PIC S9(9) COMP-5
049500            VALUE IS 0 .
049600     05 SQLITE-STATUS-PGCACHE-OVERFLOW       PIC S9(9) COMP-5
049700            VALUE IS 2 .
049800     05 SQLITE-STATUS-PGCACHE-SIZE           PIC S9(9) COMP-5
049900            VALUE IS 7 .
050000     05 SQLITE-STATUS-PGCACHE-USED           PIC S9(9) COMP-5
050100            VALUE IS 1 .
050200     05 SQLITE-STATUS-PARSER-STACK           PIC S9(9) COMP-5
050300            VALUE IS 6 .
050400     05 SQLITE-STATUS-SCRATCH-OVERFLOW       PIC S9(9) COMP-5
050500            VALUE IS 4 .
050600     05 SQLITE-STATUS-SCRATCH-SIZE           PIC S9(9) COMP-5
050700            VALUE IS 8 .
050800     05 SQLITE-STATUS-SCRATCH-USED           PIC S9(9) COMP-5
050900            VALUE IS 3 .
051000     05 SQLITE-STMTSTATUS-AUTOINDEX          PIC S9(9) COMP-5
051100            VALUE IS 3 .
051200     05 SQLITE-STMTSTATUS-FULLSCAN-STP       PIC S9(9) COMP-5
051300            VALUE IS 1 .
051400     05 SQLITE-STMTSTATUS-SORT               PIC S9(9) COMP-5
051500            VALUE IS 2 .
051600     05 SQLITE-SYNC-DATAONLY                 PIC S9(9) COMP-5
051700            VALUE IS 16 .
051800     05 SQLITE-SYNC-FULL                     PIC S9(9) COMP-5
051900            VALUE IS 3 .
052000     05 SQLITE-SYNC-NORMAL                   PIC S9(9) COMP-5
052100            VALUE IS 2 .
052200     05 SQLITE-TESTCTRL-ALWAYS               PIC S9(9) COMP-5
052300            VALUE IS 13 .
052400     05 SQLITE-TESTCTRL-ASSERT               PIC S9(9) COMP-5
052500            VALUE IS 12 .
052600     05 SQLITE-TESTCTRL-B9-MALLOC-HKS        PIC S9(9) COMP-5
052700            VALUE IS 10 .
052800     05 SQLITE-TESTCTRL-BITVEC-TEST          PIC S9(9) COMP-5
052900            VALUE IS 8 .
053000     05 SQLITE-TESTCTRL-EXPLAIN-STMT         PIC S9(9) COMP-5
053100            VALUE IS 19 .
053200     05 SQLITE-TESTCTRL-FAULT-INSTALL        PIC S9(9) COMP-5
053300            VALUE IS 9 .
053400     05 SQLITE-TESTCTRL-FIRST                PIC S9(9) COMP-5
053500            VALUE IS 5 .
053600     05 SQLITE-TESTCTRL-ISKEYWORD            PIC S9(9) COMP-5
053700            VALUE IS 16 .
053800     05 SQLITE-TESTCTRL-LAST                 PIC S9(9) COMP-5
053900            VALUE IS 19 .
054000     05 SQLITE-TESTCTRL-LOCALTIME-FLT        PIC S9(9) COMP-5
054100            VALUE IS 18 .
054200     05 SQLITE-TESTCTRL-OPTIMIZATIONS        PIC S9(9) COMP-5
054300            VALUE IS 15 .
054400     05 SQLITE-TESTCTRL-PENDING-BYTE         PIC S9(9) COMP-5
054500            VALUE IS 11 .
054600     05 SQLITE-TESTCTRL-PRNG-RESET           PIC S9(9) COMP-5
054700            VALUE IS 7 .
054800     05 SQLITE-TESTCTRL-PRNG-RESTORE         PIC S9(9) COMP-5
054900            VALUE IS 6 .
055000     05 SQLITE-TESTCTRL-PRNG-SAVE            PIC S9(9) COMP-5
055100            VALUE IS 5 .
055200     05 SQLITE-TESTCTRL-RESERVE              PIC S9(9) COMP-5
055300            VALUE IS 14 .
055400     05 SQLITE-TESTCTRL-SCRATCHMALLOC        PIC S9(9) COMP-5
055500            VALUE IS 17 .
055600     05 SQLITE-TEXT                          PIC S9(9) COMP-5
055700            VALUE IS 3 .
055800     05 SQLITE-TOOBIG                        PIC S9(9) COMP-5
055900            VALUE IS 18 .
056000     05 SQLITE-TRANSACTION                   PIC S9(9) COMP-5
056100            VALUE IS 22 .
056200     05 SQLITE-TRANSIENT                     PIC S9(9) COMP-5
056300            VALUE IS -1 .
056400     05 SQLITE-UPDATE                        PIC S9(9) COMP-5
056500            VALUE IS 23 .
056600     05 SQLITE-UTF16                         PIC S9(9) COMP-5
056700            VALUE IS 4 .
056800     05 SQLITE-UTF16-ALIGNED                 PIC S9(9) COMP-5
056900            VALUE IS 8 .
057000     05 SQLITE-UTF16BE                       PIC S9(9) COMP-5
057100            VALUE IS 3 .
057200     05 SQLITE-UTF16LE                       PIC S9(9) COMP-5
057300            VALUE IS 2 .
057400     05 SQLITE-UTF8                          PIC S9(9) COMP-5
057500            VALUE IS 1 .
057600     05 SQLITE-VERSION                       PIC X(6)
057700            VALUE IS "3.7.17" .
057800     05 SQLITE-VERSION-NUMBER                PIC S9(9) COMP-5
057900            VALUE IS 3007017 .
058000     05 SQLITE-VTAB-CONSTRAINT-SUPPORT       PIC S9(9) COMP-5
058100            VALUE IS 1 .
058200     05 SQLITE-WARNING                       PIC S9(9) COMP-5
058300            VALUE IS 28 .
058400 01  SQLITE3-FUNCTION-NAMES.
058500*
058600     05 SQLITE3A                        PIC X(8)
058700            VALUE IS 'SQLITE3A'.
058800*
058900     05 SQLITE3-AGGREGATE-CONTEXT       PIC X(26)
059000            VALUE IS Z'sqlite3_aggregate_context'.
059100* This function returns a pointer which in COBOL
059200* would be USAGE POINTER. You should assign
059300* the result to the variable using the RETURNING clause
059400* CALL SQLITE3 USING BY REFERENCE SQLITE3-AGGREGATE-CONTEXT
059500*      <other call parameters as documented>
059600*      RETURNING pointer-result-variable
059700* END-CALL
059800*
059900     05 SQLITE3-AGGREGATE-COUNT         PIC X(24)
060000            VALUE IS Z'sqlite3_aggregate_count'.
060100* This function returns an integer which in COBOL
060200* would be PIC S9(9) COMP-5. You should assign
060300* the result to the variable using the RETURNING clause
060400* CALL SQLITE3 USING BY REFERENCE SQLITE3-AGGREGATE-COUNT
060500*      <other call parameters as documented>
060600*      RETURNING integer-result-variable
060700* END-CALL
060800*
060900     05 SQLITE3-AUTO-EXTENSION          PIC X(23)
061000            VALUE IS Z'sqlite3_auto_extension'.
061100* This function returns an integer which in COBOL
061200* would be PIC S9(9) COMP-5. You should assign
061300* the result to the variable using the RETURNING clause
061400* CALL SQLITE3 USING BY REFERENCE SQLITE3-AUTO-EXTENSION
061500*      <other call parameters as documented>
061600*      RETURNING integer-result-variable
061700* END-CALL
061800*
061900     05 SQLITE3-BACKUP-FINISH           PIC X(22)
062000            VALUE IS Z'sqlite3_backup_finish'.
062100* This function returns an integer which in COBOL
062200* would be PIC S9(9) COMP-5. You should assign
062300* the result to the variable using the RETURNING clause
062400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BACKUP-FINISH
062500*      <other call parameters as documented>
062600*      RETURNING integer-result-variable
062700* END-CALL
062800*
062900     05 SQLITE3-BACKUP-INIT             PIC X(20)
063000            VALUE IS Z'sqlite3_backup_init'.
063100* This function returns a pointer which in COBOL
063200* would be USAGE POINTER. You should assign
063300* the result to the variable using the RETURNING clause
063400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BACK-INIT
063500*      <other call parameters as documented>
063600*      RETURNING pointer-result-variable
063700* END-CALL
063800*
063900     05 SQLITE3-BACKUP-PAGECOUNT        PIC X(25)
064000            VALUE IS Z'sqlite3_backup_pagecount'.
064100* This function returns an integer which in COBOL
064200* would be PIC S9(9) COMP-5. You should assign
064300* the result to the variable using the RETURNING clause
064400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BACKUP-PAGECOUNT
064500*      <other call parameters as documented>
064600*      RETURNING integer-result-variable
064700* END-CALL
064800*
064900     05 SQLITE3-BACKUP-REMAINING        PIC X(25)
065000            VALUE IS Z'sqlite3_backup_remaining'.
065100* This function returns an integer which in COBOL
065200* would be PIC S9(9) COMP-5. You should assign
065300* the result to the variable using the RETURNING clause
065400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BACKUP-REMAINING
065500*      <other call parameters as documented>
065600*      RETURNING integer-result-variable
065700* END-CALL
065800*
065900     05 SQLITE3-BACKUP-STEP             PIC X(20)
066000            VALUE IS Z'sqlite3_backup_step'.
066100* This function returns an integer which in COBOL
066200* would be PIC S9(9) COMP-5. You should assign
066300* the result to the variable using the RETURNING clause
066400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BACKUP-STEP
066500*      <other call parameters as documented>
066600*      RETURNING integer-result-variable
066700* END-CALL
066800*
066900     05 SQLITE3-BIND-BLOB               PIC X(18)
067000            VALUE IS Z'sqlite3_bind_blob'.
067100* This function returns an integer which in COBOL
067200* would be PIC S9(9) COMP-5. You should assign
067300* the result to the variable using the RETURNING clause
067400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-BLOB
067500*      <other call parameters as documented>
067600*      RETURNING integer-result-variable
067700* END-CALL
067800*
067900     05 SQLITE3-BIND-DOUBLE             PIC X(20)
068000            VALUE IS Z'sqlite3_bind_double'.
068100* This function returns an integer which in COBOL
068200* would be PIC S9(9) COMP-5. You should assign
068300* the result to the variable using the RETURNING clause
068400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-DOUBLE
068500*      <other call parameters as documented>
068600*      RETURNING integer-result-variable
068700* END-CALL
068800*
068900     05 SQLITE3-BIND-INT                PIC X(17)
069000            VALUE IS Z'sqlite3_bind_int'.
069100* This function returns an integer which in COBOL
069200* would be PIC S9(9) COMP-5. You should assign
069300* the result to the variable using the RETURNING clause
069400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-INT
069500*      <other call parameters as documented>
069600*      RETURNING integer-result-variable
069700* END-CALL
069800*
069900     05 SQLITE3-BIND-INT64              PIC X(19)
070000            VALUE IS Z'sqlite3_bind_int64'.
070100* This function returns an integer which in COBOL
070200* would be PIC S9(9) COMP-5. You should assign
070300* the result to the variable using the RETURNING clause
070400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-INT64
070500*      <other call parameters as documented>
070600*      RETURNING integer-result-variable
070700* END-CALL
070800*
070900     05 SQLITE3-BIND-NULL               PIC X(18)
071000            VALUE IS Z'sqlite3_bind_null'.
071100* This function returns an integer which in COBOL
071200* would be PIC S9(9) COMP-5. You should assign
071300* the result to the variable using the RETURNING clause
071400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-NULL
071500*      <other call parameters as documented>
071600*      RETURNING integer-result-variable
071700* END-CALL
071800*
071900     05 SQLITE3-BIND-PARAMETER-COUNT    PIC X(29)
072000            VALUE IS Z'sqlite3_bind_parameter_count'.
072100* This function returns an integer which in COBOL
072200* would be PIC S9(9) COMP-5. You should assign
072300* the result to the variable using the RETURNING clause
072400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-PARAMETER-COUNT
072500*      <other call parameters as documented>
072600*      RETURNING integer-result-variable
072700* END-CALL
072800*
072900     05 SQLITE3-BIND-PARAMETER-INDEX    PIC X(29)
073000            VALUE IS Z'sqlite3_bind_parameter_index'.
073100* This function returns an integer which in COBOL
073200* would be PIC S9(9) COMP-5. You should assign
073300* the result to the variable using the RETURNING clause
073400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-PARAMETER-INDEX
073500*      <other call parameters as documented>
073600*      RETURNING integer-result-variable
073700* END-CALL
073800*
073900     05 SQLITE3-BIND-PARAMETER-NAME     PIC X(28)
074000            VALUE IS Z'sqlite3_bind_parameter_name'.
074100* This function returns a pointer which in COBOL
074200* would be USAGE POINTER. You should assign
074300* the result to the variable using the RETURNING clause
074400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-PARAMETER-NAME
074500*      <other call parameters as documented>
074600*      RETURNING pointer-result-variable
074700* END-CALL
074800*
074900     05 SQLITE3-BIND-TEXT               PIC X(18)
075000            VALUE IS Z'sqlite3_bind_text'.
075100* This function returns an integer which in COBOL
075200* would be PIC S9(9) COMP-5. You should assign
075300* the result to the variable using the RETURNING clause
075400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-TEXT
075500*      <other call parameters as documented>
075600*      RETURNING integer-result-variable
075700* END-CALL
075800*
075900     05 SQLITE3-BIND-TEXT16             PIC X(20)
076000            VALUE IS Z'sqlite3_bind_text16'.
076100* This function returns an integer which in COBOL
076200* would be PIC S9(9) COMP-5. You should assign
076300* the result to the variable using the RETURNING clause
076400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-TEXT16
076500*      <other call parameters as documented>
076600*      RETURNING integer-result-variable
076700* END-CALL
076800*
076900     05 SQLITE3-BIND-VALUE              PIC X(19)
077000            VALUE IS Z'sqlite3_bind_value'.
077100* This function returns an integer which in COBOL
077200* would be PIC S9(9) COMP-5. You should assign
077300* the result to the variable using the RETURNING clause
077400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-VALUE
077500*      <other call parameters as documented>
077600*      RETURNING integer-result-variable
077700* END-CALL
077800*
077900     05 SQLITE3-BIND-ZEROBLOB           PIC X(22)
078000            VALUE IS Z'sqlite3_bind_zeroblob'.
078100* This function returns an integer which in COBOL
078200* would be PIC S9(9) COMP-5. You should assign
078300* the result to the variable using the RETURNING clause
078400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BIND-ZEROBLOB
078500*      <other call parameters as documented>
078600*      RETURNING integer-result-variable
078700* END-CALL
078800*
078900     05 SQLITE3-BLOB-BYTES              PIC X(19)
079000            VALUE IS Z'sqlite3_blob_bytes'.
079100* This function returns an integer which in COBOL
079200* would be PIC S9(9) COMP-5. You should assign
079300* the result to the variable using the RETURNING clause
079400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BLOB-BYTES
079500*      <other call parameters as documented>
079600*      RETURNING integer-result-variable
079700* END-CALL
079800*
079900     05 SQLITE3-BLOB-CLOSE              PIC X(19)
080000            VALUE IS Z'sqlite3_blob_close'.
080100* This function returns an integer which in COBOL
080200* would be PIC S9(9) COMP-5. You should assign
080300* the result to the variable using the RETURNING clause
080400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BLOB-CLOSE
080500*      <other call parameters as documented>
080600*      RETURNING integer-result-variable
080700* END-CALL
080800*
080900     05 SQLITE3-BLOB-OPEN               PIC X(18)
081000            VALUE IS Z'sqlite3_blob_open'.
081100* This function returns an integer which in COBOL
081200* would be PIC S9(9) COMP-5. You should assign
081300* the result to the variable using the RETURNING clause
081400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BLOB-OPEN
081500*      <other call parameters as documented>
081600*      RETURNING integer-result-variable
081700* END-CALL
081800*
081900     05 SQLITE3-BLOB-READ               PIC X(18)
082000            VALUE IS Z'sqlite3_blob_read'.
082100* This function returns an integer which in COBOL
082200* would be PIC S9(9) COMP-5. You should assign
082300* the result to the variable using the RETURNING clause
082400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BLOB-READ
082500*      <other call parameters as documented>
082600*      RETURNING integer-result-variable
082700* END-CALL
082800*
082900     05 SQLITE3-BLOB-REOPEN             PIC X(20)
083000            VALUE IS Z'sqlite3_blob_reopen'.
083100* This function returns an integer which in COBOL
083200* would be PIC S9(9) COMP-5. You should assign
083300* the result to the variable using the RETURNING clause
083400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BLOB-REOPEN
083500*      <other call parameters as documented>
083600*      RETURNING integer-result-variable
083700* END-CALL
083800*
083900     05 SQLITE3-BLOB-WRITE              PIC X(19)
084000            VALUE IS Z'sqlite3_blob_write'.
084100* This function returns an integer which in COBOL
084200* would be PIC S9(9) COMP-5. You should assign
084300* the result to the variable using the RETURNING clause
084400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BLOB-WRITE
084500*      <other call parameters as documented>
084600*      RETURNING integer-result-variable
084700* END-CALL
084800*
084900     05 SQLITE3-BUSY-HANDLER            PIC X(21)
085000            VALUE IS Z'sqlite3_busy_handler'.
085100* This function returns an integer which in COBOL
085200* would be PIC S9(9) COMP-5. You should assign
085300* the result to the variable using the RETURNING clause
085400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BUSY-HANDLER
085500*      <other call parameters as documented>
085600*      RETURNING integer-result-variable
085700* END-CALL
085800*
085900     05 SQLITE3-BUSY-TIMEOUT            PIC X(21)
086000            VALUE IS Z'sqlite3_busy_timeout'.
086100* This function returns an integer which in COBOL
086200* would be PIC S9(9) COMP-5. You should assign
086300* the result to the variable using the RETURNING clause
086400* CALL SQLITE3 USING BY REFERENCE SQLITE3-BUSY-TIMEOUT
086500*      <other call parameters as documented>
086600*      RETURNING integer-result-variable
086700* END-CALL
086800*
086900     05 SQLITE3-CANCEL-AUTO-EXTENSION   PIC X(30)
087000            VALUE IS Z'sqlite3_cancel_auto_extension'.
087100* This function returns an integer which in COBOL
087200* would be PIC S9(9) COMP-5. You should assign
087300* the result to the variable using the RETURNING clause
087400* CALL SQLITE3 USING BY REFERENCE SQLITE3-CANCEL-AUTO-EXTENSION
087500*      <other call parameters as documented>
087600*      RETURNING integer-result-variable
087700* END-CALL
087800*
087900     05 SQLITE3-CHANGES                 PIC X(16)
088000            VALUE IS Z'sqlite3_changes'.
088100* This function returns an integer which in COBOL
088200* would be PIC S9(9) COMP-5. You should assign
088300* the result to the variable using the RETURNING clause
088400* CALL SQLITE3 USING BY REFERENCE SQLITE3-CHANGES
088500*      <other call parameters as documented>
088600*      RETURNING integer-result-variable
088700* END-CALL
088800*
088900     05 SQLITE3-CLEAR-BINDINGS          PIC X(23)
089000            VALUE IS Z'sqlite3_clear_bindings'.
089100* This function returns an integer which in COBOL
089200* would be PIC S9(9) COMP-5. You should assign
089300* the result to the variable using the RETURNING clause
089400* CALL SQLITE3 USING BY REFERENCE SQLITE3-CLEAR-BINDINGS
089500*      <other call parameters as documented>
089600*      RETURNING integer-result-variable
089700* END-CALL
089800*
089900     05 SQLITE3-CLOSE                   PIC X(14)
090000            VALUE IS Z'sqlite3_close'.
090100* This function returns an integer which in COBOL
090200* would be PIC S9(9) COMP-5. You should assign
090300* the result to the variable using the RETURNING clause
090400* CALL SQLITE3 USING BY REFERENCE SQLITE3-CLOSE
090500*      <other call parameters as documented>
090600*      RETURNING integer-result-variable
090700* END-CALL
090800*
090900     05 SQLITE3-CLOSE-V2                PIC X(17)
091000            VALUE IS Z'sqlite3_close_v2'.
091100* This function returns an integer which in COBOL
091200* would be PIC S9(9) COMP-5. You should assign
091300* the result to the variable using the RETURNING clause
091400* CALL SQLITE3 USING BY REFERENCE SQLITE3-CLOSE-VW
091500*      <other call parameters as documented>
091600*      RETURNING integer-result-variable
091700* END-CALL
091800*
091900     05 SQLITE3-COLLATION-NEEDED        PIC X(25)
092000            VALUE IS Z'sqlite3_collation_needed'.
092100* This function returns an integer which in COBOL
092200* would be PIC S9(9) COMP-5. You should assign
092300* the result to the variable using the RETURNING clause
092400* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLLATION-NEEDED
092500*      <other call parameters as documented>
092600*      RETURNING integer-result-variable
092700* END-CALL
092800*
092900     05 SQLITE3-COLLATION-NEEDED16      PIC X(27)
093000            VALUE IS Z'sqlite3_collation_needed16'.
093100* This function returns an integer which in COBOL
093200* would be PIC S9(9) COMP-5. You should assign
093300* the result to the variable using the RETURNING clause
093400* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLLATION-NEEDED16
093500*      <other call parameters as documented>
093600*      RETURNING integer-result-variable
093700* END-CALL
093800*
093900     05 SQLITE3-COLUMN-BLOB             PIC X(20)
094000            VALUE IS Z'sqlite3_column_blob'.
094100* This function returns a pointer which in COBOL
094200* would be USAGE POINTER. You should assign
094300* the result to the variable using the RETURNING clause
094400* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-BLOB
094500*      <other call parameters as documented>
094600*      RETURNING pointer-result-variable
094700* END-CALL
094800*
094900     05 SQLITE3-COLUMN-BYTES            PIC X(21)
095000            VALUE IS Z'sqlite3_column_bytes'.
095100* This function returns an integer which in COBOL
095200* would be PIC S9(9) COMP-5. You should assign
095300* the result to the variable using the RETURNING clause
095400* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-BYTES
095500*      <other call parameters as documented>
095600*      RETURNING integer-result-variable
095700* END-CALL
095800*
095900     05 SQLITE3-COLUMN-BYTES16          PIC X(23)
096000            VALUE IS Z'sqlite3_column_bytes16'.
096100* This function returns an integer which in COBOL
096200* would be PIC S9(9) COMP-5. You should assign
096300* the result to the variable using the RETURNING clause
096400* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-BYTES16
096500*      <other call parameters as documented>
096600*      RETURNING integer-result-variable
096700* END-CALL
096800*
096900     05 SQLITE3-COLUMN-COUNT            PIC X(21)
097000            VALUE IS Z'sqlite3_column_count'.
097100* This function returns an integer which in COBOL
097200* would be PIC S9(9) COMP-5. You should assign
097300* the result to the variable using the RETURNING clause
097400* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-COUNT
097500*      <other call parameters as documented>
097600*      RETURNING integer-result-variable
097700* END-CALL
097800*
097900     05 SQLITE3-COLUMN-DATABASE-NAME    PIC X(29)
098000            VALUE IS Z'sqlite3_column_database_name'.
098100* This function returns a pointer which in COBOL
098200* would be USAGE POINTER. You should assign
098300* the result to the variable using the RETURNING clause
098400* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-DATABASE-NAME
098500*      <other call parameters as documented>
098600*      RETURNING pointer-result-variable
098700* END-CALL
098800*
098900     05 SQLITE3-COLUMN-DATABASE-NAME16  PIC X(32)
099000            VALUE IS Z'sqlite3_column_database_name16'.
099100* This function returns a pointer which in COBOL
099200* would be USAGE POINTER. You should assign
099300* the result to the variable using the RETURNING clause
099400* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-DATABASE-NAME16
099500*      <other call parameters as documented>
099600*      RETURNING pointer-result-variable
099700* END-CALL
099800*
099900     05 SQLITE3-COLUMN-DECLTYPE         PIC X(24)
100000            VALUE IS Z'sqlite3_column_decltype'.
100100* This function returns a pointer which in COBOL
100200* would be USAGE POINTER. You should assign
100300* the result to the variable using the RETURNING clause
100400* CALL SQLITE3 USING BY REFERENCE SQLITE3-DECLTYPE
100500*      <other call parameters as documented>
100600*      RETURNING pointer-result-variable
100700* END-CALL
100800*
100900     05 SQLITE3-COLUMN-DECLTYPE16       PIC X(26)
101000            VALUE IS Z'sqlite3_column_decltype16'.
101100* This function returns a pointer which in COBOL
101200* would be USAGE POINTER. You should assign
101300* the result to the variable using the RETURNING clause
101400* CALL SQLITE3 USING BY REFERENCE SQLITE3-DECLTYPE16
101500*      <other call parameters as documented>
101600*      RETURNING pointer-result-variable
101700* END-CALL
101800*
101900     05 SQLITE3-COLUMN-DOUBLE           PIC X(22)
102000            VALUE IS Z'sqlite3_column_double'.
102100* Data is returned as a PIC USAGE COMP-2 in the second
102200* parameter passed, BY REFERENCE, to SQLITE3A. This parameter is
102300* inserted before the ones documented in the C API.
102400* CALL SQLITE3 USING
102500*              BY REFERENCE SQLITE3-COLUMN-DOUBLE
102600*              BY REFERENCE double-result-variable
102700*              <other call parameters as documented>
102800* END-CALL
102900* Before using this value, you must convert it from BFP to HFP.
103000* See the CONVERT-BFP-TO-HFP function below.
103100*
103200     05 SQLITE3-COLUMN-INT              PIC X(19)
103300            VALUE IS Z'sqlite3_column_int'.
103400* This function returns an integer which in COBOL
103500* would be PIC S9(9) COMP-5. You should assign
103600* the result to the variable using the RETURNING clause
103700* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-INT
103800*      <other call parameters as documented>
103900*      RETURNING integer-result-variable
104000* END-CALL
104100*
104200     05 SQLITE3-COLUMN-INT64            PIC X(21)
104300            VALUE IS Z'sqlite3_column_int64'.
104400* Data is returned as a PIC S9(18) COMP-5 in the second
104500* parameter passed, BY REFERENCE, to SQLITE3A. This parameter is
104600* inserted before the ones documented in the C API.
104700* This function returns a pointer which in COBOL
104800* would be USAGE POINTER. You should assign
104900* the result to the variable using the RETURNING clause
105000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-INT64
105100*      BY REFERENCE int64-returned-value
105200*      <other call parameters as documented>
105300* END-CALL
105400*
105500     05 SQLITE3-COLUMN-NAME             PIC X(20)
105600            VALUE IS Z'sqlite3_column_name'.
105700* This function returns a pointer which in COBOL
105800* would be USAGE POINTER. You should assign
105900* the result to the variable using the RETURNING clause
106000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-NAME
106100*      <other call parameters as documented>
106200*      RETURNING pointer-result-variable
106300* END-CALL
106400*
106500     05 SQLITE3-COLUMN-NAME16           PIC X(22)
106600            VALUE IS Z'sqlite3_column_name16'.
106700* This function returns a pointer which in COBOL
106800* would be USAGE POINTER. You should assign
106900* the result to the variable using the RETURNING clause
107000* CALL SQLITE3 USING BY REFERENCE SQLITE3- COLUMN-NAME16
107100*      <other call parameters as documented>
107200*      RETURNING pointer-result-variable
107300* END-CALL
107400*
107500     05 SQLITE3-COLUMN-ORIGIN-NAME      PIC X(27)
107600            VALUE IS Z'sqlite3_column_origin_name'.
107700* This function returns a pointer which in COBOL
107800* would be USAGE POINTER. You should assign
107900* the result to the variable using the RETURNING clause
108000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-ORIGIN-NAME
108100*      <other call parameters as documented>
108200*      RETURNING pointer-result-variable
108300* END-CALL
108400*
108500     05 SQLITE3-COLUMN-ORIGIN-NAME16    PIC X(29)
108600            VALUE IS Z'sqlite3_column_origin_name16'.
108700* This function returns a pointer which in COBOL
108800* would be USAGE POINTER. You should assign
108900* the result to the variable using the RETURNING clause
109000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-ORIGIN-NAME16
109100*      <other call parameters as documented>
109200*      RETURNING pointer-result-variable
109300* END-CALL
109400*
109500     05 SQLITE3-COLUMN-TABLE-NAME       PIC X(26)
109600            VALUE IS Z'sqlite3_column_table_name'.
109700* This function returns a pointer which in COBOL
109800* would be USAGE POINTER. You should assign
109900* the result to the variable using the RETURNING clause
110000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-TABLE-NAME
110100*      <other call parameters as documented>
110200*      RETURNING pointer-result-variable
110300* END-CALL
110400*
110500     05 SQLITE3-COLUMN-TABLE-NAME16     PIC X(28)
110600            VALUE IS Z'sqlite3_column_table_name16'.
110700* This function returns a pointer which in COBOL
110800* would be USAGE POINTER. You should assign
110900* the result to the variable using the RETURNING clause
111000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-TABLE-NAME16
111100*      <other call parameters as documented>
111200*      RETURNING pointer-result-variable
111300* END-CALL
111400*
111500     05 SQLITE3-COLUMN-TEXT             PIC X(20)
111600            VALUE IS Z'sqlite3_column_text'.
111700* This function returns a pointer which in COBOL
111800* would be USAGE POINTER. You should assign
111900* the result to the variable using the RETURNING clause
112000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-TEXT
112100*      <other call parameters as documented>
112200*      RETURNING pointer-result-variable
112300* END-CALL
112400*
112500     05 SQLITE3-COLUMN-TEXT16           PIC X(22)
112600            VALUE IS Z'sqlite3_column_text16'.
112700* This function returns a pointer which in COBOL
112800* would be USAGE POINTER. You should assign
112900* the result to the variable using the RETURNING clause
113000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-TEXT16
113100*      <other call parameters as documented>
113200*      RETURNING pointer-result-variable
113300* END-CALL
113400*
113500     05 SQLITE3-COLUMN-TYPE             PIC X(20)
113600            VALUE IS Z'sqlite3_column_type'.
113700*
113800* This function returns an integer which in COBOL
113900* would be PIC S9(9) COMP-5. You should assign
114000* the result to the variable using the RETURNING clause
114100* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-TYPE
114200*      <other call parameters as documented>
114300*      RETURNING integer-result-variable
114400* END-CALL
114500     05 SQLITE3-COLUMN-VALUE            PIC X(21)
114600            VALUE IS Z'sqlite3_column_value'.
114700* This function returns a pointer which in COBOL
114800* would be USAGE POINTER. You should assign
114900* the result to the variable using the RETURNING clause
115000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COLUMN-VALUE
115100*      <other call parameters as documented>
115200*      RETURNING pointer-result-variable
115300* END-CALL
115400*
115500     05 SQLITE3-COMMIT-HOOK             PIC X(20)
115600            VALUE IS Z'sqlite3_commit_hook'.
115700* This function returns a pointer which in COBOL
115800* would be USAGE POINTER. You should assign
115900* the result to the variable using the RETURNING clause
116000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COMMIT-HOOK
116100*      <other call parameters as documented>
116200*      RETURNING pointer-result-variable
116300* END-CALL
116400*
116500     05 SQLITE3-COMPILEOPTION-GET       PIC X(26)
116600            VALUE IS Z'sqlite3_compileoption_get'.
116700* This function returns a pointer which in COBOL
116800* would be USAGE POINTER. You should assign
116900* the result to the variable using the RETURNING clause
117000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COMPILEOPTION-GET
117100*      <other call parameters as documented>
117200*      RETURNING pointer-result-variable
117300* END-CALL
117400*
117500     05 SQLITE3-COMPILEOPTION-USED      PIC X(27)
117600            VALUE IS Z'sqlite3_compileoption_used'.
117700*
117800* This function returns an integer which in COBOL
117900* would be PIC S9(9) COMP-5. You should assign
118000* the result to the variable using the RETURNING clause
118100* CALL SQLITE3 USING BY REFERENCE SQLITE3-COMPILEOPTION-USED
118200*      <other call parameters as documented>
118300*      RETURNING integer-result-variable
118400* END-CALL
118500     05 SQLITE3-COMPLETE                PIC X(17)
118600            VALUE IS Z'sqlite3_complete'.
118700* This function returns an integer which in COBOL
118800* would be PIC S9(9) COMP-5. You should assign
118900* the result to the variable using the RETURNING clause
119000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COMPLETE
119100*      <other call parameters as documented>
119200*      RETURNING integer-result-variable
119300* END-CALL
119400*
119500     05 SQLITE3-COMPLETE16              PIC X(19)
119600            VALUE IS Z'sqlite3_complete16'.
119700* This function returns an integer which in COBOL
119800* would be PIC S9(9) COMP-5. You should assign
119900* the result to the variable using the RETURNING clause
120000* CALL SQLITE3 USING BY REFERENCE SQLITE3-COMPLETE16
120100*      <other call parameters as documented>
120200*      RETURNING integer-result-variable
120300* END-CALL
120400*
120500     05 SQLITE3-CONFIG                  PIC X(15)
120600            VALUE IS Z'sqlite3_config'.
120700* This function returns an integer which in COBOL
120800* would be PIC S9(9) COMP-5. You should assign
120900* the result to the variable using the RETURNING clause
121000* CALL SQLITE3 USING BY REFERENCE SQLITE3-CONFIG
121100*      <other call parameters as documented>
121200*      RETURNING integer-result-variable
121300* END-CALL
121400*
121500     05 SQLITE3-CONTEXT-DB-HANDLE       PIC X(26)
121600            VALUE IS Z'sqlite3_context_db_handle'.
121700* This function returns a pointer which in COBOL
121800* would be USAGE POINTER. You should assign
121900* the result to the variable using the RETURNING clause
122000* CALL SQLITE3 USING BY REFERENCE SQLITE3-CONTEXT-DB-HANDLE
122100*      <other call parameters as documented>
122200*      RETURNING pointer-result-variable
122300* END-CALL
122400*
122500     05 SQLITE3-CREATE-COLLATION        PIC X(25)
122600            VALUE IS Z'sqlite3_create_collation'.
122700* This function returns an integer which in COBOL
122800* would be PIC S9(9) COMP-5. You should assign
122900* the result to the variable using the RETURNING clause
123000* CALL SQLITE3 USING BY REFERENCE SQLITE3-CREATE-COLLATION
123100*      <other call parameters as documented>
123200*      RETURNING integer-result-variable
123300* END-CALL
123400*
123500     05 SQLITE3-CREATE-COLLATION-V2     PIC X(28)
123600            VALUE IS Z'sqlite3_create_collation_v2'.
123700* This function returns an integer which in COBOL
123800* would be PIC S9(9) COMP-5. You should assign
123900* the result to the variable using the RETURNING clause
124000* CALL SQLITE3 USING BY REFERENCE SQLITE3-CREATE-COLLATION-V2
124100*      <other call parameters as documented>
124200*      RETURNING integer-result-variable
124300* END-CALL
124400*
124500     05 SQLITE3-CREATE-COLLATION16      PIC X(27)
124600            VALUE IS Z'sqlite3_create_collation16'.
124700* This function returns an integer which in COBOL
124800* would be PIC S9(9) COMP-5. You should assign
124900* the result to the variable using the RETURNING clause
125000* CALL SQLITE3 USING BY REFERENCE SQLITE3-CREATE-COLLATION16
125100*      <other call parameters as documented>
125200*      RETURNING integer-result-variable
125300* END-CALL
125400*
125500     05 SQLITE3-CREATE-FUNCTION         PIC X(24)
125600            VALUE IS Z'sqlite3_create_function'.
125700* This function returns an integer which in COBOL
125800* would be PIC S9(9) COMP-5. You should assign
125900* the result to the variable using the RETURNING clause
126000* CALL SQLITE3 USING BY REFERENCE SQLITE3-CREATE-FUNCTION
126100*      <other call parameters as documented>
126200*      RETURNING integer-result-variable
126300* END-CALL
126400*
126500     05 SQLITE3-CREATE-FUNCTION-V2      PIC X(27)
126600            VALUE IS Z'sqlite3_create_function_v2'.
126700* This function returns an integer which in COBOL
126800* would be PIC S9(9) COMP-5. You should assign
126900* the result to the variable using the RETURNING clause
127000* CALL SQLITE3 USING BY REFERENCE SQLITE3-CREATE-FUNCTION-V2
127100*      <other call parameters as documented>
127200*      RETURNING integer-result-variable
127300* END-CALL
127400*
127500     05 SQLITE3-CREATE-FUNCTION16       PIC X(26)
127600            VALUE IS Z'sqlite3_create_function16'.
127700* This function returns an integer which in COBOL
127800* would be PIC S9(9) COMP-5. You should assign
127900* the result to the variable using the RETURNING clause
128000* CALL SQLITE3 USING BY REFERENCE SQLITE3-CREATE-FUNCTION16
128100*      <other call parameters as documented>
128200*      RETURNING integer-result-variable
128300* END-CALL
128400*
128500     05 SQLITE3-CREATE-MODULE           PIC X(22)
128600            VALUE IS Z'sqlite3_create_module'.
128700* This function returns an integer which in COBOL
128800* would be PIC S9(9) COMP-5. You should assign
128900* the result to the variable using the RETURNING clause
129000* CALL SQLITE3 USING BY REFERENCE SQLITE3-CREATE-MODULE
129100*      <other call parameters as documented>
129200*      RETURNING integer-result-variable
129300* END-CALL
129400*
129500     05 SQLITE3-CREATE-MODULE-V2        PIC X(25)
129600            VALUE IS Z'sqlite3_create_module_v2'.
129700* This function returns an integer which in COBOL
129800* would be PIC S9(9) COMP-5. You should assign
129900* the result to the variable using the RETURNING clause
130000* CALL SQLITE3 USING BY REFERENCE SQLITE3-CREATE-MODULE-V2
130100*      <other call parameters as documented>
130200*      RETURNING integer-result-variable
130300* END-CALL
130400*
130500     05 SQLITE3-DATA-COUNT              PIC X(19)
130600            VALUE IS Z'sqlite3_data_count'.
130700* This function returns an integer which in COBOL
130800* would be PIC S9(9) COMP-5. You should assign
130900* the result to the variable using the RETURNING clause
131000* CALL SQLITE3 USING BY REFERENCE SQLITE3-DATA-COUNT
131100*      <other call parameters as documented>
131200*      RETURNING integer-result-variable
131300* END-CALL
131400*
131500     05 SQLITE3-DB-CONFIG               PIC X(18)
131600            VALUE IS Z'sqlite3_db_config'.
131700* This function returns an integer which in COBOL
131800* would be PIC S9(9) COMP-5. You should assign
131900* the result to the variable using the RETURNING clause
132000* CALL SQLITE3 USING BY REFERENCE SQLITE3-DB-CONFIG
132100*      <other call parameters as documented>
132200*      RETURNING integer-result-variable
132300* END-CALL
132400*
132500     05 SQLITE3-DB-FILENAME             PIC X(20)
132600            VALUE IS Z'sqlite3_db_filename'.
132700* This function returns a pointer which in COBOL
132800* would be USAGE POINTER. You should assign
132900* the result to the variable using the RETURNING clause
133000* CALL SQLITE3 USING BY REFERENCE SQLITE3-DB-FILENAME
133100*      <other call parameters as documented>
133200*      RETURNING pointer-result-variable
133300* END-CALL
133400*
133500     05 SQLITE3-DB-HANDLE               PIC X(18)
133600            VALUE IS Z'sqlite3_db_handle'.
133700* This function returns a pointer which in COBOL
133800* would be USAGE POINTER. You should assign
133900* the result to the variable using the RETURNING clause
134000* CALL SQLITE3 USING BY REFERENCE SQLITE3-DB-HANDLE
134100*      <other call parameters as documented>
134200*      RETURNING pointer-result-variable
134300* END-CALL
134400*
134500     05 SQLITE3-DB-MUTEX                PIC X(17)
134600            VALUE IS Z'sqlite3_db_mutex'.
134700* This function returns a pointer which in COBOL
134800* would be USAGE POINTER. You should assign
134900* the result to the variable using the RETURNING clause
135000* CALL SQLITE3 USING BY REFERENCE SQLITE3-DB-MUTEX
135100*      <other call parameters as documented>
135200*      RETURNING pointer-result-variable
135300* END-CALL
135400*
135500     05 SQLITE3-DB-READONLY             PIC X(20)
135600            VALUE IS Z'sqlite3_db_readonly'.
135700* This function returns an integer which in COBOL
135800* would be PIC S9(9) COMP-5. You should assign
135900* the result to the variable using the RETURNING clause
136000* CALL SQLITE3 USING BY REFERENCE SQLITE3-DB-READONLY
136100*      <other call parameters as documented>
136200*      RETURNING integer-result-variable
136300* END-CALL
136400*
136500     05 SQLITE3-DB-RELEASE-MEMORY       PIC X(26)
136600            VALUE IS Z'sqlite3_db_release_memory'.
136700* This function returns an integer which in COBOL
136800* would be PIC S9(9) COMP-5. You should assign
136900* the result to the variable using the RETURNING clause
137000* CALL SQLITE3 USING BY REFERENCE SQLITE3-DB-RELEASE-MEMORY
137100*      <other call parameters as documented>
137200*      RETURNING integer-result-variable
137300* END-CALL
137400*
137500     05 SQLITE3-DB-STATUS               PIC X(18)
137600            VALUE IS Z'sqlite3_db_status'.
137700* This function returns an integer which in COBOL
137800* would be PIC S9(9) COMP-5. You should assign
137900* the result to the variable using the RETURNING clause
138000* CALL SQLITE3 USING BY REFERENCE SQLITE3-DB-STATUS
138100*      <other call parameters as documented>
138200*      RETURNING integer-result-variable
138300* END-CALL
138400*
138500     05 SQLITE3-DECLARE-VTAB            PIC X(21)
138600            VALUE IS Z'sqlite3_declare_vtab'.
138700* This function returns an integer which in COBOL
138800* would be PIC S9(9) COMP-5. You should assign
138900* the result to the variable using the RETURNING clause
139000* CALL SQLITE3 USING BY REFERENCE SQLITE3-DECLARE-VTAB
139100*      <other call parameters as documented>
139200*      RETURNING integer-result-variable
139300* END-CALL
139400*
139500     05 SQLITE3-ENABLE-LOAD-EXTENSION   PIC X(30)
139600            VALUE IS Z'sqlite3_enable_load_extension'.
139700* This function returns an integer which in COBOL
139800* would be PIC S9(9) COMP-5. You should assign
139900* the result to the variable using the RETURNING clause
140000* CALL SQLITE3 USING BY REFERENCE SQLITE3-ENABLE-LOAD-EXTENSION
140100*      <other call parameters as documented>
140200*      RETURNING integer-result-variable
140300* END-CALL
140400*
140500     05 SQLITE3-ENABLE-SHARED-CACHE     PIC X(28)
140600            VALUE IS Z'sqlite3_enable_shared_cache'.
140700* This function returns an integer which in COBOL
140800* would be PIC S9(9) COMP-5. You should assign
140900* the result to the variable using the RETURNING clause
141000* CALL SQLITE3 USING BY REFERENCE SQLITE3-ENABLE-SHARED-CACHE
141100*      <other call parameters as documented>
141200*      RETURNING integer-result-variable
141300* END-CALL
141400*
141500     05 SQLITE3-ERRCODE                 PIC X(16)
141600            VALUE IS Z'sqlite3_errcode'.
141700* This function returns an integer which in COBOL
141800* would be PIC S9(9) COMP-5. You should assign
141900* the result to the variable using the RETURNING clause
142000* CALL SQLITE3 USING BY REFERENCE SQLITE3-ERRCODE
142100*      <other call parameters as documented>
142200*      RETURNING integer-result-variable
142300* END-CALL
142400*
142500     05 SQLITE3-ERRMSG                  PIC X(15)
142600            VALUE IS Z'sqlite3_errmsg'.
142700* This function returns a pointer which in COBOL
142800* would be USAGE POINTER. You should assign
142900* the result to the variable using the RETURNING clause
143000* CALL SQLITE3 USING BY REFERENCE SQLITE3-ERRMSG
143100*      <other call parameters as documented>
143200*      RETURNING pointer-result-variable
143300* END-CALL
143400*
143500     05 SQLITE3-ERRMSG16                PIC X(17)
143600            VALUE IS Z'sqlite3_errmsg16'.
143700* This function returns a pointer which in COBOL
143800* would be USAGE POINTER. You should assign
143900* the result to the variable using the RETURNING clause
144000* CALL SQLITE3 USING BY REFERENCE SQLITE3-ERRMSG16
144100*      <other call parameters as documented>
144200*      RETURNING pointer-result-variable
144300* END-CALL
144400*
144500     05 SQLITE3-ERRSTR                  PIC X(15)
144600            VALUE IS Z'sqlite3_errstr'.
144700* This function returns a pointer which in COBOL
144800* would be USAGE POINTER. You should assign
144900* the result to the variable using the RETURNING clause
145000* CALL SQLITE3 USING BY REFERENCE SQLITE3-ERRSTR
145100*      <other call parameters as documented>
145200*      RETURNING pointer-result-variable
145300* END-CALL
145400*
145500     05 SQLITE3-EXEC                    PIC X(13)
145600            VALUE IS Z'sqlite3_exec'.
145700* This function returns an integer which in COBOL
145800* would be PIC S9(9) COMP-5. You should assign
145900* the result to the variable using the RETURNING clause
146000* CALL SQLITE3 USING BY REFERENCE SQLITE3-EXEC
146100*      <other call parameters as documented>
146200*      RETURNING integer-result-variable
146300* END-CALL
146400*
146500     05 SQLITE3-EXPIRED                 PIC X(16)
146600            VALUE IS Z'sqlite3_expired'.
146700* This function returns an integer which in COBOL
146800* would be PIC S9(9) COMP-5. You should assign
146900* the result to the variable using the RETURNING clause
147000* CALL SQLITE3 USING BY REFERENCE SQLITE3-EXPIRED
147100*      <other call parameters as documented>
147200*      RETURNING integer-result-variable
147300* END-CALL
147400*
147500     05 SQLITE3-EXTENDED-ERRCODE        PIC X(25)
147600            VALUE IS Z'sqlite3_extended_errcode'.
147700* This function returns an integer which in COBOL
147800* would be PIC S9(9) COMP-5. You should assign
147900* the result to the variable using the RETURNING clause
148000* CALL SQLITE3 USING BY REFERENCE SQLITE3-EXTENDED-ERRCODE
148100*      <other call parameters as documented>
148200*      RETURNING integer-result-variable
148300* END-CALL
148400*
148500     05 SQLITE3-EXTENDED-RESULT-CODES   PIC X(30)
148600            VALUE IS Z'sqlite3_extended_result_codes'.
148700* This function returns an integer which in COBOL
148800* would be PIC S9(9) COMP-5. You should assign
148900* the result to the variable using the RETURNING clause
149000* CALL SQLITE3 USING BY REFERENCE SQLITE3-EXTENDED-RESULT-CODES
149100*      <other call parameters as documented>
149200*      RETURNING integer-result-variable
149300* END-CALL
149400*
149500     05 SQLITE3-FILE-CONTROL            PIC X(21)
149600            VALUE IS Z'sqlite3_file_control'.
149700* This function returns an integer which in COBOL
149800* would be PIC S9(9) COMP-5. You should assign
149900* the result to the variable using the RETURNING clause
150000* CALL SQLITE3 USING BY REFERENCE SQLITE3-FILE-CONTROL
150100*      <other call parameters as documented>
150200*      RETURNING integer-result-variable
150300* END-CALL
150400*
150500     05 SQLITE3-FINALIZE                PIC X(17)
150600            VALUE IS Z'sqlite3_finalize'.
150700* This function returns an integer which in COBOL
150800* would be PIC S9(9) COMP-5. You should assign
150900* the result to the variable using the RETURNING clause
151000* CALL SQLITE3 USING BY REFERENCE SQLITE3-FINIALIZE
151100*      <other call parameters as documented>
151200*      RETURNING integer-result-variable
151300* END-CALL
151400*
151500     05 SQLITE3-FREE                    PIC X(13)
151600            VALUE IS Z'sqlite3_free'.
151700* This function does not return anything at all.
151800* CALL SQLITE3 USING BY REFERENCE SQLITE3-FREE
151900*      <other call parameters as documented>
152000* END-CALL
152100*
152200     05 SQLITE3-FREE-TABLE              PIC X(19)
152300            VALUE IS Z'sqlite3_free_table'.
152400* This function does not return anything at all.
152500* CALL SQLITE3 USING BY REFERENCE SQLITE3-FREE-TABLE
152600*      <other call parameters as documented>
152700* END-CALL
152800*
152900     05 SQLITE3-GET-AUTOCOMMIT          PIC X(23)
153000            VALUE IS Z'sqlite3_get_autocommit'.
153100* This function returns an integer which in COBOL
153200* would be PIC S9(9) COMP-5. You should assign
153300* the result to the variable using the RETURNING clause
153400* CALL SQLITE3 USING BY REFERENCE SQLITE3-GET-AUTOCOMMIT
153500*      <other call parameters as documented>
153600*      RETURNING integer-result-variable
153700* END-CALL
153800*
153900     05 SQLITE3-GET-AUXDATA             PIC X(20)
154000            VALUE IS Z'sqlite3_get_auxdata'.
154100* This function returns a pointer which in COBOL
154200* would be USAGE POINTER. You should assign
154300* the result to the variable using the RETURNING clause
154400* CALL SQLITE3 USING BY REFERENCE SQLITE3-GET-AUXDATA
154500*      <other call parameters as documented>
154600*      RETURNING pointer-result-variable
154700* END-CALL
154800*
154900     05 SQLITE3-GET-TABLE               PIC X(18)
155000            VALUE IS Z'sqlite3_get_table'.
155100* This function returns an integer which in COBOL
155200* would be PIC S9(9) COMP-5. You should assign
155300* the result to the variable using the RETURNING clause
155400* CALL SQLITE3 USING BY REFERENCE SQLITE3-GET-TABLE
155500*      <other call parameters as documented>
155600*      RETURNING integer-result-variable
155700* END-CALL
155800*
155900     05 SQLITE3-GLOBAL-RECOVER          PIC X(23)
156000            VALUE IS Z'sqlite3_global_recover'.
156100* This function returns an integer which in COBOL
156200* would be PIC S9(9) COMP-5. You should assign
156300* the result to the variable using the RETURNING clause
156400* CALL SQLITE3 USING BY REFERENCE SQLITE3-GLOBAL-RECOVER
156500*      <other call parameters as documented>
156600*      RETURNING integer-result-variable
156700* END-CALL
156800*
156900     05 SQLITE3-INITIALIZE              PIC X(19)
157000            VALUE IS Z'sqlite3_initialize'.
157100* This function returns an integer which in COBOL
157200* would be PIC S9(9) COMP-5. You should assign
157300* the result to the variable using the RETURNING clause
157400* CALL SQLITE3 USING BY REFERENCE SQLITE3-INITIALIZE
157500*      <other call parameters as documented>
157600*      RETURNING integer-result-variable
157700* END-CALL
157800*
157900     05 SQLITE3-INTERRUPT               PIC X(18)
158000            VALUE IS Z'sqlite3_interrupt'.
158100* This function does not return anything at all.
158200* CALL SQLITE3 USING BY REFERENCE SQLITE3-INTERRUPT
158300*      <other call parameters as documented>
158400* END-CALL
158500*
158600     05 SQLITE3-LAST-INSERT-ROWID       PIC X(26)
158700            VALUE IS Z'sqlite3_last_insert_rowid'.
158800* Data is returned as a PIC S9(18) COMP-5 in the second
158900* parameter passed, BY REFERENCE, to SQLITE3A. This parameter is
159000* inserted before the ones documented in the C API.
159100* This function returns a pointer which in COBOL
159200* would be USAGE POINTER. You should assign
159300* the result to the variable using the RETURNING clause
159400* CALL SQLITE3 USING BY REFERENCE SQLITE3-LAST-INSERT-ROWID
159500*      BY REFERENCE int64-returned-value
159600*      <other call parameters as documented>
159700* END-CALL
159800*
159900     05 SQLITE3-LIBVERSION              PIC X(19)
160000            VALUE IS Z'sqlite3_libversion'.
160100* This function returns a pointer which in COBOL
160200* would be USAGE POINTER. You should assign
160300* the result to the variable using the RETURNING clause
160400* CALL SQLITE3 USING BY REFERENCE SQLITE3-LIBVERSION
160500*      <other call parameters as documented>
160600*      RETURNING pointer-result-variable
160700* END-CALL
160800*
160900     05 SQLITE3-LIBVERSION-NUMBER       PIC X(26)
161000            VALUE IS Z'sqlite3_libversion_number'.
161100* This function returns an integer which in COBOL
161200* would be PIC S9(9) COMP-5. You should assign
161300* the result to the variable using the RETURNING clause
161400* CALL SQLITE3 USING BY REFERENCE SQLITE3-LIBVERSION-NUMBER
161500*      <other call parameters as documented>
161600*      RETURNING integer-result-variable
161700* END-CALL
161800*
161900     05 SQLITE3-LIMIT                   PIC X(14)
162000            VALUE IS Z'sqlite3_limit'.
162100* This function returns an integer which in COBOL
162200* would be PIC S9(9) COMP-5. You should assign
162300* the result to the variable using the RETURNING clause
162400* CALL SQLITE3 USING BY REFERENCE SQLITE3-LIMIT
162500*      <other call parameters as documented>
162600*      RETURNING integer-result-variable
162700* END-CALL
162800*
162900     05 SQLITE3-LOAD-EXTENSION          PIC X(23)
163000            VALUE IS Z'sqlite3_load_extension'.
163100* This function returns an integer which in COBOL
163200* would be PIC S9(9) COMP-5. You should assign
163300* the result to the variable using the RETURNING clause
163400* CALL SQLITE3 USING BY REFERENCE SQLITE3-LOAD-EXTENSION
163500*      <other call parameters as documented>
163600*      RETURNING integer-result-variable
163700* END-CALL
163800*
163900     05 SQLITE3-LOG                     PIC X(12)
164000            VALUE IS Z'sqlite3_log'.
164100* This function does not return anything at all.
164200* CALL SQLITE3 USING BY REFERENCE SQLITE3-LOG
164300*      <other call parameters as documented>
164400* END-CALL
164500*
164600     05 SQLITE3-MALLOC                  PIC X(15)
164700            VALUE IS Z'sqlite3_malloc'.
164800* This function returns a pointer which in COBOL
164900* would be USAGE POINTER. You should assign
165000* the result to the variable using the RETURNING clause
165100* CALL SQLITE3 USING BY REFERENCE SQLITE3-MALLOC
165200*      <other call parameters as documented>
165300*      RETURNING pointer-result-variable
165400* END-CALL
165500*
165600     05 SQLITE3-MEMORY-ALARM            PIC X(21)
165700            VALUE IS Z'sqlite3_memory_alarm'.
165800* This function returns an integer which in COBOL
165900* would be PIC S9(9) COMP-5. You should assign
166000* the result to the variable using the RETURNING clause
166100* CALL SQLITE3 USING BY REFERENCE SQLITE3-MEMORY-ALARM
166200*      <other call parameters as documented>
166300*      RETURNING integer-result-variable
166400* END-CALL
166500*
166600     05 SQLITE3-MEMORY-HIGHWATER        PIC X(25)
166700            VALUE IS Z'sqlite3_memory_highwater'.
166800* Data is returned as a PIC S9(18) COMP-5 in the second
166900* parameter passed, BY REFERENCE, to SQLITE3A. This parameter is
167000* inserted before the ones documented in the C API.
167100* This function returns a pointer which in COBOL
167200* would be USAGE POINTER. You should assign
167300* the result to the variable using the RETURNING clause
167400* CALL SQLITE3 USING BY REFERENCE SQLITE3-MEMORY-HIGHWATER
167500*      BY REFERENCE int64-returned-value
167600*      <other call parameters as documented>
167700* END-CALL
167800*
167900     05 SQLITE3-MEMORY-USED             PIC X(20)
168000            VALUE IS Z'sqlite3_memory_used'.
168100* Data is returned as a PIC S9(18) COMP-5 in the second
168200* parameter passed, BY REFERENCE, to SQLITE3A. This parameter is
168300* inserted before the ones documented in the C API.
168400* This function returns a pointer which in COBOL
168500* would be USAGE POINTER. You should assign
168600* the result to the variable using the RETURNING clause
168700* CALL SQLITE3 USING BY REFERENCE SQLITE3-MEMORY-USED
168800*      BY REFERENCE int64-returned-value
168900*      <other call parameters as documented>
169000* END-CALL
169100*
169200     05 SQLITE3-MPRINTF                 PIC X(16)
169300            VALUE IS Z'sqlite3_mprintf'.
169400* This function returns a pointer which in COBOL
169500* would be USAGE POINTER. You should assign
169600* the result to the variable using the RETURNING clause
169700* CALL SQLITE3 USING BY REFERENCE SQLITE3-MPRINTF
169800*      <other call parameters as documented>
169900*      RETURNING pointer-result-variable
170000* END-CALL
170100*
170200     05 SQLITE3-MUTEX-ALLOC             PIC X(20)
170300            VALUE IS Z'sqlite3_mutex_alloc'.
170400* This function returns a pointer which in COBOL
170500* would be USAGE POINTER. You should assign
170600* the result to the variable using the RETURNING clause
170700* CALL SQLITE3 USING BY REFERENCE SQLITE3-MUTEX-ALLOC
170800*      <other call parameters as documented>
170900*      RETURNING pointer-result-variable
171000* END-CALL
171100*
171200     05 SQLITE3-MUTEX-ENTER             PIC X(20)
171300            VALUE IS Z'sqlite3_mutex_enter'.
171400* This function does not return anything at all.
171500* CALL SQLITE3 USING BY REFERENCE SQLITE3-MUTEX-ENTER
171600*      <other call parameters as documented>
171700* END-CALL
171800*
171900     05 SQLITE3-MUTEX-FREE              PIC X(19)
172000            VALUE IS Z'sqlite3_mutex_free'.
172100* This function does not return anything at all.
172200* CALL SQLITE3 USING BY REFERENCE SQLITE3-MUTEX-FREE
172300*      <other call parameters as documented>
172400* END-CALL
172500*
172600     05 SQLITE3-MUTEX-LEAVE             PIC X(20)
172700            VALUE IS Z'sqlite3_mutex_leave'.
172800* This function does not return anything at all.
172900* CALL SQLITE3 USING BY REFERENCE SQLITE3-MUTEX-LEAVE
173000*      <other call parameters as documented>
173100* END-CALL
173200*
173300     05 SQLITE3-MUTEX-TRY               PIC X(18)
173400            VALUE IS Z'sqlite3_mutex_try'.
173500* This function returns an integer which in COBOL
173600* would be PIC S9(9) COMP-5. You should assign
173700* the result to the variable using the RETURNING clause
173800* CALL SQLITE3 USING BY REFERENCE SQLITE3-MUTEX-TRY
173900*      <other call parameters as documented>
174000*      RETURNING integer-result-variable
174100* END-CALL
174200*
174300     05 SQLITE3-NEXT-STMT               PIC X(18)
174400            VALUE IS Z'sqlite3_next_stmt'.
174500* This function returns a pointer which in COBOL
174600* would be USAGE POINTER. You should assign
174700* the result to the variable using the RETURNING clause
174800* CALL SQLITE3 USING BY REFERENCE SQLITE3-NEXT-STMT
174900*      <other call parameters as documented>
175000*      RETURNING pointer-result-variable
175100* END-CALL
175200*
175300     05 SQLITE3-OPEN                    PIC X(13)
175400            VALUE IS Z'sqlite3_open'.
175500* This function returns an integer which in COBOL
175600* would be PIC S9(9) COMP-5. You should assign
175700* the result to the variable using the RETURNING clause
175800* CALL SQLITE3 USING BY REFERENCE SQLITE3-OPEN
175900*      <other call parameters as documented>
176000*      RETURNING integer-result-variable
176100* END-CALL
176200*
176300     05 SQLITE3-OPEN-V2                 PIC X(16)
176400            VALUE IS Z'sqlite3_open_v2'.
176500* This function returns an integer which in COBOL
176600* would be PIC S9(9) COMP-5. You should assign
176700* the result to the variable using the RETURNING clause
176800* CALL SQLITE3 USING BY REFERENCE SQLITE3-OPEN-V2
176900*      <other call parameters as documented>
177000*      RETURNING integer-result-variable
177100* END-CALL
177200*
177300     05 SQLITE3-OPEN16                  PIC X(15)
177400            VALUE IS Z'sqlite3_open16'.
177500* This function returns an integer which in COBOL
177600* would be PIC S9(9) COMP-5. You should assign
177700* the result to the variable using the RETURNING clause
177800* CALL SQLITE3 USING BY REFERENCE SQLITE3-OPEN16
177900*      <other call parameters as documented>
178000*      RETURNING integer-result-variable
178100* END-CALL
178200*
178300     05 SQLITE3-OS-END                  PIC X(15)
178400            VALUE IS Z'sqlite3_os_end'.
178500* This function returns an integer which in COBOL
178600* would be PIC S9(9) COMP-5. You should assign
178700* the result to the variable using the RETURNING clause
178800* CALL SQLITE3 USING BY REFERENCE SQLITE3-OS-END
178900*      <other call parameters as documented>
179000*      RETURNING integer-result-variable
179100* END-CALL
179200*
179300     05 SQLITE3-OS-INIT                 PIC X(16)
179400            VALUE IS Z'sqlite3_os_init'.
179500* This function returns an integer which in COBOL
179600* would be PIC S9(9) COMP-5. You should assign
179700* the result to the variable using the RETURNING clause
179800* CALL SQLITE3 USING BY REFERENCE SQLITE3-OS-INIT
179900*      <other call parameters as documented>
180000*      RETURNING integer-result-variable
180100* END-CALL
180200*
180300     05 SQLITE3-OVERLOAD-FUNCTION       PIC X(26)
180400            VALUE IS Z'sqlite3_overload_function'.
180500* This function returns an integer which in COBOL
180600* would be PIC S9(9) COMP-5. You should assign
180700* the result to the variable using the RETURNING clause
180800* CALL SQLITE3 USING BY REFERENCE SQLITE3-OVERLOAD-FUNCTION
180900*      <other call parameters as documented>
181000*      RETURNING integer-result-variable
181100* END-CALL
181200*
181300     05 SQLITE3-PREPARE                 PIC X(16)
181400            VALUE IS Z'sqlite3_prepare'.
181500* This function returns an integer which in COBOL
181600* would be PIC S9(9) COMP-5. You should assign
181700* the result to the variable using the RETURNING clause
181800* CALL SQLITE3 USING BY REFERENCE SQLITE3-PREPARE
181900*      <other call parameters as documented>
182000*      RETURNING integer-result-variable
182100* END-CALL
182200*
182300     05 SQLITE3-PREPARE-V2              PIC X(19)
182400            VALUE IS Z'sqlite3_prepare_v2'.
182500* This function returns an integer which in COBOL
182600* would be PIC S9(9) COMP-5. You should assign
182700* the result to the variable using the RETURNING clause
182800* CALL SQLITE3 USING BY REFERENCE SQLITE3-PREPARE-V2
182900*      <other call parameters as documented>
183000*      RETURNING integer-result-variable
183100* END-CALL
183200*
183300     05 SQLITE3-PREPARE16               PIC X(18)
183400            VALUE IS Z'sqlite3_prepare16'.
183500* This function returns an integer which in COBOL
183600* would be PIC S9(9) COMP-5. You should assign
183700* the result to the variable using the RETURNING clause
183800* CALL SQLITE3 USING BY REFERENCE SQLITE3-PREPARE16
183900*      <other call parameters as documented>
184000*      RETURNING integer-result-variable
184100* END-CALL
184200*
184300     05 SQLITE3-PREPARE16-V2            PIC X(21)
184400            VALUE IS Z'sqlite3_prepare16_v2'.
184500* This function returns an integer which in COBOL
184600* would be PIC S9(9) COMP-5. You should assign
184700* the result to the variable using the RETURNING clause
184800* CALL SQLITE3 USING BY REFERENCE SQLITE3-PREPARE16-V2
184900*      <other call parameters as documented>
185000*      RETURNING integer-result-variable
185100* END-CALL
185200*
185300     05 SQLITE3-PROFILE                 PIC X(16)
185400            VALUE IS Z'sqlite3_profile'.
185500* This function returns a pointer which in COBOL
185600* would be USAGE POINTER. You should assign
185700* the result to the variable using the RETURNING clause
185800* CALL SQLITE3 USING BY REFERENCE SQLITE3-PROFILE
185900*      <other call parameters as documented>
186000*      RETURNING pointer-result-variable
186100* END-CALL
186200*
186300     05 SQLITE3-PROGRESS-HANDLER        PIC X(25)
186400            VALUE IS Z'sqlite3_progress_handler'.
186500* This function does not return anything at all.
186600* CALL SQLITE3 USING BY REFERENCE SQLITE3-PROGRESS-HANDLER
186700*      <other call parameters as documented>
186800* END-CALL
186900*
187000     05 SQLITE3-RANDOMNESS              PIC X(19)
187100            VALUE IS Z'sqlite3_randomness'.
187200* This function returns an integer which in COBOL
187300* would be PIC S9(9) COMP-5. You should assign
187400* the result to the variable using the RETURNING clause
187500* CALL SQLITE3 USING BY REFERENCE SQLITE3-RANDOMNESS
187600*      <other call parameters as documented>
187700*      RETURNING integer-result-variable
187800* END-CALL
187900*
188000     05 SQLITE3-REALLOC                 PIC X(16)
188100            VALUE IS Z'sqlite3_realloc'.
188200* This function returns a pointer which in COBOL
188300* would be USAGE POINTER. You should assign
188400* the result to the variable using the RETURNING clause
188500* CALL SQLITE3 USING BY REFERENCE SQLITE3-REALLOC
188600*      <other call parameters as documented>
188700*      RETURNING pointer-result-variable
188800* END-CALL
188900*
189000     05 SQLITE3-RELEASE-MEMORY          PIC X(23)
189100            VALUE IS Z'sqlite3_release_memory'.
189200* This function returns an integer which in COBOL
189300* would be PIC S9(9) COMP-5. You should assign
189400* the result to the variable using the RETURNING clause
189500* CALL SQLITE3 USING BY REFERENCE SQLITE3-RELEASE-MEMORY
189600*      <other call parameters as documented>
189700*      RETURNING integer-result-variable
189800* END-CALL
189900*
190000     05 SQLITE3-RESET                   PIC X(14)
190100            VALUE IS Z'sqlite3_reset'.
190200* This function returns an integer which in COBOL
190300* would be PIC S9(9) COMP-5. You should assign
190400* the result to the variable using the RETURNING clause
190500* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESET
190600*      <other call parameters as documented>
190700*      RETURNING integer-result-variable
190800* END-CALL
190900*
191000     05 SQLITE3-RESET-AUTO-EXTENSION    PIC X(29)
191100            VALUE IS Z'sqlite3_reset_auto_extension'.
191200* This function returns an integer which in COBOL
191300* would be PIC S9(9) COMP-5. You should assign
191400* the result to the variable using the RETURNING clause
191500* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESET-AUTO-EXTENSION
191600*      <other call parameters as documented>
191700*      RETURNING integer-result-variable
191800* END-CALL
191900*
192000     05 SQLITE3-RESULT-BLOB             PIC X(20)
192100            VALUE IS Z'sqlite3_result_blob'.
192200* This function does not return anything at all.
192300* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-BLOB
192400*      <other call parameters as documented>
192500* END-CALL
192600*
192700     05 SQLITE3-RESULT-DOUBLE           PIC X(22)
192800            VALUE IS Z'sqlite3_result_double'.
192900* This function does not return anything at all.
193000* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-DOUBLE
193100*      <other call parameters as documented>
193200* END-CALL
193300*
193400     05 SQLITE3-RESULT-ERROR            PIC X(21)
193500            VALUE IS Z'sqlite3_result_error'.
193600* This function does not return anything at all.
193700* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-ERROR
193800*      <other call parameters as documented>
193900* END-CALL
194000*
194100     05 SQLITE3-RESULT-ERROR-CODE       PIC X(26)
194200            VALUE IS Z'sqlite3_result_error_code'.
194300* This function does not return anything at all.
194400* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-ERROR-CODE
194500*      <other call parameters as documented>
194600* END-CALL
194700*
194800     05 SQLITE3-RESULT-ERROR-NOMEM      PIC X(27)
194900            VALUE IS Z'sqlite3_result_error_nomem'.
195000* This function does not return anything at all.
195100* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-ERROR-NOMEM
195200*      <other call parameters as documented>
195300* END-CALL
195400*
195500     05 SQLITE3-RESULT-ERROR-TOOBIG     PIC X(28)
195600            VALUE IS Z'sqlite3_result_error_toobig'.
195700* This function does not return anything at all.
195800* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-ERROR-TOOBIG
195900*      <other call parameters as documented>
196000* END-CALL
196100*
196200     05 SQLITE3-RESULT-ERROR16          PIC X(23)
196300            VALUE IS Z'sqlite3_result_error16'.
196400* This function does not return anything at all.
196500* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-ERROR16
196600*      <other call parameters as documented>
196700* END-CALL
196800*
196900     05 SQLITE3-RESULT-INT              PIC X(19)
197000            VALUE IS Z'sqlite3_result_int'.
197100* This function does not return anything at all.
197200* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-INT
197300*      <other call parameters as documented>
197400* END-CALL
197500*
197600     05 SQLITE3-RESULT-INT64            PIC X(21)
197700            VALUE IS Z'sqlite3_result_int64'.
197800* This function does not return anything at all.
197900* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-INT64
198000*      <other call parameters as documented>
198100* END-CALL
198200*
198300     05 SQLITE3-RESULT-NULL             PIC X(20)
198400            VALUE IS Z'sqlite3_result_null'.
198500* This function does not return anything at all.
198600* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-NULL
198700*      <other call parameters as documented>
198800* END-CALL
198900*
199000     05 SQLITE3-RESULT-TEXT             PIC X(20)
199100            VALUE IS Z'sqlite3_result_text'.
199200* This function does not return anything at all.
199300* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-TEXT
199400*      <other call parameters as documented>
199500* END-CALL
199600*
199700     05 SQLITE3-RESULT-TEXT16           PIC X(22)
199800            VALUE IS Z'sqlite3_result_text16'.
199900* This function does not return anything at all.
200000* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-TEXT16
200100*      <other call parameters as documented>
200200* END-CALL
200300*
200400     05 SQLITE3-RESULT-TEXT16BE         PIC X(24)
200500            VALUE IS Z'sqlite3_result_text16be'.
200600* This function does not return anything at all.
200700* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-TEXT16BE
200800*      <other call parameters as documented>
200900* END-CALL
201000*
201100     05 SQLITE3-RESULT-TEXT16LE         PIC X(24)
201200            VALUE IS Z'sqlite3_result_text16le'.
201300* This function does not return anything at all.
201400* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-TEXT16LE
201500*      <other call parameters as documented>
201600* END-CALL
201700*
201800     05 SQLITE3-RESULT-VALUE            PIC X(21)
201900            VALUE IS Z'sqlite3_result_value'.
202000* This function does not return anything at all.
202100* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-VALUE
202200*      <other call parameters as documented>
202300* END-CALL
202400*
202500     05 SQLITE3-RESULT-ZEROBLOB         PIC X(24)
202600            VALUE IS Z'sqlite3_result_zeroblob'.
202700* This function does not return anything at all.
202800* CALL SQLITE3 USING BY REFERENCE SQLITE3-RESULT-ZEROBLOB
202900*      <other call parameters as documented>
203000* END-CALL
203100*
203200     05 SQLITE3-ROLLBACK-HOOK           PIC X(22)
203300            VALUE IS Z'sqlite3_rollback_hook'.
203400* This function returns a pointer which in COBOL
203500* would be USAGE POINTER. You should assign
203600* the result to the variable using the RETURNING clause
203700* CALL SQLITE3 USING BY REFERENCE SQLITE3-ROLLBACK-HOOK
203800*      <other call parameters as documented>
203900*      RETURNING pointer-result-variable
204000* END-CALL
204100*
204200     05 SQLITE3-RTREE-GEOMETRY-CALLBK   PIC X(32)
204300            VALUE IS Z'sqlite3_rtree_geometry_callback'.
204400* This function returns an integer which in COBOL
204500* would be PIC S9(9) COMP-5. You should assign
204600* the result to the variable using the RETURNING clause
204700* CALL SQLITE3 USING BY REFERENCE SQLITE3-RTREE-GEOMETRY-CALLBK
204800*      <other call parameters as documented>
204900*      RETURNING integer-result-variable
205000* END-CALL
205100*
205200     05 SQLITE3-SET-AUTHORIZER          PIC X(23)
205300            VALUE IS Z'sqlite3_set_authorizer'.
205400* This function returns an integer which in COBOL
205500* would be PIC S9(9) COMP-5. You should assign
205600* the result to the variable using the RETURNING clause
205700* CALL SQLITE3 USING BY REFERENCE SQLITE3-SET-AUTHORIZER
205800*      <other call parameters as documented>
205900*      RETURNING integer-result-variable
206000* END-CALL
206100*
206200     05 SQLITE3-SET-AUXDATA             PIC X(20)
206300            VALUE IS Z'sqlite3_set_auxdata'.
206400* This function does not return anything at all.
206500* CALL SQLITE3 USING BY REFERENCE SQLITE3-SET-AUXDATA
206600*      <other call parameters as documented>
206700* END-CALL
206800*
206900     05 SQLITE3-SHUTDOWN                PIC X(17)
207000            VALUE IS Z'sqlite3_shutdown'.
207100* This function returns an integer which in COBOL
207200* would be PIC S9(9) COMP-5. You should assign
207300* the result to the variable using the RETURNING clause
207400* CALL SQLITE3 USING BY REFERENCE SQLITE3-SHUTDOWN
207500*      <other call parameters as documented>
207600*      RETURNING integer-result-variable
207700* END-CALL
207800*
207900     05 SQLITE3-SLEEP                   PIC X(14)
208000            VALUE IS Z'sqlite3_sleep'.
208100* This function returns an integer which in COBOL
208200* would be PIC S9(9) COMP-5. You should assign
208300* the result to the variable using the RETURNING clause
208400* CALL SQLITE3 USING BY REFERENCE SQLITE3-SLEEP
208500*      <other call parameters as documented>
208600*      RETURNING integer-result-variable
208700* END-CALL
208800*
208900     05 SQLITE3-SNPRINTF                PIC X(17)
209000            VALUE IS Z'sqlite3_snprintf'.
209100* This function returns a pointer which in COBOL
209200* would be USAGE POINTER. You should assign
209300* the result to the variable using the RETURNING clause
209400* CALL SQLITE3 USING BY REFERENCE SQLITE3-SNPRINTF
209500*      <other call parameters as documented>
209600*      RETURNING pointer-result-variable
209700* END-CALL
209800*
209900     05 SQLITE3-SOFT-HEAP-LIMIT         PIC X(24)
210000            VALUE IS Z'sqlite3_soft_heap_limit'.
210100* This function does not return anything at all.
210200* CALL SQLITE3 USING BY REFERENCE SQLITE3-SOFT-HEAP-LIMIT
210300*      <other call parameters as documented>
210400* END-CALL
210500*
210600     05 SQLITE3-SOFT-HEAP-LIMIT64       PIC X(26)
210700            VALUE IS Z'sqlite3_soft_heap_limit64'.
210800* Data is returned as a PIC S9(18) COMP-5 in the second
210900* parameter passed, BY REFERENCE, to SQLITE3A. This parameter is
211000* inserted before the ones documented in the C API.
211100* This function returns a pointer which in COBOL
211200* would be USAGE POINTER. You should assign
211300* the result to the variable using the RETURNING clause
211400* CALL SQLITE3 USING BY REFERENCE SQLITE3-SOFT-HEAP-LIMIT64
211500*      BY REFERENCE int64-returned-value
211600*      <other call parameters as documented>
211700* END-CALL
211800*
211900     05 SQLITE3-SOURCEID                PIC X(17)
212000            VALUE IS Z'sqlite3_sourceid'.
212100* This function returns a pointer which in COBOL
212200* would be USAGE POINTER. You should assign
212300* the result to the variable using the RETURNING clause
212400* CALL SQLITE3 USING BY REFERENCE SQLITE3-SOURCEID
212500*      <other call parameters as documented>
212600*      RETURNING pointer-result-variable
212700* END-CALL
212800*
212900     05 SQLITE3-SQL                     PIC X(12)
213000            VALUE IS Z'sqlite3_sql'.
213100* This function returns a pointer which in COBOL
213200* would be USAGE POINTER. You should assign
213300* the result to the variable using the RETURNING clause
213400* CALL SQLITE3 USING BY REFERENCE SQLITE3-SQL
213500*      <other call parameters as documented>
213600*      RETURNING pointer-result-variable
213700* END-CALL
213800*
213900     05 SQLITE3-STATUS                  PIC X(15)
214000            VALUE IS Z'sqlite3_status'.
214100* This function returns an integer which in COBOL
214200* would be PIC S9(9) COMP-5. You should assign
214300* the result to the variable using the RETURNING clause
214400* CALL SQLITE3 USING BY REFERENCE SQLITE3-STATUS
214500*      <other call parameters as documented>
214600*      RETURNING integer-result-variable
214700* END-CALL
214800*
214900     05 SQLITE3-STEP                    PIC X(13)
215000            VALUE IS Z'sqlite3_step'.
215100* This function returns an integer which in COBOL
215200* would be PIC S9(9) COMP-5. You should assign
215300* the result to the variable using the RETURNING clause
215400* CALL SQLITE3 USING BY REFERENCE SQLITE3-STEP
215500*      <other call parameters as documented>
215600*      RETURNING integer-result-variable
215700* END-CALL
215800*
215900     05 SQLITE3-STMT-BUSY               PIC X(18)
216000            VALUE IS Z'sqlite3_stmt_busy'.
216100* This function returns an integer which in COBOL
216200* would be PIC S9(9) COMP-5. You should assign
216300* the result to the variable using the RETURNING clause
216400* CALL SQLITE3 USING BY REFERENCE SQLITE3-STMT-BUSY
216500*      <other call parameters as documented>
216600*      RETURNING integer-result-variable
216700* END-CALL
216800*
216900     05 SQLITE3-STMT-READONLY           PIC X(22)
217000            VALUE IS Z'sqlite3_stmt_readonly'.
217100* This function returns an integer which in COBOL
217200* would be PIC S9(9) COMP-5. You should assign
217300* the result to the variable using the RETURNING clause
217400* CALL SQLITE3 USING BY REFERENCE SQLITE3-STMT-READONLY
217500*      <other call parameters as documented>
217600*      RETURNING integer-result-variable
217700* END-CALL
217800*
217900     05 SQLITE3-STMT-STATUS             PIC X(20)
218000            VALUE IS Z'sqlite3_stmt_status'.
218100* This function returns an integer which in COBOL
218200* would be PIC S9(9) COMP-5. You should assign
218300* the result to the variable using the RETURNING clause
218400* CALL SQLITE3 USING BY REFERENCE SQLITE3-STMT-STATUS
218500*      <other call parameters as documented>
218600*      RETURNING integer-result-variable
218700* END-CALL
218800*
218900     05 SQLITE3-STRGLOB                 PIC X(16)
219000            VALUE IS Z'sqlite3_strglob'.
219100* This function returns an integer which in COBOL
219200* would be PIC S9(9) COMP-5. You should assign
219300* the result to the variable using the RETURNING clause
219400* CALL SQLITE3 USING BY REFERENCE SQLITE3-STRGLOB
219500*      <other call parameters as documented>
219600*      RETURNING integer-result-variable
219700* END-CALL
219800*
219900     05 SQLITE3-STRICMP                 PIC X(16)
220000            VALUE IS Z'sqlite3_stricmp'.
220100* This function returns an integer which in COBOL
220200* would be PIC S9(9) COMP-5. You should assign
220300* the result to the variable using the RETURNING clause
220400* CALL SQLITE3 USING BY REFERENCE SQLITE3-STRICMP
220500*      <other call parameters as documented>
220600*      RETURNING integer-result-variable
220700* END-CALL
220800*
220900     05 SQLITE3-STRNICMP                PIC X(17)
221000            VALUE IS Z'sqlite3_strnicmp'.
221100* This function returns an integer which in COBOL
221200* would be PIC S9(9) COMP-5. You should assign
221300* the result to the variable using the RETURNING clause
221400* CALL SQLITE3 USING BY REFERENCE SQLITE3-STRNICMP
221500*      <other call parameters as documented>
221600*      RETURNING integer-result-variable
221700* END-CALL
221800*
221900     05 SQLITE3-TABLE-COLUMN-METADATA   PIC X(30)
222000            VALUE IS Z'sqlite3_table_column_metadata'.
222100* This function returns an integer which in COBOL
222200* would be PIC S9(9) COMP-5. You should assign
222300* the result to the variable using the RETURNING clause
222400* CALL SQLITE3 USING BY REFERENCE SQLITE3-TABLE-COLUMN-METADATA
222500*      <other call parameters as documented>
222600*      RETURNING integer-result-variable
222700* END-CALL
222800*
222900     05 SQLITE3-TEST-CONTROL            PIC X(21)
223000            VALUE IS Z'sqlite3_test_control'.
223100* This function returns an integer which in COBOL
223200* would be PIC S9(9) COMP-5. You should assign
223300* the result to the variable using the RETURNING clause
223400* CALL SQLITE3 USING BY REFERENCE SQLITE3-TEST-CONTROL
223500*      <other call parameters as documented>
223600*      RETURNING integer-result-variable
223700* END-CALL
223800*
223900     05 SQLITE3-THREAD-CLEANUP          PIC X(23)
224000            VALUE IS Z'sqlite3_thread_cleanup'.
224100* This function does not return anything at all.
224200* CALL SQLITE3 USING BY REFERENCE SQLITE3-THREAD-CLEANUP
224300*      <other call parameters as documented>
224400* END-CALL
224500*
224600     05 SQLITE3-THREADSAFE              PIC X(19)
224700            VALUE IS Z'sqlite3_threadsafe'.
224800* This function returns an integer which in COBOL
224900* would be PIC S9(9) COMP-5. You should assign
225000* the result to the variable using the RETURNING clause
225100* CALL SQLITE3 USING BY REFERENCE SQLITE3-THREADSAFE
225200*      <other call parameters as documented>
225300*      RETURNING integer-result-variable
225400* END-CALL
225500*
225600     05 SQLITE3-TOTAL-CHANGES           PIC X(22)
225700            VALUE IS Z'sqlite3_total_changes'.
225800* This function returns an integer which in COBOL
225900* would be PIC S9(9) COMP-5. You should assign
226000* the result to the variable using the RETURNING clause
226100* CALL SQLITE3 USING BY REFERENCE SQLITE3-TOTAL-CHANGES
226200*      <other call parameters as documented>
226300*      RETURNING integer-result-variable
226400* END-CALL
226500*
226600     05 SQLITE3-TRACE                   PIC X(14)
226700            VALUE IS Z'sqlite3_trace'.
226800* This function returns a pointer which in COBOL
226900* would be USAGE POINTER. You should assign
227000* the result to the variable using the RETURNING clause
227100* CALL SQLITE3 USING BY REFERENCE SQLITE3-TRACE
227200*      <other call parameters as documented>
227300*      RETURNING pointer-result-variable
227400* END-CALL
227500*
227600     05 SQLITE3-TRANSFER-BINDINGS       PIC X(26)
227700            VALUE IS Z'sqlite3_transfer_bindings'.
227800* This function returns an integer which in COBOL
227900* would be PIC S9(9) COMP-5. You should assign
228000* the result to the variable using the RETURNING clause
228100* CALL SQLITE3 USING BY REFERENCE SQLITE3-TRANSFER-BINDINGS
228200*      <other call parameters as documented>
228300*      RETURNING integer-result-variable
228400* END-CALL
228500*
228600     05 SQLITE3-UPDATE-HOOK             PIC X(20)
228700            VALUE IS Z'sqlite3_update_hook'.
228800* This function returns a pointer which in COBOL
228900* would be USAGE POINTER. You should assign
229000* the result to the variable using the RETURNING clause
229100* CALL SQLITE3 USING BY REFERENCE SQLITE3-UPDATE-HOOK
229200*      <other call parameters as documented>
229300*      RETURNING pointer-result-variable
229400* END-CALL
229500*
229600     05 SQLITE3-URI-BOOLEAN             PIC X(20)
229700            VALUE IS Z'sqlite3_uri_boolean'.
229800* This function returns an integer which in COBOL
229900* would be PIC S9(9) COMP-5. You should assign
230000* the result to the variable using the RETURNING clause
230100* CALL SQLITE3 USING BY REFERENCE SQLITE3-URI-BOOLEAN
230200*      <other call parameters as documented>
230300*      RETURNING integer-result-variable
230400* END-CALL
230500*
230600     05 SQLITE3-URI-INT64               PIC X(18)
230700            VALUE IS Z'sqlite3_uri_int64'.
230800* Data is returned as a PIC S9(18) COMP-5 in the second
230900* parameter passed, BY REFERENCE, to SQLITE3A. This parameter is
231000* inserted before the ones documented in the C API.
231100* This function returns a pointer which in COBOL
231200* would be USAGE POINTER. You should assign
231300* the result to the variable using the RETURNING clause
231400* CALL SQLITE3 USING BY REFERENCE SQLITE3-URI-INT64
231500*      BY REFERENCE int64-returned-value
231600*      <other call parameters as documented>
231700* END-CALL
231800*
231900     05 SQLITE3-URI-PARAMETER           PIC X(22)
232000            VALUE IS Z'sqlite3_uri_parameter'.
232100* This function returns a pointer which in COBOL
232200* would be USAGE POINTER. You should assign
232300* the result to the variable using the RETURNING clause
232400* CALL SQLITE3 USING BY REFERENCE SQLITE3-URI-PARAMETER
232500*      <other call parameters as documented>
232600*      RETURNING pointer-result-variable
232700* END-CALL
232800*
232900     05 SQLITE3-USER-DATA               PIC X(18)
233000            VALUE IS Z'sqlite3_user_data'.
233100* This function returns a pointer which in COBOL
233200* would be USAGE POINTER. You should assign
233300* the result to the variable using the RETURNING clause
233400* CALL SQLITE3 USING BY REFERENCE SQLITE3-USER-DATA
233500*      <other call parameters as documented>
233600*      RETURNING pointer-result-variable
233700* END-CALL
233800*
233900     05 SQLITE3-VALUE-BLOB              PIC X(19)
234000            VALUE IS Z'sqlite3_value_blob'.
234100* This function returns a pointer which in COBOL
234200* would be USAGE POINTER. You should assign
234300* the result to the variable using the RETURNING clause
234400* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-BLOB
234500*      <other call parameters as documented>
234600*      RETURNING pointer-result-variable
234700* END-CALL
234800*
234900     05 SQLITE3-VALUE-BYTES             PIC X(20)
235000            VALUE IS Z'sqlite3_value_bytes'.
235100* This function returns an integer which in COBOL
235200* would be PIC S9(9) COMP-5. You should assign
235300* the result to the variable using the RETURNING clause
235400* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-BYTES
235500*      <other call parameters as documented>
235600*      RETURNING integer-result-variable
235700* END-CALL
235800*
235900     05 SQLITE3-VALUE-BYTES16           PIC X(22)
236000            VALUE IS Z'sqlite3_value_bytes16'.
236100* This function returns an integer which in COBOL
236200* would be PIC S9(9) COMP-5. You should assign
236300* the result to the variable using the RETURNING clause
236400* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-BYTES16
236500*      <other call parameters as documented>
236600*      RETURNING integer-result-variable
236700* END-CALL
236800*
236900     05 SQLITE3-VALUE-DOUBLE            PIC X(21)
237000            VALUE IS Z'sqlite3_value_double'.
237100* Data is returned as a PIC S9(18) COMP-5 in the second
237200* parameter passed, BY REFERENCE, to SQLITE3A. This parameter is
237300* inserted before the ones documented in the C API.
237400* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-DOUBLE
237500*      BY REFERENCE double-result-variable
237600*      <other call parameters as documented>
237700* END-CALL
237800* Before using this value, you must convert it from BFP to HFP.
237900* See the CONVERT-BFP-TO-HFP function below.
238000*
238100     05 SQLITE3-VALUE-INT               PIC X(18)
238200            VALUE IS Z'sqlite3_value_int'.
238300* This function returns an integer which in COBOL
238400* would be PIC S9(9) COMP-5. You should assign
238500* the result to the variable using the RETURNING clause
238600* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-INT
238700*      <other call parameters as documented>
238800*      RETURNING integer-result-variable
238900* END-CALL
239000*
239100     05 SQLITE3-VALUE-INT64             PIC X(20)
239200            VALUE IS Z'sqlite3_value_int64'.
239300* Data is returned as a PIC S9(18) COMP-5 in the second
239400* parameter passed, BY REFERENCE, to SQLITE3A. This parameter is
239500* inserted before the ones documented in the C API.
239600* This function returns a pointer which in COBOL
239700* would be USAGE POINTER. You should assign
239800* the result to the variable using the RETURNING clause
239900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-INT64
240000*      BY REFERENCE int64-returned-value
240100*      <other call parameters as documented>
240200* END-CALL
240300*
240400     05 SQLITE3-VALUE-NUMERIC-TYPE      PIC X(27)
240500            VALUE IS Z'sqlite3_value_numeric_type'.
240600* This function returns an integer which in COBOL
240700* would be PIC S9(9) COMP-5. You should assign
240800* the result to the variable using the RETURNING clause
240900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-NUMERIC-TYPE
241000*      <other call parameters as documented>
241100*      RETURNING integer-result-variable
241200* END-CALL
241300*
241400     05 SQLITE3-VALUE-TEXT              PIC X(19)
241500            VALUE IS Z'sqlite3_value_text'.
241600* This function returns a pointer which in COBOL
241700* would be USAGE POINTER. You should assign
241800* the result to the variable using the RETURNING clause
241900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-TEXT
242000*      <other call parameters as documented>
242100*      RETURNING pointer-result-variable
242200* END-CALL
242300*
242400     05 SQLITE3-VALUE-TEXT16            PIC X(21)
242500            VALUE IS Z'sqlite3_value_text16'.
242600* This function returns a pointer which in COBOL
242700* would be USAGE POINTER. You should assign
242800* the result to the variable using the RETURNING clause
242900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-TEXT16
243000*      <other call parameters as documented>
243100*      RETURNING pointer-result-variable
243200* END-CALL
243300*
243400     05 SQLITE3-VALUE-TEXT16BE          PIC X(23)
243500            VALUE IS Z'sqlite3_value_text16be'.
243600* This function returns a pointer which in COBOL
243700* would be USAGE POINTER. You should assign
243800* the result to the variable using the RETURNING clause
243900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-TEXT16BE
244000*      <other call parameters as documented>
244100*      RETURNING pointer-result-variable
244200* END-CALL
244300*
244400     05 SQLITE3-VALUE-TEXT16LE          PIC X(23)
244500            VALUE IS Z'sqlite3_value_text16le'.
244600* This function returns a pointer which in COBOL
244700* would be USAGE POINTER. You should assign
244800* the result to the variable using the RETURNING clause
244900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-TEXT16LE
245000*      <other call parameters as documented>
245100*      RETURNING pointer-result-variable
245200* END-CALL
245300*
245400     05 SQLITE3-VALUE-TYPE              PIC X(19)
245500            VALUE IS Z'sqlite3_value_type'.
245600* This function returns an integer which in COBOL
245700* would be PIC S9(9) COMP-5. You should assign
245800* the result to the variable using the RETURNING clause
245900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VALUE-TYPE
246000*      <other call parameters as documented>
246100*      RETURNING integer-result-variable
246200* END-CALL
246300*
246400     05 SQLITE3-VFS-FIND                PIC X(17)
246500            VALUE IS Z'sqlite3_vfs_find'.
246600* This function returns a pointer which in COBOL
246700* would be USAGE POINTER. You should assign
246800* the result to the variable using the RETURNING clause
246900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VFS-FIND
247000*      <other call parameters as documented>
247100*      RETURNING pointer-result-variable
247200* END-CALL
247300*
247400     05 SQLITE3-VFS-REGISTER            PIC X(21)
247500            VALUE IS Z'sqlite3_vfs_register'.
247600* This function returns an integer which in COBOL
247700* would be PIC S9(9) COMP-5. You should assign
247800* the result to the variable using the RETURNING clause
247900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VFS-REGISTER
248000*      <other call parameters as documented>
248100*      RETURNING integer-result-variable
248200* END-CALL
248300*
248400     05 SQLITE3-VFS-UNREGISTER          PIC X(23)
248500            VALUE IS Z'sqlite3_vfs_unregister'.
248600* This function returns an integer which in COBOL
248700* would be PIC S9(9) COMP-5. You should assign
248800* the result to the variable using the RETURNING clause
248900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VFS-UNREGISTER
249000*      <other call parameters as documented>
249100*      RETURNING integer-result-variable
249200* END-CALL
249300*
249400     05 SQLITE3-VMPRINTF                PIC X(17)
249500            VALUE IS Z'sqlite3_vmprintf'.
249600* This function returns a pointer which in COBOL
249700* would be USAGE POINTER. You should assign
249800* the result to the variable using the RETURNING clause
249900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VMPRINTF
250000*      <other call parameters as documented>
250100*      RETURNING pointer-result-variable
250200* END-CALL
250300*
250400     05 SQLITE3-VSNPRINTF               PIC X(18)
250500            VALUE IS Z'sqlite3_vsnprintf'.
250600* This function returns a pointer which in COBOL
250700* would be USAGE POINTER. You should assign
250800* the result to the variable using the RETURNING clause
250900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VSNPRINTF
251000*      <other call parameters as documented>
251100*      RETURNING pointer-result-variable
251200* END-CALL
251300*
251400     05 SQLITE3-VTAB-CONFIG             PIC X(20)
251500            VALUE IS Z'sqlite3_vtab_config'.
251600* This function returns an integer which in COBOL
251700* would be PIC S9(9) COMP-5. You should assign
251800* the result to the variable using the RETURNING clause
251900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VTAB-CONFIG
252000*      <other call parameters as documented>
252100*      RETURNING integer-result-variable
252200* END-CALL
252300*
252400     05 SQLITE3-VTAB-ON-CONFLICT        PIC X(25)
252500            VALUE IS Z'sqlite3_vtab_on_conflict'.
252600* This function returns an integer which in COBOL
252700* would be PIC S9(9) COMP-5. You should assign
252800* the result to the variable using the RETURNING clause
252900* CALL SQLITE3 USING BY REFERENCE SQLITE3-VTAB-ON-CONFLICT
253000*      <other call parameters as documented>
253100*      RETURNING integer-result-variable
253200* END-CALL
253300*
253400     05 SQLITE3-WAL-AUTOCHECKPOINT      PIC X(27)
253500            VALUE IS Z'sqlite3_wal_autocheckpoint'.
253600* This function returns an integer which in COBOL
253700* would be PIC S9(9) COMP-5. You should assign
253800* the result to the variable using the RETURNING clause
253900* CALL SQLITE3 USING BY REFERENCE SQLITE3-WAL-AUTOCHECKPOINT
254000*      <other call parameters as documented>
254100*      RETURNING integer-result-variable
254200* END-CALL
254300*
254400     05 SQLITE3-WAL-CHECKPOINT          PIC X(23)
254500            VALUE IS Z'sqlite3_wal_checkpoint'.
254600* This function returns an integer which in COBOL
254700* would be PIC S9(9) COMP-5. You should assign
254800* the result to the variable using the RETURNING clause
254900* CALL SQLITE3 USING BY REFERENCE SQLITE3-WAL-CHECKPOINT
255000*      <other call parameters as documented>
255100*      RETURNING integer-result-variable
255200* END-CALL
255300*
255400     05 SQLITE3-WAL-CHECKPOINT-V2       PIC X(26)
255500            VALUE IS Z'sqlite3_wal_checkpoint_v2'.
255600* This function returns an integer which in COBOL
255700* would be PIC S9(9) COMP-5. You should assign
255800* the result to the variable using the RETURNING clause
255900* CALL SQLITE3 USING BY REFERENCE SQLITE3-WAL-CHECKPOINT-V2
256000*      <other call parameters as documented>
256100*      RETURNING integer-result-variable
256200* END-CALL
256300*
256400     05 SQLITE3-WAL-HOOK                PIC X(17)
256500            VALUE IS Z'sqlite3_wal_hook'.
256600* This function returns a pointer which in COBOL
256700* would be USAGE POINTER. You should assign
256800* the result to the variable using the RETURNING clause
256900* CALL SQLITE3 USING BY REFERENCE SQLITE3-WAL-HOOK
257000*      <other call parameters as documented>
257100*      RETURNING pointer-result-variable
257200*
257300* END-CALL
257400     05 CONVERT-BFP-TO-HFP              PIC X(19)
257500            VALUE IS Z'convert_bfp_to_hfp'.
257600* This function should be called after retrieving a double
257700* floating point result and before using it in COBOL.
257800* This is because COBOL uses HFP whereas sqlite stores in BFP.
257900* Data is returned as a PIC USAGE COMP-2 in the second
258000* parameter passed, BY REFERENCE, to SQLITE3A. This unusual
258100* calling sequence is used because it is how C works, and to be
258110* consistent with the other functions in this package.
258200* CALL SQLITE3 USING BY REFERENCE CONVERT-BFP-TO-HFP
258300*      BY REFERENCE double-result-variable
258400*      <other call parameters as documented>
258500* END-CALL
258600*
258700     05 CONVERT-HFP-TO-BFP              PIC X(19)
258800            VALUE IS Z'convert_hfp_to_bfp'.
258900* This function should be called after using a COMP-2 in COBOL
259000* but before sending it to sqlite to store.
259100* This is because COBOL uses HFP whereas sqlite stores in BFP.
259200* Data is returned as a PIC USAGE COMP-2 in the second
259210* parameter passed, BY REFERENCE, to SQLITE3A. This unusual
259220* calling sequence is used because it is how C works, and to be
259230* consistent with the other functions in this package.
259500* CALL SQLITE3 USING BY REFERENCE CONVERT-BFP-TO-HFP
259600*      BY REFERENCE double-result-variable
259700*      <other call parameters as documented>
259800* END-CALL
259900*
