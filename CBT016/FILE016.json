{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011048000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE016.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE016.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x03'", "DS1TRBAL": "b'\\xbeR'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00+\\x00\\n\\x00+\\x00\\x0e\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$$DOC": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "THE CODE SUPPLIED BY SCOTT AND WHITE HOSPITAL CONTAINS NO WARRANTY\nAT ALL.  HOWEVER ALL CODE WORKS AT SCOTT AND WHITE AND WE WILL BE\nHAPPY TO ANSWER ANY QUESTIONS THAT WE CAN.  THE CONTACT IS:\n\n  BOB SIRKIS\n  817-774-2800\n  SCOTT AND WHITE HOSPITAL\n  2401 S. 31ST STREET\n  TEMPLE TX\n  76501\n\n SOURCE       FUNCTION\n SWHJ2006     CONVERT UNIT=TAPE TO UNIT=CART ON THE FLY (JES2 EXIT 6)\n SWHUSER      CHEAP WAY TO CONTROL SDSF COMMANDS FOR OPERATORS AND THE\n              LIKE. (SAMPLE SDSF USER EXIT)\n PDFXIT15     WE HAVE ISPF/PDF V2R3M0, AND THE NOW HAVE FORMAL EXITS.\n              WE USE EXIT 15 TO CONTROL THE PRIMARY PANEL A USER GETS,\n              WHICH ALLOWED US TO CUT FROM 20 TO 3 THE NUMBER OF TSO\n              LOGON PROCS WE USE.\n @            BLOCK LETTER MACRO USED IN ABOVE MODULES.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         @     &LETTERS\n.* THIS MACRO IS USEFUL FOR INSERTING INTERESTING BLOCK-LETTER\n.* COMMENTS INTO YOUR ASSEMBLY PROGRAM.  TRY IT--YOU'LL LIKE IT.\n.**********************************************************************\n.*\n.* AIR FORCE DATA SERVICES CENTER--SYSTEMS SUPPORT DIRECTORATE\n.* ROOM 1D987, THE PENTAGON, WASHINGTON, DC 20330\n.* TELEPHONE: (AUTOVON) 225-1274/2478/1889\n.*     COMMERCIAL (703) 695-1274/2478/1889\n.*\n.**********************************************************************\n.* DATE INSTALLED: 790523\n.**********************************************************\n.** => CHANGE LOG: ENTER AUTHOR, DATE, SUMMARY OF CHANGE **\n.**********************************************************\n.* DATE OF LAST CHANGE:\n.*\n.**********************************************************************\n         LCLC  &A(50)\n         LCLC  &B(62),&C(62),&D(62),&E(62),&F(62),&G(62)\n         LCLA  &I,&J,&K\n&B(01)   SETC  'A'\n&B(02)   SETC  'B'\n&B(03)   SETC  'C'\n&B(04)   SETC  'D'\n&B(05)   SETC  'E'\n&B(06)   SETC  'F'\n&B(07)   SETC  'G'\n&B(08)   SETC  'H'\n&B(09)   SETC  'I'\n&B(10)   SETC  'J'\n&B(11)   SETC  'K'\n&B(12)   SETC  'L'\n&B(13)   SETC  'M'\n&B(14)   SETC  'N'\n&B(15)   SETC  'O'\n&B(16)   SETC  'P'\n&B(17)   SETC  'Q'\n&B(18)   SETC  'R'\n&B(19)   SETC  'S'\n&B(20)   SETC  'T'\n&B(21)   SETC  'U'\n&B(22)   SETC  'V'\n&B(23)   SETC  'W'\n&B(24)   SETC  'X'\n&B(25)   SETC  'Y'\n&B(26)   SETC  'Z'\n&B(27)   SETC  '#'\n&B(28)   SETC  ','\n&B(29)   SETC  '$'\n&B(30)   SETC  '0'\n&B(31)   SETC  '1'\n&B(32)   SETC  '2'\n&B(33)   SETC  '3'\n&B(34)   SETC  '4'\n&B(35)   SETC  '5'\n&B(36)   SETC  '6'\n&B(37)   SETC  '7'\n&B(38)   SETC  '8'\n&B(39)   SETC  '9'\n&B(40)   SETC  '@'\n&B(41)   SETC  '%'\n&B(42)   SETC  '*'\n&B(43)   SETC  '/'\n&B(44)   SETC  '-'\n&B(45)   SETC  '('\n&B(46)   SETC  ')'\n&B(47)   SETC  '&&'\n&B(48)   SETC  '+'\n&B(49)   SETC  '_'\n&B(50)   SETC  '\u00a2'\n&B(51)   SETC  '|'\n&B(52)   SETC  '>'\n&B(53)   SETC  ':'\n&B(54)   SETC  ';'\n&B(55)   SETC  '.'\n&B(56)   SETC  '?'\n&B(57)   SETC  '\"'\n&B(58)   SETC  '='\n&B(59)   SETC  '!'\n&B(60)   SETC  '<'\n&B(61)   SETC  '\u00ac'\n&B(62)   SETC  ' '\n&C(01)   SETC  '  A  '\n&D(01)   SETC  ' A A '\n&E(01)   SETC  'A   A'\n&F(01)   SETC  'AAAAA'\n&G(01)   SETC  'A   A'\n&C(02)   SETC  'BBBB '\n&D(02)   SETC  'B   B'\n&E(02)   SETC  'BBBB '\n&F(02)   SETC  'B   B'\n&G(02)   SETC  'BBBB '\n&C(03)   SETC  ' CCCC'\n&D(03)   SETC  'C    '\n&E(03)   SETC  'C    '\n&F(03)   SETC  'C    '\n&G(03)   SETC  ' CCCC'\n&C(04)   SETC  'DDDD '\n&D(04)   SETC  'D   D'\n&E(04)   SETC  'D   D'\n&F(04)   SETC  'D   D'\n&G(04)   SETC  'DDDD '\n&C(05)   SETC  'EEEEE'\n&D(05)   SETC  'E    '\n&E(05)   SETC  'EEEE '\n&F(05)   SETC  'E    '\n&G(05)   SETC  'EEEEE'\n&C(06)   SETC  'FFFFF'\n&D(06)   SETC  'F    '\n&E(06)   SETC  'FFFF '\n&F(06)   SETC  'F    '\n&G(06)   SETC  'F    '\n&C(07)   SETC  ' GGGG'\n&D(07)   SETC  'G    '\n&E(07)   SETC  'G  GG'\n&F(07)   SETC  'G   G'\n&G(07)   SETC  ' GGGG'\n&C(08)   SETC  'H   H'\n&D(08)   SETC  'H   H'\n&E(08)   SETC  'HHHHH'\n&F(08)   SETC  'H   H'\n&G(08)   SETC  'H   H'\n&C(09)   SETC  ' III '\n&D(09)   SETC  '  I  '\n&E(09)   SETC  '  I  '\n&F(09)   SETC  '  I  '\n&G(09)   SETC  ' III '\n&C(10)   SETC  '  JJJ'\n&D(10)   SETC  '   J '\n&E(10)   SETC  '   J '\n&F(10)   SETC  'J  J '\n&G(10)   SETC  ' JJ  '\n&C(11)   SETC  'K  K '\n&D(11)   SETC  'K K  '\n&E(11)   SETC  'KK   '\n&F(11)   SETC  'K K  '\n&G(11)   SETC  'K  K '\n&C(12)   SETC  'L    '\n&D(12)   SETC  'L    '\n&E(12)   SETC  'L    '\n&F(12)   SETC  'L    '\n&G(12)   SETC  'LLLLL'\n&C(13)   SETC  'M   M'\n&D(13)   SETC  'MM MM'\n&E(13)   SETC  'M M M'\n&F(13)   SETC  'M   M'\n&G(13)   SETC  'M   M'\n&C(14)   SETC  'N   N'\n&D(14)   SETC  'NN  N'\n&E(14)   SETC  'N N N'\n&F(14)   SETC  'N  NN'\n&G(14)   SETC  'N   N'\n&C(15)   SETC  'OOOOO'\n&D(15)   SETC  'O   O'\n&E(15)   SETC  'O   O'\n&F(15)   SETC  'O   O'\n&G(15)   SETC  'OOOOO'\n&C(16)   SETC  'PPPP '\n&D(16)   SETC  'P   P'\n&E(16)   SETC  'PPPP '\n&F(16)   SETC  'P    '\n&G(16)   SETC  'P    '\n&C(17)   SETC  ' QQQ '\n&D(17)   SETC  'Q   Q'\n&E(17)   SETC  'Q Q Q'\n&F(17)   SETC  'Q  Q '\n&G(17)   SETC  ' QQ Q'\n&C(18)   SETC  'RRRR '\n&D(18)   SETC  'R   R'\n&E(18)   SETC  'RRRR '\n&F(18)   SETC  'R  R '\n&G(18)   SETC  'R   R'\n&C(19)   SETC  ' SSSS'\n&D(19)   SETC  'S    '\n&E(19)   SETC  ' SSS '\n&F(19)   SETC  '    S'\n&G(19)   SETC  'SSSS '\n&C(20)   SETC  'TTTTT'\n&D(20)   SETC  '  T  '\n&E(20)   SETC  '  T  '\n&F(20)   SETC  '  T  '\n&G(20)   SETC  '  T  '\n&C(21)   SETC  'U   U'\n&D(21)   SETC  'U   U'\n&E(21)   SETC  'U   U'\n&F(21)   SETC  'U   U'\n&G(21)   SETC  ' UUU '\n&C(22)   SETC  'V   V'\n&D(22)   SETC  'V   V'\n&E(22)   SETC  'V   V'\n&F(22)   SETC  ' V V '\n&G(22)   SETC  '  V  '\n&C(23)   SETC  'W   W'\n&D(23)   SETC  'W   W'\n&E(23)   SETC  'W W W'\n&F(23)   SETC  'WW WW'\n&G(23)   SETC  'W   W'\n&C(24)   SETC  'X   X'\n&D(24)   SETC  ' X X '\n&E(24)   SETC  '  X  '\n&F(24)   SETC  ' X X '\n&G(24)   SETC  'X   X'\n&C(25)   SETC  'Y   Y'\n&D(25)   SETC  ' Y Y '\n&E(25)   SETC  '  Y  '\n&F(25)   SETC  '  Y  '\n&G(25)   SETC  '  Y  '\n&C(26)   SETC  'ZZZZZ'\n&D(26)   SETC  '   Z '\n&E(26)   SETC  '  Z  '\n&F(26)   SETC  ' Z   '\n&G(26)   SETC  'ZZZZZ'\n&C(27)   SETC  ' # # '\n&D(27)   SETC  '#####'\n&E(27)   SETC  ' # # '\n&F(27)   SETC  '#####'\n&G(27)   SETC  ' # # '\n&C(28)   SETC  '     '\n&D(28)   SETC  '     '\n&E(28)   SETC  '     '\n&F(28)   SETC  ' ,,  '\n&G(28)   SETC  '  ,  '\n&C(29)   SETC  ' $$$$'\n&D(29)   SETC  '$ $  '\n&E(29)   SETC  ' $$$ '\n&F(29)   SETC  '  $ $'\n&G(29)   SETC  '$$$$ '\n&C(30)   SETC  ' 000 '\n&D(30)   SETC  '0   0'\n&E(30)   SETC  '0   0'\n&F(30)   SETC  '0   0'\n&G(30)   SETC  ' 000 '\n&C(31)   SETC  '  1  '\n&D(31)   SETC  ' 11  '\n&E(31)   SETC  '  1  '\n&F(31)   SETC  '  1  '\n&G(31)   SETC  ' 111 '\n&C(32)   SETC  '2222 '\n&D(32)   SETC  '    2'\n&E(32)   SETC  '   2 '\n&F(32)   SETC  '  2  '\n&G(32)   SETC  '22222'\n&C(33)   SETC  '3333 '\n&D(33)   SETC  '    3'\n&E(33)   SETC  ' 333 '\n&F(33)   SETC  '    3'\n&G(33)   SETC  '3333 '\n&C(34)   SETC  '4  4 '\n&D(34)   SETC  '4  4 '\n&E(34)   SETC  '44444'\n&F(34)   SETC  '   4 '\n&G(34)   SETC  '   4 '\n&C(35)   SETC  '55555'\n&D(35)   SETC  '5    '\n&E(35)   SETC  '5555 '\n&F(35)   SETC  '    5'\n&G(35)   SETC  '5555 '\n&C(36)   SETC  ' 666 '\n&D(36)   SETC  '6    '\n&E(36)   SETC  '6666 '\n&F(36)   SETC  '6   6'\n&G(36)   SETC  ' 666 '\n&C(37)   SETC  '77777'\n&D(37)   SETC  '   7 '\n&E(37)   SETC  '  7  '\n&F(37)   SETC  '  7  '\n&G(37)   SETC  '  7  '\n&C(38)   SETC  ' 888 '\n&D(38)   SETC  '8   8'\n&E(38)   SETC  ' 888 '\n&F(38)   SETC  '8   8'\n&G(38)   SETC  ' 888 '\n&C(39)   SETC  ' 999 '\n&D(39)   SETC  '9   9'\n&E(39)   SETC  ' 9999'\n&F(39)   SETC  '    9'\n&G(39)   SETC  ' 999 '\n&C(40)   SETC  '@@@@ '\n&D(40)   SETC  '    @'\n&E(40)   SETC  '@@@ @'\n&F(40)   SETC  '@ @ @'\n&G(40)   SETC  '@@@@ '\n&C(41)   SETC  '%%  %'\n&D(41)   SETC  '   % '\n&E(41)   SETC  '  %  '\n&F(41)   SETC  ' %   '\n&G(41)   SETC  '%  %%'\n&C(42)   SETC  '* * *'\n&D(42)   SETC  ' *** '\n&E(42)   SETC  '*****'\n&F(42)   SETC  ' *** '\n&G(42)   SETC  '* * *'\n&C(43)   SETC  '    /'\n&D(43)   SETC  '   / '\n&E(43)   SETC  '  /  '\n&F(43)   SETC  ' /   '\n&G(43)   SETC  '/    '\n&C(44)   SETC  '     '\n&D(44)   SETC  '     '\n&E(44)   SETC  '-----'\n&F(44)   SETC  '     '\n&G(44)   SETC  '     '\n&C(45)   SETC  '   ( '\n&D(45)   SETC  '  (  '\n&E(45)   SETC  '  (  '\n&F(45)   SETC  '  (  '\n&G(45)   SETC  '   ( '\n&C(46)   SETC  ' )   '\n&D(46)   SETC  '  )  '\n&E(46)   SETC  '  )  '\n&F(46)   SETC  '  )  '\n&G(46)   SETC  ' )   '\n&C(47)   SETC  ' &&&&&& '\n&D(47)   SETC  '&&    '\n&E(47)   SETC  ' &&&&  '\n&F(47)   SETC  '&&   &&'\n&G(47)   SETC  ' &&&&&&&&'\n&C(48)   SETC  '  +  '\n&D(48)   SETC  '  +  '\n&E(48)   SETC  '+++++'\n&F(48)   SETC  '  +  '\n&G(48)   SETC  '  +  '\n&C(49)   SETC  '     '\n&D(49)   SETC  '     '\n&E(49)   SETC  '     '\n&F(49)   SETC  '     '\n&G(49)   SETC  '_____'\n&C(50)   SETC  '  *  '\n&D(50)   SETC  ' C*C '\n&E(50)   SETC  'C *  '\n&F(50)   SETC  ' C*C '\n&G(50)   SETC  '  *  '\n&C(51)   SETC  '  |  '\n&D(51)   SETC  '  |  '\n&E(51)   SETC  '  |  '\n&F(51)   SETC  '  |  '\n&G(51)   SETC  '  |  '\n&C(52)   SETC  ' >   '\n&D(52)   SETC  '  >  '\n&E(52)   SETC  '   > '\n&F(52)   SETC  '  >  '\n&G(52)   SETC  ' >   '\n&C(53)   SETC  ' ..  '\n&D(53)   SETC  ' ..  '\n&E(53)   SETC  '     '\n&F(53)   SETC  ' ..  '\n&G(53)   SETC  ' ..  '\n&C(54)   SETC  ' ..  '\n&D(54)   SETC  ' ..  '\n&E(54)   SETC  '     '\n&F(54)   SETC  ' ,,  '\n&G(54)   SETC  '  ,  '\n&C(55)   SETC  '     '\n&D(55)   SETC  '     '\n&E(55)   SETC  '     '\n&F(55)   SETC  ' ..  '\n&G(55)   SETC  ' ..  '\n&C(56)   SETC  ' ??? '\n&D(56)   SETC  '?   ?'\n&E(56)   SETC  '   ? '\n&F(56)   SETC  '  ?  '\n&G(56)   SETC  '  ?  '\n&C(57)   SETC  ' '' '' '\n&D(57)   SETC  '     '\n&E(57)   SETC  '     '\n&F(57)   SETC  '     '\n&G(57)   SETC  '     '\n&C(58)   SETC  '     '\n&D(58)   SETC  '====='\n&E(58)   SETC  '     '\n&F(58)   SETC  '====='\n&G(58)   SETC  '     '\n&C(59)   SETC  ' ||  '\n&D(59)   SETC  ' ||  '\n&E(59)   SETC  ' ||  '\n&F(59)   SETC  '     '\n&G(59)   SETC  ' ..  '\n&C(60)   SETC  '   < '\n&D(60)   SETC  '  <  '\n&E(60)   SETC  ' <   '\n&F(60)   SETC  '  <  '\n&G(60)   SETC  '   < '\n&C(61)   SETC  '     '\n&D(61)   SETC  '     '\n&E(61)   SETC  '\u00ac\u00ac\u00ac\u00ac\u00ac'\n&F(61)   SETC  '    \u00ac'\n&G(61)   SETC  '     '\n&C(62)   SETC  '     '\n&D(62)   SETC  '     '\n&E(62)   SETC  '     '\n&F(62)   SETC  '     '\n&G(62)   SETC  '     '\n&J       SETA  1\n&K       SETA  1\n         AIF   ('&LETTERS'(1,1) NE '''').JLOOP\n.LLOOP   ANOP\n&J       SETA  &J+1\n.JLOOP   AIF   (K'&LETTERS LT &J).END\n         AIF   (K'&LETTERS EQ &J AND '&LETTERS'(&J,1) EQ '''').END\n&I       SETA  1\n.COMP    AIF   ('&B(&I)' EQ '&LETTERS'(&J,1)).FND\n&I       SETA  &I+1\n         AIF   (&I LT 62).COMP\n.FND     ANOP\n&A(&K)   SETC  '&C(&I)'\n&A(&K+1) SETC  '&D(&I)'\n&A(&K+2) SETC  '&E(&I)'\n&A(&K+3) SETC  '&F(&I)'\n&A(&K+4) SETC  '&G(&I)'\n&K       SETA  &K+5\n         AIF   (&K LT 51).LLOOP\n.END     ANOP\n         SPACE 2\n         MNOTE *,'******************************************************\n               ****************'\n         MNOTE *,' '\n&I       SETA  1\n.REDO    MNOTE *,' &A(&I)  &A(&I+5)  &A(&I+10)  &A(&I+15)  &A(&I+20)  &*\n               A(&I+25)  &A(&I+30)  &A(&I+35)  &A(&I+40)  &A(&I+45)'\n&I       SETA  &I+1\n         AIF   (&I LT 6).REDO\n         MNOTE *,' '\n         MNOTE *,'******************************************************\n               ****************'\n         MEXIT\n         SPACE 4\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDFXIT15": {"ttr": 526, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//SYSRMSIP JOB  ,MSGLEVEL=(1,1),NOTIFY=SYSRMS,\n//    MSGCLASS=T,CLASS=A,REGION=9700K\n//ISPMDR   EXEC ASMHCL,\n//           PARM.C='OBJECT',\n//           PARM.L='MAP,XREF,LIST,RENT,REUS'\n//C.SYSLIB DD DCB=BLKSIZE=12800\n//         DD DSN=SYS1.AMODGEN,DISP=SHR\n//         DD DSN=SYSRMS.MACLIB,DISP=SHR\n//         DD DSN=ISP.V2R3M0.ISPMACS,DISP=SHR,UNIT=3380,VOL=SER=MVS220\nISPDFLTS   ISPMTAIL   TROWDEF=1,CMDSTKSZ=512,EXITS=YES\n//L.SYSLMOD DD DSN=SYS1.LPALIB,VOL=SER=MVS220,UNIT=3380,DISP=SHR\n//L.SYSIN   DD *\n    INCLUDE SYSLIB(ISPMAIN)\n    ENTRY   ISPMDR\n    NAME    ISPMAIN(R)\n//L.SYSLIB  DD DSN=ISP.V2R3M0.ISPLOAD,DISP=SHR,UNIT=3380,VOL=SER=MVS220\n//ISPXIT15 EXEC ASMHCL,\n//           PARM.C='OBJECT',\n//           PARM.L='MAP,XREF,LIST,RENT,REUS'\n//C.SYSLIB DD DCB=BLKSIZE=12800\n//         DD DSN=SYS1.AMODGEN,DISP=SHR\n//         DD DSN=SYSRMS.MACLIB,DISP=SHR\n//         DD DSN=ISP.V2R3M0.ISPMACS,DISP=SHR,UNIT=3380,VOL=SER=MVS220\n         PRINT NOGEN\nISPXIT15 ENTER1 RENT=YES,BASE=R12,CSECT=YES,WKBYTES=4096               X\n               TITLE='ISPF/PDF EXIT 15 SCREEN DISPLAY &SYSDATE'\n         @     ISPXIT15\n         LA    R2,13(,R13)           GET TO LOCAL WORK AREA\n         USING WORK,R2               AND MAKE IT\n*******************************************************************\n*                                                                 *\n*                                                                 *\n*    NAME:    ISPXIT15                                            *\n*    DATE:    MARCH 1988                                          *\n*    VERSION: 01.00                                               *\n*    AUTHOR:  ROBERT M. SIRKIS                                    *\n*             SCOTT AND WHITE MEMORIAL HOSPITAL                   *\n*             2401 SOUTH 31ST STREET                              *\n*             TEMPLE, TEXAS 76508                                 *\n*             (817) 774 2800                                      *\n*                                                                 *\n*    FUNCTION: DETERMINE THE PRIMARY ISPF/PDF PRIMARY OPTION      *\n*              MENU BASED UPON THE FIRST 3 CHARACTERS OF THE      *\n*              TSO USERID.                                        *\n*                                                                 *\n*    LOGIC:    1.) SAVE INPUT PARMATERS FROM ISPF/PDF             *\n*              2.) CHECK TO SEE IF PANEL IS ISR@PRIM, AND IF NOT  *\n*                  EXIT WITH RETURN CODE OF 0.                    *\n*              3.) CHECK LOGIN ID TABLE FOR MATCH ON              *\n*                  FIRST 3 CHARACETERS OF JOBNAME.                *\n*              4.) IF FOUND ALTER THE PANEL NAME IN               *\n*                  PASSED LIST, AND SET RETURN CODE TO 4.         *\n*              5.) ELSE SET DEFAULT TO USR@PRIM, A VERY LIMITED   *\n*                  ISPF/PDF PRIMARY OPTION PANEL.                 *\n*                                                                 *\n*    NOTES:    THIS EXIT MUST BE ASSEMBLED AND LINKED AS          *\n*              AMODE 31, AND RMODE ANY FOR MVS/XA.                *\n*                                                                 *\n*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*\n*                                                                 *\n*        R1     USED TO ADDRESS PARAMTERS FROM ISPF/PDF           *\n*        R2     USED TO ADDRESS WORK AREA                         *\n*        R3     USED TO ADDRESS LOGON ID TABLE                    *\n*        R4     LOOP CONTROL/WORK REG.                            *\n*        R12    BASE REGISTER                                     *\n*                                                                 *\n*******************************************************************\n         EJECT\n*\n*        SAVE PARMLIST\n*        AND MOVE PARAMETERS TO WORK AREA\n*\n         MVC   PARMLIST(40),0(R1)    SAVE PARMLIST\n         ST    R1,@PRMLIST           SAVE PARMLIST ADDRESS\n         L     R1,PARMLIST           GET EXIT ID\n         MVC   ISPXITID,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+4         GET LOGON ID\n         MVC   ISPUSRID,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+8         GET LOGICAL SCREEN ID\n         MVC   ISPSCRID,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+12        GET ZENVIR DATA\n         MVC   ISPZNVIR,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+16        GET LENGTH OF USER DATA\n         MVC   ISPDATAL,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+20        GET ADDRESS OF USER DATA\n         MVC   ISPDATAP,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+24        GET CURRENT PANEL ID\n         MVC   ISPXPANL,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+28        GET MESSAGE PANEL ID\n         MVC   ISPXMESG,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+32        GET CURSOR POSITION ON SCREEN\n         MVC   ISPXCURS,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+36        GET CURSOR OFFSET\n         MVC   ISPXCURO,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+40        GET CURRENT TABLE NAME\n         MVC   ISPXTABL,0(R1)        AND SAVE IT\n         L     R1,PARMLIST+44        GET FLAG BYTES\n         MVC   ISPXFLAG(4),0(R1)     AND SAVE THEM\n*\n*        IS PANEL ISR@PRIM ?\n*\n         L     R1,PARMLIST+24        GET ADDRESS OF PANEL ID\n         CLC   =C'ISR@PRIM',0(R1)    IF IT IS ISR@PRIM\n         BNE   RETURN0               CONTINUE, WE WANT @PRIM ONLY\n*\n*        DETERMINE USERID\n*\n         L     R4,PANLTAB#           GET NUMBER OF TABLE ENTRIES\n         LA    R3,PANLTAB            GET TABLE ADDRESS\nPANLLOOP DS    0H\n         CLC   0(3,R3),ISPUSRID      IS LOGONID MATCH  ?\n         BE    PANLMOVE              YES\n         LA    R3,11(,R3)            POP THE TABLE ADDRESS\n         BCT   R4,PANLLOOP           AND TRY AGAIN\n         LA    R3,=C'DMYUSR@PRIM'    GET ADDRESS OF USR PRIM\nPANLMOVE DS    0H\n         L     R1,PARMLIST+24        GET ADDRESS OF PANEL ID\n         MVC   0(8,R1),3(R3)         MOVE TO PANELID\n         B     RETURN4               INDICATE PANEL CHANGE\nRETURN0  DS    0H\n         SLR   R15,R15               SET NO PANEL CHANGE IN R15\n         B     LEAVE                 AND EXIT\nRETURN4  DS    0H\n         LA    R15,4                 SET PANEL  CHANGE IN R15\nLEAVE    DS    0H\n         LEAVE RC=(R15)\nPANLTAB  DS    0F\n         DC    C'SYS',C'SYS@PRIM'        DEFAULT SYSTEMS PRIMARY PANEL\n         DC    C'USR',C'USR@PRIM'        DEFAULT NO D.P. PRIMARY PANEL\n         DC    C'RES',C'PGM@PRIM'        RES TEAM\n         DC    C'CIS',C'PGM@PRIM'        CIS TEAM\n         DC    C'PBS',C'PGM@PRIM'        PBS TEAM\n         DC    C'PDC',C'PDC@PRIM'        PDC TEAM\n         DC    C'OPR',C'OPR@PRIM'        OPR TEAM\n         DC    C'ADM',C'ADM@PRIM'        ADM TEAM\n         DC    C'QAG',C'PGM@PRIM'        QAG TEAM\n         DC    C'DBA',C'SYS@PRIM'        DBA TEAM\n         DC    C'HIS',C'PGM@PRIM'        HIS TEAM\n         DC    C'FIS',C'PGM@PRIM'        FIS TEAM\n         DC    C'IIS',C'PGM@PRIM'        IIS TEAM\n         DC    C'USX',C'PGM@PRIM'        USX TEAM\nPANLTAB# DC    A(((*-PANLTAB)/11))    NUMBER OF ENTRIES IN TABLE\n         LTORG ,\n         $REGS\nWORK     DSECT\nPARMLIST DS    12A\n@PRMLIST DS    F\nISPXITID DS    A                     BINARY EXIT ID\nISPUSRID DS    CL8                   TSO LOGON ID\nISPSCRID DS    CL8                   LOGICAL SCREEN ID\nISPZNVIR DS    CL32                  32 BYTE ZENVIR FIELD\nISPDATAL DS    A                     LENGTH OF USER FIELD\nISPDATAP DS    A                     ADDRESS OF USER FIELD\nISPXPANL DS    CL8                   PANEL ID FOR PANEL TO BE DISPLAYED\nISPXMESG DS    CL8                   MESSAGE ID\nISPXCURS DS    CL8                   FIELD NAME TO POS. CURSOR\nISPXCURO DS    A                     OFFSET WITH ISPXCURS TO POS CURSOR\nISPXTABL DS    CL8                   TABLE NAME (CANT BE CHANGED)\nISPXFLAG DS    0XL4                  ISPF FLAGS\nISPXFLG1 DS    X                     FLAGE BYTE 1\nISPXNDSP EQU   X'80'                 DISPLAY\nISPXCMND EQU   X'40'                 COMMAND OPTION SET\n         DS    XL3                   LAST THREE FLAG BYTES\n         END\n//L.SYSLMOD DD DSN=SYS1.LPALIB,VOL=SER=MVS220,UNIT=3380,DISP=SHR\n//L.SYSIN   DD *\n    ORDER   ISPXIT15\n    ORDER   ISPXDT\n    INCLUDE SYSLIB(ISPXDT)\n    ENTRY   ISPXDT\n    NAME    ISPEXITS(R)\n//L.SYSLIB  DD DSN=SYSRMS.LOAD,DISP=SHR\n//\n//ISPXDT   EXEC ASMHCL,\n//           PARM.C='OBJECT',\n//           PARM.L='MAP,XREF,LIST'\n//C.SYSLIB DD DCB=BLKSIZE=12800\n//         DD DSN=SYS1.AMODGEN,DISP=SHR\n//         DD DSN=SYSRMS.MACLIB,DISP=SHR\n//         DD DSN=ISP.V2R3M0.ISPMACS,DISP=SHR,UNIT=3380,VOL=SER=MVS220\nISPXDT     ISPMXED    START\n           ISPMXLST   (15)\n           ISPMXDEF   15\n           ISPMEPT    ISPXIT15,ISPXPARM\n           ISPMXEND\n           ISPMXED    END\n           ISPMXDD    START\n           ISPMDAD    ISPXPARM,2048\n           ISPMXDD    END\n//L.SYSLMOD DD DSN=SYSRMS.LOAD,DISP=SHR\n//L.SYSIN   DD *\n    NAME ISPXDT(R)\n//L.SYSLIB  DD DSN=SYSRMS.LOAD,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SWHJ2006": {"ttr": 772, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         @     SWHJ2006\n***********************************************************************\n*                                                                     *\n*        ENVIRONMENT   MVS SP 2.2.0  LEVEL 8804                       *\n*                                                                     *\n*                                                                     *\n*        WRITTEN BY:                                                  *\n*                        ROBERT M. SIRKIS                             *\n*                        SCOTT AND WHITE CLINIC AND HOSPITAL          *\n*                        2401 SOUTH 31ST STREET                       *\n*                        TEMPLE, TEXAS 76508                          *\n*                        (817) 774-2800                               *\n*                                                                     *\n*---------------------------------------------------------------------*\n*                                                                     *\n*    THE PURPOSE OF THIS EXIT IS TO FACILITATE THE CONVERSION OF      *\n*    JCL THAT USES UNIT=TAPE,DISP=NEW TO UNIT=CART.  THIS EXIT IS     *\n*    A TEMPORARY EXIT, IE IT IS SCHEDULED TO BE DELETED FROM THE      *\n*    JES2 SUBSYSTEM AFTER THE FIRST OF THE YEAR.  IT IS INVOKED FOR   *\n*    EACH JCL  TEXT RECORD PROCESSED AND AT THE END OF CONVERSION.    *\n*    IN ORDER FOR THE EXIT TO BE INVOKED THE USER MUST HAVE THE       *\n*    FOLLOWING IN THE JCL DECK, '/*JOBPARM ROOM=CART'.  THE JOBPARM   *\n*    CARD IS GENERATED BY THE CA-SCHEDULER JOB SUBMIT EXIT.           *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *\n*                                                                     *\n*        R0       - STATUS OF CONVERSION PROCESSING:                  *\n*                   0 - INDICATES A SINGLE JCL TEXT                   *\n*                   4 - INDICATES A CONVERTED JCL FOR JOB             *\n*                                                                     *\n*        R1       - ADDRESS OF A 4   WORD PARM LIST                   *\n*                   WORD 1 (+0) ADDRESS OF 16 BYTE WORKAREA FOR EXIT  *\n*                   WORD 2 (+4) IF R0=0 ADDRESS OF JCL TEXT           *\n*                               IF R0=4 ADDRESS RETURN CODE FROM CVTR *\n*                   WORD 3 (+8) ADDRESS OF THE DTE                    *\n*                   WORD 4 (+C) ADDRESS OF THE JCT                    *\n*                                                                     *\n*        R2-R10   - N/A                                               *\n*                                                                     *\n*        R11      - ADDRESS OF HCT                                    *\n*                                                                     *\n*        R12      - USED FOR BASE                                     *\n*                                                                     *\n*        R13      - ADDRESS OF OS SAVE AREA                           *\n*                                                                     *\n*        R14      - RETURN ADDRESS                                    *\n*                                                                     *\n*        R15      - ENTRY ADDRESS                                     *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*            M A C R O S   U S E D   I N   J E S E X I T 9            *\n*                                                                     *\n*        01)  $BUFFER      SYS1.HASPSRC                               *\n*        02)  $ENTRY       SYS1.HASPSRC                               *\n*        03)  $HASPEQU     SYS1.HASPSRC                               *\n*        04)  $HASPGBL     SYS1.HASPSRC                               *\n*        05)  $JCT         SYS1.HASPSRC                               *\n*        06)  $PCT         SYS1.HASPSRC                               *\n*        07)  $HCT         SYS1.HASPSRC                               *\n*        09)  IEFTXTFT     SYS1.AMODGEN                               *\n*        10)  IEFVKEYS     SYS1.AMODGEN                               *\n*        10)  RPL          SYS1.MACLIB                                *\n*                                                                     *\n***********************************************************************\n         EJECT\n         COPY  $HASPGBL\nSWHJ2006 $MODULE SYSP=(NOGEN,NOGEN,DATA,NOGEN,NOGEN),                  X\n               ENVIRON=SUBTASK,                                        X\n               TITLE='SWHJ2006 -- INTERNAL TEXT EXIT &SYSDATE',        X\n               $HASPEQU,                                               X\n               $JCT,                                                   X\n               $PCE,                                                   X\n               $HCT,                                                   X\n               $BUFFER,                                                X\n               $MIT,                                                   X\n               $XIT,                                                   X\n               $DTE,                                                   X\n               $DTECNV,                                                X\n               $XECB,                                                  X\n               $ERA,                                                   X\n               DEB,                                                    X\n               NEL,                                                    X\n               ACB,                                                    X\n               RPL,                                                    X\n               TEXT,                                                   X\n               KEYS\n               EJECT\n***********************************************************************\n*                                                                     *\n*        EXIT MAIN ENTRY POINT                                        *\n*                                                                     *\n***********************************************************************\nUEXIT006 $ENTRY BASE=R12\n         SPACE 1\n         SAVE  (14,12)             SAVE REGISTERS\n         LR    R12,R15             GET EPA INTO R12 TO SET UP BASE\n         USING UEXIT006,R12        ESTABLISH ADDRESSABILITY\n         LR    R2,R1               SAVE ADDRESSS OF PARMLIST\n         L     R10,12(R2)          GET ADDRESS OF JCT\n         USING JCT,R10             AND MAKE IT USABLE\n         LR    R7,R0               SAVE FOR LATER USE\n         L     R15,0(R2)           GET ADDRESS OF WORKAREA\n         ICM   R1,15,0(R15)        SEE IF WE ARE STARTING OUT\n         BZ    GETMAIN             NO, WE ARE NOT.\n         ST    R13,4(R1)           CHAIN BACK TO OLD S/A ......\n         ST    R1,8(R13)           CHAIN FORWARD TO NEW S/A ...\n         LR    R13,R1              ESTABLISH NEW SAVE AREA/WORKAREA\n         USING WORKAREA,R13        AND MAKE IT USABLE\n         B     UEXIT601            BRANCH TO CODE\nGETMAIN  DS    0H\n         LH    R0,GETLEN           LENGTH OF GETMAIN\n         GETMAIN R,LV=(0)           GO FETCH THE STORAGE\n         LR    R3,R1               PLACE A(STOR) IN WORK REG\n         LR    R0,R1               CLEAR WORKAREA TO\n         LH    R1,GETLEN               ZEROES\n         SLR   R15,R15                     FOR INITIALIZATION\n         MVCL  R0,R14                           PURPOSES\n         ST    R13,4(R3)           CHAIN BACK TO OLD S/A .....\n         ST    R3,8(R13)           CHAIN FORWARD TO NEW S/A ..\n         LR    R13,R3              SET NEW SAVE/WORKAREA\n         L     R15,0(R2)           GET ADDRESS OF EXIT WORK AREA\n         ST    R13,0(R15)          AND SAVE GETMAINED AREA ADDRESS\n         ZAP   NUMDDS,=PL3'0'      ZERO CONVERTED COUNT\n         EJECT\nUEXIT601 DS    0H\n         LTR   R7,R7               LAST CALL FROM CONVERTER ? (WAS R0)\n         BNZ   UEXIT6CL            YES, GO SEND MESSAGES AND CLEANUP\n         CLC   =C'CART',JCTROOMN   IS THIS IS PROD JOB ?\n         BE    UEXIT603            NO\n         LA    R7,BYPASJOB         GET ADDRESS OF JOBTABLE\n         L     R8,TABENT#          GET NUMBER OF ENTRIES\nUEXIT602 DS    0H\n         CLC   JCTJNAME,0(R7)      DO WE BYPASS THIS JOB ?\n         BE    RETURN0             SURE DO\n         LA    R7,8(,R7)           POP TABLE BY 1 ENTRY(8 BYTES)\n         BCT   R8,UEXIT602\n         CLI   JCTJNAME+3,C'J'     IS THIS A PRODUCTION JOB ?\n         BNE   RETURN0\nUEXIT603 DS    0H\n         L     R9,8(R2)            GET DTE ADDRESS\n         USING DTE,R9              AND MAKE USABLE\n         LA    R9,DCNVMSG          LOAD OUTPUT ACB ADDRESS\n         ST    R9,OUTACB           AND SAVE IT FOR LATER USE\n         DROP  R9                  DON'T NEED IT\n         LA    R9,MSGRPL           LOAD OUTPUT RPL ADDRESS\n         ST    R9,OUTRPL           AND SAVE IT FOR LATER USE\n         L     R9,4(R2)            GET ADDRESS OF TEXT\n         USING TEXT,R9             AND MAKE IT USABLE\n*\n         TM    STRINDCS,DDSTR      IS IT A DD CARD ?\n         BNO   RETURN0             NO, EXIT\n         TM    STRDINDC,DTXDDNM    DD DDNAME=\n         BO    RETURN0             YES, DONT PROCESS\n         TM    STRDINDC,DTXDYNAM   DD DYNAM\n         BO    RETURN0             YES, DONT PROCESS\n         TM    STRDINDC,DTXSYSIN   JES2 SPOOL DATA SET ?\n         BO    RETURN0             YES, DONT PROCESS\n         XC    TAPESW,TAPESW       CLEAR TAPE  SWITCH\n         XC    DISPSW,DISPSW       AND DISP SWITCH\n*\nDDSTART  DS    0H\n         LA    R4,STRDKEY          GET ADDRESS OF DD TEXT\n         ST    R4,TEXTADDR         SAVE THE ADDRESS\nDDPARM   DS    0H\n         CLI   0(R4),ENDK          END OF TEXT ?\n         BE    DDEND               GO CHECK FOR UPDATE\n         EJECT\nDDDNAME  DS    0H\n***********************************************************************\n*        DD DDNAME                                                    *\n***********************************************************************\n         CLI   0(R4),DDK           DDNAME TEXT ?\n         BNE   DDISP               NO\n         SLR   R5,R5               CLEAR WORK REG\n         ICM   R5,1,1(R4)          LOAD NUMBER OF SUBPARMS\n         BZ    DDLOOP              NO SUBPARMS\n         SLR   R6,R6               CLEAR WORK REG\n         ICM   R6,1,2(R4)          GET L'DDNAME\n         BZ    DDLOOP              IT IS A CONCATINATED DDNAME\n         CH    R6,$H8              DDNAME > 8\n         BH    RETURN0             SKIP, THIS CARD IS A JCL ERROR\n         B     DDLOOP              GET NEXT TEXT\n         EJECT\n***********************************************************************\n*        DD DISP                                                      *\n***********************************************************************\nDDISP    DS    0H\n         CLI   0(R4),DISPK         SEE IF DISP= KEYWORD\n         BNE   DUNIT               NO, BRANCH\n         SLR   R5,R5               CLEAR REG FOR ICM\n         ICM   R5,1,1(R4)          LOAD NUMBER SUBPARAMS\n         BNZ   DSPLOO0             ZERO, NULL, BRANCH\n         MVI   DISPSW,X'FF'        SET DDNEW SW ON\n         B     DDLOOP\nDSPLOO0  LA    R4,2(,R4)           LOAD START ADDR OF SUBPARAMS\n         CH    R5,=H'3'            SEE IF NUMBER > 3\n         BH    RETURN0             JCL ERROR\n         SLR   R6,R6               ZERO WORK REG\nDSPLOO1  LA    R6,1(,R6)           ADD 1 TO COUNTER\n         CR    R6,R5               SEE IF ALL PROCESSED\n         BH    DDLOOP              YES, GO CHECK RESULTS\n         SLR   R7,R7               ZERO WORK REG\n         IC    R7,0(R4)            LOAD LEN OF PARAM\n         CH    R6,$H1              SEE IF 1ST PARAM\n         BE    DSPLOO2             YES, BRANCH TO PROCESS\n         B     DDLOOP\n***********************************************************************\n*         FIRST DISP PARAMETER                                        *\n***********************************************************************\nDSPLOO2  LTR   R7,R7               SEE IF LENGTH = 0\n         BZ    DSPLOO3             YES, GO SET TO NEW\n         CLC   1(3,R4),=C'NEW'     SEE IF NEW\n         BNE   RETURN0             NO, BRANCH\nDSPLOO3  MVI   DISPSW,X'FF'        SET TO NEW\n         B     DDLOOP\n         EJECT\n***********************************************************************\n*        DD UNIT                                                      *\n***********************************************************************\nDUNIT    DS    0H\n         CLI   0(R4),UNITK         SEE IF UNIT= PARAM\n         BNE   DDLOOP              NO, BRANCH\n         SLR   R5,R5               CLEAR R5\n         ICM   R5,1,1(R4)          GET NUMBER OF POS SUBPARAMS\n         BZ    DDLOOP              ZERO, NO POS SUBPARAMS\n         CH    R5,=H'3'            SEE IF NUMBER > 3\n         BH    RETURN0             JCL ERROR\n         CLI   2(R4),X'04'         IS LENGTH WHAT WE WANT ?\n         BNE   DDLOOP              NO\n         CLC   3(4,R4),=C'3420'    IS IT A TAPE DEVICE\n         BE    DUNITY              YES, SAVE ADDRESS FOR LATER USE\n         CLC   3(4,R4),=C'TAPE'    IS IT A TAPE DEVICE ?\n         BNE   RETURN0             NO, SKIP THE REST\nDUNITY   LA    R5,3(,R4)           GET ADDRESS OF DEVICE TYPE\n         ST    R5,DEVADDR          AND SAVE\n         MVI   TAPESW,X'FF'\n         EJECT\n***********************************************************************\n*        THIS ROUTINE WILL INCREMENT PAST THE STRING(S) BEING         *\n*        PROCESSED.  NOTE THAT FOLLOWING THE KEYWORD DESCRIPTOR       *\n*        FIELD IS A COUNT OF SUBPARAMETERS.  FOLLOWING THE COUNT      *\n*        WILL BE A LENGTH OR DESCRIPTOR FIELD.  IF THE HIGH ORDER     *\n*        BIT IS ON, THE FIELD IS A COUNT FIELD OF THE NUMBER OF       *\n*        SUBPARAMETERS WHICH THE SUBPARAMETER ITSELF MAY HAVE.        *\n*        IF THIS IS TRUE, THE DESCRIPTOR FIELD WILL BE FOLLOWED BY    *\n*        A LENGTH FIELD FOR THE FIRST SUBPARAMETER.  IF THE HIGH      *\n*        ORDER BIT IS NOT ON, IT IS ONLY A LENGTH FIELD FOR A         *\n*        SINGLE SUBPARAMETER.                                         *\n***********************************************************************\nDDLOOP   DS    0H\n         L     R4,TEXTADDR         RESTORE START OF PARAMETER ADDRESS\n         SLR   R5,R5               CLEAR REGISTER FOR ICM\n         LA    R4,1(,R4)           INCREMENT PAST KEYWORD\n         ICM   R5,1,0(R4)          LOAD SUBPARAMETER COUNT\n         BNZ   DDLOOP2             OK, BRANCH INTO ROUTINE\n         LA    R4,1(,R4)           NONE, INCREMENT PAST COUNT\n         B     DDLOOP6             AND GET OUT OF ROUTINE\nDDLOOP2  DS    0H\n         LA    R4,1(,R4)           INCREMENT PAST KEYWORD DESCR\nDDLOOP3  DS    0H\n         SLR   R6,R6               CLEAR REGISTER FOR ICM\n         ICM   R6,1,0(R4)          LOAD PARAMETER LENGTH\n         BNM   DDLOOP4             HIGH BIT NOT ON, ONLY 1 PARAMETER\n         N     R6,F#127            'AND' OUT THE HIGH ORDER BIT\n         LA    R4,1(,R4)           INCREMENT PAST CONTROL BYTE\n         B     DDLOOP5             BRANCH\nDDLOOP4  DS    0H\n         LA    R6,1                SET PARAM COUNT TO 1\nDDLOOP5  DS    0H                  CLEAR REGISTER FOR ICM\n         SLR   R7,R7               CLEAR REGISTER FOR ICM\n         ICM   R7,1,0(R4)          LOAD PARAMETER LENGTH\n         LA    R4,1(R7,R4)         INCREMENT PAST PARM\n         BCT   R6,DDLOOP5          LOOP UNTIL PROCESSED ALL PARMS\n         BCT   R5,DDLOOP3          LOOP UNTIL PROCESSED ALL PARMS\nDDLOOP6  DS    0H\n         ST    R4,TEXTADDR         SAVE START OF PARAMETER ADDRESS\n         B     DDPARM              CONTINUE\n         EJECT\n***********************************************************************\n*        DETERMINE IF WE NEED TO CHANGE THE UNIT= PARM                *\n***********************************************************************\nDDEND    DS    0H\n         CLI   DISPSW,X'FF'        WAS INITIAL DISP=NEW\n         BNE   RETURN0              NO\n         CLI   TAPESW,X'FF'        IS IT A 3420 OR TAPE\n         BNE   RETURN0              NO\n         L     R15,DEVADDR         GET ADDRESS OF UNIT=\n         MVC   0(4,R15),=C'CART'   SET IT TO CART\n         AP    NUMDDS,=P'1'        ADD TO CONVERTED COUNT\n         EJECT\n***********************************************************************\n*        EXIT ROUTINES AND PROGRAM CONSTANTS                          *\n***********************************************************************\nRETURN0  EQU   *\n         L     R13,4(R13)         RETURN TO JES2\n         SR    R15,R15             WITH A NORMAL RETURN CODE,\n         B     LEAVE6              GO EXIT\nUEXIT6CL DS    0H\n         CP    NUMDDS,=PL3'0'      HAVE WE CONVERTED ANY DD CARDS\n         BE    UEXIT6C0            NO\n         MVC   EDITFLD,EDITMASK    MOVE IN EDIT MASK\n         ED    EDITFLD,NUMDDS      MAKE COUNT READABLE\n         BAL   R14,MSGRTN          GO PRINT MESSAGE IN JOBLOG\nUEXIT6C0 LR     R1,R13              RETURN TO JES2\n         LH     R0,GETLEN            SINCE WE ARE THRU FOR THE JOB\n         L      R13,4(R13)          RETURN THE GOTTEN STORAGE\n         FREEMAIN R,LV=(0),A=(1)\n         LA     R15,0                SET 0 RETURN CODE\nLEAVE6   RETURN (14,12),RC=(15)      AND EXIT\n         EJECT\n***********************************************************************\n*                                                                     *\n*                    M S G R T N                                      *\n*                                                                     *\n*       WRITE A MESSAGE INTO A INTO THE JES MESSAGE DATA SET.         *\n*                                                                     *\n***********************************************************************\nMSGRTN   DS     0H\n         STM    R14,R12,SAVEREGS\n         L      R6,OUTRPL            GET OUTPUT RPL ADDRESS\n         USING  IFGRPL,R6             MAKE IT USABLE\n         MVC    BUFFER,MSG0\n         MVC    PRTNUM,EDITFLD\n         BAL    R5,PUTMSG            GO PRINT MESSAGE\nMSGRTN1  DS     0H\n         LM     R14,R12,SAVEREGS\n         BR     R14\nPUTMSG   DS     0H\n         MVI    RPLREQ,RPLPUT         TYPE RPL=PUT\n         L      R0,OUTACB             GET OUTPUT ACB ADDRESS\n         ST     R0,RPLDACB            SET ACB ADDR INTO RPL\n         LA     R0,BUFFER             GET ADDRESS OF MESSAGE BUFFER\n         ST     R0,RPLAREA            STORE ADDR IN RPL\n         XC     RPLARG(4),RPLARG      ZERO KEY FIELD\n         MVI    RPLOPT1,RPLSEQ        SEQUENTIAL WRITE\n         MVI    RPLOPT2,X'00'         SERO SECOND OPTION BYTE\n         LA     R0,100                LENGTH OF BUFFER\n         ST     R0,RPLRLEN            STORE IT IN RPL\n         XC     RPLBUFL(4),RPLBUFL    ZERO FIELD\n         XC     RPLDDDD(4),RPLDDDD    X\n         LA     R1,IFGRPL\n         PUT    RPL=(1)\n         LTR    R15,R15\n         BZR    R5\nMSGERROR DS     0H\n         LA     R15,PUTERR\n         WTO    MF=(E,(R15))\n         BR     R5\nGETLEN   DC    AL2(WORKLENG)\nEDITMASK DC    X'402020202120'\nPUTERR   WTO    'SWHJ2X6E ERROR WRITING MESSAGE TO JOB LOG',           X\n               ROUTCDE=(11),MF=L\nMSG0     DC     CL100'SWHJ2X6I THERE WERE 123456 DD STATEMENTS CONVERTEX\n               D FROM \"UNIT=TAPE\" TO \"UNIT=CART\"'\nF#127    DC    F'127'\nBYPASJOB DS     0D\n         DC     C'ADCJM003',C'ASIJM040'\n         DC     C'ASIJM070',C'ASIJM080'\n         DC     C'ASIJM090',C'CHPJM050'\n         DC     C'CHPJM090',C'CHPJM100'\n         DC     C'PBSJD011',C'PBSJD707'\n         DC     C'PBSJM142',C'PBSJM154'\n         DC     C'PBSJM171',C'PBSJM330'\n         DC     C'PBSJM600',C'PBSJW725'\n         DC     C'PBSJM744',C'PBSJM745'\n         DC     C'PBSJM746',C'PBSJM752'\n         DC     C'PBSJM753',C'PBSJM717'\n         DC     C'PBSJW717',C'PBSJW721'\n         DC     C'REGJDMRG',C'REGJMCRT'\n         DC     C'MCSJM010',C'MCSJM020'\n         DC     C'HMOJR205',C'MCSJR010'\n         DC     C'GNRJM01B',C'DMSJM020'\n         DC     C'CHPJM035',C'HMOJM010'\n         DC     2XL8'FFFFFFFFFFFFFFFF'   END OF TABLE\n         DC     2XL8'FFFFFFFFFFFFFFFF'     AND\n         DC     2XL8'FFFFFFFFFFFFFFFF'       PATCH\n         DC     2XL8'FFFFFFFFFFFFFFFF'           AREA\n         DC     2XL8'FFFFFFFFFFFFFFFF'              X'FF' IS END\nTABENT#  DC     A(((*-BYPASJOB)/8)-1)    NUMBER OF JOBS IN TABLES\n         DROP   R6\n         LTORG ,\n         $MODEND\n         EJECT\n***********************************************************************\n*        WORK AREA DSECT                                              *\n***********************************************************************\nWORKAREA DSECT\nSAVEAREA DS    18F                   PROGRAM SAVE AREA\nSAVEREGS DS    18F                   REGISTER SAVE AREA\nPUTSAVE  DS    18F                   REGISTER SAVE AREA\nMSGRPL   DS    19F                   SKELETON RPL\nTEXTADDR DS    F                     ADDRESS OF CURRENT TEXT UNIT\nDEVADDR  DS    F                     ADDRESS OF THE UNIT TYPE\nOUTACB   DS    F                     ADDRESS OF OUTPUT ACB\nOUTRPL   DS    F                     ADDRESS OF OUTPUT RPL\nTAPESW   DS    X                     SWITCH INDICATING TAPE UNIT\nDISPSW   DS    X                     SWITCH INDICATING DISP=NEW\nNUMDDS   DS    PL3\nEDITFLD  DS    CL6\n         DS    0F\nBUFFER   DS    CL100\nPRTNUM   EQU   BUFFER+20,6\n         DS    0F\nWORKLENG EQU   *-WORKAREA\n         END   SWHJ2006\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SWHUSER": {"ttr": 779, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         PRINT OFF\n         COPY  $HASPGEN                                         SL00201\n         COPY  ISFEQU\n         PRINT ON\n         EJECT\n***********************************************************************\n*                                                                     *\n*              THE AUTHORIZATION CHECK EXIT IS ENTERED KEY ONE AND    *\n*        SUPERVISOR IF THE SDSF SVC IF AVAILABLE.  IF NOT AVAILABLE,  *\n*        IT IS ENTERED KEY 8 PROBLEM STATE.                           *\n*                                                                     *\n*              THIS IS THE AUTHORIZATION CHECK USER EXIT FOR SDSF.    *\n*        ON ENTRY REGISTER 0 CONTAINS THE FOLLOWING:                  *\n*                                                                     *\n*              0 - FOR THE INITIALIZATION CALL                        *\n*              4 - FOR A COMMAND CHECK CALL                           *\n*              8 - FOR A DISPLAY SYSOUT CALL                          *\n*             12 - FOR THE TERMINATION CALL                           *\n*                                                                     *\n*              ON ENTRY REGISTER ONE CONTAINS A PARAMETER LIST        *\n*        WHICH IS MAPPED BY THE USERPARM DSECT CONTAINED IN THIS      *\n*        MEMBER.  A RETURN CODE OF OTHER THAN ZERO WILL CANCEL THE    *\n*        FUNCTION. NOTE THAT IF THE SVC IS AVAILABLE THE PARAMETER    *\n*        LIST IS IN KEY ONE STORAGE.                                  *\n*               FOR AN INITIALIZATION CALL IF THE SDSFATH BYTE        *\n*        IS ZERO AT THE TIME OF CALL, THE USER WILL NOT BE ALLOWED    *\n*        TO USE SDSF UNLESS IT IS SET TO NON-ZERO BY EXIT.            *\n*               FOR BOTH THE COMMAND CHECK AND DISPLAY SYSOUT CALL    *\n*        IF THE AUTHRETC WORD IS NON-ZERO AT TIME OF CALL, THEN       *\n*        THE CALL WILL BE FAILED UNLESS THE EXIT ZEROS THE WORD.      *\n*               A WORD NAMED USERWORD HAS BEEN PROVIDED FOR THE       *\n*        USER TO SAVE THE ADDRESS OF A WORK AREA FOR INFORMATION      *\n*        NEEDED FROM ONE CALL TO THE NEXT.                            *\n*               THE TERMINATION CALL IS PROVIDED FOR THE USER EXIT    *\n*        TO CLEAN UP ANY WORK AREAS GOTTEN DURING PRIOR CALLS.        *\n*                                                                     *\n***********************************************************************\n         SPACE 5\nISFUSER  CSECT\n         ISFSAVE\n         BALR  R12,0               BASE REGISTER\n         USING *,R12\n         LR    R11,R1              USER EXIT PARM\n         USING USERPARM,R11\n         LR    R10,R0              CALL TYPE\n         B     CALLTYPE(R10)       GO TO PROPER CODE\nCALLTYPE B     INITCK              INITIALIZATION\n         B     CMDCK               COMMAND CHECK\n         B     DSPCK               DISPLAY SYSOUT CHECK\n         B     EXIT                EXIT PROCESSING\n         EJECT\n***********************************************************************\n*                                                                     *\n*                      INITIALIZATION USER CHECK SECTION              *\n*                                                                     *\n***********************************************************************\n         SPACE 5\nINITCK   DS    0H                  INITIALIZATION USER CHECK\n         SPACE 5\n***********************************************************************\n*                                                                     *\n*                      ADD USER CODE HERE                             *\n*                                                                     *\n***********************************************************************\n         SPACE 5\n         EJECT\n***********************************************************************\n*                                                                     *\n*                      OPERATOR COMMAND CHECK SECTION                 *\n*                                                                     *\n***********************************************************************\n         SPACE 5\nCMDCK    DS    0H                  OPERATOR COMMAND CHECK\n         CLI   OPERCMD+4,C'E'      IF COMMAND IS THE 'MVS RESET'\n         BNE   RETURN\n         CLC   =C'SYS',SUSERID     ONLY TECH SUPPORT AND\n         BE    RETURN\n         CLC   =C'OPR',SUSERID     OPERATIONS ARE ALLOWED\n         BNE   FAIL\n         LA    R9,BADOPR           GET ADDRESS OF BAD OPR ID TABLE\nCMDCK01  DS    0H\n         CLC   0(6,R9),SUSERID     IS THIS IN THE BAD OPR* TABLE\n         BE    FAIL                YES, THIS PERSON IS NOT ALLOWED\n         LA    R9,6(,R9)           POP TABLE ENTRY BY 1.\n         CLI   0(R9),C' '          PAST LAST ENTRY IN TABLE ?\n         BE    RETURN              THEN THIS OPR* USER IS OM.\n         CLI   0(R9),X'FF'         END OF TABLE ?\n         BE    RETURN              THEN THIS OPR* USER IS OK.\n         B     CMDCK01             AND LOOP\n         SPACE 5\n***********************************************************************\n*                                                                     *\n*                      ADD USER CODE HERE                             *\n*                                                                     *\n***********************************************************************\n         SPACE 5\n         EJECT\n***********************************************************************\n*                                                                     *\n*                      DISPLAY SYSOUT CHECK SECTION                   *\n*                                                                     *\n***********************************************************************\n         SPACE 5\nDSPCK    DS    0H                  DISPLAY SYSOUT CHECK\n         SPACE 5\n***********************************************************************\n*                                                                     *\n*                      ADD USER CODE HERE                             *\n*                                                                     *\n***********************************************************************\n         SPACE 5\n         EJECT\n***********************************************************************\n*                                                                     *\n*                      EXIT CLEAN UP SECTION                          *\n*                                                                     *\n***********************************************************************\n         SPACE 5\nEXIT     DS    0H                  EXIT PROCESSING\n         SPACE 5\n***********************************************************************\n*                                                                     *\n*                      ADD USER CODE HERE                             *\n*                                                                     *\n***********************************************************************\n         SPACE 5\nRETURN   RETURN (14,12),T,RC=0     RETURN RETURN CODE 0\nFAIL     RETURN (14,12),T,RC=4     RETURN RETURN CODE 4\nBADOPR   DC    C'OPRSCR'           **** PDC ****\n         DC    C'OPRDLP'                 |\n         DC    C'OPRCEL'                 |\n         DC    C'OPRDSG'                 |\n         DC    C'OPRCCM'                 |\n         DC    C'OPRTJS'                 |\n         DC    C'OPRELA'           **** D/E ****\n         DC    C'OPRBJD'                 |\n         DC    C'OPRMAB'                 |\n         DC    C'OPRMDF'                 |\n         DC    C'      '           TABLE SEARCH QUIT AFTER\n         DC    C'      '           FIRST BLANK\n         DC    C'      '\n         DC    C'      '\n         DC    C'      '\n         DC    X'FF'               END OF LIST\n         LTORG\n         EJECT\n***********************************************************************\n*                                                                     *\n*               USER EXIT COMMUNICATION AREA                          *\n*                                                                     *\n***********************************************************************\n         SPACE 5\nUSERPARM DSECT                     USER EXIT PARM\n         ISFUPRM\n         END\n//GENLKED  EXEC PGM=IEWL,PARM=(XREF,LET,LIST,RENT,REFR,NCAL)\n//ISFDLIB  DD   DSN=ISF.V2R2.ISFDLIB,DISP=SHR\n//ISFTLIB  DD   DSN=ISF.V2R2.ISFLOAD2,DISP=SHR\n//SYSLIN   DD   DDNAME=SYSIN\n//SYSLMOD  DD   DSN=ISF.V2R2.ISFLOAD2,DISP=SHR\n//SYSUT1   DD   DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(10,10))\n//SYSPRINT DD   SYSOUT=*\n//SYSIN   DD  *\n INCLUDE ISFDLIB(SWHUSER)\n INCLUDE ISFTLIB(ISFVTBL)\n ENTRY ISFVTBL\n NAME ISFVTBL(R)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT016/FILE016.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT016", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}