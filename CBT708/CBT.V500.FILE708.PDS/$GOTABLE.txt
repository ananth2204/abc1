Inner and outer IF's for all, IF's any combination up to 16 deep any
 order.  This is only for IF logic, with one exception the GET also
 uses it but its a little different.

At some point while adding more IF logic I was unable to keep track of
 the inner and outer IFs using conventional logic, so I came up with an
 elegant and some what simple solution use a table and switches.

Upon setting up to reading a commands member initialize all switches to
 x'40' MPFXT200

IFLOGIC section picks which routine to go to.

First time into an IF routine:

Setup for GOTABLE section:
Set R8 to the section of the routine that checks "is it an ENDIF" or
 "is its switch set to NO" or "go do what you need to do" all for that
 one IF, call this the "decision section".
Set R2 to the start of the routine, the place where the stuff you want
 to do if everything is true, call this the "logic section".
Set R6 to the place where we set the switch to NO and return via R9 what
 ever that is set to, call this the "no section".
Branch MOVEGO
Simple reference SYSIDCK

The MOVEGO section:
This is where we setup the table, the table is a stack of fullwords
 (16 of em) 4 bytes each.
The first thing is to add 4 to the GOCTR place that into R3.

Load the address of the GOTABLE to R7.
Store the address of R8 "decision section" into the GOTABLE offset by
the GOCTR R3.
 (So if you had 4 nested IFs the GOTABLE would contain the addresses
 for all of those IFs "decision sections" in order)
Check if any other IFs are set to NO, if one is go to the address of
 R6 the "no section" else go to the address of R2 the "logic section".

Logic Section:
Do stuff
Then return
Simple reference SYSID

No section:
Not much here set switch to NO and return.
Simple reference SYSIDNO

If the next command line isnt an IF:
Check GOCTR
If its zero no outer IFs continue on.
If less then zero error.
If greater then zero outer IF's present.
Load R3 with the address of the last IFs "decision section" and go
there.

Decision Section:
Check if its the end of this IFs logic.
If yes decrease GOCTR by 4 and reset its switch then return.
Check if IFs switch is set to NO if it is return if not continue.
Simple reference CKSYSID

So a recap there are four sections per IF:
 1. Setup for GOTABLE section.
 2. Logic section.
 3. NO section.
 4. Decision section checks for ENDIF or NO or Continue processing
