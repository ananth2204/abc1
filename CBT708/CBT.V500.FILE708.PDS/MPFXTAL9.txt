MPFXTALL TITLE 'MPF exit to issue commands based on message ID'
MPFXTALL CSECT
MPFXTALL AMODE 31
MPFXTALL RMODE 24
         YREGS
         BAKR  R14,0               Store Regs & Envir on Link Stack
         LAE   R12,00(,R15)        R12 = The Base Register
         LA    R11,4095(,R12)      R11 = Second Base Register
         LA    R11,1(,R11)         Add 1 more
         USING MPFXTALL,R12,R11    Establish Addressability
         B     START               Branch around constants
**********************************************************************
*    Copyright (c) 1998-2007 and Written by Glenn Siegel SSC Corp.   *
**********************************************************************
         DC    C' MPFXTALL '       Program Name Identifier
         DC    C'Version 5.9 '     Version
         DC    C'&SYSDATE '        Assembly Date
         DC    C'&SYSTIME '        Assembly Time
         DC    C'Copyright(c) 1998 2007 '
         DC    C'Glenn Siegel '
         DC    C'SSC Corp. '
         DC    C'631-444-5339 '
         DC    C'516-607-4005 cell '
         DC    C'GlennSiegel@optonline.net '
**********************************************************************
*                                                                    *
*   GS   - A complete rewrite added all logic IF's etc               *
*                                                                    *
*   TL01 - States messageid issued for command/reply by, and reply   *
*          length modification by Tom Lewis                          *
*                                                                    *
*   PJ01   Support for second message line by Peter Johnson          *
*                                                                    *
*   PJ02 - Multiple blanks between message words by Peter Johnson    *
*                                                                    *
*   PJ03 - Get Word length increased to 40 chars by Peter Johnson    *
*                                                                    *
*   PJGS1 - Joint effort of AUTO/TOKEN by Peter Johnson and Glenn    *
*                                                                    *
*   GS50  - AUTO/TOKEN different member selection by Glenn Siegel    *
*                                                                    *
*   GS51  - Message ID Plus For by Glenn Siegel                      *
*                                                                    *
*   GS52  - Outer and inner IF's for all by Glenn Siegel             *
*                                                                    *
*   GS53  - Set AUTO and AMRF on by Glenn Siegel                     *
*                                                                    *
*   DT01  - NOSYSLOG and NOJOBLOG settings by Dean Tesar             *
*                                                                    *
*   DT02  - MPFSUPNO setting by Dean Tesar                           *
*                                                                    *
*   GS54  - Get reply id by Glenn Siegel                             *
*                                                                    *
*   GS55  - PUTSWITCH by Glenn Siegel                                *
*                                                                    *
*   GS56  - IF MSGID NE by Glenn Siegel                              *
*         - IF MSGNE+ xx FOR xx by Glenn Siegel                      *
*                                                                    *
*   GS57  - No display /* MPFXTALL */                                *
*         - AUTO(NODISPLY)      by Glenn Siegel                      *
*                                                                    *
*   DT03  - Four digit replies                                       *
*         - REPLY NNNN,         by Dean Tesar                        *
*                                                                    *
*   GS58  - You want colors I'll give you colors                     *
*                                                                    *
*   GG58  - Added support for IF ASTYPE EQ J or T or S; added support*
*           for TSOROUTE/TSOROUTE REPLY/TSOROUTE SUPPRESS including  *
*           subroutine TSOROUTE by Garry Green                       *
*                                                                    *
*   GG59  - Added ESTAEX to prevent MPFXTALL from becoming           *
*           deactivated should it abend by Garry Green               *
*                                                                    *
**********************************************************************
START    DS    0H
         L     R10,0(,R1)          Establish Addressability
         USING CTXT,R10            To the CTXT
         TM    CTXTSFB4,CTXTCIDA   Termination call               PJ01
         BO    RETURN              Yes-Return                     PJ01
         ICM   R5,15,CTXTTXPN      Have minor message?            PJ01
         BNZ   MINOR               Yes, go use it                 PJ01
*
         TM    CTXTSFB2,CTXTSAUT   Automation specified           PJGS1
         BZ    GETM                NO-BR                          PJGS1
         LA    R9,RETURN           Exit point for next routines   PJGS1
         CLC   CTXTAUTT,=CL8'SUPPRESS' suppress message           PJGS1
         BE    SUPPRESS            call suppress routine          PJGS1
         CLC   CTXTAUTT,=CL8'NOJOBLOG' suppress message           PJGS1
         BE    NOJOBLOG            call nojoblog routine          PJGS1
         CLC   CTXTAUTT,=CL8'NOSYSLOG' suppress message           PJGS1
         BE    NOSYSLOG            call nosyslog routine          PJGS1
         CLC   CTXTAUTT,=CL8'HIGHLITE' suppress message           PJGS1
         BE    MPFHIGHL            call Highlight routine         PJGS1
**********************************************************************
*        GETMAIN SUBPOOL 230 AND INITIALIZE WORKAREA                 *
**********************************************************************
GETM     DS    0H
         GETMAIN RU,LV=WORKSIZE,SP=230,LOC=(BELOW,ANY)
         LTR   R15,R15             Test getmain
         BZ    AFTERGM             OK continue
         WTO   'MPF029E - GETMAIN ERROR',DESC=(2),ROUTCDE=(1)
         B     MPF008R             Bye
AFTERGM  DS    0H
         LR    R2,R1               Point to Reentrant work area
         LA    R3,PSETSIZE         Store length of preset constants
         LR    R5,R3               Copy to R4 for MVCL
         LA    R4,PSETAREA         Point to preset data area
         MVCL  R2,R4               Prime work area with preset data
         LR    R13,R1              Sace address of getmained storage
         USING WORKAREA,R13        Establish Addressability
         MVC   SAVEAREA+4,=C'F1SA' Indicate stack in use
*
         ESTAEX ESTAERC,           Specify abend recovery routine GG59 *
               MF=(E,ESTAELST)     (Cont'd)                       GG59
*DC X'00' *** Force abend *** Glenn for testing only pls remove   GG59
*
         MVI   MSGTXT,C' '         Initialize in case of minor    PJ01
         MVC   MSGTXT+1(L'MSGTXT-1),MSGTXT clear out message txt  PJ01
         L     R5,CTXTTXPJ         Point to message attributes
         USING CTXTATTR,R5         Establish Addressability
         MVC   MSGLEN,CTXTTLEN     Save 1st line message          PJ01
         MVC   SEQNO,CTXTSEQN      Save Sequence number           PJ01
         EJECT
**********************************************************************
*        DETERMINE CASE TO PROCESS                                   *
**********************************************************************
CASE     LA    R2,CTXTTMSG         Load start of message id to R2
         TM    CTXTTFB1,CTXTTFWR   Is this a WTOR
         BNO   MPFXT103            No go do lengtn for WTO
         LA    R3,CTXTTMSG+11      Add 11 to length for WTOR
         B     MPFXT105            Go get length
         SPACE ,
MPFXT103 DS    0H
         LA    R3,CTXTTMSG+8       Add 8 to length of msgid for WTO
MPFXT105 DS    0H
         CLI   0(R2),X'40'         Message id is delimited by blank
         BE    MPFXT110            Yup
         CR    R2,R3               Are we there yet
         BE    MPFXT110            Yup reached the max length
         LA    R2,1(,R2)           Add 1 to R2
         B     MPFXT105            Check next character
         SPACE ,
MPFXT110 DS    0H
         LA    R3,CTXTTMSG         @ Start of msgid
         MVC   MSGTXT(126),CTXTTMSG  Move message to save area
         LA    R4,MEMN             Load address of MEMN
         MVI   MEMN,C' '                       Initial
         MVC   MEMN+1(L'MEMN-1),MEMN           Blank out
         SR    R2,R3               Get length
         BCTR  R2,0                Decrement for executed move
         EX    R2,MVMBR2           Move member name to message    TL01
         TM    CTXTSFB2,CTXTSAUT   Automation specified           GS50
         BZ    MOVEMEM             No move in member name         GS50
         CLI   CTXTAUTT,0          Automation Empty             GSPJ50
         BE    MOVEMEM             Yes move in member name      GSPJ50
         CLC   CTXTAUTT,=CL8'SINGLE' Single line processing only  GS50
         BE    MOVEMEM             Yes move in member name        GS50
         CLC   CTXTAUTT,=CL8'NODISPLY' No /* MPFXTALL */ request  GS57
         BE    MOVEMEM             Yes move in member name        GS57
         MVC   MEMN,CTXTAUTT       Move member name from AUTO     GS50
         B     CKMEMMES            Skip move member               GS50
         SPACE ,
MOVEMEM  DS    0H
         EX    R2,MVMBR            Move member name to MEMN
CKMEMMES DS    0H
         CLC   MEMN(4),=C'MPF0'    Check for MPF messages
         BE    NOMPFMS             Yup go tell em that's a no no
         TM    CTXTTFB1,CTXTTFMJ   Is this a multi line message   PJ01
         BZ    GETNAMET            No skip minor code             PJ01
         TM    CTXTTFB1,CTXTTFME   IS THIS THE LAST LINE          PJ01
         BO    GETNAMET            YES-BR                         PJ01
         TM    CTXTSFB2,CTXTSAUT   Automation specified           PJGS1
         BZ    TSTMINOR            NO-BR                          PJGS1
         CLC   CTXTAUTT,=CL8'SINGLE' Single line processing only  PJGS1
         BE    GETNAMET            YES-BR                         PJGS1
TSTMINOR DS    0H                                                 PJ01
         GETMAIN RU,LV=MINORSZ,SP=241,LOC=ANY                     PJ01
         LTR   R15,R15             minor line work area obtained  PJ01
         BZ    AFTERGM1            yes-branch                     PJ01
         WTO   'MPF031E - GETMAIN ERROR',DESC=(2),ROUTCDE=(1)     PJ01
         WTO   'MPF008E - Notify MPFXTALL Support',               PJ01 X
               DESC=(2),ROUTCDE=(1)                               PJ01
         B     GETNAMET                                           PJ01
AFTERGM1 DS    0H                                                 PJ01
         USING MINORWRK,R1         Minor lines param area base    PJ01
         XC    MINCHAIN,MINCHAIN   Clear chain Pointer            PJ01
         MVC   MINSEQNO,CTXTSEQN   Save Sequence number           PJ01
         ST    R13,MINSAVE         Save work area address         PJ01
         ST    R1,MINORWAD         Save work address              PJ01
         L     R15,CTXTIWKP        This exits work area           PJ01
CHAINMIN EQU   *                                                  PJ01
         SR    R14,R14             Set operand 1 to zero          PJ01
         CS    R14,R1,0(R15)       If Chain zero, Add new work    PJ01
         BE    ASKMINOR            Queued ok                      PJ01
         LR    R15,R14             No, Get Addr of next Element   PJ01
         B     CHAINMIN            Run up the chain               PJ01
         DROP  R1                  Release Work area base         PJ01
ASKMINOR DS    0H                                                 PJ01
         OI    CTXTRFB1,CTXTRPML   Ask for minor message          PJ01
         B     RETURN              Bye                            PJ01
         SPACE ,                                                  PJ01
MINOR    DS    0H                                                 PJ01
         NI    CTXTRFB1,255-CTXTRPML Reset Minor request          PJ01
         L     R1,CTXTIWKP         This exits work area           PJ01
NXTWORK  EQU   *                                                  PJ01
         L     R1,0(,R1)           Next Minor work area           PJ01
         LTR   R1,R1               Any address of Work Area       PJ01
         BNZ   MINOR1              Yes OK                         PJ01
         WTO   'MPF032E - MINOR Chain Error',                     PJ01 X
               DESC=(2),ROUTCDE=(1)                               PJ01
         B     MPF008R             Return                         PJ01
MINOR1   EQU   *                                                  PJ01
         USING MINORWRK,R1         Minor lines param area base    PJ01
         CLC   MINSEQNO,CTXTSEQN   Correct work area found        PJ01
         BNE   NXTWORK             No-rescan                      PJ01
         L     R13,MINSAVE         Reset work area address        PJ01
         DROP  R1                  Release Work area base         PJ01
         TM    CTXTTFB1,CTXTTFMD   IS THIS a data line            PJ01
         BZ    NOTDATA             NO-BR                          PJ01
         LA    R3,MSGTXT           @ Start of messageid           PJ01
         AH    R3,MSGLEN           Bypass 1st line message        PJ01
         LH    R2,CTXTTLEN         Minor line length              PJ01
         LA    R15,1(,R2)          MINOR LINE LENGTH+1            PJ01
         AH    R15,MSGLEN          PREVIOUS MSG LEN               PJ01
         CH    R15,=Y(L'MSGTXT)    OVER MSG SIZE                  PJ01
         BNH   SIZEOK              YES-BR                         PJ01
         LH    R15,=Y(L'MSGTXT)    GET MAX SIZE                   PJ01
         LR    R2,R15              FOR THIS LENGTH                PJ01
         SH    R2,MSGLEN           MAX ALLOWED                    PJ01
         BNP   NOTDATA             NONE FOR THIS LINE             PJ01
SIZEOK   DS    0H                                                 PJ01
         MVI   0(R3),X'40'         Set blank between lines        PJ01
         BCTR  R2,0                Allow for MVC                  PJ01
         EX    R2,SAVEMINR         Save minor data                PJ01
         STH   R15,MSGLEN                  length                 PJ01
NOTDATA  DS    0H                                                 PJ01
         TM    CTXTTFB1,CTXTTFME   IS THIS THE LAST LINE          PJ01
         BZ    ASKMINOR            NO-BR                          PJ01
ENDMINOR EQU   *                                                  PJ01
         L     R3,MINORWAD         Minor work area                PJ01
         USING MINORWRK,R3         Minor lines param area base    PJ01
         L     R1,CTXTIWKP         This exits work area           PJ01
NXTWORK1 EQU   *                                                  PJ01
         LR    R15,R3              For CS LOOP                    PJ01
         L     R14,MINCHAIN        Next chain pointer             PJ01
         CS    R15,R14,0(R1)       Correct Chain entry removed.   PJ01
         BE    ENDMINR1            Yes OK                         PJ01
         LR    R1,R15              Next Minor work area           PJ01
         B     NXTWORK1            Do next entry                  PJ01
ENDMINR1 EQU   *                                                  PJ01
         DROP  R3                  Release base                   PJ01
         LA    R1,MINORSZ          Work area size                 PJ01
         FREEMAIN RU,LV=(R1),A=(R3),SP=241 Freeup minor work area PJ01
**********************************************************************
*        GET NAME TOKEN ROUTINE                                      *
**********************************************************************
GETNAMET DS    0H
         LA    R3,TOKEN
         LA    R2,RETCODE
         CALL  IEANTRT,(SYSLVL,NAME,(R3),(R2)),MF=(E,RENTCALL)
         IF    (RETCODE,EQ,=A(IEANT_NOT_FOUND))
         WTO   'MPF015E - Name/Token not found error',                 X
               DESC=(2),ROUTCDE=(1)
         WTO   'MPF021E - Notify MPFXTALL Support or S MPFLOAD',       X
               DESC=(2),ROUTCDE=(1)
         B     FREEMEM       Return
         ENDIF
**********************************************************************
*        FIND MESSAGE ID                                             *
**********************************************************************
         L     R4,ECSA_ADD         Store table address in R4
         L     R6,ECSA_ADD         Store table address in R6
         L     R8,ECSA_LEN         Store length of table in R8
         ALR   R6,R8               Add length to R6 for end of table
         ST    R6,ENDTABLE         Store end of table address
**********************************************************************
GETNXMES DS    0H
         CL    R4,ENDTABLE         End of data
         BNL   MSNOTFND            Yup bye
         CLC   0(L'MEMN,R4),MEMN   Message id ?
         BE    MPFXT200            Yup go get commands
         LA    R4,4095(,R4)        Bump table
         LA    R4,4095(,R4)        Bump table
         LA    R4,2(,R4)           Add 2 more to next record
         B     GETNXMES            Get next message
         SPACE ,
**********************************************************************
MPFXT200 DS    0H
         LA    R6,4092(,R4)        Point R6 at end of usable record
         LA    R6,4092(,R6)        Point R6 at end of usable record
         ST    R6,ENDTABLE         Store end of table address
         LA    R4,8(R4)            Point R4 to first command
         SP    WORDNP,WORDNP       Clear out word number
         SP    GOCNTR,GOCNTR       Clear out Go Counter
         MVI   IFSYSID,X'40'       Blank out SYSID check
         MVI   IFPARSE,X'40'       Blank out PARSE check
         MVI   IFWORD,X'40'        Blank out WORD check
         MVI   IFMSGID,X'40'       Blank out MSGID check
         MVI   IFMSGIDN,X'40'      Blank out MSGID check          GS56
         MVI   MSGIDNE,X'40'       Blank out MSGID check          GS56
         MVI   IFMSGPL,X'40'       Blank out MSGID PLUS check
         MVI   IFMSGPLN,X'40'      Blank out MSGID PLUS check     GS56
         MVI   MSGPLNE,X'40'       Blank out MSGID PLUS check     GS56
         MVI   IFSWEQ,X'40'        Blank out IFSWEQ check
         MVI   IFSWNE,X'40'        Blank out IFSWNE check
         MVI   IFSWON,X'40'        Blank out IFSWON check
         MVI   IFSWOFF,X'40'       Blank out IFSWOFF check
         MVI   IFASTYP,X'40'       Blank out IFASTYP check        GG58
         MVI   GETCK,X'40'         Blank out GETWORD check
         MVI   GETID,X'40'         Blank out GET REPLY ID check   GS54
**********************************************************************
MPFXT250 DS    0H
         CLI   0(R4),X'FF'         End of commands
         BE    FREEMEM             Yup bye bye
         L     R6,ENDTABLE         End of table address to R6
         CR    R4,R6               Unexpected end of record
         BNL   LOADERR             Yup say and bye
         MVC   CMDTEXT,0(R4)       Move command to CMDTEXT
         MVC   GETCK2,GETCK        Copy GETWORD check             GS54
         MVC   GETID2,GETID        Copy GET REPLY ID check        GS54
         BAS   R9,CHECKTYP         Go check type of command
         LA    R4,80(,R4)          Bump up for next command
         B     MPFXT250            Get next record
         SPACE ,
**********************************************************************
*        CHECK TYPE - COMMAND, WTO/R, HIGHLIGHT, SYSID, PARSE, GET...*
**********************************************************************
CHECKTYP DS    0H
         CLC   CMDTEXT(3),=C'IF '         Is it an if statment
         BE    IFLOGIC                    Yup go to if logic
         CLC   CMDTEXT(9),=C'GET WORD '   Is it a get statment
         BE    GETWORD                    Yup go to get word
         CLC   CMDTEXT(11),=C'GET REPLYID' Is it a get reply id   GS54
         BE    GETREPLY                   Yup go to get reply     GS54
         CLI   GETID2,X'40'               Get reply id check      GS54
         BH    CKPGETID                   Yup getid SW is Y or N  GS54
         CLI   GETCK2,X'40'               Get check
         BH    CKPGET                     Yup get SW is Y or N
GOCHECK  DS    0H
         CP    GOCNTR,=P'0'               Is GOCNTR eq 0          GS52
         BE    CONT_TYP                   Yes continue type check GS52
         BL    ERRORIFL                   Muck go IFLOGIC error   GS52
         CVB   R3,GOCNTR                  Convert to R3           GS52
         LA    R2,GOTABLE                 Point to GOTABLE        GS52
         L     R3,0(R3,R2)                Load Address of GO      GS52
         BR    R3                         Go to last address GO   GS52
         SPACE ,
**********************************************************************
CKSYSID  DS    0H
         CLC   CMDTEXT(7),=C'ENDIF  '     End of if in CMDS
         BNE   CKNOSYS                    No continue
         MVI   IFSYSID,X'40'              Blank out SYSID check
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS52
         BR    R9                         Return
         SPACE ,
CKNOSYS  DS    0H
         CLI   IFSYSID,C'N'               Is SYSID EQ N
         BER   R9                         Yup return
         B     CONT_TYP                   Continue type check
         SPACE ,
**********************************************************************
CKASTYP  DS    0H                                                  GG58
         CLC   CMDTEXT(12),=C'ENDIF ASTYPE'  End of if in CMDS     GG58
         BNE   CKNASTYP                   No continue              GG58
         MVI   IFASTYP,X'40'              Blank out ASTYP check    GG58
         SP    GOCNTR,=P'4'               Reduce GOCNTR            GG58
         BR    R9                         Return                   GG58
         SPACE ,                                                   GG58
CKNASTYP DS    0H                                                  GG58
         CLI   IFASTYP,C'N'               Is SYSID EQ N            GG58
         BER   R9                         Yup return               GG58
         B     CONT_TYP                   Continue type check      GG58
**********************************************************************
CKPGET   DS    0H
         CLC   CMDTEXT(8),=C'ENDGET  '    End of get in parse CMDS
         BNE   CKNOGET                    No continue type check
         MVI   GETCK,X'40'                Blank out get check
         BR    R9                         Return
         SPACE ,
CKNOGET  DS    0H
         CLI   GETCK,C'N'                 Is get check EQ N
         BER   R9                         Return
         B     GETRPLAC                   Go replace % with get word
         SPACE ,
**********************************************************************
CKPGETID DS    0H                                                 GS54
         CLC   CMDTEXT(9),=C'ENDGET ID'   End of get id           GS54
         BNE   CKNOGID                    No continue type check  GS54
         MVI   GETID,X'40'                Blank out get check     GS54
         BR    R9                         Return                  GS54
         SPACE ,                                                  GS54
CKNOGID  DS    0H                                                 GS54
         CLI   GETID,C'N'                 Is get check id EQ N    GS54
         BER   R9                         Return                  GS54
         B     GETRPLAC              Go replace @ with REPLY ID   GS54
         SPACE ,                                                  GS54
**********************************************************************
CKPARSE  DS    0H
         CLC   CMDTEXT(7),=C'ENDIF  '     End of if in CMDS
         BNE   CKNOPAR                    No continue type check
         MVI   IFPARSE,X'40'              Blank out IFPARSE check
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS52
         MVI   CMDTABLE,C' '                       Initial
         MVC   CMDTABLE+1(L'CMDTABLE-1),CMDTABLE   Blank out
         BR    R9                         Return
         SPACE ,
CKNOPAR  DS    0H
         CLI   IFPARSE,C'N'               Is IFPARSE EQ N
         BER   R9                         Yup return
         B     CONT_TYP                   Continue type check
         SPACE ,
**********************************************************************
CKPMSGPN DS    0H                                                 GS56
         CLC   CMDTEXT(7),=C'ENDIF  '     End of if in CMDS       GS56
         BNE   CKNMSGPN                   No continue type check  GS56
         MVI   IFMSGPLN,X'40'            Blank out IFMSGPLN check GS56
         MVI   MSGPLNE,X'40'              Blank out MSGPLNE check GS56
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS56
         BR    R9                         Return                  GS56
         SPACE ,                                                  GS56
CKNMSGPN DS    0H                                                 GS56
         CLI   IFMSGPLN,C'N'              If IFMSGPL EQ N         GS56
         BER   R9                         Yup return              GS56
         B     CONT_TYP                   Continue type check     GS56
         SPACE ,                                                  GS56
**********************************************************************
CKPMSGPL DS    0H                                                 GS51
         CLC   CMDTEXT(7),=C'ENDIF  '     End of if in CMDS       GS51
         BNE   CKNOMSGP                   No continue type check  GS51
         MVI   IFMSGPL,X'40'              Blank out IFMSGPL check GS51
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS52
         BR    R9                         Return                  GS51
         SPACE ,                                                  GS51
CKNOMSGP DS    0H                                                 GS51
         CLI   IFMSGPL,C'N'               If IFMSGPL EQ N         GS51
         BER   R9                         Yup return              GS51
         B     CONT_TYP                   Continue type check     GS51
         SPACE ,                                                  GS51
**********************************************************************
CKMSGIDN DS    0H                                                 GS56
         CLC   CMDTEXT(7),=C'ENDIF  '     End of if in CMDS       GS56
         BNE   CKNMSGIN                   No continue type check  GS56
         MVI   IFMSGIDN,X'40'            Blank out IFMSGIDN check GS56
         MVI   MSGIDNE,X'40'              Blank out MSGIDNE check GS56
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS56
         BR    R9                         Return                  GS56
         SPACE ,                                                  GS56
CKNMSGIN DS    0H                                                 GS56
         CLI   IFMSGIDN,C'N'              If IFMSGID NE N         GS56
         BER   R9                         Yup return              GS56
         B     CONT_TYP                   Continue type check     GS56
         SPACE ,                                                  GS56
**********************************************************************
CKPMSGID DS    0H
         CLC   CMDTEXT(7),=C'ENDIF  '     End of if in CMDS
         BNE   CKNOMSGI                   No continue type check
         MVI   IFMSGID,X'40'              Blank out IFMSGID check
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS52
         BR    R9                         Return
         SPACE ,
CKNOMSGI DS    0H
         CLI   IFMSGID,C'N'               If IFMSGID EQ N
         BER   R9                         Yup return
         B     CONT_TYP                   Continue type check
         SPACE ,
**********************************************************************
CKPSWEQ  DS    0H
         CLC   CMDTEXT(15),=C'ENDIF SWITCH EQ'   End of if for SW EQ
         BNE   CKNOSWEQ                   No continue type check
         MVI   IFSWEQ,X'40'               Blank out IFSWEQ check
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS52
         BR    R9                         Return
         SPACE ,
CKNOSWEQ DS    0H
         CLI   IFSWEQ,C'N'                If IFSWEQ EQ N
         BER   R9                         Yup return
         B     CONT_TYP                   Continue type check
         SPACE ,
**********************************************************************
CKPSWNE  DS    0H
         CLC   CMDTEXT(15),=C'ENDIF SWITCH NE'   End of if for SW NE
         BNE   CKNOSWNE                   No continue type check
         MVI   IFSWNE,X'40'               Blank out IFSWNE check
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS52
         BR    R9                         Return
         SPACE ,
CKNOSWNE DS    0H
         CLI   IFSWNE,C'N'                If IFSWNE EQ N
         BER   R9                         Yup return
         B     CONT_TYP                   Continue type check
         SPACE ,
**********************************************************************
CKPSWON  DS    0H
         CLC   CMDTEXT(15),=C'ENDIF SWITCH ON'   End of if for SW ON
         BNE   CKNOSWON                   No continue type check
         MVI   IFSWON,X'40'               Blank out IFSWON check
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS52
         BR    R9                         Return
         SPACE ,
CKNOSWON DS    0H
         CLI   IFSWON,C'N'                If IFSWON EQ N
         BER   R9                         Yup return
         B     CONT_TYP                   Continue type check
         SPACE ,
**********************************************************************
CKPSWOFF DS    0H
         CLC   CMDTEXT(16),=C'ENDIF SWITCH OFF'   End of if for SW OFF
         BNE   CKNOSWOF                   No continue type check
         MVI   IFSWOFF,X'40'              Blank out IFSWOFF check
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS52
         BR    R9                         Return
         SPACE ,
CKNOSWOF DS    0H
         CLI   IFSWOFF,C'N'               If IFSWOFF EQ N
         BER   R9                         Yup return
         B     CONT_TYP                   Continue type check
         SPACE ,
**********************************************************************
CKPWORD  DS    0H
         CLC   CMDTEXT(7),=C'ENDIF  '     End of if in CMDS
         BNE   CKNOWRD                    No continue type check
         MVI   IFWORD,X'40'               Blank out word check
         SP    GOCNTR,=P'4'               Reduce GOCNTR           GS52
         BR    R9                         Return
         SPACE ,
CKNOWRD  DS    0H
         CLI   IFWORD,C'N'                If word EQ N
         BER   R9                         Yup return
**********************************************************************
CONT_TYP DS    0H
         CLC   CMDTEXT(9),=C'TSOROUTE '   Is it a TSOROUTE cmd    GG58
         BE    TSOROUTE                   Yup go do it            GG58
         CLC   CMDTEXT(9),=C'REPLY NN,'   Is it a WTOR command
         BE    MPFWTOR                    Yup go reply to WTOR
         CLC   CMDTEXT(11),=C'REPLY NNNN,' Is it a WTOR command   DT57
         BE    MPFWTORX                   Yup go reply to WTOR    DT57
         CLC   CMDTEXT(10),=C'HIGHLIGHT ' Highlight message
         BE    MPFHIGHL                   Yup go do it
         CLC   CMDTEXT(8),=C'DISPLAY '   Change color/highlighting GS58
         BE    DISPLAY                    Yup go do it
         CLC   CMDTEXT(4),=C'WTO '        WTO message
         BE    WTOROUT                    Yup go do it
         CLC   CMDTEXT(5),=C'WTOH '       WTO highlight message
         BE    WTOHIGH                    Yup go do it
         CLC   CMDTEXT(10),=C'PUTSWITCH ' Put token from switch   GS55
         BE    PUTSWTCH                   Yup go do it            GS55
         CLC   CMDTEXT(10),=C'SETSWITCH ' Set switch
         BE    SETSWTCH                   Yup go do it
         CLC   CMDTEXT(10),=C'DELSWITCH ' Delete switch
         BE    DELSWTCH                   Yup go do it
         CLC   CMDTEXT(10),=C'ALTSWITCH ' Alter switch
         BE    ALTSWTCH                   Yup go do it
         CLC   CMDTEXT(8),=C'SETAUTO '    Set AUTO on             GS53
         BE    SETAUTO                    Yup go do it            GS53
         CLC   CMDTEXT(8),=C'SETAMRF '    Set AMRF on             GS53
         BE    SETAMRF                    Yup go do it            GS53
         CLC   CMDTEXT(9),=C'SUPPRESS '   Suppress message
         BE    SUPPRESS                   Yup go do it
         CLC   CMDTEXT(9),=C'NOJOBLOG '   Suppress from joblog    DT01
         BE    NOJOBLOG                   Yup go do it            DT01
         CLC   CMDTEXT(9),=C'NOSYSLOG '   Suppress from syslog    DT01
         BE    NOSYSLOG                   Yup go do it            DT01
         CLC   CMDTEXT(9),=C'MPFSUPNO '   MPF SUP(NO)             DT02
         BE    MPFSUPNO                   Yup go do it            DT02
         CLC   CMDTEXT(5),=C'ENDIF'       ENDIF coding error      GS52
         BE    ERROREND                   Yup, go tell em         GS52
         CLC   CMDTEXT(6),=C'ENDGET'      ENDIF coding error      GS52
         BE    ERRORGET                   Yup, go tell em         GS52
         XR    R0,R0                      Clear for MGCR/SVC 34
         MGCR  CMDHDR              Point to command and issue command
         CLC   CTXTAUTT,=CL8'NODISPLY' No /* MPFXTALL */ request  GS57
         BE    AFTDISP1            yes skip display               GS57
         WTO   MF=(E,WTOM),ROUTCDE=11,DESC=7
AFTDISP1 DS    0H
         BR    R9                         Return
         SPACE ,
**********************************************************************
*        IF LOGIC                                                    *
**********************************************************************
IFLOGIC  DS    0H
         CLC   CMDTEXT+3(9),=C'SYSID EQ '    SYSID check
         BE    SYSIDCK                       Yup go SYSID check
         CLC   CMDTEXT+3(10),=C'ASTYPE EQ '  ASTYPE check         GG58
         BE    ASTYPCHK                      Yup go check ASTYPE  GG58
         CLC   CMDTEXT+3(7),=C'ALL EQ '      Parse check all
         BE    PARSEROU                      Yup go parse routine
         CLC   CMDTEXT+3(5),=C'WORD '        Parse check work
         BE    WORDPARS                      Yup go parse word
         CLC   CMDTEXT+3(9),=C'MSGID EQ '    Parse check MSGID
         BE    MSGIDROU                      Yup go parse word
         CLC   CMDTEXT+3(9),=C'MSGID NE '    Parse check MSGID NE GS56
         BE    MSGIDRNE                      Yup go parse word    GS56
         CLC   CMDTEXT+3(6),=C'MSGID+'    Parse check MSGID PLUS  GS51
         BE    MSGIDPLU                      Yup go parse word    GS51
         CLC   CMDTEXT+3(6),=C'MSGNE+'    Parse check MSGNE PLUS  GS56
         BE    MSGIDPLN                      Yup go parse word    GS56
         CLC   CMDTEXT+3(9),=C'SWITCH ON'    Is the switch ON
         BE    SWTCHON                       Yup go switch routine
         CLC   CMDTEXT+3(9),=C'SWITCH EQ'    Is the switch EQ
         BE    SWTCHEQ                       Yup go switch routine
         CLC   CMDTEXT+3(9),=C'SWITCH NE'    Is the switch NE
         BE    SWTCHNE                       Yup go switch routine
         CLC   CMDTEXT+3(10),=C'SWITCH OFF'  Is the switch OFF
         BE    SWTCHOFF                      Yup go switch routine
         BR    R9                            Return
         SPACE ,
**********************************************************************
*        CHANGE HIGHLIGHTING                                         *
**********************************************************************
DISPLAY  DS    0H                                                 GS58
         CLC   CMDTEXT+8(4),=C'BLUE'        make it blue ?        GS58
         BE    SETBLUE                      call blue routine     GS58
         CLC   CMDTEXT+8(4),=C'PINK'        make it pink ?        GS58
         BE    SETPINK                      call pink routine     GS58
         CLC   CMDTEXT+8(3),=C'RED'         make it red ?         GS58
         BE    SETRED                       call red routine      GS58
         CLC   CMDTEXT+8(5),=C'GREEN'       make it green ?       GS58
         BE    SETGREE                      call green routine    GS58
         CLC   CMDTEXT+8(9),=C'TURQUOISE'   make it turquoise     GS58
         BE    SETTURQ                    call turquoise routine  GS58
         CLC   CMDTEXT+8(6),=C'YELLOW'      make it yellow ?      GS58
         BE    SETYELO                      call yellow routine   GS58
         CLC   CMDTEXT+8(5),=C'WHITE'       make it white ?       GS58
         BE    SETWHIT                      call white routine    GS58
         CLC   CMDTEXT+8(5),=C'BLINK'       make it blink ?       GS58
         BE    SETBLNK                      call blink routine    GS58
         CLC   CMDTEXT+8(7),=C'REVERSE' make it reverse video ?   GS58
         BE    SETREVD                 call reverse video routine GS58
         CLC   CMDTEXT+8(9),=C'UNDERLINE'   make it underlined ?  GS58
         BE    SETUNDR                   call underlined routine  GS58
         BR    R9                            Return               GS58
**********************************************************************
*        CHANGE HIGHLIGHTING                                         *
**********************************************************************
SETBLNK  DS    0H                                                 GS58
         OI    CTXTERF1,CTXTEMHI        Request highlight change  GS58
         OI    CTXTERF1,CTXTEMIN        Request intensity change  GS58
         OI    CTXTINTN,CTXTIHIG        Set to high intensity     GS58
         OI    CTXTHILI,CTXTBLNK        Set to blinking           GS58
         BR    R9                       Return                    GS58
SETREVD  DS    0H                                                 GS58
         OI    CTXTERF1,CTXTEMHI        Request highlight change  GS58
         OI    CTXTERF1,CTXTEMIN        Request intensity change  GS58
         OI    CTXTINTN,CTXTIHIG        Set to high intensity     GS58
         OI    CTXTHILI,CTXTREVD        Set to reverse video      GS58
         BR    R9                       Return                    GS58
SETUNDR  DS    0H                                                 GS58
         OI    CTXTERF1,CTXTEMHI        Request highlight change  GS58
         OI    CTXTERF1,CTXTEMIN        Request intensity change  GS58
         OI    CTXTINTN,CTXTIHIG        Set to high intensity     GS58
         OI    CTXTHILI,CTXTUNDR        Set to underline          GS58
         BR    R9                       Return                    GS58
**********************************************************************
*        CHANGE COLORS                                               *
**********************************************************************
SETBLUE  DS    0H                                                 GS58
         OI    CTXTERF1,CTXTEMCO        Request color change      GS58
         XC    CTXTCOLR(1),CTXTCOLR     Clear out current codes   GS58
         OI    CTXTCOLR,CTXTBLUE        Set to blue               GS58
         BR    R9                       Return                    GS58
SETRED   DS    0H                                                 GS58
         OI    CTXTERF1,CTXTEMCO        Request color change      GS58
         XC    CTXTCOLR(1),CTXTCOLR     Clear out current codes   GS58
         OI    CTXTCOLR,CTXTRED         Set to red                GS58
         BR    R9                       Return                    GS58
SETPINK  DS    0H                                                 GS58
         OI    CTXTERF1,CTXTEMCO        Request color change      GS58
         XC    CTXTCOLR(1),CTXTCOLR     Clear out current codes   GS58
         OI    CTXTCOLR,CTXTPINK        Set to pink               GS58
         BR    R9                       Return                    GS58
SETGREE  DS    0H                                                 GS58
         OI    CTXTERF1,CTXTEMCO        Request color change      GS58
         XC    CTXTCOLR(1),CTXTCOLR     Clear out current codes   GS58
         OI    CTXTCOLR,CTXTGREE        Set to green              GS58
         BR    R9                       Return                    GS58
SETTURQ  DS    0H                                                 GS58
         OI    CTXTERF1,CTXTEMCO        Request color change      GS58
         XC    CTXTCOLR(1),CTXTCOLR     Clear out current codes   GS58
         OI    CTXTCOLR,CTXTTURQ        Set to turquoise          GS58
         BR    R9                       Return                    GS58
SETYELO  DS    0H                                                 GS58
         OI    CTXTERF1,CTXTEMCO        Request color change      GS58
         XC    CTXTCOLR(1),CTXTCOLR     Clear out current codes   GS58
         OI    CTXTCOLR,CTXTYELO        Set to yellow             GS58
         BR    R9                       Return                    GS58
SETWHIT  DS    0H                                                 GS58
         OI    CTXTERF1,CTXTEMCO        Request color change      GS58
         XC    CTXTCOLR(1),CTXTCOLR     Clear out current codes   GS58
         OI    CTXTCOLR,CTXTWHIT        Set to white              GS58
         BR    R9                       Return                    GS58
**********************************************************************
*        HIGHLIGHT MESSAGE                                           *
**********************************************************************
MPFHIGHL DS    0H
         OI    CTXTRFB1,CTXTRCDC   Request to change the descodes
         L     R3,CTXTDCP
         USING CTXTDESC,R3
         OI    CTXTRFB1,CTXTRCDC   Request to change the descodes
         XC    CTXTDESC,CTXTDESC   Clear out the descriptor codes
         OI    CTXTDC1,CTXTDC02    Change to descriptor code 2
         DROP  R3
         BR    R9                  RETURN
         SPACE ,
**********************************************************************
*        SUPPRESS MESSAGE                                            *
**********************************************************************
SUPPRESS DS    0H
         TM    CTXTTFB1,CTXTTFWR   Is this a WTOR
         BO    SUPPGOBK            WTOR don't want a suppress those
         OI    CTXTRFB2,CTXTRDTM   Suppress from hardcopy syslog
         OI    CTXTERF3,CTXTESJL   Suppress from joblog
SUPPGOBK DS    0H
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        SUPPRESS JOBLOG                                             *
**********************************************************************
NOJOBLOG DS    0H                                                 DT01
         TM    CTXTTFB1,CTXTTFWR   Is this a WTOR                 DT01
         BO    NOJOGOBK          WTOR don't want a suppress those DT01
         OI    CTXTERF3,CTXTESJL   Suppress from joblog           DT01
NOJOGOBK DS    0H                                                 DT01
         BR    R9                  Return                         DT01
         SPACE ,                                                  DT01
**********************************************************************
*        SUPPRESS SYSLOG                                             *
**********************************************************************
NOSYSLOG DS    0H                                                 DT01
         TM    CTXTTFB1,CTXTTFWR   Is this a WTOR                 DT01
         BO    NOSYSOBK          WTOR don't want a suppress those DT01
         OI    CTXTRFB2,CTXTRDTM   Suppress from hardcopy syslog  DT01
NOSYSOBK DS    0H                                                 DT01
         BR    R9                  Return                         DT01
         SPACE ,
**********************************************************************
*        MPF SUP(NO)                                                 *
**********************************************************************
MPFSUPNO DS    0H                                                 DT02
         TM    CTXTTFB1,CTXTTFWR   Is this a WTOR                 DT02
         BO    NOMPFSUP          WTOR don't want change these     DT02
         OI    CTXTRFB2,CTXTROMS   set MPF SUP(NO)                DT02
NOMPFSUP DS    0H                                                 DT02
         BR    R9                  Return                         DT02
         SPACE ,
**********************************************************************
*        SET AUTO ON                                                 *
**********************************************************************
SETAUTO  DS    0H                                                 DT53
         OI    CTXTRFB3,CTXTRAYS   Set automation on              DT53
         BR    R9                  Return                         DT53
         SPACE ,
**********************************************************************
*        SET AMRF ON                                                 *
**********************************************************************
SETAMRF  DS    0H                                                 GS53
         OI    CTXTSFB2,CTXTSRET   Set AMRF on                    GS53
         BR    R9                  Return                         GS53
         SPACE ,
**********************************************************************
*        MOVE TO GOTABLE                                             *
**********************************************************************
MOVEGO   DS    0H                                                 GS52
         AP    GOCNTR,=P'4'        Add 4 to GOCNTR                GS52
         CVB   R3,GOCNTR           Convert to R3                  GS52
         LA    R7,GOTABLE          Load address GOTABLE           GS52
         ST    R8,0(R3,R7)         STORE ADDRESS TO GOTABLE       GS52
**********************************************************************
*        CHECK FOR OUTER IF'S EQ NO                                  *
**********************************************************************
CKOUTER  DS    0H                                                 GS52
         CLI   IFSYSID,C'N'        Is SYSID eq N                  GS52
         BER   R6                  Yes set it and forget it       GS52
         CLI   IFASTYP,C'N'        Is ASTYP eq N                  GG58
         BER   R6                  Yes set it and forget it       GG58
         CLI   IFPARSE,C'N'        Is IFPARSE eq N                GS52
         BER   R6                  Yes set it and forget it       GS52
         CLI   IFWORD,C'N'         Is IFWORD eq N                 GS52
         BER   R6                  Yes set it and forget it       GS52
         CLI   IFSWEQ,C'N'         Is IFSWEQ eq N                 GS52
         BER   R6                  Yes set it and forget it       GS52
         CLI   IFSWNE,C'N'         Is IFSWNE eq N                 GS52
         BER   R6                  Yes set it and forget it       GS52
         CLI   IFSWON,C'N'         Is IFSWON eq N                 GS52
         BER   R6                  Yes set it and forget it       GS52
         CLI   IFSWOFF,C'N'        Is IFSWOFF eq N                GS52
         BER   R6                  Yes set it and forget it       GS52
         CLI   IFMSGID,C'N'        Is IFMSGID eq N                GS52
         BER   R6                  Yes set it and forget it       GS52
         CLI   IFMSGIDN,C'N'       Is IFMSGID NE eq N             GS56
         BER   R6                  Yes set it and forget it       GS56
         CLI   IFMSGPL,C'N'        Is IFMSGPL eq N                GS52
         BER   R6                  Yes set it and forget it       GS52
         CLI   IFMSGPLN,C'N'       Is IFMSGPL eq N                GS56
         BER   R6                  Yes set it and forget it       GS56
         BR    R2                  Start that routine             GS52
         SPACE ,
**********************************************************************
*        IF ASTYPE LOGIC                                         GG58*
**********************************************************************
ASTYPCHK DS    0H                                                  GG58
         LA    R8,CKASTYP                 Load address CKASTYP     GG58
         LA    R2,ASTYP                   Load address ASTYP       GG58
         LA    R6,ASTYPNO                 Load address ASTYPNO     GG58
         B     MOVEGO                     Go check for no's        GG58
*                                         and store GOTABLE addr   GG58
ASTYP    DS    0H                         Check if ASTYP match     GG58
         L     R3,PSAAOLD-PSA(,0)         GET @ ASCB               GG58
         L     R1,ASCBTSB-ASCB(,R3)       GET @ TSB                GG58
         L     R3,ASCBJBNI-ASCB(,R3)      GET @ INITIATED JOB NAME GG58
         MVI   IFASTYP,C'Y'               SET ASTYPE SATISFIED ON  GG58
         CLI   CMDTEXT+13,C'T'            Q. IF ASTYPE EQ T        GG58
         BE    CHKTSO                     A. YES - BRANCH          GG58
         CLI   CMDTEXT+13,C'S'            Q. IF ASTYPE EQ S        GG58
         BE    CHKSTC                     A. YES - BRANCH          GG58
         CLI   CMDTEXT+13,C'J'            Q. IF ASTYPE EQ J        GG58
         BE    CHKJOB                     A. YES - BRANCH          GG58
         B     NOTASTYP                   Value invaid             GG58
CHKTSO   DS    0H                         IF ASTYPE EQ T SPECIFIED GG58
         LTR   R1,R1                      Q. IS JOB A TSU          GG58
         BNZR  R9                         A. YES - RETURN SATISFIEDGG58
         MVI   IFASTYP,C'N'               SET ASTYPE SATISFIED OFF GG58
         BR    R9                         RETURN NOT SATISFIED     GG58
CHKJOB   DS    0H                         IF ASTYPE EQ J SPECIFIED GG58
         LTR   R3,R3                      Q. IS JOB BATCH          GG58
         BNZR  R9                         A. YES - RETURN SATISFIEDGG58
         MVI   IFASTYP,C'N'               SET ASTYPE SATISFIED OFF GG58
         BR    R9                         RETURN NOT SATISFIED     GG58
CHKSTC   DS    0H                         IF ASTYPE EQ S SPECIFIED GG58
         LTR   R1,R1                      Q. IS JOB A TSU          GG58
         BNZ   CHKSTCNO                   A. YES - BRANCH          GG58
         LTR   R3,R3                      Q. IS JOB BATCH          GG58
         BNZ   CHKSTCNO                   A. YES - BRANCH          GG58
         BR    R9                         RETURN SATISFIED         GG58
CHKSTCNO DS    0H                         NOT AN STC               GG58
         MVI   IFASTYP,C'N'               SET ASTYPE SATISFIED OFF GG58
         BR    R9                         RETURN NOT SATISFIED     GG58
*                                                                  GG58
ASTYPNO  DS    0H                         Set not satisfied switch GG58
         MVI   IFASTYP,C'N'               Set switch to N          GG58
         BR    R9                         Return                   GG58
***********************************************************************
*        TSOROUTE LOGIC                                           GG58*
***********************************************************************
TSOROUTE DS    0H                         SET UP TSOROUTE PARMS    GG58
*                                         R10 ALREADY @ CTXT       GG58
         ST    R10,@CTXT                  STORE @ CTXT TO PARM 1   GG58
         LA    R1,CMDTEXT                 @ MPFXTALL COMMAND       GG58
         ST    R1,@CMD                    STORE @ CMD  TO PARM 2   GG58
         LA    R1,TSORPLST                @ TSOROUTE PLIST         GG58
         L     R15,=V(TSOROUTE)           GET @ TSOROUTE SUBRTN    GG58
         BASSM R14,R15                    CALL IT                  GG58
         BR    R9                         RETURN                   GG58
**********************************************************************
*        IF SYSID LOGIC                                              *
**********************************************************************
SYSIDCK  DS    0H
         LA    R8,CKSYSID          Load address CKSYSID           GS52
         LA    R2,SYSID            Load address of                GS52
         LA    R6,SYSIDNO          Load address of                GS52
         B     MOVEGO              Go check for no's              GS52
*                                   and place address for GOTABLE GS52
SYSID    DS    0H
         L     R3,16               Point to the CVT
         USING CVT,R3              Cover the CVT
*
         MVC   CMDSID,CMDTEXT+12   Move command SYSID
         CLC   CMDSID,CVTSNAME     Check SYSID
         BNE   SYSIDNO             No, bye
         MVI   IFSYSID,C'Y'        Set switch to Y
         BR    R9                  Return
         SPACE ,
SYSIDNO  DS    0H
         MVI   IFSYSID,C'N'        Set switch to N
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        GET REPLY ID                                                *
**********************************************************************
GETREPLY DS    0H                                                 GS54
         LA    R2,SREPLY           Load address of                GS54
         LA    R6,SREPLYNO         Load address of                GS54
         B     CKOUTER             Go check for no's              GS54
SREPLYNO DS    0H                                                 GS54
         MVI   GETID,C'N'          Set GETID to N                 GS54
         BR    R9                  Return                         GS54
         SPACE ,                                                  GS54
SREPLY   DS    0H                                                 GS54
         TM    CTXTTFB1,CTXTTFWR   Is this a WTOR                 GS54
         BNO   NOTREPLY            No you messed up               GS54
         MVC   CMDAT,CTXTRPID      Move in reply number           GS54
         MVI   GETID,C'Y'          Set switch to Y                GS54
         BR    R9                  Return                         GS54
         SPACE ,                                                  GS54
**********************************************************************
*        GET WORD LOGIC         %                                    *
**********************************************************************
GETWORD  DS    0H
         LA    R2,STRTGET          Load address of                GS52
         LA    R6,SETGETNO         Load address of                GS52
         B     CKOUTER             Go check for no's              GS52
SETGETNO DS    0H
         MVI   GETCK,C'N'          Set GETCH to N
         BR    R9                  Return
         SPACE ,
STRTGET  DS    0H
         SP    MSGCNT,MSGCNT       Clear out MSGCNT
         MVC   TESTNN,=C'00'       Move for test for not numeric
         MVZ   TESTNN,CMDTEXT+9    Move for test for not numeric
         CLC   TESTNN,=C'00'       Test for not numeric
         BNE   NOTNUMG             Not numeric go tell em
         PACK  WORDNP,CMDTEXT+9(2) Pack it baby
         LA    R7,MSGTXT           Start of message
         LH    R8,MSGLEN           Length of message              PJ01
         LA    R8,2(,R8)           2 extra chars for TRT          PJ01
*                                   since cc =1 is only           PJ01
*                                   support in coding.            PJ01
         LA    R1,0(R8,R7)         @ PAST END OF STRING            GG58
         L     R0,SCANX40          LOAD SCAN DELIM                 GG58
CKTRTGET DS    0H
         BCTR  R8,0                Decrement length                GG58
SRST1    SRST  R1,R7               Scan message for next space     GG58
         BO    SRST1               SRST INCOMPLETE - RESUME INSTR  GG58
         BL    FGETWRD             BLANK FOUND - BRANCH            GG58
         MVI   IFWORD,C'N'         Set switch to N
         BR    R9                  Return
         SPACE ,
FGETWRD  DS    0H
         LR    R3,R1               R1 has the address of the space
         SR    R3,R7               Length not including space to R3
         CP    MSGCNT,WORDNP       Is this the word
         BNE   BMPGET              No get next word
         MVI   WORDGET,C' '                     Initial
         MVC   WORDGET+1(L'WORDGET-1),WORDGET   Blank out
         ST    R3,WORDLGET         Store the length to WORDLGET
         LA    R6,WORDGET          Load address of
         BCTR  R3,0                Subtract 1 from length for exec move
         EX    R3,MOVEIT           Move command word
         MVI   GETCK,C'Y'          Set switch to Y
         BR    R9                  Return
         SPACE ,
BMPGET   DS    0H
         LA    R7,1(R3,R7)         Start of data after space
         SR    R8,R3               Remaining length to R8
         AP    MSGCNT,=P'1'        Add 1 to MSGCNT
BMPGET1  DS    0H                                                 PJ02
         CLI   0(R7),C' '          Char blank                     PJ02
         BNE   CKTRTGET            No continue TRT scan           PJ02
         LA    R7,1(,R7)           Start of data after space      PJ02
         BCT   R8,BMPGET1          Check next char                PJ02
         MVI   IFWORD,C'N'         Set switch to N                PJ02
         BR    R9                  Return                         PJ02
         SPACE ,
**********************************************************************
*        PARSE ROUTINES                                              *
**********************************************************************
**********************************************************************
*     REPLACE WORD LOGIC FOR & AND %                                 *
**********************************************************************
GETRPLAC DS    0H
         LA    R7,CMDTEXT          Start of CMDTEXT
         LA    R8,L'CMDTEXT        Length of CMDTEXT
         LA    R1,0(R8,R7)         @ Past end of string            GG58
         L     R0,SCANX6C          Load scan delim %               GG58
         BCTR  R8,0                Decrement length                GG58
SRST2    SRST  R1,R7               SEARCH STRING FOR DELIM %       GG58
         BO    SRST2               SRST INCOMPLETE - RESUME INSTR  GG58
         BL    FNDATPER            FOUND A % BRANCH                GG58
         LA    R7,CMDTEXT          Start of CMDTEXT                GG58
         LA    R8,L'CMDTEXT        Length of CMDTEXT               GG58
         LA    R1,0(R8,R7)         @ PAST END OF STRING            GG58
         L     R0,SCANX50          LOAD SCAN DELIM    &            GG58
         BCTR  R8,0                Decrement length                GG58
SRST3    SRST  R1,R7               SEARCH STRING FOR DELIM         GG58
         BO    SRST3               SRST INCOMPLETE - RESUME INSTR  GG58
         BL    FOUNDAT             FOUND AN AMPERSAND              GG58
         MVI   GETCK2,X'40'        Set switch to blank            GS54
         MVI   GETID2,X'40'        Set switch to blank            GS54
         B     GOCHECK             Continue type checking         GS54
         SPACE ,                                                  GS54
FNDATPER DS    0H                                                 GS54
         MVI   GETCK2,C'F'         Set GETCK2 to F for %          GS54
         B     CONTMOVE                                           GS54
         SPACE ,                                                  GS54
FOUNDAT  DS    0H                                                 GS54
         MVI   GETID2,C'F'         Set GETID2 to F for &          GS54
CONTMOVE DS    0H                                                 GS54
         LR    R3,R1               R1 has the address of the % or &
         SR    R3,R7               Length not including percent to R3
         LR    R2,R3               Save length
         LA    R6,CMDGET           Load address of CMDGET
         BCTR  R3,0                Subtract 1 from length for exec move
         EX    R3,MOVEIT           Move command words till % or &
         LA    R7,1(R2,R7)         Start of data after percent CMDTEXT
         LA    R6,0(R2,R6)         Start of data before percent CMDGET
         ST    R7,SAVER7           Save address of R7
         CLI   GETCK2,C'F'         Was it a %                     GS54
         BE    SETWORD             Yup, go set word               GS54
*                                  else set &                     GS54
         LA    R7,CMDAT            Load R7 with CMDAT             GS54
         LA    R3,L'CMDAT          Load the length CMDAT          GS54
         B     MOVEGET             Go move                        GS54
SETWORD  DS    0H                                                 GS54
         LA    R7,WORDGET          Load R7 with get word
         L     R3,WORDLGET         Load the length get word
MOVEGET  DS    0H                                                 GS54
         BCTR  R3,0                Subtract 1 from length for exec move
         EX    R3,MOVEIT           Move command get word
         CLI   GETCK2,C'F'         Was it a %                     GS54
         BE    SETWORD2            Yup, go set word               GS54
*                                  else set &                     GS54
         LA    R3,L'CMDAT          Load the length CMDAT          GS54
         B     MOVEGET2            Go move                        GS54
SETWORD2 DS    0H                                                 GS54
         L     R3,WORDLGET         Load the length get word       GS54
MOVEGET2 DS    0H                                                 GS54
         LA    R6,0(R3,R6)         Add length of get word to CMDGET
         L     R7,SAVER7           Start of data after percent CMDTEXT
         LA    R3,CMDGET           Load address of CMDGET to R3
         LA    R3,L'CMDGET(R3)     Add length of CMDGET to R3
         SR    R3,R6               Get ready to move the rest
         BCTR  R3,0                Subtract 1 from length for exec move
         EX    R3,MOVEIT           Move command word
         MVC   CMDTEXT,CMDGET      Move get command to command
         MVI   GETCK2,X'40'        Set switch to blank            GS54
         MVI   GETID2,X'40'        Set switch to blank            GS54
         B     GETRPLAC            Continue checking for & and %  GS54
         SPACE ,
**********************************************************************
*        IF WORD ## LOGIC                                            *
**********************************************************************
WORDPARS DS    0H
         LA    R8,CKPWORD          Load address CKPWORD           GS52
         LA    R2,STRTWORD         Load address of                GS52
         LA    R6,STWORDNO         Load address of                GS52
         B     MOVEGO              Go check for no's              GS52
*                                   and place address for GOTABLE GS52
STWORDNO DS    0H
         MVI   IFWORD,C'N'         Set IFWORD to N
         BR    R9                  Return
         SPACE ,
STRTWORD DS    0H
         SP    MSGCNT,MSGCNT       Clear out MSGCNT
         LA    R7,CMDTEXT+11       Start of CMDTEXT past IF WORD ##
         LA    R8,L'CMDTEXT-11     Length of CMDTEXT minus IF WORD ##
         MVC   TESTNN,=C'00'       Move for test for not numeric
         MVZ   TESTNN,CMDTEXT+8    Move for test for not numeric
         CLC   TESTNN,=C'00'       Test for not numeric
         BNE   NOTNUMW             Not numeric go tell em
         PACK  WORDNP,CMDTEXT+8(2) Pack it baby
         LA    R1,0(R8,R7)         @ PAST END OF STRING            GG58
         L     R0,SCANX40          LOAD SCAN DELIM blank           GG58
         BCTR  R8,0                Decrement length                GG58
SRST4    SRST  R1,R7               SEARCH STRING FOR DELIM blank   GG58
         BO    SRST4               SRST INCOMPLETE - RESUME INSTR  GG58
         BL    FWRDSPC             BLANK FOUND - BRANCH            GG58
         LA    R7,CMDTEXT+11       Start of CMDTEXT past IF WORD ##
         LA    R8,L'CMDTEXT-11     Length of CMDTEXT minus IF WORD ##
         LA    R1,0(R8,R7)         @ PAST END OF STRING            GG58
         L     R0,SCANX5C          LOAD SCAN DELIM *               GG58
SRST5    SRST  R1,R7               SEARCH STRING FOR DELIM *       GG58
         BO    SRST5               SRST INCOMPLETE - RESUME INSTR  GG58
         BL    FOUNDAST            * FOUND - BRANCH                GG58
         MVI   IFWORD,C'N'         Set switch to N
         BR    R9                  Return
         SPACE ,
FOUNDAST DS    0H
         MVI   IFWORD,C'A'         Set switch to A
         B     FNDWRD
         SPACE ,
FWRDSPC  DS    0H
         MVI   IFWORD,C'S'         Set switch to S
FNDWRD   DS    0H
         LR    R3,R1               R1 has the address of the space or *
         SR    R3,R7               Length not including space/* to R3
         ST    R3,WORDLCMD         Store the length to WORDLCMD
         MVI   WORDCMD,C' '                     Initial
         MVC   WORDCMD+1(L'WORDCMD-1),WORDCMD   Blank out
         MVI   WORDMSG,C' '                     Initial
         MVC   WORDMSG+1(L'WORDMSG-1),WORDMSG   Blank out
         LA    R6,WORDCMD          Load address of
         BCTR  R3,0                Subtract 1 from length for exec move
         EX    R3,MOVEIT           Move command word
         LA    R7,MSGTXT           Start of message
         LH    R8,MSGLEN           Length of message              PJ01
         LA    R8,2(,R8)           2 extra chars for TRT          PJ01
*                                   since cc =1 is only           PJ01
*                                   support in coding.            PJ01
CKTRTWRD DS    0H
         LA    R1,0(R8,R7)         @ PAST END OF STRING            GG58
         L     R0,SCANX40          LOAD SCAN DELIM                 GG58
         BCTR  R8,0                Decrement length                GG58
SRST6    SRST  R1,R7               SEARCH STRING FOR DELIM         GG58
         BO    SRST6               SRST INCOMPLETE - RESUME INSTR  GG58
         BL    FMSGSWR             BLANK FOUND - BRANCH            GG58
         MVI   IFWORD,C'N'         Set switch to N
         BR    R9                  Return
         SPACE ,
FMSGSWR  DS    0H
         LR    R3,R1               R1 has the address of the space
         SR    R3,R7               Length not including space to R3
         CP    MSGCNT,WORDNP       Is this the word
         BNE   BMPWRD              No get next word
         ST    R3,WORDLMSG         Store the length to WORDLMSG
         LA    R6,WORDMSG          Load address of
         CLI   IFWORD,C'A'         WILDCARD * ?
         BE    ASTERWRD            Yup load length of command
         DS    0H                  Else
         L     R3,WORDLMSG         Load the length from WORDLMSG to R3
         B     CKWRD               Go check word
         SPACE ,
ASTERWRD DS    0H
         L     R3,WORDLCMD         Load the length from WORDLCMD to R3
CKWRD    DS    0H
         BCTR  R3,0                Subtract 1 from length for exec move
         EX    R3,MOVEIT           Move message word
         LA    R6,WORDCMD          Load address of
         CLC   WORDMSG,WORDCMD     Compare message and command word
         BE    FWRDMAT             Found message match
         MVI   IFWORD,C'N'         Set switch to Y
         BR    R9                  Return
         SPACE ,
BMPWRD   DS    0H
         LA    R7,1(R3,R7)         Start of data after space
         SR    R8,R3               Remaining length to R8
         AP    MSGCNT,=P'1'        Add 1 to MSGCNT
         SPACE ,
BMPWRD1  DS    0H
         CLI   0(R7),C' '          Char blank                     PJ02
         BNE   CKTRTWRD            Continue scanning message      PJ02
         LA    R7,1(,R7)           Start of data after space      PJ02
         BCT   R8,BMPWRD1          Check next char                PJ02
         MVI   IFWORD,C'N'         Set switch to N                PJ02
         BR    R9                  Return                         PJ02
         SPACE ,
FWRDMAT  DS    0H                  Message match
         MVI   IFWORD,C'Y'         Set switch to Y
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        IF MSGID PLUS FOR LOGIC                                     *
**********************************************************************
MSGIDPLN DS    0H                                                 GS56
         MVI   MSGPLNE,C'Y'        Set MSGPLNE to Y               GS56
         LA    R8,CKPMSGPN         Load address CKPMSGPN          GS56
         LA    R2,MSGPLUS          Load address of                GS56
         LA    R6,MSGIDPNO         Load address of                GS56
         B     MOVEGO              Go check for no's              GS56
*                                   and place address for GOTABLE GS56
MSGIDPLU DS    0H                                                 GS51
         LA    R8,CKPMSGPL         Load address CKPMSGPL          GS52
         LA    R2,MSGPLUS          Load address of                GS52
         LA    R6,MSGIDPNO         Load address of                GS52
         B     MOVEGO              Go check for no's              GS52
*                                   and place address for GOTABLE GS52
MSGIDPNO DS    0H                                                 GS51
         CLI   MSGPLNE,C'Y'        Is MSGPLNE Y                   GS56
         BNE   NEMSGPL              no must be IFMSGPL            GS56
         MVI   IFMSGPLN,C'N'       Set IFMSGPLN to N              GS56
         BR    R9                  Return                         GS56
         SPACE ,                                                  GS56
NEMSGPL  DS    0H                                                 GS56
         MVI   IFMSGPL,C'N'        Set IFMSGPL to N               GS51
         BR    R9                  Return                         GS51
         SPACE ,                                                  GS51
MSGPLUS  DS    0H                                                 GS51
         MVC   TESTNN,=C'00'       Move for test for not numeric  GS51
         MVZ   TESTNN,CMDTEXT+9    Move for test for not numeric  GS51
         CLC   TESTNN,=C'00'       Test for not numeric           GS51
         BNE   NOTNUMP             Not numeric go tell em         GS51
         MVC   TESTNN,=C'00'       Move for test for not numeric  GS51
         MVZ   TESTNN,CMDTEXT+16   Move for test for not numeric  GS51
         CLC   TESTNN,=C'00'       Test for not numeric           GS51
         BNE   NOTNUMP             Not numeric go tell em         GS51
         PACK  MSGNP,CMDTEXT+9(2)  Pack it baby                   GS51
         LA    R2,MSGTXT           Start of message               GS51
         CVB   R15,MSGNP           Convert to binary              GS51
         AR    R2,R15              Add msg plus to start          GS51
         LA    R15,CMDTEXT+19      Point to characters            GS51
         PACK  MSGNP,CMDTEXT+16(2) Pack it baby                   GS51
         CVB   R3,MSGNP            Convert to binary              GS51
         BCTR  R3,0                Decrement length for execute   GS51
         EX    R3,COMP             Compare                        GS51
         BE    FOUNDPL             Yup, go set switch             GS51
         CLI   MSGPLNE,C'Y'        Is MSGPLNE Y                   GS56
         BNE   NEMSGPL2             no must be IFMSGPLN           GS56
         MVI   IFMSGPLN,C'Y'       Set IFMSGPLN to Y              GS56
         BR    R9                  Return                         GS56
         SPACE ,                                                  GS56
NEMSGPL2 DS    0H                                                 GS56
         MVI   IFMSGPL,C'N'        Set switch to N                GS51
         BR    R9                  Return                         GS51
FOUNDPL  DS    0H                  Message match                  GS51
         CLI   MSGPLNE,C'Y'        Is MSGPLNE Y                   GS56
         BNE   NEMSGPL3             no must be IFMSGPLN           GS56
         MVI   IFMSGPLN,C'N'       Set IFMSGPLN to N              GS56
         BR    R9                  Return                         GS56
         SPACE ,                                                  GS56
NEMSGPL3 DS    0H                                                 GS56
         MVI   IFMSGPL,C'Y'        Set switch to Y                GS51
         BR    R9                  Return                         GS51
         SPACE ,                                                  GS51
**********************************************************************
*        IF ALL EQ LOGIC                                             *
**********************************************************************
PARSEROU DS    0H
         LA    R8,CKPARSE          Load address CKPARSE           GS52
         LA    R2,PARBEGIN         Load address of                GS52
         LA    R6,PARBEGNO         Load address of                GS52
         B     MOVEGO              Go check for no's              GS52
*                                   and place address for GOTABLE GS52
PARBEGNO DS    0H
         MVI   IFPARSE,C'N'        Set IFPARSE to N
         BR    R9                  Return
         SPACE ,
PARBEGIN DS    0H
         SP    MSGCNT,MSGCNT       Clear out MSGCNT
         SP    CMDCNT,CMDCNT       Clear out CMDCNT
         MVI   CMDTABLE,C' '                       Initial
         MVC   CMDTABLE+1(L'CMDTABLE-1),CMDTABLE   Blank out
         LA    R6,CMDTABLE         Get address of CMDTABLE
         LA    R7,CMDTEXT+10       Start of CMDTEXT past IF ALL EQ
         LA    R8,L'CMDTEXT-10     Length of CMDTEXT minus IF ALL EQ
         LA    R1,0(R8,R7)         @ PAST END OF STRING            GG58
         L     R0,SCANX40          LOAD SCAN DELIM                 GG58
CKTRTCMD DS    0H
         BCTR  R8,0                Decrement length                GG58
SRST7    SRST  R1,R7               SEARCH STRING FOR DELIM blank   GG58
         BO    SRST7               SRST INCOMPLETE - RESUME INSTR  GG58
         BL    FCMDSPC             BLANK FOUND - BRANCH            GG58
         B     MARKEND             Go MARKEND we should never be here
         SPACE ,
FCMDSPC  DS    0H
         LR    R3,R1               R1 has the address of the space
         SR    R3,R7               Length not including space to R3
         ST    R3,PARSLCMD         Store the length to PARSLCMD
         BCTR  R3,0                Subtract 1 from length for exec move
         EX    R3,MOVEIT           Move command get word
         L     R3,PARSLCMD         Load the length from PARSLCMD to R3
         LA    R6,L'WORDMSG(R6)    Bump up to next
         LA    R7,1(R3,R7)         Start of data after space
         SR    R8,R3               Remaining length
         AP    CMDCNT,=P'1'        Add 1 to CMDCNT
         CP    CMDCNT,=P'4'        Max of 4 words
         BE    MARKEND             Yup bye
         CLI   0(R7),X'40'         Is next after the space a space
         BNE   CKTRTCMD            Continue scanning input
MARKEND  DS    0H
         MVI   0(R6),X'FF'         Put end of CMDS
**********************************************************************
*        IF ALL COMPARE TO MESSAGE LOGIC                             *
**********************************************************************
         LA    R7,MSGTXT           Start of message
         LH    R8,MSGLEN           Length of message              PJ01
         LA    R8,2(,R8)           2 extra chars for TRT          PJ01
*                                   since cc =1 is only           PJ01
*                                   support in coding.            PJ01
         LA    R1,0(R8,R7)         @ PAST END OF STRING            GG58
         L     R0,SCANX40          LOAD SCAN DELIM                 GG58
CKTRTMSG DS    0H
         BCTR  R8,0                Decrement length                GG58
SRST8    SRST  R1,R7               SEARCH STRING FOR DELIM         GG58
         BO    SRST8               SRST INCOMPLETE - RESUME INSTR  GG58
         BL    FMSGSPC             BLANK FOUND - BRANCH            GG58
         MVI   IFPARSE,C'N'        Set switch to N
         BR    R9                  Return
         SPACE ,
FMSGSPC  DS    0H
         LR    R3,R1               R1 has the address of the space
         CR    R7,R3               End of data
         BE    IFPARNO             Yup bye bye
         SR    R3,R7               Length not including space to R3
         ST    R3,PARSLCMD         Store the length to PARSLCMD
         MVI   WORDMSG,C' '                     Initial
         MVC   WORDMSG+1(L'WORDMSG-1),WORDMSG   Blank out
         LA    R6,WORDMSG          Load address of
         BCTR  R3,0                Subtract 1 from length for exec move
         EX    R3,MOVEIT           Move message word
         L     R3,PARSLCMD         Load the length from PARSLCMD to R3
         LA    R6,CMDTABLE         Get address of CMDTABLE
CKWORD   DS    0H
         CLC   0(L'WORDMSG,R6),WORDMSG   Check MSG = CMDTABLE
         BE    FMSGMAT             Found message match
         LA    R6,L'WORDMSG(R6)    Bump up to next
         CLI   0(R6),X'FF'         End of CMDS table
         BNE   CKWORD              Get next word from CMDTABLE
BMPADD   DS    0H
         LA    R7,1(R3,R7)         Start of data after space
         SR    R8,R3               Remaining length
BMPADD1  DS    0H                                                 PJ02
         CLI   0(R7),C' '          CHAR BLANK                     PJ02
         BNE   CKTRTMSG            NO CONTINUE SCAN               PJ02
         LA    R7,1(,R7)           Start of data after space      PJ02
         BCT   R8,BMPADD1          Check next char                PJ02
         MVI   IFPARSE,C'N'        Set switch to N                PJ02
         BR    R9                  Return                         PJ02
         SPACE ,
FMSGMAT  DS    0H                  Message match
         AP    MSGCNT,=P'1'        Add 1 to MSGCNT
         CP    MSGCNT,CMDCNT       Compare MSGCNT to CMTCNT
         BL    BMPADD              Not all there yet
         MVI   IFPARSE,C'Y'        Set switch to Y
         BR    R9                  Return
         SPACE ,
IFPARNO  DS    0H
         MVI   IFPARSE,C'N'        Set switch to N
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        IF MSGID EQ FOR LONG MESSAGEIDS                             *
**********************************************************************
MSGIDRNE DS    0H
         MVI   MSGIDNE,C'Y'        Set MSGIDNE to Y               GS56
         LA    R8,CKMSGIDN         Load address CKMSGIDN          GS56
         LA    R2,MSGBEGIN         Load address of                GS56
         LA    R6,MSGBEGNO         Load address of                GS56
         B     MOVEGO              Go check for no's              GS56
*                                   and place address for GOTABLE GS56
MSGIDROU DS    0H
         LA    R8,CKPMSGID         Load address CKPMSGID          GS52
         LA    R2,MSGBEGIN         Load address of                GS52
         LA    R6,MSGBEGNO         Load address of                GS52
         B     MOVEGO              Go check for no's              GS52
*                                   and place address for GOTABLE GS52
MSGBEGNO DS    0H
         CLI   MSGIDNE,C'Y'        Is MSGIDNE Y                   GS56
         BNE   NEMSGID              no must be IFMSGID            GS56
         MVI   IFMSGIDN,C'N'       Set IFMSGIDN to N              GS56
         BR    R9                  Return                         GS56
         SPACE ,                                                  GS56
NEMSGID  DS    0H                                                 GS56
         MVI   IFMSGID,C'N'        Set IFMSGID to N
         BR    R9                  Return
         SPACE ,
MSGBEGIN DS    0H
         LA    R7,CMDTEXT+12       Start of CMDTEXT past IF MSGID EQ
         LA    R8,L'CMDTEXT-12     Length of CMDTEXT minus IF MSGID EQ
         LA    R1,0(R8,R7)         @ PAST END OF STRING            GG58
         L     R0,SCANX40          LOAD SCAN DELIM                 GG58
         BCTR  R8,0                Decrement length                GG58
SRST9    SRST  R1,R7               SEARCH STRING FOR DELIM         GG58
         BO    SRST9               SRST INCOMPLETE - RESUME INSTR  GG58
         BL    FMSGID              BLANK FOUND - BRANCH            GG58
         MVI   IFMSGIDN,C'N'       Set IFMSGIDN to N              GS56
         MVI   IFMSGID,C'N'        Set switch to N
         BR    R9                  We should never be here
         SPACE ,
FMSGID   DS    0H
         LR    R3,R1               R1 has the address of the space
         SR    R3,R7               Length not including space to R3
         LA    R15,CMDTEXT+12      Point to characters
         LA    R2,MSGTXT           Point to characters
         BCTR  R3,0                Decrement length for execute
         EX    R3,COMP             Compare
         BNE   NOMATCH             No seeya
         CLI   MSGIDNE,C'Y'        Is MSGIDNE Y                   GS56
         BNE   NEMSGID2             no must be IFMSGID            GS56
         MVI   IFMSGIDN,C'N'       Set IFMSGIDN to N              GS56
         BR    R9                  Return                         GS56
         SPACE ,                                                  GS56
NEMSGID2 DS    0H                                                 GS56
         MVI   IFMSGID,C'Y'        Set switch to Y
         BR    R9                  Return
         SPACE ,
NOMATCH  DS    0H
         CLI   MSGIDNE,C'Y'        Is MSGIDNE Y                   GS56
         BNE   NOMTCHID             no must be IFMSGID            GS56
         MVI   IFMSGIDN,C'Y'       Set IFMSGIDN to Y              GS56
         BR    R9                  Return                         GS56
         SPACE ,                                                  GS56
NOMTCHID DS    0H                                                 GS56
         MVI   IFMSGID,C'N'        Set switch to N
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        IF SWITCH OFF                                               *
**********************************************************************
SWTCHOFF DS    0H
         LA    R8,CKPSWOFF         Load address CKPSWOFF          GS52
         LA    R2,SWOFFYES         Load address of                GS52
         LA    R6,SWOFFNO          Load address of                GS52
         B     MOVEGO              Go check for no's              GS52
*                                   and place address for GOTABLE GS52
SWOFFNO  DS    0H
         MVI   IFSWOFF,C'N'        Set IFSWOFF to N
         BR    R9                  Return
         SPACE ,
SWOFFYES DS    0H
         MVC   NAMESW(16),MPFEYE           First part of name
         MVC   NAMESW+6(8),CMDTEXT+14      Move in second part of name
         LA    R7,NAMESW                   Load address of name
         LA    R3,TOKENSW                  Load address of token
         LA    R2,RETCODE                  Load address of return code
*                                          Check if Name/Token exists
         CALL  IEANTRT,(SYSLVL,(R7),(R3),(R2)),MF=(E,RENTCALR)
         IF   (RETCODE,EQ,=A(IEANT_OK))
         MVI   IFSWOFF,C'N'        Set switch OFF to N
         BR    R9                  Return
         ENDIF
         MVI   IFSWOFF,C'Y'        Set switch OFF to Y
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        IF SWITCH ON                                                *
**********************************************************************
SWTCHON  DS    0H
         LA    R8,CKPSWON          Load address CKPSWON           GS52
         LA    R2,SWONYES          Load address of                GS52
         LA    R6,SWONNO           Load address of                GS52
         B     MOVEGO              Go check for no's              GS52
*                                   and place address for GOTABLE GS52
SWONNO   DS    0H
         MVI   IFSWON,C'N'         Set IFSWOFF to N
         BR    R9                  Return
         SPACE ,
SWONYES  DS    0H
         MVC   NAMESW(16),MPFEYE           First part of name
         MVC   NAMESW+6(8),CMDTEXT+13      Move in second part of name
         LA    R7,NAMESW                   Load address of name
         LA    R3,TOKENSW                  Load address of token
         LA    R2,RETCODE                  Load address of return code
*                                          Check if Name/Token exists
         CALL  IEANTRT,(SYSLVL,(R7),(R3),(R2)),MF=(E,RENTCALR)
         IF   (RETCODE,EQ,=A(IEANT_OK))
         MVI   IFSWON,C'Y'         Set switch ON to Y
         BR    R9                  Return
         ENDIF
         MVI   IFSWON,C'N'         Set switch ON to N
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        IF SWITCH EQ                                                *
**********************************************************************
SWTCHEQ  DS    0H
         LA    R8,CKPSWEQ          Load address CKPSWEQ           GS52
         LA    R2,SWEQYES          Load address of                GS52
         LA    R6,SWEQNO           Load address of                GS52
         B     MOVEGO              Go check for no's              GS52
*                                   and place address for GOTABLE GS52
SWEQNO   DS    0H
         MVI   IFSWEQ,C'N'         Set IFSWOFF to N
         BR    R9                  Return
         SPACE ,
SWEQYES  DS    0H
         MVC   NAMESW(16),MPFEYE           First part of name
         MVC   NAMESW+6(8),CMDTEXT+13      Move in second part of name
         MVI   TOKENSW,C' '                       Initial
         MVC   TOKENSW+1(L'TOKENSW-1),TOKENSW     Blank out
         LA    R7,NAMESW                   Load address of name
         LA    R3,TOKENSW                  Load address of token
         LA    R2,RETCODE                  Load address of return code
*                                          Check if Name/Token exists
         CALL  IEANTRT,(SYSLVL,(R7),(R3),(R2)),MF=(E,RENTCALR)
         CLC   TOKENSW,CMDTEXT+22          Do tokens match
         BNE   SETEQNO                     No
         MVI   IFSWEQ,C'Y'                 Set switch EQ to Y
         BR    R9                  Return
         SPACE ,
SETEQNO  DS    0H
         MVI   IFSWEQ,C'N'         Set switch EQ to N
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        IF SWITCH NE                                                *
**********************************************************************
SWTCHNE  DS    0H
         LA    R8,CKPSWNE          Load address CKPSWNE           GS52
         LA    R2,SWNEYES          Load address of                GS52
         LA    R6,SWNENO           Load address of                GS52
         B     MOVEGO              Go check for no's              GS52
*                                   and place address for GOTABLE GS52
SWNENO   DS    0H
         MVI   IFSWNE,C'N'         Set IFSWNE to N
         BR    R9                  Return
         SPACE ,
SWNEYES  DS    0H
         MVC   NAMESW(16),MPFEYE           First part of name
         MVC   NAMESW+6(8),CMDTEXT+13      Move in second part of name
         LA    R7,NAMESW                   Load address of name
         LA    R3,TOKENSW                  Load address of token
         LA    R2,RETCODE                  Load address of return code
*                                          Check if Name/Token exists
         CALL  IEANTRT,(SYSLVL,(R7),(R3),(R2)),MF=(E,RENTCALR)
         CLC   TOKENSW,CMDTEXT+22  Do tokens match
         BE    SETNENO             Yes
         MVI   IFSWNE,C'Y'         Set switch NE to Y
         BR    R9                  Return
         SPACE ,
SETNENO  DS    0H
         MVI   IFSWNE,C'N'         Set switch NE to N
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        SET SWITCH                                                  *
**********************************************************************
SETSWTCH DS    0H
         MVC   NAMESW(16),MPFEYE           First part of name
         MVC   NAMESW+6(8),CMDTEXT+10      Move in second part of name
         MVC   TOKENSW(16),CMDTEXT+19      Move in token
         LA    R7,NAMESW                   Load address of name
         LA    R3,TOKENSW                  Load address of token
         LA    R2,RETCODE                  Load address of return code
*                                          Check if Name/Token exists
         CALL  IEANTRT,(SYSLVL,(R7),(R3),(R2)),MF=(E,RENTCALR)
         IF   (RETCODE,EQ,=A(IEANT_OK))
         WTO   'MPF020E - Switch error already exists not created',    X
               DESC=(2),ROUTCDE=(1)
         B     MPF008R9            Return
         ENDIF
*                                          Create Name/Token
         CALL  IEANTCR,(SYSLVL,(R7),(R3),PERSOPT,(R2)),MF=(E,RENTCALC)
         IF    (RETCODE,EQ,=A(IEANT_NOT_FOUND))
         WTO   'MPF022E - Switch error not created',                   X
               DESC=(2),ROUTCDE=(1)
         B     MPF008R9            Return
         ENDIF
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        PUT SWITCH                                                  *
**********************************************************************
PUTSWTCH DS    0H                                                 GS55
         MVC   NAMESW(16),MPFEYE           First part of name     GS55
         MVC   NAMESW+6(8),CMDTEXT+10 Move in second part of name GS55
         MVI   TOKENSW,C' '                       Initial         GS55
         MVC   TOKENSW+1(L'TOKENSW-1),TOKENSW     Blank out       GS55
         LA    R7,NAMESW                   Load address of name   GS55
         LA    R3,TOKENSW                  Load address of token  GS55
         LA    R2,RETCODE             Load address of return code GS55
*                                     Check if Name/Token exists  GS55
         CALL  IEANTRT,(SYSLVL,(R7),(R3),(R2)),MF=(E,RENTCALR)    GS55
         IF    (RETCODE,EQ,=A(IEANT_NOT_FOUND))                   GS55
         WTO   'MPF035E - Name/Token not found error for PUTSWITCH',   X
               DESC=(2),ROUTCDE=(1)                               GS55
         B     MPF008R9            Return                         GS55
         ENDIF                                                    GS55
         MVI   CMDTEXT,C' '                    Initial            GS55
         MVC   CMDTEXT+1(L'CMDTEXT-1),CMDTEXT  Blank out          GS55
         MVC   CMDTEXT(16),TOKENSW         Move in TOKEN for put  GS55
         B     CONT_TYP                    Go put                 GS55
         SPACE ,                                                  GS55
**********************************************************************
*        ALTER SWITCH                                                *
**********************************************************************
ALTSWTCH DS    0H
         MVC   NAMESW(16),MPFEYE           First part of name
         MVC   NAMESW+6(8),CMDTEXT+10      Move in second part of name
         MVC   TOKENSW(16),CMDTEXT+19      Move in token
         LA    R7,NAMESW                   Load address of name
         LA    R3,TOKENSW                  Load address of token
         LA    R2,RETCODE                  Load address of return code
*                                          Delete Name/Token
         CALL  IEANTDL,(SYSLVL,(R7),(R2)),MF=(E,RENTCALD)
         IF   (RETCODE,EQ,=A(IEANT_OK))
*                                          Create Name/Token
         CALL  IEANTCR,(SYSLVL,(R7),(R3),PERSOPT,(R2)),MF=(E,RENTCALC)
         BR    R9                  Return
         ENDIF
         WTO   'MPF027E - Switch error not altered',                   X
               DESC=(2),ROUTCDE=(1)
         B     MPF008R9            Return
         SPACE ,
**********************************************************************
*        DELETE SWITCH                                               *
**********************************************************************
DELSWTCH DS    0H
         MVC   NAMESW(16),MPFEYE           First part of name
         MVC   NAMESW+6(8),CMDTEXT+10      Move in second part of name
         LA    R7,NAMESW                   Load address of name
         LA    R2,RETCODE                  Load address of return code
*                                          Delete Name/Token
         CALL  IEANTDL,(SYSLVL,(R7),(R2)),MF=(E,RENTCALD)
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        WTOR ROUTINE                                                *
**********************************************************************
MPFWTOR  DS    0H
         TM    CTXTTFB1,CTXTTFWR          Is this a WTOR
         BNO   NOTWTOR                    No you messed up
         XC    MGCRPL(MGCRSIZ),MGCRPL     Clear the MGCR area
         MVC   MGCRTEXT(L'CMDTEXT),CMDTEXT    Move in reply
         MVC   MGCRTEXT+6(L'CTXTRPID),CTXTRPID  Move in reply number
         LA    R3,(MGCRTEXT-MGCRPL)+L'CMDTEXT     Load address
         STC   R3,MGCRLGTH                Set the length of the reply
         XR    R0,R0                      Clear R0 for MGCR/SVC 34
         MGCR  MGCRPL                     Reply to WTOR
         CLC   CTXTAUTT,=CL8'NODISPLY' No /* MPFXTALL */ request  GS57
         BE    AFTDISP2            yes skip display               GS57
         WTO   MF=(E,WTOM),ROUTCDE=11,DESC=7
AFTDISP2 DS    0H
         BR    R9                         Return
MPFWTORX DS    0H                                                 DT03
         TM    CTXTTFB1,CTXTTFWR          Is this a WTOR          DT03
         BNO   NOTWTOR                    No you messed up        DT03
         XC    MGCRPL(MGCRSIZ),MGCRPL     Clear the MGCR area     DT03
         MVC   MGCRTEXT(L'CMDTEXT),CMDTEXT    MOVE IN REPLY       DT03
         MVC   MGCRTEXT+6(4),=C'    '     CLEAR NNNN              DT03
         LH    R3,CTXTRPYL                LOAD LENGTH OF REPLY    DT03
         BCTR  R3,0                       DECREMENT FOR MOVE      DT03
         CH    R3,=H'2'                   WHAT LENGTH to move?    DT03
         BE    MRPID3                     =2 MOVE 3               DT03
         BH    MRPID4                     >2 MOVE 4               DT03
         EX    R3,MOVERI2                 MOVE 2                  DT03
         B     MPFW00                                             DT03
MRPID4   EX    R3,MOVERI4                 MOVE 4                  DT03
         B     MPFW00                                             DT03
MRPID3   EX    R3,MOVERI3                 MOVE 3                  DT03
MPFW00   DS    0H                                                 DT03
         LA    R3,(MGCRTEXT-MGCRPL)+L'CMDTEXT     Load address    DT03
         STC   R3,MGCRLGTH             Set the length of the rep  DT03
         XR    R0,R0                   Clear R0 for MGCR/SVC 34   DT03
         MGCR  MGCRPL                     Reply to WTOR           DT03
         CLC   CTXTAUTT,=CL8'NODISPLY' No /* MPFXTALL */ request  GS57
         BE    AFTDISP3            yes skip display               GS57
         WTO   MF=(E,WTOM),ROUTCDE=11,DESC=7                      DT03
AFTDISP3 DS    0H
         BR    R9                         Return
         SPACE ,
**********************************************************************
*        WTO ROUTINES                                                *
**********************************************************************
WTOROUT  DS    0H
         MVC   WTOAMSG(53),CMDTEXT+4   Move message to WTO
         WTO   MF=(E,WTOA)
         BR    R9                  Return
         SPACE ,
WTOHIGH  DS    0H
         MVC   WTOBMSG(53),CMDTEXT+5   Move message to WTO
         WTO   MF=(E,WTOB)
         BR    R9                  Return
         SPACE ,
**********************************************************************
*        ERROR MESSAGE ROUTINES                                      *
**********************************************************************
MPF008R  DS    0H
         WTO   'MPF008E - Notify MPFXTALL Support',                    X
               DESC=(2),ROUTCDE=(1)
         B     RETURN              Bye
**********************************************************************
MPF008F  DS    0H
         WTO   'MPF008E - Notify MPFXTALL Support',                    X
               DESC=(2),ROUTCDE=(1)
         B     FREEMEM             Bye
**********************************************************************
MPF008R9 DS    0H
         WTO   'MPF008E - Notify MPFXTALL Support',                    X
               DESC=(2),ROUTCDE=(1)
         BR    R9                  Return
**********************************************************************
NOTWTOR  DS    0H
         WTO   'MPF012E - Message not a WTPR - reply not issued',DESC=2X
               ,ROUTCDE=(1)
         B     MPF008R9            Return
         SPACE ,
**********************************************************************
NOTREPLY DS    0H
         WTO   'MPF036E - Message not a WTOR GET REPLYID not performed'X
               ,DESC=(2),ROUTCDE=(1)
         MVI   GETID,C'N'          Set switch to N                GS54
         B     MPF008R9            Return
         SPACE ,
**********************************************************************
LOADERR  DS    0H
         WTO   'MPF014E - MPFLOAD is running',DESC=(2),ROUTCDE=(1)
         B     MPF008F
         SPACE ,
**********************************************************************
NOTNUMW  DS    0H
         WTO   'MPF025E - IF WORD Not Numeric Error',                  X
               DESC=(2),ROUTCDE=(1)
         MVI   IFWORD,C'N'         Set IFWORD to N
         B     MPF008R9
         SPACE ,
**********************************************************************
NOTNUMG  DS    0H
         WTO   'MPF026E - GET WORD Not Numeric Error',                 X
               DESC=(2),ROUTCDE=(1)
         MVI   GETCK,C'N'          Set GETCH to N
         B     MPF008R9
         SPACE ,
**********************************************************************
NOTNUMP  DS    0H                                                 GS51
         WTO   'MPF028E - Message ID Plus Not Numeric Error',     GS51 X
               DESC=(2),ROUTCDE=(1)                               GS51
         MVI   IFMSGPL,C'N'          Set IFMSGPL to N             GS51
         B     MPF008R9                                           GS51
         SPACE ,                                                  GS51
**********************************************************************
NOTASTYP DS    0H                                                 GG58
         WTO   'MPF062E - IF ASTYPE EQ value invalid',            GG58 X
               DESC=(2),ROUTCDE=(1)                               GG58
         B     MPF008R9                                           GG58
         SPACE ,                                                  GG58
**********************************************************************
ERROREND DS    0H                                                 GS52
         WTO   'MPF037E - Commands member coding error ENDIF',    GS52 X
               DESC=(2),ROUTCDE=(1)                               GS52
         B     MPF008R9                                           GS52
         SPACE ,                                                  GS52
**********************************************************************
ERRORIFL DS    0H                                                 GS54
         WTO   'MPF033E - Commands member coding IFLOGIC error',  GS54 X
               DESC=(2),ROUTCDE=(1)                               GS54
         B     MPF008R9                                           GS54
         SPACE ,                                                  GS54
**********************************************************************
ERRORGET DS    0H                                                 GS54
         WTO   'MPF034E - Commands member coding error ENDGET',   GS54 X
               DESC=(2),ROUTCDE=(1)                               GS54
         B     MPF008R9                                           GS54
         SPACE ,                                                  GS54
**********************************************************************
NOMPFMS  DS    0H
         WTO   'MPF019E - MPF Message use not allowed',                X
               DESC=(2),ROUTCDE=(1)
         B     MPF008F
         SPACE ,
**********************************************************************
MSNOTFND DS    0H
         WTO   'MPF013E - Message ID not found in table',              X
               DESC=(2),ROUTCDE=(1)
         B     MPF008F
**********************************************************************
*        FREE MEMORY ROUTINE                                         *
**********************************************************************
FREEMEM  DS    0H
         LA    R2,WORKAREA
         LA    R1,WORKSIZE
         FREEMAIN R,LV=(R1),A=(R2),SP=230
         LTR   R15,R15             Test freemain
         BZ    RETURN              Ok bye
         WTO   'MPF030E - FREEMAIN ERROR',DESC=(2),ROUTCDE=(1)
         B     MPF008R
         EJECT
**********************************************************************
*        ESTAE RECOVERY ROUTINE                                  GG59*
**********************************************************************

ESTAERC  DS    0H                  ESTAE RECOVERY ROUTINE        GG59
         PUSH  USING               SAVE MAINLINE USING STATE     GG59
         DROP  R11,R12             DON'T USE MAINLINE USING      GG59
         LR    R12,R15             COPY ESTAE REC RTN EPA TO BASEGG59
         USING ESTAERC,R12         MAP CODE PAGE FOR ESTAE RECRTNGG59
         C     R0,=F'12'           Q. SDWA EXIST                 GG59
         BE    NOSDWA              A. BATMAN - THIS IS SERIOUS   GG59
         LR    R2,R1               COPY @ SDWA                   GG59
         USING SDWA,R2             MAP SDWA                      GG59
         SETRP RETADDR=WTOABEND,   PREPARE TO RETURN FROM ESTAE  GG59  *
               DUMP=NO,            RECOVERY RTN - NO DUMP REQ'D  GG59  *
               RC=4,               WE WILL RETRY                 GG59  *
               FRESDWA=YES,        WE WILL FREE THE SDWA STORAGE GG59  *
               WKAREA=(R2),        SDWA @ BY R2                  GG59  *
               RECORD=YES,         RECORD ERROR TO LOGREC        GG59  *
               RETREGS=YES         RESTORE REGISTERS AT ENTRY TO GG59
*                                  RETRY ROUTINE                 GG59
         BR    R14                 RETURN FROM ESTAE RECOVERY RTNGG59

NOSDWA   DS    0H                  NO SDWA - THIS IS BAD BATMAN  GG59
         LA    R15,4               REQUEST RETRY (HOLY DREAMING) GG59
         LA    R0,WTOABEND         SPECIFY ADDRESS OF RETRY RTN  GG59
         BR    R14                 RETURN FROM ESTAE RECOVERY RTNGG59
         POP   USING               RESTORE MAINLINE USING ENVIR. GG59

**********************************************************************
*        ESTAE RETRY ROUTINE                                     GG59*
**********************************************************************

WTOABEND DS    0H                  ESTAE RETRY ROUTINE           GG59
         WTO   'MPF038E MPFXTALL ABENDED; ABEND WAS SUPPRESSED', GG59  *
               ROUTCDE=1,          MPF0 WTO's are not allowed to GG59  *
               DESC=2              be captured - this WTO must   GG59
*                                  NOT be captured by MPFXTALL   GG59
         B     FREEMEM             GOTO FREE MEMORY AND RETURN   GG59
         EJECT
**********************************************************************
*        END OF PROCESSING                                           *
**********************************************************************
RETURN   DS    0H
         ESTAEX 0                  Delete MPFXTALL ESTAE         GG59
         PR                        Pop the stack
**********************************************************************
*        EXECUTES                                                    *
**********************************************************************
MOVERI2  MVC   MGCRTEXT+8(0),CTXTRPYI                             DT03
MOVERI3  MVC   MGCRTEXT+7(0),CTXTRPYI                             DT03
MOVERI4  MVC   MGCRTEXT+6(0),CTXTRPYI                             DT03
**********************************************************************
MVMBR    MVC  MEMN(0),MSGTXT       Move message id to member name
**********************************************************************
MVMBR2   MVC  CMDMBR(0),MSGTXT     Move message ID to issued by   TL01
**********************************************************************
MOVEIT   MVC  0(1,R6),0(R7)
**********************************************************************
SAVEMINR MVC  1(1,R3),CTXTTMSG     Move in message text           PJ01
**********************************************************************
COMP     CLC 0(1,R2),0(R15)                                       GS51
**********************************************************************
*        CONSTANT DATA                                               *
**********************************************************************
SYSLVL   DC    A(IEANT_SYSTEM_LEVEL)
NAME     DC    CL16'MPF_EXIT_TABLE'     The name of the token
PERSOPT  DC    A(IEANT_PERSIST)         Keep the token after job ends
MPFEYE   DC    CL16'MPFXT_          '   First part of switch name
*
SCANX40  DC    A(C' ')                                             GG58
SCANX50  DC    A(C'&&')                                            GG58
SCANX5C  DC    A(C'*')                                             GG58
SCANX6C  DC    A(C'%')                                             GG58
         CNOP  0,4
         SPACE 2
         LTORG
         EJECT
**********************************************************************
*        VARIABLE DATA. NOTE THAT THIS DATA IS COPIED TO A WORK AREA *
*        AND UPDATED THERE                                           *
**********************************************************************
         SPACE 2
PSETAREA DS    0D                  Preset MGCR work area
SAVEAREX DS    18F                 SAVEAREA
SSCMD    DC    AL2(SCMDLN)
         DC    XL2'00'
         DC    CL80' '
SCMDLN   EQU   *-SSCMD
*
WTOMX    DC    0F
         DC    AL2(WTOMEX)              Text length
         DC    B'0000000000000000'      MCSFLAGS
MSGENDX  DC    C' /* Issued by MPFXTALL for                  */'
WTOMEX   EQU   *-WTOMX
*
WTOAX    DC    0F
         DC    AL2(WTOAEX)              Text length
         DC    B'0000000000000000'      MCSFLAGS
WTOAMSGX DC    C'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
WTOAEX   EQU   *-WTOAX
*
         DS    0H
*
WTOBX    DC    0F
         DC    AL2(WTOBEX-4)            Text length
         DC    B'1000000000000000'      MCSFLAGS
WTOBMSGX DC    C'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
         DC    B'0100000000000000'      Descriptor Codes
         DC    B'1000000000000000'      Routing Codes
WTOBEX   EQU   *-WTOBX
*
CMDCNTX  DC    PL2'0'              Counters
MSGCNTX  DC    PL2'0'              Counters
WORDNPX  DC    PL2'0'              Counters
GOCNTRX  DC    PL8'0'              Counters                      GS52
*
PSETSIZE EQU   *-PSETAREA          Size of the variable Work Area
         EJECT
**********************************************************************
*        GETMAIN WORK AREA                                           *
**********************************************************************
WORKAREA DSECT                     Preset work area
         DS    0D
SAVEAREA DS    18F                 SAVEAREA
CMDHDR   DC    XL2'20'
         DC    XL2'00'
CMDTEXT  DC    CL80' '
*
WTOM     DC    0F
         DC    AL2(WTOME)               Text length
         DC    B'0000000000000000'      MCSFLAGS
CMDDESC  DC    C' /* Issued by MPFXTALL for '
CMDMBR   DC    C'                 */'                              TL01
WTOME    EQU   *-WTOM
*
WTOA     DS    0F
         DC    AL2(WTOAE-4)             Text length
         DC    B'0000000000000000'      MCSFLAGS
WTOAMSG  DC    C'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
WTOAE    EQU   *-WTOA                   LENGTH OF
*
WTOB     DS    0F
         DC    AL2(WTOBE-4)             Text length
         DC    B'1000000000000000'      MCSFLAGS
WTOBMSG  DC    C'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
         DC    B'0100000000000000'      Descriptor Codes
         DC    B'1000000000000000'      Routing Codes
WTOBE    EQU   *-WTOB                   Length of
*
CMDCNT   DC    PL2'0'              Counters
MSGCNT   DC    PL2'0'              Counters
WORDNP   DC    PL2'0'              Counters
GOCNTR   DC    PL8'0'              Counters                      GS52

**********************************************************************
* END OF SEEDED STORAGE                                              *
**********************************************************************
         DS    0F                  Alignment
*
MSGNP    DS    D                                                 GS51
*
GOTABLE  DS    F                                                 GS52
GO0ST    DS    F                                                 GS52
GO1ST    DS    F                                                 GS52
GO2ND    DS    F                                                 GS52
GO3RD    DS    F                                                 GS52
GO4TH    DS    F                                                 GS52
GO5TH    DS    F                                                 GS52
GO6TH    DS    F                                                 GS52
GO7TH    DS    F                                                 GS52
GO8TH    DS    F                                                 GS52
GO9TH    DS    F                                                 GS52
GOATH    DS    F                                                 GS52
GOBTH    DS    F                                                 GS52
GOCTH    DS    F                                                 GS52
GODTH    DS    F                                                 GS52
GOETH    DS    F                                                 GS52
GOFTH    DS    F                                                 GS52
*
MEMN     DS    CL8                 Member name
*
IFSYSID  DS    CL1                 SYSID check
*
IFASTYP  DS    CL1                 ADDRESS SPACE check            GG58
*
IFPARSE  DS    CL1                 PARSE check
*
IFWORD   DS    CL1                 WORD check
*
GETCK    DS    CL1                 GET WORD check
*
GETCK2   DS    CL1                 GET REPLY ID  2nd check        GS54
*
GETID    DS    CL1                 GET REPLY ID check             GS54
*
GETID2   DS    CL1                 GET REPLY ID 2nd check         GS54
*
IFMSGID  DS    CL1                 IF MSGID check
*
IFMSGIDN DS    CL1                 IF MSGID NE check              GS56
*
MSGIDNE  DS    CL1                 IF MSGID NE switch             GS56
*
IFMSGPL  DS    CL1                 IF MSGID PLUS check
*
IFMSGPLN DS    CL1                 IF MSGID NE PLUS check         GS56
*
MSGPLNE  DS    CL1                 IF MSGID PLUS NE switch        GS56
*
IFSWEQ   DS    CL1                 IF SWTCH EQ check
*
IFSWNE   DS    CL1                 IF SWTCH NE check
*
IFSWON   DS    CL1                 IF SWTCH ON check
*
IFSWOFF  DS    CL1                 IF SWTCH OFF check
*
         DS    0F                  Alignment
*
SEQNO    DS    F                   Message sequence number        PJ01
*
MINORWAD DS    F                   Minor lines work area          PJ01
*
WORDLCMD DS    F                   Length of CMD word
*
PARSLCMD DS    F                   Length of PARSE word
*
WORDLMSG DS    F                   Length of MSG word
*
WORDLGET DS    F                   Length of GET word
*
SAVER7   DS    F                   Address of R7
*
ENDTABLE DS    F                   Address for end of table
*
CMDTABLE DS    CL100               Commands table
*
WORDCMD  DS    CL25                Save for CMD word
*
WORDMSG  DS    CL25                Save for MSG word
*
WORDGET  DS    CL44                Save for GET word              PJ03
*
CMDGET   DS    CL80                Save area for GET command
*
CMDGETID DS    CL80                Save area for GET ID command
*
CMDAT    DS    CL2                 Save area for REPLY ID         GS54
*
         DS    0F                  Alignment
*
MSGLEN   DS    Y                   Line 1 message length          PJ01
*
         DS    0F                  Alignment
*
MSGTXT   DS    CL253               Message text     length change PJ01
*
CMDSID   DS    CL8                 Command SYSID
*
TESTNN   DS    CL2                 Test area for not numeric
*
TSORPLST DS    0F                  TSOROUTE PARAMETER LIST         GG58
@CTXT    DS    F                     PARM 1 - @ CTXT               GG58
@CMD     DS    F                     PARM 2 - @ MPFXTALL COMMAND   GG58
*
         DS    0D                  Alignment
TOKENSW  DS    CL16                The token
NAMESW   DS    CL16                The name of the token
RENTCALR CALL  ,(SYSLVL,NAMESW,TOKENSW,RETCODE),MF=L
RENTCALD CALL  ,(SYSLVL,NAMESW,RETCODE),MF=L
RENTCALC CALL  ,(SYSLVL,NAMESW,TOKENSW,PERSOPT,RETCODE),MF=L
*
         DS    0D                  Alignment
TOKEN    DC    XL16'00'            The token
         ORG   TOKEN
ECSA_ADD DS    F                   ECSA address
ECSA_LEN DS    F                   Length of ECSA
         ORG
RETCODE  DC    F'0'                Return code from name token
*
RENTCALL CALL  ,(SYSLVL,NAME,TOKEN,RETCODE),MF=L
*
ESTAELST ESTAEX ,MF=L             ESTAE MF=L                       GG59
*
         IEZMGCR DSECT=NO
         ORG
         DS    0D
WORKSIZE EQU   *-WORKAREA          Size of the variable work area
**********************************************************************
         LTORG
MINORWRK DSECT ,                                                  PJ01
MINCHAIN DS    F                   Chain to Next Minor work area  PJ01
MINSAVE  DS    F                   R13 Dynamic area pointer       PJ01
MINSEQNO DS    F                   Message id for this work area  PJ01
MINORSZ  EQU   *-MINORWRK          Length of minor work area      PJ01
*        PRINT   GEN                                              GG58
         PRINT   ON,NOGEN                                         GG58
         IHAPSA  ,                 MAP PSA                        GG58
         IHASDWA ,                 MAP SDWA                       GG59
         IHAASCB ,                 MAP ASCB                       GG58
         IEANTASM                  Name token service declares
         IEZVX100
         CVT     DSECT=YES         The CVT
         END   MPFXTALL
