{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "EX31022", "INMTNODE": "SY1", "INMTUID": "EX31022", "INMFTIME": "20021210071350000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1175720, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 27920, "INMRECFM": "FB", "INMDIR": 11, "INMDSNAM": "EX31022.CCSD.SISPEXEC", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1175720, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1175720, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"EX31022.CCSD.SISPEXEC": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27920, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 128, "file_tape_blocksize": 3120, "DVAOPTS": 12304, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "020344", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\xc0\\x00\\x00\\x01'", "DS1LSTAR": "b'\\x00\\x14\\x06'", "DS1TRBAL": "b'\\x90\\x80'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f/\\x10\\x00\\x04\\x9a\\xc0@'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f/\\x10\\x00\\x04\\x9a\\xc0@'", "b'P\\xf40\\x88\\x00\\x00\\x01\\x8b\\x00\\x00\\x01\\x8c\\x00\\x0e\\x00\\x1e'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$CICCSD": {"ttr": 5125, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*---- REXX -- COPYRIGHT - 1999 -- CCSD ---- ISPF-DIALOG -----*/\n/*                                                            */\n/*     analyse CICS/ESA CSD                                   */\n/*                                                            */\n/*     Fritz Alber                                            */\n/*     Albstr. 19                                             */\n/*     D 72649 Wolfschlugen                                   */\n/*     TEL. 0049-7022/959234                                  */\n/*     FAX. 0049-7022/959236                                  */\n/*                                                            */\n/*     E-MAIL  : Alber\u00a7alber-edv.de                           */\n/*     INTERNET: www.alber-edv.de                             */\n/*                                                            */\n/*     Please customize section Ciccsd_parms to your values   */\n/*                                                            */\n/*------------------------------------------------------------*/\n\nCiccsd_Parms:            /*  -------- Start CCSD Parms ------ */\n                         /*  --------- JCL Parameters ------- */\nACCOUNT = '#ACCNT'       /*  Account Info for JOB card        */\nCLASS   = 'S'            /*  Job class                        */\nMSGCLASS= 'X'            /*  Job message class                */\nISPFHLQ = 'ISP'          /*  ISPFHLQ = HLQ for ISP system dsn */\n                         /*  Steplib for DFHCSDUP program     */\nSTEPLIB = 'EX31022.CCSD.SISPLOAD'\n                         /*  ------- End JCL Parameters ----- */\n                         /*  ----------- ISPF Parms --------- */\nCCSDHLQ = 'EX31022.CCSD' /* CCSDHLQ = HLQ FOR CCSD ISPF APPL */\n                         /*                                   */\nCCSDAPPL = CCSD          /*  ISPF Application name for CCSD   */\n                         /*  application                      */\nLLQCLIB  = SISPEXEC      /*  LOW LEVEL QUALIFIER for EXEC and */\n                         /*  CLISTS. Change to your value     */\nLLQMLIB  = SISPSENU      /*  LOW LEVEL QUALIFIER for  MESSAGES*/\n                         /*  Change to your value             */\nLLQPLIB  = SISPPENU      /*  LOW LEVEL QUALIFIER for  PANELS  */\n                         /*  Change to your value             */\nLLQSLIB  = SISPSENU      /*  LOW LEVEL QUALIFIER for  SKELS   */\n                         /*  Change to your value             */\nLLQTLIB  = SISPTENU      /*  LOW LEVEL QUALIFIER for  TABLE   */\n                         /*  INPUT. Change to your value      */\nLLQTABL  = SISPTENU      /*  LOW LEVEL QUALIFIER for  TABLE   */\n                         /*  OUTPUT. Change to your value     */\n                         /*  ------- End of ISPF Parms ------ */\nEnd_Ciccsd_Parms:        /*  ------ End of Ciccsd Parms ----- */\n\nADDRESS TSO\n\"ALTLIB ACTIVATE APPL(CLIST) DATASET('\"CCSDHLQ\".\"LLQCLIB\"')\"\n\nADDRESS ISPEXEC\n\"LIBDEF ISPMLIB DATASET ID('\"CCSDHLQ\".\"LLQMLIB\"') STACK\"\n\"LIBDEF ISPPLIB DATASET ID('\"CCSDHLQ\".\"LLQPLIB\"') STACK\"\n\"LIBDEF ISPSLIB DATASET ID('\"CCSDHLQ\".\"LLQSLIB\"') STACK\"\n\"LIBDEF ISPTLIB DATASET ID('\"CCSDHLQ\".\"LLQTLIB\"') STACK\"\n\"LIBDEF ISPTABL DATASET ID('\"CCSDHLQ\".\"LLQTABL\"') STACK\"\n\n\"SELECT CMD(CICCSD \" STEPLIB CCSDAPPL CCSDHLQ ,\n            LLQCLIB LLQMLIB LLQPLIB LLQSLIB LLQTLIB LLQTABL ,\n            ACCOUNT CLASS MSGCLASS ISPFHLQ REST\") ,\n            PASSLIB NEWAPPL(\"CCSDAPPL\")\"\n\n\"LIBDEF ISPMLIB\"\n\"LIBDEF ISPPLIB\"\n\"LIBDEF ISPSLIB\"\n\"LIBDEF ISPTLIB\"\n\"LIBDEF ISPTABL\"\n\nADDRESS TSO \"ALTLIB DEACTIVATE APPL(CLIST)\"\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$INSTALL": {"ttr": 5123, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "     --------- CICS CSD ---- ISPF application --------------------------\n\n     CCSD      This Application analyse the output from the\n               DFHCSDUP Extract Programm DFH$FORA\n               The application consist of 5 datasets.\n               Rexx library\n               Panel Library\n               Load  Library\n               Message and Skeleton Library\n               Table Libary\n\n               You have to change member $CICCSD in the Rexx library\n               See section/label Ciccsd_Parms thru End_Ciccsd_Parms.\n               Please change the following variables to your standards\n\n               ACCOUNT\n               CLASS\n               MSGCLASS\n               STEPLIB\n               ISPFHLQ\n               CCSDAPPL\n               CCSDHLQ\n               LLQCLIB\n               LLQPLIB\n               LLQMLIB\n               LLQSLIB\n               LLQTLIB\n               LLQTABL\n\n               After these changes you can execute procedure $CICCSD\n               First you'll see a selection panel to display\n               or create analyse tables.\n\n               If you have any problems, comments or improvements\n               please contact\n               Alber(at)alber-edv.de\n               If case of a problem please send the error message from\n               the ISPF application for further analysies\n\n     --------- SMF88    ---- ISPF application --------------------------\n\n     SMF       This Application analyse the output from the\n               IXGRPT1 utility.\n               The application consist of 5 datasets.\n               Rexx library\n               Panel Library\n               Load  Library\n               Message and Skeleton Library\n               Table Libary\n\n               You have to change member $SMF88 in the Rexx library\n               See section/label smf_Parms thru End_smf_Parms.\n               Please change the following variables to your standards\n\n               ACCOUNT\n               CLASS\n               MSGCLASS\n               ISPFHLQ\n               SMFAPPL\n               SMFHLQ\n               LLQCLIB\n               LLQPLIB\n               LLQMLIB\n               LLQSLIB\n               LLQTLIB\n               LLQTABL\n\n               After these changes you can execute procedure $SMF88\n               First you'll see a selection panel to display\n               or create analyse tables.\n\n               If you have any problems, comments or improvements\n               please contact\n               Alber(at)alber-edv.de\n               If case of a problem please send the error message from\n               the ISPF application for further analysies\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$SMF88": {"ttr": 4609, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*---- REXX -- COPYRIGHT - 1999 -- SMF8 ---- ISPF-DIALOG -----*/\n/*                                                            */\n/*     analyse SMF88 Records                                  */\n/*                                                            */\n/*     Fritz Alber                                            */\n/*     Albstr. 19                                             */\n/*     D 72649 Wolfschlugen                                   */\n/*     TEL. 0049-7022/959234                                  */\n/*     FAX. 0049-7022/959236                                  */\n/*                                                            */\n/*     E-MAIL  : Alber\u00a7alber-edv.de                           */\n/*     INTERNET: www.alber-edv.de                             */\n/*                                                            */\n/*     Please customize section smf88_parms to your values    */\n/*                                                            */\n/*------------------------------------------------------------*/\n\nsmf88_Parms:             /*  -------- Start SMF8 Parms ------ */\n                         /*  --------- JCL Parameters ------- */\nACCOUNT = '#ACCNT'       /*  Account Info for JOB card        */\nCLASS   = 'S'            /*  Job class                        */\nMSGCLASS= 'H'            /*  Job message class                */\nISPFHLQ = 'ISP'          /*  ISPFHLQ = HLQ for ISP system dsn */\n                         /*  ------- End JCL Parameters ----- */\n                         /*  ----------- ISPF Parms --------- */\nSMFHLQ = 'S005.CICCSD'   /*  SMFHLQ = HLQ FOR SMF ISPF APPL   */\n                         /*                                   */\nSMFAPPL  = SMF           /*  ISPF Application name for SMF    */\n                         /*  application                      */\nLLQCLIB  = SISPEXEC      /*  LOW LEVEL QUALIFIER for EXEC and */\n                         /*  CLISTS. Change to your value     */\nLLQMLIB  = SISPSENU      /*  LOW LEVEL QUALIFIER for  MESSAGES*/\n                         /*  Change to your value             */\nLLQLOAD  = SISPLOAD      /*  LOW LEVEL QUALIFIER for programs */\n                         /*  Change to your value             */\nLLQPLIB  = SISPPENU      /*  LOW LEVEL QUALIFIER for  PANELS  */\n                         /*  Change to your value             */\nLLQSLIB  = SISPSENU      /*  LOW LEVEL QUALIFIER for  SKELS   */\n                         /*  Change to your value             */\nLLQTLIB  = SISPTENU      /*  LOW LEVEL QUALIFIER for  TABLE   */\n                         /*  INPUT. Change to your value      */\nLLQTABL  = SISPTENU      /*  LOW LEVEL QUALIFIER for  TABLE   */\n                         /*  OUTPUT. Change to your value     */\n                         /*  ------- End of ISPF Parms ------ */\nEnd_smf88_Parms:         /*  ------ End of smf88  Parms ----- */\n\nADDRESS TSO\n\"ALTLIB ACTIVATE APPL(CLIST) DATASET('\"SMFHLQ\".\"LLQCLIB\"')\"\n\nADDRESS ISPEXEC\n\"LIBDEF ISPMLIB DATASET ID('\"SMFHLQ\".\"LLQMLIB\"') STACK\"\n\"LIBDEF ISPPLIB DATASET ID('\"SMFHLQ\".\"LLQPLIB\"') STACK\"\n\"LIBDEF ISPSLIB DATASET ID('\"SMFHLQ\".\"LLQSLIB\"') STACK\"\n\"LIBDEF ISPTLIB DATASET ID('\"SMFHLQ\".\"LLQTLIB\"') STACK\"\n\"LIBDEF ISPTABL DATASET ID('\"SMFHLQ\".\"LLQTABL\"') STACK\"\n\n\"SELECT CMD(SMF88000 \" SMFAPPL SMFHLQ ,\n            LLQCLIB LLQMLIB LLQPLIB LLQSLIB LLQTLIB LLQTABL ,\n            ACCOUNT CLASS MSGCLASS ISPFHLQ LLQLOAD\") ,\n            PASSLIB NEWAPPL(\"SMFAPPL\")\"\n\n\"LIBDEF ISPMLIB\"\n\"LIBDEF ISPPLIB\"\n\"LIBDEF ISPSLIB\"\n\"LIBDEF ISPTLIB\"\n\"LIBDEF ISPTABL\"\n\nADDRESS TSO \"ALTLIB DEACTIVATE APPL(CLIST)\"\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICCMD00": {"ttr": 3591, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : create CSD report                          */\n/*---------------------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\ncsdname= 'YOUR.CSD.NAME'\nobject = MyList\nOtype  = List\nG      = 'B'\n\nSTART:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(ciccmd00)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 ciccmd00 ciccmd00 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN DO\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nO = substr(otype,1,1)\n\nSELECT\n WHEN O = 'G' then type = GROUP\n WHEN O = 'L' then type = LIST\n otherwise    signal start\nend\n\ncmd   = 'EXTRACT ' || type || '(' || object || ') OBJECTS'\n\nT = D\n\nSTART2:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(ciccmd01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 ciccmd00 ciccmd01 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN DO\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nif T \u00ac= 'D' & T \u00ac= 'E' then signal start2\n\nCMD  = CMD || \" USERPROGRAM(DFH$FORA)\"\n\nif g = 'B'\nthen do\n  call ciccmd03 g t csdname object cmd\nend\nelse do\n  call ciccmd01 g t csdname object cmd\nend\n\ncmd   = ' '\n\nSIGNAL START\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICCMD01": {"ttr": 4353, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for CICS CSD           */\n/* struktur   : Structure for different  CSD Entries       */\n/*              see   SDFHSAMP Member DFH$SQLT             */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg g t csdname object cmd\n\nif g = 'O'\nthen do\n  \"ALLOC DD(SYSIN) NEW LRECL(80) SPACE (1 1) TRACKS REUSE UNIT(SYSALLDA)\n                   RECFM(F)  BLKSIZE(80)\"\n  QUEUE   CMD\n  \"execio 1 diskw sysin (finis\"\nend\n\n\"ISPEXEC VGET (CCSDHLQ) PROFILE\"\n\n\"ALLOC DD(DFHCSD)   DSN('\"csdname\"') SHR REUSE\"\n\n\"ALLOC DD(FOROUT)   NEW SP(10,10) CYL UNIT(SYSALLDA)\"\n\"ALLOC DD(SYSPRINT) NEW SP(1,1) TRACKS\n                    RECFM(F B A) LRECL(121) BLKSIZE(1210)\"\n\n/*---------------------------------------------------------*/\n/* Main loop to process DFHCSD                             */\n/*---------------------------------------------------------*/\n\n\"ispexec vget steplib\"\n\nsay   \"CICS/TS 1.3 selected DFHCSDUP\"\n\"call '\"STEPLIB\"(DFHCSDUP)'\"\n\ncrc = rc\n\nif crc > 0\nthen do\n  \"execio * diskr sysprint(stem y. finis\"\n  do i = 1 to y.0\n   if y.i \u00ac= \" \" then say y.i\n  end\nend\n\n\"execio * diskr forout(stem x. finis\"\n\"free f(forout)\"\n\"free f(sysin)\"\n\"free f(dfhcsd)\"\n\"free f(sysprint)\"\n\nif crc > 4 then exit\n\nif T = 'D'\nthen do\n  \"ISPEXEC TBERASE CICCMD00\"\n  \"ISPEXEC TBCREATE CICCMD00 KEYS (CMD) NAMES(T G RDATE RTIME)\"\n  \"ISPEXEC TBERASE CICTCONN\"\n  \"ISPEXEC TBCREATE CICTCONN KEYS (CONN GROUP)\n   NAMES( DESC NETNAME ACME SIN AUTO INS ATTSEC BIS DFU)\"\n  \"ISPEXEC TBERASE CICTDB2C\"\n  \"ISPEXEC TBCREATE CICTDB2C KEYS (DB2CONN GROUP)\n   NAMES( DESC COERR DB2I MSGQ STAQ TCBL AUTHID AUTHT PLAN PLANEXIT\n   PRI THRL THRW COMATID COMAUTYP)\"\n  \"ISPEXEC TBERASE CICTDB2E\"\n  \"ISPEXEC TBCREATE CICTDB2E KEYS (DB2ENTRY GROUP)\n   NAMES( DESC TRAN AUTHID AUTHTY RLB PLAN PLANEXIT PRI PRN THRL THRW)\"\n  \"ISPEXEC TBERASE CICTDB2T\"\n  \"ISPEXEC TBCREATE CICTDB2T KEYS (DB2TRAN  GROUP)\n   NAMES( DESC DB2ENTRY TRAN)\"\n  \"ISPEXEC TBERASE CICTDOCT\"\n  \"ISPEXEC TBCREATE CICTDOCT KEYS (DOCTEMPL GROUP)\n   NAMES( DESC TEMPNAME FILE TSQUEUE TDQUEUE PROGRAM EXITPGM DDNAME)\"\n  \"ISPEXEC TBERASE CICTENQM\"\n  \"ISPEXEC TBCREATE CICTENQM KEYS (ENQMODEL GROUP)\n   NAMES( DESC ENQS STATUS ENQNAME)\"\n  \"ISPEXEC TBERASE CICTFILE\"\n  \"ISPEXEC TBCREATE CICTFILE KEYS (FILE GROUP)\n   NAMES( DESC DSNA LSR STR REMS REMN RECSZ KEYL STATUS OPEN DISP DAB\n   INB RF ABDRU JO JNL JNLU JNLA RECOV BATYP)\"\n  \"ISPEXEC TBERASE CICTGRP\"\n  \"ISPEXEC TBCREATE CICTGRP KEYS (GROUP OBJECT)\n   NAMES(LIST)\"\n  \"ISPEXEC TBERASE CICTJOUR\"\n  \"ISPEXEC TBCREATE CICTJOUR KEYS (JRNMODEL GROUP)\n   NAMES( JRNLNAME TYPE STRMNAME)\"\n  \"ISPEXEC TBERASE CICTLIST\"\n  \"ISPEXEC TBCREATE CICTLIST KEYS (OBJECT) NAMES(CSDNAME)\"\n  \"ISPEXEC TBERASE CICTLSRP\"\n  \"ISPEXEC TBCREATE CICTLSRP KEYS (LSRP GROUP)\n   NAMES( DESC LID MKL SHL STR D512 D1K D2K D4K D8K D12K D16K D32K I512\n   I1K I2K I4K I8K HD4K HD8K HD16K HD32K HI4K HI8K)\"\n  \"ISPEXEC TBERASE CICTMAPS\"\n  \"ISPEXEC TBCREATE CICTMAPS KEYS (MAPSET GROUP)\n   NAMES(DESC LANG RES USAGE ULPA STATUS)\"\n  \"ISPEXEC TBERASE CICTOBJ\"\n  \"ISPEXEC TBCREATE CICTOBJ KEYS(OBJ GROUP OBJNAME)\n   NAMES(CSDNAME)\"\n  \"ISPEXEC TBERASE CICTOBJ2\"\n  \"ISPEXEC TBCREATE CICTOBJ2 KEYS(OBJ GROUP OBJNAME OBJECT)\n   NAMES(CSDNAME)\"\n  \"ISPEXEC TBERASE CICTPART\"\n  \"ISPEXEC TBCREATE CICTPART KEYS (PARTSET GROUP)\n   NAMES( DESC RES USAGE ULP STATUS)\"\n  \"ISPEXEC TBERASE CICTPTNR\"\n  \"ISPEXEC TBCREATE CICTPTNR KEYS (PARTNER GROUP)\n   NAMES( DESC NETNAME NETWORK PROFILE TPNAME XTPNAME)\"\n  \"ISPEXEC TBERASE CICTPROC\"\n  \"ISPEXEC TBCREATE CICTPROC KEYS (PROCTYP GROUP)\n   NAMES( DESC STATUS FILE AUDITLOG AUDITLVL)\"\n  \"ISPEXEC TBERASE CICTPROF\"\n  \"ISPEXEC TBCREATE CICTPROF KEYS (PROF GROUP)\n   NAMES( DESC SCRNSIZE UCTRAN INBFMH)\"\n  \"ISPEXEC TBERASE CICTPROG\"\n  \"ISPEXEC TBCREATE CICTPROG KEYS (PROGRAM GROUP)\n   NAMES(DESC LANG REL RES USAGE ULPA STATUS CEDF DATLOC EKEY REMS\n   REMOTEN TRANSID EXECUT AKZ ANZAP)\"\n  \"ISPEXEC TBERASE CICTREQU\"\n  \"ISPEXEC TBCREATE CICTREQU KEYS (REQUMOD GROUP)\n   NAMES( DESC OMGMOD OMGINT OMGOPER TRAN)\"\n  \"ISPEXEC TBERASE CICTSESS\"\n  \"ISPEXEC TBCREATE CICTSESS KEYS (SESS GROUP)\n   NAMES( DESC CONN PROT RP RC SP SC SSZ RSZ OPP OPS USERID AUT INS UAL\n   IOL)\"\n  \"ISPEXEC TBERASE CICTTCPI\"\n  \"ISPEXEC TBCREATE CICTTCPI KEYS (TCPIPSRV GROUP)\n   NAMES( DESC URM PORT STATUS TRAN IPADDR)\"\n  \"ISPEXEC TBERASE CICTTDQU\"\n  \"ISPEXEC TBCREATE CICTTDQU KEYS (TDQUEUE GROUP)\n   NAMES( DESC TYPE DDNAME DSNAME SC RECS RECF TRAN TRI UERID REMOTEN)\"\n  \"ISPEXEC TBERASE CICTTERM\"\n  \"ISPEXEC TBCREATE CICTTERM KEYS (TERM GROUP)\n   NAMES( DESC AUTM AUTNAME TYPE NETNAME CONS USERID ATTACH USEDFLT)\"\n  \"ISPEXEC TBERASE CICTTRCL\"\n  \"ISPEXEC TBCREATE CICTTRCL KEYS (TRCL GROUP)\n   NAMES( DESC MAXACT PURTHR)\"\n  \"ISPEXEC TBERASE CICTTRAN\"\n  \"ISPEXEC TBCREATE CICTTRAN KEYS (TRAN GROUP)\n   NAMES( DESC PROGRAM TWASZ PROFILE DLOC DKEY STO ISO DYN REMS REMN\n   TRANCLAS AKZ ANZAT)\"\n  \"ISPEXEC TBERASE CICTTSQM\"\n  \"ISPEXEC TBCREATE CICTTSQM KEYS (TSMODEL GROUP)\n   NAMES( DESC prefix location rec sec poolname resys)\"\n  \"ISPEXEC TBERASE CICTTYPE\"\n  \"ISPEXEC TBCREATE CICTTYPE KEYS (TYPE GROUP)\n   NAMES( DESC DEVICE TER SHIP PAG DEFSC SENDS RECES USER IOAREA\n   UCTRAN)\"\nend\nelse do\n  \"ISPEXEC TBOPEN CICCMD00\"\n  \"ISPEXEC TBOPEN CICTCONN\"\n  \"ISPEXEC TBOPEN CICTDB2C\"\n  \"ISPEXEC TBOPEN CICTDB2E\"\n  \"ISPEXEC TBOPEN CICTDB2T\"\n  \"ISPEXEC TBOPEN CICTDOCT\"\n  \"ISPEXEC TBOPEN CICTENQM\"\n  \"ISPEXEC TBOPEN CICTFILE\"\n  \"ISPEXEC TBOPEN CICTGRP \"\n  \"ISPEXEC TBOPEN CICTJOUR\"\n  \"ISPEXEC TBOPEN CICTLIST\"\n  \"ISPEXEC TBOPEN CICTLSRP\"\n  \"ISPEXEC TBOPEN CICTMAPS\"\n  \"ISPEXEC TBOPEN CICTOBJ\"\n  \"ISPEXEC TBOPEN CICTOBJ2\"\n  \"ISPEXEC TBOPEN CICTPART\"\n  \"ISPEXEC TBOPEN CICTPTNR\"\n  \"ISPEXEC TBOPEN CICTPROC\"\n  \"ISPEXEC TBOPEN CICTPROF\"\n  \"ISPEXEC TBOPEN CICTPROG\"\n  \"ISPEXEC TBOPEN CICTREQU\"\n  \"ISPEXEC TBOPEN CICTSESS\"\n  \"ISPEXEC TBOPEN CICTTCPI\"\n  \"ISPEXEC TBOPEN CICTTDQU\"\n  \"ISPEXEC TBOPEN CICTTERM\"\n  \"ISPEXEC TBOPEN CICTTRCL\"\n  \"ISPEXEC TBOPEN CICTTRAN\"\n  \"ISPEXEC TBOPEN CICTTSQM\"\n  \"ISPEXEC TBOPEN CICTTYPE\"\nend\n\nrtime = time()\nrdate = date()\nakz   = 'N'\nanzat = 0\nanzap = 0\n\n\"ISPEXEC TBADD CICCMD00\"\n\"ISPEXEC TBADD CICTLIST\"\n\ndo i = 1 to x.0\n  recordtype= substr(x.i,1,4)\n  group     = substr(x.i,13,8)\n  obj       = substr(x.i,5,8)\n  objname   = \"unknown\"\n  \"ISPEXEC TBADD CICTGRP\"\n  select\n    when recordtype= 'CONN'\n    then do\n      call conn_record\n    end\n    when recordtype= 'DB2C'\n    then do\n      call db2c_record\n    end\n    when recordtype= 'DB2E'\n    then do\n      call db2c_record\n    end\n    when recordtype= 'PROG'\n    then do\n      call prog_record\n    end\n    when recordtype= 'TRAN'\n    then do\n      call tran_record\n    end\n    when recordtype= 'TRCL'\n    then do\n      call trcl_record\n    end\n    when recordtype= 'TERM'\n    then do\n      call term_record\n    end\n    when recordtype= 'TYPE'\n    then do\n      call type_record\n    end\n    when recordtype= 'PROF'\n    then do\n      call prof_record\n    end\n    when recordtype= 'MAPS'\n    then do\n      call maps_record\n    end\n    when recordtype= 'SESS'\n    then do\n      call sess_record\n    end\n    when recordtype= 'LSRP'\n    then do\n      call lsrp_record\n    end\n    when recordtype= 'FILE'\n    then do\n      call file_record\n    end\n    when recordtype= 'TDQU'\n    then do\n      call tdqu_record\n    end\n    otherwise\n  end\n  \"ispexec tbadd cictobj\"\n  \"ispexec tbadd cictobj2\"\nend\n\n\"ISPEXEC TBCLOSE CICCMD00\"\n\"ISPEXEC TBSORT  CICTCONN FIELDS(CONN,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTCONN\"\n\"ISPEXEC TBSORT  CICTDB2C FIELDS(DB2CONN,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTDB2C\"\n\"ISPEXEC TBSORT  CICTDB2E FIELDS(DB2ENTRY,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTDB2E\"\n\"ISPEXEC TBSORT  CICTDB2T FIELDS(DB2TRAN,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTDB2T\"\n\"ISPEXEC TBSORT  CICTDOCT FIELDS(DOCTEMPL,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTDOCT\"\n\"ISPEXEC TBSORT  CICTENQM FIELDS(ENQMODEL,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTENQM\"\n\"ISPEXEC TBSORT  CICTFILE FIELDS(FILE,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTFILE\"\n\"ISPEXEC TBSORT  CICTGRP FIELDS(GROUP,C,A,OBJECT)\"\n\"ISPEXEC TBCLOSE CICTGRP\"\n\"ISPEXEC TBSORT  CICTJOUR FIELDS(JRNMODEL,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTJOUR\"\n\"ISPEXEC TBSORT  CICTLIST FIELDS(OBJECT,C,A)\"\n\"ISPEXEC TBCLOSE CICTLIST\"\n\"ISPEXEC TBSORT  CICTLSRP FIELDS(LSRP,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTLSRP\"\n\"ISPEXEC TBSORT  CICTMAPS FIELDS(MAPSET,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTMAPS\"\n\"ISPEXEC TBSORT  CICTOBJ FIELDS(OBJ,C,A,GROUP,C,A,OBJNAME)\"\n\"ISPEXEC TBCLOSE CICTOBJ\"\n\"ISPEXEC TBSORT  CICTOBJ2 FIELDS(OBJ,C,A,GROUP,C,A,OBJNAME,C,A,OBJECT)\"\n\"ISPEXEC TBCLOSE CICTOBJ2\"\n\"ISPEXEC TBSORT  CICTPART FIELDS(PARTSET,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTPART\"\n\"ISPEXEC TBSORT  CICTPTNR FIELDS(PARTNER,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTPTNR\"\n\"ISPEXEC TBSORT  CICTPROC FIELDS(PROCTYP,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTPROC\"\n\"ISPEXEC TBSORT  CICTPROF FIELDS(PROF,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTPROF\"\n\"ISPEXEC TBSORT  CICTPROG FIELDS(PROGRAM,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTPROG\"\n\"ISPEXEC TBSORT  CICTREQU FIELDS(REQUMOD,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTREQU\"\n\"ISPEXEC TBSORT  CICTSESS FIELDS(SESS,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTSESS\"\n\"ISPEXEC TBSORT  CICTTCPI FIELDS(TCPIPSRV,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTTCPI\"\n\"ISPEXEC TBSORT  CICTTDQU FIELDS(TDQUEUE,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTTDQU\"\n\"ISPEXEC TBSORT  CICTTERM FIELDS(TERM,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTTERM\"\n\"ISPEXEC TBSORT  CICTTRCL FIELDS(TRCL,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTTRCL\"\n\"ISPEXEC TBSORT  CICTTRAN FIELDS(TRAN,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTTRAN\"\n\"ISPEXEC TBSORT  CICTTSQM FIELDS(TSMODEL,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTTSQM\"\n\"ISPEXEC TBSORT  CICTTYPE FIELDS(TYPE,C,A,GROUP)\"\n\"ISPEXEC TBCLOSE CICTTYPE\"\n\nexit\n\nprog_record:\n\nobjname    = 'Program'\nprogram    = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\nlang       = substr(x.i,79,08)\nrel        = substr(x.i,88,03)\nres        = substr(x.i,91,03)\nusage      = substr(x.i,94,09)\nulpa       = substr(x.i,103,03)\nstatus     = substr(x.i,106,08)\ncedf       = substr(x.i,114,03)\ndatloc     = substr(x.i,117,05)\nekey       = substr(x.i,122,04)\nrems       = substr(x.i,139,04)\nremoten    = substr(x.i,143,08)\ntransid    = substr(x.i,151,04)\nexecut     = substr(x.i,155,08)\n\n\"ispexec tbmod cictprog\"\n\nreturn\n\nmaps_record:\n\nobjname    = 'Mapset'\nmapset     = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\nres        = substr(x.i,79,03)\nusage      = substr(x.i,82,09)\nulpa       = substr(x.i,91,03)\nstatus     = substr(x.i,94,08)\n\n\"ispexec tbmod cictmaps\"\n\nreturn\n\ntran_record:\n\nobjname    = 'Transaction'\ntran       = substr(x.i,5,4)\ndesc       = substr(x.i,21,58)\nprogram    = substr(x.i,79,8)\ntwasz      = substr(x.i,87,05)\nprofile    = substr(x.i,92,08)\ndloc       = substr(x.i,116,5)\ndkey       = substr(x.i,121,04)\nsto        = substr(x.i,125,03)\niso        = substr(x.i,143,03)  /* v330 na    */\ndyn        = substr(x.i,146,03)  /* v330 na    */\nrems       = substr(x.i,149,04)  /* v330 128,4 */\nremn       = substr(x.i,153,04)  /* v330 132,4 */\ntranclas   = substr(x.i,175,08)  /* v330 na    */\n\n\"ispexec tbmod cicttran\"\n\nreturn\n\ntrcl_record:\n\nobjname    = 'TranClass'\ntrcl       = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\nmaxact     = substr(x.i,79,2)\npurthr     = substr(x.i,82,03)\n\n\"ispexec tbmod cicttrcl\"\n\nreturn\n\nterm_record:\n\nobjname    = 'Terminal'\nterm       = substr(x.i,5,4)\ndesc       = substr(x.i,21,58)\nautm       = substr(x.i,79,4)\nautname    = substr(x.i,83,8)\ntype       = substr(x.i,91,08)\nnetname    = substr(x.i,99,08)\ncons       = substr(x.i,107,3)\nuserid     = substr(x.i,169,08)\nattach     = substr(x.i,196,10)\nusedflt    = substr(x.i,209,03)\n\n\"ispexec tbmod cictterm\"\n\nreturn\n\ntype_record:\n\nobjname    = 'TypeTerm'\ntype       = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\ndevice     = substr(x.i,79,8)\nter        = substr(x.i,87,1)\nship       = substr(x.i,104,3)\npag        = substr(x.i,107,7)\ndefsc      = substr(x.i,131,14)\nsends      = substr(x.i,234,05)\nreces      = substr(x.i,239,05)\nuser       = substr(x.i,327,03)\nioarea     = substr(x.i,330,11)\nuctran     = substr(x.i,341,06)\n\n\"ispexec tbmod cicttype\"\n\nreturn\n\nprof_record:\n\nobjname    = 'Profile'\nprof       = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\nScrnsize   = substr(x.i,79,9)\nuctran     = substr(x.i,88,3)\ninbfmh     = substr(x.i,129,4)\n\n\"ispexec tbmod cictprof\"\n\nreturn\n\nconn_record:\n\nobjname    = 'Connection'\nconn       = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\nnetname    = substr(x.i,79,8)\nacme       = substr(x.i,107,8)\nsin        = substr(x.i,127,3)\nauto       = substr(x.i,148,3)\nins        = substr(x.i,151,3)\nattsec     = substr(x.i,162,10)\nbis        = substr(x.i,172,03)\ndfu        = substr(x.i,175,03)\n\n\"ispexec tbmod cictconn\"\n\nreturn\n\ndb2c_record:\n\nobjname    = \"DB2-Connection\"\ndb2conn    = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\n\n\"ispexec tbmod cictdb2c\"\n\nreturn\n\ndb2e_record:\n\ndb2entry   = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\n\n\"ispexec tbmod cictdb2e\"\n\nreturn\n\nsess_record:\n\nobjname    = 'Session'\nsess       = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\nconn       = substr(x.i,79,4)\nprot       = substr(x.i,103,4)\nrp         = substr(x.i,114,1)\nrc         = substr(x.i,115,3)\nsp         = substr(x.i,119,1)\nsc         = substr(x.i,120,3)\nssz        = substr(x.i,123,05)\nrsz        = substr(x.i,128,05)\naut        = substr(x.i,145,03)\nins        = substr(x.i,148,03)\niol        = substr(x.i,153,11)\n\n\"ispexec tbmod cictsess\"\n\nreturn\n\nlsrp_record:\n\nobjname    = \"LSRpool\"\nlsrp       = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\nlid        = substr(x.i,79,1)\nmkl        = substr(x.i,080,3)\n\n\"ispexec tbmod cictlsrp\"\n\nreturn\n\nfile_record:\n\nobjname    = \"File\"\nfile       = substr(x.i,5,8)\ndesc       = substr(x.i,21,58)\ndsna       = substr(x.i,79,44)\nlsr        = substr(x.i,134,1)\nstr        = substr(x.i,156,3)\njo         = substr(x.i,276,2)\n\n\"ispexec tbmod cictfile\"\n\nreturn\n\ntdqu_record:\n\nobjname    = \"TdQueue\"\n\n\"ispexec tbmod cicttdqu\"\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICCMD02": {"ttr": 263, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICCMD00 NOWRITE\"\n\ntable = CICCMD00\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\n\"ISPEXEC TBDISPL \" table \" PANEL(CICCMD02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICCMD02 CICCMD02 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nif rc > 0\nthen do\n  \"ISPEXEC TBEND CICCMD00\"\n  exit\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICCMD03": {"ttr": 3841, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   trace ?r\n*/\n\nARG g t csdname object cmd\n\ndsname   = listdsi(ISPPROF FILE)\n\nif dsname = 16\nthen do\n  JCLLIB   = USERID()||.ISPF.ISPPROF\nend\nelse do\n  jcllib   = sysdsname\nend\n\nUSERHLQ = USERID()\n\n\"ALLOC DD(ISPFILE) DSN('\"JCLLIB\"') SHR REUSE\"\n\n\"ISPEXEC VGET (STEPLIB CCSDAPPL)\"\n\"ISPEXEC VGET (CCSDHLQ LLQCLIB LLQMLIB LLQPLIB LLQSLIB LLQTLIB LLQTABL)\"\n\"ISPEXEC VGET (ACCOUNT CLASS MSGCLASS ISPFHLQ)\"\n\n\"ISPEXEC FTCLOSE NAME(CICSJCL)\"\n\n\"ISPEXEC FTOPEN\"\n\nif rc > 0\nthen do\n  select\n    when rc = 8\n    then do\n      MESS2 = \"file tailoring already in progress\"\n    end\n    when rc = 12\n    then do\n      MESS2 = \"output file in use. ENQ failed\"\n    end\n    when rc = 16\n    then do\n      MESS2 = \"ISPFILE not allocated\"\n    end\n    when rc = 20\n    then do\n      MESS2 = \"severe error\"\n    end\n    otherwise\n  end\n  MESS1 = \"error FTOPEN\"\n  MESS3 = \"returncode = \" || rc\n  MESS4 = \"Procedur = CICSSUBP\"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC FTCLOSE\"\n  signal free_file\nend\n\n\"ISPEXEC FTINCL CICSJCL\"\n\nif rc > 0\nthen do\n  select\n    when rc = 8\n    then do\n      MESS1 = \"output skeleton not defined\"\n    end\n    when rc = 12\n    then do\n      MESS1 = \"output skeleton in use. ENQ failed\"\n    end\n    when rc = 16\n    then do\n      MESS1 = \"data truncation occured\"\n    end\n    when rc = 20\n    then do\n      MESS1 = \"severe error\"\n    end\n    otherwise\n  end\n  MESS2 = \"please contact system support\"\n  MESS3 = \"skeleton = \" || CICSJCL\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(COB0000)\"\n  \"ISPEXEC FTCLOSE\"\n  \"ISPEXEC REMPOP\"\n  signal ende\nend\n\n\"ISPEXEC FTCLOSE NAME(CCSDJOB0)\"\n\n\"ISPEXEC EDIT DATASET('\"JCLLIB\"(CCSDJOB0)')\"\n\nende:\n\"ISPEXEC FTERASE CCSDJOB0\"\n\nfree_file:\n\"FREE DD(ISPFILE)\"\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICCON00": {"ttr": 265, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTCONN\"\n\"ISPEXEC TBOPEN CICTCONN NOWRITE\"\n\ncall ciccon01 AL cictconn \"all connection entries\"\n\n\"ISPEXEC TBEND CICTCONN\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICCON01": {"ttr": 267, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICCON01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 ciccon01 ciccon01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  CALL    CICCON02 KZ table CICCON01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICCON01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      term  = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(conn) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'S' then call cicses08 'CONN' conn group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICCON02": {"ttr": 2565, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD programm information       */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICCON02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 CICCON02 CICCON02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=VT\n  when zcmd = 2 THEN CSEL=IR\n  when zcmd = 3 THEN CSEL=XM\n  when zcmd = 4 THEN CSEL=SN\n  when zcmd = 5 THEN CSEL=SY\n  when zcmd = 6 THEN CSEL=AN\n  when zcmd = 7 THEN CSEL=AY\n  when zcmd = 8 THEN CSEL=IN\n  when zcmd = 9 THEN CSEL=IY\n  when zcmd = 10 THEN CSEL=LA\n  when zcmd = 11 THEN CSEL=IA\n  when zcmd = 12 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = VT\n  then do\n    fieldn  = \"ACME\"\n    fieldv  = 'VTAM*'\n  end\n  WHEN CSEL = IR\n  then do\n    fieldn  = \"ACME\"\n    fieldv  = 'IRC*'\n  end\n  WHEN CSEL = XM\n  then do\n    fieldn  = \"ACME\"\n    fieldv  = 'XM*'\n  end\n  WHEN CSEL = SN\n  then do\n    fieldn  = \"SIN\"\n    fieldv  = 'NO*'\n  end\n  WHEN CSEL = SY\n  then do\n    fieldn  = \"SIN\"\n    fieldv  = 'YES'\n  end\n  WHEN CSEL = AN\n  then do\n    fieldn  = \"AUTO\"\n    fieldv  = 'NO*'\n  end\n  WHEN CSEL = AY\n  then do\n    fieldn  = \"AUTO\"\n    fieldv  = 'YES'\n  end\n  WHEN CSEL = IN\n  then do\n    fieldn  = \"INS\"\n    fieldv  = 'NO*'\n  end\n  WHEN CSEL = IY\n  then do\n    fieldn  = \"INS\"\n    fieldv  = 'YES'\n  end\n  WHEN CSEL = LA\n  then do\n    fieldn  = \"ATTSEC\"\n    fieldv  = 'LOCAL*'\n  end\n  WHEN CSEL = IA\n  then do\n    fieldn  = \"ATTSEC\"\n    fieldv  = 'IDENT*'\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = CICCON||csel\n\ncall value fieldn,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"fieldn\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(CONN GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN\" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn || \" = \" || fieldv\n  MESS3 = \" \"\n  MESS4 = \" \"\n  MESS5 = \" \"\n  MESS6 = \" \"\n  MESS7 = \" \"\n  MESS8 = \" \"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Connection \" fieldn \" = \" fieldv\n\ncall CICCON01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\ncsel = \" \"\n\nsignal start\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICCON08": {"ttr": 269, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv gr\n\nfieldv = strip(fieldv)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTCONN NOWRITE SHARE\"\n\nORC = RC\n\n\"ISPEXEC TBTOP    CICTCONN\"\n\"ISPEXEC TBVCLEAR CICTCONN\"\n\ncall value fieldn,fieldv\n\ntabname = ciccon08\n\n\"ISPEXEC TBQUERY CICTCONN NAMES(TNAMES)\"\n\"ISPEXEC TBSARG CICTCONN NEXT NAMECOND(\"fieldn\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(CONN GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN CICTCONN\"\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF ORC = 0 THEN \"ISPEXEC TBEND CICTCONN\"\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = fieldn\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Connections \" fieldn \" = \" fieldv\n\ncall ciccon01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICCON09": {"ttr": 4099, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG CONN GROUP OBJNAME\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\ntabname = ciccon09\n\n\"ISPEXEC TBOPEN CICTCONN NOWRITE SHARE\"\n\nORC = RC\n\n\"ISPEXEC TBGET CICTCONN\"\n\n\"ISPEXEC TBQUERY CICTCONN NAMES(TNAMES)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(CONN GROUP) NOWRITE NAMES\"TNAMES\n\nIF ORC = 0 THEN \"ISPEXEC TBEND CICTCONN\"\n\n\"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\nausw = \"Connection = \" conn\n\ncall ciccon01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICCSD": {"ttr": 3589, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display CSD selection menu                 */\n/*---------------------------------------------------------*/\n/*\n    trace ?r\n*/\n\narg steplib  ,              /* steplib for DFCSDUP pgm       */\n    ccsdappl ,              /* applname for ccsd application */\n    ccsdhlq  ,              /* hlq for ccsd datasets         */\n    llqclib  ,              /* llq for exec und clist        */\n    llqmlib  ,              /* llq for mlib                  */\n    llqplib  ,              /* llq for plib                  */\n    llqslib  ,              /* llq for slib                  */\n    llqtlib  ,              /* llq for tlib                  */\n    llqtabl  ,              /* llq tabl                      */\n    account  ,\n    class    ,\n    msgclass ,\n    ispfhlq  ,\n    rest\n\n\"ISPEXEC VPUT (STEPLIB CCSDAPPL CCSDHLQ) PROFILE\"\n\"ISPEXEC VPUT (LLQCLIB LLQMLIB LLQPLIB LLQSLIB LLQTLIB LLQTABL) PROFILE\"\n\"ISPEXEC VPUT (ACCOUNT CLASS MSGCLASS ISPFHLQ REST) PROFILE\"\n\"ISPEXEC VGET ZAPPLID\"\n\nPROFILE  = ZAPPLID||PROF\n\n\"ISPEXEC TBSAVE\" PROFILE\" LIBRARY(ISPTABL)\"\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nSTART:\n\"ISPEXEC DISPLAY PANEL(CICCSD)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 ciccsd cicsd RC\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  EXIT\nend\n\nselect\n  when zcmd = 1 THEN CALL CICCMD00\n  WHEN zcmd = 2 THEN CALL CICCMD02\n  when zcmd = 3 THEN CALL CICPRG00\n  WHEN zcmd = 4 THEN CALL CICTRN00\n  WHEN zcmd = 5 THEN CALL CICTRM00\n  WHEN zcmd = 6 THEN CALL CICTYP00\n  WHEN zcmd = 7 THEN CALL CICPRF00\n  WHEN zcmd = 8 THEN CALL CICMAP00\n  WHEN zcmd = 9 THEN CALL CICSES00\n  WHEN zcmd =10 THEN CALL CICCON00\n  WHEN zcmd =11 THEN CALL CICFIL00\n  WHEN zcmd =12 THEN CALL CICLSR00\n  WHEN zcmd =13 THEN CALL CICGRP00\n  WHEN zcmd =14 THEN CALL CICOBJ00\n  WHEN zcmd =15 THEN CALL CICOB200\n  WHEN zcmd =16 THEN CALL CICLST00\n  WHEN zcmd =17 THEN CALL CICTCL00\n  otherwise\nend\n\nSIGNAL START\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICFIL00": {"ttr": 271, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTFILE\"\n\"ISPEXEC TBOPEN CICTFILE NOWRITE\"\n\ncall CICFIL01 AL cictfile \"all file entries\"\n\n\"ISPEXEC TBEND CICTFILE\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICFIL01": {"ttr": 273, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICFIL01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICFIL01 CICFIL01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    CICFIL02 KZ table CICFIL01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICFIL01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      file = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(file) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'L' then call ciclsr09 'LID' lsr group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICFIL02": {"ttr": 2817, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD file information           */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\nE     = '1'\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICFIL02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 CICFIL02 CICFIL02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=FI\n  when zcmd = 2 THEN CSEL=GR\n  when zcmd = 3 THEN CSEL=DS\n  when zcmd = 4 THEN CSEL=LS\n  when zcmd = 5 THEN CSEL=SO\n  when zcmd = 6 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = FI\n  then do\n    CALL file_selection\n    fieldn  = \"FILE\"\n    fieldv  = file\n  end\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = DS\n  then do\n    l       = \"C\"\n    CALL dsn_selection\n    fieldn  = \"DSNA\"\n    fieldv  = dsname\n  end\n  WHEN CSEL = LS\n  then do\n    l       = \"1\"\n    CALL lsr_selection\n    fieldn  = \"LSR\"\n    fieldv  = lsr\n  end\n  WHEN CSEL = RE\n  then do\n    fieldn  = \"RES\"\n    fieldv  = \"YES\"\n  end\n  WHEN CSEL = SO\n  then do\n    CALL sort_selection\n    if zcmd  = 1 then fieldn = 'GROUP'\n                 else fieldn  = 'DSNA'\n    \"ISPEXEC TBSORT \" table \" FIELDS(\"fieldn\",C,A,FILE)\"\n    ausw = 'Files sorted ' || fieldn\n    call cicfil01 kz table ausw\n    \"ISPEXEC TBSORT \" table \" FIELDS(FILE)\"\n    signal start\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = cicfil||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(FILE GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn || \" = \" || fieldv\n  MESS3 = \" \"\n  MESS4 = \" \"\n  MESS5 = \" \"\n  MESS6 = \" \"\n  MESS7 = \" \"\n  MESS8 = \" \"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"files \" fieldn \" = \" fieldv\n\ncall cicfil01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal start\n\nEXIT\n\nfile_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICFIL03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICFIL02 CICFIL03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',file) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal file_selection\nend\nIF POS('*',file) = 0\nthen do\n  file = file || '*'\nend\n\nreturn\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICFIL04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICFIL02 cicfil04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n\nsort_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICFIL06)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICFIL02 cicfil06 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nreturn\n\ndsn_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICfil05)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICFIL02 cicfil05 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',dsname) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal dsn_selection\nend\nIF POS('*',dsname) = 0\nthen do\n  dsname = dsname || '*'\nend\n\nreturn\n\nlsr_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICfil07)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICFIL02 cicfil07 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nlsr = l\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICFIL09": {"ttr": 4101, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv gr objname\n\nfieldv = strip(fieldv)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTFILE NOWRITE SHARE\"\n\nORC = RC\n\n\"ISPEXEC TBTOP    CICTFILE\"\n\"ISPEXEC TBVCLEAR CICTFILE\"\n\ngroup = gr\n\ncall value fieldn,fieldv\n\ntabname = cicfills\n\n\"ISPEXEC TBQUERY CICTFILE NAMES(TNAMES)\"\n\"ISPEXEC TBSARG CICTFILE NEXT NAMECOND(\"fieldn\",EQ,GROUP,EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(FILE GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN CICTFILE\"\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF ORC = 0 THEN \"ISPEXEC TBEND CICTFILE\"\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = fieldn\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"FILE \" fieldn \" = \" fieldv\n\ncall cicfil01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICGRP00": {"ttr": 275, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTGRP\"\n\"ISPEXEC TBOPEN CICTGRP NOWRITE\"\n\ncall CICGRP01 AL cictgrp \"all group/list entries\"\n\n\"ISPEXEC TBEND CICTGRP\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICGRP01": {"ttr": 277, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICGRP01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICGRP01 CICGRP01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    CICGRP02 KZ table CICGRP01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICGRP01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      group = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(group) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'G' then call cicobj08 'GROUP' group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICGRP02": {"ttr": 2819, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD group information          */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\nE     = '1'\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICGRP02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 CICGRP02 CICGRP02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=GR\n  when zcmd = 2 THEN CSEL=LI\n  when zcmd = 3 THEN CSEL=SL\n  when zcmd = 4 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = LI\n  then do\n    CALL list_selection\n    fieldn  = \"OBJECT\"\n    fieldv  = object\n  end\n  WHEN CSEL = SL\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(OBJECT,C,A,GROUP)\"\n    ausw = 'sorted by list'\n    call CICGRP01 csel table ausw\n    \"ISPEXEC TBSORT \" table \" FIELDS(GROUP,C,A,OBJECT)\"\n    signal start\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = CICGRP||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(GROUP OBJECT) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn || \" = \" || fieldv\n  MESS3 = \" \"\n  MESS4 = \" \"\n  MESS5 = \" \"\n  MESS6 = \" \"\n  MESS7 = \" \"\n  MESS8 = \" \"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"group \" fieldn \" = \" fieldv\n\ncall CICGRP01 csel tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal start\n\nEXIT\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICGRP04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICGRP02 CICGRP04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n\nlist_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICGRP03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICGRP02 CICGRP03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',object) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal list_selection\nend\nIF POS('*',object) = 0\nthen do\n  object = object || '*'\nend\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICGRP08": {"ttr": 279, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv\n\nfieldv = strip(fieldv)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTGRP NOWRITE SHARE\"\n\nORC = RC\n\n\"ISPEXEC TBTOP    CICTGRP\"\n\"ISPEXEC TBVCLEAR CICTGRP\"\n\ncall value fieldn,fieldv\n\ntabname = cicgrpgr\n\n\"ISPEXEC TBQUERY CICTGRP NAMES(TNAMES)\"\n\"ISPEXEC TBSARG CICTGRP NEXT NAMECOND(\"fieldn\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(GROUP OBJECT) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN CICTGRP\"\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF ORC = 0 THEN \"ISPEXEC TBEND CICTGRP\"\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = 'List'\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Programme \" fieldn \" = \" fieldv\n\ncall cicgrp01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICLSR00": {"ttr": 281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTLSRP\"\n\"ISPEXEC TBOPEN CICTLSRP NOWRITE\"\n\ncall CICLSR01 AL cictlsrp \"all LSR pool entries\"\n\n\"ISPEXEC TBEND CICTLSRP\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICLSR01": {"ttr": 514, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICLSR01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICLSR01 CICLSR01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    CICLSR02 KZ table CICLSR01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICLSR01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      lsrp = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(lsrp) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'F' then call cicfil09 'LSR' lid group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICLSR02": {"ttr": 3073, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD LSRp information           */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\nE     = '1'\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICLSR02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 CICLSR02 CICLSR02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=LS\n  when zcmd = 2 THEN CSEL=GR\n  when zcmd = 3 THEN CSEL=ID\n  when zcmd = 4 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = LS\n  then do\n    CALL lsrp_selection\n    fieldn  = \"LSRP\"\n    fieldv  = lsrp\n  end\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = ID\n  then do\n    l       = \"1\"\n    CALL lid_selection\n    fieldn  = \"LID\"\n    fieldv  = lid\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = CICLSR||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(LSRP GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn || \" = \" || fieldv\n  MESS3 = \" \"\n  MESS4 = \" \"\n  MESS5 = \" \"\n  MESS6 = \" \"\n  MESS7 = \" \"\n  MESS8 = \" \"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"files \" fieldn \" = \" fieldv\n\ncall CICLSR01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal start\n\nEXIT\n\nlsrp_selection:\nlsrp = \"\"\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICLSR03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICLSR02 CICLSR03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',lsrp) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal lsrp_selection\nend\nIF POS('*',lsrp) = 0\nthen do\n  lsrp = lsrp || '*'\nend\n\nreturn\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICLSR04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICLSR02 CICLSR04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n\nlid_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICLSR05)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICLSR02 CICLSR05 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nlid = l\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICLSR09": {"ttr": 5121, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv gr objname\n\nfieldv = strip(fieldv)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTLSRP NOWRITE SHARE\"\n\"ISPEXEC TBVCLEAR CICTLSRP\"\n\ncall value fieldn,fieldv\n\n\"ISPEXEC TBSARG CICTLSRP NEXT NAMECOND(\"fieldn\",EQ)\"\n\nrc = 0\nrecfound = n\n\n\"ISPEXEC TBSCAN CICTLSRP\"\n\nif rc > 0\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"LSRPool\"\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND CICTLSRP\"\n  exit\nend\n\n\"ISPEXEC TBEND CICTLSRP\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC ADDPOP\"\n\ndisplay:\na = ' '\n\"ISPEXEC DISPLAY PANEL(CICLSR09)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 ciclsr09 ciclsr09 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nif rc > 0\nthen do\n  \"ISPEXEC REMPOP\"\n  exit\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICLST00": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTLIST NOWRITE\"\n\ntable = CICTLIST\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\n\"ISPEXEC TBDISPL \" table \" PANEL(CICLST00)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICLST00 CICLST00 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nif rc > 0\nthen do\n  \"ISPEXEC TBEND CICTLIST\"\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      object  = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(program) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'G' then call cicgrp08 'OBJECT' object\n    if a = 'O' then call cicob208 'OBJECT' object\n    a = ' '\n    signal display\n  end\n  signal display\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICMAP00": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTMAPS\"\n\"ISPEXEC TBOPEN CICTMAPS NOWRITE\"\n\ncall cicmap01 AL cictmaps \"all mapset entries\"\n\n\"ISPEXEC TBEND CICTMAPS\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICMAP01": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(cicmap01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicmap01 cicmap01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    cicmap02 KZ table cicmap01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICMAP01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      mapset  = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(mapset) condlist(ge)\"\n      signal display\n    END\n  END\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICMAP02": {"ttr": 3075, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD programm information       */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\nE     = '1'\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICMAP02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 CICMAP02 CICMAP02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=MA\n  when zcmd = 2 THEN CSEL=GR\n  when zcmd = 3 THEN CSEL=RE\n  when zcmd = 4 THEN CSEL=SO\n  when zcmd = 5 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = MA\n  then do\n    CALL maps_selection\n    fieldn  = \"MAPSET\"\n    fieldv  = maps\n  end\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = RE\n  then do\n    fieldn  = \"RES\"\n    fieldv  = \"YES\"\n  end\n  WHEN CSEL = SO\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(GROUP,C,A,MAPSET)\"\n    ausw = 'Mapset sorted ' || by group\n    call cicmap01 kz table ausw\n    \"ISPEXEC TBSORT \" table \" FIELDS(MAPSET)\"\n    signal start\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = cicmap||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(MAPSET GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn || \" = \" || fieldv\n  MESS3 = \" \"\n  MESS4 = \" \"\n  MESS5 = \" \"\n  MESS6 = \" \"\n  MESS7 = \" \"\n  MESS8 = \" \"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"programm \" fieldn \" = \" fieldv\n\ncall cicmap01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal start\n\nEXIT\n\nmaps_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICMAP03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICMAP02 cicmap03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',maps) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal maps_selection\nend\nIF POS('*',maps) = 0\nthen do\n  maps = maps || '*'\nend\n\nreturn\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICMAP04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICMAP02 cicmap04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICMAP09": {"ttr": 4113, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG MAPSET GROUP OBJNAME\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTMAPS NOWRITE SHARE\"\n\n\"ISPEXEC TBGET CICTMAPS\"\n\"ISPEXEC TBEND CICTMAPS\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC ADDPOP\"\n\ndisplay:\na = ' '\n\"ISPEXEC DISPLAY PANEL(CICMAP09)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicmap09 cicmap09 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nif rc > 0\nthen do\n  \"ISPEXEC REMPOP\"\n  exit\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICOBJ00": {"ttr": 522, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTOBJ\"\n\"ISPEXEC TBOPEN CICTOBJ NOWRITE\"\n\ncall CICOBJ01 AL CICTOBJ \"all CSD/group/list objects\"\n\n\"ISPEXEC TBEND CICTOBJ\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICOBJ01": {"ttr": 524, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICOBJ01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICOBJ01 CICOBJ01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    CICOBJ02 KZ table CICOBJ01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICOBJ01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      obj   = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(obj) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'S' then call cicobj09 obj objname group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICOBJ02": {"ttr": 3845, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD object information         */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nDISPLAY:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICOBJ02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 cicobj02 cicobj02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=OB\n  when zcmd = 2 THEN CSEL=GR\n  when zcmd = 3 THEN CSEL=TR\n  when zcmd = 4 THEN CSEL=PR\n  when zcmd = 5 THEN CSEL=TE\n  when zcmd = 6 THEN CSEL=MA\n  when zcmd = 7 THEN CSEL=CO\n  when zcmd = 8 THEN CSEL=SE\n  when zcmd = 9 THEN CSEL=TY\n  when zcmd = 10 THEN CSEL=PF\n  when zcmd = 11 THEN CSEL=FI\n  when zcmd = 12 THEN CSEL=LS\n  when zcmd = 13 THEN CSEL=SO\n  when zcmd = 14 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = OB\n  then do\n    CALL object_selection\n    fieldn  = \"OBJ\"\n    fieldv  = obj\n  end\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = TR\n  then do\n    CALL CICTRN00\n    signal display\n  end\n  WHEN CSEL = PR\n  then do\n    CALL CICPRG00\n    signal display\n  end\n  WHEN CSEL = TE\n  then do\n    CALL CICTRM00\n    signal display\n  end\n  WHEN CSEL = MA\n  then do\n    CALL CICMAP00\n    signal display\n  end\n  WHEN CSEL = CO\n  then do\n    CALL CICCON00\n    signal display\n  end\n  WHEN CSEL = SE\n  then do\n    CALL CICSES00\n    signal display\n  end\n  WHEN CSEL = TY\n  then do\n    CALL CICTYP00\n    signal display\n  end\n  WHEN CSEL = PF\n  then do\n    CALL CICPRF00\n    signal display\n  end\n  WHEN CSEL = FI\n  then do\n    CALL CICFIL00\n    signal display\n  end\n  WHEN CSEL = LS\n  then do\n    CALL CICLSR00\n    signal display\n  end\n  WHEN CSEL = SO\n  then do\n    CALL sort_selection\n    if zcmd  = 1 then fieldn = 'OBJNAME'\n                 else fieldn  = 'GROUP'\n    \"ISPEXEC TBSORT \" table \" FIELDS(\"fieldn\",C,A,OBJ)\"\n    ausw = 'Object sorted ' || fieldn\n    call cicobj01 kz table ausw\n    \"ISPEXEC TBSORT \" table \" FIELDS(OBJ,C,A,GROUP,C,A,OBJNAME)\"\n    signal display\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = cicobj||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(OBJ OBJNAME GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn || \" = \" || fieldv\n  MESS3 = \" \"\n  MESS4 = \" \"\n  MESS5 = \" \"\n  MESS6 = \" \"\n  MESS7 = \" \"\n  MESS8 = \" \"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal display\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Object \" fieldn \" = \" fieldv\n\ncall cicobj01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal display\n\nEXIT\n\nobject_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICOBJ03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicobj02 cicobj03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal display\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',obj) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal object_selection\nend\nIF POS('*',obj) = 0\nthen do\n  obj = obj || '*'\nend\n\nreturn\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICPRG04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicobj02 cicprg04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal display\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n\nsort_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICOBJ04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicobj02 cicobj04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal display\nend\n\n\"ISPEXEC REMPOP\"\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICOBJ08": {"ttr": 526, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv\n\nfieldv = strip(fieldv)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTOBJ NOWRITE SHARE\"\n\"ISPEXEC TBVCLEAR CICTOBJ\"\n\ncall value fieldn,fieldv\n\ntabname = cicobjgr\n\n\"ISPEXEC TBQUERY CICTOBJ NAMES(TNAMES)\"\n\"ISPEXEC TBSARG CICTOBJ NEXT NAMECOND(\"fieldn\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(OBJ GROUP OBJNAME) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN CICTOBJ\"\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = 'Objects'\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBEND CICTOBJ\"\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Objects \" fieldn \" = \" fieldv\n\ncall cicobj01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICOBJ09": {"ttr": 4097, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG obj objname group\n\ngroup = strip(group)\nobj   = strip(obj)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nselect\n  when objname = 'TRANSACTION'\n  then do\n    call cictrn09 obj group objname\n  end\n  when objname = 'TYPETERM'\n  then do\n    call cictyp09 obj group objname\n  end\n  when objname = 'PROFILE'\n  then do\n    call cicprf09 obj group objname\n  end\n  when objname = 'PROGRAM'\n  then do\n    call cicprg09 obj group objname\n  end\n  when objname = 'MAPSET'\n  then do\n    call cicmap09 obj group objname\n  end\n  when objname = 'SESSION'\n  then do\n    call cicses09 obj group objname\n  end\n  when objname = 'CONNECTION'\n  then do\n    call ciccon09 obj group objname\n  end\n  otherwise\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICOB200": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTOBJ2\"\n\"ISPEXEC TBOPEN CICTOBJ2 NOWRITE\"\n\ncall CICOB201 AL CICTOBJ2 \"all CSD/group/list objects\"\n\n\"ISPEXEC TBEND CICTOBJ2\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICOB201": {"ttr": 530, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICOB201)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICOB201 CICOB201 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    CICOB202 KZ table CICOB201 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICOB201 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      obj   = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(obj) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'S' then call cicobj09 obj objname group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICOB202": {"ttr": 4865, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD object information         */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nDISPLAY:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICOB202)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 cicob202 cicob202 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=OB\n  when zcmd = 2 THEN CSEL=OT\n  when zcmd = 3 THEN CSEL=GR\n  when zcmd = 4 THEN CSEL=LI\n  when zcmd = 5 THEN CSEL=SO\n  when zcmd = 6 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = OB\n  then do\n    CALL object_selection\n    fieldn  = \"OBJ\"\n    fieldv  = obj\n  end\n  WHEN CSEL = OT\n  then do\n    CALL object_type_selection\n    fieldn  = \"OBJNAME\"\n    fieldv  = objn\n  end\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = LI\n  then do\n    CALL list_selection\n    fieldn  = 'OBJECT'\n    fieldv  = object\n  end\n  WHEN CSEL = SO\n  then do\n    CALL sort_selection\n    select\n      when zcmd = 1 then fieldn = 'OBJNAME'\n      when zcmd = 2 then fieldn = 'GROUP'\n      otherwise          fieldn  = 'OBJECT'\n    end\n    \"ISPEXEC TBSORT \" table \" FIELDS(\"fieldn\",C,A,OBJ,C,A,GROUP,C,A,OBJNAME)\"\n    ausw = 'Object sorted ' || fieldn\n    call cicob201 kz table ausw\n    \"ISPEXEC TBSORT \" table \" FIELDS(OBJ,C,A,GROUP,C,A,OBJNAME,OBJECT)\"\n    signal display\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = cicob2||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(OBJ OBJNAME GROUP OBJECT) NOWRITE\"\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn || \" = \" || fieldv\n  MESS3 = \" \"\n  MESS4 = \" \"\n  MESS5 = \" \"\n  MESS6 = \" \"\n  MESS7 = \" \"\n  MESS8 = \" \"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal display\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Object \" fieldn \" = \" fieldv\n\ncall cicob201 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal display\n\nEXIT\n\nobject_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICOBJ03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicob202 cicobj03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal display\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',obj) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal object_selection\nend\nIF POS('*',obj) = 0\nthen do\n  obj = obj || '*'\nend\n\nreturn\n\nobject_type_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICOB203)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicob202 cicob203 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal display\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN objn = \"Transaction\"\n  when zcmd = 2 THEN objn = \"Mapset\"\n  when zcmd = 3 THEN objn = \"Program\"\n  when zcmd = 4 THEN objn = \"Terminal\"\n  when zcmd = 5 THEN objn = \"Profile\"\n  when zcmd = 6 THEN objn = \"TypeTerm\"\n  otherwise\nend\n\nreturn\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICPRG04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicobj02 cicprg04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal display\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n\nsort_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICOB204)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicobj02 cicobj04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal display\nend\n\n\"ISPEXEC REMPOP\"\n\nreturn\n\nlist_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICGRP03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 CICOB202 CICGRP03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal display\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',object) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal list_selection\nend\nIF POS('*',object) = 0\nthen do\n  object = object || '*'\nend\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICOB208": {"ttr": 532, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv gr\n\nfieldv = strip(fieldv)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTOBJ2 NOWRITE SHARE\"\n\"ISPEXEC TBVCLEAR CICTOBJ2\"\n\ncall value fieldn,fieldv\n\ntabname = cicobjli\n\n\"ISPEXEC TBQUERY CICTOBJ2 NAMES(TNAMES)\"\n\"ISPEXEC TBSARG CICTOBJ2 NEXT NAMECOND(\"fieldn\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(OBJ OBJNAME GROUP OBJECT) NOWRITE\"\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN CICTOBJ2\"\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = 'Program'\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBEND CICTOBJ2\"\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Programme \" fieldn \" = \" fieldv\n\ncall cicob201 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICPRF00": {"ttr": 769, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTPROF\"\n\"ISPEXEC TBOPEN CICTPROF NOWRITE\"\n\ncall cicprf01 AL cictprof \"all profile entries\"\n\n\"ISPEXEC TBEND CICTPROF\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICPRF01": {"ttr": 771, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICPRF01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicprf01 cicprf01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    CICPRF02 KZ table CICPRF01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICPRF01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      prof    = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(prof) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'T' then call cictrn08 'PROFILE' prof group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICPRF02": {"ttr": 3843, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD programm information       */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\nOP   = EQ\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cicprf02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 cicprf02 cicprf02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=PR\n  when zcmd = 2 THEN CSEL=GR\n  when zcmd = 3 THEN CSEL=SA\n  when zcmd = 4 THEN CSEL=SD\n  when zcmd = 5 THEN CSEL=UT\n  when zcmd = 6 THEN CSEL=UC\n  when zcmd = 7 THEN CSEL=NU\n  when zcmd = 8 THEN CSEL=SO\n  when zcmd = 9 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = PR\n  then do\n    CALL prf_selection\n    fieldn  = \"PROF\"\n    fieldv  = prf\n  end\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = SA\n  then do\n    fieldn  = \"SCRNSIZE\"\n    fieldv  = ALTERNATE\n  end\n  WHEN CSEL = SD\n  then do\n    fieldn  = \"SCRNSIZE\"\n    fieldv  = DEFAULT\n  end\n  WHEN CSEL = UC\n  then do\n    fieldn  = \"UCTRAN\"\n    fieldv  = yes\n  end\n  WHEN CSEL = UT\n  then do\n    fieldn  = \"UCTRAN\"\n    fieldv  = TRANID\n  end\n  WHEN CSEL = NU\n  then do\n    fieldn  = \"UCTRAN\"\n    fieldv  = NO\n  end\n  WHEN CSEL = SO\n  then do\n    fieldn = GROUP\n    \"ISPEXEC TBSORT \" table \" FIELDS(\"fieldn\",C,A,PROF)\"\n    ausw = 'Profile sorted ' || fieldn\n    call cicprf01 kz table ausw\n    \"ISPEXEC TBSORT \" table \" FIELDS(PROF)\"\n    signal start\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = cicprf||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",\"op\")\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(PROF GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"Profile\"\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Profile \" fieldn \" = \" fieldv\n\ncall cicprf01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal start\n\nEXIT\n\nprf_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cicprf03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicprf02 cicprf03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',prf) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal prf_selection\nend\nIF POS('*',prf) = 0\nthen do\n  prf  = prf  || '*'\nend\n\nreturn\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cicprg04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrn02 cictrn04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICPRF09": {"ttr": 4111, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG PROF GROUP OBJNAME\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTPROF NOWRITE SHARE\"\n\n\"ISPEXEC TBGET CICTPROF\"\n\"ISPEXEC TBEND CICTPROF\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC ADDPOP\"\n\ndisplay:\na = ' '\n\"ISPEXEC DISPLAY PANEL(CICPRF09)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicprf09 cicprf09 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nif rc > 0\nthen do\n  \"ISPEXEC REMPOP\"\n  exit\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICPRG00": {"ttr": 773, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTPROG\"\n\"ISPEXEC TBOPEN CICTPROG NOWRITE\"\n\ncall cicprg01 AL cictprog \"all program entries\"\n\n\"ISPEXEC TBEND CICTPROG\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICPRG01": {"ttr": 775, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICPRG01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicprg01 cicprg01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    CICPRG02 KZ table CICPRG01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICPRG01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      program = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(program) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'T' then call cictrn08 'PROGRAM' program group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICPRG02": {"ttr": 4615, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD programm information       */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICPRG02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 cicprg02 cicprg02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=PR\n  when zcmd = 2 THEN CSEL=GR\n  when zcmd = 3 THEN CSEL=LA\n  when zcmd = 4 THEN CSEL=RE\n  when zcmd = 5 THEN CSEL=EC\n  when zcmd = 6 THEN CSEL=SO\n  when zcmd = 7 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = PR\n  then do\n    CALL prog_selection\n    fieldn  = \"PROGRAM\"\n    fieldv  = prog\n  end\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = LA\n  then do\n    l       = \"C\"\n    CALL lang_selection\n    fieldn  = \"LANG\"\n    fieldv  = lan\n  end\n  WHEN CSEL = EC\n  then do\n    fieldn  = \"EKEY\"\n    fieldv  = \"CICS\"\n  end\n  WHEN CSEL = RE\n  then do\n    fieldn  = \"RES\"\n    fieldv  = \"YES\"\n  end\n  WHEN CSEL = SO\n  then do\n    CALL sort_selection\n    if zcmd  = 1 then fieldn = 'GROUP'\n                 else fieldn  = 'LANG'\n    \"ISPEXEC TBSORT \" table \" FIELDS(\"fieldn\",C,A,PROGRAM)\"\n    ausw = 'Program sorted ' || fieldn\n    call cicprg01 kz table ausw\n    \"ISPEXEC TBSORT \" table \" FIELDS(PROGRAM)\"\n    signal start\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = cicprg||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(PROGRAM GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn || \" = \" || fieldv\n  MESS3 = \" \"\n  MESS4 = \" \"\n  MESS5 = \" \"\n  MESS6 = \" \"\n  MESS7 = \" \"\n  MESS8 = \" \"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"programm \" fieldn \" = \" fieldv\n\ncall cicprg01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal start\n\nEXIT\n\nprog_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICPRG03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicprg02 cicprg03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',prog) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal prog_selection\nend\nIF POS('*',prog) = 0\nthen do\n  prog = prog || '*'\nend\n\nreturn\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICPRG04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicprg02 cicprg04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n\nsort_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICPRG06)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicprg02 cicprg06 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nreturn\n\nlang_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICPRG05)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicprg02 cicprg05 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when l = C THEN lan = COBOL\n  when l = A THEN lan = ASSEMBLE\n  when l = P THEN lan = PLI\n  otherwise signal lang_selection\nend\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICPRG08": {"ttr": 777, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv gr\n\nfieldv = strip(fieldv)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTPROG NOWRITE SHARE\"\n\"ISPEXEC TBVCLEAR CICTPROG\"\n\ncall value fieldn,fieldv\n\ntabname = cicprggr\n\n\"ISPEXEC TBQUERY CICTPROG NAMES(TNAMES)\"\n\"ISPEXEC TBSARG CICTPROG NEXT NAMECOND(\"fieldn\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(PROGRAM GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN CICTPROG\"\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = 'Program'\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBEND CICTPROG\"\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Programme \" fieldn \" = \" fieldv\n\ncall cicprg01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICPRG09": {"ttr": 4103, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG PROGRAM GROUP OBJNAME\n\ngroup = strip(group)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTPROG NOWRITE SHARE\"\n\norc = rc\n\n\"ISPEXEC TBGET CICTPROG\"\nIF ORC = 0 THEN \"ISPEXEC TBEND CICTPROG\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC ADDPOP\"\n\ndisplay:\na = ' '\n\"ISPEXEC DISPLAY PANEL(CICPRG09)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicprg09 cicprg09 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nif rc > 0\nthen do\n  \"ISPEXEC REMPOP\"\n  exit\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICP000": {"ttr": 779, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\narg panel table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nselect\n when panel = 'CICOBJ01' THEN ESTR1 = 'CSD Object summary'\n when panel = 'CICOB201' THEN ESTR1 = 'CSD Object summary'\n when panel = 'CICGRP01' THEN ESTR1 = 'CSD Group/list summary'\n when panel = 'CICCON01' THEN ESTR1 = 'CSD Connection summary'\n when panel = 'CICMAP01' THEN ESTR1 = 'CSD Mapset summary'\n when panel = 'CICPRG01' THEN ESTR1 = 'CSD Programm summary'\n when panel = 'CICSES01' THEN ESTR1 = 'CSD Session summary'\n when panel = 'CICTRN01' THEN ESTR1 = 'CSD Transaktion summary'\n when panel = 'CICTRM01' THEN ESTR1 = 'CSD Terminal summary'\n when panel = 'CICTYP01' THEN ESTR1 = 'CSD Typeterm summary'\n when panel = 'CICPRF01' THEN ESTR1 = 'CSD Profile summary'\n when panel = 'CICFIL01' THEN ESTR1 = 'CSD file summary'\n when panel = 'CICLSR01' THEN ESTR1 = 'CSD LSRpool summary'\n otherwise\nend\n\n/*------------------------------------------------------------*/\n/*   VARIABLEN IN POOL Profile stellen.                       */\n/*   Profile notwendig, damit im Batchjob Variablen           */\n/*   zur Verfuegung stehen                                    */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC VPUT ESTR1\"\n\n\"ISPEXEC ADDPOP ROW(10) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICP001)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL HSM0000 hsmp000 hsmp001 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nif rc > 0\nthen do\n  \"ISPEXEC REMPOP\"\n  exit\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\n\"ISPEXEC REMPOP\"\n\n\"ISPEXEC vput oclass\"\n\ncall cicssubp cicp000 table CICP000 panel sel\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICSES00": {"ttr": 781, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTSESS\"\n\"ISPEXEC TBOPEN CICTSESS NOWRITE\"\n\ncall cicses01 AL cictsess \"all sessions entries\"\n\n\"ISPEXEC TBEND CICTSESS\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICSES01": {"ttr": 783, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICSES01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cicses01 cicses01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    CICSES02 KZ table CICSES01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICSES01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      term  = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(sess) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'C' then call ciccon08 'CONN' conn group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICSES02": {"ttr": 3077, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD programm information       */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\nE     = '1'\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICSES02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 CICSES02 CICSES02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=61\n  when zcmd = 2 THEN CSEL=AP\n  when zcmd = 3 THEN CSEL=EX\n  when zcmd = 4 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = 61\n  then do\n    fieldn  = \"PROT\"\n    fieldv  = LU61\n  end\n  WHEN CSEL = AP\n  then do\n    fieldn  = \"PROT\"\n    fieldv  = APPC\n  end\n  WHEN CSEL = EX\n  then do\n    fieldn  = \"PROT\"\n    fieldv  = APPC\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = CICSES||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBTOP  \" table\n\"ISPEXEC TBSKIP \" table\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(SESS GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBGET\" table\n  if rc > 0 then leave\n  if prot = fieldv\n  then do\n    \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n    recfound = y\n  end\n  \"ISPEXEC TBSKIP\" table\n  if rc > 0 then leave\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn || \" = \" || fieldv\n  MESS3 = \" \"\n  MESS4 = \" \"\n  MESS5 = \" \"\n  MESS6 = \" \"\n  MESS7 = \" \"\n  MESS8 = \" \"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"session \" fieldn \" = \" fieldv\n\ncall CICSES01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal start\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICSES08": {"ttr": 785, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv gr\n\nfieldv = strip(fieldv)\ngr     = strip(gr)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTSESS NOWRITE SHARE\"\n\nORC = RC\n\n\"ISPEXEC TBTOP    CICTSESS\"\n\"ISPEXEC TBVCLEAR CICTSESS\"\n\ngroup = gr\n\ntabname = cicsesco\n\n\"ISPEXEC TBQUERY CICTSESS NAMES(TNAMES)\"\n\"ISPEXEC TBTOP CICTSESS\"\n\"ISPEXEC TBSKIP CICTSESS\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(SESS GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBGET  CICTSESS\"\n  if rc > 0 then leave\n  if conn = fieldv\n  then do\n    \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n    recfound = y\n  end\n  \"ISPEXEC TBSKIP CICTSESS\"\n  if rc > 0 then leave\nend\n\nIF ORC = 0 THEN \"ISPEXEC TBEND CICTSESS\"\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = fieldn\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Sessions \" fieldn \" = \" fieldv\n\ncall cicses01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICSES09": {"ttr": 4105, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG SESS GROUP OBJNAME\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\ntabname = cicses09\n\n\"ISPEXEC TBOPEN CICTSESS NOWRITE SHARE\"\n\nORC = RC\n\n\"ISPEXEC TBGET CICTSESS\"\n\n\"ISPEXEC TBQUERY CICTSESS NAMES(TNAMES)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(SESS GROUP) NOWRITE NAMES\"TNAMES\n\nIF ORC = 0 THEN \"ISPEXEC TBEND CICTSESS\"\n\n\"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\nausw = \"Sessions \" fieldn \" = \" fieldv\n\ncall cicses01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICSSUBM": {"ttr": 787, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 2   DSN MBR\n         ISREDIT MACRO\n         CONTROL NOFLUSH\n         SET &SUBDSN = &STR(&DSN.(&MBR))\n         SET SYSOUTTRAP=1\n         SUBMIT '&SUBDSN'\n         SET &SUBRC EQ &STR(&LASTCC)\n         SET SYSOUTTRAP=0\n         SET &ZEDSMSG = &STR(CICS JOB(S) SUBMITTED)\n         SET &ZEDLMSG = &STR(&SYSOUTLINE1)\n         ISPEXEC SETMSG MSG(ISRZ000)\n         EXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CICSSUBP": {"ttr": 3585, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nx       = listdsi(ISPPROF FILE)\nif x    > 0\nthen do\n  JCLLIB= USERID()||.ISPF.ISPPROF\nend\nelse do\n  JCLLIB= sysdsname\nend\n\n\"ALLOC DD(ISPFILE) DSN('\"JCLLIB\"') SHR REUSE\"\n\n\"ISPEXEC VGET (STEPLIB CCSDAPPL)\"\n\"ISPEXEC VGET (CCSDHLQ LLQCLIB LLQMLIB LLQPLIB LLQSLIB LLQTLIB LLQTABL)\"\n\"ISPEXEC VGET (ACCOUNT CLASS MSGCLASS ISPFHLQ)\"\n\n\"ISPEXEC FTCLOSE NAME(CICSJCL)\"\n\n\"ISPEXEC FTOPEN\"\n\nif rc > 0\nthen do\n  select\n    when rc = 8\n    then do\n      MESS2 = \"file tailoring already in progress\"\n    end\n    when rc = 12\n    then do\n      MESS2 = \"output file in use. ENQ failed\"\n    end\n    when rc = 16\n    then do\n      MESS2 = \"ISPFILE not allocated\"\n    end\n    when rc = 20\n    then do\n      MESS2 = \"severe error\"\n    end\n    otherwise\n  end\n  MESS1 = \"error FTOPEN\"\n  MESS3 = \"returncode = \" || rc\n  MESS4 = \"Procedur = CICSSUBP\"\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC FTCLOSE\"\n  signal free_file\nend\n\n\"ISPEXEC FTINCL CICSJCL\"\n\nif rc > 0\nthen do\n  select\n    when rc = 8\n    then do\n      MESS1 = \"output skeleton not defined\"\n    end\n    when rc = 12\n    then do\n      MESS1 = \"output skeleton in use. ENQ failed\"\n    end\n    when rc = 16\n    then do\n      MESS1 = \"data truncation occured\"\n    end\n    when rc = 20\n    then do\n      MESS1 = \"severe error\"\n    end\n    otherwise\n  end\n  MESS2 = \"please contact system support\"\n  MESS3 = \"skeleton = \" || CICSJCL\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(COB0000)\"\n  \"ISPEXEC FTCLOSE\"\n  \"ISPEXEC REMPOP\"\n  signal ende\nend\n\n\"ISPEXEC FTCLOSE NAME(CCSDJOB0)\"\n\n\"ISPEXEC EDIT DATASET('\"JCLLIB\"(CCSDJOB0)')\"\n\nende:\n\"ISPEXEC FTERASE CCSDJOB0\"\n\nfree_file:\n\"FREE DD(ISPFILE)\"\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTCL00": {"ttr": 789, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  cicttrcl\"\n\"ISPEXEC TBOPEN cicttrcl NOWRITE\"\n\ncall cictcl01 AL cicttrcl \"all transaction Classes\"\n\n\"ISPEXEC TBEND cicttrcl\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTCL01": {"ttr": 1025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(cictcl01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictcl01 cictcl01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    cictcl02 KZ table cictcl01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICTCL01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      tran = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(tran) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'T' then call cictrn09 trcl group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTRM00": {"ttr": 1027, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTTERM\"\n\"ISPEXEC TBOPEN CICTTERM NOWRITE\"\n\ncall cictrm01 AL cictterm \"all terminal entries\"\n\n\"ISPEXEC TBEND CICTTERM\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTRM01": {"ttr": 1029, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICTRM01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrm01 cictrm01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    CICTRM02 KZ table CICTRM01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICTRM01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      term  = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(term) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'T' then call cictyp08 'TYPE' type group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTRM02": {"ttr": 3329, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD programm information       */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\nOP   = EQ\nE     = '1'\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cictrm02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 cictrm02 cictrm02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=TE\n  when zcmd = 2 THEN CSEL=GR\n  when zcmd = 3 THEN CSEL=TY\n  when zcmd = 4 THEN CSEL=NE\n  when zcmd = 5 THEN CSEL=CO\n  when zcmd = 6 THEN CSEL=AU\n  when zcmd = 7 THEN CSEL=SO\n  when zcmd = 8 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = TE\n  then do\n    CALL term_selection\n    fieldn  = \"TERM\"\n    fieldv  = trml\n  end\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = TY\n  then do\n    l       = \"C\"\n    CALL type_selection\n    fieldn  = \"TYPE\"\n    fieldv  = typ\n  end\n  WHEN CSEL = NE\n  then do\n    CALL netn_selection\n    fieldn  = \"NETNAME\"\n    fieldv  = net\n  end\n  WHEN CSEL = CO\n  then do\n    fieldn  = \"CONS\"\n    fieldv  = NO\n    op      = 'NE'\n  end\n  WHEN CSEL = SO\n  then do\n    CALL sort_selection\n    if zcmd  = 1 then fieldn = 'GROUP'\n    if zcmd  = 2 then fieldn = 'TYPE'\n    if zcmd  = 3 then fieldn = 'NETNAME'\n    \"ISPEXEC TBSORT \" table \" FIELDS(\"fieldn\",C,A,TERM)\"\n    ausw = 'Terminal sorted ' || fieldn\n    call cictrm01 kz table ausw\n    \"ISPEXEC TBSORT \" table \" FIELDS(TERM)\"\n    signal start\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = cictrn||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",\"op\")\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(TERM GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"terminal \" fieldn \" = \" fieldv\n\ncall cictrm01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal start\n\nEXIT\n\nterm_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cictrm03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrm02 cictrm03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',trml) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal term_selection\nend\nIF POS('*',trml) = 0\nthen do\n  trml = trml || '*'\nend\n\nreturn\n\ntype_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cictrm04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrm02 cictrm04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',typ) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal type_selection\nend\nIF POS('*',typ) = 0\nthen do\n  typ  = typ  || '*'\nend\n\nreturn\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cicprg04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrn02 cictrn04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n\nnetn_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cictrm05)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrm02 cictrm05 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',net) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal netn_selection\nend\nIF POS('*',net) = 0\nthen do\n  net  = net || '*'\nend\n\nreturn\n\nsort_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICTRM06)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrm02 cictrm06 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTRM09": {"ttr": 1031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv gr\n\nfieldv = strip(fieldv)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTTERM NOWRITE SHARE\"\n\"ISPEXEC TBVCLEAR CICTTERM\"\n\ncall value fieldn,fieldv\n\ntabname = cictrmty\n\n\"ISPEXEC TBQUERY CICTTERM NAMES(TNAMES)\"\n\"ISPEXEC TBSARG CICTTERM NEXT NAMECOND(\"fieldn\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(TERM GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN CICTTERM\"\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = fieldn\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBEND CICTTERM\"\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"terminal \" fieldn \" = \" fieldv\n\ncall cictrm01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTRN00": {"ttr": 1033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  cicttran\"\n\"ISPEXEC TBOPEN cicttran NOWRITE\"\n\ncall cictrn01 AL cicttran \"all transaction entries\"\n\n\"ISPEXEC TBEND cicttran\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTRN01": {"ttr": 1035, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(cictrn01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrn01 cictrn01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    cictrn02 KZ table cictrn01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICTRN01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      tran = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(tran) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'P' then call cicprg09 program group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTRN02": {"ttr": 3587, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD programm information       */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\nOP   = EQ\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cictrn02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 cictrn02 cictrn02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=TA\n  when zcmd = 2 THEN CSEL=GR\n  when zcmd = 3 THEN CSEL=PR\n  when zcmd = 4 THEN CSEL=TW\n  when zcmd = 5 THEN CSEL=DB\n  when zcmd = 6 THEN CSEL=DA\n  when zcmd = 7 THEN CSEL=TU\n  when zcmd = 8 THEN CSEL=TC\n  when zcmd = 9 THEN CSEL=IS\n  when zcmd =10 THEN CSEL=ST\n  when zcmd =11 THEN CSEL=SO\n  when zcmd =12 THEN CSEL=PL\n  otherwise signal start\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = TA\n  then do\n    CALL tran_selection\n    fieldn  = \"TRAN\"\n    fieldv  = tran\n  end\n  WHEN CSEL = PR\n  then do\n    CALL prog_selection\n    fieldn  = \"PROGRAM\"\n    fieldv  = prog\n  end\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = TW\n  then do\n    fieldn  = \"TWASZ\"\n    fieldv  = 1\n    op      = 'GE'\n  end\n  WHEN CSEL = DB\n  then do\n    fieldn  = \"DLOC\"\n    fieldv  = BELOW\n  end\n  WHEN CSEL = DA\n  then do\n    fieldn  = \"DLOC\"\n    fieldv  = ANY\n  end\n  WHEN CSEL = TU\n  then do\n    fieldn  = \"DKEY\"\n    fieldv  = USER\n  end\n  WHEN CSEL = TC\n  then do\n    fieldn  = \"DKEY\"\n    fieldv  = CICS\n  end\n  WHEN CSEL = IS\n  then do\n    fieldn  = \"ISO\"\n    fieldv  = YES\n  end\n  WHEN CSEL = ST\n  then do\n    fieldn  = \"STO\"\n    fieldv  = YES\n  end\n  WHEN CSEL = DY\n  then do\n    fieldn  = \"DYN\"\n    fieldv  = YES\n  end\n  WHEN CSEL = SO\n  then do\n    CALL sort_selection\n    if zcmd  = 1 then fieldn = 'GROUP'\n    if zcmd  = 2 then fieldn = 'PROGRAM'\n    if zcmd  = 3 then fieldn = 'PROFILE'\n    \"ISPEXEC TBSORT \" table \" FIELDS(\"fieldn\",C,A,TRAN)\"\n    ausw = 'transaction sorted ' || fieldn\n    call cictrn01 kz table ausw\n    \"ISPEXEC TBSORT \" table \" FIELDS(TRAN)\"\n    signal start\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = cictrn||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",\"op\")\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(TRAN GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"transaction \" fieldn \" = \" fieldv\n\ncall cictrn01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal start\n\nEXIT\n\ntran_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cictrn04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrn02 cictrn04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',tran) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal tran_selection\nend\nIF POS('*',tran) = 0\nthen do\n  tran = tran || '*'\nend\n\nreturn\n\nprog_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cicprg03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrn02 cictrn03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',prog) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal prog_selection\nend\nIF POS('*',prog) = 0\nthen do\n  prog = prog || '*'\nend\n\nreturn\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cicprg04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrn02 cicprg04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n\nsort_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICTRN03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrn02 cictrn03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTRN08": {"ttr": 1037, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv gr\n\nfieldv = strip(fieldv)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTTRAN NOWRITE SHARE\"\n\"ISPEXEC TBVCLEAR CICTTRAN\"\n\ncall value fieldn,fieldv\n\ntabname = cictrnty\n\n\"ISPEXEC TBQUERY CICTTRAN NAMES(TNAMES)\"\n\"ISPEXEC TBSARG CICTTRAN NEXT NAMECOND(\"fieldn\",EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(TRAN GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN CICTTRAN\"\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = 'Transaction'\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBEND CICTTRAN\"\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"transaction \" fieldn \" = \" fieldv\n\ncall cictrn01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTRN09": {"ttr": 4107, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG TRAN GROUP OBJNAME\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTTRAN NOWRITE SHARE\"\n\n\"ISPEXEC TBGET CICTTRAN\"\n\"ISPEXEC TBEND CICTTRAN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC ADDPOP\"\n\ndisplay:\na = ' '\n\"ISPEXEC DISPLAY PANEL(CICTRN09)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrn09 cictrn09 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nif rc > 0\nthen do\n  \"ISPEXEC REMPOP\"\n  exit\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTYP00": {"ttr": 1039, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC TBEND  CICTTYPE\"\n\"ISPEXEC TBOPEN CICTTYPE NOWRITE\"\n\ncall cictyp01 AL cicttype \"all typeterm entries\"\n\n\"ISPEXEC TBEND CICTTYPE\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTYP01": {"ttr": 1041, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(CICTYP01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictyp01 cictyp01 RC\n  EXIT\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd  = ' '\n  csel  = ' '\n  CALL    CICTYP02 KZ table CICTYP01 sel\n  \"ISPEXEC VGET CSEL\"\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 CICTYP01 table sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  IF SUBSTR(ZCMD,1,1) = 'F' | SUBSTR(ZCMD,1,1) = 'L'\n  then do\n    FI = LENGTH(ZCmd)\n    IF FI < 3\n    then DO\n      \"ISPEXEC SETMSG MSG(CICA001)\"\n      signal display\n    END\n    ELSE do\n      type  = SUBSTR(ZCmd,3,FI-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(type) condlist(ge)\"\n      signal display\n    END\n  END\n  do while ztdsels > 0\n    if a = 'T' then call cictrm09 'TYPE' type group\n    signal display\n  end\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTYP02": {"ttr": 3331, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select cics CSD programm information       */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table panel sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\nSTART:\nOP   = EQ\nE     = '1'\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cictyp02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL cic0000 cictyp02 cictyp02 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1 THEN CSEL=TY\n  when zcmd = 2 THEN CSEL=GR\n  when zcmd = 3 THEN CSEL=DE\n  when zcmd = 4 THEN CSEL=SH\n  when zcmd = 5 THEN CSEL=US\n  when zcmd = 6 THEN CSEL=UT\n  when zcmd = 7 THEN CSEL=UC\n  when zcmd = 8 THEN CSEL=NU\n  when zcmd = 9 THEN CSEL=SO\n  when zcmd =10 THEN CSEL=PL\n  otherwise\nend\n\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nSELECT\n  WHEN CSEL = \"\" THEN exit\n  WHEN CSEL = PL THEN exit\n  WHEN CSEL = TY\n  then do\n    CALL type_selection\n    fieldn  = \"TYPE\"\n    fieldv  = typ\n  end\n  WHEN CSEL = GR\n  then do\n    CALL group_selection\n    fieldn  = \"GROUP\"\n    fieldv  = group\n  end\n  WHEN CSEL = DE\n  then do\n    CALL dev_selection\n    fieldn  = \"DEVICE\"\n    fieldv  = dev\n  end\n  WHEN CSEL = SH\n  then do\n    fieldn  = \"SHIP\"\n    fieldv  = YES\n  end\n  WHEN CSEL = US\n  then do\n    fieldn  = \"USER\"\n    fieldv  = 1\n    op      = 'GE'\n  end\n  WHEN CSEL = UC\n  then do\n    fieldn  = \"UCTRAN\"\n    fieldv  = yes\n  end\n  WHEN CSEL = UT\n  then do\n    fieldn  = \"UCTRAN\"\n    fieldv  = TRANID\n  end\n  WHEN CSEL = NU\n  then do\n    fieldn  = \"UCTRAN\"\n    fieldv  = NO\n  end\n  WHEN CSEL = SO\n  then do\n    CALL sort_selection\n    if zcmd  = 1 then fieldn = 'GROUP'\n    if zcmd  = 2 then fieldn = 'DEVICE'\n    if zcmd  = 3 then fieldn = 'USER'\n    \"ISPEXEC TBSORT \" table \" FIELDS(\"fieldn\",C,A,TYPE)\"\n    ausw = 'Typeterm sorted ' || fieldn\n    call cictyp01 kz table ausw\n    \"ISPEXEC TBSORT \" table \" FIELDS(TYPE)\"\n    signal start\n  end\n  otherwise exit\nEND\n\n\"ISPEXEC TBVCLEAR \" table\n\ntabname = cictyp||csel\nfield   = fieldn\n\ncall value field,fieldv\n\n\"ISPEXEC TBQUERY\" table \" NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"field\",\"op\")\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS(TYPE GROUP) NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"TYPETERM\"\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nausw = \"Typeterm \" fieldn \" = \" fieldv\n\ncall cictyp01 kz tabname ausw\n\n\"ISPEXEC TBEND \" tabname\n\nsignal start\n\nEXIT\n\ntype_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cictrm04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictyp02 cictrm04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',typ) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal type_selection\nend\nIF POS('*',typ) = 0\nthen do\n  typ  = typ  || '*'\nend\n\nreturn\n\ngroup_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cicprg04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictrn02 cictrn04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',group) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal group_selection\nend\nIF POS('*',group) = 0\nthen do\n  group = group || '*'\nend\n\nreturn\n\ndev_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(cictyp03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictyp02 cictyp03 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nIF POS('*',dev) = 1\nthen do\n  \"ispexec setmsg msg(cica001)\"\n  signal dev_selection\nend\nIF POS('*',dev) = 0\nthen do\n  dev  = dev || '*'\nend\n\nreturn\n\nsort_selection:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(CICTYP04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictyp02 cictyp04 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  signal start\nend\n\n\"ISPEXEC REMPOP\"\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTYP08": {"ttr": 1043, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG fieldn fieldv gr\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTTYPE NOWRITE SHARE\"\n\nORC = RC\n\n\"ISPEXEC TBTOP CICTTYPE\"\n\"ISPEXEC TBVCLEAR CICTTYPE\"\n\ncall value fieldn,fieldv\n\n\"ISPEXEC TBSARG CICTTYPE NEXT NAMECOND(\"fieldn\",EQ)\"\n\nrc = 0\nrecfound = n\n\n\"ISPEXEC TBSCAN CICTTYPE\"\n\nif rc > 0\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"TYPEterm\"\n  MESS3 = \"searchargument \" || fieldn \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(CIC0000)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND CICTTYPE\"\n  exit\nend\n\nIF ORC = 0 THEN \"ISPEXEC TBEND CICTTYPE\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC ADDPOP\"\n\ndisplay:\na = ' '\n\"ISPEXEC DISPLAY PANEL(CICTYP09)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictyp09 cictyp09 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nif rc > 0\nthen do\n  \"ISPEXEC REMPOP\"\n  exit\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICTYP09": {"ttr": 4109, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nARG TYPE GROUP OBJNAME\n\ntype   = strip(type)\ngroup  = strip(group)\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBOPEN CICTTYPE NOWRITE SHARE\"\n\norc = rc\n\n\"ISPEXEC TBGET CICTTYPE\"\nIF ORC = 0 THEN \"ISPEXEC TBEND CICTTYPE\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\n\"ISPEXEC ADDPOP\"\n\ndisplay:\na = ' '\n\"ISPEXEC DISPLAY PANEL(CICTYP09)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL CIC0000 cictyp09 cictyp09 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nif rc > 0\nthen do\n  \"ISPEXEC REMPOP\"\n  exit\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CIC0000": {"ttr": 1281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for panel error        */\n/* callers    : hics/sis/cics application                  */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg procname panel disrc\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nMESS1 = 'panel display/query error in procedur '\nMESS2 = procname\nMESS3 = 'panel name '\nMESS4 = panel\nMESS5 = 'returncode'\nMESS6 = disrc\n\n\"ISPEXEC ADDPOP\"\n\"ISPEXEC DISPLAY PANEL(CIC0000)\"\n\"ISPEXEC REMPOP\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88CF1": {"ttr": 1283, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg kz table pol polv sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(SMF88CF1)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88cf1 smf88cf1 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88CF1 SMF88CF1 sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  if substr(zcmd,1,1) = 'F' | substr(zcmd,1,1) = 'L'\n  then do\n    fi = length(zcmd)\n    if fi < 3\n    then do\n      \"ispexec setmsg msg(cica001)\"\n      signal display\n    end\n    else do\n      cics = substr(zcmd,3,fi-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(pol) condlist(ge)\"\n      signal display\n    end\n  end\n  do while ztdsels > 0\n    if a = 'S'\n    then do\n      call smf88cf9 pol\n    end\n    signal display\n  end\n  signal display\nend\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88CF2": {"ttr": 1285, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg table pol\n\nsel = 'CF names for pol ' pol\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(SMF88CF2)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88cf2 smf88cf2 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88CF2 SMF88CF2 sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  if substr(zcmd,1,1) = 'F' | substr(zcmd,1,1) = 'L'\n  then do\n    fi = length(zcmd)\n    if fi < 3\n    then do\n      \"ispexec setmsg msg(cica001)\"\n      signal display\n    end\n    else do\n      cics = substr(zcmd,3,fi-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(cfn) condlist(ge)\"\n      signal display\n    end\n  end\n  signal display\nend\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88CF3": {"ttr": 1287, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg table pol\n\nsel = 'CF structures for pol ' pol\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(smf88cf3)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88cf3 smf88cf3 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 smf88cf3 smf88cf3 sel\n  signal display\nend\n\nif rc > 0\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  if substr(zcmd,1,1) = 'F' | substr(zcmd,1,1) = 'L'\n  then do\n    fi = length(zcmd)\n    if fi < 3\n    then do\n      \"ispexec setmsg msg(cica001)\"\n      signal display\n    end\n    else do\n      cics = substr(zcmd,3,fi-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(str) condlist(ge)\"\n      signal display\n    end\n  end\n  signal display\nend\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88CF8": {"ttr": 1289, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select entries from CFRM tables            */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg table procname fieldv\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\ntabname     = 'R'||time('S')\n\n\"ISPEXEC TBVCLEAR \" table\n\npol    = fieldv\n\n\"ISPEXEC TBQUERY\" table \" KEYS(TKEYS) NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(POL,EQ)\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS\"TKEYS \" NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || field  \" = \" fieldv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(SMF8800)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBTOP \" tabname\n\nprocname tabname pol\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88CF9": {"ttr": 1291, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for CFRM policy        */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\n\"ispexec control errors return\"\n\narg pol\n\ndisplay:\n\"ISPEXEC ADDPOP ROW(04) COLUMN(08)\"\n\"ISPEXEC DISPLAY PANEL(smf88cf9)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL HSM0000 smf88cf9 smf88cf9 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1\n  then do\n    call smf88cf8 CFRMT001 smf88cf2 pol\n  end\n  when zcmd = 2\n  then do\n    call smf88cf8 CFRMT002 smf88cf3 pol\n  end\n  otherwise\nend\n\nsignal display\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88C00": {"ttr": 1293, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for SMF88 Records      */\n/* struktur   : Struktur f}r SMF88 siehe SMF Guide         */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nsmf88in = 'SMF88.INPUT.FILE'\nt       = 'E'\n\nSTART:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(smf88c00)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88c00 smf88c00 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN DO\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\ncall smf88c01 t smf88in\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88C01": {"ttr": 4869, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* Rexx */\n/**********************************************************/\n/*                                                        */\n/* Function : This rexx scans SMF datset for smf88 records*/\n/*            extracted from SMF (via IFASMFDP program)   */\n/*                                                        */\n/**********************************************************/\n/*\n   TRACE ?R\n*/\n\n\"ispexec control errors return\"\n\nx      = msg('OFF')\n\narg t indsn\n\nindsn  = \"'\"indsn\"'\"\n\nsmfid  = 88\nnumrec = 5000\noutdsn = \"'\"userid()\".SMF88.INPUT'\"\noutrep = \"'\"userid()\".SMF88.REPORT'\"\n\n\"FREE F(SORTIN)\"\n\"FREE F(SORTOUT)\"\n\nif sysdsn(outdsn)='OK' then \"DELETE \"outdsn\nif sysdsn(outrep)='OK' then \"DELETE \"outrep\n\nif sysdsn(indsn) \u00ac='OK'\nthen do\n  say indsn \" not cataloged\"\n  exit\nend\n\nsay \"SMF Data Set Analyzed: \"indsn\n\nopso   = \"NEW CATALOG SPACE(5 1) CYL RECFM(v B) LRECL(4096)\"\nops    = \"NEW CATALOG SPACE(5 1) CYL RECFM(F B A) LRECL(132)\"\n\n\"ALLOC F(sortin) DA(\"indsn\") SHR\"\n\"ALLOC F(sortout) DA(\"outdsn\") \"opso\n\n\"alloc f(sysin) recfm(f b) lrecl(80) new\",\n  \"delete cylinders space(1,1) reuse dsorg(PS)\"\n\"alloc f(sysout) recfm(v b) lrecl(255) new\",\n  \"delete cylinders space(1,1) reuse dsorg(PS)\"\n\"alloc f(sysprint) recfm(v b) lrecl(255) new\",\n  \"delete cylinders space(1,1) reuse dsorg(PS)\"\n\nqueue \" OPTION VLSHRT \"\nqueue \" SORT  FIELDS=(133,8,BI,A,  \"         /* +4 wgen VB  */\nqueue \"               105,26,CH,A) \"\nqueue \" INCLUDE COND=(23,2,BI,EQ,X'0001',AND, \"\nqueue \"                6,1,BI,EQ,X'58')\"\n/*\nqueue \"               105,length-of-cics,CH,EQ,C'cicssystem',AND, \"\nqueue \"               105,length-of-lsname,CH,EQ,C'lsname',AND, \"\nqueue \"               213,10,CH,EQ,C'*DASDONLY*')\"\n*/\nnrec  = queued()\n\n\"execio \" nrec \" diskW sysin(fini\"\n\naddress linkmvs \"SORT\"\n\n\"execio * diskR sysout(fini stem myLine.\"\n\"execio * diskR sysprint(fini stem myLine.\"\n\n\"free f(sortin sortout sysin sysout sysprint)\"\n\ndo i  = 1 to myline.0\n  say myline.i\n  if pos(\"ICE054I\",myline.i) > 0 | pos(\"CASO061I\",myline.i) > 0\n  then do\n    if pos(\" OUT: \",myline.i) > 0 | pos(\",OUT \",myline.i)  > 0\n    then do\n      numin  = word(myline.i,6)\n      numin  = strip(numin,'t',',')\n      numout = word(myline.i,8)\n    end\n  end\n  if pos(\"CASO061I\",myline.i) > 0\n  then do\n    if pos(\",OUT \",myline.i)  > 0\n    then do\n      numin  = substr(word(myline.i,4),1,8)\n      numin  = strip(numin,'t',',')\n      numin  = strip(numin,'l','0')\n      numout = word(myline.i,5)\n      numout = strip(numout,'l','0')\n    end\n  end\nend\n\nsay \"Number of records read: \"numin\nsay \"Number of records out: \"numout\n\n\"ALLOC F(rport88) DA(\"outrep\") \"ops\n\"ALLOC F(smfdata) DA(\"outdsn\") shr\"\n\n\"ispexec vget (llqload smfhlq)\"\n\n\"CALL '\"SMFHLQ\".\"LLQLOAD\"(IXGRPT1L)'\"\n\nif sysdsn(outdsn)='OK' then \"DELETE \"outdsn\n\ncall smf88r00 t outrep\n\nif sysdsn(outrep)='OK' then \"DELETE \"outrep\n\nx      = msg('ON')\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88LG1": {"ttr": 2563, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for CFRM policy        */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\n\"ispexec control errors return\"\n\narg table1 table2 table3\n\n\"ispexec tbtop\"  table1\n\"ispexec tbskip\" table1\n\"ispexec tbget\"  table1\n\ndisplay:\n\"ISPEXEC ADDPOP ROW(04) COLUMN(08)\"\n\"ISPEXEC DISPLAY PANEL(smf88lg1\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL HSM0000 smf88lg1 smf88lg1 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nexit\n\ncall smf88lg2\n\nsignal display\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88LG2": {"ttr": 1295, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for CFRM policy        */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\n\"ispexec control errors return\"\n\ndisplay:\n\"ISPEXEC ADDPOP ROW(04) COLUMN(08)\"\n\"ISPEXEC DISPLAY PANEL(smf88lg2)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL HSM0000 smf88lg2 smf88lg2 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1\n  then do\n    call smf88lg3 CFRMT001 smf88cf2 pol\n  end\n  when zcmd = 2\n  then do\n    call smf88lg4 CFRMT002 smf88cf3 pol\n  end\n  otherwise\nend\n\nsignal display\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88R00": {"ttr": 2057, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for SMF88 Records      */\n/* struktur   : Struktur SMF88 recors see SMF Guide        */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\n\"ispexec control errors return\"\n\narg t smf88rep rest\n\n\"ALLOC DD(smf88rep) DA(\"smf88rep\") SHR\"\n\nif rc > 0\nTHEN do\n  MESS1 = 'dataset not found' smf88rep\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(SMF8800)\"\n  \"ISPEXEC REMPOP\"\n  exit\nend\n\n/*---------------------------------------------------------*/\n/* Main loop to process SMF88 Records                      */\n/*---------------------------------------------------------*/\n\n\"execio * diskr smf88rep(stem x. finis\"\n\"free f(smf88rep)\"\n\nif T = 'D'\nthen do\n  \"ISPEXEC TBEND   SMF88T01\"\n  \"ISPEXEC TBERASE SMF88T01\"\n  \"ISPEXEC TBCREATE SMF88T01 KEYS(CICS)\"\n  \"ISPEXEC TBEND   SMF88T02\"\n  \"ISPEXEC TBERASE SMF88T02\"\n  \"ISPEXEC TBCREATE SMF88T02 KEYS (JOURNAL)\"\n  \"ISPEXEC TBEND   SMF88T03\"\n  \"ISPEXEC TBERASE SMF88T03\"\n  \"ISPEXEC TBCREATE SMF88T03 KEYS (DATE TIME CICS JOURNAL) NAMES (DATES\n   DATUM BWUS BDISTWOD BWIST DWOD BWTD BDISTWD WI DWW OFF SHFT THLD STRF\n   NTRF STGF REBLD WT1 WT2 WT3 AVBSZ LSN)\"\n  \"ISPEXEC TBEND   SMF88T04\"\n  \"ISPEXEC TBERASE SMF88T04\"\n  \"ISPEXEC TBCREATE SMF88T04 KEYS (DATUM) NAMES(DATE DATES DAY)\"\n  \"ISPEXEC TBERASE SMF88T05\"\n  \"ISPEXEC TBCREATE SMF88T05 KEYS (TIME)\"\n  \"ISPEXEC TBERASE SMF88T06\"\n  \"ISPEXEC TBCREATE SMF88T06 KEYS (LSN)   NAMES(LTYPE)\"\nend\nelse do\n  \"ISPEXEC TBOPEN SMF88T01\"\n  \"ISPEXEC TBOPEN SMF88T02\"\n  \"ISPEXEC TBOPEN SMF88T03\"\n  \"ISPEXEC TBOPEN SMF88T04\"\n  \"ISPEXEC TBOPEN SMF88T05\"\n  \"ISPEXEC TBOPEN SMF88T06\"\nend\n\ndo i = 1 to x.0\n  recordtype= substr(x.i,1,4)\n  record1   = x.i\n  select\n    when recordtype= '    '\n    then do\n      if pos('*DASDONLY*',x.i)  = 0 then nop\n      else call process_smf88_record\n    end\n    when recordtype= '  --'\n    then do\n      nop\n    end\n    when recordtype= '  __'\n    then do\n      nop\n    end\n    when recordtype= '0 __'\n    then do\n      nop\n    end\n    when recordtype= '1   '\n    then do\n      nop\n    end\n    when recordtype= '0   '\n    then do\n      nop\n    end\n    when recordtype= '-   '\n    then do\n      nop\n    end\n    when recordtype= '+   '\n    then do\n      nop\n    end\n    otherwise do\n      date  = word(record1,1)\n      if date = 'REPORT'\n      then do\n        i   = x.0\n        leave\n      end\n      datum    = substr(date,4,2)||'/'||substr(date,1,2)||'/'\n      datum    = datum||substr(date,7,2)\n      day      = date('w',datum,'E')\n      dates    = substr(date,7,2)||substr(date,1,2)||substr(date,4,2)\n      time_1   = word(record1,2)\n      zone     = word(record1,3)\n\n      if length(time_1) = 7 then time_1 = 0||time_1\n      std      = substr(time_1,1,2)\n      min      = substr(time_1,4,2)\n\n      if zone  = 'PM' then std = std + 12\n\n      if std   = 24   then std = 12\n\n      time     = std||substr(time_1,3,6)\n\n      i        = i + 1\n      call process_smf88_record\n    end\n  end\nend\n\n\"ISPEXEC TBSORT  SMF88T01 FIELDS(CICS)\"\n\"ISPEXEC TBCLOSE SMF88T01\"\n\"ISPEXEC TBSORT  SMF88T02 FIELDS(JOURNAL)\"\n\"ISPEXEC TBCLOSE SMF88T02\"\n\"ISPEXEC TBSORT  SMF88T03 FIELDS(DATES,C,A,TIME,C,A,CICS,C,A,JOURNAl)\"\n\"ISPEXEC TBCLOSE SMF88T03\"\n\"ISPEXEC TBSORT  SMF88T04 FIELDS(DATES)\"\n\"ISPEXEC TBCLOSE SMF88T04\"\n\"ISPEXEC TBSORT  SMF88T05 FIELDS(TIME)\"\n\"ISPEXEC TBCLOSE SMF88T05\"\n\"ISPEXEC TBSORT  SMF88T06 FIELDS(LSN)\"\n\"ISPEXEC TBCLOSE SMF88T06\"\n\nexit\n\nprocess_smf88_record:\nrecord2  = x.i\n\nlsn      = word(record2,1)\n\nif pos('DFH',lsn) = 0                 /* select only cics logs  */\nthen do\n  i      = i +1\n  return\nend\n\nltype    = word(record2,2)\nplsn     = pos('.',lsn)\ncics     = substr(lsn,1,plsn-1)\nlsn2     = substr(lsn,plsn+1)\nplsn     = pos('.',lsn2)\njournal  = substr(lsn2,plsn+1)\nbwus     = word(record2,3)\nbwus     = strip(bwus,'T','00'x)\nbwist    = word(record2,4)\nbwist    = strip(bwist,'T','00'x)\nbwtd     = word(record2,5)\nbwtd     = strip(bwtd,'T','00'x)\nwi       = word(record2,6)\nwi       = strip(wi,'T','00'x)\nwt1      = word(record2,7)\nwt1      = strip(wt1,'T','00'x)\nwt2      = word(record2,8)\nwt2      = strip(wt2,'T','00'x)\nwt3      = word(record2,9)\nwt3      = strip(wt3,'T','00'x)\navbsz    = word(record2,10)\navbsz    = strip(avbsz,'T','00'x)\n\ni        = i + 1\nrecord3  = x.i\n\nbdistwod = word(record3,1)\nbdistwod = strip(bdistwod,'T','00'x)\ndwod     = word(record3,2)\ndwod     = strip(dwod,'T','00'x)\nbdistwd  = word(record3,3)\nbdistwd  = strip(bdistwd,'T','00'x)\ndww      = word(record3,4)\ndww      = strip(dww,'T','00'x)\noff      = word(record3,5)\noff      = strip(off,'T','00'x)\nshft     = word(record3,6)\nshft     = strip(shft,'T','00'x)\nstrf     = word(record3,7)\nstrf     = strip(strf,'T','00'x)\nntrf     = word(record3,8)\nntrf     = strip(ntrf,'T','00'x)\nthld     = word(record3,9)\nthld     = strip(thld,'T','00'x)\nstgf     = word(record3,10)\nstgf     = strip(stgf,'T','00'x)\nrebld    = word(record3,11)\nrebld    = strip(rebld,'T','00'x)\n\n\"ispexec tbadd smf88t01\"\n\"ispexec tbadd smf88t02\"\n\"ispexec tbadd smf88t03\"\n\"ispexec tbadd smf88t04\"\n\"ispexec tbadd smf88t05\"\n\"ispexec tbadd smf88t06\"\n\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88R01": {"ttr": 2561, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for LOGR control       */\n/*              dataset                                    */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\n\"ispexec control errors return\"\n\n\"free f(sysin)\"\n\"free f(sysprint)\"\n\n\"ALLOC DD(SYSPRINT) NEW SP(1,1) TRACKS\n                    RECFM(F B A) LRECL(121) BLKSIZE(1210)\"\n\n\"ALLOC DD(SYSIN) NEW LRECL(80) SPACE (1 1) TRACKS REUSE UNIT(SYSALLDA)\n                 RECFM(F)  BLKSIZE(80)\"\n\nQUEUE  'DATA TYPE(LOGR)'\n\n\"execio 1 diskw sysin (finis\"\n\n\"ispexec select pgm(IXCMIAPU)\"\n\n\"execio * diskr sysprint(stem logr. finis\"\n\n\"free f(sysin)\"\n\"free f(sysprint)\"\n\n\"ISPEXEC TBERASE  LOGRT000\"\n\"ISPEXEC TBCREATE LOGRT000 NOWRITE NAMES(L1 L2 L3 L4 L5 L6 L7)\"\n\n\"ISPEXEC TBERASE  LOGRT001\"\n\"ISPEXEC TBCREATE LOGRT001 NOWRITE KEYS (LSN) NAMES (DASD RET AUT\n  STRUC LSDC LSMC LSSC HLQ MOD LSS STMC STSC STDC STS STD LOWO HIGHO)\"\n\n\"ISPEXEC TBERASE  LOGRT002\"\n\"ISPEXEC TBCREATE LOGRT002 NOWRITE KEYS (STR) NAMES (sname lgsn maxbf\n  avgbf eavgbf lsd)\"\n\ndo i = 1 to logr.0\n  record    = substr(logr.i,2)\n  if pos('LOGR Inventory',logr.i) > 0 then call process_inv_record\n  if pos('STRUCTURE',logr.i)      > 0 then call process_str_record\nend\n\n\"ISPEXEC TBSORT  LOGRT001  FIELDS(LSN)\"\n\ncall smf88lg1 logrt000 logrt001 logrt002\n\n\"ISPEXEC TBEND   LOGRT000\"\n\"ISPEXEC TBEND   LOGRT001\"\n\"ISPEXEC TBEND   LOGRT002\"\n\nexit\n\nprocess_inv_record:\n\nl1       = record\nl1       = strip(l1)\n\ni        = i + 3\nrecord   = substr(logr.i,2)\n\nl2       = record\nl2       = strip(l2)\n\ni        = i + 3\nrecord   = substr(logr.i,2)\n\nl3       = record\nl3       = strip(l3)\n\ni        = i + 1\nrecord   = substr(logr.i,2)\n\nl4       = record\nl4       = strip(l4)\n\ni        = i + 2\nrecord   = substr(logr.i,2)\n\nl5       = record\nl5       = strip(l5)\n\ni        = i + 2\nrecord   = substr(logr.i,2)\n\nl6       = record\nl6       = strip(l6)\n\ni        = i + 2\nrecord   = substr(logr.i,2)\n\nl7       = record\nl7       = strip(l7)\n\n\"ispexec tbadd logrt000\"\n\nreturn\n\nprocess_lsn_record:\n\nrecord2  = record\n\nlsn      = word(record2,1)\nlsn      = substr(lsn,6)\nlsn      = strip(lsn,'T',')')\n\ni        = i + 1\nrecord3  = x.i\n\n\"ispexec tbadd logrt000\"\n\nreturn\n\nprocess_str_record:\n\nlogr.i   = substr(logr.i,2)\n\nsname    = substr(word(logr.i,2),6)\npsname   = pos(')',sname)\nsname    = substr(sname,1,psname-1)\nlgsn     = substr(word(logr.i,3),9)\nplgsn    = pos(')',lgsn)\nlgsn     = substr(lgsn,1,plgsn-1)\ni        = i + 1\nlogr.i   = substr(logr.i,2)\nmaxbf    = substr(word(logr.i,1),12)\npmaxbf   = pos(')',maxbf)\nmaxbf    = substr(maxbf,1,pmaxbf-1)\navgbf    = substr(word(logr.i,2),12)\npavgbf   = pos(')',avgbf)\navgbf    = substr(avgbf,1,pavgbf-1)\ni        = i + 1\nlogr.i   = substr(logr.i,2)\neavgbf   = substr(word(logr.i,4),6)\npavgbf   = pos(')',eavgbf)\neavgbf   = substr(eavgbf,1,pavgbf-1)\ni        = i + 2\nlogr.i   = substr(logr.i,2)\nlsd      = substr(word(logr.i,6),11)\nplsd     = pos(')',lsd)\nlsd      = substr(lsd,1,plsd-1)\n\n\"ispexec tbadd logrt002\"\n\nreturn\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88R02": {"ttr": 1537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for CFRM control       */\n/*              dataset                                    */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\n\"ispexec control errors return\"\n\nM = MSG(OFF)\n\"free f(sysin)\"\n\"free f(sysprint)\"\n\n\"ALLOC DD(SYSPRINT) NEW SP(1,1) TRACKS\n                    RECFM(F B A) LRECL(121) BLKSIZE(1210)\"\n\n\"ALLOC DD(SYSIN) NEW LRECL(80) SPACE (1 1) TRACKS REUSE UNIT(SYSALLDA)\n                 RECFM(F)  BLKSIZE(80)\"\n\nQUEUE  'DATA TYPE(CFRM)'\n\n\"execio 1 diskw sysin (finis\"\n\n\"ispexec select pgm(IXCMIAPU)\"\n\n\"execio * diskr sysprint(stem cfrm. finis\"\n\n\"free f(sysin)\"\n\"free f(sysprint)\"\n\nM = MSG(ON)\n\n\"ISPEXEC TBERASE  CFRMT000\"\n\"ISPEXEC TBCREATE CFRMT000 KEYS (POL) NAMES (DESC ANZSTR ANZCF)\"\n\"ISPEXEC TBERASE  CFRMT001\"\n\"ISPEXEC TBCREATE CFRMT001 KEYS (CFN POL) NAMES (DSPC PART CPCID TYPE\n                                                 MFG PLANT SEQ SIDE)\"\n\"ISPEXEC TBERASE  CFRMT002\"\n\"ISPEXEC TBCREATE CFRMT002 KEYS (STR POL) NAMES (SIZE RBPCT ISIZE PRFL\n                                                 EXCL DUPL ENFO)\"\n\ndo i = 10 to cfrm.0\n  if pos('DEFINE POLICY',cfrm.i) > 0 then call process_pol_record\n  if pos('CF NAME',cfrm.i)       > 0 then call process_cfm_record\n  if pos('STRUCTURE NAM',cfrm.i) > 0 then call process_str_record\nend\n\n\"ISPEXEC TBSORT  CFRMT000  FIELDS(POL)\"\n\"ISPEXEC TBSORT  CFRMT001  FIELDS(CFN,C,A,POL)\"\n\"ISPEXEC TBSORT  CFRMT002  FIELDS(STR,C,A,POL)\"\n\ncall SMF88CF1 ALL CFRMT000 NONE NONE \"all CFRM policies\"\n\n\"ISPEXEC TBEND   CFRMT000\"\n\"ISPEXEC TBEND   CFRMT001\"\n\"ISPEXEC TBEND   CFRMT002\"\n\nexit\n\nprocess_pol_record:\n\ncfrm.i   = substr(cfrm.i,2)\n\npol      = substr(word(cfrm.i,3),6,8)\ni        = i + 1\ndesc     = substr(cfrm.i,8)\ni        = i + 1\ncfrm.i   = substr(cfrm.i,2)\nanzstr   = word(cfrm.i,2)\ni        = i + 1\ncfrm.i   = substr(cfrm.i,2)\nanzcf    = word(cfrm.i,2)\ni        = i + 1\n\n\"ispexec tbadd cfrmt000\"\n\nreturn\n\nprocess_cfm_record:\n\ncfrm.i   = substr(cfrm.i,2)\n\ncfn      = substr(word(cfrm.i,2),6,4)\ndspc     = substr(word(cfrm.i,3),11)\npdspc    = pos(')',dspc)\ndspc     = substr(dspc,1,pdspc-1)\npart     = substr(word(cfrm.i,4),11)\nppart    = pos(')',part)\npart     = substr(part,1,ppart-1)\ncpcid    = substr(word(cfrm.i,5),7)\npcpcid   = pos(')',cpcid)\ncpcid    = substr(cpcid,1,pcpcid-1)\ni        = i + 1\ncfrm.i   = substr(cfrm.i,2)\ntype     = substr(word(cfrm.i,1),6,6)\nmfg      = substr(word(cfrm.i,2),5)\npmfg     = pos(')',mfg)\nmfg      = substr(mfg,1,pmfg-1)\nplant    = substr(word(cfrm.i,3),7)\npplant   = pos(')',plant)\nplant    = substr(plant,1,pplant-1)\nseq      = substr(word(cfrm.i,4),10)\npseq     = pos(')',seq)\nseq      = substr(seq,1,pseq-1)\ni        = i + 1\n\n\"ispexec tbadd cfrmt001\"\n\nreturn\n\nprocess_str_record:\n\ncfrm.i   = substr(cfrm.i,2)\n\nisize    = ''\nprfl     = ''\nexcl     = ''\nrbpct    = ''\nstr      = substr(word(cfrm.i,2),6)\npstr     = pos(')',str)\nstr      = substr(str,1,pstr-1)\nsize     = substr(word(cfrm.i,3),6)\npsize    = pos(')',size)\nsize     = substr(size,1,psize-1)\ni        = i + 1\ncfrm.i   = substr(cfrm.i,2)\nif pos('INITSIZE',cfrm.i) > 0\nthen do\n  isize  = substr(word(cfrm.i,1),10)\n  pisize = pos(')',isize)\n  isize  = substr(isize,1,pisize-1)\n  i      = i + 1\n  cfrm.i = substr(cfrm.i,2)\nend\nif pos('REBUILDP',cfrm.i) > 0\nthen do\n  rbpct  = substr(word(cfrm.i,1),16)\n  prbpct = pos(')',rbpct)\n  rbpct  = substr(rbpct,1,prbpct-1)\n  i      = i + 1\n  cfrm.i = substr(cfrm.i,2)\nend\nif pos('PREFLIST',cfrm.i) > 0\nthen do\n  pprfl  = pos('(',cfrm.i)\n  prfl   = substr(cfrm.i,pprfl+1)\n  pprfl  = pos(')',prfl)\n  prfl   = substr(prfl,1,pprfl-1)\n  i      = i + 1\n  cfrm.i = substr(cfrm.i,2)\nend\nif pos('EXCLLIST',cfrm.i) > 0\nthen do\n  excl   = substr(word(cfrm.i,1),10)\n  pexcl  = pos(')',excl)\n  excl   = substr(excl,1,pexcl-1)\nend\n\n\"ispexec tbadd cfrmt002\"\n\nreturn\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88R03": {"ttr": 1539, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for logstream          */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\n\"ispexec control errors return\"\n\narg func lsn\n\nlogrrc   = 8\n\"ispexec vput logrrc\"\n\nM = MSG(OFF)\n\"free f(sysin)\"\n\"free f(sysprint)\"\n\n\"ALLOC DD(SYSPRINT) NEW SP(1,1) TRACKS\n                    RECFM(F B A) LRECL(133) BLKSIZE(1330)\"\n\n\"ALLOC DD(SYSIN) NEW LRECL(80) SPACE (1 1) TRACKS REUSE UNIT(SYSALLDA)\n                 RECFM(F)  BLKSIZE(80)\"\n\nQUEUE  ' DATA TYPE(LOGR) REPORT(NO)'\nQUEUE  ' LIST LOGSTREAM NAME('lsn')'\n\n\"execio 2 diskw sysin (finis\"\n\n\"ISPEXEC SELECT PGM(IXCMIAPU)\"\n/*\n\"CALL 'SYS1.MIGLIB(IXCMIAPU)'\"\n*/\n\"execio * diskr sysprint(stem logr. finis\"\n\n\"free f(sysin)\"\n\"free f(sysprint)\"\n\nM = MSG(ON)\n\ndo i = 10 to logr.0\n  if func = 'HLQ'\n  then do\n    if pos(' HLQ(',logr.i)       > 0\n    then do\n      logr.i = substr(logr.i,2)\n      hlq  = word(logr.i,3)\n      phlq = pos('(',hlq)\n      hlq  = substr(hlq,phlq+1)\n      hlq  = substr(hlq,1,length(hlq)-1)\n      logrrc = 0\n      \"ispexec vput (logrrc hlq)\"\n      exit\n    end\n  end\nend\n\nexit\n\"ISPEXEC TBSORT  CFRMT001  FIELDS(CFN,C,A,POL)\"\n\"ISPEXEC TBSORT  CFRMT002  FIELDS(STR,C,A,POL)\"\n\ncall SMF88CF1 ALL CFRMT000 NONE NONE \"all CFRM policies\"\n\n\"ISPEXEC TBEND   CFRMT000\"\n\"ISPEXEC TBEND   CFRMT001\"\n\"ISPEXEC TBEND   CFRMT002\"\n\nexit\n\nprocess_pol_record:\n\ncfrm.i   = substr(cfrm.i,2)\n\npol      = substr(word(cfrm.i,3),6,8)\ni        = i + 1\ndesc     = substr(cfrm.i,8)\ni        = i + 1\ncfrm.i   = substr(cfrm.i,2)\nanzstr   = word(cfrm.i,2)\ni        = i + 1\ncfrm.i   = substr(cfrm.i,2)\nanzcf    = word(cfrm.i,2)\ni        = i + 1\n\n\"ispexec tbadd cfrmt000\"\n\nreturn\n\nprocess_cfm_record:\n\ncfrm.i   = substr(cfrm.i,2)\n\ncfn      = substr(word(cfrm.i,2),6,4)\ndspc     = substr(word(cfrm.i,3),11)\npdspc    = pos(')',dspc)\ndspc     = substr(dspc,1,pdspc-1)\npart     = substr(word(cfrm.i,4),11)\nppart    = pos(')',part)\npart     = substr(part,1,ppart-1)\ncpcid    = substr(word(cfrm.i,5),7)\npcpcid   = pos(')',cpcid)\ncpcid    = substr(cpcid,1,pcpcid-1)\ni        = i + 1\ncfrm.i   = substr(cfrm.i,2)\ntype     = substr(word(cfrm.i,1),6,6)\nmfg      = substr(word(cfrm.i,2),5)\npmfg     = pos(')',mfg)\nmfg      = substr(mfg,1,pmfg-1)\nplant    = substr(word(cfrm.i,3),7)\npplant   = pos(')',plant)\nplant    = substr(plant,1,pplant-1)\nseq      = substr(word(cfrm.i,4),10)\npseq     = pos(')',seq)\nseq      = substr(seq,1,pseq-1)\ni        = i + 1\n\n\"ispexec tbadd cfrmt001\"\n\nreturn\n\nprocess_str_record:\n\ncfrm.i   = substr(cfrm.i,2)\n\nisize    = ''\nprfl     = ''\nexcl     = ''\nrbpct    = ''\nstr      = substr(word(cfrm.i,2),6)\npstr     = pos(')',str)\nstr      = substr(str,1,pstr-1)\nsize     = substr(word(cfrm.i,3),6)\npsize    = pos(')',size)\nsize     = substr(size,1,psize-1)\ni        = i + 1\ncfrm.i   = substr(cfrm.i,2)\nif pos('INITSIZE',cfrm.i) > 0\nthen do\n  isize  = substr(word(cfrm.i,1),10)\n  pisize = pos(')',isize)\n  isize  = substr(isize,1,pisize-1)\n  i      = i + 1\n  cfrm.i = substr(cfrm.i,2)\nend\nif pos('REBUILDP',cfrm.i) > 0\nthen do\n  rbpct  = substr(word(cfrm.i,1),16)\n  prbpct = pos(')',rbpct)\n  rbpct  = substr(rbpct,1,prbpct-1)\n  i      = i + 1\n  cfrm.i = substr(cfrm.i,2)\nend\nif pos('PREFLIST',cfrm.i) > 0\nthen do\n  pprfl  = pos('(',cfrm.i)\n  prfl   = substr(cfrm.i,pprfl+1)\n  pprfl  = pos(')',prfl)\n  prfl   = substr(prfl,1,pprfl-1)\n  i      = i + 1\n  cfrm.i = substr(cfrm.i,2)\nend\nif pos('EXCLLIST',cfrm.i) > 0\nthen do\n  excl   = substr(word(cfrm.i,1),10)\n  pexcl  = pos(')',excl)\n  excl   = substr(excl,1,pexcl-1)\nend\n\n\"ispexec tbadd cfrmt002\"\n\nreturn\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88SR3": {"ttr": 1541, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for SMF88 Records      */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg table\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\nSTART:\n\"ISPEXEC ADDPOP ROW(05) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(SMF88SR3)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88sr3 smf88sr3 RC\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(DATE,C,A,TIME,C,A)\"\n  end\n  when zcmd = 2\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(time,C,A,date,C,A)\"\n  end\n  when zcmd = 3\n  then do\n    \"ISPEXEC TBSORT \"table \" FIELDS(Journal,C,A,cics,c,a,date,c,a,time)\"\n  end\n  when zcmd = 4\n  then do\n    \"ISPEXEC TBSORT \"table \" FIELDS(cics,c,a,journal,c,a,date,c,a,time)\"\n  end\n  when zcmd = 5\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(BWTD,N,A,date,c,a,time,c,a)\"\n  end\n  when zcmd = 6\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(BDISTWD,N,A,date,c,a,time,c,a)\"\n  end\n  when zcmd = 7\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(WI,N,A,date,c,a,time,c,a)\"\n  end\n  when zcmd = 8\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(DWW,N,A,date,c,a,time,c,a)\"\n  end\n  otherwise signal start\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88SS3": {"ttr": 1543, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for SMF88 Records      */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg table\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\nSTART:\n\"ISPEXEC ADDPOP ROW(05) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(SMF88SS3)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88ss3 smf88ss3 RC\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(DATE,C,A,TIME,C,A)\"\n  end\n  when zcmd = 2\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(time,C,A,date,C,A)\"\n  end\n  when zcmd = 3\n  then do\n    \"ISPEXEC TBSORT \"table \" FIELDS(Journal,C,A,cics,c,a,date,c,a,time)\"\n  end\n  when zcmd = 4\n  then do\n    \"ISPEXEC TBSORT \"table \" FIELDS(cics,c,a,journal,c,a,date,c,a,time)\"\n  end\n  when zcmd = 5\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(OFF,N,D,date,c,a,time,c,a)\"\n  end\n  when zcmd = 6\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(SHFT,N,D,date,c,a,time,c,a)\"\n  end\n  when zcmd = 7\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(STRF,N,D,date,c,a,time,c,a)\"\n  end\n  when zcmd = 8\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(NTRF,N,D,date,c,a,time,c,a)\"\n  end\n  when zcmd = 9\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(THLD,N,D,date,c,a,time,c,a)\"\n  end\n  when zcmd = 10\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(STGF,N,D,date,c,a,time,c,a)\"\n  end\n  when zcmd = 11\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(rebld,N,D,date,c,a,time,c,a)\"\n  end\n  when zcmd = 12\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(AVBSZ,N,D,date,c,a,time,c,a)\"\n  end\n  otherwise signal start\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88S00": {"ttr": 1793, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/*\n    trace ?r\n*/\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nparse arg kz       ,\n          table    ,\n          fieldc   ,\n          cicsv    ,\n          fieldj   ,\n          journalv ,\n          fieldd   ,\n          datumv   ,\n          fieldt   ,\n          timev    ,\n          sel\n\nSTART:\nCSEL = \"\"\n\"ISPEXEC VPUT CSEL\"\n\n\"ISPEXEC ADDPOP ROW(03) COLUMN(10)\"\n\"ISPEXEC DISPLAY PANEL(SMF88S00)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88s00 smf88s00 RC\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nSELECT\n  WHEN ZCMD = 1 THEN CSEL='OFF'\n  WHEN ZCMD = 2 THEN CSEL='SHFT'\n  WHEN ZCMD = 3 THEN CSEL='STRF'\n  WHEN ZCMD = 4 THEN CSEL='NTRF'\n  WHEN ZCMD = 5 THEN CSEL='THLD'\n  WHEN ZCMD = 6 THEN CSEL='STGF'\n  otherwise       CSEL=\"\"\nEND\n\nIF CSEL = \"\" THEN exit\nIF KZ = CSEL THEN EXIT\n\n\"ISPEXEC VPUT CSEL\"\n\nfieldn = \"\"\n\n\"ISPEXEC TBVCLEAR \" table\n\nif cicsv  \u00ac= 'NONE'\nthen do\n  field  = fieldc||',EQ,'\n  fieldn = fieldn||field\n  name   = fieldc\n  call value name,cicsv\nend\n\nif journalv \u00ac= 'NONE'\nthen do\n  field  = fieldj||',EQ'\n  fieldn = fieldn||field\n  name   = fieldj\n  call value name,journalv\nend\n\nif datumv   \u00ac= 'NONE'\nthen do\n  field= ','||fieldd||',EQ'\n  fieldn = fieldn||field\n  name   = fieldd\n  call value name,datumv\nend\n\nif timev    \u00ac= 'NONE'\nthen do\n  field= ','||fieldt||',EQ'\n  fieldn = fieldn||field\n  name   = fieldt\n  call value name,timev\nend\n\nco = 'GT'\n\nname        = csel\nfieldn      = fieldn||','||csel||','co\nfieldv      = 0\n\nsel = csel ' greater 1'\n\ncall value name,fieldv\n\n\"ISPEXEC TBQUERY\" table \" KEYS(TKEY) KEYNUM(TKEYNUM) NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"fieldn\")\"\n\ntabname     = 'R'||time('S')\n\n\"ISPEXEC TBERASE \" tabname\n\nif tkeynum  = 0\nthen\n  \"ISPEXEC TBCREATE \" TABNAME \" NOWRITE NAMES\"TNAMES\nelse\n  \"ISPEXEC TBCREATE \" TABNAME \" KEYS\"TKEY\" NOWRITE NAMES\"TNAMES\n\nrc          = 0\nrecfound    = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc     > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound  = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument follows\"\n  MESS3 = \"\"\n  MESS4 = csel '   = ' greater 0\n  MESS5 = 'CICS    = ' cicsv\n  MESS6 = 'Journal = ' journalv\n  MESS7 = 'Date    = ' datumv\n  MESS8 = 'Time    = ' timev\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(SMF8800)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  signal start\nend\n\n\"ISPEXEC TBTOP \" tabname\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" tabname \" PANEL(SMF88TS3)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88t03 smf88t03 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88T03 tabname sel\n  signal display\nend\n\nIF ZCMD = SORT\nTHEN DO\n  zcmd = ' '\n  call smf88ss3 tabname\n  signal display\nend\n\nif rc = 0\nthen do\n  signal display\nend\n\nsignal start\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88S03": {"ttr": 1795, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for SMF88 Records      */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg table\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\nSTART:\n\"ISPEXEC ADDPOP ROW(05) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(SMF88S03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88s03 smf88s03 RC\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(DATE,C,A,TIME,C,A)\"\n  end\n  when zcmd = 2\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(time,C,A,date,C,A)\"\n  end\n  when zcmd = 3\n  then do\n    \"ISPEXEC TBSORT \"table \" FIELDS(Journal,C,A,cics,c,a,date,c,a,time)\"\n  end\n  when zcmd = 4\n  then do\n    \"ISPEXEC TBSORT \"table \" FIELDS(cics,c,a,journal,c,a,date,c,a,time)\"\n  end\n  when zcmd = 5\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(BWUS,N,A,date,c,a,time,c,a)\"\n  end\n  when zcmd = 6\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(BDISTWDD,N,A,date,c,a,time,c,a)\"\n  end\n  when zcmd = 7\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(BWIST,N,A,date,c,a,time,c,a)\"\n  end\n  when zcmd = 8\n  then do\n    \"ISPEXEC TBSORT \" table \" FIELDS(DWOD,N,A,date,c,a,time,c,a)\"\n  end\n  otherwise signal start\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88TL1": {"ttr": 1797, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select SMF88 records                       */\n/* call       : From CICS selection                        */\n/*---------------------------------------------------------*/\n/*\n    trace ?r\n*/\n\nparse arg kz       ,\n          table    ,\n          cics     ,\n          cicsv    ,\n          journal  ,\n          journalv ,\n          datum    ,\n          datumv   ,\n          time     ,\n          timev    ,\n          sel\n\nSTART:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(smf88tl1)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88tl1 smf88tl1 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN DO\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1\n  then do\n    sel = 'CICS-System='cicsv 'all logstreams'\n    if datumv   \u00ac= 'NONE'\n    then do\n      msg = 'DATUM='datumv\n    end\n    if timev    \u00ac= 'NONE'\n    then do\n      msg = msg || ' TIME='timev\n    end\n    sel = msg ' CICS-System='cicsv ' all logstreams'\n    call smf88t02 ,\n         'JOUR'   ,\n         SMF88T02 ,\n         'CICS'   ,\n         cicsv    ,\n         'JOURNAL',\n         journalv ,\n         'DATUM'  ,\n         datumv   ,\n         'TIME'   ,\n         timev    ,\n         sel\n  end\n  when zcmd = 2\n  then do\n    call SMF88T03 CICS     ,\n                  SMF88T02 ,\n                  'CICS'   ,\n                  cicsv    ,\n                  'JOURNAL',\n                  journalv ,\n                  'DATUM'  ,\n                  datumv   ,\n                  'TIME'   ,\n                  timev    ,\n                  \"NOSEL\"\n  end\n  otherwise\nend\n\nsignal start\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88TL2": {"ttr": 1799, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select SMF88 records                       */\n/* call       : From Journal selection                     */\n/*---------------------------------------------------------*/\n/*\n    trace ?r\n*/\n\nparse arg kz       ,\n          table    ,\n          cics     ,\n          cicsv    ,\n          journal  ,\n          journalv ,\n          datum    ,\n          datumv   ,\n          time     ,\n          timev    ,\n          sel\n\nSTART:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(smf88tl2)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88tl2 smf88tl2 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN DO\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nselect\n  when zcmd = 1\n  then do\n    if datumv   \u00ac= 'NONE'\n    then do\n      msg = 'DATUM='datumv\n    end\n    if timev    \u00ac= 'NONE'\n    then do\n      msg = msg || ' TIME='timev\n    end\n    sel = msg ' Journal='journalv ' all CICS Systems'\n    call smf88t01 ,\n         smf88tl2 ,\n         SMF88T01 ,\n         'NONE'   ,\n         cicsv    ,\n         'JOURNAL',\n         journalv ,\n         'DATUM'  ,\n         datumv   ,\n         'TIME'   ,\n         timev    ,\n         sel\n  end\n  when zcmd = 2\n  then do\n    call SMF88T03 ALL      ,\n                  SMF88T03 ,\n                  'CICS'   ,\n                  cicsv    ,\n                  'JOURNAL',\n                  journalv ,\n                  'DATUM'  ,\n                  datumv   ,\n                  'TIME'   ,\n                  timev    ,\n                  \"NOSEL\"\n  end\n  otherwise\nend\n\nsignal start\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88TL4": {"ttr": 1801, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select SMF88 records                       */\n/* call       : From Date selection                        */\n/*---------------------------------------------------------*/\n/*\n    trace ?r\n*/\n\nparse arg kz       ,\n          table    ,\n          cics     ,\n          cicsv    ,\n          journal  ,\n          journalv ,\n          datum    ,\n          datumv   ,\n          time     ,\n          timev    ,\n          sel\n\nif datum = 'DATUM'\nthen do\n  datum  = datumv\n  \"ispexec tbget smf88t04\"\nend\nSTART:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(smf88tl4)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88tl4 smf88tl4 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN DO\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nsel = 'Datum='datum || ' '\n\nselect\n  when zcmd = 1\n  then do\n    sel = sel || 'All CICS Systems'\n    call smf88t01 ,\n         kz       ,\n         SMF88T01 ,\n         'NONE'   ,\n         cicsv    ,\n         'JOURNAL',\n         journalv ,\n         'DATUM'  ,\n         datum    ,\n         'TIME'   ,\n         timev    ,\n         sel\n  end\n  when zcmd = 2\n  then do\n    sel = sel || 'All logstreams  '\n    call SMF88T02 kz       ,\n                  SMF88T02 ,\n                  'CICS'   ,\n                  cicsv    ,\n                  'JOURNAL',\n                  journalv ,\n                  'DATUM'  ,\n                  datumv   ,\n                  'TIME'   ,\n                  timev    ,\n                  sel\n  end\n  when zcmd = 3\n  then do\n    sel = ' All time windows '\n    if datumv   \u00ac= 'NONE'\n    then do\n      msg = 'DATUM='datumv\n    end\n    if timev    \u00ac= 'NONE'\n    then do\n      msg = 'TIME='timev\n    end\n    msg   = msg || sel\n    call SMF88T05 'DATE'   ,\n                  SMF88T05 ,\n                  'CICS'   ,\n                  cicsv    ,\n                  'JOURNAL',\n                  journalv ,\n                  'DATUM'  ,\n                  datumv   ,\n                  'TIME'   ,\n                  timev    ,\n                  msg\n  end\n  when zcmd = 4\n  then do\n    call SMF88T03 ALL      ,\n                  SMF88T03 ,\n                  'CICS'   ,\n                  cicsv    ,\n                  'JOURNAL',\n                  journalv ,\n                  'DATUM'  ,\n                  datumv   ,\n                  'TIME'   ,\n                  timev    ,\n                  \"NOSEL\"\n  end\n  otherwise\nend\n\nsignal start\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88TL5": {"ttr": 2049, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select SMF88 records                       */\n/* call       : From Time selection                        */\n/*---------------------------------------------------------*/\n/*\n    trace ?r\n*/\n\nparse arg kz       ,\n          table    ,\n          cics     ,\n          cicsv    ,\n          journal  ,\n          journalv ,\n          datum    ,\n          datumv   ,\n          time     ,\n          timev    ,\n          sel\n\nif field = 'TIME'\nthen do\n  time   = fieldv\n  \"ispexec tbget smf88t05\"\nend\n\nSTART:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(smf88tl5)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88tl4 smf88tl4 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN DO\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nsel = 'Time='timev|| ' '\n\nselect\n  when zcmd = 1\n  then do\n    sel = sel || 'All CICS Systems'\n    call SMF88T01 ,\n         kz       ,\n         SMF88T01 ,\n         'CICS'   ,\n         cicsv    ,\n         'JOURNAL',\n         journalv ,\n         'DATUM'  ,\n         datumv   ,\n         'TIME'   ,\n         timev    ,\n         sel\n  end\n  when zcmd = 2\n  then do\n    if fieldv   \u00ac= 'NONE'\n    then do\n      sel = field'='fieldv 'all CICS logstreams'\n    end\n    call SMF88T02 kz       ,\n                  SMF88T02 ,\n                  'CICS'   ,\n                  cicsv    ,\n                  'JOURNAL',\n                  journalv ,\n                  'DATUM'  ,\n                  datumv   ,\n                  'TIME'   ,\n                  timev    ,\n                   sel\n  end\n  when zcmd = 3\n  then do\n    if fieldv   \u00ac= 'NONE'\n    then do\n      sel = field'='fieldv 'all Time windows'\n    end\n    if kz = 'DATE' then signal start\n    call SMF88T04 'TIME'   ,\n                  SMF88T05 ,\n                  'CICS'   ,\n                  cicsv    ,\n                  'JOURNAL',\n                  journalv ,\n                  'DATUM'  ,\n                  datumv   ,\n                  'TIME'   ,\n                  timev    ,\n                  sel\n  end\n  when zcmd = 4\n  then do\n    call SMF88T03 ALL      ,\n                  SMF88T03 ,\n                  'CICS'   ,\n                  cicsv    ,\n                  'JOURNAL',\n                  journalv ,\n                  'DATUM'  ,\n                  datumv   ,\n                  'TIME'   ,\n                  timev    ,\n                  \"NOSEL\"\n  end\n  otherwise\nend\n\nsignal start\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88TL6": {"ttr": 2051, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select SMF88 records                       */\n/* call       : From LSN  selection                        */\n/*---------------------------------------------------------*/\n/*\n    trace ?r\n*/\n\nparse arg kz       ,\n          table    ,\n          lsn      ,\n          ltype\n\nSTART:\n\"ISPEXEC ADDPOP ROW(03) COLUMN(04)\"\n\"ISPEXEC DISPLAY PANEL(smf88tl6)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88tl6 smf88tl6 RC\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN DO\n  \"ISPEXEC REMPOP\"\n  EXIT\nend\n\n\"ISPEXEC REMPOP\"\n\nsel = 'Datum='datum || ' '\n\nselect\n  when zcmd = Y\n  then do\n    call SMF88T05 'ALL'    ,\n                  SMF88T05 ,\n                  'CICS'   ,\n                  'NONE'   ,\n                  'JOURNAL',\n                  'NONE'   ,\n                  'DATUM'  ,\n                  'NONE'   ,\n                  'TIME'   ,\n                  'NONE'   ,\n                  'all reported time intervals'\n  end\n  when zcmd = Y\n  then do\n    call SMF88T04 'ALL'    ,\n                  SMF88T04 ,\n                  'CICS'   ,\n                  'NONE'   ,\n                  'JOURNAL',\n                  'NONE'   ,\n                  'DATUM'  ,\n                  'NONE'   ,\n                  'TIME'   ,\n                  'NONE'   ,\n                  'all analyzed dates'\n  end\n  when zcmd = 1\n  then do\n    sel = ' SMF88 records for LSN = ' lsn\n    call SMF88T03 ALL      ,\n                  SMF88T03 ,\n                  'LSN'    ,\n                  lsn      ,\n                  'JOURNAL',\n                  'NONE'   ,\n                  'DATUM'  ,\n                  'NONE'   ,\n                  'TIME'   ,\n                  'NONE'   ,\n                  sel\n  end\n  when zcmd = 2\n  then do\n    call smf88r03 'HLQ' lsn\n    \"ispexec vget (logrrc, hlq)\"\n    if logrrc > 0 then hlq = '**'\n    zdldsnlv = hlq||\".\"||lsn||'.**'\n    zdlpvl   = ' '\n    \"ispexec vput (zdldsnlv zdlpvl) profile\"\n    \"ispexec control nondispl enter\"\n    \"ISPEXEC SELECT PGM(ISRUDL) PARM(ISRUDLP)\"\n  end\nend\n\nsignal start\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88TR3": {"ttr": 2053, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select entries from sm88t03 tabname        */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg tabname sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nZPF10 =smf88t03\nZPF11 =smf88ts3\n\"ISPEXEC VPUT (ZPF10 ZPF11) PROFILE\"\n\"ISPEXEC VGET ZTDTOP\"\n\"ISPEXEC TBTOP \" tabname\n\"ISPEXEC TBSKIP \" tabname \" NUMBER(\"ztdtop\")\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" tabname \" PANEL(SMF88TR3)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88tr3 smf88tr3 RC\n  EXIT\nend\n\nIF ZCMD = smf88t03\nTHEN DO\n  ZPF11 =smf88tr3\n  \"ISPEXEC VPUT (ZPF11) PROFILE\"\n  ZISPFRC = 0\n  \"ISPEXEC VPUT ZISPFRC\"\n  exit\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = smf88ts3\nTHEN DO\n  call smf88ts3 tabname sel\n  \"ISPEXEC VGET ZTDTOP\"\n  \"ISPEXEC TBTOP \" tabname\n  \"ISPEXEC TBSKIP \" tabname \" NUMBER(\"ztdtop\")\"\n  \"ISPEXEC VGET ZISPFRC\"\n  if zispfrc = 8 then exit\n  signal display\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88TR3 tabname sel\n  signal display\nend\n\nIF ZCMD = SORT\nTHEN DO\n  zcmd = ' '\n  call smf88sr3 tabname\n  signal display\nend\n\nif rc > 0\nthen do\n  ZISPFRC = 8\n  \"ISPEXEC VPUT ZISPFRC\"\n  exit\nend\n\nif rc = 0\nthen do\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88TS3": {"ttr": 2055, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select entries from sm88t03 tabname        */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg tabname sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\nZPF10 = smf88tr3\n\"ISPEXEC VPUT (ZPF10) PROFILE\"\n\"ISPEXEC VGET ZTDTOP\"\n\"ISPEXEC TBTOP \" tabname\n\"ISPEXEC TBSKIP \" tabname \" NUMBER(\"ztdtop\")\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" tabname \" PANEL(SMF88TS3)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88tr3 smf88tr3 RC\n  EXIT\nend\n\nIF ZCMD = smf88tr3\nTHEN DO\n  ZPF10 = smf88t03\n  \"ISPEXEC VPUT (ZPF10) PROFILE\"\n  ZISPFRC = 0\n  \"ISPEXEC VPUT ZISPFRC\"\n  exit\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88TS3 tabname sel\n  signal display\nend\n\nIF ZCMD = SORT\nTHEN DO\n  zcmd = ' '\n  call smf88ss3 tabname\n  signal display\nend\n\nif rc > 0\nthen do\n  ZISPFRC = 8\n  \"ISPEXEC VPUT ZISPFRC\"\n  exit\nend\n\nif rc = 0\nthen do\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88T01": {"ttr": 4613, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nparse arg kz       ,\n          table    ,\n          cics     ,\n          cicsv    ,\n          journal  ,\n          journalv ,\n          datum    ,\n          datumv   ,\n          time     ,\n          timev    ,\n          sel\n\nmsg = sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" table \" PANEL(SMF88T01)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL smf8800 smf88t01 smf88t01 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88T01 SMF88T01 sel\n  signal display\nend\n\nif rc > 4\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  if substr(zcmd,1,1) = 'F' | substr(zcmd,1,1) = 'L'\n  then do\n    fi = length(zcmd)\n    if fi < 3\n    then do\n      \"ispexec setmsg msg(cica001)\"\n      signal display\n    end\n    else do\n      cics = substr(zcmd,3,fi-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(cics) condlist(ge)\"\n      signal display\n    end\n  end\nend\n\ndo while ztdsels > 0\n  if a = 'S'\n  then do\n    if kz = 'ALL'\n    then do\n      msg = sel 'from' cics\n    end\n    if kz = 'DATE' | kz = 'TIME'\n    then do\n      msg = 'DATUM = 'datumv 'CICS-System='cics 'all logstreams'\n      kz  = ALL\n    end\n    if kz = 'ALL'\n    then do\n      call smf88tL1 ,\n           kz       ,\n           SMF88T03 ,\n           'CICS'   ,\n           cics     ,\n           'JOURNAL',\n           journalv ,\n           'DATUM'  ,\n           datumv   ,\n           'TIME'   ,\n           timev    ,\n           msg\n    end\n    else do\n      call smf88t03 ,\n           ALL      ,\n           SMF88T03 ,\n           'CICS'   ,\n           cics     ,\n           'JOURNAL',\n           journalv ,\n           'DATUM'  ,\n           datumv   ,\n           'TIME'   ,\n           timev    ,\n           msg\n    end\n  end\n  signal display\nend\n\nsignal display\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88T02": {"ttr": 2305, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nparse arg kz       ,\n          table    ,\n          cics     ,\n          cicsv    ,\n          journal  ,\n          journalv ,\n          datum    ,\n          datumv   ,\n          time     ,\n          timev    ,\n          sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL SMF88T02 PANEL(SMF88T02)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 SMF88T02 SMF88T02 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88T02 table sel\n  signal display\nend\n\nif rc > 4\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  if substr(zcmd,1,1) = 'F' | substr(zcmd,1,1) = 'L'\n  then do\n    fi = length(zcmd)\n    if fi < 3\n    then do\n      \"ispexec setmsg msg(cica001)\"\n      signal display\n    end\n    else do\n      journal = substr(zcmd,3,fi-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(journal) condlist(ge)\"\n      signal display\n    end\n  end\n  do while ztdsels > 0\n    if a = 'S'\n    then do\n      if kz = 'ALL'\n      then do\n        msg = sel 'from' cics\n      end\n      if kz = 'DATE' | kz = 'TIME'\n      then do\n        msg = field'='fieldv 'CICS-System='cics 'all logstreams'\n        kz  = ALL\n      end\n      if kz = 'ALL'\n      then do\n        call smf88tL2 ,\n             kz       ,\n             SMF88T02 ,\n             'CICS'   ,\n             cicsv    ,\n             'JOURNAL',\n             journal  ,\n             'DATUM'  ,\n             datumv   ,\n             'TIME'   ,\n             timev    ,\n      cut    msg\n      end\n      else do\n        call smf88t03 ,\n             ALL      ,\n             SMF88T03 ,\n             'CICS'   ,\n             cicsv    ,\n             'JOURNAL',\n             journal  ,\n             'DATUM'  ,\n             datumv   ,\n             'TIME'   ,\n             timev    ,\n             msg\n      end\n    end\n    signal display\n  end\n  signal display\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88T03": {"ttr": 2311, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : select entries from sm88t03 table          */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nparse arg kz       ,\n          table    ,\n          fieldc   ,\n          cicsv    ,\n          fieldj   ,\n          journalv ,\n          fieldd   ,\n          datumv   ,\n          fieldt   ,\n          timev    ,\n          sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\ntable = smf88t03\n\ntabname     = 'R'||time('S')\n\n\"ISPEXEC TBVCLEAR \" table\n\nfieldn = \"\"\n\nif cicsv  \u00ac= 'NONE'\nthen do\n  field  = fieldc||',EQ,'\n  fieldn = fieldn||field\n  name   = fieldc\n  call value name,cicsv\nend\n\nif journalv \u00ac= 'NONE'\nthen do\n  field  = fieldj||',EQ'\n  fieldn = fieldn||field\n  name   = fieldj\n  call value name,journalv\nend\n\nif datumv   \u00ac= 'NONE'\nthen do\n  field= ','||fieldd||',EQ'\n  fieldn = fieldn||field\n  name   = fieldd\n  call value name,datumv\nend\n\nif timev    \u00ac= 'NONE'\nthen do\n  field= ','||fieldt||',EQ'\n  fieldn = fieldn||field\n  name   = fieldt\n  call value name,timev\nend\n\n\"ISPEXEC TBQUERY\" table \" KEYS(TKEYS) NAMES(TNAMES)\"\n\"ISPEXEC TBSARG \" table \" NEXT NAMECOND(\"fieldn\")\"\n\n\"ISPEXEC TBERASE \" tabname\n\"ISPEXEC TBCREATE \" TABNAME \" KEYS\"TKEYS \" NOWRITE NAMES\"TNAMES\n\nrc = 0\nrecfound = n\n\ndo while rc = 0\n  \"ISPEXEC TBSCAN \" table\n  if rc > 0 then leave\n  \"ISPEXEC TBADD \" tabname \" MULT(1000)\"\n  recfound = y\nend\n\nIF recfound = n\nTHEN do\n  MESS1 = \"no rows with searchargument found\"\n  MESS2 = \"searchargument \" || field  \" = \" cicsv\n  MESS3 = \"searchargument \" || field2 \" = \" journalv\n  \"ISPEXEC ADDPOP\"\n  \"ISPEXEC DISPLAY PANEL(SMF8800)\"\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBEND\" tabname\n  exit\nend\n\n\"ISPEXEC TBSORT \" tabname\" FIELDS(DATES,C,A,TIME,C,A,CICS,C,A,JOURNAl)\"\n\"ISPEXEC TBTOP \" tabname\n\"ISPEXEC TBTOP \" table\n\nsel  = \"smf88 records \"\n\nif cicsv  \u00ac= 'NONE'\nthen do\n  sel  = sel || fieldc\"=\"cicsv || \" \"\nend\nif journalv \u00ac= 'NONE'\nthen do\n  sel  = sel || fieldj\"=\"journalv\nend\nif datumv  \u00ac= 'NONE'\nthen do\n  sel  = sel fieldd\"=\"datumv\nend\nif timev   \u00ac= 'NONE'\nthen do\n  sel  = sel fieldt\"=\"timev\nend\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\nZPF11 =smf88tr3\n\"ISPEXEC VPUT (ZPF11) PROFILE\"\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL \" tabname \" PANEL(SMF88T03)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88t03 smf88t03 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = SELECT\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call smf88s00 kz ,\n          table    ,\n          fieldc   ,\n          cicsv    ,\n          fieldj   ,\n          journalv ,\n          fieldd   ,\n          datumv   ,\n          fieldt   ,\n          timev    ,\n          sel\n\n  signal display\nend\n\nIF ZCMD = smf88tr3\nTHEN DO\n  call smf88tr3 tabname sel\n  \"ISPEXEC VGET ZTDTOP\"\n  \"ISPEXEC TBTOP \" tabname\n  \"ISPEXEC TBSKIP \" tabname \" NUMBER(\"ztdtop\")\"\n  \"ISPEXEC VGET ZISPFRC\"\n  if zispfrc = 8 then exit\n  signal display\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88T03 tabname sel\n  signal display\nend\n\nIF ZCMD = SORT\nTHEN DO\n  zcmd = ' '\n  call smf88s03 tabname\n  signal display\nend\n\nif rc > 4\nthen do\n  ZPF10 = LEFT\n  ZPF11 = RIGHT\n  \"ISPEXEC VPUT (ZPF10 ZPF11) PROFILE\"\n  \"ISPEXEC TBEND \" tabname\n  exit\nend\n\nif rc < 8\nthen do\n  signal display\nend\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88T04": {"ttr": 2309, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nparse arg kz       ,\n          table    ,\n          cics     ,\n          cicsv    ,\n          journal  ,\n          journalv ,\n          datum    ,\n          datumv   ,\n          time     ,\n          timev    ,\n          sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL SMF88T04 PANEL(SMF88T04)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 SMF88T04 SMF88T04 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88T04 table sel\n  signal display\nend\n\nif rc > 4\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  if substr(zcmd,1,1) = 'F' | substr(zcmd,1,1) = 'L'\n  then do\n    fi = length(zcmd)\n    if fi < 3\n    then do\n      \"ispexec setmsg msg(cica001)\"\n      signal display\n    end\n    else do\n      datum = substr(zcmd,3,fi-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(datum) condlist(ge)\"\n      signal display\n    end\n  end\nend\n\ndo while ztdsels > 0\n  if a = 'S'\n  then do\n    if kz = 'ALL'\n    then do\n      call smf88tL4 ,\n           kz       ,\n           SMF88T03 ,\n           'CICS'   ,\n           cicsv    ,\n           'JOURNAL',\n           journalv ,\n           'DATUM'  ,\n           datum    ,\n           'TIME'   ,\n           timev    ,\n           sel\n    end\n    else do\n      call smf88t03 ,\n           ALL      ,\n           SMF88T03 ,\n           'CICS'   ,\n           cicsv    ,\n           'JOURNAL',\n           journalv ,\n           'DATUM'  ,\n           datum    ,\n           'TIME'   ,\n           timev    ,\n           \"NOSEL\"\n    end\n    signal display\n  end\n  signal display\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88T05": {"ttr": 2313, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nparse arg kz       ,\n          table    ,\n          cics     ,\n          cicsv    ,\n          journal  ,\n          journalv ,\n          datum    ,\n          datumv   ,\n          time     ,\n          timev    ,\n          sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL SMF88T05 PANEL(SMF88T05)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 SMF88T05 SMF88T05 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88T05 table sel\n  signal display\nend\n\nif rc > 4\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  if substr(zcmd,1,1) = 'F' | substr(zcmd,1,1) = 'L'\n  then do\n    fi = length(zcmd)\n    if fi < 3\n    then do\n      \"ispexec setmsg msg(cica001)\"\n      signal display\n    end\n    else do\n      time = substr(zcmd,3,fi-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(time) condlist(ge)\"\n      signal display\n    end\n  end\nend\n\ndo while ztdsels > 0\n  if a = 'S'\n  then do\n    if kz = 'ALL'\n    then do\n      call smf88tL5 ,\n           kz       ,\n           SMF88T03 ,\n           'CICS'   ,\n           cicsv    ,\n           'JOURNAL',\n           journalv ,\n           'DATUM'  ,\n           datumv   ,\n           'TIME'   ,\n           time     ,\n           msg\n    end\n    else do\n      call smf88t03 ,\n           ALL      ,\n           SMF88T03 ,\n           'CICS'   ,\n           cicsv    ,\n           'JOURNAL',\n           journalv ,\n           'DATUM'  ,\n           datumv   ,\n           'TIME'   ,\n           time     ,\n           msg\n    end\n  end\n  signal display\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88T06": {"ttr": 2307, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*--- REXX -------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\nparse arg kz       ,\n          table    ,\n          cics     ,\n          cicsv    ,\n          journal  ,\n          journalv ,\n          datum    ,\n          datumv   ,\n          time     ,\n          timev    ,\n          sel\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n/*------------------------------------------------------------*/\n/*   table information                                        */\n/*------------------------------------------------------------*/\n\ndisplay:\na = ' '\n\"ISPEXEC TBDISPL SMF88T06 PANEL(SMF88T06)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 SMF88T06 SMF88T06 RC\n  EXIT\nend\n\nIF ZCMD = TRACE | CSEL = TR\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  trace ?r\nend\n\nIF ZCMD = PL | CSEL = PL\nTHEN DO\n  zcmd = ' '\n  csel = ' '\n  call cicp000 SMF88T06 table sel\n  signal display\nend\n\nif rc > 4\nthen do\n  exit\nend\n\nif rc = 0\nthen do\n  if substr(zcmd,1,1) = 'F' | substr(zcmd,1,1) = 'L'\n  then do\n    fi = length(zcmd)\n    if fi < 3\n    then do\n      \"ispexec setmsg msg(cica001)\"\n      signal display\n    end\n    else do\n      journal = substr(zcmd,3,fi-2)\n      \"ispexec tbtop \" table\n      \"ispexec tbscan \" table \" arglist(lsn) condlist(ge)\"\n      signal display\n    end\n  end\n  do while ztdsels > 0\n    if a = 'S'\n    then do\n      call smf88tL6 ,\n           kz       ,\n           SMF88T06 ,\n           lsn      ,\n           ltype\n    end\n    signal display\n  end\n  signal display\nend\n\nsignal display\n\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF8800": {"ttr": 4611, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display information for panel error        */\n/*---------------------------------------------------------*/\n/*\n   TRACE ?R\n*/\n\narg procname panel disrc\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\"ISPEXEC CONTROL DISPLAY\"\n\nMESS1 = 'panel display/query error in procedur '\nMESS2 = procname\nMESS3 = 'panel name '\nMESS4 = panel\nMESS5 = 'returncode'\nMESS6 = disrc\n\n\"ISPEXEC ADDPOP\"\n\"ISPEXEC DISPLAY PANEL(SMF8800)\"\n\"ISPEXEC REMPOP\"\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMF88000": {"ttr": 4867, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*-------- REXX -------------------------------------------*/\n/* Function   : display SMF selection menu                 */\n/*---------------------------------------------------------*/\n/*\n    trace ?r\n*/\n\narg smfappl ,               /* applname for smf  application */\n    smfhlq  ,               /* hlq for smf datasets          */\n    llqclib  ,              /* llq for exec und clist        */\n    llqmlib  ,              /* llq for mlib                  */\n    llqplib  ,              /* llq for plib                  */\n    llqslib  ,              /* llq for slib                  */\n    llqtlib  ,              /* llq for tlib                  */\n    llqtabl  ,              /* llq tabl                      */\n    account  ,\n    class    ,\n    msgclass ,\n    ispfhlq  ,\n    llqload\n\n\"ISPEXEC VPUT (SMFAPPL SMFHLQ) PROFILE\"\n\"ISPEXEC VPUT (LLQCLIB LLQMLIB LLQPLIB LLQSLIB LLQTLIB LLQTABL) PROFILE\"\n\"ISPEXEC VPUT (ACCOUNT CLASS MSGCLASS ISPFHLQ LLQLOAD) PROFILE\"\n\n\"ISPEXEC CONTROL ERRORS RETURN\"\n\n\"ISPEXEC TBEND  SMF88T01\"\n\"ISPEXEC TBOPEN SMF88T01 NOWRITE\"\n\nif rc > 0\nthen do\n  mess1 = 'No SMF reporting tables found'\n  mess2 = 'Please build SMF tables'\n  \"ISPEXEC ADDPOP ROW(03) COLUMN(04)\"\n  \"ISPEXEC DISPLAY PANEL(smf8800)\"\n  call    SMF88C00\n  \"ISPEXEC REMPOP\"\n  \"ISPEXEC TBOPEN SMF88T01 NOWRITE\"\n  exit\nend\n\n\"ISPEXEC TBEND  SMF88T02\"\n\"ISPEXEC TBOPEN SMF88T02 NOWRITE\"\n\"ISPEXEC TBEND  SMF88T03\"\n\"ISPEXEC TBOPEN SMF88T03 NOWRITE\"\n\"ISPEXEC TBEND  SMF88T04\"\n\"ISPEXEC TBOPEN SMF88T04 NOWRITE\"\n\"ISPEXEC TBEND  SMF88T05\"\n\"ISPEXEC TBOPEN SMF88T05 NOWRITE\"\n\"ISPEXEC TBEND  SMF88T06\"\n\"ISPEXEC TBOPEN SMF88T06 NOWRITE\"\n\nSTART:\n\"ISPEXEC DISPLAY PANEL(SMF88000)\"\n\nIF RC = 12 | RC = 20\nTHEN do\n  CALL SMF8800 smf88000 smf88000 RC\n  EXIT\nend\n\nIF ZCMD = TRACE\nTHEN DO\n  zcmd = ' '\n  trace ?r\nend\n\nIF RC = 8\nTHEN do\n  \"ISPEXEC TBEND  SMF88T01\"\n  \"ISPEXEC TBEND  SMF88T02\"\n  \"ISPEXEC TBEND  SMF88T03\"\n  \"ISPEXEC TBEND  SMF88T04\"\n  \"ISPEXEC TBEND  SMF88T05\"\n  \"ISPEXEC TBEND  SMF88T06\"\n  EXIT\nend\n\nselect\n  when zcmd = 0\n  then do\n    \"ISPEXEC TBEND  SMF88T01\"\n    \"ISPEXEC TBEND  SMF88T02\"\n    \"ISPEXEC TBEND  SMF88T03\"\n    \"ISPEXEC TBEND  SMF88T04\"\n    \"ISPEXEC TBEND  SMF88T05\"\n    \"ISPEXEC TBEND  SMF88T06\"\n    call SMF88C00\n    \"ISPEXEC TBOPEN SMF88T01 NOWRITE\"\n    \"ISPEXEC TBOPEN SMF88T02 NOWRITE\"\n    \"ISPEXEC TBOPEN SMF88T03 NOWRITE\"\n    \"ISPEXEC TBOPEN SMF88T04 NOWRITE\"\n    \"ISPEXEC TBOPEN SMF88T05 NOWRITE\"\n    \"ISPEXEC TBOPEN SMF88T06 NOWRITE\"\n  end\n  when zcmd = 1\n  then do\n    call SMF88T01 ALL      ,\n                  SMF88T01 ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  \"all CICS Logger systems\"\n  end\n  when zcmd = 2\n  then do\n    call SMF88T02 ALL      ,\n                  SMF88T02 ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  \"all Journal logstreams\"\n  end\n  when zcmd = 3\n  then do\n    call SMF88T04 ALL      ,\n                  SMF88T04 ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  \"SMF88 all analyzed dates\"\n  end\n  when zcmd = 4\n  then do\n    call SMF88T05 ALL      ,\n                  SMF88T05 ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  \"all reported time intervals\"\n  end\n  when zcmd = 5\n  then do\n    call SMF88T06 ALL      ,\n                  SMF88T06 ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  NONE     ,\n                  \"all logstreams\"\n  end\n  when zcmd = 6\n  then do\n    call SMF88R01\n  end\n  when zcmd = 7\n  then do\n    call SMF88R02\n  end\n  otherwise\nend\n\nsignal start\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT330/CBT.V500.FILE330.PDS/CCSDEXEC.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT330/CBT.V500.FILE330.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}