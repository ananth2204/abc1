{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012047000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE450.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE450.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\t'", "DS1TRBAL": "b'\\x80*'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x037\\x00\\x03\\x037\\x00\\x05\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"@FILE450": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x99\\x08?\\x01\\x00\\x18\\x0f\\x102\\x00\\x11\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1999-03-24T00:00:00", "modifydate": "2000-06-28T10:32:00", "lines": 17, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 450 is a \"string finding\" utility written in REXX         *   FILE 450\n//*           from Manish Verma of India.                           *   FILE 450\n//*                                                                 *   FILE 450\n//*           Manish Verma                                          *   FILE 450\n//*           56, New Baridih                                       *   FILE 450\n//*           Jamshedpur, Bihar                                     *   FILE 450\n//*           India                                                 *   FILE 450\n//*           Pin - 831017                                          *   FILE 450\n//*                                                                 *   FILE 450\n//*           My e-mail address is                                  *   FILE 450\n//*           manver@lot.tatasteel.com                              *   FILE 450\n//*                                                                 *   FILE 450\n//*       You can find all occurrences of a character string in     *   FILE 450\n//*       either:   A single VOLUME, or                             *   FILE 450\n//*                 A VOLUME and a Dataset Pattern, or              *   FILE 450\n//*                 A Dataset Pattern only.                         *   FILE 450\n//*                                                                 *   FILE 450\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FINDSTR": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x019\\x00\\x00\\x01\\x00\\x16/\\x01\\x00\\x18\\x1f\\x15\\x08\\x00\\xd2\\x00>\\x00\\x00\\xd4\\xc1\\xd5\\xe5\\xc5\\xd9@@@@'", "ispf": {"version": "01.57", "flags": 0, "createdate": "2000-06-10T00:00:00", "modifydate": "2000-06-29T15:08:00", "lines": 210, "newlines": 62, "modlines": 0, "user": "MANVER"}, "text": "/*REXX*/\nSAY '------------------------------------------------------------'\nSAY 'WHEN U WANT THE STRING TO BE SEARCHED ON ALL DATASETS OF A -'\nSAY ' VOLUME PRMG04 THEN ENTER OPT. 1 AND PRMG04 WHEN PROMPTED   '\nSAY '------------------------------------------------------------'\nSAY 'WHEN U WANT THE STRING TO BE SEARCHED IN DATASETS BEGINNING '\nSAY 'WITH ANYNAME.* ON VOLUME PRMG04 THEN ENTER OPT. 2 AND ENTER '\nSAY 'PRMG04 ANYNAME.* WHEN PROMPTED                              '\nSAY '------------------------------------------------------------'\nSAY 'WHEN U WANT THE STRING TO BE SEARCHED IN DATASETS BEGINNING '\nSAY 'WITH ANYNAME.* THEN ENTER OPT. 3 AND ENTER ANYNAME.*        '\n/*------------------------------------------------------------------*/\n/* THIS JOB IS FOR FINDING A STRING DEPENDING UPON GIVEN VOLUME OR  */\n/* DATASET PATTERN . IT USES ISPF LM UTILITIES AND REXX .           */\n/* LMDLIST IS USED TO FETCH ALL THE DATASET GETTING QUALIFIED FOR   */\n/*         GIVEN INPUT .                                            */\n/* LMMLIST IS USED FOR GETTING ALL THE MEMBERS OF A PARTITIONED     */\n/*   IT TAKES A STRING AND 'PATTERN OF DATASET OR VOLUME' AS        */\n/*   INPUT AND LIST ALL DATASETS MATCHING THE PATTERN OR GIVEN      */\n/*   VOLUME . IF ORGANISATION OF DATASET IS 'PO' IT LIST ALL        */\n/*   THE MEMBERS AND FIND GIVEN STRING IN THEM . IT SEARCHES ALL    */\n/*   SEQUENTIAL AND PARTITIONED DATA SET MATCHING A GIVEN PATTERN OR*/\n/*   VOLUME .                                                       */\n/* DATASET PATTERN CAN BE GIVEN LIKE USERID.*.* OR ANYNAME.P*.Q*    */\n/*------------------------------------------------------------------*/\nSTR = ' '\nSAY '----------------------------------------------------'\nSAY 'PLEASE ENTER STRING AND DATASET WITHOUT QUOTES      '\nSAY '----------------------------------------------------'\nSAY 'ENTER THE STRING TO BE SEARCHED '\nPULL STR\nSAY 'PLEASE ENTER 1 TO FIND STRING ON BASIS OF VOLUME'\nSAY 'PLEASE ENTER 2 TO FIND STRING ON BASIS OF VOL AND PATTERN'\nSAY 'PLEASE ENTER 3 TO FIND STRING ON BASIS OF DS PATTERN ONLY'\nSAY 'PLEASE ENTER 4 TO QUIT'\nPARSE PULL OPTION\n\n  SELECT\n      WHEN OPTION = 1 THEN DO\n        SAY 'PLEASE ENTER THE VOLUME'\n        PARSE PULL VOLNM\n         IF VOLNM = ' ' THEN EXIT\n      END\n\n      WHEN OPTION = 2 THEN DO\n        SAY 'PLEASE ENTER VONUME AND DATASET PATTERN SEPARATED BY BLANK'\n        PARSE PULL TEMP1\n        IF WORDS(TEMP1) /= 2 THEN\n          DO\n           SAY 'PARAMETERS NOT SUPPLIED'\n           EXIT\n          END\n       ELSE\n        PARSE VAR TEMP1 VOLNM DSNM\n      END\n      WHEN OPTION = 3 THEN DO\n        SAY 'PLEASE ENTER DATASET PATTERN'\n        PARSE PULL DSNM\n        IF DSNM = ' ' THEN\n         DO\n          SAY 'DATASET PATTERN OR NAME NOT SUPPLIED'\n          EXIT\n         END\n      END\n\n      WHEN OPTION = 4 THEN DO\n        SAY 'ENDING THE PROGRAM'\n        EXIT\n      END\n\n      OTHERWISE\n        NOP\n  END\n\n  SELECT\n\n    WHEN OPTION = 1 THEN DO         /* GET DATASET ID FOR LMDLIST */\n       ADDRESS ISPEXEC 'LMDINIT LISTID(ID) VOLUME('VOLNM')'\n           IF RC \\= 0 THEN EXIT\n    END\n\n    WHEN OPTION = 2 THEN DO\n      ADDRESS ISPEXEC 'LMDINIT LISTID(ID) VOLUME('VOLNM') LEVEL('DSNM')'\n           IF RC \\= 0 THEN EXIT\n    END\n\n    WHEN OPTION = 3 THEN DO\n      ADDRESS ISPEXEC 'LMDINIT LISTID(ID) LEVEL('DSNM')'\n           IF RC \\= 0 THEN EXIT\n    END\n\n    OTHERWISE\n     NOP\n  END\n\n   DSVAR = ' '\n   RETRC = 0\n\n    DO WHILE RETRC = 0\n\n       CALL GETDATASET\n\n        IF RETRC /= 0 THEN\n           LEAVE\n\n        IF ZDLDSORG = 'PO' THEN  /* THIS DIALOGUE VAR GIVES DS ORG.*/\n            CALL GETPO           /* DATA SET IS PARTITIONED        */\n         ELSE\n           IF ZDLDSORG = 'PS' THEN\n            CALL GETSEQ          /* DATA SET IS SEQUENTIAL         */\n          ELSE\n            NOP\n\n    END\n\n       ADDRESS ISPEXEC 'LMDFREE LISTID('ID')'\n\n\n   GETDATASET : /* SUBROUTINE FOR GETTING QUALIFIED DATASETS\n                              FROM LIST IN VARIABLE 'DSVAR'  */\n\n      ADDRESS ISPEXEC 'LMDLIST LISTID('ID') OPTION(LIST) ,\n                DATASET(DSVAR) STATS(YES)'\n\n      RETRC = RC\n\n      IF RETRC = 4 THEN\n\n       DO\n        SAY 'NO DATA SET FOUND ON BASIS OF VOLUME OR PATTERN'\n        EXIT\n       END\n\n      RETURN\n\n   GETPO :      /* SUBROUTINE FOR GETTING ALL THE MEMBERS OF DATASET */\n\n      RETPO = 0\n      MEM   = ' '\n    ADDRESS ISPEXEC\n      \"LMINIT DATAID(DID) DATASET('\"DSVAR\"')\" /*GET DS ID FOR LMMLIST*/\n      \"LMOPEN DATAID(&DID) OPTION(INPUT)\"    /* OPEN DATASET         */\n\n   DO WHILE RETPO = 0\n      ADDRESS ISPEXEC   /* GET ALL THE MEMBERS OF A DATASET IF 'PO' */\n        \"LMMLIST DATAID(&DID) OPTION(LIST) MEMBER(MEM)\"\n\n      RETPO = RC\n        IF RETPO = 0 THEN\n           CALL GETSTR\n   END\n\n      ADDRESS ISPEXEC \"LMMLIST DATAID(&DID) OPTION(FREE)\"\n      ADDRESS ISPEXEC \"LMCLOSE DATAID(&DID)\"\n\n     RETURN\n\n    GETSTR :\n\n        ADDRESS TSO  /* CONCATENATE THE MEMBER WITH DATASET NAME */\n\n        DDNM = DSVAR||'('||STRIP(MEM)||')'\n\n            \"ALLOC DA('\"DDNM\"') FI(PODATA) SHR REU\"\n            \"EXECIO * DISKR PODATA(FINIS\"\n\n             NUMBER = QUEUED()\n\n           DO SE = 1 TO NUMBER\n\n              PULL PODATA\n\n              IF INDEX(PODATA,STR) /= 0 THEN\n                DO\n                 SAY 'DSNAME : ' DDNM\n                 SAY 'DATA   : ' PODATA\n                 SAY '--------------------------------------------'\n                END\n           END\n            RETURN\n\n  GETSEQ :\n\n        ADDRESS TSO\n            \"ALLOC DA('\"DSVAR\"') FI(SEQDATA) SHR REU\"\n             SEQRC = RC\n             IF SEQRC /= 0 THEN\n              DO\n               SAY 'FILE' DSVAR 'COULD NOT BE ALLOCATED FOR SEARCH'\n               SAY 'RETURN CODE =' SEQRC\n               RETURN\n              END\n\n            \"EXECIO * DISKR SEQDATA(FINIS\"\n\n             SEQNUM = QUEUED()\n\n           DO SE = 1 TO SEQNUM\n\n              PULL SEQDATA\n\n              IF INDEX(SEQDATA,STR) /= 0 THEN\n                DO\n                 SAY 'DSNAME : ' DSVAR\n                 SAY 'DATA   : ' SEQDATA\n                 SAY '--------------------------------------------'\n                END\n           END\n            \"FREE FI(SEQDATA)\"\n            RETURN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT450/FILE450.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT450", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}