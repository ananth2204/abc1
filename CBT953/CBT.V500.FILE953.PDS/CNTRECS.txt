 TITLE 'CNTRECS - count records in all datasets concatenated to SYSIN'
 PRINT GEN
*______________________________________________________________________
*
*  This count all all records in the datasets concatenated to SYSIN
*  and outputs individual dataset counts along with the name.
*
*  This uses the value in the DCB TIOT field to know which dataset
*  the record actually came from.
*______________________________________________________________________
*
CNTRECS  PRGDEF FSEG=MAIN_PART,RMODE=24
*
CONCAT_DETS_A          DS    F         address of concatenated list
CONCAT_DETS_C          DS    F         count of entries
TOTAL_COUNT            DS    F         count of total records
ATIOT                  DS    F         TIOT address
OPEN_TIOT              DS    H         save TIOT offset on open
CHECK_DDNAME           DS    CL8
SYSOUT_REC             DS    CL80
E_O_F                  DS    C
*
THE_VALUE              DS    CL54
                       ORG   THE_VALUE
THE_DSNAME             DS    CL44
OPEN_PARENTHESES       DS    CL1
THE_MEMNAME            DS    CL8
CLOSE_PARENTHESES      DS    CL1
                       ORG
*
WS_GETCNCAT            DSECT
WS_GETCN_NEXT          DS    F         next entry in linked list
WS_GETCN_COUNT         DS    F         count of entries
WS_GETCN_OFFSET        DS    H         offset of this in TIOT
WS_GETCN_DSNAME        DS    CL44      dataset name
WS_GETCN_MEMNAME       DS    CL8       member name
WS_GETCN_FULL          DS    CL54      dataset(member)
WS_GETCN_PATH_LEN      DS    H
WS_GETCN_PATH_TXT      DS    CL255     UNIX pathname
                       DS    0D
WS_GETCN_LEN           EQU   *-WS_GETCNCAT
*
         USING WS_GETCNCAT,R10
         USING IHADCB,SYSIN
         USING ARA,R4
*
         PRGEDEF
*______________________________________________________________________
*
 SEGS MAIN_PART
*
   MVI   SYSOUT_REC,C' '
   MVC   SYSOUT_REC+1(L'SYSOUT_REC-1),SYSOUT_REC
*
   SEGDO GET_TIOT_ADDRESS
*
   MVC   CHECK_DDNAME,=CL8'SYSIN'
   SEGDO CHECK_FOR_DDNAME
*
   MVC   CHECK_DDNAME,=CL8'SYSOUT'
   SEGDO CHECK_FOR_DDNAME
*
   SEGDO OPEN_SYSOUT
*
   XR    R10,R10                       show table does not exist
   SEGDO GET_CONCATENATED_NAMES
*
   SEGDO MATCH_TIOT_WITH_LIST
*
   SEGDO READ_AND_COUNT_SYSIN
*
   SEGDO REPORT_ON_SYSIN_CONTENTS
*
   SEGDO CLOSE_SYSOUT
*
 SEGE MAIN_PART
*______________________________________________________________________
*
 SEGS READ_AND_COUNT_SYSIN
*
   SEGDO OPEN_SYSIN
   DO INF
     SEGDO GET_SYSIN                   rec address into R1
   DOEXIT (CLI,E_O_F,EQ,C'Y')
     L     R10,CONCAT_DETS_A           address of dataset list
     L     R9,CONCAT_DETS_C            count of datasets
     DO FROM=(R9)
     DOEXIT (CLC,DCBTIOT,EQ,WS_GETCN_OFFSET)
       L     R10,WS_GETCN_NEXT         point to next slot
     ENDDO
     IF (LTR,R9,R9,NZ)
       L     R1,WS_GETCN_COUNT         get record count
       LA    R1,1(,R1)
       ST    R1,WS_GETCN_COUNT         save record count
     ENDIF
     L     R1,TOTAL_COUNT
     LA    R1,1(,R1)
     ST    R1,TOTAL_COUNT
   ENDDO
   SEGDO CLOSE_SYSIN
*
 SEGE READ_AND_COUNT_SYSIN
*______________________________________________________________________
*
 SEGS REPORT_ON_SYSIN_CONTENTS
*
   L     R10,CONCAT_DETS_A             address of dataset list
   L     R9,CONCAT_DETS_C              count of datasets
   DO FROM=(R9)
     L     R1,WS_GETCN_COUNT           get record count
     CVD   R1,DOUB_WORD
     MVC   SYSOUT_REC(L'EDPAT),EDPAT
     ED    SYSOUT_REC(L'EDPAT),DOUB_WORD
     IF (CLC,WS_GETCN_PATH_LEN,EQ,=H'0')     not a UNIX path name?
       MVC   SYSOUT_REC+L'EDPAT+2(54),WS_GETCN_FULL  full name
       SEGDO PUT_SYSOUT
     ELSE
       LH    R3,WS_GETCN_PATH_LEN
       LA    R4,WS_GETCN_PATH_TXT
       DO INF
       DOEXIT (LTR,R3,R3,NP)           quit when no more
         IF (CHI,R3,GT,54)
           MVC   SYSOUT_REC+L'EDPAT+2(54),0(R4)
           AHI   R3,-54
           LA    R4,54(,R4)
           SEGDO PUT_SYSOUT
         ELSE
           BCTR  R3,0
           EX    R3,COPY_OUT
           LA    R3,0
         ENDIF
         SEGDO PUT_SYSOUT
       ENDDO
     ENDIF
     LA    R2,WS_GETCN_LEN             length of storage
     LR    R1,R10                      copy address
     L     R10,WS_GETCN_NEXT           point to next slot
     STORAGE RELEASE,LENGTH=(R2),ADDR=(R1)
   ENDDO
   SEGDO PUT_SYSOUT                    output blank line
   L     R1,TOTAL_COUNT                get total record count
   CVD   R1,DOUB_WORD
   MVC   SYSOUT_REC(L'EDPAT),EDPAT
   ED    SYSOUT_REC(L'EDPAT),DOUB_WORD
   SEGDO PUT_SYSOUT
*
 SEGE REPORT_ON_SYSIN_CONTENTS
*______________________________________________________________________
*
 SEGS CHECK_FOR_DDNAME
*
   L     R2,ATIOT
   USING TIOT1,R2
*
   LA    R14,TIOENTRY
   DROP  R2
   USING TIOENTRYD,R14
   XR    R2,R2                         length register
   DO INF
     ICM   R2,1,TIOELNGH               get entry length
   DOEXIT (LTR,R2,R2,Z)                zero length, DDNAME not found
   DOEXIT (CLC,TIOEDDNM,EQ,CHECK_DDNAME)
     AR   R14,R2                       next entry
   ENDDO
*
   IF (LTR,R2,R2,Z)                    could not find DDNAME
     MVC   MESS_TXT(8),CHECK_DDNAME
     MVC   MESS_TXT+10(L'MISSING_DD),MISSING_DD
     SEGDO WRITE_LOG
     PRGQUIT RC=8
   ENDIF
*
 SEGE CHECK_FOR_DDNAME
*______________________________________________________________________
*
 SEGS MATCH_TIOT_WITH_LIST
*
   L     R2,ATIOT
   USING TIOT1,R2
*
   LA    R14,TIOENTRY
   DROP  R2
   USING TIOENTRYD,R14
   XR    R2,R2                         length register
   DO INF
     ICM   R2,1,TIOELNGH               get entry length
   DOEXIT (LTR,R2,R2,Z)                zero length, DDNAME not found
   DOEXIT (CLC,TIOEDDNM,EQ,=CL8'SYSIN')
     AR   R14,R2                       next entry
   ENDDO
*
   IF (LTR,R2,R2,Z)                    could not find DDNAME
     MVC   SYSOUT_REC(8),=CL8'SYSIN'
     MVC   SYSOUT_REC+10(L'MISSING_DD),MISSING_DD
     SEGDO PUT_SYSOUT
     PRGQUIT RC=8
   ENDIF
   L     R10,CONCAT_DETS_A             address of dataset list
   LR    R15,R14                       copy address
   S     R15,ATIOT                     calculate offset in TIOT
   STH   R15,WS_GETCN_OFFSET           save offset of this entry
   AR    R14,R2                        next entry
   DO INF
     ICM   R2,1,TIOELNGH               get entry length
   DOEXIT (LTR,R2,R2,Z)                zero length, DDNAME not found
   DOEXIT (CLC,TIOEDDNM,NE,=CL8' ')    quit when DDNAME not blank
     L     R10,WS_GETCN_NEXT           next entry
     LR    R15,R14                     copy address
     S     R15,ATIOT                   calculate offset in TIOT
     STH   R15,WS_GETCN_OFFSET         save offset of this entry
     AR    R14,R2                      next entry
   ENDDO
*
 SEGE MATCH_TIOT_WITH_LIST
*______________________________________________________________________
*
 SEGS GET_CONCATENATED_NAMES
*
   OI    ARLOPT1,ARLUSS                get USS path name
   RDJFCB  (SYSIN)                     get list of allocated files
   IF (LTR,R15,R15,NZ)
     MVC   SYSOUT_REC(8),=CL8'SYSIN'
     MVC   SYSOUT_REC+10(L'FAIL_RDJFCB),FAIL_RDJFCB
     SEGDO PUT_SYSOUT
     PRGQUIT RC=8
   ENDIF
*  if there is only 1 dataset allocated then the details are in
*  INFMJFCB otherwise all the details are placed in a getmained
*  area of storage and the code needs to look at them in turn
   L     R4,ARLAREA
   USING ARA,R4
   LH    R5,ARLRTRVD
   IF (LTR,R5,R5,NZ)                     anything here
     DO FROM=(R5)
       MVC   INFMJFCB(JFCBLGTH),ARAJFCB  copy next dataset details
       SEGDO PROC_DATASET_DETS           process this one
       AH    R4,ARALEN                   point to next
     ENDDO
*    having processed all the datasets free the storage
     L     R2,ARLAREA
     XR    R5,R5
     ICM   R5,B'0111',ARLRLEN
     XR    R15,R15
     IC    R15,ARLPOOL
     FREEMAIN RU,LV=(R5),A=(R2),SP=(R15)
     SEGDO PUT_SYSOUT
   ELSE
     SEGDO PROC_DATASET_DETS
   ENDIF
*
 SEGE GET_CONCATENATED_NAMES
*______________________________________________________________________
*
 SEGS PROC_DATASET_DETS
*
   LA    R2,WS_GETCN_LEN
   STORAGE OBTAIN,LENGTH=(R2),LOC=31
   XC    0(256,R1),0(R1)               wipe to low values
   XC    0(WS_GETCN_LEN-256,R1),0(R1)  wipe to low values
*
   IF (LTR,R10,R10,Z)                  first dataset?
     ST    R1,CONCAT_DETS_A            store in anchor
   ELSE
     ST    R1,WS_GETCN_NEXT            store in previous entry
   ENDIF
   LR    R10,R1                        point to new entry
   L     R1,CONCAT_DETS_C              increment count of entries
   LA    R1,1(,R1)
   ST    R1,CONCAT_DETS_C
*
*  now copy name or path
*
   XC    WS_GETCN_PATH_LEN,WS_GETCN_PATH_LEN
   XC    WS_GETCN_PATH_TXT,WS_GETCN_PATH_TXT
   IF (CLC,=C'...PATH=.SPECIFIED...',EQ,JFCBDSNM)
     MVI   WS_GETCN_FULL,C' '          wipe to spaces
     MVC   WS_GETCN_FULL+1(L'WS_GETCN_FULL-1),WS_GETCN_FULL
     MVC   WS_GETCN_DSNAME,WS_GETCN_FULL
     MVC   WS_GETCN_MEMNAME,WS_GETCN_FULL
     IF (TM,ARAFLG,ARAXINF,NZ)         is the extended info there ?
       XR    R3,R3
       IC    R3,ARAXINOF               get length in double words
       SLL   R3,3                      multiply by 8
       AR    R3,R4                     point to extended info
       IF (CLC,2(2,R3),NE,=H'0')       is pathname there
         AH    R3,2(,R3)               offset to pathname
         MVC   WS_GETCN_PATH_LEN,0(R3)
         MVC   WS_GETCN_PATH_TXT,2(R3)
       ENDIF
     ENDIF
   ELSE
     MVC   THE_DSNAME,JFCBDSNM         copy dataset name
     MVC   THE_MEMNAME,JFCBELNM        and member name (if there)
     MVC   WS_GETCN_DSNAME,JFCBDSNM    copy dataset name
     MVC   WS_GETCN_MEMNAME,JFCBELNM   and member name (if there)
     IF (CLC,THE_MEMNAME,GT,=CL8' ')   is member name present ?
       MVI   OPEN_PARENTHESES,C'('     put in the brackets
       MVI   CLOSE_PARENTHESES,C')'
     ELSE
       MVI   OPEN_PARENTHESES,C' '     remove the brackets
       MVI   CLOSE_PARENTHESES,C' '
     ENDIF
     TRIM  THE_VALUE,ALL=Y
     MVC   WS_GETCN_FULL,THE_VALUE
   ENDIF
*
 SEGE PROC_DATASET_DETS
*______________________________________________________________________
*
 SEGS GET_TIOT_ADDRESS
*
   L     R1,CVTPTR                     get CVT address
   L     R1,CVTASVT-CVT(R1)            get ASVT table @
   LA    R1,ASVTENTY-ASVT(R1)          get @ of ASCB entry table
*
   XR    R2,R2                         clear R2 prior to access
   EPAR  R2                            go get ASID
   BCTR  R2,0                          subtract  1
   MH    R2,=H'4'                      multiply by  4
   L     R1,0(R2,R1)                   get @ from offset in table
   L     R1,ASCBASXB-ASCB(R1)          get address space extension
   TM    ASCBCS1-ASCB(R1),ASCBXMPA
   L     R1,ASXBITCB-ASXB(R1)          get TCB
   L     R1,TCBTIO-TCB(R1)             get TIOT
   ST    R1,ATIOT                      save address
*
 SEGE GET_TIOT_ADDRESS
*______________________________________________________________________
*
 PRGDCBI DCB=SYSIN,EOF=E_O_F                 generate code for SYSIN
*
 PRGDCBO DCB=SYSOUT,REC=SYSOUT_REC           generate code for SYSOUT
*______________________________________________________________________
*
         PRGSTAT
*
MISSING_DD     DC    C'missing from JCL'
FAIL_RDJFCB    DC    C'RDJFCB failed'
*
EDPAT    DC    X'40202020202020202020202020202120'
COPY_OUT MVC   SYSOUT_REC+L'EDPAT+2(0),0(R4)
*
SYSIN    DCB   DSORG=PS,DDNAME=SYSIN,MACRF=(GL),EODAD=END_SYSIN,       /
               EXLST=LIST1
*
SYSOUT   DCB   DSORG=PS,DDNAME=SYSOUT,MACRF=(PM),RECFM=FB,LRECL=80
LIST1    DS    0F
         DC    X'13',AL3(MY_JFCB_13)   list 13
         DC    X'87',AL3(MY_JFCB_07)   list 07 (8 means last one)
*
MY_JFCB_07     DS    0F
               PUSH  PRINT,NOPRINT
               PRINT GEN
               IEFJFCBN
               POP   PRINT,NOPRINT
LEN_MY_JFCB_07 EQU   *-MY_JFCB_07
*
               PUSH  PRINT,NOPRINT
               PRINT GEN
               DCBD  DSORG=QS,DEVD=DA
               POP   PRINT,NOPRINT
               JRGTIOT
*
CNTRECS        CSECT
*
               PUSH  PRINT,NOPRINT
               PRINT GEN
MY_JFCB_13     IHAARL DSECT=NO
               IHAARA
               POP   PRINT,NOPRINT
*
CNTRECS        CSECT
*
         CVT   DSECT=YES,LIST=NO
         IHAASCB LIST=NO
         IHAASXB LIST=NO
         IHAASVT LIST=NO
         IKJTCB  LIST=NO
*
CNTRECS  CSECT
*
         LTORG
*
         PRGESTAT
         PRGEND
         END
