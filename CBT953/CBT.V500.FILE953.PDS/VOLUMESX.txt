 TITLE 'VOLUMESX - OBTAIN VTOC DETAILS OF VOLUMES MATCHING PATTERN'
*______________________________________________________________________
*
VOLUMESX START 0
VOLUMESX AMODE 31
VOLUMESX RMODE 24
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING VOLUMESX,R12
         LA    R2,SAVE_AREA
         ST    R13,4(R2)
         ST    R2,8(R13)
         LR    R13,R2
         XC    RETURN_CODE,RETURN_CODE
*
         B     MAIN_PART
*
DOUB_WORD      DS    D
RETURN_CODE    DS    F
SAVE_AREA      DS    18F
*
GET_OUT  L     R2,RETURN_CODE
         L     R13,4(R13)
         ST    R2,16(R13)
         LM    R14,R12,12(R13)
         BSM   0,R14                   return to caller
*
         USING VOL_DETS,U#F4DSCB
         USING UCB_DETS,U#COPY
*______________________________________________________________________
*
MAIN_PART  DS    0F
*
   MVC   VOL_PATTERN,=C'******'        default volume pattern
   L     R1,0(R1)
   CLC   0(2,R1),=H'0'                 no parm - OK
   BE    OK_PARM
   CLC   0(2,R1),=H'6'                 6 bytes of parn - OK
   BE    SET_PAT
   WTO   'INVALID PARM',ROUTCDE=11,MCSFLAG=HRDCPY
   MVC   RETURN_CODE,=F'16'            no good so set RC
   B     GET_OUT                       and leave
*
*
SET_PAT  DS    0H
   MVC   VOL_PATTERN(6),2(R1)          copy parm value
*
OK_PARM  DS    0H
*
   OPEN  (SYSOUT,OUTPUT),MODE=31
   LTR   R15,R15
   BZ    OK_OPEN
   WTO   'SYSIN OPEN FAILED',ROUTCDE=11,MCSFLAG=HRDCPY
   MVC   RETURN_CODE,=F'16'
   B     GET_OUT
*
OK_OPEN  DS    0H
*
*        write report headers
   MVC   SYSOUT_REC(L'HEAD_L_1),HEAD_L_1
   MVC   SYSOUT_REC+L'HEAD_L_1-6(6),VOL_PATTERN
   BAS   R4,WRITE_SYSOUT
   MVC   SYSOUT_REC(L'HEAD_L_2),HEAD_L_2
   BAS   R4,WRITE_SYSOUT
   MVC   SYSOUT_REC(L'HEAD_L_3),HEAD_L_3
   BAS   R4,WRITE_SYSOUT
   BAS   R4,WRITE_SYSOUT
*
   XC    U#WORK,U#WORK
*
LOOP_1   DS    0H
     UCBSCAN COPY,WORKAREA=U#WORK,UCBAREA=U#COPY,DEVCLASS=DASD,        /
               DYNAMIC=YES,DEVNCHAR=DEVNCHAR,RANGE=ALL
     LTR   R15,R15                    did it work
     BNZ   END_LOOP_1                 no so must be end
     TM    UCBSTAT,UCBONLI            is it online
     BZ    LOOP_1                     no so try next
*
     CLC   UCBVOLI(1),VOL_PATTERN
     BE    OK_1
     CLI   VOL_PATTERN,C'*'
     BE    OK_1
     B     LOOP_1
*
OK_1 DS    0H
     CLC   UCBVOLI+1(1),VOL_PATTERN+1
     BE    OK_2
     CLI   VOL_PATTERN+1,C'*'
     BE    OK_2
     B     LOOP_1
*
OK_2 DS    0H
     CLC   UCBVOLI+2(1),VOL_PATTERN+2
     BE    OK_3
     CLI   VOL_PATTERN+2,C'*'
     BE    OK_3
     B     LOOP_1
*
OK_3 DS    0H
     CLC   UCBVOLI+3(1),VOL_PATTERN+3
     BE    OK_4
     CLI   VOL_PATTERN+3,C'*'
     BE    OK_4
     B     LOOP_1
*
OK_4 DS    0H
     CLC   UCBVOLI+4(1),VOL_PATTERN+4
     BE    OK_5
     CLI   VOL_PATTERN+4,C'*'
     BE    OK_5
     B     LOOP_1
*
OK_5 DS    0H
     CLC   UCBVOLI+5(1),VOL_PATTERN+5
     BE    OK_6
     CLI   VOL_PATTERN+5,C'*'
     BE    OK_6
     B     LOOP_1
*
OK_6 DS    0H
*
     BAS   R6,PROCESS_UCB
     AP    NUM_VOLS,=P'1'
     AP    TOTAL_FREE,VOLUME_FREE
     AP    TOTAL_TRACKS,VOLUME_TRACKS
     B     LOOP_1
*
END_LOOP_1 DS    0H
*
   BAS   R4,WRITE_SYSOUT
*
   MVC   SYSOUT_REC(L'ED_PL4),ED_PL4
   ED    SYSOUT_REC(L'ED_PL4),NUM_VOLS
   CP    NUM_VOLS,=P'0'
   BNH   NO_VOLS
   MVC   SYSOUT_REC+10(L'ED_PL6),ED_PL6
   ED    SYSOUT_REC+10(L'ED_PL6),TOTAL_TRACKS+2    total tracks
   ZAP   DOUB_WORD,TOTAL_TRACKS
   SP    DOUB_WORD,TOTAL_FREE
   MVC   SYSOUT_REC+25(L'ED_PL6),ED_PL6
   ED    SYSOUT_REC+25(L'ED_PL6),DOUB_WORD+2       total used
   MVC   SYSOUT_REC+40(L'ED_PL6),ED_PL6
   ED    SYSOUT_REC+40(L'ED_PL6),TOTAL_FREE+2      total free tracks
*
   CP    TOTAL_TRACKS,=P'0'
   BNH   NO_VOLS
   ZAP   PL_16,TOTAL_FREE          total number of free tracks
   MP    PL_16,=P'100000'
   DP    PL_16,TOTAL_TRACKS        total number of available tra
   SRP   PL_16(8),64-1,5           shift right, normal rounding
   MVC   SYSOUT_REC+55(L'ED_PL6D2),ED_PL6D2
   ED    SYSOUT_REC+55(L'ED_PL6D2),PL_16+2       % free space
*
NO_VOLS  DS    0H
   BAS   R4,WRITE_SYSOUT
*
   CLOSE (SYSOUT),MODE=31
*
   B     GET_OUT
*______________________________________________________________________
*
PROCESS_UCB    DS    0H
*
   MVC   SYSOUT_REC+4(6),UCBVOLI
*
   LA    R3,U#COPY
   LSPACE UCB=(R3),EXPMSG=U#EXPMSG,F4DSCB=U#F4DSCB
*
   PACK  DOUB_WORD,U#EXPMSG+6(6)       number of free cylinders
   CVB   R1,DOUB_WORD                  convert to binary
   MH    R1,DS4DSTRK                   number of tracks per cyl
   CVD   R1,DOUB_WORD                  convert to decimal
   PACK  FREE_TRKS,U#EXPMSG+13(6)      number of extra tracks
   AP    DOUB_WORD,FREE_TRKS           total free
   ZAP   VOLUME_FREE,DOUB_WORD
*
*
   LH    R1,DS4DSCYL                   total number of cylinders
   MH    R1,DS4DSTRK                   number of tracks per cyl
   CVD   R1,VOLUME_TRACKS              give available tracks
   MVC   SYSOUT_REC+10(L'ED_PL6),ED_PL6
   ED    SYSOUT_REC+10(L'ED_PL6),VOLUME_TRACKS+2     total tracks
*
   ZAP   DOUB_WORD,VOLUME_TRACKS
   SP    DOUB_WORD,VOLUME_FREE
   MVC   SYSOUT_REC+25(L'ED_PL6),ED_PL6
   ED    SYSOUT_REC+25(L'ED_PL6),DOUB_WORD+2         used tracks
   MVC   SYSOUT_REC+40(L'ED_PL6),ED_PL6
   ED    SYSOUT_REC+40(L'ED_PL6),VOLUME_FREE+2       free tracks
*
   CP    VOLUME_TRACKS,=P'0'
   BNH   NO_TRACKS
*
   ZAP   PL_16,VOLUME_FREE
   MP    PL_16,=P'100000'
   DP    PL_16,VOLUME_TRACKS
   SRP   PL_16(8),64-1,5
   MVC   SYSOUT_REC+55(L'ED_PL6D2),ED_PL6D2
   ED    SYSOUT_REC+55(L'ED_PL6D2),PL_16+2         % free space
*
NO_TRACKS  DS    0H
   BAS   R4,WRITE_SYSOUT
*
   BR    R6
*______________________________________________________________________
*
WRITE_SYSOUT   DS    0H
*
   SAM24
   PUT   SYSOUT,SYSOUT_REC
   SAM31
*
   MVI   SYSOUT_REC,C' '
   MVC   SYSOUT_REC+1(L'SYSOUT_REC-1),SYSOUT_REC
*
   BR    R4
*______________________________________________________________________
*
PL_16          DS    PL16
VOL_PATTERN    DS    CL6
*
SYSOUT_REC     DC    CL80' '
*
*
SYSOUT   DCB   DDNAME=SYSOUT,MACRF=(PM),DSORG=PS,RECFM=FB,LRECL=80
*
DEVNCHAR       DC    CL4' '
*
L#VOL          DS    CL6
U#COPY         DS    XL48
U#WORK         DS    XL100
U#EXPMSG       DS    XL40
U#F4DSCB       DS    XL96
*
TOT_TRACKS     DC    PL4'50055'
*
FREE_TRKS      DC    PL3'0'
VOLUME_FREE    DC    PL8'0'
VOLUME_TRACKS  DC    PL8'0'
TOTAL_FREE     DC    PL8'0'
TOTAL_TRACKS   DC    PL8'0'
NUM_VOLS       DC    PL4'0'
*
HEAD_L_1 DC  C'Show online DASD volumes matching pattern=XXXXXX'
HEAD_L_2 DC  C'    volume          total           used           free /
                        %free'
HEAD_L_3 DC  C'    ------          -----           ----           ---- /
                        -----'
ED_PL4         DC    X'40206B2020206B20212060'
ED_PL6         DC    X'4020206B2020206B2020206B20212060'
ED_PL6D2       DC    X'402020206B2020206B2021204B202060'
*______________________________________________________________________
*
SSOB_PTR DS    A(SSOB+X'80000000')
SSOB_WRK DS    XL(SSOBHSIZ)            SSOB
SSSA_WRK DS    XL(SSSALN+SSSA1LN+L'SSSA1NMS)
*______________________________________________________________________
*
         LTORG
*______________________________________________________________________
*
VOL_DETS DSECT
         IECSDSL1 (4)                  GEN FMT 4 DSCB LABELS
UCB_DETS DSECT
         IEFUCBOB
VOLUMESX CSECT
         CVT   DSECT=YES               CVT
         IEFJESCT                      JES CVT
         IEFJSSOB ,                    SSOB HEADER DSECT
         IEFSSSA                       SSOB EXTENSION FOR SMS
*        IGDVLD                        VOLUME DEFINITION
         IGDSGD                        STORAGE GROUP DEFINITION
*______________________________________________________________________
*
VOLUMESX CSECT
         END
