 TITLE 'GETCNCAT - Program to get DSNAME(S) for DDNAME'
 PRINT GEN
*
GETCNCAT PRGDEF FSEG=MAIN_BIT,RMODE=24
*______________________________________________________________________
*
* This program acts as a sub-routine to get a list of all
* datasets concatanated to a DD name.
*
*    example call from COBOL
*
*         CALL GETCNCAT USING WS-GETCNCAT
*
*         set WS-GETCN-DDNAME to the required DDNAME
*         and WS-GETCN-COUNT-AVAIL to the space in the array
*             in this case 40.
*         on return WS-GETCN-DSNAMES will be populated with
*         the concatanated dataset names, if there is insufficient
*         space in the array then WS-GETCN-MORE will contain 'Y'
*
*         01  WS-GETCNCAT.
*           03  WS-GETCN-DDNAME        PIC X(8).
*           03  WS-GETCN-COUNT-AVAIL   PIC S9(4) COMP VALUE 40.
*           03  WS-GETCN-COUNT-ACTUAL  PIC S9(4) COMP.
*           03  WS-GETCN-MESSAGE       PIC X(47).
*           03  WS-GETCN-MORE          PIC X.
*           03  WS-GETCN-DSNAMES       OCCURS 40.
*             05  WS-GETCN-DSNAME      PIC X(44).
*             05  WS-GETCN-MEMNAME     PIC X(8).
*             05  WS-GETCN-FULL        PIC X(54).
*             05  WS-GETCN-PATH-LEN    PIC S9(4) COMP.
*             05  WS-GETCN-PATH-TXT    PIC X(255).
*______________________________________________________________________
*
ATIOT                  DS    F
THE_VALUE              DS    CL54
                       ORG   THE_VALUE
THE_DSNAME             DS    CL44
OPEN_PARENTHESES       DS    CL1
THE_MEMNAME            DS    CL8
CLOSE_PARENTHESES      DS    CL1
                       ORG
*
ERR_NO                 DS    CL1
*
        PRGEDEF
*______________________________________________________________________
*
 SEGS MAIN_BIT
*
   USING WS_GETCNCAT,R10
   USING WS_LIST,R9
   USING ARA,R4
   USING IHADCB,TESTDCB
*
   L     R10,0(,R1)                    get parameter address
   LA    R9,WS_GETCN_DSNAMES           point to list in parameter
*
   MVI   THE_VALUE,C' '
   MVC   THE_VALUE+1(L'THE_VALUE-1),THE_VALUE
   MVI   WS_GETCN_MESSAGE,C' '
   MVC   WS_GETCN_MESSAGE+1(L'WS_GETCN_MESSAGE-1),WS_GETCN_MESSAGE
   XC    WS_GETCN_COUNT_ACTUAL,WS_GETCN_COUNT_ACTUAL
   MVI   WS_GETCN_MORE,C'N'
*
   SEGDO CHECK_FOR_DDNAME
*
   SEGDO GET_DSNAME
*
 SEGE MAIN_BIT
*______________________________________________________________________
*
 SEGS CHECK_FOR_DDNAME
*
   SEGDO GET_TIOT_ADDRESS
*
   L     R2,ATIOT
   USING TIOT1,R2
*
   LA    R14,TIOENTRY
   DROP  R2
   USING TIOENTRYD,R14
   XR    R2,R2                         length register
   DO INF
     ICM   R2,1,TIOELNGH               get entry length
   DOEXIT (LTR,R2,R2,Z)                zero length, DDNAME not found
   DOEXIT (CLC,TIOEDDNM,EQ,WS_GETCN_DDNAME)
     AR   R14,R2                       next entry
   ENDDO
*
   IF (LTR,R2,R2,Z)                    could not find DDNAME
     MVI   ERR_NO,1
     SEGDO NOT_VALID
   ENDIF
*
 SEGE CHECK_FOR_DDNAME
*______________________________________________________________________
*
 SEGS GET_DSNAME
*
   LA    R8,TESTDCB                    point to test DCB
   MVC   DCBDDNAM,WS_GETCN_DDNAME      copy DDNAME
   OI    ARLOPT1,ARLUSS                get USS path name
   RDJFCB  ((R8))                      get list of allocated files
   IF (LTR,R15,R15,NZ)
     MVI   ERR_NO,2
     SEGDO NOT_VALID
   ENDIF
*  if there is only 1 dataset allocated then the details are in
*  INFMJFCB otherwise all the details are placed in a getmained
*  area of storage and the code needs to look at them in turn
   L     R4,ARLAREA
   USING ARA,R4
   LH    R5,ARLRTRVD
   IF (LTR,R5,R5,NZ)                     anything here
     DO FROM=(R5)
       MVC   INFMJFCB(JFCBLGTH),ARAJFCB  copy next dataset details
       SEGDO PROC_DATASET_DETS           process this one
       AH    R4,ARALEN                   point to next
     DOEXIT (CLI,WS_GETCN_MORE,EQ,C'Y')  no more space in caller
     ENDDO
*    having processed all the datasets free the storage
     L     R2,ARLAREA
     XR    R5,R5
     ICM   R5,B'0111',ARLRLEN
     XR    R15,R15
     IC    R15,ARLPOOL
     FREEMAIN RU,LV=(R5),A=(R2),SP=(R15)
   ELSE
     SEGDO PROC_DATASET_DETS
   ENDIF
*
 SEGE GET_DSNAME
*______________________________________________________________________
*
 SEGS PROC_DATASET_DETS
*
   LH    R1,WS_GETCN_COUNT_ACTUAL
   LA    R1,1(,R1)
   IF (CH,R1,GT,WS_GETCN_COUNT_AVAIL)  are the slots full ?
     MVI   WS_GETCN_MORE,C'Y'          yes
     SEGQUIT                           quit segment
   ENDIF
   STH   R1,WS_GETCN_COUNT_ACTUAL
   XC    WS_GETCN_PATH_LEN,WS_GETCN_PATH_LEN
   XC    WS_GETCN_PATH_TXT,WS_GETCN_PATH_TXT
   IF (CLC,=C'...PATH=.SPECIFIED...',EQ,JFCBDSNM)
     MVI   WS_GETCN_FULL,C' '          wipe to spaces
     MVC   WS_GETCN_FULL+1(L'WS_GETCN_FULL-1),WS_GETCN_FULL
     MVC   WS_GETCN_DSNAME,WS_GETCN_FULL
     MVC   WS_GETCN_MEMNAME,WS_GETCN_FULL
     IF (TM,ARAFLG,ARAXINF,NZ)         is the extended info there ?
       XR    R3,R3
       IC    R3,ARAXINOF               get length in double words
       SLL   R3,3                      multiply by 8
       AR    R3,R4                     point to extended info
       IF (CLC,2(2,R3),NE,=H'0')       is pathname there
         AH    R3,2(,R3)               offset to pathname
         MVC   WS_GETCN_PATH_LEN,0(R3)
         MVC   WS_GETCN_PATH_TXT,2(R3)
       ENDIF
     ENDIF
   ELSE
     MVC   THE_DSNAME,JFCBDSNM         copy dataset name
     MVC   THE_MEMNAME,JFCBELNM        and member name (if there)
     MVC   WS_GETCN_DSNAME,JFCBDSNM    copy dataset name
     MVC   WS_GETCN_MEMNAME,JFCBELNM   and member name (if there)
     IF (CLC,THE_MEMNAME,GT,SPACES)    is member name present ?
       MVI   OPEN_PARENTHESES,C'('     put in the brackets
       MVI   CLOSE_PARENTHESES,C')'
     ELSE
       MVI   OPEN_PARENTHESES,C' '     remove the brackets
       MVI   CLOSE_PARENTHESES,C' '
     ENDIF
     TRIM  THE_VALUE,L'THE_VALUE,ALL=Y
     MVC   WS_GETCN_FULL,THE_VALUE
   ENDIF
*
   LA    R9,WS_LIST_NEXT               point to next slot
*
 SEGE PROC_DATASET_DETS
*______________________________________________________________________
*
 SEGS NOT_VALID
*
   IF (CLI,ERR_NO,EQ,1)
     MVC   WS_GETCN_MESSAGE(21),=C'Could not find DDNAME'
   ELSEIF (CLI,ERR_NO,EQ,2)
     MVC   WS_GETCN_MESSAGE(15),=C'Error in RDJFCB'
   ENDIF
*
   PRGQUIT RC=4
*
 SEGE NOT_VALID
*______________________________________________________________________
*
 SEGS GET_TIOT_ADDRESS
*
   L     R1,CVTPTR                     get CVT address
   L     R1,CVTASVT-CVT(R1)            get ASVT table @
   LA    R1,ASVTENTY-ASVT(R1)          get @ of ASCB entry table
*
   XR    R2,R2                         clear R2 prior to access
   EPAR  R2                            go get ASID
   BCTR  R2,0                          subtract  1
   MH    R2,=H'4'                      multiply by  4
   L     R1,0(R2,R1)                   get @ from offset in table
   L     R1,ASCBASXB-ASCB(R1)          get address space extension
   TM    ASCBCS1-ASCB(R1),ASCBXMPA
   L     R1,ASXBITCB-ASXB(R1)          get TCB
   L     R1,TCBTIO-TCB(R1)             get TIOT
   ST    R1,ATIOT                      save address
*
 SEGE GET_TIOT_ADDRESS
*______________________________________________________________________
*
 SEGS WRITE_LOG
*
   WTOX
*
 SEGE WRITE_LOG
*______________________________________________________________________
*
           PRGSTAT
*
SPACES     DC    80CL1' '
*
           LTORG
*______________________________________________________________________
*
TESTDCB    DCB   DDNAME=XXXXXXXX,MACRF=(GL),DSORG=PS,EXLST=LIST1
LIST1      DS    0F
           DC    X'13',AL3(MY_JFCB_13)   list 13
           DC    X'87',AL3(MY_JFCB_07)   list 07 (8 means last one)
*______________________________________________________________________
*
MY_JFCB_07     DS    0F
               PUSH  PRINT,NOPRINT
               PRINT GEN
               IEFJFCBN
               POP   PRINT,NOPRINT
LEN_MY_JFCB_07 EQU   *-MY_JFCB_07
*______________________________________________________________________
*
               PUSH  PRINT,NOPRINT
               PRINT GEN
               DCBD  DSORG=QS,DEVD=DA
               POP   PRINT,NOPRINT
               JRGTIOT
*
GETCNCAT       CSECT
*
               PUSH  PRINT,NOPRINT
               PRINT GEN
MY_JFCB_13     IHAARL DSECT=NO
               IHAARA
               POP   PRINT,NOPRINT
*
GETCNCAT       CSECT
*______________________________________________________________________
*
         CVT   DSECT=YES,LIST=NO
         IHAASCB LIST=NO
         IHAASXB LIST=NO
         IHAASVT LIST=NO
         IKJTCB  LIST=NO
*
WS_GETCNCAT            DSECT
WS_GETCN_DDNAME        DS    CL8
WS_GETCN_COUNT_AVAIL   DS    H
WS_GETCN_COUNT_ACTUAL  DS    H
WS_GETCN_MESSAGE       DS    CL47
WS_GETCN_MORE          DS    C
WS_GETCN_DSNAMES       EQU   *
WS_LIST                DSECT
WS_GETCN_DSNAME        DS    CL44
WS_GETCN_MEMNAME       DS    CL8
WS_GETCN_FULL          DS    CL54
WS_GETCN_PATH_LEN      DS    H
WS_GETCN_PATH_TXT      DS    CL255
WS_LIST_NEXT           EQU   *
*______________________________________________________________________
*
         PRGESTAT
         PRGEND
         END
