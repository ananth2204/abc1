 TITLE 'CHKAUTH - REXX FUNCTION TO CHECK DATASET AUTHORISATION'
 PRINT GEN
*
CHKAUTH PRGDEF FSEG=MAIN_BIT,REXX=Y,RENT=N
*______________________________________________________________________
*
*  This is for people who are not systems programmers, those who
*  if they try and browse a dataset and are not authorised may
*  have to justify their reasons for trying to browse it.
*______________________________________________________________________
*
* This program acts as a REXX function
*
*    Input
*         up to 44 bytes containing the name of a dataset to check
*         if RACF authorised to read/update
*
*    Output
*         Authorised to update         length=20
*         Authorised to read           length=18
*         Not authorised               length=14
*         Error message                length=30
*       OR
*         ### rc of saf                length=22
*______________________________________________________________________
*
*                        Parameters
*______________________________________________________________________
*
*
*  Parameter 1    -    dataset name to check
*
*______________________________________________________________________
*
*  REENTRANT STORAGE
*
THE_DATASET          DS    CL44
IS_AUTH_READ         DS    CL1
IS_AUTH_UPDATE       DS    CL1
*
ERR_NO               DS    CL1
CHAR_9A              DS    CL9
CHAR_9B              DS    CL9
*
        PRGEDEF
*______________________________________________________________________
*
 SEGS MAIN_BIT
*
   SEGDO GET_ARGUMENTS
*
   SEGDO CHECK_AUTHORISED
*
   MVI   EVALBLOCK_EVDATA,C' '
   MVC   EVALBLOCK_EVDATA+1(80),EVALBLOCK_EVDATA
   IF (CLI,IS_AUTH_READ,EQ,C'Y')
     MVC   EVALBLOCK_EVDATA(14),=C'Authorised to '
     IF (CLI,IS_AUTH_UPDATE,EQ,C'Y')
       MVC   EVALBLOCK_EVDATA+14(6),=C'update'
       LA    R1,20
     ELSE
       MVC   EVALBLOCK_EVDATA+14(4),=C'read'
       LA    R1,18
     ENDIF
   ELSEIF (CLI,IS_AUTH_READ,EQ,C'X')   SAF error
     MVC   EVALBLOCK_EVDATA(L'SAF_ERR),SAF_ERR
     MVC   EVALBLOCK_EVDATA+13(8),CHAR_9A
     MVC   EVALBLOCK_EVDATA+25(8),CHAR_9B
     LA    R1,L'SAF_ERR
   ELSE
     MVC   EVALBLOCK_EVDATA(14),=C'Not Authorised'
     LA    R1,14
   ENDIF
   ST    R1,EVALBLOCK_EVLEN
*
 SEGE MAIN_BIT
*______________________________________________________________________
*
 SEGS GET_ARGUMENTS
*
   MVC   THE_DATASET,SPACES
*
   IF (CLC,ARGTABLE_ARGSTRING_PTR,EQ,=8X'FF')    no arguments
     MVI   ERR_NO,1
     SEGDO NOT_VALID
   ENDIF
   IF (CLC,ARGTABLE_ARGSTRING_LENGTH,EQ,=F'0')   zero length argument
     MVI   ERR_NO,2
     SEGDO NOT_VALID
   ENDIF
   IF (CLC,ARGTABLE_ARGSTRING_LENGTH,GT,=F'44')  name > 44 bytes
     MVI   ERR_NO,3
     SEGDO NOT_VALID
   ENDIF
   L     R15,ARGTABLE_ARGSTRING_PTR              get address
   L     R14,ARGTABLE_ARGSTRING_LENGTH           get length
   BCTR  R14,0
   EX    R14,COPY_ARGUMENT             copy dataset name to check
   OC    THE_DATASET,SPACES            ensure uppercase
*
   LA    ARG_POINT,ARGTABLE_NEXT       point to second argument
   IF (CLC,ARGTABLE_ARGSTRING_PTR,NE,=8X'FF')   should be none
     MVI   ERR_NO,4
     SEGDO NOT_VALID
   ENDIF
*
 SEGE GET_ARGUMENTS
*______________________________________________________________________
*
 SEGS CHECK_AUTHORISED
*
   MVC   DS_NAME(44),THE_DATASET       dataset name
   LA    R14,DS_NAME+43
   DO FROM=(R15,43)
   DOEXIT (CLI,0(R14),GT,C' ')
     BCTR  R14,0
   ENDDO
   LA    R14,1(,R14)
   LR    R2,R14
   LOCATE CAM_LISV                     get volume serial
   IF (LTR,R15,R15,NZ)                 not found
     IF (LTR,R0,R0,Z)
       MVC   0(3,R2),=C'(0)'           try for a GDG
       LOCATE CAM_LISV                 get volume serial
     ENDIF
     IF (LTR,R15,R15,NZ)               not found
       MVI   ERR_NO,6
       SEGDO NOT_VALID
     ENDIF
   ENDIF
   IF (CLC,=C'MIGRAT',EQ,CAM_VOL+6)    if migrated then quit
     MVI   ERR_NO,5
     SEGDO NOT_VALID
   ENDIF
*
C1 RACROUTE    REQUEST=AUTH,                                           /
               ATTR=READ,                                              /
               ENTITY=DS_NAME,                                         /
               VOLSER=CAM_VOL+6,                                       /
               MSGSUPP=YES,                                            /
               RELEASE=7720,                                           /
               WORKA=SAFWORK2,                                         /
               CLASS='DATASET',MF=S
   IF (CFI,R15,EQ,0)
     MVI   IS_AUTH_READ,C'Y'
   ELSEIF (CFI,R15,EQ,4)               error in SAF
     MVI   IS_AUTH_READ,C'X'
     UNPK  CHAR_9A,C1+4(5)             copy return and reason codes
     UNPK  CHAR_9B,C1+8(5)
     SEGQUIT                           bail out
   ENDIF
*
   RACROUTE    REQUEST=AUTH,                                           /
               ATTR=UPDATE,                                            /
               ENTITY=DS_NAME,                                         /
               VOLSER=CAM_VOL+6,                                       /
               MSGSUPP=YES,                                            /
               RELEASE=7720,                                           /
               WORKA=SAFWORK2,                                         /
               CLASS='DATASET',MF=S
   IF (CFI,R15,EQ,0)
     MVI   IS_AUTH_UPDATE,C'Y'
   ENDIF
*
 SEGE CHECK_AUTHORISED
*______________________________________________________________________
*
 SEGS NOT_VALID
*
   IF (CLI,ERR_NO,EQ,1)
     MVC   EVALBLOCK_EVDATA(30),=CL30'No argument passed'
   ELSEIF (CLI,ERR_NO,EQ,2)
     MVC   EVALBLOCK_EVDATA(30),=CL30'Argument was zero length'
   ELSEIF (CLI,ERR_NO,EQ,3)
     MVC   EVALBLOCK_EVDATA(30),=CL30'Argument 44 bytes'
   ELSEIF (CLI,ERR_NO,EQ,4)
     MVC   EVALBLOCK_EVDATA(30),=CL30'Second argument received'
   ELSEIF (CLI,ERR_NO,EQ,5)
     MVC   EVALBLOCK_EVDATA(30),=CL30'Dataset is migrated'
   ELSEIF (CLI,ERR_NO,EQ,6)
     MVC   EVALBLOCK_EVDATA(30),=CL30'Dataset not found'
   ELSE
     MVC   EVALBLOCK_EVDATA(30),=CL30'Unknown error, RC='
     XR    R1,R1
     IC    R1,ERR_NO
     CVD   R1,DOUB_WORD
     OI    DOUB_WORD+7,X'0F'
     UNPK  EVALBLOCK_EVDATA+18(4),DOUB_WORD
     XC    R_C,R_C
   ENDIF
   MVC   EVALBLOCK_EVLEN,=F'30'        set output length
*
   PRGQUIT
*
 SEGE NOT_VALID
*______________________________________________________________________
*
         PRGSTAT
*
SAF_ERR  DC    C'SAF error RC=######## RS=########'
SPACES   DC    80CL1' '
*
COPY_ARGUMENT  MVC   THE_DATASET(1),0(R15)
*
         LTORG
*
*        GET VOLUME SERIAL FOR GIVEN DATASET
CAM_LISV CAMLST NAME,DS_NAME,,CAM_VOL
         DS    0D
DS_NAME  DC    CL44' '
CAM_VOL  DS    CL265              CAMLST WORK AREA
         ORG   CAM_VOL
SAFWORK2 DS    CL512
         ORG
*______________________________________________________________________
*
         PRGESTAT
         PRGEND
         END
