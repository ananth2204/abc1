 TITLE 'PIPESET - UNPIPE A PIPE DELIMITED INPUT FILE'
*______________________________________________________________________
*
*    THIS PROGRAM EXPECTS TO READ THE SYSOUT FROM PIPECNT IN SYSIN.
*______________________________________________________________________
*
*    READ A PIPE ¦ DELIMITED FILE IN PIPEIN SPLITTING THE FIELDS UP
*    INTO THE LENGTHS SPECIFIED BY THE SYSIN FROM PIPECNT.
*    OPTIONALLY YOU CAN SPECIFY THE NUMBER OF BYTES SPACING THERE
*    SHOULD BE BETWEEN EACH FIELD AS A PARAMETER.
*    E.G. PARM=1
*    PARM=0 IS THE DEFAULT
*______________________________________________________________________
*
PIPESET  PRGDEF  FSEG=MAIN_PART,RMODE=24
*
FIELD_COUNT      DS    D
RECORD_ADDRESS   DS    F
FIELD_SPACE      DS    H
FIELD_SPACE2     DS    H
*
ASM_REC          DS    CL80
COBOL_REC        DS    CL80
ASM_REC_F        DS    CL80            FOR FILLER FIELDS
COBOL_REC_F      DS    CL80            FOR FILLER FIELDS
*
SYSIN_REC        DS    CL80
EOF_SYSIN        DS    CL1
EOF_PIPEIN       DS    CL1
VARIABLE_RECORD  DS    CL1
*
         PRGEDEF
*
         USING OUTREC_DSECT,R9
IN       USING IHADCB,PIPEIN
OUT      USING IHADCB,PIPEOUT
*______________________________________________________________________
*
 SEGS MAIN_PART
*
   L     R1,0(,R1)                     GET PARAMETER ADDRESS
   IF (CLC,0(2,R1),GT,=H'0')
     LH    R2,0(R1)
     BCTR  R2,0
     IF (EX,R2,TRT_IT,NZ)
       WTO   'PARM WAS NOT NUMERIC',ROUTCDE=11,MCSFLAG=HRDCPY
       PRGQUIT RC=16
     ENDIF
     EX    R2,PACK_IT
     CVB   R1,DOUB_WORD
     STH   R1,FIELD_SPACE
   ENDIF
   ZAP   FIELD_COUNT,=P'0'
*
   SEGDO OPEN_SYSIN
   XR    R4,R4
   DO INF
     SEGDO GET_SYSIN
   DOEXIT (CLI,EOF_SYSIN,EQ,C'Y')
     IF (CLC,SYSIN_REC(19),EQ,=C'  DELIMITER USED WAS')
       MVC   DELI_METER,SYSIN_REC+30
     ELSEIF (CLC,SYSIN_REC(16),NE,=C'PROGRAM STARTING'),AND,           /
               (CLC,SYSIN_REC(19),NE,=C'PROGRAM TERMINATING'),AND,     /
               (CLC,SYSIN_REC(19),NE,=C'                   ')
       SEGDO ADD_TO_OUTREC_TABLE
       PACK  DOUB_WORD,SYSIN_REC(9)
       IF (CP,DOUB_WORD,EQ,=P'0')      ZERO LENGTH FIELD (NO DATA)
         AP    DOUB_WORD,=P'1'         MAKE IT ONE
       ENDIF
       CVB   R1,DOUB_WORD
       STH   R1,THIS_SIZE              SIZE OF THIS FIELD
       LA    R4,0(R1,R4)               TOTAL RECORD LENGTH
       AP    FIELD_COUNT,=P'1'         ADD TO COUNT OF FIELDS
     ENDIF
   ENDDO
   SEGDO CLOSE_SYSIN
*
   SP    FIELD_COUNT,=P'1'             SPACES 1 LESS THAN FIELDS
   CVB   R1,FIELD_COUNT
   IF (CLC,FIELD_SPACE,NE,=H'0')
     LH    R14,FIELD_SPACE
     LA    R14,1(,R14)
     STH   R14,FIELD_SPACE2
     MH    R1,FIELD_SPACE2
   ENDIF
   LA    R4,0(R1,R4)
   STH   R4,OUT.DCBLRECL               SET PIPEOUT RECORD LENGTH
   LR    R2,R4                         COPY RECORD LENGTH
   STORAGE OBTAIN,LENGTH=(R2),LOC=BELOW
   ST    R1,RECORD_ADDRESS
*
   SEGDO OPEN_PIPEIN
   SEGDO OPEN_PIPEOUT
*
   DO INF
     SEGDO GET_PIPEIN
   DOEXIT (CLI,EOF_PIPEIN,EQ,C'Y')
     SEGDO MAIN_PROCESS
   ENDDO
*
   SEGDO CREATE_COPYBOOKS
*
   SEGDO CLOSE_PIPEIN
   SEGDO CLOSE_PIPEOUT
*
 SEGE MAIN_PART
*______________________________________________________________________
*
 SEGS MAIN_PROCESS
*
   IF (CLI,VARIABLE_RECORD,EQ,C'Y')
     LH    R5,0(,R8)
     SH    R5,=H'4'
     LA    R8,4(,R8)
   ELSE
     LH    R5,IN.DCBLRECL
   ENDIF
*
   L     R14,RECORD_ADDRESS
   LH    R15,OUT.DCBLRECL
   IC    R1,=C' '
   SLL   R1,24
   MVCL  R14,R0                        INITIALISE TO SPACES
*
   L     R9,ADDR_OUTREC
   L     R4,RECORD_ADDRESS
   LR    R7,R4                         COPY RECORD ADDRESS
   AH    R7,THIS_SIZE                  POINT TO END OF FIELD
   DO FROM=(R5)
     IF (CLC,0(1,R8),EQ,DELI_METER)
       MVI   0(R7),C'¦'
       LA    R7,1(,R7)                 POINT AFTER ¦
       AH    R7,FIELD_SPACE            ADD SPACING BETWEEN FIELDS
       LR    R4,R7                     COPY ADDR OF NEXT FIELD
       L     R9,NEXT_OUTREC
       AH    R7,THIS_SIZE              POINT TO END OF FIELD
     ELSEIF (CR,R4,GE,R7)              TO MUCH DATA?
       LH    R1,FIELD_NUMB
       CVD   R1,DOUB_WORD
       OI    DOUB_WORD+7,X'0F'
       UNPK  T_1+8+6(5),DOUB_WORD
T_1    WTO   'FIELD XXXXX IS LONGER THAN SPECIFIED                 ',  /
               ROUTCDE=11,MCSFLAG=HRDCPY
       SEGDO WRITE_PIPEOUT
       PRGQUIT RC=16
     ELSE
       MVC   0(1,R4),0(R8)
       LA    R4,1(,R4)
     ENDIF
     LA    R8,1(,R8)
   ENDDO
   SEGDO WRITE_PIPEOUT
*
 SEGE MAIN_PROCESS
*______________________________________________________________________
*
 SEGS ADD_TO_OUTREC_TABLE
*
   L     R9,ADDR_OUTREC_POS
*
*  USE LNKBLD TO BUILD A LINKED TABLE OF GETMAINED STORAGE CONTAINING
*  THE COUNT OF CHARACTERS BETWEEN EACH DELIMITER.
*
   LNKBLD  START=ADDR_OUTREC,NEXT=NEXT_OUTREC,LOC=31,                  /
               REG=R9,LENGTH=LEN_OUTREC,                               /
               END=ADDR_OUTREC_POS
*
   XC    NEXT_OUTREC,NEXT_OUTREC       INITIALISE NEXT POINTER
   LA    R7,1(,R7)
   STH   R7,FIELD_NUMB
*
 SEGE ADD_TO_OUTREC_TABLE
*______________________________________________________________________
*
 SEGS CREATE_COPYBOOKS
*
   MVI   ASM_REC,C' '
   MVC   ASM_REC+1(159),ASM_REC        CLEAR BOTH RECORDS
*
   MVI   ASM_REC_F,C' '
   MVC   ASM_REC_F+1(159),ASM_REC_F    CLEAR BOTH FILL RECORDS
   MVC   COBOL_REC_F+12(11),=C'03   FILLER'
   MVC   COBOL_REC_F+50(14),=C'PIC  X(00000).'
   MVC   ASM_REC_F+17(2),=C'DS'
   MVC   ASM_REC_F+23(7),=C'CL00000'
   LH    R1,FIELD_SPACE
   LA    R1,1(,R1)                     ADD 1 FOR ¦ SYMBOL
   CVD   R1,DOUB_WORD
   OI    DOUB_WORD+7,X'0F'
   UNPK  COBOL_REC_F+57(5),DOUB_WORD
   UNPK  ASM_REC_F+25(5),DOUB_WORD
*
   ZAP   FIELD_COUNT,=P'0'
   L     R9,ADDR_OUTREC
   DO INF
   DOEXIT (LTR,R9,R9,Z)
     AP    FIELD_COUNT,=P'1'           ADD TO COUNT OF FIELDS
     MVC   COBOL_REC+12(16),=C'03   FIELD-00000'
     MVC   ASM_REC(11),=C'FIELD_00000'
     MVC   COBOL_REC+50(14),=C'PIC  X(00000).'
     MVC   ASM_REC+17(2),=C'DS'
     MVC   ASM_REC+23(7),=C'CL00000'
     LH    R1,THIS_SIZE
     CVD   R1,DOUB_WORD
     OI    DOUB_WORD+7,X'0F'
     UNPK  COBOL_REC+57(5),DOUB_WORD
     UNPK  ASM_REC+25(5),DOUB_WORD
*
     OI    FIELD_COUNT+7,X'0F'
     UNPK  COBOL_REC+23(5),FIELD_COUNT
     UNPK  ASM_REC+6(5),FIELD_COUNT
     SEGDO WRITE_PRT_ASM_COB
*
     IF (CLC,NEXT_OUTREC,NE,=F'0')
       MVC   ASM_REC,ASM_REC_F
       MVC   COBOL_REC,COBOL_REC_F
       SEGDO WRITE_PRT_ASM_COB
     ENDIF
*
     LR    R4,R9
     LA    R2,LEN_OUTREC
     L     R9,NEXT_OUTREC
     STORAGE RELEASE,LENGTH=(R2),ADDR=(R4)
   ENDDO
*
 SEGE CREATE_COPYBOOKS
*______________________________________________________________________
*
 SEGS WRITE_PIPEOUT
*
   L     R4,RECORD_ADDRESS
   PUT   PIPEOUT,0(R4)
*
 SEGE WRITE_PIPEOUT
*______________________________________________________________________
*
 SEGS WRITE_PRT_ASM_COB
*
   PUT   PRTASM,ASM_REC
   PUT   PRTCOB,COBOL_REC
   MVI   ASM_REC,C' '
   MVC   ASM_REC+1(159),ASM_REC        CLEAR BOTH RECORDS
*
 SEGE WRITE_PRT_ASM_COB
*______________________________________________________________________
*
 SEGS OPEN_PIPEOUT
*
   OPEN  (PIPEOUT,OUTPUT),MODE=31
   IF (LTR,R15,R15,NZ)
     WTO   'ERROR OPENING PIPEOUT',ROUTCDE=11,MCSFLAG=HRDCPY
     PRGQUIT RC=16
   ENDIF
*
   OPEN  (PRTASM,OUTPUT),MODE=31
   IF (LTR,R15,R15,NZ)
     WTO   'ERROR OPENING PRTASM',ROUTCDE=11,MCSFLAG=HRDCPY
     PRGQUIT RC=16
   ENDIF
*
   OPEN  (PRTCOB,OUTPUT),MODE=31
   IF (LTR,R15,R15,NZ)
     WTO   'ERROR OPENING PRTCOB',ROUTCDE=11,MCSFLAG=HRDCPY
     PRGQUIT RC=16
   ENDIF
*
 SEGE OPEN_PIPEOUT
*______________________________________________________________________
*
 SEGS CLOSE_PIPEOUT
*
   CLOSE (PIPEOUT),MODE=31
   IF (LTR,R15,R15,NZ)
     WTO   'ERROR CLOSING PIPEOUT',ROUTCDE=11,MCSFLAG=HRDCPY
     PRGQUIT RC=16
   ENDIF
*
   CLOSE (PRTASM),MODE=31
   IF (LTR,R15,R15,NZ)
     WTO   'ERROR CLOSING PRTASM',ROUTCDE=11,MCSFLAG=HRDCPY
     PRGQUIT RC=16
   ENDIF
*
   CLOSE (PRTCOB),MODE=31
   IF (LTR,R15,R15,NZ)
     WTO   'ERROR CLOSING PRTCOB',ROUTCDE=11,MCSFLAG=HRDCPY
     PRGQUIT RC=16
   ENDIF
*
 SEGE CLOSE_PIPEOUT
*______________________________________________________________________
*
 SEGS OPEN_SYSIN
*
   OPEN  (SYSIN,INPUT),MODE=31
   IF (LTR,R15,R15,NZ)
     WTO   'ERROR OPENING SYSIN',ROUTCDE=11,MCSFLAG=HRDCPY
     PRGQUIT RC=16
   ENDIF
*
 SEGE OPEN_SYSIN
*______________________________________________________________________
*
 SEGS CLOSE_SYSIN
*
   CLOSE (SYSIN),MODE=31
   IF (LTR,R15,R15,NZ)
     WTO   'ERROR CLOSING SYSIN',ROUTCDE=11,MCSFLAG=HRDCPY
     PRGQUIT RC=16
   ENDIF
*
 SEGE CLOSE_SYSIN
*______________________________________________________________________
*
 SEGS GET_SYSIN
*
   MVI   EOF_SYSIN,C'N'
   GET   SYSIN
   MVC   SYSIN_REC,0(R1)
   SEGQUIT                             RETURN TO CALLING SEGMENT
*
ENDOFEMS   DS    0H                    IT IS THE END OF SYSIN
   MVI   EOF_SYSIN,C'Y'
*
 SEGE GET_SYSIN
*______________________________________________________________________
*
 SEGS OPEN_PIPEIN
*
   OPEN  (PIPEIN,INPUT),MODE=31
   IF (LTR,R15,R15,NZ)
     WTO   'ERROR OPENING PIPEIN',ROUTCDE=11,MCSFLAG=HRDCPY
     PRGQUIT RC=16
   ENDIF
   IF (TM,IN.DCBRECFM,DCBRECV,NZ)
     MVI   VARIABLE_RECORD,C'Y'
   ENDIF
*
 SEGE OPEN_PIPEIN
*______________________________________________________________________
*
 SEGS CLOSE_PIPEIN
*
   CLOSE (PIPEIN),MODE=31
   IF (LTR,R15,R15,NZ)
     WTO   'ERROR CLOSING PIPEIN',ROUTCDE=11,MCSFLAG=HRDCPY
     PRGQUIT RC=16
   ENDIF
*
 SEGE CLOSE_PIPEIN
*______________________________________________________________________
*
 SEGS GET_PIPEIN
*
   MVI   EOF_PIPEIN,C'N'
   GET   PIPEIN
   LR    R8,R1
   SEGQUIT
*
ENDOFEMP   DS    0H                    IT IS THE END OF SYSIN
   MVI   EOF_PIPEIN,C'Y'
*
 SEGE GET_PIPEIN
*______________________________________________________________________
*
         PRGSTAT
*
PACK_IT  PACK  DOUB_WORD,2(1,R1)
TRT_IT   TRT   2(1,R1),NUMTAB
*
ADDR_OUTREC            DC    F'0'
ADDR_OUTREC_POS        DC    F'0'
*
SYSIN    DCB   DDNAME=SYSIN,MACRF=(GL),DSORG=PS,EODAD=ENDOFEMS
PRTASM   DCB   DDNAME=PRTASM,MACRF=(PM),DSORG=PS,RECFM=FB,LRECL=80
PRTCOB   DCB   DDNAME=PRTCOB,MACRF=(PM),DSORG=PS,RECFM=FB,LRECL=80
PIPEIN   DCB   DDNAME=PIPEIN,MACRF=(GL),DSORG=PS,EODAD=ENDOFEMP
PIPEOUT  DCB   DDNAME=PIPEOUT,MACRF=(PM),DSORG=PS,RECFM=FB
*
DELI_METER     DC    C'¦'
*______________________________________________________________________
*
NUMTAB   DC    256X'01'                TABLE FOR NUMERIC VALIDATION
         ORG   NUMTAB+X'F0'
         DC    10X'00'
         ORG
*
         DC    CL00034' '
         LTORG
*______________________________________________________________________
*
OUTREC_DSECT           DSECT
THIS_SIZE              DC    H'0'
FIELD_NUMB             DC    H'0'
NEXT_OUTREC            DC    F'0'
LEN_OUTREC             EQU   *-OUTREC_DSECT
*
         DCBD  DSORG=QS,DEVD=DA
*______________________________________________________________________
*
         PRGESTAT
         PRGEND
         END
