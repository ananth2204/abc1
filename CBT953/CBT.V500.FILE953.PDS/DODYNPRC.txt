 TITLE 'DODYNPRC - MODULE TO DYNALLOC'
*______________________________________________________________________
*
*   THIS IS A SUB-ROUTINE TO DYNAMICALLY ALLOCATE A DATASET
*   TO A DDNAME, OR TO DE-ALLOCATE.
*______________________________________________________________________
*
DODYNPRC PRGDEF FSEG=MAIN_PART,RMODE=24
*
ERR_NO         DS    CL1
*
INPUT_PARM     DSECT
INPUT_ACTION   DS    CL1              'A'  ALLOCATE
*                                     'D'  DE-ALLOCATE
INPUT_DDNAME   DS    CL8              DDNAME
INPUT_DATASET  DS    CL44             DATASET
INPUT_MEMBER   DS    CL8              OPTIONAL MEMBER NAME
*
         PRGEDEF
*
         USING S99RBP,R10             MAKE S99RBP DSECT ADDRESSIBLE
         USING S99RB,R9               MAKE RB DSECT ADDRESSIBLE
         USING INPUT_PARM,R4
*______________________________________________________________________
*
 SEGS MAIN_PART
*
   L     R4,0(,R1)                    COPY INPUT PARAMETER LIST
*
   IF (CLI,INPUT_ACTION,EQ,C'A')      ALLOCATE
     SEGDO ALLOCATE_DATASET
   ELSEIF (CLI,INPUT_ACTION,EQ,C'D')  DE-ALLOCATE
     SEGDO DEALLOCATE_DATASET
   ELSE
     SETRC RC=8
   ENDIF
*
 SEGE MAIN_PART
*______________________________________________________________________
*
 SEGS ALLOCATE_DATASET
*
   L     R1,STORADR
   IF (LTR,R1,R1,Z)
     LH    R0,=H'4096'           LENGTH OF STORAGE AREA
     GETMAIN R,LV=(R0)           GET STORAGE AREA FOR DYNALLOC
     ST    R1,STORADR            SAVE ADDRESS OF STORAGE
   ENDIF
   L     R10,STORADR
   LA    R9,S99RBPTR+4           POINT 4 BYTES AFTER S99RBPTR
   ST    R9,S99RBPTR             MAKE 'RBPTR' POINT TO RB
   OI    S99RBPTR,S99RBPND       SET ON HIGH-ORDER BIT IN RBPTR
   XC    S99RB(RBLEN),S99RB      ZEROISE COMPLETE 'RB'
   MVI   S99RBLN,RBLEN           PUT LENGTH OF RB IN LENGTH FIELD
   MVC   S99ERROR,=H'0'
   MVC   S99INFO,=H'0'
   LA    R8,24(R10)              START OF TEXT ADDRESS POINTERS
   ST    R8,S99TXTPP
*
   MVC   KEYADDNM,INPUT_DDNAME
   MVC   KEYADSN,INPUT_DATASET
   MVC   KEYAMEN,INPUT_MEMBER
*
   MVI   S99VERB,S99VRBAL        SET ALLOCATE VERB
   LA    R1,KEYA
   ST    R1,0(R8)                STORE KEY ADDRESS
   LA    R1,KEYADS
   ST    R1,4(R8)                STORE KEY ADDRESS
   IF (CLC,=C'DUMMY ',EQ,INPUT_DATASET)
     LA    R1,KEYDUMY
     ST    R1,8(R8)              STORE KEY ADDRESS
     OI    8(R8),X'80'           INDICATE END OF ADDRESS LIST
   ELSE
     LA    R1,KEYADISP
     ST    R1,8(R8)              STORE KEY ADDRESS
     IF (CLC,KEYAMEN,GT,SPACES)
       LA    R1,KEYAME
       ST    R1,12(R8)           STORE KEY ADDRESS
       OI    12(R8),X'80'        INDICATE END OF ADDRESS LIST
     ELSE
       OI    8(R8),X'80'         INDICATE END OF ADDRESS LIST
     ENDIF
   ENDIF
*
   L     R1,STORADR              SET R1 TO ADDR. OF RB POINTER
   DYNALLOC
*
   IF (LTR,R15,R15,NZ)
     MVC   MESS_TXT(12),=CL12'DYNALLOC RC='
     CVD   R15,DOUB_WORD
     OI    DOUB_WORD+7,X'0F'
     UNPK  MESS_TXT+12(3),DOUB_WORD+6(2)
     LH    R15,S99ERROR
     CVD   R15,DOUB_WORD
     OI    DOUB_WORD+7,X'0F'
     UNPK  MESS_TXT+16(5),DOUB_WORD+5(3)
     MVC   MESS_TXT+24(44),KEYADSN
     MVC   MESS_TXT+70(8),KEYAMEN
     SEGDO WRITE_LOG
     PRGQUIT RC=16
   ENDIF
*
 SEGE ALLOCATE_DATASET
*______________________________________________________________________
*
 SEGS DEALLOCATE_DATASET
*
   L     R10,STORADR
   LA    R9,S99RBPTR+4           POINT 4 BYTES AFTER S99RBPTR
   ST    R9,S99RBPTR             MAKE 'RBPTR' POINT TO RB
   OI    S99RBPTR,S99RBPND       SET ON HIGH-ORDER BIT IN RBPTR
   XC    S99RB(RBLEN),S99RB      ZEROISE COMPLETE 'RB'
   MVI   S99RBLN,RBLEN           PUT LENGTH OF RB IN LENGTH FIELD
   MVC   S99ERROR,=H'0'
   MVC   S99INFO,=H'0'
   LA    R8,24(R10)              START OF TEXT ADDRESS POINTERS
   ST    R8,S99TXTPP
*
   MVI   S99VERB,S99VRBUN        SET DEALLOCATE VERB
   LA    R1,KEYA
   ST    R1,0(R8)                STORE KEY ADDRESS
   OI    0(R8),X'80'             INDICATE END OF ADDRESS LIST
   L     R1,STORADR              SET R1 TO ADDR. OF RB POINTER
   DYNALLOC
*
   IF (LTR,R15,R15,NZ)
     MVC   MESS_TXT(14),=CL14'DYNUNALLOC RC='
     CVD   R15,DOUB_WORD
     OI    DOUB_WORD+7,X'0F'
     UNPK  MESS_TXT+14(3),DOUB_WORD+6(2)
     LH    R15,S99ERROR
     CVD   R15,DOUB_WORD
     OI    DOUB_WORD+7,X'0F'
     UNPK  MESS_TXT+16(5),DOUB_WORD+5(3)
     MVC   MESS_TXT+24(44),KEYADSN
     MVC   MESS_TXT+70(8),KEYAMEN
     SEGDO WRITE_LOG
     PRGQUIT RC=16
   ENDIF
*
 SEGE DEALLOCATE_DATASET
*______________________________________________________________________
*
         PRGSTAT
*
SPACES   DC    CL80' '
*______________________________________________________________________
*
         LTORG
*______________________________________________________________________
*
         DS    0D
STORADR  DC    A(0)
RBLEN    EQU   S99RBEND-S99RB
*
KEYA     DC    Y(DALDDNAM)
         DC    X'0001'                1 ENTRY
         DC    X'0008'                LENGTH IS 8
KEYADDNM DC    CL8'        '          DDNAME FOR ALLOCATION
*
KEYADS   DC    Y(DALDSNAM)
         DC    X'0001'                1 ENTRY
KEYADSL  DC    H'44'                  LENGTH IS 44
KEYADSN  DC    CL44' '                DATASET NAME
*
KEYAME   DC    Y(DALMEMBR)
         DC    X'0001'                1 ENTRY
KEYAMEL  DC    H'8'                   LENGTH IS 8
KEYAMEN  DC    CL8' '                 MEMBER NAME
*
KEYADISP DC    Y(DALSTATS)            DISP=
         DC    X'0001'                1 ENTRY
         DC    X'0001'                LENGTH IS 1
         DC    X'08'                  DISP=SHR
*
KEYDUMY  DC    Y(DALDUMMY)
         DC    X'0000'                NO ENTRIES
*
KEYAL    EQU   *-KEYA
*______________________________________________________________________
*
         IEFZB4D0
         IEFZB4D2
*______________________________________________________________________
*
         PRGESTAT
         PRGEND
         END
