 TITLE 'STEMSR15 - E15 exit for the SORT, part of STEMSORT'
*______________________________________________________________________
*
* Written by John Gateley - use at your own risk
*
* This is called by the SORT to obtain the input record.
*______________________________________________________________________
*
STEMSR15 PRGDEF FSEG=MAIN_PART,INREX=Y
*
         USING STMSRTLN,R2
         USING STEM_AREA,R5
*
         PRGEDEF
*______________________________________________________________________
*
 SEGS MAIN_PART
*
*  R2 points to    RX_REC_LEN     DS    F
*                  RX_REC_ADR     DS    F
*                  RX_THE_STEM    DS    F
*                  RX_VAR_LEN_ADR DS    F
*                  RX_#SAV_REX    DS    4F
*                  RX_TOT_RECS    DS    PL4
*
   L     R2,=V(STMSRTLN)               point to stuff in STEMSORT
   LM    R3,R6,0(R2)
*                            R3        record length
*                            R4        record area address
*                            R5        get input stem area
*                            R6        adr for length of variable
   MVC   #SAV_REX(4*4),RX_#SAV_REX     copy IRX addresses
   IF (CP,STEM_ZERO_COUNT,LT,RX_TOT_RECS)
     LR    R14,R4                      copy record address
     LR    R15,R3                      copy record length
     LA    R1,C' '                     set to blank
     SLL   R1,24                       put in high byte
     MVCL  R14,R0                      clear record to spaces
     MVHHI STEM_FUNCTION,5             get stem.? next
     ST    R5,MY_P_1                   save as first parm
     LA    R1,MY_PARM                  point to parameter list
     L     R15,=V(PROCSTEM)            get program address
     BASR  R14,R15                     go and get stem value
     IF (LTR,R15,R15,NZ)               error ?
       ST    R15,R_C                   set return code
       PRGQUIT                         QUIT
     ENDIF
     L     R15,STEM_TEXT_ADR           get address of record read
     MVC   0(4,R6),STEM_TEXT_LEN       put length on end of record
     L     R1,4(R13)                   point to callers save area
     ST    R15,24(R1)                  put in record address
     SETRC RC=12                       input record provided
   ELSE
     ZAP   STEM_ZERO_COUNT,=P'0'       make 0 for E35 exit
     SETRC RC=8                        no more input
   ENDIF
*
 SEGE MAIN_PART
*______________________________________________________________________
*
 SEGS WRITE_LOG
*
   WTOX
*
 SEGE WRITE_LOG
*______________________________________________________________________
*
         PRGSTAT
*
         LTORG
*
         PRGSTEM DSECT=Y
*
STMSRTLN       DSECT
RX_REC_LEN     DS    F
RX_REC_ADR     DS    F
RX_THE_STEM    DS    F
RX_VAR_LEN_ADR DS    F
RX_#SAV_REX    DS    4F                rexx environment addresses
RX_TOT_RECS    DS    PL4
LEN_STMSRTLN   EQU   *-STMSRTLN
*
         PRGESTAT
         PRGEND
         END
