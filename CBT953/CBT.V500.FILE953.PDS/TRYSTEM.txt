/* REXX                                                        */

/* Examples of sorting a stem variable ascending, descending   */
/* and with a specific sort program command.                   */


/* The SORT has been told to send messages to SORTPRT so       */
/* allocate SORTPRT to DUMMY to hide SORT messages             */
/* or to the teminal if you want to see them.                  */

/* Alternatively add a third argument to the call of 'NOMSG'   */
/* which dynamically allocates SORTPRT to DUMMY while the      */
/* command runs and then de-allocates.                         */

    "ALLOC FI(SORTPRT)  DUMMY"

/* Concatenate the load library                                */

    "ISPEXEC LIBDEF ISPLLIB DATASET ID ('SDJRG.LOADLIB') STACK"
    if rc /= 0 then do
       say 'allocation to ispllib failed.'
       exit
    end

    SORT_STMT = 'SUM FIELDS=(21,5,ZD) SORT FIELDS=(1,20,CH,A)'
    WANG.0    = "16"
    WANG.1    = "ZAK                 00001"
    WANG.2    = "JOHN                00001"
    WANG.3    = "YANGTANGBANG        00001"
    WANG.4    = "ADAM                00001"
    WANG.5    = "CHARLES             00001"
    WANG.6    = "JOHn GATELEY        00001"
    WANG.7    = "Kingsley Amis       00001"
    WANG.8    = "KING KONG           00001"
    WANG.9    = "ZAK                 00001"
    WANG.10   = "JOHN                00001"
    WANG.11   = "YANGTANGBANG        00001"
    WANG.12   = "ADAM                00001"
    WANG.13   = "CHARLES             00001"
    WANG.14   = "JOHn GATELEY        00001"
    WANG.15   = "Kingsley Amis       00001"
    WANG.16   = "KING KONG           00001"

    DO LO_OP_R = 1 TO WANG.0
       SAY  'Original  :' || WANG.LO_OP_R || ':'
    END

    SAY ' '

    /* sort and sum all   */
    R_C = STEMSORT(WANG,SORT_STMT)
    IF  R_C      /= 0 THEN SAY 'R_C was ' R_C
    ELSE
       DO LO_OP_R = 1 TO WANG.0
          SAY  'Sort 1    :' || WANG.LO_OP_R || ':'
       END

    SAY ' '


    R_C = STEMSORT(WANG,'D')    /* sort the whole variable Desc */
    IF  R_C      /= 0 THEN SAY 'R_C was ' R_C
    ELSE
       DO LO_OP_R = 1 TO WANG.0
          SAY  'Sort 2    :' || WANG.LO_OP_R || ':'
       END

    SAY ' '

    /*  You can provide a specific sort command.                */
    /*  if you wish to provided a SUM statement put it first    */
    /*  as the program needs to add ',FILSZ=nnnnnn' to the      */
    /*  sort command. Do not include an INREC or OUTREC         */
    /*  statement as the results will not be as expected.       */

    sort_cmd = ' SORT FIELDS=(1,3,CH,A,4,5,CH,D) '
    R_C = STEMSORT(WANG,sort_cmd)
    IF  R_C      /= 0 THEN SAY 'R_C was ' R_C
    ELSE
       DO LO_OP_R = 1 TO WANG.0
          SAY  'Sort 3    :' || WANG.LO_OP_R || ':'
       END

    SAY ' '

    DROP WANG.

/* Free the load library                                       */

    "ISPEXEC LIBDEF ISPLLIB "

/* Free SORTPRT                                                */

    "FREE FILE(SORTPRT)"

    EXIT
