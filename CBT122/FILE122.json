{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011256000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 411502, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE122.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE122.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x08\\x07'", "DS1TRBAL": "b'\\x87x'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\xc8\\x00\\x04\\x00\\xc8\\x00\\x0c\\x00\\t'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$$$$$": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//***FILE XXX CONTAINS THE RMSG SUB-SYSTEM AND SOME JES2 EXITS      *\n//*           USED AT ALLERGAN INC OF IRVINE CALIFORNIA . THIS      *\n//*           FILE IS IN IEBUPDTE SYSIN FORMAT , FOR ADDITIONAL     *\n//*           INFORMATION SEE THE MEMBER CALLED $$DOC               *\n//*                                                                 *\n//*            THE RMSG SUB-SYSTEM IS AN 'AUTOMATIC OPERATOR' SYSTEM*\n//*            THAT MONITORS AND REACTS TO SELECTED CONSOLE TRAFFIC *\n//*            AND USER WRITTEN COMMANDS.                           *\n//*                                                                 *\n//*            THE RMSG SUB-SYSTEM RUNS ON MVS/SP AND MVS/XA WITHOUT*\n//*            ANY MODIFICATION.  THE J2SRB01 ROUTINE RUNS ON MVS/SP*\n//*            AND MVS/XA WITHOUT ANY MODIFICATION.                 *\n//*                                                                 *\n//*                                                                 *\n//*             MEMBER              DESCRIPTION                     *\n//*                                                                 *\n//*            CMDRMSG  SAMPLE MVS STARTUP COMMANDS ISSUED BY       *\n//*                     RMSGLOAD                                    *\n//*                      PLACE THIS MEMBER IN SYS1.PARMLIB.  THIS IS*\n//*                      A LIST OF COMMANDS THAT ARE ISSUED BY      *\n//*                      RMSGLOAD AFTER RMSG IS INITALIZED.  SEE    *\n//*                      QUITMVS FOR SHUTDOWN COMMANDS THE PROC     *\n//*                      RMSGLOAD REFERS TO THIS MEMBER             *\n//*                                                                 *\n//*            COMEIN   ENTRY MACRO FOR SOME ROUTINES               *\n//*                      PLACE THIS MEMBER IN YOUR USER MACLIB      *\n//*                                                                 *\n//*            GETOUT   EXIT MACRO FOR SOME ROUTINES                *\n//*                      PLACE THIS MEMBER IN YOUR USER MACLIB      *\n//*                                                                 *\n//*            IEFSSN00 SAMPLE SUB-SYSTEM NAME TABLE                *\n//*                      ADD AN ENTRY FOR \"RMSG\" TO YOUR SUB-SYSTEM *\n//*                      NAME TABLE IN SYS1.PARMLIB.                *\n//*                                                                 *\n//*            JES2PARM SAMPLE JES2 PARMS                           *\n//*                      THESE JES2 PARMS ACTIVATE ALL OF OUR JES2  *\n//*                      EXITS AND STARTS A NJE/NJI LINK BETWEEN MVS*\n//*                      AND VM.  BEWARE OF THE VIRTUAL PRINTER     *\n//*                      NUMBERS. THEY ARE CRITICAL BEWARE OF THE   *\n//*                      NJE NODE NAMES.                            *\n//*                                                                 *\n//*            J2SRB01  SRB TO CLOSE VIRTUAL PRINTERS               *\n//*                      THIS SRB ISSUES A DIAGNOSE 8 TO CLOSE      *\n//*                      VIRTUAL PRINTERS.  IT IS LOADED BY RMSGLOAD*\n//*                      AND ACTIVATED BY J2XIT01.  THE LOAD MODULE *\n//*                      MUST RESIDE IN THE SAME LINKLIB AS RMSG.   *\n//*                      SEE THE //LOADLIB DD IN THE RMSGSUB PROC.  *\n//*                      THE SSVT FOR RMSG IS ALSO THE ANCHOR FOR   *\n//*                      J2SRB01                                    *\n//*                                                                 *\n//*            J2TBL03  ACCOUNT NUMBER TABLE FOR J2XIT03            *\n//*                      ACCOUNT NUMBER VALIDATION ROUTINE FOR BOTH *\n//*                      MVS AND CMS.  THIS ROUTINE IS LOADED AND   *\n//*                      CALLED BY J2XIT03.  THIS ROUTINE, WHEN     *\n//*                      ASSEMBLED UNDER CMS, CAN BE USED TO        *\n//*                      VALIDATE ACCOUNT NUMBERS.                  *\n//*                                                                 *\n//*            J2XIT01  JES2 EXIT 1 TO CLOSE VIRTURAL PRINTERS      *\n//*                      THIS ROUTINE KNOWS, BY PRINTER NUMBER,     *\n//*                      WHICH PRINTERS ARE VIRTUAL PRINTERS.  NO   *\n//*                      ACTION IS TAKEN FOR REAL PRINTERS.  IF THE *\n//*                      ENTRY IS FOR A START BANNER PAGE, A 1 LINE *\n//*                      BANNER PAGE IS CREATED.  IF THE ENTRY IS   *\n//*                      FOR A ENDING BANNER PAGE, THEN THE PRINTER *\n//*                      ADDRESS (CUU) AND OTHER INFORMATION IS     *\n//*                      FORMATTED FOR J2SRB01 AND J2SRB01 IS CALLED*\n//*                      TO SCHEDULE A SRB TO CLOSE THE PRINTER.    *\n//*                      ENDING BANNER PAGES ARE NOT PRODUCED FOR   *\n//*                      VIRTUAL PRINTERS.                          *\n//*                                                                 *\n//*            J2XIT02  JES2 EXIT 2 TO MODIFY JOB CARD AND INSERT   *\n//*                     /*ROUTE CARD.                               *\n//*                      1) CHECK FOR STARTED TASKS AND INSERT AN   *\n//*                         ACCOUNT NUMBER IN THE STC JOB CARD.     *\n//*                      2) INSERT A /*ROUTE CARD IF THE JOB CAME   *\n//*                         FROM THE NJE/NJI LINK.                  *\n//*                                                                 *\n//*            J2XIT03  JES2 EXIT 3 TO VALIDATE ACCOUNT NUMBERS     *\n//*                      THIS ROUTINE LOADS J2TBL03 TO VALIDATE     *\n//*                      ACCOUNT NUMBERS.  SELECTED JOB NUMBERS (SEE*\n//*                      THE CODE) WILL CAUSE J2TBL03 TO BE         *\n//*                      REFRESHED (RE-LOADED) OR INACTIVATED.      *\n//*                                                                 *\n//*            J2XIT04  JES2 EXIT 3 TO MODIFY JCL                   *\n//*                      THIS ROUTINE COMMENTS OUT JOBCAT AND       *\n//*                      STEPCAT CARDS FOR SELECTED JOB CLASSES.  IT*\n//*                      ALSO ADDS SOME 'OUTPUT' CARDS TO ROUTE THE *\n//*                      JOBLOG ETC TO THE LOCAL NODE.              *\n//*                                                                 *\n//*            J2XIT09  JES2 EXIT 9 TO ENFORCE OUTPUT EXCESSION FOR *\n//*                     TEST JOBS                                   *\n//*                      THIS EXIT WILL ALLOW OUTPUT EXCESSION FOR  *\n//*                      PRODUCTION JOBS.  TEST JOBS WILL ABEND WHEN*\n//*                      OUTPUT EXCESSION OCCURS.                   *\n//*                                                                 *\n//*            QUITMVS  A LIST OF COMMANDS TO SHUT MVS DOWN BEFORE  *\n//*                     AN IPL                                      *\n//*                      PLACE THIS MEMBER IN SYS1.PARMLIB.  WHEN   *\n//*                      THE OPERATOR ISSUES THE COMMAND 'QUIT MVS' *\n//*                      THESE COMMANDS WILL BE PUT ON THE INTRDR BY*\n//*                      RMSG.                                      *\n//*                                                                 *\n//*            RCMD     ISSUE SELECTED JES2 COMMANDS                *\n//*                      WE DON'T WANT OUR PROGRAMMERS ISSUING JES2 *\n//*                      OR OPERATOR COMMANDS.  RCMD IS USED TO SEND*\n//*                      A REQUEST TO RMSG TO ISSUE SELECTED        *\n//*                      COMMANDS.                                  *\n//*                      RCMD IS PARM DRIVEN AND WILL ISSUE THE     *\n//*                      FOLLOWING COMMANDS.                        *\n//*                                                                 *\n//*             PARM          COMMAND                               *\n//*             SUPRA         $TI10,V        CHANGE INITIATOR CLASS *\n//*                           $SI10          START THE INITIATOR.   *\n//*             RLSE JOBNAME  $A'JOBNAME'    RELEASE A HELD JOB     *\n//*             REFRESH       F LLA,REFRESH  REFRESH THE LLA FOR XA *\n//*                                                                 *\n//*                        * THE PRODUCTION CONTROL GROUP LINKS ALL *\n//*                          PRODUCTION PROGRAMS INTO A LINKLIST    *\n//*                          DATASET.  RCMD WITH THE REFRESH PARM IS*\n//*                          THE LAST STEP OF THE LKED JOB.         *\n//*                        * IF THE F LLA,REFRESH COMMAND LOOKS A   *\n//*                          LITTLE STRANGE, IT IS BECAUSE WE HAVE  *\n//*                          MSX IN HOUSE AND ISSUE THE COMMAND ON  *\n//*                          ALL PROCESSORS.  REMOVE THE '\u00acALL' AND *\n//*                          THE COMMAND SHOULD WORK FINE.          *\n//*                                                                 *\n//*                      EXAMINE THE CODE FOR ADDITIONAL FEATURES.  *\n//*                                                                 *\n//*            RMSG     AUTOMATIC OPERATOR SUB-SYSTEM               *\n//*                      RMSG IS A SUB-SYTEM THAT MONITORS ALL      *\n//*                      CONSOLE TRAFFIC AND REACTS TO SELECTED     *\n//*                      MESSAGES AND COMMANDS.  THE SSVT FOR RMSG  *\n//*                      IS ALSO THE ANCHOR FOR J2SRB01 RMSG        *\n//*                      CONTAINS THE FOLLOWING FEATURES:  1) REPLY *\n//*                      TO SELECTED WTOR MESSAGES.                 *\n//*                         EX: REPLY 'NOHOLD' TO THE REPLY HOLD OR *\n//*                             NOHOLD MSG.                         *\n//*                      2) RESPOND TO SELECTED WTO MESSAGES -      *\n//*                         EX: WHEN RMSG SEES  THE 'VTAM ACTIVE'   *\n//*                             MSG IT WILL START TSO.              *\n//*                      3) ALLOW USER COMMANDS.                    *\n//*                         EX: THE COMMAND 'QUIT MVS' WILL ISSUE A *\n//*                             SERIES OF COMMANDS TO SHUT DOWN MVS *\n//*                             (SEE QUITMVS MEMBER).  JES2 WILL BE *\n//*                             STOPPED AND A Z EOD WILL BE ISSUED. *\n//*                                                                 *\n//*            RMSGCMD  PROC USED BY RMSG TO WRITE COMMANDS TO THE  *\n//*                     INTRDR                                      *\n//*                      PLACE THIS MEMBER IN A PROCLIB             *\n//*                                                                 *\n//*            RMSGLOAD INITIALIZE RMSG AND LOAD J2SRB01            *\n//*                     THIS ROUTINE INITALIZES THE RMSG SUB-SYSTEM *\n//*                     AND LOADS THE J2SRB01 ROUTINE.  IT ALSO     *\n//*                     READS THE CMDRMSG MEMBER OF SYS1.PARMLIB AND*\n//*                     PUTS THE COMMANDS ON THE INTRDR.            *\n//*                                                                 *\n//*            RMSGSUB  PROC TO RUN RMSGLOAD AND INITALIZE RMSG     *\n//*                     SUB-SYSTEM                                  *\n//*                      PLACE THIS MEMBER IN A PROCLIB             *\n//*                      POINT TO THE LINKLIB THAT CONTAINS BOTH    *\n//*                      RMSG AND J2SRB01.                          *\n//*                      TO START RMSG ENTER THE COMMAND 'S RMSGSUB'*\n//*                       WE PUT THIS COMMAND IN CMD00.             *\n//*                      TO REFRESH RMSG AND J2SRB01 ENTER THE      *\n//*                      COMMAND:                                   *\n//*                      'S RMSGSUB,OPTION=FORCE'.                  *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$DOC": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "THIS PDS CONTAINS THE RMSG SUB-SYSTEM AND SOME JES2 EXITS USED AT\nALLERGAN INC.  AS WITH ALL PUBLIC DOMAIN PROGRAMS, USE THEM AT YOU\nOWN RISK.\n\nTHE RMSG SUB-SYSTEM IS AN 'AUTOMATIC OPERATOR' SYSTEM THAT MONITORS\nAND REACTS TO SELECTED CONSOLE TRAFFIC AND USER WRITTEN COMMANDS.\n\nTHE RMSG SUB-SYSTEM RUNS ON MVS/SP AND MVS/XA WITHOUT ANY MODIFICATION.\nTHE J2SRB01 ROUTINE RUNS ON MVS/SP AND MVS/XA WITHOUT ANY MODIFICATION.\n\n          --------------------- CAUTION -------------------------\n          |  DO NOT ACTIVATE J2XIT01 ON A NATIVE MVS SYSTEM.    |\n          |  J2XIT01 INVOKES A SRB THAT ISSUES A DIAGNOSE       |\n          |  INSTRUCTION.  I LIKE MY JOB, AND THEREFORE HAVE    |\n          |  NOT TRIED TO ISSUE THE DIAGNOSE COMMAND ON A       |\n          |  NATIVE MVS SYSTEM.                                 |\n          -------------------------------------------------------\n\nQUESTIONS? COMMENTS?  CONTACT PAUL BANKS\n                              (714) 752-4612.\n                              ALLERGAN INC.\n                              2525 DUPONT DRIVE\n                              IRVINE, CA. 92715\n\n-MEMBER- ------------DESCRIPTION---------------------------------\nCMDRMSG  SAMPLE MVS STARTUP COMMANDS ISSUED BY RMSGLOAD\n          PLACE THIS MEMBER IN SYS1.PARMLIB.\n          THIS IS A LIST OF COMMANDS THAT ARE ISSUED BY RMSGLOAD\n          AFTER RMSG IS INITALIZED.  SEE QUITMVS FOR SHUTDOWN COMMANDS\n          THE PROC RMSGLOAD REFERS TO THIS MEMBER\n\nCOMEIN   ENTRY MACRO FOR SOME ROUTINES\n          PLACE THIS MEMBER IN YOUR USER MACLIB\n\nGETOUT   EXIT MACRO FOR SOME ROUTINES\n          PLACE THIS MEMBER IN YOUR USER MACLIB\n\nIEFSSN00 SAMPLE SUB-SYSTEM NAME TABLE\n          ADD AN ENTRY FOR \"RMSG\" TO YOUR SUB-SYSTEM NAME TABLE IN\n          SYS1.PARMLIB.\n\nJES2PARM SAMPLE JES2 PARMS\n          THESE JES2 PARMS ACTIVATE ALL OF OUR JES2 EXITS AND\n          STARTS A NJE/NJI LINK BETWEEN MVS AND VM.\n          BEWARE OF THE VIRTUAL PRINTER NUMBERS. THEY ARE CRITICAL\n          BEWARE OF THE NJE NODE NAMES.\n\nJ2SRB01  SRB TO CLOSE VIRTUAL PRINTERS\n          THIS SRB ISSUES A DIAGNOSE 8 TO CLOSE VIRTUAL PRINTERS.\n          IT IS LOADED BY RMSGLOAD AND ACTIVATED BY J2XIT01.\n          THE LOAD MODULE MUST RESIDE IN THE SAME LINKLIB AS RMSG.\n          SEE THE //LOADLIB DD IN THE RMSGSUB PROC.\n          THE SSVT FOR RMSG IS ALSO THE ANCHOR FOR J2SRB01\n\nJ2TBL03  ACCOUNT NUMBER TABLE FOR J2XIT03\n          ACCOUNT NUMBER VALIDATION ROUTINE FOR BOTH MVS AND CMS.\n          THIS ROUTINE IS LOADED AND CALLED BY J2XIT03.\n          THIS ROUTINE, WHEN ASSEMBLED UNDER CMS, CAN BE USED TO\n          VALIDATE ACCOUNT NUMBERS.\n\nJ2XIT01  JES2 EXIT 1 TO CLOSE VIRTURAL PRINTERS\n          THIS ROUTINE KNOWS, BY PRINTER NUMBER, WHICH PRINTERS ARE\n          VIRTUAL PRINTERS.  NO ACTION IS TAKEN FOR REAL PRINTERS.\n          IF THE ENTRY IS FOR A START BANNER PAGE, A 1 LINE\n          BANNER PAGE IS CREATED.\n          IF THE ENTRY IS FOR A ENDING BANNER PAGE, THEN THE PRINTER\n          ADDRESS (CUU) AND OTHER INFORMATION IS FORMATTED FOR\n          J2SRB01 AND J2SRB01 IS CALLED TO SCHEDULE A SRB TO CLOSE\n          THE PRINTER.  ENDING BANNER PAGES ARE NOT PRODUCED FOR\n          VIRTUAL PRINTERS.\n\nJ2XIT02  JES2 EXIT 2 TO MODIFY JOB CARD AND INSERT /*ROUTE CARD.\n          1) CHECK FOR STARTED TASKS AND INSERT AN ACCOUNT\n             NUMBER IN THE STC JOB CARD.\n          2) INSERT A /*ROUTE CARD IF THE JOB CAME FROM THE NJE/NJI\n             LINK.\n\nJ2XIT03  JES2 EXIT 3 TO VALIDATE ACCOUNT NUMBERS\n          THIS ROUTINE LOADS J2TBL03 TO VALIDATE ACCOUNT NUMBERS.\n          SELECTED JOB NUMBERS (SEE THE CODE) WILL CAUSE J2TBL03 TO\n          BE REFRESHED (RE-LOADED) OR INACTIVATED.\n\nJ2XIT04  JES2 EXIT 3 TO MODIFY JCL\n          THIS ROUTINE COMMENTS OUT JOBCAT AND STEPCAT CARDS FOR\n          SELECTED JOB CLASSES.  IT ALSO ADDS SOME 'OUTPUT' CARDS TO\n          ROUTE THE JOBLOG ETC TO THE LOCAL NODE.\n\nJ2XIT09  JES2 EXIT 9 TO ENFORCE OUTPUT EXCESSION FOR TEST JOBS\n          THIS EXIT WILL ALLOW OUTPUT EXCESSION FOR PRODUCTION JOBS.\n          TEST JOBS WILL ABEND WHEN OUTPUT EXCESSION OCCURS.\n\nQUITMVS  A LIST OF COMMANDS TO SHUT MVS DOWN BEFORE AN IPL\n          PLACE THIS MEMBER IN SYS1.PARMLIB.\n          WHEN THE OPERATOR ISSUES THE COMMAND 'QUIT MVS' THESE\n          COMMANDS WILL BE PUT ON THE INTRDR BY RMSG.\n\nRCMD     ISSUE SELECTED JES2 COMMANDS\n          WE DON'T WANT OUR PROGRAMMERS ISSUING JES2 OR OPERATOR\n          COMMANDS.  RCMD IS USED TO SEND A REQUEST TO RMSG TO\n          ISSUE SELECTED COMMANDS.\n          RCMD IS PARM DRIVEN AND WILL ISSUE THE FOLLOWING COMMANDS.\n           PARM            COMMAND\n           SUPRA           $TI10,V        CHANGE INITIATOR CLASS\n                           $SI10          START THE INITIATOR.\n           RLSE JOBNAME    $A'JOBNAME'    RELEASE A HELD JOB\n           REFRESH         F LLA,REFRESH  REFRESH THE LLA FOR XA\n            * THE PRODUCTION CONTROL GROUP LINKS ALL PRODUCTION\n              PROGRAMS INTO A LINKLIST DATASET.  RCMD WITH THE\n              REFRESH PARM IS THE LAST STEP OF THE LKED JOB.\n            * IF THE F LLA,REFRESH COMMAND LOOKS A LITTLE STRANGE, IT\n              IS BECAUSE WE HAVE MSX IN HOUSE AND ISSUE THE COMMAND ON\n              ALL PROCESSORS.  REMOVE THE '\u00acALL' AND THE COMMAND\n              SHOULD WORK FINE.\n\n          EXAMINE THE CODE FOR ADDITIONAL FEATURES.\n\nRMSG     AUTOMATIC OPERATOR SUB-SYSTEM\n          ---------------  CAUTION ------------------------------\n          |THIS ROUTINE IS TAILORED FOR THE ALLERGAN INC.       |\n          |COMPUTER SYSTEMS.  SEE THE COMMENTS IN THE PROGRAM   |\n          |FOR MORE INFORMATION.                                |\n          -------------------------------------------------------\n          RMSG IS A SUB-SYTEM THAT MONITORS ALL CONSOLE TRAFFIC AND\n          REACTS TO SELECTED MESSAGES AND COMMANDS.\n\n          THE SSVT FOR RMSG IS ALSO THE ANCHOR FOR J2SRB01\n          RMSG CONTAINS THE FOLLOWING FEATURES:\n          1) REPLY TO SELECTED WTOR MESSAGES.\n             EX: REPLY 'NOHOLD' TO THE REPLY HOLD OR NOHOLD MSG.\n          2) RESPOND TO SELECTED WTO MESSAGES -\n             EX: WHEN RMSG SEES  THE 'VTAM ACTIVE' MSG IT WILL\n                 START TSO.\n          3) ALLOW USER COMMANDS.\n             EX: THE COMMAND 'QUIT MVS' WILL ISSUE A SERIES OF\n                 COMMANDS TO SHUT DOWN MVS (SEE QUITMVS MEMBER).\n                 JES2 WILL BE STOPPED AND A Z EOD WILL BE ISSUED.\n\nRMSGCMD  PROC USED BY RMSG TO WRITE COMMANDS TO THE INTRDR\n          PLACE THIS MEMBER IN A PROCLIB\n\nRMSGLOAD INITIALIZE RMSG AND LOAD J2SRB01\n         THIS ROUTINE INITALIZES THE RMSG SUB-SYSTEM AND LOADS THE\n         J2SRB01 ROUTINE.  IT ALSO READS THE CMDRMSG MEMBER OF\n         SYS1.PARMLIB AND PUTS THE COMMANDS ON THE INTRDR.\n\nRMSGSUB  PROC TO RUN RMSGLOAD AND INITALIZE RMSG SUB-SYSTEM\n          PLACE THIS MEMBER IN A PROCLIB\n          BEWARE OF THE LOADLIB DD CARD.  IT MUST POINT TO THE LINKLIB\n          THAT CONTAINS BOTH RMSG AND J2SRB01.\n          TO START RMSG ENTER THE COMMAND 'S RMSGSUB'\n           WE PUT THIS COMMAND IN CMD00.\n          TO REFRESH RMSG AND J2SRB01 ENTER THE COMMAND\n          'S RMSGSUB,OPTION=FORCE'.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CMDRMSG": {"ttr": 524, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*  ENTER STOP COMMANDS IN THE MEMBER 'QUITMVS'\n* 03-29-88  PLB  UPDATED FOR MVSXA\n/*$VS,'S RMF.RMF,,,MEMBER(00) '\n/*$VS,'$SLNE3'\n/*$VS,'S TMSINIT'\n/*$VS,'S STARTAID'\n/*$VS,'S OMEGAMON'\n/*$VS,'S EPILOGV'\n/*$VS,'S SUPRATSS'\n/*$VS,'S TISSUB'\n/*$VS,'S TISTSUB'\n/*$VS,'S MSX'\n/*$VS,'S DMSAR,DMSAR=INSTALL '\n/*$VS,'S NET'\n/*$VS,'S SYSLOGV.SYSLOGV'\n/*$VS,'$SPRT1,PRT2,PRT4,PRT5,PRT6,PRT7'\n*   UNUSED PARAMETERS\n**$VS,'S AUTOCMND'\n**$VS,'S SCHEDRUN'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMEIN": {"ttr": 526, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&NAME    COMEIN &BASE=3,&SAVE=MYSAVE,&REGS=R,&RC=CC,&LINK=14,&BASE2=,  X\n               &BASE3=\n         GBLC  &COMEIN\n&COMEIN  SETC  '&RC'\n&NAME    START 0\n         STM   &REGS.14,&REGS.12,12(&REGS.13)  SAVE RETURN REGS\n         AIF   ('&BASE3' EQ '').TWOBASE\n         USING &NAME,&REGS&BASE,&REGS&BASE2,&REGS&BASE3\n         LR    &REGS&BASE,&REGS.15   GET THE LOAD POINT\n         LA    &REGS&BASE2,4095(&REGS&BASE) PRIME BASE NUMBER 2\n         LA    &REGS&BASE2,1(&REGS&BASE2)  NOW NUMBER 2 IS SET\n         LA    &REGS&BASE3,4095(&REGS&BASE2) PRIME BASE NUMBER 3\n         LA    &REGS&BASE3,1(&REGS&BASE3)  NOW NUMBER 3 IS SET\n         AGO   .BASESET\n.TWOBASE AIF   ('&BASE2' EQ '').ONEBASE\n         USING &NAME,&REGS&BASE,&REGS&BASE2  EST ADDRESSABILITY\n         LR    &REGS&BASE,&REGS.15   GET THE LOAD POINT\n         LA    &REGS&BASE2,4095(&REGS&BASE) PRIME BASE NUMBER 2\n         LA    &REGS&BASE2,1(&REGS&BASE2)  NOW NUMBER 2 IS SET\n         AGO   .BASESET\n.ONEBASE USING &NAME,&REGS&BASE    ESTABLISH ADDRESSABILITY\n         LR    &REGS&BASE,&REGS.15\n.BASESET LR    &REGS.14,&REGS.13   CHAIN SAVE AREAS\n         BAL   &REGS.13,&SAVE.+92  SET 13 TO CURRENT SAVE AREA\n&SAVE    DC    18F'0'              CURRENT SAVE AREA\n&RC      DC    F'0'                RETURN CODE HOLD AREA\n         L     &REGS.13,&SAVE.+4    CODE TO RETURN TO CALLING PGM\n         MVC   16(4,&REGS.13),&RC   SET UP RETURN CODE\n         LM    &REGS.14,&REGS.12,12(&REGS.13)\n         BR    &REGS.14             RETURN\n         ST    &REGS.14,&SAVE.+4   ABOVE BAL COMES HERE\n         ST    &REGS.13,8(&REGS.14)\n         SPACE 1\n&REGS.0  EQU   0                  REG EQUATES\n&REGS.1  EQU   1\n&REGS.2  EQU   2\n&REGS.3  EQU   3\n&REGS.4  EQU   4\n&REGS.5  EQU   5\n&REGS.6  EQU   6\n&REGS.7  EQU   7\n&REGS.8  EQU   8\n&REGS.9  EQU   9\n&REGS.10 EQU   10\n&REGS.11 EQU   11\n&REGS.12 EQU   12\n&REGS.13 EQU   13\n&REGS.14 EQU   14\n&REGS.15 EQU   15\n&REGS.A  EQU   10\n&REGS.B  EQU   11\n&REGS.C  EQU   12\n&REGS.D  EQU   13\n&REGS.E  EQU   14\n&REGS.F  EQU   15\n&REGS.LINK EQU &LINK\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GETOUT": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&NAME    GETOUT\n         GBLC  &COMEIN\n&NAME    B     &COMEIN.+4          BRANCH TO EXIT CODE IN COMEIN MACRO\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEFSSN00": {"ttr": 530, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*  SAMPLE SUB-SYSTEM NAME TABLE */\nJES2,,,PRIMARY\nRMSG          <-----   REQUIRED FOR RMSG SUB-SYSTEM\nOCCF\nTSUP\nTIST\nTISS\nPSUP\nJARS,CAIJA950\nUCC1,U01SSNIT,'X=210,Y=212'\nUCCM,UCCSSNIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JES2PARM": {"ttr": 532, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*********************************************************************/\n/* M A I N T E N A N C E   I N F O R M A T I O N                     */\n/*-------------------------------------------------------------------*/\n/*  10/13/87  PLB  - CONVERT FOR NATIVE MVS                          */\n/*  11/09/87  JKB  - ADDED INIT13 FOR PRDCICS3 CLASS W               */\n/*                 - CHANGE MASDEF TO SHARED=CHECK                   */\n/*                 - CHANGE MASDEF TO SYNCH TOLERANCE TO 3 MINUTES   */\n/*                 - DISABLE EXIT01 (EXIT FOR MVS/VM ONLY)           */\n/*                 - DRAIN ALL READERS                               */\n/*  10/20/87  PLB  - INCREASE TGBENUM FROM 3 TO 60                   */\n/*  01/22/88  PLB  - CHANGE PRINTERS 8 & 10 FOR XEROX                */\n/*  02/19/88  PLB  - CHANGE FOX XA                                   */\n/*  03/25/88  BETO - ADDED RMT1 & RMT2 DEFS (ALSO, LINES 5-10 SNA)   */\n/*                 - ADDED DESTID DEFS FOR RMT1 & RMT2               */\n/*  04/01/88  PLB  - CHANGED ALL INTIS TO CLASS X FOR XA TESTING     */\n/*  04/04/88  PLB  - CHANGED \"STCCLASS\" TO PRODUCE JES2 JOBLOG       */\n/*********************************************************************/\n/* SYNTAX FOR SP1.3.6 : FREE-FORM STMTS (COLS 1-71); COL 72 \"MAY\" BE */\n/*     USED FOR A CONTINUE (NOT NEEDED - ONLY TRAILING COMMA);       */\n/*     COMMENTS NEED DELIMITERS(SAME AS THIS ONE); STMTS MUST HAVE AT*/\n/*     LEAST 1 PARM CODED ON THE STMT NAME LINE.                     */\n/*********************************************************************/\n/*  NOTE: CHANGING ANY OF THE FOLLOWING MEANS C O L D S T A R T !!!  */\n/*                                                                   */\n/*  CKPTDEF   DSNAME=                                                */\n/*  JOBDEF    JOBNUM=                                                */\n/*  NJEDEF    OWNNODE=                                               */\n/*  OUTDEF    JOENUM=                                                */\n/*  SPOOLDEF  BUFSIZE=, DSNAME=, RECINCR=, SPOOLNUM=, TGNUM=,        */\n/*            TRKCELL=, VOLUME=                                      */\n/*  TPDEF     RMTNUM=                                                */\n/*                                                                   */\n/*********************************************************************/\n                             /**** SNA/NJE APPLICATIONS **************/\nAPPL     APPLID=ALRGMVS1,    /* APPLID                             WS*/\n         COMPACT=0,          /* COMPACTION TABLE NUMBER            WS*/\n         NODE=0001,          /* NJE NODE NUMBER                    WS*/\n         REST=0              /* SESSION RESISTANCE                 WS*/\n                             /*                                      */\n                             /**** LOCAL BUFFERS *********************/\nBUFDEF   BUFNUM=120,         /* INCREASED FOR SAFETY    &NUMBUF    WS*/\n         BUFWARN=80          /* WARNING THRESHOLD %     &NUMBUF    OC*/\n                             /*                                      */\n                             /**** CHECKPOINT PARAMETERS *************/\nCKPTDEF  DSNAME=JES2.HASPCKPT,        /*  DSN FOR CKPT  &DSNPRFX   CS*/\n         PRIMARY=JES200      /* PRIMARY CKPT VOLUME     &CHKPT     WS*/\n                             /* NO DUPLEXING            &CHKPT2      */\n                             /**** CONSOLE PARAMETERS ****************/\nCONDEF   AUTOCMD=50,         /* NUMBER OF AUTO CMDS     &NUMACE    WS*/\n         BSPACE=7C,          /* BACKSPACE CHARACTER     &BSPACE    WS*/\n         BUFNUM=500,         /* NUMBER OF CMB'S         &NUMCMBS(#,WS*/\n         BUFWARN=80,         /* WARNING THRESHOLD %     &NUMCMBS(,%OC*/\n         CONCHAR=$,          /* CONSOLE CMD CHARACTER   &CCOMCHR   WS*/\n         MASMSG=200,         /* NO. OF MAS MSGS (DEFAULT)&MAXMSGQ  OC*/\n         MSGID=YES,          /* PREFIX MSG W/HASP ID    &MSGID     OC*/\n         RDRCHAR=$           /* READER CMD CHARACTER    &RCOMCHR   OC*/\n                             /*                                      */\n                             /**** PRE-DEFINED NJE CONNECTIONS *******/\n                             /**    MVS/JES2(NODE=1)     NODE=2(VM) **/\nCONNECT  NODEA=1,MEMBA=1,NODEB=2,MEMBB=1  /* SID(1)  TO  SID(1)  WS*/\nCONNECT  NODEA=1,MEMBA=2,NODEB=2,MEMBB=1  /* SID(2)  TO  SID(1)  WS*/\nCONNECT  NODEA=1,MEMBA=3,NODEB=2,MEMBB=1  /* SID(3)  TO  SID(1)  WS*/\nCONNECT  NODEA=1,MEMBA=4,NODEB=2,MEMBB=1  /* SID(4)  TO  SID(1)  WS*/\nCONNECT  NODEA=1,MEMBA=5,NODEB=2,MEMBB=1  /* SID(5)  TO  SID(1)  WS*/\nCONNECT  NODEA=1,MEMBA=6,NODEB=2,MEMBB=1  /* SID(6)  TO  SID(1)  WS*/\nCONNECT  NODEA=1,MEMBA=7,NODEB=2,MEMBB=1  /* SID(7)  TO  SID(1)  WS*/\n                             /*                                      */\n                             /**** DEBUG OPTION **********************/\nDEBUG    =NO                 /* DON'T USE UNLESS NEC.   &DEBUG     OC*/\n                             /*                                      */\n                             /**** DESTID MNEMONICS FOR RMTS  ********/\nDESTID   NAME=GRENVILE,DEST=R1       /* DESTID FOR GREENVILLE,TN   WS*/\nDESTID   NAME=SPARKS,DEST=R2         /* DESTID FOR SPARKS,NEV      WS*/\n                             /*                                      */\n                             /**** DEFAULT ESTIMATED SYSOUT BYTES/JOB*/\nESTBYTE  NUM=99999,          /* 99999000 BYTES FOR 1ST MESSAGE     OC*/\n         INT=99999,          /*  THEN AT 99999000 BYTE INTERVALS   OC*/\n         OPT=0               /* ALLOW JOBS TO CONTINUE             OC*/\n                             /*                                      */\n                             /**** DEFAULT ESTIMATED EXECUTION TIME **/\nESTIME   NUM=9999,           /* NO MINS   FOR 1ST MESSAGE          OC*/\n         INT=99,             /*  THEN AT 99 MINS  INTERVALS        OC*/\n         OPT=NO              /* NO HASP084 MESSAGE                 OC*/\n                             /*                                      */\n                             /**** DEFAULT ESTIMATED SYSOUT LINES/JOB*/\nESTLNCT  NUM=30,             /*30000 LINES FOR 1ST MESSAGE         OC*/\n         INT=15000,          /*  THEN AT15000 LINE INTERVALS       OC*/\n         OPT=0               /* ALLOW JOBS TO CONTINUE             OC*/\n                             /*                                      */\n                             /**** DEFAULT ESTIMATED SYSOUT PAGES/JOB*/\nESTPAGE  NUM=500,            /*500 PAGES FOR 1ST MESSAGE           OC*/\n         INT=250,            /*  THEN AT250 PAGE INTERVALS         OC*/\n         OPT=0               /* ALLOW JOBS TO CONTINUE             OC*/\n                             /*                                      */\n                             /**** DEFAULT ESTIMATED SYSOUT CARDS/JOB*/\nESTPUN   NUM=9999999,        /* 9999999   FOR 1ST MESSAGE          OC*/\n         INT=9999999,        /*  THEN AT 9999999   INTERVALS       OC*/\n         OPT=0               /* ALLOW JOBS TO CONTINUE             OC*/\n                             /*                                      */\n                             /**** SUBSYSTEM SUPPORT MODULE **********/\nHASPSSSM=HASOJSSM           /* JES2 SSI LOAD MODULE               WS*/\n                             /*                                      */\n                             /**** INITIATORS ************************/\nINITDEF  PARTNUM=20          /* NUMBER OF INITIATORS    &MAXPART   WS*/\n                             /*                                      */\n                             /**** LOGICAL INITIATORS ****************/\nINIT1    NAME=1,START,CLASS=X\nINIT2    NAME=2,START,CLASS=X\nINIT3    NAME=3,START,CLASS=X\nINIT4    NAME=4,START,CLASS=X\nINIT5    NAME=5,START,CLASS=X\nINIT6    NAME=6,DRAIN,CLASS=X\nINIT7    NAME=7,DRAIN,CLASS=X\nINIT8    NAME=8,DRAIN,CLASS=X\nINIT9    NAME=9,DRAIN,CLASS=X\nINIT10   NAME=10,DRAIN,CLASS=X\nINIT11   NAME=11,DRAIN,CLASS=X\nINIT12   NAME=12,DRAIN,CLASS=X\nINIT13   NAME=13,DRAIN,CLASS=X\nINIT14   NAME=14,DRAIN,CLASS=X\nINIT15   NAME=15,DRAIN,CLASS=X\nINIT16   NAME=16,DRAIN,CLASS=X\nINIT17   NAME=17,DRAIN,CLASS=X\nINIT18   NAME=18,DRAIN,CLASS=X\nINIT19   NAME=19,DRAIN,CLASS=X\nINIT20   NAME=20,DRAIN,CLASS=X\n                             /**** INTERNAL READERS ******************/\nINTRDR   AUTH=0,             /* ALLOW SYSTEM,DEVICE & JOB COMMANDS OC*/\n         CLASS=A,            /* DEFAULT JOB CLASS                  WS*/\n         HOLD=NO,            /* DON'T HOLD JOBS READ               OC*/\n         PRTYINC=0,          /* DON'T PRTY AGE JOBS                WS*/\n         PRTYLIM=15,         /* LIMIT JOB PRTY TO 15               WS*/\n         RDINUM=5            /* NUMBER OF INTERNAL RDRS   &NUMINRS WS*/\n                             /*                                      */\n                             /**** JOB CLASS DEFINIT'NS &RDROPSU,&X **/\n                             /*    ON CONVPARM = BPPMMMMSSCRLAAAAE WS*/\nJOBCLASS(A) ACCT=NO,         /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0001,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=ALL,           /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\nJOBCLASS(B)   ACCT=NO,       /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0180,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=INFO,          /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\nJOBCLASS(C-D) ACCT=NO,       /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0005,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=INFO,          /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\nJOBCLASS(E)   ACCT=NO,       /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0180,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=INFO,          /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\nJOBCLASS(F-G) ACCT=NO,       /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0005,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=INFO,          /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\nJOBCLASS(H) ACCT=NO,         /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(1439,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=INFO,          /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\nJOBCLASS(I-O) ACCT=NO,       /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0180,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=INFO,          /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\nJOBCLASS(P) ACCT=NO,         /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0360,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=INFO,          /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\nJOBCLASS(Q-Z) ACCT=NO,       /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0180,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=INFO,          /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\nJOBCLASS(0-1) ACCT=NO,       /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0180,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=INFO,          /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\n                             /*                                      */\nJOBCLASS(2)   ACCT=NO,       /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0360,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=EXECUTE,    /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=ALL,           /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\n                             /*                                      */\nJOBCLASS(3-9) ACCT=NO,       /* ACCT # NOT REQ'D B................ WS*/\n         PGMRNAME=NO,        /* PGMR NAME NOT RQ B................ WS*/\n         TIME=(0360,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=IGNORE,     /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=INFO,          /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         COPY=NO,            /* NOT TYPRUN=COPY         NOCOPY     WS*/\n         HOLD=NO,            /* NOT TYPRUN=HOLD         NOHOLD     WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         JOURNAL=NO,         /* JOURNAL THIS JOB CLASS  JOURNAL    WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         RESTART=NO,         /* NO REQUEUE (XEQ) ON IPL RESTART    WS*/\n         SCAN=NO,            /* NOT TYPRUN=SCAN         NOSCAN     WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         XBATCH=NO           /* NOT AN XBM JOB CLASS    NOXBATCH   WS*/\n                             /*                                      */\n                             /**** JOB CHARACTERISTICS  **************/\nJOBDEF   ACCTFLD=OPTIONAL,   /* ACCT'G FIELD OPTIONAL   &RJOBOPT   OC*/\n         JCLERR=YES,         /* NO TERM. JOB W/JCL ERR. &RJOBOPT   OC*/\n         JOBNUM=500,         /* JOB QUEUE SIZE          &MAXJOBS(1 CS*/\n         JOBWARN=95,         /* WARNING THRESHOLD %     &MAXJOBS(2 OC*/\n         PRTYHIGH=10,        /* UPPER LIMIT FOR AGING   &PRIHIGH   OC*/\n         PRTYJECL=NO,        /*PRIORITY JECL SUPPORTED  &PRIOOPT   OC*/\n         PRTYJOB=NO,         /* PRTY= ON JOB NOT SUP'D  &PRTYJOB   OC*/\n         PRTYLOW=0,          /* LOWER LIMIT FOR AGING   &PRILOW    OC*/\n         PRTYRATE=8,         /* PRTY AGING RATE X/DAY   &PRIRATE   OC*/\n         RANGE=(1,9999),     /* LOCAL JOB NUMBER RANGE  &JRANGE    OC*/\n         XBATCH=$$$$$        /* XBM JOB NAME PREFIX     &XBATCHN   WS*/\n                             /*                                      */\n                             /**** DEFAULT PRTY CALCULATIONS *********/\nJOBPRTY1 PRIORITY=9,         /* JOB PRTY=9 IF           &RPRI1     OC*/\n         TIME=2              /*  < 2 MIN. EXEC. TIME    &RPRT1     OC*/\n                             /*                                      */\nJOBPRTY2 PRIORITY=8,TIME=5   /* JOB PRTY=8 IF < 5 MIN.  &RPRI2,... OC*/\n                             /* ETC.                                 */\n                             /*                                      */\n                             /* EXIT LOAD MODS (CONTAIN ENTRY-POINT) */\n                             /* EXIT NUMBER - ENTRY-POINT ASSOCIATN  */\nLOAD=J2XIT01\nEXIT1    ROUTINE=J2XIT01E,ENABLE,TRACE=NO /* FOR MVS/VM ONLY  */\nLOAD=J2XIT02\nEXIT2    ROUTINE=J2XIT02E,ENABLE,TRACE=NO\nLOAD=J2XIT03\nEXIT3    ROUTINE=J2XIT03E,ENABLE,TRACE=NO\nLOAD=J2XIT04\nEXIT4    ROUTINE=J2XIT04E,ENABLE,TRACE=NO\nLOAD=J2XIT09\nEXIT9    ROUTINE=J2XIT09E,ENABLE,TRACE=NO\n                             /*                                      */\n                             /**** TP LINES FOR RJE/NJE **************/\nLINE1    UNIT=001,TRANSP,FDUPLEX,HISPEED,REST=100,NOADISC\nLINE2    UNIT=200,TRANSP,FDUPLEX,HISPEED,REST=100,NOADISC\nLINE3    UNIT=600,TRANSP,FDUPLEX,HISPEED,REST=100,NOADISC\nLINE4    UNIT=004,TRANSP,FDUPLEX\nLINE5    UNIT=SNA\n                             /*                                      */\nLOGON1   APPLID=ALRGMVS1     /**** IDENTIFY JES2 APPLIDS TO VTAM *****/\nLOGON2   APPLID=JES2         /*                                      */\n                             /*                                      */\n                             /**** MULTI-ACCESS SPOOL ****************/\n                             /* TIMES ARE IN 1/100 SEC. UNLESS SPEC'D*/\nMASDEF   DORMANCY=(100,      /* MINIMUM DORMANCY TIME   &MINDORM   OC*/\n                       500), /* MAXIMUM DORMANCY TIME   &MAXDORM   OC*/\n         HOLD=75,            /* MINIMUM HOLD TIME       &MINHOLD   OC*/\n         LOCKOUT=1000,       /* LOCK-OUT WARNING TIME   &WARNTIM   OC*/\n         SHARED=NOCHECK,     /* CHECK FOR MAS SYSTEMS   ---(NEW)   OC*/\n         SYNCTOL=180         /* SYNCH.TOLERANCE (SEC.)  &SYNCTOL   OC*/\n                             /*                                      */\n                             /**** NJE DEFINITIONS *******************/\nNJEDEF   DELAY=120,          /* MAX. MSG DELAY TIME     &MAXDELT   OC*/\n         JRNUM=1,            /* NUM. OF JOB RECEIVERS   &NUMNJR    WS*/\n         JTNUM=1,            /* NUM. OF JOB XMITTERS    &NUMNJT    WS*/\n         LINENUM=4,          /* NUM. OF LINES FOR NJE   &NETLNES   WS*/\n         NATNUM=45,          /* NUM. OF INTER-CONNECTS  &NUMNAT    WS*/\n         NODENUM=10,         /* MAX. NUMBER OF NODES    &NUMNODE   CS*/\n                             /*    NODENUM VALUE MAY BE INCREASED ON */\n                             /*    A CONFIGURATION WIDE WARM START   */\n         OWNNODE=1,          /* THIS NODE'S NUMBER      &OWNNODE   CS*/\n         PATH=1,             /* NUM. OF PATHS/ALT'NATE  &NUMPATH   WS*/\n         RESTMAX=792000,     /* MAX. RESISTANCE TOLER.  &MAXREST   WS*/\n         RESTNODE=100,       /* THIS NODE'S RESISTANCE  &NODREST   WS*/\n         RESTTOL=0,          /* ALT. RESISTANCE TOLER.  &NODETOL   WS*/\n         SRNUM=1,            /* NUM. OF SYSOUT RECVRS   &NUMNSR    WS*/\n         STNUM=1             /* NUM. OF SYSOUT XMTRS    &NUMNST    WS*/\n                             /*                                      */\n                             /**** NJE NODE DEFINITIONS **************/\nNODE0001 COMPACT=0,          /* DEFINE THIS MVS NODE (THIS JES2)   WS*/\n         NAME=ALRGMVS1,      /* NODE NAME (THIS IS PROD MVS)       WS*/\n         DEVAUTH,            /* DEVICE AUTHORITY AT THIS NODE      WS*/\n         JOBAUTH,            /* JOB AUTHORITY AT THIS NODE         WS*/\n         SYSAUTH,            /* SYSTEM AUTHORITY AT THIS NODE      WS*/\n         NETAUTH,            /*    NETWORK AUTHORITY AT THIS NODE  WS*/\n         REST=0,             /* NODAL RESISTANCE                   WS*/\n         SNA                 /*    SNA CAPABILITY                  WS*/\n                             /*                                      */\nNODE0002 COMPACT=0,          /* DEFINE THE \"RSCS\" NODE ON VM       WS*/\n         NAME=ALLERGAN,      /* (NAME OF PRODUCTION \"RSCS\" ON VM)  WS*/\n         NODEVATH,           /* DEVICE AUTHORITY AT THIS NODE      WS*/\n         NOJOBATH,           /* JOB AUTHORITY AT THIS NODE         WS*/\n         NOSYSATH,           /* SYSTEM AUTHORITY AT THIS NODE      WS*/\n         NETAUTH,            /*    NETWORK AUTHORITY AT THIS NODE  WS*/\n         REST=0,             /* NODAL RESISTANCE                   WS*/\n         BSC                 /* NO SNA CAPABILITY                  WS*/\n                             /*                                      */\nNODE0003 COMPACT=0,          /* DEFINE A \"TEST\" NODE ON VM         WS*/\n         NAME=RSCSTEST,      /* NODE NAME                          WS*/\n         NODEVATH,           /* DEVICE AUTHORITY AT THIS NODE      WS*/\n         NOJOBATH,           /* JOB AUTHORITY AT THIS NODE         WS*/\n         NOSYSATH,           /* SYSTEM AUTHORITY AT THIS NODE      WS*/\n         NETAUTH,            /*    NETWORK AUTHORITY AT THIS NODE  WS*/\n         REST=0,             /* NODAL RESISTANCE                   WS*/\n         SNA                 /*    SNA CAPABILITY                  WS*/\n                             /*                                      */\n                             /**** OFFLOAD DATA SET *** DMPN/LODN ****/\nOFFLOAD1 DSN=SYS4.JES2SPL.DUMP1\n                             /*                                      */\n                             /**** OUTPUT CLASS ATTRIBUTES $$A *******/\nOUTCLASS(A) BLNKTRNC=YES,    /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=NO,            /* NOT A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* STD OUTPUT              PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(B) BLNKTRNC=YES,    /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=NO,            /* NOT A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PUNCH,       /* STD PUNCH               PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(C) BLNKTRNC=YES,    /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=NO,            /* NOT A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* STD OUTPUT              PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(D)   BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=YES,           /*     A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* NOT USEDASS             PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(E) BLNKTRNC=YES,    /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=NO,            /* NOT A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* STD OUTPUT              PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(F)   BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=YES,           /*     A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* NOT USEDASS             PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(G-I) BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=NO,            /* NOT A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* SPECIAL                 PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(J-M) BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=NO,            /* NOT A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* SPECIAL                 PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(N-O) BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=YES,           /*     A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* NOT USEDASS             PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(P-S) BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=NO,            /* NOT A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* SPECIAL                 PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(T-V) BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=YES,           /*     A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* NOT USEDASS             PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(W-Y) BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=NO,            /* NOT A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* SPECIAL                 PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(Z)   BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=NO,            /* NOT A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=DUMMY,       /* NO OUTPUT               PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(0)   BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=YES,           /*       HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* EXPRESS TEST CLASS      PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\nOUTCLASS(1-9) BLNKTRNC=YES,  /* TRUNCATE TRAILING BLANKS   (NEW)   WS*/\n         HOLD=NO,            /* NOT A HELD CLASS        NOHOLD     WS*/\n         OUTPUT=PRINT,       /* NOT USEDASS             PRINT      WS*/\n         TRKCELL=NO,         /* TRACK-CELL THIS CLASS   NOTRKCEL   WS*/\n         MSGHOLD=NO          /* (MSGCLASS NEED NOT MATCH)  (NEW)   WS*/\n                             /*                                      */\n                             /**** OUTPUT CHARACTERISTICS ************/\nOUTDEF   COPIES=255,         /* MAX. # OF COPIES ALLWD  &JCOPYLM   OC*/\n         DMNDSET=NO,         /* NO DEMAND SETUP         &DMNDSET   WS*/\n         JOENUM=1000,        /* MAX. # OF JOES          &NUMJOES(#,CS*/\n         JOEWARN=90,         /* WARNING THRESHOLD %     &NUMJOES(,%OC*/\n         PRTYHIGH=255,       /* CEILING FOR PRTY AGING  ---        OC*/\n         PRTYLOW=0,          /* FLOOR FOR PRTY AGING    ---        OC*/\n         PRTYOUT=NO,         /* NO PRTY= ON // OUTPUT   &PRTYOUT   OC*/\n         STDFORM=STD,        /* DEFAULT FORMS ID        &STDFORM   WS*/\n         USERSET=NO          /* NO USER DEMAND-SETUP    &USERSET   WS*/\n                             /*                                      */\n                             /**** DEFAULT OUTPUT PRIORITY ***********/\n                             /* BASED ON RECORDS (LINE MODE)         */\n                             /*         OR PAGES (PAGE MODE)         */\nOUTPRTY1 PRIORITY=144,       /* OUTPUT PRTY IS 144 IF   &XPRI1     OC*/\n         RECORD=2000,        /*  < 2000 RECORDS (LINE)  &XLIN1     OC*/\n         PAGE=50             /*  OR < 50 PAGES (PAGE)   &XPAG1     OC*/\nOUTPRTY2 PRIORITY=128,       /* OUTPUT PRTY IS 128 IF   &XPRI2     OC*/\n         RECORD=5000,        /*  < 5000 RECORDS (LINE)  &XLIN2     OC*/\n         PAGE=100            /*  OR < 100 PAGES (PAGE)  &XPAG2     OC*/\n                             /* ETC.                               OC*/\n                             /*                                      */\n                             /**** JES2 PROCESSOR NUMBERS ************/\nPCEDEF   CNVTNUM=2,          /* 2 CONVERTER PCES        ---        WS*/\n         PSONUM=2,           /* 2 PSO PCES              ---        WS*/\n         PURGENUM=2          /* 2 PURGE PCES            ---        WS*/\n                             /*                                      */\n                             /**** PRINTING CHARACTERISTICS **********/\nPRINTDEF DBLBUFR=NO,         /* DOUBLE BUFFER LCL PRTS  &PRTBOPT   WS*/\n         FCB=6,              /* INITIAL FCB LOADED      &PRTFCB    WS*/\n         LINECT=0,           /* AUTO-PAGE OVERFLOW SUPP &LINECT    OC*/\n         NIUCS=GF10,         /* 3800 CHAR. SET LOADED   &NIPUCS    WS*/\n         RDBLBUFR=NO,        /* SINGLE BUFFER RMT PRTS  &RPRBOPT   WS*/\n         RSEPLINE=6,         /*  6 LINES ON RMT SEPRTR  &TPIDCT    OC*/\n         SEPLINE=122,        /* 60 LINES ON LCL SEPRTR  &PRIDCT    OC*/\n         TRANS=YES,          /* PN-XLATE FOR 1403/RM.PR &PRTRANS   WS*/\n         UCS=0               /* BYPASS UCS-LOADING      &PRTUCS    WS*/\n                             /*                                      */\n                             /**** PRINTER PARAMETERS ****************/\n                             /* THE PRINTERS ARE SET TO 'DRAIN' HERE */\n                             /* AND ARE ACTUALLY STARTED BY 'RMSG'   */\n                             /* VIA THE 'CMDRMSG' PARMS.             */\n                             /**** PRINTER PARAMETERS ****************/\n/*********************************************************************/\n/*    BEWARE OF THE PRINTER NUMBERS.  THEY ARE KNOWN BY THE          */\n/*     J2XIT01 ROUTINE.                                              */\n/*********************************************************************/\nPRINTER1 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,UNIT=441,CLASS=A,DRAIN\nPRINTER2 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,UNIT=444,CLASS=RQ,DRAIN\nPRINTER3 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,UNIT=445,CLASS=P,DRAIN\nPRINTER4 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,UNIT=446,CLASS=W,DRAIN\nPRINTER5 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,UNIT=443,CLASS=X,DRAIN\nPRINTER6 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,UNIT=447,CLASS=4,DRAIN\nPRINTER7 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,UNIT=448,CLASS=G,DRAIN\n/*********************************************************************/\n/* PRINTERS 8 THRU 10 ARE REAL PRINTERS.  THEIR OUTPUT CAN NOT BE ****/\n/* SPOOLED TO VM * * *AND* * * IS CONTROLLED BY J2XIT01.  IF ANY  ****/\n/* MORE R*E*A*L PRINTERS ARE ADDED, THIS EXIT *MUST* BE CHANGED ! ****/\n/*********************************************************************/\nPRINTER8 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,DRAIN,UNIT=72E,CLASS=A\nPRINTER9 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,DRAIN,UNIT=73F,CLASS=A\nPRINTER10 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,DRAIN,UNIT=72F,CLASS=A\nPRINTER11 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,DRAIN,UNIT=70A,CLASS=A\nPRINTER12 WS=(W,R,Q,PMD,LIM/F,T,C,P),DSPLTCEL,DRAIN,UNIT=71E,CLASS=A\n                             /**** PUNCH PARAMETERS ******************/\nPUNCHDEF DBLBUFR=NO,         /* SINGLE BUFFER LCL PUNS  &PUNBOPT   WS*/\n         RDBLBUFR=NO         /* SINGLE BUFFER RMT PUNS  &RPUBOPT   WS*/\n                             /*                                      */\n                             /**** PUNCH   PARAMETERS ****************/\n                             /* MORE WS PARMS(JOBNAME,RANGE,VOLUME)OC*/\nPUNCH1   WS=(W,R,Q,PMD,LIM/F,P),DRAIN\nPUNCH2   WS=(W,R,Q,PMD,LIM/F,P),DRAIN\n                             /*                                      */\n                             /**** LOCAL READERS *********************/\nREADER1  UNIT=44A,DRAIN,CLASS=A /*   ADDRESS OF DEVICE             WS*/\nREADER2  UNIT=44B,DRAIN,CLASS=A /*   ADDRESS OF DEVICE             WS*/\nREADER3  UNIT=44C,DRAIN,CLASS=A /*   ADDRESS OF DEVICE             WS*/\n                             /**** RECOVERY OPTIONS ******************/\nRECVOPTS TYPE=ALL,           /* CHECK ALL ERRORS         --- (NEW) OC*/\n         COUNT=2,            /* 2 OCCURRENCES OF ANY ERROR         OC*/\n         INTERVAL=24         /* - PER 24 HOURS                     OC*/\n                             /*                                      */\n                             /**** SMF DEFINITIONS *******************/\nSMFDEF   BUFNUM=10,          /* NUMBER OF SMF BUFFERS   &SMFBUF(#, WS*/\n         BUFWARN=80          /* WARNING THRESHOLD %     &SMFBUF(,% OC*/\n                             /*                                      */\n                             /**** SPOOL DEFINITIONS *****************/\nSPOOLDEF BUFSIZE=1944,       /* MAXIMUM BUFFER SIZE     &BUFSIZE   CS*/\n         DSNAME=JES2.HASPACE,   /* SPOOL DSN            &DSNPRFX   CS*/\n         FENCE=NO,           /* DON'T FORCE TO MIN.VOL. &FENCE     OC*/\n         RECINCR=2,          /* SKIP EVERY OTHER RECORD &RECINCR   CS*/\n         SPOOLNUM=32,        /* MAX. NUM. SPOOL VOLS    ---        CS*/\n         TGBENUM=60,         /* 10 TRACK GROUPS/BLOB    &NUMTGBE   WS*/\n         TGNUM=16288,        /* DEFAULT TOTAL TRKGRPS   &NUMTG=(#, CS*/\n         TGSIZE=30,          /* 30 BUFFERS/TRACK GROUP  &TGSIZE    OC*/\n         TGWARN=90,          /* WARNING THRESHOLD %     &NUMTG=(,% OC*/\n         TRKCELL=3,          /* 3 BUFFERS/TRACK-CELL    &TCELSIZ   CS*/\n         VOLUME=JES20        /* SPOOL VOLUME SERIAL #S  &SPOOL     CS*/\n                             /*                                      */\n                             /**** STC DEFAULTS ******* &STC *********/\n                             /*    ON &RDROPST = BPPMMMMSSCRLAAAAE WS*/\nSTCCLASS TIME=(0060,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=EXECUTE,    /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=ALL,           /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         LOG=YES,            /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM WILL ASSIGN PGN     PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         MSGCLASS=Z          /* DEFAULT MESSAGE CLASS   STCMCLAS   WS*/\n                             /*                                      */\n                             /**** RJE/NJE CHARACTERISTICS ***********/\nTPDEF    BUFSIZE=3840,       /* TP BUFFER SIZE          &TPBFSIZ   WS*/\n         BUFWARN=80,         /* WARNING THRESHOLD %     &NUMTPBF(,%OC*/\n         MBUFSIZE=3840,      /* M/L BUFFER SIZE         &MLBFSIZ   WS*/\n         WAIT=10             /* RJE WAIT INTERVAL       &WAITIME   OC*/\n                             /**** $TRACE FACILITY *******************/\n                             /*                                      */\nTRACE    LOGSIZE=500,        /* SPIN LOG AFTER 500 PGS  &TRLOGSZ   WS*/\n         PAGE=0              /**INIT'L TRACE TABLE SIZE &TRCPGS    WS*/\n                             /*                                      */\n                             /**** TSU DEFAULTS ******* &TSU *********/\n                             /*    ON &RDROPSL = BPPMMMMSSCRLAAAAE WS*/\nTSUCLASS TIME=(0060,00),     /* JOB STEP TIME    ...MMMMSS........ WS*/\n         REGION=999,         /* REGION SIZE      .........C....... WS*/\n         COMMAND=EXECUTE,    /* EXECUTE COMMANDS ..........R...... WS*/\n         BLP=YES,            /* IGNORE BLP PARM  ...........L..... WS*/\n         AUTH=ALL,           /* ALLOW ALL CMDS   ............AAAA. WS*/\n         MSGLEVEL=(1,1),     /* JOB, ALL MSGS    ................E WS*/\n         IEFUJP=YES,         /* TAKE SMF JOB PURGE EXIT IEFUJP     WS*/\n         IEFUSO=YES,         /* TAKE SYSOUT EXCESS EXIT IEFUSO     WS*/\n         LOG=NO,             /* PRINT JES2 JOB LOG      LOG        WS*/\n         OUTPUT=YES,         /* PRODUCE OUTPUT FOR JOB  OUTPUT     WS*/\n         PERFORM=000,        /* SRM PERFORMANCE GROUP 0 PERFORM    WS*/\n         PROCLIB=00,         /* USE //PROC00 DD         PROCLIB    WS*/\n         TYPE6=YES,          /* PRODUCE SMF 6 RECORDS   TYPE6      WS*/\n         TYPE26=YES,         /* PRODUCE SMF 26 RECORDS  TYPE26     WS*/\n         MSGCLASS=Z          /* DEFAULT MESSAGE CLASS   TSUMCLAS   WS*/\n                             /*                                      */\n/* $SLNE3                                                            */\n/*********************************************************************/\n/*                 DELETED INITIALIZATION PARAMETERS                 */\n/*********************************************************************/\n/*  &BSVBOPT(JES2 ASSUMES YES),&DELAYTM(USES 100),                   */\n/*  &MAXCLAS(USES MAXIMUM(36),&NUMCLAS(FIXED AT 15),                 */\n/*  &NUMDMPS(CALCULATED FROM OFFLOADN STMTS)                         */\n/*  &NUMLODS(CALCULATED FROM OFFLOADN STMTS)                         */\n/*  &NUMLOGS(CALCULATED FROM LOGON 1/2)                              */\n/*  &NUMLNES(CALCULATED FROM LINE STATEMENTS)                        */\n/*  &NUMPRTS(CALCULATED FROM PRINTER STATEMENTS)                     */\n/*  &NUMPUNS(CALCULATED FROM PUNCHNN STATEMENTS)                     */\n/*  &NUMRDRS(CALCULATED FROM # OF READERNN)                          */\n/*  &RPS( ALWAYS YES),&SPFPRFX(NO MORE DSN PREFIXES)                 */\n/*  &SPOLMSG(USES MAXIMUM (254) IF TP LINES > 0 )                    */\n/*  &XBATCH( CALCULATED FROM XBATCH ON JOBDEF )                      */\n/*                                                                   */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "J2SRB01": {"ttr": 1027, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "J2SRB01  TITLE 'BUILD AND SCHEDULE SRB TO CLOSE PRINT FILES'\n***********************************************************************\n* J2SRB01 IS LOADED INTO COMMON BY THE RMSGLOAD PROGRAM.              *\n*                                                                     *\n* RMSGLOAD CALLS THIS ROUTINE AFTER IT IS LOADED.                     *\n*  THIS ROUTINE WILL INITIALIZE ITS SELF THE FIRST TIME IT IS         *\n*  CALLED.  R1 MUST CONTAIN THE ADDRESS OF THE 257TH WORD OF          *\n*  SSVTFRTN WHICH IS LOCATED IN THE SSVT FOR RMSG.  THIS WORD IS      *\n*  USED AS A VECTOR CONTROL TABLE FOR J2SRB01.                        *\n*                                                                     *\n*  THE INITALIZATION CODE:                                            *\n*  1) PAGE FIXES J2SRB01.  THIS FORCES ALL CODE BELOW THE 16MB LINE   *\n*     FOR VM.  IF THE CODE IS ABOVE THE LINE THEN VM WILL ABEND       *\n*     THIS ROUTINE WHEN IT ISSUES A DIAGNOSE.                         *\n*                                                                     *\n*  2) FILLS IN THE VECTOR TABLE INFORMATION AND THEN FILLS IN THE     *\n*     ADDR OF THE VECTOR TABLE IN THE SSVT FOR RMSG.                  *\n*                                                                     *\n*  3) RETURNS TO RMSGLOAD.                                            *\n*                                                                     *\n*  WHEN J2XIT01 CALLS THIS ROUTINE TO CLOSE THE VIRTUAL PRINTERS.     *\n*  1) THE MESSAGE LENGHT IS IN XXXXXXXX                               *\n*  2) THE CLOSE COMMAND IS IN XXXXXXXX                                *\n*  3) IF CP0 IS AVAILABLE THE SRB FLAGS ARE SET TO RUN ON CP0,        *\n*     OTHERWISE THEY ARE SET TO RUN ON CP2.                           *\n*  4) THE SRB IS SCHEDULED                                            *\n*  5) RETURN TO J2XIT01                                               *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n***********************************************************************\n*              PROGRAM INITIALIZAITON                                 *\nJ2SRB01   COMEIN\n          NOP  J2SRB2              A NOP THE FIRST TIME\n          MVI  *-3,X'F0'           MAKE A BRANCH\n***********************************************************************\n*  PGFIX THE DIAG 8 WORKAREAS.  VM REQUIRES THAT THE CP COMMAND FROM\n*  A DIAG BE A REAL ADDRESS BELOW THE 16MB LINE.  IF NOT, THEN VM WILL\n*  ABEND THE TASK WITH AN 0C5.\n         LA    R2,SRBDENT          POINT TO VECTOR TABLE\n         ST    R2,0(R1)            HOOK INTO RMSG SVVT (257TH WORD)\n         SPACE 1\n         LA    R5,J2SRB01          START OF AREA TO BE FIXED\n         LA    R6,FIXEND           END OF AREA TO BE FIXED\n         PGFIX R,A=(R5),EA=(R6),ECB=PAGECB PREVENTS 0C5 FROM VM\n         SPACE 1\n         GETOUT ,                  JUST RETURN TO J2BLD01\n         SPACE 1\n***********************************************************************\n*              WE HAVE WORK TO DO, SETUP AND SCHEDULE THE RB          *\n*---- BUILD THE SRB CONTROL BLOCK\nJ2SRB2   XC    SRBFLNK,SRBFLNK      CLEAR LINK FIELD\n         XC    SRBSAVE,SRBSAVE      CLEAR SAVE AREA POINTER\n         MVI   SRBDRPLY,C' '\n         MVC   SRBDRPLY+1(79),SRBDRPLY  CLEAR REPLY AREA\n         SPACE 1\n         L     R1,16            START WITH THE CVT\n         USING CVT,R1\n         L     R2,CVTTCBP           POINTER TO OLD AND NEW TCBS\n         MVC   SRBPTCB,4(R2)        TCB ADDR TO SRB\n         MVC   SRBASCB,12(R2)       ASCB ADDR TO SRB\n         SPACE 1\n         L     R2,SRBASCB           POINT TO THE ASCB\n         USING ASCB,R2\n         MVC   SRBPASID,ASCBASID    ASCB ID NUMBER TO SRB\n         DROP  R2\n         SPACE 1\n         L     R2,CVTPCCAT          ADDR OF ACTIVE CPU'S LIST\n         USING PCCAVT,R2\n         DROP  R1\n         MVI   SRBCPAFF,X'80'       ASSUME CP0 AVAILABLE\n         CLC   PCCAT00P,=F'0'       Q. IS CP0 AVAILABLE\n         BNE   GOTCPU               A. YES - USE IT\n         SPACE 1\n         MVI   SRBCPAFF,X'20'       USE CP2\n         SPACE 1\n*---- FILL IN THE PARM LIST FOR THE SRB\nGOTCPU   MVC   PARMR4,SRBDLEN       LENGTH OF CLOSE COMMAND FOR VM\n         MVI   PARMR4,X'40'         TELL VM WE WANT A REPLY\n         SPACE 1\n         MVC   PARMR7,SRBASCB       ADDR FOR POST ROUTINE IN SRB\n         SPACE 1\n*---- SCHEDULE THE SRB TO ISSUE THE VM CLOSE PRINTER COMMAND\n         XC    ECBSRB,ECBSRB        CLEAR THE ECB BEFORE WAIT\n         LA    R1,SRB               POINT TO SRB\n         SCHEDULE SRB=(1),SCOPE=LOCAL\n         WAIT  ECB=ECBSRB\n         SPACE 1\n         CLC   SRBDRPLY(5),=5C' '   Q. ANY REPLY FROM VM\n         BE    EXIT                 A. NO - THATS GOOD\n         MVC   WTORPLY,SRBDRPLY\n         MVC   WTOCMD,SRBDMSG\n         WTO   'J2SRB01 - VM RETURED THE FOLLOWING MSG FROM CLOSE.',   X\n               ROUTCDE=(1),DESC=(2)\nWTOVM    WTO   '**VM REPLY=....5....1....5....2....5....3....5....4  ',X\n               ROUTCDE=(1),DESC=(2)\nWTORPLY  EQU   WTOVM+19,40\nWTOCM    WTO   '**VM CMD  =....5....1....5....2....5....3....5....4  ',X\n               ROUTCDE=(1),DESC=(2)\nWTOCMD   EQU   WTOCM+19,40\n         WTO   '** DRAIN ALL JES2 PRINTERS AND NOTIFY TECH SUPPORT',   X\n               ROUTCDE=(1),DESC=(2)\n         SPACE 1\nEXIT     GETOUT ,                   RETURN TO JES\n         SPACE 1\nSRBERR   WTO   'J2SRB01 SRBERR ERROR ROUTINE ENTERED'\n         BR    R14\n***********************************************************************\n*                 WORK AREAS ETC                                      *\nSRBDENT  DC    A(J2SRB01)       ENTRY POINT ADDRESS\nSRBDLEN  DS    F                LENGTH OF CLOSE MESSAGE\nSRBDMSG  DC    CL80' '          THE ACTUAL CLOSE MSG\nSRBDRPLY DC    CL80' '          VM MSG FROM DIAGNOSE\nSRBDECB  DC    F'0'             AN ECB FOR THE SRB TO POST\nSRBWORK  DC    18F'0'           SRB SAVE AREA\nPAGECB   DC    F'0'             AN ECB FOR PAGEFIX (NEVER POSTED)\nECBSRB   DC    F'0'             AN ECB FOR THE SRB TO POST\n         SPACE 1\nPARMLST  DS    0F               PARM LIST FOR USE BY THE SRB ROUTINE\nPARMR2   DC    A(SRBDMSG)        ADDR OF MSG\nPARMR3   DC    A(SRBDRPLY)       ADDR OF REPLY AREA FOR VM\nPARMR4   DC    F'0'              LENGTH OF MSG\nPARMR5   DC    A(L'SRBDRPLY)     LENGTH OF REPLY\nPARMR6   DC    A(ECBSRB)         ADDR OF ECB TO BE POSTED\nPARMR7   DC    A(0)              ADDR OF ASID FOR JES2\n*\n         DS    0D               ALIGN THE SRB CONTROL BLOCK\nSRB      DC    CL4'SRB'         EYE CATCHER\nSRBFLNK  DC    A(0)             FORWARD CHAIN FIELD\nSRBASCB  DC    A(0)             PTR TO JES2 ASCB\nSRBCPAFF DC    H'0'             CPU AFFINITY MASK\nSRBPASID DC    H'0'             PURGEDQ ASID IDENTIFER\nSRBPTCB  DC    A(0)             PURGEDQ TCB IDENTIFIER\nSRBPEP   DC    A(SRBENT)        ADDR OF SRB CODE\nSRBRMTR  DC    A(SRBERR)        ADDR OF RESOURCE MGR ROUTINE\nSRBPARM  DC    A(PARMLST)       USER PARAMETER LIST\nSRBSAVE  DC    F'0'             SAVE AREA POINTER\nSRBPKF   DC    X'00'            PROTECT KEY INDICATOR\nSRBPRIOR DC    X'00'            PRIORITY LEVEL INDICATION\nSRBRES1  DC    H'0'             RESERVED\nSRBRES2  DC    F'0'             RESERVED\n***********************************************************************\n*           THIS IS THE SRB CODE THAT GETS SCHEDULED                  *\n         DROP  R3\n         DS    0D                 INSURANCE\nSRBENT   LR    R9,R15\n         LR    R8,R14            SAVE RETURN ADDRESS\n         USING SRBENT,R9         ENTRY POINT\n         ST    R14,RETADDR\n         SPACE 1\n         MVC   ACTION,=C'LOAD REGS '\n         LM    R2,R7,0(R1)      LOAD ALL REGS\n         SPACE 1\n         MVC   ACTION,=C'LOAD REAL '\n         LRA   R2,0(R2)         GET REAL ADDR OF MSG\n         LRA   R3,0(R3)         GET REAL ADDR OF REPLY AREA\n         SPACE 1\n         MVC   ACTION,=C'START DIAG'\n         DC    X'83',X'24',XL2'0008'  VM DIAGNOSE\n         MVC   ACTION,=C'END DIAG  '\n*  PREPARE FOR POST\n         POST  (6),X'7F',ASCB=(7),ERRET=PERR,BRANCH=YES\n         MVC   ACTION,=C'END POST  '\n         SPACE 1\nPERR     L     R14,RETADDR\n         MVC   ACTION,=C'EXIT SRB  '\n         SR    R15,R15\n         BR    R14              RETURN\nRETADDR  DC    F'0'\nACTION   DC    CL10'ACTIONMSGS'\n         DROP  R9\n         USING J2SRB01,R3\nFIXEND   EQU   *\n***********************************************************************\n*                 DSECTS FOR THE WORLD                                *\n         PRINT NOGEN\n         CVT DSECT=YES\n         IHAASCB\n*        IHAPCCAT\nPCCAVT   DSECT\nPCCAT00P DS   A          ADDR OF PCCA FOR CPU 0\nPCCAT01P DS   A          ADDR OF PCCA FOR CPU 1\nPCCAT02P DS   A          ADDR OF PCCA FOR CPU 2\nPCCAT03P DS   A          ADDR OF PCCA FOR CPU 3\nPCCAT04P DS   A          ADDR OF PCCA FOR CPU 4\nPCCAT05P DS   A          ADDR OF PCCA FOR CPU 5\nPCCAT06P DS   A          ADDR OF PCCA FOR CPU 6\nPCCAT07P DS   A          ADDR OF PCCA FOR CPU 7\nPCCAT08P DS   A          ADDR OF PCCA FOR CPU 8\nPCCAT09P DS   A          ADDR OF PCCA FOR CPU 9\nPCCAT10P DS   A          ADDR OF PCCA FOR CPU 10\nPCCAT11P DS   A          ADDR OF PCCA FOR CPU 11\nPCCAT12P DS   A          ADDR OF PCCA FOR CPU 12\nPCCAT13P DS   A          ADDR OF PCCA FOR CPU 13\nPCCAT14P DS   A          ADDR OF PCCA FOR CPU 14\nPCCAT15P DS   A          ADDR OF PCCA FOR CPU 15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "J2TBL03": {"ttr": 1031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'VALIDATE ACCOUNT NUMBER FOR J2XIT03'\n***********************************************************************\n*              SUB-ROUTINE INITIALIZATION                             *\nJ2TBL03  COMEIN BASE=12\n         MVC   CC,=F'0'           ASSUME VALID RETURN\n         SPACE 2\n***********************************************************************\n*              ARE WE RUNNING IN CMS OR MVS                           *\nMVSCMS   NOP   MVS\n         CLC   =8X'FF',16(R1)     IF CMS THEN THIS IS TRUE\n         BE    CMS\n         MVI   MVSCMS+1,X'F0'     SHOW MVS SYSTEM\n         B     MVS\n         SPACE 1\nCMS      LA    R3,8(R1)           POINT TO THE ACCOUNT NUMBER\n         LA    R2,8               WITH THIS LENGTH\n         SPACE 2\n***********************************************************************\n*              SEARCH THE TABLE INDEX                                 *\nMVS      MVC   AWORK,0(R3)        MOVE UNMODIFIED ACCT NBR TO HOLD\n         CLI   0(R3),C'('         Q. IS IT IN PARENS\n         BE    STRIP              A. YES - STRIP IT DOWN\n         CLI   0(R3),X'7D'        Q. IS IT IN QUOTES\n         BNE   FORMATOK           A. NO. THE FORMAT IS OK\n         SPACE 1\nSTRIP    BCTR  R2,0               SKIP OVER PAREN/QUOTE\n         BCTR  R2,0               BACK DOWN 1 FOR EXECUTE\n         C     R2,=F'7'           Q. IS ACCT INFO > 8 CHARS ?   BJM\n         BNH   MOVEIT             A. NO - OK TO MOVE IN         BJM\n         LA    R2,7               ELSE SET LENGTH TO MAX.       BJM\nMOVEIT   MVC   AWORK,AWORK-1      CLEAR THE WORKAREA\n         EX    R2,FROMJES         MOVE ACCT TO WORK AREA\n         SPACE 1\n         LA    R4,AWORK           POINT TO THE WORKAREA\n         LA    R5,1               LENGTH COUNTER\n         SPACE 1\nSTRIP1   CLI   0(R4),C' '         Q. IS IT A BLANK\n         BE    STRIP2             A. YES - THATS ALL\n         SPACE 1\n         CLI   0(R4),C','         Q. IS IT A COMMA\n         BE    STRIP2             A. YES - THATS ALL\n         SPACE 1\n         CLI   0(R4),C')'         Q. IS IT A PAREN\n         BE    STRIP2             A. YES - THATS ALL\n         SPACE 1\n         CLI   0(R4),X'7D'        Q. IS IT A QUOTE\n         BE    STRIP2             A. YES - THATS ALL\n         LA    R4,1(R4)           BUMP TO NEXT POSITION\n         LA    R5,1(R5)           BUMP THE LENGTH\n         C     R5,=F'9'           Q. END OF ACCOUNT FIELD\n         BNE   STRIP1             A. NOT YET\n         SPACE 1\nSTRIP2   BCTR  R5,0               BACK DOWN TO REAL LENGTH\n         BCTR  R4,0               BACK DOWN TO REAL END\n         LR    R2,R5              RESET ACCT NBR LENGTH\n         BCTR  R5,0               BACK DOWN FOR EXECUTE\n*        EX    R5,TOJES\n         SPACE 1\nFORMATOK LR    R1,R3              SAVE R3\n         LA    R3,AWORK           POINT TO ACCT NUMBER\n         CLC   0(2,R3),=C'00'     Q. DOES IT START WITH A NBR\n         BL    CC4                A. NO - ITS INVALID\n         SPACE 1\n         USING INDEXD,R4\n         LA    R4,INDEX           POINT TO TABLE INDEX\nTLU1     CLC   0(2,R3),IDXKEY     Q. VALID KEY\n         BE    KEYOK              A. YES\n*        BH    CC4                A. ACCT NBR NOT VALID\n         LA    R4,L'IDXALL(R4)    POINT TO NEXT ENTRY\n         CLI   IDXALL,X'FE'       Q. END OF TABLE\n         BNE   TLU1               A. NO - CONTINUE\n         B     CC4                ACCT NBR IS INVALID\nFROMJES  MVC   AWORK(0),1(R3)     MOVE ACCOUNT NUMBER FROM JES AREA\n*TOJES    MVC   0(0,R3),AWORK      MOVE ACCOUNT NUMBER TO JES AREA\n***********************************************************************\n*              SEARCH THE TABLE FOR FULL ACCOUNT NUMBER               *\nKEYOK    LM    R5,R6,IDX1ST       LOAD THE SEARCH REGS\n         BCTR  R2,0               SETUP FOR EXECUTE\n         SPACE 1\nTLU2     EX    R2,CLC             Q. EQUAL ENTRY\n         BE    CC0                A. YES\n         LA    R5,L'DIV01(R5)     BUMP TO NEXT ENTRY\n         BCT   R6,TLU2            AND LOOP\n         B     CC4\nCLC      CLC   0(0,R3),0(R5)      Q. SAME ACCOUNT NBR (EXECUTED)\n***********************************************************************\n*              RETURN TO CALLER WITH CC 4 OR CC 0                     *\nCC4      MVC   CC,=F'4'           SET RETURN CODE TO 4\n         B     EXIT\n         SPACE 1\nCC0      EQU   *\nEXIT     GETOUT ,                 INITIAL CC IS ZERO\n***********************************************************************\n*              INDEX TABLE FOR MAIN ACCOUNT NUMBER TABLE              *\n         DC    C' '               USE TO CLEAR AWORK\nAWORK    DC    CL8' '\nINDEX    DS    0F                 START ON A FULL WORD\n         DC    CL2'01',H'0',A(DIV01),A((DIV02-DIV01)/L'DIV01)\n         DC    CL2'02',H'0',A(DIV02),A((DIV03-DIV02)/L'DIV01)\n         DC    CL2'03',H'0',A(DIV03),A((DIV04-DIV03)/L'DIV01)\n         DC    CL2'04',H'0',A(DIV04),A((DIV05-DIV04)/L'DIV01)\n         DC    CL2'05',H'0',A(DIV05),A((DIV06-DIV05)/L'DIV01)\n         DC    CL2'06',H'0',A(DIV06),A((DIV07-DIV06)/L'DIV01)\n         DC    CL2'07',H'0',A(DIV07),A((DIV08-DIV07)/L'DIV01)\n         DC    CL2'08',H'0',A(DIV08),A((DIV09-DIV08)/L'DIV01)\n         DC    CL2'09',H'0',A(DIV09),A((DIV10-DIV09)/L'DIV01)\n         DC    CL2'10',H'0',A(DIV10),A((DIV11-DIV10)/L'DIV01)\n         DC    CL2'11',H'0',A(DIV11),A((DIV12-DIV11)/L'DIV01)\n         DC    CL2'12',H'0',A(DIV12),A((DIV14-DIV12)/L'DIV01)\n         DC    CL2'14',H'0',A(DIV14),A((DIV15-DIV14)/L'DIV01)\n         DC    CL2'15',H'0',A(DIV15),A((DIV16-DIV15)/L'DIV01)\n         DC    CL2'16',H'0',A(DIV16),A((DIV17-DIV16)/L'DIV01)\n         DC    CL2'17',H'0',A(DIV17),A((DIV18-DIV17)/L'DIV01)\n         DC    CL2'18',H'0',A(DIV18),A((DIV55-DIV18)/L'DIV01)\n         DC    CL2'55',H'0',A(DIV55),A((DIVXX-DIV55)/L'DIV01)\n         DC    12X'FE'\n         SPACE 1\n***********************************************************************\n*              TABLE OF VALID ACCOUNT NUMBERS                         *\nDIV01    DC    CL8'01ACCORP'   CORPORATE ACCOUNTING\n         DC    CL8'01ACTREC'   ACCOUNTS RECEIVABLE\n         DC    CL8'01CPA   '           ADDED 01/21/88   PLB\n         DC    CL8'01CRPFIN'   CORPORATE FINANCE\n         DC    CL8'01FIXAST'   FIXED ASSETS\n         DC    CL8'01GENLED'   GENERAL LEDGER\n         DC    CL8'01PAYABL'   ACCOUNTS PAYABLE\n         DC    CL8'01PAYROL'   PAYROLL\n         SPACE 1\nDIV02    DC    CL8'02GNLADM'   GENERAL ADMINISTRATIVE\n         DC    CL8'02PRESGA'   PRESIDENTIAL ADMINISTRATION\n         DC    CL8'02LEGAL'            ADD 03/21/88  PLB\n         SPACE 1\nDIV03    DC    CL8'03HRBFIN'   HERBERT LABS FINANCE\n         DC    CL8'03HRBGA '   HERBERT LABS ADMINISTRATION\n         DC    CL8'03HRBMKT'   HERBERT LABS MARKETING\n         DC    CL8'03ORDENT'           ADDED 01/21/88   PLB\n         DC    CL8'03SDADM '   HERBERT LABS SALES ADMINISTRATION\n         DC    CL8'03SDDTL '   HERBERT LABS SALES DETAILING\n         SPACE 1\nDIV04    DC    CL8'04COMBEN'   COMPENSATION AND BENEFITS\n         DC    CL8'04HRDEV '   HUMAN RESOURCES DEVELOPMENT\n         DC    CL8'04HUMRES'   HUMAN RESOURCES ADMINISTRATION\n         DC    CL8'04MANPOW'   MANPOWER PLANNING\n         DC    CL8'04OHS   '   OCCUPATIONAL HEALTH/SAFETY\n         SPACE 1\nDIV05    DC    CL8'05DPADMN'   IS ADMINISTRATION\n         DC    CL8'05DPDBSE'   IS DATA BASE\n         DC    CL8'05DPINTL'   IS INTERNATIONAL\n         DC    CL8'05DPMINI'   IS MINI/MICRO TECH SUPPORT\n         DC    CL8'05DPOP  '   IS OPERATIONS\n         DC    CL8'05DPPLAN'   IS PLANNING\n         DC    CL8'05DPPROG'   IS SYSTEMS DEVELOPMENT\n         DC    CL8'05DPTECH'   IS TECH SUPPORT\n         DC    CL8'05DPTELE'   TELEPHONES\n         DC    CL8'05OFFAUT'   OFFICE AUTOMATION\n         SPACE 1\nDIV06    DC    CL8'06EXPSER'   EXPORT SERVICES\n         DC    CL8'06FININT'   INTERNATIONAL FINANCE\n         DC    CL8'06HRINTL'   INTERNATIONAL HUMAN RESOURCES\n         DC    CL8'06IACCTG'   INTERNATIONAL ACCOUNTING\n         DC    CL8'06IRVTRN'   INTERNATIONAL SALES TRAINING/SUPPORT\n         DC    CL8'06LATAMR'   LATIN AMERICA ADMINISTRATION\n         DC    CL8'06LOGIST'   LOGISTICS\n         DC    CL8'06MASTER'   MASTER FILE\n         DC    CL8'06MATRLS'   DEMAND FORECAST           6-19\n         DC    CL8'06MGTRPT'   MANAGEMENT REPORTING\n         DC    CL8'06MKTPLN'   INTERNATIONAL MARKETING AND PLANNING\n         DC    CL8'06PII   '   PROFITS IN INVENTORY\n         DC    CL8'06PMF   '   PACKAGING MASTER FORM\n         DC    CL8'06PROPLN'   PROMOTION PLANNING\n         DC    CL8'06SOERPE'   SOUTHERN EUROPE ADMINISTRATION\n         SPACE 1\nDIV07    DC    CL8'07BID   '   BID REIMBURSEMENT\n         DC    CL8'07BRC   '   BUSINESS REPLY CARDS\n         DC    CL8'07CACCT '   COST ACCOUNTING\n         DC    CL8'07HRAP  '   PHARM HUMAN RESOURCES\n         DC    CL8'07INVOIC'   INVOICING\n         DC    CL8'07LISTS '   LISTS AND LABELS\n         DC    CL8'07ORDENT'   ORDER ENTRY\n         DC    CL8'07PHMDTL'   PHARM SALES DETAILING\n         DC    CL8'07PHMFIN'   PHARM FINANCE\n         DC    CL8'07PHMGNA'   PHARM ADMINISTRATION\n         DC    CL8'07PHMISA'   PHARM SALES ADMINISTRATION\n         DC    CL8'07PHMMKT'   PHARM MARKETING\n         DC    CL8'07PHMSAD'   PHARM SADS\n         DC    CL8'07PHMTPR'   PHARM SALES TRADE & PROF RELATIONS\n         DC    CL8'07PHYINV'   PHYSICAL INVENTORY\n         DC    CL8'07PPO   '   PPO\n         DC    CL8'07PROFIL'   PROFILING\n         DC    CL8'07PRSNEL'   PERSONNEL\n         DC    CL8'07QTRLTR'   QUARTERLY LETTERS\n         DC    CL8'07SALRPT'   SALES REPORTING\n         DC    CL8'07SLSAUT'   SALESMAN AUTOMATICS\n         DC    CL8'07WARNTY'   WARRANTY CARDS\n         DC    CL8'07WPG   '   WPG\n         SPACE 1\nDIV08    DC    CL8'08MEDASB'   MEDICAL ASSEMBLY\n         DC    CL8'08PADMIN'   PLASTICS ADMINISTRATION\n         DC    CL8'08PMLDNG'   PLASTICS MOLDING\n         DC    CL8'08PWHSE '   PLASTICS WAREHOUSE\n         SPACE 1\nDIV09    DC    CL8'09DISTRB'           ADDED 01/21/88   PLB\n         DC    CL8'09INVCON'   INVENTORY CONTROL\n         DC    CL8'09MATADM'   MATERIALS ADMINISTRATION\n         DC    CL8'09MRPS  '   MATERIALS PLANNING\n         DC    CL8'09OPHPKG'   OPHTHALMIC PACKAGING\n         DC    CL8'09OPRTNS'   OPERATIONS\n         DC    CL8'09PHYINV'   PHYSICAL INVENTORY\n         DC    CL8'09PKGDEV'   PACKAGE DEVELOPMENT\n         DC    CL8'09PLANNG'   PLANNING\n         DC    CL8'09PRCHNG'   PURCHASING\n         DC    CL8'09TRANS '   TRANSMISSION TO SERIES I\n         DC    CL8'09WHEREC'   WAREHOUSE AND RECEIVING\n         SPACE 1\nDIV10    DC    CL8'10HEATER'   HEATERS\n         DC    CL8'10QCDOCU'   QC DOCUMENTATION\n         DC    CL8'10QCADMN'   QC ADMINISTRATION\n         DC    CL8'10QCCHEM'   QC CHEMISTRY\n         DC    CL8'10RECALL'   PRODUCT RECALL\n         SPACE 1\nDIV11    DC    CL8'11ANYDEV'   ANALYTICAL CHEMISTRY\n         DC    CL8'11BOSTAT'   BIOSTATISTICS\n         DC    CL8'11CICEN '   CORPORATE INFORMATION CENTER     6-30\n         DC    CL8'11CISTMS'   INFORMATION SYSTEMS AND SERVICES\n         DC    CL8'11CRSA  '   MEDICAL OPERATIONS\n         DC    CL8'11DRBMET'   DRUG METABOLISM                  6-30\n         DC    CL8'11IPL   '   INVESTIGATIVE PRODUCTS LAB\n         DC    CL8'11MBSADM'   DISCOVERY RESEARCH\n         DC    CL8'11MCBLGY'   MICROBIOLOGY\n         DC    CL8'11MEDOP '   MEDICAL OPERATIONS               6-30\n         DC    CL8'11MRD   '   RESEARCH AND DEVELOPMENT ADMINISTRATION\n         DC    CL8'11MSI   '   COMMUNICATION SERVICES\n         DC    CL8'11PHARM '   PHARMACEUTICAL RESEARCH          6-30\n         DC    CL8'11PKINET'   PHARMACOKINETICS                 6-30\n         DC    CL8'11QCPARC'   QC PRODUCT ASSURANCE\n         DC    CL8'11RDADM '   R&D FINANCE/ADMINISTRATION\n         DC    CL8'11RDSIS '   R&D INFOR SYSTEMS AND SERVICES\n         DC    CL8'11SPECT '   SPECTROSCOPY                     6-30\n         DC    CL8'11STSADM'   SCIENTIFIC & TECH SERVICES ADMIN 6-30\n         DC    CL8'11TOXLGY'   TOXICOLOGY\n         SPACE 1\nDIV12    DC    CL8'12CLCADM'   CONTACT LENS CLINICAL R&D ADMIN\n         DC    CL8'12HRAO  '   OPTICAL HUMAN RESOURCES\n         DC    CL8'12OPTDTL'   OPTICAL SALES DETAILING\n         DC    CL8'12OPTFIN'   OPTICAL FINANCE\n         DC    CL8'12OPTGNA'   OPTICAL ADMINISTRATION\n         DC    CL8'12OPTISA'   OPTICAL SALES ADMINISTRATION\n         DC    CL8'12OPTMKT'   OPTICAL MARKETING\n         DC    CL8'12ORDENT'           ADDED 01/21/88   PLB\n         SPACE 1\nDIV14    DC    CL8'14CRPCOM'   CORPORATE COMMUNICATIONS\n         DC    CL8'14CRPPLN'   CORPORATE PLANNING\n         DC    CL8'14GMCADM'   GROUP MARKETING\n         DC    CL8'14MKTINF'   MARKETING INFORMATION\n         DC    CL8'14PROFPR'   PROFESSIONAL EDUCATION/PUBLIC RELATIONS\n         SPACE 1\nDIV15    DC    CL8'15CONV  '   AMO CONVERSION            6-19\n         DC    CL8'15ORDERS'   AMO ORDER ENTRY           6-19\n         DC    CL8'15SALES '   AMO SALES REPORTING       6-19\n         DC    CL8'15M01200'   AMO SALES                 6-30\n         DC    CL8'15M05200'   AMO FINANCE               6-30\n         DC    CL8'15M05310'   AMO ACCOUNTS RECEIVABLE   6-30\n         DC    CL8'15M05330'   AMO ACCOUNTS PAYABLE      6-30\n         DC    CL8'15M06100'   AMO HUMAN RESOURCES       6-30\n         SPACE 1\nDIV16    DC    CL8'16ARCI  '   ALLERGAN CLINICAL RESEARCH INST  6-30\n         DC    CL8'16OPHCR '   OPHTHALMIC CLINICAL RESEARCH\n         DC    CL8'16PHMDEV'   PHARM DEVELOPMENT\n         DC    CL8'16PHMRAD'   PHARM R&D ADMINISTRATION\n         DC    CL8'16PHMREG'   PHARM REGULATORY AFFAIRS\n         SPACE 1\nDIV17    DC    CL8'17CLANY '   CONTACT LENS ANALYTICAL\n         DC    CL8'17CLCD  '   CONTACT LENS CLINICAL DEVELOPMENT\n         DC    CL8'17CLDEV '   CONTACT LENS ADMINISTRATION\n         DC    CL8'17CLDRES'   CONTACT LENS DEVICE RESEARCH 6-30\n         DC    CL8'17CLFORM'   CONTACT LENS FORMULATION\n         DC    CL8'17CLINIC'   ALLERGAN RESEARCH CLINIC\n         DC    CL8'17CLPISV'   CONTACT LENS PRODUCT INFO SERVICES 6-30\n         DC    CL8'17CLREG '   CONTACT LENS REGULATORY AFFAIRS\n         DC    CL8'17CLRES '   CONTACT LENS RESEARCH        6-30\n         DC    CL8'17OPTRAD'   OPTICAL R&D ADMINISTRATION   6-30\n         SPACE 1\nDIV18    DC    CL8'18HRBCL '   HERBERT LABS CLINICAL R&D\n         DC    CL8'18HRBPCL'   HERBERT LABS PRECLINICAL R&D\n         DC    CL8'18HRBRA '   HERBERT LABS REGULATORY AFFAIRS    6-30\n         DC    CL8'18HRBRD '   HERBERT LABS R&D ADMINISTRATION\n         SPACE 1\nDIV55    DC    CL8'55CICS  '   CICS\n         DC    CL8'55MVSOVD'   MVS OVERHEAD\n         DC    CL8'55PRDTIS'   PRODUCTION TIS\n         DC    CL8'55TSTTIS'   TEST TIS\n         DC    CL8'55VMOVHD'   VM\n         DC    CL8'55VMOPER'   VM OPERATIONS\n         DC    8X'FE'\n         SPACE 1\nDIVXX    EQU   *\n***********************************************************************\n*              LITERAL POOL                                           *\n         LTORG\n***********************************************************************\n*              DSECT FOR TABLE INDEX                                  *\nINDEXD   DSECT\nIDXALL   DS    0CL12\nIDXKEY   DS    CL2                1ST PART OF ACCOUNT NUMBER\n         DS    H                  RESERVED\nIDX1ST   DS    A(0)               START OF LIST\nIDXNBR   DS    F'0'               NUMBER OF ENTRIES\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "J2XIT01": {"ttr": 1281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "J2XIT01  TITLE 'JES2 SP1.3.6 EXIT 01 - HEADER/TRAILER PAGE HANDLING'\n***********************************************************************\n*                                                                     *\n*        HEADER PAGE EXIT POINT                                       *\n*                                                                     *\n*        AT THIS POINT THE USER HAS THE CHANCE TO CREATE AND/OR       *\n*        ADD TO THE STANDARD HEADER PAGE.                             *\n*                                                                     *\n*        ON CALL TO THE INSTALLATION EXIT THE FOLLOWING               *\n*        REGISTERS WILL BE SETUP:                                     *\n*                                                                     *\n*        REG             VALUE                                        *\n*                                                                     *\n*        R0              0 - INDICATION START OF PRINT                *\n*                        4 - INDICATION CONTINUATION OF PRINT         *\n*                        8 - INDICATION TRAILER PAGE                  *\n*        R1              PRINTER DCT ADDR.                            *\n*        R2-R9           N/A                                          *\n*        R10             ADDR. JCT                                    *\n*        R11             ADDR. HCT                                    *\n*        R12             N/A                                          *\n*        R13             ADDR. PCE                                    *\n*        R14             RETURN POINT                                 *\n*        R15             ENTRY POINT                                  *\n*                                                                     *\n*        ON RETURN FROM THE USER EXIT THE REGISTERS SHOULD BE         *\n*        THE CAME AS ENTRY WITH THE EXECPTION OF R15 WHICH            *\n*        WILL HAVE THE RETURN CODE AS SET BY THE USER EXIT.           *\n*                                                                     *\n*        RETURN CODE                                                  *\n*                                                                     *\n*        0 AND 4 - CREATE SEPERATOR PAGE BASED ON DCTPPSWS            *\n*        8       - CREATE USER SEPERATOR PAGE                         *\n*        12      - UNCONDITIONAL CREATE SEPERATOR PAGE                *\n***********************************************************************\n*                                                                     *\n*  THIS IS THE ORIGINAL ALLERGAN JES2 EXIT 01.  IT HAS BEEN MODIFIED  *\n*  TO ISSUE SVC 217 TO CLOSE VIRTUAL PRINTERS BECAUSE DIAGNOSE        *\n*  WILL NOT WORK UNDER PMA.                                           *\n*                                                                     *\n*  BACK TO USING THE DIAG COMMAND.  VM GETS A SVC002 (VM NOT MVS)     *\n*  WHEN A SIO IS ISSUED FOR THE VIRT PRINTERS.  3-16-86  PLB          *\n*                                                                     *\n*  USE REAL ADDRESS WHEN USING DIAG 8           3-16-86  PLB          *\n*                                                                     *\n*  MOVE WORKAREA FROM JCT TO THIS EXIT          3-17-86  PLB          *\n*                                                                     *\n*  PGFIX THIS PGM TO FORCE WORKARE BELOW 16MB   3-17-86  PLB          *\n*                                                                     *\n*  MODIFY TO CALL J2SRB01 IN COMMON.  J2SRB01   7-01-86  PLB          *\n*   WILL SCHEDULE A SRB TO DO THE DIAGNOSE TO                         *\n*   SPOOL THE VIRTUAL PRINT FILES TO VM.                              *\n*                                                                     *\n*  MODIFIED TO CREATE USER SEPERATOR PAGE      12/14/87  PLB          *\n*   FOR VIRTUAL PRINTERS.  ROUTER WILL SCAN                           *\n*   THE SEPERATOR PAGE AND ROUTE THE OUTPUT.                          *\n*                                                                     *\n*  ADD 2 REAL PRINTERS (11 & 12)               01/25/88  PLB          *\n*                                              PAUL BANKS             *\n***********************************************************************\n         SPACE 2\n***********************************************************************\n*              DEFINE JES2 STUFF                                      *\n         SPACE 2\n         COPY  $HASPGBL\nJ2XIT01  $MODULE RPL,                                                  *\n               $HASPEQU,                                               *\n               $BUFFER,                                                *\n               $DCT,                                                   *\n               $JQE,                                                   *\n               $JOE,                                                   *\n               $MIT,                                                   *\n               $PCE,                                                   *\n               $JCT,                                                   *\n               $CAT,                                                   *\n               $PPPWORK,                                               *\n               $HCT\n         PRINT NOGEN\nUCB      DSECT\n         IEFUCBOB PREFIX=NO\n         DCBD\n         IEZDEB\n         PRINT GEN\n         SPACE 2\nJ2XIT01E $ENTRY CSECT=YES          SETUP ENTRY POINT FOR JES2\n         $SAVE\n         LR    R8,R15              ESTABLISH BASE REG\n         SPACE 1\n***********************************************************************\n*              FIRST DETERMINE IF THIS IS A VIRTUAL PRINTER           *\n         SPACE 2\nFIXED    LR    R6,R1               SAVE DCT ADDRESS\n         USING DCT,R6              DCT ADDRESSABILITY\n         SPACE 1\n         CLI   DCTDEVTP,DCTPRT     Q. IS THIS A LOCAL PRINTER\n         BNE   J1RETN0             A. NO - JUST LEAVE\n         SPACE 1\n         CLC   DCTDEVN,=C'PRT8    ' Q. IS THIS A REAL PRINTER\n         BE    J1RETN0              A. YES - JUST LEAVE\n         SPACE 1\n         CLC   DCTDEVN,=C'PRT9    ' Q. IS THIS A REAL PRINTER\n         BE    J1RETN0              A. YES - JUST LEAVE\n         SPACE 1\n         CLC   DCTDEVN,=C'PRT10   ' Q. IS THIS A REAL PRINTER\n         BE    J1RETN0              A. YES - JUST LEAVE\n         SPACE 1\n         CLC   DCTDEVN,=C'PRT11   ' Q. IS THIS A REAL PRINTER\n         BE    J1RETN0              A. YES - JUST LEAVE\n         SPACE 1\n         CLC   DCTDEVN,=C'PRT12   ' Q. IS THIS A REAL PRINTER\n         BE    J1RETN0              A. YES - JUST LEAVE\n         SPACE 1\n***********************************************************************\n*              FIND UCB NAME FOR VIRTUAL PRINTER                      *\n         SPACE 1\n         L     R4,DCTDCB           LOAD DCB PTR\n         USING IHADCB,R4           EST. DCB ADDRESSABILITY\n         L     R4,DCBDEBAD         LOAD DEB PTR\n         DROP  R4\n         SPACE 1\n         USING DEBBASIC,R4         EST. DEB ADDRESSABILITY\n         ICM   R4,7,DEBSUCBB       LOAD UCB PTR\n         DROP  R4\n         SPACE 1\n         USING JCT,R10             SETUP TO USE JCT USER FIELDS\n         USING UCB,R4              EST UCB ADDRESSABILITY\n         MVC   JCTUSER0,UCBNAME    SAVE THE UCB NAME\n         DROP  R4\n         SPACE 2\n         C     R0,=F'8'            Q. TRAILER PAGE INVOCATION?\n         BE    J1TRAIL             A. TAG AND CLOSE THE PRINT FILE\n         SPACE 2\n***********************************************************************\n*        BUILD A HEADER PAGE FOR VIRTUAL PRINTERS                     *\n         USING BFPDSECT,R3\n         $GETBUF TYPE=HASP,WAIT=YES,FIX=YES     BUFFER FOR HEADER\n         LR    R3,R1                 SAVE BUFFER ADDRESS\n         $SEPPDIR (R3)\n         MVC   MODID,JCTJOBID        MOVE JOB NUMBER\n         MVC   MODJOB,JCTJNAME       MOVE JOB NAME\n         MVC   MODPRT,DCTDEVN        SET PRINTER NUMBER\n         USING JOE,R7\n         L     R7,PPPWKJOE\n         MVC   MODCLS,JOECURCL\n         MVC   BUFSTART(L'MODEL),MODEL   MOVE MODEL LINE TO BUFFER\n         LA    R0,L'MODEL            LENGTH OF MODEL\n         LA    R1,BUFSTART           START OF BUFFER DATA AREA\n         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES\n         $FREEBUF (R3),TYPE=HASP\n         B     J1RETN8               PRINT THIS SEPERATOR PAGE\n         DROP  R3,R7\n         SPACE 2\n***********************************************************************\n*        BUILD THE CP CLOSE COMMAND IN THE JCTWORK AREA               *\n         SPACE 1\nJ1TRAIL  MVC   JCTWORK(L'MSG),MSG      BUILD THE MESSAGE IN THE JCT\n         MVC   JCTWORK+06(3),JCTUSER0  MOVE UCB NAME TO VM COMMAND\n         MVC   JCTWORK+15(8),JCTJNAME  MOVE JOBNAME TO VM COMMAND\n         MVC   JCTWORK+29(8),JCTJNAME  MOVE JOBNAME TO VM COMMAND AGAIN\n         SPACE 2\n***********************************************************************\n*  MOVE CLOSE COMMAND TO UNIQUE WORKAREA DEPENDING ON PRT NBR         *\n*              THEN CALL J2SRB01 TO CLOSE THE PRINTER                 *\n         SPACE 1\n         CLC   DCTDEVN,=C'PRT1    ' Q. IS THIS PRINTER 1\n         BNE   TRYPRT2              A. NO - TRY NEXT PRINTER\n         B     DODIAG                  AND TELL VM TO DO IT TO IT\n         SPACE 1\nTRYPRT2  CLC   DCTDEVN,=C'PRT2    ' Q. IS THIS PRINTER 2\n         BNE   TRYPRT3              A. NO - TRY NEXT PRINTER\n         B     DODIAG                  AND TELL VM TO DO IT TO IT\n         SPACE 1\nTRYPRT3  CLC   DCTDEVN,=C'PRT3    ' Q. IS THIS PRINTER 3\n         BNE   TRYPRT4              A. NO - TRY NEXT PRINTER\n         B     DODIAG                  AND TELL VM TO DO IT TO IT\n         SPACE 1\nTRYPRT4  CLC   DCTDEVN,=C'PRT4    ' Q. IS THIS PRINTER 4\n         BNE   TRYPRT5              A. NO - TRY NEXT PRINTER\n         B     DODIAG                  AND TELL VM TO DO IT TO IT\n         SPACE 1\nTRYPRT5  CLC   DCTDEVN,=C'PRT5    ' Q. IS THIS PRINTER 5\n         BNE   TRYPRT6              A. NO - TRY NEXT PRINTER\n         B     DODIAG                  AND TELL VM TO DO IT TO IT\n         SPACE 1\nTRYPRT6  CLC   DCTDEVN,=C'PRT6    ' Q. IS THIS PRINTER 6\n         BNE   TRYPRT7              A. NO - TRY NEXT PRINTER\n         B     DODIAG                  AND TELL VM TO DO IT TO IT\n         SPACE 1\nTRYPRT7  CLC   DCTDEVN,=C'PRT7    ' Q. IS THIS PRINTER 7\n         BNE   OOPS                 A. NO - OOPS\n         B     DODIAG                  AND TELL VM TO DO IT TO IT\n         SPACE 1\nDODIAG   NOP   DODIAG1                 A NOP 1ST TIME\n         MVI   *-3,X'F0'               MAKE A BRANCH\n         L     R2,16                   START AT THE CVT\n         USING CVT,R2\n         L     R3,CVTJESCT             ADDR OF SUB-SYS CNTL TBL\n         DROP  R2                      DROP THE CVT\n         SPACE 1\n         USING JESCTID,R3\n         L     R2,JESSSCT              ADDR OF SUBSYS COMM TBL\n         DROP  R3                      DROP THE CVT\n         SPACE 1\n         USING SSCT,R2\nRMSGTLU  CLC   SSCTSNAM,=C'RMSG'       Q. IS THIS THE RMSG SUB-SYS\n         BE    GOTRMSG                 A. YES - SAVE THE ADDR\n         SPACE 1\n         L     R2,SSCTSCTA             POINT TO NEXT SSCVT\n         B     RMSGTLU\n         SPACE 1\nGOTRMSG  ST    R2,RMSGSSVT             SAVE ADDR OF RMSG SSCVT\n         SPACE 1\nDODIAG1  L     R2,RMSGSSVT             POINT TO SSCVT FOR RMSG\n         L     R3,SSCTSSVT             POINT TO SSVT FOR RMSG\n         DROP  R2\n         SPACE 1\n         USING SSVT,R3                 USE THE SSVT\n         LTR   R3,R3                   Q. IS RMSG ACTIVE\n         BZ    NORMSG                  A, NO - TIME TO STOP\n         SPACE 1\n         LA    R2,SSVTFRTN             POINT TO FUNCITON WORDS\n         LA    R2,256*4(R2)            POINT TO SRB VECTOR TABLE\n         L     R3,0(R2)                GET SRB VECTOR POINTER\n         SPACE 1\n         LTR   R3,R3                   Q. IS SRB AVAILABLE\n         BZ    NOSRB                   A. NO - TIME TO QUIT\n         DROP  R3\n         SPACE 1\n         MODESET KEY=ZERO              MATCH THE KEY IN COMMON\n         USING J2SRBD,R3\n         LA    R2,L'MSG                THE LENGTH OF CP CMD FOR DIAG 8\n         ST    R2,SRBDLEN              SAVE IT\n         L     R2,SRBDMSG              ADDR OF MSG HOLD AREA\n         MVC   SRBDMSG,JCTWORK         MOVE MSG TO SRB WORK AREA\n         L     R15,SRBDENT             GET ENTRY TO SRB ROUTINE\n         BALR  R14,R15                 LET THE RB DO THE DIAGNOSE\n         MODESET KEY=NZERO             BACK TO THE JES2 KEY\n         B     J1RETN8              RETURN TO JES2\n         DROP  R3\nNORMSG   WTO   'J2XIT01 - RMSG IS NOT AVAILABLE.  DRAIN ALL PRINTERS', X\n               ROUTCDE=(1),DESC=(2)\n         WTO   'J2XIT01 - CONTACT TECH SUPPORT',                       X\n               ROUTCDE=(1),DESC=(2)\n         B     J1RETN0\nNOSRB    WTO   'J2XIT01 - J2SRB01 NOT AVAILABLE.  DRAIN ALL PRINTERS', X\n               ROUTCDE=(1),DESC=(2)\n         WTO   'J2XIT01 - CONTACT TECH SUPPORT',                       X\n               ROUTCDE=(1),DESC=(2)\n         B     J1RETN8\n         SPACE 1\nOOPS     MVC   OOPSWTO+19(L'MSG),JCTWORK\nOOPSWTO  WTO   'JXT1 ERROR-.........1.........2.........3.........4....X\n               ....',                                                  X\n               ROUTCDE=(1),DESC=(2)\n         DROP  R10                 DONE WITH JCT\n         SPACE 2\n***********************************************************************\n*               COMMON EXIT ROUTINES                                  *\nJ1RETN0  LA    R15,0               0 = PRODUCE SEPARATOR PAGE    PLB\n         B     J1RETURN            ALL DONE\n         SPACE 1\n         SPACE 1\nJ1RETN8  LA    R15,8               PRINT MY HEADER PAGE\n         SPACE 1\nJ1RETURN $RETURN RC=(R15)          RETURN TO JES WITH RC IN REG 15\n         SPACE 2\n***********************************************************************\n*               CONSTANTS AND OTHER STUFF                             *\nMODEL    DC    CL80' JOB NAME=XXXXXXXX PRINTER=XXXXXXXX JOB ID=XXXXXXXXC\n                PRTCLASS=X'\nMODJOB   EQU   MODEL+10,8\nMODPRT   EQU   MODEL+27,8\nMODID    EQU   MODEL+43,8\nMODCLS   EQU   MODEL+61,1\n*\nRMSGSSVT DC    A(0)                SAVE ADDR OF RMSG SSCVT\nMSG      DC    CL48'CLOSE CUU DIST 12345678 NAME 12345678 LISTING '\nFIXSTART EQU   *         START OF PGFIX AREA\nP1DIAG   DC    CL48' '    ONE\nP2DIAG   DC    CL48' '       SLOT\nP3DIAG   DC    CL48' '           FOR\nP4DIAG   DC    CL48' '              EACH\nP5DIAG   DC    CL48' '                  JES2\nP6DIAG   DC    CL48' '                      VIRTUAL\nP7DIAG   DC    CL48' '                             PRINTER\nFIXEND   EQU   *         END OF PGFIX AREA\n         SPACE  2\n         LTORG\n         $MODEND\n***********************************************************************\n*                 NON-JES2 DSECTS                                     *\nJ2SRBD   DSECT    J2SRB DSECT FOR SRB VECTOR TABLE\nSRBDENT  DS    A                ENTRY POINT ADDRESS\nSRBDLEN  DS    F                LENGTH OF CLOSE MESSAGE\nSRBDMSG  DS    CL80             THE ACTUAL CLOSE MSG\n         CVT   DSECT=YES\n         IEFJESCT\n         IEFJSCVT\n         IEFJSSVT\n*\n         END\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "J2XIT02": {"ttr": 1287, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "          TITLE 'JES2-EXIT2  ADD /*ROUTE TO NJE JOBS   '\n***********************************************************************\n*                                                                     *\n*     MODIFICATIONS :                                                 *\n*     BETO - ADDED CODE TO CHECK FOR STC'S FIRST.  IF TRUE THEN       *\n*            INSERT ACCT NO. INTO STC GENERATED JOBCARD (FOR JARS).   *\n*                                                                     *\n*     BETO - ADDED CODE TO CHECK FOR CICS RUNNING AS AN STC.  IF SO,  *\n*            INSERT CICS ACCT NO., MSGCLASS & MSGLEVEL.               *\n*                                                                     *\n*                                                                     *\n*     THE ORIGINAL RULES :                                            *\n*        STC JOBS ARE EXEMPT                                          *\n*        TSU JOBS ARE EXEMPT                                          *\n*                                                                     *\n*      ALL JOBS ENTERING THE SYSTEM VIA THE NJE LINK WILL HAVE A      *\n*      \"/*ROUTE PRINT ALRGMVS1\"                                       *\n*      ADDED TO THE JOB STREAM.                                       *\n*                                                                     *\n*      THIS CARD IS REQUIRED TO FORCE ALL OUTPUT TO SPOOL TO THE      *\n*      VM PRINTERS, AND EVENTUALLY BACK TO THE CMS USER.              *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n***********************************************************************\n*           COMMON SETUP FOR EXIT2                                    *\n         COPY  $HASPGBL\nJ2XIT02  $MODULE                                                       X\n               $HASPEQU,                                               X\n               $BUFFER,                                                X\n               $JCT,                                                   X\n               $JQE,                                                   X\n               $PCE,                                                   X\n               $CAT,                                                   X\n               $HCT,                                                   X\n               $MIT,                                                   X\n               $LRC,                                                   X\n               $DCT,                                                   X\n               $RDRWORK\n         SPACE 1\n***********************************************************************\n*               THE MAIN AND ONLY LOGIC                               *\n         SPACE 1\nJ2XIT02E $ENTRY\n         $SAVE  (R14,R12)\n         LR    R8,R15                  SET BASE REG\n         SPACE 1\n         USING PCE,R13                 THE PCE IS CONNECTED TO\n         L     R9,PCEDCT               THE DCT\n         DROP  R13\n*\n         USING JCT,R10                 MAKE IT ACCESSABLE         BJM\n         CLI   JCTJOBID,C'S'           Q. IS THIS AN STC ?        BJM\n         BE    STCACCT                 A. YES - GO INSERT ACTTNO. BJM\n*\n         USING DCT,R9                  USE THE DCT\n         CLI   DCTDEVN,C'L'            Q. CAN THIS BE A NJE LINK\n         BNE   EXITOK                  A. NO\n         SPACE 1\n         CLI   DCTDEVN+1,C'0'          Q. IS THIS A NUMBER\n         BL    EXITOK                  A. NO - IT IS NOT A NJE LINK\n         DROP  R9\n         SPACE 1\nNOTNJE   L     R3,0(R1)                POINT TO JOB CARD\n         SPACE 1\n         CLI   71(R3),C' '             Q. ANYTHING IN COL 72\n         BNE   EXITOK                  A. YES - JUST EXIT\n         SPACE 1\n         LA    R3,2(R3)                JUMP OVER //\n         LA    R4,69                   SET SCAN LIMIT\n         CLI   0(R3),C' '              Q. IS THIS THE FIRST CARD\n         BE    CONTCARD                A. NO - GO TO CONTINATION CARD\n         SPACE 1\n         SPACE 1\nJOB1     CLC   0(5,R3),=C' JOB '       Q. IS THIS THE JOB IDENTIFIER\n         BE    JOB2                    A. YES\n         LA    R3,1(R3)                BUMP THE INDEX\n         BCT   R4,JOB1                 LOOP UNTIL ' JOB ' FOUND\n         B     EXITOK                  IT IS BAD - LET JES2 TAKE IT\n         SPACE 1\nJOB2     LA    R3,5(R3)                JUMP OVER 'JOB '\n         S     R4,=F'5'                DECRIMENT THE REMAINING LENGTH\n         SPACE 1\nCONTCARD CLI   0(R3),C' '              Q. IS THIS POSITION BLANK\n         BNE   SCAN1                   A. NO - START THE SCAN\n         LA    R3,1(R3)                BUMP THE INDEX\n         BCT   R4,CONTCARD             CONTINUE THE SCAN\n         B     EXITOK                  SOMETHING IS WRONG\n         SPACE 1\nSCAN1    CLC   0(2,R3),=C', '          Q. IS THIS CARD CONTINUED\n         BE    EXITOK                  A. YES - JUST EXIT\n         SPACE 1\n         CLI   0(R3),C''''             Q. IS THIS A QUOTE\n         BNE   SCAN3                   A. NO - THEN CONDINUE\n         SPACE 1\n         LA    R3,1(R3)                BUMP THE INDEX\n         BCTR  R4,0                    DECRIMENT THE LENGTH\n         SPACE 1\nSCAN2    CLI   0(R3),C''''             Q. ENDING QUOTE\n         BE    SCAN3                   A. YES - THATS GOOD\n         LA    R3,1(R3)                BUMP THE INDEX\n         BCT   R4,SCAN2                CONTINUE TO LOOK FOR NEXT QUOTE\n         B     EXITOK                  NOT FOUND - LET JES2 TAKE IT\n         SPACE 1\nSCAN3    CLI   0(R3),C' '              Q. IS THIS THE END\n         BE    ISEND                   A. YES - THATS GOOD\n         SPACE 1\n         LA    R3,1(R3)                BUMP THE INDEX AGAIN\n         BCT   R4,SCAN1                AND START ALL OVER AGAIN\n         SPACE 1\n         CLI   0(R3),C','              IS THE LAST POSITION A COMMA\n         BE    EXITOK                  A. YES - THEN EXIT\n         SPACE 1\nISEND    MVC   JCTXWRK,ROUTPRT         MOVE THE ROUTE CARD TO JCT WORK\n         L     R2,4(R1)                POINT TO THE RXITFLAG\n         OI    0(R2),X'10'             TELL JES2 ABOUT ROUTE CARD\n         B     EXITOK\n         SPACE 1\n***********************************************************************\nSTCACCT  L     R3,0(R1)                GET ADDR OF JOB CARD        BJM\n         CLC   JCTJNAME(4),=C'CICS'    IS THIS A CICS REGION ?     BJM\n         BE    CICSNUM                 YES, INSERT CICS JCARD PARM BJM\n         MVC   14(L'ACCTNO,R3),ACCTNO  OTHERWISE, INSERT STC PARMS BJM\n         B     EXITOK                  TIME TO LEAVE               BJM\nCICSNUM  MVC   14(L'CICSACCT,R3),CICSACCT  INSERT CICS JCARD PARMS BJM\n         B     EXITOK                  TIME TO LEAVE               BJM\n***********************************************************************\n*               EXIT ROUTINE                                          *\nEXITOK   LA    R15,0                SET GOOD RETURN CODE\n         SPACE 1\nEXIT     $RETURN RC=(R15)           COMMON EXIT ROUTINE\n         SPACE 1\n***********************************************************************\n*                  CONSTANTS ETC                                      *\nROUTPRT  DC    CL80'/*ROUTE PRINT ALRGMVS1'\nACCTNO   DC    CL20' 55MVSOVD,MSGLEVEL=1'\nCICSACCT DC    CL33' 55CICS,MSGLEVEL=(1,1),MSGCLASS=J'\n         SPACE 1\n         LTORG\n         $MODEND\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "J2XIT03": {"ttr": 1291, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'JES2 SP1.3 EXIT 03 - VERIFY ACCOUNT NUMBER ON JOBCARD'\n***********************************************************************\n*                                                                     *\n*  INTENT:  THIS EXIT WILL LOAD A VALID-JOB-ACCOUNT-NUMBER TABLE INTO *\n*           STORAGE (AT JES2 STARTUP); IT WILL VERIFY ALL BATCH JOBS  *\n*           TO MAKE SURE THEY USE VALID ACCT. NOS.; IT WILL RECOGNIZE *\n*           A \"TRIGGER\" ACCT. NO. THAT WILL CAUSE THE EXIT TO REFRESH *\n*           ITS COPY OF THE VALID-JOB-ACCOUNT-NUMBER TABLE; IT WILL   *\n*           ALSO RECOGNIZE A \"BYPASS\" ACCOUNT NUMBER THAT WILL DISABLE*\n*           THIS EXIT.                                                *\n*                                                                     *\n***********************************************************************\n         PRINT NOGEN\n         COPY  $HASPGBL\nJ2XIT03  $MODULE                                                       *\n               $HASPEQU,                                               *\n               $BUFFER,                                                *\n               $MIT,                                                   *\n               $PCE,                                                   *\n               $JCT,                                                   *\n               $HCT,                                                   *\n               $RDRWORK\n         SPACE 2\n***********************************************************************\n*             START MAINLINE                                          *\nJ2XIT03E $ENTRY CSECT=YES\n         $SAVE\n         LR    R12,R15              ESTABLISH BASE REG\n         USING J2XIT03E,R12         ADDRESSABILITY TO THIS CSECT\n         USING JCT,R10              ADDRESSABILITY TO JCT\n         SPACE 1\n         LR    R2,R0                SAVE LENGTH-OF-ACCT-NUM-FIELD VALUE\n         LM    R3,R5,0(R1)          R3 = ADDR OF JCTWORK (ACCT FIELD)\n*                                   R4 = ADDR OF RDWFLAGX BYTE IN PCE\n*                                   R5 = ADDR OF JCTXWRK FIELD IN JCT\n         SPACE 1\n         CLC   TABLADDR,=F'0'      Q. HAS TABLE BEEN LOADED (EVER) ?\n         BNE   CHKJOB              A. YES - GO CHECK JOB TYPE\n         LOAD  EP=J2TBL03          LOAD TABLE AND SEARCH ROUTINE\n         ST    R0,TABLADDR         SAVE TABLE-SEARCH ENTRY POINT\n         SPACE 1\nCHKJOB   CLI   JCTJOBID,C'J'       Q. IS THIS A BATCH JOB ?\n         BNE   EXITRC08            A. NO - TSO OR STC SO ALLOW/IGNORE\n         SPACE 1\n         CLC   0(8,R3),=C'99REFRSH' Q. TIME TO REFRESH ACCT NUM TABLE?\n         BNE   CHKBYPAS            A. NO - CHECK \"BYPASS\" EXIT SWITCH\n         SPACE 1\n         DELETE EP=J2TBL03          GET RID OF PREVIOUS COPY OF MODULE\n         LOAD  EP=J2TBL03          LOAD TABLE AND SEARCH ROUTINE\n         ST    R0,TABLADDR         SAVE TABLE-SEARCH ENTRY POINT\n         B     EXITRC12            NOW CANCEL \"REFRESH\" JOB AND LEAVE\n         SPACE 1\nCHKBYPAS CLC   TABLADDR,=X'FFFFFFFF' Q. HAS BYPASS SWITCH BEEN SET ON?\n         BE    EXITRC08            A. YES - ALLOW ALL JOBS AND LEAVE\n         SPACE 1\n         LTR   R2,R2               Q. DOES JOBCARD HAVE ACCT NUM ?\n         BZ    EXITRC12            A. NO - CANCEL JOB AND LEAVE\n         SPACE 1\n         CLC   0(8,R3),=C'99BYPASS' Q. WANT TO BYPASS EXIT ?\n         BNE   CHKJOB2             A. NO - CONTINUE VERIFYING ACCT NO.\n         MVC   TABLADDR,=X'FFFFFFFF'      SET BYPASS SWITCH ON\n         B     EXITRC12            LEAVE AND CANCEL \"BYPASS\" JOB\n         SPACE 1\n***********************************************************************\n*            CALL SUBROUTINE TO VERIFY ACCOUNT INFORMATION            *\nCHKJOB2  L     R15,TABLADDR        LOAD R15 WITH SUBROUTINE ADDR\n         CALL  (15)                INVOKE ACCT NO. VERIFY SUBROUTINE\n         SPACE 1\n         B     *+4(R15)            BRANCH USING R15 AS A VECTOR(0 OR 4)\n         B     EXITRC08            MEANS ACCT. NO. WAS VALID\n         B     EXITRC12            MEANS ACCT. NO. WAS NOT VALID\n***********************************************************************\n*            ALLOW JOB TO RUN                                         *\nEXITRC08 LA    R15,8             SET GOOD RETURN CODE (ACCT IS VALID)\n         $RETURN RC=(R15)        THEN RETURN TO JES2\n         SPACE 1\n***********************************************************************\n*            CANCEL JOB                                               *\nEXITRC12 LA    R15,12            SET BAD RETURN CODE (CANCEL JOB)\n         $RETURN RC=(R15)        THEN RETURN TO JES2\n         SPACE 1\nTABLADDR DC    F'0'\n         SPACE 1\n         LTORG\n         $MODEND\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "J2XIT04": {"ttr": 1294, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'JES2 SP1.3 EXIT 04 - REMOVE JOB/STEPCAT CARDS'\n***********************************************************************\n*                                                                     *\n*  INTENT:  THIS EXIT WILL COMMENT OUT JOB AND STEPCAT DD CARDS WHEN  *\n*           THEY ARE INCLUDED OUTSIDE OF PROCS.  A SEPERATE JES2      *\n*           EXIT MUST BE USED TO CATCH STEPCATS INSIDE OF PROCEDURES. *\n*                                                                     *\n* 6-17-85   MODIFIED TO COMMENT OUT CONCATENATED DD CARDS.            *\n* 6-27-85   MODIFIED TO ADD DEFAULT //NJE OUTPUT CARDS.               *\n*                                                                     *\n***********************************************************************\n         PRINT NOGEN\n         COPY  $HASPGBL\nJ2XIT04  $MODULE                                                       *\n               $HASPEQU,                                               *\n               $BUFFER,                                                *\n               $JQE,                                                   *\n               $MIT,                                                   *\n               $PCE,                                                   *\n               $JCT,                                                   *\n               $LRC,                                                   *\n               $CAT,                                                   *\n               $HCT,                                                   *\n               $DCT,                                                   *\n               $RDRWORK\n         SPACE 2\n***********************************************************************\n*             START MAINLINE                                          *\nJ2XIT04E $ENTRY CSECT=YES\n         $SAVE\n         LR    R8,R15              ESTABLISH BASE REG\n         SPACE 1\n         LTR   R0,R0               Q. IS THIS A JCL CARD\n         BZ    EXITOK              A. NO - IT IS A JECL CARD - EXIT\n         SPACE 1\n         CLC   8(4,R1),=F'0'       Q. DO I HAVE A JCT YET\n         BE    EXITOK              A, NO - I DON'T WANT A 0C4 - EXIT\n         SPACE 1\n         USING JCT,R10\n         SPACE 1\n         L     R2,4(R1)            POINT TO RXITFLAG\n         TM    0(R2),X'02'         Q. JECL CARD\n         BO    EXITOK              A. YES - JUST EXIT\n         SPACE 1\n         L     R12,0(R1)           POINT TO JCL CARD\n         CLC   0(2,R12),=C'//'     Q. IS THIS A JCL CARD\n         BNE   EXITOK              A. NO - BYPASS IT\n         SPACE 1\n         CLC   =C'//SYSIN',0(R12)  Q. IS THIS A SYSIN STATEMENT\n         BE    EXITOK              A. YES - THERE MAY BE NO STEPS\n         SPACE 1\n         CLC   JCTJNAME,JCTUSER0   Q. FIRST TIME IN\n         BE    VMLINK2             A. NO - TEST FOR JCL INSERTS\n         SPACE 2\n***********************************************************************\n*             THIS IS THE FIRST TIME IN - DO MORE CHECKING            *\n         SPACE 1\n         CLC   0(7,R12),=C'//SYSIN' IF THE USER HAS SUBMITTED A JOB\n         BE    EXITOK               WITHOUT A VALID JCL CARD AS THE\n*                                   FIRST CARD, THEN IGNORE IT\n         SPACE 1\n         MVC   JCTUSER0(8),JCTJNAME SET JOB NAME IN USER AREA\n         MVC   JCTUSER2,=F'0'       CLEAR SWITCH AREA\n         SPACE 1\n         USING PCE,R3              SETUP TO USE THE PCE\n         L     R3,PCEDCT           GET ADDR OF DCT FROM PCE\n         DROP  R3                  NOW DROP THE PCE\n         SPACE 1\n         USING DCT,R3              NOW USE THE DCT\nVMLINK   CLC   =C'STC',DCTDEVN     Q. IS THIS A STARTED TASK\n         BE    NOT1ST              A. YES - NO OUTPUT CARDS REQUIRED\n         SPACE 1\n         CLI   DCTDEVN,C'L'        Q. IS THIS A NJE XMITTER\n         BNE   VMLINK1             A. NO\n         SPACE 1\n         CLI   DCTDEVN+1,C'0'      Q. IS THIS A NUMBER\n         BL    VMLINK1             A. NO - IT IS NOT A NJE XMITTER\n         OI    JCTUSER2,X'80'      SHOW THIS IS A NJE XMITTER\n         SPACE 1\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n*\n*  THIS ROUTINE WILL DO THE FOLLOWING:\n*   1) MOVE THE CURRENT JCL CARD TO THE JCT WORK AREA\n*   2) MOVE AN OUTPUT JCL CARD TO THE JES2 JCL BUFFER\n*   3) SET THE PROPER FLAGS TO TELL JES2 THAT THE JCL CARD IN THE\n*      JCT WORK AREA IS THE NEXT CARD.\n*\n         SPACE 1\nVMLINK1  L     R12,0(R1)           POINT TO JCL CARD\n         MVC   JCTXWRK(80),0(R12)  MOVE JCL CARD TO JCT WORK AREA\n         MVC   0(80,R12),$LOCAL    MOVE $LOCAL CARD TO JCL AREA\n         L     R2,4(R1)            GET ADDR OF RXITFLG BYTE\n         OI    0(R2),X'10'         TELL JES2 THIS IS THE NEXT CARD\n         B     EXITOK              NOW LET JES2 PROCESS THE CARD\n         SPACE 1\nVMLINK2  TM    JCTUSER2,X'80'      Q. IS THIS A NJE XMITTER\n         BNO   NOT1ST              A. NO - NO MORE INSERTS REQUIRED\n         SPACE 1\n         TM    JCTUSER2,X'40'      Q. DO WE NEED A $JESDS CARD\n         BO    VMLINK3             A. NO - TRY FOR $DEFAULT\n         SPACE 1\n         L     R12,0(R1)           POINT TO JCL CARD\n         MVC   JCTXWRK(80),0(R12)  MOVE JCL CARD TO JCT WORK AREA\n         MVC   0(80,R12),$JESDS    MOVE $JESDS CARD TO JCL AREA\n         L     R2,4(R1)            GET ADDR OF RXITFLG BYTE\n         OI    JCTUSER2,X'40'      SHOW THAT WE HAVE A $JESDS CARD\n         OI    0(R2),X'10'         TELL JES2 THIS IS THE NEXT CARD\n         B     EXITOK              NOW LET JES2 PROCESS THE CARD\n         SPACE 1\nVMLINK3  TM    JCTUSER2,X'20'      Q. DO WE NEED A $DEFAULT CARD\n         BO    NOT1ST              A. NO - WE ARE DONE\n         SPACE 1\n         L     R12,0(R1)           POINT TO JCL CARD\n         MVC   JCTXWRK(80),0(R12)  MOVE JCL CARD TO JCT WORK AREA\n         MVC   0(80,R12),$DEFAULT  MOVE $DEFAULT CARD TO JCL AREA\n         L     R2,4(R1)            GET ADDR OF RXITFLG BYTE\n         OI    JCTUSER2,X'20'      SHOW THAT WE HAVE A $JESDS CARD\n         OI    0(R2),X'10'         TELL JES2 THIS IS THE NEXT CARD\n         B     EXITOK              NOW LET JES2 PROCESS THE CARD\n         SPACE 1\n***********************************************************************\n*             NOW IT IS TIME TO CHECK FOR JOB/STEPCAT CARDS           *\nNOT1ST   CLI   JCTJCLAS,C'0'       Q. IS THIS TECH SUPPORT\n         BNL   EXITOK              A. YES - JUST EXIT WITHOUT CHECKING\n         SPACE 1\n         L     R12,0(R1)           POINT TO JCL CARD\n         SPACE 1\n         CLC   =C'JOBCAT',2(R12)   Q. IS THIS A JOBCAT DD CARD\n         BE    CATCARD             A. YES\n         SPACE 1\n         CLC   =C'STEPCAT',2(R12)  Q. IS THIS A STEPCAT DD CARD\n         BE    CATCARD             A. YES\n         SPACE 1\n         TM    JCTUSER2+1,X'80'    Q. IS THERE A JOB/STEPCAT\n         BNO   EXITOK              A. NO - JUST EXIT\n         SPACE 1\n         CLI   2(R12),C' '         Q. CONCATINATION\n         BE    CATCARD             A. YES - FIX IT\n         SPACE 1\n         MVI   JCTUSER2+1,X'00'    CLEAR THE SWITCH\n         B     EXITOK              JUST EXIT FOR GOOD GUY\n         SPACE 1\nCATCARD  MVI   2(R12),C'*'\n         OI    JCTUSER2+1,X'80'    FOUND A JOB/STEPCAT CARD\n         SPACE 2\n***********************************************************************\n*            WE HAVE DONE WHAT WE CAME HERE TO DO - NOW LEAVE         *\nEXITOK   SR    R15,R15           SET GOOD RETURN\n         $RETURN RC=(R15)        THEN RETURN TO JES2\n         SPACE 1\n$DEFAULT DC    CL80'//$DEFAULT OUTPUT DEST=ALRGMVS1,DEFAULT=YES'\n$JESDS   DC    CL80'//$JESDS   OUTPUT DEST=ALRGMVS1,JESDS=ALL'\n$LOCAL   DC    CL80'//$LOCAL   OUTPUT DEST=ALRGMVS1'\n         SPACE 1\n         LTORG\n         $MODEND\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "J2XIT09": {"ttr": 1540, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'J2XIT09 - SP1.3.6 OUTPUT EXCESSION FOR TEST JOBS'\n***********************************************************************\n*                                                                     *\n*  INTENT:  THIS EXIT WILL ENFORCE OUTPUT EXCESSION FOR ALL TEST      *\n*           JOBS.  TEST JOBS ARE DEFINED AN ANY JOB THAT DOES NOT     *\n*           HAVE A 'P' IN THE FIRST POSTION OF THE JOB NAME.          *\n*           STARTED TASKS ARE EXEMPT.                                 *\n*           TSO USERS ARE NOT EXEMPT.                                 *\n*                                                                     *\n*  NOTE :   THIS EXIT *MUST* BE IN LPA (FROM A CLPA/MLPA) - NO STEPLIB*\n***********************************************************************\n         PRINT NOGEN\n         COPY  $HASPGBL ,      REQUIRED FOR ALL EXITS\nJ2XIT09  $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X\n               ENVIRON=USER,                                           X\n               $HASPEQU,       REQUIRED FOR ALL EXITS                  *\n               $BUFFER,        REQUIRED FOR ALL EXITS                  *\n               $MIT,           REQUIRED FOR ALL EXITS                  *\n               $JCT,           REQUIRED FOR ALL EXITS                  *\n               $SCAT,          REQUIRED FOR EXIT 09                    *\n               $XECB,          REQUIRED FOR EXIT 09                    *\n               $SVT            REQUIRED FOR EXIT 09\n*              $PCE,           REQUIRED FOR ALL EXITS                 *\n*              $JQE,           REQUIRED FOR ALL EXITS                 *\n*              $CAT,           REQUIRED FOR ALL EXITS                 *\n*              $HCT,           REQUIRED FOR ALL EXITS                 *\n         SPACE 2\n***********************************************************************\n*             SETUP THE EXIT                                          *\n         SPACE 1\nJ2XIT09E $ENTRY CSECT=YES,BASE=R12\n         SPACE 1\n         SAVE  (14,12)             SAVE THE REGS\n         LR    R12,R15             LOAD BASE REGISTER\n         SPACE 2\n***********************************************************************\n*             TEST JOB TYPE AND OUPTPUT EXCESSION                     *\n         SPACE 1\n         NOP   0                   WTO   'J2XIT09 ENTER'\n         LR    R10,R7              SET PROPER REG FOR JCT\n         USING JCT,R10             NEED TO LOOK AT THE JCT\n         SPACE 1\n         CLI   JCTJOBID,C'J'       Q. IS THIS A JOB\n         BNE   EXITOK              A. NO - MUST BE A STC OR TSO TASK\n         SPACE 1\n         CLI   JCTJNAME,C'P'       Q. IS IT A PRODUCTION JOB\n         BE    EXITOK              A. YES - LET IT LIVE\n         SPACE 1\n         CLI   JCTJNAME,C'Q'       Q. IS IT A USER PRODUCTION JOB\n         BE    EXITOK              A. YES - LET IT LIVE\n         SPACE 1\n         DROP  R10\n         SPACE 2\n***********************************************************************\n*             EXIT ROUTINES                                           *\n         SPACE 1\nKILLJOB  NOP   0                   WTO   'J2XIT09 KILLJOB'\n         LA    R15,8               SET RETURN CODE 8 (KILL JOB)\n         L     R0,STOPWORD         KILL THIS SUCKER\n         B     EXITALL             COMMON EXIT\n         SPACE 1\nEXITOK   NOP   0                   WTO   'J2XIT09 EXITOK'\n         SR    R15,R15             SET GOOD RETURN\n         L     R0,CONTWORD         JUST CONTINUE\n         SPACE 1\nEXITALL  ST     R0,20(R13)         SET RETURN WORD\n         RETURN (14,12),RC=(15)    RETURN TO JES2\n         SPACE 2\n***********************************************************************\n*             CONSTANTS AND OTHER STUFF                               *\n         SPACE 1\n         DS    0F              FOR ALIGNMENT\nSTOPWORD DC    X'80000001'     TELL JES2 TO CANCEL THIS JOB\nCONTWORD DC    X'80000000'     TELL JES2 TO CONTINUE\n         LTORG\n         $MODEND\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QUITMVS": {"ttr": 1543, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*  THIS MEMBER CONTAINS COMMANDS FOR THE RMSG 'QUIT MVS' COMMAND\n/*$VS,'$PLNE3'\n/*$VS,'$PPRT1,PRT2,PRT3,PRT4,PRT5,PRT6,PRT7'\n/*$VS,'P RMF'\n/*$VS,'S DSASTOP'\n/*$VS,'P OMEGAMON'\n/*$VS,'P EPILOGV'\n/*$VS,'Z NET,QUICK'\n/*$VS,'P OCCI407'\n/*$VS,'P EPILOGV'\n/*$VS,'P TSO'\n/*$VS,'P CLSESS'\n/*$VS,'P CLMENU'\n/*$VS,'P VCOMWTR.VCOMWTR'\n/*$VS,'F MSX,STOPMSX,LOCAL'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RCMD": {"ttr": 1545, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//RTPLBASM JOB (05DPTECH,TECH),'P BANKS',\n//             MSGCLASS=R,CLASS=A,\n// USER=UUUUUUUU,PASSWORD=PPPPPPPP\n//RCMD     EXEC PGM=IFOX00,PARM='DECK,NOLOAD'\n//*CMD  EXEC PGM=IEV90,PARM='DECK,NOLOAD'\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYS2.MACLIB,DISP=SHR\n//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(100,30))\n//SYSUT2   DD  UNIT=VIO,SPACE=(TRK,(100,30))\n//SYSUT3   DD  UNIT=VIO,SPACE=(TRK,(100,30))\n//SYSPUNCH DD  DSN=BANKS.SOURCE.OBJ(RCMD),DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD *\n         TITLE 'RCMD - ASK RMSG TO ISSUE SELECTED COMMANDS'\n*********************************************************************\n*                                                                   *\n* THIS PROGRAM ISSUES A REQUEST FOR RMSG TO ISSUE SELECTED COMMANDS.*\n* 2 SOURCES OF COMMANDS ARE AVAILABLE                               *\n* 1) FOR SINGLE COMMANDS, USE THE PARM PARAMETER                    *\n* 2) FOR MULTIPLE COMMANDS, USE SYSIN                               *\n*                                                                   *\n*********************************************************************\nRCMD     COMEIN\n         SR    R2,R2                  CLEAR WORK REG\n         L     R1,0(R1)               POINT TO PARM FIELD\n         CLC   0(2,R1),=H'0'          Q. ANY PARM\n         BE    TRYSYSIN               A. NO - LOOK AT SYSIN\n         SPACE 1\n         LH    R2,0(R1)               GET PARM LENGTH\n         BCTR  R2,0                   MINUS 1 FOR EXECUTE\n         EX    R2,SETCMD              PUT COMMAND IN INPUT AREA\n         BAL   R12,DOCMD              GO TO COMMON ROUTINE\n         B     EXIT                   NOW LEAVE\nSETCMD   MVC   INAREA(0),2(R1)        MOVE COMMAND TO INPUT AREA\n         SPACE 1\nTRYSYSIN OPEN  (SYSIN,INPUT)          OPEN SYSIN FOR COMMANDS\n         LA    R1,SYSIN               POINT TO THE DCB FOR SYSIN\n         USING IHADCB,R1\n         TM    DCBOFLGS,X'10'         Q. DID SYSIN OPEN OK\n         BZ    DOCMDI                 A. NO - NO COMMANDS FOUND\nGETCMD   GET   SYSIN,INAREA           READ A COMMAND\n         BAL   R12,DOCMD              PROCESS THE COMMAND\n         B     GETCMD                 LOOP FOR NEXT COMMAND\n         SPACE 1\nDOCMD    EQU   *\n         CLC   =C'SUPRA',INAREA       Q. START SUPRA INIT\n         BNE   DOCMD1                 A. NO\n         MVI   WTOTI+12,X'08'\n         MVI   WTOSI+12,X'08'\nWTOTI    WTO   'RCMD $TI10,V'\nWTOSI    WTO   'RCMD $SI10'\n         B     DOCMDX\nDOCMD1   CLC   =C'RLSE ',INAREA       Q. RELEASE A JOB\n         BNE   DOCMD2                 A. NO - INVALID REQUEST\n         MVI   WTORLSE+12,X'08'\n         MVC   JOBNAME,INAREA+5\nWTORLSE  WTO   'RCMD $A''JJJJJJJJ''' SEND RELEASE JOB CMD\nJOBNAME  EQU   WTORLSE+16,8\n         B     DOCMDX\nDOCMD2   CLC   =C'REFRESH ',INAREA    Q. REFRESH THE LLA\n         BNE   DOCMDI                 A. NO - INVALID REQUEST\n         MVI   WTOLLA+12,X'08'\nWTOLLA   WTO   'RCMD \u00acALL F LLA,REFRESH' REFRESH THE LLA ON ALL SYS\n         B     DOCMDX\nDOCMDI   CLI   INAREA,C'|'\n         BE    SPECIAL\n         SPACE 1\n         WTO   'RCMD-INVALID OR MISSING COMMAND REQUEST',ROUTCDE=11\n         B     DOCMDX\n         SPACE 1\nSPECIAL  MVI   INAREA,C' '            CLEAR THE DELIMITER\n         MVI   INAREA-1,X'08'\n         MVC   WTOCMD,INAREA-1        PUT IT IN A WTO\nRMSGWTO  WTO   'RCMD .........=.........=.........=',ROUTCDE=11\nWTOCMD   EQU   RMSGWTO+13,30\nDOCMDX   EQU   *\n         BR    R12                    RETURN TO CALLER\n         SPACE 1\nEODAD    CLOSE SYSIN\nEXIT     GETOUT\nFLAG     DC    X'07'                  SPECIAL FLAG FOR RMSG\nINAREA   DC    CL80' '                INPUT AREA\n         DS    0H                     FORCE ALIGNMENT\nSYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=EODAD\n         LTORG\n         DCBD\n         END\n//LKED      EXEC  PGM=IEWL,PARM='XREF,LIST,LET'\n//SYSPRINT  DD SYSOUT=*\n//SYSLIN    DD DDNAME=SYSIN\n//OBJLIB    DD DSN=BANKS.SOURCE.OBJ,DISP=SHR\n//SYSLIB    DD DSN=BANKS.SOURCE.LOAD,DISP=SHR\n//SYSLMOD   DD DSN=SYS6.LINKLIB,DISP=SHR\n//SYSUT1    DD SPACE=(1024,(50,20)),UNIT=SYSDA\n//SYSIN DD *\n INCLUDE OBJLIB(RCMD)\n NAME RCMD(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMSG": {"ttr": 1548, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//RTPLBMSG JOB (05DPTECH,TECH),'P BANKS',\n//             MSGCLASS=R,CLASS=2,\n// USER=UUUUUUUU,PASSWORD=PPPPPPPP\n//*XXXXXXX EXEC PGM=IFOX00,PARM='DECK,NOLOAD'\n//XXXXXXXX EXEC PGM=IEV90,PARM='DECK,NOLOAD'\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYS2.MACLIB,DISP=SHR\n//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(100,30))\n//SYSUT2   DD  UNIT=VIO,SPACE=(TRK,(100,30))\n//SYSUT3   DD  UNIT=VIO,SPACE=(TRK,(100,30))\n//SYSPUNCH DD  DSN=BANKS.SOURCE.OBJ(RMSG),DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSIN DD *\n         TITLE 'SUB-SYSTEM TO TRAP WTOR MSG FOR OPERATORS'\n***********************************************************************\n*                                                                     *\n*  10-25-87 PLB  MODIFIED TO RUN ON MULTIPLE SYSTEMS                  *\n*                CHANGED LOGIC TO ISSUES COMMANDS USING RMSGCMD PROC  *\n*                RESTRUCTURED SEARCH LOGIC                            *\n*                RESTRUCTURED CMD START LOGIC                         *\n*                                                                     *\n*                                                                     *\n*  THIS IS THE RMSG SUBSYSTEM.  IT IS LOADED BY THE RMSGLOAD PROGRAM. *\n*                                                                     *\n*  THIS PROGRAM IS LOADED INTO COMMON STORAGE (SP 241)                *\n*                                                                     *\n*  THE COMMUNICATIONS CHARACTER IS +                                  *\n*   SEE COMMENTS AROUND THE LABEL HELP FOR MORE INFORMATION.          *\n*                                                                     *\n*  THIS SUB-SYSTEM SEES ALL WTO WTOR AND OPERATOR COMMANDS.           *\n*                                                                     *\n*  RMSG WILL RESPOND TO BOTH WTOR AND WTO MESSAGES                    *\n*  I CAUTION THE USER AGAINST USING THIS PROGRAM WITHOUT FULLY        *\n*   UNDERSTANDING THE REPLIES AND ACTIONS TAKEN FOR EACH MESSAGE      *\n*   LISTED IN THE SOURCE CODE.                                        *\n***********************************************************************\n         SPACE 1\n***********************************************************************\n*                SUB-SYSTEM INITALIZATION                             *\nRMSG     CSECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         USING RMSG,R15\nRMSGINIT SAVE  (14,12)            SAVE THE REGS\n         LA    R2,SSVTRSV1        ADDR OF THE SSVT FOR RMSG\n         ST    R2,0(R1)           HOOK THE SSVT TO THE SSCVT\n         WTO   'RMSG1 RMSG CONNECTED TO SSVT'\n         RETURN (14,12)           RETURN TO RMSGLOAD\n         DROP  R15\n***********************************************************************\n*                THE REAL SSVT                                        *\n         DS    0F\nSSVTRSV1 DC    H'0'                 RESERVED\nSSVTFNUM DC    H'2'                 NUMBER OF FUNCTIONS SUPPORTED\nSSVTFCOD DC    256X'00'             FUNCTION MATRIX\n         ORG   SSVTFCOD+8           ORG TO FUNCTION 9\n         DC    X'01'                LOOK AT WTO MSGS\n         ORG   SSVTFCOD+9           ORG TO FUNCTION 10\n         DC    X'01'                LOOK AT COMMANDS\n         ORG   ,\nSSVTFRTN DC    256A(*-*)            256 WORD MATRIX TABLE\n         ORG   SSVTFRTN             ORG BACK TO 1ST WORD\n         DC    A(RMSGENT)           ENTRY TO RMSG FOR MESSAGES\n         ORG   ,\n         DC    A(*-*)       POINTER TO SRB VECTOR TBL FOR J2XIT01\n*\n         SPACE 1\n***********************************************************************\n*                NORMAL SUB-SYSTEM ENTRY                              *\n*                                                                     *\n*       R0 POINTS TO MY SSCVT                                         *\n*       R1 POINTS TO CURRENT SSOB                                     *\n*       R13 POINT TO A STANDARD SAVE AREA                             *\n*                                                                     *\n         SPACE 1\nRMSGENT  SAVE  (14,12)            SAVE THE REGS\n         LR    R3,R15             SET THE SUB-SYSTEM BASE\n         USING RMSGENT,R3\n         SPACE 1\n***********************************************************************\n*          SUBSYSTEM SELECTION ROUTINE                                *\n         SPACE 1\n         LR    R4,R1              SET SSOB BASE\n         NOP   PASTWTO\n         MVI   *-3,X'F0'\n******************************************************************BJM**\n*          SUBSYSTEM SELECTION ROUTINE                            BJM *\n         USING PSA,R0                                             BJM\n         L     R2,CVTPTR               CVT POINTER                BJM\n         USING CVT,R2                                             BJM\n         L     R5,CVTSMCA              POINT TO SMF CONTROL AREA  BJM\n         USING SMCABASE,R5                                        BJM\n         MVC   SID,SMCASID             SAVE SYSTEM ID  FOR LATER  BJM\n         SPACE 1\n***********************************************************************\n*         SETUP TO PROCESS MESSAGES                                   *\nPASTWTO  EQU   *\n         USING SSOB,R4\n         SPACE 1\n         CLC   SSOBFUNC,=H'9'     Q. IS THIS A WTO/R REQUEST\n         BE    TRYWTOR            A. YES - GO TO WTOR SCAN ROUTINE\n         SPACE 1\n         CLC   SSOBFUNC,=H'10'    Q. IS THIS A COMMAND\n         BE    TRYRMSG            A. YES - GO TO COMMAND SECTION\n         WTO   'RMSG MISSED FUNCTION'\n         B     QUICKXIT\n         SPACE 1\nTRYWTOR  TM    FUNCTION,$NOMSG    Q. PROCESS MESSAGES\n         BO    EXIT0              A. NO - JUST EXIT\n         SPACE 1\n         L     R5,SSOBINDV        POINT TO SSOB EXTENSION FOR WTO\n         USING SSWTBGN,R5\n         SPACE 1\n         L     R7,SSWTWQE         GET ADDRESS OF WQE FOR MESSAGE\n         USING WQE,R7\n         SPACE 1\n         LTR   R7,R7              Q. IS THERE A WQE\n         BZ    EXIT0              A. NO - SOMETHING IS WRONG - LEAVE\n         SPACE 1\n         L     R6,SSWTORE         GET REPLY ELEMENT ADDRESS\n         USING OREF,R6\n         SPACE 1\n         LTR   R6,R6              Q. IS THERE A REPLY ELEMENT\n         BZ    WTOMSG             A. NO - MUST BE A WTO MSG\n         SPACE 1\n***********************************************************************\n*         ROUTINE TO PROCESS WTOR MESSAGES                            *\n         SPACE 1                                                   BJM\n         CLC   =C'MSX048D',WQETXT+4 Q. MSX STARTUP MESSAGE         BJM\n         BE    REPLYY               A. YES - REPLY 'Y' TO IT       BJM\n         SPACE 1\n         CLC   =C'ICK508A',WQETXT+4 Q. ICKDSF VTOC CONVERSION\n         BE    REPLYU               A. YES - REPLY 'U' TO IT\n         SPACE 1\n         CLC   =C'IEC804A',WQETXT+4 Q. CU/DEVICE NOT OPERATIONAL\n         BE    IEC804A              A. YES - CHECK DEVICE ETC\n         SPACE 1\n         CLC   =C'IEF433D',WQETXT+4 Q. TAPE WAIT MSG               PLB\n         BE    IEF433D              A. YES - REPLY NOHOLD TO IT    PLB\n         SPACE 1\n         CLC   =C'IKT010D',WQETXT+4 Q. TSO SHUTDOWN W/USERS\n         BE    IKT010D              A. NO - TRY NEXT MSG\n         SPACE 1\n         CLC   =C'IKT012D',WQETXT+4 Q. TSO SHUTDOWN W/USERS\n         BE    REPLYU               A. YES - REPLY 'U' TO IT\n         B     EXIT0                MSG NOT WANTED - EXIT\n         SPACE 1\n*---  VERIFY REPLY IS FOR A TERMINAL AND NOT A  CONTROLLER\nIEC804A  LA    R12,WQETXT+13      START SCAN FOR DEVICE\n         LA    R11,10             LIMIT THE SCAN\n         LA    R1,POSTMSG         ASSUME WE WILL REPLY\n         SPACE 1\nSCANDEV  CLC   =C'DEVICE',0(R12)  Q. IS THIS A DEVICE MSG\n         BE    POSTIT             A. YES - PREPARE TO POST THE MSG\n         LA    R12,1(R12)         BUMP THE INDEX\n         BCT   R11,SCANDEV        CONTINUE THE SCAN\n         B     EXIT0              NOT FOUND - JUST EXIT\n*---  SETUP TO REPLY 'FSTOP' FOR TSO MSG\nIKT010D  LA    R1,FSTOPMSG        POINT TO R ##,FSTOP MSG\n         B     POSTIT             SEND THE REPLY\n         SPACE 1\n*---  SETUP TO REPLY 'NOHOLD' FOR TAPE MSG\nIEF433D  LA    R1,NOHOLD          POINT TO R ##,NOHOLD MSG\n         B     POSTIT             SEND THE REPLY\n         SPACE 1\n*---  SETUP TO REPLY 'U' TO WTOR\nREPLYU   LA    R1,UMSG\n         SPACE 1\n*---  SETUP TO REPLY TO THE MESSAGE\nPOSTIT   MVC   4+2(2,R1),OREID    SET THE REPLY NUMBER\nDOCMD    SR    R0,R0              SETUP TO SEND A COMMAND\n         SVC   34\n         B     EXIT0              LEAVE\n         SPACE 1\n*---  SETUP TO REPLY 'Y' TO WTOR                                   BJM\nREPLYY   LA    R1,YMSG                                             BJM\n         B     POSTIT                                              BJM\n         SPACE 1                                                   BJM\n*---  ISSUE A SERIES OF COMMANDS\nCMDLOOP  CLI   0(R2),X'FE'        Q. END OF TABLE                  PLB\n         BE    EXIT0              A. YES - WE ARE DONE             PLB\n         L     R1,0(R2)           LOAD COMMAND POINTER             PLB\n         SR    R0,R0              CLEAR R0                         PLB\n         SVC   34                 ISSUE COMMAND                    PLB\n         LA    R2,4(R2)           NEXT ENTRY                       PLB\n         B     CMDLOOP            ISSUE NEXT COMMAND               PLB\n         SPACE 1\n***********************************************************************\n*         ROUTINE TO PROCESS WTO MESSAGES                             *\nWTOMSG   EQU   *\n*---  QUICK INDEX TO MSG LOOKUP ROUTINES\n         CLI   WQETXT+1,C'$'         Q. IS IT A HASP MSG           PLB\n         BE    HASPMSG               A. YES - PROCESS IT           PLB\n         SPACE 1\n         CLC   =C'EC',WQETXT+1       Q. IS IT AN EPILOG MSG        PLB\n         BE    ECMSG                 A. YES - PROCESS IT           PLB\n         SPACE 1\n         CLC   =C'IEC',WQETXT+1      Q. IS IT A TAPE MSG           PLB\n         BE    IECMSG                A. YES - PROCESS IT           PLB\n         SPACE 1\n         CLC   =C'IEE',WQETXT+1      Q. IS IT AN IEE.. MSG         PLB\n         BE    IEEMSG                A. YES - PROCESS IT           PLB\n         SPACE 1\n         CLC   =C'IEF',WQETXT+1      Q. IS IT AN IEF.. MSG         PLB\n         BE    IEFMSG                A. YES - PROCESS IT           PLB\n         SPACE 1\n         CLC   =C'IST',WQETXT+1      Q. IS IT A TSO MSG            PLB\n         BE    ISTMSG                A. YES - PROCESS IT           PLB\n         SPACE 1\n         CLC   =C'+RCMD',WQETXT+1    Q. IS IT A RMSG REQUEST       PLB\n         BE    RCMD                  A. YES - PROCESS IT           PLB\n         SPACE 1\n         CLC   =C'SAR',WQETXT+1      Q. IS IT A SAR MSG            PLB\n         BE    SARMSG                A. YES - PROCESS IT           PLB\n         B     EXIT0                WE DON'T WANT IT - EXIT        PLB\n         SPACE 1\n*---  $HASP MESSAGE LOOKUP ROUTINE\nHASPMSG  CLC   =C'$HASP085',WQETXT+1 Q. IS JES SHUT DOWN\n         BE    HASP085               A. YES - ISSUE ZEOD\n         SPACE 1\n         CLC   =C'$HASP099',WQETXT+1 Q. IS JES IDLE\n         BE    HASP099               A. YES - TEST FOR SHUTDOWN\n         SPACE 1\n         CLC   =C'$HASP190',WQETXT+1 Q. IS THIS A JES SETUP MSG\n         BE    HASP190               A. YES - SCAN FOR DEVICE TYPE\n         SPACE 1\n         CLC   =C'$HASP373 PODOPEP',WQETXT+1 Q. START OF EPIUTIL ? BJM\n         BE    HASP373              A. YES - WHICH SYSTEM          PLB\n         B     EXIT0                WE DON'T WANT IT - EXIT        PLB\n         SPACE 1\n*---  EPILOG MESSAGE LOOKUP ROUTINE\nECMSG    CLC   =C'EC899:',WQETXT+1 Q. IS THE EPILOG DATBASE FULL?  BJM\n         BE    EC899               A. YES - FIX IT                 PLB\n         B     EXIT0                WE DON'T WANT IT - EXIT        PLB\n         SPACE 1\n*---  IEC.. MESSAGE LOOKUP ROUTINE\nIECMSG   CLC   =C'IECTMS3',WQETXT+1 Q. TAPE DENSITY CHANGE         PLB\n         BE    IECTMS3              A. YES - CHECK CODE            PLB\n         B     EXIT0                WE DON'T WANT IT - EXIT        PLB\n         SPACE 1\n*---  IEE.. MESSAGE LOOKUP ROUTINE\nIEEMSG   CLC   =C'IEE043I',WQETXT+1 Q. SYSLOG SWITCH               PLB\n         BE    IEE043               A. YES - START A TASK          PLB\n         SPACE 1\n*        CLC   =C'IEE362A',WQETXT+1 Q. SMF SWITCH                  PLB\n*        BE    IEE362               A. YES - START A TASK          PLB\n         B     EXIT0                WE DON'T WANT IT - EXIT        PLB\n         SPACE 1\n*---  RCMD MESSAGE LOOKUP ROUTINE\nRCMD     EQU   *\n         CLC   =C'+RCMD',WQETXT+1 Q. IS THIS A RMSGCMD REQUEST  PLB\n         BNE   EXIT0                A. NO - LEAVE                  PLB\n         SPACE 1\n*        CLI   WQETXT+6,X'08'       Q. GOOD MSG                    PLB\n*        BNE   EXIT0                A. NO - JUST EXIT              PLB\n         SPACE 1\nRCMDOK   MVC   RCMDCMD,WQETXT+7     MOVE COMMAND TO WTO\n         LA    R1,RCMDWTO\n         B     DOCMD                DO IT AND LEAVE\n         SPACE 1\n*---  IEF.. MESSAGE LOOKUP ROUTINE\nIEFMSG   EQU   *\n         CLC   =C'IEF257I',WQETXT+1 Q. REQUESTED SPACE NOT AVAIL. ?BJM\n         BE    IEF257I              A. YES - CHECK FOR PROD JOB    PLB\n         SPACE 1\n         CLC   =C'IEF452I',WQETXT+1 Q. JCL ERROR?                  PLB\n         BE    IEF452I              A. YES - CHECK FOR PROD JOB    PLB\n         SPACE 1\n         CLC   =C'IEF453I',WQETXT+1 Q. JCL ERROR?                  PLB\n         BE    IEF453I              A. YES - CHECK FOR PROD JOB    PLB\n         B     EXIT0                WE DON'T WANT IT - EXIT        PLB\n         SPACE 1\n*---  TSO MESSAGE LOOKUP ROUTINE\nISTMSG   CLC   =C'IST020I',WQETXT+1 Q. IS THIS A VTAM INIT COMPLETE ?\n         BE    IST020I              A. YES - START OTHER STUFF     PLB\n         B     EXIT0                WE DON'T WANT IT - EXIT        PLB\n         SPACE 1\n*---  SAR MESSAGE LOOKUP ROUTINE\nSARMSG   CLC   =C'SARSTC99',WQETXT+1 Q. SAR ERROR MESSAGE?         PLB\n         BNE   EXIT0                 A. NO - LEAVE                 PLB\n         B     DOLOLITE              SET ROLL DELETE & INFO ONLY   PLB\n         SPACE 1\n*---  JES2 TERMINATED - ISSUE 'Z EOD' IF QUIT MVS COMMAND USED\nHASP085  CLI   QUITSW,C'Y'          Q. WAS QUIT MVS CMD ISSUED\n         BNE   EXIT0                A. NO - JUST LEAVE\n         SPACE 1\n         MVI   QUITSW,C'N'          RESET IT\n         LA    R1,ZEOD              PREPARE TO DO 'Z EOD'\n         B     DOCMD                AND DO IT\n         SPACE 1\n*---  JES2 IS IDLE - ISSUE '$PJES2' IF QUIT MVS COMMAND USED\nHASP099  CLI   QUITSW,C'Y'          Q. WAS QUIT MVS CMD ISSUED\n         BNE   EXIT0                A. NO - JUST LEAVE\n         SPACE 1\n         LA    R1,PJES2             PREPARE TO STOP JES2\n         B     DOCMD                AND DO IT\n         SPACE 1\n*---  SCAN FOR DEVICE FOR SETUP MESSAGE\nHASP190  LA    R12,VPRINT           POINT TO TABLE OF VIRTUAL PRINTERS\nVPRTLOOP CLI   0(R12),X'FE'         Q. END OF TABLE\n         BE    EXIT0                A. YES - JUST EXIT\n         SPACE 1\n         CLC   WQETXT+27(8),0(R12)  Q. IS THIS A VIRTUAL PRINTER\n         BE    VPRTOK               A. YES - SET IT UP\n         LA    R12,8(R12)           INDEX TO NEXT ENTRY\n         B     VPRTLOOP             AND LOOP\n         SPACE 1\nVPRTOK   MVC   $SPRTID,WQETXT+27    MODIFY START PRINTER COMMAND\n         LA    R1,$SPRT             POINT TO IT\n         B     DOCMD                AND ISSUE THE COMMAND\n         SPACE 1\n*---  CHECK FOR PRODUCTION JOB - IF IT IS, HIGHLIGHT THE MSG\nIEF452I  EQU   *\nIEF453I  EQU   *\nIEF257I  EQU   *\nIEF722I  EQU   *\n         CLI   WQETXT+9,C'P'        Q. IS JOBNM (IN MSG) FOR PROD? BJM\n         BNE   EXIT0                A. NO - DON'T WANT THIS JOB    PLB\n         SPACE 1\n         CLI   WQETXT+16,C' '       Q. IS JOB NAME 8 CHARACTERS    PLB\n         BE    EXIT0                A. NO - NOT A VALID PROD JOB   PLB\n         SPACE 1\n         CLC   =C'PEDERSEN',WQETXT+9 Q. IS THIS VICKI              PLB\n         BE    EXIT0                 A. YES - IT'S NOT PRODUCTION  PLB\n         SPACE 1\n         B     DOHILITE\n         SPACE 1\nDOHILITE MVI   WQEDC1,WQEDCB        SET DESC CODE TO HI-LITE MSG   BJM\n         B     EXIT0                TIME TO LEAVE                  BJM\n         SPACE 1\nDOLOLITE MVI   WQEDC1,WQEDCF        SET DESC CODE TO JOB STATUS    PLB\n         MVI   WQEROUT1,WQEROUTB    SET ROUTE CODE TO INFORMATION  PLB\n         B     EXIT0                TIME TO LEAVE                  PLB\n         SPACE 1\n*---  VTAM IS STARTED - NOW START OTHER TASKS\nIST020I  LA    R2,VTAMMVS1        ASSUME MVS1 SYSTEM               PLB\n         CLC   SID,=C'MVS1'       Q. ARE WE RUNNING ON MVS NATIVE? BJM\n         BE    CMDLOOP            A. YES - ISSUE COMMANDS          BJM\n         SPACE 1\n         CLC   SID,=C'MINI'       Q. ARE WE RUNNING ON MVS TEST    PLB\n         BE    CMDLOOP            A. YES - ISSUE COMMANDS          PLB\n         SPACE 1\n         LA    R2,VTAMMXAT        ASSUME MVS/XA TEST SYSTEM        PLB\n         CLC   SID,=C'MXAT'       Q. ARE WE RUNNING ON XA TEST     PLB\n         BE    CMDLOOP            A. YES - ISSUE COMMANDS          PLB\n         SPACE 1\n         LA    R2,VTAMMVS2        ASSUME MVS2 SYSTEM               PLB\n         CLC   SID,=C'MVS2'       Q. ARE WE RUNNING ON MVS/VM      PLB\n         BE    CMDLOOP            A. YES - ISSUE COMMANDS          PLB\nSIDBAD   WTO   'RMSG MVS SYSTEM ID NOT KNOWN',DESC=1,ROUTCDE=1     PLB\n         B     EXIT0\n         SPACE 1\n*---  EPILOG IF FULL UNLOAD IT AND RESTART IT\nEC899    LA    R2,EPMVS1          ASSUME MVS NATIVE                PLB\n         CLC   SID,=C'MVS1'       Q. ARE WE RUNNING ON MVS NATIVE? BJM\n         BE    CMDLOOP            A. YES - ISSUE THE COMMANDS      PLB\n         LA    R2,EPMVS2          NOW TRY MVS/VM                   PLB\n         CLC   SID,=C'MVS2'       Q. ARE WE RUNNING ON MVS/VM      PLB\n         BE    CMDLOOP            A. YES - ISSUE THE COMMANDS      PLB\n         B     SIDBAD             OOPS - UNKNOWN SYSTEM            PLB\n         SPACE 1\n*---  TMS TAPE MESSAGE                                             PLB\nIECTMS3  CLC   =C'(88)',WQETXT+35 Q. DENSITY CHANGE                PLB\n         BNE   EXIT0              A. NO - JUST LEAVE               PLB\n         SPACE 1\n         MVC   TMSMSG1V,WQETXT+10\n         WTO   'RMSG - TAPE DENSITY CHANGE NOT ALLOWED',           PLB X\n               ROUTCDE=(1),DESC=(2)\nTMSMSG1  WTO   'RMSG - THE SCRATCH TAPE ON XXX IS THE WRONG DENSITY',  X\n               ROUTCDE=(1),DESC=(2)\nTMSMSG1V EQU   TMSMSG1+35,3\n         WTO   'RMSG - MOUNT A SCRATCH TAPE WITH THE PROPER DENISTY',  X\n               ROUTCDE=(1),DESC=(2)\n         B     EXIT0\n         SPACE 1\n*---  SYSLOG SWITCHED - SETUP A CONSTANT FOR SAR\nIEE043   LA    R1,SYSLOGN         ASSUME MVS NATIVE                PLB\n         CLC   SID,=C'MVS1'       Q. ARE WE RUNNING ON MVS NATIVE? BJM\n         BE    DOCMD              A. YES - ISSUE THE COMMANDS      PLB\n         SPACE 1\n         LA    R1,SYSLOGV         NOW TRY MVS/VM                   PLB\n         CLC   SID,=C'MVS2'       Q. ARE WE RUNNING ON MVS/VM      PLB\n         BE    DOCMD              A. YES - ISSUE THE COMMANDS      PLB\n         SPACE 1\n         LA    R1,SYSLOGM         NOW TRY MVS TEST SYSTEM          PLB\n         CLC   SID,=C'MINI'       Q. ARE WE RUNNING ON MVS TEST    PLB\n         BE    DOCMD              A. YES - ISSUE COMMANDS          PLB\n         SPACE 1\n         LA    R1,SYSLOGX         NOW TRY XA TEST SYSTEM          PLB\n         CLC   SID,=C'MXAT'       Q. ARE WE RUNNING ON XA TEST     PLB\n         BE    DOCMD              A. YES - ISSUE COMMANDS          PLB\n         SPACE 1\n         B     SIDBAD             OOPS - UNKNOWN SYSTEM            PLB\n         SPACE 1\n*---  SMF SWITCHED - START A TASK TO DUMP IT\nIEE362   LA    R1,SMFDUMP         POINT TO PARM FIELD IN COMMAND   PLB\n         MVC   SMFID,WQETXT+36    MOVE SMF ID TO START COMMAND     PLB\n         B     DOCMD              ISSUE SMFDUMP,X                  PLB\n         SPACE 1\n*---  EPILOG IS RESTARTING - WHICH ONE IS IT?\nHASP373  LA    R1,SEPICMDN        ASSUME MVS NATIVE                BJM\n         CLC   =C'$HASP373 PODOPEPN',WQETXT+1 Q. START OF EPIUTILN?BJM\n         BE    DOCMD                A. YES - GO START EPILOGN STC  BJM\n         SPACE 1                                                   BJM\n         LA    R1,SEPICMDV        NOW TRY MVS/VM                   BJM\n         CLC   =C'$HASP373 PODOPEPV',WQETXT+1 Q. START OF EPIUTILV?BJM\n         BE    DOCMD                A. YES - GO START EPILOGV STC  BJM\n         B     EXIT0                ITS NOT EPILOG - EXIT          PLB\n         SPACE 1\n         DROP  R5                 THE SSOB EXTENTION\n         DROP  R6                 THE ORE\n         DROP  R7                 AND FINALLY THE WQE\n         SPACE 1\n***********************************************************************\n*        TRY FOR RMSG SUBSYSTEM COMMANDS                              *\n         SPACE 1\nTRYRMSG  EQU   *\n         SPACE 1\n         L     R5,SSOBINDV        POINT TO SSOB EXTENSION FOR OP CMDS\n         USING SSCMBGN,R5\n         SPACE 1\n         L     R6,SSCMBUFF        POINT TO THE COMMAND BUFFER\n         USING CBF,R6\n         SPACE 1\n         LA    R12,CBFTXT         FIND FIRST NON-BLANK IN CMD LINE\n         LH    R11,CBFCNT         LENGTH OF COMMAND\nNONBLANK CLI   0(R12),C' '        Q. IS THIS POSITION BLANK\n         BNE   GOT1ST             A. NO - THATS GOOD\n         LA    R12,1(R12)         BUMP INDEX\n         BCT   R11,NONBLANK       LOOP FOR AWHILE\n         B     QUICKXIT           NOTHING FOUND\n         SPACE 1\nGOT1ST   CLI   0(R12),C'+'        Q. IS THIS MY COMMAND\n         BNE   TRYCMDS            A. NO - TRY FOR OPER COMMAND\n         SPACE 1\n         WTO   'RMSG IS ALIVE AND WELL'\n         BAL   R14,PARSE          PARSE THE COMMAND\n         SPACE 1\n         CLC   WORD2,START        Q. DO THEY WANT TO START SOMETHING?\n         BE    CMSTART            A. YES - SEE WHAT IT IS\n         SPACE 1\n         CLC   WORD2,STOP         Q. DO THEY WANT TO STOP SOMETHING?\n         BE    CMSTOP             A. YES - SEE WHAT IT IS\n         SPACE 1\n         CLC   WORD2,HELP         Q. DO THEY WANT SOME HELP?\n         BE    CMHELP             A. YES - GIVE IT TO THEM\n         SPACE 1\n         CLC   WORD2,STATUS       Q. DO THEY WANT THE STATUS\n         BE    CMSTAT             A. YES - SHOW IT TO THEM\n         SPACE 1\n         CLC   WORD2,ABORT        Q. AM I ABOUT READY TO DIE?\n         BE    CMABORT            A. YES\n         B     CMHUH              THEY DON'T KNOW WHAT THEY ARE DOING\n         SPACE 1\nCMSTART  CLI   WORD3,C'C'         Q. TURN ON COMMAND PROCESSING\n         BNE   CMSTART1           A. NO - TRY FOR MESSAGES\n         NI    FUNCTION,255-$NOCMD TURN ON COMMAND PROCESSING\n         B     CMSTAT             AND SHOW NEW STATUS\n         SPACE 1\nCMSTART1 CLI   WORD3,C'M'         Q. TURN ON MESSAGE PROCESSING\n         BNE   CMHUH              A. INVALID FUNCTION\n         NI    FUNCTION,255-$NOMSG  TURN ON MESSAGE PROCESSING\n         B     CMSTAT             AND SHOW NEW STATUS\n         SPACE 1\nCMSTOP   CLI   WORD3,C'C'         Q. TURN OFF COMMAND PROCESSING\n         BNE   CMSTOP1            A. NO - TRY FOR MESSAGES\n         OI    FUNCTION,$NOCMD    TURN OFF COMMAND PROCESSING\n         B     CMSTAT             AND SHOW NEW STATUS\n         SPACE 1\nCMSTOP1  CLI   WORD3,C'M'         Q. TURN OFF MESSAGE PROCESSING\n         BNE   CMHUH              A. INVALID FUNCTION\n         OI    FUNCTION,$NOMSG    TURN OFF MESSAGE PROCESSING\n         B     CMSTAT             AND SHOW NEW STATUS\n         SPACE 1\nCMHUH    WTO   'RMSG - COMMAND SYNTAX ERROR OR UNKNOWN COMMAND'\n         WTO   'RMSG - ENTER + HELP FOR PROPER COMMAND SYNTAX '\n         B     CMDONE             COMMAND EXIT\n         SPACE 1\nCMABORT  WTO   'RMSG - AND AWAY I GO.'\n         L     R8,20(R13)         GET POINTER TO MY SSCVT\n         USING SSCT,R8\n         CLC   SSCTSNAM,=C'RMSG'  Q. IS THIS ME\n         BE    CMBYE              A. YES - THEN GO AWAY\n         WTO   'RMSG - LOGIC ERROR. ALL FUNCTIONS NOW INACTIVE'\n         MVI   FUNCTION,$ALLOFF   TURNOFF EVERYTHING\n         B     QUICKXIT           AND LEAVE\n         SPACE 1\nCMBYE    MVC   SSCTSSVT,=F'0'     CLEAR MY SSVT POINTER\n         B     CMDONE             JUST LEAVE\n         SPACE 1\nCMSTAT   TM    FUNCTION,$NOMSG    Q. IS MESSAGES PROCESSING ACTIVE\n         BO    CMSTAT1            A. NO\n         WTO   'RMSG - MESSAGE PROCESSING IS ACTIVE'\n         B     CMSTAT2\n         SPACE 1\nCMSTAT1  WTO   'RMSG - MESSAGE PROCESSING IS NOT ACTIVE'\n         SPACE 1\nCMSTAT2  TM    FUNCTION,$NOCMD     Q. IS COMMAND PROCESSING ACTIVE\n         BO    CMSTAT3             A. NO\n         WTO   'RMSG - COMMAND PROCESSING IS ACTIVE'\n         B     CMSTAT4\n         SPACE 1\nCMSTAT3  WTO   'RMSG - COMMAND PROCESSING IS NOT ACTIVE'\nCMSTAT4  B     CMDONE\n         SPACE 1\nCMHELP   WTO   'RMSG - THE VALID RMSG COMMANDS ARE:'\n         WTO   '     + START MESSAGES  - TURN ON MESSAGE PROCESSING'\n         WTO   '     + STOP MESSAGES   - TURN OFF MESSAGE PROCESSING'\n         WTO   '     + START COMMAND   - TURN ON COMMAND PROCESSING'\n         WTO   '     + STOP COMMAND    - TURN OFF COMMAND PROCESSING'\n         WTO   '     + ABORT           - REMOVE RMSG FROM SYSTEM'\n         B     CMDONE\n         SPACE 1\n***********************************************************************\n*            COMMAND PROCESSOR                                        *\nTRYCMDS  TM    FUNCTION,$NOCMD      Q. IS COMMAND PROCESSING ACTIVE\n         BO    QUICKXIT             A. NO - LEAVE\n         SPACE 1\n         CLC   =C'QUIT',0(R12)      Q. IS THIS MY COMMAND\n         BNE   QUICKXIT             A. NO - LEAVE\n         SPACE 1\n         BAL   R14,PARSE            PARSE THE COMMAND\n         CLC   =C'MVS',WORD2        Q. STOPPING MVS\n         BNE   QUICKXIT             A. NO - LEAVE\n         SPACE 1\n         LA    R2,QUITMVS           POINT TO COMMAND LIST\n         MVI   QUITSW,C'Y'          SHOW QUIT MVS CMD ISSUED\nQUITLOOP CLI   0(R2),X'FE'          Q. END OF LIST\n         BE    CMDONE               A. YES - LEAVE\n         L     R1,0(R2)             POINT TO THE COMMAND\n         SR    R0,R0                CLEAR R0\n         SVC   34                   ISSUE THE COMMAND\n         LA    R2,4(R2)             GET NEXT COMMAND POINTER\n         B     QUITLOOP             AND LOOP\n         SPACE 1\n***********************************************************************\n*              COMMON PARSE ROUTINE                                   *\nPARSE    MVC   PLIST,PLIST-1       CLEAR THE PLIST\n         LA    R10,WORD1            POINT TO 1ST WORD\n         BAL   R15,PARSEWD          PARSE THIS WORD\n         OC    WORD1,BLANKS         MAKE IT UPPER CASE\n         SPACE 1\n         LA    R10,WORD2            POINT TO 2ND WORD\n         BAL   R15,PARSEBLK         FIND NEXT NON-BLANK\n         OC    WORD2,BLANKS         MAKE IT UPPER CASE\n         SPACE 1\n         LA    R10,WORD3            POINT TO 3RD WORD\n         BAL   R15,PARSEBLK         FIND NEXT NON-BLANK\n         OC    WORD3,BLANKS         MAKE IT UPPER CASE\n         SPACE 1\n         LA    R10,WORD4            POINT TO 4TH WORD\n         BAL   R15,PARSEBLK         FIND NEXT NON-BLANK\n         OC    WORD4,BLANKS         MAKE IT UPPER CASE\n         SPACE 1\n         LA    R10,WORD5            POINT TO 5TH WORD\n         BAL   R15,PARSEBLK         FIND NEXT NON-BLANK\n         OC    WORD5,BLANKS         MAKE IT UPPER CASE\n         SPACE 1\n         LA    R10,WORD6            POINT TO 6TH WORD\n         BAL   R15,PARSEBLK         FIND NEXT NON-BLANK\n         OC    WORD6,BLANKS         MAKE IT UPPER CASE\n         SPACE 1\n         LA    R10,WORD7            POINT TO 7TH WORD\n         BAL   R15,PARSEBLK         FIND NEXT NON-BLANK\n         OC    WORD7,BLANKS         MAKE IT UPPER CASE\n         SPACE 1\n         LA    R10,WORD8            POINT TO 8TH WORD\n         BAL   R15,PARSEBLK         FIND NEXT NON-BLANK\n         OC    WORD8,BLANKS         MAKE IT UPPER CASE\n         SPACE 1\nPARSEX   BR    R14                 OUT OF DATA OR TO MANY WORDS\n         SPACE 1\n* - - SCAN FOR NEXT NON-BLANK\n         SPACE 1\nPARSEBLK CLI   0(R12),C' '         Q. IS THIS POSITION BLANK\n         BNE   PARSEWD             A. NO - DO NORMAL PARSE\n         BCT   R11,PARSEBL1        CONTINUE IF MORE DATA\n         SPACE 1\n         B     PARSEX              OUT IF DATA\nPARSEBL1 LA    R12,1(R12)          BUMP TO NEXT WORD\n         B     PARSEBLK            AND LOOP\n         SPACE 1\n* - - MOVE A WORD\nPARSEWD  MVC   0(1,R10),0(R12)     MOVE 1 LETTER\n         LA    R10,1(R10)          MAKE ROOM FOR NEXT LETTER\n         BCT   R11,PARSEWD1        CONTINUE IF MORE\n         B     PARSEX              OUT OF DATA\n         SPACE 1\nPARSEWD1 LA    R12,1(R12)          BUMP TO NEXT LETTER\n         CLI   0(R12),C' '         Q. IS THERE A NEXT LETTER\n         BNE   PARSEWD             A. YES - MOVE IT\n         BR    R15                 RETURN TO PARSE ROUTINE\n         SPACE 1\n***********************************************************************\n*                EXIT ROUTINES                                        *\nCMDONE   LA    R15,SSCMSUBC        I HAVE PROCESSED THIS COMMAND\n         ST    R15,SSOBRETN        TELL OTHER USERS\n         B     QUICKXIT            RETURN\n         SPACE 1\nQUICKXIT NOP   0                   BETTER THAN AN EQU\n         SPACE 1\nEXIT0    SR    R15,R15             SET GOOD RETURN CODE\nEXIT     RETURN (14,12),RC=(15)\n         SPACE 1\n***********************************************************************\n*                MISC CONSTANTS AND OTHER STUFF                       *\nCM       EQU   10                  OPERATOR COMMAND FLAG\nWT       EQU   9                   WTO WTOR FLAG\nOK       DC    F'0'                SHOW WE PROCESSED THE COMMAND\nZERO     DC    C'0000'             WORK FIELD FOR ICH408I        PLB\n         SPACE 1\n* - - SUBSYSTEM FUNCTION STATUS INDICATORS\nFUNCTION DC    X'00'               FUNCTION SWITCH (ALL ENABLED)\n$INIT    EQU   X'80'                INITIALIZATION COMPLETE\n$NOMSG   EQU   X'40'                NO MESSAGE PROCESSING\n$NOCMD   EQU   X'20'                NO COMMAND PROCESSING\n$ALLOFF  EQU   X'FF'                ALL FUNCTIONS DISABLED\nQUITSW   DC    C'N'                 N = QUIT MVS NOT ISSUED\n*                                   Y = QUIT MVS ISSUED\n         SPACE 1\n* - - SUBSYSTEM KEY WORDS.  MUST BE SAME LENGTH AS WORDS IN PLIST\nABORT    DC    CL8'ABORT'\nSTOP     DC    CL8'STOP'\nSTART    DC    CL8'START'\nHELP     DC    CL8'HELP'\nSTATUS   DC    CL8'STATUS'\nBLANKS   DC    CL16' '             JUST SOME CONVIENT BLANKS\n         DC    C' '                USED TO CLEAR PLIST\nSID      DC    CL4' '              SAVE AREA FOR CURRENT SID\nPLIST    DS    0CL40               ROOM FOR 8 WORDS\nWORD1    DC    CL8' '\nWORD2    DC    CL8' '\nWORD3    DC    CL8' '\nWORD4    DC    CL8' '\nWORD5    DC    CL8' '\nWORD6    DC    CL8' '\nWORD7    DC    CL8' '\nWORD8    DC    CL8' '\n         SPACE 1\nHALFWRD  DC    CL5' '              DISPLAY HALF WORD\nFULLWRD  DC    CL9' '              DISPLAY FULL WORD\nHEXTBL   ORG   *-256\n         ORG   HEXTBL+X'F0'\n         DC    C'0123456789ABCDEF'\n* - - - RESPONSES TO WTO AND WTOR COMMANDS\n         SPACE 1\nRMSGPARM DS    0A                  HOLD AREA FOR PARM POINTERS\nRMSGR0   DC    A(0)                 R0\nRMSGR1   DC    A(0)                 R1\n         PRINT NOGEN\nPOSTMSG  WTO   'R XX,POST',MF=L\nFSTOPMSG WTO   'R XX,FSTOP',MF=L\nNOHOLD   WTO   'R XX,NOHOLD',MF=L                               PLB\nUMSG     WTO   'R XX,U',MF=L\nYMSG     WTO   'R XX,Y',MF=L                                       BJM\nSTSOCMD  WTO   'S TSO',MF=L\nSNCCFCMD WTO   'S NCCF',MF=L\nSCLSESS  WTO   'S CLSESS',MF=L\nSCLMENU  WTO   'S CLMENU',MF=L\nPAG17990 WTO   'PA NONVIO=PAGE.VSSD000.LOCAL',MF=L\nPAG27990 WTO   'PA NONVIO=PAGE.VSSD001.LOCAL',MF=L\nPAG37990 WTO   'PA NONVIO=PAGE.VSSD002.LOCAL',MF=L\nPAG47990 WTO   'PA NONVIO=PAGE.VSSD003.LOCAL',MF=L\nSUTLCMDN WTO   'S JCLSUB,MEM=EPIUTILN',MF=L\nSUTLCMDV WTO   'S JCLSUB,MEM=EPIUTILV',MF=L\nSEPICMDN WTO   'S EPILOGN',MF=L\nSEPICMDV WTO   'S EPILOGV',MF=L\nPEPICMDN WTO   'P EPILOGN',MF=L\nPEPICMDV WTO   'P EPILOGV',MF=L\nPAGEMOVE WTO   'S PAGEMOVE',MF=L\nSYSLOGN  WTO   'S SYSLOGV.SYSLOGN',MF=L  SAR SYSLOG ID\nSYSLOGV  WTO   'S SYSLOGV.SYSLOGV',MF=L\nSYSLOGM  WTO   'S SYSLOGV.SYSLOGM',MF=L\nSYSLOGX  WTO   'S SYSLOGV.SYSLOGX',MF=L\n         PRINT GEN\nRCMDWTO  WTO   '                            ',MF=L\nRCMDCMD  EQU   RCMDWTO+4,30\n         PRINT GEN\nSMFDUMP  WTO   'S SMFMVS,N=X',MF=L\nSMFID    EQU   SMFDUMP+15,1\n         PRINT NOGEN\nPJES2    WTO   '$PJES2',MF=L\nZEOD     WTO   'Z EOD',MF=L\n         SPACE 1\n* - - - RESPONSES TO QUIT MVS COMMAND\nQMVS1    WTO   'S RMSGCMD,MEM=QUITMVS',MF=L  SUBMIT CMDS FROM PARMLIB\nQMVS2    WTO   '$PI',MF=L                DRAIN ALL INITS\nQUITMVS  DC    A(QMVS1)\n         DC    A(QMVS2)\n         DC    X'FEFE'                   END OF THE LIST\n         PRINT GEN\n         SPACE 1\n* - - - VIRTUAL PRINTER NAMES AND COMMAND TO START THEM\n$SPRT    WTO   '$SXXXXXXXX ',MF=L\n$SPRTID  EQU   $SPRT+6,8\nVPRINT   DC    CL8'PRT1   '\n         DC    CL8'PRT2   '\n         DC    CL8'PRT3   '\n         DC    CL8'PRT4   '\n         DC    CL8'PRT5   '\n         DC    CL8'PRT6   '\n         DC    CL8'PRT7   '\n         DC    8X'FE'             END OF VIRTUAL PRINTER NAME TABLE\n         SPACE 1\n*--- TABLE OF COMMANDS TO BE ISSUED FOR EPILOG\nEPMVS1   DC    A(PEPICMDN)        POINT TO STOP EPILOGN COMMAND    PLB\n         DC    A(SUTLCMDN)        POINT TO START EPIUTILN COMMAND  PLB\n         DC    X'FEFEFEFE'        END OF TABLE\n         SPACE 1\nEPMVS2   DC    A(PEPICMDV)        POINT TO STOP EPILOGV COMMAND    PLB\n         DC    A(SUTLCMDV)        POINT TO START EPIUTILV COMMAND  PLB\n         DC    X'FEFEFEFE'        END OF TABLE\n         SPACE 1\n*--- TABLE OF COMMANDS TO BE ISSUED WHEN VTAM ON MVS1 IS STARTED\nVTAMMVS1 DC    A(PAG17990)        POINT TO PAGEADD OF FIRST 7990   PLB\n         DC    A(PAG27990)        POINT TO PAGEADD OF  2ND  7990   PLB\n         DC    A(PAG37990)        POINT TO PAGEADD OF THIRD 7990   PLB\n         DC    A(PAG47990)        POINT TO PAGEADD OF  4TH  7990   PLB\n         DC    A(STSOCMD)         POINT TO START TSO COMMAND       PLB\n         DC    A(SNCCFCMD)        POINT TO START NCCF COMMAND      PLB\n         DC    A(SCLMENU)         POINT TO START CLMENU COMMAND    PLB\n         DC    A(SCLSESS)         POINT TO START CLSESS COMMAND    PLB\n         DC    A(PAGEMOVE)        POINT TO START PAGEMOVE CMD      PLB\n         DC    X'FEFEFEFE'        END OF TABLE                     PLB\n         SPACE 1\n*--- TABLE OF COMMANDS TO BE ISSUED WHEN VTAM ON MVSXA TEST STARTS\nVTAMMXAT DC    A(STSOCMD)         POINT TO START TSO COMMAND       PLB\n*        DC    A(SNCCFCMD)        POINT TO START NCCF COMMAND      PLB\n*        DC    A(SCLMENU)         POINT TO START CLMENU COMMAND    PLB\n*        DC    A(SCLSESS)         POINT TO START CLSESS COMMAND    PLB\n         DC    X'FEFEFEFE'        END OF TABLE                     PLB\n         SPACE 1\n*--- TABLE OF COMMANDS TO BE ISSUED WHEN VTAM ON MVS2 IS STARTED\nVTAMMVS2 DS    0F                 TABLE IS EMPTY FOR NOW           PLB\n         DC    A(STSOCMD)         POINT TO START TSO COMMAND       PLB\n         DC    X'FEFEFEFE'        END OF TABLE                     PLB\n         SPACE 1\n***********************************************************************\n*                THE LITERAL POOL                                     *\n         LTORG\n         SPACE 1\n***********************************************************************\n*                DSECTS FOR THE WHOLE WORLD                           *\n         PRINT NOGEN\nCBF      DSECT               COMMAND BUFFER\nCBFCNT   DS    H              LENGTH OF TEXT\n         DS    H              RESERVED (?)\nCBFTXT   DS    CL140          COMMAND TEXT (AS ENTERED)\n         SPACE 1\n         CVT   DSECT=YES\n         IHAPSA\n         IEESMCA\n         IEFJSCVT\n         IHAORE\n         IHAWQE\n         IEFJSSOB (WT,CM)\n         END\n//LKED      EXEC  PGM=IEWL,PARM='XREF,LIST,LET'\n//SYSPRINT  DD SYSOUT=*\n//SYSLIN    DD DDNAME=SYSIN\n//OBJLIB    DD DSN=BANKS.SOURCE.OBJ,DISP=SHR\n//SYSLIB    DD DSN=BANKS.SOURCE.LOAD,DISP=SHR\n//SYSLMOD   DD DSN=SYS6.LINKLIB,DISP=SHR\n//*YSLMOD   DD DSN=SYS6.PRODXA.LINKLIB,DISP=SHR\n//SYSUT1    DD SPACE=(1024,(50,20)),UNIT=SYSDA\n//SYSIN DD *\n INCLUDE OBJLIB(RMSG)\n NAME RMSG(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMSGCMD": {"ttr": 1802, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//RMSGCMD  PROC MEM=DUMMY\n//RMSGCMD  EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=Z\n//SYSUT1 DD DSN=SYS1.PARMLIB(&MEM),DISP=SHR\n//SYSUT2 DD SYSOUT=(A,INTRDR)\n//SYSIN DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMSGLOAD": {"ttr": 1804, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//RTPLBLD1 JOB (05DPTECH,TECH),'P BANKS',CLASS=A,MSGCLASS=R,\n// USER=UUUUUUUU,PASSWORD=PPPPPPPP\n/*JOBPARM L=9999\n//RMSGLOAD    EXEC PGM=IFOX00,PARM='DECK,NOLOAD,TEST'\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,DCB=BLKSIZE=12960\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYS2.MACLIB,DISP=SHR\n//SYSUT1   DD  UNIT=VIO,SPACE=(TRK,(100,30))\n//SYSUT2   DD  UNIT=VIO,SPACE=(TRK,(100,30))\n//SYSUT3   DD  UNIT=VIO,SPACE=(TRK,(100,30))\n//SYSPUNCH DD  DSN=BANKS.SOURCE.OBJ(RMSGLOAD),DISP=OLD\n//SYSPRINT DD  SYSOUT=*\n//SYSIN DD *\n         TITLE 'LOAD AND BUILD CONTROL BLOCKS FOR RMSG'\n***********************************************************************\n*                                                                     *\n*  THIS IS THE PROGRAM TO LOAD AND ACTIVATE THE RMSG SUB-SYSTEM.      *\n*  THIS PROGRAM AND THE SUB-SYSTEM MUST BE AUTHORIZED.                *\n*                                                                     *\n*  3 PARAMETERS ARE PERMITTED.                                        *\n*    FORCE - FORCE A NEW COPY OF RMSG INTO THE SYSTEM.                *\n*    RUN   - THIS IS THE SAME AS NO PARM INFORMATION.                 *\n*                                                                     *\n*  IF THE PARAMETER INFORMATION IS NOT SPECIFIED THEN IT IS ASSUMED   *\n*   THAT A COPY OF RMSG IS NOT ACTIVE.  IF IT IS, YOU WILL GET        *\n*   A MESSAGE AND A CLOUD OF PAPER.                                   *\n*                                                                     *\n*  LOGIC FLOW.                                                        *\n*                                                                     *\n*  1) CHECK THE PARM INFORMATION.                                     *\n*                                                                     *\n*  2) LOCATE THE RMSG SSCT.                                           *\n*                                                                     *\n*  3) LOAD THE RMSG SUB-SYSTEM                                        *\n*                                                                     *\n*  4) CALL THE SUB-SYSTEM TO INITALIZE ITS SELF                       *\n*                                                                     *\n*  5) LOAD THE SRB ROUTINE FOR J2XIT01                                *\n*                                                                     *\n*  6) CALL THE SRB ROUTINE TO INITALIZE ITS SELF                      *\n*                                                                     *\n*  7) BUMP THE UCMBRDCS COUNT BY ONE SO WE CAN SEE WTOR MESSAGES      *\n*                                                                     *\n*  8) SUBMIT START COMMANDS VIA THE INTRDR                            *\n*                                                                     *\n*  9) LEAVE - THE SUB-SYSTEM IS ACTIVE                                *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n         SPACE 1\n***********************************************************************\n*                PROGRAM INITIALIZATION                               *\n         SPACE 1                                                      *\n         PRINT NOGEN\nRMSGLOAD COMEIN\n         SPACE 1\n         L     R1,0(R1)           GET POINTER TO PARM AREA\n         CLC   0(2,R1),=H'0'      Q. ANY PARMS\n         BE    PARMOK             A. NO\n         SPACE 1\nPARM1    CLC   2(3,R1),=C'RUN'    Q. IS THIS THE 'RUN' PARM\n         BE    PARMOK             A. YES - JUST LIKE NO PARM\n         SPACE 1\nPARM2    CLC   2(5,R1),=C'FORCE'  Q. IS THIS THE 'FORCE' PARM\n         BNE   EXIT16             A. NO - QUIT\n         OI    PARMSW,FORCE       TURN ON FORCE SWITCH\n         B     PARMOK             ONLY PARM ALLOWED\n         PRINT GEN\n         SPACE 1\n***********************************************************************\n*        SEARCH FOR MY SUB-SYSTEM CONTROL TABLE (SSCT)                *\n         SPACE 1\nPARMOK   TESTAUTH ,\n         LTR   R15,R15            Q. AM I AUTHORIZED\n         BNZ   EXIT20             A. NO - LEAVE\n         SPACE 1\n         L     R12,16             START AT THE CVT. WHERE ELSE?\n         USING CVT,R12\n         SPACE 1\n         L     R11,CVTJESCT       ADDR OF 1ST SUB-SYS CONTROL TABLE\n         USING JESCT,R11\n         SPACE 1\n         CLC   JESCTID,=C'JEST'   Q. IS THIS REALLY THE JESCT\n         BNE   EXIT4              A. NO - RETURN IN ERROR\n         SPACE 1\n         L     R10,JESSSCT        POINT TO SUBSYS COMMUNICATION TBL\n         USING SSCT,R10\n         SPACE 1\nCKSSCT   CLC   SSCTID,=C'SSCT'    Q. IS THIS STILL THE SSCT\n         BNE   EXIT8              A. NO - RETURN IN ERROR\n         SPACE 1\n         CLC   SSCTSNAM,=C'RMSG'  Q. IS THIS ME\n         BE    ITSME              A. YES - BUILD MY SSVT\n         SPACE 1\n         L     R10,SSCTSCTA       POINT TO NEXT SSCT\n         LTR   R10,R10            Q. MORE TO GO\n         BNZ   CKSSCT             A. YES - THEN DO IT\n         B     EXIT8              RETURN IN ERROR\n         SPACE 1\n         DROP  R12                DONE WITH THE CVT\n         DROP  R11                DONE WITH THE JESCT\n         SPACE 1\n***********************************************************************\n*                 GET SIZE OF RMSG AND SRB ROUTINE                    *\nITSME    LOAD  EP=RMSG            LOAD TO GET MODULE SIZE\n         SLL   R1,3               MULT BY 8 FOR SIZE IN BYTES\n         ST    R1,RMSGSIZE        SAVE THE SIZE\n         MVC   RMSGSIZE(1),=AL1(245)  SET SUB-POOL ID\n         DELETE EP=RMSG           NOW DELETE IT\n         SPACE 1\n         LOAD  EP=J2SRB01         LOAD TO GET MODULE SIZE\n         SLL   R1,3               MULT BY 8 FOR SIZE IN BYTES\n         ST    R1,SRBSIZE         SAVE SRB SIZE\n         MVC   SRBSIZE(1),=AL1(245)  SET SUB-POOL ID\n         DELETE EP=J2SRB01        NOW DELETE IT\n         SPACE 1\n***********************************************************************\n*                 BUILD MY SUB-SYSTEM VECTOR TABLE (SSVT)             *\n         MODESET KEY=ZERO,MODE=SUP   GOTTA BE HEAVY FOR AWHILE\n         L     R9,SSCTSSVT         POINT TO RMSG SSVT\n         USING SSVT,R9\n         SPACE 1\n         LTR   R9,R9              Q. DO I HAVE A SSVT\n         BZ    ITSMEOK            A. NO - I AM NOT ACTIVE\n         SPACE 1\n         TM    PARMSW,FORCE       Q. AM I GOING TO FORCE A NEW SUBSYS\n         BNO   EXIT12             A. NO - EXIT IN ERROR\n         SPACE 1\n         XC    SSCTSSVT,SSCTSSVT  DEACTIVATE RMSG\n         SPACE 1\nITSMEOK  OPEN  (LOADLIB,(INPUT))\n         L     R0,RMSGSIZE        GET SIZE AND SUB-POOL\n         GETMAIN R,LV=(0)\n         ST    R1,RMSGREAL        SAVE LOAD ADDRESS\n         LTR   R15,R15            Q. WAS GETMAIN SUCSESSFUL\n         BNZ   EXIT24             A. NO\n         SPACE 1\nLOADRMSG BLDL  LOADLIB,RMSGBLD\n         LTR   R15,R15            Q. WAS BLDL SUCESSFUL\n         BNZ   EXIT28             A. NO\n         SPACE 1\nLOADROK  L     R2,RMSGREAL\n         LOAD  EP=RMSG,ADDR=(2),DCB=LOADLIB\n         ST    R0,RMSGREAL        TRACKS\n         SPACE 1\n         LA    R1,SSCTSSVT        WHERE TO PUT ADDR OF NEW SSVT\n         L     R15,RMSGREAL       PREPARE TO CALL RMSG\n         BALR  R14,R15            RMSG INITALIZATION\n         WTO   'RMSGLOAD - RMSG SUB-SYSTEM CONNECTED'\n         SPACE 1\n         L     R0,SRBSIZE        GET SIZE AND SUB-POOL\n         GETMAIN R,LV=(0)\n         ST    R1,SRBREAL         SAVE ENTRY POINT\n         LTR   R15,R15            Q. WAS GETMAIN SUCSESSFUL\n         BNZ   EXIT32             A. NO\n         SPACE 1\nLOADSRB  BLDL  LOADLIB,SRBBLD\n         LTR   R15,R15            Q. WAS BLDL SUCESSFUL\n         BNZ   EXIT36             A. NO\n         SPACE 1\nLOADSOK  L     R2,SRBREAL\n         LOAD EP=J2SRB01,ADDR=(2),DCB=LOADLIB\n         ST   R0,SRBREAL\n         SPACE 1\n         L     R1,SSCTSSVT      ADDR OF SSVT FOR RMSG\n         LA    R1,4(R1)         THE FIRST 2 HALF WORDS IN THE SSVT\n         LA    R1,256(R1)       THE MATRIX TABLE IN THE SSVT\n         LA    R1,256*4(R1)     THE FUNCTION POINTER WORDS IN THE SSVT\n         L     R15,SRBREAL        PREPARE TO CALL THE SRB ROUTINE\n         BALR  R14,R15            INITALIZE THE SRB ROUTINE\n         WTO   'RMSGLOAD - J2SRB01 CONNECTED'\n         SPACE 1\n         L     R12,16             GET THE CVT POINTER AGAIN\n         USING CVT,R12\n         SPACE 1\n         L     R11,CVTCUCB        POINT TO THE UCM\n         USING UCM,R11\n         SPACE 1\n         LH    R2,UCMBRDST        GET BROADCAST COUNT\n         LA    R2,1(R2)           BUMP IT SO I CAN SEE WTOR MSGS\n         STH   R2,UCMBRDST        AND PUT IT BACK\n         SPACE 1\n         DROP  R12                DROP THE CVT (IT WON'T BREAK)\n         DROP  R11                DROP THE UCM\n         MODESET KEY=NZERO,MODE=PROB LIGHTEN UP\n         B     SUBMIT\n         SPACE 1\n***********************************************************************\n*                   SUBMIT STARTED TASKS ETC                          *\nSUBMIT   TM    PARMSW,FORCE             Q. IS THIS A REPLACEMENT\n         BO    EXIT0                    A. YES - JUST EXIT\n         SPACE 1\n         OPEN  (INTRDR,(OUTPUT))\n         OPEN  (CMDFILE,(INPUT))\nNEXTCMD  GET   CMDFILE,INAREA\n         CLI   INAREA,C'*'              Q. COMMENT\n         BE    NEXTCMD                  A. YES\n         PUT   INTRDR,INAREA\n         B     NEXTCMD\n         SPACE 1\nLASTCMD  CLOSE CMDFILE\n         CLOSE INTRDR\n*        CLOSE LOADLIB\n         B     EXIT0\n         SPACE 1\n***********************************************************************\n*                   EXIT AND ABEND ROUTINES                           *\n         SPACE 1\nEXIT0    LA    R15,0              RETURN IN STYLE\n         GETOUT\n         SPACE 1\nEXIT4    WTO   'RMSGLOAD - MISSED JESCT'\n         ABEND 4,DUMP             BAIL OUT IN A CLOUD OF PAPER\n         SPACE 1\nEXIT8    WTO   'RMSGLOAD - ABNORMAL END OF SSCT'\n         ABEND 8,DUMP             BAIL OUT IN A CLOUD OF PAPER\n         SPACE 1\nEXIT12   WTO   'RMSGLOAD - RMSG IS ALREADY ACTIVE'\n         ABEND 18,DUMP            BAIL OUT IN A CLOUD OF PAPER\n         SPACE 1\nEXIT16   WTO   'RMSGLOAD - INVALID PARAMETER'\n         ABEND 16,DUMP            BAIL OUT IN A CLOUD OF PAPER\n         SPACE 1\nEXIT20   WTO   'RMSGLOAD - NOT AUTHORIZED'\n         ABEND 20                 BAIL OUT WITHOUT A CLOUD OF PAPER\n         SPACE 1\nEXIT24   WTO   'RMSGLOAD - GETMAIN FOR RMSG FAILED'\n         ABEND 24,DUMP\n         SPACE 1\nEXIT28   WTO   'RMSGLOAD - BLDL FOR RMSG FAILED'\n         ABEND 28,DUMP\n         SPACE 1\nEXIT32   WTO   'RMSGLOAD - GETMAIN FOR J2SRB01 FAILED'\n         ABEND 24,DUMP\n         SPACE 1\nEXIT36   WTO   'RMSGLOAD - BLDL FOR J2SRB01 FAILED'\n         ABEND 36,DUMP\n         SPACE 1\n***********************************************************************\n*                MISC CONSTANTS AND OTHER STUFF                       *\nTEMPSAVE DC    5F'0'              SAVE REGS 14 - 2\nANSWER   DC    C' '\nWTOECB   DC    F'0'\nRMSGREAL DC    A(0)               ADDR OF RMSG IN COMMON\nSRBREAL  DC    A(0)               ADDR OF J2SRB01 IN COMMON\nRMSGSIZE DC    F'0'               SIZE OF RMSG LOAD MODULE\nSRBSIZE  DC    F'0'               SIZE OF SRB LOAD MODULE\n         SPACE 1\nPARMSW   DC    X'00'              PARAMETER SWITCH\nFORCE    EQU   X'80'               FORCE NEW SUBSYSTEM\n         SPACE 1\nINAREA   DC    CL80' '            COMMAND INPUT AND OUTPUT AREA\n         DS    0F                  FORCE ALIGNMENT\nRMSGBLD  DS   0CL80' '            BLDL LIST FOR RMSG\n         DC    H'1'                NUMBER OF ENTRIES\n         DC    H'80'               LENGTH OF 1 ENTRY\n         DC    CL8'RMSG'           NAME OF MODULE\n         DC    CL68' '             FILLED IN BY BLDL\nSRBBLD   DS   0CL80' '            BLDL LIST FOR J2SRB01\n         DC    H'1'                NUMBER OF ENTRIES\n         DC    H'80'               LENGTH OF 1 ENTRY\n         DC    CL8'J2SRB01'        NAME OF MODULE\n         DC    CL68' '             FILLED IN BY BLDL\n         SPACE 1\n***********************************************************************\n*                THE LITERAL POOL                                     *\n         LTORG\n         SPACE 1\n***********************************************************************\n*                DCB'S FOR INTRDR AND CMDFILE                         *\nINTRDR   DCB   DDNAME=INTRDR,DSORG=PS,MACRF=PM\nCMDFILE  DCB   DDNAME=CMDFILE,DSORG=PS,MACRF=GM,EODAD=LASTCMD\nLOADLIB  DCB   DDNAME=LOADLIB,DSORG=PO,MACRF=R\n         SPACE 1\n***********************************************************************\n*                DSECTS FOR THE WHOLE WORLD                           *\n         PRINT NOGEN\n         CVT   DSECT=YES\n         IEFJESCT\n         IEFJSCVT\n         IEFJSSVT\nUCM      DSECT\n         IEECUCM\n         SPACE 1\n         END\n//LKED      EXEC  PGM=IEWL,PARM='XREF,LIST,LET,AC=1'\n//SYSPRINT  DD SYSOUT=*\n//SYSLIN    DD DDNAME=SYSIN\n//OBJLIB    DD DSN=BANKS.SOURCE.OBJ(RMSGLOAD),DISP=SHR\n//*YSLMOD   DD DSN=BANKS.SOURCE.LOAD,DISP=SHR\n//SYSLMOD   DD DSN=SYS6.LINKLIB,DISP=SHR\n//*            VOL=SER=MVSRS1,UNIT=3380\n//SYSUT1    DD SPACE=(1024,(50,20)),UNIT=SYSDA\n//SYSIN DD *\n INCLUDE OBJLIB\n NAME RMSGLOAD(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMSGSUB": {"ttr": 2054, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//RMSGSUB  PROC OPTION=RUN\n//*  PROC TO START THE RMSG SUB-SYSTEM\n//*  PARM=RUN       ONLY START RMSG IF RMSG IS NOT STARTED\n//*  PARM=FORCE     START RMSG EVEN IF RMSG IS STARTED (RESTART)\n//RMSGSUB  EXEC PGM=RMSGLOAD,PARM=&OPTION\n//SYSUDUMP DD SYSOUT=A\n//STEPLIB  DD DSN=SYS6.LINKLIB,DISP=SHR\n//LOADLIB  DD DSN=SYS6.LINKLIB,DISP=SHR\n//INTRDR   DD SYSOUT=(A,INTRDR),DCB=(LRECL=80,RECFM=F,BLKSIZE=80)\n//CMDFILE  DD DSN=SYS1.PARMLIB(CMDRMSG),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT122/FILE122.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT122", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}