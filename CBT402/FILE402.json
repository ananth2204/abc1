{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011930000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE402.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE402.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x14'", "DS1TRBAL": "b'Z\\x94'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\xdc\\x00\\r\\x02\\xdd\\x00\\x00\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02\\x03/\\x01\\x02\\x03/\\x13\\x04\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-02-01T00:00:00", "modifydate": "2002-02-01T13:04:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 442    FILE:  402\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT442.FILE402\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 8 MEMBERS COUNTED; CUMULATIVE SIZE IS 254 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/01/02    13:04:52    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$PACKAGE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x009\\x01\\x02\\x03\\x1f\\x01\\x02\\x03/\\x13\\x02\\x00o\\x00\\xa6\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2002-01-31T00:00:00", "modifydate": "2002-02-01T13:02:39", "lines": 111, "newlines": 166, "modlines": 0, "user": "SBGOLOB"}, "text": "Note :   Here is a copy of this total package in one\n    member.  I have broken the executable parts of this member up,\n    into members SMFREX01 and SMFJCL01.  The other two members:\n    SMFP0001 and SMFJ0001 were part of another transmission.\n\n           Sam Golob     email:  sbgolob@attglobal.net\n\n - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n This program allows the Operations Staff to monitor\n SMF Status regulary across many MVS Images.\n\n A REXX program displays SMF status.  This REXX program\n is excuted on every LPAR thru a JOB every hour.  The\n JOB then xmits the SMF Status details to a single LPAR\n on which all the details are consolidated.\n\n This REXX will be help to people who don't have\n automation tools to trap the 'D SMF' reponse.\n\n\nTHE REXX PROGRAM SMFREX01 READS SMCA BLOCK AND PRINTS THE SMF\nSTATUS.  THS UTILITY WILL BE HELPFUL FOR THE OPERATORS WHO HAVE\nTO MONITOR THE SMF STATUS OF MANY SYSTEMS IN A DATA CENTER.\n\nTHIS UTILITY DOES NOT REQUIRE ANY AUTOMATION TOOL TO ISSUE 'D SMF'\nAND TRAP THE RESPONSE.  THE PROGRAM IS EXCUTED THRU A JCL SMFJCL01.\nTHIS JCL CAN BE SUITABLY MODIFIED TO EXCUTE ON VARIOUS SYSTEMS AND\nBRING IN THE DATA ON A SINGLE SYSTEMS TO KNWO THE SMF STATUS.\n\nSMFREX01:\n\n/* REXX */\nCVT      = C2D(STORAGE(10,4))\nSMCA     = STORAGE(D2X(CVT + 196),4)\nSMCA     = C2D(BITAND(SMCA,'7FFFFFFF'X))\n\nSMFID    = STRIP(STORAGE(D2X(SMCA + 16),4),T)\nSMCAFRDS = C2D(STORAGE(D2X(SMCA+244),4))\nSMCALRDS = C2D(STORAGE(D2X(SMCA+248),4))\n\nSAY 'CURRENT SMF STATUS ON ' SMFID 'AS ON : ' DATE('U') TIME()\nSAY COPIES('-',79)\nHEADING = LEFT('DATASET',45)||LEFT('VOLUME',7)||LEFT('SIZE',8)||,\n          LEFT('%FULL',5)||LEFT(' STATUS',8)\nSAY HEADING\nSAY COPIES('-',79)\n\nRDSNEXT  = SMCAFRDS\nDO WHILE (SMCALRDS <> RDSNEXT)\n     RDSNAME  = STORAGE(D2X(RDSNEXT+16),44)\n     RDSVOL   = STORAGE(D2X(RDSNEXT+60),6)\n     RDSCAP   =  C2D(STORAGE(D2X(RDSNEXT+76),4))\n     RDSCAPA  =  FORMAT(C2D(STORAGE(D2X(RDSNEXT+80),4)),7,0)\n     PERCENT  =  FORMAT((RDSCAPA*100/RDSCAP),3,0)\n     RDSFLAG1 = C2X(STORAGE(D2X(RDSNEXT+12),1))\n     SELECT\n        WHEN RDSFLAG1 = '00' THEN\n             STATUS   = 'ACTIVE'\n        WHEN RDSFLAG1 = '04' THEN\n             STATUS   = 'ALTERNATE'\n        WHEN RDSFLAG1 = '08' THEN\n             STATUS   = 'DUMP REQUIRED'\n        OTHERWISE\n             STATUS   = 'NOT NORMAL'\n     END\n     RDSNEXT = C2D(STORAGE(D2X(RDSNEXT+4),4))\n     SAY RDSNAME RDSVOL RDSCAP PERCENT STATUS\nEND\nSAY COPIES(' ',79)\nEXIT\n\nSMFJCL01:\n\n//* Add Valid Jobcard\n//* Add Valid Jobcard\n//* Add Valid Jobcard\n//************************************************************\n//* STEP0001 writes CURRENT SMF Status in a PS File.\n//************************************************************\n//STEP0001 EXEC PGM=IKJEFT01\n//SYSTSPRT DD DISP=OLD,DSN=name-of-a-ps  FB with LRECL=80\n//SYSEXEC  DD Disp=shr,DSN=name-of-the-pds-where-SMFP0001-resides\n//SYSTSIN  DD *\n  %SMFP0001\n/*\n//************************************************************\n//* STEP0002 creates a new job. SMF Status details written\n//* instream to this new job. The new job is then /*XMITed to\n//* a LPAR where the data is consolidated in a single dataset\n//************************************************************\n//STEP0002 EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DATA,DLM=ZZ\n//NEWJOB   JOB\n//* Add-Jobcard-Valid-for-the-System-on-which-this-job-is-to-excute\n//* Add-Jobcard-Valid-for-the-System-on-which-this-job-is-to-excute\n//* Add-Jobcard-Valid-for-the-System-on-which-this-job-is-to-excute\n/*XEQ  jes-node-name\n//         EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT2   DD DISP=MOD,DSN=ds-on-other-lpar-consolidates-smf-status\n//SYSUT1   DD *\nZZ\n//         DD DISP=OLD,DSN=name-of-a-ps-coded-in-STEP0001-SYSTSPRT\n//SYSUT2   DD SYSOUT=(A,INTRDR)\n//\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#DOC": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x03\\x01\\x02\\x02\\x9f\\x01\\x02\\x03/\\x13\\x03\\x00\\x0b\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2002-01-29T00:00:00", "modifydate": "2002-02-01T13:03:03", "lines": 11, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "INTRODUCTION :\n\nTHE REXX PROGRAM SMFP0001 READS SMCA BLOCK AND PRINTS THE SMF STATUS.\n\nTHS UTILITY WILL BE HELPFUL FOR THE OPERATORS WHO HAVE TO MONITOR\nTHE SMF STATUS OF MANY SYSTEMS IN A DATA CENTER.\n\nTHIS UTILITY DOES NOT REQUIRE ANY AUTOMATION TOOL TO ISSUE 'D SMF'\nAND TRAP THE RESPONSE.  THE PROGRAM IS EXECUTED THRU A JCL SMFJ0001.\nTHIS JCL CAN BE SUITABLY MODIFIED TO EXCUTE ON VARIOUS SYSTEMS AND\nBRING IN THE DATA TO ONE SINGLE SYSTEMS TO KNOW THE SMF STATUS.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE402": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00%\\x01\\x01\\x02_\\x01\\x02\\x03/\\x13\\x04\\x00\\x06\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2002-02-01T13:04:25", "lines": 6, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 402 contains a REXX exec and JCL, to obtain SMF status    *   FILE 402\n//*           from many MVS systems in a data center, and to        *   FILE 402\n//*           consolidate them in one place.                        *   FILE 402\n//*                                                                 *   FILE 402\n//*           email:   sbgolob@attglobal.net                        *   FILE 402\n//*                                                                 *   FILE 402\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMFJCL01": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00A\\x01\\x02\\x03\\x1f\\x01\\x02\\x03\\x1f\\x12Y\\x00#\\x00#\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-01-31T00:00:00", "modifydate": "2002-01-31T12:59:41", "lines": 35, "newlines": 35, "modlines": 0, "user": "SBGOLOB"}, "text": "//* Add Valid Jobcard\n//* Add Valid Jobcard\n//* Add Valid Jobcard\n//************************************************************\n//* STEP0001 writes CURRENT SMF Status in a PS File.\n//************************************************************\n//STEP0001 EXEC PGM=IKJEFT01\n//SYSTSPRT DD DISP=OLD,DSN=name-of-a-ps  FB with LRECL=80\n//SYSEXEC  DD Disp=shr,DSN=name-of-the-pds-where-SMFP0001-resides\n//SYSTSIN  DD *\n  %SMFP0001\n/*\n//************************************************************\n//* STEP0002 creates a new job. SMF Status details written\n//* instream to this new job. The new job is then /*XMITed to\n//* a LPAR where the data is consolidated in a single dataset\n//************************************************************\n//STEP0002 EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DATA,DLM=ZZ\n//NEWJOB   JOB\n//* Add-Jobcard-Valid-for-the-System-on-which-this-job-is-to-excute\n//* Add-Jobcard-Valid-for-the-System-on-which-this-job-is-to-excute\n//* Add-Jobcard-Valid-for-the-System-on-which-this-job-is-to-excute\n/*XEQ  jes-node-name\n//         EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT2   DD DISP=MOD,DSN=ds-on-other-lpar-consolidates-smf-status\n//SYSUT1   DD *\nZZ\n//         DD DISP=OLD,DSN=name-of-a-ps-coded-in-STEP0001-SYSTSPRT\n//SYSUT2   DD SYSOUT=(A,INTRDR)\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMFJ0001": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00S\\x01\\x02\\x02\\x9f\\x01\\x02\\x02\\x9f\\x12\\x05\\x00\\n\\x00\\n\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-01-29T00:00:00", "modifydate": "2002-01-29T12:05:53", "lines": 10, "newlines": 10, "modlines": 0, "user": "SBGOLOB"}, "text": "//* ADD VALID JOBCARD\n//* ADD VALID JOBCARD\n//* ADD VALID JOBCARD\n//STEP0001 EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSEXEC  DD Disp=shr,DSN=name-of-the-pds-where-SMFP0001-resides\n//SYSTSIN  DD *\n  %SMFP0001\n/*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SMFP0001": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x010\\x00 \\x01\\x02\\x02\\x8f\\x01\\x02\\x02\\x8f\\x16H\\x00\\x1e\\x00\\t\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.48", "flags": 0, "createdate": "2002-01-28T00:00:00", "modifydate": "2002-01-28T16:48:20", "lines": 30, "newlines": 9, "modlines": 0, "user": "SBGOLOB"}, "text": "/* REXX */\nCVT      = C2D(STORAGE(10,4))\nSMCA     = STORAGE(D2X(CVT + 196),4)\nSMCA     = C2D(BITAND(SMCA,'7FFFFFFF'X))\n\nSYSNAME  = STRIP(STORAGE(D2X(SMCA + 16),4),T)\nSMCAFRDS = C2D(STORAGE(D2X(SMCA+244),4))\nSMCALRDS = C2D(STORAGE(D2X(SMCA+248),4))\n\nRDSNEXT  = SMCAFRDS\nDO WHILE (SMCALRDS <> RDSNEXT)\n     RDSNAME  = STORAGE(D2X(RDSNEXT+16),44)\n     RDSVOL   = STORAGE(D2X(RDSNEXT+60),6)\n     RDSCAP   =  C2D(STORAGE(D2X(RDSNEXT+76),4))\n     RDSCAPA  =  C2D(STORAGE(D2X(RDSNEXT+80),4))\n     PERCENT  =  FORMAT((RDSCAPA*100/RDSCAP),3,0)\n     RDSFLAG1 = C2X(STORAGE(D2X(RDSNEXT+12),1))\n     SELECT\n        WHEN RDSFLAG1 = '00' THEN\n             STATUS   = 'ACTIVE'\n        WHEN RDSFLAG1 = '04' THEN\n             STATUS   = 'ALTERNATE'\n        WHEN RDSFLAG1 = '08' THEN\n             STATUS   = 'DUMP REQUIRED'\n        OTHERWISE\n             STATUS   = 'FACING PROBLEM'\n     END\n     RDSNEXT = C2D(STORAGE(D2X(RDSNEXT+4),4))\n     SAY SYSNAME RDSNAME RDSVOL RDSCAP PERCENT STATUS\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFREX01": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x06\\x01\\x02\\x03\\x1f\\x01\\x02\\x03\\x1f\\x12X\\x00'\\x00'\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-01-31T00:00:00", "modifydate": "2002-01-31T12:58:06", "lines": 39, "newlines": 39, "modlines": 0, "user": "SBGOLOB"}, "text": "/* REXX */\nCVT      = C2D(STORAGE(10,4))\nSMCA     = STORAGE(D2X(CVT + 196),4)\nSMCA     = C2D(BITAND(SMCA,'7FFFFFFF'X))\n\nSMFID    = STRIP(STORAGE(D2X(SMCA + 16),4),T)\nSMCAFRDS = C2D(STORAGE(D2X(SMCA+244),4))\nSMCALRDS = C2D(STORAGE(D2X(SMCA+248),4))\n\nSAY 'CURRENT SMF STATUS ON ' SMFID 'AS ON : ' DATE('U') TIME()\nSAY COPIES('-',79)\nHEADING = LEFT('DATASET',45)||LEFT('VOLUME',7)||LEFT('SIZE',8)||,\n          LEFT('%FULL',5)||LEFT(' STATUS',8)\nSAY HEADING\nSAY COPIES('-',79)\n\nRDSNEXT  = SMCAFRDS\nDO WHILE (SMCALRDS <> RDSNEXT)\n     RDSNAME  = STORAGE(D2X(RDSNEXT+16),44)\n     RDSVOL   = STORAGE(D2X(RDSNEXT+60),6)\n     RDSCAP   =  C2D(STORAGE(D2X(RDSNEXT+76),4))\n     RDSCAPA  =  FORMAT(C2D(STORAGE(D2X(RDSNEXT+80),4)),7,0)\n     PERCENT  =  FORMAT((RDSCAPA*100/RDSCAP),3,0)\n     RDSFLAG1 = C2X(STORAGE(D2X(RDSNEXT+12),1))\n     SELECT\n        WHEN RDSFLAG1 = '00' THEN\n             STATUS   = 'ACTIVE'\n        WHEN RDSFLAG1 = '04' THEN\n             STATUS   = 'ALTERNATE'\n        WHEN RDSFLAG1 = '08' THEN\n             STATUS   = 'DUMP REQUIRED'\n        OTHERWISE\n             STATUS   = 'NOT NORMAL'\n     END\n     RDSNEXT = C2D(STORAGE(D2X(RDSNEXT+4),4))\n     SAY RDSNAME RDSVOL RDSCAP PERCENT STATUS\nEND\nSAY COPIES(' ',79)\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT402/FILE402.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT402", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}