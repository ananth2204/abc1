{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011558000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 2586584, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 10, "INMDSNAM": "CBT.V500.FILE249.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 2586584, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 2586584, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE249.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00)\\x05'", "DS1TRBAL": "b'\\x89\\xdc'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xba\\x00\\x07\\x01\\xbd\\x00\\x03\\x00*'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04]\\x00Q\\x01\\x164o\\x01\\x164o\\x02\\x12\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf3@@@'", "ispf": {"version": "04.93", "flags": 0, "createdate": "2016-12-11T00:00:00", "modifydate": "2016-12-11T02:12:51", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-493"}, "text": "REGULAR CBT TAPE - VERSION 493    FILE:  249\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT493.FILE249\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 28 MEMBERS COUNTED; CUMULATIVE SIZE IS 24,083 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/11/16    02:12:51    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95 \\x1f\\x00\\x95 /\\t%\\x00+\\x00$\\x00\\x00\\xc5\\xc9\\xd3\\xc5\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-07-20T00:00:00", "modifydate": "1995-07-21T09:25:00", "lines": 43, "newlines": 36, "modlines": 0, "user": "EILEEN"}, "text": "DOCUMENTATION\n\n  THERE ARE THE FOLLOWING PROGRAMS IN THIS COLLECTION:\n\n      WMOD FOR TSO  -  FIND OCCURRENCES OF A PDS MEMBER NAME.\n                       THIS PROGRAM WILL SEARCH ALL ALLOCATED PDS\n                       LIBRARIES IN THE TSO ADDRESS SPACE FOR THE\n                       SPECIFIED MODULE NAME, INCLUDING CLISTS,\n                       SOURCE, ISPF LIBRARIES, ETC. IT WILL ALSO\n                       SEARCH STEPLIB, LPA, LINKLIST AND SVCLIB.\n                       FOR LPA MODULES, THE ADDRESS IN LPA WILL BE\n                       RETURNED.  FOR ALL OTHERS, THE DATASET NAME\n                       WILL BE RETURNED.\n\n      WMOD FOR CICS -  FIND OCCURRENCES OF A PDS MEMBER NAME.\n                       THIS PROGRAM SEARCHES ALL DFHRPL LIBRARIES,\n                       STEPLIB, LINKLIST, LPA, AND SVCLIB FOR\n                       SPECIFIED MODULE NAME.  IT TAKES A GUESS AS\n                       TO WHERE CICS LOADED THE MODULE FROM IF THE\n                       MODULE EXISTS IN MULTIPLE PLACES (IE:\n                       MODULE IS IN DFHRPL AS WELL AS STEPLIB AND\n                       LPA).\n\n      UCB           -  IF YOU GIVE THE UNIT ADDRESS, THIS WILL\n                       RETURN THE VOLUME SERIAL.  IF YOU GIVE\n                       THE VOLUME SERIAL, THIS WILL GIVE THE\n                       UNIT ADDRESS.\n\n      SVC           -  AUTH SVC\n\n      ESBA          -  THIS MACRO CAN BE USED TO FORMAT DATA FOR\n                       AN EXTENDED 3270 CHARACTER DATA STREAM.\n                       IF INCLUDED BEFORE THE DEFINE FOR A FIELD\n                       TO BE FORMATTED, IT WILL GENERATE THE\n                       APPROPRIATE SBA VALUES AND THE ATTRIBUTE\n                       BYTES FOR CURSOR, COLOR, HILIGHT, ETC.\n\n              FROM  EILEEN BARKOW\n                    DOITT - CITY OF NEW YORK\n                    111 METROTECH CENTER\n                    BROOKLYN, NY 11201\n                    718-403-8649\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x01\\x07/\\x01\\x01\\x07/\\x15 \\x00\\x15\\x00\\x18\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-03-13T00:00:00", "modifydate": "2001-03-13T15:20:00", "lines": 21, "newlines": 24, "modlines": 0, "user": "WSBG"}, "text": "Golob, Sam\nFrom:   Steve.Niebauer@wachovia.com\nSent:   Tuesday, March 13, 2001 3:05 PM\nTo:     Golob, Sam\nSubject:   RE: Wachovia version of the WMOD pgm . . .\n\nSam -\n\nWhen we migrated from OS/390 2.5 to 2.8, this program stopped\nworking.  The problem was in the way it searched the DEBs of the\nPDS datasets allocated to a TSO user.  This was corrected.  Since\nthen we've discovered a few other minor problems (not sure if they\nwere in the original or if I introduced them), fixed them and even\nadded the ability to tell you which LINK LIST SET you're running\nout of if your program is in the LNKLIST.\n\nOf all the changes though, please note that the program does more\nthan it used to, it works, and is considerably smaller.\n\nSteve Niebauer\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE1": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x07/\\x01\\x01\\x07/\\x154\\x00\\x19\\x00\\x19\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-13T00:00:00", "modifydate": "2001-03-13T15:34:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "WSBG"}, "text": "Golob, Sam\nFrom:   Steve.Niebauer@wachovia.com\nSent:   Tuesday, March 13, 2001 3:14 PM\nTo:     Golob, Sam\nSubject:        RE: Wachovia version of the WMOD pgm . . .\n\nSam -\n\nActually, this is the switch-hitter version.  It will run either\nunder TSO or in batch.  I use the batch mode primarily for testing\nso I can get a better dump.  Batch JCL looks something like this:\n\n//GO       EXEC PGM=WMOD,PARM=IEFW21SD,COND=(4,LT)\n//STEPLIB  DD   DSN=&&LOAD,DISP=(OLD,PASS)\n//SYSUDUMP DD   SYSOUT=*\n//CERMFILE DD   SYSOUT=*\n//SYSPROC  DD   DISP=SHR,DSN=SYS2.STSECURE.ISPCLIB\n//         DD   DISP=SHR,DSN=SYS2.STMISC.ISPCLIB\n//         DD   DISP=SHR,DSN=SYS2.STMISC.ISPELIB\n//         DD   DISP=SHR,DSN=SYS2.SFOEM.ISPCLIB\n//         DD   DISP=SHR,DSN=SYS2.SFIBM.ISPCLIB\n//         DD   DISP=SHR,DSN=LIBPL.ATTSOPRO.ISPCLIB\n//         DD   DISP=SHR,DSN=LIBPL.ATTSOPRO.ISPELIB\n//\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE249": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04]\\x00B\\x01\\x164o\\x01\\x164o\\x02\\x12\\x00M\\x00M\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf3@@@'", "ispf": {"version": "04.93", "flags": 0, "createdate": "2016-12-11T00:00:00", "modifydate": "2016-12-11T02:12:42", "lines": 77, "newlines": 77, "modlines": 0, "user": "CBT-493"}, "text": "//***FILE 249 is from Eileen Barkow of DOITT - New York City,       *   FILE 249\n//*           New York, and contains a collection of useful         *   FILE 249\n//*           programs.                                             *   FILE 249\n//*                                                                 *   FILE 249\n//*     email:   ebarkow@doitt.nyc.gov                              *   FILE 249\n//*                                                                 *   FILE 249\n//*     email:   sbgolob@cbttape.org                                *   FILE 249\n//*                                                                 *   FILE 249\n//*     - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   *   FILE 249\n//*                                                                 *   FILE 249\n//*     WMOD was fixed and improved to work on OS/390 2.8.  The     *   FILE 249\n//*     program broke somewhere between 2.5 and 2.8.  This fix      *   FILE 249\n//*     was made by Steve Niebauer of Wachovia Bank.                *   FILE 249\n//*                                                                 *   FILE 249\n//*     email:   Steve.Niebauer@Wachovia.Com                        *   FILE 249\n//*                                                                 *   FILE 249\n//*     Steve's version of WMOD is member WMOD.  Eileen's versions  *   FILE 249\n//*     are called WMODTSO and WMODCICS.  Please see members called *   FILE 249\n//*     $$NOTE and $$NOTE1.                                         *   FILE 249\n//*                                                                 *   FILE 249\n//*     I tested the new WMOD on OS/390 2.10 and it appears to      *   FILE 249\n//*     work fine.  (SBG)  For older systems, use Eileen's old      *   FILE 249\n//*     version, WMODTSO2.                                          *   FILE 249\n//*                                                                 *   FILE 249\n//*     Tested WMOD on z/OS 2.2 and seems to work fine.             *   FILE 249\n//*     Problem fixed in this version of WMOD to make sure          *   FILE 249\n//*     SYSPROC was still there, before trying to close it.         *   FILE 249\n//*                                                                 *   FILE 249\n//*     - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   *   FILE 249\n//*                                                                 *   FILE 249\n//*     Eileen has also fixed WMODTSO and WMODCICS for newer        *   FILE 249\n//*     systems.  These are members WMODTSO and WMODCICS.  Eileen's *   FILE 249\n//*     former members are WMODTSO1 and WMODCIC1.  The earlier      *   FILE 249\n//*     fixed versions are WMODTSO2 and WMODCIC2.                   *   FILE 249\n//*                                                                 *   FILE 249\n//*     - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   *   FILE 249\n//*                                                                 *   FILE 249\n//*     THE FOLLOWING PROGRAMS ARE IN THIS COLLECTION:              *   FILE 249\n//*                                                                 *   FILE 249\n//*     WMOD FOR TSO  -  FIND OCCURRENCES OF A PDS MEMBER NAME.     *   FILE 249\n//*                      THIS PROGRAM WILL SEARCH ALLOCATED         *   FILE 249\n//*                      PDS LIBRARIES IN THE TSO ADDRESS SPACE     *   FILE 249\n//*                      FOR THE SPECIFIED MODULE NAME, INCLUDING   *   FILE 249\n//*                      CLISTS, SOURCE, ISPF LIBRARIES, ETC. IT    *   FILE 249\n//*                      WILL ALSO SEARCH STEPLIB, LPA, LINKLIST    *   FILE 249\n//*                      AND SVCLIB.  FOR LPA MODULES, THE          *   FILE 249\n//*                      ADDRESS IN LPA WILL BE RETURNED.  FOR      *   FILE 249\n//*                      ALL OTHERS, THE DATASET NAME WILL BE       *   FILE 249\n//*                      RETURNED.                                  *   FILE 249\n//*                                                                 *   FILE 249\n//*     WMOD FOR CICS -  FIND OCCURRENCES OF A PDS MEMBER NAME.     *   FILE 249\n//*                      THIS PROGRAM SEARCHES ALL DFHRPL           *   FILE 249\n//*                      LIBRARIES, STEPLIB, LINKLIST, LPA, AND     *   FILE 249\n//*                      SVCLIB FOR SPECIFIED MODULE NAME.  IT      *   FILE 249\n//*                      TAKES A GUESS AS TO WHERE CICS LOADED      *   FILE 249\n//*                      THE MODULE FROM IF THE MODULE EXISTS IN    *   FILE 249\n//*                      MULTIPLE PLACES (IE:  MODULE IS IN         *   FILE 249\n//*                      DFHRPL AS WELL AS STEPLIB AND LPA).        *   FILE 249\n//*                                                                 *   FILE 249\n//*     UCB           -  IF YOU GIVE THE UNIT ADDRESS, THIS WILL    *   FILE 249\n//*                      RETURN THE VOLUME SERIAL.  IF YOU GIVE     *   FILE 249\n//*                      THE VOLUME SERIAL, THIS WILL GIVE THE      *   FILE 249\n//*                      UNIT ADDRESS.  USES UCBLOOK AND WORKS      *   FILE 249\n//*                      FOR DYNAMIC UCB'S.                         *   FILE 249\n//*                      (Updated for 4-byte UCB's.  Doesn't need   *   FILE 249\n//*                      the SVC to get authorized.  Only needs     *   FILE 249\n//*                      an entry in the IKJEFTE2 (AUTHCMD table    *   FILE 249\n//*                      in IKJTSOxx PARMLIB member).               *   FILE 249\n//*                                                                 *   FILE 249\n//*     UCBSVC        -  UCB program linkedited SETCODE(0) and      *   FILE 249\n//*                      which gets its authorization instead,      *   FILE 249\n//*                      from an SVC.  (Same program as UCB.)       *   FILE 249\n//*                                                                 *   FILE 249\n//*     UCBOLD        -  The previous version of UCB.               *   FILE 249\n//*                                                                 *   FILE 249\n//*     SVC           -  AUTH SVC                                   *   FILE 249\n//*                                                                 *   FILE 249\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CONVCODE": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x95\\x19\\x9f\\x00\\x95 \\x0f\\x13\\x07\\x00,\\x00\\x1c\\x00\\x00\\xc5\\xc9\\xd3\\xc5\\xc5\\xd5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-07-18T00:00:00", "modifydate": "1995-07-19T13:07:00", "lines": 44, "newlines": 28, "modlines": 0, "user": "EILEEN"}, "text": "          MACRO\n&NAME  CONVCODE &IN=0(3),&LEN=0(2),&OUT=0(1)\n.***************************************************************\n.* THIS MACRO IS USED TO CONVERT THE HEX DATA SPECIFIED IN THE\n.* 'IN' PARM TO DISPLAYABLE EXTENDED DECIMAL FORMAT. 'LEN' IS\n.* THE LENGTH OF THE DATA REFERENCED BY 'IN'. IT IS PLACED IN\n.* THE FIELD REFERENCED BY 'OUT' FOR WHATEVER LENGTH IS NECESSARY.\n.*****\n.* EXAMPLE:\n.* TO DISPLAY THE 2 BYTES OF HEX DATA IN FIELD A AND PLACE IT INB:\n.* CONVCODE IN=A,LEN=L'A,OUT=B\n.* A  DC X'0102' WILL PLACE C'12' IN FIELD B\n.* B  DC C'12'\n.*****\n.* TO DISPLAY THE 4 BYTES OF HEX DATA AT THE ADDRESS IN R3 AND\n.* PLACE IT AT THE ADDRESS REFERENCED BY R4:\n.* CONVCODE IN=0(R3),LEN=4,OUT=0(R4)\n.***************************************************************\n&NAME.CONV DS  0H                  CONVERT TO DISPLAY\n         STM   1,3,&NAME.SAVE\n         LA    1,&OUT            ADDR TO MOVE TO\n         LA    3,&IN             FIELD TO CONVERT\n         LA    2,&LEN\n&NAME.GO  DS   0H\n         IC    0,0(3)            LOAD CHAR\n         SRL   0,4                 SHIFT OVER 4 BITS\n         STC   0,&NAME.CHAR        STORE IT\n         NI  &NAME.CHAR,X'0F'     ZERO OUT HI 4 BITS\n         TR   &NAME.CHAR,&NAME.TAB TRANSLATE TO DEC\n         MVC   0(1,1),&NAME.CHAR  MOVE TO OUTPUT\n         MVC  &NAME.CHAR,0(3)     MOVE FIELD\n         NI   &NAME.CHAR,X'0F'    ZERO OUT HI 4 BITS\n         TR  &NAME.CHAR,&NAME.TAB\n         MVC   1(1,1),&NAME.CHAR  MOVE TO TD ...MSGRET\n         LA    3,1(3)\n         LA    1,2(1)\n         BCT   2,&NAME.GO         NEXT BYTE IF ANY\n          LM   1,3,&NAME.SAVE\n           B    &NAME.END\n&NAME.SAVE DS  3F\n&NAME.TAB DC   X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\n&NAME.CHAR DS  C\n&NAME.END  DS   0H\n          MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ESBA": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x10_\\x00\\x95 \\x0f\\x13\\x00\\x018\\x01\\r\\x00\\x00\\xc5\\xc9\\xd3\\xc5\\xc5\\xd5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-04-15T00:00:00", "modifydate": "1995-07-19T13:00:00", "lines": 312, "newlines": 269, "modlines": 0, "user": "EILEEN"}, "text": "      MACRO\n&NAME ESBA  &ROW,&COL,&SKIP=NO,&MDT=NO,&PROT=NO,&HI=NO,&DSPD=MO,       X\n               &DNSPD=YES,&CURSOR=NO,&NNN=NO,&NUM=NO,                  X\n               &RSET=NO,&EHI=NO,&COLOR=NO,&PS=NO\n.* DSPD= DISPLAY/SELECTOR-PEN DETECTABLE\n.* DNSPD=DISPLAY/NOT SELECTOR PEN DETECTABLE\n.* NNN  =NONDISPLAY,NONPRINT,NONDETECTABLE\n.* RSET =CHAR ATTRIBUTE RESET TO DEFAULT\n.* EHI  =EXTENDED HILIGHT-DEFAULT,BLINK,REV VIDEO,UNDERSCORE\n.* COLOR =DEFAULT,BLUE,RED,PINK,GREEN,TURQ,YELLOW,WHITE,BLACK\n.* PS    =PROGRAMMED SYMBOLS 00,40-EF,F1\n.* ******************************************************\n.* THIS MACRO CAN BE USED TO SET UP AN EXTENDED 3270 CHARACTER\n.* DATA STREAM. THE ESBA MACRO PRECEDES THE DEFINITON OF THE\n.* FIELD TO BE FORMATTED. THE DATA CAN BE USED WITH AN\n.* EXEC CICS SEND COMMAND TO ELIMINATE THE USE OF BMS MAPPING.\n.* NOTE THAT THE SBA TABLES ARE CURRENTLY ONLY SET FOR MODEL 2\n.* TERMINALS. THEY WOULD HAVE TO MODIFIED FOR THE OTHER MODELS.\n.* ******************************************************\n.* EXAMPLES:\n.* TO WRITE AND MOVE CURSOR TO ROW 4,COL 3 AND SET COLOR RED\n.*        ESBA 4,3,CURSOR=YES,COLOR=RED\n.* FLDA   DC 'PUT CURSOR HERE'\n.* ***\n.* TO WRITE FLDB TO ROW 24 COLUMN 40 WITH HIGHLIGHTING AND\n.* UNDERSCORING:  ESBA 24,40,HI=YES,EHI=US\n.* FLDB   DC 'UNDERLINE THIS'\n.* ***\n.* TO PLACE A PROTECTED HIGHLIGHTED FIELD AT ROW 25 COL. 30,\n.* AND DISPLAY IN REVERSE VIDEO IN BLUE:\n.*        ESBA 25,30,HI=YES,PROT=YES,EHI=REV,COLOR=BLUE\n.* FLDC   DC 'PROTECTED FIELD IN REVERSE'\n.* ***\n.* TO OUTPUT A FIELD TO ROW 12 COL 14 WITH THE MODIFIED DATA TAG\n.* SET TO 1 AND COLOR YELLOW:\n.*        ESBA 12,14,MDT=YES,COLOR=YEL\n.* FLDD   DC 'MDT IS ON'\n.* ******************************************************\n        LCLC &TAB1(24),&TAB2(8),&Z,&T,&SBA1,&SBA2,&SBP2\n        LCLA &R,&C,&N,&S,&CLM,&PTR2\n     AIF  ('&COL' GT '80').ERR\n&T  SETC   T'&ROW\n     AIF  ('&T'     NE 'N').ERR\n&T  SETC   T'&COL\n     AIF  ('&T'     NE 'N').ERR\n.***EACH 2 BYTE ENTRY REPRESENTS FIRST BYTE SBA FOR COL 1-8 AND\n.***73-80  FOLLOWED BY TABLE 2 POINTER\n&TAB1(1) SETC '40014002400340044005400640074008C101C102'\n&TAB1(2) SETC 'C103C104C105C106C107C108C201C202C203C204'\n&TAB1(3) SETC 'C205C206C207C208C301C302C303C304C305C306'\n&TAB1(4) SETC 'C307C308C401C402C403C404C405C406C407C408'\n&TAB1(5) SETC 'C501C502C503C504C505C506C507C508C601C602'\n&TAB1(6) SETC 'C603C604C605C606C607C608C701C702C703C704'\n&TAB1(7) SETC 'C705C706C707C708C801C802C803C804C805C806'\n&TAB1(8) SETC 'C807C808C901C902C903C904C905C906C907C908'\n&TAB1(9) SETC '4A014A024A034A044A054A064A074A084B014B02'\n&TAB1(10) SETC '4B034B044B054B064B074B084C014C024C034C04'\n&TAB1(11) SETC '4C054C064C074C084D014D024D034D044D054D06'\n&TAB1(12) SETC '4D074D084E014E024E034E044E054E064E074E08'\n&TAB1(13) SETC '4F014F024F034F044F054F064F074F0850015002'\n&TAB1(14) SETC '500350045005500650075008D101D102D103D104'\n&TAB1(15) SETC 'D105D106D107D108D201D202D203D204D205D206'\n&TAB1(16) SETC 'D207D208D301D302D303D304D305D306D307D308'\n&TAB1(17) SETC 'D401D402D403D404D405D406D407D408D501D502'\n&TAB1(18) SETC 'D503D504D505D506D507D508D601D602D603D604'\n&TAB1(19) SETC 'D605D606D607D608D701D702D703D704D705D706'\n&TAB1(20) SETC 'D707D708D801D802D803D804D805D806D807D808'\n&TAB1(21) SETC 'D901D902D903D904D905D906D907D9085A015A02'\n&TAB1(22) SETC '5A035A045A055A065A075A085B015B025B035B04'\n&TAB1(23) SETC '5B055B065B075B085C015C025C035C045C055C06'\n&TAB1(24) SETC '5C075C085D015D025D035D045D055D065D075D08'\n.***EACH 8 BYTE ENTRY REPRESENTS 2ND   BYTE SBA FOR COL 1-8 THRU\n.**73-80. EACH ROW IS POINTED 2 BY TABLE POINTER IN TABLE 1.\n&TAB2(1) SETC '40C850D860E8F0F8'  COL 1-73 (SKIP 8)\n&TAB2(2) SETC 'C1C9D1D961E9F1F9'  COL 2-74\n&TAB2(3) SETC 'C24AD25AE26AF27A'  COL 3-75\n&TAB2(4) SETC 'C34BD35BE36BF37B'   COL 4-76\n&TAB2(5) SETC 'C44CD45CE46CF47C'   COL 5-77\n&TAB2(6) SETC 'C54DD55DE56DF57D'    COL 6-78\n&TAB2(7) SETC 'C64ED65EE66EF67E'    COL 7-79\n&TAB2(8) SETC 'C74FD75FE76FF77F'   COL 8-80\n        AGO .CALC\n.CALC   ANOP\n     AIF  ('&COL' LE '8').SET1\n&S   SETA  &COL-1\n&CLM  SETA  &S+1\n&C   SETA &CLM/8\n&C    SETA (&C)*4+1\n AIF (&CLM EQ 8).SUB4\n AIF (&CLM EQ 16).SUB4\n AIF (&CLM EQ 24).SUB4\n AIF (&CLM EQ 32).SUB4\n AIF (&CLM EQ 40).SUB4\n AIF (&CLM EQ 48).SUB4\n AIF (&CLM EQ 56).SUB4\n AIF (&CLM EQ 64).SUB4\n AIF (&CLM EQ 72).SUB4\n AIF (&CLM EQ 80).SUB4\n      AGO  .SETS\n.SUB4   ANOP\n&C  SETA &C-4\n.SETS ANOP\n&S    SETA &C+2\n       AGO  .DOSET\n.SET1  ANOP\n&C     SETA   1\n&S     SETA   3\n       AGO  .DOSET\n.DOSET   ANOP\n.*    AIF ('&COL' NE '80').NOT80\n.*&C     SETA  &C-4\n.*&S     SETA  &S-4\n.NOT80  ANOP\n&SBA1  SETC '&TAB1(&ROW)'(&C,2)\n&SBP2  SETC '&TAB1(&ROW)'(&S,2)\n&C   SETA  &SBP2\n&CLM   SETA  &COL\n      AIF  (&CLM LE 8).SET1R\n      AIF  (&CLM EQ 80).SET80R\n&R   SETA   &CLM/8\n&N   SETA   &R*8\n&R   SETA   &CLM-&N\n     AIF   (&R NE 0).SETSBA2\n&R  SETA   8\n      AGO   .SETSBA2\n.SET1R  ANOP\n&R    SETA   &COL\n     AGO  .SETSBA2\n.SET80R ANOP\n&R    SETA   8\n     AGO  .SETSBA2\n.SETSBA2 ANOP\n&C    SETA  (&C*2)-1\n.NOT0  ANOP\n&SBA2  SETC  '&TAB2(&R)'(&C,2)\n       DC   X'11&SBA1.&SBA2.1D'   SET SBA/SBA ADDR/START FIELD\n         AGO  .OUT\n.ERR   ANOP\n      MNOTE 12,'INVALID PARAMETER'\n       AGO   .OVER\n.OUT   ANOP\n.*  SET ATTRIBUTE BYTE\n      LCLC  &TAB3(32),&ATTR2,&ATTR,&CLR(8),&EXH(4)\n      LCLB  &B0,&B1,&B2,&B3,&B4,&B5,&B6,&B7\n       AIF ('&SKIP' NE 'YES').NOSKIP\n&B2    SETB  1\n&B3    SETB  1\n       AGO  .SELHI\n.NOSKIP  ANOP\n       AIF ('&PROT' NE 'YES').NOPROT\n&B2    SETB  1\n       AGO  .SELHI\n.NOPROT ANOP\n       AIF ('&NUM' NE 'YES').NONUM\n&B3    SETB  1\n       AGO  .SELHI\n.NONUM  ANOP\n       AGO  .SELHI\n.SELHI   ANOP\n       AIF ('&HI' NE 'YES').NOHI\n&B4     SETB  1\n&B5     SETB  0\n        AGO   .SELMDT\n.NOHI   ANOP\n       AIF ('&NNN' NE 'YES').NONNN\n&B4     SETB  1\n&B5     SETB  1\n        AGO   .SELMDT\n.NONNN  ANOP\n       AIF ('&DSPD' NE 'YES').NODSPD\n&B4    SETB  0\n&B5    SETB  1\n       AGO   .SELMDT\n.NODSPD ANOP\n       AIF ('&DNSPD' NE 'YES').NODNSPD\n&B4     SETB  0\n&B5     SETB  0\n        AGO   .SELMDT\n.NODNSPD ANOP\n&B4      SETB  0\n&B5      SETB  1\n        AGO  .SELMDT\n.SELMDT  ANOP\n        AIF  ('&MDT' NE 'YES').NOMDT\n&B7     SETB   1\n.NOMDT   ANOP\n&ATTR2 SETC '&B2.&B3.&B4.&B5.&B6.&B7'\n.*PROT/AN/HI/SPD/NPD/MDT\n&TAB3(1)   SETC '01000000'  U.....\n&TAB3(2)   SETC '11000001'  U....Y\n&TAB3(3)   SETC '11000100'  U..Y..\n&TAB3(4)   SETC '11000101'  U..Y.Y\n&TAB3(5)   SETC '11001000'  U.HY..\n&TAB3(6)   SETC '11001001'  U.HY.Y\n&TAB3(7)   SETC '01001100'  U...Y.\n&TAB3(8)   SETC '01001101'  U...YY\n&TAB3(9)   SETC '01010000'  UN....\n&TAB3(10)  SETC '11010001'  UN...Y\n&TAB3(11)  SETC '11010100'  UN.Y..\n&TAB3(12)  SETC '11010101'  UN.Y.Y\n&TAB3(13)  SETC '11011000'  UNHY..\n&TAB3(14)  SETC '11011001'  UNHY.Y\n&TAB3(15)  SETC '01011100'  UN..Y.\n&TAB3(16)  SETC '01011101'  UN..YY\n&TAB3(17)  SETC '01100000'  P.....\n&TAB3(18)  SETC '01100001'  P....Y\n&TAB3(19)  SETC '11100100'  P..Y..\n&TAB3(20)  SETC '11100101'  P..Y.Y\n&TAB3(21)  SETC '11101000'  P.HY..\n&TAB3(22)  SETC '11101001'  P.HY.Y\n&TAB3(23)  SETC '01101100'  P...Y.\n&TAB3(24)  SETC '01101101'  P...YY\n&TAB3(25)  SETC '11110000'  PS....\n&TAB3(26)  SETC '11110001'  PS...Y\n&TAB3(27)  SETC '11110100'  PS.Y..\n&TAB3(28)  SETC '11110101'  PS.Y.Y\n&TAB3(29)  SETC '11111000'  PSHY..\n&TAB3(30)  SETC '11111001'  PSHY.Y\n&TAB3(31)  SETC '01111100'  PS..Y.\n&TAB3(32)  SETC '01111101'  PS..YY\n.* GET VALUE OF BITS 0 AND 1\n&ATTR SETC '&TAB3(1)'\n&N   SETA  N'&TAB3\n&R   SETA  1\n.GETATTR  ANOP\n&T   SETC  '&TAB3(&R)'(3,6)\n      AIF  ('&T' EQ '&ATTR2').GOTATTR\n&R   SETA   &R+1\n      AIF (&R GT &N).PUTATTR\n     AGO  .GETATTR\n.GOTATTR  ANOP\n&ATTR SETC  '&TAB3(&R)'\n       AGO   .PUTATTR\n.PUTATTR ANOP\n     AIF ('&ATTR' EQ '').SKA1\n     DC  B'&ATTR'\n.SKA1   ANOP\n       AIF ('&CURSOR' NE 'YES').NOCURS\n        DC   X'13'   INSERT CURSOR\n         AGO  .OVER\n.NOCURS   ANOP\n         AGO  .OVER\n.OVER    ANOP\n.*PROCESS EXTENDED ATTRIBUTES IF ANY\n      AIF ('&RSET' NE 'NO').SETRSET\n.TESTEHI  ANOP\n      AIF ('&EHI' NE 'NO').SETEHI\n.TESTCOLR ANOP\n      AIF ('&COLOR' NE 'NO').SETCOLOR\n.TESTPS   ANOP\n      AIF ('&PS' NE 'NO').SETPS\n       AGO .OVERMORE\n.SETRSET ANOP\n      AIF ('&RSET' NE 'YES').ERR\n       DC  X'2800'\n      AGO .TESTEHI\n.SETEHI  ANOP\n&EXH(1) SETC '00'  DEFAULT\n&EXH(2) SETC 'F1'  BLINK\n&EXH(3) SETC 'F2'  REVERSE VIDEO\n&EXH(4) SETC 'F4'  UNDERSCORE\n&N  SETA 1\n      AIF ('&EHI' EQ 'DEF').PUTEHI\n&N  SETA &N+1\n      AIF ('&EHI' EQ 'BLINK').PUTEHI\n&N  SETA &N+1\n      AIF ('&EHI' EQ 'RV').PUTEHI\n&N  SETA &N+1\n      AIF ('&EHI' EQ 'US').PUTEHI\n       AGO  .ERR\n.PUTEHI DC  X'2841',X'&EXH(&N)'\n       AGO  .TESTCOLR\n.SETCOLOR  ANOP\n&CLR(1) SETC '00' DEFAULT\n&CLR(2) SETC 'F1' BLUE\n&CLR(3) SETC 'F2' RED\n&CLR(4) SETC 'F3' PINK\n&CLR(5) SETC 'F4' GREEN\n&CLR(6) SETC 'F5' TURQUOISE\n&CLR(7) SETC 'F6' YELLOW\n&CLR(8) SETC 'F7' WHITE FOR 3279; BLACK FOR 3287\n&N  SETA 1\n      AIF ('&COLOR' EQ 'DEF').PUTCOLOR\n&N  SETA &N+1\n      AIF ('&COLOR' EQ 'BLUE').PUTCOLOR\n&N  SETA &N+1\n      AIF ('&COLOR' EQ 'RED').PUTCOLOR\n&N  SETA &N+1\n      AIF ('&COLOR' EQ 'PINK').PUTCOLOR\n&N  SETA &N+1\n      AIF ('&COLOR' EQ 'GREEN').PUTCOLOR\n&N  SETA &N+1\n      AIF ('&COLOR' EQ 'TURQ').PUTCOLOR\n&N  SETA &N+1\n      AIF ('&COLOR' EQ 'YEL').PUTCOLOR\n&N  SETA &N+1\n      AIF ('&COLOR' EQ 'WHITE').PUTCOLOR\n      AIF ('&COLOR' EQ 'BLACK').PUTCOLOR\n       AGO  .ERR\n.PUTCOLOR ANOP\n    DC  X'2842',X'&CLR(&N)'\n       AGO  .TESTPS\n.SETPS  DS  0H\n&Z SETC '00'\n      AIF ('&PS' EQ 'DEF').PUTPS\n&Z SETC '&PS'\n      AGO  .PUTPS\n.PUTPS ANOP\n    DC X'2843',X'&Z'\n    AGO .OVERMORE\n.OVERMORE ANOP\n        MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MACLIB": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x143O\\x01\\x143O\\x15G\\x16\\xd8\\x16\\xd8\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf2\\xf4\\xf9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-11-30T00:00:00", "modifydate": "2014-11-30T15:47:00", "lines": 5848, "newlines": 5848, "modlines": 0, "user": "FILE249"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PRD": {"ttr": 3078, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x95 /\\x00\\x95 /\\x10\"\\x03\\x85\\x03\\x7f\\x00\\x00\\xc5\\xc9\\xd3\\xc5\\xc5\\xd5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-07-21T00:00:00", "modifydate": "1995-07-21T10:22:00", "lines": 901, "newlines": 895, "modlines": 0, "user": "EILEEN"}, "text": " TITLE 'PARTRD-READ SPECIFIED LINES OF SPOOL FILE ONTO OTHER FILE'\n**********P R D************CMS VERSION***************\n*THIS PROGRAM WILL COPY VM SPOOL FILES TO EITHER ANOTHER SPOOL\n*FILE OR A CMS DISK FILE AND PRESERVE THE CONTROL CHARACTERS.\n*TO ASSEMBLE: A PRD (OR HASM PRD). LOAD PRD (CLEAR. GENMOD PRD (ALL\n*****************************************************\n*FORMAT: PRD NNNN  (NNNN=SPOOL FILE NUMBER; DEFAULT=FIRST FILE)\n*                   WILL COPY ONTO ANOTHER SPOOL FILE\n*        PRD D NNNN FILENAME FILETYPE FILEMODE\n*                   (NNNN=SPOOL FILE NUMBER-MUST BE SPECIFIED)\n*                   WILL CREATE FILE SPECIFIED AS FILENAME, ETC.\n*****************************************************\n* LOCAL VARIABLES\n*\n*        NONE\n*\n TITLE '- REGISTER USAGE'\n*\n* REGISTER USAGE -\n*\n*        R15 - SUBROUTINE LINKAGE AND RETURN CODE\n*        R14 - SUBROUTINE LINKAGE AND RETURN ADDRESS\n*        R13 - SAVE AREA ADDRESS\n*        R12 - BASE ADDRESS\n*        R11 - BASE ADDRESS\n*        R10 - SUBROUTINE LINKAGE\n*        R9  - SUBROUTINE LINKAGE\n*        R8  - WORK\n*        R7  - WORK\n*        R6  - WORK\n*        R5  - DIAGNOSE X'14' SUBCODES\n*        R4  - VIRTUAL READER ADDRESS (X'00C' FOR DIAGNOSE X'14')\n*        R3  - PAGE-SIZED, PAGE-ALIGNED BUFFER FOR DIAGNOSE X'14'\n*        R2  - OUTPUT LINE BUILD AREA\n*        R1  - WORK\n*        R0  - WORK\n*\n TITLE '- ENTRY, EXIT, AND PARM PROCESSING'\n*\n* ENTRY, EXIT, AND PARM PROCESSING\n*\n         PRINT ON,GEN\n         USING NUCON,R0            ADDRESS CMS NUCLEUS\n         USING PARTRD,R11,R12     ADDRESS THIS PROGRAM\nPARTRD   CSECT\n         STM  14,12,12(13)         SAVE CALLER'S REGS\n         LR    R11,R15             ESTABLISH ADDRESSABILITY\n         LR    R12,R13             SAVE CALLER'S SAVE AREA ADR.\n         LA    R13,SAVE            LOAD MY SAVE AREA ADR.\n         ST    R13,8(R12)          GIVE CALLER MY SAVE AREA ADR.\n         ST    R12,4(R13)          TAKE CALLER'S SAVE AREA ADR.\n         LA    R12,4095(,R11)      SET UP ...\n         LA    R12,1(,R12)         2ND BASE REGISTER\n         B     START               BRANCH AROUND RETURN CODE\n*\nSAVE     DC    18F'0'              SAVE AREA\n*\nHOME     ICM   R1,B'1111',PAGEBUFF  WAS DIAGNOSE 14 BUFFER ALLOCATED?\n         BZ    HOME3               NO, CONTINUE ->\n         L     R0,=F'8200'         YES, GET SIZE, TOO\n         FREEMAIN R,LV=(0),A=(1)   FREE THE BUFFER\nHOME3    L     R13,4(R13)          RESTORE CALLER'S SAVE AREA PTR\n         LM    14,12,12(13)        RESTORE REGS & RETURN VIA R14\n         SR    15,15\n         BR    14\n*\nSTART    EQU   *                   BRANCH TARGET\n*\n* PARM PROCESSING\n*        R2  - PARM POINTER\n*        R15 - ERROR EXIT FOR DECBIN SUBROUTINE\n*        PARTRD   SPOOLID FROMLINE NUMLINES\n*\n         LA    R2,8(,R1)           POINT FIRST PARM\n         CLI   0(R2),X'FF'         FENCE?\n         BE    PARMEND             YES, NO PARMS AT ALL ->\n         LA    R15,OPTINVLD        LOAD ERROR EXIT FOR...\n         CLI   0(R2),C'D'          WRITE TO DISK FILE\n         BNE   *+12                NO..\n         OI    RUNTYPE,DISK\n         LA    R2,8(R2)            NEXT PARM\n         CLI   0(R2),X'FF'\n         BE    PARMEND\n*\nTESTSPID DS    0H\n         CLI   0(R2),C'*'         FIRST SPOOL FILE\n         BE    TESTFNFM           YES..\n        CLI    0(R2),C'0'         NUMERIC SPOOLID\n         BL    TESTFN            NO.....\n         L     R10,=A(DECBIN)      ADDR OF SUBROUTINE\n         BALR  R14,R10\n         ST    R1,SPLIDBIN         SAVE SPOOLID BINARY\n         B     TESTFNFM\n*\nTESTFNFM DS    0H\n         LA    R2,8(,R2)           POINT NEXT PARM\n        CLI    0(R2),X'FF'\n         BE    PARMEND\nTESTFN   DS    0H\n         TM    RUNTYPE,DISK     DISK WANTED\n         BNO   TESTCOPY         NO..SKIP FILE NAME CHECKS\n        CLI    0(R2),C'Z'        FN ....FN MUST BE ALPHA\n        BH     TESTCOPY          NO\n        MVC    PFN,0(R2)\n        LA     R2,8(R2)\n        CLI    0(R2),X'FF'\n         BNE   TESTFT\n         B     PARMEND\n*\nTESTFT  DS     0H\n        CLI    0(R2),C'Z'        FT GIVEN....MUST BE ALPHA\n        BH     TESTCOPY          NO\n        MVC    PFT,0(R2)         FILETYPE\n        LA     R2,8(R2)\n        CLI    0(R2),X'FF'\n         BNE   TESTFM\n         BE    PARMEND\n*\nTESTFM   DS    0H\n        CLI    0(R2),C'Z'        FM GIVEN\n        BH     TESTCOPY          NO\n        MVC    PFM,0(R2)         FILEMODE\n         LA    R2,8(,R2)           POINT NEXT PARM\n         CLI   0(R2),X'FF'         FENCE?\n         BE    PARMEND             YES, ->\n         B     TESTCOPY\n*\nTESTCOPY DS    0H\n         L     R10,=A(DECBIN)      ADDR OF SUBROUTINE\n         BALR  R14,R10             BEG LINE TO COPY\n         LTR   R1,R1\n         BZ    *+6\n         BCTR  R1,0\n         ST    R1,FROMLINE         SAVE BEG LINE TO COPY\n         LA    R2,8(,R2)           POINT NEXT PARM\n         CLI   0(R2),X'FF'         FENCE?\n         BE    PARMEND             YES, ->\n         L     R10,=A(DECBIN)      ADDR OF SUBROUTINE\n         BALR  R14,R10             NUMBER OF LINES TO COPY\n         ST    R1,NUMLINES         SAVE NUMBER OF LINES TO COPY\n         B     PARMEND             YES, ->\n*\nOPTINVLD SH    R2,=H'8'            BACKUP TO OPTION WORD\n         B     HOME                AND RETURN TO CALLER\n*\n*\nPARMEND  EQU   *                   PARM/OPTION SCAN END\n         OC   NUMLINES,NUMLINES    NUMBER OF LINES GIVEN\n         BNZ  SPOOLACQ             YES..\n         MVC  NUMLINES,=XL4'FFFFFFFF'   SET TO WHOLE FILE\n         B    SPOOLACQ\nSPOOLACQ DS   0H\n*\n TITLE '- SPOOL FILE ACQUISITION'\n*\n* SPOOL FILE ACQUISITION\n*        R3  - PAGE-SIZED, PAGE-ALIGNED BUFFER\n*        R4  - VIRTUAL RDR ADDRESS\n*        R5  - DIAGNOSE 14 CODES\n*\n* GET A PAGE-SIZED, PAGE-ALIGNED BUFFER:\n*\nPAGEGET  GETMAIN R,LV=8200         GET MORE THAN ENOUGH\n         ST    R1,PAGEBUFF         SAVE WHOLE BUFFER START\n         N     R1,=X'FFFFF000'     ROUND DOWN TO PAGE\n         A     R1,=X'00001000'     ROUND UP TO NEXT FULL PAGE\n         LR    R3,R1               COPY PAGE ADDRESS\n         ST    R3,PAGEADDR         SAVE PAGE ADDRESS\n*\n         USING SFBLOK,R3           ADDRESS THE BUFFER\n*\n         LA    R4,X'00C'           VIRTUAL RDR ADDRESS\n         L     R6,SPLIDBIN         GET SPECIFIED SPOOL ID\n         LTR   R6,R6               WAS SPOOLID SPEC'D?\n         BZ    SFRESET             NO, SEE WHAT FIRST FILE IS\n         LA    R5,X'00C'           SET 'SELECT SFBLOK' CODE\n         DC    X'83640014'         DIAG. SPOOL MANIPULATION\n         BNZ   SFBERR                 ERROR, CONTINUE ->\n         B     SFRESET\nSFRESET  DS    0H\n         LA    R6,=C'CL C HO'      POINT TO CP COMMAND\n         LA    R7,7                LOAD CP COMMAND LENGTH\n         DC    X'83670008'         DIAGNOSE CONSOLE FUNCTION\n         LA    R4,0                SET SPOOL ID\n         LA    R5,X'0FFF'          RETREIVE FILE DESCRIP\n         DC    X'83340014'         DIAGNOSE CONSOLE FUNCTION\n         B     SFTESTPU\nSFTESTPU DS    0H\n         CLC   SFBRECSZ,=XL2'0050' LRECL 80\n         BH    SFBNEXT             IF > MUST BE PRINTER FILE\n         B     PUBNEXT             ELSE PUN FILE\n*\nSFBERR   WRTERM 'FILE NOT FOUND OR INVALID.'  TELL USER\n         LA    R15,8               SET RETURN CODE\n         B     HOME                AND RETURN TO CALLER\n*\nSFBNEXT  DS    0H                  SET 'READ PRT SFBLOK' CODE\n         CLI   SPPUN,X'01'         PUNCH FILE\n         BE    PUBNEXT\n         LA    R5,4                SET 'READ PRT SFBLOK' CODE\n         LA    R4,X'00C'           SET READER ADDR\n         DC    X'83340014'         DIAG. SPOOL MANIPULATION\n         BNZ   SFBERR0             ERROR, ->\n         B     SFBSEL             GO SELECT FILE\n*\nSFBERR0  DS    0H\n         CLI   SPPUN,X'02'         FIRST TIME THRU\n         BNE   SFBERR              NO...THEN ERROR\n         LA    R4,X'00C'           VIRTUAL RDR ADDRESS\n         L     R6,SPLIDBIN         GET SPECIFIED SPOOL ID\n         LTR   R6,R6               WAS SPOOLID SPEC'D?\n         BZ    PUBNEXT             NO, GO GET NEXT ONE\n         LA    R5,X'00C'           SET 'SELECT SFBLOK' CODE\n         DC    X'83640014'         DIAG. SPOOL MANIPULATION\n         BZ    PUBNEXT             NO ERROR, CONTINUE ->\n         B     SFBERR                ...THEN ERROR\n*\nPUBNEXT  DS    0H\n         LA    R5,8                SET 'READ PUN SFBLOK' CODE\n         LA    R4,X'00C'           VIRTUAL RDR ADDRESS\n         DC    X'83340014'         DIAG. SPOOL MANIPULATION\n         BNZ   SFBERR              ERROR, ->\n         MVI   SPPUN,X'01'         FLAG PUNCH FILE\n         OC    FROMLINE,FROMLINE   STARTING LINE GIVEN\n         BZ    SPPNUM              NO...\n         L     1,FROMLINE          STARTING LINE NUMBER\n         LA    1,1(1)              ADJUST FOR HEADER\n         ST    1,FROMLINE\nSPPNUM   DS    0H\n         CLI   NUMLINES,X'FF'      WHOLE FILE TO BE COPIED\n         BE    SFBSEL              YES....\n         TM    RUNTYPE,DISK        DISK FILE WANTED\n         BO    SFBSEL              YES..LEAVE NUMLINES ALONE\n         CLC   FROMLINE,=XL4'00000002'  STARTING LINE <  2\n         BNL   SFBSEL              NO...LEAVE NUMLINES ALONE\n         L     1,NUMLINES          LOAD NUMBER\n         LA    1,1(1)              ADD 1 FOR HEADER\n         ST    1,NUMLINES\n         B     SFBSEL\n*\nSFBSEL   DS    0H\n* SELECT FILE FOR PROCESSING (FOR SURE)\n*\n         LH    R6,SFBFILID         GET SPOOL FILE ID\n         LA    R5,X'00C'           SET 'SELECT SFBLOK' CODE\n         LA    R4,X'00C'           SET 'SELECT SFBLOK' CODE\n         DC    X'83640014'         DIAGNOSE SPOOL MANIPULATION\n         BNZ   SFBERR              CC \u00ac= 0, ERROR ->\n*\n* CHECK IF RIGHT ONE\n*\n         L     R2,SPLIDBIN         GET SPECIFIED SPOOL ID\n         LTR   R2,R2               ANYTHING THERE?\n         BZ    SFBCONT             NO, CONTINUE ->\n         CR    R2,R6               SAME FILE ID?\n         BNE   SFBERR              NO, DO ERROR ->\nSFBCONT  EQU   *\n*\n* GET START OF SFBLOK AGAIN, FOLLOWED BY TAG RECORD\n*\nSFBDESC  LA    R5,X'0FFF'          SET 'RETRIEVE DESCRIPTOR' CODE\n         SR    R4,R4               SCAN FROM RDR START (FILE ORDERED)\n         DC    X'83340014'         DIAG. SPOOL MANIPULATION\n         BNZ   SFBERR              ERROR, ->\n*\n TITLE '- PRE-FILE PROCESSING'\n*\n* PRE-FILE PROCESSING\n*\n* CONVERT SPOOLID TO CHARACTER, AND SAVE SPOOL FILE INFORMATION\n*\nCONVERT  CVD   R6,DBLWORD          CONVERT TO DECIMAL PACKED\n         UNPK  DBLWORD(4),DBLWORD+5(3)  UNPACK TO ZONED\n         OI    DBLWORD+3,X'F0'     FIX SIGN\n         MVC   SPLIDCHR(4),DBLWORD  SET SPOOLID\n*\n*        L     R6,SFBRECNO         GET NUMBER OF DATA RECORDS\n*        ST    R6,RECCNT           SAVE FOR LATER\n         LA    R6,=C'CL C HO'      POINT TO CP COMMAND\n         LA    R7,7                LOAD CP COMMAND LENGTH\n         DC    X'83670008'         DIAGNOSE CONSOLE FUNCTION\n* *****SPOOL PRINTER TO READER*****\n         LA    R6,SPTOPRT           OINT TO CP COMMAND\n         CLI   SPPUN,X'01'         PUN FILE\n         BNE   *+8                 NO\n         LA    R6,SPTOPUN           OINT TO CP COMMAND\n         LA    R7,L'SPTOPRT        LOAD CP COMMAND LENGTH\n         DC    X'83670008'         DIAGNOSE CONSOLE FUNCTION\n*\n         BAL   R10,OUTCLEAR        CLEAR INPUT BUFFER\nENDJDER  DS    0H\n         OC    NUMLINES,NUMLINES   NUMBER OF LINES SPECIFIED\n         BNZ   *+10                YES.....\n         MVC   NUMLINES,=XL4'FFFFFFFFFF'      WHOLE FILE\n         TM    RUNTYPE,DISK        DISK FILE PROCESSING\n         BNO   POINTB              NO...\n         LA   R1,DFILE            FSCB\n         CLI  SPPUN,X'01'         PUN FILE\n         BNE  *+8                 NO\n         LA   R1,UFILE            FSCB\n         USING FSCBD,R1           FSCB DSECT\n         OC   PFN,PFN             ANY FN GIVEN\n         BZ   SETFILE             NO..\n         MVC  FSCBFN,PFN\n         OC   PFT,PFT             ANY FT GIVEN\n         BZ   SETFILE             NO..\n         MVC  FSCBFT,PFT\n         OC   PFM,PFM             ANY FM GIVEN\n         BZ   SETFILE             NO..\n         MVC  FSCBFM,PFM\nSETFILE  DS   0H\n         MVC  DISPFN(L'FSCBFN),FSCBFN   SAVE FOR DISPLAY\n         MVC  DISPFT(L'FSCBFT),FSCBFT   SAVE FOR DISPLAY\n         MVC  DISPFM(L'FSCBFM),FSCBFM   SAVE FOR DISPLAY\n         LA   R2,FSCBFN           FILE ID\n         ST   R2,FILEID          SAVE ADDR OF FILEID\n         CLI  SPPUN,X'01'        PUN FILE\n         BNE  STATEPRT           NO....\n         FSSTATE  (R2),FSCB=UFILE SEE IF FILE EXISTS\n         B     STATED\nSTATEPRT  DS  0H\n         FSSTATE  (R2),FSCB=DFILE SEE IF FILE EXISTS\n         B     STATED\nSTATED   DS    0H\n         LTR   15,15              DOES FILE EXISTS\n         BNZ   OPENFILE           NO...\n         FSERASE  (R2)            ERASE IT\nOPENFILE  DS   0H\n         CLI    SPPUN,X'01'    PUN FILE\n         BNE    OPENPRT\n         FSOPEN  (R2),FSCB=UFILE OPEN FILE\n         B     POINTB\nOPENPRT   DS    0H\n         FSOPEN  (R2),FSCB=DFILE OPEN FILE\n         B     POINTB\n         DROP  R1\nPOINTB   DS    0H\n         LA    R2,OUTBUFF          POINT TO LINE BUILD AREA\n         L     R3,PAGEADDR         RESTORE SPOOL BUFFER POINTER\n         B     BEGSF\n*\n TITLE '- FILE PROCESSING '\n*\n* FILE PROCESSING\n*        R5  - DIAGNOSE 14 CODE / DATA LENGTH\n*        R6  - SPOOL BUFFER CCW COUNT\n*        R7  - SPOOL BUFFER CCW POINTER\n*        R8  - CCW OP CODE PROCESSING\n*        R9  - ASA CHARACTER PROCESSING\n*        R10 - DATA DISPLACEMENT/LENGTH PROCESSING\n*\nBEGSF    DS    0H\n         L     R3,PAGEADDR         POINT TO PAGE BUFFER\n         LA    R4,X'00C'           RESET VIRTUAL READER ADDRESS\n*\n* GET FIRST/NEXT SPOOL BUFFER\n*\nSFNEXT   DS    0H\n         SR    R5,R5               SET 'READ NEXT SPOOL BUFFER' CODE\n         DC    X'83340014'         READ IN THE NEXT SPOOL PAGE\n         BC    4,SFEOF             BRANCH IF END OF FILE...\n*        BNZ   ERRSFB2             BRANCH IF ANY OTHER ERROR ->\n*\n*\n         L     R6,12(,R3)          GET NUMBER OF CCW'S IN THIS PAGE\n         LA    R7,8(,R3)           POINT FIRST CCW\n*\n         B     NEXTCCW\n* PROCESS THE NEXT CCW IN THE SPOOL BUFFER\n*\nNEXTCCW   DS   0H\n         LTR   R6,R6               ANY CCW'S LEFT IN PAGE ?\n         BNP   SFNEXT              NO, GET NEXT SPOOL PAGE\n         LA    R7,8(,R7)           POINT TO THE NEXT CCW\nCHECKTIC CLI   0(R7),X'08'         GOT A TIC ?\n         BNE   TWITCH              NO, JUST A NERVOUS TWITCH\n         AH    R7,2(,R7)           YES, POINT TO NEXT CCW + 8\n         SL    R7,=F'8'            POINT TO NEXT CCW\n         B     CHECKTIC            ENSURE NOT A TIC (ILLEGAL)\nTWITCH   DS    0H\n         CLI   SPPUN,X'01'         PUNCH FILE\n         BNE   VALCCW              NO...\n         CLI   0(7),X'4E'\n         BE    NEXTCCW\n         CLI   0(R7),X'41'         THIS A PUNCH FILE CCW ?\n         BE    *+12                YES..CONTINUE\n         CLI   0(R7),X'42'         MAYBE A READER FILE CCW ?\n         BNE   VALCCW              NO...GO VALIDATE\n         BCTR  R6,0                KEEP TRACK OF CCW'S LEFT\n         LH    R5,6(R7)            DATA LENGTH\n         LTR   R5,R5               ANY DATA\n         BZ    NEXTCCW             NO....\n         OC    FROMLINE,FROMLINE   STARTING REACHED YET\n         BZ    COUNTPUN            NO....\n         L     1,FROMLINE          GET START COUNTER\n         BCTR  1,0                 DECREMENT\n         ST    1,FROMLINE          SAVE\n         B     NEXTCCW             SKIP THIS LINE\nCOUNTPUN DS    0H\n         MVC   OUTBUFF(80),=80C' '  BLANK OUTPUT LINE\n         LR    R10,R7              POINT TO CCW\n         AH    R10,2(R10)          POINT TO DATA\n         BCTR  R5,0                LENGHT FOR MOVE\n         EX    R5,MVCPUDAT         MOVE DATA\n         TM    RUNTYPE,DISK       DISK FILE OUTPUT\n         BNO   PUNCHBUF           NO...PUNCH TO READER\n         L    R2,FILEID           ID OF FILE\n         FSWRITE (R2),BSIZE=80,FSCB=UFILE\n         CH     15,=H'13'   DISK FULL\n         BE     SFEOF       YES..\n         B      PUNCHED\nPUNCHBUF DS     0H\n         PUNCHC OUTBUFF\nPUNCHED  DS    0H\n         CLI   NUMLINES,X'FF'     WHOLE FILE WANTED\n         BE    NEXTCCW            YES\n         L     1,NUMLINES         NUMBER OF LINES PUNCHED\n         BCTR  1,0                DECREMENT\n         ST    1,NUMLINES         SAVE\n         LTR   1,1                REACHED THE LIMIT SPECIFIED\n         BZ    SFEOF              YES....END\n         B     NEXTCCW            CONTINUE\nMVCPUDAT MVC   OUTBUFF(0),0(R10)   MOVE PUNCH LINE TO OUTPUT\nVALCCW   DS    0H\n         BCTR  R6,0                KEEP TRACK OF CCW'S LEFT\n         SR    R8,R8               CLEAR R8 FOR CCW OP CODE\n         IC    R8,0(,R7)           AND PICK IT UP ...\n         SR    R9,R9               CLEAR R9 FOR ASA CODE\n         LR    0,1                 SAVE R1\n         L     1,=A(CCWTABLE)      ADDR OF TABLE\n         IC    R9,0(R1,R8)         AND GET THAT TOO ...\n         LR    R1,0                RESTORE R1\n         LTR   R9,R9               RECOGNIZE THE CCW OP CODE ?\n         BZ    NEXTCCW             NO, MAYBE A NOP .....\n         MVC   LLCCW,NLCCW\n         STC   R9,NLCCW            CCW FOR NEXT LINE\n         LH    R5,6(,R7)           GET DATA LENGTH\n         LTR   R5,R5               GOT ANY DATA, REALLY ?\n         BNP   NEXTCCW          WHAT ????\n         TM    4(R7),X'10'         SUPPRESS DATA FLAG ?\n         BO    NEXTCCW           YES, DON'T MOVE IT ...\n         CLI   0(R7),X'01'         SUPRESS SPACE\n         BE    DOCTL\n         TM    0(R7),X'02'         THIS CCW IMMEDITATE     ?\n         BO    DOCTL             YES...\n         B    PROCMOVE\n*\nDOCTL   DS    0H\n*       CLI    NLCCW,X'4E'\n*        BE    PROCMOVX\n         NOP   0\n         NOP   0\n         CLI  0(7),X'01'\n         BE   PROCMOVX\n        CLI    FSW,X'FF'       FIRST TIME THRU\n        BE     DOCTLP\n        CLI    FSW,X'01'       SUPRESS PRINT\n         MVI   FSW,X'00'\n         BE    NEXTCCW         GET DATA FROM NEXTCCW\n        CLI    0(R7),X'8B'\n         BNE   DOCTLP\n         LR    R1,R7        LOOK AT 8 BYTES BEFORE X'8B'\n         SH    R1,=H'8'\n         CLC   0(8,R1),=XL8'8000000040404040'\n         BNE   DOCTLP\n         BAL   R14,COUNTUP1\n         B     DOCTLP\nDOCTLP   DS    0H\n         MVI   FSW,X'00'\n         CLI   0(R7),X'8B'\n         BNE   *+12\n         CLI   8(R7),X'0B'\n         BNE   NEXTCCW\n         MVC   OUTBUFF(1),NLCCW  USE NEW CCW CC\n         BAL   R14,COUNTUP1\n        MVI    OUTBUFF,C' '\n         MVI   NLCCW,X'40'\n         CLI   4(R7),X'70'\n         BE    NEXTCCW\n         B     PROCMOVE\n*\nPROCMOVX  DS    0H            CCW  01\n          MVI   FSW,X'01'     SUPPRESS NEXT CC PRINT\n          MVI   OUTBUFF,C' '  SET TO BLANK\n          B     PROCMOVE\nPROCMOVE  DS    0H\n* PROCESS DATA MOVING CCW -\n         LH    R10,2(,R7)          DATA DISPLACEMENT FROM CCW\n         ALR   R10,R7              POINT TO DATA\n         TM    4(R7),X'70'        SUPPRESS DATA\n         BNO   EXMOVE\n         LA    R5,1               SET DATA LENGTH\n         MVC   OUTBUFF(1),LLCCW\n         B     WRBUFF              WRITE OUT CTL CHAR\nEXMOVE   DS    0H\n         CH    R5,=H'0'\n         BNH   WRBUFF\n         BCTR  R5,R0\n         EX    R5,MVCDATA          MOVE DATA TO OUTBUFF\n         LA    R5,1(R5)\n         MVC   OUTBUFF(1),LLCCW     MOVE IN CCW\n*\n* ADD LINE JUST BUILT TO OUTPUT\n*\nWRBUFF   DS    0H\n         LA    2,OUTBUFF\n         BAL   R14,COUNTUP\n         BAL   R10,OUTCLEAR\n*\n         B     NEXTCCW             GO GET NEXT CCW AND RECORD\n*\n*\nMVCDATA  MVC   OUTBUFF+1(0),0(R10)  EX'D TO MOVE DATA TO BUFFER\n*\n* END OF FILE ENCOUNTERED (NO MORE SPOOL FILE BUFFERS)\n*\nSFEOF    DS    0H\n         TM    RUNTYPE,DISK\n         BNO   SFEOFRET\n         WRTERM DISPMSG,DISPMSGL\n         B     SFEOFRET\n*\n* END OF FILE AND LAST LINE HAS BEEN OUTPUT\n*\nSFEOFRET EQU   *                   SPOOL FILE END RETURN\n*\n         B     FINISH\n*\nCOUNTUP1 DS    0H\n         OC    FROMLINE,FROMLINE\n         BNZ   COUNTNOP\nCOUNTPU1 DS    0H\n         ST    R14,RETR14\n         TM    RUNTYPE,DISK       DISK FILE OUTPUT\n         BO    COUNTDIS\n         B     COUNTPT1\nCOUNTPT1  DS    0H\n         PRINTL OUTBUFF,1\n         B     COUNTPUA\nCOUNTDIS DS    0H\n         L    R2,FILEID           ID OF FILE\n         FSWRITE (R2),BSIZE=1,FSCB=DFILE\n         CH    15,=H'13'    DISK FULL\n         BE    SFEOFR\n         LA    2,OUTBUFF\n         B     COUNTPUA\nCOUNTUP  DS    0H\n         OC    FROMLINE,FROMLINE\n         BZ    COUNTPUT\nCOUNTNOP DS    0H\n         L     1,FROMLINE\n         BCTR  1,0\n         ST    1,FROMLINE\n         BR    14\nCOUNTPUT DS    0H\n         ST    R14,RETR14\n         BAL   R10,PUT1LINE        OUTPUT 1 LINE\nCOUNTPUA DS    0H\n         L     1,NUMLINES\n         BCTR  1,0\n         ST    1,NUMLINES\n         LTR   1,1\n         BZ    SFEOF\n         L     R14,RETR14\n         BR    R14\n*\nSFEOFR  DS     0H\n         L     R14,RETR14\n         B     SFEOF\n TITLE '- FINISH - SPOOL FILE DISPOSITION'\n*\n* FINISH - SPOOL FILE DISPOSITION\n*\nFINISH   SR    R15,R15             SET RETURN CODE\nEXIT     DS    0H\n         MVC   CLOSERDR+7(4),=CL4'HOLD'  YES, PATCH CP COMMAND\nEXITCLSE DS    0H\n         LA    R3,CLOSERDR         POINT TO CP CLOSE COMMAND\n         LA    R4,L'CLOSERDR       LOAD LENGTH OF COMMAND\n         DC    X'83340008'         DIAGNOSE CONSOLE FUNCTION\n         TM    RUNTYPE,DISK         DISK FILE OUTPUT\n         BO    CLOSDISK\n*\n         LA    R3,CLOSEPRT         POINT TO CP CLOSE COMMAND\n         CLI   SPPUN,X'01'         PUN FILE\n         BNE   *+8                 NO\n         LA    R3,CLOSEPUN         POINT TO CP CLOSE COMMAND\n         LA    R4,L'CLOSEPRT       LOAD LENGTH OF COMMAND\n         DC    X'83340008'         DIAGNOSE CONSOLE FUNCTION\n         B     HOME                YES, THEN EXIT NOW, ->\n*\nCLOSDISK DS   0H\n         L    R2,FILEID\n         CLI  SPPUN,X'01'    PUN FILE\n         BNE  CLOSEPTF\n         FSCLOSE (R2),FSCB=UFILE\n         B    HOME\nCLOSEPTF  DS   0H\n         FSCLOSE (R2),FSCB=DFILE\n         B    HOME\n*\n TITLE '- OUTCLEAR SUBROUTINE - SET OUTBUFF TO BLANKS'\n*\n* OUTCLEAR SUBROUTINE - SET OUTBUFF TO BLANKS\n*\nOUTCLEAR MVI   OUTBUFF,C' '        MOVE IN A BLANK\n         MVC   OUTBUFF+1(132),OUTBUFF  AND PROPAGATE IT\n         BR    R10                 RETURN TO CALLER\n*\n TITLE '- PUT1LINE SUBROUTINE - OUTPUT SINGLE DATA LINE (ONLINE)'\n*\n* PUT1LINE SUBROUTINE - OUTPUT SINGLE DATA LINE (ONLINE)\n*        R2  - POINTS TO OUTPUT LINE (133 BYTES)\n*        R10 - RETURN ADDRESS\n*        R5  - LENGTH OF LINE\n*\n*\nPUT1LINE DS    0H\n         STM   14,13,PTREGWK       SAVE REGS\n         LA    13,PTREGSAV         SAVE AREA\n*\nPUT1PRT  DS     0H\n         CLC    OUTBUFF+1(132),=132C' '\n         BNE    DO1PRT\n         CLI    OUTBUFF,X'40'\n         BE     DO1PRT\n         LA     R5,1\n         B     DO1PRT\nDO1PRT   DS    0H\n         TM    RUNTYPE,DISK\n         BO    DO1DSK\n         B     DO1PRT0\nDO1PRT0   DS    0H\n         PRINTL (R2),133\nTEST1PRT  DS   0H\n         LTR   R15,R15             ZERO RETURN CODE?\n         BZ    GOODPRET            YES, RETURN TO CALLER\n         CH    R15,=H'2'           CHANNEL 9 SENSED?\n         BE    GOODPRET            YES, IGNORE IT AND RETURN\n         CH    R15,=H'3'           CHANNEL 12 SENSED?\n         BE    GOODPRET            YES, IGNORE IT AND RETURN\n         B     INTREQ\nDO1DSK   DS    0H\n         L     R2,FILEID\n         FSWRITE  (R2),FSCB=DFILE,BSIZE=133\n         CH    15,=H'13'    DISK FULL\n         BE    SFEOFG\n         LA    R2,OUTBUFF\n         B     GOODPRET\n*\nGOODPRET DS    0H\n         LM    14,13,PTREGWK\n         BR    10\n*\nSFEOFG   DS    0H\n         LM    14,13,PTREGWK\n         B     SFEOF\nINTREQ   DS    0H\n         LA    R1,=C'MSG * ' INT REQ\n         MVC   4(2,R1),=C'* '      PATCH WITH THIS (NON-RENTERANT)\n         LA    R0,28               LOAD CPCMND LENGTH\n         DC    X'83100008'         DIAGNOSE CONSOLE FUNCTION\n         MVC   4(2,R1),=C'OP'      PATCH FOR 'OPERATOR'\n         LA    R0,28               RESET LENGTH\n         DC    X'83100008'         DIAGNOSE CONSOLE FUNCTION\n* WAIT FOR INTERRUPT TO BE CLEARED:\n*\n         AGO .NEWRTN               SKIP OLD ROUTINE FOR INTERRUPT HANDL\n         NI    ACTION,X'3F'        CLEAR HIGH ORDER BITS OF ECB\n         HNDINT SET,(PRT1,PRTINT,00E,ASAP)  SET INTERRUPT TRAP\n         WAIT  ECB=ACTION          WAIT FOR INTERRUPT ROUTINE POST\n         HNDINT CLR,(PRT1)         CLEAR INTERRUPT TRAP\n         LM    14,12,PTREGWK       RESTORE REGS\n         LA    13,PTREGSAV\n         B     PUT1PRT             ATTEMPT TO PRINT AGAIN, ->\n*\n* PRINTER INTERRUPT ROUTINE\n*\n         USING *,R15               ESTABLISH TEMPORARY ADDRESSABILITY\nPRTINT   LM    R11,R12,PRTBASE     LOAD MAIN BASE REGISTERS\n         DROP  R15                 RETURN TO NORMAL ADDRESSABILITY\n         POST  ACTION              TELL MAIN ROUTINE TO RUN\n         SR    R15,R15             SIGNAL FINISHED WITH INTERRUPT\n         BR    R14                 RETURN TO CMS\nPRTBASE  DC    A(PRTTAPE,PRTTAPE+4096)\n*\n* PRINTER FATAL ERROR\n*\nPRTFATL  LA    R1,=C'MSG *  FATAL ERROR ON XEROX 9700; PRINTL RC=...'\n         MVC   4(2,R1),=C'* '      PATCH WITH THIS (NON-RENTERANT)\n         CVD   R15,DBLWORD         CONVERT RET. CODE TO DECIMAL PACKED\n         UNPK  DBLWORD(4),DBLWORD+5(3)  UNPACK TO ZONED\n         OI    DBLWORD+3,X'F0'     FIX SIGN\n         MVC   44(3,R1),DBLWORD+1  SET IN MESSAGE\n         LA    R0,48               LOAD CPCMND LENGTH\n         DC    X'83100008'         DIAGNOSE CONSOLE FUNCTION\n         MVC   4(2,R1),=C'OP'      PATCH FOR 'OPERATOR'\n         LA    R0,42               RESET LENGTH\n         DC    X'83100008'         DIAGNOSE CONSOLE FUNCTION\n         B     ERREXIT             TAKE THIS ERROR EXIT\n.NEWRTN  ANOP\n*\n* WAIT FOR INTERRUPT TO BE CLEARED\n*\n         WRTERM 'HIT ''ENTER'' WHEN READY...'\n         RDTERM ACTION,LENGTH=1,EDIT=PHYS  WAIT FOR A FEW BYTES\n         LA    R1,=C'READY E'      POINT CP COMMAND\n         LA    R0,7                LOAD CP COMMAND LENGTH\n         DC    X'83100008'         DIAGNOSE CONSOLE FUNCTION\n         LM    14,12,PTREGWK       RESTORE REGS\n         LA    13,PTREGSAV\n         B     PUT1PRT             GO PRINT LINE AGAIN\n*\n*\n TITLE '- DATA AREAS AND CONSTANTS'\n*\n* DATA AREAS AND CONSTANTS\n*\nACTION   DC    F'0'                ECB FOR PRINTER INTERRUPTS\nFSW      DC    X'FF'\nLLCCW    DC    X'40'\nNLCCW    DC    X'40'\nBLKSIZE  DC    F'3990'             BLKSIZE BINARY (DEFAULT FOR XEROX)\nBLKADDR  DC    F'0'                BLOCK (BUFFER) ADDRESS\nCLOSERDR DC    C'CL 00C     '      CP COMMAND, WITH ROOM FOR 'HOLD'\nCLOSEPRT DC    C'CL 00E     '      CP COMMAND, WITH ROOM FOR 'HOLD'\nCLOSEPUN DC    C'CL 00D     '      CP COMMAND, WITH ROOM FOR 'HOLD'\nDBLWORD  DC    D'0'                WORK AREA\nFSEQBIN  DC    F'0'                FILE SEQUENCE NUMBER (BINARY)\nFSEQCHR  DC    CL4' '              FILE SEQUENCE NUMBER (EBCDIC)\nFULLWORD DC    F'0'                FULLWORD WORK AREA\nRETR14   DS    F\n*\n*\nLRECLCNT DC    F'30'               LRECL/BLOCK COUNT (DEFAULT FOR XEROX\nSPTOPRT  DC    C'SP PRT * '        OR 'XEROXING' FOR <ONLINE>\nSPTOPUN  DC    C'SP PUN * '        OR 'XEROXING' FOR <ONLINE>\nOUTBUFF  DC    CL136' '            OUTPUT BUILD AREA (ENOUGH FOR TAG)\nPAGEADDR DC    A(0)                ADDR OF DIAG X'14' BUFFER (PAGE)\nPAGEBUFF DC    A(0)                ADDR OF DIAG X'14' BUFFER (WHOLE)\n*\nPTREGSAV DS    18F                 PUT1LINE RTN. REGISTER SAVE AREA\nPTREGWK DS    18F                 PUT1LINE RTN. WORK REGISTERS\nRECCNT   DC    F'0'                RECORD COUNT BINARY SAVE\nFROMLINE DC    F'0'                RECORD COUNT BINARY SAVE\nNUMLINES DC    F'0'                RECORD COUNT BINARY SAVE\n*\nSPLIDBIN DC    F'0'                SPOOLID BINARY\nSPLIDCHR DC    CL4'....'           SPOOLID EBCDIC\n*\nFILEID   DS  F\nPFN      DC   CL8'PRD'\nPFT      DS   CL8\nPFM      DS   CL2\nRUNTYPE  DS    C\nDISK     EQU  X'01'\nPRTEOF   EQU X'FF'\nSPPUN   DC   X'02'\nDISPMSG DS   0C\n        DC   CL5'FILE'\nDISPFN  DS   CL8\n        DC  C' '\nDISPFT  DS   CL8\n        DC  C' '\nDISPFM  DS   CL2\n        DC  C' '\n        DC  C'CREATED'\nDISPMSGL EQU *-DISPMSG\nDFILE FSCB 'PRD LISTING A',RECFM=V,BUFFER=OUTBUFF,BSIZE=133\nUFILE FSCB 'PRD DATA    A',RECFM=F,BUFFER=OUTBUFF,BSIZE=080\n*\n         LTORG ,                   LITERAL POOL\n*\n*\n TITLE '- EQUATES'\n*\n* EQUATES\n         REGEQU                         CMS REGISTER EQUATES\n*\nCC1      EQU   4                   CONDITION CODES\nCC2      EQU   2                   CONDITION CODES\nCC3      EQU   1                   CONDITION CODES\n*\n*\n*\n TITLE '- DECBIN SUBROUTINE - EBCDIC DECIMAL TO BINARY CONVERSION'\n*\n* DECBIN SUBROUTINE - EBCDIC DECIMAL TO BINARY CONVERSION\n*        R2  - POINTS TO 8-BYTE NUMBER TO BE CONVERTED\n*        R14 - RETURN ADDRESS                (EB)\n*        R10 - ENTRY  ADDRESS                (EB)\n*        R15 - ERROR RETURN ADDRESS\n* EXIT:\n*        R1  - WILL CONTAIN BINARY RESULT\n*\n***INSERTED BY EB\nDECBIN   DS    0H\n         USING *,R10              TEMPORARY ADDRESSABILITY\n         ST    14,SAVE14          SAVE RETURN ADDR\n****END OF INSERTION\n**CBIN   SR    R1,R1               EMPTY A REGISTER\n         SR    R1,R1               EMPTY A REGISTER\n         SR    R3,R3               AND ANOTHER\n         LR    R4,R2               COPY PLIST POINTER\n         LA    R5,X'F0'            LOAD APPROPRIATE MASK\n         LA    R6,8                SET MAXIMUM ARGUMENT LENGTH\nNUMLOOP  CLI   0(R4),C' '          CHECK FOR BLANK\n         BE    NUMDONE             DONE IF THIS IS ONE\n         IC    R3,0(,R4)           PICK UP CHARACTER\n         SR    R3,R5               MAKE IT BINARY\n         BCR   4,R15               ERROR IF NOT NUMERIC\n         MH    R1,=H'10'           ADJUST\n         AR    R1,R3               ADD TO WHAT ALREADY\n         LA    R4,1(,R4)           POINT TO THE NEXT POSITION\n         BCT   R6,NUMLOOP          DECREMENT THE ARGUMENT LENGTH\nNUMDONE  LTR   R1,R1               CHECK RESULT\n         BCR   13,R15              ERROR IF NOT POSITIVE\n         L     R14,SAVE14          RESTORE RETURN ADDR\n         BR    R14                 RETURN TO CALLER\nSAVE14   DS    F\n        LTORG\n        DROP R11\n*\n*\n TITLE '- TABLES'\nCCWTABLE DC   256X'00'\n         ORG   CCWTABLE\n         DC X'0040'\n        ORG CCWTABLE+X'09'\n        DC  X'400040'\n        ORG CCWTABLE+X'11'\n        DC  X'F000F0'\n        ORG CCWTABLE+X'19'\n        DC  X'600060'\n        ORG CCWTABLE+X'80'\n        DC  X'40'\n        ORG CCWTABLE+X'89'\n        DC  X'F100F1'\n        ORG\n*\n TITLE '- DSECTS - SFBLOK'\n*\nSFBLOK   DSECT\n         SPACE 1\n*\n***                 SFBLOK  -  SPOOL FILE CONTROL BLOCK\nSFBPNT   DS    1F             POINTER TO NEXT SFBLOK\nSFBSTART DS    1F             DASD LOC. (DCHR) OF FIRST PAGE BUFFER\nSFBUSER  DS    CL8            VMUSER IDENTIFICATION OF FILE OWNER\nSFBORIG  DS    CL8            VMUSER IDENTIFICATION OF FILE ORIGIN\nSFBRECNO DS    1F             NUMBER OF DATA RECORDS IN FILE\nSFBRECSZ DS    1H             LOGICAL RECORD SIZE - EXCLD. CCWS\nSFBFILID DS    1H             BINARY SYSTEM FILE NUMBER\nSFBFLAG  DS    1X         S*1 SFBLOK CONTROL FLAGS\nSFBTYPE  DS    1X         S*2 DEVICE TYPE FOR SPOOL OUTPUT\nSFBMISC1 DS    1H             USE VARIES ACCORDING TO CALLER\nSFBRECS  DS    1F             POINTER TO RECBLOKS FOR ACTIVE FILE\nSFBFNAME DS    CL12           FILE NAME\nSFBFTYPE DS    CL12           FILE TYPE\nSFBDATE  DS    CL8            CREATION DATE OF SPOOL FILE\nSFBTIME  DS    CL8            CREATION TIME OF SPOOL FILE\nSFBLAST  DS    1F             DASD LOC. (DCHR) OF LAST PAGE BUFFER\nSFBCOPY  DS    1H             NUMBER OF COPIES REQUESTED\nSFBCLAS  DS    1X         S*3 SPOOL FILE CLASS CHARACTER\nSFBFLAG2 DS    1X         S*4 SFBLOK CONTROL FLAGS - BYTE TWO\nSFBDIST  DS    CL8            DISTRIBUTION CODE\n         SPACE 1\nSFBSIZE  EQU   (*-SFBLOK)/8   SIZE IN DOUBLE WORDS\n         SPACE 1\n*        BITS DEFINED IN SFBFLAG\nSFBINUSE EQU   X'80'          FILE BEING PROCESSED\nSFBRECOK EQU   X'40'          ALLOCATION RECORDS COMPLETE\nSFBUHOLD EQU   X'20'          FILE IN USER HOLD STATUS\nSFBDUMP  EQU   X'10'          FILE IS A CP SYSTEM DUMP\nSFBOPEN  EQU   X'08'          INPUT FILE HAS BEEN OPENED\nSFBSHOLD EQU   X'04'          FILE IN SYSTEM HOLD STATUS\nSFBEOF   EQU   X'02'          INPUT FILE HAS REACHED EOF\nSFBRECER EQU   X'01'          SFBREC CHAIN INCOMPLETE\n         SPACE\n*        BITS DEFINED IN SFBFLAG2\nSFBHOLD  EQU   X'80'          SAVE INPUT FILE\n*                             HOLD OUTPUT FILE\nSFBNOHLD EQU   X'40'          DELETE INPUT FILE\n*                             NOHOLD OUTPUT FILE\nSFBFLNMT EQU   X'20'          FILE NOT EMPTY IF ON             @VA04920\n*   SFBHOLD AND SFBNOHLD OVERRIDE OPTIONS IN VDEVBLOK\nSFBREQUE EQU   X'20'          REQUEUE SPOOL FILE\nSFBRSTRT EQU   X'10'          RESTART IN PROGRESS\nSFBTICER EQU   X'08'          BUFFER TIC ERROR\nSFBPURGE EQU   X'04'          PURGE OPEN SPOOL FILE\nSFBFIRST EQU   X'02'          INDICATE FIRST PAGE WRITTEN      @VM03437\nSFBMON   EQU   X'01'             MONITOR CLASS FILE            @V50A2B5\n*\n*\n*\n TITLE '- DSECTS - NUCON'\n         NUCON\n TITLE '- DSECTS - FSCBD'\n         FSCBD\n*\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SETM": {"ttr": 3338, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\x19\\x9f\\x00\\x95 \\x0f\\x13\\x01\\x00\\x12\\x00\\x10\\x00\\x00\\xc5\\xc9\\xd3\\xc5\\xc5\\xd5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-07-18T00:00:00", "modifydate": "1995-07-19T13:01:00", "lines": 18, "newlines": 16, "modlines": 0, "user": "EILEEN"}, "text": "       MACRO\n        SETM  &I\n.***THIS MACRO ISSUES A BSM INSTRUCTION TO SET 31 BIT ADDRESSING\n.***ON OR OFF: SETM ON    SETM  OFF\n        AIF ('&I' EQ 'OFF').OFF\n        AIF ('&I' EQ 'ON').ON\n         MEXIT\n.OFF     ANOP\n         SR  1,1\n          LA  1,*+6\n         BSM  0,1\n         MEXIT\n.ON      ANOP\n          LA  1,*+10\n          ICM  1,8,=X'80'\n         BSM  0,1\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SVC": {"ttr": 3340, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x001\\x00\\x95 \\x0f\\x01\\x163_\\x172\\x00/\\x00,\\x00\\x04\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1995-07-19T00:00:00", "modifydate": "2016-11-30T17:32:31", "lines": 47, "newlines": 44, "modlines": 4, "user": "SBGOLOB"}, "text": "         TITLE 'SUPERVISOR CALL 241 (ACQUIRE/RELINQUISH AUTHORIZATION)'\n*********   SVC *****************************\n***THIS SVC IS USED TO SET THE AUTH BIT ON\n***IN THE JSCB. IT IS DEFINED AS A TYPE 3.\n SVCPARM 241,REPLACE,TYPE(3)\n*********************************************\nIGC0024A CSECT\n         SPACE 2\n*---------------------------------------------------------------------*\n*                                                                     *\n* INPUT PARAMTERS                                                     *\n*                                                                     *\n* R0 - 0=AUTHOFF REQUEST  1=AUTHON REQUEST                            *\n* R1 - MUST CONTAIN 'AUTH'                                            *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE 2\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR12      EQU   12\nR14      EQU   14\n         SPACE 2\n         BALR  R12,0              LOAD R12\n         USING *,R12               & ESTABLISH AS BASE.\n         SPACE 1\n         C     R1,CODE            WAS PROPER CODEWORD PASSED.\n         BNE   EXIT               NO, UNAUTHORIZED, EXIT.\n         SPACE 1\n         L     R2,180(,R4)        LOAD R2 WITH ADDRESS OF JSCB.\n         BCT   R0,AUTHOFF         IF R1 NOT = 1, AUTHOFF REQUESTED.\n         SPACE 1\nAUTHON   EQU   *\n         OI    236(R2),X'01'      SET AUTHORIZATION BIT.\n         B     EXIT               GO EXIT.\n         SPACE 1\nAUTHOFF  EQU   *\n         NI    236(R2),X'FE'      RESET AUTHORIZATION BIT.\n         SPACE 1\nEXIT     EQU   *\n         BR    R14                -EXIT.\n         SPACE 1\nCODE     DC    C'AUTH'\n         SPACE 1\n         END  ,\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSOBAT": {"ttr": 3586, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x95 /\\x00\\x95 /\\x108\\x000\\x00\\r\\x00\\x00\\xc5\\xc9\\xd3\\xc5\\xc5\\xd5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-07-21T00:00:00", "modifydate": "1995-07-21T10:38:00", "lines": 48, "newlines": 13, "modlines": 0, "user": "EILEEN"}, "text": "//TSOBAT  JOB (A006,SYTM,99,99),BARKOW,REGION=8M,\n//        CLASS=S,MSGCLASS=A\n//*OUTE PRINT CSCVM.EXBCSC\n//LISTV  EXEC PGM=IKJEFT01,REGION=8000K\n//STEPLIB  DD DISP=SHR,DSN=MVSP.USER.ISPLLIB\n//SYSPROC  DD TERM=TS,SYSOUT=A\n//SYSTSPRT DD TERM=TS,SYSOUT=A\n//TERMFILP DD TERM=TS,SYSOUT=A\n//SYSTERM  DD TERM=TS,SYSOUT=A\n//*YSTSIN  DD TERM=TS\n//SYSTSIN  DD *\nUCB ACS001\nUCB CICSAA\nUCB CICSBB\nUCB CICSCC\nUCB CICSDD\nUCB CICSEE\nUCB CICSFF\nUCB CICSGG\nUCB CICSHH\nUCB CICSJJ\nUCB CICSKK\nUCB CICSPP\nUCB CICSRR\nUCB CICSZZ\nUCB CTLGM1\nUCB CTLGW1\nUCB MVSLIB\nUCB ZCAM01\nUCB ZCAD01\nUCB CICS17\nUCB CICS18\nUCB CICS21\nUCB CICS40\nUCB MRS001\nUCB MRS002\nUCB MRS003\nUCB PRS001\nUCB PRS002\nUCB PRS003\nUCB ZRS001\nUCB ZRS002\nUCB ZRS003\nUCB XCICM1\nUCB XCICD1\nUCB ZCAM01\nUCB ZCAD01\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UCB": {"ttr": 3588, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\"\\x00 \\x01\\x164\\x1f\\x01\\x164\\x1f\\x12\\x14\\x01\\x8a\\x01,\\x00\\x00\\xe4\\xd7\\xc4\\xc1\\xe3\\xc5\\xc4@@@'", "ispf": {"version": "01.34", "flags": 0, "createdate": "2016-12-06T00:00:00", "modifydate": "2016-12-06T12:14:20", "lines": 394, "newlines": 300, "modlines": 0, "user": "UPDATED"}, "text": "        PRINT ON,GEN\n********U C B********TSO VERSION*******************\n**FORMAT:  UCB  VOLSER    - WILL RETURN UCB ADDRESS\n**FORMAT:  UCB  UCBADDR   - WILL RETURN VOLSER\n****\n**THIS PROGRAM RETURNS A VOLSER IF A UCB ADDRESS IS ENTERED OR\n**A UCB ADDRESS IF A VOLSER IS PASSED.  FIXED FOR 4-DIGIT UCB'S.\n*****DEPENDENCIES\n**THIS PROGRAM NO LONGER NEEDS AN SVC TO GET AUTHORIZATION.\n**YOU CAN AUTHORIZE IT IN THE IKJEFTE2 (AUTHCMD) LIST OF PROGRAM\n**NAMES, LINKEDIT IT SETCODE AC(1) AND IT SHOULD NOW WORK, IF\n**IT IS RUN FROM AN AUTHORIZED LIBRARY.  YOU CAN STILL HOOK UP\n**THE SVC CODE THAT IS IN MEMBER UCBOLD, IF YOU WANT TO.\n*\n**THE PROGRAM MAY BE RUN FROM LINKLIST OR CALLED FROM A CLIST.\n**IT NOW SEEMS TO WORK FINE WHEN CALLED FROM A CLIST.\n* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R5,SAV4HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R5,HEX\n         L     R5,SAV4HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *\n***REGISTERS******\nBASEREG  EQU   11\nLINKREG  EQU   8\nUCBREG   EQU   1\nCVTREG   EQU   2\nRET      EQU   10\nTABREG   EQU   15\n****************************\n         CVT DSECT=YES,LIST=YES\nUCB      DSECT\n         IEFUCBOB LIST=YES,PREFIX=NO\n         IEFZB4D0\n         IEFZB4D2\n         YREGS\n         EJECT\nTSOUCB   CSECT\n         USING *,R15\n         STM   R14,R12,12(R13)\n         ST    R13,SAVEMAIN+8\n         LA    R13,SAVEMAIN\n         LR    R11,R15\n         USING TSOUCB,R11\n         DROP  R15\n         ST    R1,SAVEMAIN\n         MVI   BLANKS-1,X'40'\n         MVC   BLANKS,BLANKS-1\n         MVI   OUTLINE-1,X'40'\n         MVC   OUTLINE,OUTLINE-1\n         TM    0(R1),X'80'        CHECK FOR INVOKED AS A PROGRAM\n         BO    PGM\n         TM    4(R1),X'80'        CHECK FOR INVOKED AS A PROGRAM\n         BZ    CMD\nPGM      L     R1,0(,R1)          ADDRESS OF PARM LIST\n         LH    R4,0(,R1)          LENGTH OF PARM FIELD\n         LTR   R4,R4              IF LENGTH ZERO\n         BZ    ENDITR               NO  PARM\n         STH   R4,ULEN\n         LA    R3,2(,R1)          ADDRESS OF PARM CHARS\n         B     GOTIT\nCMD      L     R1,0(,R1)          ADDRESS OF CBUF\n         LH    R4,0(,R1)          GET CBUF LENGTH\n         SH    R4,=H'4'           MINUS LENGTH OF 2 HALFWORDS\n         SH    R4,2(,R1)          MINUS OFFSET TO OPERAND\n         BZ    ENDITR             IF ZERO, NO OPERAND\n         AH    R1,2(,R1)          POINT TO OPERAND MINUS 4\n         LA    R3,4(,R1)          POINT TO OPERAND\n         STH   R4,ULEN\nGOTIT    EQU   *\n         LR    R1,R3\n         LR    R0,R4\n*        SVC   93 TPUT             SHOW PARM BEFORE VALIDATION\n         CH    R4,=H'6'            IF MORE THAN 6 CHARS\n         BH    ENDITR                EXIT\n         CH    R4,=H'3'            IF LESS THAN 3 CHARS\n         BL    ENDITR                EXIT\n         MVI   PRM000-1,X'40'\n         MVC   PRM000,PRM000-1\n         LR    R15,R4\n         BCTR  R15,0\n         B     *+10\n         MVC   PRM(0),0(R3)\n         EX    R15,*-6             MOVE PARM\n         L     R15,=A(CONVTAB)     CONVERT LOWER CASE TO UPPER CASE\n         TR    PRM,0(R15)\n         CH    R4,=H'4'            IF MORE THAN 4 CHARS\n         BH    VOL                   IT'S A VOLSER, NOT A UNIT ADDRESS\n         LR    R15,R4\n         BCTR  R15,0               LENGTH MINUS 1\n         B     *+10\n         TRT   PRM(0),HEXTRT       ONLY HEX CHARS OK\n         EX    R15,*-6\n         BNZ   ENDITR\n         CH    R4,=H'3'\n         BNE   NOT3\n         MVC   WORK4(3),PRM        PREFIX 3-CHARACTER UNIT ADDRESS\n         MVI   PRM,C'0'              WITH '0'\n         MVC   PRM+1(3),WORK4\n         LA    R4,4\nNOT3     EQU   *\n         LA    R1,PRM\n         LR    R0,R4\n*        SVC   93 TPUT             SHOW UNIT ADDRESS AFTER VALIDATION\n         B     OPENO\nVOL      LR    R15,R4\n         BCTR  R15,0               LENGTH MINUS 1\n         B     *+10\n         TRT   PRM(0),TRANTAB      ONLY ALPHANUM OK\n         EX    R15,*-6\n         BNZ   ENDITR\n         LA    R1,PRM\n         LR    R0,R4\n*        SVC   93 TPUT             SHOW VOLSER AFTER VALIDATION\nOPENO    MVI   RUNSW,UCBAD\n         CH    R4,=H'4'\n         BNH   *+8\n         MVI   RUNSW,VOLSER\n***ALLOCATE AND OPEN OUTPUT FILE\n         L     R8,=A(ALLOCOUT)\n         BALR  R10,R8\n         OPEN  (OUTPUT,OUTPUT)\n***MUST BE AUTHORIZED TO USE UCBLOOK\n         L     R8,=A(AUTHIT)\n         BALR  R10,R8\n*****FOR DYNAMIC UCBS, USE UCBLOOK MACRO\n         USING UCB,R1\n         TM    RUNSW,VOLSER    VOLSER CHECK\n         BO    VOLLOOK\nUL  UCBLOOK NOPIN,DEVNCHAR=PRM,DYNAMIC=YES,UCBPTR=RETUCBA,             +\n               LOC=ANY,RANGE=ALL\n         LTR   R15,R15\n         BNZ   PUTITR\n         L     R1,RETUCBA\n         TAM                       TEST FOR AMODE 24/31/64\n         BNZ   NOT24U\n         SAM31\n         MVC   COPYUCB(36),0(R1)\n         LA    R1,COPYUCB\n         SAM24\nNOT24U   EQU   *\n         TM    UCBTBYT3,UCB3DACC   CHECK FOR DASD\n         BO    OKDASD\n         MVC   RESULT(8),=C'NON-DASD'\n         B     PUTIT\nOKDASD   EQU   *\n         TM    UCBSTAT,UCBONLI     CHECK FOR ONLINE\n         BO    OKONLI\n         MVC   RESULT(7),=C'OFFLINE'\n         B     PUTIT\nOKONLI   EQU   *\n         MVC   RESULT(L'UCBVOLI),UCBVOLI\n         B     PUTIT\nVOLLOOK  DS    0H\nVL  UCBLOOK NOPIN,VOLSER=PRM,DYNAMIC=YES,UCBPTR=RETUCBA,               +\n               LOC=ANY,RANGE=ALL\n         LTR   R15,R15\n         BNZ   PUTITR\n         L     R1,RETUCBA\n*        MVC   RESULT(L'UCBNAME),UCBNAME\n         TAM                       TEST FOR AMODE 24/31/64\n         BNZ   NOT24V\n         SAM31\n         MVC   COPYUCB(36),0(R1)\n         LA    R1,COPYUCB\n         SAM24\nNOT24V   EQU   *\n         UNPK  RESULT(5),UCBCHAN(3)  GET UNIT ADDRESS\n         TR    RESULT(4),HEXTAB-240  TO 4-BYTE HEX\n         MVI   RESULT+4,C' '\n         B     PUTIT\n******************************************\n*        L     R2,16         CVT POINTER\n*        USING CVT,R2\n*        L     R1,CVTUCBA    FIRST UCB\n*        USING UCB,R1\n*        DROP   R2\n*        B     FINDIT\n*NEXTUCB DS    0H\n*        L     R1,UCBNXUCB\n*FINDIT  DS    0H\n*        CLI   UCBID,UCBSTND\n*        BNE   PUTIT\n*        TM    RUNSW,VOLSER  VOL SER  GIVEN?\n*        BNO   TESTUCB\n*        CLC   UCBVOLI,PRM\n*        BNE   NEXTUCB\n*        MVC   RESULT(L'UCBNAME),UCBNAME\n*        B     PUTIT\n*TESTUCB DS    0H\n*        CLC   UCBNAME,PRM\n*        BNE   NEXTUCB\n*        MVC   RESULT(L'UCBVOLI),UCBVOLI\n*        B     PUTIT\nPUTITR   CVD   R15,DOUBLE\n         OI    DOUBLE+7,X'0F'\n*        UNPK  RESULT+20(5),DOUBLE+5(3) SHOW RETURN CODE\nPUTIT    DS    0H\n         CLI   RESULT,C' '\n         BNE   *+10\n         MVC   RESULT(10),=CL10'NOT FOUND'\n         PUT   OUTPUT,OUTLINE\n*        TPUT  OUTLINE,30\n         B     ENDIT\nENDIT    DS    0H\n         MODESET KEY=NZERO,MODE=PROB\nENDITXX  DS    0H\n         CLOSE OUTPUT\nENDITR   EQU   *\n         L     R13,SAVEMAIN+8\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\nMOVEIT   MVC   PRM(0),2(1)   MOVE COMMAND FROM PARM AREA\n*\nSAVEMAIN DS    18F\nSAVE1401 DS    6F\nRETUCBA  DS    F\nWORK4    DS    F\nDOUBLE   DS    D\nCOPYUCB  DS    9F\n         DS    C\nBLANKS   DC    CL40' '\nULEN     DS    H\n         DC    C' '\nOUTLINE  DC    CL80' '\n         ORG   OUTLINE+1\nPRM000   DS    0CL8\nPRMP     DC    C' '\nPRM      DC    CL6' '\n         DC    C' '\nRESULT   DS    0C\n         ORG\nRUNSW    DC    X'00'\nUCBAD    EQU   X'01'\nVOLSER   EQU   X'02'\nOUTPUT   DCB   DDNAME=TERMFILP,DSORG=PS,MACRF=PM,RECFM=FA,             XJRE06080\n               LRECL=080,BLKSIZE=080\n         LTORG\n         EJECT\nALLOCOUT DS    0H\n         USING *,R8\n         STM   R14,R12,ALCSAVE+12\n         LA    1,RBPOINT     (R1 => A(REQ BLOCK )\n         DYNALLOC\n         LM    R14,R12,ALCSAVE+12\n         BR    R10\n         DS    0F\nALCSAVE  DS    18F\nDYNBLKS  EQU   *\nRBPOINT  DC    A(RBS)        ADR  REQ BLOCK PASSED IN R1\n         ORG   RBPOINT       S99RBP  DSECT\n         DC    X'80'         HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nRBS      EQU   *\nRB       DS    0CL20         S99RB DSECT  LOC BY RBPOINT\nRBLN     DC    AL1(RBEL)     LEN OF RB\nRBVERB   DC    AL1(S99VRBAL) FUNC 01-07 01 FOR ALLOC\nRBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nRBFLAG2  DS    X       2ND   FLAG BYTE\nRBERROR  DS    XL2     ERROR REASON CODE\nRBINFO   DS    XL2     INFO  REASON CODE\nRBTXTPP  DC    A(TXPOINTS)     LIST OF TEXT PTRS\n         DS    F             RESERVED\nRBAUTHFL DS    XL4           FLAGS FOR AUTH FUNCTIONS\nRBEL     EQU   *-RB\n**TEXT UNIT POINTERS\nTXPOINTS DS    0F            S99TUPL  DSECT  TU PTR LIST\nDDNPOINT DC    A(DDNTEXT)\nSYSPOINT DC    A(SYSOTEXT)\nTERPOINT DC    A(TERMTEXT)\n         ORG   TERPOINT\n         DC    X'80'            LAST TEXT UNIT\n         ORG\nTXUNITS  DS    0F               S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nDDNTEXT  DS    0F               DDN TEXT UNIT\nDDNTXKEY DC    AL2(DALDDNAM)    KEY FOR DDN TEXT\nDDNTXNUM DC    XL2'0001'        NUM LENGTH + PARM ENTRIES\nDDNTXENT DS    0C\nDDNPLEN  DC    AL2(L'DDNTXPRM)  LENGTH OF PARM\nDDNTXPRM DC    CL8'TERMFILP'\nSYSOTEXT  DS   0F\nSYSOXKEY DC    AL2(DALSYSOU)    KEY FOR SYSOUT ALLOC\nSYSOXNUM DC    XL2'0001'        NUM LENGTH + PARM ENTRIES\nSYSOXENT DS    0C\nSYSOLEN  DC    AL2(L'SYSOXPRM)  LENGTH OF PARM\nSYSOXPRM DC    C'A'             MUST BE 1\nTERMTEXT DS    0F               OMITTED\nTERMXKEY DC    AL2(DALTERM)     KEY FOR TERM=TS\nTERMXNUM DC    XL2'0000'        NUM LENGTH + PARM ENTRIES\nTERMXENT DS    0C\nTERPLEN  DC    AL2(L'TERTXPRM)  LENGTH OF PARM\nTERTXPRM DS    0C               NO PARM\n         DC    CL6' '           FOR PATCHING\nTXLEN    EQU   *-TXUNITS\nDYNEL    EQU  *-DYNBLKS\nRBLEN  EQU  (S99RBEND-S99RB)\n         LTORG\n         DROP  R8\n         EJECT\nAUTHIT   DS    0H\n         USING *,R8\n******FOR TSO\n***USE SVC 241 TO GET AUTH R4=TCB, R0=1 OR 0 FOR ON/OFF, R1='AUTH'\n***SVC USES TCB PROPER+B4 TO GET JSCB ADDR\n         STM   R15,R1,SAVE1401     Now save registers and test if APF\n         XR    R15,R15                  authorized.\n         TESTAUTH FCTN=1           Are we authorized?\n         LTR   R15,R15             Test the return code.\n         BNZ   NOTAUTH             Not zero, tell not authorized.\n         LM    R15,R1,SAVE1401     Restore registers used by TESTAUTH.\n         B     AUTHGO\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nNOTAUTH  DS    0H\n         STM   R15,R1,SAVE1401     Now save registers and test if APF\n         MVI   OUTLINE-1,X'40'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE+1(22),=C'COMMAND NOT AUTHORIZED'\n         PUT   OUTPUT,OUTLINE\n*        TPUT  OUTLINE,30\n         LM    R15,R1,SAVE1401     Restore registers used by TESTAUTH.\n         B     ENDITXX             Get out without doing MODESET\nAUTHGO   DS    0H\n         MODESET KEY=ZERO,MODE=SUP\n         BR    R10\nLINKSAVE DS    18F\n         LTORG\n         EJECT\nTRANTAB  DS    0H\n         USING *,R15\nTRTTAB   DC    256X'FF'     ALPHA CHARS GO IN AS LOWER CASE\n         ORG   TRTTAB+X'81'\n         DC    9X'00'   A-I\n         ORG   TRTTAB+X'91'\n         DC    9X'00'   J-R\n         ORG   TRTTAB+X'A2'\n         DC    8X'00'   S-Z\n         ORG   TRTTAB+C'A'\n         DC    9X'00'   A-I\n         ORG   TRTTAB+C'J'\n         DC    9X'00'   J-R\n         ORG   TRTTAB+C'S'\n         DC    8X'00'   S-Z\n         ORG   TRTTAB+C'0'\n         DC    10X'00'  0-9\n         ORG\nHEXTRT   DC    256X'FF'\n         ORG   HEXTRT+X'81'\n         DC    9X'00'   A-F LOWER\n         ORG   HEXTRT+X'C1'\n         DC    9X'00'   A-F CAPS\n         ORG   HEXTRT+X'F0'\n         DC    10X'00'  0-9\n         ORG\n         LTORG\n         DROP  R15\nCONVTAB  DS    0H           TRANSLATE LOWER CASE TO UPPER CASE\n         USING *,R15\nCNVTAB   DC    256AL1(*-CNVTAB)\n         ORG   CNVTAB+X'81'\n         DC    C'ABCDEFGHI'\n         ORG   CNVTAB+X'91'\n         DC    C'JKLMNOPQR'\n         ORG   CNVTAB+X'A2'\n         DC    C'STUVWXYZ'\n         ORG\nHEXSAVE  DS    3F\nSAV4HEX  DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H                    HEX DISPLAY ROUTINE - KEEP IN\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         BR    R5                    RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\n         SPACE\n* --------------------------------------------------------- *\n         LTORG\n         DROP  R15\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "UCB$": {"ttr": 3595, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1b\\x00!\\x01\\x00\\x04\\x8f\\x01\\x163_\\x170\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.27", "flags": 0, "createdate": "2000-02-17T00:00:00", "modifydate": "2016-11-30T17:30:21", "lines": 28, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.B.ASM(UCB)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB493249\n SETCODE AC(0)\n NAME    UCB(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UCBOLD": {"ttr": 3597, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x007\\x00\\x95 \\x0f\\x01\\x163_\\x17%\\x01\\x0c\\x00\\xf6\\x00\\x00\\xc5\\xc9\\xd3\\xc5\\xc5\\xd5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1995-07-19T00:00:00", "modifydate": "2016-11-30T17:25:37", "lines": 268, "newlines": 246, "modlines": 0, "user": "EILEEN"}, "text": "        PRINT ON,GEN\n********U C B********TSO VERSION*******************\n**FORMAT:  UCB  VOLSER    - WILL RETURN UCB ADDRESS\n**FORMAT:  UCB  UCBADDR   - WILL RETURN VOLSER\n****\n**THIS PROGRAM RETURNS A VOLSER IF A UCB ADDRESS IS ENTERED OR\n**A UCB ADDRESS IF A VOLSER IS PASSED.\n*****DEPENDENCIES\n**THIS PROGRAM IS CURRENTLY USING AN SVC (223) TO GET AUTHORIZATION\n**SO THAT IT DOES NOT HAVE TO BE RUN FROM AN AUTHORIZED LOADLIB.\n**THE SVC CODE IS IN MEMBER SVC ON THIS PDS OR TAPE\n**THE PROGRAM DOES NOT SEEM TO WORK ON TSO IF THE\n**SVC CALL IS OMITTED AND THE PROGAM JUST LINKED INTO AN AUTHORIZED\n**LIBRARY WITH AC=1. THE SOURCE CODE SUPPLIED IN SVC IS FOR\n**SVC 241. THE CSECT NAME SHOULD BE CHANGED AND LINKED UNDER THE\n**NEW SVC NUMBER. THE NEW SVC NUMBER SHOULD REPLACE SVC 223 USED\n**IN THIS CODE. THE SVC CODE SETS THE AUTH BIT ON IN THE JSCB.\n**ITS USAGE IS DOCUMENTED IN MEMBER SVC.\n*\n**THE PROGRAM MAY BE RUN FROM LINKLIST OR CALLED FROM A CLIST.\n**HOWEVER, IT MAY NOT WORK UNDER ISPF IF CALLED\n**FROM A CLIST.\n***REGISTERS******\nBASEREG  EQU   11\nLINKREG  EQU   8\nUCBREG   EQU   1\nCVTREG   EQU   2\nRET      EQU   10\nTABREG   EQU   15\n****************************\n        CVT DSECT=YES,LIST=YES\nUCB    DSECT\n      IEFUCBOB LIST=YES,PREFIX=NO\n         IEFZB4D0\n         IEFZB4D2\n         EJECT\nTSOUCB   CSECT\n         USING *,15\n         STM   14,12,12(13)\n         ST    13,SAVEMAIN+8\n         LA    13,SAVEMAIN\n         LR    BASEREG,15\n         USING TSOUCB,BASEREG\n         DROP  15\n         ST    1,SAVEMAIN\n         L      1,0(1)            ADDRESS OF PARM LIST\n         LH     2,0(1)          LENGHT OF PARM FIELD\n         STH    2,ULEN\n*IF INVOKED AS COMMAND PROCESSOR, LEN IS AT 2 AND PARM AT 4 NOT 0-2\n         CLI    2(1),C'A'         AND PROGRAM NAME IS PART OF PARM\n         BNL    GOTIT\n         LA     1,2(1)\n         LH     2,0(1)   LEN\n         STH    2,ULEN\n         L      TABREG,=A(TRANTAB)\n         TRT    2(9,1),0(TABREG)  SEARCH FOR DELIMITER IN PGM NAME\n         BZ     ENDIT\n         LA     3,1(1)      POINT TO PARM FIELD\n         TRT    0(7,3),0(TABREG)  SEARCH FOR END OF UCB OR VOLSER\n         BZ     ENDIT\n         SR     1,3       LEN OF PARM FIELD\n         LR     2,1\n         STH    2,ULEN\n         LR     1,3      BEG OF PARM\n         SH     1,=H'2'     -2\n         B      GOTIT\nGOTIT    DS     0H\n         LTR    2,2\n         BZ     ENDIT\n         BCTR   2,0\n         EX     2,MOVEIT       MOVE PARM\n         L      TABREG,=A(CONVTAB)  CONVERT LOWER CASE TO UPPER CASE\n         TR     PRM,0(TABREG)\n         LH     2,ULEN\n         MVI    RUNSW,UCBAD\n         CH     2,=H'3'\n         BNH    *+8\n         MVI    RUNSW,VOLSER\n         L      LINKREG,=A(ALLOCOUT)\n         BALR   RET,LINKREG\n         OPEN  (OUTPUT,OUTPUT)\n***MUST BE AUTHORIZED TO USE UCBLOOK\n         L      LINKREG,=A(AUTHIT)\n         BALR   RET,LINKREG\n*****FOR DYNAMIC UCBS, USE UCBLOOK MACRO\n         USING UCB,UCBREG\n         TM  RUNSW,VOLSER    VOLSER CHECK\n         BO   VOLLOOK\nUL  UCBLOOK NOPIN,DEVNCHAR=PRMP,DYNAMIC=YES,UCBPTR=RETUCBA\n         LTR  15,15\n           BNZ  PUTIT\n          L   UCBREG,RETUCBA\n         MVC   RESULT(L'UCBVOLI),UCBVOLI\n          B   PUTIT\nVOLLOOK   DS   0H\nVL  UCBLOOK NOPIN,VOLSER=PRM,DYNAMIC=YES,UCBPTR=RETUCBA\n         LTR  15,15\n           BNZ  PUTIT\n          L   UCBREG,RETUCBA\n         MVC   RESULT(L'UCBNAME),UCBNAME\n          B   PUTIT\n******************************************\n*        L     CVTREG,16 CVT POINTER\n*        USING CVT,CVTREG\n*        L     UCBREG,CVTUCBA  FIRST UCB\n*        USING UCB,UCBREG\n*       DROP   CVTREG\n*        B     FINDIT\n*NEXTUCB  DS    0H\n*        L     UCBREG,UCBNXUCB\n*FINDIT   DS    0H\n*        CLI   UCBID,UCBSTND\n*        BNE   PUTIT\n*         TM    RUNSW,VOLSER  VOL SER  GIVEN?\n*        BNO   TESTUCB\n*        CLC   UCBVOLI,PRM\n*        BNE   NEXTUCB\n*        MVC   RESULT(L'UCBNAME),UCBNAME\n*        B     PUTIT\n*TESTUCB  DS    0H\n*        CLC   UCBNAME,PRM\n*        BNE   NEXTUCB\n*        MVC   RESULT(L'UCBVOLI),UCBVOLI\n*        B     PUTIT\nPUTIT    DS    0H\n         CLI   RESULT,C' '\n         BNE   *+10\n         MVC   RESULT(10),=CL10'NOT FOUND'\n         PUT  OUTPUT,OUTLINE\n         B    ENDIT\nENDIT    DS    0H\n         CLOSE OUTPUT\n         L     13,SAVEMAIN+8\n         LM    14,12,12(13)\n         SR    15,15\n         BR    14\nMOVEIT   MVC   PRM(0),2(1)  MOVE COMMAND FROM PARM AREA\n*\nSAVEMAIN DS   18F\nRETUCBA  DS   F\nULEN    DS    H\nOUTLINE  DC  CL80' '\n       ORG  OUTLINE+1\nPRMP     DC   C' '\nPRM      DC   CL6' '\n         DC   C' '\nRESULT   DS   0C\n         ORG\nRUNSW    DC   X'00'\nUCBAD    EQU   X'01'\nVOLSER   EQU   X'02'\nOUTPUT   DCB   DDNAME=TERMFILP,DSORG=PS,MACRF=PM,RECFM=FA,             XJRE06080\n               LRECL=080,BLKSIZE=080\n        LTORG\n        EJECT\nALLOCOUT DS    0H\n         USING  *,LINKREG\n         STM  14,12,ALCSAVE+12\n         LA    1,RBPOINT        (R1 => A(REQ BLOCK )\n         DYNALLOC\n         LM    14,12,ALCSAVE+12\n         BR    RET\n         DS  0F\nALCSAVE  DS  18F\nDYNBLKS  EQU  *\nRBPOINT  DC   A(RBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   RBPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n          ORG\n         DS    0F\nRBS     EQU  *\nRB       DS    0CL20  S99RB DSECT  LOC BY RBPOINT\nRBLN     DC    AL1(RBEL)         LEN OF RB\nRBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nRBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nRBFLAG2  DS    X       2ND   FLAG BYTE\nRBERROR  DS    XL2     ERROR REASON CODE\nRBINFO   DS    XL2     INFO  REASON CODE\nRBTXTPP  DC    A(TXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nRBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nRBEL     EQU   *-RB\n**TEXT UNIT POINTERS\nTXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nDDNPOINT DC  A(DDNTEXT)\nSYSPOINT DC  A(SYSOTEXT)\nTERPOINT DC  A(TERMTEXT)\n         ORG  TERPOINT\n         DC    X'80'   LAST TEXT UNIT\n         ORG\nTXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nDDNTEXT  DS    0F   DDN TEXT UNIT\nDDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nDDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nDDNTXENT DS    0C\nDDNPLEN  DC    AL2(L'DDNTXPRM)  LENGTH OF PARM\nDDNTXPRM DC    CL8'TERMFILP'\nSYSOTEXT  DS   0F\nSYSOXKEY DC    AL2(DALSYSOU) KEY FOR SYSOUT ALLOC\nSYSOXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSYSOXENT DS    0C\nSYSOLEN  DC    AL2(L'SYSOXPRM)  LENGTH OF PARM\nSYSOXPRM DC    C'A'          MUST BE 1\nTERMTEXT  DS   0F   OMITTED\nTERMXKEY DC    AL2(DALTERM) KEY FOR TERM=TS\nTERMXNUM DC    XL2'0000'   NUM LENGTH + PARM ENTRIES\nTERMXENT DS    0C\nTERPLEN  DC    AL2(L'TERTXPRM)  LENGTH OF PARM\nTERTXPRM DS    0C       NO PARM\n         DC    CL6' '   FOR PATCHING\nTXLEN    EQU   *-TXUNITS\nDYNEL    EQU  *-DYNBLKS\nRBLEN  EQU  (S99RBEND-S99RB)\n         LTORG\n         DROP  LINKREG\n         EJECT\nAUTHIT    DS   0H\n         USING *,LINKREG\n           STM  14,12,LINKSAVE+12\n******FOR TSO\n***USE SVC 223 TO GET AUTH R4=TCB, R0=1 OR 0 FOR ON/OFF, R1='AUTH'\n***SVC USES TCB PROPER+B4 TO GET JSCB ADDR\n         L     4,16    CVT  POINTER\n         L     4,0(4)  POINT TO TCB\n         L     4,4(4) POINT TO TCB PROPER OF ACTIVE TCB\n         LA    0,1   SET AUTH ON\n         ICM   1,15,=C'AUTH'   CONSTANT FOR SVC\n         SVC   223      SET ON AUTH\n         MODESET KEY=ZERO,MODE=SUP\n        LM   14,12,LINKSAVE+12\n         BR   RET\nLINKSAVE  DS   18F\n           LTORG\n         EJECT\nTRANTAB  DS   0H\n         USING *,TABREG\nTRTTAB   DC   256X'FF'      ALPHA CHARS GO IN AS LOWER CASE\n         ORG  TRTTAB+X'81'\n         DC   9X'00'   A-I\n         ORG  TRTTAB+X'91'\n         DC   9X'00'   J-R\n         ORG  TRTTAB+X'A2'\n         DC   9X'00'   S-Z\n         ORG  TRTTAB+C'A'\n         DC   9X'00'   A-I\n         ORG  TRTTAB+C'J'\n         DC   9X'00'   J-R\n         ORG  TRTTAB+C'S'\n         DC   9X'00'   S-Z\n         ORG  TRTTAB+C'0'\n         DC  10X'00'   0-9\n         ORG\n         LTORG\n         DROP  TABREG\nCONVTAB  DS    0H   TRANSLATE LOWER CASE TO UPPER CASE\n          USING *,TABREG\nCNVTAB   DC  256AL1(*-CNVTAB)\n         ORG  CNVTAB+X'81'\n         DC   C'ABCDEFGHI'\n         ORG  CNVTAB+X'91'\n         DC   C'JKLMNOPQR'\n         ORG  CNVTAB+X'A2'\n         DC   C'STUVWXYZ'\n         ORG\n         LTORG\n         DROP  TABREG\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UCBSVC": {"ttr": 3845, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01$\\x00\"\\x01\\x164\\x1f\\x01\\x164o\\x02\\x12\\x01\\x87\\x01,\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.36", "flags": 0, "createdate": "2016-12-06T00:00:00", "modifydate": "2016-12-11T02:12:22", "lines": 391, "newlines": 300, "modlines": 0, "user": "SBGOLOB"}, "text": "        PRINT ON,GEN\n********U C B********TSO VERSION*******************\n**FORMAT:  UCB  VOLSER    - WILL RETURN UCB ADDRESS\n**FORMAT:  UCB  UCBADDR   - WILL RETURN VOLSER\n****\n**THIS PROGRAM RETURNS A VOLSER IF A UCB ADDRESS IS ENTERED OR\n**A UCB ADDRESS IF A VOLSER IS PASSED.  FIXED FOR 4-DIGIT UCB'S.\n*****DEPENDENCIES\n**THIS VERSION USES AN SVC TO GET AUTHORIZED AND IS LINKEDITED\n**AS SETCODE(0).\n*\n**THE PROGRAM MAY BE RUN FROM LINKLIST OR CALLED FROM A CLIST.\n**IT NOW SEEMS TO WORK FINE WHEN CALLED FROM A CLIST.\n* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R5,SAV4HEX\n         STM   R15,R1,HEXSAVE\n         LA    R1,&FROM\n         LA    R0,&LEN\n         LA    R15,&TO\n         BAL   R5,HEX\n         L     R5,SAV4HEX\n         LM    R15,R1,HEXSAVE\n         MEND\n*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *\n***REGISTERS******\nBASEREG  EQU   11\nLINKREG  EQU   8\nUCBREG   EQU   1\nCVTREG   EQU   2\nRET      EQU   10\nTABREG   EQU   15\n****************************\n         CVT DSECT=YES,LIST=YES\nUCB      DSECT\n         IEFUCBOB LIST=YES,PREFIX=NO\n         IEFZB4D0\n         IEFZB4D2\n         YREGS\n         EJECT\nTSOUCB   CSECT\n         USING *,R15\n         STM   R14,R12,12(R13)\n         ST    R13,SAVEMAIN+8\n         LA    R13,SAVEMAIN\n         LR    R11,R15\n         USING TSOUCB,R11\n         DROP  R15\n         ST    R1,SAVEMAIN\n         MVI   BLANKS-1,X'40'\n         MVC   BLANKS,BLANKS-1\n         MVI   OUTLINE-1,X'40'\n         MVC   OUTLINE,OUTLINE-1\n         TM    0(R1),X'80'        CHECK FOR INVOKED AS A PROGRAM\n         BO    PGM\n         TM    4(R1),X'80'        CHECK FOR INVOKED AS A PROGRAM\n         BZ    CMD\nPGM      L     R1,0(,R1)          ADDRESS OF PARM LIST\n         LH    R4,0(,R1)          LENGTH OF PARM FIELD\n         LTR   R4,R4              IF LENGTH ZERO\n         BZ    ENDITR               NO  PARM\n         STH   R4,ULEN\n         LA    R3,2(,R1)          ADDRESS OF PARM CHARS\n         B     GOTIT\nCMD      L     R1,0(,R1)          ADDRESS OF CBUF\n         LH    R4,0(,R1)          GET CBUF LENGTH\n         SH    R4,=H'4'           MINUS LENGTH OF 2 HALFWORDS\n         SH    R4,2(,R1)          MINUS OFFSET TO OPERAND\n         BZ    ENDITR             IF ZERO, NO OPERAND\n         AH    R1,2(,R1)          POINT TO OPERAND MINUS 4\n         LA    R3,4(,R1)          POINT TO OPERAND\n         STH   R4,ULEN\nGOTIT    EQU   *\n         LR    R1,R3\n         LR    R0,R4\n*        SVC   93 TPUT             SHOW PARM BEFORE VALIDATION\n         CH    R4,=H'6'            IF MORE THAN 6 CHARS\n         BH    ENDITR                EXIT\n         CH    R4,=H'3'            IF LESS THAN 3 CHARS\n         BL    ENDITR                EXIT\n         MVI   PRM000-1,X'40'\n         MVC   PRM000,PRM000-1\n         LR    R15,R4\n         BCTR  R15,0\n         B     *+10\n         MVC   PRM(0),0(R3)\n         EX    R15,*-6             MOVE PARM\n         L     R15,=A(CONVTAB)     CONVERT LOWER CASE TO UPPER CASE\n         TR    PRM,0(R15)\n         CH    R4,=H'4'            IF MORE THAN 4 CHARS\n         BH    VOL                   IT'S A VOLSER, NOT A UNIT ADDRESS\n         LR    R15,R4\n         BCTR  R15,0               LENGTH MINUS 1\n         B     *+10\n         TRT   PRM(0),HEXTRT       ONLY HEX CHARS OK\n         EX    R15,*-6\n         BNZ   ENDITR\n         CH    R4,=H'3'\n         BNE   NOT3\n         MVC   WORK4(3),PRM        PREFIX 3-CHARACTER UNIT ADDRESS\n         MVI   PRM,C'0'              WITH '0'\n         MVC   PRM+1(3),WORK4\n         LA    R4,4\nNOT3     EQU   *\n         LA    R1,PRM\n         LR    R0,R4\n*        SVC   93 TPUT             SHOW UNIT ADDRESS AFTER VALIDATION\n         B     OPENO\nVOL      LR    R15,R4\n         BCTR  R15,0               LENGTH MINUS 1\n         B     *+10\n         TRT   PRM(0),TRANTAB      ONLY ALPHANUM OK\n         EX    R15,*-6\n         BNZ   ENDITR\n         LA    R1,PRM\n         LR    R0,R4\n*        SVC   93 TPUT             SHOW VOLSER AFTER VALIDATION\nOPENO    MVI   RUNSW,UCBAD\n         CH    R4,=H'4'\n         BNH   *+8\n         MVI   RUNSW,VOLSER\n***ALLOCATE AND OPEN OUTPUT FILE\n         L     R8,=A(ALLOCOUT)\n         BALR  R10,R8\n         OPEN  (OUTPUT,OUTPUT)\n***MUST BE AUTHORIZED TO USE UCBLOOK\n         L     R8,=A(AUTHIT)\n         BALR  R10,R8\n*****FOR DYNAMIC UCBS, USE UCBLOOK MACRO\n         USING UCB,R1\n         TM    RUNSW,VOLSER    VOLSER CHECK\n         BO    VOLLOOK\nUL  UCBLOOK NOPIN,DEVNCHAR=PRM,DYNAMIC=YES,UCBPTR=RETUCBA,             +\n               LOC=ANY,RANGE=ALL\n         LTR   R15,R15\n         BNZ   PUTITR\n         L     R1,RETUCBA\n         TAM                       TEST FOR AMODE 24/31/64\n         BNZ   NOT24U\n         SAM31\n         MVC   COPYUCB(36),0(R1)\n         LA    R1,COPYUCB\n         SAM24\nNOT24U   EQU   *\n         TM    UCBTBYT3,UCB3DACC   CHECK FOR DASD\n         BO    OKDASD\n         MVC   RESULT(8),=C'NON-DASD'\n         B     PUTIT\nOKDASD   EQU   *\n         TM    UCBSTAT,UCBONLI     CHECK FOR ONLINE\n         BO    OKONLI\n         MVC   RESULT(7),=C'OFFLINE'\n         B     PUTIT\nOKONLI   EQU   *\n         MVC   RESULT(L'UCBVOLI),UCBVOLI\n         B     PUTIT\nVOLLOOK  DS    0H\nVL  UCBLOOK NOPIN,VOLSER=PRM,DYNAMIC=YES,UCBPTR=RETUCBA,               +\n               LOC=ANY,RANGE=ALL\n         LTR   R15,R15\n         BNZ   PUTITR\n         L     R1,RETUCBA\n*        MVC   RESULT(L'UCBNAME),UCBNAME\n         TAM                       TEST FOR AMODE 24/31/64\n         BNZ   NOT24V\n         SAM31\n         MVC   COPYUCB(36),0(R1)\n         LA    R1,COPYUCB\n         SAM24\nNOT24V   EQU   *\n         UNPK  RESULT(5),UCBCHAN(3)  GET UNIT ADDRESS\n         TR    RESULT(4),HEXTAB-240  TO 4-BYTE HEX\n         MVI   RESULT+4,C' '\n         B     PUTIT\n******************************************\n*        L     R2,16         CVT POINTER\n*        USING CVT,R2\n*        L     R1,CVTUCBA    FIRST UCB\n*        USING UCB,R1\n*        DROP   R2\n*        B     FINDIT\n*NEXTUCB DS    0H\n*        L     R1,UCBNXUCB\n*FINDIT  DS    0H\n*        CLI   UCBID,UCBSTND\n*        BNE   PUTIT\n*        TM    RUNSW,VOLSER  VOL SER  GIVEN?\n*        BNO   TESTUCB\n*        CLC   UCBVOLI,PRM\n*        BNE   NEXTUCB\n*        MVC   RESULT(L'UCBNAME),UCBNAME\n*        B     PUTIT\n*TESTUCB DS    0H\n*        CLC   UCBNAME,PRM\n*        BNE   NEXTUCB\n*        MVC   RESULT(L'UCBVOLI),UCBVOLI\n*        B     PUTIT\nPUTITR   CVD   R15,DOUBLE\n         OI    DOUBLE+7,X'0F'\n*        UNPK  RESULT+20(5),DOUBLE+5(3) SHOW RETURN CODE\nPUTIT    DS    0H\n         CLI   RESULT,C' '\n         BNE   *+10\n         MVC   RESULT(10),=CL10'NOT FOUND'\n         PUT   OUTPUT,OUTLINE\n*        TPUT  OUTLINE,30\n         B     ENDIT\nENDIT    DS    0H\n         MODESET KEY=NZERO,MODE=PROB\nENDITXX  DS    0H\n         CLOSE OUTPUT\nENDITR   EQU   *\n         L     R13,SAVEMAIN+8\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\nMOVEIT   MVC   PRM(0),2(1)   MOVE COMMAND FROM PARM AREA\n*\nSAVEMAIN DS    18F\nSAVE1401 DS    6F\nRETUCBA  DS    F\nWORK4    DS    F\nDOUBLE   DS    D\nCOPYUCB  DS    9F\n         DS    C\nBLANKS   DC    CL40' '\nULEN     DS    H\n         DC    C' '\nOUTLINE  DC    CL80' '\n         ORG   OUTLINE+1\nPRM000   DS    0CL8\nPRMP     DC    C' '\nPRM      DC    CL6' '\n         DC    C' '\nRESULT   DS    0C\n         ORG\nRUNSW    DC    X'00'\nUCBAD    EQU   X'01'\nVOLSER   EQU   X'02'\nOUTPUT   DCB   DDNAME=TERMFILP,DSORG=PS,MACRF=PM,RECFM=FA,             XJRE06080\n               LRECL=080,BLKSIZE=080\n         LTORG\n         EJECT\nALLOCOUT DS    0H\n         USING *,R8\n         STM   R14,R12,ALCSAVE+12\n         LA    1,RBPOINT     (R1 => A(REQ BLOCK )\n         DYNALLOC\n         LM    R14,R12,ALCSAVE+12\n         BR    R10\n         DS    0F\nALCSAVE  DS    18F\nDYNBLKS  EQU   *\nRBPOINT  DC    A(RBS)        ADR  REQ BLOCK PASSED IN R1\n         ORG   RBPOINT       S99RBP  DSECT\n         DC    X'80'         HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nRBS      EQU   *\nRB       DS    0CL20         S99RB DSECT  LOC BY RBPOINT\nRBLN     DC    AL1(RBEL)     LEN OF RB\nRBVERB   DC    AL1(S99VRBAL) FUNC 01-07 01 FOR ALLOC\nRBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nRBFLAG2  DS    X       2ND   FLAG BYTE\nRBERROR  DS    XL2     ERROR REASON CODE\nRBINFO   DS    XL2     INFO  REASON CODE\nRBTXTPP  DC    A(TXPOINTS)     LIST OF TEXT PTRS\n         DS    F             RESERVED\nRBAUTHFL DS    XL4           FLAGS FOR AUTH FUNCTIONS\nRBEL     EQU   *-RB\n**TEXT UNIT POINTERS\nTXPOINTS DS    0F            S99TUPL  DSECT  TU PTR LIST\nDDNPOINT DC    A(DDNTEXT)\nSYSPOINT DC    A(SYSOTEXT)\nTERPOINT DC    A(TERMTEXT)\n         ORG   TERPOINT\n         DC    X'80'            LAST TEXT UNIT\n         ORG\nTXUNITS  DS    0F               S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nDDNTEXT  DS    0F               DDN TEXT UNIT\nDDNTXKEY DC    AL2(DALDDNAM)    KEY FOR DDN TEXT\nDDNTXNUM DC    XL2'0001'        NUM LENGTH + PARM ENTRIES\nDDNTXENT DS    0C\nDDNPLEN  DC    AL2(L'DDNTXPRM)  LENGTH OF PARM\nDDNTXPRM DC    CL8'TERMFILP'\nSYSOTEXT  DS   0F\nSYSOXKEY DC    AL2(DALSYSOU)    KEY FOR SYSOUT ALLOC\nSYSOXNUM DC    XL2'0001'        NUM LENGTH + PARM ENTRIES\nSYSOXENT DS    0C\nSYSOLEN  DC    AL2(L'SYSOXPRM)  LENGTH OF PARM\nSYSOXPRM DC    C'A'             MUST BE 1\nTERMTEXT DS    0F               OMITTED\nTERMXKEY DC    AL2(DALTERM)     KEY FOR TERM=TS\nTERMXNUM DC    XL2'0000'        NUM LENGTH + PARM ENTRIES\nTERMXENT DS    0C\nTERPLEN  DC    AL2(L'TERTXPRM)  LENGTH OF PARM\nTERTXPRM DS    0C               NO PARM\n         DC    CL6' '           FOR PATCHING\nTXLEN    EQU   *-TXUNITS\nDYNEL    EQU  *-DYNBLKS\nRBLEN  EQU  (S99RBEND-S99RB)\n         LTORG\n         DROP  R8\n         EJECT\nAUTHIT   DS    0H\n         USING *,R8\n******FOR TSO\n***USE SVC 241 TO GET AUTH R4=TCB, R0=1 OR 0 FOR ON/OFF, R1='AUTH'\n***SVC USES TCB PROPER+B4 TO GET JSCB ADDR\n         L     4,16    CVT  POINTER\n         L     4,0(4)  POINT TO TCB\n         L     4,4(4) POINT TO TCB PROPER OF ACTIVE TCB\n         LA    0,1   SET AUTH ON\n         ICM   1,15,=C'AUTH'   CONSTANT FOR SVC\n         SVC   241      SET ON AUTH\n         B     AUTHGO\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nNOTAUTH  DS    0H\n         STM   R15,R1,SAVE1401     Now save registers and test if APF\n         MVI   OUTLINE-1,X'40'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE+1(22),=C'COMMAND NOT AUTHORIZED'\n         PUT   OUTPUT,OUTLINE\n*        TPUT  OUTLINE,30\n         LM    R15,R1,SAVE1401     Restore registers used by TESTAUTH.\n         B     ENDITXX             Get out without doing MODESET\nAUTHGO   DS    0H\n         MODESET KEY=ZERO,MODE=SUP\n         BR    R10\nLINKSAVE DS    18F\n         LTORG\n         EJECT\nTRANTAB  DS    0H\n         USING *,R15\nTRTTAB   DC    256X'FF'     ALPHA CHARS GO IN AS LOWER CASE\n         ORG   TRTTAB+X'81'\n         DC    9X'00'   A-I\n         ORG   TRTTAB+X'91'\n         DC    9X'00'   J-R\n         ORG   TRTTAB+X'A2'\n         DC    8X'00'   S-Z\n         ORG   TRTTAB+C'A'\n         DC    9X'00'   A-I\n         ORG   TRTTAB+C'J'\n         DC    9X'00'   J-R\n         ORG   TRTTAB+C'S'\n         DC    8X'00'   S-Z\n         ORG   TRTTAB+C'0'\n         DC    10X'00'  0-9\n         ORG\nHEXTRT   DC    256X'FF'\n         ORG   HEXTRT+X'81'\n         DC    9X'00'   A-F LOWER\n         ORG   HEXTRT+X'C1'\n         DC    9X'00'   A-F CAPS\n         ORG   HEXTRT+X'F0'\n         DC    10X'00'  0-9\n         ORG\n         LTORG\n         DROP  R15\nCONVTAB  DS    0H           TRANSLATE LOWER CASE TO UPPER CASE\n         USING *,R15\nCNVTAB   DC    256AL1(*-CNVTAB)\n         ORG   CNVTAB+X'81'\n         DC    C'ABCDEFGHI'\n         ORG   CNVTAB+X'91'\n         DC    C'JKLMNOPQR'\n         ORG   CNVTAB+X'A2'\n         DC    C'STUVWXYZ'\n         ORG\nHEXSAVE  DS    3F\nSAV4HEX  DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      DS    0H                    HEX DISPLAY ROUTINE - KEEP IN\n         MVC   1(1,R15),0(R1)        Move byte\n         UNPK  0(3,R15),1(2,R15)     Unpack\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)           Increment output pointer\n         LA    R1,1(,R1)             Increment input pointer\n         BCT   R0,HEX                Decrement length, then loop\n         MVI   0(R15),C' '           Blank the trailing byte\n         BR    R5                    RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF'   Translate table\n         SPACE\n* --------------------------------------------------------- *\n         LTORG\n         DROP  R15\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "UCBSVC$": {"ttr": 4097, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00#\\x01\\x00\\x04\\x8f\\x01\\x164o\\x01@\\x00\\x1d\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "2000-02-17T00:00:00", "modifydate": "2016-12-11T01:40:23", "lines": 29, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//         DD DISP=SHR,DSN=SBGOLOB.FILE249.MACLIB\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.B.ASM(UCBSVC)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB493249\n SETCODE AC(0)\n NAME    UCBSVC(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMOD": {"ttr": 4099, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00X\\x01\\x01\\x07/\\x01\\x163_\\x17\"\\x03)\\x03!\\x00\\x00\\xe4\\xd7\\xc4\\xc1\\xe3\\xc5\\xc4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-03-13T00:00:00", "modifydate": "2016-11-30T17:22:58", "lines": 809, "newlines": 801, "modlines": 0, "user": "UPDATED"}, "text": "*****W M O D******TSO VERSION*************************\n****FORMAT: WMOD MODNAME\n**  RUNTIME INSTRUCTIONS\n**PLACE PROGRAM IN LINKLIST OR INVOKE THRU CALL STATEMENT IN A CLIST.\n**  ASSEMBLY INSTRUCTIONS\n**    NOTHING SPECIAL\n*********************************\n**THIS PROGRAM WILL SEARCH ALL ALLOCATED PDS LIBRARIES IN THE TSO\n**ADDRESS SPACE FOR THE SPECIFIED MODULE NAME, INCLUDING CLISTS,\n**SOURCE, ISPF LIBRARIES, ETC. IT WILL ALSO SEARCH STEPLIB, LPA,\n**LINKLIST AND SVCLIB. FOR LPA MODULES, THE ADDRESS IN LPA WILL\n**BE RETURNED. FOR ALL OTHERS, THE DATASET NAME WILL BE RETURNED.\n**********************************************************************\n**  THIS VERSION USES MACRO IEZDEB INSTEAD OF AN OLD VERSION OF IT  **\n**        SO IT DOESN'T NEED THE LOCAL MACLIB FOR ASSEMBLY          **\n**********************************************************************\nLINKREG  EQU   8\nRET      EQU   10\nCVTREG   EQU   1\nLPDEREG  EQU   2\nDCBREG   EQU   2\nDEBREG   EQU   3\nLLTREG   EQU   3\nTIOTREG  EQU   4\nARLREG   EQU   4\nBASEREG  EQU   11\nJSCBREG  EQU   15\nJFCBREG  EQU   15\nTCBREG   EQU   5\n         IEFZB4D0\n         IEFZB4D2\nARL      IHAARL DSECT=YES,PREFIX=ARL,DESCR=YES\nARLENGTH EQU   *-ARL\n         DCBD  DSORG=PO\nDCBLEN   EQU   *-IHADCB\nTIOT     DSECT\n         IEFTIOT1\nTIOTOFF  EQU   TIOENTRY-TIOT\nXIOT     DSECT\n         ORG   XIOT+TIOELNGH-TIOENTRY\nXIOELNGH DS    XL(L'TIOELNGH)\n         ORG   XIOT+TIOEDDNM-TIOENTRY\nXIOEDDNM DS    CL(L'TIOEDDNM)\n         ORG   XIOT+TIOEJFCB-TIOENTRY\nXIOEJFCB DS    XL(L'TIOEJFCB)\nJFCB     DSECT\n         IEFJFCBN LIST=YES\n*EBBASIC IGGDEBD\n         IEZDEB LIST=YES\n         IKJTCB LIST=YES,DSECT=YES\n         IEZJSCB\nARAD     DSECT\nARALEN   DS    H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4\n***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)\n         DS    XL2  RESERVED\nARAJFCB  DS    CL176   JFCB\nARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL\n         CVT   DSECT=YES,LIST=YES\n         IHALPDE\nLPDELEN  EQU   *-LPDE\nLLTE     DSECT\n         DS    X\nLLTDSN   DS    CL44\nLLTLEN   EQU   *-LLTE\nLLTOFF   EQU   8    OFFSET TO FIRST LLTE\nPRVENTRY DS    CL8    FOR EACH ENTRY\n*********************************************************************** COP00210\n*********************************************************************** COP00250\n* NAME: WMOD                                                            COP00290\n* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310\n*                                                                       COP00420\n**********************************************************************  COP00430\nWMOD     CSECT                                                          COP00440\nWMOD     AMODE 31                                                       COP00440\nWMOD     RMODE 24                                                       COP00440\n         USING WMOD,BASEREG\n         B     BEGIN-*(,15)\n         DC    AL1((BEGIN-*)-1)\n         DC    C'SEEK '\n         DC    CL9'&SYSDATC'\n         DC    CL5'&SYSTIME'\nBEGIN    STM   14,12,12(13)\n         LR    BASEREG,15\n         LR    14,13\n         LA    13,SAVEMAC\n         ST    14,4(,13)\n         ST    13,8(,14)\n*        ST    1,SAVER1\n***      OPEN  (SNAP,OUTPUT)\n****     L     1,SAVER1\n****     MVC   SNAPPARM,0(1)\n****     SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=01\n         CLI   0(1),X'80'    ONLY PARM\n         BNE   NOTONE\n         L     1,0(,1)             ADDRESS OF PARM LIST\n*        ST    1,SAVER1\n****     MVC   SNAPPARM,0(1)\n******   SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=02\n****     L     1,SAVER1\n         LH    2,0(,1)             LENGHT OF PARM FIELD\n         LTR   2,2\n         BZ    ENDIT\n         BCTR  2,0\n         LA    1,2(,1)\n         EX    2,MOVEPROG\n         B     GOTIT\nNOTONE   DS    0H\n         L     1,0(,1)             ADDRESS OF PARM LIST\n*        ST    1,SAVER1\n****     MVC   SNAPPARM,0(1)\n*****    SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=03\n****     L     1,SAVER1\n         LR    15,1                SAVE IT\n         LH    2,2(,1)             LEN   OF FIRST PARM\n         LR    0,2                 SAVE LEN\n         LA    1,4(,1)             ADDR 1ST PARM\n         AR    2,1                 END OF FIRST PARM\n         CLI   0(2),C'$'           REALLY A 2ND PARM\n         BL    ISONE               NO...\n         LH    0,0(,15)            LEN OF TOTAL PARM AREA\n         LH    15,2(,15)           LEN OF FIRST PARM\n         SR    0,15                LEN OF 2ND PARM\n         SH    0,=H'4'             - LEN\n         LR    1,2                 ADDR 2ND PARM\n         LR    2,0                 LEN 2ND PARM\n         BCTR  2,0\n         EX    2,MOVEPROG\n         B     GOTIT\nMOVEPROG MVC   WORKPROG(0),0(1)\nISONE    DS    0H\n         LR    15,0                LEN  OF PARM\n         BCTR  15,0\n         EX    15,MOVEPROG\n         B     GOTIT\nGOTIT    DS    0H\n         BAL   RET,ALLOCOUT\n         OPEN  (OUTFILE,(OUTPUT))\n         XR    5,5                 CLEAR REG 5                          COP00490\n         OC    WORKPROG,BLANKS     FOLD LOWER TO UPPER CASE\n*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA\n         BAL   RET,CHKSLIB\n         TM    WORKSW,LOADSTEP\n         BNO   TESTSVC             IS IN STEPLIB/JOBLIB\n         XC    WORKDSN,WORKDSN\n         MVC   BLDLCCAT,STEPCCAT\n         MVC   WORKDDN,=CL8'STEPLIB'\n         BAL   RET,RDJFCB\n         CLI   WORKDSN,X'00'\n         BE    TESTSVC\n         BAL   LINKREG,PUTOUT\nTESTSVC  DS    0H\n         TM    WORKSW,LOADSVC\n         BNO   TESTLINK            CHECK LINKLIST\n         MVC   WORKDSN,SVCDSN\n         MVC   WORKDDN,=CL8'SVCLIB'\n         BAL   LINKREG,PUTOUT\nTESTLINK DS    0H\n         TM    WORKSW,LOADLINK\n         BNO   TESTLPA\n         XC    WORKDDN,WORKDDN\n         XC    WORKDSN,WORKDSN\n         MVC   BLDLCCAT,LINKCCAT\n         BAL   RET,SRCHLINK\n         MVC   WORKDDN,DLCBNAME\n         BAL   LINKREG,PUTOUT\nTESTLPA  DS    0H                  CHECK IF MODULE IN LPA\n         MVC   WORKDDN,=CL8'LPALIB'\n         BAL   RET,SRCHLPA\n         TM    WORKSW,LOADLPA\n         BNO   TESTDDNS\n         XC    WORKDSN,WORKDSN\n         BAL   LINKREG,PUTOUT\nTESTDDNS DS    0H\n***GET DDN OF ALL PDS'S ALLOCATED TO REGION\n         BAL   RET,LOCDEBS\n         LA    1,DDNTAB\nTESTDDNT DS    0H\n         CLI   0(1),X'FF'\n         BE    WHERLOAD\n         ST    1,CURDDN\n         B     DODDNST\nNEXTDDNT DS    0H\n         L     1,CURDDN\n         LA    1,TABL(,1)\n         B     TESTDDNT\nDODDNST  DS    0H\n****LOCATE DCB FOR EACH DDN IS TABLE AND ISSUE BLDL FOR MODULE\n         BAL   RET,SRCHSDEB\n         TM    TSOSW,TSOFILE\n         BO    DOTSODD             PROGRAM FOUND\n         B     NEXTDDNT\n         CLI   FOUNDSW,X'FF'\n         BE    RETURN\n         BAL   RET,FINDDCB\n         TM    TSOSW,TSOFILE\n         BNO   WHERLOAD            PROGRAM NOT DDN\nDOTSODD  DS    0H\n****READ JFCBS FOR DDN     AND EXTRACT DSN IN CONCATENATION****\n         BAL   RET,RDJFCB\n         CLI   WORKDSN,X'00'\n         BE    WHERLOAD\n         BAL   LINKREG,PUTOUT\n         B     NEXTDDNT\nNOPROG   DS    0H\n         XC    OUTCON,OUTCON\n         MVC   ERRPROG,WORKPROG\n         MVC   OUTCON(ERRMESSL),ERRMESS\n         BAL   LINKREG,DOSEND\n         B     RETURN\nWHERLOAD DS    0H\n         CLI   FOUNDSW,X'FF'\n         BNE   NOPROG\n         B     RETURN\nPUTOUT   DS    0H\n         MVI   FOUNDSW,X'FF'\n         MVC   MODCON,=CL6'LOAD  '\n         TM    TSOSW,SRCMOD\n         BNO   *+10\n         MVC   MODCON,=CL6'SOURCE'\n         MVC   PROGCON,WORKPROG\n         MVC   DDNCON,WORKDDN\n         CLI   WORKDSN,X'00'\n         BE    *+14\n         MVC   DSNCON,WORKDSN\n         B     DOSEND\n         MVC   DSNCON(4),=CL4'AT  '\n         MVC   DSNCON+4(L'WORKCDDR),WORKCDDR\nDOSEND   DS    0H\n         MVI   FOUNDSW,X'FF'\n         PUT   OUTFILE,OUTCON\n         BR    LINKREG\nRETURN   DS    0H\n         CLOSE OUTFILE\n         L     2,=A(SYSPROC)                                     .FIX1.\n         TM    48(2),X'10'                                       .FIX1.\n         BNO   ENDIT                                             .FIX1.\n         CLOSE SYSPROC                                           .FIX1.\nENDIT    DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         SLR   15,15\n         BR    14\nERRMESS  DS    0C\n         DC    CL4' '\nERRPROG  DS    CL8\n         DC    C' NOT FOUND        '\nERRMESSL EQU   *-ERRMESS\nBLANKS   DC    8C' '\nDLCBNAME DC    CL8' '\nWORKDSN  DS    CL44\nSVCDSN   DC    CL(L'WORKDSN)'SYS1.SVCLIB'\nWORKPROG DS    CL8\nWORKDDN  DS    CL8\nWORKPARM DS    CL16\n*NAPPARM DS    CL40\nTSOSW    DS    X\nTSOFILE  EQU   X'01'\nSRCMOD   EQU   X'80'\nWORKSW   DS    X\nNOLPA    EQU   X'01'\nNOPPT    EQU   X'02'\nFOUND    EQU   X'04'\nLOADSVC  EQU   X'08'\nLOADLPA  EQU   X'10'\nLOADSTEP EQU   X'20'\nLOADLINK EQU   X'40'\nLOADRPL  EQU   X'80'\nFOUNDSW  DS    X\nTCBADDR  DS    F\nTIOTADDR DS    F\nDEBADDR  DS    F\nDCBADDR  DS    F\nBEGTIOT  DS    F\nCURDDN   DS    F\nSAVEMAC  DS    18F\nSAVELINK DS    18F\nSAVER1   DS    F\nENDDEBQ  DS    F\nDEBQADDR DS    F\nWORKCDDR DS    CL8,C' '\nFINOUT   DS    0C\n         DC    C' MODULE LOADED FROM '\nFINLIB   DS    CL8\nFINL     EQU   *-FINOUT\nBLDLLIST DS    0H\nBLDLNUM  DS    H   NUMBER OF ENTRIES\nBLDLLEN  DS    H   LEN OF EACH ENTRY\nBLDENTRY EQU   *\nBLDLNAME DS    CL8\nBLDLTTR  DS    XL3\nBLDLCCAT DS    X   CONCAT NUMBER RETURNED BY BLDL\nBLDLZ    DS    X   WHERE ENTRY FOUND\n         DS    X\nBLDLELEN EQU   *-BLDENTRY  LEN OF EACH ENTRY\nLINKCCAT DS    X\nSTEPCCAT DS    X\nOUTFILE  DCB   DDNAME=CERMFILE,MACRF=PM,DSORG=PS,RECFM=FA,             X\n               LRECL=80,BLKSIZE=80\nOUTCON   DS    0CL80\n         DC    CL1' '               1\nMODCON   DC    CL6' '          + 6= 7\n         DC    C' MODULE '     + 8=15\nPROGCON  DS    CL8             + 8=23\n         DC    C' IS IN DDN '  +11=34\nDDNCON   DS    CL8             + 8=42\n         DC    C' '            + 1=43\nDSNCON   DS    CL37            +37=80\n         DS    0F\nWARLAREA DS    CL(ARLENGTH)\nWXJFCB   DS    0F                                                       JFC00600\n         DC    X'93',AL3(WARLAREA) ONLY ENTRY                           JFC00610\nWDCB     DCB   DDNAME=ISPPROF,EXLST=WXJFCB,MACRF=(E)                           J\n*NAP DCB  DDNAME=SNAP,DSORG=PS,MACRF=W,LRECL=125,RECFM=VBA,BLKSIZE=882\n         LTORG\n         TITLE '                                             READ JFCB'\nRDJFCB   DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         XC    WORKDSN,WORKDSN\n         MVC   WARLAREA(ARLENGTH),CRL MOVE TO DYNAMIC STORAGE\n         LA    ARLREG,WARLAREA\n         USING ARL,ARLREG\n         MVC   ARLRETRV,=H'1'      ONLY WANT INFO FOR 1 DATASET\n         SR    0,0\n         IC    0,BLDLCCAT          RELATIVE CONCAT NUMBER\n         AH    0,=H'1'             ACTUAL CONCAT NUMBER\n         STH   0,ARLFIRST          DS WITH THIS CONCAT NUMBER\n         DROP  ARLREG\n         MVC   WDCB+DCBDDNAM-IHADCB(8),WORKDDN\n         RDJFCB WDCB                                                     JFC0042\n         LTR   15,15\n         BNZ   ENDJFCB\nPROCJFCB DS    0H                 FIND JFCB FOR CONCAT NUMBER FROM BLDL\n         LA    ARLREG,WARLAREA\n         USING ARL,ARLREG\n         L     1,ARLAREA           RESPONSE FROM RDJFCB\n         USING ARAD,1\n         LA    JFCBREG,ARAJFCB\n         DROP  1\n         USING JFCB,JFCBREG\n         MVC   WORKDSN,JFCBDSNM    SAVE DSNAME\nFREEJFCB DS    0H   FREE ARA\n****ISSUE FREEMAIN FOR STORAGE AREAS*****\n         SR    2,2\n         IC    2,ARLPOOL           SUBPOOL\n         L     3,ARLAREA           ADDR OF ARA\n         SR    0,0\n         ICM   0,7,ARLRLEN\n         DROP  ARLREG\n         FREEMAIN RU,LV=(0),SP=(2),A=(3)\nENDJFCB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n***ALLOCATION RETRIEVAL LIST\nCRL      IHAARL DSECT=NO,PREFIX=CRL,DESCR=NO\n*        DROP  LINKREG\n         LTORG\n         EJECT\nFINDDCB  DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         NI    TSOSW,255-TSOFILE\n         L     1,16                CVT\n         L     1,0(,1)             ADDR OF TCB POINTER\n         L     1,4(,1)             ADDR TCB\n         LR    TCBREG,1\n         B     NEXTTCB2\n         USING TCB,TCBREG\nNEXTTCB  DS    0H\n         L     TCBREG,TCBBACK      PREV TCB\nNEXTTCB2 DS    0H\n         LTR   TCBREG,TCBREG\n         BZ    ENDFDCB\n         CLC   TCBTCBID(3),=CL3'TCB'\n         BNE   ENDFDCB\n         ST    TCBREG,TCBADDR\n**CHECK IF DFHSIP TCB\n         L     JSCBREG,TCBJSCB\n*        USING IEZJSCB,JSCBREG\n*        CLC   JSCBPGMN,=CL8'DFHSIP'\n*        DROP  JSCBREG\n         L     TIOTREG,TCBTIO      TIOT\n         ST    TIOTREG,TIOTADDR\n         ST    TIOTREG,BEGTIOT\n         L     DEBREG,TCBDEB       DEB QUEUE\n         LTR   DEBREG,DEBREG\n         BZ    NEXTTCB\n         ST    DEBREG,DEBADDR\n         DROP  TCBREG\n         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY\n         USING XIOT,TIOTREG\n         SR    0,0\nFINDTIOT DS    0H\n         CLI   XIOELNGH,X'00'\n         BE    NEXTTCB\n         CLC   XIOEDDNM,WORKDDN\n         BE    GOTPROF\n         IC    0,XIOELNGH          LEN OF ENTRY\n         AR    TIOTREG,0           NEXT ENTRY\n         B     FINDTIOT\n***LOCATE DDN     IN TIOT\nGOTPROF  DS    0H\n         ST    TIOTREG,TIOTADDR\n****LOCATE DEB FOR DN     ****\n****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING TIOTADDR\n         L    DEBREG,DEBADDR\n         USING DEBBASIC,DEBREG\n         B     FINDDEB\nNEXTDEB  DS    0H\n         CLC   DEBDEBAD+1(3),=XL3'000000'\n         BE    NEXTTCB\n         L     DEBREG,DEBDEBAD     NEXT DEB\nFINDDEB  DS    0H\n         CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?\n         BNE   NEXTTCB\n         L     DCBREG,DEBDCBAD     ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?\n         BNO   NEXTDEB             NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN    DATA SET OPEN?\n         BO    *+18                YES...\n         CLC   WORKDDN,DCBDDNAM    SAME DD NAME\n         BE    GOTDCB\n         B     NEXTDEB\n         LH    0,DCBTIOT           OFFSET IN TIOT FOR THIS DCB\n         L     1,BEGTIOT           BEG OF TIOT\n         AR    1,0                 TIOT ADDR FOR THIS ENTRY\n         C     1,TIOTADDR          SAME AS FOR DDN\n         BNE   NEXTDEB\nGOTDCB   DS    0H\n         ST    DCBREG,DCBADDR      DCB\n         MVC   BLDLNUM,=H'1'  1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LR    2,DCBREG\n         LA    0,BLDLLIST\n         BLDL  (2),(0)\n         LTR   15,15\n         BNZ   ENDFDCB\n         OI    TSOSW,TSOFILE\n         TM    DCBRECFM,DCBRECU    UNDEFINED\n         BO    ENDFDCB             ASSUME LOAD   MODULE\n*        TM    DCBRECFM,DCBRECF    FIXED BLOCK FILE\n*        BNO   ENDFDCB             ASSUME SOURCE MODULE\n         OI    TSOSW,SRCMOD\nENDFDCB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n         DROP  TIOTREG,DEBREG,DCBREG\n         EJECT\nSRCHSDEB DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         NI    TSOSW,255-TSOFILE\n         L     15,CURDDN\n         USING TABSECT,15\n         L     DEBREG,DDNDEB\n         USING DEBBASIC,DEBREG\n         SLR   DCBREG,DCBREG\n         ICM   DCBREG,7,DEBDCBAD+1 ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?\n         BNO   ENDSJSCB            NO..RETURN\n         MVC   WORKDDN,DDNDSNAM\n         ST    DCBREG,DCBADDR      DCB\n         MVC   BLDLNUM,=H'1'       1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LR    2,DCBREG\n         LA    0,BLDLLIST\n         BLDL  (2),(0)\n         LTR   15,15\n         BNZ   ENDSJSCB\n         OI    TSOSW,TSOFILE\n         NI    TSOSW,255-SRCMOD\n         TM    DCBRECFM,DCBRECU    UNDEFINED\n         BO    ENDSJSCB            ASSUME LOAD   MODULE\n*        TM    DCBRECFM,DCBRECF    FIXED BLOCK FILE\n*        BNO   ENDSJSCB            ASSUME SOURCE MODULE\n         OI    TSOSW,SRCMOD\nENDSJSCB DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG,15,DEBREG,DCBREG\n         DROP  15,DEBREG,DCBREG\n         EJECT\nLOCDEBS  DS    0H     GET LIST OF DDNS\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         LA    1,DDNTAB\n         ST    1,LASTTAB\n         MVI   0(1),X'FF'\n         MVI   TEMPSW,X'00'\n         L     1,16                CVT\n         L     1,0(,1)             ADDR OF TCB POINTER\n         L     1,4(,1)             ADDR TCB\n         LR    TCBREG,1\n         USING TCB,TCBREG\n         USING DEBBASIC,DEBREG\n         L     TIOTREG,TCBTIO      TIOT\n         ST    TIOTREG,TIOTADDR\n         ST    TIOTREG,BEGTIOT\n         LA    TIOTREG,TIOTOFF(TIOTREG)\n         L     JSCBREG,TCBJSCB\n         USING IEZJSCB,JSCBREG\n         L     1,JSCBDBTB          DEB TAB\n         DROP  JSCBREG,TCBREG\n         L     0,4(,1)             LEGTH OF DEBQ\n         AR    0,1                 END OF DEBQ\n         ST    0,ENDDEBQ\n         LA    1,16(,1)            ADDR OF 1ST DEB IN Q\n         ST    1,DEBQADDR\n         TM    0(1),X'80'          INVALID ADDR\n         BO    NEWDEBQ\n         ICM   DEBREG,15,0(1)\n         BZ    ENDLDEB\n         ST    DEBREG,DEBADDR\n         B     LOCDCB\nNEWDEBQ  DS    0H\n         L     1,DEBQADDR\n         LA    1,4(,1)             NEXT DEB IN Q\n         C     1,ENDDEBQ           LAST DEB IN Q\n         BNL   CHKSPROC\n         ST    1,DEBQADDR\n         TM    0(1),X'80'          INVALID ADDR\n         BO    NEWDEBQ\n         ICM   DEBREG,15,0(1)\n         BZ    ENDLDEB\n         ST    DEBREG,DEBADDR\nLOCDCB   DS    0H\n         SLR   DCBREG,DCBREG\n         ICM   DCBREG,7,DEBDCBAD+1 ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?\n         BNO   NEWDEBQ             NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN    DATA SET OPEN?\n         BO    SETTIOT             YES...\n         MVC   WORKDDN,DCBDDNAM    SAVE DD NAME\n         B     SETTAB\nSETTIOT  DS    0H\n         LH    0,DCBTIOT           OFFSET IN TIOT  FOR THIS DCB\n         L     1,BEGTIOT           BEG OF TIOT\n         AR    1,0                 TIOT ADDR FOR THIS ENTRY\n         LR    TIOTREG,1\n         USING XIOT,TIOTREG\n         MVC   WORKDDN,XIOEDDNM    DDN\nSETTAB   DS    0H                  STORE DDN IN LIST\n         USING TABSECT,1\n         L     1,LASTTAB\n         MVC   DDNDSNAM,WORKDDN\n         ST    DEBREG,DDNDEB\n         ST    TIOTREG,DDNTIOT\n         DROP  1\n         LA    1,TABL(,1)\n         ST    1,LASTTAB\n         MVI   0(1),X'FF'\n         CLI   TEMPSW,X'00'\n         BNE   ENDLDEB\n         B     NEWDEBQ\nCHKSPROC DS    0H                  CHECK IF DEB FOR SYSPROC FOUND\n         LA    1,DDNTAB\n         USING TABSECT,1\nCOMPPROC DS    0H\n         CLI   0(1),X'FF'\n         BE    GETSPROC\n         CLC   DDNDSNAM,=CL8'SYSPROC'\n         BE    ENDLDEB\n         LA    1,TABL(1)\n         B     COMPPROC\n         DROP  1\nGETSPROC DS    0H                  ASSUME SYSPROC ALLOCATED\n         OPEN  (SYSPROC,INPUT)\n         TM    SYSPROC+48,X'10'\n         BZ    ENDLDEB\n         LA    DCBREG,SYSPROC\n         L     DEBREG,DCBDEBAD\n         MVI   TEMPSW,X'FF'\n         MVC   WORKDDN,=CL8'SYSPROC'\n         B     SETTIOT\nENDLDEB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\nLASTTAB  DS    F\nSYSPROC  DCB   DDNAME=SYSPROC,DSORG=PO,MACRF=(R)\nTEMPSW   DS    X\n         LTORG\n*        DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n         DROP  TIOTREG,DEBREG,DCBREG\n         TITLE '                          JOBLIB/SVCLIB/LINKLST SEARCH'\nCHKSLIB  DS    0H   CHECK IF MODULE IN JOBLIB OR STEPLIB\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         L     1,16                CVT\n         L     1,0(,1)             ADDR OF TCB POINTER\n         L     1,4(,1)             ADDR TCB\n         ST    1,TCBADDR\n         USING TCB,1\n         L     DCBREG,TCBJLB\n         DROP  1\n         MVC   BLDLNUM,=H'1'       1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LA    0,BLDLLIST\n         BLDL  (DCBREG),(0)\n         LTR   15,15\n         BNZ   CHKSVC\n         MVC   STEPCCAT,BLDLCCAT\n         OI    WORKSW,LOADSTEP\nCHKSVC   DS    0H\n         L     CVTREG,16\n         USING CVT,CVTREG\n         L     DCBREG,CVTSVDCB     DCB FOR SYS1.SVCLIB\n         DROP  CVTREG\n         LA    0,BLDLLIST\n         BLDL  (DCBREG),(0)\n         LTR   15,15\n         BNZ   CHKLINK\n         OI    WORKSW,LOADSVC\nCHKLINK  DS    0H\n         L     CVTREG,16\n         USING CVT,CVTREG\n***ISSUE BLDL ON LINKLIST\n         MVC   SAVELINK,CVTLLTA    LINK LIST\n         L     DCBREG,CVTLINK      ADDR LINKLIST DCB\n         DROP  CVTREG\n         L     1,548               --> ASCB    (PSAAOLD)\n         L     1,336(,1)           --> ASSB    (ASCBASSB)\n         L     1,236(,1)           --> DLCB    (ASSBDLCB)\n         L     DCBREG,12(,1)       --> LINK LIST\n         MVC   DLCBNAME,36(1)\n         XC    BLDLTTR,BLDLTTR\n         MVC   BLDLNUM,=H'1'       1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LA    0,BLDLLIST\n         BLDL  (DCBREG),(0)\n         LTR   15,15\n         BNZ   ENDSLIB\n         OI    WORKSW,LOADLINK\n         MVC   LINKCCAT,BLDLCCAT\nENDSLIB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG\n         TITLE '                                      LINK LIST SEARCH'\nSRCHLINK DS    0H   SEARCH LINK LIST FOR DSNAME\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         L     1,548               --> ASCB    (PSAAOLD)\n         L     1,336(,1)           --> ASSB    (ASCBASSB)\n         L     1,236(,1)           --> DLCB    (ASSBDLCB)\n         L     LLTREG,16(,1)       --> LINK LIST\n         MVC   DLCBNAME,36(1)\n         LA    LLTREG,LLTOFF(,LLTREG) FIRST ENTRY\n         USING LLTE,LLTREG\n         SR    1,1\n         IC    1,BLDLCCAT          CONCATENTATION NUMBER\n         LTR   1,1\n         BZ    GOTLLT\nNEXTLLT  DS    0H\n         LA    LLTREG,LLTLEN(LLTREG)  NEXT ENTRY\n         BCT   1,NEXTLLT           LOOP CONCAT NUMBER OF TIMES\nGOTLLT   DS    0H\n         MVC   WORKDSN,LLTDSN\nENDSLINK DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG\n         TITLE   '                                          LPA SEARCH'\n****\nSRCHLPA  DS    0H                  SEARCH FOR MODULE IN LPA\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         L     CVTREG,16\n         USING CVT,CVTREG\n         L     LPDEREG,CVTLPDIA    LPA DIRECTORY\n         DROP  CVTREG\n         USING LPDE,LPDEREG\nTSTLPA   DS    0H\n         TM    LPDEATTB,LPDELPDE   LPDE IDENTIFIER\n         BNO   ENDSLPA\n         CLI   LPDENAME,X'00'\n         BE    ENDSLPA\n         CLC   WORKPROG,LPDENAME\n         BE    GOTLPA\n         LA    LPDEREG,LPDELEN(,LPDEREG)\n         B     TSTLPA\nGOTLPA   DS    0H\n         CLC   LPDEMJP,=F'0'       IS THIS A MINOR LPDE?\n         BE    *+8\n         L     LPDEREG,LPDEMJP     GET MAJOR LPDE ADDRESS\n         OI    WORKSW,LOADLPA\n         UNPK  WORKCDDR(9),LPDEXTAD(5)\n         TR    WORKCDDR,TRTAB\nENDSLPA  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG,LPDEREG\n         DROP  LPDEREG\n         TITLE '                                  ALLOCATE CERMFILE DD'\n****\nALLOCOUT DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         LA    1,RBPOINT           R1 => A(REQ BLOCK )\n         DYNALLOC\n         L     13,4(,13)\n         L     14,12(,13)\n         LM    0,12,20(13)\n         BR    RET\n         DS    0F\nRBPOINT  DC    A(*+X'80000004')    ADR  REQ BLOCK PASSED IN R1\nRB       DS    0CL20               S99RB DSECT LOC BY RBPOINT\nRBLN     DC    AL1(RBEL)           LEN OF RB\nRBVERB   DC    AL1(S99VRBAL)       FUNC 01-07 01 FOR ALLOC\nRBFLAG1  DC    AL1(S99NOMNT)       FLAG BYTE-DONT CONSIDER OFFLINE UNIT\nRBFLAG2  DS    X                   2ND   FLAG BYTE\nRBERROR  DS    XL2                 ERROR REASON CODE\nRBINFO   DS    XL2                 INFO  REASON CODE\nRBTXTPP  DC    A(TXPOINTS)         LIST OF TEXT PTRS\n         DS    F                   RESERVED\nRBAUTHFL DS    XL4                 FLAGS FOR AUTH FUNCTIONS\nRBEL     EQU   *-RB\n**TEXT UNIT POINTERS\nTXPOINTS DS    0F                  S99TUPL DSECT TU PTR LIST\nDDNPOINT DC    A(DDNTEXT)\nSYSPOINT DC    A(SYSOTEXT)\nTERPOINT DC    A(TERMTEXT+X'80000000')\n*\nTXUNITS  DS    0F                  S99TUNIT DSECT TEXT UNITS\n**DDN TEXT UNIT\nDDNTEXT  DS    0F                  DDN TEXT UNIT\nDDNTXKEY DC    AL2(DALDDNAM)       KEY FOR DDN TEXT\nDDNTXNUM DC    XL2'0001'           NUM LENGTH + PARM ENTRIES\nDDNPLEN  DC    AL2(L'DDNTXPRM)     LENGTH OF PARM\nDDNTXPRM DC    CL8'CERMFILE'\n*\nSYSOTEXT DS    0F\nSYSOXKEY DC    AL2(DALSYSOU)       KEY FOR SYSOUT ALLOC\nSYSOXNUM DC    XL2'0001'           NUM LENGTH + PARM ENTRIES\nSYSOLEN  DC    AL2(L'SYSOXPRM)     LENGTH OF PARM\nSYSOXPRM DC    C'A'                MUST BE 1\n*\nTERMTEXT DS    0F   OMITTED\nTERMXKEY DC    AL2(DALTERM)        KEY FOR TERM=TS\nTERMXNUM DC    XL2'0000'           NUM LENGTH + PARM ENTRIES\nTEPROFEN DC    AL2(L'TERTXPRM)     LENGTH OF PARM\nTERTXPRM DS    0C                  NO PARM\n         DC    CL6' '              FOR PATCHING\n         LTORG\n*        DROP  LINKREG\n         TITLE '                                      TABLES && DSECTS'\nTRTAB    EQU   *-240,256\n         DC    C'0123456789ABCDEF'\nDDNTAB   DS    0F\n         DS    100CL16\nTABSECT  DSECT\nTABENTRY EQU   *\nDDNDSNAM DS    CL8\nDDNDEB   DS    F\nDDNTIOT  DS    F\nTABL     EQU   *-TABENTRY\n         LTORG\n         END                                                            COP00620\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMOD$": {"ttr": 4358, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1c\\x00X\\x01\\x00\\x04\\x8f\\x01\\x163_\\x17#\\x00\\x1e\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.28", "flags": 0, "createdate": "2000-02-17T00:00:00", "modifydate": "2016-11-30T17:23:58", "lines": 30, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//*        DD DISP=SHR,DSN=SBGOLOB.FILE249.MACLIB\n//*               (YOU MAY NEED THIS)     =>RECEIVE MEMBER=MACLIB\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT493.FILE249(WMOD)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB493249\n SETCODE AC(0)\n NAME    WMOD(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMODCICS": {"ttr": 4360, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x143_\\x01\\x143_\\x13@\\r\\x05\\r\\x05\\x00\\x00\\xc5\\xc9\\xd3\\xc5\\xc5\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-12-01T00:00:00", "modifydate": "2014-12-01T13:40:00", "lines": 3333, "newlines": 3333, "modlines": 0, "user": "EILEEN"}, "text": "//WMODCICS JOB (A006,SYCI,0002,0099,001),BARKOW,CLASS=S,MSGLEVEL=1,\n// MSGCLASS=A\n//**LOOK UP LOAD MODULES FROM CICS\n//**SEE ALSO TSO VERSON WMODTSO\n//DFH6ASM8 PROC SUFFIX=1$,\n//       ASMBLR=ASMA90,\n// INDEX='CICSTS.C51T1',WARN=11,\n//       OUTC=A,COPYLIB='CICSTS.C51T1.SDFHMAC',\n//       COPYLIB2='CICSTS.C51T1.SDFHSAMP',\n//       COPYLIB3='CICSTS.C51T1.SDFHMAC',\n//       REG=1024K,SYSPARM=6,\n//    PRM='NOPROLOG,SPIE,NOEPILOG,SP',\n//       WORK=SYSDA,DECK=DECK,OBJECT=NOOBJECT\n//TRN    EXEC PGM=DFHEAP&SUFFIX,REGION=&REG,\n//       PARM='&PRM'\n//STEPLIB DD DSN=&INDEX..SDFHLOAD,DISP=SHR\n//SYSPRINT DD SYSOUT=&OUTC\n//SYSPUNCH DD DSN=&&SYSCIN,\n//       DISP=(,PASS),UNIT=&WORK,\n//       DCB=BLKSIZE=400,\n//       SPACE=(400,(400,100))\n//ASM    EXEC PGM=&ASMBLR,\n//       REGION=&REG,\n// PARM=('&DECK,&OBJECT,LIST,ALIGN,SYSPARM(&SYSPARM),USING(WARN(&WARN))X\n//             ,COMPAT(SYSLIST)')\n//SYSLIB DD DSN=&INDEX..SDFHMAC,DISP=SHR\n//  DD DSN=SYS1.MACLIB,DISP=SHR\n//  DD DSN=SYS1.MODGEN,DISP=SHR,UNIT=SYSDA\n//       DD DSN=&COPYLIB,DISP=SHR\n//       DD DSN=&COPYLIB2,DISP=SHR\n//       DD DSN=&COPYLIB3,DISP=SHR\n//SYSUT1 DD UNIT=&WORK,SPACE=(1700,(400,400))\n//SYSUT2 DD UNIT=&WORK,SPACE=(1700,(400,400))\n//SYSUT3 DD UNIT=&WORK,SPACE=(1700,(400,400))\n//SYSLIN   DD  DUMMY\n//SYSPUNCH DD DSN=&&LOADSET,\n//       UNIT=&WORK,DISP=(,PASS),\n//  DCB=(LRECL=80,BLKSIZE=400,RECFM=FB),\n//       SPACE=(400,(100,100,1))\n//SYSPRINT DD SYSOUT=&OUTC\n//SYSIN    DD DSN=&&SYSCIN,DISP=(OLD,DELETE)\n//  PEND\n//DFH6LNK6 PROC INDEX='CICSTS.C51T1',\n//       LNKLIB='XCICS.CICS650.TEST',OUTC=A,\n//       LNKLOAD='CICSTS.C51T1.SDFHLOAD',\n//       COPYLIB='CICSTS.C51T1.SDFHLOAD',\n//       COPYLIB2='CICSTS.C51T1.SDFHLOAD',\n//       COPYLIB3='CICSTS.C51T1.SDFHLOAD',\n//       REG=1024K,MOD=,LNKPRM=,\n//       AMODE=31,RMODE=ANY,\n//       WORK=SYSDA\n//LKED   EXEC PGM=IEWL,REGION=&REG,\n//  PARM=('XREF,MAP,DCBS,AMODE(&AMODE),RMODE(&RMODE),&LNKPRM'),\n//  COND=(4,LT)\n//SYSLIB DD DSN=&INDEX..SDFHLOAD,DISP=SHR\n//       DD DSN=&LNKLOAD,DISP=SHR\n//       DD DSN=&COPYLIB,DISP=SHR\n//       DD DSN=&COPYLIB2,DISP=SHR\n//       DD DSN=&COPYLIB3,DISP=SHR\n//SYSLMOD DD DSN=&LNKLIB(&MOD),DISP=SHR,DCB=&LNKLIB\n//SYSUT1  DD UNIT=&WORK,DCB=BLKSIZE=1024,\n//       SPACE=(1024,(200,20))\n//SYSPRINT DD SYSOUT=&OUTC\n//SYSLIN DD DSN=&INDEX..SDFHMAC(DFHEILIA),DISP=SHR,DCB=BLKSIZE=400\n//       DD DSN=&&LOADSET,DISP=(OLD,DELETE),DCB=BLKSIZE=400\n//       DD DDNAME=INPUT\n//  PEND\n//STP1  EXEC DFH6ASM6,SYSPARM=53\n//TRN.SYSIN   DD  *\n*ASM XOPTS(CICS         NOPROLOG   SPIE NOEPILOG)\n***FIND LOAD MODULES IN DFHRPL, STEPLIB, LPA, LINKLIST\n***SEE ALSO BATCH VERSION WMODTSO\n***USAGE:  WMOD MODNAME\n***\n***REQUIREMENTS:\n***\n*2.  PCT ENTRY:  TRANID=WMOD TASKDATALOC=BELOW TASKDATAKEY=CICS\n***\n*3.  PPT ENTRY:  PROGRAM=WMOD DATALOCATION=BELOW EXECKEY=CICS\n********************************************************************\n      MACRO\n&NAME  SBA  &ROW,&COL,&SKIP=NO,&MDT=NO,&PROT=NO,&HI=NO,&DSPD=MO,       X\n               &DNSPD=YES,&CURSOR=NO,&NNN=NO,&NUM=NO\n.* DSPD= DISPLAY/SELECTOR-PEN DETECTABLE\n.* DNSPD=DISPLAY/NOT SELECTOR PEN DETECTABLE\n.* NNN  =NONDISPLAY,NONPRINT,NONDETECTABLE\n        LCLC &TAB1(24),&TAB2(8),&Z,&T,&SBA1,&SBA2,&SBP2\n        LCLA &R,&C,&N,&S,&CLM,&PTR2\n     AIF  ('&COL' GT '80').ERR\n&T  SETC   T'&ROW\n     AIF  ('&T'     NE 'N').ERR\n&T  SETC   T'&COL\n     AIF  ('&T'     NE 'N').ERR\n.***EACH 2 BYTE ENTRY REPRESENTS FIRST BYTE SBA FOR COL 1-8 AND\n.***73-80  FOLLOWED BY TABLE 2 POINTER\n&TAB1(1) SETC '40014002400340044005400640074008C101C102'\n&TAB1(2) SETC 'C103C104C105C106C107C108C201C202C203C204'\n&TAB1(3) SETC 'C205C206C207C208C301C302C303C304C305C306'\n&TAB1(4) SETC 'C307C308C401C402C403C404C405C406C407C408'\n&TAB1(5) SETC 'C501C502C503C504C505C506C507C508C601C602'\n&TAB1(6) SETC 'C603C604C605C606C607C608C701C702C703C704'\n&TAB1(7) SETC 'C705C706C707C708C801C802C803C804C805C806'\n&TAB1(8) SETC 'C807C808C901C902C903C904C905C906C907C908'\n&TAB1(9) SETC '4A014A024A034A044A054A064A074A084B014B02'\n&TAB1(10) SETC '4B034B044B054B064B074B084C014C024C034C04'\n&TAB1(11) SETC '4C054C064C074C084D014D024D034D044D054D06'\n&TAB1(12) SETC '4D074D084E014E024E034E044E054E064E074E08'\n&TAB1(13) SETC '4F014F024F034F044F054F064F074F0850015002'\n&TAB1(14) SETC '500350045005500650075008D101D102D103D104'\n&TAB1(15) SETC 'D105D106D107D108D201D202D203D204D205D206'\n&TAB1(16) SETC 'D207D208D301D302D303D304D305D306D307D308'\n&TAB1(17) SETC 'D401D402D403D404D405D406D407D408D501D502'\n&TAB1(18) SETC 'D503D504D505D506D507D508D601D602D603D604'\n&TAB1(19) SETC 'D605D606D607D608D701D702D703D704D705D706'\n&TAB1(20) SETC 'D707D708D801D802D803D804D805D806D807D808'\n&TAB1(21) SETC 'D901D902D903D904D905D906D907D9085A015A02'\n&TAB1(22) SETC '5A035A045A055A065A075A085B015B025B035B04'\n&TAB1(23) SETC '5B055B065B075B085C015C025C035C045C055C06'\n&TAB1(24) SETC '5C075C085D015D025D035D045D055D065D075D08'\n.***EACH 8 BYTE ENTRY REPRESENTS 2ND   BYTE SBA FOR COL 1-8 THRU\n.**73-80. EACH ROW IS POINTED 2 BY TABLE POINTER IN TABLE 1.\n&TAB2(1) SETC '40C850D860E8F0F8'  COL 1-73 (SKIP 8)\n&TAB2(2) SETC 'C1C9D1D961E9F1F9'  COL 2-74\n&TAB2(3) SETC 'C24AD25AE26AF27A'  COL 3-75\n&TAB2(4) SETC 'C34BD35BE36BF37B'   COL 4-76\n&TAB2(5) SETC 'C44CD45CE46CF47C'   COL 5-77\n&TAB2(6) SETC 'C54DD55DE56DF57D'    COL 6-78\n&TAB2(7) SETC 'C64ED65EE66EF67E'    COL 7-79\n&TAB2(8) SETC 'C74FD75FE76FF77F'   COL 8-80\n        AGO .CALC\n.CALC   ANOP\n     AIF  ('&COL' LE '8').SET1\n&S   SETA  &COL-1\n&CLM  SETA  &S+1\n&C   SETA &CLM/8\n&C    SETA (&C)*4+1\n&S    SETA &C+2\n       AGO  .DOSET\n.SET1  ANOP\n&C     SETA   1\n&S     SETA   3\n       AGO  .DOSET\n.DOSET   ANOP\n      AIF ('&COL' NE '80').NOT80\n&C     SETA  &C-4\n&S     SETA  &S-4\n.NOT80  ANOP\n&SBA1  SETC '&TAB1(&ROW)'(&C,2)\n&SBP2  SETC '&TAB1(&ROW)'(&S,2)\n&C   SETA  &SBP2\n&CLM   SETA  &COL\n      AIF  (&CLM LE 8).SET1R\n      AIF  (&CLM EQ 80).SET80R\n&R   SETA   &CLM/8\n&N   SETA   &R*8\n&R   SETA   &CLM-&N\n      AGO   .SETSBA2\n.SET1R  ANOP\n&R    SETA   &COL\n     AGO  .SETSBA2\n.SET80R ANOP\n&R    SETA   8\n     AGO  .SETSBA2\n.SETSBA2 ANOP\n&C    SETA  (&C*2)-1\n.NOT0  ANOP\n       AIF ('&R' GT '0').DOT0\n&R     SETA 1\n.DOT0   ANOP\n&SBA2  SETC  '&TAB2(&R)'(&C,2)\n       DC   X'11&SBA1.&SBA2.1D'   SET SBA/SBA ADDR/START FIELD\n         AGO  .OUT\n.ERR   ANOP\n      MNOTE 12,'INVALID PARAMETER'\n       AGO   .OVER\n.OUT   ANOP\n.*  SET ATTRIBUTE BYTE\n      LCLC  &TAB3(32),&ATTR2,&ATTR\n      LCLB  &B0,&B1,&B2,&B3,&B4,&B5,&B6,&B7\n       AIF ('&SKIP' NE 'YES').NOSKIP\n&B2    SETB  1\n&B3    SETB  1\n       AGO  .SELHI\n.NOSKIP  ANOP\n       AIF ('&PROT' NE 'YES').NOPROT\n&B2    SETB  1\n       AGO  .SELHI\n.NOPROT ANOP\n       AIF ('&NUM' NE 'YES').NONUM\n&B3    SETB  1\n       AGO  .SELHI\n.NONUM  ANOP\n       AGO  .SELHI\n.SELHI   ANOP\n       AIF ('&HI' NE 'YES').NOHI\n&B4     SETB  1\n&B5     SETB  0\n        AGO   .SELMDT\n.NOHI   ANOP\n       AIF ('&NNN' NE 'YES').NONNN\n&B4     SETB  1\n&B5     SETB  1\n        AGO   .SELMDT\n.NONNN  ANOP\n       AIF ('&DSPD' NE 'YES').NODSPD\n&B4    SETB  0\n&B5    SETB  1\n       AGO   .SELMDT\n.NODSPD ANOP\n       AIF ('&DNSPD' NE 'YES').NODNSPD\n&B4     SETB  0\n&B5     SETB  0\n        AGO   .SELMDT\n.NODNSPD ANOP\n&B4      SETB  0\n&B5      SETB  1\n        AGO  .SELMDT\n.SELMDT  ANOP\n        AIF  ('&MDT' NE 'YES').NOMDT\n&B7     SETB   1\n.NOMDT   ANOP\n&ATTR2 SETC '&B2.&B3.&B4.&B5.&B6.&B7'\n.*PROT/AN/HI/SPD/NPD/MDT\n&TAB3(1)   SETC '01000000'  U.....\n&TAB3(2)   SETC '11000001'  U....Y\n&TAB3(3)   SETC '11000100'  U..Y..\n&TAB3(4)   SETC '11000101'  U..Y.Y\n&TAB3(5)   SETC '11001000'  U.HY..\n&TAB3(6)   SETC '11001001'  U.HY.Y\n&TAB3(7)   SETC '01001100'  U...Y.\n&TAB3(8)   SETC '01001101'  U...YY\n&TAB3(9)   SETC '01010000'  UN....\n&TAB3(10)  SETC '11010001'  UN...Y\n&TAB3(11)  SETC '11010100'  UN.Y..\n&TAB3(12)  SETC '11010101'  UN.Y.Y\n&TAB3(13)  SETC '11011000'  UNHY..\n&TAB3(14)  SETC '11011001'  UNHY.Y\n&TAB3(15)  SETC '01011100'  UN..Y.\n&TAB3(16)  SETC '01011101'  UN..YY\n&TAB3(17)  SETC '01100000'  P.....\n&TAB3(18)  SETC '01100001'  P....Y\n&TAB3(19)  SETC '11100100'  P..Y..\n&TAB3(20)  SETC '11100101'  P..Y.Y\n&TAB3(21)  SETC '11101000'  P.HY..\n&TAB3(22)  SETC '11101001'  P.HY.Y\n&TAB3(23)  SETC '01101100'  P...Y.\n&TAB3(24)  SETC '01101101'  P...YY\n&TAB3(25)  SETC '11110000'  PS....\n&TAB3(26)  SETC '11110001'  PS...Y\n&TAB3(27)  SETC '11110100'  PS.Y..\n&TAB3(28)  SETC '11110101'  PS.Y.Y\n&TAB3(29)  SETC '11111000'  PSHY..\n&TAB3(30)  SETC '11111001'  PSHY.Y\n&TAB3(31)  SETC '01111100'  PS..Y.\n&TAB3(32)  SETC '01111101'  PS..YY\n.* GET VALUE OF BITS 0 AND 1\n&ATTR SETC '&TAB3(1)'\n&N   SETA  N'&TAB3\n&R   SETA  1\n.GETATTR  ANOP\n&T   SETC  '&TAB3(&R)'(3,6)\n      AIF  ('&T' EQ '&ATTR2').GOTATTR\n&R   SETA   &R+1\n      AIF (&R GT &N).PUTATTR\n     AGO  .GETATTR\n.GOTATTR  ANOP\n&ATTR SETC  '&TAB3(&R)'\n       AGO   .PUTATTR\n.PUTATTR ANOP\n     DC  B'&ATTR'  ATTRIBUTE\n       AIF ('&CURSOR' NE 'YES').NOCURS\n        DC   X'13'   INSERT CURSOR\n         AGO  .OVER\n.NOCURS   ANOP\n         AGO  .OVER\n.OVER    ANOP\n        MEND\n       MACRO\n        SETM  &I\n        AIF ('&I' EQ 'OFF').OFF\n        AIF ('&I' EQ 'ON').ON\n         MEXIT\n.OFF     ANOP\n         LA  1,*+10\n         N    1,=B'01111111111111111111111111111111'\n         BSM  0,1\n         MEXIT\n.ON      ANOP\n         LA  1,*+10\n         O    1,=B'10000000000000000000000000000000'\n         BSM  0,1\n         MEXIT\n         MEND\n          MACRO\n&NAME  CONVCODE &IN=0(3),&LEN=0(2),&OUT=0(1)\n&NAME.CONV DS  0H                  CONVERT TO DISPLAY\n         STM   1,3,&NAME.SAVE\n         LA    1,&OUT            ADDR TO MOVE TO\n         LA    3,&IN             FIELD TO CONVERT\n         LA    2,&LEN\n&NAME.GO  DS   0H\n         IC    0,0(3)            LOAD CHAR\n         SRL   0,4                 SHIFT OVER 4 BITS\n         STC   0,&NAME.CHAR        STORE IT\n         NI  &NAME.CHAR,X'0F'     ZERO OUT HI 4 BITS\n         TR   &NAME.CHAR,&NAME.TAB TRANSLATE TO DEC\n         MVC   0(1,1),&NAME.CHAR  MOVE TO OUTPUT\n         MVC  &NAME.CHAR,0(3)     MOVE FIELD\n         NI   &NAME.CHAR,X'0F'    ZERO OUT HI 4 BITS\n         TR  &NAME.CHAR,&NAME.TAB\n         MVC   1(1,1),&NAME.CHAR  MOVE TO TD ...MSGRET\n         LA    3,1(3)\n         LA    1,2(1)\n         BCT   2,&NAME.GO         NEXT BYTE IF ANY\n          LM   1,3,&NAME.SAVE\n           B    &NAME.END\n&NAME.SAVE DS  3F\n&NAME.TAB DC   X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\n&NAME.CHAR DS  C\n&NAME.END  DS   0H\n          MEND\n     MACRO\n&NAME   SCANARG &ARG,&ADDR=TIOAFUNC,&LEN=(0)\n.* &ARG IS LITERAL TO BE SEARCHED FOR IN DATA WHOSE ADDR IS IN &ADDR\n.* AND LENGTH IN &LEN. IF SEARCH IS SUCCESSFUL, ADDRESS OF FOUND DATA\n.* WILL BE IN R1\n        LCLC  &SARG,&T,&LC\n        LCLA  &AL,&L\n&AL     SETA  K'&ARG-2\n&SARG   SETC  '&ARG'(2,&AL)\n        AIF  ('&ADDR'(1,1)  NE '(').AD\n         LA   1,0&ADDR\n          AGO  .GD\n.AD      ANOP\n        LA    1,&ADDR\n.GD     ANOP\n        AIF  ('&LEN'  EQ '').AR LENGTH IN R0\n        AIF  ('&LEN'(1,1)  EQ '(').LR\n&T     SETC  T'&LEN\n        AIF  ('&T'     EQ 'H').LH\n        AIF  (K'&LEN LT 4).LA\n.LA     LA    0,&LEN\n        AGO   .AR\n.LR     ANOP    PUT LENGTH  IN R0\n&L       SETA  K'&LEN\n&LC       SETC '&LEN(1,&L-2)'\n         LR   0,&LC\n        AGO   .AR\n.LH     ANOP\n        LH     0,&LEN\n        AGO   .AR\n.AR      ANOP\n        AR    0,1          END OF FIELD\n&NAME.ARGS DS  0H\n        CLC   0(&AL,1),=CL(&AL)'&SARG'\n        BE    &NAME.ARGF\n        LA    1,1(1)\n        CR    1,0\n        BL    &NAME.ARGS\n        SR   1,1\n        B   &NAME.ARGF\n&NAME.ARGF  DS  0H\n        LTR  1,1\n        AGO    .MEND\n.MEND   ANOP\n        MEND\n         AMODE 24\n         RMODE 24\nBASE     EQU   11                                                       COP00220\nLINKREG   EQU  8\nLINKREG2  EQU  7\nRET      EQU  10\nRET2     EQU  9\nTCTTEAR  EQU   9                                                        COP00230\nTIOABAR  EQU   7                                                        COP00240\nTCSYSBAR EQU   1\nEIBREG    EQU  2\nDATAREG   EQU  6\nPRVREG   EQU   5    PRVMOD LIST\nCVTREG    EQU  1\nLPDEREG   EQU  2\nDCBREG    EQU  2\nLENREG     EQU  3\nDEBREG    EQU  3\nLLTREG    EQU  3\nTIOTREG   EQU  4\nARLREG    EQU  4\nSITREG    EQU  4\nINREG     EQU  4\nCSAREG    EQU  13\nJSCBREG   EQU  15\nJFCBREG   EQU  15\nDCTCBAR   EQU  15\nTCBREG    EQU  5\nOPFLREG   EQU  5\n         PRINT OFF,NOGEN\n        DCBD  DSORG=PO\nDCBLEN  EQU  *-IHADCB\n         PRINT OFF,NOGEN\nARL    IHAARL  DSECT=YES,PREFIX=ARL,DESCR=YES\nARLENGTH EQU  *-ARL\nTIOT     DSECT\n        IEFTIOT1\nTIOTOFF   EQU  TIOENTRY-TIOT\nXIOT      DSECT\n     ORG XIOT+TIOELNGH-TIOENTRY\nXIOELNGH  DS   XL(L'TIOELNGH)\n     ORG  XIOT+TIOEDDNM-TIOENTRY\nXIOEDDNM  DS  CL(L'TIOEDDNM)\n     ORG  XIOT+TIOEJFCB-TIOENTRY\nXIOEJFCB  DS   XL(L'TIOEJFCB)\nJFCB     DSECT\n         IEFJFCBN LIST=YES\n*EBBASIC  IGGDEBD\n          PRINT ON,GEN\n          IEZDEB\n          PRINT OFF,NOGEN\n          IKJTCB  LIST=YES,DSECT=YES\n          IEZJSCB\nARAD    DSECT\nARALEN   DS   H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4\n***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)\n         DS   XL2  RESERVED\nARAJFCB  DS    CL176   JFCB\nARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL\n        CVT   DSECT=YES,LIST=YES\n          IHALPDE\nLPDELEN    EQU   *-LPDE\nLLTE      DSECT\n          DS   X\nLLTDSN    DS  CL44\nLLTLEN    EQU  *-LLTE\nLLTOFF    EQU  8    OFFSET TO FIRST LLTE\n         EJECT\n*        PRINT ON,GEN\n         IGWSMDE\n         EJECT\n* DYNAMIC OPEN/CLOSE REQUEST FORMAT\n* DYNAMIC ALLOCATION DSECTS\n         IEFZB4D0\n         IEFZB4D2\nRBLEN  EQU  (S99RBEND-S99RB)\n         EJECT\n          COPY DFHDCTDS\n*        PRINT ON,GEN\n         COPY  DFHCSADS                                                 COP00070\n         DFHAFCD TYPE=DSECT\n         DFHTCA  CICSYST=YES      SYSTEM T C A   AND USER EB MOD\n         COPY  DFHTCTTE                                                 COP00100\n         DFHSIT TYPE=DSECT\nPRVLIST   DSECT  PRVMOD LIST ..SITPRVMA\nPRVLEN    DS   F\nPRVNUM    DS   F\nPRVENTRY  DS   CL8    FOR EACH ENTRY\n         COPY  DFHTIOA                                                  COP00110\nBUFFER   DS   80F\n         ORG   TIOADBA                                                  COP00130\nINITINP  DS    0F                                                       COP00140\nTRANSID  DS    CL4                                                      COP00150\nBLNK     DS    C                                                        COP00160\nPROGRAM  DS    CL8                                                      COP00170\n          DFHEISTG\n          PRINT ON,GEN\nSAVELINK DS   18F\nSAVEREG2 DS   18F\nSAVEMAC  DS   18F\nMVSSAVE  DS   18F\nRTNSAVE  DS   18F\nSAVER13  DS    F\nTCAADDR  DS    F\nCSAADDR  DS    F\nTCTADDR  DS    F\nTIOADDR  DS    F\nEIBADDR  DS    F\nDATAADDR DS    F\nRPLADDR  DS    F\nTCBADDR   DS   F\nTIOTADDR  DS   F\nDEBADDR   DS   F\nDCBADDR   DS   F\nRETADDR    DS   F\nRECADDR    DS   F\nLASTSBA    DS  F\nCURVLST    DS  F\nCURPLST    DS  F\nCURNUM     DS  H\nLPADSNSA   DS  F\nLPADSNTL  EQU 45  LENGTH OF EACH ENTRY\nLPADSNAL    EQU LPADSNTL*40       40 ENTRIES 45 BYTES LONG\nLASTIN    DS   F\nLASTLPA   DS   F\nENDLPA    DS   F\nLASTCONA  DS   F\nNEXTCONA  DS   F\nENDOFLPA  DS   F\nENDORECA  DS   F\nLASTBLOC  DS   F\nENDBLOCK DS   F\nREADAREA DS   F\nMSL      DS    H\nLEN      DS    H\nLRECL    DS    H\nBLKSIZE  DS    H\nWORKPROG  DS   CL8\nWORKDSN   DS   CL44\nVTAMDSN   DS   CL44\nLPADSN   DS   CL44\nWORKDDN   DS   CL8\nWORKQUE   DS   CL4\nWORKDQE   DS   CL8\nSYSNAME    DS   CL4\nLPACONST   DS   CL20\nSYSPARM    DS   CL2\nSYSCLONE   DS   CL2\nWORKADDR   DS   F\nDFHADDR    DS   F\nWORKCDDR   DS   CL8\nWORKALIS   DS   CL8\nERRSW     DS   X\nRELSW     DS   X\nWORKSW    DS   X\nNOLPA     EQU  X'01'\nNOPPT     EQU  X'02'\nFOUND     EQU  X'04'\nLOADSVC   EQU  X'08'\nLOADLPA   EQU  X'10'\nLOADSTEP  EQU  X'20'\nLOADLINK  EQU  X'40'\nLOADRPL   EQU  X'80'\nWORKSW2   DS    X\nLOADVLST  EQU  X'01'\nLOADVLIB  EQU  X'02'\nLOADPROC  EQU  X'04'\nLOADLPAN  EQU  X'10'\nLOADLPAE  EQU  X'20'\n**********************\nWORKSW3  DS  X\nREADSPRM EQU  X'01'\nREADZPRM EQU  X'02'\nDIDLCONS EQU  X'04'\nDIDSNAME EQU  X'08'\nDIDPLST2 EQU  X'10'\nSAVESW   DS   X\nWORKSW4   DS  X\nINVT      EQU X'01'\nINVL      EQU X'02'\n*****************\n**********************\nOUTLINE  DS    0C\nOUTPROG   DS   CL8\nOUTPUNC   DS  CL2\nOUTCON   DS   0C\n***       DC  X'11C2601DC0'  ROW3 COL1\n         SBA  3,1\n          ORG  OUTCON\nOUTSBA   DS  XL(SBAL)\n          ORG\nPROGCON  DS  CL8\nLOADCON  DC C' IS IN DDN   '\nDDNCON   DS  CL8\n         DS   C\nDSNCON   DS  CL42\n         ORG DSNCON\nDSNCONAT  DS  CL4\nDSNCDDR   DS  CL8\nDSNCONAL  DS  CL11\nDSNALIS   DS  CL8\nDSNCONAP  DS  C\n          ORG\nATCONL    EQU  *-DSNCONAT\nLPACON    DC C' NOT LOADED FROM LPA'\nOUTCONL   EQU  *-OUTCON\nWARLAREA  DS  CL(ARLENGTH)\nWXJFCB   DS    0F                                                       JFC00600\n         DC   X'13'           FOR LAST ENTRY                            JFC00610\nWXADD    DC   AL3(WARLAREA)                                             JFC00620\nWDCB     DS CL(DCBLEN)                                                       JFC\nWDJLIST  RDJFCB  (2),MF=L\n         ORG   *-3\nWDJDCBA  EQU  *   ADDR OF DCB\n         DS   AL3   PUT DCB ADDR HERE\n         ORG\nVDNTEXT  DS  CL18\nVSNTEXT  DS  CL18\nVSPTEXT  DS  CL18\nVSW      DS   X\nNUMVLIBS DS   H\nNUMVLIBN EQU  10\nVTAMLIBS DS  (NUMVLIBN)CL50 UP TO 10  DSNAMES\n          ORG  VTAMLIBS       SET UP DYNALLOC DSN TU\nVLEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nVLUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nVLLEN    DC    AL2(44)   LENGTH OF PARM\nVLFF     EQU   *-VLEY     OFFSET TO DSNAME\nVLARM    DC    CL44'SYS1.VTAMLST'   DSNAME\n          ORG\nNUMVLSTS DS   H\nNUMVLSTN   EQU 10\n         DS  0F\nVTAMLSTS DS  (NUMVLSTN)CL50 UP TO 8   DSNAMES\n          ORG  VTAMLSTS       SET UP DYNALLOC DSN TU\nVKEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nVNUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nVPLEN    DC    AL2(44)   LENGTH OF PARM\nVOFF     EQU   *-VKEY     OFFSET TO DSNAME\nVPARM    DC    CL44'SYS1.VTAMLIB'   DSNAME\n          ORG\nNUMLPAS  DS   H\nNUMLPAN  EQU  25\nLPALIBS DS  (NUMLPAN)CL50 UP TO 25  DSNAMES  PER LPALST ENTRY\n          ORG  LPALIBS       SET UP DYNALLOC DSN TU\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nLPAOFF   EQU  *-LPALIBS    OFFSET TO DSNAME\nLLARM    DC    CL44'SYS1.LPALIB'   DSNAME\n          ORG\nLPAHLEN   EQU  *-LPALIBS\n          ORG  NUMVLIBS\nNUMPLIBS DS   H\nNUMPLIBN EQU  25\nPROCLIBS DS  (NUMPLIBN)CL50 UP TO 28  DSNAMES\n          ORG  PROCLIBS       SET UP DYNALLOC DSN TU\nPLEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nPLUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nPLLEN    DC    AL2(44)   LENGTH OF PARM\nPOFF     EQU  *-PROCLIBS   OFFSET TO DSNAME\nPLARM    DC    CL44'SYS1.PROCLIB'   DSNAME\n*LARM    DC    CL44'SYS1.ZOS19.PROCLIB'   DSNAME\n          ORG\nBLDLLIST  DS   0H\nBLDLNUM   DS   H   NUMBER OF ENTRIES\nBLDLLEN  DS   H   LEN OF EACH ENTRY\nBLDENTRY  EQU  *\nBLDLNAME  DS  CL8\nBLDLTTR   DS  XL3\nBLDLCCAT  DS  X   CONCAT NUMBER RETURNED BY BLDL\nBLDLZ     DS  X   WHERE ENTRY FOUND\nBLDLELEN  EQU  *-BLDENTRY  LEN OF EACH ENTRY\n          DS   0F\nDSERVOUT  DS   F\nDSERVLEN  DS   F\nNUMMEMBS  DS  F\nCURMEMBS  DS  F\nLOADMEMB  DS  CL8\nIEASYS   DS  CL8\nLPALST   DS  CL8\nSTPCATNO DS   X\nRPLCATNO DS   X\nVTCATNO  DS   X\nVLCATNO  DS   X\n***********************\n***********************\n         DFHEIEND\n         PRINT ON,GEN\n*********************************************************************** COP00210\n*********************************************************************** COP00250\n* NAME: WMOD                                                            COP00290\n* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310\n*                                                                       COP00420\n**********************************************************************  COP00430\nWMOD     DFHEIENT CODEREG=BASE,DATAREG=DATAREG,EIBREG=EIBREG            COP00440\nBEGIN    DS    0H\n         ST    EIBREG,EIBADDR       TCA ADDR\n         ST    DATAREG,DATAADDR     TCA ADDR\n         ST    13,SAVER13\n***       L     13,DFHEIRS1          CSA\n          DFHCSAD TYPE=LOCATE,REG=13\n          ST    13,CSAADDR\n        USING DFHCSADS,13\n          MVC  RELSW,CSACIREL\n           CLI RELSW,X'32'\n           BL   SKIPSETM\n          SETM  ON\nSKIPSETM  DS   0H\n*         L    TCACBAR,CSACDTA          TCA USER\n         DROP  13\n*        ST    TCACBAR,TCAADDR           TCA ADDR\n*        L     TCTTEAR,TCAFCAAA     LOAD TCT BASE                       COP00470\n*        ST    TCTTEAR,TCTADDR\n*        L     TIOABAR,TCTTEDA      LOAD TIOA BASE                      COP00480\n******************************************************\n         MVC   MSL,=H'100'\n EXEC CICS GETMAIN SET(TIOABAR) INITIMG(X'00') NOSUSPEND               *\n               LENGTH(MSL)\n  EXEC CICS IGNORE CONDITION LENGERR\n EXEC CICS RECEIVE INTO(TIOADBA) LENGTH(TIOATDL) MAXLENGTH(MSL)\n******************************************************\n         ST    TIOABAR,TIOADDR\n         XR    5,5                 CLEAR REG 5                          COP00490\n         MVC    WORKPROG,PROGRAM\n         L     15,=A(TRTAB)        TRANSLATE 00 TO BLANK\n         TR  WORKPROG,0(15)\n          SETM   OFF\n          MVC  LASTSBA,=A(SBATAB)\n*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA\n         L   LINKREG,=A(CHKSLIB)\n        BALR  RET,LINKREG\n         TM   WORKSW,LOADSTEP\n         BO   DOSTEP       IS IN STEPLIB/JOBLIB\n          B   TESTSVC\nTESTSVC   DS   0H\n         TM   WORKSW,LOADSVC\n         BNO  TESTLINK       CHECK LINKLIST\n         MVC WORKDSN,SVCDSN\n         MVC WORKDDN,=CL8'SVCLIB'\n         MVC  RETADDR,=A(TESTLINK)\n         B    PUTOUT\nDOSTEP   DS   0H\n         XC   RETADDR,RETADDR\n         XC   WORKDSN,WORKDSN\n         XC   WORKDDN,WORKDDN\n         L    LINKREG,=A(RDJFCB)\n         ICM  LINKREG,8,=X'FF'   SIGNAL ROUTINE\n        BALR  RET,LINKREG\n         MVC   WORKDDN,=CL8'STEPLIB'\n         CLI   WORKDSN,X'00'\n         BE TESTSVC\n          MVC  RETADDR,=A(TESTSVC)\n         B     PUTOUT    IF NOT STEPLIB SEARCH LINKLIST\nTESTLINK  DS   0H\n           TM  WORKSW,LOADLINK\n          BO   DOLINK\n          B   TESTLPA\nDOLINK   DS    0H\n          XC   WORKDDN,WORKDDN\n          XC   WORKDSN,WORKDSN\n         L    LINKREG,=A(SRCHLINK)\n        BALR  RET,LINKREG\n         MVC   WORKDDN,=CL8'LINKLIB'\n          MVC  RETADDR,=A(TESTLPA)\n          B    PUTOUT\nTESTLPA    DS   0H   CHECK IF MODULE IN LPA\n          L    LINKREG,=A(SRCHSIT)  SEE IF LPA=YES OR PRVMOD\n          BALR RET,LINKREG\n***        B    DOLPA\nDOLPA      DS   0H\n          XC   WORKADDR,WORKADDR\n          MVC  WORKDDN,=CL8'LPALIB'\n          L    LINKREG,=A(SRCHLPA)\n          BALR RET,LINKREG\n          TM  WORKSW,LOADLPA\n           BNO TESTVTAM       TEST VTAMLIST AND VTAMLIB\n*         MVC RETADDR,=A(TESTVTAM)\n          MVC RETADDR,=A(NAMELPA)\n          MVI  WORKDSN,X'00'\n          B   PUTOUT\nNAMELPA   DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHPLIB)  SEARCH PARMLIB FOR LPA NAMES\n          BALR RET,LINKREG           SEARCH LPA DSNS FOR MEMBER\n          TM  WORKSW2,LOADLPAN\n           BNO TESTVTAM       TEST VTAMLIST AND VTAMLIB\n          MVC RETADDR,=A(TESTVTAM)\n          B   PUTOUT\nTESTVTAM DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHNET) VTAM DSNS FROM SYS1.PROCLIB(NET)\n          BALR RET,LINKREG\n           B    DOVTAM\nDOVTAM     DS   0H\n          MVC  WORKDDN,=CL8'VTAMLST'\n          MVC RETADDR,=A(DOVLIB)\n          TM  WORKSW4,INVT\n          BO  PUTOUT\n          B   DOVLIB\nDOVLIB    DS   0H\n          MVC  WORKDDN,=CL8'VTAMLIB'\n***       MVC RETADDR,=A(TESTRPL)\n          MVC RETADDR,=A(TESTPROC)\n          MVC WORKDSN,VTAMDSN\n          TM   WORKSW4,INVL\n          BO  PUTOUT\n*         B   TESTRPL\n          B   TESTPROC\nTESTPROC  DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHJES2) PROCLIB DSNS FROM JES2 PROC\n          BALR RET,LINKREG\n          MVC  WORKDDN,=CL8'SYSPROC'\n          MVC RETADDR,=A(TESTRPL)\n          TM  WORKSW2,LOADPROC\n          BO  PUTOUT\n          B   TESTRPL\nTESTRPL  DS   0H\n****LOCATE DCB FOR DFHRPL AND ISSUE BLDL FOR GIVEN MODULE\n         XC   RETADDR,RETADDR\n         MVC  WORKDDN,=CL8'DFHRPL'\n         XC   BLDLTTR,BLDLTTR\n         XC   WORKDSN,WORKDSN\n         L   LINKREG,=A(FINDDCB)\n        BALR  RET,LINKREG\n         CLI  WORKSW,X'00'\n         BE   NOPROG+8\n         TM   WORKSW,LOADRPL\n         BNO  NOPROG       PROGRAM NOT IN DFHRPL\n         B    DORPL\nDORPL    DS    0H\n****READ JFCBS FOR DFHRPL AND EXTRACT DSN IN CONCATENATION****\n         MVC SAVESW,WORKSW\n         MVI WORKSW,X'00'\n         OI  WORKSW,LOADRPL\n         L  LINKREG,=A(RDJFCB)\n        BALR  RET,LINKREG\n         MVC  WORKSW,SAVESW\n         CLI   WORKDSN,X'00'\n         BE    NOPROG\n         OI    WORKSW,LOADRPL\n         MVC   RETADDR,=A(WHERLOAD)\n         B     PUTRPL\nNOPROG   DS   0H\n          TM  WORKSW,FOUND\n          BO  WHERLOAD    FIGURE OUT WHERE LOADED FROM\n         MVC  OUTCON(ERRMESSL),ERRMESS\n         MVC  PROGCON,WORKPROG\n         MVC  MSL,=AL2(ERRMESSL)\n          XC  RETADDR,RETADDR\n          B   DOSEND\nWHERLOAD  DS   0H\n           MVC MSL,=AL2(FINL)\n***IF PPT ENTRY AND LOAD MOD IN RPL, AND NOT IN LPA, ASSUME\n***LOADED FROM RPL, EVEN IF IN STEPLIB OR LINKLIST\n          MVC FINLIB,=CL8'DFHRPL'\n          TM  WORKSW,LOADRPL    IS MODULE IN RPL\n           BNO MAYBELPA         NO...\n          TM  WORKSW,NOPPT      IS MODULE NOT IN PPT\n          BO   MAYBELPA          YES..\n           TM  WORKSW,LOADLPA   IS MOD ALSO IN LPA\n          BNO  PUTFIN             NO..ASSUME RPL\n           TM  WORKSW,NOLPA  NO..LPA SPECIFIED\n          BO   PUTFIN     YES..THEN RPL\n           B   MAYBELPA   MAY STILL BE LOADED FROM LPA\nMAYBELPA  DS   0H\n           MVC  FINLIB,=CL8'LPALIB'\n          TM   WORKSW,LOADLPA    IS MODULE IN LPA\n           BNO  MAYBESTP          NO..\n           MVC  FINSOURC,WORKPROG\n           CLC WORKPROG,=CL8'DFHIRP'  DFH MOD\n            BE  PUTFIN\n           CLC WORKPROG,=CL8'DFHCSVC' DFH MOD\n            BE  PUTFIN\n           CLC WORKPROG(3),=CL3'DFH'  DFH MOD\n           BNE PUTFIN    ASSUME IN LPA IF NOT DFH\n           L   LINKREG,=A(SRCHCSA)    LOCATE ADDR OF MODULE\n           BALR RET,LINKREG      TO DETERMINE IF REALLY FROM LPA\n           CLI  FINLIB,C' '\n            BE MAYBESTP\n           B   PUTFIN\nMAYBESTP  DS   0H\n           MVC  FINLIB,=CL8'STEPLIB'\n           TM  WORKSW,LOADSTEP\n           BO   PUTFIN\n           MVC  FINLIB,=CL8'LINKLIB'\n           TM  WORKSW,LOADLINK\n            BO  PUTFIN\n           MVC  FINLIB,=CL8'SVCLIB'\n           TM   WORKSW,LOADSVC\n            BO  PUTFIN\n           TM  WORKSW,NOLPA          LPA=NO\n           BO   MAYBERPL\n            TM  WORKSW,LOADLPA\n             BO  SETLPAY\n           B    MAYBERPL\nMAYBERPL   DS   0H\n           MVC  FINLIB,=CL8'DFHRPL'\n           TM   WORKSW,LOADRPL\n            BO  PUTFIN\nSETLPAY     DS   0H\n           MVC  FINLIB,=CL8'LPALIB'\n           TM   WORKSW,LOADLPA\n            BO  PUTFIN\n           MVC  FINLIB,=CL8'VTAMLST'\n           TM   WORKSW2,LOADVLST\n            BO  PUTFINS\n           MVC  FINLIB,=CL8'VTAMLIB'\n           TM   WORKSW2,LOADVLIB\n            BO  PUTFIN\n           MVC  FINLIB,=CL8'PROCLIB'\n           TM   WORKSW2,LOADPROC\n            BO  PUTFINS\n           MVC  FINLIB,=CL8' '\n           B    PUTFIN\nPUTFINS   DS   0H\n           MVC FINSOURC,=CL6'SOURCE'\nPUTFIN    DS   0H\n   EXEC CICS SEND FROM(FINOUT) LENGTH(MSL)  WAIT\n         MVC  FINSOURC,BLANKS\n         B   RETURN\nPUTOUT   DS   0H\n          OI   WORKSW,FOUND\n           TM  WORKSW2,LOADLPAE    LPA PROCESSED\n           BO   *+12\n           TM   WORKSW2,LOADLPAN\n           BO   PUTOUTLP\n         MVC   OUTCON(CONOUTL),CONOUT\n          L    1,LASTSBA\n           MVC  OUTSBA,0(1)\n           LA 1,SBAL(1)\n           ST 1,LASTSBA\n         MVC   PROGCON,WORKPROG\n         MVC  DDNCON,WORKDDN\n         MVC  MSL,=AL2(CONOUTL)\n         CLI  WORKDSN,X'00'\n         BE   *+14\n         MVC  DSNCON,WORKDSN\n          B   DOSEND\n****     MVC  DSNCONAT(ATCONL),BLANKS\n         MVC  DSNCON(3),=CL3'AT '\n         MVC  DSNCON+4(L'WORKCDDR),WORKCDDR\n         CLI  WORKALIS,X'00'\n          BE  DOSEND\n          MVC DSNCONAL,=C' (ALIAS OF '\n          MVC DSNALIS,WORKALIS\n          MVI  DSNCONAP,C')'\n          B   DOSEND\nPUTOUTLP  DS   0H\n          L    1,LASTSBA\n           MVC  OUTSBAP,0(1)\n           LA  1,SBAL(1)\n           ST  1,LASTSBA\n          MVC  LPADSNAM,WORKDSN\n          MVC  LPAMOD,WORKPROG\n      EXEC CICS SEND FROM(LPACONOU) LENGTH(MSL)\n          OI   WORKSW2,LOADLPAE\n          B   AFTSEND\nPUTRPL   DS   0H\n         MVC   OUTCON(CONOUTL),CONOUT\n          L    1,LASTSBA\n           MVC  OUTSBA,0(1)\n           LA 1,SBAL(1)\n           ST 1,LASTSBA\n         MVC   PROGCON,WORKPROG\n         MVC  DDNCON,WORKDDN\n         MVC  MSL,=AL2(CONOUTL)\n         CLI  WORKDSN,X'00'\n         BE   *+14\n         MVC  DSNCON,WORKDSN\n          B   DOSEND\n****     MVC  DSNCONAT(ATCONL),BLANKS\n         MVC  DSNCON(3),=CL3'AT '\n         MVC  DSNCON+4(L'WORKCDDR),WORKCDDR\n         CLI  WORKALIS,X'00'\n          BE  DOSEND\n          MVC DSNCONAL,=C' (ALIAS OF '\n          MVC DSNALIS,WORKALIS\n          MVI  DSNCONAP,C')'\n          B   DOSEND\nDOSEND   DS    0H\n      EXEC CICS SEND FROM(OUTCON) LENGTH(MSL)\nAFTSEND   DS   0H\n*         L  1,LASTSBA\n*         LA  1,SBAL(1)\n*         ST  1,LASTSBA\n         OC  RETADDR,RETADDR\n         BZ   RETURN\n          L   1,RETADDR\n         BR   1\nRETURN   DS   0H\n         EXEC CICS RETURN\nERRMESS  DS    0C\n****      DC  X'11C2601DC0'  ROW3 COL1\n         SBA  3,1\nERRPROG  DS   CL8\n        DC C' NOT FOUND        '\nERRMESSL EQU  *-ERRMESS\nBLANKS   DC  30C' '\nCONOUT   DS   0C\n***       DC  X'11C2601DC0'  ROW3 COL1\n         SBA  3,1\n          ORG\nCONPROG  DS  CL8\n         DC C' IS IN DDN   '\nCONDDN   DC  CL8' '\n          DC  C' '\nCONDSN   DC  CL42' '\nCONOUTL  EQU  *-CONOUT\nSVCDSN   DC  CL(L'WORKDSN)'SYS1.SVCLIB'\nCONLPA  DC  C' NOT LOADED FROM LPA'\nTSOSW    DS  X\nTSOFILE   EQU  X'01'\nSRCMOD    EQU  X'80'\nFINOUT   DS   0C\n***       DC  X'11C2601DC0'  ROW3 COL1\n         SBA  20,13\nFINSOURC  DC  CL8' '\n         SBA  20,20\n         DC  C' MODULE LOADED FROM '\nFINLIB    DS  CL8\nFINL     EQU  *-FINOUT\nLPACONOU DC CL80' '\n         ORG LPACONOU\nOUTSBAP   DS  XL(SBAL)\nLPAMOD   DS  CL8\n         DC C' IS IN LPA DATASET '\nLPADSNAM DC  CL44' '\n         ORG\n         LTORG\n          EJECT\nRDJFCB  DS   0H\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n        LA  13,SAVEMAC\n         MVC  WARLAREA(ARLENGTH),CRL       MOVE TO DYNAMIC STORAGE\n         LA   ARLREG,WARLAREA\n         STCM  ARLREG,7,WXADD  STORE ADDR OF JFCBAREA IN EXLIST\n         USING ARL,ARLREG\n         MVC   ARLRETRV,=H'1'  ONLY WANT INFO FOR 1 DATASET\n         SR    0,0\n         IC    0,BLDLCCAT   RELATIVE CONCAT NUMBER\n         TM    WORKSW,LOADRPL    DFHRPL  DD?\n         BNO   *+12\n         IC   0,RPLCATNO\n         B    ADDCAT\n         TM    WORKSW,LOADSTEP   STEPLIB DD?\n         BNO   *+12\n         IC    0,STPCATNO\n         B    ADDCAT\n         TM    WORKSW4,INVT       VTAMLIST DD?\n         BNO   *+12\n         IC    0,VTCATNO\n         B    ADDCAT\n         TM    WORKSW4,INVL       VTAMLIB  DD?\n         BNO   *+12\n         IC    0,VLCATNO\n         B    ADDCAT\nADDCAT    DS   0H\n         AH    0,=H'1'    ACTUAL CONCAT NUMBER\n         STH   0,ARLFIRST    DS   WITH THIS CONCAT NUMBER\n          DROP  ARLREG\n         MVI  WXJFCB,X'13'   CODE FOR CONCATENATION EXIT\n          MVC  WDCB,OPEJFCB  MOVE DCB\n          CLM   LINKREG,8,=X'FF'\n          BNE  *+10\n          MVC  WDCB,STEPDCB\n          LA   1,WDCB\n         USING IHADCB,1\n         LA  2,WXJFCB   RESET EXLST ADDR IN DCB\n         ST   2,DCBEXLST\n         DROP   1\n         MVC  WDJLIST,RDJLIST   MOVE RDJFCB LIST TO WORK AREA\n         LA   2,WDCB\n         STCM 2,7,WDJDCBA    STORE DCB ADDR IN RDJFCB LIST\n         LA   1,WDJLIST\n      RDJFCB   0(2),MF=(E,(1))                                          JFC00420\n         LTR  15,15\n         BNZ   ENDJFCB\n        B   PROCJFCB\nPROCJFCB DS   0H  FIND JFCB FOR CONCAT NUMBER FROM BLDL\n         LA   ARLREG,WARLAREA\n         USING ARL,ARLREG\n          L    1,ARLAREA  RESPONSE FROM RDJFCB\n          USING ARAD,1\n          LA   JFCBREG,ARAJFCB\n          DROP   1\n          USING JFCB,JFCBREG\n          MVC  WORKDSN,JFCBDSNM    SAVE DSNAME\n          B    FREEJFCB\nFREEJFCB DS   0H   FREE ARA\n****ISSUE FREEMAIN FOR STORAGE AREAS*****\n      SR  2,2\n      IC  2,ARLPOOL SUBPOOL\n      L   3,ARLAREA  ADDR OF ARA\n       SR   0,0\n      ICM  0,7,ARLRLEN\n       DROP  ARLREG\n   FREEMAIN RU,LV=(0),SP=(2),A=(3)\n       B  ENDJFCB\nGETOUT  DS   0H\n   EXEC CICS RETURN\nENDJFCB DS   0H\n        LM   14,12,SAVELINK+12\n        L    13,SAVER13\n        BR    RET\n***ALLOCATION RETRIEVAL LIST\nCRL  IHAARL  DSECT=NO,PREFIX=CRL,DESCR=NO\nEXJFCB   DS    0F                                                       JFC00600\n         DC   X'13'           FOR LAST ENTRY                            JFC00610\nEXADD    DS   AL3(CRL)                                                  JFC00620\nOPEJFCB   DCB   DDNAME=DFHRPL,EXLST=EXJFCB,MACRF=(E)                         JFC\nSTEPDCB   DCB   DDNAME=STEPLIB,EXLST=EXJFCB,MACRF=(E)                         JF\nRDJLIST    RDJFCB   (2),MF=L\n         DROP  LINKREG\n         LTORG\n         EJECT\nFINDDCB  DS   0H\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n         LA   13,SAVEMAC\n         NI   TSOSW,255-TSOFILE\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n         LR  TCBREG,1\n         B    NEXTTCB2\n         USING TCB,TCBREG\nNEXTTCB  DS   0H\n         L    TCBREG,TCBBACK  PREV TCB\nNEXTTCB2 DS    0H\n         LTR  TCBREG,TCBREG\n         BZ    RETDCB\n         ST   TCBREG,TCBADDR\n**CHECK IF DFHSIP TCB\n         L    JSCBREG,TCBJSCB\n         USING IEZJSCB,JSCBREG\n         CLC  JSCBPGMN,=CL8'DFHSIP'\n         BNE  RETDCB\n         DROP  JSCBREG\n         L    TIOTREG,TCBTIO   TIOT\n         ST   TIOTREG,TIOTADDR\n         L    DEBREG,TCBDEB    DEB QUEUE\n         ST   DEBREG,DEBADDR\n         DROP  TCBREG\n         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY\n         USING  XIOT,TIOTREG\n         SR    0,0\nFINDTIOT  DS   0H\n         CLI   XIOELNGH,X'00'\n         BE    RETDCB\n         CLC   XIOEDDNM,=CL8'DFHRPL'\n         BE   GOTRPL\n         IC  0,XIOELNGH   LEN OF ENTRY\n         AR   TIOTREG,0    NEXT ENTRY\n         B    FINDTIOT\n***LOCATE DFHRPL IN TIOT\nGOTRPL   DS    0H\n         ST   TIOTREG,RPLADDR\n****LOCATE DEB FOR DFHRPL****\n****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING RPLADDR\n         L    DEBREG,DEBADDR\n         USING DEBBASIC,DEBREG\n         B     FINDDEB\nNEXTDEB   DS    0H\n          CLC   DEBDEBAD+1(3),=XL3'000000'\n          BZ   NEXTTCB\n          L    DEBREG,DEBDEBAD     NEXT DEB\nFINDDEB   DS    0H\n       CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?\n         BNE   NEXTTCB\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   NEXTDEB          NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?\n          BNO  NEXTDEB         NO....\n         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB\n          L    1,TIOTADDR\n         AR    1,0         TIOT ADDR FOR THIS ENTRY\n          C    1,RPLADDR   SAME AS FOR DFHRPL\n          BE   GOTDCB     YES\n          B    NEXTDEB\nGOTDCB    DS    0H\n          ST  DCBREG,DCBADDR  DFHRPL DCB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n          LTR 15,15\n             BNZ  NEXTDEB\n*             OI  TSOSW,TSOFILE\n              OI   WORKSW,LOADRPL\n              MVC  RPLCATNO,BLDLCCAT\n             TM  DCBRECFM,DCBRECU  UNDEFINED RECFM\n             BO   ENDFDCB LOAD MODULE\n              OI  TSOSW,SRCMOD\n              NI  WORKSW,255-LOADRPL\n             B   ENDFDCB\n*         BNZ  ENDFDCB\n*          OI  WORKSW,LOADRPL\n*         B   ENDFDCB\nENDFDCB  DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\nRETDCB   DS   0H\n         B   ENDFDCB\n         L   13,SAVER13\n         EXEC CICS RETURN\n          LTORG\n         DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n          EJECT\nCHKSLIB   DS   0H   CHECK IF MODULE IN JOBLIB OR STEPLIB\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n***SEE IF PROG IN PPT\n           L   13,SAVER13\n   EXEC CICS HANDLE CONDITION ERROR(NOTINPPT)\n   EXEC CICS INQUIRE PROGRAM(WORKPROG)\n           B  GOSTEP\nNOTINPPT   DS   0H\n           OI  WORKSW,NOPPT\n           B  GOSTEP\nGOSTEP    DS   0H\n          LA    13,SAVEMAC\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n          ST  1,TCBADDR\n           USING TCB,1\n            L   DCBREG,TCBJLB\n            DROP  1\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKSVC\n           OI  WORKSW,LOADSTEP\n           MVC STPCATNO,BLDLCCAT\n          B   CHKSVC\nCHKSVC    DS   0H\n          L   CVTREG,16\n           USING CVT,CVTREG\n           L   DCBREG,CVTSVDCB  DCB FOR SYS1.SVCLIB\n           DROP  CVTREG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKLINK\n           OI  WORKSW,LOADSVC\n          B   CHKLINK\nCHKLINK   DS   0H\n          L    CVTREG,16\n          USING CVT,CVTREG\n***ISSUE BLDL ON LINKLIST\n          MVC SAVELINK,CVTLLTA LINK LIST\n          L    DCBREG,CVTLINK  ADDR LINKLIST DCB\n           DROP CVTREG\n          XC   BLDLTTR,BLDLTTR\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  ENDSLIB\n          OI  WORKSW,LOADLINK\n           B  ENDSLIB\nENDSLIB  DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\nSRCHLINK  DS   0H   SEARCH LINK LIST FOR DSNAME\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          LA    13,SAVEMAC\n          L    CVTREG,16\n          USING CVT,CVTREG\n          L   LLTREG,CVTLLTA   LINK LIST\n          LA   LLTREG,LLTOFF(LLTREG) FIRST ENTRY\n          USING LLTE,LLTREG\n          SR   1,1\n          IC  1,BLDLCCAT  CONCATENTATION NUMBER\n          LTR  1,1\n           BZ   GOTLLT\nNEXTLLT   DS   0H\n          LA   LLTREG,LLTLEN(LLTREG)  NEXT ENTRY\n          BCT  1,NEXTLLT     LOOP CONCAT NUMBER OF TIMES\n          B   GOTLLT\nGOTLLT    DS   0H\n          MVC WORKDSN,LLTDSN\n          B   ENDSLINK\nENDSLINK DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\n****\nSRCHLPA DS   0H   SERCH FOR MODULE IN LPA\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n        XC   WORKALIS,WORKALIS\n        LA  13,SAVEMAC\n         L   CVTREG,16\n         USING CVT,CVTREG\n         L    LPDEREG,CVTLPDIA  LPA DIRECTORY\n         DROP  CVTREG\n         USING  LPDE,LPDEREG\nTSTLPA   DS     0H\n         TM     LPDEATTB,LPDELPDE  LPDE IDENTIFIER\n         BNO    ENDSLPA\n         CLI    LPDENAME,X'00'\n          BE    ENDSLPA\n         CLC   WORKPROG,LPDENAME\n         BE    GOTLPA\n         LA    LPDEREG,LPDELEN(LPDEREG)\n          B     TSTLPA\nGOTLPA   DS    0H\n**********MOD FOR ALIAS*****************\n          TM   LPDEATT2,LPDERLC    RELOCATED ALIAS ENTRY POINT?\n          BO    LPALIAS\n          TM   LPDEATTR,LPDEMIN    MINOR LPDE?\n           BO  LPALIAS\n          MVC  WORKADDR,LPDEXTAD    LOAD ADDRESS\n           OI   WORKSW,LOADLPA\nCONVADDR   DS   0H\n           OI   WORKSW,LOADLPA\nA  CONVCODE IN=WORKADDR,OUT=WORKCDDR,LEN=L'WORKADDR\n****LOCATE WHICH LPA LIB MODULE WAS LOADED FROM****\n          L   LINKREG2,=A(WMODLPA)\n          BALR  RET2,LINKREG2\n          B    ENDSLPA\nLPALIAS   DS   0H\n          L    LPDEREG,LPDEMJP  POINT TO MAJOR LPDE\n          MVC   WORKALIS,LPDENAME\n          MVC  WORKADDR,LPDEXTAD   ADDRESS\n          DROP  LPDEREG\n          B    CONVADDR\nENDSLPA  DS    0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\nWMODLPA  DS     0H\n         USING *,LINKREG2\n         STM   14,12,SAVEREG2+12\n         LH   1,=AL2(LPADSNAL)\n         STH  1,LEN\n  EXEC CICS GETMAIN SET(15) LENGTH(LEN) INITIMG(X'00') NOSUSPEND\n            ST 15,LPADSNSA\n            MVC 0(11,15),=CL11'SYS1.LPALIB'\n            LA  15,LPADSNTL(15)\n            ST 15,LASTLPA\n            L   15,LPADSNSA\n            AH  15,LEN\n            SH  15,=AL2(LPADSNTL)\n            ST  15,ENDLPA\n****1. ALLOCATE SYS1.PARMLIB(LPALST00)\n****2. READ AS TDQ AND SAVE LIST OF DATASETS\n****3. CONCATANATE AND ALLOCATE UNDER LPALIB\n****4. ISSUE BLDL AND DETERMINE DSN\n*****FIND A TD QUEUE********************\n        L   13,CSAADDR\n        USING DFHCSADS,13\n        SETM  ON\n         MVC  WORKQUE,PARMQUE\n*********DCT IN RDO**\n*       AIF  ('&SYSPARM' LT '51').DCTNOT5D\n******************************************\n**************************************************\n      EXEC CICS IGNORE CONDITION ERROR\n      EXEC CICS SET     TDQUEUE(WORKQUE)  DISABLED CLOSED\n      EXEC CICS DISCARD TDQUEUE(WORKQUE)\n      EXEC CICS HANDLE CONDITION ERROR(ENDWLPA)\n EXEC CICS CREATE TDQUEUE(WORKQUE)  ATTRLEN(TDDEFL) ATTRIBUTES(TDDEF)\n        MVC  WORKDQE,WORKQUE\n        MVC  SDNTXPRM,BLANKS\n        MVC  SDNTXPRM(L'WORKQUE),WORKQUE\n       B TDQFOUND\nTDDEF   DS   0H\n DC C'TYPE(EXTRA) OPENTIME(DEFERRED) DDNAME(WMD1) TYPEFILE(INPUT) '\nTDDEFL  DC AL2(*-TDDEF)\n***END***DCT IN RDO**\n****************************************\nTDQFOUND  DS   0H\n         LA   1,DBPOINT\n         DYNALLOC\n         LA   1,SBPOINT\n         DYNALLOC\n          EXEC CICS HANDLE CONDITION ERROR(ENDPRMLB)\n     AIF ('&SYSPARM' GT '32').TDOP\n         MVC   OPQUE,WORKQUE\n        LA    1,OPLIST\n        ST    1,TCAOCLA              STORE FOR DFHOC\n        L     13,CSAADDR\n        USING DFHCSADS,13\n        DFHOC TYPE=OPEN,DATASET=TRANSDATA,LISTADR=YES\n         DROP  13\n         B   OUTTDO\nOPLIST    DS   0F\nOPQUE     DC  CL8' '\nOPERR     DC  CL4' '\nOPFF      DC  X'FF'\nOUTTDO    DS    0H\n          AGO  .TDOR\n.TDOP     ANOP\n         EXEC CICS SET TDQUEUE(WORKQUE) OPEN\n.TDOR     ANOP\nNEXTGET   DS   0H\n          EXEC CICS READQ TD QUEUE(WORKQUE) SET(1) LENGTH(LEN)\n          LR  INREG,1\n          ST   1,LASTIN\n          LH  LENREG,LEN\n           LR  0,INREG\n           AR   0,LENREG\n           ST   0,ENDORECA\n          BCTR  LENREG,0\n          L   15,LASTLPA\nSCANDSN  DS   0H\n***SCAN RCD   FOR FIRST ALPHA CHAR\n          L   14,=A(ALPHTAB)\n          EX    LENREG,TRTDSN\n          BZ   NEXTGET\n          SR  1,INREG   OFFSET OF FIRST CHAR\n          AR  INREG,1    SET BEG OF RCD\n          SR   LENREG,1  SET NEW LENGTH OF RCD\n***SCAN RCD   FOR DELIMITERS AND EXTRACT DSNAMES\n          L   14,=A(DELIMTAB)\n          EX    LENREG,TRTDSN\n          BZ   ATEND\n          LR   0,1\n          B    EXTRACT\nATEND     DS   0H\n         L    0,ENDORECA\nEXTRACT  DS    0H\n         SR   0,INREG\n         LR   LENREG,0\n         L    15,LASTLPA\n         XC   0(LPADSNTL,15),0(15)\n         EX   LENREG,MOVEDSN\n          LA  15,LPADSNTL(15)\n          C    15,ENDLPA\n          BL   *+8\n          L    15,LPADSNSA\n          ST   15,LASTLPA\n          AR  INREG,LENREG\n          ST   INREG,LASTIN\n          C  INREG,ENDORECA\n          BNL NEXTGET\n          L   LENREG,ENDORECA\n          SR   LENREG,INREG\n          B   SCANDSN\nTRTDSN   TRT 0(0,INREG),0(14)\nMOVEDSN  MVC 0(0,15),0(INREG)\nENDPRMLB DS   0H\n      EXEC CICS IGNORE CONDITION ERROR\n     AIF ('&SYSPARM' GT '32').TDCP\n         MVC   OPQUE,WORKQUE\n        LA    1,OPLIST\n        ST    1,TCAOCLA              STORE FOR DFHOC\n        L     13,CSAADDR\n        USING DFHCSADS,13\n        DFHOC TYPE=CLOSE,DATASET=TRANSDATA,LISTADR=YES\n         DROP  13\n          AGO  .TDCR\n.TDCP     ANOP\n      EXEC CICS SET TDQUEUE(WORKQUE) CLOSED\n.TDCR     ANOP\n         LA   1,DBPOINT     DEALLOCATE IT\n         DYNALLOC\n***ALLOCATE EACH LPA DATASET SEPARATELY, OPEN DCB, ISSUE BLDL TO SEE\n***IF MODULE IS IN IT. DO ALL DATASETS STARTING WITH SYS1.LPALIB\n***MAY NOT BE IN THE LIST\n         MVC  ENDOFLPA,LASTLPA  ADDR OF LAST ENTRY\n         L  15,LPADSNSA      ADDR LPALIST\nNEXTBLDL  DS   0H\n         ST  15,LASTLPA    FOR CURRENT ENTRY\n         CLI  0(15),X'40'   ANYTHING IN THERE\n         BNH  ENDWLPA       NO..\n         L   14,=A(TRANTAB)  GET RID OF COMMA AND X'00'\n         TR  0(LPADSNTL,15),0(14)\n         MVC SSNTXPRM,0(15)   SET DSN ALLOC TU\n         MVC SDNTXPRM,=CL8'LPALIB'  SET DDN TU\n          LA  1,DBPOINT\n           DYNALLOC      DEALLOCATE LPALIB DDN\n         LA  1,LBPOINT\n           DYNALLOC        ALLOCATE LPALIB DDN\n          LTR 15,15\n          BNZ  ENDWLPA\n           LA  13,MVSSAVE\n          OPEN (LPALIB,(INPUT))\n         LTR 15,15\n          BNZ  ENDWLPA\n          MVC  LPAMEMB,WORKPROG\n           BLDL LPALIB,LPALIST\n            LTR 15,15\n           BZ  *+12       MEMBER NOT IN DATASET\n           L  1,LASTLPA\n           MVI  LPADSNTL(1),C'Y' FLAG PRESENT\n            NOPR 0\n           CLOSE LPALIB\n           L    15,LASTLPA\n           LA  15,LPADSNTL(15)  NEXT LPA LIB\n            C  15,ENDOFLPA      NO MORE ENTRIES\n            BH   ENDWLPA\n            B   NEXTBLDL\nENDWLPA  DS    0H\n         AIF ('&SYSPARM' LT '51').NODISC\n   EXEC CICS IGNORE CONDITION ERROR\n   EXEC CICS DISCARD TDQUEUE(WORKQUE)\n.NODISC   ANOP\n          SETM  OFF\n          LM  14,12,SAVEREG2+12\n          BR   RET2\n         DS  0F\nSYNBLKS  DS   0F\nDBPOINT  DC   A(DBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   DBPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nSBPOINT  DC   A(SBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   SBPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nLBPOINT  DC   A(LBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   LBPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nSBS     DS   0F\nSB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nSBLN     DC    AL1(SBEL)  LEN OF RB\nSBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nSBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nSBFLAG2  DS    X       2ND   FLAG BYTE\nSBERROR  DS    XL2     ERROR REASON CODE\nSBINFO   DS    XL2     INFO  REASON CODE\nSBTXTPP  DC    A(SXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nSBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nSBEL     EQU   *-SBS\n* TEXT POINTERS  FOR ALLOCATION\nSXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nSDNPOINT DC   A(SDNTEXT)    DDN TU\nSSNPOINT DC   A(SSNTEXT)    DSN TU\nSSMPOINT DC   A(SSMTEXT)    MEMBER TU\nSSPPOINT DC   A(SSPTEXT)    DISP TU\n         ORG  SSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nSXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nSDNTEXT  DS    0F   DDN TEXT UNIT\nSDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nSDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSDNTXENT DS    0C\nSDNPLEN  DC    AL2(L'SDNTXPRM)  LENGTH OF PARM\nSDNTXPRM DC    CL8'PARMLIB'  DDNAME\n**DSN  TEXT UNIT\nSSNTEXT  DS    0F   DSN TEXT UNIT\nSSNTXKEY DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nSSNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSNTXENT DS    0C\nSSNPLEN  DC    AL2(L'SSNTXPRM)   LENGTH OF PARM\nSSNTXPRM DC    CL44'SYS1.PARMLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nSSMTEXT  DS    0F   DSN TEXT UNIT\nSSMTXKEY DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\nSSMTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSMTXENT DS    0C\nSSMPLEN  DC    AL2(L'SSMTXPRM)   LENGTH OF PARM\nSSMTXPRM DC    CL8'LPALST00'     MEMBERNAME\n**DISP TEXT UNIT\nSSPTEXT  DS    0F   DSP TEXT UNIT\nSSPTXKEY DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\nSSPTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSPTXENT DS    0C\nSSPPLEN  DC    AL2(L'SSPTXPRM)  LENGTH OF PARM\nSSPTXPRM DC    X'08'  DISP=SHR\nSXLEN    EQU   *-SXUNITS\n***FOR DEALLOCATION\nDBS     DS   0F\nDB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nDBLN     DC    AL1(DBEL)  LEN OF RB\nDBVERB   DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\nDBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nDBFLAG2  DS    X       2ND   FLAG BYTE\nDBERROR  DS    XL2     ERROR REASON CODE\nDBINFO   DS    XL2     INFO  REASON CODE\nDBTXTPP  DC    A(DXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nDBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nDBEL     EQU   *-DB\n* TEXT POINTERS  FOR DEALLOCATION\nDXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nDDNPOINT DC   A(SDNTEXT)  DDN TU\n         ORG  DDNPOINT   FOR LAST TU\n         DC  X'80'\n         ORG\nSYNEL    EQU  *-SYNBLKS\n**********TO ALLOCATE LPA DSNS\nLBS     DS   0F\nLB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nLBLN     DC    AL1(LBEL)  LEN OF RB\nLBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nLBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nLBFLAG2  DS    X       2ND   FLAG BYTE\nLBERROR  DS    XL2     ERROR REASON CODE\nLBINFO   DS    XL2     INFO  REASON CODE\nLBTXTPP  DC    A(LXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nLBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nLBEL     EQU   *-LBS\n* TEXT POINTERS  FOR ALLOCATION  OF LPA LIBS\nLXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nLDNPOINT DC   A(SDNTEXT)    DDN TU\nLSNPOINT DC   A(SSNTEXT)    DSN TU\nLSPPOINT DC   A(SSPTEXT)    DISP TU\n         ORG  LSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n********************************\nPARMQUE  DC   CL4'WMD1'\n*****FILE CONTROL BLOCKS*****                                           JRE06040\nLPALIB DCB DSORG=PO,MACRF=(R),DDNAME=LPALIB\n***BLDL LIST\nLPALIST DS   0H\n        DC  H'1'   1 ENTRY IN LIST\n        DC  H'12'  12 BYTES LONG\nLPAMEMB DS  CL8\n         LTORG\n         DROP  LINKREG2\n         EJECT\n****\nSRCHSIT DS   0H   SEE IF LPA=NO OR PRVMOD FOR DFH MODULE\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n        L   13,SAVER13\n*  EXEC CICS ADDRESS CSA(CSAREG)\n          L   CSAREG,CSAADDR\n        USING DFHCSADS,CSAREG\n         CLI   RELSW,X'32'\n          BL   NOSITM\n          SETM  ON\nNOSITM  DS    0H\n         L     SITREG,CSASITBA   SIT TABLE\n         DROP   CSAREG\n          USING DFHSITDS,SITREG\n           CLI  SITLPA,C'N'     LPA=NO\n           BE   SETSIT0\n          L    PRVREG,SITPRVMA   PRVMOD LIST\n          DROP  SITREG\n           LTR  PRVREG,PRVREG    ANY ENTRIES\n           BZ   SETSIT4     NO...\n           USING  PRVLIST,PRVREG\n          LH   1,PRVNUM+2  NUMBER OF ENTRIES\n           NOPR 0\n           LA  15,PRVENTRY  FIRST ENTRY\nTSTPRV     DS   0H\n          CLC   WORKPROG,0(15)\n           BE   SETSIT0\n           LA   15,8(15)  NEXT ENTRY\n           BCT  1,TSTPRV\n           B    SETSIT4\n          DROP  PRVREG\nSETSIT0  DS    0H\n          OI   WORKSW,NOLPA\n          B    ENDSIT\nSETSIT4   DS    0H\n          NI   WORKSW,255-NOLPA\n          B    ENDSIT\nENDSIT   DS    0H\n          SETM  OFF\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\nSRCHCSA   DS   0H   SEARCH LINK LIST FOR DSNAME\n          USING *,LINKREG\n          USING DFHCSADS,CSAREG\n          STM   14,12,SAVELINK+12\n          MVC  FINLIB,=CL8' '\n          L    CSAREG,CSAADDR\n          NI   WORKADDR,255-X'80'\n          B   SRCHCSA1\nSRCHCSA1  DS  0H    KCP-TCP\n          LA  1,CSAKCNAC   KCP ADDRA0\n          LA  3,CSATCTCA   TCP ADDRB8\n          LA  2,4            INCREMENT\nGOCSA1    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA1\n          B    SRCHCSA2\nSRCHCSA2  DS  0H    SRP-FDP\n          L  OPFLREG,CSAOPFLA\n          USING CSAOPFL,OPFLREG\n          LA  1,CSASRNAC   SRP20\n           AIF ('&SYSPARM' GT '41').NOFDNAC\n           LA  3,CSAFDNAC   FDP50\n           AGO .AFDNAC\n.NOFDNAC  ANOP\n          LA  3,CSAKCSC    KC QUERY\n.AFDNAC   ANOP\n          LA  2,4            INCREMENT\nGOCSA2    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA2\n          B    SRCHCSA3\nSRCHCSA3  DS  0H    DFHFCIN - EIP EXEC NUC\n          LA  1,CSAFCXAD   DFHCIN   78\n          LA  3,CSAEINAC   EXEC NUC A8\n          LA  2,4            INCREMENT\nGOCSA3    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA3\n          B    SRCHCSA4\nSRCHCSA4  DS  0H    RES MGR - TORS NUC    PGM\n          LA  1,CSAERMNA   RES MGRFC\n          AIF ('&SYSPARM' GT '41').NOTONNA\n          LA  3,CSATONNA   TON 1B4\n          AGO .ATONNA\n.NOTONNA  ANOP\n          LA  3,CSAZCQNA  ZCQ INSTALL\n.ATONNA  ANOP\n          LA  2,4            INCREMENT\nGOCSA4    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA4\n          B    SRCHCSA5\nSRCHCSA5  DS  0H    DBCR    - ATT SEC     PGM\n     AIF ('&SYSPARM' EQ '').IS32\n     AIF ('&SYSPARM' LT '32').NOT32\n.IS32     ANOP\n          LA  1,CSADBCR    DBCR2DC       2DC\n          LA  3,CSAZCUTN   ATTACH SEC USERID TABLE MGR 38C\n          AGO  .CONTCSA5\n.NOT32    ANOP\n          LA  1,CSATRANA   FE GLOB TRAP  2D4\n          LA  3,CSATRRNA   RECOV RTN FOR GLOBAL TRAP   2D8\n.CONTCSA5  DS  0H\n          LA  2,4            INCREMENT\nGOCSA5    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA5\n          B    NOTINLPA\nISINLPA   DS   0H\n          MVC  FINLIB,=CL8'LPALIB'\n          OI  WORKSW,LOADLPA\n          B   ENDSCSA\nNOTINLPA  DS   0H\n*         MVC  FINLIB,=CL8'DFHRPL'\n*         TM  WORKSW,LOADRPL\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8'STEPLIB'\n*         TM  WORKSW,LOADSTEP\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8'LINKLIB'\n*         TM  WORKSW,LOADLINK\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8'SVCLIB'\n*         TM  WORKSW,LOADSVC\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8' '\n          B   ENDSCSA\nENDSCSA  DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n          LTORG\n          DROP  LINKREG,OPFLREG,CSAREG\n          EJECT\n****\nSRCHNET   DS   0H   SEARCH SYS1.PROCLIB(NET) FOR DSNAMES\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          NI   WORKSW2,255-(LOADVLST+LOADVLIB)\n          NI   WORKSW4,255-(INVT+INVL)\n          LA   1,NTPOINT       ALLOC PROCLIB\n          DYNALLOC\n*****READ NET MEMBER AND GET DSNS OF VTAMLIB AND VTAMLST\n          MVI  VSW,0\n          ST   13,MVSSAVE\n          LA   13,MVSSAVE\n          OPEN (PROCLIB,(INPUT))\n          LTR  15,15\n          BNZ  ENDPROC\nNEXTPR     DS   0H\n          GET PROCLIB\n          CLC  0(9,1),=CL9'//VTAMLST'\n          BE   GOTVLST\n          CLC  0(9,1),=CL9'//VTAMLIB'\n          BE   GOTVLIB\n          B    NEXTPR\nPREVLST   DS   0H\n*         TM  VSW,X'01'     VTAMLST PROCESSED?\n          CLI VSW,X'03'     VTAMLST/LIB PROCESSED?\n          BE   ENDPROC\n          CLC  0(9,1),=CL9'//VTAMLST'\n          BE   GOTVLST\n          B   NEXTPR\nGOTVLST   DS   0H\n          LR   2,1\n          LA   3,VTAMLSTS\n          OI   VSW,X'01'\n          SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\nCONTVLST   DS   0H\n          LA   3,L'VTAMLSTS(3)   NEXT ENTRY\n          LH   0,NUMVLSTS\n          AH   0,=H'1'\n          STH  0,NUMVLSTS\n          CH   0,=AL2(NUMVLSTN)\n          BH   PREVLIB     MAX OF 10 DSNAMES\nGETVLST   DS   0H\n          GET  PROCLIB\n          CLI  2(1),C'*'   COMMENT?\n          BE   GETVLST\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  PREVLIB     SEE IF //VTAMLIB\n          LR   2,1\nSC1       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\n          B    CONTVLST\nPREVLIB   DS   0H\n          TM  VSW,X'02'     VTAMLIB PROCESSED?\n          BO   ENDPROC\n          CLC  0(9,1),=CL9'//VTAMLIB'\n          BE   GOTVLIB\n          B   NEXTPR\nGOTVLIB   DS   0H\n          LR   2,1\n          LA   3,VTAMLIBS\n          OI   VSW,X'02'\nSC2       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\nCONTVLIB   DS   0H\n          LA   3,L'VTAMLIBS(3)\n          LH   0,NUMVLIBS\n          AH   0,=H'1'\n          STH  0,NUMVLIBS\n          CH   0,=AL2(NUMVLIBN)\n          BH   PREVLST     MAX NUMBER SNAMES\nGETVLIB   DS    0H\n          GET  PROCLIB\n          CLI  2(1),C'*'   COMMENT?\n          BE   GETVLIB\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  PREVLST     SEE IF //VTAMLST\n          LR   2,1\nSC3       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\n          B    CONTVLIB\nENDPROC   DS   0H\n          CLOSE PROCLIB\n*****DEALLOCATE PROCLIB\n          MVC  DEALCDDN,=CL8'PROCLIB'\n          LA   1,DTPOINT       DEALLOC PROCLIB\n          DYNALLOC\n*******ALLOCATE VTAMLST LIBS\n          LA  1,VTAMLSTS\n          MVC  WORKDSN,VOFF(1)\n          ST  1,VDSNAMEA\n          MVC  VDDPARM,=CL8'VTAMLST'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVLST\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (VTAMLST,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLST\n*****BLDL VTAMLST\n          LA  DCBREG,VTAMLST\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLST\n           OI  WORKSW2,LOADVLST\n           OI  WORKSW4,INVT\n           MVC VTCATNO,BLDLCCAT\nDEALVLST   DS   0H\n           CLOSE  VTAMLST\n          MVC  DEALCDDN,=CL8'VTAMLST'\n          LA   1,DTPOINT       DEALLOC VTAMLST\n          DYNALLOC\n            TM  WORKSW2,LOADVLST\n            BO ENDVLST\n            B  NEXTVLSA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nNEXTVLSA  DS    0H\n          LH   1,NUMVLSTS\n          LTR  1,1\n          BZ   ENDVLST\n          STH  1,CURNUM\n          LA   1,VTAMLSTS+L'VTAMLSTS\n          ST   1,CURVLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nADDVLST   DS   0H\n          ST   1,VDSNAMEA\n          MVC  WORKDSN,VOFF(1)\n          MVC  VDDPARM,=CL8'VTAMXXX'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVXXX\n          OPEN (VTAMXXX,(INPUT))\n          LTR  15,15\n          BNZ   DEALVXXX\n          LA  DCBREG,VTAMXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  DEALVXXX\n           OI  WORKSW2,LOADVLST\n           OI  WORKSW4,INVT\n            B  DEALVXXX\nDEALVXXX   DS   0H\n           CLOSE VTAMXXX\n*****DEALLOCATE VTAMXXX\n          MVC  DEALCDDN,=CL8'VTAMXXX'\n          LA   1,DTPOINT       DEALLOC VTAMXXX\n          DYNALLOC\n          TM  WORKSW2,LOADVLST\n          BO  ENDVLST\n          B  NEXTVLSB\nNEXTVLSB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLST\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'VTAMLSTS(1)\n          ST   1,CURVLST\n          B    ADDVLST\n*         MVC  CDNDNAM1,=CL8'VTAMLST'\n*         LA   1,CTPOINT       CONCATENATE TO VTAMLST\n*         DYNALLOC\n*         LTR  15,15\n*         BNZ  DEALVXXX\n*****OPEN VTAMLST\nENDVLST  DS   0H\n          B  PROCVLIB         DO VTAMLIB\nPROCVLIB  DS   0H\n*******ALLOCATE VTAMLIB LIBS\n          LA  1,VTAMLIBS\n          MVC  VTAMDSN,VOFF(1)\n          ST  1,VDSNAMEA\n          MVC  VDDPARM,=CL8'VTAMLIB'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVLIB\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (VTAMLIB,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLIB\n*****BLDL VTAMLIB\n          LA  DCBREG,VTAMLIB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLIB\n           OI  WORKSW2,LOADVLIB\n           OI  WORKSW4,INVL\n           MVC VLCATNO,BLDLCCAT\nDEALVLIB   DS   0H\n           CLOSE  VTAMLIB\n          MVC  DEALCDDN,=CL8'VTAMLIB'\n          LA   1,DTPOINT       DEALLOC VTAMLST\n          DYNALLOC\n            TM  WORKSW2,LOADVLIB\n            BO ENDVLIB\n            B  NEXTVLBA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nNEXTVLBA  DS    0H\n          LH   1,NUMVLIBS\n          LTR  1,1\n          BZ   ENDVLIB\n          STH  1,CURNUM\n          LA   1,VTAMLIBS+L'VTAMLIBS\n          ST   1,CURVLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nADDVLIB   DS   0H\n          ST   1,VDSNAMEA\n          MVC  VTAMDSN,VOFF(1)\n          MVC  VDDPARM,=CL8'VTAMXXX'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVBXX\n          OPEN (VTAMXXX,(INPUT))\n          LTR  15,15\n          BNZ   DEALVBXX\n          LA  DCBREG,VTAMXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  DEALVBXX\n           OI  WORKSW2,LOADVLIB\n           OI WORKSW4,INVL\n            B  DEALVBXX\nDEALVBXX   DS   0H\n           CLOSE VTAMXXX\n*****DEALLOCATE VTAMXXX\n          MVC  DEALCDDN,=CL8'VTAMXXX'\n          LA   1,DTPOINT       DEALLOC VTAMXXX\n          DYNALLOC\n          TM  WORKSW2,LOADVLIB\n          BO  ENDVLIB\n          B  NEXTVLIB\nNEXTVLIB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLIB\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'VTAMLIBS(1)\n          ST   1,CURVLST\n          B    ADDVLIB\n*         MVC  CDNDNAM1,=CL8'VTAMLST'\n*         LA   1,CTPOINT       CONCATENATE TO VTAMLST\n*         DYNALLOC\n*         LTR  15,15\n*         BNZ  DEALVXXX\nENDVLIB  DS   0H\n          B  ENDNET\nENDNET   DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,MVSSAVE\n          BR   RET\nFDELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          MVC VOFF(44,3),=44C' '\n          LA   15,4(1)\n          L    14,=A(DELIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVEVTN\n          MVC  0(DALCONSL,3),DALCONS\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVEVTN   MVC VOFF(0,3),0(15)\nDALCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nDALCONSL EQU  *-DALCONS\nPROCLIB DCB DSORG=PS,MACRF=GL,DDNAME=PROCLIB,EODAD=ENDPROC\nVTAMLST DCB DSORG=PO,MACRF=(R),DDNAME=VTAMLST\nVTAMLIB DCB DSORG=PO,MACRF=(R),DDNAME=VTAMLIB\nVTAMXXX DCB DSORG=PO,MACRF=(R),DDNAME=VTAMXXX\n******TO CONCATENATE DATASETS\n         DS  0F\nCTPOINT  DC   A(CBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   CTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nCBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(CBEL)  LEN OF RB\n         DC    AL1(S99VRBCC)     03 FOR CONCAT\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\n         DC    A(CXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nCBEL     EQU   *-CBS\n* TEXT POINTERS  FOR CONCATENATION\nCXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nCDNPOINT DC   A(CDNTEXT)    DDN TU\n         ORG  CDNPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nCDNTEXT  DS    0F   DDN TEXT UNIT\n         DC    AL2(DCCDDNAM)  KEY FOR CONCATENATION\nCDNTXNUM DC    XL2'0002'   NUM LENGTH + PARM ENTRIES\nCDNPLEN1 DC    AL2(8)           LENGTH OF PARM DDNAME\nCDNDNAM1 DC    CL8'VTAMLST'  DDNAME   TO CONCAT TO\nCDNPLEN2 DC    AL2(8)           LENGTH OF PARM DDNAME\nCDNDNAM2 DC    CL8'VTAMXXX'  DDNAME   TO CONCAT WITH\n******TO ALLOC SYS1.PROCLIB\n         DS  0F\nNTPOINT  DC   A(NBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   NTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nNBS     DS   0F\nNB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nNBLN     DC    AL1(NBEL)  LEN OF RB\nNBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nNBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nNBFLAG2  DS    X       2ND   FLAG BYTE\nNBERROR  DS    XL2     ERROR REASON CODE\nNBINFO   DS    XL2     INFO  REASON CODE\nNBTXTPP  DC    A(NXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nNBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nNBEL     EQU   *-NBS\n* TEXT POINTERS  FOR ALLOCATION\nNXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nNDNPOINT DC   A(NDNTEXT)    DDN TU\nNSNPOINT DC   A(NSNTEXT)    DSN TU\nNSMPOINT DC   A(NSMTEXT)    MEMBER TU\nNSPPOINT DC   A(NSSPTEXN)   DISP TU\n         ORG  NSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nNXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nNDNTEXT  DS    0F   DDN TEXT UNIT\nNDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nNDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNDNTXENT DS    0C\nNDNPLEN  DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nNDNTXPRM DC    CL8'PROCLIB'  DDNAME\n**DSN  TEXT UNIT\nNSNTEXT  DS    0F   DSN TEXT UNIT\nNSNTXKEY DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nNSNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSNTXENT DS    0C\nNSNPLEN  DC    AL2(L'SSNTXPRM)   LENGTH OF PARM\nNSNTXPRM DC    CL44'SYS1.PROCLIB'   DSNAME\n*SNTXPRM DC    CL44'SYS1.ZOS19.PROCLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nNSMTEXT  DS    0F   DSN TEXT UNIT\nNSMTXKEY DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\nNSMTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSMTXENT DS    0C\nNSMPLEN  DC    AL2(L'NSMTXPRM)   LENGTH OF PARM\nNSMTXPRM DC    CL8'NET     '     MEMBERNAME\n**DISP TEXT UNIT\nNSSPTEXN  DS    0F   DSP TEXT UNIT\nDISPTEXT  EQU   *\nNSSPTXKY DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\nNSSPTXNU  DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSPTXEND DS    0C\nNSSPPLEN  DC    AL2(L'NSSPTXPR)  LENGTH OF PARM\nNSSPTXPR DC    X'08'  DISP=SHR\nNSXLEN    EQU   *-NXUNITS\n***FOR DEALLOCATION\nDTPOINT  DC   A(DBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   DTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nDBSD    DS   0F\nNBDD     DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nNDBLND    DC    AL1(NDBELD)  LEN OF RB\nNDBVERBD  DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\nNDBFLAD1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nNDBFLAD2  DS    X       2ND   FLAG BYTE\nNDBERROR  DS    XL2     ERROR REASON CODE\nNDBINFOD  DS    XL2     INFO  REASON CODE\nNDBTXTPD  DC    A(NDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nNDBAUTDL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nNDBELD     EQU   *-NBDD\n* TEXT POINTERS  FOR DEALLOCATION\nNDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\nNDDNPOID DC   A(DNDNTEXD)  DDN TU\n         ORG NDDNPOID   FOR LAST TU\n         DC  X'80'\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nDNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nDEALCDDN DC    CL8'PROCLIB'  DDNAME\n**********TO ALLOCATE VTAM DSNS\nVTPOINT  DC   A(VBS) ADR  REQ BLOCK PASSED IN R1\n         ORG   VTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nVBS     DS   0F\nVB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nVBLN     DC    AL1(VBEL)  LEN OF RB\nVBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nVBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nVBFLAG2  DS    X       2ND   FLAG BYTE\nVBERROR  DS    XL2     ERROR REASON CODE\nVBINFO   DS    XL2     INFO  REASON CODE\nVBTXTPP  DC    A(VXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nVBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nVBEL     EQU   *-VBS\n* TEXT POINTERS  FOR ALLOCATION  OF VTAM LIBS\nVXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nVDNPOINT DC   A(VDDNAME)    DDN TU\nVDSNAMEA DS   A             DSN TU\nVSPPOINT DC   A(DISPTEXT)   DISP TU\n         ORG  VSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nVDDNAME  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nVDDPARM  DC    CL8'VTAMLST'  DDNAME\n          LTORG\n          DROP  LINKREG\n          EJECT\n***********************************************\n****\n****\nSRCHPLIB  DS   0H   SEARCH SYS1.PARMLIB FOR LPA  DSNAMES\n          USING *,LINKREG\n          STM   14,13,SAVELINK+8\n          LA  13,MVSSAVE\n          LA   1,PTPOINT       ALLOC PARMLIB\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALPLIB\n          OPEN (PARMLIB,(INPUT))\n           LTR 15,15\n           BNZ  DEALPLIB\n            LA  1,PARMLIB\n           USING IHADCB,1\n           MVC  BLKSIZE,DCBBLKSI   SAVE BLOCKSIZE\n           MVC  LRECL,DCBLRECL     SAVE RECORD LEN\n           DROP 1\n* EXEC CICS GETMAIN SET(15) LENGTH(BLKSIZE) INITIMG(X'00') NOSUSPEND\n            LH   0,BLKSIZE    FOR TSO\n            GETMAIN R,LV=(0)\n            LR   15,1\n            ST   15,READAREA\n            AH  15,BLKSIZE\n            ST  15,ENDBLOCK\n*****GET DIRECTORY AND LOCATE 'LOADXX' AND IEASYMXX MEMBERS\n           SETM  ON\n           LA   2,DSERVOUT\nDS1        DESERV FUNC=GET_ALL,AREAPTR=(2),DCB=PARMLIB\n            LTR  15,15\n**           BNZ  DEALPLIB\n             BNZ  ENDPARM\n             L    2,DSERVOUT\n             USING DESB,2\n             MVC  DSERVLEN,DESB_LEN   NEED FOR FREEMAIN\n             MVC  NUMMEMBS,DESB_COUNT NUMBER OF MEMBERS IN PDS\n             MVC  CURMEMBS,DESB_COUNT NUMBER OF MEMBERS IN PDS\n             LA  2,DESB_DATA   POINT TO FIRST IGWSMDE ENTRY\n             DROP 2\n             USING SMDE,2\n********LOOK FOR LOADXX AND IEASYM MEMBERS****************\nLOOKSMDE     DS   0H\n             LR  1,2\n             AH  1,SMDE_NAME_OFF  OFFSET TO LEN/MEMB NAME ENTRY\n             CLC 2(4,1),=CL4'LOAD'  LOADXX MEMBER?\n             BE  GOTLOAD            YES\n              L  1,CURMEMBS\n              BCT  1,NEXTSMDE\nNEXTSMDE     DS   0H\n              ST  1,CURMEMBS\n              A   2,SMDE_LEN   NEXT SMDE\n              B   LOOKSMDE\nGOTLOAD      DS   0H\n*READ LOAD MEMBER AND EXTRACT INFO FROM IODF, PARMLIB, SYSPARM\n*FIELDS. ASSUME THAT SECOND PARM IN IODF=&SYSNAME  (AS SPECIFIED\n*IN IEASYS MEMBER) PARMLIB HAS REAL NAME OF SYS1.PARMLIB BEING USED\n             MVC  LOADMEMB,BLANKS\n             LH 15,0(1)  LENGTH OF MEMBER NAME\n             BCTR 15,0\n             EX  15,MOVELOAD\n             L    2,DSERVOUT\n             L    3,DSERVLEN\n             FREEMAIN RC,A=(2),LV=(3)\n             B   ENDPARM\nENDPARM     DS  0H\n            SETM  OFF\nDEALPLIB   DS   0H\n          CLI  LOADMEMB,C' '\n          BNH  OUTPLIB\n***DETERMINE LPA CONCAT BY THE FOLLOWING:\n***NEED TO DETERMINE VALUE OF SYSCLONE WHICH IS DEFINED WITH\n***SUBSTITUTABLE VALUES IN IEASYM, WHICH WILL NOT BE USED HERE\n***EVEN THOUGH IT CONTAINS THE REAL VALUE OF SYSCLONE.\n** ON DOITT SYSTEMS, SYSCLONE IS DEFINED IN IEASYM AS THE\n***FIRST AND LAST CHARACTERS OF SYSNAME.\n***IT WILL BE ASSUMED THAT SYSCLONE IS EQUAL TO FIRST AND LAST CHARS\n***OF SYSNAME EVEN THOUGH IT MAY NOT ALWAYS BE ON ALL SYSTEMS.\n**1. READ LOADXX MEMBER TO GET SYSPARM VALUE, WHICH DEFINES IEASYSXX\n**2. READ IEASYS&SYSPARM TO GET LPA SUFFIXES, ONE OF WHICH MAY BE\n**   DEFINED AS &SYSCLONE. IEASYS MAY ALSO HAVE SYSNAME.\n*******ALLOCATE AND READ LOAD MEMBER\n         FIND  PARMLIB,LOADMEMB,D\n         LTR  15,15\n          BNZ  OUTPLIB\n*****LOOK FOR SYSPARM FIELD IN LOADXX MEMBER\n           L    2,READAREA\n           ST  2,LASTBLOC\nGETPLIBS   DS   0H\n          READ READECB,SF,PARMLIB,(2),'S'\n          CHECK READECB\n          CLI  READECB,X'7F'\n          BNE OUTPLIB\n          LR  1,2\nTESTPLIB  DS   0H\n          CLC  0(7,1),=CL7'SYSPARM'\n          BE  GOTSPARM\n          CLC  0(4,1),=CL4'IODF'\n          BE  GOTIODF\nNEXTPLIB  DS   0H\n          L   1,LASTBLOC\n          AH  1,LRECL    NEXT RECORD\n          C   1,ENDBLOCK\n**        BH  OUTPLIB\n          BH  IEASYS00\n          ST  1,LASTBLOC\n          B  TESTPLIB\nGOTIODF   DS   0H    SECOND PARM IS SYSNAME\n***LOADXX MEMBER IS COLUMN DEPENDENT. DATA STARTS IN COL 10.\n**COL 10-11 HAS SUFFIX OF IODF MEMBER; COL 13 HAS HILEVEL QUALIFER\n**ASSUME HI-LEVEL QUALIFIER IS SYNAME IF NOT SPECIFIED ANYWHERE ELSE\n           ST  1,RECADDR\n          MVC  SYSNAME,12(1)\n          CLI  SYSNAME+2,C' '\n          BNH NEXTPLIB\n*******EXTRACT FIRST AND LAST CHARACTERS AS\n          MVC SYSCLONE(1),12(1)\n          MVC SYSCLONE+1(1),15(1)\n          MVC  SYSPARM,SYSCLONE\n*         B   NEXTPLIB\n          B   IEASYS00\nGOTSPARM   DS   0H\n**FIRST  PARM IS SYSTEM PARM SUFFIX\n           ST  1,RECADDR\n           L  15,=A(ALPHTAB)\n          LR  14,1\n           TRT 8(40,14),0(15)      FIND FIRST  ALPHA LETTER\n          BZ   NEXTPLIB\n           MVC SYSPARM,0(1)\n**SINCE SYSCLONE IS DEFINED WITH SUBSTITUTABLES IN IEASYM MEMBER,\n**SET SYSCLONE=SYSPARM\n          MVC  SYSCLONE,SYSPARM\n***       B   SEALPLIB\nSEALPLIB   DS   0H\n          CLI SYSPARM,C' '   SYSPARM FOUND\n***       BNH OUTPLIB\n           BH  IEASYS00\n           B   NEXTPLIB\nIEASYS00   DS   0H\n           TM   WORKSW3,READSPRM   IEASYS&SYSPARM READ?\n          BNO  DOSYSP             NO..\n           TM   WORKSW3,READZPRM   IEASYSXX       READ?\n          BO   OUTPLIB            YES...GET OUT\n          MVC  IEASYS+6(2),SYSPARM\n          OI   WORKSW3,READZPRM\n          B    FINDSYSP\nDOSYSP    DS   0H\n*****READ IEASYS&SYSPARM MEMBER TO GET SYSNAME AND LPALIST PARMS\n          OI   WORKSW3,READSPRM     FLAG READING IEASYS&SYSPARM\n          MVC  IEASYS(6),=CL6'IEASYS'\n***       MVC  IEASYS+6(2),SYSPARM\n          MVC  IEASYS+6(2),=CL2'00'\nFINDSYSP   DS   0H\n         FIND  PARMLIB,IEASYS,D\n         LTR  15,15\n****      BNZ  OUTPLIB\n          BNZ  IEASYS00    READ IEASYS00\n*****LOOK FOR LPA= AND SYSNAME= PARMS IN IEASYS&SYSPARM  MEMBER\n           L   2,READAREA\n           ST   2,LASTBLOC\nIETPLIBS   DS   0H\n          READ IEADECB,SF,PARMLIB,(2),'S'\n          CHECK IEADECB\n          CLI  IEADECB,X'7F'\n****      BNE OUTPLIB\n          BNE  IEASYS00    READ IEASYS00\n          LR  1,2\nTESTILIB  DS   0H\n          CLC  0(4,1),=CL7'LPA='\n          BE  GOTLPAEQ\n          CLC  0(8,1),=CL8'SYSNAME='\n          BE  GOTSNAME\nNEXTILIB  DS   0H\n          L   1,LASTBLOC\n          AH  1,LRECL    NEXT RECORD\n          C   1,ENDBLOCK\n***       BNL OUTPLIB\n          BNL IEASYS00\n          ST  1,LASTBLOC\n          B  TESTILIB\nGOTLPAEQ   DS   0H\n           TM  WORKSW3,DIDLCONS  LPA= ALREADY PROCESSED\n           BO   *+10             YES\n           MVC  LPACONST,5(1)  SAVE STRING AND PARSE LATER\n            OI   WORKSW3,DIDLCONS\n          CLI  SYSNAME,C' '  SYSNAME FOUND YET\n          BH   IEALPLIB      YES.. CLOSE PARMLIB\n          B   NEXTILIB     NEXT RECORD\nGOTSNAME   DS   0H\n           OI  WORKSW3,DIDSNAME  SYSNAME ALREADY PROCESSED\n          CLI  SYSNAME,C' '      SYSNAME ALREADY PROCESSED\n           BH   *+10             YES\n           MVC  SYSNAME,8(1)\n          CLI  LPACONST,C' '  LPA     FOUND YET\n          BH   IEALPLIB      YES.. CLOSE PARMLIB\n          B   NEXTILIB     NEXT RECORD\nIEALPLIA   DS   0H\n           MVI  ERRSW,X'00'\nIEALPLIB   DS   0H\n           CLI  ERRSW,X'00'\n           BNE  OUTPLIB\n          CLI  LPACONST,C' '   LPA PARM FOUND\n          BH   PROCLPA          YES\n          B   OUTPLIB\nLEALPLIB   DS   0H\n           B   ENDPLIB\nENDPLIB  DS   0H\n          CLI  LPACONST,C' '   LPA PARM FOUND\n          BH   PROCLPA          YES\nOUTPLIB   DS   0H\n          TM   WORKSW2,LOADLPAN  FOUND\n          BO   CLOPLIB\n          TM   WORKSW3,DIDPLST2\n          BO   CLOPLIB\n          OI  WORKSW3,DIDPLST2\n          B   DOLPLST2\nCLOPLIB   DS   0H\n          CLOSE PARMLIB\n          LA  1,PDPOINT    DEALLOCATE PARMLIB\n          DYNALLOC\n          SETM  OFF\n          LM  14,13,SAVELINK+8\n          BR   RET\nPROCLPA   DS   0H    READ LPALST MEMBERS\n***FIRST SET UP ENTRY IN THE OUTPUT LIST FOR SYS1.LPALIB\n          MVC  NUMLPAS,=H'1'\n         LA   3,LPALIBS\n          MVC  0(LPLCONSL,3),LPLCONS    FOR DYNALLOC\n          MVC LPAOFF(44,3),=CL44'SYS1.LPALIB'\n           LA  3,L'LPALIBS(3)\n         ST  3,LASTLPA\n********************************\nSSLPA     SCANARG ')',ADDR=LPACONST,LEN=20   END OF LIST\n          BZ   OUTPLIB\n          ST  1,LASTCONA\n          LA  2,LPACONST\n          CLI 0(2),C'&&' SUBSTITUTABLE     &\n          BE  SUBLPA\n          CLI 2(2),C','   2 CHAR VALUE\n          BNE  OUTPLIB     FORGET IT\nMSLPA      DS   0H\n          MVC LPALST(6),=CL6'LPALST'\n          MVC LPALST+6(2),0(2)\n          LA  2,3(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          B   ALLPALST\nSUBLPA    DS   0H SUBSTITUTE VARIABLES\n          BAL  14,SUBPARM\n          B  ALLPALST\nDOLPLST2  DS   0H COME HERE AFTER 1ST LPALST HAS BEEN PROCESSED\n          MVC  LPALST(6),=CL6'LPALST'\n          MVC  LPALST+6(2),SYSCLONE\n***       MVC  SYSNAME,=CL4'MVSZ'  DUMMY UP FOR NOW\n          LA   3,LPALIBS\n          ST   3,LASTLPA\n****CLEAR OUT PREVIOUS BLOCK\n          L    2,READAREA\n          SR   1,1\n          LH   3,BLKSIZE\n          MVCL 2,0\nALLPALST  DS   0H\n          FIND PARMLIB,LPALST,D\n          LTR 15,15\n          BNZ  OUTPLIB\n**         LA  3,LPALIBS\n           L   3,LASTLPA\n           L  2,READAREA\nBUILDLPA   DS  0H\n******BUILD DYNALLOC LIST FROM LPALST ENTRIES*****************\n***ONLY READ ONE BLOCK FROM LPALST MEMBER TO AVOID EOF CONDITION\n           ST  3,LASTLPA\n          READ LEADECB,SF,PARMLIB,(2),'S'\n          CHECK LEADECB\n          CLI  LEADECB,X'7F'\n          BNE OUTPLIB\n          ST  2,LASTBLOC\n          LR  1,2\n          AH  1,BLKSIZE\n           ST  1,ENDBLOCK\nTESTLLIB   DS   0H\n          BAL  14,LPELIM\n           LH  0,NUMLPAS\n           AH   0,=H'1'\n           STH  0,NUMLPAS\n           CH   0,=AL2(NUMLPAN) MAX NUM?\n           BH  DALPALST      YES\n           L   3,LASTLPA\n           LA  3,L'LPALIBS(3)\n           ST  3,LASTLPA\n          L   2,LASTBLOC\n          AH  2,LRECL    NEXT RECORD\n          C   2,ENDBLOCK\n          BH  DALPALST\n          CLC  0(4,2),=4X'00'    END OF BLOCK\n          BE  DALPALST\n          ST  2,LASTBLOC\n          B  TESTLLIB\n******END BUILD DYNALLOC LIST FROM LPALST ENTRIES**************\nDALPALST   DS   0H\n           MVC CURNUM,NUMLPAS\n           LA   1,LPALIBS-L'LPALIBS\n           ST  1,CURVLST\n           B  NEXTLPST\n**********ALLOCATE LPALIBS, OPEN, BLDL\nNEXTLPST   DS   0H\n          LH   1,CURNUM\n          LTR  1,1\n          BZ  DEALVLPA\n          BCTR 1,0\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'LPALIBS(1)\n          MVC  LPADSN,LPAOFF(1)\n*******BYPASS SYS1.DBN.SDBNLPA BECAUSE OF ERROR WITH DATASET\n*         CLC  LPADSN(16),=C'SYS1.DBN.SDBNLPA'\n*         BE   DEALVLPA\n*         CLC  LPADSN(16),=C'SYS1.EUVF.SEUVFLPA'\n*         BE   DEALVLPA\n*         CLC  LPADSN(16),=C'SYS1.MQM.SCSQLINK'\n*         BE   DEALVLPA\n*         CLC  LPADSN(16),=C'SYS1.MQM.SCSQSNLE'\n*         BE   DEALVLPA\n******END BYPASSING CATALOGUED DATASETS NOT ON VOLUME\n          ST   1,CURVLST\n          ST  1,LPSNAMEA\n          XC  LPDSORGP,LPDSORGP  PRIME TO NOT FOUND\n          LA   1,LTPOINT       ALLOCATE LPALIB\n          DYNALLOC\n          CLI  LPDSORGP,X'02'   DSORG FOUND\n          BNE  DEALVLPA\n          LTR  15,15\n          BNZ  DEALVLPA\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (LPALIBN,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLPA\n*****BLDL LPALIB\n          LA  DCBREG,LPALIBN\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLPA\n           OI  WORKSW2,LOADLPAN\n           MVC  WORKDDN,=CL8'LPALIB'\n           MVC  WORKDSN,LPADSN\nDEALVLPA   DS   0H\n           CLOSE  LPALIBN\n          MVC  PEALCDDN,=CL8'LPALIBN'\n          LA   1,PDPOINT       DEALLOC LPALST\n          DYNALLOC\n          MVC  PEALCDDN,=CL8'PARMLIB'  RESET\n           TM  WORKSW2,LOADLPAN\n           BO  OUTPLIB\n          OC   CURNUM,CURNUM\n           BZ   ENDVLPA1\n           B   NEXTLPST\n*************************************************************\nENDVLPA1 DS   0H\n**PROCESS ADDITIONAL LPALIBS\n          XC  NUMLPAS,NUMLPAS\n          LA  2,LPALIBS\n          ST  2,LASTLPA\n          SR 1,1\n          LA  3,LPAHLEN\n          MVCL 2,0      CLEAR OUT\n          L  2,NEXTCONA   NEXT PARM IN LPA=(XXX) FROM IEASYS\n          CLI 0(2),C','\n          BNE *+8\n          LA  2,1(2)\n          C   2,LASTCONA   END OF LIST\n          BNL OUTPLIB\n          CLI 0(2),C'&&'  SUBSTITUTABLE\n          BE  SUBLPA\n          CLI  0(2),C'L'   END OF LIST\n          BE  OUTPLIB\n          CLI  0(2),C','   2 CHAR VALUE\n          BNE  OUTPLIB\n          B  MSLPA\n***END****ALLOCATE LPALIBS, OPEN, BLDL\n**********************************\nSUBPARM    DS   0H\n**ADDR OF PARM TO BE SUBSTITUTED IN R2 'LPALSTXX'\n          STM  14,12,RTNSAVE+12\n          MVC LPALST(6),=CL6'LPALST'\n          CLC  1(8,2),=CL8'SYSCLONE'\n          BE   SP1CLONE\n          CLC  1(7,2),=CL7'SYSNAME'\n          BE   SP1NAME\n          CLC  1(7,2),=CL7'SYSPARM'\n          BE   SP1PARM\n          MVC  NEXTCONA,LASTCONA\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1CLONE   DS   0H\n          MVC LPALST+6(2),SYSCLONE\n          LA  2,10(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1NAME   DS   0H\n          MVC 0(8,2),SYSNAME\n          LA  2,9(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1PARM   DS   0H\n          MVC LPALST+6(2),SYSPARM\n          LA  2,9(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\n**********************************\nLPELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          L    3,LASTLPA\n          MVC LPAOFF(44,3),=44C' '\n          LA   15,0(2)\n          L    14,=A(DALIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVELPAN\n          MVC  LPADSN,VOFF(3) SAVE DSNAME\n          MVC  0(LPLCONSL,3),LPLCONS\n***SEE IF ANY SUBSTITUTABLES IN DSN\n          LA   15,LPADSN\nSCAMP     SCANARG '&&SYS',ADDR=0(15),LEN=32\n          BNZ  DOSUBAMP\n***ADJUST LEN FIELD GENERATED IN MACRO BECAUSE OF &&\n***GENERATED LEN CODE WAS 4 AND NEEDS TO BE 3.. ONLY TEST FOR &SYS\n           ORG  SCAMPARGS\n           DC  X'D503'\n           ORG\n          LM   14,12,RTNSAVE+12\n          BR   14\nDOSUBAMP   DS  0H R1 HAS ADDRESS OF &SYS; R15=LPADSN\n          MVC   WORKDSN,=44C' '\n          LR   14,1\n          SR  14,15   OFFSET TO &SYS\n          BCTR 14,0\n          EX   14,MOVEWORK\n          LA   2,WORKDSN+1\n          AR   2,14   POINT TO SUBSTITUTABLE AREA\n          MVC  LEN,=AL2(L'SYSNAME)\n          CLC 1(7,1),=CL7'SYSNAME'\n          BNE *+14\n          MVC  0(L'SYSNAME,2),SYSNAME\n          B   COSUBAMP\n          MVC  LEN,=AL2(L'SYSPARM)\n          CLC 1(7,1),=CL7'SYSPARM'\n          BNE *+14\n          MVC  0(L'SYSPARM,2),SYSPARM\n          B   COSUBAMP\n          MVC  LEN,=AL2(L'SYSCLONE)\n          CLC 1(7,1),=CL7'SYSCLON'\n          BNE *+14\n          MVC  0(L'SYSCLONE,2),SYSCLONE\n          B   COSUBAMP\n          B  OUSUBAMP\n**************************\nCOSUBAMP   DS   0H\n          AH   2,LEN    POINT PAST SUBSTITUTED AREA\n          LA   15,LPADSN\nPPAMP     SCANARG '..',ADDR=0(15),LEN=42\n          BZ   OUSUBAMP\n          LA   14,LPADSN+L'LPADSN    END OF FIELD\n          SR  14,1                   LENGTH OF LAST PART OF DSN\n           BCTR 14,0\n           AR 15,14        AREA TO MOVE  PAST .\n           BCTR 14,0      FOR LENGTH CODE\n           EX  14,MOVELAST\n          MVC  LPADSN,WORKDSN\n          L   3,LASTLPA\n          MVC LPAOFF(L'WORKDSN,3),WORKDSN\nOUSUBAMP   DS  0H\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVELOAD  MVC LOADMEMB(0),2(1)\nMOVELPAN  MVC VOFF(0,3),0(15)\nMOVEWORK  MVC WORKDSN(0),LPADSN\nMOVELAST  MVC 0(0,2),1(1)\nLPLCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nLPLCONSL EQU  *-LPLCONS\n**********************************\nPARMLIB DCB DSORG=PO,MACRF=(R),DDNAME=PARMLIB\nLPALIBN DCB DSORG=PO,MACRF=(R),DDNAME=LPALIBN\n******TO ALLOC SYS1.PARMLIB\n         DS  0F\nPTPOINT  DC   A(PBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   PTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nPBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(PBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\nALCPOINT DC    A(PXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nPBEL     EQU   *-PBS\n* TEXT POINTERS  FOR ALLOCATION\nPXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nPDNPOINT DC   A(PDNTEXT)    DDN TU\nPSNPOINT DC   A(PSNTEXT)    DSN TU\nPSPPOINT DC   A(PSSPTEXN)   DISP TU\n         ORG  PSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nPMPOINTS DS   0F     ALLOCATE WITH MEMBER NAME\n         DC   A(PDNTEXTS)   DDN TU\n         DC   A(PSNTEXT)    DSN TU\n         DC   A(PSSPTEXN)   DISP TU\nPSMPOINT DC   A(PSMTEXT)    MEMBER TU\n         ORG  PSMPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nPDNTEXTS DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)           LENGTH OF PARM\nPDNPARML DC    CL8'PARMLIBS'  DDNAME\n***************\nPDNTEXT  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)           LENGTH OF PARM\nPARMDDN  DC    CL8'PARMLIB'  DDNAME\n**DSN  TEXT UNIT\nPSNTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(44)  LENGTH OF PARM\nPSNDSN   DC    CL44'SYS1.PARMLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nPSMTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)   LENGTH OF PARM\nPSMMEMB  DC    CL8'LOAD    '     MEMBERNAME\n**DISP TEXT UNIT\nPSSPTEXN  DS    0F   DSP TEXT UNIT\n         DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\n          DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n          DC    AL2(1)  LENGTH OF PARM\n         DC    X'08'  DISP=SHR\n***FOR DEALLOCATION\nPDPOINT  DC   A(PDBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   PDPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nPDBSD    DS   0F\n          DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n          DC    AL1(NDBELD)  LEN OF RB\n          DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\n          DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n          DS    X       2ND   FLAG BYTE\n          DS    XL2     ERROR REASON CODE\n          DS    XL2     INFO  REASON CODE\n          DC    A(PDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\n* TEXT POINTERS  FOR DEALLOCATION\nPDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\n         DC   A(PNDNTEXD)  DDN TU\n         ORG PDXPOIND    FOR LAST TU\n         DC  X'80'\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nPNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)  LENGTH OF PARM\nPEALCDDN DC    CL8'PARMLIB'  DDNAME\n**********TO ALLOCATE LPA  DSNS\nLTPOINT  DC   A(LPS) ADR  REQ BLOCK PASSED IN R1\n         ORG   LTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nLPS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(VBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\n         DC    A(LPPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\n* TEXT POINTERS  FOR ALLOCATION  OF LPA  LIBS\nLPPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\n         DC   A(LPDNAME)    DDN TU\nLPSNAMEA DS   A             DSN TU\nLPPPOINT DC   A(PSSPTEXN)   DISP TU\nLPDSORG  DC   A(LPDSORGU)   DSORG TU\n         ORG  LPDSORG     FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nLPDNAME  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nLPDPARM  DC    CL8'LPALIBN'  DDNAME\n**DSORG TEXT UNIT\nLPDSORGU DS    0F   DSORG TEXXT UNIT\n         DC    AL2(DALRTORG)  RETURN DATASET ORGANIZATION\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'LPDSORGP)  LENGTH OF PARM\nLPDSORGP DC    X'0000'  DSORG PO\n          LTORG\n          DROP  LINKREG\n          EJECT\n***************************************\n***************************************\nSRCHJES2  DS   0H   SEARCH SYS1.PROCLIB(JES2) FOR PROCLIB DSNS\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          XC    NUMPLIBS,NUMPLIBS\n          MVC    JSNTXPRM,JESPNAME     SYS1.PROCLIB\n          MVC    JSMTXPRM,JESPMEMB     JES2\n          MVC   JDNTXPRM,=CL8'JESPROC'\n          MVC   JSNPOINT,=A(JSNTEXT)\n          LA   1,JTPOINT       ALLOC PROCLIB\n          DYNALLOC\n          CH   15,=H'4'\n          BH   ENDPROCK\n*****READ JES2 MEMBER AND GET DSNS OF PROCLIBS\n          ST   13,MVSSAVE\n          LA   13,MVSSAVE\n          OPEN (JESPROC,(INPUT))\n          LTR  15,15\n          BNZ  ENDPROCK\nJEXTPR     DS   0H\n          GET JESPROC\n          CLC  0(6,1),=CL6'//PROC'\n          BE   GOTJPROC\n          CLC  0(8,1),=CL8'//HASPPARM'\n          BE GOTHASP\n          B    JEXTPR\n********MOD OFR PROCLIB DSNS NOT IN JES2 PROC JCL\nGOTHASP   DS    0H\n***ASSUME DSNS ARE IN FIRST CONCATENATION, WHICH MAY BE\n***KEYWORD PARAMETER- ASSUME JES2PARM FOR NOW\n          LR    2,1\nHTJ       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ    ENDPROCJ\n          ST    1,DSNADD\n          LA    3,PROCLIBS\n          LR    2,1\n          BAL  14,JDELIM\n          L  15,DSNADD      ADDRESS OF DSN=\n          LA  15,4(15)      ADDRESS OF DSNAME\n          L 14,=A(DELIMTAB)\n          TRT  0(40,15),0(14)  LOOK FOR (\n          BZ   PLUGIN\n          MVC  HASPMEMB,1(1)\n          L    14,=A(TRTAB)\n          TR   HASPMEMB,0(14)    GET RID OF )\n          L 14,=A(DELIMTAB)\n          TRT  HASPMEMB,0(14)  LOOK FOR &\n          CLI  0(1),X'50'\n          BE   PLUGIN\n          B    CLOJES\n***IF SUBSTITUTABLE PARM PLUG IN JES2PARM FOR NOW\n***PLUG IN NAME FOR TESTING\nPLUGIN     DS   0H\n          MVC  HASPNAME,=CL44'SYS1.JES2.PARMLIB'\n          MVC  HASPMEMB,=CL8'JES2PARM'\n          B    CLOJES\nCLOJES    DS    0H\n**CLOSE JESPROC\n          CLOSE JESPROC\n**DELALLOCATE PRIOR  JESPROC\n          MVC  JEALCDDN,=CL8'JESPROC'\n          MVC  JDMEMBER,=CL8'JES2'\n          LA   1,JTPOINTD      DEALLOC PROCLIB\n          DYNALLOC\n***ALLOCATE  NEW JESPROC\n          MVC   JDNTXPRM,=CL8'JESPROC'\n          MVC   JSNPOINT,=A(JSNTEXT)\n          MVC   JSNTXPRM,HASPNAME   NEW DSNAME\n          MVC   JSMTXPRM,HASPMEMB   NEW MEMBER\n          LA   1,JTPOINT       ALLOC PROCLIB\n          DYNALLOC\n          LTR   15,15\n          BNZ   ENDPROCJ\n          OPEN (JESPROC,(INPUT))\n          LTR  15,15\n          BNZ  ENDPROCK\n          MVI  HASPSW,X'01'  SET FLAG\nGETJMORE   DS   0H\n          GET JESPROC\n          CLI  1(1),C'*'    COMMENT\n          BE   GETJMORE\n          B    GOTJPROC\n********END MOD FOR PROCLIB DSN'S NOT IN JCL\nGOTJPROD  DS   0H\n          LA   3,L'PROCLIBS(3)\n          B    *+8\nGOTJPROC  DS   0H\n          LA   3,PROCLIBS\n          LR   2,1\nGTJ       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROCJ\n          BAL  14,JDELIM\nJONTVLST   DS   0H\n          LA   3,L'PROCLIBS(3)   NEXT ENTRY\n          LH   0,NUMPLIBS\n          AH   0,=H'1'\n          STH  0,NUMPLIBS\n          CH   0,=AL2(NUMPLIBN)\n          BH   ENDPROCJ    MAX OF 30 DSNAMES\nJETVLST   DS   0H\n          GET  JESPROC\n          CLI  2(1),C'*'   COMMENT?\n          BE   JETVLST\n          CLI  1(1),C'*'   COMMENT?\n          BE   JETVLST\n          CLC  0(7,1),=CL7'PROCLIB'\n          BE   JETVLST\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  JREVLIB     SEE IF //PROCNN\n          LR   2,1\nJC1       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROCJ\n          BAL  14,JDELIM\n          B    JONTVLST\nJREVLIB   DS   0H\n          CLC  0(6,1),=CL6'//PROC'\n          BE   GOTJPROD\n          B   ENDPROCJ\nENDPROCJ  DS   0H\n          CLOSE JESPROC\nENDPROCK  DS    0H\n*****DEALLOCATE PROCLIB\n          MVC  JEALCDDN,=CL8'JESPROC'\n          MVC  JDMEMBER,=CL8'JES2'\n*         NI   JDDNPOID,255-X'80'  SET OFF LAST TU ON DDN\n*         OI   JDDMPOID,X'80'  SET ON  LAST TU ON MEMBER\n          LA   1,JTPOINTD      DEALLOC PROCLIB\n*         NI   JDDMPOID,255-X'80'  SET OFF LAST TU ON MEMBER\n*         OI   JDDNPOID,X'80'  SET ON  LAST TU ON DDN\n          DYNALLOC\n*******ALLOCATE PROCLIB LIBS\n          LA  1,PROCLIBS\n          MVC  WORKDSN,POFF(1)\n          ST  1,JSNPOINT\n*         MVC  JDNTXPRM,=CL8'SYSPROC'\n          MVC  JDNTXPRM,=CL8'PROCXXX'\n          OI   JSPPOINT,X'80'  SET LAST TU - NO MEMBER NAME\n          LA   1,JTPOINT       ALLOCATE PROCLIB\n          DYNALLOC\n          MVC  JSNPOINT,=A(JSNTEXT)  RESET\n          NI   JSPPOINT,255-X'80'  RESET\n          LTR  15,15\n          BNZ  JEALVLST\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n*         OPEN (SYSPROC,(INPUT))\n          OPEN (PROCXXX,(INPUT))\n          LTR  15,15\n          BNZ   JEALVLST\n*****BLDL SYSPROC\n*         LA  DCBREG,SYSPROC\n          LA  DCBREG,PROCXXX\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  JEALVLST\n           OI  WORKSW2,LOADPROC\nJEALVLST   DS   0H\n***        CLOSE  SYSPROC\n           CLOSE  PROCXXX\n*         MVC  JEALCDDN,=CL8'SYSPROC'\n          MVC  JEALCDDN,=CL8'PROCXXX'\n          LA   1,JTPOINTD      DEALLOC PROCLIB\n          DYNALLOC\n            TM  WORKSW2,LOADPROC\n            BO ENDVLSTJ\n            B  JEXTVLSA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nJEXTVLSA  DS    0H\n          LH   1,NUMPLIBS\n          LTR  1,1\n          BZ   ENDVLSTJ\n          STH  1,CURNUM\n          LA   1,PROCLIBS+L'PROCLIBS\n          ST   1,CURPLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nJDDVLSTP  DS   0H\n          ST   1,JSNPOINT\n          MVC  WORKDSN,POFF(1)\n          MVC  JDNTXPRM,=CL8'PROCXXX'\n          OI   JSPPOINT,X'80'  NO MEMBER NAME\n          LA   1,JTPOINT       ALLOCATE PROCXXX\n          DYNALLOC\n          NI   JSPPOINT,255-X'80'\n          MVC  JDNTXPRM,=CL8'JESPROC' RESET\n          LTR  15,15\n          BNZ  JEALVXXX\n          OPEN (PROCXXX,(INPUT))\n          LTR  15,15\n          BNZ   JEALVXXX\n          LA  DCBREG,PROCXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  JEALVXXX\n           OI  WORKSW2,LOADPROC\n            B  JEALVXXX\nJEALVXXX   DS   0H\n           CLOSE PROCXXX\n*****DEALLOCATE PROCXXX\n          MVC  JEALCDDN,=CL8'PROCXXX'\n          LA   1,JTPOINTD      DEALLOC PROCXXX\n          DYNALLOC\n          MVC  JEALCDDN,=CL8'JESPROC'  RESET\n          TM  WORKSW2,LOADPROC\n          BO  ENDVLSTJ\n          B  JEXTVLSB\nJEXTVLSB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLSTJ\n          STH  1,CURNUM\n          L    1,CURPLST\n          LA   1,L'PROCLIBS(1)\n          ST   1,CURPLST\n          B    JDDVLSTP\nENDVLSTJ DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,MVSSAVE\n          BR   RET\nJDELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          MVC POFF(44,3),=44C' '\n          LA   15,4(1)\n          L    14,=A(DELIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVEJTN\n          MVC  0(JALCONSL,3),JALCONS\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVEJTN   MVC POFF(0,3),0(15)\nJALCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nJALCONSL EQU  *-JALCONS\nJESPROC DCB DSORG=PS,MACRF=GL,DDNAME=JESPROC,EODAD=ENDPROCJ\nPROCXXX DCB DSORG=PO,MACRF=(R),DDNAME=PROCXXX\n         DS  0D\nFILL    DC   CL8'JTPOINT'\n******TO ALLOC SYS1.PROCLIB\n         DS  0D\nJTPOINT  DC   A(JBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   JTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nJBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(JBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\nJBTXTPP  DC    A(JXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nJBEL     EQU   *-JBS\n* TEXT POINTERS  FOR ALLOCATION\nJXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nJDNPOINT DC   A(JDNTEXT)    DDN TU\nJSNPOINT DC   A(JSNTEXT)    DSN TU\nJSPPOINT DC   A(JSSPTEXN)   DISP TU\nJSMPOINT DC   A(JSMTEXT)    MEMBER TU\n         ORG  JSMPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nJDNTEXT  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\n         DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDNTXPRM)  LENGTH OF PARM\nJDNTXPRM DC    CL8'JESPROC'  DDNAME\n**DSN  TEXT UNIT\nJSNTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JSNTXPRM)   LENGTH OF PARM\nJSNTXPRM DC    CL44'SYS1.PROCLIB'   DSNAME\n*SNTXPRM DC    CL44'SYS1.ZOS19.PROCLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nJSMTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JSMTXPRM)   LENGTH OF PARM\nJSMTXPRM DC    CL8'JES2    '     MEMBERNAME\n**DISP TEXT UNIT\nJSSPTEXN  DS    0F   DSP TEXT UNIT\nJISPTEXT  EQU   *\n         DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\n          DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n          DC    AL2(L'JSSPTXPR)  LENGTH OF PARM\nJSSPTXPR DC    X'08'  DISP=SHR\n***FOR DEALLOCATION\n          DS   0D\nJTPOINTD DC   A(JBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   JTPOINTD  S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nJBSD    DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n          DC    AL1(JDBELD)  LEN OF RB\n          DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\n          DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n          DS    X       2ND   FLAG BYTE\n          DS    XL2     ERROR REASON CODE\n          DS    XL2     INFO  REASON CODE\n          DC    A(JDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nJDBELD     EQU   *-JBSD\n* TEXT POINTERS  FOR DEALLOCATION\nJDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\nJDDNPOID DC   A(JNDNTEXD)  DDN TU\n         ORG JDDNPOID   FOR LAST TU\n         DC  X'80'\n         ORG\nJDDSPOID DC  A(JSNTEXT)  DSN    TU\nJDDMPOID DC  A(JDDMTEXD) MEMBER TU\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nJNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDNTXPRM)  LENGTH OF PARM\nJEALCDDN DC    CL8'JESPROC'  DDNAME\nJDDMTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDMEMBER)  LENGTH OF PARM\nJDMEMBER DC    CL8'JES2'  MEMBER NAME\nDSNADD   DS    F\nHASPNAME  DC   CL44' '\nHASPMEMB  DC   CL8' '\n          DC   CL8' '\nHASPSW    DC   X'00'\nJESPNAME  DC   CL44'SYS1.PROCLIB'\n*ESPNAME  DC   CL44'SYS1.ZOS19.PROCLIB'\nJESPMEMB   DC  CL8'JES2'\n          LTORG\n          DROP  LINKREG\n          EJECT\n***************************************\n****\nTRTAB    DS   0C\n        USING *,1\n      DC   256AL1(*-TRTAB)\n         ORG  TRTAB\n          DC  X'40'\n         ORG  TRTAB+X'81'\n         DC   C'ABCDEFGHI'\n         ORG  TRTAB+X'91'\n         DC   C'JKLMNOPQR'\n         ORG  TRTAB+X'A2'\n         DC   C'STUVWXYZ'\n         ORG TRTAB+C')'\n         DC   X'40'\n         ORG\n          LTORG\n          DROP  1\n*******************\n***************************************\n*******************\nTRANTAB  DS   0H\n         USING *,1\nTRTTAB   DC   256X'FF'      ALPHA CHARS GO IN AS LOWER CASE\n         ORG  TRTTAB+X'81'\n         DC   9X'00'   A-I\n         ORG  TRTTAB+X'91'\n         DC   9X'00'   J-R\n         ORG  TRTTAB+X'A2'\n         DC   9X'00'   S-Z\n         ORG  TRTTAB+C'A'\n         DC   9X'00'   A-I\n         ORG  TRTTAB+C'J'\n         DC   9X'00'   J-R\n         ORG  TRTTAB+C'S'\n         DC   9X'00'   S-Z\n         ORG  TRTTAB+C'0'\n         DC  10X'00'   0-9\n         ORG\n         LTORG\n         DROP  1\n         LTORG\n        EJECT\nSBATAB   DS   0C\n         USING *,1\nSBA1       EQU  *\n          SBA  3,1\nSBAL       EQU  *-SBA1\n          SBA  4,1\n          SBA  5,1\n          SBA  6,1\n          SBA  7,1\n          SBA  8,1\n          SBA  9,1\n          LTORG\n          DROP  1\nDELIMTAB DS   0C\n         USING *,1\n         DC   256X'00'\n          ORG  DELIMTAB\n          DC   X'FF'\n          ORG  DELIMTAB+C' '\n          DC   X'FF'\n          ORG  DELIMTAB+X'50'\n          DC   X'FF'\n          ORG  DELIMTAB+C','\n          DC   X'FF'\n          ORG  DELIMTAB+C'('\n          DC   X'FF'\n          ORG  DELIMTAB+C')'\n          DC   X'FF'\n          ORG\n          LTORG\n          DROP  1\nDALIMTAB  DS  0C\n         USING *,1\n         DC   256X'00'\n          ORG  DALIMTAB\n          DC   X'FF'\n          ORG  DALIMTAB+C' '\n          DC   X'FF'\n          ORG  DALIMTAB+C','\n          DC   X'FF'\n          ORG  DALIMTAB+C'('\n          DC   X'FF'\n          ORG  DALIMTAB+C')'\n          DC   X'FF'\n          ORG\n          LTORG\n          DROP  1\n          EJECT\nALPHTAB DS   0C\n         USING *,1\n         DC   256X'00'\n          ORG  ALPHTAB+X'C1'\n          DC  9X'FF'\n          ORG  ALPHTAB+X'D1'\n          DC  9X'FF'\n          ORG  ALPHTAB+X'E2'\n          DC  8X'FF'\n          ORG\n          LTORG\n          DROP  1\n         END                                                            COP00620\n/*\n//*2  EXEC DFH6LNK6,MOD=WMOD,LNKLIB='XCICS.CICS620.TEST',\n//S2  EXEC DFH6LNK6,MOD=WMOD,LNKLIB='XCICS.CICS680.TEST',\n//  AMODE=24,RMODE=24\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMODCIC1": {"ttr": 5642, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x07O\\x01\\x01\\x07O\\x18$\\n\\xbf\\n\\xbf\\x00\\x00\\xd6\\xd3\\xc4@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-15T00:00:00", "modifydate": "2001-03-15T18:24:00", "lines": 2751, "newlines": 2751, "modlines": 0, "user": "OLD"}, "text": "//ASMWMOD JOB (A006,SYCI,0002,0099,001),BARKOW,CLASS=J,MSGLEVEL=1,\n// USER=EILEEN,MSGCLASS=A,PASSWORD=IIIIII\n/*ROUTE PRINT CSCVM.EXBCSC\n/*NOTIFY  CSCVM.EXBCSC\n/*JOBPARM SYSAFF=MVSW\n//STP1  EXEC DFH5ASM5,COPYLIB='EILEEN.MACLIB',SYSPARM=53\n//*TP1  EXEC DFH4ASM4,COPYLIB='EILEEN.MACLIB',SYSPARM=41\n//*ASM XOPTS(CICS  SP     NOPROLOG   SPIE NOEPILOG)   FOR V4\n//**V2 TRANSLATOR MAY PUT OUT COND CODE 12-IGNORE IT\n//*TP1  EXEC DFH2ASMC,COPYLIB='EILEEN.MACLIB',SYSPARM=21\n//TRN.SYSIN   DD  *\n*ASM XOPTS(CICS         NOPROLOG   SPIE NOEPILOG)\n         AMODE 24\n         RMODE 24\nBASE     EQU   11                                                       COP00220\nLINKREG   EQU  8\nLINKREG2  EQU  7\nRET      EQU  10\nRET2     EQU  9\nTCTTEAR  EQU   9                                                        COP00230\nTIOABAR  EQU   7                                                        COP00240\nTCSYSBAR EQU   1\nEIBREG    EQU  2\nDATAREG   EQU  6\nPRVREG   EQU   5    PRVMOD LIST\nCVTREG    EQU  1\nLPDEREG   EQU  2\nDCBREG    EQU  2\nLENREG     EQU  3\nDEBREG    EQU  3\nLLTREG    EQU  3\nTIOTREG   EQU  4\nARLREG    EQU  4\nSITREG    EQU  4\nINREG     EQU  4\nCSAREG    EQU  13\nJSCBREG   EQU  15\nJFCBREG   EQU  15\nDCTCBAR   EQU  15\nTCBREG    EQU  5\nOPFLREG   EQU  5\n         PRINT OFF,NOGEN\n        DCBD  DSORG=PO\nDCBLEN  EQU  *-IHADCB\n         PRINT OFF,NOGEN\nARL    IHAARL  DSECT=YES,PREFIX=ARL,DESCR=YES\nARLENGTH EQU  *-ARL\nTIOT     DSECT\n        IEFTIOT1\nTIOTOFF   EQU  TIOENTRY-TIOT\nXIOT      DSECT\n     ORG XIOT+TIOELNGH-TIOENTRY\nXIOELNGH  DS   XL(L'TIOELNGH)\n     ORG  XIOT+TIOEDDNM-TIOENTRY\nXIOEDDNM  DS  CL(L'TIOEDDNM)\n     ORG  XIOT+TIOEJFCB-TIOENTRY\nXIOEJFCB  DS   XL(L'TIOEJFCB)\nJFCB     DSECT\n         IEFJFCBN LIST=YES\nDEBBASIC  IGGDEBD\n          IKJTCB  LIST=YES,DSECT=YES\n          IEZJSCB\nARAD    DSECT\nARALEN   DS   H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4\n***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)\n         DS   XL2  RESERVED\nARAJFCB  DS    CL176   JFCB\nARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL\n        CVT   DSECT=YES,LIST=YES\n          IHALPDE\nLPDELEN    EQU   *-LPDE\nLLTE      DSECT\n          DS   X\nLLTDSN    DS  CL44\nLLTLEN    EQU  *-LLTE\nLLTOFF    EQU  8    OFFSET TO FIRST LLTE\n         EJECT\n         PRINT ON,GEN\n         IGWSMDE\n         EJECT\n* DYNAMIC OPEN/CLOSE REQUEST FORMAT\n* DYNAMIC ALLOCATION DSECTS\n         IEFZB4D0\n         IEFZB4D2\nRBLEN  EQU  (S99RBEND-S99RB)\n         EJECT\n          COPY DFHDCTDS\n         PRINT ON,GEN\n         COPY  DFHCSADS                                                 COP00070\n         DFHAFCD TYPE=DSECT\n         DFHTCA  CICSYST=YES      SYSTEM T C A   AND USER EB MOD\n         COPY  DFHTCTTE                                                 COP00100\n         DFHSIT TYPE=DSECT\nPRVLIST   DSECT  PRVMOD LIST ..SITPRVMA\nPRVLEN    DS   F\nPRVNUM    DS   F\nPRVENTRY  DS   CL8    FOR EACH ENTRY\n         COPY  DFHTIOA                                                  COP00110\nBUFFER   DS   80F\n         ORG   TIOADBA                                                  COP00130\nINITINP  DS    0F                                                       COP00140\nTRANSID  DS    CL4                                                      COP00150\nBLNK     DS    C                                                        COP00160\nPROGRAM  DS    CL8                                                      COP00170\n          DFHEISTG\nSAVELINK DS   18F\nSAVEREG2 DS   18F\nSAVEMAC  DS   18F\nMVSSAVE  DS   18F\nRTNSAVE  DS   18F\nSAVER13  DS    F\nTCAADDR  DS    F\nCSAADDR  DS    F\nTCTADDR  DS    F\nTIOADDR  DS    F\nEIBADDR  DS    F\nDATAADDR DS    F\nRPLADDR  DS    F\nTCBADDR   DS   F\nTIOTADDR  DS   F\nDEBADDR   DS   F\nDCBADDR   DS   F\nRETADDR    DS   F\nRECADDR    DS   F\nLASTSBA    DS  F\nCURVLST    DS  F\nCURPLST    DS  F\nCURNUM     DS  H\nLPADSNSA   DS  F\nLPADSNTL  EQU 45  LENGTH OF EACH ENTRY\nLPADSNAL    EQU LPADSNTL*40       40 ENTRIES 45 BYTES LONG\nLASTIN    DS   F\nLASTLPA   DS   F\nLASTCONA  DS   F\nNEXTCONA  DS   F\nENDOFLPA  DS   F\nENDORECA  DS   F\nLASTBLOC  DS   F\nENDBLOCK DS   F\nREADAREA DS   F\nMSL      DS    H\nLEN      DS    H\nLRECL    DS    H\nBLKSIZE  DS    H\nWORKPROG  DS   CL8\nWORKDSN   DS   CL44\nVTAMDSN   DS   CL44\nLPADSN   DS   CL44\nWORKDDN   DS   CL8\nWORKQUE   DS   CL4\nWORKDQE   DS   CL8\nSYSNAME    DS   CL4\nLPACONST   DS   CL20\nSYSPARM    DS   CL2\nSYSCLONE   DS   CL2\nWORKADDR   DS   F\nDFHADDR    DS   F\nWORKCDDR   DS   CL8\nWORKALIS   DS   CL8\nERRSW     DS   X\nRELSW     DS   X\nWORKSW    DS   X\nNOLPA     EQU  X'01'\nNOPPT     EQU  X'02'\nFOUND     EQU  X'04'\nLOADSVC   EQU  X'08'\nLOADLPA   EQU  X'10'\nLOADSTEP  EQU  X'20'\nLOADLINK  EQU  X'40'\nLOADRPL   EQU  X'80'\nWORKSW2   DS    X\nLOADVLST  EQU  X'01'\nLOADVLIB  EQU  X'02'\nLOADPROC  EQU  X'04'\nLOADLPAN  EQU  X'10'\n**********************\nWORKSW3  DS  X\nREADSPRM EQU  X'01'\nREADZPRM EQU  X'02'\nDIDLCONS EQU  X'04'\nDIDSNAME EQU  X'08'\n*****************\n**********************\nOUTLINE  DS    0C\nOUTPROG   DS   CL8\nOUTPUNC   DS  CL2\nOUTCON   DS   0C\n***       DC  X'11C2601DC0'  ROW3 COL1\n         SBA  3,1\n          ORG  OUTCON+1\nOUTSBA   DS  XL2\n          ORG\nPROGCON  DS  CL8\nLOADCON  DC C' IS IN DDN   '\nDDNCON   DS  CL8\n         DS   C\nDSNCON   DS  CL42\n         ORG DSNCON\nDSNCONAT  DS  CL4\nDSNCDDR   DS  CL8\nDSNCONAL  DS  CL11\nDSNALIS   DS  CL8\nDSNCONAP  DS  C\n          ORG\nATCONL    EQU  *-DSNCONAT\nLPACON    DC C' NOT LOADED FROM LPA'\nOUTCONL   EQU  *-OUTCON\nWARLAREA  DS  CL(ARLENGTH)\nWXJFCB   DS    0F                                                       JFC00600\n         DC   X'13'           FOR LAST ENTRY                            JFC00610\nWXADD    DC   AL3(WARLAREA)                                             JFC00620\nWDCB     DS CL(DCBLEN)                                                       JFC\nWDJLIST  RDJFCB  (2),MF=L\n         ORG   *-3\nWDJDCBA  EQU  *   ADDR OF DCB\n         DS   AL3   PUT DCB ADDR HERE\n         ORG\nVDNTEXT  DS  CL18\nVSNTEXT  DS  CL18\nVSPTEXT  DS  CL18\nVSW      DS   X\nNUMVLIBS DS   H\nNUMVLIBN EQU  25\nVTAMLIBS DS  (NUMVLIBN)CL50 UP TO 10  DSNAMES\n          ORG  VTAMLIBS       SET UP DYNALLOC DSN TU\nVLEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nVLUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nVLLEN    DC    AL2(44)   LENGTH OF PARM\nVLARM    DC    CL44'SYS1.VTAMLST'   DSNAME\nNUMVLSTS DS   H\nNUMVLSTN   EQU 10\n         DS  0F\nVTAMLSTS DS  (NUMVLSTN)CL50 UP TO 8   DSNAMES\n          ORG  VTAMLSTS       SET UP DYNALLOC DSN TU\nVKEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nVNUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nVPLEN    DC    AL2(44)   LENGTH OF PARM\nVOFF     EQU   *-VKEY     OFFSET TO DSNAME\nVPARM    DC    CL44'SYS1.VTAMLIB'   DSNAME\n          ORG  NUMVLIBS\nNUMLPAS  DS   H\nNUMLPAN  EQU  25\nLPALIBS DS  (NUMLPAN)CL50 UP TO 25  DSNAMES  PER LPALST ENTRY\n          ORG  LPALIBS       SET UP DYNALLOC DSN TU\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nLPAOFF   EQU  *-LPALIBS    OFFSET TO DSNAME\nLLARM    DC    CL44'SYS1.LPALIB'   DSNAME\n          ORG\nLPAHLEN   EQU  *-LPALIBS\n          ORG  NUMVLIBS\nNUMPLIBS DS   H\nNUMPLIBN EQU  25\nPROCLIBS DS  (NUMPLIBN)CL50 UP TO 28  DSNAMES\n          ORG  PROCLIBS       SET UP DYNALLOC DSN TU\nPLEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nPLUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nPLLEN    DC    AL2(44)   LENGTH OF PARM\nPOFF     EQU  *-PROCLIBS   OFFSET TO DSNAME\nPLARM    DC    CL44'SYS1.PROCLIB'   DSNAME\n          ORG\nBLDLLIST  DS   0H\nBLDLNUM   DS   H   NUMBER OF ENTRIES\nBLDLLEN  DS   H   LEN OF EACH ENTRY\nBLDENTRY  EQU  *\nBLDLNAME  DS  CL8\nBLDLTTR   DS  XL3\nBLDLCCAT  DS  X   CONCAT NUMBER RETURNED BY BLDL\nBLDLZ     DS  X   WHERE ENTRY FOUND\nBLDLELEN  EQU  *-BLDENTRY  LEN OF EACH ENTRY\n          DS   0F\nDSERVOUT  DS   F\nDSERVLEN  DS   F\nNUMMEMBS  DS  F\nCURMEMBS  DS  F\nLOADMEMB  DS  CL8\nIEASYS   DS  CL8\nLPALST   DS  CL8\n         DFHEIEND\n         PRINT ON,GEN\n*********************************************************************** COP00210\n*********************************************************************** COP00250\n* NAME: WMOD                                                            COP00290\n* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310\n*                                                                       COP00420\n**********************************************************************  COP00430\nWMOD     DFHEIENT CODEREG=BASE,DATAREG=DATAREG,EIBREG=EIBREG            COP00440\nBEGIN    DS    0H\n         ST    EIBREG,EIBADDR       TCA ADDR\n         ST    DATAREG,DATAADDR     TCA ADDR\n         ST    13,SAVER13\n***       L     13,DFHEIRS1          CSA\n          DFHCSAD TYPE=LOCATE,REG=13\n          ST    13,CSAADDR\n        USING DFHCSADS,13\n          MVC  RELSW,CSACIREL\n           CLI RELSW,X'32'\n           BL   SKIPSETM\n          SETM  ON\nSKIPSETM  DS   0H\n          L    TCACBAR,CSACDTA          TCA USER\n         DROP  13\n         ST    TCACBAR,TCAADDR           TCA ADDR\n         L     TCTTEAR,TCAFCAAA     LOAD TCT BASE                       COP00470\n         ST    TCTTEAR,TCTADDR\n         L     TIOABAR,TCTTEDA      LOAD TIOA BASE                      COP00480\n         ST    TIOABAR,TIOADDR\n         XR    5,5                 CLEAR REG 5                          COP00490\n         MVC    WORKPROG,PROGRAM\n         L     15,=A(TRTAB)        TRANSLATE 00 TO BLANK\n         TR  WORKPROG,0(15)\n          SETM   OFF\n          MVC  LASTSBA,=A(SBATAB)\n*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA\n         L   LINKREG,=A(CHKSLIB)\n        BALR  RET,LINKREG\n         TM   WORKSW,LOADSTEP\n         BO   DOSTEP       IS IN STEPLIB/JOBLIB\n          B   TESTSVC\nTESTSVC   DS   0H\n         TM   WORKSW,LOADSVC\n         BNO  TESTLINK       CHECK LINKLIST\n         MVC WORKDSN,SVCDSN\n         MVC WORKDDN,=CL8'SVCLIB'\n         MVC  RETADDR,=A(TESTLINK)\n         B    PUTOUT\nDOSTEP   DS   0H\n         XC   RETADDR,RETADDR\n         XC   WORKDSN,WORKDSN\n         XC   WORKDDN,WORKDDN\n         L    LINKREG,=A(RDJFCB)\n         ICM  LINKREG,8,=X'FF'   SIGNAL ROUTINE\n        BALR  RET,LINKREG\n         MVC   WORKDDN,=CL8'STEPLIB'\n          MVC  RETADDR,=A(TESTSVC)\n         B     PUTOUT    IF NOT STEPLIB SEARCH LINKLIST\nTESTLINK  DS   0H\n           TM  WORKSW,LOADLINK\n          BO   DOLINK\n          B   TESTLPA\nDOLINK   DS    0H\n          XC   WORKDDN,WORKDDN\n          XC   WORKDSN,WORKDSN\n         L    LINKREG,=A(SRCHLINK)\n        BALR  RET,LINKREG\n         MVC   WORKDDN,=CL8'LINKLIB'\n          MVC  RETADDR,=A(TESTLPA)\n          B    PUTOUT\nTESTLPA    DS   0H   CHECK IF MODULE IN LPA\n          L    LINKREG,=A(SRCHSIT)  SEE IF LPA=YES OR PRVMOD\n          BALR RET,LINKREG\n***        B    DOLPA\nDOLPA      DS   0H\n          XC   WORKADDR,WORKADDR\n          MVC  WORKDDN,=CL8'LPALIB'\n          L    LINKREG,=A(SRCHLPA)\n          BALR RET,LINKREG\n          TM  WORKSW,LOADLPA\n           BNO TESTVTAM       TEST VTAMLIST AND VTAMLIB\n*         MVC RETADDR,=A(TESTVTAM)\n          MVC RETADDR,=A(NAMELPA)\n          MVI  WORKDSN,X'00'\n          B   PUTOUT\nNAMELPA   DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHPLIB)  SEARCH PARMLIB FOR LPA NAMES\n          BALR RET,LINKREG           SEARCH LPA DSNS FOR MEMBER\n          TM  WORKSW2,LOADLPAN\n           BNO TESTVTAM       TEST VTAMLIST AND VTAMLIB\n          MVC RETADDR,=A(TESTVTAM)\n          B   PUTOUT\nTESTVTAM DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHNET) VTAM DSNS FROM SYS1.PROCLIB(NET)\n          BALR RET,LINKREG\n           B    DOVTAM\nDOVTAM     DS   0H\n          MVC  WORKDDN,=CL8'VTAMLST'\n          MVC RETADDR,=A(DOVLIB)\n          TM  WORKSW2,LOADVLST\n          BO  PUTOUT\n          B   DOVLIB\nDOVLIB    DS   0H\n          MVC  WORKDDN,=CL8'VTAMLIB'\n***       MVC RETADDR,=A(TESTRPL)\n          MVC RETADDR,=A(TESTPROC)\n          MVC WORKDSN,VTAMDSN\n          TM   WORKSW2,LOADVLIB\n          BO  PUTOUT\n*         B   TESTRPL\n          B   TESTPROC\nTESTPROC  DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHJES2) PROCLIB DSNS FROM JES2 PROC\n          BALR RET,LINKREG\n          MVC  WORKDDN,=CL8'SYSPROC'\n          MVC RETADDR,=A(TESTRPL)\n          TM  WORKSW2,LOADPROC\n          BO  PUTOUT\n          B   TESTRPL\nTESTRPL  DS   0H\n****LOCATE DCB FOR DFHRPL AND ISSUE BLDL FOR GIVEN MODULE\n         MVC  WORKDDN,=CL8'DFHRPL'\n         XC   BLDLTTR,BLDLTTR\n         XC   WORKDSN,WORKDSN\n         L   LINKREG,=A(FINDDCB)\n        BALR  RET,LINKREG\n         TM   WORKSW,LOADRPL\n         BNO  NOPROG       PROGRAM NOT IN DFHRPL\n         B    DORPL\nDORPL    DS    0H\n****READ JFCBS FOR DFHRPL AND EXTRACT DSN IN CONCATENATION****\n         L   LINKREG,=A(RDJFCB)\n        BALR  RET,LINKREG\n         CLI   WORKDSN,X'00'\n         BE    NOPROG\n         MVC   RETADDR,=A(WHERLOAD)\n         B     PUTOUT\nNOPROG   DS   0H\n          TM  WORKSW,FOUND\n          BO  WHERLOAD    FIGURE OUT WHERE LOADED FROM\n         MVC  OUTCON(ERRMESSL),ERRMESS\n         MVC  PROGCON,WORKPROG\n         MVC  MSL,=AL2(ERRMESSL)\n          XC  RETADDR,RETADDR\n          B   DOSEND\nWHERLOAD  DS   0H\n           MVC MSL,=AL2(FINL)\n***IF PPT ENTRY AND LOAD MOD IN RPL, AND NOT IN LPA, ASSUME\n***LOADED FROM RPL, EVEN IF IN STEPLIB OR LINKLIST\n          MVC FINLIB,=CL8'DFHRPL'\n          TM  WORKSW,LOADRPL    IS MODULE IN RPL\n           BNO MAYBELPA         NO...\n          TM  WORKSW,NOPPT      IS MODULE NOT IN PPT\n          BO   MAYBELPA          YES..\n           TM  WORKSW,LOADLPA   IS MOD ALSO IN LPA\n          BNO  PUTFIN             NO..ASSUME RPL\n           TM  WORKSW,NOLPA  NO..LPA SPECIFIED\n          BO   PUTFIN     YES..THEN RPL\n           B   MAYBELPA   MAY STILL BE LOADED FROM LPA\nMAYBELPA  DS   0H\n           MVC  FINLIB,=CL8'LPALIB'\n          TM   WORKSW,LOADLPA    IS MODULE IN LPA\n           BNO  MAYBESTP          NO..\n           MVC  FINSOURC,WORKPROG\n           CLC WORKPROG,=CL8'DFHIRP'  DFH MOD\n            BE  PUTFIN\n           CLC WORKPROG,=CL8'DFHCSVC' DFH MOD\n            BE  PUTFIN\n           CLC WORKPROG(3),=CL3'DFH'  DFH MOD\n           BNE PUTFIN    ASSUME IN LPA IF NOT DFH\n           L   LINKREG,=A(SRCHCSA)    LOCATE ADDR OF MODULE\n           BALR RET,LINKREG      TO DETERMINE IF REALLY FROM LPA\n           CLI  FINLIB,C' '\n            BE MAYBESTP\n           B   PUTFIN\nMAYBESTP  DS   0H\n           MVC  FINLIB,=CL8'STEPLIB'\n           TM  WORKSW,LOADSTEP\n           BO   PUTFIN\n           MVC  FINLIB,=CL8'LINKLIB'\n           TM  WORKSW,LOADLINK\n            BO  PUTFIN\n           MVC  FINLIB,=CL8'SVCLIB'\n           TM   WORKSW,LOADSVC\n            BO  PUTFIN\n           TM  WORKSW,NOLPA          LPA=NO\n           BO   MAYBERPL\n            TM  WORKSW,LOADLPA\n             BO  SETLPAY\n           B    MAYBERPL\nMAYBERPL   DS   0H\n           MVC  FINLIB,=CL8'DFHRPL'\n           TM   WORKSW,LOADRPL\n            BO  PUTFIN\nSETLPAY     DS   0H\n           MVC  FINLIB,=CL8'LPALIB'\n           TM   WORKSW,LOADLPA\n            BO  PUTFIN\n           MVC  FINLIB,=CL8'VTAMLST'\n           TM   WORKSW2,LOADVLST\n            BO  PUTFINS\n           MVC  FINLIB,=CL8'VTAMLIB'\n           TM   WORKSW2,LOADVLIB\n            BO  PUTFIN\n           MVC  FINLIB,=CL8'PROCLIB'\n           TM   WORKSW2,LOADPROC\n            BO  PUTFINS\n           MVC  FINLIB,=CL8' '\n           B    PUTFIN\nPUTFINS   DS   0H\n           MVC FINSOURC,=CL6'SOURCE'\nPUTFIN    DS   0H\n   EXEC CICS SEND FROM(FINOUT) LENGTH(MSL)  WAIT\n         MVC  FINSOURC,BLANKS\n         B   RETURN\nPUTOUT   DS   0H\n          OI   WORKSW,FOUND\n         MVC   OUTCON(CONOUTL),CONOUT\n          L    1,LASTSBA\n           MVC  OUTSBA,1(1)\n         MVC   PROGCON,WORKPROG\n         MVC  DDNCON,WORKDDN\n         MVC  MSL,=AL2(CONOUTL)\n         CLI  WORKDSN,X'00'\n         BE   *+14\n         MVC  DSNCON,WORKDSN\n          B   DOSEND\n****     MVC  DSNCONAT(ATCONL),BLANKS\n         MVC  DSNCON(3),=CL3'AT '\n         MVC  DSNCON+4(L'WORKCDDR),WORKCDDR\n         CLI  WORKALIS,X'00'\n          BE  DOSEND\n          MVC DSNCONAL,=C' (ALIAS OF '\n          MVC DSNALIS,WORKALIS\n          MVI  DSNCONAP,C')'\n          B   DOSEND\nDOSEND   DS    0H\n      EXEC CICS SEND FROM(OUTCON) LENGTH(MSL)\n          L  1,LASTSBA\n          LA  1,5(1)\n          ST  1,LASTSBA\n         OC  RETADDR,RETADDR\n         BZ   RETURN\n          L   1,RETADDR\n         BR   1\nRETURN   DS   0H\n         EXEC CICS RETURN\nERRMESS  DS    0C\n****      DC  X'11C2601DC0'  ROW3 COL1\n         SBA  3,1\nERRPROG  DS   CL8\n        DC C' NOT FOUND        '\nERRMESSL EQU  *-ERRMESS\nBLANKS   DC  30C' '\nCONOUT   DS   0C\n***       DC  X'11C2601DC0'  ROW3 COL1\n         SBA  3,1\nCONPROG  DS  CL8\n         DC C' IS IN DDN   '\nCONDDN   DC  CL8' '\n          DC  C' '\nCONDSN   DC  CL42' '\nCONOUTL  EQU  *-CONOUT\nSVCDSN   DC  CL(L'WORKDSN)'SYS1.SVCLIB'\nCONLPA  DC  C' NOT LOADED FROM LPA'\nFINOUT   DS   0C\n***       DC  X'11C2601DC0'  ROW3 COL1\n         SBA  20,13\nFINSOURC  DC  CL8' '\n         SBA  20,20\n         DC  C' MODULE LOADED FROM '\nFINLIB    DS  CL8\nFINL     EQU  *-FINOUT\n         LTORG\n          EJECT\nRDJFCB  DS   0H\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n        LA  13,SAVEMAC\n         MVC  WARLAREA(ARLENGTH),CRL       MOVE TO DYNAMIC STORAGE\n         LA   ARLREG,WARLAREA\n         STCM  ARLREG,7,WXADD  STORE ADDR OF JFCBAREA IN EXLIST\n         USING ARL,ARLREG\n         MVC   ARLRETRV,=H'1'  ONLY WANT INFO FOR 1 DATASET\n         SR    0,0\n         IC    0,BLDLCCAT   RELATIVE CONCAT NUMBER\n         AH    0,=H'1'    ACTUAL CONCAT NUMBER\n         STH   0,ARLFIRST    DS   WITH THIS CONCAT NUMBER\n          DROP  ARLREG\n         MVI  WXJFCB,X'13'   CODE FOR CONCATENATION EXIT\n          MVC  WDCB,OPEJFCB  MOVE DCB\n          CLM   LINKREG,8,=X'FF'\n          BNE  *+10\n          MVC  WDCB,STEPDCB\n          LA   1,WDCB\n         USING IHADCB,1\n         LA  2,WXJFCB   RESET EXLST ADDR IN DCB\n         ST   2,DCBEXLST\n         DROP   1\n         MVC  WDJLIST,RDJLIST   MOVE RDJFCB LIST TO WORK AREA\n         LA   2,WDCB\n         STCM 2,7,WDJDCBA    STORE DCB ADDR IN RDJFCB LIST\n         LA   1,WDJLIST\n      RDJFCB   0(2),MF=(E,(1))                                          JFC00420\n         LTR  15,15\n         BNZ   ENDJFCB\n        B   PROCJFCB\nPROCJFCB DS   0H  FIND JFCB FOR CONCAT NUMBER FROM BLDL\n         LA   ARLREG,WARLAREA\n         USING ARL,ARLREG\n          L    1,ARLAREA  RESPONSE FROM RDJFCB\n          USING ARAD,1\n          LA   JFCBREG,ARAJFCB\n          DROP   1\n          USING JFCB,JFCBREG\n          MVC  WORKDSN,JFCBDSNM    SAVE DSNAME\n          B    FREEJFCB\nFREEJFCB DS   0H   FREE ARA\n****ISSUE FREEMAIN FOR STORAGE AREAS*****\n      SR  2,2\n      IC  2,ARLPOOL SUBPOOL\n      L   3,ARLAREA  ADDR OF ARA\n       SR   0,0\n      ICM  0,7,ARLRLEN\n       DROP  ARLREG\n   FREEMAIN RU,LV=(0),SP=(2),A=(3)\n       B  ENDJFCB\nGETOUT  DS   0H\n   EXEC CICS RETURN\nENDJFCB DS   0H\n        LM   14,12,SAVELINK+12\n        L    13,SAVER13\n        BR    RET\n***ALLOCATION RETRIEVAL LIST\nCRL  IHAARL  DSECT=NO,PREFIX=CRL,DESCR=NO\nEXJFCB   DS    0F                                                       JFC00600\n         DC   X'13'           FOR LAST ENTRY                            JFC00610\nEXADD    DS   AL3(CRL)                                                  JFC00620\nOPEJFCB   DCB   DDNAME=DFHRPL,EXLST=EXJFCB,MACRF=(E)                         JFC\nSTEPDCB   DCB   DDNAME=STEPLIB,EXLST=EXJFCB,MACRF=(E)                         JF\nRDJLIST    RDJFCB   (2),MF=L\n         DROP  LINKREG\n         LTORG\n         EJECT\nFINDDCB  DS   0H\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n         LA   13,SAVEMAC\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n         LR  TCBREG,1\n         B    NEXTTCB2\n         USING TCB,TCBREG\nNEXTTCB  DS   0H\n         L    TCBREG,TCBBACK  PREV TCB\nNEXTTCB2 DS    0H\n         LTR  TCBREG,TCBREG\n         BZ    RETDCB\n         ST   TCBREG,TCBADDR\n**CHECK IF DFHSIP TCB\n         L    JSCBREG,TCBJSCB\n         USING IEZJSCB,JSCBREG\n         CLC  JSCBPGMN,=CL8'DFHSIP'\n         BNE  RETDCB\n         DROP  JSCBREG\n         L    TIOTREG,TCBTIO   TIOT\n         ST   TIOTREG,TIOTADDR\n         L    DEBREG,TCBDEB    DEB QUEUE\n         ST   DEBREG,DEBADDR\n         DROP  TCBREG\n         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY\n         USING  XIOT,TIOTREG\n         SR    0,0\nFINDTIOT  DS   0H\n         CLI   XIOELNGH,X'00'\n         BE    RETDCB\n         CLC   XIOEDDNM,=CL8'DFHRPL'\n         BE   GOTRPL\n         IC  0,XIOELNGH   LEN OF ENTRY\n         AR   TIOTREG,0    NEXT ENTRY\n         B    FINDTIOT\n***LOCATE DFHRPL IN TIOT\nGOTRPL   DS    0H\n         ST   TIOTREG,RPLADDR\n****LOCATE DEB FOR DFHRPL****\n****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING RPLADDR\n         L    DEBREG,DEBADDR\n         USING DEBBASIC,DEBREG\n         B     FINDDEB\nNEXTDEB   DS    0H\n          CLC   DEBDEBAD+1(3),=XL3'000000'\n          BZ   NEXTTCB\n          L    DEBREG,DEBDEBAD     NEXT DEB\nFINDDEB   DS    0H\n       CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?\n         BNE   NEXTTCB\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   NEXTDEB          NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?\n          BNO  NEXTDEB         NO....\n         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB\n          L    1,TIOTADDR\n         AR    1,0         TIOT ADDR FOR THIS ENTRY\n          C    1,RPLADDR   SAME AS FOR DFHRPL\n          BE   GOTDCB     YES\n          B    NEXTDEB\nGOTDCB    DS    0H\n          ST  DCBREG,DCBADDR  DFHRPL DCB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  ENDFDCB\n           OI  WORKSW,LOADRPL\n          B   ENDFDCB\nENDFDCB  DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\nRETDCB   DS   0H\n         L   13,SAVER13\n         EXEC CICS RETURN\n          LTORG\n         DROP  LINKREG,TIOTREG,TCBREG,DEBREG,DCBREG\n          EJECT\nCHKSLIB   DS   0H   CHECK IF MODULE IN JOBLIB OR STEPLIB\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n***SEE IF PROG IN PPT\n           L   13,SAVER13\n   EXEC CICS HANDLE CONDITION ERROR(NOTINPPT)\n   EXEC CICS INQUIRE PROGRAM(WORKPROG)\n           B  GOSTEP\nNOTINPPT   DS   0H\n           OI  WORKSW,NOPPT\n           B  GOSTEP\nGOSTEP    DS   0H\n          LA    13,SAVEMAC\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n          ST  1,TCBADDR\n           USING TCB,1\n            L   DCBREG,TCBJLB\n            DROP  1\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKSVC\n           OI  WORKSW,LOADSTEP\n          B   CHKSVC\nCHKSVC    DS   0H\n          L   CVTREG,16\n           USING CVT,CVTREG\n           L   DCBREG,CVTSVDCB  DCB FOR SYS1.SVCLIB\n           DROP  CVTREG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKLINK\n           OI  WORKSW,LOADSVC\n          B   CHKLINK\nCHKLINK   DS   0H\n          L    CVTREG,16\n          USING CVT,CVTREG\n***ISSUE BLDL ON LINKLIST\n          MVC SAVELINK,CVTLLTA LINK LIST\n          L    DCBREG,CVTLINK  ADDR LINKLIST DCB\n           DROP CVTREG\n          XC   BLDLTTR,BLDLTTR\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  ENDSLIB\n          OI  WORKSW,LOADLINK\n           B  ENDSLIB\nENDSLIB  DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\nSRCHLINK  DS   0H   SEARCH LINK LIST FOR DSNAME\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          LA    13,SAVEMAC\n          L    CVTREG,16\n          USING CVT,CVTREG\n          L   LLTREG,CVTLLTA   LINK LIST\n          LA   LLTREG,LLTOFF(LLTREG) FIRST ENTRY\n          USING LLTE,LLTREG\n          SR   1,1\n          IC  1,BLDLCCAT  CONCATENTATION NUMBER\n          LTR  1,1\n           BZ   GOTLLT\nNEXTLLT   DS   0H\n          LA   LLTREG,LLTLEN(LLTREG)  NEXT ENTRY\n          BCT  1,NEXTLLT     LOOP CONCAT NUMBER OF TIMES\n          B   GOTLLT\nGOTLLT    DS   0H\n          MVC WORKDSN,LLTDSN\n          B   ENDSLINK\nENDSLINK DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\n****\nSRCHLPA DS   0H   SERCH FOR MODULE IN LPA\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n        XC   WORKALIS,WORKALIS\n        LA  13,SAVEMAC\n         L   CVTREG,16\n         USING CVT,CVTREG\n         L    LPDEREG,CVTLPDIA  LPA DIRECTORY\n         DROP  CVTREG\n         USING  LPDE,LPDEREG\nTSTLPA   DS     0H\n         TM     LPDEATTB,LPDELPDE  LPDE IDENTIFIER\n         BNO    ENDSLPA\n         CLI    LPDENAME,X'00'\n          BE    ENDSLPA\n         CLC   WORKPROG,LPDENAME\n         BE    GOTLPA\n         LA    LPDEREG,LPDELEN(LPDEREG)\n          B     TSTLPA\nGOTLPA   DS    0H\n**********MOD FOR ALIAS*****************\n          TM   LPDEATT2,LPDERLC    RELOCATED ALIAS ENTRY POINT?\n          BO    LPALIAS\n          TM   LPDEATTR,LPDEMIN    MINOR LPDE?\n           BO  LPALIAS\n          MVC  WORKADDR,LPDEXTAD    LOAD ADDRESS\n           OI   WORKSW,LOADLPA\nCONVADDR   DS   0H\n           OI   WORKSW,LOADLPA\nA  CONVCODE IN=WORKADDR,OUT=WORKCDDR,LEN=L'WORKADDR\n****LOCATE WHICH LPA LIB MODULE WAS LOADED FROM****\n          L   LINKREG2,=A(WMODLPA)\n          BALR  RET2,LINKREG2\n          B    ENDSLPA\nLPALIAS   DS   0H\n          L    LPDEREG,LPDEMJP  POINT TO MAJOR LPDE\n          MVC   WORKALIS,LPDENAME\n          MVC  WORKADDR,LPDEXTAD   ADDRESS\n          DROP  LPDEREG\n          B    CONVADDR\nENDSLPA  DS    0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\nWMODLPA  DS     0H\n         USING *,LINKREG2\n         STM   14,12,SAVEREG2+12\n         LH   1,=AL2(LPADSNAL)\n         STH  1,LEN\n  EXEC CICS GETMAIN SET(15) LENGTH(LEN) INITIMG(X'00') NOSUSPEND\n            ST 15,LPADSNSA\n            MVC 0(11,15),=CL11'SYS1.LPALIB'\n            LA  15,LPADSNTL(15)\n            ST 15,LASTLPA\n****1. ALLOCATE SYS1.PARMLIB(LPALST00)\n****2. READ AS TDQ AND SAVE LIST OF DATASETS\n****3. CONCATANATE AND ALLOCATE UNDER LPALIB\n****4. ISSUE BLDL AND DETERMINE DSN\n*****FIND A TD QUEUE********************\n        L   13,CSAADDR\n        USING DFHCSADS,13\n        SETM  ON\n        L   DCTCBAR,CSADCTBA    ADDRESS OF DCT\n        DROP   13\n         USING DFHDCTDS,DCTCBAR\n         MVC  WORKQUE,PARMQUE\n*********DCT IN RDO**\n        AIF  ('&SYSPARM' LT '51').DCTNOT5D\n******************************************\n**************************************************\n      EXEC CICS IGNORE CONDITION ERROR\n      EXEC CICS SET     TDQUEUE(WORKQUE)  DISABLED CLOSED\n      EXEC CICS DISCARD TDQUEUE(WORKQUE)\n      EXEC CICS HANDLE CONDITION ERROR(ENDWLPA)\n EXEC CICS CREATE TDQUEUE(WORKQUE)  ATTRLEN(TDDEFL) ATTRIBUTES(TDDEF)\n        MVC  WORKDQE,WORKQUE\n        MVC  SDNTXPRM,BLANKS\n        MVC  SDNTXPRM(L'WORKQUE),WORKQUE\n       B TDQFOUND\nTDDEF   DS   0H\n DC C'TYPE(EXTRA) OPENTIME(DEFERRED) DDNAME(WMD1) TYPEFILE(INPUT) '\nTDDEFL  DC AL2(*-TDDEF)\n***END***DCT IN RDO**\nFINDDCT  DS    0H\n         CLC   TDDCTDID,=XL4'FFFFFFFF'          END OF TABLE\n         BE    ENDWLPA                 YES...END\n         TM    TDDCTDT,TDEXTRBM        EXTRA PARTITION\n         BNO   NEXTDCT                NO...EXTRA PARTIT IS FIRST\n         CLC  WORKQUE(3),TDDCTDID    NAME MATCH\n          BNE   NEXTDCT            NO\n     AIF ('&SYSPARM' LT '32').TDV2\n***      TM    TDEXSFL2,TDEXCLIP+TDEXCLOS  CLOSED OR BEING CLOSED\n         TM    TDEXSFL2,TDEXCLOS  CLOSED\n         BNO   NEXTDCT               NO..\n         B   GOTDCT\n         AGO  .NEXTDCT\n.TDV2    ANOP\n         TM  TDDCTCBA,TDDCTOPN    OPEN?\n         BO    NEXTDCT            YES  ..\n         B   GOTDCT\n.NEXTDCT ANOP\nNEXTDCT  DS    0H\n         AH    DCTCBAR,TDDCTELN     ADD LENGTH FOR NEXT ENTRY\n         B    FINDDCT\nGOTDCT   DS    0H\n     AIF ('&SYSPARM' GT '32').TDV3\nDDNOFF   EQU  X'38'           OFFSET TO DDNAME\n         L    1,TDDCTSDS   SDSCI\n         LA   1,DDNOFF(1)\n         MVC  WORKDQE,0(1)   DDNAME\n         MVC  SDNTXPRM,WORKDQE            DDNAME\n         AGO   .TDVC\n.TDV3    ANOP\n         MVC   WORKDQE,TDEXNSDS     SAVE DDNAME\n         MVC   SDNTXPRM,TDEXNSDS     SAVE  DDNAME FOR ALLOC\n.TDVC     ANOP\n         MVC   WORKQUE,TDDCTDID     SAVE  QNAME\n         SETM   OFF\n*         L    1,TDEXASDS          A(SDSCI)\n*        LA     1,DCTSDSRL-DCTSDSCI(1)  ADD LRECL AFTER OPEN\n*       ST    1,TDLRECLA\n****************************************\nTDQFOUND  DS   0H\n         LA   1,DBPOINT\n         DYNALLOC\n         LA   1,SBPOINT\n         DYNALLOC\n          EXEC CICS HANDLE CONDITION ERROR(ENDPRMLB)\n     AIF ('&SYSPARM' GT '32').TDOP\n         MVC   OPQUE,WORKQUE\n        LA    1,OPLIST\n        ST    1,TCAOCLA              STORE FOR DFHOC\n        L     13,CSAADDR\n        USING DFHCSADS,13\n        DFHOC TYPE=OPEN,DATASET=TRANSDATA,LISTADR=YES\n         DROP  13\n         B   OUTTDO\nOPLIST    DS   0F\nOPQUE     DC  CL8' '\nOPERR     DC  CL4' '\nOPFF      DC  X'FF'\nOUTTDO    DS    0H\n          AGO  .TDOR\n.TDOP     ANOP\n         EXEC CICS SET TDQUEUE(WORKQUE) OPEN\n.TDOR     ANOP\nNEXTGET   DS   0H\n          EXEC CICS READQ TD QUEUE(WORKQUE) SET(1) LENGTH(LEN)\n          LR  INREG,1\n          ST   1,LASTIN\n          LH  LENREG,LEN\n           LR  0,INREG\n           AR   0,LENREG\n           ST   0,ENDORECA\n          BCTR  LENREG,0\n          L   15,LASTLPA\nSCANDSN  DS   0H\n***SCAN RCD   FOR FIRST ALPHA CHAR\n          L   14,=A(ALPHTAB)\n          EX    LENREG,TRTDSN\n          BZ   NEXTGET\n          SR  1,INREG   OFFSET OF FIRST CHAR\n          AR  INREG,1    SET BEG OF RCD\n          SR   LENREG,1  SET NEW LENGTH OF RCD\n***SCAN RCD   FOR DELIMITERS AND EXTRACT DSNAMES\n          L   14,=A(DELIMTAB)\n          EX    LENREG,TRTDSN\n          BZ   ATEND\n          LR   0,1\n          B    EXTRACT\nATEND     DS   0H\n         L    0,ENDORECA\nEXTRACT  DS    0H\n         SR   0,INREG\n         LR   LENREG,0\n         L    15,LASTLPA\n         XC   0(LPADSNTL,15),0(15)\n         EX   LENREG,MOVEDSN\n          LA  15,LPADSNTL(15)\n          ST   15,LASTLPA\n          AR  INREG,LENREG\n          ST   INREG,LASTIN\n          C  INREG,ENDORECA\n          BNL NEXTGET\n          L   LENREG,ENDORECA\n          SR   LENREG,INREG\n          B   SCANDSN\nTRTDSN   TRT 0(0,INREG),0(14)\nMOVEDSN  MVC 0(0,15),0(INREG)\nENDPRMLB DS   0H\n      EXEC CICS IGNORE CONDITION ERROR\n     AIF ('&SYSPARM' GT '32').TDCP\n         MVC   OPQUE,WORKQUE\n        LA    1,OPLIST\n        ST    1,TCAOCLA              STORE FOR DFHOC\n        L     13,CSAADDR\n        USING DFHCSADS,13\n        DFHOC TYPE=CLOSE,DATASET=TRANSDATA,LISTADR=YES\n         DROP  13\n          AGO  .TDCR\n.TDCP     ANOP\n      EXEC CICS SET TDQUEUE(WORKQUE) CLOSED\n.TDCR     ANOP\n         LA   1,DBPOINT     DEALLOCATE IT\n         DYNALLOC\n***ALLOCATE EACH LPA DATASET SEPARATELY, OPEN DCB, ISSUE BLDL TO SEE\n***IF MODULE IS IN IT. DO ALL DATASETS STARTING WITH SYS1.LPALIB\n***MAY NOT BE IN THE LIST\n         MVC  ENDOFLPA,LASTLPA  ADDR OF LAST ENTRY\n         L  15,LPADSNSA      ADDR LPALIST\nNEXTBLDL  DS   0H\n         ST  15,LASTLPA    FOR CURRENT ENTRY\n         CLI  0(15),X'40'   ANYTHING IN THERE\n         BNH  ENDWLPA       NO..\n         L   14,=A(TRANTAB)  GET RID OF COMMA AND X'00'\n         TR  0(LPADSNTL,15),0(14)\n         MVC SSNTXPRM,0(15)   SET DSN ALLOC TU\n         MVC SDNTXPRM,=CL8'LPALIB'  SET DDN TU\n          LA  1,DBPOINT\n           DYNALLOC      DEALLOCATE LPALIB DDN\n         LA  1,LBPOINT\n           DYNALLOC        ALLOCATE LPALIB DDN\n          LTR 15,15\n          BNZ  ENDWLPA\n           LA  13,MVSSAVE\n          OPEN (LPALIB,(INPUT))\n         LTR 15,15\n          BNZ  ENDWLPA\n          MVC  LPAMEMB,WORKPROG\n           BLDL LPALIB,LPALIST\n            LTR 15,15\n           BZ  *+12       MEMBER NOT IN DATASET\n           L  1,LASTLPA\n           MVI  LPADSNTL(1),C'Y' FLAG PRESENT\n            NOPR 0\n           CLOSE LPALIB\n           L    15,LASTLPA\n           LA  15,LPADSNTL(15)  NEXT LPA LIB\n            C  15,ENDOFLPA      NO MORE ENTRIES\n            BH   ENDWLPA\n            B   NEXTBLDL\nENDWLPA  DS    0H\n         AIF ('&SYSPARM' LT '51').NODISC\n   EXEC CICS IGNORE CONDITION ERROR\n   EXEC CICS DISCARD TDQUEUE(WORKQUE)\n.NODISC   ANOP\n          SETM  OFF\n          LM  14,12,SAVEREG2+12\n          BR   RET2\n         DS  0F\nSYNBLKS  DS   0F\nDBPOINT  DC   A(DBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   DBPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nSBPOINT  DC   A(SBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   SBPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nLBPOINT  DC   A(LBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   LBPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nSBS     DS   0F\nSB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nSBLN     DC    AL1(SBEL)  LEN OF RB\nSBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nSBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nSBFLAG2  DS    X       2ND   FLAG BYTE\nSBERROR  DS    XL2     ERROR REASON CODE\nSBINFO   DS    XL2     INFO  REASON CODE\nSBTXTPP  DC    A(SXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nSBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nSBEL     EQU   *-SBS\n* TEXT POINTERS  FOR ALLOCATION\nSXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nSDNPOINT DC   A(SDNTEXT)    DDN TU\nSSNPOINT DC   A(SSNTEXT)    DSN TU\nSSMPOINT DC   A(SSMTEXT)    MEMBER TU\nSSPPOINT DC   A(SSPTEXT)    DISP TU\n         ORG  SSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nSXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nSDNTEXT  DS    0F   DDN TEXT UNIT\nSDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nSDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSDNTXENT DS    0C\nSDNPLEN  DC    AL2(L'SDNTXPRM)  LENGTH OF PARM\nSDNTXPRM DC    CL8'PARMLIB'  DDNAME\n**DSN  TEXT UNIT\nSSNTEXT  DS    0F   DSN TEXT UNIT\nSSNTXKEY DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nSSNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSNTXENT DS    0C\nSSNPLEN  DC    AL2(L'SSNTXPRM)   LENGTH OF PARM\nSSNTXPRM DC    CL44'SYS1.PARMLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nSSMTEXT  DS    0F   DSN TEXT UNIT\nSSMTXKEY DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\nSSMTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSMTXENT DS    0C\nSSMPLEN  DC    AL2(L'SSMTXPRM)   LENGTH OF PARM\nSSMTXPRM DC    CL8'LPALST00'     MEMBERNAME\n**DISP TEXT UNIT\nSSPTEXT  DS    0F   DSP TEXT UNIT\nSSPTXKEY DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\nSSPTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSPTXENT DS    0C\nSSPPLEN  DC    AL2(L'SSPTXPRM)  LENGTH OF PARM\nSSPTXPRM DC    X'08'  DISP=SHR\nSXLEN    EQU   *-SXUNITS\n***FOR DEALLOCATION\nDBS     DS   0F\nDB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nDBLN     DC    AL1(DBEL)  LEN OF RB\nDBVERB   DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\nDBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nDBFLAG2  DS    X       2ND   FLAG BYTE\nDBERROR  DS    XL2     ERROR REASON CODE\nDBINFO   DS    XL2     INFO  REASON CODE\nDBTXTPP  DC    A(DXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nDBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nDBEL     EQU   *-DB\n* TEXT POINTERS  FOR DEALLOCATION\nDXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nDDNPOINT DC   A(SDNTEXT)  DDN TU\n         ORG  DDNPOINT   FOR LAST TU\n         DC  X'80'\n         ORG\nSYNEL    EQU  *-SYNBLKS\n**********TO ALLOCATE LPA DSNS\nLBS     DS   0F\nLB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nLBLN     DC    AL1(LBEL)  LEN OF RB\nLBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nLBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nLBFLAG2  DS    X       2ND   FLAG BYTE\nLBERROR  DS    XL2     ERROR REASON CODE\nLBINFO   DS    XL2     INFO  REASON CODE\nLBTXTPP  DC    A(LXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nLBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nLBEL     EQU   *-LBS\n* TEXT POINTERS  FOR ALLOCATION  OF LPA LIBS\nLXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nLDNPOINT DC   A(SDNTEXT)    DDN TU\nLSNPOINT DC   A(SSNTEXT)    DSN TU\nLSPPOINT DC   A(SSPTEXT)    DISP TU\n         ORG  LSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n********************************\nPARMQUE  DC   CL4'WMD1'\n*****FILE CONTROL BLOCKS*****                                           JRE06040\nLPALIB DCB DSORG=PO,MACRF=(R),DDNAME=LPALIB\n***BLDL LIST\nLPALIST DS   0H\n        DC  H'1'   1 ENTRY IN LIST\n        DC  H'12'  12 BYTES LONG\nLPAMEMB DS  CL8\n         LTORG\n         DROP  LINKREG2,DCTCBAR\n         EJECT\n****\nSRCHSIT DS   0H   SEE IF LPA=NO OR PRVMOD FOR DFH MODULE\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n        L   13,SAVER13\n*  EXEC CICS ADDRESS CSA(CSAREG)\n          L   CSAREG,CSAADDR\n        USING DFHCSADS,CSAREG\n         CLI   RELSW,X'32'\n          BL   NOSITM\n          SETM  ON\nNOSITM  DS    0H\n         L     SITREG,CSASITBA   SIT TABLE\n         DROP   CSAREG\n          USING DFHSITDS,SITREG\n           CLI  SITLPA,C'N'     LPA=NO\n           BE   SETSIT0\n          L    PRVREG,SITPRVMA   PRVMOD LIST\n          DROP  SITREG\n           LTR  PRVREG,PRVREG    ANY ENTRIES\n           BZ   SETSIT4     NO...\n           USING  PRVLIST,PRVREG\n          LH   1,PRVNUM+2  NUMBER OF ENTRIES\n           NOPR 0\n           LA  15,PRVENTRY  FIRST ENTRY\nTSTPRV     DS   0H\n          CLC   WORKPROG,0(15)\n           BE   SETSIT0\n           LA   15,8(15)  NEXT ENTRY\n           BCT  1,TSTPRV\n           B    SETSIT4\n          DROP  PRVREG\nSETSIT0  DS    0H\n          OI   WORKSW,NOLPA\n          B    ENDSIT\nSETSIT4   DS    0H\n          NI   WORKSW,255-NOLPA\n          B    ENDSIT\nENDSIT   DS    0H\n          SETM  OFF\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\nSRCHCSA   DS   0H   SEARCH LINK LIST FOR DSNAME\n          USING *,LINKREG\n          USING DFHCSADS,CSAREG\n          STM   14,12,SAVELINK+12\n          MVC  FINLIB,=CL8' '\n          L    CSAREG,CSAADDR\n          NI   WORKADDR,255-X'80'\n          B   SRCHCSA1\nSRCHCSA1  DS  0H    KCP-TCP\n          LA  1,CSAKCNAC   KCP ADDRA0\n          LA  3,CSATCTCA   TCP ADDRB8\n          LA  2,4            INCREMENT\nGOCSA1    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA1\n          B    SRCHCSA2\nSRCHCSA2  DS  0H    SRP-FDP\n          L  OPFLREG,CSAOPFLA\n          USING CSAOPFL,OPFLREG\n          LA  1,CSASRNAC   SRP20\n           AIF ('&SYSPARM' GT '41').NOFDNAC\n           LA  3,CSAFDNAC   FDP50\n           AGO .AFDNAC\n.NOFDNAC  ANOP\n          LA  3,CSAKCSC    KC QUERY\n.AFDNAC   ANOP\n          LA  2,4            INCREMENT\nGOCSA2    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA2\n          B    SRCHCSA3\nSRCHCSA3  DS  0H    DFHFCIN - EIP EXEC NUC\n          LA  1,CSAFCXAD   DFHCIN   78\n          LA  3,CSAEINAC   EXEC NUC A8\n          LA  2,4            INCREMENT\nGOCSA3    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA3\n          B    SRCHCSA4\nSRCHCSA4  DS  0H    RES MGR - TORS NUC    PGM\n          LA  1,CSAERMNA   RES MGRFC\n          AIF ('&SYSPARM' GT '41').NOTONNA\n          LA  3,CSATONNA   TON 1B4\n          AGO .ATONNA\n.NOTONNA  ANOP\n          LA  3,CSAZCQNA  ZCQ INSTALL\n.ATONNA  ANOP\n          LA  2,4            INCREMENT\nGOCSA4    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA4\n          B    SRCHCSA5\nSRCHCSA5  DS  0H    DBCR    - ATT SEC     PGM\n     AIF ('&SYSPARM' EQ '').IS32\n     AIF ('&SYSPARM' LT '32').NOT32\n.IS32     ANOP\n          LA  1,CSADBCR    DBCR2DC       2DC\n          LA  3,CSAZCUTN   ATTACH SEC USERID TABLE MGR 38C\n          AGO  .CONTCSA5\n.NOT32    ANOP\n          LA  1,CSATRANA   FE GLOB TRAP  2D4\n          LA  3,CSATRRNA   RECOV RTN FOR GLOBAL TRAP   2D8\n.CONTCSA5  DS  0H\n          LA  2,4            INCREMENT\nGOCSA5    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA5\n          B    NOTINLPA\nISINLPA   DS   0H\n          MVC  FINLIB,=CL8'LPALIB'\n          OI  WORKSW,LOADLPA\n          B   ENDSCSA\nNOTINLPA  DS   0H\n*         MVC  FINLIB,=CL8'DFHRPL'\n*         TM  WORKSW,LOADRPL\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8'STEPLIB'\n*         TM  WORKSW,LOADSTEP\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8'LINKLIB'\n*         TM  WORKSW,LOADLINK\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8'SVCLIB'\n*         TM  WORKSW,LOADSVC\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8' '\n          B   ENDSCSA\nENDSCSA  DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n          LTORG\n          DROP  LINKREG,OPFLREG,CSAREG\n          EJECT\n****\nSRCHNET   DS   0H   SEARCH SYS1.PROCLIB(NET) FOR DSNAMES\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          LA   1,NTPOINT       ALLOC PROCLIB\n          DYNALLOC\n*****READ NET MEMBER AND GET DSNS OF VTAMLIB AND VTAMLST\n          MVI  VSW,0\n          ST   13,MVSSAVE\n          LA   13,MVSSAVE\n          OPEN (PROCLIB,(INPUT))\n          LTR  15,15\n          BNZ  ENDPROC\nNEXTPR     DS   0H\n          GET PROCLIB\n          CLC  0(9,1),=CL9'//VTAMLST'\n          BE   GOTVLST\n          CLC  0(9,1),=CL9'//VTAMLIB'\n          BE   GOTVLIB\n          B    NEXTPR\nPREVLST   DS   0H\n          TM  VSW,X'01'     VTAMLST PROCESSED?\n          BO   ENDPROC\n          CLC  0(9,1),=CL9'//VTAMLST'\n          BE   GOTVLST\n          B   NEXTPR\nGOTVLST   DS   0H\n          LR   2,1\n          LA   3,VTAMLSTS\n          OI   VSW,X'01'\n          SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\nCONTVLST   DS   0H\n          LA   3,L'VTAMLSTS(3)   NEXT ENTRY\n          LH   0,NUMVLSTS\n          AH   0,=H'1'\n          STH  0,NUMVLSTS\n          CH   0,=AL2(NUMVLSTN)\n          BH   PREVLIB     MAX OF 10 DSNAMES\nGETVLST   DS   0H\n          GET  PROCLIB\n          CLI  2(1),C'*'   COMMENT?\n          BE   GETVLST\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  PREVLIB     SEE IF //VTAMLIB\n          LR   2,1\nSC1       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\n          B    CONTVLST\nPREVLIB   DS   0H\n          TM  VSW,X'02'     VTAMLIB PROCESSED?\n          BO   ENDPROC\n          CLC  0(9,1),=CL9'//VTAMLIB'\n          BE   GOTVLIB\n          B   NEXTPR\nGOTVLIB   DS   0H\n          LR   2,1\n          LA   3,VTAMLIBS\n          OI   VSW,X'02'\nSC2       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\nCONTVLIB   DS   0H\n          LA   3,L'VTAMLIBS(3)\n          LH   0,NUMVLIBS\n          AH   0,=H'1'\n          STH  0,NUMVLIBS\n          CH   0,=AL2(NUMVLIBN)\n          BH   PREVLST     MAX NUMBER SNAMES\nGETVLIB   DS    0H\n          GET  PROCLIB\n          CLI  2(1),C'*'   COMMENT?\n          BE   GETVLIB\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  PREVLST     SEE IF //VTAMLST\n          LR   2,1\nSC3       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\n          B    CONTVLIB\nENDPROC   DS   0H\n          CLOSE PROCLIB\n*****DEALLOCATE PROCLIB\n          MVC  DEALCDDN,=CL8'PROCLIB'\n          LA   1,DTPOINT       DEALLOC PROCLIB\n          DYNALLOC\n*******ALLOCATE VTAMLST LIBS\n          LA  1,VTAMLSTS\n          MVC  WORKDSN,VOFF(1)\n          ST  1,VDSNAMEA\n          MVC  VDDPARM,=CL8'VTAMLST'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVLST\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (VTAMLST,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLST\n*****BLDL VTAMLST\n          LA  DCBREG,VTAMLST\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLST\n           OI  WORKSW2,LOADVLST\nDEALVLST   DS   0H\n           CLOSE  VTAMLST\n          MVC  DEALCDDN,=CL8'VTAMLST'\n          LA   1,DTPOINT       DEALLOC VTAMLST\n          DYNALLOC\n            TM  WORKSW2,LOADVLST\n            BO ENDVLST\n            B  NEXTVLSA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nNEXTVLSA  DS    0H\n          LH   1,NUMVLSTS\n          LTR  1,1\n          BZ   ENDVLST\n          STH  1,CURNUM\n          LA   1,VTAMLSTS+L'VTAMLSTS\n          ST   1,CURVLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nADDVLST   DS   0H\n          ST   1,VDSNAMEA\n          MVC  WORKDSN,VOFF(1)\n          MVC  VDDPARM,=CL8'VTAMXXX'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVXXX\n          OPEN (VTAMXXX,(INPUT))\n          LTR  15,15\n          BNZ   DEALVXXX\n          LA  DCBREG,VTAMXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  DEALVXXX\n           OI  WORKSW2,LOADVLST\n            B  DEALVXXX\nDEALVXXX   DS   0H\n           CLOSE VTAMXXX\n*****DEALLOCATE VTAMXXX\n          MVC  DEALCDDN,=CL8'VTAMXXX'\n          LA   1,DTPOINT       DEALLOC VTAMXXX\n          DYNALLOC\n          TM  WORKSW2,LOADVLST\n          BO  ENDVLST\n          B  NEXTVLSB\nNEXTVLSB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLST\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'VTAMLSTS(1)\n          ST   1,CURVLST\n          B    ADDVLST\n*         MVC  CDNDNAM1,=CL8'VTAMLST'\n*         LA   1,CTPOINT       CONCATENATE TO VTAMLST\n*         DYNALLOC\n*         LTR  15,15\n*         BNZ  DEALVXXX\n*****OPEN VTAMLST\nENDVLST  DS   0H\n          B  PROCVLIB         DO VTAMLIB\nPROCVLIB  DS   0H\n*******ALLOCATE VTAMLIB LIBS\n          LA  1,VTAMLIBS\n          MVC  VTAMDSN,VOFF(1)\n          ST  1,VDSNAMEA\n          MVC  VDDPARM,=CL8'VTAMLIB'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVLIB\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (VTAMLIB,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLIB\n*****BLDL VTAMLIB\n          LA  DCBREG,VTAMLIB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLIB\n           OI  WORKSW2,LOADVLIB\nDEALVLIB   DS   0H\n           CLOSE  VTAMLIB\n          MVC  DEALCDDN,=CL8'VTAMLIB'\n          LA   1,DTPOINT       DEALLOC VTAMLST\n          DYNALLOC\n            TM  WORKSW2,LOADVLIB\n            BO ENDVLIB\n            B  NEXTVLBA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nNEXTVLBA  DS    0H\n          LH   1,NUMVLIBS\n          LTR  1,1\n          BZ   ENDVLIB\n          STH  1,CURNUM\n          LA   1,VTAMLIBS+L'VTAMLIBS\n          ST   1,CURVLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nADDVLIB   DS   0H\n          ST   1,VDSNAMEA\n          MVC  VTAMDSN,VOFF(1)\n          MVC  VDDPARM,=CL8'VTAMXXX'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVBXX\n          OPEN (VTAMXXX,(INPUT))\n          LTR  15,15\n          BNZ   DEALVBXX\n          LA  DCBREG,VTAMXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  DEALVBXX\n           OI  WORKSW2,LOADVLIB\n            B  DEALVBXX\nDEALVBXX   DS   0H\n           CLOSE VTAMXXX\n*****DEALLOCATE VTAMXXX\n          MVC  DEALCDDN,=CL8'VTAMXXX'\n          LA   1,DTPOINT       DEALLOC VTAMXXX\n          DYNALLOC\n          TM  WORKSW2,LOADVLIB\n          BO  ENDVLIB\n          B  NEXTVLIB\nNEXTVLIB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLIB\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'VTAMLIBS(1)\n          ST   1,CURVLST\n          B    ADDVLIB\n*         MVC  CDNDNAM1,=CL8'VTAMLST'\n*         LA   1,CTPOINT       CONCATENATE TO VTAMLST\n*         DYNALLOC\n*         LTR  15,15\n*         BNZ  DEALVXXX\nENDVLIB  DS   0H\n          B  ENDNET\nENDNET   DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,MVSSAVE\n          BR   RET\nFDELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          MVC VOFF(44,3),=44C' '\n          LA   15,4(1)\n          L    14,=A(DELIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVEVTN\n          MVC  0(DALCONSL,3),DALCONS\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVEVTN   MVC VOFF(0,3),0(15)\nDALCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nDALCONSL EQU  *-DALCONS\nPROCLIB DCB DSORG=PS,MACRF=GL,DDNAME=PROCLIB,EODAD=ENDPROC\nVTAMLST DCB DSORG=PO,MACRF=(R),DDNAME=VTAMLST\nVTAMLIB DCB DSORG=PO,MACRF=(R),DDNAME=VTAMLIB\nVTAMXXX DCB DSORG=PO,MACRF=(R),DDNAME=VTAMXXX\n******TO CONCATENATE DATASETS\n         DS  0F\nCTPOINT  DC   A(CBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   CTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nCBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(CBEL)  LEN OF RB\n         DC    AL1(S99VRBCC)     03 FOR CONCAT\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\n         DC    A(CXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nCBEL     EQU   *-CBS\n* TEXT POINTERS  FOR CONCATENATION\nCXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nCDNPOINT DC   A(CDNTEXT)    DDN TU\n         ORG  CDNPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nCDNTEXT  DS    0F   DDN TEXT UNIT\n         DC    AL2(DCCDDNAM)  KEY FOR CONCATENATION\nCDNTXNUM DC    XL2'0002'   NUM LENGTH + PARM ENTRIES\nCDNPLEN1 DC    AL2(8)           LENGTH OF PARM DDNAME\nCDNDNAM1 DC    CL8'VTAMLST'  DDNAME   TO CONCAT TO\nCDNPLEN2 DC    AL2(8)           LENGTH OF PARM DDNAME\nCDNDNAM2 DC    CL8'VTAMXXX'  DDNAME   TO CONCAT WITH\n******TO ALLOC SYS1.PROCLIB\n         DS  0F\nNTPOINT  DC   A(NBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   NTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nNBS     DS   0F\nNB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nNBLN     DC    AL1(NBEL)  LEN OF RB\nNBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nNBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nNBFLAG2  DS    X       2ND   FLAG BYTE\nNBERROR  DS    XL2     ERROR REASON CODE\nNBINFO   DS    XL2     INFO  REASON CODE\nNBTXTPP  DC    A(NXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nNBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nNBEL     EQU   *-NBS\n* TEXT POINTERS  FOR ALLOCATION\nNXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nNDNPOINT DC   A(NDNTEXT)    DDN TU\nNSNPOINT DC   A(NSNTEXT)    DSN TU\nNSMPOINT DC   A(NSMTEXT)    MEMBER TU\nNSPPOINT DC   A(NSSPTEXN)   DISP TU\n         ORG  NSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nNXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nNDNTEXT  DS    0F   DDN TEXT UNIT\nNDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nNDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNDNTXENT DS    0C\nNDNPLEN  DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nNDNTXPRM DC    CL8'PROCLIB'  DDNAME\n**DSN  TEXT UNIT\nNSNTEXT  DS    0F   DSN TEXT UNIT\nNSNTXKEY DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nNSNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSNTXENT DS    0C\nNSNPLEN  DC    AL2(L'SSNTXPRM)   LENGTH OF PARM\nNSNTXPRM DC    CL44'SYS1.PROCLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nNSMTEXT  DS    0F   DSN TEXT UNIT\nNSMTXKEY DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\nNSMTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSMTXENT DS    0C\nNSMPLEN  DC    AL2(L'NSMTXPRM)   LENGTH OF PARM\nNSMTXPRM DC    CL8'NET     '     MEMBERNAME\n**DISP TEXT UNIT\nNSSPTEXN  DS    0F   DSP TEXT UNIT\nDISPTEXT  EQU   *\nNSSPTXKY DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\nNSSPTXNU  DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSPTXEND DS    0C\nNSSPPLEN  DC    AL2(L'NSSPTXPR)  LENGTH OF PARM\nNSSPTXPR DC    X'08'  DISP=SHR\nNSXLEN    EQU   *-NXUNITS\n***FOR DEALLOCATION\nDTPOINT  DC   A(DBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   DTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nDBSD    DS   0F\nNBDD     DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nNDBLND    DC    AL1(NDBELD)  LEN OF RB\nNDBVERBD  DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\nNDBFLAD1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nNDBFLAD2  DS    X       2ND   FLAG BYTE\nNDBERROR  DS    XL2     ERROR REASON CODE\nNDBINFOD  DS    XL2     INFO  REASON CODE\nNDBTXTPD  DC    A(NDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nNDBAUTDL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nNDBELD     EQU   *-NBDD\n* TEXT POINTERS  FOR DEALLOCATION\nNDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\nNDDNPOID DC   A(DNDNTEXD)  DDN TU\n         ORG NDDNPOID   FOR LAST TU\n         DC  X'80'\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nDNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nDEALCDDN DC    CL8'PROCLIB'  DDNAME\n**********TO ALLOCATE VTAM DSNS\nVTPOINT  DC   A(VBS) ADR  REQ BLOCK PASSED IN R1\n         ORG   VTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nVBS     DS   0F\nVB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nVBLN     DC    AL1(VBEL)  LEN OF RB\nVBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nVBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nVBFLAG2  DS    X       2ND   FLAG BYTE\nVBERROR  DS    XL2     ERROR REASON CODE\nVBINFO   DS    XL2     INFO  REASON CODE\nVBTXTPP  DC    A(VXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nVBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nVBEL     EQU   *-VBS\n* TEXT POINTERS  FOR ALLOCATION  OF VTAM LIBS\nVXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nVDNPOINT DC   A(VDDNAME)    DDN TU\nVDSNAMEA DS   A             DSN TU\nVSPPOINT DC   A(DISPTEXT)   DISP TU\n         ORG  VSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nVDDNAME  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nVDDPARM  DC    CL8'VTAMLST'  DDNAME\n          LTORG\n          DROP  LINKREG\n          EJECT\n***********************************************\n****\nSRCHPLIB  DS   0H   SEARCH SYS1.PARMLIB FOR LPA  DSNAMES\n          USING *,LINKREG\n          STM   14,13,SAVELINK+8\n*         CLOSE  PARMLIB\n*         MVC  PEALCDDN,=CL8'PARMLIB'\n*         LA  13,MVSSAVE\n*         LA   1,PDPOINT    DE ALLOC PARMLIB\n*         DYNALLOC\n          LA   1,PTPOINT       ALLOC PARMLIB\n          DYNALLOC\n          CH  15,=H'4'\n          BH   DEALPLIB\n          OPEN (PARMLIB,(INPUT))\n           LTR 15,15\n           BNZ  DEALPLIB\n            LA  1,PARMLIB\n           USING IHADCB,1\n           MVC  BLKSIZE,DCBBLKSI   SAVE BLOCKSIZE\n           MVC  LRECL,DCBLRECL     SAVE RECORD LEN\n           DROP 1\n  EXEC CICS GETMAIN SET(15) LENGTH(BLKSIZE) INITIMG(X'00') NOSUSPEND\n*           LH   0,BLKSIZE    FOR TSO\n*           GETMAIN R,LV=(0)\n*           LR   15,1\n            ST   15,READAREA\n            AH  15,BLKSIZE\n            ST  15,ENDBLOCK\n*****GET DIRECTORY AND LOCATE 'LOADXX' AND IEASYMXX MEMBERS\n           SETM  ON\n           LA   2,DSERVOUT\nDS1        DESERV FUNC=GET_ALL,AREAPTR=(2),DCB=PARMLIB\n            LTR  15,15\n**           BNZ  DEALPLIB\n             BNZ  ENDPARM\n             L    2,DSERVOUT\n             USING DESB,2\n             MVC  DSERVLEN,DESB_LEN   NEED FOR FREEMAIN\n             MVC  NUMMEMBS,DESB_COUNT NUMBER OF MEMBERS IN PDS\n             MVC  CURMEMBS,DESB_COUNT NUMBER OF MEMBERS IN PDS\n             LA  2,DESB_DATA   POINT TO FIRST IGWSMDE ENTRY\n             DROP 2\n             USING SMDE,2\n********LOOK FOR LOADXX AND IEASYM MEMBERS****************\nLOOKSMDE     DS   0H\n             LR  1,2\n             AH  1,SMDE_NAME_OFF  OFFSET TO LEN/MEMB NAME ENTRY\n             CLC 2(4,1),=CL4'LOAD'  LOADXX MEMBER?\n             BE  GOTLOAD            YES\n              L  1,CURMEMBS\n              BCT  1,NEXTSMDE\nNEXTSMDE     DS   0H\n              ST  1,CURMEMBS\n              A   2,SMDE_LEN   NEXT SMDE\n              B   LOOKSMDE\nGOTLOAD      DS   0H\n*READ LOAD MEMBER AND EXTRACT INFO FROM IODF, PARMLIB, SYSPARM\n*FIELDS. ASSUME THAT SECOND PARM IN IODF=&SYSNAME  (AS SPECIFIED\n*IN IEASYS MEMBER) PARMLIB HAS REAL NAME OF SYS1.PARMLIB BEING USED\n             MVC  LOADMEMB,BLANKS\n             LH 15,0(1)  LENGTH OF MEMBER NAME\n             BCTR 15,0\n             EX  15,MOVELOAD\n             L    2,DSERVOUT\n             L    3,DSERVLEN\n             FREEMAIN RC,A=(2),LV=(3)\n             B   ENDPARM\nENDPARM     DS  0H\n            SETM  OFF\nDEALPLIB   DS   0H\n          CLI  LOADMEMB,C' '\n          BNH  OUTPLIB\n***DETERMINE LPA CONCAT BY THE FOLLOWING:\n***NEED TO DETERMINE VALUE OF SYSCLONE WHICH IS DEFINED WITH\n***SUBSTITUTABLE VALUES IN IEASYM, WHICH WILL NOT BE USED HERE\n***EVEN THOUGH IT CONTAINS THE REAL VALUE OF SYSCLONE.\n** ON DOITT SYSTEMS, SYSCLONE IS DEFINED IN IEASYM AS THE\n***FIRST AND LAST CHARACTERS OF SYSNAME.\n***IT WILL BE ASSUMED THAT SYSCLONE IS EQUAL TO FIRST AND LAST CHARS\n***OF SYSNAME EVEN THOUGH IT MAY NOT ALWAYS BE ON ALL SYSTEMS.\n**1. READ LOADXX MEMBER TO GET SYSPARM VALUE, WHICH DEFINES IEASYSXX\n**2. READ IEASYS&SYSPARM TO GET LPA SUFFIXES, ONE OF WHICH MAY BE\n**   DEFINED AS &SYSCLONE. IEASYS MAY ALSO HAVE SYSNAME.\n*******ALLOCATE AND READ LOAD MEMBER\n         FIND  PARMLIB,LOADMEMB,D\n         LTR  15,15\n          BNZ  OUTPLIB\n*****LOOK FOR SYSPARM FIELD IN LOADXX MEMBER\n           L    2,READAREA\n           ST  2,LASTBLOC\nGETPLIBS   DS   0H\n          READ READECB,SF,PARMLIB,(2),'S'\n          CHECK READECB\n          CLI  READECB,X'7F'\n          BNE OUTPLIB\n          LR  1,2\nTESTPLIB  DS   0H\n          CLC  0(7,1),=CL7'SYSPARM'\n          BE  GOTSPARM\n          CLC  0(4,1),=CL4'IODF'\n          BE  GOTIODF\nNEXTPLIB  DS   0H\n          L   1,LASTBLOC\n          AH  1,LRECL    NEXT RECORD\n          C   1,ENDBLOCK\n**        BH  OUTPLIB\n          BH  IEASYS00\n          ST  1,LASTBLOC\n          B  TESTPLIB\nGOTIODF   DS   0H    SECOND PARM IS SYSNAME\n***LOADXX MEMBER IS COLUMN DEPENDENT. DATA STARTS IN COL 10.\n**COL 10-11 HAS SUFFIX OF IODF MEMBER; COL 13 HAS HILEVEL QUALIFER\n**ASSUME HI-LEVEL QUALIFIER IS SYNAME IF NOT SPECIFIED ANYWHERE ELSE\n           ST  1,RECADDR\n          MVC  SYSNAME,12(1)\n          B   NEXTPLIB\nGOTSPARM   DS   0H\n**FIRST  PARM IS SYSTEM PARM SUFFIX\n           ST  1,RECADDR\n           L  15,=A(ALPHTAB)\n          LR  14,1\n           TRT 8(40,14),0(15)      FIND FIRST  ALPHA LETTER\n          BZ   NEXTPLIB\n           MVC SYSPARM,0(1)\n**SINCE SYSCLONE IS DEFINED WITH SUBSTITUTABLES IN IEASYM MEMBER,\n**SET SYSCLONE=SYSPARM\n          MVC  SYSCLONE,SYSPARM\n***       B   SEALPLIB\nSEALPLIB   DS   0H\n          CLI SYSPARM,C' '   SYSPARM FOUND\n***       BNH OUTPLIB\n           BH  IEASYS00\n           B   NEXTPLIB\nIEASYS00   DS   0H\n           TM   WORKSW3,READSPRM   IEASYS&SYSPARM READ?\n          BNO  DOSYSP             NO..\n           TM   WORKSW3,READZPRM   IEASYS00       READ?\n          BO   OUTPLIB            YES...GET OUT\n          MVC  IEASYS+6(2),=CL2'00'\n          OI   WORKSW3,READZPRM\n          B    FINDSYSP\nDOSYSP    DS   0H\n*****READ IEASYS&SYSPARM MEMBER TO GET SYSNAME AND LPALIST PARMS\n          OI   WORKSW3,READSPRM     FLAG READING IEASYS&SYSPARM\n          MVC  IEASYS(6),=CL6'IEASYS'\n          MVC  IEASYS+6(2),SYSPARM\nFINDSYSP   DS   0H\n         FIND  PARMLIB,IEASYS,D\n         LTR  15,15\n***       BNZ  OUTPLIB\n          BNZ  IEASYS00    READ IEASYS00\n*****LOOK FOR LPA= AND SYSNAME= PARMS IN IEASYS&SYSPARM  MEMBER\n           L   2,READAREA\n           ST   2,LASTBLOC\nIETPLIBS   DS   0H\n          READ IEADECB,SF,PARMLIB,(2),'S'\n          CHECK IEADECB\n          CLI  IEADECB,X'7F'\n****      BNE OUTPLIB\n          BNE  IEASYS00    READ IEASYS00\n          LR  1,2\nTESTILIB  DS   0H\n          CLC  0(4,1),=CL7'LPA='\n          BE  GOTLPAEQ\n          CLC  0(8,1),=CL8'SYSNAME='\n          BE  GOTSNAME\nNEXTILIB  DS   0H\n          L   1,LASTBLOC\n          AH  1,LRECL    NEXT RECORD\n          C   1,ENDBLOCK\n***       BNL OUTPLIB\n          BNL IEASYS00\n          ST  1,LASTBLOC\n          B  TESTILIB\nGOTLPAEQ   DS   0H\n           TM  WORKSW3,DIDLCONS  LPA= ALREADY PROCESSED\n           BO   *+10             YES\n           MVC  LPACONST,5(1)  SAVE STRING AND PARSE LATER\n            OI   WORKSW3,DIDLCONS\n          CLI  SYSNAME,C' '  SYSNAME FOUND YET\n          BH   IEALPLIB      YES.. CLOSE PARMLIB\n          B   NEXTILIB     NEXT RECORD\nGOTSNAME   DS   0H\n           OI  WORKSW3,DIDSNAME  SYSNAME ALREADY PROCESSED\n          CLI  SYSNAME,C' '      SYSNAME ALREADY PROCESSED\n           BH   *+10             YES\n           MVC  SYSNAME,8(1)\n          CLI  LPACONST,C' '  LPA     FOUND YET\n          BH   IEALPLIB      YES.. CLOSE PARMLIB\n          B   NEXTILIB     NEXT RECORD\nIEALPLIA   DS   0H\n           MVI  ERRSW,X'00'\nIEALPLIB   DS   0H\n           CLI  ERRSW,X'00'\n           BNE  OUTPLIB\n          CLI  LPACONST,C' '   LPA PARM FOUND\n          BH   PROCLPA          YES\n          B   OUTPLIB\nLEALPLIB   DS   0H\n           B   ENDPLIB\nENDPLIB  DS   0H\n          CLI  LPACONST,C' '   LPA PARM FOUND\n          BH   PROCLPA          YES\nOUTPLIB   DS   0H\n          CLOSE PARMLIB\n          LA  1,PDPOINT    DEALLOCATE PARMLIB\n          DYNALLOC\n          LM  14,13,SAVELINK+8\n          BR   RET\nPROCLPA   DS   0H    READ LPALST MEMBERS\n***FIRST SET UP ENTRY IN THE OUTPUT LIST FOR SYS1.LPALIB\n          MVC  NUMLPAS,=H'1'\n         LA   3,LPALIBS\n          MVC  0(LPLCONSL,3),LPLCONS    FOR DYNALLOC\n          MVC LPAOFF(44,3),=CL44'SYS1.LPALIB'\n           LA  3,L'LPALIBS(3)\n         ST  3,LASTLPA\n********************************\nSSLPA     SCANARG ')',ADDR=LPACONST,LEN=20   END OF LIST\n          BZ   OUTPLIB\n          ST  1,LASTCONA\n          LA  2,LPACONST\n          CLI 0(2),C'&&' SUBSTITUTABLE     &\n          BE  SUBLPA\n          CLI 2(2),C','   2 CHAR VALUE\n          BNE  OUTPLIB     FORGET IT\nMSLPA      DS   0H\n          MVC LPALST(6),=CL6'LPALST'\n          MVC LPALST+6(2),0(2)\n          LA  2,3(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          B   ALLPALST\nSUBLPA    DS   0H SUBSTITUTE VARIABLES\n          BAL  14,SUBPARM\n          B  ALLPALST\nALLPALST  DS   0H\n          FIND PARMLIB,LPALST,D\n          LTR 15,15\n          BNZ  OUTPLIB\n**         LA  3,LPALIBS\n           L   3,LASTLPA\n           L  2,READAREA\n           ST  2,LASTBLOC\nBUILDLPA   DS  0H\n******BUILD DYNALLOC LIST FROM LPALST ENTRIES*****************\n***ONLY READ ONE BLOCK FROM LPALST MEMBER TO AVOID EOF CONDITION\n           ST  3,LASTLPA\n          READ LEADECB,SF,PARMLIB,(2),'S'\n          CHECK LEADECB\n          CLI  LEADECB,X'7F'\n          BNE OUTPLIB\n          ST  2,LASTBLOC\n          LR  1,2\n          AH  1,BLKSIZE\n           ST  1,ENDBLOCK\nTESTLLIB   DS   0H\n          BAL  14,LPELIM\n           LH  0,NUMLPAS\n           AH   0,=H'1'\n           STH  0,NUMLPAS\n           CH   0,=AL2(NUMLPAN)\n           BH  DALPALST      YES\n           L   3,LASTLPA\n           LA  3,L'LPALIBS(3)\n           ST  3,LASTLPA\n          L   2,LASTBLOC\n          AH  2,LRECL    NEXT RECORD\n          C   2,ENDBLOCK\n          BH  DALPALST\n          CLC  0(4,2),=4X'00'    END OF BLOCK\n          BE  DALPALST\n          ST  2,LASTBLOC\n          B  TESTLLIB\n******END BUILD DYNALLOC LIST FROM LPALST ENTRIES**************\nDALPALST   DS   0H\n           MVC CURNUM,NUMLPAS\n           LA   1,LPALIBS-L'LPALIBS\n           ST  1,CURVLST\n           B  NEXTLPST\n**********ALLOCATE LPALIBS, OPEN, BLDL\nNEXTLPST   DS   0H\n          LH   1,CURNUM\n          LTR  1,1\n          BZ  DEALVLPA\n          BCTR 1,0\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'LPALIBS(1)\n          MVC  LPADSN,LPAOFF(1)\n*******BYPASS SYS1.DBN.SDBNLPA BECAUSE OF ERROR WITH DATASET\n          CLC  LPADSN(16),=C'SYS1.DBN.SDBNLPA'\n          BE   DEALVLPA\n          ST   1,CURVLST\n          ST  1,LPSNAMEA\n*         MVC  PEALCDDN,=CL8'LPALIBN'\n*         CLOSE LPALIBN\n*         LA   1,PDPOINT       DEALLOC LPALST\n*         DYNALLOC\n          LA   1,LTPOINT       ALLOCATE LPALIB\n          DYNALLOC\n          CH  15,=H'4'\n          BH   DEALVLPA\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (LPALIBN,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLPA\n*****BLDL LPALIB\n          LA  DCBREG,LPALIBN\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLPA\n           OI  WORKSW2,LOADLPAN\n           MVC  WORKDDN,=CL8'LPALIB'\n           MVC  WORKDSN,LPADSN\nDEALVLPA   DS   0H\n           CLOSE  LPALIBN\n          MVC  PEALCDDN,=CL8'LPALIBN'\n          LA   1,PDPOINT       DEALLOC LPALST\n          DYNALLOC\n          MVC  PEALCDDN,=CL8'PARMLIB'  RESET\n           TM  WORKSW2,LOADLPAN\n           BO  OUTPLIB\n          OC   CURNUM,CURNUM\n           BZ   ENDVLPA1\n           B   NEXTLPST\n*************************************************************\nENDVLPA1 DS   0H\n**PROCESS ADDITIONAL LPALIBS\n          XC  NUMLPAS,NUMLPAS\n          LA  2,LPALIBS\n          ST  2,LASTLPA\n          SR 1,1\n          LA  3,LPAHLEN\n          MVCL 2,0      CLEAR OUT\n          L  2,NEXTCONA   NEXT PARM IN LPA=(XXX) FROM IEASYS\n          CLI 0(2),C','\n          BNE *+8\n          LA  2,1(2)\n          C   2,LASTCONA   END OF LIST\n          BNL OUTPLIB\n          CLI 0(2),C'&&'  SUBSTITUTABLE\n          BE  SUBLPA\n          CLI  0(2),C'L'   END OF LIST\n          BE  OUTPLIB\n          CLI  0(2),C','   2 CHAR VALUE\n          BNE  OUTPLIB\n          B  MSLPA\n***END****ALLOCATE LPALIBS, OPEN, BLDL\n**********************************\nSUBPARM    DS   0H\n**ADDR OF PARM TO BE SUBSTITUTED IN R2 'LPALSTXX'\n          STM  14,12,RTNSAVE+12\n          MVC LPALST(6),=CL6'LPALST'\n          CLC  1(8,2),=CL8'SYSCLONE'\n          BE   SP1CLONE\n          CLC  1(7,2),=CL7'SYSNAME'\n          BE   SP1NAME\n          CLC  1(7,2),=CL7'SYSPARM'\n          BE   SP1PARM\n          MVC  NEXTCONA,LASTCONA\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1CLONE   DS   0H\n          MVC LPALST+6(2),SYSCLONE\n          LA  2,10(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1NAME   DS   0H\n          MVC LPALST+6(2),SYSNAME\n          LA  2,9(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1PARM   DS   0H\n          MVC LPALST+6(2),SYSPARM\n          LA  2,9(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\n**********************************\nLPELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          L    3,LASTLPA\n          MVC LPAOFF(44,3),=44C' '\n          LA   15,0(2)\n          L    14,=A(DELIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVELPAN\n          MVC  LPADSN,VOFF(3) SAVE DSNAME\n          MVC  0(LPLCONSL,3),LPLCONS\n***SEE IF ANY SUBSTITUTABLES IN DSN\n          LA   15,LPADSN\nSCAMP     SCANARG '&&SYS',ADDR=0(15),LEN=32\n          BNZ  DOSUBAMP\n***ADJUST LEN FIELD GENERATED IN MACRO BECAUSE OF &&\n***GENERATED LEN CODE WAS 4 AND NEEDS TO BE 3.. ONLY TEST FOR &SYS\n           ORG  SCAMPARGS\n           DC  X'D503'\n           ORG\n          LM   14,12,RTNSAVE+12\n          BR   14\nDOSUBAMP   DS  0H R1 HAS ADDRESS OF &SYS; R15=LPADSN\n          MVC   WORKDSN,=44C' '\n          LR   14,1\n          SR  14,15   OFFSET TO &SYS\n          BCTR 14,0\n          EX   14,MOVEWORK\n          LA   2,WORKDSN+1\n          AR   2,14   POINT TO SUBSTITUTABLE AREA\n          MVC  LEN,=AL2(L'SYSNAME)\n          CLC 1(7,1),=CL7'SYSNAME'\n          BNE *+14\n          MVC  0(L'SYSNAME,2),SYSNAME\n          B   COSUBAMP\n          MVC  LEN,=AL2(L'SYSPARM)\n          CLC 1(7,1),=CL7'SYSPARM'\n          BNE *+14\n          MVC  0(L'SYSPARM,2),SYSPARM\n          B   COSUBAMP\n          MVC  LEN,=AL2(L'SYSCLONE)\n          CLC 1(7,1),=CL7'SYSCLON'\n          BNE *+14\n          MVC  0(L'SYSCLONE,2),SYSCLONE\n          B   COSUBAMP\n          B  OUSUBAMP\n**************************\nCOSUBAMP   DS   0H\n          AH   2,LEN    POINT PAST SUBSTITUTED AREA\n          LA   15,LPADSN\nPPAMP     SCANARG '..',ADDR=0(15),LEN=42\n          BZ   OUSUBAMP\n          LA   14,LPADSN+L'LPADSN    END OF FIELD\n          SR  14,1                   LENGTH OF LAST PART OF DSN\n           BCTR 14,0\n           AR 15,14        AREA TO MOVE  PAST .\n           BCTR 14,0      FOR LENGTH CODE\n           EX  14,MOVELAST\n          MVC  LPADSN,WORKDSN\n          L   3,LASTLPA\n          MVC LPAOFF(L'WORKDSN,3),WORKDSN\nOUSUBAMP   DS  0H\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVELOAD  MVC LOADMEMB(0),2(1)\nMOVELPAN  MVC VOFF(0,3),0(15)\nMOVEWORK  MVC WORKDSN(0),LPADSN\nMOVELAST  MVC 0(0,2),1(1)\n***********************************\nLPLCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nLPLCONSL EQU  *-LPLCONS\n**********************************\nPARMLIB DCB DSORG=PO,MACRF=(R),DDNAME=PARMLIB\nLPALIBN DCB DSORG=PO,MACRF=(R),DDNAME=LPALIBN\n******TO ALLOC SYS1.PARMLIB\n         DS  0F\nPTPOINT  DC   A(PBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   PTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nPBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(PBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\nALCPOINT DC    A(PXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nPBEL     EQU   *-PBS\n* TEXT POINTERS  FOR ALLOCATION\nPXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nPDNPOINT DC   A(PDNTEXT)    DDN TU\nPSNPOINT DC   A(PSNTEXT)    DSN TU\nPSPPOINT DC   A(PSSPTEXN)   DISP TU\n         ORG  PSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nPMPOINTS DS   0F     ALLOCATE WITH MEMBER NAME\n         DC   A(PDNTEXTS)   DDN TU\n         DC   A(PSNTEXT)    DSN TU\n         DC   A(PSSPTEXN)   DISP TU\nPSMPOINT DC   A(PSMTEXT)    MEMBER TU\n         ORG  PSMPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nPDNTEXTS DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)           LENGTH OF PARM\nPDNPARML DC    CL8'PARMLIBS'  DDNAME\n***************\nPDNTEXT  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)           LENGTH OF PARM\nPARMDDN  DC    CL8'PARMLIB'  DDNAME\n**DSN  TEXT UNIT\nPSNTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(44)  LENGTH OF PARM\nPSNDSN   DC    CL44'SYS1.PARMLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nPSMTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)   LENGTH OF PARM\nPSMMEMB  DC    CL8'LOAD    '     MEMBERNAME\n**DISP TEXT UNIT\nPSSPTEXN  DS    0F   DSP TEXT UNIT\n         DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\n          DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n          DC    AL2(1)  LENGTH OF PARM\n         DC    X'08'  DISP=SHR\n***FOR DEALLOCATION\nPDPOINT  DC   A(PDBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   PDPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nPDBSD    DS   0F\n          DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n          DC    AL1(NDBELD)  LEN OF RB\n          DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\n          DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n          DS    X       2ND   FLAG BYTE\n          DS    XL2     ERROR REASON CODE\n          DS    XL2     INFO  REASON CODE\n          DC    A(PDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\n* TEXT POINTERS  FOR DEALLOCATION\nPDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\n         DC   A(PNDNTEXD)  DDN TU\n         ORG PDXPOIND    FOR LAST TU\n         DC  X'80'\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nPNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)  LENGTH OF PARM\nPEALCDDN DC    CL8'PARMLIB'  DDNAME\n**********TO ALLOCATE LPA  DSNS\nLTPOINT  DC   A(LPS) ADR  REQ BLOCK PASSED IN R1\n         ORG   LTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nLPS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(VBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\n         DC    A(LPPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\n* TEXT POINTERS  FOR ALLOCATION  OF LPA  LIBS\nLPPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\n         DC   A(LPDNAME)    DDN TU\nLPSNAMEA DS   A             DSN TU\nLPPPOINT DC   A(PSSPTEXN)   DISP TU\n         ORG  LPPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nLPDNAME  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nLPDPARM  DC    CL8'LPALIBN'  DDNAME\n******FOR TSO**************\n*READAREA DS   F\n*RECADDR  DS   F\n*ENDBLOCK DS   F\n*LASTBLOC DS   F\n*DSERVOUT DS   F\n*DSERVLEN DS   F\n*NUMMEMBS DS   F\n*CURMEMBS DS   F\n*LEN      DS  H\n*BLKSIZE  DS  H\n*LRECL    DS  H\n*LOADMEMB DS  CL8\n*IEASYS   DS  CL8\n*LPALST   DS  CL8\n*SYSNAME  DS  CL4\n*SYSCLONE DS  CL2\n*SYSPARM  DS  CL2\n*LPACONST DS  CL20\n*ERRSW    DS  X\n*****************\n          LTORG\n          DROP  LINKREG\n          EJECT\n***************************************\nSRCHJES2  DS   0H   SEARCH SYS1.PROCLIB(JES2) FOR PROCLIB DSNS\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          XC    NUMPLIBS,NUMPLIBS\n          MVC   JDNTXPRM,=CL8'JESPROC'\n          MVC   JSNPOINT,=A(JSNTEXT)\n          LA   1,JTPOINT       ALLOC PROCLIB\n          DYNALLOC\n          CH   15,=H'4'\n          BH   ENDPROCK\n*****READ JES2 MEMBER AND GET DSNS OF PROCLIBS\n          ST   13,MVSSAVE\n          LA   13,MVSSAVE\n          OPEN (JESPROC,(INPUT))\n          LTR  15,15\n          BNZ  ENDPROCK\nJEXTPR     DS   0H\n          GET JESPROC\n          CLC  0(6,1),=CL6'//PROC'\n          BE   GOTJPROC\n          B    JEXTPR\nGOTJPROD  DS   0H\n          LA   3,L'PROCLIBS(3)\n          B    *+8\nGOTJPROC  DS   0H\n          LA   3,PROCLIBS\n          LR   2,1\nGTJ       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROCJ\n          BAL  14,JDELIM\nJONTVLST   DS   0H\n          LA   3,L'PROCLIBS(3)   NEXT ENTRY\n          LH   0,NUMPLIBS\n          AH   0,=H'1'\n          STH  0,NUMPLIBS\n          CH   0,=AL2(NUMPLIBN)\n          BH   ENDPROCJ    MAX OF 30 DSNAMES\nJETVLST   DS   0H\n          GET  JESPROC\n          CLI  2(1),C'*'   COMMENT?\n          BE   JETVLST\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  JREVLIB     SEE IF //PROCNN\n          LR   2,1\nJC1       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROCJ\n          BAL  14,JDELIM\n          B    JONTVLST\nJREVLIB   DS   0H\n          CLC  0(6,1),=CL6'//PROC'\n          BE   GOTJPROD\n          B   ENDPROCJ\nENDPROCJ  DS   0H\n          CLOSE JESPROC\nENDPROCK  DS    0H\n*****DEALLOCATE PROCLIB\n          MVC  JEALCDDN,=CL8'JESPROC'\n          MVC  JDMEMBER,=CL8'JES2'\n*         NI   JDDNPOID,255-X'80'  SET OFF LAST TU ON DDN\n*         OI   JDDMPOID,X'80'  SET ON  LAST TU ON MEMBER\n          LA   1,JTPOINTD      DEALLOC PROCLIB\n*         NI   JDDMPOID,255-X'80'  SET OFF LAST TU ON MEMBER\n*         OI   JDDNPOID,X'80'  SET ON  LAST TU ON DDN\n          DYNALLOC\n*******ALLOCATE PROCLIB LIBS\n          LA  1,PROCLIBS\n          MVC  WORKDSN,POFF(1)\n          ST  1,JSNPOINT\n*         MVC  JDNTXPRM,=CL8'SYSPROC'\n          MVC  JDNTXPRM,=CL8'PROCXXX'\n          OI   JSPPOINT,X'80'  SET LAST TU - NO MEMBER NAME\n          LA   1,JTPOINT       ALLOCATE PROCLIB\n          DYNALLOC\n          MVC  JSNPOINT,=A(JSNTEXT)  RESET\n          NI   JSPPOINT,255-X'80'  RESET\n          LTR  15,15\n          BNZ  JEALVLST\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n*         OPEN (SYSPROC,(INPUT))\n          OPEN (PROCXXX,(INPUT))\n          LTR  15,15\n          BNZ   JEALVLST\n*****BLDL SYSPROC\n*         LA  DCBREG,SYSPROC\n          LA  DCBREG,PROCXXX\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  JEALVLST\n           OI  WORKSW2,LOADPROC\nJEALVLST   DS   0H\n***        CLOSE  SYSPROC\n           CLOSE  PROCXXX\n*         MVC  JEALCDDN,=CL8'SYSPROC'\n          MVC  JEALCDDN,=CL8'PROCXXX'\n          LA   1,JTPOINTD      DEALLOC PROCLIB\n          DYNALLOC\n            TM  WORKSW2,LOADPROC\n            BO ENDVLSTJ\n            B  JEXTVLSA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nJEXTVLSA  DS    0H\n          LH   1,NUMPLIBS\n          LTR  1,1\n          BZ   ENDVLSTJ\n          STH  1,CURNUM\n          LA   1,PROCLIBS+L'PROCLIBS\n          ST   1,CURPLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nJDDVLSTP  DS   0H\n          ST   1,JSNPOINT\n          MVC  WORKDSN,POFF(1)\n          MVC  JDNTXPRM,=CL8'PROCXXX'\n          OI   JSPPOINT,X'80'  NO MEMBER NAME\n          LA   1,JTPOINT       ALLOCATE PROCXXX\n          DYNALLOC\n          NI   JSPPOINT,255-X'80'\n          MVC  JDNTXPRM,=CL8'JESPROC' RESET\n          LTR  15,15\n          BNZ  JEALVXXX\n          OPEN (PROCXXX,(INPUT))\n          LTR  15,15\n          BNZ   JEALVXXX\n          LA  DCBREG,PROCXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  JEALVXXX\n           OI  WORKSW2,LOADPROC\n            B  JEALVXXX\nJEALVXXX   DS   0H\n           CLOSE PROCXXX\n*****DEALLOCATE PROCXXX\n          MVC  JEALCDDN,=CL8'PROCXXX'\n          LA   1,JTPOINTD      DEALLOC PROCXXX\n          DYNALLOC\n          MVC  JEALCDDN,=CL8'JESPROC'  RESET\n          TM  WORKSW2,LOADPROC\n          BO  ENDVLSTJ\n          B  JEXTVLSB\nJEXTVLSB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLSTJ\n          STH  1,CURNUM\n          L    1,CURPLST\n          LA   1,L'PROCLIBS(1)\n          ST   1,CURPLST\n          B    JDDVLSTP\nENDVLSTJ DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,MVSSAVE\n          BR   RET\nJDELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          MVC POFF(44,3),=44C' '\n          LA   15,4(1)\n          L    14,=A(DELIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVEJTN\n          MVC  0(JALCONSL,3),JALCONS\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVEJTN   MVC POFF(0,3),0(15)\nJALCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nJALCONSL EQU  *-JALCONS\nJESPROC DCB DSORG=PS,MACRF=GL,DDNAME=JESPROC,EODAD=ENDPROCJ\nPROCXXX DCB DSORG=PO,MACRF=(R),DDNAME=PROCXXX\n         DS  0D\nFILL    DC   CL8'JTPOINT'\n******TO ALLOC SYS1.PROCLIB\n         DS  0D\nJTPOINT  DC   A(JBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   JTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nJBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(JBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\nJBTXTPP  DC    A(JXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nJBEL     EQU   *-JBS\n* TEXT POINTERS  FOR ALLOCATION\nJXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nJDNPOINT DC   A(JDNTEXT)    DDN TU\nJSNPOINT DC   A(JSNTEXT)    DSN TU\nJSPPOINT DC   A(JSSPTEXN)   DISP TU\nJSMPOINT DC   A(JSMTEXT)    MEMBER TU\n         ORG  JSMPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nJDNTEXT  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\n         DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDNTXPRM)  LENGTH OF PARM\nJDNTXPRM DC    CL8'JESPROC'  DDNAME\n**DSN  TEXT UNIT\nJSNTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JSNTXPRM)   LENGTH OF PARM\nJSNTXPRM DC    CL44'SYS1.PROCLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nJSMTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JSMTXPRM)   LENGTH OF PARM\nJSMTXPRM DC    CL8'JES2    '     MEMBERNAME\n**DISP TEXT UNIT\nJSSPTEXN  DS    0F   DSP TEXT UNIT\nJISPTEXT  EQU   *\n         DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\n          DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n          DC    AL2(L'JSSPTXPR)  LENGTH OF PARM\nJSSPTXPR DC    X'08'  DISP=SHR\n***FOR DEALLOCATION\n          DS   0D\nJTPOINTD DC   A(JBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   JTPOINTD  S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nJBSD    DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n          DC    AL1(JDBELD)  LEN OF RB\n          DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\n          DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n          DS    X       2ND   FLAG BYTE\n          DS    XL2     ERROR REASON CODE\n          DS    XL2     INFO  REASON CODE\n          DC    A(JDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nJDBELD     EQU   *-JBSD\n* TEXT POINTERS  FOR DEALLOCATION\nJDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\nJDDNPOID DC   A(JNDNTEXD)  DDN TU\n         ORG JDDNPOID   FOR LAST TU\n         DC  X'80'\n         ORG\nJDDSPOID DC  A(JSNTEXT)  DSN    TU\nJDDMPOID DC  A(JDDMTEXD) MEMBER TU\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nJNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDNTXPRM)  LENGTH OF PARM\nJEALCDDN DC    CL8'JESPROC'  DDNAME\nJDDMTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDMEMBER)  LENGTH OF PARM\nJDMEMBER DC    CL8'JES2'  MEMBER NAME\n          LTORG\n          DROP  LINKREG\n          EJECT\n***************************************\nTRTAB    DS   0C\n        USING *,1\n      DC   256AL1(*-TRTAB)\n         ORG  TRTAB\n          DC  X'40'\n          ORG\n          LTORG\n          DROP  1\nTRANTAB DS   0C\n        USING *,1\n      DC   256AL1(*-TRTAB)\n         ORG  TRANTAB\n          DC  X'40'\n         ORG  TRANTAB+C','\n          DC  X'40'\n          ORG\n          LTORG\n          DROP  1\nSBATAB   DS   0C\n         USING *,1\n          SBA  3,1\n          SBA  4,1\n          SBA  5,1\n          SBA  6,1\n          SBA  7,1\n          SBA  8,1\n          SBA  9,1\n          LTORG\n          DROP  1\nDELIMTAB DS   0C\n         USING *,1\n         DC   256X'00'\n          ORG  DELIMTAB\n          DC   X'FF'\n          ORG  DELIMTAB+C' '\n          DC   X'FF'\n          ORG  DELIMTAB+C','\n          DC   X'FF'\n          ORG\n          LTORG\n          DROP  1\nALPHTAB DS   0C\n         USING *,1\n         DC   256X'00'\n          ORG  ALPHTAB+X'C1'\n          DC  9X'FF'\n          ORG  ALPHTAB+X'D1'\n          DC  9X'FF'\n          ORG  ALPHTAB+X'E2'\n          DC  8X'FF'\n          ORG\n          LTORG\n          DROP  1\n         END                                                            COP00620\n/*\n//*2  EXEC DFH4LNK4,MOD=WMOD,LNKLIB='XCICS.CICS410.TEST',AMODE=24,\n//* RMODE=24\n//*2  EXEC DFH2LNKC,MOD=WMOD,LNKLIB='XCICS.CICS212.TEST',\n//* COND=(4,LT,STP1.ASM)\n//S2  EXEC DFH5LNK5,MOD=WMOD,LNKLIB='XCICS.CICS530.TEST',\n//  AMODE=24,RMODE=24\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMODCIC2": {"ttr": 6917, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x95\\x05O\\x00\\x95 \\x0f\\x13\\x17\\x03@\\x03/\\x00\\x00\\xd6\\xd3\\xc4\\xc5\\xd9@@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1995-02-23T00:00:00", "modifydate": "1995-07-19T13:17:00", "lines": 832, "newlines": 815, "modlines": 0, "user": "OLDER"}, "text": "*ASM XOPTS(CICS  SP     NOPROLOG   SPIE NOEPILOG)\n**********W M O D***CICS VERSION****************************\n*FORMAT: WMOD MODULENAME\n**       THIS PROGRAM SEARCHES ALL DFHRPL LIBRARIES, STEPLIB,\n***      LINKLIST, LPA, AND SVCLIB FOR SPECIFIED MODULE NAME.\n***      IT TAKES A GUESS AS TO WHERE CICS LOADED THE MODULE FROM\n***      IF THE MODULE EXISTS IN MULTIPLE PLACES (IE: MODULE IS\n**       IN DFHRPL AS WELL AS STEPLIB AND LPA).\n**       FOR LPA MODULES, THE ADDRESS OF THE MODULE IN LPA WILL\n**       BE RETURNED. FOR OTHER MODULES, THE DATASET NAME WILL\n**       BE RETURNED.\n*********ASSEMBLY INSTRUCTIONS**********************\n*****SPECIFY SYSPARM(33) OR SYSPARM(22) IN ASSEMBLER PARM FIELD\n****DEPENDING UPON CICS RELEASE\n****LINK WITH AMODE(24) FOR BOTH CICS V2 AND V3\n*INCLUDE IN SYSLIB A MACLIB CONTAINING MACROS ESBA, CONVCODE, SETM\n* WHICH ARE INCLUDED IN THIS PDS OR ARE ON THIS TAPE\n************CICS INSTRUCTIONS\n*DEFINE PPT, PCT TABLE ENTRIES FOR TRAN WMOD, PROGRAM WMOD\n*PPT: DFHPPT PROGRAM=WMOD,PGMLANG=ASSEMBLER\n*PCT: DFHPCT TRANSID=WMOD,PROGRAM=WMOD\n*TO RUN TRANSACTION: WMOD MODNAME\n****************************************************\nBASE     EQU   11                                                       COP00220\nLINKREG   EQU  8\nRET      EQU  10\nTCTTEAR  EQU   9                                                        COP00230\nTIOABAR  EQU   7                                                        COP00240\nTCSYSBAR EQU   1\nEIBREG    EQU  2\nDATAREG   EQU  6\nPRVREG   EQU   5    PRVMOD LIST\nCVTREG    EQU  1\nLPDEREG   EQU  2\nDCBREG    EQU  2\nDEBREG    EQU  3\nLLTREG    EQU  3\nTIOTREG   EQU  4\nARLREG    EQU  4\nSITREG    EQU  4\nCSAREG    EQU  13\nJSCBREG   EQU  15\nJFCBREG   EQU  15\nTCBREG    EQU  5\nOPFLREG   EQU  5\n         PRINT OFF,NOGEN\n        DCBD  DSORG=PO\nDCBLEN  EQU  *-IHADCB\nARL    IHAARL  DSECT=YES,PREFIX=ARL,DESCR=YES\nARLENGTH EQU  *-ARL\nTIOT     DSECT\n        IEFTIOT1\nTIOTOFF   EQU  TIOENTRY-TIOT\nXIOT      DSECT\n     ORG XIOT+TIOELNGH-TIOENTRY\nXIOELNGH  DS   XL(L'TIOELNGH)\n     ORG  XIOT+TIOEDDNM-TIOENTRY\nXIOEDDNM  DS  CL(L'TIOEDDNM)\n     ORG  XIOT+TIOEJFCB-TIOENTRY\nXIOEJFCB  DS   XL(L'TIOEJFCB)\nJFCB     DSECT\n         IEFJFCBN LIST=YES\nDEBBASIC  IGGDEBD\n          IKJTCB  LIST=YES,DSECT=YES\n          IEZJSCB\nARAD    DSECT\nARALEN   DS   H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4\n***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)\n         DS   XL2  RESERVED\nARAJFCB  DS    CL176   JFCB\nARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL\n        CVT   DSECT=YES,LIST=YES\n          IHALPDE\nLPDELEN    EQU   *-LPDE\nLLTE      DSECT\n          DS   X\nLLTDSN    DS  CL44\nLLTLEN    EQU  *-LLTE\nLLTOFF    EQU  8    OFFSET TO FIRST LLTE\n         PRINT ON,GEN\n         COPY  DFHCSADS                                                 COP00070\n         DFHAFCD TYPE=DSECT\n         DFHTCA  CICSYST=YES      SYSTEM T C A   AND USER EB MOD\n         COPY  DFHTCTTE                                                 COP00100\n         DFHSIT TYPE=DSECT\nPRVLIST   DSECT  PRVMOD LIST ..SITPRVMA\nPRVLEN    DS   F\nPRVNUM    DS   F\nPRVENTRY  DS   CL8    FOR EACH ENTRY\n         COPY  DFHTIOA                                                  COP00110\nBUFFER   DS   80F\n         ORG   TIOADBA                                                  COP00130\nINITINP  DS    0F                                                       COP00140\nTRANSID  DS    CL4                                                      COP00150\nBLNK     DS    C                                                        COP00160\nPROGRAM  DS    CL8                                                      COP00170\n          DFHEISTG\nSAVELINK DS   18F\nSAVEMAC  DS   18F\nSAVER13  DS    F\nTCAADDR  DS    F\nCSAADDR  DS    F\nTCTADDR  DS    F\nTIOADDR  DS    F\nEIBADDR  DS    F\nDATAADDR DS    F\nRPLADDR  DS    F\nTCBADDR   DS   F\nTIOTADDR  DS   F\nDEBADDR   DS   F\nDCBADDR   DS   F\nRETADDR    DS   F\nLASTSBA    DS  F\nMSL      DS    H\nWORKPROG  DS   CL8\nWORKDSN   DS   CL42\nWORKDDN   DS   CL8\nWORKADDR   DS   F\nDFHADDR    DS   F\nWORKCDDR   DS   CL8\nRELSW     DS   X\nWORKSW    DS   X\nNOLPA     EQU  X'01'\nNOPPT     EQU  X'02'\nFOUND     EQU  X'04'\nLOADSVC   EQU  X'08'\nLOADLPA   EQU  X'10'\nLOADSTEP  EQU  X'20'\nLOADLINK  EQU  X'40'\nLOADRPL   EQU  X'80'\nOUTLINE  DS    0C\nOUTPROG   DS   CL8\nOUTPUNC   DS  CL2\nOUTCON   DS   0C\n***       DC  X'11C2601DC0'  ROW3 COL1\n        ESBA  3,1\n          ORG  OUTCON+1\nOUTSBA   DS  XL2\n          ORG\nPROGCON  DS  CL8\nLOADCON  DC C' IS IN DDN   '\nDDNCON   DS  CL8\n         DS   C\nDSNCON   DS  CL42\nLPACON   DC   C' NOT LOADED FROM LPA'\nOUTCONL   EQU  *-OUTCON\nWARLAREA  DS  CL(ARLENGTH)\nWXJFCB   DS    0F                                                       JFC00600\n         DC   X'13'           FOR LAST ENTRY                            JFC00610\nWXADD    DC   AL3(WARLAREA)                                             JFC00620\nWDCB     DS CL(DCBLEN)                                                       JFC\nWDJLIST  RDJFCB  (2),MF=L\n         ORG   *-3\nWDJDCBA  EQU  *   ADDR OF DCB\n         DS   AL3   PUT DCB ADDR HERE\n         ORG\nBLDLLIST  DS   0H\nBLDLNUM   DS   H   NUMBER OF ENTRIES\nBLDLLEN  DS   H   LEN OF EACH ENTRY\nBLDENTRY  EQU  *\nBLDLNAME  DS  CL8\nBLDLTTR   DS  XL3\nBLDLCCAT  DS  X   CONCAT NUMBER RETURNED BY BLDL\nBLDLZ     DS  X   WHERE ENTRY FOUND\nBLDLELEN  EQU  *-BLDENTRY  LEN OF EACH ENTRY\n         DFHEIEND\n         PRINT ON,GEN\n*********************************************************************** COP00210\n*********************************************************************** COP00250\n* NAME: WMOD                                                            COP00290\n* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310\n*                                                                       COP00420\n**********************************************************************  COP00430\nWMOD     DFHEIENT CODEREG=BASE,DATAREG=DATAREG,EIBREG=EIBREG            COP00440\nBEGIN    DS    0H\n         ST    EIBREG,EIBADDR       TCA ADDR\n         ST    DATAREG,DATAADDR     TCA ADDR\n         ST    13,SAVER13\n***       L     13,DFHEIRS1          CSA\n          DFHCSAD TYPE=LOCATE,REG=13\n          ST    13,CSAADDR\n        USING DFHCSADS,13\n          MVC  RELSW,CSACIREL\n           CLI RELSW,X'32'\n           BL   SKIPSETM\n          SETM  ON\nSKIPSETM  DS   0H\n          L    TCACBAR,CSACDTA          TCA USER\n         DROP  13\n         ST    TCACBAR,TCAADDR           TCA ADDR\n         L     TCTTEAR,TCAFCAAA     LOAD TCT BASE                       COP00470\n         ST    TCTTEAR,TCTADDR\n         L     TIOABAR,TCTTEDA      LOAD TIOA BASE                      COP00480\n         ST    TIOABAR,TIOADDR\n         XR    5,5                 CLEAR REG 5                          COP00490\n         MVC    WORKPROG,PROGRAM\n         L     15,=A(TRTAB)        TRANSLATE 00 TO BLANK\n         TR  WORKPROG,0(15)\n          SETM   OFF\n          MVC  LASTSBA,=A(SBATAB)\n*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA\n         L   LINKREG,=A(CHKSLIB)\n        BALR  RET,LINKREG\n         TM   WORKSW,LOADSTEP\n         BO   DOSTEP       IS IN STEPLIB/JOBLIB\n          B   TESTSVC\nTESTSVC   DS   0H\n         TM   WORKSW,LOADSVC\n         BNO  TESTLINK       CHECK LINKLIST\n         MVC WORKDSN,SVCDSN\n         MVC WORKDDN,=CL8'SVCLIB'\n         MVC  RETADDR,=A(TESTLINK)\n         B    PUTOUT\nDOSTEP   DS   0H\n         XC   RETADDR,RETADDR\n         XC   WORKDSN,WORKDSN\n         XC   WORKDDN,WORKDDN\n         L    LINKREG,=A(RDJFCB)\n         ICM  LINKREG,8,=X'FF'   SIGNAL ROUTINE\n        BALR  RET,LINKREG\n         MVC   WORKDDN,=CL8'STEPLIB'\n          MVC  RETADDR,=A(TESTSVC)\n         B     PUTOUT    IF NOT STEPLIB SEARCH LINKLIST\nTESTLINK  DS   0H\n           TM  WORKSW,LOADLINK\n          BO   DOLINK\n          B   TESTLPA\nDOLINK   DS    0H\n          XC   WORKDDN,WORKDDN\n          XC   WORKDSN,WORKDSN\n         L    LINKREG,=A(SRCHLINK)\n        BALR  RET,LINKREG\n         MVC   WORKDDN,=CL8'LINKLIB'\n          MVC  RETADDR,=A(TESTLPA)\n          B    PUTOUT\nTESTLPA    DS   0H   CHECK IF MODULE IN LPA\n          L    LINKREG,=A(SRCHSIT)  SEE IF LPA=YES OR PRVMOD\n          BALR RET,LINKREG\n           B    DOLPA\nDOLPA      DS   0H\n          XC   WORKADDR,WORKADDR\n          MVC  WORKDDN,=CL8'LPALIB'\n          L    LINKREG,=A(SRCHLPA)\n          BALR RET,LINKREG\n          TM  WORKSW,LOADLPA\n           BNO TESTRPL\n          MVC RETADDR,=A(TESTRPL)\n          B   PUTOUT\nTESTRPL  DS   0H\n****LOCATE DCB FOR DFHRPL AND ISSUE BLDL FOR GIVEN MODULE\n         MVC  WORKDDN,=CL8'DFHRPL'\n         XC   BLDLTTR,BLDLTTR\n         XC   WORKDSN,WORKDSN\n         L   LINKREG,=A(FINDDCB)\n        BALR  RET,LINKREG\n         TM   WORKSW,LOADRPL\n         BNO  NOPROG       PROGRAM NOT IN DFHRPL\n         B    DORPL\nDORPL    DS    0H\n****READ JFCBS FOR DFHRPL AND EXTRACT DSN IN CONCATENATION****\n         L   LINKREG,=A(RDJFCB)\n        BALR  RET,LINKREG\n         CLI   WORKDSN,X'00'\n         BE    NOPROG\n         MVC   RETADDR,=A(WHERLOAD)\n         B     PUTOUT\nNOPROG   DS   0H\n          TM  WORKSW,FOUND\n          BO  WHERLOAD    FIGURE OUT WHERE LOADED FROM\n         MVC  OUTCON(ERRMESSL),ERRMESS\n         MVC  PROGCON,WORKPROG\n         MVC  MSL,=AL2(ERRMESSL)\n          XC  RETADDR,RETADDR\n          B   DOSEND\nWHERLOAD  DS   0H\n           MVC MSL,=AL2(FINL)\n***IF PPT ENTRY AND LOAD MOD IN RPL, AND NOT IN LPA, ASSUME\n***LOADED FROM RPL, EVEN IF IN STEPLIB OR LINKLIST\n          MVC FINLIB,=CL8'DFHRPL'\n          TM  WORKSW,LOADRPL    IS MODULE IN RPL\n           BNO MAYBELPA         NO...\n          TM  WORKSW,NOPPT      IS MODULE NOT IN PPT\n          BO   MAYBELPA          YES..\n           TM  WORKSW,LOADLPA   IS MOD ALSO IN LPA\n          BNO  PUTFIN             NO..ASSUME RPL\n           TM  WORKSW,NOLPA  NO..LPA SPECIFIED\n          BO   PUTFIN     YES..THEN RPL\n           B   MAYBELPA   MAY STILL BE LOADED FROM LPA\nMAYBELPA  DS   0H\n           MVC  FINLIB,=CL8'LPALIB'\n          TM   WORKSW,LOADLPA    IS MODULE IN LPA\n           BNO  MAYBESTP          NO..\n           CLC WORKPROG,=CL8'DFHIRP'  DFH MOD\n            BE  PUTFIN\n           CLC WORKPROG,=CL8'DFHCSVC' DFH MOD\n            BE  PUTFIN\n           CLC WORKPROG(3),=CL3'DFH'  DFH MOD\n           BNE PUTFIN    ASSUME IN LPA IF NOT DFH\n           L   LINKREG,=A(SRCHCSA)    LOCATE ADDR OF MODULE\n           BALR RET,LINKREG      TO DETERMINE IF REALLY FROM LPA\n           CLI  FINLIB,C' '\n            BE MAYBESTP\n           B   PUTFIN\nMAYBESTP  DS   0H\n           MVC  FINLIB,=CL8'STEPLIB'\n           TM  WORKSW,LOADSTEP\n           BO   PUTFIN\n           MVC  FINLIB,=CL8'LINKLIB'\n           TM  WORKSW,LOADLINK\n            BO  PUTFIN\n           MVC  FINLIB,=CL8'SVCLIB'\n           TM   WORKSW,LOADSVC\n            BO  PUTFIN\n           TM  WORKSW,NOLPA          LPA=NO\n           BO   MAYBERPL\n            TM  WORKSW,LOADLPA\n             BO  SETLPAY\n           B    MAYBERPL\nMAYBERPL   DS   0H\n           MVC  FINLIB,=CL8'DFHRPL'\n           TM   WORKSW,LOADRPL\n            BO  PUTFIN\nSETLPAY     DS   0H\n           MVC  FINLIB,=CL8'LPALIB'\n           TM   WORKSW,LOADLPA\n            BO  PUTFIN\n           MVC  FINLIB,=CL8' '\n           B    PUTFIN\nPUTFIN    DS   0H\n   EXEC CICS SEND FROM(FINOUT) LENGTH(MSL)  WAIT\n         B   RETURN\nPUTOUT   DS   0H\n          OI   WORKSW,FOUND\n         MVC   OUTCON(CONOUTL),CONOUT\n          L    1,LASTSBA\n           MVC  OUTSBA,1(1)\n         MVC   PROGCON,WORKPROG\n         MVC  DDNCON,WORKDDN\n         MVC  MSL,=AL2(CONOUTL)\n         CLI  WORKDSN,X'00'\n         BE   *+14\n         MVC  DSNCON,WORKDSN\n          B   DOSEND\n         MVC  DSNCON(3),=CL3'AT '\n         MVC  DSNCON+4(L'WORKCDDR),WORKCDDR\n          B   DOSEND\nDOSEND   DS    0H\n      EXEC CICS SEND FROM(OUTCON) LENGTH(MSL)\n          L  1,LASTSBA\n          LA  1,5(1)\n          ST  1,LASTSBA\n         OC  RETADDR,RETADDR\n         BZ   RETURN\n          L   1,RETADDR\n         BR   1\nRETURN   DS   0H\n         EXEC CICS RETURN\nERRMESS  DS    0C\n****      DC  X'11C2601DC0'  ROW3 COL1\n        ESBA  3,1\nERRPROG  DS   CL8\n        DC C' NOT FOUND        '\nERRMESSL EQU  *-ERRMESS\nBLANKS   DC   8C' '\nCONOUT   DS   0C\n***       DC  X'11C2601DC0'  ROW3 COL1\n        ESBA  3,1\nCONPROG  DS  CL8\n         DC C' IS IN DDN   '\nCONDDN   DC  CL8' '\n          DC  C' '\nCONDSN   DC  CL42' '\nCONOUTL  EQU  *-CONOUT\nSVCDSN   DC  CL(L'WORKDSN)'SYS1.SVCLIB'\nCONLPA  DC  C' NOT LOADED FROM LPA'\nFINOUT   DS   0C\n***       DC  X'11C2601DC0'  ROW3 COL1\n        ESBA  20,20\n         DC  C' MODULE LOADED FROM '\nFINLIB    DS  CL8\nFINL     EQU  *-FINOUT\n         LTORG\n          EJECT\nRDJFCB  DS   0H\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n        LA  13,SAVEMAC\n         MVC  WARLAREA(ARLENGTH),CRL       MOVE TO DYNAMIC STORAGE\n         LA   ARLREG,WARLAREA\n         STCM  ARLREG,7,WXADD  STORE ADDR OF JFCBAREA IN EXLIST\n         USING ARL,ARLREG\n         MVC   ARLRETRV,=H'1'  ONLY WANT INFO FOR 1 DATASET\n         SR    0,0\n         IC    0,BLDLCCAT   RELATIVE CONCAT NUMBER\n         AH    0,=H'1'    ACTUAL CONCAT NUMBER\n         STH   0,ARLFIRST    DS   WITH THIS CONCAT NUMBER\n          DROP  ARLREG\n         MVI  WXJFCB,X'13'   CODE FOR CONCATENATION EXIT\n          MVC  WDCB,OPEJFCB  MOVE DCB\n          CLM   LINKREG,8,=X'FF'\n          BNE  *+10\n          MVC  WDCB,STEPDCB\n          LA   1,WDCB\n         USING IHADCB,1\n         LA  2,WXJFCB   RESET EXLST ADDR IN DCB\n         ST   2,DCBEXLST\n         DROP   1\n         MVC  WDJLIST,RDJLIST   MOVE RDJFCB LIST TO WORK AREA\n         LA   2,WDCB\n         STCM 2,7,WDJDCBA    STORE DCB ADDR IN RDJFCB LIST\n         LA   1,WDJLIST\n      RDJFCB   0(2),MF=(E,(1))                                          JFC00420\n         LTR  15,15\n         BNZ   ENDJFCB\n        B   PROCJFCB\nPROCJFCB DS   0H  FIND JFCB FOR CONCAT NUMBER FROM BLDL\n         LA   ARLREG,WARLAREA\n         USING ARL,ARLREG\n          L    1,ARLAREA  RESPONSE FROM RDJFCB\n          USING ARAD,1\n          LA   JFCBREG,ARAJFCB\n          DROP   1\n          USING JFCB,JFCBREG\n          MVC  WORKDSN,JFCBDSNM    SAVE DSNAME\n          B    FREEJFCB\nFREEJFCB DS   0H   FREE ARA\n****ISSUE FREEMAIN FOR STORAGE AREAS*****\n      SR  2,2\n      IC  2,ARLPOOL SUBPOOL\n      L   3,ARLAREA  ADDR OF ARA\n       SR   0,0\n      ICM  0,7,ARLRLEN\n       DROP  ARLREG\n   FREEMAIN RU,LV=(0),SP=(2),A=(3)\n       B  ENDJFCB\nGETOUT  DS   0H\n   EXEC CICS RETURN\nENDJFCB DS   0H\n        LM   14,12,SAVELINK+12\n        L    13,SAVER13\n        BR    RET\n***ALLOCATION RETRIEVAL LIST\nCRL  IHAARL  DSECT=NO,PREFIX=CRL,DESCR=NO\nEXJFCB   DS    0F                                                       JFC00600\n         DC   X'13'           FOR LAST ENTRY                            JFC00610\nEXADD    DS   AL3(CRL)                                                  JFC00620\nOPEJFCB   DCB   DDNAME=DFHRPL,EXLST=EXJFCB,MACRF=(E)                         JFC\nSTEPDCB   DCB   DDNAME=STEPLIB,EXLST=EXJFCB,MACRF=(E)                         JF\nRDJLIST    RDJFCB   (2),MF=L\n         DROP  LINKREG\n         LTORG\n         EJECT\nFINDDCB  DS   0H\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n         LA   13,SAVEMAC\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n         LR  TCBREG,1\n         B    NEXTTCB2\n         USING TCB,TCBREG\nNEXTTCB  DS   0H\n         L    TCBREG,TCBBACK  PREV TCB\nNEXTTCB2 DS    0H\n         LTR  TCBREG,TCBREG\n         BZ    RETDCB\n         ST   TCBREG,TCBADDR\n**CHECK IF DFHSIP TCB\n         L    JSCBREG,TCBJSCB\n         USING IEZJSCB,JSCBREG\n         CLC  JSCBPGMN,=CL8'DFHSIP'\n         BNE  RETDCB\n         DROP  JSCBREG\n         L    TIOTREG,TCBTIO   TIOT\n         ST   TIOTREG,TIOTADDR\n         L    DEBREG,TCBDEB    DEB QUEUE\n         ST   DEBREG,DEBADDR\n         DROP  TCBREG\n         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY\n         USING  XIOT,TIOTREG\n         SR    0,0\nFINDTIOT  DS   0H\n         CLI   XIOELNGH,X'00'\n         BE    RETDCB\n         CLC   XIOEDDNM,=CL8'DFHRPL'\n         BE   GOTRPL\n         IC  0,XIOELNGH   LEN OF ENTRY\n         AR   TIOTREG,0    NEXT ENTRY\n         B    FINDTIOT\n***LOCATE DFHRPL IN TIOT\nGOTRPL   DS    0H\n         ST   TIOTREG,RPLADDR\n****LOCATE DEB FOR DFHRPL****\n****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING RPLADDR\n         L    DEBREG,DEBADDR\n         USING DEBBASIC,DEBREG\n         B     FINDDEB\nNEXTDEB   DS    0H\n          CLC   DEBDEBAD+1(3),=XL3'000000'\n          BZ   NEXTTCB\n          L    DEBREG,DEBDEBAD     NEXT DEB\nFINDDEB   DS    0H\n       CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?\n         BNE   NEXTTCB\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   NEXTDEB          NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?\n          BNO  NEXTDEB         NO....\n         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB\n          L    1,TIOTADDR\n         AR    1,0         TIOT ADDR FOR THIS ENTRY\n          C    1,RPLADDR   SAME AS FOR DFHRPL\n          BE   GOTDCB     YES\n          B    NEXTDEB\nGOTDCB    DS    0H\n          ST  DCBREG,DCBADDR  DFHRPL DCB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  ENDFDCB\n           OI  WORKSW,LOADRPL\n          B   ENDFDCB\nENDFDCB  DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\nRETDCB   DS   0H\n         L   13,SAVER13\n         EXEC CICS RETURN\n          LTORG\n         DROP  LINKREG,TIOTREG,TCBREG,DEBREG,DCBREG\n          EJECT\nCHKSLIB   DS   0H   CHECK IF MODULE IN JOBLIB OR STEPLIB\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n***SEE IF PROG IN PPT\n           L   13,SAVER13\n   EXEC CICS HANDLE CONDITION ERROR(NOTINPPT)\n   EXEC CICS INQUIRE PROGRAM(WORKPROG)\n           B  GOSTEP\nNOTINPPT   DS   0H\n           OI  WORKSW,NOPPT\n           B  GOSTEP\nGOSTEP    DS   0H\n          LA    13,SAVEMAC\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n          ST  1,TCBADDR\n           USING TCB,1\n            L   DCBREG,TCBJLB\n            DROP  1\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKSVC\n           OI  WORKSW,LOADSTEP\n          B   CHKSVC\nCHKSVC    DS   0H\n          L   CVTREG,16\n           USING CVT,CVTREG\n           L   DCBREG,CVTSVDCB  DCB FOR SYS1.SVCLIB\n           DROP  CVTREG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKLINK\n           OI  WORKSW,LOADSVC\n          B   CHKLINK\nCHKLINK   DS   0H\n          L    CVTREG,16\n          USING CVT,CVTREG\n***ISSUE BLDL ON LINKLIST\n          MVC SAVELINK,CVTLLTA LINK LIST\n          L    DCBREG,CVTLINK  ADDR LINKLIST DCB\n           DROP CVTREG\n          XC   BLDLTTR,BLDLTTR\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  ENDSLIB\n          OI  WORKSW,LOADLINK\n           B  ENDSLIB\nENDSLIB  DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\nSRCHLINK  DS   0H   SEARCH LINK LIST FOR DSNAME\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          LA    13,SAVEMAC\n          L    CVTREG,16\n          USING CVT,CVTREG\n          L   LLTREG,CVTLLTA   LINK LIST\n          LA   LLTREG,LLTOFF(LLTREG) FIRST ENTRY\n          USING LLTE,LLTREG\n          SR   1,1\n          IC  1,BLDLCCAT  CONCATENTATION NUMBER\n          LTR  1,1\n           BZ   GOTLLT\nNEXTLLT   DS   0H\n          LA   LLTREG,LLTLEN(LLTREG)  NEXT ENTRY\n          BCT  1,NEXTLLT     LOOP CONCAT NUMBER OF TIMES\n          B   GOTLLT\nGOTLLT    DS   0H\n          MVC WORKDSN,LLTDSN\n          B   ENDSLINK\nENDSLINK DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\n****\nSRCHLPA DS   0H   SERCH FOR MODULE IN LPA\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n        LA  13,SAVEMAC\n         L   CVTREG,16\n         USING CVT,CVTREG\n         L    LPDEREG,CVTLPDIA  LPA DIRECTORY\n         DROP  CVTREG\n         USING  LPDE,LPDEREG\nTSTLPA   DS     0H\n         TM     LPDEATTB,LPDELPDE  LPDE IDENTIFIER\n         BNO    ENDSLPA\n         CLI    LPDENAME,X'00'\n          BE    ENDSLPA\n         CLC   WORKPROG,LPDENAME\n         BE    GOTLPA\n         LA    LPDEREG,LPDELEN(LPDEREG)\n          B     TSTLPA\nGOTLPA   DS    0H\n          MVC  WORKADDR,LPDEXTAD    LOAD ADDRESS\n           OI   WORKSW,LOADLPA\n          DROP  LPDEREG\nA  CONVCODE IN=WORKADDR,OUT=WORKCDDR,LEN=L'WORKADDR\n          B    ENDSLPA\nENDSLPA  DS    0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\nSRCHSIT DS   0H   SEE IF LPA=NO OR PRVMOD FOR DFH MODULE\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n        L   13,SAVER13\n*  EXEC CICS ADDRESS CSA(CSAREG)\n          L   CSAREG,CSAADDR\n        USING DFHCSADS,CSAREG\n         CLI   RELSW,X'32'\n          BL   NOSITM\n          SETM  ON\nNOSITM  DS    0H\n         L     SITREG,CSASITBA   SIT TABLE\n         DROP   CSAREG\n          USING DFHSITDS,SITREG\n           CLI  SITLPA,C'N'     LPA=NO\n           BE   SETSIT0\n          L    PRVREG,SITPRVMA   PRVMOD LIST\n          DROP  SITREG\n           LTR  PRVREG,PRVREG    ANY ENTRIES\n           BZ   SETSIT4     NO...\n           USING  PRVLIST,PRVREG\n          LH   1,PRVNUM+2  NUMBER OF ENTRIES\n           NOPR 0\n           LA  15,PRVENTRY  FIRST ENTRY\nTSTPRV     DS   0H\n          CLC   WORKPROG,0(15)\n           BE   SETSIT0\n           LA   15,8(15)  NEXT ENTRY\n           BCT  1,TSTPRV\n           B    SETSIT4\n          DROP  PRVREG\nSETSIT0  DS    0H\n          OI   WORKSW,NOLPA\n          B    ENDSIT\nSETSIT4   DS    0H\n          NI   WORKSW,255-NOLPA\n          B    ENDSIT\nENDSIT   DS    0H\n          SETM  OFF\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\nSRCHCSA   DS   0H   SEARCH LINK LIST FOR DSNAME\n          USING *,LINKREG\n          USING DFHCSADS,CSAREG\n          STM   14,12,SAVELINK+12\n          MVC  FINLIB,=CL8' '\n          L    CSAREG,CSAADDR\n          NI   WORKADDR,255-X'80'\n          B   SRCHCSA1\nSRCHCSA1  DS  0H    KCP-TCP\n          LA  1,CSAKCNAC   KCP ADDRA0\n          LA  3,CSATCTCA   TCP ADDRB8\n          LA  2,4            INCREMENT\nGOCSA1    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA1\n          B    SRCHCSA2\nSRCHCSA2  DS  0H    SRP-FDP\n          L  OPFLREG,CSAOPFLA\n          USING CSAOPFL,OPFLREG\n          LA  1,CSASRNAC   SRP20\n          LA  3,CSAFDNAC   FDP50\n          LA  2,4            INCREMENT\nGOCSA2    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA2\n          B    SRCHCSA3\nSRCHCSA3  DS  0H    DFHFCIN - EIP EXEC NUC\n          LA  1,CSAFCXAD   DFHCIN   78\n          LA  3,CSAEINAC   EXEC NUC A8\n          LA  2,4            INCREMENT\nGOCSA3    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA3\n          B    SRCHCSA4\nSRCHCSA4  DS  0H    RES MGR - TORS NUC    PGM\n          LA  1,CSAERMNA   RES MGRFC\n          LA  3,CSATONNA   TON 1B4\n          LA  2,4            INCREMENT\nGOCSA4    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA4\n          B    SRCHCSA5\nSRCHCSA5  DS  0H    DBCR    - ATT SEC     PGM\n     AIF ('&SYSPARM' EQ '').IS32\n     AIF ('&SYSPARM' LT '32').NOT32\n.IS32     ANOP\n          LA  1,CSADBCR    DBCR2DC       2DC\n          LA  3,CSAZCUTN   ATTACH SEC USERID TABLE MGR 38C\n          AGO  .CONTCSA5\n.NOT32    ANOP\n          LA  1,CSATRANA   FE GLOB TRAP  2D4\n          LA  3,CSATRRNA   RECOV RTN FOR GLOBAL TRAP   2D8\n.CONTCSA5  DS  0H\n          LA  2,4            INCREMENT\nGOCSA5    DS   0H\n          MVC  DFHADDR,0(1)\n          NI    DFHADDR,255-X'80'  SET OFF HI BIT\n          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR\n          BE   ISINLPA\n          BXLE 1,2,GOCSA5\n          B    NOTINLPA\nISINLPA   DS   0H\n          MVC  FINLIB,=CL8'LPALIB'\n          OI  WORKSW,LOADLPA\n          B   ENDSCSA\nNOTINLPA  DS   0H\n*         MVC  FINLIB,=CL8'DFHRPL'\n*         TM  WORKSW,LOADRPL\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8'STEPLIB'\n*         TM  WORKSW,LOADSTEP\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8'LINKLIB'\n*         TM  WORKSW,LOADLINK\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8'SVCLIB'\n*         TM  WORKSW,LOADSVC\n*         BO  ENDSCSA\n*         MVC  FINLIB,=CL8' '\n          B   ENDSCSA\nENDSCSA  DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,SAVER13\n          BR   RET\n          LTORG\n          DROP  LINKREG,OPFLREG,CSAREG\n          EJECT\n****\nTRTAB    DS   0C\n        USING *,1\n      DC   256AL1(*-TRTAB)\n         ORG  TRTAB\n          DC  X'40'\n          ORG\n          LTORG\n          DROP  1\nSBATAB   DS   0C\n         USING *,1\n         ESBA  3,1\n         ESBA  4,1\n         ESBA  5,1\n         ESBA  6,1\n         ESBA  7,1\n         ESBA  8,1\n         ESBA  9,1\n          LTORG\n          DROP  1\n         END                                                            COP00620\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMODTSO": {"ttr": 7176, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x000\\x01\\x143_\\x01\\x143_\\x13R\\n\\xd5\\n\\xf2\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-12-01T00:00:00", "modifydate": "2014-12-01T13:52:30", "lines": 2773, "newlines": 2802, "modlines": 0, "user": "SBGOLOB"}, "text": "         PRINT ON,GEN\n*****W M O D******TSO VERSION*************************\n****USAGE: WMOD MODNAME\n*********\n**REQUIREMENTS:\n**PLACE PROGRAM IN LINKLIST OR INVOKE THRU CALL STATEMENT IN A CLIST.\n*********************************\n**THIS PROGRAM WILL SEARCH ALL OPEN      PDS LIBRARIES IN THE TSO\n**ADDRESS SPACE FOR THE SPECIFIED MODULE NAME, INCLUDING CLISTS,\n**SOURCE, ISPF LIBRARIES, ETC. IT WILL ALSO SEARCH STEPLIB, LPA,\n**LINKLIST AND SVCLIB. FOR LPA MODULES, THE ADDRESS IN LPA WILL\n**BE RETURNED. FOR ALL OTHERS, THE DATASET NAME WILL BE RETURNED.\n*******************************************************\n          MACRO\n&NAME  CONVCODE &IN=0(3),&LEN=0(2),&OUT=0(1)\n&NAME.CONV DS  0H                  CONVERT TO DISPLAY\n         STM   1,3,&NAME.SAVE\n         LA    1,&OUT            ADDR TO MOVE TO\n         LA    3,&IN             FIELD TO CONVERT\n         LA    2,&LEN\n&NAME.GO  DS   0H\n         IC    0,0(3)            LOAD CHAR\n         SRL   0,4                 SHIFT OVER 4 BITS\n         STC   0,&NAME.CHAR        STORE IT\n         NI  &NAME.CHAR,X'0F'     ZERO OUT HI 4 BITS\n         TR   &NAME.CHAR,&NAME.TAB TRANSLATE TO DEC\n         MVC   0(1,1),&NAME.CHAR  MOVE TO OUTPUT\n         MVC  &NAME.CHAR,0(3)     MOVE FIELD\n         NI   &NAME.CHAR,X'0F'    ZERO OUT HI 4 BITS\n         TR  &NAME.CHAR,&NAME.TAB\n         MVC   1(1,1),&NAME.CHAR  MOVE TO TD ...MSGRET\n         LA    3,1(3)\n         LA    1,2(1)\n         BCT   2,&NAME.GO         NEXT BYTE IF ANY\n          LM   1,3,&NAME.SAVE\n           B    &NAME.END\n&NAME.SAVE DS  3F\n&NAME.TAB DC   X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\n&NAME.CHAR DS  C\n&NAME.END  DS   0H\n          MEND\n       MACRO\n        SETM  &I\n        AIF ('&I' EQ 'OFF').OFF\n        AIF ('&I' EQ 'ON').ON\n         MEXIT\n.OFF     ANOP\n         LA  1,*+10\n         N    1,=B'01111111111111111111111111111111'\n         BSM  0,1\n         MEXIT\n.ON      ANOP\n         LA  1,*+10\n         O    1,=B'10000000000000000000000000000000'\n         BSM  0,1\n         MEXIT\n         MEND\n     MACRO\n&NAME   SCANARG &ARG,&ADDR=TIOAFUNC,&LEN=(0)\n.* &ARG IS LITERAL TO BE SEARCHED FOR IN DATA WHOSE ADDR IS IN &ADDR\n.* AND LENGTH IN &LEN. IF SEARCH IS SUCCESSFUL, ADDRESS OF FOUND DATA\n.* WILL BE IN R1\n        LCLC  &SARG,&T,&LC\n        LCLA  &AL,&L\n&AL     SETA  K'&ARG-2\n&SARG   SETC  '&ARG'(2,&AL)\n        AIF  ('&ADDR'(1,1)  NE '(').AD\n         LA   1,0&ADDR\n          AGO  .GD\n.AD      ANOP\n        LA    1,&ADDR\n.GD     ANOP\n        AIF  ('&LEN'  EQ '').AR LENGTH IN R0\n        AIF  ('&LEN'(1,1)  EQ '(').LR\n&T     SETC  T'&LEN\n        AIF  ('&T'     EQ 'H').LH\n        AIF  (K'&LEN LT 4).LA\n.LA     LA    0,&LEN\n        AGO   .AR\n.LR     ANOP    PUT LENGTH  IN R0\n&L       SETA  K'&LEN\n&LC       SETC '&LEN(1,&L-2)'\n         LR   0,&LC\n        AGO   .AR\n.LH     ANOP\n        LH     0,&LEN\n        AGO   .AR\n.AR      ANOP\n        AR    0,1          END OF FIELD\n&NAME.ARGS DS  0H\n        CLC   0(&AL,1),=CL(&AL)'&SARG'\n        BE    &NAME.ARGF\n        LA    1,1(1)\n        CR    1,0\n        BL    &NAME.ARGS\n        SR   1,1\n        B   &NAME.ARGF\n&NAME.ARGF  DS  0H\n        LTR  1,1\n        AGO    .MEND\n.MEND   ANOP\n        MEND\n*******************************************************\n         IGWSMDE\n*******************************************************\nBASE     EQU   11                                                       COP00220\nLINKREG   EQU  8\nRET      EQU  10\nPRVREG   EQU   5    PRVMOD LIST\nCVTREG    EQU  1\nXIOTREG    EQU  1\nLPDEREG   EQU  2\nDCBREG    EQU  2\nDEBREG    EQU  3\nLLTREG    EQU  3\nTIOTREG   EQU  4\nARLREG    EQU  4\nBASEREG   EQU  11\nJSCBREG   EQU  15\nJFCBREG   EQU  15\nTCBREG    EQU  5\nTABREG    EQU  5\n         IEFZB4D0\n         IEFZB4D2\nARL    IHAARL  DSECT=YES,PREFIX=ARL,DESCR=YES\nARLENGTH EQU  *-ARL\n        DCBD  DSORG=PO\nDCBLEN  EQU  *-IHADCB\nTIOT     DSECT\n        IEFTIOT1\nTIOTOFF   EQU  TIOENTRY-TIOT\nXIOT      DSECT\n     ORG XIOT+TIOELNGH-TIOENTRY\nXIOELNGH  DS   XL(L'TIOELNGH)\n     ORG  XIOT+TIOEDDNM-TIOENTRY\nXIOEDDNM  DS  CL(L'TIOEDDNM)\n     ORG  XIOT+TIOEJFCB-TIOENTRY\nXIOEJFCB  DS   XL(L'TIOEJFCB)\nJFCB     DSECT\n         IEFJFCBN LIST=YES\n*EBBASIC  IGGDEBD\n          IEZDEB LIST=YES\n          IKJTCB  LIST=YES,DSECT=YES\n          IEZJSCB\nARAD    DSECT\nARALEN   DS   H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4\n***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)\n         DS   XL2  RESERVED\nARAJFCB  DS    CL176   JFCB\nARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL\n        CVT   DSECT=YES,LIST=YES\n          IHALPDE\nLPDELEN    EQU   *-LPDE\nLLTE      DSECT\n          DS   X\nLLTDSN    DS  CL44\nLLTLEN    EQU  *-LLTE\nLLTOFF    EQU  8    OFFSET TO FIRST LLTE\nPRVENTRY  DS   CL8    FOR EACH ENTRY\n*********************************************************************** COP00210\n*********************************************************************** COP00250\n* NAME: WMOD                                                            COP00290\n* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310\n*                                                                       COP00420\n**********************************************************************  COP00430\nWMOD     CSECT                                                          COP00440\n          USING *,15\n         STM   14,12,12(13)\n         ST    13,SAVEMAC+8\n         LA     13,SAVEMAC\n         LR     BASEREG,15\n          DROP  15\n         USING  WMOD,BASEREG\n         ST    1,SAVER1             TCA ADDR\n***PARM PROCESSING FROM UCB ASM\n         L      1,0(1)            ADDRESS OF PARM LIST\n         ST     1,APRMDATA\n         LH     2,0(1)           TOTAL LEN\n         BCTR   2,0              DONT MOVE PAST END OF PARM\n         EX    2,SAVEPARM\n         LH     0,0(1)   TOTLEN\n         STH    0,TOTLEN\n         CLI    2(1),X'7D' PARM MAY FOLLOW LEN FIELD\n         BL    MOREPARM\n         STH    0,DATALEN\n          LA    15,2(1)\n          ST   15,DATAADDR\n          B    PROCPARM\nSAVEPARM  MVC   SAVEPRMB(0),0(1)\nMOREPARM  DS    0H\n         LH     3,2(1)\n         STH    3,OFFSET\n**IF TOTLEN=OFFSET+4 THEN PARM DATA STARTS AT 4  AND LEN=OFFSET\n**IF TOTLEN>OFFSET+4 THEN PARM DATA STARTS AT OFFSET PAST PGMNAME AT 4\n         LA     15,4(1) POINT PAST TOTLEN+OFFSET IN PARM FIELD\n         ST     15,DATAADDR\n         MVC    DATALEN,OFFSET\n         AH     3,=H'4'\n         CR     0,3    OFFSET+4=TOTLEN\n         BNH    PROCPARM    PARM DATA STARTS AT 4\n         AH     15,OFFSET   PARM STARTS AFTER PGMNAME\n         ST     15,DATAADDR\n         LH     0,TOTLEN\n         SH     0,OFFSET - OFFSET\n         SH     0,=H'4'  - 4 BYTE LLBB\n         STH    0,DATALEN\n         B      PROCPARM\nPROCPARM DS     0H\n         L      1,DATAADDR\n         LH     2,DATALEN\n         BCTR   2,0\n         EX     2,MOVEPROG     MOVE PARM\n         L      TABREG,=A(CONVTAB)  CONVERT LOWER CASE TO UPPER CASE\n         TR  WORKPROG,0(TABREG)\n**END PARM PROCESSING FROM UCB ASM\nMOVEPROG   MVC   WORKPROG(0),0(1)\nGOTIT    DS     0H\n         L      LINKREG,=A(ALLOCOUT)\n         BALR   RET,LINKREG\n         OPEN (OUTFILE,(OUTPUT))\n         XR    5,5                 CLEAR REG 5                          COP00490\n         L     15,=A(TRTAB)        TRANSLATE 00 TO BLANK\n         TR   WORKPROG,0(15)        AND LOWER TO UPPER CASE\n*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA\n          L   LINKREG,=A(CHKSLIB)\n         BALR  RET,LINKREG\n          TM   WORKSW,LOADSTEP\n          BO   DOSTEP       IS IN STEPLIB/JOBLIB\n           B   TESTSVC\nTESTSVC   DS   0H\n          TM   WORKSW,LOADSVC\n          BNO  TESTLINK       CHECK LINKLIST\n          MVC WORKDSN,SVCDSN\n          MVC WORKDDN,=CL8'SVCLIB'\n          MVC  RETADDR,=A(TESTLINK)\n          B    PUTOUT\nDOSTEP   DS   0H\n          XC   RETADDR,RETADDR\n          XC   WORKDSN,WORKDSN\n          MVC   WORKDDN,=CL8'STEPLIB'\n          L    LINKREG,=A(RDJFCB)\n         BALR  RET,LINKREG\n           CLI  WORKDSN,X'00'\n           BE   TESTSVC\n           MVC  RETADDR,=A(TESTSVC)\n          B     PUTOUT    IF NOT STEPLIB SEARCH LINKLIST\nTESTLINK  DS   0H\n            TM  WORKSW,LOADLINK\n           BO   DOLINK\n           B   TESTLPA\nDOLINK   DS    0H\n           XC   WORKDDN,WORKDDN\n           XC   WORKDSN,WORKDSN\n          L    LINKREG,=A(SRCHLINK)\n         BALR  RET,LINKREG\n          MVC   WORKDDN,=CL8'LINKLIB'\n           MVC  RETADDR,=A(TESTLPA)\n           B    PUTOUT\nTESTLPA    DS   0H   CHECK IF MODULE IN LPA\n            B    DOLPA\nDOLPA      DS   0H\n           XC   WORKADDR,WORKADDR\n           MVC  WORKDDN,=CL8'LPALIB'\n           L    LINKREG,=A(SRCHLPA)\n           BALR RET,LINKREG\n           TM  WORKSW,LOADLPA\n*           BNO TESTDDNS\n           BNO  TESTVTAM\n           MVC RETADDR,=A(NAMELPA)\n*          MVC RETADDR,=A(TESTVTAM)\n*          MVC RETADDR,=A(TESTDDNS)\n          MVI  WORKDSN,X'00'\n           B   PUTOUT\nNAMELPA   DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHPLIB)  SEARCH PARMLIB FOR LPA NAMES\n          BALR RET,LINKREG\n          TM  WORKSW2,LOADLPAN\n           BNO TESTVTAM       TEST VTAMLIST AND VTAMLIB\n          MVC RETADDR,=A(TESTVTAM)\n          B   PUTOUT\nTESTVTAM DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHNET) VTAM DSNS FROM SYS1.PROCLIB(NET)\n          BALR RET,LINKREG\n           B    DOVTAM\nDOVTAM     DS   0H\n          MVC  WORKDDN,=CL8'VTAMLST'\n          MVC RETADDR,=A(DOVLIB)\n          TM  WORKSW2,LOADVLST\n          BO  PUTOUT\n          B   DOVLIB\nDOVLIB    DS   0H\n          MVC  WORKDDN,=CL8'VTAMLIB'\n          MVC RETADDR,=A(TESTDDNS)\n          MVC WORKDSN,VTAMDSN\n          TM   WORKSW2,LOADVLIB\n          BO  PUTOUT\n***       B   TESTDDNS\n          B   TESTPROC\nTESTPROC  DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHJES2) PROCLIB DSNS FROM JES2 PROC\n          BALR RET,LINKREG\n          MVC  WORKDDN,=CL8'SYSPROC'\n          MVC RETADDR,=A(TESTDDNS)\n          TM  WORKSW2,LOADPROC\n          BO  PUTOUT\n          B   TESTDDNS\nTESTDDNS  DS   0H\n***GET DDN OF ALL PDS'S ALLOCATED TO REGION\n          L   LINKREG,=A(LOCDEBS) SEARCH DEB QUEUES\n         BALR  RET,LINKREG\n           L   1,=A(DDNTAB)\nTESTDDNT  DS   0H\n         CLI  0(1),X'FF'\n         BE    WHERLOAD\n          ST   1,CURDDN\n           B   DODDNST\nNEXTDDNT   DS   0H\n           L   1,CURDDN\n           LA   1,TABL(1)\n           B    TESTDDNT\nDODDNST   DS    0H\n****LOCATE DCB FOR EACH DDN IS TABLE AND ISSUE BLDL FOR MODULE\n          L   LINKREG,=A(SRCHSDEB) SEARCH DEB QUEUES\n         BALR  RET,LINKREG\n          TM   TSOSW,TSOFILE\n          BO   DOTSODD      PROGRAM FOUND\n          B    NEXTDDNT\n          CLI  FOUNDSW,X'FF'\n          BE  RETURN\n          L   LINKREG,=A(FINDDCB)\n         BALR  RET,LINKREG\n          TM   TSOSW,TSOFILE\n          BNO  WHERLOAD     PROGRAM NOT DDN\n           B   DOTSODD\nDOTSODD   DS    0H\n****READ JFCBS FOR DDN     AND EXTRACT DSN IN CONCATENATION****\n          L   LINKREG,=A(RDJFCB)\n         BALR  RET,LINKREG\n          CLI   WORKDSN,X'00'\n          BE    WHERLOAD\n          MVC   RETADDR,=A(NEXTDDNT)\n          B     PUTOUT\nNOPROG   DS   0H\n          L   LINKREG,=A(FINDDCB)\n         BALR  RET,LINKREG\n         MVC   RETADDR,=A(RETURN)\n          TM   TSOSW,TSOFILE\n          BO   PUTOUT\n          XC   OUTCON,OUTCON\n          MVC  ERRPROG,WORKPROG\n          MVC  OUTCON(ERRMESSL),ERRMESS\n           XC  RETADDR,RETADDR\n           B   DOSEND\nWHERLOAD  DS   0H\n           CLI FOUNDSW,X'FF'\n            BNE NOPROG\n            B   RETURN\nPUTOUT   DS   0H\n           MVI  FOUNDSW,X'FF'\n           TM   WORKSW2,LOADLPAN\n           BO   PUTOUTLP\n          MVC   MODCON,=CL6'LOAD  '\n          TM    WORKSW2,LOADPROC\n          BNO   *+10\n          MVC   MODCON,=CL6'SOURCE'\n          MVC   PROGCON,WORKPROG\n          MVC  DDNCON,WORKDDN\n          CLI  WORKDSN,X'00'\n          BE   *+14\n          MVC  DSNCON,WORKDSN\n           B   DOSEND\n          MVC  DSNCONAT(ATCONL),BLANKS\n          MVC  DSNCON(3),=CL3'AT '\n          MVC  DSNCON+4(L'WORKCDDR),WORKCDDR\n          CLI  WORKALIS,X'00'\n           BE  DOSEND\n           MVC DSNCONAL,=C' (ALIAS OF '\n           MVC DSNALIS,WORKALIS\n           MVI  DSNCONAP,C')'\n           B   DOSEND\nPUTOUTLP  DS   0H\n*         MVC   MODCON,=CL6'LOAD  '\n*         MVC   PROGCON,WORKPROG\n          MVC  LPADSNAM,WORKDSN\n          PUT  OUTFILE,LPACON\n          B   RETURN\n*         OC  RETADDR,RETADDR\n*         BZ   RETURN\n*          L   1,RETADDR\n*         BR   1\n*         CLI  WORKALIS,X'00'\n*          BE  DOSEND\n*          MVC DSNCONAL,=C' (ALIAS OF '\n*          MVC DSNALIS,WORKALIS\n*          MVI  DSNCONAP,C')'\n*          B   DOSEND\nDOSEND   DS    0H\n          MVI  FOUNDSW,X'FF'\n           PUT  OUTFILE,OUTCON\n          OC  RETADDR,RETADDR\n          BZ   RETURN\n           L   1,RETADDR\n          BR   1\nRETURN   DS   0H\n          CLOSE OUTFILE\nENDIT    DS   0H\n          L    13,SAVEMAC+8\n          LM   14,12,12(13)\n          BR    14\nSAVEPRMB  DS   CL8\nAPRMDATA  DS   F\nDATAADDR  DS   F\nDATALEN   DS   H\nTOTLEN   DS   H\nOFFSET   DS   H\nERRMESS  DS    0C\n          DC  CL4' '\nERRPROG  DS   CL8\n         DC C' NOT FOUND        '\nERRMESSL EQU  *-ERRMESS\nBLANKS   DC  80C' '\nWORKDSN  DS  CL44\nVTAMDSN  DS  CL44\nSVCDSN   DC  CL(L'WORKDSN)'SYS1.SVCLIB'\nWORKPROG  DS  CL8\nWORKDDN   DS  CL8\nWORKPARM  DS   CL16\n*NAPPARM  DS   CL40\nCONLPA  DC  C' NOT LOADED FROM LPA'\nTSOSW   DS   X\nTSOFILE   EQU  X'01'\nSRCMOD    EQU  X'80'\nWORKSW    DS   X\nNOLPA     EQU  X'01'\nNOPPT     EQU  X'02'\nFOUND     EQU  X'04'\nLOADSVC   EQU  X'08'\nLOADLPA   EQU  X'10'\nLOADSTEP  EQU  X'20'\nLOADLINK  EQU  X'40'\nLOADRPL   EQU  X'80'\nWORKSW2   DS    X\nLOADVLST  EQU  X'01'\nLOADVLIB  EQU  X'02'\nLOADPROC  EQU  X'04'\nLOADLPAN  EQU  X'10'\n*****************\nWORKSW3  DS  X\nREADSPRM EQU  X'01'\nREADZPRM EQU  X'02'\nDIDLCONS EQU  X'04'\nDIDSNAME EQU  X'08'\nDIDPLST2 EQU  X'10'\n*****************\nFOUNDSW   DS   X\nCURNUM    DS  H\nCURPLST   DS  F\nTCBADDR   DS   F\nTIOTADDR  DS   F\nDEBADDR   DS   F\nDCBADDR   DS   F\nRETADDR    DS   F\nWORKADDR   DS   F\nBEGTIOT    DS   F\nCURDDN     DS   F\nWORKCDDR   DS   CL8\nWORKALIS   DS   CL8\nSAVEMAC    DS   18F\nSAVELINK   DS   18F\nSAVER1    DS   F\nENDDEBQ   DS   F\nDEBQADDR  DS   F\nFINOUT   DS   0C\n         DC  C' MODULE LOADED FROM '\nFINLIB    DS  CL8\nFINL     EQU  *-FINOUT\nBLDLLIST  DS   0H\nBLDLNUM   DS   H   NUMBER OF ENTRIES\nBLDLLEN  DS   H   LEN OF EACH ENTRY\nBLDENTRY  EQU  *\nBLDLNAME  DS  CL8\nBLDLTTR   DS  XL3\nBLDLCCAT  DS  X   CONCAT NUMBER RETURNED BY BLDL\nBLDLZ     DS  X   WHERE ENTRY FOUND\n          DS   X\nBLDLFILL   EQU  *-BLDLTTR\nBLDLELEN  EQU  *-BLDENTRY  LEN OF EACH ENTRY\nSAVECAT   DS    X\nOUTFILE  DCB  DDNAME=CERMFILE,MACRF=PM,DSORG=PS,RECFM=FA,              X\n               LRECL=80,BLKSIZE=80\nOUTCON   DC   CL80' '\n          ORG  OUTCON\n         DC  CL1' '\nMODCON   DC  CL6' '\n         DC  C' MODULE '\nPROGCON  DS  CL8\n         DC C' IS IN DDN '\nDDNCON   DS  CL8\n         DC   C' '\nDSNCON   DS  CL42\n         ORG DSNCON\nDSNCONAT  DS  CL4\nDSNCDDR   DS  CL8\nDSNCONAL  DS  CL11\nDSNALIS   DS  CL8\nDSNCONAP  DS  C\n          ORG\nOUTCONL   EQU  *-OUTCON\nATCONL    EQU  *-DSNCONAT\nLPACON   DC CL80' '\n         ORG LPACON\nLPAMOD   DS  CL8\n         DC C'IS IN DATASET '\nLPADSNAM DC  CL44' '\n         ORG\nWARLAREA  DS  CL(ARLENGTH)\nWXJFCB   DS    0F                                                       JFC00600\n         DC   X'13'           FOR LAST ENTRY                            JFC00610\nWXADD    DC   AL3(WARLAREA)                                             JFC00620\nWDCB     DS CL(DCBLEN)                                                       JFC\nWDJLIST  RDJFCB  (2),MF=L\n         ORG   *-3\nWDJDCBA  EQU  *   ADDR OF DCB\n         DS   AL3   PUT DCB ADDR HERE\n         ORG\n*NAP DCB  DDNAME=SNAP,DSORG=PS,MACRF=W,LRECL=125,RECFM=VBA,BLKSIZE=882\nSBS     DS   0F\nSB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nSBLN     DC    AL1(SBEL)  LEN OF RB\nSBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nSBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nSBFLAG2  DS    X       2ND   FLAG BYTE\nSBERROR  DS    XL2     ERROR REASON CODE\nSBINFO   DS    XL2     INFO  REASON CODE\nSBTXTPP  DC    A(SXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nSBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nSBEL     EQU   *-SBS\n* TEXT POINTERS  FOR ALLOCATION\nSXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nSDNPOINT DC   A(SDNTEXT)    DDN TU\nSSNPOINT DC   A(SSNTEXT)    DSN TU\nSSMPOINT DC   A(SSMTEXT)    MEMBER TU\nSSPPOINT DC   A(SSPTEXT)    DISP TU\n         ORG  SSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nSXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nSDNTEXT  DS    0F   DDN TEXT UNIT\nSDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nSDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSDNTXENT DS    0C\nSDNPLEN  DC    AL2(L'SDNTXPRM)  LENGTH OF PARM\nSDNTXPRM DC    CL8'PARMLIB'  DDNAME\n**DSN  TEXT UNIT\nSSNTEXT  DS    0F   DSN TEXT UNIT\nSSNTXKEY DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nSSNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSNTXENT DS    0C\nSSNPLEN  DC    AL2(L'SSNTXPRM)   LENGTH OF PARM\nSSNTXPRM DC    CL44'SYS1.PARMLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nSSMTEXT  DS    0F   DSN TEXT UNIT\nSSMTXKEY DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\nSSMTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSMTXENT DS    0C\nSSMPLEN  DC    AL2(L'SSMTXPRM)   LENGTH OF PARM\nSSMTXPRM DC    CL8'LPALST00'     MEMBERNAME\n**DISP TEXT UNIT\nSSPTEXT  DS    0F   DSP TEXT UNIT\nSSPTXKEY DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\nSSPTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSPTXENT DS    0C\nSSPPLEN  DC    AL2(L'SSPTXPRM)  LENGTH OF PARM\nSSPTXPRM DC    X'08'  DISP=SHR\nSXLEN    EQU   *-SXUNITS\n***END FOR DEALLOCATION\n******************\n******************\nLPADSNSA   DS  F\nLPADSNTL  EQU 45  LENGTH OF EACH ENTRY\nLPADSNAL    EQU LPADSNTL*40       40 ENTRIES 45 BYTES LONG\nLPADSN    DS  CL44\nMVSSAVE   DS  18F\nRTNSAVE   DS  18F\nLASTLPA   DS  F\nLASTCONA  DS  F\nNEXTCONA  DS  F\nCURVLST   DS  F\n***********************************\nNUMVLIBS DS   H\nNUMVLIBN EQU  25\nVTAMLIBS DS  (NUMVLIBN)CL50 UP TO 10  DSNAMES\n          ORG  VTAMLIBS       SET UP DYNALLOC DSN TU\nVLEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nVLUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nVLLEN    DC    AL2(44)   LENGTH OF PARM\nVLARM    DC    CL44'SYS1.VTAMLST'   DSNAME\n         ORG\n        ORG  NUMVLIBS\nNUMVLSTS DS   H\nNUMVLSTN   EQU 25\n         DS  0F\nVTAMLSTS DS  (NUMVLSTN)CL50 UP TO 8   DSNAMES\n          ORG  VTAMLSTS       SET UP DYNALLOC DSN TU\nVKEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nVNUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nVPLEN    DC    AL2(44)   LENGTH OF PARM\nVOFF     EQU   *-VKEY     OFFSET TO DSNAME\nVPARM    DC    CL44'SYS1.VTAMLIB'   DSNAME\n          ORG\n          ORG  NUMVLIBS\nNUMLPAS  DS   H\nNUMLPAN  EQU  25\nLPALIBS DS  (NUMLPAN)CL50 UP TO 25  DSNAMES  PER LPALST ENTRY\n          ORG  LPALIBS       SET UP DYNALLOC DSN TU\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nLPAOFF   EQU  *-LPALIBS    OFFSET TO DSNAME\nLLARM    DC    CL44'SYS1.LPALIB'   DSNAME\n          ORG\nLPAHLEN   EQU  *-LPALIBS\n          ORG  NUMVLIBS\nNUMPLIBS DS   H\nNUMPLIBN EQU  25\nPROCLIBS DS  (NUMPLIBN)CL50 UP TO 28  DSNAMES\n          ORG  PROCLIBS       SET UP DYNALLOC DSN TU\nPLEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nPLUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nPLLEN    DC    AL2(44)   LENGTH OF PARM\nPOFF     EQU  *-PROCLIBS   OFFSET TO DSNAME\nPLARM    DC    CL44'SYS1.PROCLIB'   DSNAME\n          ORG\n          LTORG\n           EJECT\nRDJFCB  DS   0H\n        PRINT ON,GEN\n        USING *,LINKREG\n        STM  14,12,SAVELINK+12\n         XC   WORKDSN,WORKDSN\n          MVC  WARLAREA(ARLENGTH),CRL       MOVE TO DYNAMIC STORAGE\n          LA   ARLREG,WARLAREA\n          STCM  ARLREG,7,WXADD  STORE ADDR OF JFCBAREA IN EXLIST\n          USING ARL,ARLREG\n          MVC   ARLRETRV,=H'1'  ONLY WANT INFO FOR 1 DATASET\n          SR    0,0\n          IC    0,BLDLCCAT   RELATIVE CONCAT NUMBER\n          AH    0,=H'1'    ACTUAL CONCAT NUMBER\n          STH   0,ARLFIRST    DS   WITH THIS CONCAT NUMBER\n           DROP  ARLREG\n          MVI  WXJFCB,X'13'   CODE FOR CONCATENATION EXIT\n           MVC  WDCB,OPEJFCB  MOVE DCB\n           LA   1,WDCB\n          USING IHADCB,1\n           MVC  DCBDDNAM,WORKDDN\n          LA  2,WXJFCB   RESET EXLST ADDR IN DCB\n          ST   2,DCBEXLST\n          DROP   1\n          MVC  WDJLIST,RDJLIST   MOVE RDJFCB LIST TO WORK AREA\n          LA   2,WDCB\n          STCM 2,7,WDJDCBA    STORE DCB ADDR IN RDJFCB LIST\n          LA   1,WDJLIST\n       RDJFCB   0(2),MF=(E,(1))                                          JFC0042\n          LTR  15,15\n          BNZ   ENDJFCB\n         B   PROCJFCB\nPROCJFCB DS   0H  FIND JFCB FOR CONCAT NUMBER FROM BLDL\n          LA   ARLREG,WARLAREA\n          USING ARL,ARLREG\n           L    1,ARLAREA  RESPONSE FROM RDJFCB\n           USING ARAD,1\n           LA   JFCBREG,ARAJFCB\n           DROP   1\n           USING JFCB,JFCBREG\n           MVC  WORKDSN,JFCBDSNM    SAVE DSNAME\n           B    FREEJFCB\nFREEJFCB DS   0H   FREE ARA\n****ISSUE FREEMAIN FOR STORAGE AREAS*****\n       SR  2,2\n       IC  2,ARLPOOL SUBPOOL\n       L   3,ARLAREA  ADDR OF ARA\n        SR   0,0\n       ICM  0,7,ARLRLEN\n        DROP  ARLREG\n    FREEMAIN RU,LV=(0),SP=(2),A=(3)\n        B  ENDJFCB\nGETOUT  DS   0H\nENDJFCB DS   0H\n         LM   14,12,SAVELINK+12\n         BR    RET\n***ALLOCATION RETRIEVAL LIST\nCRL  IHAARL  DSECT=NO,PREFIX=CRL,DESCR=NO\nEXJFCB   DS    0F                                                        JFC0060\n          DC   X'13'           FOR LAST ENTRY                            JFC0061\nEXADD    DS   AL3(CRL)                                                   JFC0062\nOPEJFCB   DCB   DDNAME=ISPPROF,EXLST=EXJFCB,MACRF=(E)                          J\nRDJLIST    RDJFCB   (2),MF=L\n          DROP  LINKREG\n          LTORG\n          EJECT\nFINDDCB  DS   0H\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n         NI   TSOSW,255-TSOFILE\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n         LR  TCBREG,1\n*        SH  1,=AL2(TCBPXLEN)   TCB PREFIX INCLUDED IN DSECT\n         B    NEXTTCB2\n*        USING TCBFIX,TCBREG\n         USING TCB,TCBREG\nNEXTTCB  DS   0H\n         L    TCBREG,TCBBACK  PREV TCB\n*        SH  TCBREG,=AL2(TCBPXLEN)   TCB PREFIX INCLUDED IN DSECT\nNEXTTCB2 DS    0H\n         LTR  TCBREG,TCBREG\n         BZ    ENDFDCB\n         CLC   TCBTCBID(3),=CL3'TCB'\n         BNE   ENDFDCB\n         ST   TCBREG,TCBADDR\n**CHECK IF DFHSIP TCB\n         L    JSCBREG,TCBJSCB\n*        USING IEZJSCB,JSCBREG\n*        CLC  JSCBPGMN,=CL8'DFHSIP'\n*        DROP  JSCBREG\n         L    TIOTREG,TCBTIO   TIOT\n         ST   TIOTREG,TIOTADDR\n         ST   TIOTREG,BEGTIOT\n         L    DEBREG,TCBDEB    DEB QUEUE\n         LTR  DEBREG,DEBREG\n          BZ   NEXTTCB\n         ST   DEBREG,DEBADDR\n         DROP  TCBREG\n         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY\n         USING  XIOT,TIOTREG\n         SR    0,0\n         B    FINDTIOT\nFINDTIOT  DS   0H\n         CLI   XIOELNGH,X'00'\n         BE    NEXTTCB\n         CLC   XIOEDDNM,WORKDDN\n         BE   GOTPROF\n         IC  0,XIOELNGH   LEN OF ENTRY\n         AR   TIOTREG,0    NEXT ENTRY\n         B    FINDTIOT\n***LOCATE DDN     IN TIOT\nGOTPROF   DS    0H\n         ST   TIOTREG,TIOTADDR\n****LOCATE DEB FOR DN     ****\n****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING TIOTADDR\n         L    DEBREG,DEBADDR\n         USING DEBBASIC,DEBREG\n         B     FINDDEB\nNEXTDEB   DS    0H\n          CLC   DEBDEBAD+1(3),=XL3'000000'\n          BE   NEXTTCB\n          L    DEBREG,DEBDEBAD     NEXT DEB\nFINDDEB   DS    0H\n       CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?\n         BNE   NEXTTCB\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   NEXTDEB          NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?\n          BO   *+18            YES...\n          CLC  WORKDDN,DCBDDNAM   SAME DD NAME\n          BE   GOTDCB\n           B    NEXTDEB\n         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB\n          L    1,BEGTIOT   BEG OF TIOT\n         AR    1,0         TIOT ADDR FOR THIS ENTRY\n          C    1,TIOTADDR  SAME AS FOR DDN\n          BE   GOTDCB     YES\n          B    NEXTDEB\nGOTDCB    DS    0H\n          ST  DCBREG,DCBADDR          DCB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  NEXTDEB\n           OI  TSOSW,TSOFILE\n          TM  DCBRECFM,DCBRECU  UNDEFINED RECFM\n          BO   ENDFDCB LOAD MODULE\n*         TM  DCBRECFM,DCBRECF  FIXED BLOCK FILE\n*         BNO  ENDFDCB          ASSUME SOURCE MODULE\n           OI  TSOSW,SRCMOD\n          B   ENDFDCB\nENDFDCB  DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n         DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n          EJECT\nSRCHSDEB  DS   0H\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n         NI  TSOSW,255-TSOFILE\n          L   15,CURDDN\n         USING TABSECT,15\n         L    DEBREG,DDNDEB\n         USING DEBBASIC,DEBREG\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   ENDSJSCB         NO..RETURN\n         MVC   WORKDDN,DDNDSNAM\n          ST  DCBREG,DCBADDR          DCB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  ENDSJSCB\n           OI  TSOSW,TSOFILE\n          NI  TSOSW,255-SRCMOD\n          TM  DCBRECFM,DCBRECU  UNDEFINED RECFM\n          BO   ENDSJSCB         ASSUME LOAD   MODULE\n*         TM  DCBRECFM,DCBRECF  FIXED BLOCK FILE\n*         BNO  ENDSJSCB         ASSUME SOURCE MODULE\n           OI  TSOSW,SRCMOD\n          B   ENDSJSCB\nENDSJSCB DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n         DROP  LINKREG,15,DEBREG,DCBREG\n          EJECT\nLOCDEBS   DS   0H     GET LIST OF DDNS\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n          L  1,=A(DDNTAB)\n         ST   1,LASTTAB\n          MVI  0(1),X'FF'\n          MVI  TEMPSW,X'00'\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n         LR  TCBREG,1\n         USING TCB,TCBREG\n         USING DEBBASIC,DEBREG\n         L    TIOTREG,TCBTIO  TIOT\n         ST   TIOTREG,TIOTADDR\n         ST   TIOTREG,BEGTIOT\n         LA   TIOTREG,TIOTOFF(TIOTREG)\n         L    JSCBREG,TCBJSCB\n         USING IEZJSCB,JSCBREG\n*        L    1,JSCBDBTB   DEB\n         L    1,TCBDEB     DEB\n         DROP  JSCBREG,TCBREG\n*        LH   0,2(1)  LEGTH OF DEBQ\n*        AR   0,1    END OF DEBQ\n         LR   DEBREG,1\n         ICM  DEBREG,8,=X'00'\n*        ST   0,ENDDEBQ\n*        LA   1,4(1)       ADDR OF 1ST DEB IN Q\n*        ST   1,DEBQADDR\n*         L    DEBREG,0(1)\n         LTR  DEBREG,DEBREG\n          BZ   ENDLDEB\n*          CLM  DEBREG,1,=X'FF'        INVALID ADDR\n*         BE   NEWDEBQA\n         ST   DEBREG,DEBADDR\n         B    LOCDCB\nNEWDEBQ   DS    0H\n*          CLM  DEBREG,1,=X'FF'        INVALID ADDR\n*         BE   NEWDEBQA\n*         CLM   DEBREG,7,=XL3'000000'\n*         BE   NEWDEBQA\nNEWDEBAD  DS   0H\n          L    DEBREG,DEBDEBAD   NEXT DEB\n          CLM  DEBREG,7,=XL3'000000'  ANY DEB\n          BE   ENDLDEB\n           CLM  DEBREG,1,=X'FF'        INVALID ADDR\n          BE   NEWDEBQA\n         ST    DEBREG,DEBADDR\n         B    LOCDCB\nNEWDEBQA  DS    0H\n          B    NEWDEBAD\n*         L    1,DEBQADDR\n*         LA   1,4(1)  NEXT DEB IN Q\n*         C    1,ENDDEBQ       LAST DEB IN Q\n*          BNL  CHKSPROC\n*          ST   1,DEBQADDR\n*         L    DEBREG,0(1)\n*          LTR  DEBREG,DEBREG\n*          BZ   ENDLDEB\n*          CLM  DEBREG,1,=X'FF'        INVALID ADDR\n*         BE   NEWDEBQA\n*        ST   DEBREG,DEBADDR\n*        B     LOCDCB\nLOCDCB    DS    0H\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   NEWDEBQ          NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?\n          BO   SETTIOT         YES...\n          MVC  WORKDDN,DCBDDNAM   SAVE DD NAME\n          B    SETTAB\nSETTIOT   DS   0H\n         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB\n          L    1,BEGTIOT   BEG OF TIOT\n         AR    1,0         TIOT ADDR FOR THIS ENTRY\n           LR   TIOTREG,1\n          USING XIOT,TIOTREG\n          MVC  WORKDDN,XIOEDDNM        DDN\n          B    SETTAB     YES\nSETTAB    DS   0H   STORE DDN IN LIST\n          USING TABSECT,1\n          L   1,LASTTAB\n           MVC  DDNDSNAM,WORKDDN\n          ST   DEBREG,DDNDEB\n          ST   TIOTREG,DDNTIOT\n          DROP  1\n          LA  1,TABL(1)\n          ST   1,LASTTAB\n           MVI 0(1),X'FF'\n           CLI  TEMPSW,X'00'\n           BNE  ENDLDEB\n           B   NEWDEBQ\nCHKSPROC  DS   0H   CHECK IF DEB FOR SYSPROC FOUND\n          L   1,=A(DDNTAB)\n          USING TABSECT,1\nCOMPPROC   DS   0H\n            CLI  0(1),X'FF'\n            BE  GETSPROC\n           CLC  DDNDSNAM,=CL8'SYSPROC'\n           BE   ENDLDEB\n          LA   1,TABL(1)\n          B   COMPPROC\n          DROP  1\nGETSPROC  DS  0H ASSUME SYSPROC ALLOCATED\n           OPEN  (SYSPROC,INPUT)\n          LTR  15,15\n           BNZ  ENDLDEB\n          LA  DCBREG,SYSPROC\n          L   DEBREG,DCBDEBAD\n          MVI  TEMPSW,X'FF'\n          MVC  WORKDDN,=CL8'SYSPROC'\n           B   SETTIOT\nENDLDEB  DS   0H\n          LA   1,SYSPROC\n          TM   DCBOFLGS-IHADCB(1),DCBOFOPN    SYSPROC OPENED?\n          BNO  ENDLDEBC\n          CLOSE SYSPROC\nENDLDEBC  DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\nLASTTAB   DS   F\nSYSPROC DCB  DDNAME=SYSPROC,DSORG=PO,MACRF=(R)\nTEMPSW   DS   X\n          LTORG\n         DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n          EJECT\nCHKSLIB   DS   0H   CHECK IF MODULE IN JOBLIB OR STEPLIB\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n           B  GOSTEP\nGOSTEP    DS   0H\n          LA    13,SAVEMAC\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n          ST  1,TCBADDR\n           USING TCB,1\n            L   DCBREG,TCBJLB\n            DROP  1\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKSVC\n           MVC  SAVECAT,BLDLCCAT\n           CLI SAVECAT,X'02'\n           BNE CHKSVC\n           OI  WORKSW,LOADSTEP\n          B   CHKSVC\nCHKSVC    DS   0H\n          L   CVTREG,16\n           USING CVT,CVTREG\n           L   DCBREG,CVTSVDCB  DCB FOR SYS1.SVCLIB\n           DROP  CVTREG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKLINK\n           OI  WORKSW,LOADSVC\n          B   CHKLINK\nCHKLINK   DS   0H\n          L    CVTREG,16\n          USING CVT,CVTREG\n***ISSUE BLDL ON LINKLIST\n          MVC SAVELINK,CVTLLTA LINK LIST\n          L    DCBREG,CVTLINK  ADDR LINKLIST DCB\n           DROP CVTREG\n          XC   BLDLTTR,BLDLTTR\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  ENDSLIB\n          OI  WORKSW,LOADLINK\n           B  ENDSLIB\nENDSLIB  DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\nSRCHLINK  DS   0H   SEARCH LINK LIST FOR DSNAME\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          L    CVTREG,16\n          USING CVT,CVTREG\n          L   LLTREG,CVTLLTA   LINK LIST\n          LA   LLTREG,LLTOFF(LLTREG) FIRST ENTRY\n          USING LLTE,LLTREG\n          SR   1,1\n          IC  1,BLDLCCAT  CONCATENTATION NUMBER\n          LTR  1,1\n           BZ   GOTLLT\nNEXTLLT   DS   0H\n          LA   LLTREG,LLTLEN(LLTREG)  NEXT ENTRY\n          BCT  1,NEXTLLT     LOOP CONCAT NUMBER OF TIMES\n          B   GOTLLT\nGOTLLT    DS   0H\n          MVC WORKDSN,LLTDSN\n          B   ENDSLINK\nENDSLINK DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\n****\nSRCHLPA DS   0H   SERCH FOR MODULE IN LPA\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n         XC   WORKALIS,WORKALIS\n         L   CVTREG,16\n         USING CVT,CVTREG\n         L    LPDEREG,CVTLPDIA  LPA DIRECTORY\n         DROP  CVTREG\n         USING  LPDE,LPDEREG\nTSTLPA   DS     0H\n         TM     LPDEATTB,LPDELPDE  LPDE IDENTIFIER\n         BNO    ENDSLPA\n         CLI    LPDENAME,X'00'\n          BE    ENDSLPA\n         CLC   WORKPROG,LPDENAME\n         BE    GOTLPA\n         LA    LPDEREG,LPDELEN(LPDEREG)\n          B     TSTLPA\nGOTLPA   DS    0H\n**********MOD FOR ALIAS*****************\n          TM   LPDEATT2,LPDERLC    RELOCATED ALIAS ENTRY POINT?\n          BO    LPALIAS\n          TM   LPDEATTR,LPDEMIN    MINOR LPDE?\n           BO  LPALIAS\n          MVC  WORKADDR,LPDEXTAD    LOAD ADDRESS\n           OI   WORKSW,LOADLPA\nCONVADDR  DS   0H\n           OI   WORKSW,LOADLPA\nA  CONVCODE IN=WORKADDR,OUT=WORKCDDR,LEN=L'WORKADDR\n          B    ENDSLPA\nLPALIAS   DS   0H\n          L    LPDEREG,LPDEMJP  POINT TO MAJOR LPDE\n          MVC   WORKALIS,LPDENAME\n          MVC  WORKADDR,LPDEXTAD   ADDRESS\n          DROP  LPDEREG\n          B    CONVADDR\nENDSLPA  DS    0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\n***********************************************\n****\nSRCHPLIB  DS   0H   SEARCH SYS1.PARMLIB FOR LPA  DSNAMES\n          USING *,LINKREG\n          STM   14,13,SAVELINK+8\n          LA  13,MVSSAVE\n          LA   1,PTPOINT       ALLOC PARMLIB\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALPLIB\n          OPEN (PARMLIB,(INPUT))\n           LTR 15,15\n           BNZ  DEALPLIB\n            LA  1,PARMLIB\n           USING IHADCB,1\n           MVC  BLKSIZE,DCBBLKSI   SAVE BLOCKSIZE\n           MVC  LRECL,DCBLRECL     SAVE RECORD LEN\n           DROP 1\n* EXEC CICS GETMAIN SET(15) LENGTH(BLKSIZE) INITIMG(X'00') NOSUSPEND\n            LH   0,BLKSIZE    FOR TSO\n            GETMAIN R,LV=(0)\n            LR   15,1\n            ST   15,READAREA\n            AH  15,BLKSIZE\n            ST  15,ENDBLOCK\n*****GET DIRECTORY AND LOCATE 'LOADXX' AND IEASYMXX MEMBERS\n           SETM  ON\n           LA   2,DSERVOUT\nDS1        DESERV FUNC=GET_ALL,AREAPTR=(2),DCB=PARMLIB\n            LTR  15,15\n**           BNZ  DEALPLIB\n             BNZ  ENDPARM\n             L    2,DSERVOUT\n             USING DESB,2\n             MVC  DSERVLEN,DESB_LEN   NEED FOR FREEMAIN\n             MVC  NUMMEMBS,DESB_COUNT NUMBER OF MEMBERS IN PDS\n             MVC  CURMEMBS,DESB_COUNT NUMBER OF MEMBERS IN PDS\n             LA  2,DESB_DATA   POINT TO FIRST IGWSMDE ENTRY\n             DROP 2\n             USING SMDE,2\n********LOOK FOR LOADXX AND IEASYM MEMBERS****************\nLOOKSMDE     DS   0H\n             LR  1,2\n             AH  1,SMDE_NAME_OFF  OFFSET TO LEN/MEMB NAME ENTRY\n             CLC 2(4,1),=CL4'LOAD'  LOADXX MEMBER?\n             BE  GOTLOAD            YES\n              L  1,CURMEMBS\n              BCT  1,NEXTSMDE\nNEXTSMDE     DS   0H\n              ST  1,CURMEMBS\n              A   2,SMDE_LEN   NEXT SMDE\n              B   LOOKSMDE\nGOTLOAD      DS   0H\n*READ LOAD MEMBER AND EXTRACT INFO FROM IODF, PARMLIB, SYSPARM\n*FIELDS. ASSUME THAT SECOND PARM IN IODF=&SYSNAME  (AS SPECIFIED\n*IN IEASYS MEMBER) PARMLIB HAS REAL NAME OF SYS1.PARMLIB BEING USED\n             MVC  LOADMEMB,BLANKS\n             LH 15,0(1)  LENGTH OF MEMBER NAME\n             BCTR 15,0\n             EX  15,MOVELOAD\n             L    2,DSERVOUT\n             L    3,DSERVLEN\n             FREEMAIN RC,A=(2),LV=(3)\n             B   ENDPARM\nENDPARM     DS  0H\n            SETM  OFF\nDEALPLIB   DS   0H\n          CLI  LOADMEMB,C' '\n          BNH  OUTPLIB\n***DETERMINE LPA CONCAT BY THE FOLLOWING:\n***NEED TO DETERMINE VALUE OF SYSCLONE WHICH IS DEFINED WITH\n***SUBSTITUTABLE VALUES IN IEASYM, WHICH WILL NOT BE USED HERE\n***EVEN THOUGH IT CONTAINS THE REAL VALUE OF SYSCLONE.\n** ON DOITT SYSTEMS, SYSCLONE IS DEFINED IN IEASYM AS THE\n***FIRST AND LAST CHARACTERS OF SYSNAME.\n***IT WILL BE ASSUMED THAT SYSCLONE IS EQUAL TO FIRST AND LAST CHARS\n***OF SYSNAME EVEN THOUGH IT MAY NOT ALWAYS BE ON ALL SYSTEMS.\n**1. READ LOADXX MEMBER TO GET SYSPARM VALUE, WHICH DEFINES IEASYSXX\n**2. READ IEASYS&SYSPARM TO GET LPA SUFFIXES, ONE OF WHICH MAY BE\n**   DEFINED AS &SYSCLONE. IEASYS MAY ALSO HAVE SYSNAME.\n*******ALLOCATE AND READ LOAD MEMBER\n         FIND  PARMLIB,LOADMEMB,D\n         LTR  15,15\n          BNZ  OUTPLIB\n*****LOOK FOR SYSPARM FIELD IN LOADXX MEMBER\n           L    2,READAREA\n           ST  2,LASTBLOC\nGETPLIBS   DS   0H\n          READ READECB,SF,PARMLIB,(2),'S'\n          CHECK READECB\n          CLI  READECB,X'7F'\n          BNE OUTPLIB\n          LR  1,2\nTESTPLIB  DS   0H\n          CLC  0(7,1),=CL7'SYSPARM'\n          BE  GOTSPARM\n          CLC  0(4,1),=CL4'IODF'\n          BE  GOTIODF\nNEXTPLIB  DS   0H\n          L   1,LASTBLOC\n          AH  1,LRECL    NEXT RECORD\n          C   1,ENDBLOCK\n**        BH  OUTPLIB\n          BH  IEASYS00\n          ST  1,LASTBLOC\n          B  TESTPLIB\nGOTIODF   DS   0H    SECOND PARM IS SYSNAME\n***LOADXX MEMBER IS COLUMN DEPENDENT. DATA STARTS IN COL 10.\n**COL 10-11 HAS SUFFIX OF IODF MEMBER; COL 13 HAS HILEVEL QUALIFER\n**ASSUME HI-LEVEL QUALIFIER IS SYNAME IF NOT SPECIFIED ANYWHERE ELSE\n           ST  1,RECADDR\n          MVC  SYSNAME,12(1)\n          CLI  SYSNAME+2,C' '\n          BNH NEXTPLIB\n*******EXTRACT FIRST AND LAST CHARACTERS AS\n          MVC SYSCLONE(1),12(1)\n          MVC SYSCLONE+1(1),15(1)\n          MVC  SYSPARM,SYSCLONE\n*         B   NEXTPLIB\n          B   IEASYS00\nGOTSPARM   DS   0H\n**FIRST  PARM IS SYSTEM PARM SUFFIX\n           ST  1,RECADDR\n           L  15,=A(ALPHTAB)\n          LR  14,1\n           TRT 8(40,14),0(15)      FIND FIRST  ALPHA LETTER\n          BZ   NEXTPLIB\n           MVC SYSPARM,0(1)\n**SINCE SYSCLONE IS DEFINED WITH SUBSTITUTABLES IN IEASYM MEMBER,\n**SET SYSCLONE=SYSPARM\n          MVC  SYSCLONE,SYSPARM\n***       B   SEALPLIB\nSEALPLIB   DS   0H\n          CLI SYSPARM,C' '   SYSPARM FOUND\n***       BNH OUTPLIB\n           BH  IEASYS00\n           B   NEXTPLIB\nIEASYS00   DS   0H\n           TM   WORKSW3,READSPRM   IEASYS&SYSPARM READ?\n          BNO  DOSYSP             NO..\n           TM   WORKSW3,READZPRM   IEASYSXX       READ?\n          BO   OUTPLIB            YES...GET OUT\n          MVC  IEASYS+6(2),SYSPARM\n          OI   WORKSW3,READZPRM\n          B    FINDSYSP\nDOSYSP    DS   0H\n*****READ IEASYS&SYSPARM MEMBER TO GET SYSNAME AND LPALIST PARMS\n          OI   WORKSW3,READSPRM     FLAG READING IEASYS&SYSPARM\n          MVC  IEASYS(6),=CL6'IEASYS'\n***       MVC  IEASYS+6(2),SYSPARM\n          MVC  IEASYS+6(2),=CL2'00'\nFINDSYSP   DS   0H\n         FIND  PARMLIB,IEASYS,D\n         LTR  15,15\n****      BNZ  OUTPLIB\n          BNZ  IEASYS00    READ IEASYS00\n*****LOOK FOR LPA= AND SYSNAME= PARMS IN IEASYS&SYSPARM  MEMBER\n           L   2,READAREA\n           ST   2,LASTBLOC\nIETPLIBS   DS   0H\n          READ IEADECB,SF,PARMLIB,(2),'S'\n          CHECK IEADECB\n          CLI  IEADECB,X'7F'\n****      BNE OUTPLIB\n          BNE  IEASYS00    READ IEASYS00\n          LR  1,2\nTESTILIB  DS   0H\n          CLC  0(4,1),=CL7'LPA='\n          BE  GOTLPAEQ\n          CLC  0(8,1),=CL8'SYSNAME='\n          BE  GOTSNAME\nNEXTILIB  DS   0H\n          L   1,LASTBLOC\n          AH  1,LRECL    NEXT RECORD\n          C   1,ENDBLOCK\n***       BNL OUTPLIB\n          BNL IEASYS00\n          ST  1,LASTBLOC\n          B  TESTILIB\nGOTLPAEQ   DS   0H\n           TM  WORKSW3,DIDLCONS  LPA= ALREADY PROCESSED\n           BO   *+10             YES\n           MVC  LPACONST,5(1)  SAVE STRING AND PARSE LATER\n            OI   WORKSW3,DIDLCONS\n          CLI  SYSNAME,C' '  SYSNAME FOUND YET\n          BH   IEALPLIB      YES.. CLOSE PARMLIB\n          B   NEXTILIB     NEXT RECORD\nGOTSNAME   DS   0H\n           OI  WORKSW3,DIDSNAME  SYSNAME ALREADY PROCESSED\n          CLI  SYSNAME,C' '      SYSNAME ALREADY PROCESSED\n           BH   *+10             YES\n           MVC  SYSNAME,8(1)\n          CLI  LPACONST,C' '  LPA     FOUND YET\n          BH   IEALPLIB      YES.. CLOSE PARMLIB\n          B   NEXTILIB     NEXT RECORD\nIEALPLIA   DS   0H\n           MVI  ERRSW,X'00'\nIEALPLIB   DS   0H\n           CLI  ERRSW,X'00'\n           BNE  OUTPLIB\n          CLI  LPACONST,C' '   LPA PARM FOUND\n          BH   PROCLPA          YES\n          B   OUTPLIB\nLEALPLIB   DS   0H\n           B   ENDPLIB\nENDPLIB  DS   0H\n          CLI  LPACONST,C' '   LPA PARM FOUND\n          BH   PROCLPA          YES\nOUTPLIB   DS   0H\n          TM   WORKSW2,LOADLPAN  FOUND\n          BO   CLOPLIB\n          TM   WORKSW3,DIDPLST2\n          BO   CLOPLIB\n          OI  WORKSW3,DIDPLST2\n          B   DOLPLST2\nCLOPLIB   DS   0H\n          CLOSE PARMLIB\n          LA  1,PDPOINT    DEALLOCATE PARMLIB\n          DYNALLOC\n          SETM  OFF\n          LM  14,13,SAVELINK+8\n          BR   RET\nPROCLPA   DS   0H    READ LPALST MEMBERS\n***FIRST SET UP ENTRY IN THE OUTPUT LIST FOR SYS1.LPALIB\n          MVC  NUMLPAS,=H'1'\n         LA   3,LPALIBS\n          MVC  0(LPLCONSL,3),LPLCONS    FOR DYNALLOC\n          MVC LPAOFF(44,3),=CL44'SYS1.LPALIB'\n           LA  3,L'LPALIBS(3)\n         ST  3,LASTLPA\n********************************\nSSLPA     SCANARG ')',ADDR=LPACONST,LEN=20   END OF LIST\n          BZ   OUTPLIB\n          ST  1,LASTCONA\n          LA  2,LPACONST\n          CLI 0(2),C'&&' SUBSTITUTABLE     &\n          BE  SUBLPA\n          CLI 2(2),C','   2 CHAR VALUE\n          BNE  OUTPLIB     FORGET IT\nMSLPA      DS   0H\n          MVC LPALST(6),=CL6'LPALST'\n          MVC LPALST+6(2),0(2)\n          LA  2,3(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          B   ALLPALST\nSUBLPA    DS   0H SUBSTITUTE VARIABLES\n          BAL  14,SUBPARM\n          B  ALLPALST\nDOLPLST2  DS   0H COME HERE AFTER 1ST LPALST HAS BEEN PROCESSED\n          MVC  LPALST(6),=CL6'LPALST'\n          MVC  LPALST+6(2),SYSCLONE\n***       MVC  SYSNAME,=CL4'MVSZ'  DUMMY UP FOR NOW\n          LA   3,LPALIBS\n          ST   3,LASTLPA\n****CLEAR OUT PREVIOUS BLOCK\n          L    2,READAREA\n          SR   1,1\n          LH   3,BLKSIZE\n          MVCL 2,0\nALLPALST  DS   0H\n          FIND PARMLIB,LPALST,D\n          LTR 15,15\n          BNZ  OUTPLIB\n**         LA  3,LPALIBS\n           L   3,LASTLPA\n           L  2,READAREA\nBUILDLPA   DS  0H\n******BUILD DYNALLOC LIST FROM LPALST ENTRIES*****************\n***ONLY READ ONE BLOCK FROM LPALST MEMBER TO AVOID EOF CONDITION\n           ST  3,LASTLPA\n          READ LEADECB,SF,PARMLIB,(2),'S'\n          CHECK LEADECB\n          CLI  LEADECB,X'7F'\n          BNE OUTPLIB\n          ST  2,LASTBLOC\n          LR  1,2\n          AH  1,BLKSIZE\n           ST  1,ENDBLOCK\nTESTLLIB   DS   0H\n          BAL  14,LPELIM\n           LH  0,NUMLPAS\n           AH   0,=H'1'\n           STH  0,NUMLPAS\n           CH   0,=AL2(NUMLPAN) MAX NUM?\n           BH  DALPALST      YES\n           L   3,LASTLPA\n           LA  3,L'LPALIBS(3)\n           ST  3,LASTLPA\n          L   2,LASTBLOC\n          AH  2,LRECL    NEXT RECORD\n          C   2,ENDBLOCK\n          BH  DALPALST\n          CLC  0(4,2),=4X'00'    END OF BLOCK\n          BE  DALPALST\n          ST  2,LASTBLOC\n          B  TESTLLIB\n******END BUILD DYNALLOC LIST FROM LPALST ENTRIES**************\nDALPALST   DS   0H\n           MVC CURNUM,NUMLPAS\n           LA   1,LPALIBS-L'LPALIBS\n           ST  1,CURVLST\n           B  NEXTLPST\n**********ALLOCATE LPALIBS, OPEN, BLDL\nNEXTLPST   DS   0H\n          LH   1,CURNUM\n          LTR  1,1\n          BZ  DEALVLPA\n          BCTR 1,0\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'LPALIBS(1)\n          MVC  LPADSN,LPAOFF(1)\n*******BYPASS SYS1.DBN.SDBNLPA BECAUSE OF ERROR WITH DATASET\n*         CLC  LPADSN(16),=C'SYS1.DBN.SDBNLPA'\n*         BE   DEALVLPA\n*         CLC  LPADSN(16),=C'SYS1.EUVF.SEUVFLPA'\n*         BE   DEALVLPA\n*         CLC  LPADSN(16),=C'SYS1.MQM.SCSQLINK'\n*         BE   DEALVLPA\n*         CLC  LPADSN(16),=C'SYS1.MQM.SCSQSNLE'\n*         BE   DEALVLPA\n******END BYPASSING CATALOGUED DATASETS NOT ON VOLUME\n          ST   1,CURVLST\n          ST  1,LPSNAMEA\n          XC  LPDSORGP,LPDSORGP  PRIME TO NOT FOUND\n          LA   1,LTPOINT       ALLOCATE LPALIB\n          DYNALLOC\n          CLI  LPDSORGP,X'02'   DSORG FOUND\n          BNE  DEALVLPA\n          LTR  15,15\n          BNZ  DEALVLPA\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (LPALIBN,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLPA\n*****BLDL LPALIB\n          LA  DCBREG,LPALIBN\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLPA\n           OI  WORKSW2,LOADLPAN\n           MVC  WORKDDN,=CL8'LPALIB'\n           MVC  WORKDSN,LPADSN\nDEALVLPA   DS   0H\n           CLOSE  LPALIBN\n          MVC  PEALCDDN,=CL8'LPALIBN'\n          LA   1,PDPOINT       DEALLOC LPALST\n          DYNALLOC\n          MVC  PEALCDDN,=CL8'PARMLIB'  RESET\n           TM  WORKSW2,LOADLPAN\n           BO  OUTPLIB\n          OC   CURNUM,CURNUM\n           BZ   ENDVLPA1\n           B   NEXTLPST\n*************************************************************\nENDVLPA1 DS   0H\n**PROCESS ADDITIONAL LPALIBS\n          XC  NUMLPAS,NUMLPAS\n          LA  2,LPALIBS\n          ST  2,LASTLPA\n          SR 1,1\n          LA  3,LPAHLEN\n          MVCL 2,0      CLEAR OUT\n          L  2,NEXTCONA   NEXT PARM IN LPA=(XXX) FROM IEASYS\n          CLI 0(2),C','\n          BNE *+8\n          LA  2,1(2)\n          C   2,LASTCONA   END OF LIST\n          BNL OUTPLIB\n          CLI 0(2),C'&&'  SUBSTITUTABLE\n          BE  SUBLPA\n          CLI  0(2),C'L'   END OF LIST\n          BE  OUTPLIB\n          CLI  0(2),C','   2 CHAR VALUE\n          BNE  OUTPLIB\n          B  MSLPA\n***END****ALLOCATE LPALIBS, OPEN, BLDL\n**********************************\nSUBPARM    DS   0H\n**ADDR OF PARM TO BE SUBSTITUTED IN R2 'LPALSTXX'\n          STM  14,12,RTNSAVE+12\n          MVC LPALST(6),=CL6'LPALST'\n          CLC  1(8,2),=CL8'SYSCLONE'\n          BE   SP1CLONE\n          CLC  1(7,2),=CL7'SYSNAME'\n          BE   SP1NAME\n          CLC  1(7,2),=CL7'SYSPARM'\n          BE   SP1PARM\n          MVC  NEXTCONA,LASTCONA\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1CLONE   DS   0H\n          MVC LPALST+6(2),SYSCLONE\n          LA  2,10(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1NAME   DS   0H\n          MVC 0(8,2),SYSNAME\n          LA  2,9(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1PARM   DS   0H\n          MVC LPALST+6(2),SYSPARM\n          LA  2,9(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\n**********************************\nLPELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          L    3,LASTLPA\n          MVC LPAOFF(44,3),=44C' '\n          LA   15,0(2)\n          L    14,=A(DALIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVELPAN\n          MVC  LPADSN,VOFF(3) SAVE DSNAME\n          MVC  0(LPLCONSL,3),LPLCONS\n***SEE IF ANY SUBSTITUTABLES IN DSN\n          LA   15,LPADSN\nSCAMP     SCANARG '&&SYS',ADDR=0(15),LEN=32\n          BNZ  DOSUBAMP\n***ADJUST LEN FIELD GENERATED IN MACRO BECAUSE OF &&\n***GENERATED LEN CODE WAS 4 AND NEEDS TO BE 3.. ONLY TEST FOR &SYS\n           ORG  SCAMPARGS\n           DC  X'D503'\n           ORG\n          LM   14,12,RTNSAVE+12\n          BR   14\nDOSUBAMP   DS  0H R1 HAS ADDRESS OF &SYS; R15=LPADSN\n          MVC   WORKDSN,=44C' '\n          LR   14,1\n          SR  14,15   OFFSET TO &SYS\n          BCTR 14,0\n          EX   14,MOVEWORK\n          LA   2,WORKDSN+1\n          AR   2,14   POINT TO SUBSTITUTABLE AREA\n          MVC  LEN,=AL2(L'SYSNAME)\n          CLC 1(7,1),=CL7'SYSNAME'\n          BNE *+14\n          MVC  0(L'SYSNAME,2),SYSNAME\n          B   COSUBAMP\n          MVC  LEN,=AL2(L'SYSPARM)\n          CLC 1(7,1),=CL7'SYSPARM'\n          BNE *+14\n          MVC  0(L'SYSPARM,2),SYSPARM\n          B   COSUBAMP\n          MVC  LEN,=AL2(L'SYSCLONE)\n          CLC 1(7,1),=CL7'SYSCLON'\n          BNE *+14\n          MVC  0(L'SYSCLONE,2),SYSCLONE\n          B   COSUBAMP\n          B  OUSUBAMP\n**************************\nCOSUBAMP   DS   0H\n          AH   2,LEN    POINT PAST SUBSTITUTED AREA\n          LA   15,LPADSN\nPPAMP     SCANARG '..',ADDR=0(15),LEN=42\n          BZ   OUSUBAMP\n          LA   14,LPADSN+L'LPADSN    END OF FIELD\n          SR  14,1                   LENGTH OF LAST PART OF DSN\n           BCTR 14,0\n           AR 15,14        AREA TO MOVE  PAST .\n           BCTR 14,0      FOR LENGTH CODE\n           EX  14,MOVELAST\n          MVC  LPADSN,WORKDSN\n          L   3,LASTLPA\n          MVC LPAOFF(L'WORKDSN,3),WORKDSN\nOUSUBAMP   DS  0H\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVELOAD  MVC LOADMEMB(0),2(1)\nMOVELPAN  MVC VOFF(0,3),0(15)\nMOVEWORK  MVC WORKDSN(0),LPADSN\nMOVELAST  MVC 0(0,2),1(1)\nLPLCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nLPLCONSL EQU  *-LPLCONS\n**********************************\nPARMLIB DCB DSORG=PO,MACRF=(R),DDNAME=PARMLIB\nLPALIBN DCB DSORG=PO,MACRF=(R),DDNAME=LPALIBN\n******TO ALLOC SYS1.PARMLIB\n         DS  0F\nPTPOINT  DC   A(PBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   PTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nPBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(PBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\nALCPOINT DC    A(PXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nPBEL     EQU   *-PBS\n* TEXT POINTERS  FOR ALLOCATION\nPXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nPDNPOINT DC   A(PDNTEXT)    DDN TU\nPSNPOINT DC   A(PSNTEXT)    DSN TU\nPSPPOINT DC   A(PSSPTEXN)   DISP TU\n         ORG  PSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nPMPOINTS DS   0F     ALLOCATE WITH MEMBER NAME\n         DC   A(PDNTEXTS)   DDN TU\n         DC   A(PSNTEXT)    DSN TU\n         DC   A(PSSPTEXN)   DISP TU\nPSMPOINT DC   A(PSMTEXT)    MEMBER TU\n         ORG  PSMPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nPDNTEXTS DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)           LENGTH OF PARM\nPDNPARML DC    CL8'PARMLIBS'  DDNAME\n***************\nPDNTEXT  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)           LENGTH OF PARM\nPARMDDN  DC    CL8'PARMLIB'  DDNAME\n**DSN  TEXT UNIT\nPSNTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(44)  LENGTH OF PARM\nPSNDSN   DC    CL44'SYS1.PARMLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nPSMTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)   LENGTH OF PARM\nPSMMEMB  DC    CL8'LOAD    '     MEMBERNAME\n**DISP TEXT UNIT\nPSSPTEXN  DS    0F   DSP TEXT UNIT\n         DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\n          DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n          DC    AL2(1)  LENGTH OF PARM\n         DC    X'08'  DISP=SHR\n***FOR DEALLOCATION\nPDPOINT  DC   A(PDBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   PDPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nPDBSD    DS   0F\n          DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n          DC    AL1(NDBELD)  LEN OF RB\n          DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\n          DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n          DS    X       2ND   FLAG BYTE\n          DS    XL2     ERROR REASON CODE\n          DS    XL2     INFO  REASON CODE\n          DC    A(PDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\n* TEXT POINTERS  FOR DEALLOCATION\nPDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\n         DC   A(PNDNTEXD)  DDN TU\n         ORG PDXPOIND    FOR LAST TU\n         DC  X'80'\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nPNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)  LENGTH OF PARM\nPEALCDDN DC    CL8'PARMLIB'  DDNAME\n**********TO ALLOCATE LPA  DSNS\nLTPOINT  DC   A(LPS) ADR  REQ BLOCK PASSED IN R1\n         ORG   LTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nLPS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(VBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\n         DC    A(LPPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\n* TEXT POINTERS  FOR ALLOCATION  OF LPA  LIBS\nLPPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\n         DC   A(LPDNAME)    DDN TU\nLPSNAMEA DS   A             DSN TU\nLPPPOINT DC   A(PSSPTEXN)   DISP TU\nLPDSORG  DC   A(LPDSORGU)   DSORG TU\n         ORG  LPDSORG     FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nLPDNAME  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nLPDPARM  DC    CL8'LPALIBN'  DDNAME\n**DSORG TEXT UNIT\nLPDSORGU DS    0F   DSORG TEXXT UNIT\n         DC    AL2(DALRTORG)  RETURN DATASET ORGANIZATION\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'LPDSORGP)  LENGTH OF PARM\nLPDSORGP DC    X'0000'  DSORG PO\nREADAREA DS   F\nRECADDR  DS   F\nENDBLOCK DS   F\nLASTBLOC DS   F\nDSERVOUT DS   F\nDSERVLEN DS   F\nNUMMEMBS DS   F\nCURMEMBS DS   F\nLEN      DS  H\nBLKSIZE  DS  H\nLRECL    DS  H\nLOADMEMB DS  CL8\nIEASYS   DS  CL8\nLPALST   DS  CL8\nSYSNAME  DS  CL4\nSYSCLONE DS  CL2\nSYSPARM  DS  CL2\nLPACONST DS  CL20\nERRSW    DS  X\n          LTORG\n          DROP  LINKREG\n          EJECT\n***************************************\n****\nALLOCOUT DS    0H\n         USING  *,LINKREG\n         STM  14,12,ALCSAVE+12\n         LA    1,RBPOINT        (R1 => A(REQ BLOCK )\n         DYNALLOC\n         LM    14,12,ALCSAVE+12\n         BR    RET\n         DS  0F\nALCSAVE  DS  18F\nDYNBLKS  EQU  *\nRBPOINT  DC   A(RBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   RBPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n          ORG\n         DS    0F\nRBS     EQU  *\nRB       DS    0CL20  S99RB DSECT  LOC BY RBPOINT\nRBLN     DC    AL1(RBEL)         LEN OF RB\nRBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nRBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nRBFLAG2  DS    X       2ND   FLAG BYTE\nRBERROR  DS    XL2     ERROR REASON CODE\nRBINFO   DS    XL2     INFO  REASON CODE\nRBTXTPP  DC    A(TXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nRBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nRBEL     EQU   *-RB\n**TEXT UNIT POINTERS\nTXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nDDNPOINT DC  A(DDNTEXT)\nSYSPOINT DC  A(SYSOTEXT)\nTERPOINT DC  A(TERMTEXT)\n         ORG  TERPOINT\n         DC    X'80'   LAST TEXT UNIT\n         ORG\nTXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nDDNTEXT  DS    0F   DDN TEXT UNIT\nDDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nDDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nDDNTXENT DS    0C\nDDNPLEN  DC    AL2(L'DDNTXPRM)  LENGTH OF PARM\nDDNTXPRM DC    CL8'CERMFILE'\nSYSOTEXT  DS   0F\nSYSOXKEY DC    AL2(DALSYSOU) KEY FOR SYSOUT ALLOC\nSYSOXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSYSOXENT DS    0C\nSYSOLEN  DC    AL2(L'SYSOXPRM)  LENGTH OF PARM\nSYSOXPRM DC    C'A'          MUST BE 1\nTERMTEXT  DS   0F   OMITTED\nTERMXKEY DC    AL2(DALTERM) KEY FOR TERM=TS\nTERMXNUM DC    XL2'0000'   NUM LENGTH + PARM ENTRIES\nTERMXENT DS    0C\nTEPROFEN  DC    AL2(L'TERTXPRM)  LENGTH OF PARM\nTERTXPRM DS    0C       NO PARM\n         DC    CL6' '   FOR PATCHING\nTXLEN    EQU   *-TXUNITS\nDYNEL    EQU  *-DYNBLKS\nRBLEN  EQU  (S99RBEND-S99RB)\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\nSRCHNET   DS   0H   SEARCH SYS1.PROCLIB(NET) FOR DSNAMES\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          LA   1,NTPOINT       ALLOC PROCLIB\n          DYNALLOC\n*****READ NET MEMBER AND GET DSNS OF VTAMLIB AND VTAMLST\n          MVI  VSW,0\n          ST   13,MVSSAVE\n          LA   13,MVSSAVE\n          OPEN (PROCLIB,(INPUT))\n          LTR  15,15\n          BNZ  ENDPROC\nNEXTPR     DS   0H\n          GET PROCLIB\n          CLC  0(9,1),=CL9'//VTAMLST'\n          BE   GOTVLST\n          CLC  0(9,1),=CL9'//VTAMLIB'\n          BE   GOTVLIB\n          B    NEXTPR\nPREVLST   DS   0H\n          TM  VSW,X'01'     VTAMLST PROCESSED?\n          BO   ENDPROC\n          CLC  0(9,1),=CL9'//VTAMLST'\n          BE   GOTVLST\n          B   NEXTPR\nGOTVLST   DS   0H\n          LR   2,1\n          LA   3,VTAMLSTS\n          OI   VSW,X'01'\n          SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\nCONTVLST   DS   0H\n          LA   3,L'VTAMLSTS(3)   NEXT ENTRY\n          LH   0,NUMVLSTS\n          AH   0,=H'1'\n          STH  0,NUMVLSTS\n          CH   0,=H'10'\n          BH   PREVLIB     MAX OF 10 DSNAMES\nGETVLST   DS   0H\n          GET  PROCLIB\n          CLI  2(1),C'*'   COMMENT?\n          BE   GETVLST\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  PREVLIB     SEE IF //VTAMLIB\n          LR   2,1\nSC1       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\n          B    CONTVLST\nPREVLIB   DS   0H\n          TM  VSW,X'02'     VTAMLIB PROCESSED?\n          BO   ENDPROC\n          CLC  0(9,1),=CL9'//VTAMLIB'\n          BE   GOTVLIB\n          B   NEXTPR\nGOTVLIB   DS   0H\n          LR   2,1\n          LA   3,VTAMLIBS\n          OI   VSW,X'02'\nSC2       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\nCONTVLIB   DS   0H\n          LA   3,L'VTAMLIBS(3)\n          LH   0,NUMVLIBS\n          AH   0,=H'1'\n          STH  0,NUMVLIBS\n          CH   0,=H'10'\n          BH   PREVLST     MAX OF 10 DSNAMES\nGETVLIB   DS    0H\n          GET  PROCLIB\n          CLI  2(1),C'*'   COMMENT?\n          BE   GETVLIB\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  PREVLST     SEE IF //VTAMLST\n          LR   2,1\nSC3       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\n          B    CONTVLIB\nENDPROC   DS   0H\n          CLOSE PROCLIB\n*****DEALLOCATE PROCLIB\n          MVC  DEALCDDN,=CL8'PROCLIB'\n          LA   1,DTPOINT       DEALLOC PROCLIB\n          DYNALLOC\n*******ALLOCATE VTAMLST LIBS\n          LA  1,VTAMLSTS\n          MVC  WORKDSN,VOFF(1)\n          ST  1,VDSNAMEA\n          MVC  VDDPARM,=CL8'VTAMLST'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVLST\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (VTAMLST,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLST\n*****BLDL VTAMLST\n          LA  DCBREG,VTAMLST\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLST\n           OI  WORKSW2,LOADVLST\nDEALVLST   DS   0H\n           CLOSE  VTAMLST\n          MVC  DEALCDDN,=CL8'VTAMLST'\n          LA   1,DTPOINT       DEALLOC VTAMLST\n          DYNALLOC\n            TM  WORKSW2,LOADVLST\n            BO ENDVLST\n            B  NEXTVLSA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nNEXTVLSA  DS    0H\n          LH   1,NUMVLSTS\n          LTR  1,1\n          BZ   ENDVLST\n          STH  1,CURNUM\n          LA   1,VTAMLSTS+L'VTAMLSTS\n          ST   1,CURVLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nADDVLST   DS   0H\n          ST   1,VDSNAMEA\n          MVC  WORKDSN,VOFF(1)\n          MVC  VDDPARM,=CL8'VTAMXXX'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVXXX\n           LA  2,DEALVXXX RETURN ADDR FOR SYNAD\n           L   3,=A(DCBABSW) ITCH FOR DCB ABEND EXIT\n           MVI 0(3),X'00'\n          OPEN (VTAMXXX,(INPUT))\n          CLI  0(3),X'00'       WAS ABEND EXIT TAKEN\n          BNE   DEALVXXX  YES\n          LTR  15,15\n          BNZ   DEALVXXX\n          LA  DCBREG,VTAMXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  DEALVXXX\n           OI  WORKSW2,LOADVLST\n            B  DEALVXXX\nDEALVXXX   DS   0H\n           CLOSE VTAMXXX\n*****DEALLOCATE VTAMXXX\n          MVC  DEALCDDN,=CL8'VTAMXXX'\n          LA   1,DTPOINT       DEALLOC VTAMXXX\n          DYNALLOC\n          TM  WORKSW2,LOADVLST\n          BO  ENDVLST\n          B  NEXTVLSB\nNEXTVLSB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLST\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'VTAMLSTS(1)\n          ST   1,CURVLST\n          B    ADDVLST\n*         MVC  CDNDNAM1,=CL8'VTAMLST'\n*         LA   1,CTPOINT       CONCATENATE TO VTAMLST\n*         DYNALLOC\n*         LTR  15,15\n*         BNZ  DEALVXXX\n*****OPEN VTAMLST\nENDVLST  DS   0H\n          B  PROCVLIB         DO VTAMLIB\nPROCVLIB  DS   0H\n*******ALLOCATE VTAMLIB LIBS\n          LA  1,VTAMLIBS\n          MVC  VTAMDSN,VOFF(1)\n          ST  1,VDSNAMEA\n          MVC  VDDPARM,=CL8'VTAMLIB'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVLIB\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (VTAMLIB,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLIB\n*****BLDL VTAMLIB\n          LA  DCBREG,VTAMLIB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLIB\n           OI  WORKSW2,LOADVLIB\nDEALVLIB   DS   0H\n           CLOSE  VTAMLIB\n          MVC  DEALCDDN,=CL8'VTAMLIB'\n          LA   1,DTPOINT       DEALLOC VTAMLST\n          DYNALLOC\n            TM  WORKSW2,LOADVLIB\n            BO ENDVLIB\n            B  NEXTVLBA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nNEXTVLBA  DS    0H\n          LH   1,NUMVLIBS\n          LTR  1,1\n          BZ   ENDVLIB\n          STH  1,CURNUM\n          LA   1,VTAMLIBS+L'VTAMLIBS\n          ST   1,CURVLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nADDVLIB   DS   0H\n          ST   1,VDSNAMEA\n          MVC  VTAMDSN,VOFF(1)\n          MVC  VDDPARM,=CL8'VTAMXXX'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVBXX\n          LA   2,DEALVBXX   FOR SYNAD\n          L    3,=A(DCBABSW) SWITCH FOR DCB ABEND EXIT\n          MVI  0(3),X'00'\n          OPEN (VTAMXXX,(INPUT))\n          CLI  0(3),X'00'\n          BNE   DEALVBXX\n          LTR  15,15\n          BNZ   DEALVBXX\n          LA  DCBREG,VTAMXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  DEALVBXX\n           OI  WORKSW2,LOADVLIB\n            B  DEALVBXX\nDEALVBXX   DS   0H\n           CLOSE VTAMXXX\n*****DEALLOCATE VTAMXXX\n          MVC  DEALCDDN,=CL8'VTAMXXX'\n          LA   1,DTPOINT       DEALLOC VTAMXXX\n          DYNALLOC\n          TM  WORKSW2,LOADVLIB\n          BO  ENDVLIB\n          B  NEXTVLIB\nNEXTVLIB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLIB\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'VTAMLIBS(1)\n          ST   1,CURVLST\n          B    ADDVLIB\n*         MVC  CDNDNAM1,=CL8'VTAMLST'\n*         LA   1,CTPOINT       CONCATENATE TO VTAMLST\n*         DYNALLOC\n*         LTR  15,15\n*         BNZ  DEALVXXX\nENDVLIB  DS   0H\n          B  ENDNET\nENDNET   DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,MVSSAVE\n          BR   RET\nFDELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          MVC VOFF(44,3),=44C' '\n          LA   15,4(1)\n          L    14,=A(DELIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVEVTN\n          MVC  0(DALCONSL,3),DALCONS\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVEVTN   MVC VOFF(0,3),0(15)\nDALCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nDALCONSL EQU  *-DALCONS\nPROCLIB DCB DSORG=PS,MACRF=GL,DDNAME=PROCLIB,EODAD=ENDPROC\nVTAMLST DCB DSORG=PO,MACRF=(R),DDNAME=VTAMLST\nVTAMLIB DCB DSORG=PO,MACRF=(R),DDNAME=VTAMLIB\nVTAMXXX DCB DSORG=PO,MACRF=(R),DDNAME=VTAMXXX,SYNAD=SYNOPEN,EXLST=DCBLX\nDCBLX    DS   0F    DCB EXITS\n         DC  X'11'   DCB ABEND EXIT\n         DC  AL3(DCBXOPEN)   ADDRESS OF EXIT\n         DC  X'80'   END OF LIST\n         DS AL3\n******TO CONCATENATE DATASETS\n         DS  0F\nCTPOINT  DC   A(CBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   CTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nCBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(CBEL)  LEN OF RB\n         DC    AL1(S99VRBCC)     03 FOR CONCAT\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\n         DC    A(CXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nCBEL     EQU   *-CBS\n* TEXT POINTERS  FOR CONCATENATION\nCXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nCDNPOINT DC   A(CDNTEXT)    DDN TU\n         ORG  CDNPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nCDNTEXT  DS    0F   DDN TEXT UNIT\n         DC    AL2(DCCDDNAM)  KEY FOR CONCATENATION\nCDNTXNUM DC    XL2'0002'   NUM LENGTH + PARM ENTRIES\nCDNPLEN1 DC    AL2(8)           LENGTH OF PARM DDNAME\nCDNDNAM1 DC    CL8'VTAMLST'  DDNAME   TO CONCAT TO\nCDNPLEN2 DC    AL2(8)           LENGTH OF PARM DDNAME\nCDNDNAM2 DC    CL8'VTAMXXX'  DDNAME   TO CONCAT WITH\n******TO ALLOC SYS1.PROCLIB\n         DS  0F\nNTPOINT  DC   A(NBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   NTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nNBS     DS   0F\nNB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nNBLN     DC    AL1(NBEL)  LEN OF RB\nNBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nNBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nNBFLAG2  DS    X       2ND   FLAG BYTE\nNBERROR  DS    XL2     ERROR REASON CODE\nNBINFO   DS    XL2     INFO  REASON CODE\nNBTXTPP  DC    A(NXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nNBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nNBEL     EQU   *-NBS\n* TEXT POINTERS  FOR ALLOCATION\nNXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nNDNPOINT DC   A(NDNTEXT)    DDN TU\nNSNPOINT DC   A(NSNTEXT)    DSN TU\nNSMPOINT DC   A(NSMTEXT)    MEMBER TU\nNSPPOINT DC   A(NSSPTEXN)   DISP TU\n         ORG  NSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nNXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nNDNTEXT  DS    0F   DDN TEXT UNIT\nNDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nNDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNDNTXENT DS    0C\nNDNPLEN  DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nNDNTXPRM DC    CL8'PROCLIB'  DDNAME\n**DSN  TEXT UNIT\nNSNTEXT  DS    0F   DSN TEXT UNIT\nNSNTXKEY DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nNSNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSNTXENT DS    0C\nNSNPLEN  DC    AL2(L'SSNTXPRM)   LENGTH OF PARM\nNSNTXPRM DC    CL44'SYS1.PROCLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nNSMTEXT  DS    0F   DSN TEXT UNIT\nNSMTXKEY DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\nNSMTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSMTXENT DS    0C\nNSMPLEN  DC    AL2(L'NSMTXPRM)   LENGTH OF PARM\nNSMTXPRM DC    CL8'NET     '     MEMBERNAME\n**DISP TEXT UNIT\nNSSPTEXN  DS    0F   DSP TEXT UNIT\nDISPTEXT  EQU   *\nNSSPTXKY DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\nNSSPTXNU  DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSPTXEND DS    0C\nNSSPPLEN  DC    AL2(L'NSSPTXPR)  LENGTH OF PARM\nNSSPTXPR DC    X'08'  DISP=SHR\nNSXLEN    EQU   *-NXUNITS\n***FOR DEALLOCATION\nDTPOINT  DC   A(DBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   DTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nDBSD    DS   0F\nNBDD     DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nNDBLND    DC    AL1(NDBELD)  LEN OF RB\nNDBVERBD  DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\nNDBFLAD1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nNDBFLAD2  DS    X       2ND   FLAG BYTE\nNDBERROR  DS    XL2     ERROR REASON CODE\nNDBINFOD  DS    XL2     INFO  REASON CODE\nNDBTXTPD  DC    A(NDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nNDBAUTDL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nNDBELD     EQU   *-NBDD\n* TEXT POINTERS  FOR DEALLOCATION\nNDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\nNDDNPOID DC   A(DNDNTEXD)  DDN TU\n         ORG NDDNPOID   FOR LAST TU\n         DC  X'80'\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nDNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nDEALCDDN DC    CL8'PROCLIB'  DDNAME\n**********TO ALLOCATE VTAM DSNS\nVTPOINT  DC   A(VBS) ADR  REQ BLOCK PASSED IN R1\n         ORG   VTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nVBS     DS   0F\nVB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nVBLN     DC    AL1(VBEL)  LEN OF RB\nVBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nVBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nVBFLAG2  DS    X       2ND   FLAG BYTE\nVBERROR  DS    XL2     ERROR REASON CODE\nVBINFO   DS    XL2     INFO  REASON CODE\nVBTXTPP  DC    A(VXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nVBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nVBEL     EQU   *-VBS\n* TEXT POINTERS  FOR ALLOCATION  OF VTAM LIBS\nVXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nVDNPOINT DC   A(VDDNAME)    DDN TU\nVDSNAMEA DS   A             DSN TU\nVSPPOINT DC   A(DISPTEXT)   DISP TU\n         ORG  VSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nVDDNAME  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nVDDPARM  DC    CL8'VTAMLST'  DDNAME\nVSW      DS   X\n***********************************\n          ORG\n          LTORG\n          DROP  LINKREG\n          EJECT\n****\n***************************************\nSRCHJES2  DS   0H   SEARCH SYS1.PROCLIB(JES2) FOR PROCLIB DSNS\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          XC    NUMPLIBS,NUMPLIBS\n          MVC   JDNTXPRM,=CL8'JESPROC'\n          MVC   JSNPOINT,=A(JSNTEXT)\n          LA   1,JTPOINT       ALLOC PROCLIB\n          DYNALLOC\n*****READ JES2 MEMBER AND GET DSNS OF PROCLIBS\n*****DSNAMES ARE EITHER IN PROC DD STATEMENT OR ASSUME THEY ARE\n*****IN FIRST HASPPARM CONCATENATION\n          ST   13,MVSSAVE\n          LA   13,MVSSAVE\n          OPEN (JESPROC,(INPUT))\n          LTR  15,15\n          BNZ  ENDPROCK\nJEXTPR     DS   0H\n          GET JESPROC\n          CLC  0(6,1),=CL6'//PROC'\n          BE   GOTJPROC\n          CLC  0(8,1),=CL8'//HASPPARM'\n          BE   GOTHASP\n          B    JEXTPR\n********MOD OFR PROCLIB DSNS NOT IN JES2 PROC JCL\nGOTHASP   DS    0H\n***ASSUME DSNS ARE IN FIRST CONCATENATION, WHICH MAY BE\n***KEYWORD PARAMETER- ASSUME JES2PARM FOR NOW\n          LR    2,1\nHTJ       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ    ENDPROCJ\n          ST    1,DSNADD\n          LA    3,PROCLIBS\n          LR    2,1\n          BAL  14,JDELIM\n          L  15,DSNADD      ADDRESS OF DSN=\n          LA  15,4(15)      ADDRESS OF DSNAME\n          L 14,=A(DELIMTAB)\n          TRT  0(40,15),0(14)  LOOK FOR (\n          BZ   PLUGIN\n          MVC  HASPMEMB,1(1)\n          L    14,=A(TRTAB)\n          TR   HASPMEMB,0(14)    GET RID OF )\n          L 14,=A(DELIMTAB)\n          TRT  HASPMEMB,0(14)  LOOK FOR &\n          CLI  0(1),X'50'\n          BE   PLUGIN\n          B    CLOJES\n***IF SUBSTITUTABLE PARM PLUG IN JES2PARM FOR NOW\n***PLUG IN NAME FOR TESTING\nPLUGIN     DS   0H\n****      MVC  HASPNAME,=CL44'SYS1.JES2.PARMLIB'\n          MVC  HASPMEMB,=CL8'JES2PARM'\n          B    CLOJES\nCLOJES    DS    0H\n**CLOSE JESPROC\n          CLOSE JESPROC\n**DELALLOCATE PRIOR  JESPROC\n          MVC  JEALCDDN,=CL8'JESPROC'\n          MVC  JDMEMBER,=CL8'JES2'\n          LA   1,JTPOINTD      DEALLOC PROCLIB\n          DYNALLOC\n***ALLOCATE  NEW JESPROC\n          MVC   JDNTXPRM,=CL8'JESPROC'\n          MVC   JSNPOINT,=A(JSNTEXT)\n          MVC   JSNTXPRM,HASPNAME   NEW DSNAME\n          MVC   JSMTXPRM,HASPMEMB   NEW MEMBER\n          LA   1,JTPOINT       ALLOC PROCLIB\n          DYNALLOC\n          LTR   15,15\n          BNZ   ENDPROCJ\n          OPEN (JESPROC,(INPUT))\n          LTR  15,15\n          BNZ  ENDPROCK\n          MVI  HASPSW,X'01'  SET FLAG\nGETJMORE   DS   0H\n          GET JESPROC\n          CLI  1(1),C'*'    COMMENT\n          BE   GETJMORE\n          B    GOTJPROC\n********END MOD FOR PROCLIB DSN'S NOT IN JCL\nGOTJPROD  DS   0H\n          LA   3,L'PROCLIBS(3)\n          B    *+8\nGOTJPROC  DS   0H\n          LA   3,PROCLIBS\n          LR   2,1\nGTJ       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROCJ\n          BAL  14,JDELIM\nJONTVLST   DS   0H\n          LA   3,L'PROCLIBS(3)   NEXT ENTRY\n          LH   0,NUMPLIBS\n          AH   0,=H'1'\n          STH  0,NUMPLIBS\n          CH   0,=AL2(NUMPLIBN)\n          BH   ENDPROCJ    MAX OF 30 DSNAMES\nJETVLST   DS   0H\n          GET  JESPROC\n          CLI  2(1),C'*'   COMMENT?\n          BE   JETVLST\n          CLI  0(1),C'*'   COMMENT?\n          BE   JETVLST\n          CLC  0(7,1),=CL7'PROCLIB'\n          BE   JETVLST\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  JREVLIB     SEE IF //PROCNN\n          LR   2,1\nJC1       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROCJ\n          BAL  14,JDELIM\n          B    JONTVLST\nJREVLIB   DS   0H\n          CLC  0(6,1),=CL6'//PROC'\n          BE   GOTJPROD\n          B   ENDPROCJ\nENDPROCJ  DS   0H\n          CLOSE JESPROC\nENDPROCK  DS    0H\n*****DEALLOCATE PROCLIB\n          MVC  JEALCDDN,=CL8'JESPROC'\n          MVC  JDMEMBER,=CL8'JES2'\n*         NI   JDDNPOID,255-X'80'  SET OFF LAST TU ON DDN\n*         OI   JDDMPOID,X'80'  SET ON  LAST TU ON MEMBER\n          LA   1,JTPOINTD      DEALLOC PROCLIB\n*         NI   JDDMPOID,255-X'80'  SET OFF LAST TU ON MEMBER\n*         OI   JDDNPOID,X'80'  SET ON  LAST TU ON DDN\n          DYNALLOC\n*******ALLOCATE PROCLIB LIBS\n          LA  1,PROCLIBS\n          MVC  WORKDSN,POFF(1)\n          ST  1,JSNPOINT\n*         MVC  JDNTXPRM,=CL8'SYSPROC'\n          MVC  JDNTXPRM,=CL8'PROCXXX'\n          OI   JSPPOINT,X'80'  SET LAST TU - NO MEMBER NAME\n          LA   1,JTPOINT       ALLOCATE PROCLIB\n          DYNALLOC\n          MVC  JSNPOINT,=A(JSNTEXT)  RESET\n          NI   JSPPOINT,255-X'80'  RESET\n          LTR  15,15\n          BNZ  JEALVLST\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n*         OPEN (SYSPROC,(INPUT))\n          OPEN (PROCXXX,(INPUT))\n          LTR  15,15\n          BNZ   JEALVLST\n*****BLDL SYSPROC\n*         LA  DCBREG,SYSPROC\n          LA  DCBREG,PROCXXX\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  JEALVLST\n          OI    TSOSW,SRCMOD\n          OI  WORKSW2,LOADPROC\n*DONT***OUTPUT MSG HERE\n*         MVC   MODCON,=CL6'SOURCE'\n*         MVC  DDNCON,WORKDDN\n*         MVC  DSNCON,WORKDSN\n*         MVC  DSNCONAT(ATCONL),BLANKS\n*          PUT  OUTFILE,OUTCON\n           B   JEALVLST\n********END OUTPUT MSG******************\nJEALVLST   DS   0H\n***        CLOSE  SYSPROC\n           CLOSE  PROCXXX\n*         MVC  JEALCDDN,=CL8'SYSPROC'\n          MVC  JEALCDDN,=CL8'PROCXXX'\n          LA   1,JTPOINTD      DEALLOC PROCLIB\n          DYNALLOC\n            TM  WORKSW2,LOADPROC\n            BO ENDVLSTJ\n            B  JEXTVLSA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nJEXTVLSA  DS    0H\n          LH   1,NUMPLIBS\n          LTR  1,1\n          BZ   ENDVLSTJ\n          STH  1,CURNUM\n          LA   1,PROCLIBS+L'PROCLIBS\n          ST   1,CURPLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nJDDVLSTP  DS   0H\n          ST   1,JSNPOINT\n          MVC  WORKDSN,POFF(1)\n          MVC  JDNTXPRM,=CL8'PROCXXX'\n          OI   JSPPOINT,X'80'  NO MEMBER NAME\n          LA   1,JTPOINT       ALLOCATE PROCXXX\n          DYNALLOC\n          NI   JSPPOINT,255-X'80'\n          MVC  JDNTXPRM,=CL8'JESPROC' RESET\n          LTR  15,15\n          BNZ  JEALVXXX\n          OPEN (PROCXXX,(INPUT))\n          LTR  15,15\n          BNZ   JEALVXXX\n          LA  DCBREG,PROCXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  JEALVXXX\n           OI  WORKSW2,LOADPROC\n            B  JEALVXXX\nJEALVXXX   DS   0H\n           CLOSE PROCXXX\n*****DEALLOCATE PROCXXX\n          MVC  JEALCDDN,=CL8'PROCXXX'\n          LA   1,JTPOINTD      DEALLOC PROCXXX\n          DYNALLOC\n          MVC  JEALCDDN,=CL8'JESPROC'  RESET\n          TM  WORKSW2,LOADPROC\n          BO  ENDVLSTJ\n          B  JEXTVLSB\nJEXTVLSB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLSTJ\n          STH  1,CURNUM\n          L    1,CURPLST\n          LA   1,L'PROCLIBS(1)\n          ST   1,CURPLST\n          B    JDDVLSTP\nENDVLSTJ DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,MVSSAVE\n          BR   RET\nJDELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          MVC POFF(44,3),=44C' '\n          LA   15,4(1)\n          L    14,=A(DELIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVEJTN\n          EX   1,MOVEHASP\n          MVC  0(JALCONSL,3),JALCONS\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVEJTN   MVC POFF(0,3),0(15)\nMOVEHASP  MVC HASPNAME(0),0(15)\nJALCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nJALCONSL EQU  *-JALCONS\nJESPROC DCB DSORG=PS,MACRF=GL,DDNAME=JESPROC,EODAD=ENDPROCJ\nPROCXXX DCB DSORG=PO,MACRF=(R),DDNAME=PROCXXX\n         DS  0D\nFILL    DC   CL8'JTPOINT'\n******TO ALLOC SYS1.PROCLIB\n         DS  0D\nJTPOINT  DC   A(JBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   JTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nJBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(JBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\nJBTXTPP  DC    A(JXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nJBEL     EQU   *-JBS\n* TEXT POINTERS  FOR ALLOCATION\nJXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nJDNPOINT DC   A(JDNTEXT)    DDN TU\nJSNPOINT DC   A(JSNTEXT)    DSN TU\nJSPPOINT DC   A(JSSPTEXN)   DISP TU\nJSMPOINT DC   A(JSMTEXT)    MEMBER TU\n         ORG  JSMPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nJDNTEXT  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\n         DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDNTXPRM)  LENGTH OF PARM\nJDNTXPRM DC    CL8'JESPROC'  DDNAME\n**DSN  TEXT UNIT\nJSNTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JSNTXPRM)   LENGTH OF PARM\nJSNTXPRM DC    CL44'SYS1.PROCLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nJSMTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JSMTXPRM)   LENGTH OF PARM\nJSMTXPRM DC    CL8'JES2    '     MEMBERNAME\n**DISP TEXT UNIT\nJSSPTEXN  DS    0F   DSP TEXT UNIT\nJISPTEXT  EQU   *\n         DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\n          DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n          DC    AL2(L'JSSPTXPR)  LENGTH OF PARM\nJSSPTXPR DC    X'08'  DISP=SHR\n***FOR DEALLOCATION\n          DS   0D\nJTPOINTD DC   A(JBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   JTPOINTD  S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nJBSD    DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n          DC    AL1(JDBELD)  LEN OF RB\n          DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\n          DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n          DS    X       2ND   FLAG BYTE\n          DS    XL2     ERROR REASON CODE\n          DS    XL2     INFO  REASON CODE\n          DC    A(JDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nJDBELD     EQU   *-JBSD\n* TEXT POINTERS  FOR DEALLOCATION\nJDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\nJDDNPOID DC   A(JNDNTEXD)  DDN TU\n         ORG JDDNPOID   FOR LAST TU\n         DC  X'80'\n         ORG\nJDDSPOID DC  A(JSNTEXT)  DSN    TU\nJDDMPOID DC  A(JDDMTEXD) MEMBER TU\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nJNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDNTXPRM)  LENGTH OF PARM\nJEALCDDN DC    CL8'JESPROC'  DDNAME\nJDDMTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDMEMBER)  LENGTH OF PARM\nJDMEMBER DC    CL8'JES2'  MEMBER NAME\nDSNADD   DS    F\nHASPNAME  DC   CL44' '\nHASPMEMB  DC   CL8' '\n          DC   CL8' '\nHASPSW    DC   X'00'\n          LTORG\n          DROP  LINKREG\n          EJECT\n***************************************\nSYNOPEN  DS   0H         SYNAD ROUTINE FOR OPEN\n          USING *,15     RETURN ADDR IN R2\n          BR   2\n          LTORG\n          DROP 15\n****\nDCBXOPEN  DS   0H         DCB ABEND EXIT\n          USING *,15     PARM LIST IN R1; RETURN IN 14\n          MVI  DCBABSW,X'FF'\n          LA  2,0(1)     PARM LIST\n          MVI 3(2),X'04'  IGNORE ERROR\n          BR  14\nDCBABSW   DS   X\n          LTORG\n          DROP 15\n          EJECT\n****\nTRTAB    DS   0C\n        USING *,1\n      DC   256AL1(*-TRTAB)\n         ORG  TRTAB\n          DC  X'40'\n         ORG  TRTAB+X'81'\n         DC   C'ABCDEFGHI'\n         ORG  TRTAB+X'91'\n         DC   C'JKLMNOPQR'\n         ORG  TRTAB+X'A2'\n         DC   C'STUVWXYZ'\n         ORG TRTAB+C')'\n         DC   X'40'\n         ORG\n          LTORG\n          DROP  1\n*******************\nTRANTAB  DS   0H\n         USING *,1\nTRTTAB   DC   256X'FF'      ALPHA CHARS GO IN AS LOWER CASE\n         ORG  TRTTAB+X'81'\n         DC   9X'00'   A-I\n         ORG  TRTTAB+X'91'\n         DC   9X'00'   J-R\n         ORG  TRTTAB+X'A2'\n         DC   9X'00'   S-Z\n         ORG  TRTTAB+C'A'\n         DC   9X'00'   A-I\n         ORG  TRTTAB+C'J'\n         DC   9X'00'   J-R\n         ORG  TRTTAB+C'S'\n         DC   9X'00'   S-Z\n         ORG  TRTTAB+C'0'\n         DC  10X'00'   0-9\n         ORG\n         LTORG\n         DROP  1\n         LTORG\n        EJECT\nDELIMTAB DS   0C\n         USING *,1\n         DC   256X'00'\n          ORG  DELIMTAB\n          DC   X'FF'\n          ORG  DELIMTAB+C' '\n          DC   X'FF'\n          ORG  DELIMTAB+X'50'\n          DC   X'FF'\n          ORG  DELIMTAB+C','\n          DC   X'FF'\n          ORG  DELIMTAB+C'('\n          DC   X'FF'\n          ORG  DELIMTAB+C')'\n          DC   X'FF'\n          ORG\n          LTORG\n          DROP  1\n          EJECT\nDALIMTAB  DS  0C\n         USING *,1\n         DC   256X'00'\n          ORG  DALIMTAB\n          DC   X'FF'\n          ORG  DALIMTAB+C' '\n          DC   X'FF'\n          ORG  DALIMTAB+C','\n          DC   X'FF'\n          ORG  DALIMTAB+C'('\n          DC   X'FF'\n          ORG  DALIMTAB+C')'\n          DC   X'FF'\n          ORG\n          LTORG\n          DROP  1\n          EJECT\nDDNTAB   DS   0F\n        USING *,1\n         DS  100CL16\n         DROP  1\nALPHTAB DS   0C\n         USING *,1\n         DC   256X'00'\n          ORG  ALPHTAB+X'C1'\n          DC  9X'FF'\n          ORG  ALPHTAB+X'D1'\n          DC  9X'FF'\n          ORG  ALPHTAB+X'E2'\n          DC  8X'FF'\n          ORG\n          LTORG\n          DROP  1\nCONVTAB  DS    0H   TRANSLATE LOWER CASE TO UPPER CASE\n          USING *,TABREG\nCNVTAB   DC  256AL1(*-CNVTAB)\n         ORG  CNVTAB+X'81'\n         DC   C'ABCDEFGHI'\n         ORG  CNVTAB+X'91'\n         DC   C'JKLMNOPQR'\n         ORG  CNVTAB+X'A2'\n         DC   C'STUVWXYZ'\n         ORG\n         LTORG\n         DROP  TABREG\n          EJECT\nTABSECT  DSECT\nTABENTRY  EQU  *\nDDNDSNAM  DS   CL8\nDDNDEB    DS   F\nDDNTIOT   DS   F\nTABL      EQU   *-TABENTRY\n          LTORG\n         END                                                            COP00620\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMODTSO$": {"ttr": 8451, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1a\\x00\\x01\\x01\\x00\\x04\\x8f\\x01\\x143_\\x13X\\x00\\x1e\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.26", "flags": 0, "createdate": "2000-02-17T00:00:00", "modifydate": "2014-12-01T13:58:01", "lines": 30, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//*        DD DISP=SHR,DSN=SBGOLOB.FILE249.MACLIB\n//*                                       =>RECEIVE MEMBER=MACLIB\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT490.FILE249(WMODTSO)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI  CB490249\n SETCODE AC(0)\n NAME    WMODTSO(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMODTSO1": {"ttr": 8453, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x95\\x05O\\x00\\x95 /\\x13\\x00\\x03e\\x03S\\x00\\x00\\xd6\\xd3\\xc4@@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1995-02-23T00:00:00", "modifydate": "1995-07-21T13:00:00", "lines": 869, "newlines": 851, "modlines": 0, "user": "OLD"}, "text": "         PRINT ON,GEN\n*****W M O D******TSO VERSION*************************\n****FORMAT: WMOD MODNAME\n**  RUNTIME INSTRUCTIONS\n**PLACE PROGRAM IN LINKLIST OR INVOKE THRU CALL STATEMENT IN A CLIST.\n**  ASSEMBLY INSTRUCTIONS\n**  INCLUDE IN ASSEMBLY SYSLIB A MACLIB CONTAINING MACRO CONVCODE\n**  WHICH IS INCLUDED IN THIS PDS OR ON THIS TAPE\n*********************************\n**THIS PROGRAM WILL SEARCH ALL ALLOCATED PDS LIBRARIES IN THE TSO\n**ADDRESS SPACE FOR THE SPECIFIED MODULE NAME, INCLUDING CLISTS,\n**SOURCE, ISPF LIBRARIES, ETC. IT WILL ALSO SEARCH STEPLIB, LPA,\n**LINKLIST AND SVCLIB. FOR LPA MODULES, THE ADDRESS IN LPA WILL\n**BE RETURNED. FOR ALL OTHERS, THE DATASET NAME WILL BE RETURNED.\n*******************************************************\nBASE     EQU   11                                                       COP00220\nLINKREG   EQU  8\nRET      EQU  10\nPRVREG   EQU   5    PRVMOD LIST\nCVTREG    EQU  1\nXIOTREG    EQU  1\nLPDEREG   EQU  2\nDCBREG    EQU  2\nDEBREG    EQU  3\nLLTREG    EQU  3\nTIOTREG   EQU  4\nARLREG    EQU  4\nBASEREG   EQU  11\nJSCBREG   EQU  15\nJFCBREG   EQU  15\nTCBREG    EQU  5\n         IEFZB4D0\n         IEFZB4D2\nARL    IHAARL  DSECT=YES,PREFIX=ARL,DESCR=YES\nARLENGTH EQU  *-ARL\n        DCBD  DSORG=PO\nDCBLEN  EQU  *-IHADCB\nTIOT     DSECT\n        IEFTIOT1\nTIOTOFF   EQU  TIOENTRY-TIOT\nXIOT      DSECT\n     ORG XIOT+TIOELNGH-TIOENTRY\nXIOELNGH  DS   XL(L'TIOELNGH)\n     ORG  XIOT+TIOEDDNM-TIOENTRY\nXIOEDDNM  DS  CL(L'TIOEDDNM)\n     ORG  XIOT+TIOEJFCB-TIOENTRY\nXIOEJFCB  DS   XL(L'TIOEJFCB)\nJFCB     DSECT\n         IEFJFCBN LIST=YES\nDEBBASIC  IGGDEBD\n          IKJTCB  LIST=YES,DSECT=YES\n          IEZJSCB\nARAD    DSECT\nARALEN   DS   H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4\n***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)\n         DS   XL2  RESERVED\nARAJFCB  DS    CL176   JFCB\nARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL\n        CVT   DSECT=YES,LIST=YES\n          IHALPDE\nLPDELEN    EQU   *-LPDE\nLLTE      DSECT\n          DS   X\nLLTDSN    DS  CL44\nLLTLEN    EQU  *-LLTE\nLLTOFF    EQU  8    OFFSET TO FIRST LLTE\nPRVENTRY  DS   CL8    FOR EACH ENTRY\n*********************************************************************** COP00210\n*********************************************************************** COP00250\n* NAME: WMOD                                                            COP00290\n* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310\n*                                                                       COP00420\n**********************************************************************  COP00430\nWMOD     CSECT                                                          COP00440\n          USING *,15\n         STM   14,12,12(13)\n         ST    13,SAVEMAC+8\n         LA     13,SAVEMAC\n         LR     BASEREG,15\n          DROP  15\n         USING  WMOD,BASEREG\n         ST    1,SAVER1             TCA ADDR\n***      OPEN  (SNAP,OUTPUT)\n****      L     1,SAVER1\n****      MVC   SNAPPARM,0(1)\n****     SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=01\n*****     L     1,SAVER1\n         CLI    0(1),X'80'    ONLY PARM\n         BNE    NOTONE\n         L      1,0(1)            ADDRESS OF PARM LIST\n          ST    1,SAVER1\n****      MVC   SNAPPARM,0(1)\n******   SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=02\n****      L     1,SAVER1\n         LH     2,0(1)          LENGHT OF PARM FIELD\n         LTR    2,2\n         BZ     ENDIT\n         BCTR   2,0\n         LA    1,2(1)\n         EX     2,MOVEPROG\n          B     GOTIT\nNOTONE   DS     0H\n         L      1,0(1)            ADDRESS OF PARM LIST\n          ST    1,SAVER1\n****      MVC   SNAPPARM,0(1)\n*****    SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=03\n****      L     1,SAVER1\n         LR     15,1      SAVE IT\n         LH     2,2(1)           LEN   OF FIRST PARM\n         LR     0,2              SAVE LEN\n         LA    1,4(1)         ADDR 1ST PARM\n         AR     2,1           END OF FIRST PARM\n         CLI   0(2),C'$'      REALLY A 2ND PARM\n         BL     ISONE          NO...\n         LH    0,0(15)   LEN OF TOTAL PARM AREA\n          LH  15,2(15)   LEN OF FIRST PARM\n          SR   0,15     LEN OF 2ND PARM\n          SH   0,=H'4'   - LEN\n          LR   1,2       ADDR 2ND PARM\n         LR    2,0    LEN 2ND PARM\n         BCTR  2,0\n         EX    2,MOVEPROG\n         B      GOTIT\nMOVEPROG   MVC   WORKPROG(0),0(1)\nISONE    DS     0H\n         LR    15,0       LEN  OF PARM\n         BCTR  15,0\n         EX    15,MOVEPROG\n         B      GOTIT\nGOTIT    DS     0H\n         L      LINKREG,=A(ALLOCOUT)\n         BALR   RET,LINKREG\n         OPEN (OUTFILE,(OUTPUT))\n         XR    5,5                 CLEAR REG 5                          COP00490\n         L     15,=A(TRTAB)        TRANSLATE 00 TO BLANK\n         TR   WORKPROG,0(15)        AND LOWER TO UPPER CASE\n*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA\n          L   LINKREG,=A(CHKSLIB)\n         BALR  RET,LINKREG\n          TM   WORKSW,LOADSTEP\n          BO   DOSTEP       IS IN STEPLIB/JOBLIB\n           B   TESTSVC\nTESTSVC   DS   0H\n          TM   WORKSW,LOADSVC\n          BNO  TESTLINK       CHECK LINKLIST\n          MVC WORKDSN,SVCDSN\n          MVC WORKDDN,=CL8'SVCLIB'\n          MVC  RETADDR,=A(TESTLINK)\n          B    PUTOUT\nDOSTEP   DS   0H\n          XC   RETADDR,RETADDR\n          XC   WORKDSN,WORKDSN\n          MVC   WORKDDN,=CL8'STEPLIB'\n          L    LINKREG,=A(RDJFCB)\n         BALR  RET,LINKREG\n           CLI  WORKDSN,X'00'\n           BE   TESTSVC\n           MVC  RETADDR,=A(TESTSVC)\n          B     PUTOUT    IF NOT STEPLIB SEARCH LINKLIST\nTESTLINK  DS   0H\n            TM  WORKSW,LOADLINK\n           BO   DOLINK\n           B   TESTLPA\nDOLINK   DS    0H\n           XC   WORKDDN,WORKDDN\n           XC   WORKDSN,WORKDSN\n          L    LINKREG,=A(SRCHLINK)\n         BALR  RET,LINKREG\n          MVC   WORKDDN,=CL8'LINKLIB'\n           MVC  RETADDR,=A(TESTLPA)\n           B    PUTOUT\nTESTLPA    DS   0H   CHECK IF MODULE IN LPA\n            B    DOLPA\nDOLPA      DS   0H\n           XC   WORKADDR,WORKADDR\n           MVC  WORKDDN,=CL8'LPALIB'\n           L    LINKREG,=A(SRCHLPA)\n           BALR RET,LINKREG\n           TM  WORKSW,LOADLPA\n            BNO TESTDDNS\n           MVC RETADDR,=A(TESTDDNS)\n           B   PUTOUT\nTESTDDNS  DS   0H\n***GET DDN OF ALL PDS'S ALLOCATED TO REGION\n          L   LINKREG,=A(LOCDEBS) SEARCH DEB QUEUES\n         BALR  RET,LINKREG\n           L   1,=A(DDNTAB)\nTESTDDNT  DS   0H\n         CLI  0(1),X'FF'\n         BE    WHERLOAD\n          ST   1,CURDDN\n           B   DODDNST\nNEXTDDNT   DS   0H\n           L   1,CURDDN\n           LA   1,TABL(1)\n           B    TESTDDNT\nDODDNST   DS    0H\n****LOCATE DCB FOR EACH DDN IS TABLE AND ISSUE BLDL FOR MODULE\n          L   LINKREG,=A(SRCHSDEB) SEARCH DEB QUEUES\n         BALR  RET,LINKREG\n          TM   TSOSW,TSOFILE\n          BO   DOTSODD      PROGRAM FOUND\n          B    NEXTDDNT\n          CLI  FOUNDSW,X'FF'\n          BE  RETURN\n          L   LINKREG,=A(FINDDCB)\n         BALR  RET,LINKREG\n          TM   TSOSW,TSOFILE\n          BNO  WHERLOAD     PROGRAM NOT DDN\n           B   DOTSODD\nDOTSODD   DS    0H\n****READ JFCBS FOR DDN     AND EXTRACT DSN IN CONCATENATION****\n          L   LINKREG,=A(RDJFCB)\n         BALR  RET,LINKREG\n          CLI   WORKDSN,X'00'\n          BE    WHERLOAD\n          MVC   RETADDR,=A(NEXTDDNT)\n          B     PUTOUT\nNOPROG   DS   0H\n          XC   OUTCON,OUTCON\n          MVC  ERRPROG,WORKPROG\n          MVC  OUTCON(ERRMESSL),ERRMESS\n           XC  RETADDR,RETADDR\n           B   DOSEND\nWHERLOAD  DS   0H\n           CLI FOUNDSW,X'FF'\n            BNE NOPROG\n            B   RETURN\nPUTOUT   DS   0H\n           MVI  FOUNDSW,X'FF'\n          MVC   MODCON,=CL6'LOAD  '\n          TM    TSOSW,SRCMOD\n          BNO   *+10\n          MVC   MODCON,=CL6'SOURCE'\n          MVC   PROGCON,WORKPROG\n          MVC  DDNCON,WORKDDN\n          CLI  WORKDSN,X'00'\n          BE   *+14\n          MVC  DSNCON,WORKDSN\n           B   DOSEND\n          MVC  DSNCON(3),=CL3'AT '\n          MVC  DSNCON+4(L'WORKCDDR),WORKCDDR\n           B   DOSEND\nDOSEND   DS    0H\n          MVI  FOUNDSW,X'FF'\n           PUT  OUTFILE,OUTCON\n          OC  RETADDR,RETADDR\n          BZ   RETURN\n           L   1,RETADDR\n          BR   1\nRETURN   DS   0H\n          CLOSE OUTFILE\nENDIT    DS   0H\n          L    13,SAVEMAC+8\n          LM   14,12,12(13)\n          BR    14\nERRMESS  DS    0C\n          DC  CL4' '\nERRPROG  DS   CL8\n         DC C' NOT FOUND        '\nERRMESSL EQU  *-ERRMESS\nBLANKS   DC   8C' '\nWORKDSN  DS  CL42\nSVCDSN   DC  CL(L'WORKDSN)'SYS1.SVCLIB'\nWORKPROG  DS  CL8\nWORKDDN   DS  CL8\nWORKPARM  DS   CL16\n*NAPPARM  DS   CL40\nCONLPA  DC  C' NOT LOADED FROM LPA'\nTSOSW   DS   X\nTSOFILE   EQU  X'01'\nSRCMOD    EQU  X'80'\nWORKSW    DS   X\nNOLPA     EQU  X'01'\nNOPPT     EQU  X'02'\nFOUND     EQU  X'04'\nLOADSVC   EQU  X'08'\nLOADLPA   EQU  X'10'\nLOADSTEP  EQU  X'20'\nLOADLINK  EQU  X'40'\nLOADRPL   EQU  X'80'\nFOUNDSW   DS   X\nTCBADDR   DS   F\nTIOTADDR  DS   F\nDEBADDR   DS   F\nDCBADDR   DS   F\nRETADDR    DS   F\nWORKADDR   DS   F\nBEGTIOT    DS   F\nCURDDN     DS   F\nWORKCDDR   DS   CL8\nSAVEMAC    DS   18F\nSAVELINK   DS   18F\nSAVER1    DS   F\nENDDEBQ   DS   F\nDEBQADDR  DS   F\nFINOUT   DS   0C\n         DC  C' MODULE LOADED FROM '\nFINLIB    DS  CL8\nFINL     EQU  *-FINOUT\nBLDLLIST  DS   0H\nBLDLNUM   DS   H   NUMBER OF ENTRIES\nBLDLLEN  DS   H   LEN OF EACH ENTRY\nBLDENTRY  EQU  *\nBLDLNAME  DS  CL8\nBLDLTTR   DS  XL3\nBLDLCCAT  DS  X   CONCAT NUMBER RETURNED BY BLDL\nBLDLZ     DS  X   WHERE ENTRY FOUND\n          DS   X\nBLDLFILL   EQU  *-BLDLTTR\nBLDLELEN  EQU  *-BLDENTRY  LEN OF EACH ENTRY\nSAVECAT   DS    X\nOUTFILE  DCB  DDNAME=CERMFILE,MACRF=PM,DSORG=PS,RECFM=FA,              X\n               LRECL=80,BLKSIZE=80\nOUTCON   DC   CL80' '\n          ORG  OUTCON\n         DC  CL1' '\nMODCON   DC  CL6' '\n         DC  C' MODULE '\nPROGCON  DS  CL8\n         DC C' IS IN DDN '\nDDNCON   DS  CL8\n         DC   C' '\nDSNCON   DS  CL42\n          ORG\nOUTCONL   EQU  *-OUTCON\nWARLAREA  DS  CL(ARLENGTH)\nWXJFCB   DS    0F                                                       JFC00600\n         DC   X'13'           FOR LAST ENTRY                            JFC00610\nWXADD    DC   AL3(WARLAREA)                                             JFC00620\nWDCB     DS CL(DCBLEN)                                                       JFC\nWDJLIST  RDJFCB  (2),MF=L\n         ORG   *-3\nWDJDCBA  EQU  *   ADDR OF DCB\n         DS   AL3   PUT DCB ADDR HERE\n         ORG\n*NAP DCB  DDNAME=SNAP,DSORG=PS,MACRF=W,LRECL=125,RECFM=VBA,BLKSIZE=882\n          LTORG\n           EJECT\nRDJFCB  DS   0H\n        PRINT ON,GEN\n        USING *,LINKREG\n        STM  14,12,SAVELINK+12\n         XC   WORKDSN,WORKDSN\n          MVC  WARLAREA(ARLENGTH),CRL       MOVE TO DYNAMIC STORAGE\n          LA   ARLREG,WARLAREA\n          STCM  ARLREG,7,WXADD  STORE ADDR OF JFCBAREA IN EXLIST\n          USING ARL,ARLREG\n          MVC   ARLRETRV,=H'1'  ONLY WANT INFO FOR 1 DATASET\n          SR    0,0\n          IC    0,BLDLCCAT   RELATIVE CONCAT NUMBER\n          AH    0,=H'1'    ACTUAL CONCAT NUMBER\n          STH   0,ARLFIRST    DS   WITH THIS CONCAT NUMBER\n           DROP  ARLREG\n          MVI  WXJFCB,X'13'   CODE FOR CONCATENATION EXIT\n           MVC  WDCB,OPEJFCB  MOVE DCB\n           LA   1,WDCB\n          USING IHADCB,1\n           MVC  DCBDDNAM,WORKDDN\n          LA  2,WXJFCB   RESET EXLST ADDR IN DCB\n          ST   2,DCBEXLST\n          DROP   1\n          MVC  WDJLIST,RDJLIST   MOVE RDJFCB LIST TO WORK AREA\n          LA   2,WDCB\n          STCM 2,7,WDJDCBA    STORE DCB ADDR IN RDJFCB LIST\n          LA   1,WDJLIST\n       RDJFCB   0(2),MF=(E,(1))                                          JFC0042\n          LTR  15,15\n          BNZ   ENDJFCB\n         B   PROCJFCB\nPROCJFCB DS   0H  FIND JFCB FOR CONCAT NUMBER FROM BLDL\n          LA   ARLREG,WARLAREA\n          USING ARL,ARLREG\n           L    1,ARLAREA  RESPONSE FROM RDJFCB\n           USING ARAD,1\n           LA   JFCBREG,ARAJFCB\n           DROP   1\n           USING JFCB,JFCBREG\n           MVC  WORKDSN,JFCBDSNM    SAVE DSNAME\n           B    FREEJFCB\nFREEJFCB DS   0H   FREE ARA\n****ISSUE FREEMAIN FOR STORAGE AREAS*****\n       SR  2,2\n       IC  2,ARLPOOL SUBPOOL\n       L   3,ARLAREA  ADDR OF ARA\n        SR   0,0\n       ICM  0,7,ARLRLEN\n        DROP  ARLREG\n    FREEMAIN RU,LV=(0),SP=(2),A=(3)\n        B  ENDJFCB\nGETOUT  DS   0H\nENDJFCB DS   0H\n         LM   14,12,SAVELINK+12\n         BR    RET\n***ALLOCATION RETRIEVAL LIST\nCRL  IHAARL  DSECT=NO,PREFIX=CRL,DESCR=NO\nEXJFCB   DS    0F                                                        JFC0060\n          DC   X'13'           FOR LAST ENTRY                            JFC0061\nEXADD    DS   AL3(CRL)                                                   JFC0062\nOPEJFCB   DCB   DDNAME=ISPPROF,EXLST=EXJFCB,MACRF=(E)                          J\nRDJLIST    RDJFCB   (2),MF=L\n          DROP  LINKREG\n          LTORG\n          EJECT\nFINDDCB  DS   0H\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n         NI   TSOSW,255-TSOFILE\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n         LR  TCBREG,1\n         B    NEXTTCB2\n         USING TCB,TCBREG\nNEXTTCB  DS   0H\n         L    TCBREG,TCBBACK  PREV TCB\nNEXTTCB2 DS    0H\n         LTR  TCBREG,TCBREG\n         BZ    ENDFDCB\n         CLC   TCBTCBID(3),=CL3'TCB'\n         BNE   ENDFDCB\n         ST   TCBREG,TCBADDR\n**CHECK IF DFHSIP TCB\n         L    JSCBREG,TCBJSCB\n*        USING IEZJSCB,JSCBREG\n*        CLC  JSCBPGMN,=CL8'DFHSIP'\n*        DROP  JSCBREG\n         L    TIOTREG,TCBTIO   TIOT\n         ST   TIOTREG,TIOTADDR\n         ST   TIOTREG,BEGTIOT\n         L    DEBREG,TCBDEB    DEB QUEUE\n         LTR  DEBREG,DEBREG\n          BZ   NEXTTCB\n         ST   DEBREG,DEBADDR\n         DROP  TCBREG\n         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY\n         USING  XIOT,TIOTREG\n         SR    0,0\n         B    FINDTIOT\nFINDTIOT  DS   0H\n         CLI   XIOELNGH,X'00'\n         BE    NEXTTCB\n         CLC   XIOEDDNM,WORKDDN\n         BE   GOTPROF\n         IC  0,XIOELNGH   LEN OF ENTRY\n         AR   TIOTREG,0    NEXT ENTRY\n         B    FINDTIOT\n***LOCATE DDN     IN TIOT\nGOTPROF   DS    0H\n         ST   TIOTREG,TIOTADDR\n****LOCATE DEB FOR DN     ****\n****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING TIOTADDR\n         L    DEBREG,DEBADDR\n         USING DEBBASIC,DEBREG\n         B     FINDDEB\nNEXTDEB   DS    0H\n          CLC   DEBDEBAD+1(3),=XL3'000000'\n          BE   NEXTTCB\n          L    DEBREG,DEBDEBAD     NEXT DEB\nFINDDEB   DS    0H\n       CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?\n         BNE   NEXTTCB\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   NEXTDEB          NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?\n          BO   *+18            YES...\n          CLC  WORKDDN,DCBDDNAM   SAME DD NAME\n          BE   GOTDCB\n           B    NEXTDEB\n         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB\n          L    1,BEGTIOT   BEG OF TIOT\n         AR    1,0         TIOT ADDR FOR THIS ENTRY\n          C    1,TIOTADDR  SAME AS FOR DDN\n          BE   GOTDCB     YES\n          B    NEXTDEB\nGOTDCB    DS    0H\n          ST  DCBREG,DCBADDR          DCB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  ENDFDCB\n           OI  TSOSW,TSOFILE\n          TM  DCBRECFM,DCBRECU  UNDEFINED\n          BO   ENDFDCB          ASSUME LOAD   MODULE\n*         TM  DCBRECFM,DCBRECF  FIXED BLOCK FILE\n*         BNO  ENDFDCB          ASSUME SOURCE MODULE\n           OI  TSOSW,SRCMOD\n          B   ENDFDCB\nENDFDCB  DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n         DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n          EJECT\nSRCHSDEB  DS   0H\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n         NI  TSOSW,255-TSOFILE\n          L   15,CURDDN\n         USING TABSECT,15\n         L    DEBREG,DDNDEB\n         USING DEBBASIC,DEBREG\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   ENDSJSCB         NO..RETURN\n         MVC   WORKDDN,DDNDSNAM\n          ST  DCBREG,DCBADDR          DCB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  ENDSJSCB\n           OI  TSOSW,TSOFILE\n          NI  TSOSW,255-SRCMOD\n          TM  DCBRECFM,DCBRECU  UNDEFINED\n          BO   ENDSJSCB         ASSUME LOAD   MODULE\n*         TM  DCBRECFM,DCBRECF  FIXED BLOCK FILE\n*         BNO  ENDSJSCB         ASSUME SOURCE MODULE\n           OI  TSOSW,SRCMOD\n          B   ENDSJSCB\nENDSJSCB DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n         DROP  LINKREG,15,DEBREG,DCBREG\n          EJECT\nLOCDEBS   DS   0H     GET LIST OF DDNS\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n          L  1,=A(DDNTAB)\n         ST   1,LASTTAB\n          MVI  0(1),X'FF'\n          MVI  TEMPSW,X'00'\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n         LR  TCBREG,1\n         USING TCB,TCBREG\n         USING DEBBASIC,DEBREG\n         L    TIOTREG,TCBTIO  TIOT\n         ST   TIOTREG,TIOTADDR\n         ST   TIOTREG,BEGTIOT\n         LA   TIOTREG,TIOTOFF(TIOTREG)\n         L    JSCBREG,TCBJSCB\n         USING IEZJSCB,JSCBREG\n         L    1,JSCBDBTB   DEB TAB\n         DROP  JSCBREG,TCBREG\n         LH   0,2(1)  LEGTH OF DEBQ\n         AR   0,1    END OF DEBQ\n         ST   0,ENDDEBQ\n         LA   1,4(1)       ADDR OF 1ST DEB IN Q\n         ST   1,DEBQADDR\n          L    DEBREG,0(1)\n         LTR  DEBREG,DEBREG\n          BZ   ENDLDEB\n           CLM  DEBREG,1,=X'FF'        INVALID ADDR\n          BE   NEWDEBQ\n         ST   DEBREG,DEBADDR\n         B    LOCDCB\nNEWDEBQ   DS    0H\n          L    1,DEBQADDR\n          LA   1,4(1)  NEXT DEB IN Q\n          C    1,ENDDEBQ       LAST DEB IN Q\n           BNL  CHKSPROC\n           ST   1,DEBQADDR\n          L    DEBREG,0(1)\n           LTR  DEBREG,DEBREG\n           BZ   ENDLDEB\n           CLM  DEBREG,1,=X'FF'        INVALID ADDR\n          BE   NEWDEBQ\n         ST   DEBREG,DEBADDR\n         B     LOCDCB\nLOCDCB    DS    0H\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   NEWDEBQ          NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?\n          BO   SETTIOT         YES...\n          MVC  WORKDDN,DCBDDNAM   SAVE DD NAME\n          B    SETTAB\nSETTIOT   DS   0H\n         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB\n          L    1,BEGTIOT   BEG OF TIOT\n         AR    1,0         TIOT ADDR FOR THIS ENTRY\n           LR   TIOTREG,1\n          USING XIOT,TIOTREG\n          MVC  WORKDDN,XIOEDDNM        DDN\n          B    SETTAB     YES\nSETTAB    DS   0H   STORE DDN IN LIST\n          USING TABSECT,1\n          L   1,LASTTAB\n           MVC  DDNDSNAM,WORKDDN\n          ST   DEBREG,DDNDEB\n          ST   TIOTREG,DDNTIOT\n          DROP  1\n          LA  1,TABL(1)\n          ST   1,LASTTAB\n           MVI 0(1),X'FF'\n           CLI  TEMPSW,X'00'\n           BNE  ENDLDEB\n           B   NEWDEBQ\nCHKSPROC  DS   0H   CHECK IF DEB FOR SYSPROC FOUND\n          L   1,=A(DDNTAB)\n          USING TABSECT,1\nCOMPPROC   DS   0H\n            CLI  0(1),X'FF'\n            BE  GETSPROC\n           CLC  DDNDSNAM,=CL8'SYSPROC'\n           BE   ENDLDEB\n          LA   1,TABL(1)\n          B   COMPPROC\n          DROP  1\nGETSPROC  DS  0H ASSUME SYSPROC ALLOCATED\n           OPEN  (SYSPROC,INPUT)\n          LTR  15,15\n           BNZ  ENDLDEB\n          LA  DCBREG,SYSPROC\n          L   DEBREG,DCBDEBAD\n          MVI  TEMPSW,X'FF'\n          MVC  WORKDDN,=CL8'SYSPROC'\n           B   SETTIOT\nENDLDEB  DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\nLASTTAB   DS   F\nSYSPROC DCB  DDNAME=SYSPROC,DSORG=PO,MACRF=(R)\nTEMPSW   DS   X\n          LTORG\n         DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n          EJECT\nCHKSLIB   DS   0H   CHECK IF MODULE IN JOBLIB OR STEPLIB\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n           B  GOSTEP\nGOSTEP    DS   0H\n          LA    13,SAVEMAC\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n          ST  1,TCBADDR\n           USING TCB,1\n            L   DCBREG,TCBJLB\n            DROP  1\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKSVC\n           MVC  SAVECAT,BLDLCCAT\n           CLI SAVECAT,X'02'\n           BNE CHKSVC\n           OI  WORKSW,LOADSTEP\n          B   CHKSVC\nCHKSVC    DS   0H\n          L   CVTREG,16\n           USING CVT,CVTREG\n           L   DCBREG,CVTSVDCB  DCB FOR SYS1.SVCLIB\n           DROP  CVTREG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKLINK\n           OI  WORKSW,LOADSVC\n          B   CHKLINK\nCHKLINK   DS   0H\n          L    CVTREG,16\n          USING CVT,CVTREG\n***ISSUE BLDL ON LINKLIST\n          MVC SAVELINK,CVTLLTA LINK LIST\n          L    DCBREG,CVTLINK  ADDR LINKLIST DCB\n           DROP CVTREG\n          XC   BLDLTTR,BLDLTTR\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  ENDSLIB\n          OI  WORKSW,LOADLINK\n           B  ENDSLIB\nENDSLIB  DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\nSRCHLINK  DS   0H   SEARCH LINK LIST FOR DSNAME\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          L    CVTREG,16\n          USING CVT,CVTREG\n          L   LLTREG,CVTLLTA   LINK LIST\n          LA   LLTREG,LLTOFF(LLTREG) FIRST ENTRY\n          USING LLTE,LLTREG\n          SR   1,1\n          IC  1,BLDLCCAT  CONCATENTATION NUMBER\n          LTR  1,1\n           BZ   GOTLLT\nNEXTLLT   DS   0H\n          LA   LLTREG,LLTLEN(LLTREG)  NEXT ENTRY\n          BCT  1,NEXTLLT     LOOP CONCAT NUMBER OF TIMES\n          B   GOTLLT\nGOTLLT    DS   0H\n          MVC WORKDSN,LLTDSN\n          B   ENDSLINK\nENDSLINK DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\n****\nSRCHLPA DS   0H   SERCH FOR MODULE IN LPA\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n         L   CVTREG,16\n         USING CVT,CVTREG\n         L    LPDEREG,CVTLPDIA  LPA DIRECTORY\n         DROP  CVTREG\n         USING  LPDE,LPDEREG\nTSTLPA   DS     0H\n         TM     LPDEATTB,LPDELPDE  LPDE IDENTIFIER\n         BNO    ENDSLPA\n         CLI    LPDENAME,X'00'\n          BE    ENDSLPA\n         CLC   WORKPROG,LPDENAME\n         BE    GOTLPA\n         LA    LPDEREG,LPDELEN(LPDEREG)\n          B     TSTLPA\nGOTLPA   DS    0H\n          MVC  WORKADDR,LPDEXTAD    LOAD ADDRESS\n           OI   WORKSW,LOADLPA\n          DROP  LPDEREG\nA  CONVCODE IN=WORKADDR,OUT=WORKCDDR,LEN=L'WORKADDR\n          B    ENDSLPA\nENDSLPA  DS    0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\nALLOCOUT DS    0H\n         USING  *,LINKREG\n         STM  14,12,ALCSAVE+12\n         LA    1,RBPOINT        (R1 => A(REQ BLOCK )\n         DYNALLOC\n         LM    14,12,ALCSAVE+12\n         BR    RET\n         DS  0F\nALCSAVE  DS  18F\nDYNBLKS  EQU  *\nRBPOINT  DC   A(RBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   RBPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n          ORG\n         DS    0F\nRBS     EQU  *\nRB       DS    0CL20  S99RB DSECT  LOC BY RBPOINT\nRBLN     DC    AL1(RBEL)         LEN OF RB\nRBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nRBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nRBFLAG2  DS    X       2ND   FLAG BYTE\nRBERROR  DS    XL2     ERROR REASON CODE\nRBINFO   DS    XL2     INFO  REASON CODE\nRBTXTPP  DC    A(TXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nRBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nRBEL     EQU   *-RB\n**TEXT UNIT POINTERS\nTXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nDDNPOINT DC  A(DDNTEXT)\nSYSPOINT DC  A(SYSOTEXT)\nTERPOINT DC  A(TERMTEXT)\n         ORG  TERPOINT\n         DC    X'80'   LAST TEXT UNIT\n         ORG\nTXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nDDNTEXT  DS    0F   DDN TEXT UNIT\nDDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nDDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nDDNTXENT DS    0C\nDDNPLEN  DC    AL2(L'DDNTXPRM)  LENGTH OF PARM\nDDNTXPRM DC    CL8'CERMFILE'\nSYSOTEXT  DS   0F\nSYSOXKEY DC    AL2(DALSYSOU) KEY FOR SYSOUT ALLOC\nSYSOXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSYSOXENT DS    0C\nSYSOLEN  DC    AL2(L'SYSOXPRM)  LENGTH OF PARM\nSYSOXPRM DC    C'A'          MUST BE 1\nTERMTEXT  DS   0F   OMITTED\nTERMXKEY DC    AL2(DALTERM) KEY FOR TERM=TS\nTERMXNUM DC    XL2'0000'   NUM LENGTH + PARM ENTRIES\nTERMXENT DS    0C\nTEPROFEN  DC    AL2(L'TERTXPRM)  LENGTH OF PARM\nTERTXPRM DS    0C       NO PARM\n         DC    CL6' '   FOR PATCHING\nTXLEN    EQU   *-TXUNITS\nDYNEL    EQU  *-DYNBLKS\nRBLEN  EQU  (S99RBEND-S99RB)\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\nTRTAB    DS   0C\n        USING *,1\n      DC   256AL1(*-TRTAB)\n         ORG  TRTAB\n          DC  X'40'\n         ORG  TRTAB+X'81'\n         DC   C'ABCDEFGHI'\n         ORG  TRTAB+X'91'\n         DC   C'JKLMNOPQR'\n         ORG  TRTAB+X'A2'\n         DC   C'STUVWXYZ'\n         ORG\n          LTORG\n          DROP  1\n*******************\nTRANTAB  DS   0H\n         USING *,1\nTRTTAB   DC   256X'FF'      ALPHA CHARS GO IN AS LOWER CASE\n         ORG  TRTTAB+X'81'\n         DC   9X'00'   A-I\n         ORG  TRTTAB+X'91'\n         DC   9X'00'   J-R\n         ORG  TRTTAB+X'A2'\n         DC   9X'00'   S-Z\n         ORG  TRTTAB+C'A'\n         DC   9X'00'   A-I\n         ORG  TRTTAB+C'J'\n         DC   9X'00'   J-R\n         ORG  TRTTAB+C'S'\n         DC   9X'00'   S-Z\n         ORG  TRTTAB+C'0'\n         DC  10X'00'   0-9\n         ORG\n         LTORG\n         DROP  1\n         LTORG\n        EJECT\nDDNTAB   DS   0F\n        USING *,1\n         DS  100CL16\n         DROP  1\nTABSECT  DSECT\nTABENTRY  EQU  *\nDDNDSNAM  DS   CL8\nDDNDEB    DS   F\nDDNTIOT   DS   F\nTABL      EQU   *-TABENTRY\n         LTORG\n         END                                                            COP00620\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMODTSO2": {"ttr": 8712, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x07O\\x01\\x01\\x07O\\x18#\\t\\xf0\\t\\xf0\\x00\\x00\\xd6\\xd3\\xc4\\xc5\\xd9@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-15T00:00:00", "modifydate": "2001-03-15T18:23:00", "lines": 2544, "newlines": 2544, "modlines": 0, "user": "OLDER"}, "text": "//ASMTWMOD JOB (A006,SYCI,999,999,000),BARKOW,CLASS=J,PRTY=13,\n// MSGCLASS=A,MSGLEVEL=(1,1)\n//*JOBPARM SYSAFF=MVSW\n//*ROUTE PRINT LOCAL,DEST=HOLD                                          DMX00030\n//*ROUTE PUNCH CSCVM.EXBCSC                                             DMX00040\n//*NOTIFY CSCVM.EXBCSC                                                  DMX00050\n//ASSEMBLE PROC MOD=WMOD\n//ASM EXEC PGM=IEV90,PARM='OBJECT,NODECK,NOXREF',  DMX0\n//  COND=(0,NE)\n//SYSLIB  DD DSN=SYS1.MACLIB,DISP=SHR UNIT=SYSDA,VOL=SER=MZRS5A         DMX00090\n//  DD DSN=SYS1.AMODGEN,DISP=SHR UNIT=SYSDA,VOL=SER=ZDLOS1              DMX00090\n//    DD DSN=EILEEN.MACLIB,DISP=SHR\n//    DD DSN=EILEEN.SOURCE,DISP=SHR\n//SYSUT1  DD  UNIT=SYSDA,SPACE=(1700,(400,40)),DISP=(NEW,DELETE)          DMX001\n//SYSUT2  DD  UNIT=SYSDA,SPACE=(1700,(400,40)),DISP=(NEW,DELETE)          DMX001\n//SYSUT3  DD  UNIT=VIO,SPACE=(1700,(400,40)),DISP=(NEW,DELETE)          DMX00130\n//SYSLIN    DD  DSN=&&SYSLIN,UNIT=SYSDA,DISP=(,PASS),\n// SPACE=(80,(1000,50,50)),DCB=(LRECL=80,BLKSIZE=3200,RECFM=FB)         DMX00150\n//SYSPRINT  DD  SYSOUT=A                                                DMX00160\n//SYSIN  DD  DUMMY\n//LNK EXEC PGM=IEWL,PARM='DCBS,LIST,LET,XREF',COND=(4,LT)\n//SYSUT1 DD UNIT=SYSDA,SPACE=(1024,(100,10))\n//SYSLMOD DD DSN=XCICS.COMMON.LOAD(&MOD),DISP=SHR,UNIT=SYSDA,\n//         DCB=(BLKSIZE=19069,RECFM=U)\n//SYSPRINT DD SYSOUT=A                                                      5860\n//SYSLIN DD DSN=&&SYSLIN,DISP=(OLD,DELETE)\n//  DD DDNAME=SYSIN\n// PEND                                                                 DMX05880\n//ASM  EXEC ASSEMBLE                                                    DMX05890\n//ASM.SYSIN DD *\n         PRINT ON,GEN\n*****W M O D******TSO VERSION*************************\n****FORMAT: WMOD MODNAME\n**  RUNTIME INSTRUCTIONS\n**PLACE PROGRAM IN LINKLIST OR INVOKE THRU CALL STATEMENT IN A CLIST.\n**  ASSEMBLY INSTRUCTIONS\n**  INCLUDE IN ASSEMBLY SYSLIB A MACLIB CONTAINING MACRO CONVCODE\n**  WHICH IS INCLUDED IN THIS PDS OR ON THIS TAPE\n*********************************\n**THIS PROGRAM WILL SEARCH ALL OPEN      PDS LIBRARIES IN THE TSO\n**ADDRESS SPACE FOR THE SPECIFIED MODULE NAME, INCLUDING CLISTS,\n**SOURCE, ISPF LIBRARIES, ETC. IT WILL ALSO SEARCH STEPLIB, LPA,\n**LINKLIST AND SVCLIB. FOR LPA MODULES, THE ADDRESS IN LPA WILL\n**BE RETURNED. FOR ALL OTHERS, THE DATASET NAME WILL BE RETURNED.\n*******************************************************\n         IGWSMDE\n*******************************************************\nBASE     EQU   11                                                       COP00220\nLINKREG   EQU  8\nRET      EQU  10\nPRVREG   EQU   5    PRVMOD LIST\nCVTREG    EQU  1\nXIOTREG    EQU  1\nLPDEREG   EQU  2\nDCBREG    EQU  2\nDEBREG    EQU  3\nLLTREG    EQU  3\nTIOTREG   EQU  4\nARLREG    EQU  4\nBASEREG   EQU  11\nJSCBREG   EQU  15\nJFCBREG   EQU  15\nTCBREG    EQU  5\nTABREG    EQU  5\n         IEFZB4D0\n         IEFZB4D2\nARL    IHAARL  DSECT=YES,PREFIX=ARL,DESCR=YES\nARLENGTH EQU  *-ARL\n        DCBD  DSORG=PO\nDCBLEN  EQU  *-IHADCB\nTIOT     DSECT\n        IEFTIOT1\nTIOTOFF   EQU  TIOENTRY-TIOT\nXIOT      DSECT\n     ORG XIOT+TIOELNGH-TIOENTRY\nXIOELNGH  DS   XL(L'TIOELNGH)\n     ORG  XIOT+TIOEDDNM-TIOENTRY\nXIOEDDNM  DS  CL(L'TIOEDDNM)\n     ORG  XIOT+TIOEJFCB-TIOENTRY\nXIOEJFCB  DS   XL(L'TIOEJFCB)\nJFCB     DSECT\n         IEFJFCBN LIST=YES\n*EBBASIC  IGGDEBD\n          IEZDEB LIST=YES\n          IKJTCB  LIST=YES,DSECT=YES\n          IEZJSCB\nARAD    DSECT\nARALEN   DS   H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4\n***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)\n         DS   XL2  RESERVED\nARAJFCB  DS    CL176   JFCB\nARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL\n        CVT   DSECT=YES,LIST=YES\n          IHALPDE\nLPDELEN    EQU   *-LPDE\nLLTE      DSECT\n          DS   X\nLLTDSN    DS  CL44\nLLTLEN    EQU  *-LLTE\nLLTOFF    EQU  8    OFFSET TO FIRST LLTE\nPRVENTRY  DS   CL8    FOR EACH ENTRY\n*********************************************************************** COP00210\n*********************************************************************** COP00250\n* NAME: WMOD                                                            COP00290\n* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310\n*                                                                       COP00420\n**********************************************************************  COP00430\nWMOD     CSECT                                                          COP00440\n          USING *,15\n         STM   14,12,12(13)\n         ST    13,SAVEMAC+8\n         LA     13,SAVEMAC\n         LR     BASEREG,15\n          DROP  15\n         USING  WMOD,BASEREG\n         ST    1,SAVER1             TCA ADDR\n***PARM PROCESSING FROM UCB ASM\n         L      1,0(1)            ADDRESS OF PARM LIST\n         ST     1,APRMDATA\n         LH     2,0(1)           TOTAL LEN\n         BCTR   2,0              DONT MOVE PAST END OF PARM\n         EX    2,SAVEPARM\n         LH     0,0(1)   TOTLEN\n         STH    0,TOTLEN\n         CLI    2(1),X'7D' PARM MAY FOLLOW LEN FIELD\n         BL    MOREPARM\n         STH    0,DATALEN\n          LA    15,2(1)\n          ST   15,DATAADDR\n          B    PROCPARM\nSAVEPARM  MVC   SAVEPRMB(0),0(1)\nMOREPARM  DS    0H\n         LH     3,2(1)\n         STH    3,OFFSET\n**IF TOTLEN=OFFSET+4 THEN PARM DATA STARTS AT 4  AND LEN=OFFSET\n**IF TOTLEN>OFFSET+4 THEN PARM DATA STARTS AT OFFSET PAST PGMNAME AT 4\n         LA     15,4(1) POINT PAST TOTLEN+OFFSET IN PARM FIELD\n         ST     15,DATAADDR\n         MVC    DATALEN,OFFSET\n         AH     3,=H'4'\n         CR     0,3    OFFSET+4=TOTLEN\n         BNH    PROCPARM    PARM DATA STARTS AT 4\n         AH     15,OFFSET   PARM STARTS AFTER PGMNAME\n         ST     15,DATAADDR\n         LH     0,TOTLEN\n         SH     0,OFFSET - OFFSET\n         SH     0,=H'4'  - 4 BYTE LLBB\n         STH    0,DATALEN\n         B      PROCPARM\nPROCPARM DS     0H\n         L      1,DATAADDR\n         LH     2,DATALEN\n         BCTR   2,0\n         EX     2,MOVEPROG     MOVE PARM\n         L      TABREG,=A(CONVTAB)  CONVERT LOWER CASE TO UPPER CASE\n         TR  WORKPROG,0(TABREG)\n**END PARM PROCESSING FROM UCB ASM\nMOVEPROG   MVC   WORKPROG(0),0(1)\nGOTIT    DS     0H\n         L      LINKREG,=A(ALLOCOUT)\n         BALR   RET,LINKREG\n         OPEN (OUTFILE,(OUTPUT))\n         XR    5,5                 CLEAR REG 5                          COP00490\n         L     15,=A(TRTAB)        TRANSLATE 00 TO BLANK\n         TR   WORKPROG,0(15)        AND LOWER TO UPPER CASE\n*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA\n          L   LINKREG,=A(CHKSLIB)\n         BALR  RET,LINKREG\n          TM   WORKSW,LOADSTEP\n          BO   DOSTEP       IS IN STEPLIB/JOBLIB\n           B   TESTSVC\nTESTSVC   DS   0H\n          TM   WORKSW,LOADSVC\n          BNO  TESTLINK       CHECK LINKLIST\n          MVC WORKDSN,SVCDSN\n          MVC WORKDDN,=CL8'SVCLIB'\n          MVC  RETADDR,=A(TESTLINK)\n          B    PUTOUT\nDOSTEP   DS   0H\n          XC   RETADDR,RETADDR\n          XC   WORKDSN,WORKDSN\n          MVC   WORKDDN,=CL8'STEPLIB'\n          L    LINKREG,=A(RDJFCB)\n         BALR  RET,LINKREG\n           CLI  WORKDSN,X'00'\n           BE   TESTSVC\n           MVC  RETADDR,=A(TESTSVC)\n          B     PUTOUT    IF NOT STEPLIB SEARCH LINKLIST\nTESTLINK  DS   0H\n            TM  WORKSW,LOADLINK\n           BO   DOLINK\n           B   TESTLPA\nDOLINK   DS    0H\n           XC   WORKDDN,WORKDDN\n           XC   WORKDSN,WORKDSN\n          L    LINKREG,=A(SRCHLINK)\n         BALR  RET,LINKREG\n          MVC   WORKDDN,=CL8'LINKLIB'\n           MVC  RETADDR,=A(TESTLPA)\n           B    PUTOUT\nTESTLPA    DS   0H   CHECK IF MODULE IN LPA\n            B    DOLPA\nDOLPA      DS   0H\n           XC   WORKADDR,WORKADDR\n           MVC  WORKDDN,=CL8'LPALIB'\n           L    LINKREG,=A(SRCHLPA)\n           BALR RET,LINKREG\n           TM  WORKSW,LOADLPA\n*           BNO TESTDDNS\n           BNO  TESTVTAM\n           MVC RETADDR,=A(NAMELPA)\n*          MVC RETADDR,=A(TESTVTAM)\n*          MVC RETADDR,=A(TESTDDNS)\n          MVI  WORKDSN,X'00'\n           B   PUTOUT\nNAMELPA   DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHPLIB)  SEARCH PARMLIB FOR LPA NAMES\n          BALR RET,LINKREG\n          TM  WORKSW2,LOADLPAN\n           BNO TESTVTAM       TEST VTAMLIST AND VTAMLIB\n          MVC RETADDR,=A(TESTVTAM)\n          B   PUTOUT\nTESTVTAM DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHNET) VTAM DSNS FROM SYS1.PROCLIB(NET)\n          BALR RET,LINKREG\n           B    DOVTAM\nDOVTAM     DS   0H\n          MVC  WORKDDN,=CL8'VTAMLST'\n          MVC RETADDR,=A(DOVLIB)\n          TM  WORKSW2,LOADVLST\n          BO  PUTOUT\n          B   DOVLIB\nDOVLIB    DS   0H\n          MVC  WORKDDN,=CL8'VTAMLIB'\n          MVC RETADDR,=A(TESTDDNS)\n          MVC WORKDSN,VTAMDSN\n          TM   WORKSW2,LOADVLIB\n          BO  PUTOUT\n***       B   TESTDDNS\n          B   TESTPROC\nTESTPROC  DS   0H\n          XC   WORKDSN,WORKDSN\n          XC   WORKDDN,WORKDDN\n          L    LINKREG,=A(SRCHJES2) PROCLIB DSNS FROM JES2 PROC\n          BALR RET,LINKREG\n          MVC  WORKDDN,=CL8'SYSPROC'\n          MVC RETADDR,=A(TESTDDNS)\n          TM  WORKSW2,LOADPROC\n          BO  PUTOUT\n          B   TESTDDNS\nTESTDDNS  DS   0H\n***GET DDN OF ALL PDS'S ALLOCATED TO REGION\n          L   LINKREG,=A(LOCDEBS) SEARCH DEB QUEUES\n         BALR  RET,LINKREG\n           L   1,=A(DDNTAB)\nTESTDDNT  DS   0H\n         CLI  0(1),X'FF'\n         BE    WHERLOAD\n          ST   1,CURDDN\n           B   DODDNST\nNEXTDDNT   DS   0H\n           L   1,CURDDN\n           LA   1,TABL(1)\n           B    TESTDDNT\nDODDNST   DS    0H\n****LOCATE DCB FOR EACH DDN IS TABLE AND ISSUE BLDL FOR MODULE\n          L   LINKREG,=A(SRCHSDEB) SEARCH DEB QUEUES\n         BALR  RET,LINKREG\n          TM   TSOSW,TSOFILE\n          BO   DOTSODD      PROGRAM FOUND\n          B    NEXTDDNT\n          CLI  FOUNDSW,X'FF'\n          BE  RETURN\n          L   LINKREG,=A(FINDDCB)\n         BALR  RET,LINKREG\n          TM   TSOSW,TSOFILE\n          BNO  WHERLOAD     PROGRAM NOT DDN\n           B   DOTSODD\nDOTSODD   DS    0H\n****READ JFCBS FOR DDN     AND EXTRACT DSN IN CONCATENATION****\n          L   LINKREG,=A(RDJFCB)\n         BALR  RET,LINKREG\n          CLI   WORKDSN,X'00'\n          BE    WHERLOAD\n          MVC   RETADDR,=A(NEXTDDNT)\n          B     PUTOUT\nNOPROG   DS   0H\n          L   LINKREG,=A(FINDDCB)\n         BALR  RET,LINKREG\n         MVC   RETADDR,=A(RETURN)\n          TM   TSOSW,TSOFILE\n          BO   PUTOUT\n          XC   OUTCON,OUTCON\n          MVC  ERRPROG,WORKPROG\n          MVC  OUTCON(ERRMESSL),ERRMESS\n           XC  RETADDR,RETADDR\n           B   DOSEND\nWHERLOAD  DS   0H\n           CLI FOUNDSW,X'FF'\n            BNE NOPROG\n            B   RETURN\nPUTOUT   DS   0H\n           MVI  FOUNDSW,X'FF'\n          MVC   MODCON,=CL6'LOAD  '\n          TM    TSOSW,SRCMOD\n          BNO   *+10\n          MVC   MODCON,=CL6'SOURCE'\n          MVC   PROGCON,WORKPROG\n          MVC  DDNCON,WORKDDN\n          CLI  WORKDSN,X'00'\n          BE   *+14\n          MVC  DSNCON,WORKDSN\n           B   DOSEND\n          MVC  DSNCONAT(ATCONL),BLANKS\n          MVC  DSNCON(3),=CL3'AT '\n          MVC  DSNCON+4(L'WORKCDDR),WORKCDDR\n          CLI  WORKALIS,X'00'\n           BE  DOSEND\n           MVC DSNCONAL,=C' (ALIAS OF '\n           MVC DSNALIS,WORKALIS\n           MVI  DSNCONAP,C')'\n           B   DOSEND\nDOSEND   DS    0H\n          MVI  FOUNDSW,X'FF'\n           PUT  OUTFILE,OUTCON\n          OC  RETADDR,RETADDR\n          BZ   RETURN\n           L   1,RETADDR\n          BR   1\nRETURN   DS   0H\n          CLOSE OUTFILE\nENDIT    DS   0H\n          L    13,SAVEMAC+8\n          LM   14,12,12(13)\n          BR    14\nSAVEPRMB  DS   CL8\nAPRMDATA  DS   F\nDATAADDR  DS   F\nDATALEN   DS   H\nTOTLEN   DS   H\nOFFSET   DS   H\nERRMESS  DS    0C\n          DC  CL4' '\nERRPROG  DS   CL8\n         DC C' NOT FOUND        '\nERRMESSL EQU  *-ERRMESS\nBLANKS   DC  80C' '\nWORKDSN  DS  CL44\nVTAMDSN  DS  CL44\nSVCDSN   DC  CL(L'WORKDSN)'SYS1.SVCLIB'\nWORKPROG  DS  CL8\nWORKDDN   DS  CL8\nWORKPARM  DS   CL16\n*NAPPARM  DS   CL40\nCONLPA  DC  C' NOT LOADED FROM LPA'\nTSOSW   DS   X\nTSOFILE   EQU  X'01'\nSRCMOD    EQU  X'80'\nWORKSW    DS   X\nNOLPA     EQU  X'01'\nNOPPT     EQU  X'02'\nFOUND     EQU  X'04'\nLOADSVC   EQU  X'08'\nLOADLPA   EQU  X'10'\nLOADSTEP  EQU  X'20'\nLOADLINK  EQU  X'40'\nLOADRPL   EQU  X'80'\nWORKSW2   DS    X\nLOADVLST  EQU  X'01'\nLOADVLIB  EQU  X'02'\nLOADPROC  EQU  X'04'\nLOADLPAN  EQU  X'10'\n*****************\nWORKSW3  DS  X\nREADSPRM EQU  X'01'\nREADZPRM EQU  X'02'\nDIDLCONS EQU  X'04'\nDIDSNAME EQU  X'08'\n*****************\nFOUNDSW   DS   X\nCURNUM    DS  H\nCURPLST   DS  F\nTCBADDR   DS   F\nTIOTADDR  DS   F\nDEBADDR   DS   F\nDCBADDR   DS   F\nRETADDR    DS   F\nWORKADDR   DS   F\nBEGTIOT    DS   F\nCURDDN     DS   F\nWORKCDDR   DS   CL8\nWORKALIS   DS   CL8\nSAVEMAC    DS   18F\nSAVELINK   DS   18F\nSAVER1    DS   F\nENDDEBQ   DS   F\nDEBQADDR  DS   F\nFINOUT   DS   0C\n         DC  C' MODULE LOADED FROM '\nFINLIB    DS  CL8\nFINL     EQU  *-FINOUT\nBLDLLIST  DS   0H\nBLDLNUM   DS   H   NUMBER OF ENTRIES\nBLDLLEN  DS   H   LEN OF EACH ENTRY\nBLDENTRY  EQU  *\nBLDLNAME  DS  CL8\nBLDLTTR   DS  XL3\nBLDLCCAT  DS  X   CONCAT NUMBER RETURNED BY BLDL\nBLDLZ     DS  X   WHERE ENTRY FOUND\n          DS   X\nBLDLFILL   EQU  *-BLDLTTR\nBLDLELEN  EQU  *-BLDENTRY  LEN OF EACH ENTRY\nSAVECAT   DS    X\nOUTFILE  DCB  DDNAME=CERMFILE,MACRF=PM,DSORG=PS,RECFM=FA,              X\n               LRECL=80,BLKSIZE=80\nOUTCON   DC   CL80' '\n          ORG  OUTCON\n         DC  CL1' '\nMODCON   DC  CL6' '\n         DC  C' MODULE '\nPROGCON  DS  CL8\n         DC C' IS IN DDN '\nDDNCON   DS  CL8\n         DC   C' '\nDSNCON   DS  CL42\n         ORG DSNCON\nDSNCONAT  DS  CL4\nDSNCDDR   DS  CL8\nDSNCONAL  DS  CL11\nDSNALIS   DS  CL8\nDSNCONAP  DS  C\n          ORG\nOUTCONL   EQU  *-OUTCON\nATCONL    EQU  *-DSNCONAT\nWARLAREA  DS  CL(ARLENGTH)\nWXJFCB   DS    0F                                                       JFC00600\n         DC   X'13'           FOR LAST ENTRY                            JFC00610\nWXADD    DC   AL3(WARLAREA)                                             JFC00620\nWDCB     DS CL(DCBLEN)                                                       JFC\nWDJLIST  RDJFCB  (2),MF=L\n         ORG   *-3\nWDJDCBA  EQU  *   ADDR OF DCB\n         DS   AL3   PUT DCB ADDR HERE\n         ORG\n*NAP DCB  DDNAME=SNAP,DSORG=PS,MACRF=W,LRECL=125,RECFM=VBA,BLKSIZE=882\nSBS     DS   0F\nSB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nSBLN     DC    AL1(SBEL)  LEN OF RB\nSBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nSBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nSBFLAG2  DS    X       2ND   FLAG BYTE\nSBERROR  DS    XL2     ERROR REASON CODE\nSBINFO   DS    XL2     INFO  REASON CODE\nSBTXTPP  DC    A(SXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nSBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nSBEL     EQU   *-SBS\n* TEXT POINTERS  FOR ALLOCATION\nSXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nSDNPOINT DC   A(SDNTEXT)    DDN TU\nSSNPOINT DC   A(SSNTEXT)    DSN TU\nSSMPOINT DC   A(SSMTEXT)    MEMBER TU\nSSPPOINT DC   A(SSPTEXT)    DISP TU\n         ORG  SSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nSXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nSDNTEXT  DS    0F   DDN TEXT UNIT\nSDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nSDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSDNTXENT DS    0C\nSDNPLEN  DC    AL2(L'SDNTXPRM)  LENGTH OF PARM\nSDNTXPRM DC    CL8'PARMLIB'  DDNAME\n**DSN  TEXT UNIT\nSSNTEXT  DS    0F   DSN TEXT UNIT\nSSNTXKEY DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nSSNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSNTXENT DS    0C\nSSNPLEN  DC    AL2(L'SSNTXPRM)   LENGTH OF PARM\nSSNTXPRM DC    CL44'SYS1.PARMLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nSSMTEXT  DS    0F   DSN TEXT UNIT\nSSMTXKEY DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\nSSMTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSMTXENT DS    0C\nSSMPLEN  DC    AL2(L'SSMTXPRM)   LENGTH OF PARM\nSSMTXPRM DC    CL8'LPALST00'     MEMBERNAME\n**DISP TEXT UNIT\nSSPTEXT  DS    0F   DSP TEXT UNIT\nSSPTXKEY DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\nSSPTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSSPTXENT DS    0C\nSSPPLEN  DC    AL2(L'SSPTXPRM)  LENGTH OF PARM\nSSPTXPRM DC    X'08'  DISP=SHR\nSXLEN    EQU   *-SXUNITS\n***END FOR DEALLOCATION\n******************\n******************\nLPADSNSA   DS  F\nLPADSNTL  EQU 45  LENGTH OF EACH ENTRY\nLPADSNAL    EQU LPADSNTL*40       40 ENTRIES 45 BYTES LONG\nLPADSN    DS  CL44\nMVSSAVE   DS  18F\nRTNSAVE   DS  18F\nLASTLPA   DS  F\nLASTCONA  DS  F\nNEXTCONA  DS  F\nCURVLST   DS  F\n***********************************\nNUMVLIBS DS   H\nNUMVLIBN EQU  25\nVTAMLIBS DS  (NUMVLIBN)CL50 UP TO 10  DSNAMES\n          ORG  VTAMLIBS       SET UP DYNALLOC DSN TU\nVLEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nVLUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nVLLEN    DC    AL2(44)   LENGTH OF PARM\nVLARM    DC    CL44'SYS1.VTAMLST'   DSNAME\n         ORG\n        ORG  NUMVLIBS\nNUMVLSTS DS   H\nNUMVLSTN   EQU 25\n         DS  0F\nVTAMLSTS DS  (NUMVLSTN)CL50 UP TO 8   DSNAMES\n          ORG  VTAMLSTS       SET UP DYNALLOC DSN TU\nVKEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nVNUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nVPLEN    DC    AL2(44)   LENGTH OF PARM\nVOFF     EQU   *-VKEY     OFFSET TO DSNAME\nVPARM    DC    CL44'SYS1.VTAMLIB'   DSNAME\n          ORG\n          ORG  NUMVLIBS\nNUMLPAS  DS   H\nNUMLPAN  EQU  25\nLPALIBS DS  (NUMLPAN)CL50 UP TO 25  DSNAMES  PER LPALST ENTRY\n          ORG  LPALIBS       SET UP DYNALLOC DSN TU\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nLPAOFF   EQU  *-LPALIBS    OFFSET TO DSNAME\nLLARM    DC    CL44'SYS1.LPALIB'   DSNAME\n          ORG\nLPAHLEN   EQU  *-LPALIBS\n          ORG  NUMVLIBS\nNUMPLIBS DS   H\nNUMPLIBN EQU  25\nPROCLIBS DS  (NUMPLIBN)CL50 UP TO 28  DSNAMES\n          ORG  PROCLIBS       SET UP DYNALLOC DSN TU\nPLEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nPLUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nPLLEN    DC    AL2(44)   LENGTH OF PARM\nPOFF     EQU  *-PROCLIBS   OFFSET TO DSNAME\nPLARM    DC    CL44'SYS1.PROCLIB'   DSNAME\n          ORG\n          LTORG\n           EJECT\nRDJFCB  DS   0H\n        PRINT ON,GEN\n        USING *,LINKREG\n        STM  14,12,SAVELINK+12\n         XC   WORKDSN,WORKDSN\n          MVC  WARLAREA(ARLENGTH),CRL       MOVE TO DYNAMIC STORAGE\n          LA   ARLREG,WARLAREA\n          STCM  ARLREG,7,WXADD  STORE ADDR OF JFCBAREA IN EXLIST\n          USING ARL,ARLREG\n          MVC   ARLRETRV,=H'1'  ONLY WANT INFO FOR 1 DATASET\n          SR    0,0\n          IC    0,BLDLCCAT   RELATIVE CONCAT NUMBER\n          AH    0,=H'1'    ACTUAL CONCAT NUMBER\n          STH   0,ARLFIRST    DS   WITH THIS CONCAT NUMBER\n           DROP  ARLREG\n          MVI  WXJFCB,X'13'   CODE FOR CONCATENATION EXIT\n           MVC  WDCB,OPEJFCB  MOVE DCB\n           LA   1,WDCB\n          USING IHADCB,1\n           MVC  DCBDDNAM,WORKDDN\n          LA  2,WXJFCB   RESET EXLST ADDR IN DCB\n          ST   2,DCBEXLST\n          DROP   1\n          MVC  WDJLIST,RDJLIST   MOVE RDJFCB LIST TO WORK AREA\n          LA   2,WDCB\n          STCM 2,7,WDJDCBA    STORE DCB ADDR IN RDJFCB LIST\n          LA   1,WDJLIST\n       RDJFCB   0(2),MF=(E,(1))                                          JFC0042\n          LTR  15,15\n          BNZ   ENDJFCB\n         B   PROCJFCB\nPROCJFCB DS   0H  FIND JFCB FOR CONCAT NUMBER FROM BLDL\n          LA   ARLREG,WARLAREA\n          USING ARL,ARLREG\n           L    1,ARLAREA  RESPONSE FROM RDJFCB\n           USING ARAD,1\n           LA   JFCBREG,ARAJFCB\n           DROP   1\n           USING JFCB,JFCBREG\n           MVC  WORKDSN,JFCBDSNM    SAVE DSNAME\n           B    FREEJFCB\nFREEJFCB DS   0H   FREE ARA\n****ISSUE FREEMAIN FOR STORAGE AREAS*****\n       SR  2,2\n       IC  2,ARLPOOL SUBPOOL\n       L   3,ARLAREA  ADDR OF ARA\n        SR   0,0\n       ICM  0,7,ARLRLEN\n        DROP  ARLREG\n    FREEMAIN RU,LV=(0),SP=(2),A=(3)\n        B  ENDJFCB\nGETOUT  DS   0H\nENDJFCB DS   0H\n         LM   14,12,SAVELINK+12\n         BR    RET\n***ALLOCATION RETRIEVAL LIST\nCRL  IHAARL  DSECT=NO,PREFIX=CRL,DESCR=NO\nEXJFCB   DS    0F                                                        JFC0060\n          DC   X'13'           FOR LAST ENTRY                            JFC0061\nEXADD    DS   AL3(CRL)                                                   JFC0062\nOPEJFCB   DCB   DDNAME=ISPPROF,EXLST=EXJFCB,MACRF=(E)                          J\nRDJLIST    RDJFCB   (2),MF=L\n          DROP  LINKREG\n          LTORG\n          EJECT\nFINDDCB  DS   0H\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n         NI   TSOSW,255-TSOFILE\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n         LR  TCBREG,1\n*        SH  1,=AL2(TCBPXLEN)   TCB PREFIX INCLUDED IN DSECT\n         B    NEXTTCB2\n*        USING TCBFIX,TCBREG\n         USING TCB,TCBREG\nNEXTTCB  DS   0H\n         L    TCBREG,TCBBACK  PREV TCB\n*        SH  TCBREG,=AL2(TCBPXLEN)   TCB PREFIX INCLUDED IN DSECT\nNEXTTCB2 DS    0H\n         LTR  TCBREG,TCBREG\n         BZ    ENDFDCB\n         CLC   TCBTCBID(3),=CL3'TCB'\n         BNE   ENDFDCB\n         ST   TCBREG,TCBADDR\n**CHECK IF DFHSIP TCB\n         L    JSCBREG,TCBJSCB\n*        USING IEZJSCB,JSCBREG\n*        CLC  JSCBPGMN,=CL8'DFHSIP'\n*        DROP  JSCBREG\n         L    TIOTREG,TCBTIO   TIOT\n         ST   TIOTREG,TIOTADDR\n         ST   TIOTREG,BEGTIOT\n         L    DEBREG,TCBDEB    DEB QUEUE\n         LTR  DEBREG,DEBREG\n          BZ   NEXTTCB\n         ST   DEBREG,DEBADDR\n         DROP  TCBREG\n         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY\n         USING  XIOT,TIOTREG\n         SR    0,0\n         B    FINDTIOT\nFINDTIOT  DS   0H\n         CLI   XIOELNGH,X'00'\n         BE    NEXTTCB\n         CLC   XIOEDDNM,WORKDDN\n         BE   GOTPROF\n         IC  0,XIOELNGH   LEN OF ENTRY\n         AR   TIOTREG,0    NEXT ENTRY\n         B    FINDTIOT\n***LOCATE DDN     IN TIOT\nGOTPROF   DS    0H\n         ST   TIOTREG,TIOTADDR\n****LOCATE DEB FOR DN     ****\n****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING TIOTADDR\n         L    DEBREG,DEBADDR\n         USING DEBBASIC,DEBREG\n         B     FINDDEB\nNEXTDEB   DS    0H\n          CLC   DEBDEBAD+1(3),=XL3'000000'\n          BE   NEXTTCB\n          L    DEBREG,DEBDEBAD     NEXT DEB\nFINDDEB   DS    0H\n       CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?\n         BNE   NEXTTCB\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   NEXTDEB          NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?\n          BO   *+18            YES...\n          CLC  WORKDDN,DCBDDNAM   SAME DD NAME\n          BE   GOTDCB\n           B    NEXTDEB\n         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB\n          L    1,BEGTIOT   BEG OF TIOT\n         AR    1,0         TIOT ADDR FOR THIS ENTRY\n          C    1,TIOTADDR  SAME AS FOR DDN\n          BE   GOTDCB     YES\n          B    NEXTDEB\nGOTDCB    DS    0H\n          ST  DCBREG,DCBADDR          DCB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  NEXTDEB\n           OI  TSOSW,TSOFILE\n          TM  DCBRECFM,DCBRECU  UNDEFINED RECFM\n          BO   ENDFDCB LOAD MODULE\n*         TM  DCBRECFM,DCBRECF  FIXED BLOCK FILE\n*         BNO  ENDFDCB          ASSUME SOURCE MODULE\n           OI  TSOSW,SRCMOD\n          B   ENDFDCB\nENDFDCB  DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n         DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n          EJECT\nSRCHSDEB  DS   0H\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n         NI  TSOSW,255-TSOFILE\n          L   15,CURDDN\n         USING TABSECT,15\n         L    DEBREG,DDNDEB\n         USING DEBBASIC,DEBREG\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   ENDSJSCB         NO..RETURN\n         MVC   WORKDDN,DDNDSNAM\n          ST  DCBREG,DCBADDR          DCB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  ENDSJSCB\n           OI  TSOSW,TSOFILE\n          NI  TSOSW,255-SRCMOD\n          TM  DCBRECFM,DCBRECU  UNDEFINED RECFM\n          BO   ENDSJSCB         ASSUME LOAD   MODULE\n*         TM  DCBRECFM,DCBRECF  FIXED BLOCK FILE\n*         BNO  ENDSJSCB         ASSUME SOURCE MODULE\n           OI  TSOSW,SRCMOD\n          B   ENDSJSCB\nENDSJSCB DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n         DROP  LINKREG,15,DEBREG,DCBREG\n          EJECT\nLOCDEBS   DS   0H     GET LIST OF DDNS\n         USING *,LINKREG\n         STM  14,12,SAVELINK+12\n          L  1,=A(DDNTAB)\n         ST   1,LASTTAB\n          MVI  0(1),X'FF'\n          MVI  TEMPSW,X'00'\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n         LR  TCBREG,1\n         USING TCB,TCBREG\n         USING DEBBASIC,DEBREG\n         L    TIOTREG,TCBTIO  TIOT\n         ST   TIOTREG,TIOTADDR\n         ST   TIOTREG,BEGTIOT\n         LA   TIOTREG,TIOTOFF(TIOTREG)\n         L    JSCBREG,TCBJSCB\n         USING IEZJSCB,JSCBREG\n*        L    1,JSCBDBTB   DEB\n         L    1,TCBDEB     DEB\n         DROP  JSCBREG,TCBREG\n*        LH   0,2(1)  LEGTH OF DEBQ\n*        AR   0,1    END OF DEBQ\n         LR   DEBREG,1\n         ICM  DEBREG,8,=X'00'\n*        ST   0,ENDDEBQ\n*        LA   1,4(1)       ADDR OF 1ST DEB IN Q\n*        ST   1,DEBQADDR\n*         L    DEBREG,0(1)\n         LTR  DEBREG,DEBREG\n          BZ   ENDLDEB\n*          CLM  DEBREG,1,=X'FF'        INVALID ADDR\n*         BE   NEWDEBQA\n         ST   DEBREG,DEBADDR\n         B    LOCDCB\nNEWDEBQ   DS    0H\n*          CLM  DEBREG,1,=X'FF'        INVALID ADDR\n*         BE   NEWDEBQA\n*         CLM   DEBREG,7,=XL3'000000'\n*         BE   NEWDEBQA\nNEWDEBAD  DS   0H\n          L    DEBREG,DEBDEBAD   NEXT DEB\n          CLM  DEBREG,7,=XL3'000000'  ANY DEB\n          BE   ENDLDEB\n           CLM  DEBREG,1,=X'FF'        INVALID ADDR\n          BE   NEWDEBQA\n         ST    DEBREG,DEBADDR\n         B    LOCDCB\nNEWDEBQA  DS    0H\n          B    NEWDEBAD\n*         L    1,DEBQADDR\n*         LA   1,4(1)  NEXT DEB IN Q\n*         C    1,ENDDEBQ       LAST DEB IN Q\n*          BNL  CHKSPROC\n*          ST   1,DEBQADDR\n*         L    DEBREG,0(1)\n*          LTR  DEBREG,DEBREG\n*          BZ   ENDLDEB\n*          CLM  DEBREG,1,=X'FF'        INVALID ADDR\n*         BE   NEWDEBQA\n*        ST   DEBREG,DEBADDR\n*        B     LOCDCB\nLOCDCB    DS    0H\n         L     DCBREG,DEBDCBAD    ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?\n         BNO   NEWDEBQ          NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?\n          BO   SETTIOT         YES...\n          MVC  WORKDDN,DCBDDNAM   SAVE DD NAME\n          B    SETTAB\nSETTIOT   DS   0H\n         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB\n          L    1,BEGTIOT   BEG OF TIOT\n         AR    1,0         TIOT ADDR FOR THIS ENTRY\n           LR   TIOTREG,1\n          USING XIOT,TIOTREG\n          MVC  WORKDDN,XIOEDDNM        DDN\n          B    SETTAB     YES\nSETTAB    DS   0H   STORE DDN IN LIST\n          USING TABSECT,1\n          L   1,LASTTAB\n           MVC  DDNDSNAM,WORKDDN\n          ST   DEBREG,DDNDEB\n          ST   TIOTREG,DDNTIOT\n          DROP  1\n          LA  1,TABL(1)\n          ST   1,LASTTAB\n           MVI 0(1),X'FF'\n           CLI  TEMPSW,X'00'\n           BNE  ENDLDEB\n           B   NEWDEBQ\nCHKSPROC  DS   0H   CHECK IF DEB FOR SYSPROC FOUND\n          L   1,=A(DDNTAB)\n          USING TABSECT,1\nCOMPPROC   DS   0H\n            CLI  0(1),X'FF'\n            BE  GETSPROC\n           CLC  DDNDSNAM,=CL8'SYSPROC'\n           BE   ENDLDEB\n          LA   1,TABL(1)\n          B   COMPPROC\n          DROP  1\nGETSPROC  DS  0H ASSUME SYSPROC ALLOCATED\n           OPEN  (SYSPROC,INPUT)\n          LTR  15,15\n           BNZ  ENDLDEB\n          LA  DCBREG,SYSPROC\n          L   DEBREG,DCBDEBAD\n          MVI  TEMPSW,X'FF'\n          MVC  WORKDDN,=CL8'SYSPROC'\n           B   SETTIOT\nENDLDEB  DS   0H\n          LA   1,SYSPROC\n          TM   DCBOFLGS-IHADCB(1),DCBOFOPN    SYSPROC OPENED?\n          BNO  ENDLDEBC\n          CLOSE SYSPROC\nENDLDEBC  DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\nLASTTAB   DS   F\nSYSPROC DCB  DDNAME=SYSPROC,DSORG=PO,MACRF=(R)\nTEMPSW   DS   X\n          LTORG\n         DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n          EJECT\nCHKSLIB   DS   0H   CHECK IF MODULE IN JOBLIB OR STEPLIB\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n           B  GOSTEP\nGOSTEP    DS   0H\n          LA    13,SAVEMAC\n         L   1,16   CVT\n         L   1,0(1)  ADDR OF TCB POINTER\n         L   1,4(1)   ADDR TCB\n          ST  1,TCBADDR\n           USING TCB,1\n            L   DCBREG,TCBJLB\n            DROP  1\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKSVC\n           MVC  SAVECAT,BLDLCCAT\n           CLI SAVECAT,X'02'\n           BNE CHKSVC\n           OI  WORKSW,LOADSTEP\n          B   CHKSVC\nCHKSVC    DS   0H\n          L   CVTREG,16\n           USING CVT,CVTREG\n           L   DCBREG,CVTSVDCB  DCB FOR SYS1.SVCLIB\n           DROP  CVTREG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  CHKLINK\n           OI  WORKSW,LOADSVC\n          B   CHKLINK\nCHKLINK   DS   0H\n          L    CVTREG,16\n          USING CVT,CVTREG\n***ISSUE BLDL ON LINKLIST\n          MVC SAVELINK,CVTLLTA LINK LIST\n          L    DCBREG,CVTLINK  ADDR LINKLIST DCB\n           DROP CVTREG\n          XC   BLDLTTR,BLDLTTR\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n          LTR  15,15\n          BNZ  ENDSLIB\n          OI  WORKSW,LOADLINK\n           B  ENDSLIB\nENDSLIB  DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\nSRCHLINK  DS   0H   SEARCH LINK LIST FOR DSNAME\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          L    CVTREG,16\n          USING CVT,CVTREG\n          L   LLTREG,CVTLLTA   LINK LIST\n          LA   LLTREG,LLTOFF(LLTREG) FIRST ENTRY\n          USING LLTE,LLTREG\n          SR   1,1\n          IC  1,BLDLCCAT  CONCATENTATION NUMBER\n          LTR  1,1\n           BZ   GOTLLT\nNEXTLLT   DS   0H\n          LA   LLTREG,LLTLEN(LLTREG)  NEXT ENTRY\n          BCT  1,NEXTLLT     LOOP CONCAT NUMBER OF TIMES\n          B   GOTLLT\nGOTLLT    DS   0H\n          MVC WORKDSN,LLTDSN\n          B   ENDSLINK\nENDSLINK DS   0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n          LTORG\n          DROP  LINKREG\n          EJECT\n****\nSRCHLPA DS   0H   SERCH FOR MODULE IN LPA\n       PRINT ON,GEN\n       USING *,LINKREG\n       STM  14,12,SAVELINK+12\n         XC   WORKALIS,WORKALIS\n         L   CVTREG,16\n         USING CVT,CVTREG\n         L    LPDEREG,CVTLPDIA  LPA DIRECTORY\n         DROP  CVTREG\n         USING  LPDE,LPDEREG\nTSTLPA   DS     0H\n         TM     LPDEATTB,LPDELPDE  LPDE IDENTIFIER\n         BNO    ENDSLPA\n         CLI    LPDENAME,X'00'\n          BE    ENDSLPA\n         CLC   WORKPROG,LPDENAME\n         BE    GOTLPA\n         LA    LPDEREG,LPDELEN(LPDEREG)\n          B     TSTLPA\nGOTLPA   DS    0H\n**********MOD FOR ALIAS*****************\n          TM   LPDEATT2,LPDERLC    RELOCATED ALIAS ENTRY POINT?\n          BO    LPALIAS\n          TM   LPDEATTR,LPDEMIN    MINOR LPDE?\n           BO  LPALIAS\n          MVC  WORKADDR,LPDEXTAD    LOAD ADDRESS\n           OI   WORKSW,LOADLPA\nCONVADDR  DS   0H\n           OI   WORKSW,LOADLPA\nA  CONVCODE IN=WORKADDR,OUT=WORKCDDR,LEN=L'WORKADDR\n          B    ENDSLPA\nLPALIAS   DS   0H\n          L    LPDEREG,LPDEMJP  POINT TO MAJOR LPDE\n          MVC   WORKALIS,LPDENAME\n          MVC  WORKADDR,LPDEXTAD   ADDRESS\n          DROP  LPDEREG\n          B    CONVADDR\nENDSLPA  DS    0H\n          LM  14,12,SAVELINK+12\n          BR   RET\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\n***********************************************\n****\nSRCHPLIB  DS   0H   SEARCH SYS1.PARMLIB FOR LPA  DSNAMES\n          USING *,LINKREG\n          STM   14,13,SAVELINK+8\n          LA  13,MVSSAVE\n          LA   1,PTPOINT       ALLOC PARMLIB\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALPLIB\n          OPEN (PARMLIB,(INPUT))\n           LTR 15,15\n           BNZ  DEALPLIB\n            LA  1,PARMLIB\n           USING IHADCB,1\n           MVC  BLKSIZE,DCBBLKSI   SAVE BLOCKSIZE\n           MVC  LRECL,DCBLRECL     SAVE RECORD LEN\n           DROP 1\n* EXEC CICS GETMAIN SET(15) LENGTH(BLKSIZE) INITIMG(X'00') NOSUSPEND\n            LH   0,BLKSIZE    FOR TSO\n            GETMAIN R,LV=(0)\n            LR   15,1\n            ST   15,READAREA\n            AH  15,BLKSIZE\n            ST  15,ENDBLOCK\n*****GET DIRECTORY AND LOCATE 'LOADXX' AND IEASYMXX MEMBERS\n           SETM  ON\n           LA   2,DSERVOUT\nDS1        DESERV FUNC=GET_ALL,AREAPTR=(2),DCB=PARMLIB\n            LTR  15,15\n**           BNZ  DEALPLIB\n             BNZ  ENDPARM\n             L    2,DSERVOUT\n             USING DESB,2\n             MVC  DSERVLEN,DESB_LEN   NEED FOR FREEMAIN\n             MVC  NUMMEMBS,DESB_COUNT NUMBER OF MEMBERS IN PDS\n             MVC  CURMEMBS,DESB_COUNT NUMBER OF MEMBERS IN PDS\n             LA  2,DESB_DATA   POINT TO FIRST IGWSMDE ENTRY\n             DROP 2\n             USING SMDE,2\n********LOOK FOR LOADXX AND IEASYM MEMBERS****************\nLOOKSMDE     DS   0H\n             LR  1,2\n             AH  1,SMDE_NAME_OFF  OFFSET TO LEN/MEMB NAME ENTRY\n             CLC 2(4,1),=CL4'LOAD'  LOADXX MEMBER?\n             BE  GOTLOAD            YES\n              L  1,CURMEMBS\n              BCT  1,NEXTSMDE\nNEXTSMDE     DS   0H\n              ST  1,CURMEMBS\n              A   2,SMDE_LEN   NEXT SMDE\n              B   LOOKSMDE\nGOTLOAD      DS   0H\n*READ LOAD MEMBER AND EXTRACT INFO FROM IODF, PARMLIB, SYSPARM\n*FIELDS. ASSUME THAT SECOND PARM IN IODF=&SYSNAME  (AS SPECIFIED\n*IN IEASYS MEMBER) PARMLIB HAS REAL NAME OF SYS1.PARMLIB BEING USED\n             MVC  LOADMEMB,BLANKS\n             LH 15,0(1)  LENGTH OF MEMBER NAME\n             BCTR 15,0\n             EX  15,MOVELOAD\n             L    2,DSERVOUT\n             L    3,DSERVLEN\n             FREEMAIN RC,A=(2),LV=(3)\n             B   ENDPARM\nENDPARM     DS  0H\n            SETM  OFF\nDEALPLIB   DS   0H\n          CLI  LOADMEMB,C' '\n          BNH  OUTPLIB\n***DETERMINE LPA CONCAT BY THE FOLLOWING:\n***NEED TO DETERMINE VALUE OF SYSCLONE WHICH IS DEFINED WITH\n***SUBSTITUTABLE VALUES IN IEASYM, WHICH WILL NOT BE USED HERE\n***EVEN THOUGH IT CONTAINS THE REAL VALUE OF SYSCLONE.\n** ON DOITT SYSTEMS, SYSCLONE IS DEFINED IN IEASYM AS THE\n***FIRST AND LAST CHARACTERS OF SYSNAME.\n***IT WILL BE ASSUMED THAT SYSCLONE IS EQUAL TO FIRST AND LAST CHARS\n***OF SYSNAME EVEN THOUGH IT MAY NOT ALWAYS BE ON ALL SYSTEMS.\n**1. READ LOADXX MEMBER TO GET SYSPARM VALUE, WHICH DEFINES IEASYSXX\n**2. READ IEASYS&SYSPARM TO GET LPA SUFFIXES, ONE OF WHICH MAY BE\n**   DEFINED AS &SYSCLONE. IEASYS MAY ALSO HAVE SYSNAME.\n*******ALLOCATE AND READ LOAD MEMBER\n         FIND  PARMLIB,LOADMEMB,D\n         LTR  15,15\n          BNZ  OUTPLIB\n*****LOOK FOR SYSPARM FIELD IN LOADXX MEMBER\n           L    2,READAREA\n           ST  2,LASTBLOC\nGETPLIBS   DS   0H\n          READ READECB,SF,PARMLIB,(2),'S'\n          CHECK READECB\n          CLI  READECB,X'7F'\n          BNE OUTPLIB\n          LR  1,2\nTESTPLIB  DS   0H\n          CLC  0(7,1),=CL7'SYSPARM'\n          BE  GOTSPARM\n          CLC  0(4,1),=CL4'IODF'\n          BE  GOTIODF\nNEXTPLIB  DS   0H\n          L   1,LASTBLOC\n          AH  1,LRECL    NEXT RECORD\n          C   1,ENDBLOCK\n**        BH  OUTPLIB\n          BH  IEASYS00\n          ST  1,LASTBLOC\n          B  TESTPLIB\nGOTIODF   DS   0H    SECOND PARM IS SYSNAME\n***LOADXX MEMBER IS COLUMN DEPENDENT. DATA STARTS IN COL 10.\n**COL 10-11 HAS SUFFIX OF IODF MEMBER; COL 13 HAS HILEVEL QUALIFER\n**ASSUME HI-LEVEL QUALIFIER IS SYNAME IF NOT SPECIFIED ANYWHERE ELSE\n           ST  1,RECADDR\n          MVC  SYSNAME,12(1)\n          B   NEXTPLIB\nGOTSPARM   DS   0H\n**FIRST  PARM IS SYSTEM PARM SUFFIX\n           ST  1,RECADDR\n           L  15,=A(ALPHTAB)\n          LR  14,1\n           TRT 8(40,14),0(15)      FIND FIRST  ALPHA LETTER\n          BZ   NEXTPLIB\n           MVC SYSPARM,0(1)\n**SINCE SYSCLONE IS DEFINED WITH SUBSTITUTABLES IN IEASYM MEMBER,\n**SET SYSCLONE=SYSPARM\n          MVC  SYSCLONE,SYSPARM\n***       B   SEALPLIB\nSEALPLIB   DS   0H\n          CLI SYSPARM,C' '   SYSPARM FOUND\n***       BNH OUTPLIB\n           BH  IEASYS00\n           B   NEXTPLIB\nIEASYS00   DS   0H\n           TM   WORKSW3,READSPRM   IEASYS&SYSPARM READ?\n          BNO  DOSYSP             NO..\n           TM   WORKSW3,READZPRM   IEASYS00       READ?\n          BO   OUTPLIB            YES...GET OUT\n          MVC  IEASYS+6(2),=CL2'00'\n          OI   WORKSW3,READZPRM\n          B    FINDSYSP\nDOSYSP    DS   0H\n*****READ IEASYS&SYSPARM MEMBER TO GET SYSNAME AND LPALIST PARMS\n          OI   WORKSW3,READSPRM     FLAG READING IEASYS&SYSPARM\n          MVC  IEASYS(6),=CL6'IEASYS'\n          MVC  IEASYS+6(2),SYSPARM\nFINDSYSP   DS   0H\n         FIND  PARMLIB,IEASYS,D\n         LTR  15,15\n***       BNZ  OUTPLIB\n          BNZ  IEASYS00    READ IEASYS00\n*****LOOK FOR LPA= AND SYSNAME= PARMS IN IEASYS&SYSPARM  MEMBER\n           L   2,READAREA\n           ST   2,LASTBLOC\nIETPLIBS   DS   0H\n          READ IEADECB,SF,PARMLIB,(2),'S'\n          CHECK IEADECB\n          CLI  IEADECB,X'7F'\n****      BNE OUTPLIB\n          BNE  IEASYS00    READ IEASYS00\n          LR  1,2\nTESTILIB  DS   0H\n          CLC  0(4,1),=CL7'LPA='\n          BE  GOTLPAEQ\n          CLC  0(8,1),=CL8'SYSNAME='\n          BE  GOTSNAME\nNEXTILIB  DS   0H\n          L   1,LASTBLOC\n          AH  1,LRECL    NEXT RECORD\n          C   1,ENDBLOCK\n***       BNL OUTPLIB\n          BNL IEASYS00\n          ST  1,LASTBLOC\n          B  TESTILIB\nGOTLPAEQ   DS   0H\n           TM  WORKSW3,DIDLCONS  LPA= ALREADY PROCESSED\n           BO   *+10             YES\n           MVC  LPACONST,5(1)  SAVE STRING AND PARSE LATER\n            OI   WORKSW3,DIDLCONS\n          CLI  SYSNAME,C' '  SYSNAME FOUND YET\n          BH   IEALPLIB      YES.. CLOSE PARMLIB\n          B   NEXTILIB     NEXT RECORD\nGOTSNAME   DS   0H\n           OI  WORKSW3,DIDSNAME  SYSNAME ALREADY PROCESSED\n          CLI  SYSNAME,C' '      SYSNAME ALREADY PROCESSED\n           BH   *+10             YES\n           MVC  SYSNAME,8(1)\n          CLI  LPACONST,C' '  LPA     FOUND YET\n          BH   IEALPLIB      YES.. CLOSE PARMLIB\n          B   NEXTILIB     NEXT RECORD\nIEALPLIA   DS   0H\n           MVI  ERRSW,X'00'\nIEALPLIB   DS   0H\n           CLI  ERRSW,X'00'\n           BNE  OUTPLIB\n          CLI  LPACONST,C' '   LPA PARM FOUND\n          BH   PROCLPA          YES\n          B   OUTPLIB\nLEALPLIB   DS   0H\n           B   ENDPLIB\nENDPLIB  DS   0H\n          CLI  LPACONST,C' '   LPA PARM FOUND\n          BH   PROCLPA          YES\nOUTPLIB   DS   0H\n          CLOSE PARMLIB\n          LA  1,PDPOINT    DEALLOCATE PARMLIB\n          DYNALLOC\n          SETM  OFF\n          LM  14,13,SAVELINK+8\n          BR   RET\nPROCLPA   DS   0H    READ LPALST MEMBERS\n***FIRST SET UP ENTRY IN THE OUTPUT LIST FOR SYS1.LPALIB\n          MVC  NUMLPAS,=H'1'\n         LA   3,LPALIBS\n          MVC  0(LPLCONSL,3),LPLCONS    FOR DYNALLOC\n          MVC LPAOFF(44,3),=CL44'SYS1.LPALIB'\n           LA  3,L'LPALIBS(3)\n         ST  3,LASTLPA\n********************************\nSSLPA     SCANARG ')',ADDR=LPACONST,LEN=20   END OF LIST\n          BZ   OUTPLIB\n          ST  1,LASTCONA\n          LA  2,LPACONST\n          CLI 0(2),C'&&' SUBSTITUTABLE     &\n          BE  SUBLPA\n          CLI 2(2),C','   2 CHAR VALUE\n          BNE  OUTPLIB     FORGET IT\nMSLPA      DS   0H\n          MVC LPALST(6),=CL6'LPALST'\n          MVC LPALST+6(2),0(2)\n          LA  2,3(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          B   ALLPALST\nSUBLPA    DS   0H SUBSTITUTE VARIABLES\n          BAL  14,SUBPARM\n          B  ALLPALST\nALLPALST  DS   0H\n          FIND PARMLIB,LPALST,D\n          NOP  0\n          NOPR 0\n          LTR 15,15\n          BNZ  OUTPLIB\n**         LA  3,LPALIBS\n           L   3,LASTLPA\n           L  2,READAREA\n           ST  2,LASTBLOC\nBUILDLPA   DS  0H\n******BUILD DYNALLOC LIST FROM LPALST ENTRIES*****************\n***ONLY READ ONE BLOCK FROM LPALST MEMBER TO AVOID EOF CONDITION\n           ST  3,LASTLPA\n          READ LEADECB,SF,PARMLIB,(2),'S'\n          CHECK LEADECB\n          CLI  LEADECB,X'7F'\n          BNE OUTPLIB\n          ST  2,LASTBLOC\n          LR  1,2\n          AH  1,BLKSIZE\n           ST  1,ENDBLOCK\nTESTLLIB   DS   0H\n          BAL  14,LPELIM\n           LH  0,NUMLPAS\n           AH   0,=H'1'\n           STH  0,NUMLPAS\n           CH   0,=AL2(NUMLPAN) MAX NUM?\n           BH  DALPALST      YES\n           L   3,LASTLPA\n           LA  3,L'LPALIBS(3)\n           ST  3,LASTLPA\n          L   2,LASTBLOC\n          AH  2,LRECL    NEXT RECORD\n          C   2,ENDBLOCK\n          BH  DALPALST\n          CLC  0(4,2),=4X'00'    END OF BLOCK\n          BE  DALPALST\n          ST  2,LASTBLOC\n          B  TESTLLIB\n******END BUILD DYNALLOC LIST FROM LPALST ENTRIES**************\nDALPALST   DS   0H\n           MVC CURNUM,NUMLPAS\n           LA   1,LPALIBS-L'LPALIBS\n           ST  1,CURVLST\n           B  NEXTLPST\n**********ALLOCATE LPALIBS, OPEN, BLDL\nNEXTLPST   DS   0H\n          LH   1,CURNUM\n          LTR  1,1\n          BZ  DEALVLPA\n          BCTR 1,0\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'LPALIBS(1)\n          MVC  LPADSN,LPAOFF(1)\n*******BYPASS SYS1.DBN.SDBNLPA BECAUSE OF ERROR WITH DATASET\n          CLC  LPADSN(16),=C'SYS1.DBN.SDBNLPA'\n          BE   DEALVLPA\n          ST   1,CURVLST\n          ST  1,LPSNAMEA\n          LA   1,LTPOINT       ALLOCATE LPALIB\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVLPA\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (LPALIBN,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLPA\n*****BLDL LPALIB\n          LA  DCBREG,LPALIBN\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLPA\n           OI  WORKSW2,LOADLPAN\n           MVC  WORKDDN,=CL8'LPALIB'\n           MVC  WORKDSN,LPADSN\nDEALVLPA   DS   0H\n           CLOSE  LPALIBN\n          MVC  PEALCDDN,=CL8'LPALIBN'\n          LA   1,PDPOINT       DEALLOC LPALST\n          DYNALLOC\n          MVC  PEALCDDN,=CL8'PARMLIB'  RESET\n           TM  WORKSW2,LOADLPAN\n           BO  OUTPLIB\n          OC   CURNUM,CURNUM\n           BZ   ENDVLPA1\n           B   NEXTLPST\n*************************************************************\nENDVLPA1 DS   0H\n**PROCESS ADDITIONAL LPALIBS\n          XC  NUMLPAS,NUMLPAS\n          LA  2,LPALIBS\n          ST  2,LASTLPA\n          SR 1,1\n          LA  3,LPAHLEN\n          MVCL 2,0      CLEAR OUT\n          L  2,NEXTCONA   NEXT PARM IN LPA=(XXX) FROM IEASYS\n          CLI 0(2),C','\n          BNE *+8\n          LA  2,1(2)\n          C   2,LASTCONA   END OF LIST\n          BNL OUTPLIB\n          CLI 0(2),C'&&'  SUBSTITUTABLE\n          BE  SUBLPA\n          CLI  0(2),C'L'   END OF LIST\n          BE  OUTPLIB\n          CLI  0(2),C','   2 CHAR VALUE\n          BNE  OUTPLIB\n          B  MSLPA\n***END****ALLOCATE LPALIBS, OPEN, BLDL\n**********************************\nSUBPARM    DS   0H\n**ADDR OF PARM TO BE SUBSTITUTED IN R2 'LPALSTXX'\n          STM  14,12,RTNSAVE+12\n          MVC LPALST(6),=CL6'LPALST'\n          CLC  1(8,2),=CL8'SYSCLONE'\n          BE   SP1CLONE\n          CLC  1(7,2),=CL7'SYSNAME'\n          BE   SP1NAME\n          CLC  1(7,2),=CL7'SYSPARM'\n          BE   SP1PARM\n          MVC  NEXTCONA,LASTCONA\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1CLONE   DS   0H\n          MVC LPALST+6(2),SYSCLONE\n          LA  2,10(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1NAME   DS   0H\n          MVC LPALST+6(2),SYSNAME\n          LA  2,9(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\nSP1PARM   DS   0H\n          MVC LPALST+6(2),SYSPARM\n          LA  2,9(2)     POINT TO NEXT PARM\n          ST  2,NEXTCONA    SAVE ADDR\n          LM   14,12,RTNSAVE+12\n          BR   14\n**********************************\nLPELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          L    3,LASTLPA\n          MVC LPAOFF(44,3),=44C' '\n          LA   15,0(2)\n          L    14,=A(DELIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVELPAN\n          MVC  LPADSN,VOFF(3) SAVE DSNAME\n          MVC  0(LPLCONSL,3),LPLCONS\n***SEE IF ANY SUBSTITUTABLES IN DSN\n          LA   15,LPADSN\nSCAMP     SCANARG '&&SYS',ADDR=0(15),LEN=32\n          BNZ  DOSUBAMP\n***ADJUST LEN FIELD GENERATED IN MACRO BECAUSE OF &&\n***GENERATED LEN CODE WAS 4 AND NEEDS TO BE 3.. ONLY TEST FOR &SYS\n           ORG  SCAMPARGS\n           DC  X'D503'\n           ORG\n          LM   14,12,RTNSAVE+12\n          BR   14\nDOSUBAMP   DS  0H R1 HAS ADDRESS OF &SYS; R15=LPADSN\n          MVC   WORKDSN,=44C' '\n          LR   14,1\n          SR  14,15   OFFSET TO &SYS\n          BCTR 14,0\n          EX   14,MOVEWORK\n          LA   2,WORKDSN+1\n          AR   2,14   POINT TO SUBSTITUTABLE AREA\n          MVC  LEN,=AL2(L'SYSNAME)\n          CLC 1(7,1),=CL7'SYSNAME'\n          BNE *+14\n          MVC  0(L'SYSNAME,2),SYSNAME\n          B   COSUBAMP\n          MVC  LEN,=AL2(L'SYSPARM)\n          CLC 1(7,1),=CL7'SYSPARM'\n          BNE *+14\n          MVC  0(L'SYSPARM,2),SYSPARM\n          B   COSUBAMP\n          MVC  LEN,=AL2(L'SYSCLONE)\n          CLC 1(7,1),=CL7'SYSCLON'\n          BNE *+14\n          MVC  0(L'SYSCLONE,2),SYSCLONE\n          B   COSUBAMP\n          B  OUSUBAMP\n**************************\nCOSUBAMP   DS   0H\n          AH   2,LEN    POINT PAST SUBSTITUTED AREA\n          LA   15,LPADSN\nPPAMP     SCANARG '..',ADDR=0(15),LEN=42\n          BZ   OUSUBAMP\n          LA   14,LPADSN+L'LPADSN    END OF FIELD\n          SR  14,1                   LENGTH OF LAST PART OF DSN\n           BCTR 14,0\n           AR 15,14        AREA TO MOVE  PAST .\n           BCTR 14,0      FOR LENGTH CODE\n           EX  14,MOVELAST\n          MVC  LPADSN,WORKDSN\n          L   3,LASTLPA\n          MVC LPAOFF(L'WORKDSN,3),WORKDSN\nOUSUBAMP   DS  0H\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVELOAD  MVC LOADMEMB(0),2(1)\nMOVELPAN  MVC VOFF(0,3),0(15)\nMOVEWORK  MVC WORKDSN(0),LPADSN\nMOVELAST  MVC 0(0,2),1(1)\nLPLCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nLPLCONSL EQU  *-LPLCONS\n**********************************\nPARMLIB DCB DSORG=PO,MACRF=(R),DDNAME=PARMLIB\nLPALIBN DCB DSORG=PO,MACRF=(R),DDNAME=LPALIBN\n******TO ALLOC SYS1.PARMLIB\n         DS  0F\nPTPOINT  DC   A(PBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   PTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nPBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(PBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\nALCPOINT DC    A(PXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nPBEL     EQU   *-PBS\n* TEXT POINTERS  FOR ALLOCATION\nPXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nPDNPOINT DC   A(PDNTEXT)    DDN TU\nPSNPOINT DC   A(PSNTEXT)    DSN TU\nPSPPOINT DC   A(PSSPTEXN)   DISP TU\n         ORG  PSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nPMPOINTS DS   0F     ALLOCATE WITH MEMBER NAME\n         DC   A(PDNTEXTS)   DDN TU\n         DC   A(PSNTEXT)    DSN TU\n         DC   A(PSSPTEXN)   DISP TU\nPSMPOINT DC   A(PSMTEXT)    MEMBER TU\n         ORG  PSMPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nPDNTEXTS DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)           LENGTH OF PARM\nPDNPARML DC    CL8'PARMLIBS'  DDNAME\n***************\nPDNTEXT  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)           LENGTH OF PARM\nPARMDDN  DC    CL8'PARMLIB'  DDNAME\n**DSN  TEXT UNIT\nPSNTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(44)  LENGTH OF PARM\nPSNDSN   DC    CL44'SYS1.PARMLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nPSMTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)   LENGTH OF PARM\nPSMMEMB  DC    CL8'LOAD    '     MEMBERNAME\n**DISP TEXT UNIT\nPSSPTEXN  DS    0F   DSP TEXT UNIT\n         DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\n          DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n          DC    AL2(1)  LENGTH OF PARM\n         DC    X'08'  DISP=SHR\n***FOR DEALLOCATION\nPDPOINT  DC   A(PDBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   PDPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nPDBSD    DS   0F\n          DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n          DC    AL1(NDBELD)  LEN OF RB\n          DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\n          DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n          DS    X       2ND   FLAG BYTE\n          DS    XL2     ERROR REASON CODE\n          DS    XL2     INFO  REASON CODE\n          DC    A(PDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\n* TEXT POINTERS  FOR DEALLOCATION\nPDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\n         DC   A(PNDNTEXD)  DDN TU\n         ORG PDXPOIND    FOR LAST TU\n         DC  X'80'\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nPNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(8)  LENGTH OF PARM\nPEALCDDN DC    CL8'PARMLIB'  DDNAME\n**********TO ALLOCATE LPA  DSNS\nLTPOINT  DC   A(LPS) ADR  REQ BLOCK PASSED IN R1\n         ORG   LTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nLPS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(VBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\n         DC    A(LPPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\n* TEXT POINTERS  FOR ALLOCATION  OF LPA  LIBS\nLPPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\n         DC   A(LPDNAME)    DDN TU\nLPSNAMEA DS   A             DSN TU\nLPPPOINT DC   A(PSSPTEXN)   DISP TU\n         ORG  LPPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nLPDNAME  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nLPDPARM  DC    CL8'LPALIBN'  DDNAME\nREADAREA DS   F\nRECADDR  DS   F\nENDBLOCK DS   F\nLASTBLOC DS   F\nDSERVOUT DS   F\nDSERVLEN DS   F\nNUMMEMBS DS   F\nCURMEMBS DS   F\nLEN      DS  H\nBLKSIZE  DS  H\nLRECL    DS  H\nLOADMEMB DS  CL8\nIEASYS   DS  CL8\nLPALST   DS  CL8\nSYSNAME  DS  CL4\nSYSCLONE DS  CL2\nSYSPARM  DS  CL2\nLPACONST DS  CL20\nERRSW    DS  X\n          LTORG\n          DROP  LINKREG\n          EJECT\n***************************************\n****\nALLOCOUT DS    0H\n         USING  *,LINKREG\n         STM  14,12,ALCSAVE+12\n         LA    1,RBPOINT        (R1 => A(REQ BLOCK )\n         DYNALLOC\n         LM    14,12,ALCSAVE+12\n         BR    RET\n         DS  0F\nALCSAVE  DS  18F\nDYNBLKS  EQU  *\nRBPOINT  DC   A(RBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   RBPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n          ORG\n         DS    0F\nRBS     EQU  *\nRB       DS    0CL20  S99RB DSECT  LOC BY RBPOINT\nRBLN     DC    AL1(RBEL)         LEN OF RB\nRBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nRBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nRBFLAG2  DS    X       2ND   FLAG BYTE\nRBERROR  DS    XL2     ERROR REASON CODE\nRBINFO   DS    XL2     INFO  REASON CODE\nRBTXTPP  DC    A(TXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nRBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nRBEL     EQU   *-RB\n**TEXT UNIT POINTERS\nTXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nDDNPOINT DC  A(DDNTEXT)\nSYSPOINT DC  A(SYSOTEXT)\nTERPOINT DC  A(TERMTEXT)\n         ORG  TERPOINT\n         DC    X'80'   LAST TEXT UNIT\n         ORG\nTXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nDDNTEXT  DS    0F   DDN TEXT UNIT\nDDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nDDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nDDNTXENT DS    0C\nDDNPLEN  DC    AL2(L'DDNTXPRM)  LENGTH OF PARM\nDDNTXPRM DC    CL8'CERMFILE'\nSYSOTEXT  DS   0F\nSYSOXKEY DC    AL2(DALSYSOU) KEY FOR SYSOUT ALLOC\nSYSOXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nSYSOXENT DS    0C\nSYSOLEN  DC    AL2(L'SYSOXPRM)  LENGTH OF PARM\nSYSOXPRM DC    C'A'          MUST BE 1\nTERMTEXT  DS   0F   OMITTED\nTERMXKEY DC    AL2(DALTERM) KEY FOR TERM=TS\nTERMXNUM DC    XL2'0000'   NUM LENGTH + PARM ENTRIES\nTERMXENT DS    0C\nTEPROFEN  DC    AL2(L'TERTXPRM)  LENGTH OF PARM\nTERTXPRM DS    0C       NO PARM\n         DC    CL6' '   FOR PATCHING\nTXLEN    EQU   *-TXUNITS\nDYNEL    EQU  *-DYNBLKS\nRBLEN  EQU  (S99RBEND-S99RB)\n         LTORG\n         DROP  LINKREG\n         EJECT\n****\nSRCHNET   DS   0H   SEARCH SYS1.PROCLIB(NET) FOR DSNAMES\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          LA   1,NTPOINT       ALLOC PROCLIB\n          DYNALLOC\n*****READ NET MEMBER AND GET DSNS OF VTAMLIB AND VTAMLST\n          MVI  VSW,0\n          ST   13,MVSSAVE\n          LA   13,MVSSAVE\n          OPEN (PROCLIB,(INPUT))\n          LTR  15,15\n          BNZ  ENDPROC\nNEXTPR     DS   0H\n          GET PROCLIB\n          CLC  0(9,1),=CL9'//VTAMLST'\n          BE   GOTVLST\n          CLC  0(9,1),=CL9'//VTAMLIB'\n          BE   GOTVLIB\n          B    NEXTPR\nPREVLST   DS   0H\n          TM  VSW,X'01'     VTAMLST PROCESSED?\n          BO   ENDPROC\n          CLC  0(9,1),=CL9'//VTAMLST'\n          BE   GOTVLST\n          B   NEXTPR\nGOTVLST   DS   0H\n          LR   2,1\n          LA   3,VTAMLSTS\n          OI   VSW,X'01'\n          SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\nCONTVLST   DS   0H\n          LA   3,L'VTAMLSTS(3)   NEXT ENTRY\n          LH   0,NUMVLSTS\n          AH   0,=H'1'\n          STH  0,NUMVLSTS\n          CH   0,=H'10'\n          BH   PREVLIB     MAX OF 10 DSNAMES\nGETVLST   DS   0H\n          GET  PROCLIB\n          CLI  2(1),C'*'   COMMENT?\n          BE   GETVLST\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  PREVLIB     SEE IF //VTAMLIB\n          LR   2,1\nSC1       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\n          B    CONTVLST\nPREVLIB   DS   0H\n          TM  VSW,X'02'     VTAMLIB PROCESSED?\n          BO   ENDPROC\n          CLC  0(9,1),=CL9'//VTAMLIB'\n          BE   GOTVLIB\n          B   NEXTPR\nGOTVLIB   DS   0H\n          LR   2,1\n          LA   3,VTAMLIBS\n          OI   VSW,X'02'\nSC2       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\nCONTVLIB   DS   0H\n          LA   3,L'VTAMLIBS(3)\n          LH   0,NUMVLIBS\n          AH   0,=H'1'\n          STH  0,NUMVLIBS\n          CH   0,=H'10'\n          BH   PREVLST     MAX OF 10 DSNAMES\nGETVLIB   DS    0H\n          GET  PROCLIB\n          CLI  2(1),C'*'   COMMENT?\n          BE   GETVLIB\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  PREVLST     SEE IF //VTAMLST\n          LR   2,1\nSC3       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROC\n          BAL  14,FDELIM\n          B    CONTVLIB\nENDPROC   DS   0H\n          CLOSE PROCLIB\n*****DEALLOCATE PROCLIB\n          MVC  DEALCDDN,=CL8'PROCLIB'\n          LA   1,DTPOINT       DEALLOC PROCLIB\n          DYNALLOC\n*******ALLOCATE VTAMLST LIBS\n          LA  1,VTAMLSTS\n          MVC  WORKDSN,VOFF(1)\n          ST  1,VDSNAMEA\n          MVC  VDDPARM,=CL8'VTAMLST'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVLST\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (VTAMLST,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLST\n*****BLDL VTAMLST\n          LA  DCBREG,VTAMLST\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLST\n           OI  WORKSW2,LOADVLST\nDEALVLST   DS   0H\n           CLOSE  VTAMLST\n          MVC  DEALCDDN,=CL8'VTAMLST'\n          LA   1,DTPOINT       DEALLOC VTAMLST\n          DYNALLOC\n            TM  WORKSW2,LOADVLST\n            BO ENDVLST\n            B  NEXTVLSA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nNEXTVLSA  DS    0H\n          LH   1,NUMVLSTS\n          LTR  1,1\n          BZ   ENDVLST\n          STH  1,CURNUM\n          LA   1,VTAMLSTS+L'VTAMLSTS\n          ST   1,CURVLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nADDVLST   DS   0H\n          ST   1,VDSNAMEA\n          MVC  WORKDSN,VOFF(1)\n          MVC  VDDPARM,=CL8'VTAMXXX'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVXXX\n           LA  2,DEALVXXX RETURN ADDR FOR SYNAD\n           L   3,=A(DCBABSW) ITCH FOR DCB ABEND EXIT\n           MVI 0(3),X'00'\n          OPEN (VTAMXXX,(INPUT))\n          CLI  0(3),X'00'       WAS ABEND EXIT TAKEN\n          BNE   DEALVXXX  YES\n          LTR  15,15\n          BNZ   DEALVXXX\n          LA  DCBREG,VTAMXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  DEALVXXX\n           OI  WORKSW2,LOADVLST\n            B  DEALVXXX\nDEALVXXX   DS   0H\n           CLOSE VTAMXXX\n*****DEALLOCATE VTAMXXX\n          MVC  DEALCDDN,=CL8'VTAMXXX'\n          LA   1,DTPOINT       DEALLOC VTAMXXX\n          DYNALLOC\n          TM  WORKSW2,LOADVLST\n          BO  ENDVLST\n          B  NEXTVLSB\nNEXTVLSB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLST\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'VTAMLSTS(1)\n          ST   1,CURVLST\n          B    ADDVLST\n*         MVC  CDNDNAM1,=CL8'VTAMLST'\n*         LA   1,CTPOINT       CONCATENATE TO VTAMLST\n*         DYNALLOC\n*         LTR  15,15\n*         BNZ  DEALVXXX\n*****OPEN VTAMLST\nENDVLST  DS   0H\n          B  PROCVLIB         DO VTAMLIB\nPROCVLIB  DS   0H\n*******ALLOCATE VTAMLIB LIBS\n          LA  1,VTAMLIBS\n          MVC  VTAMDSN,VOFF(1)\n          ST  1,VDSNAMEA\n          MVC  VDDPARM,=CL8'VTAMLIB'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVLIB\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n          OPEN (VTAMLIB,(INPUT))\n          LTR  15,15\n          BNZ   DEALVLIB\n*****BLDL VTAMLIB\n          LA  DCBREG,VTAMLIB\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  DEALVLIB\n           OI  WORKSW2,LOADVLIB\nDEALVLIB   DS   0H\n           CLOSE  VTAMLIB\n          MVC  DEALCDDN,=CL8'VTAMLIB'\n          LA   1,DTPOINT       DEALLOC VTAMLST\n          DYNALLOC\n            TM  WORKSW2,LOADVLIB\n            BO ENDVLIB\n            B  NEXTVLBA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nNEXTVLBA  DS    0H\n          LH   1,NUMVLIBS\n          LTR  1,1\n          BZ   ENDVLIB\n          STH  1,CURNUM\n          LA   1,VTAMLIBS+L'VTAMLIBS\n          ST   1,CURVLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nADDVLIB   DS   0H\n          ST   1,VDSNAMEA\n          MVC  VTAMDSN,VOFF(1)\n          MVC  VDDPARM,=CL8'VTAMXXX'\n          LA   1,VTPOINT       ALLOCATE VTAMLST\n          DYNALLOC\n          LTR  15,15\n          BNZ  DEALVBXX\n          LA   2,DEALVBXX   FOR SYNAD\n          L    3,=A(DCBABSW) SWITCH FOR DCB ABEND EXIT\n          MVI  0(3),X'00'\n          OPEN (VTAMXXX,(INPUT))\n          CLI  0(3),X'00'\n          BNE   DEALVBXX\n          LTR  15,15\n          BNZ   DEALVBXX\n          LA  DCBREG,VTAMXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  DEALVBXX\n           OI  WORKSW2,LOADVLIB\n            B  DEALVBXX\nDEALVBXX   DS   0H\n           CLOSE VTAMXXX\n*****DEALLOCATE VTAMXXX\n          MVC  DEALCDDN,=CL8'VTAMXXX'\n          LA   1,DTPOINT       DEALLOC VTAMXXX\n          DYNALLOC\n          TM  WORKSW2,LOADVLIB\n          BO  ENDVLIB\n          B  NEXTVLIB\nNEXTVLIB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLIB\n          STH  1,CURNUM\n          L    1,CURVLST\n          LA   1,L'VTAMLIBS(1)\n          ST   1,CURVLST\n          B    ADDVLIB\n*         MVC  CDNDNAM1,=CL8'VTAMLST'\n*         LA   1,CTPOINT       CONCATENATE TO VTAMLST\n*         DYNALLOC\n*         LTR  15,15\n*         BNZ  DEALVXXX\nENDVLIB  DS   0H\n          B  ENDNET\nENDNET   DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,MVSSAVE\n          BR   RET\nFDELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          MVC VOFF(44,3),=44C' '\n          LA   15,4(1)\n          L    14,=A(DELIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVEVTN\n          MVC  0(DALCONSL,3),DALCONS\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVEVTN   MVC VOFF(0,3),0(15)\nDALCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nDALCONSL EQU  *-DALCONS\nPROCLIB DCB DSORG=PS,MACRF=GL,DDNAME=PROCLIB,EODAD=ENDPROC\nVTAMLST DCB DSORG=PO,MACRF=(R),DDNAME=VTAMLST\nVTAMLIB DCB DSORG=PO,MACRF=(R),DDNAME=VTAMLIB\nVTAMXXX DCB DSORG=PO,MACRF=(R),DDNAME=VTAMXXX,SYNAD=SYNOPEN,EXLST=DCBLX\nDCBLX    DS   0F    DCB EXITS\n         DC  X'11'   DCB ABEND EXIT\n         DC  AL3(DCBXOPEN)   ADDRESS OF EXIT\n         DC  X'80'   END OF LIST\n         DS AL3\n******TO CONCATENATE DATASETS\n         DS  0F\nCTPOINT  DC   A(CBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   CTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nCBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(CBEL)  LEN OF RB\n         DC    AL1(S99VRBCC)     03 FOR CONCAT\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\n         DC    A(CXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nCBEL     EQU   *-CBS\n* TEXT POINTERS  FOR CONCATENATION\nCXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nCDNPOINT DC   A(CDNTEXT)    DDN TU\n         ORG  CDNPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nCDNTEXT  DS    0F   DDN TEXT UNIT\n         DC    AL2(DCCDDNAM)  KEY FOR CONCATENATION\nCDNTXNUM DC    XL2'0002'   NUM LENGTH + PARM ENTRIES\nCDNPLEN1 DC    AL2(8)           LENGTH OF PARM DDNAME\nCDNDNAM1 DC    CL8'VTAMLST'  DDNAME   TO CONCAT TO\nCDNPLEN2 DC    AL2(8)           LENGTH OF PARM DDNAME\nCDNDNAM2 DC    CL8'VTAMXXX'  DDNAME   TO CONCAT WITH\n******TO ALLOC SYS1.PROCLIB\n         DS  0F\nNTPOINT  DC   A(NBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   NTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nNBS     DS   0F\nNB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nNBLN     DC    AL1(NBEL)  LEN OF RB\nNBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nNBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nNBFLAG2  DS    X       2ND   FLAG BYTE\nNBERROR  DS    XL2     ERROR REASON CODE\nNBINFO   DS    XL2     INFO  REASON CODE\nNBTXTPP  DC    A(NXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nNBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nNBEL     EQU   *-NBS\n* TEXT POINTERS  FOR ALLOCATION\nNXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nNDNPOINT DC   A(NDNTEXT)    DDN TU\nNSNPOINT DC   A(NSNTEXT)    DSN TU\nNSMPOINT DC   A(NSMTEXT)    MEMBER TU\nNSPPOINT DC   A(NSSPTEXN)   DISP TU\n         ORG  NSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nNXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\nNDNTEXT  DS    0F   DDN TEXT UNIT\nNDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\nNDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNDNTXENT DS    0C\nNDNPLEN  DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nNDNTXPRM DC    CL8'PROCLIB'  DDNAME\n**DSN  TEXT UNIT\nNSNTEXT  DS    0F   DSN TEXT UNIT\nNSNTXKEY DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\nNSNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSNTXENT DS    0C\nNSNPLEN  DC    AL2(L'SSNTXPRM)   LENGTH OF PARM\nNSNTXPRM DC    CL44'SYS1.PROCLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nNSMTEXT  DS    0F   DSN TEXT UNIT\nNSMTXKEY DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\nNSMTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSMTXENT DS    0C\nNSMPLEN  DC    AL2(L'NSMTXPRM)   LENGTH OF PARM\nNSMTXPRM DC    CL8'NET     '     MEMBERNAME\n**DISP TEXT UNIT\nNSSPTEXN  DS    0F   DSP TEXT UNIT\nDISPTEXT  EQU   *\nNSSPTXKY DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\nNSSPTXNU  DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\nNSPTXEND DS    0C\nNSSPPLEN  DC    AL2(L'NSSPTXPR)  LENGTH OF PARM\nNSSPTXPR DC    X'08'  DISP=SHR\nNSXLEN    EQU   *-NXUNITS\n***FOR DEALLOCATION\nDTPOINT  DC   A(DBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   DTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nDBSD    DS   0F\nNBDD     DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nNDBLND    DC    AL1(NDBELD)  LEN OF RB\nNDBVERBD  DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\nNDBFLAD1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nNDBFLAD2  DS    X       2ND   FLAG BYTE\nNDBERROR  DS    XL2     ERROR REASON CODE\nNDBINFOD  DS    XL2     INFO  REASON CODE\nNDBTXTPD  DC    A(NDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nNDBAUTDL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nNDBELD     EQU   *-NBDD\n* TEXT POINTERS  FOR DEALLOCATION\nNDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\nNDDNPOID DC   A(DNDNTEXD)  DDN TU\n         ORG NDDNPOID   FOR LAST TU\n         DC  X'80'\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nDNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nDEALCDDN DC    CL8'PROCLIB'  DDNAME\n**********TO ALLOCATE VTAM DSNS\nVTPOINT  DC   A(VBS) ADR  REQ BLOCK PASSED IN R1\n         ORG   VTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nVBS     DS   0F\nVB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT\nVBLN     DC    AL1(VBEL)  LEN OF RB\nVBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\nVBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\nVBFLAG2  DS    X       2ND   FLAG BYTE\nVBERROR  DS    XL2     ERROR REASON CODE\nVBINFO   DS    XL2     INFO  REASON CODE\nVBTXTPP  DC    A(VXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\nVBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS\nVBEL     EQU   *-VBS\n* TEXT POINTERS  FOR ALLOCATION  OF VTAM LIBS\nVXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nVDNPOINT DC   A(VDDNAME)    DDN TU\nVDSNAMEA DS   A             DSN TU\nVSPPOINT DC   A(DISPTEXT)   DISP TU\n         ORG  VSPPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\n**DDN TEXT UNIT\nVDDNAME  DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM\nVDDPARM  DC    CL8'VTAMLST'  DDNAME\nVSW      DS   X\n***********************************\n          ORG\n          LTORG\n          DROP  LINKREG\n          EJECT\n****\n***************************************\nSRCHJES2  DS   0H   SEARCH SYS1.PROCLIB(JES2) FOR PROCLIB DSNS\n          USING *,LINKREG\n          STM   14,12,SAVELINK+12\n          XC    NUMPLIBS,NUMPLIBS\n          MVC   JDNTXPRM,=CL8'JESPROC'\n          MVC   JSNPOINT,=A(JSNTEXT)\n          LA   1,JTPOINT       ALLOC PROCLIB\n          DYNALLOC\n*****READ JES2 MEMBER AND GET DSNS OF PROCLIBS\n          ST   13,MVSSAVE\n          LA   13,MVSSAVE\n          OPEN (JESPROC,(INPUT))\n          LTR  15,15\n          BNZ  ENDPROCK\nJEXTPR     DS   0H\n          GET JESPROC\n          CLC  0(6,1),=CL6'//PROC'\n          BE   GOTJPROC\n          B    JEXTPR\nGOTJPROD  DS   0H\n          LA   3,L'PROCLIBS(3)\n          B    *+8\nGOTJPROC  DS   0H\n          LA   3,PROCLIBS\n          LR   2,1\nGTJ       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROCJ\n          BAL  14,JDELIM\nJONTVLST   DS   0H\n          LA   3,L'PROCLIBS(3)   NEXT ENTRY\n          LH   0,NUMPLIBS\n          AH   0,=H'1'\n          STH  0,NUMPLIBS\n          CH   0,=AL2(NUMPLIBN)\n          BH   ENDPROCJ    MAX OF 30 DSNAMES\nJETVLST   DS   0H\n          GET  JESPROC\n          CLI  2(1),C'*'   COMMENT?\n          BE   JETVLST\n          CLI  2(1),C' '   CONCATENATION?\n          BNE  JREVLIB     SEE IF //PROCNN\n          LR   2,1\nJC1       SCANARG 'DSN=',ADDR=14(2),LEN=20\n          BZ   ENDPROCJ\n          BAL  14,JDELIM\n          B    JONTVLST\nJREVLIB   DS   0H\n          CLC  0(6,1),=CL6'//PROC'\n          BE   GOTJPROD\n          B   ENDPROCJ\nENDPROCJ  DS   0H\n          CLOSE JESPROC\nENDPROCK  DS    0H\n*****DEALLOCATE PROCLIB\n          MVC  JEALCDDN,=CL8'JESPROC'\n          MVC  JDMEMBER,=CL8'JES2'\n*         NI   JDDNPOID,255-X'80'  SET OFF LAST TU ON DDN\n*         OI   JDDMPOID,X'80'  SET ON  LAST TU ON MEMBER\n          LA   1,JTPOINTD      DEALLOC PROCLIB\n*         NI   JDDMPOID,255-X'80'  SET OFF LAST TU ON MEMBER\n*         OI   JDDNPOID,X'80'  SET ON  LAST TU ON DDN\n          DYNALLOC\n*******ALLOCATE PROCLIB LIBS\n          LA  1,PROCLIBS\n          MVC  WORKDSN,POFF(1)\n          ST  1,JSNPOINT\n*         MVC  JDNTXPRM,=CL8'SYSPROC'\n          MVC  JDNTXPRM,=CL8'PROCXXX'\n          OI   JSPPOINT,X'80'  SET LAST TU - NO MEMBER NAME\n          LA   1,JTPOINT       ALLOCATE PROCLIB\n          DYNALLOC\n          MVC  JSNPOINT,=A(JSNTEXT)  RESET\n          NI   JSPPOINT,255-X'80'  RESET\n          LTR  15,15\n          BNZ  JEALVLST\n*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********\n*         OPEN (SYSPROC,(INPUT))\n          OPEN (PROCXXX,(INPUT))\n          LTR  15,15\n          BNZ   JEALVLST\n*****BLDL SYSPROC\n*         LA  DCBREG,SYSPROC\n          LA  DCBREG,PROCXXX\n          MVC BLDLNUM,=H'1'  1 ENTRY\n          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n          MVC  BLDLNAME,WORKPROG\n          LR   2,DCBREG\n          LA   0,BLDLLIST\n          BLDL  (2),(0)\n           LTR 15,15\n          BNZ  JEALVLST\n           OI  WORKSW2,LOADPROC\nJEALVLST   DS   0H\n***        CLOSE  SYSPROC\n           CLOSE  PROCXXX\n*         MVC  JEALCDDN,=CL8'SYSPROC'\n          MVC  JEALCDDN,=CL8'PROCXXX'\n          LA   1,JTPOINTD      DEALLOC PROCLIB\n          DYNALLOC\n            TM  WORKSW2,LOADPROC\n            BO ENDVLSTJ\n            B  JEXTVLSA  SEARCH OTHER LIBS IN CONCAT\n*************************************************************\nJEXTVLSA  DS    0H\n          LH   1,NUMPLIBS\n          LTR  1,1\n          BZ   ENDVLSTJ\n          STH  1,CURNUM\n          LA   1,PROCLIBS+L'PROCLIBS\n          ST   1,CURPLST\n******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************\nJDDVLSTP  DS   0H\n          ST   1,JSNPOINT\n          MVC  WORKDSN,POFF(1)\n          MVC  JDNTXPRM,=CL8'PROCXXX'\n          OI   JSPPOINT,X'80'  NO MEMBER NAME\n          LA   1,JTPOINT       ALLOCATE PROCXXX\n          DYNALLOC\n          NI   JSPPOINT,255-X'80'\n          MVC  JDNTXPRM,=CL8'JESPROC' RESET\n          LTR  15,15\n          BNZ  JEALVXXX\n          OPEN (PROCXXX,(INPUT))\n          LTR  15,15\n          BNZ   JEALVXXX\n          LA  DCBREG,PROCXXX\n          LA   0,BLDLLIST\n          BLDL  (DCBREG),(0)\n           LTR 15,15\n          BNZ  JEALVXXX\n           OI  WORKSW2,LOADPROC\n            B  JEALVXXX\nJEALVXXX   DS   0H\n           CLOSE PROCXXX\n*****DEALLOCATE PROCXXX\n          MVC  JEALCDDN,=CL8'PROCXXX'\n          LA   1,JTPOINTD      DEALLOC PROCXXX\n          DYNALLOC\n          MVC  JEALCDDN,=CL8'JESPROC'  RESET\n          TM  WORKSW2,LOADPROC\n          BO  ENDVLSTJ\n          B  JEXTVLSB\nJEXTVLSB   DS   0H\n          LH   1,CURNUM\n          BCTR 1,0\n          LTR  1,1\n          BZ  ENDVLSTJ\n          STH  1,CURNUM\n          L    1,CURPLST\n          LA   1,L'PROCLIBS(1)\n          ST   1,CURPLST\n          B    JDDVLSTP\nENDVLSTJ DS   0H\n          LM  14,12,SAVELINK+12\n          L    13,MVSSAVE\n          BR   RET\nJDELIM    DS    0H    FIND DELIMITER IN DSNAME\n          STM  14,12,RTNSAVE+12\n          MVC POFF(44,3),=44C' '\n          LA   15,4(1)\n          L    14,=A(DELIMTAB)\n          TRT  0(44,15),0(14)\n          SR   1,15\n          LTR  1,1\n          BZ   *+6\n          BCTR  1,0\n          EX   1,MOVEJTN\n          MVC  0(JALCONSL,3),JALCONS\n          LM   14,12,RTNSAVE+12\n          BR   14\nMOVEJTN   MVC POFF(0,3),0(15)\nJALCONS   DS  0H\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DC    AL2(44)   LENGTH OF PARM\nJALCONSL EQU  *-JALCONS\nJESPROC DCB DSORG=PS,MACRF=GL,DDNAME=JESPROC,EODAD=ENDPROCJ\nPROCXXX DCB DSORG=PO,MACRF=(R),DDNAME=PROCXXX\n         DS  0D\nFILL    DC   CL8'JTPOINT'\n******TO ALLOC SYS1.PROCLIB\n         DS  0D\nJTPOINT  DC   A(JBS)  ADR  REQ BLOCK PASSED IN R1\n         ORG   JTPOINT   S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\n         DS    0F\nJBS     DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n         DC    AL1(JBEL)  LEN OF RB\n         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC\n         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n         DS    X       2ND   FLAG BYTE\n         DS    XL2     ERROR REASON CODE\n         DS    XL2     INFO  REASON CODE\nJBTXTPP  DC    A(JXPOINTS)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nJBEL     EQU   *-JBS\n* TEXT POINTERS  FOR ALLOCATION\nJXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST\nJDNPOINT DC   A(JDNTEXT)    DDN TU\nJSNPOINT DC   A(JSNTEXT)    DSN TU\nJSPPOINT DC   A(JSSPTEXN)   DISP TU\nJSMPOINT DC   A(JSMTEXT)    MEMBER TU\n         ORG  JSMPOINT    FOR LAST TU\n         DC   X'80'\n         ORG\nJDNTEXT  DS    0F   S99TUNIT DSECT  TEXT UNITS\n**DDN TEXT UNIT\n         DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDNTXPRM)  LENGTH OF PARM\nJDNTXPRM DC    CL8'JESPROC'  DDNAME\n**DSN  TEXT UNIT\nJSNTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JSNTXPRM)   LENGTH OF PARM\nJSNTXPRM DC    CL44'SYS1.PROCLIB'   DSNAME\n**MEMBERNAME TEXT UNIT\nJSMTEXT  DS    0F   DSN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JSMTXPRM)   LENGTH OF PARM\nJSMTXPRM DC    CL8'JES2    '     MEMBERNAME\n**DISP TEXT UNIT\nJSSPTEXN  DS    0F   DSP TEXT UNIT\nJISPTEXT  EQU   *\n         DC    AL2(DALSTATS)  KEY FOR  DISPOSITION\n          DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n          DC    AL2(L'JSSPTXPR)  LENGTH OF PARM\nJSSPTXPR DC    X'08'  DISP=SHR\n***FOR DEALLOCATION\n          DS   0D\nJTPOINTD DC   A(JBSD) ADR  REQ BLOCK PASSED IN R1\n         ORG   JTPOINTD  S99RBP  DSECT\n         DC    X'80'   HI ORDER BIT MUST BE ON\n         ORG\nJBSD    DS   0F\n         DS    0CL20  S99RB DSECT  LOC BY SBPOINT\n          DC    AL1(JDBELD)  LEN OF RB\n          DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC\n          DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS\n          DS    X       2ND   FLAG BYTE\n          DS    XL2     ERROR REASON CODE\n          DS    XL2     INFO  REASON CODE\n          DC    A(JDXPOIND)     LIST OF TEXT PTRS\n         DS    F       RESERVED\n         DS    XL4     FLAGS FOR AUTH FUNCTIONS\nJDBELD     EQU   *-JBSD\n* TEXT POINTERS  FOR DEALLOCATION\nJDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST\nJDDNPOID DC   A(JNDNTEXD)  DDN TU\n         ORG JDDNPOID   FOR LAST TU\n         DC  X'80'\n         ORG\nJDDSPOID DC  A(JSNTEXT)  DSN    TU\nJDDMPOID DC  A(JDDMTEXD) MEMBER TU\n         ORG\n**DDN TEXT UNIT FOR DEALLOC\nJNDNTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDNTXPRM)  LENGTH OF PARM\nJEALCDDN DC    CL8'JESPROC'  DDNAME\nJDDMTEXD DS    0F   DDN TEXT UNIT\n         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT\n         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES\n         DS    0C\n         DC    AL2(L'JDMEMBER)  LENGTH OF PARM\nJDMEMBER DC    CL8'JES2'  MEMBER NAME\n          LTORG\n          DROP  LINKREG\n          EJECT\n***************************************\nSYNOPEN  DS   0H         SYNAD ROUTINE FOR OPEN\n          USING *,15     RETURN ADDR IN R2\n          BR   2\n          LTORG\n          DROP 15\n****\nDCBXOPEN  DS   0H         DCB ABEND EXIT\n          USING *,15     PARM LIST IN R1; RETURN IN 14\n          MVI  DCBABSW,X'FF'\n          LA  2,0(1)     PARM LIST\n          MVI 3(2),X'04'  IGNORE ERROR\n          BR  14\nDCBABSW   DS   X\n          LTORG\n          DROP 15\n          EJECT\n****\nTRTAB    DS   0C\n        USING *,1\n      DC   256AL1(*-TRTAB)\n         ORG  TRTAB\n          DC  X'40'\n         ORG  TRTAB+X'81'\n         DC   C'ABCDEFGHI'\n         ORG  TRTAB+X'91'\n         DC   C'JKLMNOPQR'\n         ORG  TRTAB+X'A2'\n         DC   C'STUVWXYZ'\n         ORG\n          LTORG\n          DROP  1\n*******************\nTRANTAB  DS   0H\n         USING *,1\nTRTTAB   DC   256X'FF'      ALPHA CHARS GO IN AS LOWER CASE\n         ORG  TRTTAB+X'81'\n         DC   9X'00'   A-I\n         ORG  TRTTAB+X'91'\n         DC   9X'00'   J-R\n         ORG  TRTTAB+X'A2'\n         DC   9X'00'   S-Z\n         ORG  TRTTAB+C'A'\n         DC   9X'00'   A-I\n         ORG  TRTTAB+C'J'\n         DC   9X'00'   J-R\n         ORG  TRTTAB+C'S'\n         DC   9X'00'   S-Z\n         ORG  TRTTAB+C'0'\n         DC  10X'00'   0-9\n         ORG\n         LTORG\n         DROP  1\n         LTORG\n        EJECT\nDELIMTAB DS   0C\n         USING *,1\n         DC   256X'00'\n          ORG  DELIMTAB\n          DC   X'FF'\n          ORG  DELIMTAB+C' '\n          DC   X'FF'\n          ORG  DELIMTAB+C','\n          DC   X'FF'\n          ORG\n          LTORG\n          DROP  1\nDDNTAB   DS   0F\n        USING *,1\n         DS  100CL16\n         DROP  1\nALPHTAB DS   0C\n         USING *,1\n         DC   256X'00'\n          ORG  ALPHTAB+X'C1'\n          DC  9X'FF'\n          ORG  ALPHTAB+X'D1'\n          DC  9X'FF'\n          ORG  ALPHTAB+X'E2'\n          DC  8X'FF'\n          ORG\n          LTORG\n          DROP  1\nCONVTAB  DS    0H   TRANSLATE LOWER CASE TO UPPER CASE\n          USING *,TABREG\nCNVTAB   DC  256AL1(*-CNVTAB)\n         ORG  CNVTAB+X'81'\n         DC   C'ABCDEFGHI'\n         ORG  CNVTAB+X'91'\n         DC   C'JKLMNOPQR'\n         ORG  CNVTAB+X'A2'\n         DC   C'STUVWXYZ'\n         ORG\n         LTORG\n         DROP  TABREG\n          EJECT\nTABSECT  DSECT\nTABENTRY  EQU  *\nDDNDSNAM  DS   CL8\nDDNDEB    DS   F\nDDNTIOT   DS   F\nTABL      EQU   *-TABENTRY\n          LTORG\n         END                                                            COP00620\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMOD1": {"ttr": 9737, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x07/\\x01\\x01\\x07/\\x14I\\x03!\\x03!\\x00\\x00\\xe2\\xe3\\xc5\\xe5\\xc5`\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-13T00:00:00", "modifydate": "2001-03-13T14:49:00", "lines": 801, "newlines": 801, "modlines": 0, "user": "STEVE-N"}, "text": "*****W M O D******TSO VERSION*************************\n****FORMAT: WMOD MODNAME\n**  RUNTIME INSTRUCTIONS\n**PLACE PROGRAM IN LINKLIST OR INVOKE THRU CALL STATEMENT IN A CLIST.\n**  ASSEMBLY INSTRUCTIONS\n**    NOTHING SPECIAL\n*********************************\n**THIS PROGRAM WILL SEARCH ALL ALLOCATED PDS LIBRARIES IN THE TSO\n**ADDRESS SPACE FOR THE SPECIFIED MODULE NAME, INCLUDING CLISTS,\n**SOURCE, ISPF LIBRARIES, ETC. IT WILL ALSO SEARCH STEPLIB, LPA,\n**LINKLIST AND SVCLIB. FOR LPA MODULES, THE ADDRESS IN LPA WILL\n**BE RETURNED. FOR ALL OTHERS, THE DATASET NAME WILL BE RETURNED.\n*******************************************************\nLINKREG  EQU   8\nRET      EQU   10\nCVTREG   EQU   1\nLPDEREG  EQU   2\nDCBREG   EQU   2\nDEBREG   EQU   3\nLLTREG   EQU   3\nTIOTREG  EQU   4\nARLREG   EQU   4\nBASEREG  EQU   11\nJSCBREG  EQU   15\nJFCBREG  EQU   15\nTCBREG   EQU   5\n         IEFZB4D0\n         IEFZB4D2\nARL      IHAARL DSECT=YES,PREFIX=ARL,DESCR=YES\nARLENGTH EQU   *-ARL\n         DCBD  DSORG=PO\nDCBLEN   EQU   *-IHADCB\nTIOT     DSECT\n         IEFTIOT1\nTIOTOFF  EQU   TIOENTRY-TIOT\nXIOT     DSECT\n         ORG   XIOT+TIOELNGH-TIOENTRY\nXIOELNGH DS    XL(L'TIOELNGH)\n         ORG   XIOT+TIOEDDNM-TIOENTRY\nXIOEDDNM DS    CL(L'TIOEDDNM)\n         ORG   XIOT+TIOEJFCB-TIOENTRY\nXIOEJFCB DS    XL(L'TIOEJFCB)\nJFCB     DSECT\n         IEFJFCBN LIST=YES\nDEBBASIC IGGDEBD\n         IKJTCB LIST=YES,DSECT=YES\n         IEZJSCB\nARAD     DSECT\nARALEN   DS    H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4\n***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)\n         DS    XL2  RESERVED\nARAJFCB  DS    CL176   JFCB\nARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL\n         CVT   DSECT=YES,LIST=YES\n         IHALPDE\nLPDELEN  EQU   *-LPDE\nLLTE     DSECT\n         DS    X\nLLTDSN   DS    CL44\nLLTLEN   EQU   *-LLTE\nLLTOFF   EQU   8    OFFSET TO FIRST LLTE\nPRVENTRY DS    CL8    FOR EACH ENTRY\n*********************************************************************** COP00210\n*********************************************************************** COP00250\n* NAME: WMOD                                                            COP00290\n* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310\n*                                                                       COP00420\n**********************************************************************  COP00430\nWMOD     CSECT                                                          COP00440\nWMOD     AMODE 31                                                       COP00440\nWMOD     RMODE 24                                                       COP00440\n         USING WMOD,BASEREG\n         B     BEGIN-*(,15)\n         DC    AL1((BEGIN-*)-1)\n         DC    C'SEEK '\n         DC    CL9'&SYSDATC'\n         DC    CL5'&SYSTIME'\nBEGIN    STM   14,12,12(13)\n         LR    BASEREG,15\n         LR    14,13\n         LA    13,SAVEMAC\n         ST    14,4(,13)\n         ST    13,8(,14)\n*        ST    1,SAVER1\n***      OPEN  (SNAP,OUTPUT)\n****     L     1,SAVER1\n****     MVC   SNAPPARM,0(1)\n****     SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=01\n         CLI   0(1),X'80'    ONLY PARM\n         BNE   NOTONE\n         L     1,0(,1)             ADDRESS OF PARM LIST\n*        ST    1,SAVER1\n****     MVC   SNAPPARM,0(1)\n******   SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=02\n****     L     1,SAVER1\n         LH    2,0(,1)             LENGHT OF PARM FIELD\n         LTR   2,2\n         BZ    ENDIT\n         BCTR  2,0\n         LA    1,2(,1)\n         EX    2,MOVEPROG\n         B     GOTIT\nNOTONE   DS    0H\n         L     1,0(,1)             ADDRESS OF PARM LIST\n*        ST    1,SAVER1\n****     MVC   SNAPPARM,0(1)\n*****    SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=03\n****     L     1,SAVER1\n         LR    15,1                SAVE IT\n         LH    2,2(,1)             LEN   OF FIRST PARM\n         LR    0,2                 SAVE LEN\n         LA    1,4(,1)             ADDR 1ST PARM\n         AR    2,1                 END OF FIRST PARM\n         CLI   0(2),C'$'           REALLY A 2ND PARM\n         BL    ISONE               NO...\n         LH    0,0(,15)            LEN OF TOTAL PARM AREA\n         LH    15,2(,15)           LEN OF FIRST PARM\n         SR    0,15                LEN OF 2ND PARM\n         SH    0,=H'4'             - LEN\n         LR    1,2                 ADDR 2ND PARM\n         LR    2,0                 LEN 2ND PARM\n         BCTR  2,0\n         EX    2,MOVEPROG\n         B     GOTIT\nMOVEPROG MVC   WORKPROG(0),0(1)\nISONE    DS    0H\n         LR    15,0                LEN  OF PARM\n         BCTR  15,0\n         EX    15,MOVEPROG\n         B     GOTIT\nGOTIT    DS    0H\n         BAL   RET,ALLOCOUT\n         OPEN  (OUTFILE,(OUTPUT))\n         XR    5,5                 CLEAR REG 5                          COP00490\n         OC    WORKPROG,BLANKS     FOLD LOWER TO UPPER CASE\n*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA\n         BAL   RET,CHKSLIB\n         TM    WORKSW,LOADSTEP\n         BNO   TESTSVC             IS IN STEPLIB/JOBLIB\n         XC    WORKDSN,WORKDSN\n         MVC   BLDLCCAT,STEPCCAT\n         MVC   WORKDDN,=CL8'STEPLIB'\n         BAL   RET,RDJFCB\n         CLI   WORKDSN,X'00'\n         BE    TESTSVC\n         BAL   LINKREG,PUTOUT\nTESTSVC  DS    0H\n         TM    WORKSW,LOADSVC\n         BNO   TESTLINK            CHECK LINKLIST\n         MVC   WORKDSN,SVCDSN\n         MVC   WORKDDN,=CL8'SVCLIB'\n         BAL   LINKREG,PUTOUT\nTESTLINK DS    0H\n         TM    WORKSW,LOADLINK\n         BNO   TESTLPA\n         XC    WORKDDN,WORKDDN\n         XC    WORKDSN,WORKDSN\n         MVC   BLDLCCAT,LINKCCAT\n         BAL   RET,SRCHLINK\n         MVC   WORKDDN,DLCBNAME\n         BAL   LINKREG,PUTOUT\nTESTLPA  DS    0H                  CHECK IF MODULE IN LPA\n         MVC   WORKDDN,=CL8'LPALIB'\n         BAL   RET,SRCHLPA\n         TM    WORKSW,LOADLPA\n         BNO   TESTDDNS\n         XC    WORKDSN,WORKDSN\n         BAL   LINKREG,PUTOUT\nTESTDDNS DS    0H\n***GET DDN OF ALL PDS'S ALLOCATED TO REGION\n         BAL   RET,LOCDEBS\n         LA    1,DDNTAB\nTESTDDNT DS    0H\n         CLI   0(1),X'FF'\n         BE    WHERLOAD\n         ST    1,CURDDN\n         B     DODDNST\nNEXTDDNT DS    0H\n         L     1,CURDDN\n         LA    1,TABL(,1)\n         B     TESTDDNT\nDODDNST  DS    0H\n****LOCATE DCB FOR EACH DDN IS TABLE AND ISSUE BLDL FOR MODULE\n         BAL   RET,SRCHSDEB\n         TM    TSOSW,TSOFILE\n         BO    DOTSODD             PROGRAM FOUND\n         B     NEXTDDNT\n         CLI   FOUNDSW,X'FF'\n         BE    RETURN\n         BAL   RET,FINDDCB\n         TM    TSOSW,TSOFILE\n         BNO   WHERLOAD            PROGRAM NOT DDN\nDOTSODD  DS    0H\n****READ JFCBS FOR DDN     AND EXTRACT DSN IN CONCATENATION****\n         BAL   RET,RDJFCB\n         CLI   WORKDSN,X'00'\n         BE    WHERLOAD\n         BAL   LINKREG,PUTOUT\n         B     NEXTDDNT\nNOPROG   DS    0H\n         XC    OUTCON,OUTCON\n         MVC   ERRPROG,WORKPROG\n         MVC   OUTCON(ERRMESSL),ERRMESS\n         BAL   LINKREG,DOSEND\n         B     RETURN\nWHERLOAD DS    0H\n         CLI   FOUNDSW,X'FF'\n         BNE   NOPROG\n         B     RETURN\nPUTOUT   DS    0H\n         MVI   FOUNDSW,X'FF'\n         MVC   MODCON,=CL6'LOAD  '\n         TM    TSOSW,SRCMOD\n         BNO   *+10\n         MVC   MODCON,=CL6'SOURCE'\n         MVC   PROGCON,WORKPROG\n         MVC   DDNCON,WORKDDN\n         CLI   WORKDSN,X'00'\n         BE    *+14\n         MVC   DSNCON,WORKDSN\n         B     DOSEND\n         MVC   DSNCON(4),=CL4'AT  '\n         MVC   DSNCON+4(L'WORKCDDR),WORKCDDR\nDOSEND   DS    0H\n         MVI   FOUNDSW,X'FF'\n         PUT   OUTFILE,OUTCON\n         BR    LINKREG\nRETURN   DS    0H\n         CLOSE OUTFILE\nENDIT    DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         SLR   15,15\n         BR    14\nERRMESS  DS    0C\n         DC    CL4' '\nERRPROG  DS    CL8\n         DC    C' NOT FOUND        '\nERRMESSL EQU   *-ERRMESS\nBLANKS   DC    8C' '\nDLCBNAME DC    CL8' '\nWORKDSN  DS    CL44\nSVCDSN   DC    CL(L'WORKDSN)'SYS1.SVCLIB'\nWORKPROG DS    CL8\nWORKDDN  DS    CL8\nWORKPARM DS    CL16\n*NAPPARM DS    CL40\nTSOSW    DS    X\nTSOFILE  EQU   X'01'\nSRCMOD   EQU   X'80'\nWORKSW   DS    X\nNOLPA    EQU   X'01'\nNOPPT    EQU   X'02'\nFOUND    EQU   X'04'\nLOADSVC  EQU   X'08'\nLOADLPA  EQU   X'10'\nLOADSTEP EQU   X'20'\nLOADLINK EQU   X'40'\nLOADRPL  EQU   X'80'\nFOUNDSW  DS    X\nTCBADDR  DS    F\nTIOTADDR DS    F\nDEBADDR  DS    F\nDCBADDR  DS    F\nBEGTIOT  DS    F\nCURDDN   DS    F\nSAVEMAC  DS    18F\nSAVELINK DS    18F\nSAVER1   DS    F\nENDDEBQ  DS    F\nDEBQADDR DS    F\nWORKCDDR DS    CL8,C' '\nFINOUT   DS    0C\n         DC    C' MODULE LOADED FROM '\nFINLIB   DS    CL8\nFINL     EQU   *-FINOUT\nBLDLLIST DS    0H\nBLDLNUM  DS    H   NUMBER OF ENTRIES\nBLDLLEN  DS    H   LEN OF EACH ENTRY\nBLDENTRY EQU   *\nBLDLNAME DS    CL8\nBLDLTTR  DS    XL3\nBLDLCCAT DS    X   CONCAT NUMBER RETURNED BY BLDL\nBLDLZ    DS    X   WHERE ENTRY FOUND\n         DS    X\nBLDLELEN EQU   *-BLDENTRY  LEN OF EACH ENTRY\nLINKCCAT DS    X\nSTEPCCAT DS    X\nOUTFILE  DCB   DDNAME=CERMFILE,MACRF=PM,DSORG=PS,RECFM=FA,             X\n               LRECL=80,BLKSIZE=80\nOUTCON   DS    0CL80\n         DC    CL1' '               1\nMODCON   DC    CL6' '          + 6= 7\n         DC    C' MODULE '     + 8=15\nPROGCON  DS    CL8             + 8=23\n         DC    C' IS IN DDN '  +11=34\nDDNCON   DS    CL8             + 8=42\n         DC    C' '            + 1=43\nDSNCON   DS    CL37            +37=80\n         DS    0F\nWARLAREA DS    CL(ARLENGTH)\nWXJFCB   DS    0F                                                       JFC00600\n         DC    X'93',AL3(WARLAREA) ONLY ENTRY                           JFC00610\nWDCB     DCB   DDNAME=ISPPROF,EXLST=WXJFCB,MACRF=(E)                           J\n*NAP DCB  DDNAME=SNAP,DSORG=PS,MACRF=W,LRECL=125,RECFM=VBA,BLKSIZE=882\n         LTORG\n         TITLE '                                             READ JFCB'\nRDJFCB   DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         XC    WORKDSN,WORKDSN\n         MVC   WARLAREA(ARLENGTH),CRL MOVE TO DYNAMIC STORAGE\n         LA    ARLREG,WARLAREA\n         USING ARL,ARLREG\n         MVC   ARLRETRV,=H'1'      ONLY WANT INFO FOR 1 DATASET\n         SR    0,0\n         IC    0,BLDLCCAT          RELATIVE CONCAT NUMBER\n         AH    0,=H'1'             ACTUAL CONCAT NUMBER\n         STH   0,ARLFIRST          DS WITH THIS CONCAT NUMBER\n         DROP  ARLREG\n         MVC   WDCB+DCBDDNAM-IHADCB(8),WORKDDN\n         RDJFCB WDCB                                                     JFC0042\n         LTR   15,15\n         BNZ   ENDJFCB\nPROCJFCB DS    0H                 FIND JFCB FOR CONCAT NUMBER FROM BLDL\n         LA    ARLREG,WARLAREA\n         USING ARL,ARLREG\n         L     1,ARLAREA           RESPONSE FROM RDJFCB\n         USING ARAD,1\n         LA    JFCBREG,ARAJFCB\n         DROP  1\n         USING JFCB,JFCBREG\n         MVC   WORKDSN,JFCBDSNM    SAVE DSNAME\nFREEJFCB DS    0H   FREE ARA\n****ISSUE FREEMAIN FOR STORAGE AREAS*****\n         SR    2,2\n         IC    2,ARLPOOL           SUBPOOL\n         L     3,ARLAREA           ADDR OF ARA\n         SR    0,0\n         ICM   0,7,ARLRLEN\n         DROP  ARLREG\n         FREEMAIN RU,LV=(0),SP=(2),A=(3)\nENDJFCB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n***ALLOCATION RETRIEVAL LIST\nCRL      IHAARL DSECT=NO,PREFIX=CRL,DESCR=NO\n*        DROP  LINKREG\n         LTORG\n         EJECT\nFINDDCB  DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         NI    TSOSW,255-TSOFILE\n         L     1,16                CVT\n         L     1,0(,1)             ADDR OF TCB POINTER\n         L     1,4(,1)             ADDR TCB\n         LR    TCBREG,1\n         B     NEXTTCB2\n         USING TCB,TCBREG\nNEXTTCB  DS    0H\n         L     TCBREG,TCBBACK      PREV TCB\nNEXTTCB2 DS    0H\n         LTR   TCBREG,TCBREG\n         BZ    ENDFDCB\n         CLC   TCBTCBID(3),=CL3'TCB'\n         BNE   ENDFDCB\n         ST    TCBREG,TCBADDR\n**CHECK IF DFHSIP TCB\n         L     JSCBREG,TCBJSCB\n*        USING IEZJSCB,JSCBREG\n*        CLC   JSCBPGMN,=CL8'DFHSIP'\n*        DROP  JSCBREG\n         L     TIOTREG,TCBTIO      TIOT\n         ST    TIOTREG,TIOTADDR\n         ST    TIOTREG,BEGTIOT\n         L     DEBREG,TCBDEB       DEB QUEUE\n         LTR   DEBREG,DEBREG\n         BZ    NEXTTCB\n         ST    DEBREG,DEBADDR\n         DROP  TCBREG\n         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY\n         USING XIOT,TIOTREG\n         SR    0,0\nFINDTIOT DS    0H\n         CLI   XIOELNGH,X'00'\n         BE    NEXTTCB\n         CLC   XIOEDDNM,WORKDDN\n         BE    GOTPROF\n         IC    0,XIOELNGH          LEN OF ENTRY\n         AR    TIOTREG,0           NEXT ENTRY\n         B     FINDTIOT\n***LOCATE DDN     IN TIOT\nGOTPROF  DS    0H\n         ST    TIOTREG,TIOTADDR\n****LOCATE DEB FOR DN     ****\n****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING TIOTADDR\n         L    DEBREG,DEBADDR\n         USING DEBBASIC,DEBREG\n         B     FINDDEB\nNEXTDEB  DS    0H\n         CLC   DEBDEBAD+1(3),=XL3'000000'\n         BE    NEXTTCB\n         L     DEBREG,DEBDEBAD     NEXT DEB\nFINDDEB  DS    0H\n         CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?\n         BNE   NEXTTCB\n         L     DCBREG,DEBDCBAD     ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?\n         BNO   NEXTDEB             NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN    DATA SET OPEN?\n         BO    *+18                YES...\n         CLC   WORKDDN,DCBDDNAM    SAME DD NAME\n         BE    GOTDCB\n         B     NEXTDEB\n         LH    0,DCBTIOT           OFFSET IN TIOT FOR THIS DCB\n         L     1,BEGTIOT           BEG OF TIOT\n         AR    1,0                 TIOT ADDR FOR THIS ENTRY\n         C     1,TIOTADDR          SAME AS FOR DDN\n         BNE   NEXTDEB\nGOTDCB   DS    0H\n         ST    DCBREG,DCBADDR      DCB\n         MVC   BLDLNUM,=H'1'  1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LR    2,DCBREG\n         LA    0,BLDLLIST\n         BLDL  (2),(0)\n         LTR   15,15\n         BNZ   ENDFDCB\n         OI    TSOSW,TSOFILE\n         TM    DCBRECFM,DCBRECU    UNDEFINED\n         BO    ENDFDCB             ASSUME LOAD   MODULE\n*        TM    DCBRECFM,DCBRECF    FIXED BLOCK FILE\n*        BNO   ENDFDCB             ASSUME SOURCE MODULE\n         OI    TSOSW,SRCMOD\nENDFDCB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n         DROP  TIOTREG,DEBREG,DCBREG\n         EJECT\nSRCHSDEB DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         NI    TSOSW,255-TSOFILE\n         L     15,CURDDN\n         USING TABSECT,15\n         L     DEBREG,DDNDEB\n         USING DEBBASIC,DEBREG\n         SLR   DCBREG,DCBREG\n         ICM   DCBREG,7,DEBDCBAD+1 ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?\n         BNO   ENDSJSCB            NO..RETURN\n         MVC   WORKDDN,DDNDSNAM\n         ST    DCBREG,DCBADDR      DCB\n         MVC   BLDLNUM,=H'1'       1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LR    2,DCBREG\n         LA    0,BLDLLIST\n         BLDL  (2),(0)\n         LTR   15,15\n         BNZ   ENDSJSCB\n         OI    TSOSW,TSOFILE\n         NI    TSOSW,255-SRCMOD\n         TM    DCBRECFM,DCBRECU    UNDEFINED\n         BO    ENDSJSCB            ASSUME LOAD   MODULE\n*        TM    DCBRECFM,DCBRECF    FIXED BLOCK FILE\n*        BNO   ENDSJSCB            ASSUME SOURCE MODULE\n         OI    TSOSW,SRCMOD\nENDSJSCB DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG,15,DEBREG,DCBREG\n         DROP  15,DEBREG,DCBREG\n         EJECT\nLOCDEBS  DS    0H     GET LIST OF DDNS\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         LA    1,DDNTAB\n         ST    1,LASTTAB\n         MVI   0(1),X'FF'\n         MVI   TEMPSW,X'00'\n         L     1,16                CVT\n         L     1,0(,1)             ADDR OF TCB POINTER\n         L     1,4(,1)             ADDR TCB\n         LR    TCBREG,1\n         USING TCB,TCBREG\n         USING DEBBASIC,DEBREG\n         L     TIOTREG,TCBTIO      TIOT\n         ST    TIOTREG,TIOTADDR\n         ST    TIOTREG,BEGTIOT\n         LA    TIOTREG,TIOTOFF(TIOTREG)\n         L     JSCBREG,TCBJSCB\n         USING IEZJSCB,JSCBREG\n         L     1,JSCBDBTB          DEB TAB\n         DROP  JSCBREG,TCBREG\n         L     0,4(,1)             LEGTH OF DEBQ\n         AR    0,1                 END OF DEBQ\n         ST    0,ENDDEBQ\n         LA    1,16(,1)            ADDR OF 1ST DEB IN Q\n         ST    1,DEBQADDR\n         TM    0(1),X'80'          INVALID ADDR\n         BO    NEWDEBQ\n         ICM   DEBREG,15,0(1)\n         BZ    ENDLDEB\n         ST    DEBREG,DEBADDR\n         B     LOCDCB\nNEWDEBQ  DS    0H\n         L     1,DEBQADDR\n         LA    1,4(,1)             NEXT DEB IN Q\n         C     1,ENDDEBQ           LAST DEB IN Q\n         BNL   CHKSPROC\n         ST    1,DEBQADDR\n         TM    0(1),X'80'          INVALID ADDR\n         BO    NEWDEBQ\n         ICM   DEBREG,15,0(1)\n         BZ    ENDLDEB\n         ST    DEBREG,DEBADDR\nLOCDCB   DS    0H\n         SLR   DCBREG,DCBREG\n         ICM   DCBREG,7,DEBDCBAD+1 ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?\n         BNO   NEWDEBQ             NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN    DATA SET OPEN?\n         BO    SETTIOT             YES...\n         MVC   WORKDDN,DCBDDNAM    SAVE DD NAME\n         B     SETTAB\nSETTIOT  DS    0H\n         LH    0,DCBTIOT           OFFSET IN TIOT  FOR THIS DCB\n         L     1,BEGTIOT           BEG OF TIOT\n         AR    1,0                 TIOT ADDR FOR THIS ENTRY\n         LR    TIOTREG,1\n         USING XIOT,TIOTREG\n         MVC   WORKDDN,XIOEDDNM    DDN\nSETTAB   DS    0H                  STORE DDN IN LIST\n         USING TABSECT,1\n         L     1,LASTTAB\n         MVC   DDNDSNAM,WORKDDN\n         ST    DEBREG,DDNDEB\n         ST    TIOTREG,DDNTIOT\n         DROP  1\n         LA    1,TABL(,1)\n         ST    1,LASTTAB\n         MVI   0(1),X'FF'\n         CLI   TEMPSW,X'00'\n         BNE   ENDLDEB\n         B     NEWDEBQ\nCHKSPROC DS    0H                  CHECK IF DEB FOR SYSPROC FOUND\n         LA    1,DDNTAB\n         USING TABSECT,1\nCOMPPROC DS    0H\n         CLI   0(1),X'FF'\n         BE    GETSPROC\n         CLC   DDNDSNAM,=CL8'SYSPROC'\n         BE    ENDLDEB\n         LA    1,TABL(1)\n         B     COMPPROC\n         DROP  1\nGETSPROC DS    0H                  ASSUME SYSPROC ALLOCATED\n         OPEN  (SYSPROC,INPUT)\n         TM    SYSPROC+48,X'10'\n         BZ    ENDLDEB\n         LA    DCBREG,SYSPROC\n         L     DEBREG,DCBDEBAD\n         MVI   TEMPSW,X'FF'\n         MVC   WORKDDN,=CL8'SYSPROC'\n         B     SETTIOT\nENDLDEB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\nLASTTAB  DS    F\nSYSPROC  DCB   DDNAME=SYSPROC,DSORG=PO,MACRF=(R)\nTEMPSW   DS    X\n         LTORG\n*        DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n         DROP  TIOTREG,DEBREG,DCBREG\n         TITLE '                          JOBLIB/SVCLIB/LINKLST SEARCH'\nCHKSLIB  DS    0H   CHECK IF MODULE IN JOBLIB OR STEPLIB\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         L     1,16                CVT\n         L     1,0(,1)             ADDR OF TCB POINTER\n         L     1,4(,1)             ADDR TCB\n         ST    1,TCBADDR\n         USING TCB,1\n         L     DCBREG,TCBJLB\n         DROP  1\n         MVC   BLDLNUM,=H'1'       1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LA    0,BLDLLIST\n         BLDL  (DCBREG),(0)\n         LTR   15,15\n         BNZ   CHKSVC\n         MVC   STEPCCAT,BLDLCCAT\n         OI    WORKSW,LOADSTEP\nCHKSVC   DS    0H\n         L     CVTREG,16\n         USING CVT,CVTREG\n         L     DCBREG,CVTSVDCB     DCB FOR SYS1.SVCLIB\n         DROP  CVTREG\n         LA    0,BLDLLIST\n         BLDL  (DCBREG),(0)\n         LTR   15,15\n         BNZ   CHKLINK\n         OI    WORKSW,LOADSVC\nCHKLINK  DS    0H\n         L     CVTREG,16\n         USING CVT,CVTREG\n***ISSUE BLDL ON LINKLIST\n         MVC   SAVELINK,CVTLLTA    LINK LIST\n         L     DCBREG,CVTLINK      ADDR LINKLIST DCB\n         DROP  CVTREG\n         L     1,548               --> ASCB    (PSAAOLD)\n         L     1,336(,1)           --> ASSB    (ASCBASSB)\n         L     1,236(,1)           --> DLCB    (ASSBDLCB)\n         L     DCBREG,12(,1)       --> LINK LIST\n         MVC   DLCBNAME,36(1)\n         XC    BLDLTTR,BLDLTTR\n         MVC   BLDLNUM,=H'1'       1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LA    0,BLDLLIST\n         BLDL  (DCBREG),(0)\n         LTR   15,15\n         BNZ   ENDSLIB\n         OI    WORKSW,LOADLINK\n         MVC   LINKCCAT,BLDLCCAT\nENDSLIB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG\n         TITLE '                                      LINK LIST SEARCH'\nSRCHLINK DS    0H   SEARCH LINK LIST FOR DSNAME\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         L     1,548               --> ASCB    (PSAAOLD)\n         L     1,336(,1)           --> ASSB    (ASCBASSB)\n         L     1,236(,1)           --> DLCB    (ASSBDLCB)\n         L     LLTREG,16(,1)       --> LINK LIST\n         MVC   DLCBNAME,36(1)\n         LA    LLTREG,LLTOFF(,LLTREG) FIRST ENTRY\n         USING LLTE,LLTREG\n         SR    1,1\n         IC    1,BLDLCCAT          CONCATENTATION NUMBER\n         LTR   1,1\n         BZ    GOTLLT\nNEXTLLT  DS    0H\n         LA    LLTREG,LLTLEN(LLTREG)  NEXT ENTRY\n         BCT   1,NEXTLLT           LOOP CONCAT NUMBER OF TIMES\nGOTLLT   DS    0H\n         MVC   WORKDSN,LLTDSN\nENDSLINK DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG\n         TITLE   '                                          LPA SEARCH'\n****\nSRCHLPA  DS    0H                  SEARCH FOR MODULE IN LPA\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         L     CVTREG,16\n         USING CVT,CVTREG\n         L     LPDEREG,CVTLPDIA    LPA DIRECTORY\n         DROP  CVTREG\n         USING LPDE,LPDEREG\nTSTLPA   DS    0H\n         TM    LPDEATTB,LPDELPDE   LPDE IDENTIFIER\n         BNO   ENDSLPA\n         CLI   LPDENAME,X'00'\n         BE    ENDSLPA\n         CLC   WORKPROG,LPDENAME\n         BE    GOTLPA\n         LA    LPDEREG,LPDELEN(,LPDEREG)\n         B     TSTLPA\nGOTLPA   DS    0H\n         CLC   LPDEMJP,=F'0'       IS THIS A MINOR LPDE?\n         BE    *+8\n         L     LPDEREG,LPDEMJP     GET MAJOR LPDE ADDRESS\n         OI    WORKSW,LOADLPA\n         UNPK  WORKCDDR(9),LPDEXTAD(5)\n         TR    WORKCDDR,TRTAB\nENDSLPA  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG,LPDEREG\n         DROP  LPDEREG\n         TITLE '                                  ALLOCATE CERMFILE DD'\n****\nALLOCOUT DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         LA    1,RBPOINT           R1 => A(REQ BLOCK )\n         DYNALLOC\n         L     13,4(,13)\n         L     14,12(,13)\n         LM    0,12,20(13)\n         BR    RET\n         DS    0F\nRBPOINT  DC    A(*+X'80000004')    ADR  REQ BLOCK PASSED IN R1\nRB       DS    0CL20               S99RB DSECT LOC BY RBPOINT\nRBLN     DC    AL1(RBEL)           LEN OF RB\nRBVERB   DC    AL1(S99VRBAL)       FUNC 01-07 01 FOR ALLOC\nRBFLAG1  DC    AL1(S99NOMNT)       FLAG BYTE-DONT CONSIDER OFFLINE UNIT\nRBFLAG2  DS    X                   2ND   FLAG BYTE\nRBERROR  DS    XL2                 ERROR REASON CODE\nRBINFO   DS    XL2                 INFO  REASON CODE\nRBTXTPP  DC    A(TXPOINTS)         LIST OF TEXT PTRS\n         DS    F                   RESERVED\nRBAUTHFL DS    XL4                 FLAGS FOR AUTH FUNCTIONS\nRBEL     EQU   *-RB\n**TEXT UNIT POINTERS\nTXPOINTS DS    0F                  S99TUPL DSECT TU PTR LIST\nDDNPOINT DC    A(DDNTEXT)\nSYSPOINT DC    A(SYSOTEXT)\nTERPOINT DC    A(TERMTEXT+X'80000000')\n*\nTXUNITS  DS    0F                  S99TUNIT DSECT TEXT UNITS\n**DDN TEXT UNIT\nDDNTEXT  DS    0F                  DDN TEXT UNIT\nDDNTXKEY DC    AL2(DALDDNAM)       KEY FOR DDN TEXT\nDDNTXNUM DC    XL2'0001'           NUM LENGTH + PARM ENTRIES\nDDNPLEN  DC    AL2(L'DDNTXPRM)     LENGTH OF PARM\nDDNTXPRM DC    CL8'CERMFILE'\n*\nSYSOTEXT DS    0F\nSYSOXKEY DC    AL2(DALSYSOU)       KEY FOR SYSOUT ALLOC\nSYSOXNUM DC    XL2'0001'           NUM LENGTH + PARM ENTRIES\nSYSOLEN  DC    AL2(L'SYSOXPRM)     LENGTH OF PARM\nSYSOXPRM DC    C'A'                MUST BE 1\n*\nTERMTEXT DS    0F   OMITTED\nTERMXKEY DC    AL2(DALTERM)        KEY FOR TERM=TS\nTERMXNUM DC    XL2'0000'           NUM LENGTH + PARM ENTRIES\nTEPROFEN DC    AL2(L'TERTXPRM)     LENGTH OF PARM\nTERTXPRM DS    0C                  NO PARM\n         DC    CL6' '              FOR PATCHING\n         LTORG\n*        DROP  LINKREG\n         TITLE '                                      TABLES && DSECTS'\nTRTAB    EQU   *-240,256\n         DC    C'0123456789ABCDEF'\nDDNTAB   DS    0F\n         DS    100CL16\nTABSECT  DSECT\nTABENTRY EQU   *\nDDNDSNAM DS    CL8\nDDNDEB   DS    F\nDDNTIOT  DS    F\nTABL     EQU   *-TABENTRY\n         LTORG\n         END                                                            COP00620\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WMOD2": {"ttr": 10243, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x18\\x01\\x01\\x07/\\x01\\x163_\\x01\\x00\\x03%\\x03!\\x00\\x00\\xe4\\xd7\\xc4\\xc1\\xe3\\xc5\\xc4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-03-13T00:00:00", "modifydate": "2016-11-30T01:00:18", "lines": 805, "newlines": 801, "modlines": 0, "user": "UPDATED"}, "text": "*****W M O D******TSO VERSION*************************\n****FORMAT: WMOD MODNAME\n**  RUNTIME INSTRUCTIONS\n**PLACE PROGRAM IN LINKLIST OR INVOKE THRU CALL STATEMENT IN A CLIST.\n**  ASSEMBLY INSTRUCTIONS\n**    NOTHING SPECIAL\n*********************************\n**THIS PROGRAM WILL SEARCH ALL ALLOCATED PDS LIBRARIES IN THE TSO\n**ADDRESS SPACE FOR THE SPECIFIED MODULE NAME, INCLUDING CLISTS,\n**SOURCE, ISPF LIBRARIES, ETC. IT WILL ALSO SEARCH STEPLIB, LPA,\n**LINKLIST AND SVCLIB. FOR LPA MODULES, THE ADDRESS IN LPA WILL\n**BE RETURNED. FOR ALL OTHERS, THE DATASET NAME WILL BE RETURNED.\n*******************************************************\nLINKREG  EQU   8\nRET      EQU   10\nCVTREG   EQU   1\nLPDEREG  EQU   2\nDCBREG   EQU   2\nDEBREG   EQU   3\nLLTREG   EQU   3\nTIOTREG  EQU   4\nARLREG   EQU   4\nBASEREG  EQU   11\nJSCBREG  EQU   15\nJFCBREG  EQU   15\nTCBREG   EQU   5\n         IEFZB4D0\n         IEFZB4D2\nARL      IHAARL DSECT=YES,PREFIX=ARL,DESCR=YES\nARLENGTH EQU   *-ARL\n         DCBD  DSORG=PO\nDCBLEN   EQU   *-IHADCB\nTIOT     DSECT\n         IEFTIOT1\nTIOTOFF  EQU   TIOENTRY-TIOT\nXIOT     DSECT\n         ORG   XIOT+TIOELNGH-TIOENTRY\nXIOELNGH DS    XL(L'TIOELNGH)\n         ORG   XIOT+TIOEDDNM-TIOENTRY\nXIOEDDNM DS    CL(L'TIOEDDNM)\n         ORG   XIOT+TIOEJFCB-TIOENTRY\nXIOEJFCB DS    XL(L'TIOEJFCB)\nJFCB     DSECT\n         IEFJFCBN LIST=YES\nDEBBASIC IGGDEBD\n         IKJTCB LIST=YES,DSECT=YES\n         IEZJSCB\nARAD     DSECT\nARALEN   DS    H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4\n***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)\n         DS    XL2  RESERVED\nARAJFCB  DS    CL176   JFCB\nARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL\n         CVT   DSECT=YES,LIST=YES\n         IHALPDE\nLPDELEN  EQU   *-LPDE\nLLTE     DSECT\n         DS    X\nLLTDSN   DS    CL44\nLLTLEN   EQU   *-LLTE\nLLTOFF   EQU   8    OFFSET TO FIRST LLTE\nPRVENTRY DS    CL8    FOR EACH ENTRY\n*********************************************************************** COP00210\n*********************************************************************** COP00250\n* NAME: WMOD                                                            COP00290\n* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310\n*                                                                       COP00420\n**********************************************************************  COP00430\nWMOD     CSECT                                                          COP00440\nWMOD     AMODE 31                                                       COP00440\nWMOD     RMODE 24                                                       COP00440\n         USING WMOD,BASEREG\n         B     BEGIN-*(,15)\n         DC    AL1((BEGIN-*)-1)\n         DC    C'SEEK '\n         DC    CL9'&SYSDATC'\n         DC    CL5'&SYSTIME'\nBEGIN    STM   14,12,12(13)\n         LR    BASEREG,15\n         LR    14,13\n         LA    13,SAVEMAC\n         ST    14,4(,13)\n         ST    13,8(,14)\n*        ST    1,SAVER1\n***      OPEN  (SNAP,OUTPUT)\n****     L     1,SAVER1\n****     MVC   SNAPPARM,0(1)\n****     SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=01\n         CLI   0(1),X'80'    ONLY PARM\n         BNE   NOTONE\n         L     1,0(,1)             ADDRESS OF PARM LIST\n*        ST    1,SAVER1\n****     MVC   SNAPPARM,0(1)\n******   SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=02\n****     L     1,SAVER1\n         LH    2,0(,1)             LENGHT OF PARM FIELD\n         LTR   2,2\n         BZ    ENDIT\n         BCTR  2,0\n         LA    1,2(,1)\n         EX    2,MOVEPROG\n         B     GOTIT\nNOTONE   DS    0H\n         L     1,0(,1)             ADDRESS OF PARM LIST\n*        ST    1,SAVER1\n****     MVC   SNAPPARM,0(1)\n*****    SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=03\n****     L     1,SAVER1\n         LR    15,1                SAVE IT\n         LH    2,2(,1)             LEN   OF FIRST PARM\n         LR    0,2                 SAVE LEN\n         LA    1,4(,1)             ADDR 1ST PARM\n         AR    2,1                 END OF FIRST PARM\n         CLI   0(2),C'$'           REALLY A 2ND PARM\n         BL    ISONE               NO...\n         LH    0,0(,15)            LEN OF TOTAL PARM AREA\n         LH    15,2(,15)           LEN OF FIRST PARM\n         SR    0,15                LEN OF 2ND PARM\n         SH    0,=H'4'             - LEN\n         LR    1,2                 ADDR 2ND PARM\n         LR    2,0                 LEN 2ND PARM\n         BCTR  2,0\n         EX    2,MOVEPROG\n         B     GOTIT\nMOVEPROG MVC   WORKPROG(0),0(1)\nISONE    DS    0H\n         LR    15,0                LEN  OF PARM\n         BCTR  15,0\n         EX    15,MOVEPROG\n         B     GOTIT\nGOTIT    DS    0H\n         BAL   RET,ALLOCOUT\n         OPEN  (OUTFILE,(OUTPUT))\n         XR    5,5                 CLEAR REG 5                          COP00490\n         OC    WORKPROG,BLANKS     FOLD LOWER TO UPPER CASE\n*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA\n         BAL   RET,CHKSLIB\n         TM    WORKSW,LOADSTEP\n         BNO   TESTSVC             IS IN STEPLIB/JOBLIB\n         XC    WORKDSN,WORKDSN\n         MVC   BLDLCCAT,STEPCCAT\n         MVC   WORKDDN,=CL8'STEPLIB'\n         BAL   RET,RDJFCB\n         CLI   WORKDSN,X'00'\n         BE    TESTSVC\n         BAL   LINKREG,PUTOUT\nTESTSVC  DS    0H\n         TM    WORKSW,LOADSVC\n         BNO   TESTLINK            CHECK LINKLIST\n         MVC   WORKDSN,SVCDSN\n         MVC   WORKDDN,=CL8'SVCLIB'\n         BAL   LINKREG,PUTOUT\nTESTLINK DS    0H\n         TM    WORKSW,LOADLINK\n         BNO   TESTLPA\n         XC    WORKDDN,WORKDDN\n         XC    WORKDSN,WORKDSN\n         MVC   BLDLCCAT,LINKCCAT\n         BAL   RET,SRCHLINK\n         MVC   WORKDDN,DLCBNAME\n         BAL   LINKREG,PUTOUT\nTESTLPA  DS    0H                  CHECK IF MODULE IN LPA\n         MVC   WORKDDN,=CL8'LPALIB'\n         BAL   RET,SRCHLPA\n         TM    WORKSW,LOADLPA\n         BNO   TESTDDNS\n         XC    WORKDSN,WORKDSN\n         BAL   LINKREG,PUTOUT\nTESTDDNS DS    0H\n***GET DDN OF ALL PDS'S ALLOCATED TO REGION\n         BAL   RET,LOCDEBS\n         LA    1,DDNTAB\nTESTDDNT DS    0H\n         CLI   0(1),X'FF'\n         BE    WHERLOAD\n         ST    1,CURDDN\n         B     DODDNST\nNEXTDDNT DS    0H\n         L     1,CURDDN\n         LA    1,TABL(,1)\n         B     TESTDDNT\nDODDNST  DS    0H\n****LOCATE DCB FOR EACH DDN IS TABLE AND ISSUE BLDL FOR MODULE\n         BAL   RET,SRCHSDEB\n         TM    TSOSW,TSOFILE\n         BO    DOTSODD             PROGRAM FOUND\n         B     NEXTDDNT\n         CLI   FOUNDSW,X'FF'\n         BE    RETURN\n         BAL   RET,FINDDCB\n         TM    TSOSW,TSOFILE\n         BNO   WHERLOAD            PROGRAM NOT DDN\nDOTSODD  DS    0H\n****READ JFCBS FOR DDN     AND EXTRACT DSN IN CONCATENATION****\n         BAL   RET,RDJFCB\n         CLI   WORKDSN,X'00'\n         BE    WHERLOAD\n         BAL   LINKREG,PUTOUT\n         B     NEXTDDNT\nNOPROG   DS    0H\n         XC    OUTCON,OUTCON\n         MVC   ERRPROG,WORKPROG\n         MVC   OUTCON(ERRMESSL),ERRMESS\n         BAL   LINKREG,DOSEND\n         B     RETURN\nWHERLOAD DS    0H\n         CLI   FOUNDSW,X'FF'\n         BNE   NOPROG\n         B     RETURN\nPUTOUT   DS    0H\n         MVI   FOUNDSW,X'FF'\n         MVC   MODCON,=CL6'LOAD  '\n         TM    TSOSW,SRCMOD\n         BNO   *+10\n         MVC   MODCON,=CL6'SOURCE'\n         MVC   PROGCON,WORKPROG\n         MVC   DDNCON,WORKDDN\n         CLI   WORKDSN,X'00'\n         BE    *+14\n         MVC   DSNCON,WORKDSN\n         B     DOSEND\n         MVC   DSNCON(4),=CL4'AT  '\n         MVC   DSNCON+4(L'WORKCDDR),WORKCDDR\nDOSEND   DS    0H\n         MVI   FOUNDSW,X'FF'\n         PUT   OUTFILE,OUTCON\n         BR    LINKREG\nRETURN   DS    0H\n         CLOSE OUTFILE\n         L     2,=A(SYSPROC)                                     .FIX1.\n         TM    48(2),X'10'                                       .FIX1.\n         BNO   ENDIT                                             .FIX1.\n         CLOSE SYSPROC                                           .FIX1.\nENDIT    DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         SLR   15,15\n         BR    14\nERRMESS  DS    0C\n         DC    CL4' '\nERRPROG  DS    CL8\n         DC    C' NOT FOUND        '\nERRMESSL EQU   *-ERRMESS\nBLANKS   DC    8C' '\nDLCBNAME DC    CL8' '\nWORKDSN  DS    CL44\nSVCDSN   DC    CL(L'WORKDSN)'SYS1.SVCLIB'\nWORKPROG DS    CL8\nWORKDDN  DS    CL8\nWORKPARM DS    CL16\n*NAPPARM DS    CL40\nTSOSW    DS    X\nTSOFILE  EQU   X'01'\nSRCMOD   EQU   X'80'\nWORKSW   DS    X\nNOLPA    EQU   X'01'\nNOPPT    EQU   X'02'\nFOUND    EQU   X'04'\nLOADSVC  EQU   X'08'\nLOADLPA  EQU   X'10'\nLOADSTEP EQU   X'20'\nLOADLINK EQU   X'40'\nLOADRPL  EQU   X'80'\nFOUNDSW  DS    X\nTCBADDR  DS    F\nTIOTADDR DS    F\nDEBADDR  DS    F\nDCBADDR  DS    F\nBEGTIOT  DS    F\nCURDDN   DS    F\nSAVEMAC  DS    18F\nSAVELINK DS    18F\nSAVER1   DS    F\nENDDEBQ  DS    F\nDEBQADDR DS    F\nWORKCDDR DS    CL8,C' '\nFINOUT   DS    0C\n         DC    C' MODULE LOADED FROM '\nFINLIB   DS    CL8\nFINL     EQU   *-FINOUT\nBLDLLIST DS    0H\nBLDLNUM  DS    H   NUMBER OF ENTRIES\nBLDLLEN  DS    H   LEN OF EACH ENTRY\nBLDENTRY EQU   *\nBLDLNAME DS    CL8\nBLDLTTR  DS    XL3\nBLDLCCAT DS    X   CONCAT NUMBER RETURNED BY BLDL\nBLDLZ    DS    X   WHERE ENTRY FOUND\n         DS    X\nBLDLELEN EQU   *-BLDENTRY  LEN OF EACH ENTRY\nLINKCCAT DS    X\nSTEPCCAT DS    X\nOUTFILE  DCB   DDNAME=CERMFILE,MACRF=PM,DSORG=PS,RECFM=FA,             X\n               LRECL=80,BLKSIZE=80\nOUTCON   DS    0CL80\n         DC    CL1' '               1\nMODCON   DC    CL6' '          + 6= 7\n         DC    C' MODULE '     + 8=15\nPROGCON  DS    CL8             + 8=23\n         DC    C' IS IN DDN '  +11=34\nDDNCON   DS    CL8             + 8=42\n         DC    C' '            + 1=43\nDSNCON   DS    CL37            +37=80\n         DS    0F\nWARLAREA DS    CL(ARLENGTH)\nWXJFCB   DS    0F                                                       JFC00600\n         DC    X'93',AL3(WARLAREA) ONLY ENTRY                           JFC00610\nWDCB     DCB   DDNAME=ISPPROF,EXLST=WXJFCB,MACRF=(E)                           J\n*NAP DCB  DDNAME=SNAP,DSORG=PS,MACRF=W,LRECL=125,RECFM=VBA,BLKSIZE=882\n         LTORG\n         TITLE '                                             READ JFCB'\nRDJFCB   DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         XC    WORKDSN,WORKDSN\n         MVC   WARLAREA(ARLENGTH),CRL MOVE TO DYNAMIC STORAGE\n         LA    ARLREG,WARLAREA\n         USING ARL,ARLREG\n         MVC   ARLRETRV,=H'1'      ONLY WANT INFO FOR 1 DATASET\n         SR    0,0\n         IC    0,BLDLCCAT          RELATIVE CONCAT NUMBER\n         AH    0,=H'1'             ACTUAL CONCAT NUMBER\n         STH   0,ARLFIRST          DS WITH THIS CONCAT NUMBER\n         DROP  ARLREG\n         MVC   WDCB+DCBDDNAM-IHADCB(8),WORKDDN\n         RDJFCB WDCB                                                     JFC0042\n         LTR   15,15\n         BNZ   ENDJFCB\nPROCJFCB DS    0H                 FIND JFCB FOR CONCAT NUMBER FROM BLDL\n         LA    ARLREG,WARLAREA\n         USING ARL,ARLREG\n         L     1,ARLAREA           RESPONSE FROM RDJFCB\n         USING ARAD,1\n         LA    JFCBREG,ARAJFCB\n         DROP  1\n         USING JFCB,JFCBREG\n         MVC   WORKDSN,JFCBDSNM    SAVE DSNAME\nFREEJFCB DS    0H   FREE ARA\n****ISSUE FREEMAIN FOR STORAGE AREAS*****\n         SR    2,2\n         IC    2,ARLPOOL           SUBPOOL\n         L     3,ARLAREA           ADDR OF ARA\n         SR    0,0\n         ICM   0,7,ARLRLEN\n         DROP  ARLREG\n         FREEMAIN RU,LV=(0),SP=(2),A=(3)\nENDJFCB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n***ALLOCATION RETRIEVAL LIST\nCRL      IHAARL DSECT=NO,PREFIX=CRL,DESCR=NO\n*        DROP  LINKREG\n         LTORG\n         EJECT\nFINDDCB  DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         NI    TSOSW,255-TSOFILE\n         L     1,16                CVT\n         L     1,0(,1)             ADDR OF TCB POINTER\n         L     1,4(,1)             ADDR TCB\n         LR    TCBREG,1\n         B     NEXTTCB2\n         USING TCB,TCBREG\nNEXTTCB  DS    0H\n         L     TCBREG,TCBBACK      PREV TCB\nNEXTTCB2 DS    0H\n         LTR   TCBREG,TCBREG\n         BZ    ENDFDCB\n         CLC   TCBTCBID(3),=CL3'TCB'\n         BNE   ENDFDCB\n         ST    TCBREG,TCBADDR\n**CHECK IF DFHSIP TCB\n         L     JSCBREG,TCBJSCB\n*        USING IEZJSCB,JSCBREG\n*        CLC   JSCBPGMN,=CL8'DFHSIP'\n*        DROP  JSCBREG\n         L     TIOTREG,TCBTIO      TIOT\n         ST    TIOTREG,TIOTADDR\n         ST    TIOTREG,BEGTIOT\n         L     DEBREG,TCBDEB       DEB QUEUE\n         LTR   DEBREG,DEBREG\n         BZ    NEXTTCB\n         ST    DEBREG,DEBADDR\n         DROP  TCBREG\n         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY\n         USING XIOT,TIOTREG\n         SR    0,0\nFINDTIOT DS    0H\n         CLI   XIOELNGH,X'00'\n         BE    NEXTTCB\n         CLC   XIOEDDNM,WORKDDN\n         BE    GOTPROF\n         IC    0,XIOELNGH          LEN OF ENTRY\n         AR    TIOTREG,0           NEXT ENTRY\n         B     FINDTIOT\n***LOCATE DDN     IN TIOT\nGOTPROF  DS    0H\n         ST    TIOTREG,TIOTADDR\n****LOCATE DEB FOR DN     ****\n****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING TIOTADDR\n         L    DEBREG,DEBADDR\n         USING DEBBASIC,DEBREG\n         B     FINDDEB\nNEXTDEB  DS    0H\n         CLC   DEBDEBAD+1(3),=XL3'000000'\n         BE    NEXTTCB\n         L     DEBREG,DEBDEBAD     NEXT DEB\nFINDDEB  DS    0H\n         CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?\n         BNE   NEXTTCB\n         L     DCBREG,DEBDCBAD     ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?\n         BNO   NEXTDEB             NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN    DATA SET OPEN?\n         BO    *+18                YES...\n         CLC   WORKDDN,DCBDDNAM    SAME DD NAME\n         BE    GOTDCB\n         B     NEXTDEB\n         LH    0,DCBTIOT           OFFSET IN TIOT FOR THIS DCB\n         L     1,BEGTIOT           BEG OF TIOT\n         AR    1,0                 TIOT ADDR FOR THIS ENTRY\n         C     1,TIOTADDR          SAME AS FOR DDN\n         BNE   NEXTDEB\nGOTDCB   DS    0H\n         ST    DCBREG,DCBADDR      DCB\n         MVC   BLDLNUM,=H'1'  1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LR    2,DCBREG\n         LA    0,BLDLLIST\n         BLDL  (2),(0)\n         LTR   15,15\n         BNZ   ENDFDCB\n         OI    TSOSW,TSOFILE\n         TM    DCBRECFM,DCBRECU    UNDEFINED\n         BO    ENDFDCB             ASSUME LOAD   MODULE\n*        TM    DCBRECFM,DCBRECF    FIXED BLOCK FILE\n*        BNO   ENDFDCB             ASSUME SOURCE MODULE\n         OI    TSOSW,SRCMOD\nENDFDCB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n         DROP  TIOTREG,DEBREG,DCBREG\n         EJECT\nSRCHSDEB DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         NI    TSOSW,255-TSOFILE\n         L     15,CURDDN\n         USING TABSECT,15\n         L     DEBREG,DDNDEB\n         USING DEBBASIC,DEBREG\n         SLR   DCBREG,DCBREG\n         ICM   DCBREG,7,DEBDCBAD+1 ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?\n         BNO   ENDSJSCB            NO..RETURN\n         MVC   WORKDDN,DDNDSNAM\n         ST    DCBREG,DCBADDR      DCB\n         MVC   BLDLNUM,=H'1'       1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LR    2,DCBREG\n         LA    0,BLDLLIST\n         BLDL  (2),(0)\n         LTR   15,15\n         BNZ   ENDSJSCB\n         OI    TSOSW,TSOFILE\n         NI    TSOSW,255-SRCMOD\n         TM    DCBRECFM,DCBRECU    UNDEFINED\n         BO    ENDSJSCB            ASSUME LOAD   MODULE\n*        TM    DCBRECFM,DCBRECF    FIXED BLOCK FILE\n*        BNO   ENDSJSCB            ASSUME SOURCE MODULE\n         OI    TSOSW,SRCMOD\nENDSJSCB DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG,15,DEBREG,DCBREG\n         DROP  15,DEBREG,DCBREG\n         EJECT\nLOCDEBS  DS    0H     GET LIST OF DDNS\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         LA    1,DDNTAB\n         ST    1,LASTTAB\n         MVI   0(1),X'FF'\n         MVI   TEMPSW,X'00'\n         L     1,16                CVT\n         L     1,0(,1)             ADDR OF TCB POINTER\n         L     1,4(,1)             ADDR TCB\n         LR    TCBREG,1\n         USING TCB,TCBREG\n         USING DEBBASIC,DEBREG\n         L     TIOTREG,TCBTIO      TIOT\n         ST    TIOTREG,TIOTADDR\n         ST    TIOTREG,BEGTIOT\n         LA    TIOTREG,TIOTOFF(TIOTREG)\n         L     JSCBREG,TCBJSCB\n         USING IEZJSCB,JSCBREG\n         L     1,JSCBDBTB          DEB TAB\n         DROP  JSCBREG,TCBREG\n         L     0,4(,1)             LEGTH OF DEBQ\n         AR    0,1                 END OF DEBQ\n         ST    0,ENDDEBQ\n         LA    1,16(,1)            ADDR OF 1ST DEB IN Q\n         ST    1,DEBQADDR\n         TM    0(1),X'80'          INVALID ADDR\n         BO    NEWDEBQ\n         ICM   DEBREG,15,0(1)\n         BZ    ENDLDEB\n         ST    DEBREG,DEBADDR\n         B     LOCDCB\nNEWDEBQ  DS    0H\n         L     1,DEBQADDR\n         LA    1,4(,1)             NEXT DEB IN Q\n         C     1,ENDDEBQ           LAST DEB IN Q\n         BNL   CHKSPROC\n         ST    1,DEBQADDR\n         TM    0(1),X'80'          INVALID ADDR\n         BO    NEWDEBQ\n         ICM   DEBREG,15,0(1)\n         BZ    ENDLDEB\n         ST    DEBREG,DEBADDR\nLOCDCB   DS    0H\n         SLR   DCBREG,DCBREG\n         ICM   DCBREG,7,DEBDCBAD+1 ADDR DCB\n         USING IHADCB,DCBREG\n         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?\n         BNO   NEWDEBQ             NO..NEXT DEB ENTRY\n         TM    DCBOFLG,DCBOFOPN    DATA SET OPEN?\n         BO    SETTIOT             YES...\n         MVC   WORKDDN,DCBDDNAM    SAVE DD NAME\n         B     SETTAB\nSETTIOT  DS    0H\n         LH    0,DCBTIOT           OFFSET IN TIOT  FOR THIS DCB\n         L     1,BEGTIOT           BEG OF TIOT\n         AR    1,0                 TIOT ADDR FOR THIS ENTRY\n         LR    TIOTREG,1\n         USING XIOT,TIOTREG\n         MVC   WORKDDN,XIOEDDNM    DDN\nSETTAB   DS    0H                  STORE DDN IN LIST\n         USING TABSECT,1\n         L     1,LASTTAB\n         MVC   DDNDSNAM,WORKDDN\n         ST    DEBREG,DDNDEB\n         ST    TIOTREG,DDNTIOT\n         DROP  1\n         LA    1,TABL(,1)\n         ST    1,LASTTAB\n         MVI   0(1),X'FF'\n         CLI   TEMPSW,X'00'\n         BNE   ENDLDEB\n         B     NEWDEBQ\nCHKSPROC DS    0H                  CHECK IF DEB FOR SYSPROC FOUND\n         LA    1,DDNTAB\n         USING TABSECT,1\nCOMPPROC DS    0H\n         CLI   0(1),X'FF'\n         BE    GETSPROC\n         CLC   DDNDSNAM,=CL8'SYSPROC'\n         BE    ENDLDEB\n         LA    1,TABL(1)\n         B     COMPPROC\n         DROP  1\nGETSPROC DS    0H                  ASSUME SYSPROC ALLOCATED\n         OPEN  (SYSPROC,INPUT)\n         TM    SYSPROC+48,X'10'\n         BZ    ENDLDEB\n         LA    DCBREG,SYSPROC\n         L     DEBREG,DCBDEBAD\n         MVI   TEMPSW,X'FF'\n         MVC   WORKDDN,=CL8'SYSPROC'\n         B     SETTIOT\nENDLDEB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\nLASTTAB  DS    F\nSYSPROC  DCB   DDNAME=SYSPROC,DSORG=PO,MACRF=(R)\nTEMPSW   DS    X\n         LTORG\n*        DROP  LINKREG,TIOTREG,DEBREG,DCBREG\n         DROP  TIOTREG,DEBREG,DCBREG\n         TITLE '                          JOBLIB/SVCLIB/LINKLST SEARCH'\nCHKSLIB  DS    0H   CHECK IF MODULE IN JOBLIB OR STEPLIB\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         L     1,16                CVT\n         L     1,0(,1)             ADDR OF TCB POINTER\n         L     1,4(,1)             ADDR TCB\n         ST    1,TCBADDR\n         USING TCB,1\n         L     DCBREG,TCBJLB\n         DROP  1\n         MVC   BLDLNUM,=H'1'       1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LA    0,BLDLLIST\n         BLDL  (DCBREG),(0)\n         LTR   15,15\n         BNZ   CHKSVC\n         MVC   STEPCCAT,BLDLCCAT\n         OI    WORKSW,LOADSTEP\nCHKSVC   DS    0H\n         L     CVTREG,16\n         USING CVT,CVTREG\n         L     DCBREG,CVTSVDCB     DCB FOR SYS1.SVCLIB\n         DROP  CVTREG\n         LA    0,BLDLLIST\n         BLDL  (DCBREG),(0)\n         LTR   15,15\n         BNZ   CHKLINK\n         OI    WORKSW,LOADSVC\nCHKLINK  DS    0H\n         L     CVTREG,16\n         USING CVT,CVTREG\n***ISSUE BLDL ON LINKLIST\n         MVC   SAVELINK,CVTLLTA    LINK LIST\n         L     DCBREG,CVTLINK      ADDR LINKLIST DCB\n         DROP  CVTREG\n         L     1,548               --> ASCB    (PSAAOLD)\n         L     1,336(,1)           --> ASSB    (ASCBASSB)\n         L     1,236(,1)           --> DLCB    (ASSBDLCB)\n         L     DCBREG,12(,1)       --> LINK LIST\n         MVC   DLCBNAME,36(1)\n         XC    BLDLTTR,BLDLTTR\n         MVC   BLDLNUM,=H'1'       1 ENTRY\n         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY\n         MVC   BLDLNAME,WORKPROG\n         LA    0,BLDLLIST\n         BLDL  (DCBREG),(0)\n         LTR   15,15\n         BNZ   ENDSLIB\n         OI    WORKSW,LOADLINK\n         MVC   LINKCCAT,BLDLCCAT\nENDSLIB  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG\n         TITLE '                                      LINK LIST SEARCH'\nSRCHLINK DS    0H   SEARCH LINK LIST FOR DSNAME\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         L     1,548               --> ASCB    (PSAAOLD)\n         L     1,336(,1)           --> ASSB    (ASCBASSB)\n         L     1,236(,1)           --> DLCB    (ASSBDLCB)\n         L     LLTREG,16(,1)       --> LINK LIST\n         MVC   DLCBNAME,36(1)\n         LA    LLTREG,LLTOFF(,LLTREG) FIRST ENTRY\n         USING LLTE,LLTREG\n         SR    1,1\n         IC    1,BLDLCCAT          CONCATENTATION NUMBER\n         LTR   1,1\n         BZ    GOTLLT\nNEXTLLT  DS    0H\n         LA    LLTREG,LLTLEN(LLTREG)  NEXT ENTRY\n         BCT   1,NEXTLLT           LOOP CONCAT NUMBER OF TIMES\nGOTLLT   DS    0H\n         MVC   WORKDSN,LLTDSN\nENDSLINK DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG\n         TITLE   '                                          LPA SEARCH'\n****\nSRCHLPA  DS    0H                  SEARCH FOR MODULE IN LPA\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         L     CVTREG,16\n         USING CVT,CVTREG\n         L     LPDEREG,CVTLPDIA    LPA DIRECTORY\n         DROP  CVTREG\n         USING LPDE,LPDEREG\nTSTLPA   DS    0H\n         TM    LPDEATTB,LPDELPDE   LPDE IDENTIFIER\n         BNO   ENDSLPA\n         CLI   LPDENAME,X'00'\n         BE    ENDSLPA\n         CLC   WORKPROG,LPDENAME\n         BE    GOTLPA\n         LA    LPDEREG,LPDELEN(,LPDEREG)\n         B     TSTLPA\nGOTLPA   DS    0H\n         CLC   LPDEMJP,=F'0'       IS THIS A MINOR LPDE?\n         BE    *+8\n         L     LPDEREG,LPDEMJP     GET MAJOR LPDE ADDRESS\n         OI    WORKSW,LOADLPA\n         UNPK  WORKCDDR(9),LPDEXTAD(5)\n         TR    WORKCDDR,TRTAB\nENDSLPA  DS    0H\n         L     13,4(,13)\n         LM    14,12,12(13)\n         BR    RET\n         LTORG\n*        DROP  LINKREG,LPDEREG\n         DROP  LPDEREG\n         TITLE '                                  ALLOCATE CERMFILE DD'\n****\nALLOCOUT DS    0H\n*        USING *,LINKREG\n         STM   14,12,12(13)\n         LR    14,13\n         LA    13,SAVELINK\n         ST    14,4(,13)\n         ST    13,8(,14)\n         LA    1,RBPOINT           R1 => A(REQ BLOCK )\n         DYNALLOC\n         L     13,4(,13)\n         L     14,12(,13)\n         LM    0,12,20(13)\n         BR    RET\n         DS    0F\nRBPOINT  DC    A(*+X'80000004')    ADR  REQ BLOCK PASSED IN R1\nRB       DS    0CL20               S99RB DSECT LOC BY RBPOINT\nRBLN     DC    AL1(RBEL)           LEN OF RB\nRBVERB   DC    AL1(S99VRBAL)       FUNC 01-07 01 FOR ALLOC\nRBFLAG1  DC    AL1(S99NOMNT)       FLAG BYTE-DONT CONSIDER OFFLINE UNIT\nRBFLAG2  DS    X                   2ND   FLAG BYTE\nRBERROR  DS    XL2                 ERROR REASON CODE\nRBINFO   DS    XL2                 INFO  REASON CODE\nRBTXTPP  DC    A(TXPOINTS)         LIST OF TEXT PTRS\n         DS    F                   RESERVED\nRBAUTHFL DS    XL4                 FLAGS FOR AUTH FUNCTIONS\nRBEL     EQU   *-RB\n**TEXT UNIT POINTERS\nTXPOINTS DS    0F                  S99TUPL DSECT TU PTR LIST\nDDNPOINT DC    A(DDNTEXT)\nSYSPOINT DC    A(SYSOTEXT)\nTERPOINT DC    A(TERMTEXT+X'80000000')\n*\nTXUNITS  DS    0F                  S99TUNIT DSECT TEXT UNITS\n**DDN TEXT UNIT\nDDNTEXT  DS    0F                  DDN TEXT UNIT\nDDNTXKEY DC    AL2(DALDDNAM)       KEY FOR DDN TEXT\nDDNTXNUM DC    XL2'0001'           NUM LENGTH + PARM ENTRIES\nDDNPLEN  DC    AL2(L'DDNTXPRM)     LENGTH OF PARM\nDDNTXPRM DC    CL8'CERMFILE'\n*\nSYSOTEXT DS    0F\nSYSOXKEY DC    AL2(DALSYSOU)       KEY FOR SYSOUT ALLOC\nSYSOXNUM DC    XL2'0001'           NUM LENGTH + PARM ENTRIES\nSYSOLEN  DC    AL2(L'SYSOXPRM)     LENGTH OF PARM\nSYSOXPRM DC    C'A'                MUST BE 1\n*\nTERMTEXT DS    0F   OMITTED\nTERMXKEY DC    AL2(DALTERM)        KEY FOR TERM=TS\nTERMXNUM DC    XL2'0000'           NUM LENGTH + PARM ENTRIES\nTEPROFEN DC    AL2(L'TERTXPRM)     LENGTH OF PARM\nTERTXPRM DS    0C                  NO PARM\n         DC    CL6' '              FOR PATCHING\n         LTORG\n*        DROP  LINKREG\n         TITLE '                                      TABLES && DSECTS'\nTRTAB    EQU   *-240,256\n         DC    C'0123456789ABCDEF'\nDDNTAB   DS    0F\n         DS    100CL16\nTABSECT  DSECT\nTABENTRY EQU   *\nDDNDSNAM DS    CL8\nDDNDEB   DS    F\nDDNTIOT  DS    F\nTABL     EQU   *-TABENTRY\n         LTORG\n         END                                                            COP00620\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT249/FILE249.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT249", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}