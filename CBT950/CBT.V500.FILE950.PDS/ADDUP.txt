/* REXX ***************************************************************/
/* -------------------------------------------------------------------*/
/* Name:       ADDUP                                                  */
/* Function:   Summarizes the content of special columns within the   */
/*             editor (incl sign >+< or >-< and decimal sign >.<)     */
/* Type:       REXX-macro                                             */
/* Author:     Norbert Haas, noaDatex.de                              */
/* Input:      Content of the editor                                  */
/* Output:     Long message                                           */
/* Syntax:     ADDUP first_col last_col                               */
/* Parameter:  first_col = First column                               */
/*             last_col  = Last column                                */
/* Remark:     Counts only on NX lines|                               */
/* Example:    ADDUP 10 14                                            */
/*                                                                    */
/* Version Author   Date       Why                                    */
/* ------- -------- ---------- -------------------------------------- */
/* V01.01  N.Haas   27.06.2012 Also Blanks (counted as zero) are      */
/*                             allowed now.                           */
/* V01.00  N.Haas   18.07.2007 Creation                               */
/**********************************************************************/
"ISREDIT MACRO (parm) NOPROCESS"

/* Init */
TRUE = 1
FALSE = 0

/* Plausi */
IF WORDS(parm) /= 2 THEN DO
   CALL Set_Message 'Macro ADDUP needs exactly two parameter. Syntax:',
                    'ADDUP from_col to_col.', TRUE
   EXIT 1
END
PARSE VAR parm from to
IF DATATYPE(from) /= 'NUM' | DATATYPE(to) /= 'NUM' THEN DO
   CALL Set_Message 'Both parameters have to be numeric.',TRUE
   EXIT 1
END
"ISREDIT (lrecl) = LRECL"
IF from < 1 | to > lrecl THEN DO
   CALL Set_Message 'Both parameters have to be between 1',
                    'and' lrecl+0'.', TRUE
   EXIT 1
END

/* More Init */
len     = to - from + 1
sum     = 0
counter = 0
NUMERIC DIGITS 30
zedlmsg = "BUSY ..."
CALL Show_Message

/* Loop over all NX lines */
"ISREDIT (last) = LINENUM .ZL"
DO i = 1 TO last
   "ISREDIT (status) = XSTATUS (i)"
   IF status = 'X' THEN NOP
   ELSE DO
      "ISREDIT (content) = LINE (i)"
      value = SUBSTR(content, from, len)
      value = TRANSLATE(value, '0', ' ')       /* new, Blanks allowed */
      IF DATATYPE(value) /= 'NUM' THEN DO
         CALL Set_Message 'At least in line' i+0 'there is a non',
                          'numeric value in column' from 'to' to'.',,
                          TRUE
         EXIT 1
      END
      ELSE DO
         counter = counter + 1
         sum = sum + value
         IF counter // 2500 = 0 THEN DO
            zedlmsg = zedlmsg || '.'
            CALL Show_Message
         END
      END
   END
END

/* Message */
CALL Set_Message 'I counted' counter 'lines between line 1 and line',
                 last+0'. The sum of' sum 'has been computed.', FALSE

EXIT

Set_Message: PROCEDURE EXPOSE TRUE FALSE
   PARSE ARG lmsg, beep

   zedsmsg = ''
   zedlmsg = lmsg


   IF beep THEN
      "ISPEXEC SETMSG MSG(ISRZ001)"
   ELSE
      "ISPEXEC SETMSG MSG(ISRZ000)"
RETURN

Show_Message: PROCEDURE EXPOSE zedlmsg
   zedsmsg = ""
   "ISPEXEC CONTROL DISPLAY LOCK"
   "ISPEXEC DISPLAY MSG(ISRZ000)"
   IF LENGTH(zedlmsg) > 60 THEN zedlmsg = "BUSY ..."
RETURN
