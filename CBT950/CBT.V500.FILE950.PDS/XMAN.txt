/* REXX ------------------------------------------------------------- */
/* Name:         XMAN - XMIT Manager                                  */
/* Type:         Exec                                                 */
/* Author:       Norbert Haas - noaDatex.de                           */
/* Date:         30.12.2016                                           */
/* Syntax:       TSO XMAN                                             */
/* Parameter:    Input DS (optional)                                  */
/* Description:  XMIT command with dialog                             */
/* Example:      TSO XMAN                                             */
/*                                                                    */
/* Vers.  Date       Author    Reason                                 */
/* ------ ---------- --------- -------------------------------------- */
/* V01.01 30.12.2016 N.Haas    Creation                               */
/* ------------------------------------------------------------------ */
PARSE UPPER ARG inpdsn                                    /* Input DS */

SIGNAL ON NOVALUE
SIGNAL ON SYNTAX

/* Init ------------------------------------------------------------- */
TRUE = 1
FALSE = 0
ok = TRUE
cursor = "inpdsn"
cmd = "SE 'Canceled by user ...' U("USERID()")"

/* Show panel ------------------------------------------------------- */
"ISPEXEC ADDPOP"
"ISPEXEC DISPLAY PANEL(XMANP)"
DO WHILE rc = 0
   "ISPEXEC REMPOP"
   ok = TRUE

   /* Plausi input DS ----------------------------------------------- */
   inpdsn = FQ(inpdsn)
   IF SYSDSN(inpdsn) /= "OK" THEN DO
      dmy = DispMsg("",,
                    "Input dataset ("inpdsn") does not exist.",,
                    TRUE)
      ok  = FALSE
   END

   dmy = LISTDSI(inpdsn)
   IF sysdsorg /= 'PO' THEN DO
      rc = DispMsg("Wrong DSORG",,
                   "DS" inpdsn "must be partitioned.",,
                   TRUE)
      ok  = FALSE
   END

   /* Member -------------------------------------------------------- */
   IF ok THEN DO
      all = FALSE
      member.0 = 0
      SELECT
         WHEN inpmem1 = "*" THEN all = TRUE
         WHEN inpmem1 = "/" THEN member.0 = Select_Members()
         OTHERWISE NOP
      END
   END

   /* Plausi output DS ---------------------------------------------- */
   IF ok THEN DO
      outdsn = FQ(outdsn)
      IF SYSDSN(outdsn) = "OK" THEN DO
         dmy = DispMsg("",,
                       "Output dataset ("outdsn") already exists.",,
                       TRUE)
         ok = FALSE
         cursor = "outdsn"
      END
   END

   /* Built XMIT command -------------------------------------------- */
   IF ok THEN DO
      cmd = "XMIT "nodeid"."userid " DSN("inpdsn")"

      IF all THEN NOP
      ELSE DO
         cmd = cmd "MEMBERS("

         IF member.0 > 0 THEN DO
            DO i = 1 TO member.0
               cmd = cmd || STRIP(member.i) || ","
            END
         END
         ELSE DO
            cmd = cmd || STRIP(inpmem1)
            IF inpmem2 /= "" THEN cmd = cmd || "," || STRIP(inpmem2)
            IF inpmem3 /= "" THEN cmd = cmd || "," || STRIP(inpmem3)
            IF inpmem4 /= "" THEN cmd = cmd || "," || STRIP(inpmem4)
            IF inpmem5 /= "" THEN cmd = cmd || "," || STRIP(inpmem5)
         END

         cmd = cmd || ")"
      END

      cmd = cmd "OUTDSN("outdsn")"
   END

   /* End of loop --------------------------------------------------- */
   IF ok THEN rc = 1
   ELSE DO
      "ISPEXEC ADDPOP"
      "ISPEXEC DISPLAY PANEL(XMANP)"
   END
END

/* XMIT now --------------------------------------------------------- */
IF ok THEN cmd

EXIT

/* ERROR coding ----------------------------------------------------- */
NOVALUE:
SYNTAX:
   SAY "XMAN      "
   SAY "Line     =" sigl
   SAY "Source   =" STRIP("SOURCELINE"(sigl), "L")
   SAY "Error    =" ERRORTEXT(rc)
   SAY "Variable =" CONDITION("D")
EXIT

/* Full Qualified --------------------------------------------------- */
FQ: PROCEDURE
   PARSE UPPER ARG dsn

   dsn = STRIP(dsn,,"'")
RETURN "'"dsn"'"

/* Display Message -------------------------------------------------- */
DispMsg: PROCEDURE
   PARSE ARG zedsmsg, zedlmsg, beep

   /* Beep ? */
   IF beep THEN
      msg = 'ISRZ001'
   ELSE
      msg = 'ISRZ000'

   "ISPEXEC SETMSG MSG("msg")"
RETURN 0

/* Dialog dieplay members ------------------------------------------- */
Select_Members: PROCEDURE EXPOSE member. inpdsn TRUE FALSE
   msg = '*SEL*'
   dmy = DispMsg("",,
                 "Please select (S) member to be copied.",,
                 FALSE)

   "ISPEXEC LMINIT DATAID(dataid1) DATASET("inpdsn") ENQ(SHR)"
   "ISPEXEC LMOPEN DATAID("dataid1") OPTION(INPUT)"
   "ISPEXEC LMMDISP DATAID("dataid1") OPTION(DISPLAY)"

   c = 0
   DO WHILE rc = 0
      c = c + 1
      member.c = zlmember
      "ISPEXEC LMMDISP DATAID("dataid1") OPTION(PUT)",
                                        "MEMBER("zlmember")",
                                        "ZLUDATA("msg")"
      "ISPEXEC CONTROL NONDISPL ENTER"
      "ISPEXEC LMMDISP DATAID("dataid1") OPTION(DISPLAY)"
   END

   "ISPEXEC LMCLOSE DATAID("dataid1")"
   "ISPEXEC LMFREE DATAID("dataid1")"
RETURN c
