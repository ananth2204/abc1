/* REXX ------------------------------------------------------------- */
/* Name:         PACKCHG                                              */
/* Type:         Exec                                                 */
/* Author:       Norbert Haas, noaDatex.de                            */
/* Datum:        24.08.2016                                           */
/* Syntax:       TSO PACKCHG                                          */
/* Parameter:    none                                                 */
/* Description:  Changes in (all) members of a PDS (dsn = ...) the    */
/*               string f$ by c$ (WORD). Uses PACMCHGM for that       */
/* Remark:       See lines with $$$ and change if neccessary          */
/*                                                                    */
/* Vers.  Datum      Autor     Grund                                  */
/* ------ ---------- --------- -------------------------------------- */
/* V03.02 20.12.2016 N.Haas    Translated into English                */
/* V03.01 21.11.2016 N.Haas    Weitere Eingabefelder abarbeiten       */
/* V02.01 02.09.2016 N.Haas    Jetzt auch mit Spaltenangabe und §§§   */
/* V01.01 24.08.2016 N.Haas    Erstellung (Kopie und Erweiterung des  */
/*                             RUDELCHG vom 22.01.2015)               */
/* ------------------------------------------------------------------ */
SIGNAL ON NOVALUE
SIGNAL ON SYNTAX

TRUE     = 1
FALSE    = 0
xc1      = '7D'x /* ' Single quote */
xc2      = '59'x /* ß Tilde        */
xc3      = 'EC'x /* Ö Back slash   */
collect. = ""                       /* Collection of the member names */
j.       = ""                     /* Lines for the job beeing created */
u        = 0                                      /* Counter therefor */
zedsmsg  = ""                                         /* Shortmessage */
jid60    = 'VTTRFCHG'                                   /* Job ID $$$ */
acc      = 'LVAL0000'                              /* Job Account $$$ */
mcl      = 'T'                                        /* MSGCLASS $$$ */
cl       = 'A'                                           /* CLASS $$$ */
PARSE SOURCE . . . . me_dsn .             /* Name of the current REXX */
IF me_dsn = "?" THEN
   me_dsn = "NHAAS.PRIVATE.EXEC"                  /* REXX Dataset $$$ */

/* Show Panel and Plausibility check -------------------------------- */
cursor = "dsn60"
"ISPEXEC ADDPOP"
DO UNTIL plausi_ok
   plausi_ok = TRUE

   /* Show Panel ---------------------------------------------------- */
   "ISPEXEC DISPLAY PANEL(PACKCHGP)"
   IF rc > 0 THEN DO
      "ISPEXEC REMPOP"
      EXIT
   END

   /* Check DSN ----------------------------------------------------- */
   dsn60 = FullQual(dsn60)
   IF SYSDSN(dsn60) /= "OK" THEN DO
      zedlmsg = "Dataset does nor exist or is not available."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "dsn60"
   END

   /* Prefix without '*' -------------------------------------------- */
   px60 = STRIP(px60,,"*")

   /* Check strings ('ßÖ) ------------------------------------------- */
   CALL Plausi_strings

   /* Action? ------------------------------------------------------- */
   IF aktS = "" THEN aktS = "/"
END
"ISPEXEC REMPOP"

/* Create job ------------------------------------------------------- */
c  = Collect_Member(dsn60, px60)                /* Collect all member */

IF aktE = "/" THEN
   action = "Find and change"
ELSE
   action = "Find"

u=u+1;j.u = "//"jid60" JOB ("acc"),'PACKCHG',MSGCLASS="mcl",CLASS="cl","
u=u+1;j.u = "//      NOTIFY=&SYSUID,TIME=1440"
u=u+1;j.u = "//*----------------------------------------------------"
u=u+1;j.u = "//PACKCHG EXEC PGM=IKJEFT01,DYNAMNBR=30"
u=u+1;j.u = "//SYSEXEC DD DSN="me_dsn",DISP=SHR"
u=u+1;j.u = "//SYSPROC DD DSN="me_dsn",DISP=SHR"
u=u+1;j.u = "//ISPTLIB DD DSN=ISP.SISPTENU,DISP=SHR"           /* $$$ */
u=u+1;j.u = "//ISPTABL DD DUMMY"
u=u+1;j.u = "//ISPMLIB DD DSN=ISP.SISPMENU,DISP=SHR"           /* $$$ */
u=u+1;j.u = "//ISPPLIB DD DSN=ISP.SISPPENU,DISP=SHR"           /* $$$ */
u=u+1;j.u = "//ISPSLIB DD DSN=ISP.SISPSENU,DISP=SHR"           /* $$$ */
u=u+1;j.u = "//ISPPROF DD SPACE=(TRK,(9,1,4)),"
u=u+1;j.u = "//      DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB)"
u=u+1;j.u = "//SYSTSPRT DD SYSOUT=*"
u=u+1;j.u = "//DSN60   DD *"
u=u+1;j.u = dsn60
u=u+1;j.u = "/*"
u=u+1;j.u = "//MEMBER  DD *"
DO i = 1 TO c
   u=u+1;j.u = collection.i
END
u=u+1;j.u = "/*"
u=u+1;j.u = "//PREFIX  DD *"
u=u+1;j.u = px60
u=u+1;j.u = "/*"
u=u+1;j.u = "//STRINGS DD *"
u=u+1;j.u = fstr60
u=u+1;j.u = cstr60
u=u+1;j.u = fstr61
u=u+1;j.u = cstr61
u=u+1;j.u = fstr62
u=u+1;j.u = cstr62
u=u+1;j.u = fstr63
u=u+1;j.u = cstr63
u=u+1;j.u = fstr64
u=u+1;j.u = cstr64
u=u+1;j.u = "//COLUMN  DD *"
u=u+1;j.u = splt60
u=u+1;j.u = splt61
u=u+1;j.u = splt62
u=u+1;j.u = splt63
u=u+1;j.u = splt64
u=u+1;j.u = "/*"
u=u+1;j.u = "//ACTION  DD *"
u=u+1;j.u = action
u=u+1;j.u = "/*"
u=u+1;j.u = "//SYSTSIN DD *"
u=u+1;j.u = " ISPSTART CMD(%PACKCHG1)"
u=u+1;j.u = "/*"
u=u+1;j.u = "//"

/* Create, save and submit job DSN ---------------------------------- */
job_dsn = "'"USERID()".PACKCHG'"
"ISPEXEC LMERASE DATASET("job_dsn")"

"ALLOC DD(jobdd) DSN("job_dsn") NEW REUSE",
   "DSORG(PS) RECFM(F,B)",
   "SPACE(5,5) TRACKS",
   "LRECL(80) BLKSIZE(0)"
"EXECIO" u "DISKW jobdd (FINIS STEM j.)"
"FREE DD(jobdd)"

"SUBMIT" job_dsn

EXIT

/* ================================================================== */

Plausi_strings:
   IF POS(xc1, fstr60) > 0 |,
      POS(xc2, fstr60) > 0 |,
      POS(xc3, fstr60) > 0  THEN DO
      zedlmsg = "The find string contains at least one of the",
                "following characters, which ist not allowd:",
                xc1 xc2 xc3"."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "fstr60"
      RETURN
   END
   IF POS(xc1, cstr60) > 0 |,
      POS(xc2, cstr60) > 0 |,
      POS(xc3, cstr60) > 0  THEN DO
      zedlmsg = "The change string contains at least one of the",
                "following characters, which ist not allowd:"
                xc1 xc2 xc3"."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "cstr60"
      RETURN
   END

   IF POS(xc1, fstr61) > 0 |,
      POS(xc2, fstr61) > 0 |,
      POS(xc3, fstr61) > 0  THEN DO
      zedlmsg = "The find string contains at least one of the",
                "following characters, which ist not allowd:",
                xc1 xc2 xc3"."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "fstr61"
      RETURN
   END
   IF POS(xc1, cstr61) > 0 |,
      POS(xc2, cstr61) > 0 |,
      POS(xc3, cstr61) > 0  THEN DO
      zedlmsg = "The change string contains at least one of the",
                "following characters, which ist not allowd:"
                xc1 xc2 xc3"."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "cstr61"
      RETURN
   END

   IF POS(xc1, fstr62) > 0 |,
      POS(xc2, fstr62) > 0 |,
      POS(xc3, fstr62) > 0  THEN DO
      zedlmsg = "The find string contains at least one of the",
                "following characters, which ist not allowd:",
                xc1 xc2 xc3"."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "fstr62"
      RETURN
   END
   IF POS(xc1, cstr62) > 0 |,
      POS(xc2, cstr62) > 0 |,
      POS(xc3, cstr62) > 0  THEN DO
      zedlmsg = "The change string contains at least one of the",
                "following characters, which ist not allowd:"
                xc1 xc2 xc3"."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "cstr62"
      RETURN
   END

   IF POS(xc1, fstr63) > 0 |,
      POS(xc2, fstr63) > 0 |,
      POS(xc3, fstr63) > 0  THEN DO
      zedlmsg = "The find string contains at least one of the",
                "following characters, which ist not allowd:",
                xc1 xc2 xc3"."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "fstr63"
      RETURN
   END
   IF POS(xc1, cstr63) > 0 |,
      POS(xc2, cstr63) > 0 |,
      POS(xc3, cstr63) > 0  THEN DO
      zedlmsg = "The change string contains at least one of the",
                "following characters, which ist not allowd:"
                xc1 xc2 xc3"."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "cstr63"
      RETURN
   END

   IF POS(xc1, fstr64) > 0 |,
      POS(xc2, fstr64) > 0 |,
      POS(xc3, fstr64) > 0  THEN DO
      zedlmsg = "The find string contains at least one of the",
                "following characters, which ist not allowd:",
                xc1 xc2 xc3"."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "fstr64"
      RETURN
   END
   IF POS(xc1, cstr64) > 0 |,
      POS(xc2, cstr64) > 0 |,
      POS(xc3, cstr64) > 0  THEN DO
      zedlmsg = "The change string contains at least one of the",
                "following characters, which ist not allowd:"
                xc1 xc2 xc3"."
      "ISPEXEC SETMSG MSG(ISRZ001)"
      plausi_ok = FALSE
      cursor = "cstr64"
      RETURN
   END
RETURN

Collect_Member: PROCEDURE EXPOSE mem. collection. c
   PARSE UPPER ARG dsn, prefix

   /* Fully qualified? */
   dsn = "'" || STRIP(dsn,,"'") || "'"

   /* Now collect */
   dmy = OUTTRAP('line.')
   "LISTDS "dsn" STA HIS MEM"
   dmy = OUTTRAP('OFF')

   /* Skip some lines, save the others */
   z1 = 0
   DO i = 1 TO line.0
      IF z1 > 0 THEN DO
         tmp_mem = STRIP(line.i)
         IF prefix = "" | prefix = LEFT(tmp_mem, LENGTH(prefix)) THEN DO
            mem.z1 = tmp_mem
            z1 = z1 + 1
         END
      END

      /* Behind this line, you'll find the member names */
      IF z1 = 0 & POS('--MEMBERS--', line.i) > 0 THEN z1 = 1
   END

   /* Counter minus one */
   z1 = z1 - 1
   mem.0 = z1

   /* Drop memory */
   DROP line.

   /* without words */
   c = 0
   temp = ""
   l = 70
   DO i = 1 TO mem.0
      IF LENGTH(temp) + LENGTH(mem.i) > l THEN DO
         c = c + 1
         collection.c = STRIP(temp)
         temp = mem.i
      END
      ELSE DO
         temp = temp mem.i
      END
   END

   IF temp /= "" THEN DO
      c = c + 1
      collection.c = STRIP(temp)
   END
RETURN c

FullQual: PROCEDURE EXPOSE TRUE FALSE
   PARSE ARG dsn

   dsn = STRIP(dsn,,"'")
RETURN "'"dsn"'"


NOVALUE:
SYNTAX:
   SAY "PACKCHG   "
   SAY "Zeile    =" SIGL
   SAY "Source   =" strip("SOURCELINE"(sigl), "L")
   SAY "Error    =" ERRORTEXT(rc)
   SAY "Variable =" condition("D")
EXIT
