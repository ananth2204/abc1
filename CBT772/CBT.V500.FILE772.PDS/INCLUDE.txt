./ ADD NAME=$$$INDEX 0100-07332-07332-0900-00015-00015-00000-SEB
Name:     DCLDCB
Type:     INCLUDE
Purpose:  Map the DCB control block fields
Requires:
Used by:  PLI PLICOMP
Comments: Copied from IBM assembler macro PL/S statements.  Therefore,
          probably cannot be legally distributed.
------------------------------------------------------------------------
Name:     XTSOVAR
Type:     INCLUDE
Purpose:  Declare entry for XTSOVAR function
Requires: ASM XTSOVAR
Used by:  PLI PBRHELP
Comments: (See ASM XTSOVAR.)
------------------------------------------------------------------------
./ ADD NAME=DCLDCB   0100-07332-07332-0900-00792-00792-00000-SEB
 /*******************************************************************/
 /*                                                                 */
 /* THIS IS THE DSORG=PS,DEVD=DA ONLY VERSION OF THE DCB MAP.       */
 /*                                                                 */
 /* DCB FOR PHYSICAL SEQUENTIAL DIRECT ACCESS DEVICES               */
 /*                                                                 */
 /* THIS INCLUDE MEMBER IS A MODIFIED VERSION OF THE IBM MACRO      */
 /* 'SYS1.MACLIB(IHADCB)'.                                          */
 /*                                                                 */
 /* THE DEFAULT BASED POINTER FOR THIS STRUCTURE IS "DCBPTR."       */
 /*                                                                 */
 /* TO USE A DIFFERENT POINTER BASE, INCLUDE THE FOLLOWING          */
 /* STATEMENTS PRECEDING THE INCLUDE FOR THIS MEMBER:               */
 /*                                                                 */
 /* %DCL DCBPTR CHAR.,                                              */
 /* %DCBPTR = 'YOUR_DCB_POINTER_NAME'.,                             */
 /* %ACT DCBPTR.,                                                   */
 /*                                                                 */
 /*                                                                 */
 /*******************************************************************/
 %DCL DCBDV311 CHAR;
 %DCL DCBDV301 CHAR;
 %DCL DCBDV303 CHAR;
 %DCL DCBDV302 CHAR;
 %DCL DCBDV321 CHAR;
 %DCL DCBD1305 CHAR;
 %DCL DCBDV305 CHAR;
 %DCL DCBDV314 CHAR;
 %DCL DCBDV330 CHAR;
 %DCL DCBDV340 CHAR;
 %DCL DCBDV350 CHAR;
 %DCL DCBDV375 CHAR;
 %DCL DCBDV331 CHAR;
 %DCL DCBDV380 CHAR;
 %DCL DCBDVTRM CHAR;
 %DCL DCBUPDT  CHAR;
 %DCL DCBNUPD  CHAR;
 %DCL DCBSVDEB CHAR;
 %DCL DCBBFTA  CHAR;
 %DCL DCBBFTR  CHAR;
 %DCL DCBBFAD  CHAR;
 %DCL DCBBFAF1 CHAR;
 %DCL DCBBFAF2 CHAR;
 %DCL DCBRECD  CHAR;
 %DCL DCBRECF  CHAR;
 %DCL DCBRECV  CHAR;
 %DCL DCBRECU  CHAR;
 %DCL DCBRECCA CHAR;
 %DCL DCBRECCM CHAR;
 %DCL DCBRECC  CHAR;
 %DCL DCBIFNEP CHAR;
 %DCL DCBEX    CHAR;
 %DCL DCBIFPEC CHAR;
 %DCL DCBIFC9  CHAR;
 %DCL DCBIFC12 CHAR;
 %DCL DCBIFER  CHAR;
 %DCL DCBIFNE1 CHAR;
 %DCL DCBIFTIM CHAR;
 %DCL DCBIFNE2 CHAR;
 %DCL DCBIFNE3 CHAR;
 DECLARE
   1 IHADCB   BASED(DCBPTR),
    2 IHA_DUMMY0  CHAR(52);              /* DESC'D IN FF. STRUCTURES */
 DECLARE 1 IHADCS00
       BASED(DCBPTR),
    2 DCBRELAD    CHAR(4),               /* PARTITIONED ORGANIZATION
                                            DATA SET -  ADDRESS (IN
                                            THE FORM TTRN) OF MEMBER
                                            CURRENTLY USED. ---
    2 DCBKEYCN    BIT(8),                /* KEYED BLOCK OVERHEAD
                                            CONSTANT                 */
    2 DCBFDAD     CHAR(8);               /* FULL DISK ADDRESS IN THE
                                            FORM OF MBBCCHHR OF
                                            RECORD THAT WAS JUST
                                            READ OR WRITTEN          */
 /*                     DIRECT ACCESS DEVICES                        */
 DECLARE 1 IHADCS01
       BASED(DCBPTR),
    2 IHA_DUMMY1  CHAR(12),
    2 DCBDVTBL,                          /* SAME AS DCBDVTBA BELOW   */
     3 IHA_DUMMY2  CHAR(1),              /* LAST BYTE OF DCBFDAD     */
     3 DCBDVTBA    BIT(24),              /* ADDR OF ENTRY IN I/O DEVICE
                                            CHARACTERISTICS TABLE FOR
                                            DEVICE BEING USED        */
    2 IHA_DUMMY3  BIT(8),                /* DCBKEYLE - KEY LENGTH    */
    2 IHA_DUMMY4  BIT(8),                /* DCBDEVT - DEVICE TYPE    */
 %DCBDV311='''00100001''B';              /* 2311 DISK DRIVE          */
 %DCBDV301='''00100010''B';              /* 2301 PARALLEL DRUM       */
 %DCBDV303='''00100011''B';              /* 2303 SERIAL DRUM         */
 %DCBDV302='''00100100''B';              /* 2302 DISK STORAGE        */
 %DCBDV321='''00100101''B';              /* 2321 DATA CELL DRIVE     */
 %DCBD1305='''00100110''B';              /* 2305 DRUM MOD-1          */
 %DCBDV305='''00100111''B';              /* 2305 DRUM MOD-2          */
 %DCBDV314='''00101000''B';              /* 2314/2319 DISK STORAGE   */
 %DCBDV330='''00101001''B';              /* 3330 DISK STORAGE
                                            3330 MODEL-1
                                            3330 MODEL-2
                                            3333 MODEL-1             */
 %DCBDV340='''00101010''B';              /* 3340/3344 DISK STORAGE   */
 %DCBDV350='''00101011''B';              /* 3350  DISK STORAGE
                                            MODELS A2,B2,C2 @ZA46311 */
 %DCBDV375='''00101100''B';              /* 3375  DISK STORAGE       */
 %DCBDV331='''00101101''B';              /* 3330 MODEL-11 OR
                                            3333 MODEL-11 DISK STRGE */
 %DCBDV380='''00101110''B';              /* 3380  DISK STORAGE       */
    2 DCBTRBAL    FIXED(15) BIN;         /* TRACK BALANCE. NUMBER OF
                                            BYTES REMAINING ON
                                            CURRENT TRACK AFTER A
                                            WRITE OPERATION  (THIS
                                            QUANTITY MAY BE NEGATIVE
                                            IF THERE  ARE NO BYTES
                                            REMAINING ON TRACK).     */
 /*                     ACCESS METHOD COMMON INTERFACE               */
 DECLARE 1 IHADCS11
       BASED(DCBPTR),
    2 IHA_DUMMYF  CHAR(16),
    2 DCBRELB,                           /* SAME AS DCBREL BELOW     */
     3 DCBKEYLE    BIT(8),               /* KEY LENGTH OF DATA SET   */
     3 DCBREL,                           /* NUMBER OF RELATIVE
                                            TRACKS OR BLOCKS IN THIS
                                            DATA SET (BDAM)          */
      4 DCBDEVT     BIT(8),              /* DEVICE TYPE              */
 %DCBDVTRM='''01001111''B';              /* TERMINAL. (DD TERM=TS)   */
      4 DUMMY_DEVT2 BIT(16),             /* DEVICE TYPE              */
    2 DCBBUFCB,                          /* ADDRESS OF BUFFER POOL
                                            CONTROL BLOCK            */
     3 DCBBUFNO    BIT(8),               /* NUMBER OF BUFFERS
                                            REQUIRED FOR THIS DATA
                                            SET. MAY RANGE FROM 0 TO
                                            255. IF  UNBLOCKED
                                            SPANNED RECORDS ARE
                                            USED, NUMBER OF SEGMENT
                                            WORK AREAS REQUIRED FOR
                                            THIS DATA SET.           */
     3 DCBBUFCA    BIT(24),              /* ADDRESS OF BUFFER POOL
                                            CONTROL BLOCK            */
    2 DCBBUFL     FIXED(15) BIN,         /* LENGTH OF BUFFER.  MAY
                                            RANGE FROM 0 TO  32,767. */
    2 DCBDSORG,                          /* DATA SET ORGANIZATION    */
     3 DCBDSRG1 UNALIGNED,               /* FIRST BYTE OF DCBDSORG   */
      4 DCBDSGIS BIT(1),                 /* IS - INDEXED SEQUENTIAL  */
      4 DCBDSGPS BIT(1),                 /* PS - PHYSICAL SEQUENTIAL */
      4 DCBDSGDA BIT(1),                 /* DA - DIRECT ORGANIZATION */
      4 DCBDSGCX BIT(1),                 /* CX - BTAM/QTAM LINE GRP  */
      4 IHA_DUMM36 BIT(2),               /* RESERVED                 */
      4 DCBDSGPO BIT(1),                 /* PO - PARTITIONED ORG.    */
      4 DCBDSGU  BIT(1),                 /* U - UNMOVABLE, THE DATA
                                            CONTAINS  LOCATION
                                            DEPENDENT INFORMATION    */
     3 DCBDSRG2 UNALIGNED,               /* SECOND BYTE OF DCBDSORG  */
      4 DCBDSGGS BIT(1),                 /* GS - GRAPHICS ORG.       */
      4 DCBDSGTX BIT(1),                 /* TX - TCAM LINE GROUP     */
      4 DCBDSGTQ BIT(1),                 /* TQ - TCAM MESSAGE QUEUE  */
      4 IHA_DUMM38 BIT(1),               /* RESERVED                 */
      4 DCBACBM BIT(1),                  /* ACCESS METHOD CONTROL BLK*/
      4 DCBDSGTR   BIT(1),               /* TR - TCAM 3705           */
      4 IHA_DUMM39 BIT(2),               /* RESERVED                 */
    2 DCBIOBAD,                          /* ADDRESS OF IOB WHEN
                                            CHAINED SCHEDULING USED  */
     3 DCBODEB,                          /* ADDRESS OF OLD DEB       */
      4 DCBICQE,                         /* ADDRESS OF ICQE          */
       5 DCBLNP,                         /* 3525 PRINTER LINE
                                            POSITION COUNTER         */
        6 DCBQSLM UNALIGNED,             /* QSAM LOCATE MODE LOGICAL
                                            RECORD INTERFACE
                                            INDICATOR BYTE FOR UPDAT
                                            PROCESSING OF  SPANNED
                                            RECORDS                  */
         7 DCB1DVDS BIT(1),              /* ONLY ONE DEVICE ALLOCATED
                                            TO THIS DATA SET         */
         7 DCBUPDCM BIT(1),              /* UPDATE COMPLETE, FREE
                                            OLD DEB                  */
         7 DCBUPDBT BIT(2),              /* UPDATE BITS              */
 %DCBUPDT ='''10''B';                    /* UPDATE TO TAKE PLACE     */
 %DCBNUPD ='''11''B';                    /* NO UPDATE TO TAKE PLACE  */
 %DCBSVDEB='''01''B';                    /* OLD DEB ADDRESS MUST BE
                                            SAVED                    */
         7 IHA_DUMM40 BIT(4),            /* RESERVED                 */
       5 DCBIOBAA,                       /* SAME AS DCBIOBAD ABOVE   */
        6 DCBICQEA,                      /* SAVE AS DCBICQE ABOVE    */
         7 DCBODEBA    BIT(24);          /* ADDRESS OF OLD DEB       */
 DECLARE 1 IHADCS50
       BASED(DCBPTR),
    2 IHA_DUMMYG  CHAR(28),
    2 DCBSVCXL,                          /* SAME AS DCBSVCXA BELOW   */
     3 IHA_DUMM41 BIT(8),                /* RESERVED                 */
     3 DCBSVCXA   BIT(24),               /* POINTER TO EXIT LIST OF
                                            JES C.I. INTERFACE
                                            CONTROL SVC              */
 /*                     FOUNDATION EXTENSION                         */
    2 DCBEODAD,                          /* SAME AS DCBEODA BELOW    */
     3 DCBBFALN,                         /* BUFFER ALIGNMENT BITS    */
      4 DCBHIARC,                        /* HIERARCHY BITS           */
       5 DCBBFTEK UNALIGNED,             /* BUFFERING TECHNIQUE BITS */
        6 DCBH1    BIT(1),               /* HIERARCHY 1 MAIN STORAGE
                                            - BIT 5 IS ZERO          */
        6 DCBBFT,                        /* BUFFERING TECHNIQUE      */
 %DCBBFTA ='''110''B';                   /* QSAM LOCATE MODE
                                            PROCESSING OF SPANNED
                                            RECORDS - OPEN IS TO
                                            CONSTRUCT A RECORD AREA
                                            IF IT AUTOMATICALLY
                                            CONSTRUCTS BUFFERS       */
 %DCBBFTR ='''010''B';                   /* FOR BSAM CREATE BDAM
                                            PROCESSING OF UNBLOCKED
                                            SPANNED RECORDS -
                                            SOFTWARE TRACK OVERFLOW.
                                            FOR BSAM INPUT
                                            PROCESSING OF UNBLOCKED
                                            SPANNED RECORDS WITH
                                            KEYS - RECORD OFFSET
                                            PROCESSING.              */
         7 DCBBFTS BIT(1),               /* SIMPLE BUFFERING - BIT 3
                                            IS ZERO                  */
         7 DCBBFTKR BIT(1),              /* UNBLOCKED SPANNED
                                            RECORDS - SOFTWARE
                                            TRACK OVERFLOW (BDAM)    */
         7 DCBBFTE BIT(1),               /* EXCHANGE BUFFERING - BIT
                                            1 IS ZERO                */
        6 DCBBFTKD BIT(1),               /* DYNAMIC BUFFERING (BTAM) */
        6 DCBH0    BIT(1),               /* HIERARCHY 0 MAIN STORAGE
                                            - BIT 0 IS ZERO          */
        6 DCBBFA   BIT(2),               /* BUFFER ALIGNMENT         */
 %DCBBFAD ='''10''B';                    /* DOUBLEWORD BOUNDARY      */
 %DCBBFAF1='''01''B';                    /* FULLWORD NOT A
                                            DOUBLEWORD BOUNDARY,
                                            CODED IN  DCB MACRO
                                            INSTRUCTION              */
 %DCBBFAF2='''11''B';                    /* FULLWORD NOT A
                                            DOUBLEWORD BOUNDARY,
                                            CODED IN  DD STATEMENT   */
     3 DCBEODA     BIT(24),              /* ADDRESS OF A
                                            USER-PROVIDED ROUTINE TO
                                            HANDLE END-OF-DATA
                                            CONDITIONS               */
    2 DCBEXLST,                          /* ADDRESS OF USER-PROVIDED
                                            LIST OF EXITS            */
     3 DCBRECFM  UNALIGNED,              /* RECORD FORMAT            */
      4 DCBRECLA,                        /* RECORD LENGTH INDICATOR
                                            - ASCII                  */
 %DCBRECD ='''001''B';                   /* ASCII VARIABLE RECORD
                                            LENGTH                   */
       5 DCBRECL  BIT(2),                /* RECORD LENGTH INDICATOR  */
 %DCBRECF ='''10''B';                    /* FIXED RECORD LENGTH      */
 %DCBRECV ='''01''B';                    /* VARIABLE RECORD LENGTH   */
 %DCBRECU ='''11''B';                    /* UNDEFINED RECORD LENGTH  */
       5 DCBRECTO BIT(1),                /* TRACK OVERFLOW           */
      4 DCBRECBR BIT(1),                 /* BLOCKED RECORDS          */
      4 DCBRECSB BIT(1),                 /* FOR FIXED LENGTH RECORD
                                            FORMAT - STANDARD
                                            BLOCKS.  FOR VARIABLE
                                            LENGTH RECORD  FORMAT -
                                            SPANNED RECORDS          */
      4 DCBRECCC BIT(2),                 /* CONTROL CHARACTER
                                            INDICATOR                */
 %DCBRECCA='''10''B';                    /* ASA CONTROL CHARACTER    */
 %DCBRECCM='''01''B';                    /* MACHINE CONTROL CHAR.    */
 %DCBRECC ='''00''B';                    /* NO CONTROL CHARACTER     */
      4 DCBRECKL BIT(1),                 /* KEY LENGTH (KEYLEN) WAS
                                            SPECIFIED IN DCB         */
     3 DCBEXLSA    BIT(24);              /* ADDRESS OF USER-PROVIDED
                                            LIST OF EXITS            */
 /*                     FOUNDATION BEFORE OPEN                       */
 DECLARE 1 IHADCS24
       BASED(DCBPTR),
    2 IHA_DUMMYT  CHAR(40),
    2 DCBDDNAM    CHAR(8),               /* NAME ON THE DD STATEMENT
                                            DEFINING THE DATA SET    */
    2 DCBOFLGS UNALIGNED,                /* FLAGS USED BY OPEN RTE.  */
     3 DCBOFLWR,                         /* IF ZERO, LAST I/O
                                            OPERATION WAS READ OR
                                            POINT. IF ONE, LAST I/O
                                            OPERATION WAS  WRITE.    */
      4 DCBOFIOD BIT(1),                 /* DATA SET BEING OPENED FOR
                                            INPUT OR OUTPUT (BDAM)   */
     3 DCBOFLRB BIT(1),                  /* LAST I/O OPERATION WAS
                                            IN READ BACKWARD  MODE   */
     3 DCBOFEOV BIT(1),                  /* SET TO 1 BY EOV WHEN IT
                                            CALLS CLOSE  ROUTINE FOR
                                            CONCATENATION OF DATA
                                            SETS W/UNLIKE ATTRIBUTES */
     3 DCBOFOPN BIT(1),                  /* AN OPEN HAS BEEN
                                            SUCCESSFULLY COMPLETED   */
     3 DCBOFPPC BIT(1),                  /* SET TO 1 BY PROBLEM
                                            PROGRAM TO INDICATE A
                                            CONCATENATION OF UNLIKE
                                            ATTRIBUTES               */
     3 DCBOFTM  BIT(1),                  /* TAPE MARK HAS BEEN READ  */
     3 DCBOFUEX BIT(1),                  /* SET TO 0 BY AN I/O
                                            SUPPORT FUNCTION WHEN
                                            THAT FUNCTION TAKES A
                                            USER EXIT. SET TO 1 ON
                                            RETURN FROM USER EXIT TO
                                            THE I/O SUPPORT FUNCTION
                                            WHICH TOOK THE EXIT.     */
     3 DCBOFIOF BIT(1),                  /* SET TO 1 BY AN I/O
                                            SUPPORT FUNCTION IF  DCB
                                            IS TO BE PROCESSED BY
                                            THAT FUNCTION            */
    2 DCBIFLG UNALIGNED,                 /* FLAGS USED BY IOS IN
                                            COMMUNICATING ERROR
                                            CONDITIONS AND DETERMINING
                                            CORRECTIVE PROCEDURES    */
     3 DCBIBEC  BIT(2),                  /* ERROR CORRECTION INDIC.  */
 %DCBIFNEP='''00''B';                    /* NOT IN ERROR PROCEDURE   */
 %DCBEX   ='''01''B';                    /* ERROR CORRECTION OR IOS
                                            PAGE FIX IN PROCESS      */
 %DCBIFPEC='''11''B';                    /* PERMANENT ERROR
                                            CORRECTION               */
     3 DCBIBPCT,                         /* PRINTER CARRIAGE TAPE
                                            PUNCH INDICATOR          */
 %DCBIFC9 ='''10''B';                    /* CHANNEL 9 PRINTER CARRIAGE
                                            TAPE PUNCH SENSED        */
 %DCBIFC12='''01''B';                    /* CHANNEL 12 PRINTER CARRIAGE
                                            TAPE PUNCH SENSED        */
      4 DCBICH9 BIT(1),                  /* CHANNEL 9                */
      4 DCBICH12 BIT(1),                 /* CHANNEL 12               */
     3 DCBIBIOE BIT(2),                  /* IOS ERROR ROUTINE USE
                                            INDICATOR                */
 %DCBIFER ='''00''B';                    /* ALWAYS USE I/O
                                            SUPERVISOR ERROR ROUTINE */
 %DCBIFNE1='''01''B';                    /* NEVER USE I/O SUPERVISOR
                                            ERROR ROUTINE            */
 %DCBIFTIM='''01''B';                    /* TEST IOS MASK (IMSK) FOR
                                            ERROR PROCEDURE  (BTAM)  */
 %DCBIFNE2='''10''B';                    /* NEVER USE I/O SUPERVISOR
                                            ERROR ROUTINE            */
 %DCBIFNE3='''11''B';                    /* NEVER USE I/O SUPERVISOR
                                            ERROR ROUTINE            */
     3 IHA_DUMM91 BIT(2),                /* RESERVED                 */
    2 DCBMACR,                           /* MACRO INSTRUCTION REF.   */
     3 DCBMACR1 UNALIGNED,               /* FIRST BYTE OF DCBMACR    */
      4 DCBMRECP BIT(1),                 /* EXECUTE CHANNEL PROGRAM
                                            (EXCP) ---  ALWAYS ZERO
                                            (BSAM, QSAM, BPAM,
                                            BISAM,   QISAM, BDAM)    */
      4 DCBMRFE,                         /* FOUNDATION EXTENSION IS
                                            PRESENT (EXCP)           */
       5 DCBMRGET,                       /* GET (QSAM, QISAM, TCAM)  */
        6 DCBMRPTQ BIT(1),               /* PUT FOR MESSAGE GROUP
                                            (QTAM) ---  ALWAYS ZERO
                                            (BSAM, BPAM, BISAM, BDAM)*/
      4 DCBMRAPG,                        /* APPENDAGES ARE REQUIRED
                                            (EXCP)                   */
       5 DCBMRRD,                        /* READ (BSAM, BPAM, BISAM,
                                            BDAM, BTAM)              */
        6 DCBMRWRQ BIT(1),               /* WRITE FOR LINE GROUP
                                            (QTAM) ---  ALWAYS ZERO
                                            (QSAM, QISAM)            */
      4 DCBMRCI,                         /* COMMON INTERFACE (EXCP)  */
       5 DCBMRMVG,                       /* MOVE MODE OF GET (QSAM)  */
        6 DCBMRRDK BIT(1),               /* KEY SEGMENT WITH READ
                                            (BDAM) ---  ALWAYS ZERO
                                            (BISAM) ---  RESERVED
                                            (BSAM, BPAM, QTAM, BTAM) */
      4 DCBMRLCG,                        /* LOCATE MODE OF GET (QSAM)*/
       5 DCBMRRDI BIT(1),                /* ID ARGUMENT WITH READ
                                            (BDAM) ---  ALWAYS ZERO
                                            (BISAM) ---  RESERVED
                                            (EXCP, BSAM, BPAM, QTAM,
                                            BTAM)                    */
      4 DCBMRABC,                        /* USER'S PROGRAM MAINTAINS
                                            ACCURATE BLK COUNT (EXCP)*/
       5 DCBMRPT1,                       /* POINT (WHICH IMPLIES
                                            NOTE) (BSAM, BPAM)       */
        6 DCBMRSBG,                      /* SUBSTITUTE MODE OF GET
                                            (QSAM)                   */
         7 DCBMRDBF BIT(1),              /* DYNAMIC BUFFERING
                                            (BISAM, BDAM)            */
      4 DCBMRCRL,                        /* CNTRL (BSAM, QSAM)       */
       5 DCBMRCHK,                       /* CHECK (BISAM)            */
        6 DCBMRRDX,                      /* READ EXCLUSIVE (BDAM)    */
         7 DCBPGFXA BIT(1),              /* PAGE FIX APPENDAGE IS
                                            SPECIFIED (EXCP)
                                            ---   RESERVED (BTAM,
                                            BPAM, QISAM, QTAM)       */
      4 DCBMRDMG,                        /* DATA MODE OF GET (QSAM)  */
       5 DCBMRCK  BIT(1),                /* CHECK (BDAM) ---
                                            RESERVED (EXCP, BSAM,
                                            BPAM, BISAM, QISAM,
                                            QTAM, BTAM)              */
     3 DCBMACR2 UNALIGNED,               /* SECOND BYTE OF DCBMACR   */
      4 DCBMRSTL BIT(1),                 /* SETL (QISAM) --- ALWAYS
                                            ZERO (BSAM, QSAM, BPAM,
                                            BISAM, BDAM)             */
      4 DCBMRPUT,                        /* PUT (QSAM, TCAM)         */
       5 DCBMRGTQ BIT(1),                /* GET FOR MESSAGE GROUP
                                            (QTAM) ---  ALWAYS ZERO
                                            (BSAM, BPAM, BISAM, BDAM)*/
      4 DCBMRWRT,                        /* WRITE (BSAM, BPAM,
                                            BISAM, BDAM, BTAM)       */
       5 DCBMRRDQ BIT(1),                /* READ FOR LINE GROUP
                                            (QTAM) ---  ALWAYS ZERO
                                            (QSAM, QISAM) ---
                                            RESERVED (EXCP)          */
      4 DCBMRMVP,                        /* MOVE MODE OF PUT (QSAM)  */
       5 DCBMRWRK BIT(1),                /* KEY SEGMENT WITH WRITE
                                            (BDAM) ---  ALWAYS ZERO
                                            (BISAM) ---  RESERVED
                                            (EXCP, BSAM, BPAM, QTAM,
                                            BTAM)                    */
      4 DCBMR5WD,                        /* FIVE-WORD DEVICE
                                            INTERFACE (EXCP)         */
       5 DCBMRLDM,                       /* LOAD MODE BSAM (CREATE
                                            BDAM DATA SET)  (BSAM)   */
        6 DCBMRLCP,                      /* LOCATE MODE OF PUT (QSAM)*/
         7 DCBMRIDW BIT(1),              /* ID ARGUMENT WITH WRITE
                                            (BDAM) ---  ALWAYS ZERO
                                            (BISAM) ---  RESERVED
                                            (BPAM, QTAM, BTAM)       */
      4 DCBMR4WD,                        /* FOUR-WORD DEVICE
                                            INTERFACE (EXCP)         */
       5 DCBMRPT2,                       /* POINT (WHICH IMPLIES
                                            NOTE) (BSAM, BPAM)       */
        6 DCBMRTMD,                      /* SUBSTITUTE MODE (QSAM)   */
         7 DCBMRUIP BIT(1),              /* UPDATE IN PLACE (PUTX)
                                            (QISAM) ---  ALWAYS ZERO
                                            (BISAM) ---  RESERVED
                                            (BDAM, QTAM, BTAM)       */
      4 DCBMR3WD,                        /* THREE-WORD DEVICE
                                            INTERFACE (EXCP)         */
       5 DCBMRCTL,                       /* CNTRL (BSAM, QSAM)       */
        6 DCBMRSTK,                      /* SETL BY KEY (QISAM)      */
         7 DCBMRAWR BIT(1),              /* ADD TYPE OF WRITE (BDAM)
                                            ---  ALWAYS ZERO (BISAM)
                                            ---  RESERVED (BPAM,
                                            QTAM, BTAM)              */
      4 DCBMR1WD,                        /* ONE-WORD DEVICE
                                            INTERFACE (EXCP)         */
       5 DCBMRSWA,                       /* USER'S PGM HAS PROVIDED A
                                            SEGMENT WORK AREA POOL
                                            (BSAM CREATE BDAM, BDAM) */
        6 DCBMRDMD,                      /* DATA MODE (QSAM)         */
         7 DCBMRSTI BIT(1);              /* SETL BY ID (QISAM) ---
                                            ALWAYS ZERO (BISAM) ---
                                            RESERVED (BPAM, QTAM,
                                            BTAM)                    */
 /*                     FOUNDATION AFTER OPEN                        */
 DECLARE 1 IHADCS25
       BASED(DCBPTR),
    2 IHA_DUMMYU  CHAR(40),
    2 DCBTIOT     FIXED(15) BIN,         /* OFFSET FROM TIOT ORIGIN
                                            TO TIOELNGH FIELD IN
                                            TIOT ENTRY FOR ASSOCIATED
                                            DD STATEMENT             */
    2 DCBMACRF,                          /* SAME AS DCBMACR BEFORE
                                            OPEN                     */
     3 DCBMACF1 UNALIGNED,               /* FIRST BYTE OF DCBMACRF   */
      4 DCBMFECP BIT(1),                 /* EXECUTE CHANNEL PROGRAM
                                            (EXCP)                   */
      4 DCBMFFE,                         /* FOUNDATION EXTENSION IS
                                            PRESENT (EXCP)           */
       5 DCBMFGET,                       /* GET (QSAM, QISAM, TCAM)  */
        6 DCBMFPTQ BIT(1),               /* PUT FOR MESSAGE GROUP
                                            (QTAM)                   */
      4 DCBMFAPG,                        /* APPENDAGES ARE REQUIRED
                                            (EXCP)                   */
       5 DCBMFRD,                        /* READ (BSAM, BPAM, BISAM,
                                            BDAM, BTAM)              */
        6 DCBMFWRQ BIT(1),               /* WRITE FOR LINE GROUP
                                            (QTAM)                   */
      4 DCBMFCI,                         /* COMMON INTERFACE (EXCP)  */
       5 DCBMFMVG,                       /* MOVE MODE OF GET (QSAM)  */
        6 DCBMFRDK BIT(1),               /* KEY SEGMENT W.READ(BDAM) */
      4 DCBMFLCG,                        /* LOCATE MODE OF GET (QSAM)*/
       5 DCBMFRDI BIT(1),                /* ID ARGUMENT W.READ(BDAM) */
      4 DCBMFABC,                        /* USER'S PROGRAM MAINTAINS
                                            ACCURATE BLK COUNT(EXCP) */
       5 DCBMFPT1,                       /* POINT (WHICH IMPLIES
                                            NOTE) (BSAM, BPAM)       */
        6 DCBMFSBG,                      /* SUBSTITUTE MODE OF GET
                                            (QSAM)                   */
         7 DCBMFDBF BIT(1),              /* DYNAMIC BUFFERING
                                            (BISAM, BDAM)            */
      4 DCBMFCRL,                        /* CNTRL (BSAM, QSAM)       */
       5 DCBMFCHK,                       /* CHECK (BISAM)            */
        6 DCBMFRDX BIT(1),               /* READ EXCLUSIVE (BDAM)    */
      4 DCBMFDMG,                        /* DATA MODE OF GET (QSAM)  */
       5 DCBMFCK  BIT(1),                /* CHECK (BDAM)             */
     3 DCBMACF2  UNALIGNED,              /* SECOND BYTE OF DCBMACRF  */
      4 DCBMFSTL BIT(1),                 /* SETL (QISAM)             */
      4 DCBMFPUT,                        /* PUT (QSAM, TCAM) - PUT
                                            OR PUTX (QISAM)          */
       5 DCBMFGTQ BIT(1),                /* GET FOR MESSAGE GROUP
                                            (QTAM)                   */
      4 DCBMFWRT,                        /* WRITE (BSAM, BPAM,
                                            BISAM, BDAM, BTAM)       */
       5 DCBMFRDQ BIT(1),                /* READ FOR LINE GROUP(QTAM)*/
      4 DCBMFMVP,                        /* MOVE MODE OF PUT (QSAM)  */
       5 DCBMFWRK BIT(1),                /* KEY SEGMENT WITH WRITE
                                            (BDAM)                   */
      4 DCBMF5WD,                        /* FIVE-WORD DEVICE
                                            INTERFACE (EXCP)         */
       5 DCBMFLDM,                       /* LOAD MODE BSAM (CREATE
                                            BDAM DATA SET)  (BSAM)   */
        6 DCBMFLCP,                      /* LOCATE MODE OF PUT (QSAM)*/
         7 DCBMFIDW BIT(1),              /* ID ARGUMENT WITH WRITE
                                            (BDAM)                   */
      4 DCBMF4WD,                        /* FOUR-WORD DEVICE
                                            INTERFACE (EXCP)         */
       5 DCBMFPT2,                       /* POINT (WHICH IMPLIES
                                            NOTE) (BSAM, BPAM)       */
        6 DCBMFTMD,                      /* SUBSTITUTE MODE (QSAM)   */
         7 DCBMFUIP BIT(1),              /* UPDATE IN PLACE (PUTX)
                                            (QISAM)                  */
      4 DCBMF3WD,                        /* THREE-WORD DEVICE
                                            INTERFACE (EXCP)         */
       5 DCBMFCTL,                       /* CNTRL (BSAM, QSAM)       */
        6 DCBMFSTK,                      /* SETL BY KEY (QISAM)      */
         7 DCBMFAWR BIT(1),              /* ADD TYPE OF WRITE (BDAM) */
      4 DCBMF1WD,                        /* ONE-WORD DEVICE
                                            INTERFACE (EXCP)         */
       5 DCBMFSWA,                       /* USER'S PGM HAS PROVIDED A
                                            SEGMENT WORK AREA POOL
                                            (BSAM CREATE BDAM, BDAM) */
        6 DCBMFDMD,                      /* DATA MODE (QSAM)         */
         7 DCBMFSTI BIT(1),              /* SETL BY ID (QISAM)       */
    2 DCBDEBAD,                          /* ADDRESS OF ASSOCIATED DEB*/
     3 DCBIFLGS  UNALIGNED,              /* SAME AS DCBIFLG BEFORE
                                            OPEN                     */
      4 DCBIFEC  BIT(2),                 /* ERROR CORRECTION INDIC.  */
      4 DCBIFPCT,                        /* PRINTER CARRIAGE TAPE
                                            PUNCH INDICATOR          */
       5 DCBCH9 BIT(1),                  /* CHANNEL 9                */
       5 DCBCH12 BIT(1),                 /* CHANNEL 12               */
      4 DCBIFIOE BIT(2),                 /* IOS ERROR ROUTINE USE IND*/
      4 DCBIFLDT BIT(1),                 /* 3800 PRINTER             */
                                         /* LOST DATA INDIC.         */
      4 IHA_DUMM92 BIT(1),               /* RESERVED                 */
     3 DCBDEBA     BIT(24);              /* ADDRESS OF ASSOCIATED DEB*/
 DECLARE 1 IHADCS26
       BASED(DCBPTR),
    2 IHA_DUMMYV  CHAR(48),
    2 DCBWRITE,                          /* SAME AS DCBWRITA BELOW   */
     3 DCBREAD,                          /* SAME AS DCBREADA BELOW   */
      4 IHA_DUMM93  CHAR(1),             /* DCBOFLGS                 */
      4 DCBWRITA,                        /* ADDRESS OF WRITE MODULE  */
       5 DCBREADA    BIT(24);            /* ADDRESS OF READ MODULE   */
 DECLARE 1 IHADCS27
       BASED(DCBPTR),
    2 IHA_DUMMYW  CHAR(48),
    2 DCBGET,                            /* SAME AS DCBGETA BELOW    */
     3 DCBPUT,                           /* SAME AS DCBPUTA BELOW    */
      4 IHA_DUMM94 CHAR(1),              /* DCBOFLGS                 */
      4 DCBGETA,                         /* ADDRESS OF GET MODULE    */
       5 DCBPUTA     BIT(24);            /* ADDRESS OF PUT MODULE    */
 /*                     QSAM-BSAM-BPAM COMMON INTERFACE              */
 DECLARE 1 IHADCS36
       BASED(DCBPTR),
    2 IHA_DUMMAI  CHAR(52),
    2 DCBGERR,                           /* ADDRESS OF SYNCHRONIZING
                                            ROUTINE FOR GET          */
     3 DCBPERR,                          /* ADDRESS OF SYNCHRONIZING
                                            ROUTINE FOR PUT          */
      4 DCBCHECK,                        /* ADDRESS OF CHECK MODULE  */
       5 DCBOPTCD  UNALIGNED,            /* OPTION CODES             */
        6 DCBOPTW  BIT(1),               /* WRITE VALIDITY CHECK
                                            (DASD)  (BSAM, BPAM,
                                            QSAM, ISAM, BDAM)        */
        6 DCBOPTU  BIT(1),               /* ALLOW DATA CHECK CAUSED
                                            BY INVALID CHARACTER
                                            (1403 PRINTER WITH UCS
                                            FEATURE) (BSAM,BPAM,QSAM)
                                            OR MSS WINDOW PROCESSING
                                            REQUESTED (BSAM,QSAM)    */
        6 DCBOPTC  BIT(1),               /* CHAINED SCHEDULING USING
                                            PCI  (BSAM, BPAM, QSAM)  */
        6 DCBOPTH,                       /* 1287/1288 OPTICAL READER
                                            - HOPPER EMPTY EXIT
                                            (BSAM, BPAM)             */
         7 DCBOPTO,                      /* 1285/1287 OPTICAL READER
                                            - ON-LINE CORRECTION
                                            (QSAM)                   */
          8 DCBBCKPT BIT(1),             /* CHANNEL-END APPENDAGE IS
                                            TO BYPASS DOS EMBEDDED
                                            CHECKPOINT RECORDS ON
                                            TAPE  (BSAM, QSAM) ICB226*/
        6 DCBOPTQ  BIT(1),               /* TRANSLATION TO OR FROM
                                            ASCII (BSAM, BPAM, QSAM) */
        6 DCBOPTZ,                       /* MAGNETIC TAPE DEVICES -
                                            USE REDUCED ERROR
                                            RECOVERY PROCEDURE
                                            (EXCP, BSAM, BPAM, QSAM) */
         7 DCBSRCHD BIT(1),              /* USE SEARCH DIRECT,
                                            INSTEAD OF SEARCH
                                            PREVIOUS, ON RECORD
                                            POSITION SENSING DEVICE
                                            (EXCP, BSAM, BPAM, QSAM) */
        6 DCBOPTT  BIT(1),               /* USER TOTALING (BSAM,QSAM)*/
        6 DCBOPTJ  BIT(1),               /* 3800- DYNAMIC CHAR SEL'N */
       5 DCBGERRA,                       /* ADDRESS OF SYNCHRONIZING
                                            ROUTINE FOR GET          */
        6 DCBPERRA,                      /* ADDRESS OF SYNCHRONIZING
                                            ROUTINE FOR PUT          */
         7 DCBCHCKA   BIT(24),           /* ADDRESS OF CHECK MODULE  */
    2 DCBSYNAD,                          /* ADDRESS OF USER-PROVIDED
                                            SYNAD ROUTINE            */
     3 DCBIOBL     BIT(8),               /* IOB LENGTH IN DOUBLEWDS  */
     3 DCBSYNA     BIT(24),              /* ADDRESS OF USER-PROVIDED
                                            SYNAD ROUTINE            */
    2 DCBCIND1 UNALIGNED,                /* CONDITION INDICATORS     */
     3 DCBCNTOV BIT(1),                  /* DIRECT ACCESS - TRACK
                                            OVERFLOW IN USE
                                            (BSAM, BPAM, QSAM)
                                            2540 CARD PUNCH - DATA
                                            SET WAS OPENED BUT NO
                                            DATA WAS WRITTEN  (QSAM) */
     3 DCBCNSRD BIT(1),                  /* SEARCH DIRECT
                                            (BSAM, BPAM, QSAM)       */
     3 DCBCNEVB BIT(1),                  /* END OF VOLUME - USED BY
                                            EOB ROUTINES
                                            (BSAM, BPAM, QSAM)       */
     3 DCBCNEVA BIT(1),                  /* END OF VOLUME - USED BY
                                            CHANNEL-END APPENDAGE
                                            ROUTINES(BSAM,BPAM,QSAM) */
     3 IHA_DUM137 BIT(1),                /* RESERVED                 */
     3 DCBCNBRM BIT(1),                  /* BLOCKED RECORD BIT
                                            MODIFIED                 */
     3 IHA_DUM138 BIT(1),                /* RESERVED                 */
     3 DCBCNEXB BIT(1),                  /* EXCHANGE BUFFERING
                                            SUPPORTED  (QSAM)        */
    2 DCBCIND2  UNALIGNED,               /* CONDITION INDICATORS     */
     3 DCBCNSTO BIT(1),                  /* PARTITIONED DATA SET -
                                            STOW HAS BEEN PERFORMED
                                            (BSAM, BPAM, QSAM)
                                            SEQUENTIAL DATA SET -
                                            UPDATE  (BSAM, BPAM)     */
     3 DCBCNWRO BIT(1),                  /* DIRECT ORGANIZATION DATA
                                            SET - LAST I/O WAS A
                                            WRITE RECORD ZERO
                                            (BSAM, BPAM, QSAM)
                                            SEQUENTIAL DATA SET -
                                            UPDATE EOF IS INDICATED
                                            (BSAM, BPAM)             */
     3 DCBCNCLO BIT(1),                  /* CLOSE IN PROCESS (QSAM)  */
     3 DCBCNIOE BIT(1),                  /* PERMANENT I/O ERROR
                                            (BSAM, BPAM, QSAM)       */
     3 DCBCNBFP BIT(1),                  /* OPEN ACQUIRED BUFFER POOL
                                            (BSAM, BPAM, QSAM)       */
     3 DCBCNCHS BIT(1),                  /* CHAINED SCHEDULING BEING
                                            SUPPORTED(BSAM,BPAM,QSAM)*/
     3 DCBCNFEO BIT(1),                  /* FEOV BIT (BSAM,BPAM,QSAM)*/
     3 DCBCNQSM BIT(1),                  /* ALWAYS ZERO (BSAM, BPAM)
                                            THIS IS A QSAM DCB (QSAM)*/
    2 DCBBLKSI    FIXED(15) BIN,         /* MAXIMUM BLOCK SIZE       */
    2 DCBWCPO     BIT(8),                /* OFFSET OF WRITE CHANNEL
                                            PGM FROM START OF IOB    */
    2 DCBWCPL     BIT(8),                /* LENGTH OF WRITE CHANNEL
                                            PROGRAM                  */
    2 DCBOFFSR    BIT(8),                /* OFFSET OF READ CCW FROM
                                            BSAM/BPAM PREFIX  OF IOB */
    2 DCBOFFSW    BIT(8),                /* OFFSET OF WRITE CCW FROM
                                            BSAM/BPAM PREFIX OF IOB  */
    2 DCBIOBA,                           /* FOR NORMAL SCHEDULING,
                                            ADDRESS OF QSAM OR
                                            BSAM/BPAM PREFIX OF IOB.
                                            FOR CHAINED  SCHEDULING,
                                            ADDRESS OF ICB.
                                            FOR TSO TERMINAL DATA SET
                                            OPENED FOR INPUT AND FORMAT
                                            U, SIMULATED LOW-ORDER FOUR
                                            BYTES  OF IOBCSW         */
     3 DCBCICB,                          /* SAME AS DCBCICBA BELOW   */
      4 IHA_DUM140 BIT(8),               /* DCBNCP (BSAM,BPAM)       */
      4 DCBCICBA BIT(24);                /* POINTER TO JES C.I.
                                            CONTROL BLOCK (CICB)     */
 DECLARE 1 IHADCS52
       BASED(DCBPTR),
    2 IHA_DUMMAJ  CHAR(80),
    2 DCBDIRCT,                          /* NUMBER OF BYTES USED IN
                                            LAST DIRECTORY BLOCK
                                            (RANGE 0-254) (BSAM,BPAM)*/
     3 DCBQSWS,                          /* FLAG BYTE                */
      4 DCBUSASI UNALIGNED,              /* FLAG BYTE FOR ASCII TAPES*/
       5 IHA_DUM141 BIT(1),              /* RESERVED                 */
       5 DCBBLBP BIT(1),                 /* BLOCK PREFIX IS FOUR-BYTE
                                            FIELD CONTAINING BLOCK
                                            LENGTH IN UNPACKED
                                            DECIMAL (SPECIFIED BY
                                            BUFFER=L)                */
       5 DCBQADFS,                       /* USED TO PERFORM SEQUENCE
                                            CHECKING WITH MULTIPLE
                                            FUNCTION SUPPORT FOR 3525
                                            (BSAM, QSAM)             */
        6 DCBQADF1 BIT(1),               /* FIRST BIT OF DCBQADFS    */
        6 DCBQADF2 BIT(1),               /* SECOND BIT OF DCBQADFS   */
        6 DCBQADF3 BIT(1),               /* THIRD BIT OF DCBQADFS    */
       5 IHA_DUM142 BIT(2),              /* RESERVED                 */
       5 DCBQSTRU BIT(1),                /* TRUNC ENTRY POINT ENTERED
                                            (QSAM)                   */
     3 DCBBUFOF,                         /* BLOCK PREFIX LENGTH
                                            (0-99), SPECIFIED BY
                                            BUFOFF=N OR BUFOFF=L     */
      4 DCBDIRCQ    BIT(8);              /* NUMBER OF BYTES USED IN
                                            LAST DIRECTORY BLOCK
                                            (RANGE 0-254) (QSAM)     */
 /*                      BSAM-QSAM-TCAM INTERFACE                    */
 DECLARE 1 IHADCS37
       BASED(DCBPTR),
    2 IHA_DUMMAK  CHAR(60),
    2 DCBFLAG1 UNALIGNED,                /* SAM-TCAM APP.PROG. FLAGS */
     3 DCBSTQCK    BIT(1),               /* STOP=QUICK SPECIFIED FOR
                                            SAM-TCAM DCB             */
     3 DCBSTFLS    BIT(1),               /* STOP=FLUSH SPECIFIED FOR
                                            SAM-TCAM DCB             */
     3 IHA_DUM143  BIT(6);               /* RESERVED (TCAM-SAM)      */
 /*                     BSAM-BPAM INTERFACE                          */
 DECLARE 1 IHADCS38
       BASED(DCBPTR),
    2 IHA_DUMMAL  CHAR(72),
    2 DCBEOBR,                           /* ADDRESS OF END-OF-BLOCK
                                            MODULE FOR READ          */
     3 DCBNCP      BIT(8),               /* NUMBER OF CHANNEL PGMS.  */
                                         /* NUMBER OF READ OR WRITE
                                            REQUESTS WHICH MAY BE
                                            ISSUED PRIOR TO A CHECK,
                                            NUMBER OF IOB'S
                                            GENERATED.  (99 MAXIMUM) */
     3 DCBEOBRA    BIT(24),              /* ADDRESS OF END-OF-BLOCK
                                            MODULE FOR READ          */
    2 DCBEOBW     PTR,                   /* ADDRESS OF END-OF-BLOCK
                                            MODULE FOR WRITE. FOR
                                            BSAM CREATE BDAM
                                            PROCESSING OF  UNBLOCKED
                                            SPANNED RECORDS WITH
                                            BKTEK=R  SPECIFIED,
                                            ADDRESS OF SEGMENT WORK
                                            AREA  CONTROL BLOCK      */
    2 IHA_DUM145  FIXED(15) BIN,         /* DCBDIRCT - NUMBER OF BYTES
                                            USED IN LAST DIRECTORY
                                            BLOCK (RANGE 0-254)      */
    2 DCBLRECL    FIXED(15) BIN,         /* LOGICAL RECORD LENGTH    */
    2 DCBPOINT,                          /* ADDR OF NOTE/POINT MODULE*/
     3 DCBCNTRL,                         /* ADDRESS OF CNTRL MODULE  */
      4 DCBNOTE     PTR;                 /* ADDR OF NOTE/POINT MODULE*/
 /*                     QSAM INTERFACE                               */
 DECLARE 1 IHADCS40
       BASED(DCBPTR),
    2 IHA_DUMMAN  CHAR(72),
    2 DCBEOBAD,                          /* FOR SIMPLE BUFFERING,
                                            ADDRESS OF LAST  BYTE OF
                                            CURRENT BUFFER           */
     3 DCBLCCW     PTR,                  /* FOR EXCHANGE BUFFERING,
                                            ADDR OF LAST CCW IN LIST */
    2 DCBCCCW,                           /* FOR EXCHANGE BUFFERING
                                            ADDR OF CURR OR NEXT CCW */
     3 DCBRECAD,                         /* ADDRESS OF CURRENT OR
                                            NEXT LOGICAL RECORD      */
      4 DCBRECBT UNALIGNED,              /* FLAG BYTE                */
       5 DCBRCREL,                       /* RELSE MACRO HAS BEEN
                                            ISSUED  (QSAM WITH
                                            SIMPLE BUFFERING)        */
        6 DCBRCTRU BIT(1),               /* TRUNC MACRO HAS BEEN
                                            ISSUED (QSAM LOCATE MODE)*/
        6 DCBRCFGT BIT(1),               /* FIRST GET AFTER OPEN
                                            (QSAM LOCATE MODE)       */
        6 DCBRCF_DUMMY BIT(2),
       5 IHA_DUM148 BIT(4),              /* RESERVED                 */
      4 DCBRECA     BIT(24),             /* ADDRESS OF CURRENT OR
                                            NEXT LOGICAL RECORD      */
    2 IHA_DUM149  CHAR(1),               /* DCBQSWS - FLAG BYTE      */
    2 IHA_DUM150  BIT(8),                /* DCBDIRCQ - NUMBER OF BYTES
                                            USED IN LAST DIRECTORY
                                            BLOCK (RANGE 0-254)      */
    2 IHA_DUM151  FIXED(15) BIN,         /* DCBLRECL - LOG REC LENGTH*/
    2 IHA_DUM152,                        /* DCBCNTRL - ADDRESS OF
                                            CNTRL MODULE             */
     3 DCBEROPT UNALIGNED,               /* ERROR OPTION             */
      4 DCBERACC BIT(1),                 /* ACCEPT PERMANENT ERROR   */
      4 DCBERSKP BIT(1),                 /* SKIP PERMANENT ERROR     */
      4 DCBERABE BIT(1),                 /* ABNORMAL END OF TASK     */
      4 IHA_DUM153 BIT(5),               /* RESERVED                 */
     3 IHA_DUM154  BIT(24),              /* DCBCNTRA - ADDRESS OF
                                            CNTRL MODULE             */
    2 IHA_DUM155  CHAR(2),               /* RESERVED                 */
    2 DCBPRECL   FIXED(15) BIN,          /* FORMAT F RECORDS - BLOCK
                                            LENGTH
                                            FORMAT U RECORDS - MAXIMUM
                                            BLOCK LENGTH
                                            FORMAT V RECORDS -
                                             UNSPANNED RECORD FORMAT -
                                              MAXIMUM BLOCK LENGTH
                                             SPANNED RECORD FORMAT -
                                              PUT, NOT DATA MODE -
                                               MAXIMUM BLOCK LENGTH
                                              PUT, DATA MODE -
                                               DATA LENGTH
                                              GET - SEGMENT CONTROL
                                               CODE OF PREVIOUS SEGMENT
                                                                     */
    2 DCBEOB      PTR;                   /* ADDRESS OF END OF BLOCK
                                            MODULE                   */
./ ADD NAME=XTSOVAR  0100-07332-07332-0900-00006-00006-00000-SEB
   /* XTSOVAR program library subroutine */
   DECLARE XTSOVAR EXTERNAL ENTRY(
           CHAR(*),      /* R(EAD) or W(RITE)               */
           CHAR(*) VAR,  /* The name of the CLIST variable  */
           CHAR(*) VAR)  /* The value to be accessed or set */
                       ; /* Note: Do not specify OPTIONS!   */
