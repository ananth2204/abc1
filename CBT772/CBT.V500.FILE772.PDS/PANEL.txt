./ ADD NAME=TXVX     0100-07332-07332-0900-00034-00034-00000-SEB
%TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
%SELECTION ===>_ZCMD                                                           +
%
%                     -----------------------------------
                      |      VIRTUAL STORAGE DISPLAY    |
                      -----------------------------------

+This option permits the system programmer to "browse" live virtual storage in
 his/her own address space (as well as common areas like the nucleus, PLPA,
 CVT, etc.).  Storage is displayed in 16-byte rows in pseudo-dump format.

+Storage integrity is supported across 256-byte blocks provided that
 wraparound does not occur.  In other words, when viewing a section of
 volatile storage, the first 256 bytes, the next 256 bytes and the data
 following the second group of 256 bytes may or may not reflect the same
 machine status, but within each 256-byte group the data will be correct.

+The following topics are presented in sequence, or may be selected by number:

  %1  DISPLAY FORMAT....+Explanation of the display.
  %2  SCROLLING.........+Manipulating the display.
  %3  VALUE FORMATS.....+Valid formats for addresses, offsets, etc.
  %4  PRIMARY COMMANDS..+What can be entered on the command input line.
  %5  NEW FEATURES......+Version 2 changes.
)PROC
 &ZSEL = TRANS( &ZCMD
                1,TXVX1
                2,TXVX2
                3,TXVX3
                4,TXVX4
                5,TXVX5
                *,'?'
                )
)END
./ ADD NAME=TXVX1    0100-07332-07332-0900-00026-00026-00000-SEB
%TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
%SELECTION ===>_ZCMD                                                           +
%
%                     -----------------------------------
                      |      DISPLAY FORMAT             |
                      -----------------------------------
+
 Virtual storage is displayed in rows of 16 bytes in pseudo-dump format (in
 other words, 4 4-byte hex entries and a 16-byte EBCDIC translation line).  In
 addition, two offset fields are displayed on the left side of the screen:

%Virtual offset+- this is the rightmost of the two fields, and identifies the
 virtual address of the data.

%Relative offset+- this is the leftmost of the two fields, and identifies the
 relative offset (positive or negative) of the data from an origin point.  The
 origin point is set to zero at entry to this option and is also set to zero
 when an address is entered (it may also be explicitly changed by the RESET or
 BASE command).  It is maintained during a scrolling operation, so that you can
 find a control block, set the origin of the control block to zero and then
 scroll through the display using the offset fields to indicate where you are in
 the control block.
%Note:+If the offset overflows, the origin is reset to zero.
)PROC
 &ZCONT = TXVX10
)END
./ ADD NAME=TXVX10   0100-07332-07332-0900-00025-00025-00000-SEB
%TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
%SELECTION ===>_ZCMD                                                           +
%
%                     -----------------------------------
                      |   DISPLAY FORMAT (CONTINUED)    |
                      -----------------------------------
+
 Virtual storage may also be displayed in%binary+format (rows of 4 bytes in
 binary, hexadecimal and character format), including the same two offset
 fields.  To switch to this format, enter the%BINARY ON+command.  To return to
 normal display format, enter%BINARY OFF.+

%Note:+The following forms are equivalent:

%      BINARY ON  =  BIN ON  =  BINARY  =  BIN
       BINARY OFF  =  BIN OFF
+
 In both formats, attempts will be made to show as much storage as is
 accessible.  If not all the storage is accessible, the maximum number of lines
 that can be shown will be shown.  You may also use the%SHOW+command to control
 the number of display lines;%SHOW number+will set the number of lines displayed
 to "number", and%SHOW+with no operand will restore the full display.
)PROC
 &ZCONT = TXVX11
)END
./ ADD NAME=TXVX11   0100-07332-07332-0900-00025-00025-00000-SEB
)BODY DEFAULT(?+_)
?TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
?SELECTION ===>_ZCMD                                                           +
?
?                     -----------------------------------
                      |   DISPLAY FORMAT (CONTINUED)    |
                      -----------------------------------
+
 You may vary the intensity of the display areas as follows:

?%DATAINT +-  show data area in?high intensity,+addresses in low intensity
?%ADDRINT +-  show data area in low intensity, addresses in?high intensity+
?%ALLINT  +-  show entire display in?high intensity+
?%NOINT   +-  show entire display in low intensity

+where "data area" refers to the hexadecimal display when binary mode
 is off, and to the binary display when binary mode is on.

+The EBCDIC (character) portion of the display, as well as the
 hexadecimal portion in binary mode, is always of the same intensity
 as the address portion.

+The settings are remembered in your user profile.
)PROC
)END
./ ADD NAME=TXVX2    0100-07332-07332-0900-00024-00024-00000-SEB
%TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
%SELECTION ===>_ZCMD                                                           +
%
%                     -----------------------------------
                      |        SCROLLING                |
                      -----------------------------------

   %UP+and%DOWN+commands or PF keys specify the number of%lines+to move
    the display (a line is 16 bytes of data except in binary mode, in
    which case it is 4 bytes).  The default scroll amount may be
    temporarily overridden in the COMMAND field or permanently reset.
    You may enter PAGE, HALF, CURSOR (CSR), or DATA, as well as any
    numeric between 1 and 9999.  A MAX amount is invalid.

   %LEFT+and%RIGHT+commands or PF keys specify the number of%bytes+ to
    move the display.  If no byte count is specified, the display is
    moved%1 byte+in the specified direction.  The format for the count
    on the LEFT and RIGHT commands is described in the VALUE FORMATS
    section of this tutorial.

    In all scrolling cases, the origin is unchanged; therefore, the
    offset field changes dynamically.
)PROC
)END
./ ADD NAME=TXVX3    0100-07332-07332-0900-00022-00022-00000-SEB
%TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
%SELECTION ===>_ZCMD                                                           +
%
%                     -----------------------------------
                      |         VALUE FORMATS           |
                      -----------------------------------

+   Values used as addresses or offsets may be entered in hexadecimal
    or decimal format.

    Hex values consist of from 1 to 8 hex characters (0-9, A-F).
    If the value is being used as an address (not an offset), an
    optional period may be included at the end (this period is
    required if the address is the operand of the WHERE command).

    Decimal values consist of from 1 to 10 decimal digits (0-9)
    followed by the letter N.

    In most cases the maximum usable value is 2147483647 (hex 7FFFFFFF).
    However, not all virtual addresses will be accessible.
)PROC
)END
./ ADD NAME=TXVX4    0100-07332-07332-0900-00029-00029-00000-SEB
)ATTR DEFAULT(!+_)
)BODY
!TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
!SELECTION ===>_ZCMD                                                           +
!
!                     -----------------------------------
                      |      PRIMARY COMMANDS           |
                      -----------------------------------

+The following may be entered on the primary command line:

 (1) Any valid virtual address (see the VALUE FORMATS section of this
     tutorial for description), or label (see the LABELS section).
     This moves the display and resets the origin to the new address.

     Alternatively, an offset value preceded by a plus or minus sign
     may be entered.  This causes the display to be moved so that the
     specified offset from the origin becomes the new top line address.

     Any of the above may be followed by one or more percent signs!%+or question
     marks!?+indicating levels of indirect addressing (% = 24-bit, ? = 31-bit).
     Specifying %'s or ?'s alone begins indirection from the top line address.

     If the storage is fetch protected, no change in the display takes place.

                             - continued -
)PROC
 &ZCONT = TXVX40
)END
./ ADD NAME=TXVX40   0100-07332-07332-0900-00024-00024-00000-SEB
)ATTR DEFAULT(?+_)
)BODY
?TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
?SELECTION ===>_ZCMD                                                           +
?
?                     -----------------------------------
                      |      PRIMARY COMMANDS           |
                      -----------------------------------

+(2) The?LOCATE+command, which specifies an address as described in
     the preceding tutorial screen and whose processing is identical.
     This command may be abbreviated to LOC (but not L).

+(3) The?BASE+command, which alters the origin address so that the
     offsets displayed are from the address specified on this command
     (which is in a format similar to that for LOCATE but with no
     indirection permitted).  If no operand is specified on this
     command, the origin is reset to zero (i.e. the current address
     is used as the base).

                             - continued -
)PROC
 &ZCONT = TXVX41
)END
./ ADD NAME=TXVX41   0100-07332-07332-0900-00027-00027-00000-SEB
%TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
%SELECTION ===>_ZCMD                                                           +
%
%                     -----------------------------------
                      |  PRIMARY COMMANDS - CONTINUED   |
                      -----------------------------------
+
 (4) The%WHERE+command, if entered with a load module name, displays
     the location of the module in the current job pack area and/or the
     link pack area (PLPA or MLPA).  If entered with an address
     (which%must+be 1 to 8 hex characters followed by a period), the
     WHERE command displays the name of the module in the JPA or LPA
     which occupies the storage at that address.

     If WHERE is entered with no operands, the entire contents of the
     JPA, LPA and MLPA are displayed.

 (5) The%RESET+command, entered with a value (see VALUE FORMATS)
     optionally preceded by a plus or minus sign, resets the origin
     so that the offset of the current top line is set to the value
     specified on the command.  If no operand is entered, the origin
     is set to zero.

                                 - continued -
)PROC
 &ZCONT = TXVX42
)END
./ ADD NAME=TXVX42   0100-07332-07332-0900-00024-00024-00000-SEB
%TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
%SELECTION ===>_ZCMD                                                           +
%
%                     -----------------------------------
                      |  PRIMARY COMMANDS - CONTINUED   |
                      -----------------------------------
+
 (6) The%LOAD+command, entered with a load module name, brings a load
     module into virtual storage via the MVS LOAD macro.  Upon
     successful completion of the operation, the display is reset
     to the%entry point+of the loaded module.

 (7) The%DELETE+command, entered with a load module name, issues the
     MVS DELETE macro to decrease the responsibility count for the
     specified load module and, if possible, remove it from storage.
     The user should be sure to DELETE all modules brought into
     virtual storage via the LOAD command; otherwise these modules
     will remain in storage for the duration of the logical screen
     session, possibly causing insufficient storage to be available
     for other functions.
                             - continued -
)PROC
 &ZCONT = TXVX43
)END
./ ADD NAME=TXVX43   0100-07332-07332-0900-00027-00027-00000-SEB
)BODY DEFAULT(@+_)
@TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
@SELECTION ===>_ZCMD                                                           +
@
@                     -----------------------------------
                      |  DEFINING AND USING LABELS      |
                      -----------------------------------
+
@Labels+may be defined and referenced in a session.  To define a label, enter a
 period@.+followed by a 1-to-8-character label name (the name must consist of
 alphanumerics and nationals with the first character alphabetic or national).

 The label will be assigned the current top line display address.

 To use a label, simply enter the label name (or@LOCATE labelname+)@without+the
 period.  The display will be set to the requested location.  Percent sign(s)@%+
 or question marks@?+may follow the name if indirect addressing is desired
 (% for 24-bit addresses, ? for 31-bit addresses).

 To delete a label, use the@DROP+command (enter: DROP labelname).

 To list your currently defined labels, enter the@LABELS+command.

                               - continued -
)PROC
 &ZCONT = TXVX44
)END
./ ADD NAME=TXVX44   0100-07332-07332-0900-00023-00023-00000-SEB
%TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
%SELECTION ===>_ZCMD                                                           +
%
%                -------------------------------------------
                 |  DEFINING AND USING LABELS (CONTINUED)  |
                 -------------------------------------------
+
 If a label name conflicts with a command name, use the LOCATE command, e.g.

   LOC BASE

 If the syntax of a label name is such that it could be interpreted as an
 address, it will be treated as a label if you have defined it as one; otherwise
 it is considered an address.  To use the address, include a period, e.g.

   LOC ABC4.

 If a label already exists, it cannot be reassigned by entering its name with a
 period preceding it.  If you want to override an existing label definition,
 DROP it first, or precede it with an exclamation mark%!+instead of a period.
)PROC
 &ZCONT = TXVX45
)END
./ ADD NAME=TXVX45   0100-07332-07332-0900-00022-00022-00000-SEB
)ATTR DEFAULT(%!_)
)BODY
%TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
%SELECTION ===>_ZCMD                                                           !
%
%                     -----------------------------------
                      |  OTHER PRIMARY COMMANDS         |
                      -----------------------------------
!
 An internal stack of up to 16 previously referenced addresses is remembered; if
 you wish to return to the previous address (perhaps because you entered a
 garbage address), enter the%BACK!command to return.

 Scrolling does not affect the address portion of the stack, although it does
 update the origin value associated with the current stack entry.  If you wish
 to return to the base location, enter the command%+0!to scroll to it, not the
 BACK command.

 To clear the internal stack, enter the%CLEAR!command.
)PROC
 &ZCONT = TXVX5
)END
./ ADD NAME=TXVX5    0100-07332-07332-0900-00025-00025-00000-SEB
)BODY DEFAULT(!+_)
!TUTORIAL ------------------- VIRTUAL STORAGE DISPLAY ----------------- TUTORIAL
!SELECTION ===>_ZCMD                                                           +
!
!                     -----------------------------------
                      | NEW FEATURES WITH VERSION 2     |
                      -----------------------------------

+XVX version 2 now has the following features to support MVS/XA and ISPF V.2:

 (1) 31-bit addresses are supported.  The 31-bit indirection symbol!?+
     is supported along with the 24-bit indirection symbol!%.+

 (2) The scroll amount field may now be specified as any valid normal
     scroll amount with the exception of MAX - i.e.!PAGE, HALF, CSR
    +and!DATA+are all acceptable.  The initial scrolling default is PAGE,
     but you may override this and it will be remembered in your profile.

 (3) The LEFT and RIGHT commands (and PF keys) now default to a value of
    !one byte+rather than taking their default value from the scroll amount.

 (4) New commands are provided to selectively alter the intensity of
     different parts of the display.
)PROC
)END
./ ADD NAME=XVX      0100-07332-07332-0900-00059-00059-00000-SEB
)ATTR
 |  AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)
 \  TYPE(TEXT) INTENS(&XVXI01) COLOR(&XVXC01)
 01 TYPE(DATAOUT) INTENS(&XVXI01)       /* For address and non-data fields */ +
    COLOR(&XVXC01)
 02 TYPE(DATAOUT) INTENS(&XVXI02)       /* For the primary data field      */ +
    COLOR(&XVXC02)
)BODY
%XVX --------------------- VIRTUAL STORAGE DISPLAY -----------------------------
%ADDRESS ==>_ZCMD                                             %SCROLL ===>_Z   +
+                                                                              \
|VX                                                                            |
)INIT
 .ZVARS = '(XVXAMT)'
 .HELP = TXVX
 IF (&XVXAMT = '')
  &XVXAMT = 'PAGE'
 IF (&XVXI01 = '')
  &XVXI01 = 'HIGH'
 IF (&XVXI02 = '')
  &XVXI02 = 'LOW'
 IF (&XVXC01 = '')
  &XVXC01 = 'YELLOW'
 IF (&XVXC02 = '')
  &XVXC02 = 'GREEN'
)REINIT
 REFRESH(VX,ZCMD,XVXAMT)
 .ATTRCHAR(\) = 'INTENS(&XVXI01) COLOR(&XVXC01)'
 .ATTRCHAR(01) = 'INTENS(&XVXI01) COLOR(&XVXC01)'
 .ATTRCHAR(02) = 'INTENS(&XVXI02) COLOR(&XVXC02)'
)PROC
 &VXLVLIN = LVLINE(VX)
 IF (&ZCMD = '%DATAINT')
  &ZCMD = ''
  &XVXI01 = 'LOW'
  &XVXI02 = 'HIGH'
  &XVXC01 = 'BLUE'
  &XVXC02 = 'PINK'
 IF (&ZCMD = '%ADDRINT')
  &ZCMD = ''
  &XVXI01 = 'HIGH'
  &XVXI02 = 'LOW'
  &XVXC01 = 'YELLOW'
  &XVXC02 = 'GREEN'
 IF (&ZCMD = '%NOINT')
  &ZCMD = ''
  &XVXI01 = 'LOW'
  &XVXI02 = 'LOW'
  &XVXC01 = 'TURQ'
  &XVXC02 = 'TURQ'
 IF (&ZCMD = '%ALLINT')
  &ZCMD = ''
  &XVXI01 = 'HIGH'
  &XVXI02 = 'HIGH'
  &XVXC01 = 'WHITE'
  &XVXC02 = 'WHITE'
 VPUT (XVXAMT XVXI01 XVXI02) PROFILE
)END
 Comment in lower case to preserve CAPS OFF.
./ ADD NAME=XVXERROR 0100-07332-07332-0900-00026-00026-00000-SEB
%---------------- XVX - VIRTUAL STORAGE DISPLAY ERROR --------------------------
%COMMAND ==>_ZCMD                                                              +

%
%       * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
%       * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
%       * *                                                           * *
%       * *    One of the following errors occurred in panel XVX:     * *
%       * *                                                           * *
%       * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
%       * *                                                           * *
%       * *      No dynamic area named VX existed in the panel.       * *
%       * *                                                           * *
%       * * The number of lines that XVX tried to display exceeds 40. * *
%       * * XVX cannot support more than 40 lines of scrollable area  * *
%       * * in a logical screen display.                              * *
%       * *                                                           * *
%       * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
%       * *                                                           * *
%       * *  Press the ENTER key to terminate this option.            * *
%       * *                                                           * *
%       * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
%       * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
)INIT
)PROC
)END
