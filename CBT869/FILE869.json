{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013138000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 17224298, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE869.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 17224298, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 17224298, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE869.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x01\\x06\\x07'", "DS1TRBAL": "b'`\\xf4'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x07`\\x00\\t\\x07r\\x00\\x01\\x01\\x07'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04T\\x00\\x18\\x01\\x12\\x12\\x1f\\x01\\x12\\x12\\x1f\\x12\\x01\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf4@@@'", "ispf": {"version": "04.84", "flags": 0, "createdate": "2012-04-30T00:00:00", "modifydate": "2012-04-30T12:01:18", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-484"}, "text": "REGULAR CBT TAPE - VERSION 484    FILE:  869\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT484.FILE869\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 9 MEMBERS COUNTED; CUMULATIVE SIZE IS 163,926 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   04/30/12    12:01:18    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE01": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x01\\x12\\x12\\x1f\\x01\\x12\\x12\\x1f\\x11X\\x00\\n\\x00\\n\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-04-30T00:00:00", "modifydate": "2012-04-30T11:58:08", "lines": 10, "newlines": 10, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  I am going to sent you a getmain freemain trace processor\n          and ipcs driver\nFrom:     \"Ott, Jan\" <Jan_Ott@bmc.com>\nDate:     4/25/2012 4:17 PM\nTo:       <sbgolob@cbttape.org>\n\nIt processes getmain freemain traces reporting on leftover\nmemory and interrogates one or more reference svcdumps for\nleftover memory contents and identification of allocation psw's.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#DOC": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x08\\x01\\x12\\x11\\x8f\\x01\\x12\\x11\\x8f\\x15\\x02\\x004\\x00%\\x00\\x12\\xd1\\xc3\\xd6@@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2012-04-27T00:00:00", "modifydate": "2012-04-27T15:02:08", "lines": 52, "newlines": 37, "modlines": 18, "user": "JCO"}, "text": " all source is in dsn=jcogfs01.asm(jcogfs01)\n\n  pdse listing may be restored via tso command:\n\n     receive inda('jcogfs01.asm(listxmi)')\n\n  pdse object may be restored via tso command:\n\n     receive inda('jcogfs01.asm(objxmi)')\n\n  pdse load lib may be restored via tso command:\n\n     receive inda('jcogfs01.asm(loadxmi)')\n\n pgm=jcogfs01 reads gtf USR trace records from the zos getmain freemain\n trace file recorded with zos gtf, -1- simulates the getting and freeing\n of the virtual storage, lists errors and mismatches, and reports on the\n remaining memory -2- jcogfs01 then iterates using ipcs to scan any\n svcdumps ( JCL indicated ) and/or the active system in order to list\n unique non-zero pages of remaining storage and the program psws used to\n obtain the storage. jcogfs01 also scans backwards in the dump storage\n for the most common copyright or module separator artifacts in order to\n help identify the storage allocator.\n\n jcogfs01 needs ETF2 instructions and long displacement facility else\n abend0c1's may occur.  jcogfs01 uses arithmetic displacements.\n jcogfs01 requires 64bit storage. Currently 64bit usage is limited to\n 1024MB+129MB+(trace dependent amount usually only a few MBs).  jcogfs01\n is set to max plist level for the IARV64 macro.\n\n a getmain freemain trace can be initiated by placinga DIAGVS member in\n zos's parmlib and setting this memebr actibe via a \"set\" command:\n\n   command: t diag=vs\n\n   parmlib member (DIAGVS) example:  VSM TRACE GETFREE(ON)\n\n then start a Gtf proc to records TYPE=USR trace records.\n\n stop gtf and use the trace dataset in the INFILE dd statemnt of the\n jcl for pgm=jcogfs01.\n\n jcogfs01 will issue user abend codes unique to each failure condition.\n do a f \"abend1\" for abendu0001 in the listing to track down the cause o\n abend 1.\n\n the included assemble, object and load are at zos 1.11. IARV64 plist\n version is set to max so ABENDDC2-..0032.. may result on lower systems\n execution when complied on higher level systems.\n\n the IPCS verbx phase needs access to view dump memory, so make sure\n racf access to facility blsactv.addrspac is acc(read) if it is defined.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#JCL": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x19\\x01\\x12\\x11\\x8f\\x01\\x12\\x11\\x8f\\x10F\\x00\\x86\\x00\\x86\\x00\\x00\\xd1\\xc3\\xd6@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-04-27T00:00:00", "modifydate": "2012-04-27T10:46:19", "lines": 134, "newlines": 134, "modlines": 0, "user": "JCO"}, "text": "//JCOSD   JOB  (5413,507),\n//             '45-OTT',\n//             CLASS=A,\n//             MSGCLASS=X,REGION=0M,\n//             RESTART=RESTART,\n//             COND=(0,LT)\n//**COMMENT JCOGFSJ1 - ABENDDC2-..0032.. IARV64 PLIST VERSION TOO HIGH\n//**COMMENT JCOGFSJ1 -          REASSEMBLE ON LESSER LEVEL OF MACROS\n//**COMMENT JCOGFSJ1 -          IARV64 VERSION 4 = ZOS 1.13\n//**COMMENT JCOGFSJ1 -\n//**COMMENT JCOGFSJ1 -\n//**COMMENT JCOGFSJ1 -\n//*\n//*RESTART  EXEC PGM=IEFBR14\n//JCOASM   PROC ASMOPT='NOTEST'\n//*                  USE  RENT FOR RENT CHECK\n//*                  USE  SYSPARM(JCO) TO ACTIVATE DBC\n//C        EXEC PGM=ASMA90,\n//   PARM='OBJECT,NODECK,BATCH,TERM,LIST(133),GOFF(ADATA),&ASMOPT'\n//SYSLIB   DD   DSN=SYS1.MACLIB,DISP=SHR VOL=REF=SYS1.LINKLIB\n//         DD   DSN=SYS1.MODGEN,DISP=SHR VOL=REF=SYS1.LINKLIB\n//SYSUT1   DD   DSN=&&SYSUT1,SPACE=(4096,(120,120),,,ROUND),UNIT=VIO,\n//             DCB=BUFNO=1\n//SYSPRINT DD   DSN=JCO.JCOGFS01.PDSELIST(&MEMBER),DISP=SHR\n//SYSPUNCH DD   SYSOUT=*\n//SYSLIN   DD   DSN=JCO.JCOGFS01.PDSEOBJ(&MEMBER),DISP=SHR\n//SYSIN    DD   DSN=JCO.JCOGFS01.ASM(&MEMBER),DISP=SHR\n//SYSTERM  DD   SYSOUT=*\n//         PEND\n//*\n//JCOLNK   PROC LNKOPT='NOTEST'\n//L        EXEC PGM=HEWL,PARM='MAP,LET,LIST,XREF,&LNKOPT'\n//SYSLIN   DD   DSN=JCO.JCOGFS01.PDSEOBJ(&MEMBER),DISP=SHR\n//SYSLMOD  DD   DSN=JCO.JCOGFS01.PDSE,DISP=SHR\n//SYSUT1   DD   DSN=&&SYSUT1,SPACE=(1024,(120,120),,,ROUND),UNIT=VIO,\n//             DCB=BUFNO=1\n//SYSPRINT DD   SYSOUT=*\n//         PEND\n//*\n//ASM001   EXEC PROC=JCOASM,MEMBER=JCOGFS01, ASMOPT='RENT'\n//*            ASMOPT='RENT,SYSPARM(JCO),TEST'\n//             ASMOPT='RENT,SYSPARM(XCO),TEST'\n//*\n//LNK001   EXEC PROC=JCOLNK,MEMBER=LNKGFS01,\n//             LNKOPT='RENT,REUS'\n//*            LNKOPT='REUS,TEST'\n//*\n//RESTART  EXEC PGM=IEFBR14\n//DELETE   EXEC DELETE,DSN='JCO.NOUACC.GFS1'\n//DELETE   EXEC DELETE,DSN='JCO.SYSMDUMP'\n//CLIST    EXEC PGM=IEBGENER\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   DUMMY\n//SYSUT2   DD   DSN=&&CLIST(JCOGFSC1),\n//             DISP=(,PASS),\n//             UNIT=SYSALLDA,\n//             SPACE=(CYL,(1,1,1)),\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//SYSUT1   DD   *\nPROC 1 &DUMP\nCONTROL MSG LIST SYMLIST NOPROMPT FLUSH END(ENDO)\nIF &DUMP EQ &STR(ACTIVE) THEN DO\nIPCS\nSETDEF ACTIVE NOCONFIRM\nVERBX JCOGFSI1\nDROPDUMP\nEND\nENDO\nIF &DUMP NE &STR(ACTIVE) THEN DO\nIPCS\nSETDEF DDN(&DUMP) NOCONFIRM\nVERBX JCOGFSI1\nDROPDUMP\nEND\nENDO\n/*\n//*TEST     EXEC PGM=XDCCALLA,PARM='JCOGFS01'\n//TEST     EXEC PGM=IKJEFT01\n//* MAKE SURE RACF ACCESS TO FACILITY BLSACTV.ADDRSPAC\n//STEPLIB  DD   DISP=SHR,DSN=JCO.JCOGFS01.PDSE\n//*INFILE   DD   DISP=SHR,DSN=JCO.NOUACC.TRACE.ADDR2\n//INFILE   DD   DISP=SHR,DSN=JCO.NOUACC.TRACE.DB2A\n//*INFILE   DD   DISP=SHR,DSN=JCO.NOUACC.TRACE.SYSM\n//*INFILE   DD   DISP=SHR,DSN=JCO.NOUACC.TRACE.SYSM.SAVE\n//*DUMP0001 DD DISP=SHR,DSN=CSGI.SVCDUMP.SYSM.D120330.T153026.S00031\n//*DUMP0001 DD DISP=SHR,DSN=CSGI.SVCDUMP.SYSM.D120330.T153146.S00032\n//*DUMP0001 DD DISP=SHR,DSN=CSGI.SVCDUMP.SYSM.D120330.T143115.S00026\n//*DUMP0001 DD DISP=SHR,DSN=CSGI.SVCDUMP.DB2A.D120314.T144314.S00040\n//DUMP0001 DD DISP=SHR,DSN=CSGI.SVCDUMP.DB2A.D120308.T164518.S00097\n//DUMP0002 DD DISP=SHR,DSN=CSGI.SVCDUMP.DB2A.D120307.T040537.S00052\n//*DUMP0003 DD DISP=SHR,DSN=CSGI.SVCDUMP.DB2A.D120306.T161857.S00050\n//ACTIVE   DD DUMMY\n//*JCOGFS01 DD   SYSOUT=*\n//JCOGFS01 DD   DSN=JCO.NOUACC.GFS1,\n//             UNIT=SYSALLDA,\n//             SPACE=(CYL,(250,90)),\n//             DISP=(,CATLG)\n//XDCCDF   DD   DUMMY\n//XDCRENT8 DD   DUMMY\n//XDCREUS8 DD   DUMMY\n//SYSMDUMP DD   DSN=JCO.SYSMDUMP,\n// SPACE=(CYL,(400,100)),UNIT=SYSALLDA,\n// DISP=(,CATLG)\n//SYSTSPRT DD   SYSOUT=*\n//SYSTSIN  DD   *\n    CALL 'JCO.JCOGFS01.PDSE(JCOGFS01)'\n/*\n//* XDCCALL  JCOGFS01\n//* CALL 'JCO.JCOGFS01.PDSE(JCOGFS01)'\n//SYSPROC  DD   DSN=&&CLIST(JCOGFSC1),DISP=(OLD,PASS)\n//IPCSDDIR DD   DSN=JCO.TEMP.IPCS2,\n//             DATACLAS=DATACLAS,\n//             MGMTCLAS=STANDARD,\n//             STORCLAS=AUSCLASS,\n//             RECORG=KS,\n//             KEYLEN=128,\n//             KEYOFF=000,\n//             AVGREC=U,\n//             DISP=(NEW,DELETE,DELETE),\n//             SPACE=(CYL,(10,10)),\n//             LRECL=24510,\n//             AMP=('AMORG',\n//             'BUFND=100',\n//             'BUFNI=100',\n//             'CROPS=NRC',\n//             'FRLOG=NONE',\n//             'ACCBIAS=DW',\n//             'SMBDFR=Y',\n//             'SMBHWT=99',\n//             'SMBVSP=2M',\n//             'MSG=SMBBIAS',\n//             'RMODE31=ALL')\n//*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE869": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04T\\x00\\x02\\x01\\x12\\x12\\x1f\\x01\\x12\\x12\\x1f\\x12\\x01\\x00\\x0b\\x00\\x0b\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf4@@@'", "ispf": {"version": "04.84", "flags": 0, "createdate": "2012-04-30T00:00:00", "modifydate": "2012-04-30T12:01:02", "lines": 11, "newlines": 11, "modlines": 0, "user": "CBT-484"}, "text": "//***FILE 869 is from Jan Ott and contains a program to do a        *   FILE 869\n//*           GETMAIN-FREEMAIN trace to see track the origin of     *   FILE 869\n//*           storage requests.                                     *   FILE 869\n//*                                                                 *   FILE 869\n//*           email:  Jan_Ott@bmc.com                               *   FILE 869\n//*                                                                 *   FILE 869\n//*     It processes getmain freemain traces, reporting on          *   FILE 869\n//*     leftover memory and interrogates one or more reference      *   FILE 869\n//*     svcdumps for leftover memory contents and identification    *   FILE 869\n//*     of allocation psw's.                                        *   FILE 869\n//*                                                                 *   FILE 869\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCOGFS01": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01K\\x00&\\x01\\x115_\\x01\\x12\\x06_\\x15\\t\\x0cd\\x0b\\xd2\\x01e\\xd1\\xc3\\xd6\\xf1@@@@@@'", "ispf": {"version": "01.75", "flags": 0, "createdate": "2011-12-21T00:00:00", "modifydate": "2012-03-05T15:09:26", "lines": 3172, "newlines": 3026, "modlines": 357, "user": "JCO1"}, "text": "brc      opsyn brcl\nbras     opsyn brasl\nnop      opsyn jlnop\nah       opsyn ahy\nal       opsyn aly\na        opsyn ay\ncds      opsyn cdsy\nch       opsyn chy\ncli      opsyn cliy\nclm      opsyn clmy\ncl       opsyn cly\ncs       opsyn csy\ncvb      opsyn cvby\ncvd      opsyn cvdy\nc        opsyn cy\nicm      opsyn icmy\nic       opsyn icy\nlae      opsyn laey\nlam      opsyn lamy\nla       opsyn lay\nld       opsyn ldy\nle       opsyn ley\nlh       opsyn lhy\nlm       opsyn lmy\nlra      opsyn lray\nl        opsyn ly\nmf       opsyn mfy\nmh       opsyn mhy\nms       opsyn msy\nmvi      opsyn mviy\nni       opsyn niy\nn        opsyn ny\noi       opsyn oiy\no        opsyn oy\nsh       opsyn shy\nsl       opsyn sly\nstam     opsyn stamy\nstcm     opsyn stcmy\nstc      opsyn stcy\nstd      opsyn stdy\nste      opsyn stey\nsth      opsyn sthy\nstm      opsyn stmy\nst       opsyn sty\ns        opsyn sy\ntm       opsyn tmy\nxi       opsyn xiy\nx        opsyn xy\n         copy  ieabrc\njco_srst opsyn srst\n         macro\n&name    srst  &op1,&op2\n&lname   setc  'jco'.'&sysndx'.'srst'\n&lname   ds    0h\n&name    jco_srst &op1,&op2\n         jlo   &lname\n         mend\njco_troo opsyn troo\n         macro\n&name    troo  &op1,&op2,&op3\n&lname   setc  'jco'.'&sysndx'.'troo'\n&lname   ds    0h\n&name    jco_troo &op1,&op2,&op3\n         jlo   &lname\n         mend\njco_trot opsyn trot\n         macro\n&name    trot  &op1,&op2,&op3\n&lname   setc  'jco'.'&sysndx'.'trot'\n&lname   ds    0h\n&name    jco_trot &op1,&op2,&op3\n         jlo   &lname\n         mend\nJCOGFS01 title 'gfs matchup'\nJCOGFS01 start\nJCOGFS01 amode any\nJCOGFS01 rmode any\n         sysstate archlvl=2,amode64=YES\nr0       equ   0\nr1       equ   1\nr2       equ   2\nr3       equ   3\nr4       equ   4\nr5       equ   5\nr6       equ   6\nr7       equ   7\nr8       equ   8\nr9       equ   9\nbasereg  equ   12                      base registers\nsavereg  equ   13                      save area register.\nretreg   equ   14                      caller's return address.\nentryreg equ   15                      JCOGFS01's entry address.\nr14      equ   14                      work reg\nretcode  equ   15                      return code.\nr15      equ   15                      work reg\n         jlu   prologue                branch around eyecatcher.\n         dc    cl8'JCOGFS01'           module name.\n         dc    cl8'&sysdate'           assemble date.\nprologue bakr  r14,0\n         sam64\n         larl  basereg,lasth\n         algfi basereg,1\n         using lasth+1,basereg\nparm0000 ds    0h                      parse parms\n         ly    r0,=a(storagel)\n         storage OBTAIN,length=(r0),bndry=PAGE,loc=(ANY,ANY)\n         sty   savereg,savearea-storage+4(,r1) addr of caller's save\n         sty   r1,8(,savereg)          save address of my save area.\n         lay   savereg,savearea-storage(,r1) my savearea\n         using savearea,savereg\n         mviy  storage_id+0,c'g'\n         mviy  storage_id+1,c'f'\n         mviy  storage_id+2,c's'\n         mviy  storage_id+3,c'0'\n         mviy  storage_id+4,c'1'\n         mviy  savearea+4,c'F'\n         mviy  savearea+5,c'6'\n         mviy  savearea+6,c'S'\n         mviy  savearea+7,c'A'\n         eregg r1,r1\n         stg   r1,parm@\n         aif   ('&sysparm' eq 'JCO').jco\n         jlu   parm0010\n         ago   .xdcload\n.jco     anop\n         jlnop   parm0010\n.xdcload anop\n         load  ep=XDC\n         lay   r14,w_estaex\n         lay   r15,m_estaex\n         mvc   0(w_estaex_len,r14),0(r15)\n         estaex (0),mf=(E,w_estaex)\nparm0010 lay   r0,0                    zero\n         sty   r0,workflgs             zero\n         oiy   workflg0,flg0_nozeroes\n         sty   r0,comprc               assume zero cond code\n         ltg   r1,parm@\n         jlz   parm9000\n         llgt  r2,0(,r1)\n         lay   r3,0\n         icmy  r3,b'0011',0(r2)\n         jlz   parm9000\n         cliy  2(r2),c'1'\n         jlne  parm1000\n         oiy   workflg0,flg0parm1\n         jlu   parm9000\nparm1000 cliy  2(r2),c'2'\n         jlne  parm1010\n         oiy   workflg0,flg0parm2\n         jlu   parm9000\nparm1010 cliy  2(r2),c'3'\n         jlne  parm9000\n         oiy   workflg0,flg0parm3\nparm9000 ds    0h\n         jlu   parm9999\n         ds    0fd\n         ltorg\nm_estaex estaex 0,mf=L\nm_estaex_len equ *-m_estaex\nstorage  dsect\nstorageb equ   *\nw_ipcsdata ds  xl4096                last ipcs page buffer\nstorage_id ds  cl8\nparm@    ds    ad\n         ds    c\nworkflgs ds    0f\nworkflg0 ds    x\nflg0parm1 equ  x'80'\nflg0parm2 equ  x'40'\nflg0parm3 equ  x'20'\nflg0_nozeroes equ x'01'\nworkflg1 ds    x\nworkflg2 ds    x\nworkflg3 ds    x\n         ds    0fd\nw_estaex estaex 0,mf=L\nw_estaex_len equ *-w_estaex\nJCOGFS01 csect ,\nparm9999 ds    0h\nntcr0000 ds    0h                      get jscbauth nonstandard if req\n         sam31\n         sysstate archlvl=2,amode64=NO\n         lay   r2,=a(ieant_home_level)\n         lay   r3,=cl16'JCOGFS01'\n         lay   r14,nt_JCOGFS01\n         mvc   0(8,r14),0(r3)\n******** lay   r0,storage\n         lay   r0,storageb\n         sty   r0,nt_storage@\n         lay   r0,0\n         sty   r0,nt_zero\n         lay   r4,nt_token\n         lay   r5,=a(ieant_nopersist)\n         lay   r14,w_call\n         lay   r15,m_call\n         mvc   0(w_call_len,r14),(r15)\n         lay   r6,nt_return\n         lay   r7,w_call\n         llgt  r15,cvtptr\n         llgt  r15,cvtcsrt-cvt(r15,0)\n         llgt  r15,X'14'(r15,0)\n         llgt  r15,X'04'(r15,0)        nt create\n         call  (15),((r2),(r3),(r4),(r5),(r6)),mf=(E,(r7))\nntcr9000 ds    0h\n         sam64\n         sysstate archlvl=2,amode64=YES\n         ly    r15,nt_return\n         ltr   r15,r15\n         macro\n&name    jcogfs_usrab &ok=jlz\n         gbla  &abnos\n         lclc  &labab\n&abnos   seta  &abnos+1\n&labab   setc  'abend&abnos'\n         &ok   &labab\n         sac   0\n         abend &abnos,DUMP\n&labab   ds    0h\n         mend\n         jcogfs_usrab ok=jlz\n         jlu   ntcr9999\n         ds    0fd\n         ltorg\n         sysstate archlvl=2,amode64=NO\nm_call   call  ,(0,0,0,0,0),mf=L\nm_call_len equ *-m_call\n         sysstate archlvl=2,amode64=YES\nstorage  dsect\n         ds    0fd\nnt_data  ds    0cl32               name/token data\nnt_name  ds    cl16                name for name/token pair\nnt_token ds    0cl16                token for name/token pair\nnt_storage@ ds a\nnt_zero  ds    f\nnt_JCOGFS01 ds cl8\nnt_return ds   f\n         sysstate archlvl=2,amode64=NO\nw_call   call  ,(0,0,0,0,0),mf=L\nw_call_len equ *-w_call\n         sysstate archlvl=2,amode64=YES\nstorage  dsect\nclonei1  ds    0fd\nJCOGFS01 csect ,\nntcr9999 ds    0h\nauth9999 ds    0h\ninit0000 ds    0h\n         mviy  w_hdr,c' '\n         lay   r14,w_hdr\n         mvc   1(l'w_hdr-1,r14),0(r14)\n         lay   r14,w_64usertkn+4\n         lay   r15,=c'jgf1'                   1st half zero-unauth\n         mvc   0(4,r14),0(r15)    1st half zero-unauth\n         lay   r2,=ad(1024)\n         lay   r3,=ad(896)\n         lay   r4,w_64usertkn\n         lay   r5,w_64origin\n         lay   r6,=al1(99)\n         iarv64 request=GETSTOR,                                       x\n               cond=NO,                                                x\n               segments=(r2),                                          x\n               guardsize64=(r3),                                       x\n               guardloc=HIGH,                                          x\n               key=CALLERKEY,                                          x\n               fprot=NO,                                               x\n               svcdumprgn=YES,                                         x\n               control=UNAUTH,                                         x\n               usertkn=(r4),                                           x\n               origin=(r5),                                            x\n               dumppriority=(r6),                                      x\n               plistver=MAX,                                           x\n               mf=(E,w_64,COMPLETE)\n         lg    r0,w_64origin\n         stg   r0,w_64unused\n         alg   r0,=ad((1024-896)*1024*1024)\n         stg   r0,w_64limit\n         lay   r14,w_64stk_usertkn+4\n         lay   r15,=c'jgf2'                   1st half zero-unauth\n         mvc   0(4,r14),0(r15)    1st half zero-unauth\n         lay   r2,=ad(((((2*16*4096)*1024)+1023)/1024)/1024+1)\n         lay   r3,=ad(1)\n         lay   r4,w_64stk_usertkn\n         lay   r5,w_64stk_origin\n         lay   r6,=al1(99)\n         iarv64 request=GETSTOR,                                       x\n               cond=NO,                                                x\n               segments=(r2),                                          x\n               guardsize64=(r3),                                       x\n               guardloc=HIGH,                                          x\n               key=CALLERKEY,                                          x\n               fprot=NO,                                               x\n               svcdumprgn=YES,                                         x\n               control=UNAUTH,                                         x\n               usertkn=(r4),                                           x\n               origin=(r5),                                            x\n               dumppriority=(r6),                                      x\n               plistver=MAX,                                           x\n               mf=(E,w_64,COMPLETE)\n         lg    r0,w_64stk_origin\n         stg   r0,w_64stk_next@\n         mghi  r2,1024\n         mghi  r2,1024\n         algr  r2,r0\n         stg   r2,w_64stk_limit@\n         jlu   init9999\n         ds    0fd\n         ltorg\nstorage  dsect\n         ds    0fd\nw_64usertkn ds fd\nw_64origin ds  ad\nw_64unused ds  ad\nw_64limit ds   ad\nw_64stk_usertkn ds fd\nw_64stk_origin ds ad\nw_64stk_next@ ds ad\nw_64stk_limit@ ds ad\n         ds    0fd\n         iarv64 mf=(L,w_64),plistver=MAX\nJCOGFS01 csect ,\ninit9999 ds    0h\nopen0000 ds    0h\n         ly    r0,=a(dcbs_len)\n         storage OBTAIN,length=(r0),bndry=PAGE,loc=(BELOW,ANY)\n         stg   r1,w_dcbs@\n         lgr   r5,r1\n         using dcbs,r5\n         lay   r0,w_indcb\n         stg   r0,w_indcb@\n         lay   r0,w_outdcb\n         stg   r0,w_outdcb@\n         drop  r5\n         macro\n         jcogfs_open &dcb,&inout,&eof\n         lg    r5,w_dcbs@\n         using dcbs,r5\n         lay   r14,w_&dcb.\n         lay   r15,m_&dcb.\n         mvc   0(w_&dcb._len,r14),0(r15)\n         lay   r14,w_&dcb.e\n         lay   r15,m_&dcb.e\n         mvc   0(w_&dcb.e_len,r14),0(r15)\n         lay   r14,w_open\n         lay   r15,m_open\n         mvc   0(w_open_len,r14),0(r15)\n         lay   r0,&eof\n         sty   r0,w_indcbe+(dcbeeoda-dcbe)\n         lay   r0,w_&dcb.e\n         sty   r0,w_&dcb.+(dcbdcbe-ihadcb)\n         lay   r2,w_open\n         lay   r3,w_&dcb.\n         sysstate archlvl=2,amode64=NO\n         open  ((r3),(&inout)),mf=(E,(r2)),mode=31\n         sysstate archlvl=2,amode64=YES\n         tmy   w_&dcb.+(dcboflgs-ihadcb),dcbofopn\n         jcogfs_usrab ok=jlo\n         tmy   w_&dcb.e+(dcbeflg1-dcbe),dcbeopen+dcbemd31\n         jcogfs_usrab ok=jlo\n         drop  r5\n         mend\n         jcogfs_open outdcb,OUTPUT,0\n         lay   r14,w_line\n         lay   r15,=cl256' '\n         mvc   0(l'w_line,r14),0(r15)\n         lay   r15,m_line_hdr\n         mvc   0(l'm_line_hdr,r14),0(r15)\n         lg    r1,w_outdcb@\n         lay   r2,w_hdr\n         macro\n         jcogfs_put\n         sysstate archlvl=2,amode64=NO\n         sam31\n         put   (r1),(r2)\n         sysstate archlvl=2,amode64=YES\n         sam64\n         mend\n         jcogfs_put\n         jcogfs_open indcb,INPUT,open0090\n         lay   r14,w_mintod\n         lay   r15,=xl8'ffffffffffffffff'\n         mvc   0(l'w_mintod,r14),0(r15)\n         lay   r14,w_maxtod\n         lay   r15,=xl8'0000000000000000'\n         mvc   0(l'w_maxtod,r14),0(r15)\n         lay   r15,0\n         stg   r15,w_rec#\nopen0010 ds    0h\n         macro\n         jcogfs_get\n         sysstate archlvl=2,amode64=NO\n         sam31\n         get   (r3)\n         sysstate archlvl=2,amode64=YES\n         sam64\n         mend\n         jcogfs_get\n         lr    r9,r1\n         using gfsdsect,r9\n         cliy  gfs_fid,x'ff'         record type\n         jlne  open0010\n         lg    r15,w_rec#\n         alg   r15,=fd'1'\n         stg   r15,w_rec#\n         lay   r15,w_mintod\n         clc   gfs_tod,0(r15)\n         jlnl  open0011\n         mvc   0(l'w_mintod,r15),gfs_tod\n         lg    r0,w_rec#\n         stg   r0,w_minrec#\nopen0011 lay   r15,w_maxtod\n         clc   gfs_tod,0(r15)\n         jlnh  open0010\n         mvc   0(l'w_maxtod,r15),gfs_tod\n         lg    r0,w_rec#\n         stg   r0,w_maxrec#\n         jlu   open0010\n         drop  r9\nopen0090 ds    0h\n         sam64\n         macro\n         jcogfs_close &dcb\n         lg    r5,w_dcbs@\n         using dcbs,r5\n         lay   r14,w_close\n         lay   r15,m_close\n         mvc   0(w_close_len,r14),0(r15)\n         lay   r2,w_close\n         lay   r3,w_&dcb.\n         sysstate archlvl=2,amode64=NO\n         close ((r3)),mf=(E,(r2)),mode=31\n         sysstate archlvl=2,amode64=YES\n         tmy   w_&dcb.+(dcboflgs-ihadcb),dcbofopn\n         jcogfs_usrab ok=jlz\n         tmy   w_&dcb.e+(dcbeflg1-dcbe),dcbeopen+dcbemd31\n         jcogfs_usrab ok=jlz\n         drop  r5\n         mend\n         jcogfs_close indcb\n         ltg   r0,w_minrec#\n         jlz   open9992\n         lg    r0,w_minrec#\n         clg   r0,w_maxrec#\n         jll   open0499\n         jcogfs_open indcb,INPUT,open0200\n         lay   r15,0\n         stg   r15,w_rec#\nopen0100 ds    0h\n         sam31\n         jcogfs_get\n         sam64\n         lr    r9,r1\n         using gfsdsect,r9\n         cliy  gfs_fid,x'ff'         record type\n         jlne  open0100\n         lg    r15,w_rec#\n         alg   r15,=fd'1'\n         stg   r15,w_rec#\n         clg   r15,w_minrec#\n         jll   open0100\n         jasl  r14,read0000\n         jlu   open0100\nopen0200 ds    0h\n         sam64\n         drop  r9\n         jcogfs_close indcb\n         jcogfs_open indcb,INPUT,open0400\n         lay   r15,0\n         stg   r15,w_rec#\nopen0300 ds    0h\n         sam31\n         jcogfs_get\n         sam64\n         lr    r9,r1\n         using gfsdsect,r9\n         cliy  gfs_fid,x'ff'         record type\n         jlne  open0300\n         lg    r15,w_rec#\n         alg   r15,=fd'1'\n         stg   r15,w_rec#\n         jasl  r14,read0000\n         lg    r15,w_rec#\n         clg   r15,w_maxrec#\n         jll   open0300\nopen0400 ds    0h\n         sam64\n         drop  r9\n         jcogfs_close indcb\n         jlu   open9992\nopen0499 ds    0h\n         jcogfs_open indcb,INPUT,open9991\nopen0900 lg    r3,w_indcb@\n         sam31\n         jcogfs_get\n         sam64\n         lr    r9,r1\n         using gfsdsect,r9\n         cliy  gfs_fid,x'ff'         record type\n         jlne  open0900\n         jasl  r14,read0000\n         jlu   open0900\n         drop  r9\nopen9991 ds    0h\n         sam64\n         jcogfs_close indcb\nopen9992 lay   r15,=cl16'final:'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n*        aif   ('&sysparm' ne 'JCO').jco10\n*        #die  'f psw?;l rwregs',type=CMD\n*.jco10   anop\n         xgr   r14,r14\n         stg   r14,w_tree_total\n         jasl  r14,tree0000\n******   #die  'l rwregs',type=CMD\n         jlu   open9999\n         ds    0fd\n         ltorg\n         sysstate archlvl=2,amode64=NO\nm_open   open  (0,(INPUT)),mode=31,mf=L\nm_open_len equ *-m_open\nm_close  close (0),mode=31,mf=L\nm_close_len equ *-m_close\n         sysstate archlvl=2,amode64=YES\nm_indcb dcb    ddname=INFILE,                                          x\n               dcbe=0,                                                 x\n               dsorg=PS,                                               x\n               macrf=(GL)\nm_indcb_len equ *-m_indcb\nm_indcbe dcbe  eodad=0,                                                x\n               eadscb=OK,                                              x\n               rmode31=BUFF\nm_indcbe_len equ *-m_indcbe\nm_outdcb dcb   ddname=JCOGFS01,                                        x\n               dcbe=0,                                                 x\n               dsorg=PS,                                               x\n               macrf=(PM),lrecl=272,blksize=0,recfm=FB\nm_outdcb_len equ *-m_outdcb\nm_outdcbe dcbe eodad=0,                                                x\n               eadscb=OK,                                              x\n               rmode31=BUFF\nm_outdcbe_len equ *-m_outdcbe\ngfsdsect dsect\ngfs_ll   ds    h                       -4-3\ngfs_zz   ds    h                       -2-1\ngfs_fid  ds    x                       1\ngfs_aid  ds    x                       2\ngfs_tod  ds    xl8                     3-10\ngfs_eid  ds    xl2                     11-12\ngfs_ascb ds    xl4                     13-16\ngfs_job1 ds    cl8                     17-24\ngfs_type ds    x                       25 x42 or x20(system)\ngfs_subp ds    x                       26\ngfs_asidmem ds al2                     27-28 memory-owning asid\ngfs_virt ds    xl4                     29-32\ngfs_len  ds    f                       33-36\ngfs_tcb  ds    xl4                     37-40\ngfs_key  ds    x                       41  x50,x70\ngfs_rc   ds    x                       42    retcode\nx0300    ds    xl2                     43-44\nx0018    ds    h    @45                45-46 or zero for type=x20\nx0048    ds    h                       47-48 or zero for type=x20\ngfs_psw  ds    xl4                     49-52 RETADDR  PIB4.\n         ds    xl4                     53-56\n         ds    xl4                     57-60\ngfs_jobnmem ds cl8                     61-68 JOBNAME owning mem\ngfs_jobn ds    cl8                     69-76 jobname acting mem\ngfs_asid ds    al2                     77-78 asid acting mem\ngfs_subb ds    x                       79\ngfs_svc  ds    x                       80\ngfs_flag1 ds   x                       81\ngfs_flag2 ds   x                       82\ngfs_flag3 ds   x                       83\n         ds    x                       84\n         ds    xl12                    85-96\ngfs_regs ds    xl64                    97-160\ndcbs     dsect\n         ds    0fd\nw_indcb  dcb   ddname=INFILE,                                          x\n               dcbe=0,                                                 x\n               dsorg=PS,                                               x\n               macrf=(GL)\nw_indcb_len equ *-w_indcb\n         ds    0fd\nw_outdcb dcb   ddname=JCOGFS01,                                        x\n               dcbe=0,                                                 x\n               dsorg=PS,                                               x\n               macrf=(PM),lrecl=100,blksize=10000,recfm=FB\nw_outdcb_len equ *-w_outdcb\n         ds    0fd\ndcbs_len equ   *-dcbs\nstorage  dsect\nw_dcbs@  ds    ad\nw_indcb@ ds    ad\nw_outdcb@ ds   ad\nw_indcbe dcbe  eodad=0,                                                x\n               eadscb=OK,                                              x\n               rmode31=BUFF\nw_indcbe_len equ *-w_indcbe\nw_outdcbe dcbe eodad=0,                                                x\n               eadscb=OK,                                              x\n               rmode31=BUFF\nw_outdcbe_len equ *-w_outdcbe\n         ds    0fd\n         sysstate archlvl=2,amode64=NO\nw_open   open  (0,(INPUT)),mode=31,mf=L\nw_open_len equ *-w_open a\n         ds    0fd\nw_close  close (0),mode=31,mf=L\nw_close_len equ *-w_close\n         sysstate archlvl=2,amode64=YES\nw_rec#   ds    fd\nw_minrec# ds   fd\nw_maxrec# ds   fd\nw_mintod ds    fd\nw_maxtod ds    fd\nw_lasttod ds   fd\nw_worktod ds   fd\n         ltorg\nJCOGFS01 csect ,\nread0000 ds    0h\n         stmg  r0,r15,readsave         temp save-nonstandard\n         using gfsdsect,r9\n         lay   r14,=xl8'00'\n         lay   r15,w_lasttod\n         clc   0(l'w_lasttod,r15),0(r14)\n         jle   read0005\n         lay   r14,gfs_tod\n         clc   0(l'w_lasttod,r15),0(r14)\n         jlnh  read0005\n         lay   r15,gfs_tod\n         lay   r14,w_worktod\n         mvc   0(l'w_worktod,r14),0(r15)\n         lg    r15,w_lasttod\n         slg   r15,w_worktod\n         nihl  r15,x'ffff'\n         nilh  r15,x'f000'\n         nill  r15,x'0000'\n         ltgr  r15,r15\n         jlz   read0005\n******** svc   199\n         jcogfs_usrab ok=jlnop\nread0005 lay   r15,w_lasttod\n         mvc   0(l'w_lasttod,r15),gfs_tod\n         lay   r15,=xl2'ef65'        trace=usr=f65 records\n         clc   gfs_eid,0(r15)        trace=usr=f65 records\n         jlne  read9999\n*fixme3   cliy  gfs_subp,237          skip swa freed by subpool#\n*fixme4   jle   read9999\n         lay   r6,w_gfnode\nwork     using gfnode,r6\n*        llgf  r0,=a(x'1400')        !!!\n*        cly   r0,gfs_len            !!!\n*        jlne  around2                 !!!\n*        llgf  r0,=a(x'008D1C00')      !!!\n*        cly   r0,gfs_virt             !!!\n*        jle   around1                 !!!\n*        jlne  around2                 !!!\n*round1  ds    0h                      !!!\n*        svc   199                     !!!\n*round2  ds    0h                      !!!\n         xc    work.gfnode(gfnode_len),work.gfnode\n         mviy  work.gfnid,c'g'\n         mviy  work.gfnid+1,c'f'\n         mvc   work.gfnrc,gfs_rc\n         cliy  gfs_type,x'20'\n         jlne  notsystem\nsystem   mviy  work.gfnstat,c'F' x'00' G/F/S/00 system freemain\n         mvc   work.gfnwhofreedascb,gfs_ascb    no regs\n         mvc   work.gfnwhofreedtcb,gfs_tcb\n         mvc   work.gfnwhofreedjobn,gfs_job1\n         mvc   work.gfnwhenfreed,gfs_tod\n         mvc   work.gfnsubp,gfs_subp\n         mvc   work.gfntod,gfs_tod\n         mvc   work.gfnasids,gfs_asidmem\n         mvc   work.gfnjobname,gfs_job1\n         mvc   work.gfnkey,gfs_key\n         llgf  r0,gfs_virt\n         sty   r0,work.gfnaddrs\n         mvc   work.gfnasidh,gfs_asidmem\n         algf  r0,gfs_len\n         sty   r0,work.gfnaddrh\n         llgf  r0,gfs_len\n         stg   r0,work.gfnlen          fd'0'\n         jlu   read0200\nnotsystem tmy  gfs_flag1,b'00000001' freemain ?\n         jlo   read0110\n******** #die  'f psw?',type=CMD\n         mviy  work.gfnstat,c'G'   x'00' G/F/S/00\n         mvc   work.gfnwhogotasid,gfs_asid\n         mvc   work.gfnwhogotpsw,gfs_psw\n         mvc   work.gfnwhogotascb,gfs_ascb\n         mvc   work.gfnwhogottcb,gfs_tcb\n         mvc   work.gfnwhogotjobn,gfs_jobn\n         mvc   work.gfnwhengot,gfs_tod\n         mvc   work.gfngotregs,gfs_regs\n         mvc   work.gfnkey,gfs_key\n         jlu   read0115\nread0110 ds    0h\n         mviy  work.gfnstat,c'F'   x'00' G/F/S/00\n         mvc   work.gfnwhofreedasid,gfs_asid\n         mvc   work.gfnwhofreedpsw,gfs_psw\n         mvc   work.gfnwhofreedascb,gfs_ascb\n         mvc   work.gfnwhofreedtcb,gfs_tcb\n         mvc   work.gfnwhofreedjobn,gfs_jobn\n         mvc   work.gfnwhenfreed,gfs_tod\n         mvc   work.gfnfreeregs,gfs_regs\n         mvc   work.gfnkey,gfs_key\nread0115 mvc   work.gfnsubp,gfs_subp        was subb ?????\n         mvc   work.gfntod,gfs_tod\n         mvc   work.gfnasids,gfs_asidmem\n         mvc   work.gfnjobname,gfs_jobnmem\n         llgf  r0,gfs_virt\n         sty   r0,work.gfnaddrs\n         mvc   work.gfnasidh,gfs_asidmem\n         algf  r0,gfs_len\n         sty   r0,work.gfnaddrh\n         llgf  r0,gfs_len\n         stg   r0,work.gfnlen          fd'0'\n         ltg   r0,work.gfnlen\n         jlnz  read0200\n         cliy  work.gfnstat,c'G'       zero length getmain is ok\n         jle   read9999\n         ltgf  r1,work.gfnaddrs\n         jlnz  read0200\n         mviy  work.gfnstat,c'S'   x'00' G/F/S/00subpool freemain\n*        aif   ('&sysparm' ne 'JCO').jco9    !!!!\n*        lay   r15,=x'006EE568'             !!!!\n*        clc   0(4,r15),work.gfnaddrs !!!!\n*        jlne  around9               !!!!\n*        lay   r15,=x'00000000000024E0' !!!\n*        clc   0(8,r15),work.gfnlen  !!!!\n*        jlne  around9\n*        lay   r15,=x'ffffffffffffffff' !!!\n*        lay   r15,=x'C783B25EC69F6000' !!!\n*        clc   0(8,r15),work.gfntod     !!!\n*        jlh   around9               !!!\n*        #die  'd 6r!;l rwregs',type=CMD  !!!\n*around9 ds    0h                         !!!\n.jco9    anop\nread0200 cliy  work.gfnrc,0\n         jle   read0210\n         lay   r15,=cl16'err-return code'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         lay   r0,work.gfnode\n         stg   r0,w_report@\n         lay   r0,0\n         stg   r0,w_merge@             new/update/merge\n         jasl  r14,rept0000\n         jlu   read9999\nread0210 cliy  work.gfnstat,c'G'\n         jlne  read0220\n         jasl  r14,updg0000\n         macro\n         jcogfs_dump_tree &label\n         aif   ('&sysparm' eq 'JCO').jco\n         jlu   &label\n         ago   .jco1\n.jco     jlnop &label\n.jco1    lay   r15,=cl16'&label'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         xgr   r14,r14\n         stg   r14,w_tree_total\n         jasl  r14,tree0000\n&label   ds    0h\n         mend\n         jcogfs_dump_tree dump_tree_updg2\n         jlu   read0250\nread0220 cliy  work.gfnstat,c'F'\n         jlne  read0230\n         jasl  r14,updf0000\n         jcogfs_dump_tree dump_tree_updf2\n         jlu   read0250\nread0230 cliy  work.gfnstat,c'S'\n         jlne  read0240\n         jasl  r14,upds0000\n         jcogfs_dump_tree dump_tree_upds2\n         jlu   read0250\nread0240 ds    0h\n         jcogfs_usrab ok=jlnop\nread0250 ds    0h\n         macro\n         jcogfs_debug_rept &label,&node\n         aif   ('&sysparm' eq 'JCO').jco\n         jlu   &label\n         ago   .jco1\n.jco     jlnop &label\n.jco1    lay   r15,=cl16'&label'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         lay   r0,&node..gfnode\n         stg   r0,w_report@\n         lay   r0,0\n         stg   r0,w_merge@\n         jasl  r14,rept0000\n&label   ds    0h\n         mend\n         jcogfs_debug_rept debug_post_work,work\n         cliy  work.gfnstat,0\n         jlne  read0200\n         drop  work\n******   #die  'f psw?',type=CMD\n         drop  r9\nread9999 lmg   r0,r15,readsave\n         br    r14                     return\n         ds    0fd\n         ltorg\ngfnode   dsect\ngfnid    dc    cl2'gf'\ngfnstat  dc    x'00' Getmained,Free,Subpool or x'00'-uninitialized\ngfnsubp  dc    x'00'\ngfnhist  dc    x'00'\ngfnhist_freed  equ x'80'\ngfnhist_gotten equ x'40'\ngfnhist_repeat equ x'20'\ngfnhist_err_rc equ x'08' ibm gfs indicated fail or rc>0\ngfnhist_err_gg equ x'04' getmain on getmain\ngfnhist_err_ff equ x'02' freemain fails to pair\ngfnhist_err_pf equ x'01' partial freemain\ngfnrc    ds    x\ngfntype  ds    x\ngfnkey   ds    x\ngfnless@ dc    ad(0)\ngfnmore@ dc    ad(0)\ngfntod   dc    xl8'00'\ngfnstart ds    0fd\ngfnasids dc    h'0'\n         dc    h'0'\ngfnaddrs dc    a(0)\ngfnpast  ds    0fd\ngfnasidh dc    h'0'\n         dc    h'0'\ngfnaddrh dc    a(0)\ngfnlen   dc    fd'0'\n         org   gfnlen+4\ngfnlen4  ds    f\ngfnjobname dc  xl8'00'\ngfnwhogot ds   0xl96\ngfnwhogotasid dc h'0'\n         dc    h'0'\ngfnwhogotpsw dc f'0'\ngfnwhogotascb dc a(0)\ngfnwhogottcb dc a(0)\ngfnwhogotjobn dc xl8'00'\ngfnwhengot dc  xl8'00'\ngfngotregs dc  xl64'00'\ngfnwhofreed ds 0xl96\ngfnwhofreedasid dc h'0'\n         dc    h'0'\ngfnwhofreedpsw dc f'0'\ngfnwhofreedascb dc a(0)\ngfnwhofreedtcb dc a(0)\ngfnwhofreedjobn dc xl8'00'\ngfnwhenfreed dc xl8'00'\ngfnfreeregs dc xl64'00'\ngfnoder  equ   256-(*-gfnode)\n         ds    (gfnoder)x\ngfnode_len equ *-gfnode\nstorage  dsect\nreadsave ds    16fd\n         ds    0fd\nw_gfnode ds    xl(gfnode_len)\n         ds    0fd\nJCOGFS01 csect ,\nupdf0000 ds    0h                      perform freemains in tree\n         stmg  r0,r15,updfsave         temp save-nonstandard\n         macro\n         jcogfs_log &log,&gfnode\n         aif   ('&sysparm' ne 'JCO').mend\n         lay   r15,=cl16'&log'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         lay   r0,&gfnode\n         stg   r0,w_report@\n         lay   r0,0\n         stg   r0,w_merge@             new/update/merge\n         jasl  r14,rept0000\n.mend    mend\n         lay   r2,w_gfnode\nnew      using gfnode,r2\n         jcogfs_log updf,new.gfnode\n         lay   r4,w_64root\n         stg   r4,w_cursor@@\n         ltg   r4,w_64root\n         stg   r4,w_cursor@\ncursor   using gfnode,r4\n         jlnz  updf_compcursor\nupdf_unpaired  oiy new.gfnhist,gfnhist_err_ff\n         llgt  r15,new.gfnaddrs\n*        cly   r15,=a(x'15f68')        !!\n*        jlne  noxdc1                  !!\n*        svc   199                     !!\n*noxdc1  ds    0h                      !!\n         lay   r15,=cl16'unpaired freemain'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         lay   r0,new.gfnode\n         stg   r0,w_report@\n         lay   r0,0\n         stg   r0,w_merge@             new/update/merge\n         jasl  r14,rept0000\n         jlu   updf9900                discard\nupdf_compcursor cliy cursor.gfnstat,c'G'\n         jcogfs_usrab ok=jle\n         clc   new.gfnpast,cursor.gfnstart\n         jlnh  updf_chaseless\n         clc   new.gfnstart,cursor.gfnpast\n         jlnl  updf_chasemore\n         clc   new.gfnstart,cursor.gfnstart\n         jlne  updf_newold1\n         clc   new.gfnpast,cursor.gfnpast\n         jlne  updf_newold1\n         jasl  r14,data0000                   exact match\n         lay   r0,cursor.gfnode\n         stg   r0,w_free@\n         lg    r0,w_cursor@@\n         stg   r0,w_free@@\n         jasl  r14,free0000\n         jlu   updf9900\nupdf_newold1 ds 0h                            notexactmatch\n         clc   cursor.gfnasids,new.gfnasids\n         jlne  updf_unpaired\n         clc   cursor.gfnasidh,new.gfnasidh\n         jlne  updf_unpaired\n         oiy   new.gfnhist,gfnhist_err_pf\n         oiy   cursor.gfnhist,gfnhist_err_pf\n         clc   cursor.gfnstart,new.gfnstart\n         jle   updf_startfree\n         clc   cursor.gfnpast,new.gfnpast\n         jle   updf_pastfree\n         llgt  r0,new.gfnaddrs         else mid free\n         cly   r0,cursor.gfnaddrs      cursor length remaining\n         jlh   updf_startsincursor\n*                                 occurs only if data missing\n*                              doc the orphaned freemain fraction\n*                                and re-up the new.freemain\n         oiy   new.gfnhist,gfnhist_err_pf\n         llgt  r0,new.gfnaddrs        start new.freemain at getmain\n         sly   r0,cursor.gfnaddrs free-getm start\n         jlp   updf_getmainoverlaps\n         llgt  r0,cursor.gfnaddrs    else freemain< getmain start\n         llgt  r1,new.gfnaddrh\n         cly   r1,cursor.gfnaddrs      new.h:got.s\n         jlnh  updf_freehighlessgotlow range is new.h:got.h\n*******  svc   199                     else\n         cly   r1,cursor.gfnaddrh      new.h:got.h\n         jlnl  updf_freegotredrivefree GE,yes,gotmain is totally freed\n         sty   r1,cursor.gfnaddrs      got.s becomes new.h\n         llgt  r0,cursor.gfnaddrh      end\n         sly   r0,cursor.gfnaddrs      minus start\n         stg   r0,cursor.gfnlen        new length of got (!!NEGATIVE)\n         jasl  r14,data0000\n         lay   r15,=cl16'partial freemain'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         lay   r0,new.gfnode\n         stg   r0,w_report@\n         lay   r0,0\n         stg   r0,w_merge@             new/update/merge\n         jasl  r14,rept0000\n         jlu   updf9900                discard\nupdf_freehighlessgotlow ds 0h          free does not overlap got\n         jlu   updf_unpaired\nupdf_getmainoverlaps lg r1,new.gfnlen\n*        svc   199\n         nopr  0\n         sgr   r1,r0\n         jcogfs_usrab ok=jlp\n         stg   r1,new.gfnlen\n         mvc   new.gfnaddrs,cursor.gfnaddrs\nupdf_startsincursor ds 0h\n*        svc   199\n         nopr  0\n         llgt  r0,new.gfnaddrh         else mid free  ?\n         cly   r0,cursor.gfnaddrh      cursor length remaining\n         jll   updf_embedded\n         lg    r0,new.gfnlen\n         slg   r0,cursor.gfnlen\n         stg   r0,new.gfnlen\n         aly   r0,new.gfnaddrs\n         sty   r1,new.gfnaddrh\n         lgr   r8,r1\n         mvc   cursor.gfnwhofreed,new.gfnwhofreed  updates applied to\n         mvc   cursor.gfnwhenfreed,new.gfnwhenfreed  old getmain 1 of 2\n         jlu   updf_splitfreemid       else some freemain needs repeat\nupdf_embedded llgf r1,cursor.gfnaddrh   middle free in gotmain\n         lgr   r8,r1                   old end addr\n         llgt  r0,new.gfnaddrs         new start addr\n         sty   r0,cursor.gfnaddrh      becomes old dog end\n         sly   r0,cursor.gfnaddrs    minus old start becomes cursor\n         stg   r0,cursor.gfnlen      length; cursor gotmain is done\n         xc    cursor.gfnjobname,new.gfnjobname exchange jobname's\n         xc    new.gfnjobname,cursor.gfnjobname exchange jobname's\n         xc    cursor.gfnjobname,new.gfnjobname exchange jobname's\n         xc    cursor.gfntod,new.gfntod exchange tod's\n         xc    new.gfntod,cursor.gfntod exchange tod's\n         xc    cursor.gfntod,new.gfntod exchange tod's\n         mvc   cursor.gfnwhofreed,new.gfnwhofreed  updates applied to\n         llgt  r0,new.gfnaddrh       old freemain high\n         sty   r1,new.gfnaddrh       replaced by gotmain end\n         sty   r0,new.gfnaddrs       old freemain high is now start\n         sgr   r1,r0                 and delta is length of\n         jcogfs_usrab ok=jlp\n         stg   r1,new.gfnlen         undisturbed gotmain remaining\n         mvc   new.gfnwhogot,cursor.gfnwhogot\n         mvc   new.gfnstat,cursor.gfnstat apply 2of2 getmained to new\n         mvc   new.gfnsubp,cursor.gfnsubp\n         mvc   new.gfnhist,cursor.gfnhist\n         mvc   new.gfnhist,cursor.gfnhist\n         mvc   new.gfntype,cursor.gfntype\n         mvc   new.gfnkey,cursor.gfnkey\n         jlu   updf_repeat\nupdf_splitfreemid ds 0h\n         sty   r8,new.gfnaddrs\n         llgt  r0,new.gfnaddrh\n         slgr  r0,r8\n         jlz   updf9900\n         jcogfs_usrab ok=jlh\n         stg   r0,new.gfnlen\n         jlu   updf_repeat\nupdf_startfree ds 0h\n         lg    r0,cursor.gfnlen\n         clg   r0,new.gfnlen        getmain len versus freemain len\n         jll   updf_splitfreeall\n         llgt  r0,cursor.gfnaddrs  getmain bigger\n         alg   r0,new.gfnlen\n         sty   r0,cursor.gfnaddrs\n         lg    r0,cursor.gfnlen\n         slg   r0,new.gfnlen\n         stg   r0,cursor.gfnlen\n         jasl  r14,data0000       keep latest free info\n         jlu   updf9900\nupdf_splitfreeall ds 0h           new=cursor gfnaddrstart\n         lg    r0,new.gfnlen       getmain is smaller\n         slg   r0,cursor.gfnlen      freemain-getmain>0\n         stg   r0,new.gfnlen          leftover freemain len\n         llgt  r0,cursor.gfnaddrh       end of getmain\n         sty   r0,new.gfnaddrs           becomes start of freemain\n         jasl  r14,data0000\nupdf_freegotredrivefree ds 0h\n         lay   r0,cursor.gfnode\n         stg   r0,w_free@\n         lg    r0,w_cursor@@\n         stg   r0,w_free@@\n         jasl  r14,free0000\n         jlu   updf_repeat\nupdf_pastfree ds 0h                   new=cursor addrh\n         lg    r0,new.gfnlen amount\n         clg   r0,cursor.gfnlen     freemain : gotmained len\n         jll   updf_partfree        leave some getmain\n         llgt  r0,new.gfnaddrh      else leave some freemain\n         slg   r0,cursor.gfnlen\n         sty   r0,new.gfnaddrh\n         lg    r0,new.gfnlen\n         slg   r0,cursor.gfnlen\n         stg   r0,new.gfnlen\n         jasl  r14,data0000\n         lay   r0,cursor.gfnode\n         stg   r0,w_free@\n         lg    r0,w_cursor@@\n         stg   r0,w_free@@\n         jasl  r14,free0000         else delete all cursor\n         jlu   updf_repeat\nupdf_partfree llgt r0,cursor.gfnaddrh\n         slg   r0,new.gfnlen\n         sty   r0,cursor.gfnaddrh\n         lg    r0,cursor.gfnlen\n         slg   r0,new.gfnlen\n         stg   r0,cursor.gfnlen\n         jasl  r14,data0000       keep latest free info\n         jlu   updf9900\nupdf_chaseless ltg r0,cursor.gfnless@  chase less\n         jlz   updf_addless\n         lay   r4,cursor.gfnless@\n         stg   r4,w_cursor@@\n         stg   r0,w_cursor@\n         lgr   r4,r0\n         jlu   updf_compcursor\nupdf_chasemore ltg r0,cursor.gfnmore@  chase more\n         jlz   updf_addmore\n         lay   r4,cursor.gfnmore@\n         stg   r4,w_cursor@@\n         stg   r0,w_cursor@\n         lgr   r4,r0\n         jlu   updf_compcursor\nupdf_addless jlu updf_unpaired\nupdf_addmore jlu updf_unpaired\nupdf9900 mviy  new.gfnstat,0\n         jlu   updf9999\nupdf_repeat ds 0h\n         oiy   new.gfnhist,gfnhist_repeat\n         drop  new\n         drop  cursor\nupdf9999 lmg   r0,r15,updfsave\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\nupdfsave ds    16fd\nw_64root ds    ad\nw_cursor@ ds   ad\nw_cursor@@ ds  ad\nw_report@ ds   ad\nJCOGFS01 csect ,\nupdg0000 ds    0h                      add/replace gotmains in tree\n         stmg  r0,r15,updgsave\n         lay   r2,w_gfnode\nnew      using gfnode,r2\n         jcogfs_log updg,new.gfnode\n*****    #die  'eq updg,+0;l rwregs',type=CMD\n         lay   r4,w_64root\n         stg   r4,w_cursor@@\n         ltg   r4,w_64root\n         stg   r4,w_cursor@\ncursor   using gfnode,r4\n         jlnz  updg_compcursor\n         jasl  r14,allo0000\n         lg    r4,w_64nodeslot\n         mvc   cursor.gfnode(gfnode_len),new.gfnode else cursor=only\n         stg   r4,w_64root\n         stg   r4,w_cursor@\n         lay   r0,w_64root\n         stg   r0,w_cursor@@\n         jlu   updg9900\nupdg_compcursor clc new.gfnpast,cursor.gfnstart\n         jlnh  updg_chaseless\n         clc   new.gfnstart,cursor.gfnpast\n         jlnl  updg_chasemore\n         clc   new.gfnstart,cursor.gfnstart\n         jlne  updg_newold1\n         clc   new.gfnpast,cursor.gfnpast\n         jlne  updg_newold1\n         jasl  r14,data0000                   exact match\n         jlu   updg9900\nupdg_newold1 ds 0h                            notexactmatch\n         clc   cursor.gfnasids,new.gfnasids\n         jlne  updg_add\n         clc   cursor.gfnasidh,new.gfnasidh\n         jlne  updg_add\n         oiy   new.gfnhist,gfnhist_err_gg\n         oiy   cursor.gfnhist,gfnhist_err_gg\n         lay   r15,=cl16'getmains overlap'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         lay   r0,cursor.gfnode           report\n         stg   r0,w_report@\n         lay   r0,new.gfnode\n         stg   r0,w_merge@             new/update/merge\n         jasl  r14,rept0000                   getmain on getmain\n         jasl  r14,data0000         else delete all cursor\n         lay   r0,cursor.gfnode\n         stg   r0,w_free@\n         lg    r0,w_cursor@@\n         stg   r0,w_free@@\n         jasl  r14,free0000\n         jlu   updg_repeat     redrive original getm until noconflict\nupdg_add clc new.gfnstart,cursor.gfnstart\n         jll   updg_addless\n         jlh   updg_addmore\n         oiy   new.gfnhist,gfnhist_err_gg\n         oiy   cursor.gfnhist,gfnhist_err_gg\n         lay   r15,=cl16'updg_add abend  '\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         lay   r0,cursor.gfnode           report\n         stg   r0,w_report@\n         lay   r0,new.gfnode\n         stg   r0,w_merge@             new/update/merge\n         jasl  r14,rept0000                   getmain on getmain\n         jcogfs_usrab ok=jlnop      abend\nupdg_chaseless ltg r0,cursor.gfnless@  chase less\n         jlz   updg_addless\n         lay   r4,cursor.gfnless@\n         stg   r4,w_cursor@@\n         stg   r0,w_cursor@\n         lgr   r4,r0\n         jlu   updg_compcursor\nupdg_chasemore ltg r0,cursor.gfnmore@  chase more\n         jlz   updg_addmore\n         lay   r4,cursor.gfnmore@\n         stg   r4,w_cursor@@\n         stg   r0,w_cursor@\n         lgr   r4,r0\n         jlu   updg_compcursor\nupdg_addless ds 0h\n         jasl  r14,allo0000\n         lg    r0,w_64nodeslot\n         stg   r0,cursor.gfnless@\n         lay   r4,cursor.gfnless@\n         stg   r4,w_cursor@@\n         stg   r0,w_cursor@\n         lgr   r4,r0\n         mvc   cursor.gfnode(gfnode_len),new.gfnode else cursor=only\n         jlu   updg9900\nupdg_addmore ds 0h\n         jasl  r14,allo0000\n         lg    r0,w_64nodeslot\n         stg   r0,cursor.gfnmore@\n         lay   r4,cursor.gfnmore@\n         stg   r4,w_cursor@@\n         stg   r0,w_cursor@\n         lgr   r4,r0\n         mvc   cursor.gfnode(gfnode_len),new.gfnode else cursor=only\n         jlu   updg9900\nupdg9900 mviy  new.gfnstat,0\n         jlu   updg9999\nupdg_repeat ds 0h\n         oiy   new.gfnhist,gfnhist_repeat\n         drop  new\n         drop  cursor\nupdg9999 lmg   r0,r15,updgsave\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\nupdgsave ds    16fd\nJCOGFS01 csect ,\nupds0000 ds    0h                      add/replace gotmains in tree\n         stmg  r0,r15,updssave\n         lay   r2,w_gfnode\nnew      using gfnode,r2\n         jcogfs_log upds,new.gfnode\n*****    #die  'eq upds,+0;l rwregs',type=CMD\n         stg   r2,w_subf\n         cliy  w_traverse_toggle,c'L'\n         jlne  rightleft\nleftright jasl r14,subl0000\n         mviy  w_traverse_toggle,c'R'\n         jlu   upds9900\nrightleft jasl r14,subm0000\n         mviy  w_traverse_toggle,c'L'\nupds9900 mviy  new.gfnstat,0\nupds_repeat ds 0h\n         drop  new\nupds9999 lmg   r0,r15,updssave\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\nupdssave ds    16fd\nw_subf   ds    ad\nw_traverse_toggle ds c\n         ds    ad\nJCOGFS01 csect ,\ndall0000 ds    0h\n         stmg  r0,r15,dallsave\n         ltg   r4,w_freed@\n         jcogfs_usrab ok=jlnz\nfreed    using gfnode,r4\n         cliy  freed.gfnstat,0\n         jcogfs_usrab ok=jle\n         tmy   freed.gfnhist,gfnhist_freed\n         jcogfs_usrab ok=jlo\n         lay   r0,0\n         stg   r0,freed.gfnmore@\n         stg   r0,freed.gfnless@\n         ltg   r2,w_unusedq\nunused   using gfnode,r2\n         jlz   pushunused\n         stg   r2,freed.gfnmore@\n         stg   r2,freed.gfnless@\npushunused stg r4,w_unusedq\n         drop  unused\n         drop  freed\ndall9999 lmg   r0,r15,dallsave\n         br    r14\n         ds    0fd\n         ltorg\nstorage  dsect\ndallsave ds    16fd\nw_unusedq ds   ad\nJCOGFS01 csect ,\nallo0000 ds    0h\n         stmg  r0,r15,allosave         temp save-nonstandard\n         aif   ('&sysparm' ne 'JCO').jco10\nunused   using gfnode,r2\n         ltg  r2,w_unusedq\n         jlz   jco10z\njco10a   lg    r3,unused.gfnmore@\n         cg    r3,unused.gfnless@\n         jcogfs_usrab ok=jle\n         ltgr  r2,r3\n         jlnz  jco10a\n         drop  unused\njco10z   ds    0h\n.jco10   anop\n         jcogfs_log allo,0\n         ltg   r2,w_unusedq\nunused   using gfnode,r2\n         jlz   uselimit\n         lg    r3,unused.gfnmore@\n         cg    r3,unused.gfnless@\n         jcogfs_usrab ok=jle\n         stg   r3,w_unusedq\n         stg   r2,w_64nodeslot\n         jlu   allo9000\nuselimit lg    r2,w_64unused\n         clg   r2,w_64limit full?\n         jcogfs_usrab ok=jll\n         stg   r2,w_64nodeslot\n         lay   r4,gfnode_len(,r2)\n         stg   r4,w_64unused\nallo9000 xc    unused.gfnode(gfnode_len),unused.gfnode\n         drop  unused\n         lmg   r0,r15,allosave\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\nallosave ds    16fd\nw_64nodeslot ds ad\nJCOGFS01 csect ,\ndata0000 ds    0h                      update with who last\nnew      using gfnode,r2\ncursor   using gfnode,r4\n         stmg  r0,r15,datasave         temp save-nonstandard\n         mvc   cursor.gfntod,new.gfntod exchange tod's\n         cliy  new.gfnstat,c'G'        new data gotmain?\n         jle   data0100                yes, update whogot\n         mvc   cursor.gfnwhofreed,new.gfnwhofreed else update freed\n         mvc   cursor.gfnwhenfreed,new.gfnwhenfreed who/when\n         jlu   data9999                was in error- jll\ndata0100 mvc   cursor.gfnwhogot,new.gfnwhogot\n         mvc   cursor.gfnwhengot,new.gfnwhengot\n         drop  new\n         drop  cursor\ndata9999 lmg   r0,r15,datasave\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\ndatasave ds    16fd\nJCOGFS01 csect ,\nfree0000 ds    0h                      performed free\n         stmg  r0,r15,freesave         temp save-nonstandard\n         ltg   r4,w_free@\n         jcogfs_usrab ok=jlnz\n         ltg   r5,w_free@@\n         jcogfs_usrab ok=jlnz\ncursor   using gfnode,r4\n         jcogfs_log free,cursor.gfnode\n*        llgt  r0,cursor.gfnaddrs      !!!!\n*        cy    r0,=a(x'008D1C00')      !!!!\n*        jlne  jco12                   !!!!\n*        svc   199                     !!!!\n*        lg    r0,cursor.gfnlen        !!!!\n*        cg    r0,=ad(x'00000018')     !!!!\n*        jlne  jco12                   !!!!\n*        #die  'eq free,+0;l rwregs',type=CMD  !!!!\n*co12 ds 0h                            !!!!\n         jcogfs_debug_rept debug_free1,cursor\n         mviy  cursor.gfnstat,0\n         oiy   cursor.gfnhist,gfnhist_freed\n         ltg   r0,cursor.gfnless@\n         jlnz  hasless\nnoless   ltg   r0,cursor.gfnmore@\n         jlnz  moreonly\nnochild  lay   r0,0\n         stg   r0,0(,r5)              remove cursor from tree\n         stg   r4,w_freed@\n         lay   r4,0\n         jlu   free9000\nhasless  ltg   r0,cursor.gfnmore@\n         jlnz  hasboth\nlessonly mvc   0(l'gfnless@,r5),cursor.gfnless@ point around cursor\n         stg   r4,w_freed@\n         lay   r4,0\n         jlu   free9000\nmoreonly mvc   0(l'gfnmore@,r5),cursor.gfnmore@ point around cursor\n         stg   r4,w_freed@\n         lay   r4,0\n         jlu   free9000\nhasboth  cliy  w_tree_balance,c'L'\n         jlne  doright              do right=more\ndoleft   mviy  w_tree_balance,c'R' toggle left=less, next right\n         lay   r0,cursor.gfnmore@\n         stg   r0,w_next@@\n         ltg   r6,cursor.gfnmore@\n         jcogfs_usrab ok=jlnz\nnext     using gfnode,r6\nrunleft  ltg   r0,next.gfnless@\n         jlz   useleft\n         lay   r6,next.gfnless@\n         stg   r6,w_next@@\n         lgr   r6,r0\n         jlu   runleft\ndoright  mviy  w_tree_balance,c'L' toggle right=more, next left\n         lay   r0,cursor.gfnless@\n         stg   r0,w_next@@\n         ltg   r6,cursor.gfnless@\n         jcogfs_usrab ok=jlnz\nrunright ltg   r0,next.gfnmore@\n         jlz   useright\n         lay   r6,next.gfnmore@\n         stg   r6,w_next@@\n         lgr   r6,r0\n         jlu   runright\nuseleft  ds    0h\n         jasl  r14,move0000\n         ltg   r3,w_next@@                else,moreonlychild\n         jcogfs_usrab ok=jlnz\n         mvc   0(l'gfnmore@,r3),next.gfnmore@  skip next, ptr to child\n         jlu   dropnext\nuseright ds    0h\n         jasl  r14,move0000\n         ltg   r3,w_next@@                else,lessonlychild\n         jcogfs_usrab ok=jlnz\n         mvc   0(l'gfnless@,r3),next.gfnless@  skip next, ptr to child\ndropnext lay   r0,next.gfnode\n         stg   r0,w_freed@\n         mviy  next.gfnstat,0\n         oiy   next.gfnhist,gfnhist_freed\n         drop  next\n         drop  cursor\nfree9000 jasl  r14,dall0000\nfree9999 lmg   r0,r15,freesave\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\nfreesave ds    16fd\nw_next@@ ds    ad\nw_tree_balance ds c\nw_free@  ds    ad\nw_free@@ ds    ad\nw_freed@ ds    ad\nJCOGFS01 csect ,\nrept0000 ds    0h                      performed rept\n         stmg  r0,r15,reptsave         temp save-nonstandard\n*        aif   ('&sysparm' ne 'JCO').jco11\n*        #die  'f psw?;l rwregs',type=CMD\n*.jco11   anop\n         lg    r3,w_report@            report/cursor\n         lg    r5,w_merge@             new/update/merge\nreport   using gfnode,r3\nnew      using gfnode,r5\n         lay   r7,w_line\n         using lined,r7\n         lay   r15,=cl256' '\n         mvc   line,0(r15)\n         ltgr  r3,r3\n         jlz   rept_nofreeinfo\n         lay   r15,=cl2'gf'\n         clc   report.gfnid,0(r15)\n         jcogfs_usrab ok=jle\n         macro\n         jcogfs_mvline &fld,&hdr\n         gbla  &jcogfs_pos\n         gblc  &jcogfs_hdr\n&jcogfs_pos seta &jcogfs_pos+1\n&jcogfs_cha setc '&jcogfs_pos'\n&jcogfs_hdr setc '&jcogfs_hdr. &hdr.'\n         lay   r15,=cl16'................'\n         mvc   line+&jcogfs_cha.(l'&fld),0(r15)\n         lay   r15,=cl256' '\n         clc   &fld,0(r15)\n         jle   jcogfs_mvline&jcogfs_cha\n         mvc   line+&jcogfs_cha.(l'&fld),&fld\njcogfs_mvline&jcogfs_cha ds 0h\n&jcogfs_pos seta &jcogfs_pos+l'&fld\n         mend\n         jcogfs_mvline report.gfnstat,t\n         macro\n         jcogfs_xxline &fld,&hdr\n         gbla  &jcogfs_pos\n         gblc  &jcogfs_hdr\n&jcogfs_pos seta &jcogfs_pos+1\n&jcogfs_cha setc '&jcogfs_pos'\n&jcogfs_hdr setc '&jcogfs_hdr. &hdr.'\n         aif   (1 eq l'&fld).x1byte\n         aif   (2 eq l'&fld).x2byte\n         aif   (4 eq l'&fld).x4byte\n         aif   (8 eq l'&fld).x8byte\n         mnote 8,'length not supported in xxline macro'\n         mexit\n.x1byte  anop\n         mvo   temp(2),&fld\n         oiy   temp+1,x'0f'\n         unpk  line+&jcogfs_cha.(2),temp(2)\n         lay   r15,trhex\n         tr    line+&jcogfs_cha.(2),0(r15)\n         ago   .mend\n.x2byte  anop\n         mvo   temp(3),&fld\n         oiy   temp+2,x'0f'\n         unpk  line+&jcogfs_cha.(4),temp(3)\n         lay   r15,trhex\n         tr    line+&jcogfs_cha.(4),0(r15)\n         ago   .mend\n.x4byte  anop\n         mvo   temp(5),&fld\n         oiy   temp+4,x'0f'\n         unpk  line+&jcogfs_cha.(8),temp(5)\n         lay   r15,trhex\n         tr    line+&jcogfs_cha.(8),0(r15)\n         ago   .mend\n.x8byte  anop\n         mvo   temp(5),&fld\n         oiy   temp+4,x'0f'\n         unpk  line+&jcogfs_cha.(8),temp(5)\n         lay   r15,trhex\n         tr    line+&jcogfs_cha.(8),0(r15)\n         mvo   temp(5),&fld+4\n         oiy   temp+4,x'0f'\n         unpk  line+&jcogfs_cha.+8(8),temp(5)\n         lay   r15,trhex\n         tr    line+&jcogfs_cha.+8(8),0(r15)\n.mend    anop\n&jcogfs_pos seta &jcogfs_pos+l'&fld+l'&fld\n         mend\n******   svc   199                     !!!!!!!!!!\n         jcogfs_xxline report.gfnsubp,sp\n         jcogfs_xxline report.gfnhist,..\n         jcogfs_xxline report.gfnrc,rc\n         jcogfs_xxline report.gfnasids,asid\n         jcogfs_xxline report.gfnaddrs,address_\n         jcogfs_xxline report.gfnlen4,length__\n         jcogfs_mvline report.gfnjobname,jobname_\n         lay   r15,=xl256'00'\n         clc   report.gfnwhengot,0(r15)\n         jle   rept_nogotinfo\n         jcogfs_xxline report.gfnwhogotasid,asid\n         jcogfs_xxline report.gfnwhogotpsw,psw_____\n         jcogfs_xxline report.gfnwhogotascb,ascb____\n         jcogfs_xxline report.gfnwhogottcb,tcb_____\n         jcogfs_mvline report.gfnwhogotjobn,jobname_\n         macro\n         jcogfs_stckline &fld,&hdr\n         gbla  &jcogfs_pos\n         gblc  &jcogfs_hdr\n&jcogfs_pos seta &jcogfs_pos+1\n&jcogfs_cha setc '&jcogfs_pos'\n&jcogfs_hdr setc '&jcogfs_hdr. &hdr.'\n         lay   r15,=cl16'................'\n         mvc   line+&jcogfs_cha.(16),0(r15)\n         lay   r15,=xl256'00'\n         clc   &fld,0(r15)\n         jle   jcogfs_stckline&jcogfs_cha\n         mvc   stckval,&fld\n         sam31\n         stckconv stckval=stckval,                                     x\n               timetype=DEC,datetype=YYYYDDD,                          x\n               convval=convval,mf=(E,stckconv)\n         sam64\n         xc    temp,temp\n         mvc   temp(4),convval+8\n         mvc   temp+4(6),convval\n         unpk  line+&jcogfs_cha.(16),temp(9)\n         oiy   line+&jcogfs_cha.+15,x'f0'\njcogfs_stckline&jcogfs_cha ds 0h\n&jcogfs_pos seta &jcogfs_pos+16\n         mend\n         jcogfs_stckline report.gfnwhengot,getmain_tod_____\nrept_nogotinfo ds 0h\n         lay   r15,=xl256'00'\n         clc   report.gfnwhenfreed,0(r15)\n         jle   rept_nofreeinfo\n         jcogfs_xxline report.gfnwhofreedasid,asid\n         jcogfs_xxline report.gfnwhofreedpsw,psw_____\n         jcogfs_xxline report.gfnwhofreedascb,ascb____\n         jcogfs_xxline report.gfnwhofreedtcb,tcb_____\n*        jcogfs_mvline report.gfnwhofreedjobn,jobname_\n*        jcogfs_stckline report.gfnwhenfreed,freemain_tod____\nrept_nofreeinfo ds 0h\n         ltgr  r5,r5\n         jlnz  rept_conflict\n         ltgr  r5,r3            report only one item\n         jlz   rept9000\nrept_conflict lay r15,=cl4'gf'\n         clc   new.gfnid,0(r15)\n         jcogfs_usrab ok=jle\n         jcogfs_mvline new.gfnstat,t\n         jcogfs_xxline new.gfnsubp,sp\n         jcogfs_xxline new.gfnhist,..\n         jcogfs_xxline new.gfnrc,rc\n         jcogfs_xxline new.gfnasids,asid\n         jcogfs_xxline new.gfnaddrs,address_\n         jcogfs_xxline new.gfnlen4,length__\n         jcogfs_mvline new.gfnjobname,jobname_\n*        lay   r15,=xl256'00'\n*        clc   new.gfnwhengot,0(r15)\n*        jle   rept_nonewgotinfo\n*        jcogfs_xxline new.gfnwhogotasid,asid\n*        jcogfs_xxline new.gfnwhogotpsw,psw_____\n*        jcogfs_xxline new.gfnwhogotascb,ascb\n*        jcogfs_xxline new.gfnwhogottcb,tcb_____\n*        jcogfs_mvline new.gfnwhogotjobn,jobname_\n*        jcogfs_stckline new.gfnwhengot,getmain_tod_____\nrept_nonewgotinfo ds 0h\n         lay   r15,=xl256'00'\n         clc   new.gfnwhenfreed,0(r15)\n         jle   rept_nonewfreeinfo\n         jcogfs_xxline new.gfnwhofreedasid,asid\n         jcogfs_xxline new.gfnwhofreedpsw,psw_____\n         jcogfs_xxline new.gfnwhofreedascb,ascb____\n         jcogfs_xxline new.gfnwhofreedtcb,tcb_____\n*        jcogfs_mvline new.gfnwhofreedjobn,jobname_\n         jcogfs_stckline new.gfnwhenfreed,freemain_tod____\nrept_nonewfreeinfo ds 0h\nrept9000 ds    0h\n         drop  r7\n         drop  new\n         drop  report\n         lg    r1,w_outdcb@\n         lay   r2,w_hdr\n         jcogfs_put\nrept9999 lmg   r0,r15,reptsave\n         br    r14                     return\n         ds    0fd\n         ltorg\n         macro\n         jcogfs_hdrline\n         gblc  &jcogfs_hdr\nm_line_hdr dc  c'&jcogfs_hdr'\n         mend\n         jcogfs_hdrline\nhextr    dc    c'0123456789ABCDEF'\n         ORG   hextr-c'0'\ntrhex    ds    0cl256\n         ORG   ,\nlined    dsect\nline     ds    cl256\ntemp     ds    xl16\nconvval  ds    0fd,xl16\nstckval  ds    0fd,xl16\nstckconv stckconv mf=L\nstorage  dsect\nreptsave ds    16fd\nw_merge@ ds    ad\n         ds    0fd\nw_hdr    ds    cl16\nw_line   ds    cl256       lined dsect\nw_temp   ds    xl16\nw_convval ds   0fd,xl16\nw_stckval ds   0fd,xl16\nw_stckconv stckconv mf=L\nJCOGFS01 csect ,\nmove0000 ds    0h                      performed move\n         stmg  r0,r15,movesave         temp save-nonstandard\nnext     using gfnode,r6\ncursor   using gfnode,r4\n         mvc   cursor.gfnstat,next.gfnstat\n         mvc   cursor.gfnsubp,next.gfnsubp\n         mvc   cursor.gfnhist,next.gfnhist\n         mvc   cursor.gfntod,next.gfntod\n         mvc   cursor.gfnstart,next.gfnstart\n         mvc   cursor.gfnpast,next.gfnpast\n         mvc   cursor.gfnlen,next.gfnlen\n         mvc   cursor.gfnjobname,next.gfnjobname\n         mvc   cursor.gfnwhogot,next.gfnwhogot\n         mvc   cursor.gfnwhengot,next.gfnwhengot\n         mvc   cursor.gfnwhofreed,next.gfnwhofreed\n         mvc   cursor.gfnwhenfreed,next.gfnwhenfreed\n         drop  next\n         drop  cursor\nmove9999 lmg   r0,r15,movesave\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\nmovesave ds    16fd\n         macro\n         jcogfs_tree  &label,&less\n         aif   ('&less' eq 'less').less1\n&order   setc  'more'\n&redor   setc  'less'\n         ago   .cont1\n.less1   anop\n&order   setc  'less'\n&redor   setc  'more'\n.cont1   anop\nJCOGFS01 csect ,\n&label.0000 ds 0h                      traverse\n         stmg  r0,r15,&label.save\n         la    r0,0\n         stg   r0,w_merge@             new/update/merge\ncursor   using gfnode,r3\n         ltg   r3,w_64root\n         stg   r3,w_&label.@\n         lay   r0,w_64root\n         stg   r0,w_&label.@@\n         jlz   &label.9999\n&label.0100 cliy cursor.gfnstat,c'G'\n         jcogfs_usrab ok=jle\n         ltg   r4,cursor.gfn&order.@\n         jlz   &label.1000\n         lg    r5,w_64stk_next@\n         lay   r0,cursor.gfnode\n         stg   r0,0(,r5)\n         stg   r0,w_&label.@\n         lg    r0,w_&label.@@\n         stg   r0,8(,r5)\n         lay   r0,cursor.gfn&order.@\n         stg   r0,w_&label.@@\n         lay   r5,16(,r5)\n         stg   r5,w_64stk_next@\n         ltgr  r3,r4\n         jcogfs_usrab ok=jlnz\n         jlu   &label.0100\n&label.1000 lay r1,cursor.gfnode          report/cursor\n         stg   r1,w_&label.@\n         stg   r0,w_&label.@@\n         jlu   &label._nodal_entry\n&label._nodal_exit ds 0h\n         cliy  cursor.gfnstat,0\n         jle   &label.1500\n         lay   r0,cursor.gfn&redor.@\n         ltg   r3,cursor.gfn&redor.@\n         stg   r3,w_&label.@\n         stg   r0,w_&label.@@\n         jlnz  &label.0100\n&label.1500 ds 0h\n         lg    r5,w_64stk_next@\n         clg   r5,w_64stk_origin\n         jlnh  &label.9999\n         aghi  r5,-16\n         ltg   r3,0(,r5)\n         jcogfs_usrab ok=jlnz\n         ltg   r0,8(,r5)\n         jcogfs_usrab ok=jlnz\n         stg   r3,w_&label.@\n         stg   r0,w_&label.@@\n         stg   r5,w_64stk_next@\n         jlu   &label.1000\n         drop  cursor\n&label.9999 lmg r0,r15,&label.save\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\n&label.save ds 16fd\nw_&label.@  ds ad\nw_&label.@@ ds ad\nJCOGFS01 csect ,\n         mend\n         jcogfs_tree tree,less\ntree_nodal_entry ds 0h\ncursor   using gfnode,r3\n         lay   r0,cursor.gfnode\n         stg   r0,w_report@\n         lg    r14,w_tree_total\n         aghi  r14,1\n         stg   r14,w_tree_total\n         lay   r0,0\n         stg   r0,w_merge@             new/update/merge\n*****    #die  'l rwregs',type=CMD\n         llgt  r14,cursor.gfnaddrs\n         clg   r14,=ad(x'80000000')\n         jlnl  tree_rept_usrab\n         llgt  r14,cursor.gfnaddrh\n         clg   r14,=ad(x'80000000')\n         jlnl  tree_rept_usrab\n         llgf  r14,cursor.gfnlen4\n         clg   r14,=ad(X'60000000')\n         jlh   tree_rept_usrab\n******   #die  'l rwregs',type=CMD\n         jasl  r14,rept0000\n         jlu   tree_nodal_exit\ntree_rept_usrab ds 0h\n         jasl  r14,rept0000\n         drop  cursor\n         jcogfs_usrab ok=jlnop\n         ltorg\nstorage  dsect\nw_tree_total ds fd\nJCOGFS01 csect ,\n         jcogfs_tree subl,less\nsubl_nodal_entry ds 0h\ncursor   using gfnode,r3\n*****    #die  'l rwregs',type=CMD\n         lg    r6,w_subf\nsubf     using gfnode,r6\n*****    jlu   subl_qa1\n         clc   cursor.gfnasids,subf.gfnasids\n         jlne  subl_nodal_exit\n         clc   cursor.gfnwhogottcb,subf.gfnwhofreedtcb\n         jlne  subl_nodal_exit\n         clc   cursor.gfnsubp,subf.gfnsubp\n         jlne  subl_nodal_exit\n         clc   subf.gfnwhofreedasid,subf.gfnasids\n         jcogfs_usrab ok=jle\nsubl_qa1 lay   r0,cursor.gfnode\n         stg   r0,w_free@\n         lg    r0,w_subl@@\n         stg   r0,w_free@@\n         mviy  w_tree_balance,c'L'\n         jasl  r14,free0000\n******   #die  'l rwregs',type=CMD\n         drop  cursor\n         jlu   subl_nodal_exit\n         ltorg\n         jcogfs_tree subm,more\nsubm_nodal_entry ds 0h\ncursor   using gfnode,r3\n*****    #die  'l rwregs',type=CMD\n         lg    r6,w_subf\nsubf     using gfnode,r6\n*****    jlu   subm_qa1\n         clc   cursor.gfnasids,subf.gfnasids\n         jlne  subm_nodal_exit\n         clc   cursor.gfnwhogottcb,subf.gfnwhofreedtcb\n         jlne  subm_nodal_exit\n         clc   cursor.gfnsubp,subf.gfnsubp\n         jlne  subm_nodal_exit\n         clc   subf.gfnwhofreedasid,subf.gfnasids\n         jcogfs_usrab ok=jle\nsubm_qa1 lay   r0,cursor.gfnode\n         stg   r0,w_free@\n         lg    r0,w_subm@@\n         stg   r0,w_free@@\n         mviy  w_tree_balance,c'R'\n         jasl  r14,free0000\n******   #die  'l rwregs',type=CMD\n         drop  cursor\n         drop  subf\n         jlu   subm_nodal_exit\n         ltorg\nJCOGFS01 csect ,\nopen9999 ds    0h\nipc10000 ds    0h\n         lay   r14,w_64iusertkn+4\n         lay   r15,=c'jgfi'                   1st half zero-unauth\n         mvc   0(4,r14),0(r15)    1st half zero-unauth\n         lg    r0,w_tree_total\n         aghi  r0,1\n         msg   r0,=ad(jgfi_len+5*4096)\n         srlg  r0,r0,20\n         aghi  r0,1\n         lgr   r0,r0\n         aghi  r0,1\n         stg   r0,w_64isegs\n         lay   r2,w_64isegs\n         lay   r3,=ad(1)\n         lay   r4,w_64iusertkn\n         lay   r5,w_64iorigin\n         lay   r6,=al1(99)\n         iarv64 request=GETSTOR,                                       x\n               cond=NO,                                                x\n               segments=(r2),                                          x\n               guardsize64=(r3),                                       x\n               guardloc=HIGH,                                          x\n               key=CALLERKEY,                                          x\n               fprot=NO,                                               x\n               svcdumprgn=YES,                                         x\n               control=UNAUTH,                                         x\n               usertkn=(r4),                                           x\n               origin=(r5),                                            x\n               dumppriority=(r6),                                      x\n               plistver=MAX,                                           x\n               mf=(E,w_64,COMPLETE)\n         lg    r0,w_64iorigin\n         stg   r0,w_64iunusedup\n         lg    r0,w_64isegs\n         aghi  r0,-1\n         sllg  r0,r0,20\n         alg   r0,w_64iorigin\n         stg   r0,w_64ilimit\n         stg   r0,w_64ipagedown\n         lay   r0,0\n         stg   r0,w_dumpindex\nipc1_dumps ds  0h\n         lg    r0,w_dumpindex\n         aghi  r0,+1\n         stg   r0,w_dumpindex\n         cvdy  r0,w_packwork\n         lay   r15,w_packwork\n         lay   r14,w_ddname\n         unpk  4(4,r14),6(2,r15)\n         lay   r14,w_ddname\n         lay   r15,=c'DUMP0000'\n         mvc   0(5,r14),0(r15)\n         oiy   w_ddname+7,x'f0'\n         stg   r14,w_ddn@\n         jasl  r14,ddck0000\n         ltr   r15,r15\n         jlnz  ipc1_nodump1\n         jasl  r14,attx0000\n         jasl  r14,i64d0000\n         jlu   ipc1_dumps\nipc1_nodump1 ds 0h\n         lay   r15,=cl8'ACTIVE  '\n         stg   r15,w_ddn@\n         jasl  r14,ddck0000\n         ltr   r15,r15\n         jlnz  ipc19999\n         jasl  r14,attx0000\n         jasl  r14,i64d0000\n         jlu   ipc19999\n         ds    0fd\n         sysstate archlvl=2,amode64=NO\nm_ikjeftsr_plist call ,(0,0,0,0,0,0),mf=L\nm_ikjeftsr_plist_len equ *-m_ikjeftsr_plist\n         ds    0fd\nm_attachx attachx ecb=0,                                               x\n               ep=IKJEFTSR,                                            x\n               svarea=YES,                                             x\n               jstcb=NO,                                               x\n               rsapf=NO,                                               x\n               sm=PROB,                                                x\n               SF=L\nm_attachx_len equ *-m_attachx\n         sysstate archlvl=2,amode64=YES\n         ltorg\nstorage  dsect\nw_dumpindex ds fd\nw_packwork ds  fd\nw_ddname ds    cl8\nw_64isegs ds   fd\nw_64iusertkn ds fd\nw_64iorigin ds ad\nw_64iunusedup ds ad\nw_64ipagedown ds ad\nw_64ilimit ds  ad\nw_ecb    ds    f\nw_tcb@   ds    a\n         sysstate archlvl=2,amode64=NO\nw_ikjeftsr_plist call ,(0,0,0,0,0,0),mf=L\nw_ikjeftsr_plist_len equ *-w_ikjeftsr_plist\nw_attachx attachx ecb=0,                                               x\n               ep=IKJEFTSR,                                            x\n               svarea=YES,                                             x\n               jstcb=NO,                                               x\n               rsapf=NO,                                               x\n               sm=PROB,                                                x\n               SF=L\nw_attachx_len equ *-w_attachx\n         sysstate archlvl=2,amode64=YES\nw_jcogfsc1_ddn ds cl8\n         org   ,\nJCOGFS01 csect ,\nattx0000 ds    0h                      performed attx\n         stmg  r0,r15,attxsave         temp save-nonstandard\n         lay   r14,w_ikjeftsr_plist\n         lay   r15,m_ikjeftsr_plist\n         mvc   0(w_ikjeftsr_plist_len,r14),0(r15)\n*        oiy   w_ikjeftsr_flags+0,x'00' byte 1 is allways zeroes\n         oiy   w_ikjeftsr_flags+1,x'01' unisolated=01 byte 2\n         oiy   w_ikjeftsr_flags+2,x'01' dump\n         oiy   w_ikjeftsr_flags+3,x'01' clist stack before and is run\n         lay   r0,w_ikjeftsr_buffer\n         lay   r1,l'w_ikjeftsr_buffer\n         sty   r1,w_ikjeftsr_buffer_len\n         lay   r14,m_ikjeftsr_buffer\n         lay   r15,m_ikjeftsr_buffer_len\n         mvcl  r0,r14\n         lay   r0,c'@'\n         lay   r2,w_ikjeftsr_buffer\n         lay   r1,m_ikjeftsr_buffer_len(,r2)\n         srst  r1,r2\n         jcogfs_usrab ok=jll\n         cliy  0(r1),c'@'\n         jcogfs_usrab ok=jle\n         lay   r15,=cl16'ACTIVE'\n         mvc   0(16,r1),0(r15)\n         lg    r14,w_ddn@\n         clc   0(8,r14),0(r15)\n         jle   attx_active\n         lay   r15,=cl16'AAAA0000'\n         mvc   0(16,r1),0(r15)\n         mvc   0(8,r1),0(r14)\nattx_active ds 0h\n         lay   r0,0\n         sty   r0,w_ecb\n         lay   r2,w_ecb\n         lay   r0,w_ikjeftsr_flags\n         lay   r3,w_ikjeftsr_buffer\n         lay   r4,w_ikjeftsr_buffer_len\n         lay   r5,w_ikjeftsr_rc\n         lay   r6,w_ikjeftsr_rs\n         lay   r7,w_ikjeftsr_abendcode\n         lay   r1,w_ikjeftsr_plist\n         sysstate archlvl=2,amode64=NO\n         llgt  r15,cvtptr\n         llgt  r15,cvttvt-cvt(r15)\n         llgf  r15,tsvtasf-tsvt(r15)\n         sam31\n*******  call  (15),(flags,cmdbuff,buflen,retcode,rsncode,abndcode),vl\n         call  (15),((r0),(r3),(r4),(r5),(r6),(r7)),VL,mf=(E,(r1))\n         sam64\n         ltr   r15,r15\n         jcogfs_usrab ok=jlz\n**       lay   r14,w_attachx\n**       lay   r15,m_attachx\n**       mvc   0(w_attachx_len,r14),0(r15)\n**       attachx ecb=(r2),\n**             param=((r0),(r3),(r4),(r5),(r6),(r7)),\n**             svarea=YES,\n**             jstcb=NO,\n**             rsapf=NO,\n**             sm=PROB,\n**             mf=(E,(r8)),\n**             sf=(E,(r9))\n**       ltr   r15,r15\n**       jcogfs_usrab ok=jlz\n**       sty   r1,w_tcb@\n**       lay   r2,w_ecb\n**       wait  ecb=(r2)\n**       lay   r1,w_tcb@\n**       detach (r1)\n         sysstate archlvl=2,amode64=YES\n**       lay   r5,w_modeprob\n**       lay   r15,m_modeprob\n**       mvc   0(l'w_modeprob,r5),0(r15)\n**       modeset mf=(E,w_modeprob)\n         mviy  w_line,c' '\n         lay   r14,w_line\n         mvc   1(l'w_line-1,r14),0(r14)\n         mviy  w_line+6,c'+'\n         mviy  w_line+1+4+3+9,c'+'\n         lay   r15,w_prdtitle\n         lay   r14,w_line+1+4+3+9+1+1\n         mvc   0(l'w_prdtitle,r14),0(r15)\n         lay   r15,=cl16'dump_title'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         lg    r1,w_outdcb@\n         lay   r2,w_hdr\n         jcogfs_put\n         lay   r15,w_prddsnam\n         lay   r14,w_line+1+4+3+9+1+1\n         mvc   0(l'w_prddsnam,r14),0(r15)\n         lay   r15,=cl16'dump_dsname'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         lg    r1,w_outdcb@\n         lay   r2,w_hdr\n         jcogfs_put\n         lg    r5,w_64iorigin\npsws_nextjgfi ds 0h\n         alg   r5,=ad(jgfi_len)\n         using jgfi_end,r5\n         clg   r5,w_64iunusedup      formerly was not passed from gfsi1\n         jlh   psws_endofpsws        so\n         lay   r14,jgfi_id\n         lay   r15,=c'jgfi'\n         clc   0(l'jgfi_id,r14),0(r15) used controlblockid check\n*****    jne   psws_endofpsws        to determine end,not required now\n         jcogfs_usrab ok=jle\n         jasl  r14,dump0000\n         jlu   psws_nextjgfi\npsws_endofpsws ds 0h\n         drop  r5\nattx9999 lmg   r0,r15,attxsave\n         br    r14                     return\n         ds    0fd\n         ltorg\nm_modesup modeset mode=SUP,mf=L\nm_modesup_len equ *-m_modesup\nm_modeprob modeset mode=PROB,mf=L\nm_modeprob_len equ *-m_modeprob\nm_ikjeftsr_buffer dc 0fd\n         DC    CL80'JCOGFSC1 @@@@@@@@@@@@@@@@    '\n*        dc    cl80'IPCS '\n*        dc    cl80'SETDEF @@@@@@@@@@@@@@@@    NOCONFIRM '\n*        dc    cl80'VERBX JCOGFSI1 '\n*        dc    cl80'DROPDUMP '\n*        dc    cl80'END '\nm_ikjeftsr_buffer_len equ *-m_ikjeftsr_buffer\n         ikjtsvt\nstorage  dsect\nattxsave ds    16fd\nw_ddn@   ds    ad\nw_modesup modeset mode=SUP,mf=L\nw_modesup_len equ *-w_modesup\nw_modeprob modeset mode=PROB,mf=L\nw_modeprob_len equ *-w_modeprob\nw_ikjeftsr_flags ds f\nw_ikjeftsr_buffer_len ds f\nw_ikjeftsr_rc ds f\nw_ikjeftsr_rs ds f\nw_ikjeftsr_abendcode ds f\n         ds    0fd\nw_ikjeftsr_buffer ds xl(m_ikjeftsr_buffer_len)\nJCOGFS01 csect ,\nddck0000 ds    0h\n         stmg  r0,r15,ddcksave\n         lg    r2,w_ddn@\n         lay   r3,w_devarea\n         devtype (r2),(r3)\nddck9999 lmg   r0,r14,ddcksave\n         br    r14\n         ds    0fd\n         ltorg\n*****    iefdismp\nstorage  dsect\nddcksave ds    16fd\n         ds    0fd\nw_devarea ds   xl256\n         ds    0fd\nJCOGFS01 csect ,\ni64d0000 ds    0h\n         stmg  r0,r15,i64dsave\n         lg    r0,w_64iorigin\n         stg   r0,w_ranglist_startad\n         lg    r0,w_64isegs\n         aghi  r0,-1\n         sllg  r0,r0,20-12\n         stg   r0,w_ranglist_pagesfd\n         lay   r2,w_ranglist\n         stg   r2,w_ranglist@\n         lay   r2,w_ranglist@\n         lay   r3,=f'1'\n         iarv64 request=DISCARDDATA,                                   x\n               ranglist=(r2),                                          x\n               numrange=(r3),                                          x\n               plistver=MAX,                                           x\n               mf=(E,w_64,COMPLETE)\n         ltr   r15,r15\n         jcogfs_usrab ok=jlz\n         lg    r0,w_64iorigin\n         stg   r0,w_64iunusedup\n         lg    r0,w_64isegs\n         aghi  r0,-1\n         sllg  r0,r0,20\n         alg   r0,w_64iorigin\n         stg   r0,w_64ilimit\n         stg   r0,w_64ipagedown\ni64d9999 lmg   r0,r15,i64dsave\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\ni64dsave ds    16fd\nw_ranglist@ ds ad\nw_ranglist ds 0fd\nw_ranglist_startad ds ad\nw_ranglist_pagesfd ds fd\nJCOGFS01 csect ,\nxxxx0000 ds    0h                      performed xxxx\n         stmg  r0,r15,xxxxsave         temp save-nonstandard\nxxxx9999 lmg   r0,r15,xxxxsave\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\nxxxxsave ds    16fd\nJCOGFS01 csect ,\ndump0000 ds    0h\n         stmg  r0,r15,dumpsave\n         using jgfi_end,r5\n         macro\n         jcogfs_dump_jgfi_where &label,&var\n         cliy  jgfi_&var.where,0\n         jle   dump_where_&var._exit\n         lay   r15,=cl16'&label'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         mviy  w_line,c' '\n         lay   r14,w_line\n         mvc   1(l'w_line-1,r14),0(r14)\n         lay   r0,0\n         lay   r1,m_trot_hex\n         lay   r2,w_line+1\n         lay   r3,l'jgfi_&var.asid\n         lay   r4,jgfi_&var.asid\n         trot  r2,r4,b'0001'\n         mviy  w_line+6,c'|'\n         lay   r0,0\n         lay   r1,m_trot_hex\n         lay   r2,w_line+1+4+3\n         lay   r3,l'jgfi_&var.@\n         lay   r4,jgfi_&var.@\n         trot  r2,r4,b'0001'\n         mviy  w_line+1+4+3+9,c'|'\n         lay   r2,w_line+1+4+3+9+2\n         lay   r3,jgfi_&var.where\n         mvc   0(l'jgfi_&var.where,r2),0(r3)\n         lg    r1,w_outdcb@\n         lay   r2,w_hdr\n         jcogfs_put\ndump_where_&var._exit ds 0h\n         mend\n         macro\n         jcogfs_dump_jgfi_pages &label,&var\n         ly    r0,jgfi_&var.l\n         ltr   r0,r0\n         jlz   dump_pages_&var._exit\n         llgt  r0,jgfi_&var.@\n         ltr   r0,r0\n         jlz   dump_pages_&var._exit\n         mviy  w_hdr,c' '\n         lay   r14,w_hdr\n         mvc   1(l'w_hdr-1,r14),0(r14)\n         lay   r14,w_line\n         mviy  w_line,c' '\n         mvc   1(l'w_line-1,r14),0(r14)\n         lay   r15,=cl26' asid |  address | hexdump'\n         mvc   0(26,r14),0(r15)\n         lay   r14,w_line+84\n         lay   r15,=cl6'|text '\n         mvc   0(6,r14),0(r15)\n         mviy  w_line+117,c'|'\n         lay   r15,=cl16' '\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         lg    r1,w_outdcb@\n         lay   r2,w_hdr\n         jcogfs_put\n         lay   r15,=cl16'&label'\n         lay   r14,w_hdr\n         mvc   0(l'w_hdr,r14),0(r15)\n         icmy  r0,b'0011',jgfi_&var.asid\n         stcmy r0,b'0011',w_asidx\n         llgt  r0,jgfi_&var.@\n         nill  r0,x'f000'\n         sty   r0,w_hexa\n         ltg   r0,jgfi_&var.p\n         stg   r0,w_data@\n         jlz   dump_pages_&var._exit\n         mviy  w_line,c' '\n         lay   r14,w_line\n         mvc   1(l'w_line-1,r14),0(r14)\n         lay   r6,128\n         lay   r7,0\ndump_pages_&var.p ds 0h\n         lg    r4,w_data@\n         lay   r15,=xl32'00'\n         clc   0(32,r4),0(r15)\n         jlne  dump_pages_&var.p1\n         lay   r7,1(,r7)\n         tmy   workflg0,flg0_nozeroes\n         jlo   dump_pages_&var.nozeroes\ndump_pages_&var.p1 ds 0h\n         lay   r0,0\n         lay   r1,m_trot_hex\n         lay   r2,w_line+1\n         lay   r3,l'w_asidx\n         lay   r4,w_asidx\n         trot  r2,r4,b'0001'\n         lay   r0,0\n         lay   r1,m_trot_hex\n         mviy  w_line+6,c'|'         aaaa |\n         lay   r2,w_line+1+4+3\n         lay   r3,l'w_hexa\n         lay   r4,w_hexa\n         trot  r2,r4,b'0001'\n         lay   r0,0\n         lay   r1,m_trot_hex\n         mviy  w_line+17,c'|'        aaaa | xxxxxxxx\n         lay   r2,w_line+1+4+3+8+3\n         lay   r3,32\n         lg    r4,w_data@\n         trot  r2,r4,b'0001'\n         mviy  w_line+84,c'|'\n         lay   r1,m_trprt\n         lay   r2,w_line+85\n         lay   r3,32\n         lg    r4,w_data@\n         troo  r2,r4,b'0001'\n         mviy  w_line+117,c'|'\n         lg    r1,w_outdcb@\n         lay   r2,w_hdr\n         jcogfs_put\ndump_pages_&var.nozeroes ds 0h\n         ly    r1,w_hexa\n         lay   r1,32(,r1)\n         sty   r1,w_hexa\n         lg    r1,w_data@\n         lay   r1,32(,r1)\n         stg   r1,w_data@\n         aghi  r6,-1\n         ltgr  r6,r6\n         jlp   dump_pages_&var.p\n         chi   r7,128\n         jlne  dump_pages_&var._exit\n         mviy  w_line,c' '\n         lay   r14,w_line\n         mvc   1(l'w_line-1,r14),0(r14)\n         llgt  r0,jgfi_&var.@\n         nill  r0,x'f000'\n         sty   r0,w_hexa\n         lay   r0,0\n         lay   r1,m_trot_hex\n         lay   r2,w_line+1\n         lay   r3,l'w_asidx\n         lay   r4,w_asidx\n         trot  r2,r4,b'0001'\n         lay   r0,0\n         lay   r1,m_trot_hex\n         mviy  w_line+6,c'|'         aaaa |\n         lay   r2,w_line+1+4+3\n         lay   r3,l'w_hexa\n         lay   r4,w_hexa\n         trot  r2,r4,b'0001'\n         lay   r0,0\n         lay   r1,m_trot_hex\n         mviy  w_line+17,c'|'        aaaa | xxxxxxxx\n         lay   r2,w_line+1+4+3+8+3\n         lay   r15,=cl9'allzeroes'\n         mvc   0(9,r2),0(r15)\n         mviy  w_line+84,c'|'\n         mviy  w_line+117,c'|'\n         lg    r1,w_outdcb@\n         lay   r2,w_hdr\n         jcogfs_put\ndump_pages_&var._exit ds 0h\n         mend\n         jcogfs_dump_jgfi_where psw_where,whogotpsw\n         jcogfs_dump_jgfi_pages last_copyright,whogotpswback\n         jcogfs_dump_jgfi_pages psw_getmain,whogotpsw\n         jcogfs_dump_jgfi_where psw_where,whofreedpsw\n         jcogfs_dump_jgfi_pages last_copyright,whofreedpswback\n         jcogfs_dump_jgfi_pages psw_freemain,whofreedpsw\n         jcogfs_dump_jgfi_where left_where,leftover\n         jcogfs_dump_jgfi_pages leftover_page,leftover\n         drop  r5\ndump9999 lmg   r0,r15,dumpsave\n         br    r14\n         ds    0fd\n         ltorg\nm_trot_hex ds  0fd                     must be on doubleword bndry\n         dc    c'000102030405060708090a0b0c0d0e0f'\n         dc    c'101112131415161718191a1b1c1d1e1f'\n         dc    c'202122232425262728292a2b2c2d2e2f'\n         dc    c'303132333435363738393a3b3c3d3e3f'\n         dc    c'404142434445464748494a4b4c4d4e4f'\n         dc    c'505152535455565758595a5b5c5d5e5f'\n         dc    c'606162636465666768696a6b6c6d6e6f'\n         dc    c'707172737475767778797a7b7c7d7e7f'\n         dc    c'808182838485868788898a8b8c8d8e8f'\n         dc    c'909192939495969798999a9b9c9d9e9f'\n         dc    c'a0a1a2a3a4a5a6a7a8a9aaabacadaeaf'\n         dc    c'b0b1b2b3b4b5b6b7b8b9babbbcbdbebf'\n         dc    c'c0c1c2c3c4c5c6c7c8c9cacbcccdcecf'\n         dc    c'd0d1d2d3d4d5d6d7d8d9dadbdcdddedf'\n         dc    c'e0e1e2e3e4e5e6e7e8e9eaebecedeeef'\n         dc    c'f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff'\n         ds    0fd\nm_trprt  ds    xl256                   must be on doubleword bndry\n         org   m_trprt\n         dc    256c'.'\n         org   m_trprt+c' '\n         dc    c' '\n         org   m_trprt+c'\u00a2'\n         dc    c'\u00a2.<(+|&&'\n         org   m_trprt+c'!'\n         dc    c'!$*);\u00ac-/'\n         org   m_trprt+c'\u00a6'\n         dc    c'\u00a6,%_>?'\n         org   m_trprt+c'a'\n         dc    c'abcdefghi'\n         org   m_trprt+c'j'\n         dc    c'jklmnopqr'\n         org   m_trprt+c'~'\n         dc    c'~stuvwxyz'\n         org   m_trprt+c'{'\n         dc    C'{ABCDEFGHI'\n         ORG   m_trprt+C'}'\n         dc    C'}JKLMNOPQR'\n         org   m_trprt+c'\\'\n         dc    C'\\'\n         org   m_trprt+C'S'\n         dc    C'STUVWXYZ'\n         org   m_trprt+c'0'\n         dc    c'0123456789'\n         org   m_trprt+l'm_trprt\n         ds    0fd\nstorage  dsect\ndumpsave ds    16fd\nw_asidx  ds    h\n         ds    h\nw_hexa   ds    a\nw_data@  ds    ad\nJCOGFS01 csect ,\nipc19999 ds    0h\nexit0000 ds    0h\n         jcogfs_close outdcb\n         ly    r0,=a(dcbs_len)\n         storage RELEASE,length=(r0),addr=(r5)\n******** dc    x'0000'\n         ltg   r0,w_64iusertkn\n         jlnz exit0003\n         ltg   r0,w_64iorigin\n         jlz   exit0004\nexit0003 ds    0h\n         lay   r4,w_64iusertkn\n         iarv64 request=DETACH,                                        x\n               match=USERTOKEN,                                        x\n               usertkn=(r4),                                           x\n               cond=NO,                                                x\n               owner=YES,                                              x\n               plistver=MAX,                                           x\n               mf=(E,w_64,COMPLETE)\nexit0004 ltg   r0,w_64usertkn\n         jlnz exit0005\n         ltg   r0,w_64origin\n         jlz   exit0006\nexit0005 lay   r4,w_64usertkn\n         iarv64 request=DETACH,                                        x\n               match=USERTOKEN,                                        x\n               usertkn=(r4),                                           x\n               cond=NO,                                                x\n               owner=YES,                                              x\n               plistver=MAX,                                           x\n               mf=(E,w_64,COMPLETE)\nexit0006 ltg   r0,w_64stk_usertkn\n         jlnz exit0007\n         ltg   r0,w_64stk_origin\n         jlz   exit0009\nexit0007 lay   r4,w_64stk_usertkn\n         iarv64 request=DETACH,                                        x\n               match=USERTOKEN,                                        x\n               usertkn=(R4),                                           x\n               cond=NO,                                                x\n               owner=YES,                                              x\n               plistver=MAX,                                           x\n               mf=(E,w_64,COMPLETE)\nexit0009 ds    0h\nexit0010 xr    r9,r9\n         llgf  r9,comprc\n         lay   r1,storage              our storage/savearea\n         ly    r0,=a(storagel)\n         storage RELEASE,length=(r0),addr=(r1) release ours\n         lr    retcode,r9\n         pr\n         ltorg\nstorage  dsect\nclonei2  ds    0fd\n         drop  savereg\nJCOGFS01 csect ,\n         entry JCOGFSI1\nJCOGFSI1 jlu   prologuei               branch around eyecatcher.\n         dc    cl8'JCOGFS01'           module name.\n         dc    cl8'&sysdate'           assemble date.\nprologuei bakr  r14,0\n         sam64\n         larl  basereg,lasth\n         algfi basereg,1\n         using lasth+1,basereg\n         ly    r0,=a(storagel)\n         storage OBTAIN,length=(r0),bndry=PAGE,loc=(ANY,ANY)\n         sty   savereg,saveareai-storage+4(,r1) addr of caller's save\n         sty   r1,8(,savereg)          save address of my save area.\n         lay   savereg,saveareai-storage(,r1) my savearea\n         using saveareai,savereg\n         mviy  storage_id+0,c'g'\n         mviy  storage_id+1,c'f'\n         mviy  storage_id+2,c's'\n         mviy  storage_id+3,c'i'\n         mviy  storage_id+4,c'1'\n         mviy  saveareai+4,c'F'\n         mviy  saveareai+5,c'6'\n         mviy  saveareai+6,c'S'\n         mviy  saveareai+7,c'A'\n         sam31\n         sysstate archlvl=2,amode64=NO\n         lay   r2,=a(ieant_home_level)\n         lay   r3,=cl16'JCOGFS01'\n         lay   r4,nt_token\n         lay   r14,w_calli\n         lay   r15,m_calli\n         mvc   0(w_call_leni,r14),(r15)\n         lay   r6,nt_return\n         lay   r7,w_calli\n         llgt  r15,cvtptr\n         llgt  r15,cvtcsrt-cvt(r15,0)\n         llgt  r15,X'14'(r15,0)\n         llgt  r15,X'08'(r15,0)\n         call  (15),((r2),(r3),(r4),(r6)),mf=(E,(r7))\n         ly    r15,nt_return\n         ltr   r15,r15\n         jcogfs_usrab ok=jlz\n         ly    r4,nt_storage@\n         sysstate archlvl=2,amode64=YES\n         sam64\n         lay   r1,storage              our storage/savearea\n         drop  savereg                 drop ours\n         ly    r0,=a(storagel)\n         storage RELEASE,length=(r0),addr=(r1) release tempsave\n         eregg savereg,savereg\n         sty   savereg,saveareai-storage+4(,r4) addr of caller's save\n         lay   r0,saveareai-storage(,r4) my savearea\n         sty   r0,8(,savereg)          save address of my save area.\n         lay   savereg,saveareai-storage(,r4) my savearea\n         using saveareai,savereg\n         eregg r1,r1\n         stg   r1,w_abdpl@\n         jlu   ntrt9999i\n         ltorg\nm_calli   call  ,(0,0,0,0),mf=L\nm_call_leni equ *-m_calli\nstorage  dsect\nw_abdpl@ ds    ad\n         ds    0fd\nw_calli   call  ,(0,0,0,0),mf=L\nw_call_leni equ *-w_calli\nJCOGFS01 csect ,\nntrt9999i ds   0h\nauth0000i ds   0h                      get jscbauth nonstandard if req\n         TESTAUTH FCTN=1,STATE=YES,RBLEVEL=1\n         ltr   r15,r15\n         jlz   auth9000i\n         lay   r1,=cl4'AUTH'\n***      svc   245\nauth9000i ds   0h\n         jlu   auth9999i\n         ds    0fd\n         ltorg\nauth9999i ds   0h\nproc0000i ds   0h\n         sysstate archlvl=2,amode64=YES\n         sam64\n         jasl  r14,dmpi0000\n*****    svc   199\n         jasl  r14,trei0000\n         jlu   proc9999i\n         ltorg\njgfi     dsect\njgfistart equ  *\njgfi_whogotpswbackp ds ad\njgfi_whogotpswp ds ad\njgfi_whofreedpswbackp ds ad\njgfi_whofreedpswp ds ad\njgfi_leftoverp ds ad\njgfi_whogotpswbackz ds f\njgfi_whogotpswz ds f\njgfi_whofreedpswbackz ds f\njgfi_whofreedpswz ds f\njgfi_leftoverz ds f\njgfi_gfnode ds xl(gfnode_len)\njgfi_whogotpswwhere ds cl42\njgfi_whogotpswasid ds h\njgfi_whogotpsw@ ds a\njgfi_whogotpswl ds f\njgfi_whogotpswbackasid equ jgfi_whogotpswasid\njgfi_whogotpswback@ ds a\njgfi_whogotpswbackl ds f\njgfi_whofreedpswwhere ds cl42\njgfi_whofreedpswasid ds h\njgfi_whofreedpsw@ ds a\njgfi_whofreedpswl ds f\njgfi_whofreedpswbackasid equ jgfi_whofreedpswasid\njgfi_whofreedpswback@ ds a\njgfi_whofreedpswbackl ds f\njgfi_leftoverwhere ds cl42\njgfi_leftoverasid ds h\njgfi_leftover@ ds a\njgfi_leftoverl ds f\njgfi_id  ds    cl4\njgfipage equ   ((((*-jgfistart)+255)/256)*256)-(*-jgfistart)\n         ds    (jgfipage)x\njgfi_len equ   *-jgfi\njgfi_end ds    0x\nstorage  dsect\nJCOGFS01 csect ,\n         jcogfs_tree trei,less\ntrei_nodal_entry ds 0h\ncursor   using gfnode,r3\n         lg    r4,w_64iorigin\ntrei_scan_psws ds 0h\n         alg   r4,=ad(jgfi_len)\n         clg   r4,w_64iunusedup\n         using jgfi_end,r4\n         jlnh  trei_notalready\n         llgt  r0,w_common\n         cly   r0,jgfi_whogotpsw@\n         jlh   trei_use_asid\n         llgt  r0,w_commone\n         cly   r0,jgfi_whogotpsw@\n         jlnl  trei_not_asid\ntrei_use_asid  ds 0h\n         lay   r0,0\n         icmy  r0,b'0011',cursor.gfnwhogotasid\n         clmy  r0,b'0011',jgfi_whogotpswasid\n         jlne  trei_notalready\ntrei_not_asid  ds 0h\n         llgt  r0,cursor.gfnwhogotpsw\n         cly   r0,jgfi_whogotpsw@\n         jle   trei_checkfree\n         nill  r0,x'f000'\n         cly   r0,jgfi_whogotpsw@\n         jlne  trei_notalready\ntrei_checkfree ds 0h\n         llgt  r0,w_common\n         cly   r0,jgfi_whogotpsw@\n         jlh   trei_use_asid1\n         llgt  r0,w_commone\n         cly   r0,jgfi_whogotpsw@\n         jlnl  trei_not_asid1\ntrei_use_asid1 ds 0h\n         lay   r0,0\n         icmy  r0,b'0011',cursor.gfnwhofreedasid\n         clmy  r0,b'0011',jgfi_whofreedpswasid\n         jlne  trei_notalready\ntrei_not_asid1 ds 0h\n         llgt  r0,cursor.gfnwhofreedpsw\n         cly   r0,jgfi_whofreedpsw@\n         jle   trei_scan_psws\n         nill  r0,x'f000'\n         cly   r0,jgfi_whofreedpsw@\n         jle   trei_scan_psws\ntrei_notalready ds 0h\n         lg    r4,w_64iunusedup\n         alg   r4,=ad(jgfi_len)\n         clg   r4,w_64ipagedown\n         jcogfs_usrab ok=jlnh\n         stg   r4,w_64iunusedup\n         lay   r0,jgfistart\n         lg    r1,=ad(jgfi_len)\n         xgr   r14,r14\n         xgr   r15,r15\n         mvcl  r0,r14\n         mviy  jgfi_id+0,c'j'\n         mviy  jgfi_id+1,c'g'\n         mviy  jgfi_id+2,c'f'\n         mviy  jgfi_id+3,c'i'\n         lay   r0,cursor.gfnode\n         lay   r1,gfnode_len\n         lay   r14,jgfi_gfnode\n         lgr   r15,r1\n         mvcl  r14,r0\n         llgt  r0,cursor.gfnwhogotpsw\n         ltgr  r0,r0\n         jlz   trei_nowhogot\n         sty   r0,jgfi_whogotpsw@\n         sty   r0,w_address\n         lhy   r0,cursor.gfnwhogotasid\n         sthy  r0,jgfi_whogotpswasid\n         sthy  r0,w_asid\n         stg   r4,w_jgfi@\n         jasl  r14,pagi0000\n         cliy  w_whereONMO,0\n         jle   trei_nowhogotwherepagi\n         lay   r14,jgfi_whogotpswwhere\n         lay   r15,w_whereONMO\n         mvc   0(l'jgfi_whogotpswwhere,r14),0(r15)\ntrei_nowhogotwherepagi ds 0h\n         llgh  r1,w_length\n         ltgr  r15,r1\n         jlz   trei_nowhogot\n         sty   r15,jgfi_whogotpswl\n         lay   r0,jgfi_whogotpswp\n         jasl  r14,jpag0000\n         lay   r14,o_where\n         lay   r15,w_where\n         mvc   0(l'o_where,r14),0(r15)\n         jasl  r14,back0000\n         llgt  r0,w_backpage@\n         ltgr  r0,r0\n         jlz   trei_nowhogot\n         lay   r0,w_backpage\n         lay   r1,4096\n         sty   r1,jgfi_whogotpswbackl\n         lay   r0,jgfi_whogotpswbackp\n         jasl  r14,jpag0000\n         llgt  r15,w_backpage@\n         sty   r15,jgfi_whogotpswback@\ntrei_nowhogot ds 0h\n         llgt  r0,cursor.gfnwhofreedpsw\n         ltgr  r0,r0\n         jlz   trei_nowhofreed\n         sty   r0,jgfi_whofreedpsw@\n         sty   r0,w_address\n         lhy   r0,cursor.gfnwhofreedasid\n         sthy  r0,jgfi_whofreedpswasid\n         sthy  r0,w_asid\n         stg   r4,w_jgfi@\n         jasl  r14,pagi0000\n         cliy  w_whereONMO,0\n         jle   trei_nowhofreedwherepagi\n         lay   r14,jgfi_whofreedpswwhere\n         lay   r15,w_whereONMO\n         mvc   0(l'jgfi_whofreedpswwhere,r14),0(r15)\ntrei_nowhofreedwherepagi ds 0h\n         llgh  r1,w_length\n         ltgr  r15,r1\n         jlz   trei_nowhofreed\n         sty   r15,jgfi_whofreedpswl\n         lay   r0,jgfi_whofreedpswp\n         jasl  r14,jpag0000\n         lay   r14,o_where\n         lay   r15,w_where\n         mvc   0(l'o_where,r14),0(r15)\n         jasl  r14,back0000\n         llgt  r0,w_backpage@\n         ltgr  r0,r0\n         jlz   trei_nowhofreed\n         lay   r1,4096\n         sty   r1,jgfi_whofreedpswbackl\n         lay   r0,jgfi_whofreedpswbackp\n         jasl  r14,jpag0000\n         llgt  r15,w_backpage@\n         sty   r15,jgfi_whofreedpswback@\ntrei_nowhofreed ds 0h\n         llgt  r0,cursor.gfnaddrs\n         ltgr  r0,r0\n         jcogfs_usrab ok=jlnz\n         sty   r0,jgfi_leftover@\n         sty   r0,w_address\n         lhy   r0,cursor.gfnasids\n******   svc   199\n         sthy  r0,jgfi_leftoverasid\n         sthy  r0,w_asid\n         stg   r4,w_jgfi@\n         jasl  r14,pagi0000\n         cliy  w_whereONMO,0\n         jle   trei_noleftoverwherepagi\n         lay   r14,jgfi_leftoverwhere\n         lay   r15,w_whereONMO\n         mvc   0(l'jgfi_leftoverwhere,r14),0(r15)\ntrei_noleftoverwherepagi ds 0h\n         llgh  r1,w_length\n         ltgr  r15,r1\n         jlz   trei_noleftover\n         sty   r15,jgfi_leftoverl\n         lay   r0,jgfi_leftoverp\n         jasl  r14,jpag0000\n         lay   r14,o_where\n         lay   r15,w_where\n         mvc   0(l'o_where,r14),0(r15)\ntrei_noleftover ds 0h\n         drop  cursor\n         drop  r4\n         lay   r4,0\n         jlu   trei_nodal_exit\n         ltorg\nJCOGFS01 csect ,\npagi0000 ds 0h\n         stmg  r0,r15,pagisave\n         mviy  w_whereONMO,0\n*******  svc   199\n         ly    r15,w_checksum\n         sty   r15,o_checksum\n         lay   r15,0\n         sty   r15,w_checksum\n         llgt  r0,w_address\n         nill  r0,x'f000'\n         lg    r4,w_64iorigin\npagi0100 alg   r4,=ad(jgfi_len)\n         clg   r4,w_64iunusedup\n         using jgfi_end,r4\n         jlh   pagi0900\n         cg    r4,w_jgfi@\n         jle   pagi0100\n         llgt  r0,w_address\n         nill  r0,x'f000'\n         cliy  jgfi_leftoverwhere,0\n         jle   pagi_notleftover\n         llgt  r1,jgfi_leftover@\n         nill  r1,x'f000'\n         cgr   r0,r1\n         jlne  pagi_notleftover\n         cly   r0,w_common\n         jll   pagi_ckleftoverasid\n         cly   r0,w_commone\n         jll   pagi8999\npagi_ckleftoverasid ds 0h\n         icmy  r1,b'0011',jgfi_leftoverasid\n         clmy  r1,b'0011',w_asid\n         jle   pagi8999\npagi_notleftover ds 0h\n         cliy  jgfi_whogotpswwhere,0\n         jle   pagi_notwhogotpsw\n         llgt  r1,jgfi_whogotpsw@\n         nill  r1,x'f000'\n         cgr   r0,r1\n         jlne  pagi_notwhogotpsw\n         cly   r0,w_common\n         jll   pagi_ckwhogotpswasid\n         cly   r0,w_commone\n         jll   pagi8999\npagi_ckwhogotpswasid ds 0h\n         icmy  r1,b'0011',jgfi_whogotpswasid\n         clmy  r1,b'0011',w_asid\n         jle   pagi8999\npagi_notwhogotpsw ds 0h\n         cliy  jgfi_whofreedpswwhere,0\n         jle   pagi_notwhofreedpsw\n         llgt  r1,jgfi_whofreedpsw@\n         nill  r1,x'f000'\n         cgr   r0,r1\n         jlne  pagi_notwhofreedpsw\n         cly   r0,w_common\n         jll   pagi_ckwhofreedpswasid\n         cly   r0,w_commone\n         jll   pagi8999\npagi_ckwhofreedpswasid ds 0h\n         icmy  r1,b'0011',jgfi_whofreedpswasid\n         clmy  r1,b'0011',w_asid\n         jle   pagi8999\npagi_notwhofreedpsw ds 0h\n         jlu   pagi0100\n         drop  r4\npagi0900 lmg   r0,r15,pagisave\n         lg    r2,w_abdpl@\n         using  abdpl,r2\n         sysstate archlvl=2,amode64=NO\n         sam31\n         mviy  adplprdp,adplvirt\n         lay   r0,0\n         sty   r0,w_ipcsdata@\n         ly    r1,w_address\n         nill  r1,x'f000'\n         sty   r1,adplpaad\n         lay   r0,x'1000'\n         sthy  r0,w_length\n         lhy   r0,w_length\n         sthy  r0,adpldlen\n         icmy  r0,b'0011',w_asid\n         stcmy r0,b'0011',adplasid\n         lay   r3,=a(adplsacc)\n         lay   r4,adplpacc\n         lay   r5,w_call_adplserv\n         lay   r15,m_call_adplserv\n         mvc   0(w_call_adplserv_len,r5),(r15)\n         ly    r15,adplserv\n         call  (15),((r2),(r3),(r4)),mf=(E,(r5))\n****     svc   199                     xdchook\n         ltr   r5,r15\n         jlnz  pagi_not_in_dumped\n         llgt  r0,adplpart\n         lay   r1,4096\n         lay   r15,0\npagi_cksm cksm r15,r0\n         jlo   pagi_cksm\n         sty   r15,w_checksum\n         llgt  r0,adplpart\n         lay   r1,4096\n         lay   r14,w_ipcsdata\n         lay   r15,4096\n         mvcl  r14,r0\n         lay   r0,w_ipcsdata\n         sty   r0,w_ipcsdata@\npagi_do_where_anyway ds 0h\n         lay   r14,w_where\n         lay   r15,m_where\n         mvc   0(l'w_where,r14),0(r15)            move model\n         lay   r14,w_whereMODN\n         lay   r15,=c'JCOGFS01'\n         mvc   0(8,r14),0(r15)            move our name\n         mviy  w_whereast+0,c'C'  virtual storage\n         mviy  w_whereast+1,c'V'  virtual storage\n         lhy   r0,w_asid\n         sthy  r0,w_whereas2  asid\n         llgt  r0,w_address\n*        cy    r0,=a(x'010971EA')      !!\n*        jlne  aroundw                 !!\n*        svc   199                     !!\n*roundw  ds    0h                      !!\n         stg   r0,w_wherelad              address for where service\n*        svc   199                   !!!!!!!!!!!!!\n**** mviy  w_wherepfl1,w_wherePUT+w_whereRETN+w_whereDTYF restricts\n         aif   ('&sysparm' eq 'JCO').wheremess\n         mviy  w_wherepfl1,0           nomessage\n         ago   .nowheremess\n.wheremess anop\n         mviy  w_wherepfl1,w_wherePUT message\n.nowheremess anop\n         lay   r3,=a(adplswhs)         where service code\n         lay   r4,w_where              blsrpwhs macro mapped\n         lay   r5,w_call_adplserv\n         lay   r15,m_call_adplserv\n         mvc   0(w_call_adplserv_len,r5),(r15)\n         ly    r15,adplserv\n         call  (15),((r2),(r3),(r4)),mf=(E,(r5))\n*        org   *-2                     xdchook !!!!!!!!!!\n*        svc   199                     xdchook !!!!!!!!!!\n*        balr  14,15                   xdchook !!!!!!!!!!\n*        svc   199                     xdchook !!!!!!!!!!\n         ltr   r5,r15\n         jlz   pagi9000\n         jlu   pagi9000\npagi_not_in_dumped ds 0h\n         lay   r14,w_whereONMO         move nonzero explain to where\n         lay   r15,=cl42'<not in dump/ipcs>'\n         mvc   0(l'w_whereONMO,r14),0(r15)\n         lay   r0,0\n         sthy  r0,w_length\n         jlu   pagi_do_where_anyway\npagi8999 lay   r0,0\n         sthy  r0,w_length\n******   svc   199\n         sysstate archlvl=2,amode64=YES\npagi9000 sam64\n         lmg   r0,r15,pagisave\n         br    r14\n         drop  r2\n         ds    0fd\n         ltorg\nm_call_adplserv call ,(0,0,0),mf=L\nm_call_adplserv_len equ *-m_call_adplserv\nm_where  blsrpwhs dsect=NO,abits=64\n         blsabdpl dsect=YES,                                           x\n               amdexit=YES,                                            x\n               amdosel=NO,                                             x\n               amdpacc=NO,                                             x\n               amdpect=NO,                                             x\n               amdpfmt=NO,                                             x\n               amdpfxt=NO,                                             x\n               amdpsel=NO\nstorage  dsect\npagisave ds    16fd\nw_jgfi@  ds    ad\nw_asid   ds    h\nw_length ds    h\nw_address ds   a\nw_ipcsdata@ ds a\nw_checksum ds  f\no_checksum ds  f\nw_call_adplserv call ,(0,0,0),mf=L\nw_call_adplserv_len equ *-w_call_adplserv\nw_where  blsrpwhs dsect=NO,abits=64\no_where  blsrpwhs dsect=NO,abits=64\n         blsabdpl dsect=NO,                                            x\n               amdexit=NO,                                             x\n               amdosel=YES,                                            x\n               amdpacc=YES,                                            x\n               amdpect=YES,                                            x\n               amdpfmt=YES,                                            x\n               amdpfxt=YES,                                            x\n               amdpsel=YES\nJCOGFS01 csect ,\nback0000 ds 0h\n         stmg  r0,r15,backsave\n         la    r0,0\n         sty   r0,w_backpage@\n         llgh  r0,w_length\n         ltgr  r0,r0\n         jlz   back9999\n         lay   r14,w_backz2\n         xc    0(l'w_backz2,r14),0(r14)\n         lay   r14,w_backz1\n         llgt  r15,w_ipcsdata@\n         mvc   0(l'w_backz1,r14),0(r15)\nback_more ly   r0,w_address\n         sy    r0,=f'4096'\n         jll   back9999\n         sty   r0,w_address\n         jasl  r14,pagi0000\n         llgh  r1,w_length\n         ltgr  r15,r1\n         jlz   back9999\n         llgf  r0,w_checksum\n         ltgr  r0,r0\n         jlz   back9999\n         cy    r0,o_checksum\n         jle   back9999\n         lay   r14,w_backz1\n         lay   r15,w_backpage\n         mvc   0(l'w_backz1,r14),0(r15)\n         lay   r0,w_backpage\n         llgh  r1,w_length\n         llgt  r14,w_ipcsdata@\n         lgr   r15,r1\n         mvcl  r0,r14\n         lay   r0,0\n         lay   r2,w_backscan-1\n         lay   r3,w_backscan-w_backend-1-4\nback_trtre lay r1,m_backchar\n         lay   r4,0\n*****    svc   199\nback_trtre3 trtre r2,r4,0\n         jlz   back_end                cc=0 8\n         jlm   back_hitchar            cc=1 4\n         jlp   back_hitchar            cc=2 2\n         jlo   back_trtre3             cc=3 1\n         jcogfs_usrab ok=jlnop\nback_end ds 0h\nback_hitchar ds 0h\n         ltgr  r4,r4\n         jlz   back_nohit\n         lay   r14,0(,r2)\n         lay   r15,=c'PATCH'\n         clc   0(5,r14),0(r15)\n         jle   back_found\n         lay   r15,=c'patch'\n         clc   0(5,r14),0(r15)\n         jle   back_found\n         lay   r15,=c'ZAP'\n         clc   0(3,r14),0(r15)\n         jle   back_found\n         lay   r15,=c'zap'\n         clc   0(3,r14),0(r15)\n         jle   back_found\n         lay   r15,=c'copyright'\n         clc   0(9,r14),0(r15)\n         jle   back_found\n         lay   r15,=c'Copyright'\n         clc   0(9,r14),0(r15)\n         jle   back_found\n         lay   r15,=c'CopyRight'\n         clc   0(9,r14),0(r15)\n         jle   back_found\n         lay   r15,=c'COPYRIGHT'\n         clc   0(9,r14),0(r15)\n         jle   back_found\n         lay   r14,-1(,r2)\n         lay   r15,=c'(C)'\n         clc   0(3,r14),0(r15)\n         jle   back_found\n         lay   r15,=c'(c)'\n         clc   0(3,r14),0(r15)\n         jle   back_found\n         lay   r2,-1(,r2)\n         lay   r3,-1(,r3)\nback_nohit ds  0h\n         ltgr  r3,r3\n         jlp   back_trtre\n         lay   r14,o_whereOSAN\n         lay   r15,w_whereOSAN\n         clc   0(l'o_whereOSAN,r14),0(r15)\n         jlne  back_notfound\n         mvc   0(l'o_whereOSAN,r14),0(r15)\n         jlne  back9998\n         jlu   back_more\nback9998 ds    0h\nback_found ds 0h\n         ly    r15,w_address\n         nill  r15,x'f000'\n         sty   r15,w_backpage@\nback_notfound ds 0h\nback9999 lmg   r0,r15,backsave\n         br    r14\n         ds    0fd\n         ltorg\n         ds    0fd\nm_backchar dc  xl256'00'               must be a double word boundary\n         org   m_backchar+c'C'\n         dc    c'C'\n         org   m_backchar+c'c'\n         dc    c'c'\n         org   m_backchar+c'P'\n         dc    c'P'\n         org   m_backchar+c'p'\n         dc    c'p'\n         org   m_backchar+c'Z'\n         dc    c'Z'\n         org   m_backchar+c'z'\n         dc    c'z'\n         org   ,\nstorage  dsect\nbacksave ds    16fd\nw_backpage@ ds a\nw_backz2  ds   xl256\nw_backend ds   0c\nw_backpage ds  4096c\nw_backz1  ds   xl256\nw_backbeg ds   0c\n         org   w_backbeg-16\nw_backscan ds  0c\n         org   ,\nJCOGFS01 csect ,\njpag0000 ds    0h                      performed jpag\n         stmg  r0,r15,jpagsave\n*****    svc   199\n         ltgr  r1,r0\n         jlz   jpag9999\n         llgt  r14,w_ipcsdata@\n         ltgr  r14,r14\n         jlz   jpag9999\n         lg    r2,w_64ipagedown\n         lay   r3,4096\njpag0100 slgr  r2,r3\n         clg   r2,w_64iunusedup\n         jcogfs_usrab ok=jlnl\n         stg   r2,w_64ipagedown\n         lgr   r15,r3\n         stg   r2,0(,r1)\n         mvcl  r2,r14\njpag9999 lmg   r0,r15,jpagsave\n         br    r14                     return\n         ds    0fd\n         ltorg\nstorage  dsect\njpagsave ds    16fd\nJCOGFS01 csect ,\n*   (0)                               PRDINPUT OF BLSRPRD\n*   (168)       SIGNED           2    PRDSDMPO     OFFSET OF COMMON SEC\n*   (16A)       SIGNED           2    PRDSDMPL     LENGTH OF COMMON SEC\n*   (0 )        STRUCTURE             PRDSDSM\n*   (298)       SIGNED           4    PRDCSA       START OF COMMON\n*   (29C)       SIGNED           4    PRDEPVT      END OF COMMON\n*   (2A0)       CHARACTER        8    PRDHJOBN     PRDHASID JOBNAME\n*   (2A8)       CHARACTER        8    PRDHVSS      START OF HIGH V SHAR\n*   (2B0)       CHARACTER        8    PRDHVHP      START OF HIGH V PRIV\n*   (2B8)       CHARACTER        8    PRDHVCO      HIGH VIRTUAL COMMON\ndmpi0000 ds    0h\n         stmg  r0,r15,dmpisave\n         lay   r15,=cl44'<dump header inaccessible>'\n         lay   r14,w_prddsnam\n         mvc   0(l'w_prddsnam,r14),0(r15)\n         lay   r0,0\n         sty   r0,w_common\n         sty   r0,w_commone\n         lg    r2,w_abdpl@\n         using  abdpl,r2\n         sysstate archlvl=2,amode64=NO\n         sam31\n         mviy  adplprdp,adplhdr      look at dump header\n         lay   r0,0\n         sty   r0,adplpaad\n         lay   r0,prdinputlength     header max length\n         sthy  r0,adpldlen\n         lay   r3,=a(adplsacc)\n         lay   r4,adplpacc\n         lay   r5,w_call_adplserv\n         lay   r15,m_call_adplserv\n         mvc   0(w_call_adplserv_len,r5),(r15)\n         ly    r15,adplserv\n         call  (15),((r2),(r3),(r4)),mf=(E,(r5))\n         ltr   r5,r15\n         jlnz  dmpi9999\n         llgt  r4,adplpart\n         using prdinput,r4\n         lay   r15,PRDTITLE\n         lay   r14,w_prdtitle\n         mvc   0(l'w_prdtitle,r14),0(r15)\n         lay   r0,0\n         icmy  r0,b'0011',prdsdmpl\n         ltr   r0,r0\n         jlz   dmpi9999\n         lay   r0,0\n         icmy  r0,b'0011',prdsdmpo\n         alr   r4,r0\n         drop  r4\n         using PRDSDSM,r4\n         llgt  r0,prdcsa\n         ltr   r0,r0\n         jlz   dmpi9999\n         llgt  r0,prdepvt\n         ltr   r0,r0\n         jlz   dmpi9999\n         sty   r0,w_commone\n         llgt  r0,prdcsa\n         sty   r0,w_common\n         lay   r15,PRDDSNAM\n         lay   r14,w_prddsnam\n         mvc   0(l'w_prddsnam,r14),0(r15)\n*        svc   199                     xdchook\n         drop  r4\n         sysstate archlvl=2,amode64=YES\ndmpi9999 sam64\n         lmg   r0,r15,dmpisave\n         br    r14\n         ds    0fd\n         ltorg\n         blsrprd dsect=YES\nstorage  dsect\ndmpisave ds    16fd\nw_common ds    a\nw_commone ds   a\nw_prdtitle ds cl100\nw_prddsnam ds cl44\nJCOGFS01 csect ,\nproc9999i ds   0h\nexit0000i xgr  r9,r9\n         llgf  r9,comprc\n         lay   retcode,0\n         eregg r0,r0\n         eregg r1,r1\n         pr\nJCOGFS01 csect ,\nlasth    ds    0h\nstorage  dsect ,\n         ds    0fd\ncomprc   ds    f\n         ds    0fd\nsaveareai dc   36f'-1'                 register save area.\nsavearea dc    36f'-1'                 register save area.\nstorager equ   ((((*-storageb)+8191)/8192)*8192)-(*-storageb)\n         ds    (storager)x\nstoragel equ   *-storageb\n         ieantasm\n         print off\n         dcbd   devd=DA,dsorg=PS\n         ihadcbe\n         cvt   dsect=YES,list=NO\n         ihapsa dsect=YES,list=NO\n         ihaascb dsect=YES,list=NO\n         iefjesct\n         iefjscvt\n         end   JCOGFS01\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LISTXMI": {"ttr": 1800, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x12\\x12\\x1f\\x01\\x12\\x12\\x1f\\x11&RzRz\\x00\\x00\\xd1\\xc3\\xd6@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-04-30T00:00:00", "modifydate": "2012-04-30T11:26:00", "lines": 21114, "newlines": 21114, "modlines": 0, "user": "JCO"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOADXMI": {"ttr": 10500, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x12\\x12\\x1f\\x01\\x12\\x12\\x1f\\x11&\\xd9I\\xd9I\\x00\\x00\\xd1\\xc3\\xd6@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-04-30T00:00:00", "modifydate": "2012-04-30T11:26:00", "lines": 55625, "newlines": 55625, "modlines": 0, "user": "JCO"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "OBJXMI": {"ttr": 33031, "alias": false, "halfwords": 40, "notes": 0, "parms": "b'\\x01\\x00 \\x00\\x01\\x12\\x12\\x1f\\x01\\x12\\x12\\x1f\\x11&\\xff\\xff\\xff\\xff\\x00\\x00\\xd1\\xc3\\xd6@@@@@\\x00\\x01GT\\x00\\x00\\xff\\xff\\x00\\x00\\x00\\x00'", "ispf": {"version": "01.00", "flags": 32, "createdate": "2012-04-30T00:00:00", "modifydate": "2012-04-30T11:26:00", "lines": 65535, "newlines": 65535, "modlines": 0, "user": "JCO"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT869/FILE869.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT869", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}