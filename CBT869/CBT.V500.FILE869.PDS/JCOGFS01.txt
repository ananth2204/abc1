brc      opsyn brcl
bras     opsyn brasl
nop      opsyn jlnop
ah       opsyn ahy
al       opsyn aly
a        opsyn ay
cds      opsyn cdsy
ch       opsyn chy
cli      opsyn cliy
clm      opsyn clmy
cl       opsyn cly
cs       opsyn csy
cvb      opsyn cvby
cvd      opsyn cvdy
c        opsyn cy
icm      opsyn icmy
ic       opsyn icy
lae      opsyn laey
lam      opsyn lamy
la       opsyn lay
ld       opsyn ldy
le       opsyn ley
lh       opsyn lhy
lm       opsyn lmy
lra      opsyn lray
l        opsyn ly
mf       opsyn mfy
mh       opsyn mhy
ms       opsyn msy
mvi      opsyn mviy
ni       opsyn niy
n        opsyn ny
oi       opsyn oiy
o        opsyn oy
sh       opsyn shy
sl       opsyn sly
stam     opsyn stamy
stcm     opsyn stcmy
stc      opsyn stcy
std      opsyn stdy
ste      opsyn stey
sth      opsyn sthy
stm      opsyn stmy
st       opsyn sty
s        opsyn sy
tm       opsyn tmy
xi       opsyn xiy
x        opsyn xy
         copy  ieabrc
jco_srst opsyn srst
         macro
&name    srst  &op1,&op2
&lname   setc  'jco'.'&sysndx'.'srst'
&lname   ds    0h
&name    jco_srst &op1,&op2
         jlo   &lname
         mend
jco_troo opsyn troo
         macro
&name    troo  &op1,&op2,&op3
&lname   setc  'jco'.'&sysndx'.'troo'
&lname   ds    0h
&name    jco_troo &op1,&op2,&op3
         jlo   &lname
         mend
jco_trot opsyn trot
         macro
&name    trot  &op1,&op2,&op3
&lname   setc  'jco'.'&sysndx'.'trot'
&lname   ds    0h
&name    jco_trot &op1,&op2,&op3
         jlo   &lname
         mend
JCOGFS01 title 'gfs matchup'
JCOGFS01 start
JCOGFS01 amode any
JCOGFS01 rmode any
         sysstate archlvl=2,amode64=YES
r0       equ   0
r1       equ   1
r2       equ   2
r3       equ   3
r4       equ   4
r5       equ   5
r6       equ   6
r7       equ   7
r8       equ   8
r9       equ   9
basereg  equ   12                      base registers
savereg  equ   13                      save area register.
retreg   equ   14                      caller's return address.
entryreg equ   15                      JCOGFS01's entry address.
r14      equ   14                      work reg
retcode  equ   15                      return code.
r15      equ   15                      work reg
         jlu   prologue                branch around eyecatcher.
         dc    cl8'JCOGFS01'           module name.
         dc    cl8'&sysdate'           assemble date.
prologue bakr  r14,0
         sam64
         larl  basereg,lasth
         algfi basereg,1
         using lasth+1,basereg
parm0000 ds    0h                      parse parms
         ly    r0,=a(storagel)
         storage OBTAIN,length=(r0),bndry=PAGE,loc=(ANY,ANY)
         sty   savereg,savearea-storage+4(,r1) addr of caller's save
         sty   r1,8(,savereg)          save address of my save area.
         lay   savereg,savearea-storage(,r1) my savearea
         using savearea,savereg
         mviy  storage_id+0,c'g'
         mviy  storage_id+1,c'f'
         mviy  storage_id+2,c's'
         mviy  storage_id+3,c'0'
         mviy  storage_id+4,c'1'
         mviy  savearea+4,c'F'
         mviy  savearea+5,c'6'
         mviy  savearea+6,c'S'
         mviy  savearea+7,c'A'
         eregg r1,r1
         stg   r1,parm@
         aif   ('&sysparm' eq 'JCO').jco
         jlu   parm0010
         ago   .xdcload
.jco     anop
         jlnop   parm0010
.xdcload anop
         load  ep=XDC
         lay   r14,w_estaex
         lay   r15,m_estaex
         mvc   0(w_estaex_len,r14),0(r15)
         estaex (0),mf=(E,w_estaex)
parm0010 lay   r0,0                    zero
         sty   r0,workflgs             zero
         oiy   workflg0,flg0_nozeroes
         sty   r0,comprc               assume zero cond code
         ltg   r1,parm@
         jlz   parm9000
         llgt  r2,0(,r1)
         lay   r3,0
         icmy  r3,b'0011',0(r2)
         jlz   parm9000
         cliy  2(r2),c'1'
         jlne  parm1000
         oiy   workflg0,flg0parm1
         jlu   parm9000
parm1000 cliy  2(r2),c'2'
         jlne  parm1010
         oiy   workflg0,flg0parm2
         jlu   parm9000
parm1010 cliy  2(r2),c'3'
         jlne  parm9000
         oiy   workflg0,flg0parm3
parm9000 ds    0h
         jlu   parm9999
         ds    0fd
         ltorg
m_estaex estaex 0,mf=L
m_estaex_len equ *-m_estaex
storage  dsect
storageb equ   *
w_ipcsdata ds  xl4096                last ipcs page buffer
storage_id ds  cl8
parm@    ds    ad
         ds    c
workflgs ds    0f
workflg0 ds    x
flg0parm1 equ  x'80'
flg0parm2 equ  x'40'
flg0parm3 equ  x'20'
flg0_nozeroes equ x'01'
workflg1 ds    x
workflg2 ds    x
workflg3 ds    x
         ds    0fd
w_estaex estaex 0,mf=L
w_estaex_len equ *-w_estaex
JCOGFS01 csect ,
parm9999 ds    0h
ntcr0000 ds    0h                      get jscbauth nonstandard if req
         sam31
         sysstate archlvl=2,amode64=NO
         lay   r2,=a(ieant_home_level)
         lay   r3,=cl16'JCOGFS01'
         lay   r14,nt_JCOGFS01
         mvc   0(8,r14),0(r3)
******** lay   r0,storage
         lay   r0,storageb
         sty   r0,nt_storage@
         lay   r0,0
         sty   r0,nt_zero
         lay   r4,nt_token
         lay   r5,=a(ieant_nopersist)
         lay   r14,w_call
         lay   r15,m_call
         mvc   0(w_call_len,r14),(r15)
         lay   r6,nt_return
         lay   r7,w_call
         llgt  r15,cvtptr
         llgt  r15,cvtcsrt-cvt(r15,0)
         llgt  r15,X'14'(r15,0)
         llgt  r15,X'04'(r15,0)        nt create
         call  (15),((r2),(r3),(r4),(r5),(r6)),mf=(E,(r7))
ntcr9000 ds    0h
         sam64
         sysstate archlvl=2,amode64=YES
         ly    r15,nt_return
         ltr   r15,r15
         macro
&name    jcogfs_usrab &ok=jlz
         gbla  &abnos
         lclc  &labab
&abnos   seta  &abnos+1
&labab   setc  'abend&abnos'
         &ok   &labab
         sac   0
         abend &abnos,DUMP
&labab   ds    0h
         mend
         jcogfs_usrab ok=jlz
         jlu   ntcr9999
         ds    0fd
         ltorg
         sysstate archlvl=2,amode64=NO
m_call   call  ,(0,0,0,0,0),mf=L
m_call_len equ *-m_call
         sysstate archlvl=2,amode64=YES
storage  dsect
         ds    0fd
nt_data  ds    0cl32               name/token data
nt_name  ds    cl16                name for name/token pair
nt_token ds    0cl16                token for name/token pair
nt_storage@ ds a
nt_zero  ds    f
nt_JCOGFS01 ds cl8
nt_return ds   f
         sysstate archlvl=2,amode64=NO
w_call   call  ,(0,0,0,0,0),mf=L
w_call_len equ *-w_call
         sysstate archlvl=2,amode64=YES
storage  dsect
clonei1  ds    0fd
JCOGFS01 csect ,
ntcr9999 ds    0h
auth9999 ds    0h
init0000 ds    0h
         mviy  w_hdr,c' '
         lay   r14,w_hdr
         mvc   1(l'w_hdr-1,r14),0(r14)
         lay   r14,w_64usertkn+4
         lay   r15,=c'jgf1'                   1st half zero-unauth
         mvc   0(4,r14),0(r15)    1st half zero-unauth
         lay   r2,=ad(1024)
         lay   r3,=ad(896)
         lay   r4,w_64usertkn
         lay   r5,w_64origin
         lay   r6,=al1(99)
         iarv64 request=GETSTOR,                                       x
               cond=NO,                                                x
               segments=(r2),                                          x
               guardsize64=(r3),                                       x
               guardloc=HIGH,                                          x
               key=CALLERKEY,                                          x
               fprot=NO,                                               x
               svcdumprgn=YES,                                         x
               control=UNAUTH,                                         x
               usertkn=(r4),                                           x
               origin=(r5),                                            x
               dumppriority=(r6),                                      x
               plistver=MAX,                                           x
               mf=(E,w_64,COMPLETE)
         lg    r0,w_64origin
         stg   r0,w_64unused
         alg   r0,=ad((1024-896)*1024*1024)
         stg   r0,w_64limit
         lay   r14,w_64stk_usertkn+4
         lay   r15,=c'jgf2'                   1st half zero-unauth
         mvc   0(4,r14),0(r15)    1st half zero-unauth
         lay   r2,=ad(((((2*16*4096)*1024)+1023)/1024)/1024+1)
         lay   r3,=ad(1)
         lay   r4,w_64stk_usertkn
         lay   r5,w_64stk_origin
         lay   r6,=al1(99)
         iarv64 request=GETSTOR,                                       x
               cond=NO,                                                x
               segments=(r2),                                          x
               guardsize64=(r3),                                       x
               guardloc=HIGH,                                          x
               key=CALLERKEY,                                          x
               fprot=NO,                                               x
               svcdumprgn=YES,                                         x
               control=UNAUTH,                                         x
               usertkn=(r4),                                           x
               origin=(r5),                                            x
               dumppriority=(r6),                                      x
               plistver=MAX,                                           x
               mf=(E,w_64,COMPLETE)
         lg    r0,w_64stk_origin
         stg   r0,w_64stk_next@
         mghi  r2,1024
         mghi  r2,1024
         algr  r2,r0
         stg   r2,w_64stk_limit@
         jlu   init9999
         ds    0fd
         ltorg
storage  dsect
         ds    0fd
w_64usertkn ds fd
w_64origin ds  ad
w_64unused ds  ad
w_64limit ds   ad
w_64stk_usertkn ds fd
w_64stk_origin ds ad
w_64stk_next@ ds ad
w_64stk_limit@ ds ad
         ds    0fd
         iarv64 mf=(L,w_64),plistver=MAX
JCOGFS01 csect ,
init9999 ds    0h
open0000 ds    0h
         ly    r0,=a(dcbs_len)
         storage OBTAIN,length=(r0),bndry=PAGE,loc=(BELOW,ANY)
         stg   r1,w_dcbs@
         lgr   r5,r1
         using dcbs,r5
         lay   r0,w_indcb
         stg   r0,w_indcb@
         lay   r0,w_outdcb
         stg   r0,w_outdcb@
         drop  r5
         macro
         jcogfs_open &dcb,&inout,&eof
         lg    r5,w_dcbs@
         using dcbs,r5
         lay   r14,w_&dcb.
         lay   r15,m_&dcb.
         mvc   0(w_&dcb._len,r14),0(r15)
         lay   r14,w_&dcb.e
         lay   r15,m_&dcb.e
         mvc   0(w_&dcb.e_len,r14),0(r15)
         lay   r14,w_open
         lay   r15,m_open
         mvc   0(w_open_len,r14),0(r15)
         lay   r0,&eof
         sty   r0,w_indcbe+(dcbeeoda-dcbe)
         lay   r0,w_&dcb.e
         sty   r0,w_&dcb.+(dcbdcbe-ihadcb)
         lay   r2,w_open
         lay   r3,w_&dcb.
         sysstate archlvl=2,amode64=NO
         open  ((r3),(&inout)),mf=(E,(r2)),mode=31
         sysstate archlvl=2,amode64=YES
         tmy   w_&dcb.+(dcboflgs-ihadcb),dcbofopn
         jcogfs_usrab ok=jlo
         tmy   w_&dcb.e+(dcbeflg1-dcbe),dcbeopen+dcbemd31
         jcogfs_usrab ok=jlo
         drop  r5
         mend
         jcogfs_open outdcb,OUTPUT,0
         lay   r14,w_line
         lay   r15,=cl256' '
         mvc   0(l'w_line,r14),0(r15)
         lay   r15,m_line_hdr
         mvc   0(l'm_line_hdr,r14),0(r15)
         lg    r1,w_outdcb@
         lay   r2,w_hdr
         macro
         jcogfs_put
         sysstate archlvl=2,amode64=NO
         sam31
         put   (r1),(r2)
         sysstate archlvl=2,amode64=YES
         sam64
         mend
         jcogfs_put
         jcogfs_open indcb,INPUT,open0090
         lay   r14,w_mintod
         lay   r15,=xl8'ffffffffffffffff'
         mvc   0(l'w_mintod,r14),0(r15)
         lay   r14,w_maxtod
         lay   r15,=xl8'0000000000000000'
         mvc   0(l'w_maxtod,r14),0(r15)
         lay   r15,0
         stg   r15,w_rec#
open0010 ds    0h
         macro
         jcogfs_get
         sysstate archlvl=2,amode64=NO
         sam31
         get   (r3)
         sysstate archlvl=2,amode64=YES
         sam64
         mend
         jcogfs_get
         lr    r9,r1
         using gfsdsect,r9
         cliy  gfs_fid,x'ff'         record type
         jlne  open0010
         lg    r15,w_rec#
         alg   r15,=fd'1'
         stg   r15,w_rec#
         lay   r15,w_mintod
         clc   gfs_tod,0(r15)
         jlnl  open0011
         mvc   0(l'w_mintod,r15),gfs_tod
         lg    r0,w_rec#
         stg   r0,w_minrec#
open0011 lay   r15,w_maxtod
         clc   gfs_tod,0(r15)
         jlnh  open0010
         mvc   0(l'w_maxtod,r15),gfs_tod
         lg    r0,w_rec#
         stg   r0,w_maxrec#
         jlu   open0010
         drop  r9
open0090 ds    0h
         sam64
         macro
         jcogfs_close &dcb
         lg    r5,w_dcbs@
         using dcbs,r5
         lay   r14,w_close
         lay   r15,m_close
         mvc   0(w_close_len,r14),0(r15)
         lay   r2,w_close
         lay   r3,w_&dcb.
         sysstate archlvl=2,amode64=NO
         close ((r3)),mf=(E,(r2)),mode=31
         sysstate archlvl=2,amode64=YES
         tmy   w_&dcb.+(dcboflgs-ihadcb),dcbofopn
         jcogfs_usrab ok=jlz
         tmy   w_&dcb.e+(dcbeflg1-dcbe),dcbeopen+dcbemd31
         jcogfs_usrab ok=jlz
         drop  r5
         mend
         jcogfs_close indcb
         ltg   r0,w_minrec#
         jlz   open9992
         lg    r0,w_minrec#
         clg   r0,w_maxrec#
         jll   open0499
         jcogfs_open indcb,INPUT,open0200
         lay   r15,0
         stg   r15,w_rec#
open0100 ds    0h
         sam31
         jcogfs_get
         sam64
         lr    r9,r1
         using gfsdsect,r9
         cliy  gfs_fid,x'ff'         record type
         jlne  open0100
         lg    r15,w_rec#
         alg   r15,=fd'1'
         stg   r15,w_rec#
         clg   r15,w_minrec#
         jll   open0100
         jasl  r14,read0000
         jlu   open0100
open0200 ds    0h
         sam64
         drop  r9
         jcogfs_close indcb
         jcogfs_open indcb,INPUT,open0400
         lay   r15,0
         stg   r15,w_rec#
open0300 ds    0h
         sam31
         jcogfs_get
         sam64
         lr    r9,r1
         using gfsdsect,r9
         cliy  gfs_fid,x'ff'         record type
         jlne  open0300
         lg    r15,w_rec#
         alg   r15,=fd'1'
         stg   r15,w_rec#
         jasl  r14,read0000
         lg    r15,w_rec#
         clg   r15,w_maxrec#
         jll   open0300
open0400 ds    0h
         sam64
         drop  r9
         jcogfs_close indcb
         jlu   open9992
open0499 ds    0h
         jcogfs_open indcb,INPUT,open9991
open0900 lg    r3,w_indcb@
         sam31
         jcogfs_get
         sam64
         lr    r9,r1
         using gfsdsect,r9
         cliy  gfs_fid,x'ff'         record type
         jlne  open0900
         jasl  r14,read0000
         jlu   open0900
         drop  r9
open9991 ds    0h
         sam64
         jcogfs_close indcb
open9992 lay   r15,=cl16'final:'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
*        aif   ('&sysparm' ne 'JCO').jco10
*        #die  'f psw?;l rwregs',type=CMD
*.jco10   anop
         xgr   r14,r14
         stg   r14,w_tree_total
         jasl  r14,tree0000
******   #die  'l rwregs',type=CMD
         jlu   open9999
         ds    0fd
         ltorg
         sysstate archlvl=2,amode64=NO
m_open   open  (0,(INPUT)),mode=31,mf=L
m_open_len equ *-m_open
m_close  close (0),mode=31,mf=L
m_close_len equ *-m_close
         sysstate archlvl=2,amode64=YES
m_indcb dcb    ddname=INFILE,                                          x
               dcbe=0,                                                 x
               dsorg=PS,                                               x
               macrf=(GL)
m_indcb_len equ *-m_indcb
m_indcbe dcbe  eodad=0,                                                x
               eadscb=OK,                                              x
               rmode31=BUFF
m_indcbe_len equ *-m_indcbe
m_outdcb dcb   ddname=JCOGFS01,                                        x
               dcbe=0,                                                 x
               dsorg=PS,                                               x
               macrf=(PM),lrecl=272,blksize=0,recfm=FB
m_outdcb_len equ *-m_outdcb
m_outdcbe dcbe eodad=0,                                                x
               eadscb=OK,                                              x
               rmode31=BUFF
m_outdcbe_len equ *-m_outdcbe
gfsdsect dsect
gfs_ll   ds    h                       -4-3
gfs_zz   ds    h                       -2-1
gfs_fid  ds    x                       1
gfs_aid  ds    x                       2
gfs_tod  ds    xl8                     3-10
gfs_eid  ds    xl2                     11-12
gfs_ascb ds    xl4                     13-16
gfs_job1 ds    cl8                     17-24
gfs_type ds    x                       25 x42 or x20(system)
gfs_subp ds    x                       26
gfs_asidmem ds al2                     27-28 memory-owning asid
gfs_virt ds    xl4                     29-32
gfs_len  ds    f                       33-36
gfs_tcb  ds    xl4                     37-40
gfs_key  ds    x                       41  x50,x70
gfs_rc   ds    x                       42    retcode
x0300    ds    xl2                     43-44
x0018    ds    h    @45                45-46 or zero for type=x20
x0048    ds    h                       47-48 or zero for type=x20
gfs_psw  ds    xl4                     49-52 RETADDR  PIB4.
         ds    xl4                     53-56
         ds    xl4                     57-60
gfs_jobnmem ds cl8                     61-68 JOBNAME owning mem
gfs_jobn ds    cl8                     69-76 jobname acting mem
gfs_asid ds    al2                     77-78 asid acting mem
gfs_subb ds    x                       79
gfs_svc  ds    x                       80
gfs_flag1 ds   x                       81
gfs_flag2 ds   x                       82
gfs_flag3 ds   x                       83
         ds    x                       84
         ds    xl12                    85-96
gfs_regs ds    xl64                    97-160
dcbs     dsect
         ds    0fd
w_indcb  dcb   ddname=INFILE,                                          x
               dcbe=0,                                                 x
               dsorg=PS,                                               x
               macrf=(GL)
w_indcb_len equ *-w_indcb
         ds    0fd
w_outdcb dcb   ddname=JCOGFS01,                                        x
               dcbe=0,                                                 x
               dsorg=PS,                                               x
               macrf=(PM),lrecl=100,blksize=10000,recfm=FB
w_outdcb_len equ *-w_outdcb
         ds    0fd
dcbs_len equ   *-dcbs
storage  dsect
w_dcbs@  ds    ad
w_indcb@ ds    ad
w_outdcb@ ds   ad
w_indcbe dcbe  eodad=0,                                                x
               eadscb=OK,                                              x
               rmode31=BUFF
w_indcbe_len equ *-w_indcbe
w_outdcbe dcbe eodad=0,                                                x
               eadscb=OK,                                              x
               rmode31=BUFF
w_outdcbe_len equ *-w_outdcbe
         ds    0fd
         sysstate archlvl=2,amode64=NO
w_open   open  (0,(INPUT)),mode=31,mf=L
w_open_len equ *-w_open a
         ds    0fd
w_close  close (0),mode=31,mf=L
w_close_len equ *-w_close
         sysstate archlvl=2,amode64=YES
w_rec#   ds    fd
w_minrec# ds   fd
w_maxrec# ds   fd
w_mintod ds    fd
w_maxtod ds    fd
w_lasttod ds   fd
w_worktod ds   fd
         ltorg
JCOGFS01 csect ,
read0000 ds    0h
         stmg  r0,r15,readsave         temp save-nonstandard
         using gfsdsect,r9
         lay   r14,=xl8'00'
         lay   r15,w_lasttod
         clc   0(l'w_lasttod,r15),0(r14)
         jle   read0005
         lay   r14,gfs_tod
         clc   0(l'w_lasttod,r15),0(r14)
         jlnh  read0005
         lay   r15,gfs_tod
         lay   r14,w_worktod
         mvc   0(l'w_worktod,r14),0(r15)
         lg    r15,w_lasttod
         slg   r15,w_worktod
         nihl  r15,x'ffff'
         nilh  r15,x'f000'
         nill  r15,x'0000'
         ltgr  r15,r15
         jlz   read0005
******** svc   199
         jcogfs_usrab ok=jlnop
read0005 lay   r15,w_lasttod
         mvc   0(l'w_lasttod,r15),gfs_tod
         lay   r15,=xl2'ef65'        trace=usr=f65 records
         clc   gfs_eid,0(r15)        trace=usr=f65 records
         jlne  read9999
*fixme3   cliy  gfs_subp,237          skip swa freed by subpool#
*fixme4   jle   read9999
         lay   r6,w_gfnode
work     using gfnode,r6
*        llgf  r0,=a(x'1400')        !!!
*        cly   r0,gfs_len            !!!
*        jlne  around2                 !!!
*        llgf  r0,=a(x'008D1C00')      !!!
*        cly   r0,gfs_virt             !!!
*        jle   around1                 !!!
*        jlne  around2                 !!!
*round1  ds    0h                      !!!
*        svc   199                     !!!
*round2  ds    0h                      !!!
         xc    work.gfnode(gfnode_len),work.gfnode
         mviy  work.gfnid,c'g'
         mviy  work.gfnid+1,c'f'
         mvc   work.gfnrc,gfs_rc
         cliy  gfs_type,x'20'
         jlne  notsystem
system   mviy  work.gfnstat,c'F' x'00' G/F/S/00 system freemain
         mvc   work.gfnwhofreedascb,gfs_ascb    no regs
         mvc   work.gfnwhofreedtcb,gfs_tcb
         mvc   work.gfnwhofreedjobn,gfs_job1
         mvc   work.gfnwhenfreed,gfs_tod
         mvc   work.gfnsubp,gfs_subp
         mvc   work.gfntod,gfs_tod
         mvc   work.gfnasids,gfs_asidmem
         mvc   work.gfnjobname,gfs_job1
         mvc   work.gfnkey,gfs_key
         llgf  r0,gfs_virt
         sty   r0,work.gfnaddrs
         mvc   work.gfnasidh,gfs_asidmem
         algf  r0,gfs_len
         sty   r0,work.gfnaddrh
         llgf  r0,gfs_len
         stg   r0,work.gfnlen          fd'0'
         jlu   read0200
notsystem tmy  gfs_flag1,b'00000001' freemain ?
         jlo   read0110
******** #die  'f psw?',type=CMD
         mviy  work.gfnstat,c'G'   x'00' G/F/S/00
         mvc   work.gfnwhogotasid,gfs_asid
         mvc   work.gfnwhogotpsw,gfs_psw
         mvc   work.gfnwhogotascb,gfs_ascb
         mvc   work.gfnwhogottcb,gfs_tcb
         mvc   work.gfnwhogotjobn,gfs_jobn
         mvc   work.gfnwhengot,gfs_tod
         mvc   work.gfngotregs,gfs_regs
         mvc   work.gfnkey,gfs_key
         jlu   read0115
read0110 ds    0h
         mviy  work.gfnstat,c'F'   x'00' G/F/S/00
         mvc   work.gfnwhofreedasid,gfs_asid
         mvc   work.gfnwhofreedpsw,gfs_psw
         mvc   work.gfnwhofreedascb,gfs_ascb
         mvc   work.gfnwhofreedtcb,gfs_tcb
         mvc   work.gfnwhofreedjobn,gfs_jobn
         mvc   work.gfnwhenfreed,gfs_tod
         mvc   work.gfnfreeregs,gfs_regs
         mvc   work.gfnkey,gfs_key
read0115 mvc   work.gfnsubp,gfs_subp        was subb ?????
         mvc   work.gfntod,gfs_tod
         mvc   work.gfnasids,gfs_asidmem
         mvc   work.gfnjobname,gfs_jobnmem
         llgf  r0,gfs_virt
         sty   r0,work.gfnaddrs
         mvc   work.gfnasidh,gfs_asidmem
         algf  r0,gfs_len
         sty   r0,work.gfnaddrh
         llgf  r0,gfs_len
         stg   r0,work.gfnlen          fd'0'
         ltg   r0,work.gfnlen
         jlnz  read0200
         cliy  work.gfnstat,c'G'       zero length getmain is ok
         jle   read9999
         ltgf  r1,work.gfnaddrs
         jlnz  read0200
         mviy  work.gfnstat,c'S'   x'00' G/F/S/00subpool freemain
*        aif   ('&sysparm' ne 'JCO').jco9    !!!!
*        lay   r15,=x'006EE568'             !!!!
*        clc   0(4,r15),work.gfnaddrs !!!!
*        jlne  around9               !!!!
*        lay   r15,=x'00000000000024E0' !!!
*        clc   0(8,r15),work.gfnlen  !!!!
*        jlne  around9
*        lay   r15,=x'ffffffffffffffff' !!!
*        lay   r15,=x'C783B25EC69F6000' !!!
*        clc   0(8,r15),work.gfntod     !!!
*        jlh   around9               !!!
*        #die  'd 6r!;l rwregs',type=CMD  !!!
*around9 ds    0h                         !!!
.jco9    anop
read0200 cliy  work.gfnrc,0
         jle   read0210
         lay   r15,=cl16'err-return code'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         lay   r0,work.gfnode
         stg   r0,w_report@
         lay   r0,0
         stg   r0,w_merge@             new/update/merge
         jasl  r14,rept0000
         jlu   read9999
read0210 cliy  work.gfnstat,c'G'
         jlne  read0220
         jasl  r14,updg0000
         macro
         jcogfs_dump_tree &label
         aif   ('&sysparm' eq 'JCO').jco
         jlu   &label
         ago   .jco1
.jco     jlnop &label
.jco1    lay   r15,=cl16'&label'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         xgr   r14,r14
         stg   r14,w_tree_total
         jasl  r14,tree0000
&label   ds    0h
         mend
         jcogfs_dump_tree dump_tree_updg2
         jlu   read0250
read0220 cliy  work.gfnstat,c'F'
         jlne  read0230
         jasl  r14,updf0000
         jcogfs_dump_tree dump_tree_updf2
         jlu   read0250
read0230 cliy  work.gfnstat,c'S'
         jlne  read0240
         jasl  r14,upds0000
         jcogfs_dump_tree dump_tree_upds2
         jlu   read0250
read0240 ds    0h
         jcogfs_usrab ok=jlnop
read0250 ds    0h
         macro
         jcogfs_debug_rept &label,&node
         aif   ('&sysparm' eq 'JCO').jco
         jlu   &label
         ago   .jco1
.jco     jlnop &label
.jco1    lay   r15,=cl16'&label'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         lay   r0,&node..gfnode
         stg   r0,w_report@
         lay   r0,0
         stg   r0,w_merge@
         jasl  r14,rept0000
&label   ds    0h
         mend
         jcogfs_debug_rept debug_post_work,work
         cliy  work.gfnstat,0
         jlne  read0200
         drop  work
******   #die  'f psw?',type=CMD
         drop  r9
read9999 lmg   r0,r15,readsave
         br    r14                     return
         ds    0fd
         ltorg
gfnode   dsect
gfnid    dc    cl2'gf'
gfnstat  dc    x'00' Getmained,Free,Subpool or x'00'-uninitialized
gfnsubp  dc    x'00'
gfnhist  dc    x'00'
gfnhist_freed  equ x'80'
gfnhist_gotten equ x'40'
gfnhist_repeat equ x'20'
gfnhist_err_rc equ x'08' ibm gfs indicated fail or rc>0
gfnhist_err_gg equ x'04' getmain on getmain
gfnhist_err_ff equ x'02' freemain fails to pair
gfnhist_err_pf equ x'01' partial freemain
gfnrc    ds    x
gfntype  ds    x
gfnkey   ds    x
gfnless@ dc    ad(0)
gfnmore@ dc    ad(0)
gfntod   dc    xl8'00'
gfnstart ds    0fd
gfnasids dc    h'0'
         dc    h'0'
gfnaddrs dc    a(0)
gfnpast  ds    0fd
gfnasidh dc    h'0'
         dc    h'0'
gfnaddrh dc    a(0)
gfnlen   dc    fd'0'
         org   gfnlen+4
gfnlen4  ds    f
gfnjobname dc  xl8'00'
gfnwhogot ds   0xl96
gfnwhogotasid dc h'0'
         dc    h'0'
gfnwhogotpsw dc f'0'
gfnwhogotascb dc a(0)
gfnwhogottcb dc a(0)
gfnwhogotjobn dc xl8'00'
gfnwhengot dc  xl8'00'
gfngotregs dc  xl64'00'
gfnwhofreed ds 0xl96
gfnwhofreedasid dc h'0'
         dc    h'0'
gfnwhofreedpsw dc f'0'
gfnwhofreedascb dc a(0)
gfnwhofreedtcb dc a(0)
gfnwhofreedjobn dc xl8'00'
gfnwhenfreed dc xl8'00'
gfnfreeregs dc xl64'00'
gfnoder  equ   256-(*-gfnode)
         ds    (gfnoder)x
gfnode_len equ *-gfnode
storage  dsect
readsave ds    16fd
         ds    0fd
w_gfnode ds    xl(gfnode_len)
         ds    0fd
JCOGFS01 csect ,
updf0000 ds    0h                      perform freemains in tree
         stmg  r0,r15,updfsave         temp save-nonstandard
         macro
         jcogfs_log &log,&gfnode
         aif   ('&sysparm' ne 'JCO').mend
         lay   r15,=cl16'&log'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         lay   r0,&gfnode
         stg   r0,w_report@
         lay   r0,0
         stg   r0,w_merge@             new/update/merge
         jasl  r14,rept0000
.mend    mend
         lay   r2,w_gfnode
new      using gfnode,r2
         jcogfs_log updf,new.gfnode
         lay   r4,w_64root
         stg   r4,w_cursor@@
         ltg   r4,w_64root
         stg   r4,w_cursor@
cursor   using gfnode,r4
         jlnz  updf_compcursor
updf_unpaired  oiy new.gfnhist,gfnhist_err_ff
         llgt  r15,new.gfnaddrs
*        cly   r15,=a(x'15f68')        !!
*        jlne  noxdc1                  !!
*        svc   199                     !!
*noxdc1  ds    0h                      !!
         lay   r15,=cl16'unpaired freemain'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         lay   r0,new.gfnode
         stg   r0,w_report@
         lay   r0,0
         stg   r0,w_merge@             new/update/merge
         jasl  r14,rept0000
         jlu   updf9900                discard
updf_compcursor cliy cursor.gfnstat,c'G'
         jcogfs_usrab ok=jle
         clc   new.gfnpast,cursor.gfnstart
         jlnh  updf_chaseless
         clc   new.gfnstart,cursor.gfnpast
         jlnl  updf_chasemore
         clc   new.gfnstart,cursor.gfnstart
         jlne  updf_newold1
         clc   new.gfnpast,cursor.gfnpast
         jlne  updf_newold1
         jasl  r14,data0000                   exact match
         lay   r0,cursor.gfnode
         stg   r0,w_free@
         lg    r0,w_cursor@@
         stg   r0,w_free@@
         jasl  r14,free0000
         jlu   updf9900
updf_newold1 ds 0h                            notexactmatch
         clc   cursor.gfnasids,new.gfnasids
         jlne  updf_unpaired
         clc   cursor.gfnasidh,new.gfnasidh
         jlne  updf_unpaired
         oiy   new.gfnhist,gfnhist_err_pf
         oiy   cursor.gfnhist,gfnhist_err_pf
         clc   cursor.gfnstart,new.gfnstart
         jle   updf_startfree
         clc   cursor.gfnpast,new.gfnpast
         jle   updf_pastfree
         llgt  r0,new.gfnaddrs         else mid free
         cly   r0,cursor.gfnaddrs      cursor length remaining
         jlh   updf_startsincursor
*                                 occurs only if data missing
*                              doc the orphaned freemain fraction
*                                and re-up the new.freemain
         oiy   new.gfnhist,gfnhist_err_pf
         llgt  r0,new.gfnaddrs        start new.freemain at getmain
         sly   r0,cursor.gfnaddrs free-getm start
         jlp   updf_getmainoverlaps
         llgt  r0,cursor.gfnaddrs    else freemain< getmain start
         llgt  r1,new.gfnaddrh
         cly   r1,cursor.gfnaddrs      new.h:got.s
         jlnh  updf_freehighlessgotlow range is new.h:got.h
*******  svc   199                     else
         cly   r1,cursor.gfnaddrh      new.h:got.h
         jlnl  updf_freegotredrivefree GE,yes,gotmain is totally freed
         sty   r1,cursor.gfnaddrs      got.s becomes new.h
         llgt  r0,cursor.gfnaddrh      end
         sly   r0,cursor.gfnaddrs      minus start
         stg   r0,cursor.gfnlen        new length of got (!!NEGATIVE)
         jasl  r14,data0000
         lay   r15,=cl16'partial freemain'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         lay   r0,new.gfnode
         stg   r0,w_report@
         lay   r0,0
         stg   r0,w_merge@             new/update/merge
         jasl  r14,rept0000
         jlu   updf9900                discard
updf_freehighlessgotlow ds 0h          free does not overlap got
         jlu   updf_unpaired
updf_getmainoverlaps lg r1,new.gfnlen
*        svc   199
         nopr  0
         sgr   r1,r0
         jcogfs_usrab ok=jlp
         stg   r1,new.gfnlen
         mvc   new.gfnaddrs,cursor.gfnaddrs
updf_startsincursor ds 0h
*        svc   199
         nopr  0
         llgt  r0,new.gfnaddrh         else mid free  ?
         cly   r0,cursor.gfnaddrh      cursor length remaining
         jll   updf_embedded
         lg    r0,new.gfnlen
         slg   r0,cursor.gfnlen
         stg   r0,new.gfnlen
         aly   r0,new.gfnaddrs
         sty   r1,new.gfnaddrh
         lgr   r8,r1
         mvc   cursor.gfnwhofreed,new.gfnwhofreed  updates applied to
         mvc   cursor.gfnwhenfreed,new.gfnwhenfreed  old getmain 1 of 2
         jlu   updf_splitfreemid       else some freemain needs repeat
updf_embedded llgf r1,cursor.gfnaddrh   middle free in gotmain
         lgr   r8,r1                   old end addr
         llgt  r0,new.gfnaddrs         new start addr
         sty   r0,cursor.gfnaddrh      becomes old dog end
         sly   r0,cursor.gfnaddrs    minus old start becomes cursor
         stg   r0,cursor.gfnlen      length; cursor gotmain is done
         xc    cursor.gfnjobname,new.gfnjobname exchange jobname's
         xc    new.gfnjobname,cursor.gfnjobname exchange jobname's
         xc    cursor.gfnjobname,new.gfnjobname exchange jobname's
         xc    cursor.gfntod,new.gfntod exchange tod's
         xc    new.gfntod,cursor.gfntod exchange tod's
         xc    cursor.gfntod,new.gfntod exchange tod's
         mvc   cursor.gfnwhofreed,new.gfnwhofreed  updates applied to
         llgt  r0,new.gfnaddrh       old freemain high
         sty   r1,new.gfnaddrh       replaced by gotmain end
         sty   r0,new.gfnaddrs       old freemain high is now start
         sgr   r1,r0                 and delta is length of
         jcogfs_usrab ok=jlp
         stg   r1,new.gfnlen         undisturbed gotmain remaining
         mvc   new.gfnwhogot,cursor.gfnwhogot
         mvc   new.gfnstat,cursor.gfnstat apply 2of2 getmained to new
         mvc   new.gfnsubp,cursor.gfnsubp
         mvc   new.gfnhist,cursor.gfnhist
         mvc   new.gfnhist,cursor.gfnhist
         mvc   new.gfntype,cursor.gfntype
         mvc   new.gfnkey,cursor.gfnkey
         jlu   updf_repeat
updf_splitfreemid ds 0h
         sty   r8,new.gfnaddrs
         llgt  r0,new.gfnaddrh
         slgr  r0,r8
         jlz   updf9900
         jcogfs_usrab ok=jlh
         stg   r0,new.gfnlen
         jlu   updf_repeat
updf_startfree ds 0h
         lg    r0,cursor.gfnlen
         clg   r0,new.gfnlen        getmain len versus freemain len
         jll   updf_splitfreeall
         llgt  r0,cursor.gfnaddrs  getmain bigger
         alg   r0,new.gfnlen
         sty   r0,cursor.gfnaddrs
         lg    r0,cursor.gfnlen
         slg   r0,new.gfnlen
         stg   r0,cursor.gfnlen
         jasl  r14,data0000       keep latest free info
         jlu   updf9900
updf_splitfreeall ds 0h           new=cursor gfnaddrstart
         lg    r0,new.gfnlen       getmain is smaller
         slg   r0,cursor.gfnlen      freemain-getmain>0
         stg   r0,new.gfnlen          leftover freemain len
         llgt  r0,cursor.gfnaddrh       end of getmain
         sty   r0,new.gfnaddrs           becomes start of freemain
         jasl  r14,data0000
updf_freegotredrivefree ds 0h
         lay   r0,cursor.gfnode
         stg   r0,w_free@
         lg    r0,w_cursor@@
         stg   r0,w_free@@
         jasl  r14,free0000
         jlu   updf_repeat
updf_pastfree ds 0h                   new=cursor addrh
         lg    r0,new.gfnlen amount
         clg   r0,cursor.gfnlen     freemain : gotmained len
         jll   updf_partfree        leave some getmain
         llgt  r0,new.gfnaddrh      else leave some freemain
         slg   r0,cursor.gfnlen
         sty   r0,new.gfnaddrh
         lg    r0,new.gfnlen
         slg   r0,cursor.gfnlen
         stg   r0,new.gfnlen
         jasl  r14,data0000
         lay   r0,cursor.gfnode
         stg   r0,w_free@
         lg    r0,w_cursor@@
         stg   r0,w_free@@
         jasl  r14,free0000         else delete all cursor
         jlu   updf_repeat
updf_partfree llgt r0,cursor.gfnaddrh
         slg   r0,new.gfnlen
         sty   r0,cursor.gfnaddrh
         lg    r0,cursor.gfnlen
         slg   r0,new.gfnlen
         stg   r0,cursor.gfnlen
         jasl  r14,data0000       keep latest free info
         jlu   updf9900
updf_chaseless ltg r0,cursor.gfnless@  chase less
         jlz   updf_addless
         lay   r4,cursor.gfnless@
         stg   r4,w_cursor@@
         stg   r0,w_cursor@
         lgr   r4,r0
         jlu   updf_compcursor
updf_chasemore ltg r0,cursor.gfnmore@  chase more
         jlz   updf_addmore
         lay   r4,cursor.gfnmore@
         stg   r4,w_cursor@@
         stg   r0,w_cursor@
         lgr   r4,r0
         jlu   updf_compcursor
updf_addless jlu updf_unpaired
updf_addmore jlu updf_unpaired
updf9900 mviy  new.gfnstat,0
         jlu   updf9999
updf_repeat ds 0h
         oiy   new.gfnhist,gfnhist_repeat
         drop  new
         drop  cursor
updf9999 lmg   r0,r15,updfsave
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
updfsave ds    16fd
w_64root ds    ad
w_cursor@ ds   ad
w_cursor@@ ds  ad
w_report@ ds   ad
JCOGFS01 csect ,
updg0000 ds    0h                      add/replace gotmains in tree
         stmg  r0,r15,updgsave
         lay   r2,w_gfnode
new      using gfnode,r2
         jcogfs_log updg,new.gfnode
*****    #die  'eq updg,+0;l rwregs',type=CMD
         lay   r4,w_64root
         stg   r4,w_cursor@@
         ltg   r4,w_64root
         stg   r4,w_cursor@
cursor   using gfnode,r4
         jlnz  updg_compcursor
         jasl  r14,allo0000
         lg    r4,w_64nodeslot
         mvc   cursor.gfnode(gfnode_len),new.gfnode else cursor=only
         stg   r4,w_64root
         stg   r4,w_cursor@
         lay   r0,w_64root
         stg   r0,w_cursor@@
         jlu   updg9900
updg_compcursor clc new.gfnpast,cursor.gfnstart
         jlnh  updg_chaseless
         clc   new.gfnstart,cursor.gfnpast
         jlnl  updg_chasemore
         clc   new.gfnstart,cursor.gfnstart
         jlne  updg_newold1
         clc   new.gfnpast,cursor.gfnpast
         jlne  updg_newold1
         jasl  r14,data0000                   exact match
         jlu   updg9900
updg_newold1 ds 0h                            notexactmatch
         clc   cursor.gfnasids,new.gfnasids
         jlne  updg_add
         clc   cursor.gfnasidh,new.gfnasidh
         jlne  updg_add
         oiy   new.gfnhist,gfnhist_err_gg
         oiy   cursor.gfnhist,gfnhist_err_gg
         lay   r15,=cl16'getmains overlap'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         lay   r0,cursor.gfnode           report
         stg   r0,w_report@
         lay   r0,new.gfnode
         stg   r0,w_merge@             new/update/merge
         jasl  r14,rept0000                   getmain on getmain
         jasl  r14,data0000         else delete all cursor
         lay   r0,cursor.gfnode
         stg   r0,w_free@
         lg    r0,w_cursor@@
         stg   r0,w_free@@
         jasl  r14,free0000
         jlu   updg_repeat     redrive original getm until noconflict
updg_add clc new.gfnstart,cursor.gfnstart
         jll   updg_addless
         jlh   updg_addmore
         oiy   new.gfnhist,gfnhist_err_gg
         oiy   cursor.gfnhist,gfnhist_err_gg
         lay   r15,=cl16'updg_add abend  '
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         lay   r0,cursor.gfnode           report
         stg   r0,w_report@
         lay   r0,new.gfnode
         stg   r0,w_merge@             new/update/merge
         jasl  r14,rept0000                   getmain on getmain
         jcogfs_usrab ok=jlnop      abend
updg_chaseless ltg r0,cursor.gfnless@  chase less
         jlz   updg_addless
         lay   r4,cursor.gfnless@
         stg   r4,w_cursor@@
         stg   r0,w_cursor@
         lgr   r4,r0
         jlu   updg_compcursor
updg_chasemore ltg r0,cursor.gfnmore@  chase more
         jlz   updg_addmore
         lay   r4,cursor.gfnmore@
         stg   r4,w_cursor@@
         stg   r0,w_cursor@
         lgr   r4,r0
         jlu   updg_compcursor
updg_addless ds 0h
         jasl  r14,allo0000
         lg    r0,w_64nodeslot
         stg   r0,cursor.gfnless@
         lay   r4,cursor.gfnless@
         stg   r4,w_cursor@@
         stg   r0,w_cursor@
         lgr   r4,r0
         mvc   cursor.gfnode(gfnode_len),new.gfnode else cursor=only
         jlu   updg9900
updg_addmore ds 0h
         jasl  r14,allo0000
         lg    r0,w_64nodeslot
         stg   r0,cursor.gfnmore@
         lay   r4,cursor.gfnmore@
         stg   r4,w_cursor@@
         stg   r0,w_cursor@
         lgr   r4,r0
         mvc   cursor.gfnode(gfnode_len),new.gfnode else cursor=only
         jlu   updg9900
updg9900 mviy  new.gfnstat,0
         jlu   updg9999
updg_repeat ds 0h
         oiy   new.gfnhist,gfnhist_repeat
         drop  new
         drop  cursor
updg9999 lmg   r0,r15,updgsave
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
updgsave ds    16fd
JCOGFS01 csect ,
upds0000 ds    0h                      add/replace gotmains in tree
         stmg  r0,r15,updssave
         lay   r2,w_gfnode
new      using gfnode,r2
         jcogfs_log upds,new.gfnode
*****    #die  'eq upds,+0;l rwregs',type=CMD
         stg   r2,w_subf
         cliy  w_traverse_toggle,c'L'
         jlne  rightleft
leftright jasl r14,subl0000
         mviy  w_traverse_toggle,c'R'
         jlu   upds9900
rightleft jasl r14,subm0000
         mviy  w_traverse_toggle,c'L'
upds9900 mviy  new.gfnstat,0
upds_repeat ds 0h
         drop  new
upds9999 lmg   r0,r15,updssave
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
updssave ds    16fd
w_subf   ds    ad
w_traverse_toggle ds c
         ds    ad
JCOGFS01 csect ,
dall0000 ds    0h
         stmg  r0,r15,dallsave
         ltg   r4,w_freed@
         jcogfs_usrab ok=jlnz
freed    using gfnode,r4
         cliy  freed.gfnstat,0
         jcogfs_usrab ok=jle
         tmy   freed.gfnhist,gfnhist_freed
         jcogfs_usrab ok=jlo
         lay   r0,0
         stg   r0,freed.gfnmore@
         stg   r0,freed.gfnless@
         ltg   r2,w_unusedq
unused   using gfnode,r2
         jlz   pushunused
         stg   r2,freed.gfnmore@
         stg   r2,freed.gfnless@
pushunused stg r4,w_unusedq
         drop  unused
         drop  freed
dall9999 lmg   r0,r15,dallsave
         br    r14
         ds    0fd
         ltorg
storage  dsect
dallsave ds    16fd
w_unusedq ds   ad
JCOGFS01 csect ,
allo0000 ds    0h
         stmg  r0,r15,allosave         temp save-nonstandard
         aif   ('&sysparm' ne 'JCO').jco10
unused   using gfnode,r2
         ltg  r2,w_unusedq
         jlz   jco10z
jco10a   lg    r3,unused.gfnmore@
         cg    r3,unused.gfnless@
         jcogfs_usrab ok=jle
         ltgr  r2,r3
         jlnz  jco10a
         drop  unused
jco10z   ds    0h
.jco10   anop
         jcogfs_log allo,0
         ltg   r2,w_unusedq
unused   using gfnode,r2
         jlz   uselimit
         lg    r3,unused.gfnmore@
         cg    r3,unused.gfnless@
         jcogfs_usrab ok=jle
         stg   r3,w_unusedq
         stg   r2,w_64nodeslot
         jlu   allo9000
uselimit lg    r2,w_64unused
         clg   r2,w_64limit full?
         jcogfs_usrab ok=jll
         stg   r2,w_64nodeslot
         lay   r4,gfnode_len(,r2)
         stg   r4,w_64unused
allo9000 xc    unused.gfnode(gfnode_len),unused.gfnode
         drop  unused
         lmg   r0,r15,allosave
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
allosave ds    16fd
w_64nodeslot ds ad
JCOGFS01 csect ,
data0000 ds    0h                      update with who last
new      using gfnode,r2
cursor   using gfnode,r4
         stmg  r0,r15,datasave         temp save-nonstandard
         mvc   cursor.gfntod,new.gfntod exchange tod's
         cliy  new.gfnstat,c'G'        new data gotmain?
         jle   data0100                yes, update whogot
         mvc   cursor.gfnwhofreed,new.gfnwhofreed else update freed
         mvc   cursor.gfnwhenfreed,new.gfnwhenfreed who/when
         jlu   data9999                was in error- jll
data0100 mvc   cursor.gfnwhogot,new.gfnwhogot
         mvc   cursor.gfnwhengot,new.gfnwhengot
         drop  new
         drop  cursor
data9999 lmg   r0,r15,datasave
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
datasave ds    16fd
JCOGFS01 csect ,
free0000 ds    0h                      performed free
         stmg  r0,r15,freesave         temp save-nonstandard
         ltg   r4,w_free@
         jcogfs_usrab ok=jlnz
         ltg   r5,w_free@@
         jcogfs_usrab ok=jlnz
cursor   using gfnode,r4
         jcogfs_log free,cursor.gfnode
*        llgt  r0,cursor.gfnaddrs      !!!!
*        cy    r0,=a(x'008D1C00')      !!!!
*        jlne  jco12                   !!!!
*        svc   199                     !!!!
*        lg    r0,cursor.gfnlen        !!!!
*        cg    r0,=ad(x'00000018')     !!!!
*        jlne  jco12                   !!!!
*        #die  'eq free,+0;l rwregs',type=CMD  !!!!
*co12 ds 0h                            !!!!
         jcogfs_debug_rept debug_free1,cursor
         mviy  cursor.gfnstat,0
         oiy   cursor.gfnhist,gfnhist_freed
         ltg   r0,cursor.gfnless@
         jlnz  hasless
noless   ltg   r0,cursor.gfnmore@
         jlnz  moreonly
nochild  lay   r0,0
         stg   r0,0(,r5)              remove cursor from tree
         stg   r4,w_freed@
         lay   r4,0
         jlu   free9000
hasless  ltg   r0,cursor.gfnmore@
         jlnz  hasboth
lessonly mvc   0(l'gfnless@,r5),cursor.gfnless@ point around cursor
         stg   r4,w_freed@
         lay   r4,0
         jlu   free9000
moreonly mvc   0(l'gfnmore@,r5),cursor.gfnmore@ point around cursor
         stg   r4,w_freed@
         lay   r4,0
         jlu   free9000
hasboth  cliy  w_tree_balance,c'L'
         jlne  doright              do right=more
doleft   mviy  w_tree_balance,c'R' toggle left=less, next right
         lay   r0,cursor.gfnmore@
         stg   r0,w_next@@
         ltg   r6,cursor.gfnmore@
         jcogfs_usrab ok=jlnz
next     using gfnode,r6
runleft  ltg   r0,next.gfnless@
         jlz   useleft
         lay   r6,next.gfnless@
         stg   r6,w_next@@
         lgr   r6,r0
         jlu   runleft
doright  mviy  w_tree_balance,c'L' toggle right=more, next left
         lay   r0,cursor.gfnless@
         stg   r0,w_next@@
         ltg   r6,cursor.gfnless@
         jcogfs_usrab ok=jlnz
runright ltg   r0,next.gfnmore@
         jlz   useright
         lay   r6,next.gfnmore@
         stg   r6,w_next@@
         lgr   r6,r0
         jlu   runright
useleft  ds    0h
         jasl  r14,move0000
         ltg   r3,w_next@@                else,moreonlychild
         jcogfs_usrab ok=jlnz
         mvc   0(l'gfnmore@,r3),next.gfnmore@  skip next, ptr to child
         jlu   dropnext
useright ds    0h
         jasl  r14,move0000
         ltg   r3,w_next@@                else,lessonlychild
         jcogfs_usrab ok=jlnz
         mvc   0(l'gfnless@,r3),next.gfnless@  skip next, ptr to child
dropnext lay   r0,next.gfnode
         stg   r0,w_freed@
         mviy  next.gfnstat,0
         oiy   next.gfnhist,gfnhist_freed
         drop  next
         drop  cursor
free9000 jasl  r14,dall0000
free9999 lmg   r0,r15,freesave
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
freesave ds    16fd
w_next@@ ds    ad
w_tree_balance ds c
w_free@  ds    ad
w_free@@ ds    ad
w_freed@ ds    ad
JCOGFS01 csect ,
rept0000 ds    0h                      performed rept
         stmg  r0,r15,reptsave         temp save-nonstandard
*        aif   ('&sysparm' ne 'JCO').jco11
*        #die  'f psw?;l rwregs',type=CMD
*.jco11   anop
         lg    r3,w_report@            report/cursor
         lg    r5,w_merge@             new/update/merge
report   using gfnode,r3
new      using gfnode,r5
         lay   r7,w_line
         using lined,r7
         lay   r15,=cl256' '
         mvc   line,0(r15)
         ltgr  r3,r3
         jlz   rept_nofreeinfo
         lay   r15,=cl2'gf'
         clc   report.gfnid,0(r15)
         jcogfs_usrab ok=jle
         macro
         jcogfs_mvline &fld,&hdr
         gbla  &jcogfs_pos
         gblc  &jcogfs_hdr
&jcogfs_pos seta &jcogfs_pos+1
&jcogfs_cha setc '&jcogfs_pos'
&jcogfs_hdr setc '&jcogfs_hdr. &hdr.'
         lay   r15,=cl16'................'
         mvc   line+&jcogfs_cha.(l'&fld),0(r15)
         lay   r15,=cl256' '
         clc   &fld,0(r15)
         jle   jcogfs_mvline&jcogfs_cha
         mvc   line+&jcogfs_cha.(l'&fld),&fld
jcogfs_mvline&jcogfs_cha ds 0h
&jcogfs_pos seta &jcogfs_pos+l'&fld
         mend
         jcogfs_mvline report.gfnstat,t
         macro
         jcogfs_xxline &fld,&hdr
         gbla  &jcogfs_pos
         gblc  &jcogfs_hdr
&jcogfs_pos seta &jcogfs_pos+1
&jcogfs_cha setc '&jcogfs_pos'
&jcogfs_hdr setc '&jcogfs_hdr. &hdr.'
         aif   (1 eq l'&fld).x1byte
         aif   (2 eq l'&fld).x2byte
         aif   (4 eq l'&fld).x4byte
         aif   (8 eq l'&fld).x8byte
         mnote 8,'length not supported in xxline macro'
         mexit
.x1byte  anop
         mvo   temp(2),&fld
         oiy   temp+1,x'0f'
         unpk  line+&jcogfs_cha.(2),temp(2)
         lay   r15,trhex
         tr    line+&jcogfs_cha.(2),0(r15)
         ago   .mend
.x2byte  anop
         mvo   temp(3),&fld
         oiy   temp+2,x'0f'
         unpk  line+&jcogfs_cha.(4),temp(3)
         lay   r15,trhex
         tr    line+&jcogfs_cha.(4),0(r15)
         ago   .mend
.x4byte  anop
         mvo   temp(5),&fld
         oiy   temp+4,x'0f'
         unpk  line+&jcogfs_cha.(8),temp(5)
         lay   r15,trhex
         tr    line+&jcogfs_cha.(8),0(r15)
         ago   .mend
.x8byte  anop
         mvo   temp(5),&fld
         oiy   temp+4,x'0f'
         unpk  line+&jcogfs_cha.(8),temp(5)
         lay   r15,trhex
         tr    line+&jcogfs_cha.(8),0(r15)
         mvo   temp(5),&fld+4
         oiy   temp+4,x'0f'
         unpk  line+&jcogfs_cha.+8(8),temp(5)
         lay   r15,trhex
         tr    line+&jcogfs_cha.+8(8),0(r15)
.mend    anop
&jcogfs_pos seta &jcogfs_pos+l'&fld+l'&fld
         mend
******   svc   199                     !!!!!!!!!!
         jcogfs_xxline report.gfnsubp,sp
         jcogfs_xxline report.gfnhist,..
         jcogfs_xxline report.gfnrc,rc
         jcogfs_xxline report.gfnasids,asid
         jcogfs_xxline report.gfnaddrs,address_
         jcogfs_xxline report.gfnlen4,length__
         jcogfs_mvline report.gfnjobname,jobname_
         lay   r15,=xl256'00'
         clc   report.gfnwhengot,0(r15)
         jle   rept_nogotinfo
         jcogfs_xxline report.gfnwhogotasid,asid
         jcogfs_xxline report.gfnwhogotpsw,psw_____
         jcogfs_xxline report.gfnwhogotascb,ascb____
         jcogfs_xxline report.gfnwhogottcb,tcb_____
         jcogfs_mvline report.gfnwhogotjobn,jobname_
         macro
         jcogfs_stckline &fld,&hdr
         gbla  &jcogfs_pos
         gblc  &jcogfs_hdr
&jcogfs_pos seta &jcogfs_pos+1
&jcogfs_cha setc '&jcogfs_pos'
&jcogfs_hdr setc '&jcogfs_hdr. &hdr.'
         lay   r15,=cl16'................'
         mvc   line+&jcogfs_cha.(16),0(r15)
         lay   r15,=xl256'00'
         clc   &fld,0(r15)
         jle   jcogfs_stckline&jcogfs_cha
         mvc   stckval,&fld
         sam31
         stckconv stckval=stckval,                                     x
               timetype=DEC,datetype=YYYYDDD,                          x
               convval=convval,mf=(E,stckconv)
         sam64
         xc    temp,temp
         mvc   temp(4),convval+8
         mvc   temp+4(6),convval
         unpk  line+&jcogfs_cha.(16),temp(9)
         oiy   line+&jcogfs_cha.+15,x'f0'
jcogfs_stckline&jcogfs_cha ds 0h
&jcogfs_pos seta &jcogfs_pos+16
         mend
         jcogfs_stckline report.gfnwhengot,getmain_tod_____
rept_nogotinfo ds 0h
         lay   r15,=xl256'00'
         clc   report.gfnwhenfreed,0(r15)
         jle   rept_nofreeinfo
         jcogfs_xxline report.gfnwhofreedasid,asid
         jcogfs_xxline report.gfnwhofreedpsw,psw_____
         jcogfs_xxline report.gfnwhofreedascb,ascb____
         jcogfs_xxline report.gfnwhofreedtcb,tcb_____
*        jcogfs_mvline report.gfnwhofreedjobn,jobname_
*        jcogfs_stckline report.gfnwhenfreed,freemain_tod____
rept_nofreeinfo ds 0h
         ltgr  r5,r5
         jlnz  rept_conflict
         ltgr  r5,r3            report only one item
         jlz   rept9000
rept_conflict lay r15,=cl4'gf'
         clc   new.gfnid,0(r15)
         jcogfs_usrab ok=jle
         jcogfs_mvline new.gfnstat,t
         jcogfs_xxline new.gfnsubp,sp
         jcogfs_xxline new.gfnhist,..
         jcogfs_xxline new.gfnrc,rc
         jcogfs_xxline new.gfnasids,asid
         jcogfs_xxline new.gfnaddrs,address_
         jcogfs_xxline new.gfnlen4,length__
         jcogfs_mvline new.gfnjobname,jobname_
*        lay   r15,=xl256'00'
*        clc   new.gfnwhengot,0(r15)
*        jle   rept_nonewgotinfo
*        jcogfs_xxline new.gfnwhogotasid,asid
*        jcogfs_xxline new.gfnwhogotpsw,psw_____
*        jcogfs_xxline new.gfnwhogotascb,ascb
*        jcogfs_xxline new.gfnwhogottcb,tcb_____
*        jcogfs_mvline new.gfnwhogotjobn,jobname_
*        jcogfs_stckline new.gfnwhengot,getmain_tod_____
rept_nonewgotinfo ds 0h
         lay   r15,=xl256'00'
         clc   new.gfnwhenfreed,0(r15)
         jle   rept_nonewfreeinfo
         jcogfs_xxline new.gfnwhofreedasid,asid
         jcogfs_xxline new.gfnwhofreedpsw,psw_____
         jcogfs_xxline new.gfnwhofreedascb,ascb____
         jcogfs_xxline new.gfnwhofreedtcb,tcb_____
*        jcogfs_mvline new.gfnwhofreedjobn,jobname_
         jcogfs_stckline new.gfnwhenfreed,freemain_tod____
rept_nonewfreeinfo ds 0h
rept9000 ds    0h
         drop  r7
         drop  new
         drop  report
         lg    r1,w_outdcb@
         lay   r2,w_hdr
         jcogfs_put
rept9999 lmg   r0,r15,reptsave
         br    r14                     return
         ds    0fd
         ltorg
         macro
         jcogfs_hdrline
         gblc  &jcogfs_hdr
m_line_hdr dc  c'&jcogfs_hdr'
         mend
         jcogfs_hdrline
hextr    dc    c'0123456789ABCDEF'
         ORG   hextr-c'0'
trhex    ds    0cl256
         ORG   ,
lined    dsect
line     ds    cl256
temp     ds    xl16
convval  ds    0fd,xl16
stckval  ds    0fd,xl16
stckconv stckconv mf=L
storage  dsect
reptsave ds    16fd
w_merge@ ds    ad
         ds    0fd
w_hdr    ds    cl16
w_line   ds    cl256       lined dsect
w_temp   ds    xl16
w_convval ds   0fd,xl16
w_stckval ds   0fd,xl16
w_stckconv stckconv mf=L
JCOGFS01 csect ,
move0000 ds    0h                      performed move
         stmg  r0,r15,movesave         temp save-nonstandard
next     using gfnode,r6
cursor   using gfnode,r4
         mvc   cursor.gfnstat,next.gfnstat
         mvc   cursor.gfnsubp,next.gfnsubp
         mvc   cursor.gfnhist,next.gfnhist
         mvc   cursor.gfntod,next.gfntod
         mvc   cursor.gfnstart,next.gfnstart
         mvc   cursor.gfnpast,next.gfnpast
         mvc   cursor.gfnlen,next.gfnlen
         mvc   cursor.gfnjobname,next.gfnjobname
         mvc   cursor.gfnwhogot,next.gfnwhogot
         mvc   cursor.gfnwhengot,next.gfnwhengot
         mvc   cursor.gfnwhofreed,next.gfnwhofreed
         mvc   cursor.gfnwhenfreed,next.gfnwhenfreed
         drop  next
         drop  cursor
move9999 lmg   r0,r15,movesave
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
movesave ds    16fd
         macro
         jcogfs_tree  &label,&less
         aif   ('&less' eq 'less').less1
&order   setc  'more'
&redor   setc  'less'
         ago   .cont1
.less1   anop
&order   setc  'less'
&redor   setc  'more'
.cont1   anop
JCOGFS01 csect ,
&label.0000 ds 0h                      traverse
         stmg  r0,r15,&label.save
         la    r0,0
         stg   r0,w_merge@             new/update/merge
cursor   using gfnode,r3
         ltg   r3,w_64root
         stg   r3,w_&label.@
         lay   r0,w_64root
         stg   r0,w_&label.@@
         jlz   &label.9999
&label.0100 cliy cursor.gfnstat,c'G'
         jcogfs_usrab ok=jle
         ltg   r4,cursor.gfn&order.@
         jlz   &label.1000
         lg    r5,w_64stk_next@
         lay   r0,cursor.gfnode
         stg   r0,0(,r5)
         stg   r0,w_&label.@
         lg    r0,w_&label.@@
         stg   r0,8(,r5)
         lay   r0,cursor.gfn&order.@
         stg   r0,w_&label.@@
         lay   r5,16(,r5)
         stg   r5,w_64stk_next@
         ltgr  r3,r4
         jcogfs_usrab ok=jlnz
         jlu   &label.0100
&label.1000 lay r1,cursor.gfnode          report/cursor
         stg   r1,w_&label.@
         stg   r0,w_&label.@@
         jlu   &label._nodal_entry
&label._nodal_exit ds 0h
         cliy  cursor.gfnstat,0
         jle   &label.1500
         lay   r0,cursor.gfn&redor.@
         ltg   r3,cursor.gfn&redor.@
         stg   r3,w_&label.@
         stg   r0,w_&label.@@
         jlnz  &label.0100
&label.1500 ds 0h
         lg    r5,w_64stk_next@
         clg   r5,w_64stk_origin
         jlnh  &label.9999
         aghi  r5,-16
         ltg   r3,0(,r5)
         jcogfs_usrab ok=jlnz
         ltg   r0,8(,r5)
         jcogfs_usrab ok=jlnz
         stg   r3,w_&label.@
         stg   r0,w_&label.@@
         stg   r5,w_64stk_next@
         jlu   &label.1000
         drop  cursor
&label.9999 lmg r0,r15,&label.save
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
&label.save ds 16fd
w_&label.@  ds ad
w_&label.@@ ds ad
JCOGFS01 csect ,
         mend
         jcogfs_tree tree,less
tree_nodal_entry ds 0h
cursor   using gfnode,r3
         lay   r0,cursor.gfnode
         stg   r0,w_report@
         lg    r14,w_tree_total
         aghi  r14,1
         stg   r14,w_tree_total
         lay   r0,0
         stg   r0,w_merge@             new/update/merge
*****    #die  'l rwregs',type=CMD
         llgt  r14,cursor.gfnaddrs
         clg   r14,=ad(x'80000000')
         jlnl  tree_rept_usrab
         llgt  r14,cursor.gfnaddrh
         clg   r14,=ad(x'80000000')
         jlnl  tree_rept_usrab
         llgf  r14,cursor.gfnlen4
         clg   r14,=ad(X'60000000')
         jlh   tree_rept_usrab
******   #die  'l rwregs',type=CMD
         jasl  r14,rept0000
         jlu   tree_nodal_exit
tree_rept_usrab ds 0h
         jasl  r14,rept0000
         drop  cursor
         jcogfs_usrab ok=jlnop
         ltorg
storage  dsect
w_tree_total ds fd
JCOGFS01 csect ,
         jcogfs_tree subl,less
subl_nodal_entry ds 0h
cursor   using gfnode,r3
*****    #die  'l rwregs',type=CMD
         lg    r6,w_subf
subf     using gfnode,r6
*****    jlu   subl_qa1
         clc   cursor.gfnasids,subf.gfnasids
         jlne  subl_nodal_exit
         clc   cursor.gfnwhogottcb,subf.gfnwhofreedtcb
         jlne  subl_nodal_exit
         clc   cursor.gfnsubp,subf.gfnsubp
         jlne  subl_nodal_exit
         clc   subf.gfnwhofreedasid,subf.gfnasids
         jcogfs_usrab ok=jle
subl_qa1 lay   r0,cursor.gfnode
         stg   r0,w_free@
         lg    r0,w_subl@@
         stg   r0,w_free@@
         mviy  w_tree_balance,c'L'
         jasl  r14,free0000
******   #die  'l rwregs',type=CMD
         drop  cursor
         jlu   subl_nodal_exit
         ltorg
         jcogfs_tree subm,more
subm_nodal_entry ds 0h
cursor   using gfnode,r3
*****    #die  'l rwregs',type=CMD
         lg    r6,w_subf
subf     using gfnode,r6
*****    jlu   subm_qa1
         clc   cursor.gfnasids,subf.gfnasids
         jlne  subm_nodal_exit
         clc   cursor.gfnwhogottcb,subf.gfnwhofreedtcb
         jlne  subm_nodal_exit
         clc   cursor.gfnsubp,subf.gfnsubp
         jlne  subm_nodal_exit
         clc   subf.gfnwhofreedasid,subf.gfnasids
         jcogfs_usrab ok=jle
subm_qa1 lay   r0,cursor.gfnode
         stg   r0,w_free@
         lg    r0,w_subm@@
         stg   r0,w_free@@
         mviy  w_tree_balance,c'R'
         jasl  r14,free0000
******   #die  'l rwregs',type=CMD
         drop  cursor
         drop  subf
         jlu   subm_nodal_exit
         ltorg
JCOGFS01 csect ,
open9999 ds    0h
ipc10000 ds    0h
         lay   r14,w_64iusertkn+4
         lay   r15,=c'jgfi'                   1st half zero-unauth
         mvc   0(4,r14),0(r15)    1st half zero-unauth
         lg    r0,w_tree_total
         aghi  r0,1
         msg   r0,=ad(jgfi_len+5*4096)
         srlg  r0,r0,20
         aghi  r0,1
         lgr   r0,r0
         aghi  r0,1
         stg   r0,w_64isegs
         lay   r2,w_64isegs
         lay   r3,=ad(1)
         lay   r4,w_64iusertkn
         lay   r5,w_64iorigin
         lay   r6,=al1(99)
         iarv64 request=GETSTOR,                                       x
               cond=NO,                                                x
               segments=(r2),                                          x
               guardsize64=(r3),                                       x
               guardloc=HIGH,                                          x
               key=CALLERKEY,                                          x
               fprot=NO,                                               x
               svcdumprgn=YES,                                         x
               control=UNAUTH,                                         x
               usertkn=(r4),                                           x
               origin=(r5),                                            x
               dumppriority=(r6),                                      x
               plistver=MAX,                                           x
               mf=(E,w_64,COMPLETE)
         lg    r0,w_64iorigin
         stg   r0,w_64iunusedup
         lg    r0,w_64isegs
         aghi  r0,-1
         sllg  r0,r0,20
         alg   r0,w_64iorigin
         stg   r0,w_64ilimit
         stg   r0,w_64ipagedown
         lay   r0,0
         stg   r0,w_dumpindex
ipc1_dumps ds  0h
         lg    r0,w_dumpindex
         aghi  r0,+1
         stg   r0,w_dumpindex
         cvdy  r0,w_packwork
         lay   r15,w_packwork
         lay   r14,w_ddname
         unpk  4(4,r14),6(2,r15)
         lay   r14,w_ddname
         lay   r15,=c'DUMP0000'
         mvc   0(5,r14),0(r15)
         oiy   w_ddname+7,x'f0'
         stg   r14,w_ddn@
         jasl  r14,ddck0000
         ltr   r15,r15
         jlnz  ipc1_nodump1
         jasl  r14,attx0000
         jasl  r14,i64d0000
         jlu   ipc1_dumps
ipc1_nodump1 ds 0h
         lay   r15,=cl8'ACTIVE  '
         stg   r15,w_ddn@
         jasl  r14,ddck0000
         ltr   r15,r15
         jlnz  ipc19999
         jasl  r14,attx0000
         jasl  r14,i64d0000
         jlu   ipc19999
         ds    0fd
         sysstate archlvl=2,amode64=NO
m_ikjeftsr_plist call ,(0,0,0,0,0,0),mf=L
m_ikjeftsr_plist_len equ *-m_ikjeftsr_plist
         ds    0fd
m_attachx attachx ecb=0,                                               x
               ep=IKJEFTSR,                                            x
               svarea=YES,                                             x
               jstcb=NO,                                               x
               rsapf=NO,                                               x
               sm=PROB,                                                x
               SF=L
m_attachx_len equ *-m_attachx
         sysstate archlvl=2,amode64=YES
         ltorg
storage  dsect
w_dumpindex ds fd
w_packwork ds  fd
w_ddname ds    cl8
w_64isegs ds   fd
w_64iusertkn ds fd
w_64iorigin ds ad
w_64iunusedup ds ad
w_64ipagedown ds ad
w_64ilimit ds  ad
w_ecb    ds    f
w_tcb@   ds    a
         sysstate archlvl=2,amode64=NO
w_ikjeftsr_plist call ,(0,0,0,0,0,0),mf=L
w_ikjeftsr_plist_len equ *-w_ikjeftsr_plist
w_attachx attachx ecb=0,                                               x
               ep=IKJEFTSR,                                            x
               svarea=YES,                                             x
               jstcb=NO,                                               x
               rsapf=NO,                                               x
               sm=PROB,                                                x
               SF=L
w_attachx_len equ *-w_attachx
         sysstate archlvl=2,amode64=YES
w_jcogfsc1_ddn ds cl8
         org   ,
JCOGFS01 csect ,
attx0000 ds    0h                      performed attx
         stmg  r0,r15,attxsave         temp save-nonstandard
         lay   r14,w_ikjeftsr_plist
         lay   r15,m_ikjeftsr_plist
         mvc   0(w_ikjeftsr_plist_len,r14),0(r15)
*        oiy   w_ikjeftsr_flags+0,x'00' byte 1 is allways zeroes
         oiy   w_ikjeftsr_flags+1,x'01' unisolated=01 byte 2
         oiy   w_ikjeftsr_flags+2,x'01' dump
         oiy   w_ikjeftsr_flags+3,x'01' clist stack before and is run
         lay   r0,w_ikjeftsr_buffer
         lay   r1,l'w_ikjeftsr_buffer
         sty   r1,w_ikjeftsr_buffer_len
         lay   r14,m_ikjeftsr_buffer
         lay   r15,m_ikjeftsr_buffer_len
         mvcl  r0,r14
         lay   r0,c'@'
         lay   r2,w_ikjeftsr_buffer
         lay   r1,m_ikjeftsr_buffer_len(,r2)
         srst  r1,r2
         jcogfs_usrab ok=jll
         cliy  0(r1),c'@'
         jcogfs_usrab ok=jle
         lay   r15,=cl16'ACTIVE'
         mvc   0(16,r1),0(r15)
         lg    r14,w_ddn@
         clc   0(8,r14),0(r15)
         jle   attx_active
         lay   r15,=cl16'AAAA0000'
         mvc   0(16,r1),0(r15)
         mvc   0(8,r1),0(r14)
attx_active ds 0h
         lay   r0,0
         sty   r0,w_ecb
         lay   r2,w_ecb
         lay   r0,w_ikjeftsr_flags
         lay   r3,w_ikjeftsr_buffer
         lay   r4,w_ikjeftsr_buffer_len
         lay   r5,w_ikjeftsr_rc
         lay   r6,w_ikjeftsr_rs
         lay   r7,w_ikjeftsr_abendcode
         lay   r1,w_ikjeftsr_plist
         sysstate archlvl=2,amode64=NO
         llgt  r15,cvtptr
         llgt  r15,cvttvt-cvt(r15)
         llgf  r15,tsvtasf-tsvt(r15)
         sam31
*******  call  (15),(flags,cmdbuff,buflen,retcode,rsncode,abndcode),vl
         call  (15),((r0),(r3),(r4),(r5),(r6),(r7)),VL,mf=(E,(r1))
         sam64
         ltr   r15,r15
         jcogfs_usrab ok=jlz
**       lay   r14,w_attachx
**       lay   r15,m_attachx
**       mvc   0(w_attachx_len,r14),0(r15)
**       attachx ecb=(r2),
**             param=((r0),(r3),(r4),(r5),(r6),(r7)),
**             svarea=YES,
**             jstcb=NO,
**             rsapf=NO,
**             sm=PROB,
**             mf=(E,(r8)),
**             sf=(E,(r9))
**       ltr   r15,r15
**       jcogfs_usrab ok=jlz
**       sty   r1,w_tcb@
**       lay   r2,w_ecb
**       wait  ecb=(r2)
**       lay   r1,w_tcb@
**       detach (r1)
         sysstate archlvl=2,amode64=YES
**       lay   r5,w_modeprob
**       lay   r15,m_modeprob
**       mvc   0(l'w_modeprob,r5),0(r15)
**       modeset mf=(E,w_modeprob)
         mviy  w_line,c' '
         lay   r14,w_line
         mvc   1(l'w_line-1,r14),0(r14)
         mviy  w_line+6,c'+'
         mviy  w_line+1+4+3+9,c'+'
         lay   r15,w_prdtitle
         lay   r14,w_line+1+4+3+9+1+1
         mvc   0(l'w_prdtitle,r14),0(r15)
         lay   r15,=cl16'dump_title'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         lg    r1,w_outdcb@
         lay   r2,w_hdr
         jcogfs_put
         lay   r15,w_prddsnam
         lay   r14,w_line+1+4+3+9+1+1
         mvc   0(l'w_prddsnam,r14),0(r15)
         lay   r15,=cl16'dump_dsname'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         lg    r1,w_outdcb@
         lay   r2,w_hdr
         jcogfs_put
         lg    r5,w_64iorigin
psws_nextjgfi ds 0h
         alg   r5,=ad(jgfi_len)
         using jgfi_end,r5
         clg   r5,w_64iunusedup      formerly was not passed from gfsi1
         jlh   psws_endofpsws        so
         lay   r14,jgfi_id
         lay   r15,=c'jgfi'
         clc   0(l'jgfi_id,r14),0(r15) used controlblockid check
*****    jne   psws_endofpsws        to determine end,not required now
         jcogfs_usrab ok=jle
         jasl  r14,dump0000
         jlu   psws_nextjgfi
psws_endofpsws ds 0h
         drop  r5
attx9999 lmg   r0,r15,attxsave
         br    r14                     return
         ds    0fd
         ltorg
m_modesup modeset mode=SUP,mf=L
m_modesup_len equ *-m_modesup
m_modeprob modeset mode=PROB,mf=L
m_modeprob_len equ *-m_modeprob
m_ikjeftsr_buffer dc 0fd
         DC    CL80'JCOGFSC1 @@@@@@@@@@@@@@@@    '
*        dc    cl80'IPCS '
*        dc    cl80'SETDEF @@@@@@@@@@@@@@@@    NOCONFIRM '
*        dc    cl80'VERBX JCOGFSI1 '
*        dc    cl80'DROPDUMP '
*        dc    cl80'END '
m_ikjeftsr_buffer_len equ *-m_ikjeftsr_buffer
         ikjtsvt
storage  dsect
attxsave ds    16fd
w_ddn@   ds    ad
w_modesup modeset mode=SUP,mf=L
w_modesup_len equ *-w_modesup
w_modeprob modeset mode=PROB,mf=L
w_modeprob_len equ *-w_modeprob
w_ikjeftsr_flags ds f
w_ikjeftsr_buffer_len ds f
w_ikjeftsr_rc ds f
w_ikjeftsr_rs ds f
w_ikjeftsr_abendcode ds f
         ds    0fd
w_ikjeftsr_buffer ds xl(m_ikjeftsr_buffer_len)
JCOGFS01 csect ,
ddck0000 ds    0h
         stmg  r0,r15,ddcksave
         lg    r2,w_ddn@
         lay   r3,w_devarea
         devtype (r2),(r3)
ddck9999 lmg   r0,r14,ddcksave
         br    r14
         ds    0fd
         ltorg
*****    iefdismp
storage  dsect
ddcksave ds    16fd
         ds    0fd
w_devarea ds   xl256
         ds    0fd
JCOGFS01 csect ,
i64d0000 ds    0h
         stmg  r0,r15,i64dsave
         lg    r0,w_64iorigin
         stg   r0,w_ranglist_startad
         lg    r0,w_64isegs
         aghi  r0,-1
         sllg  r0,r0,20-12
         stg   r0,w_ranglist_pagesfd
         lay   r2,w_ranglist
         stg   r2,w_ranglist@
         lay   r2,w_ranglist@
         lay   r3,=f'1'
         iarv64 request=DISCARDDATA,                                   x
               ranglist=(r2),                                          x
               numrange=(r3),                                          x
               plistver=MAX,                                           x
               mf=(E,w_64,COMPLETE)
         ltr   r15,r15
         jcogfs_usrab ok=jlz
         lg    r0,w_64iorigin
         stg   r0,w_64iunusedup
         lg    r0,w_64isegs
         aghi  r0,-1
         sllg  r0,r0,20
         alg   r0,w_64iorigin
         stg   r0,w_64ilimit
         stg   r0,w_64ipagedown
i64d9999 lmg   r0,r15,i64dsave
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
i64dsave ds    16fd
w_ranglist@ ds ad
w_ranglist ds 0fd
w_ranglist_startad ds ad
w_ranglist_pagesfd ds fd
JCOGFS01 csect ,
xxxx0000 ds    0h                      performed xxxx
         stmg  r0,r15,xxxxsave         temp save-nonstandard
xxxx9999 lmg   r0,r15,xxxxsave
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
xxxxsave ds    16fd
JCOGFS01 csect ,
dump0000 ds    0h
         stmg  r0,r15,dumpsave
         using jgfi_end,r5
         macro
         jcogfs_dump_jgfi_where &label,&var
         cliy  jgfi_&var.where,0
         jle   dump_where_&var._exit
         lay   r15,=cl16'&label'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         mviy  w_line,c' '
         lay   r14,w_line
         mvc   1(l'w_line-1,r14),0(r14)
         lay   r0,0
         lay   r1,m_trot_hex
         lay   r2,w_line+1
         lay   r3,l'jgfi_&var.asid
         lay   r4,jgfi_&var.asid
         trot  r2,r4,b'0001'
         mviy  w_line+6,c'|'
         lay   r0,0
         lay   r1,m_trot_hex
         lay   r2,w_line+1+4+3
         lay   r3,l'jgfi_&var.@
         lay   r4,jgfi_&var.@
         trot  r2,r4,b'0001'
         mviy  w_line+1+4+3+9,c'|'
         lay   r2,w_line+1+4+3+9+2
         lay   r3,jgfi_&var.where
         mvc   0(l'jgfi_&var.where,r2),0(r3)
         lg    r1,w_outdcb@
         lay   r2,w_hdr
         jcogfs_put
dump_where_&var._exit ds 0h
         mend
         macro
         jcogfs_dump_jgfi_pages &label,&var
         ly    r0,jgfi_&var.l
         ltr   r0,r0
         jlz   dump_pages_&var._exit
         llgt  r0,jgfi_&var.@
         ltr   r0,r0
         jlz   dump_pages_&var._exit
         mviy  w_hdr,c' '
         lay   r14,w_hdr
         mvc   1(l'w_hdr-1,r14),0(r14)
         lay   r14,w_line
         mviy  w_line,c' '
         mvc   1(l'w_line-1,r14),0(r14)
         lay   r15,=cl26' asid |  address | hexdump'
         mvc   0(26,r14),0(r15)
         lay   r14,w_line+84
         lay   r15,=cl6'|text '
         mvc   0(6,r14),0(r15)
         mviy  w_line+117,c'|'
         lay   r15,=cl16' '
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         lg    r1,w_outdcb@
         lay   r2,w_hdr
         jcogfs_put
         lay   r15,=cl16'&label'
         lay   r14,w_hdr
         mvc   0(l'w_hdr,r14),0(r15)
         icmy  r0,b'0011',jgfi_&var.asid
         stcmy r0,b'0011',w_asidx
         llgt  r0,jgfi_&var.@
         nill  r0,x'f000'
         sty   r0,w_hexa
         ltg   r0,jgfi_&var.p
         stg   r0,w_data@
         jlz   dump_pages_&var._exit
         mviy  w_line,c' '
         lay   r14,w_line
         mvc   1(l'w_line-1,r14),0(r14)
         lay   r6,128
         lay   r7,0
dump_pages_&var.p ds 0h
         lg    r4,w_data@
         lay   r15,=xl32'00'
         clc   0(32,r4),0(r15)
         jlne  dump_pages_&var.p1
         lay   r7,1(,r7)
         tmy   workflg0,flg0_nozeroes
         jlo   dump_pages_&var.nozeroes
dump_pages_&var.p1 ds 0h
         lay   r0,0
         lay   r1,m_trot_hex
         lay   r2,w_line+1
         lay   r3,l'w_asidx
         lay   r4,w_asidx
         trot  r2,r4,b'0001'
         lay   r0,0
         lay   r1,m_trot_hex
         mviy  w_line+6,c'|'         aaaa |
         lay   r2,w_line+1+4+3
         lay   r3,l'w_hexa
         lay   r4,w_hexa
         trot  r2,r4,b'0001'
         lay   r0,0
         lay   r1,m_trot_hex
         mviy  w_line+17,c'|'        aaaa | xxxxxxxx
         lay   r2,w_line+1+4+3+8+3
         lay   r3,32
         lg    r4,w_data@
         trot  r2,r4,b'0001'
         mviy  w_line+84,c'|'
         lay   r1,m_trprt
         lay   r2,w_line+85
         lay   r3,32
         lg    r4,w_data@
         troo  r2,r4,b'0001'
         mviy  w_line+117,c'|'
         lg    r1,w_outdcb@
         lay   r2,w_hdr
         jcogfs_put
dump_pages_&var.nozeroes ds 0h
         ly    r1,w_hexa
         lay   r1,32(,r1)
         sty   r1,w_hexa
         lg    r1,w_data@
         lay   r1,32(,r1)
         stg   r1,w_data@
         aghi  r6,-1
         ltgr  r6,r6
         jlp   dump_pages_&var.p
         chi   r7,128
         jlne  dump_pages_&var._exit
         mviy  w_line,c' '
         lay   r14,w_line
         mvc   1(l'w_line-1,r14),0(r14)
         llgt  r0,jgfi_&var.@
         nill  r0,x'f000'
         sty   r0,w_hexa
         lay   r0,0
         lay   r1,m_trot_hex
         lay   r2,w_line+1
         lay   r3,l'w_asidx
         lay   r4,w_asidx
         trot  r2,r4,b'0001'
         lay   r0,0
         lay   r1,m_trot_hex
         mviy  w_line+6,c'|'         aaaa |
         lay   r2,w_line+1+4+3
         lay   r3,l'w_hexa
         lay   r4,w_hexa
         trot  r2,r4,b'0001'
         lay   r0,0
         lay   r1,m_trot_hex
         mviy  w_line+17,c'|'        aaaa | xxxxxxxx
         lay   r2,w_line+1+4+3+8+3
         lay   r15,=cl9'allzeroes'
         mvc   0(9,r2),0(r15)
         mviy  w_line+84,c'|'
         mviy  w_line+117,c'|'
         lg    r1,w_outdcb@
         lay   r2,w_hdr
         jcogfs_put
dump_pages_&var._exit ds 0h
         mend
         jcogfs_dump_jgfi_where psw_where,whogotpsw
         jcogfs_dump_jgfi_pages last_copyright,whogotpswback
         jcogfs_dump_jgfi_pages psw_getmain,whogotpsw
         jcogfs_dump_jgfi_where psw_where,whofreedpsw
         jcogfs_dump_jgfi_pages last_copyright,whofreedpswback
         jcogfs_dump_jgfi_pages psw_freemain,whofreedpsw
         jcogfs_dump_jgfi_where left_where,leftover
         jcogfs_dump_jgfi_pages leftover_page,leftover
         drop  r5
dump9999 lmg   r0,r15,dumpsave
         br    r14
         ds    0fd
         ltorg
m_trot_hex ds  0fd                     must be on doubleword bndry
         dc    c'000102030405060708090a0b0c0d0e0f'
         dc    c'101112131415161718191a1b1c1d1e1f'
         dc    c'202122232425262728292a2b2c2d2e2f'
         dc    c'303132333435363738393a3b3c3d3e3f'
         dc    c'404142434445464748494a4b4c4d4e4f'
         dc    c'505152535455565758595a5b5c5d5e5f'
         dc    c'606162636465666768696a6b6c6d6e6f'
         dc    c'707172737475767778797a7b7c7d7e7f'
         dc    c'808182838485868788898a8b8c8d8e8f'
         dc    c'909192939495969798999a9b9c9d9e9f'
         dc    c'a0a1a2a3a4a5a6a7a8a9aaabacadaeaf'
         dc    c'b0b1b2b3b4b5b6b7b8b9babbbcbdbebf'
         dc    c'c0c1c2c3c4c5c6c7c8c9cacbcccdcecf'
         dc    c'd0d1d2d3d4d5d6d7d8d9dadbdcdddedf'
         dc    c'e0e1e2e3e4e5e6e7e8e9eaebecedeeef'
         dc    c'f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff'
         ds    0fd
m_trprt  ds    xl256                   must be on doubleword bndry
         org   m_trprt
         dc    256c'.'
         org   m_trprt+c' '
         dc    c' '
         org   m_trprt+c'¢'
         dc    c'¢.<(+|&&'
         org   m_trprt+c'!'
         dc    c'!$*);¬-/'
         org   m_trprt+c'¦'
         dc    c'¦,%_>?'
         org   m_trprt+c'a'
         dc    c'abcdefghi'
         org   m_trprt+c'j'
         dc    c'jklmnopqr'
         org   m_trprt+c'~'
         dc    c'~stuvwxyz'
         org   m_trprt+c'{'
         dc    C'{ABCDEFGHI'
         ORG   m_trprt+C'}'
         dc    C'}JKLMNOPQR'
         org   m_trprt+c'\'
         dc    C'\'
         org   m_trprt+C'S'
         dc    C'STUVWXYZ'
         org   m_trprt+c'0'
         dc    c'0123456789'
         org   m_trprt+l'm_trprt
         ds    0fd
storage  dsect
dumpsave ds    16fd
w_asidx  ds    h
         ds    h
w_hexa   ds    a
w_data@  ds    ad
JCOGFS01 csect ,
ipc19999 ds    0h
exit0000 ds    0h
         jcogfs_close outdcb
         ly    r0,=a(dcbs_len)
         storage RELEASE,length=(r0),addr=(r5)
******** dc    x'0000'
         ltg   r0,w_64iusertkn
         jlnz exit0003
         ltg   r0,w_64iorigin
         jlz   exit0004
exit0003 ds    0h
         lay   r4,w_64iusertkn
         iarv64 request=DETACH,                                        x
               match=USERTOKEN,                                        x
               usertkn=(r4),                                           x
               cond=NO,                                                x
               owner=YES,                                              x
               plistver=MAX,                                           x
               mf=(E,w_64,COMPLETE)
exit0004 ltg   r0,w_64usertkn
         jlnz exit0005
         ltg   r0,w_64origin
         jlz   exit0006
exit0005 lay   r4,w_64usertkn
         iarv64 request=DETACH,                                        x
               match=USERTOKEN,                                        x
               usertkn=(r4),                                           x
               cond=NO,                                                x
               owner=YES,                                              x
               plistver=MAX,                                           x
               mf=(E,w_64,COMPLETE)
exit0006 ltg   r0,w_64stk_usertkn
         jlnz exit0007
         ltg   r0,w_64stk_origin
         jlz   exit0009
exit0007 lay   r4,w_64stk_usertkn
         iarv64 request=DETACH,                                        x
               match=USERTOKEN,                                        x
               usertkn=(R4),                                           x
               cond=NO,                                                x
               owner=YES,                                              x
               plistver=MAX,                                           x
               mf=(E,w_64,COMPLETE)
exit0009 ds    0h
exit0010 xr    r9,r9
         llgf  r9,comprc
         lay   r1,storage              our storage/savearea
         ly    r0,=a(storagel)
         storage RELEASE,length=(r0),addr=(r1) release ours
         lr    retcode,r9
         pr
         ltorg
storage  dsect
clonei2  ds    0fd
         drop  savereg
JCOGFS01 csect ,
         entry JCOGFSI1
JCOGFSI1 jlu   prologuei               branch around eyecatcher.
         dc    cl8'JCOGFS01'           module name.
         dc    cl8'&sysdate'           assemble date.
prologuei bakr  r14,0
         sam64
         larl  basereg,lasth
         algfi basereg,1
         using lasth+1,basereg
         ly    r0,=a(storagel)
         storage OBTAIN,length=(r0),bndry=PAGE,loc=(ANY,ANY)
         sty   savereg,saveareai-storage+4(,r1) addr of caller's save
         sty   r1,8(,savereg)          save address of my save area.
         lay   savereg,saveareai-storage(,r1) my savearea
         using saveareai,savereg
         mviy  storage_id+0,c'g'
         mviy  storage_id+1,c'f'
         mviy  storage_id+2,c's'
         mviy  storage_id+3,c'i'
         mviy  storage_id+4,c'1'
         mviy  saveareai+4,c'F'
         mviy  saveareai+5,c'6'
         mviy  saveareai+6,c'S'
         mviy  saveareai+7,c'A'
         sam31
         sysstate archlvl=2,amode64=NO
         lay   r2,=a(ieant_home_level)
         lay   r3,=cl16'JCOGFS01'
         lay   r4,nt_token
         lay   r14,w_calli
         lay   r15,m_calli
         mvc   0(w_call_leni,r14),(r15)
         lay   r6,nt_return
         lay   r7,w_calli
         llgt  r15,cvtptr
         llgt  r15,cvtcsrt-cvt(r15,0)
         llgt  r15,X'14'(r15,0)
         llgt  r15,X'08'(r15,0)
         call  (15),((r2),(r3),(r4),(r6)),mf=(E,(r7))
         ly    r15,nt_return
         ltr   r15,r15
         jcogfs_usrab ok=jlz
         ly    r4,nt_storage@
         sysstate archlvl=2,amode64=YES
         sam64
         lay   r1,storage              our storage/savearea
         drop  savereg                 drop ours
         ly    r0,=a(storagel)
         storage RELEASE,length=(r0),addr=(r1) release tempsave
         eregg savereg,savereg
         sty   savereg,saveareai-storage+4(,r4) addr of caller's save
         lay   r0,saveareai-storage(,r4) my savearea
         sty   r0,8(,savereg)          save address of my save area.
         lay   savereg,saveareai-storage(,r4) my savearea
         using saveareai,savereg
         eregg r1,r1
         stg   r1,w_abdpl@
         jlu   ntrt9999i
         ltorg
m_calli   call  ,(0,0,0,0),mf=L
m_call_leni equ *-m_calli
storage  dsect
w_abdpl@ ds    ad
         ds    0fd
w_calli   call  ,(0,0,0,0),mf=L
w_call_leni equ *-w_calli
JCOGFS01 csect ,
ntrt9999i ds   0h
auth0000i ds   0h                      get jscbauth nonstandard if req
         TESTAUTH FCTN=1,STATE=YES,RBLEVEL=1
         ltr   r15,r15
         jlz   auth9000i
         lay   r1,=cl4'AUTH'
***      svc   245
auth9000i ds   0h
         jlu   auth9999i
         ds    0fd
         ltorg
auth9999i ds   0h
proc0000i ds   0h
         sysstate archlvl=2,amode64=YES
         sam64
         jasl  r14,dmpi0000
*****    svc   199
         jasl  r14,trei0000
         jlu   proc9999i
         ltorg
jgfi     dsect
jgfistart equ  *
jgfi_whogotpswbackp ds ad
jgfi_whogotpswp ds ad
jgfi_whofreedpswbackp ds ad
jgfi_whofreedpswp ds ad
jgfi_leftoverp ds ad
jgfi_whogotpswbackz ds f
jgfi_whogotpswz ds f
jgfi_whofreedpswbackz ds f
jgfi_whofreedpswz ds f
jgfi_leftoverz ds f
jgfi_gfnode ds xl(gfnode_len)
jgfi_whogotpswwhere ds cl42
jgfi_whogotpswasid ds h
jgfi_whogotpsw@ ds a
jgfi_whogotpswl ds f
jgfi_whogotpswbackasid equ jgfi_whogotpswasid
jgfi_whogotpswback@ ds a
jgfi_whogotpswbackl ds f
jgfi_whofreedpswwhere ds cl42
jgfi_whofreedpswasid ds h
jgfi_whofreedpsw@ ds a
jgfi_whofreedpswl ds f
jgfi_whofreedpswbackasid equ jgfi_whofreedpswasid
jgfi_whofreedpswback@ ds a
jgfi_whofreedpswbackl ds f
jgfi_leftoverwhere ds cl42
jgfi_leftoverasid ds h
jgfi_leftover@ ds a
jgfi_leftoverl ds f
jgfi_id  ds    cl4
jgfipage equ   ((((*-jgfistart)+255)/256)*256)-(*-jgfistart)
         ds    (jgfipage)x
jgfi_len equ   *-jgfi
jgfi_end ds    0x
storage  dsect
JCOGFS01 csect ,
         jcogfs_tree trei,less
trei_nodal_entry ds 0h
cursor   using gfnode,r3
         lg    r4,w_64iorigin
trei_scan_psws ds 0h
         alg   r4,=ad(jgfi_len)
         clg   r4,w_64iunusedup
         using jgfi_end,r4
         jlnh  trei_notalready
         llgt  r0,w_common
         cly   r0,jgfi_whogotpsw@
         jlh   trei_use_asid
         llgt  r0,w_commone
         cly   r0,jgfi_whogotpsw@
         jlnl  trei_not_asid
trei_use_asid  ds 0h
         lay   r0,0
         icmy  r0,b'0011',cursor.gfnwhogotasid
         clmy  r0,b'0011',jgfi_whogotpswasid
         jlne  trei_notalready
trei_not_asid  ds 0h
         llgt  r0,cursor.gfnwhogotpsw
         cly   r0,jgfi_whogotpsw@
         jle   trei_checkfree
         nill  r0,x'f000'
         cly   r0,jgfi_whogotpsw@
         jlne  trei_notalready
trei_checkfree ds 0h
         llgt  r0,w_common
         cly   r0,jgfi_whogotpsw@
         jlh   trei_use_asid1
         llgt  r0,w_commone
         cly   r0,jgfi_whogotpsw@
         jlnl  trei_not_asid1
trei_use_asid1 ds 0h
         lay   r0,0
         icmy  r0,b'0011',cursor.gfnwhofreedasid
         clmy  r0,b'0011',jgfi_whofreedpswasid
         jlne  trei_notalready
trei_not_asid1 ds 0h
         llgt  r0,cursor.gfnwhofreedpsw
         cly   r0,jgfi_whofreedpsw@
         jle   trei_scan_psws
         nill  r0,x'f000'
         cly   r0,jgfi_whofreedpsw@
         jle   trei_scan_psws
trei_notalready ds 0h
         lg    r4,w_64iunusedup
         alg   r4,=ad(jgfi_len)
         clg   r4,w_64ipagedown
         jcogfs_usrab ok=jlnh
         stg   r4,w_64iunusedup
         lay   r0,jgfistart
         lg    r1,=ad(jgfi_len)
         xgr   r14,r14
         xgr   r15,r15
         mvcl  r0,r14
         mviy  jgfi_id+0,c'j'
         mviy  jgfi_id+1,c'g'
         mviy  jgfi_id+2,c'f'
         mviy  jgfi_id+3,c'i'
         lay   r0,cursor.gfnode
         lay   r1,gfnode_len
         lay   r14,jgfi_gfnode
         lgr   r15,r1
         mvcl  r14,r0
         llgt  r0,cursor.gfnwhogotpsw
         ltgr  r0,r0
         jlz   trei_nowhogot
         sty   r0,jgfi_whogotpsw@
         sty   r0,w_address
         lhy   r0,cursor.gfnwhogotasid
         sthy  r0,jgfi_whogotpswasid
         sthy  r0,w_asid
         stg   r4,w_jgfi@
         jasl  r14,pagi0000
         cliy  w_whereONMO,0
         jle   trei_nowhogotwherepagi
         lay   r14,jgfi_whogotpswwhere
         lay   r15,w_whereONMO
         mvc   0(l'jgfi_whogotpswwhere,r14),0(r15)
trei_nowhogotwherepagi ds 0h
         llgh  r1,w_length
         ltgr  r15,r1
         jlz   trei_nowhogot
         sty   r15,jgfi_whogotpswl
         lay   r0,jgfi_whogotpswp
         jasl  r14,jpag0000
         lay   r14,o_where
         lay   r15,w_where
         mvc   0(l'o_where,r14),0(r15)
         jasl  r14,back0000
         llgt  r0,w_backpage@
         ltgr  r0,r0
         jlz   trei_nowhogot
         lay   r0,w_backpage
         lay   r1,4096
         sty   r1,jgfi_whogotpswbackl
         lay   r0,jgfi_whogotpswbackp
         jasl  r14,jpag0000
         llgt  r15,w_backpage@
         sty   r15,jgfi_whogotpswback@
trei_nowhogot ds 0h
         llgt  r0,cursor.gfnwhofreedpsw
         ltgr  r0,r0
         jlz   trei_nowhofreed
         sty   r0,jgfi_whofreedpsw@
         sty   r0,w_address
         lhy   r0,cursor.gfnwhofreedasid
         sthy  r0,jgfi_whofreedpswasid
         sthy  r0,w_asid
         stg   r4,w_jgfi@
         jasl  r14,pagi0000
         cliy  w_whereONMO,0
         jle   trei_nowhofreedwherepagi
         lay   r14,jgfi_whofreedpswwhere
         lay   r15,w_whereONMO
         mvc   0(l'jgfi_whofreedpswwhere,r14),0(r15)
trei_nowhofreedwherepagi ds 0h
         llgh  r1,w_length
         ltgr  r15,r1
         jlz   trei_nowhofreed
         sty   r15,jgfi_whofreedpswl
         lay   r0,jgfi_whofreedpswp
         jasl  r14,jpag0000
         lay   r14,o_where
         lay   r15,w_where
         mvc   0(l'o_where,r14),0(r15)
         jasl  r14,back0000
         llgt  r0,w_backpage@
         ltgr  r0,r0
         jlz   trei_nowhofreed
         lay   r1,4096
         sty   r1,jgfi_whofreedpswbackl
         lay   r0,jgfi_whofreedpswbackp
         jasl  r14,jpag0000
         llgt  r15,w_backpage@
         sty   r15,jgfi_whofreedpswback@
trei_nowhofreed ds 0h
         llgt  r0,cursor.gfnaddrs
         ltgr  r0,r0
         jcogfs_usrab ok=jlnz
         sty   r0,jgfi_leftover@
         sty   r0,w_address
         lhy   r0,cursor.gfnasids
******   svc   199
         sthy  r0,jgfi_leftoverasid
         sthy  r0,w_asid
         stg   r4,w_jgfi@
         jasl  r14,pagi0000
         cliy  w_whereONMO,0
         jle   trei_noleftoverwherepagi
         lay   r14,jgfi_leftoverwhere
         lay   r15,w_whereONMO
         mvc   0(l'jgfi_leftoverwhere,r14),0(r15)
trei_noleftoverwherepagi ds 0h
         llgh  r1,w_length
         ltgr  r15,r1
         jlz   trei_noleftover
         sty   r15,jgfi_leftoverl
         lay   r0,jgfi_leftoverp
         jasl  r14,jpag0000
         lay   r14,o_where
         lay   r15,w_where
         mvc   0(l'o_where,r14),0(r15)
trei_noleftover ds 0h
         drop  cursor
         drop  r4
         lay   r4,0
         jlu   trei_nodal_exit
         ltorg
JCOGFS01 csect ,
pagi0000 ds 0h
         stmg  r0,r15,pagisave
         mviy  w_whereONMO,0
*******  svc   199
         ly    r15,w_checksum
         sty   r15,o_checksum
         lay   r15,0
         sty   r15,w_checksum
         llgt  r0,w_address
         nill  r0,x'f000'
         lg    r4,w_64iorigin
pagi0100 alg   r4,=ad(jgfi_len)
         clg   r4,w_64iunusedup
         using jgfi_end,r4
         jlh   pagi0900
         cg    r4,w_jgfi@
         jle   pagi0100
         llgt  r0,w_address
         nill  r0,x'f000'
         cliy  jgfi_leftoverwhere,0
         jle   pagi_notleftover
         llgt  r1,jgfi_leftover@
         nill  r1,x'f000'
         cgr   r0,r1
         jlne  pagi_notleftover
         cly   r0,w_common
         jll   pagi_ckleftoverasid
         cly   r0,w_commone
         jll   pagi8999
pagi_ckleftoverasid ds 0h
         icmy  r1,b'0011',jgfi_leftoverasid
         clmy  r1,b'0011',w_asid
         jle   pagi8999
pagi_notleftover ds 0h
         cliy  jgfi_whogotpswwhere,0
         jle   pagi_notwhogotpsw
         llgt  r1,jgfi_whogotpsw@
         nill  r1,x'f000'
         cgr   r0,r1
         jlne  pagi_notwhogotpsw
         cly   r0,w_common
         jll   pagi_ckwhogotpswasid
         cly   r0,w_commone
         jll   pagi8999
pagi_ckwhogotpswasid ds 0h
         icmy  r1,b'0011',jgfi_whogotpswasid
         clmy  r1,b'0011',w_asid
         jle   pagi8999
pagi_notwhogotpsw ds 0h
         cliy  jgfi_whofreedpswwhere,0
         jle   pagi_notwhofreedpsw
         llgt  r1,jgfi_whofreedpsw@
         nill  r1,x'f000'
         cgr   r0,r1
         jlne  pagi_notwhofreedpsw
         cly   r0,w_common
         jll   pagi_ckwhofreedpswasid
         cly   r0,w_commone
         jll   pagi8999
pagi_ckwhofreedpswasid ds 0h
         icmy  r1,b'0011',jgfi_whofreedpswasid
         clmy  r1,b'0011',w_asid
         jle   pagi8999
pagi_notwhofreedpsw ds 0h
         jlu   pagi0100
         drop  r4
pagi0900 lmg   r0,r15,pagisave
         lg    r2,w_abdpl@
         using  abdpl,r2
         sysstate archlvl=2,amode64=NO
         sam31
         mviy  adplprdp,adplvirt
         lay   r0,0
         sty   r0,w_ipcsdata@
         ly    r1,w_address
         nill  r1,x'f000'
         sty   r1,adplpaad
         lay   r0,x'1000'
         sthy  r0,w_length
         lhy   r0,w_length
         sthy  r0,adpldlen
         icmy  r0,b'0011',w_asid
         stcmy r0,b'0011',adplasid
         lay   r3,=a(adplsacc)
         lay   r4,adplpacc
         lay   r5,w_call_adplserv
         lay   r15,m_call_adplserv
         mvc   0(w_call_adplserv_len,r5),(r15)
         ly    r15,adplserv
         call  (15),((r2),(r3),(r4)),mf=(E,(r5))
****     svc   199                     xdchook
         ltr   r5,r15
         jlnz  pagi_not_in_dumped
         llgt  r0,adplpart
         lay   r1,4096
         lay   r15,0
pagi_cksm cksm r15,r0
         jlo   pagi_cksm
         sty   r15,w_checksum
         llgt  r0,adplpart
         lay   r1,4096
         lay   r14,w_ipcsdata
         lay   r15,4096
         mvcl  r14,r0
         lay   r0,w_ipcsdata
         sty   r0,w_ipcsdata@
pagi_do_where_anyway ds 0h
         lay   r14,w_where
         lay   r15,m_where
         mvc   0(l'w_where,r14),0(r15)            move model
         lay   r14,w_whereMODN
         lay   r15,=c'JCOGFS01'
         mvc   0(8,r14),0(r15)            move our name
         mviy  w_whereast+0,c'C'  virtual storage
         mviy  w_whereast+1,c'V'  virtual storage
         lhy   r0,w_asid
         sthy  r0,w_whereas2  asid
         llgt  r0,w_address
*        cy    r0,=a(x'010971EA')      !!
*        jlne  aroundw                 !!
*        svc   199                     !!
*roundw  ds    0h                      !!
         stg   r0,w_wherelad              address for where service
*        svc   199                   !!!!!!!!!!!!!
**** mviy  w_wherepfl1,w_wherePUT+w_whereRETN+w_whereDTYF restricts
         aif   ('&sysparm' eq 'JCO').wheremess
         mviy  w_wherepfl1,0           nomessage
         ago   .nowheremess
.wheremess anop
         mviy  w_wherepfl1,w_wherePUT message
.nowheremess anop
         lay   r3,=a(adplswhs)         where service code
         lay   r4,w_where              blsrpwhs macro mapped
         lay   r5,w_call_adplserv
         lay   r15,m_call_adplserv
         mvc   0(w_call_adplserv_len,r5),(r15)
         ly    r15,adplserv
         call  (15),((r2),(r3),(r4)),mf=(E,(r5))
*        org   *-2                     xdchook !!!!!!!!!!
*        svc   199                     xdchook !!!!!!!!!!
*        balr  14,15                   xdchook !!!!!!!!!!
*        svc   199                     xdchook !!!!!!!!!!
         ltr   r5,r15
         jlz   pagi9000
         jlu   pagi9000
pagi_not_in_dumped ds 0h
         lay   r14,w_whereONMO         move nonzero explain to where
         lay   r15,=cl42'<not in dump/ipcs>'
         mvc   0(l'w_whereONMO,r14),0(r15)
         lay   r0,0
         sthy  r0,w_length
         jlu   pagi_do_where_anyway
pagi8999 lay   r0,0
         sthy  r0,w_length
******   svc   199
         sysstate archlvl=2,amode64=YES
pagi9000 sam64
         lmg   r0,r15,pagisave
         br    r14
         drop  r2
         ds    0fd
         ltorg
m_call_adplserv call ,(0,0,0),mf=L
m_call_adplserv_len equ *-m_call_adplserv
m_where  blsrpwhs dsect=NO,abits=64
         blsabdpl dsect=YES,                                           x
               amdexit=YES,                                            x
               amdosel=NO,                                             x
               amdpacc=NO,                                             x
               amdpect=NO,                                             x
               amdpfmt=NO,                                             x
               amdpfxt=NO,                                             x
               amdpsel=NO
storage  dsect
pagisave ds    16fd
w_jgfi@  ds    ad
w_asid   ds    h
w_length ds    h
w_address ds   a
w_ipcsdata@ ds a
w_checksum ds  f
o_checksum ds  f
w_call_adplserv call ,(0,0,0),mf=L
w_call_adplserv_len equ *-w_call_adplserv
w_where  blsrpwhs dsect=NO,abits=64
o_where  blsrpwhs dsect=NO,abits=64
         blsabdpl dsect=NO,                                            x
               amdexit=NO,                                             x
               amdosel=YES,                                            x
               amdpacc=YES,                                            x
               amdpect=YES,                                            x
               amdpfmt=YES,                                            x
               amdpfxt=YES,                                            x
               amdpsel=YES
JCOGFS01 csect ,
back0000 ds 0h
         stmg  r0,r15,backsave
         la    r0,0
         sty   r0,w_backpage@
         llgh  r0,w_length
         ltgr  r0,r0
         jlz   back9999
         lay   r14,w_backz2
         xc    0(l'w_backz2,r14),0(r14)
         lay   r14,w_backz1
         llgt  r15,w_ipcsdata@
         mvc   0(l'w_backz1,r14),0(r15)
back_more ly   r0,w_address
         sy    r0,=f'4096'
         jll   back9999
         sty   r0,w_address
         jasl  r14,pagi0000
         llgh  r1,w_length
         ltgr  r15,r1
         jlz   back9999
         llgf  r0,w_checksum
         ltgr  r0,r0
         jlz   back9999
         cy    r0,o_checksum
         jle   back9999
         lay   r14,w_backz1
         lay   r15,w_backpage
         mvc   0(l'w_backz1,r14),0(r15)
         lay   r0,w_backpage
         llgh  r1,w_length
         llgt  r14,w_ipcsdata@
         lgr   r15,r1
         mvcl  r0,r14
         lay   r0,0
         lay   r2,w_backscan-1
         lay   r3,w_backscan-w_backend-1-4
back_trtre lay r1,m_backchar
         lay   r4,0
*****    svc   199
back_trtre3 trtre r2,r4,0
         jlz   back_end                cc=0 8
         jlm   back_hitchar            cc=1 4
         jlp   back_hitchar            cc=2 2
         jlo   back_trtre3             cc=3 1
         jcogfs_usrab ok=jlnop
back_end ds 0h
back_hitchar ds 0h
         ltgr  r4,r4
         jlz   back_nohit
         lay   r14,0(,r2)
         lay   r15,=c'PATCH'
         clc   0(5,r14),0(r15)
         jle   back_found
         lay   r15,=c'patch'
         clc   0(5,r14),0(r15)
         jle   back_found
         lay   r15,=c'ZAP'
         clc   0(3,r14),0(r15)
         jle   back_found
         lay   r15,=c'zap'
         clc   0(3,r14),0(r15)
         jle   back_found
         lay   r15,=c'copyright'
         clc   0(9,r14),0(r15)
         jle   back_found
         lay   r15,=c'Copyright'
         clc   0(9,r14),0(r15)
         jle   back_found
         lay   r15,=c'CopyRight'
         clc   0(9,r14),0(r15)
         jle   back_found
         lay   r15,=c'COPYRIGHT'
         clc   0(9,r14),0(r15)
         jle   back_found
         lay   r14,-1(,r2)
         lay   r15,=c'(C)'
         clc   0(3,r14),0(r15)
         jle   back_found
         lay   r15,=c'(c)'
         clc   0(3,r14),0(r15)
         jle   back_found
         lay   r2,-1(,r2)
         lay   r3,-1(,r3)
back_nohit ds  0h
         ltgr  r3,r3
         jlp   back_trtre
         lay   r14,o_whereOSAN
         lay   r15,w_whereOSAN
         clc   0(l'o_whereOSAN,r14),0(r15)
         jlne  back_notfound
         mvc   0(l'o_whereOSAN,r14),0(r15)
         jlne  back9998
         jlu   back_more
back9998 ds    0h
back_found ds 0h
         ly    r15,w_address
         nill  r15,x'f000'
         sty   r15,w_backpage@
back_notfound ds 0h
back9999 lmg   r0,r15,backsave
         br    r14
         ds    0fd
         ltorg
         ds    0fd
m_backchar dc  xl256'00'               must be a double word boundary
         org   m_backchar+c'C'
         dc    c'C'
         org   m_backchar+c'c'
         dc    c'c'
         org   m_backchar+c'P'
         dc    c'P'
         org   m_backchar+c'p'
         dc    c'p'
         org   m_backchar+c'Z'
         dc    c'Z'
         org   m_backchar+c'z'
         dc    c'z'
         org   ,
storage  dsect
backsave ds    16fd
w_backpage@ ds a
w_backz2  ds   xl256
w_backend ds   0c
w_backpage ds  4096c
w_backz1  ds   xl256
w_backbeg ds   0c
         org   w_backbeg-16
w_backscan ds  0c
         org   ,
JCOGFS01 csect ,
jpag0000 ds    0h                      performed jpag
         stmg  r0,r15,jpagsave
*****    svc   199
         ltgr  r1,r0
         jlz   jpag9999
         llgt  r14,w_ipcsdata@
         ltgr  r14,r14
         jlz   jpag9999
         lg    r2,w_64ipagedown
         lay   r3,4096
jpag0100 slgr  r2,r3
         clg   r2,w_64iunusedup
         jcogfs_usrab ok=jlnl
         stg   r2,w_64ipagedown
         lgr   r15,r3
         stg   r2,0(,r1)
         mvcl  r2,r14
jpag9999 lmg   r0,r15,jpagsave
         br    r14                     return
         ds    0fd
         ltorg
storage  dsect
jpagsave ds    16fd
JCOGFS01 csect ,
*   (0)                               PRDINPUT OF BLSRPRD
*   (168)       SIGNED           2    PRDSDMPO     OFFSET OF COMMON SEC
*   (16A)       SIGNED           2    PRDSDMPL     LENGTH OF COMMON SEC
*   (0 )        STRUCTURE             PRDSDSM
*   (298)       SIGNED           4    PRDCSA       START OF COMMON
*   (29C)       SIGNED           4    PRDEPVT      END OF COMMON
*   (2A0)       CHARACTER        8    PRDHJOBN     PRDHASID JOBNAME
*   (2A8)       CHARACTER        8    PRDHVSS      START OF HIGH V SHAR
*   (2B0)       CHARACTER        8    PRDHVHP      START OF HIGH V PRIV
*   (2B8)       CHARACTER        8    PRDHVCO      HIGH VIRTUAL COMMON
dmpi0000 ds    0h
         stmg  r0,r15,dmpisave
         lay   r15,=cl44'<dump header inaccessible>'
         lay   r14,w_prddsnam
         mvc   0(l'w_prddsnam,r14),0(r15)
         lay   r0,0
         sty   r0,w_common
         sty   r0,w_commone
         lg    r2,w_abdpl@
         using  abdpl,r2
         sysstate archlvl=2,amode64=NO
         sam31
         mviy  adplprdp,adplhdr      look at dump header
         lay   r0,0
         sty   r0,adplpaad
         lay   r0,prdinputlength     header max length
         sthy  r0,adpldlen
         lay   r3,=a(adplsacc)
         lay   r4,adplpacc
         lay   r5,w_call_adplserv
         lay   r15,m_call_adplserv
         mvc   0(w_call_adplserv_len,r5),(r15)
         ly    r15,adplserv
         call  (15),((r2),(r3),(r4)),mf=(E,(r5))
         ltr   r5,r15
         jlnz  dmpi9999
         llgt  r4,adplpart
         using prdinput,r4
         lay   r15,PRDTITLE
         lay   r14,w_prdtitle
         mvc   0(l'w_prdtitle,r14),0(r15)
         lay   r0,0
         icmy  r0,b'0011',prdsdmpl
         ltr   r0,r0
         jlz   dmpi9999
         lay   r0,0
         icmy  r0,b'0011',prdsdmpo
         alr   r4,r0
         drop  r4
         using PRDSDSM,r4
         llgt  r0,prdcsa
         ltr   r0,r0
         jlz   dmpi9999
         llgt  r0,prdepvt
         ltr   r0,r0
         jlz   dmpi9999
         sty   r0,w_commone
         llgt  r0,prdcsa
         sty   r0,w_common
         lay   r15,PRDDSNAM
         lay   r14,w_prddsnam
         mvc   0(l'w_prddsnam,r14),0(r15)
*        svc   199                     xdchook
         drop  r4
         sysstate archlvl=2,amode64=YES
dmpi9999 sam64
         lmg   r0,r15,dmpisave
         br    r14
         ds    0fd
         ltorg
         blsrprd dsect=YES
storage  dsect
dmpisave ds    16fd
w_common ds    a
w_commone ds   a
w_prdtitle ds cl100
w_prddsnam ds cl44
JCOGFS01 csect ,
proc9999i ds   0h
exit0000i xgr  r9,r9
         llgf  r9,comprc
         lay   retcode,0
         eregg r0,r0
         eregg r1,r1
         pr
JCOGFS01 csect ,
lasth    ds    0h
storage  dsect ,
         ds    0fd
comprc   ds    f
         ds    0fd
saveareai dc   36f'-1'                 register save area.
savearea dc    36f'-1'                 register save area.
storager equ   ((((*-storageb)+8191)/8192)*8192)-(*-storageb)
         ds    (storager)x
storagel equ   *-storageb
         ieantasm
         print off
         dcbd   devd=DA,dsorg=PS
         ihadcbe
         cvt   dsect=YES,list=NO
         ihapsa dsect=YES,list=NO
         ihaascb dsect=YES,list=NO
         iefjesct
         iefjscvt
         end   JCOGFS01
