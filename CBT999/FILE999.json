{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013743000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE999.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE999.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x08\\x0b'", "DS1TRBAL": "b'hd'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xd0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xd0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\n\\xbd\\x00\\x0b\\n\\xbe\\x00\\x04\\x00\\t'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x00\\x06\\x01 \\x19o\\x01 \\x19o\"W\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "2020-07-14T00:00:00", "modifydate": "2020-07-14T22:57:06", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-500"}, "text": "REGULAR CBT TAPE - VERSION 500    FILE:  999\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT500.FILE999\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 12 MEMBERS COUNTED; CUMULATIVE SIZE IS 3,928 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   07/14/20    22:57:06    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$COPYRTE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01 \\x16\\x0f\\x01 \\x16\\x0f\\x08\\x18\\x00\\x16\\x00\\x16\\x00\\x00\\xe9\\xc3\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-06-08T00:00:00", "modifydate": "2020-06-08T08:18:34", "lines": 22, "newlines": 22, "modlines": 0, "user": "ZCC"}, "text": "REDISTRIBUTION AND USE IN SOURCE AND BINARY FORMS, WITH OR WITHOUT\nMODIFICATION, ARE PERMITTED PROVIDED THAT THE FOLLOWING CONDITIONS\nARE MET:\n\n1. REDISTRIBUTIONS OF SOURCE CODE MUST RETAIN THE ABOVE COPYRIGHT\n   NOTICE, THIS LIST OF CONDITIONS AND THE FOLLOWING DISCLAIMER.\n2. REDISTRIBUTIONS IN BINARY FORM MUST REPRODUCE THE ABOVE COPYRIGHT\n   NOTICE, THIS LIST OF CONDITIONS AND THE FOLLOWING DISCLAIMER IN THE\n   DOCUMENTATION AND/OR OTHER MATERIALS PROVIDED WITH THE DISTRIBUTION.\n\nTHIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ''AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\nUSE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#NOTE": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01 \\x16O\\x01 \\x16O\\x14(\\x000\\x000\\x00\\x00\\xe9\\xc3\\xc3@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-06-12T00:00:00", "modifydate": "2020-06-12T14:28:13", "lines": 48, "newlines": 48, "modlines": 0, "user": "ZCC"}, "text": "\nThe LOAD library contain an additional program called BR14PLUS. Consider\nthis a hidden pineapple as it is not really used in zccCICS.\n\nIt is basically an enhanced IEFBR14 program that allows you to set a\nreturn code based on the value you pass to the program in the job PARM.\n\nBelow is a usage example. You pass a parm in the JCL and\nthe specific step will end with that return code. If no parameter is\npass the step will simply end with RC 0.\n\n//DOTRN  EXEC PGM=BR14PLUS,PARM=1.\n\nOr you can set it with a symbolic overide:\n\n//DOTRN  EXEC PGM=BR14PLUS,PARM=&DOXXX.\n\nThis little program is very useful if you have procedures with many\nsteps and from the invoking JCL you want to control if a certain step\n will be execured.\n\nHere is a procedure example. The setting by default will not execute\nSTP1.\n\n//HAPPY PROC ,\n//   DOSTP1=0                0 = DO NOT DO STP1 / 1 = DO IT\n//* ......\n//DOSTP1  EXEC PGM=BR14PLUS,PARM=&DOSTP1.\n//STEPLIB  DD  DISP=SHR,DSN=ZCCCICS.LOAD\n//*\n//         IF DOSTP1.RC = 01 THEN\n//STP1     EXEC PGM=IEFBR14\n//         ENDIF\n\nNow in the invoking JCL you can invoke this proc like this to set\nthe switch to make this step execute.\n\n//STEP0000 EXEC HAPPY,\n//         DOSTP1=1            /* 0 = NO BIND; 1 = DO BIND */\n\n\nI use this program to reduce the number of PROCs I have. Instead of\nhaving many procedures with lots of combinations of different steps I\nwill have one proc and with switches I can force certain steps in the\nprocedure to be executed. This program with nested JCL IF logic provide\n great fexibility in how your procedures executes.\n\nEnjoy your pineapples.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#README": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01 \\x16O\\x01 \\x16O\\x14(\\x00\\x10\\x00\\x10\\x00\\x05\\xe9\\xc3\\xc3@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-06-12T00:00:00", "modifydate": "2020-06-12T14:28:13", "lines": 16, "newlines": 16, "modlines": 5, "user": "ZCC"}, "text": "zccCICS - Batch CICS Resource Management\n========================================\n\nzccCICS utilize CPSM to enable management of CICS resources from a batch\njob.\n\nThis utility require a CMAS running CICS Transaction Server 5.3. If you\nare running with a older CMAS contact me and I will see what I can do\nto help.\n\nThe output from this utility will present the reason and response codes\n  when the CPSM API is used. These codes are documented in the IBM CPSM\nCICSPlex SM Application Programming Reference manual. I will not\nreproduce this documentation and if you have non-zero reason codes you\nshould reference this manual for explanations of the received error.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#RELEASE": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x05\\x00B\\x01 \\x19o\\x01 \\x19o!'\\x00\\x14\\x00\\x14\\x00\\x10\\xe9\\xc3\\xc3@@@@@@@\"", "ispf": {"version": "01.05", "flags": 0, "createdate": "2020-07-14T00:00:00", "modifydate": "2020-07-14T21:27:42", "lines": 20, "newlines": 20, "modlines": 16, "user": "ZCC"}, "text": "zccCICS - Release notes\n=======================\n20.07A > New function - Display URIMAP active definitions\n         Keyword added URI\n       > New function - Display TCPIP Service information\n         Keyword added TCP\n20.07  > New function - Support for Pipeline processing\n         Keywords supported for Pipeline processing :\n         SCAN, ENABLE, DISABLE\n20.06A > New function - BAS resource group processing\n         FGRP - process all files in a BAS group\n         TGRP - process all transactions in a BAS group\n         PGRP - process all programs in a BAS group\n20.06  > ENABLE/DISABLE transactions\n       > Multiple corrections to produce consistent messages\n         and return codes\n20.05  > ENABLE/DISABLE/OPEN/CLOSE files\n       > ENABLE/DISABLE/NEWCOPY/PHASEIN programs\n       > Set CONTEXT/SCOPE in job PARM\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#USAGE": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07\\x00B\\x01 \\x19o\\x01 \\x19o!'\\x00\\xfe\\x00\\xfe\\x00\\x92\\xe9\\xc3\\xc3@@@@@@@\"", "ispf": {"version": "01.07", "flags": 0, "createdate": "2020-07-14T00:00:00", "modifydate": "2020-07-14T21:27:42", "lines": 254, "newlines": 254, "modlines": 146, "user": "ZCC"}, "text": "zccCICS - Usage Guide\n=====================\n\nIntroduction\n============\nzccCICS utilize CPSM to determine where resources exist in your CICSPlex\nand then process the SYSIN instructions to alter the selected resource\nstate based on the provided commands. zccCICS require a CONTEXT and\nSCOPE defined to determine the CICS environment the commands should be\ndirected too.\n\nCONTEXT and SCOPE can be defined in the JOB PARM statement or in the\nSYSIN. Use the PARM option to set defaults when using a company wide\nprocedure to simplify usage and potentially limit mistakes when pointing\nthe SYSIN to incorrect environments.\n\nFrom a CPSM perspective CONTEXT is used to select a CICSPLEX where these\ncommands should be directed too, and SCOPE is used to select a group\nof CICS regions as defined by the CICS systems programmers. SCOPE could\nalso be just one CICS region instead of a group of regions.\n\nThe STEPLIB must include the follwing CICSPlex SM datasets in\n   addition to the load library containing zccCICS.\n   hlq.SEYUAUTH\n   hlq.SEYULOAD\n\nzccCICS will end with the following codes:\n\nReturn Code 0\n    No errors or bad return codes experienced\n\nReturn Code 4\n    No errors received, but some resources in CICS did have\n    a non zero CICSPlex return code. Review SYSPRINT for the\n    reason for the non-zero code.\n\nReturn Code 8\n    A error was received that needs to be fixed.\n    Review SYSPRINT for the reason for the non-zero code.\n\n\nJOB PARM Syntax\n===============\nJOB PARM Syntax notation:\nPARM='parm=value\u00dd,parm=value\u00a8'\n     \u00dd\u00a8 is optional settings\n     Maximum 100 characters allowed\n\n\n\nParameters\n----------\n\nCONTEXT=\n   Set the required CICSPlex CONTEXT for commands\n\nSCOPE=\n   Set the required CICSPlex SCOPE for commands\n\nTRACE=\n   Allowed trace levels are 0, 1, and 2\n   Only use this option when instructed to do so.\n\n\n\nSYSIN Syntax\n============\n\nSYSIN Syntax notation:\nresource_type,resource_name,status\u00dd,status...\u00a8\n   -or-\nCONTEXT,context_value\n   -or-\nSCOPE,scope_value\n\n    > \u00dd\u00a8 is optional settings\n    > resource_name\n      The resource name can be a fully qualified name or a wildcard\n      value using an *.\n      Example DFH*\n    > status\n      Can be any of the supported values associated with the defined\n      resource\n\n      Status values can be defined using the full name or an abbreviated\n      value. If the respective resource types the status values will be\n      documented with UPPERCASE and lowercase values. The UPPERCASE\n      value is the minimum required data to describe the respective\n      status command.\n\nCONTEXT\n-------\nDefine the CPSM CONTEXT value.\n\nSCOPE\n-----\nDefine the CPSM SCOPE value. CONTEXT need to be set before SCOPE is\ndefined.\n\nFILE - resource type\n--------------------\nValid status options for FILE:\n    OPEN\n    CLOSE\n    ENABLE\n    DISABLE\n\nExample:\nFILE,ABCD,CLO,DIS\n    Close and disable file ABCD in the CONTEXT / SCOPE combination\n\nFILE,AB*,ENA\n    Enable all files starting with AB* in the CONTEXT / SCOPE\n    combination\n\nFGRP - FILE Group Processing\n----------------------------\nThe FGRP command is used to get a list of files to process from\na BAS (Business Application Services) resource group.\n\nBefore this funtion is invoked ensure the CONTEXT and SCOPE\nis set. CONTEXT is used to identify the CICSPLEX where the resource\ngroup exist, and CONTEXT and SCOPE will be used to determine in which\nCICS regions the files need to be processed.\n\nThe processing is simular to the FILE command and all the FILE\noptions are supported in the group processing for files\n\nExample:\nFGRP,GRP1,OPE,ENA\n\n    This command extract the files from the GRP1 BAS resource group\n    and will open, enable then in all the regions as defined in the\n    CONTEXT and SCOPE.\n\n\nPIPE(line) - resource type\n--------------------------\nValid status options for PIPE\n    SCAN\n    ENAble\n    DISable\n\nExample:\nPIPE,WEBAPP1,SCAN          <- Perform a pipeline scan on pipeline\n                              WEBAPP1\n\nPROG(ram) - resource type\n-------------------------\nValid status options for PROG\n    NEWCopy\n    PHASEin\n    ENAble\n    DISable\n\nExample:\nPROG,PAY0001,NEWC          <- Newcopy program PAY0001\nPROG,PAY*,NEWC             <- Newcopy all programs starting with PAY\n\nPGRP - Program Group Processing\n-------------------------------\nThe PGRP command is used to get a list of program to process from\na BAS (Business Application Services) resource group.\n\nBefore this funtion is invoked ensure the CONTEXT and SCOPE\nis set.\n\nThe processing is simular to the PROG command and all the PROGrams\noptions are supported in the group processing for programs\n\nExample:\nPGRP,APP1,PHASEIN          <- Extract all program definitions from\n                              BAS group APP1 and perform a PHASEIN\n\n    This command will extract all the program definitions from\n    BAS group APP1 and perform a PHASEIN on these files in the\n    specified CONTEXT and SCOPE.\n\nTRAN(action) - resource type\n----------------------------\nValid status options for TRAN\n    ENAble\n    DISable\n\nExample:\nTRAN,ABCD,ENA\n\n    Enable transaction ABCD in all CICS regions included the the\n    specified CONTEXT and SCOPE.\n\nTRAN,CL*,DIS\n\n    Disable all transactions starting with CL in the specified\n    CONTEXT and SCOPE.\n\nTGRP - Transaction group Processing\n-----------------------------------\nThe TGRP command is used to get a list of program to process from\na BAS (Business Application Services) resource group.\n\nBefore this funtion is invoked ensure the CONTEXT and SCOPE\nis set.\n\nThe processing is simular to the TRAN command and all the TRANsaction\noptions are supported in the group processing command.\n\nExample:\nTGRP,TGRP1,DIS\n\n    This command will extract all the TRANSACTION definitions from\n    BAS group TGRP1 and perform a DISABLE on these transactions in the\n    specified CONTEXT and SCOPE.\n\n\nURI  - URIMAP Processing\n------------------------\nThe URI command is used to process URIMAP sub-commands.\n\nBefore this funtion is invoked ensure the CONTEXT and SCOPE\nis set.\n\nValid sub-commands:\nDISP | DISPLAY    -> Display URIMAP data\n\nExample:\nURI,*,DISP\n    This command will display all URIMAP entries for the selected\n    CONTEXT and SCOPE.\n\nURI,P2*,DISP\n    This command will display URIMAP entries filtering only\n    to display uri entries starting with P2* in the selected\n    CONTEXT and SCOPE.\n\nTCP  - TCPIP Service Processing\n-------------------------------\nThe TCP command is used to process TCPIP SERVICE sub-commands.\n\nBefore this funtion is invoked ensure the CONTEXT and SCOPE\nis set.\n\nValid sub-commands:\nDISP | DISPLAY    -> Display TCPIP service data\n\nExample:\nTCP,*,DISP\n    This command will display all TCPIP entries for the selected\n    CONTEXT and SCOPE.\n\nURI,T2*,DISP\n    This command will display TCPIP entries filtering only\n    to display entries starting with T2* in the selected\n    CONTEXT and SCOPE.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE999": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x00\\x00\\x01 \\x19o\\x01 \\x19o\"W\\x00\\x18\\x00\\x18\\x00\\x00\\xc3\\xc2\\xe3`\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "2020-07-14T00:00:00", "modifydate": "2020-07-14T22:57:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "CBT-500"}, "text": "//***FILE 999 is from Henry Fogwill and contains a powerful batch   *   FILE 999\n//*           utlity to manage the status of CICS resources in your *   FILE 999\n//*           CICSPlex.                                             *   FILE 999\n//*                                                                 *   FILE 999\n//*           email:  hfogwill@gmail.com                            *   FILE 999\n//*                                                                 *   FILE 999\n//*       zccCICS is a powerful batch utility to manage the status  *   FILE 999\n//*       of CICS resources in your CICSPlex. Use to alter the      *   FILE 999\n//*       status of transaction, programs and files.                *   FILE 999\n//*                                                                 *   FILE 999\n//*       This utility require a CMAS running CICS Transaction      *   FILE 999\n//*       Server 5.3 or newer.                                      *   FILE 999\n//*                                                                 *   FILE 999\n//*       If you are running with a older CMAS contact me and I will*   FILE 999\n//*       see what I can do to help.                                *   FILE 999\n//*                                                                 *   FILE 999\n//*       The output from the utility present the reason and        *   FILE 999\n//*       response codes when the CPSM API is used. These codes     *   FILE 999\n//*       are documented in the IBM CPSM CICSPlex SM Application    *   FILE 999\n//*       Programming Reference manual. I will not not reproduce    *   FILE 999\n//*       this documentation and if you have non-zero reason        *   FILE 999\n//*       codes you should reference this manual for explanations   *   FILE 999\n//*       of the received error.                                    *   FILE 999\n//*                                                                 *   FILE 999\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@INSTALL": {"ttr": 533, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01 \\x16O\\x01 \\x16O\\x14(\\x00\\x0c\\x00\\x0c\\x00\\x01\\xe9\\xc3\\xc3@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-06-12T00:00:00", "modifydate": "2020-06-12T14:28:13", "lines": 12, "newlines": 12, "modlines": 1, "user": "ZCC"}, "text": "Install Instructions\n====================\n\nczzCICS is distributed freely from the CBTTAPE.ORG website. To install:\n\n1. Download file #999 from the CBT site\n2. Unzip the downloaded file to extract the TSO XMIT file\n3. Upload the XMIT file to your mainframe system\n4. Extract the XMIT file into your.dataset.INSTALL\n5. Run INST01 to extract the czzcics.LOAD library\n5. Review member #USAGE for how to use czzCICS.\n5. Review member EXAMP* for examples on using czzCICS.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@LOAD": {"ttr": 535, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00B\\x01 \\x19o\\x01 \\x19o!'\\r\\x84\\r\\x84\\x00\\x00\\xe9\\xc3\\xc3@@@@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-07-14T00:00:00", "modifydate": "2020-07-14T21:27:42", "lines": 3460, "newlines": 3460, "modlines": 0, "user": "ZCC"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "EXAMP01": {"ttr": 2054, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01 \\x16O\\x01 \\x16O\\x14(\\x00\\x17\\x00\\x17\\x00\\x01\\xe9\\xc3\\xc3@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2020-06-12T00:00:00", "modifydate": "2020-06-12T14:28:13", "lines": 23, "newlines": 23, "modlines": 1, "user": "ZCC"}, "text": "//* jobcard\n//*\n//* In this example the job parm sets the CPSM CONTEXT and SCOPE\n//*\n//* This setup can be used in a proc where you want to set all defaults\n//* and let users not have to be concerns with these details.\n//*\n//* The SYSIN is only used to manage the desired CICS resources.\n//*\n//STEP0    EXEC PGM=ZCCCICS,\n// PARM='CONTEXT=DEVPLX01,SCOPE=ALL0000'\n//STEPLIB  DD DISP=SHR,DSN=ZCCCICS.LOAD\n//         DD DISP=SHR,DSN=CICS.SEYUAUTH\n//         DD DISP=SHR,DSN=CICS.SEYULOAD\n//SYSPRINT DD SYSOUT=X\n//SYSOUT   DD SYSOUT=X\n//STDOUT   DD SYSOUT=X\n//STDERR   DD SYSOUT=X\n//SYSIN    DD *\nPROG,ZCC*,PHASE\nFILE,ZCCABC,DLO,DIS\nTRAN,ABCD,ENA\n/* the end\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EXAMP02": {"ttr": 2056, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x008\\x01 \\x18\\x8f\\x01 \\x18\\x8f $\\x00\\x16\\x00\\x16\\x00\\x02\\xe9\\xc3\\xc3@@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-07-06T00:00:00", "modifydate": "2020-07-06T20:24:38", "lines": 22, "newlines": 22, "modlines": 2, "user": "ZCC"}, "text": "//* jobcard\n//*\n//* In this example the job parm sets the CPSM CONTEXT and the SCOPE\n//* is set in SYSIN\n//*\n//* This setup can be used in a proc where you want to set a default\n//* CONTEXT and let users set the SCOPE only.\n//*\n//STEP0    EXEC PGM=ZCCCICS,\n// PARM='CONTEXT=DEVPLX01'\n//STEPLIB  DD DISP=SHR,DSN=ZCCCICS.LOAD\n//         DD DISP=SHR,DSN=CICS.SEYUAUTH\n//         DD DISP=SHR,DSN=CICS.SEYULOAD\n//SYSPRINT DD SYSOUT=X\n//SYSOUT   DD SYSOUT=X\n//STDOUT   DD SYSOUT=X\n//STDERR   DD SYSOUT=X\n//SYSIN    DD *\nSCOPE,ALL0000\nPROG,ZCC*,PHASE\nFILE,ZCCABC,CLO,DIS\n/* the end\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "INST01": {"ttr": 2058, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01 \\x16\\x0f\\x01 \\x16\\x0f\\x08\\x18\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe9\\xc3\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-06-08T00:00:00", "modifydate": "2020-06-08T08:18:35", "lines": 15, "newlines": 15, "modlines": 0, "user": "ZCC"}, "text": "//ZC0INS1  JOB ,\n//         MSGCLASS=A,\n//         NOTIFY=&SYSUID,\n//         CLASS=A\n//*\n//* UPDATE THE SYSTSIN DATA TO POINT TO YOUR INSTALL DATASET\n//* AND TO YOUR DESIRED TARGET DATASET.\n//*\n//RECVSTEP EXEC PGM=IKJEFT01,REGION=2M\n//SYSUDUMP DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD *\n  RECEIVE INDA('ZCC.INSTALL(@LOAD)')\n       DATASET('ZCC.LOAD')\n/* END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT999/FILE999.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT999", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}