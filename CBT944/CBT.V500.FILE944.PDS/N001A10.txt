Locating the terminal BIND image

This article details how to locate the existing BIND image for a
TSO session.  It was originally written when I discovered that
several of the VTAM LOGMODEs that existed in
SYS1.VTAMLIB did not match the source code members that
were supposed to correspond to them.

Some of our PC users were unable to perform successful file
transfers.  However, when the LOGMODE source was checked
it appeared to be coded correctly.  We used the following
command processor, QBIND, to display the BIND image at the
user's terminal, and found that the LOGMODEs were
incorrect.  The information that is returned by the command
processor is very simple and was used on a TSO system that
did not utilize ISPF.  The command processor could be
redesigned to output the data in a formatted fashion to an ISPF
panel.  However, it is presented here in its simplest form.  The
same information can be obtained from a trace of the TSO
user's session, but the command processor is much easier to
use and less time-consuming.

The code for the command processor is shown below.  The
comments at the start of the code detail the control block chain
that has to be followed to locate the BIND image for the TSO
user.  Figure 1 is an example of the output returned by this
command processor.


SOURCE CODE FOR QBIND TSO COMMAND PROCESSOR

******************************************************
* PROGRAM NAME: QBIND (QUERY BIND).                  *
* PURPOSE:      TO PROVIDE AN ONLINE REPRESENTATION  *
*               OF THE VTAM BIND IMAGE FOR A TSO     *
*               SESSION AT THE USERS TERMINAL.       *
* LOCATING THE BIND IMAGE.                           *
* THE IBM MANUAL 'VTAM DATA AREAS (LY30-5584)' CAN   *
* BE USED TO OBTAIN MAPS OF THE FOLLOWING CONTROL    *
* BLOCKS.                                            *
* APPENDIX F OF THE IBM VTAM PROGRAMMING MANUAL      *
* CAN BE USED TO MAP THE BIND IMAGE IF NECESSARY.    *
* ASCB + X'3C'-----> ASCBTSCB---                     *
*                               |                    *
*       ------------------------                     *
*      |                                             *
*       -----> TSB + X'60' -----> TSSBEXTNT ---      *
*                                              |     *
*       ---------------------------------------      *
*      |                                             *
*       -----> TSBX + X'24' ----> TSBXTVWA ----      *
*                                              |     *
*       ---------------------------------------      *
*      |                                             *
*       -----> TVWA + X'58' ----> TVWANIB -----      *
*                                              |     *
*       ---------------------------------------      *
*      |                                             *
*       -----> NIB + X'38' -----> NIBNDAR -----      *
*                                              |     *
*       ---------------------------------------      *
*      |                                             *
*       -----> ISTBIND IMAGE.                        *
******************************************************
QBIND      CSECT
           USING      *,R15             /* ENTRY ADDRESS. */
           B          SKP               /* BRANCH PAST HEADER. */
           DC         XL1'08'           /* LENGTH OF HEADER. */
           DC         C'QBIND'          /* TITLE. */
SKP        DS         0H
           STM        R14,R12,12(R13)   /* STORE REGISTERS. */
           DROP       R15               /* DROP R15 AS BASE. */
           BALR       R12,R0            /* SETUP R12. */
           USING      *,R12             /* BASE PROGRAM ON R12. */
           LR         R11,R13           /* SAVE THE SAVEAREA. */
           LA         R13,RSAVE         /* LOAD SAVEAREA ADDR. */
           ST         R11,4(,R13)       /* STORE ORIGINAL ADDR. */
           ST         R13,8(,R11)       /* STORE MY SAVEAREA. */
           MODESET    KEY=ZERO          /* GET INTO SUPERVISOR. */
           L          R8,X'220'         /* PTR ASCB. */
           L          R8,60(R8)         /* PTR ASCBTSB X'3C'. */
           L          R8,96(R8)         /* PTR TSBEXTNT X'60'. */
           L          R8,36(R8)         /* PTR TSBXTVWA X'24'. */
           L          R8,88(R8)         /* PTR TVWANIB X'58'. */
           L          R8,56(R8)         /* PTR NIBNDAR X'38'. */
           LA         R9,36             /* LOAD LENGTH BIND. */
           LA         R3,OUTFLD2        /* LOAD ADDR O/P FIELD. */
MAIN01     EQU        *
           LA         R1,XSTRING        /* ADDR OF HEX TABLE. */
           SR         R4,R4             /* ZEROIZE R4. */
           SR         R5,R5             /* ZEROIZE R5. */
           IC         R4,0(R8)          /* INSRT CHAR FROM BIND.*/
           IC         R5,0(R8)          /* INSRT CHAR FROM BIND.*/
           SRL        R4,4              /* HI 2 BYTES TO LOW. */
           N          R5,=F'15'         /* AND-OUT HI 2 BYTES. */
           AR         R4,R1             /* ADD STRT TBL ADDR. */
           AR         R5,R1             /* ADD STRT TBL ADDR. */
MAIN02     EQU        *
           MVC        0(1,R3),0(R4)     /* MOVE 1ST CHAR O/P. */
           MVC        1(1,R3),0(R5)     /* MOVE 2ND CHAR O/P. */
           LA         R3,2(,R3)         /* POINT TO NEXT CHAR. */
           LA         R8,1(R8)          /* POINT NEXT IN BIND. */
           BCT        R9,MAIN01         /* LOOP IF NOT LAST. */
EXIT       EQU        *
           TPUT       OUTFLD1,L'OUTFLD1 /* PUT OUT TITLE. */
           TPUT       SPACE,L'SPACE     /* PUT OUT SPACES. */
           TPUT       OUTFLD2,L'OUTFLD2 /* PUT OUT BIND IMAGE. */
           SR         R15,R15           /* ZERO RETURN CODE. */
           L          R13,4(R13)        /* RELOAD SAVEAREA. */
           RETURN     (14,12),RC=(15)   /* RETURN TO CALLER. */
OUTFLD1    DS         0CL72
           DS         CL23
           DC         CL27'BIND IMAGE FOR THIS TSOUSER'
           DS         CL22
OUTFLD2    DS         0CL72
           DC         72C'F'
RSAVE      DS         18F
SPACE      DC         C' '
XSTRING    DC         CL16'0123456789ABCDEF'
           IHAASCB
           END


John Bradley
Technical Support Engineer (UK)

