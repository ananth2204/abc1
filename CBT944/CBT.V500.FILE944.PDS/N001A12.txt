A VTAM application front-end program

With the increasing interest in reducing the amount of operator
intervention in the daily operation of the machine, it is rather
annoying when applications (such as TSO) fail to start at IPL
time because they start before the network has initialized.  In
many cases (such as TSO) the operators are prompted to make
some kind of reply when the network is  up.  In some cases,
the application simply abends and the operators have to restart
it.  With this in mind, I set about writing a simple routine
which could 'front end' any VTAM application which would
wait for VTAM to become active before allowing the
application to try to initialize.

WAITAPPL is the result of this exercise.  It is executed with
the name of the VTAM ACB to be waited for as the EXEC
PARM.  WAITAPPL will attempt to open the ACB.  If the
ACB opens, WAITAPPL closes it and then exits, allowing the
application to start.  If the ACB does not open, WAITAPPL
waits for ten seconds before retrying.  In order to stop
WAITAPPL endlessly waiting for an ACB which  may never
open, I have limited the total time it will wait to ten minutes.
This covers the case where there is a genuine problem which
stops the ACB ever becoming active.  In this case WAITAPPL
ends with a return code of 4.

To use WAITAPPL, you should code the following JCL
statement immediately before the step which will require the
selected ACB:

       //WAITAPPL  EXEC  PGM=WAITAPPL,PARM='applname'

where applname is the name of the ACB to be waited for.  For
example, our TSO start-up procedure now consists of:

//TSO     PROC MBR=TSOKEYP1
//* WAIT UPTO 10 MINUTES FOR PTSOD TO BECOME AVAILABLE.
//STEP1   EXEC PGM=WAITAPPL,PARM='PTSOD'
//STEP2   EXEC PGM=IKTCAS00,TIME=1440,COND=EVEN
//PARMLIB  DD  DSN=SYS1.PARMLIB(&MBR),DISP=SHR,FREE=CLOSE
//PRINTOUT DD  SYSOUT=*,FREE=CLOSE
//*


WAITAPPL SOURCE CODE

WAITAPPL CSECT
         STM   R14,R12,12(R13)     Save callers registers
         LR    R12,R15             Setup r12 as the base address
         USING WAITAPPL,R12        and address the rest of the module
         LA    R11,SAVEAREA        Befine our save area
         ST    R13,4(,R11)         Store backward pointer
         ST    R11,8(,R13)         Store forward pointer
         LR    R13,R11             and conform to standards
         L     R1,0(,R1)           Load pointer to EXEC parm
         CLC   =H'0',0(R1)         Is there a parm ?
         BE    NOPARM              no - then use default application
         LH    R2,0(,R1)           otherwise - get parm length
         CH    R2,=H'8'            Is parm more than 8 chars ?
         BNH   *+8                 no - then continue round
         LA    R2,8                otherwise - for max. length
         STC   R2,APPLID           Save length of appl name
         BCTR  R2,R0               -1 for move
         EX    R2,MOVEAPPL         and move application name
         LA    R3,60               Iteration counter. (This is the
*                                  number of 10 second wait periods
*                                  before we abort the job).
*                                  eg  6 = 60 seconds or 1 minute
*                                     60 = 360 seconds, 10 minutes
NOPARM   MVC   OPENWTO1+44(8),APPLID+1     Add application name
         MVC   OPENWTO2+26(8),APPLID+1     to the user messages
         MVC   OPENWTO3+26(8),APPLID+1
         WTO   MF=(E,OPENWTO1)     Tell 'em we're waiting
WAITOPEN OPEN  THEACB              Try to open ACB
         LTR   R15,R15             Did it open ?
         BZ    OPENOK              yes - application is available
         BCT   R3,WAIT             no - maybe wait a little
         WTO   MF=(E,OPENWTO3)     Tell 'em we're aborting
         L     R13,4(,R13)         Unavailable, end the prog. with
         RETURN (14,12),RC=4       a return code of 4
WAIT     STIMER WAIT,DINTVL=PAUSE  Wait for a while (10 seconds)
         B      WAITOPEN           and retry the open
OPENOK   CLOSE THEACB              Close the now open ACB
         WTO   MF=(E,OPENWTO2)     Tell 'em it opened OK
         L     13,4(,R13)          Return to MVS with an RC of 0
         RETURN (14,12),RC=0
*  Executed move - This instruction moves the application name
*                  from the EXEC "PARM" field to the application
*                  name field pointed to by the ACB.
MOVEAPPL MVC   APPLID+1(*-*),2(R1)
OPENWTO1 WTO   'WAITAPPL: Waiting for VTAM application: ........ ',  XXX
               MF=L
OPENWTO2 WTO   'WAITAPPL: Application ........ now available. ',     XXX
               MF=L
OPENWTO3 WTO   'WAITAPPL: Application ........ unavailable - aborting',X
               MF=L
SAVEAREA DC    18F'0'
APPLID   DC    X'03',CL8'TSO '
THEACB   ACB   AM=VTAM,APPLID=APPLID
PAUSE    DC    C'00001000'           10 second pause period.
         END


S A Barnett
Senior Technical Consultant
IMI Computing Ltd (UK)

