Implementing IBM 5866 modems

A little while ago, I began a project to decrease network
expenses, while maintaining or improving the response time, at
a major wholesale distribution company.  The network
consisted of more than 20 remote cluster controllers on 13
digital 9600 BPS lines, with the primary VTAM application
being IDMS DB/DC.  The cluster controllers were spread
sparsely throughout the USA, so no effective concentration
could be achieved.

The first step of the project was to gather statistics on the
messages flowing through the network.  A program was written
to read NPM session data records, print reports, and archive
the records.  NPM session data records can be collected by
adding a SESSCOLL APPL statement for each VTAM
APPLID in the NPM start-up parameters.  Specifying session
collection by APPLID avoids the tedious task of entering a
record for each LINE and PU.  The report used for this project
listed PIU counts and average message sizes for each PU.  The
program also produced a summary report including the
maximum byte count for each PU on a given day.  The
maximum byte and PIU counts were used in the network model
to represent peak utilization.  Another interesting report
produced by this program lists all the PUs with a response time
exceeding a given threshold - a response time exception report.

An exit was written for Levi Ray and Shoup Inc's VTAM
Printer Support System (VPS).  The exit program, VPSSUE07,
moved fields JSTVBYTE (number of bytes sent) and
JSTVSEND (number of VTAM sends) from the VPS job
statistics DSECT to the SMF type 6 record field SMF6UIF.
This field is normally initialized to blanks by VPS.  A SAS
program was then written to read the SMF type 6 records
produced by VPS and print a report.  This data was used in the
network model to represent the amount of batch (printer) data
versus interactive data.

A SAS program was also written to analyze the task statistics
records produced by IDMS to determine the message size mix
of all the interactive traffic.  The purpose here was to
determine what percentage of the messages fell into given
message size categories.

The data gathered was modelled using several different
packages.  The network that was implemented closely matched
the output from IBM's Topology Overview Pricing Analysis
System (TOPAS).  The TOPAS program estimated line cost,
utilization, and response time for the proposed network.  The
model's predictions have proved to be correct over the last two
years in production.  The key, of course, is to provide the
model with accurate data.

A proposal was submitted to purchase IBM 14.4 KBPS model
5866 modems.  The modems were 1.5 times faster than the
existing modems.  This enabled the number of multi-drop lines
to be reduced from 13 lines to nine.  A test line was installed
which performed as expected, both in line quality and response
time.  The network was then converted to the IBM modems
and analogue lines in two phases.  Half of the existing circuits
were converted in each step.  The cancellation dates for the
existing circuits were two weeks after the installation dates of
the analogue lines.  During the two week overlap, all the
installation problems were solved, without exception.  The
proposed network paid for the line installation and overlap
charges and the modems in six and a half months.  The first
year saving was $40,000 after expenses and $60,000 the
second year.

There has been no increase in network outages since going
back to analogue from the digital network.  We do, however,
monitor the analogue lines closely, using NPM's on-line
displays and customized NPM reports.  If the line errors
increase, the circuit is turned over to AT&T for line tests.  The
diagnostic capabilities of the IBM 5866 modems are sound.
This enables network control to give AT&T a good indication
of the line problem.  An easy way to get a report of the lines
with excessive errors is to sort the NPM log file.  Include only
records for output with the error field greater than a given
threshold number, then run the IBM-supplied NPM log report
against the sorted output file.

The final step in implementing this network was the installation
of dial back-up hardware and NetView CLISTs to support dial
back-up.  A two-call dial back-up coupler was installed in each
of the remote 5866 modems.  A pool of 5866 modems with
dial back-up couplers installed at the host site is used to back
up all the remote cluster controllers.

The tasks of the dial back-up CLISTs are to manage the pool of
local dial back-up modems, dynamically reconfigure a dial
back-up line to match the PU that is down, issue the modem
dial command, activate the dial back-up PU, and deactivate the
PU on the leased line.  It is important to deactivate the PU on
the leased line.  If other PUs on the line are still active, NCP
will send out SNRMs and wait for a response until the reply
timeout value has been reached.  This would tie up the line for
productive work.  There must also be CLISTs to bring down
the dial back-up PU, hang up the phone, and so forth.

The implemented CLISTs use global variables to keep track of
the modem pool, store the telephone numbers (the telephone
numbers are actually task variables), and other variables.  The
problem with global variables, however, is that there is no
checkpoint facility for the variables within NetView.  If
NetView crashed with PUs in dial back-up, the global variables
would have to be set up with a recovery CLIST, requiring
manual intervention.  Since NetView has been very reliable
and the system is on a UPS, I have not had this problem occur.
I had hoped that NetView Release 3 would address this issue,
but it did not.  The REXX language available with release 3
does allow file I/O so the variables can be written to a file and
recovered at start up.

One other problem I had with global variables is that they can
only be updated by the PPT.  The IBM method of using
message automation to cause the PPT to update the variable is
very slow.  There is also a problem in that, if the user is an
authorized message receiver, the message automation method
of setting global variables does not work.  The CLISTs,
SETGB and SETGBPPT, eliminate the need to use message
automation to set the global variables.

When the dial back-up CLISTs were written, VTAM Version
3.2 was not available.  The CLISTs depend on a dynamic
reconfiguration member being in a VTAMLST PDS for each
PU, for each line in the modem pool.  It is a tedious task to set
up and maintain all these reconfiguration members.  It is,
however, very fast when the CLIST runs, much faster than
running a program to look at NCP and add the members on the
fly.  The MOVE command with VTAM Version 3.2 solves this
problem nicely, giving the ability to move a  PU from one line
to another.  The CLISTs presented here have not been changed
to take advantage of the MOVE command, however.

The dial back-up CLISTs can be used to automate the dial
back-up process using NetView's message automation facility.
The CLISTs were written with this in mind even though we
chose not to implement automatic dial back-up at this
installation.  The message, BNJ146I, is issued by the hardware
monitor if NCP cannot establish LPDA contact with the remote
modem.  Make sure the hardware monitor filters are coded to
allow the BNJ146I message to be generated.  The default for
the operator filter is block, which will prevent the message
from being generated.  Create an entry in the message
automation table to invoke the dial back-up CLISTs for
message BNJ146I and token nine equal '1A', passing the
variables needed for the CLIST execution extracted from the
message text.

There are several things to be aware of when using timer
commands within NetView.  When a timer command is issued,
it runs within the operator task where the command is issued,
even if the command is issued in a CLIST, or in the PPT if
PPT is specified in the command.  The dial back-up CLISTs
use timer commands to disconnect the dial back-up lines
automatically at a certain time.  It is necessary that this occurs
even if the operator that started the dial back-up CLIST is no
longer signed on.  Running the disconnect CLIST in the PPT
will not work since there are commands in the CLIST which
cannot be executed in the PPT.  It would not be desirable to
use the PPT even if this were not the case since the CLIST
would tie up the PPT and possibly cause tasks to queue,
waiting for the PPT.

The dial back-up CLIST uses the EXCMD command, which
allows a CLIST to be executed under a different operator task,
in conjunction with the timer commands when a time-related
function is to be performed.  An auto-operator, AUTO3, is
defined specifically for dial back-up and the disconnect CLIST
runs under this operator-id.  This id will always be logged on
and there is not a problem with queueing since AUTO3 is used
for nothing but dial back-up.  The idea of using different auto
operator-ids for different tasks is an important one.  This
should be done if message automation is used to automate
operations to prevent the CLISTs from queueing under one
operator task.

There are also CLISTs to test dial back-up for each of the
remote modems.  The dial back-up test CLISTs are run once a
week and the network operator checks the log to make sure that
all the modems are connected properly.  The tests are
scheduled to run by the CLIST in the early morning.

All in all this project has been extremely successful.  The
response time has been predictable during the two years since
the network was installed.  The modems have been reliable:
there has not been a single modem failure causing loss of
service.  A modem was replaced because it would lose its
options with a power loss but this was not a disruptive
problem.  The original network model has proved accurate.
The intent was to configure a network which would not have to
be changed for traffic reasons for two years - this has been
achieved.  The network operators are pleased with the ease of
dial back-up, modem diagnostics, etc, provided with NetView
and the NetView CLISTs.


IDB001

* CLIST TO PUT A PU IN DIAL BACKUP
&CONTROL ERR
&IF .&1 NE .HELP &THEN &GOTO -NOHELP
&WRITE
&WRITE >>>> PLACE A BRANCH IN DIAL BACKUP
&WRITE >>>> ENTER IDB XX OR IDB XX YY WHERE XX IS BRANCH
&WRITE >>>> AND YY IS DB LINE. CLIST WILL PICK DB LINE IF
&WRITE >>>> YY IS NOT ENTERED. ENTER IDI XX TO DISCONNECT.
&WRITE
&GOTO -END
-NOHELP
* DEFINE CLIST VARIABLES
&BRANCH  = &1
&LINEPRM = &2
* DEFINE GLOBAL VARIABLES
&CGLOBAL NCPNAME
&CGLOBAL NETCNTL
&CGLOBAL DBLNO
* DEFINE TASK VARIABLES
&TGLOBAL PH1
&TGLOBAL PH2
&IF .&NCPNAME NE . &THEN &GOTO -NCPSET
* IF NCP NAME NOT SET SET THE GLOBAL VARIABLE
NCPNAME
-NCPSET
&IF .&DBLNO NE . &THEN &GOTO -BEGIN
* SET GLOBAL VARIABLES FOR DIAL BACKUP CLISTS
&WAIT 'EXCMD PPT,IDB005 &OPID',+
     DSI039I=-BEGIN,*10=-ERROR,*ERROR=-ERROR
-BEGIN
CLEAR
* VALIDATE BRANCH VARIABLE
&LN = &LENGTH &BRANCH
&IF &LN NE 2  &THEN &GOTO -BRERR
* DEFINE THE LINE VARIABLES AND MAKE SURE BRANCH NOT IN DB
&LNO = 1
-LNLP01
&CGLOBAL DBLN&LNO
&IF &DBLN&LNO EQ &BRANCH &THEN &GOTO -BRERR2
&LNO = &LNO + 1
&IF &LNO > &DBLNO &THEN &GOTO -PHONES
&GOTO -LNLP01
-PHONES
* SET UP PHONE NUMBER VARIABLE
IDB008 &BRANCH
&IF &PH1 = ERROR &THEN &GOTO -BRERR
&GOTO -GOTPHONE
-BRERR
&WRITE
&WRITE >>>> ERROR THE FIRST PARAMETER SHOULD BE BRANCH NUMBER
&WRITE >>>> ERROR ENTER A VALID TWO CHARACTER BRANCH NUMBER
&WRITE
&GOTO -END
-BRERR2
&WRITE
&WRITE >>>> ERROR BRANCH &BRANCH IS ALREADY IN DIAL BACKUP
&WRITE
&GOTO -END
-GOTPHONE
&LN = &LENGTH &LINEPRM
* SEE IF THE OPERATOR PICKED A LINE TO USE
&IF &LN NE 0 &THEN &GOTO -LINEPRM
* IF THE OPERATOR DIDN'T PICK A LINE FIND ONE NOT IN USE
* WHEN A FREE LINE IS FOUND MARK IT USED WITH GLOBAL VARIABLE
&LNO = 1
-LNLP02
&IF &DBLN&LNO NE N &THEN &GOTO -ADD01
SETGB DBLN&LNO TO &BRANCH
&LINEPRM = &LNO
&GOTO -GOTLINE
-ADD01
&LNO = &LNO + 1
&IF &LNO > &DBLNO &THEN &GOTO -BUSY
&GOTO -LNLP02
-BUSY
&WRITE
&WRITE >>>> ALL DIAL BACKUP LINES ARE BUSY
&WRITE
&GOTO -END
-LINEPRM
* VALIDATE THE LINE NUMBER FROM THE OPERATOR
* MAKE SURE IT'S NOT IN USE AND MARK IT USED
&IF &LN > 1 &THEN &GOTO -LNERR
&IF &LINEPRM < 1 &THEN &GOTO -LNERR
&IF &LINEPRM > &DBLNO &THEN &GOTO -LNERR
&IF &DBLN&LINEPRM NE N &THEN &GOTO -INUSE
SETGB DBLN&LINEPRM TO &BRANCH
&GOTO -GOTLINE
-INUSE
&WRITE
&WRITE >>>> LINE &LINEPRM IS IN USE PICK ANOTHER
&WRITE
&GOTO -END
-LNERR
&WRITE
&WRITE >>>> ERROR THE SECOND PARM MUST BE LINE NUMBER OR BLANK
&WRITE >>>> ERROR ENTER 1 - &DBLNO FOR LINE NUMBER WITH NO ZEROS
&WRITE
&GOTO -END
-GOTLINE
* BUILD VARIABLES FOR VTAM COMMANDS
&LN = &CONCAT LINEDB &LINEPRM
&DUMPU = &CONCAT PUDBO &LINEPRM
&LPU = &CONCAT PU &BRANCH
&DPU = &CONCAT &LPU I
&DS = &CONCAT IDB &BRANCH
&DS = &CONCAT &DS &LINEPRM
&WRITE
&WRITE >>>>>> START DIAL BACKUP ON &LN FOR &LPU DATE: &DATE,
&WRITE >>>>>> TIME: &TIME, DIALING NUMBERS &PH1 AND &PH2
&WRITE
* KNOCK DOWN THE PU ON THE LEASED LINE
VARY NET,INACT,ID=&LPU,F
* ACTIVATE THE DYNAMIC RECONFIG MEMBER
&WAIT 'V NET,DRDS,ID=&DS',+
    IST670I=-END03,*60=-ERROR,*ERROR=-ERROR
-END03
* ACTIVATE THE DIAL BACKUP LINE AND PUS
&WAIT 'V NET,ACT,ID=&LN,SCOPE=ALL',+
   IST093I=-END04,*60=-ERROR,*ERROR=-ERROR
-END04
* INACT THE DUMMY PU TO STOP SNRMS
V NET,INACT,ID=&DUMPU
* ISSUE THE MODEM COMMAND TO DIAL THE PHONE NUMBERS
&WAIT 'MDMCNTL ID=&NCPNAME,STATION=&DPU,CONNECT=(&PH1,&PH2)',+
   DSI268I=-OK01,DSI421I=-BAD01,*300=-BAD01,*ERROR=-ERROR
-BAD01
&WRITE
&WRITE >>>>>> DIAL BACKUP ON &LN FOR &LPU FAILED  !!!!!!!
&WRITE
* UNDO ALL THE DYNAMIC RECONFIGURATONS
IDB002 &BRANCH
&GOTO -END
-OK01
* START A TIMER TASK IN AUTO3 TO REMIND NET CONTROL THE
* LINE IS IN DIAL BACKUP AND TAKE DOWN LINES AND EOD IF STILL UP
EXCMD AUTO3 IDB007
* MESSAGE TO NET CONTROL LINE IS IN DIAL BACKUP
MSG &NETCNTL,>>>>> DIAL BACKUP &LPU AT: &TIME
&GOTO -END
-ERROR
&WRITE
&WRITE >>>>  ERROR IN CLIST IDB001 TIMEOUT
&WRITE
-END
&WRITE COMMAND COMPLETE


IDB002

* CLIST TO TAKE PU OUT OF DIAL BACKUP
&CONTROL ERR
&IF .&1 NE .HELP &THEN &GOTO -NOHELP
&WRITE
&WRITE >>>> TAKE PU OUT OF DIAL BACKUP
&WRITE >>>> ENTER IDI XX WHERE XX IS BRANCH NUMBER.
&WRITE
&GOTO -END
-NOHELP
* SET CLIST VARIABLES
&BRANCH  = &1
* DEFINE GLOBAL VARIABLES
&CGLOBAL NCPNAME
&CGLOBAL DBLNO
&CGLOBAL NETCNTL
&IF .&NETNCTL NE . &THEN &GOTO -GLOBSET
&WRITE
&WRITE >>>> NO ONE IN DIAL BACKUP OR NETVIEW HAS BEEN CYCLED
&WRITE
&GOTO -END
-GLOBSET
&IF .&NCPNAME NE . &THEN &GOTO -NCPSET
NCPNAME
-NCPSET
CLEAR
* VALIDATE OPERATOR INPUT (INPUT COULD BE FROM TIMER TASK)
&LN = &LENGTH &BRANCH
&IF &LN NE 2  &THEN &GOTO -BRERR
* FIND THE LINE THE PU IS USING AND RESET TO NOT IN USE
* DEFINE THE LINE VARIABLES
&LNO = 1
-LNLP01
&CGLOBAL DBLN&LNO
&IF &DBLN&LNO NE &BRANCH &THEN &GOTO -ADD01
&LINENO = &LNO
SETGB DBLN&LNO TO N
&GOTO -GOTLINE
-ADD01
&LNO = &LNO + 1
&IF &LNO > &DBLNO &THEN &GOTO -BRERR2
&GOTO -LNLP01
-GOTLINE
* BUILD VARIABLES FOR VTAM COMMANDS
&LN = &CONCAT LINEDB &LINENO
&WPU = &CONCAT PU &BRANCH
&DBPU = &CONCAT &WPU I
&DS = &CONCAT IDI &BRANCH
&DS = &CONCAT &DS &LINENO
&GOTO -DISCON
-BRERR
&WRITE
&WRITE >>>> ERROR THE 1ST PARM MUST BE LINE NUMBER, 2ND BRANCH
&WRITE >>>> ERROR ENTER A VALID TWO CHARACTER BRANCH NUMBER
&WRITE
&GOTO -END
-BRERR2
&WRITE
&WRITE >>>> ERROR PU &BRANCH IS NOT IN DIAL BACKUP
&WRITE >>>> ERROR ENTER A VALID TWO CHARACTER BRANCH NUMBER
&WRITE
&GOTO -END
-DISCON
&WRITE
&WRITE >>>>>> DISCONNECT DIAL BACKUP ON &LN FOR &WPU
&WRITE >>>>>> DATE: &DATE TIME: &TIME
&WRITE
* ISSUE MODEM COMMAND TO DISCONNECT THE PHONE
MDMCNTL ID=&NCPNAME,STATION=&DBPU,DISCONN
* DEACTIVATE THE DIAL BACKUP PU AND LINE
&WAIT 'V NET,INACT,ID=&DBPU,F',+
   IST105I=-END03,*60=-ERROR,*ERROR=-ERROR
-END03
&WAIT 'V NET,INACT,ID=&LN,F',+
    IST105I=-END04,*60=-ERROR,*ERROR=-ERROR
-END04
* DYNAMICALLY RECONFIGURE THE DIAL BACKUP LINE DELETE BACKUP PU
VARY NET,DRDS,ID=&DS
* ACTIVATE THE LEASED LINE PU
VARY NET,ACT,ID=&WPU,SCOPE=ALL
&WRITE COMMAND COMPLETE
MSG &NETCNTL,>>>>> DIAL DISCONNECT &WPU AT: &TIME
&GOTO -END
-ERROR
&WRITE ** ERROR IN CLIST IDB002 CONTACT SYSTEMS **
-END


IDB003

* CLIST TO REMIND NET CNTL A PU IS IN DIAL BACKUP
&CONTROL ERR
&CGLOBAL MSGTIME
&CGLOBAL NETCNTL
&CGLOBAL DBLNO
* FIND THE LINE IN DIAL BACKUP
* DEFINE THE LINE VARIABLES
&DB = N
&LNO = 1
-LNLP01
&CGLOBAL DBLN&LNO
&IF &DBLN&LNO = N &THEN &GOTO -ADD01
MSG &NETCNTL,>>>>> PU &DBLN&LNO IN DIAL BACKUP ON LINE &LNO
&DB = Y
-ADD01
&LNO = &LNO + 1
&IF &LNO > &DBLNO &THEN &GOTO -CONT01
&GOTO -LNLP01
-CONT01
* IF ANYONE IS IN DIAL BACKUP SET THE CLIST UP TO RUN AGAIN
&IF &DB = N &THEN &GOTO -END
&TID = &CONCAT ID3 &TIME
EVERY &MSGTIME,PPT,ID=&TID,DELAY2 &TID 'IDB003'
-END


IDB005

&CONTROL ERR
* CLIST TO DEFINE DIAL BACKUP GLOBAL VARIABLES
* CLIST MUST RUN IN PPT
&REQSTER = &1
* NETWORK CONTROL'S OPERATOR ID
&CGLOBAL NETCNTL
&NETCNTL = NETOP1
* SET TIME INTERVALS TO REMIND NET CONTROL OF LINES IN DB
&CGLOBAL MSGTIME
&MSGTIME = 00:15
* SET TIME OF DAY TO DISCONNECT DB LINES
&CGLOBAL DISTIME
&DISTIME = 19:30
* SET THE NUMBER OF DIAL BACKUP LINES AVAILABLE
&CGLOBAL DBLNO
&DBLNO = 2
* SET FLAG IDB007 HAS NOT BEEN RUN
&CGLOBAL IDB007X
&IDB007X = N
* DEFINE LINE VARIABLES AND SET TO N
&LNO = 1
-LNLP01
&CGLOBAL DBLN&LNO
&DBLN&LNO = N
&LNO = &LNO + 1
&IF &LNO > &DBLNO &THEN &GOTO -CONT01
&GOTO -LNLP01
-CONT01
MSG &REQSTER,VARIABLES SET BY CLIST IDB005


IDB006

* CLIST TO DISCONNECT LINES AT THE END OF THE DAY
&CONTROL ERR
* DEFINE THE GLOBAL VARIABLES
&CGLOBAL NETCNTL
&CGLOBAL DBLNO
* TELL NETWORK CONTROL
MSG &NETCNTL.>>>>> SCAN BACKUP LINES: &DATE &TIME
* IF THE LINE IS IN USE RUN IDB002 TO DISCONNECT PASS PU NUMBER
&LNO = 1
-LNLP01
&CGLOBAL DBLN&LNO
&IF &DBLN&LNO = N &THEN &GOTO -ADD01
IDB002 &DBLN&LNO
-ADD01
&LNO = &LNO + 1
&IF &LNO > &DBLNO &THEN &GOTO -CONT01
&GOTO -LNLP01
-CONT01
* RESET GLOBAL VARIABLE SO IDB006 CAN BE SCHEDULED TO RUN AGAIN
&CGLOBAL IDB007X
SETGB IDB007X TO N


IDB007

*CLIST SET UP TIMER CLISTS IN AUTO3 AND PPT
&CONTROL ERR
&CGLOBAL MSGTIME
&CGLOBAL DISTIME
&CGLOBAL IDB007X
&WRITE STARTING DIAL BACKUP TIMER TASKS AT: &TIME
* START A TIMER TASK TO REMIND NET CONTROL THE
* LINE IS IN DIAL BACKUP
&IF &IDB007X = Y &THEN &GOTO -TMRGOING
* AFTER &MSGTIME RUN CLIST IDB003 AND PURGE TIMER
EVERY &MSGTIME,PPT,ID=IDB003,DELAY2 IDB003 'IDB003'
* SET TIMER TO RUN CLIST TO TAKE DOWN DIAL BACKUP LINES
AT &DISTIME,ID=IDB006,IDB006
* SET IDB007X TO Y ONLY START ONE MESSAGE TIMER LOOP
SETGB IDB007X TO Y
-TMRGOING


IDB008

&CONTROL ERR
* CLIST TO PUT A PU IN DIAL BACKUP
* ADD NEW BRANCHES TO THIS CLIST AND CLIST IDB900 (DIAL BACKUP TEST)
&BRANCH = &1
* DEFINE TASK GLOBAL VARIABLES
&TGLOBAL PH1
&TGLOBAL PH2
* SET UP PHONE NUMBER VARIABLE
&IF &BRANCH NE 01 &THEN &GOTO -NT01
&PH1 = 19999999999
&PH2 = 19999999998
&GOTO -GOTPHONE
-NT01
&IF &BRANCH NE 02 &THEN &GOTO -NT02
&PH1 = 19998888888
&PH2 = 19998888887
&GOTO -GOTPHONE
-NT02
&WRITE >>>> THERE IS NOT A PHONE NUMBER DEFINED FOR &BRANCH IN IDB008
&PH1 = ERROR
-GOTPHONE


IDBTEST

* CLIST SET TIMER TASK TO RUN DIAL BACKUP TEST
&CONTROL ERR
&TSTTIME = 03:00
&IF .&1 NE .HELP &THEN &GOTO -NOHELP
&WRITE
&WRITE >>>> TEST DIAL BACKUP LINES
&WRITE >>>> ENTER IDBTEST ALL LINES WILL BE TESTED AT &TSTTIME
&WRITE >>>> ENTER IDBTEST XX AND BRANCH XX TESTED NOW
&WRITE
&GOTO -END
-NOHELP
* IF OPER ENTERS A BRANCH NUMBER TEST ONE BRANCH NOW
&BRANCH = &1
&IF .&BRANCH NE . &THEN &GOTO -TESTONE
* IF PARM NOT ENTERED TEST ALL BRANCHES IN THE AM
AT &TSTTIME,ID=IDB900,EXCMD AUTO3,IDB900
&WRITE DIAL BACKUP TEST SCHEDULED FOR &TSTTIME
&GOTO -END
-TESTONE
IDB901 &BRANCH
-END


IDB900

* CLIST TO TEST DIAL BACKUP NUMBERS
&CONTROL ERR
&WRITE >>>>>> IDB900 DIAL BACKUP TEST BEGIN : &DATE &TIME
&LN = LINEDB1
&BRANCH = 23
IDB901 &BRANCH
&BRANCH = 33
IDB901 &BRANCH
&BRANCH = 01
IDB901 &BRANCH

      etc

V NET,INACT,ID=&LN,F
&WRITE >>>>>> DIAL BACKUP TEST COMPLETE : &DATE &TIME


IDB901

* CLIST TO TEST DIAL BACKUP...DIAL THE NUMBERS
&CONTROL ERR
&BRANCH = &1
&LN = LINEDB1
&DPU = PUDB01
* DEFINE GLOBAL VARIABLES
&CGLOBAL NCPNAME
&TGLOBAL PH1
&TGLOBAL PH2
* GET THE PHONE NUMBERS TO DIAL
IDB008 &BRANCH
&IF &PH1 = ERROR &THEN &GOTO -END
&IF .&NCPNAME NE . &THEN &GOTO -NCPSET
* IF NCP NAME NOT SET SET THE GLOBAL VARIABLE
NCPNAME
-NCPSET
CLEAR
* ACTIVATE DIAL BACKUP LINE
&WAIT 'V NET,ACT,ID=&LN,SCOPE=ALL',+
   IST093I=-END01,*10=-ERROR,*ERROR=-ERROR
-END01
&WAIT 'MDMCNTL ID=&NCPNAME,STATION=&DPU,CONNECT=(&PH1,&PH2)',+
   DSI268I=-OK01,DSI421I=-BAD01,*300=-BAD01,*ERROR=-ERROR
-BAD01
&WRITE >>>>>> ERROR DIALING BRANCH &BRANCH &PH1 &PH2
&GOTO -END
-OK01
&WRITE >>>>>> TEST FOR BRANCH &BRANCH SUCCESSFUL
&WAIT 'MDMCNTL ID=&NCPNAME,STATION=&DPU,DISCONN',+
   DSI268I=-DS01,*300=-ERROR,*ERROR=-ERROR
-DS01
&GOTO -END
-ERROR
&WRITE
&WRITE >>>>>>  ERROR IN CLIST IDB901 TIMEOUT
&WRITE
-END


IDB999

&CONTROL ERR
* CLIST TO DEFINE DIAL BACKUP GLOBAL VARIABLES
* CLIST MUST RUN IN PPT
&REQSTER = &1
* NETWORK CONTROL'S OPERATOR ID
&CGLOBAL NETCNTL
&NETCNTL = NETOP1
* SET TIME INTERVALS TO REMIND NET CONTROL OF LINES IN DB
&CGLOBAL MSGTIME
&MSGTIME = 00:15
* SET TIME OF DAY TO DISCONNECT DB LINES
&CGLOBAL DISTIME
&DISTIME = 19:30
* SET THE NUMBER OF DIAL BACKUP LINES AVAILABLE
&CGLOBAL DBLNO
&DBLNO = 2
* SET FLAG IDB007 HAS NOT BEEN RUN
&CGLOBAL IDB007X
&IDB007X = N
* DEFINE LINE VARIABLES AND SET TO N
&LNO = 1
-LNLP01
&CGLOBAL DBLN&LNO
&DBLN&LNO = N
&LNO = &LNO + 1
&IF &LNO > &DBLNO &THEN &GOTO -CONT01
&GOTO -LNLP01
-CONT01
&DBLN1 =  31
MSG &REQSTER,VARIABLES SET BY CLIST IDB999


SETGB

&CONTROL ERR
* CLIST TO SET A GLOBAL VARIABLE
* THIS CLIST KEEPS YOU FROM HAVING TO USE MESSAGE AUTOMATION WHICH
* IS SLOWER AND DOESN'T WORK FOR AUTHORIZED MESSAGE RECEIVERS.
* COMMAND SETGB VARIABLE TO VALUE
&VNAME = &1
&VALUE = &3
&WAIT 'EXCMD PPT,SETGBPPT &VNAME &VALUE &OPID',+
     DSI039I=-END03,*10=-ERROR,*ERROR=-ERROR
-END03
&EXIT
-ERROR
&WRITE >>>>  ERROR NO RESPONSE FROM PPT TO SET VARIABLE
&EXIT 8


SETGBPPT

&CONTROL ERR
* CLIST TO SET A GLOBAL VARIABLE
* THIS CLIST MUST RUN IN PPT
&GBNAME = &1
&VALUE = &2
&REQSTER = &3
&CGLOBAL &GBNAME
&&GBNAME = &VALUE
MSG &REQSTER,VARIABLE &GBNAME SET TO &VALUE


NCPNAME

&CONTROL ERR
* CLIST TO SET GLOBAL VARIABLE FOR NCP NAME SO OPERATOR DOESN'T
* HAVE TO ENTER IT AND THERE IS ONLY ONE PLACE TO CHANGE IT WHEN
* NCP CHANGES.
&CGLOBAL NCPNAME
SETGB NCPNAME TO NCP002


VTAM DEFINITIONS FOR DIAL BACKUP

 TITLE 'IBM DIAL BACKUP LINES DYNAMICALLY RECONFIGURED'
LINEDB1  LINE  ADDRESS=003,                                           X
               LPDATS=LPDA2,                                          X
               ISTATUS=INACTIVE,                                      X
               OWNER=MVSSA,                                           X
               SPEED=9600,                                            X
               MAXPU=6,                                               X
               NEWSYNC=NO
         SERVICE ORDER=(PUDB01),                                      X
               MAXLIST=6
PUDB01   PU    ADDR=D0,                                               X
               ISTATUS=INACTIVE,                                      X
               PUDR=YES
LUDB01   LU    LOCADDR=02
LINEDB2  LINE  ADDRESS=005,                                           X
               LPDATS=LPDA2,                                          X
               ISTATUS=INACTIVE,                                      X
               OWNER=MVSSA,                                           X
               SPEED=9600,                                            X
               MAXPU=6,                                               X
               NEWSYNC=NO
         SERVICE ORDER=(PUDB02),                                      X
               MAXLIST=6
PUDB02   PU    ADDR=D1,                                               X
               ISTATUS=INACTIVE                                       X


IDB011

IDB01DR  VBUILD TYPE=DR
         ADD   TO=LINEDB1
PU01I    PU    ADDR=C1                                                X
               DLOGMOD=RMT32782,MODETAB=CMSMODET,                     X
               USSTAB=CMSRMUS4
CHI02I   LU    LOCADDR=02
CHI03I   LU    LOCADDR=03

      and similarly for CHI04I to CHI22I

CHI23I   LU    LOCADDR=23
CHIPRT1B LU    LOCADDR=24,VPACING=0,PACING=0,DLOGMOD=RMT328XP
CHIPRT2B LU    LOCADDR=25,VPACING=0,PACING=0,DLOGMOD=RMT328XP


IDI011

IDI01DR  VBUILD TYPE=DR
         DELETE FROM=LINEDB1
PU01I    PU    ADDR=C1


Eric Roch
Lead Systems Programmer (USA)

