An enhancement to the NetView Status Monitor


INTRODUCTION

The NetView Status Monitor can be used to activate failing
resources automatically after a temporary error. Unfortunately,
if the resource has failed with a more permanent condition, a
situation can arise where the Status Monitor issues repeated
activate commands, leading to a network log full of spurious
messages and a screen full of alerts.

The NetView user exit and associated command lists shown in
this article form the basis of a system to control this problem
without going to the extreme of disabling the Status Monitor.

The system is based on the assumption that when a network
resource such as a line or cluster controller fails it will generate
one of the following events:

o      A Record Maintenance Statistics (RECMS) Request Unit
      (RU), which will be seen by the Hardware Monitor.

o      Message IST105I, indicating that the resource has gone
      inactive.

o      Message IST259I, indicating that the resource has gone
      inoperative.

When five of these events have occurred in five minutes, the
system issues an inactivate force command which should
permanently disable the resource and prevent the Status
Monitor from activating it again.

The messages can be handled with standard message table
automation techniques but earlier versions of NetView do not
allow the automation of alert data. The user exit below is given
control by the Hardware Monitor for every RU on its
Communications Network Management (CNM) interface. It
performs some simple analysis on the RU passed to it and
generates a message which can then be used in the normal way
by message automation.


INSTALLATION

To install this system the following steps should be followed:

o      Assemble and link-edit the user exit YJPXITCI. Ensure
      that the NetView macro library is included in the SYSLIB
      concatenation. The module should be link-edited as re-
      entrant and placed in a NetView STEPLIB library.

o      Copy the IST105I and IST105C command lists to a library
      in your NetView DSICLD concatenation.

o      Modify your Message Automation Table to include the
      following statements:

      IF MSGID='IST105I' & TEXT=MESSAGE
       THEN EXEC(CMD('IST105I ' MESSAGE) ROUTE(ONE AUTO1));
      IF MSGID='IST259I' & TEXT=MESSAGE
       THEN EXEC(CMD('IST105I ' MESSAGE) ROUTE(ONE AUTO1));
      IF MSGID='NET720I' & TEXT=MESSAGE
       THEN EXEC(CMD('IST105I ' MESSAGE) ROUTE(ONE AUTO1));

o      Add the following statement to your NetView DSIPARM
      library member BNJMBDST:
      DSTINIT XITCI=YJPXITCI

o      Add a timed event to run the command list IST105I near
      midnight. This is necessary to clear down variables used
      by the system as the IST105I command list gets confused
      with day changes!

o      Finally, restart NetView.


FINAL COMMENTS

o      Obviously the user exit can be called anything you like -
      just remember to change the BNJMBDST statement.

o      You can change the message number issued by the user
      exit but remember to change the message automation table
      entry as well.

o      The IST105I command list issues an inactivate force
      command after five failures in five minutes. You may want
      to review those figures, and consider putting out an alert,
      message, etc.

o      The message table routes the command list execution to
      user AUTO1. This can be changed to any valid
      disconnected NetView user.


YJPXITCI SOURCE CODE

         TITLE 'YJPXITCI - NetView 1.3.0 CNM interface input user exit'
***********************************************************************
*                         - COMMENT -                                 *
*---------------------------------------------------------------------*
* XITCI is invoked by the Data Services Task (DST) after Communicat-  *
* -ions Network Management (CNM) data is received.                    *
* This exit scans for RECMS RUs indicating errors (as opposed to      *
* statistics) and issues a message for the resource affected so       *
* that it can be processed using message automation.                  *
***********************************************************************
*                      - REGISTER USAGE -                             *
* R0 - MACROs/work                 R8  ->Input or DSIMQS buffer       *
* R1 - MACROs/work                 R9  ->Main Vector Table            *
* R2 - Work                        R10 - *Unused*                     *
* R3 - Work                        R11 - *Unused*                     *
* R4 - Work                        R12 - Base                         *
* R5 - *Unused*                    R13 ->GETMAINed area ($ENTERR)     *
* R6 ->Task Information Block      R14 - MACROs/work                  *
* R7 ->Task Vector Table           R15 - MACROs/work                  *
***********************************************************************
*                        - DEPENDENCY -                               *
* Executes as a user exit under NetView 1.3.0 .                       *
* NPDA start-up parameters must specify :                             *
* DSTINIT XITCI=YJPXITCI .                                            *
***********************************************************************
*                    - EXTERNAL ROUTINES -                            *
* None .                                                              *
***********************************************************************
*                         - MACROS -                                  *
* NCCF  - DSICBS, DSIMQS.                                             *
***********************************************************************
*                   - ENVIRONMENT -                                   *
* Reentrant, serially reusable, authorization code 0.                 *
* I/O to master NCCF operator via DSIMQS MACRO.                       *
***********************************************************************
         TITLE 'YJPXITCI - MACROS'
***********************************************************************
YJPXITCI CSECT ,
         DSICBS DSICWB,DSIMVT,DSIPDB,DSISVL,DSISWB,DSITIB,DSITVB,DSIUSE
         REGEQU ,
***********************************************************************
         TITLE 'YJPXITCI - GETMAINED WORKAREA'
***********************************************************************
SAVEAREA DSECT ,
*--------------------------------- REGISTER SAVEAREA -----------------*
         DS    18F
*--------------------------------- DOUBLEWORDS -----------------------*
DW       DS    D                   WORKAREA
*--------------------------------- BUFFER FOR DSIMQS MACRO -----------*
CMDHDR   DS    XL24                COMMAND HEADER
CMDEXT   DS    XL12                COMMAND EXTENSION
CMDTEXT  DS    XL100               COMMAND DATA
***********************************************************************
         TITLE 'YJPXITCI - SAVEAREA CHAINING; INITIALIZATION'
***********************************************************************
YJPXITCI CSECT ,
         USING YJPXITCI,R15
         STM   R14,R12,12(R13)
         LA    R11,0(,R15)
         GETMAIN R,LV=4096
         DROP  R15
         ST    R0,0(,R1)
         ST    R1,8(,R13)
         ST    R13,4(,R1)
         LM    R13,1,8(R13)
         XC    8(64,R13),8(R13)
         USING YJPXITCI,R11
*---------------------------------------------------------------------*
         USING SAVEAREA,R13        (GETMAINED WORKAREA)
         USING DSIUSE,R12          (INPUT PARAMETER LIST)
         USING DSIMVT,R9           (MAIN VECTOR TABLE)
         USING BUFHDR,R8           (BUFFER HEADER)
         USING DSITVB,R7           (TASK VECTOR TABLE)
         USING DSITIB,R6           (TASK INFORMATION BLOCK)
*---------------------------------------------------------------------*
         LR    R12,R1              ->INPUT PARAMETER LIST
         L     R7,USERTVB          ->TASK VECTOR BLOCK (TVB)
         L     R9,TVBMVT           ->MAIN VECTOR TABLE (MVT)
         L     R6,TVBTIB           ->TASK INFORMATION BLOCK (TIB)
***********************************************************************
         TITLE 'YJPXITCI - ISSUE MESSAGE FOR ERROR RECMS'
***********************************************************************
*--------------------------------- LOCATE INPUT BUFFER ---------------*
         L     R8,USERMSG          ->INPUT BUFFER
*--------------------------------- CHECK FOR CORRECT RU TYPES --------*
         LH    R2,HDRTDISP         INPUT BUFFER MESSAGE OFFSET
         LA    R2,0(R2,R8)         ->INPUT BUFFER DATA
         LH    R3,HDRMLENG         INPUT BUFFER DATA LENGTH
         CLC   0(3,R2),=X'810812'  DELIVER RU?
         BNE   EXITASIS            (NO )
         CLC   8(3,R2),=X'010381'  RECMS?
         BNE   EXITASIS            (NO )
         CLI   15(R2),X'80'        BSC/SS DEVICE LINE ERRORS?
         BE    XITMSG              (YES)
         CLI   15(R2),X'82'        SNA LINK PERMANENT ERRORS?
         BE    XITMSG              (YES)
         CLI   15(R2),X'83'        SNA STATION PERMANENT ERRORS?
         BE    XITMSG              (YES)
         B     EXITASIS            EXIT WITHOUT MESSAGE
*--------------------------------- EXTRACT RESOURCE NAME -------------*
XITMSG   SR    R4,R4
         ICM   R4,3,6(R2)          LENGTH OF RECMS RU
         LA    R4,8(R4,R2)         ->START OF HIERARCHY
         CLI   0(R4),0             ANY HIERARCHY?
         BE    EXITASIS            (NO )
         SR    R1,R1
         IC    R1,1(,R4)           LENGTH OF REPORTING STATION
         LA    R4,2(R4,R1)         ->NEXT ENTRY IN HIERARCHY
         CLI   0(R4),0             END OF HIERARCHY?
         BE    EXITASIS            (YES)
         MVC   DW,BLANKS           CLEAR WORKAREA
         IC    R1,1(,R4)           LENGTH OF FIRST ENTRY IN HIERARCHY
         BCT   R1,*+10             MOVE TO WORKAREA :-
         MVC   DW(*-*),2(R4)
         EX    R1,*-6
*--------------------------------- ISSUE INFORMATION MESSAGE ---------*
         LA    R8,CMDHDR           ->NEW BUFFER
         MVC   HDRMLENG,=Y(L'M001)
         MVC   HDRBLENG,=Y(136)
         MVI   HDRMTYPE,C'U'
         MVC   HDRTDISP,=Y(36)
         MVC   CMDTEXT(L'M001),M001
         MVC   CMDTEXT+M001NAME(8),DW
         MVC   HDRDOMID,MVTCURAN
         DSIMQS SWB=USERSWB,                                          *
               BFR=(8),AUTHRCV=YES
         B     EXITASIS
***********************************************************************
         TITLE 'YJPXITCI - RETURN TO CALLER'
***********************************************************************
*--------------------------------- ALLOW MESSAGE TO BE DISPLAYED -----*
EXITASIS LA    R15,USERASIS
         B     YJP$EXIT
*--------------------------------- SUPPRESS MESSAGE DISPLAY ----------*
EXITDROP LA    R15,USERDROP
         B     YJP$EXIT
*--------------------------------- RETURN TO CALLER ------------------*
YJP$EXIT L     R13,4(,R13)
         LR    R14,R15
         L     R1,8(,R13)
         L     R0,0(,R1)
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R14
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         OI    15(R13),X'01'
         BR    R14
***********************************************************************
         TITLE 'YJPXITCI - CONSTANTS'
***********************************************************************
ZEROS    DC    D'0'
BLANKS   DC    CL8' '
M001     DC    C'NET720I Error RECMS received for ********'
M001NAME EQU   33,8,C'C'
***********************************************************************
         END   ,


IST105I CLIST

/*********************************************************************/
/* FUNCTION        Count occurrences of 'resource INACTIVE' or 'INOP'*/
/*                 type messages so that when STATMON keeps          */
/*                 activating a dead resource it can be disabled.    */
/* DEPENDENCY      Entry in message table for IST105I, IST259I,      */
/*                 and NET720I                                       */
/*                 CNM user exit YJPXITCI                            */
/* ENVIRONMENT     NetView V1R3+REXX+VTAM320                         */
/* SYNTAX          IST105I text_of_message_IST105I/IST259I/NET720I   */
/* RETURN CODES    None                                              */
/*********************************************************************/
arg w1 w2 .  . w5 w6 .
select
   when w1 = 'IST105I' then resource = w2
   when w1 = 'IST259I' then resource = w5
   when w1 = 'NET720I' then resource = w6
   otherwise do
      say 'NET740I Invalid message; msgid='w1
      exit
   end
end
if resource = 'ABCDEFG' then exit /* Ignore this resource            */
'globalv getc ist105i.0'          /* Get table counter               */
if ist105i.0 = '' then ist105i.0 = 0 /* Initialize if necessary      */
ctime = time(s)                   /* Get current time                */
count = resource'.#'              /* Set number of hits              */
'globalv getc 'count              /* Get number of hits              */
ftime = resource'.t'              /* Set time of first hit           */
'globalv getc 'ftime              /* Get time of first hit           */
if value(count) = '' then do      /* If it is a first time hit :     */
 interpret count'=1'              /* -set hit count                  */
 interpret ftime'=ctime'          /* -set time                       */
 'globalv putc 'count             /* -update global variable         */
 'globalv putc 'ftime             /* -update global variable         */
 ist105i.0 = ist105i.0 + 1        /* -increment table counter        */
 i         = ist105i.0            /*                                 */
 name = 'IST105I.'i               /* -build new variable name        */
 interpret name'=resource'        /* -add resource name to variable  */
 'globalv putc ist105i.0'         /* -update table counter           */
 'globalv putc 'name              /* -add new table variable         */
 exit                             /* -exit                           */
end                               /*                                 */
dtime = ctime - value(ftime)      /* Get time difference             */
if dtime > 600 then do            /* If time limit exceeded :        */
 interpret ftime'=ctime'          /* -set new first time             */
 interpret count'=1'              /* -set hits to zero               */
end                               /* -exit                           */
else do                           /* If within time limit :          */
 if value(count) >= 5 then do     /* -and if hits exceeds limit :    */
  'INACTF 'resource               /*  -inactivate resource           */
  interpret ftime'=ctime'         /*  -set new first time            */
  interpret count'=1'             /*  -set hits to zero              */
 end                              /*  -exit                          */
 else do                          /* -if hits within limit :         */
  interpret count'=value(count)+1'/*  -increment hit count           */
 end                              /*  -exit                          */
end                               /* -exit                           */
'globalv putc 'count              /* Update global variable          */
'globalv putc 'ftime              /* Update global variable          */
exit                              /* Exit                            */


IST105C CLIST

/*********************************************************************/
/* FUNCTION        Clear global variables used by IST105I            */
/* DEPENDENCY      None                                              */
/* ENVIRONMENT     NetView V1R3+REXX                                 */
/* SYNTAX          IST105C                                           */
/* RETURN CODES    None                                              */
/*********************************************************************/
'globalv getc ist105i.0'               /* Get number of variables    */
if ist105i.0 = '' then do              /* Any?                       */
   say 'NET730I No resources to clear' /*  -no                       */
   exit                                /*  -exit                     */
end                                    /*                            */
do j = 1 to ist105i.0                  /* Start of clear loop        */
   name = 'IST105I.'j                  /* Set table name             */
   'globalv getc 'name                 /* Acquire it                 */
   res = value(name)                   /* Get its contents           */
   count = res'.#'                     /* Build count name           */
   'globalv getc 'count                /* Get its contents           */
   interpret count"=''"                /* Clear it                   */
   'globalv putc 'count                /* Update it                  */
   ftime = res'.t'                     /* Build first_time name      */
   'globalv getc 'ftime                /* Get its contents           */
   interpret ftime"=''"                /* Clear it                   */
   'globalv putc 'ftime                /* Update it                  */
   interpret name"=''"                 /* Clear table name           */
   'globalv putc 'name                 /* Update it                  */
end                                    /* End of clear loop          */
ist105i.0 = ''                         /* Clear number of variables  */
'globalv putc ist105i.0'               /* Update it                  */
exit                                   /* Return to caller           */


Dave Martin
Consultant Systems Programmer
IMI Computing Ltd (UK)

