Reorganizing the NetView session monitor database

After installing NetView Version 2.1, we found that the
session monitor would display the following message when an
option was chosen from the primary menu:

      AAU050I DATA SERVICES FAILURE IN PROCESSING LAST COMMAND

This was found to be caused by the primary database having
reached the maximum number of extents, so reorganizing the
database using IDCAMS solved the problem.

To ease this process, the following REXX EXEC was written
which stops the session monitor, frees the database, and
performs the reorganization. Once the reorganization is
complete, the database is reallocated and the session monitor
restarted. The same EXEC is able to perform a reorganization
of the primary and secondary databases of the session and
hardware monitors.

The REXX IDCAMS command used by the EXEC requires
that the following DD statements are included in the NetView
start-up procedure:

NLDMORGP DD    DSN=NETVIEW.USRJCL(NLDMORGP),DISP=SHR
NLDMORGS DD    DSN=NETVIEW.USRJCL(NLDMORGS),DISP=SHR
NPDAORGP DD    DSN=NETVIEW.USRJCL(NPDAORGP),DISP=SHR
NPDAORGS DD    DSN=NETVIEW.USRJCL(NPDAORGS),DISP=SHR

The above DD statements define the members containing the
IDCAMS statements necessary to perform a reorganization of
each of the four databases. A listing of NLDMORGP is shown.
The EXEC could also be run from the Message Automation
Table, when, for example, the session monitor primary
database runs out of extents, by including the following entry:

IF MSGID = 'AAU022I' THEN
   EXEC(CMD('REORG NLDM P') ROUTE(ONE AUTO1));


REORG REXX EXEC

/**********************************************************************/
/* Initialize error handling.                                         */
/**********************************************************************/
Trace 0
/**********************************************************************/
/* Initialize variables.                                              */
/**********************************************************************/
ARG SUBSYS LOG
LOG = Strip(LOG)
Select
   When SUBSYS = 'NLDM' then
      Do
         If LOG = 'S' then VSAM = 'AAUVSSL'
         Else
            Do
               LOG = 'P'
               VSAM = 'AAUVSPL'
            End
         TASK.1 = 'DSIAMLUT'
         TASK.2 = 'AAUTCNMI'
         TASK.3 = 'AAUTSKLP'
      End
   When SUBSYS = 'NPDA' then
      Do
         If LOG = 'S' then VSAM = 'BNJLGSE'
         Else
            Do
               LOG = 'P'
               VSAM = 'BNJLGPR'
            End
         TASK.1 = 'BNJMNPDA'
         TASK.2 = 'BNJDSERV'
         TASK.3 = 'BNJDSE36'
      End
   Otherwise
      Do
         Help REORG
         Exit
      End
End
/**********************************************************************/
/* Initialize variables.                                              */
/**********************************************************************/
TASK.4 = 'DSICRTR'
TASK.5 = 'CNM06LUC'
NOTASK = 4
START. = 0
STOP. = 0
/**********************************************************************/
/* Issue commands to stop tasks and wait for responses.               */
/**********************************************************************/
Do I = 1 to 3
   'TRAP AND SUPPRESS MESSAGES DSI200I DSI008I'
   'STOP TASK='TASK.I
   'WAIT 15 SECONDS FOR MESSAGES'
   Select
      When EVENT() = 'M' then
         Do
            'MSGREAD'
            If MSGID() = 'DSI200I' & MSGVAR(2) = TASK.I then STOP.I = 1
            If MSGID() = 'DSI008I' & MSGSTR() = "'"TASK.I"' NOT ACTIVE"
               then STOP.I = 1
         End
      When EVENT() = 'T' then
         Do
            Say 'Timeout waiting for 'TASK.I' to stop'
            SIGNAL RESTART
         End
      Otherwise
         Do
            Say 'Error waiting for 'TASK.I' to stop'
            SIGNAL RESTART
         End
   End
   'TRAP NO MESSAGES'
   'FLUSHQ'
End
/**********************************************************************/
/* Check that all 3 tasks have stopped successfully.                  */
/**********************************************************************/
If STOP.1 + STOP.2 + STOP.3 < 3 then
   Do
   Say SUBSYS' has not stopped - the following task(s) are still active'
      Do I = 1 to 3
         If STOP.I = 0 then say '                'TASK.I
      End
      SIGNAL RESTART
   End
/**********************************************************************/
/* Issue commands to free tasks and wait for responses.               */
/**********************************************************************/
'TRAP AND SUPPRESS MESSAGES CNM272I'
"FREE DATASET('NETVIEW.SA06."VSAM"')"
'WAIT 15 SECONDS FOR MESSAGES'
Select
   When EVENT() = 'M' then
      Do
         'MSGREAD'
         IF MSGSTR() ¬= 'NETVIEW.SA06.'VSAM' IS NOW DEALLOCATED' then
            Do
               Say 'Unable to deallocate NETVIEW.SA06.'VSAM
               SIGNAL RESTART
            End
      End
   When EVENT() = 'T' then
      Do
         Say 'Timeout waiting for 'VSAM' to be freed'
         SIGNAL RESTART
      End
   Otherwise
      Do
         Say 'Error waiting for 'VSAM' to be freed'
         SIGNAL RESTART
      End
End
'TRAP NO MESSAGES'
'FLUSHQ'
Say '******************************************* /'
Say '*       'SUBSYS' shut down successfully       *<=========='
Say '******************************************* \'
/**********************************************************************/
/* Reorg the VSAM file.                                               */
/**********************************************************************/
'TRAP AND SUPPRESS MESSAGES CNM270I'
'IDCAMS 'SUBSYS'ORG'LOG
'WAIT 60 SECONDS FOR MESSAGES'
Select
   When EVENT() = 'M' then
      Do
         'MSGREAD'
         If MSGVAR(9) ¬= '00' then
            Do
               Say '******************************************* /'
               Say
'*      'SUBSYS'ORG'LOG'unsuccessful (RC='MSGVAR(9)')      *<=========='
               SAY '******************************************* \'
               SIGNAL REALLOC
            End
      End
   When EVENT() = 'T' then
      Do
         Say 'Timeout waiting for reply from 'SUBSYS'ORG'LOG
         SIGNAL REALLOC
      End
   Otherwise
      Do
         Say 'Error waiting for reply from 'SUBSYS'ORG'LOG
         SIGNAL REALLOC
      End
End
'TRAP NO MESSAGES'
'FLUSHQ'
Say '******************************************* /'
Say '* 'SUBSYS'ORG'LOG' completed successfully (RC=00) *<=========='
Say '******************************************* \'
/**********************************************************************/
/* Reallocate dataset 'NETVIEW.SA06.xxxxxxx' to NetView (xxxxxxx).    */
/**********************************************************************/
REALLOC:
   'TRAP AND SUPPRESS MESSAGES CNM272I'
   "ALLOC DATASET('NETVIEW.SA06.'"VSAM"') DDNAME("VSAM") SHR"
   'WAIT 15 SECONDS FOR MESSAGES'
   Select
      When EVENT() = 'M' then
         Do
            'MSGREAD'
            If MSGSTR() ¬= VSAM' IS NOW ALLOCATED' then
               Do
                  Say 'Unable to allocate NETVIEW.SA06.'VSAM
                  SIGNAL QUIT
               End
         End
      When EVENT() = 'T' then
         Do
            Say 'Timeout waiting for 'VSAM' to be allocated'
            SIGNAL QUIT
         End
      Otherwise
         Do
            Say 'Error waiting for 'VSAM' to be allocated'
            SIGNAL QUIT
         End
   End
   'TRAP NO MESSAGES'
   'FLUSHQ'
/**********************************************************************/
/* Issue commands to start tasks and wait for responses.              */
/**********************************************************************/
RESTART:
   If SUBSYS = 'NPDA' then
      Do
         NOTASK = 3
         TASK.3 = TASK.4
         START.4 = 1
      End
   Do I = 1 to NOTASK
      'TRAP AND SUPPRESS MESSAGES DSI530I DSI041I BNJ014I'
      'START TASK='TASK.I
      'WAIT 15 SECONDS FOR MESSAGES'
      Select
         When EVENT() = 'M' then
            Do
               'MSGREAD'
               If MSGID() = 'DSI530I' & MSGVAR(1) = TASK.I then
                  START.I = 1
               If MSGID() = 'DSI041I' & MSGVAR(1) = TASK.I then
                  START.I = 1
               If MSGID() = 'BNJ014I' & MSGVAR(1) = SUBSYS then
                  START.I = 1
            End
         When EVENT() = 'T' then
            Do
               Say 'Timeout waiting for 'TASK.I' to start'
               SIGNAL QUIT
            End
         Otherwise
            Do
               Say 'Error waiting for 'TASK.I' to start'
               SIGNAL QUIT
            End
      End
      'TRAP NO MESSAGES'
      'FLUSHQ'
   End
/**********************************************************************/
/* Check that all 4 tasks have started successfully.                  */
/**********************************************************************/
   If START.1 + START.2 + START.3 + START.4 < 4 then
      Do
      Say SUBSYS' has not started - the following task(s) are inactive'
         Do I = 1 to 4
            If START.I = 0 then say '                'TASK.I
         End
         SIGNAL QUIT
      End
   'START TASK='TASK.5
   Say '******************************************* /'
   Say '*      'SUBSYS' re-started successfully       *<=========='
   Say '******************************************* \'
   Exit
/**********************************************************************/
/* Quit without starting if file has not been reallocated.            */
/**********************************************************************/
QUIT:
   Say '******************************************* /'
   Say '*         Unable to re-start 'SUBSYS'         *<=========='
   Say '******************************************* \'
   Exit


HELP PANEL FOR REORG EXEC

HELP=CNM5HCCL
***
¬LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS
¬A+EUYREG00                         %REORG                        +Page 1 of 1¬
¬S                                                                            ¬L
¬ $REORG                                                                      ¬A
¬L                                                                            ¬S
¬A$The REORG command list reorganizes the NLDM and NPDA VSAM clusters.        ¬
¬S                                                                            ¬L
¬ $The format of the REORG command is:                                        ¬A
¬L                                                                            ¬S
¬A$---------------------------------------------------------------------------¬
¬S                                                                            ¬L
¬ $REORG NLDM|NPDA P|S                                                        ¬A
¬L                                                                            ¬S
¬A$---------------------------------------------------------------------------¬
¬S                                                                            ¬L
¬ \WHERE:$ NLDM | NPDA   Selects Session or Hardware monitor.                 ¬A
¬L                                                                            ¬S
¬A        \P$| S         Selects Primary or Secondary cluster.                ¬
¬S                                                                            ¬L
¬                                                                             ¬A
¬LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS LAS
%Action===>~&CUR
$          PF1= Help   PF2= End  %PF3= Return$


IDCAMS STATEMENTS TO REORGANIZE THE SESSION MONITOR

SET MAXCC = 0
VERIFY                                     -
        DATASET(NETVIEW.SA06.AAUVSPL)
IF MAXCC = 0 THEN DO
DEFINE                                     -
    CLUSTER                                -
        (NAME (NETVIEW.REORG.AAUVSPL)      -
        MODEL (NETVIEW.SA06.AAUVSPL) )
END
IF MAXCC = 0 THEN DO
REPRO                                      -
        INDATASET (NETVIEW.SA06.AAUVSPL)   -
        OUTDATASET (NETVIEW.REORG.AAUVSPL)
END
IF MAXCC = 0 THEN DO
DELETE                                     -
        NETVIEW.SA06.AAUVSPL CLUSTER
END
IF MAXCC = 0 THEN DO
DEFINE                                     -
    CLUSTER                                -
        (NAME (NETVIEW.SA06.AAUVSPL)       -
        INDEXED                            -
        SHAREOPTIONS (2)                   -
        VOLUMES (SMP369)                   -
        CYLINDERS (3 1)                    -
        KEYS (27 0)                        -
        RECORDSIZE (102 4086)              -
        REUSE                              -
        FREESPACE (5 5) )                  -
    DATA                                   -
        (CONTROLINTERVALSIZE (8192) )      -
    INDEX                                  -
        (CONTROLINTERVALSIZE (2048)        -
        IMBED)
END
IF MAXCC = 0 THEN DO
REPRO                                      -
        INDATASET (NETVIEW.REORG.AAUVSPL)  -
        OUTDATASET (NETVIEW.SA06.AAUVSPL)
END
IF MAXCC = 0 THEN DO
DELETE                                     -
        NETVIEW.REORG.AAUVSPL CLUSTER
END
IF MAXCC = 0 THEN DO
LISTCAT                                    -
        ENTRIES (NETVIEW.SA06.AAUVSPL)     -
        ALL
END


John  Cameron
Technical Specialist
The Life Association of Scotland (UK)       c Life Association of Scotland 1992

