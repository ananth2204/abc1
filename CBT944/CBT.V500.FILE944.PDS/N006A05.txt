SNA NJE performance


INTRODUCTION

Network Job Entry (NJE) provides a mechanism for systems to
transfer jobs and job output between each other. Jobs can be
submitted on one system, transmitted to another system for
execution, and any resulting output transmitted back to the
original system.

NJE uses SNA to establish sessions between application
Logical Units supported by job entry/spooling or file transfer
software (eg JES2, BDT, RSCS, POWER, etc) on different
systems connected by an SNA network.

For many companies, NJE represents a fairly secure method of
allowing access to a system without any complex security
procedures. However, one of the drawbacks of NJE is that all
too often it either fails to work and a job or output remains on
spool, defying all attempts to transmit it, or, more frequently,
transmission is slow and appears to be at random intervals.

Jobs or output can appear to spend a long time on the queue
before transmission occurs. Often an NJE network crosses
company and corporate boundaries and so is at the mercy of
unrelated support groups. Node names and connections must be
agreed and maintained consistently across the NJE network.


MONITORING NJE PERFORMANCE

Monitoring the performance of NJE and diagnosing problems is
difficult for several reasons.

o      NJE draws on features and facilities supported by other key
components, primarily JES2 (also JES3 or POWER) and SNA.

o      NJE runs as a pseudo subtask of JES, activating separate
      transmitters and receivers for jobs and job output
      (SYSOUT). Therefore NJE activity is interleaved with
      other JES activity.

o      Since NJE uses SNA for communication, performance is
      dependent upon the response from the supporting
      mainframe system and communications network.

Although it is necessary to ensure that NJE runs effectively,
problems concerning NJE performance tend to be concerned
not so much with how to make NJE run as fast as possible but
rather how to ensure that NJE activity does not cause problems
either with the system on which it is active or the one(s) with
which it is communicating.

Quite often NJE itself can be responsible for, or at least a
contributor to, the performance problem it is experiencing. It is
certainly possible for one system running NJE to swamp
another system.

Large volumes of NJE data may cause VTAM buffer shortages
on the receiving system, which may also be spending an
excessive amount of JES processing time handling the NJE
traffic, to the detriment of other work.

Most installations run JES at a high priority and therefore allow
it to accrue almost unlimited service.

Uncontrolled NJE traffic could also stress the connecting
network either by monopolizing the SDLC link(s) or by
depleting NCP buffers and so causing NCP to enter slow-
down.

All of these problems have been observed, particularly when
one system is more powerful than another in terms of CPU
power or front-end processor capacity, and so can swamp the
less powerful partner system.

A similar effect could be experienced if the receiving NJE
system has a large active processing load and therefore only
limited available capacity - the NJE traffic may be the last
straw!

Certain guidelines can be drawn to ensure that NJE runs
correctly. In essence this means configuring NJE so that it
behaves in a manner that is optimal for all concerned. First,
NJE must be correctly set up to interface to the
communications network efficiently. In particular, attention
should be paid to network buffers and pacing.


NJE BUFFERS

Buffers maintained by JES for NJE operations (and all other TP
operations) are determined by the BUFSIZE and BUFNUM
values specified on the TPDEF initialization parameter. JES
prefixes a 268-byte RPL to each TP buffer used for SNA and
attempts to fit as many buffers as possible onto a page of
storage with the condition that a buffer cannot span a page
boundary.

The value of BUFSIZE should therefore be chosen carefully to
avoid excessive virtual storage usage and fragmentation. For
optimum storage usage one of the following values should be
specified for BUFSIZE:

o      3828 for 1 buffer per page

o      1780 for 2 buffers per page

o      1092 for 3 buffers per page

o      756 for 4 buffers per page.

The actual value chosen will depend upon the nature of the
NJE data traffic. If NJE is being used primarily to route jobs to
other systems, then only a small buffer is required: if the main
load comprises large print volumes, then larger buffers would
be more efficient. Note that whatever size is chosen, it must be
less than or equal to the buffer size specified in the IOBUF
definition of the VTAM start-up parameters, ie:

      IOBUF=(,bufsize,,,)


PACING

Pacing is the mechanism employed in SNA to control the rate
at which data is sent from one node to another. Two nodes in
session agree on a pacing value, which determines how many
packets of data will flow before a response is raised confirming
receipt (for more details see the article, An introductory look at
pacing,  in SNA Update, Issue 2, 1991).

It is possible to deactivate the pacing mechanism by specifying
a pacing value of zero, and in many installations this is either
specified or defaulted for NJE. However, pacing should never
be zero for NJE at it can result in excessive VTAM buffer
usage, flooded lines, and NCP slow-down problems mentioned
earlier.

To satisfy SNA logic requirements, the system on which the
$SN,A=node-name command is issued is deemed the Primary
Logical Unit (PLU) and the responding system becomes the
Secondary Logical Unit (SLU). NJE uses one-stage pacing in
both the receiving and transmitting directions, which means
that:

o      The primary sending pacing (PSNDPAC) value equals the
      secondary receiving pacing (SRCVPAC) value.

o      The secondary sending pacing (SSNDPAC) value equals
      the primary receiving pacing (PRCVPAC) value.

Pacing is activated for NJE by specifying a value for
VPACING on the APPL definitions for the NJE nodes and
supplying SSNDPAC in a MODETAB definition at the SLU.

For example:

          VBUILD TYPE=APPL
nodename  APPL   AUTH=(PASS,ACQ),
                 MODETAB=mode-table,
                 DLOGMOD=log-mode,
                 VPACING=nn

defines the NJE PLU application node to VTAM.

The associated MODETAB is along these lines:

mode-table  MODETAB
            MODEENT  LOGMODE=log-mode,
                     PSNDPAC=X'nn',
                     PRCVPAC=X'nn',
                     SSNDPAC=X'nn'

Note that the value chosen for nn must be the same for all
definitions.

As a minimum, the pacing value should be the number of lines
in the transmission group representing a communications link
between the NJE systems, otherwise not all lines in the group
will be used. Beyond that, choose a value which reflects the
total number of active NJE sessions such that the sum of all the
sessions can be comfortably accommodated by VTAM and the
intermediate NCPs.

For a large number of NJE connections, a pacing value of 3 or
4 is suggested: for only a few connections, this value can be
higher.

NJE determines the values for the pacing parameters during
session set-up by examining the bind image sent from the SLU
to the PLU, the LOGMODE entry, and the APPL entry. If any
conflict or inconsistencies are found then it is probable that
pacing values of zero will be assumed by NJE.

Whether or not pacing is in effect for NJE can be determined
via the NetView Session Monitor session parameter's panel.


INVESTIGATING POOR PERFORMANCE

Assuming that NJE has been configured correctly and NJE
performance is not acceptable, several areas can be
investigated.

First, in a large NJE configuration it is possible that NJE data
will arrive at a much faster rate than output generated by batch
programs, so check whether the size and number of spool
buffers is adequate for the volume of NJE traffic.

Next, check that the response times for the DASD containing
the spool and checkpoint datasets are acceptable. In normal
operations a poor response time for the volume(s) containing
the spool datasets may be acceptable but this will slow down
the rate at which NJE data can be handled. Do not forget to
check the duplex datasets if duplexing is active.

Finally, check the relative dispatching priorities and
performance specifications of JES2 and VTAM. VTAM should
take a higher priority than JES2 to allow it to process requests
as soon as they are queued.

Storage and domain isolation via IPS parameters should be
considered for VTAM to allow it to retain real storage when
NJE activity becomes high. Whether the working set
specification (WPSS parameter) or paging limits (PPGRT
parameter) are used will depend upon the storage constraints of
your system.

No sensible evaluation of performance can be undertaken
without some form of measurement, but, as mentioned earlier,
this is difficult for NJE.

Tracing is one possibility. Start GTF specifying TRACE=USR
to record user-generated GTRACE requests. Activate VTAM
external tracing for the line(s) supporting the NJE link by
issuing the following command:

      F NET,TRACE,ID=line-name,TYPE=LINE,MODE=EXT

GTF data must then be formatted and printed. The trace will
have recorded the data flow and protocol in effect. This can be
examined for problems relating to pacing or network
performance. Some caution should be exercised using tracing
since a large amount of data could be produced for a busy NJE
network.

Some IBM publications suggest the use of SMF records to
analyse performance - such an approach is not recommended.
It is complex since it involves the collecting and merging of
records from all nodes and the development of an analysis
program or utility. Collection of records from other nodes may
not be possible if the nodes are at sites belonging to other
companies. If collection is accomplished, the analysis only
reveals the symptoms of the problem and gives little clue as to
the cause.

Since there is little to do to implement NJE beyond the addition
of a few parameters to the JES2 initialization parameters and
the VTAM customization described above, problems with NJE
usually relate either to parameter errors or to communications.
To verify that communications are active perform the
following:

1      Check all APPLication nodes are active
2      Check the NCPs connecting the NJE nodes are active
3      Check the line connecting the NJE nodes is active
4      Issue the $SN,A=node-name command.

NJE supports inter-node communication via the $M command.
This can be used to attempt to contact another NJE node to
verify availability, for example:

      $Mnode-number,'hello message'

where node-number is the number assigned to the node in the
JES2 initialization parameters. A response of 'NOT
CONNECTED' to this command implies that there is a
problem with the CONNECT statements in the initialization
parameters and these should be checked. A common practice is
to define permanent connections between NJE nodes rather
than allowing NJE to dynamically set up connections. If one
NJE node defines a permanent connection via a CONNECT
statement, all nodes must have a similar definition.

Brian Alford
Systems Consultant
Aranda (UK)

