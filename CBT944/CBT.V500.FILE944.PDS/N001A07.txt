You don't need to define CDRSCs


INTRODUCTION

In order to use VTAM cross domain communication, that is
communication between two or more VTAM domains, first of
all we must define each domain with a CDRM statement, then
we need to define the connections between the domains with a
PATH statement, and then the resources that belong to each
domain.  Resources include applications (CICS etc) plus
terminals and printers.  Finally, we must add the names of
these copy books to our ATCCON01.B copy book so that they
are activated automatically when VTAM comes up.

In order to access a resource in a remote domain, we would
normally define CDRSC statements in each domain that require
a resource in a remote domain.  These book names must be
added to our ATCCON01.B books.

If we take as an example the simple network illustrated in
Figure 1, in order for the terminal connected to access live
CICS (application-id CICSL), which is sitting under CDRM2,
and to print to the local printer, we must define CICSL in
CDRM1 as a remote resource like this:

      CATALOG  CICSL.B
               VBUILD TYPE=CDRSC
      CICSL    CDRSC  CDRM=CDRM2,ISTATUS=ACTIVE
      /+

In CDRM2, our printer should be defined as a remote resource
like this:

      CATALOG  P001.B
               VBUILD TYPE=CDRSC
      P001     CDRSC  CDRM=CDRM1,ISTATUS=ACTIVE

We should also change and catalogue our ATCCON01.B books
in both domains.


THE PROBLEM

The trouble with this is that each time we add a new resource
or move existing resources, besides having to remember to
define or redefine the resource, we also have to remember to
add or change all the BUILD CDRSC books for each resource
in each domain, and also to add or delete the names of these
books in each domain's ATCCON01.B copy book.  It is not
long before the number of CDRSC copy books starts to get out
of hand.

Continuing with our sample configuration, say we defined
CICSL on CDRM2 and now want to move it to CDRM3, we
would have to perform the following steps (assuming that the
PATHs and CDRMs had been defined previously):

1      In CDRM1, change the direction of the CDRSC book:
      -      V NET,INACT,ID=CICSL,F
      -      Recatalogue the CDRSC definition with
              CDRM=CDRM3
      -      V NET,ACT,ID=CICSL.

2      In CDRM2, remove the CDRSC and APPL definitions:
      -      V NET,INACT,ID=CICSL,F
      -      V NET,INACT,ID=P001,F
      -      Take down CICS
      -      Remove P001 and CICSL from ATCCON01.B.

3      In CDRM3, define CICSL and the remote printer:
      -      Catalogue the CDRSC definition for P001
      -      Catalogue the APPL definition for CICSL
      -      Bring CICSL up
      -      V NET,ACT,ID=P001
      -      V NET,ACT,ID=CICSL
      -      Add P001 and CICSL to the ATCCON01.B copy book.

Fortunately, there is a far better and easier way to accomplish
this.


THE SIMPLER WAY

The following solution works on VTAM Version 2.2 upwards.
Our system was VSE 2.1.5 with VTAM 3.1, VSE is currently
at 3.2.

We define our CDRMs and PATHs as usual but instead of
defining each CDRSC separately, all we need to do is build an
'adjacent' book in each domain for each resource in that
domain that needs to access a resource in another domain, and
to add this book to its ATCCON01.B book so that the adjacent
node is brought up automatically like this:

      CATALOG  ADJSCP01.B
               VBUILD  TYPE=ADJSSCP
               NETWORK
      CDRMx    ADJCDRM
      CDRMy    ADJCDRM
               .
               etc
               .
      /+

where CDRMx and CDRMy are the names of the other
CDRMs.  Don't define the owning CDRM.  I made this
mistake and my VTAM went haywire.

By making the above definitions, if someone tries to access a
resource (application, printer etc) that is not defined within
his/her own domain with an APPL or LBUILD statement,
VTAM will look for it in the CDRMs listed in the ADJSSCP
book.  Since the search is sequential, put the most frequently
used CDRMs first.  We now have complete freedom to move
and add applications and resources.

Be careful not to use the same name for different resources
since VTAM will not know which one you want and will go to
the first one it finds in its list of adjacent CDRMs.

If a terminal connected to CDRM1 wants constant access to the
application TESTL in CDRM3 and occasional access to CICSL
in CDRM, we should define ADJSCP01 as follows:

      CATALOG  ADJSCP01.B
               VBUILD  TYPE=ADJSSCP
               NETWORK
      CDRM3    ADJCDRM
      CDRM2    ADJCDRM
      /+

Going back to our original example and assuming that we have
defined an adjacent book in each domain and added its name to
each domain's ATCCON01.B book, if we want to access
CICSL in CDRM2 from a terminal connected to CDRM1 and
want CICSL to print on a printer in CDRM1 there is no need to
do anything else.

To move CICSL from CDRM2 to CDRM3 as we did
previously, we need to perform the following steps:

1      In CDRM1, there is no need to do anything.


2      In CDRM2, remove the APPL definition for CICSL:
      -      V NET,INACT,ID=CICSL,F
      -      Take down your CICS
      -      Remove CICSL from the ATCCON01.B book.

3      In CDRM3, add the APPL definition for CICSL:
      -      Catalogue the APPL definition for CICSL
      -      Bring CICSL up
      -      V NET,ACT,ID=CICSL
      -      Add CICSL to the ATCCON01.B book.


SUMMARY

Once you have defined each domain, the connections, the
resources, and the adjacent books; and added their names to the
ATCCON01.B book, you have complete accessibility to all
resources automatically from every domain.  You no longer
need CDRSCs.

To check the ADJSSCP list, you can enter D NET,ADJSSCPS
on the console.  This will give you your search list.

Yechezkel Ida
Systems Programmer
Menora Insurance Co Ltd (Israel)

