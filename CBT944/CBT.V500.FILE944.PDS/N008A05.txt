3174 status/usage displays in NetView

The following REXX EXECs were developed at our site to
enable operators to see easily, from one screen within
NetView, the status of a local SNA controller and also list all
the users currently using the controller.

The first EXEC (SNASTAT) is invoked by the following
command:

      SNASTAT nodename

where nodename is the name of the SNA major node.

This EXEC displays the following information:

o      Status of major node, PU, and LUs by colour
      -      Green - active
      -      Green inverse - active in session (LU only)
      -      White - pending
      -      Turquoise - never active
      -      Red - inactive
      -      Yellow       - any other state.

o      Number of active sessions.

o      Time screen was last refreshed.

Available function keys from the SNASTAT display are as follows:

o      PF3 - exit display
o      PF5 - refresh display
o      PF6 - roll to other NetView applications
o      PF12 - retrieve last command
o      PF13 - display user information on LU
o      PF14 - summary of active users on the controller (SNASUM exec)
o      PF21 - issue a command against a resource
o      PA1 - retrieve one of last 20 commands issued.

PF13 and PF21 require the cursor to be positioned on a
resource before the PF key is struck.

The second EXEC (SNASUMM) is invoked by the command:

      SNASUMM nodename

where nodename is the name of the SNA major node.

This EXEC displays the following information:

o      Status of major node, PU, and LUs by colour (as for SNASTAT)
o      The application that the LU is in session with
o      The department, name and telephone number of the user
o      Number of active sessions
o      Time screen was last refreshed.

Available function keys from the SNASUMM display are as follows:

o      PF3 - exit display
o      PF5 - refresh display
o      PF6 - roll to other NetView applications
o      PF7 - page up
o      PF8 - page down
o      PF12 - retrieve last command
o      PF13 - display controller status summary (SNASTAT)
o      PF21 - issue a command against a resource
o      PA1 - retrieve one of last 20 commands issued.

PF21 requires the cursor to be positioned on a resource before
the PF key is struck.

These EXECs will need the following changes to suit your own
naming convention. At our site the fifth character of the SNA
major node name and the PU name is the colour code of the
controller (eg LSDSR001).

      $DESC = 'FA C'substr(DEVID,5,1)' HR' - set display heading colour

      PUID ='USDS'||substr(DEVID,5,1)      - set the PU name

The information on users is stored in an 80-column dataset
called NETVIEW.VTAMADDR.OWNERS, which has the
following format.

      Col  1 -  8 = LU no 1 name
      Col 11 - 18 = LU no 2 name
      Col 21 - 28 = LU no 3 name
      Col 31 - 50 = Department name
      Col 51 - 72 = User name
      Col 73 - 76 = Telephone extension.

With minor modifications the EXECs can be adapted to display
information on other devices, eg local non-SNA controllers,
FEP attached controllers, etc. The main change to be made is
the way in which messages returned from the display command
in subroutine GETINFO are parsed.


SNASTAT REXX EXEC

/*********************************************************************/
/* SNASTAT    :-REXX EXEC to display status of SNA 3174s.            */
/*********************************************************************/
/* Initialize error handling.                                        */
/*********************************************************************/
Trace E
/*********************************************************************/
/* Input parameter check.                                            */
/*********************************************************************/
DEVID = MSGVAR(1)
If DEVID = '' then
   Do
      'NETSTAT'
      Exit
   End
If DEVID = 'INACTIVE' then exit
/*********************************************************************/
/* Initialize variables.                                             */
/*********************************************************************/
VER = '1.5'
$COMMAND = 'FI UY'
READ = 0
$OUT1 = 'FA CY'
$OUT2 = 'FA CY'
$OUT3 = 'FA CY'
$OUT4 = 'FA CY'
$OUT5 = 'FA CY'
$FLD1 = 'FA CP'
$FLD2 = 'FA CP'
$FLD3 = 'FA CP'
$FLD4 = 'FA CP'
$FLD5 = 'FA CP'
DESC = 'SNA MAJOR NODE'
$DESC = 'FA C'substr(DEVID,5,1)' HR'
$DEVID = 'FI CG'
REPEAT = 0
KEY = 0
NUMPREV = 20
'Globalv GETT REPCNT'
If REPCNT = '' then REPCNT = 0
'Globalv PUTT REPCNT'
$KEY = 'FI UY'
$PTR. = 'FA CG HB'
$PREV. = 'FA CY'
CAll GETINFO
/*********************************************************************/
/* MAIN LOOP                                                         */
/*********************************************************************/
Do forever
   /******************************************************************/
   /* Display main panel.                                            */
   /******************************************************************/
   If REPEAT = 0 then
      Do
         COMMAND = ' '
         KEY = 0
      End
   Else
      Do
         'Globalv GETT PREV.'KEY
         COMMAND = PREV.KEY
         REPEAT = 0
      End
   'VIEW 9 SNASTAT1 INPUT'
   /*******************************************************************/
   /* Convert input fields to upper case.                             */
   /*******************************************************************/
   ERRMSG = '                    Last refreshed 'TIME' (now 'TIME()')'
   $ERRMSG = 'FA CY HB'
   Upper COMMAND
   /*******************************************************************/
   /* Process panel responses.                                        */
   /*******************************************************************/
   OUT1 = ''
   OUT2 = ''
   OUT3 = ''
   OUT4 = ''
   OUT5 = ''
   FLD1 = ''
   FLD2 = ''
   FLD3 = ''
   FLD4 = ''
   FLD5 = ''
   Select
      When viewaid = PA1 then
         Do
           KEY = ''
           'Globalv GETT REPCNT'
           Do I = 1 to 20
              'Globalv GETT PREV.'I
              PTR.I = '      '
           End
           PTR.REPCNT = '====> '
           Do I = 1 to 20
              Interpret('PREV'I) '= PREV.I'
              Interpret('PTR'I) '= PTR.I'
              Interpret('$PREV'I) '= $PREV.I'
              Interpret('$PTR'I) '= $PTR.I'
           End
           'VIEW 9 LASTCOMM INPUT'
            Select
               When viewaid = ENTER & KEY > 0 & KEY < 21 then REPEAT = 1
               Otherwise nop
            End
         End
      When viewaid = PF3 then exit
      When viewaid = PF5 then call GETINFO
      When viewaid = PF6 then
         Do
            'Globalv PUTT REPCNT'
            CMD HIGH ROLL
            'Globalv GETT REPCNT'
            ERR = 5
            Call SETERR
         End
      When viewaid = PF12 then
         Do
            REPEAT = 1
            If KEY = 0 then KEY = REPCNT
            Else
               Do
                  KEY = KEY - 1
                  If KEY < 1 then KEY = NUMPREV
                  'GLobalv GETT PREV.'KEY
                  Do while PREV.KEY = ''
                     KEY = KEY - 1
                     If KEY < 1 then KEY = NUMPREV
                     'Globalv GETT PREV.'KEY
                  End
               End
         End
      When viewaid = PF13 then
         Do
            LOC = (VIEWCURROW - 11) * 8 + (VIEWCURCOL + 7) % 10
            Select
               When VIEWCURROW = 5 & (VIEWCURCOL + 1) % 10 = 4 then
                  Do
                     ERR = 33
                     Call SETERR
                  End
               When VIEWCURROW = 6 & (VIEWCURCOL + 1) % 10 = 4 then
                  Do
                     ERR = 33
                     Call SETERR
                  End
               When LUID.LOC ¬= '' then call GETUSER
               Otherwise
                  Do
                     ERR = 13
                     Call SETERR
                  End
            End
         End
      When viewaid = PF14 then
         Do
            'SNASUMM' DEVID
            ERR = 5
            Call SETERR
         End
      When viewaid = PF21 & COMMAND ¬= ' ' then
         Do
            LOC = (VIEWCURROW - 11) * 8 + (VIEWCURCOL + 7) % 10
            ERR = 5
            Select
               When VIEWCURROW = 5 & (VIEWCURCOL + 1) % 10 = 4 then
                  'CMD HIGH 'COMMAND' 'DEVID
               When VIEWCURROW = 6 & (VIEWCURCOL + 1) % 10 = 4 then
                  'CMD HIGH 'COMMAND' 'PUID
               When LUID.LOC ¬= '' then
                  'CMD HIGH 'COMMAND' 'LUID.LOC
               Otherwise ERR = 21
            End
            Call SETERR
            Call SAVECOMM
         End
      When viewaid = PF21 then
         Do
            ERR = 0
            Call SETERR
         End
      When viewaid = ENTER then
         Select
            When COMMAND ¬= ' ' then
               Do
                  'CMD HIGH' COMMAND
                  ERR = 5
                  Call SETERR
                  Call SAVECOMM
               End
            Otherwise
               Do
                  ERR = 0
                  Call SETERR
               End
         End
      Otherwise
         Do
            ERR = 99
            Call SETERR
         End
   End
End
Exit
GETINFO:
/**********************************************************************/
/* Initialize variables.                                              */
/**********************************************************************/
   TIME = TIME()
   ERRMSG = '                    Last refreshed 'TIME' (now 'TIME()')'
   $ERRMSG = 'FA CY HB'
   $PUID = 'FI CR'
   LUID. = ''
   $LUID. = 'FA CR'
   PUID = 'USDS'||substr(DEVID,5,1)
/**********************************************************************/
/* Loop to get status of PU.                                          */
/**********************************************************************/
   'OVERRIDE DISPLAY=NO'
   'OVERRIDE NETLOG=NO'
   'TRAP AND SUPPRESS MESSAGES IST453I IST075I'
   'DIS 'PUID
   'WAIT 20 SECONDS FOR MESSAGES'
   'OVERRIDE DISPLAY=YES'
   'OVERRIDE NETLOG=YES'
   Select
      When EVENT() = 'M' then
         Do
            'MSGREAD'
            Select
               When (MSGID() = 'IST453I') then exit
               When (MSGID() = 'IST075I') then
                  Do
                     NUM = 0
                     'GETMLINE LINE 2'
                     PARSE VAR LINE V1 V2 STAT REST
                     Select
                        When STAT = 'ACTIV' then
                           Do
                              $PUID = 'Fi CG'
                              'GETMSIZE NUMLINES'
                              SESS = 0
                              $SESS = 'FA CY'
                              Do I = 5 to NUMLINES
                                 'GETMLINE LINE 'I
                     PARSE VAR LINE MSGID L.1 S.1.L.2 S.2.L.3 S.3.REST
                                 If MSGID = 'IST080I' then
                                    Do J = 1 to 3
                                       If L.J ¬= '' then
                                          Do
                                             NUM = NUM + 1
                                             LUID.NUM = L.J
                                             Select
                        When S.J = 'ACTIV' then $LUID.NUM = 'FI CG'
                        When S.J = 'ACT/S' then
                           Do
                              SESS = SESS + 1
                              $SESS = 'FA CG'
                              $LUID.NUM = 'FI CG HR'
                           End
                        When S.J = 'PCTD2' then $LUID.NUM = 'FI CW'
                        When S.J = 'NEVAC' then $LUID.NUM = 'FI CT'
                        When S.J = 'ACTIV' then $LUID.NUM = 'FI CG'
                        When S.J = 'INACT' then $LUID.NUM = 'FI CR'
                        Otherwise $LUID.NUM = 'FI CY'
                                             End
                                          End
                                    End
                              End
                           End
                        When STAT = 'PCTD2' then $PUID = 'FI CW'
                        When STAT = 'NEVAC' then $PUID = 'FI CT'
                        When STAT = 'ACTIV' then $PUID = 'FI CG'
                        When STAT = 'INACT' then $PUID = 'FI CR'
                        Otherwise $PUID = 'FI CY'
                     End
                  End
               Otherwise Say MSGID()
            End
         End
      When EVENT() = 'T' then say 'TIMEOUT ('PUID')'
      When EVENT() = 'E' then say 'ERROR ('PUID')'
      Otherwise nop
   End
   'TRAP NO MESSAGES'
   'FLUSHQ'
   Do I = 1 to NUM
      Interpret('LUID'I) '= LUID.I'
      Interpret('$LUID'I) '= $LUID.I'
   End
Return
SETERR:
   $ERRMSG = 'FA CR HB'
   Select
      When ERR = 0 then
         ERRMSG = 'Command missing.'
      When ERR = 5 then
         Do
            ERRMSG = 'Last refreshed 'TIME' (now 'TIME()')'
            $ERRMSG = 'FA CY HB'
         End
      When ERR = 7 then
         ERRMSG = 'First panel is currently being displayed.'
      When ERR = 8 then
         ERRMSG = 'Last panel is currently being displayed.'
      When ERR = 13 then
         ERRMSG = 'Select a resource using cursor then press PF13.'
      When ERR = 33 then
         ERRMSG = 'Detail display not available for this resource.'
      When ERR = 14 then
         ERRMSG = 'Select a resource using cursor then press PF14.'
      When ERR = 21 then
         ERRMSG = 'Select a resource using cursor then press PF21.'
      When ERR = 24 then
         ERRMSG = 'Select a resource using cursor then press PF24.'
      When ERR = 99 then
            ERRMSG = 'Invalid PF key.'
      Otherwise nop
   End
   LEN = (78 - Length(ERRMSG)) % 2
ERRMSG = Substr('                                       ',1,LEN)ERRMSG
Return
GETUSER:
   If READ = 0 then
      Do
         'TRAP AND SUPPRESS ONLY MESSAGES CNM272I'
         "ALLOCATE DA('NETVIEW.VTAMADDR.OWNERS') SHR FREE"
         'WAIT 5 SECONDS FOR MESSAGES'
         'MSGREAD'
         DDNAME = WORD(MSGSTR(),1)
         'TRAP NO MESSAGES'
         'FLUSHQ'
         ADDRESS MVS 'EXECIO * DISKR 'DDNAME' ( STEM ARRAY.'
         ADDRESS MVS 'EXECIO 0 DISKR 'DDNAME' ( FINIS'
         READ = 1
      End
   OUT1 = 'Address ='
   OUT2 = 'Dept.   ='
   OUT3 = 'Owner   ='
   OUT4 = 'Tel.Ext.='
   OUT5 = 'Session ='
   LEN = Length(LUID.LOC)
   Do I = 1 to ARRAY.0
      If LUID.LOC = Substr(ARRAY.I,1,LEN) then
         FLD1 = Substr(ARRAY.I,1,10)
      Else if LUID.LOC = Substr(ARRAY.I,11,LEN) then
         FLD1 = Substr(ARRAY.I,11,10)
      Else if LUID.LOC = Substr(ARRAY.I,21,LEN) then
         FLD1 = Substr(ARRAY.I,21,10)
      If FLD1 ¬= '' then
         Do
            FLD2 = Substr(ARRAY.I,31,20)
            FLD3 = Substr(ARRAY.I,51,22)
            FLD4 = Substr(ARRAY.I,73,4)
            If length($LUID.LOC) = 5 then
               Do
                  FLD5 = 'Not active'
                  Return
               End
            Else
               Do
                  'OVERRIDE DISPLAY=NO'
                  'OVERRIDE NETLOG=NO'
                  'TRAP AND SUPPRESS ONLY MESSAGES IST075I'
                  'DIS 'LUID.LOC
                  'WAIT 5 SECONDS FOR MESSAGES'
                  'OVERRIDE DISPLAY=YES'
                  'OVERRIDE NETLOG=YES'
                  Select
                     When EVENT() = 'M' then
                        Do
                           'MSGREAD'
                           Select
                              When (MSGID() = 'IST075I') then
                                 Do
                                    'GETMSIZE NUMLINES'
                                    Do I = 12 to NUMLINES
                                       'GETMLINE LINE 'I
                                       PARSE VAR LINE MESS SES REST
                                       If MESS = 'IST635I' then
                                          Do
                                             SES1 = Substr(SES,1,5)
                                             SES2 = Substr(SES,6,3)
                                             Select
                                                When SES1 = 'ALST0' then
                                                   FLD5 = 'TSO 'SES2
                                                When SES1 = 'CNM06' then
                                                   FLD5 = 'NetView 'SES2
                                                Otherwise FLD5 = SES
                                             End
                                             I = NUMLINES
                                          End
                                   End
                                End
                              Otherwise Say MSGID()
                           End
                        End
                     When EVENT() = 'T' then say 'TIMEOUT ('LUID.LOC')'
                     When EVENT() = 'E' then say 'ERROR ('LUID.LOC')'
                     Otherwise nop
                  End
                  Return
               End
         End
   End
   FLD1 = LUID.LOC
   FLD2 = 'Not connected'
   FLD3 = '-'
   FLD4 = '-'
   FLD5 = 'Not active'
Return
SAVECOMM:
   REPEAT = 0
   KEY = 0
   'Globalv GETT PREV.'REPCNT
   If PREV.REPCNT ¬= COMMAND then
      Do
         REPCNT = REPCNT + 1
         If REPCNT > NUMPREV then REPCNT = 1
         PREV.REPCNT = COMMAND
         'Globalv PUTT PREV.'REPCNT
         'GLobalv PUTT REPCNT'
      End
Return


SNASTAT1 PANEL

/**********************************************************************/
/* SNASTAT1   :- Display panel for SNASTAT REXX exec.                 */
/**********************************************************************/
***
+SNASTAT1      %S N A   3 1 7 4   S T A T U S   D I S P L A Y      +Version &VER
$
$                               &DESC          $
$&OUT1     &FLD1              $------------------
$&OUT2     &FLD2              $|¬NAME&DEVID    $|
$&OUT3     &FLD3              $|  ¬PU =&PUID   $|
$&OUT4     &FLD4              $|¬# SESS =&SESS $|
$&OUT5     &FLD5              $------------------
$
$
$&LUID1   $&LUID2   $&LUID3   $&LUID4   $&LUID5   $&LUID6   $&LUID7   $&LUID8
$&LUID9   $&LUID10  $&LUID11  $&LUID12  $&LUID13  $&LUID14  $&LUID15  $&LUID16
$&LUID17  $&LUID18  $&LUID19  $&LUID20  $&LUID21  $&LUID22  $&LUID23  $&LUID24
$&LUID25  $&LUID26  $&LUID27  $&LUID28  $&LUID29  $&LUID30  $&LUID31  $&LUID32
$&LUID33  $&LUID34  $&LUID35  $&LUID36  $&LUID37  $&LUID38  $&LUID39  $&LUID40
$&LUID41  $&LUID42  $&LUID43  $&LUID44  $&LUID45  $&LUID46  $&LUID47  $&LUID48
$&LUID49  $&LUID50  $&LUID51  $&LUID52  $&LUID53  $&LUID54  $&LUID55  $&LUID56
$&LUID57  $&LUID58  $&LUID59  $&LUID60  $&LUID61  $&LUID62  $&LUID63  $&LUID64
$&LUID65  $&LUID66  $&LUID67  $&LUID68  $&LUID69  $&LUID70  $&LUID71  $&LUID72
$&LUID73  $&LUID74  $&LUID75  $&LUID76  $&LUID77  $&LUID78  $&LUID79  $&LUID80
&ERRMSG
%Command==>&COMMAND
$     PF3= Return      PF5= Refresh     PF6= Roll     PF12/PA1= Retrieve
$    ¬PF13=$Owner      PF14= Session summary         ¬PF21=$Command


LASTCOMM PANEL

/**********************************************************************/
/* LASTCOMM   :- Display/selection panel for last 20 commands.        */
/**********************************************************************/
***
+LASTCOMM      %L A S T   2 0   C O M M A N D S   I S S U E D      +Version &VER
&PTR1 $ 1.&PREV1
&PTR2 $ 2.&PREV2
&PTR3 $ 3.&PREV3
&PTR4 $ 4.&PREV4
&PTR5 $ 5.&PREV5
&PTR6 $ 6.&PREV6
&PTR7 $ 7.&PREV7
&PTR8 $ 8.&PREV8
&PTR9 $ 9.&PREV9
&PTR10$10.&PREV10
&PTR11$11.&PREV11
&PTR12$12.&PREV12
&PTR13$13.&PREV13
&PTR14$14.&PREV14
&PTR15$15.&PREV15
&PTR16$16.&PREV16
&PTR17$17.&PREV17
&PTR18$18.&PREV18
&PTR19$19.&PREV19
&PTR20$20.&PREV20
%Enter choice ==>&KEY
$                                   PF3= Return
$


SNASUMM REXX EXEC

/**********************************************************************/
/* SNASUMM    :- REXX EXEC to display summary of active sessions      */
/*               on a SNA 3174.                                       */
/**********************************************************************/
/* Initialize error handling.                                         */
/**********************************************************************/
Trace E
/**********************************************************************/
/* Input parameter check.                                             */
/**********************************************************************/
DEVID = MSGVAR(1)
If DEVID = '' then
   Do
      'NETSTAT'
      Exit
   End
If DEVID = 'INACTIVE' then exit
/**********************************************************************/
/* Initialize variables.                                              */
/**********************************************************************/
VER = '1.5'
$COMMAND = 'FI UY'
DESC = 'SNA MAJOR NODE'
$DESC = 'FA C'substr(DEVID,5,1)' HR'
$DEVID = 'FA CG'
REPEAT = 0
KEY = 0
NUMPREV = 20
'Globalv GETT REPCNT'
If REPCNT = '' then REPCNT = 0
'Globalv PUTT REPCNT'
$KEY = 'FI UY'
$PTR. = 'FA CG HB'
$PREV. = 'FA CY'
MAXPAN = 1
Call READIN
Call GETINFO
/**********************************************************************/
/* MAIN LOOP                                                          */
/**********************************************************************/
PANEL = 1
If SESS > 12 then PFK = 'PF8= Forward'
Do forever
   /*******************************************************************/
   /* Display main panel.                                             */
   /*******************************************************************/
   If REPEAT = 0 then
      Do
         COMMAND = ' '
         KEY = 0
      End
   Else
      Do
         'Globalv GETT PREV.'KEY
         COMMAND = PREV.KEY
         REPEAT = 0
      End
   Do I = 1 to 12
      J = I + (PANEL - 1) * 12
      K = Substr('    ',1,4 - Length(J))J'.'
      Interpret('NO'I) '= K'
      Interpret('LUID'I) '= LUID.J'
      Interpret('$LUID'I) '= $LUID.J'
      Interpret('DEPT'I) '= DEPT.J'
      Interpret('NAME'I) '= NAME.J'
      Interpret('SES'I) '= SES.J'
      Interpret('TEL'I) '= TEL.J'
   End
   'VIEW 9 SNASUMM1 INPUT'
   /*******************************************************************/
   /* Convert input fields to upper case.                             */
   /*******************************************************************/
   ERRMSG = '                    Last refreshed 'TIME' (now 'TIME()')'
   $ERRMSG = 'FA CY HB'
   Upper COMMAND
   /*******************************************************************/
   /* Process panel responses.                                        */
   /*******************************************************************/
   Select
      When viewaid = PA1 then
         Do
           KEY = ''
           'Globalv GETT REPCNT'
           Do I = 1 to 20
              'Globalv GETT PREV.'I
              PTR.I = '      '
           End
           PTR.REPCNT = '====> '
           Do I = 1 to 20
              Interpret('PREV'I) '= PREV.I'
              Interpret('PTR'I) '= PTR.I'
              Interpret('$PREV'I) '= $PREV.I'
              Interpret('$PTR'I) '= $PTR.I'
           End
           'VIEW 9 LASTCOMM INPUT'
            Select
               When viewaid = ENTER & KEY > 0 & KEY < 21 then REPEAT = 1
               Otherwise nop
            End
         End
      When viewaid = PF3 then exit
      When viewaid = PF5 then call GETINFO
      When viewaid = PF6 then
         Do
            'Globalv PUTT REPCNT'
            CMD HIGH ROLL
            'GLobalv GETT REPCNT'
            ERR = 5
            Call SETERR
         End
      When viewaid = PF7 then
         Do
            PANEL = PANEL - 1
            If PANEL < 1 then
               Do
                  PANEL = 1
                  ERR = 7
                  Call SETERR
               End
            If PANEL = 1 & SESS < 13 then PFK = ''
            Else if PANEL = 1 & SESS > 12 then PFK = 'PF8= Forward'
            Else PFK = 'PF7= Back   PF8= Forward'
         End
      When viewaid = PF8 then
         Do
            PANEL = PANEL + 1
            If PANEL > MAXPAN then
               Do
                  PANEL = MAXPAN
                  ERR = 8
                  Call SETERR
               End
            If PANEL = 1 then PFK = ''
            Else if PANEL = MAXPAN then PFK = 'PF7= Back'
            Else PFK = 'PF7= Back   PF8= Forward'
         End
      When viewaid = PF12 then
         Do
            REPEAT = 1
            If KEY = 0 then KEY = REPCNT
            Else
               Do
                  KEY = KEY - 1
                  If KEY < 1 then KEY = NUMPREV
                  'Globalv GETT PREV.'KEY
                  Do while PREV.KEY = ''
                     KEY = KEY - 1
                     If KEY < 1 then KEY = NUMPREV
                     'Globalv GETT PREV.'KEY
                  End
               End
         End
      When viewaid = PF13 then
         Do
            'SNASTAT' DEVID
            ERR = 5
            Call SETERR
         End
      When viewaid = PF21 & COMMAND ¬= ' ' then
         Do
            LOC = VIEWCURROW - 8 + (PANEL - 1) * 12
            If VIEWCURROW > 8 & VIEWCURROW < 21 & LUID.LOC ¬= '' then
               Do
                  'CMD HIGH 'COMMAND' 'LUID.LOC
                  ERR = 5
                  Call SETERR
                  Call SAVECOMM
               End
            Else
               Do
                  ERR = 21
                  Call SETERR
               End
         End
      When viewaid = PF21 then
         Do
            ERR = 0
            Call SETERR
         End
      When viewaid = ENTER then
         Select
            When COMMAND ¬= ' ' then
               Do
                  'CMD HIGH' COMMAND
                  ERR = 5
                  Call SETERR
                  Call SAVECOMM
               End
            Otherwise
               Do
                  ERR = 0
                  Call SETERR
               End
         End
      Otherwise
         Do
            ERR = 99
            Call SETERR
         End
   End
End
Exit
GETINFO:
/**********************************************************************/
/* Initialize variables.                                              */
/**********************************************************************/
   TIME = TIME()
   ERRMSG = '                    Last refreshed 'TIME' (now 'TIME()')'
   $ERRMSG = 'FA CY HB'
   $PUID = 'FA CR'
   $LUID. = 'FA CR'
   LUID. = ''
   LUID.1 = 'None'
   DEPT. = ''
   NAME. = ''
   SES. = ''
   TEL. = ''
   PUID = 'USDS'||substr(DEVID,5,1)
/**********************************************************************/
/* Loop to get status of PU.                                          */
/**********************************************************************/
   'OVERRIDE DISPLAY=NO'
   'OVERRIDE NETLOG=NO'
   'TRAP AND SUPPRESS MESSAGES IST453I IST075I'
   'DIS 'PUID
   'WAIT 20 SECONDS FOR MESSAGES'
   'OVERRIDE DISPLAY=YES'
   'OVERRIDE NETLOG=YES'
   Select
      When EVENT() = 'M' then
         Do
            'MSGREAD'
            Select
               When (MSGID() = 'IST453I') then exit
               When (MSGID() = 'IST075I') then
                  Do
                     'GETMLINE LINE 2'
                     PARSE VAR LINE V1 V2 STAT REST
                     Select
                        When STAT = 'ACTIV' then
                           Do
                              $PUID = 'FA CG'
                              'GETMSIZE NUMLINES'
                              SESS = 0
                              $SESS = 'FA CY'
                              Do I = 5 to NUMLINES
                                 'GETMLINE LINE 'I
                     PARSE VAR LINE MSGID L.1 S.1 L.2 S.2 L.3 S.3
                                 If MSGID = 'IST080I' then
                                    Do J = 1 to 3
                                       If L.J ¬= '' & S.J = 'ACT/S' then
                                          Do
                                             SESS = SESS + 1
                                             $SESS = 'FA CG'
                                             LUID.SESS = L.J
                                             $LUID.SESS = 'FI CG'
                                          End
                                    End
                              End
                           End
                        When STAT = 'PCTD2' then $PUID = 'FA CW'
                        When STAT = 'NEVAC' then $PUID = 'FA CT'
                        When STAT = 'ACTIV' then $PUID = 'FA CG'
                        When STAT = 'INACT' then $PUID = 'FA CR'
                        Otherwise $PUID = 'FA CY'
                     End
                  End
               Otherwise Say MSGID()
            End
         End
      When EVENT() = 'T' then say 'TIMEOUT ('PUID')'
      When EVENT() = 'E' then say 'ERROR ('PUID')'
      Otherwise nop
   End
   'TRAP NO MESSAGES'
   'FLUSHQ'
   If SESS > 0 then
      Do
         MAXPAN = (SESS + 11) % 12
         Call ADDINFO
      End
Return
READIN:
   Trace O
   'TRAP AND SUPPRESS ONLY MESSAGES CNM272I'
   "ALLOCATE DA('NETVIEW.VTAMADDR.OWNERS') SHR FREE"
   'WAIT 5 SECONDS FOR MESSAGES'
   'MSGREAD'
   DDNAME = WORD(MSGSTR(),1)
   'TRAP NO MESSAGES'
   'FLUSHQ'
   ADDRESS MVS 'EXECIO * DISKR 'DDNAME' ( STEM ARRAY.'
   ADDRESS MVS 'EXECIO 0 DISKR 'DDNAME' ( FINIS'
   Trace E
Return
ADDINFO:
   Do I = 1 to SESS
      Do J = 1 to ARRAY.0
         If Substr(ARRAY.J,1,Length(LUID.I)) = LUID.I |,
            Substr(ARRAY.J,11,Length(LUID.I)) = LUID.I |,
            Substr(ARRAY.J,21,Length(LUID.I)) = LUID.I then
            Do
               DEPT.I = Substr(ARRAY.J,31,20)
               NAME.I = Substr(ARRAY.J,51,20)
               TEL.I = Substr(ARRAY.J,73,4)
               J = ARRAY.0
            End
      End
      'OVERRIDE DISPLAY=NO'
      'OVERRIDE NETLOG=NO'
      'TRAP AND SUPPRESS MESSAGES IST075I'
      'DIS 'LUID.I
      'WAIT 20 SECONDS FOR MESSAGES'
      'OVERRIDE DISPLAY=YES'
      'OVERRIDE NETLOG=YES'
      Select
         When EVENT() = 'M' then
            Do
               'MSGREAD'
               Select
                  When (MSGID() = 'IST075I') then
                     Do
                        'GETMLINE LINE 14'
                        PARSE VAR LINE V1 SES.I STAT REST
                        SES1 = Substr(SES.I,1,5)
                        SES2 = Substr(SES.I,6,3)
                        Select
                           When SES1 = 'ALST0' then
                              SES.I = 'TSO 'SES2
                           When SES1 = 'CNM06' then
                              SES.I = 'NetView 'SES2
                           Otherwise nop
                        End
                     End
                  Otherwise Say MSGID()
               End
            End
         When EVENT() = 'T' then say 'TIMEOUT ('LUID.I')'
         When EVENT() = 'E' then say 'ERROR ('LUID.I')'
         Otherwise nop
      End
      'TRAP NO MESSAGES'
      'FLUSHQ'
   End
Return
SETERR:
   $ERRMSG = 'FA CR HB'
   Select
      When ERR = 0 then
         ERRMSG = 'Command missing.'
      When ERR = 5 then
         Do
            ERRMSG = 'Last refreshed 'TIME' (now 'TIME()')'
            $ERRMSG = 'FA CY HB'
         End
      When ERR = 7 then
         ERRMSG = 'First panel is currently being displayed.'
      When ERR = 8 then
         ERMSG = 'Last panel is currently being displayed.'
      When ERR = 13 then
         ERRMSG = 'Select a resource using cursor then press PF13.'
      When ERR = 14 then
         ERRMSG = 'Select a resource using cursor then press PF14.'
      When ERR = 21 then
         ERRMSG = 'Select a resource using cursor then press PF21.'
      When ERR = 24 then
         ERRMSG = 'Select a resource using cursor then press PF24.'
      When ERR = 99 then
            ERRMSG = 'Invalid PF key.'
      Otherwise nop
   End
   LEN = (78 - Length(ERRMSG)) % 2
ERRMSG = Substr('                                       ',1,LEN)ERRMSG
Return
SAVECOMM:
   REPEAT = 0
   KEY = 0
   'Globalv GETT PREV.'REPCNT
   If PREV.REPCNT ¬= COMMAND then
      Do
         REPCNT = REPCNT + 1
         If REPCNT > NUMPREV then REPCNT = 1
         PREV.REPCNT = COMMAND
         'Globalv PUTT PREV.'REPCNT
         'Globalv PUTT REPCNT'
      End
Return


SNASUMM1 PANEL

/**********************************************************************/
/* SNASUMM1   :- Display panel for SNASUMM REXX exec.                 */
/**********************************************************************/
***
+SNASUMM1      %S N A   3 1 7 4   S T A T U S   D I S P L A Y      +Version &VER
$                               &DESC          $
$                              ------------------
$                              |¬NAME&DEVID    $|
$                              |  ¬PU =&PUID   $|
$                              |¬# SESS =&SESS $|
$                              ------------------
$
¬&NO1 &LUID1   %&SES1       +&DEPT1               |1                $&TEL1
¬&NO2 &LUID2   %&SES2       +&DEPT2               |2                $&TEL2
¬&NO3 &LUID3   %&SES3       +&DEPT3               |3                $&TEL3
¬&NO4 &LUID4   %&SES4       +&DEPT4               |4                $&TEL4
¬&NO5 &LUID5   %&SES5       +&DEPT5               |5                $&TEL5
¬&NO6 &LUID6   %&SES6       +&DEPT6               |6                $&TEL6
¬&NO7 &LUID7   %&SES7       +&DEPT7               |7                $&TEL7
¬&NO8 &LUID8   %&SES8       +&DEPT8               |8                $&TEL8
¬&NO9 &LUID9   %&SES9       +&DEPT9               |9                $&TEL9
¬&NO10&LUID10  %&SES10      +&DEPT10              |10               $&TEL10
¬&NO11&LUID11  %&SES11      +&DEPT11              |11               $&TEL11
¬&NO12&LUID12  %&SES12      +&DEPT12              |12               $&TEL12
&ERRMSG
%Command==>&COMMAND
$PF3= Return          PF5= Refresh           PF6= Roll  &PFK
$PF12/PA1= Retrieve   PF13= Detail Display  ¬PF21=$Command


John Cameron
Senior Technical Specialist
Life Association of Scotland (UK)     c Life Association of Scotland 1992

