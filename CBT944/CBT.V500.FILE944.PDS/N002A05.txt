A VTAM batch application-terminal interface

Communication between a VTAM terminal (display or printer)
and an application program is not only a task for CICS.  The
following code shows how a batch print program uses a VTAM
printer terminal.  The interface routine can also be used for
other terminals.  The device-dependent data stream will and
must be handled from the calling program.


INTERFACE ROUTINE

VPRT     TITLE 'VBAMPRT  -  VTAM BATCH PRINT MODULE   '
         PUNCH '   CATALR VBAMPRT  '
VBAMPRT  CSECT
         SAVE  (14,12)
         LR    R3,R15
         USING VBAMPRT,R3
         B     BEGIN
         DC    CL8'VBAMPRT'            PROGRAM NAME
         DC    C' V.1.0 '              VERSION
         DC    C'&UDATE '              DATE OF ASSEMBLY
         DC    C'&UTIME '              TIME OF ASSEMBLY
BEGIN    DS    0H
         ST    R13,SAVEAREA+4          SAVE ADDR PREVIOUS SAVEAREA
         LR    R2,R13                  SAVE REG 13
         LA    R13,SAVEAREA            POINT TO OWN SAVEAREA
         ST    R13,8(R2)               CHAIN TO PREVIOUS SAVEAREA
         L     R10,0(R1)               LOAD PARAMETER ADDR
         ST    R10,PARMADDR            SAVE PARAMETER ADDR FOR EXIT USE
         USING VPRTUACB,R10
         XC    VPRTERR,VPRTERR         CLEAR ERROR FIELD
*  ANALYSE PARAMETERS      *
PARMCHK  DS    0H
         CLC   =C'SEND',VPRTFUNC       SEND REQUESTED
         BE    SEND                    YES - DO IT
         CLC   =C'OPEN',VPRTFUNC       OPEN REQUESTED
         BE    OPEN                    YES - DO IT
         CLC   =C'CLOS',VPRTFUNC       CLOSE REQUESTED
         BE    CLOSE                   YES - DO IT
*  RC  WRONG FUNCTION CODE
         LA    R15,255
         B     RETURN                  RETURN TO CALLER
*  OPEN VTAM ACB AND OPNDST REQUEST FOR PRINTER (SLU)      *
OPEN     DS    0H
*  ANALYZE CALL PARM FOR MODCB (APPLID/PASSWD)
         CLI   VPRTAPPL,C' '      APPLID IN URCB
         BNH   OPENACB                 NO - SKIP MODCB ACB
         MVC   APPLID,VPRTAPPL         MOVE APPLICATION ID
         MVI   APPLIDL,X'08'           SET LENGTH
         MODCB AM=VTAM,ACB=VTMACB,APPLID=APPLIDL
         LTR   R15,R15                 TEST RETURN CODE
         BZ    CHKPWD                  ZERO -- OK
         MVC   VPRTMAC,=CL8'MODCB 1'
         STC   R0,VPRTRC0              STORE ERROR CODE
         B     RETURN                  RETURN TO CALLER
CHKPWD   DS    0H
         CLI   VPRTPWRD,C' '           PASSWD IN URCB
         BNH   OPENACB                 NO - SKIP MODCB ACB
         MVC   PASSWD,VPRTPWRD         MOVE PASSWORD
         MVI   PASSWDL,X'08'           SET LENGTH
         MODCB AM=VTAM,ACB=VTMACB,PASSWD=PASSWDL
         LTR   R15,R15                 TEST RETURN CODE
         BZ    OPENACB                 ZERO -- OK
         MVC   VPRTMAC,=CL8'MODCB 2'
         STC   R0,VPRTRC0              STORE ERROR CODE
         B     RETURN                  RETURN TO CALLER
OPENACB  DS    0H
         OPEN  VTMACB
         LTR   R15,R15                 TEST RETURN CODE
         BZ    SLOGON                  ZERO -- OK
         MVC   VPRTMAC,=CL8'OPEN'
         MVC   VPRTRC0,VTMACB+ACBERFLG-IFGACB ERROR FLAG
         B     RETURN                  RETURN TO CALLER
SLOGON   DS    0H
         SETLOGON OPTCD=START,                                         *
               ACB=VTMACB,                                             *
               RPL=VTMRPL
         LTR   R15,R15                 TEST RETURN CODE
         BZ    SLOGONOK                ZERO -- OK
         MVC   VPRTMAC,=CL8'SETLOGON'
         STC   R0,VPRTRC0              STORE RET CODE
         B     RETURN                  RETURN TO CALLER
SLOGONOK DS    0H
*  MODIFY NIB WITH SLU-NAME FOR OPNDST
         LA    R2,VPRTSLUN             LOAD SLU NETNAME ADDR
         MODCB AM=VTAM,NIB=VTMNIB,NAME=(*,0(R2))
         LTR   R15,R15                 TEST RETURN CODE
         BZ    OPNDST                  ZERO -- OK
         MVC   VPRTMAC,=CL8'MODCB 3'
         STC   R0,VPRTRC0              STORE ERROR CODE
         B     RETURN                  RETURN TO CALLER
OPNDST   DS    0H
* * *    OPNDST OPTCD=(ACQUIRE,SYN),                                   *
               SIMLOGON OPTCD=(SYN,CONANY,Q,RELRQ),                    *
               ACB=VTMACB,                                             *
               RPL=VTMRPL,                                             *
               NIB=VTMNIB
         LTR   R15,R15                 TEST RETURN CODE
         BZ    SENDBB                  ZERO -- OK
* * *    MVC   VPRTMAC,=CL8'OPNDST'
         MVC   VPRTMAC,=CL8'SIMLOGON'
         STC   R0,VPRTRC0              STORE ERROR CODE
         MVC   VPRTFDBK,VTMRPL+RPLFDBK-IFGRPL MOVE RPL FEEDBACK
         MVC   VPRTSENS,VTMRPL+RPLFDBK2-IFGRPL MOVE RPL SENSE
         B     RETURN                  RETURN TO CALLER
SENDBB   DS    0H
         WAIT  LOGONECB      WAIT FOR LOGON COMPLETE
*  SEND BEGIN BRACKET
         SEND  RPL=VTMRPL,                                             *
               STYPE=REQ,                                              *
               CONTROL=DATA,                                           *
               AREA=BRACKMSG,                                          *
               RECLEN=2,                                               *
               BRACKET=(BB,NEB),                                       *
               OPTCD=(SYN),                                            *
               RESPOND=(NEX,FME,NRRN),      MUST BE FOR 3270 PRINTER   *
               POST=RESP
         LTR   R15,R15                      TEST RETURN CODE
         BZ    RETURN                       ZERO -- OK
         MVC   VPRTMAC,=CL8'SEND'
         STC   R0,VPRTRC0                   STORE ERROR CODE
         MVC   VPRTFDBK,VTMRPL+RPLFDBK-IFGRPL   MOVE RPL FEEDBACK
         MVC   VPRTSENS,VTMRPL+RPLFDBK2-IFGRPL  MOVE RPL SENSE
         B     RETURN                       RETURN TO CALLER
*  SEND REQUEST UNIT TO SLU      *
SEND     DS    0H
         XR    R2,R2
         LH    R2,VPRTDATL
         MODCB AM=VTAM,                                                *
               RPL=VTMRPL,                                             *
               AREA=(S,VPRTDATA),                                      *
               RECLEN=(R2)
         LTR   R15,R15                      TEST RETURN CODE
         BZ    SENDREQ                      ZERO -- OK
         MVC   VPRTMAC,=CL8'MODCB 5'
         STC   R0,VPRTRC0                   STORE ERROR CODE
         B     RETURN                       RETURN TO CALLER
SENDREQ  SEND  RPL=VTMRPL,                                             *
               STYPE=REQ,                                              *
               CONTROL=DATA,                                           *
               BRACKET=(NBB,NEB),                                      *
               OPTCD=(SYN),                                            *
               RESPOND=(NEX,FME,NRRN),      MUST BE FOR 3270 PRINTER   *
               POST=RESP
         LTR   R15,R15                      TEST RETURN CODE
         BZ    RETURN                       ZERO -- OK
         MVC   VPRTMAC,=CL8'SEND'
         STC   R0,VPRTRC0                   STORE ERROR CODE
         MVC   VPRTFDBK,VTMRPL+RPLFDBK-IFGRPL MOVE RPL FEEDBACK
         MVC   VPRTSENS,VTMRPL+RPLFDBK2-IFGRPL MOVE RPL SENSE
         B     RETURN                       RETURN TO CALLER
*  RELEASE SLU AND CLOSE VTAM ACB      *
CLOSE    DS    0H
         MVI   TPENDFLG,X'FF'
*  SEND END BRACKET
         SEND  RPL=VTMRPL,                                             *
               STYPE=REQ,                                              *
               CONTROL=DATA,                                           *
               AREA=BRACKMSG,                                          *
               RECLEN=2,                                               *
               BRACKET=(NBB,EB),                                       *
               OPTCD=(SYN),                                            *
               RESPOND=(NEX,FME,NRRN),      MUST BE FOR 3270 PRINTER   *
               POST=RESP
         LTR   R15,R15                      TEST RETURN CODE
         BZ    CLSDST                       ZERO -- OK
         MVC   VPRTMAC,=CL8'SEND'
         STC   R0,VPRTRC0                   STORE ERROR CODE
         MVC   VPRTFDBK,VTMRPL+RPLFDBK-IFGRPL MOVE RPL FEEDBACK
         MVC   VPRTSENS,VTMRPL+RPLFDBK2-IFGRPL MOVE RPL SENSE
         B     RETURN                       RETURN TO CALLER
CLSDST   CLSDST RPL=VTMRPL,                                            *
               ACB=VTMACB,                                             *
               NIB=VTMNIB,                                             *
               OPTCD=(SYN,RELEASE)
         LTR   R15,R15                      TEST RETURN CODE
         BZ    CLOSEACB                     ZERO -- OK
         MVC   VPRTMAC,=CL8'CLSDST'
         MVC   VPRTRC0,VTMACB+ACBERFLG-IFGACB ERROR FLAG
         B     RETURN                       RETURN TO CALLER
CLOSEACB DS    0H
         CLOSE VTMACB
         LTR   R15,R15                      TEST RETURN CODE
         BZ    RETURN                       ZERO -- OK
         MVC   VPRTMAC,=CL8'CLOSE'
         MVC   VPRTRC0,VTMACB+ACBERFLG-IFGACB  ERROR FLAG
         B     RETURN                       RETURN TO CALLER
RETURN   DS    0H
         L     R13,SAVEAREA+4               GET REQUIRED SAVEAREA ADDR
         L     R14,12(R13)                  LOAD RETURN ADDR
         RETURN (0,12)
*  CONSTANTS/AREAS/LITERALS      *
APPLIDL  DS    X
APPLID   DS    CL8
PASSWDL  DS    X
PASSWD   DS    CL8
TPENDFLG DS    X
BRACKMSG DC    X'F140'       COMMAND=WRITE, WCC=RESET
PARMADDR DS    F
LOGONECB DC    F'0'
SAVEAREA DS    18F
         LTORG
*  VTAM CONTROL BLOCKS      *
*  VTAM ACB
VTMACB  ACB   AM=VTAM,                                                 *
               EXLST=VTMEXLST,                                         *
               MACRF=LOGON,                                            *
               PARMS=(NIB=VTMNIB,USERFLD=C'VPRT')
*  VTAM EXIT LIST
VTMEXLST EXLST AM=VTAM,                                                *
               TPEND=TPENDEX,                                          *
               LOGON=LOGONEX,                                          *
               LOSTERM=LOSTRMEX
*  VTAM NODE INITIALIZATION BLOCK
VTMNIB NIB                                                             *
               MODE=RECORD,                                            *
               USERFLD=C'VPRT',                                        *
               LISTEND=YES
*  VTAM REQUEST PARAMETER LIST
VTMRPL   RPL   AM=VTAM,                                                *
               ACB=VTMACB,                                             *
               NIB=VTMNIB,                                             *
               OPTCD=ANY
***NAME = LOGON EXIT ROUTINE                                        ***
*  EVENT = AN APPLICATION PROGRAM IS BEING REQUESTED TO               *
*  ESTABLISH A SESSION AS A PRIMARY LOGICAL UNIT.                     *
*  FUNCTION = ESTABLISH A SESSION AND SEND A 'LOGON ACCEPTED'         *
*  MESSAGE TO ANY LOGICAL UNIT THAT LOGS ON CORRECTLY.                *
*  ENTRY POINT = LOGONEX                                              *
*  INPUT                                                              *
*   REGS   0    = UNPREDICTABLE                                       *
*          1    = POINTER TO A 6-WORD PARAMETER LIST                  *
*          2-13 = UNPREDICTABLE                                       *
*          14   = RETURN ADDRESS TO ACF/VTAM                          *
*          15   = ENTRY ADDRESS OF THIS ROUTINE                       *
*   PARAMETER LIST - 6 WORDS                                          *
*          1    = ACB ADDRESS                                         *
*          2    = POINTER TO SYMBOLIC NAME OF LOGICAL UNIT            *
*          3    = ZEROS (USED AT SIMLOGON)                            *
*          4    = LENGTH OF LOGON MESSAGE                             *
*          5    = ADDRESS OF READ-ONLY RPL                            *
*          6    = CID OF PENDING ACTIVE SESSION                       *
*  OUTPUT                                                             *
*   A REQUEST TO VTAM TO ACCEPT OR REJECT THE SESSION.                *
*  EXTERNAL REFERENCES = MODCB, OPNDST, CLSDST, DUMP                  *
*  EXIT, NORMAL = BR 14                                               *
*  EXIT, ABNORMAL = DUMP                                              *
***ATTRIBUTES = REENTRANT                                           ***
         DC    C'LOGONEX'           EYECATCHER
LOGONEX  DS    0H
         USING *,R12  ESTABLISH ADRESSABILITY
         LR    R12,R15              LOAD ENTRY ADDR TO BASE
         L     R3,=V(VBAMPRT)       GET MAINLINE BASE ADDR
         USING VBAMPRT,R3           BASE
         TM    TPENDFLG,X'FF'       IS CLOSE ACB IN PROGRESS
         BOR   R14                  YES, ALLOW CLOSE TO REJECT LOGONS
         LR    R6,R1                SAVE PARAMETER LIST ADDRESS
         L     R8,0(R6)             PICK UP ACB ADDRESS
         LA    R13,LOGONSAV         LOAD MACRO SAVEAREA ADDRESS
         ST    R14,LOGONR14         SAVE RETURN ADDRESS TO VTAM
         L     R5,4(R6)             GET ADDR SLU NAME WHO LOGON
         L     R10,PARMADDR         GET ADDR CALLERS PARAMETER
         USING VPRTUACB,R10
         MODCB AM=VTAM,RPL=LOGONRPL,                                   *
               ACB=(R8)
         LTR   R15,R15              TEST RETURN CODE
         BNZ   LOGONDMP             NOT ZERO -- DUMP
         LA    R9,LOGONRPL
         LA    R7,LOGONNIB
         USING IFGRPL,R9
         USING ISTDNIB,R7
         MVC   NIBSYM,0(R5)
         MVC   NIBCID,20(R6)        SET CID IN LOGON NIB
         MVC   RPLUSFLD,4(R5)       PUT USER FIELD IN OPNDST RPL ...
*                                   VTAM DOES NOT SET IT ON OPNDST
*  THE ABOVE MVC IS USEFUL IF OPTCD=ASY USED. NOTE THAT IT CANNOT
*   BE DONE WITH MODCB.
*  IS IT THE REQUIRED SLU
         CLC   VPRTSLUN,0(R5)
         BNE   DISCONN
*  ESTABLISH A SESSION WITH THE LOGICAL UNIT
CONNECT  OPNDST RPL=LOGONRPL,OPTCD=(SYN,ACCEPT,CA)
** IF THE OPNDST FAILS, DO NOT ATTEMPT CLSDST AS THAT WILL DRIVE LERAD
         POST  LOGONECB             POST FOR LOGON COMPLETE
         LA    R9,VTMRPL
         MODCB AM=VTAM,RPL=(R9),ARG=(*,NIBCID)         CID IN SEND RPL
         B     LOGONRET
*  TERMINATE THE SESSION
*   IT MIGHT BE BETTER TO SEND A REJECTION MESSAGE TO THE VTAM
*   OPERATOR BEFORE CLOSING.
DISCONN  DS    0H
         CLSDST RPL=LOGONRPL,OPTCD=SYN
*  IF CONTROL RETURNS HERE THERE IS NO NEED TO TEST FOR SUCCESS OR
*  FAILURE SINCE LERAD OR SYNAD COPE WITH FAILURE.
         B     LOGONRET             IF SO, BRANCH TO RETURN
LOGONRET DS    0H
         L     R14,LOGONR14         RESTORE REG 14
         BR    R14                  RETURN TO VTAM
LOGONDMP ST    R1,LOGONR1           SAVE THE CONTENTS OF REG 1
         DUMP
LOGONRPL RPL   AM=VTAM,NIB=LOGONNIB
LOGONNIB NIB   MODE=RECORD,                                            *
               USERFLD=C'VPRT',                                        *
               LISTEND=YES
*  LOGON EXIT ROUTINE CONSTANTS AND AREAS
LOGONR1  DS    F                    SAVEAREA R1 (FOR DUMP)
LOGONR14 DS    F                    SAVEAREA R14 (RETURN ADDR)
LOGONSAV DS    18F                  SAVEAREA FOR MACROS IN EXIT
         LTORG
         DROP  R3,R7,R9,R10,R12     DROP BASE
***NAME = LOSTERM EXIT ROUTINE                                      ***
*  EVENT = A SESSION WITH A LOGICAL UNIT HAS BEEN TEMPORARILY         *
*  INTERRUPTED OR PERMANENTLY LOST. THE LOGICAL UNIT OR ACF/VTAM      *
*  OPERATOR HAS REQUESTED THAT THE SESSION BE TERMINATED; OR AN       *
*  EVENT HAS OCCURRED THAT MAY AFFECT FUTURE OPERATION OF THE         *
*  SESSION.                                                           *
*  FUNCTION = HANDLE SITUATIONS IN WHICH A LOGICAL UNIT HAS           *
*  UNEXPECTEDLY BECOME UNAVAILABLE.                                   *
*  ENTRY POINT = LOSTRMEX                                             *
*  INPUT                                                              *
*   REGS   0    = UNPREDICTABLE                                       *
*          1    = POINTER TO A 4-WORD PARAMETER LIST                  *
*          2-13 = UNPREDICTABLE                                       *
*          14   = RETURN ADDRESS TO ACF/VTAM                          *
*          15   = ENTRY ADDRESS OF THIS ROUTINE                       *
*   PARAMETER LIST - 4 WORDS                                          *
*          1    = ACB ADDRESS                                         *
*          2    = THE CID OF THE LOGICAL UNIT                         *
*          3    = THE CONTENTS OF THE USERFLD (FROM THE NIB           *
*                 SPECIFIED AT OPNDST)                                *
*          4    = A VALUE INDICATING WHY LOSTERM WAS ENTERED          *
*  OUTPUT = TERMINATION OF THE SESSION                                *
*  EXTERNAL REFERENCES = CLSDST, DUMP                                 *
*  EXIT, NORMAL = BR 14                                               *
*  EXIT, ABNORMAL = DUMP                                              *
***ATTRIBUTES = SERIALLY REUSABLE                                   ***
         DC    C'LOSTRMEX'
LOSTRMEX DS    0H
         USING *,R12                ESTABLISH ADRESSABILITY
         LR    R12,R15              LOAD ENTRY ADDR TO BASE
         L     R3,=V(VBAMPRT)       LOAD ADDR OF MAINLINE
         USING VBAMPRT,R3           BASE
         LA    R13,SAVLOSEX         PROVIDE SAVE AREA FOR MACROS
         ST    R14,SLOSEX14         SAVE RETURN ADDRESS TO VTAM
         TM    TPENDFLG,X'FF'       IS CLOSE ACB IN PROGRESS?
         BOR   R14                  YES, IGNORE LOSTERM NOTIFICATION
         LR    R6,R1                POINT TO PARMLIST
         L     R9,=A(LOGONRPL)      POINT TO OPNDST/CLSDST RPL
         L     R8,0(R1)             PICK UP ACB ADDRESS
         USING IFGRPL,R9            BASE ON PRPLCONN
         MVC   RPLUSFLD,8(R1)       MOVE USER FIELD
         DROP  R9
         L     R5,4(R1)             PICK UP CID OF LOST TERMINAL
         L     R4,12(R1)            LOAD ADDR OF REASON CODE
         CLI   0(R4),X'16'          SESSION HAS BEEN TERMINATED
         BER   R14                  YES - IMMED RETURN
*                                   (OR TRY TO ACQUIRE)
         CLSDST RPL=(R9),ACB=(R8),ARG=(R5),OPTCD=(RELEASE,SYN)
         LTR   R15,R15              TEST RET CODE
         BNZ   LOSTRMAB             NOZERO RESULTS IN ABEND
         L     R14,SLOSEX14         RELOAD RETURN ADDR
         BR    R14                  RETURN TO VTAM
LOSTRMAB DUMP
*  LOSTERM EXIT ROUTINE CONSTANTS AND AREAS
SLOSEX14 DS    F
SAVLOSEX DS    18F
         LTORG
         DROP  R3,R12               DROP BASE
***NAME = TPEND EXIT ROUTINE                                        ***
*  EVENT = THE ACF/VTAM OPERATOR IS SHUTTING DOWN THE NETWORK,        *
*  OR IS SHUTTING DOWN THIS APPLICATION PROGRAM, OR AN ABEND OF       *
*  ACF/VTAM HAS OCCURRED.                                             *
*  FUNCTION = SET AN INDICATOR FOR THE MAINLINE PROGRAM               *
*  TO CLOSE THE ACB AND TERMINATE                                     *
*  ENTRY POINT = TPENDEX                                              *
*  INPUT                                                              *
*   REGS   0    = UNPREDICTABLE                                       *
*          1    = ADDRESS OF A 2-WORD PARAMETER LIST                  *
*          2-13 = UNPREDICTABLE                                       *
*          14   = RETURN ADDRESS                                      *
*          15   = ENTRY ADDRESS OF THIS ROUTINE                       *
*   PARAMETER LIST - 2 WORDS                                          *
*          1    = ADDRESS OF THE ACB                                  *
*          2    = A VALUE INDICATING WHY TPEND WAS ENTERED            *
*  OUTPUT = INDICATION TO CLOSE ACB SET FOR MAIN PROGRAM              *
*  EXTERNAL REFERENCES = NONE                                         *
*  EXIT, NORMAL = BR 14                                               *
*  EXIT, ABNORMAL = NONE                                              *
*  ATTRIBUTES = SERIALLY REUSABLE                                     *
*  REGS USED                                                          *
***  3 = BASE OF MAINLINE                                           ***
         DC    C'TPENDEX'
TPENDEX  DS    0H
         USING *,R15                ESTABLISH ADRESSABILITY
         L     R3,=V(VBAMPRT)       GET MAINLINE BASE ADDR
         USING VBAMPRT,R3
         MVI   TPENDFLG,X'FF'       SET FLAG
         BR    R14                  RETURN TO VTAM
         LTORG
         DROP  R3,R15               DROP BASE
*  DUMMY SECTIONS                                                     *
         IFGACB AM=VTAM,DSECT=YES   *  VTAM ACB
         ISTDNIB                    *  VTAM NODE INITIALIZATION BLOCK
         IFGRPL AM=VTAM,DSECT=YES   *  VTAM REQUEST PARAMETER LIST
         ISTUSFBC                   *  RTNCD-FDBK2-FDBK FIELDS IN RPL
         ISTDBIND                               *  SESSION PARAMETERS
*  PARAMETER FROM CALLER
VPRTUACB DSECT
VPRTFUNC DS    CL4             FUNCTION CODE
VPRTAPPL DS    CL8             APPLICATION ID
VPRTPWRD DS    CL8             APPLICATION PASSWORD
VPRTSLUN DS    CL8             SLU NAME (PRINTER NETNAME)
VPRTERR  DS    0CL16           ERROR FIELDS
VPRTMAC  DS    CL8             FAILING MACRO
VPRTRC0  DS    CL1             ERROR CODE
VPRTFDBK DS    CL3             RPL FEEDBACK
VPRTSENS DS    CL4             RPL SENSE
VPRTDATL DS    CL2             DATA LENGTH
VPRTDATA DS    0C              START OF DATA
         END   VBAMPRT


MAIN CALLING PROGRAM

VPRT     TITLE 'VBAMPTST  -  TEST VTAM BATCH PRINT'
         PUNCH '   PHASE VBAMPTST,* '
VBAMPTST CSECT
         SAVE  (14,12)
         LR    R3,R15
         USING VBAMPTST,R3
         B     BEGIN
         DC    CL8'VBAMPTST'        PROGRAM NAME
         DC    C' V.1.0 '           VERSION
         DC    C'&UDATE '           DATE OF ASSEMBLY
         DC    C'&UTIME '           TIME OF ASSEMBLY
BEGIN    DS    0H
         ST    R13,SAVEAREA+4
         LR    R2,R13
         LA    R13,SAVEAREA
         ST    R13,8(R2)
         CALL  VBAMPRT,(VBAMURCB)   OPEN
         LTR   R15,R15              TEST RET CODE
         BNZ   CANCEL               NONZERO - CANCEL
         CLI   URCBERR,C' '         ERROR MESSAGE PRESENT
         BH    CANCEL               YES - CANCEL
         MVC   URCBFUNC,=C'SEND'
         CALL  VBAMPRT,(VBAMURCB)
         LTR   R15,R15              TEST RET CODE
         BNZ   CANCEL               NONZERO - CANCEL
         CLI   URCBERR,C' '         ERROR MESSAGE PRESENT
         BH    CANCEL               YES - CANCEL
         MVC   URCBFUNC,=C'CLOS'
         CALL  VBAMPRT,(VBAMURCB)
         LTR   R15,R15              TEST RET CODE
         BNZ   CANCEL               NONZERO - CANCEL
         CLI   URCBERR,C' '         ERROR MESSAGE PRESENT
         BH    CANCEL               YES - CANCEL
         B     PROGEND
PROGEND  DS    0H                   PROGRAM END
         EOJ
CANCEL   DUMP                       CANCEL PROGRAM
         DC    C'VBAMPTST CANCELLED'
* CONSTANTS/LITERALS                                                *
SAVEAREA DS    18F
         LTORG
VBAMURCB DS    0F
URCBFUNC DC    C'OPEN'
         DC    CL8'VBAMPRT'
         DC    CL8' '
         DC    CL8'LO024AD1'        VTAM NAU
*         DC    CL8'LO124DB1'
URCBERR  DS    CL12
URCBSENS DS    CL4
URCBDATL DC    AL2(URCBDATE-URCBDATA)
URCBDATA DS    0C                   3270 DATA STREAM
COMMAND  DC    X'F5'                WRITE/ERASE
WCC      DC    X'C8'                    RESET/START PRINT
         DC    X'0C'                    FORMS FEED
         DC    X'0D'                    CR
         DC    C'TEST            SEITE 1'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    X'15'                    NEW LINE
         DC    C'TEST     CARRIAGE RETURN'
         DC    X'0D'                    CR
         DC    C'TEST     CARRIAGE RETURN'
         DC    X'0D'                    CR
         DC    X'0C'                    FORMS FEED
         DC    X'0D'                    CR
         DC    C'TEST            SEITE 2'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    132C'-'
         DC    X'15'                    NEW LINE
         DC    X'15'                    NEW LINE
         DC    C'TEST     END OF MESSAGE '
         DC    X'0D'                    CR
         DC    X'0C'                    FORMS FEED
         DC    X'0D'                    CR
         DC    X'19'                    END OF MESSAGE
URCBDATE EQU   *
         END   VBAMPTST


Willi Kuhn
Independent Systems Programmer (Germany)              c Willi Kuhn 1991

