Printer test program

TESTPR was written to help in the set up and maintenance of
our installation's printers. It started off as an exercise in writing
a simple VTAM application program to write some data to a
printer and has evolved into a useful tool for testing printers
and diagnosing problems.

The program has been written to perform all the steps required
to write a test pattern to a printer, one after another, checking
for errors at each step. The VTAM code is entirely
synchronous to avoid the problems of determining exactly
where and when a problem is detected. If an error occurs,
relevant diagnostic information is formatted, such as the
contents of registers 15 and 0 and the RPL return code,
feedback 2, and sense bytes. With this information, it should
be possible to determine what the problem is.

Having diagnosed the problem, the TESTPR program offers a
way of doing further testing. Typically, problems will fall into
two general areas: hardware problems, which you can't do
much about, and LOGMODE problems, which can generally
be patched. In this instance, TESTPR can be used to test your
'standard' printer LOGMODE tables to determine which entry
is most suitable. This is done by using the basic format of the
TESTPR command (from the TSO command line), ie:

      TESTPR  printer-name  LOGMODE(name) APPLID(name)

The APPLID and LOGMODE parameters are optional, the Â¨
default values being specified in the program.

Should you find that none of your existing LOGMODE entries
work, you can use the BIND image specified in the program,
which should work for just about any printer. Since buffer sizes
are fairly dynamic, these may be overridden on the command
line to give various sizes. To do this, use the second format of
the TESTPR command, ie:

      TESTPR  printer-name  QUERY  SLUBUFF(buffer size)
                  PLUBUFF(buffer size) LUTYPE(lutype)
                  APPLID(name)

As with the first format, all parameters are optional except the
printer name. If any of the other values are specified, they will
be plugged into the BIND image hard-coded into the program.

In all but a few very rare cases this should be enough to solve
any printer problems.

**********************************************************************
*   This program will attempt to acquire a named printer and send    *
*   a test print to it. Should any step in the acquire/print fail,   *
*   diagnostic information will be displayed.                        *
*   On entry, R1 points to the CPPL.                                 *
**********************************************************************
TESTPR   CSECT ,
         USING *,R15
         B     HERE
         DC    C'TESTPR  &SYSDATE &SYSTIME'
HERE     SAVE  (14,12)
         DROP   R15
         LR    R12,R15
         USING SABTPR,R12
         LA    R11,SAVEAREA
         ST    R13,4(,R11)
         ST    R11,8(,R13)
         LR    R13,R11
**********************************************************************
*   Set up globally available addresses and map them with the        *
*   relevant DSECTs.                                                 *
**********************************************************************
         LA    R2,RPL              ->Request Parameter List
         USING IFGRPL,R2
         LA    R3,NIB              ->Node Information Block
         USING ISTDNIB,R3
         LA    R6,ACB              ->Access method Control Block
         USING IFGACB,R6
**********************************************************************
*   Parse the input parameters for the printer name and either the   *
*   logmode, or alterations to the internal BIND image. The command  *
*   format is:                                                       *
*    SABTPR printer-name    LOGMODE(logmode-entry)                   *
*                           APPLID(application-name)                 *
*    --- or -----------------------------------------------------    *
*    SABTPR printer-name    QUERY                                    *
*                           SLUBUFF(buffer size)                     *
*                           PLUBUFF(buffer size)                     *
*                           LUTYPE(lutype)                           *
*                           APPLID(application-name)                 *
*   If any of the second block options (QUERY etc...) are specified  *
*   we will use the internal BIND image, and ignore the LOGMODE      *
*   name. Otherwise, we will use the logmode name specified. If no   *
*   logmode has been given, we use the default of SCS .              *
**********************************************************************
         USING CPPL,R1             (Command Processor Parameter List)
         USING PPL,R4              (Parse Parameter List)
*--------------------------------- Initialize PPL --------------------*
         LA    R4,PPLAREA          ->Parse parameter list
         MVC   PPLUPT,CPPLUPT      ->User profile table (UPT)
         MVC   PPLECT,CPPLECT      ->Environment control table (ECT)
         MVC   PPLCBUF,CPPLCBUF    ->Command buffer
         LA    R15,ECBPARS         ->Event control block (ECB)
         ST    R15,PPLECB
         L     R15,=A(SABPCL)      ->Parameter control list (PCL)
         ST    R15,PPLPCL
         LA    R15,PDLADDR         ->Parameter descriptor list (PDL)
         ST    R15,PPLANS
*--------------------------------- Save caller's userid in message ---*
         USING PSCB,R4             (Protected Step Control Block)
         L     R4,CPPLPSCB         ->PSCB
         SR    R15,R15             Clear for IC
         IC    R15,PSCBUSRL        Length of userid
         BCT   R15,*+10            Save for userid :-
         MVC   PRTUSER(*-*),PSCBUSER
         EX    R15,*-6
*--------------------------------- Invoke Parse service routine ------*
         LA    R4,PPLAREA          ->Parse parameter list
         CALLTSSR EP=IKJPARS,MF=(E,(4))
         LTR   R15,R15
         BNZ   RETURN
*--------------------------------- Extract printer name --------------*
         MVC   NIBSYM(8),=CL8' '   Clear area in case it's .lt. 8 chars
         USING CMDSECT,R4          (Parse descriptor list)
         L     R4,PDLADDR          ->Parse descriptor list
         L     R14,PCE1            ->Printer name
         LH    R15,PCE1+4          Length of printer name
         BCT   R15,*+10
         MVC   NIBSYM(*-*),0(R14)  Move to NIB
         EX    R15,*-6
*--------------------------------- Extract logmode name --------------*
         MVC   NIBLMODE(8),=CL8' ' Clear area in case it's .lt. 8 chars
         L     R14,PCE222          ->Logmode name
         LH    R15,PCE222+4        Length of logmode name
         TM    PCE222+6,X'80'      Did we get one ?
         BO    *+12                (yes)
         LA    R14,DFLTMODE        (no ) Use our default
         LA    R15,8
         BCT   R15,*+10            Move to work area
         MVC   NIBLMODE(*-*),0(R14)
         EX    R15,*-6
         MVC   PRTLOGM,NIBLMODE    Move logmode name to print message
*--------------------------------- Extract application name ----------*
         L     R14,PCE777          ->application name
         LH    R15,PCE777+4        Length of application name
         TM    PCE777+6,X'80'      Did we get one ?
         BZ    TESTSLU             (no )
         XC    APPLIDN,APPLIDN     Clear application name field
         STC   R15,APPLID          Save application name length
         BCT   R15,*+10            Move to work area
         MVC   APPLIDN(*-*),0(R14)
         EX    R15,*-6
*--------------------------------- Extract SLU buffer size -----------*
TESTSLU  TM    PCE333+6,X'80'      Was the SLU buffer size specified ?
         BZ    TESTPLU             (no )
         L     R14,PCE333          ->SLU buffer size
         MVC   SLUBUFR(1),0(R14)   Move SLU buffer parm to BIND image
         OI    FLAGS,NOLMODE       Do not use logmode entry
*--------------------------------- Extract PLU buffer size -----------*
TESTPLU  TM    PCE444+6,X'80'      Was the PLU buffer size specified ?
         BZ    TESTLUT             (no )
         L     R14,PCE444          ->PLU buffer size
         MVC   PLUBUFR(1),0(R14)   Move PLU buffer parm to BIND image
         OI    FLAGS,NOLMODE       Do not use logmode entry
*--------------------------------- Extract LU type -------------------*
TESTLUT  TM    PCE555+6,X'80'      Was the LU type specified ?
         BZ    TESTQRY             (no )
         L     R14,PCE555          ->LU type
         MVC   LUTYPE(1),0(R14)    Move LU type to BIND image
         OI    FLAGS,NOLMODE       Do not use logmode entry
*--------------------------------- Extract QUERY flag ----------------*
TESTQRY  LH    R15,PCE6            Was the "query" option specified?
         LTR   R15,R15
         BZ    TESTEND             (no )
         OI    BNDQUERY,X'80'      Set the queryable flag
         OI    FLAGS,NOLMODE       Do not use logmode entry
*--------------------------------- Command parsing complete ----------*
TESTEND  TM    FLAGS,NOLMODE       Do we need to clear logmode ?
         BZ    OPENACB             (no )
         MVC   NIBLMODE(8),=CL8' ' Clear LOGMODE specified by user
         LA    R0,LUBIND           ->our bind image
         ST    R0,NIBNDAR          Stuff into NIB
*--------------------------------- Open our ACB to VTAM --------------*
OPENACB  OPEN  ((R6))              Open VTAM ACB
         LTR   R15,R15             Did it open ?
         BNZ   OPNERR              (no )
*--------------------------------- Acquire the requested printer -----*
         OPNDST RPL=(R2),          Go acquire the printer.             *
               ACB=(R6),                                               *
               NIB=(R3),                                               *
               OPTCD=(SYN,ACQUIRE)
         LTR   R15,R15             Did we get control of the printer
         BNZ   ACQERR              (no )
**********************************************************************
*   Send a few lines of test data to the printer. Carriage control   *
*   has been limited to issuing "new-line" (x'15') and "form-feed"   *
*   (X'0C') commands, which all printers should respond to.          *
**********************************************************************
         MVC   PRTNAME,NIBSYM      Save printer name in message
         LA    R7,MSGBUFF          Point to message test
         LA    R8,LMSGBUFF         Get its length
         SEND RPL=(R2),            Send message to printer             *
               ACB=(R6),                                               *
               AREA=(R7),                                              *
               RECLEN=(R8),                                            *
               BRACKET=(BB,EB),                                        *
               OPTCD=(SYN)
         LTR   R15,R15             Did the message go ?
         BNZ   SNDERR              (no )
*--------------------------------- Printed OK, release the printer ---*
CLOSEDST CLSDST RPL=(R2),                                              *
               ACB=(R6),                                               *
               OPTCD=(SYN,RELEASE)
         LTR   R15,R15             Did we release it OK ?
         BNZ   RELERR              (no )
*--------------------------------- Close ACB and issue end message ---*
CLOSEACB CLOSE ((R6))              Close the ACB
         LTR   R15,R15             Did the ACB close ?
         BNZ   CLOERR              (no )
         TM    FLAGS,NOLMODE       Did we use the internal BIND image?
         BZ    *+10                (no )
         MVC   NIBLMODE(8),=CL8'not-used'
         MVC   M200NAME,NIBSYM
         MVC   M200MODE,NIBLMODE
         TPUT  M200,L'M200
RETURN   LA    R4,PPLAREA          ->Parse parameter list
         L     R4,PPLANS-PPL(,R4)  ->Answer area
         LTR   R4,R4               Null?
         BZ    EXITRC              (yes)
         IKJRLSA (4)               (no )
EXITRC   L     R13,4(,R13)
         RETURN (14,12),RC=0
**********************************************************************
*   Various error routines.                                          *
**********************************************************************
*--------------------------------- Can't open the ACB ----------------*
OPNERR   STM   R15,R0,REGERR
         TPUT  M010,L'M010
         BAL   R11,FMTREGS
         BAL   R11,FMTACB
         B     RETURN
*--------------------------------- Can't acquire printer -------------*
ACQERR   STM   R15,R0,REGERR
         TPUT  M011,L'M011
         BAL   R11,FMTREGS
         BAL   R11,FMTRPL
         BAL   R11,FMTNIB
         B     CLOSEACB
*--------------------------------- Can't release printer -------------*
RELERR   STM   R15,R0,REGERR
         TPUT  M012,L'M012
         BAL   R11,FMTREGS
         BAL   R11,FMTRPL
         BAL   R11,FMTNIB
         B     CLOSEACB
*--------------------------------- Can't close the ACB ---------------*
CLOERR   STM   R15,R0,REGERR
         TPUT  M013,L'M013
         BAL   R11,FMTREGS
         BAL   R11,FMTACB
         B     RETURN
*--------------------------------- Can't send data to printer --------*
SNDERR   STM   R15,R0,REGERR
         TPUT  M014,L'M014
         BAL   R11,FMTREGS
         BAL   R11,FMTRPL
         B     CLOSEACB
*--------------------------------- Format R15 and R0 at error --------*
FMTREGS  UNPK  M101R15(9),REGERR(5)
         TR    M101R15(8),TBLHEX
         MVI   M101R15+8,C''''
         UNPK  M101R00(9),REGERR+4(5)
         TR    M101R00(8),TBLHEX
         MVI   M101R00+8,C''''
         TPUT  M100,L'M100
         TPUT  M101,L'M101
         BR    R11
*--------------------------------- Format ACB error flag -------------*
FMTACB   UNPK  M103ERR(3),ACBERFLG(2)
         TR    M103ERR(2),TBLHEX
         MVI   M103ERR+2,C''''
         TPUT  M102,L'M102
         TPUT  M103,L'M103
         BR    R11
*--------------------------------- Format RPL return/feedback codes --*
FMTRPL   UNPK  M105RTN(3),RPLRTNCD(2)
         TR    M105RTN(2),TBLHEX
         MVI   M105RTN+2,C''''
         UNPK  M105FDB(3),RPLFDB2(2)
         TR    M105FDB(2),TBLHEX
         MVI   M105FDB+2,C''''
         UNPK  M105SEN(9),RPLSSEI(5)
         TR    M105SEN(8),TBLHEX
         MVI   M105SEN+8,C''''
         TPUT  M104,L'M104
         TPUT  M105,L'M105
         BR    R11
*--------------------------------- Format NIB connection flag --------*
FMTNIB   UNPK  M107CON(3),NIBCON(2)
         TR    M107CON(2),TBLHEX
         MVI   M107CON+2,C''''
         TPUT  M106,L'M106
         TPUT  M107,L'M107
         BR    R11
**********************************************************************
*   Data areas and constants                                         *
**********************************************************************
DW       DC    D'0'                WORKAREA
REGERR   DC    2F'0'               R15, R0 AT TIME OF ERROR
SAVEAREA DC    18F'0'              REGISTER SAVEAREA
PPLAREA  DC    7A(0)               PARSE PARAMETER LIST (PPL)
PDLADDR  DC    A(0)                ->PARSE DESCRIPTOR LIST (PDL)
ECBPARS  DC    A(0)                PARSE SERVICE ECB
FLAGS    DC    X'00'               FLAGS :-
NOLMODE  EQU   X'80'                USE DEFAULT LOGMODE
APPLID   DC    AL1(6)              APPLICATION NAME :-
APPLIDN  DC    CL8'WATPR   '
DFLTMODE DC    CL8'SCS     '       DEFAULT LOGMODE NAME
NL       EQU   21                  EQUATE FOR NEW LINE
FF       EQU   12                  EQUATE FOR FORM FEED
MSGBUFF  DC    AL1(NL,NL)          MESSAGE FOR PRINTER :-
         DC    C'+--------------------------------+',AL1(NL)
         DC    C'       THIS IS A TEST MESSAGE     ',AL1(NL)
         DC    C'          ISSUED TO PRINTER       ',AL1(NL)
PRTNAME  EQU   *+13,8,C'C'
         DC    C'                                  ',AL1(NL)
         DC    C'                BY                ',AL1(NL)
PRTUSER  EQU   *+13,8,C'C'
         DC    C'                                  ',AL1(NL)
         DC    C'           USING LOGMODE          ',AL1(NL)
PRTLOGM  EQU   *+13,8,C'C'
         DC    C'                                  ',AL1(NL)
         DC    C'+--------------------------------+',AL1(NL,FF)
LMSGBUFF EQU   *-MSGBUFF
         DC    C'0123456789ABCDEF'
TBLHEX   EQU   *-256
*                                  BIND IMAGE :-
LUBIND   DC    X'01'                NON NEGOTIABLE BIND
         DC    X'03'                FM PROFILE
         DC    X'03'                TS PROFILE
         DC    X'B1'                PRIMARY PROTOCOL
         DC    X'90'                SECONDARY PROTOCOL
         DC    X'70'                COMMON PROTOCOL
         DC    X'80'
         DC    X'00'                NO SECONDARY SEND PACING
         DC    X'00'                NO SECONDARY RECEIVE PACING
SLUBUFR  DC    X'85'                MAXRU
PLUBUFR  DC    X'C7'                MAXRU
         DC    X'07'                NO PRIMARY SEND PACING
         DC    X'00'                NO PRIMARY RECEIVE PACING
LUTYPE   DC    X'01'                PSERVIC :
BNDQUERY DC    X'00'                 DEVICE QUERYABLE FLAG
         DC    X'0001E100000000000000'
         DC    F'0'
ACB      ACB   AM=VTAM,APPLID=APPLID
RPL      RPL   AM=VTAM
NIB      NIB   LISTEND=YES
M010     DC    C'TPR010E Unable to OPEN VTAM ACB'
M011     DC    C'TPR011E Unable to ACQUIRE selected printer'
M012     DC    C'TPR012E Unable to RELEASE selected printer'
M013     DC    C'TPR013E Unable to CLOSE VTAM ACB'
M014     DC    C'TPR014E Send data failure'
M100     DC    C'TPR100I Registers at time of failure:'
M101     DC    C'TPR101I     R15: X''********''  R0: X''********'''
M101R15  EQU   M101+19,9,C'X'
M101R00  EQU   M101+36,9,C'X'
M102     DC    C'TPR102I ACB error fields:'
M103     DC    C'TPR103I     ACBERFLG: X''**'''
M103ERR  EQU   M103+24,3,C'X'
M104     DC    C'TPR104I RPL error fields:'
M105     DC    C'TPR105I     RTNCD: X''**''   FDBK2: X''**''   SENSE: X*
               ''********'''
M105RTN  EQU   M105+21,3,C'X'
M105FDB  EQU   M105+36,3,C'X'
M105SEN  EQU   M105+51,9,C'X'
M106     DC    C'TPR104I NIB connect flag:'
M107     DC    C'TPR107I     NIBCON: X''**''  (X''40''  -  CON=YES)'
M107CON  EQU   M107+22,3,C'X'
M200     DC    C'TPR200I Program completed. (Printer: ******** Logmode *
               ********)'
M200NAME EQU   M200+37,8,C'C'
M200MODE EQU   M200+54,8,C'C'
***********************************************************************
*   Parse control list - parse command line parameters.               *
***********************************************************************
SABPCL   IKJPARM DSECT=CMDSECT
PCE1     IKJPOSIT JOBNAME,UPPERCASE,                                   *
               PROMPT='name of printer to be tested',                  *
               HELP=('name of a printer to which you wish to send a tes*
               t print','a 1-8 alphameric character string ')
PCE2     IKJKEYWD
         IKJNAME 'LOGMODE',SUBFLD=PCE22,ALIAS='MODE'
PCE3     IKJKEYWD
         IKJNAME 'SLUBUFF',SUBFLD=PCE33
PCE4     IKJKEYWD
         IKJNAME 'PLUBUFF',SUBFLD=PCE44
PCE5     IKJKEYWD
         IKJNAME 'LUTYPE',SUBFLD=PCE55
PCE6     IKJKEYWD
         IKJNAME 'QUERY'
PCE7     IKJKEYWD
         IKJNAME 'APPLID',SUBFLD=PCE77
PCE22    IKJSUBF
PCE222   IKJIDENT 'LOGMODE',FIRST=ALPHA,OTHER=ANY,MAXLNTH=8,           *
               DEFAULT='SCS     '
PCE33    IKJSUBF
PCE333   IKJIDENT 'SLUBUFF',HEX,MAXLNTH=2
PCE44    IKJSUBF
PCE444   IKJIDENT 'PLUBUFF',HEX,MAXLNTH=2
PCE55    IKJSUBF
PCE555   IKJIDENT 'LUTYPE',HEX,MAXLNTH=2
PCE77    IKJSUBF
PCE777   IKJIDENT 'APPLID',FIRST=ALPHA,OTHER=ANY,MAXLNTH=8,            *
               DEFAULT='WATPR   '
         IKJENDP
***********************************************************************
*        Mapping MACROs                                               *
***********************************************************************
         CVT   DSECT=YES           COMMUNICATIONS VECTOR TABLE
         IKJCPPL ,                 COMMAND PROCESSOR PARAMETER LIST
         IKJPPL ,                  PARSE PARAMETER LIST
         IKJPSCB ,                 PROTECTED STEP CONTROL BLOCK
         IFGACB AM=VTAM,DSECT=YES
         IFGRPL AM=VTAM,DSECT=YES
         ISTDNIB
         EQUREG R
         END   ,


S A Barnett
Senior Technical Consultant
IMI Computing Ltd (UK)

