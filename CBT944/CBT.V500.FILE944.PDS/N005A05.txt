A NetView command processor

Since we installed NetView at our installation many of the
command processors that we originally used under TSO have
been converted so that they can be used under NetView. The
following command processor is used by our Operations
department to ensure that changes to the MVS LINKLIST
concatenation are successful. This command is issued
automatically when changes are made to the LINKLIST. The
operator then checks the output against a list supplied by
Technical Support. In the past we have had failures because a
library was not placed in the LINKLIST and the operators did
not realize. We IPL once a month now so this has caused us
some problems. The NetView command processor overcomes
the problems previously experienced.

If you require further details about NetView command
processors, the NetView Customization (SC31-6016) and
NetView Customization Using Assembler  (SC31-6078)
manuals will be of use to you.

BLNKLST  CSECT
*        **************************************************************
*        * PROGRAM NAME: BLNKLST.                                     *
*        * PURPOSE:      TO LIST LLA DATASETS AT NETVIEW SCREEN.      *
*        **************************************************************
         DSICBS    DSICWB,DSIMVT,DSIPDB,DSISVL,DSISWB,DSITIB,          X
               DSITVB,PRINT=NO
         USING     *,R15
         B         BLNK0010
         DC        C'BLNKLST  &SYSDATE. AT &SYSTIME.'
BLNK0010 EQU       *
         STM       R14,R12,12(R13)     /* SAVE REGISTERS.            */
         DROP      R15                 /* DROP TEMP BASE.            */
         LR        R12,R15             /* SET BASE REGISTER.         */
         USING     BLNKLST,R12         /* ADDRESS R12.               */
         LR        R11,R1              /* LOAD CWB ADDR.             */
         USING     DSICWB,R11          /* BASE FOR CWB.              */
         LA        R1,CWBSAVEA         /* USE CWBSAVEA FOR SAVEAREA. */
         ST        R1,8(R13)           /* STORE INTO CALLERS SAREA.  */
         ST        R13,4(R1)           /* STORE CALLERS SA IN MINE.  */
         LR        R13,R1              /* R13 HAS MY SAVEAREA ADDR.  */
*        **************************************************************
*        * ADDRESSABILITY TO THE TASK INFORMATION BLOCK (TIB), THE    *
*        * TASK VECTOR BLOCK (TVB), AND THE MAIN VECTOR BLOCK (MVT).  *
*        **************************************************************
         L          R10,CWBTIB         /* GET DSITIB ADDRESS.        */
         USING      DSITIB,R10         /* ESTABLISH ADDRESSABILITY.  */
         L          R9,TIBTVB          /* GET DSITVB ADDRESS.        */
         USING      DSITVB,R9          /* ESTABLISH ADDRESSABILITY.  */
         L          R8,TVBMVT          /* GET DSIMVT ADDRESS.        */
         USING      DSIMVT,R8          /* ESTABLISH ADDRESSABILITY.  */
         L          R3,16              /* GET ADDRESS OF CVT.        */
         USING      CVT,R3             /* ADDRESS CVT.               */
         L          R3,CVTLLTA         /* LOAD CVT FIELD FOR LLA.    */
         USING      LLAT,R3            /* ESTABLISH ADDR TO LLT.     */
         LA         R7,LLATDSN         /* POINT TO 1ST DATASET NAME. */
         SR         R4,R4              /* ZEROIZE REGISTER 4.        */
*        **************************************************************
*        * BUILD NETVIEW BUFHDR:-                                     *
*        * HDRBLENG - TOTAL LENGTH OF BUFFER.                         *
*        * HDRMLENG - LENGTH OF MESSAGE TEXT.                         *
*        * HDRTDISP - OFFSET FROM START OF BUFHDR TO START OF MSG     *
*        *            TEXT.                                           *
*        * HDRDOMID - CURRENT DOMAIN ID (MVTCURAN).                   *
*        * HDRMTPE  - MESSAGE TYPE (SET TO USER TYPE MESSAGE).        *
*        * HDRTSTMP - TIME STAMP.                                     *
*        **************************************************************
         USING     BUFHDR,R2           /* ADDRESS IT.                */
         LA        R2,MSGBUFF          /* GET ADDRESS OF BUFFER.     */
         MVC       HDRMLENG,=AL2(MSG00L) /* MOVE MSG LENGTH TO BUF.  */
         LA        R1,BUFHDRND-BUFHDR  /* GET OFFSET TO MSG TEXT.    */
         STH       R1,HDRTDISP         /* MOVE MSG OFFSET TO BUFFER. */
         MVC       HDRDOMID,MVTCURAN   /* DOMAIN ID.                 */
         MVI       HDRMTYPE,HDRTYPEU   /* USER MSG.                  */
         AH        R1,HDRMLENG         /* MSG LEN+HDRTDISP.          */
         STH       R1,HDRBLENG         /* STORE BUFFER LEN.          */
BLNK0020 EQU       *
         LA        R4,1(R4)            /* INCREMENT COUNTER.         */
         C         R4,LLATCNT          /* COMPARE NUMBER OF ENTRIES. */
         BH        BLNKEXIT            /* IF HIGHER BLNKEXIT.        */
*        **************************************************************
*        * BUILD THE MESSAGE.                                         *
*        **************************************************************
         MVC       MSG,MSG00           /* INIT RE-ENTRANT MSG AREA.  */
         MVC       MSG+9(44),0(R7) /* MOVE IN DATASET NAME.      */
         LA        R7,45(R7)           /* INCREMENT POINTER TO NEXT. */
*        **************************************************************
*        * DISPLAY THE MESSAGE USING DSIPSS TYPE=OUTPUT.              *
*        **************************************************************
         DSIPSS    SWB=CWBSWB,TYPE=OUTPUT,BFR=(R2)
         B         BLNK0020            /* GO GET NEXT ONE.           */
BLNKEXIT EQU       *
         L         R13,4(R13)          /* GET CALLERS SAVEAREA ADDR. */
         L         R14,12(R13)         /* RESTORE RETURN ADDRESS.    */
         LM        R0,R12,20(R13)      /* RESTORE REGS.              */
         BR        R14                 /* RETURN.                    */
         LTORG
MSG00    DC    C'BLNK001I                                            '
MSG00L   EQU       *-MSG00
DSICWB   DSECT
         ORG       CWBADATD
MSGBUFF  DS        0XL((BUFHDRND-BUFHDR)+MSG00L)
         DS        XL(BUFHDRND-BUFHDR)
MSG      DS        CL(MSG00L)
         DS        XL(256-(*-CWBADATD)) /* AUTODATA LENGTH CHECK.    */
         CVT       DSECT=YES           /* CVT DSECT.                 */
LLAT     DSECT                         /* DSECT TO MAP STORAGE.      */
HEADER   DS        CL4'LLT '           /* DSECT LABEL.               */
LLATCNT  DS        F                   /* NUMBER OF ENTRIES IN TBL.  */
LLATDSLN DS        X                   /* DATASET LENGTH.            */
LLATDSN  DS        CL44' '             /* DATASET NAME.              */
         END


ASSEMBLY AND LINK-EDIT JCL

//STS01V      JOB   (SDTS),'J.BRADLEY',CLASS=A,MSGCLASS=Q,
//            MSGLEVEL=(1,1),NOTIFY=STS01
//*      **************************************************************
//*      * JOB TO ASSEMBLE AND LINK EDIT COMMAND PROCESSORS IN        *
//*      * NETVIEW.                                                   *
//*      **************************************************************
//ASM1        EXEC  PGM=IEV90,PARM='OBJ,NODECK,XREF(SHORT)'
//SYSLIB      DD    DSN=SYS1.MACLIB,DISP=SHR
//            DD    DSN=SYS1.AMODGEN,DISP=SHR
//            DD    DSN=STS01.BD.MACLIB,DISP=SHR
//            DD    DSN=SYS1.HASPSRC,DISP=SHR
//            DD    DSN=SYS1.ATSOMAC,DISP=SHR
//SYSUT1      DD    UNIT=SYSDA,SPACE=(1700,(600,100))
//SYSUT2      DD    UNIT=SYSDA,SPACE=(1700,(300,50))
//SYSUT3      DD    UNIT=SYSDA,SPACE=(1700,(300,50))
//SYSPRINT    DD    SYSOUT=*
//SYSLIN      DD    UNIT=SYSDA,SPACE=(80,(200,50)),DISP=(,PASS)
//SYSIN       DD    DSN=STS01.BD.DATA(BLNKLST),DISP=SHR
//*
//LKED1       EXEC  PGM=IEWL,PARM=('MAP,LET,LIST,NCAL,RENT'),
//            COND=(0,NE,ASM1)
//SYSUT1      DD    UNIT=SYSDA,SPACE=(1024,(50,20))
//SYSPRINT    DD    SYSOUT=*
//SYSLMOD     DD    DSN=CNM.V1R3.USERLNK,DISP=SHR
//SYSLIB      DD    DSN=*.ASM1.SYSLIN,DISP=(OLD,DELETE)
//SYSLIN      DD    *
 INCLUDE SYSLIB
 NAME    BLNKLST(R)
/*


John Bradley
Senior Technical Support Engineer (UK)

