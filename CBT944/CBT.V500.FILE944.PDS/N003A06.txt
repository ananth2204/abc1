Tightening Net/Master security with CA-ACF2

Net/Master offers the facility to eliminate the need for users to
enter their passwords when selecting each application under
MAI.  This is achieved by storing the user's password in a
Net/Master system variable called &USERPW.  This variable
is encrypted in storage and decrypted each time an NCL
procedure references it.

This does, however, introduce a potential security risk.  To
eliminate this problem, we have implemented a CA-ACF2
facility called log-on inheritance.  Using this facility requires
changing the MAI exit, MAIEX02, as shown below.  Once
installed, the Net/Master system parameter USERPW can be
set to USERPW=NO.  This will stop passwords being stored.
Each time users sign on to Net/Master they are prompted for a
user-id and password.  Once verified with CA-ACF2, the user
no longer needs to enter his or her password.  When selecting
an application, Net/Master calls the MAIEX02 exit.  At this
stage the exit will ask CA-ACF2 for a token password by
providing the user-id and terminal name.

The exit formats a sign-on command for the selected
application, using the token in place of the user's password.
When the application calls CA-ACF2 to validate the sign-on,
CA-ACF2 compares the token against the last token it gave out
for that log-on-id.  If it matches, the password is considered
valid.  The life of an inheritance password is two minutes or
one call.

This program has been written to pass USERID/USERPW.
There are some applications that do not use log-on data or
perhaps need a format different to the one shown, eg IMS and
CICS.  These applications should be considered before
implementing this exit.

MAIEX02  TITLE 'NET/MASTER MAI USER EXIT 2'
***     PROGRAM:        MAIEX02                                     ***
*       ABSTRACT:       THIS PROGRAM IS CALLED AS AN EXIT TO          *
*                       SETUP THE CALLERS USERID AND A TOKEN PASSWORD *
*                       IN THE LOGON USER DATA.                       *
* MACRO LIBRARIES:                                                    *
* NM.NMMACLIB                                                         *
* CAI.ACF2.ACFMAC                                                     *
* LINK-EDIT CONTROL STATEMENTS FOR THIS PROGRAM:                      *
* INCLUDE SYSLIB($ACFGCVT)                                            *
* NAME    MAIEX02(R)                                                  *
* NOTE: THIS EXIT MUST BE CODED RE-ENTRANTLY, AND LINKED WITH THE     *
*       'RENT' ATTRIBUTE. IT CAN BE PLACED IN SYS1.LPALIB IF REQUIRED.*
*        R E G I S T E R    U S A G E.                                *
*        R1    WORK.                                                  *
*        R2    RETURN CODE.                                           *
*        R3    COMMUNICATIONS WORK AREA.                              *
*        R4    ACF2 CVT                                               *
*        R5    ADDRESS OF USER DATA.                                  *
*        R6    COUNTER.                                               *
*        R8    WORK.                                                  *
*        R11   BASE REGISTER                                          *
*        R12   UNUSED                                                 *
*        R13   SAVE AREA CHAIN.                                       *
*        R14   WORK, RETURN.                                          *
***      R15   WORK, ENTRY ADDRESS.                                 ***
MAIEX02  CSECT
* NOTE THAT THIS MODULE MUST BE CODED RE-ENTRANTLY.                   *
         USING MAIEX02,R11              SET BASE ADDRESSABILITY.
         STM   R14,R12,12(R13)          SAVE ENTRY REGISTERS.
         LR    R11,R15                  LOAD BASE ADDRESS.
         L     R3,0(R1)                 GET COMMUNICATION AREA ADDRESS.
         GETMAIN R,LV=AREALEN           GETMAIN A REGISTER SAVEAREA.
         USING WORKAREA,R13             SET AREA BASE.
         ST    R1,8(R13)                CHAIN NEW AREA ADDRESS.
         XC    0(AREALEN,R1),0(R1)      CLEAR GETMAINED AREA.
         ST    R13,4(R1)                CHAIN OLD SAVEAREA.
         LR    R13,R1                   POINT TO NEW SAVE AREA.
* SET BASE ADDRESS OF COMMUNICATION AREA PASSED IN R1 (PUT INTO R3).  *
         USING MAE2,R3                  SET BASE REGISTER FOR IT.
* SET BASE ADDRESS OF ACF2 CVT                                        *
         ACFGACVT R4,NONE=NOCVT         GET ACF2 CVT
         USING ACCVT,R4                 ACF2 CVT ADDRESSABILITY
* DETERMINE TYPE OF CALL.                                             *
         L     R15,MAE2FUNC             LOAD FUNCTION CODE.
         B     MAEX0100(R15)            BRANCH ON FUNCTION CODE.
MAEX0100 DS    0H
         B     MAEX1000                 0=SYSTEM STARTUP.
         B     MAEX2000                 4=SYSTEM CLOSEDOWN.
         B     MAEX3000                 8=MAI SESSION START.
         B     MAEX4000                 12=MAI SESSION END.
* SYSTEM STARTUP CALL. WE HAVE NOTHING TO DO HERE.                    *
MAEX1000 DS    0H
         SR    R2,R2                    SET ZERO RETURN CODE.
         B     MAEX9000                 RETURN TO CALLER.
* SYSTEM CLOSEDOWN CALL. WE HAVE NOTHING TO DO HERE.                  *
MAEX2000 DS    0H
         SR    R2,R2                    SET ZERO RETURN CODE.
         B     MAEX9000                 RETURN TO CALLER.
* MAI SESSION START CALL. SET MAI NODE NAME TO LUNAME FOR FULL SCREEN *
* SESSIONS.                                                           *
MAEX3000 DS    0H
         SR    R2,R2                    ASSUME ZERO RETURN CODE.
         TM    MAE2SFLG,MAE2SFS         FULL SCREEN SESSION ?
         BNO   MAEX9000                 NO-RETURN AND ALLOW THE MAI-OC
*                                       SESSION.
*   SET UP ACF INHERIT
         XC    ACINHRT(ACINLN),ACINHRT  CLEAR OUT ACINHRT STORAGE
         MVI   ACINFCN,ACINFC0D         SET UP FUNCTION CODE
         MVI   ACINSFCN,ACIN$ADD        INDICATE GET-INHERITANCE TOKEN
         MVC   ACINLID,MAE2SUID         SET UP LOGON ID
         MVC   ACINSRC,MAE2STRM         SET UP SOURCE
         MVC   ACINRSRC,=CL40' '        BLANK FILL RESOURCE NAME
         ACFSVC ACINHRT,TYPE=A,CVT=FIND,NONE=NOACF2
         LTR   R15,R15                  DID IT WORK ?
         BNZ   ERROR                    NO...GO PROCESS THE ERROR
*   SETUP LOGON DATA
         MVC   MAE2SUSR,MAE2SUID        MOVE IN USERID
         LA    R5,MAE2SUSR              ADDRESS USER DATA
         LA    R6,8                     MAX LENGTH OF FIELD
MAEX3002 DS    0H
         CLI   0(R5),C' '               IS IT A BLANK
         BE    MAEX3005                 YES, BRANCH
         LA    R5,1(R5)                 ADD ONE TO REGISTER 5
         BCT   R6,MAEX3002              SUBTRACT 1 AND BRANCH
MAEX3005 DS    0H
         MVI   0(R5),C'/'               PUT A SLASH AFTER THE USERID
         MVC   1(8,R5),ACINHID          MOVE IN TOKEN FOR PASSWORD
         LA    R5,8                     SET R5 TO MAXIMUM LENGTH
         SR    R5,R6                    GET LENGTH OF USERID
         LA    R5,9(R5)                 ADD SLASH AND TOKEN
         STH   R5,MAE2SULN              SET LENGTH OF USER DATA
         B     MAEX9000
NOACF2   DS    0H
         LR    R15,8                    ACF2 IS NOT STARTED.
         MVC   MAE2SERM,=CL78'ACF2 NOT ACTIVE, CONTACT SYSTEMS SUPPORT'
         B     MAEX9000
NOCVT    DS    0H
         LR    R15,12                   ACF2 CVT NOT FOUND.
         MVC   MAE2SERM,=CL78'UNABLE TO ESTABLISH ACF2 CVT, CONTACT SYSX
               TEMS SUPPORT'
         B     MAEX9000
ERROR    DS    0H
         LA    R15,16                   ACFVALD FAILED.
         MVC   MAE2SERM,=CL78'ACFINHRT VALIDATION FAILED, CONTACT SYSTEX
               MS SUPPORT'
         B     MAEX9000
* MAI SESSION END CALL. WE HAVE NOTHING TO DO HERE.                   *
MAEX4000 DS    0H
         SR    R2,R2                    ZERO RETURN CODE.
         B     MAEX9000                 RETURN TO CALLER.
* RETURN TO CALLER.                                                   *
MAEX9000 DS    0H
         LR    R1,R13                   LOAD SAVE ADDRESS.
         L     R13,4(R13)               GET OLD SAVEAREA ADDRESS.
         FREEMAIN R,LV=AREALEN,A=(1)    FREE SAVE AREA
         LR    R15,R2                   SET RETURN CODE IN R15.
         L     R14,12(R13)              RELOAD R14.
         LM    R0,R12,20(R13)           RESTORE ENTRY REGISTERS.
         BR    R14                      RETURN TO CALLER.
         LTORG
MAE2     $NMMAEX2                       MACRO TO MAP PASSED
* DSECTS:                                                             *
WORKAREA DSECT
SAVEAREA DS    18F'0'                   SAVEAREA.
ACINHRT  DS    0D
         ACINHRT DSECT=WORKAREA         LOGON INHERITANCE PARAM. BLOCK
AREALEN  EQU   *-WORKAREA               LENGTH FOR GETMAIN.
         ACCVT                          ACF2 COMMUNICATION VECTOR TABLE
         END


Craig Brown
Systems Programmer
Australian Paper Manufacturers (Australia)            c Craig Brown 1991

