Printing CMS files on VTAM printers

The following EXEC and VSE Assembler program are used at
our installation to print CMS files on VTAM-attached printers.


VMPRINT EXEC

The EXEC reads the input file and prepares it for input to the
VSE program, VMPRINT.  Each record is split into two 80-
byte records preceded by an asterisk and a blank.  The EXEC
is issued in the following format:

      VMPRINT fname ftype fmode FF=N EJE=N L=nnn DEST=destid

where fname is the file name, ftype is the file type, fmode is
the file mode, FF specifies whether a form feed should be sent
before starting to print the file, EJE specifies whether a form
feed should be sent after printing the file, nnn specifies the
number of lines per page (1 to 999 or 'NO'), and destid gives
the destination-id.

/* VMPRINT EXEC                                                       */
ARG FNAME ARG.1 ARG.2 ARG.3 ARG.4 ARG.5 .
IF FNAME='?' THEN SIGNAL INFO
FTYPE = LISTING                   /* DEFAULT FILE TYPE */
FMODE = A                         /* DEFAULT FILE MODE */
PRINTER='TD05'                    /* DEFAULT DESTINATION PRINTER */
FF='FF=Y'                         /* DEFAULT INITIAL FORM FEED */
EJE='EJE=Y'                       /* DEFAULT END FORM FEED */
LPP=66                            /* DEFAULT NUMBER OF LINES PER PAGE */
VSEMCID='VMVSE1'                  /* DEFAULT TARGET VSE MACHINE ID */
SPCLASS='A'                       /* DEFAULT SPOOL CLASS (CP) */
IF FNAME='' THEN SIGNAL INFO
PROC:IF INDEX(ARG.1,'=')¬=0 THEN SIGNAL OPTIONS;FTYPE=ARG.1
IF INDEX(ARG.2,'=')¬=0 THEN SIGNAL OPTIONS;FMODE=ARG.2
OPTIONS: DO X=1 TO 6 BY 1
IF SUBSTR(ARG.X,1,5)='DEST=' THEN PRINTER=SUBSTR(ARG.X,6,LENGTH(ARG.X)-5)
IF SUBSTR(ARG.X,1,4)='FF=N' THEN FF=' FF=N '
IF SUBSTR(ARG.X,1,5)='EJE=N' THEN EJE=' EJE=N'
IF SUBSTR(ARG.X,1,6)='L=' THEN LPP=SUBSTR(ARG.X,7,3)
END
SET 'CMSTYPE RT'
STATE FNAME FTYPE FMODE
IF RC¬=0 THEN SIGNAL EXIT
DESBUF
LISTFILE FNAME FTYPE FMODE '(LABEL STACK NOHEADER'
PULL . . . RECFM LINELEN NRECS .
QUEUE "* $$ JOB JNM=VMPRINT,CLASS=5,DISP=D,SYSID=1,USER='909KOD VMPRINT'"
QUEUE '* $$ LST CLASS=Q'
QUEUE '// JOB VMPRINT'
QUEUE '// LIBDEF PHASE,SEARCH=APPLIB1,SUBLIBT,TEMP'
QUEUE "// EXEC VMPRINT,PARM='"PRINTER"'"
QUEUE "* $$VMPRINT " FF EJE "L="LPP " CMS USER="LEFT(USERID(),8)
CP 'SP PUN 'VSEMCID' CL 'SPCLASS
EXECIO '6 PUNCH '
DO X=1 TO NRECS BY 1
     EXECIO '1 DISKR 'FNAME FTYPE FMODE '(VAR LINE'
     LINE=LINE''COPIES(" ",132)
     LINEO='* 'SUBSTR(LINE,1,78)
     EXECIO '1 PUNCH (VAR LINEO'
     LINEO='* 'SUBSTR(LINE,79,78)
     EXECIO '1 PUNCH (VAR LINEO'
END
QUEUE '/*'
QUEUE '/&'
QUEUE '* $$ EOJ'
EXECIO '3 PUNCH'
CP 'SET IMSG OFF'
CP 'SP PUN CLOSE'
CP 'SP PUN SYSTEM'
CP 'SET IMSG ON'
EXIT 00
INFO: SAY "FORMAT IS:"
      SAY " "
      SAY "VMPRINT FNAME FTYPE FMODE DEST=XXXXXXXX FF=Y EJE=Y L=NNN"
EXIT


VMPRINT ASSEMBLER PROGRAM

This program runs in a VSE batch partition.  It reads card-
image data and prints the output on a specified printer.  The
printer can print lines of 80 or 120 characters depending on the
parameters supplied in the control card.  If a line length of 120
characters is required, two input records are read to form one
output line.  All input records start with an asterisk and a
space.  This is the usual input to the program and is prepared
by the VMPRINT EXEC.  A print line of 120 characters is
indicated by 'CMS' on the control card.  The control card is in
the following format:

      * $$VMPRINT FF=y/n EJE=y/n L=nnn CMS USER=userid

where * $$VMPRINT is the control card identifier, FF
specifies whether a form feed is to be sent before starting a
print, EJE specifies whether a form feed is to be sent after the
print job, nnn specifies the number of lines to print before
skipping to a new page (1 to 999 or 'NO'), CMS indicates that
a 120-character print line is to be used, and userid identifies the
CMS user-id of the requestor (alternatively the batch job name
could be specified).

The program requires an entry in VTAM's application names
book with authority to acquire, similar to this:

      VMPRINT   APPL AUTH=(ACQ)

VMPRINT assumes the printer has a buffer size of 1920 bytes.
SYSIPT should be assigned to a reader and SYSLST should be
assigned to a printer.  The program is set up to print on printers
attached to 3274 model A or C controllers.  If you have model
B or D controllers, two statements must be changed.  At label
FORMFEED, the hexadecimal constant 'F5380C' must be
changed to read X'05380C' and at label WCC, X'F538' should
be changed to read X'0538'.

VMPRINT  CSECT
         LR     12,15                   BASE REGS ARE 12 & 9
         LA     9,4095(,12)
         LA     9,1(,9)
         USING  VMPRINT,12,9            ADDRESSABILITY
         LA     10,RPL1
         USING  IFGRPL,10               RPL DSECT
         LA     11,NIB1
         USING  ISTDNIB,11              NIB DSECT
         LA     8,ACB
         USING  IFGACB,8                ACB DSECT
         TM     0(1),X'80'              WAS PARM= SPECIFIED ?
         BNO    NOPRTID                 NO - WRITE ERROR
         CR     1,15                    IS PARM LENGTH 0 ?
         BE     NOPRTID                 YES WRITE ERROR
         LR     6,1                     SAVE ADDRESS OF PRINTER ID
         COMRG
         MVC    USERID(8),24(1)         MOVE IN JOBNAME
         OPEN   IN                      OPEN INPUT
         OPEN   ACB                     ACB
         TM     ACBOFLGS,X'10'          IS IT OPEN ?
         BO     ACBOK
         LA     8,ACBERFLG              ERROR RETURN CODE
         LA     2,1                     LENGTH TO CONVERT
         BAL    7,CONVERT               CONVERT TO PRINTABLE
         DROP   8                       DROP ACB ADDRESSABILITY
         MVC    ACBRC(2),CONDATA        MOVE INTO ERROR MESSAGE
         MVC    ERRORMSG(LACBFAIL),ACBFAIL MOVE TO ERROR BUFFER
         BAL    7,SAYERROR              TELL OPERATOR
         BAL    7,PUTOUT                WRITE MESSAGE
         OI     SWITCH2,READ2END
         OI     SWITCH,EXITRC8
         B      EXIT                    EXIT RC=8
* INSERT PRINTER NAME INTO NIB FROM PARM= OPERAND OF EXEC CARD
ACBOK    SR     2,2                     CLEAR R2
         ICM    2,7,1(6)                INSERT ADDRESS OF PARM LENGTH
         LH     3,0(2)                  LOAD LENGTH OF PARM
         BCTR   3,0                     LESS ONE FOR EXECUTE
         EX     3,MVCPRTIN              MOVE INTO NIB
         EX     3,MVCPRTID              MOVE INTO MESSAGE
         EX     3,MVCPRTI2              MOVE INTO MESSAGE
SETLOGON SETLOGON RPL=(10),OPTCD=START  ALLOW LOGON REQUESTS
         LTR    15,15
         BZ     SIMLOGON
         OI     SWITCH2,READ2END
         OI     SWITCH,EXITRC8
         B      EXIT
SIMLOGON SIMLOGON RPL=(10),NIB=(11),    HAVE PRINTER LOGON TO US       X
               OPTCD=(RELRQ,Q,SYN)
         LTR    15,15                   CHECK RETURN CODE
         BZ     SETDONE
         MVC    GENLBL(9),=CL9'SIMLOGON' WHERE THE ERROR OCCURRED
         OI     SWITCH,EXITRC8          SET RC=8
         OI     SWITCH2,READ2END
         BAL    6,TESTRPL               SHOW RTNCD AND FEEDBACK CODES
         B      EXIT                    EXIT
SETDONE  TM     ECB1+2,X'80'            IS LOGON ECB ALREADY POSTED ?
         BO     PASTWAIT                YES DONT WAIT
         SETIME 30,TIMERECB             SET MAX 30 SECS FOR LOGON
         WAITM  ECB1,TIMERECB,TPENDECB  WAIT FOR AN ECB
PASTWAIT TM     TPENDECB+2,X'80'        IS VTAM CLOSING DOWN ?
         BNO    *+16
         OI     SWITCH2,READ2END
         OI     SWITCH,EXITRC8
         B      VTAMHALT
         TM     TIMERECB+2,X'80'        HAS 30 SECONDS EXPIRED
         BNO    CHKCON
         MVC    ERRORMSG(LTIMEREX),TIMEREX SAY WERE STILL WAITING
         BAL    7,SAYERROR              TELL OPERATOR
         XC     TIMERECB(4),TIMERECB    CLEAR ECB
         B      SETDONE                 GO TO WAIT
CHKCON   TM     NIBFLG1,X'40'           CHECK SESSION ESTABLISHED
         BO     CONOK                   YES
         TM     SWITCH,RETRYED          HAVE WE ALREADY RETRIED CONNECT
         BO     NOLOGO                  YES WRITE ERROR
         OI     SWITCH,RETRYED          SIGNIFY RETRY DONE
         L      15,=A(LOGON1)           ADDRESS OF LOGON ROUTINE
         BALR   14,15                   RETRY CONNECTION
         B      CHKCON                  SEE IF IT WORKED THIS TIME
NOLOGO   MVC    GENLBL(9),=CL9'CINIT'   WHERE ERROR OCCURRED
         BAL    6,TESTRPL               SHOW RPL ERROR FIELDS
         OI     SWITCH,EXITRC8          SET RC=8
         OI     SWITCH2,READ2END
         B      EXIT                    EXIT
CONOK    MODCB  RPL=(10),BRACKET=(BB,NEB),AM=VTAM SET NOT END BRACKET
         GET    IN                      GET INPUT LINE
         CLC    LINEIN(11),=C'* $$VMPRINT' IS IT THE CONTROL CARD ?
         BNE    NOTCMS                  NO, NOT FROM VMPRINT EXEC
         LA     4,60                    YES SCAN FOR OPTIONS
         LA     5,LINEIN+11             START SCAN HERE
CHKFFEED CLC    0(4,5),=CL4'FF=N'       NO INITIAL FORMFEED REQUEST ?
         BNE    *+8                     NO SKIP NEXT INSTRUCTION
         OI     SWITCH,NOSTRTFF         INDICATE NO FORMFEED
         CLC    0(5,5),=CL5'EJE=N'      NO END FORMFEED?
         BNE    *+8                     NO SKIP NEXT LINE
         OI     SWITCH2,NOENDFF         INDICATE NO EJECT REQUEST
         CLC    0(5,5),=CL5' CMS '      FROM VMPRINT EXEC ?
         BNE    *+8                     NO SKIP NEXT LINE
         OI     SWITCH2,FROMCMS         INDICATE FORMATTED BY EXEC
         CLC    0(5,5),=CL5'USER='      USERID? (FOR EOJ TRAILER)
         BNE    *+10                    NO SKIP NEXT LINE
         MVC    USERID(8),5(5)          MOVE USERID
         LA     5,1(5)                  BUMP POINTER
         CLC    0(2,5),=CL2'L='         NO OF LINES PER PAGE SET
         BNE    BCT                     NO, CONTINUE
         CLC    2(2,5),=CL2'NO'         NO LINE COUNT REQUIRED ?
         BNE    *+8                     NO, SKIP NEXT INSTRUCTION
         OI     SWITCH2,NOLINECN        YES, TAKE A NOTE
         TM     2(5),X'F0'              IS FIRST DIGIT NUMERIC?
         BNO    BCT                     NO, IGNORE THIS OPERAND
         OI     SWITCH2,LPPGIVEN        INDICATE LINES PER PAGE SET
         TM     3(5),X'F0'              IS IT A TWO DIGIT NUMBER?
         BNO    MOVLPP1                 NO, MOVE IN ONE DIGIT
         TM     4,(5),X'F0'             IS IT A THREE DIGIT NUMBER?
         BNO    MOVLPP2                 NO, MOVE IN TWO DIGITS
MOVLPP3  MVC    DWORD+5(3),2(5)         YES, MOVE IN THREE DIGITS
         B      BCT
MOVLPP2  MVC    DWORD+6(2),2(5)
         B      BCT
MOVLPP1  MVC    DWORD+7(1),2(5)
BCT      BCT    4,CHKFFEED              CONTINUE SCAN
         TM     SWITCH2,LPPGIVEN        WAS LINES PER PAGE SET?
         BNO    CHKFORM                 NO, USE DEFAULT
         PACK   DWORD(8),DWORD(8)       YES, PACK IT
         CVB    8,DWORD                 CONVERT TO BINARY
         STH    8,LINESPP               STORE OVER DEFAULT
* A LINE IN THE SEND BUFFER HAS THE FOLLOWING FORMAT
* BYTE 1 IS EITHER A BLANK OR A LINEFEED CHARACTER(X'15')
* BYTE 2 IS EITHER A BLANK OR A FORMFEED CHARACTER(X'0C')
* THE REST IS DATA
CHKFORM  TM     SWITCH2,FROMCMS         FORMATTED INPUT FROM CMS EXEC?
         BO     CMSINPUT                YES
         GET    IN                      MOVE FIRST DATA LINE INTO BUFF
         B      NOTCMS                  GO PROCESS
CMSINPUT MVI    WCC+1,X'08'             CHANGE WCC TO 132 CHARACTER LEN
         MVI    FORMFEED+1,X'08'        DITTO
         SR     8,8                     ZERO LINE COUNTER
GETINP   LA     4,16                    LINES PER BLOCK OF SEND DATA
         LA     5,BUF                   SEND BUFFER ADDRESS
         MVI    BUF,X'40'               INITALIZE BYTE ONE AS A BLANK
         TM     SWITCH,NOSTRTFF         FORMFEED NOT REQUIRED?
         BO     NOFF                    YES,SKIP FORM FEED
         MVI    0(5),X'0C'              NO,MOVE IN FORMFEED CHARACTER
         OI     SWITCH,NOSTRTFF         INDICATE WE'VE DONE IT
NOFF     LA     5,1(5)                  BUMP BUFFER ADDRESS
GET      GET    IN                      GET INPUT
         MVC    0(78,5),LINEIN+2        MOVE INTO BUFFER, IGNORE '* '
         GET    IN                      NEXT LINE
         MVC    78(41,5),LINEIN+2       APPEND TO THE PREVIOUS LINE
         LA     5,118(5)                BUMP BUFFER ADDRESS
         MVI    0(5),X'15'              INSERT LINEFEED
         LA     8,1(8)                  BUMP LINE COUNTER
         MVI    1(5),X'40'              INITALIZE AS BLANK
         TM     SWITCH2,NOLINECN        NO LINE COUNT SPECIFIED ?
         BO     GETNLINE                YES, GET A NEW LINE
         CH     8,LINESPP               LINE COUNTER > LINES PER PAGE?
         BL     GETNLINE                NO,GET ANOTHER LINE
         MVI    1(5),X'0C'              YES,INSERT FORMFEED
         CH     4,=H'1'                 IS THIS THE LAST LINE IN BLOCK?
         BE     GETNLINE                YES,WE'LL SKIP A PAGE NEXT TIME
         SR     8,8                     NO, RESET LINE COUNTER
GETNLINE LA     5,1(5)                  BUMP BUFFER ADDRESS
         BCT    4,NOFF                  GET NEXT LINE
GOTINP   LA     4,WCC                   START OF SEND BUFFER
         SR     5,4                     SUBTRACT FROM LAST BUFFER POS
         LR     6,5                     SAVE LENGTH TO SEND IN R6
         BAL    14,CHKPRTOK             CHANGE NON PRINT CHARS TO BLANK
         LA     4,WCC                   ADDRESS OF SEND BUFFER
         LR     5,6                     LENGTH TO SEND
         BAL    7,SEND                  SEND TO PRINTER
         TM     SWITCH,NBBDONE          ALREADY BETWEEN BRACKETS ?
         BO     TESTEOF                 YES CHECK FOR EOF ON INPUT FILE
         MODCB  RPL=(10),BRACKET=(NBB,NEB),AM=VTAM  SET BETWEEN BRACKET
         OI     SWITCH,NBBDONE          INDICATE BETWEEN BRACKET
TESTEOF  TM     SWITCH,EOFREACH         EOD ROUTINE ENTERED ?
         BNO    GETINP                  NO GET NEXT LINES
         MODCB  RPL=(10),BRACKET=(NBB,EB),AM=VTAM SET END BRACKET
         TM     SWITCH2,NOENDFF         EJECT NOT WANTED ?
         BO     CLOSEDST                YES NO FORMFEED
         BAL    6,SKIPPAGE              SEND FORM FEED
         B      CLOSEDST                CLOSE UP
* INPUT DATA NOT PREPARED BY CMS VMPRINT EXEC - 80 CHAR PRINT LINE
NOTCMS   LA     4,24                    NUMBER OF LINES PER SEND BLOCK
         LA     5,BUF                   ADDRESS OF SEND BUFFER
         SR     8,8                     COUNTER
         MVI    BUF,C' '                INIT BYTE ONE AS BLANK
         TM     SWITCH,NOSTRTFF         NO FORMFEED REQUESTED ?
         BO     GET801                  YES
         MVI    BUF,X'0C'               PERFORM FORMFEED
         LA     5,1(5)                  BUMP POINTER
         B      GET801                  WE'VE ALREADY READ FIRST LINE
GETINP80 LA     4,24                    LINE COUNT PER BLOCK
         LA     5,BUF                   OUTPUT BUFFER
         MVI    BUF,C' '                INIT BYTE ONE
GET80    LA     5,1(5)                  BUMP POINTER
         GET    IN                      GET AN INPUT LINE
GET801   MVC    0(79,5),LINEIN          MOVE INTO BUFFER
         LA     5,79(5)                 BUMP BUFFER ADDR
         MVI    0(5),X'15'              INSERT LINE FEED
         LA     8,1(8)                  BUMP LINE COUNTER
         TM     SWITCH2,NOLINECN        NO LINE COUNT SPECIFIED ?
         BO     BCT80                   YES, GET A NEW LINE
         CH     8,LINESPP               TIME FOR A PAGE FEED?
         BL     BCT80                   NO, CONTINUE
         MVI    0(5),X'0C'              YES, INSERT FORM FEED
         CH     4,=H'1'                 LAST LINE IN BLOCK?
         BE     BCT80                   YES, DONT RESET COUNTER
         SR     8,8                     NO, RESET COUNTER
BCT80    BCT    4,GET80                 GET NEXT LINE
GOTINP81 LA     4,WCC                   START OF BUFFER
         SR     5,4                     SUBTRACT FROM LAST BYTE ADDRESS
         LR     6,5                     SAVE LENGTH TO SEND IN R6
         BAL    14,CHKPRTOK             CHANGE NON PRINT CHARS TO BLANK
         LA     4,WCC                   ADDR OF DATA TO SEND
         LR     5,6                     LENGTH
         BAL    7,SEND                  SEND IT TO PRINTER
         TM     SWITCH,NBBDONE          ALREADY BETWEEN BRACKET STATE?
         BO     TESTEOF8                YEP
         MODCB  RPL=(10),BRACKET=(NBB,NEB),AM=VTAM  SET BETWEEN BRACKET
         OI     SWITCH,NBBDONE          INDICATE WE'VE DONE IT
TESTEOF8 TM     SWITCH,EOFREACH         WAS EOF ROUTINE ENTERED ?
         BNO    GETINP80                NO GET SOME MORE LINES
         MODCB  RPL=(10),BRACKET=(NBB,EB),AM=VTAM SET END BRACKET
         TM     SWITCH2,NOENDFF         EJECT NOT WANTED ?
         BO     CLOSEDST                YES
         BAL    6,SKIPPAGE              NO - EJECT
CLOSEDST CLSDST RPL=RPL1,ACB=ACB,OPTCD=(SYN,RELEASE) CLOSE DESTINATION
EXIT     TM    SWITCH2,READ2END         DO WE HAVE TO READ ANY REMAINING
         BNO   EXIT3                    INPUT ? NO
         TM     SWITCH,EOFREACH         EOF ROUTINE ALREADY ENTERED ?
         BO     EXIT3                   YES
EXIT2    GET   IN                       GET INPUT TILL EOF ROUTINE
         B     EXIT2                    ENTERED, IT BRANCHES TO EXIT3
EXIT3    CLOSE ACB                      CLOSE ACB
         CLOSE IN                       CLOSE INPUT
         TM    SWITCH,OUTOPEN           DID WE OPEN OUTPUT ?
         BNO   CHKRC8                   NO - NO NEED TO CLOSE
         CLOSE OUT                      CLOSE OUTPUT
CHKRC8   TM    SWITCH,EXITRC8           RC=8 WANTED  ?
         BO    EOJRC8
         TM    SWITCH,EXITRC12          RC=12 WANTED ?
         BO    EOJRC12
EOJRC0   EOJ   RC=0                     END OF JOB
EOJRC8   EOJ   RC=8
EOJRC12  EOJ   RC=12
SKIPPAGE LA    4,FORMFEED               WCC WITH FORMFEED
         LA    5,LFF                    LENGTH OF DATA
         BAL   7,SEND                   SEND IT
         BR    6                        RETURN
VTAMHALT MVC   ERRORMSG(L'VTAMSTOP),VTAMSTOP  CLOSING DUE TO VTAM HALT
         BAL   7,SAYERROR               TELL OPERATOR
         BAL   7,PUTOUT                 SAY IT
         B     CLOSEDST                 CLOSE UP
SEND     SEND  RPL=RPL1,AREA=(4),RECLEN=(5),OPTCD=SYN,                 X
               POST=RESP,CONTROL=DATA,STYPE=REQ,                       X
               RESPOND=(NEX,FME)
         LTR   15,15                    SEND OK?
         BZR   7                        YES RETURN
         ST    15,SAVE15                ST R15
         LA    8,SAVE15                 ADDR OF DATA TO CONVERT
         LA    2,4                      LENGTH
         BAL   7,CONVERT                CONVERT TO PRINTABLE
         MVC   ERRORMSG(15),=CL15'SEND ERROR R15='
         MVC   ERRORMSG+15(8),CONDATA
         BAL   7,SAYERROR               TELL OPERATOR
         BAL   7,PUTOUT                 WRITE ERROR MSG
         BAL   6,TESTRPL                SHOW RPL RTNCD & FBDK2 CODES
         OI    SWITCH,EXITRC8           INDICATE RC=8
         OI    SWITCH2,READ2END         READ ANY REMAINING DATA
         B     CLOSEDST                 CLOSE SESSION
PUTOUT   TM    SWITCH,OUTOPEN           OUTPUT FILE OPEN ?
         BO    WRITEMSG
         OPEN  OUT                      NO OPEN IT UP
         OI    SWITCH,OUTOPEN           TAKE A NOTE
WRITEMSG PUT   OUT                      WRITE MESSAGE
         MVI   ERRORMSG,C' '            CLEAR
         MVC   ERRORMSG+1(79),ERRORMSG        BUFFER
         BR    7                        RETURN
SAYERROR LA    1,CCB                    WRITE TO CONSOLE
         EXCP  (1)
         WAIT  (1)
         BR    7
CCB      CCB   SYSLOG,CCW
CCW      CCW   X'09',ERRORMSG,X'20',50
TESTRPL  ST    7,SAVE7                  SAVE R7
         LA    8,RPLRTNCD               VTAM RETURN CODE
         LA    2,1                      LENGTH
         BAL   7,CONVERT                CONVERT TO PRINTABLE
         MVC   GENRTNCD(2),CONDATA      MOVE INTO MESSAGE
         LA    8,RPLFDB2                SAME FOR FEEDBACK CODE
         LA    2,1
         BAL   7,CONVERT
         MVC   GENFDBK2(2),CONDATA
         LA    8,RPLSSEI                AND SENSE INFO
         LA    2,2
         BAL   7,CONVERT
         MVC   GENSENSE(4),CONDATA
         MVC   ERRORMSG(LGENMSG),GENMSG
         BAL   7,SAYERROR               TELL OPERATOR
         BAL   7,PUTOUT                 WRITE MESSAGE
         L     7,SAVE7                  RESTORE R7
         BR    6                        RETURN
EOD      OI    SWITCH,EOFREACH          INDICATE EOD ON INPUT
         TM    SWITCH2,READ2END         READING FILE TO END DUE TO ERR?
         BO    EXIT3                    YES - EXIT
         TM    SWITCH2,FROMCMS          PRINTING A CMS FILE ?
         BNO   GOTINP81                 NO
         B     GOTINP                   YES
NOPRTID  MVC   ERRORMSG(L'NOPRTIDM),NOPRTIDM  NO PRINTER ID GIVEN
         BAL   7,SAYERROR
         OI    SWITCH2,READ2END
         OI    SWITCH,EXITRC8
         B     EXIT
CONVERT  MVI   CONDATA,C' '             CLEAR
         MVC   CONDATA+1(39),CONDATA          BUFFER
         LA    5,CONDATA                BUFFER ADDRESS
CONV     SR    3,3                      CLEAR R3
         IC    3,0(8)                   INSERT 1 HEX CHAR
         AR    3,3                      DOUBLE FOR CHAR
         LA    4,CHARTAB                PRINTABLE HEX TAB
         AR    4,3                      +R3 = OFFSET IN TAB
         MVC   0(2,5),0(4)              MOVE INTO BUFFER
         LA    5,2(5)                   BUMP BUFFER
         LA    8,1(8)                   POINT TO NEXT CHAR
         BCT   2,CONV                   DO TO END
         BR    7                        RETURN
* TRANSLATE NONPRINTABLE CHARACTERS TO BLANKS RETURN VIA R14
CHKPRTOK LA    4,8                      NUMBER OF 255 BYTE BLOCKS
         LA    7,BUF                    FIRST BLOCK
         LA    1,BUF-1                  DATA ADDRESS
DOIT     LA    3,255                    LENGTH
         LA    5,255(1)                 END OF BLOCK
TPRNTABL EX    3,TRT                    XLATE BYTE
         BC    10,ENDSCAN               END OF SCAN ?
         STC   2,0(1)                   REPLACE INVALID BYTE BY BLANK
         SR    5,1                      MINUS HIT ADDR = LENGTH LEFT
         LR    3,5                      NEW STARTING POINT FOR SCAN
         B     TPRNTABL                 GO CHECK IT
ENDSCAN  LA    7,255(7)                 NEXT BLOCK TO CHECK
         LR    1,7                      ADDRESS IN R1
         BCT   4,DOIT                   CHECK IT 8 TIMES
         BR    14                       RETURN
TRT      TRT   1(*-*,1),PRINTAB         DUMMY FOR EXECUTE
MVCPRTIN MVC    NIBSYM(*-*),2(2)          "    "    "
MVCPRTID MVC    PRINTRID(*-*),2(2)        "    "    "
MVCPRTI2 MVC    LERADM1+23(*-*),2(2)      "    "    "
*        LOGON EXIT
LOGON1   DS     0H
         DROP   12,9                    DROP ADDRESSABILITY
         USING  *,15                    ENTRY POINT
         L      12,BASEREG              RESTORE BASE REGS
         L      9,BASEREG2
         DROP   15
         USING  VMPRINT,12,9            RESTORE ADDRESSABILITY
         LA     10,RPL1
         USING  IFGRPL,10               RPL DSECT
         LA     11,NIB1
         USING  ISTDNIB,11              NIB DSECT
         ST     13,SAVE13               SAVE SAVEAREA ADDR
         LA     13,SAVEAREA             NEW SAVEAREA
         ST     14,SAVE14               SAVE RETURN ADDR
         SETLOGON RPL=RPL1,OPTCD=HOLD   NO MORE LOGONS PLEASE
         OPNDST RPL=RPL1,OPTCD=(SYN,ACCEPT) ACCEPT LOGON FROM PRINTER
         POST   ECB1                    TELL MAINLINE ABOUT IT
         L      13,SAVE13               RESTORE SAVEAREA
         L      14,SAVE14               RESTORE RET ADDR
         BR     14                      RETURN TO VTAM
*        TPEND EXIT ROUTINE
TPENDEX  DS     0H                      RESTORE ADDRESSABILITY
         DROP   12,9
         USING  *,15
         L      12,BASEREG
         L      9,BASEREG2
         DROP   15
         USING  VMPRINT,12,9
         LA     10,RPL1
         USING  IFGRPL,10
         LA     11,NIB1
         USING  ISTDNIB,11
         ST     14,SAVE14
         POST   TPENDECB                TELL MAINLINE VTAM CLOSING
         L      14,SAVE14
         BR     14                      RETURN TO VTAM
*        SYNAD EXIT ROUTINE
SYNADEX  DS     0H                      RESTORE ADDRESSABILITY
         DROP   12,9
         USING  *,15
         L      12,BASEREG
         L      9,BASEREG2
         DROP   15,
         USING  VMPRINT,12,9
         ST     14,SAVE14               SAVE RET ADDR
         ST     13,SAVE13               SAVE SAVEAREA
         STM    0,15,ABNDREGS           STORE REGS FOR DEBUGGING
         LA     13,SAVEAREA             NEW SAVE AREA
         LR     10,1                    VTAM READ ONLY RPL
         LR     2,0                     RETURN CODE IN R2
         B      *(2)                    GO TO APPLICABLE ROUTINE
         B      EXCEPTRS                EXCEPTION RESPONSE
         B      REISSUE                 RETRIABLE ERROR
         B      DINTDAM                 DATA INTEGRITY ERROR
         B      ENVERR                  ENVIRONMENT ERROR
         B      USLOGIC                 LOGIC ERROR (LERAD)
         B      NOTINRPL                  "     "   (NO INFO IN RPL)
EXCEPTRS MVC    ERRORMSG(L'LERADM1),LERADM1  ERROR MESSAGE
         BAL    7,SAYERROR              TELL OPERATOR
         BAL    7,PUTOUT                     WRITE IT
         BAL    6,TESTRPL                    SHOW RPL FIELDS
         BAL    7,GETSENSE                   XLATE SENSE CODE INTO TEXT
         OI     SWITCH2,READ2END
         OI     SWITCH,EXITRC8
         B      CLOSEDST
REISSUE  MVC    ERRORMSG(L'LERADM2),LERADM2
         BAL    7,SAYERROR              TELL OPERATOR
         BAL    7,PUTOUT
         BAL    6,TESTRPL
         BAL    7,GETSENSE
         TM     SWITCH,REISSUED         ALREADY RETRIED ?
         BNO    REDO                    NO TRY AGAIN
         OI     SWITCH2,READ2END        GET RID OF ANY REMAINING INPUT
         OI     SWITCH, EXITRC8         INDICATE RC=8
         B      CLOSEDST                CLOSE SESSION
REDO     OI     SWITCH,REISSUED         INDICATE WE'VE RETRIED
         LM     0,15,ABNDREGS           REST REGS
         EXECRPL RPL=(1)                RETRY
         L      13,SAVE13               REST
         L      14,SAVE14                    REGS
         BR     14                      RETURN TO VTAM
DINTDAM  MVC    ERRORMSG(L'LERADM3),LERADM3
         BAL    7,SAYERROR              TELL OPERATOR
         BAL    7,PUTOUT
         BAL    6,TESTRPL
         BAL    7,GETSENSE
         OI     SWITCH2,READ2END        GET RID OF ANY REMAINING INPUT
         OI     SWITCH,EXITRC8          INDICATE RC=8
         B      CLOSEDST
ENVERR   MVC    ERRORMSG(L'LERADM4),LERADM4
         BAL    7,SAYERROR              TELL OPERATOR
         BAL    7,PUTOUT
         BAL    6,TESTRPL
         BAL    7,GETSENSE
         OI     SWITCH2,READ2END        GET RID OF ANY REMAINING INPUT
         OI     SWITCH,EXITRC8          INDICATE RC=8
         B      EXIT
USLOGIC  MVC    ERRORMSG(L'LERADM5),LERADM5
         BAL    7,SAYERRR               TELL OPERATOR
         BAL    7,PUTOUT
         BAL    6,TESTRPL
         BAL    7,GETSENSE
         B      DUMP
NOTINRPL MVC    ERRORMSG(L'LERADM6),LERADM6
         BAL    7,SAYERROR              TELL OPERATOR
         BAL    7,PUTOUT
         BAL    6,TESTRPL
         BAL    7,GETSENSE
         B      DUMP
LERADM1  DC     C'EXCEPTION CONDITION ON         '
LERADM2  DC     C'RETRIABLE COMPLETION CODE R0=08'
LERADM3  DC     C'DATA INTEGRITY DAMAGE R0=0C'
LERADM4  DC     C'ENVIRONMENT ERROR R0=10'
LERADM5  DC     C'INTERNAL LOGIC ERROR R0=14'
LERADM6  DC     C'INTERNAL LOGIC ERROR RPL FIELDS NOT VALID R0=18'
         DC     C'*VMPRINT R0-15 SAVE AREA*'
ABNDREGS DC     18F'0'
DUMP     DUMP                           DUMP PARTITION
         OI     SWITCH,EXITRC12
         OI     SWITCH2,READ2END        GET RID OF ANY REMAINING INPUT
         OI     SWITCH,EXITRC8          INDICATE RC=8
         B      EXIT
GETSENSE ST     7,SAVE7                 SAVE R7
         L      15,=A(SENSOR)           ADDRESS OF ROUTINE
         BALR   14,15                   BRANCH TO IT
         MVC    ERRORMSG(50),4(2)       ERROR MESSAGE AT R2+4
         BAL    7,SAYERROR              TELL OPERATOR
         BAL    7,PUTOUT
         L      7,SAVE7
         BR     7
ECB1     DC    1F'0'                    LOGON ECB POSTED BY LOGON1
TPENDECB DC    1F'0'                    VTAM CLOSING DOWN
TIMERECB DC    1F'0'                    TIMER ECB
ENDLIST  DC    X'FF'
SAVE13   DC    1F'0'                    SAVE REGS
SAVE14   DC    1F'0'
SAVE15   DC    1F'0'
SAVE7    DC    1F'0'
SAVEAREA DC    18F'0'                   SAVE AREA FOR MACROS
RPL1     RPL   AM=VTAM,ACB=ACB,OPTCD=(SYN,CONALL,Q)
RPL1LEN  EQU   *-RPL1
NIB1     NIB   PROC=ORDRESP
ACB      ACB   APPLID=APPLNAME,MACRF=LOGON,AM=VTAM,EXLST=EXLST1
EXLST1   EXLST SYNAD=SYNADEX,TPEND=TPENDEX,LOGON=LOGON1,               X
               AM=VTAM
IN       DTFCD TYPEFLE=INPUT,RECFORM=FIXUNB,EOFADDR=EOD,               X
               DEVADDR=SYSIPT,BLKSIZE=80,IOAREA1=LINEIN
OUT      DTFPR DEVADDR=SYSLST,IOAREA1=ERRORMSG,BLKSIZE=80
APPLNAME DC    X'08',CL8'VMPRINT '      APPL NAME
CONDATA  DC    CL40' '                  USED BY CONVERT ROUTINE
ERRORMSG DC    CL80' '                  USED BY PUTOUT ROUTINE
LINESPP  DC    1H'66'                   DEFAULT NUMBER LINES PER PAGE
DWORD    DC    1D'0'                    WORK DWORD
BASEREG  DC    A(VMPRINT)               BASEREG 1
BASEREG2 DC    A(VMPRINT+4096)          BASEREG 2
FORMFEED DC    X'F5080C'                ERASE/WRITE 80 CHAR+FORM FEED
         DC    C'*** END OF CMS PRINT OPERATION FOR USER '
USERID   DC    CL9' ',C' ***'
LFF      EQU   *-FORMFEED
WCC      DC    X'F538'                  ERASE/WRITE 80 CHAR
BUF      DC    2480C' '                 SEND BUFFER
ENDBUF   EQU   *                        END OF BUFFER
LINEIN   DC    CL80' '                  INPUT LINE BUFFER
SWITCH   DC    X'00'
EXITRC12 EQU   X'01'                    EXIT WITH RC=12
EXITRC8  EQU   X'02'                    EXIT WITH RC=8
EOFREACH EQU   X'04'                    END OF FILE ON INPUT REACHED
RETRYED  EQU   X'08'                    CONNECTION/RESEND TRIED ONCE
NBBDONE  EQU   X'10'                    MODCB NOT BEGIN BRACKET DONE
REISSUED EQU   X'20'                    RETRIABLE ERROR RETRIED ONCE
OUTOPEN  EQU   X'40'                    OUTPUT FILE HAS BEEN OPENED
NOSTRTFF EQU   X'80'                    NO INITIAL FORMFEED REQUIRED
SWITCH2  DC    X'00'
NOENDFF  EQU   X'01'                    NO EJECT AT PRINT END OF JOB
FROMCMS  EQU   X'02'                    INPUT WAS FORMATTED  BY  CMS
READ2END EQU   X'04'                    DISCARD ANY  REMAINING INPUT
LPPGIVEN EQU   X'08'                    NO OF LINES PER PAGE SUPPLIED
NOLINECN EQU   X'10'                    NO LINE COUNTING WANTED
GENMSG   DC    C'ERROR RTNCD='          ISSUED BY TESTRPL ROUTINE
GENRTNCD DC    CL2'00',C' FDBK2='
GENFDBK2 DC    CL2'00',C' SENSE='
GENSENSE DC    CL5'0000 '
GENLBL   DC    CL9' '
LGENMSG  EQU   *-GENMSG
ACBFAIL  DC    C'VMPRINT01: OPEN ACB FAILED RC='
ACBRC    DC    CL2'00'
LACBFAIL EQU   *-ACBFAIL
LOSTTERM DC    C'VMPRINT02: COMMUNICATION FAILURE LOSTERM RC='
LOSTERRC DC    CL8'00000000'
LLOSTTER EQU   *-LOSTTERM
TIMEREX  DC    C'VMPRINT03: WAITING FOR CONNECTION TO PRINTER '
PRINTRID DC    CL8' '
LTIMEREX EQU   *-TIMEREX
VTAMSTOP DC    C'VMPRINT04: VMPRINT IS TERMINATING DUE TO VTAM HALT'
NOPRTIDM DC    C'VMPRINT05: PRINTER ID NOT SPECIFIED VIA PARM= OPERAND'
CHARTAB DC  C'000102030405060708090A0B0C0D0E0F'  HEX TO CHAR TRANSLATE
        DC  C'101112131415161718191A1B1C1D1E1F'  TABLE
        DC  C'202122232425262728292A2B2C2D2E2F'
        DC  C'303132333435363738393A3B3C3D3E3F'
        DC  C'404142434445464748494A4B4C4D4E4F'
        DC  C'505152535455565758595A5B5C5D5E5F'
        DC  C'606162636465666768696A6B6C6D6E6F'
        DC  C'707172737475767778797A7B7C7D7E7F'
        DC  C'808182838485868788898A8B8C8D8E8F'
        DC  C'909192939495969798999A9B9C9D9E9F'
        DC  C'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
        DC  C'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
        DC  C'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
        DC  C'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
        DC  C'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
        DC  C'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
PRINTAB DC  X'00404040404040404040404040404040'  X'40' = INVALID CHARS
        DC  X'40404040400040404040404040400040'  X'00' = PRINTABLE
        DC  X'40404040404040404040404040404040'
        DC  X'40404040404040404040404040404040'
        DC  X'00404040404040404040000000000000'
        DC  X'00404040404040404040000000000000'
        DC  X'00004040404040404000000000000000'
        DC  X'40404040404040404000000000000000'
        DC  X'40000000000000000000404040404040'
        DC  X'40000000000000000000404040404040'
        DC  X'40000000000000000000404040404040'
        DC  X'40404040404040404040404040404040'
        DC  X'00000000000000000000404040404040'
        DC  X'00000000000000000000404040404040'
        DC  X'00000000000000000000404040404040'
        DC  X'00000000000000000000404040404040'
        LTORG
* SNA SENSE INFO INTO A MEANINGFUL MESSAGE CALLED BY GETSENSE LABEL
SENSOR   DS    0D
         USING *,15                     BASE REG IS R15
         USING IFGRPL,10                RPL ADDRESSABILITY
         LA    2,MSGTAB                 MESSAGES
GETMSG   CLC   0(2,2),RPLSSEI           DOES THE SENSE CODE MATCH
         BER   14                       YES - RETURN
         CLI   0(2),X'FF'               END OF MESSAGE TABLE ?
         BER   14                       YES - RETURN
         LA    2,LMSG(2)                POINT TO NEXT ENTRY
         B     GETMSG                   GO CHECK IT
MSGTAB   DC X'0000010C',CL50'SENSE INFORMATION NOT AVAILABLE'
LMSG     EQU *-MSGTAB
  DC X'8004010C',CL50'UNRECOGNIZED DAF'
  DC X'8005010C',CL50'NO SESSION'
  DC X'8007010C',CL50'SEGMENTING ERROR'
  DC X'8008010C',CL50'PU NOT ACTIVE'
  DC X'8009010C',CL50'LU NOT ACTIVE'
  DC X'800F010C',CL50'INVALID ADDRESS COMBINATION'
  DC X'4006010C',CL50'EXCEPTION RESPONSE NOT ALLOWED'
  DC X'4007010C',CL50'DEFINITE RESPONSE NOT ALLOWED'
  DC X'400A010C',CL50'NO-RESPONSE NOT ALLOWED'
  DC X'400F010C',CL50'FORMAT INDICATOR NOT ALLOWED'
  DC X'2001010C',CL50'SEQUENCE NUMBER ERROR'
  DC X'2002010C',CL50'CHAINING ERROR'
  DC X'20030008',CL50'BRACKET STATE ERROR'
  DC X'2004010C',CL50'DIRECTION ERROR'
  DC X'2005010C',CL50'DATA TRAFFIC RESET'
  DC X'2009010C',CL50'SESSION CONTROL PROTOCOL VIOLATION'
  DC X'1002010C',CL50'RU LENGTH ERROR'
  DC X'1003010C',CL50'FUNCTION NOT SUPPORTED'
  DC X'1005010C',CL50'PARAMETER ERROR'
  DC X'1007010C',CL50'CATEGORY NOT SUPPORTED'
  DC X'1008010C',CL50'INVALID FM HEADER'
  DC X'0801010C',CL50'RESOURCE NOT AVAILABLE'
  DC X'08020108',CL50'INTERVENTION REQUIRED - RETRYING'
  DC X'0805010C',CL50'SESSION LIMIT EXCEEDED'
  DC X'0807010C',CL50'SUBSIDIARY DEVICE TEMPORARILY NOT AVAILABLE'
  DC X'080A0018',CL50'TERMINAL POWERED OFF - RETRYING'
  DC X'080B0004',CL50'BRACKET RACE ERROR'
  DC X'08110000',CL50'SIGNAL RECEIVED'
  DC X'0812010C',CL50'INSUFFICIENT RESOURCE'
  DC X'08130008',CL50'BRACKET BID REJECT'
  DC X'08140008',CL50'BRACKET BID REJECT - RETRYING'
  DC X'0815010C',CL50'FUNCTION ACTIVE'
  DC X'081B0010',CL50'RECEIVER IN TRANSMIT MODE'
  DC X'081C010C',CL50'REQUEST NOT EXECUTABLE'
  DC X'0821010C',CL50'SESSION PARAMETERS INVALID'
  DC X'0825010C',CL50'COMPONENT NOT AVAILABLE'
  DC X'0829010C',CL50'CHANGE DIRECTION REQUIRED'
  DC X'082A0000',CL50'PRESENTATION SPACE ALTERED'
  DC X'082B0000',CL50'TERMINAL POWERED ON'
  DC X'082D0008',CL50'DEVICE BUSY - RETRYING'
  DC X'082E0108',CL50'INTERVENTION REQUIRED - RETRYING'
  DC X'082F010C',CL50'NONRECOVERABLE ERROR ON SUBSIDIARY DEVICE'
  DC X'08310108',CL50'TERMINAL POWERED OFF - RETRYING'
  DC X'0843010C',CL50'REQUIRED FM SYNCHRONIZATION NOT SUPPLIED'
  DC X'08450108',CL50'TERMINAL POWERED OFF - RETRYING'
  DC X'084A0000',CL50'PRESENTATION SPACE ALTERED'
  DC X'084C010C',CL50'RESOURCE NOT CONFIGURED'
  DC X'0863010C',CL50'SYMBOL SET NOT LOADED'
  DC X'0871010C',CL50'READ STATE ERROR'
  DC X'FFFF010C',CL50'SHOULD NOT OCCUR'
         DROP  15
         ISTDNIB
         IFGRPL  AM=VTAM
         IFGACB  AM=VTAM
         END


Richard Keane
Systems Programmer
Calor Emag (Germany)

