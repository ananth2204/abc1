Validating VTAM ACBs

The following routine, ACBTEST, has been written to validate
a VTAM Access method Control Block (ACB) before allowing
a VTAM application, such as TSO, to open it.  It is intended
that this program is executed as the first step of a job or started
task before the job control required to start the application.

The program is passed the name of the ACB that is required by
the subsequent application.  ACBTEST, after validating that an
ACB name has been supplied, attempts to open it.  If the open
is OK, ie register 15 is set to zero, the program terminates
normally and the application is started.  However, if the open
fails, control is passed to code that determines the cause of the
failure.  When an open ACB macro fails, VTAM sets register
15 accordingly and places an error code in the ACB.  By
executing the SHOWCB macro one can extract the error code
and subsequently determine the cause of the problem.

ACBTEST examines this error code and depending upon its
meaning, will behave in one of two ways:

1      If the error is deemed irrecoverable (for instance if VTAM
      is in the process of closing), the program issues a message
      indicating the ACB name, the error code, and a brief
      description of the failure.  It then abends the task with a
      user code equal to the error code extracted from the ACB.
      In this case the subsequent application does not start.

2      If the error is deemed recoverable (for instance if an ACB
      is not active), the program issues a message similar to that
      above and executes a STIMER to wait for 15 seconds
      before attempting to re-open.  When the open is eventually
      successful, a message to the operator informs him of
      success and the application is started.


SAMPLE JCL TO EXECUTE THE PROGRAM

//ACBTEST  JOB ACCT#,ACBTEST,
//      CLASS=A,MSGCLASS=U,MSGLEVEL=(1,1)
//TESTIT EXEC PGM=ACBTEST,PARM='ACBNAME'
//SYSUDUMP DD SYSOUT=U
//*
//TSO   PROC MBR=TSOKEY00
//STEP1 EXEC PGM=IKTCAS00,TIME=1440
//PARMLIB DD DSN=SYS1.PARMLIB(&MBR),DISP=SHR,FREE=CLOSE
//PRINTOUT DD SYSOUT=U,FREE=CLOSE


ACBTEST SOURCE CODE

ACBTEST  CSECT
         TITLE 'ACBTEST TEST ROUTINE'
         PUSH  USING
         USING *,15                    TEMPORARY BASE REG
         B     ENTRY000                LETS START THE CODE
         POP   USING
* PARMS   : PASS THIS PROGRAM THE NAME OF AN ACB.                     *
* USAGE : IT IS INTENDED THAT THIS PROGRAM IS EXECUTED AS THE 1ST     *
*         STEP IN A JOB TO CHECK THAT THE ACB FOR A SUBSEQUENT        *
*         TP SYSTEM IS OK.                                            *
*         THIS PROGRAM SHOULD ONLY BE EXECUTED IN BATCH OR AS PART OF *
*         A STARTED TASK.                                             *
* DESCRIPTION : THIS PROGRAM IS PASSED A VTAM ACB NAME TO OPEN.       *
*               THE OPEN MACRO IS EXECUTED AND THE RETURN CODE (R15)  *
*               IS CHECKED.  IF THE RC IS NON ZERO THEN THE PROGRAM   *
*               BRANCHES AND EXAMINES VTAM CONTROL BLOCKS TO          *
*               DETERMINE THE REASON.  MESSAGES ARE ISSUED TO THE     *
*               OPERATORS CONSOLE TO REVEAL THE CAUSE OF THE ERROR.   *
*               IF THE ERROR IS DEEMED NON RECOVERABLE THEN THE       *
*               PROGRAM ABENDS, THE ABEND CODE IS THE HEX REASON CODE *
*               OBTAINED FROM VTAM.  IF THE ERROR IS RECOVERABLE THEN *
*               THE PROGRAM WAITS FOR 10 SECONDS AND ATTEMPTS TO OPEN *
*               THE ACB AGAIN.  IF THE OPEN IS SUCCESSFUL THEN THE    *
*               ACB IS CLOSED AND THE PROGRAM TERMINATES.             *
* NOTE: THIS PROGRAM DOES NOT CATER FOR ALL REASON CODES. A GENERAL   *
*        USER ABEND WILL OCCUR IF THE SPECIFIC CODE IS NOT CHECKED FOR*
* NOTE: FOR A COMPREHENSIVE LIST OF REASON CODES REFER TO             *
*        'OPEN - OPEN ONE OR MORE ACBS' IN VTAM PROGRAMMING           *
*         (SC23-0115).                                                *
ACBTEST  CSECT
*              ENTRY ROUTINE                                          *
ENTRY000 DS    0H
         STM   R14,R12,12(R13)         SAVE CALLERS REGISTERS
         LR    R12,R15                 LOAD BASE REGISTER
         USING ACBTEST,R12             ESTABLISH BASE REGISTER
         LA    R0,WORKLEN              PICK UP WORKING STORAGE LENGTH
         LR    R9,R1                   SAVE PARM POINTER
         GETMAIN R,LV=(R0)             GET WORK STORAGE
         ST    R13,4(R1)               STORE ADDRESS OF CALLERS REGS
         LR    R13,R1                  PICK UP NEW REGISTER SAVE AREA
         USING WORKAREA,R13            ESTABLISH WORKAREA BASE REGISTER
*              START OF USEFUL CODE                                   *
BEGIN    EQU   *                    INITIAL PROCESSING
         LR    R4,R9                  GET ADDRESS OF PARM LIST
         L     R4,0(R4)               LOAD ADDRESS OF PARM LIST
         LH    R3,0(R4)               GET LENGTH OF PARM
         EX    R3,EXECPLAT            EXECUTE TO MOVE PARMS INTO PROG
         SLR   R3,R3                  ZEROIZE
         IC    R3,ACBLEN              LOAD PARM COUNT
         CH    R3,=H'00'              HAVE THEY ENTERED AN ACB NAME
         BNE   CONTINUE               OK? THEN CARRY ON
         WTO   'YOU HAVE NOT ENTERED AN ACB NAME'
         ABEND 888,DUMP               INFORM USER AND ABEND
CONTINUE EQU   *                    CARRY ON
         SLR   R10,R10                ZEROIZE
         IC    R10,ACBLEN             GET LENGTH OF ACB
         LA    R11,WTOACB1            GET ADDRESS OF WTOACB1
         LA    R9,WTOACB              GET ADDRESS OF WTOACB
         MVC   0(R10,R9),ACBNAME      MOVE ACB TO BOTH
         MVC   0(R10,R11),ACBNAME           FIELDS
         B     OPENPGM
OK2WAIT  EQU   *                    WAIT BEFORE RETRYING OPEN
         STIMER WAIT,DINTVL=WAITTIME
OPENPGM  EQU   *                    TRY TO OPEN ACB
         OPEN  INQACB                 ATTEMPT TO OPEN ACB
         LTR   15,15                  CHECK R/C
         BNZ   WHYNOT                 BRANCH IF NOT ABLE TO OPEN
         WTO   RCODE,MF=(E,WTOPLAT1)  TELL OP THAT OPEN WAS OK
CLOSE    EQU   *                    OK CLOSE AND EXIT
         CLOSE INQACB                 ISSUE CLOSE
*              QUIT BIT                                               *
ANEXIT   EQU   *                    RESTORE AND EXIT
         LA    R0,WORKLEN              PICK UP WORKING STORAGE LENGTH
         LR    R1,R13                  PICK UP WORKING STORAGE ADDRESS
         L     R13,REGSAVE+4           PICKUP CALLER'S SAVE AREA
         FREEMAIN R,LV=(R0),A=(R1)     FREE WORKING STORAGE
         L     R14,12(R13)             RESTORE R14
         LM    R0,R12,20(R13)          RESTORE R0 THROUGH R12
         BR    R14                     RETURN TO CALLER
*              ATTEMPT TO FIND OUT WHY THE ACB WAS NOT OPENED         *
WHYNOT   EQU   *                    FIND OUT WHY THE OPEN FAILED
         SHOWCB ACB=INQACB,FIELDS=ERROR,AREA=TESTAREA,LENGTH=4,        C
               AM=VTAM                GET REASON FROM ACB
         SLR   R3,R3                  ZEROIZE
         L     R3,TESTAREA            PUT REASON IN REG 3
NOVTAM   CH    R3,=H'80'            NO VTAM IN OS
         BNE   VTAMHALT
         MVC   RCODE,RC50         MOVE REASON CODE TO TEMPLATE
         WTO   RCODE,MF=(E,WTOPLATE)  ISSUE THE ERROR MESSAGE
         WTO   'VTAM HAS NOT BEEN INCLUDED AS PART OF THE'
         WTO   'OPERATING SYSTEM'
         ABEND 050                    ABEND WITH THE REASON CODE
VTAMHALT CH    R3,=H'82'            VTAM HALT HAS BEEN ISSUED
         BNE   NOTANACB
         MVC   RCODE,RC52
         WTO   RCODE,MF=(E,WTOPLATE)
         WTO   'VTAM HAS RECEIVED A HALT COMMAND'
         WTO   'AND IS NOT ACCEPTING OPENS'
         ABEND 052
NOTANACB CH    R3,=H'86'            NOT AN APPL
         BNE   ANOTHACB
         MVC   RCODE,RC56
         WTO   RCODE,MF=(E,WTOPLATE)
         WTO   'THE ACB SPECIFIED IS NOT AN APPL'
         ABEND 056
ANOTHACB CH    R3,=H'88'            ANOTHER APPL HAS OPENED ACB
         BNE   NOACB
         MVC   RCODE,RC58
         WTO   RCODE,MF=(E,WTOPLATE)
         WTO   'THE ACB SPECIFIED IS ALREADY OPEN'
         ABEND 058
NOACB    CH    R3,=H'90'            ACB NOT ACTIVE OR DOES NOT EXIST
         BNE   SVTAM
         MVC   RCODE,RC5A
         WTO   RCODE,MF=(E,WTOPLATE)
         WTO   'THE ACB SPECIFIED IS NOT ACTIVE OR'
         WTO   'DOES NOT EXIST'
         WTO   'SO I AM GOING TO WAIT FOR IT'
         B     OK2WAIT
SVTAM    CH    R3,=H'92'            VTAM NOT STARTED
         BNE   STRANGE
         MVC   RCODE,RC5C
         WTO   RCODE,MF=(E,WTOPLATE)
         WTO   'VTAM HAS NOT BEEN STARTED'
         WTO   'I AM GOING TO WAIT FOR IT'
         B     OK2WAIT
STRANGE  CH    R3,=H'96'            SYSTEM ERROR OCCURRED
         BNE   PPOPROB
         MVC   RCODE,RC60
         WTO   RCODE,MF=(E,WTOPLATE)
         WTO   'A STRANGE SYSTEM ERROR HAS OCCURRED'
         ABEND 060
PPOPROB  CH    R3,=H'104'           TOO MANY PPO AUTHD APPLS
         BNE   APPLCLOS
         MVC   RCODE,RC68
         WTO   RCODE,MF=(E,WTOPLATE)
         WTO   'ONLY 1 PPO AUTHORIZED APPL MAY BE ACTIVE'
         WTO   'AT ONE TIME'
         ABEND 068
APPLCLOS CH    R3,=H'112'           APPL IS IN PROCESS OF CLOSING
         BNE   GODKNOWS
         MVC   RCODE,RC70
         WTO   RCODE,MF=(E,WTOPLATE)
         WTO   'THE ACB IS CURRENTLY BEING CLOSED'
         B     OK2WAIT
GODKNOWS EQU   *                    MUST BE SOMETHING ELSE!!
         WTO   'OPEN ACB FAILED BUT I DONT KNOW WHY!!'
         ABEND 999,DUMP
*              CONSTANTS AND WORKING STORAGE                          *
INQACB   ACB   AM=VTAM,                VTAM ACB                        C
               APPLID=PARMIN,          PROGRAM NAME                    C
               MACFR=NLOGON
* ACB NAME TO BE OPENED POINTED TO BY ACB MACRO
PARMIN   DS    0CL9                    ACB NAME PASSED AS A PARM
ACBLEN   DC    C'0'                    LENGTH OF ACB
ACBNAME  DC    C'        '             ACB NAME
* TEMPLATE FOR WTO MACRO TO REFER TO
WTOPLATE DS    0F
          DC    AL2(57)
          DC    B'000000000000000'
          DC    C'OPEN FAILED WITH REASON CODE = '
RCODE     DC    C'00'
          DC    C'  FOR ACB = '
WTOACB    DC    C'        '
* TEMPLATE FOR WTO MACRO TO REFER TO
WTOPLAT1 DS    0F
          DC    AL2(38)
          DC    B'000000000000000'
          DC    C'OPEN SUCCESSFUL FOR ACB = '
WTOACB1   DC    C'        '
* TEMPLATE FOR EXECUTE INSTRUCTION
EXECPLAT  MVC  PARMIN(*-*),1(R4)
TESTAREA DS    F                       ERROR FIELD FROM SHOWCB INSTRUCT
* ERROR CODES FOR ACB OPEN PUT OUT IN WTO
RC00     DC    C'00'
RC50     DC    C'50'
RC52     DC    C'52'
RC56     DC    C'56'
RC58     DC    C'58'
RC5A     DC    C'5A'
RC5C     DC    C'5C'
RC60     DC    C'60'
RC68     DC    C'68'
RC70     DC    C'70'
* CONSTANTS FOR STIMER
WAITTIME DS    OD                     SPECIFY TIME TO WAIT BEFORE
WAITHOUR DC    C'00'                   RETRYING TO OPEN ACB AFTER A
WAITMINS DC    C'00'                   FAILURE.
WAITSECS DC    C'15'
         DC    C'00'
*              VARIOUS INLINE LITERALS                                *
         LTORG ,
* DSECT FOR REGISTERS
WORKAREA DSECT
REGSAVE  DS    18F                     PLACE TO STORE REGISTERS
WORKLEN  EQU   *-WORKAREA
         END


Duncan A Tait
Systems Programmer (UK)

