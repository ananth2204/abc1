RTM data collection

In the on-line environment, most complaints from end-users are
about response time.  Look at the response time report from a
software package and it doesn't tell you the real response time.
The only thing you get is the VTAM application's internal
response time.

For terminals attached to a 3x74 control unit, the following
program could be set up to collect the RTM data to a VSAM
file, after turning on the RTM feature on the controller.

Depending on how often this program is run, the report could
be generated from this VSAM file by hour, by date, or by PU.

The following points need to be considered before
implementing the program:

1      PUNAME needs to be modified based on site PU naming
      conventions.

2      RTM data in the PU will be reset after it has been received
      successfully.

3      The RTMACB APPL definition in VTAMLSTs would be:

      A99CNM APPL AUTH=(NVPACE,ACQ,PASS,CNM,SPO),EAS=6


PROGRAM SOURCE CODE

RTMCOLT  CSECT
         SAVE  (14,12)
         BALR  R2,0
         USING *,R2
         ST    R13,SAVEREG+4          SAVE REGISTER 13
         LA    R12,SAVEREG            PUT MACRO USING REG 13
         ST    R12,SAVEREG+8
         LR    R13,R12
PARMRTN  DS    0H                     PROCESS PARAMETER
         L     R4,0(R1)               R1 IS PARM ADDRESS
         CLC   0(2,R4),=X'0000'       PARM LENGTH
         BH    MVCPARM
         B     GETDATE
MVCPARM  DS    0H
         LH    R5,0(R4)
         SH    R5,=H'1'               LEN FOR NEXT INSTRUCTION EX MVC
         EX    R5,MVCPU               MOVE PARM TO PUNAME
         LA    R10,PUNAME
         AR    R10,R5
         MVC   1(10,R10),=10C'*'      END MARKER OF PUNAME
         B     GETDATE
MVCPU    MVC   PUNAME(0),2(R4)
GETDATE  DS    0H
         TIME
         ST    R0,TOD
         ST    R1,YYDDDF
         MVC   WORKD(5),=X'4021202020'
         ED    WORKD(5),YYDDDF        YEAR
         MVC   DATE(2),WORKD+3
         LA    R6,DATETAB+11*4        CAL MONTH
DATELOOP CP    YYDDDF+2(2),2(2,R6)
         BH    MONTH
         SH    R6,=H'4'               POINT PREVIOUS MONTH
         CLC   0(2,R6),=C'01'         JAN MONTH
         BH    DATELOOP
MONTH    MVC   DATE+2(2),0(R6)        MONTH
         SP    YYDDDF+2(2),2(2,R6)
         MVC   WORKF(4),=X'40212020'
         ED    WORKF(4),YYDDDFF+2      DAY
         MVC   DATE+4(2),WORKF+2
         B     BEGIN
BEGIN    DS    0H
         OPEN  (PRINT,(OUTPUT))
         OPEN  (VSAMIN)
         LTR   R15,R15              R15 KEEPS THE RETURN CODE
         BZ    GETMAIN              R15 = 0 IS OK
         WTOR  '++RTMCOLT VSAM(RTM) OPEN ERROR,,,               ',     *
               LINE,119,ECB1
         WAIT  ECB=ECB1             WAIT FOR WTOR THEN NEXT
         MVC   ERRMSG(25),=C'VSAM OPEN ERROR          '
         B     ERROR
GETMAIN  GETMAIN RU,LV=1233         GETMAIN ,LEN=1233
         LR    R12,R1               R1 SAVE THE GETMAIN ADDRESS
         USING VSAMREC,R12          VSAMREC IS DUMMY SECTION
MODRPL1  MODCB RPL=VSAMRPL,AREA=(R12),AREALEN=1233,ARG=VSAMARG
         LTR   R15,R15
         BZ    RTMRTN
         MVC   ERRMSG(25),=C'VSAM MODRPL1 ERROR       '
         B     ERROR
RTMRTN   DS    0H
         LA    R10,PUNAME            PU TABLE, DONT DESTROY
RTMOPEN  OPEN  RTMACB
         LTR   R15,R15
         BZ    SENDREQ
         WTOR  '++RTMCOLT CNM (RTM) OPEN ERROR,,,               ',     *
               LINE,119,ECB1
         WAIT  ECB=ECB1
         MVC   ERRMSG(25),=C'RTM OPEN ERROR           '
         B     ERROR
*        GET  PU NEXT SHIFT IN VSAM AND SEND RTM REQUEST
SENDREQ  DS    0H
         CLC   0(4,R10),=C'****'  END OF PU TAB
         BE    EOJ
         XR    R3,R3                   RESET # OF LU CTR
KEYSET   MVC   ARGPU(8),0(R10)        VSAM KEY =PU+DATE+HH
         MVC   ARGDATE(6),DATE                  8 + 6  + 2
         MVC   WORKF(4),=X'F0F02120'   CHANGE HH FORMAT
         ED    WORKF(4),HH                    "
         MVC   ARGHH(2),WORKF+2               "
         MVC   DSTNAME(8),0(R10)     DESTINATION PU (8 BYTES)
         MVC   TAGNAME(8),0(R10)     TARGET PU      (8 BYTES)
         MVI   SENDSW,X'00'             RESET SWITCH
         LA    R11,VSAMREC+18         FOR OUTPUT   AT R11
         L     R4,RTMNIB+4            GET CID
         SEND  RPL=RTMRPL,AREA=RTMREQ,RECLEN=44,OPTCD=(FMHDR),         *
               ARG=(R4),RESPOND=(NEX,FME,NRRN,NQRESP)
         LTR   R15,R15
         BZ    RECVREQ
         MVI   SENDSW,X'FF'           CONTINUE PROCESSING
         MVC   ERRMSG(25),=C'RTM SEND REQUEST ERROR   '
         B     ERROR
*        RECEIVE RTM DATA
RECVREQ  DS    0H
         MVI   SENDSW,X'00'             RESET SWITCH
         RECEIVE RPL=RTMRPL,AREA=RTMDATA,AREALEN=200
         LTR   15,15
         BZ    WRITE
         MVI   SENDSW,X'FF'           CONTINUE PROCESSING
         MVC   ERRMSG(25),=C'RTM RECEIVE ERROR        '
         B     ERROR
*        FORMAT EACH LU RTM DATA AND WRITE TO VSAM FILE
WRITE    DS    0H
         LA    R9,RTMDATA
         MVC   LENGTH(2),6(R9)         NS RU LENGTH
         MVC   LASTSW(1),15(R9)        LAST RECORD SEND FROM PU
         CLC   18(2,R9),=X'0080'       RTM RESPONSE VECTOR
         BNE   ERROR
         TM    17(R9),X'20'             X'25' X'27' NO DATA
         BZ    FORMAT
         B     NEXTREC
FORMAT   LA    R9,20(R9)                FIRST SUBVECT
SUBVECT  CLI   1(R9),X'04'              SNA ADDR (LU ADDRESS)
         BE    GETLU
         CLI   1(R9),X'93'              RTM CNT
         BE    GETCNT
         B     NEXTFLD
GETLU    DS    0H
         A     R3,=F'1'                 COUNT # OF LU
         MVC   WORKH(2),8(R9)
         LH    R5,WORKH
         SH    R5,=H'2'                 CONVERT TO TERMINAL ID
         CVD   R5,WORKD                 IN THIS CASE  TERM=PU+NN
         UNPK  0(2,R11),WORKD+6(2)      (IE FA00,FA01,IB04....)
         OI    1(R11),X'F0'             DISPLAY FORMAT
         LA    R11,2(R11)
         B     NEXTFLD
GETCNT   DS    0H
         LA    R7,17(R9)                RTM CNT AREA ADDR
         LA    R6,5                     RTM CNT NUMBER
CNTLOOP  MVC   WORKH(2),0(R7)
         LH    R5,WORKH
         CVD   R5,WORKD
         MVC   0(5,R11),WORKD+3
         LA    R11,5(R11)               NEXT CNT IN VSAMREC
         LA    R7,2(R7)                 NEXT CNT IN RTMDATA
         BCT   R6,CNTLOOP
         B     NEXTFLD
NEXTFLD  DS    0H
         XC    WORKH,WORKH              CLEAR
         MVC   WORKH+1(1),0(R9)
         LH    R5,WORKH
         AR    R9,R5                    POINT TO NEXT RTM SUBVECTOR
         LR    R6,R9
         LA    R5,RTMDATA+8
         SR    R6,R5
         CH    R6,LENGTH                IF OVER LENGTH
         BNL   NEXTREC
         B     SUBVECT
NEXTREC  DS    0H
         TM    LASTSW,X'40'             B'01000000' NOT LAST RECORD
         BO    RECVREQ                  RECEIVE NEXT RTM LU DATA
         LA    R5,VSAMREC
         SR    R11,R5
         B     PUTVSAM
PUTVSAM  DS    0H
         LTR   R3,R3                    CHECK R3 (# OF LU)
         BNZ   LUOK                     # LU > 0
         MVC   LINE(15),=C' ++ RTMCOLT ++ '
         MVC   LINE+15(08),ARGPU
         MVC   LINE+23(25),=C': NO RTM DATA AVAILABLE  '
         PUT   PRINT,LINE
         MVI   LINE,C' '
         MVC   LINE+1(131),LINE
         B     NEXTPU
LUOK     STH   R3,WORKH                 CONVERT # LU FMT
         MVC   VSAMCTR(2),WORKH
MODRPL2  MODCB RPL=VSAMRPL,RECLEN=(R11)
         LTR   R15,R15
         BZ    PUTRTM
         MVC   ERRMSG(25),=C'VSAM MODRPL2 ERROR       '
         B     ERROR
PUTRTM   MVC   VSAMREC(16),VSAMARG
         PUT   RPL=VSAMRPL
         LTR   15,15
         BNZ   PUTERR
         MVC   LINE(14),=C'++RTMCOLT++   '
         MVC   LINE+14(8),0(R10)
         MVC   LINE+20(8),=C'COMPLETE'
         PUT   PRINT,LINE
         MVI   LINE,C' '
         MVC   LINE+1(131),LINE
         B     NEXTPU
PUTERR   MVC   ERRMSG(25),=C'VSAM WRITE FAILURE        '
         B     ERROR
NEXTPU   LA    R10,8(R10)              NEXT PU
         B     SENDREQ
*        ERROR ROUTINE
ERROR    DS    0H
SNAERR   DS    0H
         LA    R3,RTMRPL
         MVI   SSENSEI,0           RESET SYSTEM SENSE ERROR INPUT
         MVC   SSENSMI(1),89(R3)   GET SSENSMI FROM RPL
IFPATH   TESTCB AM=VTAM,RPL=(R3),SSENSEI=PATH     IF PATH ERR ?
         BNE   IFCPM
         LTR   R15,R15
         BNZ   ENDTSTCB
         MVI   SSENSEI,X'80'        SET PATH ERROR FLAG.
         B     ENDTSTCB
IFCPM    LTR   R15,R15
         BNZ   ENDTSTCB
         TESTCB AM=VTAM,RPL=(R3),SSENSEI=CPM    IF CPM ERROR ?
         BNE   IFSTATE
         LTR   R15,R15
         BNZ   ENDTSTCB
         MVI   SSENSEI,X'40'        SET CPM ERROR FLAG.
         B     ENDTSTCB
IFSTATE  LTR   R15,R15
         BNZ   ENDTSTCB
         TESTCB AM=VTAM,RPL=(R3),SSENSEI=STATE  IF STATE ERROR
         BNE   IFFI
         LTR   R15,R15
         BNZ   ENDTSTCB
         MVI   SSENSEI,X'20'        SET STATE ERROR FLAG.
         B     ENDTSTCB
IFFI     LTR   R15,R15
         BNZ   ENDTSTCB
         TESTCB AM=VTAM,RPL=(R3),SSENSEI=FI      IF RH ERROR ?
         BNE   IFRR
         LTR   R15,R15
         BNZ   ENDTSTCB
         MVI   SSENSEI,X'10'        SET FI ERROR FLAG.
         B     ENDTSTCB
IFRR     LTR   R15,R15
         BNZ   ENDTSTCB
         TESTCB AM=VTAM,RPL=(R3),SSENSEI=RR      IF REQ REJECT ?
         BNE   ENDTSTCB
         LTR   R15,R15
         BNZ   ENDTSTCB
         MVI   SSENSEI,X'08'        SET RR ERROR FLAG.
ENDTSTCB EQU   *
         MVC   LINE(11),=C'++RTMCOLT++'
         MVC   LINE+11(8),0(R10)
         MVC   LINE+20(25),ERRMSG
         ST    R15,WORKF
         MVC   LINE+45(4),=C'R15='
         MVC   LINE+49(4),WORKF
         SHOWCB ACB=VSAMIN,AREA=WORKF,LENGTH=4,FIELDS=ERROR
         MVC   LINE+53(9),=C'VSAMCODE='        ACB CODE /RPL FDBK
         MVC   LINE+62(4),WORKF
         MVC   LINE+66(8),=C'SNACODE='        ACB CODE /RPL FDBK
         MVC   LINE+74(2),SENSCD
         PUT   PRINT,LINE
         MVC   WTOMSG+4(80),LINE
         WTO   MF=(E,WTOMSG)
         MVI   LINE,C' '
         MVC   LINE+1(131),LINE
         CLI   SENDSW,X'FF'                 IF CONTINUE PROCESSING
         BE    NEXTPU
         CLOSE (VSAMIN,,RTMACB,,PRINT)
         L       13,SAVEREG+4
         RETURN (14,12),RC=16
EOJ      DS    0H
         CLOSE (VSAMIN,,RTMACB,,PRINT)
         L       13,SAVEREG+4
         RETURN (14,12),RC=0
SAVEREG  DS    18F
WORKD    DS    D
WORKF    DS    F
WORKH    DS    H
ECB1     DS    F
YYDDDF   DS    D
TOD      DS    0CL8
HH       DS    CL2
MM       DS    CL2
SS       DS    CL2
SENSCD   DS    0CL2
SSENSEI  DC    X'00'
SSENSMI  DC    X'00'
RTMREQ   DS    0CL44
FWDRU1   DC    X'81081000'                   FORWARD RU HEADER
FWDRU2   DC    X'0000'                       EMBEDDED NS RU STATE
FWDRU3   DC    X'0010'          (16):  0     EMBEDDED NS RU LENGTH
CNMHDR   DC    X'41038D0000000000'    (8)    CNM HEADER
CNMVTLEN DC    X'0008'                (2)    REMAIN RU LENGTH(INCLUDE)
CNMVTKEY DC    X'8080'                (2)    RTM REQUEST CNTL VECT
RTMREQV  DC    X'0492C000'      (04): (4)    RTM REQEST SUB-VECTOR(92)
DSTTYPE  DC    X'F1'                         DESTINATION PU
DSTLEN   DC    X'08'                         DESTINATION LENGTH
DSTNAME  DC    C'PU//    '                   DESTINATION NAME
TAGTYPE  DC    X'F1'                         TARGET  RESOURCE TYPE
TAGLEN   DC    X'08'                         TARGET  RESOURCE LENGTH
TAGNAME  DC    C'PU//    '                   TARGET  RESOURCE NAME
RTMDATA  DC    200X'00'
LINE     DC    132C' '
ERRMSG   DC    25C' '
DATE     DS    CL6
         DS    0H
VSAMARG  DS    0CL16            KEY LENGTH 16
ARGDATE  DS    CL6
ARGHH    DC    C'00'
ARGPU    DS    CL8
SENDSW   DC    X'00'
LASTSW   DC    X'00'
LENGTH   DC    H'0'
WTOMSG   WTO   '1234567891123456789212345678931234567894123456789512345X
               6789612345678971234567890',MF=L
DATETAB  DS    0H
         DC    C'01',PL2'000',C'02',PL2'031',C'03',PL2'059'
         DC    C'04',PL2'090',C'05',PL2'120',C'06',PL2'151'
         DC    C'07',PL2'181',C'08',PL2'212',C'09',PL2'243'
         DC    C'10',PL2'273',C'11',PL2'304',C'12',PL2'334'
PUNAME   DS    0H                BY PU NAME ASCENDING KEY
         DC    C'LCLPU01 LCLPU02 LCLPU03 '                      LOCAL
         DC    C'LCLPU04 LCLPU05 LCLPU06 '
         DC    C'LCLPU07 LCLPU08 '
         DC    C'LCLPU09 '
         DC    C'************************'
         DS    0F
A99CNM   DC    X'06'
         DC    C'A99CNM'
         LTORG
SNAPDUMP DCB   DSORG=PS,DDNAME=SNAPDUMP,MACRF=W,RECFM=VBA,             *
               LRECL=125,BLKSIZE=882
RTMACB   ACB   AM=VTAM,APPLID=A99CNM,MACRF=NLOGON,PARMS=(NIB=RTMNIB)
RTMRPL   RPL   AM=VTAM,ACB=RTMACB
RTMNIB   NIB   MODE=RECORD,LISTEND=YES,SDT=SYSTEM,ENCR=NONE,           *
               LOGMODE=0,BNDAREA=0
VSAMIN   ACB   AM=VSAM,MACRF=(KEY,DIR,OUT)
VSAMRPL  RPL   AM=VSAM,ACB=VSAMIN,OPTCD=(KEY,DIR,KEQ,MVE)
PRINT    DCB   DDNAME=PRINT,DSORG=PS,MACRF=PM,RECFM=F,BLKSIZE=132
VSAMREC  DSECT
         DS    0F
         DS    0CL1233
VSAMKEY  DS    0CL16              KEY
VSAMDATE DS    CL6
VSAMHH   DS    CL2
VSAMPU   DS    CL8                    PU 8 BYTE
VSAMCTR  DS    CL2                OCCURRENCE COUNTER
VSAMDATA DS    0CL1215            45 TIMES
VSAMLU   DS    CL2
VSAMCNT  DS    5PL5
VSAMOCCR DS    44CL27
         END


                                                               c Reserved 1991

