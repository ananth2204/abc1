Analysing LUDRPOOL and PUDRPOOL usage


INTRODUCTION

Do you define the PUDRPOOL and/or LUDRPOOL
parameters in your NCP? If you do, did you ever wonder how
many of these resources are ever used? If you have, here is a
NetView CLIST for you.

Using dynamic reconfiguration, it is possible to define
parameters that allow you to add and delete SDLC type 1 and
type 2 physical units and logical units dynamically without
having to regenerate the NCP. On the PUDRPOOL parameter,
you define the number of physical units that can be added. On
the LUDRPOOL parameter, you define the number of
independent and dependent logical units that can be added. In
addition, these parameters also reflect the number of switched
PUs and LUs that can be added and the number of Token Ring
LUs that can be added.


Why Be Concerned?

The PUDRPOOL and LUDRPOOL parameters allocate a
number of control blocks. If you  allow for a large number of
PUs and LUs to be added dynamically, the size of your NCP
could become an issue. If you have a large Token Ring
network or a switched dial-up network that fluctuates, you
might be interested in the actual number of devices active to
VTAM. This way you can stay one step ahead of demand.


How Resources are Allocated

When you dynamically delete a PU or LU, the number of
available PUs or LUs will increase by one. When you
dynamically add a PU or LU, the number of available PUs or
LUs does not decrease until the Request Network Address
Assignment (RNAA) is sent. NCP keeps track of the number of
available physical units in the Physical Unit Pool Anchor Block
(PAB) and the number of available logical units in the Logical
Unit Anchor Block (LAB). NCP adds the number of
independent and dependent LUs together.


About The Clist

The following NetView CLIST is written in REXX for
NetView Version 1 Release 3. It reads NCP storage for a 3745
on NCP Version 5 Release 3 or Release 3.1. You must enter
the name of the NCP as a parameter. It will display the number
of available PUs that can be added.

For the LU pool, it will display:

o      The maximum number available (NUMTYP2 plus
      NUMILU on the LUDRPOOL parameter in the NCP).

o      The number of LUs dynamically added.

o      The current number of LUs that can be added.

o      The lowest number of LUs available since the NCP was initialized.


An Example

The following parameters are defined in NCP001:

LUPOOL   LUDRPOOL NUMTYP2=1700,NUMILU=300
PUPOOL   PUDRPOOL NUMBER=10

One PU was dynamically added. A large number of Token
Ring PCs that emulate a PU and LUs are active in the network.
Entering the NetView CLIST LUPUPOOL NCP001 might
result in the output shown in Figure 1.

     LUPUPOOL NCP001

     PU POOL  NUMBER CURRENTLY AVAILABLE -     9

     LU POOL  MAXIMUM NUMBER  AVAILABLE  -  2000
     LU POOL  NUMBER CURRENTLY USED      -   593
     LU POOL  NUMBER CURRENTLY AVAILABLE -  1407
     LU POOL  MINIMUM NUMBER AVAILABLE   -  1323
     Figure 1: Sample display


The CLIST LUPUPOOL

/* NETVIEW CLIST LUPUPOOL*/
/*  */
IF PARMCNT() Â¬= 0 THEN SIGNAL START
'CLEAR'
SAY 'DISPLAY THE NUMBER OF PU''S AND LU''S THAT CAN BE ADDED VIA'
SAY 'DYNAMIC CONFIGURATION.'
SAY 'COMMAND:'
SAY ' '
SAY 'LUPUPOOL (NCPNAME)'
SAY 'NCPNAME = NAME OF THE NCP TO BE CHECKED'
SAY ' '
SAY 'EXAMPLE:'
SAY 'LUPUPOOL NCPNAME'
SAY ' '
SAY 'PU POOL  NUMBER CURRENTLY AVAILABLE -    10'
SAY ' '
SAY 'LU POOL  MAXIMUM NUMBER  AVAILABLE  -   512'
SAY 'LU POOL  NUMBER CURRENTLY USED      -   352'
SAY 'LU POOL  NUMBER CURRENTLY AVAILABLE -   160'
SAY 'LU POOL  MINIMUM NUMBER AVAILABLE   -   156'
SAY ' '
HELP:
EXIT
/*  */
START:
NCP = MSGVAR(1)
/* ********************************************************************** */
/*  '6E8' +   POINTS TO THE XDA                                         * */
/*    |                                                                 * */
/*    |                                                                 * */
/*    -> XDA + 92                                                       * */
/*         |                                                            * */
/*         |                                                            * */
/*         -> HWX + 0                                                   * */
/*             |                                                        * */
/*             |                                                        * */
/*             -> QAB + 0                                               * */
/*                 |                                                    * */
/*                 |                                                    * */
/*                 -> PAB                                               * */
/*                                                                      * */
/*                     + 18 = CURRENT NUMBER AVAIL                      * */
/*                                                                      * */
/*             -> QAB + 4                                               * */
/*                 |                                                    * */
/*                 |                                                    * */
/*                 -> LAB                                               * */
/*                                                                      * */
/*                     + 8 = TOTAL NUMBER                               * */
/*                     + 12 = CURRENT NUMBER AVAIL                      * */
/*                                                                      * */
/* ********************************************************************** */
/*  GET LOW CORE 6E0 TO 6E8                */
/* ********************************************************************** */
DISADDR = 6E0
DISLEN = 12
DISVAR = 'WD'
DISRET = 'LOWCORE'
SIGNAL DIS
LOWCORE:
/* ********************************************************************** */
XDA = WD3
/* ********************************************************************** */
/*  GET THE ADDRESS OF THE HWX OUT OF THE XDA                       * */
/*  HWX IS X'5C' (92) BYTES INTO THE XDA                                * */
/* ********************************************************************** */
DISADDR = XDA
DISLEN = 96
DISRET = 'HAVXDA'
SIGNAL DIS
HAVXDA:
HWX = DISLAST
/* ********************************************************************** */
/*  GET THE ADDRESS OF THE QAB OUT OF THE HWX                       * */
/*       THE ADDRESS OF THE QAB IS X'00'(00) INTO THE HWX               * */
/* ********************************************************************** */
DISADDR = HWX
DISLEN = 4
DISRET = 'HAVQAB'
SIGNAL DIS
HAVQAB:
QAB = DISLAST
/* ********************************************************************** */
/*  GET THE ADDRESS OF THE LAB OUT OF THE QAB                       * */
/*       THE ADDRESS OF THE PAB IS X'00'(00) INTO THE QAB               * */
/*       THE ADDRESS OF THE LAB IS X'04'(04) INTO THE QAB               * */
/* ********************************************************************** */
DISADDR = QAB
DISLEN = 8
DISRET = 'HAVPAB'
SIGNAL DIS
HAVPAB:
PAB = WD1
LAB = DISLAST
/* ********************************************************************** */
/*  GET THE PUDRPOOL INFORMATION OUT OF PAB                         * */
/* ********************************************************************** */
DISPAB:
DISADDR = PAB
DISLEN = 20
DISVAR = 'PUDR'
DISRET = 'HAVPUDR'
SIGNAL DIS
HAVPUDR:
AVP = SUBSTR(PUDR5,5,4)
/* ********************************************************************** */
/*  GET THE LUDRPOOL INFORMATION OUT OF LAB                         * */
/* ********************************************************************** */
DISLAB:
DISADDR = LAB
DISLEN = 20
DISVAR = 'LUDR'
DISRET = 'HAVLUDR'
SIGNAL DIS
HAVLUDR:
TOTL = SUBSTR(LUDR3,1,4)
AVL = SUBSTR(LUDR4,1,4)
MINL = SUBSTR(LUDR5,1,4)
/* ********************************************************************** */
/*  CONVERT HEX TO DECIMAL       */
/* ********************************************************************** */
AVAIP = X2D(AVP)
TOT  = X2D(TOTL)
AVAIL = X2D(AVL)
USED = TOT - AVAIL
MIN   = X2D(MINL)
/* ********************************************************************** */
/*  FORMAT THE OUTPUT             */
/* ********************************************************************** */
AVP = RIGHT(AVAIP,5)
TOTL = RIGHT(TOT,5)
AVL = RIGHT(AVAIL,5)
MINL = RIGHT(MIN,5)
USL = RIGHT(USED,5)
SAY ' '
SAY 'PU POOL  NUMBER CURRENTLY AVAILABLE - 'AVP
SAY ' '
SAY 'LU POOL  MAXIMUM NUMBER  AVAILABLE  - 'TOTL
SAY 'LU POOL  NUMBER CURRENTLY USED      - 'USL
SAY 'LU POOL  NUMBER CURRENTLY AVAILABLE - 'AVL
SAY 'LU POOL  MINIMUM NUMBER AVAILABLE   - 'MINL
EXIT
/* ********************************************************************** */
/*    D I S   S U B R O U T I N E                                       * */
/*                                                                      * */
/*  FUNCTION: DISPLAY NCP STORAGE WITH VTAM NCPSTOR COMMANDS            * */
/*  INPUT:                                                              * */
/*    DISADDR = HEX ADDRESS TO BE DISPAYED                              * */
/*    NCP     = NCP TO BE DISPLAYED                                     * */
/*    DISLEN  = LENGTH OF STORAGE DISPLAY                               * */
/*    DISRET  = RETURN ADDRESS FROM DIS ROUTINE                         * */
/*    DISVAR  = VARIABLE PREFIX FOR OUTPUT ARRAY                        * */
/*  OUTPUT:                                                             * */
/*    DISLAST = VALUE OF LAST WORD OF STORAGE DISPLAY                   * */
/*    DISVAR1.= ARRAY OF WORDS FROM 1 TO N WITH OUTPUT OF DISPLAY       * */
/*                                                                      * */
/* ********************************************************************** */
DIS:
D = 0
'TRAP SUPPRESS MESSAGES  IST097I IST244I IST245I IST314I IST241I IST242I'
'D NET,NCPSTOR,ID='NCP',LENGTH='DISLEN',ADDR='DISADDR
IF RC Â¬= 0 THEN
 DO
  'TRAP NO MESSAGES'
  'FLUSHQ'
  SIGNAL ERROR
 END
  'WAIT 60 MESSAGES'
  DO FOREVER
  SELECT           /* SELECT ON ALL EVENTS  */
    WHEN (EVENT()='M') THEN
    DO
      'MSGREAD'
      SELECT          /* SELECT ON MESSAGE    */
        WHEN (MSGID()='IST097I') THEN CALL NOPVER
        WHEN (MSGID()='IST244I') THEN CALL VER
        WHEN (MSGID()='IST245I') THEN CALL VER
        WHEN (MSGID()='IST314I') THEN CALL ENDW
        WHEN (MSGID()='IST241I') THEN LEAVE
        WHEN (MSGID()='IST242I') THEN CALL REJECT
        OTHERWISE NOP
      END             /* SELECT ON MESSAGE    */
    END            /* EVENT() = M DO LOOP     */
    WHEN EVENT() = 'G' THEN
     DO
      'TRAP NO MESSAGES'
      'FLUSHQ'
      SIGNAL STRVER
     END
    WHEN (EVENT() = 'T') THEN
     DO
      'TRAP NO MESSAGES'
      'FLUSHQ'
      SIGNAL ERROR
     END
    OTHERWISE NOP
  END              /* SELECT ON ALL EVENTS    */
  'WAIT CONTINUE'
 END                /* END DO FOREVER          */
/*  LEAVE LOOP  */
LASTNCP = NCP
DISLAST = VALUE(A)
'TRAP NO MESSAGES'
'FLUSHQ'
SIGNAL VALUE(DISRET)
RETURN
/* ********************************************************************** */
/*  IST245I 000260 00000000 00000000 00000000 00000000 */
/* ********************************************************************** */
VER:
MSZI = 1
'GETMSIZE MSZ'
NEWMSG:
I = 2
'GETMLINE MSGTXT 'MSZI
'PARSEL2R MSGTXT MSID NUM1 NUM2 NUM3 NUM4 NUM5'
IF MSID Â¬= 'IST245I' THEN SIGNAL NXTMSG
WORD = VALUE('NUM'||I)
VERLOOP:
D = D + 1
A = DISVAR||D
INTERPRET A '= WORD'
I = I + 1
IF I > 5 THEN SIGNAL NXTMSG
WORD = VALUE('NUM'||I)
IF '.'WORD Â¬= '.' THEN SIGNAL VERLOOP
NXTMSG:
MSZI = MSZI + 1
IF MSZI <= MSZ THEN SIGNAL NEWMSG
RETURN
/* ********************************************************************** */
/*  IGNORE THESE MESSAGES */
/*  IST097I NCPSTOR ACCEPTED */
/*  IST244I NCP STORAGE FOR ID = (NCP) */
/*  IST314I END */
/* ********************************************************************** */
NOPVER:
ENDW:
RETURN
/* ********************************************************************** */
/*  IST241I NCPSTOR COMMAND COMPLETE FOR ID = (NCP) */
/* ********************************************************************** */
ENDVER:
STRVER:
LASTNCP = NCP
DISLAST = VALUE(A)
'TRAP NO MESSAGES'
'FLUSHQ'
SIGNAL VALUE(DISRET)
RETURN
/* ********************************************************************** */
/*  IST242I NCPSTOR COMMAND FAILED FOR ID = (NCP) SENSE = 08060000 */
/* ********************************************************************** */
REJECT:
SAY MSGID()' 'MSGSTR()
EXIT
/* ********************************************************************** */
/*  NCPSTOR COMMAND TIMED OUT */
/* ********************************************************************** */
ERROR:
SAY '***  CLIST ENDED EXPECTED DISPLAY RESULTS WERE NOT RECEIVED'
EXIT
/* ******************( END OF LUPUPOOL CLIST)*****************************


                                           c Reserved 1992

