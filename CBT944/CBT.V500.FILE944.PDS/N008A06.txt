An Assembler routine to print the Net/Stat log

We have recently installed the Net/Master product at our site
and the following program has been written to enable us to
produce hardcopy output of the Net/Stat log. Net/Stat is the
Net/Master equivalent of the NetView Status Monitor product.
Net/Stat records events onto a VSAM dataset named SMLOG.
This dataset can be browsed on-line; however, no facility is
provided to print the log. We have found that it is beneficial,
especially in relation to problems that require further
investigation, to have a hardcopy print of the SMLOG dataset.
I wrote the following Assembler program to produce a printout
of the dataset in question. It is very simple and does not print
the dataset using any input criteria, such as date or resource.
We clear our Net/Stat dataset each day so the print routine does
not generate vast amounts of output. It may be necessary to
amend the program if the Net/Stat dataset is not cleared daily.


SMLOGPRT UTILITY SOURCE CODE

SMLOGPRT CSECT
*        **************************************************************
*        * PROGRAM NAME: SMLOGPRT.                                    *
*        * PURPOSE:      PRINT THE NETMASTER SMLOG DATASET.           *
*        * MANUALS:      VSAM ADMINISTRATION: MACRO INSTRUCTION       *
*        *                                    REFERENCE               *
*        *                                    - GC26-4152-03.         *
*        **************************************************************
SMMAIN   EQU       *
         SAVE      (14,12)             /* SAVE REGISTERS.            */
         LR        R12,R15             /* LOAD ENTRY POINT.          */
         USING     SMLOGPRT,R12        /* ESTABLISH A BASE.          */
         ST        R13,SAVEAREA+4      /* STORE SAVEAREA ADDRESS.    */
         LA        R2,SAVEAREA         /* CHAIN SAVEAREA.            */
         ST        R15,8(R13)          /* CHAIN SAVEAREA.            */
         LR        R13,R2              /* LOAD NEW SAVEAREA.         */
SM0010   EQU       *
         OPEN      (SMLOGACB)          /* OPEN THE ACB FOR DATASET.  */
         LTR       R15,R15             /* TEST RETURN CODE.          */
         BZ        SM0020              /* IF OK, CONTINUE.           */
         LR        R7,R15              /* SAVE REGISTER.             */
         CVD       R15,PFLD            /* MAKE RETCODE DECIMAL.      */
         UNPK      RC,PFLD             /* FORMAT FOR DISPLAY.        */
         MVZ       RC+1(1),RC          /* REMOVE SIGN.               */
         MVC       ERRFLD(40),SMMSG010 /* MOVE IN ERROR MESSAGE.     */
         MVC       WTO1+4(43),SMMSG1   /* MOVE INTO WTO.             */
         LA        R5,WTO1             /* LOAD WTO ADDRESS.          */
         WTO       MF=(E,(R5))         /* WRITE IT TO THE JOBLOG.    */
*        **************************************************************
*        * SHOWCB MACRO.                                              *
*        * ACB=    - POINTS IT TOWARD SMLOGACB.                       *
*        * AREA=   - AREA TO RETURN REQUESTED INFORMATION.            *
*        * FIELDS= - RETURN ERROR REASON CODE (1 WORD MAXIMUM).       *
*        * LENGTH= - LENGTH OF RETURNED FIELD.                        *
*        **************************************************************
         SHOWCB    ACB=SMLOGACB,       /* FORMAT REASON CODE.        */X
               AREA=ERRCDE,                                            X
               FIELDS=ERROR,                                           X
               LENGTH=4
         L         R6,ERRCDE           /* LOAD REASON CODE.          */
         CVD       R6,PFLD             /* CONVERT REASON CODE.       */
         UNPK      REASON,PFLD         /* UNPACK IT.                 */
         MVZ       REASON+2(1),REASON+1 /* REMOVE SIGN.              */
         MVC       RESMSG(40),SMMSG030 /* MOVE IN MESSAGE.           */
         MVC       WTO1+4(43),SMMSG2   /* MOVE INTO WTO.             */
         LA        R5,WTO1             /* LOAD WTO ADDRESS.          */
         WTO       MF=(E,(R5))         /* WRITE IT TO THE JOBLOG.    */
         B         SMEND               /* GO AND END.                */
SM0020   EQU       *
         OPEN      (SYSOUT,(OUTPUT))   /* OPEN OUTPUT DATASET.       */
         LTR       R15,R15             /* TEST RETURN CODE.          */
         BZ        SM0025              /* IF OK, CONTINUE.           */
         LR        R7,R15              /* SAVE REGISTER.             */
         CVD       R15,PFLD            /* NO, MAKE RETCODE DECIMAL.  */
         UNPK      RC,PFLD             /* FORMAT FOR DISPLAY.        */
         MVZ       RC+1(1),RC          /* REMOVE SIGN.               */
         MVC       ERRFLD(40),SMMSG020 /* MOVE IN ERROR MESSAGE.     */
         MVC       WTO1+4(43),SMMSG1   /* MOVE INTO WTO.             */
         LA        R5,WTO1             /* LOAD WTO ADDRESS.          */
         WTO       MF=(E,(R5))         /* WRITE IT TO THE JOBLOG.    */
         B         SMEND               /* GO AND END.                */
SM0025   EQU       *
         TIME      DEC                 /* GET TODAY'S DATE.          */
         ST        R1,ANS              /* STORE ANSWER.              */
         UNPK      DATE,ANS            /* FORMAT IT.                 */
         OI        DATE+7,X'F0'        /* REMOVE SIGNS.              */
         MVC       OUTHEAD1+96(2),DATE+3 /* ONTO REPORT HEADER.      */
         MVC       OUTHEAD1+99(3),DATE+5 /* ONTO REPORT HEADER.      */
SM0030   EQU       *
         GET       RPL=SMLOGRPL        /* ISSUE GET FOR SMLOG.       */
         LTR       R15,R15             /* RECORD RETRIEVED?          */
         BNZ       SM0200              /* NO, EOF REACHED.           */
SM0040   EQU       *
         CLI       PRTSW,X'80'         /* SWITCH ON?                 */
         BNE       SM0045              /* NO BRANCH TO DO NORMAL.    */
         SR        R8,R8               /* ZEROIZE REGISTER 8.        */
         PUT       SYSOUT,OUTHEAD1     /* WRITE HEADER LINE.         */
         PUT       SYSOUT,BLANK        /* WRITE HEADER LINE.         */
         PUT       SYSOUT,OUTHEAD2     /* WRITE HEADER LINE.         */
         PUT       SYSOUT,OUTHEAD3     /* WRITE HEADER LINE.         */
         PUT       SYSOUT,BLANK        /* WRITE HEADER LINE.         */
         A         R8,COUNT1           /* ADD 5 TO COUNTER.          */
SM0045   EQU       *
         MVC       OUTTIM(11),INAREA+21 /* MOVE TIME TO OUTREC.      */
         MVC       OUTNOD(8),INAREA+33 /* MOVE NODENAME TO OUTREC.   */
         MVC       OUTUSR(8),INAREA+42 /* MOVE USER TO OUTREC.       */
         MVC       OUTDYR(2),INAREA+51 /* FORMAT DATE.               */
         MVC       OUTDMT(2),INAREA+53 /* FORMAT DATE.               */
         MVC       OUTDDA(2),INAREA+55 /* FORMAT DATE.               */
         MVC       OUTMSG(137),INAREA+78 /* MOVE MSGTXT TO OUTREC.   */
SM0150   EQU       *
         PUT       SYSOUT,OUTREC1      /* WRITE RECORD.              */
         PUT       SYSOUT,OUTREC2      /* WRITE RECORD.              */
         A         R8,COUNT2           /* ADD 1 TO COUNTER.          */
         MVI       PRTSW,X'00'         /* TURN OFF HEADER PRINT.     */
         C         R8,PAGEEND          /* END OF PAGE?               */
         BNH       SM0175              /* NO, BRANCH PAST RESET.     */
         MVI       PRTSW,X'80'         /* TURN ON HEADER PRINT.      */
         B         SM0030              /* GO READ ANOTHER.           */
SM0175   EQU       *
         B         SM0030              /* GO READ ANOTHER.           */
SM0200   EQU       *
         CLOSE     (SMLOGACB,,SYSOUT)  /* CLOSE FILES.               */
         SR        R7,R7               /* ZEROIZE REGISTER 7.        */
SMEND    EQU       *
         L         R13,SAVEAREA+4      /* RELOAD SAVEAREA.           */
         LR        R15,R7              /* LOAD RETURN CODE.          */
         L         R14,12(R13)         /* RELOAD REGS.               */
         LM        R0,R12,20(R13)      /* RELOAD REGS.               */
         BR        R14                 /* RETURN TO CALLER.          */
SAVEAREA DS        18F
ANS      DS        F
COUNT1   DC        F'5'
COUNT2   DC        F'2'
DATE     DS        D
ERRCDE   DS        F
PAGEEND  DC        F'55'
PFLD     DC        D'0'
PRTSW    DC        X'80'
SMMSG1   DS        0CL43
ERRFLD   DC        CL40'                                        '
RC       DS        CL2
         DC        CL1' '
SMMSG2   DS        0CL43
RESMSG   DC        CL40'                                        '
REASON   DS        CL3
BLANK    DS        CL150' '
OUTHEAD1 DS        0CL150
         DC        CL1'1'
         DS        CL45
         DC        CL35'S M L O G   P R I N T   R E P O R T'
         DS        CL5
         DC        CL9'RUN DATE:'
         DS        CL1
JULYY    DS        CL2
         DC        CL1'.'
JULDDD   DS        CL3
         DS        CL49
OUTHEAD2 DS        0CL150
         DS        CL2
         DC        CL10'TIME OPUT '
         DS        CL2
         DC        CL8'USERNODE'
         DS        CL2
         DC        CL8' USERID '
         DS        CL2
         DC        CL8'  DATE  '
         DS        CL2
         DS        CL106
OUTHEAD3 DS        0CL150
         DS        CL2
         DC        CL10'---- ---- '
         DS        CL2
         DC        CL8'--------'
         DS        CL2
         DC        CL8' ------ '
         DS        CL2
         DC        CL8'  ----  '
         DS        CL2
         DS        CL106
OUTREC1  DS        0CL150
         DS        CL1
OUTTIM   DS        CL11
         DS        CL2
OUTNOD   DS        CL8
         DS        CL2
OUTUSR   DS        CL8
         DS        CL2
OUTDDA   DS        CL2
         DC        CL1'/'
OUTDMT   DS        CL2
         DC        CL1'/'
OUTDYR   DS        CL2
         DS        CL2
         DS        CL106
OUTREC2  DS        0CL150
         DC        CL14' MESSAGE TEXT:'
OUTMSG   DS        CL136
SMMSG010 DC        CL40'SMMSG010:ERROR OPENING SMLOG DATASET RC='
SMMSG020 DC        CL40'SMMSG020:ERROR OPENING O/PUT DATASET RC='
SMMSG030 DC        CL40'SMMSG030:SHOWCB REASON CODE RETURNED =  '
WTO1     WTO       '                                                ', X
               ROUTCDE=(2,11),MF=L
SYSOUT   DCB       DDNAME=SYSOUT,RECFM=FBA,MACRF=PM,LRECL=150,DSORG=PS
SMLOGACB ACB       AM=VSAM,DDNAME=SMLOG,MACRF=(KEY,SEQ,IN)
SMLOGRPL RPL       ACB=SMLOGACB,AM=VSAM,AREA=INAREA,AREALEN=4096,      X
               OPTCD=(KEY,SEQ),RECLEN=4096
INAREA   DS        4096XL1'00'
         END

The format of the records recorded onto the dataset is presented
below along with the JCL required to execute the print utility.
The program can be executed against Net/Stat when it is active
without causing any problems. A standard assembly and link
edit should be performed to create the necessary load module to
be executed. The format of the records and the program
presented here have been executed successfully on a
Net/Master 2.2 system and have proved to be an invaluable aid
in debugging and event tracing.


SMLOG DATASET RECORD FORMAT

Bytes 1-11      Time in the format hh.mm.ss.ss
Byte 12      Blank
Bytes 13-20      Node name
Byte 21      Blank
Bytes 22 - 29      User name
Byte 30      Blank
Bytes 31-46      Correlator-id
   31-36         Date in the format YYMMDD
   37-42         Time in the format HHMMSS
   43-46         Sequence number for date/time collisions
Byte 47      Blank
Bytes 48-51      Sequence number
Byte 52      Blank
Byte 53      Message class
Byte 54      Blank
Byte 55      Logging class in range 0-5
Byte 56      Message text (variable in length)
Byte 57-64      NCL procedure name
Byte 65      Hyphen (-)
Byte 66-68      Message sequence number within NCL
Byte 69      Colon (:)
Byte 70-n      Text.


FILE KEY INFORMATION

Bytes 1-16      Correlator-id
  1-6         Date in the format YYMMDD
  7-12         Time in the format HHMMSS
  13-16         Sequence number for date/time collisions
Bytes 17-19       Logical process sequence
Byte 20      Tie-breaker, initial value = 0.


JCL TO EXECUTE SMLOGPRT

//STS01B      JOB   (SDTS),CLASS=A,MSGCLASS=Q,MSGLEVEL=(1,1)
//STEP1       EXEC  PGM=SMLOGPRT
//STEPLIB     DD    DSN=NETMAST.LOADLIB.USER,DISP=SHR
//SMLOG       DD    DSN=NETSTAT.SMLOG.CLUSTER,DISP=SHR
//SYSOUT      DD    SYSOUT=A
//


John Bradley
Senior Technical Support Engineer (UK)

