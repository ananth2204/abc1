CA-ACF2 expired password exit

One of the complaints we have had from staff who use the
multiple session capability of NetMaster is that CA-ACF2 will
often expire their password during a multiple application
session.  This is because CA-ACF2 uses the time as well as the
date when calculating whether a password should expire.

If the user then attempts to log on to another VTAM
application after CA-ACF2 has expired their password,
NetMaster enters an expired password and they are prompted
for a new password.  Once they have done this, the password
being held internally by NetMaster is invalid.  Any further log-
ons to other applications will submit what is now an invalid
password and CA-ACF2 will return with an invalid password
error.

To overcome this problem we considered two alternatives :

1       Rewrite the log-on security exit for NetMaster.

2       Implement a CA-ACF2 expired password exit to
       temporarily circumvent password expiration.

We decided on the second approach as we were more familiar
with this type of exit.  We hope to eventually have a security
validation exit which uses CA-ACF2 log-on inheritance but
have postponed writing one in the hope that the supplier of
NetMaster provides such a facility with later releases of its
software.  We believe that this type of CA-ACF2 exit could be
applicable to any multiple application interface.

Our CA-ACF2 expired password exit examines the date in the
LIDPSTOD field, adds the MAXDAYS value, and compares
the result to today's date.  Unless today's date is greater than
the result, the exit allows the user to sign on without expiring
his or her password.  This will usually ensure that a user's
password will only expire on the first sign-on attempt of the
day following the day upon which CA-ACF2 would normally
expire the password.  This normally means that users will be
forced to change their password when they sign onto NetMaster
(or some other appropriate multiple application software) first
thing the following morning rather than in the middle of a
current session.

The one problem we have found with this exit is that CA-ACF2
will warn the user in advance that their password is going to
expire for the number of days specified by 'PASSWORD
WARN DAYS', but when the exit is invoked to allow them to
sign on despite having passed the expiration date and time, the
password expiration warning is no longer issued.  This can be a
bit confusing to some users but we find that the great majority
of users ignore these expiration warnings anyway.

This exit also does some special processing for user-ids that
begin with the letters GRP so that they can never be expired
except by a security administrator (see the section of code
beginning with the label CONTINUE) but I have commented
this code out as it is not required for the other processing.

ACF2     TITLE 'EXPIRED PASSWORD EXIT'

***********************************************************************
*        MODULE NAME = CSP556                                         *
*        DESCRIPTIVE NAME = ACF2 EXPIRED PASSWORD EXIT                *
*        FUNCTION  = STOP LOGONIDS EXPIRING UNLESS IT IS THE FIRST    *
*                    LOGON OF THE DAY FOLLOWING NORMAL EXPIRATION.    *
*                    THIS IS DONE TO AVOID MOST INCIDENTS OF          *
*                    LOGONIDS EXPIRING AFTER A USER HAS SIGNED        *
*                    ON TO NETMASTER BUT BEFORE LOGGING ON TO OTHER   *
*                    ACF2 CONTROLLED APPLICATIONS FORCING THEM TO     *
*                    GET OUT OF NETMASTER AND LOG BACK ON.            *
*        OPERATION = THE EXIT GAINS CONTROL FROM ACF2 WHEN A          *
*                    PASSWORD EXPIRES. THIS EXIT COMPARES TODAYS      *
*                    DATE TO THE DATE FROM THE LIDPSTOD PLUS THE      *
*                    VALUE FROM MAXDAYS AND IF TODAY IS GREATER,      *
*                    ALLOWS THE PASSWORD TO EXPIRE. OTHERWISE,        *
*                    IT SIMPLY LOGS THE USER ON AND WILL NOT FORCE    *
*                    THE USER TO CHANGE THEIR PASSWORD UNTIL THEIR    *
*                    FIRST SIGN ON OF THE FOLLOWING DAY.              *
*                    HOPEFULLY THIS WILL MEAN THAT ALL PASSWORDS      *
*                    WILL BE FORCED TO EXPIRE WHEN THE USER SIGNS ON  *
*                    TO NETMASTER FIRST THING THE NEXT MORNING.       *
*                    THE EXIT WILL BYPASS THIS CHECKING               *
*                    IF THE LID HAS BEEN MANUALLY EXPIRED.            *
*                    THIS EXIT ALSO ENSURES THAT GRP USERS CANNOT     *
*                    BE EXPIRED AS THESE USERS CANNOT CHANGE THEIR    *
*                    PASSWORDS.                                       *
*        REGISTER CONVENTIONS = STANDARD CONVENTIONS.                 *
*           REGISTER  0 = NOT USED                                    *
*           REGISTER  1 = POINTER TO PARAMETER LIST                   *
*           REGISTER  2 = ADDRESS OF LIDLID FIELD IN LID RECORD       *
*           REGISTER  3 = ADDRESS OF LID RECORD                       *
*           REGISTER  4 = ADDRESS OF ACVALD CONTROL BLOCK             *
*           REGISTER  5 = WORK REGISTER                               *
*           REGISTER  6 = WORK REGISTER                               *
*           REGISTER  7 = WORK REGISTER                               *
*           REGISTER  8 = WORK REGISTER                               *
*           REGISTER  9 = WORK REGISTER                               *
*           REGISTER 10 = RETURN CODE AND WORK REGISTER               *
*           REGISTER 11 = POINTER TO PARM LIST AFTER ENTRY            *
*           REGISTER 12 = BASE REGISTER                               *
*           REGISTER 13 = SAVE AREA POINTER                           *
*           REGISTER 14 = RETURN ADDRESS                              *
*           REGISTER 15 = ENTRY POINT ADDRESS                         *
*        MODULE TYPE = EXIT                                           *
*               PROCESSOR = ASM                                       *
*               ATTRIBUTES = RENT, KEY 0, STEP-MUST-COMPLETE          *
*        ENTRY POINTS = CSP556                                        *
*               LINKAGE FROM = ACF2                                   *
*        INPUT = REG 1 POINTS TO STANDARD PARAMETER LIST              *
*                (SEE DOCUMENTATION IN ACF2 SYSTEM PROGRAMMER'S       *
*                 GUIDE)                                              *
*        OUTPUT = NONE                                                *
*        EXIT - RETURN CODE = 0 - PASSWORD IS EXPIRED                 *
*             - RETURN CODE = 4 - PASSWORD NOT EXPIRED, LOGON PROCEEDS*
*        EXTERNAL REFERENCES = NONE                                   *
*        MACROS USED =                                                *
*                  ACVALD          ACF2.ACFMAC                        *
*                  ACFREGS         ACF2.ACFMAC                        *
*                  LIDREC          ACF2.ACFMAC                        *
*        ABEND CODES = NONE                                           *
***********************************************************************
         TITLE 'DATA AREAS AND DSECTS'
WORKAREA DSECT
SAVEAREA DS    9D                           REGISTER SAVE AREA
DIV      DS    D                            DIVIDEND
DATE     DS    D                            DATE STORAGE
REGS     DS    6F                           SAVE IMPORTANT REGS
         ORG   REGS
REG2     DS    F
REG3     DS    F
REG4     DS    F
REG5     DS    F
REG6     DS    F
REG7     DS    F
WORKLEN  EQU   *-WORKAREA
         LIDREC DSECT=YES
         ACVALD DSECT=YES
         ACFREGS
CSP556   CSECT
         SAVE  (14,12),,CSP556-&SYSDATE-&SYSTIME
         USING CSP556,R12              CSECT ADDRESSABILITY
         LR    R12,R15                 LOAD BASE REGISTER
         LR    R11,R1                  SAVE PARM LIST ADDR
         GETMAIN RU,LV=WORKLEN         GETMAIN STORAGE
         ST    R13,4(R1)               SAVE AREA CHAIN
         ST    R1,8(R13)               STORE SAVE AREA ADDR
         LR    R13,R1                  SET UP OUR SAVE AREA
         USING WORKAREA,R13
*        GET ADDRESSABILITY TO ACF2 CONTROL BLOCKS
         L     R4,0(,R11)              LOAD PARM LIST ADDRESS
         USING ACVALD,R4               ADDRESSABILITY TO ACVALD
*        FIND OUT IF A 'GRP' USER
CONTINUE DS    0H
         L     R3,4(,R11)              LOAD LID RECORD ADDRESS
         USING LIDREC,R3               ADDRESSABILITY FOR LID
         LA    R2,LIDLID               POINT TO LID
*        CLC   0(3,R2),GRP             IS THIS 'GRP' USER ?
*        BNE   CHKEXPIR                NO, SO CHECK MANUALLY EXPIRED
*        NI    LIDM2FLG,X'FE'          YES, SO SET TO NOT-EXPIRED
*        NI    LIDNDAYS,X'00'          AND SET MAXDAYS TO ZERO
*        LA    R10,4(0,0)              SET RETURN CODE 4 - NO EXPIRE
*        B     RETURN                  AND GET OUT
*        CHECK TO SEE IF USERID WAS MANUALLY EXPIRED
CHKEXPIR DS    0H
         TM    LIDM2FLG,LIDM2PXP       IS THIS LID MANUALLY EXPIRED ?
         BNO   CHKPASSW                NO, SO CONTINUE
         LA    R10,0                   YES, SO SET TO EXPIRE
         B     RETURN                  AND GET OUT
*        CHECK PASSWORD CHANGE DATE AND TIME
CHKPASSW DS    0H
         STM   R2,R7,REGS              STORE AWAY IMPORTANT REGS
         LM    R4,R5,LIDPSTOD          LOAD PSWD CHANGE TOD
         SRDL  R4,12(0)                SHIFT OUT THE SMALL AMOUNTS
         D     R4,MICS                 DIVIDE TO GIVE MINUTES (IN R5)
         LA    R4,0                    CLEAR REMAINDER
         D     R4,MINS                 DIVIDE TO GIVE DAYS (IN R5)
         LA    R8,0                    CLEAR R8
         IC    R8,LIDNDAYS             GET MAXDAYS FROM LID
         AR    R8,R5                   ADD MAXDAYS TO LIDPSTOD DAYS
         LA    R9,0                    LOAD R9 WITH ZEROES
         LA    R10,0                   LOAD R10 WITH ZEROES
         STM   R9,R10,DIV              ENSURE DIV IS SET TO ZERO
         STM   R9,R10,DATE             ENSURE DATE IS SET TO ZERO
         LA    R9,1(0,0)               LOAD R9 WITH ONE FOR LATER
         TIME  DEC                     GET TODAYS TOD
         ST    R1,DATE+4               STORE IT IN DATE FIELD
         DP    DATE,THOU               SEPARATE YEAR AND DAY
         MVC   DIV+4,DATE              MOVE YEAR INTO DIVIDEND
         LA    R4,0                    LOAD R4 WITH ZERO
         CVB   R5,DIV                  CONVERT YEAR TO BINARY
         LTR   R5,R5                   IS YEAR ZERO
         BNZ   DIVIDE                  NO, SO DIVIDE AWAY
         LA    R5,0                    YES, SO SET R5 TO ZERO
         B     DAYSONLY                AND CALCULATE DAYS ONLY
DIVIDE   DS    0H
         D     R4,FOUR                 DIVIDE YEAR BY FOUR
         LA    R6,0                    LOAD R6 WITH ZERO
         LR    R7,R5                   LOAD R7 WITH QUOTIENT
         M     R6,YEAR4                MULTIPLY RESULT BY (365*4)
         LA    R2,0                    LOAD R2 WITH ZERO
         LR    R3,R4                   LOAD R3 WITH REMAINDER YRS
         LTR   R3,R3                   IS REMAINDER ZERO
         BNZ   LEAP                    NO, SO CONTINUE
         SR    R5,R9                   YES, SO NO LEAP THIS YEAR
LEAP     DS    0H
         M     R2,YEAR                 MULTIPLY REMAIN TO GET DAYS
         AR    R7,R3                   ADD DAYS REMAIN TO TOTAL
         AR    R5,R7                   ADD DAYS FOR LEAP YEARS
DAYSONLY DS    0H
         LA    R1,0                    LOAD R1 WITH ZERO
         ST    R1,DATE                 CLEAR OUT YEARS
         CVB   R4,DATE                 CONVERT DAYS INTO R4
         SR    R4,R9                   SUBTRACT 1 FROM NO. OF DAYS
         AR    R5,R4                   TOTAL WHOLE DAYS FROM 1900
         CLR   R5,R8                   COMPARE TODAY WITH LIDPSTOD DAYS
         BH    EXPOKAY                 TODAY HIGH SO EXPIRE
         LA    R10,4(0,0)              SET RETURN CODE TO 4 - NO EXPIRE
         B     RETURN                  GET OUT
EXPOKAY  DS    0H
         LA    R10,0                   EXPIRE NORMALLY
         B     RETURN                  GET OUT
*        RETURN
RETURN   DS    0H
         LR    R1,R13                  UNCHAIN SAVE AREAS
         L     R13,4(R13)
         FREEMAIN RU,LV=WORKLEN,A=(1)  FREE STORAGE
         LR    R15,R10                 SET RETURN CODE INTO R15
         RETURN (14,12),RC=(15)        GET OUT
*        CONSTANTS.
         DS    0F
FOUR     DC    F'4'                         FOUR
YEAR     DC    F'365'                       365 DAYS PER YEAR
THOU     DC    PL4'+1000'                   ONE THOUSAND AS PACKED
YEAR4    DC    F'1460'                      365 DAYS * 4 YEARS
MINS     DC    F'1440'                      MINUTES IN A DAY
MICS     DC    F'60000000'                  MICROSECS IN A MINUTE
GRP      DC    C'GRP'
         END   CSP556


David McGeorge
Consultant Systems Programmer (Australia)              cDavid McGeorge 1991

