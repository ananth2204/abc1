APPN update

Under APPN, as a node activates it can communicate with all
other accessible nodes to notify the APPN network what
resources it controls. This dynamic nature of APPN is one of
the principal benefits of the architecture since it removes the
necessity for time and resource consuming network static
definitions. An ACF/VTAM Version 3 host network node (ie
an SSCP supporting a subarea) can only participate in an APPN
network as a Low Entry Node. In effect VTAM views any
connected APPN network node as a special domain.
ACF/VTAM Version 3 cannot communicate intelligently with
an APPN node to identify the local resources, eg host
applications, but must wait until solicited by an adjoining
APPN node. Working in conjunction with a front-end
processor running ACF/NCP, VTAM can connect to an APPN
network but is aware of only the adjacent APPN node. The
NCP defines Boundary Session control blocks between the
subarea and the APPN node to enable sessions to be
established.

Earlier this year IBM announced ACF/VTAM 4.1 with support
for APPN. This represents possibly the most significant new
release of VTAM since SNA was first implemented and with it
IBM is attempting to bring the mainframe into the world of
open systems, which is currently the preserve of small systems.

This does not mean that network planners should push full
speed ahead to APPN. What it does enable is a considered
appraisal of APPN in the knowledge that the last significant
piece of the jigsaw will be available (probably mid to late
1993). Mainframe support was always destined to be some
time behind other announcements for two reasons: firstly the
IBM development effort required to upgrade ACF/VTAM and
secondly the anxiety of IBM to be seen to be contending in the
areas of greatest activity and momentum, Local Area Networks
(LANs). Now IBM has a considerable footing in the area of
LAN-based internetwork communications, effort can be
expended elsewhere.

Perhaps the most significant feature of ACF/VTAM 4.1 to
most SNA sites is the support of LU protocols other than
LU6.2. Limited support for device-dependent protocols such as
LU2 (ie 3270 terminals) was announced plus a hint that this
support would be considerably extended for Release 2 of the
product. This means that an SNA site could plan to migrate to
APPN without immediately having to convert all existing SNA
applications. Perhaps, not surprisingly, it is becoming clear
that IBM is encouraging the migration route rather than
conversion. In other words, customers are being encouraged to
design all new applications using APPN and plan to convert
existing applications when time and resources allow. LU2-
based applications could take advantage of the new features of
APPN without having to convert though the performance cost
remains to be determined. To support LU2 across an APPN
network, IBM uses a transport technique termed 'pipelining' or
'tunnelling' and which would appear basically to be
encapsulation (wrapping one protocol around another). Such a
technique is widely used by OEM vendors to overcome
interconnection problems between diverse network protocols.

APPN support on the mainframe will remove the necessity for
static network configurations. In effect the Front End Processor
(FEP) running ACF/NCP will only need to know about the
link(s) from the mainframe to the APPN network. This does
not mean that there will be a decreased load on the FEP. As
resources are activated or connected they will be dynamically
added to the APPN network directory. Over a period of time
the local directory could build up knowledge of the location of
every resource in the network. Dynamic connectivity and
resource directory maintenance will consume resources on both
the mainframe and the FEP. In practice it is likely that the FEP
will require at least a storage upgrade but probably also a CPU
upgrade to handle the increased work.

Consider some of the new NCP parameters introduced in
ACF/NCP 4.3 and 5.2 specifically to support APPN
connections:

         BUILD ADDSESS=
               MAXSESS=
               NAMTAB=

ADDSESS defines a pool of Boundary Session control blocks
available for use by APPN LUs when the defined limit for the
LU has been reached. In other words, a licence to expand.
MAXSESS defines the maximum number of sessions an APPN
LU can have (this must be greater than ADDSESS). NAMTAB
defines the number of entries in the Network Name Table
(Network-ids, SSCP-ids, PU2.l node-ids etc). Injudicious
values for these parameters could result in heavy storage usage
in the NCP. However, these parameters do illustrate how
simple APPN is to define. APPN will see a trade-off in cost
between greatly diminished network system programmer time
and increased hardware.

An interesting spin-off from the ACF/VTAM 4.1
announcements is the fact that it should be possible to
accommodate CICS in an APPN network without. any
changes. This feature may well go hand in hand with the
dramatic recent announcements to support CICS on non-IBM
platforms. Advanced Program to Program Communications
(APPC) is based on distributed transaction processing and
CICS is the only viable transaction processing application
supported by IBM. By pipelining the LU2 traffic across the
APPN network, CICS can be run almost anywhere. Making
CICS available on any platform enables IBM to market an
Open System solution based on an underlying SNA network.

Brian Alford
Systems Consultant
Aranda (UK)

