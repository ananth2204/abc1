Session control in LU6.2

In theory we should be able to forget all the pre-LU6.2
complications of session control. VTAM handles all LU-LU
session establishment and takedown and ensures the quality and
availability of the sessions. When an LU6.2 application
requests a conversation by issuing the macro:

      APPCCMD CONTROL=ALLOCATE,LUNAME=partner_LU

VTAM establishes a session between the application and
partner LU and returns to the application the conversation-id
(CONVID) of this dedicated session. The CONVID is then
used to correlate the underlying session and allow the
associated application transactions to communicate.  An
application can allocate and use in parallel many conversations
with a partner LU6.2 application. Each conversation is
assigned a unique session which means in SNA terms that
VTAM must establish parallel sessions between the two LUs.

By means of the LOGMODE, two communicating applications
can agree firstly on whether they will support parallel sessions
and, if so, how many and what to do if there is contention
between them. Session limits are set for a particular mode
name and there can be a number of mode names each of which
has a different set of session limits defined. Once the
applications have established communication, session limits
can be re-negotiated using the Change Number Of Sessions
(CNOS) function for which three key values are specified:

1      Maximum number of sessions.

2      Minimum number of sessions for which this application is
      the contention winner.

3      Minimum number of sessions for which the partner
      application is the contention winner.

Session limit manipulation is primarily intended to enable
control of the resources used by the applications.  Changing
session limits is a useful way of closing down an application in
a controlled manner.

Using the APPCCMD interface support, an application can
manipulate the underlying session limits if required via use of
the CNOS request. This is coded as the QUALIFY=CNOS
option on the CONTROL=OPRCNTL form of the APPCCMD
macro.

Using this mechanism an application can define new session
limits by supplying a 7-byte area containing a mapping of the
CNOS Session Limits Control Block with the new values. The
control block is mapped by DSECT ISTSLCNS (VTAM
Session Limit, Change Number of Sessions) and contains
values for the maximum number of sessions for the mode, the
number of sessions each application is allowed to hold
allocated in the event of contention, and who is responsible for
the draining of surplus sessions.

The following example is a subroutine that is triggered by an
operator command to halve the current number of active
sessions with the partner application LU62PART.


Subroutine: Scheduled session change

Because of a trigger the number of sessions allowed will be
reduced to a half of the allowed maximum for the on-line
mode.

SESSREST DS    0H
    Entry Protocol
* Request a display of logmode ONLINE for the application LU62PART.
         APPCCMD CONTROL=OPRCNTL,
               QUALIFY=DISPLAY,
               RPL=LU62RPL,
               ACB=LU62ACB,
               AREA=LU62SLD,
               AAREA=LU62RPLX,
               AREALEN=64,
               LUNAME=LU62PART,
               LOGMODE=ONLINE,
               OPTCD=SYN
         LTR   R15,R15                 Display OK ?
         BNZ   SESSREX4                Exit with bad RC
         LA    R7,LU62SLD              Set addressability ...
         USING ISTSLD,R7               ... to display block
         LH    R2,SLDDSESL             Maximum session limit
         SRL   R2,1                    Halve the limit
         LH    R3,SLDSESSL             Current session limit
         CR    R3,R2                   Already below half limit ?
         BL    SESSREX0                Take good exit
**********************************************************************
* Define new session limits for the mode. As the maximum has been    *
* halved then both the minimum local and remote contention winner    *
* values must be similarly reduced otherwise the macro will fail with*
* RCPRI=X'002C',RCSEC=X'0007' if the sum of these two exceeds the new*
* overall maximum.                                                   *
**********************************************************************
         STH   R2,SLDDSESL             Set new maximum limit
         LH    R3,SLDDMCWL             Halve minimum for ...
         SRL   R3,1                    ... local contention
         STH   R3,SLDDMCWL             Set new value
         LH    R4,SLDDMCWP             Halve minimum for ...
         SRL   R4,1                    ... partner contention
         STH   R4,SLDDMCWP             Set new value
         APPCCMD CONTROL=OPRCNTL,
               QUALIFY=DEFINE,
               RPL=LU62RPL,
               ACB=LU62ACB,
               AREA=LU62SLD,
               AAREA=LU62RPLX,
               AREALEN=64,
               LUNAME=LU62PART,
               LOGMODE=ONLINE,
               OPTCD=SYN
         LTR   R15,R15                 Define OK ?
         BNZ   SESSREX8                Exit with bad RC
**********************************************************************
* Initiate a change in the number of sessions between the            *
* applications for the mode ONLINE. (New limits do not come into     *
* effect until CNOS negotiation has been initiated).                 *
**********************************************************************
         DROP  R7
         LA    R7,LU62CNOS             Set addressability ...
         USING ISTSLCNS,R7             ... to CNOS block
         STH   R2,SLCSESSL             Set new ...
         STH   R3,SLCMCWL              ... session ...
         STH   R4,SLCMCWP              ... limits
         APPCCMD CONTROL=OPRCNTL,
               QUALIFY=CNOS,
               RPL=LU62RPL,
               ACB=LU62ACB,
               AREA=LU62SLD,
               AAREA=LU62RPLX,
               AREALEN=7,
               LUNAME=LU62PART,
               LOGMODE=ONLINE,
               OPTCD=SYN
         LTR   R15,R15                 Define OK ?
         BNZ   SESSREXC                Exit with bad RC
SESSREX0 DS    0H
         SR    R15,R15                 Set session reset OK
         BR    R14
SESSREX4 DS    0H
         LA    R15,4                   Set session reset RC=4
         BR    R14
SESSREX8 DS    0H
         LA    R15,8                   Set session reset RC=8
         BR    R14
SESSREXC DS    0H
         LA    R15,12                  Set session reset RC=12
         BR    R14
LU62RPL  RPL   AM=VTAM                 Request Parameter List
LU62RPLX ISTRPL6                       RPL Extension
LU62SLD  DS    XL64                    Define/Display cntl block
LU62CNOS DS    XL7                     CNOS control block


Displaying the number of sessions

An in-core table is maintained by VTAM which relates partner
application LU names to the mode names that are being used to
establish sessions. This table is called the LM Table. Access
can be gained to session information in the table via the
Operator Control or OPRCNTL function of the APPCCMD
interface. Information can only be requested for a specific log
mode for a specific partner application LU name, a general
inquiry is not supported, for example:

     APPCCMD CONTROL=OPRCNTL,QUALIFY=DISPLAY,
           LOGMODE=log-mode-name,
           LUNAME=partner-LU,
           AREA=display-area

AREA=display-area must point to a 64-byte area into which the
information can be placed by the interface. The control block is
mapped by DSECT ISTSLD (VTAM Session Limit, Display)
and contains much information relating to the sessions for the
mode including the maximum number of sessions allowed and
whether security access fields are to be passed in the FMH5.

Initially VTAM gathers entries for the LM table from the
VTAM application definition and LOGMODE tables. It is
possible for an application to change some of the values set in
the entries by using the OPRCNTL qualifier
QUALIFY=DEFINE.

SNASVCMG is the log mode used by VTAM for
communication between partner applications primarily to
obtain information relating to session limits. If VTAM does not
know the session limits to be set with another application it will
find out by using the SNASVCMG mode to communicate.
Fortunately the activity relating to this mode is transparent to
the application. It must be the first mode for which session
negotiation is performed and if the application omits to do this
then VTAM will instead. There is an entry in the default
LOGMODE table for SNASVCMG, so remember if you
replace the table: an entry must be included.

Brian Alford
Systems Consultant
Aranda (UK)

