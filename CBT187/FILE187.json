{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011448000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE187.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE187.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x08\\n'", "DS1TRBAL": "b'06'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x7f\\x00\\x04\\x01\\x7f\\x00\\x0c\\x00\\t'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x90)\\x0f\\x01\\x00)\\x9f\\x111\\x00\\x9a\\x00\\x80\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1990-10-17T00:00:00", "modifydate": "2000-10-25T11:31:00", "lines": 154, "newlines": 128, "modlines": 0, "user": "WSBG"}, "text": "              SOME REMARKS ON THE CLIST CONVERSION PROGRAM\n\n\nPlease see change notes at the bottom .\n\n --------------------------------------------------------------------\n\n      This program (CVTCLIST) converts CLIST libraries from the fixed\nblocked (LRECL=80) format to the variable blocked (LRECL=255) format,\nand vice-versa.  Whole libraries are converted at once.\n\n      The SYSUT1 (input) file and the SYSUT2 (output) file are examined\nby the program to make sure that one of them is in the FB-80 format\nand the other is in the VB-255 format.  The program then converts the\nSYSUT1 library into the format of the SYSUT2 library appropriately.\n\n      This program used to work best if the output (SYSUT2) dataset\nis empty of members.  (But this is not necessary any more in Version\n2.1.  Now a STOW with replace is done, instead of a STOW with add.)\n\n      In Version 2.1, many enhancements were done in the reporting\ncapability of this program.  Individual member reporting is done,\ndataset names and titles appear at the head of each page.  The summary\nreport has been enhanced.\n\n      In Version 2.1, you can merge many CLIST libraries into one\nlibrary as you convert.  Since in this version, replacement in the\n\"to\" library IS ALWAYS DONE, you should merge a concatenation FROM\nTHE BOTTOM UP.  A separate report is created for each library\nconverted.  Both the \"from\" and \"to\" libraries are shown at the top\nof each page of each report.  That eliminates confusion during a\nlarge conversion effort, about which libraries the report is referring\nto.\n\n\nSample conversion JCL follows:\n\n\n//TSTBCP2V JOB (TS,2322),'TECH.SUPPORT',CLASS=M,NOTIFY=TSTBSSG,\n//        MSGLEVEL=(1,1),MSGCLASS=T TYPRUN=HOLD\n//*\n//*****************************************************************//\n//* CONVERT CLISTS FROM FB - 80 TO VB -255 FORMAT AND VICE-VERSA  *//\n//*****************************************************************//\n//*\n//CNVTSTEP EXEC PGM=CVTCLIST,REGION=5900K\n//STEPLIB  DD DISP=SHR,DSN=TST.TSO.CMDLIB\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DISP=SHR,DSN=SYS1.SMGR.CLIST         <=== HAPPENS TO BE VB\n//SYSUT2 DD DISP=SHR,DSN=TSTBSSG.FB.SMGR.CLIST   <=== HAPPENS TO BE FB\n//\n\n      Some version of this program has been on the CBT Tape (file 187)\nfor some time.  There had been many bugs involved with it, especially\nin the process of converting in the VB to the FB direction, where the\nlong lines have to be folded.  I removed a bug that made the program\nrun away under some circumstances, and I tried to make it so that the\nconverted CLISTs were identical in FUNCTION, if not in exact form\n(byte for byte) as the original.  I think I'm pretty close for most\nCLISTs.  (See LOGIC notes further down.)\n\n      If VB CLISTs have long lines (longer than 72 data characters),\nthen the excess is folded to the next line, in the FB-converted image.\nWhen that FB-format library is re-converted to VB using this program,\nthe long lines are not reconstructed.  Therefore VB-to-FB-to-VB\ncomparison may show folding of lines, while FB-to-VB-to-FB compares\nshould be expected to correspond byte for byte, except for sequence\nnumbers.  Please report any exceptions to me.\n\n      My great hope is that this conversion program will help people\nconvert CLISTs easily, instead of by the laborious means usually\nused, whether IBM-in-origin or otherwise.  The main thing is that the\nnew CLISTs execute the same actions, exactly, as the old (no warranty\nexpress or implied here--use on your own responsibility, not mine or\nmy installation's.)\n\n      Good luck.\n\n                                     Sam Golob\n                                     P.O. Box 906\n                                     Tallman, NY 10982-0906\n\n                      email:  sbgolob@attglobal.net and/or\n                              sbgolob@aol.com\n --------------------------------------------------------------------\n\nLine splitting logic for VB to FB conversion:\n\n      The idea of the line splitting logic, when converting CLISTs\nfrom long-line (VB-255) format to short-line (FB-80) format was\nto allow all converted CLISTs to execute exactly as they executed\nbefore.  This was (hopefully) accomplished by NOT MAKING ANY\nDECISIONS REGARDING INDENTATION.\n\n      Line splitting logic is as follows:   Length of a line in VB\nformat is determined by looking at the RDW.  Trailing blanks are not\nexamined.  (Maybe this should change.)  Lines whose data is exactly\n72 bytes long, are not split.  Lines whose data is 73 bytes or more,\nare split at column 71.  A dash is placed in column 72.  That line\nis continued in column 1 of a newly-inserted output record.  71 is\nsubtracted from that line's \"length\" and the same logic is recursively\napplied if that line is long enough to be split further.\n\n      Again, the idea is not that the converted CLIST should look\npretty.  It should EXECUTE CORRECTLY.  When you are converting\nthousands of CLISTs in your shop, you don't want to cause any\ndisturbances in anyone's activities.  Users who want their CLISTs\nto look pretty, can go back and fix their own stuff on an individual\nbasis.\n\n      This program makes it possible to easily convert the CLIST\nformats of any shop.  Now, YOU ARE NOT \"FROZEN\" IN ANY ONE CLIST\nFORMAT.\n\n --------------------------------------------------------------------\n\n\n01/17/90 - Minor change added.  Sequence numbers now are 100-100\nSBG        instead of 10-10.  This helps to make the output CLISTs\n           to be considered NUMBERED under the ISPF/PDF editor.\n           A \"difference\" member is included to show the four line\n           code change.\n\n10/09/90 - Version 2.0 with member replacement and individual member\nSBG        reporting capability added.\n\n10/17/90 - Version 2.1 - New features. - Alias members that are changed\nSBG        to real members upon conversion are flagged and totaled.\n           ISPF stats for members that required line splits are changed\n           in the size to add the number of splits.  Dataset names of\n           the input and output libraries are reported on each page.\n           Page numbers and page ejects with titles have been added\n           to the reports.  Counts of line splits for each member,\n           are reported if they have been done (VB to FB conversion\n           only).  Totals of line splits, converted aliases are\n           reported.  (Line splits are reported for VB to FB only,\n           which is the case in which this makes sense.)\n\n11/27/90 - Version 2.2 - New features. - Flag records in VB CLISTs\nSBG        having numerics in data columns 81-88.  These are probably\n           leftover sequence numbers from a previous conversion from\n           FB to VB by hand.\n\n           Fixed bug caused when alias member reporting was introduced.\n           Members were wrongly dropped after alias members were\n           processed.  One line fix after the two MVC instructions\n           following the label GETMEM.\n\n         NI    11(R8),X'9F'             PRESERVE ALIAS IND IF THERE SBG\n         MVC   DIRLIST+11(63),11(R8)    MOVE USER DATA TO DIRLIST\n         MVC   NAME,0(R8)               PUT NAME IN OUTPUT DIRECT LIST\n add >>> NI    11(R8),X'1F'    KEEP ONLY USERDATA SIZE BITS   11/90 SBG\n         SR    R12,R12                  CLEAR REGISTER\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$DOCV22": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x90)\\x0f\\x01\\x00)\\x9f\\x111\\x00V\\x00/\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1990-10-17T00:00:00", "modifydate": "2000-10-25T11:31:00", "lines": 86, "newlines": 47, "modlines": 0, "user": "WSBG"}, "text": "//*  CHANGES FOR VERSION 2.2    -  SAM GOLOB  -  11/27/90.          *   DOC FILE\n//*                                                                 *   DOC FILE\n//*   Fix bug which dropped all succeeding members of a directory   *   DOC FILE\n//*   block after processing a member which had the alias flag      *   DOC FILE\n//*   set.  Fixed by a one-line fix after the two MVC instructions  *   DOC FILE\n//*   following the label GETMEM.    NI   11(R8),X'1F'              *   DOC FILE\n//*                                                                 *   DOC FILE\n//*   Add support for flagging CLIST execution errors caused by     *   DOC FILE\n//*   not removing sequence numbers from an FB CLIST converted to   *   DOC FILE\n//*   VB by hand.  If a record in a VB CLIST has all numerics       *   DOC FILE\n//*   in data columns 81-88, it is flagged.  The member level       *   DOC FILE\n//*   report states:    6 STRIP    to signify that 6 records may    *   DOC FILE\n//*   need to have leftover \"sequence numbers\" blanked out.         *   DOC FILE\n//*                                                                 *   DOC FILE\n//*   At this level, no support has yet been added to blank out     *   DOC FILE\n//*   the spurious sequence numbers automatically.                  *   DOC FILE\n//*                                                                 *   DOC FILE\n//*                                                                 *   DOC FILE\n//*  CHANGES FOR VERSION 2.1    -  SAM GOLOB  -  10/17/90.          *   DOC FILE\n//*                                                                 *   DOC FILE\n//*      SEE THE MAIN DOCUMENTATION MEMBER.  YOU'LL FIND OUT        *   DOC FILE\n//*      THE MOST INFORMATION BY RUNNING THE CONVERSION PROGRAM     *   DOC FILE\n//*      AGAINST JUNK COPIES OF CLIST LIBRARIES.  ALSO SEE COMMENTS *   DOC FILE\n//*      AND DOC IN THE SOURCE CODE ITSELF.                         *   DOC FILE\n//*                                                                 *   DOC FILE\n//*        Sam Golob                                                *   DOC FILE\n//*        P.O. Box 906                                             *   DOC FILE\n//*        Tallman, NY 10982-0906                                   *   DOC FILE\n//*                         email:  sbgolob@attglobal.net  and/or   *   DOC FILE\n//*                                 sbgolob@aol.com                 *   DOC FILE\n//*** VERSION 322 - OCTOBER 1990.                                   *   DOC FILE\n//*                                                                 *   DOC FILE\n//*        05  THIS PROGRAM MAKES IT POSSIBLE TO EASILY CONVERT     *   DOC FILE\n//*            THE CLIST FORMATS OF ANY SHOP.  NOW, YOU ARE NOT     *   DOC FILE\n//*            \"FROZEN\" IN ANY ONE CLIST FORMAT.                    *   DOC FILE\n//*                                                                 *   DOC FILE\n//*            DEFAULT EXECUTION OF THIS PROGRAM IS TO REPLACE      *   DOC FILE\n//*            EXISTING MEMBERS IN THE OUTPUT LIBRARY.  IF YOU      *   DOC FILE\n//*            DON'T WANT TO REPLACE EXISTING MEMBERS, EXECUTE      *   DOC FILE\n//*            THE PROGRAM WITH ANY PARM.  I USE PARM='NOREPLACE'.  *   DOC FILE\n//*                                                                 *   DOC FILE\n//*            UPGRADE OF THE CLIST CONVERT PROGRAM FROM FILE 187   *   DOC FILE\n//*            TO VERSION 2.1 FROM SAM GOLOB.  CODE WAS ADDED TO    *   DOC FILE\n//*            SUPPORT NONEMPTY LIBRARIES AS THE TARGET OF THE      *   DOC FILE\n//*            VB-FB OR FB-VB CONVERSION.  THE STOW WAS CHANGED     *   DOC FILE\n//*            TO BE A \"REPLACE\" TYPE INSTEAD OF AN \"ADD\" TYPE.     *   DOC FILE\n//*            THE SYSPRINT REPORT WAS MODIFIED TO SHOW THE MEMBER  *   DOC FILE\n//*            NAMES, AND WHETHER EACH ONE WAS ADDED OR REPLACED.   *   DOC FILE\n//*            FOR VARIABLE-TO-FIXED FORMAT CONVERSIONS, COUNTS     *   DOC FILE\n//*            OF THE NUMBER OF LINE SPLITS ARE PROVIDED.  THE      *   DOC FILE\n//*            SUMMARY REPORT SHOWS THE NUMBER OF ADDED ITEMS,      *   DOC FILE\n//*            THE NUMBER OF REPLACED ITEMS, THE TOTAL NUMBER OF    *   DOC FILE\n//*            CONVERTED ITEMS, AND THE TOTAL NUMBER OF ALL THE     *   DOC FILE\n//*            LINE SPLITS THAT WERE DONE DURING THIS RUN.          *   DOC FILE\n//*                                                                 *   DOC FILE\n//*            FOR VARIABLE-TO-FIXED FORMAT CONVERSIONS, COUNTS     *   DOC FILE\n//*            OF THE NUMBER OF LINE SPLITS ARE PROVIDED.  IF       *   DOC FILE\n//*            ISPF STATISTICS EXIST FOR A MEMBER THAT HAD LINE     *   DOC FILE\n//*            SPLITS, THE RECORD COUNT IS ADJUSTED UPWARD BY THE   *   DOC FILE\n//*            NUMBER OF SPLITS.  THE TRUE SIZE WILL BE SHOWN.      *   DOC FILE\n//*            FOR A MEMBER THAT HAD NO ISPF STATS IN THE DIREC-    *   DOC FILE\n//*            TORY, NO DIRECTORY CHANGES ARE DONE.                 *   DOC FILE\n//*                                                                 *   DOC FILE\n//*            YOU CAN NOW USE THIS PROGRAM TO MERGE SEVERAL CLIST  *   DOC FILE\n//*            LIBRARIES AT THE SAME TIME YOU ARE CONVERTING THEM.  *   DOC FILE\n//*                                                                 *   DOC FILE\n//*            CLIST RENUMBERING IS DONE AUTOMATICALLY AS PART OF   *   DOC FILE\n//*            THE CONVERSION.                                      *   DOC FILE\n//*                                                                 *   DOC FILE\n//*            THE INPUT AND OUTPUT DATASET NAMES ARE SHOWN IN      *   DOC FILE\n//*            THE REPORT NOW.  PAGE EJECTS AND PAGE COUNTS HAVE    *   DOC FILE\n//*            BEEN ADDED.                                          *   DOC FILE\n//*                                                                 *   DOC FILE\n//*            WHEN SPLITTING LONG LINES IN A VARIABLE-TO-FIXED     *   DOC FILE\n//*            FORMAT CONVERSION, THE PROGRAM SPLITS THEM AND       *   DOC FILE\n//*            FOLDS THEM WITH NO DECISIONS MADE.  THUS, THE        *   DOC FILE\n//*            CONVERTED CLISTS SHOULD EXECUTE EXACTLY THE SAME     *   DOC FILE\n//*            AS THE ORIGINAL CLISTS.  (THEY MAY LOOK FUNNY, BUT   *   DOC FILE\n//*            WHO CARES, AS LONG AS THEY \"RUN GOOD\".)              *   DOC FILE\n//*                                                                 *   DOC FILE\n//*            SEE THE OTHER DOC MEMBER FOR LINE-SPLITTING LOGIC.   *   DOC FILE\n//*                                                                 *   DOC FILE\n//*            THIS PROGRAM HAS BECOME A POWERFUL TOOL TO           *   DOC FILE\n//*            ACCOMPLISH MASS CLIST FORMAT CONVERSIONS IN          *   DOC FILE\n//*            EITHER DIRECTION.                                    *   DOC FILE\n//*                                                                 *   DOC FILE\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$DOC231": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x932\\x8f\\x01\\x00)\\x9f\\x111\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-11-24T00:00:00", "modifydate": "2000-10-25T11:31:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "WSBG"}, "text": "A bit of doc for Level V2R3M1.\n\n  Note first -  This program does not properly fold long lines\n                in REXX execs.\n\n  Oops, I didn't know that if you have a VB CLIST that wasn't\nblank in columns 1-8, or if it wasn't all numeric there, then\nthe CLIST processor will execute the data in columns 1-8.\nIf all blanks, or numerics, then the CLIST processor ignores\n1-8.  This is done on a line-by-line basis.  Now I know.\n\n  Version 2 R3M1, was created to properly convert VB CLISTs with\ngood data in columns 1-8.  It also reports on what it found,\nmember by member.  Lines containing good data in columns 1-8 are\ncounted, and short VB records of length less than 8 are counted.\n\n  Questions or inquiries, please call:\n\n     Sam Golob       P.O. Box 906\n                     Tallman, NY 10982-0906\n\n                     (845) 362-5843  fax\n            email:  sbgolob@attglobal.net and/or sbgolob@aol.com\n\n\n  Please report back if there's something else you want from this\nprogram.  It's people like you that push me to keep fixing it.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CVTCLIST": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1b\\x00\\x00\\x00\\x903\\x1f\\x00\\x932\\x8f\\x131\\x05\\\\\\x04\\xd4\\x00\\x9b\\xd3\\xc5\\xe5`\\xf2\\xf3\\xf1@@@'", "ispf": {"version": "01.27", "flags": 0, "createdate": "1990-11-27T00:00:00", "modifydate": "1993-11-24T13:31:00", "lines": 1372, "newlines": 1236, "modlines": 155, "user": "LEV-231"}, "text": "CNVT     TITLE 'CLIST LIBRARY CONVERSION PROGRAM: FB-VB, VB-FB'    *SBG\n****************************************************************** *SBG\n*                                                                * *SBG\n*     THIS IS AN ASSEMBLER PROGRAM TO CONVERT ENTIRE CLIST       * *SBG\n*     LIBRARIES FROM THE 80 BYTE - FIXED BLOCKED FORMAT, WITH    * *SBG\n*     SEQUENCE NUMBERS IN COLUMNS 73-80, TO THE OTHER CLIST      * *SBG\n*     FORMAT:  255-BYTE - VARIABLE BLOCKED RECORDS, WITH THE     * *SBG\n*     SEQUENCE NUMBERS IN COLUMNS 1-8 OF THE DATA PORTION OF     * *SBG\n*     EACH RECORD, AND VICE-VERSA.  THE PROGRAM GOES BOTH WAYS.  * *SBG\n*                                                                * *SBG\n*     MY HOPE IS THAT THIS PROGRAM WILL ELIMINATE THE GREAT      * *SBG\n*     LABOR AND UNCERTAINTY THAT IS INVOLVED IN ANY CLIST        * *SBG\n*     FORMAT CONVERSIONS, NO MATTER WHICH KIND THEY ARE.         * *SBG\n*                                                                * *SBG\n*     THE SYSUT1 DATASET IS INPUT, AND THE SYSUT2 DATASET IS     * *SBG\n*     OUTPUT.  THE PROGRAM EXAMINES THE DCB INFORMATION FROM     * *SBG\n*     EACH DDNAME, AND FIGURES OUT WHICH WAY THE CONVERSION      * *SBG\n*     SHOULD PROCEED.  ALL MEMBERS ARE CONVERTED IN ONE RUN      * *SBG\n*     OF THE PROGRAM.  RESULTS ARE REPORTED IN THE SYSPRINT DD.  * *SBG\n*                                                                * *SBG\n*     CVTCLIST CAN BE EXECUTED TWO WAYS:  EITHER IN REPLACE MODE * *SBG\n*     OR IN NOREPLACE MODE.  IN REPLACE MODE, ANY EXISING MEMBER * *SBG\n*     IN THE OUTPUT LIBRARY WILL BE REPLACED.  IN NOREPLACE      * *SBG\n*     MODE, AN EXISTING MEMBER WILL NOT BE REPLACED.  REPLACE    * *SBG\n*     MODE IS THE DEFAULT.  NOREPLACE MODE IS SET WHEN THE       * *SBG\n*     PROGRAM IS EXECUTED WITH ANY PARM IN THE EXEC STATEMENT.   * *SBG\n*                                                                * *SBG\n*     THE ORIGINAL MVS VERSION OF THIS PROGRAM WAS SUBMITTED     * *SBG\n*     TO THE CBT MVS MODS TAPE, FILE 187, BY BOB COLLINS OF THE  * *SBG\n*     FIRST NATIONAL BANK OF CHICAGO.  VERSION 2.1 INCORPORATES  * *SBG\n*     MANY FIXES OF BUGS, THE INTRODUCTION OF \"REPLACE\" AND      * *SBG\n*     \"NOREPLACE\" MODES, AND MANY REPORTING ENHANCEMENTS.        * *SBG\n*                                                                * *SBG\n*     THE VB TO FB FUNCTION OF THE PROGRAM (SYSUT1 DD DATASET    * *SBG\n*     IS OF THE VB TYPE AND THE SYSUT2 DD DATASET IS FB) HAD     * *SBG\n*     MANY BUGS, IN SPLITTING OF THE LONG RECORDS.  SOME NEWLY   * *SBG\n*     CREATED FB CLISTS DID NOT BEHAVE EXACTLY AS DID THE OLD    * *SBG\n*     VB VERSION FROM WHICH THEY WERE MADE.  ALSO, THERE WAS A   * *SBG\n*     RUNAWAY CONDITION WHICH COULD RESULT FROM HAVING LONG      * *SBG\n*     STRINGS IN THE VB FORMAT THAT HAD NO IMBEDDED BLANKS.      * *SBG\n*                                                                * *SBG\n*     I HAVE ATTEMPTED TO FIX THESE BUGS.  I CANNOT GUARANTEE    * *SBG\n*     THAT EVERY CLIST IN THE WORLD WILL CONVERT FLAWLESSLY      * *SBG\n*     UNDER THIS PROGRAM, BUT ITS OPERATION HAS BEEN IMPROVED    * *SBG\n*     BY ORDERS OF MAGNITUDE THROUGH THESE FIXES, HOPEFULLY.     * *SBG\n*                                                                * *SBG\n*     I TRIED TO AVOID MAKING ASSUMPTIONS ABOUT CONTINUATION     * *SBG\n*     CHARACTERS, IN ANY WAY.  THIS GOT THE ORIGINAL AUTHOR      * *SBG\n*     INTO HIS ORIGINAL TROUBLE.                                 * *SBG\n*                                                                * *SBG\n****************************************************************** *SBG\n         EJECT                                                10/90 SBG\n****************************************************************** *SBG\n*                                                                * *SBG\n*     THERE IS ONE PERVERSE CASE THAT I KNOW ABOUT.  IF A VB     * *SBG\n*     CLIST HAS RECORDS WITH TRAILING BLANKS AFTER THE LAST      * *SBG\n*     NON-BLANK CHARACTER, AND THE TRAILING BLANKS EXTEND PAST   * *SBG\n*     DATA COLUMN 72 (REALLY COLUMN 80), THEN THE PROGRAM WILL   * *SBG\n*     SPLIT THE RECORD AND ADD A BLANK LINE.  SOUNDS HARMLESS.   * *SBG\n*                                                                * *SBG\n*     THE BEST WAY TO TEST THIS PROGRAM IS TO CONVERT A LIBRARY  * *SBG\n*     FB-TO-VB-TO-FB, (OR VB-TO-FB-TO-VB), AND ENSURE THAT THE   * *SBG\n*     FINAL LIBRARY COMPARES IDENTICAL TO THE STARTING LIBRARY.  * *SBG\n*                                                                * *SBG\n*                       S.GOLOB - NEWSWEEK, INC.   10/07/89      * *SBG\n*                                 333 ROUTE 46 WEST              * *SBG\n*                                 MOUNTAIN LAKES, NJ 07046       * *SBG\n*                                 (201) 316-2328                 * *SBG\n*                                                                * *SBG\n****************************************************************** *SBG\n*                                                                * *SBG\n*     CHANGE LOG: 10/05/90 - CHANGED THE STOW TO REPLACE FORM    * *SBG\n*                  INSTEAD OF ADD FORM.  THIS ALLOWS CONVERSION  * *SBG\n*                  INTO NON-EMPTY TARGET CLIST LIBRARIES.        * *SBG\n*                  SYSPRINT REPORT HAS BEEN CHANGED ACCORDINGLY. * *SBG\n*                  ADDED VERSION NUMBER 2.0 TO AVOID CONFUSION   * *SBG\n*                  WITH EARLIER VERSIONS OF THIS PROGRAM.        * *SBG\n*                                  S.GOLOB                       * *SBG\n*                                                                * *SBG\n*                 10/15/90 - ADDED SECOND BASE.  VERSION 2.1.    * *SBG\n*                  ADDED CHECK FOR ALIAS IN THE \"FROM\" LIBRARY.  * *SBG\n*                  FLAG MEMBERS AS \"WAS ALIAS\" AND TOTAL ALL     * *SBG\n*                  ALIAS MEMBERS THAT WERE CONVERTED TO REAL     * *SBG\n*                  MEMBERS IN THE \"TO\" LIBRARY.  IF A CONVERTED  * *SBG\n*                  MEMBER HAD LINE SPLITS AND ISPF STATS, BUMP   * *SBG\n*                  THE CURRENT RECORD COUNT IN THE ISPF STATS    * *SBG\n*                  BY THE NUMBER OF LINE SPLITS.  ADD PAGE       * *SBG\n*                  COUNTS AND PAGE EJECTS.  GLOBAL &LINPPG IS    * *SBG\n*                  NUMBER OF LINES PER PAGE.  DEFAULT IS 60.     * *SBG\n*                  ADD DSNAMES TO HEADER OF ALL REPORTS.         * *SBG\n*                                  S.GOLOB                       * *SBG\n*                                                                * *SBG\n*                 10/19/90 - YOU CAN NOW CHOOSE TO DO A STOW     * *SBG\n*                  WITH NOREPLACE.  JUST EXECUTE CVTCLIST WITH   * *SBG\n*                  A PARM OF 'NOREPLACE'.  TO DO REPLACE BY      * *SBG\n*                  DEFAULT, USE NO PARM.  I ALSO CHANGED THE     * *SBG\n*                  SEQUENCE NUMBERING TO INCREMENTS BY 10000     * *SBG\n*                  TO BE MORE STANDARD IN ISPF SITUATIONS.       * *SBG\n*                  ANYONE WHOSE SHOP HAS CLISTS OF MORE THAN     * *SBG\n*                  9999 LINES, CAN EASILY MAKE THE SMALL         * *SBG\n*                  ADJUSTMENTS IN THIS PROGRAM.  OR RENUMBER     * *SBG\n*                  THE ONE OR TWO CONVERTED CLISTS THAT ARE BAD. * *SBG\n*                  BUG FIXED:  VB RECORDS WITH RDW OF LESS THAN  * *SBG\n*                  12 (I.E.) BLANKS IN SEQNO FIELD CAUSED        * *SBG\n*                  TROUBLE.  I JUST PUT OUT A BLANK LINE.        * *SBG\n*                                  S.GOLOB                       * *SBG\n*                                                                * *SBG\n*                 11/27/90 - FIXED BUG. LOSING MEMBERS AFTER     * *SBG\n*                  AN ALIAS MEMBER.  BELOW LABEL GETMEM, AFTER   * *SBG\n*                  THE TWO MVC INSTRUCTIONS.  ADDED:             * *SBG\n*                    NI    11(R8),X'1F'  ONLY KEEP USERDATA SIZE * *SBG\n*                                                                * *SBG\n*                 11/27/90 - WENT TO VERSION 2.2.  MARK MEMBERS  * *SBG\n*                  IN A VB-FB CONVERSION THAT HAVE ALL NUMERICS  * *SBG\n*                  IN COLUMNS 81-88.  THESE MIGHT HAVE ARISEN    * *SBG\n*                  FROM FAULTY CONVERSION FROM FB FORMAT THAT    * *SBG\n*                  HAD BEEN DONE BY HAND, WITH THE PROGRAMMER    * *SBG\n*                  FORGETTING TO DELETE THE OLD SEQUENCE NUMBERS.* *SBG\n*                  OCCURRENCES OF THIS ARE ONLY FLAGGED, NOT     * *SBG\n*                  REMOVED AS YET.  I HOPE TO ADD SUPPORT TO     * *SBG\n*                  STRIP THESE NUMERIC STRINGS OUT, VIA A PARM.  * *SBG\n*                                                                * *SBG\n*                 11/23/93 - FROM SAM GOLOB AND MARVIN WAPNITSKY * *SBG\n*                  V2R3M0.  COMPENSATED FOR THE FACT THAT IF     * *SBG\n*                  A VB CLIST IS NOT ALL BLANKS OR ALL NUMERIC   * *SBG\n*                  IN COLUMNS 1-8, THE DATA IS EXECUTED FROM     * *SBG\n*                  THERE.  SO IT MUST BE CONVERTED TO FB.  ALSO, * *SBG\n*                  SHORT VB RECORDS ARE EXECUTED AS PART OF THE  * *SBG\n*                  CLIST, AND THEY TOO MUST BE CONVERTED AND NOT * *SBG\n*                  IGNORED, AS WAS DONE PREVIOUSLY.              * *SBG\n*                                                                * *SBG\n*                 11/24/93 - S.GOLOB - V2R3M1.  REPORTED ALL THE * *SBG\n*                  STUFF THAT WAS PROGRAMMED IN V2R3M0.  RECORDS * *SBG\n*                  THAT HAD DATA IN VB COLUMNS 1-8, AND SHORT    * *SBG\n*                  VB RECORDS.  THESE COUNTS ARE REPORTED ON A   * *SBG\n*                  MEMBER LEVEL, ON A SECOND LINE, IF THEY EXIST.* *SBG\n*                                                                * *SBG\n****************************************************************** *SBG\n         EJECT      ,                                              *SBG\n*FUNCTION      CONVERT  CLISTS FROM 255 LRECL VB TO 80 LRECL FB\n*              OR VICE-VERSA\n*I/O           SYSUT1  INPUT CLIST\n*              SYSUT2  OUTPUT CLIST\n*              SYSPRINT LISTING\n*NOTE          VB CLISTS HAVE SEQUENCE NUMBERS IN POS 1-8\n*              FB IN 73-80\n*              RETURN CODE\n*              8 JOB TERMINATED BEFORE START OF COPY\n*              12 JOB TERMINATED AFTER START OF COPY\n*\n         EJECT                                                     *SBG\n         MACRO\n         SYMBR\n**                           EQUATES FOR SYMBOLIC REG USAGE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nRA       EQU   10\nRB       EQU   11\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         MEND\n         MACRO\n&NAME    GETPARM\n&NAME    L     15,4(13)  GET ADDRESS OF THE PREVIOUS SAVE AREA\nKFBR&SYSNDX L    14,4(15)   GET ADDRESS OF THE NEXTPREVIOUS SAVE AREA\n         LTR   14,14     ARE WE IN THE O/S SAVEAREA?\n         BZ    KFBN&SYSNDX  YES GO TEST PARM\n         LR    15,14   NO, MAKE 15 = 14 AND BE READY FOR NEXT TEST\n         B     KFBR&SYSNDX   BRANCH BACK TO THE LOOP\nKFBN&SYSNDX L     14,24(15)  WE ARE NOW IN O/S. GOODY GOODY\n         L     14,0(14)   LOAD IN THE ADDRESS OF THE ADDRESS\n         SR    1,1\n         SR    15,15\n         LH    15,0(14)   PUT COUNT OF PARM INTO R15\n         LTR   15,15   IS COUNT OF PARM= 0?\n         BZ    *+8    YES, DO NOT PUT ADDRESS OF PARM INTO R1\n         LA    1,2(14)\n*   AT THIS POINT THE COUNT OF THE PARM FIELD IS IN REGISTER 15.\n*   IF REGISTER 15 IS = TO 0, REGISTER 1 WILL ALSO BE SET TO ZERO\n*   IF THERE IS A POSITIVE VALUE IN REGISTER 15, THERE WILL BE A\n*   VALID ADDRESS IN REGISTER 1, WHICH WILL BE A ADDRESS OF THE ACTUAL\n*   PARM FIELD DATA.\n         MEND\n         EJECT\n         MACRO\n&NAME    SAVEX &AREA,&BASE,&VERSION,&INIT,&TESTRAN\n.* DPHQ SYSTEM/360 - OPERATING SYSTEM SSS\n.* V4M0 DECEMBER 2, 1966 F. W. VOSS\n         LCLA  &A1\n         LCLC  &TEST\n&TEST    SETC  '&AREA'(1,5)\n         AIF   ('&AREA' NE '').GD1\n         MNOTE 12,'SAVE AREA NAME MISSING - NO GEN'\n         MEXIT\n.GD1     ANOP\n&A1      SETA  &BASE\n         USING *,15\n&NAME    B     22(0,15)            BRANCH AROUND ID\n         DC    FL1'18'\n         AIF   ('&NAME' NE '').GD2\n         DC    CL9'&SYSECT'        IDENTIFIER\n         AGO   .CT1\n.GD2     DC    CL9'&NAME'          IDENTIFIER\n.CT1     DC    CL8'&VERSION'       VERSION\n         STM   14,12,12(13)        SAVE REGISTERS\n         ST    13,&AREA+4               CHAIN FORWARD\n         CNOP  0,4\n         AIF   (&A1 GT 2).MV2\n         AIF   (&A1 EQ 2).GD3\n         AGO   .CT5\n.MV2     MNOTE 'INVALID BASE REQUEST - USING 2'\n         AGO   .GD3\n.CT5     ANOP\n         BAL   13,&AREA+72    SETUP SAVE AREA POINTER AND BASE\n         DROP  15\n         USING *,13                     ESTABLISH ADDRESSABILITY\n&AREA    DC    18F'0'              SAVE AREA\n         L     15,&AREA+4\n         ST    13,8(0,15)               CHAIN BACK\n         AGO   .CT7\n.GD3     ANOP\n         BAL   13,&AREA+76    SETUP SAVE AREA POINTER AND BASE\n         DROP  15\n         USING *,13,12                  ESTABLISH ADDRESSABILITY\n&AREA    DC    18F'0'              SAVE AREA\n         DC    AL4(&AREA+4096)\n         L     15,&AREA+4\n         ST    13,8(0,15)               CHAIN BACK\n         L     12,&AREA+72              ESTABLISH 2ND BASE\n.CT7     ANOP\n         AIF   ('&INIT' EQ '').CT9\n.CT9     ANOP\n         AIF   ('&TESTRAN' EQ '').CT6\n         AIF   ('&TESTRAN' EQ 'TEST').CT8\n         MNOTE 'INVALID TESTRAN EDIT REQUEST'\n         AGO   .CT6\n.CT8     ANOP\n*                            TESTRAN SPIE MACRO\n         SPIE  &TEST.EXT,((1,15))\n         B     &TEST.ABE     BRANCH AROUND TESTRAN DUMP\n         SPACE 2\n&TEST.EXT BALR 15,0          ESTABLISH ADDRESSABILITY FOR TESTRAN ABEND\n         DROP  13\n         USING *,15\n         MVC   &TEST.PSW,4(1) MOVE OLD PSW FROM PIE\n*                            TESTRAN ABEND MACRO\n&TEST.ERR ABEND 4444,DUMP\n&TEST.PSW DC   XL8'0'        OLD PROGRAM PSW ON PROGRAM INTERRUPT\n         DROP  15\n         USING &AREA,13      REESTABLISH CSECT ADDRESSABILITY\n&TEST.ABE EQU  *\n.CT6     ANOP\n         SPACE 2\n         MEND\n         EJECT                                                10/90 SBG\n*FUNCTION      CONVERT  CLISTS FROM 255 LRECL VB TO 80 LRECL FB\n*              OR VICE-VERSA\n*I/O           SYSUT1  INPUT CLIST\n*              SYSUT2  OUTPUT CLIST\n*              SYSPRINT LISTING\n*NOTE          VB CLISTS HAVE SEQUENCE NUMBERS IN POS 1-8\n*              FB IN 73-80\n*              RETURN CODE\n*              8 JOB TERMINATED BEFORE START OF COPY\n*              12 JOB TERMINATED AFTER START OF COPY\n*\n*        R13   FIRST BASE REGISTER\n*        R11   RETURN\n*        R10   DCB TEMPLATE\n*        R9    SECOND BASE REGISTER\n*        R7    OUTPUT POINTER\n*        R6    INPUT POINTER\n*        R5    LENGTH CODE\n*        R4    INPUT START OF BLOCK\n*        R3    OUTPUT START OF BLOCK\n************************************************************* 10/90 SBG\n         SPACE 6                                              10/90 SBG\n* ---------------------------------------------------------*  10/90 SBG\n         SPACE 3                                              10/90 SBG\n* ---->>>   SET THIS GLOBAL TO ADJUST PRINT LINES PER PAGE.   10/90 SBG\n         SPACE 2                                              10/90 SBG\n         GBLC  &LINPPG                                        10/90 SBG\n         LCLC  &PLVEL                                         11/93 SBG\n&LINPPG  SETC  '60'               DEFAULT LINES PER PAGE      10/90 SBG\n&PLVEL   SETC  'V2R3M1'           PROGRAM LEVEL               11/93 SBG\n         SPACE 3                                              10/90 SBG\n* ---------------------------------------------------------*  10/90 SBG\n         EJECT                                                10/90 SBG\n         SYMBR\nTEST20   EQU   X'20'\n         EJECT\nCVTCLIST CSECT\n*    SET UP MORE THAN ONE BASE REGISTER.  R13 AND R9.         10/90 SBG\n*        SAVEX SAVEAREA,1,VERS-2.1     ELIMINATE THE MACRO    10/90 SBG\n         USING *,R15                   BASE R15 TO START      10/90 SBG\n         B     CVTSTART                BR OVER LITERALS       10/90 SBG\n         DC    CL9'CVTCLIST'                                  10/90 SBG\n         DC    CL14'LEVEL &PLVEL '                            10/90 SBG\n         DC    CL9'&SYSDATE'                                  10/90 SBG\n         DC    CL8'&SYSTIME'                                  10/90 SBG\nCVTSTART STM   R14,R12,12(R13)         SAVE REGISTERS         10/90 SBG\n         ST    R13,SAVEAREA+4          CHAIN FORWARD          10/90 SBG\n         CNOP  0,4                                            10/90 SBG\n         LA    R9,SAVEAREA+1           START SECOND BASE      10/90 SBG\n         LA    R9,4095(,R9)            FINISH SECOND BASE     10/90 SBG\n         BAL   R13,SAVEAREA+72         SAVEAREA PTR & 1ST BASE10/90 SBG\n         DROP  R15                                            10/90 SBG\n         USING *,R13,R9                                       10/90 SBG\nSAVEAREA DC    18F'0'                  SAVE AREA              10/90 SBG\n         L     R15,SAVEAREA+4                                 10/90 SBG\n         ST    R13,8(0,R15)            CHAIN BACK             10/90 SBG\n         SPACE 3\n         STM   R14,R1,SAVEMREG    SAVE REGS USED BY GETPARM   10/90 SBG\n         GETPARM                                              10/90 SBG\n         LTR   R15,R15            TEST IF WE HAVE A PARM      10/90 SBG\n         BZ    CVTNOPRM           NO PARM - STOW WITH REPLACE 10/90 SBG\n         OI    FLAGG,STOWADD      YES PARM - STOW WITH ADD    10/90 SBG\n         MVC   DSNLODEF(2),=C'NO'   SHOW THIS RUN IS NORPLACE 10/90 SBG\nCVTNOPRM LM    R14,R1,SAVEMREG    RESTORE THE REGS BACK       10/90 SBG\n         OPEN  (CLISTIN,(INPUT))\n         SPACE 1\n         OPEN  (CLISTOUT,(OUTPUT))\n         SPACE 1\n         USING IHADCB,R10\n*    GET DATASET NAMES TO PUT INTO THE REPORT HEADINGS.       10/90 SBG\nREADJIN  RDJFCB CLISTIN                 MOVE JFCB TO AREA     10/90 SBG\n         LTR   R15,R15                  DDNAME SHOULD BE THERE10/90 SBG\n         BNZ   INERROR                  IF NOT, FLAG          10/90 SBG\n         ST    R7,SAVE7REG              SAVE R7               10/90 SBG\n         LA    R7,JFCBDATA              POINT TO JFCB AREA    10/90 SBG\n         USING JFCBLK,R7                MAP THE AREA          10/90 SBG\n         MVC   DSNAMIN(44),JFCBDSNM     MOVE THE IN DSNAME    10/90 SBG\n         DROP  R7                                             10/90 SBG\n         L     R7,SAVE7REG              RESTORE R7            10/90 SBG\nREADJOUT RDJFCB CLISTOUT                SAME FOR OUTPUT FILE  10/90 SBG\n         LTR   R15,R15                                        10/90 SBG\n         BNZ   OUTERROR                                       10/90 SBG\n         ST    R7,SAVE7REG                                    10/90 SBG\n         LA    R7,JFCBDATA                                    10/90 SBG\n         USING JFCBLK,R7                                      10/90 SBG\n         MVC   DSNAMOUT(44),JFCBDSNM                          10/90 SBG\n         DROP  R7                                             10/90 SBG\n         L     R7,SAVE7REG                                    10/90 SBG\nINITGOON BAL   R11,OPENPRNT             OPEN PRINT FILE.      10/90 SBG\n         BAL   R11,WRITETIT             WRITE INITIAL TITLE   10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK             WRITE BLANK LINES     10/90 SBG\n         LA    R10,CLISTIN              USE DCB NAMES FOR INPUT DCB\n         BAL   R11,TESTVORF\n         BAL   R11,GETMAIN              GET CORE FOR INPUT BLOCK\n         LR    R4,R1                    SAVE INPUT BLOCK ADDRESS\n         LA    R10,CLISTOUT             USE DCB NAMESFOR  OUTPUT DCB\n         BAL   R11,TESTVORF\n         BAL   R11,GETMAIN              GETMAIN FOR OUTPUT BLOCK\n         LR    R3,R1                    SAVE OUTPUT BLOCK ADDRESS\n         TM    SWITCH,X'80'             IF 1 FILE IS F AND 1 V\n         BO    SAVEOUT                    CONTINUE\n         MVC   ERRORMSG,MSG3\n         MVC   RC,=H'8'\n         B     WRITERR\n         SPACE 2\nTESTVORF EQU   *\n         TM    DCBRECFM,X'C0'           CHECK FOR V OR F\n         BM    CONTVF                   IF NOT V OR F ERROR\n         MVC   ERRORMSG,MSG1\n         MVC   RC,=H'08'\n         B     WRITERR\nCONTVF   TM    DCBRECFM,X'80'           IF V\n         BZ    EXITVORF                   EXIT\n         XI    SWITCH,X'80'             FIRST F TURNS ON-SECOND OFF\n         CLC   DCBLRECL,=H'80'          IF F AND LRECL NOT = 80\n         BE    EXITVORF                   THEN ERROR\n         MVC   ERRORMSG,MSG2\n         MVC   RC,=H'8'\n         B     WRITERR\nEXITVORF BR    R11                      RETURN\n         SPACE 2\nGETMAIN  EQU   *\n         LH    R0,DCBBLKSI              GET CORE F0R PROCESSING AN\n         GETMAIN R,LV=(0)                 INPUT BL0CK\n         SPACE 1\n         BR    R11\n         SPACE 2\nSAVEOUT  EQU   *                       SAVE DATA FOR MAINLINE\n         MVC   OUTBLKSI,DCBBLKSI\n         LR    R7,R3                   INITIALIZE OUTPUT POINTER\n         TM    DCBRECFM,X'80'          IF OUTPUT IS V\n         BZ    SAVEIN                    SAVE INPUT END OF BLOCK\n         OI    SWITCH,TEST20           ELSE SET INPUT SWITCH TO V\n         LH    R12,DCBBLKSI\n         LA    R12,0(R12,R3)           SAVE OUTPUT END OF FIXED BLOCK\n         ST    R12,ENDF\n         LA    R10,CLISTIN\n         B     INITREAD\n         SPACE 1\nSAVEIN   LA    R10,CLISTIN\n         LH    R12,DCBBLKSI            SAVE INPUT END OF FIXED BLOCK\n         LA    R12,0(R12,R4)\n         ST    R12,ENDF\n         LH    R12,OUTBLKSI            SAVE MAXIMUM END OF OUTPUT\n         LA    R12,0(R12,R3)             VARIABLE BLOCK\n         ST    R12,ENDV\n         LA    R7,4(R7)                POINT PAST BLK COUNT FOR V\n         SPACE 2\nINITREAD EQU   *\n         CLOSE (CLISTIN)\n         MVI   DCBRECFM,X'C0'          SET INPUT RECFM TO U\n         MVI   CLISTOUT+36,X'C0'       SET OUTPUT RECFM TO U\n         OPEN  (CLISTIN,(INPUT))\nREADDIR  EQU   *\n         OI    SWITCH,X'40'             SET DIRECTORY READ ON\n         READ  DECB1,SF,CLISTIN,DIRIN,256\n         CHECK DECB1\n         NOTE CLISTIN\n         XI    DIRSW,X'FF'             SINCE SAVETTR POINTS TO\n         CLI   DIRSW,X'00'             BEGINNING OF DIRECTORY, READ\n         BE    READDIR                 TWICE AFTER FIRST READ.\n         SPACE 1\n         ST    R1,SAVETTR              SAVE POINTER TO DIRECTORY\n         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG\n         LH    R7,DIRIN\n         STH   R7,DIRLEFT               SAVE DIRECTORY LENGTH\n         LA    R7,DIRIN+2\n         ST    R7,NEXTMEM\n         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG\n         SPACE 2\nGETMEM   EQU   *                        GET BLOCK OF DATA\n         ZAP   SEQCOUNT,=P'0'           ZERO OUT SEQUENCE COUNT FOR MEM\n         L     R8,NEXTMEM               LOAD ADDRESS OF MEMBER NAME\n         CLC   HIVALUE,0(R8)            IF MEMBER NAM = HIVALUES\n         BE    EOJ           GO TO END OF JOB WITHOUT TITLE   10/90 SBG\n         NI    11(R8),X'9F'             PRESERVE ALIAS IND IF THERE SBG\n         MVC   DIRLIST+11(63),11(R8)    MOVE USER DATA TO DIRLIST\n         MVC   NAME,0(R8)               PUT NAME IN OUTPUT DIRECT LIST\n         NI    11(R8),X'1F'    KEEP ONLY USERDATA SIZE BITS   11/90 SBG\n         SR    R12,R12                  CLEAR REGISTER\n         IC    R12,11(R8)               LOAD # OF HALFWORDS OF USERDATA\n         LA    R12,12(R12,R12)          DOUBLE AND ADD 12\n         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG\n         LA    R7,0(R12,R8)             COMPUTENEXT MEMBER DIR ADDA\n         ST    R7,NEXTMEM               SAVE ADDRESS OF NEXT MEMBER\n         LH    R7,DIRLEFT               COMPUTE BYTES LEFT IN\n         SR    R7,R12                     DIRECTORY\n         STH   R7,DIRLEFT\n         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG\n         NI    11(R8),X'00'             CLEAR C  OF TTRC\n         LA    R8,8(R8)                 LOAD ADDRESS OF TTR\n         NI    SWITCH,X'BF'             TURN DIRECTORY READ SW  OFF\n         POINT CLISTIN,(8)\n         SPACE 1\n         LH    R8,DCBBLKSI              LOAD INPUT BLKSIZE\nREADBLK  READ  DECB2,SF,CLISTIN,(4),(8)\n         SPACE 1\n         CHECK DECB2\n         SPACE 1\n         TM    SWITCH,TEST20           IF INPUT IS F\n         BZ    FTOV                      CONVERT FIXED TO VARIABLE\n         SPACE 2\nVTOF     EQU   *\n         MVI   NMADFBVB,C'F'           SHOW MEMBER CONV TO FB 10/90 SBG\n         MVI   NMREFBVB,C'F'           SHOW MEMBER CONV TO FB 10/90 SBG\n         MVC   VARTITLE,VARTOFIX       SHOW CONV IS VAR TO FIX10/90 SBG\n         LH    R12,0(R4)               ADD BLKSIZE AND STARTING\n         AR    R12,R4                    ADDRESS\n         ST    R12,ENDV                  GIVING  ENDING ADDRESS\n         LR    R6,R4                   LOAD POINTER TO V INPUT\n         LA    R6,4(R6)                POINT TO FIRST LRECL\n         SPACE\nGETREC   MVC   HALFWORD,0(R6)\n         LH    R5,HALFWORD\n         CH    R5,=H'255'              IF LRECL IS GREATER THAN 256\n         BL    TESTRDW                   ERROR                11/93 SBG\n         MVC   ERRORMSG,MSG4             MESSAGE\n         MVC   RC,=H'12'                 RETURN CODE\n         B     WRITERR\nTESTRDW  CH    R5,=H'4'                IS RECORD VALID AT ALL 11/93 SBG\n         BNH   OUTPROC                 NO DATA AT ALL.        11/93 SBG\nPASTRDW  CH    R5,=H'12'               IS LRECL MORE THAN 8?  10/90 SBG\n         BH    TESTRDWG      OK-THEN TEST THE FULL 8 BYTES    11/93 SBG\n         SH    R5,=H'4'      NO-SUBTRACT ONLY THE RDW FROM R5 11/93 SBG\n         LA    R6,4(,R6)        POINT IN RECD PAST THE RDW    11/93 SBG\n         AP    DAT18CNT,=P'1'   COUNT A LINE WITH 1-8 DATA    11/93 SBG\n         AP    DAT18TOT,=P'1'   COUNT A LINE WITH 1-8 DATA    11/93 SBG\n         AP    SHORTCNT,=P'1'   COUNT A SHORT LINE            11/93 SBG\n         AP    SHORTTOT,=P'1'   COUNT A SHORT LINE            11/93 SBG\n         BCTR  R5,0             SUBTRACT FOR EXECUTE          11/93 SBG\n         B     SKIPLOP8         PUT OUT LINE - NO FUNNY BSNS  11/93 SBG\nOUTPROC  MVC   REC80(80),REC80-1       CLEAR OUTPUT TO BLANKS 10/90 SBG\n         BAL   R11,WRITEF              WRITE THE BLANK RECORD 10/90 SBG\n         LA    R6,0(R5,R6)   INCREMENT RECD PTR BY TRUE LRECL 10/90 SBG\n         B     NOTSPLIT                KEEP ON TRUCKIN'       10/90 SBG\nTESTRDWG MVC   WORKSTRP(8),4(R6)    MOVE 1ST 8 BYTES,SEQ AREA 11/93 SBG\n         CLC   WORKSTRP(8),=X'4040404040404040'  ALL BLANKS?  11/93 SBG\n         BE    PASTRDWG         YES, THROW THEM AWAY          11/93 SBG\n         ST    R2,SAVE2REG      SAVE R2 OVER TRT              11/93 SBG\n         TRT   WORKSTRP(8),NUMERICS              ALL NUMBERS? 11/93 MW\n         L     R2,SAVE2REG      RESTORE R2 AFTER TRT          11/93 SBG\n         BZ    PASTRDWG         YES, THROW THEM AWAY          11/93 MW\n         SH    R5,=H'4'         NO, JUST SUBTRACT THE RDW,    11/93 SBG\n         LA    R6,4(,R6)        AND POINT DATA PAST THE RDW.  11/93 SBG\n         AP    DAT18CNT,=P'1'   COUNT A LINE WITH 1-8 DATA    11/93 SBG\n         AP    DAT18TOT,=P'1'   COUNT A LINE WITH 1-8 DATA    11/93 SBG\n         B     TSTSTRIP         ASSUME NEED STRIPPING 73-80   11/93 SBG\n*                               BECAUSE 1-8 WERE NOT SHIFTED. 11/93 SBG\nPASTRDWG SH    R5,=H'12'        BYPASS THE SEQ NUMBERS        11/93 SBG\n         LA    R6,12(,R6)       POINT PAST SEQ NUMBER DATA    11/93 SBG\nTSTSTRIP DS    0H            CUT IN WHERE YOU HAVE A NEW RECD 11/90 SBG\n         CH    R5,=H'80'               IS LENGTH AT LEAST 80? 11/90 SBG\n         BL    LOOPREC                 NO. DON'T STRIP.       11/90 SBG\n         MVC   WORKSTRP(8),72(R6)      MOVE 81-88 TO WKAREA   11/90 SBG\n*                       THIS IS 73-80 IF MISSED PASTRDWG      11/93 SBG\n         ST    R2,SAVE2REG      SAVE R2 OVER TRT              11/93 SBG\nTESTWRK1 TRT   WORKSTRP(8),NUMERICS              ALL NUMBERS? 11/93 SBG\n         L     R2,SAVE2REG      RESTORE R2 AFTER TRT          11/93 SBG\n         BNZ   LOOPREC                 NO.  GET OUT.          11/93 SBG\nDOSTRIP  DS    0H                      YES, COUNT TOTALS.     11/90 SBG\n*        MVC   72(8,R6),BLANKLIN+1                            11/90 SBG\n         AP    STRIPCNT,=P'1'          INCREMENT COUNTER      11/90 SBG\n         AP    STRIPTOT,=P'1'          INCREMENT COUNTER      11/90 SBG\n         SPACE 1\nLOOPREC  STH   R5,LRECL                SAVE LRECL\n         LA    R12,0(R5,R6)            POINT TO LAST BYTE OF REC   *SBG\n         ST    R12,SAVEWREG            SAVE END OF RECORD          *SBG\n         ST    R5,SAVECREG             SAVE BYTES TO BE MOVED.     *SBG\n         ST    R4,SAVE4REG             SAVE REG 4 CONTENTS. WKREG. *SBG\n         LA    R4,0                    COUNTER FOR MOVE            *SBG\nBACKLOOP CR    R4,R5                   LIMITED SEARCH FOR TRL BLNKS*SBG\n         BNL   FOUNDTE                 YES. NO NON-BLANKS IN RECD  *SBG\n         CH    R4,=H'70'               LIMITED SEARCH FOR TRL BLNKS*SBG\n         BH    FOUNDTE                 YES. NO NON-BLANKS IN RECD  *SBG\n         CLI   0(R12),C' '             IS LAST BYTE A BLANK?       *SBG\n         BNE   FOUNDTE                 NO. FOUND TRUE END FOR CLIST*SBG\n         LA    R4,1(,R4)               BUMP COUNTER                *SBG\n         BCTR  R12,0                   GO BACK ONE CHARACTER  10/90 SBG\n         B     BACKLOOP                KEEP TRYING                 *SBG\nFOUNDTE  SR    R5,R4                                               *SBG\n         L     R4,SAVE4REG             RESTORE REGISTER 4.         *SBG\n         CH    R5,=H'72'         IF LRECL 71 NOT COUNTING TR BLNKS *SBG\n         BH    SPLITREC                THEN SPLIT RECORD           *SBG\n         BE    EXACT72           EXACTLY 72 CHARS-SPECIAL TREATMENT*SBG\n         L     R5,SAVECREG             RESTORE R5, AND THEN        *SBG\n         BCTR  R5,0                    MAKE LENGTH CODE ADJUSTMENT\nSKIPLOOP L     R12,SAVEWREG            RESTORE REGISTER 12.        *SBG\nSKIPLOP8 MVC   REC80,REC80-1           CLEAR RECORD AREA           *SBG\n         EX    R5,MOVE80               MOVE RECORD                 *SBG\n         BAL   R11,WRITEF\n         LA    R5,1(R5)\n         LA    R6,0(R5,R6)             INCREMENT CURRET POINTER BY LENG\nNOTSPLIT C     R6,ENDV         *SBG    IF ADDRESS POINTER IS LESS THAN\n         BL    GETREC                    END ADDRESS GO TO GETREC\n         B     READBLK                 ELSE READ A BLOCK\n         SPACE 2\nEXACT72  LH    R5,=H'71'               DON'T DROP LAST CHARACTER   *SBG\n         LA    R12,0(R5,R6)       ADDRESS OF END OF REC TO BE MOVE *SBG\n         MVC   REC80,REC80-1           CLEAR OUTPUT RECORD         *SBG\n         B     MOVEMOUT                NO CONTINUATION CHARACTER   *SBG\nSPLITREC EQU   *\n         LH    R5,=H'70'                                           *SBG\nSPLTLOOP LA    R12,0(R5,R6)       ADDRESS OF END OF REC TO BE MOVE\n         MVC   REC80,REC80-1           CLEAR OUTPUT RECORD\n         MVI   REC80+71,C'-'           MOVE IN CONTUATION CHARACTER SBG\n         AP    MEMSPLTS,=P'1'     INCREMENT COUNT OF SPLITS   10/90 SBG\n         AP    TOTSPLTS,=P'1'     INCREMENT COUNT OF SPLITS   10/90 SBG\nMOVEMOUT EX    R5,MOVE80               MOVE TO WRITE AREA          *SBG\n         BAL   R11,WRITEF\n         LA    R12,1(R5)               ADD 1 REC LENGTH OF RECORD  *SBG\n         LH    R5,LRECL                  WRITTEN\n         SR    R5,R12                  SUBTRACT FROM LRECL\n         LA    R6,0(R12,R6)            INCREMENT IPOINTER BY LENGTH\n* IF LRECL IS EXACTLY 72, WE CAN COME HERE. NOW WE TEST FOR THAT.  *SBG\n         LTR   R5,R5          ARE WE ACTUALLY AT THE END OF A RECD?*SBG\n         BZ    NOTSPLIT       YES. DON'T ACT TO SPLIT THE RECORD.  *SBG\n         B     LOOPREC                 FINISH RECORD\n         SPACE 1\nWRITEF   EQU   *\n         AP    SEQCOUNT,=P'10000'      PLACE SEQUENCE NUMBER IN\n         UNPK  REC80+72(8),SEQCOUNT      POSITIONS 73-80\n         MVI   REC80+79,C'0'           MAKE LAST POS CHAR ZERO\n         MVI   REC80+78,C'0'           MAKE NEXT TO LAST CHAR ZERO\n         MVI   REC80+77,C'0'           SAME FOR THE\n         MVI   REC80+76,C'0'           TWO BEFORE\n         MVC   0(80,R7),REC80          MOVE RECORD TO OUTPUT\n         LA    R7,80(R7)               INCREMENT POINTER\n         C     R7,ENDF                 IF POINTER IS LESS THAN ENDOFBLK\n         BCR   4,R11                     RETURN\n         SR    R7,R3                   LOAD BLKSIZE\n         B     WRITEOUT                ELSE WRITEOUT BLOCK\n         SPACE 2\nFTOV     EQU   *\n         MVI   NMADFBVB,C'V'           SHOW MEMBER CONV TO VB 10/90 SBG\n         MVI   NMREFBVB,C'V'           SHOW MEMBER CONV TO VB 10/90 SBG\n         MVC   VARTITLE,FIXTOVAR       SHOW CONV IS FIX TO VAR10/90 SBG\n         LA    R12,0(R8,R4)            FIND END OF BLOCK ADRESS\n         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG\n         L     R7,DECB2+16             LOAD IOB ADDRESS\n         LH    R7,14(R7)               LOAD LENGTH BLOCK IS SHORT\n         SR    R12,R7                  SUBTRACT FROM END OF FULL BLK\n         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG\n         ST    R12,ENDF                  GIVING REAL END OF BLOCK\n         LR    R6,R4                   POINT TO START OF INPUT BLOCK\nNEXTFREC EQU   *\n         LA    R5,71(R6)               POINT TO LAST CHAR          *SBG\nLOOPFV   EQU   *\n         CLI   0(R5),C' '              FIND LAST NON BLANK CHARACTER\n         BNE   FOUNDATA\n         BCTR  R5,0\n         B     LOOPFV\n         SPACE\nFOUNDATA EQU   *\n         SR    R5,R6                   SUBTRACT START FROM END GIV LENG\n         CH    R5,=H'1'\n         BH    WRITEV              IF LENGTH CODE IS LESS THAN 1   *SBG\n         LA    R5,1                      USE 1\nWRITEV   EQU   *            DO NOT PLAY GAMES WITH CONTIN CHARACTRS*SBG\n         LA    R12,13(R5,R7)           LOAD ADDRESS END OF OUTPUT REC\n         C     R12,ENDV                IF ENDOFREC IS LESS THAN ENDOFBL\n         BNH   EXMOVEV                   MOVE DATA\n         SR    R7,R3                   ELSE FIND BLK LENGTH\n         STH   R7,0(R3)                  STORE IN OUTPUT BLOCK\n         BAL   R11,WRITEOUT              WRITE BLOCK\n         LA    R7,4(R7)                  POINT PAST OUTPUT BLK COUNT\n         SPACE\nEXMOVEV  EQU   *\n         EX    R5,MOVEV                MOVE DATA TO OUTPUT BLOCK\n         AP    SEQCOUNT,=P'10000'      PUT SEQUENCE NUMBER\n         UNPK  4(8,R7),SEQCOUNT          IN OUTPUT DATA SET\n         MVI   11(R7),C'0'             MAKE LAST DIGIT CHARACTER 0\n         MVI   10(R7),C'0'             MAKE NEXT TO LAST DIGIT CHAR 0\n         MVI   9(R7),C'0'              SAME FOR THE\n         MVI   8(R7),C'0'              TSO BEFORE\n         LA    R5,13(R5)               ADD 13 TO LEN CNT GIVING LRECL\n         STH   R5,HALFWORD\n         MVC   0(4,R7),HALFWORD        STORE LRECL IN OUTPUT BLOCK\n         LA    R7,0(R5,R7)             INCREMENT OUTPUT POINTER\n         LA    R6,80(R6)               INCREMENT  INPUT POINTER\n         C     R6,ENDF                 IF LESS THAN END OF BLOCK\n         BL    NEXTFREC                  GET NEXT RECORD\n         B     READBLK                 ELSE GET NEXT BLOCK\n         SPACE 2\nWRITEOUT EQU   *\n         WRITE DECBA,SF,CLISTOUT,(R3),(R7)    WRITE OUT BLOCK\n         SPACE\n         CHECK DECBA\n         SPACE\n         LR    R7,R3                   SET POINTER TO START OF BLOCK\n         BR    R11\nSTOWOUT  EQU   *\n         TM    SWITCH,TEST20           IF V TO F\n         BO    STOWVTOF                  CHECK FOR SHORT BLOCK\n         SR    R7,R3                   FIND BLOCK LENGTH\n         STH   R7,0(R3)                STORE IN BDW\n         MVC   2(2,R3),=H'0'           ZERO OUT REST OF BDW\n         B     SHORTBLK                WRITE OUT BLOCK\nSTOWVTOF CR    R3,R7                   IF OUTPUT BLOCK IS EMPTY\n         BE    *+10                      SKIP WRITING SHORT BLOCK\n         SR    R7,R3                   LOAD BLOCK LENGTH\nSHORTBLK BAL   R11,WRITEOUT            WRITE SHORT BLOCK\n         TM    SWITCH,X'40'            IF DIRECTORY READ\n         BO    EOJ                       GO TO  EOJ\nBUMPSTTS DS    0H         BUMP ISPF STATS IF WE SPLIT LINES.  10/90 SBG\n         ST    R8,SAVE8REG             SAVE R8 FOR WORK       10/90 SBG\n         LA    R8,DIRLIST              LOAD R8 FOR MAPPING    10/90 SBG\n         USING DIRSECT,R8              MAP DIRECTORY WKAREA   10/90 SBG\n* DO WE HAVE SPF STATS LEGITIMATELY?  THEN BUMP LINE COUNT.   10/90 SBG\n         TM    DIRFLAG,DIRSPFOF CK FOR BITS THAT SHOULD BE OFF10/90 SBG\n         BNZ   ALISTEST         THEY'RE NOT: NO SPF STATS     10/90 SBG\n         TM    DIRFLAG,DIRSPFON CK FOR BITS THAT SHOULD BE ON 10/90 SBG\n         BNO   ALISTEST         THEY'RE NOT: NO SPF STATS     10/90 SBG\n         CLI   DIRSPFCR,0       00 OF 00YYDDDF ZEROS?         10/90 SBG\n         BNZ   ALISTEST         NO, BRANCH                    10/90 SBG\n         CLI   DIRSPFCD,0       00 OF OTHER 00YYDDDF ZERO?    10/90 SBG\n         BNZ   ALISTEST         NO, BRANCH                    10/90 SBG\n* ALL TESTS PASSED: ASSUME WE HAVE SPF STATS                  10/90 SBG\n         ST    R7,SAVE7REG             SAVE R7 FOR WORK       10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   BYPASADD         NO. DON'T INCREMENT STATS.    10/90 SBG\n         ZAP   PACKWORK,MEMSPLTS   MOVE TO WKAREA FOR CVB     10/90 SBG\n         CVB   R7,PACKWORK      CONVERT NO OF SPLITS TO BINARY10/90 SBG\n         AH    R7,DIRSPFSI      ADD ORIGINAL NO OF RECORDS    10/90 SBG\n         STH   R7,DIRSPFSI      STORE UPDATED COUNT IN DIRECT 10/90 SBG\nBYPASADD L     R7,SAVE7REG             RESTORE R7             10/90 SBG\n         DROP  R8                                             10/90 SBG\nALISTEST L     R8,SAVE8REG             RESTORE R8             10/90 SBG\n         NI    FLAGG,255-ALIASED       RESET ALIAS FLAG       10/90 SBG\n         TM    DIRLIST+11,X'80'        IS MEMBER AN ALIAS?    10/90 SBG\n         BNO   GOSTOW                  NO, DON'T COUNT IT     10/90 SBG\n         OI    FLAGG,ALIASED           FLAG AS ALIAS          10/90 SBG\n         NI    DIRLIST+11,X'7F'        TURN OFF ALIAS BEFORE STOW   SBG\nGOSTOW   DS    0H                                             10/90 SBG\n         TM    FLAGG,STOWADD           THIS A NOREPLACE RUN?  10/90 SBG\n         BO    STOWAD                  YES--STOW ADD ONLY     10/90 SBG\n         B     STOWREP                 NO --STOW REPLACE      10/90 SBG\n         EJECT                                                10/90 SBG\nSTOWREP  STOW  CLISTOUT,DIRLIST,R       STOW WITH REPLACE     10/90 SBG\n         SPACE 2\n         B     STOWEND(R15)\nSTOWEND  B     CHEKREPL                 GOOD REPLACE          10/90 SBG\n         NOP   ERRA\n         B     CHEKCOPY                 GOOD MEMBER ADD       10/90 SBG\n         B     ERRB\n         B     ERRC\n         NOP   ERRA\nERRD     MVC   ERRORMSG,MSGD\n         B     ERR\nERRC     MVC   ERRORMSG,MSGC\n         B     ERR\nERRB     MVC   ERRORMSG,MSGB\n         B     ERR\nERRA     MVC   ERRORMSG,MSGA\n         B     ERR                                            10/90 SBG\nINERROR  MVC   ERRORMSG,MSGRJI                                10/90 SBG\n         MVC   RC,=H'04'                                      10/90 SBG\n         B     WRITERR                                        10/90 SBG\nOUTERROR MVC   ERRORMSG,MSGRJO                                10/90 SBG\n         MVC   RC,=H'04'                                      10/90 SBG\n         B     WRITERR                                        10/90 SBG\nERR      MVC   RC,=H'12'\n         B     WRITERR\n         SPACE 2\n         EJECT                                                10/90 SBG\nSTOWAD   STOW  CLISTOUT,DIRLIST,A       STOW WITH ADD         10/90 SBG\n         SPACE 2                                              10/90 SBG\n         B     STOWENDA(R15)                                  10/90 SBG\nSTOWENDA B     CHEKCOPY                 GOOD REPLACE          10/90 SBG\n         B     CHEKNORE                 NO REPLACE            10/90 SBG\n         NOP   ERRBA                                          10/90 SBG\n         B     ERRBA                                          10/90 SBG\n         B     ERRCA                                          10/90 SBG\n         NOP   ERRAA                                          10/90 SBG\nERRDA    MVC   ERRORMSG,MSGD                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERRCA    MVC   ERRORMSG,MSGC                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERRBA    MVC   ERRORMSG,MSGB                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERRAA    MVC   ERRORMSG,MSGA                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERA      MVC   RC,=H'12'                                      10/90 SBG\n         B     WRITERR                                        10/90 SBG\n         EJECT                                                10/90 SBG\nCHEKCOPY AP    OUTCOUNT,=P'1'          COUNT MEMBERS ADDED    10/90 SBG\n         MVC   NMADDED(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG\n         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG\n         BNO   CHEKCNTA                NO, DON'T FLAG         10/90 SBG\n         AP    ALIASCNT,=P'1'          YES, COUNT FOR TOTALS  10/90 SBG\n         MVC   NMADSLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG\nCHEKCNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG\n         BZ    CHEKCNCN                NOT VTOF - NO SPLITS   10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   CHEKCNCS                NO-DON'T REPORT SPLITS 11/90 SBG\n         MVC   NMADPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG\n         ED    NMADPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG\n         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG\n         MVC   NMADSLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG\nCHEKCNCS CP    STRIPCNT,ALWZERO        WERE THERE ANY STRIPS? 11/90 SBG\n         BNH   CHEKCNCN                NO-DON'T REPORT SPLITS 11/90 SBG\n         MVC   NMADSLIT+28(8),EDPATT1  MOVE IN EDIT PATTERN   11/90 SBG\n         ED    NMADSLIT+28,STRIPCNT    EDIT THE COUNT         11/90 SBG\n         SP    STRIPCNT,STRIPCNT ZERO STRIP COUNT ON MEM LEVEL11/90 SBG\n         MVC   NMADSLIT+37(5),=C'STRIP'       RECORD STRIPS   11/90 SBG\nCHEKCNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG\n         BH    CHEKCLIN                NO - GO PRINT MEM LINE 10/90 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG\nCHEKCLIN MVC   PRTLINE,MEMLINEA        MOVE IN MSG TO LINE    10/90 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG\n         MVC   NMADSLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG\n         MVC   NMADSLIT+28(15),BLANKLIN+1 CLEAR STRIP FIELD   11/90 SBG\n         MVC   NMADPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG\n* -- IF THERE WERE DATA IN VB LINES FROM COLS 1-8, REPORT IT. 11/93 SBG\nCHEKCD18 TM    SWITCH,TEST20           VTOF HAS DATA IN 1-8   11/93 SBG\n         BZ    CHEKCDB                 NOT VTOF - 1-8 IRRELEV 11/93 SBG\nCHEKCDA  CP    DAT18CNT,ALWZERO        ANY DATA COLUMNS 1-8 ? 11/93 SBG\n         BNH   CHEKCDB                 NONE - DON'T REPORT.   11/93 SBG\n         MVC   NMD18ATT(8),EDPATT1     MOVE IN EDIT PATTERN   11/93 SBG\n         ED    NMD18ATT,DAT18CNT       EDIT COUNT OF LINES    11/93 SBG\n         SP    DAT18CNT,DAT18CNT  STRIP COUNT ON MEMBER LEVEL 11/93 SBG\n         MVC   NMD18LIT(16),D18LITRL    REPORT # LINES W/1-8  11/93 SBG\n         CP    SHORTCNT,ALWZERO        ANY SHORT LINES ?      11/93 SBG\n         BNH   CHEKCDC                 NOPE - KEEP BLANKS     11/93 SBG\n         MVC   NMD18LIT+28(8),EDPATT1    MOVE EDIT PATTERN    11/93 SBG\n         ED    NMD18LIT+28,SHORTCNT      EDIT COUNT OF SHORT  11/93 SBG\n         SP    SHORTCNT,SHORTCNT  SHORT COUNT ON MEMBER LEVEL 11/93 SBG\n         MVC   NMD18LIT+37(5),=C'SHORT'       MOVE LITERAL    11/93 SBG\nCHEKCDC  AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   11/93 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          11/93 SBG\n         BH    CHEKC2ND                NO - PRINT 2ND MEMLINE 11/93 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        11/93 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                11/93 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      11/93 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       11/93 SBG\nCHEKC2ND MVC   PRTLINE,MEMLINEB        MOVE MSG INTO LINE     11/93 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     11/93 SBG\n         MVC   NMREPLD+11(9),=C'MEMBER IN'    CLUDGE          11/93 SBG\n         MVC   NMD18ATT(52),BLANKLIN+1  CLEAR MEMLINEB FIELDS 11/93 SBG\nCHEKCDB  B     AFTRSTOW                DON'T POP OTHER COUNT  11/93 SBG\n         SPACE 3                                              11/93 SBG\nCHEKREPL AP    OUTCOUN2,=P'1'          COUNT MEMBERS REPLACED 10/90 SBG\n         MVC   NMREPLD(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG\n         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG\n         BNO   CHEKRNTA                NO, DON'T FLAG         10/90 SBG\n         AP    ALIASCNT,=P'1'          YES, COUNT FOR TOTALS  10/90 SBG\n         MVC   NMRESLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG\nCHEKRNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG\n         BZ    CHEKRNCN                NOT VTOF - NO SPLITS   10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   CHEKRNCS                NO-DON'T REPORT SPLITS 11/90 SBG\n         MVC   NMREPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG\n         ED    NMREPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG\n         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG\n         MVC   NMRESLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG\nCHEKRNCS CP    STRIPCNT,ALWZERO        WERE THERE ANY STRIPS? 11/90 SBG\n         BNH   CHEKRNCN                NO-DON'T REPORT SPLITS 11/90 SBG\n         MVC   NMRESLIT+28(8),EDPATT1  MOVE IN EDIT PATTERN   11/90 SBG\n         ED    NMRESLIT+28,STRIPCNT    EDIT THE COUNT         11/90 SBG\n         SP    STRIPCNT,STRIPCNT ZERO STRIP COUNT ON MEM LEVEL11/90 SBG\n         MVC   NMRESLIT+37(5),=C'STRIP'       RECORD STRIPS   11/90 SBG\nCHEKRNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG\n         BH    CHEKRLIN                NO - GO PRINT MEM LINE 10/90 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG\nCHEKRLIN MVC   PRTLINE,MEMLINER        MOVE IN MSG TO LINE    10/90 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG\n         MVC   NMRESLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG\n         MVC   NMRESLIT+28(15),BLANKLIN+1 CLEAR STRIP FIELD   11/90 SBG\n         MVC   NMREPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG\n* -- IF THERE WERE DATA IN VB LINES FROM COLS 1-8, REPORT IT. 11/93 SBG\nCHEKRD18 TM    SWITCH,TEST20           VTOF HAS DATA IN 1-8   11/93 SBG\n         BZ    CHEKRDB                 NOT VTOF - 1-8 IRRELEV 11/93 SBG\nCHEKRDA  CP    DAT18CNT,ALWZERO        ANY DATA COLUMNS 1-8 ? 11/93 SBG\n         BNH   CHEKRDB                 NONE - DON'T REPORT.   11/93 SBG\n         MVC   NMD18ATT(8),EDPATT1     MOVE IN EDIT PATTERN   11/93 SBG\n         ED    NMD18ATT,DAT18CNT       EDIT COUNT OF LINES    11/93 SBG\n         SP    DAT18CNT,DAT18CNT  STRIP COUNT ON MEMBER LEVEL 11/93 SBG\n         MVC   NMD18LIT(16),D18LITRL    REPORT # LINES W/1-8  11/93 SBG\n         CP    SHORTCNT,ALWZERO        ANY SHORT LINES ?      11/93 SBG\n         BNH   CHEKRDC                 NOPE - KEEP BLANKS     11/93 SBG\n         MVC   NMD18LIT+28(8),EDPATT1    MOVE EDIT PATTERN    11/93 SBG\n         ED    NMD18LIT+28,SHORTCNT      EDIT COUNT OF SHORT  11/93 SBG\n         SP    SHORTCNT,SHORTCNT  SHORT COUNT ON MEMBER LEVEL 11/93 SBG\n         MVC   NMD18LIT+37(5),=C'SHORT'       MOVE LITERAL    11/93 SBG\nCHEKRDC  AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   11/93 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          11/93 SBG\n         BH    CHEKR2ND                NO - PRINT 2ND MEMLINE 11/93 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        11/93 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                11/93 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      11/93 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       11/93 SBG\nCHEKR2ND MVC   PRTLINE,MEMLINEB        MOVE MSG INTO LINE     11/93 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     11/93 SBG\n         MVC   NMREPLD+11(9),=C'MEMBER IN'    CLUDGE          11/93 SBG\n         MVC   NMD18ATT(52),BLANKLIN+1  CLEAR MEMLINEB FIELDS 11/93 SBG\nCHEKRDB  B     AFTRSTOW                DON'T POP OTHER COUNT  11/93 SBG\n         SPACE 3                                              11/93 SBG\nCHEKNORE BAL   R11,STOWADEL       DO A DUMMY STOW AND DELETE  10/90 SBG\n************************************************************* 10/90 SBG\n*    DUMMY STOW-DELETE IS FOR WRITING OUT THE CONVERTED     * 10/90 SBG\n*    RECORDS THAT ARE NOT GOING TO BE LEGITIMATELY STOWED,  * 10/90 SBG\n*    BECAUSE OF THE NO-REPLACE FUNCTION.  THIS SOLUTION     * 10/90 SBG\n*    TO THE PROBLEM OF HOW TO HANDLE NON-REPLACED RECORDS   * 10/90 SBG\n*    REQUIRES A COMPRESS OF THE OUTPUT DATASET AT THE END   * 10/90 SBG\n*    OF THE CONVERSION.  THE REASON FOR THAT DESIGN WAS :   * 10/90 SBG\n*                                                           * 10/90 SBG\n*    THE NON-REPLACED RECORDS ARE ACTUALLY CONVERTED.       * 10/90 SBG\n*    IN CONVERTING THE RECORDS, ONE CAN DISCOVER ALIAS      * 10/90 SBG\n*    CONDITIONS AND REPORT THE NUMBER OF LINE SPLITS, ETC.  * 10/90 SBG\n*    THESE THINGS ARE REPORTED ON A MEMBER LEVEL, ALTHOUGH  * 10/90 SBG\n*    THEY ARE NOT ADDED TO THE SUMMARY TOTALS.              * 10/90 SBG\n*                                                           * 10/90 SBG\n*    ALSO, ONE MIGHT WANT TO RESTORE DELETED MEMBERS UNDER  * 10/90 SBG\n*    DIFFERENT NAMES, USING A UTILITY SUCH AS \"PDS\" OR      * 10/90 SBG\n*    \"PDS/E\" OR \"PDSGAS\".  THE ALTERNATE COPY OF THE CLIST  * 10/90 SBG\n*    WITH THE \"SAME NAME\" MIGHT ALSO BE A GOOD PIECE OF     * 10/90 SBG\n*    WORK THAT IS WORTH SAVING.                             * 10/90 SBG\n*                                                           * 10/90 SBG\n*    ANYONE WHO COMES UP WITH A BETTER IDEA THAT WORKS,     * 10/90 SBG\n*    IS WELCOME TO USE IT.                                  * 10/90 SBG\n************************************************************* 10/90 SBG\n         AP    OUTCOUN3,=P'1'          COUNT MEMBERS NOT REPLD10/90 SBG\n         MVC   NMREPLD(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG\n         MVC   NMREREPL(15),NMRENORE   REPORT NOT RPLD MEMBER 10/90 SBG\n         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG\n         BNO   CHEKNNTA                NO, DON'T FLAG         10/90 SBG\n         MVC   NMRESLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG\n*                  DO NOT POP THE ALIAS COUNT FOR NONREPLACED 10/90 SBG\nCHEKNNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG\n         BZ    CHEKNNCN                NOT VTOF - NO SPLITS   10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   CHEKNNCS                NO-DON'T REPORT SPLITS 11/90 SBG\n         SP    TOTSPLTS,MEMSPLTS       THESE SPLITS NOT TOTLED10/90 SBG\n         MVC   NMREPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG\n         ED    NMREPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG\n         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG\n         MVC   NMRESLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG\nCHEKNNCS CP    STRIPCNT,ALWZERO        WERE THERE ANY STRIPS? 11/90 SBG\n         BNH   CHEKNNCN                NO-DON'T REPORT STRIPS 11/90 SBG\n         MVC   NMRESLIT+28(8),EDPATT1  MOVE IN EDIT PATTERN   11/90 SBG\n         ED    NMRESLIT+28,STRIPCNT    EDIT THE COUNT         11/90 SBG\n         SP    STRIPCNT,STRIPCNT ZERO STRIP COUNT ON MEM LEVEL11/90 SBG\n         MVC   NMRESLIT+37(5),=C'STRIP'       RECORD STRIPS   11/90 SBG\nCHEKNNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG\n         BH    CHEKNLIN                NO - GO PRINT MEM LINE 10/90 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG\nCHEKNLIN MVC   PRTLINE,MEMLINER        MOVE IN MSG TO LINE    10/90 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG\n         MVC   NMRESLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG\n         MVC   NMRESLIT+28(15),BLANKLIN+1 CLEAR STRIP FIELD   11/90 SBG\n         MVC   NMREPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG\n* -- IF THERE WERE DATA IN VB LINES FROM COLS 1-8, REPORT IT. 11/93 SBG\nCHEKND18 TM    SWITCH,TEST20           VTOF HAS DATA IN 1-8   11/93 SBG\n         BZ    AFTRSTOW                NOT VTOF - 1-8 IRRELEV 11/93 SBG\nCHEKNDA  CP    DAT18CNT,ALWZERO        ANY DATA COLUMNS 1-8 ? 11/93 SBG\n         BNH   AFTRSTOW                NONE - DON'T REPORT.   11/93 SBG\n         MVC   NMD18ATT(8),EDPATT1     MOVE IN EDIT PATTERN   11/93 SBG\n         ED    NMD18ATT,DAT18CNT       EDIT COUNT OF LINES    11/93 SBG\n         SP    DAT18CNT,DAT18CNT  STRIP COUNT ON MEMBER LEVEL 11/93 SBG\n         MVC   NMD18LIT(16),D18LITRL    REPORT # LINES W/1-8  11/93 SBG\n         CP    SHORTCNT,ALWZERO        ANY SHORT LINES ?      11/93 SBG\n         BNH   CHEKNDC                 NOPE - KEEP BLANKS     11/93 SBG\n         MVC   NMD18LIT+28(8),EDPATT1    MOVE EDIT PATTERN    11/93 SBG\n         ED    NMD18LIT+28,SHORTCNT      EDIT COUNT OF SHORT  11/93 SBG\n         SP    SHORTCNT,SHORTCNT  SHORT COUNT ON MEMBER LEVEL 11/93 SBG\n         MVC   NMD18LIT+37(5),=C'SHORT'       MOVE LITERAL    11/93 SBG\nCHEKNDC  AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   11/93 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          11/93 SBG\n         BH    CHEKN2ND                NO - PRINT 2ND MEMLINE 11/93 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        11/93 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                11/93 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      11/93 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       11/93 SBG\nCHEKN2ND MVC   PRTLINE,MEMLINEB        MOVE MSG INTO LINE     11/93 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     11/93 SBG\n         MVC   NMREPLD+11(9),=C'MEMBER IN'    CLUDGE          11/93 SBG\n         MVC   NMD18ATT(52),BLANKLIN+1  CLEAR MEMLINEB FIELDS 11/93 SBG\n         SPACE 3                                              11/93 SBG\nAFTRSTOW TM    SWITCH,TEST20           IF V TO F              10/90 SBG\n         BO    *+8                        CHECK DIRECTORY\n         LA    R7,4(R7)                ELSE ADD 4 BYTES FOR OUTPUT BDW\n         LA    R12,2\n         CH    R12,DIRLEFT             IF DIRECTORY BLOCK IS NOT EMPTY\n         BL    GETMEM                     GET NEXT MEMBER\n         POINT CLISTIN,SAVETTR          ELSE READ NEW DIRECTORY\n         SPACE\n         B     READDIR\n         SPACE 2\nWRITERR  EQU   *\n*        BAL   R11,WRITETIT                                   10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         LH    R12,RC              DUMP                       10/90 SBG\n         CVD   R12,WORK               RETURN CODE             10/90 SBG\n         UNPK  RCP,WORK                  INTO                 10/90 SBG\n         OI    RCP+1,X'F0'                  ERROR LINE        10/90 SBG\n         AP    LINCOUNT,=P'3'                                 10/90 SBG\n         MVC   PRTLINE,ERRLINE\n         BAL   R11,PUTPRINT\n         CLC   RC,=H'12'               IF COPY STARTED\n         BNE   EXIT                      PRINT TOTALS\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTP\n         TM    FLAGG,STOWADD        IS THIS NOREPLACE RUN?    10/90 SBG\n         BO    BRNORPLX             YES--REPORT ITS TOTALS    10/90 SBG\n         BAL   R11,COUNTP2          PRINT NO OF MEMBERS REPLD 10/90 SBG\n         B     BRTOTX               GO SHOW TOTAL MEMBERS     10/90 SBG\nBRNORPLX BAL   R11,COUNTP3          PRINT NO OF MEM NOT REPLD 10/90 SBG\nBRTOTX   BAL   R11,SHOWTOTS         SHOW TOTAL NUMBER OF MEMB 10/90 SBG\n         BAL   R11,TOTALIAS         SHOW TOTAL OF ALIAS MEMBS 10/90 SBG\n         TM    SWITCH,TEST20        IS THIS V TO F ?          10/90 SBG\n         BZ    *+16                 NO - DON'T PRINT SPLT TOTS10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTOTS         PRINT TOTAL LINE SPLITS   10/90 SBG\n         BAL   R11,MSGSTATS         PRINT STATS UPDATE MESSAGE10/90 SBG\n         B     EXIT\n         SPACE 2\nEOJ      BAL   R11,WRITETIT\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         LH    R12,RC              DUMP                       10/90 SBG\n         CVD   R12,WORK               RETURN CODE             10/90 SBG\n         UNPK  RCP,WORK                  INTO                 10/90 SBG\n         OI    RCP+1,X'F0'                  ERROR LINE        10/90 SBG\nEOJNORM  MVC   ERRORMSG(37),=C' COPY COMPLETE    -    SUMMARY REPORT'\n         AP    LINCOUNT,=P'3'                                 10/90 SBG\n         MVC   PRTLINE,ERRLINE\n         BAL   R11,PUTPRINT\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTP\n         TM    FLAGG,STOWADD        IS THIS NOREPLACE RUN?    10/90 SBG\n         BO    BRNORPL              YES--REPORT ITS TOTALS    10/90 SBG\n         BAL   R11,COUNTP2          PRINT NO OF MEMBERS REPLD 10/90 SBG\n         B     BRTOT                GO SHOW TOTAL MEMBERS     10/90 SBG\nBRNORPL  BAL   R11,COUNTP3          PRINT NO OF MEM NOT REPLD 10/90 SBG\nBRTOT    BAL   R11,SHOWTOTS         SHOW TOTAL NUMBER OF MEMB 10/90 SBG\n         BAL   R11,TOTALIAS         SHOW TOTAL OF ALIAS MEMBS 10/90 SBG\n         TM    SWITCH,TEST20        IS THIS V TO F ?          10/90 SBG\n         BZ    *+16                 NO - DON'T PRINT SPLT TOTS10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTOTS         PRINT TOTAL LINE SPLITS   10/90 SBG\n         BAL   R11,MSGSTATS         PRINT STATS UPDATE MESSAGE10/90 SBG\n         SPACE 2\nEXIT     EQU   *\n         CLOSE (CLISTIN,,CLISTOUT,,PRINT)\n         LH    R15,RC                  LOAD RETURN CODE\n         L     R13,SAVEAREA+4\n         LM    R0,R12,20(R13)          RESTORE REGS 0-12\n         L     R14,12(R13)             RESTORE REG 14\n         BR    R14\n         SPACE 2\nOPENPRNT EQU   *                                              10/90 SBG\n         OPEN  (PRINT,(OUTPUT))\n         BR    R11                                            10/90 SBG\nWRITETIT AP    PAGCOUNT,=P'1'        INCREMENT PAGE COUNT     10/90 SBG\n         ZAP   LINCOUNT,=P'1'        RE-START  LINE COUNT     10/90 SBG\n         MVC   PAGENUM,EDPATT1                                10/90 SBG\n         ED    PAGENUM,PAGCOUNT                               10/90 SBG\n         MVC   PRTLINE,TITLE                                  10/90 SBG\n         B     PUTPRINT\nPRTBLANK AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,BLANKLIN         SKIP SOME LINES       10/90 SBG\n         B     PUTPRINT                 WRITE EM              10/90 SBG\nSHOWTOTS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ZAP   TOTCOUNT,OUTCOUNT     ADD ADDED TO TOTAL       10/90 SBG\n         AP    TOTCOUNT,OUTCOUN2     ADD REPLD TO TOTAL       10/90 SBG\n         ED    OUTP1,TOTCOUNT        EDIT TOTAL CONVERTED     10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG03 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C'0'         SKIP ONE LINE            10/90 SBG\n         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nWRINDSN  MVC   DSNLINAM,DSNAMIN      MOVE DSNAME TO LINE      10/90 SBG\n         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,DSNLINEI      MOVE LINE TO PRINT       10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nWROUTDSN MVC   DSNLONAM,DSNAMOUT     MOVE DSNAME TO LINE      10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,DSNLINEO      MOVE LINE TO PRINT       10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nMSGSTATS MVC   COUNTLMS(46),PRTMSG06 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVC   OUTP1(8),BLANKLIN+1   BLANK NUMBER AREA        10/90 SBG\n         MVI   COUNTLNC,C' '         GO TO NEXT LINE ONLY     10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nTOTALIAS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,ALIASCNT        EDIT TOTAL ALIAS NUMBER  10/90 SBG\n         MVC   COUNTLMS(46),PRTMSG05 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C'0'         SKIP ONE LINE            10/90 SBG\n         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTOTS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,TOTSPLTS        EDIT TOTAL LINE SPLITS   10/90 SBG\n         MVC   COUNTLMS(46),PRTMSG04 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C'-'         SKIP TWO LINES           10/90 SBG\n         AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTP   MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,OUTCOUNT        EDIT NUMBER OF ADDED     10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG01 MOVE SPECIAL MESSAGE     10/90 SBG\n         AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTP2  MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,OUTCOUN2        EDIT NUMBER OF REPLACED  10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG02 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C' '         NO LINE SKIP             10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTP3  MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,OUTCOUN3        EDIT NUMBER OF REPLACED  10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG07 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C' '         NO LINE SKIP             10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\nPUTPRINT PUT   PRINT,PRTLINE\n         MVC   PRTLINE(121),PRTLINE-1  CLEAR AREA AFTER PRINT 10/90 SBG\nCOUNTPEN BR    R11                                            10/90 SBG\n         SPACE 2\nSTOWADEL STM   R14,R1,SAVEMREG         SAVE REGISTERS R14-R1  10/90 SBG\n         MVC   NAMESAVE(8),NAME        SAVE REAL NAME         10/90 SBG\n         MVC   NAME(8),NAMEDUM       FAKE NAME FOR DUMMY STOW 10/90 SBG\n         STOW  CLISTOUT,DIRLIST,A      STOW DUMMY MEMBER      10/90 SBG\n         STOW  CLISTOUT,DIRLIST,D      DELETE THE DUMMY MEMBR 10/90 SBG\n         MVC   NAME(8),NAMESAVE  RESTORE REAL NAME FOR REPORT 10/90 SBG\n         LM    R14,R1,SAVEMREG         RESTORE SAVED REGISTRS 10/90 SBG\n         BR    R11                     RETURN TO CALLER       10/90 SBG\n         SPACE 2\n*EXECUTED INSTRUCTIONS\nMOVEV    MVC   12(1,R7),0(R6)\nMOVE80   MVC   REC80(1),0(R6)\n         EJECT\nCLISTIN  DCB   DSORG=PO,MACRF=R,DDNAME=SYSUT1,EODAD=STOWOUT,EXLST=JFCB1\n         SPACE 2\nCLISTOUT DCB   DSORG=PO,MACRF=W,DDNAME=SYSUT2,EXLST=JFCB2\n         SPACE 2\nPRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,            X\n               LRECL=121,BLKSIZE=605\n         EJECT\n*WORK FIELDS\n         SPACE\nWORK     DC    D'0'\nPACKWORK DC    PL8'0'         WORK AREA FOR CVB INSTRUCTION   10/90 SBG\n*                        HAS TO BE 8 BYTES FOR CVB INSTRUCTION10/90 SBG\nFULLWORD DS    0F\nHALFWORD DC    H'0'\n         DC    H'0'\nSAVETTR  DC    F'0'\nREADADD  DC    F'0'\nENDV     DC    F'0'\nENDF     DC    F'0'\nSAVERTN  DC    F'0'\nNEXTMEM  DC    F'0'\nSAVECREG DC    F'0'                                                *SBG\nSAVEWREG DC    F'0'                                                *SBG\nSAVEMREG DC    4F'0'          SAVE R14, R15, R0, R1                *SBG\nSAVE2REG DC    F'0'                                           11/93*SBG\nSAVE4REG DC    F'0'                                                *SBG\nSAVE7REG DC    F'0'                                                *SBG\nSAVE8REG DC    F'0'                                                *SBG\nOUTCOUNT DC    PL4'0'                  COUNT FOR COPIED       10/90 SBG\nOUTCOUN2 DC    PL4'0'                  COUNT FOR REPLACED     10/90 SBG\nOUTCOUN3 DC    PL4'0'                  COUNT FOR NOT REPLACED 10/90 SBG\nALIASCNT DC    PL4'0'            ALIAS COUNT - CONV TO REAL   10/90 SBG\nTOTCOUNT DC    PL4'0'           TOTALS COUNT FOR CONVERTED    10/90 SBG\nMEMSPLTS DC    PL4'0'    MEMBER LEVEL COUNTER FOR SPLIT LINES 10/90 SBG\nTOTSPLTS DC    PL4'0'          TOTALS COUNTER FOR SPLIT LINES 10/90 SBG\nLINCOUNT DC    PL4'0'          LINE COUNTER FOR PAGE EJECTS   10/90 SBG\nLINCHANG DC    PL4'&LINPPG'    END OF PAGE COUNT              10/90 SBG\nPAGCOUNT DC    PL4'0'          PAGE COUNTER                   10/90 SBG\nSTRIPCNT DC    PL4'0'          STRIP COUNTER FOR MEMBERS      11/90 SBG\nSTRIPTOT DC    PL4'0'          TOTALS STRIP COUNTER           11/90 SBG\nSHORTCNT DC    PL4'0'          SHORT RECORD COUNTER           11/93 SBG\nSHORTTOT DC    PL4'0'          SHORT RECORD TOTALS            11/93 SBG\nDAT18CNT DC    PL4'0'          NON-NUMERIC 1-8 COUNTER        11/93 SBG\nDAT18TOT DC    PL4'0'          NON-NUMERIC 1-8 TOTALS         11/93 SBG\nALWZERO  DC    PL4'0'         ALWAYS ZERO - KEEP LENGTH = 4   10/90 SBG\nSAVEHALF DC    H'0'                                                *SBG\nOUTBLKSI DC    H'0'\nDIRLEFT  DC    H'0'\nBLKIN    DC    H'0'\nRECIN    DC    H'0'\nRC       DC    H'0'\nLRECL    DC    H'0'\nDIRSW    DC    X'00'\nSWITCH   DC    XL1'00'\nFLAGG    DC    XL1'00'                                        10/90 SBG\nALIASED  EQU   X'80'              ORIGINAL MEMBER IS AN ALIAS 10/90 SBG\nSTOWADD  EQU   X'40'              STOW ADD USED - NOT REPLACE 10/90 SBG\nNAMESAVE DC    CL8'        '      USED TO SAVE REAL MEM NAME  10/90 SBG\nHIVALUE  DC    XL8'FFFFFFFFFFFFFFFF'\nSEQCOUNT DC    PL4'0'\n         SPACE\n         DS    0F\nDIRIN    DS    CL256                   DIRECTORY BLOCK\n         SPACE\n         DS    0F                                             10/90 SBG\nDIRDUMMY DS    0CL12                    DUMMY DIRECTORY       10/90 SBG\nNAMEDUM  DC    XL8'FEFEFEFEFEFEFEFE'    RECORD FOR STOW ADD   10/90 SBG\nTTRDUM   DS    XL3                      AND STOW DELETE.      10/90 SBG\nCDUM     DC    CL1'00'                                        10/90 SBG\n         SPACE\n         DS    0F\nDIRLIST  DS    0CL74                   DIRECTORY RECORD\nNAME     DC    CL8' '\nTTR      DS    CL3\nC        DS    CL1\nUSEADATA DS    CL62\n         SPACE\n         DS    0F                ALIGNMENT OF EXIT LIST       10/90 SBG\nJFCB1    DC    X'07',AL3(JFCBDATA)                            10/90 SBG\nJFCB2    DC    X'07',AL3(JFCBDATA)                            10/90 SBG\n         DC    X'80',AL3(0)                                   10/90 SBG\n         SPACE 1                                              11/90 SBG\nWORKSTRP DC    CL8' '            WORK AREA FOR STRIP TESTING  11/90 SBG\n*         DC    CL1' '    THIS STUFF WAS MOVED TO THE END.    10/90 SBG\n*REC80    DS    CL80      PROBLEM WITH OVERLAYING PRINT AREA. 10/90 SBG\n         SPACE 2\n*PRINT DATA\n         SPACE\nTITLE    DS    0CL121                                         10/90 SBG\n         DC    CL52'1       CLIST CONVERSION PROGRAM - LEVEL &PLVEL '\nVARTITLE DC    CL14'FB-VB OR VB-FB'                           10/90 SBG\n         DC    CL16' TRANSFORMATION '                         10/90 SBG\n         DC    CL19' '                    FILLER              10/90 SBG\nPAGELIT  DC    CL5'PAGE '                                     10/90 SBG\nPAGENUM  DC    CL8' '                                         10/90 SBG\n         DC    CL7' '                                         10/90 SBG\n*\nDSNLINEI DS    0CL121                                         10/90 SBG\nDSNLILIT DC    CL34'0          INPUT  DATASET NAME :  '       10/90 SBG\nDSNLINAM DC    CL44' '                                        10/90 SBG\n         DC    CL43' '                                        10/90 SBG\n*\nDSNLINEO DS    0CL121                                         10/90 SBG\nDSNLOLIT DC    CL34'           OUTPUT DATASET NAME :  '       10/90 SBG\nDSNLONAM DC    CL44' '                                        10/90 SBG\n         DC    CL1' '                                         10/90 SBG\nDSNLODEF DC    CL42'  REPLACE IS DEFAULT'                     10/90 SBG\n*\nBLANKLIN DS    0CL121                                         10/90 SBG\n         DC    CL121'-'        BLANK LINES AFTER TITLE        10/90 SBG\n*\nERRLINE  DS    0CL121\n         DC    CL29'-                         RC='\nRCP      DC    CL2'  '\n         DC    CL5' '\nERRORMSG DC    CL37' '\n         DC    CL48' '\n*                                                             10/90 SBG\nCOUNTLN1 DS    0CL121                                         10/90 SBG\nCOUNTLNC DC    CL23'-'                                        10/90 SBG\nOUTP1    DC    CL8' '                                         10/90 SBG\nCOUNTLMS DC    CL90'  '                                       10/90 SBG\n*                                                             10/90 SBG\nMEMLINEA DS    0CL121          LINE TO REPORT ADDED MEMBERS   10/90 SBG\n         DC    CL12' '         FILLER                         10/90 SBG\nNMADDED  DC    CL9' '          NAME OF ADDED MEMBER           10/90 SBG\n         DC    CL19'  MEMBER IN OUTPUT '                      10/90 SBG\nNMADFBVB DC    CL3' B'                                        10/90 SBG\n         DC    CL26'LIBRARY  **  ADDED      **'               10/90 SBG\nNMADPATT DC    CL8' '          SPOT FOR COUNT OF SPLIT LINES  10/90 SBG\nNMADSLIT DC    CL44' '         SPOT FOR SPLIT LINE LITERAL    10/90 SBG\n*                                                             10/90 SBG\nMEMLINER DS    0CL121          LINE TO REPORT REPLACED MEMBERS10/90 SBG\n         DC    CL12' '         FILLER - OFFSET NAME OF MEMBER 10/90 SBG\nNMREPLD  DC    CL9' '          NAME OF REPLACED MEMBER        10/90 SBG\n         DC    CL19'  MEMBER IN OUTPUT '                      10/90 SBG\nNMREFBVB DC    CL3' B'                                        10/90 SBG\n         DC    CL11'LIBRARY  **'                              10/90 SBG\nNMREREPL DC    CL15'  REPLACED   **'                          10/90 SBG\nNMREPATT DC    CL8' '          SPOT FOR COUNT OF SPLIT LINES  10/90 SBG\nNMRESLIT DC    CL44' '         SPOT FOR SPLIT LINE LITERAL    10/90 SBG\n*                                                             10/90 SBG\nMEMLINEB DS    0CL121          LINE TO ADD EXTRA STATS        10/90 SBG\n         DC    CL69' '         FILLER                         10/90 SBG\nNMD18ATT DC    CL8' '          SPOT FOR COUNT OF COL 1-8 LNES 10/90 SBG\nNMD18LIT DC    CL44' '         SPOT FOR ITS LITERALS          10/90 SBG\n*                                                             10/90 SBG\n         DC    CL1' '          BLANK FOR CLEARING PRINT LINE  10/90 SBG\nPRTLINE  DS    CL121           \"THE\" OUTPUT LINE AREA         10/90 SBG\n         SPACE\nEDPATT1  DC    XL8'4020202020202120' PATTERN FOR SPLIT LINES  10/90 SBG\nLINSPLIT DC    CL14' LINE SPLITS  '\nD18LITRL DC    CL16' DATA 1-8 LINES '\nFIXTOVAR DC    CL14'FIX TO VAR BLK'\nVARTOFIX DC    CL14'VAR TO FIX BLK'\nNMRENORE DC    CL15'  NOREPLACE  **'                          10/90 SBG\nMSG1     DC    CL37'FILE NOT V OR F'\nMSG2     DC    CL37'F FORMAT MUST BE LRECL 80'\nMSG3     DC    CL37'INPUT AND OUTPUT CANNOT BE SAME RECFM'\nMSG4     DC    CL37'V RECORD WITH LRECL OVER 256'\nMSGA     DC    CL37'DUPLICATE NAME ON DIRECTORY-SYSUT2'\nMSGB     DC    CL37'DIRECTORY OUT OF SPACE'\nMSGC     DC    CL37'I/O ERROR ON SYSUT2 DIRECTORY'\nMSGD     DC    CL37'PROGRAM REGION TOO SMALL'\nMSGRJI   DC    CL37'DDNAME IS MISSING IN THE INPUT DCB'\nMSGRJO   DC    CL37'DDNAME IS MISSING IN THE OUTPUT DCB'\nPRTMSG01 DC    CL37'  CONVERTED MEMBERS ADDED           '     10/90 SBG\nPRTMSG02 DC    CL37'  CONVERTED MEMBERS REPLACED        '     10/90 SBG\nPRTMSG03 DC    CL37'  TOTAL NUMBER OF MEMBERS CONVERTED '     10/90 SBG\nPRTMSG04 DC    CL46'  TOTAL OF LONG LINE SPLITS IN THIS CONVERSION' SBG\nPRTMSG05 DC    CL46'  TOTAL NUMBER OF ALIASES CONVERTED TO MEMBERS' SBG\nPRTMSG06 DC    CL46'  EXISTING MEMBER ISPF STATISTICS ARE UPDATED ' SBG\nPRTMSG07 DC    CL37'  CONVERTED MEMBERS NOT REPLACED    '     10/90 SBG\nALIASMSG DC    CL11' WAS ALIAS'                               10/90 SBG\nDSNAMIN  DC    CL44' '              INPUT  DSNAME             10/90 SBG\nDSNAMOUT DC    CL44' '              OUTPUT DSNAME             10/90 SBG\nNUMERICS DC    240X'FF',10X'00',6X'FF'  TRT TABLE TO TEST FOR 11/93 MW\n*                                       NUMERIC FIELD         11/93 MW\n         LTORG\n         EJECT                                                10/90 SBG\nDIRSECT  DSECT\n* THIS IS A DESCRIPTION OF PDS DIRECTORY ENTRY FIELDS.        10/90 SBG\n* GRACIOUSLY BORROWED FROM PDS 8.4 CODE.  COURTESY OF S.SMITH 10/90 SBG\nDIRLINK  DS    0F             ***   DIRECTORY AREA MAPPING  ***\nDIRNAME  DS    CL8\nDIRTTR   DS    XL3\nDIRFLAG  DS    X\nDIRSPFOF EQU   B'01110000'         BITS ARE OFF IN SPF STATS\nDIRSPFON EQU   B'00001111'         BITS ARE ON IN SPF STATS\nDIRALIAS EQU   X'80'          MEMBER IS AN ALIAS\nDIR2TTR  EQU   X'40'          TWO TTR'S TO UPDATE\nDIR1TTR  EQU   X'20'          ONE TTR TO UPDATE\nDIRUSER  DS    XL62\n         ORG   DIRUSER  FOLLOWING FOR LOAD MODULES\nDIRSTART DS    XL4            TTR OF FIRST TEXT BLOCK\nDIRNOTE  DS    XL3            TTR OF NOTELIST\nDIRNOTE# DS    X              NUMBER OF NOTELIST ENTRIES\nDIRATTR  DS    XL2            MEMBER ATTRIBUTES\nDIRSTORE DS    XL3            SIZE OF LOAD MODULE\nDIRTEXTL DS    XL2            LENGTH OF 1ST TEXT RECORD\nDIREPA   DS    XL3            ENTRY POINT ADDRESS\nDIRATTR2 DS    X          ADDITIONAL ATTRIBUTE BYTES:\nDIRAOSLE EQU   X'80'          VS LINKAGE EDITOR CREATED THIS MODULE\nDIR2PAGA EQU   X'20'          PAGE ALIGNMENT REQUIRED FOR THIS MODULE\nDIR2SSI  EQU   X'10'          SSI INFORMATION IS PRESENT FOR MODULE\nDIRAPFLG EQU   X'08'          APF INFORMATION FOR THIS MODULE IS VALID\nDIRATTR3 DS    X          ADDITIONAL ATTRIBUTE BYTES:\nDIRRMANY EQU   X'10'          RMODE=ANY\nDIRAA31  EQU   X'08'          AMODE=31 (ALIAS ENTRY)\nDIRAA24  EQU   X'04'          AMODE=24 (ALIAS ENTRY)\nDIRAM31  EQU   X'02'          AMODE=31 (MAIN ENTRY)\nDIRAM24  EQU   X'01'          AMODE=24 (MAIN ENTRY)\nDIRATTR4 DS    X              COUNT OF RLD ENTRIES AFTER FIRST TEXT\n         SPACE 1\nDIRAPF   DS    0XL2           APF (IF NOT SCAT, SSI OR ALIAS)\nDIREP    DS    XL3            ENTRY POINT (MAIN MEMBER)\nDIRREAL  DS    CL8            REAL NAME OF MEMBER\nDIRAPF2  DS    XL2            APF INFORMATION (ALIAS, NO SCAT OR SSI)\nDIREND2  EQU   *              END OF ALIAS SECTION\n         ORG   DIRAPF    FOLLOWING FOR SCATTER LOADED MEMBERS\nDIRSCLL  DS    XL2            LENGTH OF SCATTER LIST\nDIRSCTL  DS    XL2            LENGTH OF TRANSLATE TABLE\nDIRSCET  DS    XL2            ESDID OF FIRST TEXT RECORD\nDIRSCEP  DS    XL2            ESDID OF ENTRY POINT\nDIRAPF3  DS    0XL2           APF (IF SCAT, NO SSI AND NO ALIAS)\nDIREPSC  DS    XL3            ENTRY POINT (MAIN MEMBER)\nDIRREALS DS    CL8            REAL NAME OF MEMBER\nDIRAPF4  DS    XL2            APF INFORMATION (SCAT, NO SSI AND ALIAS)\nDIREND3  EQU   *              END OF SCATTER, ALIAS SECTION\n*\n         ORG   DIRUSER   FOLLOWING FOR MODULES SAVED BY SPF EDIT\nDIRSPFV  DS    XL1            VERSION NUMBER IN BINARY\nDIRSPFR  DS    XL1            REVISION NUMBER IN BINARY\nDIRSPFZ  DS    XL2            NOT CURRENTLY USED\nDIRSPFCR DS    XL4            CREATION DATE IN FORMAT 00YYDDDF\nDIRSPFCD DS    XL4            LAST CHANGE DATE IN FORMAT 00YYDDDF\nDIRSPFCT DS    XL2            LAST CHANGE TIME IN FORMAT HHMM\nDIRSPFSI DS    XL2            CURRENT SIZE IN BINARY\nDIRSPFIN DS    XL2            INITIAL SIZE IN BINARY\nDIRSPFMD DS    XL2            MODIFIED LINES IN BINARY\nDIRSPFID DS    CL8            ID OF LAST PERSON TO UPDATE\n*                             END OF SPF SECTION\nCVTCLIST CSECT                                                10/90 SBG\nJFCBDATA DC    CL176' '\n         DC    CL1' '               MOVED TO END BECAUSE OF   10/90 SBG\nREC80    DS    CL80                 BAD EXMOVE.  R5 PROB BAD. 10/90 SBG\n*                            KEEP THE REC80 WORKAREA LAST.    10/90 SBG\n         EJECT                                                10/90 SBG\nDCBDUM   DCBD  DSORG=PO,DEVD=DA\n         EJECT                                                10/90 SBG\nJFCBLK   DSECT\n         IEFJFCBN LIST=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CVTCLS21": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01]\\x00\\x00\\x00\\x89(O\\x00\\x903\\x1f\\x182\\x04\\xa1\\x02U\\x02\\xa9\\xe5\\xc5\\xd9\\xe2`\\xf2\\xf1@@@'", "ispf": {"version": "01.93", "flags": 0, "createdate": "1989-10-11T00:00:00", "modifydate": "1990-11-27T18:32:00", "lines": 1185, "newlines": 597, "modlines": 681, "user": "VERS-21"}, "text": "CNVT     TITLE 'CLIST LIBRARY CONVERSION PROGRAM: FB-VB, VB-FB'    *SBG\n****************************************************************** *SBG\n*                                                                * *SBG\n*     THIS IS AN ASSEMBLER PROGRAM TO CONVERT ENTIRE CLIST       * *SBG\n*     LIBRARIES FROM THE 80 BYTE - FIXED BLOCKED FORMAT, WITH    * *SBG\n*     SEQUENCE NUMBERS IN COLUMNS 73-80, TO THE OTHER CLIST      * *SBG\n*     FORMAT:  255-BYTE - VARIABLE BLOCKED RECORDS, WITH THE     * *SBG\n*     SEQUENCE NUMBERS IN COLUMNS 1-8 OF THE DATA PORTION OF     * *SBG\n*     EACH RECORD, AND VICE-VERSA.  THE PROGRAM GOES BOTH WAYS.  * *SBG\n*                                                                * *SBG\n*     MY HOPE IS THAT THIS PROGRAM WILL ELIMINATE THE GREAT      * *SBG\n*     LABOR AND UNCERTAINTY THAT IS INVOLVED IN ANY CLIST        * *SBG\n*     FORMAT CONVERSIONS, NO MATTER WHICH KIND THEY ARE.         * *SBG\n*                                                                * *SBG\n*     THE SYSUT1 DATASET IS INPUT, AND THE SYSUT2 DATASET IS     * *SBG\n*     OUTPUT.  THE PROGRAM EXAMINES THE DCB INFORMATION FROM     * *SBG\n*     EACH DDNAME, AND FIGURES OUT WHICH WAY THE CONVERSION      * *SBG\n*     SHOULD PROCEED.  ALL MEMBERS ARE CONVERTED IN ONE RUN      * *SBG\n*     OF THE PROGRAM.  RESULTS ARE REPORTED IN THE SYSPRINT DD.  * *SBG\n*                                                                * *SBG\n*     CVTCLIST CAN BE EXECUTED TWO WAYS:  EITHER IN REPLACE MODE * *SBG\n*     OR IN NOREPLACE MODE.  IN REPLACE MODE, ANY EXISING MEMBER * *SBG\n*     IN THE OUTPUT LIBRARY WILL BE REPLACED.  IN NOREPLACE      * *SBG\n*     MODE, AN EXISTING MEMBER WILL NOT BE REPLACED.  REPLACE    * *SBG\n*     MODE IS THE DEFAULT.  NOREPLACE MODE IS SET WHEN THE       * *SBG\n*     PROGRAM IS EXECUTED WITH ANY PARM IN THE EXEC STATEMENT.   * *SBG\n*                                                                * *SBG\n*     THE ORIGINAL MVS VERSION OF THIS PROGRAM WAS SUBMITTED     * *SBG\n*     TO THE CBT MVS MODS TAPE, FILE 187, BY BOB COLLINS OF THE  * *SBG\n*     FIRST NATIONAL BANK OF CHICAGO.  VERSION 2.1 INCORPORATES  * *SBG\n*     MANY FIXES OF BUGS, THE INTRODUCTION OF \"REPLACE\" AND      * *SBG\n*     \"NOREPLACE\" MODES, AND MANY REPORTING ENHANCEMENTS.        * *SBG\n*                                                                * *SBG\n*     THE VB TO FB FUNCTION OF THE PROGRAM (SYSUT1 DD DATASET    * *SBG\n*     IS OF THE VB TYPE AND THE SYSUT2 DD DATASET IS FB) HAD     * *SBG\n*     MANY BUGS, IN SPLITTING OF THE LONG RECORDS.  SOME NEWLY   * *SBG\n*     CREATED FB CLISTS DID NOT BEHAVE EXACTLY AS DID THE OLD    * *SBG\n*     VB VERSION FROM WHICH THEY WERE MADE.  ALSO, THERE WAS A   * *SBG\n*     RUNAWAY CONDITION WHICH COULD RESULT FROM HAVING LONG      * *SBG\n*     STRINGS IN THE VB FORMAT THAT HAD NO IMBEDDED BLANKS.      * *SBG\n*                                                                * *SBG\n*     I HAVE ATTEMPTED TO FIX THESE BUGS.  I CANNOT GUARANTEE    * *SBG\n*     THAT EVERY CLIST IN THE WORLD WILL CONVERT FLAWLESSLY      * *SBG\n*     UNDER THIS PROGRAM, BUT ITS OPERATION HAS BEEN IMPROVED    * *SBG\n*     BY ORDERS OF MAGNITUDE THROUGH THESE FIXES, HOPEFULLY.     * *SBG\n*                                                                * *SBG\n*     I TRIED TO AVOID MAKING ASSUMPTIONS ABOUT CONTINUATION     * *SBG\n*     CHARACTERS, IN ANY WAY.  THIS GOT THE ORIGINAL AUTHOR      * *SBG\n*     INTO HIS ORIGINAL TROUBLE.                                 * *SBG\n*                                                                * *SBG\n****************************************************************** *SBG\n         EJECT                                                10/90 SBG\n****************************************************************** *SBG\n*                                                                * *SBG\n*     THERE IS ONE PERVERSE CASE THAT I KNOW ABOUT.  IF A VB     * *SBG\n*     CLIST HAS RECORDS WITH TRAILING BLANKS AFTER THE LAST      * *SBG\n*     NON-BLANK CHARACTER, AND THE TRAILING BLANKS EXTEND PAST   * *SBG\n*     DATA COLUMN 72 (REALLY COLUMN 80), THEN THE PROGRAM WILL   * *SBG\n*     SPLIT THE RECORD AND ADD A BLANK LINE.  SOUNDS HARMLESS.   * *SBG\n*                                                                * *SBG\n*     THE BEST WAY TO TEST THIS PROGRAM IS TO CONVERT A LIBRARY  * *SBG\n*     FB-TO-VB-TO-FB, (OR VB-TO-FB-TO-VB), AND ENSURE THAT THE   * *SBG\n*     FINAL LIBRARY COMPARES IDENTICAL TO THE STARTING LIBRARY.  * *SBG\n*                                                                * *SBG\n*                       S.GOLOB - NEWSWEEK, INC.   10/07/89      * *SBG\n*                                 333 ROUTE 46 WEST              * *SBG\n*                                 MOUNTAIN LAKES, NJ 07046       * *SBG\n*                                 (201) 316-2328                 * *SBG\n*                                                                * *SBG\n****************************************************************** *SBG\n*                                                                * *SBG\n*     CHANGE LOG: 10/05/90 - CHANGED THE STOW TO REPLACE FORM    * *SBG\n*                  INSTEAD OF ADD FORM.  THIS ALLOWS CONVERSION  * *SBG\n*                  INTO NON-EMPTY TARGET CLIST LIBRARIES.        * *SBG\n*                  SYSPRINT REPORT HAS BEEN CHANGED ACCORDINGLY. * *SBG\n*                  ADDED VERSION NUMBER 2.0 TO AVOID CONFUSION   * *SBG\n*                  WITH EARLIER VERSIONS OF THIS PROGRAM.        * *SBG\n*                                  S.GOLOB                       * *SBG\n*                                                                * *SBG\n*                 10/15/90 - ADDED SECOND BASE.  VERSION 2.1.    * *SBG\n*                  ADDED CHECK FOR ALIAS IN THE \"FROM\" LIBRARY.  * *SBG\n*                  FLAG MEMBERS AS \"WAS ALIAS\" AND TOTAL ALL     * *SBG\n*                  ALIAS MEMBERS THAT WERE CONVERTED TO REAL     * *SBG\n*                  MEMBERS IN THE \"TO\" LIBRARY.  IF A CONVERTED  * *SBG\n*                  MEMBER HAD LINE SPLITS AND ISPF STATS, BUMP   * *SBG\n*                  THE CURRENT RECORD COUNT IN THE ISPF STATS    * *SBG\n*                  BY THE NUMBER OF LINE SPLITS.  ADD PAGE       * *SBG\n*                  COUNTS AND PAGE EJECTS.  GLOBAL &LINPPG IS    * *SBG\n*                  NUMBER OF LINES PER PAGE.  DEFAULT IS 60.     * *SBG\n*                  ADD DSNAMES TO HEADER OF ALL REPORTS.         * *SBG\n*                                  S.GOLOB                       * *SBG\n*                                                                * *SBG\n*                 10/19/90 - YOU CAN NOW CHOOSE TO DO A STOW     * *SBG\n*                  WITH NOREPLACE.  JUST EXECUTE CVTCLIST WITH   * *SBG\n*                  A PARM OF 'NOREPLACE'.  TO DO REPLACE BY      * *SBG\n*                  DEFAULT, USE NO PARM.  I ALSO CHANGED THE     * *SBG\n*                  SEQUENCE NUMBERING TO INCREMENTS BY 10000     * *SBG\n*                  TO BE MORE STANDARD IN ISPF SITUATIONS.       * *SBG\n*                  ANYONE WHOSE SHOP HAS CLISTS OF MORE THAN     * *SBG\n*                  9999 LINES, CAN EASILY MAKE THE SMALL         * *SBG\n*                  ADJUSTMENTS IN THIS PROGRAM.  OR RENUMBER     * *SBG\n*                  THE ONE OR TWO CONVERTED CLISTS THAT ARE BAD. * *SBG\n*                  BUG FIXED:  VB RECORDS WITH RDW OF LESS THAN  * *SBG\n*                  12 (I.E.) BLANKS IN SEQNO FIELD CAUSED        * *SBG\n*                  TROUBLE.  I JUST PUT OUT A BLANK LINE.        * *SBG\n*                                  S.GOLOB                       * *SBG\n*                                                                * *SBG\n****************************************************************** *SBG\n         EJECT      ,                                              *SBG\n*FUNCTION      CONVERT  CLISTS FROM 255 LRECL VB TO 80 LRECL FB\n*              OR VICE-VERSA\n*I/O           SYSUT1  INPUT CLIST\n*              SYSUT2  OUTPUT CLIST\n*              SYSPRINT LISTING\n*NOTE          VB CLISTS HAVE SEQUENCE NUMBERS IN POS 1-8\n*              FB IN 73-80\n*              RETURN CODE\n*              8 JOB TERMINATED BEFORE START OF COPY\n*              12 JOB TERMINATED AFTER START OF COPY\n*\n         EJECT                                                     *SBG\n         MACRO\n         SYMBR\n**                           EQUATES FOR SYMBOLIC REG USAGE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nRA       EQU   10\nRB       EQU   11\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         MEND\n         MACRO\n&NAME    GETPARM\n&NAME    L     15,4(13)  GET ADDRESS OF THE PREVIOUS SAVE AREA\nKFBR&SYSNDX L    14,4(15)   GET ADDRESS OF THE NEXTPREVIOUS SAVE AREA\n         LTR   14,14     ARE WE IN THE O/S SAVEAREA?\n         BZ    KFBN&SYSNDX  YES GO TEST PARM\n         LR    15,14   NO, MAKE 15 = 14 AND BE READY FOR NEXT TEST\n         B     KFBR&SYSNDX   BRANCH BACK TO THE LOOP\nKFBN&SYSNDX L     14,24(15)  WE ARE NOW IN O/S. GOODY GOODY\n         L     14,0(14)   LOAD IN THE ADDRESS OF THE ADDRESS\n         SR    1,1\n         SR    15,15\n         LH    15,0(14)   PUT COUNT OF PARM INTO R15\n         LTR   15,15   IS COUNT OF PARM= 0?\n         BZ    *+8    YES, DO NOT PUT ADDRESS OF PARM INTO R1\n         LA    1,2(14)\n*   AT THIS POINT THE COUNT OF THE PARM FIELD IS IN REGISTER 15.\n*   IF REGISTER 15 IS = TO 0, REGISTER 1 WILL ALSO BE SET TO ZERO\n*   IF THERE IS A POSITIVE VALUE IN REGISTER 15, THERE WILL BE A\n*   VALID ADDRESS IN REGISTER 1, WHICH WILL BE A ADDRESS OF THE ACTUAL\n*   PARM FIELD DATA.\n         MEND\n         EJECT\n         MACRO\n&NAME    SAVEX &AREA,&BASE,&VERSION,&INIT,&TESTRAN\n.* DPHQ SYSTEM/360 - OPERATING SYSTEM SSS\n.* V4M0 DECEMBER 2, 1966 F. W. VOSS\n         LCLA  &A1\n         LCLC  &TEST\n&TEST    SETC  '&AREA'(1,5)\n         AIF   ('&AREA' NE '').GD1\n         MNOTE 12,'SAVE AREA NAME MISSING - NO GEN'\n         MEXIT\n.GD1     ANOP\n&A1      SETA  &BASE\n         USING *,15\n&NAME    B     22(0,15)            BRANCH AROUND ID\n         DC    FL1'18'\n         AIF   ('&NAME' NE '').GD2\n         DC    CL9'&SYSECT'        IDENTIFIER\n         AGO   .CT1\n.GD2     DC    CL9'&NAME'          IDENTIFIER\n.CT1     DC    CL8'&VERSION'       VERSION\n         STM   14,12,12(13)        SAVE REGISTERS\n         ST    13,&AREA+4               CHAIN FORWARD\n         CNOP  0,4\n         AIF   (&A1 GT 2).MV2\n         AIF   (&A1 EQ 2).GD3\n         AGO   .CT5\n.MV2     MNOTE 'INVALID BASE REQUEST - USING 2'\n         AGO   .GD3\n.CT5     ANOP\n         BAL   13,&AREA+72    SETUP SAVE AREA POINTER AND BASE\n         DROP  15\n         USING *,13                     ESTABLISH ADDRESSABILITY\n&AREA    DC    18F'0'              SAVE AREA\n         L     15,&AREA+4\n         ST    13,8(0,15)               CHAIN BACK\n         AGO   .CT7\n.GD3     ANOP\n         BAL   13,&AREA+76    SETUP SAVE AREA POINTER AND BASE\n         DROP  15\n         USING *,13,12                  ESTABLISH ADDRESSABILITY\n&AREA    DC    18F'0'              SAVE AREA\n         DC    AL4(&AREA+4096)\n         L     15,&AREA+4\n         ST    13,8(0,15)               CHAIN BACK\n         L     12,&AREA+72              ESTABLISH 2ND BASE\n.CT7     ANOP\n         AIF   ('&INIT' EQ '').CT9\n.CT9     ANOP\n         AIF   ('&TESTRAN' EQ '').CT6\n         AIF   ('&TESTRAN' EQ 'TEST').CT8\n         MNOTE 'INVALID TESTRAN EDIT REQUEST'\n         AGO   .CT6\n.CT8     ANOP\n*                            TESTRAN SPIE MACRO\n         SPIE  &TEST.EXT,((1,15))\n         B     &TEST.ABE     BRANCH AROUND TESTRAN DUMP\n         SPACE 2\n&TEST.EXT BALR 15,0          ESTABLISH ADDRESSABILITY FOR TESTRAN ABEND\n         DROP  13\n         USING *,15\n         MVC   &TEST.PSW,4(1) MOVE OLD PSW FROM PIE\n*                            TESTRAN ABEND MACRO\n&TEST.ERR ABEND 4444,DUMP\n&TEST.PSW DC   XL8'0'        OLD PROGRAM PSW ON PROGRAM INTERRUPT\n         DROP  15\n         USING &AREA,13      REESTABLISH CSECT ADDRESSABILITY\n&TEST.ABE EQU  *\n.CT6     ANOP\n         SPACE 2\n         MEND\n         EJECT                                                10/90 SBG\n*FUNCTION      CONVERT  CLISTS FROM 255 LRECL VB TO 80 LRECL FB\n*              OR VICE-VERSA\n*I/O           SYSUT1  INPUT CLIST\n*              SYSUT2  OUTPUT CLIST\n*              SYSPRINT LISTING\n*NOTE          VB CLISTS HAVE SEQUENCE NUMBERS IN POS 1-8\n*              FB IN 73-80\n*              RETURN CODE\n*              8 JOB TERMINATED BEFORE START OF COPY\n*              12 JOB TERMINATED AFTER START OF COPY\n*\n*        R13   FIRST BASE REGISTER\n*        R11   RETURN\n*        R10   DCB TEMPLATE\n*        R9    SECOND BASE REGISTER\n*        R7    OUTPUT POINTER\n*        R6    INPUT POINTER\n*        R5    LENGTH CODE\n*        R4    INPUT START OF BLOCK\n*        R3    OUTPUT START OF BLOCK\n************************************************************* 10/90 SBG\n         SPACE 6                                              10/90 SBG\n* ---------------------------------------------------------*  10/90 SBG\n         SPACE 3                                              10/90 SBG\n* ---->>>   SET THIS GLOBAL TO ADJUST PRINT LINES PER PAGE.   10/90 SBG\n         SPACE 2                                              10/90 SBG\n         GBLC  &LINPPG                                        10/90 SBG\n&LINPPG  SETC  '60'               DEFAULT LINES PER PAGE      10/90 SBG\n         SPACE 3                                              10/90 SBG\n* ---------------------------------------------------------*  10/90 SBG\n         EJECT                                                10/90 SBG\n         SYMBR\nTEST20   EQU   X'20'\n         EJECT\nCVTCLIST CSECT\n*    SET UP MORE THAN ONE BASE REGISTER.  R13 AND R9.         10/90 SBG\n*        SAVEX SAVEAREA,1,VERS-2.1     ELIMINATE THE MACRO    10/90 SBG\n         USING *,R15                   BASE R15 TO START      10/90 SBG\n         B     CVTSTART                BR OVER LITERALS       10/90 SBG\n         DC    CL9'CVTCLIST'                                  10/90 SBG\n         DC    CL12'VERSION 2.1'                              10/90 SBG\n         DC    CL9'&SYSDATE'                                  10/90 SBG\n         DC    CL8'&SYSTIME'                                  10/90 SBG\nCVTSTART STM   R14,R12,12(R13)         SAVE REGISTERS         10/90 SBG\n         ST    R13,SAVEAREA+4          CHAIN FORWARD          10/90 SBG\n         CNOP  0,4                                            10/90 SBG\n         LA    R9,SAVEAREA+1           START SECOND BASE      10/90 SBG\n         LA    R9,4095(,R9)            FINISH SECOND BASE     10/90 SBG\n         BAL   R13,SAVEAREA+72         SAVEAREA PTR & 1ST BASE10/90 SBG\n         DROP  R15                                            10/90 SBG\n         USING *,R13,R9                                       10/90 SBG\nSAVEAREA DC    18F'0'                  SAVE AREA              10/90 SBG\n         L     R15,SAVEAREA+4                                 10/90 SBG\n         ST    R13,8(0,R15)            CHAIN BACK             10/90 SBG\n         SPACE 3\n         STM   R14,R1,SAVEMREG    SAVE REGS USED BY GETPARM   10/90 SBG\n         GETPARM                                              10/90 SBG\n         LTR   R15,R15            TEST IF WE HAVE A PARM      10/90 SBG\n         BZ    CVTNOPRM           NO PARM - STOW WITH REPLACE 10/90 SBG\n         OI    FLAGG,STOWADD      YES PARM - STOW WITH ADD    10/90 SBG\n         MVC   DSNLODEF(2),=C'NO'   SHOW THIS RUN IS NORPLACE 10/90 SBG\nCVTNOPRM LM    R14,R1,SAVEMREG    RESTORE THE REGS BACK       10/90 SBG\n         OPEN  (CLISTIN,(INPUT))\n         SPACE\n         OPEN  (CLISTOUT,(OUTPUT))\n         SPACE\n         USING IHADCB,R10\n*    GET DATASET NAMES TO PUT INTO THE REPORT HEADINGS.       10/90 SBG\nREADJIN  RDJFCB CLISTIN                 MOVE JFCB TO AREA     10/90 SBG\n         LTR   R15,R15                  DDNAME SHOULD BE THERE10/90 SBG\n         BNZ   INERROR                  IF NOT, FLAG          10/90 SBG\n         ST    R7,SAVE7REG              SAVE R7               10/90 SBG\n         LA    R7,JFCBDATA              POINT TO JFCB AREA    10/90 SBG\n         USING JFCBLK,R7                MAP THE AREA          10/90 SBG\n         MVC   DSNAMIN(44),JFCBDSNM     MOVE THE IN DSNAME    10/90 SBG\n         DROP  R7                                             10/90 SBG\n         L     R7,SAVE7REG              RESTORE R7            10/90 SBG\nREADJOUT RDJFCB CLISTOUT                SAME FOR OUTPUT FILE  10/90 SBG\n         LTR   R15,R15                                        10/90 SBG\n         BNZ   OUTERROR                                       10/90 SBG\n         ST    R7,SAVE7REG                                    10/90 SBG\n         LA    R7,JFCBDATA                                    10/90 SBG\n         USING JFCBLK,R7                                      10/90 SBG\n         MVC   DSNAMOUT(44),JFCBDSNM                          10/90 SBG\n         DROP  R7                                             10/90 SBG\n         L     R7,SAVE7REG                                    10/90 SBG\nINITGOON BAL   R11,OPENPRNT             OPEN PRINT FILE.      10/90 SBG\n         BAL   R11,WRITETIT             WRITE INITIAL TITLE   10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK             WRITE BLANK LINES     10/90 SBG\n         LA    R10,CLISTIN              USE DCB NAMES FOR INPUT DCB\n         BAL   R11,TESTVORF\n         BAL   R11,GETMAIN              GET CORE FOR INPUT BLOCK\n         LR    R4,R1                    SAVE INPUT BLOCK ADDRESS\n         LA    R10,CLISTOUT             USE DCB NAMESFOR  OUTPUT DCB\n         BAL   R11,TESTVORF\n         BAL   R11,GETMAIN              GETMAIN FOR OUTPUT BLOCK\n         LR    R3,R1                    SAVE OUTPUT BLOCK ADDRESS\n         TM    SWITCH,X'80'             IF 1 FILE IS F AND 1 V\n         BO    SAVEOUT                    CONTINUE\n         MVC   ERRORMSG,MSG3\n         MVC   RC,=H'8'\n         B     WRITERR\n         SPACE 2\nTESTVORF EQU   *\n         TM    DCBRECFM,X'C0'           CHECK FOR V OR F\n         BM    CONTVF                   IF NOT V OR F ERROR\n         MVC   ERRORMSG,MSG1\n         MVC   RC,=H'08'\n         B     WRITERR\nCONTVF   TM    DCBRECFM,X'80'           IF V\n         BZ    EXITVORF                   EXIT\n         XI    SWITCH,X'80'             FIRST F TURNS ON-SECOND OFF\n         CLC   DCBLRECL,=H'80'          IF F AND LRECL NOT = 80\n         BE    EXITVORF                   THEN ERROR\n         MVC   ERRORMSG,MSG2\n         MVC   RC,=H'8'\n         B     WRITERR\nEXITVORF BR    R11                      RETURN\n         SPACE 2\nGETMAIN  EQU   *\n         LH    R0,DCBBLKSI              GET CORE F0R PROCESSING AN\n         GETMAIN R,LV=(0)                 INPUT BL0CK\n         SPACE\n         BR    R11\n         SPACE 2\nSAVEOUT  EQU   *                       SAVE DATA FOR MAINLINE\n         MVC   OUTBLKSI,DCBBLKSI\n         LR    R7,R3                   INITIALIZE OUTPUT POINTER\n         TM    DCBRECFM,X'80'          IF OUTPUT IS V\n         BZ    SAVEIN                    SAVE INPUT END OF BLOCK\n         OI    SWITCH,TEST20           ELSE SET INPUT SWITCH TO V\n         LH    R12,DCBBLKSI\n         LA    R12,0(R12,R3)           SAVE OUTPUT END OF FIXED BLOCK\n         ST    R12,ENDF\n         LA    R10,CLISTIN\n         B     INITREAD\n         SPACE\nSAVEIN   LA    R10,CLISTIN\n         LH    R12,DCBBLKSI            SAVE INPUT END OF FIXED BLOCK\n         LA    R12,0(R12,R4)\n         ST    R12,ENDF\n         LH    R12,OUTBLKSI            SAVE MAXIMUM END OF OUTPUT\n         LA    R12,0(R12,R3)             VARIABLE BLOCK\n         ST    R12,ENDV\n         LA    R7,4(R7)                POINT PAST BLK COUNT FOR V\n         SPACE 2\nINITREAD EQU   *\n         CLOSE (CLISTIN)\n         MVI   DCBRECFM,X'C0'          SET INPUT RECFM TO U\n         MVI   CLISTOUT+36,X'C0'       SET OUTPUT RECFM TO U\n         OPEN  (CLISTIN,(INPUT))\nREADDIR  EQU   *\n         OI    SWITCH,X'40'             SET DIRECTORY READ ON\n         READ  DECB1,SF,CLISTIN,DIRIN,256\n         CHECK DECB1\n         NOTE CLISTIN\n         XI    DIRSW,X'FF'             SINCE SAVETTR POINTS TO\n         CLI   DIRSW,X'00'             BEGINNING OF DIRECTORY, READ\n         BE    READDIR                 TWICE AFTER FIRST READ.\n         SPACE\n         ST    R1,SAVETTR              SAVE POINTER TO DIRECTORY\n         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG\n         LH    R7,DIRIN\n         STH   R7,DIRLEFT               SAVE DIRECTORY LENGTH\n         LA    R7,DIRIN+2\n         ST    R7,NEXTMEM\n         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG\n         SPACE 2\nGETMEM   EQU   *                        GET BLOCK OF DATA\n         ZAP   SEQCOUNT,=P'0'           ZERO OUT SEQUENCE COUNT FOR MEM\n         L     R8,NEXTMEM               LOAD ADDRESS OF MEMBER NAME\n         CLC   HIVALUE,0(R8)            IF MEMBER NAM = HIVALUES\n         BE    EOJ           GO TO END OF JOB WITHOUT TITLE   10/90 SBG\n         NI    11(R8),X'9F'             PRESERVE ALIAS IND IF THERE SBG\n         MVC   DIRLIST+11(63),11(R8)    MOVE USER DATA TO DIRLIST\n         MVC   NAME,0(R8)               PUT NAME IN OUTPUT DIRECT LIST\n         NI    11(R8),X'1F'    KEEP ONLY USERDATA SIZE BITS   11/90 SBG\n         SR    R12,R12                  CLEAR REGISTER\n         IC    R12,11(R8)               LOAD # OF HALFWORDS OF USERDATA\n         LA    R12,12(R12,R12)          DOUBLE AND ADD 12\n         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG\n         LA    R7,0(R12,R8)             COMPUTENEXT MEMBER DIR ADDA\n         ST    R7,NEXTMEM               SAVE ADDRESS OF NEXT MEMBER\n         LH    R7,DIRLEFT               COMPUTE BYTES LEFT IN\n         SR    R7,R12                     DIRECTORY\n         STH   R7,DIRLEFT\n         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG\n         NI    11(R8),X'00'             CLEAR C  OF TTRC\n         LA    R8,8(R8)                 LOAD ADDRESS OF TTR\n         NI    SWITCH,X'BF'             TURN DIRECTORY READ SW  OFF\n         POINT CLISTIN,(8)\n         SPACE\n         LH    R8,DCBBLKSI              LOAD INPUT BLKSIZE\nREADBLK  READ  DECB2,SF,CLISTIN,(4),(8)\n         SPACE\n         CHECK DECB2\n         SPACE\n         TM    SWITCH,TEST20           IF INPUT IS F\n         BZ    FTOV                      CONVERT FIXED TO VARIABLE\n         SPACE 2\nVTOF     EQU   *\n         MVI   NMADFBVB,C'F'           SHOW MEMBER CONV TO FB 10/90 SBG\n         MVI   NMREFBVB,C'F'           SHOW MEMBER CONV TO FB 10/90 SBG\n         MVC   VARTITLE,VARTOFIX       SHOW CONV IS VAR TO FIX10/90 SBG\n         LH    R12,0(R4)               ADD BLKSIZE AND STARTING\n         AR    R12,R4                    ADDRESS\n         ST    R12,ENDV                  GIVING  ENDING ADDRESS\n         LR    R6,R4                   LOAD POINTER TO V INPUT\n         LA    R6,4(R6)                POINT TO FIRST LRECL\n         SPACE\nGETREC   MVC   HALFWORD,0(R6)\n         LH    R5,HALFWORD\n         CH    R5,=H'255'              IF LRECL IS GREATER THAN 256\n         BL    PASTRDW                   ERROR                     *SBG\n         MVC   ERRORMSG,MSG4             MESSAGE\n         MVC   RC,=H'12'                 RETURN CODE\n         B     WRITERR\nPASTRDW  CH    R5,=H'12'               IS LRECL MORE THAN 8?  10/90 SBG\n         BH    PASTRDWG      OK-THEN VALID CLIST DATA IS HERE 10/90 SBG\n         MVC   REC80(80),REC80-1       CLEAR OUTPUT TO BLANKS 10/90 SBG\n         BAL   R11,WRITEF              WRITE THE BLANK RECORD 10/90 SBG\n         LA    R6,0(R5,R6)   INCREMENT RECD PTR BY TRUE LRECL 10/90 SBG\n         B     NOTSPLIT                KEEP ON TRUCKIN'       10/90 SBG\nPASTRDWG SH    R5,=H'12'               POINT PAST 4 BYTE LRECL AND *SBG\n         LA    R6,12(R6)                 8 BYTE LINE SEQUENCE FIELD\n         SPACE\nLOOPREC  STH   R5,LRECL                SAVE LRECL\n         LA    R12,0(R5,R6)            POINT TO LAST BYTE OF REC   *SBG\n         ST    R12,SAVEWREG            SAVE END OF RECORD          *SBG\n         ST    R5,SAVECREG             SAVE BYTES TO BE MOVED.     *SBG\n         ST    R4,SAVE4REG             SAVE REG 4 CONTENTS. WKREG. *SBG\n         LA    R4,0                    COUNTER FOR MOVE            *SBG\nBACKLOOP CR    R4,R5                   LIMITED SEARCH FOR TRL BLNKS*SBG\n         BNL   FOUNDTE                 YES. NO NON-BLANKS IN RECD  *SBG\n         CH    R4,=H'70'               LIMITED SEARCH FOR TRL BLNKS*SBG\n         BH    FOUNDTE                 YES. NO NON-BLANKS IN RECD  *SBG\n         CLI   0(R12),C' '             IS LAST BYTE A BLANK?       *SBG\n         BNE   FOUNDTE                 NO. FOUND TRUE END FOR CLIST*SBG\n         LA    R4,1(,R4)               BUMP COUNTER                *SBG\n         BCTR  R12,0                   GO BACK ONE CHARACTER  10/90 SBG\n         B     BACKLOOP                KEEP TRYING                 *SBG\nFOUNDTE  SR    R5,R4                                               *SBG\n         L     R4,SAVE4REG             RESTORE REGISTER 4.         *SBG\n         CH    R5,=H'72'         IF LRECL 71 NOT COUNTING TR BLNKS *SBG\n         BH    SPLITREC                THEN SPLIT RECORD           *SBG\n         BE    EXACT72           EXACTLY 72 CHARS-SPECIAL TREATMENT*SBG\n         L     R5,SAVECREG             RESTORE R5, AND THEN        *SBG\n         BCTR  R5,0                    MAKE LENGTH CODE ADJUSTMENT\nSKIPLOOP L     R12,SAVEWREG            RESTORE REGISTER 12.        *SBG\n         MVC   REC80,REC80-1           CLEAR RECORD AREA           *SBG\n         EX    R5,MOVE80               MOVE RECORD                 *SBG\n         BAL   R11,WRITEF\n         LA    R5,1(R5)\n         LA    R6,0(R5,R6)             INCREMENT CURRET POINTER BY LENG\nNOTSPLIT C     R6,ENDV         *SBG    IF ADDRESS POINTER IS LESS THAN\n         BL    GETREC                    END ADDRESS GO TO GETREC\n         B     READBLK                 ELSE READ A BLOCK\n         SPACE 2\nEXACT72  LH    R5,=H'71'               DON'T DROP LAST CHARACTER   *SBG\n         LA    R12,0(R5,R6)       ADDRESS OF END OF REC TO BE MOVE *SBG\n         MVC   REC80,REC80-1           CLEAR OUTPUT RECORD         *SBG\n         B     MOVEMOUT                NO CONTINUATION CHARACTER   *SBG\nSPLITREC EQU   *\n         LH    R5,=H'70'                                           *SBG\nSPLTLOOP LA    R12,0(R5,R6)       ADDRESS OF END OF REC TO BE MOVE\n         MVC   REC80,REC80-1           CLEAR OUTPUT RECORD\n         MVI   REC80+71,C'-'           MOVE IN CONTUATION CHARACTER SBG\n         AP    MEMSPLTS,=P'1'     INCREMENT COUNT OF SPLITS   10/90 SBG\n         AP    TOTSPLTS,=P'1'     INCREMENT COUNT OF SPLITS   10/90 SBG\nMOVEMOUT EX    R5,MOVE80               MOVE TO WRITE AREA          *SBG\n         BAL   R11,WRITEF\n         LA    R12,1(R5)               ADD 1 REC LENGTH OF RECORD  *SBG\n         LH    R5,LRECL                  WRITTEN\n         SR    R5,R12                  SUBTRACT FROM LRECL\n         LA    R6,0(R12,R6)            INCREMENT IPOINTER BY LENGTH\n* IF LRECL IS EXACTLY 72, WE CAN COME HERE. NOW WE TEST FOR THAT.  *SBG\n         LTR   R5,R5          ARE WE ACTUALLY AT THE END OF A RECD?*SBG\n         BZ    NOTSPLIT       YES. DON'T ACT TO SPLIT THE RECORD.  *SBG\n         B     LOOPREC                 FINISH RECORD\n         SPACE\nWRITEF   EQU   *\n         AP    SEQCOUNT,=P'10000'      PLACE SEQUENCE NUMBER IN\n         UNPK  REC80+72(8),SEQCOUNT      POSITIONS 73-80\n         MVI   REC80+79,C'0'           MAKE LAST POS CHAR ZERO\n         MVI   REC80+78,C'0'           MAKE NEXT TO LAST CHAR ZERO\n         MVI   REC80+77,C'0'           SAME FOR THE\n         MVI   REC80+76,C'0'           TWO BEFORE\n         MVC   0(80,R7),REC80          MOVE RECORD TO OUTPUT\n         LA    R7,80(R7)               INCREMENT POINTER\n         C     R7,ENDF                 IF POINTER IS LESS THAN ENDOFBLK\n         BCR   4,R11                     RETURN\n         SR    R7,R3                   LOAD BLKSIZE\n         B     WRITEOUT                ELSE WRITEOUT BLOCK\n         SPACE 2\nFTOV     EQU   *\n         MVI   NMADFBVB,C'V'           SHOW MEMBER CONV TO VB 10/90 SBG\n         MVI   NMREFBVB,C'V'           SHOW MEMBER CONV TO VB 10/90 SBG\n         MVC   VARTITLE,FIXTOVAR       SHOW CONV IS FIX TO VAR10/90 SBG\n         LA    R12,0(R8,R4)            FIND END OF BLOCK ADRESS\n         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG\n         L     R7,DECB2+16             LOAD IOB ADDRESS\n         LH    R7,14(R7)               LOAD LENGTH BLOCK IS SHORT\n         SR    R12,R7                  SUBTRACT FROM END OF FULL BLK\n         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG\n         ST    R12,ENDF                  GIVING REAL END OF BLOCK\n         LR    R6,R4                   POINT TO START OF INPUT BLOCK\nNEXTFREC EQU   *\n         LA    R5,71(R6)               POINT TO LAST CHAR          *SBG\nLOOPFV   EQU   *\n         CLI   0(R5),C' '              FIND LAST NON BLANK CHARACTER\n         BNE   FOUNDATA\n         BCTR  R5,0\n         B     LOOPFV\n         SPACE\nFOUNDATA EQU   *\n         SR    R5,R6                   SUBTRACT START FROM END GIV LENG\n         CH    R5,=H'1'\n         BH    WRITEV              IF LENGTH CODE IS LESS THAN 1   *SBG\n         LA    R5,1                      USE 1\nWRITEV   EQU   *            DO NOT PLAY GAMES WITH CONTIN CHARACTRS*SBG\n         LA    R12,13(R5,R7)           LOAD ADDRESS END OF OUTPUT REC\n         C     R12,ENDV                IF ENDOFREC IS LESS THAN ENDOFBL\n         BNH   EXMOVEV                   MOVE DATA\n         SR    R7,R3                   ELSE FIND BLK LENGTH\n         STH   R7,0(R3)                  STORE IN OUTPUT BLOCK\n         BAL   R11,WRITEOUT              WRITE BLOCK\n         LA    R7,4(R7)                  POINT PAST OUTPUT BLK COUNT\n         SPACE\nEXMOVEV  EQU   *\n         EX    R5,MOVEV                MOVE DATA TO OUTPUT BLOCK\n         AP    SEQCOUNT,=P'10000'      PUT SEQUENCE NUMBER\n         UNPK  4(8,R7),SEQCOUNT          IN OUTPUT DATA SET\n         MVI   11(R7),C'0'             MAKE LAST DIGIT CHARACTER 0\n         MVI   10(R7),C'0'             MAKE NEXT TO LAST DIGIT CHAR 0\n         MVI   9(R7),C'0'              SAME FOR THE\n         MVI   8(R7),C'0'              TSO BEFORE\n         LA    R5,13(R5)               ADD 13 TO LEN CNT GIVING LRECL\n         STH   R5,HALFWORD\n         MVC   0(4,R7),HALFWORD        STORE LRECL IN OUTPUT BLOCK\n         LA    R7,0(R5,R7)             INCREMENT OUTPUT POINTER\n         LA    R6,80(R6)               INCREMENT  INPUT POINTER\n         C     R6,ENDF                 IF LESS THAN END OF BLOCK\n         BL    NEXTFREC                  GET NEXT RECORD\n         B     READBLK                 ELSE GET NEXT BLOCK\n         SPACE 2\nWRITEOUT EQU   *\n         WRITE DECBA,SF,CLISTOUT,(R3),(R7)    WRITE OUT BLOCK\n         SPACE\n         CHECK DECBA\n         SPACE\n         LR    R7,R3                   SET POINTER TO START OF BLOCK\n         BR    R11\nSTOWOUT  EQU   *\n         TM    SWITCH,TEST20           IF V TO F\n         BO    STOWVTOF                  CHECK FOR SHORT BLOCK\n         SR    R7,R3                   FIND BLOCK LENGTH\n         STH   R7,0(R3)                STORE IN BDW\n         MVC   2(2,R3),=H'0'           ZERO OUT REST OF BDW\n         B     SHORTBLK                WRITE OUT BLOCK\nSTOWVTOF CR    R3,R7                   IF OUTPUT BLOCK IS EMPTY\n         BE    *+10                      SKIP WRITING SHORT BLOCK\n         SR    R7,R3                   LOAD BLOCK LENGTH\nSHORTBLK BAL   R11,WRITEOUT            WRITE SHORT BLOCK\n         TM    SWITCH,X'40'            IF DIRECTORY READ\n         BO    EOJ                       GO TO  EOJ\nBUMPSTTS DS    0H         BUMP ISPF STATS IF WE SPLIT LINES.  10/90 SBG\n         ST    R8,SAVE8REG             SAVE R8 FOR WORK       10/90 SBG\n         LA    R8,DIRLIST              LOAD R8 FOR MAPPING    10/90 SBG\n         USING DIRSECT,R8              MAP DIRECTORY WKAREA   10/90 SBG\n* DO WE HAVE SPF STATS LEGITIMATELY?  THEN BUMP LINE COUNT.   10/90 SBG\n         TM    DIRFLAG,DIRSPFOF CK FOR BITS THAT SHOULD BE OFF10/90 SBG\n         BNZ   ALISTEST         THEY'RE NOT: NO SPF STATS     10/90 SBG\n         TM    DIRFLAG,DIRSPFON CK FOR BITS THAT SHOULD BE ON 10/90 SBG\n         BNO   ALISTEST         THEY'RE NOT: NO SPF STATS     10/90 SBG\n         CLI   DIRSPFCR,0       00 OF 00YYDDDF ZEROS?         10/90 SBG\n         BNZ   ALISTEST         NO, BRANCH                    10/90 SBG\n         CLI   DIRSPFCD,0       00 OF OTHER 00YYDDDF ZERO?    10/90 SBG\n         BNZ   ALISTEST         NO, BRANCH                    10/90 SBG\n* ALL TESTS PASSED: ASSUME WE HAVE SPF STATS                  10/90 SBG\n         ST    R7,SAVE7REG             SAVE R7 FOR WORK       10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   BYPASADD         NO. DON'T INCREMENT STATS.    10/90 SBG\n         ZAP   PACKWORK,MEMSPLTS   MOVE TO WKAREA FOR CVB     10/90 SBG\n         CVB   R7,PACKWORK      CONVERT NO OF SPLITS TO BINARY10/90 SBG\n         AH    R7,DIRSPFSI      ADD ORIGINAL NO OF RECORDS    10/90 SBG\n         STH   R7,DIRSPFSI      STORE UPDATED COUNT IN DIRECT 10/90 SBG\nBYPASADD L     R7,SAVE7REG             RESTORE R7             10/90 SBG\n         DROP  R8                                             10/90 SBG\nALISTEST L     R8,SAVE8REG             RESTORE R8             10/90 SBG\n         NI    FLAGG,255-ALIASED       RESET ALIAS FLAG       10/90 SBG\n         TM    DIRLIST+11,X'80'        IS MEMBER AN ALIAS?    10/90 SBG\n         BNO   GOSTOW                  NO, DON'T COUNT IT     10/90 SBG\n         OI    FLAGG,ALIASED           FLAG AS ALIAS          10/90 SBG\n         NI    DIRLIST+11,X'7F'        TURN OFF ALIAS BEFORE STOW   SBG\nGOSTOW   DS    0H                                             10/90 SBG\n         TM    FLAGG,STOWADD           THIS A NOREPLACE RUN?  10/90 SBG\n         BO    STOWAD                  YES--STOW ADD ONLY     10/90 SBG\n         B     STOWREP                 NO --STOW REPLACE      10/90 SBG\n         EJECT                                                10/90 SBG\nSTOWREP  STOW  CLISTOUT,DIRLIST,R       STOW WITH REPLACE     10/90 SBG\n         SPACE 2\n         B     STOWEND(R15)\nSTOWEND  B     CHEKREPL                 GOOD REPLACE          10/90 SBG\n         NOP   ERRA\n         B     CHEKCOPY                 GOOD MEMBER ADD       10/90 SBG\n         B     ERRB\n         B     ERRC\n         NOP   ERRA\nERRD     MVC   ERRORMSG,MSGD\n         B     ERR\nERRC     MVC   ERRORMSG,MSGC\n         B     ERR\nERRB     MVC   ERRORMSG,MSGB\n         B     ERR\nERRA     MVC   ERRORMSG,MSGA\n         B     ERR                                            10/90 SBG\nINERROR  MVC   ERRORMSG,MSGRJI                                10/90 SBG\n         MVC   RC,=H'04'                                      10/90 SBG\n         B     WRITERR                                        10/90 SBG\nOUTERROR MVC   ERRORMSG,MSGRJO                                10/90 SBG\n         MVC   RC,=H'04'                                      10/90 SBG\n         B     WRITERR                                        10/90 SBG\nERR      MVC   RC,=H'12'\n         B     WRITERR\n         SPACE 2\n         EJECT                                                10/90 SBG\nSTOWAD   STOW  CLISTOUT,DIRLIST,A       STOW WITH ADD         10/90 SBG\n         SPACE 2                                              10/90 SBG\n         B     STOWENDA(R15)                                  10/90 SBG\nSTOWENDA B     CHEKCOPY                 GOOD REPLACE          10/90 SBG\n         B     CHEKNORE                 NO REPLACE            10/90 SBG\n         NOP   ERRBA                                          10/90 SBG\n         B     ERRBA                                          10/90 SBG\n         B     ERRCA                                          10/90 SBG\n         NOP   ERRAA                                          10/90 SBG\nERRDA    MVC   ERRORMSG,MSGD                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERRCA    MVC   ERRORMSG,MSGC                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERRBA    MVC   ERRORMSG,MSGB                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERRAA    MVC   ERRORMSG,MSGA                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERA      MVC   RC,=H'12'                                      10/90 SBG\n         B     WRITERR                                        10/90 SBG\n         EJECT                                                10/90 SBG\nCHEKCOPY AP    OUTCOUNT,=P'1'          COUNT MEMBERS ADDED    10/90 SBG\n         MVC   NMADDED(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG\n         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG\n         BNO   CHEKCNTA                NO, DON'T FLAG         10/90 SBG\n         AP    ALIASCNT,=P'1'          YES, COUNT FOR TOTALS  10/90 SBG\n         MVC   NMADSLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG\nCHEKCNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG\n         BZ    CHEKCNCN                NOT VTOF - NO SPLITS   10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   CHEKCNCN                NO-DON'T REPORT SPLITS 10/90 SBG\n         MVC   NMADPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG\n         ED    NMADPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG\n         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG\n         MVC   NMADSLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG\nCHEKCNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG\n         BH    CHEKCLIN                NO - GO PRINT MEM LINE 10/90 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG\nCHEKCLIN MVC   PRTLINE,MEMLINEA        MOVE IN MSG TO LINE    10/90 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG\n         MVC   NMADSLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG\n         MVC   NMADPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG\n         B     AFTRSTOW                DON'T POP OTHER COUNT  10/90 SBG\nCHEKREPL AP    OUTCOUN2,=P'1'          COUNT MEMBERS REPLACED 10/90 SBG\n         MVC   NMREPLD(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG\n         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG\n         BNO   CHEKRNTA                NO, DON'T FLAG         10/90 SBG\n         AP    ALIASCNT,=P'1'          YES, COUNT FOR TOTALS  10/90 SBG\n         MVC   NMRESLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG\nCHEKRNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG\n         BZ    CHEKRNCN                NOT VTOF - NO SPLITS   10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   CHEKRNCN                NO-DON'T REPORT SPLITS 10/90 SBG\n         MVC   NMREPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG\n         ED    NMREPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG\n         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG\n         MVC   NMRESLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG\nCHEKRNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG\n         BH    CHEKRLIN                NO - GO PRINT MEM LINE 10/90 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG\nCHEKRLIN MVC   PRTLINE,MEMLINER        MOVE IN MSG TO LINE    10/90 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG\n         MVC   NMRESLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG\n         MVC   NMREPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG\n         B     AFTRSTOW                DON'T POP OTHER COUNT  10/90 SBG\nCHEKNORE BAL   R11,STOWADEL       DO A DUMMY STOW AND DELETE  10/90 SBG\n************************************************************* 10/90 SBG\n*    DUMMY STOW-DELETE IS FOR WRITING OUT THE CONVERTED     * 10/90 SBG\n*    RECORDS THAT ARE NOT GOING TO BE LEGITIMATELY STOWED,  * 10/90 SBG\n*    BECAUSE OF THE NO-REPLACE FUNCTION.  THIS SOLUTION     * 10/90 SBG\n*    TO THE PROBLEM OF HOW TO HANDLE NON-REPLACED RECORDS   * 10/90 SBG\n*    REQUIRES A COMPRESS OF THE OUTPUT DATASET AT THE END   * 10/90 SBG\n*    OF THE CONVERSION.  THE REASON FOR THAT DESIGN WAS :   * 10/90 SBG\n*                                                           * 10/90 SBG\n*    THE NON-REPLACED RECORDS ARE ACTUALLY CONVERTED.       * 10/90 SBG\n*    IN CONVERTING THE RECORDS, ONE CAN DISCOVER ALIAS      * 10/90 SBG\n*    CONDITIONS AND REPORT THE NUMBER OF LINE SPLITS, ETC.  * 10/90 SBG\n*    THESE THINGS ARE REPORTED ON A MEMBER LEVEL, ALTHOUGH  * 10/90 SBG\n*    THEY ARE NOT ADDED TO THE SUMMARY TOTALS.              * 10/90 SBG\n*                                                           * 10/90 SBG\n*    ALSO, ONE MIGHT WANT TO RESTORE DELETED MEMBERS UNDER  * 10/90 SBG\n*    DIFFERENT NAMES, USING A UTILITY SUCH AS \"PDS\" OR      * 10/90 SBG\n*    \"PDS/E\" OR \"PDSGAS\".  THE ALTERNATE COPY OF THE CLIST  * 10/90 SBG\n*    WITH THE \"SAME NAME\" MIGHT ALSO BE A GOOD PIECE OF     * 10/90 SBG\n*    WORK THAT IS WORTH SAVING.                             * 10/90 SBG\n*                                                           * 10/90 SBG\n*    ANYONE WHO COMES UP WITH A BETTER IDEA THAT WORKS,     * 10/90 SBG\n*    IS WELCOME TO USE IT.                                  * 10/90 SBG\n************************************************************* 10/90 SBG\n         AP    OUTCOUN3,=P'1'          COUNT MEMBERS NOT REPLD10/90 SBG\n         MVC   NMREPLD(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG\n         MVC   NMREREPL(15),NMRENORE   REPORT NOT RPLD MEMBER 10/90 SBG\n         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG\n         BNO   CHEKNNTA                NO, DON'T FLAG         10/90 SBG\n         MVC   NMRESLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG\n*                  DO NOT POP THE ALIAS COUNT FOR NONREPLACED 10/90 SBG\nCHEKNNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG\n         BZ    CHEKNNCN                NOT VTOF - NO SPLITS   10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   CHEKNNCN                NO-DON'T REPORT SPLITS 10/90 SBG\n         SP    TOTSPLTS,MEMSPLTS       THESE SPLITS NOT TOTLED10/90 SBG\n         MVC   NMREPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG\n         ED    NMREPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG\n         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG\n         MVC   NMRESLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG\nCHEKNNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG\n         BH    CHEKNLIN                NO - GO PRINT MEM LINE 10/90 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG\nCHEKNLIN MVC   PRTLINE,MEMLINER        MOVE IN MSG TO LINE    10/90 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG\n         MVC   NMRESLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG\n         MVC   NMREPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG\nAFTRSTOW TM    SWITCH,TEST20           IF V TO F              10/90 SBG\n         BO    *+8                        CHECK DIRECTORY\n         LA    R7,4(R7)                ELSE ADD 4 BYTES FOR OUTPUT BDW\n         LA    R12,2\n         CH    R12,DIRLEFT             IF DIRECTORY BLOCK IS NOT EMPTY\n         BL    GETMEM                     GET NEXT MEMBER\n         POINT CLISTIN,SAVETTR          ELSE READ NEW DIRECTORY\n         SPACE\n         B     READDIR\n         SPACE 2\nWRITERR  EQU   *\n*        BAL   R11,WRITETIT                                   10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         LH    R12,RC              DUMP                       10/90 SBG\n         CVD   R12,WORK               RETURN CODE             10/90 SBG\n         UNPK  RCP,WORK                  INTO                 10/90 SBG\n         OI    RCP+1,X'F0'                  ERROR LINE        10/90 SBG\n         AP    LINCOUNT,=P'3'                                 10/90 SBG\n         MVC   PRTLINE,ERRLINE\n         BAL   R11,PUTPRINT\n         CLC   RC,=H'12'               IF COPY STARTED\n         BNE   EXIT                      PRINT TOTALS\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTP\n         TM    FLAGG,STOWADD        IS THIS NOREPLACE RUN?    10/90 SBG\n         BO    BRNORPLX             YES--REPORT ITS TOTALS    10/90 SBG\n         BAL   R11,COUNTP2          PRINT NO OF MEMBERS REPLD 10/90 SBG\n         B     BRTOTX               GO SHOW TOTAL MEMBERS     10/90 SBG\nBRNORPLX BAL   R11,COUNTP3          PRINT NO OF MEM NOT REPLD 10/90 SBG\nBRTOTX   BAL   R11,SHOWTOTS         SHOW TOTAL NUMBER OF MEMB 10/90 SBG\n         BAL   R11,TOTALIAS         SHOW TOTAL OF ALIAS MEMBS 10/90 SBG\n         TM    SWITCH,TEST20        IS THIS V TO F ?          10/90 SBG\n         BZ    *+16                 NO - DON'T PRINT SPLT TOTS10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTOTS         PRINT TOTAL LINE SPLITS   10/90 SBG\n         BAL   R11,MSGSTATS         PRINT STATS UPDATE MESSAGE10/90 SBG\n         B     EXIT\n         SPACE 2\nEOJ      BAL   R11,WRITETIT\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         LH    R12,RC              DUMP                       10/90 SBG\n         CVD   R12,WORK               RETURN CODE             10/90 SBG\n         UNPK  RCP,WORK                  INTO                 10/90 SBG\n         OI    RCP+1,X'F0'                  ERROR LINE        10/90 SBG\nEOJNORM  MVC   ERRORMSG(37),=C' COPY COMPLETE    -    SUMMARY REPORT'\n         AP    LINCOUNT,=P'3'                                 10/90 SBG\n         MVC   PRTLINE,ERRLINE\n         BAL   R11,PUTPRINT\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTP\n         TM    FLAGG,STOWADD        IS THIS NOREPLACE RUN?    10/90 SBG\n         BO    BRNORPL              YES--REPORT ITS TOTALS    10/90 SBG\n         BAL   R11,COUNTP2          PRINT NO OF MEMBERS REPLD 10/90 SBG\n         B     BRTOT                GO SHOW TOTAL MEMBERS     10/90 SBG\nBRNORPL  BAL   R11,COUNTP3          PRINT NO OF MEM NOT REPLD 10/90 SBG\nBRTOT    BAL   R11,SHOWTOTS         SHOW TOTAL NUMBER OF MEMB 10/90 SBG\n         BAL   R11,TOTALIAS         SHOW TOTAL OF ALIAS MEMBS 10/90 SBG\n         TM    SWITCH,TEST20        IS THIS V TO F ?          10/90 SBG\n         BZ    *+16                 NO - DON'T PRINT SPLT TOTS10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTOTS         PRINT TOTAL LINE SPLITS   10/90 SBG\n         BAL   R11,MSGSTATS         PRINT STATS UPDATE MESSAGE10/90 SBG\n         SPACE 2\nEXIT     EQU   *\n         CLOSE (CLISTIN,,CLISTOUT,,PRINT)\n         LH    R15,RC                  LOAD RETURN CODE\n         L     R13,SAVEAREA+4\n         LM    R0,R12,20(R13)          RESTORE REGS 0-12\n         L     R14,12(R13)             RESTORE REG 14\n         BR    R14\n         SPACE 2\nOPENPRNT EQU   *                                              10/90 SBG\n         OPEN  (PRINT,(OUTPUT))\n         BR    R11                                            10/90 SBG\nWRITETIT AP    PAGCOUNT,=P'1'        INCREMENT PAGE COUNT     10/90 SBG\n         ZAP   LINCOUNT,=P'1'        RE-START  LINE COUNT     10/90 SBG\n         MVC   PAGENUM,EDPATT1                                10/90 SBG\n         ED    PAGENUM,PAGCOUNT                               10/90 SBG\n         MVC   PRTLINE,TITLE                                  10/90 SBG\n         B     PUTPRINT\nPRTBLANK AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,BLANKLIN         SKIP SOME LINES       10/90 SBG\n         B     PUTPRINT                 WRITE EM              10/90 SBG\nSHOWTOTS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ZAP   TOTCOUNT,OUTCOUNT     ADD ADDED TO TOTAL       10/90 SBG\n         AP    TOTCOUNT,OUTCOUN2     ADD REPLD TO TOTAL       10/90 SBG\n         ED    OUTP1,TOTCOUNT        EDIT TOTAL CONVERTED     10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG03 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C'0'         SKIP ONE LINE            10/90 SBG\n         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nWRINDSN  MVC   DSNLINAM,DSNAMIN      MOVE DSNAME TO LINE      10/90 SBG\n         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,DSNLINEI      MOVE LINE TO PRINT       10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nWROUTDSN MVC   DSNLONAM,DSNAMOUT     MOVE DSNAME TO LINE      10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,DSNLINEO      MOVE LINE TO PRINT       10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nMSGSTATS MVC   COUNTLMS(46),PRTMSG06 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVC   OUTP1(8),BLANKLIN+1   BLANK NUMBER AREA        10/90 SBG\n         MVI   COUNTLNC,C' '         GO TO NEXT LINE ONLY     10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nTOTALIAS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,ALIASCNT        EDIT TOTAL ALIAS NUMBER  10/90 SBG\n         MVC   COUNTLMS(46),PRTMSG05 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C'0'         SKIP ONE LINE            10/90 SBG\n         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTOTS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,TOTSPLTS        EDIT TOTAL LINE SPLITS   10/90 SBG\n         MVC   COUNTLMS(46),PRTMSG04 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C'-'         SKIP TWO LINES           10/90 SBG\n         AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTP   MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,OUTCOUNT        EDIT NUMBER OF ADDED     10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG01 MOVE SPECIAL MESSAGE     10/90 SBG\n         AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTP2  MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,OUTCOUN2        EDIT NUMBER OF REPLACED  10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG02 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C' '         NO LINE SKIP             10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTP3  MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,OUTCOUN3        EDIT NUMBER OF REPLACED  10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG07 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C' '         NO LINE SKIP             10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\nPUTPRINT PUT   PRINT,PRTLINE\n         MVC   PRTLINE(121),PRTLINE-1  CLEAR AREA AFTER PRINT 10/90 SBG\nCOUNTPEN BR    R11                                            10/90 SBG\n         SPACE 2\nSTOWADEL STM   R14,R1,SAVEMREG         SAVE REGISTERS R14-R1  10/90 SBG\n         MVC   NAMESAVE(8),NAME        SAVE REAL NAME         10/90 SBG\n         MVC   NAME(8),NAMEDUM       FAKE NAME FOR DUMMY STOW 10/90 SBG\n         STOW  CLISTOUT,DIRLIST,A      STOW DUMMY MEMBER      10/90 SBG\n         STOW  CLISTOUT,DIRLIST,D      DELETE THE DUMMY MEMBR 10/90 SBG\n         MVC   NAME(8),NAMESAVE  RESTORE REAL NAME FOR REPORT 10/90 SBG\n         LM    R14,R1,SAVEMREG         RESTORE SAVED REGISTRS 10/90 SBG\n         BR    R11                     RETURN TO CALLER       10/90 SBG\n         SPACE 2\n*EXECUTED INSTRUCTIONS\nMOVEV    MVC   12(1,R7),0(R6)\nMOVE80   MVC   REC80(1),0(R6)\n         EJECT\nCLISTIN  DCB   DSORG=PO,MACRF=R,DDNAME=SYSUT1,EODAD=STOWOUT,EXLST=JFCB1\n         SPACE 2\nCLISTOUT DCB   DSORG=PO,MACRF=W,DDNAME=SYSUT2,EXLST=JFCB2\n         SPACE 2\nPRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,            X\n               LRECL=121,BLKSIZE=605\n         EJECT\n*WORK FIELDS\n         SPACE\nWORK     DC    D'0'\nPACKWORK DC    PL8'0'         WORK AREA FOR CVB INSTRUCTION   10/90 SBG\n*                        HAS TO BE 8 BYTES FOR CVB INSTRUCTION10/90 SBG\nFULLWORD DS    0F\nHALFWORD DC    H'0'\n         DC    H'0'\nSAVETTR  DC    F'0'\nREADADD  DC    F'0'\nENDV     DC    F'0'\nENDF     DC    F'0'\nSAVERTN  DC    F'0'\nNEXTMEM  DC    F'0'\nSAVECREG DC    F'0'                                                *SBG\nSAVEWREG DC    F'0'                                                *SBG\nSAVEMREG DC    4F'0'          SAVE R14, R15, R0, R1                *SBG\nSAVE4REG DC    F'0'                                                *SBG\nSAVE7REG DC    F'0'                                                *SBG\nSAVE8REG DC    F'0'                                                *SBG\nOUTCOUNT DC    PL4'0'                  COUNT FOR COPIED       10/90 SBG\nOUTCOUN2 DC    PL4'0'                  COUNT FOR REPLACED     10/90 SBG\nOUTCOUN3 DC    PL4'0'                  COUNT FOR NOT REPLACED 10/90 SBG\nALIASCNT DC    PL4'0'            ALIAS COUNT - CONV TO REAL   10/90 SBG\nTOTCOUNT DC    PL4'0'           TOTALS COUNT FOR CONVERTED    10/90 SBG\nMEMSPLTS DC    PL4'0'    MEMBER LEVEL COUNTER FOR SPLIT LINES 10/90 SBG\nTOTSPLTS DC    PL4'0'          TOTALS COUNTER FOR SPLIT LINES 10/90 SBG\nLINCOUNT DC    PL4'0'          LINE COUNTER FOR PAGE EJECTS   10/90 SBG\nLINCHANG DC    PL4'&LINPPG'    END OF PAGE COUNT              10/90 SBG\nPAGCOUNT DC    PL4'0'          PAGE COUNTER                   10/90 SBG\nALWZERO  DC    PL4'0'         ALWAYS ZERO - KEEP LENGTH = 4   10/90 SBG\nSAVEHALF DC    H'0'                                                *SBG\nOUTBLKSI DC    H'0'\nDIRLEFT  DC    H'0'\nBLKIN    DC    H'0'\nRECIN    DC    H'0'\nRC       DC    H'0'\nLRECL    DC    H'0'\nDIRSW    DC    X'00'\nSWITCH   DC    XL1'00'\nFLAGG    DC    XL1'00'                                        10/90 SBG\nALIASED  EQU   X'80'              ORIGINAL MEMBER IS AN ALIAS 10/90 SBG\nSTOWADD  EQU   X'40'              STOW ADD USED - NOT REPLACE 10/90 SBG\nNAMESAVE DC    CL8'        '      USED TO SAVE REAL MEM NAME  10/90 SBG\nHIVALUE  DC    XL8'FFFFFFFFFFFFFFFF'\nSEQCOUNT DC    PL4'0'\n         SPACE\n         DS    0F\nDIRIN    DS    CL256                   DIRECTORY BLOCK\n         SPACE\n         DS    0F                                             10/90 SBG\nDIRDUMMY DS    0CL12                    DUMMY DIRECTORY       10/90 SBG\nNAMEDUM  DC    XL8'FEFEFEFEFEFEFEFE'    RECORD FOR STOW ADD   10/90 SBG\nTTRDUM   DS    XL3                      AND STOW DELETE.      10/90 SBG\nCDUM     DC    CL1'00'                                        10/90 SBG\n         SPACE\n         DS    0F\nDIRLIST  DS    0CL74                   DIRECTORY RECORD\nNAME     DC    CL8' '\nTTR      DS    CL3\nC        DS    CL1\nUSEADATA DS    CL62\n         SPACE\n         DS    0F                ALIGNMENT OF EXIT LIST       10/90 SBG\nJFCB1    DC    X'07',AL3(JFCBDATA)                            10/90 SBG\nJFCB2    DC    X'07',AL3(JFCBDATA)                            10/90 SBG\n         DC    X'80',AL3(0)                                   10/90 SBG\n*         DC    CL1' '    THIS STUFF WAS MOVED TO THE END.    10/90 SBG\n*REC80    DS    CL80      PROBLEM WITH OVERLAYING PRINT AREA. 10/90 SBG\n         SPACE 2\n*PRINT DATA\n         SPACE\nTITLE    DS    0CL121                                         10/90 SBG\n         DC    CL52'1        CLIST CONVERSION PROGRAM - VERSION 2.1 '\nVARTITLE DC    CL14'FB-VB OR VB-FB'                           10/90 SBG\n         DC    CL16' TRANSFORMATION '                         10/90 SBG\n         DC    CL19' '                    FILLER              10/90 SBG\nPAGELIT  DC    CL5'PAGE '                                     10/90 SBG\nPAGENUM  DC    CL8' '                                         10/90 SBG\n         DC    CL7' '                                         10/90 SBG\n*\nDSNLINEI DS    0CL121                                         10/90 SBG\nDSNLILIT DC    CL34'0          INPUT  DATASET NAME :  '       10/90 SBG\nDSNLINAM DC    CL44' '                                        10/90 SBG\n         DC    CL43' '                                        10/90 SBG\n*\nDSNLINEO DS    0CL121                                         10/90 SBG\nDSNLOLIT DC    CL34'           OUTPUT DATASET NAME :  '       10/90 SBG\nDSNLONAM DC    CL44' '                                        10/90 SBG\n         DC    CL1' '                                         10/90 SBG\nDSNLODEF DC    CL42'  REPLACE IS DEFAULT'                     10/90 SBG\n*\nBLANKLIN DS    0CL121                                         10/90 SBG\n         DC    CL121'-'        BLANK LINES AFTER TITLE        10/90 SBG\n*\nERRLINE  DS    0CL121\n         DC    CL29'-                         RC='\nRCP      DC    CL2'  '\n         DC    CL5' '\nERRORMSG DC    CL37' '\n         DC    CL48' '\n*                                                             10/90 SBG\nCOUNTLN1 DS    0CL121                                         10/90 SBG\nCOUNTLNC DC    CL23'-'                                        10/90 SBG\nOUTP1    DC    CL8' '                                         10/90 SBG\nCOUNTLMS DC    CL90'  '                                       10/90 SBG\n*                                                             10/90 SBG\nMEMLINEA DS    0CL121          LINE TO REPORT ADDED MEMBERS   10/90 SBG\n         DC    CL12' '         FILLER                         10/90 SBG\nNMADDED  DC    CL9' '          NAME OF ADDED MEMBER           10/90 SBG\n         DC    CL19'  MEMBER IN OUTPUT '                      10/90 SBG\nNMADFBVB DC    CL3' B'                                        10/90 SBG\n         DC    CL26'LIBRARY  **  ADDED      **'               10/90 SBG\nNMADPATT DC    CL8'  '         SPOT FOR COUNT OF SPLIT LINES  10/90 SBG\nNMADSLIT DC    CL44' '         SPOT FOR SPLIT LINE LITERAL    10/90 SBG\n*                                                             10/90 SBG\nMEMLINER DS    0CL121          LINE TO REPORT REPLACED MEMBERS10/90 SBG\n         DC    CL12' '         FILLER - OFFSET NAME OF MEMBER 10/90 SBG\nNMREPLD  DC    CL9' '          NAME OF REPLACED MEMBER        10/90 SBG\n         DC    CL19'  MEMBER IN OUTPUT '                      10/90 SBG\nNMREFBVB DC    CL3' B'                                        10/90 SBG\n         DC    CL11'LIBRARY  **'                              10/90 SBG\nNMREREPL DC    CL15'  REPLACED   **'                          10/90 SBG\nNMREPATT DC    CL8'  '         SPOT FOR COUNT OF SPLIT LINES  10/90 SBG\nNMRESLIT DC    CL44' '         SPOT FOR SPLIT LINE LITERAL    10/90 SBG\n*                                                             10/90 SBG\n         DC    CL1' '          BLANK FOR CLEARING PRINT LINE  10/90 SBG\nPRTLINE  DS    CL121           \"THE\" OUTPUT LINE AREA         10/90 SBG\n         SPACE\nEDPATT1  DC    XL8'4020202020202120' PATTERN FOR SPLIT LINES  10/90 SBG\nLINSPLIT DC    CL14' LINE SPLITS  '\nFIXTOVAR DC    CL14'FIX TO VAR BLK'\nVARTOFIX DC    CL14'VAR TO FIX BLK'\nNMRENORE DC    CL15'  NOREPLACE  **'                          10/90 SBG\nMSG1     DC    CL37'FILE NOT V OR F'\nMSG2     DC    CL37'F FORMAT MUST BE LRECL 80'\nMSG3     DC    CL37'INPUT AND OUTPUT CANNOT BE SAME RECFM'\nMSG4     DC    CL37'V RECORD WITH LRECL OVER 256'\nMSGA     DC    CL37'DUPLICATE NAME ON DIRECTORY-SYSUT2'\nMSGB     DC    CL37'DIRECTORY OUT OF SPACE'\nMSGC     DC    CL37'I/O ERROR ON SYSUT2 DIRECTORY'\nMSGD     DC    CL37'PROGRAM REGION TOO SMALL'\nMSGRJI   DC    CL37'DDNAME IS MISSING IN THE INPUT DCB'\nMSGRJO   DC    CL37'DDNAME IS MISSING IN THE OUTPUT DCB'\nPRTMSG01 DC    CL37'  CONVERTED MEMBERS ADDED           '     10/90 SBG\nPRTMSG02 DC    CL37'  CONVERTED MEMBERS REPLACED        '     10/90 SBG\nPRTMSG03 DC    CL37'  TOTAL NUMBER OF MEMBERS CONVERTED '     10/90 SBG\nPRTMSG04 DC    CL46'  TOTAL OF LONG LINE SPLITS IN THIS CONVERSION' SBG\nPRTMSG05 DC    CL46'  TOTAL NUMBER OF ALIASES CONVERTED TO MEMBERS' SBG\nPRTMSG06 DC    CL46'  EXISTING MEMBER ISPF STATISTICS ARE UPDATED ' SBG\nPRTMSG07 DC    CL37'  CONVERTED MEMBERS NOT REPLACED    '     10/90 SBG\nALIASMSG DC    CL11' WAS ALIAS'                               10/90 SBG\nDSNAMIN  DC    CL44' '              INPUT  DSNAME             10/90 SBG\nDSNAMOUT DC    CL44' '              OUTPUT DSNAME             10/90 SBG\n         LTORG\n         EJECT                                                10/90 SBG\nDIRSECT  DSECT\n* THIS IS A DESCRIPTION OF PDS DIRECTORY ENTRY FIELDS.        10/90 SBG\n* GRACIOUSLY BORROWED FROM PDS 8.4 CODE.  COURTESY OF S.SMITH 10/90 SBG\nDIRLINK  DS    0F             ***   DIRECTORY AREA MAPPING  ***\nDIRNAME  DS    CL8\nDIRTTR   DS    XL3\nDIRFLAG  DS    X\nDIRSPFOF EQU   B'01110000'         BITS ARE OFF IN SPF STATS\nDIRSPFON EQU   B'00001111'         BITS ARE ON IN SPF STATS\nDIRALIAS EQU   X'80'          MEMBER IS AN ALIAS\nDIR2TTR  EQU   X'40'          TWO TTR'S TO UPDATE\nDIR1TTR  EQU   X'20'          ONE TTR TO UPDATE\nDIRUSER  DS    XL62\n         ORG   DIRUSER  FOLLOWING FOR LOAD MODULES\nDIRSTART DS    XL4            TTR OF FIRST TEXT BLOCK\nDIRNOTE  DS    XL3            TTR OF NOTELIST\nDIRNOTE# DS    X              NUMBER OF NOTELIST ENTRIES\nDIRATTR  DS    XL2            MEMBER ATTRIBUTES\nDIRSTORE DS    XL3            SIZE OF LOAD MODULE\nDIRTEXTL DS    XL2            LENGTH OF 1ST TEXT RECORD\nDIREPA   DS    XL3            ENTRY POINT ADDRESS\nDIRATTR2 DS    X          ADDITIONAL ATTRIBUTE BYTES:\nDIRAOSLE EQU   X'80'          VS LINKAGE EDITOR CREATED THIS MODULE\nDIR2PAGA EQU   X'20'          PAGE ALIGNMENT REQUIRED FOR THIS MODULE\nDIR2SSI  EQU   X'10'          SSI INFORMATION IS PRESENT FOR MODULE\nDIRAPFLG EQU   X'08'          APF INFORMATION FOR THIS MODULE IS VALID\nDIRATTR3 DS    X          ADDITIONAL ATTRIBUTE BYTES:\nDIRRMANY EQU   X'10'          RMODE=ANY\nDIRAA31  EQU   X'08'          AMODE=31 (ALIAS ENTRY)\nDIRAA24  EQU   X'04'          AMODE=24 (ALIAS ENTRY)\nDIRAM31  EQU   X'02'          AMODE=31 (MAIN ENTRY)\nDIRAM24  EQU   X'01'          AMODE=24 (MAIN ENTRY)\nDIRATTR4 DS    X              COUNT OF RLD ENTRIES AFTER FIRST TEXT\n         SPACE 1\nDIRAPF   DS    0XL2           APF (IF NOT SCAT, SSI OR ALIAS)\nDIREP    DS    XL3            ENTRY POINT (MAIN MEMBER)\nDIRREAL  DS    CL8            REAL NAME OF MEMBER\nDIRAPF2  DS    XL2            APF INFORMATION (ALIAS, NO SCAT OR SSI)\nDIREND2  EQU   *              END OF ALIAS SECTION\n         ORG   DIRAPF    FOLLOWING FOR SCATTER LOADED MEMBERS\nDIRSCLL  DS    XL2            LENGTH OF SCATTER LIST\nDIRSCTL  DS    XL2            LENGTH OF TRANSLATE TABLE\nDIRSCET  DS    XL2            ESDID OF FIRST TEXT RECORD\nDIRSCEP  DS    XL2            ESDID OF ENTRY POINT\nDIRAPF3  DS    0XL2           APF (IF SCAT, NO SSI AND NO ALIAS)\nDIREPSC  DS    XL3            ENTRY POINT (MAIN MEMBER)\nDIRREALS DS    CL8            REAL NAME OF MEMBER\nDIRAPF4  DS    XL2            APF INFORMATION (SCAT, NO SSI AND ALIAS)\nDIREND3  EQU   *              END OF SCATTER, ALIAS SECTION\n*\n         ORG   DIRUSER   FOLLOWING FOR MODULES SAVED BY SPF EDIT\nDIRSPFV  DS    XL1            VERSION NUMBER IN BINARY\nDIRSPFR  DS    XL1            REVISION NUMBER IN BINARY\nDIRSPFZ  DS    XL2            NOT CURRENTLY USED\nDIRSPFCR DS    XL4            CREATION DATE IN FORMAT 00YYDDDF\nDIRSPFCD DS    XL4            LAST CHANGE DATE IN FORMAT 00YYDDDF\nDIRSPFCT DS    XL2            LAST CHANGE TIME IN FORMAT HHMM\nDIRSPFSI DS    XL2            CURRENT SIZE IN BINARY\nDIRSPFIN DS    XL2            INITIAL SIZE IN BINARY\nDIRSPFMD DS    XL2            MODIFIED LINES IN BINARY\nDIRSPFID DS    CL8            ID OF LAST PERSON TO UPDATE\n*                             END OF SPF SECTION\nCVTCLIST CSECT                                                10/90 SBG\nJFCBDATA DC    CL176' '\n         DC    CL1' '               MOVED TO END BECAUSE OF   10/90 SBG\nREC80    DS    CL80                 BAD EXMOVE.  R5 PROB BAD. 10/90 SBG\n*                            KEEP THE REC80 WORKAREA LAST.    10/90 SBG\n         EJECT                                                10/90 SBG\nDCBDUM   DCBD  DSORG=PO,DEVD=DA\n         EJECT                                                10/90 SBG\nJFCBLK   DSECT\n         IEFJFCBN LIST=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CVTCLS22": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x903\\x1f\\x00\\x932\\x8f\\x140\\x04\\xd4\\x04\\xd4\\x00\\x01\\xe5\\xc5\\xd9\\xe2`\\xf2\\xf2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-11-27T00:00:00", "modifydate": "1993-11-24T14:30:00", "lines": 1236, "newlines": 1236, "modlines": 1, "user": "VERS-22"}, "text": "CNVT     TITLE 'CLIST LIBRARY CONVERSION PROGRAM: FB-VB, VB-FB'    *SBG\n****************************************************************** *SBG\n*                                                                * *SBG\n*     THIS IS AN ASSEMBLER PROGRAM TO CONVERT ENTIRE CLIST       * *SBG\n*     LIBRARIES FROM THE 80 BYTE - FIXED BLOCKED FORMAT, WITH    * *SBG\n*     SEQUENCE NUMBERS IN COLUMNS 73-80, TO THE OTHER CLIST      * *SBG\n*     FORMAT:  255-BYTE - VARIABLE BLOCKED RECORDS, WITH THE     * *SBG\n*     SEQUENCE NUMBERS IN COLUMNS 1-8 OF THE DATA PORTION OF     * *SBG\n*     EACH RECORD, AND VICE-VERSA.  THE PROGRAM GOES BOTH WAYS.  * *SBG\n*                                                                * *SBG\n*     MY HOPE IS THAT THIS PROGRAM WILL ELIMINATE THE GREAT      * *SBG\n*     LABOR AND UNCERTAINTY THAT IS INVOLVED IN ANY CLIST        * *SBG\n*     FORMAT CONVERSIONS, NO MATTER WHICH KIND THEY ARE.         * *SBG\n*                                                                * *SBG\n*     THE SYSUT1 DATASET IS INPUT, AND THE SYSUT2 DATASET IS     * *SBG\n*     OUTPUT.  THE PROGRAM EXAMINES THE DCB INFORMATION FROM     * *SBG\n*     EACH DDNAME, AND FIGURES OUT WHICH WAY THE CONVERSION      * *SBG\n*     SHOULD PROCEED.  ALL MEMBERS ARE CONVERTED IN ONE RUN      * *SBG\n*     OF THE PROGRAM.  RESULTS ARE REPORTED IN THE SYSPRINT DD.  * *SBG\n*                                                                * *SBG\n*     CVTCLIST CAN BE EXECUTED TWO WAYS:  EITHER IN REPLACE MODE * *SBG\n*     OR IN NOREPLACE MODE.  IN REPLACE MODE, ANY EXISING MEMBER * *SBG\n*     IN THE OUTPUT LIBRARY WILL BE REPLACED.  IN NOREPLACE      * *SBG\n*     MODE, AN EXISTING MEMBER WILL NOT BE REPLACED.  REPLACE    * *SBG\n*     MODE IS THE DEFAULT.  NOREPLACE MODE IS SET WHEN THE       * *SBG\n*     PROGRAM IS EXECUTED WITH ANY PARM IN THE EXEC STATEMENT.   * *SBG\n*                                                                * *SBG\n*     THE ORIGINAL MVS VERSION OF THIS PROGRAM WAS SUBMITTED     * *SBG\n*     TO THE CBT MVS MODS TAPE, FILE 187, BY BOB COLLINS OF THE  * *SBG\n*     FIRST NATIONAL BANK OF CHICAGO.  VERSION 2.1 INCORPORATES  * *SBG\n*     MANY FIXES OF BUGS, THE INTRODUCTION OF \"REPLACE\" AND      * *SBG\n*     \"NOREPLACE\" MODES, AND MANY REPORTING ENHANCEMENTS.        * *SBG\n*                                                                * *SBG\n*     THE VB TO FB FUNCTION OF THE PROGRAM (SYSUT1 DD DATASET    * *SBG\n*     IS OF THE VB TYPE AND THE SYSUT2 DD DATASET IS FB) HAD     * *SBG\n*     MANY BUGS, IN SPLITTING OF THE LONG RECORDS.  SOME NEWLY   * *SBG\n*     CREATED FB CLISTS DID NOT BEHAVE EXACTLY AS DID THE OLD    * *SBG\n*     VB VERSION FROM WHICH THEY WERE MADE.  ALSO, THERE WAS A   * *SBG\n*     RUNAWAY CONDITION WHICH COULD RESULT FROM HAVING LONG      * *SBG\n*     STRINGS IN THE VB FORMAT THAT HAD NO IMBEDDED BLANKS.      * *SBG\n*                                                                * *SBG\n*     I HAVE ATTEMPTED TO FIX THESE BUGS.  I CANNOT GUARANTEE    * *SBG\n*     THAT EVERY CLIST IN THE WORLD WILL CONVERT FLAWLESSLY      * *SBG\n*     UNDER THIS PROGRAM, BUT ITS OPERATION HAS BEEN IMPROVED    * *SBG\n*     BY ORDERS OF MAGNITUDE THROUGH THESE FIXES, HOPEFULLY.     * *SBG\n*                                                                * *SBG\n*     I TRIED TO AVOID MAKING ASSUMPTIONS ABOUT CONTINUATION     * *SBG\n*     CHARACTERS, IN ANY WAY.  THIS GOT THE ORIGINAL AUTHOR      * *SBG\n*     INTO HIS ORIGINAL TROUBLE.                                 * *SBG\n*                                                                * *SBG\n****************************************************************** *SBG\n         EJECT                                                10/90 SBG\n****************************************************************** *SBG\n*                                                                * *SBG\n*     THERE IS ONE PERVERSE CASE THAT I KNOW ABOUT.  IF A VB     * *SBG\n*     CLIST HAS RECORDS WITH TRAILING BLANKS AFTER THE LAST      * *SBG\n*     NON-BLANK CHARACTER, AND THE TRAILING BLANKS EXTEND PAST   * *SBG\n*     DATA COLUMN 72 (REALLY COLUMN 80), THEN THE PROGRAM WILL   * *SBG\n*     SPLIT THE RECORD AND ADD A BLANK LINE.  SOUNDS HARMLESS.   * *SBG\n*                                                                * *SBG\n*     THE BEST WAY TO TEST THIS PROGRAM IS TO CONVERT A LIBRARY  * *SBG\n*     FB-TO-VB-TO-FB, (OR VB-TO-FB-TO-VB), AND ENSURE THAT THE   * *SBG\n*     FINAL LIBRARY COMPARES IDENTICAL TO THE STARTING LIBRARY.  * *SBG\n*                                                                * *SBG\n*                       S.GOLOB - NEWSWEEK, INC.   10/07/89      * *SBG\n*                                 333 ROUTE 46 WEST              * *SBG\n*                                 MOUNTAIN LAKES, NJ 07046       * *SBG\n*                                 (201) 316-2328                 * *SBG\n*                                                                * *SBG\n****************************************************************** *SBG\n*                                                                * *SBG\n*     CHANGE LOG: 10/05/90 - CHANGED THE STOW TO REPLACE FORM    * *SBG\n*                  INSTEAD OF ADD FORM.  THIS ALLOWS CONVERSION  * *SBG\n*                  INTO NON-EMPTY TARGET CLIST LIBRARIES.        * *SBG\n*                  SYSPRINT REPORT HAS BEEN CHANGED ACCORDINGLY. * *SBG\n*                  ADDED VERSION NUMBER 2.0 TO AVOID CONFUSION   * *SBG\n*                  WITH EARLIER VERSIONS OF THIS PROGRAM.        * *SBG\n*                                  S.GOLOB                       * *SBG\n*                                                                * *SBG\n*                 10/15/90 - ADDED SECOND BASE.  VERSION 2.1.    * *SBG\n*                  ADDED CHECK FOR ALIAS IN THE \"FROM\" LIBRARY.  * *SBG\n*                  FLAG MEMBERS AS \"WAS ALIAS\" AND TOTAL ALL     * *SBG\n*                  ALIAS MEMBERS THAT WERE CONVERTED TO REAL     * *SBG\n*                  MEMBERS IN THE \"TO\" LIBRARY.  IF A CONVERTED  * *SBG\n*                  MEMBER HAD LINE SPLITS AND ISPF STATS, BUMP   * *SBG\n*                  THE CURRENT RECORD COUNT IN THE ISPF STATS    * *SBG\n*                  BY THE NUMBER OF LINE SPLITS.  ADD PAGE       * *SBG\n*                  COUNTS AND PAGE EJECTS.  GLOBAL &LINPPG IS    * *SBG\n*                  NUMBER OF LINES PER PAGE.  DEFAULT IS 60.     * *SBG\n*                  ADD DSNAMES TO HEADER OF ALL REPORTS.         * *SBG\n*                                  S.GOLOB                       * *SBG\n*                                                                * *SBG\n*                 10/19/90 - YOU CAN NOW CHOOSE TO DO A STOW     * *SBG\n*                  WITH NOREPLACE.  JUST EXECUTE CVTCLIST WITH   * *SBG\n*                  A PARM OF 'NOREPLACE'.  TO DO REPLACE BY      * *SBG\n*                  DEFAULT, USE NO PARM.  I ALSO CHANGED THE     * *SBG\n*                  SEQUENCE NUMBERING TO INCREMENTS BY 10000     * *SBG\n*                  TO BE MORE STANDARD IN ISPF SITUATIONS.       * *SBG\n*                  ANYONE WHOSE SHOP HAS CLISTS OF MORE THAN     * *SBG\n*                  9999 LINES, CAN EASILY MAKE THE SMALL         * *SBG\n*                  ADJUSTMENTS IN THIS PROGRAM.  OR RENUMBER     * *SBG\n*                  THE ONE OR TWO CONVERTED CLISTS THAT ARE BAD. * *SBG\n*                  BUG FIXED:  VB RECORDS WITH RDW OF LESS THAN  * *SBG\n*                  12 (I.E.) BLANKS IN SEQNO FIELD CAUSED        * *SBG\n*                  TROUBLE.  I JUST PUT OUT A BLANK LINE.        * *SBG\n*                                  S.GOLOB                       * *SBG\n*                                                                * *SBG\n*                 11/27/90 - FIXED BUG. LOSING MEMBERS AFTER     * *SBG\n*                  AN ALIAS MEMBER.  BELOW LABEL GETMEM, AFTER   * *SBG\n*                  THE TWO MVC INSTRUCTIONS.  ADDED:             * *SBG\n*                    NI    11(R8),X'1F'  ONLY KEEP USERDATA SIZE * *SBG\n*                                                                * *SBG\n*                 11/27/90 - WENT TO VERSION 2.2.  MARK MEMBERS  * *SBG\n*                  IN A VB-FB CONVERSION THAT HAVE ALL NUMERICS  * *SBG\n*                  IN COLUMNS 81-88.  THESE MIGHT HAVE ARISEN    * *SBG\n*                  FROM FAULTY CONVERSION FROM FB FORMAT THAT    * *SBG\n*                  HAD BEEN DONE BY HAND, WITH THE PROGRAMMER    * *SBG\n*                  FORGETTING TO DELETE THE OLD SEQUENCE NUMBERS.* *SBG\n*                  OCCURRENCES OF THIS ARE ONLY FLAGGED, NOT     * *SBG\n*                  REMOVED AS YET.  I HOPE TO ADD SUPPORT TO     * *SBG\n*                  STRIP THESE NUMERIC STRINGS OUT, VIA A PARM.  * *SBG\n*                                                                * *SBG\n****************************************************************** *SBG\n         EJECT      ,                                              *SBG\n*FUNCTION      CONVERT  CLISTS FROM 255 LRECL VB TO 80 LRECL FB\n*              OR VICE-VERSA\n*I/O           SYSUT1  INPUT CLIST\n*              SYSUT2  OUTPUT CLIST\n*              SYSPRINT LISTING\n*NOTE          VB CLISTS HAVE SEQUENCE NUMBERS IN POS 1-8\n*              FB IN 73-80\n*              RETURN CODE\n*              8 JOB TERMINATED BEFORE START OF COPY\n*              12 JOB TERMINATED AFTER START OF COPY\n*\n         EJECT                                                     *SBG\n         MACRO\n         SYMBR\n**                           EQUATES FOR SYMBOLIC REG USAGE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nRA       EQU   10\nRB       EQU   11\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         MEND\n         MACRO\n&NAME    GETPARM\n&NAME    L     15,4(13)  GET ADDRESS OF THE PREVIOUS SAVE AREA\nKFBR&SYSNDX L    14,4(15)   GET ADDRESS OF THE NEXTPREVIOUS SAVE AREA\n         LTR   14,14     ARE WE IN THE O/S SAVEAREA?\n         BZ    KFBN&SYSNDX  YES GO TEST PARM\n         LR    15,14   NO, MAKE 15 = 14 AND BE READY FOR NEXT TEST\n         B     KFBR&SYSNDX   BRANCH BACK TO THE LOOP\nKFBN&SYSNDX L     14,24(15)  WE ARE NOW IN O/S. GOODY GOODY\n         L     14,0(14)   LOAD IN THE ADDRESS OF THE ADDRESS\n         SR    1,1\n         SR    15,15\n         LH    15,0(14)   PUT COUNT OF PARM INTO R15\n         LTR   15,15   IS COUNT OF PARM= 0?\n         BZ    *+8    YES, DO NOT PUT ADDRESS OF PARM INTO R1\n         LA    1,2(14)\n*   AT THIS POINT THE COUNT OF THE PARM FIELD IS IN REGISTER 15.\n*   IF REGISTER 15 IS = TO 0, REGISTER 1 WILL ALSO BE SET TO ZERO\n*   IF THERE IS A POSITIVE VALUE IN REGISTER 15, THERE WILL BE A\n*   VALID ADDRESS IN REGISTER 1, WHICH WILL BE A ADDRESS OF THE ACTUAL\n*   PARM FIELD DATA.\n         MEND\n         EJECT\n         MACRO\n&NAME    SAVEX &AREA,&BASE,&VERSION,&INIT,&TESTRAN\n.* DPHQ SYSTEM/360 - OPERATING SYSTEM SSS\n.* V4M0 DECEMBER 2, 1966 F. W. VOSS\n         LCLA  &A1\n         LCLC  &TEST\n&TEST    SETC  '&AREA'(1,5)\n         AIF   ('&AREA' NE '').GD1\n         MNOTE 12,'SAVE AREA NAME MISSING - NO GEN'\n         MEXIT\n.GD1     ANOP\n&A1      SETA  &BASE\n         USING *,15\n&NAME    B     22(0,15)            BRANCH AROUND ID\n         DC    FL1'18'\n         AIF   ('&NAME' NE '').GD2\n         DC    CL9'&SYSECT'        IDENTIFIER\n         AGO   .CT1\n.GD2     DC    CL9'&NAME'          IDENTIFIER\n.CT1     DC    CL8'&VERSION'       VERSION\n         STM   14,12,12(13)        SAVE REGISTERS\n         ST    13,&AREA+4               CHAIN FORWARD\n         CNOP  0,4\n         AIF   (&A1 GT 2).MV2\n         AIF   (&A1 EQ 2).GD3\n         AGO   .CT5\n.MV2     MNOTE 'INVALID BASE REQUEST - USING 2'\n         AGO   .GD3\n.CT5     ANOP\n         BAL   13,&AREA+72    SETUP SAVE AREA POINTER AND BASE\n         DROP  15\n         USING *,13                     ESTABLISH ADDRESSABILITY\n&AREA    DC    18F'0'              SAVE AREA\n         L     15,&AREA+4\n         ST    13,8(0,15)               CHAIN BACK\n         AGO   .CT7\n.GD3     ANOP\n         BAL   13,&AREA+76    SETUP SAVE AREA POINTER AND BASE\n         DROP  15\n         USING *,13,12                  ESTABLISH ADDRESSABILITY\n&AREA    DC    18F'0'              SAVE AREA\n         DC    AL4(&AREA+4096)\n         L     15,&AREA+4\n         ST    13,8(0,15)               CHAIN BACK\n         L     12,&AREA+72              ESTABLISH 2ND BASE\n.CT7     ANOP\n         AIF   ('&INIT' EQ '').CT9\n.CT9     ANOP\n         AIF   ('&TESTRAN' EQ '').CT6\n         AIF   ('&TESTRAN' EQ 'TEST').CT8\n         MNOTE 'INVALID TESTRAN EDIT REQUEST'\n         AGO   .CT6\n.CT8     ANOP\n*                            TESTRAN SPIE MACRO\n         SPIE  &TEST.EXT,((1,15))\n         B     &TEST.ABE     BRANCH AROUND TESTRAN DUMP\n         SPACE 2\n&TEST.EXT BALR 15,0          ESTABLISH ADDRESSABILITY FOR TESTRAN ABEND\n         DROP  13\n         USING *,15\n         MVC   &TEST.PSW,4(1) MOVE OLD PSW FROM PIE\n*                            TESTRAN ABEND MACRO\n&TEST.ERR ABEND 4444,DUMP\n&TEST.PSW DC   XL8'0'        OLD PROGRAM PSW ON PROGRAM INTERRUPT\n         DROP  15\n         USING &AREA,13      REESTABLISH CSECT ADDRESSABILITY\n&TEST.ABE EQU  *\n.CT6     ANOP\n         SPACE 2\n         MEND\n         EJECT                                                10/90 SBG\n*FUNCTION      CONVERT  CLISTS FROM 255 LRECL VB TO 80 LRECL FB\n*              OR VICE-VERSA\n*I/O           SYSUT1  INPUT CLIST\n*              SYSUT2  OUTPUT CLIST\n*              SYSPRINT LISTING\n*NOTE          VB CLISTS HAVE SEQUENCE NUMBERS IN POS 1-8\n*              FB IN 73-80\n*              RETURN CODE\n*              8 JOB TERMINATED BEFORE START OF COPY\n*              12 JOB TERMINATED AFTER START OF COPY\n*\n*        R13   FIRST BASE REGISTER\n*        R11   RETURN\n*        R10   DCB TEMPLATE\n*        R9    SECOND BASE REGISTER\n*        R7    OUTPUT POINTER\n*        R6    INPUT POINTER\n*        R5    LENGTH CODE\n*        R4    INPUT START OF BLOCK\n*        R3    OUTPUT START OF BLOCK\n************************************************************* 10/90 SBG\n         SPACE 6                                              10/90 SBG\n* ---------------------------------------------------------*  10/90 SBG\n         SPACE 3                                              10/90 SBG\n* ---->>>   SET THIS GLOBAL TO ADJUST PRINT LINES PER PAGE.   10/90 SBG\n         SPACE 2                                              10/90 SBG\n         GBLC  &LINPPG                                        10/90 SBG\n&LINPPG  SETC  '60'               DEFAULT LINES PER PAGE      10/90 SBG\n         SPACE 3                                              10/90 SBG\n* ---------------------------------------------------------*  10/90 SBG\n         EJECT                                                10/90 SBG\n         SYMBR\nTEST20   EQU   X'20'\n         EJECT\nCVTCLIST CSECT\n*    SET UP MORE THAN ONE BASE REGISTER.  R13 AND R9.         10/90 SBG\n*        SAVEX SAVEAREA,1,VERS-2.1     ELIMINATE THE MACRO    10/90 SBG\n         USING *,R15                   BASE R15 TO START      10/90 SBG\n         B     CVTSTART                BR OVER LITERALS       10/90 SBG\n         DC    CL9'CVTCLIST'                                  10/90 SBG\n         DC    CL12'VERSION 2.2'                              10/90 SBG\n         DC    CL9'&SYSDATE'                                  10/90 SBG\n         DC    CL8'&SYSTIME'                                  10/90 SBG\nCVTSTART STM   R14,R12,12(R13)         SAVE REGISTERS         10/90 SBG\n         ST    R13,SAVEAREA+4          CHAIN FORWARD          10/90 SBG\n         CNOP  0,4                                            10/90 SBG\n         LA    R9,SAVEAREA+1           START SECOND BASE      10/90 SBG\n         LA    R9,4095(,R9)            FINISH SECOND BASE     10/90 SBG\n         BAL   R13,SAVEAREA+72         SAVEAREA PTR & 1ST BASE10/90 SBG\n         DROP  R15                                            10/90 SBG\n         USING *,R13,R9                                       10/90 SBG\nSAVEAREA DC    18F'0'                  SAVE AREA              10/90 SBG\n         L     R15,SAVEAREA+4                                 10/90 SBG\n         ST    R13,8(0,R15)            CHAIN BACK             10/90 SBG\n         SPACE 3\n         STM   R14,R1,SAVEMREG    SAVE REGS USED BY GETPARM   10/90 SBG\n         GETPARM                                              10/90 SBG\n         LTR   R15,R15            TEST IF WE HAVE A PARM      10/90 SBG\n         BZ    CVTNOPRM           NO PARM - STOW WITH REPLACE 10/90 SBG\n         OI    FLAGG,STOWADD      YES PARM - STOW WITH ADD    10/90 SBG\n         MVC   DSNLODEF(2),=C'NO'   SHOW THIS RUN IS NORPLACE 10/90 SBG\nCVTNOPRM LM    R14,R1,SAVEMREG    RESTORE THE REGS BACK       10/90 SBG\n         OPEN  (CLISTIN,(INPUT))\n         SPACE 1\n         OPEN  (CLISTOUT,(OUTPUT))\n         SPACE 1\n         USING IHADCB,R10\n*    GET DATASET NAMES TO PUT INTO THE REPORT HEADINGS.       10/90 SBG\nREADJIN  RDJFCB CLISTIN                 MOVE JFCB TO AREA     10/90 SBG\n         LTR   R15,R15                  DDNAME SHOULD BE THERE10/90 SBG\n         BNZ   INERROR                  IF NOT, FLAG          10/90 SBG\n         ST    R7,SAVE7REG              SAVE R7               10/90 SBG\n         LA    R7,JFCBDATA              POINT TO JFCB AREA    10/90 SBG\n         USING JFCBLK,R7                MAP THE AREA          10/90 SBG\n         MVC   DSNAMIN(44),JFCBDSNM     MOVE THE IN DSNAME    10/90 SBG\n         DROP  R7                                             10/90 SBG\n         L     R7,SAVE7REG              RESTORE R7            10/90 SBG\nREADJOUT RDJFCB CLISTOUT                SAME FOR OUTPUT FILE  10/90 SBG\n         LTR   R15,R15                                        10/90 SBG\n         BNZ   OUTERROR                                       10/90 SBG\n         ST    R7,SAVE7REG                                    10/90 SBG\n         LA    R7,JFCBDATA                                    10/90 SBG\n         USING JFCBLK,R7                                      10/90 SBG\n         MVC   DSNAMOUT(44),JFCBDSNM                          10/90 SBG\n         DROP  R7                                             10/90 SBG\n         L     R7,SAVE7REG                                    10/90 SBG\nINITGOON BAL   R11,OPENPRNT             OPEN PRINT FILE.      10/90 SBG\n         BAL   R11,WRITETIT             WRITE INITIAL TITLE   10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK             WRITE BLANK LINES     10/90 SBG\n         LA    R10,CLISTIN              USE DCB NAMES FOR INPUT DCB\n         BAL   R11,TESTVORF\n         BAL   R11,GETMAIN              GET CORE FOR INPUT BLOCK\n         LR    R4,R1                    SAVE INPUT BLOCK ADDRESS\n         LA    R10,CLISTOUT             USE DCB NAMESFOR  OUTPUT DCB\n         BAL   R11,TESTVORF\n         BAL   R11,GETMAIN              GETMAIN FOR OUTPUT BLOCK\n         LR    R3,R1                    SAVE OUTPUT BLOCK ADDRESS\n         TM    SWITCH,X'80'             IF 1 FILE IS F AND 1 V\n         BO    SAVEOUT                    CONTINUE\n         MVC   ERRORMSG,MSG3\n         MVC   RC,=H'8'\n         B     WRITERR\n         SPACE 2\nTESTVORF EQU   *\n         TM    DCBRECFM,X'C0'           CHECK FOR V OR F\n         BM    CONTVF                   IF NOT V OR F ERROR\n         MVC   ERRORMSG,MSG1\n         MVC   RC,=H'08'\n         B     WRITERR\nCONTVF   TM    DCBRECFM,X'80'           IF V\n         BZ    EXITVORF                   EXIT\n         XI    SWITCH,X'80'             FIRST F TURNS ON-SECOND OFF\n         CLC   DCBLRECL,=H'80'          IF F AND LRECL NOT = 80\n         BE    EXITVORF                   THEN ERROR\n         MVC   ERRORMSG,MSG2\n         MVC   RC,=H'8'\n         B     WRITERR\nEXITVORF BR    R11                      RETURN\n         SPACE 2\nGETMAIN  EQU   *\n         LH    R0,DCBBLKSI              GET CORE F0R PROCESSING AN\n         GETMAIN R,LV=(0)                 INPUT BL0CK\n         SPACE 1\n         BR    R11\n         SPACE 2\nSAVEOUT  EQU   *                       SAVE DATA FOR MAINLINE\n         MVC   OUTBLKSI,DCBBLKSI\n         LR    R7,R3                   INITIALIZE OUTPUT POINTER\n         TM    DCBRECFM,X'80'          IF OUTPUT IS V\n         BZ    SAVEIN                    SAVE INPUT END OF BLOCK\n         OI    SWITCH,TEST20           ELSE SET INPUT SWITCH TO V\n         LH    R12,DCBBLKSI\n         LA    R12,0(R12,R3)           SAVE OUTPUT END OF FIXED BLOCK\n         ST    R12,ENDF\n         LA    R10,CLISTIN\n         B     INITREAD\n         SPACE 1\nSAVEIN   LA    R10,CLISTIN\n         LH    R12,DCBBLKSI            SAVE INPUT END OF FIXED BLOCK\n         LA    R12,0(R12,R4)\n         ST    R12,ENDF\n         LH    R12,OUTBLKSI            SAVE MAXIMUM END OF OUTPUT\n         LA    R12,0(R12,R3)             VARIABLE BLOCK\n         ST    R12,ENDV\n         LA    R7,4(R7)                POINT PAST BLK COUNT FOR V\n         SPACE 2\nINITREAD EQU   *\n         CLOSE (CLISTIN)\n         MVI   DCBRECFM,X'C0'          SET INPUT RECFM TO U\n         MVI   CLISTOUT+36,X'C0'       SET OUTPUT RECFM TO U\n         OPEN  (CLISTIN,(INPUT))\nREADDIR  EQU   *\n         OI    SWITCH,X'40'             SET DIRECTORY READ ON\n         READ  DECB1,SF,CLISTIN,DIRIN,256\n         CHECK DECB1\n         NOTE CLISTIN\n         XI    DIRSW,X'FF'             SINCE SAVETTR POINTS TO\n         CLI   DIRSW,X'00'             BEGINNING OF DIRECTORY, READ\n         BE    READDIR                 TWICE AFTER FIRST READ.\n         SPACE 1\n         ST    R1,SAVETTR              SAVE POINTER TO DIRECTORY\n         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG\n         LH    R7,DIRIN\n         STH   R7,DIRLEFT               SAVE DIRECTORY LENGTH\n         LA    R7,DIRIN+2\n         ST    R7,NEXTMEM\n         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG\n         SPACE 2\nGETMEM   EQU   *                        GET BLOCK OF DATA\n         ZAP   SEQCOUNT,=P'0'           ZERO OUT SEQUENCE COUNT FOR MEM\n         L     R8,NEXTMEM               LOAD ADDRESS OF MEMBER NAME\n         CLC   HIVALUE,0(R8)            IF MEMBER NAM = HIVALUES\n         BE    EOJ           GO TO END OF JOB WITHOUT TITLE   10/90 SBG\n         NI    11(R8),X'9F'             PRESERVE ALIAS IND IF THERE SBG\n         MVC   DIRLIST+11(63),11(R8)    MOVE USER DATA TO DIRLIST\n         MVC   NAME,0(R8)               PUT NAME IN OUTPUT DIRECT LIST\n         NI    11(R8),X'1F'    KEEP ONLY USERDATA SIZE BITS   11/90 SBG\n         SR    R12,R12                  CLEAR REGISTER\n         IC    R12,11(R8)               LOAD # OF HALFWORDS OF USERDATA\n         LA    R12,12(R12,R12)          DOUBLE AND ADD 12\n         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG\n         LA    R7,0(R12,R8)             COMPUTENEXT MEMBER DIR ADDA\n         ST    R7,NEXTMEM               SAVE ADDRESS OF NEXT MEMBER\n         LH    R7,DIRLEFT               COMPUTE BYTES LEFT IN\n         SR    R7,R12                     DIRECTORY\n         STH   R7,DIRLEFT\n         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG\n         NI    11(R8),X'00'             CLEAR C  OF TTRC\n         LA    R8,8(R8)                 LOAD ADDRESS OF TTR\n         NI    SWITCH,X'BF'             TURN DIRECTORY READ SW  OFF\n         POINT CLISTIN,(8)\n         SPACE 1\n         LH    R8,DCBBLKSI              LOAD INPUT BLKSIZE\nREADBLK  READ  DECB2,SF,CLISTIN,(4),(8)\n         SPACE 1\n         CHECK DECB2\n         SPACE 1\n         TM    SWITCH,TEST20           IF INPUT IS F\n         BZ    FTOV                      CONVERT FIXED TO VARIABLE\n         SPACE 2\nVTOF     EQU   *\n         MVI   NMADFBVB,C'F'           SHOW MEMBER CONV TO FB 10/90 SBG\n         MVI   NMREFBVB,C'F'           SHOW MEMBER CONV TO FB 10/90 SBG\n         MVC   VARTITLE,VARTOFIX       SHOW CONV IS VAR TO FIX10/90 SBG\n         LH    R12,0(R4)               ADD BLKSIZE AND STARTING\n         AR    R12,R4                    ADDRESS\n         ST    R12,ENDV                  GIVING  ENDING ADDRESS\n         LR    R6,R4                   LOAD POINTER TO V INPUT\n         LA    R6,4(R6)                POINT TO FIRST LRECL\n         SPACE\nGETREC   MVC   HALFWORD,0(R6)\n         LH    R5,HALFWORD\n         CH    R5,=H'255'              IF LRECL IS GREATER THAN 256\n         BL    PASTRDW                   ERROR                     *SBG\n         MVC   ERRORMSG,MSG4             MESSAGE\n         MVC   RC,=H'12'                 RETURN CODE\n         B     WRITERR\nPASTRDW  CH    R5,=H'12'               IS LRECL MORE THAN 8?  10/90 SBG\n         BH    PASTRDWG      OK-THEN VALID CLIST DATA IS HERE 10/90 SBG\n         MVC   REC80(80),REC80-1       CLEAR OUTPUT TO BLANKS 10/90 SBG\n         BAL   R11,WRITEF              WRITE THE BLANK RECORD 10/90 SBG\n         LA    R6,0(R5,R6)   INCREMENT RECD PTR BY TRUE LRECL 10/90 SBG\n         B     NOTSPLIT                KEEP ON TRUCKIN'       10/90 SBG\nPASTRDWG SH    R5,=H'12'               POINT PAST 4 BYTE LRECL AND *SBG\n         LA    R6,12(R6)                 8 BYTE LINE SEQUENCE FIELD\nTSTSTRIP DS    0H            CUT IN WHERE YOU HAVE A NEW RECD 11/90 SBG\n         CH    R5,=H'80'               IS LENGTH AT LEAST 80? 11/90 SBG\n         BL    LOOPREC                 NO. DON'T STRIP.       11/90 SBG\n         MVC   WORKSTRP(8),72(R6)      MOVE 81-88 TO WKAREA   11/90 SBG\n         NC    WORKSTRP(8),=X'F0F0F0F0F0F0F0F0'  ZERO LO ORDER11/90 SBG\n         CLC   WORKSTRP(8),=X'F0F0F0F0F0F0F0F0'  NUMBERS?     11/90 SBG\n         BNE   LOOPREC                 NO.  GET OUT.          11/90 SBG\nDOSTRIP  DS    0H                      YES, COUNT TOTALS.     11/90 SBG\n*        MVC   72(8,R6),BLANKLIN+1                            11/90 SBG\n         AP    STRIPCNT,=P'1'          INCREMENT COUNTER      11/90 SBG\n         AP    STRIPTOT,=P'1'          INCREMENT COUNTER      11/90 SBG\n         SPACE 1\nLOOPREC  STH   R5,LRECL                SAVE LRECL\n         LA    R12,0(R5,R6)            POINT TO LAST BYTE OF REC   *SBG\n         ST    R12,SAVEWREG            SAVE END OF RECORD          *SBG\n         ST    R5,SAVECREG             SAVE BYTES TO BE MOVED.     *SBG\n         ST    R4,SAVE4REG             SAVE REG 4 CONTENTS. WKREG. *SBG\n         LA    R4,0                    COUNTER FOR MOVE            *SBG\nBACKLOOP CR    R4,R5                   LIMITED SEARCH FOR TRL BLNKS*SBG\n         BNL   FOUNDTE                 YES. NO NON-BLANKS IN RECD  *SBG\n         CH    R4,=H'70'               LIMITED SEARCH FOR TRL BLNKS*SBG\n         BH    FOUNDTE                 YES. NO NON-BLANKS IN RECD  *SBG\n         CLI   0(R12),C' '             IS LAST BYTE A BLANK?       *SBG\n         BNE   FOUNDTE                 NO. FOUND TRUE END FOR CLIST*SBG\n         LA    R4,1(,R4)               BUMP COUNTER                *SBG\n         BCTR  R12,0                   GO BACK ONE CHARACTER  10/90 SBG\n         B     BACKLOOP                KEEP TRYING                 *SBG\nFOUNDTE  SR    R5,R4                                               *SBG\n         L     R4,SAVE4REG             RESTORE REGISTER 4.         *SBG\n         CH    R5,=H'72'         IF LRECL 71 NOT COUNTING TR BLNKS *SBG\n         BH    SPLITREC                THEN SPLIT RECORD           *SBG\n         BE    EXACT72           EXACTLY 72 CHARS-SPECIAL TREATMENT*SBG\n         L     R5,SAVECREG             RESTORE R5, AND THEN        *SBG\n         BCTR  R5,0                    MAKE LENGTH CODE ADJUSTMENT\nSKIPLOOP L     R12,SAVEWREG            RESTORE REGISTER 12.        *SBG\n         MVC   REC80,REC80-1           CLEAR RECORD AREA           *SBG\n         EX    R5,MOVE80               MOVE RECORD                 *SBG\n         BAL   R11,WRITEF\n         LA    R5,1(R5)\n         LA    R6,0(R5,R6)             INCREMENT CURRET POINTER BY LENG\nNOTSPLIT C     R6,ENDV         *SBG    IF ADDRESS POINTER IS LESS THAN\n         BL    GETREC                    END ADDRESS GO TO GETREC\n         B     READBLK                 ELSE READ A BLOCK\n         SPACE 2\nEXACT72  LH    R5,=H'71'               DON'T DROP LAST CHARACTER   *SBG\n         LA    R12,0(R5,R6)       ADDRESS OF END OF REC TO BE MOVE *SBG\n         MVC   REC80,REC80-1           CLEAR OUTPUT RECORD         *SBG\n         B     MOVEMOUT                NO CONTINUATION CHARACTER   *SBG\nSPLITREC EQU   *\n         LH    R5,=H'70'                                           *SBG\nSPLTLOOP LA    R12,0(R5,R6)       ADDRESS OF END OF REC TO BE MOVE\n         MVC   REC80,REC80-1           CLEAR OUTPUT RECORD\n         MVI   REC80+71,C'-'           MOVE IN CONTUATION CHARACTER SBG\n         AP    MEMSPLTS,=P'1'     INCREMENT COUNT OF SPLITS   10/90 SBG\n         AP    TOTSPLTS,=P'1'     INCREMENT COUNT OF SPLITS   10/90 SBG\nMOVEMOUT EX    R5,MOVE80               MOVE TO WRITE AREA          *SBG\n         BAL   R11,WRITEF\n         LA    R12,1(R5)               ADD 1 REC LENGTH OF RECORD  *SBG\n         LH    R5,LRECL                  WRITTEN\n         SR    R5,R12                  SUBTRACT FROM LRECL\n         LA    R6,0(R12,R6)            INCREMENT IPOINTER BY LENGTH\n* IF LRECL IS EXACTLY 72, WE CAN COME HERE. NOW WE TEST FOR THAT.  *SBG\n         LTR   R5,R5          ARE WE ACTUALLY AT THE END OF A RECD?*SBG\n         BZ    NOTSPLIT       YES. DON'T ACT TO SPLIT THE RECORD.  *SBG\n         B     LOOPREC                 FINISH RECORD\n         SPACE 1\nWRITEF   EQU   *\n         AP    SEQCOUNT,=P'10000'      PLACE SEQUENCE NUMBER IN\n         UNPK  REC80+72(8),SEQCOUNT      POSITIONS 73-80\n         MVI   REC80+79,C'0'           MAKE LAST POS CHAR ZERO\n         MVI   REC80+78,C'0'           MAKE NEXT TO LAST CHAR ZERO\n         MVI   REC80+77,C'0'           SAME FOR THE\n         MVI   REC80+76,C'0'           TWO BEFORE\n         MVC   0(80,R7),REC80          MOVE RECORD TO OUTPUT\n         LA    R7,80(R7)               INCREMENT POINTER\n         C     R7,ENDF                 IF POINTER IS LESS THAN ENDOFBLK\n         BCR   4,R11                     RETURN\n         SR    R7,R3                   LOAD BLKSIZE\n         B     WRITEOUT                ELSE WRITEOUT BLOCK\n         SPACE 2\nFTOV     EQU   *\n         MVI   NMADFBVB,C'V'           SHOW MEMBER CONV TO VB 10/90 SBG\n         MVI   NMREFBVB,C'V'           SHOW MEMBER CONV TO VB 10/90 SBG\n         MVC   VARTITLE,FIXTOVAR       SHOW CONV IS FIX TO VAR10/90 SBG\n         LA    R12,0(R8,R4)            FIND END OF BLOCK ADRESS\n         ST    R7,SAVE7REG             SAVE REGISTER 7        10/90 SBG\n         L     R7,DECB2+16             LOAD IOB ADDRESS\n         LH    R7,14(R7)               LOAD LENGTH BLOCK IS SHORT\n         SR    R12,R7                  SUBTRACT FROM END OF FULL BLK\n         L     R7,SAVE7REG             RESTORE REGISTER 7     10/90 SBG\n         ST    R12,ENDF                  GIVING REAL END OF BLOCK\n         LR    R6,R4                   POINT TO START OF INPUT BLOCK\nNEXTFREC EQU   *\n         LA    R5,71(R6)               POINT TO LAST CHAR          *SBG\nLOOPFV   EQU   *\n         CLI   0(R5),C' '              FIND LAST NON BLANK CHARACTER\n         BNE   FOUNDATA\n         BCTR  R5,0\n         B     LOOPFV\n         SPACE\nFOUNDATA EQU   *\n         SR    R5,R6                   SUBTRACT START FROM END GIV LENG\n         CH    R5,=H'1'\n         BH    WRITEV              IF LENGTH CODE IS LESS THAN 1   *SBG\n         LA    R5,1                      USE 1\nWRITEV   EQU   *            DO NOT PLAY GAMES WITH CONTIN CHARACTRS*SBG\n         LA    R12,13(R5,R7)           LOAD ADDRESS END OF OUTPUT REC\n         C     R12,ENDV                IF ENDOFREC IS LESS THAN ENDOFBL\n         BNH   EXMOVEV                   MOVE DATA\n         SR    R7,R3                   ELSE FIND BLK LENGTH\n         STH   R7,0(R3)                  STORE IN OUTPUT BLOCK\n         BAL   R11,WRITEOUT              WRITE BLOCK\n         LA    R7,4(R7)                  POINT PAST OUTPUT BLK COUNT\n         SPACE\nEXMOVEV  EQU   *\n         EX    R5,MOVEV                MOVE DATA TO OUTPUT BLOCK\n         AP    SEQCOUNT,=P'10000'      PUT SEQUENCE NUMBER\n         UNPK  4(8,R7),SEQCOUNT          IN OUTPUT DATA SET\n         MVI   11(R7),C'0'             MAKE LAST DIGIT CHARACTER 0\n         MVI   10(R7),C'0'             MAKE NEXT TO LAST DIGIT CHAR 0\n         MVI   9(R7),C'0'              SAME FOR THE\n         MVI   8(R7),C'0'              TSO BEFORE\n         LA    R5,13(R5)               ADD 13 TO LEN CNT GIVING LRECL\n         STH   R5,HALFWORD\n         MVC   0(4,R7),HALFWORD        STORE LRECL IN OUTPUT BLOCK\n         LA    R7,0(R5,R7)             INCREMENT OUTPUT POINTER\n         LA    R6,80(R6)               INCREMENT  INPUT POINTER\n         C     R6,ENDF                 IF LESS THAN END OF BLOCK\n         BL    NEXTFREC                  GET NEXT RECORD\n         B     READBLK                 ELSE GET NEXT BLOCK\n         SPACE 2\nWRITEOUT EQU   *\n         WRITE DECBA,SF,CLISTOUT,(R3),(R7)    WRITE OUT BLOCK\n         SPACE\n         CHECK DECBA\n         SPACE\n         LR    R7,R3                   SET POINTER TO START OF BLOCK\n         BR    R11\nSTOWOUT  EQU   *\n         TM    SWITCH,TEST20           IF V TO F\n         BO    STOWVTOF                  CHECK FOR SHORT BLOCK\n         SR    R7,R3                   FIND BLOCK LENGTH\n         STH   R7,0(R3)                STORE IN BDW\n         MVC   2(2,R3),=H'0'           ZERO OUT REST OF BDW\n         B     SHORTBLK                WRITE OUT BLOCK\nSTOWVTOF CR    R3,R7                   IF OUTPUT BLOCK IS EMPTY\n         BE    *+10                      SKIP WRITING SHORT BLOCK\n         SR    R7,R3                   LOAD BLOCK LENGTH\nSHORTBLK BAL   R11,WRITEOUT            WRITE SHORT BLOCK\n         TM    SWITCH,X'40'            IF DIRECTORY READ\n         BO    EOJ                       GO TO  EOJ\nBUMPSTTS DS    0H         BUMP ISPF STATS IF WE SPLIT LINES.  10/90 SBG\n         ST    R8,SAVE8REG             SAVE R8 FOR WORK       10/90 SBG\n         LA    R8,DIRLIST              LOAD R8 FOR MAPPING    10/90 SBG\n         USING DIRSECT,R8              MAP DIRECTORY WKAREA   10/90 SBG\n* DO WE HAVE SPF STATS LEGITIMATELY?  THEN BUMP LINE COUNT.   10/90 SBG\n         TM    DIRFLAG,DIRSPFOF CK FOR BITS THAT SHOULD BE OFF10/90 SBG\n         BNZ   ALISTEST         THEY'RE NOT: NO SPF STATS     10/90 SBG\n         TM    DIRFLAG,DIRSPFON CK FOR BITS THAT SHOULD BE ON 10/90 SBG\n         BNO   ALISTEST         THEY'RE NOT: NO SPF STATS     10/90 SBG\n         CLI   DIRSPFCR,0       00 OF 00YYDDDF ZEROS?         10/90 SBG\n         BNZ   ALISTEST         NO, BRANCH                    10/90 SBG\n         CLI   DIRSPFCD,0       00 OF OTHER 00YYDDDF ZERO?    10/90 SBG\n         BNZ   ALISTEST         NO, BRANCH                    10/90 SBG\n* ALL TESTS PASSED: ASSUME WE HAVE SPF STATS                  10/90 SBG\n         ST    R7,SAVE7REG             SAVE R7 FOR WORK       10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   BYPASADD         NO. DON'T INCREMENT STATS.    10/90 SBG\n         ZAP   PACKWORK,MEMSPLTS   MOVE TO WKAREA FOR CVB     10/90 SBG\n         CVB   R7,PACKWORK      CONVERT NO OF SPLITS TO BINARY10/90 SBG\n         AH    R7,DIRSPFSI      ADD ORIGINAL NO OF RECORDS    10/90 SBG\n         STH   R7,DIRSPFSI      STORE UPDATED COUNT IN DIRECT 10/90 SBG\nBYPASADD L     R7,SAVE7REG             RESTORE R7             10/90 SBG\n         DROP  R8                                             10/90 SBG\nALISTEST L     R8,SAVE8REG             RESTORE R8             10/90 SBG\n         NI    FLAGG,255-ALIASED       RESET ALIAS FLAG       10/90 SBG\n         TM    DIRLIST+11,X'80'        IS MEMBER AN ALIAS?    10/90 SBG\n         BNO   GOSTOW                  NO, DON'T COUNT IT     10/90 SBG\n         OI    FLAGG,ALIASED           FLAG AS ALIAS          10/90 SBG\n         NI    DIRLIST+11,X'7F'        TURN OFF ALIAS BEFORE STOW   SBG\nGOSTOW   DS    0H                                             10/90 SBG\n         TM    FLAGG,STOWADD           THIS A NOREPLACE RUN?  10/90 SBG\n         BO    STOWAD                  YES--STOW ADD ONLY     10/90 SBG\n         B     STOWREP                 NO --STOW REPLACE      10/90 SBG\n         EJECT                                                10/90 SBG\nSTOWREP  STOW  CLISTOUT,DIRLIST,R       STOW WITH REPLACE     10/90 SBG\n         SPACE 2\n         B     STOWEND(R15)\nSTOWEND  B     CHEKREPL                 GOOD REPLACE          10/90 SBG\n         NOP   ERRA\n         B     CHEKCOPY                 GOOD MEMBER ADD       10/90 SBG\n         B     ERRB\n         B     ERRC\n         NOP   ERRA\nERRD     MVC   ERRORMSG,MSGD\n         B     ERR\nERRC     MVC   ERRORMSG,MSGC\n         B     ERR\nERRB     MVC   ERRORMSG,MSGB\n         B     ERR\nERRA     MVC   ERRORMSG,MSGA\n         B     ERR                                            10/90 SBG\nINERROR  MVC   ERRORMSG,MSGRJI                                10/90 SBG\n         MVC   RC,=H'04'                                      10/90 SBG\n         B     WRITERR                                        10/90 SBG\nOUTERROR MVC   ERRORMSG,MSGRJO                                10/90 SBG\n         MVC   RC,=H'04'                                      10/90 SBG\n         B     WRITERR                                        10/90 SBG\nERR      MVC   RC,=H'12'\n         B     WRITERR\n         SPACE 2\n         EJECT                                                10/90 SBG\nSTOWAD   STOW  CLISTOUT,DIRLIST,A       STOW WITH ADD         10/90 SBG\n         SPACE 2                                              10/90 SBG\n         B     STOWENDA(R15)                                  10/90 SBG\nSTOWENDA B     CHEKCOPY                 GOOD REPLACE          10/90 SBG\n         B     CHEKNORE                 NO REPLACE            10/90 SBG\n         NOP   ERRBA                                          10/90 SBG\n         B     ERRBA                                          10/90 SBG\n         B     ERRCA                                          10/90 SBG\n         NOP   ERRAA                                          10/90 SBG\nERRDA    MVC   ERRORMSG,MSGD                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERRCA    MVC   ERRORMSG,MSGC                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERRBA    MVC   ERRORMSG,MSGB                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERRAA    MVC   ERRORMSG,MSGA                                  10/90 SBG\n         B     ERA                                            10/90 SBG\nERA      MVC   RC,=H'12'                                      10/90 SBG\n         B     WRITERR                                        10/90 SBG\n         EJECT                                                10/90 SBG\nCHEKCOPY AP    OUTCOUNT,=P'1'          COUNT MEMBERS ADDED    10/90 SBG\n         MVC   NMADDED(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG\n         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG\n         BNO   CHEKCNTA                NO, DON'T FLAG         10/90 SBG\n         AP    ALIASCNT,=P'1'          YES, COUNT FOR TOTALS  10/90 SBG\n         MVC   NMADSLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG\nCHEKCNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG\n         BZ    CHEKCNCN                NOT VTOF - NO SPLITS   10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   CHEKCNCS                NO-DON'T REPORT SPLITS 11/90 SBG\n         MVC   NMADPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG\n         ED    NMADPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG\n         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG\n         MVC   NMADSLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG\nCHEKCNCS CP    STRIPCNT,ALWZERO        WERE THERE ANY STRIPS? 11/90 SBG\n         BNH   CHEKCNCN                NO-DON'T REPORT SPLITS 11/90 SBG\n         MVC   NMADSLIT+28(8),EDPATT1  MOVE IN EDIT PATTERN   11/90 SBG\n         ED    NMADSLIT+28,STRIPCNT    EDIT THE COUNT         11/90 SBG\n         SP    STRIPCNT,STRIPCNT ZERO STRIP COUNT ON MEM LEVEL11/90 SBG\n         MVC   NMADSLIT+37(5),=C'STRIP'       RECORD STRIPS   11/90 SBG\nCHEKCNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG\n         BH    CHEKCLIN                NO - GO PRINT MEM LINE 10/90 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG\nCHEKCLIN MVC   PRTLINE,MEMLINEA        MOVE IN MSG TO LINE    10/90 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG\n         MVC   NMADSLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG\n         MVC   NMADSLIT+28(15),BLANKLIN+1 CLEAR STRIP FIELD   11/90 SBG\n         MVC   NMADPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG\n         B     AFTRSTOW                DON'T POP OTHER COUNT  10/90 SBG\nCHEKREPL AP    OUTCOUN2,=P'1'          COUNT MEMBERS REPLACED 10/90 SBG\n         MVC   NMREPLD(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG\n         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG\n         BNO   CHEKRNTA                NO, DON'T FLAG         10/90 SBG\n         AP    ALIASCNT,=P'1'          YES, COUNT FOR TOTALS  10/90 SBG\n         MVC   NMRESLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG\nCHEKRNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG\n         BZ    CHEKRNCN                NOT VTOF - NO SPLITS   10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   CHEKRNCS                NO-DON'T REPORT SPLITS 11/90 SBG\n         MVC   NMREPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG\n         ED    NMREPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG\n         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG\n         MVC   NMRESLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG\nCHEKRNCS CP    STRIPCNT,ALWZERO        WERE THERE ANY STRIPS? 11/90 SBG\n         BNH   CHEKRNCN                NO-DON'T REPORT SPLITS 11/90 SBG\n         MVC   NMRESLIT+28(8),EDPATT1  MOVE IN EDIT PATTERN   11/90 SBG\n         ED    NMRESLIT+28,STRIPCNT    EDIT THE COUNT         11/90 SBG\n         SP    STRIPCNT,STRIPCNT ZERO STRIP COUNT ON MEM LEVEL11/90 SBG\n         MVC   NMRESLIT+37(5),=C'STRIP'       RECORD STRIPS   11/90 SBG\nCHEKRNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG\n         BH    CHEKRLIN                NO - GO PRINT MEM LINE 10/90 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG\nCHEKRLIN MVC   PRTLINE,MEMLINER        MOVE IN MSG TO LINE    10/90 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG\n         MVC   NMRESLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG\n         MVC   NMRESLIT+28(15),BLANKLIN+1 CLEAR STRIP FIELD   11/90 SBG\n         MVC   NMREPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG\n         B     AFTRSTOW                DON'T POP OTHER COUNT  10/90 SBG\nCHEKNORE BAL   R11,STOWADEL       DO A DUMMY STOW AND DELETE  10/90 SBG\n************************************************************* 10/90 SBG\n*    DUMMY STOW-DELETE IS FOR WRITING OUT THE CONVERTED     * 10/90 SBG\n*    RECORDS THAT ARE NOT GOING TO BE LEGITIMATELY STOWED,  * 10/90 SBG\n*    BECAUSE OF THE NO-REPLACE FUNCTION.  THIS SOLUTION     * 10/90 SBG\n*    TO THE PROBLEM OF HOW TO HANDLE NON-REPLACED RECORDS   * 10/90 SBG\n*    REQUIRES A COMPRESS OF THE OUTPUT DATASET AT THE END   * 10/90 SBG\n*    OF THE CONVERSION.  THE REASON FOR THAT DESIGN WAS :   * 10/90 SBG\n*                                                           * 10/90 SBG\n*    THE NON-REPLACED RECORDS ARE ACTUALLY CONVERTED.       * 10/90 SBG\n*    IN CONVERTING THE RECORDS, ONE CAN DISCOVER ALIAS      * 10/90 SBG\n*    CONDITIONS AND REPORT THE NUMBER OF LINE SPLITS, ETC.  * 10/90 SBG\n*    THESE THINGS ARE REPORTED ON A MEMBER LEVEL, ALTHOUGH  * 10/90 SBG\n*    THEY ARE NOT ADDED TO THE SUMMARY TOTALS.              * 10/90 SBG\n*                                                           * 10/90 SBG\n*    ALSO, ONE MIGHT WANT TO RESTORE DELETED MEMBERS UNDER  * 10/90 SBG\n*    DIFFERENT NAMES, USING A UTILITY SUCH AS \"PDS\" OR      * 10/90 SBG\n*    \"PDS/E\" OR \"PDSGAS\".  THE ALTERNATE COPY OF THE CLIST  * 10/90 SBG\n*    WITH THE \"SAME NAME\" MIGHT ALSO BE A GOOD PIECE OF     * 10/90 SBG\n*    WORK THAT IS WORTH SAVING.                             * 10/90 SBG\n*                                                           * 10/90 SBG\n*    ANYONE WHO COMES UP WITH A BETTER IDEA THAT WORKS,     * 10/90 SBG\n*    IS WELCOME TO USE IT.                                  * 10/90 SBG\n************************************************************* 10/90 SBG\n         AP    OUTCOUN3,=P'1'          COUNT MEMBERS NOT REPLD10/90 SBG\n         MVC   NMREPLD(8),NAME         NAME OF MEMBER FOR MSG 10/90 SBG\n         MVC   NMREREPL(15),NMRENORE   REPORT NOT RPLD MEMBER 10/90 SBG\n         TM    FLAGG,ALIASED           IS THE MEMBER AN ALIAS 10/90 SBG\n         BNO   CHEKNNTA                NO, DON'T FLAG         10/90 SBG\n         MVC   NMRESLIT+16(11),ALIASMSG SHOW MEMBER AS ALIAS  10/90 SBG\n*                  DO NOT POP THE ALIAS COUNT FOR NONREPLACED 10/90 SBG\nCHEKNNTA TM    SWITCH,TEST20           VTOF HAS SPLIT LINES   10/90 SBG\n         BZ    CHEKNNCN                NOT VTOF - NO SPLITS   10/90 SBG\n         CP    MEMSPLTS,ALWZERO        WERE THERE ANY SPLITS? 10/90 SBG\n         BNH   CHEKNNCS                NO-DON'T REPORT SPLITS 11/90 SBG\n         SP    TOTSPLTS,MEMSPLTS       THESE SPLITS NOT TOTLED10/90 SBG\n         MVC   NMREPATT(8),EDPATT1     MOVE IN EDIT PATTERN   10/90 SBG\n         ED    NMREPATT,MEMSPLTS       EDIT THE COUNT         10/90 SBG\n         SP    MEMSPLTS,MEMSPLTS ZERO SPLIT COUNT ON MEM LEVEL10/90 SBG\n         MVC   NMRESLIT(14),LINSPLIT   REPORT LINE SPLITS     10/90 SBG\nCHEKNNCS CP    STRIPCNT,ALWZERO        WERE THERE ANY STRIPS? 11/90 SBG\n         BNH   CHEKNNCN                NO-DON'T REPORT SPLITS 11/90 SBG\n         MVC   NMRESLIT+28(8),EDPATT1  MOVE IN EDIT PATTERN   11/90 SBG\n         ED    NMRESLIT+28,STRIPCNT    EDIT THE COUNT         11/90 SBG\n         SP    STRIPCNT,STRIPCNT ZERO STRIP COUNT ON MEM LEVEL11/90 SBG\n         MVC   NMRESLIT+37(5),=C'STRIP'       RECORD STRIPS   11/90 SBG\nCHEKNNCN AP    LINCOUNT,=P'1'          INCREMENT LINE COUNT   10/90 SBG\n         CP    LINCHANG,LINCOUNT       END OF PAGE ?          10/90 SBG\n         BH    CHEKNLIN                NO - GO PRINT MEM LINE 10/90 SBG\n         BAL   R11,WRITETIT            PRINT NEW TITLE        10/90 SBG\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK            PRINT BLANK LINE       10/90 SBG\nCHEKNLIN MVC   PRTLINE,MEMLINER        MOVE IN MSG TO LINE    10/90 SBG\n         BAL   R11,PUTPRINT            PRINT THE MSG LINE     10/90 SBG\n         MVC   NMRESLIT+16(11),BLANKLIN+1 CLEAR ALIAS FIELD   10/90 SBG\n         MVC   NMRESLIT+28(15),BLANKLIN+1 CLEAR STRIP FIELD   11/90 SBG\n         MVC   NMREPATT(21),BLANKLIN+1    CLEAR PRINT FIELD   10/90 SBG\nAFTRSTOW TM    SWITCH,TEST20           IF V TO F              10/90 SBG\n         BO    *+8                        CHECK DIRECTORY\n         LA    R7,4(R7)                ELSE ADD 4 BYTES FOR OUTPUT BDW\n         LA    R12,2\n         CH    R12,DIRLEFT             IF DIRECTORY BLOCK IS NOT EMPTY\n         BL    GETMEM                     GET NEXT MEMBER\n         POINT CLISTIN,SAVETTR          ELSE READ NEW DIRECTORY\n         SPACE\n         B     READDIR\n         SPACE 2\nWRITERR  EQU   *\n*        BAL   R11,WRITETIT                                   10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         LH    R12,RC              DUMP                       10/90 SBG\n         CVD   R12,WORK               RETURN CODE             10/90 SBG\n         UNPK  RCP,WORK                  INTO                 10/90 SBG\n         OI    RCP+1,X'F0'                  ERROR LINE        10/90 SBG\n         AP    LINCOUNT,=P'3'                                 10/90 SBG\n         MVC   PRTLINE,ERRLINE\n         BAL   R11,PUTPRINT\n         CLC   RC,=H'12'               IF COPY STARTED\n         BNE   EXIT                      PRINT TOTALS\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTP\n         TM    FLAGG,STOWADD        IS THIS NOREPLACE RUN?    10/90 SBG\n         BO    BRNORPLX             YES--REPORT ITS TOTALS    10/90 SBG\n         BAL   R11,COUNTP2          PRINT NO OF MEMBERS REPLD 10/90 SBG\n         B     BRTOTX               GO SHOW TOTAL MEMBERS     10/90 SBG\nBRNORPLX BAL   R11,COUNTP3          PRINT NO OF MEM NOT REPLD 10/90 SBG\nBRTOTX   BAL   R11,SHOWTOTS         SHOW TOTAL NUMBER OF MEMB 10/90 SBG\n         BAL   R11,TOTALIAS         SHOW TOTAL OF ALIAS MEMBS 10/90 SBG\n         TM    SWITCH,TEST20        IS THIS V TO F ?          10/90 SBG\n         BZ    *+16                 NO - DON'T PRINT SPLT TOTS10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTOTS         PRINT TOTAL LINE SPLITS   10/90 SBG\n         BAL   R11,MSGSTATS         PRINT STATS UPDATE MESSAGE10/90 SBG\n         B     EXIT\n         SPACE 2\nEOJ      BAL   R11,WRITETIT\n         BAL   R11,WRINDSN         WRITE INPUT                10/90 SBG\n         BAL   R11,WROUTDSN           AND OUTPUT DSNAMES      10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         LH    R12,RC              DUMP                       10/90 SBG\n         CVD   R12,WORK               RETURN CODE             10/90 SBG\n         UNPK  RCP,WORK                  INTO                 10/90 SBG\n         OI    RCP+1,X'F0'                  ERROR LINE        10/90 SBG\nEOJNORM  MVC   ERRORMSG(37),=C' COPY COMPLETE    -    SUMMARY REPORT'\n         AP    LINCOUNT,=P'3'                                 10/90 SBG\n         MVC   PRTLINE,ERRLINE\n         BAL   R11,PUTPRINT\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTP\n         TM    FLAGG,STOWADD        IS THIS NOREPLACE RUN?    10/90 SBG\n         BO    BRNORPL              YES--REPORT ITS TOTALS    10/90 SBG\n         BAL   R11,COUNTP2          PRINT NO OF MEMBERS REPLD 10/90 SBG\n         B     BRTOT                GO SHOW TOTAL MEMBERS     10/90 SBG\nBRNORPL  BAL   R11,COUNTP3          PRINT NO OF MEM NOT REPLD 10/90 SBG\nBRTOT    BAL   R11,SHOWTOTS         SHOW TOTAL NUMBER OF MEMB 10/90 SBG\n         BAL   R11,TOTALIAS         SHOW TOTAL OF ALIAS MEMBS 10/90 SBG\n         TM    SWITCH,TEST20        IS THIS V TO F ?          10/90 SBG\n         BZ    *+16                 NO - DON'T PRINT SPLT TOTS10/90 SBG\n         BAL   R11,PRTBLANK         PRINT SOME BLANK LINES.   10/90 SBG\n         BAL   R11,COUNTOTS         PRINT TOTAL LINE SPLITS   10/90 SBG\n         BAL   R11,MSGSTATS         PRINT STATS UPDATE MESSAGE10/90 SBG\n         SPACE 2\nEXIT     EQU   *\n         CLOSE (CLISTIN,,CLISTOUT,,PRINT)\n         LH    R15,RC                  LOAD RETURN CODE\n         L     R13,SAVEAREA+4\n         LM    R0,R12,20(R13)          RESTORE REGS 0-12\n         L     R14,12(R13)             RESTORE REG 14\n         BR    R14\n         SPACE 2\nOPENPRNT EQU   *                                              10/90 SBG\n         OPEN  (PRINT,(OUTPUT))\n         BR    R11                                            10/90 SBG\nWRITETIT AP    PAGCOUNT,=P'1'        INCREMENT PAGE COUNT     10/90 SBG\n         ZAP   LINCOUNT,=P'1'        RE-START  LINE COUNT     10/90 SBG\n         MVC   PAGENUM,EDPATT1                                10/90 SBG\n         ED    PAGENUM,PAGCOUNT                               10/90 SBG\n         MVC   PRTLINE,TITLE                                  10/90 SBG\n         B     PUTPRINT\nPRTBLANK AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,BLANKLIN         SKIP SOME LINES       10/90 SBG\n         B     PUTPRINT                 WRITE EM              10/90 SBG\nSHOWTOTS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ZAP   TOTCOUNT,OUTCOUNT     ADD ADDED TO TOTAL       10/90 SBG\n         AP    TOTCOUNT,OUTCOUN2     ADD REPLD TO TOTAL       10/90 SBG\n         ED    OUTP1,TOTCOUNT        EDIT TOTAL CONVERTED     10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG03 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C'0'         SKIP ONE LINE            10/90 SBG\n         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nWRINDSN  MVC   DSNLINAM,DSNAMIN      MOVE DSNAME TO LINE      10/90 SBG\n         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,DSNLINEI      MOVE LINE TO PRINT       10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nWROUTDSN MVC   DSNLONAM,DSNAMOUT     MOVE DSNAME TO LINE      10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,DSNLINEO      MOVE LINE TO PRINT       10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nMSGSTATS MVC   COUNTLMS(46),PRTMSG06 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVC   OUTP1(8),BLANKLIN+1   BLANK NUMBER AREA        10/90 SBG\n         MVI   COUNTLNC,C' '         GO TO NEXT LINE ONLY     10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nTOTALIAS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,ALIASCNT        EDIT TOTAL ALIAS NUMBER  10/90 SBG\n         MVC   COUNTLMS(46),PRTMSG05 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C'0'         SKIP ONE LINE            10/90 SBG\n         AP    LINCOUNT,=P'2'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTOTS MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,TOTSPLTS        EDIT TOTAL LINE SPLITS   10/90 SBG\n         MVC   COUNTLMS(46),PRTMSG04 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C'-'         SKIP TWO LINES           10/90 SBG\n         AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTP   MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,OUTCOUNT        EDIT NUMBER OF ADDED     10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG01 MOVE SPECIAL MESSAGE     10/90 SBG\n         AP    LINCOUNT,=P'3'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTP2  MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,OUTCOUN2        EDIT NUMBER OF REPLACED  10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG02 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C' '         NO LINE SKIP             10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\n         B     PUTPRINT              GO PRINT THE LINE        10/90 SBG\nCOUNTP3  MVC   OUTP1,EDPATT1         MOVE IN EDIT PATTERN     10/90 SBG\n         ED    OUTP1,OUTCOUN3        EDIT NUMBER OF REPLACED  10/90 SBG\n         MVC   COUNTLMS(37),PRTMSG07 MOVE SPECIAL MESSAGE     10/90 SBG\n         MVI   COUNTLNC,C' '         NO LINE SKIP             10/90 SBG\n         AP    LINCOUNT,=P'1'        INCREMENT LINE COUNT     10/90 SBG\n         MVC   PRTLINE,COUNTLN1                               10/90 SBG\nPUTPRINT PUT   PRINT,PRTLINE\n         MVC   PRTLINE(121),PRTLINE-1  CLEAR AREA AFTER PRINT 10/90 SBG\nCOUNTPEN BR    R11                                            10/90 SBG\n         SPACE 2\nSTOWADEL STM   R14,R1,SAVEMREG         SAVE REGISTERS R14-R1  10/90 SBG\n         MVC   NAMESAVE(8),NAME        SAVE REAL NAME         10/90 SBG\n         MVC   NAME(8),NAMEDUM       FAKE NAME FOR DUMMY STOW 10/90 SBG\n         STOW  CLISTOUT,DIRLIST,A      STOW DUMMY MEMBER      10/90 SBG\n         STOW  CLISTOUT,DIRLIST,D      DELETE THE DUMMY MEMBR 10/90 SBG\n         MVC   NAME(8),NAMESAVE  RESTORE REAL NAME FOR REPORT 10/90 SBG\n         LM    R14,R1,SAVEMREG         RESTORE SAVED REGISTRS 10/90 SBG\n         BR    R11                     RETURN TO CALLER       10/90 SBG\n         SPACE 2\n*EXECUTED INSTRUCTIONS\nMOVEV    MVC   12(1,R7),0(R6)\nMOVE80   MVC   REC80(1),0(R6)\n         EJECT\nCLISTIN  DCB   DSORG=PO,MACRF=R,DDNAME=SYSUT1,EODAD=STOWOUT,EXLST=JFCB1\n         SPACE 2\nCLISTOUT DCB   DSORG=PO,MACRF=W,DDNAME=SYSUT2,EXLST=JFCB2\n         SPACE 2\nPRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,            X\n               LRECL=121,BLKSIZE=605\n         EJECT\n*WORK FIELDS\n         SPACE\nWORK     DC    D'0'\nPACKWORK DC    PL8'0'         WORK AREA FOR CVB INSTRUCTION   10/90 SBG\n*                        HAS TO BE 8 BYTES FOR CVB INSTRUCTION10/90 SBG\nFULLWORD DS    0F\nHALFWORD DC    H'0'\n         DC    H'0'\nSAVETTR  DC    F'0'\nREADADD  DC    F'0'\nENDV     DC    F'0'\nENDF     DC    F'0'\nSAVERTN  DC    F'0'\nNEXTMEM  DC    F'0'\nSAVECREG DC    F'0'                                                *SBG\nSAVEWREG DC    F'0'                                                *SBG\nSAVEMREG DC    4F'0'          SAVE R14, R15, R0, R1                *SBG\nSAVE4REG DC    F'0'                                                *SBG\nSAVE7REG DC    F'0'                                                *SBG\nSAVE8REG DC    F'0'                                                *SBG\nOUTCOUNT DC    PL4'0'                  COUNT FOR COPIED       10/90 SBG\nOUTCOUN2 DC    PL4'0'                  COUNT FOR REPLACED     10/90 SBG\nOUTCOUN3 DC    PL4'0'                  COUNT FOR NOT REPLACED 10/90 SBG\nALIASCNT DC    PL4'0'            ALIAS COUNT - CONV TO REAL   10/90 SBG\nTOTCOUNT DC    PL4'0'           TOTALS COUNT FOR CONVERTED    10/90 SBG\nMEMSPLTS DC    PL4'0'    MEMBER LEVEL COUNTER FOR SPLIT LINES 10/90 SBG\nTOTSPLTS DC    PL4'0'          TOTALS COUNTER FOR SPLIT LINES 10/90 SBG\nLINCOUNT DC    PL4'0'          LINE COUNTER FOR PAGE EJECTS   10/90 SBG\nLINCHANG DC    PL4'&LINPPG'    END OF PAGE COUNT              10/90 SBG\nPAGCOUNT DC    PL4'0'          PAGE COUNTER                   10/90 SBG\nSTRIPCNT DC    PL4'0'          STRIP COUNTER FOR MEMBERS      11/90 SBG\nSTRIPTOT DC    PL4'0'          TOTALS STRIP COUNTER           11/90 SBG\nALWZERO  DC    PL4'0'         ALWAYS ZERO - KEEP LENGTH = 4   10/90 SBG\nSAVEHALF DC    H'0'                                                *SBG\nOUTBLKSI DC    H'0'\nDIRLEFT  DC    H'0'\nBLKIN    DC    H'0'\nRECIN    DC    H'0'\nRC       DC    H'0'\nLRECL    DC    H'0'\nDIRSW    DC    X'00'\nSWITCH   DC    XL1'00'\nFLAGG    DC    XL1'00'                                        10/90 SBG\nALIASED  EQU   X'80'              ORIGINAL MEMBER IS AN ALIAS 10/90 SBG\nSTOWADD  EQU   X'40'              STOW ADD USED - NOT REPLACE 10/90 SBG\nNAMESAVE DC    CL8'        '      USED TO SAVE REAL MEM NAME  10/90 SBG\nHIVALUE  DC    XL8'FFFFFFFFFFFFFFFF'\nSEQCOUNT DC    PL4'0'\n         SPACE\n         DS    0F\nDIRIN    DS    CL256                   DIRECTORY BLOCK\n         SPACE\n         DS    0F                                             10/90 SBG\nDIRDUMMY DS    0CL12                    DUMMY DIRECTORY       10/90 SBG\nNAMEDUM  DC    XL8'FEFEFEFEFEFEFEFE'    RECORD FOR STOW ADD   10/90 SBG\nTTRDUM   DS    XL3                      AND STOW DELETE.      10/90 SBG\nCDUM     DC    CL1'00'                                        10/90 SBG\n         SPACE\n         DS    0F\nDIRLIST  DS    0CL74                   DIRECTORY RECORD\nNAME     DC    CL8' '\nTTR      DS    CL3\nC        DS    CL1\nUSEADATA DS    CL62\n         SPACE\n         DS    0F                ALIGNMENT OF EXIT LIST       10/90 SBG\nJFCB1    DC    X'07',AL3(JFCBDATA)                            10/90 SBG\nJFCB2    DC    X'07',AL3(JFCBDATA)                            10/90 SBG\n         DC    X'80',AL3(0)                                   10/90 SBG\n         SPACE 1                                              11/90 SBG\nWORKSTRP DC    CL8' '            WORK AREA FOR STRIP TESTING  11/90 SBG\n*         DC    CL1' '    THIS STUFF WAS MOVED TO THE END.    10/90 SBG\n*REC80    DS    CL80      PROBLEM WITH OVERLAYING PRINT AREA. 10/90 SBG\n         SPACE 2\n*PRINT DATA\n         SPACE\nTITLE    DS    0CL121                                         10/90 SBG\n         DC    CL52'1        CLIST CONVERSION PROGRAM - VERSION 2.2 '\nVARTITLE DC    CL14'FB-VB OR VB-FB'                           10/90 SBG\n         DC    CL16' TRANSFORMATION '                         10/90 SBG\n         DC    CL19' '                    FILLER              10/90 SBG\nPAGELIT  DC    CL5'PAGE '                                     10/90 SBG\nPAGENUM  DC    CL8' '                                         10/90 SBG\n         DC    CL7' '                                         10/90 SBG\n*\nDSNLINEI DS    0CL121                                         10/90 SBG\nDSNLILIT DC    CL34'0          INPUT  DATASET NAME :  '       10/90 SBG\nDSNLINAM DC    CL44' '                                        10/90 SBG\n         DC    CL43' '                                        10/90 SBG\n*\nDSNLINEO DS    0CL121                                         10/90 SBG\nDSNLOLIT DC    CL34'           OUTPUT DATASET NAME :  '       10/90 SBG\nDSNLONAM DC    CL44' '                                        10/90 SBG\n         DC    CL1' '                                         10/90 SBG\nDSNLODEF DC    CL42'  REPLACE IS DEFAULT'                     10/90 SBG\n*\nBLANKLIN DS    0CL121                                         10/90 SBG\n         DC    CL121'-'        BLANK LINES AFTER TITLE        10/90 SBG\n*\nERRLINE  DS    0CL121\n         DC    CL29'-                         RC='\nRCP      DC    CL2'  '\n         DC    CL5' '\nERRORMSG DC    CL37' '\n         DC    CL48' '\n*                                                             10/90 SBG\nCOUNTLN1 DS    0CL121                                         10/90 SBG\nCOUNTLNC DC    CL23'-'                                        10/90 SBG\nOUTP1    DC    CL8' '                                         10/90 SBG\nCOUNTLMS DC    CL90'  '                                       10/90 SBG\n*                                                             10/90 SBG\nMEMLINEA DS    0CL121          LINE TO REPORT ADDED MEMBERS   10/90 SBG\n         DC    CL12' '         FILLER                         10/90 SBG\nNMADDED  DC    CL9' '          NAME OF ADDED MEMBER           10/90 SBG\n         DC    CL19'  MEMBER IN OUTPUT '                      10/90 SBG\nNMADFBVB DC    CL3' B'                                        10/90 SBG\n         DC    CL26'LIBRARY  **  ADDED      **'               10/90 SBG\nNMADPATT DC    CL8'  '         SPOT FOR COUNT OF SPLIT LINES  10/90 SBG\nNMADSLIT DC    CL44' '         SPOT FOR SPLIT LINE LITERAL    10/90 SBG\n*                                                             10/90 SBG\nMEMLINER DS    0CL121          LINE TO REPORT REPLACED MEMBERS10/90 SBG\n         DC    CL12' '         FILLER - OFFSET NAME OF MEMBER 10/90 SBG\nNMREPLD  DC    CL9' '          NAME OF REPLACED MEMBER        10/90 SBG\n         DC    CL19'  MEMBER IN OUTPUT '                      10/90 SBG\nNMREFBVB DC    CL3' B'                                        10/90 SBG\n         DC    CL11'LIBRARY  **'                              10/90 SBG\nNMREREPL DC    CL15'  REPLACED   **'                          10/90 SBG\nNMREPATT DC    CL8'  '         SPOT FOR COUNT OF SPLIT LINES  10/90 SBG\nNMRESLIT DC    CL44' '         SPOT FOR SPLIT LINE LITERAL    10/90 SBG\n*                                                             10/90 SBG\n         DC    CL1' '          BLANK FOR CLEARING PRINT LINE  10/90 SBG\nPRTLINE  DS    CL121           \"THE\" OUTPUT LINE AREA         10/90 SBG\n         SPACE\nEDPATT1  DC    XL8'4020202020202120' PATTERN FOR SPLIT LINES  10/90 SBG\nLINSPLIT DC    CL14' LINE SPLITS  '\nFIXTOVAR DC    CL14'FIX TO VAR BLK'\nVARTOFIX DC    CL14'VAR TO FIX BLK'\nNMRENORE DC    CL15'  NOREPLACE  **'                          10/90 SBG\nMSG1     DC    CL37'FILE NOT V OR F'\nMSG2     DC    CL37'F FORMAT MUST BE LRECL 80'\nMSG3     DC    CL37'INPUT AND OUTPUT CANNOT BE SAME RECFM'\nMSG4     DC    CL37'V RECORD WITH LRECL OVER 256'\nMSGA     DC    CL37'DUPLICATE NAME ON DIRECTORY-SYSUT2'\nMSGB     DC    CL37'DIRECTORY OUT OF SPACE'\nMSGC     DC    CL37'I/O ERROR ON SYSUT2 DIRECTORY'\nMSGD     DC    CL37'PROGRAM REGION TOO SMALL'\nMSGRJI   DC    CL37'DDNAME IS MISSING IN THE INPUT DCB'\nMSGRJO   DC    CL37'DDNAME IS MISSING IN THE OUTPUT DCB'\nPRTMSG01 DC    CL37'  CONVERTED MEMBERS ADDED           '     10/90 SBG\nPRTMSG02 DC    CL37'  CONVERTED MEMBERS REPLACED        '     10/90 SBG\nPRTMSG03 DC    CL37'  TOTAL NUMBER OF MEMBERS CONVERTED '     10/90 SBG\nPRTMSG04 DC    CL46'  TOTAL OF LONG LINE SPLITS IN THIS CONVERSION' SBG\nPRTMSG05 DC    CL46'  TOTAL NUMBER OF ALIASES CONVERTED TO MEMBERS' SBG\nPRTMSG06 DC    CL46'  EXISTING MEMBER ISPF STATISTICS ARE UPDATED ' SBG\nPRTMSG07 DC    CL37'  CONVERTED MEMBERS NOT REPLACED    '     10/90 SBG\nALIASMSG DC    CL11' WAS ALIAS'                               10/90 SBG\nDSNAMIN  DC    CL44' '              INPUT  DSNAME             10/90 SBG\nDSNAMOUT DC    CL44' '              OUTPUT DSNAME             10/90 SBG\n         LTORG\n         EJECT                                                10/90 SBG\nDIRSECT  DSECT\n* THIS IS A DESCRIPTION OF PDS DIRECTORY ENTRY FIELDS.        10/90 SBG\n* GRACIOUSLY BORROWED FROM PDS 8.4 CODE.  COURTESY OF S.SMITH 10/90 SBG\nDIRLINK  DS    0F             ***   DIRECTORY AREA MAPPING  ***\nDIRNAME  DS    CL8\nDIRTTR   DS    XL3\nDIRFLAG  DS    X\nDIRSPFOF EQU   B'01110000'         BITS ARE OFF IN SPF STATS\nDIRSPFON EQU   B'00001111'         BITS ARE ON IN SPF STATS\nDIRALIAS EQU   X'80'          MEMBER IS AN ALIAS\nDIR2TTR  EQU   X'40'          TWO TTR'S TO UPDATE\nDIR1TTR  EQU   X'20'          ONE TTR TO UPDATE\nDIRUSER  DS    XL62\n         ORG   DIRUSER  FOLLOWING FOR LOAD MODULES\nDIRSTART DS    XL4            TTR OF FIRST TEXT BLOCK\nDIRNOTE  DS    XL3            TTR OF NOTELIST\nDIRNOTE# DS    X              NUMBER OF NOTELIST ENTRIES\nDIRATTR  DS    XL2            MEMBER ATTRIBUTES\nDIRSTORE DS    XL3            SIZE OF LOAD MODULE\nDIRTEXTL DS    XL2            LENGTH OF 1ST TEXT RECORD\nDIREPA   DS    XL3            ENTRY POINT ADDRESS\nDIRATTR2 DS    X          ADDITIONAL ATTRIBUTE BYTES:\nDIRAOSLE EQU   X'80'          VS LINKAGE EDITOR CREATED THIS MODULE\nDIR2PAGA EQU   X'20'          PAGE ALIGNMENT REQUIRED FOR THIS MODULE\nDIR2SSI  EQU   X'10'          SSI INFORMATION IS PRESENT FOR MODULE\nDIRAPFLG EQU   X'08'          APF INFORMATION FOR THIS MODULE IS VALID\nDIRATTR3 DS    X          ADDITIONAL ATTRIBUTE BYTES:\nDIRRMANY EQU   X'10'          RMODE=ANY\nDIRAA31  EQU   X'08'          AMODE=31 (ALIAS ENTRY)\nDIRAA24  EQU   X'04'          AMODE=24 (ALIAS ENTRY)\nDIRAM31  EQU   X'02'          AMODE=31 (MAIN ENTRY)\nDIRAM24  EQU   X'01'          AMODE=24 (MAIN ENTRY)\nDIRATTR4 DS    X              COUNT OF RLD ENTRIES AFTER FIRST TEXT\n         SPACE 1\nDIRAPF   DS    0XL2           APF (IF NOT SCAT, SSI OR ALIAS)\nDIREP    DS    XL3            ENTRY POINT (MAIN MEMBER)\nDIRREAL  DS    CL8            REAL NAME OF MEMBER\nDIRAPF2  DS    XL2            APF INFORMATION (ALIAS, NO SCAT OR SSI)\nDIREND2  EQU   *              END OF ALIAS SECTION\n         ORG   DIRAPF    FOLLOWING FOR SCATTER LOADED MEMBERS\nDIRSCLL  DS    XL2            LENGTH OF SCATTER LIST\nDIRSCTL  DS    XL2            LENGTH OF TRANSLATE TABLE\nDIRSCET  DS    XL2            ESDID OF FIRST TEXT RECORD\nDIRSCEP  DS    XL2            ESDID OF ENTRY POINT\nDIRAPF3  DS    0XL2           APF (IF SCAT, NO SSI AND NO ALIAS)\nDIREPSC  DS    XL3            ENTRY POINT (MAIN MEMBER)\nDIRREALS DS    CL8            REAL NAME OF MEMBER\nDIRAPF4  DS    XL2            APF INFORMATION (SCAT, NO SSI AND ALIAS)\nDIREND3  EQU   *              END OF SCATTER, ALIAS SECTION\n*\n         ORG   DIRUSER   FOLLOWING FOR MODULES SAVED BY SPF EDIT\nDIRSPFV  DS    XL1            VERSION NUMBER IN BINARY\nDIRSPFR  DS    XL1            REVISION NUMBER IN BINARY\nDIRSPFZ  DS    XL2            NOT CURRENTLY USED\nDIRSPFCR DS    XL4            CREATION DATE IN FORMAT 00YYDDDF\nDIRSPFCD DS    XL4            LAST CHANGE DATE IN FORMAT 00YYDDDF\nDIRSPFCT DS    XL2            LAST CHANGE TIME IN FORMAT HHMM\nDIRSPFSI DS    XL2            CURRENT SIZE IN BINARY\nDIRSPFIN DS    XL2            INITIAL SIZE IN BINARY\nDIRSPFMD DS    XL2            MODIFIED LINES IN BINARY\nDIRSPFID DS    CL8            ID OF LAST PERSON TO UPDATE\n*                             END OF SPF SECTION\nCVTCLIST CSECT                                                10/90 SBG\nJFCBDATA DC    CL176' '\n         DC    CL1' '               MOVED TO END BECAUSE OF   10/90 SBG\nREC80    DS    CL80                 BAD EXMOVE.  R5 PROB BAD. 10/90 SBG\n*                            KEEP THE REC80 WORKAREA LAST.    10/90 SBG\n         EJECT                                                10/90 SBG\nDCBDUM   DCBD  DSORG=PO,DEVD=DA\n         EJECT                                                10/90 SBG\nJFCBLK   DSECT\n         IEFJFCBN LIST=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HELPMEMB": {"ttr": 2056, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)/\\x00\\x90)/\\x15\\x19\\x00W\\x00W\\x00\\x00\\xe3\\xe2\\xe3\\xf2\\xe2\\xe2\\xc7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-19T00:00:00", "modifydate": "1990-10-19T15:19:00", "lines": 87, "newlines": 87, "modlines": 0, "user": "TST2SSG"}, "text": "//*  THE FOLLOWING IS JCL TO RUN THE CVTCLIST PROGRAM.\n//*  SIMPLY, FROM ONE INPUT LIBRARY TO ONE OUTPUT LIBRARY.\n//*\n//TST2CP2V JOB (TS,2322),'TECH.SUPPORT',CLASS=M,NOTIFY=TST2SSG,\n//        MSGLEVEL=(1,1),MSGCLASS=T TYPRUN=HOLD\n//*****************************************************************//\n//* CONVERT CLISTS FROM FB - 80 TO VB -255 FORMAT AND VICE-VERSA  *//\n//*****************************************************************//\n//CNVTSTEP EXEC PGM=CVTCLIST,REGION=5900K PARM='NOREPLACE'\n//*                           ========>   USE PARM FOR NOREPLACE MODE.\n//*                           ========>    NO PARM FOR   REPLACE MODE.\n//STEPLIB  DD DISP=SHR,DSN=TST.XA.CMDLIB\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DISP=SHR,DSN=TST2SSG.JUNK.VCLIST       <=== INPUT  LIBRARY\n//SYSUT2 DD DISP=SHR,DSN=TST2SSG.JUNK.CLIST        <=== OUTPUT LIBRARY\n//\n//*   ------------------------------------------------------------\n//*\n//*  IF YOU WANT TO MERGE SEVERAL CONCATENATED INPUT LIBRARIES INTO\n//*  ONE OUTPUT LIBRARY VIA REPLACE, YOU MUST REVERSE THE ORDER OF\n//*  CONCATENATION IN THE SUCCESSIVE EXECUTIONS.  THIS IS BECAUSE\n//*  THE HIGHER LIBRARIES IN THE CONCATENATION SHOULD REPLACE THE\n//*  LIKE-NAMED MEMBERS IN THE LOWER LIBRARIES.\n//*\n//*   ------------------------------------------------------------\n//*\n//*  TO KEEP THE ORDER OF THE CONCATENATED LIBRARIES WHEN DOING A\n//*  MERGE, YOU MUST EXECUTE CVTCLIST WITH A PARM.  I USE THE PARM\n//*  OF 'NOREPLACE'.  SINCE EXISTING MEMBERS IN THE OUTPUT LIBRARY\n//*  ARE NOT REPLACED BY SUCCESSIVE STOWS, THE EXECUTION ORDER IN\n//*  THIS CASE SHOULD BE THE ORDER OF THE CONCATENATION.\n//*\n//*   ------------------------------------------------------------\n//*\n//*  THIS IS A SAMPLE EXECUTION OF MERGE IN \"REPLACE\" MODE.\n//*\n//TST2CVTC JOB (TS,2322),'TECH.SUPPORT',CLASS=M,NOTIFY=TST2SSG,\n//        MSGLEVEL=(1,1),MSGCLASS=T TYPRUN=HOLD\n//*****************************************************************//\n//* CONVERT CLISTS FROM FB - 80 TO VB -255 FORMAT AND VICE-VERSA  *//\n//*****************************************************************//\n//CONVERT  PROC INLIB=XXXX,OUTLIB='TST2SSG.JUNK.CLIST'\n//CNVTSTEP EXEC PGM=CVTCLIST,REGION=5900K\n//STEPLIB  DD DISP=SHR,DSN=TST.XA.CMDLIB\n//SYSPRINT DD SYSOUT=*\n//SYSABEND DD SYSOUT=*\n//SYSUT1 DD DISP=SHR,DSN=&INLIB\n//SYSUT2 DD DISP=SHR,DSN=&OUTLIB\n//   PEND\n//CNV001   EXEC CONVERT,INLIB='TST.A.CLIST'\n//CNV002   EXEC CONVERT,INLIB='OPP1.CLIST'\n//CNV003   EXEC CONVERT,INLIB='TSP.TSO.CLIST'\n//CNV004   EXEC CONVERT,INLIB='TST.DAVIS.CLIST'\n//CNV005   EXEC CONVERT,INLIB='ISR.V2R3M0.VISRCLIB'\n//*\n//*   ------------------------------------------------------------\n//*\n//*  THIS IS A SAMPLE EXECUTION OF MERGE IN \"NOREPLACE\" MODE.\n//*\n//*  PLEASE NOTE THAT EXTRA STOWS OF \"NON-REPLACED\" MEMBERS ARE\n//*  STILL CARRIED OUT BECAUSE OF THE DESIGN OF THE PROGRAM.  YOU\n//*  STILL HAVE TO COMPRESS OUT DELETED MEMBERS, EITHER WAY YOU\n//*  RUN THE CVTCLIST PROGRAM.  FOR MY REASONS, PLEASE SEE COMMENTS\n//*  IN THE CODE.\n//*\n//*  IF THE OUTPUT LIBRARIES OF EITHER METHOD ARE NOT IDENTICAL,\n//*  PLEASE CONTACT ME - SAM GOLOB, NEWSWEEK, INC. - 333 ROUTE 46 WEST\n//*  MOUNTAIN LAKES, NJ 07046 - (201) 316-2328.\n//*\n//TST2CVTD JOB (TS,2322),'TECH.SUPPORT',CLASS=M,NOTIFY=TST2SSG,\n//        MSGLEVEL=(1,1),MSGCLASS=T TYPRUN=HOLD\n//*****************************************************************//\n//* CONVERT CLISTS FROM FB - 80 TO VB -255 FORMAT AND VICE-VERSA  *//\n//*****************************************************************//\n//CONVERT  PROC INLIB=XXXX,OUTLIB='TST2SSG.JUNKA.CLIST'\n//CNVTSTEP EXEC PGM=CVTCLIST,REGION=5900K,PARM='NOREPLACE'\n//STEPLIB  DD DISP=SHR,DSN=TST.XA.CMDLIB\n//SYSPRINT DD SYSOUT=*\n//SYSABEND DD SYSOUT=*\n//SYSUT1 DD DISP=SHR,DSN=&INLIB\n//SYSUT2 DD DISP=SHR,DSN=&OUTLIB\n//   PEND\n//CNV001   EXEC CONVERT,INLIB='ISR.V2R3M0.VISRCLIB'\n//CNV002   EXEC CONVERT,INLIB='TST.DAVIS.CLIST'\n//CNV003   EXEC CONVERT,INLIB='TSP.TSO.CLIST'\n//CNV004   EXEC CONVERT,INLIB='OPP1.CLIST'\n//CNV005   EXEC CONVERT,INLIB='TST.A.CLIST'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT187/FILE187.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT187", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}