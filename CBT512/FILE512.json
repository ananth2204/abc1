{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012236000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 411502, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 12, "INMDSNAM": "CBT.V500.FILE512.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE512.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x06'", "DS1TRBAL": "b'j\\xea'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xd8\\x00\\x0c\\x03\\xd9\\x00\\x04\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\t/\\x01\\x01\\t/\\x15\\x00\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-04-02T00:00:00", "modifydate": "2001-04-02T15:00:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 433    FILE:  512\n\n    ORIGINAL DSNAME:  WSBG.CBT433.FILE512\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    27920   PO\n\n\n   PDS117I 36 MEMBERS COUNTED; CUMULATIVE SIZE IS 3,011 RECORDS\n\nTIME THIS PDS WAS SHIPPED:   04/02/01    15:00:57    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00!\\x00!\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "WSBG"}, "text": "Golob, Sam\nFrom:   Luc Van Rompaey <luvr@vt4.net>\nSent:   Wednesday, March 21, 2001 2:55 PM\nTo:     sbgolob@attglobal.net; sbgolob@aol.com\nSubject:  CBT Contribution: Yet Another CUT and PASTE Implementation.\n\nHi Sam,\n\nWith this message, I send you a CUT and PASTE macro pair, which\nyou may want to consider for inclusion in a future version of\nthe CBT tape (even though, granted, there are already lots of\nCUT and PASTE versions floating around).  I am returning to the\nmainframe world, now that I have a new job, and I found the\ndevelopment of these macros a nice way to get re-acquainted with\nthe platform.\n\nAttached to this message is a CUTPASTE.ZIP archive (created with\nWinZip 8.0) that contains a CUTPASTE.XMI file.  The CUTPASTE.XMI\nfile is a binary download, from the mainframe, of a sequential file\nin XMIT format. The PDS from which the file was created, contains\npanels (including tutorial help panels), a message member, and two\nREXX scripts, which implement the macro pair.  There is also a\n#README# member, which describes the macros, including installation\nnotes.\n\nHope you find my contribution useful (albeit not too original),\n--Luc.\n\nLuc Van Rompaey\nTelepolis Antwerpen\nBelgium\nluc.vanrompaey@telepolis.antwerpen.be\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#README#": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00~\\x00~\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 126, "newlines": 126, "modlines": 0, "user": "LUC"}, "text": "\n\nYet Another \"CUT\" and \"PASTE\" Implementation.\n---------------------------------------------\n\n\nAuthor:\n\n   Luc Van Rompaey, Telepolis Antwerpen, Belgium.\n   e-mail: luc.vanrompaey@telepolis.antwerpen.be\n\n\nDate:\n   February 2001.\n\n\nInspiration:\n\n   This code is based on similar developments by Stan Adriaensen,  who\n   is a former colleague of mine at AXA Bank Belgium, and on code that\n   I downloaded from the  \"Mark's MVS Utilities\"  page on the internet\n   (and that was originally taken from  file  182  of  the  CBT  tape,\n   according to the description).\n   I wrote it after I took  a  new  job,  which gets me back into  the\n   mainframe world  (after some eight or nine years of exposure to the\n   PC and LAN world).  I considered it a nice way to get re-acquainted\n   with the mainframe.\n\n\nInstallation:\n\n   o  Copy the following members to your CLIST or REXX library:\n         CUT\n         PASTE\n\n   o  Copy the following members to your ISPF MESSAGE library:\n         CUT00\n\n   o  Copy the following members to your ISPF PANEL library:\n         CUTDFNEW\n         CUTDFPRM\n         CUTHELP\n         CUTHELP0\n         CUTHLPC\n         CUTHLPCD\n         CUTHLPCH\n         CUTHLPC0\n         CUTHLPC1\n         CUTHLPC2\n         CUTHLPC3\n         CUTHLPC4\n         CUTHLPC5\n         CUTHLPD\n         CUTHLPD0\n         CUTHLPD1\n         CUTHLPD2\n         CUTHLPD3\n         CUTHLPD4\n         CUTHLPP\n         CUTHLPPD\n         CUTHLPPH\n         CUTHLPP0\n         CUTHLPP1\n         CUTHLPP2\n         CUTHLPP3\n         CUTHLPP4\n         CUTPRMPT\n         CUTPRPST\n\n   o  That's it|\n\n\nUsage Information:\n\n   CUT and PASTE are ISPF Edit Macros,  and can be used only while you\n   are editing a dataset.\n   The first time that you use either the CUT  or  PASTE command,  you\n   will be prompted for the default argument values  that you want  to\n   use with the commands.  You may issue the  HELP  command  for  more\n   information.\n\n   Basically, the CUT command will transfer a range of lines from your\n   current dataset into a temporary ISPF table.  It will either APPEND\n   the lines to the ISPF table,  or REPLACE the table  (throwing  away\n   any data that the table contained prior to your CUT command).\n   To specify the range of lines that must be transferred, you use the\n   familiar  \"copy\"  (C, CC, Cnnnnn)  or \"move\"  (M, MM, Mnnnnn)  line\n   commands.\n\n   The PASTE command will transfer the contents of  a  temporary  ISPF\n   table into your current edit dataset.  It  will  either  CLEAR  the\n   table once the data is transferred,  or KEEP the  contents  of  the\n   table for further PASTE (or CUT APPEND) commands.\n   To specify the location where the data must be  inserted,  you  use\n   the familiar \"after\" (A) or \"before\" (B) line commands.\n\n   The CUT PROMPT command will execute the CUT command, but prompt you\n   for the argument  values  first;  the  PASTE PROMPT  command  works\n   similarly for a PASTE operation.\n\n   CUT DEFAULTS  or  PASTE DEFAULTS  will  allow you  to  review  your\n   defaults argument settings for the commands.\n\n   CUT HELP  or  PASTE HELP  will display  the  help  panels  for  the\n   commands, under the control of the ISPF TUTORIAL program.\n\n   The CUT or PASTE action argument  (APPEND,  REPLACE,  CLEAR,  KEEP,\n   DEFAULTS or HELP) may be abbreviated to one character.\n   So,  for  example,  \"CUT A\"  is  equivalent  to  \"CUT APPEND\",  and\n   \"PASTE D\" is equivalent to \"PASTE DEFAULTS\".\n\n   CUT and PASTE can manage  multiple  tables  (multiple  clipboards);\n   each table is identified by a  \"table name\"  that consists  of  two\n   alphanumeric character positions.\n   Special cases:  table names  \"00\" through \"09\" may  be  abbreviated\n   to \"0\" through \"9\" at all times.\n\n   The CUT command imposes a line limit on the tables, to prevent them\n   from growing indefinitely;  you may set the line limit to any value\n   from 100 through 9999.\n\n   The CUT and PASTE commands will honour the current BOUNDS settings;\n   CUT will only transfer the columns that are within the bounds,  and\n   PASTE will insert its data into the columns within the bounds.\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE512": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x01\\x01\\x02_\\x01\\x01\\x08/\\x08\\x03\\x00\\x08\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2001-03-23T08:03:00", "lines": 8, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 512 is from Luc Van Rompaey of Belgium, and contains an   *   FILE 512\n//*           ISPF cut-paste application.  You might say there are  *   FILE 512\n//*           many of these, but here's another one.  It's quite    *   FILE 512\n//*           sophisticated.                                        *   FILE 512\n//*                                                                 *   FILE 512\n//*      email:   Luc Van Rompaey <luvr@vt4.net>                    *   FILE 512\n//*               luc.vanrompaey@telepolis.antwerpen.be             *   FILE 512\n//*                                                                 *   FILE 512\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUT": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x02\\xcf\\x02\\xcf\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 719, "newlines": 719, "modlines": 0, "user": "LUC"}, "text": "/* REXX */\n\n\n/*********************************************************************/\n/*                                                                   */\n/* ISPF Edit Macro \"CUT\".                                            */\n/*                                                                   */\n/* The \"CUT\" and \"PASTE\" edit macros allow users to easily copy text */\n/* lines between ISPF editor sessions, via a temporary ISPF table.   */\n/*                                                                   */\n/* Author: Luc Van Rompaey, Telepolis Antwerpen, Belgium.            */\n/*                                                                   */\n/*********************************************************************/\n\n\n\"ISREDIT MACRO ( Args ) NOPROCESS\"\n\n\nCutMnLim =  100        /* Minimum value allowed for the Line Limit.  */\nCutMxLim = 9999        /* Maximum value allowed for the Lime Limit.  */\n\n\nCutInTbl = \"AA\"        /* Initial value for the Default Table Name.  */\nCutInLim = 2000        /* Initial value for the Default Line Limit.  */\n\n\nCutCmd   = \"\"\nCutTable = \"\"\nCutLimit = \"\"\n\n\nShortCmds = \"A\"      \"D\"        \"H\"    \"?\"    \"P\"      \"R\"\nLongCmds  = \"APPEND\" \"DEFAULTS\" \"HELP\" \"HELP\" \"PROMPT\" \"REPLACE\"\n\n\n\"ISPEXEC VGET (CUTDFCMD CUTDFPST CUTDFTBL CUTDFLIM) PROFILE\"\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Parse the argument string.                                        */\n/*                                                                   */\n/*********************************************************************/\n\n\nArgError = 0\n\n\nDO i = 1 BY 1\n\n\n   arg = WORD( Args , i )\n\n\n   SELECT\n      WHEN ( arg = \"\" ) THEN\n         DO\n            /*********************************************************/\n            /*                                                       */\n            /* This is the end of the argument string.               */\n            /*                                                       */\n            /*********************************************************/\n            LEAVE\n         END\n      WHEN ( LENGTH( arg ) = 2 ) THEN\n         DO\n            IF ( CutTable /= \"\" ) THEN\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* ERROR:  Multiple occurrences of the  'CutTable' */\n                  /*         argument were found.                    */\n                  /*                                                 */\n                  /***************************************************/\n                  ArgError = 1\n               END\n            ELSE\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* This is the 'CutTable' argument.                */\n                  /*                                                 */\n                  /***************************************************/\n                  CutTable = TRANSLATE( arg )\n               END\n         END\n      WHEN ( WORDPOS( arg , \"0 1 2 3 4 5 6 7 8 9\" ) > 0 ) THEN\n         DO\n            IF ( CutTable /= \"\" ) THEN\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* ERROR:  Multiple occurrences of the  'CutTable' */\n                  /*         argument were found.                    */\n                  /*                                                 */\n                  /***************************************************/\n                  ArgError = 1\n               END\n            ELSE\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* This is the 'CutTable' argument.                */\n                  /*                                                 */\n                  /***************************************************/\n                  CutTable = \"0\"arg\n               END\n         END\n      WHEN ( DATATYPE( arg , \"WHOLE NUMBER\" ) ) THEN\n         DO\n            IF ( CutLimit /= \"\" ) THEN\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* ERROR:  Multiple occurrences of the  'CutLimit' */\n                  /*         argument were found.                    */\n                  /*                                                 */\n                  /***************************************************/\n                  ArgError = 1\n               END\n            ELSE\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* Strip leading zeroes off the numeric value.     */\n                  /*                                                 */\n                  /***************************************************/\n                  arg = arg + 0\n                  /***************************************************/\n                  /*                                                 */\n                  /* This is the 'CutLimit' argument,  provided that */\n                  /* its length  is  no  greater  than  the  maximum */\n                  /* length allowed  for  it;  otherwise,  an  error */\n                  /* will have to be reported.                       */\n                  /*                                                 */\n                  /***************************************************/\n                  IF ( LENGTH( arg ) > LENGTH( CutMxLim ) ) THEN\n                     DO\n                        ArgError = 1\n                     END\n                  ELSE\n                     DO\n                        CutLimit = arg\n                     END\n               END\n         END\n      OTHERWISE\n         DO\n            IF ( CutCmd /= \"\" ) THEN\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* ERROR:  Multiple occurrences  of  the  'CutCmd' */\n                  /*         argument were found.                    */\n                  /*                                                 */\n                  /***************************************************/\n                  ArgError = 1\n               END\n            ELSE\n               DO\n                  arg = TRANSLATE( LEFT( arg , 1 ) )\n                  /***************************************************/\n                  /*                                                 */\n                  /* This is the  'CutCmd'  argument,  provided that */\n                  /* it  is  recognised  as  a  valid  action  name; */\n                  /* otherwise, an error will have to be reported.   */\n                  /*                                                 */\n                  /***************************************************/\n                  CmdNo = WORDPOS( arg , ShortCmds )\n                  IF ( CmdNo < 1 ) THEN\n                     DO\n                        ArgError = 1\n                     END\n                  ELSE\n                     DO\n                        CutCmd = WORD( LongCmds , CmdNo )\n                     END\n               END\n         END\n   END\n\n\nEND\n\n\nIF ArgError THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* Invalid arguments.                                          */\n      /* Return an error condition to the ISPF Editor.               */\n      /*                                                             */\n      /***************************************************************/\n      \"ISPEXEC SETMSG MSG(CUT000)\"\n      EXIT 12\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* If the  user  requested  the  \"HELP\"  action,  then  display  the */\n/* appropriate tutorial page.                                        */\n/* Then, when the user returns from the tutorial, just exit.         */\n/*                                                                   */\n/*********************************************************************/\n\n\nIF ( CutCmd = \"HELP\" ) THEN\n   DO\n      \"ISPEXEC CONTROL DISPLAY SAVE\"\n      \"ISPEXEC SELECT PGM(ISPTUTOR) PARM(CUTHELP)\"\n      \"ISPEXEC CONTROL DISPLAY RESTORE\"\n      EXIT 0\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Decide if the 'CUTDFPRM' panel will be displayed to the user.     */\n/*                                                                   */\n/*********************************************************************/\n\n\nSELECT\n   WHEN ( CutCmd = \"DEFAULTS\" ) THEN\n      DO\n         /************************************************************/\n         /*                                                          */\n         /* No special preparatory actions need be taken  to display */\n         /* the 'CUTDFPRM' panel.                                    */\n         /*                                                          */\n         /************************************************************/\n         NOP\n      END\n   WHEN ( CutDfCmd = \"\" ) THEN\n      DO\n         /************************************************************/\n         /*                                                          */\n         /* This is a new user.                                      */\n         /* Display  a  welcome  panel.  Then,  if the user wants to */\n         /* continue,  no further special action need  be  taken  to */\n         /* display the 'CUTDFPRM' panel.                            */\n         /*                                                          */\n         /************************************************************/\n         \"ISPEXEC DISPLAY PANEL(CUTDFNEW)\"\n         ReturnCode = RC\n\n\n         IF ( ReturnCode = 8 ) THEN\n            DO\n               /******************************************************/\n               /*                                                    */\n               /* The user requested termination,  by typing  either */\n               /* the END or the RETURN command.                     */\n               /*                                                    */\n               /******************************************************/\n               EXIT 0\n            END\n      END\n   OTHERWISE\n      DO\n         /************************************************************/\n         /*                                                          */\n         /* Ensure that the 'CUTDFPRM' panel will  be  processed  in */\n         /* non-display mode,  so it will run its data  validations. */\n         /* The panel will not,  then,  get  displayed  to the user, */\n         /* unless it contains invalid data values.                  */\n         /*                                                          */\n         /************************************************************/\n         \"ISPEXEC CONTROL NONDISPL\"\n      END\nEND\n\n\n\"ISPEXEC DISPLAY PANEL(CUTDFPRM)\"\nReturnCode = RC\n\n\nIF ( ReturnCode = 8 ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* The user requested termination, by typing either the END or */\n      /* the RETURN command.                                         */\n      /*                                                             */\n      /***************************************************************/\n      EXIT 0\n   END\n\n\n\"ISPEXEC VPUT (CUTDFCMD CUTDFPST CUTDFTBL CUTDFLIM) PROFILE\"\n\n\nIF ( CutCmd = \"DEFAULTS\" ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* No  further  processing  is  required  for  the  \"DEFAULTS\" */\n      /* action.                                                     */\n      /*                                                             */\n      /***************************************************************/\n      EXIT 0\n   END\n\n\nIF ( CutCmd = \"PROMPT\" ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* The user requested the \"PROMPT\" action.                     */\n      /*                                                             */\n      /***************************************************************/\n      CutCmd = CutDfCmd\n   END\nELSE\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* Ensure that the  'CUTPRMPT'  panel  will  be  processed  in */\n      /* non-display mode.                                           */\n      /*                                                             */\n      /***************************************************************/\n      \"ISPEXEC CONTROL NONDISPL\"\n   END\n\n\n\"ISPEXEC DISPLAY PANEL(CUTPRMPT)\"\nReturnCode = RC\n\n\nIF ( ReturnCode = 8 ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* The user requested termination,  by typing either  the  END */\n      /* or the RETURN command.                                      */\n      /*                                                             */\n      /***************************************************************/\n      EXIT 0\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Use the default values for any arguments that the  user  did  not */\n/* specify.                                                          */\n/*                                                                   */\n/*********************************************************************/\n\n\nIF ( CutCmd   = \"\" ) THEN   CutCmd   = CutDfCmd\nIF ( CutTable = \"\" ) THEN   CutTable = CutDfTbl\nIF ( CutLimit = \"\" ) THEN   CutLimit = CutDfLim\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Process the C(opy) or M(ove) line commands.                       */\n/* Note that the  \"ISREDIT PROCESS\"  command may result in a  return */\n/* code of 16,  if the user enters incomplete  or  conflicting  line */\n/* commands.  By default,  ISPF will intercept these  return  codes, */\n/* and terminate the macro  when they occur.  To  ensure  that  ISPF */\n/* will, instead,  return control back to the edit macro under these */\n/* conditions,  the \"ISREDIT PROCESS\" command will have to be run in */\n/* ERRORS RETURN mode.                                               */\n/*                                                                   */\n/*********************************************************************/\n\n\n\"ISPEXEC CONTROL ERRORS RETURN\"   /* Initiate ERRORS RETURN mode.    */\n\"ISREDIT PROCESS RANGE C M\"       /* Process C(opy) or M(ove) range. */\nReturnCode = RC                   /* Catch the return code.          */\n\"ISPEXEC CONTROL ERRORS CANCEL\"   /* Return to ERRORS CANCEL mode.   */\n\n\nIF ( ReturnCode /= 0 ) THEN\n   DO\n      SELECT\n         WHEN ( ReturnCode < 16 ) THEN\n            DO\n               /******************************************************/\n               /*                                                    */\n               /* Missing line commands.                             */\n               /* In this case,  the  return  code  will  be  4,  to */\n               /* indicate that a range was expected but not found.  */\n               /*                                                    */\n               /******************************************************/\n               \"ISPEXEC SETMSG MSG(CUT000A)\"\n               EXIT 12\n            END\n         WHEN ( ReturnCode = 16 ) THEN\n            DO\n               /******************************************************/\n               /*                                                    */\n               /* Incomplete or conflicting line commands.           */\n               /* ISPF has set up the appropriate  system  variables */\n               /* for  message  'ISRZ002';  these  system  variables */\n               /* will be reused by message 'CUT000B'.               */\n               /*                                                    */\n               /******************************************************/\n               \"ISPEXEC SETMSG MSG(CUT000B)\"\n               EXIT 8\n            END\n         OTHERWISE\n            DO\n               /******************************************************/\n               /*                                                    */\n               /* Severe error.                                      */\n               /*                                                    */\n               /******************************************************/\n               \"ISPEXEC SETMSG MSG(CUT000C)\"\n               EXIT 12\n            END\n      END\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Query the range command,  and the range  of  lines  to  which  it */\n/* applies.                                                          */\n/* Also query the current bounds settings and the data width.        */\n/* Furthermore,  construct  the  ISPF  table  name  into  which  the */\n/* cut lines will be stored, and set the name of its table variable. */\n/*                                                                   */\n/*********************************************************************/\n\n\n\"ISREDIT  ( RangeCmd ) = RANGE_CMD\"        /* Line Command.          */\n\"ISREDIT  ( RangeLo  ) = LINENUM .ZFRANGE\" /* First Line in Range.   */\n\"ISREDIT  ( RangeHi  ) = LINENUM .ZLRANGE\" /* Last  Line in Range.   */\n\n\n\"ISREDIT  ( BndsLo , BndsHi ) = BOUNDS\"    /* Current Bounds.        */\n\"ISREDIT  ( EditCols ) = DATA_WIDTH\"       /* Current Data Width.    */\n\n\nRangeCnt  = RangeHi - RangeLo + 1          /* Lines   within Range.  */\nBndsCols  = BndsHi  - BndsLo  + 1          /* Columns within Bounds. */\n\n\nTableName = \"CUTTBL\"CutTable               /* ISPF Table Name.       */\nTableVar  = \"CUTLINE\"                      /* Table Variable Name.   */\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Query the status of the table with respect to the current logical */\n/* screen.  Only two status values can be supported by this macro:   */\n/*    o  1 - The table is not open in this logical screen;           */\n/*    o  4 - The table is  open  in  SHARED  NOWRITE  mode  in  this */\n/*           logical screen.                                         */\n/*                                                                   */\n/*********************************************************************/\n\n\n\"ISPEXEC TBSTATS\" TableName \"STATUS2(STATUS2)\"\n\n\nIF ( CutCmd = \"REPLACE\" ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* The user requested the \"REPLACE\" action.                    */\n      /*                                                             */\n      /* If the table is currently open within the  logical  screen, */\n      /* then  close  the  table.  Since the use count of the  table */\n      /* within the logical screen may be higher  than  1,  keep  on */\n      /* closing the table  until  the  logical  screen  effectively */\n      /* releases the table.                                         */\n      /*                                                             */\n      /***************************************************************/\n      DO WHILE ( Status2 /= 1 )\n         \"ISPEXEC TBEND\"   TableName\n         \"ISPEXEC TBSTATS\" TableName \"STATUS2(STATUS2)\"\n      END\n      /***************************************************************/\n      /*                                                             */\n      /* Attempt to recreate the table.                              */\n      /*                                                             */\n      /***************************************************************/\n      \"ISPEXEC TBCREATE\" TableName \"NAMES(\"TableVar\")\"                ,\n                                   \"NOWRITE REPLACE SHARE\"\n      ReturnCode = RC\n\n\n      IF ( ReturnCode > 4 ) THEN\n         DO\n            /*********************************************************/\n            /*                                                       */\n            /* The table could not be recreated, most likely because */\n            /* it is still being used by another logical screen.     */\n            /* Attempt to open it, and delete its rows one  by  one, */\n            /* starting from the bottom.                             */\n            /*                                                       */\n            /*********************************************************/\n            \"ISPEXEC TBOPEN\" TableName \"NOWRITE SHARE\"\n            ReturnCode = RC\n\n\n            IF ( ReturnCode = 0 ) THEN\n               DO\n                  \"ISPEXEC TBBOTTOM\" TableName \"NOREAD\"\n                  ReturnCode = RC\n\n\n                  DO WHILE ( ReturnCode = 0 )\n                     \"ISPEXEC TBDELETE\" TableName\n                     ReturnCode = RC\n                  END\n               END\n         END\n   END\nELSE\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* The user requested the \"APPEND\" action.                     */\n      /*                                                             */\n      /* If the table is  not  currently  open  within  the  logical */\n      /* screen,  then  attempt to open it,  and  position  the  row */\n      /* pointer at the bottom of the table.                         */\n      /* If the table cannot be opened, then it will most likely not */\n      /* exist;  in that case, attempt to create it.                 */\n      /*                                                             */\n      /***************************************************************/\n      IF ( Status2 = 1 ) THEN\n         DO\n            \"ISPEXEC TBOPEN\" TableName \"NOWRITE SHARE\"\n            ReturnCode = RC\n\n\n            IF ( ReturnCode = 0 ) THEN\n               DO\n                  \"ISPEXEC TBBOTTOM\" TableName\n               END\n            ELSE\n               DO\n                  \"ISPEXEC TBCREATE\" TableName \"NAMES(\"TableVar\")\"    ,\n                                               \"NOWRITE\"              ,\n                                               \"REPLACE\"              ,\n                                               \"SHARE\"\n               END\n         END\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* At  this  point,  the logical screen should have the  table  open */\n/* in SHARED NOWRITE mode, or an error will have to be reported.     */\n/*                                                                   */\n/*********************************************************************/\n\n\n\"ISPEXEC TBSTATS\" TableName \"STATUS2(STATUS2) ROWCURR(ROWCURR)\"\n\n\nIF ( Status2 /= 4 ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* Return an error condition to the ISPF Editor.               */\n      /*                                                             */\n      /***************************************************************/\n      \"ISPEXEC SETMSG MSG(CUT000J)\"\n      EXIT 12\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Ensure that the table size will remain within  limits  after  the */\n/* cut lines are added to it;  otherwise, report an error.           */\n/*                                                                   */\n/*********************************************************************/\n\n\nNwRowNum = RowCurr + RangeCnt\nIF ( NwRowNum > CutLimit ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* Return an error condition to the ISPF Editor.               */\n      /*                                                             */\n      /***************************************************************/\n      \"ISPEXEC SETMSG MSG(CUT000D)\"\n      EXIT 12\n   END\n\n\nIF ( BndsCols >= EditCols ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* Cut the lines  to the table,  one  by  one,  with  trailing */\n      /* blanks stripped off.                                        */\n      /*                                                             */\n      /***************************************************************/\n      DO i = RangeLo TO RangeHi\n         \"ISREDIT ( DataLine ) = LINE\" i\n         CALL VALUE TableVar , STRIP( DataLine , \"TRAILING\" )\n         \"ISPEXEC TBADD\" TableName\n      END\n\n\n      /***************************************************************/\n      /*                                                             */\n      /* If the line command was \"M\" (for  \"MOVE\"),  then delete the */\n      /* cut lines from the dataset.                                 */\n      /*                                                             */\n      /***************************************************************/\n      IF ( RangeCmd = \"M\" ) THEN\n         DO\n            \"ISREDIT DELETE\" RangeLo RangeHi\n            IF ( RangeCnt = 1 ) THEN\n               DO\n                  IF ( NwRowNum = 1 ) THEN\n                     DO\n                        \"ISPEXEC SETMSG MSG(CUT001A)\"\n                     END\n                  ELSE\n                     DO\n                        \"ISPEXEC SETMSG MSG(CUT001B)\"\n                     END\n               END\n            ELSE\n               DO\n                  \"ISPEXEC SETMSG MSG(CUT001C)\"\n               END\n         END\n      ELSE\n         DO\n            IF ( RangeCnt = 1 ) THEN\n               DO\n                  IF ( NwRowNum = 1 ) THEN\n                     DO\n                        \"ISPEXEC SETMSG MSG(CUT001J)\"\n                     END\n                  ELSE\n                     DO\n                        \"ISPEXEC SETMSG MSG(CUT001K)\"\n                     END\n               END\n            ELSE\n               DO\n                  \"ISPEXEC SETMSG MSG(CUT001L)\"\n               END\n         END\n   END\nELSE\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* Copy only the columns within the current boundary settings. */\n      /* If the line command was \"C\" (for \"COPY\"),  then  leave  the */\n      /* lines in the edit dataset intact.                           */\n      /* If,  on the other hand,  the  line  command  was  \"M\"  (for */\n      /* \"MOVE\"), then replace the cut positions with spaces.        */\n      /*                                                             */\n      /***************************************************************/\n      IF ( RangeCmd = \"C\" ) THEN\n         DO\n            DO i = RangeLo TO RangeHi\n               \"ISREDIT ( DataLine ) = LINE\" i\n               BndsLine = SUBSTR( DataLine , BndsLo , BndsCols )\n               CALL VALUE TableVar , STRIP( BndsLine , \"TRAILING\" )\n               \"ISPEXEC TBADD\" TableName\n            END\n\n\n            IF ( RangeCnt = 1 ) THEN\n               DO\n                  IF ( NwRowNum = 1 ) THEN\n                     DO\n                        \"ISPEXEC SETMSG MSG(CUT001N)\"\n                     END\n                  ELSE\n                     DO\n                        \"ISPEXEC SETMSG MSG(CUT001O)\"\n                     END\n               END\n            ELSE\n               DO\n                  \"ISPEXEC SETMSG MSG(CUT001P)\"\n               END\n         END\n      ELSE\n         DO\n            DO i = RangeLo TO RangeHi\n               \"ISREDIT ( DataLine ) = LINE\" i\n               BndsLine = SUBSTR( DataLine , BndsLo , BndsCols )\n               CALL VALUE TableVar , STRIP( BndsLine , \"TRAILING\" )\n               \"ISPEXEC TBADD\" TableName\n               DataLine = OVERLAY( \"\" , DataLine , BndsLo , BndsCols )\n               \"ISREDIT LINE\" i \"= ( DataLine )\"\n            END\n\n\n            IF ( RangeCnt = 1 ) THEN\n               DO\n                  IF ( NwRowNum = 1 ) THEN\n                     DO\n                        \"ISPEXEC SETMSG MSG(CUT001E)\"\n                     END\n                  ELSE\n                     DO\n                        \"ISPEXEC SETMSG MSG(CUT001F)\"\n                     END\n               END\n            ELSE\n               DO\n                  \"ISPEXEC SETMSG MSG(CUT001G)\"\n               END\n         END\n   END\n\n\nEXIT 0\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CUTDFNEW": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%/-/Welcome New User/-/+\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n%\n+      Welcome New%CUT+and%PASTE+User|\n+\n+\n+      You are about to start using the%CUT+and%PASTE+edit commands, which\n+      allow you to easily copy text lines between ISPF editor sessions.\n+\n+      First,  however,  you will be prompted for  a  few  simple  default\n+      argument values for the%CUT+and%PASTE+commands.\n+\n+      Simply hit the %<ENTER>+ key  if you want to specify these defaults\n+      now.  If,  on the other hand,  you do not want to make use  of  the\n+     %CUT+ and %PASTE+ commands  at this time,  then you may type the%END+\n+      command instead.\n+\n+\n+\n+\n+   Hit%<ENTER>+to continue, or type the%END+command to cancel the operation.\n)INIT\n\n   .HELP = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTDFPRM": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00H\\x00H\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 72, "newlines": 72, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%/-/CUT and PASTE Defaults/-/+\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n%\n%  +Please specify the default argument values for%CUT+and%PASTE+operations:\n%\n%      Default CUT   Action . . ._Z      +%APPEND+or%REPLACE+\n%      Default PASTE Action . . ._Z    +  %CLEAR +or%KEEP+\n%      Default Table Name . . . ._Z +     +Two-character table name+\n%      Default Line Limit . . . ._Z   +   %100+through%9999+\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%  +Hit%<ENTER>+to continue, or type the%END+command to cancel the operation.\n)INIT\n\n   .ZVARS  = '( CUTDFCMD CUTDFPST CUTDFTBL CUTDFLIM )'\n   .HELP   = CUTHLPD\n   .CURSOR = CUTDFCMD\n\n   IF  ( &CUTDFTBL = &Z )\n         &CUTDFTBL = &CUTINTBL\n   IF  ( &CUTDFLIM = &Z )\n         &CUTDFLIM = &CUTINLIM\n\n)PROC\n\n   &CUTDFCMD = TRANS ( TRUNC ( &CUTDFCMD , 1 ) , A , APPEND\n                                                 R , REPLACE\n                                                 * , '&CUTDFCMD' )\n   &CUTDFPST = TRANS ( TRUNC ( &CUTDFPST , 1 ) , C , CLEAR\n                                                 K , KEEP\n                                                 * , '&CUTDFPST' )\n\n   VER ( &CUTDFCMD , NONBLANK , LIST , APPEND , REPLACE , MSG = CUT009A )\n   VER ( &CUTDFPST , NONBLANK , LIST , CLEAR  , KEEP    , MSG = CUT009B )\n\n   &CUTVTEMP = X&CUTDFTBL\n\n   IF  ( &CUTVTEMP = X0 , X1 , X2 , X3 , X4 , X5 , X6 , X7 , X8 , X9 )\n         &CUTDFTBL = 0&CUTDFTBL\n\n   VER ( &CUTDFTBL , NONBLANK , LEN , EQ , 2 , MSG = CUT009C )\n   VER ( &CUTVTEMP , NAME , MSG = CUT009C )\n\n   VER ( &CUTDFLIM , NONBLANK , RANGE , &CUTMNLIM , &CUTMXLIM , MSG = CUT009D )\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHELP": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00,\\x00,\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The%CUT+and%PASTE+edit commands allow you to easily copy text lines\n+      between ISPF editor sessions.\n+\n+      The%CUT+command copies or moves a range of  lines  from  a  dataset\n+      into an intermediate storage area.  It  uses  the  familiar  \"copy\"\n+     %(C, CC, Cnnnnn)+or \"move\"%(M, MM, Mnnnnn)+line commands to identify\n+      the range of lines that must be transferred.\n+\n+      The%PASTE+command will subsequently retrieve  the  lines  from  the\n+      intermediate storage area, and insert them back into a dataset.  It\n+      uses the familiar  \"after\"%(A)+ or  \"before\"%(B)+ destination  line\n+      commands to identify the position where the lines must be inserted.\n+\n+\n+                                                 (Continued on next page)\n+\n+\n+\n+\n)PROC\n\n   &ZCONT = CUTHELP0\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CUTHELP0": {"ttr": 783, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00/\\x00/\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 47, "newlines": 47, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      Both%CUT+and%PASTE+accept  certain  argument  values,  which can be\n+      used to modify their behaviour.\n+\n+      None of  the  arguments  are  mandatory.  Default  values  will  be\n+      substituted for any arguments that you choose to omit.\n+\n+      The following topics document the argument values that you can pass\n+      to the %CUT+ and %PASTE+ commands.  These topics will be  presented\n+      in sequence, or you can select them by number:\n+\n+         %1.+The%CUT+command and its arguments\n+         %2.+The%PASTE+command and its arguments\n+         %3.+Default argument values for%CUT+and%PASTE+\n+\n+\n+\n+\n+\n+\n)PROC\n\n   &ZSEL  = TRANS ( &ZCMD , 1 , CUTHLPC\n                            2 , CUTHLPP\n                            3 , CUTHLPD\n                            * , '?'      )\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPC": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00,\\x00,\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The CUT Command and its Arguments/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The%CUT+command supports three arguments:\n+\n+        %o  action    -+specifies the type of action that the%CUT+command\n+                        will perform;\n+\n+        %o  tablename -+identifies the  intermediate  storage  area  into\n+                        which the%CUT+command will store the  data  lines\n+                        that it transfers from the edit session;\n+\n+        %o  linelimit -+specifies the maximum number of  lines  that  the\n+                        intermediate storage  area  will  be  allowed  to\n+                        contain.\n+\n+      All arguments are optional.  Default  values  will  be  substituted\n+      for any arguments that you do not specify.\n+\n+\n+                                                 (Continued on next page)\n+\n)PROC\n\n   &ZCONT = CUTHLPC0\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPCD": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x000\\x000\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 48, "newlines": 48, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The CUT DEFAULTS Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %CUT DEFAULTS+ (or %CUT D)+ action allows you  to  review,  and\n+      possibly modify,  your default  settings  for  the %CUT+ and %PASTE+\n+      argument values.\n+\n+      The following topics document the input fields that you  will  find\n+      on the%CUT and PASTE Defaults+panel, which will be displayed by the\n+      command.  These topics will be presented in sequence,  or  you  can\n+      select them by number:\n+\n+        %1.+The Default%CUT  +Action\n+        %2.+The Default%PASTE+Action\n+        %3.+The Default Table Name\n+        %4.+The Default Line Limit\n+\n+\n+\n+\n+\n+\n)PROC\n\n   &ZSEL  = TRANS ( &ZCMD , 1 , CUTHLPD1\n                            2 , CUTHLPD2\n                            3 , CUTHLPD3\n                            4 , CUTHLPD4\n                            * , '?'      )\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPCH": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The CUT HELP Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %CUT HELP+(or%CUT H)+action displays the %CUT+ and %PASTE+ help\n+      panels, under the control of the ISPF Tutorial program.\n+\n+      For information on how to use  the  program,  cfr.  the  ISPF  Help\n+      Tutorial.\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPC0": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x003\\x003\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 51, "newlines": 51, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The CUT Command and its Arguments/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The following topics document  the  argument  values  for  the %CUT+\n+      command.  These topics will be presented in sequence,  or  you  can\n+      select them by number:\n+\n+        %1.+The%APPEND+ action\n+        %2.+The%REPLACE+action\n+        %3.+The%PROMPT+ action\n+\n+        %4.+The%tablename+argument\n+        %5.+The%linelimit+argument\n+\n+\n+      The following topics will be presented only if you select them:\n+\n+        %D.+The%DEFAULTS+action\n+        %H.+The%HELP+action\n+\n+\n+\n)PROC\n\n   &ZSEL  = TRANS ( &ZCMD , 1 , CUTHLPC1\n                            2 , CUTHLPC2\n                            3 , CUTHLPC3\n                            4 , CUTHLPC4\n                            5 , CUTHLPC5\n                            D ,*CUTHLPCD\n                            H ,*CUTHLPCH\n                            * , '?'      )\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPC1": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The CUT APPEND Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %CUT APPEND+ (or %CUT A)+ action will transfer a range of lines\n+      from the current edit dataset into the  intermediate  storage  area\n+      that is identified by the%tablename+argument.  If  the storage area\n+      already contains data,  then it will not be  overwritten;  instead,\n+      the transferred lines of text will be appended to it.\n+\n+      If you use any form of the \"move\" line commands %(M, MM,+or%Mnnnnn)+\n+      to identify the range of lines to transfer,  then these lines  will\n+      be removed  from the current edit dataset.  If,  on the other hand,\n+      you use a form of the \"copy\" commands%(C, CC,+or%Cnnnnn),+ then the\n+      contents of the current edit dataset will not be affected.\n+\n+      The%CUT APPEND+command  respects the current bounds settings;  only\n+      the data columns within the current  bounds  will  be  transferred.\n+      If you  \"move\"  lines while non-default bounds are in effect,  then\n+      the transferred data columns will be blanked in the edit dataset.\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CUTHLPC2": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The CUT REPLACE Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %CUT REPLACE+(or %CUT R)+action  will transfer a range of lines\n+      from the current edit dataset into the  intermediate  storage  area\n+      that is identified by  the %tablename+ argument.  Any existing data\n+      will be removed  from  the  storage  area;  the  newly  transferred\n+      lines will, thus, effectively replace the existing contents.\n+\n+      If you use any form of the \"move\" line commands %(M, MM,+or%Mnnnnn)+\n+      to identify the range of lines to transfer,  then these lines  will\n+      be removed  from the current edit dataset.  If,  on the other hand,\n+      you use a form of the \"copy\" commands%(C, CC,+or%Cnnnnn),+ then the\n+      contents of the current edit dataset will not be affected.\n+\n+      The%CUT REPLACE+command respects the current bounds settings;  only\n+      the data columns within the current  bounds  will  be  transferred.\n+      If you  \"move\"  lines while non-default bounds are in effect,  then\n+      the transferred data columns will be blanked in the edit dataset.\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CUTHLPC3": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The CUT PROMPT Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %CUT PROMPT +(or %CUT P)+ action will transfer a range of lines\n+      from the current edit dataset into an  intermediate  storage  area.\n+      It will present you with a panel,  to prompt you for  the  argument\n+      values that you want to apply to the data transfer.  The panel will\n+      have the following input fields:\n+\n+        %o  Action     -+Either%APPEND+or%REPLACE;+\n+        %o  Table Name -+The  intermediate  storage  area  into which the\n+                         data lines will be transferred;\n+        %o  Line Limit -+The maximum number of  lines  that  the  storage\n+                         area will be allowed to contain.\n+\n+      The panel will initially be filled in with your default%CUT+action;\n+      the table name and line limit will also be set to  their  defaults,\n+      unless you override them with alternative values upon invocation.\n+\n+      Once you are satisfied with the argument values,  just hit %<ENTER>+\n+      to process them.  Otherwise, type the%END+command to cancel.\n+\n)PROC\n\n   &ZUP   = CUTHLPC\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPC4": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The CUT TableName Argument/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The%CUT+command will store  the  transferred  data  lines  into  an\n+      intermediate storage area,  from where the %PASTE+ command can pick\n+      them up again later.  Note that the storage area is implemented  as\n+      a temporary ISPF table;  as  a  consequence,  it  will  be  cleared\n+      as soon as you exit the ISPF environment.\n+\n+      The%CUT+and%PASTE+commands support  multiple  simultaneous  storage\n+      areas.  Each storage area is identified  by  a  table  name,  which\n+      consists of two alphanumeric  character  positions  (i.e.,  decimal\n+      digits,  case-insensitive  letters,  or the symbols '#', '$', '@').\n+      Note that for the numeric  table  names  '00'  to  '09',  only  the\n+      rightmost character position, '0' to '9', need actually be typed.\n+\n+      One of the table names will be designated  as  the  default  table.\n+      (You can use the%CUT DEFAULTS+or%PASTE DEFAULTS+command  to  verify\n+      this setting.) %CUT+ and %PASTE+ will operate on this default table\n+      unless you specify a different table name upon  invocation  (or  on\n+      the panel displayed by the%CUT PROMPT+or%PASTE PROMPT+command).\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPC5": {"ttr": 1041, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The CUT LineLimit Argument/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %CUT+ command imposes a line limit  on its intermediate storage\n+      areas, to prevent them from growing indefinitely.\n+\n+      If  a %CUT+ operation would cause its target storage area  to  grow\n+      beyond its maximum number of lines,  then the command will  not  be\n+      executed, but an error message will be produced instead.\n+\n+      Note that the limit applies only to the  number  of  lines  in  the\n+      table that is involved in the  current %CUT+ operation;  any  lines\n+      that you may have stored in  any  of  the  other  tables,  are  not\n+      counted.  Also,  if you specify a  limit  that  is  less  than  the\n+      current number of lines in the table, then no lines will be deleted\n+      from the table.\n+\n+      The line limit must be an integer value from%100+to%9999.+ You will\n+      most likely choose to omit it most of the time,  and allow the %CUT+\n+      command to use the default line limit instead.  (You  can  use  the\n+     %CUT DEFAULTS+or%PASTE DEFAULTS+command to verify this setting.)\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPD": {"ttr": 1043, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00,\\x00,\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: Default Argument Values for CUT and PASTE/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The first time that you invoke either the%CUT+or the%PASTE+command,\n+      you will be asked to supply the default  argument  values  that you\n+      want to use for the commands.\n+\n+      These defaults allow you to run the%CUT+and%PASTE+commands  without\n+      any arguments,  since the  default  values  will  be  automatically\n+      substituted  for  any  arguments  that  you  do  not  specify  upon\n+      invocation.\n+\n+      Later on,  you  may  review,  and  possibly  modify,  your  default\n+      argument settings at any time,  by issuing either the %CUT DEFAULTS+\n+      or  (equivalently)  the %PASTE DEFAULTS+ command.  Note  that  only\n+      the first character position of the action argument is required, so\n+      you may abbreviate the commands to%CUT D+or%PASTE D+respectively.\n+\n+\n+                                                 (Continued on next page)\n+\n+\n)PROC\n\n   &ZCONT = CUTHLPD0\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPD0": {"ttr": 1045, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x000\\x000\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 48, "newlines": 48, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: Default Argument Values for CUT and PASTE/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %CUT and PASTE Defaults+ panel  prompts  you  for  the  default\n+      argument values that you want to use for%CUT+and%PASTE+operations.\n+\n+      The following topics document the input fields that you  will  find\n+      on the panel.  These topics will be presented in sequence,  or  you\n+      can select them by number:\n+\n+        %1.+The Default%CUT  +Action\n+        %2.+The Default%PASTE+Action\n+        %3.+The Default Table Name\n+        %4.+The Default Line Limit\n+\n+\n+\n+\n+\n+\n+\n+\n)PROC\n\n   &ZSEL  = TRANS ( &ZCMD , 1 , CUTHLPD1\n                            2 , CUTHLPD2\n                            3 , CUTHLPD3\n                            4 , CUTHLPD4\n                            * , '?'      )\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPD1": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The Default CUT Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The default%CUT+action will be assumed whenever you issue  the %CUT+\n+      command without an%action+argument.  You may set the default action\n+      to either of the following values:\n+\n+        %o  APPEND  -+By default,  the%CUT+command will operate in%APPEND+\n+                      mode:  If the target storage area already  contains\n+                      data,  then it will  not be  overwritten;  instead,\n+                      the transferred lines  of  text  will  be  appended\n+                      to it.\n+\n+        %o  REPLACE -+By default, the%CUT+command will operate in%REPLACE+\n+                      mode:  Any existing data will be removed  from  the\n+                      target storage area;  the newly  transferred  lines\n+                      will, thus, replace the existing contents.\n+\n+\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPD2": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The Default PASTE Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The default %PASTE+ action will be assumed whenever you  issue  the\n+     %PASTE+command without an %action+argument.  You may set the default\n+      action to either of the following values:\n+\n+        %o  CLEAR -+By  default,  the%PASTE+command will operate in%CLEAR+\n+                    mode:  The intermediate storage area  will be cleared\n+                    once the lines are inserted  (provided, however, that\n+                    all lines fit within  the  destination  area  without\n+                    truncation).\n+\n+        %o  KEEP  -+By  default,  the%PASTE+command will operate in %KEEP+\n+                    mode:  The contents  of the intermediate storage area\n+                    will not be  affected,  and  it  can  be  reused  for\n+                    further%PASTE+operations.\n+\n+\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPD3": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The Default Table Name/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The default table name will be assumed whenever you issue  the %CUT+\n+      or%PASTE+command  without  a %tablename+ argument.  Initially,  the\n+     %CUT and PASTE Defaults+panel will designate table name %AA+ as  the\n+      default table,  but you can override this  specification  with  any\n+      valid table name, if you wish.\n+\n+      Remember that table names consist  of  two  alphanumeric  character\n+      positions  (i.e., decimal digits, case-insensitive letters,  or the\n+      symbols '#', '$', '@').  Also,  for the numeric table names '00' to\n+      '09',  only the rightmost character  position,  '0'  to  '9',  need\n+      actually be typed;  the leading zero will,  then,  automatically be\n+      added in.\n+\n+\n+\n+\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPD4": {"ttr": 1287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The Default Line Limit/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %CUT+ command imposes a line limit  on its intermediate storage\n+      areas, to prevent them from growing indefinitely.  The default line\n+      limit will be assumed whenever you issue the%CUT+command  without a\n+     %linelimit+argument.  Initially,  the %CUT and PASTE Defaults+ panel\n+      will assume a default limit of %2000+ lines,  but you may  override\n+      this specification with any valid line limit, if you wish.\n+\n+      Remember that the line limit must be an integer value from %100+ to\n+     %9999.+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPP": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00,\\x00,\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The PASTE Command and its Arguments/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The%PASTE+command accepts two arguments:\n+\n+        %o  action    -+specifies the  type  of  action  that  the %PASTE+\n+                        command will perform;\n+\n+        %o  tablename -+identifies the  intermediate  storage  area  from\n+                        which the%PASTE+command will  retrieve  the  data\n+                        lines that it transfers into the edit session.\n+\n+      Both arguments are optional.  Default values  will  be  substituted\n+      for any arguments that you do not specify.\n+\n+\n+                                                 (Continued on next page)\n+\n+\n+\n+\n+\n)PROC\n\n   &ZCONT = CUTHLPP0\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPPD": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x000\\x000\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 48, "newlines": 48, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The PASTE DEFAULTS Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %PASTE DEFAULTS+(or%PASTE D)+ action allows you to review,  and\n+      possibly modify,  your default  settings  for  the %CUT+ and %PASTE+\n+      argument values.\n+\n+      The following topics document the input fields that you  will  find\n+      on the%CUT and PASTE Defaults+panel, which will be displayed by the\n+      command.  These topics will be presented in sequence,  or  you  can\n+      select them by number:\n+\n+        %1.+The Default%CUT  +Action\n+        %2.+The Default%PASTE+Action\n+        %3.+The Default Table Name\n+        %4.+The Default Line Limit\n+\n+\n+\n+\n+\n+\n)PROC\n\n   &ZSEL  = TRANS ( &ZCMD , 1 , CUTHLPD1\n                            2 , CUTHLPD2\n                            3 , CUTHLPD3\n                            4 , CUTHLPD4\n                            * , '?'      )\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPPH": {"ttr": 1293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The PASTE HELP Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %PASTE HELP+(or%PASTE H)+action displays the%CUT+and%PASTE+help\n+      panels, under the control of the ISPF Tutorial program.\n+\n+      For information on how to use  the  program,  cfr.  the  ISPF  Help\n+      Tutorial.\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPP0": {"ttr": 1295, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x002\\x002\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 50, "newlines": 50, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The PASTE Command and its Arguments/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The following topics document the argument  values  for  the %PASTE+\n+      command.  These topics will be presented in sequence,  or  you  can\n+      select them by number:\n+\n+        %1.+The%CLEAR +action\n+        %2.+The%KEEP  +action\n+        %3.+The%PROMPT+action\n+\n+        %4.+The%tablename+argument\n+\n+\n+      The following topics will be presented only if you select them:\n+\n+        %D.+The%DEFAULTS+action\n+        %H.+The%HELP+action\n+\n+\n+\n+\n)PROC\n\n   &ZSEL  = TRANS ( &ZCMD , 1 , CUTHLPP1\n                            2 , CUTHLPP2\n                            3 , CUTHLPP3\n                            4 , CUTHLPP4\n                            D ,*CUTHLPPD\n                            H ,*CUTHLPPH\n                            * , '?'      )\n   &ZUP = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPP1": {"ttr": 1297, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The PASTE CLEAR Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %PASTE CLEAR+ (or %PASTE C)+ action will insert the contents of\n+      an intermediate storage area into the  current  edit  dataset.  The\n+      storage area is identified by the%tablename+argument, and must have\n+      been created by the%CUT+command.  The position where the data lines\n+      are to be inserted,  must be specified by the familiar %A+(\"after\")\n+      or%B+(\"before\") destination line commmand.\n+\n+      The intermediate storage area will be cleared once  the  lines  are\n+      inserted,  provided that they all fit within the  destination  area\n+      without truncation.  If one or more lines have to be truncated upon\n+      insertion,  then the contents of  the  storage  area  will  not  be\n+      affected.\n+\n+      The%PASTE CLEAR+command respects the current bounds  settings;  the\n+      data will be inserted into the column positions  that  fall  within\n+      the current bounds.\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CUTHLPP2": {"ttr": 1299, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The PASTE KEEP Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %PASTE KEEP+ (or %PASTE K)+ action will insert the contents  of\n+      an intermediate storage area into the  current  edit  dataset.  The\n+      storage area is identified by the%tablename+argument, and must have\n+      been created by the%CUT+command.  The position where the data lines\n+      are to be inserted,  must be specified by the familiar %A+(\"after\")\n+      or%B+(\"before\") destination line commmand.\n+\n+      The contents of the intermediate storage area will not be affected,\n+      so it can be reused for further%PASTE+(or%\"CUT APPEND\")+operations.\n+\n+      The%PASTE KEEP+command respects the current  bounds  settings;  the\n+      data will be inserted into the column positions  that  fall  within\n+      the current bounds.\n+\n+\n+\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CUTHLPP3": {"ttr": 1301, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The PASTE PROMPT Action/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The %PASTE PROMPT+ (or %PASTE P)+ action will insert  the  contents\n+      of an intermediate storage area  into  the  current  edit  dataset.\n+      It will present you with a panel,  to prompt you for  the  argument\n+      values that you want to apply to the data transfer.  The panel will\n+      have the following input fields:\n+\n+        %o  Action     -+Either%CLEAR+or%KEEP;+\n+        %o  Table Name -+The  intermediate  storage  area  into which the\n+                         data lines will be transferred.\n+\n+      The panel will initially be  filled  in  with  your  default %PASTE+\n+      action;  the table name will also be set to its default, unless you\n+      override it with an alternative value upon invocation.\n+\n+      Once you are satisfied with the argument values,  just hit %<ENTER>+\n+      to process them.  Otherwise, type the%END+command to cancel.\n+\n+\n+\n)PROC\n\n   &ZUP   = CUTHLPP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTHLPP4": {"ttr": 1303, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00+\\x00+\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%TUTORIAL/-/CUT and PASTE Help: The PASTE TableName Argument/-/\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n+      The%PASTE+command will transfer lines from an intermediate  storage\n+      area,  into which they were stored by the %CUT+ command.  Note that\n+      the storage area is implemented  as  a  temporary  ISPF  table;  as\n+      a consequence,  it will be cleared as soon as  you  exit  the  ISPF\n+      environment.\n+\n+      The%CUT+and%PASTE+commands support  multiple  simultaneous  storage\n+      areas.  Each storage area is identified  by  a  table  name,  which\n+      consists of two alphanumeric  character  positions  (i.e.,  decimal\n+      digits,  case-insensitive  letters,  or the symbols '#', '$', '@').\n+      Note that for the numeric  table  names  '00'  to  '09',  only  the\n+      rightmost character position, '0' to '9', need actually be typed.\n+\n+      One of the table names will be designated  as  the  default  table.\n+      (You can use the%CUT DEFAULTS+or%PASTE DEFAULTS+command  to  verify\n+      this setting.) %CUT+ and %PASTE+ will operate on this default table\n+      unless you specify a different table name upon  invocation  (or  on\n+      the panel displayed by the%CUT PROMPT+or%PASTE PROMPT+command).\n+\n)PROC\n\n   &ZUP   = CUTHELP\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTPRMPT": {"ttr": 1538, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00H\\x00H\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 72, "newlines": 72, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%/-/CUT Argument Values/-/+\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n%\n%  +Please specify the argument values for this%CUT+operation:\n%\n%      Action . . . ._Z      +%APPEND+or%REPLACE+\n%      Table Name . ._Z +     +Two-character table name+\n%      Line Limit . ._Z   +   %100+through%9999+\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%  +Hit%<ENTER>+to continue, or type the%END+command to cancel the operation.\n)INIT\n\n   .ZVARS  = '( CUTCMD CUTTABLE CUTLIMIT )'\n   .HELP   = CUTHLPC3\n   .CURSOR = CUTCMD\n\n   IF  ( &CUTCMD   = &Z )\n         &CUTCMD   = &CUTDFCMD\n   IF  ( &CUTTABLE = &Z )\n         &CUTTABLE = &CUTDFTBL\n   IF  ( &CUTLIMIT = &Z )\n         &CUTLIMIT = &CUTDFLIM\n\n)PROC\n\n   &CUTCMD = TRANS ( TRUNC ( &CUTCMD , 1 ) , A , APPEND\n                                             R , REPLACE\n                                             * , '&CUTCMD' )\n\n   VER ( &CUTCMD , LIST , APPEND , REPLACE , MSG = CUT009J )\n\n   IF  ( &CUTTABLE \u00ac= &Z )\n\n         &CUTVTEMP = X&CUTTABLE\n\n         IF  ( &CUTVTEMP = X0 , X1 , X2 , X3 , X4 , X5 , X6 , X7 , X8 , X9 )\n               &CUTTABLE = 0&CUTTABLE\n\n         VER ( &CUTTABLE , LEN  , EQ  , 2 , MSG = CUT009K )\n         VER ( &CUTVTEMP , NAME , MSG = CUT009K )\n\n   VER ( &CUTLIMIT , RANGE , &CUTMNLIM , &CUTMXLIM , MSG = CUT009L )\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUTPRPST": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00D\\x00D\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 68, "newlines": 68, "modlines": 0, "user": "LUC"}, "text": ")ATTR DEFAULT(%+_)\n\n/******************************************************************************/\n/*                                                                            */\n/* NOTE:                                                                      */\n/*    The above attribute defaults are equivalent to:                         */\n/*                                                                            */\n/*       )ATTR                                                                */\n/*          % TYPE(TEXT)  INTENS(HIGH)                                        */\n/*          + TYPE(TEXT)  INTENS(LOW)                                         */\n/*          _ TYPE(INPUT) INTENS(HIGH)                                        */\n/*                                                                            */\n/******************************************************************************/\n\n)BODY EXPAND(//)\n%/-/PASTE Argument Values/-/+\n%COMMAND ===>_ZCMD                                                             +\n%\n%\n%\n%  +Please specify the argument values for this%PASTE+operation:\n%\n%      Action . . . ._Z   +%CLEAR+or%KEEP+\n%      Table Name . ._Z +  +Two-character table name+\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%  +Hit%<ENTER>+to continue, or type the%END+command to cancel the operation.\n)INIT\n\n   .ZVARS  = '( PASTECMD CUTTABLE )'\n   .HELP   = CUTHLPP3\n   .CURSOR = PASTECMD\n\n   IF  ( &PASTECMD = &Z )\n         &PASTECMD = &CUTDFPST\n   IF  ( &CUTTABLE = &Z )\n         &CUTTABLE = &CUTDFTBL\n\n)PROC\n\n   &PASTECMD = TRANS ( TRUNC ( &PASTECMD , 1 ) , C , CLEAR\n                                                 K , KEEP\n                                                 * , '&PASTECMD' )\n\n   VER ( &PASTECMD , LIST , CLEAR , KEEP , MSG = CUT009S )\n\n   IF  ( &CUTTABLE \u00ac= &Z )\n\n         &CUTVTEMP = X&CUTTABLE\n\n         IF  ( &CUTVTEMP = X0 , X1 , X2 , X3 , X4 , X5 , X6 , X7 , X8 , X9 )\n               &CUTTABLE = 0&CUTTABLE\n\n         VER ( &CUTTABLE , LEN  , EQ  , 2 , MSG = CUT009T )\n         VER ( &CUTVTEMP , NAME , MSG = CUT009T )\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUT00": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x00\\x84\\x00\\x84\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 132, "newlines": 132, "modlines": 0, "user": "LUC"}, "text": "CUT000  'Invalid arguments'                      .ALARM=YES .HELP=CUTHELP NOKANA\n'USAGE: CUT \u00a2APPEND|REPLACE|PROMPT|DEFAULTS|HELP! \u00a2tablename! \u00a2linelimit!'\n\nCUT000A 'Range missing'                          .ALARM=YES .HELP=CUTHELP NOKANA\n'Use the C(opy) or M(ove) line commands to specify the range of lines to cut.'\n\nCUT000B '&ZERRSM'                                .ALARM=YES .HELP=CUTHELP NOKANA\n'&ZERRLM'\n\nCUT000C 'Severe error'                           .ALARM=YES .HELP=CUTHELP NOKANA\n'The requested command cannot be executed because of an internal error.'\n\nCUT000D 'Table size exceeded'                    .ALARM=YES .HELP=CUTHELP NOKANA\n'Table \"&CUTTABLE\" would require &NWROWNUM lines, ' +\n'but the current limit is &CUTLIMIT..'\n\nCUT000J 'Cannot open table'                      .ALARM=YES .HELP=CUTHELP NOKANA\n'Table \"&CUTTABLE\" cannot be used at this time. ' +\n'Its Open Status Code is &STATUS2..'\n\nCUT001A '1 line moved'                            .ALARM=NO .HELP=CUTHELP NOKANA\n'1 line was moved to table \"&CUTTABLE\". Table size is 1 row.'\n\nCUT001B '1 line moved'                            .ALARM=NO .HELP=CUTHELP NOKANA\n'1 line was moved to table \"&CUTTABLE\". Table size is &NWROWNUM rows.'\n\nCUT001C '&RANGECNT lines moved'                   .ALARM=NO .HELP=CUTHELP NOKANA\n'&RANGECNT lines were moved to table \"&CUTTABLE\". ' +\n'Table size is &NWROWNUM rows.'\n\nCUT001E '1 bounded line moved'                    .ALARM=NO .HELP=CUTHELP NOKANA\n'&BNDSCOLS cols of 1 line were moved to table \"&CUTTABLE\". ' +\n'Table size is 1 row.'\n\nCUT001F '1 bounded line moved'                    .ALARM=NO .HELP=CUTHELP NOKANA\n'&BNDSCOLS cols of 1 line were moved to table \"&CUTTABLE\". ' +\n'Table size is &NWROWNUM rows.'\n\nCUT001G '&RANGECNT bounded lines moved'           .ALARM=NO .HELP=CUTHELP NOKANA\n'&BNDSCOLS cols of &RANGECNT lines were moved to table \"&CUTTABLE\". '    +\n'Table size is &NWROWNUM rows.'\n\nCUT001J '1 line copied'                           .ALARM=NO .HELP=CUTHELP NOKANA\n'1 line was copied to table \"&CUTTABLE\". Table size is 1 row.'\n\nCUT001K '1 line copied'                           .ALARM=NO .HELP=CUTHELP NOKANA\n'1 line was copied to table \"&CUTTABLE\". Table size is &NWROWNUM rows.'\n\nCUT001L '&RANGECNT lines copied'                  .ALARM=NO .HELP=CUTHELP NOKANA\n'&RANGECNT lines were copied to table \"&CUTTABLE\". ' +\n'Table size is &NWROWNUM rows.'\n\nCUT001N '1 bounded line copied'                   .ALARM=NO .HELP=CUTHELP NOKANA\n'&BNDSCOLS cols of 1 line were copied to table \"&CUTTABLE\". ' +\n'Table size is 1 row.'\n\nCUT001O '1 bounded line copied'                   .ALARM=NO .HELP=CUTHELP NOKANA\n'&BNDSCOLS cols of 1 line were copied to table \"&CUTTABLE\". ' +\n'Table size is &NWROWNUM rows.'\n\nCUT001P '&RANGECNT bounded lines copied'          .ALARM=NO .HELP=CUTHELP NOKANA\n'&BNDSCOLS cols of &RANGECNT lines were copied to table \"&CUTTABLE\". ' +\n'Table size is &NWROWNUM rows.'\n\nCUT002 'Invalid arguments'                       .ALARM=YES .HELP=CUTHELP NOKANA\n'USAGE: PASTE \u00a2CLEAR|KEEP|PROMPT|DEFAULTS|HELP! \u00a2tablename! \u00a2linelimit!'\n\nCUT002A 'Destination missing'                    .ALARM=YES .HELP=CUTHELP NOKANA\n'Use the A(fter) or B(efore) line commands to specify the paste destination.'\n\nCUT002B '&ZERRSM'                                .ALARM=YES .HELP=CUTHELP NOKANA\n'&ZERRLM'\n\nCUT002C 'Severe error'                           .ALARM=YES .HELP=CUTHELP NOKANA\n'The requested command cannot be executed because of an internal error.'\n\nCUT002D 'Nothing to paste'                       .ALARM=YES .HELP=CUTHELP NOKANA\n'Table \"&CUTTABLE\" does not contain any data to paste. Use CUT before PASTE.'\n\nCUT002J 'Cannot open table'                      .ALARM=YES .HELP=CUTHELP NOKANA\n'Table \"&CUTTABLE\" cannot be used at this time. ' +\n'Its Open Status Code is &STATUS2..'\n\nCUT003A 'Pasted with truncation'                 .ALARM=YES .HELP=CUTHELP NOKANA\n'1 line was pasted but truncated. Table \"&CUTTABLE\" was not cleared.'\n\nCUT003B 'Pasted with truncation'                 .ALARM=YES .HELP=CUTHELP NOKANA\n'&PASTECNT lines were pasted with 1 truncation. ' +\n'Table \"&CUTTABLE\" was not cleared.'\n\nCUT003C 'Pasted with truncation'                 .ALARM=YES .HELP=CUTHELP NOKANA\n'&PASTECNT lines were pasted with &TRUNCCNT truncations. ' +\n'Table \"&CUTTABLE\" was not cleared.'\n\nCUT003J '1 line pasted'                           .ALARM=NO .HELP=CUTHELP NOKANA\n'1 line was pasted. Table \"&CUTTABLE\" was cleared.'\n\nCUT003K '&PASTECNT lines pasted'                  .ALARM=NO .HELP=CUTHELP NOKANA\n'&PASTECNT lines were pasted. Table \"&CUTTABLE\" was cleared.'\n\nCUT003L '1 line pasted'                           .ALARM=NO .HELP=CUTHELP NOKANA\n'1 line was pasted. Table \"&CUTTABLE\" was not cleared.'\n\nCUT003M '&PASTECNT lines pasted'                  .ALARM=NO .HELP=CUTHELP NOKANA\n'&PASTECNT lines were pasted. Table \"&CUTTABLE\" was not cleared.'\n\nCUT009A 'Invalid CUT action'                     .ALARM=YES .HELP=CUTHELP NOKANA\n'Enter either APPEND or REPLACE.'\n\nCUT009B 'Invalid PASTE action'                   .ALARM=YES .HELP=CUTHELP NOKANA\n'Enter either CLEAR or KEEP.'\n\nCUT009C 'Invalid table name'                     .ALARM=YES .HELP=CUTHELP NOKANA\n'Enter two alphanumeric characters.'\n\nCUT009D 'Invalid line limit'                     .ALARM=YES .HELP=CUTHELP NOKANA\n'Enter a numeric value between &CUTMNLIM and &CUTMXLIM..'\n\nCUT009J 'Invalid action'                         .ALARM=YES .HELP=CUTHELP NOKANA\n'Enter either APPEND or REPLACE.'\n\nCUT009K 'Invalid table name'                     .ALARM=YES .HELP=CUTHELP NOKANA\n'Enter two alphanumeric characters.'\n\nCUT009L 'Invalid line limit'                     .ALARM=YES .HELP=CUTHELP NOKANA\n'Enter a numeric value between &CUTMNLIM and &CUTMXLIM..'\n\nCUT009S 'Invalid action'                         .ALARM=YES .HELP=CUTHELP NOKANA\n'Enter either CLEAR or KEEP.'\n\nCUT009T 'Invalid table name'                     .ALARM=YES .HELP=CUTHELP NOKANA\n'Enter two alphanumeric characters.'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PASTE": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08\\x0f\\x01\\x01\\x08\\x0f\\x17\\x18\\x02e\\x02e\\x00\\x00\\xd3\\xe4\\xc3@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-21T00:00:00", "modifydate": "2001-03-21T17:18:00", "lines": 613, "newlines": 613, "modlines": 0, "user": "LUC"}, "text": "/* REXX */\n\n\n/*********************************************************************/\n/*                                                                   */\n/* ISPF Edit Macro \"PASTE\".                                          */\n/*                                                                   */\n/* The \"CUT\" and \"PASTE\" edit macros allow users to easily copy text */\n/* lines between ISPF editor sessions, via a temporary ISPF table.   */\n/*                                                                   */\n/* Author: Luc Van Rompaey, Telepolis Antwerpen, Belgium.            */\n/*                                                                   */\n/*********************************************************************/\n\n\n\"ISREDIT MACRO ( Args ) NOPROCESS\"\n\n\nCutMnLim  =  100       /* Minimum value allowed for the Line Limit.  */\nCutMxLim  = 9999       /* Maximum value allowed for the Lime Limit.  */\n\n\nCutInTbl  = \"AA\"       /* Initial value for the Default Table Name.  */\nCutInLim  = 2000       /* Initial value for the Default Line Limit.  */\n\n\nPasteCmd  = \"\"\nCutTable  = \"\"\n\n\nShortCmds = \"C\"     \"D\"        \"H\"    \"?\"    \"K\"    \"P\"\nLongCmds  = \"CLEAR\" \"DEFAULTS\" \"HELP\" \"HELP\" \"KEEP\" \"PROMPT\"\n\n\n\"ISPEXEC VGET (CUTDFCMD CUTDFPST CUTDFTBL CUTDFLIM) PROFILE\"\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Parse the argument string.                                        */\n/*                                                                   */\n/*********************************************************************/\n\n\nArgError = 0\n\n\nDO i = 1 BY 1\n\n\n   arg = WORD( Args , i )\n\n\n   SELECT\n      WHEN ( arg = \"\" ) THEN\n         DO\n            /*********************************************************/\n            /*                                                       */\n            /* This is the end of the argument string.               */\n            /*                                                       */\n            /*********************************************************/\n            LEAVE\n         END\n      WHEN ( LENGTH( arg ) = 2 ) THEN\n         DO\n            IF ( CutTable /= \"\" ) THEN\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* ERROR:  Multiple occurrences of the  'CutTable' */\n                  /*         argument were found.                    */\n                  /*                                                 */\n                  /***************************************************/\n                  ArgError = 1\n               END\n            ELSE\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* This is the 'CutTable' argument.                */\n                  /*                                                 */\n                  /***************************************************/\n                  CutTable = TRANSLATE( arg )\n               END\n         END\n      WHEN ( WORDPOS( arg , \"0 1 2 3 4 5 6 7 8 9\" ) > 0 ) THEN\n         DO\n            IF ( CutTable /= \"\" ) THEN\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* ERROR:  Multiple occurrences of the  'CutTable' */\n                  /*         argument were found.                    */\n                  /*                                                 */\n                  /***************************************************/\n                  ArgError = 1\n               END\n            ELSE\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* This is the 'CutTable' argument.                */\n                  /*                                                 */\n                  /***************************************************/\n                  CutTable = \"0\"arg\n               END\n         END\n      OTHERWISE\n         DO\n            IF ( PasteCmd /= \"\" ) THEN\n               DO\n                  /***************************************************/\n                  /*                                                 */\n                  /* ERROR:  Multiple occurrences of the  'PasteCmd' */\n                  /*         argument were found.                    */\n                  /*                                                 */\n                  /***************************************************/\n                  ArgError = 1\n               END\n            ELSE\n               DO\n                  arg = TRANSLATE( LEFT( arg , 1 ) )\n                  /***************************************************/\n                  /*                                                 */\n                  /* This is the 'PasteCmd' argument,  provided that */\n                  /* it  is  recognised  as  a  valid  action  name; */\n                  /* otherwise, an error will have to be reported.   */\n                  /*                                                 */\n                  /***************************************************/\n                  CmdNo = WORDPOS( arg , ShortCmds )\n                  IF ( CmdNo < 1 ) THEN\n                     DO\n                        ArgError = 1\n                     END\n                  ELSE\n                     DO\n                        PasteCmd = WORD( LongCmds , CmdNo )\n                     END\n               END\n         END\n   END\n\n\nEND\n\n\nIF ArgError THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* Invalid arguments.                                          */\n      /* Return an error condition to the ISPF Editor.               */\n      /*                                                             */\n      /***************************************************************/\n      \"ISPEXEC SETMSG MSG(CUT002)\"\n      EXIT 12\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* If the  user  requested  the  \"HELP\"  action,  then  display  the */\n/* appropriate tutorial page.                                        */\n/* Then, when the user returns from the tutorial, just exit.         */\n/*                                                                   */\n/*********************************************************************/\n\n\nIF ( PasteCmd = \"HELP\" ) THEN\n   DO\n      \"ISPEXEC CONTROL DISPLAY SAVE\"\n      \"ISPEXEC SELECT PGM(ISPTUTOR) PARM(CUTHELP)\"\n      \"ISPEXEC CONTROL DISPLAY RESTORE\"\n      EXIT 0\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Decide if the 'CUTDFPRM' panel will be  displayed  to  the  user, */\n/* i.e., if the user requested the \"DEFAULTS\" action.                */\n/*                                                                   */\n/*********************************************************************/\n\n\nSELECT\n   WHEN ( PasteCmd = \"DEFAULTS\" ) THEN\n      DO\n         /************************************************************/\n         /*                                                          */\n         /* No special preparatory actions need be taken  to display */\n         /* the 'CUTDFPRM' panel.                                    */\n         /*                                                          */\n         /************************************************************/\n         NOP\n      END\n   WHEN ( CutDfCmd = \"\" ) THEN\n      DO\n         /************************************************************/\n         /*                                                          */\n         /* This is a new user.                                      */\n         /* Display  a  welcome  panel.  Then,  if the user wants to */\n         /* continue,  no further special action need  be  taken  to */\n         /* display the 'CUTDFPRM' panel.                            */\n         /*                                                          */\n         /************************************************************/\n         \"ISPEXEC DISPLAY PANEL(CUTDFNEW)\"\n         ReturnCode = RC\n\n\n         IF ( ReturnCode = 8 ) THEN\n            DO\n               /******************************************************/\n               /*                                                    */\n               /* The user requested termination,  by typing  either */\n               /* the END or the RETURN command.                     */\n               /*                                                    */\n               /******************************************************/\n               EXIT 0\n            END\n      END\n   OTHERWISE\n      DO\n         /************************************************************/\n         /*                                                          */\n         /* Ensure that the 'CUTDFPRM' panel will  be  processed  in */\n         /* non-display mode,  so it will run its data  validations. */\n         /* The panel will not,  then,  get  displayed  to the user, */\n         /* unless it contains invalid data values.                  */\n         /*                                                          */\n         /************************************************************/\n         \"ISPEXEC CONTROL NONDISPL\"\n      END\nEND\n\n\n\"ISPEXEC DISPLAY PANEL(CUTDFPRM)\"\nReturnCode = RC\n\n\nIF ( ReturnCode = 8 ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* The user requested termination, by typing either the END or */\n      /* the RETURN command.                                         */\n      /*                                                             */\n      /***************************************************************/\n      EXIT 0\n   END\n\n\n\"ISPEXEC VPUT (CUTDFCMD CUTDFPST CUTDFTBL CUTDFLIM) PROFILE\"\n\n\nIF ( PasteCmd = \"DEFAULTS\" ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* No  further  processing  is  required  for  the  \"DEFAULTS\" */\n      /* action.                                                     */\n      /*                                                             */\n      /***************************************************************/\n      EXIT 0\n   END\n\n\nIF ( PasteCmd = \"PROMPT\" ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* The user requested the \"PROMPT\" action.                     */\n      /*                                                             */\n      /***************************************************************/\n      PasteCmd = CutDfPst\n   END\nELSE\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* Ensure that the  'CUTPRPST'  panel  will  be  processed  in */\n      /* non-display mode.                                           */\n      /*                                                             */\n      /***************************************************************/\n      \"ISPEXEC CONTROL NONDISPL\"\n   END\n\n\n\"ISPEXEC DISPLAY PANEL(CUTPRPST)\"\nReturnCode = RC\n\n\nIF ( ReturnCode = 8 ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* The user requested termination,  by typing either  the  END */\n      /* or the RETURN command.                                      */\n      /*                                                             */\n      /***************************************************************/\n      EXIT 0\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Use the default values for any arguments that the  user  did  not */\n/* specify.                                                          */\n/*                                                                   */\n/*********************************************************************/\n\n\nIF ( PasteCmd = \"\" ) THEN   PasteCmd = CutDfPst\nIF ( CutTable = \"\" ) THEN   CutTable = CutDfTbl\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Process the A(fter) or B(efore) line commands.                    */\n/* Note that the  \"ISREDIT PROCESS\"  command may result in a  return */\n/* code of 16,  if the user enters incomplete  or  conflicting  line */\n/* commands.  By default,  ISPF will intercept these  return  codes, */\n/* and terminate the macro  when they occur.  To  ensure  that  ISPF */\n/* will, instead,  return control back to the edit macro under these */\n/* conditions,  the \"ISREDIT PROCESS\" command will have to be run in */\n/* ERRORS RETURN mode.                                               */\n/*                                                                   */\n/*********************************************************************/\n\n\n\"ISPEXEC CONTROL ERRORS RETURN\"     /* Initiate ERRORS RETURN mode.  */\n\"ISREDIT PROCESS DEST\"              /* Process A(fter) or B(efore).  */\nReturnCode = RC                     /* Catch the return code.        */\n\"ISPEXEC CONTROL ERRORS CANCEL\"     /* Return to ERRORS CANCEL mode. */\n\n\n/*********************************************************************/\n/*                                                                   */\n/* INABIAF  (\"It's Not A Bug, It's A Feature\"):  If the edit dataset */\n/* is  empty,  and the user did not specify  the  destination,  then */\n/* the return code from the  \"ISREDIT  PROCESS\"  command will be  20 */\n/* (even though the destination need not really be  explicitly  set, */\n/* since it can just as well be implied).                            */\n/*                                                                   */\n/*********************************************************************/\n\n\nIF ( ReturnCode = 20 ) THEN                   /* INABIAF Workaround. */\n   DO                                         /* INABIAF Workaround. */\n      ReturnCode = 0                          /* INABIAF Workaround. */\n   END                                        /* INABIAF Workaround. */\n\n\nIF ( ReturnCode /= 0 ) THEN\n   DO\n      SELECT\n         WHEN ( ReturnCode < 16 ) THEN\n            DO\n               /******************************************************/\n               /*                                                    */\n               /* Missing line commands.                             */\n               /* In this case,  the  return  code  will  be  8,  to */\n               /* indicate that a destination was expected  but  not */\n               /* found.                                             */\n               /*                                                    */\n               /******************************************************/\n               \"ISPEXEC SETMSG MSG(CUT002A)\"\n               EXIT 12\n            END\n         WHEN ( ReturnCode = 16 ) THEN\n            DO\n               /******************************************************/\n               /*                                                    */\n               /* Incomplete or conflicting line commands.           */\n               /* ISPF has set up the appropriate  system  variables */\n               /* for  message  'ISRZ002';  these  system  variables */\n               /* will be reused by message 'CUT002B'.               */\n               /*                                                    */\n               /******************************************************/\n               \"ISPEXEC SETMSG MSG(CUT002B)\"\n               EXIT 8\n            END\n         OTHERWISE\n            DO\n               /******************************************************/\n               /*                                                    */\n               /* Severe error.                                      */\n               /*                                                    */\n               /******************************************************/\n               \"ISPEXEC SETMSG MSG(CUT002C)\"\n               EXIT 12\n            END\n      END\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Query the destination line number.                                */\n/* Also query the current bounds settings and the data width.        */\n/* Furthermore,  construct  the  ISPF  table  name  from  which  the */\n/* cut lines will be pasted, and set the name of its table variable. */\n/*                                                                   */\n/*********************************************************************/\n\n\n\"ISREDIT ( DestLine ) = LINENUM .ZDEST\"    /* Destination Line.      */\n\n\n\"ISREDIT  ( BndsLo , BndsHi ) = BOUNDS\"    /* Current Bounds.        */\n\"ISREDIT  ( EditCols ) = DATA_WIDTH\"       /* Current Data Width.    */\n\n\nBndsCols  = BndsHi  - BndsLo  + 1          /* Columns within Bounds. */\n\n\nTableName = \"CUTTBL\"CutTable               /* ISPF Table Name.       */\nTableVar  = \"CUTLINE\"                      /* Table Variable Name.   */\n\n\n/*********************************************************************/\n/*                                                                   */\n/* Query the status of the table with respect to the current logical */\n/* screen.  Only two status values can be supported by this macro:   */\n/*    o  1 - The table is not open in this logical screen;           */\n/*    o  4 - The table is  open  in  SHARED  NOWRITE  mode  in  this */\n/*           logical screen.                                         */\n/*                                                                   */\n/* If the table is not open within the logical screen,  then attempt */\n/* to open it.                                                       */\n/*                                                                   */\n/*********************************************************************/\n\n\n\"ISPEXEC TBSTATS\" TableName \"STATUS2(STATUS2)\"\n\n\nIF ( Status2 = 1 ) THEN\n   DO\n      \"ISPEXEC TBOPEN\" TableName \"NOWRITE SHARE\"\n   END\n\n\n/*********************************************************************/\n/*                                                                   */\n/* At  this  point,  the logical screen should have the  table  open */\n/* in SHARED NOWRITE mode, and the table should not be empty.        */\n/*                                                                   */\n/*********************************************************************/\n\n\n\"ISPEXEC TBSTATS\" TableName \"STATUS2(STATUS2) ROWCURR(ROWCURR)\"\n\n\nSELECT\n   WHEN ( Status2 = 1 ) THEN\n      DO\n         /************************************************************/\n         /*                                                          */\n         /* The table is not  open,  most  likely  because  it  does */\n         /* not exist.  Report that the table is empty.              */\n         /*                                                          */\n         /************************************************************/\n         \"ISPEXEC SETMSG MSG(CUT002D)\"\n         EXIT 12\n      END\n   WHEN ( Status2 = 4 ) THEN\n      DO\n         IF ( RowCurr = 0 ) THEN\n            DO\n               /******************************************************/\n               /*                                                    */\n               /* The table is open  in  SHARED  NOWRITE  mode,  but */\n               /* it is empty.  Report that the table is empty.      */\n               /*                                                    */\n               /******************************************************/\n               \"ISPEXEC SETMSG MSG(CUT002D)\"\n               EXIT 12\n            END\n         \"ISPEXEC TBTOP\" TableName\n      END\n   OTHERWISE\n      DO\n         /************************************************************/\n         /*                                                          */\n         /* Return an error condition to the ISPF Editor.            */\n         /*                                                          */\n         /************************************************************/\n         \"ISPEXEC SETMSG MSG(CUT002J)\"\n         EXIT 12\n      END\nEND\n\n\nPasteCnt = 0\nTruncCnt = 0\n\n\nIF ( BndsCols >= EditCols ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* Paste the rows from the table, one by one.                  */\n      /*                                                             */\n      /***************************************************************/\n      DO RowCurr\n         \"ISPEXEC TBSKIP\" TableName\n         \"ISREDIT LINE_AFTER\" DestLine \"= (\" TableVar \")\"\n         ReturnCode = RC\n\n\n         IF ( ReturnCode /= 0 ) THEN\n            DO\n               TruncCnt = TruncCnt + 1\n            END\n         PasteCnt = PasteCnt + 1\n         DestLine = DestLine + 1\n      END\n   END\nELSE\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* Paste only into the columns  within  the  current  boundary */\n      /* settings.                                                   */\n      /*                                                             */\n      /***************************************************************/\n      DO RowCurr\n         \"ISPEXEC TBSKIP\" TableName\n         DataLine = VALUE( TableVar )\n         IF LENGTH( DataLine ) > BndsCols THEN\n            DO\n               DataLine = LEFT( DataLine , BndsCols )\n               TruncCnt = TruncCnt + 1\n            END\n\n\n         \"ISREDIT LINE_AFTER\" DestLine \"= <\" BndsLo \"( DataLine ) >\"\n         PasteCnt = PasteCnt + 1\n         DestLine = DestLine + 1\n      END\n   END\n\n\nIF ( TruncCnt > 0 ) THEN\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* At least one row was truncated when it was pasted into  the */\n      /* edit dataset.  Do not clear the table,  even  if  the  user */\n      /* requested the \"CLEAR\" action.                               */\n      /*                                                             */\n      /***************************************************************/\n      IF ( PasteCnt = 1 ) THEN\n         DO\n            \"ISPEXEC SETMSG MSG(CUT003A)\"\n         END\n      ELSE\n         DO\n            IF ( TruncCnt = 1 ) THEN\n               DO\n                  \"ISPEXEC SETMSG MSG(CUT003B)\"\n               END\n            ELSE\n               DO\n                  \"ISPEXEC SETMSG MSG(CUT003C)\"\n               END\n         END\n   END\nELSE\n   DO\n      /***************************************************************/\n      /*                                                             */\n      /* If the user requested the \"CLEAR\" action,  then  delete the */\n      /* rows from the table one by one, starting from the bottom.   */\n      /*                                                             */\n      /***************************************************************/\n      IF ( PasteCmd = \"CLEAR\" ) THEN\n         DO\n            \"ISPEXEC TBBOTTOM\" TableName \"NOREAD\"\n            ReturnCode = RC\n\n\n            DO WHILE ( ReturnCode = 0 )\n               \"ISPEXEC TBDELETE\" TableName\n               ReturnCode = RC\n            END\n\n\n            IF ( PasteCnt = 1 ) THEN\n               DO\n                  \"ISPEXEC SETMSG MSG(CUT003J)\"\n               END\n            ELSE\n               DO\n                  \"ISPEXEC SETMSG MSG(CUT003K)\"\n               END\n         END\n      ELSE\n         DO\n            IF ( PasteCnt = 1 ) THEN\n               DO\n                  \"ISPEXEC SETMSG MSG(CUT003L)\"\n               END\n            ELSE\n               DO\n                  \"ISPEXEC SETMSG MSG(CUT003M)\"\n               END\n         END\n   END\n\n\nEXIT 0\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT512/FILE512.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT512", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}