{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "T311LBD", "INMTNODE": "X", "INMTUID": "Y", "INMFTIME": "20170512111816000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 32720, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "T311LBD.LIONEL.HELP", "INMMEMBR": "T311LBD.LIONEL.HELP", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"T311LBD.LIONEL.HELP": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 32720, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 32760, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "170132", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\x1e'", "DS1LSTAR": "b'\\x00+\\x04'", "DS1TRBAL": "b'\\x9f\\x1c'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0f\\x10\\x00\\x04\\x95\\x90\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0f\\x10\\x00\\x04\\x95\\x90\\xd8'", "b'P\\x9f\\x83\\xb8\\x00\\x00\\x077\\x00\\x00\\x07:\\x00\\x0e\\x00<'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"STEMEDIT": {"ttr": 5633, "alias": false, "halfwords": 40, "notes": 0, "parms": "b'\\x01\\x03 \\x17\\x01\\x16%\\x9f\\x01\\x16%\\x9f\\x06X\\x00\\xbe\\x00\\xb9\\x00\\x00\\xe2\\xe3\\xc5\\xd4@@@\\x00\\x00\\x00\\x00\\xbe\\x00\\x00\\x00\\xb9\\x00\\x00\\x00\\x00'", "ispf": {"version": "01.03", "flags": 32, "createdate": "2016-09-15T00:00:00", "modifydate": "2016-09-15T06:58:17", "lines": 190, "newlines": 185, "modlines": 0, "user": "STEM   \u0000"}, "text": ")F Function\n\n This assembler sub-routine can be invoked by a REXX EXEC to\n display the contents of stem variables using the ISPF BRIF,\n VIIF or EDIT services.  STEMEDIT is a nice complement to\n the REXX OUTTRAP function, when it is used in the ISPF/PDF\n environment.\n\n STEMEDIT can also PULL lines from the data stack instead of\n using stem variables.  This only works with EDIT or VIEW,\n i.e. not with BROWSE.\n\n STEMEDIT can be used to view or edit all variables.\n Together with \"TRACE ?R\" STEMEDIT can be used for debugging\n your REXX programs.\n\n AUTHOR = Gilbert Saint-Flour <carlos\u00bagsf-soft.com>\n          http://gsf-soft.com/Freeware/\n\n)X Syntax\n   CALL STEMEDIT  service,\n                  stemname\n                  <,firstelem>\n                  <,stemcount>\n                  <,title>\n                  <,panel>\n                  <,lrecl>\n                  <,recfm>\n                  <,profile>\n                  <,varl>\n\n)O Arguments\n\n))SERVICE\n\n  This argument must be coded as 'BROWSE', 'VIEW' or 'EDIT'.\n  It indicates which of the BRIF, VIIF or EDIF services will\n  be used for display.\n\n  If the BROWSE service is requested, the user can enter the\n  V commands on the BROWSE screen to switch to VIEW.  This\n  allows the data to be saved using CREATE/REPLACE, CUT or\n  ROUTE.\n\n))STEMNAME\n\n  The stem of the family of variables to display.  The\n  combined lengths of the stemname argument and the largest\n  subscript (plus the period, if specified) cannot exceed 80\n  characters.  If stemname is a true REXX stem, code a\n  period as the last character.  If you do not specify the\n  period, the subscripts will be concatenated to the stem\n  name without an intervening period.  For example, if you\n  specify a stemname of \"ABC.\", STEMEDIT will look for\n  variables of the form \"ABC.1\", \"ABC.2\", etc. If you\n  specify a stemname of \"XYZ\" (no period), STEMEDIT will\n  look for variables of the form \"XYZ1\", \"XYZ2\", etc.\n\n  If the service is coded as \"VIEW\" or \"EDIT\" and stemname\n  is omitted, STEMEDIT PULLs lines from the stack.\n\n  If the service is coded as \"VIEW\" or \"EDIT\" the stemname\n  can be coded as \"*\", which will display all variables in\n  the REXX variable pool. Variable names will be shown with\n  39 characters, except you code varl as \"L\", showing\n  variable names with 255 characters. If variable name is\n  longer, it will be abbreviated to 38 or 254 characters and\n  suffixed with \"*\". Last variable is always the contents of\n  VARNAME from this program.  If the service is coded as\n  \"EDIT\" and stemname is coded as \"*\", variables can be\n  edited. It must be coded with variable name beginning in\n  column 1, some blanks end with \"=\" and immediately\n  followed by the value, which must be ended with \"00\"x. You\n  can also drop a variable or a stem by coding \"DROP\n  variablename\" at the beginning of the line and end it with\n  \"00\"x.  Variable name can have a length up to 250.\n\n))FIRSTELEM\n\n  The element of the pseudo-array to begin the display on.\n  The default value is element 1.\n\n))STEMCOUNT\n\n  The number of elements to display.  If you do not specify\n  stemcount, STEMEDIT will display variables beginning with\n  firstelem, and continuing until an un-initialized variable\n  is found (i.e., a variable which has its name for a\n  value).\n\n))TITLE\n\n  An arbitrary character string which identifies the data\n  which is being displayed.  The maximum length of this\n  string is 54 characters.\n\n))PANEL\n\n  A 1 to 8 character name of the panel member to use for the\n  display.  The default panel is ISRBROBA for BROWSE and\n  ISREDDE2 for VIEW and EDIT.\n\n))LRECL\n\n  The record length that should be passed to the BRIF, VIIF\n  or EDIF services.  The default value is 255.\n\n))RECFM\n\n  The record format that should be passed to the BRIF, VIIF\n  or EDIF services.  Possible values are F, FA, FM, V, VA,\n  VM, or U.  The default value is V.\n\n))PROFILE\n\n  The 8-char name of the profile that should be used by VIIF\n  and EDIF when the VIEW or EDIT services are requested.\n  The default value is TEXT.\n\n))VARL\n\n  Form of the variable list, if varname is *.  Can be S for\n  short (=39 char) or L for long (=255 char) varnames.\n\n)Examples\n\n    Call the STEMEDIT routine to display the output of the\n    TSO \"LISTCAT\" command.  The variables to display\n    begin with the characters \"LINE.\":\n\n       CALL OUTTRAP 'LINE.'\n       \"LISTCAT\"\n       CALL STEMEDIT 'BROWSE','LINE.',,,'List Catalog'\n\n    QUEUE JCL to the data stack and call the STEMEDIT\n    routine to VIEW it:\n\n       \"MAKEBUF\"\n       QUEUE '//MYJOB JOB 12345,CLASS=A'\n       QUEUE '//STEP2 EXEC PGM=IEFBR14'\n       CALL STEMEDIT 'VIEW',,,,'Sample JCL'\n       \"DROPBUF\"\n\n)Return Codes\n\n    The STEMEDIT function returns a return code that indicates\n    whether the display worked.  The returned value is\n    contained in the RC special variable.\n\n    The following STEMEDIT return code values are possible:\n\n    0    The display was successful.\n\n    4    There were no stems matching the description given in\n         stemname (BROWSE).  The data was not modified (EDIT).\n\n    8    Option incompatible with requested service.\n\n    12   Invalid Service requested.\n\n    16   BRIF, VIIF or EDIF failed.\n\n)Usage Notes\n\n    The EDIT service only works with a stem variable.  If the\n    data is modified by the user, STEMEDIT DROPs the stem\n    variable, sets stem.0 to the number of records written,\n    copies records to the stem.1 through stem.n where n is\n    equal to the value of the stem.0 variable, and sets the\n    RC variable to 0.  If the data is not modified by the\n    user, STEMEDIT sets the RC variable to 4.\n\n)Compatibility\n\n    STEMEDIT has been designed to be compatible with\n    the STEMDISP function of the REXXTOOLS product from\n    Open Software Technologies, with the following\n    exceptions:\n\n    1. STEMEDIT supports the BROWSE, VIEW and EDIT services\n       (STEMDISP only supports BROWSE).\n\n    2. If stemcount is not specified, STEMEDIT scans\n       variables until an uninitialized variable is found.\n       (STEMDISP stops after 100000 variables).\n\n    3. STEMEDIT has the ability to retrieve data from a\n       stem variable or the data stack (STEMDISP can only\n       retrieve data from a stem variable).\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT895/CBT.V500.FILE895.PDS/TSOHELP.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT895/CBT.V500.FILE895.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}