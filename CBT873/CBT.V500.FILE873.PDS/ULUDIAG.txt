ULUDIAG  TITLE 'ULUDIAG - DISPLAY ULUDSECT FOR ALL DEFINED DEVICES'
         GBLB  &Z22DEFD
********************************************************************
* ------------------------------------------------------------------- *
*     DIAGNOSTIC PROGRAM TO DISPLAY ULUDSECT CONTROL BLOCK FOR        *
*                    ALL DEFINED UCB'S                                *
* ------------------------------------------------------------------- *
********************************************************************
*                                                                  *
*        WRITTEN BY.     Sam Golob                                 *
*                                                                  *
*        DATE WRITTEN.   December 11, 2012.                        *
*                                                                  *
*        DATE UPDATED.   January 26, 2015.                         *
*                                                                  *
*        ATTRIBUTES.     Reentrant.  NOT APF-AUTHORIZED.           *
*                                    --- --------------            *
*        DESCRIPTION.                                              *
*                                                                  *
*          This TSO command is a quick and dirty display of        *
*          all the relevant fields in the ULUDSECT control         *
*          block, for all defined devices.                         *
*                                                                  *
*          The macros ULUINIT and ULUSCAN are used in this         *
*          program, to show how they simplify the coding           *
*          of UCB scans using the UCB Lookup Table technique.      *
*                                                                  *
*          Before invoking the ULUINIT macro you have to clear     *
*          the X'80000000' bit for all base registers.             *
*          This can be done with the new LLGTR instruction.        *
*                                                                  *
*        TESTED.   z/OS 1.2 thru z/OS 2.2                          *
*                                                                  *
*                                                                  *
*  EXAMPLE:  When R10 is a base register.                          *
*                                                                  *
*  LLGTR R10,R10      Base register                                *
*  LLGTR Rn,Rn        All registers that you can displace off.     *
*  ULUINIT WRKAREA=WORKU,UREG=R8,EXIT=EXIT,WR1=R3,WR2=R4,BREG=R6   *
*                                                                  *
*        CHANGE HISTORY.                                           *
*                                                                  *
*    V1.3 - 2015/01/26 - Support for 64-bit ULUT and expansion     *
*                        of relevant fullword addresses to         *
*                        doubleword addresses.                     *
*                                                                  *
*                        Use new versions of ULUINIT, ULUSCAN,     *
*                        and ULUDSECT.                             *
*                                                                  *
*                                                                  *
*                                                                  *
********************************************************************
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         MACRO
.*     --------------------------------------
.*     DISPLAY HEX VALUES IN CHARACTER FORMAT
.*     --------------------------------------
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R7,SAVER7A               Save area for BAL register
         STM   R15,R1,HEXSAVE           Save work registers
         LA    R1,&FROM                 Load from address
         LA    R0,&LEN                  Load number of chars to move
         LA    R15,&TO                  Load to address
         BAL   R7,HEX                   Go to routine - do the work
         LM    R15,R1,HEXSAVE           Restore work registers
         L     R7,SAVER7A               Restore BAL register
         MEND
* ------------------------------------------------------------------- *
         SPACE
ULUDIAG  CSECT
ULUDIAG  RMODE ANY
ULUDIAG  AMODE 31
         USING *,10
ENTRY0   B     BEGIN-*(,R15)
         DC    AL1(7),CL7'ULUDIAG'
         DC    CL16' &SYSDATE &SYSTIME '
WORKSIZ  DC    0F'0',AL1(0),AL3(WORKLEN)
ULULENG  DC    0F'0',AL1(0),AL3(ULUDLENG)
BEGIN    STM   14,12,12(13)
         LR    R10,R15                Base register
         LR    R2,R1                  Save off R1
         L     R0,WORKSIZ             Load size for GETMAIN
         GETMAIN R,LV=(0)
         LR    R9,R1                  Save address of GETMAINed area
         USING WORK,R9
         XC    0(WORKLEN-200,R1),0(R1)        Clear work area
         XC    WORKLEN-200(200,R1),WORKLEN-200(R1)
*        XC    0(WORKINIT,R1),0(R1)
         ST    R13,4(,R9)             OLD ADDRESS IN NEW SAVE AREA
         ST    R9,8(,R13)             NEW ADDRESS IN OLD SAVE AREA
         LR    R13,R9
         APUT  MESSAGET,L'MESSAGET    Print title
         APUT  MESSAGEU,L'MESSAGEU    Underlines
         MVI   LINE-1,X'40'           INITIAL CLEAR OF OUTPUT LINE
         MVC   LINE,LINE-1
         LA    R15,4
         ST    R15,RETCODE
         LA    R8,WORKU               Provide a 64-byte work area.
* ------------------------------------------------------------------- *
* --  INITIALIZE ULUDSECT CONTROL BLOCK                            -- *
* ------------------------------------------------------------------- *
         LLGTR R10,R10                Clear base register of bit 32.
         ULUINIT WRKAREA=WORKU,UREG=R8,EXIT=EXIT,WR1=R3,WR2=R4,BREG=R6
*
* ------------------------------------------------------------------- *
* --  SCAN EACH UCB, REPRESENTED BY A ULUDSECT CONTROL BLOCK       -- *
* ------------------------------------------------------------------- *
LOOPUCB  DS    0H
         ULUSCAN WR1=R3,UCBR=R5,BREG=R6
         BAL   R7,PUTENTRY            Print contents of control block
         MVC   ULUDCURR,ULUDNEXT      Make next entry current
         BCT   R6,LOOPUCB             Get stuff for next table entry.
         B     EXIT0
* ------------------------------------------------------------------- *
EXIT0    MVI   RETCODE+3,0
EXIT     L     R2,RETCODE
         LR    R1,R13                 Point to address to FREEMAIN
         L     R0,WORKSIZ             Length to FREEMAIN
         L     R13,4(,R13)            Restore original R13
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2                 Load return code
         LM    0,12,20(R13)           Restore registers
         L     R14,12(,R13)           And
         BR    R14                      exit.
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R7                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
PUTENTRY DS    0H
         ST    R7,SAVER7B
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE+14(3),=C'***'
         MVC   LINE+24(12),=C'DEV ADDRESS:'
         HEX   LINE+37,2,ULUDDEVA
         MVC   LINE+49(3),=C'***'
         APUT  LINE,55
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE+1(8),=C'ULUDULUT'
         HEX   LINE+10,4,ULUDULUT
         TM    ULUDSLV6,X'40'         Running 64-bit ULUT?
         BZ    DBLWULUT               No. Skip Type 3 or higher code.
         HEX   LINE+19,4,ULUDULUT+4
         MVI   LINE+18,C'_'
         B     FULWULUT
DBLWULUT MVC   LINE+18(9),BLANKS
FULWULUT DS    0H
         MVC   LINE+29(8),=C'ULUDCURR'
         HEX   LINE+38,4,ULUDCURR
         TM    ULUDSLV6,X'40'         Running 64-bit ULUT?
         BZ    DBLWCURR               No. Skip Type 3 or higher code.
         HEX   LINE+47,4,ULUDCURR+4
         MVI   LINE+46,C'_'
         B     FULWCURR
DBLWCURR MVC   LINE+18(9),BLANKS
FULWCURR DS    0H
         MVC   LINE+58(8),=C'ULUDDEVA'
         HEX   LINE+67,2,ULUDDEVA
         APUT  LINE,80
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE+1(8),=C'ULUDNEXT'
         HEX   LINE+10,4,ULUDNEXT
         HEX   LINE+19,4,ULUDNEXT+4
         MVI   LINE+18,C'_'
         TM    ULUDSLV6,X'40'         Running 64-bit ULUT?
         BZ    DBLWNEXT               No. Skip Type 3 or higher code.
         B     FULWNEXT
DBLWNEXT MVC   LINE+18(9),BLANKS
FULWNEXT DS    0H
         MVC   LINE+39(8),=C'ULUDSLV6'
         HEX   LINE+48,1,ULUDSLV6
         MVC   LINE+58(8),=C'ULUDONLF'
         HEX   LINE+67,1,ULUDONLF
         APUT  LINE,80
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE+1(8),=C'ULUDUCBA'
         HEX   LINE+10,4,ULUDUCBA
         MVC   LINE+20(8),=C'ULUDCEXT'
         HEX   LINE+29,4,ULUDCEXT
         MVC   LINE+39(8),=C'ULUDDEVT'
         HEX   LINE+48,4,ULUDDEVT
         MVC   LINE+58(8),=C'ULUDCNTR'
         HEX   LINE+67,2,ULUDCNTR
         APUT  LINE,80
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE+1(8),=C'ULUDTOTC'
         HEX   LINE+10,4,ULUDTOTC
         MVC   LINE+20(8),=C'ULUDRUNC'
         HEX   LINE+29,4,ULUDRUNC
         MVC   LINE+39(8),=C'ULUDONLF'
         HEX   LINE+48,1,ULUDONLF
         MVC   LINE+58(8),=C'ULUDTYPE'
         HEX   LINE+67,1,ULUDTYPE
         APUT  LINE,80
         L     R7,SAVER7B
         BR    R7
         DROP  R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         LTORG
MESSAGET DC    C'              ULUDIAG - V1.3 - PRINT ULUDSECT FIELDS'
MESSAGEU DC    C'              -------   ----   ----- -------- ------'
BLANKS   DC    CL36' '
         DC    0D'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
WORK     DSECT
         DS    18F
RETCODE  DS    F
HEXSAVE  DS    3F
SAVER7A  DS    F
SAVER7B  DS    F
SAVEDEVT DS    F
WORKU    DS    CL88                WORK AREA FOR ULUDSECT
         DS    X
LINE     DS    CL100
WORKINIT EQU   *-WORK
         DS    0D
WORKLEN  EQU   *-WORK
         SPACE
*        CVT   DSECT=YES
CVTPTR   EQU   16
CVT      DSECT
CVTMAP   EQU   *
         ORG   CVT+X'434'
CVTUCBSC DC V(IOSUCBSC)
UCB      DSECT
         IEFUCBOB
         SPACE
         YREGS
         END   ENTRY0
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
