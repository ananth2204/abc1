         MACRO
         ULUDSECT
ULUDSECT DSECT
* ------------------------------------------------------------------- *
*    ULUDSECT - PASS INFORMATION FROM A ULUT TABLE ENTRY              *
*                                                                     *
*    Author   - Sam Golob                                             *
*                                                                     *
*    Description:                                                     *
*                                                                     *
*        The idea of this dsect is to provide an area to pass         *
*        information from a UCB Lookup Table entry (ULUE) to a        *
*        calling program, one entry at a time.                        *
*                                                                     *
*        The information requested from each ULUT entry, is what      *
*        you would probably require during a typical UCB scan.        *
*                                                                     *
*        There are also a few register save areas in here.            *
*                                                                     *
*        The reason for this arrangement, is to be able to            *
*        substitute the ULUT lookup for a UCBSCAN macro execution     *
*        in an Assembler program.  UCBSCAN returns information        *
*        about one UCB at a time, and we want to be able to do        *
*        the same thing, using the ULUT method instead.               *
*                                                                     *
*        The difference between this method and the UCBSCAN method    *
*        is that information about REAL UCB's can be returned this    *
*        way, without the caller having to be APF-authorized.         *
*                                                                     *
*    Attribution:                                                     *
*                                                                     *
*        This is an undocumented interface that was unearthed for     *
*        the general public by Gilbert Saint-flour, and we are        *
*        publicizing this discovery to perpetuate his memory.         *
*                                                                     *
*    System Dependencies:                                             *
*                                                                     *
*        The user of this interface must be aware that if IBM         *
*        changes the layout of the ULUT by creating a new "ULUT       *
*        type", then the programming interface must be adjusted       *
*        for the new ULUT type. (At present writing, there are        *
*        only two ULUT types. - SG 2012/Dec)                          *
*                                                                     *
*    ULUT Types:                                                      *
*                                                                     *
*        The ULUT interface to UCB scanning is not a documented       *
*        IBM interface.  Therefore IBM (of course) reserves the       *
*        right to change it at its own discretion.  It has changed    *
*        once, since ESA 5.  This was at the z/OS 1.7 level.          *
*                                                                     *
*        It is up to the user to keep track of any changes to the     *
*        ULUT.  Access to the ULUT is provided by the following       *
*        set of instructions (to be executed in 31-bit mode):         *
*                                                                     *
*          L     R3,16                  CVT                           *
*          L     R3,X'7C'(,R3)          CVTIXAVL - IOCOM              *
*          L     R3,X'D0'(,R3)          IOVT                          *
*          L     R4,8(,R3)              UCB Lookup Table (ULUT)       *
*          LR    R3,R4                  Point both regs to ULUT       *
*          CLC   =C'ULUT',0(R3)         Eyecatcher there?             *
*          BNE   EXIT                   Nope. It ain't it. Out.       *
*                                                                     *
*        A binary number at ULUT+4 indicates the ULUT type.           *
*        There have currently been two ULUT types, type X'01'         *
*        and type X'02'.  The pointers to the beginning of the        *
*        actual table entries, and the addresses of other pointers    *
*        differ in their location according to ULUT type.  Thus       *
*        any program looking at the ULUT must first refer to the      *
*        ULUT type field, and then get all the other information      *
*        accordingly.                                                 *
*                                                                     *
*        The description of the ULUT table entries themselves,        *
*        seems to be identical for both Type 1 and Type 2 ULUT's.     *
*        For ULUT table entries, the entries are 12 bytes long.       *
*        The first halfword is the hexadecimal four digit device      *
*        address.  The last 4 bytes, at entry+8, is the UCB address.  *
*        Each ULUT table entry also contains a halfword counter,      *
*        at entry+4, starting with X'0002', and which appears to be   *
*        incremented by 1, with each successive table entry.          *
*                                                                     *
*        However, whenever there is a switch of device type in the    *
*        ULUT table, the counter field is zero for the last entry     *
*        representing each given device type.                         *
*                                                                     *
*        The way we find the end of the table, is to get the total    *
*        number of table entries from a field in the ULUT control     *
*        block, get to the first entry, and count through all the     *
*        entries until we get to the last one.                        *
*                                                                     *
*    Requirements:                                                    *
*                                                                     *
*        A calling program will refer to this data area multiple      *
*        times.  The number of times will usually reflect the         *
*        total number of UCB's defined in the ULUT table.  The        *
*        calling program must GETMAIN storage for this work area,     *
*        and initialize it to zeros at the beginning.  It must NOT    *
*        be initialized while the scan is running, because this       *
*        dsect is keeping track of which ULUT table entry (i.e.       *
*        which UCB) the program is currently looking at.              *
*                                                                     *
*    Notes:                                                           *
*                                                                     *
*        While the calling program has a given ULUT table entry,      *
*        and its associated UCB, in its sights, it is expected        *
*        that all the required information be extracted from that     *
*        UCB and passed to the work area described by this dsect.     *
*                                                                     *
*    Residence:                                                       *
*                                                                     *
*        The storage pointed to by this dsect can reside below        *
*        the 16M line (in 24-bit storage), but the calling program    *
*        must execute in 31-bit mode, because the real UCB info       *
*        may reside above the 16M line, and the ULUT itself is        *
*        usually located above the 16M line.                          *
*                                                                     *
*    Return Codes:                                                    *
*                                                                     *
*        Each referral to this dsect should return a code of 0,       *
*        except when the table has been exhausted, at which time      *
*        the return code should be 4.  This is to copy the action     *
*        of the UCBSCAN macro, so it is easier to insert a            *
*        routine using this dsect, into an existing program.          *
*                                                                     *
*    Date:  December 10, 2012                                         *
*                                                                     *
*    Revision:    1.0.0                                               *
*                                                                     *
*    Change History:                                                  *
*                                                                     *
* ------------------------------------------------------------------- *
         DS    0D            Align to doubleword for GETMAIN
ULUDULUT DS    F             Address of ULUT in this system
ULUDCURR DS    F             Current ULUT table entry address
ULUDNEXT DS    F             Next ULUT table entry address
ULUDTOTC DS    F             Total count of ULUT entries
ULUDRUNC DS    F             Running descending count of ULUT entries
*                             (initialized to ULUDTOTC at beginning)
ULUDDEVA DS    H             Device address of current table entry
ULUDCNTR DS    H             Counter in ULUT of current table entry
*                             This is one higher than the table entry
*                             count, and is incremented by one with
*                             each successive table entry.  However,
*                             this field is sometimes zero when there
*                             is going to be a switch of device types.
ULUDUCBA DS    F             UCB address of current table entry
ULUDCEXT DS    F             Address of this UCB's common extension
ULUDDEVT DS    F             UCB device type (4 bytes)
ULUDONLF DS    X             UCB + 3 (device online has X'80' set)
ULUDTYPE DS    X             ULUT TYPE for this table
ULUDRSV1 DS    2X            RESERVED
ULUDSVR0 DS    F             Save area for R0 in macro invocation
ULUDSVR1 DS    F             Save area for R1 in macro invocation
ULUDSVUR DS    F             Save USING register for workarea
ULUDSVW1 DS    F             Save first work register
ULUDSVW2 DS    F             Save second work register
ULUDSVBR DS    F             Save BCT register
         DS    0D
ULUDLENG EQU   *-ULUDSECT
         MEND
