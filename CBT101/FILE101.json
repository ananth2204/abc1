{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011234000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 411502, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE101.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE101.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x08\\x08'", "DS1TRBAL": "b'\\x89\\xfe'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\xae\\x00\\n\\x00\\xaf\\x00\\x03\\x00\\t'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$DISC": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "                *************************\n                *                       *\n                *  D I S C L A I M E R  *\n                *                       *\n                *************************\n\n\n     THE MODIFICATONS, ROUTINES, PANELS, CLISTS, AND OTHER DATA ON THIS\n TAPE HAVE BEEN USED SUCCESSFULLY AND TO THE BEST OF OUR KNOWLEDGE THEY\n ARE OPERATIONAL, HOWEVER NO WARRANTY IS MADE TO THE ACCURACY OF THE\n PROGRAMS AND RELATED MATERIAL AND NO RESPONSIBILTY IS ASSUMED FOR ANY\n MODIFICATIONS DIRECTLY OR INDIRECTLY CAUSED BY THEIR USE.  IT IS THE\n USERS RESPONSIBILITY TO EVALUATE THE USEFULNESS OF THE MATERIAL\n SUPPLIED.\n\n     WE DO NOT GUARANTEE TO KEEP ANY MATERIAL PROVIDED UP TO DATE NOR\n DO WE GUARANTEE TO PROVIDE ANY CORRECTIONS OR EXTENSIONS DESCRIBED\n BY THE USER OR CORRECTIONS OR EXTENSIONS MADE IN THE FUTURE.\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRARCH1": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR( )\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &ACMD EQ &STR( ARCHIVE )\nISPEXEC DISPLAY PANEL(ABRARCH1)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ABRARCH) DA('FDRABR.ABRARCH.USERDATA') SHR\nALLOC F(ABRREST) DA('FDRABR.ABRREST.USERDATA') SHR\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD &STR(DSN=&ADSN))\n  END\nELSE +\n  DO\n    SET &ACMD EQ &STR(&ACMD &STR(DSG=&ADSG))\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOL=&AVOL))\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOLG=&AVOLG))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ FDRABRUT\nFREE F(SYSPRINT)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') MOD\nOPENFILE SYSPRINT OUTPUT\nSET &SYSPRINT EQ &STR(0 THE ABOVE DATASET WILL BE MOVED TO THE ARCHIVE +\nDURING THE REGULAR EVENING ARCHIVE RUN)\nPUTFILE SYSPRINT\nCLOSFILE SYSPRINT\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRARCH2": {"ttr": 521, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR( )\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &ADATE EQ &STR()\nSET &ACYL EQ &STR()\nSET &ANDSN EQ &STR()\nSET &ANDSG EQ &STR()\nSET &ANVOL EQ &STR()\nSET &ATRK EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &ACMD EQ &STR( RESTORE ARCHIVE,)\nSET &ACMD2 EQ &STR(  )\nSET &CONT EQ &STR(NO)\nSET &COMMA EQ &STR()\nISPEXEC DISPLAY PANEL(ABRARCH2)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ABRARCH) DA('FDRABR.ABRARCH.USERDATA') SHR\nALLOC F(ABRREST) DA('FDRABR.ABRREST.USERDATA') SHR\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD&STR(DSN=&ADSN))\n  END\nELSE +\n  DO\n    SET &ACMD EQ &STR(&ACMD&STR(DSG=&ADSG))\n  END\nIF &ADATE NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(ADATE=&ADATE))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ACYL NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(CYL=&ACYL))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ANDSN NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(NEWN=&ANDSN))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ANDSG NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(NEWG=&ANDSG))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ANVOL EQ &STR() THEN +\n  DO\n    %ABRVOLDF &DEBUG\n    IF &LASTCC EQ &STR(0) THEN +\n      DO\n        SET &ANVOL EQ &STR(DLX170)\n      END\n    ELSE +\n      DO\n        SET &TIME EQ &SUBSTR(8:8,&STR(&SYSTIME))\n        IF &STR(&TIME) GE &STR(6) THEN +\n          DO\n            SET &ANVOL EQ &STR(DLXTS3)\n          END\n        ELSE +\n          IF &STR(&TIME) GE &STR(3) THEN +\n            DO\n              SET &ANVOL EQ &STR(DLXTS2)\n            END\n          ELSE +\n            DO\n              SET &ANVOL EQ &STR(DLXTSO)\n            END\n      END\n  END\nIF &ANVOL NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(NVOL=&ANVOL))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ATRK NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(TRK=&ATRK))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(VOL=&AVOL))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(VOLG=&AVOLG))\n    SET &COMMA EQ &STR(,)\n  END\nIF &CONT EQ &STR(YES) THEN +\n  SET &ACMD EQ &STR(&ACMD&STR(&COMMA))\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nIF &CONT EQ &STR(YES) THEN +\n  DO\n    SET &SYSIN EQ &STR(&ACMD2)\n    PUTFILE SYSIN\n  END\nCLOSFILE SYSIN\n$ FDRABRUT\nFREE F(SYSPRINT)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') MOD\nOPENFILE SYSPRINT OUTPUT\nSET &SYSPRINT EQ &STR(0 THE ABOVE DATASET WILL RESTORED FROM THE ARCHIV+\nE AT THE NEXT RESTORE RUN)\nPUTFILE SYSPRINT\nSET &SYSPRINT EQ &STR(0 ARCHIVE RESTORE RUNS ARE DONE AT 12:00 NOON AND+\n 6:00 PM)\nPUTFILE SYSPRINT\nCLOSFILE SYSPRINT\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRARCH3": {"ttr": 525, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR( )\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &ACMD EQ &STR( RESET ARCHIVE)\nISPEXEC DISPLAY PANEL(ABRARCH3)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ABRARCH) DA('FDRABR.ABRARCH.USERDATA') SHR\nALLOC F(ABRREST) DA('FDRABR.ABRREST.USERDATA') SHR\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(DSN=&ADSN))\n  END\nELSE +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(DSG=&ADSG))\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOL=&AVOL))\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOLG=&AVOLG))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ FDRABRUT\nFREE F(SYSPRINT)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') MOD\nOPENFILE SYSPRINT OUTPUT\nSET &SYSPRINT EQ &STR(0 THE ABOVE DATASET WILL NO LONGER BE FORCED TO T+\nHE ARCHIVE)\nPUTFILE SYSPRINT\nCLOSFILE SYSPRINT\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRARCH4": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR( )\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &ACMD EQ &STR( REMOVE ARCHIVE)\nISPEXEC DISPLAY PANEL(ABRARCH4)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ABRARCH) DA('FDRABR.ABRARCH.USERDATA') SHR\nALLOC F(ABRREST) DA('FDRABR.ABRREST.USERDATA') SHR\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(DSN=&ADSN))\n  END\nELSE +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(DSG=&ADSG))\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOL=&AVOL))\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOLG=&AVOLG))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ FDRABRUT\nFREE F(SYSPRINT)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') MOD\nOPENFILE SYSPRINT OUTPUT\nSET &SYSPRINT EQ &STR(0 THE ABOVE DATASET WILL NOT BE RESTORED FROM THE+\nARCHIVE)\nPUTFILE SYSPRINT\nCLOSFILE SYSPRINT\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRARCH5": {"ttr": 531, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR( )\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &ACMD EQ &STR( DELETE )\nISPEXEC DISPLAY PANEL(ABRARCH5)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,ARCHIVE)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ARCHIVE) DA('FDRABR.ARCHIVE') SHR\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD &STR(DSN=(&ADSN)))\n  END\nELSE +\n  DO\n    SET &ACMD EQ &STR(&ACMD &STR(DSG=(&ADSG)))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ FDRARCH\nFREE F(SYSPRINT)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') MOD\nOPENFILE SYSPRINT OUTPUT\nSET &SYSPRINT EQ &STR(0 THE ABOVE DATASET WILL BE REMOVED FROM THE ARCH+\nIVE DURING THE NEXT ARCHIVE REORGINIZATION)\nPUTFILE SYSPRINT\nCLOSFILE SYSPRINT\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ARCHIVE)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRARCH6": {"ttr": 769, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR( )\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &ACMD EQ &STR( RESET )\nISPEXEC DISPLAY PANEL(ABRARCH6)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,ARCHIVE)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ARCHIVE) DA('FDRABR.ARCHIVE') SHR\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD &STR(DSN=(&ADSN)))\n  END\nELSE +\n  DO\n    SET &ACMD EQ &STR(&ACMD &STR(DSG=(&ADSG)))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ FDRARCH\nFREE F(SYSPRINT)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') MOD\nOPENFILE SYSPRINT OUTPUT\nSET &SYSPRINT EQ &STR(0 THE ABOVE DATASET WILL NOT BE FORCE DELETED FRO+\nM THE ARCHIVE DURING THE NEXT ARCHIVE REORGINIZATION)\nPUTFILE SYSPRINT\nCLOSFILE SYSPRINT\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ARCHIVE)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRBKUP1": {"ttr": 772, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR( )\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &ACMD EQ &STR( BACKUP )\nISPEXEC DISPLAY PANEL(ABRBKUP1)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ABRARCH) DA('FDRABR.ABRARCH.USERDATA') SHR\nALLOC F(ABRREST) DA('FDRABR.ABRREST.USERDATA') SHR\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD &STR(DSN=&ADSN))\n  END\nELSE +\n  DO\n    SET &ACMD EQ &STR(&ACMD &STR(DSG=&ADSG))\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOL=&AVOL))\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOLG=&AVOLG))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ FDRABRUT\nFREE F(SYSPRINT)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') MOD\nOPENFILE SYSPRINT OUTPUT\nSET &SYSPRINT EQ &STR(0 THE ABOVE DATASET WILL BE MOVED TO THE BACKUP D+\nURING THE REGULAR EVENING BACKUP RUN)\nPUTFILE SYSPRINT\nCLOSFILE SYSPRINT\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRBKUP2": {"ttr": 775, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR( )\nSET &ADSN EQ &STR()\nSET &ACYCLE EQ &STR()\nSET &ACYL EQ &STR()\nSET &AGEN EQ &STR()\nSET &ANDSN EQ &STR()\nSET &ANDSG EQ &STR()\nSET &ANVOL EQ &STR()\nSET &ATRK EQ &STR()\nSET &AVOL EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &ACMD EQ &STR( RESTORE BACKUP,)\nSET &ACMD2 EQ &STR(  )\nSET &CONT EQ &STR(NO)\nSET &COMMA EQ &STR()\nISPEXEC DISPLAY PANEL(ABRBKUP2)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ABRARCH) DA('FDRABR.ABRARCH.USERDATA') SHR\nALLOC F(ABRREST) DA('FDRABR.ABRREST.USERDATA') SHR\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nSET &ACMD EQ &STR(&ACMD&STR(DSN=&ADSN))\nIF &ACYCLE NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(CYCLE=&ACYCLE))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ACYL NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(CYL=&ACYL))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AGEN NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(GEN=&AGEN))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ANDSN NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(NEWN=&ANDSN))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ANDSG NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(NEWG=&ANDSG))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ANVOL EQ &STR() THEN +\n  DO\n    %ABRVOLDF &DEBUG\n    IF &LASTCC EQ &STR(0) THEN +\n      DO\n        SET &ANVOL EQ &STR(DLX170)\n      END\n    ELSE +\n      DO\n        SET &TIME EQ &SUBSTR(8:8,&STR(&SYSTIME))\n        IF &STR(&TIME) GE &STR(6) THEN +\n          DO\n            SET &ANVOL EQ &STR(DLXTS3)\n          END\n        ELSE +\n          IF &STR(&TIME) GE &STR(3) THEN +\n            DO\n              SET &ANVOL EQ &STR(DLXTS2)\n            END\n          ELSE +\n            DO\n              SET &ANVOL EQ &STR(DLXTSO)\n            END\n      END\n  END\nIF &ANVOL NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(NVOL=&ANVOL))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ATRK NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(TRK=&ATRK))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(VOL=&AVOL))\n    SET &COMMA EQ &STR(,)\n  END\nIF &CONT EQ &STR(YES) THEN +\n  SET &ACMD EQ &STR(&ACMD&STR(&COMMA))\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nIF &CONT EQ &STR(YES) THEN +\n  DO\n    SET &SYSIN EQ &STR(&ACMD2)\n    PUTFILE SYSIN\n  END\nCLOSFILE SYSIN\n$ FDRABRUT\nFREE F(SYSPRINT)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') MOD\nOPENFILE SYSPRINT OUTPUT\nSET &SYSPRINT EQ &STR(0 THE ABOVE DATASET WILL BE RESTORED FROM BACKUP +\n AT THE NEXT RESTORE RUN)\nPUTFILE SYSPRINT\nSET &SYSPRINT EQ &STR(0 BACKUP RESTORE RUNS ARE DONE AT 12:00 NOON AND +\n6:00 PM)\nPUTFILE SYSPRINT\nCLOSFILE SYSPRINT\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRBKUP3": {"ttr": 779, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR( )\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &ACMD EQ &STR( RESET BACKUP)\nISPEXEC DISPLAY PANEL(ABRBKUP3)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ABRARCH) DA('FDRABR.ABRARCH.USERDATA') SHR\nALLOC F(ABRREST) DA('FDRABR.ABRREST.USERDATA') SHR\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(DSN=&ADSN))\n  END\nELSE +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(DSG=&ADSG))\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOL=&AVOL))\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOLG=&AVOLG))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ FDRABRUT\nFREE F(SYSPRINT)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') MOD\nOPENFILE SYSPRINT OUTPUT\nSET &SYSPRINT EQ &STR(0 BACKUP OF THE ABOVE DATASET WILL NOT BE FORCED +\nDURING THE REGULAR EVENING BACKUP RUN)\nPUTFILE SYSPRINT\nCLOSFILE SYSPRINT\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRBKUP4": {"ttr": 782, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR( )\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &ACMD EQ &STR( REMOVE BACKUP)\nISPEXEC DISPLAY PANEL(ABRBKUP4)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ABRARCH) DA('FDRABR.ABRARCH.USERDATA') SHR\nALLOC F(ABRREST) DA('FDRABR.ABRREST.USERDATA') SHR\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(DSN=&ADSN))\n  END\nELSE +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(DSG=&ADSG))\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOL=&AVOL))\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOLG=&AVOLG))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ FDRABRUT\nFREE F(SYSPRINT)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') MOD\nOPENFILE SYSPRINT OUTPUT\nSET &SYSPRINT EQ &STR(0 THE ABOVE DATASET WILL NOT BE SELECTED FOR REST+\nRE DURING THE NEXT BACKUP RESTORE RUN)\nPUTFILE SYSPRINT\nCLOSFILE SYSPRINT\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ABRARCH,ABRREST)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRRPT1": {"ttr": 785, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR()\nSET &ACLA EQ &STR(A)\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &AEXP EQ &STR()\nSET &AREST EQ &STR()\nSET &ADELT EQ &STR()\nSET &ASDATE EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &LISTOPT EQ &STR()\nSET &ACMD EQ &STR( PRINT ARCHIVE)\nSET &ACMD2 EQ &STR(  )\nSET &ACMD3 EQ &STR(  )\nSET &CONT EQ &STR(NO)\nSET &CONT2 EQ &STR(NO)\nSET &COMMA EQ &STR()\nSET &COMMA1 EQ &STR()\nISPEXEC DISPLAY PANEL(ABRRPT1)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,SYSOUT,ARCHIVE)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ARCHIVE) DA('FDRABR.ARCHIVE') SHR\nALLOC F(SYSOUT) DUMMY\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(DSN=(&ADSN)))\n  END\nIF &ADSG NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(DSG=(&ADSG)))\n    SET &COMMA1 EQ &STR(,)\n  END\nIF &AEXP NE &STR() THEN +\n  DO\n    SET &CONT2 EQ &STR(YES)\n    SET &ACMD3 EQ &STR(&ACMD3&STR(&COMMA)&STR(EXPIRE=&AEXP))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AREST NE &STR() THEN +\n  DO\n    SET &CONT2 EQ &STR(YES)\n    SET &ACMD3 EQ &STR(&ACMD3&STR(&COMMA)&STR(RESTORED))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ADELT NE &STR() THEN +\n  DO\n    SET &CONT2 EQ &STR(YES)\n    SET &ACMD3 EQ &STR(&ACMD3&STR(&COMMA)&STR(DELETE))\n    SET &COMMA EQ &STR(,)\n  END\nIF &ASDATE NE &STR() THEN +\n  DO\n    SET &CONT2 EQ &STR(YES)\n    SET &ACMD3 EQ &STR(&ACMD3&STR(&COMMA)&STR(SDATE=&ASDATE))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &CONT2 EQ &STR(YES)\n    SET &ACMD3 EQ &STR(&ACMD3&STR(&COMMA)&STR(VOL=(&AVOL)))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &CONT2 EQ &STR(YES)\n    SET &ACMD3 EQ &STR(&ACMD3&STR(&COMMA)&STR(VOLG=(&AVOLG)))\n    SET &COMMA EQ &STR(,)\n  END\nIF &CONT EQ &STR(YES) THEN +\n  SET &ACMD EQ &STR(&ACMD&STR(&COMMA1))\nIF &CONT2 EQ &STR(YES) THEN +\n  DO\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA))\n    IF &CONT EQ &STR(NO) THEN +\n      SET &ACMD EQ &STR(&ACMD&STR(&COMMA))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nIF &CONT EQ &STR(YES) THEN +\n  DO\n    SET &SYSIN EQ &STR(&ACMD2)\n    PUTFILE SYSIN\n  END\nIF &CONT2 EQ &STR(YES) THEN +\n  DO\n    SET &SYSIN EQ &STR(&ACMD3)\n    PUTFILE SYSIN\n  END\nCLOSFILE SYSIN\n$ FDRABRP\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &LISTOPT EQ &STR() THEN +\n  DO\n    GOTO CONTIN\n  END\nIF &ACLA EQ &STR(X) THEN +\n  DO\n    SET &HOLD EQ &STR(HOLD KEEP)\n  END\nELSE +\n  DO\n    SET &HOLD EQ &STR()\n  END\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nALLOC F(SYSUT1) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') SHR\nALLOC F(SYSUT2) SYS(&ACLA) &HOLD\nALLOC F(SYSIN) DUMMY\nALLOC F(SYSPRINT) DUMMY\n$ IEBGENER\nFREE F(SYSIN,SYSUT1,SYSUT2,SYSPRINT)\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSUT1) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSUT2) UNIT(VIO) SPACE(10 2) CYLINDERS\nCONTIN: +\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ARCHIVE,SYSOUT)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRRPT2": {"ttr": 1028, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR()\nSET &ACLA EQ &STR(A)\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &LISTOPT EQ &STR()\nSET &ACMD EQ &STR( PRINT CATLG)\nSET &COMMA EQ &STR()\nISPEXEC DISPLAY PANEL(ABRRPT2)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN,SYSOUT,ARCHIVE)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(ARCHIVE) DA('FDRABR.ARCHIVE') SHR\nALLOC F(SYSOUT) DUMMY\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOL=(&AVOL)))\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOLG=(&AVOLG)))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ FDRABRP\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &LISTOPT EQ &STR() THEN +\n  DO\n    GOTO CONTIN\n  END\nIF &ACLA EQ &STR(X) THEN +\n  DO\n    SET &HOLD EQ &STR(HOLD KEEP)\n  END\nELSE +\n  DO\n    SET &HOLD EQ &STR()\n  END\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nALLOC F(SYSUT1) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') SHR\nALLOC F(SYSUT2) SYS(&ACLA) &HOLD\nALLOC F(SYSIN) DUMMY\nALLOC F(SYSPRINT) DUMMY\n$ IEBGENER\nFREE F(SYSIN,SYSUT1,SYSUT2,SYSPRINT)\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSUT1) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSUT2) UNIT(VIO) SPACE(10 2) CYLINDERS\nCONTIN: +\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT,ARCHIVE,SYSOUT)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRRPT3": {"ttr": 1031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0  DEBUG\nCONTROL NOMSG PROMPT NOLIST NOFLUSH\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST CONLIST SYMLIST MSG\n/***************  INITIALIZING OPTIONS TO DEFAULT VALUES*************/\nSET &OPT EQ &STR()\nSET &LISTOPT EQ &STR()\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &ACOMB EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &AXREF EQ &STR()\n/***************  DISPLAY VTOC REPORT PANEL *************************/\nRESTART: +\nSET &ACMD EQ &STR( PRINT  VTOC)\nSET &ACMD2 EQ &STR( )\nSET &COMMA EQ &STR()\nSET &CONT EQ &STR(NO)\nISPEXEC DISPLAY PANEL(ABRRPT3) CURSOR(LISTOPT)\nIF &LASTCC GE 8 THEN +\n  DO\n    EXIT\n  END\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE)\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\n/***************  ALLOCATE SPACE FOR PRINT UTILITY  *****************/\nFREE F(SYSIN,SYSPRINT,SYSOUT,ARCHIVE)\nFREE A(FB80 FBA121)\nATTR FB80 RECFM(F B) LRECL(80) BLKSIZE(3120)\nATTR FBA121 RECFM(F B A) LRECL(121) BLKSIZE(121)\nALLOC F(SYSIN) NEW DELETE SPACE(1 1) TRACKS USING(FB80) UNIT(VIO)\nALLOC F(SYSOUT) DUMMY\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\nSPACE(10 5) TRACKS USING(FBA121)\nALLOC F(ARCHIVE) DA('FDRABR.ARCHIVE') SHR\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD&STR(,DSN=(&ADSN))\n  END\nIF &ADSG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD&STR(,DSG=(&ADSG))\n  END\nIF &ACOMB NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(COMBINE))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(VOL=(&AVOL)))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(VOLG=(&AVOLG)))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AXREF NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(XREF))\n    SET &COMMA EQ &STR(,)\n  END\nIF &CONT EQ &STR(YES) THEN +\n  SET &ACMD EQ &STR(&ACMD&STR(&COMMA))\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nIF &CONT EQ &STR(YES) THEN +\n  DO\n    SET &SYSIN EQ &STR(      &ACMD2)\n    PUTFILE SYSIN\n  END\nCLOSFILE SYSIN\n$ FDRABRP\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &LISTOPT EQ &STR() THEN +\n  DO\n    GOTO CONTIN\n  END\nIF &ACLA EQ &STR(X) THEN +\n  DO\n    SET &HOLD EQ &STR(HOLD KEEP)\n  END\nELSE +\n  DO\n    SET &HOLD EQ &STR()\n  END\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nALLOC F(SYSUT1) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nALLOC F(SYSUT2) SYS(&ACLA) &HOLD\nALLOC F(SYSIN) DUMMY\nALLOC F(SYSPRINT) DUMMY\n$ IEBGENER\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSUT1) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSUT2) UNIT(VIO) SPACE(10 2) CYLINDERS\nCONTIN: +\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSOUT,ARCHIVE)\nFREE F(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRRPT4": {"ttr": 1034, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0  DEBUG\nCONTROL NOMSG PROMPT NOLIST NOFLUSH\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST CONLIST SYMLIST MSG\n/***************  INITIALIZING OPTIONS TO DEFAULT VALUES*************/\nSET &OPT EQ &STR()\nSET &LISTOPT EQ &STR()\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &ACOMB EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\n/***************  DISPLAY VTOC REPORT PANEL *************************/\nRESTART: +\nSET &ACMD EQ &STR( PRINT VTOC,SUMPFX=ALL)\nSET &ACMD2 EQ &STR( )\nSET &COMMA EQ &STR()\nSET &CONT EQ &STR(NO)\nISPEXEC DISPLAY PANEL(ABRRPT4) CURSOR(LISTOPT)\nIF &LASTCC GE 8 THEN +\n  DO\n    EXIT\n  END\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE)\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\n/***************  ALLOCATE SPACE FOR PRINT UTILITY  *****************/\nFREE F(SYSIN,SYSPRINT,SYSOUT,ABRSUM)\nFREE A(FB80 FBA121)\nATTR FB80 RECFM(F B) LRECL(80) BLKSIZE(3120)\nATTR FBA121 RECFM(F B A) LRECL(121) BLKSIZE(121)\nALLOC F(SYSIN) NEW DELETE SPACE(1 1) TRACKS USING(FB80) UNIT(VIO)\nALLOC F(SYSOUT) DUMMY\nALLOC F(SYSPRINT) DUMMY\nALLOC F(ABRSUM) DA('&DSPRFX..&DSYS..&TSYS..ABRSUM') NEW CATALOG +\nSPACE(10 5) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD&STR(,DSN=(&ADSN))\n  END\nIF &ADSG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD&STR(,DSG=(&ADSG))\n  END\nIF &ACOMB NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(COMBINE))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(VOL=(&AVOL)))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(VOLG=(&AVOLG)))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOL EQ &STR() THEN +\n  DO\n    IF &AVOLG EQ &STR() THEN +\n      DO\n        SET &CONT EQ &STR(YES)\n        SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(ONLINE))\n        SET &COMMA EQ &STR(,)\n      END\n  END\nIF &CONT EQ &STR(YES) THEN +\n  SET &ACMD EQ &STR(&ACMD&STR(&COMMA))\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nIF &CONT EQ &STR(YES) THEN +\n  DO\n    SET &SYSIN EQ &STR(      &ACMD2)\n    PUTFILE SYSIN\n  END\nCLOSFILE SYSIN\n$ FDRABRP\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..ABRSUM')\nIF &LISTOPT EQ &STR() THEN +\n  DO\n    GOTO CONTIN\n  END\nIF &ACLA EQ &STR(X) THEN +\n  DO\n    SET &HOLD EQ &STR(HOLD KEEP)\n  END\nELSE +\n  DO\n    SET &HOLD EQ &STR()\n  END\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nALLOC F(SYSUT1) DA('&DSPRFX..&DSYS..&TSYS..ABRSUM')\nALLOC F(SYSUT2) SYS(&ACLA) &HOLD\nALLOC F(SYSIN) DUMMY\nALLOC F(SYSPRINT) DUMMY\n$ IEBGENER\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSUT1) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSUT2) UNIT(VIO) SPACE(10 2) CYLINDERS\nCONTIN: +\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..ABRSUM'\nFREE F(SYSIN,SYSOUT,ABRSUM,SYSPRINT)\nFREE F(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRRPT5": {"ttr": 1037, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &OPT EQ &STR()\nSET &ACLA EQ &STR(A)\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &DSPRFX EQ &STR()\nRESTART: +\nSET &LISTOPT EQ &STR()\nSET &ACMD EQ &STR( PRINT VOLSTAT)\nSET &COMMA EQ &STR()\nISPEXEC DISPLAY PANEL(ABRRPT5)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSPRINT,SYSIN)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nATTR FB80 LRECL(80) BLKSIZE(4000) RECFM(F B)\nATTR FBA121 LRECL(121) BLKSIZE(18997) RECFM(F B A)\nALLOC F(SYSIN) UNIT(VIO) SPACE(1 1) TRACKS NEW DELETE USING(FB80)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n SPACE(5 2) TRACKS USING(FBA121)\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOL=(&AVOL)))\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD,&STR(VOLG=(&AVOLG)))\n  END\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ FDRABRP\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &LISTOPT EQ &STR() THEN +\n  DO\n    GOTO CONTIN\n  END\nIF &ACLA EQ &STR(X) THEN +\n  DO\n    SET &HOLD EQ &STR(HOLD KEEP)\n  END\nELSE +\n  DO\n    SET &HOLD EQ &STR()\n  END\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nALLOC F(SYSUT1) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') SHR\nALLOC F(SYSUT2) SYS(&ACLA) &HOLD\nALLOC F(SYSIN) DUMMY\nALLOC F(SYSPRINT) DUMMY\n$ IEBGENER\nFREE F(SYSIN,SYSUT1,SYSUT2,SYSPRINT)\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSUT1) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSUT2) UNIT(VIO) SPACE(10 2) CYLINDERS\nCONTIN: +\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT)\nFREE A(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRRPT6": {"ttr": 1281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0  DEBUG\nCONTROL NOMSG PROMPT NOLIST NOFLUSH\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST CONLIST SYMLIST MSG\n/***************  INITIALIZING OPTIONS TO DEFAULT VALUES*************/\nSET &OPT EQ &STR()\nSET &LISTOPT EQ &STR()\nSET &ADSN EQ &STR()\nSET &ADSG EQ &STR()\nSET &AVOL EQ &STR()\nSET &AVOLG EQ &STR()\nSET &AXREF EQ &STR()\n/***************  DISPLAY SCRATCH REPORT PANEL **********************/\nRESTART: +\nSET &ACMD EQ &STR( PRINT SCRATCH)\nSET &ACMD2 EQ &STR( )\nSET &COMMA EQ &STR()\nSET &CONT EQ &STR(NO)\nISPEXEC DISPLAY PANEL(ABRRPT6) CURSOR(LISTOPT)\nIF &LASTCC GE 8 THEN +\n  DO\n    EXIT\n  END\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE)\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\n/***************  ALLOCATE SPACE FOR PRINT UTILITY  *****************/\nFREE F(SYSIN,SYSPRINT)\nFREE A(FB80 FBA121)\nATTR FB80 RECFM(F B) LRECL(80) BLKSIZE(3120)\nATTR FBA121 RECFM(F B A) LRECL(121) BLKSIZE(121)\nALLOC F(SYSIN) NEW DELETE SPACE(1 1) TRACKS USING(FB80) UNIT(VIO)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\nSPACE(10 5) TRACKS USING(FBA121)\nIF &ADSN NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD&STR(,DSN=(&ADSN))\n  END\nIF &ADSG NE &STR() THEN +\n  DO\n    SET &ACMD EQ &STR(&ACMD&STR(,DSG=(&ADSG))\n  END\nIF &AVOL NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(VOL=(&AVOL)))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AVOLG NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(VOLG=(&AVOLG)))\n    SET &COMMA EQ &STR(,)\n  END\nIF &AXREF NE &STR() THEN +\n  DO\n    SET &CONT EQ &STR(YES)\n    SET &ACMD2 EQ &STR(&ACMD2&STR(&COMMA)&STR(XREF))\n    SET &COMMA EQ &STR(,)\n  END\nIF &CONT EQ &STR(YES) THEN +\n  SET &ACMD EQ &STR(&ACMD&STR(&COMMA))\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&ACMD)\nPUTFILE SYSIN\nIF &CONT EQ &STR(YES) THEN +\n  DO\n    SET &SYSIN EQ &STR(      &ACMD2)\n    PUTFILE SYSIN\n  END\nCLOSFILE SYSIN\n$ FDRABRP\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nIF &LISTOPT EQ &STR() THEN +\n  DO\n    GOTO CONTIN\n  END\nIF &ACLA EQ &STR(X) THEN +\n  DO\n    SET &HOLD EQ &STR(HOLD KEEP)\n  END\nELSE +\n  DO\n    SET &HOLD EQ &STR()\n  END\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nALLOC F(SYSUT1) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nALLOC F(SYSUT2) SYS(&ACLA) &HOLD\nALLOC F(SYSIN) DUMMY\nALLOC F(SYSPRINT) DUMMY\n$ IEBGENER\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSUT1) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSUT2) UNIT(VIO) SPACE(10 2) CYLINDERS\nCONTIN: +\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nDELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nFREE F(SYSIN,SYSPRINT)\nFREE F(FB80,FBA121)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRUIDCK": {"ttr": 1284, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nSET &UID EQ &STR()\nSET &BEG EQ 1\nSET &RC EQ 4\nSET &UIDTAB EQ &STR(+\nT02728 +\nT02930 +\nT18749 +\nT23305 +\nT26568 +\nT27611 +\nT32809 +\nT32818 +\nT40710 +\nT40839 +\nT53009 +\nT53031 +\nT53033 +\nT53043 +\nT53093 +\nT60403 +\nTZZZZZZ)\nDO WHILE &UID NE &STR(TZZZZZZ) AND &RC NE 0\n  SET &UID EQ &SUBSTR(&BEG:&EVAL(&BEG + 6),&STR(&UIDTAB))\n  IF &SYSUID EQ &SUBSTR(1:&EVAL(&LENGTH(&SYSUID)),&STR(&UID)) THEN +\n    SET &RC EQ 0\n  ELSE +\n    SET &BEG = &BEG + 7\nEND\nIF &RC EQ 4 THEN +\n  EXIT\nISPEXEC SELECT PANEL(ABRSEL)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRVOLDF": {"ttr": 1286, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nSET &UID EQ &STR()\nSET &BEG EQ 1\nSET &RC EQ 4\nSET &UIDTAB EQ &STR(+\nCICSP  +\nCOMH   +\nCOMP   +\nDBDP   +\nHRNES  +\nIMSP   +\nIPO2   +\nJESP   +\nLYDELL +\nMVSP   +\nNCCF   +\nQATST  +\nSYSP   +\nSYSPCOM+\nSYS2   +\nT00289 +\nT02728 +\nT02930 +\nT18749 +\nT23305 +\nT26568 +\nT27611 +\nT32809 +\nT40710 +\nT40809 +\nT40839 +\nT53009 +\nT53031 +\nT53033 +\nT53043 +\nT53093 +\nT60403 +\nVS1P   +\nTZZZZZZ)\nDO WHILE &UID NE &STR(TZZZZZZ) AND &RC NE 0\n  SET &UID EQ &SUBSTR(&BEG:&EVAL(&BEG + 6),&STR(&UIDTAB))\n  IF &SYSUID EQ &SUBSTR(1:&EVAL(&LENGTH(&SYSUID)),&STR(&UID)) THEN +\n    SET &RC EQ 0\n  ELSE +\n    SET &BEG = &BEG + 7\nEND\nEXIT CODE(&RC)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ADDPASS": {"ttr": 1288, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOMSG PROMPT NOLIST NOFLUSH\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST CONLIST SYMLIST MSG\nSET &DSNAMEIN EQ &STR()\nSET &NEWPW EQ &STR()\nSET &PWREADIN EQ &STR()\nSET &CPW EQ &STR()\nRESTART: +\nSET &PROTR EQ &STR(NOPWREAD)\nSET &PROTW EQ &STR(PWWRITE)\nISPEXEC DISPLAY PANEL(PWADD)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nIF &PWREADIN NE &STR() THEN +\n  DO\n    IF &STR(Y) EQ &SUBSTR(1:1,&STR(&PWREADIN)) THEN +\n      SET &PROTR EQ &STR(PWREAD)\n  END\nCONTROL MSG\nIF &CPW EQ &STR() THEN +\n  PROTECT '&DSNAMEIN' ADD(&NEWPW) &PROTR &PROTW\nELSE +\n  PROTECT '&DSNAMEIN'/&CPW ADD(&NEWPW) &PROTR &PROTW\nCONTROL NOMSG\nISPEXEC CONTROL DISPLAY REFRESH\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHNGPASS": {"ttr": 1290, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOMSG PROMPT NOLIST NOFLUSH\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST CONLIST SYMLIST MSG\nSET &DSNAMEIN EQ &STR()\nSET &NEWPW EQ &STR()\nSET &OLDPW EQ &STR()\nSET &CPW EQ &STR()\nRESTART: +\nISPEXEC DISPLAY PANEL(PWCHNG)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nCONTROL MSG\nIF &CPW EQ &STR() THEN +\n  PROTECT '&DSNAMEIN' REPLACE(&STR(&OLDPW),&STR(&NEWPW))\nELSE +\n  PROTECT '&DSNAMEIN'/&CPW REPLACE(&STR(&OLDPW),&STR(&NEWPW))\nCONTROL NOMSG\nISPEXEC CONTROL DISPLAY REFRESH\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DELPASS": {"ttr": 1292, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOMSG PROMPT NOLIST NOFLUSH\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST CONLIST SYMLIST MSG\nSET &DSNAMEIN EQ &STR()\nSET &DELPW EQ &STR()\nSET &CPW EQ &STR()\nRESTART: +\nISPEXEC DISPLAY PANEL(PWDEL)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nCONTROL MSG\nIF &CPW EQ &STR() THEN +\n  PROTECT '&DSNAMEIN' DELETE(&DELPW)\nELSE +\n  PROTECT '&DSNAMEIN'/&CPW DELETE(&DELPW)\nCONTROL NOMSG\nISPEXEC CONTROL DISPLAY REFRESH\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GENER1": {"ttr": 1294, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0  DEBUG\nCONTROL NOLIST MSG PROMPT NOFLUSH\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST CONLIST SYMLIST\nSET &INDSN EQ &STR()\nSET &INUNIT EQ &STR()\nSET &INVOL EQ &STR()\nSET &INRECFM EQ &STR()\nSET &INLR EQ &STR()\nSET &INBLK EQ &STR()\nSET &INDENS EQ &STR()\nSET &INLABEL EQ &STR()\nSET &INPOS EQ &STR()\nSET &OUTDSN EQ &STR()\nSET &OUTUNIT EQ &STR()\nSET &OUTVOL EQ &STR()\nSET &OUTRECFM EQ &STR()\nSET &OUTLR EQ &STR()\nSET &OUTBLK EQ &STR()\nSET &OUTDENS EQ &STR()\nSET &OUTLABEL EQ &STR()\nSET &OUTPOS EQ &STR()\nSET &SPCU EQ &STR()\nSET &PRIQ EQ &STR()\nSET &SECQ EQ &STR()\nSET &DIRB EQ &STR()\nSET &DISP EQ &STR()\nSET &PROGNAME EQ &STR(IEBGENER)\nISPEXEC CONTROL ERRORS RETURN\nTRYAGIN: +\nCONTROL NOMSG\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nFREE A(DCBIN,DCBOUT)\nCONTROL MSG\nSET &INATTR EQ &STR()\nSET &OUTATTR EQ &STR()\nSET &INTAPE EQ &STR()\nSET &OUTTAPE EQ &STR()\nSET &INUV EQ &STR()\nSET &OUTUV EQ &STR()\nSET &INUSE EQ &STR()\nSET &OUTUSE EQ &STR()\nSET &OUTNEW EQ &STR()\nSET &ODISP EQ &STR()\nSET &INRFM EQ &STR()\nSET &OUTRFM EQ &STR()\nISPEXEC DISPLAY PANEL(GENER1) CURSOR(INDSN)\nIF &LASTCC EQ 8 THEN +\n  GOTO ALLDONE\nALLOC F(SYSIN) DUMMY\nALLOC F(SYSPRINT) DUMMY\nIF &INRECFM NE &STR() THEN +\n  DO\n    IF &EVAL(&LENGTH(&INRECFM)) EQ 3 THEN +\n      DO\n        SET &INRFM EQ &STR(&SUBSTR(1:1,&INRECFM)&STR( )&SUBSTR(2:2,&INR+\nECFM)&STR( )&SUBSTR(3:3,&INRECFM))\n      END\n    ELSE +\n      IF &EVAL(&LENGTH(&INRECFM)) EQ 2 THEN +\n        DO\n          SET &INRFM EQ &STR(&SUBSTR(1:1,&INRECFM)&STR( )&SUBSTR(2:2,&I+\nNRECFM))\n        END\n  END\nIF &INRFM NE &STR() THEN +\n  SET &INATTR EQ &STR(&STR(&INATTR) RECFM(&INRFM) )\nIF &INLR NE &STR() THEN +\n  SET &INATTR EQ &STR(&STR(&INATTR) LRECL(&INLR) )\nIF &INBLK NE &STR() THEN +\n  SET &INATTR EQ &STR(&STR(&INATTR) BLKSIZE(&INBLK) )\nIF &INDENS NE &STR() THEN +\n  SET &INATTR EQ &STR(&STR(&INATTR) DEN(&INDENS) )\nIF &STR(&INLABEL) NE &STR() THEN +\n  SET &INTAPE EQ &STR(&INTAPE LABEL(&INLABEL) )\nIF &INPOS NE &STR() THEN +\n  SET &INTAPE EQ &STR(&INTAPE POSITION(&INPOS) )\nIF &INUNIT NE &STR() THEN +\n  SET &INUV EQ &STR(&INUV UNIT(&INUNIT) )\nIF &INVOL NE &STR() THEN +\n  SET &INUV EQ &STR(&INUV VOLUME(&INVOL) )\nIF &INATTR NE &STR() THEN +\n  DO\n    ATTR DCBIN &INATTR\n    SET &INUSE EQ &STR( USING(DCBIN) )\n  END\nIF &SUBSTR(1:1,&STR(&INDSN)) EQ &SUBSTR(3:3,&STR(12(456))  THEN +\n  DO\n    ALLOC F(SYSUT1) DA&INDSN SHR &INUV &INTAPE &INUSE\n    GOTO ALCSYS2\n  END\nALLOC F(SYSUT1) DA('&INDSN') SHR &INUV &INTAPE &INUSE\nALCSYS2: +\nIF &OUTRECFM NE &STR() THEN +\n  DO\n    IF &EVAL(&LENGTH(&OUTRECFM)) EQ 3 THEN +\n      DO\n        SET &OUTRFM EQ &STR(&SUBSTR(1:1,&OUTRECFM)&STR( )&SUBSTR(2:2,&O+\nUTRECFM)&STR( )&SUBSTR(3:3,&OUTRECFM))\n      END\n    ELSE +\n      IF &EVAL(&LENGTH(&OUTRECFM)) EQ 2 THEN +\n        DO\n          SET &OUTRFM EQ &STR(&SUBSTR(1:1,&OUTRECFM)&STR( )&SUBSTR(2:2,+\n&OUTRECFM))\n        END\n  END\nIF &OUTRFM NE &STR() THEN +\n  SET &OUTATTR EQ &STR(&STR(&OUTATTR) RECFM(&OUTRFM) )\nIF &OUTLR NE &STR() THEN +\n  SET &OUTATTR EQ &STR(&STR(&OUTATTR) LRECL(&OUTLR) )\nIF &OUTBLK NE &STR() THEN +\n  SET &OUTATTR EQ &STR(&STR(&OUTATTR) BLKSIZE(&OUTBLK) )\nIF &OUTDENS NE &STR() THEN +\n  SET &OUTATTR EQ &STR(&STR(&OUTATTR) DEN(&OUTDENS) )\nIF &STR(&OUTLABEL) NE &STR() THEN +\n  SET &OUTTAPE EQ &STR(&OUTTAPE LABEL(&OUTLABEL) )\nIF &OUTPOS NE &STR() THEN +\n  SET &OUTTAPE EQ &STR(&OUTTAPE POSITION(&OUTPOS) )\nIF &OUTUNIT NE &STR() THEN +\n  SET &OUTUV EQ &STR(&OUTUV UNIT(&OUTUNIT) )\nIF &OUTVOL NE &STR() THEN +\n  SET &OUTUV EQ &STR(&OUTUV VOLUME(&OUTVOL) )\nIF &OUTATTR NE &STR() THEN +\n  DO\n    ATTR DCBOUT &OUTATTR\n    SET &OUTUSE EQ &STR( USING(DCBOUT) )\n  END\nIF &SPCU NE &STR() THEN +\n  SET &OUTNEW EQ &STR( &OUTNEW &SPCU )\nIF &PRIQ NE &STR() THEN +\n  DO\n    IF &SECQ NE &STR() THEN +\n      SET &OUTNEW EQ &STR( &OUTNEW SPACE(&PRIQ &SECQ) )\n    ELSE +\n      SET &OUTNEW EQ &STR( &OUTNEW SPACE(&PRIQ) )\n  END\nIF &DIRB NE &STR() THEN +\n  SET &OUTNEW EQ &STR( &OUTNEW DIR(&DIRB) )\nIF &OUTNEW NE &STR() THEN +\n  SET &ODISP EQ &STR( &ODISP NEW )\nELSE +\n  SET &ODISP EQ &STR( &ODISP SHR )\nIF &DISP NE &STR() THEN +\n  SET &ODISP EQ &STR( &ODISP &DISP )\nIF &EVAL(&LENGTH(&STR(&OUTDSN))) GE 8 THEN +\n  DO\n    IF &SUBSTR(1:7,&OUTDSN) EQ &STR(SYSOUT=) THEN +\n      DO\n        IF &DEST NE &STR() THEN +\n         DO\n            ALLOC F(SYSUT2) SYSOUT(&SUBSTR(8:8,&OUTDSN)) NOHOLD KEEP +\n              &OUTUSE DEST(&DEST)\n            GOTO EXECPROG\n          END\n        ELSE +\n          DO\n            ALLOC F(SYSUT2) SYSOUT(&SUBSTR(8:8,&OUTDSN)) NOHOLD KEEP +\n              &OUTUSE\n            GOTO EXECPROG\n          END\n      END\n  END\nALLOC F(SYSUT2) DA('&OUTDSN') &OUTUV &OUTTAPE &OUTUSE &OUTNEW +\n &ODISP\nEXECPROG:$ &PROGNAME\nWRITE &PROGNAME COMPLETED RETURN CODE = &LASTCC\nCONTROL NOMSG\nFREE F(SYSUT1,SYSUT2,SYSIN,SYSPRINT)\nFREE A(DCBIN,DCBOUT)\nCONTROL MSG\nGOTO TRYAGIN\nALLDONE: +\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSUT1) NEW DELETE UNIT(VIO) SPACE(4) CYL\nALLOC F(SYSUT2) NEW DELETE UNIT(VIO) SPACE(4) CYL\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INFOMGT1": {"ttr": 1298, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 1 OPT DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &SRCINIT EQ &STR()\nSET &PCLS EQ &STR()\nSET &USRC EQ &STR()\nSET &UFMT EQ &STR()\nSET &UPNL EQ &STR()\nSET &MODPNL EQ &STR()\nSET &DSSUFX EQ &STR()\nIF &OPT EQ 1 THEN +\n  SET &DSSUFX EQ 5\nELSE +\n  IF &OPT EQ 2 THEN +\n    SET &DSSUFX EQ 6\n  ELSE +\n    IF &OPT EQ 3 THEN +\n      SET &DSSUFX EQ 7\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(BLGPNLS,BLGFMT,BLGSRC,BLGSD5,BLGSI5,BLGSL5,BLGMPNL)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nRESTART: +\nSET &ICLASS EQ &STR()\nSET &ISRC EQ &STR()\nISPEXEC DISPLAY PANEL(INFOMGT1)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nGOTO NOMVS\nIF &SYSUID EQ &STR(T27611) | +\n   &SYSUID EQ &STR(T32809) | +\n   &SYSUID EQ &STR(T40839) | +\n   &SYSUID EQ &STR(T53031) | +\n   &SYSUID EQ &STR(T53039) | +\n   &SYSUID EQ &STR(T60403) | +\n   &SYSUID EQ &STR(T53043) | +\n   &SYSUID EQ &STR(T26568) | +\n   &SYSUID EQ &STR(T53093) THEN +\n     DO\n       IF &DEBUG EQ &STR() THEN +\n         CONTROL NOMSG\n       FREE F(VSAM,VSAM2,VSAM3,VSAM4,VSAM5,VSAM6)\n       IF &DEBUG EQ &STR() THEN +\n         CONTROL MSG\n       ALLOC F(VSAM) DA('SYS1.BLGOZS.VSAM') SHR\n       ALLOC F(VSAM2) DA('SYS1.BLGOZS.VSAM2') SHR\n       ALLOC F(VSAM3) DA('SYS1.BLGOZS.VSAM3') SHR\n       ALLOC F(VSAM4) DA('SYS1.BLGOZS.VSAM4') SHR\n       ALLOC F(VSAM5) DA('SYS1.BLGOZS.VSAM5') SHR\n       IF &SYSUID EQ &STR(T27611) THEN +\n         ALLOC F(VSAM6) DA('MVSP.SHARE.OZ') SHR\n     END\nNOMVS: +\nIF &SYSUID EQ &STR(T27611) THEN +\n  ALLOC F(VSAM6) DA('MVSP.SHARE.OZ') SHR\nIF &SRCINIT NE &STR() THEN +\n  DO\n    SET &ISRC EQ &STR(SRC(&SRCINIT))\n  END\nIF &PCLS NE &STR() THEN +\n  DO\n    SET &ICLASS EQ &STR(CLASS(&PCLS))\n  END\nIF &USRC EQ &STR() THEN +\n  ALLOC F(BLGSRC) DA('TSO.INFO.BLGSRC') SHR\nELSE +\n  ALLOC F(BLGSRC) DA('&USRC') SHR\nIF &UFMT EQ &STR() THEN +\n  ALLOC F(BLGFMT) DA('TSO.INFO.BLGFMT','INFO.BLGFMT') SHR\nELSE +\n  ALLOC F(BLGFMT) DA('&UFMT','TSO.INFO.BLGFMT','INFO.BLGFMT') SHR\nIF &UPNL EQ &STR() THEN +\n  ALLOC F(BLGPNLS) DA('TSO.INFO.BLGPNLS','INFO.BLGPNLS') SHR\nELSE +\n  ALLOC F(BLGPNLS) DA('&UPNL','TSO.INFO.BLGPNLS','INFO.BLGPNLS') SHR\nIF &MODPNL NE &STR() THEN +\n  ALLOC F(BLGMPNL) DA('&MODPNL') SHR\nALLOC F(BLGSD5) DA('INFO.BLGDB.SDDS&DSSUFX') SHR\nALLOC F(BLGSI5) DA('INFO.BLGDB.SDIDS&DSSUFX') SHR\nIF &DSSUFX NE 7 THEN +\n  ALLOC F(BLGSL5) DA('INFO.BLGDB.SDLDS&DSSUFX') SHR\nINFO &ICLASS &ISRC\nISPEXEC CONTROL DISPLAY REFRESH\nIF &DEBUG EQ &STR() THEN +\n  CONTROL NOMSG\nFREE F(BLGPNLS,BLGFMT,BLGSRC,BLGSD5,BLGSI5,BLGSL5,BLGMPNL,VSAM,VSAM2)\nFREE F(VSAM3,VSAM4,VSAM5,VSAM6)\nIF &DEBUG EQ &STR() THEN +\n  CONTROL MSG\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PLTCMPR": {"ttr": 1537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOFLUSH NOMSG NOPROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST NOFLUSH MSG CONLIST SYMLIST PROMPT\nATTN +\n  DO\n    DELETE '&DSPRFX..&DSYS..&TSYS..*'\n    FREEALL\n    EXIT\n  END\nIF &SYSPREF EQ &STR() THEN +\n  DO\n    SET &DSPRFX EQ &SYSUID\n  END\nELSE +\n  IF &SYSPREF EQ &SYSUID THEN +\n    DO\n      SET &DSPRFX EQ &SYSUID\n    END\n  ELSE +\n    DO\n      SET &DSPRFX EQ &SYSPREF\n    END\nISPEXEC CONTROL ERRORS RETURN\nFREE F(SYSIN,SYSOUT,SORTIN,SORTOUT,SYSUT1,SYSUT2,SYSPRINT)\nSET &RC EQ 0\nSET &INDSN1 EQ &STR()\nSET &INLR1 EQ &STR()\nSET &OUTLR1 EQ &STR()\nSET &SRTFLDS1 EQ &STR()\nSET &STPOS11 EQ &STR()\nSET &FLNGTH11 EQ &STR()\nSET &STPOS12 EQ &STR()\nSET &FLNGTH12 EQ &STR()\nSET &STPOS13 EQ &STR()\nSET &FLNGTH13 EQ &STR()\nSET &SYNSI11 EQ &STR( SORT FIELDS=COPY )\nSET &SYNSI12 EQ &STR()\nSET &SYNSI13 EQ &STR()\nSET &SYNSIWK1 EQ &STR()\nSET &BLKSIZE1 EQ &STR()\nSET &LENSUM1 EQ &STR()\nSET &INDSN2 EQ &STR()\nSET &INLR2 EQ &STR()\nSET &OUTLR2 EQ &STR()\nSET &SRTFLDS2 EQ &STR()\nSET &STPOS11 EQ &STR()\nSET &FLNGTH11 EQ &STR()\nSET &STPOS21 EQ &STR()\nSET &FLNGTH21 EQ &STR()\nSET &STPOS22 EQ &STR()\nSET &FLNGTH22 EQ &STR()\nSET &STPOS23 EQ &STR()\nSET &FLNGTH23 EQ &STR()\nSET &SYNSI21 EQ &STR( SORT FIELDS=COPY )\nSET &SYNSI22 EQ &STR()\nSET &SYNSI23 EQ &STR()\nSET &SYNSIWK2 EQ &STR()\nSET &BLKSIZE2 EQ &STR()\nSET &LENSUM2 EQ &STR()\nSET &DSYS EQ &STR(D&SUBSTR(1:2,&SYSDATE)&SUBSTR(4:5,&SYSDATE)&SUBSTR(7:+\n8,&SYSDATE))\nSET &TSYS EQ &STR(T&SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)&SUBSTR(7:+\n8,&SYSTIME))\nISPEXEC DISPLAY PANEL(PLTCMPR1)\nSET &RC EQ &LASTCC\nRESTART: +\nIF &RC = 8 THEN +\n  DO\n    ALLOC F(SYSUT1) NEW DELETE UNIT(VIO) SPACE(4) CYL\n    ALLOC F(SYSUT2) NEW DELETE UNIT(VIO) SPACE(4) CYL\n    ALLOC F(SYSIN) DA(*)\n    ALLOC F(SYSPRINT) DA(*)\n    EXIT\n  END\nWHATIF DATASET('&DSPRFX..&DSYS..&TSYS..SORTOUT1')  CATALOGED\nIF &LASTCC EQ 0 THEN +\n  DELETE '&DSPRFX..&DSYS..&TSYS..SORTOUT1'\nWHATIF DATASET('&DSPRFX..&DSYS..&TSYS..SORTOUT2')  CATALOGED\nIF &LASTCC EQ 0 THEN +\n  DELETE '&DSPRFX..&DSYS..&TSYS..SORTOUT2'\nWHATIF DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')  CATALOGED\nIF &LASTCC EQ 0 THEN +\n  DELETE '&DSPRFX..&DSYS..&TSYS..SYSPRINT'\nIF &STR(&SRTFLDS1) NE &STR() THEN +\n  SET &SYNSI11 EQ &STR( SORT FIELDS=&STR(&SRTFLDS1) )\nIF &STR(&SRTFLDS2) NE &STR() THEN +\n  SET &SYNSI21 EQ &STR( SORT FIELDS=&STR(&SRTFLDS2) )\nIF &STPOS11 EQ &STR() THEN +\n  DO\n    IF &STPOS21 EQ &STR() THEN +\n      DO\n        ALLOC F(SYSUT1) DA('&INDSN1') SHR\n        ALLOC F(SYSUT2) DA('&INDSN2') SHR\n        GOTO COMPRTN\n      END\n  END\nIF &STPOS11 EQ &STR() THEN +\n  DO\n    ALLOC F(SYSUT1) DA('&INDSN1') SHR\n    GOTO CHECKDS2\n  END\nIF &INLR1 EQ &STR() THEN +\n  DO\n    ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM002) CURSOR(INLR1)\n    SET &RC EQ &LASTCC\n    GOTO RESTART\n  END\nIF &OUTLR1 EQ &STR() THEN +\n  DO\n    ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM003) CURSOR(OUTLR1)\n    SET &RC EQ &LASTCC\n    GOTO RESTART\n  END\nIF &FLNGTH11 EQ &STR() THEN +\n  DO\n    ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM004) CURSOR(FLNGTH11)\n    SET &RC EQ &LASTCC\n    GOTO RESTART\n  END\nIF &STPOS12 NE &STR() THEN +\n  DO\n    IF &FLNGTH12 EQ &STR() THEN +\n      DO\n        ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM005) CURSOR(FLNGTH12)\n        SET &RC EQ &LASTCC\n        GOTO RESTART\n      END\n  END\nIF &STPOS13 NE &STR() THEN +\n  DO\n    IF &FLNGTH13 EQ &STR() THEN +\n      DO\n        ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM006) CURSOR(FLNGTH13)\n        SET &RC EQ &LASTCC\n        GOTO RESTART\n      END\n  END\nSET &LENSUM1 EQ &FLNGTH11\nIF &FLNGTH12 NE &STR() THEN +\n  SET &LENSUM1 EQ &EVAL(&LENSUM1+&FLNGTH12)\nIF &FLNGTH13 NE &STR() THEN +\n  SET &LENSUM1 EQ &EVAL(&LENSUM1+&FLNGTH13)\nIF &LENSUM1 NE &OUTLR1 THEN +\n  DO\n    ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM007) CURSOR(OUTLR1)\n    SET &RC EQ &LASTCC\n    GOTO RESTART\n  END\nSET &BLKSIZE1 EQ &EVAL((19069/&OUTLR1)*&OUTLR1)\nSET &SYNSI12 EQ &STR( RECORD TYPE=F,LENGTH=(&STR(&INLR1)) )\nSET &SYNSIWK1 EQ &STR(&STPOS11,&FLNGTH11)\nIF &STPOS12 NE &STR() THEN +\n  SET &SYNSIWK1 EQ &STR(&SYNSIWK1,&STPOS12,&FLNGTH12)\nIF &STPOS13 NE &STR() THEN +\n  SET &SYNSIWK1 EQ &STR(&SYNSIWK1,&STPOS13,&FLNGTH13)\nSET &SYNSI13 EQ &STR( OUTREC FIELDS=(&SYNSIWK1) )\n/*   SORT ROUTINE   */\nERROR OFF\nFREE A(A,B,FBSO)\nATTR A RECFM(F B) LRECL(80) BLKSIZE(3120)\nATTR B RECFM(F B) LRECL(121) BLKSIZE(2420)\nATTR FBSO RECFM(F B) LRECL(&OUTLR1) BLKSIZE(&BLKSIZE1)\nALLOC F(SYSIN) NEW DELETE SPACE(1 1) TRACKS USING(A) UNIT(VIO)\nALLOC F(SYSOUT) NEW DELETE SPACE(1 1) TRACKS USING(B) UNIT(VIO)\nALLOC F(SORTIN) DA('&INDSN1') SHR\nALLOC F(SORTOUT) DA('&DSPRFX..&DSYS..&TSYS..SORTOUT1') NEW CATALOG +\n  UNIT(SYSTSO) SPACE(100 5) USING(FBSO) TRACKS\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&SYNSI11)\nPUTFILE SYSIN\nSET &SYSIN EQ &STR(&SYNSI12)\nPUTFILE SYSIN\nSET &SYSIN EQ &STR(&SYNSI13)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ SORT\nIF &LASTCC NE 0 THEN +\n  DO\n    ERROR +\n      DO\n        CLOSFILE SYSOUT\n        FREE F(SYSIN,SYSOUT,SORTIN,SORTOUT)\n        FREE A(A,B,FBSO)\n        ALLOC F(SYSIN) DA(*)\n        ALLOC F(SYSPRINT) DA(*)\n        DELETE '&DSPRFX..&DSYS..&TSYS..*'\n        ISPEXEC CONTROL DISPLAY REFRESH\n        EXIT\n      END\n    ISPEXEC CONTROL DISPLAY LINE START(1)\n    OPENFILE SYSOUT INPUT\n    GETSOUT1: +\n    GETFILE SYSOUT\n    WRITE &SYSOUT\n    GOTO GETSOUT1\n  END\nERROR OFF\nFREE F(SYSIN,SYSOUT,SORTIN,SORTOUT)\nFREE A(A,B,FBSO)\nALLOC F(SYSUT1) DA('&DSPRFX..&DSYS..&TSYS..SORTOUT1') SHR\nCHECKDS2: +\nIF  &STPOS21 EQ &STR() THEN +\n  DO\n    ALLOC F(SYSUT2) DA('&INDSN2') SHR\n    GOTO COMPRTN\n  END\nIF &INLR2 EQ &STR() THEN +\n  DO\n    ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM002) CURSOR(INLR2)\n    SET &RC EQ &LASTCC\n    GOTO RESTART\n  END\nIF &OUTLR2 EQ &STR() THEN +\n  DO\n    ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM003) CURSOR(OUTLR2)\n    SET &RC EQ &LASTCC\n    GOTO RESTART\n  END\nIF &FLNGTH21 EQ &STR() THEN +\n  DO\n    ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM004) CURSOR(FLNGTH21)\n    SET &RC EQ &LASTCC\n    GOTO RESTART\n  END\nIF &STPOS22 NE &STR() THEN +\n  DO\n    IF &FLNGTH22 EQ &STR() THEN +\n      DO\n        ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM005) CURSOR(FLNGTH22)\n        SET &RC EQ &LASTCC\n        GOTO RESTART\n      END\n  END\nIF &STPOS23 NE &STR() THEN +\n  DO\n    IF &FLNGTH23 EQ &STR() THEN +\n      DO\n        ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM006) CURSOR(FLNGTH23)\n        SET &RC EQ &LASTCC\n        GOTO RESTART\n      END\n  END\nSET &LENSUM2 EQ &FLNGTH21\nIF &FLNGTH22 NE &STR() THEN +\n  SET &LENSUM2 EQ &EVAL(&LENSUM2+&FLNGTH22)\nIF &FLNGTH23 NE &STR() THEN +\n  SET &LENSUM2 EQ &EVAL(&LENSUM2+&FLNGTH23)\nIF &LENSUM2 NE &OUTLR2 THEN +\n  DO\n    ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM007) CURSOR(OUTLR2)\n    SET &RC EQ &LASTCC\n    GOTO RESTART\n  END\nSET &BLKSIZE2 EQ &EVAL((19069/&OUTLR2)*&OUTLR2)\nSET &SYNSI22 EQ &STR( RECORD TYPE=F,LENGTH=(&STR(&INLR2)) )\nSET &SYNSIWK2 EQ &STR(&STPOS21,&FLNGTH21)\nIF &STPOS22 NE &STR() THEN +\n  SET &SYNSIWK2 EQ &STR(&SYNSIWK2,&STPOS22,&FLNGTH22)\nIF &STPOS23 NE &STR() THEN +\n  SET &SYNSIWK2 EQ &STR(&SYNSIWK2,&STPOS23,&FLNGTH23)\nSET &SYNSI23 EQ &STR( OUTREC FIELDS=(&SYNSIWK2) )\n/*   SORT ROUTINE   */\nERROR OFF\nFREE A(A,B,FBSO)\nATTR A RECFM(F B) LRECL(80) BLKSIZE(3120)\nATTR B RECFM(F B) LRECL(121) BLKSIZE(2420)\nATTR FBSO RECFM(F B) LRECL(&OUTLR2) BLKSIZE(&BLKSIZE2)\nALLOC F(SYSIN) NEW DELETE SPACE(1 1) TRACKS USING(A) UNIT(VIO)\nALLOC F(SYSOUT) NEW DELETE SPACE(1 1) TRACKS USING(B) UNIT(VIO)\nALLOC F(SORTIN) DA('&INDSN2') SHR\nALLOC F(SORTOUT) DA('&DSPRFX..&DSYS..&TSYS..SORTOUT2') NEW CATALOG +\n  UNIT(SYSTSO) SPACE(100 5) USING(FBSO) TRACKS\nOPENFILE SYSIN OUTPUT\nSET &SYSIN EQ &STR(&SYNSI21)\nPUTFILE SYSIN\nSET &SYSIN EQ &STR(&SYNSI22)\nPUTFILE SYSIN\nSET &SYSIN EQ &STR(&SYNSI23)\nPUTFILE SYSIN\nCLOSFILE SYSIN\n$ SORT\nIF &LASTCC NE 0 THEN +\n  DO\n    ERROR +\n      DO\n        CLOSFILE SYSOUT\n        FREE F(SYSIN,SYSOUT,SORTIN,SORTOUT)\n        FREE A(A,B,FBSO)\n        ALLOC F(SYSIN) DA(*)\n        ALLOC F(SYSPRINT) DA(*)\n        DELETE '&DSPRFX..&DSYS..&TSYS..*'\n        ISPEXEC CONTROL DISPLAY REFRESH\n        EXIT\n      END\n    ISPEXEC CONTROL DISPLAY LINE START(1)\n    OPENFILE SYSOUT INPUT\n    GETSOUT2: +\n    GETFILE SYSOUT\n    WRITE &SYSOUT\n    GOTO GETSOUT2\n  END\nERROR OFF\nFREE F(SYSIN,SYSOUT,SORTIN,SORTOUT)\nFREE A(A,B,FBSO)\nALLOC F(SYSUT2) DA('&DSPRFX..&DSYS..&TSYS..SORTOUT2') SHR\nCOMPRTN: +\nFREE A(FB121)\nATTR FB121 RECFM(F B A) LRECL(121) BLKSIZE(3993)\nALLOC F(SYSPRINT) DA('&DSPRFX..&DSYS..&TSYS..SYSPRINT') NEW CATALOG +\n  UNIT(SYSTSO) SPACE(1 1) USING(FB121) TRACKS\nALLOC F(SYSIN) DUMMY\n$ IEBCOMPR\nSET &RC EQ &LASTCC\nIF &RC EQ 0 THEN +\n  DO\n    FREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\n    FREE A(FB121)\n    DELETE '&DSPRFX..&DSYS..&TSYS..*'\n    ISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM001)\n    SET &RC EQ &LASTCC\n    GOTO RESTART\n  END\nFREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\nFREE A(FB121)\nISPEXEC BROWSE DATASET('&DSPRFX..&DSYS..&TSYS..SYSPRINT')\nDELETE '&DSPRFX..&DSYS..&TSYS..*'\nISPEXEC DISPLAY PANEL(PLTCMPR1) MSG(PLTCM000)\nSET &RC EQ &LASTCC\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "S1ASM1": {"ttr": 1543, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOMSG NOFLUSH NOPROMPT NOLIST\nIF &DEBUG NE &STR() THEN +\n  CONTROL MSG PROMPT CONLIST SYMLIST LIST\nSET &ERRM EQ &STR()\nRESTART: +\nFREE F(SYSUT1,SYSUT2)\nFREE F(SYSPUNCH,SYSIN,SYSPRINT,SYSLIB,SYSTERM)\nFREE F(SYSLIB2,SYSLIB3,SYSLIB4,SYSLIB5,SYSLIB6,SYSLIB7,SYSLIB8)\nFREE A(ASMLIST,ASMLIST2)\nISPEXEC CONTROL ERRORS RETURN\nISPEXEC VGET (PRJ1,LIB1,ASMT,LNKT,MEM,BCLA,FASM) PROFILE\nSET &LISTOPT EQ &STR()\nSET &SLIB1 EQ &STR()\nSET &SLIB2 EQ &STR()\nSET &SLIB3 EQ &STR()\nSET &SLIB4 EQ &STR()\nSET &SLIBLIST EQ &STR()\nIF &STR(&BCLA) EQ &STR() THEN +\n  SET &BCLA EQ A\nIF &STR(&BCLA) EQ &STR( ) THEN +\n  SET &BCLA EQ A\nISPEXEC DISPLAY PANEL(S1ASM1) CURSOR(MEM) &ERRM\nIF &LASTCC EQ 8 THEN +\n  DO\n    ALLOC F(SYSIN) DA(*)\n    ALLOC F(SYSPRINT) DA(*)\n    ALLOC F(SYSTERM) DA(*)\n    ALLOC F(SYSUT1) NEW DELETE UNIT(VIO) SPACE(4) CYL\n    ALLOC F(SYSUT2) NEW DELETE UNIT(VIO) SPACE(4) CYL\n    EXIT\n  END\nSET &ERRM EQ &STR()\nWHATIF DATASET('&PRJ1..&LIB1..&ASMT') CATALOGED\nIF &LASTCC NE 0 THEN +\n  DO\n    SET &ERRM EQ &STR(MSG(SASM000))\n    GOTO RESTART\n  END\nIF &SLIB1 NE &STR() THEN +\n  DO\n    ALLOC F(SYSLIB) DA('&SLIB1') SHR\n    IF &SLIB2 NE &STR() THEN +\n      DO\n        ALLOC F(SYSLIB2) DA('&SLIB2') SHR\n        SET &SLIBLIST EQ &STR(&SLIBLIST,SYSLIB2)\n      END\n      IF &SLIB3 NE &STR() THEN +\n        DO\n          ALLOC F(SYSLIB3) DA('&SLIB3') SHR\n          SET &SLIBLIST EQ &STR(&SLIBLIST,SYSLIB3)\n        END\n        IF &SLIB4 NE &STR() THEN +\n          DO\n            ALLOC F(SYSLIB4) DA('&SLIB4') SHR\n            SET &SLIBLIST EQ &STR(&SLIBLIST,SYSLIB4)\n          END\n    ALLOC F(SYSLIB5) DA('SER1.EDX.MACLIB') SHR\n    ALLOC F(SYSLIB6) DA('SER1.EDXPP.MACLIB') SHR\n    ALLOC F(SYSLIB7) DA('DLX1.EDLCOPY.ASM') SHR\n    ALLOC F(SYSLIB8) DA('SER1.EDX.ASMCNTL') SHR\n    ALLOC F(SYSLIB9) DA('SER1.HPPF.MACLIB') SHR\n    SET &SLIBLIST EQ &STR(&SLIBLIST,SYSLIB5,SYSLIB6,SYSLIB7,SYSLIB8,SYS+\nLIB9)\n  END\nELSE +\n  DO\n    ALLOC F(SYSLIB) DA('SER1.EDX.MACLIB') SHR\n    ALLOC F(SYSLIB2) DA('SER1.EDXPP.MACLIB') SHR\n    ALLOC F(SYSLIB3) DA('DLX1.EDLCOPY.ASM') SHR\n    ALLOC F(SYSLIB4) DA('SER1.EDX.ASMCNTL') SHR\n    ALLOC F(SYSLIB5) DA('SER1.HPPF.MACLIB') SHR\n    SET &SLIBLIST EQ &STR(&SLIBLIST,SYSLIB2,SYSLIB3,SYSLIB4,SYSLIB5)\n  END\nCONCAT (SYSLIB&SLIBLIST)\nALLOC F(SYSIN) DA('&PRJ1..&LIB1..&ASMT(&MEM)') SHR\nALLOC F(SYSPUNCH) DA('&PRJ1..&LIB1..&LNKT(&MEM)') SHR\nALLOC F(SYSUT1) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSUT2) UNIT(VIO) SPACE(10 2) CYLINDERS\nATTR ASMLIST RECFM(F B A) LRECL(133) BLKSIZE(2394)\nATTR ASMLIST2 RECFM(F B A) LRECL(121) BLKSIZE(968)\nALLOC F(SYSPRINT) DA('&PRJ1..&MEM..S1ASM.LIST') CATALOG SPACE(20 10) +\n  TRACKS UNIT(SYSTSO) USING(ASMLIST) NEW\nSET &ASMOPT EQ &STR()\nIF &STR(&FASM) NE &STR() THEN +\n  SET &ASMOPT EQ &STR(&STR(,)&STR(&FASM))\nCALL 'SER1.HPPF.LOAD(S1HASM3M)' 'NORELOC,XREF&ASMOPT'\nSET &RC = &LASTCC\nWRITE SERIES 1 HOST ASSEMBLER COMPLETED RETURN CODE &RC\n/* ISPEXEC BROWSE DATASET('&PRJ1..&MEM..S1ASM.LIST')  */\nISPEXEC VPUT (PRJ1,LIB1,ASMT,MEM,BCLA,FASM) PROFILE\nDECONCAT SYSLIB\nSET &SLIBLIST EQ &SUBSTR(2:&EVAL(&LENGTH(&SLIBLIST)+1),&SLIBLIST)\nFREE F(&SLIBLIST)\nFREE F(SYSUT1,SYSUT2)\nFREE F(SYSPUNCH,SYSIN,SYSPRINT,SYSLIB)\nFREE F(WORK)\nALLOC F(WORK) UNIT(VIO) CYLINDER SPACE(10 2) NEW DELETE\nALLOC F(SYSPRINT) DUMMY\nALLOC F(IN) DA('&PRJ1..&MEM..S1ASM.LIST') SHR\nALLOC F(LIST) DA('&PRJ1..&MEM..EDX.LIST') CATALOG SPACE(10 5)  +\n  TRACKS UNIT(SYSTSO) USING(ASMLIST2) NEW\nCALL 'SER1.EDX.LOAD(EDXLIST)' +\n     'ISA(16)/PRINTER,XREF=$REF,RLD=NO,CONTROL=***'\nSET &RC = &LASTCC\nWRITE EDXLIST PROCESSOR COMPLETED RETURN CODE &RC\nFREE F(SYSPRINT,WORK,IN,LIST)\nFREE A(ASMLIST,ASMLIST2)\nISPEXEC BROWSE DATASET('&PRJ1..&MEM..EDX.LIST')\nIF &LISTOPT NE &STR() THEN +\n  DO\n    IF &SUBSTR(1:1,&LISTOPT) EQ &STR(P) THEN +\n      DO\n        ALLOC F(SYSIN) DUMMY\n        ALLOC F(SYSPRINT) DUMMY\n        ALLOC F(SYSUT1) DA('&PRJ1..&MEM..EDX.LIST') SHR\n        ALLOC F(SYSUT2) SYSOUT(&STR(&BCLA)) NOHOLD KEEP\n        $ IEBGENER\n        FREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\n      END\n  END\nDELETE '&PRJ1..&MEM..S1ASM.LIST'\nDELETE '&PRJ1..&MEM..EDX.LIST'\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "S1ASM1B": {"ttr": 1546, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOMSG NOFLUSH NOPROMPT NOLIST\nIF &DEBUG NE &STR() THEN +\n  CONTROL MSG PROMPT CONLIST SYMLIST LIST\nISPEXEC CONTROL ERRORS RETURN\nISPEXEC VGET (PRJ1,LIB1,ASMT,MEM,BCLA,FASM,LNKT) PROFILE\nISPEXEC VGET (JOB1,JOB2,JOB3,JOB4,Z,ZTEMPF) SHARED\nSET &FTOPENRC EQ 0\nSET &LISTOPT EQ &STR()\nSET &SLIB1 EQ &STR()\nSET &SLIB2 EQ &STR()\nSET &SLIB3 EQ &STR()\nSET &SLIB4 EQ &STR()\nIF &STR(&BCLA) EQ &STR() THEN +\n  SET &BCLA EQ &STR(*)\nIF &STR(&BCLA) EQ &STR( ) THEN +\n  SET &BCLA EQ &STR(*)\nRESTART: +\nISPEXEC DISPLAY PANEL(S1ASM1B) CURSOR(MEM)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nSET &ASMOPT EQ &STR()\nIF &STR(&FASM) NE &STR() THEN +\n  SET &ASMOPT EQ &STR(&STR(,)&STR(&FASM))\nISPEXEC FTOPEN TEMP\nSET &FTOPENRC EQ &LASTCC\nISPEXEC FTINCL S1ASM1BB\nISPEXEC VPUT (PRJ1,LIB1,ASMT,MEM,BCLA,FASM,LNKT) PROFILE\nEXIT\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "S1OBJ1": {"ttr": 1548, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOMSG NOFLUSH NOPROMPT NOLIST\nIF &DEBUG NE &STR() THEN +\n  CONTROL MSG PROMPT CONLIST SYMLIST LIST\nISPEXEC CONTROL ERRORS RETURN\nISPEXEC VGET (PRJ1,LIB1,LNKT,MEM) PROFILE\nISPEXEC VGET (DESTID) SHARED\nSET &ERRM EQ &STR()\nRESTART: +\nFREE F(SYSUT1,SYSUT2,SYSIN,SYSPRINT)\nISPEXEC DISPLAY PANEL(S1OBJ1) &ERRM\nIF &LASTCC EQ 8 THEN +\n  DO\n    ALLOC F(SYSUT1) NEW DELETE UNIT(VIO) SPACE(4) CYL\n    ALLOC F(SYSUT2) NEW DELETE UNIT(VIO) SPACE(4) CYL\n    ALLOC F(SYSPRINT) DA(*)\n    ALLOC F(SYSIN) DA(*)\n    EXIT\n  END\nSET &ERRM EQ &STR()\nWHATIF DATASET ('&PRJ1..&LIB1..&LNKT') CATALOGED\nIF &LASTCC NE 0 THEN +\n  DO\n    SET &ERRM EQ &STR(MSG(SASM000))\n    GOTO RESTART\n  END\nALLOC F(SYSUT1) DA('&PRJ1..&LIB1..&LNKT(&MEM)') SHR\nALLOC F(SYSUT2) SYSOUT(B) NOHOLD KEEP DEST(&DESTID)\nALLOC F(SYSIN) DUMMY\nALLOC F(SYSPRINT) DUMMY\n$ IEBGENER\nSET &RC = &LASTCC\nIF &RC = 0 THEN +\n  SET &ERRM EQ &STR(MSG(SASM001))\nELSE +\n  SET &ERRM EQ &STR(MSG(SASM002))\nISPEXEC CONTROL DISPLAY REFRESH\nISPEXEC VPUT (PRJ1,LIB1,LNKT,MEM) PROFILE\nISPEXEC VPUT (DESTID) SHARED\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USERCOB": {"ttr": 1550, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOMSG NOFLUSH NOPROMPT NOLIST\nIF &DEBUG NE &STR() THEN +\n  CONTROL MSG PROMPT CONLIST SYMLIST LIST\nFREE F(SYSUT1,SYSUT2,SYSUT3,SYSUT4,SYSUT5,SYSUT6)\nFREE F(SYSPUNCH,SYSIN,SYSTERM,SYSPRINT,SYSLIB,SYSLIN)\nFREE A(COBLIST)\nISPEXEC CONTROL ERRORS RETURN\nISPEXEC VGET (PRJ1,LIB1,COBT,MEM,BCLA,FCOB) PROFILE\nSET &LISTOPT EQ &STR()\nSET &SYSUT5DS EQ &STR()\nSET &SORSWT EQ &STR()\nSET &SLIB1 EQ &STR()\nSET &SLIB2 EQ &STR()\nSET &SLIB3 EQ &STR()\nSET &SLIB4 EQ &STR()\nIF &STR(&BCLA) EQ &STR() THEN +\n  SET &BCLA EQ A\nIF &STR(&BCLA) EQ &STR( ) THEN +\n  SET &BCLA EQ A\nISPEXEC DISPLAY PANEL(COBOL2) CURSOR(MEM)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nSET &LISTER EQ &STR(OFF)\nSET &SYSDVAL EQ &STR(&FCOB)\nREADDVAL COBP1,COBP2,COBP3,COBP4,COBP5,COBP6,COBP7,COBP8,COBP9\nIF &STR(&COBP1) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP1)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP1)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP2) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP2)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP2)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP3) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP3)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP3)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP4) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP4)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP4)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP5) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP5)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP5)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP6) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP6)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP6)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&STR(&COBP7)) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&STR(&COBP7))) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&STR(&COBP7))) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP8) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP8)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP8)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP9) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP9)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP9)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nSET &SORSWT EQ &STR(ON)\nGOTO ENDLSTCK\nLSTCHK2: +\nSET &SORSWT EQ &STR(OFF)\nIF &STR(&COBP1) NE &STR() THEN +\n  DO\n    IF &STR(&COBP1) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP2) NE &STR() THEN +\n  DO\n    IF &STR(&COBP2) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP3) NE &STR() THEN +\n  DO\n    IF &STR(&COBP3) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP4) NE &STR() THEN +\n  DO\n    IF &STR(&COBP4) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP5) NE &STR() THEN +\n  DO\n    IF &STR(&COBP5) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP6) NE &STR() THEN +\n  DO\n    IF &STR(&COBP6) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&STR(&COBP7)) NE &STR() THEN +\n  DO\n    IF &STR(&STR(&COBP7)) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP8) NE &STR() THEN +\n  DO\n    IF &STR(&COBP8) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP9) NE &STR() THEN +\n  DO\n    IF &STR(&COBP9) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nENDLSTCK: +\nIF &SLIB1 NE &STR() THEN +\n  SET &SLIB1 EQ &STR(&STR(')&STR(&SLIB1)&STR(')&STR(,))\nIF &SLIB2 NE &STR() THEN +\n  SET &SLIB2 EQ &STR(&STR(')&STR(&SLIB2)&STR(')&STR(,))\nIF &SLIB3 NE &STR() THEN +\n  SET &SLIB3 EQ &STR(&STR(')&STR(&SLIB3)&STR(')&STR(,))\nIF &SLIB4 NE &STR() THEN +\n  SET &SLIB4 EQ &STR(&STR(')&STR(&SLIB4)&STR(')&STR(,))\nALLOC F(SYSLIB) +\n DA(&SLIB1&SLIB2&SLIB3&SLIB4'DLX1.COBCOPY.COBOL') SHR\nALLOC F(SYSIN) DA('&PRJ1..&LIB1..&COBT(&MEM)') SHR\nALLOC F(SYSLIN) DA('&PRJ1..&LIB1..OBJ(&MEM)') SHR\nALLOC F(SYSPUNCH) DUMMY\nALLOC F(SYSTERM) DA(*)\nALLOC F(SYSUT1) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSUT2) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSUT3) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSUT4) UNIT(VIO) SPACE(10 2) CYLINDERS\nIF &SYSUT5DS NE &STR() THEN +\n  DO\n    WHATIF DATASET('&SYSUT5DS') CATALOGED\n    IF &LASTCC EQ 0 THEN +\n      DO\n        ALLOC F(SYSUT5) DA('&SYSUT5DS') SHR RELEASE\n      END\n    ELSE +\n      DO\n        ALLOC F(SYSUT5) DA('&SYSUT5DS') UNIT(SYSTSO) NEW CATALOG +\n          SPACE(25 5) TRACKS RELEASE\n      END\n  END\nELSE +\n  DO\n    ALLOC F(SYSUT5) UNIT(VIO) SPACE(10 2) CYLINDERS\n  END\nALLOC F(SYSUT6) UNIT(VIO) SPACE(10 2) CYLINDERS\nIF &LISTER EQ &STR(OFF) THEN +\n  ATTR COBLIST RECFM(F B A) LRECL(121) BLKSIZE(1210)\nELSE +\n  ATTR COBLIST RECFM(F B A) LRECL(133) BLKSIZE(1330)\nALLOC F(SYSPRINT) DA('&PRJ1..&MEM..COBOL.LIST') NEW CATALOG SPACE(10 5)+\n  TRACKS UNIT(SYSTSO) USING(COBLIST)\nSET &COBOPT EQ &STR()\nIF &STR(&FCOB) NE &STR() THEN +\n  SET &COBOPT EQ &STR(&STR(,)&STR(&FCOB))\nIF &SYSUT5DS NE &STR() THEN +\nIF &LISTER EQ &STR(OFF) THEN +\n  SET &COBOPT EQ &STR(&STR(,SYMDMP)&STR(&COBOPT))\nIF &SORSWT EQ &STR(OFF) THEN +\n  SET &COBOPT EQ &STR(&STR(,NOSOURCE)&STR(&COBOPT))\n$ IKFCBL00 'TERM&COBOPT'\nSET &RC = &LASTCC\nWRITE COBOL COMPLETED RETURN CODE &RC\nISPEXEC BROWSE DATASET('&PRJ1..&MEM..COBOL.LIST')\nISPEXEC VPUT (PRJ1,LIB1,COBT,MEM,BCLA,FCOB) PROFILE\nFREE F(SYSUT1,SYSUT2,SYSUT3,SYSUT4,SYSUT5,SYSUT6)\nFREE F(SYSPUNCH,SYSIN,SYSTERM,SYSPRINT,SYSLIB,SYSLIN)\nFREE A(COBLIST)\nIF &LISTOPT NE &STR() THEN +\n  DO\n    IF &SUBSTR(1:1,&LISTOPT) EQ &STR(P) THEN +\n      DO\n        ALLOC F(SYSIN) DUMMY\n        ALLOC F(SYSPRINT) DUMMY\n        ALLOC F(SYSUT1) DA('&PRJ1..&MEM..COBOL.LIST') SHR\n        ALLOC F(SYSUT2) SYSOUT(&BCLA) NOHOLD KEEP\n        $ IEBGENER\n        FREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\n      END\n  END\nDELETE '&PRJ1..&MEM..COBOL.LIST'\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSTERM) DA(*)\nALLOC F(SYSUT1) NEW DELETE UNIT(VIO) SPACE(4) CYL\nALLOC F(SYSUT2) NEW DELETE UNIT(VIO) SPACE(4) CYL\nALLOC F(SYSUT3) NEW DELETE UNIT(VIO) SPACE(4) CYL\nALLOC F(SYSUT4) NEW DELETE UNIT(VIO) SPACE(4) CYL\nIF &RC EQ 0 THEN +\n  ISPEXEC SELECT CMD(USERLNK &DEBUG)\nIF &RC EQ 4 THEN +\n  ISPEXEC SELECT CMD(USERLNK &DEBUG)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USERCOBB": {"ttr": 1798, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOMSG NOFLUSH NOPROMPT NOLIST\nIF &DEBUG NE &STR() THEN +\n  CONTROL MSG PROMPT CONLIST SYMLIST LIST\nISPEXEC CONTROL ERRORS RETURN\nISPEXEC VGET (PRJ1,LIB1,COBT,MEM,BCLA,BCOB) PROFILE\nISPEXEC VGET (JOB1,JOB2,JOB3,JOB4,Z,ZTEMPF) SHARED\nSET &NMEM EQ &STR()\nSET &SYSUT5DS EQ &STR()\nSET &SORSWT EQ &STR()\nSET &SLIB1 EQ &STR()\nSET &SLIB2 EQ &STR()\nSET &SLIB3 EQ &STR()\nSET &SLIB4 EQ &STR()\nSET &FTOPENRC EQ 0\nSET &SYMRC EQ 0\nSET &FDECKSW EQ &STR(OFF)\nIF &STR(&BCLA) EQ &STR() THEN +\n  SET &BCLA EQ &STR(*)\nIF &STR(&BCLA) EQ &STR( ) THEN +\n  SET &BCLA EQ &STR(*)\nISPEXEC DISPLAY PANEL(COBOL2B) CURSOR(MEM)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nSET &LISTER EQ &STR(OFF)\nSET &SYSDVAL EQ &STR(&BCOB)\nREADDVAL COBP1,COBP2,COBP3,COBP4,COBP5,COBP6,COBP7,COBP8,COBP9\nIF &STR(&COBP1) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP1)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP1)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP2) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP2)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP2)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP3) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP3)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP3)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP4) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP4)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP4)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP5) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP5)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP5)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP6) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP6)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP6)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&STR(&COBP7)) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&STR(&COBP7))) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&STR(&COBP7))) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP8) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP8)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP8)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nIF &STR(&COBP9) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP9)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP9)) EQ &STR(LST) THEN +\n          DO\n            SET &LISTER EQ &STR(ON)\n            GOTO LSTCHK2\n          END\n      END\n  END\nSET &SORSWT EQ &STR(ON)\nGOTO ENDLSTCK\nLSTCHK2: +\nIF &STR(&COBP1) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP1)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP1)) EQ &STR(FDE) THEN +\n          DO\n            SET &FDECKSW EQ &STR(ON)\n            GOTO LSTCHK3\n          END\n      END\n  END\nIF &STR(&COBP2) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP2)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP2)) EQ &STR(FDE) THEN +\n          DO\n            SET &FDECKSW EQ &STR(ON)\n            GOTO LSTCHK3\n          END\n      END\n  END\nIF &STR(&COBP3) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP3)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP3)) EQ &STR(FDE) THEN +\n          DO\n            SET &FDECKSW EQ &STR(ON)\n            GOTO LSTCHK3\n          END\n      END\n  END\nIF &STR(&COBP4) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP4)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP4)) EQ &STR(FDE) THEN +\n          DO\n            SET &FDECKSW EQ &STR(ON)\n            GOTO LSTCHK3\n          END\n      END\n  END\nIF &STR(&COBP5) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP5)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP5)) EQ &STR(FDE) THEN +\n          DO\n            SET &FDECKSW EQ &STR(ON)\n            GOTO LSTCHK3\n          END\n      END\n  END\nIF &STR(&COBP6) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP6)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP6)) EQ &STR(FDE) THEN +\n          DO\n            SET &FDECKSW EQ &STR(ON)\n            GOTO LSTCHK3\n          END\n      END\n  END\nIF &STR(&STR(&COBP7)) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&STR(&COBP7))) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&STR(&COBP7))) EQ &STR(FDE) THEN +\n          DO\n            SET &FDECKSW EQ &STR(ON)\n            GOTO LSTCHK3\n          END\n      END\n  END\nIF &STR(&COBP8) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP8)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP8)) EQ &STR(FDE) THEN +\n          DO\n            SET &FDECKSW EQ &STR(ON)\n            GOTO LSTCHK3\n          END\n      END\n  END\nIF &STR(&COBP9) NE &STR() THEN +\n  DO\n    IF &LENGTH(&STR(&COBP9)) GE 3 THEN +\n      DO\n        IF &SUBSTR(1:3,&STR(&COBP9)) EQ &STR(FDE) THEN +\n          DO\n            SET &FDECKSW EQ &STR(ON)\n            GOTO LSTCHK3\n          END\n      END\n  END\nLSTCHK3: +\nSET &SORSWT EQ &STR(OFF)\nIF &STR(&COBP1) NE &STR() THEN +\n  DO\n    IF &STR(&COBP1) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP2) NE &STR() THEN +\n  DO\n    IF &STR(&COBP2) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP3) NE &STR() THEN +\n  DO\n    IF &STR(&COBP3) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP4) NE &STR() THEN +\n  DO\n    IF &STR(&COBP4) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP5) NE &STR() THEN +\n  DO\n    IF &STR(&COBP5) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP6) NE &STR() THEN +\n  DO\n    IF &STR(&COBP6) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&STR(&COBP7)) NE &STR() THEN +\n  DO\n    IF &STR(&STR(&COBP7)) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP8) NE &STR() THEN +\n  DO\n    IF &STR(&COBP8) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nIF &STR(&COBP9) NE &STR() THEN +\n  DO\n    IF &STR(&COBP9) EQ &STR(L120) THEN +\n      DO\n        SET &LISTER EQ &STR(OFF)\n        GOTO ENDLSTCK\n      END\n  END\nENDLSTCK: +\nIF &SYSUT5DS NE &STR() THEN +\n  DO\n    WHATIF DATASET('&SYSUT5DS') CATALOGED\n    IF &LASTCC EQ 0 THEN +\n      DO\n        SET &SYMRC EQ 0\n      END\n    ELSE +\n      DO\n        SET &SYMRC EQ 4\n      END\n  END\nSET &COBOPT EQ &STR()\nIF &SYSUT5DS NE &STR() THEN +\n  SET &COBOPT EQ &STR(&STR(SYMDMP))\nIF &SORSWT EQ &STR(OFF) THEN +\n  DO\n    IF &COBOPT NE &STR() THEN +\n      DO\n        SET &COBOPT EQ &STR(&STR(NOSOURCE,)&STR(&COBOPT))\n      END\n    ELSE +\n      DO\n        SET &COBOPT EQ &STR(&STR(NOSOURCE))\n      END\n  END\nIF &STR(&BCOB) NE &STR() THEN +\n  DO\n    IF &COBOPT NE &STR() THEN +\n      DO\n        SET &COBOPT EQ &STR(&STR(&COBOPT,)&STR(&BCOB))\n      END\n    ELSE +\n      DO\n        SET &COBOPT EQ &STR(&BCOB)\n      END\n  END\nISPEXEC FTOPEN TEMP\nSET &FTOPENRC EQ &LASTCC\nISPEXEC FTINCL COBOL2B\nSET &TESTRC EQ &LASTCC\nISPEXEC VPUT (PRJ1,LIB1,COBT,MEM,BCLA,BCOB) PROFILE\nEXIT\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USERLNK": {"ttr": 1804, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOMSG NOFLUSH NOPROMPT NOLIST\nIF &DEBUG NE &STR() THEN +\n  CONTROL MSG PROMPT CONLIST SYMLIST LIST\nISPEXEC CONTROL ERRORS RETURN\nISPEXEC VGET (ZPREFIX)\nISPEXEC VGET (PRJ1,LIB1,LNKT,MEM,FLNK,FSL1,FSL2) PROFILE\nSET &OTHDSN EQ &STR()\nSET &VSER EQ &STR()\nRESTART: +\nFREE F(SYSUT1)\nFREE F(SYSPRINT,SYSLIB,SYSLIN,SYSLMOD)\nISPEXEC DISPLAY PANEL(LINK3)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nSET &SLIB1 EQ &STR()\nSET &SLIB2 EQ &STR()\nIF &FSL1 NE &STR() THEN +\n  SET &SLIB1 EQ &STR(&STR(')&STR(&FSL1)&STR('))\nIF &FSL2 NE &STR() THEN +\n  SET &SLIB2 EQ &STR(&STR(,)&STR(')&STR(&FSL2)&STR('))\nIF &STR(&SLIB1&SLIB2) NE &STR() THEN +\n  ALLOC F(SYSLIB) DA(&SLIB1&SLIB2) SHR\nIF &OTHDSN NE &STR() THEN +\n  DO\n    SET &UVSER EQ &STR()\n    SET &OTHDSNQ EQ &OTHDSN\n    ISPEXEC VGET (ZPREFIX)\n    IF &ZPREFIX NE &STR() THEN +\n      SET &OTHDSNQ EQ &STR(&ZPREFIX..&OTHDSN)\n    IF &VSER NE &STR() THEN +\n      SET &UVSER EQ &STR(UNIT(SYSALLDA) VOLUME(&VSER) )\n    ALLOC F(SYSLMOD) DA('&OTHDSNQ') SHR &UVSER\n  END\nELSE +\n  ALLOC F(SYSLMOD) DA('&PRJ1..&LIB1..LOAD(&MEM)') SHR\nALLOC F(SYSUT1) UNIT(VIO) SPACE(10 2) CYLINDERS\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSLIN) DA('&PRJ1..&LIB1..&LNKT(&MEM)') SHR\n$ IEWL '&FLNK'\nSET &RC = &LASTCC\nWRITE LINKAGE EDITOR COMPLETED RETURN CODE &RC\nISPEXEC CONTROL DISPLAY REFRESH\nISPEXEC VPUT (PRJ1,LIB1,LNKT,MEM,FLNK,FSL1,FSL2) PROFILE\nFREE F(SYSUT1)\nFREE F(SYSPRINT,SYSLIB,SYSLIN,SYSLMOD)\nALLOC F(SYSPRINT) DA(*)\nALLOC F(SYSUT1) NEW DELETE UNIT(VIO) SPACE(4) CYL\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USERLNKB": {"ttr": 2050, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOMSG NOFLUSH NOPROMPT NOLIST\nIF &DEBUG NE &STR() THEN +\n  CONTROL MSG PROMPT CONLIST SYMLIST LIST\nISPEXEC CONTROL ERRORS RETURN\nISPEXEC VGET (JOB1,JOB2,JOB3,JOB4,Z,ZTEMPF,ZPREFIX) SHARED\nISPEXEC VGET (PRJ1,LIB1,LNKT,BCLA,MEM,FLNK,FSL1,FSL2) PROFILE\nIF &STR(&BCLA) EQ &STR() THEN +\n  SET &BCLA EQ &STR(*)\nIF &STR(&BCLA) EQ &STR( ) THEN +\n  SET &BCLA EQ &STR(*)\nSET &OTHDSN EQ &STR()\nSET &VSER EQ &STR()\nISPEXEC DISPLAY PANEL(LINK3B)\nIF &LASTCC EQ 8 THEN +\n  EXIT\nISPEXEC FTOPEN TEMP\nSET &FTOPENRC EQ &LASTCC\nISPEXEC FTINCL LINK3B\nISPEXEC VPUT (PRJ1,LIB1,LNKT,BCLA,MEM,FLNK,FSL1,FSL2) PROFILE\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USERSELB": {"ttr": 2052, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOMSG NOFLUSH PROMPT\nIF &DEBUG NE &STR() THEN +\n  CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST\nISPEXEC CONTROL ERRORS RETURN\nSET &RC EQ &STR(0)\nSET &POPT EQ &STR(YES)\nISPEXEC VGET (BJC1,BJC2,BJC3,BJC4) PROFILE\nSET &JOB1 EQ &STR(&BJC1)\nSET &JOB2 EQ &STR(&BJC2)\nSET &JOB3 EQ &STR(&BJC3)\nSET &JOB4 EQ &STR(&BJC4)\nISPEXEC VPUT (JOB1,JOB2,JOB3,JOB4,POPT) SHARED\nISPEXEC SELECT PANEL(USERSELB)\nSET &RC EQ &LASTCC\nISPEXEC VGET (JOB1,JOB2,JOB3,JOB4,POPT,ZTEMPF) SHARED\nIF &RC EQ &STR(0) THEN +\n  DO\n    ISPEXEC FTCLOSE\n      IF &LASTCC EQ 8 THEN +\n        DO\n          GOTO GETOUT\n        END\n      ELSE +\n        DO\n          CONTROL MSG\n          SUB '&ZTEMPF'\n          CONTROL NOMSG\n        END\n  END\nELSE +\n  IF &RC EQ &STR(4) THEN +\n    DO\n      IF &STR(&POPT) EQ &STR(CANCEL) THEN +\n        DO\n          GOTO GETOUT\n        END\n      ELSE +\n        DO\n          ISPEXEC FTCLOSE\n          IF &LASTCC EQ 8 THEN +\n            DO\n              GOTO GETOUT\n            END\n          ELSE +\n            DO\n              CONTROL MSG\n              SUB '&ZTEMPF'\n              CONTROL NOMSG\n            END\n        END\n    END\nGETOUT: +\nISPEXEC FTOPEN TEMP\nISPEXEC FTCLOSE\nSET &BJC1 EQ &STR(&JOB1)\nSET &BJC2 EQ &STR(&JOB2)\nSET &BJC3 EQ &STR(&JOB3)\nSET &BJC4 EQ &STR(&JOB4)\nISPEXEC VPUT (BJC1,BJC2,BJC3,BJC4) PROFILE\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCCMD1": {"ttr": 2054, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DEBUG\nCONTROL NOLIST NOFLUSH NOMSG NOPROMPT\nIF &DEBUG NE THEN CONTROL LIST NOFLUSH MSG CONLIST SYMLIST PROMPT\nIF &SYSPREF EQ &STR() THEN DO\n                             SET &DSPRFX EQ &SYSUID\n                           END\nELSE IF &SYSPREF EQ &SYSUID THEN DO\n                                   SET &DSPRFX EQ &SYSUID\n                                 END\nELSE DO\n       SET &DSPRFX EQ &SYSPREF\n     END\nISPEXEC CONTROL ERRORS RETURN\nRESTART:ISPEXEC DISPLAY PANEL(USERVTOC)\nIF &LASTCC = 8 THEN EXIT\nFREE A(FBA)\nFREE F(VTOCOUT)\nSET &LASTCC = 0\nSET &MAXCC = 0\nIF &C1 EQ X THEN SET &HOLD EQ &STR(HOLD)\nIF &C1 NE X THEN SET &HOLD EQ &STR(NOHOLD)\nIF &VOLLIST EQ &STR() THEN SET &VOLLIST EQ &STR(DLXTSO)\nIF &P EQ P THEN DO\n                   SET &LR EQ 133\n                   SET &BLK EQ 19019\n                   SET &DSNLEN EQ &STR(DSNLEN(30))\n                END\n           ELSE DO\n                   SET &LR EQ 151\n                   SET &BLK EQ 19026\n                   SET &DSNLEN EQ &STR()\n                END\nATTR FBA RECFM(F B A) LRECL(&LR) BLKSIZE(&BLK)\nSET &NUM = &SUBSTR(8:8,&SYSTIME)\nALLOC F(VTOCOUT) DA('&DSPRFX..TEMP&NUM..VTOCLIST') CATALOG SPACE(5 2) +\nTRACKS USING(FBA) NEW UNIT(SYSTSO)\nERROR DO\n          DELETE '&DSPRFX..TEMP&NUM..VTOCLIST'\n          EXIT\n      END\nATTN  DO\n          DELETE '&DSPRFX..TEMP&NUM..VTOCLIST'\n      END\nIF &LEVEL NE &STR( ) THEN DO\n                            SET &VLEVEL EQ &STR(LEVEL(&LEVEL))\n                         END\n                    ELSE DO\n                            SET &VLEVEL EQ &STR()\n                         END\nIF &CONTAIN NE &STR( ) THEN DO\n                            SET &VCONTAIN EQ &STR(CONTAINING(&CONTAIN))\n                         END\n                    ELSE DO\n                            SET &VCONTAIN EQ &STR()\n                         END\nIF &ENDING NE &STR( ) THEN DO\n                             SET &VENDING EQ &STR(ENDING(&ENDING))\n                          END\n                     ELSE DO\n                             SET &VENDING EQ &STR()\n                          END\nIF &CAT NE &STR( ) THEN DO\n                         SET &DSNLEN EQ &STR(DSNLEN(35))\n                         SET &VCAT EQ &STR(CAT PRINT(REP,(ACTION,CAT)))\n                       END\n                  ELSE DO\n                         SET &VCAT EQ &STR()\n                       END\nIF &SRTFLDS NE &STR( ) THEN DO\n                          SET &VSRTFLDS EQ &STR(SORT(&SRTFLDS))\n                       END\n                  ELSE DO\n                          SET &VSRTFLDS EQ &STR()\n                       END\nIF &SRTFLDS EQ &STR(NOSORT) THEN DO\n                                    SET &VSRTFLDS EQ &STR(NOSORT)\n                                 END\nSET &VLIMIT EQ &STR()\nSET &VAND1 EQ &STR()\nSET &VAND2 EQ &STR()\nSET &VAND3 EQ &STR()\nIF &KEYWD1 NE &STR( ) THEN +\n    SET &VLIMIT EQ &STR(LIMIT(&STR(&KEYWD1) &STR(&OP1) &STR(&VALUE1)))\nIF &KEYWD2 NE &STR( ) THEN +\n    SET &VAND1 EQ &STR(AND1(&STR(&KEYWD2) &STR(&OP2) &STR(&VALUE2)))\nIF &KEYWD3 NE &STR( ) THEN +\n    SET &VAND2 EQ &STR(AND2(&STR(&KEYWD3) &STR(&OP3) &STR(&VALUE3)))\nIF &KEYWD4 NE &STR( ) THEN +\n    SET &VAND3 EQ &STR(AND3(&STR(&KEYWD4) &STR(&OP4) &STR(&VALUE4)))\nCONTROL MSG PROMPT\nVTOC &VOLLIST HEADING('1 VTOC LIST OF &VOLLIST VOLUME(S)') +\n &VLEVEL +\n &VCONTAIN +\n &VENDING +\n &VCAT +\n &VSRTFLDS +\n &VLIMIT +\n &VAND1 +\n &VAND2 +\n &VAND3 +\n &DSNLEN\nCONTROL NOMSG NOPROMPT\nFREE A(FBA)\nFREE F(VTOCOUT)\nIF &P EQ P THEN DO\n                   FREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\n                   ALLOC F(SYSIN) DUMMY\n                   ALLOC F(SYSPRINT) DUMMY\n                   ALLOC F(SYSUT1) DA('&DSPRFX..TEMP&NUM..VTOCLIST') +\n                                                                 SHR\n                   ALLOC F(SYSUT2) SYS(&C1) &HOLD KEEP\n                END\nIF &P EQ P THEN DO WHILE &N1 NE 0\n                   $ IEBGENER\n                   SET &N1 EQ &N1-1\n                END\n           ELSE DO\n                 ISPEXEC BROWSE DATASET('&DSPRFX..TEMP&NUM..VTOCLIST')\n                END\nIF &P EQ P THEN DO\n                   FREE F(SYSIN,SYSPRINT,SYSUT1,SYSUT2)\n                   ALLOC F(SYSIN) DA(*)\n                   ALLOC F(SYSPRINT) DA(*)\n                   ALLOC F(SYSUT1) NEW DELETE UNIT(VIO) SPACE(4) CYL\n                   ALLOC F(SYSUT2) NEW DELETE UNIT(VIO) SPACE(4) CYL\n                END\nIF &P NE K THEN DO\n                  DELETE '&DSPRFX..TEMP&NUM..VTOCLIST'\n                END\nIF &P EQ K THEN DO\n                  CONTROL MSG\n                  WRITE &DSPRFX..TEMP&NUM..VTOCLIST HAS BEEN SAVED\n                  CONTROL NOMSG\n                END\nERROR OFF\nATTN OFF\nGOTO RESTART\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT101/FILE101.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT101", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}