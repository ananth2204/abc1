{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013145000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 3644732, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE870.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 3644732, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 3644732, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE870.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x008\\x05'", "DS1TRBAL": "b'\\x82('"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x07r\\x00\\x02\\x07u\\x00\\r\\x009'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04T\\x008\\x01\\x12\\x13\\x8f\\x01\\x12\\x13\\x8f\\x01A\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf4@@@'", "ispf": {"version": "04.84", "flags": 0, "createdate": "2012-05-17T00:00:00", "modifydate": "2012-05-17T01:41:38", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-484"}, "text": "REGULAR CBT TAPE - VERSION 484    FILE:  870\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT484.FILE870\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 8 MEMBERS COUNTED; CUMULATIVE SIZE IS 34,173 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/17/12    01:41:38    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$INDEX": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00W\\x01\\x12\\x13o\\x01\\x12\\x13\\x7f\\x11\\x02\\x00\\x0b\\x00\\x04\\x00\\x00\\xe3\\xe4\\xd9\\xd5\\xc2\\xe4\\xd3@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2012-05-15T00:00:00", "modifydate": "2012-05-16T11:02:57", "lines": 11, "newlines": 4, "modlines": 0, "user": "TURNBUL"}, "text": " Member   - Description\n ________   _______________________________________________________\n\n $CONTACT - Contact information\n\n $INSTALL - Describes how to restore the PAX member.\n\n $DOC     - Briefly describes the restored PAX files.\n\n PAX      - PAX backup of scripts that will need to be restored.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE01": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x12\\x13\\x7f\\x01\\x12\\x13\\x7f\\x11\\x15\\x00z\\x00z\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-05-16T00:00:00", "modifydate": "2012-05-16T11:15:26", "lines": 122, "newlines": 122, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  CBT Contribution\nFrom:     \"Turnbull, Rick\" <Rick.Turnbull@StateAuto.com>\nDate:     5/16/2012 8:24 AM\nTo:       \"sbgolob@cbttape.org\" <sbgolob@cbttape.org>\n\nThe attached will eventually restore down to the following REXX\nscripts and Word documents.  These scripts were created to be\nexecuted within a Z/OS HTTP (the default HTTP, not Websphere) USS\nenvironment.  They aid in retrieving and displaying information\nfrom and to the user's browser.  A slightly more detailed\ndescription follows.  The PDS that this XMIT file eventually\nbecomes, will contain the following members:\n\n$$INDEX  - And explanation of the other members\n$CONTACT   a Way to contact me for questions\n$DOC   The information that follows in this email\n$INSTALL   how to restore the PAX member\nPAX  - a PAX file containing the following files\n\nOnce you have executed the $INSTALL instructions, you should be\nable to view several REXX scripts which are briefly discussed in\nthe following:\n\nThese scripts are mainly used within a Z/OS USS (Unix System\nServices) HTTP \"cgi-bin\" environment. I've only used these in the\nstandard default HTTP arena. I have never tried them within\nWebsphere.\n\n------------------------------------------------------------------\n\nGlobalProcessTemplate.sh\n\nThis script provides the ability for a 'cgi-bin' type script to\nprocess HTML, JCL, and email templates with \"File Tailoring\"\nfunctionality that is normally found in an ISPF environment. Such\nas   )SEL and )ENDSEL capability and the like. A more detailed\nexplanation can be found in document \"Script Descriptions.docx\"\nalso located within this same directory.\n\nA variation of this script can be created, that can be used in\nbatch scripts when you don't wish to execute a batch ISPF session\njust to do some file tailoring.\n\n\nGetVariablesFromClient.sh\n\nThe purpose of this script is to process the information that is\nsent from the user's browser, back to the script that is\nidentified in the URL.  When a HTML issues either a \"GET\" or\n\"POST\" request, the URL might be the name of a script such as:\n\n    http://00.000.00.00/cgi-bin/Script01.sh\n\nIf this was a \"POST\" request, variables are returned to\nScript01.sh within a file.  Script01.sh must then retrieve those\nvariables.   It can easily do this by calling\nGetVariablesFromClient.sh. Once GetVariablesFromClient.sh has\nbeen called, all the variables that were in the URL request are\nnow made into REXX variables of the same name.\n\nTo call this script, it is best to just interpret it:\n\n    Interpret 'GetVariablesFromClient'()\n\nIn just one instruction, all the variables that are sent from the\nbrowser are now REXX variables.\n\n\nGlobalXaml01.sh\nGlobalXaml02.sh\n\nThese scripts provide the means to produce an animated bar chart.\nXAML is the language of Silverlight (Microsoft).  XAML is\nMicrosoft's   answer to SVG.  These scripts only produce XAML\n(which is a form of XML) which must then be processed by\nSilverlight.  You can find out   more information about\nSilverlight at http://www.silverlight.net/.   Your browser must\nhave had the Silverlight plug-in installed before you will be\nable to see an animated bar chart function.\n\nXAML Barchart.doc is a Ms-Word document that describes a batch\nversion of these scripts.  More documentation can be found within\nthe scripts  themselves.\n\nThis process can get a little confusing but an animated bar chart\nfrom the mainframe is really, really cool.\n\nYou can learn more about XAML at: http://www.longhorncorner.com\n\n\nScript Descriptions.docx\n\nThis is an Ms-Word document that describes the scripts that you\nshould have restored with the PAX command. To view this document,\nyou  must make it available to your P/C operating system so that\nyou can open it up with MS-Word.  A way of doing this is to FTP\nit (BIN not  ASCII mode) to a drive to which you have access. A\nPDF versions is also provided.\n\n\nXAML Barchart.doc\n\nThis is an Ms-Word document that describes a batch version of the\ntwo XAML scripts.  You'll have to read the comments of the\nscripts themselves to see how differently their process is. The\nbatch version was designed to create a XAML text file, but the\nXAML scripts, that you just restored, are designed to be executed\nwithin a web environment. The inputs are pretty must the same,\nbut are different in how they are presented to the script. A PDF\nversion is also provided.\n\n\nRichard C. Turnbull\nSr. Systems Programmer\nMainframe Web Master\n2955 N. Meridian St.\nIndianapolis, Indiana 46208-4788\nWork: 317-931-7416 * Cell: 317-514-4683\nWork: Rick.Turnbull@StateAuto.com\nHome: RickTurnbull512@Hotmail.com\nText: 3175144683@messaging.sprintpcs.com\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$CONTACT": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00C\\x01\\x12\\x13o\\x01\\x12\\x13o\\x11\\x02\\x00\\x04\\x00\\x04\\x00\\x00\\xe3\\xe4\\xd9\\xd5\\xc2\\xe4\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-05-15T00:00:00", "modifydate": "2012-05-15T11:02:43", "lines": 4, "newlines": 4, "modlines": 0, "user": "TURNBUL"}, "text": "You may contact me at:\n\n Rick.Turnbull@StateAuto.com\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$DOC": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00Y\\x01\\x12\\x13o\\x01\\x12\\x13o\\x13\\x02\\x00W\\x00\"\\x00M\\xe3\\xe4\\xd9\\xd5\\xc2\\xe4\\xd3@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2012-05-15T00:00:00", "modifydate": "2012-05-15T13:02:59", "lines": 87, "newlines": 34, "modlines": 77, "user": "TURNBUL"}, "text": "Once you have executed the $INSTALL instructions, you should be able to\nview several REXX scripts which are briefly discussed in the following:\n\nThese scripts are mainly used within a Z/OS USS (Unix System Services)\nHTTP \"cgi-bin\" environment. I've only used these in the standard\ndefault HTTP arena. I have never tried them within Websphere.\n\n------------------------------------------------------------------------\n\nGlobalEnvironmentVariables.txt\n\n  An example of the file that ReadEnvironmentVariables.sh initally\n  reads.\n\nGlobalProcessTemplate.sh\n\n  This script provides the ability for a 'cgi-bin' type script to\n  process HTML, JCL, and email templates with \"File Tailoring\"\n  functionality that is normally found in an ISPF environment. Such as\n  )SEL and )ENDSEL capability and the like. A more detailed explantion\n  can be found in document \"Script Descriptions.docx\" also\n  located within this same directory.\n\n  A variation of this script can be created, that can be used in\n  batch scripts when you don't wish to execute a batch ISPF session\n  just to do some file tailoring.\n\nGetVariablesFromClient.sh\n\n  The purpose of this script is to process the information that is\n  sent from the user's browser, back to the script that is identified\n  in the URL.  When a HTML issues either a \"GET\" or \"POST\" request,\n  the URL might be the name of a script such as:\n\n    http://00.000.00.00/cgi-bin/Script01.sh\n\n  If this was a \"POST\" request, variables are returned to Script01.sh\n  within a file.  Script01.sh must then retrieve those variables.\n  It can easily to this by calling GetVariablesFromClient.sh. Once\n  GetVariablesFromClient.sh has been called, all the variables that\n  were in the URL request are now made into REXX variables of the\n  same name.\n\n  To call this script, it is best to to just interpret it:\n\n    Interpret 'GetVariablesFromClient'()\n\n  In just one instruction, all the variables that are sent from the\n  browser are now REXX variables.\n\nGlobalXaml01.sh\nGlobalXaml02.sh\n\n  These scripts provide the means to produce an animated barchart. XAML\n  is the language of SilverLight (MicroSoft).  XAML is Microsoft's\n  answer to SVG.  These scripts only produce XAML (which is a form of\n  XML) which must then be processed by SilverLight.  You can find out\n  more information about SilverLight at http://www.silverlight.net/.\n  Your browser must have had the SilverLight plugin installed before you\n  will be able to see an animated barchart function.\n\n  Member $XAML is a Ms-Word document that describes a batch version of\n  these scripts.  More documentation can be found within the scripts\n  themselves.\n\n  This process can get a little confussing but an animated barchart\n  from the mainframe is really, really cool.\n\n  You can learn more about XAML at: http://www.longhorncorner.com/6/34/\n\nScript Descriptions.docx\n\n  This is an Ms-Word document that describes the scripts that you\n  should have restored with the PAX command. To view this document, you\n  must make it available to your P/C operating system so that you can\n  open it up with MS-Word.  A way of doing this is to FTP it (BIN not\n  ASCII mode) to a drive to which you have access.\n\nXAML Barchart.doc\n\n  This is an Ms-Word document that describes a batch version of the\n  two XAML scripts.  You'll have to read the comments of the scripts\n  themselves to see how differently their process is. The batch version\n  was designed to create a XAML text file, but the XAML scripts,that you\n  just restored,are designed to be executed within a web environment.\n  The inputs are pretty must the same, but are different in how they\n  are presented to the script.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$INSTALL": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00I\\x01\\x12\\x13o\\x01\\x12\\x13\\x7f\\x11\\x05\\x00\\x17\\x00\\x16\\x00\\x00\\xe3\\xe4\\xd9\\xd5\\xc2\\xe4\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2012-05-15T00:00:00", "modifydate": "2012-05-16T11:05:49", "lines": 23, "newlines": 22, "modlines": 0, "user": "TURNBUL"}, "text": "The member PAX contains the REXX scripts (and a few other files).\nMember PAX is in the format of a PAX backup, therefore you will need to\nissue a PAX command (while in OMVS) to perform the restore. Just follow\nthese instructions:\n\n 1) Enter into OMVS. This can be done from ISPF by issuing the command\n    of \"TSO OMVS\" or from the =6 utility screen and issuing \"OMVS\".\n\n 2) Get to the folder to where you initally plan to restore these files.\n    It doen't have to be your final destination, just maybe a temporary\n    folder. You get to this folder by issuing the UNIX \"CD\" command.\n    For example:\n\n      CD /usr/lpp/internet/server_root/cgi-bin\n\n 3) Once you mavigate to your desired folder, issue the UNIX PAX command\n    that will restore the files that are contained in member PAX. An\n    example of this command is:\n\n      pax -tvz -rf\"//'name.of.this.pds(PAX)'\"\n\n    This command must be executed while in an OMVS session.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE870": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04T\\x003\\x01\\x12\\x13\\x8f\\x01\\x12\\x13\\x8f\\x01A\\x00-\\x00-\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf4@@@'", "ispf": {"version": "04.84", "flags": 0, "createdate": "2012-05-17T00:00:00", "modifydate": "2012-05-17T01:41:33", "lines": 45, "newlines": 45, "modlines": 0, "user": "CBT-484"}, "text": "//***FILE 870 is from Rick Turnbull and contains a collection of    *   FILE 870\n//*           REXX scripts designed to execute from the z/OS HTTP   *   FILE 870\n//*           environment under OMVS.  They aid in retrieving       *   FILE 870\n//*           information from and to the user's browser.           *   FILE 870\n//*                                                                 *   FILE 870\n//*     Better explanation:                                         *   FILE 870\n//*                                                                 *   FILE 870\n//*     HTTP scripts that aid in WEB page presentation, \"Get\"       *   FILE 870\n//*     and \"POST\" variable retrieval, and animated bar chart       *   FILE 870\n//*     creation.  Provides for \"File Tailoring\" functionality      *   FILE 870\n//*     much like that is found in ISPF.  Easily submit a job,      *   FILE 870\n//*     display a web page, or send out an email with ease from     *   FILE 870\n//*     a \"cgi-bin\" script using pre-written templates.  Create     *   FILE 870\n//*     a bar chart using Microsoft's Silverlight browser           *   FILE 870\n//*     plug-in.                                                    *   FILE 870\n//*                                                                 *   FILE 870\n//*     email:  Rick.Turnbull@StateAuto.com                         *   FILE 870\n//*             RickTurnbull512@Hotmail.com                         *   FILE 870\n//*                                                                 *   FILE 870\n//*     Notes:  See member $$NOTE01.                                *   FILE 870\n//*                                                                 *   FILE 870\n//*     The attached will eventually restore down to the            *   FILE 870\n//*     following REXX scripts and Word documents.  These           *   FILE 870\n//*     scripts were created to be executed within a Z/OS HTTP      *   FILE 870\n//*     (the default HTTP, not Websphere) USS environment.  They    *   FILE 870\n//*     aid in retrieving and displaying information from and to    *   FILE 870\n//*     the user's browser.  A slightly more detailed               *   FILE 870\n//*     description follows.  The PDS for this file, will           *   FILE 870\n//*     contain the following members:                              *   FILE 870\n//*                                                                 *   FILE 870\n//*     $$INDEX  - An explanation of the other members              *   FILE 870\n//*     $CONTACT - A Way to contact me for questions                *   FILE 870\n//*     $DOC     - The information that follows in this email       *   FILE 870\n//*     $INSTALL - How to restore the PAX member                    *   FILE 870\n//*     PAX      - A PAX file containing the included files         *   FILE 870\n//*                                                                 *   FILE 870\n//*     Once you have executed the $INSTALL instructions, you       *   FILE 870\n//*     should be able to view several REXX scripts which are       *   FILE 870\n//*     briefly discussed in the member $$NOTE01.                   *   FILE 870\n//*                                                                 *   FILE 870\n//*     These scripts are mainly used within a Z/OS USS (Unix       *   FILE 870\n//*     System Services) HTTP \"cgi-bin\" environment. I've only      *   FILE 870\n//*     used these in the standard default HTTP arena. I have       *   FILE 870\n//*     never tried them within Websphere.                          *   FILE 870\n//*                                                                 *   FILE 870\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PAX": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x12\\x13o\\x01\\x12\\x13o\\x132\\x84M\\x84M\\x00\\x00\\xe3\\xe4\\xd9\\xd5\\xc2\\xe4\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-05-15T00:00:00", "modifydate": "2012-05-15T13:32:44", "lines": 33869, "newlines": 33869, "modlines": 0, "user": "TURNBUL"}, "mimetype": "application/x-compress", "datatype": "binary", "extension": ".x-compress"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT870/FILE870.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT870", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}