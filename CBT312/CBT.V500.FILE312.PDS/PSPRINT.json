{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20150430201052000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 27920, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "SBGOLOB.FILE312.PSPRINT", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"SBGOLOB.FILE312.PSPRINT": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27920, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 1113, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "150120", "DS1SCEXT": "b'\\x80m\\x10'", "DS1SCALO": "b'P\\x00\\x00\\x02'", "DS1LSTAR": "b'\\x00\\x01\\n'", "DS1TRBAL": "b'\\x89v'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x1b \\x00\\x04\\x99\\xc0`'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x1b \\x00\\x04\\x99\\xc0`'", "b'X\\xf5\\x17\\xc8\\x00\\x00\\x00\\xd6\\x00\\x04\\x00\\xd6\\x00\\x06\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC": {"ttr": 261, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00C\\x00\\x99\\x06\\x8f\\x01\\x15\\x12\\x0f\\x16\\x04\\x00\\x15\\x00\\x1b\\x00\\x00\\xd3\\xc2\\xc4\\xe8\\xc3\\xd2@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1999-03-09T00:00:00", "modifydate": "2015-04-30T16:04:43", "lines": 21, "newlines": 27, "modlines": 0, "user": "LBDYCK"}, "text": "This dataset contains an ISPF dialog:\n\nPSPRINT  - used to format host output for printing on a PostScript\n           printer and then invoke LPRPRINT.  Options include\n           Portrait, Landscape, and 2UP printing.\n\nThe members of this dataset are in IEBUPDTE format.\n\n$DOC     - What you are reading\nEXEC     - The above rexx exec which is the entry point to the dialogs\nMSGS     - ISPF messages\nPANELS   - ISPF panels, including brief tutorials, for these dialogs\n\nNo warranty comes with these dialogs - use them at your own risk.  They\nmay require customization to work in your environment.\n\nComments, suggestion, and an occasional (not too many) complaints are\nwelcome to the author:\n\nLionel B. Dyck\ne-mail: lbdyck@gmail.com\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EXEC": {"ttr": 8, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x15\\x12\\x0f\\x01\\x15\\x12\\x0f\\x15@\\x01i\\x01i\\x00\\x00\\xd3\\xc2\\xc4\\xe8\\xc3\\xd2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-30T00:00:00", "modifydate": "2015-04-30T15:40:10", "lines": 361, "newlines": 361, "modlines": 0, "user": "LBDYCK"}, "text": "./ ADD NAME=PSPRINT\n        /* ---------------------  rexx procedure  ---------------------- *\n         * Name:      PSPRINT                                            *\n         *                                                               *\n         * Function:  Convert a text file into a PostScript print        *\n         *            stream.                                            *\n         *                                                               *\n         * Syntax:    %PSPRINT input-file output-file / options          *\n         *                                                               *\n         * where:                                                        *\n         *        input-file is the data set name of the input text file *\n         *        output-file is optional and is the data set name that  *\n         *           will contain the postscript results.                *\n         *           - if not specified this is dynamically generated.   *\n         *           - if specified the output file will not be deleted  *\n         *             at the end of processing.                         *\n         *           - if specified as @ then the ISPF dialog will be    *\n         *             invoked for additional prompting.                 *\n         *       / is the delimeter used to offset the options           *\n         *       options are optional values which may be:               *\n         *           PORT, WIDE, LAND, or 2UP for print orientation      *\n         *           DEBUG to cause tracing of the rexx program          *\n         *             during execution                                  *\n         *           NOLPR to prevent the execution of the LPRPRINT exec.*\n         *                                                               *\n         * If no parameters are entered then the ISPF Dialog is invoked. *\n         *                                                               *\n         * Defaults:                                                     *\n         *            PORT orientation and delete the output file after  *\n         *            invoking the lprprint procedure.                   *\n         *                                                               *\n         * Author:    Lionel B. Dyck                                     *\n         *            Rockwell International                             *\n         *            P.O. Box 2515                                      *\n         *            Seal Beach, California 90740                       *\n         *            (310) 797-1125                                     *\n         *            IBMMail:  USROKNTN                                 *\n         *            Internet: lbd@osreq48.rockwell.com                 *\n         *            IBMLINK:  ROK2027                                  *\n         *                                                               *\n         * History:                                                      *\n         *           02/22/96 - display dialog even if dsname provided   *\n         *           09/26/94 - minor bug fix in parse                   *\n         *           09/02/94 - Reset LPRPRINT lprps to no               *\n         *           08/25/94 - Fix test for options                     *\n         *           04/27/94 - Add prompt option                        *\n         *           01/26/94 - updated to support non-ISPF usage        *\n         *           01/20/94 - created for TSO/ISPF                     *\n         *                                                               *\n         * Originally based upon the PSPRINT.cmd                         *\n         * Written by Michael Perks (10/31/92)                           *\n         * (c) Copyright IBM Corp. 1992 All Rights Reserved              *\n         * modified to allow an option of lptn                           *\n         *                                                               *\n         * modified to run under MVS TSO/E by Lionel Dyck                *\n         * to use PostScript programming by Carl J. Lydick               *\n         * of CalTech picked up from comp.lang.postscript.               *\n         *                                                               *\n         * This eliminates the calculation of line placement and         *\n         * page ejects and provides the following options:               *\n         *                                                               *\n         * PORT -  Portrait 80 characters by 60 lines in 11 pt. Courier  *\n         * WIDE -  Portrait 132 characters by 103 lines in 6 pt. Courier *\n         * LAND -  Landscape 132 characters by 60 lines in 9 pt. Courier *\n         * 2UP  -  2 pages 80 characters by 66 lines side by side        *\n         *         in landscape in 6 pt. Courier                         *\n         *                                                               *\n         * ------------------------------------------------------------- */\n\n        parse arg psinds outname \"/\" options\n\n        outname = translate(strip(outname))\n\n        if length(psinds) >= 0 then prompt = 1\n        if outname        = \"@\" then prompt = 1\n           else if length(outname) > 0 then prompt = 0\n        if length(options) > 0 then prompt = 0\n\n        cmd = sysvar(\"sysicmd\")\n        spf = sysvar(\"sysispf\")\n\n        if prompt = 1 then do forever\n           if spf <> \"ACTIVE\" then do\n              say cmd\": Not running under ISPF and no parameters specified\"\n              say cmd\": terminating - review the documentation and retry.\"\n              exit 8\n              end\n           Address ISPEXEC\n           \"Display Panel(PSPRINT)\"\n           if rc > 3 then exit\n           if lpr = \"No\" then lpr = \"NOLPR\"\n                         else lpr = \"\"\n           if \"OK\" <> sysdsn(psinds) then do\n               smsg = \"Error\"\n               lmsg = sysdsn(psinds)\n               \"Vput (Smsg Lmsg)\"\n               \"Setmsg Msg(Pspr002)\"\n                end\n           else call test_pds\n        end\n\n        if length(options) > 0 then\n           options = translate(options)\n\n        /* test options for debug */\n        if wordpos(\"DEBUG\",options) > 1 then do\n           trace \"?i\"\n           x = wordpos(\"DEBUG\",options)\n           new_opt = delword(options,x,1)\n           options = new_opt\n           end\n\n        /* test options for nolpr */\n        if wordpos(\"NOLPR\",options) > 1 then do\n           no_lpr = \"on\"\n           no_del = \"on\"\n           x = wordpos(\"NOLPR\",options)\n           new_opt = delword(options,x,1)\n           options = new_opt\n           end\n\n        if spf <> \"ACTIVE\" then no_lpr = \"on\"\n\n        if length(outname) = 0 then do\n           d = date(u)\n           date = substr(d,7,2)substr(d,1,2)substr(d,4,2)\n           s = time(\"L\")  /* get the current time hh:mm:ss.th */\n           t = substr(s,1,2)substr(s,4,2)substr(s,7,2)substr(s,10,1)\n           prefix = sysvar(syspref)\n           pscript_dsn = \"'\"prefix\".pscript.D\"date\".T\"t\".ps'\"\n           end\n        else do\n             pscript_dsn = outname\n             no_del = \"on\"\n             end\n\n        out. = \"\"\n\n        Select\n          When options = \"PORT\" then call do_port\n          When options = \"WIDE\" then call do_wide\n          When options = \"LAND\" then call do_land\n          When options = \"2UP\"  then call do_2up\n          Otherwise call do_port\n          end\n\n        /* test the existence of the input data set */\n        if \"OK\" <> sysdsn(psinds) then\n        do\n            smsg = \"Error\"\n            lmsg = sysdsn(psinds)\n            call do_msg\n            exit\n        end\n\n        x = listdsi(psinds)\n        if pos(\"(\",psinds) > 0 then sysdsorg = \"PS\"\n        if sysdsorg = \"PO\" then do\n           if spf <> \"ACTIVE\" then do\n              say cmd\": Has specified a partitioned data set:\",\n                        psinds\n              say cmd\": which is not supported by this command\",\n                     \"outside of the ISPF enviornment.\"\n              say cmd\": Terminating processing.  Specify a member\",\n                     \"name and retry.\"\n              exit\n              end\n           Address ISPEXEC\n           call do_pds\n           exit\n           end\n\n        /* generate a ddname and dynamically allocate the output\n           data set. */\n        pscript_odd = \"PSXO\"random()\n        \"Alloc f(\"pscript_odd\") ds(\"pscript_dsn\") New Spa(30,30) Tr\",\n              \"Recfm(V B) Lrecl(255) Blksize(0) Dsorg(PS)\"\n\n        /* read each line, quote characters and then output */\n        pscript_idd = \"PSXi\"random()\n        \"Alloc f(\"pscript_idd\") ds(\"psinds\") Shr\"\n        \"Execio * diskr\" pscript_idd \"(Finis stem in.\"\n        \"Free f(\"pscript_idd\")\"\n\n        \"Execio * diskw\" pscript_odd \"(stem out.\"\n        \"Execio * diskw\" pscript_odd \"(Finis stem in.\"\n        \"Free f(\"pscript_odd\")\"\n\n        drop out. in.\n\n        if no_lpr <> \"on\" then do\n          if spf = \"ACTIVE\" then do\n             Address ISPEXEC \"Vget (lprps) Profile\"\n             hold_lprps = lprps\n             lprps = \"No\"\n             Address ISPEXEC \"Vput (lprps) Profile\"\n             end\n          \"%lprprint\" pscript_dsn\n          lprps = hold_lprps\n          if spf = \"ACTIVE\" then\n             Address ISPEXEC \"Vput (lprps) Profile\"\n          end\n\n        x = msg(\"OFF\")\n        if no_del <> \"on\" then\n          \"Delete\" pscript_dsn\n          else do\n            smsg = \"\"\n            lmsg = \"Output dsname is:\" pscript_dsn\n            call do_msg\n            end\n\n        exit\n\n        do_msg:\n            if spf = \"ACTIVE\" then do\n               Address ISPEXEC\n               \"Vput (Smsg Lmsg)\"\n               \"Setmsg Msg(Pspr002)\"\n               end\n            else do\n                 say smsg\n                 say lmsg\n                 end\n            return\n\n        do_port:\n\n        do_port:\n        out.1 = \"%!PS-Adobe-1.0\"\n        out.2 = \"%%Creator: Carl J Lydick\"\n        out.3 = \"%%DocumentFonts: Courier\"\n        out.4 = \"%%Pages: (atend)\"\n        out.5 = \"/Courier findfont 11 scalefont setfont\"\n        out.6 = \"/P {showpage /H 750 def} def\"\n        out.7 = \"/Q { 36 H moveto dup length 80 gt {0 80 getinterval}\",\n                \" if show /H H 12 sub def\"\n        out.8 = \"   H 30 le {P} if} def\"\n        out.9 = \"/R 0 def\"\n        out.10 = \"/S 512 string def\"\n        out.11 = '/T {(\", FF, \") search {R 0 ne {Q pop P} {pop pop /R 1 def}',\n                \" ifelse T} if} def\"\n        out.12 = \"/L {/H 750 def {currentfile S readline not {exit} if T Q}\",\n                \" loop showpage} def\"\n        out.13 = \"L\"\n        out.0 = 13\n        return\n\n        do_wide:\n        out.1 = \"%!PS-Adobe-1.0\"\n        out.2 = \"%%Creator: Carl J Lydick\"\n        out.3 = \"%%DocumentFonts: Courier\"\n        out.4 = \"%%Pages: (atend)\"\n        out.5 = \"/Courier findfont 6 scalefont setfont\"\n        out.6 = \"/P {showpage /H 750 def} def\"\n        out.7 = \"/Q { 36 H moveto dup length 132 gt {0 132 getinterval}\",\n                \" if show /H H 7 sub def\"\n        out.8 = \"   H 30 le {P} if} def\"\n        out.9 = \"/R 0 def\"\n        out.10 = \"/S 512 string def\"\n        out.11 = '/T {(\", FF, \") search {R 0 ne {Q pop P}',\n                 \" {pop pop /R 1 def} ifelse T} if} def\"\n        out.12 = \"/L {/H 750 def {currentfile S readline not\",\n                 \" {exit} if T Q} loop showpage} def\"\n        out.13 = \"L\"\n        out.0 = 13\n        return\n\n        do_land:\n        out.1 = \"%!PS-Adobe-1.0\"\n        out.2 = \"%%Creator: Carl J Lydick\"\n        out.3 = \"%%DocumentFonts: Courier\"\n        out.4 = \"%%Pages: (atend)\"\n        out.5 = \"/Courier findfont 9 scalefont setfont\"\n        out.6 = \"/P {showpage 90 rotate 0 -618 translate /H 594 def} def\"\n        out.7 = \"/Q {36 H moveto dup length 132 gt {0 132 getinterval}\",\n                \" if show /H H 9.5 sub def\"\n        out.8 = \"    H 30 le {P} if} def\"\n        out.9 = \"/R 0 def\"\n        out.10 = \"/S 512 string def\"\n        out.11 = '/T {(\", FF, \") search {R 0 ne {Q pop P}',\n                 \" {pop pop /R 1 def} ifelse T} if} def\"\n        out.12 = \"/L {90 rotate 0 -618 translate /H 594 def\",\n                 \" {currentfile S readline not {exit} if\"\n        out.13 = \" T Q} loop showpage} def\"\n        out.14 = \"L\"\n        out.0 = 14\n        return\n\n        do_2up:\n        out.1 = \"%!PS-Adobe-1.0\"\n        out.2 = \"%%Creator: Carl J Lydick\"\n        out.3 = \"%%DocumentFonts: Courier\"\n        out.4 = \"%%Pages: (atend)\"\n        out.5 = \"/Courier findfont 6 scalefont setfont\"\n        out.6 = \"/N {showpage 90 rotate 0 -618 translate /H 538\",\n                \" def /V 71 def} def\"\n        out.7 = \"/O {/H 538 def /V 431 def} def\"\n        out.8 = \"/P {V 431 ne {O} {N} ifelse} def\"\n        out.9 = \"/Q { V H moveto dup length 80 gt {0 80 getinterval}\",\n                \" if show /H H 7 sub def\"\n        out.10 = \"   H 79 le {P} if} def\"\n        out.11 = \"/R 0 def\"\n        out.12 = \"/S 512 string def\"\n        out.13 = '/T {(\", FF, \") search {R 0 ne {Q pop P} {pop pop',\n                 \" /R 1 def} ifelse T} if} def\"\n        out.14 = \"/L {90 rotate 0 -618 translate /H 538 def /V 71 def\"\n        out.15 = \"   {currentfile S readline not {exit} if T Q}\",\n                 \" loop showpage} def\"\n        out.16 = \"L\"\n        out.0 = 16\n        return\n\n        test_pds:\n              x = listdsi(psinds)\n              if pos(\"(\",psinds) > 0 then sysdsorg = \"PS\"\n              Select\n                When sysdsorg = \"PS\" | pos(\"(\",psinds) > 1\n                     then\n                     \"Select Cmd(%\"cmd  psinds psopds \"/\" pstype lpr \")\"\n                When sysdsorg = \"PO\"\n                     then call do_pds\n                Otherwise nop;\n              end\n        return\n\n        do_pds:\n            \"Lminit Dataid(dataid) Dataset(\"psinds\") Enq(Shrw)\"\n            \"Lmopen Dataid(\"dataid\") Option(Input)\"\n            \"Lmmdisp Dataid(\"dataid\") Option(Display)\",\n              \"Commands(Any) Panel(PsprM)\"\n              do while rc == 0\n                 Call process_selection\n                \"Lmmdisp Dataid(\"dataid\") Option(Get)\"\n                 if rc == 8\n                    then \"Lmmdisp Dataid(\"dataid\") Option(Display)\",\n                         \"Commands(Any) Panel(LPRPM)\"\n              end\n              \"Lmmdisp Dataid(\"dataid\") Option(Free)\"\n              \"Lmclose Dataid(\"dataid\")\"\n              \"Lmfree  Dataid(\"dataid\")\"\n            return\n\n         process_selection:\n            if left(psinds,1) = \"'\"\n               then parse value psinds with \"'\" w_dsn \"'\"\n               else w_dsn = sysvar(\"syspref\")\".\"psinds\n            zlmember = strip(zlmember)\n            Select\n            When zllcmd = \"/\" | zllcmd = \"S\"\n            Then do\n              \"Lmmdisp Dataid(\"dataid\") Option(Put) Member(\"zlmember\")\",\n                  \"Zludata(printed)\"\n              \"Select Cmd(%\"cmd  \"'\"w_dsn\"(\"zlmember\")'\",\n                  psopds \"/\" pstype lpr \")\"\n              end\n            When zllcmd = \"B\"\n            Then \"Browse Dataid(\"dataid\") Member(\"zlmember\")\"\n            Otherwise nop;\n            End\n            return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MSGS": {"ttr": 11, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x15\\x12\\x0f\\x01\\x15\\x12\\x0f\\x15@\\x00\\x07\\x00\\x07\\x00\\x00\\xd3\\xc2\\xc4\\xe8\\xc3\\xd2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-30T00:00:00", "modifydate": "2015-04-30T15:40:44", "lines": 7, "newlines": 7, "modlines": 0, "user": "LBDYCK"}, "text": "./ ADD NAME=PSPR00\nPSPR001\n'Input data set name must be specified and must be a valid dsname'\nPSPR002 '&SMSG' .WINDOW=NORESP .TYPE=NOTIFY\n'&LMSG'\nPSPR003\n'Output data set name, if specified, must be a valid dsname'\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PANELS": {"ttr": 257, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x15\\x12\\x0f\\x01\\x15\\x12\\x0f\\x15C\\x00\\xa0\\x00\\xa0\\x00\\x00\\xd3\\xc2\\xc4\\xe8\\xc3\\xd2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-30T00:00:00", "modifydate": "2015-04-30T15:43:25", "lines": 160, "newlines": 160, "modlines": 0, "user": "LBDYCK"}, "text": "./ ADD NAME=PSPRH0   0100-1994025-1994025-1028-00071-00071-00000-$A1238\n)Attr Default(@+_)\n/* _ type( input) intens(high) caps(on ) just(left )               */\n   ! type(text) intens(high) caps(off) just(asis ) color(white)\n      hilite(reverse)\n   $ type(output) intens(high) caps(off) just(asis ) color(white)\n      hilite(reverse)\n   ` type(text) intens(high) caps(off) just(asis ) color(yellow)\n   ~ type(text) intens(high) caps(off) just(asis ) color(turq)\n   @ type(text) intens(high)\n   + type(text  ) intens(low )\n     skip(on)\n   # area(SCRL) Extend(ON)\n)Body\n+------------------------! Convert Text to PostScript +-------------------------\n@Command ===>_zcmd\n@\n+\n#help -------------------------------------------------------------------------#\n)Area Help\n`    Information on Converting text to PostScript\n~\n~    This ISPF application will convert text data into a data stream that\n~    can be printed on a PostScript printer.\n~\n~    To print this data stream you must send the data to an application\n~    that will convert it from EBCDIC (the MVS character set) to ASCII\n~    and then direct the data stream to a PostScript printer.  The most\n~    common technique for this is to use the LPR TCP/IP TSO command.\n~\n~    The information that is asked for on the panel is:\n~\n`    Input Data Set      ===>\n~\n~    This is the data set name that contains the information that is to be\n~    converted to PostScript.  The format of this field is:\n~\n~              user.data\n~              user.data(member)\n~              'prefix.user.data'\n~\n`    Print Orientation   ===>\n~\n~    This is the orientation of the resulting printed output.  The valid\n~    options are:\n~\n         PORT -  Portrait 80 characters by 60 lines in 11 pt. Courier\n         WIDE -  Portrait 132 characters by 103 lines in 6 pt. Courier\n         LAND -  Landscape 132 characters by 60 lines in 9 pt. Courier\n         2UP  -  2 pages 80 characters by 66 lines side by side\n                 in landscape in 6 pt. Courier\n~\n`    Invoke LPRPRINT     ===>\n~\n~    This allows you to inform the application that the ISPF LPRPRINT Dialog\n~    is not to be automatically invoked.  If`no~is selected then the converted\n~    data stream will be saved into a data set (either the specified output\n~    data set or a dynamically generated data set).\n~\n`    Output Data Set     ===>\n~\n~    This field is optional and defines an output data set into which\n~    the converted PostScript data stream will be stored.\n+\n!Note:`Use the Enter key to just scroll down this tutorial or\n`      Use key $LEFT`to scroll down and key $RIGHT`to scroll up.\n)Init\n  .cursor = zcmd\n  &left  = PFK(LEFT)\n  &right = PFK(RIGHT)\n)Proc\n)end\n./ ADD NAME=PSPRINT  0107-1994025-1996003-1024-00055-00047-00000-SYSLBD\n)Attr\n   @ type( input) intens(high) caps(off) just(left ) pad('_')\n     color(white)\n   ! type( input) intens(high) caps(off) just(left ) color(white)\n   _ type( input) intens(high) caps(on ) just(left ) color(white)\n   \u00ac type(text) intens(low ) caps(off) just(asis ) color(white)\n         hilite(uscore)\n   | type(text) intens(high) caps(off) just(asis ) color(white)\n         hilite(uscore)\n   # type(text) intens(high) caps(on) just(left ) color(yellow)\n         hilite(uscore)\n   ` type(text) intens(high) caps(off) just(asis ) color(turq)\n   ~ type(text) intens(low ) caps(off) just(asis ) color(turq)\n   % type(text) intens(low ) caps(off) just(asis ) color(white)\n)Body\n+------------------------% Convert text to PostScript +-------------------------\n%Command ===>_zcmd\n\n`Enter/Verify:\n`\n`    Input Data Set      %===>_psinds\n%\n`    Print orientation   %===>!pstype+    see list below\n%\n`    Invoke LPRPRINT     %===>!lpr+       Yes or No\n`\n`    Output Data Set     %===>_psopds\n`    (optional)\n`\n`    Valid orientations:\n`          PORT+-  Portrait 80 characters by 60 lines in 11 pt. Courier\n`          WIDE+-  Portrait 132 characters by 103 lines in 6 pt. Courier\n`          LAND+-  Landscape 132 characters by 60 lines in 9 pt. Courier\n`          2UP +-  2 pages 80 characters by 66 lines side by side\n`              +   in landscape in 6 pt. Courier\n)Init\n .HELP = psprh0\n .cursor  = psinds\n &pstype= trans(trunc(&pstype,1)\n            P,Port p,Port L,Land l,Land, W,Wide w,Wide 2,2UP &z,Port)\n &lpr     = trans(trunc(&lp,1) Y,Yes N,No y,Yes n,No &z,Yes)\n)Reinit\n .cursor  = psinds\n &pstype= trans(trunc(&pstype,1)\n            P,Port p,Port L,Land l,Land, W,Wide w,Wide 2,2UP &z,Port)\n &lpr     = trans(trunc(&lp,1) Y,Yes N,No y,Yes n,No &z,Yes *,*)\n)Proc\n &pstype= trans(trunc(&pstype,1) P,Port p,Port L,Land l,Land,\n                                     W,Wide w,Wide 2,2UP &z,Port *,*)\n &lpr     = trans(trunc(&lp,1) Y,Yes N,No y,Yes n,No &z,Yes *,*)\n ver (&psinds,nonblank,dsname,msg=pspr001)\n ver (&pstype,nb,list,Port,Land,Wide,2UP)\n ver (&lpr,nb,list,Yes,No)\n ver (&psopds,dsname,msg=pspr003)\n)End\n./ ADD NAME=PSPRM    0101-1994013-1994018-0732-00031-00030-00000-$A1238\n)ATTR\n  _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH)\n  | AREA(DYNAMIC) SCROLL(ON) EXTEND(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  \u00a2 TYPE(OUTPUT) INTENS(HIGH) JUST(RIGHT) PAD(0)\n 01 TYPE(DATAIN) INTENS(HIGH) CAPS(ON)\n 02 TYPE(DATAOUT) INTENS(LOW)\n 03 TYPE(DATAIN)  INTENS(HIGH) CAPS(ON)\n 04 TYPE(DATAOUT)  INTENS(LOW)\n 05 TYPE(DATAOUT)  INTENS(HIGH)\n 06 TYPE(DATAOUT)  INTENS(LOW)\n)BODY WIDTH(80)\n%Member List -- &ZDSN --------------------------------------%ROW\u00a2ZMLCR%OF\u00a2ZMLTR+\n%Command ===>_ZCMD                                            %Scroll ===>_Z   +\n%Commands:      LOCATE, RESET, SELECT, SORT, HELP                              +\n%Line commands: / or S = Select, B = Browse                                    +\n&ZMLCOLS\n|ZDATA ------------------------------------------------------------------------|\n|                                                                              |\n| -----------------------------------------------------------------------------|\n)INIT\n  .ZVARS = 'ZSCML'         /* SCROLL AMT VARIABLE NAME  */\n  .HELP = ISR01130\n)PROC\n  VPUT (ZSCML) PROFILE\n)END\n /*  $M1= MEMLIST   M230     860923   158590 : FUNCTION TEST          */\n /*   PTM00000184                                                     */\n /*                                                                   */\n /*   CHANGED 3 LINES                                            3@M1C*/\n/* 5665-402 (C) COPYRIGHT IBM CORP 1980, 1989 */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT312/CBT.V500.FILE312.PDS/PSPRINT.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT312/CBT.V500.FILE312.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}