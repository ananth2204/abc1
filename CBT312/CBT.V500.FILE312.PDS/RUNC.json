{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SLBD", "INMTNODE": "X", "INMTUID": "Y", "INMFTIME": "20200730111539000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1022361, "INMDSORG": "PO", "INMTYPE": "Data Library", "INMLRECL": 80, "INMBLKSZ": 32720, "INMRECFM": "FB", "INMDIR": 1, "INMDSNAM": "SLBD.RUNC.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1022361, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1022361, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"SLBD.RUNC.PDS": {"COPYR1": {"type": "PDSE", "DS1DSORG": 512, "DS1BLKL": 32720, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 8, "DVACLASS": 32, "DVAUNIT": 0, "DVAMAXRC": 32760, "DVACYL": 256, "DVATRK": 256, "DVATRKLN": 65535, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "b'\\x00\\x14\\xb8H\\x00\\x00\\x00\\x00\\x00\\x00\\x00~\\x00\\xff\\x7f\\x00'", "b'\\x00\\x14\\xb8H\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\xfd\\x00\\xff\\x7f\\x00'", "b'\\x00\\x14\\xb8H\\x00\\x00\\x00\\xfe\\x00\\x00\\x00\\xff\\x00\\xff\\x02\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC": {"ttr": 9, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x01\\x17\\x01\\x1f\\x01 \\x03o\\x14)\\x00R\\x00@\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "2017-01-11T00:00:00", "modifydate": "2020-02-05T14:29:00", "lines": 82, "newlines": 64, "modlines": 0, "user": "RUNC"}, "text": "RUNC is an ISPF Edit macro that will invoke TSO, ISPF, (E)JES, SDSF, and\nTSO Console commands that are imbedded within the active EDIT or View\ndata.\n\nERC is provided as a sample command that can be implemented in the site ISPF\ncommand table. ERC will prompt the first time used for the dataset name of the\ncommands dataset and then open that dataset. This is a fast path to the\ncommands.\n\n   Members:\n\n      $DOC     - this member\n      $ERCDOC  - doc on how to use the ERC command\n      $RUNCLOG - How to use the %RUNCLOG command\n      $USERDOC - doc to help the end user\n      JUST$FUN - short article about RUNC\n      EKKO     - Assembler source for EKKO\n      EKKO$    - JCL to assemble and link EKKO\n      EKKOH    - TSO Help member for EKKO\n      LICENSE  - GPL License\n      SUPPORT  - Statement of Support\n      TESTRUNC - Sample exec to test RUNC\n\nInstallation:\n\nImplementation:\n   1. Copy the  EXEC members into your SYSEXEC (or SYSPROC) library\n   2. Copy the  PANELS members into your ISPPLIB library\n   3. Receive the LOAD.XMIT dataset to create a LOAD library\n   4. Optional: Copy the LOAD member EKKO into your ISPLLIB, STEPLIB, or\n      Linklist library (see info on EKKO below)\n      - *IF* using EKKO then edit the RUNC exec to change the rputl\n        variable as documented in the code to use EKKO instead of the\n        %RUNCPUTL exec\n   5. Optional: If using EKKO then copy EKKOH into your SYSHELP\n      dataset as EKKO. This is the TSO Help member.\n   6. Test with the TESTRUNC exec\n      Does altlib/libdef and invokes ISPF edit on a dataset to\n      allow testing/validation of RUNC.\n\nDependencies:\n   1. STEMEDIT from CBTTape.org File 183 is required for RUNC to be used.\n      Download and install.\n      *or*\n      Use the version of the STEMEDIT load module included in the\n      Load library distributed with this package.\n\nRUNCPUTL not required if the EKKO command is used.\n\nIf using the EKKO command:\n - copy the EKKOH member into your installation local HELP PDS as EKKO.\n - Use member EKKO$ JCL to assemble and linkedit the EKKO command into\n   a load library. The library can be in either Linklist, a Steplib, or\n   an ISPLLIB library.\n\nCopy the SAMPLES members into a new PDS that will be the location for\nyour sample command members that you can share with your users. The PDS\ncan be RECFM=FB LRECL=80 or RECFM=VB LRECL=255 - your choice.  Using ERC\nfor the shared command PDS is acceptable and will, by default, open the\ncommand PDS, or member, using ISPF View. This allows multiple users of\nthe same data without enabling Edit capabilities.\n\nNOTE: the RUNCPUTL works but is not as efficient as a real TSO command.\n      Thus RUNC allows the installation to change the customization\n      variable RPUTL from %runcputl to ekko.  EKKO is a TSO command\n      included in this package (thanks to Sam Golob for pointing me to\n      it).  EKKO does the same thing as RUNCPUTL but using assembler\n      code so it is more efficient. This will be obvious if large\n      amounts of data are captured during the command execution.\n\n      The Log dataset type is also a customization value in the RUNC\n      exec.  Find *custom* and change the logtype as documented in the\n      code.\n\nUpdate your ISPCMDS ISPF Command Table to add ERC:\n\n     Verb:    ERC\n     Trunc:   0\n     Action:  SELECT CMD(%ERC &ZPARM) NEWAPPL(ISR)\n     Desc:    Edit RUNC Command Dataset\n\nUsage:  See $USERDOC\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$ERCDOC": {"ttr": 11, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x02\\x00\\x01\\x162/\\x01\\x164O\\x067\\x00&\\x00\\x1a\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.03", "flags": 2, "createdate": "2016-11-17T00:00:00", "modifydate": "2016-12-09T06:37:00", "lines": 38, "newlines": 26, "modlines": 0, "user": "RUNC"}, "text": "The ERC command is an optional command that will open a dataset that is\ndefined with members containing commands in ISPF View (or Edit)\n\nERC must have been installed and be defined in the ISPF command table so\nthat it can be entered on any ISPF command line.\n\nThe first time the ERC command is used the user will be presented with\nan ISPF panel to enter the dataset name where the user has members with\ncommands.\n\nSyntax is:   ERC\n             ERC member-name          (e.g. ABC)\n             ERC member-name-mask     (e.g. AB*, %BC, A%C)\n             ERC /SET\n             ERC -E member-name       (e.g. ABC)\n             ERC ?\n\nWhen entered with a ? then a short ISPF tutorial will be presented.\n\nWhen entered without a member-name then the command dataset will be\nopened in ISPF Edit or View.\n\nWhen a member-name is specified then that member is opened in ISPF Edit\nor View.\n\nWhen a member-name-mask is used then only those members that match the\nmask will be presented in the member list of ISPF Edit. The mask must\nconform to the ISPF Edit mask ( % and * )\n\nWhen the /SET is specified the user will be presented with a ISPF Panel\nto change or define the command dataset.\n\nWhen the -E option is used then the command dataset is opened in ISPF Edit.\n\nThe reason for using View as the default is to allow a shared command dataset.\n\nIf the command dataset is prefixed with the active users userid then the\ndefault action will be Edit instead of View.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$RUNCLOG": {"ttr": 13, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x02\\x00\\x01\\x17\\x02o\\x01\\x17\\x02o\\x13\\x06\\x00\\x07\\x00\\x07\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.00", "flags": 2, "createdate": "2017-01-26T00:00:00", "modifydate": "2017-01-26T13:06:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "RUNC"}, "text": "RUNCLOG - review/clean up RUNC log datasets\n\nThis command may be run by itself or accessed using the RUNC -C command.\n\nThe RUNC log datasets will be displayed in a ISPF dataset list which will\nallow the user to browse, edit, view, delete, etc. (any ISPF dataset list\noption).\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$USERDOC": {"ttr": 15, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01I\\x02\\x00\\x01\\x160_\\x01\\x185o\\x16V\\x00\\xe3\\x00>\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.73", "flags": 2, "createdate": "2016-10-31T00:00:00", "modifydate": "2018-12-22T16:56:00", "lines": 227, "newlines": 62, "modlines": 0, "user": "RUNC"}, "text": "The RUNC ISPF Edit Command is only used within ISPF Edit, or View, and\nwill execute any ISPF Edit, OMVS, TSO, (E)JES, SDSF, or ISPF command\nfound on the selected records within the active ISPF Edit data.\n\nSyntax:  RUNC options member\n\noptions may be:\n\n           blank (default)\n           ? or HELP to display ISPF tutorial\n           n - must be the first option and will skip\n               the first n characters to find the command\n          -A or -ALL enables all records to be considered for commands\n          -B to browse the results using STEMEDIT\n          -BS to toggle the prompt for the RUNC supported symbolics\n          -C to display all log datasets (ISPF 3.4 list)\n          -D to insert the message as Data\n       or -D(prefix) where prefix is added to the beginning of the data\n             followed by a space\n          -I to display the messages after each individual command\n          -L to log all messages to a log dataset (type based on install default\n          -LD to log all messages to a sequential log dataset\n          -LP to log all messages to a partitioned dataset member\n          -LX to disable logging if logging was enabled via -O user defaults\n          -N to insert the message as NOTELINEs\n          -O to display the user default options panel\n          -R to change the default Report from the site default\n             of either Always generate a report regardless if the\n             command generates a message or not or Only report if\n             messages were generated.\n          -S nnn to stop multiple command execution if the return code\n             is greater than nnn\n          -T to not trap and let the results go to screen\n          -V to view the results using STEMEDIT\n              default is to View\n          -W nnn to wrap the inserted text (for -D and -N) and the\n             when the command response is inserted. If nnn is W then\n             the wrap value will be set to the current Edit data width.\n             The wrap will occur at the closest blank or exact character\n             location depending on the data.\n\n          ONLY(string) will search for the string (e.g. xyz) in\n             the command string and if not found will ignore that\n             command.\n          PREFIX(string) will append the string to the front of\n             each command.\n          SUFFIX(string) will append the string to the end of\n             each command.\n\n          ** PREFIX and SUFFIX apply only to TSO commands\n\nmember, if provided, is a member name or member mask. If a member name\nthen that member is opened in Edit, or View. If a member mask then the\nmember list will be displayed using that mask.\n\nBoth options and member are optional\n\nData Syntax:\n\n   BROWSE command:  BROWSE Dataset(data-set-name)\n                 or BROWSE Dataset(data-set-name) Volume(volser)\n                 or BROWSE Member(member-name)\n   EDIT command:    EDIT ispf-edit-command\n                 or EDIT Dataset(data-set-name)\n                 or EDIT Dataset(data-set-name) Macro(macro)\n                 or EDIT Dataset(data-set-name) Macro(macro) Parm(parm)\n                 or EDIT Dataset(data-set-name) Volume(volser)\n                 or EDIT Dataset(data-set-name) Volume(volser) Macro(macro)\n                 or EDIT Dataset(data-set-name) Volume(volser) Macro(macro) +\n                         Parm(parm)\n                 or EDIT Member(member-name)\n                 or EDIT Member(member-name) Macro(macro) Parm(parm)\n   (E)JES Command:  EJES ejes-command\n   ISPF Command:    SELECT ispf-select-paramters\n   OMVS Command:    OMVS omvs-command\n                    multiple commands separated by a ;\n   Rename Command:  Rename data-set volser from-member-name to-member-name\n   SDSF Command:    SDSF sdsf-command\n   SET Command:     SET symbolic = value\n                    SET PROMPT or NOPROMPT (affects RUNC defined symbolics)\n   Sleep Command:   SLEEP seconds   (default 5 seconds)\n   TSO Commands:    Any TSO command\n   TSO Console:     CONS z/OS command\n   VIEW command:    VIEW ispf-View-command\n                 or VIEW Dataset(data-set-name)\n                 or VIEW Dataset(data-set-name) Macro(macro)\n                 or VIEW Dataset(data-set-name) Macro(macro) Parm(parm)\n                 or VIEW Dataset(data-set-name) Volume(volser)\n                 or VIEW Dataset(data-set-name) Volume(volser) Macro(macro)\n                 or VIEW Dataset(data-set-name) Volume(volser) Macro(macro) +\n                         Parm(parm)\n                 or VIEW Member(member-name)\n                 or VIEW Member(member-name) Macro(macro) Parm(parm)\n   <DOC>:           Documentation Popup\n                    <DOC> end with </DOC>\n                    <TITLE>Title for Popup\n   <EXIT rc>:       Test return code after previous command and if\n                    equal or greater will cease RUNC processing.\n   <START>:         Defines the start of a range within the data to\n                    process. Ends with <END> statement. Both must\n                    be on records by themselves.\n\n   Documentation format\n             1. <DOC> on a record by itself starts the doc section\n             2. </DOC> on a record by itself ends the doc section\n             3. <TITLE> followed by up to 32 characters on the same\n                record and between <DOC> and </DOC> records will\n                be used for the title of the documentation popup.\n             4. PF3 will close the popup and continue with the next\n                command(s)\n             5. CANCEL on the command line will close the popup and\n                terminate RUNC processing\n\nUsage Notes: 1. Select records with TSO commands using line tags, C, C#,\n                or CC and CC.\n             2. Use the command option of -ALL, or -A,  to process all\n                records for commands.\n             3. Data lines starting with *, /*, //, or //* or all blank\n                will be ignored\n                - use n to skip over *, /* , //, or //*\n                - EXCLUDED records will also be ignored\n                  ** This applies as well if an EDIT X ALL happens :-)\n             4. Commands may be continued on the next record by using a\n                + at the end of the command for the record\n             5. The data on the line will be executed using the Address\n                TSO command as a TSO command, or ADDRESS ISPExec for\n                ISPF commands. For omvs the command will be executed\n                using bpxwunix. For SDSF and (E)JES the appropriate\n                commands will be used.\n             6. Commands can be in any record in the data.\n             7. Symbolics are supported in the command using the syntax\n                of &symbol. An ISPF panel will be generated to prompt\n                for the symbolic values.\n             8. Hint: Use a symbolic at the end to allow entry of\n                additional command options\n             9. Multiple symbolics may be used in the same command and\n                may be delineated by '<>(),.\"; $#&\u00dd\u00a8{}/\\%-_\n            10. If a symbolic ends with a . then the . will be removed\n                and the symbolic value will be merged with the adjacent\n                text.\n            11. OMVS commands are any valid OMVS command. Multiple\n                commands are separated by a ;. And if SuperUser\n                is required us su.\n            12. EDIT, EJES and SDSF will accept multiple commands that\n                are separated by a ;.\n            13. -W is used with -D and -N to wrap the text that is\n                inserted into the command member or dataset. This is\n                useful if the command results would be truncated when\n                inserted.\n            14. The command members may have ISPF Edit sequence numbers,\n                or not, depending on the users preference. RUNC will\n                ignore them providing they are valid Edit numbers.\n            15. -N and -D override -B, -I, -T, and -V\n            16. -B, -T, and -V over-ride -R\n            17. Comments may be included on the same record as a command\n                and must start after the command and begin with a /* and\n                there is no need for a closing */.\n            18. When Browse/Edit/View a Member the active dataset and\n                volser is implied.\n            19. The Rename command requires a volser. Use * to use the\n                cataloged data set.\n\n Special symbolics supported:\n\n  DATE     USA Date (mm/dd/yy)\n  DD       2 digit Day of Month\n  DOY      Day of year (e.g. 001)\n  EDATE    European Date (dd/mm/yy)\n  HHMM     Hours and Minutes (hhmm)\n  JDATE    Julian Date (e.g. 16001)\n  LPAR     Active LPAR Name\n  MM       2 digit Month\n  MONTH    Month (e.g. January)\n  ODATE    Ordered Date (yy/mm/dd)\n  PREFIX   Current TSO Prefix\n  RDSN     Current RUNC dataset name\n  RMBR     Current RUNC member name\n  RMEM     Current RUNC member name\n  SDATE    Standard Date (yyyymmdd)\n  SMFID    Active SMFID for the LPAR\n  SYSID    1 Character System ID\n  SYSNAME  Active LPAR Name\n  SYSPLEX  Active SYSPLEX Name\n  SYSPREF  Current TSO Prefix\n  SYSSMFID Active SMFID for the LPAR\n  SYSUID   Current userid\n  UDATE    USA Date (mm/dd/yy)\n  USERID   Current userid\n  USERIDL  Current userid lower case\n  WEEKDAY  Day of Week (e.g. Monday)\n  YY       2 digit Year\n  YYYY     4 digit Year\n\n Sample Usage:\n\n    Create a member in a dataset:\n\n    LISTD &dsn\n    LISTC ENT(&dsn) ALL\n    PDS &dsn\n    PDS MY.EXEC\n    SELECT PANEL(&panel)\n    SELECT PANEL(ISR@PRIM) +\n           opt(&opt)\n    EJES D A,ALL\n    EJES ST jobname\n    SDSF D A,ALL\n    SDSF ST jobname\n    OMVS cd /u;ls -la\n    CONS d a,l\n    EDIT c &from &to all\n    EDIT only yyy\n    EDIT Dataset(&dsname)\n    EDIT Dataset(&dsname) Volume(&volser)\n    BROWSE Dataset(&dsname)\n    BROWSE Dataset(&dsname) Volume(&volser)\n    VIEW Dataset(&dsname)\n    VIEW Dataset(&dsname) Volume(&volser)\n\nThen use the RUNC command on that dataset/member and use the row\nselection commands to select the record(s) to process.\n\nThe symbolics in the sample commands will bring up an ISPF panel that\nwill prompt the user to enter a value for each symbolic in the order\nthat they are found within the command. If the user decided to not\nexecute the current command at this point they may do so by entering\nCANCEL on the ISPF command line.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM": {"ttr": 147, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01 !/\\x01 !/\\x06\\x15\\x06\\xcd\\x06\\xcd\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-07-30T00:00:00", "modifydate": "2020-07-30T06:15:35", "lines": 1741, "newlines": 1741, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "EKKO": {"ttr": 17, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x02\\x00\\x01\\x161\\x0f\\x01\\x161\\x0f\\x13W\\x01\\x9d\\x01\\x9d\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.00", "flags": 2, "createdate": "2016-11-05T00:00:00", "modifydate": "2016-11-05T13:57:00", "lines": 413, "newlines": 413, "modlines": 0, "user": "RUNC"}, "text": "         TITLE '   E C H O   '\n************************************************************\n*                                                          *\n*        'ECHO' TSO COMMAND                                *\n*                                                          *\n************************************************************\n         SPACE\n* WRITTEN NOVEMBER 5 2016\n* THIS TSO COMMAND ECHOES THE TEXT ON THE COMMAND LINE TO THE SCREEN.\n* IT COULD BE INSTALLED AS 'ECHO', OR ANYTHING ELSE, BUT\n* IF THERE ALREADY IS A COMMAND NAMED 'ECHO' ON THE SYSTEM\n* THEN IT MIGHT BE NECESSARY TO USE A NAME OTHER THAN 'ECHO'.\n*\n* SYNTAX:\n*  ECHO TEXT TO BE DISPLAYED\n*  ECHO 'TEXT TO BE DISPLAYED\n*  ECHO 'TEXT TO BE DISPLAYED'\n*\n* IF NO TEXT IS SPECIFIED, A BLANK LINE IS DISPLAYED.\n* IF THE TEXT BEGINS WITH A QUOTE THEN (1) THE QUOTE IS REMOVED\n* AND (2) AN OPTIONAL TRAILING QUOTE, IF PRESENT, WILL BE REMOVED.\n*\n* A TRAILING QUOTE IS ONLY NEEDED IF THE QUOTED TEXT TO BE DISPLAYED\n* HAS A TRAILING PLUS (+) OR MINUS (-) BECAUSE THEY NORMALLY\n* INDICATE CONTINUATION OF A COMMAND LINE.\n* A TRAILING QUOTE IS NEEDED IN ISPF OUTSIDE A REXX EXEC OR CLIST,\n* IF THE TEXT BEGINS WITH A QUOTE, AS ISPF CHECKS FOR MATCHED QUOTES.\n*\n* TO DISPLAY SOMETHING WITH A LEADING QUOTE, SPECIFY 2 LEADING QUOTES.\n* QUOTES WITHIN A QUOTED STRING DO NOT NEED TO BE DOUBLED, UNLESS\n* THE COMMAND IS RUN IN ISPF OUTSIDE A REXX EXEC OR A CLIST.\n* IF THEY ARE DOUBLED THEN THEY WILL BE DISPLAYED AS A SINGLE QUOTE.\n*\n* UNQUOTED STRINGS THAT ARE INDENTED WILL DISPLAY WITH LEADING SPACES.\n*\n* EXAMPLES:\n*  ECHO THIS IS TEXT\n*  ECHO  THIS IS TEXT WITH A LEADING SPACE\n*  ECHO   THIS IS TEXT WITH 2 LEADING SPACES\n*  ECHO '  THIS IS TEXT WITH 2 LEADING SPACES'\n*  ECHO   '  THIS IS TEXT WITH 2 LEADING SPACES'\n*  ECHO IT'S TEXT WITH A SINGLE QUOTE\n*  ECHO 'IT'S TEXT WITH A SINGLE QUOTE\n*  ECHO 'IT'S TEXT WITH A SINGLE QUOTE'\n*  ECHO 'IT''S TEXT WITH A DOUBLED SINGLE QUOTE'\n*  ECHO 'THIS IS TEXT WITH A TRAILING HYPHEN -'\n*  ECHO 'THIS IS TEXT WITH A TRAILING PLUS SIGN +'\n*  ECHO 'THIS IS TEXT WITH NO TRAILING QUOTE NEEDED\n*  ECHO      (PRINTS BLANK LINE)\n*  ECHO '    (PRINTS BLANK LINE)\n*  ECHO ''   (PRINTS BLANK LINE)\n*  ECHO '''  (PRINTS ONE QUOTE)\n*  ECHO '''' (PRINTS ONE QUOTE)\n*\n* A COMMAND WITH AN UNEVEN NUMBER OF QUOTES, IF ENTERED WITHIN ISPF\n* AND OUTSIDE OF A REXX EXEC OR A CLIST, SUCH AS DIRECTLY ON PANEL 6,\n* WILL BE FAILED BY ISPF WITH THIS MESSAGE:\n*  ISPD289  MISMATCHED QUOTES - THE STRING CONTAINS AN UNEVEN NUMBER\n*           OF QUOTES.\n* THERE IS RARELY A NEED TO RUN THE 'ECHO' COMMAND DIRECTLY,\n* OUTSIDE A REXX EXEC OR A CLIST, IN ISPF, EXCEPT FOR TESTING,\n* BUT MESSAGE ISPD289 CAN BE AVOIDED BY SPECIFYING PAIRS OF QUOTES\n* WHERE ONE OUTPUT QUOTE IS DESIRED. SO INSTEAD OF THESE COMMANDS:\n*  ECHO LET'S BEGIN\n*  ECHO 'LET'S BEGIN'\n* THESE COMMANDS WILL PRODUCE THE SAME DESIRED RESULT:\n*  ECHO LET''S BEGIN\n*  ECHO 'LET''S BEGIN'\n* THE SAME IS TRUE INSIDE A REXX EXEC OR A CLIST, BUT NOT NEEDED.\n         SPACE\n* INTERCEPT 'LINK' MACROS IMBEDDED IN PUTLINE & STACK\n* TO MAKE SF=(E,LINKAREA) THE DEFAULT.\n         MACRO\n&NAME    LINK  &EP=,&SF=(E,LINKAREA)\n&NAME    LA    15,&SF(2)\n         LA    0,*+8\n         B     *+12\n         DC    CL8'&EP'\n         ST    0,0(0,15)\n         SVC   6             ISSUE LINK SVC\n         MEND\n         SPACE\nECHO     START\n         USING *,R12\n         B     @PROLOG-*(,R15)\n         DC    AL1(5),CL5'ECHO'\n         DC    CL16' &SYSDATE &SYSTIME '\n@SIZE    DC    0F'0',AL1(1),AL3(@DATA24L)\n@PROLOG  STM   14,12,12(R13)\n         LR    R12,R15             BASE\n         LR    R2,R1\n         USING CPPL,R2\n         L     R0,@SIZE\n         GETMAIN R,LV=(0)\n         LR    R9,R1\n         XC    0(72,R1),0(R1)\n         USING @DATA24,R9\n         ST    R13,4(,R1)          CHAIN SAVEAREA\n         ST    R1,8(,R13)          CHAIN SAVEAREA\n         LR    R13,R1              NEW SAVEAREA\n         SPACE\n         XC    LINKAREA(8),LINKAREA\n         LA    R15,12\n         STH   R15,RETCODE         SET RETCODE = 12\n         MVI   DEBUG,0\n         SPACE\n************************************************************\n*                                                          *\n*        SET UP IOPL FOR PUTLINE                           *\n*                                                          *\n************************************************************\n         SPACE\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15                 IOPL\n         SPACE\n         L     R15,16              LOAD CVT POINTER\n         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,444(,R15)       YES - USE CVTPUTL\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         SPACE\n************************************************************\n*                                                          *\n*        CHECK COMMAND BUFFER POINTED TO BY CPPLCBUF       *\n*                                                          *\n************************************************************\n         SPACE\n         CLI   DEBUG,0\n         BE    NODEBUG1\n         L     R1,CPPLCBUF\n         LH    R0,0(,R1)           GET LENGTH\n         LA    R15,OBUF\n         BAL   R14,TOHEX1\n         LA    R1,OBUF\n         LR    R0,R15\n         SR    R0,R1\n         BAL   R14,PUTLINE\n         SPACE\n         L     R1,CPPLCBUF\n         LH    R0,0(,R1)           GET LENGTH\n         LH    R14,2(,R1)          GET OFFSET\n         LA    R1,4(,R1)           POINT TO COMMAND\n         SH    R0,=H'4'            REDUCE LENGTH BY 4\n         AR    R1,R14              POINT TO OPERAND\n         SR    R0,R14              REDUCE LENGTH BY OFFSET\n         BZ    NODATA              NO OPERAND\n         LA    R15,OBUF\n         BAL   R14,TOHEX1\n         LA    R1,OBUF\n         LR    R0,R15\n         SR    R0,R1\n         BAL   R14,PUTLINE\nNODATA   EQU   *\nNODEBUG1 EQU   *\n         SPACE\n         L     R1,CPPLCBUF\n         LH    R0,0(,R1)           GET LENGTH\n         LH    R14,2(,R1)          GET OFFSET\n         LA    R1,4(,R1)           POINT TO COMMAND\n         SH    R0,=H'4'            REDUCE LENGTH BY 4\n         AR    R1,R14              POINT TO OPERAND\n         SR    R0,R14              REDUCE LENGTH BY OFFSET\n         BZ    NULL                NO OPERAND\n         CLI   0(R1),C''''         IF NOT QUOTED\n         BE    QUOTED\n*              BACK UP TO LAST CHAR OF COMMAND\nLOOP     BCTR  R1,0\n         A     R0,=F'1'\n         CLI   0(R1),C' '\n         BE    LOOP\n*              POINT R1 TO OPERAND OR LEADING BLANKS\n         LA    R1,2(,R1)\n         S     R0,=F'2'\n         BAL   R14,SQUEEZE         CHANGE ALL '' TO '\n         LTR   R0,R0\n         BZ    NULL\n         BAL   R14,PUTLINE\n         B     EXIT0\nNULL     LA    R1,=C' '\n         LA    R0,1\n         BAL   R14,PUTLINE\n         B     EXIT0\nQUOTED   CH    R0,=H'1'            IF NOTHING BUT A SINGLE QUOTE\n         BE    NULL\n         LR    R15,R1\n         AR    R15,R0              POINT PAST LAST CHAR\n         BCTR  R15,0               POINT TO LAST CHAR\n         LA    R1,1(,R1)           POINT PAST LEADING QUOTE\n         BCTR  R0,0                REDUCE LENGTH BY 1\n         CLI   0(R15),C''''        IF STRING ENDS WITH A QUOTE\n         BNE   NOENDQ\n         BCTR  R0,0                REDUCE LENGTH FOR TRAILING QUOTE\n         LTR   R0,R0\n         BZ    NULL\nNOENDQ   EQU   *\n*        CHANGE ALL '' TO '\n         BAL   R14,SQUEEZE\n         LTR   R0,R0\n         BZ    NULL\n         BAL   R14,PUTLINE\n         B     EXIT0\n         SPACE\nSQUEEZE  LR    R4,R14\n         C     R0,=F'256'          IF TOO LONG FOR OBUF AND MYSEG1\n         BNH   *+8                   THEN\n         L     R0,=F'256'            TRUNCATE TEXT\n         LA    R15,OBUF\n         LR    R14,R1\n         AR    R14,R0              POINT PAST LAST CHAR\nSQ1      CR    R1,R14\n         BE    SQX\nSQ2      MVC   0(1,R15),0(R1)      COPY 1 BYTE\n         LA    R15,1(,R15)\n         CLI   0(R1),C''''         IF WE COPIED A QUOTE\n         BE    SQ4                   GO TO SQ4\nSQ3      LA    R1,1(,R1)\n         B     SQ1\nSQ4      LA    R1,1(,R1)           POINT TO CHAR AFTER 1ST QUOTE\n         CR    R1,R14              IF END OF STRING FOLLOWS 1ST QUOTE\n         BE    SQX                   DONE\n         CLI   0(R1),C''''         IF SECOND QUOTE\n         BE    SQ3                   IGNORE IT\n         B     SQ2\nSQX      LA    R1,OBUF\n         LR    R0,R15              POINT TO BYTE AFTER LAST BYTE COPIED\n         SR    R0,R1               COMPUTE LENGTH\n         LR    R14,R4\n         BR    R14\n         SPACE\nTOHEX1   MVC   1(1,R15),0(R1)\n         UNPK  0(3,R15),1(2,R15)\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)\n         LA    R1,1(,R1)\n         BCT   R0,TOHEX1\n         MVI   0(R15),C' '\n         BR    R14\n         SPACE\n         AGO   .SKIP1\n************************************************************\n*                                                          *\n*        PUTMSG ROUTINE                                    *\n*                                                          *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTLINS\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,MYIOPL)\n         SPACE\n         LM    R14,R1,PUTLINS\n         BR    R14\n.SKIP1   ANOP\n         SPACE\n************************************************************\n*                                                          *\n*        PUTLINE ROUTINE                                   *\n*                                                          *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTLINS\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTLINS\n         BR    R14\n         SPACE\n************************************************************\n*                                                          *\n*        TERMINATE                                         *\n*                                                          *\n************************************************************\n         SPACE\nEXIT0    MVI   RETCODE+1,0\nCLEANUP  EQU   *\n         CLI   RETCODE+1,0         IS RETCODE ZERO?\n         BZ    STACKDX             YES, BRANCH\n         MVC   MYSTPB(STACKDL),STACKD\n         SPACE\n         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)\n         SPACE\n         TCLEARQ\nSTACKDX  EQU   *\n         SPACE\n         LH    R2,RETCODE\n         SPACE\nEXIT     LR    R1,R13\n         L     R0,@SIZE\n         L     R13,4(,R13)\n         FREEMAIN R,A=(1),LV=(0)\n         LR    R15,R2\n         LM    0,12,20(R13)\n         L     R14,12(,R13)\n         BR    R14\n         SPACE\n************************************************************\n*                                                          *\n*        CONSTANTS                                         *\n*                                                          *\n************************************************************\n         SPACE\n         AGO   .SKIP2\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n.SKIP2   ANOP\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nSTACKD   STACK DELETE=ALL,MF=L\nSTACKDL  EQU   *-STACKD\n         SPACE\nHEXTAB   DC    C'0123456789ABCDEF'\n         LTORG\n         DC    0D'0'               END OF CSECT\n         SPACE\n************************************************************\n*                                                          *\n*        DSECTS                                            *\n*                                                          *\n************************************************************\n         SPACE\n@DATA24  DSECT\n         DS    18F                 REGISTER SAVEAREA\nLINKAREA DS    2F\nMYECB    DS    F                  USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                 USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                 USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                 USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL256           USED BY PUTLINE ROUTINE\nPUTLINS  DS    4F                 USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                  ADDRESS OF IKJPUTL\nMYSTPB   DS    0F                 5 WORDS USED BY STACK DELETE\nRETCODE  DS    H\nDEBUG    DS    C\nOBUF     DS    0D,256C\n         DS    0D\n@DATA24L EQU   *-@DATA24\n         SPACE\n         PRINT NOGEN\n         IKJCPPL\n         SPACE\n         IKJPPL\n         SPACE\n         IKJUPT\n         SPACE\n         IKJIOPL\n         SPACE\n*        IKJPSCB\n         SPACE 2\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EKKO$": {"ttr": 19, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x02\\x00\\x01\\x07\"_\\x01\\x161\\x1f !\\x00\\x1b\\x00\\x0e\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.10", "flags": 2, "createdate": "2007-08-13T00:00:00", "modifydate": "2016-11-06T20:21:00", "lines": 27, "newlines": 14, "modlines": 0, "user": "RUNC"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,RLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT493.FILE300(EKKO)\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET,RENT,REUS'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=(OLD,PASS),DSN=&&TEMP\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  *\n INCLUDE SYSLIB\n ORDER   ECHO\n SETSSI  CB493300\n ENTRY   ECHO\n NAME    EKKO(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EKKOH": {"ttr": 21, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x02\\x00\\x01\\x163o\\x01\\x163o\\x12V\\x00N\\x00I\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.02", "flags": 2, "createdate": "2016-12-01T00:00:00", "modifydate": "2016-12-01T12:56:00", "lines": 78, "newlines": 73, "modlines": 0, "user": "RUNC"}, "text": ")F FUNCTION\n\n     Echo the provided text to the terminal using PUTLINE.\n\n     This allows the text to be captured using REXX OUTTRAP commands.\n\n  The reason for this is that using the REXX SAY while the REXX OUTTRAP\n  are active does not allow the text to be captured. Using EKKO resolves\n  this challenge.\n\n)X SYNTAX\n\n     EKKO TEXT\n     EKKO Text to be Displayed\n     EKKO 'Text To Be Displayed\n     EKKO 'TEXT To be displayed'\n\n)O TEXT\n\n If no text is specified, a blank line is displayed.\n\n If the text begins with a quote then (1) the quote is removed\n and (2) an optional trailing quote, if present, will be removed.\n\n A trailing quote is only needed if the quoted text to be displayed\n has a trailing plus (+) or minus (-) because they normally\n indicate continuation of a command line.\n\n A trailing quote is needed in ispf outside a rexx exec or clist,\n if the text begins with a quote, as ispf checks for matched quotes.\n\n To display something with a leading quote, specify 2 leading quotes.\n quotes within a quoted string do not need to be doubled, unless\n the command is run in ispf outside a rexx exec or a clist.\n If they are doubled then they will be displayed as a single quote.\n\n Unquoted strings that are indented will display with leading spaces.\n\n Examples:\n  ekko this is text\n  ekko  this is text with a leading space\n  ekko   this is text with 2 leading spaces\n  ekko '  this is text with 2 leading spaces'\n  ekko   '  this is text with 2 leading spaces'\n  ekko it's text with a single quote\n  ekko 'it's text with a single quote\n  ekko 'it's text with a single quote'\n  ekko 'it''s text with a doubled single quote'\n  ekko 'this is text with a trailing hyphen -'\n  ekko 'this is text with a trailing plus sign +'\n  ekko 'this is text with no trailing quote needed\n  ekko      (prints blank line)\n  ekko '    (prints blank line)\n  ekko ''   (prints blank line)\n  ekko '''  (prints one quote)\n  ekko '''' (prints one quote)\n\n A command with an uneven number of quotes, if entered within ispf\n and outside of a rexx exec or a clist, such as directly on panel 6,\n will be failed by ispf with this message:\n\n  ISPD289  MISMATCHED QUOTES - THE STRING CONTAINS AN UNEVEN NUMBER\n           OF QUOTES.\n\n There is rarely a need to run the 'ekko' command directly,\n outside a rexx exec or a clist, in ispf, except for testing,\n but message ISPD289 can be avoided by specifying pairs of quotes\n where one output quote is desired. so instead of these commands:\n\n  ekko let's begin\n  ekko 'let's begin'\n\n These commands will produce the same desired result:\n\n  ekko let''s begin\n  ekko 'let''s begin'\n\n The same is true inside a rexx exec or a clist, but not needed.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ERC": {"ttr": 23, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x02\\x00\\x01\\x162\\x1f\\x01\\x164O\\x07$\\x02\\x0c\\x00\\x12\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.15", "flags": 2, "createdate": "2016-11-16T00:00:00", "modifydate": "2016-12-09T07:24:00", "lines": 524, "newlines": 18, "modlines": 0, "user": "RUNC"}, "text": "/* --------------------  rexx procedure  -------------------- *\n | Name:      erc                                             |\n |                                                            |\n | Function:  edit the run commands pds                       |\n |                                                            |\n | Syntax:    %erc option member                              |\n |                                                            |\n |            member is optional                              |\n |                                                            |\n |            options:                                        |\n |                                                            |\n |            -E to use Edit instead of View                  |\n |            /SET to prompt user to change the command pds   |\n |            ? or Help for tutorial                          |\n |                                                            |\n | Usage Notes: Used to edit the run commands pds so that     |\n |              runc may be used on the members               |\n |                                                            |\n |              When run if the ercdsn variable is not        |\n |              found in ispf then the user will be           |\n |              prompted for the dataset name                 |\n |                                                            |\n |              ERC should be called from the ISPF Command    |\n |              table in applid ISR.                          |\n |                                                            |\n | Author:    Lionel B. Dyck                                  |\n |                                                            |\n | History:  (most recent on top)                             |\n |            12/09/16 - Update to loadispf routine           |\n |            12/07/16 - Add ? or Help for Tutorial           |\n |            11/30/16 - Add -E option and make View default  |\n |                     - Support TSO PROFILE NOPREFIX         |\n |                     - if the command dataset is prefixed   |\n |                       with the users userid then default   |\n |                       to Edit instead of View              |\n |            11/22/16 - Change back to pure edit forget      |\n |                       Memlist                              |\n |            11/21/16 - Change to use MEMLIST for 9 char     |\n |                       selection field                      |\n |            11/18/16 - Make dsn prompt a popup              |\n |            11/17/16 - Add ercdsn                           |\n |                     - Make sure running under ISR applid   |\n |            11/16/16 - Creation                             |\n |                                                            |\n * ---------------------------------------------------------- */\n\n/* ---------------------------------------- *\n | Get the member name, if any, to be used. |\n |                                          |\n | May also be a mask (e.g. abc*)           |\n * ---------------------------------------- */\n arg member\n\n/* ------------------------------------- *\n | Setup the ISPF addressing environment |\n * ------------------------------------- */\n Address ISPExec\n\n/* -------------------------------------------- *\n | Check for ISPF Applid of ISR and if not then |\n | recurse into ISR.                            |\n * -------------------------------------------- */\n \"Vget (Zapplid)\"\n \"Control Errors Return\"\n if zapplid <> \"ISR\" then do\n     \"Select Cmd(%\"sysvar('sysicmd') member\") newappl(isr)\"\n    exit 0\n    end\n\n/* ---------------------------------------- *\n | Check for Help and then Display Tutorial |\n * ---------------------------------------- */\n if abbrev(\"HELP\",member,1) = 1 then call help\n if member = '?'     then call help\n\n/* ---------------------------------------------- *\n | Check for the ERCDSN variable that defines the |\n | dataset where the command members are located. |\n |                                                |\n | If not found then prompt the user for it.      |\n * ---------------------------------------------- */\n if member = '/SET' then call set_dsn\n else do\n      'vget (ercdsn) profile'\n      if ercdsn = '' then call set_dsn\n      end\n\n/* ---------------------------------- *\n | Remove quotes from ERCDSN if there |\n * ---------------------------------- */\n if left(ercdsn,1) = \"'\"\n   then parse value ercdsn with \"'\"cdsn\"'\"\n    else do\n         if sysvar('syspref') /= '' then hlq = sysvar('syspref')\n                                    else hlq = sysvar('sysuid')\n         cdsn = hlq'.'ercdsn\n         end\n\n/* ------------------- *\n | Check option for -E |\n * ------------------- */\n if words(member) > 1 then parse value member with option member\n if option = '-E' then ev = 'Edit'\n                  else ev = 'View'\n\n/* ----------------------------------------------------- *\n | Check for a command dataset that is prefixed with the |\n | active users userid and if so then default to Edit.   |\n * ----------------------------------------------------- */\n userid = sysvar('sysuid')\n if left(ercdsn,1) = \"'\" then do\n    if userid = substr(ercdsn,2,length(userid)) then ev = 'Edit'\n    end\n else if sysvar('syspref') = userid then ev = 'Edit'\n\n/* ----------------------------------------- *\n | Now open Edit or View on the Commands DSN |\n * ----------------------------------------- */\n if member = ''\n   then ev \"Dataset('\"cdsn\"')\"\n   else ev \"Dataset('\"cdsn\"(\"member\")')\"\n\n Exit\n\n/* --------------------------------------- *\n | Prompt the user for the command dataset |\n * --------------------------------------- */\n Set_dsn: Procedure expose ercdsn\n/* ------------------------------- *\n | Dynamically load the ISPF Panel |\n * ------------------------------- */\n load_info = loadispf()\n\n/* --------------------------------------- *\n | Prompt the user and save the ERCDSN var |\n * --------------------------------------- */\n do forever\n    'Addpop'\n    'Display Panel(ercprmpt)'\n    if rc > 0 then leave\n    'Rempop'\n    end\n\n if ercdsn /= '' then do\n    'vput (ercdsn) profile'\n    zedsmsg = 'ERC Dataset Set'\n    zedlmsg = 'ERC Dataset has been set to:' ercdsn\n    'Setmsg msg(isrz001)'\n    end\n\n/* -------------------------------------------- *\n | Done with the panel so release the resources |\n * -------------------------------------------- */\n do until length(load_info) = 0\n    parse value load_info with dd libd load_info\n    \"libdef\" libd\n    address tso \"free f(\"dd\")\"\n    end\n\n/* ---------------------- *\n | Now return and process |\n * ---------------------- */\n Return\n\n/* ----------------------------------------------------------- *\n | Help Procedure                                              |\n |                                                             |\n | This section will call the LoadISPF routine to dynamnically |\n | load the ISPF panels and then invoke the ISPF tutorial      |\n | routine.                                                    |\n * ----------------------------------------------------------- */\n Help:\n Address ISPEXEC\n load_info = loadispf()\n 'Select pgm(isptutor) parm(#erc)'\n do until length(load_info) = 0\n    parse value load_info with dd libd load_info\n    \"libdef\" libd\n    address tso \"free f(\"dd\")\"\n    end\n exit\n\n/* --------------------  rexx procedure  -------------------- *\n * Name:      LoadISPF                                        *\n *                                                            *\n * Function:  Load ISPF elements that are inline in the       *\n *            REXX source code.                               *\n *                                                            *\n * Syntax:    load_info = loadispf()                          *\n *                                                            *\n *            The inline ISPF resources are limited to        *\n *            ISPF Messages, Panels, and Skeletons,           *\n *                 CLISTs and EXECs are also supported.       *\n *                                                            *\n *            The inline resources must start in column 1     *\n *            and use the following syntax:                   *\n *                                                            *\n *            >START    used to indicate the start of the     *\n *                      inline data                           *\n *                                                            *\n *            >END    - used to indicate the end of the       *\n *                      inline data                           *\n *                                                            *\n *            Each resource begins with a type record:        *\n *            >type name                                      *\n *               where type is CLIST, EXEC, MSG, PANEL, SKEL  *\n *                     name is the name of the element        *\n *                                                            *\n * Sample usage:                                              *\n *          -* rexx *-                                        *\n *          load_info = loadispf()                            *\n *          ... magic code happens here (your code) ...       *\n *          Address ISPEXEC                                   *\n *          do until length(load_info) = 0                    *\n *             parse value load_info with dd libd load_info   *\n *             if left(libd,6) = \"ALTLIB\" then do             *\n *                if libd = \"ALTLIBC\" then lib = \"CLIST\"      *\n *                                    else lib = \"EXEC\"       *\n *                Address TSO,                                *\n *                  \"Altlib Deact Application(\"lib\")\"         *\n *                end                                         *\n *             else \"libdef\" libd                             *\n *             address tso \"free f(\"dd\")\"                     *\n *             end                                            *\n *          exit                                              *\n *          >Start inline elements                            *\n *          >Panel panel1                                     *\n *          ...                                               *\n *          >Msg msg1                                         *\n *          ...                                               *\n *          >End of inline elements                           *\n *                                                            *\n * Returns:   the list of ddnames allocated for use along     *\n *            with the libdef's performed or altlib           *\n *                                                            *\n *            format is ddname libdef ddname libdef ...       *\n *                   libdef may be altlibc or altlibe         *\n *                   for altlib clist or altlib exec          *\n *                                                            *\n * Notes:     Entire routine must be included with REXX       *\n *            exec - inline with the code.                    *\n *                                                            *\n * Comments:  The entire rexx program is processed from the   *\n *            last record to the first to find the >START     *\n *            record at which point all records from that     *\n *            point on are processed until the >END           *\n *            statement or the end of the program is found.   *\n *                                                            *\n *            It is *strongly* suggested that the inline      *\n *            elements be at the very end of your code so     *\n *            that the search for them is faster.             *\n *                                                            *\n *            Inline ISPTLIB or ISPLLIB were not supported    *\n *            because the values for these would have to be   *\n *            in hex.                                         *\n *                                                            *\n * Author:    Lionel B. Dyck                                  *\n *                                                            *\n * History:                                                   *\n *            05/10/16 - correction for clist and exec        *\n *            04/19/16 - bug correction                       *\n *            06/04/04 - Enhancements for speed               *\n *            08/05/02 - Creation                             *\n *                                                            *\n * ---------------------------------------------------------- *\n * Disclaimer: There is no warranty, either explicit or       *\n * implied with this code. Use it at your own risk as there   *\n * is no recourse from either the author or his employeer.    *\n * ---------------------------------------------------------- */\n LoadISPF: Procedure\n\n parse value \"\" with null kmsg kpanel kskel first returns ,\n                     kclist kexec\n/* ------------------------------------------------------- *\n * Find the InLine ISPF Elements and load them into a stem *\n * variable.                                               *\n *                                                         *\n * Elements keyword syntax:                                *\n * >START - start of inline data                           *\n * >CLIST name                                             *\n * >EXEC name                                              *\n * >MSG name                                               *\n * >PANEL name                                             *\n * >SKEL name                                              *\n * >END   - end of all inline data (optional if last)      *\n * ------------------------------------------------------- */\n last_line = sourceline()\n do i = last_line to 1 by -1\n    line = sourceline(i)\n    if translate(left(line,6)) = \">START \" then leave\n    end\n rec = 0\n/* --------------------------------------------------- *\n * Flag types of ISPF resources by testing each record *\n * then add each record to the data. stem variable.    *\n * --------------------------------------------------- */\n do j = i+1 to last_line\n    line = sourceline(j)\n    if translate(left(line,5)) = \">END \"   then leave\n    if translate(left(line,7)) = \">CLIST \" then kclist = 1\n    if translate(left(line,6)) = \">EXEC \"  then kexec  = 1\n    if translate(left(line,5)) = \">MSG \"   then kmsg   = 1\n    if translate(left(line,7)) = \">PANEL \" then kpanel = 1\n    if translate(left(line,6)) = \">SKEL \"  then kskel  = 1\n    rec  = rec + 1\n    data.rec = line\n    end\n\n/* ----------------------------------------------------- *\n * Now create the Library and Load the Member(s)         *\n * ----------------------------------------------------- */\n Address ISPExec\n/* ----------------------------- *\n * Assign dynamic random ddnames *\n * ----------------------------- */\n clistdd = \"lc\"random(999)\n execdd  = \"le\"random(999)\n msgdd   = \"lm\"random(999)\n paneldd = \"lp\"random(999)\n skeldd  = \"ls\"random(999)\n\n/* ---------------------------------------- *\n *  LmInit and LmOpen each resource library *\n * ---------------------------------------- */\n if kclist <> null then do\n    call alloc_dd clistdd\n    \"Lminit dataid(clist) ddname(\"clistdd\")\"\n    \"LmOpen dataid(\"clist\") Option(Output)\"\n    returns = strip(returns clistdd ALTLIBC)\n    end\n if kexec <> null then do\n    call alloc_dd execdd\n    \"Lminit dataid(exec) ddname(\"execdd\")\"\n    \"LmOpen dataid(\"exec\") Option(Output)\"\n    returns = strip(returns execdd ALTLIBE)\n    end\n if kmsg <> null then do\n    call alloc_dd msgdd\n    \"Lminit dataid(msg) ddname(\"msgdd\")\"\n    \"LmOpen dataid(\"msg\") Option(Output)\"\n    returns = strip(returns msgdd ISPMLIB)\n    end\n if kpanel <> null then do\n    call alloc_dd paneldd\n    \"Lminit dataid(panel) ddname(\"paneldd\")\"\n    \"LmOpen dataid(\"panel\") Option(Output)\"\n    returns = strip(returns paneldd ISPPLIB)\n    end\n if kskel <> null then do\n    call alloc_dd skeldd\n    \"Lminit dataid(skel) ddname(\"skeldd\")\"\n    \"LmOpen dataid(\"skel\") Option(Output)\"\n    returns = strip(returns skeldd ISPSLIB)\n    end\n\n/* ----------------------------------------------- *\n * Process all records in the data. stem variable. *\n * ----------------------------------------------- */\n do i = 1 to rec\n    record = data.i\n    recordu = translate(record)\n    if left(recordu,5) = \">END \" then leave\n    if left(recordu,7) = \">CLIST \" then do\n       if first = 1 then call add_it\n       type = \"Clist\"\n       first = 1\n       parse value record with x name\n       iterate\n       end\n    if left(recordu,6) = \">EXEC \" then do\n       if first = 1 then call add_it\n       type = \"Exec\"\n       first = 1\n       parse value record with x name\n       iterate\n       end\n    if left(recordu,5) = \">MSG \" then do\n       if first = 1 then call add_it\n       type = \"Msg\"\n       first = 1\n       parse value record with x name\n       iterate\n       end\n    if left(recordu,7) = \">PANEL \" then do\n       if first = 1 then call add_it\n       type = \"Panel\"\n       first = 1\n       parse value record with x name\n       iterate\n       end\n    if left(recordu,6) = \">SKEL \" then do\n       if first = 1 then call add_it\n       type = \"Skel\"\n       first = 1\n       parse value record with x name\n       iterate\n       end\n   /* --------------------------------------------*\n    * Put the record into the appropriate library *\n    * based on the record type.                   *\n    * ------------------------------------------- */\n    Select\n      When type = \"Clist\" then\n           \"LmPut dataid(\"clist\") MODE(INVAR)\" ,\n                 \"DataLoc(record) DataLen(255)\"\n      When type = \"Exec\" then\n           \"LmPut dataid(\"exec\") MODE(INVAR)\" ,\n                 \"DataLoc(record) DataLen(255)\"\n      When type = \"Msg\" then\n           \"LmPut dataid(\"msg\") MODE(INVAR)\" ,\n                 \"DataLoc(record) DataLen(80)\"\n      When type = \"Panel\" then\n           \"LmPut dataid(\"panel\") MODE(INVAR)\" ,\n                 \"DataLoc(record) DataLen(80)\"\n      When type = \"Skel\" then\n           \"LmPut dataid(\"skel\") MODE(INVAR)\" ,\n                 \"DataLoc(record) DataLen(80)\"\n      end\n    end\n if type <> null then call add_it\n/* ---------------------------------------------------- *\n * Processing completed - now lmfree the allocation and *\n * Libdef the library.                                  *\n * ---------------------------------------------------- */\n if kclist <> null then do\n    Address TSO,\n    \"Altlib Act Application(Clist) File(\"clistdd\")\"\n    \"LmFree dataid(\"clist\")\"\n    end\n if kexec <> null then do\n    Address TSO,\n    \"Altlib Act Application(Exec) File(\"execdd\")\"\n    \"LmFree dataid(\"exec\")\"\n    end\n if kmsg <> null then do\n    \"LmFree dataid(\"msg\")\"\n    \"Libdef ISPMlib Library ID(\"msgdd\") Stack\"\n    end\n if kpanel <> null then do\n    \"Libdef ISPPlib Library ID(\"paneldd\") Stack\"\n    \"LmFree dataid(\"panel\")\"\n    end\n if kskel <> null then do\n    \"Libdef ISPSlib Library ID(\"skeldd\") Stack\"\n    \"LmFree dataid(\"skel\")\"\n    end\n return returns\n\n/* --------------------------- *\n * Add the Member using LmmAdd *\n * based upon type of resource *\n * --------------------------- */\n Add_It:\n Select\n    When type = \"Clist\" then\n         \"LmmAdd dataid(\"clist\") Member(\"name\")\"\n    When type = \"Exec\" then\n         \"LmmAdd dataid(\"exec\") Member(\"name\")\"\n    When type = \"Msg\" then\n         \"LmmAdd dataid(\"msg\") Member(\"name\")\"\n    When type = \"Panel\" then\n         \"LmmAdd dataid(\"panel\") Member(\"name\")\"\n    When type = \"Skel\" then\n         \"LmmAdd dataid(\"skel\") Member(\"name\")\"\n    Otherwise nop\n    end\n type = null\n return\n\n/* ------------------------------ *\n * ALlocate the temp ispf library *\n * ------------------------------ */\n Alloc_DD:\n arg dd\n Address TSO\n if pos(left(dd,2),\"lc le\") > 0 then\n \"Alloc f(\"dd\") unit(sysda) spa(5,5) dir(1)\",\n    \"recfm(v b) lrecl(255) blksize(32760)\"\n else\n \"Alloc f(\"dd\") unit(sysda) spa(5,5) dir(1)\",\n    \"recfm(f b) lrecl(80) blksize(23440)\"\n return\n>START\n>PANEL ercprmpt\n)Attr Default(%+_)\n   @ type(output) intens(high)  caps(off) just(left )\n   $ type( input) intens(high) caps(on ) just(left ) hilite(uscore)\n   + type(text) intens(low)\n)Body window(69,9) expand(\\\\)\n%-\\-\\-+RUNC Command Dataset Prompt%-\\-\\-\n%Command ===>_zcmd\n+\n+Enter Dataset Name:$ercdsn                                        +\n+\n+Note: Use ERC /SET to change this dataset name in the future\n+\n+Press PF3 to continue\n)Init\n .cursor = ercdsn\n)Proc\n  ver (&ercdsn,dsnamepq)\n)End\n>PANEL #ERC\n)ATTR DEFAULT(%+_)\n   %   TYPE(TEXT)  INTENS(HIGH) SKIP(ON)\n   +   TYPE(TEXT)  INTENS(LOW)  SKIP(ON) COLOR(GREEN)\n   _   TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) HILITE(USCORE)\n)BODY EXPAND(\\\\)\n%Tutorial+-\\-\\-(%ERC - Command+)-\\-\\-%Tutorial\n%Command ===>_ZCMD\n+\n+The ERC command is an ISPF command to open the PDS or PDS Member of the\n+command dataset for use with the RUNC ISPF Edit command.\n+\n+Syntax: %ERC options\n+\n+Options:  %blank+Display member list of Command PDS (default)\n+          %?+or%HELP+... Display tutorial\n+          %/SET+........ Prompt to change the Command PDS dataset name\n+          %member+...... Member Name or Member Mask\n+\n)PROC\n)END\n>END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXEC": {"ttr": 143, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01 !/\\x01 !/\\x06\\x15\\t\\xa8\\t\\xa8\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-07-30T00:00:00", "modifydate": "2020-07-30T06:15:35", "lines": 2472, "newlines": 2472, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "JUST4FUN": {"ttr": 25, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x02\\x00\\x01\\x160_\\x01\\x17'/\\x07@\\x00'\\x00\\x1f\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@\"", "ispf": {"version": "01.03", "flags": 2, "createdate": "2016-10-31T00:00:00", "modifydate": "2017-09-29T07:40:00", "lines": 39, "newlines": 31, "modlines": 0, "user": "RUNC"}, "text": "Have you ever found a tool, utility, application, or command that you\ndidn't know  you needed but once you find it you use it multiple\ntimes a day and can't imagine not having it before?\n\nWell RUNC and ERC are two of those.\n\nWhat is RUNC?  It is an ISPF Edit command (macro to be exact) that\nwill invoke any TSO or ISPF command that is found within the data\ncurrently being Edited (or Viewed) under ISPF.\n\nWhat is ERC? It is an ISPF command that opens your command dataset,\nand/or member, from any ISPF Panel. It is a fast path to your commands.\n\nSo what you might say.  Well consider this:\n\nYou issue TSO commands and start ISPF applications all day long if\nyou're like most ISPF users. Some percentage of these are not on any\nISPF menu and thus require that you remember not only the command\nbut the syntax.\n\nWhat if you could place those commands within a dataset, either in a\nsingle dataset/member, or multiple datasets/members, and then be\nable to select the specific commands, or commands, to be executed?\nAnd what if you could also code the commands in that data with\nsymbolics that would then cause an ISPF panel to be displayed\nprompting for the values for those symbolics?\n\nWhat you'd have is a collection of your frequently, and\ninfrequently, used TSO and ISPF commands that you can access from\nany ISPF Edit or View session.\n\nThen, to add to the fun, you can insert comments to document the\ncommands.\n\nAnd, just for more fun, you can insert these commands as comments\nwithin JCL.\n\nIt doesn't slice/dice/chop or cut - but it comes with no shipping or\nhandling fee and the price is zero dollars and zero cents.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LICENSE": {"ttr": 27, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x02\\x00\\x01\\x16\\x16/\\x01\\x16\\x16/\\x13R\\x02\\xa2\\x02\\xa2\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.00", "flags": 2, "createdate": "2016-06-10T00:00:00", "modifydate": "2016-06-10T13:52:00", "lines": 674, "newlines": 674, "modlines": 0, "user": "RUNC"}, "text": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LOAD": {"ttr": 139, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01 !/\\x01 !/\\x06\\x15\\x00M\\x00M\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-07-30T00:00:00", "modifydate": "2020-07-30T06:15:36", "lines": 77, "newlines": 77, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PANELS": {"ttr": 151, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01 !/\\x01 !/\\x06\\x15\\x02\\xd5\\x02\\xd5\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-07-30T00:00:00", "modifydate": "2020-07-30T06:15:35", "lines": 725, "newlines": 725, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "RUNCFIX": {"ttr": 29, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x02\\x00\\x01\\x17\\x03O\\x01\\x17\\x03O\\x07\\x11\\x00\\x1c\\x00\\x13\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.02", "flags": 2, "createdate": "2017-02-03T00:00:00", "modifydate": "2017-02-03T07:11:00", "lines": 28, "newlines": 19, "modlines": 0, "user": "RUNC"}, "text": "/* --------------------  rexx procedure  -------------------- *\n | Name:      runcfix                                         |\n |                                                            |\n | Function:  ISPF Edit Macro to update the runc exec         |\n |            and the testrunc exec                           |\n |                                                            |\n | Usage Notes: called by the $RECV process out of the        |\n |              runc distribution pds                         |\n |                                                            |\n | Dependencies:                                              |\n |                                                            |\n | Author:    Lionel B. Dyck                                  |\n |                                                            |\n | History:  (most recent on top)                             |\n |            02/03/17 - Creation                             |\n |                                                            |\n * ---------------------------------------------------------- */\n Address ISREdit\n 'Macro (hlq)'\n '(member) = member'\n if member = 'RUNC' then do\n    'find *custom* last'\n    end\n  if member = 'TESTRUNC' then do\n     \"c 'hlq.' '\"hlq\".' all\"\n     'save'\n     'end'\n     end\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SAMPLES": {"ttr": 155, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01 !/\\x01 !/\\x06\\x15\\x04\\xb8\\x04\\xb8\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-07-30T00:00:00", "modifydate": "2020-07-30T06:15:36", "lines": 1208, "newlines": 1208, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "TESTRUNC": {"ttr": 31, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x02\\x00\\x01\\x17\\x01\\x1f\\x01 \\x03o\\x14!\\x00)\\x00(\\x00\\x00\\xd9\\xe4\\xd5\\xc3@@@@@@'", "ispf": {"version": "01.06", "flags": 2, "createdate": "2017-01-11T00:00:00", "modifydate": "2020-02-05T14:21:00", "lines": 41, "newlines": 40, "modlines": 0, "user": "RUNC"}, "text": "/* --------------------  rexx procedure  -------------------- *\n * Name:      testrunc                                        *\n *                                                            *\n * Function:  dynamically allocate the runc libraries         *\n *            for testing purposes                            *\n *                                                            *\n * Syntax:    %testrunc command-dataset                       *\n *                                                            *\n *            if command-dataset is blank then use the        *\n *            provided sample library                         *\n *                                                            *\n * Note:      hlq will be changed by the $RECV exec to        *\n *            match what you restore the libraries to         *\n *                                                            *\n * Author:    Lionel B. Dyck                                  *\n *                                                            *\n * History:                                                   *\n *            02/03/17 - Remove .runc.new qualifier           *\n *            12/15/16 - Creation                             *\n *                                                            *\n * ---------------------------------------------------------- *\n * Copyright (c) 2016 by Lionel B. Dyck                       *\n * ---------------------------------------------------------- */\n arg cmdpds\n\n exec   = \"'SLBD.RUNC.exec'\"                  /* changed during receive */\n load   = \"'SLBD.RUNC.load'\"                  /* changed during receive */\n panels = \"'SLBD.RUNC.panels'\"                /* changed during receive */\n sample = \"'SLBD.RUNC.samples.pds'\"           /* changed during receive */\n\n if cmdpds = '' then cmdpds = sample\n\n 'altlib activate dataset('exec') application(exec)'\n address ispexec\n 'libdef ispllib dataset id('load') stack'\n 'libdef ispplib dataset id('panels') stack'\n 'Edit dataset('cmdpds')'\n 'libdef ispllib'\n 'libdef ispplib'\n address tso\n 'altlib deactivate application(exec)'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT312/CBT.V500.FILE312.PDS/RUNC.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT312/CBT.V500.FILE312.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}