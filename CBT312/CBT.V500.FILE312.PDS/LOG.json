{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "T311LBD", "INMTNODE": "X", "INMTUID": "Y", "INMFTIME": "20160615174219000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 32720, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "T311LBD.LOG.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"T311LBD.LOG.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 32720, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 32760, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "160167", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x01,'", "DS1LSTAR": "b'\\x00\\x00\\x11'", "DS1TRBAL": "b'\\x1f6'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\r \\x00\\x04\\x97\\x90`'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\r \\x00\\x04\\x97\\x90`'", "b'X\\x9f\\x89\\xe8\\x00\\x00\\x04N\\x00\\x0c\\x04O\\x00\\x03\\x00\\x07'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC": {"ttr": 16, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x16\\x16\\x7f\\x01\\x16\\x16\\x7f\\x12B\\x00\\x05\\x00\\x05\\x00\\x00\\xe3\\xf3\\xf1\\xf1\\xd3\\xc2\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2016-06-15T00:00:00", "modifydate": "2016-06-15T12:42:12", "lines": 5, "newlines": 5, "modlines": 0, "user": "T311LBD"}, "text": "THIS PDS CONTAINS THE FOLLOWING USABLE MEMBERS:\n\nCRONLOG      - REXX TO VIEW ALL CRON LOG FILES\nCRONLOGT     - ISPF PANEL FOR LOG EXECS (USED BY BOTH)\nSKULKLOG     - REXX TO VIEW ALL SKULKER LOG FILES\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CRONLOG": {"ttr": 12, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00@\\x01\\x16\\x16\\x7f\\x01\\x16\\x16\\x7f\\x11X\\x00\\x83\\x00[\\x00\\x00\\xe3\\xf3\\xf1\\xf1\\xd3\\xc2\\xc4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2016-06-15T00:00:00", "modifydate": "2016-06-15T11:58:40", "lines": 131, "newlines": 91, "modlines": 0, "user": "T311LBD"}, "text": "/* --------------------  rexx procedure  -------------------- *\n * Name:      cronlog                                         *\n *                                                            *\n * Function:  browse the cron log                             *\n *                                                            *\n * Syntax:    %cronlog                                        *\n *                                                            *\n * Author:    Lionel B. Dyck                                  *\n *                                                            *\n * Dependencies:  (1) superuser                               *\n *                (2) stemview                                *\n *                                                            *\n * Notes:     This exec and panel could be changed to work    *\n *            with any log file                               *\n *                                                            *\n * History:                                                   *\n *            06/06/16 - creation                             *\n *                                                            *\n * ---------------------------------------------------------- */\n logtbl = 'cron'random(999)\n panel  = 'cronlogt'\n dir = '/usr/spool/cron'\n\n/* -------------------------------------------------- *\n * Get current uid and change to uid(0) to start with *\n * -------------------------------------------------- */\n address syscall 'geteuid'\n myeuid=retval\n Address syscall \"seteuid 0\"\n\n/* -------------------------------------------------- *\n * List the target directory and return to normal uid *\n * -------------------------------------------------- */\n option = 'ls -la' dir\n rc = bpxwunix(option,,stdout.,stderr.)\n Address syscall \"seteuid\" myeuid\n\n/* ------------------------------------------------ *\n * Setup ISPFExec environment and create ISPF Table *\n * ------------------------------------------------ */\n Address ISPExec\n 'TBCreate' logtbl 'Names(zsel date time size file)'\n\n/* ---------------------------------------- *\n * Process the directory list for log files *\n * ---------------------------------------- */\n do i = 1 to stdout.0\n parse value stdout.i with w1 x id grp size mm dd time file\n date = mm dd\n    if left(w1,1) = 'd' then iterate\n    if w1 = 'total' then iterate\n    if pos('log',file) = 0 then iterate\n    file = dir'/'file\n    'tbadd' logtbl\n    end\n\n/* ------------------------------------- *\n * Now display the ISPF Table of Members *\n * ------------------------------------- */\n crp = 0\n rowcrp = crp\n do forever\n    zcmd    = null\n    if src = 4 then \"TBDispl\" logtbl\n       else do\n            \"TBTOP\" logtbl\n            \"TBSKIP\" logtbl \"NUMBER(\"crp\")\"\n            if rowcrp = 0 then\n               \"TBDISPL\" logtbl \"PANEL(\"panel\")\"\n               else\n               \"TBDISPL\" logtbl \"PANEL(\"panel\")\",\n                       \"CSRROW(\"rowcrp\") AUTOSEL(NO)\"\n            end\n    src = rc\n    if src > 4 then leave\n\n/* ---------------------------------------------------------- *\n * Process the member selections:                             *\n *   Commands: B - Browse                                     *\n *             S - Browse                                     *\n *             V - View                                       *\n * ---------------------------------------------------------- */\n if ztdsels > 0 then do\n if zsel = 'S' then zsel = 'B'\n Select\n   /* ------ *\n    * Browse *\n    * ------ */\n    when zsel = 'B' then do\n         'Control Display Save'\n         opt = 'browse'\n         call do_it\n         'Control Display Restore'\n         end\n   /* ------ *\n    * View   *\n    * ------ */\n    when zsel = 'V' then do\n         'Control Display Save'\n         opt = 'view'\n         call do_it\n         'Control Display Restore'\n         end\n    Otherwise nop\n    end\n end\n end\n\n/* ---------------------------- *\n * Close out the table and exit *\n * ---------------------------- */\n 'TBEnd' logtbl\n exit 0\n\n/* -------------------------------------------------- *\n * Now that we know which log file to process we will *\n * - change uid to 0 (superuser)                      *\n * - cat the file and capture the output              *\n * - return to our normal uid                         *\n * - use stemview to browse or view the results       *\n * -------------------------------------------------- */\n Do_It:\n Address syscall \"seteuid 0\"\n option = 'cat' file\n rc = bpxwunix(option,,stdout.,stderr.)\n Address syscall \"seteuid\" myeuid\n if stdout.0 > 0 then\n CALL stemview opt,'stdout.',,,\"cron log\" opt file\n if stderr.0 > 0 then\n    CALL stemview opt,'stderr.',,,\"cron log stderr\" opt file\n return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRONLOGT": {"ttr": 10, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\"\\x01\\x16\\x16\\x7f\\x01\\x16\\x16\\x7f\\x12@\\x00\\x15\\x00\\x15\\x00\\x00\\xe3\\xf3\\xf1\\xf1\\xd3\\xc2\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2016-06-15T00:00:00", "modifydate": "2016-06-15T12:40:22", "lines": 21, "newlines": 21, "modlines": 0, "user": "T311LBD"}, "text": ")Attr Default(%+_)\n   # type( PS)\n   $ type( input) intens(high) caps(on ) just(left ) Pad('_')\n   \u00ac type(output) intens(low) caps(off)  color(blue) skip(on)\n   ` type(text) intens(high) color(red)\n   ~ type(text) intens(high) color(blue) hilite(reverse)\n)Body  Expand(\\\\)\n%-\\-\\-~cron log file listing%-\\-\\-\n%Option ===>_zcmd                                              %Scroll ===>_amt\n%                                                                              +\n%Line selections: Browse, View                                               +\n`S+  Date   Time   Size     File\n)Model\n$z  \u00acz     \u00acz     \u00acz       \u00acz\n)Init\n.zvars = '(zsel date time size file)'\n.cursor = zcmd\n&amt = csr\n)Proc\n  ver (&zsel,list,B,S,V)\n)end\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SKULKLOG": {"ttr": 14, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00D\\x01\\x16\\x16\\x7f\\x01\\x16\\x16\\x7f\\x12\\x02\\x00\\x83\\x00[\\x00\\x00\\xe3\\xf3\\xf1\\xf1\\xd3\\xc2\\xc4@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2016-06-15T00:00:00", "modifydate": "2016-06-15T12:02:44", "lines": 131, "newlines": 91, "modlines": 0, "user": "T311LBD"}, "text": "/* --------------------  rexx procedure  -------------------- *\n * Name:      skulklog                                        *\n *                                                            *\n * Function:  browse the skulker logs                         *\n *                                                            *\n * Syntax:    %skulklog                                       *\n *                                                            *\n * Author:    Lionel B. Dyck                                  *\n *                                                            *\n * Dependencies:  (1) superuser                               *\n *                (2) stemview                                *\n *                                                            *\n * Notes:     This exec and panel could be changed to work    *\n *            with any log file                               *\n *                                                            *\n * History:                                                   *\n *            06/06/16 - creation                             *\n *                                                            *\n * ---------------------------------------------------------- */\n logtbl = 'skulker'random(9)\n panel  = 'cronlogt'\n dir = '/u/system/logs/'\n\n/* -------------------------------------------------- *\n * Get current uid and change to uid(0) to start with *\n * -------------------------------------------------- */\n address syscall 'geteuid'\n myeuid=retval\n Address syscall \"seteuid 0\"\n\n/* -------------------------------------------------- *\n * List the target directory and return to normal uid *\n * -------------------------------------------------- */\n option = 'ls -la' dir\n rc = bpxwunix(option,,stdout.,stderr.)\n Address syscall \"seteuid\" myeuid\n\n/* ------------------------------------------------ *\n * Setup ISPFExec environment and create ISPF Table *\n * ------------------------------------------------ */\n Address ISPExec\n 'TBCreate' logtbl 'Names(zsel date time size file)'\n\n/* ---------------------------------------- *\n * Process the directory list for log files *\n * ---------------------------------------- */\n do i = 1 to stdout.0\n parse value stdout.i with w1 x id grp size mm dd time file\n date = mm dd\n    if left(w1,1) = 'd' then iterate\n    if w1 = 'total' then iterate\n    if pos('skulker',file) = 0 then iterate\n    file = dir'/'file\n    'tbadd' logtbl\n    end\n\n/* ------------------------------------- *\n * Now display the ISPF Table of Members *\n * ------------------------------------- */\n crp = 0\n rowcrp = crp\n do forever\n    zcmd    = null\n    if src = 4 then \"TBDispl\" logtbl\n       else do\n            \"TBTOP\" logtbl\n            \"TBSKIP\" logtbl \"NUMBER(\"crp\")\"\n            if rowcrp = 0 then\n               \"TBDISPL\" logtbl \"PANEL(\"panel\")\"\n               else\n               \"TBDISPL\" logtbl \"PANEL(\"panel\")\",\n                       \"CSRROW(\"rowcrp\") AUTOSEL(NO)\"\n            end\n    src = rc\n    if src > 4 then leave\n\n/* ---------------------------------------------------------- *\n * Process the member selections:                             *\n *   Commands: B - Browse                                     *\n *             S - Browse                                     *\n *             V - View                                       *\n * ---------------------------------------------------------- */\n if ztdsels > 0 then do\n if zsel = 'S' then zsel = 'B'\n Select\n   /* ------ *\n    * Browse *\n    * ------ */\n    when zsel = 'B' then do\n         'Control Display Save'\n         opt = 'browse'\n         call do_it\n         'Control Display Restore'\n         end\n   /* ------ *\n    * View   *\n    * ------ */\n    when zsel = 'V' then do\n         'Control Display Save'\n         opt = 'view'\n         call do_it\n         'Control Display Restore'\n         end\n    Otherwise nop\n    end\n end\n end\n\n/* ---------------------------- *\n * Close out the table and exit *\n * ---------------------------- */\n 'TBEnd' logtbl\n exit 0\n\n/* -------------------------------------------------- *\n * Now that we know which log file to process we will *\n * - change uid to 0 (superuser)                      *\n * - cat the file and capture the output              *\n * - return to our normal uid                         *\n * - use stemview to browse or view the results       *\n * -------------------------------------------------- */\n Do_It:\n Address syscall \"seteuid 0\"\n option = 'cat' file\n rc = bpxwunix(option,,stdout.,stderr.)\n Address syscall \"seteuid\" myeuid\n if stdout.0 > 0 then\n CALL stemview opt,'stdout.',,,\"cron log\" opt file\n if stderr.0 > 0 then\n    CALL stemview opt,'stderr.',,,\"cron log stderr\" opt file\n return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT312/CBT.V500.FILE312.PDS/LOG.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT312/CBT.V500.FILE312.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}