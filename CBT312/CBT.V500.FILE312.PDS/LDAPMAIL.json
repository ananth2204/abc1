{"INMR01": {"INMLRECL": 80, "INMFNODE": "NKAISERA", "INMFUID": "SYSLBD", "INMTNODE": "X", "INMTUID": "Y", "INMFTIME": "20030826220633000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 27920, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "SYSLBD.LDAP.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"SYSLBD.LDAP.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27920, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 128, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "030238", "DS1SCEXT": "b'\\x80m\\x10'", "DS1SCALO": "b'P\\x00\\x00\\x01'", "DS1LSTAR": "b'\\x00\\x01\\x04'", "DS1TRBAL": "b'@H'"}, "COPYR2": {"deb": "b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0b\\x10\\x00\\x04\\x8a\\x8d`'", "extents": ["b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0b\\x10\\x00\\x04\\x8a\\x8d`'", "b'X\\xf2\\x7f@\\x00\\x00\\x00\\x0b\\x00\\x04\\x00\\x0b\\x00\\x04\\x00\\x01'", "b'X\\xf2\\x7f@\\x00\\x00\\x00\\x0b\\x00\\x05\\x00\\x0b\\x00\\x05\\x00\\x01'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC": {"ttr": 12, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x19\\x01\\x002o\\x01\\x002o\\x13\\x13\\x00\\x1e\\x00\\x15\\x00\\x00\\xe2\\xe8\\xe2\\xd3\\xc2\\xc4@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-11-21T00:00:00", "modifydate": "2000-11-21T13:13:19", "lines": 30, "newlines": 21, "modlines": 0, "user": "SYSLBD"}, "text": "LDAPMAIL is a simple ISPF dialog to query a ldap server, using a\nsupplied name, for an e-mail address.\n\nThe members of this PDS are:\n\n$DOC     - what you are reading\nLDAPMAIL - the rexx exec\nLDAPMLP  - ISPF Panel for prompting\nLDAPMLT  - ISPF Panel for the table display of the results\n\nInstallation:\n\n1. Copy members LDAPMLP and LDAPMLT into your ISPF Panel data set\n2. Copy member LDAPMAIL into your rexx data set\n3. Customize LDAPMAIL for your installation\n4. Verify that GLD.SGLDLNK is in your linklist (this is the LDAP\n   load module library)\n5. You may be required to define GLDSRCH to your sites security\n   systems TSO command table\n\nCustomization issues:\n1. You may need to update the LDAPMLP panel if your ldap information\n   is not of the format First Last.\n2. If the results of your ldap query are not being processed\n   properly you may need to tailor the parse statement in the\n   LDAPMAIL exec.\n   From: parse value work with \"cn=\"ename \",ou=\" .\n   To:   something that works for you.\n\nThen invoke by executing the rexx exec (e.g. TSO %LDAPMAIL)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CHANGES": {"ttr": 18, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x18\\x01\\x010O\\x01\\x03#\\x8f\\x14E\\x00\\x06\\x00\\x03\\x00\\x00\\xe2\\xe8\\xe2\\xd3\\xc2\\xc4@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-10-31T00:00:00", "modifydate": "2003-08-26T14:45:18", "lines": 6, "newlines": 3, "modlines": 0, "user": "SYSLBD"}, "text": "Change History:\n\n08/26/2003   Changed LDAPMAIL for query for preferredRfc822Originator=\n             instead of mail=\n\n10/31/2001   Changed LDAPMAIL for a batch mode.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LDAPMAIL": {"ttr": 259, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\"\\x00\\x03\\x01\\x000o\\x01\\x03#\\x8f\\x15\\x06\\x00\\xf5\\x00\\n\\x00\\x00\\xe2\\xe8\\xe2\\xd3\\xc2\\xc4@@@@'", "ispf": {"version": "01.34", "flags": 0, "createdate": "2000-11-01T00:00:00", "modifydate": "2003-08-26T15:06:03", "lines": 245, "newlines": 10, "modlines": 0, "user": "SYSLBD"}, "text": "        /* --------------------  rexx procedure  -------------------- *\n         * Name:      LDAPMAIL                                        *\n         *                                                            *\n         * Function:  Mail Lookup via LDAP                            *\n         *                                                            *\n         * Syntax:    %LDAPMAIL name                                  *\n         *            or                                              *\n         *            %LDAPMAIL / name                                *\n         *                                                            *\n         *            if / is used then information returned via      *\n         *            rexx say statements which can be trapped        *\n         *                                                            *\n         * Author:    Lionel B. Dyck                                  *\n         *            Kaiser Permanente Information Technology        *\n         *            Walnut Creek, CA 94598                          *\n         *            (925) 926-5332                                  *\n         *            Internet: lionel.b.dyck@kp.org                  *\n         *                                                            *\n         * Notes:     Find *custom* for local customizations          *\n         *                                                            *\n         * History:                                                   *\n         *            08/26/03 - Fixup name so middle initial has .   *\n         *                     - change to use the directory entry    *\n         *                       preferredRfc822Originator for the    *\n         *                       correct e-mail address               *\n         *            10/31/01 - add / (batch mode) option            *\n         *            06/21/01 - fix in case user doesn't have omvs   *\n         *            11/21/00 - generalize                           *\n         *            11/16/00 - cleanup                              *\n         *            11/13/00 - creation                             *\n         *                                                            *\n         * ---------------------------------------------------------- */\n\n        /* ----------------------------------------------------- *\n         * Get any input options                                 *\n         * ----------------------------------------------------- */\n         parse arg option\n\n        /* --------------------------------------------------------- *\n         * Test for batch option and set batch = 1 (true)            *\n         * or - (false)                                              *\n         * --------------------------------------------------------- */\n         if pos(\"/\",option) > 0 then do\n            batch = 1\n            parse value option with \"/\" option\n            option = strip(option)\n            end\n         else batch = 0\n\n        /* ----------------------------------------------------- *\n         * Set defaults                  *custom*                *\n         *                                                       *\n         *  ldap_s is the host name of the ldap server           *\n         *  ldap_o is the o= and u= for your installation        *\n         * ----------------------------------------------------- *\n         * Examples:                                             *\n         * ldap_s     = \"mailhub.kp.org\"                         *\n         * ldap_o     = \"o=Kaiser Permanente,c=US\"               *\n         * ----------------------------------------------------- */\n         ldap_s     = \"mailhub.kp.org\"\n         ldap_o     = \"o=Kaiser Permanente,c=US\"\n         dd         = \"ldap\"random(999)\n         ldap_table = dd\n         null       = \"\"\n         error      = 0\n\n        /* ----------------------------------------------------- *\n         * Test to see if this is enabled                        *\n         * ----------------------------------------------------- */\n         if ldap_s = 0 then do\n            zedsmsg = \"Invalid\"\n            zedlmsg = \"This function is not enabled on your system\".\n            if batch then say zedlmsg\n            else Address ISPExec \"Setmsg msg(isrz001)\"\n            exit 4\n            end\n\n        /* ----------------------------------------------------- *\n         * If no parameters call the display routine             *\n         * ----------------------------------------------------- */\n         if length(option) > 0 then call test_option\n                              else error = 1\n         if batch then\n            if error = 1 then do\n            say \"Error - no valid options provided.\" ,\n                \"Try again.\"\n            exit 4\n            end\n            else signal start\n         if error = 1 then signal display\n                      else Address ISPExec \"Control Nondispl Enter\"\n\n        /* ----------------------------------------------------- *\n         * Display the prompt panel for input                    *\n         * ----------------------------------------------------- */\n         Display:\n         error = 0\n         do forever\n            Address ISPExec\n            \"Display Panel(LDAPMLP)\"\n            if rc > 4 then exit 4\n            call test_option\n            if error = 0 then call start\n            end\n\n        /* ----------------------------------------------------- *\n         * Start of the process                                  *\n         * ----------------------------------------------------- */\n         Start:\n         Address TSO\n\n        /* ----------------------------------------------------- *\n         * Allocate the work file for the ldap search            *\n         * ----------------------------------------------------- */\n         \"Alloc f(\"dd\") ds(\"dd\".list) new spa(90,90) tr\"\n\n        /* ----------------------------------------------------- *\n         * Now invoke the ldap search command.                   *\n         * ----------------------------------------------------- */\n         cmd = 'GLDSRCH ENVAR(\"LIBPATH=/\")' ,\n               '/ -h' ldap_s '-b \"'ldap_o'\"' ,\n               '\"cn='option'\"' ,\n               \">DD:\"dd\n         cmd\n\n        /* ----------------------------------------------------- *\n         * Read the results and free/delete the work file        *\n         * ----------------------------------------------------- */\n         \"Execio * diskr\" dd \" (finis stem ldap.\"\n         call msg 'off'\n         \"Free f(\"dd\")\"\n         \"delete \"dd\".list\"\n\n        /* ----------------------------------------------------- *\n         * Test to see if we had any hits                        *\n         * ----------------------------------------------------- */\n         if ldap.0 = 0 then do\n            zedsmsg = \"Not Found\"\n            zedlmsg = \"Name:\" option \"not found - try again\"\n            if batch then say zedlmsg\n                     else Address ISPExec \"Setmsg msg(isrz001)\"\n            return\n            end\n\n        /* ----------------------------------------------------- *\n         * Setup Table environment                               *\n         * ----------------------------------------------------- */\n         cn    = 0\n         table = 0\n         if batch = 0 then\n            Address ISPExec\n\n        /* ----------------------------------------------------- *\n         * Now process thru the results getting name/address     *\n         * ----------------------------------------------------- */\n         do i = 1 to ldap.0\n            work = strip(ldap.i)\n            /* sample preferredRfc822Originator=Lionel.B.Dyck@kp.org */\n            work = translate(work,\" \",\"=\")\n            if word(work,1) = \"preferredRfc822Originator\" then do\n                eaddr = word(work,2)\n                parse value eaddr with ename\"@\".\n                ename = translate(ename,\" \",\".\")\n                if words(ename) = 3 then do\n                   parse value ename with ln mn rn\n                   ename = ln mn\".\" rn\n                   end\n                call add_address\n                end\n            end\n\n        /* --------------------------------------------------------- *\n         * If batch mode then exit now                               *\n         * --------------------------------------------------------- */\n         if batch then exit 0\n\n        /* ----------------------------------------------------- *\n         * Display the LDAP Results Table                        *\n         * ----------------------------------------------------- */\n          mult_sels = 0\n          crp = 1\n          rowcrp = 0\n          disp:\n          do forever\n             zcmd = null\n             if mult_sels = 0 then do\n               \"TBTop\" ldap_table\n               \"TBSkip\" ldap_table \"Number(\"crp\")\"\n                  \"TBDispl\" ldap_table \"Panel(ldapmlt)\" ,\n                          \"Csrrow(\"rowcrp\") AutoSel(No)\"\n               end\n             else\n               \"TBDispl\" ldap_table\n             t_rc = rc\n             mult_sels = ztdsels\n             if t_rc > 7 then do\n                \"TBEnd\" ldap_table\n                return\n                end\n               zsel = null\n          end\n\n         return\n\n        /* ----------------------------------------------------- *\n         * If option is * or x* or *x then set error as too      *\n         *    many names could be returned with that query.      *\n         * ----------------------------------------------------- */\n         Test_option:\n         error = 0\n         if option = \"*\" then error = 1\n         if length(option) = 2 then do\n            if right(option,1) = \"*\" then error = 1\n            if left(option,1)  = \"*\" then error = 1\n            end\n         if error = 1 then do\n            zedsmsg = \"Error!\"\n            zedlmsg = \"A name of\" option \"is too generic.  Try\" ,\n                      \"somthing more specific.\"\n            if batch then say zedlmsg\n                     else Address ISPExec \"Setmsg msg(isrz001)\"\n            end\n         return\n\n        /* ----------------------------------------------------- *\n         * Add the name and address to our selection table       *\n         * ----------------------------------------------------- */\n         Add_Address:\n         if batch then do\n            say \"Name:\" ename\n            say \"Addr:\" eaddr\n            return\n            end\n         if table = 0 then call open_table\n         \"TBAdd\" ldap_table \"order\"\n         return\n\n        /* ----------------------------------------------------- *\n         * Open the ldap mail lookup table                       *\n         * ----------------------------------------------------- */\n         Open_Table:\n         table = 1\n         \"TBCreate\" ldap_table \"Names(ename lact eaddr) Share\"\n         \"TBSort\"   ldap_table \"Fields(ename,c,a)\"\n         return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LDAPMLP": {"ttr": 10, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00H\\x01\\x00\\x10O\\x01\\x002\\x1f\\x123\\x00\\x15\\x00U\\x00\\x00\\xe2\\xe8\\xe2\\xd3\\xc2\\xc4@@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2000-04-13T00:00:00", "modifydate": "2000-11-16T12:33:48", "lines": 21, "newlines": 85, "modlines": 0, "user": "SYSLBD"}, "text": ")Attr Default(%+_)\n/* + type(text  ) intens(low )                   information only  */\n   _ type( input) intens(high) caps(off) just(left )\n   ` type(text) intens(high) caps(off) just(left ) color(blue)\n   % type(text) intens(high)\n   ~ type(text) intens(high) color(blue) hilite(reverse)\n)Body Expand(\\\\)\n%-\\-\\- ~E-Mail Lookup by Name%-\\-\\-\n%Command ===>_Zcmd\n`\n`Enter a name for lookup: _option\n`\n` Valid formats for the name are:  First*\n`                                  First x*\n`                                  *Last\n`\n)Init\n .cursor = option\n)Proc\n ver (&option,nb)\n)End\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LDAPMLT": {"ttr": 8, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0c\\x00I\\x00\\x99\\x18\\x7f\\x01\\x002\\x1f\\t'\\x00\\x19\\x00\\x1d\\x00\\x00\\xe2\\xe8\\xe2\\xd3\\xc2\\xc4@@@@\"", "ispf": {"version": "01.12", "flags": 0, "createdate": "1999-07-06T00:00:00", "modifydate": "2000-11-16T09:27:49", "lines": 25, "newlines": 29, "modlines": 0, "user": "SYSLBD"}, "text": ")Attr Default(%+_)\n/* % type(text  ) intens(high)              Defaults displayed for */\n/* + type(text  ) intens(low )                   information only  */\n/* _ type( input) intens(high) caps(on ) just(left )               */\n   $ type(output) intens(low ) caps(off) just(asis ) pad(' ')\n   # type(output) intens(high) caps(off) just(asis ) pad(' ')\n     hilite(uscore)\n   ~ type(text) intens(high) color(blue) hilite(reverse)\n)Body  Expand(//)\n%-/-/- ~E-Mail Address Lookup% -/-/-\n%Command ===>_zcmd                                 / /%Scroll ===>_amt +\n%\n+\n%     Recipients Name\n+        E-Mail Address\n+\n)Model\n+    $z\n+       #z\n)Init\n  .ZVARS = '(ename eaddr)'\n  &amt = csr\n)Reinit\n)Proc\n)End\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT312/CBT.V500.FILE312.PDS/LDAPMAIL.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT312/CBT.V500.FILE312.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}