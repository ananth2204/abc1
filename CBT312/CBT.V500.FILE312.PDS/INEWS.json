{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "T311LBD", "INMTNODE": "X", "INMTUID": "Y", "INMFTIME": "20170215194114000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 27920, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "T311LBD.INEWS.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"T311LBD.INEWS.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27920, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 32760, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "170046", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\x03'", "DS1LSTAR": "b'\\x00\\r\\x02'", "DS1TRBAL": "b'\\xd2\\xa4'"}, "COPYR2": {"deb": "b'\\x04\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x10P\\x00\\x04\\x95p0'", "extents": ["b'\\x04\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x10P\\x00\\x04\\x95p0'", "b'X\\x9f\\x89\\xe8\\x00\\x00\\x02\\xc9\\x00\\x07\\x02\\xc9\\x00\\r\\x00\\x07'", "b'X\\x9f\\x89\\xe8\\x00\\x00\\x05j\\x00\\x00\\x05j\\x00\\x02\\x00\\x03'", "b'X\\x9f\\x89\\xe8\\x00\\x00\\x05r\\x00\\x00\\x05r\\x00\\x02\\x00\\x03'", "b'X\\x9f\\x89\\xe8\\x00\\x00\\x05r\\x00\\x03\\x05r\\x00\\x05\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00\"\\x01\\x00\\x10\\x1f\\x01\\x17\\x04o\\x12U\\x00\\x96\\x00W\\x00\\x00\\xc9\\xd5\\xc5\\xe6@@@@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2000-04-10T00:00:00", "modifydate": "2017-02-15T12:55:22", "lines": 150, "newlines": 87, "modlines": 0, "user": "INEW"}, "text": "INEWS is an ISPF News based dialog.  It presents news items to the\nISPF user upon request, or optionally can be integrated into ISR@PRIM\nso that is presents new news items overtly. It can also be enabled, by\nthe user, to perform a check once each day when ISPF starts.\n\nInstallation:\n\n  - execute the $RECEIVE exec to expand the EXEC, MSGS, PANELS, and\n    SKELS members into partitioned datasets\n  - edit/tailor the INEWS exec for your shop\n    - dataset names\n    - admin userids\n    - more\n  - the print option uses an exec called %PPRINT which is not distributed\n    with this package as it is unique to each environment. Find *print*\n    in the INEWS exec for the routine to change for your environment.\n  - copy the EXEC, MSGS, PANELS and SKELS members into production level\n    libraries\n  - Allocate the two news libraries for the default news\n  - Allocate the two news libraries for the test news\n  - experiment using tso %inews test admin and tso %inews test\n    - this works with the test libraries until you are comfortable\n      and are ready to move to the default (production) libraries\n  - run the ADMIN dialog to generate some news items\n    - tso %inews admin\n\nThe user will have an option when the news is displayed, via the CHECK\ncommand, to enable automatic, once per day, checking for new and unread\nnews items. This is helpful if the optional ISPF panel updates are not\nimplemented and gives individual users control over the automatic check.\n\nSee the optional section at the end for information n how to force the\nautomatic checking for new news items once each day at ispf startup.\n\nAdministration\n\nTo administer this application enter %INEWS ADMIN to bring up the\nadministrative dialog.  Create new news items and then SAVE.  You may\nDELETE or UPDATE an existing news item. Note that if you use UPDATE be\naware the end user may not see the update as the tracking of which\nnews items the user has seen is stored in the users ISPF Profile in a\ntable.\n\nThe administrative options are documented on the table display panel.\n\nNote: Use option C (clone) to make a copy of an existing news item to\n      make updates to it. This gives the item a new number and thus it\n      will appear with a status of New for users that automatically\n      check for New and Unread items at ISPF startup. The old item\n      remains or can be deleted using option D.\n\nDetour: The dialog maintains a small ISPF table with one row in the\nusers ISPF Profile dataset.  This table contains a flag for each news\nitem indicating the users status in relation to the item. Thus if a news\nitem has been marked read then the user will not see any UPDATES to that\nnews item unless they explicitly view it.\n\nNote that the ADMIN updates are made to a working copy of the table\ndataset and at SAVE time all updates are copied into production.\n\nUser Interface\n\nThe user interface is a simple ISPF table.  If the INEWS command is\nentered without operands then the entire table is displayed.  If the\nINEWS command is entered with the NEW keyword then only NEW and UNREAD\nitems will be displayed. This is what the %inewsck exec does.\n\nThe following command and line options are available:\n\nCommand Options:  Find xxx    Search xxx   Refresh  XAll (mark all ignored)\nLine Options:     S -Select   U -Unread   X -Ignore   P -Print\n\nFind   will find the specified character string in the displayed title\n       text.\n\nRefresh will rebuild the news table and is designed for use after\n        a Search\n\nSearch will look for the specified word/string in all members and display\n       only those members which have that word.  This search is done\n       using ISPF SuperC (search-for).\n\nXALL   will mark all new and unread News items as Ignored.\n\nS      Select the current news item to browse\nU      Mark the current news item unread\nX      Mark the current news item ignored\nP      Print the current news item\n\nUsage:\n\nINEWS is entered by executing the Rexx procedure INEWS and providing one\nor more of the valid parameters:\n\nSyntax:   INEWS parameter1 parameter2\n\nParameter1:\n              NEWS     (default) defines the NEWS table to use\n              TEST     use the TEST news table\n\nOptional Parameter2:\n              NEW       Display the news ISPF table only if NEW or\n                        UNREAD items are in the table for the  user\n              DEBUG     Used to turn on REXX tracing for debugging purposes\n              ADMIN     Enable the administration application\n              TEST      Uses a test news table for testing purposes.\n              FORCE     If the table is locked by ADMIN and the lock is\n                        obsolete (for some reason that left the member\n                        LOCK in the news data set) this option will\n                        override the lock for administration purposes.\n\n>>> Optional <<<\nThe INEWS exec does require an update to ISR@PRIM and ISP@MSTR to\nforce a call to the %inewck exec to check for new and unread news items.\n\nAdd the following statements to the ISR@PRIM and ISP@MSTR ISPF Panels in\nthe )INIT section between the two existing statements:\n\n&ZSCLMPRJ = &Z      /* TUTORIAL INDEX - 1ST PAGE     @L1A*/  <== Existing\n\nIF (&ZSCREEN = 1)                /* lbd */\n  IF (&ZNEWDATE = &ZDATE)        /* lbd */\n     IF (&Z$SAVE \u00ac= &Z)          /* lbd */\n         &ZCMD   = &Z$SAVE       /* lbd */\n         &Z$SAVE = &Z            /* lbd */\n         .RESP     = ENTER       /* lbd */\n  IF (&ZNEWDATE NE &ZDATE)       /* lbd */\n      &Z$SAVE   = &ZCMD          /* lbd */\n      &ZCMD     = 'NF'           /* lbd */\n      &ZPDFINIT = 'DONE'         /* lbd */\n      .RESP     = ENTER          /* lbd */\n      &ZNEWDATE = &ZDATE         /* lbd */\n      VPUT (ZNEWDATE) PROFILE    /* lbd */\n\nIF (&ZLOGO = 'YES')                              /* CK@MJC*/  <== Existing\n\nThen in the )PROC section add this statement in the list of statements\nfor menu options:\n\n        NF,'CMD(%INEWSZST) NEWAPPL(ISR)'\n\nWhat this will do is the following:\n\n1. Each time the panel is called a check will be made for ZSCREEN 1 and\n   variable ZNEWSPAN and if it is DONE then that processing will be\n   skipped.\n2. If not DONE then setup the option to be NF to invoke the %INEWSCK\n   exec to check for new and unread news items.\n\n>>> End Optional <<<\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$RECEIVE": {"ttr": 6, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x19\\x01\\x00\\x10\\x1f\\x01\\x17\\x03\\x7f\\x10H\\x000\\x00\\x17\\x00\\x00\\xc9\\xd5\\xc5\\xe6@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2000-04-10T00:00:00", "modifydate": "2017-02-06T10:48:19", "lines": 48, "newlines": 23, "modlines": 0, "user": "INEW"}, "text": "        /* this rexx exec is expected to be invoked by the EXEC command\n           thus:\n           You will then need to copy these datasets/members into\n           datasets for production use.\n           */\n\n        parse source x1 x2 x3 x4 dsn .\n         x = PROMPT(\"ON\") /* enable prompting */\n\n        say \"Enter desired hlq for target data sets\",\n            \"(default is\" sysvar(\"syspref\")\".INEWS.NEW):\"\n        pull hlq\n        hlq = strip(hlq)\n\n        if hlq = \"\" then hlq = sysvar(\"syspref\")\".INEWS.NEW\"\n        hlq = translate(hlq)\n\n        Say \"Using HLQ:\" hlq\n\n        queue \"dsn('\"hlq\".exec')\"\n        \"Receive inds('\"dsn\"(exec)')\"\n        queue \"dsn('\"hlq\".skels')\"\n        \"Receive inds('\"dsn\"(skels)')\"\n        queue \"dsn('\"hlq\".msgs')\"\n        \"Receive inds('\"dsn\"(msgs)')\"\n        queue \"dsn('\"hlq\".panels')\"\n        \"Receive inds('\"dsn\"(panels)')\"\n\n        if sysvar('sysispf') <> \"ACTIVE\" then exit\n\n        /* ---------------------------------------------------- *\n         | Altlib to this PDS and invoke the RUNCFIX edit macro |\n         | to highlight the customization available in RUNC     |\n         |                                                      |\n         | Invoke RUNCFIX edit macro to update the tinews       |\n         | exec used for evaluating RUNC                        |\n         * ---------------------------------------------------- */\n         \"altlib activate dataset('\"dsn\"') application(exec)\"\n         Address ISPExec\n         \"Edit Dataset('\"dsn\"(\"tinews\")') macro(infix)\",\n               'parm(hlq)'\n         \"Edit Dataset('\"hlq\".exec(\"inews\")') macro(infix)\"\n         Address TSO\n         'altlib deactivate application(exec)'\n\n        Address ISPEXEC\n           \"Browse dataset('\"dsn\"($doc)')\"\n           \"Browse dataset('\"dsn\"(tinews)')\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXEC": {"ttr": 2308, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "INFIX": {"ttr": 8, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x003\\x01\\x17\\x03\\x7f\\x01\\x17\\x03\\x7f\\x10H\\x00\\x1d\\x00\\x16\\x00\\x00\\xc9\\xd5\\xc5\\xe6@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2017-02-06T00:00:00", "modifydate": "2017-02-06T10:48:33", "lines": 29, "newlines": 22, "modlines": 0, "user": "INEW"}, "text": "/* --------------------  rexx procedure  -------------------- *\n | Name:      inewsfix                                        |\n |                                                            |\n | Function:  ISPF Edit Macro to update the inews exec        |\n |            and the testinews exec                          |\n |                                                            |\n | Usage Notes: called by the $RECV process out of the        |\n |              inews distribution pds                        |\n |                                                            |\n | Dependencies:                                              |\n |                                                            |\n | Author:    Lionel B. Dyck                                  |\n |                                                            |\n | History:  (most recent on top)                             |\n |            02/03/17 - Creation                             |\n |                                                            |\n * ---------------------------------------------------------- */\n Address ISREdit\n 'Macro (hlq)'\n '(member) = member'\n if member = 'INEWS' then do\n    \"Find '*custom*' first\"\n    exit\n    end\n else do\n    \"c 'hlq.' '\"hlq\".' all\"\n    'save'\n    'end'\n    end\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MSGS": {"ttr": 3073, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PANELS": {"ttr": 3076, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SKELS": {"ttr": 3329, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "TINEWS": {"ttr": 4, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00W\\x01\\x17\\x03\\x7f\\x01\\x17\\x03\\x7f\\x106\\x00 \\x00 \\x00\\x00\\xc9\\xd5\\xc5\\xe6@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2017-02-06T00:00:00", "modifydate": "2017-02-06T10:36:57", "lines": 32, "newlines": 32, "modlines": 0, "user": "INEW"}, "text": "/* --------------------  rexx procedure  -------------------- *\n * Name:      tinews                                          *\n *                                                            *\n * Function:  dynamically allocate the inews libraries        *\n *            for testing purposes                            *\n *                                                            *\n * Syntax:    %tinews option                                  *\n *                                                            *\n *                                                            *\n * Author:    Lionel B. Dyck                                  *\n *                                                            *\n * History:                                                   *\n *            02/06/17 - Creation                             *\n *                                                            *\n * ---------------------------------------------------------- *\n * Copyright (c) 2017 by Lionel B. Dyck                       *\n * ---------------------------------------------------------- */\n arg option\n\n exec   = \"'hlq.exec'\"           /* changed during receive */\n skels  = \"'hlq.skels'\"          /* changed during receive */\n panels = \"'hlq.panels'\"         /* changed during receive */\n\n 'altlib activate dataset('exec') application(exec)'\n address ispexec\n 'libdef ispplib dataset id('panels') stack'\n 'libdef ispdlib dataset id('skels') stack'\n 'Select cmd(%inews' option') scrname(inews)'\n 'libdef ispplib'\n 'libdef ispllib'\n address tso\n 'altlib deactivate application(exec)'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT312/CBT.V500.FILE312.PDS/INEWS.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT312/CBT.V500.FILE312.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}