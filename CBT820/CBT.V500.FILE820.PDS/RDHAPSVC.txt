//RDHAPSVC JOB (0,0),'HARPER',REGION=4M,
//    CLASS=A,MSGCLASS=H,MSGLEVEL=(1,1)
//*
//JCLLIB  JCLLIB ORDER=('SBGOLOB.CBT482.FILE820')
//*
//****************************************
//*       ASM STEP
//****************************************
//*
//ASM     EXEC ASMCL,MOD=RDHAPSVC
//ASM.SYSIN    DD  *
*
***********************************************************************
* Copyright (c) 2006 - Richard D. Harper, All Rights Reserved         *
***********************************************************************
*                                                                     *
*   This file is part of Richard Harper's Private Development         *
* Platform (PDP).                                                     *
*                                                                     *
*   Richard Harper's PDP is free software: you can redistribute       *
* it and/or modify it under the terms of the GNU General Public       *
* License as published by the Free Software Foundation, either        *
* version 3 of the License, or (at your option) any later version.    *
*                                                                     *
*   Richard Harper's PDP is distributed in the hope that it will      *
* be useful, but WITHOUT ANY WARRANTY; without even the implied       *
* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    *
* See the GNU General Public License for more details.                *
*                                                                     *
*   You should have received a copy of the GNU General Public         *
* License along with Richard harper's PDP.  If not, see               *
* <http://www.gnu.org/licenses/>.                                     *
*                                                                     *
***********************************************************************
*
***********************************************************************
*                                                                     *
** RDHAPSVC - TSO APF Authorization SVC - 168                         *
*                                                                     *
*    This program is an MVS SVC that is used by MERLIN for the        *
*  purpose of obtaining APF Authorization within a TSO/ISPF           *
*  environment.                                                       *
*                                                                     *
*                                                                     *
*  Date     FIX-ID Programmer Description                             *
*  ======== ====== ========== ======================================= *
*  02/02/06  M001  R. Harper  Module Developed                        *
*                                                                     *
***********************************************************************
*
*---------------------------------------------------------------------*
* Define MVS System Data Areas                                        *
*---------------------------------------------------------------------*
*
         PRINT  OFF
         IHAPSA ,                     Define PSA DSECT Area
         PRINT  ON
*
***********************************************************************
* RDHAPSVC - Program Main Entry Point                                 *
***********************************************************************
*
         USING  PSA,R0                  Define PSA Addressability
*
RDHAPSVC SVCNTRY SVCNO=168,PRINT=GEN,TRACE=NO Program Entry Code
*
         GOSUB INIT                    Perform Initialization
         GOSUB MAIN                    Do Main Processing
         GOSUB TERM                    Do Termination Processing
*
** Return to Caller
*
MAINEXIT DS    0H
         SVCEXIT RC=0                  Define Program Exit Code

***********************************************************************
* MAIN- Program Main Processing                                       *
***********************************************************************
*
MAIN     SUBNTRY ,
         LM R0,R1,RBEXSAVE+12          Reload parameter Regs
         IF (C,R1,EQ,=A(C'AUTH'))      Request for Authorization?
            L R4,PSATOLD               Get our TCB Address
            L R4,TCBJSTCB              Get job Step TCB Addreee
            L R14,TCBJSCB              Get JSCB Address
            USING IEZJSCB,R14          & Addressability
            IF (CH,R0,EQ,=Y(1))        If Request to Authorize?
               OI JSCBOPTS,JSCBAUTH       Authorize This Task
            ELSE ,                     Else
               NI JSCBOPTS,HEXFF-JSCBAUTH Remove Authorizationre
            ENDIF ,
         ELSE ,
         ENDIF ,
*
** Return to Caller
*
MAINEND  DS    0H
         SUBEXIT ,
         DROP R14                      Drop Temp bases

***********************************************************************
* INIT - Perform Program Initialization                               *
***********************************************************************
*
INIT     SUBNTRY ,                 -*- Open SYSPRINT File
*
** Return to Caller
*
INITEND  DS    0H
         SUBEXIT ,
***********************************************************************
* TERM - Perform Program Termination                                  *
***********************************************************************
*
TERM     SUBNTRY ,
*
** Return to Caller
*
TERMEND  DS    0H
         SUBEXIT ,

***********************************************************************
*  Literials and Constants                                            *
***********************************************************************
*
HEXFF    EQU   X'FF'
*
         LTORG ,                       Define literal Pool

***********************************************************************
* Define DSECT Areas                                                  *
***********************************************************************
*
         IEZJSCB ,                     Define JSCB Control Block

***********************************************************************
* Define Dynamic Storage Area - DSA                                   *
***********************************************************************
*
         DSABEG ,                 <*** Begin Dynamic Storage Area
*
DSARC    DS    F                       Return Code
DSAPRWD1 DS    F
*
DSAFLAG  DS    B                       Flag Byte
*
         DSAEND ,                 <*** End Dynamic Storage Area
         END ,
