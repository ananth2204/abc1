***********************************************************************
* Copyright (c) 2006 - Richard D. Harper, All Rights Reserved         *
***********************************************************************
*                                                                     *
*   This file is part of Richard Harper's Private Development         *
* Platform (PDP).                                                     *
*                                                                     *
*   Richard Harper's PDP is free software: you can redistribute       *
* it and/or modify it under the terms of the GNU General Public       *
* License as published by the Free Software Foundation, either        *
* version 3 of the License, or (at your option) any later version.    *
*                                                                     *
*   Richard Harper's PDP is distributed in the hope that it will      *
* be useful, but WITHOUT ANY WARRANTY; without even the implied       *
* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    *
* See the GNU General Public License for more details.                *
*                                                                     *
*   You should have received a copy of the GNU General Public         *
* License along with Richard harper's PDP.  If not, see               *
* <http://www.gnu.org/licenses/>.                                     *
*                                                                     *
***********************************************************************
*
***********************************************************************
*                                                                     *
** RDHINSTL - Install and Remove an SVC From the SVC Table            *
*                                                                     *
*                                                                     *
*  Date     FIX-ID Programmer Description                             *
*  ======== ====== ========== ======================================= *
*  00/00/00  M001  R. Harper  Module Developed                        *
*                                                                     *
***********************************************************************
*
         USING PSA,R0                  Define PSA Addressability
*
RDHINSTL PGMNTRY TYPE=MAIN,            Define Program Entry Code       *
               BASE=(R11,R12),                                         *
               TRACE=NO,                                               *
               IMP=BASR,                                               *
               PRINT=GEN
*
         GOSUB INIT                    Perform Initialization
         IF (CLC,DSARC,EQ,=F'0')       If Initialized
            GOSUB MAIN                 Do Main Processing
         ENDIF ,
         GOSUB TERM                    Do Termination Processing
*
** Return to Caller
*
MAINEXIT DS    0H
         PGMEXIT RC=0                  Define Program Exit Code

***********************************************************************
* MAIN- Program Main Processing                                       *
***********************************************************************
*
MAIN     SUBNTRY ,
         IF (TM,DSAFLAG,DSADMP,O)
            GOSUB DUMP
         ELSEIF (TM,DSAFLAG,DSAINS,O)
            GOSUB INSERT
            GOSUB DUMP
         ELSEIF (TM,DSAFLAG,DSAREM,O)
            GOSUB REMOVE
            GOSUB DUMP
         ELSEIF (TM,DSAFLAG,DSAREP,O)
            GOSUB DUMP
            GOSUB REPLACE
            GOSUB DUMP
         ENDIF ALL
*
** Return to Caller
*
MAINEND  DS    0H
         SUBEXIT ,

***********************************************************************
* INSERT - Add an SVC to the SVC Table                                *
***********************************************************************
*
INSERT   SUBNTRY ,
         L     R3,16                    Get CVT Address
         USING CVT,R3                   Change Addressability
         L     R3,CVTABEND              Get Address of SCVT
         USING SCVTSECT,R3              Change Addressability
*
** Build Table of Unique SVC Entry Points
*
         L  R3,SCVTSVCT                 Get Address of SVCTABLE
         LA R4,256                      Loop All SVC Table Entries
         DO FROM=(R4)                   (Same)
            LA R5,DSASVCTB              SVC Addr Counts A(Addr,Cnt)
            LA R6,256                   (Same)
            DO FROM=(R6)                (Same)
               IF (CLC,0(4,R5),EQ,0(R3))    If Entry Found
                  L  R1,4(,R5)              Increment The Count
                  LA R1,1(,R1)              (Same)
                  ST R1,4(,R5)              (Same)
                  DOEXIT ,                  -> Done This SVC
               ELSEIF (CLC,=F'0',EQ,0(R5))  If at End of Table
                  MVC 0(4,R5),0(R3)         Add New Entry This SVC Addr
                  MVC 4(4,R5),=F'1'         Set Count to One
                  DOEXIT ,                  -> Done This SVC
               ELSE ,
                  LA R5,8(,R5)          Bump to Next SVC Counter
               ENDIF ALL
            ENDDO ,                     -> Loop
            LA R3,8(,R3)                Bump to Next SVCTABLE Entry
         ENDDO ,                        -> Loop
*
** Get Address of Free SVC Entry
*
         LA R5,DSASVCTB                Get SVC Addr Count Talbe
         LA R6,256                     Max Count of Entries
         L  R7,4(,R5)                  Get Count For This SVC
         DO FROM=(R6)                  Loop All Entries
            IF (C,R7,LT,4(,R5))        This Entry Have Larger Count?
               L R7,4(,R5)             The Use This One
               MVC DSAFRSVC,0(R5)      Save Free SVC Address
            ENDIF ,
            IF (CLC,=F'0',EQ,0(R5))    If at End of Table?
               DOEXIT ,                -> Exit
            ENDIF ,
            LA R5,8(,R5)               Bump to Next Entry
         ENDDO ,
*
** Locate The SVC and See if It's a Free One
*
         L     R3,16                   Get CVT Address
         USING CVT,R3                  Change Addressability
         L     R3,CVTABEND             Get Address of SCVT
         USING SCVTSECT,R3             Change Addressability
         L  R3,SCVTSVCT                Get Address of SVCTABLE
         LH R4,DSABSVC                 Get Binary SVC Number
         SLL R4,3                      Times 8 For Offset
         LA  R4,0(R3,R4)               Point at SVC Entry
         IF (CLC,DSAFRSVC,NE,0(R4))    If SVC Was Not Free?
            GOSUB MSG002I              ...Issue Message
            MVC DSARC,=F'12'           ...Set Return Code
         ELSE ,
            GOSUB LOADSVC              Load the SVC Into Storage
            LH R2,DSABSVC              Get Binary SVC Number
            L  R3,DSASVCAD             Get Address of SVC
            O  R3,=A(X'80000000')      Set for 31-Bit Mode
            LA R4,DSASVCNM             Get Name of SVC
            MVC DSASVCU(CONSVCUL),CONSVCU  Set PLIST in DSA
            SVCUPDTE (R2),             Replace Existing SVC Entry      *
               EP=(R3),                (Same)                          *
               MF=(E,DSASVCU)          (Same)
         ENDIF ,
*
** Return to Caller
*
INSEND   DS    0H
         SUBEXIT ,
         DROP R3                       Drop Temp Addressability

***********************************************************************
* LOADSVC - Load the SVC Into CSA Storage                             *
***********************************************************************
*
LOADSVC  SUBNTRY ,
         MVC DSASDCB(STPDCBL),STPDCB    Move DCB to Common
         MVC DSAOPL(CONOPLL),CONOPL    Move Open Parm to Common
         OPEN (DSASDCB,(INPUT)),       Open Sysout Dataset             *
               MF=(E,DSAOPL)           (Same)
*
         MVC   DSALOAD1(LOAD1L),LOAD1  Move List Form to DSA
         LOAD  EPLOC=DSASVCNM,         Initial Load of SVC             *
               SF=(E,DSALOAD1)         (Same)
*
** Obtain Length of SVC for Getmain
*
         L     R3,PSATOLD              Get Our TCB Address
         USING TCB,R3                  And Addressability
         L     R3,TCBLLS               Get Load List Ellement Chain
         USING LLE,R3                  And Addressability
         L     R4,LLECDPT              Get CDE for LLE
         USING CDENTRY,R4              And Addressability
*
         DO INF                             Loop Forever
            IF (CLC,CDNAME,EQ,DSASVCNM)     Found Our SVC?
               L R14,CDXLMJP                Get Extent List Pointer
               USING XTLST,R14              And Addressability
               XR  R1,R1                    Zero Work Register
               ICM R1,B'0111',XTLMSBLN      Get Length of SVC
               ST  R1,DSASVCLN              Set Length of SVC
               DOEXIT ,                     -> Done
            ENDIF ,
            L  R3,LLECHN                    Get Next LLE
            IF (LTR,R3,R3,Z)                If Last LLE...
               MVC DSARC,=F'12'             Issue Bad RC
               GOSUB MSG003I                And Message
               DOEXIT ,                     -> Done
            ELSE ,
               L R4,LLECDPT                 Get CDE for LLE
            ENDIF ,
         ENDDO ,
*
** Get Storage for SVC in Subpool 241 CSA Common
*
         IF (CLC,DSARC,EQ,=F'0')       If Good Thus Far?
            L R0,DSASVCLN              Get Length of SVC
            STORAGE OBTAIN,            Obtain Storage for SVC          *
               LENGTH=(0),             (Same)                          *
               SP=241,                 (Same)                          *
               BNDRY=PAGE,             (Same)                          *
               LOC=(31,ANY)            (Same)
            ST R1,DSASVCAD             Save Address to Load SVC
         ENDIF ,
*
** Load SVC into Subpool 241 Storage
*
         IF (CLC,DSARC,EQ,=F'0')       If Good Thus Far?
            MVC DSALOAD1(LOAD1L),LOAD1 Move List Form to DSA
            L   R2,DSASVCAD            Get SVC Address
            LOAD EPLOC=DSASVCNM,       Final Load of SVC Into CSA      *
               ADDR=(2),               (Same)                          *
               DCB=DSASDCB,            (Same)                          *
               SF=(E,DSALOAD1)         (Same)
            MVC 12(4,R2),DSASVCLN      Save Old SVC Addr in Protocol
            MVC 16(4,R2),DSAFRSVC      Save Old SVC Addr in Protocol
         ENDIF ,
*
         MVC DSACLO(CONCLOL),CONCLO   Move Close Parm to Common
         CLOSE (DSASDCB),             Close Sysout Dataset             *
               MF=(E,DSACLO)          (Same)
*
** Return to Caller
*
LOADEND  DS    0H
         SUBEXIT ,
         DROP  R3,R4,R14               Drop Temp Addressability

***********************************************************************
* REMOVE - Remove an SVC From the SVC Table                           *
***********************************************************************
*
REMOVE   SUBNTRY ,
*
** Locate The SVC to Remove
*
         L     R3,16                   Get CVT Address
         USING CVT,R3                  Change Addressability
         L     R3,CVTABEND             Get Address of SCVT
         USING SCVTSECT,R3             Change Addressability
         L  R3,SCVTSVCT                Get Address of SVCTABLE
         LH R4,DSABSVC                 Get Binary SVC Number
         SLL R4,3                      Times 8 For Offset
         LA  R4,0(R3,R4)               Point at SVC Entry
         L   R5,0(,R4)                 Get EP Address of SVC
         ST  R5,DSASVCAD               And Save it
         MVC DSASVCLN,12(R5)           Set Size in DSA
         IF (CLC,DSASVCNM,NE,4(R5))    If This Not Our SVC?
            GOSUB MSG004I              ...Issue Message
            MVC DSARC,=F'12'           ...Set Return Code
         ELSE ,
            LH R2,DSABSVC              Get Binary SVC Number
            L  R3,DSASVCAD             Get Address of SVC
            L  R3,16(,R3)              Get Previous SVC Address
            LA R4,DSASVCNM             Get Name of SVC
            MVC DSASVCU(CONSVCUL),CONSVCU  Set PLIST in DSA
            SVCUPDTE (R2),             Replace Existing SVC Entry      *
               EP=(R3),                (Same)                          *
               MF=(E,DSASVCU)          (Same)
            GOSUB MSG005I              Issue Waiting Message
            STIMER WAIT,               Wait for 30 Seconds             *
               BINTVL=WAITTIME         (Same)
         ENDIF ,
*
** Free Storage for SVC
*
         IF (CLC,DSARC,EQ,=F'0')       If Good Thus Far?
            L R0,DSASVCLN              Get Length of SVC
            L R1,DSASVCAD              Save Address to Load SVC
            STORAGE RELEASE,            Obtain Storage for SVC         *
               LENGTH=(0),              (Same)                         *
               ADDR=(1),                (Same)                         *
               SP=241                   (Same)
            GOSUB MSG006I               Issue Done Message
         ENDIF ,
*
** Return to Caller
*
REMOVEND DS    0H
         SUBEXIT ,
*
WAITTIME DC    F'500'                 Wait for 5 Seconds

***********************************************************************
* REPLACE - Replace the Current SVC With a New Version                *
***********************************************************************
*
REPLACE  SUBNTRY ,
         GOSUB REMOVE                  Remove the Existing SVC
         GOSUB INSERT                  And Insert the New Version
*
** Return to Caller
*
REPLAEND DS    0H
         SUBEXIT ,

***********************************************************************
* DUMP - Dump the SVC Table to SYSPRINT                               *
***********************************************************************
*
DUMP     SUBNTRY ,
         L     R3,16                    Get CVT Address
         USING CVT,R3                   Change Addressability
         L     R3,CVTABEND              Get Address of SCVT
         USING SCVTSECT,R3              Change Addressability
         L     R3,SCVTSVCT              Get Address of SVCTABLE
         ST    R3,DSAWORKF              Get Address in Char
         UNPK  DSAWKCL9,DSAWORKF(5)     (Same)
         TR    DSAWKCL9(8),HEXTABLE-240 (Same)
*
         MVC   DSAPLINE,CONHEAD1        Prepare Print Line
         MVC   DSAPLINE+39(8),DSAWKCL9  (Same)
         PUT   DSADCB,DSAPLINE          Print 1st Heading
         MVC   DSAPLINE,=CL121' '       Print Blank Line
         PUT   DSADCB,DSAPLINE          Print 1st Heading
         MVC   DSAPLINE,CONHEAD2        Second Heading
         PUT   DSADCB,DSAPLINE          Print 1st Heading
         MVC   DSAPLINE,CONHEAD3        Third Heading
         PUT   DSADCB,DSAPLINE          Print 2nd Heading
*
SVCT     #TRACE DATA=('SVCTABLE',0(R3),256*8)
*
** Print SVC Table
*
         LA R4,128                   Number of lines to Print
         XR R5,R5                    Initial Offset
         XR R6,R6                    Initial SVC Number
         DO FROM=(R4)                Loop Through Table
            MVC DSAPLINE,CDATA       Initialize Line
*
            ST R5,DSAWORKF                Get Offset in Char
            UNPK DSAWKCL9,DSAWORKF(5)     (Same)
            TR DSAWKCL9(8),HEXTABLE-240   (Same)
            MVC DSAPLINE+2(4),DSAWKCL9+4  (Same)
*
            CVD R6,DSAWORKD               Get SVC No in Char
            UNPK DSAWKCL9(3),DSAWORKD+6(2)   (Same)
            OC  DSAWKCL9(3),=3C'0'        (Same)
            MVC DSAPLINE+10(3),DSAWKCL9   (Same)
*
            MVC DSAWORKF,0(R3)          Get Data in Char
            UNPK DSAWKCL9,DSAWORKF(5)   (Same)
            TR DSAWKCL9(8),HEXTABLE-240 (Same)
            MVC DSAPLINE+17(8),DSAWKCL9 (Same)
*
            MVC DSAWORKF,4(R3)          Get Data in Char
            UNPK DSAWKCL9,DSAWORKF(5)   (Same)
            TR DSAWKCL9(8),HEXTABLE-240 (Same)
            MVC DSAPLINE+26(8),DSAWKCL9 (Same)
*
            MVC DSAWORKF,8(R3)          Get Data in Char
            UNPK DSAWKCL9,DSAWORKF(5)   (Same)
            TR DSAWKCL9(8),HEXTABLE-240 (Same)
            MVC DSAPLINE+39(8),DSAWKCL9 (Same)
*
            MVC DSAWORKF,12(R3)         Get Data in Char
            UNPK DSAWKCL9,DSAWORKF(5)   (Same)
            TR DSAWKCL9(8),HEXTABLE-240 (Same)
            MVC DSAPLINE+48(8),DSAWKCL9 (Same)
*
            PUT DSADCB,DSAPLINE      Print Line
            LA  R5,16(,R5)           Bump Offset
            LA  R6,2(,R6)            Bump SVC No
            LA  R3,16(,R3)           Bump Position
         ENDDO ,
*
** Return to Caller
*
DUMPEND  DS    0H
         SUBEXIT ,
         DROP R3                        Drop Temp Addressability
CDATA    DC    CL121'  0000    111    00000000 00000000     00000000 00*
               000000'

***********************************************************************
* INIT - Perform Program Initialization                               *
***********************************************************************
*
INIT     SUBNTRY ,                 -*- Open SYSPRINT File
         ST R1,DSASAVR1                 Save Parm Value
         IFNTIOT DDNAME=SYSPRINT       Is it Allocated?
            MVC DSADCB(CONDCBL),CONDCB Move DCB to Common
            MVC DSAOPL(CONOPLL),CONOPL Move Open Parm to Common
            OPEN (DSADCB,(OUTPUT)),    Open Sysout Dataset             *
               MF=(E,DSAOPL)           (Same)
OPENS    #TRACE MSG='DCB HAS Been Opened.',REGS=(R15)
         ENDIF ,
*                                  -*- Check for PARM= Data
         L  R2,DSASAVR1                Get Parameter Address
         L  R2,0(,R2)                  Get Address of PARM Values
         XR R3,R3                      Zero Work Register
         IC R3,1(,R2)                  Get Length of Data
         LA R2,2(,R2)                  Point at Actual Data
         IF (LTR,R2,R2,NZ)             If We Have PARM= Data
            GOSUB PARM                 ..Go Process It
         ENDIF ,
*
** Return to Caller
*
INITEND  DS    0H
         SUBEXIT ,

***********************************************************************
* PARM - Retreive Values from PARM= Parameter                         *
*                                                                     *
*        On Entry - R2 -> Address of PARM= Data                       *
*                   R3 -> Length  of PARM= Data                       *
*                                                                     *
*        PARM='INSERT,SVCNAME,999'                                    *
*                                                                     *
***********************************************************************
*
PARM     SUBNTRY ,
         BCTR R3,0                     Decrement Length for Assembler
         MVC DSAPARMV(*-*),0(R2)       Move PARM= Data to DSA
         EX  R3,*-6                    (Same)
         LA  R2,DSAPARMV               Set New Beginning Address
         LA  R3,1(,R3)                 Restore Proper Length
         OC  DSAPARMV,=CL128' '        Assure Upper Case
PPARM    #TRACE MSG=('PARM: ',DSAPARMV,' ')
*
         IF (CLC,=C'INSERT,',EQ,0(R2))     Insert a New SVC?
            LA  R2,7(,R2)                  Point Past Command
            AHI R3,-7                      Decrement Length
            OI DSAFLAG,DSAINS              Indicate Insert Request
         ELSEIF (CLC,=C'REMOVE,',EQ,0(R2)) Remove and SVC?
            LA  R2,7(,R2)                  Point Past Command
            AHI R3,-7                      Decrement Length
            OI DSAFLAG,DSAREM              Indicate a Remove Request
         ELSEIF (CLC,=C'REPLACE,',EQ,0(R2)) Replace and SVC?
            LA  R2,8(,R2)                  Point Past Command
            AHI R3,-8                      Decrement Length
            OI DSAFLAG,DSAREP              Indicate a Remove Request
         ELSEIF (CLC,=C'DUMP',EQ,0(R2))    Dump SVCTABLE Request?
            OI DSAFLAG,DSADMP              Indicate a Dump Request
         ENDIF ALL
SFLAG    #TRACE MSG=('Flag: ',DSAFLAG,' '),DATA=('DATA',0(R2),44)
*
** Extract Program Name and SVC Number
*
         MVC DSACSVC,=C'000'           Prep Receiving Field
         IF (TM,DSAFLAG,DSADMP,Z),AND, If Nor a Dump Request           *
               (CLC,DSARC,EQ,=F'0')    And Not Previous Failure
            MVC DSASVCNM,=8C' '        Zero Work Area
            LA R4,DSASVCNM             Point at Workarea
            DO FROM=(R3)               Loop Residual Length
               IF (CLI,0(R2),NE,C',')  Search for Comma
                  MVC 0(1,R4),0(R2)    Save SVC LMOD Name
                  LA R2,1(,R2)         Bump Input Pointer
                  LA R4,1(,R4)         Bump Output Pointer
               ELSE ,
                  MVC DSACSVC,1(R2)    Move 3-Digit SVC Number
                  PACK DSAWORKD,DSACSVC Get SVC Number as Packed
                  CVB R1,DSAWORKD      Get it in Binary
                  STH R1,DSABSVC       Save Binary Value
                  DOEXIT ,             -> Exit
               ENDIF ,
            ENDDO ,
         ENDIF ,
*
         IF (TM,DSAFLAG,DSADMP,Z),AND, If Nor a Dump Request           *
               (CLC,DSACSVC,EQ,=C'000')   And Not Have SVC #
            MVC DSARC,=F'12'              Indicate This
            GOSUB MSG001I                 And Tell User
         ENDIF ,
*
** Return to Caller
*
PARMEND  DS    0H
         SUBEXIT ,

***********************************************************************
* TERM - Perform Program Termination                                  *
***********************************************************************
*
TERM     SUBNTRY ,
         LA  R1,DSADCB                 Get Address of SYSPRINT DCB
         USING IHADCB,R1               & Addressability
         IF (TM,DCBOFLGS,DCBOFOPN,O)   If DCB is OPEN
            MVC DSACLO(CONCLOL),CONCLO Move Close Parm to Common
            CLOSE (DSADCB),            Close Sysout Dataset            *
               MF=(E,DSACLO)          (Same)
         ENDIF ,
*
** Return to Caller
*
TERMEND  DS    0H
         SUBEXIT ,
         DROP  R1                      Drop Temp Addressability

***********************************************************************
*  Messages                                                           *
***********************************************************************
*
MSG001I  SUBNTRY ,
         MVC DSAPLINE,CON0001I         Message to Print
         PUT DSADCB,DSAPLINE           Print Message
         SUBEXIT ,
*
MSG002I  SUBNTRY ,
         MVC DSAPLINE,CON0002I         Message to Print
         PUT DSADCB,DSAPLINE           Print Message
         SUBEXIT ,
*
MSG003I  SUBNTRY ,
         MVC DSAPLINE,CON0003I         Message to Print
         PUT DSADCB,DSAPLINE           Print Message
         SUBEXIT ,
*
MSG004I  SUBNTRY ,
         MVC DSAPLINE,CON0004I         Message to Print
         PUT DSADCB,DSAPLINE           Print Message
         SUBEXIT ,
*
MSG005I  SUBNTRY ,
         MVC DSAPLINE,CON0005I         Message to Print
         PUT DSADCB,DSAPLINE           Print Message
         SUBEXIT ,
*
MSG006I  SUBNTRY ,
         MVC DSAPLINE,CON0006I         Message to Print
         PUT DSADCB,DSAPLINE           Print Message
         SUBEXIT ,

***********************************************************************
*  Literials and Constants                                            *
***********************************************************************
*
CON0001I DC    CL121' MSG0001I: Invalid Data on PARM= Parameter.'
CON0002I DC    CL121' MSG0002I: Install Failed, Slot Not Available.'
CON0003I DC    CL121' MSG0003I: Unable to Load SVC.'
CON0004I DC    CL121' MSG0004I: Attempt to Free an SVC not installed.'
CON0005I DC    CL121' MSG0005I: SVC Removed.  Waiting 5 Seconds to Free*
                the storage.'
CON0006I DC    CL121' MSG0006I: SVC Removed and Storage Freed.'
*
CONHEAD1 DC    CL121'                  SVCTABLE Located At: '
CONHEAD2 DC    CL121' Offset  Number  SVC Entry             SVC Entry'
CONHEAD3 DC    58C'=',80C' '
*
LOAD1    LOAD  EPLOC=*,SF=L            List Form of LOAD
LOAD1L   EQU   *-LOAD1                 Length of List Form
*
CONDCB   DCB   DDNAME=SYSPRINT,RECFM=F,LRECL=121,DSORG=PS,MACRF=PM
CONDCBL  EQU   *-CONDCB
*
STPDCB   DCB   DDNAME=STEPLIB,RECFM=FB,DSORG=PO,MACRF=E
STPDCBL  EQU   *-STPDCB
*
CONOPL   OPEN  (*-*,(OUTPUT)),MF=L     Open PLIST
CONOPLL  EQU   *-CONOPL
CONCLO   CLOSE (*-*),MF=L              Close PLIST
CONCLOL  EQU   *-CONCLO
*
CONSVCU  SVCUPDTE 0,REPLACE,TYPE=4,MF=L
CONSVCUL EQU   *-CONSVCU
*
HEXTABLE DC    C'0123456789ABCDEF'
*
         LTORG ,                       Define literal Pool

***********************************************************************
* Define DSECT Areas                                                  *
***********************************************************************
*
         PRINT NOGEN
         IHAPSA LIST=NO                Define PSA Control Block
         CVT DSECT=YES                 Define CVT Control Block
         IHASCVT ,                     Define SCVT Control Block
         IKJTCB ,                      Define TCB Control Block
         DCBD   DSORG=PS               Define DCB Control Block
         IEZDEB LIST=NO                Define DEB Control Block
         IHACDE ,                      Define CDE Control Block
         IHALLE ,                      Define LLE Control Block
         IHAXTLST ,                    Define XTLST Control Block
         IEFTIOT1 ,                    Define TIOT Control Block
         PRINT GEN

***********************************************************************
* Define Dynamic Storage Area - DSA                                   *
***********************************************************************
*
         DSABEG ,                 <*** Begin Dynamic Storage Area
*
DSASAVR1 DS    F                       R1 Value on Entry
DSARC    DS    F                       Return Code
*
DSAFLAG  DS    B                       Flag Byte
DSAINS   EQU   X'80'                   ..Insert Request
DSAREM   EQU   X'40'                   ..Remove Request
DSAREP   EQU   X'20'                   ..Replace Request
DSADMP   EQU   X'10'                   ..Dump Request
*
DSACSVC  DS    CL3                     Character SVC Value
DSABSVC  DS    H                       Binary SVC Number
DSASVCNM DS    CL8                     Name of SVC to Load
DSASVCLN DS    F                       Length of Our SVC
DSASVCAD DS    F                       Address of Our SVC
DSAFRSVC DS    F                       Address of Free SVC Pointer
*
DSALOAD1 DS    0D,XL(LOAD1L)           Define Area For List Form
DSAOPL   DS    0D,XL(CONOPLL)          Define Space for OPEN PLIST
DSACLO   DS    0D,XL(CONCLOL)          Define Space for CLOSE PLIST
DSADCB   DS    0D,XL(CONDCBL)          Define Space for SYSPRINT DCB
DSASDCB  DS    0D,XL(STPDCBL)          Define Space for STEPLIB DCB
DSASVCU  DS    0D,XL(CONSVCUL)         Define Space for SVCUPDTE PLIST
*
DSAPARMV DS    CL128                   PARM= Data
DSAPLINE DS    CL121                   Print Line
*
DSASVCTB DS 256D                       SVC Count Table
*
         DSAEND ,                 <*** End Dynamic Storage Area
         END ,
