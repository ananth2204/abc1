***********************************************************************
* Copyright (c) 2009 - Richard D. Harper, All Rights Reserved         *
***********************************************************************
*                                                                     *
*   This file is part of Richard Harper's Private Development         *
* Platform (PDP).                                                     *
*                                                                     *
*   Richard Harper's PDP is free software: you can redistribute       *
* it and/or modify it under the terms of the GNU General Public       *
* License as published by the Free Software Foundation, either        *
* version 3 of the License, or (at your option) any later version.    *
*                                                                     *
*   Richard Harper's PDP is distributed in the hope that it will      *
* be useful, but WITHOUT ANY WARRANTY; without even the implied       *
* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    *
* See the GNU General Public License for more details.                *
*                                                                     *
*   You should have received a copy of the GNU General Public         *
* License along with Richard harper's PDP.  If not, see               *
* <http://www.gnu.org/licenses/>.                                     *
*                                                                     *
***********************************************************************
*
***********************************************************************
*                                                                     *
** RDHTRAPI - DUCT Trap Routine Installer                             *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*  Date     FIX-ID Programmer Description                             *
*  ======== ====== ========== ======================================= *
*  03/09/09  M001  R. Harper  Module Developed                        *
*                                                                     *
***********************************************************************
*
*---------------------------------------------------------------------*
* Define MVS System Data Areas                                        *
*---------------------------------------------------------------------*
*
         PRINT OFF
         IHAPSA  ,                   PSA  Mapping Macro
         CVT   DSECT=YES             CVT  Mapping Macro
         IKJTCB  ,                   TCB  Mapping Macro
         IHASTCB ,                   STCB Mapping macro
         IHARB ,                     PRB  Mapping macro
         IHAXSB ,                    XSB  Mapping macro
         DCBD DSORG=PS               DCB  Mapping Macto
         IHASDWA ,                   SDWA Mapping macro
SDWLEN   EQU   SDWAEND-SDWA               ..Length of SDWA
*
         PRINT ON,NOGEN
         DUCDSECT ,                  Map the DUCT Control Blocks
         TRGDSECT ,                  Trace Glue Area
         LSEDSECT ,                  Linkage Stack Entry DSECT
*
***********************************************************************
* RDHTRAPI - Program Main Entry Point                                 *
***********************************************************************
*
         USING PSA,R0                Establish Addressability
*
         USING TSVDSECT,R8           Establish Addressability
         USING TRGDSECT,TSVTRGAR     Establish Addressability
         USING DUCCTRCB,TSVTRPCB     DUCT Control Block
         USING DUCSAVEA,TSVTRPSV     DUCT Save Area
         USING DUCTO,R9              DUCT in Real Storage
*
RDHTRAPI PGMNTRY TYPE=MAIN,          Establish Main Entry Point        *
               BASE=(R12,R11),       Base Registers                    *
               PRINT=GEN,            (Can Use Traces Here)             *
               TRACE=NO,IMP=BASR     (Can Use Traces Here)
*
** Program MainLine
*
         STCTL CR2,CR2,DSACR2          Get Real Address of DUCT
         L     R9,DSACR2               Load Control Register 2
         SRL   R9,6                    Strip Low Six Bits
         SLL   R9,6                    (Same)
         LA    R5,DUCTTRPC             Point Reg at Word to Update
         LURA  R2,R5                   Load Trap Control Block Addr
*
         IF (LTR,R2,R2,Z)              If the DUCT Not Installed?
            GOSUB INIT                 Do Initialization
            GOSUB HDCT                 Hook the DUCT
*
*temp       GOSUB TEST                 Test Glue Code
         ENDIF
*
** Return to Caller
*
EXIT     DS    0H
         PGMEXIT RC=0                  Return to Caller
*
*=====================================================================*
** INIT - Do Initialization Processing                                *
*=====================================================================*
*
INIT     SUBNTRY ,
*
** Issue Storage Obtain LINKAGE=BRANCH
*
         SETLOCK OBTAIN,TYPE=LOCAL,     Get Local Lock                 X
               MODE=UNCOND,REGS=STDSAVE (Same)
*
         XR    R4,R4                    Indicate Current TCB
         L     R7,PSAAOLD               Address of Current ASCB
         STORAGE OBTAIN,                Get Storage for Work Area      *
               LENGTH=TSVLNGTH,         (Same)                         *
               SP=252,                  (Same)                         *
               KEY=0,                   (Same)                         *
               LOC=(31,31),             (Same)                         *
               BNDRY=PAGE,              (Same)                         *
               LINKAGE=BRANCH           (Same)
         LR    R8,R1
         MVC   TSVEYECT,=C'TSV '        Set Eye Catcher
         MVC   TRGEYECT,=C'TRGDSECT'    Set Eye Catcher
*
         SETLOCK RELEASE,TYPE=LOCAL,    Release Local Lock             X
               REGS=STDSAVE             (Same)
*
         #TRACE DATA=('STORAGE SP252 Storage',0(R8),64),REGS=(R15)
*
INIT999  DS    0H
         SUBEXIT ,
*
*=====================================================================*
** TEST - Test Glue Code                                              *
*=====================================================================*
*
TEST     SUBNTRY ,
         LM    R1,R9,=A(1,2,3,4,5,6,7,8,9)
         LAM   R0,R15,=16A(3)
         #TRACE REGS=ALL
*
         #TRACE REGS=ALL
         LM    R1,R9,=A(1,2,3,4,5,6,7,8,9)
         LAM   R0,R15,=16A(3)
         TRAP2 ,                        Test Installation
         STAM  R0,R15,DSAARS
         #TRACE REGS=ALL,DATA=('Access Regs',DSAARS,64)
*
TEST999  DS    0H
         SUBEXIT ,
*
*=====================================================================*
** HDCT - Hook Our Trap Routine into the DUCT                         *
*=====================================================================*
*
         USING DUCTO,R9                 DUCT in Real Storage
*
HDCT     SUBNTRY ,                  -*- Get Address of DUCTO From CR2
         STCTL CR2,CR2,DSACR2           Get Real Address of DUCT
         L     R9,DSACR2                Load Control Register 2
         SRL   R9,6                     Strip Low Six Bits
         SLL   R9,6                     (Same)
*
         LA    R4,TSVTRPCB+1            Get TRAP Save Area + (E)
         LA    R5,DUCTTRPC              Point Reg at Word to Update
         STURA R4,R5                    Set Trap CB in DUCT
*
** Initialize Trap Control Block
*
         OI    DUCCFLAG,DUCCR+DUCCP     Say 64-bit Registers & PSW
         LA    R14,TSVTRPSV             Get TRAP Savearea Address
         ST    R14,DUCCSAVA             Set in DSATRPCB
         L     R14,=V(RDHTRAPG)         Get Trap Processing Program
         ST    R14,DUCCTRPA             Set in DSATRPCB
         LR    R14,R8                   Get TSVDSECT Address
         ST    R14,DUCCUWD1             Set in DSATRPCB
*
** Move DUCT to DSA for Display
*
         LA R1,16                       Words to Move
         LA R14,DSADUCT                 To Address Virtual
         LR R15,R9                      From Address Real
         DO FROM=(R1)                   Loop 16 words
            LURA R2,R15                 ..Load a Word
            ST   R2,0(,R14)             ..Store a Word
            AHI  R14,4                  ..Bump Pointers
            AHI  R15,4                  ..(Same)
         ENDDO ,                        -> Loop
*
** Show Your Work
*
         #TRACE DATA=('DUCT from CR2',DSADUCT,L'DSADUCT)
         #TRACE DATA=('DUCT Control Block',TSVTRPCB,L'TSVTRPCB)
         #TRACE DATA=('TRAP Save Area',TSVTRPSV,L'TSVTRPSV)
*
** Return to Caller
*
HDCT999  DS    0H
         SUBEXIT ,
*
***********************************************************************
* Define Literials and Constants                                      *
***********************************************************************
*
         CONBEG ,                    Define Constant Area
*
** Equates
*
HEXFF    EQU   X'FF'                 Define Common Equates
HEX80    EQU   X'80'                 (Same)
HEX40    EQU   X'40'                 (Same)
HEX00    EQU   X'00'                 (Same)
*
         CONEND ,                    Define End of Constant Area
*
***********************************************************************
* Define Dynamic Storage Area                                         *
***********************************************************************
*
         DSABEG ,                    Define DSA Prefix
*
*
DSAPASID DS    H
*
*
DSACR2   DS    A                     Control Register 2
DSADUCT  DS    XL64
DSAARS   DS    XL64
*
         DSAEND ,                    Define DSA Suffix
         DROP  ,                     Drop Everything
*
***********************************************************************
*                                                                     *
** RDHTRAPG - Glue Code for DUCT Trap Routine                         *
*                                                                     *
*    This program gets control as a result of the execution of a      *
*  TRAP2/4 instruction.  It is entered DAT(ON), Enabled, AMODE(31/64) *
*  Primary Mode, in Supervisor State, KEY(0).                         *
*    Access registers AR1 is always zero indicating primary or PASN   *
*  home address space and AR15 Has A(2) indicating HASN.  R15 points  *
*  to the Trap Control Block and the real value of R15 and AR15 are   *
*  in that control block.  AR2-AR14 contain the values at the moment  *
*  of the TRAP2/4 instruction.                                        *
*                                                                     *
*    The glue gode here is needed because we don't have a valid       *
*  savearea in R13.  DUCCUWD1 has the address of the TSVDSECT and     *
*  we use the first 9D words as a savearea for this glue code         *
*  routine.  It then calls RDHTRAP which does all processing for      *
*    It fills in the TRVDSECT area with all the information required  *
*  by the TRAP Exit Routine, including the Linkage Stack Entry on     *
*  Entry to this routine, and the current Control Registers. The      *
*  TRAP Control Block and the TRAP Savearea are embedded within the   *
*  TSVDSECT for this Dispatchable Unit.                               *
*    It then calls RDHTRAP which does all processing for the TRAP     *
*  request during testing, or RDHTRACE to process the trace point.    *
*                                                                     *
*                                                                     *
***********************************************************************
*
         USING PSA,R0                Establish Addressability
*
         USING TSVDSECT,R13            User Area Address
         USING TRGDSECT,TSVTRGAR       Establish Addressability
         USING DUCCTRCB,R10            Control Block Address
         USING DUCSAVEA,R9             Save Area Address
*
         USING RDHTRAPG,R12            Get Program Addressability
*
RDHTRAPG RSECT ,
RDHTRAPG AMODE 31
RDHTRAPG RMODE ANY
         BAKR  R0,R0                   Save Current Status on Stack
         LARL  R12,RDHTRAPG            Initialize Base Register
         LR    R10,R15                 Get Trap Control Block Address
*
         EPSW  R14,R15                 Load Current PSW Status
         SAM31 ,                       Assure We're in 31-Bit mode
         L     R9,DUCCSAVA             Get Trap Save Area Address
         L     R13,DUCCUWD1            Get Save Area Address
         STM   R14,R15,TSVPSW          Save Incomming PSW Status
*
         ST    R1,TRGTRPAD             Save Input Parms
*
** Save Control Registers and Copy Linkage Stack Entry
*
         STCTG CR0,CR15,TRGCNTRL       Save Control Regs for Traces
*
         L     R14,TRGCR15+4           Get Addr of Real LSEN Entry
         SH    R14,=Y(LSENLNTH)        Back up to BAKR Entry
         USING LSEN,R14                Obtain Addressability
*
         MVC   LSENAR15,DUCSAR15       Reset AR15 in LSEN
         MVC   LSENGRGS,DUCSREGS       Get Regs From DUCT
         MVC   LSENPSW1,DUCSPSW        Put Return PSW in Linkage Stk
         MVC   LSENPSW2,DUCSPSW+8      (Same)
         DROP  R14                     Drop Temp Addressability
*
         L     R0,TRGCR15+4            Save Linkage Stack for Traces
         SH    R0,=Y(LSENLNTH)         Back up to BAKR Entry
         LA    R1,L'TRGLSEN            Length for MVCL
         LA    R14,TRGLSEN             Set To Address
         LR    R15,R1                  Set To Length
         MVCL  R14,R0                  Move Linkage Stack Entry
*
** Update PSW in Linkage Stack Entry to Point After TRAP2 Instruction
*
         MVC TRGASCB,PSAAOLD           Address of Current ASCB
         MVC TRGTCB,PSATOLD            Address of Current TCB or Zero
         OI  TRGFLAG1,TRG1TRPI         Indicate TRAP2 Implementation
         IF (OC,TRGTCB,TRGTCB,Z)       Are We in SRB Mode?
            OI TRGFLAG1,TRG1SRBM       Yes -> Indicate This
         ENDIF ,
*
** Call Test Program to Test Linkage
*
*        LR    R1,R13                  Pass TSVDSECT Area
*        L     R15,=V(RDHTRAP)         Get Address of Main Program
*        BASR  R14,R15                 Call RDHTRAP
*
** Call RDHTRACE to Process Trace Point
*
         LA    R8,TSVTRGAR             Pass TRGDSECT Address
         CALL  RDHTRACE,               Call Trace Point Processor      *
               ((R8)),VL,              Pass TRGDSECT Address           *
               MF=(E,TRGPLIST)
*
** Return to Invoker after TRAP2 Via PR
*
         USING LSEN,TRGLSEN            Obtain Addressability
         LAM   AR0,AR1,LSENAR0         Reload Access Registers
         LAM   AR14,AR15,LSENAR14      (Same)
         LMG   R0,R1,LSENGR0           Reload General Registers
         LMG   R14,R15,LSENGR14        (Same)
*
         PR                            No Operands -> After TRAP2
*
         LTORG ,                       Define Literal Pool
*
         ORG RDHTRAPG+(*-RDHTRAPG+255)/256*256 Round to 256-Byte Bndry
         DS  0H
         DROP  ,                       Drop All Bases
*
***********************************************************************
*                                                                     *
** RDHTRAP - DUCT Trap Main Entry Point - For Testing Interface       *
*                                                                     *
*    This program gets control as a result of the execution of a      *
*  TRAP2/4 instruction.  It is entered DAT(ON), Enabled, AMODE(31/64) *
*  Primary Mode, in Supervisor State, KEY(0), and all Access          *
*  Registers contain F'0', except AR0 which has garbage.              *
*                                                                     *
*    There does exist a problem here in that the access reisters      *
*  are not saved in the DUCT Trap Save Area, So, I added a Work       *
*  Area pointed to off DUCCUWD1 to hold that information, be used as  *
*  the MVS Savearea for the glue code and perhaps other usefull       *
*  things.                                                            *
*                                                                     *
*    We have to determine if we are in 64-bit mode or just force      *
*  us into 31-bit mode.                                               *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
*
         USING PSA,R0                Establish Addressability
*
         USING TSVDSECT,R10          Trap TSV Addressability
         USING TRGDSECT,TSVTRGAR     Establish Addressability
         USING DUCCTRCB,TSVTRPCB     DUCT Control Block
         USING DUCSAVEA,TSVTRPSV     DUCT Save Area
         USING LSEN,TRGLSEN          Obtain Addressability
*
RDHTRAP  PGMNTRY TYPE=MAIN,          Establish Main Entry Point        *
               MSG='DUCT Trap Main Entry Point',                       *
               BASE=(R12,R11),       Base Registers                    *
               TRACE=NO,                                               *
               PRINT=GEN
         LR    R10,R1                Get TSV Addressability
*
** Program MainLine
*
         GOSUB TINI                  Do Initialization Processing
         GOSUB TMAN                  Do Main Processing
         GOSUB TTRM                  Do Termination Processing
*
** Return to Caller
*
         PGMEXIT RC=0                Return to Caller
*
*=====================================================================*
** TINI - Do Initialization Processing                                *
*=====================================================================*
*
TINI     SUBNTRY ,
         MVC TRGASCB,PSAAOLD         Address of Current ASCB
         MVC TRGTCB,PSATOLD          Address of Current TCB or Zero
         IF (OC,TRGTCB,TRGTCB,Z)     Are We in SRB Mode?
            OI TRGFLAG1,TRG1SRBM     Yes -> Indicate This
         ENDIF ,
*
         #TRACE DATA=('Control Registers',TRGCNTRL,128)
         #TRACE DATA=('DUCT Control Block',TSVTRPCB,DUCCTRLN)
         #TRACE DATA=('TRAP Save Area',TSVTRPSV,DUCSAVLN)
         #TRACE DATA=('Linkage Stack Entry',TRGLSEN,L'TRGLSEN)
*
*
*
TINI999  DS    0H
         SUBEXIT ,
*
*=====================================================================*
** TTRM - Do Termination Processing                                   *
*=====================================================================*
*
TTRM     SUBNTRY ,
*
*
TTRM999  DS    0H
         SUBEXIT ,
*
*=====================================================================*
** TMAN - Do Main Processing                                          *
*=====================================================================*
*
TMAN     SUBNTRY ,
*
TMAN999  DS    0H
         SUBEXIT ,
*
***********************************************************************
* Define Literials and Constants                                      *
***********************************************************************
*
         CONBEG ,                    Define Constant Area
*
*
         CONEND ,                    Define End of Constant Area
*
***********************************************************************
* Define Dynamic Storage Area                                         *
***********************************************************************
*
         DSABEG ,                    Define DSA Prefix
*
DSAREGS  DS     8D                   AR Registers On Entry
DSTPSW   DS     D
*
         DSAEND ,                    Define DSA Suffix
*
***********************************************************************
* TSVDSECT - Trap Program Save Area -> DUCSUWD1                       *
***********************************************************************
*
*   This area is defined is the standard MVS Savearea for the initial
* entry point to the Trap Exit Routine.  It's address is in DUCSUWD1
* in the trap control block.  It contain the Savearea, the Trap
* Control Block, the Trap Save Area and whatever the hell else I see
* need to put there for use by the Trap Exit routine.
*   This sorage is in Subpool(252), Key(0) storage, is owned by the
* Job Step task, and will be freed by the RDHTRACE Resource Manager
* Exit Routine, or the Operating System at Job Step Termination.
*
*
TSVDSECT DSECT ,
TSVEYECT DS    CL4'TSV '             EyeCatcher
         ORG   TSVDSECT              Reset
TSVSAVEA DS    9D                    Standard Savearea - Trap Glue Code
TSVPSW   DS    D                     1St Half PSW At Entry to Glue Code
*
         DS    0D
TSVTRPCB DS    XL(DUCCTRLN)          Space for Trap Control Block
         DS    0D
TSVTRPSV DS    XL(DUCSAVLN)          Space for Trap Save Area
         DS    0D
TSVTRGAR DS    XL(TRGLNGTH)          Space for TRG Dsect Area
*
         DS    0D
TSVLENTH EQU   *-TSVDSECT            Show length Used
         ORG   TSVDSECT+4096         Allocate a Whole Page
         DS    0D                    End on Doubleword
TSVLNGTH EQU   *-TSVDSECT            Length of User Area
         END   ,
