./ ADD NAME=#CALL    0100-10050-10050-1200-00182-00182-00000-RHDMAC
         MACRO ,
&LBL     #CALL &PGM,                  Program to Call                  *
               &PARMS,                Parmaeters Passed                *
               &LAEY=LAE              Instruction to Use in AR Mode
.*
.**********************************************************************
.* Copyright (c) 2009 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #CALL - Issue CALL Interface to Another Program                   *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and local Variables
.*
         COPY  PGMGBLAS                Copy Globals
.*
         LCLA  &CNT                    Count of parameters
         LCLA  &AOFF,&AOFFST           AR Offset
         LCLA  &GOFF                   GR Offset
         LCLC  &DSAL02,&DSAL01         Labels in DSA
         LCLC  &VCON                   Address of VCON
.*
         LCLA  &I,&K,&J                Work Variables
         LCLC  &S
.*
.** Generate LBL if Specified
.*
         AIF   ('&LBL' EQ '').VAL000
&LBL     DS    0H
.*
.** Validate Input Parameters & Set Variables
.*
.VAL000  ANOP
&DSAL01  SETC  'D10'.'&SYSNDX'         Build Some Labels to Use
&DSAL02  SETC  'D20'.'&SYSNDX'         (Same)
.*
.** Allocate Storage in DSA
.*
&CNT     SETA  N'&PARMS                Number of Parms to Process
&AOFF    SETA  0                       Set Initial Offsets
&GOFF    SETA  0                       (Same)
.*
         AIF   (&CNT EQ 0).PLS100      No Parameteres passes?
&LCDSB         LOCTR ,                 Place PLIST in DSA LOCTR
         AIF   ('&SYSAM64' NE 'YES').PLS010
&DSAL01  DS    &CNT.AD                 Reserve Space fo GR Regs
&AOFF    SETA  &CNT*8                  Set Initial Offsets
&AOFFST  SETA  &AOFF                   (Same)
         AGO   .PLS020
.PLS010  ANOP
&DSAL01  DS    &CNT.A                  Space fo GR Regs
&AOFF    SETA  &CNT*4                  Set Initial Offsets
&AOFFST  SETA  &AOFF                   (Same)
.*
.PLS020  ANOP
         AIF   ('&SYSASCE' NE 'AR').PLS100
&DSAL02  DS    &CNT.A                  Space fo AR Regs
.*
.** Build PLIST in DSA
.*
.PLS100  ANOP
&LCSCT         LOCTR ,                 Reset to Code LOCTR
.*
.** When No Parameters to be Passed
.*
         AIF   (&CNT NE 0).PLS110
         AGO   .CAL100                 -> Done
.*
.** When Parameter to be Passed
.*
.PLS110  ANOP
&I       SETA  1                       Start With 1st Parm
&K       SETA  &CNT                    Number of Parms to Process
.*
.** Process One Parameter at a Time
.*
         LAY   R1,&DSAL01              Get  Address of PLIST for GPRs
         LAMY  R1,R1,=A(0)             Set  AR for Primary ASCE
.*
.PLS120  ANOP
         AIF   ('&PARMS(&I)' EQ '').PLS130  If Not Specified?
         LBIN  R0,&PARMS(&I),LAEY=&LAEY Load Parameter Address
         AGO   .PLS140                  ->
.PLS130  ANOP
         AIF   ('&SYSASCE' NE 'AR').PLS135
         LAMY  R0,R0,=A(0)             Zero Access Register
.PLS135  ANOP
         XGR   R0,R0                   Parm Not Specified
.*
.PLS140  ANOP
.*
.** Store Values in PLIST for GPRs
.*
.PLS200  ANOP
         AIF   ('&SYSAM64' EQ 'YES').PLS230
         STY   R0,&GOFF.(,R1)          Save This Parameter
&GOFF    SETA  &GOFF+4                 Increment Offset
         AGO   .PLS300
.PLS230  ANOP
         STG   R0,&GOFF.(,R1)          Save This Parameter
&GOFF    SETA  &GOFF+8                 Increment Offset
.*
.** Store Values in PLIST for ARs
.*
.PLS300  ANOP
         AIF   ('&SYSASCE' NE 'AR').PLS400 If Not ARMODE?
         STAMY R0,R0,&AOFF.(R1)        Store Access Registers
&AOFF    SETA  &AOFF+4                 Increment Offset
.PLS320  ANOP
.*
.PLS400  ANOP
&CNT     SETA  &CNT-1                  Decrement Count
&I       SETA  &I+1                    Increment Index Value
         AIF   (&CNT GT 0).PLS120      -> Loop
.*
.** Generate Program Linkage Code
.*
.CAL100  ANOP
         AIF   ('&PGM' EQ '(15)').CAL130    If in Proper Register?
         AIF   ('&PGM'(1,1) NE '(').CAL110  If Not in Register&
         LGR   R15,&PGM                Load Program Address
         AGO   .CAL130
.CAL110  ANOP
         CNOP  0,4                     Get  Proper Alignment
         J     *+8                     Jmp  Around VCON
&VCON    DC    V(&PGM)                 Gen  Program VCON
         LARL  R15,*-4                 Load Address of Program VCON
         L     R15,0(,R15)             Load Program VCON
.*
.CAL130  ANOP
         AIF   ('&SYSASCE' NE 'AR').CAL140
         LAY   R0,&AOFFST.(,R1)        Point R0 at AR Registers
         AGO   .CAL150
.CAL140  ANOP
*Del     XGR   R0,R0                   Zero R0
.CAL150  ANOP
         BASPM R14,R15                 Call Program
*
         AGO   .MEND                   -> Exit Macro
*
** Do Other MF=L Stuff Here
*
.*
.** ERROR MESSAGES
.*
.MNOTE01 ANOP
         MNOTE 8,'#CALL: ?'
         AGO   .MEND
.*
.** Exit Macro
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=#CPYRGT  0100-10050-10050-1200-00050-00050-00000-RHDMAC
         MACRO
&LBL     #CPYRGT ,                     Copyright Info
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #CPYRGT - Macro to Generate GNU GPL Notice.                       *
.*                                                                    *
.*    This macro will generate a a notification for all to see that   *
.*  any code written using Richard Harper's Private Development       *
.*  Platform shall be subject to the GNU General Public License.      *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
&LBL     DS    0H
.*
         DC    0H,C'Free Software: Subject to the GNU General '
         DC    C'Public License.'
         DC    0H
.*
         MEND ,
./ ADD NAME=#DD      0100-10050-10050-1200-00272-00272-00000-RHDMAC
         MACRO
&LBL     #DD   &TYPE,                  ALLOC/UNALLOC/CONCAT/DECON Etc. *
               &FLG11=,                Flag Byte #1                    *
               &FLG12=,                Flag Byte #2                    *
               ,                                                       *
               ,          Sysout Dynalloc Text Units                   *
               ,                                                       *
               &SYSOUT=,               SYSOUT Dataset Class            *
               &SPGNM=,                SYSOUT Program Name             *
               &FORM#=,                Forms Code for SYSOUT           *
               &OUTLM=,                Output limit Assigned to Sysout *
               &FREE=,                 Allocate with FREE=CLOSE        *
               &HOLD=,                 YES - Put Output in Hold Queue  *
               &USRID=,                USERID for This Dataset         *
               ,                                                       *
               ,          DSNAME Allocation Text units                 *
               ,                                                       *
               &DDNAM=,                DDNAME to Use For Allocation    *
               &DSNAM=,                DSNAME to Allocate              *
               &MEMBR=,                Member Name to Alllocate        *
               &STATS=,                Disposition SHR/OLD/MOD         *
               &NDISP=,                Normal Disposition              *
               &CDISP=,                Conditional Disposition         *
               ,                                                       *
               ,          Retrieve Dynalloc Text Units                 *
               ,                                                       *
               &RTDDN=,                Return DDNAME                   *
               &RTDSN=,                Return Dataset Name             *
               &RTMEM=                 Return Member Name
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DD     - Interface to Dynamic Allocation - SVC 99                *
.*                                                                    *
.*    DDNAM   - DDNAME to Process                                     *
.*                                                                    *
.*    DSNAM   - Dataset name or HFS File to Allocate                  *
.*                                                                    *
.*    RTDDN   - DDNAME Returned for DSNAME or SYSOUT Allocation       *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program Management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &PGM000,&PGM010     Program Labels
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.** Define LOCTR's for #DD
.*
&LCCTP   SETC   '&LCCN1'           Set as 1st Constant LOCTR
&LCCTU   SETC   '&LCCN2'           Set as 2st Constant LOCTR
&LCDTP   SETC   '&LCDSB'           Set as 1st DSA LOCTR
&LCDTU   SETC   '&LCDSC'           Set as 2st DSA LOCTR
.*
&PGM000  SETC  'P00'.'&SYSNDX'         Build Required Labels
.*
.** Define Label if Specified
.*
         AIF   ('&LBL' EQ '').NOLBL
&LBL     DS    0H
.NOLBL   ANOP
.*
.** Move Parameters to Global Variables
.*

&DDSYSOU SETC  '&SYSOUT'               Do Sysout Parameters
&DDSPGNM SETC  '&SPGNM'                (Same)
&DDOUTLM SETC  '&OUTLM'                (Same)
&DDCLOSE SETC  '&FREE'                 (Same)
&DDSHOLD SETC  '&HOLD'                 (Same)
&DDSFMNO SETC  '&FORM#'                (Same)
&DDUSRID SETC  '&USRID'                (Same)
.*
&DDDDNAM SETC  '&DDNAM'                Do DSNAME Allocation Parms
&DDDSNAM SETC  '&DSNAM'                (Same)
&DDMEMBR SETC  '&MEMBR'                (Same)
&DDSTATS SETC  '&STATS'                (Same)
&DDNDISP SETC  '&NDISP'                (Same)
&DDCDISP SETC  '&CDISP'                (Same)
.*
&DRRTDDN SETC  '&RTDDN'                Do Retrieve Parameters
&DRRTDSN SETC  '&RTDSN'                (Same)
&DRRTMEM SETC  '&RTMEM'                (Same)
.*
.*====================================================================*
.* Generate Dynalloc Parameter List
.*====================================================================*
.*
.** Define LOCTRS and Build Request Block
.*
         #DD$  TYPE=&TYPE,             Pass Type of Request            *
               FLG11=&FLG11,           Pass Flag Byte #1               *
               FLG12=&FLG12            Pass Flag Byte #2
         AIF   (&DDERR).MEND           Exit on Error
.*
.** Generate Text Units for Allocation
.*
         AIF   (&DDVERB NE 1).DD010
         #DDA  ,                       Allocation
         AGO   .DD100
.*
.** Generate Text Units for Deallocation
.*
.DD010   ANOP
         AIF   (&DDVERB NE 2).DD020
         #DDB  ,                       Unallocation
         AGO   .DD100
.*
.** Generate Text Units for Concatenation
.*
.DD020   ANOP
         AIF   (&DDVERB NE 3).DD030
         #DDC  ,                       Concatenation
         AGO   .DD100
.*
.** Generate Text Units for Deconcatenation
.*
.DD030   ANOP
         AIF   (&DDVERB NE 4).DD040
         #DDD  ,                       Deconcatenation
         AGO   .DD100
.*
.** Generate Text Units for In-Use Processing
.*
.DD040   ANOP
         AIF   (&DDVERB NE 5).DD050
         #DDI  ,                       In-Use Processing
         AGO   .DD100
.*
.** Generate Text Units for DDNAME Allocation
.*
.DD050   ANOP
         AIF   (&DDVERB NE 6).DD060
         #DDN  ,                       DDNAME Allocation
         AGO   .DD100
.*
.** Generate Text Units for Status or Information Retrieval
.*
.DD060   ANOP
         AIF   (&DDVERB NE 7).DD100
         #DDS  ,                       Pass in Parameter Values
         AGO   .DD100
.*
.*====================================================================*
.* Generate Dynalloc Relocation Code
.*====================================================================*
.*
.DD100   ANOP
*        #DDRETRN ,                    Process Text Units to Return
         #DDRETRN ,
.*
&LCCTP   LOCTR ,                       PLIST LOCTR
&PLNGTH  EQU  *-&CTUPL                 Get Length of PLIST
&PCOUNT  EQU  (*-&CTUPL)/4             Get Count  of PLIST Entries
&LCCTU   LOCTR ,                       Text Unit LOCTR
&TLNGTH  EQU  *-&CTUNIT                Get Length of Text Units
&LCSCT   LOCTR ,                       Back to CSECT LOCTR
*
** Relocate Request Block Pointers
*
         MVC  &DRBPTR.(S99RBPL+S99RBL+S99RBXL),&CRBPTR Move RB to DSA
*
         LA   R1,&DRB                  Request Block Pointer
         ST   R1,&DRBPTR               Set DSA Address in Pointer
         OI   &DRBPTR,X'80'            Set VL Bit
*
         LA   R15,&DRB                 Get Address of RB
         PUSH  USING                   Save Previous Usings
         USING S99RB,R15               Establish Temp Addressability
         LA   R1,&DTUPL                Get Addr of Text Unit Pointers
         ST   R1,S99TXTPP              Set Addr in Request Block
         LA   R1,&DRBX                 Get RB Extention
         ST   R1,S99S99X               Set Addr in RB
         DROP R15                      Drop Temp Addressability
         POP  USING                    Restore Usings
*
** Move Text Unites and Pointers to DSA
*
         LAY  R0,&CTUPL                Load Plist Pointer
         LAY  R1,&PLNGTH               Load Length for Move
         LAY  R14,&DTUPL               Set To Address in DSA
         LR   R15,R1                   Set To Length
         MVCL R14,R0                   Move Plist to DSA
*
         LAY  R0,&CTUNIT               Load Text Unit Pointer
         LAY  R1,&TLNGTH               Load Length for Move
         LAY  R14,&DTUNIT              Set To Address in DSA
         LR   R15,R1                   Set To Length
         MVCL R14,R0                   Move Plist to DSA
*
** Relocate Text Unit Pointers
*
         LAY   R14,&DTUPL              Get Addr of DSA PLIST
         LAY   R15,&PCOUNT             Get Count of Entries
*
&PGM000  LAY   R1,&DTUNIT              Get Addr of Text Units
         AL    R1,0(,R14)              Plus Offset This Pointer
         ST    R1,0(,R14)              Save Relocated Address
         LA    R14,4(,R14)             Bump Position
         BCT   R15,&PGM000             -> Loop
         AHI   R14,-4                  Point Back at last Entry
         OI    0(R14),X'80'            And Set VL Bit
*
*        #DDRESET ,                    Set Inputs At Exec Time
         #DDRESET ,
*
** Issue Dynamic Allocation Macro
*
         LA    R1,&DRBPTR              Get DYNALLOC PLIST
*        DYNALLOC ,                    Issue DYNALLOC Request
         DYNALLOC ,
*
         LA   R1,&DRB                  Get Address of RB
         PUSH  USING                   Save Previous Usings
         USING S99RB,R1                Establish Temp Addressability
         ICM  R0,B'1111',S99RSC        Get Reason Codes if Any
         DROP R1                       Drop Temp Addressability
         POP  USING                    Restore Usings
*
** Process Return Pointers
*
*        #DDRETRV ,                    Process Text Units to Retrieve
         #DDRETRV ,
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DD: '
         AGO .MEND
.*
.** Return to Caller
.*
.MEND    ANOP
&LCSCT   LOCTR ,                       Leave Us in CSECT LOCTR
         MEND
./ ADD NAME=#DD$     0100-10050-10050-1200-00357-00357-00000-RHDMAC
         MACRO
&LBL     #DD$  &TYPE=,                 ALLOC/UNALLOC                   *
               &FLG11=,                Flag Byte #1                    *
               &FLG12=                 Flag Byte #2
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DD$ - Build Initial Request Block for Dynamic Allocation         *
.*                                                                    *
.*    This macro is is the first macro called for a Dynamic           *
.*  allocation request via the #DD macro.  It's purpose is to         *
.*  establish the environment by defining all necessary LOCTR         *
.*  location counters that will be used by subsequent lower           *
.*  level macros.                                                     *
.*    If the mapping macros have not been defined by a previous       *
.*  invocation of the #DD macro, it will define them here and make    *
.*  a note of that in a global variable.                              *
.*    Then it defines the initial Request Blocks for this request.    *
.*  This includes the Request Block pointer, the Request Block        *
.*  itself, and the Request Block Extention.                          *
.*                                                                    *
.*  Input Parameters                                                  *
.*  ================                                                  *
.*                                                                    *
.*  &TYPE   - This positional parameter defines the type of Dynamic   *
.*            allocation request, or what is known as the Verb Code.  *
.*            The valid operands values for this macro are:           *
.*                                                                    *
.*            ALLOC   - Allocate a dataset by DSNAME or PATHNAME      *
.*            UNALLOC - Unallocate a previously allocated dataset     *
.*            CONCAT  - Concatinate another dataset to a DDNAME       *
.*            DECON   - Deconatinate a dataset by DDNAME              *
.*            INUSE   - Remove In-Use attribute based on task-ID      *
.*            DDNAM   - DDNAME Allocation                             *
.*            STATUS  - Allocation Information Retrieval Request      *
.*                                                                    *
.*  &FLG11  - Flags that may be specified for the S99FLG11 flag byte  *
.*            in the Request Block.  This parameter is specified      *
.*            as a sublist, consisting of none or more of the         *
.*            following operands.  If not specified, the default      *
.*            is: FLG11=(NOCNV,NOMNT,NOMIG)                           *
.*                                                                    *
.*            ONCNV - Do not use an existing allocation that does     *
.*                    not have the convertable Attribute to satisfy   *
.*                    the request.                                    *
.*            NOCNV - Do not use an existing allocation to satisfy    *
.*                    the request.                                    *
.*                                                                    *
.*            NOMNT - Do not mount volumes or offline units to        *
.*                    satisfy the request.                            *
.*            JBSYS - Request is to allocate a SYSOUT Dataset         *
.*            CNENQ - Issue a conditional ENQ on the TIOT resource.   *
.*            GDCNT - Ignore GDG Name Table. Do LOCATE for base GDG.  *
.*            MSGL0 - Ignore MSGLEVEL in JCT. Use MSGLEVEL=(,0)       *
.*            NOMIG - Do not recall migrated datasets.                *
.*                                                                    *
.*  &FLG12  - Flags that may be specified for the S99FLG12 flag byte  *
.*            in the Request Block.  This parameter is specified      *
.*            as a sublist, consisting of none or more of the         *
.*            following operands.                                     *
.*                                                                    *
.*            NOSYM - Allocate or unallocate information retrieval.   *
.*            ACUCB - Allocate function, use actual UCB addresses.    *
.*            DSABA - Request that the DSAB for this allocation be    *
.*                    placed above the line.                          *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Progtam Management Globals
         COPY #DDGBLAS             Copy in #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
         LCLC  &VERB,&BYT11,&BYT12 Verb and Flag Bytes
.*
.** Do Basic Validation for &TYPE
.*
         AIF   ('&TYPE' EQ 'ALLOC').VTYP010
         AIF   ('&TYPE' EQ 'UNALLOC').VTYP020
         AIF   ('&TYPE' EQ 'CONCAT').VTYP030
         AIF   ('&TYPE' EQ 'DECON').VTYP040
         AIF   ('&TYPE' EQ 'INUSE').VTYP050
         AIF   ('&TYPE' EQ 'DDNAM').VTYP060
         AIF   ('&TYPE' EQ 'STATUS').VTYP070
         AGO   .MNOTE1             Issue Error Message
.*
.VTYP010 ANOP
&DDVERB  SETA  1
         AGO   .V11F000
.VTYP020 ANOP
&DDVERB  SETA  2
         AGO   .V11F000
.VTYP030 ANOP
&DDVERB  SETA  3
         AGO   .V11F000
.VTYP040 ANOP
&DDVERB  SETA  4
         AGO   .V11F000
.VTYP050 ANOP
&DDVERB  SETA  5
         AGO   .V11F000
.VTYP060 ANOP
&DDVERB  SETA  6
         AGO   .V11F000
.VTYP070 ANOP
&DDVERB  SETA  7
.*
.** Do Basic Validation for &FLG11=
.*
.V11F000 ANOP
&B(1)    SETB  0                   Initialize Bit Switches
&B(2)    SETB  0                   (Same)
&B(3)    SETB  0                   (Same)
&B(4)    SETB  0                   (Same)
&B(5)    SETB  0                   (Same)
&B(6)    SETB  0                   (Same)
&B(7)    SETB  0                   (Same)
&B(8)    SETB  0                   (Same)
.*
         AIF   ('&FLG11' NE '').V11F010
&B(2)    SETB  1                   Set Default Values
&B(3)    SETB  1                   (Same)
&B(8)    SETB  1                   (Same)
.*
.V11F010 ANOP
&I       SETA  1                   Index for Sublist
&J       SETA  N'&FLG11            Number of Entries in Sublist
.*
.V11F020 ANOP                  -*- Loop to Here
         AIF   (&I GT &J).V11F300  If Past End-of-List, Done
         AIF   ('&FLG11' EQ 'ONCNV').V11F100
         AIF   ('&FLG11' EQ 'NOCNV').V11F110
         AIF   ('&FLG11' EQ 'NOMNT').V11F120
         AIF   ('&FLG11' EQ 'JBSYS').V11F130
         AIF   ('&FLG11' EQ 'CNENQ').V11F140
         AIF   ('&FLG11' EQ 'GDCNT').V11F150
         AIF   ('&FLG11' EQ 'MSGL0').V11F160
         AIF   ('&FLG11' EQ 'NOMIG').V11F170
         AGO   .MNOTE2             Issue Error Message
.*
.V11F100 ANOP                      Bit 0
&B(1)    SETB  1                   ..Indicate ONCNV
         AGO   .V11F200
.V11F110 ANOP                      Bit 1
&B(2)    SETB  1                   ..Indicate NOCNV
         AGO   .V11F200
.V11F120 ANOP                      Bit 2
&B(3)    SETB  1                   ..Indicate NOMNT
         AGO   .V11F200
.V11F130 ANOP                      Bit 3
&B(4)    SETB  1                   ..Indicate JBSYS
         AGO   .V11F200
.V11F140 ANOP                      Bit 4
&B(5)    SETB  1                   ..Indicate CNENQ
         AGO   .V11F200
.V11F150 ANOP                      Bit 5
&B(6)    SETB  1                   ..Indicate GDCNT
         AGO   .V11F200
.V11F160 ANOP                      Bit 6
&B(7)    SETB  1                   ..Indicate MSGL0
         AGO   .V11F200
.V11F170 ANOP                      Bit 7
&B(8)    SETB  1                   ..Indicate NOMIG
         AGO   .V11F200
.*
.V11F200 ANOP
&I       SETA  &I+1                Point at Next Parameter
         AGO   .V11F020            -> Loop
.V11F300 ANOP
&BYT11   SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)'
.*
.** Do Basic Validation for &FLG12=
.*
.V12F000 ANOP
&B(1)    SETB  0                   Initialize Bit Switches
&B(2)    SETB  0                   (Same)
&B(3)    SETB  0                   (Same)
&B(4)    SETB  0                   (Same)
&B(5)    SETB  0                   (Same)
&B(6)    SETB  0                   (Same)
&B(7)    SETB  0                   (Same)
&B(8)    SETB  0                   (Same)
.*
.V12F010 ANOP
&I       SETA  1                   Index for Sublist
&J       SETA  N'&FLG12            Number of Entries in Sublist
.*
.V12F020 ANOP                  -*- Loop to Here
         AIF   (&I GT &J).V12F300  If Past End-of-List, Done
         AIF   ('&FLG12' EQ 'NOSYM').V12F100
         AIF   ('&FLG12' EQ 'ACUCB').V12F110
         AIF   ('&FLG12' EQ 'DSABA').V12F120
         AGO   .MNOTE2             Issue Error Message
.*
.V12F100 ANOP                      Bit 0
&B(1)    SETB  1                   ..Indicate ONCNV
         AGO   .V12F200
.V12F110 ANOP                      Bit 1
&B(2)    SETB  1                   ..Indicate NOCNV
         AGO   .V12F200
.V12F120 ANOP                      Bit 2
&B(3)    SETB  1                   ..Indicate NOMNT
         AGO   .V12F200
.*
.V12F200 ANOP
&I       SETA  &I+1                Point at Next Parameter
         AGO   .V12F020            -> Loop
.V12F300 ANOP
&BYT12   SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)'
.*
.** Build Labels
.*
&C       SETC  'DD'.'&SYSNDX'      Build Labels for Constant Area
&CRBPTR  SETC  '&C'.'CON_RBPTR'    (Same)
&CRB     SETC  '&C'.'CON_RB'       (Same)
&CRBX    SETC  '&C'.'CON_RBX'      (Same)
&CTUPL   SETC  '&C'.'CON_TUPL'     (Same)
&CTUNIT  SETC  '&C'.'CON_TUNIT'    (Same)
&DRBPTR  SETC  '&C'.'DSA_RBPTR'    Build Labels for DSA Area
&DRB     SETC  '&C'.'DSA_RB'       (Same)
&DRBX    SETC  '&C'.'DSA_RBX'      (Same)
&DTUPL   SETC  '&C'.'DSA_TUPL'     (Same)
&DTUNIT  SETC  '&C'.'DSA_TUNIT'    (Same)
&PLNGTH  SETC  '&C'.'PLNTH'        Length of Storage For PLIST
&PCOUNT  SETC  '&C'.'PCONT'        Count  of PLIST Entries
&TLNGTH  SETC  '&C'.'TLNTH'        Length of Storage For Text Units
.*
.*
.** Generate Mapping Macros if Necessary
.*
         AIF   (&DDMC).DD010       If Macros Not Yet Generated...
&DDMC    SETB  1                   ..Indicate Macros Generated
         PUSH  PRINT
         PRINT OFF
         IEFZB4D0                  SVC99 Parameter List
         IEFZB4D2                  SVC99 Key Definition Table
         POP   PRINT
.*
S99RBPL  EQU   4                   Length of Request Block Pointer
S99RBL   EQU   S99RBEND-S99RB      Length of Request Block
S99RBXL  EQU   36                  Length of request Block Extention
.*
&LCSCT   LOCTR ,                   Assure Proper Location Counter
.*
.*
.** Define Storage for This Request in Constant and DSA Areas
.*
.DD010   ANOP ,                -*- Define Storage in Constant Area
&LCCON   LOCTR ,                   Position us in Constant Area
&CRBPTR  DC    0D,XL(S99RBPL)'0'   Reserve Storage
&CRB     DC    0D,XL(S99RBL)'0'    (Same)
&CRBX    DC    0D,XL(S99RBXL)'0'   (Same)
.*
&LCCTP   LOCTR ,                   LOCTR for Text Pointers in Constants
&CTUPL   DS    0D                  ..Generate a Label
&LCCTU   LOCTR ,                   LOCTR for Text Units in Constants
&CTUNIT  DS    0D                  ..Generate a Label
.*
&LCDSA   LOCTR ,                   Position us in Dynamic Storage Area
&DRBPTR  DS    0D,XL(S99RBPL)      Reserve Storage
&DRB     DS    0D,XL(S99RBL)       (Same)
&DRBX    DS    0D,XL(S99RBXL)      (Same)
.*
&LCDTP   LOCTR ,                   LOCTR for Text Pointers in DSA
&DTUPL   DS    0D                  ..Generate a Label
&LCDTU   LOCTR ,                   LOCTR for Text Units in DSA
&DTUNIT  DS    0D                  ..Generate a Label
.*
&LCSCT   LOCTR ,                   Put us in CSECT Location Counter
.*
.** Fill in the Request Block
.*
&LCCON   LOCTR ,                   Put us in Constant Area
         ORG   &CRBPTR             Overlay S99RBPTR
         DC    A(&CRB-&CRBPTR)     Use Offset
.*
         ORG   &CRB                Overlay S99RB
         DC    YL1(S99RBL)         Set Length of Request Block
         DC    AL1(&DDVERB)        Set Verb Code
         DC    AL1(&BYT11)         Generate Flag Byte #1
         DC    AL1(&BYT12)         Generate Flag Byte #2
         DC    Y(0),Y(0)           Error and info Codes
         DC    A(&CTUPL-&CRBPTR)   Offset to Text Pointers
         DC    A(&CRBX-&CRBPTR)    Offset to Request Block Extention
         DC    XL4'0'              Flags2
.*
         ORG   &CRBX               Overlay S99RBX
         DC    XL(S99RBXL)'00'     ..With Zeros
         ORG   &CRBX
         DC    C'S99RBX'           Set RBX ID
         DC    YL1(S99RBXVR)       Set Version Number
         DC    YL1(S99ERMSG)       Say Return Messages in Storage
         ORG   ,
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DD$001: The value specified for the allocation type *
               is invalid.  Valid '
         MNOTE *,'     values are: ALLOC, UNALLOC, CONCAT, DECON, INUSE*
               , DDNAM, and STATUS.'
         AGO .MERR
.*
.MNOTE2  ANOP
         MNOTE 8,'#DD$002: The value specified for the FLAG11= paramete*
               r is invalid.  Valid '
         MNOTE *,'     values are: ONCNV, NOCNV, NOMNT, JBSYS, CNENQ, G*
               DCNT, MSGL0, NOMIG.'
         AGO .MERR
.*
.MNOTE3  ANOP
         MNOTE 8,'#DD$002: The value specified for the FLAG12= paramete*
               r is invalid.  Valid '
         MNOTE *,'     values are: NOSYM, ACUCB, DSABA.'
         AGO .MERR
.*
.** Return to Caller
.*
.MERR    ANOP
&DDERR   SETB  1                       Indicate MNOTE Issued
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDA     0100-10050-10050-1200-00091-00091-00000-RHDMAC
         MACRO
         #DDA  ,                       DSNAME or HFS File Allocation
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDA    - Inner Macro to Drive the Allocation Function            *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program Management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.** Process a SYSOUT Dataset Allocation
.*
.DD000   ANOP
         AIF   ('#DDSYSOU' EQ '').DD020
         #DDASOU ,                     Process a SYSOUT Allocation
         AGO  .MEND
.*
.** Process an HFS Pathname Allocation
.*
.DD010   ANOP
         #DDAHFS ,                     Process an HFS Allocation
         AGO  .MEND
.*
.** Process DSNAME or DDNAME Allocation Request
.*
.DD020   ANOP
  MNOTE ,'Calling #DDASHR'
         #DDASHR ,                     Process Basic Text Units
         AGO   .MEND
         AIF  (&DDERR).MEND            Terminate on Error
.*
         #DDADCB.                      Process DCB Text Units
         AIF  (&DDERR).MEND            Terminate on Error
.*
         #DDASPC                       Process SPACE= Text Units
         AIF  (&DDERR).MEND            Terminate on Error
.*
         #DDAMISC ,                    Process Misc Text Units
         AIF  (&DDERR).MEND            Terminate on Error
.*
         #DDASMS ,                     Process SMS Text Units
         AIF  (&DDERR).MEND            Terminate on Error
         AGO  .MEND                    -> Done
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDA001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDASHR  0100-10050-10050-1200-00137-00137-00000-RHDMAC
         MACRO
         #DDASHR ,                     Allocate a SYSOUT Dataset
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDSHR  - Inner Macro to Generate The Text Units for DSNAME       *
.*            allocation of DISP=SHR/OLD/MOD Datasets. The following  *
.*            text units are supported.                               *
.*                                                                    *
.*  DALDDNAM - 0001 - DDNAME to Use For Allocation                    *
.*  DALDSNAM - 0002 - DSNAME to Allocate                              *
.*  DALMEMBR - 0003 - Member Name to Alllocate                        *
.*  DALSTATS - 0004 - Disposition SHR/OLD/MOD                         *
.*  DALNDISP - 0005 - Normal Disposition                              *
.*  DALCDISP - 0006 - Conditional Disposition                         *
.*                                                                    *
.*    Each of these text units also have a corresponding global       *
.*  variable in #DDGBLAS with teh same name as the text unit but      *
.*  prefixed with #DD instead of DAL.                                 *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.*====================================================================*
.** Process the Text Units
.*====================================================================*
.*
.DD0100  ANOP
  MNOTE *,'STATS=&DDSTATS'
         AIF   ('&DDDDNAM' EQ '').DD0110
&K       SETA  K'&DDDDNAM
         #DDTUN0 DALDDNAM,1,&K,CL8'&DDDDNAM',8
.*
.DD0110  ANOP
         AIF   ('&DDDSNAM' EQ '').DD0120
&K       SETA  K'&DDDSNAM
         #DDTUN0 DALDSNAM,1,&K,CL44'&DDDSNAM',44
.*
.DD0120  ANOP
         AIF   ('&DDMEMBR' EQ '').DD0130
&K       SETA  K'&DDMEMBR
         #DDTUN0 DALMEMBR,1,&K,CL8(&DDMEMBR),8
.*
.*
.DD0130  ANOP
         AIF   ('&DDSTATS' EQ '').DD0140
&C       SETC  '01'
         AIF   ('&DDSTATS' EQ 'OLD').DD0131
&C       SETC  '02'
         AIF   ('&DDSTATS' EQ 'MOD').DD0131
&C       SETC  '04'
         AIF   ('&DDSTATS' EQ 'NEW').DD0131
&C       SETC  '08'
         AIF   ('&DDSTATS' EQ 'SHR').MNOTE1
.DD0131  ANOP
         #DDTUN0 DALSTATS,1,1,X'&C',1
.*
.DD0140  ANOP
         AIF   ('&DDNDISP' EQ '').DD0150
&C       SETC  '01'
         AIF   ('&DDNDISP' EQ 'UNCATLG').DD0141
&C       SETC  '02'
         AIF   ('&DDNDISP' EQ 'CATLG').DD0141
&C       SETC  '04'
         AIF   ('&DDNDISP' EQ 'DELETE').DD0141
&C       SETC  '08'
         AIF   ('&DDNDISP' EQ 'KEEP').MNOTE2
.DD0141  ANOP
         #DDTUN0 DALNDISP,1,1,X'&C',1
.*
.DD0150  ANOP
         AIF   ('&DDCDISP' EQ '').DD0160
&C       SETC  '01'
         AIF   ('&DDCDISP' EQ 'UNCATLG').DD0151
&C       SETC  '02'
         AIF   ('&DDCDISP' EQ 'CATLG').DD0151
&C       SETC  '04'
         AIF   ('&DDCDISP' EQ 'DELETE').DD0151
&C       SETC  '08'
         AIF   ('&DDCDISP' EQ 'KEEP').MNOTE2
.DD0151  ANOP
         #DDTUN0 DALCDISP,1,1,X'&C',1
.*
.DD0160  ANOP
         AGO   .MEND                    -> Done

.*====================================================================*
.** Macro Error Conditions
.*====================================================================*
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDS001: STATS is Invalid'
         AGO .MEND
.*
.MNOTE2  ANOP
         MNOTE 8,'#DDS002: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDASOU  0100-10050-10050-1200-00124-00124-00000-RHDMAC
         MACRO
         #DDASOU ,                     Allocate a SYSOUT Dataset
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDSOU  - Inner Macro to Generate The Text Units for SYSOUT       *
.*            Dataset Allocation The following text units may         *
.*            be generated by this macro:                             *
.*                                                                    *
.*  DALSYSOU - 0018 - Allocate a SYSOUT dataset and specify           *
.*                    SUSOUT class.                                   *
.*  DALSPGNM - 0019 - Specifies the SYSOUT program name.              *
.*  DALSFMNO - 001A - Specifies the sysout form number.               *
.*  DALOUTLM - 001B - Specifies the output limit to be assigned.      *
.*  DALCLOSE - 001C - Indicates the dataset is to be freed on close.  *
.*  DALSHOLD - 0059 - Specifies the dataset be placed in the hold     *
.*                    queue when deallocated.                         *
.*  DALUSRID - 0063 - Specifies that the sysout dataset be routed     *
.*                    to this user.                                   *
.*                                                                    *
.*    Each of these text units also have a corresponding global       *
.*  variable in #DDGBLAS with teh same name as the text unit but      *
.*  prefixed with #DD instead of DAL.                                 *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.*====================================================================*
.** Process the DALSYSOU Text Unit
.*====================================================================*
.*
.DD0100  ANOP
         AIF   ('&DDSYSOU' EQ '').MEND
*temp    #DDTNUL (&DDSTATS,&DDNDISP,&DDCDISP,&DDVLSER,&DDPRIVT,        *
               &DDVLSEQ,&DDVLCNT,&DDVLRDS,&DDQNAME,&DDSSNM,&DDSPRM,    *
               &DDSSATT)
         AIF   (&DDNUL).MNOTE1
.*
         AIF   ('&DDSYSOU' NE '*').DD0105
         #DDTUN0 DALSYSOU,0,0
         AGO   .DD0110
.DD0105  ANOP
         #DDTUN0 DALSYSOU,1,1,CL1'&DDSYSOU',1
.*
.DD0110  ANOP
         AIF   ('&DDSPGNM' EQ '').DD0120
&K       SETA  K'&DDSPGNM
         #DDTUN0 DALSPGNM,1,&K,CL8'&DDSPGNM',8
.*
.DD0120  ANOP
         AIF   ('&DDOUTLM' EQ '').DD0130
         #DDTUN0 DALOUTLM,1,3,AL3(&DDOUTLM),3
.*
.DD0130  ANOP
         AIF   ('&DDCLOSE' EQ '').DD0140
         #DDTUN0 DALCLOSE,0,0
.*
.DD0140  ANOP
         AIF   ('&DDSHOLD' EQ '').DD0150
         #DDTUN0 DALSHOLD,0,0
.*
.DD0150  ANOP
         AIF   ('&DDSFMNO' EQ '').DD0160
&K       SETA  K'&DDSFMNO
         #DDTUN0 DALSFMNO,1,&K,CL4'&DDSFMNO',4
.*
.DD0160  ANOP
         AIF   ('&DDUSRID' EQ '').MEND
&K       SETA  K'&DDUSRID
         #DDTUN0 DALUSRID,1,&K,CL8'&DDUSRID',8
         AGO   .MEND                    -> Done

.*====================================================================*
.** Macro Error Conditions
.*====================================================================*
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDS001: Mutually exclusive parameters specified with*
                SYSOUT= parameter.'
         AGO .MEND
.*
.MNOTE2  ANOP
         MNOTE 8,'#DDS002: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDB     0100-10050-10050-1200-00064-00064-00000-RHDMAC
         MACRO
         #DDB  DSNAM=,                 DSNAME or HFS File to Allocate  *
               &DDNAM=,                DDNAME to Process               *
               &RTDDN=,                Return DDNAME                   *
               &SYSOUT=                SYSOUT Dataset Class
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDB    - Inner Macro to Drive the Deallocation Function          *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.**
.*
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDB001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDC     0100-10050-10050-1200-00064-00064-00000-RHDMAC
         MACRO
         #DDC  DSNAM=,                 DSNAME or HFS File to Allocate  *
               &DDNAM=,                DDNAME to Process               *
               &RTDDN=,                Return DDNAME                   *
               &SYSOUT=                SYSOUT Dataset Class
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDC    - Inner Macro to Drive the Concatenation Function         *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.**
.*
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDC001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDD     0100-10050-10050-1200-00064-00064-00000-RHDMAC
         MACRO
         #DDD  DSNAM=,                 DSNAME or HFS File to Allocate  *
               &DDNAM=,                DDNAME to Process               *
               &RTDDN=,                Return DDNAME                   *
               &SYSOUT=                SYSOUT Dataset Class
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDD    - Inner Macro to Drive the Deconcatenation Function       *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.**
.*
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDD001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDGBLAS 0100-10050-10050-1200-00112-00112-00000-RHDMAC
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDGBLAS - Global Variable Definations for #DD Macro              *
.*                                                                    *
.*    This member was create for use with the #DD macro and contains  *
.*  all global variable definitions used in teh system.               *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Globals for #DD Macro
.*
         GBLB  &DDMC                   On - Mapping Macros Generated
         GBLB  &DDERR                  On - An MNOTE Has Been Issued
         GBLB  &DDNUL                  On - A Global in List Not Null
.*
         GBLC &LCCTP                   LOCTR for Text Pointers in CON
         GBLC &LCCTU                   LOCTR for Text Units in CON
         GBLC &LCDTP                   LOCTR for Text Pointers in DSA
         GBLC &LCDTU                   LOCTR for Text Units in DSA
.*
         GBLA &DDVERB                  Verb Code
         GBLC &DDSYS                   SYSOUT=something
.*
.*                                 -*- Labels for Constant Area
         GBLC  &CRBPTR                 Request Block Pointer
         GBLC  &CRB                    Request Block
         GBLC  &CRBX                   Request Block Extention
         GBLC  &CTUPL                  Text Unit Plist
         GBLC  &CTUNIT                 Text Units Defined
.*                                 -*- Labels for Dynamic Storage Area
         GBLC  &DRBPTR                 Request Block Pointer
         GBLC  &DRB                    Request Block
         GBLC  &DRBX                   Request Block Extention
         GBLC  &DTUPL                  Text Unit Plist
         GBLC  &DTUNIT                 Text Units Defined
.*
         GBLC  &PLNGTH                 Length of PLIST
         GBLC  &PCOUNT                 Count  of PLIST Entries
         GBLC  &TLNGTH                 Length of Text Units
.*
.*                                 -*- Text Units for Sysout Allocation
         GBLC  &DDSYSOU                SYSOUT= Output Class or *
         GBLC  &DDSPGNM                SYSOUT Program Name
         GBLC  &DDOUTLM                Output Limit to Assign
         GBLC  &DDCLOSE                Free Dataset on Close
         GBLC  &DDSHOLD                Hold Dataset on Deallocation
         GBLC  &DDSFMNO                Form Number
         GBLC  &DDUSRID                User ID to Assign
.*
.*                                 -*- Text Units for DSNAME Allocation
         GBLC  &DDDDNAM                DDNAME to Use For Allocation
         GBLC  &DDDSNAM                DSNAME to Allocate
         GBLC  &DDMEMBR                Member Name to Alllocate
         GBLC  &DDSTATS                Disposition SHR/OLD/MOD
         GBLC  &DDNDISP                Normal Disposition
         GBLC  &DDCDISP                Conditional Disposition
.*
.*                                 -*- Information Retrieval Variables
         GBLC  &DRDDNAM,&TRDDNAM       DDNAME To Retrive Info About
         GBLC  &DRDSNAM,&TRDSNAM       DSNAME To Retrive Info About
.*
.*   The &DR variable names are those that the invoker specified
.* on the macro to indicate the variable they wish the data to be
.* returned in.  Te &TR variable is the label in DSA where DYNALLOC
.* returns the data which will have an &SYSNDX generated name.  After
.* the allocation request, this macro system will move the data from
.* the &SYSNDX generated name to the invokers desired data area.
.*
         GBLC  &DRRTDDN,&TRRTDDN       Return DDNAME
         GBLC  &DRRTDSN,&TRRTDSN       Return Dataset Name
         GBLC  &DRRTMEM,&TRRTMEM       Return Member Name
.*
.*
.*
         GBLC  &DDVLSER
         GBLC  &DDPRIVT
         GBLC  &DDVLSEQ
         GBLC  &DDVLCNT
         GBLC  &DDVLRDS
         GBLC  &DDQNAME
         GBLC  &DDSSNM
         GBLC  &DDSSPRM
         GBLC  &DDSSATT
./ ADD NAME=#DDI     0100-10050-10050-1200-00064-00064-00000-RHDMAC
         MACRO
         #DDI  DSNAM=,                 DSNAME or HFS File to Allocate  *
               &DDNAM=,                DDNAME to Process               *
               &RTDDN=,                Return DDNAME                   *
               &SYSOUT=                SYSOUT Dataset Class
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDA    - Inner Macro to Drive the In-Use Processing Function     *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.**
.*
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDI001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDN     0100-10050-10050-1200-00064-00064-00000-RHDMAC
         MACRO
         #DDN  DSNAM=,                 DSNAME or HFS File to Allocate  *
               &DDNAM=,                DDNAME to Process               *
               &RTDDN=,                Return DDNAME                   *
               &SYSOUT=                SYSOUT Dataset Class
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDN    - Inner Macro to Drive the DDNAME Allocation Function     *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.**
.*
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDN001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDO     0100-10050-10050-1200-00064-00064-00000-RHDMAC
         MACRO
         #DDO  DSNAM=,                 DSNAME or HFS File to Allocate  *
               &DDNAM=,                DDNAME to Process               *
               &RTDDN=,                Return DDNAME                   *
               &SYSOUT=                SYSOUT Dataset Class
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDO    - Inner Macro to Drive the Non-JCL Functions              *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.**
.*
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDO001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDRESET 0100-10050-10050-1200-00107-00107-00000-RHDMAC
         MACRO
         #DDRESET ,                    Initialize at Execution Time
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDRESET - Text Units to be Initialized at Execution Time         *
.*                                                                    *
.*    This macro is executed prior to the invokation of DYNALLOC at   *
.*  execution time to initialize the input variables to the desired   *
.*  values of the invoker.                                            *
.*    I'm only doing those parameters that are needed as I continue   *
.*  to code the macro system.  If the value of the parameter is       *
.*  specified as a sublist, which is to say in parans then the value  *
.*  the variable is to be moved from the specified label to the       *
.*  DSA defined field at execution time.                              *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
         LCLC  &LBL1,&LBL2,&LBL3   General Character Workarea

.*====================================================================*
.** Move Data to Fields in DSA Prior to Dynalloc
.*====================================================================*
.*
&LBL1    SETC  'L1'.'&SYSNDX'
&LBL2    SETC  'L2'.'&SYSNDX'
&LBL3    SETC  'L3'.'&SYSNDX'
.*
.DD0100  ANOP
         AIF   ('&DRDDNAM' EQ '').DD0110
         AIF   ('&DRDDNAM'(1,1) NE '(').DD0110
         MVC   &TRDDNAM,&DRDDNAM(1)     Move DINDDNAM to DSA
         LA    R15,&TRDDNAM             Get Count of Characters
         JAS   R14,&LBL1                (Same)
         STH   R1,&TRDDNAM-2            (Same)
.*
.DD0110  ANOP
         AIF   ('&DRDSNAM' EQ '').DD0990
         AIF   ('&DRDSNAM'(1,1) NE '(').DD0990
         MVC   &TRDSNAM,&DRSDNAM(1)     Move DINDSNAM to DSA
         LA    R15,&TRDSNAM             Get Count of Characters
         JAS   R14,&LBL1                (Same)
         STH   R1,&TRDSNAM-2            (Same)
.*
.DD0990  ANOP
         B     &LBL3                   -> Branch Around
*
&LBL1    DS    0H                  -*- Find First Blank From R15
         XR    R1,R1                   Zero Work Register
&LBL2    DS    0H
         CLI   0(R15),C' '             Found a Blank?
         BER   R14                     Yes -> Return
         LA    R1,1(,R1)               Increment Count
         LA    R15,1(,R15)             Increment Position
         B     &LBL2                   -> Loop
&LBL3    DS    0H
.*====================================================================*
.** Return to Caller
.*====================================================================*
.*
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDB001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDRETRN 0100-10050-10050-1200-00186-00186-00000-RHDMAC
         MACRO
         #DDRETRN ,                    Text Units to be Returned
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDRETRN - Reserve Space to Variables to be Returned              *
.*                                                                    *
.*    This macro is executed prior to the invokation of DYNALLOC to   *
.*  reserve space in the Text pointer list and teh Text Unit area     *
.*  for those data items that have been requested to be returned by   *
.*  this Dynamic Allocation request.                                  *
.*    After allocation the macro #DDRETRV is called to move the data  *
.*  from these areas to where the invoker specified they should be    *
.*  returned.                                                         *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
         LCLC  &LBLDDN,&LBLDSN
         LCLC  &LBLMEM

.*====================================================================*
.** Process the DINDDNAM Text Unit
.*====================================================================*
.*
.DD0100  ANOP
         AIF   ('&DRDDNAM' EQ '').DD0200
&LBLDDN  SETC  'DDN'.'&SYSNDX'
&TRDDNAM SETC  '&LBLDDN'                Save Label to #DDRETRV
&C       SETC  '&DRDDNAM'
         AIF   ('&DRDDNAM'(1,1) NE '(').DD0110
&C       SETC  ' '
.DD0110  ANOP
*
&LCCTP   LOCTR ,                        Text Pointers for Constants
         DC    A(&LBLDDN-&CTUNIT)            Offset to Text Unit
.*
&LCDTP   LOCTR ,                        Text Pointers for DSA
         DS    A                        Space for DALSPGNM Text Pointer
.*
&LCCTU   LOCTR                          Text Units for Constants
&K       SETA  K'&C                     Get Count of Characters
&LBLDDN  DC    Y(DINDDNAM,1,&K),CL8'&C',C' '
.*
&LCDTU   LOCTR                          Text Units for DSA
         DS    0H,XL(6+8+1)             Space for DALSPGNM Text Unit

.*====================================================================*
.** Process the DINDSNAM Text Unit
.*====================================================================*
.*
.DD0200  ANOP
         AIF   ('&DRDSNAM' EQ '').DD0300
&LBLDSN  SETC  'DSN'.'&SYSNDX'
&TRDSNAM SETC  '&LBLDSN'                Save Label to #DDRETRV
&C       SETC  '&DRDSNAM'
         AIF   ('&DRDSNAM'(1,1) NE '(').DD0210
&C       SETC  ' '
.DD0210  ANOP
*
&LCCTP   LOCTR ,                        Text Pointers for Constants
         DC    A(&LBLDSN-&CTUNIT)            Offset to Text Unit
.*
&LCDTP   LOCTR ,                        Text Pointers for DSA
         DS    A                        Space for DALSPGNM Text Pointer
.*
&LCCTU   LOCTR                          Text Units for Constants
&K       SETA  K'&C                     Get Count of Characters
&LBLDSN  DC    Y(DINDSNAM,1,&K),CL44'&C',C' '
.*
&LCDTU   LOCTR                          Text Units for DSA
         DS    0H,XL(6+44)              Space for DALSPGNM Text Unit

.*====================================================================*
.** Process the DALRTDDN Text Unit
.*====================================================================*
.*
.DD0300  ANOP
         AIF   ('&DRRTDDN' EQ '').DD0400
&LBLRTD  SETC  'RTD'.'&SYSNDX'
&TRRTDDN SETC  'RTR'.'&SYSNDX'          Save Label to #DDRETRV
*
&LCCTP   LOCTR ,                        Text Pointers for Constants
         DC    A(&LBLRTD-&CTUNIT)            Offset to Text Unit
.*
&LCDTP   LOCTR ,                        Text Pointers for DSA
         DS    A                        Space for DINRTDDN Text Pointer
.*
&LCCTU   LOCTR                          Text Units for Constants
&LBLRTD  DC    Y(DALRTDDN,1,8),CL8' '
.*
&LCDTU   LOCTR                          Text Units for DSA
&TRRTDDN DS    0H,XL(6+8)               Space for DINRTDDN Text Unit

.*====================================================================*
.** Process the DINRTDSN Text Unit
.*====================================================================*
.*
.DD0400  ANOP
         AIF   ('&DRRTDSN' EQ '').DD0500
&LBLRDS  SETC  'RDS'.'&SYSNDX'
&TRRTDSN SETC  '&LBLRDS'                Save Label to #DDRETRV
*
&LCCTP   LOCTR ,                        Text Pointers for Constants
         DC    A(&LBLRDS-&CTUNIT)            Offset to Text Unit
.*
&LCDTP   LOCTR ,                        Text Pointers for DSA
         DS    A                        Space for DINRTDSN Text Pointer
.*
&LCCTU   LOCTR                          Text Units for Constants
&LBLRDS  DC    Y(DINRTDSN,1,255),CL255' '
.*
&LCDTU   LOCTR                          Text Units for DSA
         DS    0H,XL(6+255)             Space for DINRTDSN Text Unit

.*====================================================================*
.** Process the DINRTMEM Text Unit
.*====================================================================*
.*
.DD0500  ANOP
         AIF   ('&DRRTMEM' EQ '').DD0600
&LBLRME  SETC  'RME'.'&SYSNDX'
&TRRTMEM SETC  '&LBLRME'                Save Label to #DDRETRV
*
&LCCTP   LOCTR ,                        Text Pointers for Constants
         DC    A(&LBLRME-&CTUNIT)            Offset to Text Unit
.*
&LCDTP   LOCTR ,                        Text Pointers for DSA
         DS    A                        Space for DINRTMEM Text Pointer
.*
&LCCTU   LOCTR                          Text Units for Constants
&LBLRME  DC    Y(DINRTMEM,1,8),CL8' '
.*
&LCDTU   LOCTR                          Text Units for DSA
         DS    0H,XL(6+8)               Space for DINRTMEM Text Unit

.*
.** Return to Caller
.*
.DD0600  ANOP
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDB001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDRETRV 0100-10050-10050-1200-00076-00076-00000-RHDMAC
         MACRO
         #DDRETRV ,                    Pass Return Variables to Caller
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDRETRV - Pass Return Variables to Invoker                       *
.*                                                                    *
.*    This inner macro is called after the completion of the Dynalloc *
.*  macro to place any return variables in the data areas specified   *
.*  by the invoker at assembly time.                                  *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea

.*====================================================================*
.** Process the DINDSNAM Text Unit
.*====================================================================*
.*
.DD0100  ANOP
         AIF   ('&DRRTDDN' EQ '').DD0110
         MVC   &DRRTDDN,&TRRTDDN+6     Return DDNAME to Caller
.*
.DD0110  ANOP
         AIF   ('&DRRTDSN' EQ '').DD0120
         MVC   &DRRTDSN,&TRRTDSN+6     Return Dataset Name to Caller
.*
.DD0120  ANOP
         AIF   ('&DRRTMEM' EQ '').MEND
         MVC   &DRRTMEM,&TRRTMEM+6     Return Member Name to Caller
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDB001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDS     0100-10050-10050-1200-00061-00061-00000-RHDMAC
         MACRO
         #DDS  ,                       DSNAME or HFS File to Allocate
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDS    - Inner Macro to Drive the Statue Function                *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.**
.*
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDS001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDTNUL  0100-10050-10050-1200-00075-00075-00000-RHDMAC
         MACRO
         #DDTNUL &P1
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDTNUL - Check List of Globals for Non-Null Member               *
.*                                                                    *
.*    This inner macro is used to check for mutually exclusice        *
.*  parameters have been specified.                                   *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.**
.*
.DD0100  ANOP
  MNOTE ,'ENTERING #DDTNUL'
&DDNUL   SETB  0                  Assume All Are Nulls
&I       SETA  N'&P1              Get Count of Entries
&J       SETA  0
.DD0110  ANOP
         AIF   ('&P1(&J)' NE '').DD0200
&J       SETA  &J+1
         AIF   (&J GT &I).MEND
         AGO   .DD0100
.DD0200  ANOP
&DDNUL   SETB  1                  Indicate Non-null Found
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDS001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#DDTUN0  0100-10050-10050-1200-00087-00087-00000-RHDMAC
         MACRO
         #DDTUN0 &P1,&P2,&P3,&P4,&P5
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #DDTUN0 - Inner Macro to Define Text Units                        *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY PGMGBLAS             Copy Program management Globals
         COPY #DDGBLAS             Copy #DD Specific Globals
.*
         LCLC  &C,&D,&E            General Character Workarea
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.**
.*
.DD0100  ANOP
&LBLTU0  SETC  'TU0'.'&SYSNDX'
*
&LCCTP   LOCTR ,                             Text Ptrs for Constants
         DC    A(&LBLTU0-&CTUNIT)            Offset to Text Unit
.*
&LCDTP   LOCTR ,                             Text Pointers for DSA
         DS    A                             Space for Text Pointer
.*
&LCCTU   LOCTR                               Text Units for Constants
         AIF   ('&P4' EQ '').#DD110
&LBLTU0  DC    Y(&P1,&P2,&P3),&P4            Define Text Unit
         AGO   .#DD120
.#DD110  ANOP
&LBLTU0  DC    Y(&P1,&P2,&P3)                Define Text Unit
.#DD120  ANOP
         DS    0H
.*
&LCDTU   LOCTR                               Text Units for DSA
         AIF   ('&P5' NE '').#DD130
         DS    0H,XL(6)                      Space for Text Unit
         DS    0H
         AGO  .MEND
.#DD130  ANOP
         DS    0H,XL(6+&P5)                  Space for Text Unit
         DS    0H
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'#DDS001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#FREATB  0100-10050-10050-1200-00116-00116-00000-RHDMAC
         MACRO
&LBL     #FREATB &P,                   Above-The-Bar Getmain           *
               &LV=,                   Length of Area Requested        *
               &A=,                    Address of Area to Free         *
               &KEY=,                  Key of Storage Requested        *
               &SVC=167,               SVC Number to Use               *
               &BRANCH=NO              YES Indicates Branch Entry
.*
.**********************************************************************
.* Copyright (c) 2009 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #FREATB - Freemain for Above-The-Bar Storage                      *
.*                                                                    *
.*    This macro provides an interface to the RDHGATB callable        *
.*  service.  APF Authorized callers may use a branch entry to        *
.*  the service by coding BRANCH=YES on the macro.  All others        *
.*  must use the SVC entry to the service.                            *
.*    This is a simple for of a freemain. There are no subpools,      *
.*  though you may request a specific key. When you free storage
.*  acquired via #GETATB you must free the same length as was         *
.*  originally acquired at that addreee partial freemains are         *
.*  not supported.                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         LCLC  &K                      Specific key requested
         LCLA  &I                      Work Variables
.*
         AIF   ('&LBL' EQ '').NOLBL
&LBL     DS    0H
.NOLBL   ANOP
.*
.** Do Validation
.*
         AIF   ('&P' EQ 'R').ATB010
         AIF   ('&P' EQ 'RU').ATB010
         AGO   .MNOTE1                 Issue Error Message
.ATB010  ANOP
         AIF   ('&LV' EQ '').MNOTE2
.*
.** Generate Macro Code
.*
         LBIN  R1,&A                   Get Address of Area to Free
         LBIN  R0,&LV                  Put Length Value in R0
.*
&I       SETA  1024                    Indicate Freemain
&K       SETC  '0'
         AIF   ('&KEY' EQ '').ATB020   If Key Not Specified
&I       SETA  &I+256                  Set Indicator Bit
&K       SETC  '&KEY'
.ATB020  ANOP
         AIF   ('&P' NE 'RC').ATB030
&I       SETA  &I+512                  Set Indicator Bit
.ATB030  ANOP
.*
         AIF   (&I EQ 0).ATB040        Skip if Nothing Special
         IIHL  R0,&I+&K*16             Put Key in And Flag Register
.ATB040  ANOP
.*
         AIF   ('&BRANCH' NE 'YES').ATB050
         LLGT  R15,=V(RDHGATB)         Callable Service Address
         BASPM R14,R15                 Call Service
         AGO   .MEND
.*
.ATB050  ANOP
         SVC   &SVC                    Issue SVC Call to Service
         AGO   .MEND
.*
.** Error Messages
.*
.MNOTE1  ANOP
         MNOTE 8,'#FREATB: Positional parameter invlid. Must be R or RU*
               .'
         AGO   .MEND
.*
.MNOTE2  ANOP
         MNOTE 8,'#FREATB: LV= Parameter was not specified and is requi*
               red.'
         AGO   .MEND
.*
.MNOTE3  ANOP
         MNOTE 8,'#FREATB: A= Parameter was not specified and is requir*
               ed.'
         AGO   .MEND
.*
.MEND    ANOP
         MEND ,
./ ADD NAME=#GETATB  0100-10050-10050-1200-00118-00118-00000-RHDMAC
         MACRO
&LBL     #GETATB &P,                   Above-The-Bar Getmain           *
               &LV=,                   Length of Area Requested        *
               &KEY=,                  Key of Storage Requested        *
               &SVC=167,               SVC Number to Use               *
               &BRANCH=NO              YES Indicates Branch Entry
.*
.**********************************************************************
.* Copyright (c) 2009 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #GETATB - Getmain for Above-The-Bar Storage                       *
.*                                                                    *
.*    This macro provides an interface to the RDHGATB callable        *
.*  service.  APF Authorized callers may use a branch entry to        *
.*  the service by coding BRANCH=YES on the macro.  All others        *
.*  must use the SVC entry to the service.                            *
.*    This is a simple for of a getmain.  There are no subpools,      *
.*  though you may request a specific key. All storage returned       *
.*  is non-fetch protected.  The storage address returned will        *
.*  always be on a 32-byte boundry with the length rounded up to      *
.*  a multiple of 32.  And when you free the storage, you must        *
.*  free the same length that was originally requested.  Partial      *
.*  freemains are not allowed.                                        *
.*    Conditional requests for storage will be honored if you         *
.*  specify the RC for of the macro.  If storage is not available     *
.*  R1 will be zero on the return and R15 will have a return code     *
.*  of 8.                                                             *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         LCLC  &K                      Specific key requested
         LCLA  &I                      Work Variables
.*
         AIF   ('&LBL' EQ '').NOLBL
&LBL     DS    0H
.NOLBL   ANOP
.*
.** Do Validation
.*
         AIF   ('&P' EQ 'R').ATB010
         AIF   ('&P' EQ 'RU').ATB010
         AIF   ('&P' EQ 'RC').ATB010
         AGO   .MNOTE1                 Issue Error Message
.ATB010  ANOP
         AIF   ('&LV' EQ '').MNOTE2
.*
.** Generate Macro Code
.*
         XGR   R1,R1                   Indicates Getmain Request
         LBIN  R0,&LV                  Put Length Value in R0
.*
&I       SETA  0
&K       SETC  '0'
         AIF   ('&KEY' EQ '').ATB020   If Key Not Specified
&I       SETA  &I+256                  Set Indicator Bit
&K       SETC  '&KEY'
.ATB020  ANOP
         AIF   ('&P' NE 'RC').ATB030
&I       SETA  &I+512                  Set Indicator Bit
.ATB030  ANOP
.*
         AIF   (&I EQ 0).ATB040        Skip if Nothing Special
         IIHL  R0,&I+&K*16             Put Key in And Flag Register
.ATB040  ANOP
.*
         AIF   ('&BRANCH' NE 'YES').ATB050
         LLGT  R15,=V(RDHGATB)         Callable Service Address
         BASPM R14,R15                 Call Service
         AGO   .MEND
.*
.ATB050  ANOP
         SVC   &SVC                    Issue SVC Call to Service
         AGO   .MEND
.*
.** Error Messages
.*
.MNOTE1  ANOP
         MNOTE 8,'#GETATB: Positional parameter invlid. Must be R, RC, *
               or RU.'
         AGO   .MEND
.*
.MNOTE2  ANOP
         MNOTE 8,'#GETATB: LV= Parameter was not specified and is requi*
               red.'
         AGO   .MEND
.*
.MEND    ANOP
         MEND ,
./ ADD NAME=#GPRM    0100-10050-10050-1200-00214-00214-00000-RHDMAC
         MACRO ,
&LBL     #GPRM &A,                    Program to Call                  *
               &TRACE=YES             Traces PARMS
.*
.**********************************************************************
.* Copyright (c) 2009 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #GPRM - Load Parameter Addresses Into Registers                   *
.*                                                                    *
.*    This macro was written to be used in conjunction with the       *
.*  #CALL macro, which places the input parameters into DSA and       *
.*  is AMODE(31/64) and ARMODE(P/AR).                                 *
.*    The macro is operand is specified as a sublist of triplets      *
.*  in the following format:                                          *
.*                                                                    *
.*              A B  C         D                                      *
.*       GPRM  (1,R2,'Comment',Len),  -Or-                            *
.*                                                                    *
.*       GPRM ((1,R2,'Comment',Len),                                  *
.*             (2,R3,'Comment',Len),                                  *
.*             (3,R4,'Comment',Len),                                  *
.*             (4,R5,'Comment',Len))                                  *
.*                                                                    *
.*     Where: A - Is the sequential number of the parameter           *
.*                specified as a numeric digit from1 to N.            *
.*            B - Is the register to load the parameter address       *
.*                into.                                               *
.*            C - Is a comment that may be used to describe the       *
.*                data at the address the parameter points to.        *
.*            D - Is the length of the data at the address that       *
.*                the parameter points to.                            *
.*                                                                    *
.*    Upon execution of the macro, the indicated registers will       *
.*  be loaded with the values from the parameter list pointed to      *
.*  by R1.  If SYSSTATE is AMODE(31), the four byte values will       *
.*  be loaded. If SYSTATE indicates AMODE(64), the eight byte         *
.*  values will be loaded into the 64-Bit registers specified.        *
.*    If SYSTATE indicates ARMODE, then the access registers will     *
.*  also be loaded from the corresponding address pointed to by R0.   *
.*    After the registers are loaded then a #TRACE macro is           *
.*  internally generated to display the input parameters to           *
.*  TRCPRINT.                                                         *
.*                                                                    *
.*                                                                    *
.*  Note:                                                             *
.*    R0 and R1 must contain the access and GP registers as they      *
.*  were on input to the program when this macro is executed.  Also   *
.*  this macro uses R14 and r15 as work registers.                    *
.*                                                                    *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and local Variables
.*
         COPY  PGMGBLAS                Copy Globals
.*
         LCLA  &I,&K,&J                Work Variables
         LCLA  &CNT                    Count of Sublists
         LCLC  &C                      (Same)
.*
         LCLA  &PN                     Parameter Number
         LCLC  &PR                     Parameter Register
         LCLC  &PC                     Parameter Comment
         LCLC  &PL                     Parameter Length
         LCLC  &DATA                   DATA= Parm For #TRACE
.*
         LCLA  &AOFF                   Offset to AR Register
         LCLA  &GOFF                   Offset to GP Register
.*
.** Generate LBL if Specified
.*
         AIF   ('&LBL' EQ '').VAL000
&LBL     DS    0H
.*
.** Validate Input Parameters For Single Entry
.*
.VAL000  ANOP
         AIF   ('&A'(1,2) EQ '((').VAL100
         AIF   (N'&A NE 4).MNOTE01
         AIF   ('&A(3)'(1,1) NE '''').MNOTE02
.*
.VAL010  ANOP
&PN      SETA  &A(1)                   Extract Values
&PR      SETC  '&A(2)'                 (Same)
&PC      SETC  '&A(3)'(2,K'&A(3)-2)    (Same)
&PC      SETC  'Parm&PN.: &PC'         (Same)
&PL      SETC  '&A(4)'                 (Same)
&DATA    SETC  '(''&PC'',0(&PR.),&PL.)'
.*
.** Generate Text for a Single Parameter
.*
         EREGG R0,R1                   Get Parameter Regs From Stack
         LGR   R14,R0                  Get Address of Parm Value
         AIF   ('&SYSAM64' EQ 'YES').VAL020
&GOFF    SETA  4*&PN-4                 Get Offset to GR Register
         L     &PR,&GOFF.(,R1)         Load parameter Value
         AGO   .VAL030
.*
.VAL020  ANOP
&GOFF    SETA  8*&PN-8                 Get Offset to GR Register
         LG    &PR,&GOFF.(,R1)         Load parameter Value
.*
.VAL030  ANOP
         AIF   ('&SYSASCE' NE 'AR').VAL040
&AOFF    SETA  4*&PN-4                 Get Offset to AR Register
         LAMY  &PR,&PR,&AOFF.(R14)     Load Access Register
.*
.VAL040  ANOP
*        #TRACE MSG='Parms Passed Into: &CASECT',NOHEAD=YES
         #TRACE MSG='Parms Passed Into: &CASECT',NOHEAD=YES
         #TRACE MSG='===========================',NOHEAD=YES
         #TRACE DATA=&DATA,NOHEAD=YES
         AGO   .MEND
.*
.** Generate Text for Sublist Within Sublist
.*
.VAL100  ANOP
&CNT     SETA  N'&A
&I       SETA  1
&DATA    SETC  '('
.* MNOTE *,'CNT=&CNT'
.*
.*
         EREGG R0,R1                   Get Partameter Regs From Stack
         LGR   R14,R0                  Get Address of Parm Values
.VAL110  ANOP
         AIF   (N'&A(&I) NE 4).MNOTE01
         AIF   ('&A(&I,3)'(1,1) NE '''').MNOTE02
.*
&PN      SETA  &A(&I,1)                    Extract Values
&PR      SETC  '&A(&I,2)'                  (Same)
&PC      SETC  '&A(&I,3)'(2,K'&A(&I,3)-2)  (Same)
&PC      SETC  'Parm&PN.: &PC'             (Same)
&PL      SETC  '&A(&I,4)'                  (Same)
.*
&DATA    SETC  '&DATA.(''&PC'',0(&PR.),&PL.),'
.* MNOTE *,'PN=&PN, PR=&PR, PC=&PC, PL=&PL'
.* MNOTE *,'DATA=&DATA'
.*
         AIF   ('&SYSAM64' EQ 'YES').VAL120
&GOFF    SETA  4*&PN-4                 Get Offset to GR Register
         L     &PR,&GOFF.(,R1)         Load parameter Value
         AGO   .VAL130
.*
.VAL120  ANOP
&GOFF    SETA  8*&PN-8                 Get Offset to GR Register
         LG    &PR,&GOFF.(,R1)         Load parameter Value
.*
.VAL130  ANOP
         AIF   ('&SYSASCE' NE 'AR').VAL140
&AOFF    SETA  4*&PN-4                 Get Offset to AR Register
         LAMY  &PR,&PR,&AOFF.(R14)     Load Access Register
.*
.VAL140  ANOP
.*
.VAL999  ANOP
&I       SETA  &I+1                    Increment to Next Sublist
.* MNOTE *,'I=&I, CNT=&CNT'
         AIF   (&I LE &CNT).VAL110     -> Loop
.*
.** Issue #TRACE Macro to Show Paramaters Input
.*
&DATA    SETC  '&DATA'(1,K'&DATA-1)
&DATA    SETC  '&DATA.)'
.* MNOTE *,'DATA=&DATA'
*        #TRACE MSG='Parms Passed Into: &CASECT',NOHEAD=YES
         #TRACE MSG='Parms Passed Into: &CASECT',NOHEAD=YES
         #TRACE MSG='===========================',NOHEAD=YES
         #TRACE DATA=&DATA,NOHEAD=YES
         AGO   .MEND                   -> Exit Macro
.*
.** ERROR MESSAGES
.*
.MNOTE01 ANOP
         MNOTE 8,'#GPRM: Sublist must have 4 parameters.'
         AGO   .MEND
.*
.MNOTE02 ANOP
         MNOTE 8,'#GPRM: Sublist parameter 3 must be quoted.'
         AGO   .MEND
.*
.** Exit Macro
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=#MAC64   0100-10050-10050-1200-00892-00892-00000-RHDMAC
*
***********************************************************************
* Copyright (c) 2009 - Richard D. Harper, All Rights Reserved         *
***********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
*                                                                     *
** #MAC64 - Copybook to Provide Support Macros for 64-Bit Programs    *
*                                                                     *
*    The following macros are provided in support of 64-bit programs  *
*  that call other programs, either 31-bit or 64-bit.  There is a     *
*  problem with BASR in that while it sets the AMODE bit bit-32 to    *
*  one for a 31-bit return address, it does no set the AMODE bit,     *
*  bit-63 to one for a 64-bit return address.  This failure will      *
*  cause a BAKR/PR sequence to return to the 64-bit program in        *
*  24-bit AMODE.  So, these macros were developed to resolve this     *
*  issue by assuring the AMODE bit, bit-63 is properly set when a     *
*  64-bit program issues a call to a program that returns via PR.     *
*                                                                     *
*    BASPM - Branch and Save and Preserve Amode                       *
*    BAS31 - Branch and Save to a Program in that runs in AMODE(31)   *
*    BAS64 - Branch and Save to a Program in that runs in AMODE(64)   *
*                                                                     *
*    The following macros were developed to fill in a gap in the      *
*  Zos instruction set for the SS instructions.  Most of the older    *
*  RX and RS instructions which use a BDDD base and displacement      *
*  have been replaced by the Y and G instructions which allow for     *
*  a BDDDDD base and displacement.  However, the SS instruction set   *
*  which is very commonly used have not, and cannot be replaced as    *
*  that would require an 8-byte instruction and the hardware just     *
*  can't support that.                                                *
*    So, in order to make full use of the 20-bit displacement base    *
*  registers, allowing direct addressability of a megabyte of         *
*  storage, it was necessary to provide a replacement for the SS      *
*  instruction set via these macros.                                  *
*    These macros will generate a sequence of instructions similar    *
*  to those shown below.  They use R14 and R15 as work registers.     *
*  if you need to preserve these work registers specify SAVE=YES      *
*  on the MACRO.                                                      *
*                     LAY R14,&A                                      *
*                     LAY R15,&B                                      *
*                     MVC 0(L'&A,R14),0(R15)                          *
*                                                                     *
*    The following macros are provided in this copybook.              *
*                                                                     *
*                                                                     *
*    CLCY   - Compare Logical Character W/20-Bit Displacements        *
*    MVCY   - Move Character                                          *
*    MVNY   - Move Numerics                                           *
*    MVZY   - Move Zones                                              *
*    MVOY   - Move With Offset                                        *
*    XCY    - Exclusive Or Character                                  *
*    NCY    - And Character                                           *
*    OCY    - Or Character                                            *
*    TRY    - Translate                                               *
*    TRTY   - Translate and Test                                      *
*                                                                     *
*    APY    - Add Packed                                              *
*    CPY    - Compare Packed                                          *
*    DPY    - Divide Packed                                           *
*    MPY    - Multiply Packed                                         *
*    SPY    - Subtract Packed                                         *
*    SRPY   - Shift and Round Packed                                  *
*    ZAPY   - Zero and Add Packed                                     *
*    EDY    - Edit                                                    *
*    EDMKY  - Edit and Mark                                           *
*    PACKY  - Pack                                                    *
*    UNPKY  - Unpack                                                  *
*                                                                     *
*    MVCKY  - Move With Key                                           *
*    MVCPY  - Move to Primary                                         *
*    MVCSY  - Move to Secondary                                       *
*    MVCDKY - Move With Destination Key                               *
*    MVCSKY - Move With Source Key                                    *
*    MVCOSY - Move With Optional Specifications                       *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* Date     Developer Cng# Comments                                    *
* ======== ========= ==== ==========================================  *
* 00/00/00 R.Harper  M000 Macro Developed                             *
*                                                                     *
***********************************************************************
*
*
*--------------------------------------------------------------------*
* BASPM - Branch and Save And Preserve Amode                         *
*--------------------------------------------------------------------*
*
         MACRO
         BASPM &A,&B                   Branch & Save & Preserve Amode
         BSM   &B,0                    Set AMode Bits in Target Addr
         BASSM &A,&B                   Set AMode Bits in Return Addr
         MEND
*
*--------------------------------------------------------------------*
* BAS31 - Branch and Save To a 31-Bit Program                        *
*--------------------------------------------------------------------*
*
         MACRO
         BAS31 &A,&B                   Branch & Save to 31-Bit Program
         NILL  &B,X'FFFE'              Assure Bit63 is Zero in Target
         OILH  &B,X'8000'              Assure Bit32 is One  in Target
         BASSM &A,&B                   Set Return Amode, & 31-Bit Call
         MEND
*
*--------------------------------------------------------------------*
* BAS64 - Branch and Save To a 64-Bit Program                        *
*--------------------------------------------------------------------*
*
         MACRO
         BAS64 &A,&B                   Branch & Save to 64-Bit Program
         OILL  &B,X'0001'              Assure Bit63 is One in Target
         BASSM &A,&B                   Set Return Amode, & 64-Bit Call
         MEND
*
*--------------------------------------------------------------------*
* CLCY - Compare Logical Character With 20-Bit Displacement          *
*--------------------------------------------------------------------*
*
         MACRO
         CLCY  &A,&B,                  20-Bit MVC Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').CLCY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.CLCY010 ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         CLC   0(L'&A,&R1),0(&R2)      Compare Data
.*
         AIF   ('&SAVE' NE 'YES').CLCY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.CLCY020 ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MVCY - Move Character With 20-Bit Displacement                     *
*--------------------------------------------------------------------*
*
         MACRO
         MVCY  &A,&B,                  20-Bit MVC Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MVCY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MVCY010 ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MVC   0(L'&A,&R1),0(&R2)      Move Data
.*
         AIF   ('&SAVE' NE 'YES').MVCY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MVCY020 ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MVNY - Move Numerics With 20-Bit Displacement                      *
*--------------------------------------------------------------------*
*
         MACRO
         MVNY  &A,&B,                  20-Bit MVN Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MVNY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MVNY010 ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MVN   0(L'&A,&R1),0(&R2)      Move Data
.*
         AIF   ('&SAVE' NE 'YES').MVNY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MVNY020 ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MVZY - Move Zones With 20-Bit Displacement                         *
*--------------------------------------------------------------------*
*
         MACRO
         MVZY  &A,&B,                  20-Bit MVZ Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MVZY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MVZY010 ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MVZ   0(L'&A,&R1),0(&R2)      Move Data
.*
         AIF   ('&SAVE' NE 'YES').MVZY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MVZY020 ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MVOY - Move With Offset With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         MVOY  &A,&B,                  20-Bit MVO Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MVO010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MVO010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MVO   0(L'&A,&R1),0(L'&B,&R2) Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').MVO020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MVO020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* XCY - Exclusive OR Character Zones With 20-Bit Displacement        *
*--------------------------------------------------------------------*
*
         MACRO
         XCY   &A,&B,                  20-Bit XC Macro                 *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').XCY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.XCY010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         XC    0(L'&A,&R1),0(&R2)      Move Data
.*
         AIF   ('&SAVE' NE 'YES').XCY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.XCY020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* OCY -  OR Character Zones With 20-Bit Displacement                 *
*--------------------------------------------------------------------*
*
         MACRO
         OCY   &A,&B,                  20-Bit OC Macro                 *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').OCY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.OCY010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         OC    0(L'&A,&R1),0(&R2)      Move Data
.*
         AIF   ('&SAVE' NE 'YES').OCY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.OCY020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* NCY - AND Character Zones With 20-Bit Displacement                 *
*--------------------------------------------------------------------*
*
         MACRO
         NCY   &A,&B,                  20-Bit NC Macro                 *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').NCY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.NCY010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         NC    0(L'&A,&R1),0(&R2)      Move Data
.*
         AIF   ('&SAVE' NE 'YES').NCY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.NCY020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* TRY - Translate With 20-Bit Displacement                           *
*--------------------------------------------------------------------*
*
         MACRO
         TRY   &A,&B,                  20-Bit TR Macro                 *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').TRY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.TRY010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         TR    0(L'&A,&R1),0(&R2)      Move Data
.*
         AIF   ('&SAVE' NE 'YES').TRY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.TRY020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* TRTY - Translate and Test With 20-Bit Displacement                 *
*--------------------------------------------------------------------*
*
         MACRO
         TRTY  &A,&B,                  20-Bit TRT Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').TRT010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.TRT010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         TRT   0(L'&A,&R1),0(&R2)      TRT Data
.*
         AIF   ('&SAVE' NE 'YES').TRT020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.TRT020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* APY  - Add Packed With 20-Bit Displacement                         *
*--------------------------------------------------------------------*
*
         MACRO
         APY   &A,&B,                  20-Bit AP  Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').APY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.APY010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         AP    0(L'&A,&R1),0(L'&B,&R2) Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').APY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.APY020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* CPY  - Compare Packed With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         CPY   &A,&B,                  20-Bit CP  Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').CPY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.CPY010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         CP    0(L'&A,&R1),0(L'&B,&R2) Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').APY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.CPY020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* DPY  - Divide Packed With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         DPY   &A,&B,                  20-Bit DP  Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').DPY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.DPY010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         DP    0(L'&A,&R1),0(L'&B,&R2) Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').DPY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.DPY020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MPY  - Multiply Packed With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         MPY   &A,&B,                  20-Bit MP  Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MPY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MPY010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MP    0(L'&A,&R1),0(L'&B,&R2) Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').MPY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MPY020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* SPY  - Subtract Packed With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         SPY   &A,&B,                  20-Bit SP  Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').SPY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.SPY010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         SP    0(L'&A,&R1),0(L'&B,&R2) Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').SPY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.SPY020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* SRPY - Shift Packed With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         SRPY  &A,&B,                  20-Bit SRP Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').SRP010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.SRP010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         SRP   0(L'&A,&R1),0(L'&B,&R2) Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').SRP020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.SRP020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* ZAPY - Shift Packed With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         ZAPY  &A,&B,                  20-Bit ZAP Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').ZAP010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.ZAP010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         ZAP   0(L'&A,&R1),0(L'&B,&R2) Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').ZAP020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.ZAP020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* EDY  - Edit With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         EDY   &A,&B,                  20-Bit ZAP Macro                *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').EDY010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.EDY010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         ED    0(L'&A,&R1),0(&R2)      Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').EDY020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.EDY020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* EDMKY - Edit With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         EDMKY &A,&B,                  20-Bit EDMK Macro               *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').EDM010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.EDM010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         EDMK  0(L'&A,&R1),0(&R2)      Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').EDM020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.EDM020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* PACKY - Pack With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         PACKY &A,&B,                  20-Bit PACK Macro               *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').PAK010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.PAK010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         PACK  0(L'&A,&R1),0(&R2)      Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').PAK020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.PAK020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* UNPKY - UNPK With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         UNPKY &A,&B,                  20-Bit UNPK Macro               *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').UNP010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.UNP010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         UNPK  0(L'&A,&R1),0(&R2)      Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').UNP020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.UNP020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MVCDKY - MVCDK With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         MVCDKY &A,&B,                 20-Bit MVCDK Macro              *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MVC010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MVC010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MVCDK 0(L'&A,&R1),0(&R2)      Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').MVC020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MVC020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MVCSKY - MVCSK With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         MVCSKY &A,&B,                 20-Bit MVCDK Macro              *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MVC010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MVC010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MVCSK 0(L'&A,&R1),0(&R2)      Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').MVC020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MVC020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MVCPY - MVCP With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         MVCPY &A,&B,&C,               20-Bit MVCP  Macro              *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MVC010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MVC010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MVCP  0(L'&A,&R1),0(&R2),&C   Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').MVC020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MVC020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MVCSY - MVCS With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         MVCSY &A,&B,&C,               20-Bit MVCS  Macro              *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MVC010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MVC010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MVCS  0(L'&A,&R1),0(&R2),&C   Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').MVC020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MVC020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MVCKY - MVCK With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         MVCKY &A,&B,&C,               20-Bit MVCK  Macro              *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MVC010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MVC010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MVCK  0(L'&A,&R1),0(&R2),&C   Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').MVC020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MVC020  ANOP
.*
         MEND
*
*--------------------------------------------------------------------*
* MVCOSY - MVCOS With 20-Bit Displacement
*--------------------------------------------------------------------*
*
         MACRO
         MVCOSY &A,&B,&C,              20-Bit MVCOS Macro              *
               &SAVE=NO,               To Save or Not to Save?         *
               &WKREG=R14,             Even/Odd Pair of Work Registers *
               &WKDSA=DSASAVER         2-Doubleword Savearea
.*
         LCLC  &R1,&R2                 Work Variables
&R1      SETC  '&WKREG'                Set Register Values
&R2      SETC  '&WKREG+1'              (Same)
.*
         AIF   ('&SAVE' NE 'YES').MVC010
         STMG  &R1,&R2,&WKDSA          Save Original Values
.MVC010  ANOP
.*
         LAY   &R1,&A                  Get Address of Target
         LAY   &R2,&B                  Get Address of Source
         MVCOS 0(L'&A,&R1),0(&R2),&C   Do Instruction
.*
         AIF   ('&SAVE' NE 'YES').MVC020
         LMG   &R1,&R2,&WKDSA          Load Original Values
.MVC020  ANOP
.*
         MEND
./ ADD NAME=#MSG     0100-10050-10050-1200-00091-00091-00000-RHDMAC
         MACRO
&LBL     #MSG  &MSG,                   Message Macro Text              *
               &MSGID=,                Message ID AAA9999X             *
               &DD=MSGPRINT,           DDNAME for SYSOUT               *
               &SQUEEZE=YES,           Squeeze Out Multiple Blanks     *
               &PRINT=NOGEN            Print Option GEN/NOGEN
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #MSG - Issue a Message to a DDNAME                                *
.*                                                                    *
.*                                                                    *
.*      &MSG = Specifies a message to be printed allowinf for         *
.*             embedded variables in a sublisted string.  Variable    *
.*             data will be printed according to the type of          *
.*             variable.  Types C and Z are printes in character      *
.*             format.  Types F, H and P are printed in decimal       *
.*             format.  Everything else is printed in hex format.     *
.*                   'This is a message'                              *
.*                   ('The ',COLOR,' HARE ' is ',HEIGHT,' ft. tall.'  *
.*                   ('Show savearea at: ',DSASAVEA)                  *
.*                                                                    *
.*                                                                    *
.*    &MSGID = Specifies a standard ZOS Message ID to identify the    *
.*             message to other products or components.  Should be    *
.*             unique and is useful for interfacing with automation   *
.*             products.  The form is: AAA9999X                       *
.*                                                                    *
.*             Where: AAA  - is a 3 Char Product Identifier           *
.*                    9999 - is a 4 Digit Message Number              *
.*                    X    - is an Action Code: I - Informational     *
.*                                              A - Action Required   *
.*                                              E - Error Condition   *
.*                                                                    *
.*                                                                    *
.*     &DD   = Specifies the DDNAME of the output dataset on Open     *
.*             or Close. If not specified one will be dynamically     *
.*             allocated. Only one sysout dataset can exist per task. *
.*                                                                    *
.*    &PRINT = GEN/NOGEN. Defined the PRINT Control for This Macro    *
.*                                                                    *
.*                                                                    *
.*  &SQUEEZE = YES/NO.  A value of YES indicates that multiple        *
.*             consequative space characters are to be removed        *
.*             from the final output before printing.                 *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Issue Call to #MSGI Common Message Macro
.*
&LBL     #MSGI MSG,                    Indicate Invoked by #MSG        *
               &MSG,                   Message Macro Text              *
               MSGID=&MSGID,           Message ID AAA9999X             *
               DD=&DD,                 DDNAME for SYSOUT               *
               SQUEEZE=&SQUEEZE,       Squeeze Out Multiple Blanks     *
               ROUTCDE=,               (Unused) Routing Codes          *
               RALEN=,                 (Unused) Reply Area Length      *
               RAADR=,                 (Unused) Reply Area Address     *
               RAECB=,                 (Unused) Reply ECB Address      *
               PRINT=&PRINT            Print Option GEN/NOGEN
.*
         MEND ,
./ ADD NAME=#MSGI    0100-10050-10050-1200-00407-00407-00000-RHDMAC
         MACRO
&LBL     #MSGI &TYPE,                  Message Type MSG/WTO/WTOR       *
               &MSG,                   Message Macro Text              *
               &MSGID=,                Message ID AAA9999X             *
               &DD=,                   DDNAME for #MSG SYSOUT          *
               &ROUTCDE=,              Routing Codes                   *
               &RALEN=,                Reply Area Length               *
               &RAADR=,                Reply Area Address              *
               &RAECB=,                Reply ECB Address               *
               &SQUEEZE=YES,           Squeeze Out Multiple Blanks     *
               &PRINT=NOGEN            Print Option GEN/NOGEN
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #MSG - Issue a Message to a DDNAME                                *
.*                                                                    *
.*    &TYPE  = Indicates Invoker: #MSG, #WTO, #WTOR                   *
.*                                                                    *
.*    &MSGID = Specifies a standard ZOS Message ID to identify the    *
.*             message to other products or components.  Should be    *
.*             unique and is useful for interfacing with automation   *
.*             products.  The form is: AAA9999X                       *
.*                                                                    *
.*             Where: AAA  - is a 3 Char Product Identifier           *
.*                    9999 - is a 4 Digit Message Number              *
.*                    X    - is an Action Code: I - Informational     *
.*                                              A - Action Required   *
.*                                              E - Error Condition   *
.*                                                                    *
.*      &MSG = Specifies a message to be printed allowinf for         *
.*             embedded variables in a sublisted string.  Variable    *
.*             data will be printed according to the type of          *
.*             variable.  Types C and Z are prints in character       *
.*             format.  Types F, H and P are printed in decimal       *
.*             format.  Everything else is printed in hex format.     *
.*                   'This is a message'                              *
.*                   ('The ',COLOR,' HARE ' is ',HEIGHT,' ft. tall.'  *
.*                   ('Show savearea at: ',DSASAVEA)                  *
.*                                                                    *
.*       &DD = Specifies the DDNAME of the output dataset on Open     *
.*             or Close. If not specified one will be dynamically     *
.*             allocated. Only one sysout dataset can exist per task. *
.*                                                                    *
.*  &ROUTCDE = WTO/WTOR Routing Codes                                 *
.*                                                                    *
.*    &RALEN = Reply Area Length                                      *
.*                                                                    *
.*    &RAADR = Reply Area Address                                     *
.*                                                                    *
.*    &RAECB = Reply ECB Address                                      *
.*                                                                    *
.*    &PRINT = GEN/NOGEN. Defined the PRINT Control for This Macro    *
.*                                                                    *
.*                                                                    *
.*  &SQUEEZE = YES/NO.  A value of YES indicates that multiple        *
.*             consequative space characters are to be removed        *
.*             from the final output before printing.                 *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS             Copy Globals
         LCLC  &MSGLBL              Internal Label Names
         LCLC  &MSGARE              (Same)
         LCLC  &MSGLEN              (Same)
         LCLC  &MSGCOD              (Same)
         LCLC  &RCDE1,&RCDE2        (Same)
         LCLC  &C                   Work Variables
.*
         LCLA  &K,&J,&N             Work Variables
.*
         LCLB  &M,&W,&R,&S,&I,&L    Flag Bit Values
         LCLB  &B(16)               (Same)
.*
.** Define Internal Labels
.*
&MSGLBL  SETC  'MSG'.'&SYSNDX'
&MSGARE  SETC  'MSG'.'&SYSNDX'.'A'
&MSGLEN  SETC  'MSG'.'&SYSNDX'.'L'
&MSGCOD  SETC  'MSG'.'&SYSNDX'.'C'
.*
.*--------------------------------------------------------------------*
.** Do Basic Validation of Parameters
.*--------------------------------------------------------------------*
.*
         AIF   ('&TYPE' EQ 'MSG').VAL010
         AIF   ('&TYPE' EQ 'WTO').VAL010
         AIF   ('&TYPE' EQ 'WTOR').VAL010
         AGO   .MNOTE1
.*
.VAL010  ANOP
         AIF   ('&MSG' EQ '').MNOTE2
         AIF   ('&MSG' NE 'CLOSE').VAL015
&L       SETB  1
.VAL015  ANOP
.*
         AIF   ('&PRINT' EQ 'GEN').VAL020
         AIF   ('&PRINT' EQ 'NOGEN').VAL020
         AGO   .MNOTE3
.*
.VAL020  ANOP
         AIF   ('&SQUEEZE' EQ 'YES').VAL025
         AIF   ('&SQUEEZE' EQ 'NO').VAL030
         AGO   .MNOTE4
.VAL025  ANOP
&S       SETB  1
.*
.** Validate #MSG Macro
.*
.VAL030  ANOP
         AIF   ('&TYPE' NE 'MSG').VAL040
         AIF   ('&DD' EQ '').MNOTE5
         AIF   ('&ROUTCDE' NE '').MNOTE6
         AIF   ('&RALEN' NE '').MNOTE7
         AIF   ('&RAADR' NE '').MNOTE8
         AIF   ('&RAECB' NE '').MNOTE9
&M       SETB  1
         AGO   .VAL060
.*
.** Validate #WTO Macro
.*
.VAL040  ANOP
         AIF   ('&TYPE' NE 'WTO').VAL050
         AIF   ('&DD' NE '').MNOTE10
         AIF   ('&RALEN' NE '').MNOTE7
*temp    AIF   ('&RAADR' NE '').MNOTE8
         AIF   ('&RAECB' NE '').MNOTE9
&W       SETB  1
         AGO   .VAL060
.*
.** Validate #WTOR Macro
.*
.VAL050  ANOP
         AIF   ('&TYPE' NE 'WTOR').VAL060
         AIF   ('&DD' NE '').MNOTE10
         AIF   ('&RALEN' EQ '').MNOTE11
         AIF   ('&RAADR' EQ '').MNOTE12
         AIF   ('&RAECB' EQ '').MNOTE13
&R       SETB  1
         AGO   .VAL060
.*
.** Validate &MSGID parameter if Specified
.*
.VAL060  ANOP
         AIF   ('&MSGID' EQ '').VAL070
         AIF   ('&MSGID'(1,1) LT 'A').MNOTE14
         AIF   ('&MSGID'(1,1) GT 'Z').MNOTE14
         AIF   ('&MSGID'(2,1) LT 'A').MNOTE14
         AIF   ('&MSGID'(2,1) GT 'Z').MNOTE14
         AIF   ('&MSGID'(3,1) LT 'A').MNOTE14
         AIF   ('&MSGID'(3,1) GT 'Z').MNOTE14
.*
         AIF   ('&MSGID'(4,1) LT '0').MNOTE14
         AIF   ('&MSGID'(4,1) GT '9').MNOTE14
         AIF   ('&MSGID'(5,1) LT '0').MNOTE14
         AIF   ('&MSGID'(5,1) GT '9').MNOTE14
         AIF   ('&MSGID'(6,1) LT '0').MNOTE14
         AIF   ('&MSGID'(7,1) GT '9').MNOTE14
         AIF   ('&MSGID'(7,1) LT '0').MNOTE14
         AIF   ('&MSGID'(7,1) GT '9').MNOTE14
.*
         AIF   ('&MSGID'(8,1) EQ 'I').VAL100
         AIF   ('&MSGID'(8,1) EQ 'A').VAL100
         AIF   ('&MSGID'(8,1) EQ 'E').VAL100
         AGO   .MNOTE14
.VAL070  ANOP
&I       SETB  1
.*
.** Decipher ROUTCDE Parameter
.*
.VAL100  ANOP
&RCDE1   SETC  '0'
&RCDE2   SETC  '0'
         AIF   (T'&ROUTCDE EQ 'O').CON000
         AIF   ('&ROUTCDE'(1,1) NE '(').MNOTE15
&J       SETA  N'&ROUTCDE           Get Count of Entries in Sublist
&N       SETA  1                    Beginning of Sublist
.*
.VAL110  ANOP
         AIF   (&N GT &J).VAL120    -> Done
&K       SETA  &ROUTCDE(&N)         Get Routcode Value
&B(&K)   SETB  1                    Indicate Routcode
&N       SETA  &N+1
         AGO   .VAL110              -> Loop
.*
.VAL120  ANOP
&RCDE1   SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)'
&RCDE2   SETC  '&B(9)&B(10)&B(11)&B(12)&B(13)&B(14)&B(15)&B(16)'
.*
.*--------------------------------------------------------------------*
.** Generate Parameter List in Constant Area
.*--------------------------------------------------------------------*
.*
.CON000  ANOP
         J     &MSGCOD                 Branch Around Inline Parms
         DS    0D                      Align Message Parms
.*
&C       SETC  '&M&W&R&S&I&L'.'00'
&MSGLBL  DS    0H                      Define Message Parms
         DC    CL8'&MSGID '            Define MSGID if Present
         DC    B'&C'                   Define Bit Settings
         DC    B'0'                    (Reserved)
.*
         AIF   ('&TYPE' NE 'MSG').CON010
         DC    CL8'&DD '               Define DDNAME
         AGO  .MSG000                  ->
.*
.CON010  ANOP
         DC    B'&RCDE1'               ROUTCDE Value
         DC    B'&RCDE2'               ROUTCDE Value
         AIF   ('&TYPE' EQ 'WTOR').CON100

         DC    Y(0)                    (Reserved)
         AIF   (T'&RAADR EQ 'O').CON020
         DC    S(&RAADR)               Place to Put Output Line
         AGO   .CON030
.CON020  ANOP
         DC    Y(0)                    Optional Parm not Specified
.CON030  ANOP
         DC    Y(0)                    (Reserved)
         AGO   .MSG000                 ->
.*
.CON100  ANOP
         DC    Y(&RALEN)               Reply Area Length
         DC    S(&RAADR)               Reply Area Address
         DC    S(&RAECB)               Reply ECB Address
.*
.*--------------------------------------------------------------------*
.** Process the &MSG Parameter
.*--------------------------------------------------------------------*
.*
.MSG000  ANOP
         AIF   ('&MSG' NE 'CLOSE').MSG010
&MSGARE  DS    0H
         DC    YL2(2)                  Set Length of Message
         DC    CL2' '                  Store Message
         AGO   .MSG999
.MSG010  ANOP
&MSGARE  DS    0H
&J       SETA  N'&MSG                  Get Count of Entries in Sublist
         AIF   (&J NE 1).MSG020        -> Sublist Indicated
         AIF   ('&MSG'(1,1) NE '''').MSG020
         DC    YL2(&MSGLEN)            Set Length of Message
         DC    C&MSG                   Store Message
         AGO   .MSG999                 -> Simple Version
.*
.** Sublist Indicated
.*
.MSG020  ANOP
         DC    YL2(&MSGLEN)            Set Length of Message
&N       SETA  1                       Beginning of Sublist
.*
.** Process Text Data
.*
.MSG030  ANOP
         AIF   (&N GT &J).MSG999    -> Done
         AIF   ('&MSG(&N)'(1,1) NE '''').MSG100
         DC    C&MSG(&N)               Store Message
&N       SETA  &N+1                    (Same)
         AGO   .MSG030
.*
.** Process Imbedded Variable
.*
.MSG100  ANOP
         DC    X'FE'                   Indicate Imbedded Variable
         AIF   (T'&MSG(&N) NE 'C').MSG110
         DC    C'C'                    Indicate Character
         AGO   .MSG160
.MSG110  ANOP
         AIF   (T'&MSG(&N) NE 'Z').MSG120
         DC    C'Z'                    Indicate Zoned
         AGO   .MSG160
.MSG120  ANOP
         AIF   (T'&MSG(&N) NE 'F').MSG130
         DC    C'F'                    Indicate Fullword
         AGO   .MSG160
.MSG130  ANOP
         AIF   (T'&MSG(&N) NE 'H').MSG140
         DC    C'H'                    Indicate Halfword
         AGO   .MSG160
.MSG140  ANOP
         AIF   (T'&MSG(&N) NE 'P').MSG150
         DC    C'P'                    Indicate Packed
         AGO   .MSG160
.MSG150  ANOP
         DC    C'X'                    Indicate Hexadecmil
.MSG160  ANOP
         DC    YL1(L'&MSG(&N))         Store Length Value
         DC    SL2(&MSG(&N))           Store Address of Data
.*
&N       SETA  &N+1
         AGO   .MSG030
.*
.MSG999  ANOP
         DC    C' '                    Last Blank As Terminator
&MSGLEN  EQU   *-&MSGARE               Length of Message Area
         DS    0H                      Force Alignment
.*
.*----7---------------------------------------------------------------*
.** Generate Code to Call RDHMSGS
.*--------------------------------------------------------------------*
.*
.COD000  ANOP
.*
&MSGCOD  DS    0H
         LARL  R1,&MSGLBL              Get Parameter List Input
         L     R15,=V(RDHMSGS)         Get Message Processor Address
         BAS31 R14,R15                 Issue Message
         AGO   .MEND                   -> Done
.*
.*--------------------------------------------------------------------*
.** Issue Error Messages
.*--------------------------------------------------------------------*
.*
.MNOTE1  ANOP
         MNOTE 8,'#MSGI: Invalid TYPE specified on invokation.'
         AGO   .MEND
.*
.MNOTE2  ANOP
         MNOTE 8,'#MSGI: No message text specified.'
         AGO   .MEND
.*
.MNOTE3  ANOP
         MNOTE 8,'#MSGI: PRINT= invalid must be GEN/NOGEN.'
         AGO   .MEND
.*
.MNOTE4  ANOP
         MNOTE 8,'#MSGI: SQUEEZE= is invalid must be YES/NO.'
         AGO   .MEND
.*
.MNOTE5  ANOP
         MNOTE 8,'#MSGI: DD= is required and not specified.'
         AGO   .MEND
.*
.MNOTE6  ANOP
         MNOTE 8,'#MSGI: ROUTCDE= specified and not allowed.'
         AGO   .MEND
.*
.MNOTE7  ANOP
         MNOTE 8,'#MSGI: RALEN= specified and not allowed.'
         AGO   .MEND
.*
.MNOTE8  ANOP
         MNOTE 8,'#MSGI: RAADR= specified and not allowed.'
         AGO   .MEND
.*
.MNOTE9  ANOP
         MNOTE 8,'#MSGI: RAECB= specified and not allowed.'
         AGO   .MEND
.*
.MNOTE10 ANOP
         MNOTE 8,'#MSGI: DD= specified and not allowed.'
         AGO   .MEND
.*
.MNOTE11 ANOP
         MNOTE 8,'#MSGI: RALEN= was not specified and is required.'
         AGO   .MEND
.*
.MNOTE12 ANOP
         MNOTE 8,'#MSGI: RAADR= was not specified and is required.'
         AGO   .MEND
.*
.MNOTE13 ANOP
         MNOTE 8,'#MSGI: RAECB= was not specified and is required.'
         AGO   .MEND
.*
.MNOTE14 ANOP
         MNOTE 8,'#MSGI: MSGID= is in invalid format. Should be AAA9999*
               X.'
         AGO   .MEND
.*
.MNOTE15 ANOP
         MNOTE 8,'#MSGI: ROUTCDE= Value is not a sublist.'
         AGO   .MEND
.*
.** Exit Macro
.*
.MEND    ANOP
         MEND ,
./ ADD NAME=#OPSYN20 0100-10050-10050-1200-00079-00079-00000-RHDMAC
**********************************************************************
* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
*                                                                    *
** #OPSYB20 - Generate 20-Bit OPSYNs for BDDD Instructions           *
*                                                                    *
*    This is a copybook that is included in the program by the       *
*  PGMNTRY macro when the user specifies the OPSYN20=YES parameter.  *
*  The default for this parameter is YES but it may be turned off    *
*  by specifying NO.                                                 *
*    The intent is to add instructions to this list as needed to     *
*  support macros that still use the 12-Bit instructions.            *
*                                                                    *
*                                                                    *
** Change History                                                    *
*                                                                    *
* Date     Developer Cng# Comments                                   *
* ======== ========= ==== ========================================== *
* 00/00/00 R.Harper  M000 Macro Developed                            *
*                                                                    *
**********************************************************************
*
A        OPSYN AY                      Add
AH       OPSYN AHY                     Add Halfword
AL       OPSYN ALY                     Add Logical
N        OPSYN NY                      And
C        OPSYN CY                      Compare
CS       OPSYN CSY                     Compare and Swap
CDS      OPSYN CDSY                    Compare Double and Swap
CH       OPSYN CHY                     Compare Halfword
CL       OPSYN CLY                     Compare Logical
CLM      OPSYN CLMY                    Compare Logical Under Mask
CVB      OPSYN CVBY                    Convert to Binary
CVD      OPSYN CVDY                    Convert to Decimal
X        OPSYN XY                      Exclusive Or
IC       OPSYN ICY                     Insert Character
*ICM     OPSYN ICMY                    Insert Character Under Mask
L        OPSYN LY                      Load
LAM      OPSYN LAMY                    Load Access Multiple
LA       OPSYN LAY                     Load Address
*LAE     OPSYN LAEY                    Load Address Extended
LH       OPSYN LHY                     Load Halfword
LM       OPSYN LMY                     Load Multiple
MVI      OPSYN MVIY                    Move Immediate
MH       OPSYN MHY                     Multiply Halfword
M        OPSYN MFY                     Multiply Fullword
O        OPSYN OY                      Or
ST       OPSYN STY                     Store
STAM     OPSYN STAMY                   Store Access Multiple
STC      OPSYN STCY                    Store Character
STCM     OPSYN STCMY                   Store Character Under Mask
STH      OPSYN STHY                    Store Halfword
STM      OPSYN STMY                    Store Multiple
S        OPSYN SY                      Subtract
SH       OPSYN SHY                     Subtract Halfword
SL       OPSYN SLY                     Subtract Logical
*
**********************************************************************
./ ADD NAME=#SUICIDE 0100-10050-10050-1200-00071-00071-00000-RHDMAC
         MACRO
&LBL     #SUICIDE &MSG='NONE'        Message to Follow S0C3
.*
.**********************************************************************
.* Copyright (c) 2008 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #SUICIDE - Kill the Program Here With Message Pointed to by PSW   *
.*                                                                    *
.*    This macro created to issue a fatal error message.  It issues   *
.*  an EX 0,* instruction which is immediately followed by the text   *
.*  presented by the MSG= parameter.  This is a simple technique      *
.*  that is frequently used in "should not occur" situations.         *
.*    It was placed in a macro so that at some later date it can be   *
.*  enhanced to issue that message to the Console in a WTO, issued    *
.*  to a message log, or the JES2 joblog.                             *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 10/04/08 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS             Copy Gglobals
.*
         LCLC  &C                   Local Variables
         LCLA  &I,&J                (Same)
.*
         AIF   ('&LBL' EQ '').NOLBL
&LBL     DS    0H
.NOLBL   ANOP
.*
.** Issue an EXecute
.*
         BASR  R14,0                Establish Temp Addressability
         EX    0,0(,R14)            EXecute Yourself - S0C3
         DC    C&MSG                PSW Points to Message for Fatal Err
         DS    0H                   Assure Halfword Allignment
         AGO   .MEND
.*
.** ERROR MESSAGES
.*
.MNOTE1  ANOP
         MNOTE 8,'DSAEND: ..'
         AGO   .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=#TRACE   0100-10050-10050-1200-00608-00608-00000-RHDMAC
         MACRO
&LBL     #TRACE &TYPE=TRAP,            PGME/PGMX/SUBE/SUBX/TRAP        *
               &DD=TRCPRINT,           DDNAME for SYSOUT               *
               &REGS=NONE,             Register Values to Print        *
               &MSG=,                  Message to Output               *
               &DATA=,                 Data Area in Hex Dump Format    *
               &PARM=,                 Input Parameters for PGME       *
               &SQUEEZE=YES,           Squeeze Out Multiple Blanks     *
               &NOHEAD=NO,             Print Trap Heading              *
               &BUFFDAT=NO,            Buffer Trace Data YES/NO        *
               &BUFFMAX=1000,          Max Print Lines to Buffer       *
               &PRINT=NOGEN,           Print Option GEN/NOGEN          *
               &NAME=                  Forced Name for Trace Point
.*
.**********************************************************************
.* Copyright (c) 2006 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #TRACE - Process a Trace Point Trap                               *
.*                                                                    *
.*     &TYPE = PGME  - Generate Trace Point for Program Entry         *
.*             PGMX  - Generate Trace Point for Program Exit          *
.*             SUBX  - Generate Trace Point for Subroutine Entry      *
.*             SUBX  - Generate Trace Point for Subroutine Exit       *
.*             TRAP  - Indicate a Trace Point Trap                    *
.*                                                                    *
.*     &REGS = A sublist of register values that indicate the         *
.*             registers to be printed when this trap point is        *
.*             executed.  They may be specifies as the values         *
.*             0 through 15, or R0 through R15.                       *
.*             (e.g. REGS=(0,3,5,R12,R14,R15) or REGS=ALL or          *
.*             REGS=NONE)                                             *
.*                                                                    *
.*      &MSG = Specifies a message to be printed allowinf for         *
.*             embedded variables in a sublisted string.  Variable    *
.*             data will be printed according to the type of          *
.*             variable.  Types C and Z are printes in character      *
.*             format.  Types F, H and P are printed in decimal       *
.*             format.  Everything else is printed in hex format.     *
.*               MSG='This is a message'                              *
.*               MSG=('The ',COLOR,' HARE ' is ',HEIGHT,' ft. tall.'  *
.*               MSG=('Show savearea at: ',DSASAVEA)                  *
.*                                                                    *
.*     &DATA = Specifies an area in storage that is to be displayed   *
.*             in hex dump format. An optional title may be specified *
.*             to identify the area being displayed.  The areas to be *
.*             displayed must be specified as a sublist within a      *
.*             sublist.                                               *
.*               DATA=('My DSA Area',0(R13),DSALNGTH)                 *
.*               DATA=(('Previous SA in Chain',0(R6),SALNGTH),        *
.*                     ('Next SA in Chain,',0(R5),(R2))               *
.*                                                                    *
.*     &DD   = Specifies the DDNAME of the output dataset on Open     *
.*             or Close. If not specified one will be dynamically     *
.*             allocated. Only one sysout dataset can exist per task. *
.*                                                                    *
.*    &PRINT = GEN/NOGEN. Defined the PRINT Control for This Macro    *
.*                                                                    *
.*  &BUFFDAT = YES/NO. Specifying YES indicates that data is to be    *
.*             bufferred and written to sysout only at termination.   *
.*                                                                    *
.*  &BUFFMAX = Number < 64000. The number of print lines to be        *
.*             maintained in the buffer above-the-line in a wrap      *
.*             around table.                                          *
.*                                                                    *
.*  &SQUEEZE = YES/NO.  A value of YES indicates that multiple        *
.*             consequative space characters are to be removed        *
.*             from the final output before printing.                 *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/04/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS             Copy Globals
.*
         LCLC  &TROPN,&TROPNL       Internal Label Names
         LCLC  &TRDAT,&TRDATL       (Same)
         LCLC  &TRMSG,&TRMSGL       (Same)
         LCLC  &TRDDT,&TRDDTL       (Same)
.*
         LCLC  &NAM                 Name of Trap From &LBL or &NAME
         LCLC  &TRPNAM              Name of DSA Trap Point to EX
         LCLC  &C,&CREGS,&R(16)
         LCLC  &BYTE1,&BYTE2,&BYTE3 Flag Bytes
         LCLA  &I,&J,&N
         LCLB  &BUFF,&SQZE,&NOHD
         LCLB  &MS,&RG,&DT
         LCLB  &B                   Bit Flag
         LCLB  &B1(8),&B2(8),&B3(8) Flag Bytes
.*
.** Define Internal Labels
.*
&TROPN   SETC  'OPN'.'&SYSNDX'
&TROPNL  SETC  'OPN'.'&SYSNDX'.'L'
&TRDAT   SETC  'TRP'.'&SYSNDX'
&TRDATL  SETC  'TRP'.'&SYSNDX'.'L'
&TRMSG   SETC  'TRN'.'&SYSNDX'
&TRMSGL  SETC  'TRN'.'&SYSNDX'.'L'
&TRDDT   SETC  'TRD'.'&SYSNDX'
&TRDDTL  SETC  'TRD'.'&SYSNDX'.'L'
.*
         PUSH PRINT
.*
.** Input Parameter Validation
.*
         AIF   (NOT &PTRACE).MEND    -> If TRACE=NO on PGMNTRY
.*
         AIF   ('&NAME' EQ '').VALD010
&NAM     SETC  '&NAME'               NAME= Takes Precedence
         AGO   .VALD030
.VALD010 ANOP
         AIF   ('&LBL' EQ '').VALD020
&NAM     SETC  '&LBL'
         AGO   .VALD030
.VALD020 ANOP
&NAM     SETC  'TRP'.'&SYSNDX'.'N'   Generated Name
.VALD030 ANOP
         AIF   (K'&NAM GT 8).MNOTE5
.*
         AIF   ('&PRINT' EQ 'GEN').VALD040
         AIF   ('&PRINT' NE 'NOGEN').MNOTE7
.*
.VALD040 ANOP
         PRINT &PRINT
.*
.VALD050 ANOP
         AIF   ('&BUFFDAT' EQ 'YES').VALD060
         AIF   ('&BUFFDAT' NE 'NO').MNOTE6
.*
.VALD060 ANOP
&BUFF    SETB  ('&BUFFDAT' EQ 'YES')
&SQZE    SETB  ('&SQUEEZE' EQ 'YES')
&NOHD    SETB  ('&NOHEAD' EQ 'YES')
&MS      SETB  ('&MSG' NE '')
&RG      SETB  ('&REGS' NE '' AND '&REGS' NE 'NONE')
&DT      SETB  ('&DATA' NE '')
.*
.*
         AIF   ('&SQUEEZE' EQ 'YES').VALD070
         AIF   ('&SQUEEZE' NE 'NO').MNOTE3
.*
.** Determine Type of Trap
.*
.VALD070 ANOP
&B1(1)   SETB  0
&B1(2)   SETB  0
&B1(3)   SETB  0
&B1(4)   SETB  0
&B1(5)   SETB  0
&B1(6)   SETB  0
&B1(7)   SETB  0
&B1(8)   SETB  0
.*
&B2(1)   SETB  0
&B2(2)   SETB  0
&B2(3)   SETB  0
&B2(4)   SETB  0
&B2(5)   SETB  0
&B2(6)   SETB  0
&B2(7)   SETB  0
&B2(8)   SETB  0
.*
.** Primary Entry and Exit Protocals
.*
         AIF   ('&TYPE' NE 'TRAP').VALD090
&TRPNAM  SETC  'DSATRTRC'
&B1(1)   SETB  1
         AGO   .VALD999
.*
.VALD090 ANOP
         AIF   ('&TYPE' NE 'PGME').VALD100
&TRPNAM  SETC  'DSATRPGM'
&B1(2)   SETB  1
&B2(1)   SETB  1
         AGO   .VALD999
.*
.VALD100 ANOP
         AIF   ('&TYPE' NE 'PGMX').VALD110
&TRPNAM  SETC  'DSATRPGM'
&B1(3)   SETB  1
         AGO   .VALD999
.*
.VALD110 ANOP
         AIF   ('&TYPE' NE 'SUBE').VALD120
&TRPNAM  SETC  'DSATRSUB'
&B1(4)   SETB  1
         AGO   .VALD999
.*
.VALD120 ANOP
         AIF   ('&TYPE' NE 'SUBX').VALD130
&TRPNAM  SETC  'DSATRSUB'
&B1(5)   SETB  1
         AGO   .VALD999
.*
.** Remember Type of Protocol
.*
.VALD130 ANOP
         AIF   ('&TYPE' NE 'SVCE').VALD140
&TRPNAM  SETC  'DSATRPGM'
&B1(2)   SETB  1
&B2(2)   SETB  1
         AGO   .VALD999
.*
.VALD140 ANOP
         AIF   ('&TYPE' NE 'SVCX').VALD150
&TRPNAM  SETC  'DSATRPGM'
&B1(3)   SETB  1
         AGO   .VALD999
.*
.VALD150 ANOP
         AIF   ('&TYPE' NE 'ESTE').VALD160
&TRPNAM  SETC  'DSATRPGM'
&B1(2)   SETB  1
&B2(3)   SETB  1
         AGO   .VALD999
.*
.VALD160 ANOP
         AIF   ('&TYPE' NE 'ESTX').VALD170
&TRPNAM  SETC  'DSATRPGM'
&B1(3)   SETB  1
         AGO   .VALD999
.*
.VALD170 ANOP
         AIF   ('&TYPE' NE 'SRBE').VALD180
&TRPNAM  SETC  'DSATRPGM'
&B1(2)   SETB  1
&B2(4)   SETB  1
         AGO   .VALD999
.*
.VALD180 ANOP
         AIF   ('&TYPE' NE 'SRBX').VALD190
&TRPNAM  SETC  'DSATRPGM'
&B1(3)   SETB  1
         AGO   .VALD999
.*
.VALD190 ANOP
         AIF   ('&TYPE' NE 'PCE').VALD200
&TRPNAM  SETC  'DSATRPGM'
&B1(2)   SETB  1
&B2(5)   SETB  1
         AGO   .VALD999
.*
.VALD200 ANOP
         AIF   ('&TYPE' NE 'PCX').MNOTE10
&TRPNAM  SETC  'DSATRPGM'
&B1(3)   SETB  1
         AGO   .VALD999
.*
.** Build Flag Byte Values
.*
.VALD999 ANOP
&BYTE1   SETC '&B1(1).&B1(2).&B1(3).&B1(4).&B1(5).&B1(6).&B1(7).&B1(8)'
&BYTE2   SETC '&B2(1).&B2(2).&B2(3).&B2(4).&B2(5).&B2(6).&B2(7).&B2(8)'
.*
.*--------------------------------------------------------------------*
.** Build Data Area RSECT For This CSECT on PGMNTRY
.*--------------------------------------------------------------------*
.*
.BILD000 ANOP
         AIF   ('&TYPE' NE 'PGME').TRAP010
.*
.** Generate Data Segment For First Trap of Each RSECT
.*
&DASECT  RSECT ,                    Move to Data RSECT
&DASECT  AMODE 31
&DASECT  RMODE ANY
&TROPN   DS    0X               -*- Trap Data Descriptor
         DC    CL8'&NAM'            Trap Name
         DC    B'&BYTE1'            Flag Byte - Indicate Open Entry
         DC    B'0'                 Flag Byte
         DC    AL2(&TROPNL)         Length of Trap Area
         DC    AL4(&DASECT)         Address of TRPDSECT Area
         DC    AL2(&NAM-&SYSECT)    Offset to This Trap
         DC    AL2(0)               Reserved - REGS in TRAP Entry
*                               -*- Open Segment
         DC    AL1(&BUFF*4)         Flag Byte - Indicate Buffering
         DC    B'&BYTE2'            Flag Byte
         DC    AL2(0&BUFFMAX)       Max Lines to Buffer
         DC    CL8'&DD '            DDNAME for Sysout
         DC    CL8'&SYSECT '        RSECT Name
&TROPNL  EQU   *-&TROPN             Length of Trace Trap Data
&SYSECT  RSECT ,                    Restore Currect RSECT
.BILD020 ANOP
.*
.*--------------------------------------------------------------------*
.** Process a Generic TRAP Request
.*--------------------------------------------------------------------*
.*
.TRAP010 ANOP
&NAM     DS    0H
         STMG  R14,R1,DSASAVER      Save Volital Registers
         BAS   R1,*+8               Branch Around Data R1=Parm
         DC    AL4(&TRDAT)          ..Address of Trap Description
         L     R15,DSATRCEP         Get Trap Processor Address
         EX    0,&TRPNAM            Call Trap Processor
         LMG   R14,R1,DSASAVER      Load Volital Registers
.*
.** Generate Trap Data Description
.*
&BYTE3   SETC  '&SQZE&NOHD.00&RG&MS&DT.0'
.*
&DASECT  RSECT ,                    Move to Data RSECT
&TRDAT   DS    0H               -*- Trap Data Descriptor
         DC    CL8'&NAM'            Trap Name
         DC    BL1'&BYTE1'          Flag Byte 1
         DC    BL1'&BYTE3'          Flag Byte 2
         DC    AL2(&TRDATL)         Length of Trap Area
         DC    AL4(&DASECT)         Address of TRPDSECT Area
         DC    AL2(&NAM-&SYSECT)    Offset to This Trap
.*
.*--------------------------------------------------------------------*
.** Process Registers
.*--------------------------------------------------------------------*
.*
.REG000  ANOP
         AIF   (T'&REGS EQ 'O').REG010
         AIF   ('&REGS' EQ 'NONE').REG010
         AIF   ('&REGS' NE 'ALL').REG020
         DC    XL2'FFFF'            Print All Registers
         AGO   .MSG010
.REG010  ANOP
         DC    XL2'0000'            Print No Registers
         AGO   .MSG010
.REG020  ANOP
&N       SETA  1                    Initialize Reg Array With Zeros
.REG030  ANOP                       (Same)
&R(&N)   SETC  '0'                  (Same)
&N       SETA  &N+1                 (Same)
         AIF   (&N LT 17).REG030    (Same)
.*
&N       SETA  1                         Extract Registers to Show
.REG040  ANOP                            (Same)
         AIF   ('&REGS' EQ '').REG060    (Same)
&C       SETC  '&REGS(&N)'               (Same)
         AIF   ('&C'(1,1) NE 'R').REG050 (Same)
&C       SETC  '&C'(2,K'&C-1)            Strip R From Reg Notation
.REG050  ANOP
&J       SETA  &C
&R(&J+1) SETC  '1'
&N       SETA  &N+1
         AIF   ('&REGS(&N)' EQ '').REG060 Check For End
         AIF   (&N LT 17).REG040          -> Loop
.REG060  ANOP
&C       SETC  '&R(1)&R(2)&R(3)&R(4)&R(5)&R(6)&R(7)&R(8)'
         DC    B'&C'                Registers to Print 0-7
&C       SETC  '&R(9)&R(10)&R(11)&R(12)&R(13)&R(14)&R(15)&R(16)'
         DC    B'&C'                Registers to Print 8-15
.*
.*--------------------------------------------------------------------*
.** Process the MSG= Parameter
.*--------------------------------------------------------------------*
.*
.MSG010  ANOP
         AIF   (T'&MSG EQ 'O').DAT000
&J       SETA  N'&MSG               Get Count of Entries in Sublist
&TRMSG   DS    0H                   Begin Message Construct
         AIF   (&J NE 1).MSG020            -> Sublist Indicated
         AIF   ('&MSG'(1,1) NE '''').MSG020   Not Quoted
         DC    YL2(&TRMSGL)         Set Length of Message
         DC    C&MSG                Store Message
         AGO   .MSG999              -> Simple Version
.*
.** Sublist Indicated
.*
.MSG020  ANOP
         DC    YL2(&TRMSGL)         Set Length of Message
&N       SETA  1                    Beginning of Sublist
.*
.** Process Text Data
.*
.MSG030  ANOP
         AIF   (&N GT &J).MSG999    -> Done
         AIF   ('&MSG(&N)'(1,1) NE '''').MSG100
         DC    C&MSG(&N)            Store Message
&I       SETA  K'&MSG(&N)/2*2
         AIF   (K'&MSG(&N) EQ &I).MSG040  An Even Character Count?
         DC    X'FD'                Add Filler Byte
.MSG040  ANOP
&N       SETA  &N+1                 (Same)
         AGO   .MSG030
.*
.** Process Imbedded Variable
.*
.MSG100  ANOP
         SLAG  0,0,&MSG(&N)         Extract B+DL+DH SCON Value
         ORG   *-6                  And Overlay
         DC    X'FE'                Indicate Imbedded Variable
         AIF   (T'&MSG(&N) NE 'C').MSG110
         DC    C'C'                 Indicate Character
         AGO   .MSG160
.MSG110  ANOP
         AIF   (T'&MSG(&N) NE 'Z').MSG120
         DC    C'Z'                 Indicate Zoned
         AGO   .MSG160
.MSG120  ANOP
         AIF   (T'&MSG(&N) NE 'F').MSG130
         DC    C'F'                 Indicate Fullword
         AGO   .MSG160
.MSG130  ANOP
         AIF   (T'&MSG(&N) NE 'H').MSG140
         DC    C'H'                 Indicate Halfword
         AGO   .MSG160
.MSG140  ANOP
         AIF   (T'&MSG(&N) NE 'P').MSG150
         DC    C'P'                 Indicate Packed
         AGO   .MSG160
.MSG150  ANOP
         DC    C'X'                 Indicate Hexadecmil
.MSG160  ANOP
         DS    SL2(&MSG(&N))        Store Address of Data SCON
         DS    BL1'0'               Store DH Part of SCON
         DC    YL1(L'&MSG(&N))      Store Length of Data to Print
.*
&N       SETA  &N+1
         AGO   .MSG030
.*
.MSG999  ANOP
         DS    0H                   End On Halfword
&TRMSGL  EQU   *-&TRMSG
.*
.*--------------------------------------------------------------------*
.** Process DATA= Parameter
.*--------------------------------------------------------------------*
.*
.DAT000  ANOP
         AIF   ('&DATA' EQ '').DAT999
         AIF   ('&DATA'(1,1) NE '(').MNOTE8
         AIF   ('&DATA'(1,2) EQ '((').DAT020
.*
.** Process Single Entry - DATA=('Heading',DAT1,L'DATA1)
.*
.DAT010  ANOP
&TRDDT   DS    0H                   Begin Data Construct
         DC    YL2(&TRDDTL)         Set Length of DATA
         DC    AL2(1)               Count of Repitations
.*
&C       SETC  '&DATA(2)'           Assume Not Indirect
&B1(1)   SETB  ('&DATA(3)'(1,1) EQ '(')    - Length in Register
&B1(2)   SETB  ('&DATA(2)'(1,1) EQ '!')    - Redirection 64-Bit
&B1(3)   SETB  ('&DATA(2)'(1,1) EQ '?')    - Redirection 31-Bit
&B1(4)   SETB  ('&DATA(2)'(1,1) EQ '%')    - Redirection 24-Bit
&B1(5)   SETB  ('&DATA(2)'(1,1) EQ '@')    - Real Address
&B       SETB  (&B1(2) OR &B1(3) OR &B1(4) OR &B1(5))
         AIF   (NOT &B).DAT015
&K       SETA  K'&C-1
&C       SETC  '&C'(2,&K)
.*
.DAT015  ANOP
.*
.*
.*
         AIF   (K'&DATA(1) NE 0).DAT016
&J       SETA  1                    No Heading
         AGO   .DAT018
.DAT016  ANOP
&J       SETA  (K'&DATA(1)-2)/2*2+1 Force to Odd Number
.DAT018  ANOP
.*
         SLAG  0,0,&C               Get 3-Byte SCON - DL+DH Format
         ORG   *-6
         DC    B'&B1(1)&B1(2)&B1(3)&B1(4)&B1(5).000'
         DC    AL1(&J)              Length of Heading
         DS    AL3                  Space for SCON
         DC    YL2(&DATA(3))        Length of Data to Print
&C       SETC  '&DATA(1)'           Generate Heading Length
         AIF   (&J EQ 1).DAT019
         DC    CL&J&C               Generate Heading
         AGO   .DAT019A
.DAT019  ANOP
         DC    C' '                 Generate Null Heading
.DAT019A ANOP
         AGO   .DAT990              -> Exit
.*
.** Print Multiple Entries - DATA=(('DAT1',A,L'A),('DAT2',B,12))
.*
.DAT020  ANOP
&I       SETA  1
&N       SETA  N'&DATA              Number of Triplets
.DAT030  ANOP
         AIF   (N'&DATA(&I) NE 3).MNOTE8
&I       SETA  &I+1                 Loop Through Triplets
         AIF   (&I LE &N).DAT030
.*
&TRDDT   DS    0H                   Begin Data Construct
         DC    YL2(&TRDDTL)         Set Length of DATA
.*&J     SETA  N'&DATA(1)
         DC    AL2(&N)              Count of Repititions - Triplets
.*
.*
.*
&I       SETA  1                    Loop Through Triplets
.*&N     SETA  N'&DATA
.DAT040  ANOP
&C       SETC  '&DATA(&I,2)'        Assume Not Indirect
&B1(1)   SETB  ('&DATA(&I,3)'(1,1) EQ '(')  - Length in Register
&B1(2)   SETB  ('&DATA(&I,2)'(1,1) EQ '!')  - Redirection 64-Bit
&B1(3)   SETB  ('&DATA(&I,2)'(1,1) EQ '?')  - Redirection 31-Bit
&B1(4)   SETB  ('&DATA(&I,2)'(1,1) EQ '%')  - Redirection 24-Bit
&B1(5)   SETB  ('&DATA(&I,2)'(1,1) EQ '@')  - Real Address
&B       SETB  (&B1(2) OR &B1(3) OR &B1(4) OR &B1(5))
         AIF   (NOT &B).DAT045
&K       SETA  K'&C-1
&C       SETC  '&C'(2,&K)
.*
.DAT045  ANOP
         AIF   (K'&DATA(&I,1) NE 0).DAT050
&J       SETA  1                    No Heading
         AGO   .DAT060
.DAT050  ANOP
&J       SETA  (K'&DATA(&I,1)-2)/2*2+1  Force to Odd Number
.*
.DAT060  ANOP
         SLAG  0,0,&C               Get 3-Byte SCON - DL+DH Format
         ORG   *-6
         DC    B'&B1(1)&B1(2)&B1(3)&B1(4)&B1(5).000'
         DC    AL1(&J)              Length of Heading
         DS    AL3                  Space for SCON
         DC    YL2(&DATA(&I,3))     Length of Data to Print
&C       SETC  '&DATA(&I,1)'
         AIF   (&J EQ 1).DAT080
         DC    CL&J&C               Generate Heading
         AGO  .DAT080
.DAT070  ANOP
         DC    C' '                 Generate Null Heading
.DAT080  ANOP
         DS    0H                   End on Halfword
&I       SETA  &I+1
         AIF   (&I LE &N).DAT040
         AGO   .DAT990              -> Exit
.*
.DAT990  ANOP
         DS    0H                   End on Halfword
&TRDDTL  EQU   *-&TRDDT             Length of Data= Data Area
.*
.DAT999  ANOP
&TRDATL  EQU   *-&TRDAT             Length of Trace Trap Area
         AGO   .MEND
.*
.*--------------------------------------------------------------------*
.** ERROR MESSAGES
.*--------------------------------------------------------------------*
.*
.MNOTE1  ANOP
         MNOTE 8,'#TRACE: Either Label or NAME= must be specified.'
         AGO   .MEND
.*
.MNOTE2  ANOP
         AGO   .MEND
.*
.MNOTE3  ANOP
         MNOTE 8,'#TRACE: SQUEEZE= MUST SPECIFY YES OR NO.'
         AGO   .MEND
.*
.MNOTE4  ANOP
         MNOTE 8,'#TRACE: TYPE= IS INVALID MUST BE TRAP/OPEN/CLOSE.'
         AGO   .MEND
.*
.MNOTE5  ANOP
         MNOTE 8,'#TRACE: LABEL LENGTH CANNOT BE GREATER THAN 8.'
         AGO   .MEND
.*
.MNOTE6  ANOP
         MNOTE 8,'#TRACE: BUFFDAT= MUST SPECIFY YES OR NO.'
         AGO   .MEND
.*
.MNOTE7  ANOP
         MNOTE 8,'#TRACE: PRINT= Must specify GEN/NOGEN.'
         AGO   .MEND
.*
.MNOTE8  ANOP
         MNOTE 8,'#TRACE: SYNTAX ERROR in DATA= parameter.'
         AGO   .MEND
.*
.MNOTE10 ANOP
         MNOTE 8,'#TRACE: TYPE=&TYPE is INVALID.'
         AGO   .MEND
.*
.** End of Macro
.*
.MEND    ANOP
&SYSECT  RSECT ,                    Return to Original RSECT
         POP   PRINT
         MEND ,
./ ADD NAME=#WTO     0100-10050-10050-1200-00088-00088-00000-RHDMAC
         MACRO
&LBL     #WTO  &MSG,                   Message Macro Text              *
               &MSGID=,                Message ID AAA9999X             *
               &ROUTCDE=,              Routing Codes                   *
               &SQUEEZE=YES,           Squeeze Out Multiple Blanks     *
               &PLINE=,                Area to Place Formated Line     *
               &PRINT=NOGEN            Print Option GEN/NOGEN
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #WTO - Issue a Message to the Console or Log                      *
.*                                                                    *
.*                                                                    *
.*      &MSG = Specifies a message to be printed allowinf for         *
.*             embedded variables in a sublisted string.  Variable    *
.*             data will be printed according to the type of          *
.*             variable.  Types C and Z are printes in character      *
.*             format.  Types F, H and P are printed in decimal       *
.*             format.  Everything else is printed in hex format.     *
.*                   'This is a message'                              *
.*                   ('The ',COLOR,' HARE ' is ',HEIGHT,' ft. tall.'  *
.*                   ('Show savearea at: ',DSASAVEA)                  *
.*                                                                    *
.*    &MSGID = Specifies a standard ZOS Message ID to identify the    *
.*             message to other products or components.  Should be    *
.*             unique and is useful for interfacing with automation   *
.*             products.  The form is: AAA9999X                       *
.*                                                                    *
.*             Where: AAA  - is a 3 Char Product Identifier           *
.*                    9999 - is a 4 Digit Message Number              *
.*                    X    - is an Action Code: I - Informational     *
.*                                              A - Action Required   *
.*                                              E - Error Condition   *
.*                                                                    *
.*                                                                    *
.*  &ROUTCDE = WTO/WTOR Routing Codes                                 *
.*                                                                    *
.*  &SQUEEZE = YES/NO.  A value of YES indicates that multiple        *
.*             consequative space characters are to be removed        *
.*             from the final output before printing.                 *
.*                                                                    *
.*    &PRINT = GEN/NOGEN. Defined the PRINT Control for This Macro    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Issue Call to #MSGI Common Message Macro
.*
&LBL     #MSGI WTO,                    Indicate Invoked by #WTO        *
               &MSG,                   Message Macro Text              *
               MSGID=&MSGID,           Message ID AAA9999X             *
               DD=,                    (Unused) DDNAME for SYSOUT      *
               SQUEEZE=&SQUEEZE,       Squeeze Out Multiple Blanks     *
               ROUTCDE=&ROUTCDE,       Routing Codes                   *
               RALEN=,                 (Unused) Reply Area Length      *
               RAADR=&PLINE,           Place to Put Formatted Line     *
               RAECB=,                 (Unused) Reply ECB Address      *
               PRINT=&PRINT            Print Option GEN/NOGEN
.*
         MEND ,
./ ADD NAME=#WTOR    0100-10050-10050-1200-00093-00093-00000-RHDMAC
         MACRO
&LBL     #WTOR &MSG,                   Message Macro Text              *
               &MSGID=,                Message ID AAA9999X             *
               &REPLY=,                Reply Area Address              *
               &ECB=,                  Reply ECB Address               *
               &SQUEEZE=YES,           Squeeze Out Multiple Blanks     *
               &PRINT=NOGEN            Print Option GEN/NOGEN
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** #WTOR - Issue a Message to the Console or Log                     *
.*                                                                    *
.*                                                                    *
.*      &MSG = Specifies a message to be printed allowinf for         *
.*             embedded variables in a sublisted string.  Variable    *
.*             data will be printed according to the type of          *
.*             variable.  Types C and Z are printes in character      *
.*             format.  Types F, H and P are printed in decimal       *
.*             format.  Everything else is printed in hex format.     *
.*                   'This is a message'                              *
.*                   ('The ',COLOR,' HARE ' is ',HEIGHT,' ft. tall.'  *
.*                   ('Show savearea at: ',DSASAVEA)                  *
.*                                                                    *
.*    &MSGID = Specifies a standard ZOS Message ID to identify the    *
.*             message to other products or components.  Should be    *
.*             unique and is useful for interfacing with automation   *
.*             products.  The form is: AAA9999X                       *
.*                                                                    *
.*             Where: AAA  - is a 3 Char Product Identifier           *
.*                    9999 - is a 4 Digit Message Number              *
.*                    X    - is an Action Code: I - Informational     *
.*                                              A - Action Required   *
.*                                              E - Error Condition   *
.*                                                                    *
.*  &ROUTCDE = WTO/WTOR Routing Codes                                 *
.*                                                                    *
.*    &RALEN = Reply Area Length                                      *
.*                                                                    *
.*    &RAADR = Reply Area Address                                     *
.*                                                                    *
.*    &RAECB = Reply ECB Address                                      *
.*                                                                    *
.*  &SQUEEZE = YES/NO.  A value of YES indicates that multiple        *
.*             consequative space characters are to be removed        *
.*             from the final output before printing.                 *
.*                                                                    *
.*    &PRINT = GEN/NOGEN. Defined the PRINT Control for This Macro    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Issue Call to #MSGI Common Message Macro
.*
&LBL     #MSGI WTOR,                   Indicate Invoked by #WTOR       *
               &MSG,                   Message Macro Text              *
               MSGID=&MSGID,           Message ID AAA9999X             *
               DD=,                    (Unused) DDNAME for SYSOUT      *
               SQUEEZE=&SQUEEZE,       Squeeze Out Multiple Blanks     *
               ROUTCDE=,               Routing Codes                   *
               RALEN=L'&REPLY,         Reply Area Length               *
               RAADR=&REPLY,           Reply Area Address              *
               RAECB=&ECB,             Reply ECB Address               *
               PRINT=&PRINT            Print Option GEN/NOGEN
.*
         MEND ,
./ ADD NAME=ATBBEG   0100-10050-10050-1200-00058-00058-00000-RHDMAC
         MACRO ,
         ATBBEG ,
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** Beginning of Above-The-Bar Storage Area - (ATB)                   *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and local Variables
.*
         COPY  PGMGBLAS             Copy Gglobals
.*
.** Macro Code
.*
&DSATB   LOCTR ,                    Reestablish the ATB DSECT
.*
.** Do Other MF=L Stuff Here
.*
         AGO   .MEND
.*
.** ERROR MESSAGES
.*
.MNOTE1  ANOP
         MNOTE 8,'ATBBEG: ?'
         AGO   .MEND
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=ATBDSECT 0100-10050-10050-1200-00057-00057-00000-RHDMAC
         MACRO ,
         ATBDSECT ,                 Define ATB Prefix
.**********************************************************************
.* Copyright (c) 2008 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** Beginning of Above-Thr-Bar Storage Area - (ATB)                   *
.*                                                                    *
.*    This DSECT provides a mapping of the ATB prefix generated via   *
.*  the PGMNTRY macro.  This program management system uses what is   *
.*  essentially an Upstack, which says any called program will use    *
.*  storage or allocate their ATB after the last ATB address of the   *
.*  calling program.                                                  *
.*    Each program called in succession will have their own ATB       *
.*  prefix area. The pointer to this area, length and residual        *
.*  length of available ATB are maintained in DSA mapped by DSADSECT. *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
ATB      DSECT ,                    Establish The DSECT
ATBEYECT DS    CL8                  Eye Catcher
ATBCSECT DS    CL8                  Owning Csect name
ATBSIZE  DS    AD                   Size of This Programs ATB
         DS    5D                   (Reserved)
*
         ORG   ATB+((*-ATB+15)/16*16) End on 16-Byte Boundry
ATBPGMDT DS    0D                   Start of Program Data
ATBPFXLN EQU   *-ATB                Length of ATB Prefix
.*
         MEND  ,
./ ADD NAME=ATBEND   0100-10050-10050-1200-00071-00071-00000-RHDMAC
         MACRO ,
         ATBEND
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** End of Above-The-Bar Storage Area - (ATB)                         *
.*                                                                    *
.*    Do Housekeeping and Cleanup for the ATB                         *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS             Copy Gglobals
.*
         LCLA  &I,&J                Local Variables
         LCLC  &ATBLEN              Length of ATB
         LCLC  &OVCHK               Overlay Ckeck Variable
         LCLC  &ENDCT               Ending Eye Catcher
.*
&ATBLEN  SETC  '&LCATB'.'L'         Set Label Small Footprint
&OVCHK   SETC  '&LCATB'.'_OVCHK'    Set Label for Overlay Check
&ENDCT   SETC  '&LCATB'.'_ENDCT'    Set Label For Ending Eye Catcher
*
** Define End of ATB
*
&LCATE   LOCTR ,                    Position Us at ATB End
         ORG   &DSATB+((*-&DSATB+255)/256*256)  End on 256-Byte Bndry
         ORG   *-16
&OVCHK   DS    D                    (Reserved)
         DS    F                    Address of ATB - Overlay Prot
&ENDCT   DS    CL4                  Ending EyeCatcher
&ATBLEN  EQU   *-&DSATB             Get Length as Equate
*
         AGO   .MEND
.*
.** ERROR MESSAGES
.*
.MNOTE1  ANOP
         MNOTE 8,'DSAEND: ..'
         AGO   .MEND
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=CONBEG   0100-10050-10050-1200-00061-00061-00000-RHDMAC
         MACRO ,
         CONBEG ,
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** CONBEG - Define Beginning of Constant Area for Baseless Programs  *
.*                                                                    *
.*    This macro established a seperately addressabile area for       *
.*  for constants literals, and MF=L constructs. It also provides     *
.*  a common area that can be easilty modified without having to      *
.*  modify actual program code later.                                 *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS             Copy Gglobals
.*
         LCLC  &C                   Local Variables
         LCLA  &I,&J                (Same)
*
** Switch to the Constant Location Counter
*
&LCCON   LOCTR ,                    Put Constants in Constant Area
         AGO   .MEND
.*
.** ERROR MESSAGES
.*
.MNOTE1  ANOP
         MNOTE 8,'DSAEND: ..'
         AGO   .MEND
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=CONEND   0100-10050-10050-1200-00067-00067-00000-RHDMAC
         MACRO ,
         CONEND ,
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** CONEND - Define End of Constant Area for Baseless Programs        *
.*                                                                    *
.*    This macro established a seperately addressabile area for       *
.*  for constants literals, and MF=L constructs. It also provides     *
.*  a common area that can be easilty modified without having to      *
.*  modify actual program code later.                                 *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS             Copy Gglobals
.*
         LCLC  &C                   Local Variables
         LCLA  &I,&J                (Same)
.*
.** Switch to the Constant Location Counter
.*
&LCCON   LOCTR ,                    Put Constants in Constant Area
         LTORG ,                    Generate Any Undeposited Literals
*
&LCTRC   LOCTR ,                        Get Last LOCTR for CSECT
         ORG &CASECT+(*-&CASECT+255)/256*256
         DS  0H
         AGO   .MEND
.*
.** ERROR MESSAGES
.*
.MNOTE1  ANOP
         MNOTE 8,'DSAEND: ..'
         AGO   .MEND
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=DSABEG   0100-10050-10050-1200-00079-00079-00000-RHDMAC
         MACRO ,
         DSABEG ,
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** Beginning of Dynamic Storage Area - (DSA)                         *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.* 10/04/08 R.Harper  M000 Changed to support DSADSECT                *
.*                                                                    *
.**********************************************************************
.*
.** Global and local Variables
.*
         COPY  PGMGBLAS             Copy Gglobals
.*
         LCLA  &I,&K
         LCLC  &S
.*
.** Macro Code
.*
.DSA100  ANOP
*
** Define Subroutine Saveareas
*
.DSA200  ANOP
&LCDSA   LOCTR ,                    Reestablish the DSA DSECT
*
         AIF   (&SUBH EQ 0).MEND    Any Subroutines Defined?
&I       SETA  1                    Get Beginning Count
.DSA210  ANOP
         AIF   ('&SUBN(&I)' EQ '').MEND
&S       SETC  '$&SUBN(&I)'         Get Name of Subroutine
&S       DS    AD                   Doubleword Savearea
         AIF   (&SUBC(&I) EQ 0).DSA220
&K       SETA  &SUBC(&I)            Get Register Count Saved
         DS    &K.AD                Space for Saved Registers
.DSA220  ANOP
&I       SETA  &I+1
         AGO   .DSA210
*
** Do Other MF=L Stuff Here
*
.*
.** ERROR MESSAGES
.*
.MNOTE1  ANOP
         MNOTE 8,'DSABEG: ?'
         AGO   .MEND
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=DSADSECT 0100-10050-10050-1200-00136-00136-00000-RHDMAC
         MACRO ,
         DSADSECT ,                 Define DSA Prefix
.**********************************************************************
.* Copyright (c) 2008 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** Beginning of Dynamic Storage area - (DSA)                         *
.*                                                                    *
.*    This DSECT provides a mapping of the DSA prefix generated via   *
.*  the PGMNTRY macro.  This program management system uses what is   *
.*  essentially an Upstack, which says any called program will use    *
.*  storage or allocate their DSA after the last DSA address of the   *
.*  calling program.                                                  *
.*    Each program called in succession will have their own DSA       *
.*  prefix area, all tied togwther by the savearea backward and       *
.*  forward pointers.                                                 *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 10/04/08 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Define Standard z/OS Savearea
.*
DSA      DSECT ,                    Establish The DSECT
DSASAVEA DS    18F                  Standard MVS Sarearea
         ORG   DSASAVEA             Reset location Counter
DSAEYECT DS    CL3'DSA'             ..Word 0/EyeCatcher - DSA Upstk ID
DSASVC#  DS    AL1                  ..Type of Traces Indicator
DSASVNOP EQU   X'00'                  ..Traces Not in Effect
DSASVBRE EQU   X'01'                  ..Branch Entry Traces in Effect
DSASVSVC EQU   X'02'                  ..SVC Traces in Effect
DSASVTRP EQU   X'03'                  ..TRAP2 Traces in Effect
*
DSASVBCK DS    F                    ..Backward Pointer
DSASVFWD DS    F                    ..Forward Pointer
DSASVR14 DS    F                    ..Return Address
DSASVR15 DS    F                    ..Entry Point/Return Code
DSASVR0  DS    F                    ..Input Param/Reason Code
DSASVR1  DS    F                    ..Input Param
         ORG   ,                    Reset Location Counter
*
DSADSAID DS    CL8              Identify Our Savearea Type
DSASTKAD DS    A                    Pointer to Stack Entry - If F1SA
DSARETRY DS    F                    Retry Address if PGMNTRY ESTAE=YES
*
** Define Storage Area for Managing the DSA Upstack
*
DSAFLAG1 DS    B                    Flag Byte
DSAOWNER EQU   X'80'                ..This Program Getmained DSA
DSAATBOW EQU   X'40'                ..This Program Acquired  ATB
DSAATBUS EQU   X'20'                ..This Program Uses ATB Storage
         DS    BL3                  (Reserved)
DSARESID DS    F                    Residual Storage in This Block
DSALENTH DS    F                    Length of Getmained Area
DSALNGTH DS    F                    Length of Our Area Used
*
         IARV64 MF=(L,DSAV64)       MF=L For IARV64
DSAATBAD DS    AD                   ATB Storage if 64-Bit Main Pgm
DSAATBPC DS    AD                   Page Count for ATB Storage Freemain
DSAATBSZ DS    AD                   Size of ATB Used by This Program
DSAATBRS DS    AD                   Residual ATB Storage Available
DSAATBUT DS    AD                   ATB User Token
         DS   3D                    (Reserved)
*
DSA$RC   DS    F                    Program Return Code
DSA$RS   DS    F                    Program Reason Code
*
DSAPLIST DS    0F                   Call Parameter List Area
DSASAVER DS   4D                    Trap Default Savearea IMP=BASR
*
DSAWORKD DS    D                    General Purpose Work Areas
DSAWORKF DS    F                    (Same)
DSAWORKH DS    H                    (Same)
DSAWKCL9 DS    CL9                  (Same)
*
DSASVCNO DS    X                    RDHTRSVC SVC Number-IMP=SVC/TRAP2
*
** Define Propogated Storage Area
*
*    Propogated Storage is passed from the Calling Program to Sub-Pgms
*  At the same labels within the PGMNTRY Macro.  When a program is
*  called the PGMNTRY macro will copy the DSAPROPA area from the
*  calling program into the DSAPROPA of the called program.  This
*  supports the traces, and allows another means to pass parameters
*  from one program to another.
*
DSAPROPA DS    0F                   Begin Propogated Storage
DSATRCEP DS    F                    EP for RDHTRACE for BASR Traces
*
DSATRAPS DS    0XL8                 Set Trap Trace Entry Points
DSATRPGM DS    H                    ..Trap for PGMNTRY/PGMEXIT
DSATRSUB DS    H                    ..TRAP for SUBNTRY/SUBEXIT
DSATRTRC DS    H                    ..Generic Trace Point Trap
DSATRSPM DS    H                    ..Structured Macros Trap (Maybe)
*
DSAPROPS DS    0F                   Propogated Storage Addresses
DSAPROP1 DS    A                    ..Reserved for User Programs
DSAPROP2 DS    A                    ..Reserved
DSAPROP3 DS    A                    ..Reserved
DSAPROP4 DS    A                    ..Reserved
         DS    6A                   ..Reserved
DSAPROPL EQU   *-DSAPROPA           Length of Propogated Storage
*
         ORG   DSA+((*-DSA+15)/16*16) End on 16-Byte Boundry
DSAPGMDT DS    0D                   Start of Program Data
DSAPFXLN EQU   *-DSA                Length of DSA Prefix
.*
DSAD     EQU   DSA+4096             Start of 2nd DSA Base
.*
         MEND  ,
./ ADD NAME=DSAEND   0100-10050-10050-1200-00081-00081-00000-RHDMAC
         MACRO ,
         DSAEND
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** End of Dynamic Storage Area - (DSA)                               *
.*                                                                    *
.*    Do Housekeeping and Cleanup for the DSA                         *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS             Copy Gglobals
.*
         LCLA  &I,&J                Local Variables
         LCLC  &DSALEN              Length of DSA
         LCLC  &OVCHK               Overlay Ckeck Variable
         LCLC  &ENDCT               Ending Eye Catcher
.*
&DSALEN  SETC  '&LCDSA'.'L'         Set Label Small Footprint
&OVCHK   SETC  '&LCDSA'.'_OVCHK'    Set Label for Overlay Check
&ENDCT   SETC  '&LCDSA'.'_ENDCT'    Set Label For Ending Eye Catcher
*
** Define End of DSA
*
&LCDSE   LOCTR ,                    Position Us at DSA End
         ORG   &LCDSA+((*-&LCDSA+15)/16*16)  End on 16-Byte Boundry
         DS    D                    (Reserved)
&OVCHK   DS    F                    Address of DSA - Overlay Prot
&ENDCT   DS    CL4                  Ending EyeCatcher
&DSALEN  EQU   *-&DSDSA             Get Length as Equate
*
** Delete Subroutine Saveareas
*
         AIF   (&SUBH EQ 0).MEND    Any Subroutines Defined?
&I       SETA  1                    Get Beginning Count
&J       SETA  &SUBH                Get Beginning Count
&SUBH    SETA  0
.DSA010  ANOP
         AIF   (&I EQ &J).MEND
&SUBN(&I) SETC  ''
&I       SETA  &I+1
         AGO   .DSA010
         AGO   .MEND
.*
.** ERROR MESSAGES
.*
.MNOTE1  ANOP
         MNOTE 8,'DSAEND: ..'
         AGO   .MEND
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=DUCDSECT 0100-10050-10050-1200-00191-00191-00000-RHDMAC
          MACRO
&LBL      DUCDSECT ,
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
*                                                                     *
* DUCDSECT - This macro maps the data areas used by the               *
*            Dispatchable Unit Control Table (DUCT)                   *
*                                                                     *
*   This macro generates dsects for the three data area integral to   *
* the DUCT.  This includes the DUCT Origin pointed to by control      *
* register CR2, the DUCT Trap Control Block pointed to by DUCTO       *
* and the DUCT Trap Save Area.                                        *
*                                                                     *
*                                                                     *
*   DUCTO - DUCT Origin pointed to by CR2                             *
*                                                                     *
*       The DUCT Origin is pointed to by Control Register CR2 and     *
*     exists in DAT(OFF) storage that is not accessable to DAT(ON)    *
*     programs.  All executing dispatchable units, which includes     *
*     TCB's and SRB's point to a DUCT provided by the operating       *
*     system that is unique to that dispatchable unit. Initially      *
*     the pointer to the Trap Control Block is zero and must be       *
*     populated before issueing a TRAP2/TRAP4 instruction, else       *
*     these instruction will result in a S0D3 a Special Operation     *
*     Exception.                                                      *
*                                                                     *
*                                                                     *
*   DUCCTRCB - The DUCT Trap Control Block                            *
*                                                                     *
*       The Trap Control Block is mapped by this DSECT pointed to     *
*     by a virtual address in DUCTO.  It contains two bit settings    *
*     that indicate how the PSW and General Registers are to be       *
*     stored, upon execution of the TRAP2/4 instructions.  It also    *
*     contains the virtual address pointer to the DUCT Trap Save      *
*     Area.                                                           *
*                                                                     *
*                                                                     *
*   DUCSAVEA - The DUCT Trap Save Area                                *
*                                                                     *
*       The DUCT Trap Save Area is pointed to by the Trap Control     *
*     Block and is the area where the Operating System stores the     *
*     PSW and General Registers that were in effect at the time       *
*     the TRAP2/4 was executed.                                       *
*                                                                     *
*                                                                     *
* DATE     DEVELOPER CNG# COMMENTS                                    *
* ======== ========= ==== =========================================== *
* 00/00/00 R.HARPER  M000 MACRO DEVELOPED                             *
*                                                                     *
*                                                                     *
***********************************************************************
*
** DUCTO - DUCT origin - Pointed to by Control Register 2
*
DUCTO    DSECT ,
DUCTBAST DS    A                        BASTEO  - Base ASTE Origin Real
DUCTSFLG DS    B                        Flag Bit
DUCTSA   EQU   X'80'                    ..Subspace Active Bit
DUCTSAST DS    AL3                      SSASTEO - Subspace ASTE Origin
         DS    F                        (Reserved)
DUCTSASN DS    A                        SSASTESN- Subspace ASTE Seq #
DUCTDUAL DS    A                        DUALD
DUCTPSKM DS    Y                        PSW Key Mask
         DS    B                        (Reserved)
DUCTPSWK DS    B                        PSW Key Byte
DUCTKEY  EQU   B'11110000'              ..PSW Key Value
DUCTRA   EQU   B'00001000'              ..RA - Reduced Authority - BSA
DUCTP    EQU   X'00000001'              ..Problem State
         DS    2F                       (Reserved)
*
DUCTRT64 DS    0D                       64-Bit Return Address
         DS    F                        (Same)
DUCTRTNA DS    A                        31-Bit Return Address
         DS    F                        (Reserved)
*
DUCTTRPC DS    0A                       Trap Control Block Address
         DS    BL3                      (Same)
DUCTTFLG DS    B                        Flag Bit
DUCTE    EQU   X'01'                    ..E - Enable TRAP2/4 Instrs
         DS    3F                       (Reserved)
DUCTLNTH EQU   *-DUCTO                  Length of DUCT - 64-Bytes
*
*---------------------------------------------------------------------*
* Trap Control Block - Pointed to By DUCTTRPC                         *
*---------------------------------------------------------------------*
*
DUCCTRCB DSECT ,                        DUCT Trap Control Block
         DS    B                        (Reserved)
DUCCFLAG DS    B                        Flag Byte
DUCCP    EQU   B'00000100'              ..Bit 13 = PSW Control Bit
*                                         0 - Store  64-Bit PSW
*                                         1 - Store 128-Bit PSW
DUCCR    EQU   B'00000010'              ..Bit 14 = GRS Control Bit
*                                         0 - 32-Bit Registers Saved
*                                         1 - 64-Bit Registers Saved
         DS    2F                       (Reserved)
DUCCSAVA DS    A                        Trap Save Area Address
         DS    F                        (Reserved)
DUCCTRPA DS    A                        Trap Program Virtual Address
DUCCUWD1 DS    A                        User Word 1
DUCCUWD2 DS    A                        User Word 2
         ORG   DUCCTRCB+64              (Reserved)
DUCCTRLN EQU   *-DUCCTRCB               Length of Trap CB - 64-Bytes
*
*---------------------------------------------------------------------*
* Trap Save Area - Status at time of TRAP2/4 Instruction              *
*---------------------------------------------------------------------*
*
DUCSAVEA DSECT ,                        DUCT Save Area
DUCSFLG1 DS    B                        Flag Byte 1
DUCS1EX  EQU   B'10000000'              ..TRAP Target of Execute
DUCS1T4  EQU   B'01000000'              ..TRAP is TRAP4 (Not TRAP2)
DUCSFLG2 DS    B                        Flag Byte 2
DUCSILC  EQU   B'00000110'              ..Bits for ILC
         DS    2B                       (Reserved)
         DS    F                        (Reserved)
DUCS4ADR DS    A                        TRAP4 operand Address
DUCSAR15 DS    A                        Access Register 15 Value
*
DUCSPSW  DS    0D                       PSW Value
DUCSPSW1 DS    A                        ..PSW Word 1
DUCSPSW2 DS    A                        ..PSW Word 2
DUCSPSW3 DS    A                        ..PSW Word 3
DUCSPSW4 DS    A                        ..PSW Word 4
*
DUCSREGS DS    0D                       Register Save Areas
DUCS4R0  DS    A                        4-Byte Register Values
DUCS4R1  DS    A                        (Same)
DUCS4R2  DS    A                        (Same)
DUCS4R3  DS    A                        (Same)
DUCS4R4  DS    A                        (Same)
DUCS4R5  DS    A                        (Same)
DUCS4R6  DS    A                        (Same)
DUCS4R7  DS    A                        (Same)
DUCS4R8  DS    A                        (Same)
DUCS4R9  DS    A                        (Same)
DUCS4R10 DS    A                        (Same)
DUCS4R11 DS    A                        (Same)
DUCS4R12 DS    A                        (Same)
DUCS4R13 DS    A                        (Same)
DUCS4R14 DS    A                        (Same)
DUCS4R15 DS    A                        (Same)
*
         ORG   DUCSREGS
DUCS8R0  DS    D                        8-Byte Register Values
DUCS8R1  DS    D                        (Same)
DUCS8R2  DS    D                        (Same)
DUCS8R3  DS    D                        (Same)
DUCS8R4  DS    D                        (Same)
DUCS8R5  DS    D                        (Same)
DUCS8R6  DS    D                        (Same)
DUCS8R7  DS    D                        (Same)
DUCS8R8  DS    D                        (Same)
DUCS8R9  DS    D                        (Same)
DUCS8R10 DS    D                        (Same)
DUCS8R11 DS    D                        (Same)
DUCS8R12 DS    D                        (Same)
DUCS8R13 DS    D                        (Same)
DUCS8R14 DS    D                        (Same)
DUCS8R15 DS    D                        (Same)
*
DUCSUWD1 DS    A                        User Word 1
DUCSUWD2 DS    A                        User Word 2
DUCSAVE4 DS    4A                       Access Register Savearea 14-1
*
         ORG   DUCSAVEA+256             Reserved Space
DUCSAVLN EQU   *-DUCSAVEA               Length of DUCT Save Area
         MEND
./ ADD NAME=GOSUB    0100-10050-10050-1200-00052-00052-00000-RHDMAC
         MACRO ,
&LBL     GOSUB &LOC,&REG=R14
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** GOSUB - Establish Linkage to a Subroutine                         *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS             Copy Gglobals
.*
         LCLC  &P                   Local Variables
.*
.** Do a Simple Jump and Save
.*
         JAS   &REG,&LOC            Link to a Subroutine
         AGO   .MEND
.*
.** ERROR MESSAGES
.*
.MNOTE1  ANOP
         MNOTE 8,'GOSUB: ..'
         AGO   .MEND
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=IFNTIOT  0100-10050-10050-1200-00101-00101-00000-RHDMAC
         MACRO
&LBL     IFNTIOT &P,&DDNAME=,&DDADDR=
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** IFNTIOT - Determine if the DDNAME is in the TIOT                  *
.*                                                                    *
.*    P       - Positional parameter.  NOT - Generates a NE instead   *
.*              of an EQ condition for subsequent processing.         *
.*                                                                    *
.*    DDNAME= - Specifies a character string for the DDNAME to search *
.*              for in the TIOT.                                      *
.*                                                                    *
.*    DDADDR= - Specifies the address of a DDNAME to search for in    *
.*              the TIOT.  It may be specified as a register (R2)     *
.*              or as a relocatable address 0(R2) or MYDDNAM.         *
.*                                                                    *
.*  Resrtictions:                                                     *
.*    This macro destroys the contents of Registers R14-R1.           *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         AIF   ('&LBL' EQ '').NOLBL
&LBL     DS    0H
.NOLBL   ANOP
.*
.** Get DDNAME to Search For
.*
         AIF   ('&DDNAME' NE '').DDN3
         AIF   ('&DDADDR' EQ '').MNOTE1
         AIF   ('&DDADDR(1,1)' NE '(').DDN1
         LR    R15,&DDADDR(1)       Get Address of DDNAME
         AGO   .DDN4
.DDN1    ANOP
         LA    R14,&DDADDR          Get Address of DDNAME
.DDN2    ANOP
         AGO   .DDN4
.*
.DDN3    ANOP
         AIF   ('&DDADDR' NE '').MNOTE2
         LA    R15,=C'&DDNAME'      Get Address of DDNAME
.DDN4    ANOP
.*
.** Locate DD in TIOT - If it's There
.*
         L    R1,PSATOLD-PSA           Get PSATOLD Value - Our TCB
         L    R1,TCBTIO-TCB(,R1)       Get Address of TIOT
         XR   R0,R0                         Zero Work Register
         ICM  R0,B'0001',TIOELNGH-TIOT1(R1) Get Length of This Entry
         BZ   *+4+6+4+2+4                   -> To LTR - Set Not-Equal
         CLC  0(8,R15),TIOEDDNM-TIOT1(R1)   Is This Our DD Entry?
         BE   *+4+2+4+2                     Yes -> Exit
         ALR  R1,R0                    Point at Next Entry
         B    *-2-4-6-4-4              -> Loop Back to ICM
         LTR  R1,R1                    Force Non-Zero/Not Equal
.*
         AIF  ('&P' EQ 'NOT').DDN5
         IF   (EQ)                     If Found - Do Stuff
         AGO  .MEND
.DDN5    ANOP
         IF   (NE)                     If Not Found - Do Stuff
         AGO  .MEND
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'DDNAME= or DDADDR= must be specified.'
         AGO .MEND
.*
.MNOTE2  ANOP
         MNOTE 8,'DDNAME= or DDADDR= must be specified, but not both.'
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=LBIN     0100-10050-10050-1200-00136-00136-00000-RHDMAC
         MACRO
         LBIN  &R,&D,                                                  *
               &LAEY=LAE             Instruction to Use in AR Mode
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** LBIN - Load Binary Value Into Register                            *
.*                                                                    *
.*    The purpose of this macro is to be used as an inner macro to    *
.*  load a parameter value into a register.  It does this by using    *
.*  the length value provided by the assembler to determine how to    *
.*  load the value.                                                   *
.*                                                                    *
.*    LBIN  Rx,(Rx)        Generates LR                               *
.*    LBIN  Rx,TERM        Generates LAY/LEAY Based on &SYSASCE       *
.*    LBIN  Rx,(*,TERM)    Generates L/LG Based on L'TERM             *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 04/20/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY PGMGBLAS             Copy Program Management Globals
.*
         LCLA  &I,&K,&J            General Numeric Workarea
         LCLB  &A(8),&B(8)         General Binary Workarea
.*
.** Load Value From Register
.*
         AIF   ('&D'(1,2) EQ '(*').LBIN040    If Actual Value Desired?
         AIF   ('&D'(1,1) NE '(').LBIN020     If Not In a Register?
         AIF   ('&SYSAM64' EQ 'YES').LBIN010  If 64-Bit Amode...
         LGR   &R,&D(1)                Load Value From Register
         AGO   .MEND                   ->Done
.LBIN010 ANOP
         LGR   &R,&D(1)                Load 64-Bit Value From Register
         AGO   .MEND                   -> Done
.*
.** Load The Address of the Value
.*
.LBIN020 ANOP
         AIF   ('&SYSASCE' EQ 'AR').LBIN030 If in ARMODE
         LAY   &R,&D                   Load Address of Value
         AGO   .MEND
.LBIN030 ANOP
         &LAEY &R,&D                   Load Address of Value
         AGO   .MEND
.*
.** Load Value Based on Length
.*
.LBIN040 ANOP
         AIF  (L'&D(2) EQ 8).LBIN180
         AIF  (L'&D(2) EQ 7).LBIN170
         AIF  (L'&D(2) EQ 6).LBIN160
         AIF  (L'&D(2) EQ 5).LBIN150
         AIF  (L'&D(2) EQ 4).LBIN140
         AIF  (L'&D(2) EQ 3).LBIN130
         AIF  (L'&D(2) EQ 2).LBIN120
.LBIN110 ANOP
         XGR   &R,&R                   Zero 64-Bit Work Register
         ICY  &R,&D(2)                 Load 1-Byte Value Into Register
         AGO  .MEND                    -> Done
.*
.LBIN120 ANOP
         XGR   &R,&R                   Zero 64-Bit Work Register
         ICMY &R,B'0011',&D(2)         Load 2-Byte Value Into Register
         AGO  .MEND                    -> Done
.*
.LBIN130 ANOP
         XGR   &R,&R                   Zero 64-Bit Work Register
         ICMY &R,B'0111',&D(2)         Load 3-Byte Value Into Register
         AGO  .MEND                    -> Done
.*
.LBIN140 ANOP
         XGR   &R,&R                   Zero 64-Bit Work Register
         ICMY &R,B'1111',&D(2)         Load 4-Byte Value Into Register
         AGO  .MEND                    -> Done
.*
.LBIN150 ANOP
         XGR   &R,&R                   Zero 64-Bit Work Register
         ICMH &R,B'1000',&D(2)         Load 5-Byte Value Into Register
         ICMY &R,B'1111',&D(2)+4       (Same)
         AGO  .MEND                    -> Done
.*
.LBIN160 ANOP
         XGR   &R,&R                   Zero 64-Bit Work Register
         ICMH &R,B'0011',&D(2)         Load 6-Byte Value Into Register
         ICMY &R,B'1111',&D(2)+4       (Same)
         AGO  .MEND                    -> Done
.*
.LBIN170 ANOP
         XGR   &R,&R                   Zero 64-Bit Work Register
         ICMH &R,B'0111',&D(2)         Load 7-Byte Value Into Register
         ICMY &R,B'1111',&D(2)+4       (Same)
         AGO  .MEND                    -> Done
.*
.LBIN180 ANOP
         ICMH &R,B'1111',&D(2)         Load 8-Byte Value Into Register
         ICMY &R,B'1111',&D(2)+4       (Same)
         AGO  .MEND                    -> Done
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'LBIN001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=LSEDSECT 0100-10050-10050-1200-00120-00120-00000-RHDMAC
         MACRO ,
         LSEDSECT ,
.**********************************************************************
.* Copyright (c) 2008 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** LSEDSECT - Linkage Stack Entry DSECT(s)                           *
.*                                                                    *
.*    This dsect is used to define the linkage stack entries.         *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 10/12/08 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
LSED     DSECT ,                        Linkage Stack Entry Descripter
LSEDTYPE DS    B                        Type of Stack Entry
LSEDTUSB EQU   X'80'                    ..Unstack Supression Bit
LSEDTHDR EQU   B'0001001'               ..Header Entry
LSEDTTRL EQU   B'0001010'               ..Trailer Entry
LSEDTBKR EQU   B'0001100'               ..BAKR Entry
LSEDTPCE EQU   B'0001101'               ..PC Entry
LSEDSI   DS    X                        Section Identification
LSEDRFS  DS    H                        Remaining Free Space
LSEDNES  DS    H                        Next Entry Size
LSEDRES  DS    H                        (Reserved)
LSEDLNTH EQU   *-LSED                   Length of Descripter
*
LSHD     DSECT ,                        Linkage Stack Header Entry
         DS    3F                       (Reeserved)
LSHDPREV DS    A                        Previous Page
LSHDLNTH EQU   *-LSHD                   Length of Header Entry
*
LSEN     DSECT ,                        PC/BAKR Entryes
LSENGRGS DS    0XL128                   GP Registers in Stack 64-bit
LSENGR0  DS    D                        ..General Register R0
LSENGR1  DS    D                        ..General Register R1
LSENGR2  DS    D                        ..General Register R2
LSENGR3  DS    D                        ..General Register R3
LSENGR4  DS    D                        ..General Register R4
LSENGR5  DS    D                        ..General Register R5
LSENGR6  DS    D                        ..General Register R6
LSENGR7  DS    D                        ..General Register R7
LSENGR8  DS    D                        ..General Register R8
LSENGR9  DS    D                        ..General Register R9
LSENGR10 DS    D                        ..General Register R10
LSENGR11 DS    D                        ..General Register R11
LSENGR12 DS    D                        ..General Register R12
LSENGR13 DS    D                        ..General Register R13
LSENGR14 DS    D                        ..General Register R14
LSENGR15 DS    D                        ..General Register R15
*
LSENSTAT DS    0D                       Other Status Information
LSENPKM  DS    Y                        ..PSW KEY MASK Keys in CR3
LSENSASN DS    Y                        ..Secondary ASN in CR3
LSENEAX  DS    Y                        ..Extended Authorization Ndx
LSENPASN DS    Y                        ..Primary ASN ub CR4
LSENPSW1 DS    D                        ..Extended PSW Bits 0-63
LSENBRAD DS    0D                       ..Branch Address if 64-bit
LSENSPID DS    F                        ....Called Space ID 64-bit PC
LSENPCNB DS    F                        ....PC Number idf PC Entry PC
*                                       ....Branch Address if BAKR
LSEN31BT EQU   X'80'                    ....31-Bit Mode Indicator
LSENMODA DS    0D                       ..Modifiable Area
LSENMOD1 DS    A                        ..Modifiable Area - Word1
LSENMOD2 DS    A                        ..Modifiable Area - Word2
         DS    D                        ..(Reserved)
LSENPSW2 DS    D                        ..Extended PSW Bits 64-127
LSENSAST DS    F                        ..Secondary ASTEIN
LSENPAST DS    F                        ..Primary   ASTEIN
         DS    5D                       ..(Reserved)
*
LSENARGS DS    0XL64                    AR Registers in Stack 32-bit
LSENAR0  DS    F                        ..Access Register R0
LSENAR1  DS    F                        ..Access Register R1
LSENAR2  DS    F                        ..Access Register R2
LSENAR3  DS    F                        ..Access Register R3
LSENAR4  DS    F                        ..Access Register R4
LSENAR5  DS    F                        ..Access Register R5
LSENAR6  DS    F                        ..Access Register R6
LSENAR7  DS    F                        ..Access Register R7
LSENAR8  DS    F                        ..Access Register R8
LSENAR9  DS    F                        ..Access Register R9
LSENAR10 DS    F                        ..Access Register R10
LSENAR11 DS    F                        ..Access Register R11
LSENAR12 DS    F                        ..Access Register R12
LSENAR13 DS    F                        ..Access Register R13
LSENAR14 DS    F                        ..Access Register R14
LSENAR15 DS    F                        ..Access Register R15
*
LSENLNTH EQU   *-LSEN                   Length of Entry
.*
.MEND    ANOP
         MEND  ,
*
./ ADD NAME=MFREAL   0100-10050-10050-1200-00077-00077-00000-RHDMAC
         MACRO
         MFREAL &TO,&FR,&LEN=
.*
.**********************************************************************
.* Copyright (c) 2009 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** MFREAL - Move Data From Real Storage Address                      *
.*                                                                    *
.*    This macro was written to provide an easy mechanism for moving  *
.*  data to DAT(ON) storage from a Real Storage address that may not  *
.*  be accessible to DAT(ON) program, as in the DUCT and the ASCEs.   *
.*    The Length attribute for the &TO area is used as the length     *
.*  for the move, and must be a multiple of four bytes.  Data is      *
.*  moved 4-bytes at a time and there is no serialization performed   *
.*  by this macro.                                                    *
.*                                                                    *
.*  Work Registers: R0, R1, R14, R15                                  *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Move Data From Real Storage
.*
         AIF ('&LEN' EQ '').L1
         LBIN R1,&LEN                   Load Length of Data to move
         SRL R1,2                       Divided By 4 = # Words
         AGO .L2
.L1      ANOP
         LA R1,L'&TO/4                  Words to Move
.L2      ANOP
.*
         LA R14,&TO                     To Address Virtual
         LA R15,&FR                     From Address Real
         DO FROM=(R1)                   Loop 16 words
            LURA R0,R15                 ..Load a Word
            ST   R0,0(,R14)             ..Store a Word
            AHI  R14,4                  ..Bump Pointers
            AHI  R15,4                  ..(Same)
         ENDDO ,                        -> Loop
         AGO  .MEND                    -> Done
.*
.** Macro Error Conditions
.*
.MNOTE1  ANOP
         MNOTE 8,'MFRL001: '
         AGO .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=MSGDSECT 0100-10050-10050-1200-00083-00083-00000-RHDMAC
         MACRO ,
&LBL     MSGDSECT ,
.**********************************************************************
.* Copyright (c) 2009 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** MSGDSECT - Define Input Data to RDHMSGS                           *
.*                                                                    *
.*    This dsect defines the data area generated by the #MSG, #WTO or *
.*  #WTOR Macros as input to the RDHMSGS message processor. These     *
.*  macros build this parameter list inline and pass the address to   *
.*  RDHMSGS via standard call linkage for execution.                  *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
MSGDSECT DSECT ,
MSGID    DS    0CL8                 Message ID: AAA9999X
MSGIPRD  DS    CL3                  ..Product Identifier
MSGINBR  DS    ZL4                  ..Message Number
MSGITYP  DS    CL1                  ..Message Type I/E/A
*
MSGFLAG1 DS    B                    Flag Byte
MSG1MSG  EQU   X'80'                ..#MSG Generated This Area
MSG1WTO  EQU   X'40'                ..#WTO Processing
MSG1WTOR EQU   X'20'                ..#WTOR Processing
MSG1SQEZ EQU   X'10'                ..SQUEEZE=YES Specified
MSG1MID  EQU   X'08'                ..MSGID Not Specified
MSG1CLOS EQU   X'04'                ..CLOSE Processing Requested
MSGFLAG2 DS    B                    Flag Byte
*
MSGTAREA DS    0H               -*- Type #WTO/#WTOR
MSGWRCDE DS    H                    #WTO/R - Routing Codes
MSGWRLEN DS    H                    #WTOR  - Reply Area Length
MSGWRADR DS    S                    #WTOR  - Reply Area Address
MSGWRECB DS    S                    #WTOR  - ECB Address
*
         ORG   MSGTAREA         -*- Type #MSG
MSGDDNAM DS    CL8                  #MSG - DDNAME - DFLT(MSGPRINT)
         ORG   ,
*
MSGMSG   DS    0H               -*- Message Area Variable Segment
MSGMLNTH DS    YL2                  Length of MSG= Segment
MSGMDATA DS    0H                   Beginning of Message Data
*
MSGEVAR  DSECT ,                    Embedded Variable Description
MSGEVID  DS    X                    Donates Beginning of Variable
MSGEVVAR EQU   X'FE'                ..Variable indicater
MSGETYP  DS    C                    Type of Constant to Insert
MSGETYPC EQU   C'C'                 ..C - Character Data
MSGETYPZ EQU   C'Z'                 ..Z - Zoned Data
MSGETYPF EQU   C'F'                 ..F - Fullword Data
MSGETYPH EQU   C'H'                 ..H - Halfword Data
MSGETYPP EQU   C'P'                 ..P - Packed Data
MSGETYPX EQU   C'X'                 ..X - Hexadecmil Data
MSGEDLEN DS    YL1                  Length of Variable
MSGESCON DS    SL2                  SCON Address of Data to Insert
MSGESLEN EQU   *-MSGEVAR            Length of a Variable Area (6)
         MEND ,
./ ADD NAME=PGMBASE  0100-10050-10050-1200-00077-00077-00000-RHDMAC
         MACRO
&LBL     PGMBASE &BASE=,               Initial Base Address            *
               &REGS=                  Sublist of Base Registers
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** PGMNTRY - Establish a New CSECT Within a Source Module            *
.*                                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS                Copy Global Variables
.*
.** Build Base Register Code
.*
.B000    ANOP
         AIF   ('&REGS(1)' EQ '').B005  -> If No Base Registers
         LAY   &REGS(1),&BASE           Initial Base Addressability
         AIF   ('&REGS(2)' EQ '').B004
         LGR   &REGS(2),&REGS(1)        2nd Base Register
         AHI   &REGS(2),4096            (Same)
         AIF   ('&REGS(3)' EQ '').B003
         LGR   &REGS(3),&REGS(2)        3rd Base Register
         AHI   &REGS(3),4096            (Same)
         AIF   ('&REGS(4)' EQ '').B002
         LGR   &REGS(4),&REGS(3)        4th Base Register
         AHI   &REGS(4),4096            (Same)
         USING &LBL,&REGS(1),&REGS(2),&REGS(3),&REGS(4)
         AIF   ('&REGS(5)' NE '').MNOTE1
.B001    ANOP
         AGO   .B005
.*
.B002    ANOP
         USING &LBL,&REGS(1),&REGS(2),&REGS(3)
         AGO   .B005
.B003    ANOP
         USING &LBL,&REGS(1),&REGS(2)
         AGO   .B005
.B004    ANOP
         USING &LBL,&REGS(1)
.B005    ANOP
         AGO   .MEND
.*
.** Error Conditions Detected
.*
.MNOTE1   MNOTE 8,'PGMBASE: More than four registers specified.'
         AGO   .MEND
.*
.MEND    ANOP
         MEND
./ ADD NAME=PGMESTAE 0100-10050-10050-1200-00180-00180-00000-RHDMAC
         MACRO ,
         PGMESTAE ,
.**********************************************************************
.* Copyright (c) 2009 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** PGMESTAE - Inner Macro for PGMNTRY to Generate Basic ESTAE Support*
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 04/08/09 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Global and Local Variables
.*
         COPY  PGMGBLAS                Copy Gglobals
.*
         LCLC  &EST000,&EST010,&EST020 Program Labels
         LCLC  &ESTPRM                 (Same)
.*
.** Generate Lables Needed for PGMNTRY
.*
&EST000  SETC  'P00'.'&SYSNDX'         Build Required Labels
&EST010  SETC  'P10'.'&SYSNDX'         (Same)
&EST020  SETC  'P20'.'&SYSNDX'         (Same)
&ESTPRM  SETC  'PRM'.'&SYSNDX'         (Same)
.*
.*====================================================================*
.** Generate Header Code Within PGMNTRY
.*====================================================================*
.*
.EST100  ANOP
*
** Establish Recovery
*
         LAY   R2,&EST000              Address of Abend Recovery RTN
         LAY   R3,DSARETRY             Pass Address of Retry Rtn
         ESTAEX (2),CT,                Exit Routine Address            *
               PARAM=(3),              Pass Retry Address              *
               XCTL=NO,                XCTL Cancels ESTAE Exit         *
               PURGE=NONE,             Do Not Purge I/O on Abend       *
               ASYNCH=YES,             Allow ASYNC to Continue         *
               TERM=YES,               Don't Enter if Task Ccanceled   *
               MF=(E,&ESTPRM)          Point at List Form
*
.*
.*====================================================================*
.** Generate Needed Data Areas in DSA LOCTR
.*====================================================================*
.*
.EST200  ANOP
&LCDSD   LOCTR ,                       Last LOCTR in DSA Area
*
&ESTPRM  ESTAEX ,CT,                   Exit Routinr Address, Not Here  *
               XCTL=NO,                XCTL Cancels ESTAE Exit         *
               PURGE=NONE,             Do Not Purge I/O on Abend       *
               ASYNCH=YES,             Allow ASYNC to Continue         *
               TERM=NO,                Don't Enter if Task Cancelled   *
               MF=L                    This is List Form
*
.*
.*====================================================================*
.** Generate ESTAE Processing Code in Last CSECT LOCTR
.*====================================================================*
.*
.EST800  ANOP
&LCSPG   LOCTR ,                       Generate at End of Code
***********************************************************************
*                                                                     *
*  PGMESTAE - ESTAE to Activate DSARETRY for PGMNTRY Programs         *
*                                                                     *
*            This routine gets control in the event of an abend       *
*          situation. This is some simple basic recovery logic that   *
*          can be activated by specifying ESTAE=YES on the PGMNTRY    *
*          macro.                                                     *
*            If entered as the result of a program check, DSARETRY    *
*          has a non-zero value recovery will be attempted at that    *
*          address.  If on entry DSARETRY is zero, percolation will   *
*          result. Percolation will also result in the event that     *
*          no SWDA is available.                                      *
*            A more robust ESTAE recovery routine can be written      *
*          using the ESTNTRY and ESTEXIT Macros.                      *
*                                                                     *
*                                                                     *
*          Input Parameters:                                          *
*            R0 - Code, 12 If no SDWA & No Savearea                   *
*            R1 - Address of SDWA                                     *
*            R2 - Parameter Value Specified on EXTAEX Macro           *
*           R13 - Savearea Address                                    *
*           R14 - Return Address                                      *
*           R15 - Entry Point Address                                 *
*                                                                     *
*          OUTPUT:                                                    *
*           R15 - RETURN CODE, 0-Continue W/Termination               *
*                              4-Recovery, R0=Retry Address           *
*                                                                     *
*                                                                     *
***********************************************************************
*
         PUSH  USING                   Save Current Status
         DROP  ,                       Drop Everything
*
&EST000  DS    0H
         CHI   R0,12                   Is SDWA Available?
         BZR   R14                     No  -> Percolate
*
         STMG  R14,R12,8(R13)          Save Registers
         LGR   R12,R15                 Load Base Register
         SRL   R12,1                   Zero Low Bit For 64Bit ESTAEX
         SLL   R12,1                   (Same)
         USING &EST000,R12             Establish Addressability
*
         LGR   R9,R1                   Get SDWA Address
         USING SDWA,R9                 And Addressability
         LGR   R10,R2                  Get DSARETRY Address
         CLC   0(4,R10),=F'0'          Was a Recovery Rtn Specified?
         JZ    &EST020                 No  -> Percolate
*
** Set Up For Recovery
*
&EST010  DS    0H                  -*- Recover From Abend
         L     R2,0(,R10)              Get Recovery Address
         XC    0(4,R10),0(R10)         Zero Retry Address
*        SETRP RC=4,                   Return to Supervisor            *
               DUMP=NO,                No Dump                         *
               RETADDR=(2),            Recovery Routine Address        *
               RETREGS=YES,            Restore Registers               *
               FRESDWA=YES             Free SDWA, No Longer Needed
         SETRP RC=4,                   Return to Supervisor            *
               DUMP=NO,                No Dump                         *
               RETADDR=(2),            Recovery Routine Address        *
               RETREGS=NO,             Restore Registers               *
               FRESDWA=YES             Free SDWA, No Longer Needed
         LMG   R14,R12,8(R13)          Restore Registers
         BR    R14                     -> Return With Recovery
*
&EST020  DS    0H                  -*- Continue With termination
*        SETRP RC=0
         SETRP RC=0
         LMG   R14,R12,8(R13)          Restore Registers
         XGR   R15,R15                 Percolate
         BR    R14                     -> Return
*
&LCSCT   LOCTR ,                       Reestablish PGM LOCTR
         POP   USING                   Reset Current Status
         AGO   .MEND
.*
.** ERROR MESSAGES
.*
.MNOTE1  ANOP
         MNOTE 8,'DSAEST: ?'
         AGO   .MEND
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=PGMEXIT  0100-10050-10050-1200-00157-00157-00000-RHDMAC
         MACRO
&LBL     PGMEXIT &RC=,&RS=,&R1=,       Parameter Registers             *
               &MSG=,                  Message to Print                *
               &REGS=ALL,              Registers to Print              *
               &DATA=                  Data to Print
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** PGMEXIT - Exit The Program and Return to Caller                   *
.*                                                                    *
.*    This macro exists for the purpose of manifesting a common       *
.*  way of exiting a program within the system. It provides basic     *
.*  exit linkage the programs and aa trace point trap to be executed  *
.*  at that time.                                                     *
.*                                                                    *
.*  Parameters:                                                       *
.*    RC=   - Return Code Passed in R15                               *
.*    RS=   - Reason Code Passed in R0                                *
.*    MSG=  - Unique Message to Print in the Traces                   *
.*    REGS= - Registers to Print to Traces                            *
.*    DATA= - Additional Data to Snap to the Traces                   *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.* 10/04/08 R.Harper  M000 Updated for SVC Implementation             *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS
.*
         LCLC  &PGM000,&PGM010,&PGM020 Program Labels
.*
&PGM000  SETC  'P00'.'&SYSNDX'         Build Required Labels
&PGM010  SETC  'P10'.'&SYSNDX'         (Same)
&PGM020  SETC  'P20'.'&SYSNDX'         (Same)
.*
         AIF   ('&LBL' EQ '').L001
&LBL     DS    0H
.L001    ANOP
.*
.** Get Return Code
.*
         EREGG R0,R1                   Reload Regs From Stack
         AIF   ('&RC' EQ '').GEN010
         LBIN  R15,&RC                 Load Return Code
.GEN010  ANOP
.*
.** Get Reason Code
.*
         AIF   ('&RS' EQ '').GEN020
         LBIN  R0,&RS                  Load Reason Code
.GEN020  ANOP
.*
         AIF   ('&R1' EQ '').GEN030
         LBIN  R1,&R1                  Load R1 if Requested
.GEN030  ANOP
.*
         AIF   ('&XTRC' NE 'YES').GEN040
*        #TRACE TYPE=PGMX,             Indicate Program Exit Call      *
               MSG=&MSG,               Print PGMEXIT Message           *
               REGS=&REGS,             Print Desired Regs              *
               DATA=&DATA              Print Any Desired Data
&PGM000  #TRACE TYPE=PGMX,                                             *
               MSG=&MSG,                                               *
               REGS=&REGS,                                             *
               DATA=&DATA
.*
.GEN040  ANOP
         LGR   R2,R15                  Save for Final Display
         LGR   R3,R0                   (Same)
         LGR   R4,R1                   (Same)
.*
.** Cancel User ESTAE if Generated in PGMNTRY
.*
         AIF   (NOT &PESTAE).GEN190
*        ESTAEX 0                      Cancel User Program ESTAE
         ESTAEX 0                      Cancel User Program ESTAE
.*
.** If MAIN Program - Cancel Abend ESTAE
.*
.GEN190  ANOP
         AIF   (NOT &PMAIN).GEN200
*        ESTAEX 0                      Cancel Abend Diagnostic ESTAE
         ESTAEX 0                      Cancel Abend Diagnostic ESTAE
.GEN200  ANOP
.*
.** Free ATB Storage if Necessary
.*
         AIF   ('&PAMODE' NE '64').GEN210
         TM    DSAFLAG1,DSAATBOW       Do We Own This Storage?
         BZ    &PGM010                 No  ->
*        IARV64 REQUEST=DETACH,        Get Some ATB Storage
*              MEMOBJSTART=DSAATBAD,   ..Address of Storage to Free
*              USERTKN=DSAATBUT,       ..Indicate User Token This Pgm
*              MF=(E,DSAV64)           ..Address of List Form
         IARV64 REQUEST=DETACH,        Get Some ATB Storage            *
               MEMOBJSTART=DSAATBAD,   ..Address of Storage to Free    *
               USERTKN=DSAATBUT,       ..Indicate User Token This Pgm  *
               MF=(E,DSAV64)           ..Address of List Form
&PGM010  DS    0H
.GEN210  ANOP
.*
.** Free DSA Storage if Necessary
.*
.GEN220  ANOP
         TM    DSAFLAG1,DSAOWNER       Do We Own This Storage?
         BZ    &PGM020                 No  ->
         LR    R1,R13                  Free Our Savearea
         L     R0,DSALENTH             Get Length to Freemain
*        STORAGE RELEASE,ADDR=(1),     Free Storage for DSA
*              SP=&SP,                 (Same)
*              SP=&KEY,                (Same)
*              LENGTH=(0)              (Same)
         STORAGE RELEASE,ADDR=(1),     Free Storage for DSA            *
               SP=&SSP,                (Same)                          *
               KEY=&SKY,               (Same)                          *
               LENGTH=(0)              (Same)
*
&PGM020  DS    0H
         LGR   R15,R2                  Set Return Code
         LGR   R0,R3                   Set Reacon Code
         LGR   R1,R4                   Set R1
         EREG  R13,R13                 Restore Caller's R13
         XC    8(4,R13),8(R13)         Zero Forward Pointer
         PR    ,                       Return to Caller
.*
.** Exit Macro
.*
.EXIT    ANOP
         MEXIT ,
         MEND
./ ADD NAME=PGMGBINI 0100-10050-10050-1200-00072-00072-00000-RHDMAC
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** PGMGBINI - Program Management Global Variable Initialization      *
.*                                                                    *
.*    This member is intended to be copied by the PGMNTRY macro to    *
.*  do any initialization required upon the establishment of a new    *
.*  CSECT within a given source module.  The GLOBALs themselves are   *
.*  defined in the PGMGBLAS macro which is copied into every macro    *
.*  in this program management system.                                *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.** Setup LOCTR's For This CSECT
.*
&LCSCT   SETC  '&CASECT'.'_LCSCT'       Set LOCTR For CSECT
&LCSC1   SETC  '&CASECT'.'_LCSC1'       Set LOCTR Middle 1 CSECT
&LCSC2   SETC  '&CASECT'.'_LCSC2'       Set LOCTR Middle 2 CSECT
&LCSPG   SETC  '&CASECT'.'_LCSPG'       Set LOCTR For SUB Programs
.*
&LCCON   SETC  '&CASECT'.'_LCCON'       Set LOCTR For Constants
&LCCN1   SETC  '&CASECT'.'_LCCN1'       (Same)
&LCCN2   SETC  '&CASECT'.'_LCCN2'       (Same)
.*
&LCTRC   SETC  '&CASECT'.'_LCTRC'       Set LOCTR For Trace Data
.*
&DSDSA   SETC  '&CASECT'.'_DSA'         Set DSECT For Dynamic Storage
&LCDSA   SETC  '&CASECT'.'_LCDSA'       Set LOCTR For Dynamic Storage
&LCDSB   SETC  '&CASECT'.'_LCDSB'       Set LOCTR Middle 1 DSA
&LCDSC   SETC  '&CASECT'.'_LCDSC'       Set LOCTR Middle 2 DSA
&LCDSD   SETC  '&CASECT'.'_LCDSD'       Set LOCTR Middle 3 DSA
&LCDSE   SETC  '&CASECT'.'_LCDSE'       Set LOCTR Ending DSA
.*
&DSATB   SETC  '&CASECT'.'_ATB'         Set DSECT Above-The-Bar Storage
&LCATA   SETC  '&CASECT'.'_LCATA'       Set LOCTR For Dynamic ATB
&LCATB   SETC  '&CASECT'.'_LCATB'       Set LOCTR Middle 1 ATB
&LCATC   SETC  '&CASECT'.'_LCATC'       Set LOCTR Middle 2 ATB
&LCATD   SETC  '&CASECT'.'_LCATD'       Set LOCTR Middle 3 ATB
&LCATE   SETC  '&CASECT'.'_LCATE'       Set LOCTR Ending ATB
.*
.** Reset Globals For New Program
.*
&PESTAE  SETB  0                        Off - No ESTAE Support
./ ADD NAME=PGMGBLAS 0100-10050-10050-1200-00095-00095-00000-RHDMAC
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** PGMGBLAS - Program Management Global Variables                    *
.*                                                                    *
.*    This member is intended to be copied iunto all the macros in    *
.*  this program management system.  A seperate related macro         *
.*  PGMGBINI is called only by PGMNTRY for the purpose of doing any   *
.*  required initialization for this system whenever a new CSECT is   *
.*  established.                                                      *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.* 10/04/08 R.Harper  M000 Updated for SVC Implementation             *
.*                                                                    *
.**********************************************************************
.*
.*                                 -*- SYSSTATE Values
         GBLC  &SYSAM64                YES/NO - For Amode(64)
         GBLA  &SYSALVL                0/1/2  - For Architecture Level
         GBLC  &SYSASCE                P/AR   - For Primary or AR Mode
.*
         GBLC  &LCSCT                  SCT LOCTR - Main CSECT
         GBLC  &LCSC1                  SCT LOCTR - Middle 1 CSECT
         GBLC  &LCSC2                  SCT LOCTR - Middle 2 CSECT
         GBLC  &LCSPG                  SPG LOCTR - SUB Programs
.*
         GBLC  &LCCON                  CON LOCTR - For Constants
         GBLC  &LCCN1                  CON LOCTR 1 For Constants
         GBLC  &LCCN2                  CON LOCTR 2 For Constants
         GBLC  &LCTRC                  TRC LOCTR - For Trace Data
.*
         GBLC  &DSDSA                  DSA DSECT - For Dynamic Storage
         GBLC  &LCDSA                  DSA LOCTR - For Dynamic Storage
         GBLC  &LCDSB                  DSA LOCTR - For Middle 1 DSA
         GBLC  &LCDSC                  DSA LOCTR - For Middle 2 DSA
         GBLC  &LCDSD                  DSA LOCTR - For Middle 3 DSA
         GBLC  &LCDSE                  DSA LOCTR - For End of DSA
.*
         GBLC  &DSATB                  ATB DSECT - Above-The-Bar Storag
         GBLC  &LCATA                  ATB LOCTR - For Dynamic Storage
         GBLC  &LCATB                  ATB LOCTR - For Middle 1 ATB
         GBLC  &LCATC                  ATB LOCTR - For Middle 2 ATB
         GBLC  &LCATD                  ATB LOCTR - For Middle 3 ATB
         GBLC  &LCATE                  ATB LOCTR - For End of ATB
.*
         GBLA  &PAMODE                 PGMNTRY Amode Value 24/31/64
         GBLC  &PPRINT                 PGMNTRY PRINT= Value GEN/NOGEN
         GBLB  &PMAIN                  PGMNTRY 1 if TYPE=MAIN Program
         GBLB  &PTRACE                 PGMNTRY 1 if TRACE=YES Specified
.*
         GBLC  &XTRC                   Suppress Tracing Specified
         GBLC  &XOPN                   OPEN Has Been Done
.*
         GBLA  &SUBH                   Total Subroutines Defined
         GBLC  &SUBN(200)              Subroutine Names
         GBLA  &SUBC(200)              Count of Regs on SAVE=
         GBLC  &SUBS(200)              VALUE on SAVE= From SUBNTRY
         GBLC  &SUBA(200)              YES/NO &SYSAM64 Value
         GBLC  &SUBM(200)              ASCENV Mode P/AR
.*
         GBLC  &CASECT                 Current CSECT Name
         GBLC  &DASECT                 Current TRPCSECT Name
         GBLC  &SSP                    SP= Value for Getmain/Freemain
         GBLC  &SKY                    KEY= Value for Getmain/Freemain
.*
         GBLC  &MACS                   Have Macros Been included? - Y
.*
         GBLB  &PESTAE                 On - ESTAE=YES Specified
./ ADD NAME=PGMNTRY  0100-10050-10050-1200-00730-00730-00000-RHDMAC
         MACRO
&LBL     PGMNTRY &IMP=SVC,             Implimentation: BASR/SVC/TRAP2  *
               &BASE=,                 Program Base Registers          *
               &CBAS=,                 Constant Base Registers         *
               &DBAS=,                 Dynamic Storage Base Registers  *
               &ABAS=,                 Above-The-Bar Base Register     *
               &DSANAM=,               Short Name for DSA-If Desired   *
               &TYPE=SUBR,             Type of Entry MAIN/SUBR         *
               &LEN=4,                 Length for DSA Getmain          *
               &AMODE=31,              Default Amode 31/64             *
               &RMODE=ANY,             Default Rmode                   *
               &ESTAE=NO,              Y0S/NO - Activates DSARETRY     *
               &DREG=YES,              Generate ASMDREG                *
               &BRC=YES,               Generate IEABRC                 *
               &OPSYN20=NO,            Generate 20-Bit OPSYNs          *
               &KILLBDD=NO,            YES/NO - Kill BDDD Instructions *
               &PARM=,                 Input Parameters to Print       *
               ,                   -*- Key/Subpool for DSA/ATB Getmain *
               &KEY=8,                 Storage Key                     *
               &SP=0,                  Subpool                         *
               ,                   -*- SYSSTATE Macro Parameters       *
               &ASCENV=P,              P/AR   - Access Register Mode   *
               &ARCHLVL=2,             0/1/2  - Zos Macro Level=2      *
               ,                                                       *
               &TRACE=YES,             Allow Program Traces            *
               &BUFFDAT=NO,            YES/NO to Buffer Trace Data     *
               &BUFFMAX=1000,          Number of Lines to Buffer       *
               &MSG=,                  Message to Print                *
               &REGS=ALL,              Registers to Print              *
               &DATA=,                 Data to Print                   *
               &TRCDD=TRCPRINT,        Trace DDNAME                    *
               &TRCPGM=RDHTRACG,       Trace Program Name - IMP=BASR   *
               ,                                                       *
               &PRINT=NOGEN            PRINT MODE GEN/NOGEN
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** PGMNTRY - Establish a New CSECT Within a Source Module            *
.*                                                                    *
.*    This macro is the foundation for the entire program management  *
.*  system.  Everything begins here.  It does several things.  It     *
.*  establishes the basic structure of the CSECT, the various LOCTR's *
.*  to be used by other macros in the system. It does the basic stuff *
.*  like setting up addressability, a patch area, and the MVS save    *
.*  area.  But it also determines whether tracing is in effect and    *
.*  initializes the trace facility if the are.                        *
.*                                                                    *
.** The Input Parameters Are:                                         *
.*                                                                    *
.*    BASE=   - Specified as a sublist the base registers to be       *
.*              used for this CSECT. The default value is R12,R11.    *
.*    CBAS=   - Specified as a sublist the base registers to be       *
.*              used for this CSECTs Constant Area.                   *
.*    DBAS=   - Specified as a sublist the base registers to be       *
.*              used for this CSECTs Dynamic Storage Area. This       *
.*              would be in addition to R13 whcich is always the      *
.*              primary DSA base register.                            *
.*    ABAS=   - Specified as a sublist the base registers to be       *
.*              used for this CSECTs Above-The-Line Storage Area.     *
.*                                                                    *
.*    DSANAM= - The generated primary DSECT name for DSA for a given  *
.*              CSECT in the assembly will always be the CSECT name   *
.*              with an '_DSA' appended.  This is necessary to assure *
.*              a unique DSA DSECT name for all invokations of the    *
.*              PGMNTRY Macro.  However, this causes a problem when   *
.*              one wishes to use hard coded DSA offsets as in        *
.*              DSAWORKD-DSA(R3).  It means that one would have to    *
.*              code: DSAWORKD-CSECTNAM_DSA(R3) which is a little     *
.*              verbose.  So, I added this parameter so I could       *
.*              provide a short name that will become the name of     *
.*              the DSA DSECT for a given invokation of PGMNTRY.      *
.*              It must be unique for a given CSECT within a single   *
.*              assembly.  We suggest: DSA, DSB, DSC, DSD, etc.       *
.*                                                                    *
.*    TYPE=   - SUBR/MAIN.  The difference here is that TYPE=MAIN     *
.*              Will allways do a STORAGE OBTAIN to acquire it's      *
.*              own DSA Upstack seperate from the caller.  The        *
.*              TYPE=SUBR will use the Upstack of the caller for      *
.*              his DSA if there is sufficient room available.  If    *
.*              there is not sufficient room available the macro      *
.*              will obtain a seperate 4K Upstack DSA to use.         *
.*    LEN=    - Specified as a decimal number that represents the     *
.*              length of the DSA Upstack to OBTAIN.  The default     *
.*              is 4K, and it should be specified as a decimal        *
.*              number in a multple of 4K. LEN=4 means 4K.            *
.*    AMODE=  - This value specifies the addressing mode for the      *
.*              program.  It may be specified as 24, 31, or 64.  The  *
.*              default value is 31.                                  *
.*    RMODE=  - This parameter specifies the residency mode for the   *
.*              program.  This can be 24, 31, or ANY.  The default    *
.*              value is ANY.                                         *
.*    PRINT=  - This parameter determines whether the source code     *
.*              generated by these program management macros will     *
.*              be generated in the listing. The default is NOGEN.    *
.*              It is provided for debugging purposes.  If PRINT=GEN  *
.*              is specified the macros will expand during assembly.  *
.*                                                                    *
.*    TRACE=  - This parameter indicates whether or not tracing       *
.*              should be active for this program.  The default       *
.*              value is YES but may be specified as NO to disable    *
.*              all tracing for this CSECT.                           *
.*    MSG=      Specifies a message to be printed allowinf for        *
.*              embedded variables in a sublisted string.  Variable   *
.*              data will be printed according to the type of         *
.*              variable.  Types C and Z are printes in character     *
.*              format.  Types F, H and P are printed in decimal      *
.*              format.  Everything else is printed in hex format.    *
.*               MSG='This is a message'                              *
.*               MSG=('The ',COLOR,' HARE ' is ',HEIGHT,' ft. tall.'  *
.*               MSG=('Show savearea at: ',DSASAVEA)                  *
.*    DATA=   - Specifies an area in storage that is to be displayed  *
.*              in hex dump format. An optional title may be specified*
.*              to identify the area being displayed.  The areas to be*
.*              displayed must be specified as a sublist within a     *
.*              sublist.                                              *
.*               DATA=('My DSA Area',0(R13),DSALNGTH)                 *
.*               DATA=(('Previous SA in Chain',0(R6),SALNGTH),        *
.*                     ('Next SA in Chain,',0(R5),(R2))               *
.*    PARM=   - Not Currently Supported                               *
.*                                                                    *
.*   BUFFDAT= - YES/NO. Specifying YES indicates that trace data be   *
.*              bufferred and written to sysout only at termination.  *
.*   BUFFMAX= - Number < 64000. The number of print lines to be       *
.*              maintained in the buffer above-the-line in a wrap     *
.*              around table for storage of trace output.             *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS                Copy Global Variables
.*
         LCLC  &PGMBGN                 Program Labels
         LCLC  &PGM000,&PGM010,&PGM020 (Same)
         LCLC  &PGM030,&PGM040,&PGM050 (Same)
         LCLC  &PGM060,&PGM070,&PGM999 (Same)
         LCLC  &DSALEN,&OVCHK,&ENDCT
         LCLC  &ATBLEN,&ATBOV,&ATBND
         LCLC  &SAM,&ASCE              AMODE and ASCENV
.*
         LCLC  &D                      DSA Prefix
         LCLA  &L                      DSA Length for Getmain
.*
         LCLC  &ATB                    ATB Address
         LCLA  &ATBL                   ATB Length for Getmain
.*
.** Save Current RSECT Name and Generate TRACE Constant LOCTR Name
.*
&CASECT  SETC  '&LBL'                   Set Current RSECT Name
         AIF   (K'&CASECT LT 6).BILD010 Build LOCTR Name for Traces
&N       SETA  K'&CASECT+3-8+1          (Same)
&C       SETC '&CASECT'(&N,9-&N)        (Same)
.BILD010 ANOP                           (Same)
&DASECT  SETC  '@#$'.'&C'               Set Trace Constant LOCTR Name
.*
         COPY  PGMGBINI                Initialize Glogal Variables
.*
.** Initialize Global Variables
.*
         AIF   ('&DSANAM' EQ '').NODNM DSANAM= Not Provided
&DSDSA   SETC  '&DSANAM'               Use Invoker's DSA Name
.NODNM   ANOP
.*
&D       SETC  '&LCDSA'                Set DSA Prefix-Small Footprint
&DSALEN  SETC  '&LCDSA'.'L'            Set Label Small Footprint
&OVCHK   SETC  '&LCDSA'.'_OVCHK'       Set Label for Overlay Check
&ENDCT   SETC  '&LCDSA'.'_ENDCT'       Set Label Ending Eye Catcher
.*
&ATB     SETC  '&LCATB'                Set DSA Prefix-Small Footprint
&ATBLEN  SETC  '&LCATB'.'L'            Set Label Small Footprint
&ATBOV   SETC  '&LCATB'.'_OVCHK'       Set Label for Overlay Check
&ATBND   SETC  '&LCATB'.'_ENDCT'       Set Label Ending Eye Catcher
.*
&PMAIN   SETB  ('&TYPE' EQ 'MAIN')     Remember TYPE=MAIN Programs
&PAMODE  SETA  &AMODE                  Save AMODE Value
&PPRINT  SETC  '&PRINT'                Save PRINT Value
.*
&L       SETA  &LEN*1024
&DSAL    SETA  &L                      Save for PGMEXIT Macro
&SUBH    SETA  1                       Initialize Subr Count
.*
.** Generate Lables Needed for PGMNTRY
.*
&PGMBGN  SETC  'PBG'.'&SYSNDX'         Start of CSECT
&PGM000  SETC  'P00'.'&SYSNDX'         Build Required Labels
&PGM010  SETC  'P10'.'&SYSNDX'         (Same)
&PGM020  SETC  'P20'.'&SYSNDX'         (Same)
&PGM030  SETC  'P30'.'&SYSNDX'         (Same)
&PGM040  SETC  'P40'.'&SYSNDX'         (Same)
&PGM050  SETC  'P50'.'&SYSNDX'         (Same)
&PGM060  SETC  'P60'.'&SYSNDX'         (Same)
&PGM999  SETC  'P99'.'&SYSNDX'         (Same)
.*
.** Generate RSECT Prior to PRINT So 1st Instruction Shows EP on NOGEN
.*
&LBL     RSECT ,
&PGMBGN  J     &PGM010                  Branch Around EyeCatcher
.*
.** Generate Copybooks ASMMSP, IEABRC, ASMDREG,
.**      and DSADSECT if First Time Entry
.*
         PRINT OFF
         AIF   ('&MACS' EQ 'Y').NOMAC  Have macros Been Included?
.*
         COPY  ASMMSP                  Structured Programming Macs
         COPY  #MAC64                  64-Bit Support Macros
         DSADSECT                      Bring in DSA Prefix
         ATBDSECT                      Bring in ATB Prefix
.*
         AIF   ('&OPSYN20' NE 'YES').NOOPS OPSYNs Wanted?
         COPY  #OPSYN20                Include 20-Bit OPSYNs
.NOOPS   ANOP
.*
&MACS    SETC  'Y'
         AIF   ('&BRC' NE 'YES').NOBRC Generate IEABRC?
         COPY  IEABRC                  Branch Relative Instrs
.NOBRC   ANOP
.*
         AIF   ('&DREG' NE 'YES').NODREG Generate ASMDREG?
         ASMDREG ,                     Define Register Equates
.NODREG  ANOP
.*
.NOMAC   ANOP                          Include Macros Only Once
         PRINT ON,&PRINT
.*
.*--------------------------------------------------------------------*
.** Setup Basic RSECT and LOCTR Structure                             *
.*--------------------------------------------------------------------*
.*
&LBL     RSECT ,
&LBL     AMODE &AMODE                   Establish AMODE
&LBL     RMODE &RMODE                   Establish RMODE
*
** Define LOCTRs for This Program
*
&LCSCT         LOCTR ,                  SCT LOCTR - Main CSECT
&LCSC1         LOCTR ,                  SCT LOCTR - Middle 1 CSECT
&LCSC2         LOCTR ,                  SCT LOCTR - Middle 2 CSECT
&LCSPG         LOCTR ,                  SPG LOCTR - SUB Programs
*
** Define LOCTRs for Constant Area
*
&LCCON         LOCTR ,                  CON LOCTR - For Constants
&LCCN1         LOCTR ,                  CON LOCTR 1 For Constants
&LCCN2         LOCTR ,                  CON LOCTR 2 For Constants
&LCTRC         LOCTR ,                  TRC LOCTR - For Trace Data
*
** Define LOCTRs for DSA, Dynamic Storage Area
*
&DSDSA         DSECT ,                  Setup Primary DSA LOCTR
         DS    XL(DSAPFXLN)             Reserve Space for DSA Prefix
&LCDSA         LOCTR ,                  Setup Primary DSA LOCTR
&LCDSB         LOCTR ,                  Setup Middle1 DSA LOCTR
&LCDSC         LOCTR ,                  Setup Middle2 DSA LOCTR
&LCDSD         LOCTR ,                  Setup Middle3 DSA LOCTR
&LCDSE         LOCTR ,                  Setup Ending  DSA LOCTR
*
** Define LOCTRs for ATB, Above-The-Bar Storage Area
*
&DSATB         DSECT ,                  Setup Primary ATB LOCTR
         DS    XL(ATBPFXLN)             Reserve Space for ATB Prefix
&LCATA         LOCTR ,                  Setup Primary ATB LOCTR
&LCATB         LOCTR ,                  Setup Middle1 ATB LOCTR
&LCATC         LOCTR ,                  Setup Middle2 ATB LOCTR
&LCATD         LOCTR ,                  Setup Middle3 ATB LOCTR
&LCATE         LOCTR ,                  Setup Ending  ATB LOCTR
.*
.*--------------------------------------------------------------------*
.** Setup Base Registers - if Requested                               *
.*--------------------------------------------------------------------*
.*
&LCSCT   LOCTR ,                        Reset LOCTR For This CSECT
         USING &PGMBGN,R15              Temp Addressability
         DC    YL1(&PGM000-*-2)     @+4 Length of EyeCatcher
         DC    CL8'&LBL'                Place CSECT Name
         DC    CL64' Assembled on, &SYSDATE, &SYSTIME '
&PGM000  DS    0H
         #CPYRGT                        Generate Copyright Notice
.*
.** BAKR, Fudge R15 for 64-Bit Callers & Zero Registers Except (0,1)
.*
&PGM010  DS    0H
         AIF   ('&AMODE' NE '64').A000  Note: Initiator Calls 64-Bit
.*       AIF   ('&TYPE' NE 'MAIN').A000 Programs With Bad Value in R15
         BSM   R14,0
         LARL  R15,&PGMBGN              Get Initial Base - 64-Bit Req
.A000    ANOP
         BAKR  R14,0                    Save Caller's Registers
         EPSW  R2,R3                    Get True PSW for 64-Bit Callers
         MSTA  R2                       Save in Stack
         SAM31 ,                        Run PGMNTRY in 31-Bit Always
         SAC   000                      Run PGMNTRY in Primary Mode
.*
         LA    R15,0(,R15)              Strip 31-Bit Addr Mode Bit
         NILL  R15,X'FFFE'              Strip 64-Bit Addr Mode Bit
         LMH   R2,R15,=14A(0)           Zero High Words of GPRs
         LAMY  AR2,AR15,=14A(0)         Set Primary ASID for All
         DROP  R15                      Drop Temp Addressability
.*
.** Build Program Base Registers
.*
         AIF   ('&BASE' EQ '').A030
&LBL     PGMBASE REGS=&BASE,BASE=0(,R15)
.A030    ANOP
.*
.** Setup Constant Base Registers if Requested
.*
         AIF   ('&CBAS' EQ '').A040
         USING &PGMBGN,R15              Temp Addressability
         LAY   R15,&LCCON               Get First Base Address
         DROP  R15                      Drop Temp Addressability
&LCCON   PGMBASE REGS=&CBAS,BASE=0(,R15)
.A040    ANOP
.*
.*--------------------------------------------------------------------*
.** Obtain and Establish Addressability to Upstack DSA                *
.*--------------------------------------------------------------------*
.*
.** Determine Key and Subpool to Use
.*
&SSP     SETC  '&SP'                    Defautl: 0
&SKY     SETC  '&KEY'                   Default: 8
.*
         AIF   ('&IMP' EQ 'SVC').D010   IMP=BASR/TRAP2 Must be MODE=SUP
*        MODESET MODE=SUP,KEY=ZERO      Supervisor State for IMP=BASR
         MODESET MODE=SUP,KEY=ZERO      Must be in Supervisor State
         AIF   ('&SP' NE '0').D010      -> If User Specified
&SSP     SETC  '240'                    Set Subpool to Use For APF Pgms
&SKY     SETC  '0'                      Set Default Key for APF Pgms
.D010    ANOP
.*
         USING &DSDSA,R13               Setup DSA Addressability
         USING DSA,&DSDSA               (Same)
C        USING DSA,R2                   Our Temp Addressabilty
*
.*
.** Obtain DSA Storage
.*
         AIF   ('&TYPE' EQ 'MAIN').D070
         CLC   =CL3'DSA',0(R13)         Is it Our Format?
         JNE   &PGM020                  No  ->
         CLC   =A(&DSALEN),DSARESID     Is There Enough Residule?
         JH    &PGM020                  No  ->
         J     &PGM030                  Yes ->
*
.D070    ANOP
*        SYSSTATE AMODE64=&SAM,ASCENV=&ASCE
&SYSALVL SETA  2
&PGM020  DS    0H - R2=Ours R13=His
*        STORAGE OBTAIN,                Obtain Storage for DSA
*              LENGTH=&L,               (Same)
*              SP=&SP,                  (Same)
*              SP=&KEY,                 (Same)
*              CALLRKY=YES,             (Same)
*              LOC=(24,31),BNDRY=PAGE   (Same)
         LLGT  R0,=A(&L)                Get length to Obtain
         STORAGE OBTAIN,                Obtain Storage for DSA         *
               SP=&SSP,                 (Same)                         *
               KEY=&SKY,                (Same)                         *
               LENGTH=(0),              (Same)                         *
               LOC=24                   (Same)
*
         LGR   R2,R1                    Save DSA Address
         LGR   R3,R1
         LGR   R0,R1                    Assure Zero Filled DSA
         LLGT  R1,=A(&L)                (Same)
         XR    R14,R14                  (Same)
         XR    R15,R15                  (Same)
         MVCL  R0,R14                   (Same)
*
         OI    C.DSAFLAG1,DSAOWNER      Indicate We own it
         MVCY  C.DSALENTH,=A(&L)        Save Length for Freemain
         LLGT  R1,=A(&L)                Get Residual Length
         SHY   R1,=Y(&DSALEN)           (Same)
         ST    R1,C.DSARESID            Save in Our DSA
         J     &PGM040
.*
         AIF   ('&TYPE' EQ 'MAIN').B090
*
** Use Caller's DSA - R2=Ours R13=His
*
&PGM030  DS    0H
         LA    R2,0(,R13)               Get Callers DSA Address
         A     R2,DSALNGTH              ..Plus His Length is Ours
         LR    R0,R2                    Set to Zero Fill Our DSA
         L     R1,=A(&DSALEN)           (Same)
         XR    R14,R14                  (Same)
         XR    R15,R15                  (Same)
         MVCL  R0,R14                   Zero Fill Area
         L     R1,DSARESID              Get Callers Residual
         S     R1,=A(&DSALEN)           ..Minus Our Length
         ST    R1,C.DSARESID            Save Our Residual in Our DSA
*
         MVC   C.DSAATBAD,DSAATBAD      Copy ATB Data Forward - If Any
         MVC   C.DSAATBSZ,DSAATBSZ      (Same)
         MVC   C.DSAATBRS,DSAATBRS      (Same)
.B090    ANOP
*
** Iniitialize DSA R13=His R2=Ours
*
&PGM040  DS    0H
         ST    R13,4(,R2)               Connect Save Areas
         ST    R2,8(,R13)               (Same)
         LR    R13,R2                   Get Our DSA Addressability
         L     R2,4(,R13)               Use R2 For Caller Now
.*
.*--------------------------------------------------------------------*
.** Generate Additional Bases for DSA if Reqested                     *
.*--------------------------------------------------------------------*
.*
.** Setup Any Additional DSA Base Registers
.*
DSAD     PGMBASE REGS=&DBAS,BASE=4096(R13)
.*
.** Fill In DSA Prefix & Suffix Data
.*
         MVCY  DSAEYECT,=CL4'DSA'       Set DSA EyeCatcher
         MVCY  DSADSAID,=CL8'&CASECT'   Set CSECT Name of Owner
         MVCY  DSASVBCK,=CL4'F1SA'      Indicate BAKR Entry
         MVCY  &ENDCT,=CL4'DSAE'        Set DSA Ending EyeCatcher
         LAY   R14,&OVCHK               Set up Overlay Check
         STY   R14,&OVCHK               (Same)
         MVCY  DSALNGTH,=A(&DSALEN)     Set Length of Our DSA
         AIF   ('&TYPE' EQ 'MAIN').D106
         MVC   DSAPROPA(DSAPROPL),C.DSAPROPA
.D106    ANOP
         DROP  C                        Drop Callers Savearea
.*
.*--------------------------------------------------------------------*
.** Fillin Support for Traces in DSA                                  *
.*--------------------------------------------------------------------*
.*
         MVCY  DSATRAPS,=4X'0700'       Assume No Traps at Present
.*
         AIF   ('&TRACE' NE 'YES').T999 Determine Type of Traces
&PTRACE  SETB  1                        Indicate TRACE=YES Specified
         AIF   ('&IMP' EQ 'TRAP2').T300 Determine TRAP Type
         AIF   ('&IMP' EQ 'SVC').T200   (Same)
         AIF   ('&IMP' EQ 'BASR').T100  (Same)
         AGO   .MNOTE4
.*
.T100    ANOP                           Process if IMP=BASR Traces
         MVCY  DSATRAPS,=4X'0CEF'       Set Target EX as: BASSM 14,15
         MVCY  DSATRCEP,=V(&TRCPGM.)    Set Entry Point to Trace Pgm
         OI    DSATRCEP,X'80'           Set Mode Bit for BASSM
         AGO   .T999
.*
.T200    ANOP                           Process if IMP=SVC Traces
         XGR R14,R14                    Zero Work Register
         L   R14,16                     Get CVT Address
         L   R14,200(,R14)              Get Address of SCVT
*
         L   R14,132(,R14)              Get Address of SVCTABLE
         AHI R14,255*8                  Point at SVC 255
         LA  R15,255                    Loop All SVC Table Entries
*
         DO FROM=(R15)                  Loop Through SVC Table
            L  R1,0(,R14)               Get SVC Entry Point
            NILH R1,X'7FFF'             Strip High Bit For 64-Bit Amode
            CLCY =C'RDHTRSVC',4(R1),SAVE=YES
            DOEXIT (EQ)                 Found Our SVC?
            AHI R14,-8                  Bump to Prev SVCTABLE Entry
         ENDDO ,                        -> Loop
*
         CLCY =C'RDHTRSVC',4(R1),SAVE=YES
         IF (EQ)                        Found Our SVC??
            STC R15,DSASVCNO            Save SVC Number
            MVCY DSATRAPS,=4X'0A00',SAVE=YES Set Target of EX as: SVC #
            STC R15,DSATRPGM+1          Set SVC Number to Use
            STC R15,DSATRSUB+1          (Same)
            STC R15,DSATRTRC+1          (Same)
            STC R15,DSATRSPM+1          (Same)
         ELSE ,
            DC H'0'
            DC C'RDHTRSVC SVC is not Installed.'
         ENDIF ,
         AGO   .T999
.*
.T300    ANOP                           Process if IMP=TRAP2 Traces
         L     R14,16                   Get CVT Address
         L     R14,200(,R14)            Get Address of SCVT
*
         L   R14,132(,R14)              Get Address of SVCTABLE
         AHI R14,255*8                  Point at SVC 255
         LA  R15,255                    Loop All SVC Table Entries
*
         DO FROM=(R15)                  Loop Through SVC Table
            L  R1,0(,R14)               Get SVC Entry Point
            NILH R1,X'7FFF'             Strip High Bit For 64-Bit Amode
            CLCY =C'RDHTRSVC',4(R1),SAVE=YES
            DOEXIT (EQ)                 Found Our SVC?
            AHI R14,-8                  Bump to Prev SVCTABLE Entry
         ENDDO ,                        -> Loop
*
         CLCY =C'RDHTRSVC',4(R1),SAVE=YES
         IF (EQ)                        Found Our SCV?
            STC R15,DSASVCNO            Save SVC Number
            MVCY DSAWORKF,=X'0A000000',SAVE=YES  Target of EX as: SVC #
            STC R15,DSAWORKF+1          Set SVC Number to Use
            L R1,=CL4'TRAP'             Request DUCT Installation
            EX 0,DSAWORKF               Issue Our SVC
         ELSE ,
            DC H'0'
            DC C'RDHTRSVC SVC is not Installed.'
         ENDIF ,
.*
         MVCY  DSATRAPS,=4X'01FF'       Set Target of EX as: TRAP2
         AGO   .T999

.T999    ANOP
.*
.*--------------------------------------------------------------------*
.** Set AMODE and ASCENV                                              *
.*--------------------------------------------------------------------*
.*
.MOD010  ANOP
&SAM     SETC  'NO'
         AIF  ('&AMODE' EQ '').MOD100
         AIF  ('&AMODE' NE '64').MOD100
&SAM     SETC  'YES'
         SAM64 ,                        Change State
.*
&ASCE    SETC  'P'
.MOD100  ANOP
         AIF  ('&ASCENV' EQ '').MOD120
         AIF  ('&ASCENV' NE 'AR').MOD120
&ASCE    SETC  'AR'
         SAC   512                      Change Current State
.MOD120  ANOP
         SYSSTATE AMODE64=&SAM,ASCENV=&ASCE
.*
.*--------------------------------------------------------------------*
.** Generate Stacking ATB if MAIN and AMODE(64)                       *
.*--------------------------------------------------------------------*
.*
.F000    ANOP
         AIF   ('&AMODE' NE '64').F999
         ST    R13,DSAATBUT+4          Set DSA Address as User Token
         AIF   ('&IMP' EQ 'SVC').F010  IMP=BASR/TRAP2 Must be MODE=SUP
         OI    DSAATBUT+3,X'FE'        Non-Zero for SUPR Pgms
.F010    ANOP
.*
         IF (CLC,DSAATBRS,LT,=AD(&ATBLEN)) Get it if We Need it?
            MVCY DSAATBPC,=AD(1)       Save Page Count for Freemain
            LA  R2,DSAATBPC            Set Number of Segments (Meg)
.*
*           IARV64 REQUEST=GETSTOR,    Get Some ATB Storage            *
               SEGMENTS=(R2),          ..Number of Segments            *
               FPROT=NO,               ..Not Fetch Protected           *
               ORIGIN=DSAATBAD,        ..Return Address Here           *
               USERTKN=DSAATBUT,       ..Indicate User Token           *
               MF=(E,DSAV64)           ..Address of List Form
            IARV64 REQUEST=GETSTOR,    Get Some ATB Storage            *
               SEGMENTS=(R2),          ..Number of Segments            *
               FPROT=NO,               ..Not Fetch Protected           *
               ORIGIN=DSAATBAD,        ..Return Address Here           *
               USERTKN=DSAATBUT,       ..Indicate User Token           *
               MF=(E,DSAV64)           ..Address of List Form
            OI  DSAFLAG1,DSAATBOW      Indicate We Own it
            OI  DSAFLAG1,DSAATBUS      Indicate We Use it
*
            MVCY DSAATBSZ,=AD(&ATBLEN)  Set Size Used From ATBEND Macro
            LG  R2,DSAATBPC            Get Page Count
            MSG R2,=AD(1024*1024)      Get Bytes Available
            SG  R2,DSAATBSZ            Subtract What We Need
            STG R2,DSAATBRS            Save Residual
         ELSE ,
            OI  DSAFLAG1,DSAATBUS      Indicate We Use it
            LG  R2,DSAATBAD            Get Callers ATB Address
            XGR R1,R1                  Zero Work Register
            LG  R1,DSAATBSZ            Get Amount He Used
            AGR R2,R1                  Get Our ATB Address in Stack
            STG R2,DSAATBAD            Save Address in DSA
            MVCY DSAATBSZ,=AD(&ATBLEN)  Set Size Used From ATBEND Macro
            LG  R1,DSAATBRS            Get Callers Residual ATB
            SG  R1,DSAATBSZ            Minus What We Need
            STG R1,DSAATBRS            Set New Residual
         ENDIF ,
.*
.** Setup Base Addressability to &ABAS
.*
         LG R2,DSAATBAD                Load ATB Address
*DSATB   PGMBASE BASE=0(R2),REGS=&ABAS Load Base Regs & Usings
&DSATB   PGMBASE BASE=0(R2),REGS=&ABAS Load Base Regs & Usings
         USING ATB,&DSATB              ATB Prefix Addressability
.*
.** Fill in ATB Prefix and Suffix Data
.*
         MVCY ATBEYECT,=C'ATBDSECT'    Set Eye Catcher
         MVCY ATBCSECT,=CL8'&CASECT'   Set CSECT Name of Owner
         MVC  ATBSIZE,DSAATBSZ         Set Size of Area
         MVCY &ATBND,=CL4'ATBE'        Set DSA Ending EyeCatcher
         LAY  R14,&ATBOV               Set up Overlay Check
         STG  R14,&ATBOV               (Same)
.F999    ANOP
.*
.*--------------------------------------------------------------------*
.** Generate Traces if Requested                                      *
.*--------------------------------------------------------------------*
.*
         AIF   (NOT &PMAIN).G010
*                                  -*- ESTAE for Abend Diagnostics
         LA    R14,X'101'              Load identifier
         LAY   R15,=A(X'07FE0000')     Address of Abend Recovery RTN
*                                      ..Will Be Filled in in RDHTRACE
*        ESTAEX (R15),CT,              Exit Routine Address            *
               PARAM=(R14),            Parm Passed to RTN              *
               XCTL=NO,                XCTL Cancels ESTAE Exit         *
               PURGE=NONE,             Do Not Purge I/O on Abend       *
               ASYNCH=YES,             Allow ASYNC to Continue         *
               TERM=YES,               Enter Even on Cancel            *
               MF=(E,DSAPLIST)         Point at List Form
         ESTAEX (R15),CT,              Exit Routine Address            *
               PARAM=(R14),            Parm Passed to RTN              *
               XCTL=NO,                XCTL Cancels ESTAE Exit         *
               PURGE=NONE,             Do Not Purge I/O on Abend       *
               ASYNCH=YES,             Allow ASYNC to Continue         *
               TERM=YES,               Enter Even on Cancel            *
               MF=(E,DSAPLIST)         Point at List Form
*
.G010    ANOP
.*
&XTRC    SETC  'NO'                    Note Value in GBLC for PGMEXIT
         AIF   ('&TRACE' NE 'YES').G020
&XTRC    SETC  'YES'
*
*        #TRACE TYPE=PGME,             Indicate Program Entry Call     *
               BUFFDAT=&BUFFDAT,       Buffer Trace Data YES/NO        *
               BUFFMAX=&BUFFMAX,       Buffer Size in Lines            *
               MSG=&MSG,               Print Desired message           *
               REGS=&REGS,             Print Desired message           *
               DATA=&DATA,             Print Any Desired Data          *
               DD=&TRCDD,              DDNAME for Traces               *
               PARM=&PARM              Print Input Parameters
&PGM060  #TRACE TYPE=PGME,                                             *
               BUFFDAT=&BUFFDAT,                                       *
               BUFFMAX=&BUFFMAX,                                       *
               MSG=&MSG,                                               *
               REGS=&REGS,                                             *
               DATA=&DATA,                                             *
               DD=&TRCDD,                                              *
               PARM=&PARM
.*
.** Generate ESTAE Support if Requested
.*
.G020    ANOP
         AIF   ('&ESTAE' NE 'YES').G030
&PESTAE  SETB  1                       Tell PGMEXIT to Cancel ESTAE
         PGMESTAE ,                    Gen Support for DSARETRY
.*
.G030    ANOP
         EREGG R14,R3                  Restore Param Address From Stk
         LAMY  AR2,AR3,=14A(0)         Set Primary ASID for All
         LMH   R2,R3,=14A(0)           Zero High Words of GPRs
*
.*
.*--------------------------------------------------------------------*
.** KILBDD - Add Fluff to Data Areas to Disable BDDD Instruction Set  *
.*--------------------------------------------------------------------*
.*
.KIL000  ANOP
         J     &PGM999                  -> Done
         AIF   ('&KILLBDD' NE 'YES').KIL999
&LCDSA         LOCTR ,                  Setup Primary DSA LOCTR
         DS    XL4096                   Add Fluff Area
*
&LCATA         LOCTR ,                  Setup Primary ATB LOCTR
         DS    XL4096                   Add Fluff Area
*
&LCCON         LOCTR ,                  CON LOCTR - For Constants
         DS    XL4096                   Add Fluff Area
*
&LCSCT         LOCTR ,                  SCT LOCTR - Main CSECT
         DS    XL4096                   Add Fluff Area
*
.KIL999  ANOP
&PGM999  DS    0H
         AGO   .EXIT
.*
.*--------------------------------------------------------------------*
.** MNOTE Error Messages                                              *
.*--------------------------------------------------------------------*
.*
.MNOTE1  MNOTE 8,'PGMNTRY: More than four registers for BASE='
         AGO   .EXIT
.*
.MNOTE2  MNOTE 8,'PGMNTRY: More than four registers for CBAS='
         AGO   .EXIT
.*
.MNOTE3  MNOTE 8,'PGMNTRY: More than four registers for DBAS='
         AGO   .EXIT
.*
.MNOTE4  MNOTE 8,'PGMNTRY: IMP=value invalid. Must be BRANCH, SVC, or T*
               RAP2.'
         AGO   .EXIT
.*
.** Exit Macro
.*
.EXIT    ANOP
         MEXIT ,
         MEND

./ ADD NAME=RMEDSECT 0100-10050-10050-1200-00053-00053-00000-RHDMAC
         MACRO ,
&LBL     RMEDSECT ,
***********************************************************************
* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved         *
***********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
*                                                                     *
** RMEDSECT - DSECT Area for chain of Task Related RESMGR Exits       *
*                                                                     *
*                                                                     *
*    This DSECT area is pointed to by STCBRMEF in the STCB and is     *
*  a chain of task related RME control blocks representing the        *
*  resource manager exit routines in effect for the task.             *
*                                                                     *
*                                                                     *
* Date     Developer Cng# Comments                                    *
* ======== ========= ==== =========================================== *
* 00/00/00 R.Harper  M000 Macro Developed                             *
*                                                                     *
***********************************************************************
*
RMEDSECT DSECT ,                       RME DSECT AREA
RMEID    DS    CL4'RME'                RME Identifier
         DS    F                       ..Unknown
RMEBCKPT DS    A                       ..Prev RME on Chain or Zero
RMEFWDPT DS    A                       ..Next RME on Chain or Zero
         DS    F                       ..Unknown
RMERESID DS    CL8                     ..Name of RESMGR Exit
         DS    2F                      ..Unknown
RMEPARAM DS    2F                      ..Parameter passed to Exit
         DS    F                       ..Unknown
RMELNGTH EQU   *-RMEDSECT              Length of DSECT Area
         MEND ,
./ ADD NAME=SQUEEZE  0100-10050-10050-1200-00262-00262-00000-RHDMAC
         MACRO
&LBL     SQUEEZE &BEG=,             Beginning Address                  *
               &END=,               Last Address of Area               *
               &MF=E,               MF=E OR MF=L                       *
               &P=SQZ               Label Prefix to use for expansion
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*
.** SQEEZE - Remove multiple occurances of blanks fomm a string
.*           allowing only one blank between non-blank characters.
.*
.** Input Parameters
.*
.* BEG=     - Beginning Address
.* END=     - Ending    Address Plus 1
.* MF=      - MF=E/L
.* &P=      - Prefix to use for macro labels
.*
.*
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*
.**********************************************************************
.*
.** Define Variables
.*
         COPY PGMGBLAS              Get Program Globals
         GBLB &SQZTBLS              On - Tables Have Been Generated
.*
.** Validate Input
.*
         AIF   ('&MF' NE 'E' AND '&MF' NE 'L').MNOTE3
         AIF   ('&MF' EQ 'L').MFl
         AIF   ('&BEG' EQ '').MNOTE1
         AIF   ('&END' EQ '').MNOTE2
.*
.** Generate Code
.*
         STM   14,2,&P.$SAVE        Preserve Volital Registers
.*
.**      Get Starting and Ending Addresses
.*
         AIF   (T'&BEG EQ 'A').GEN010
         AIF   (T'&BEG EQ 'F').GEN010
         AIF   (T'&BEG NE 'V').GEN020
.GEN010  ANOP
         L     14,&BEG              Get Start Address
         AGO   .GEN035
.GEN020  ANOP
         AIF   ('&BEG(1)' EQ '&BEG').GEN030
         LR    14,&BEG(1)           Get Start Address
         AGO   .GEN035
.GEN030  ANOP
         LA    14,&BEG              Get Start Address
.*
.GEN035  ANOP
         AIF   (T'&END EQ 'A').GEN040
         AIF   (T'&END NE 'V').GEN050
.GEN040  ANOP
         L     15,&END              Get End Address
         AGO   .GEN070
.GEN050  ANOP
         AIF   ('&BEG(1)' EQ '&BEG').GEN060
         LR    15,&END(1)           Get End Address
         AGO   .GEN070
.GEN060  ANOP
         LA    15,&END              Get End Address
.GEN070  ANOP
         XC    &P.$DATA(&P.$DATL),&P.$DATA  Zero Data Area
         MVC   &P.$EYE,=C'SQZ$DATA'  Set Eys Catcher
         ST    14,&P.$BEG           Save Beg Address
         ST    14,&P.$CUR           Save Current Address
         ST    15,&P.$END           Save End Address
*
** Squeeze Blanks From an Area
*
&P.SQ010 DS    0H               -*- Main Loop
         L     14,&P.$CUR           Load Current Address
         L     15,&P.$END           Load Ending  Address
         SLR   15,14                Get Residual Length
         CH    15,=H'256'           More Than Max for TRT?
         BNH   &P.SQ020             No  ->
         LH    15,=H'256'           Set to Use Max for TRT
&P.SQ020 DS    0H
         LTR   15,15                Are We Done?
         BZ    &P.DONE              Yes ->
         BCTR  15,0                 Decrement for Assembler
*
         CLI   0(14),C' '           Are we Pointing at a Blank?
         BE    &P.SQ050             Yes ->
*
** Pointing at Non-blank
*
&P.SQ030 DS    0H               -*- Search for a Blank
         LARL  3,&P.TABLB           Get Address of Table
         EX    15,&P.EXTRB          Via Executed TRT
         BNZ   &P.SQ040             Yes -> Found
         LA    14,1(14,15)          Bump Current 256-Bytes
         ST    14,&P.$CUR           Save Position
         B     &P.SQ010             -> Loop
*
&P.SQ040 DS    0H               -*- Found a Blank or Quote
         CLM   2,B'0001',=C''''     Found Quote?
         BE    &P.SQ100             Yes -> Go Process Quote
         LA    1,0(,1)              Clear High bit/byte
         ST    1,&P.$CUR            Save New Current Position
         B     &P.SQ010             -> Loop
*
** Pointing at a Blank
*
&P.SQ050 DS    0H               -*- Must be at Least Two Blanks
         CLC   0(2,14),=CL2' '      Are there at least two?
         BE    &P.SQ060             Yes ->
         LA    14,1(,14)            Point at non-blank
         ST    14,&P.$CUR           And save as current
         B     &P.SQ010             ->
*
&P.SQ060 DS    0H               -*- Search for First Non-Blank
         LA    1,1(14,15)           Point Past Last Byte
         LARL  3,&P.TABLC           Get Address of Table
         EX    15,&P.EXTRC          Look for Non-Blank Char
         BNZ   &P.SQ070             Yes -> Found
*
         CH    15,=H'255'           Were We Doing Max?
         BL    &P.DONE              Yes -> Done
*
&P.SQ070 DS    0H               -*- Squeeze Out Blanks Via MVCL
         LR    0,1                  Set From Pointer
         L     1,&P.$END            Get End Pointer
         SR    1,0                  Get length to Move From
         ICM   1,B'1000',=C' '      Set Fill Character
         LA    14,1(,14)            Set To Pointer as $CUR+1
         ST    14,&P.$CUR           Set As New Current Pointer
         L     15,&P.$END           Get From Pointer
         SR    15,14                Get From Length
         BZ    &P.DONE              -> Done
         MVCL  14,0                 Squeeze Out Blanks
*
         CLM   2,B'0001',=C''''     Was Non-Blank a Quote?
         BE    &P.SQ100             Yes -> Go Process Quote
         B     &P.SQ010             -> Loop
*
** Within Quoted String - Entered When Quote Encountered
*
&P.SQ100 DS    0H                   R1 = Current
         L     14,&P.$CUR           Load Current Position -> Quote
         LA    14,1(,14)            Point Past Quote
*
&P.SQ110 DS    0H               -*- Search for Ending Quote
         L     15,&P.$END           Get Ending Address
         SLR   15,14                Get Residual Length
         CH    15,=H'256'           More than Max for TRT?
         BNH   &P.SQ120             Yes ->
         LH    15,=H'256'           Set to search Max
&P.SQ120 DS    0H
         BCTR  15,0                 Decrement for Assembler
         LARL  3,&P.TABLQ           Get Address of Table
         EX    15,&P.EXTRQ          Look for Ending Quote
         BNZ   &P.SQ130             Yes -> Found Ending Quote
         LA    14,1(14,15)          Bump Pointer
         B     &P.SQ110             -> Try Again
*
&P.SQ130 DS    0H               -*- Found Ending Quote
         LA    14,1(,1)             Point After Ending Quote
         ST    14,&P.$CUR           Save as Current Position
         B     &P.SQ010             -> Loop
*
&P.DONE  DS    0H
         LM    14,2,&P.$SAVE        Refresh Volital Registers
.*
.**      Generate Tables
.*
         AIF   (&SQZTBLS).NOTBLS    Do We Generate Tables?
&SQZTBLS SETB  1                    ..Don't Generate Twice
.*
.** Define Tables
.*
         B     &P.TABND             Branch Around Tables
*
** TRT Tables Generated for SQUEEZE Macro
*
&LCCN1         LOCTR ,              Generate in Constant Area
*
&P.EXTRB TRT   0(*-*,14),0(R3)      Look for Blanks
&P.EXTRC TRT   0(*-*,14),0(R3)      Look for Characters
&P.EXTRQ TRT   0(*-*,14),0(R3)      Look for Quote
*
         DS    0D
&P.TABLB DC    256X'00'         -*- Table to Scan For Blanks
         ORG   &P.TABLB+C' '        Point at porper Slot
         DC    C' '                 Find This Character - Space
         ORG   &P.TABLB+C''''       Point at porper Slot
         DC    C''''                Find This Character - Quote
         ORG   ,
*
         DS    0D
&P.TABLC DC    256X'01'         -*- Table to Scan For Non-Blanks
         ORG   &P.TABLC+C' '        Point at Proper Slot
         DC    X'00'                Skip This Character - Space
         ORG   ,
*
         DS    0D
&P.TABLQ DC    256X'00'         -*- Table to Scan Quotes
         ORG   &P.TABLQ+C''''       Point at Proper Slot
         DC    C''''                Find This Character - Quote
         ORG   ,
&LCSCT         LOCTR ,              Reset to Program LOCTR
&P.TABND DS    0H
.*
.NOTBLS  ANOP
         AGO   .MEXIT               -> Done

.*
.** Generate List Form for SQEEZE Macro
.*
.MFL     ANOP                       Generate List Form
&P.$DATA DS    0D                   Doubleword Alligned
&P.$EYE  DS    CL8                  Eye Catcher C'SQZDATA'
&P.$SAVE DS    6F                   Reg Save Area R14,R15,R0,R1,R2,R3
&P.$BEG  DS    A                    Beginning Address
&P.$CUR  DS    A                    Current Address
&P.$END  DS    A                    Ending Address
&P.$DATL EQU   *-&P.$DATA           Length of Area
         AGO   .MEXIT
*
** Define MNOTE Errors
*
.MNOTE1  MNOTE 8,'SQZ0001 BEG= parameter was not specified.'
         AGO   .MEXIT
.MNOTE2  MNOTE 8,'SQZ0002 END= parameter was not specified.'
         AGO   .MEXIT
.MNOTE3  MNOTE 8,'SQZ0003 MF= invalid, must be E or L.'
         AGO   .MEXIT
*
** Exit Macro
*
.MEXIT   ANOP
         MEND
./ ADD NAME=SUBEXIT  0100-10050-10050-1200-00117-00117-00000-RHDMAC
         MACRO ,
&LBL     SUBEXIT &MSG=,&REGS=,&DATA=,&PRINT=NOGEN
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** SUBEXIT -Exit Linkage for a Subroutine                            *
.*                                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS             Copy Globlas
.*
         LCLC &L                    Generated Label if Not Specified
         LCLC &S,&SAVE
         LCLC &AM,&AR               Amode and AR Values
.*
&S       SETC '&SUBN(&SUBH)'
&SAVE    SETC '&SUBS(&SUBH)'
&AM      SETC '&SUBA(&SUBH)'        Get AMODE Value
&AR      SETC '&SUBM(&SUBH)'        Get AR Value
.*                                   `
&L       SETC  '&S'.'X'
         AIF   ('&LBL' EQ '').SUB000
&LBL     DS    0H
.*
.** Restore SYSSTATE AMODE and ASCENV Status
.*
.SUB000  ANOP
         AIF   (('&AM' EQ '') AND ('&AR' EQ '')).SUB100
         AIF   ('&AR' EQ '').SUB020
         AIF   ('&AR' EQ 'AR').SUB010
         SAC   000                     Reset Back to Primary Mode
         AGO   .SUB020
.SUB010  ANOP
         SAC   512                     Reset Back to AR Mode
.*
.SUB020  ANOP
         AIF   ('&AM' EQ '').SUB040
         AIF   ('&AM' EQ 'NO').SUB030
         SAM64 ,                       Reset to AMODE=64
         AGO   .SUB040
.SUB030  ANOP
         SAM31 ,                       Reset to AMODE=31
.*
.SUB040  ANOP
*        SYSSTATE AMODE64=&AM,ASCENV=&AR Reset SYSSTATE Value
         SYSSTATE AMODE64=&AM,ASCENV=&AR
.*
.** Restore Any Saved Register from SAVE= on SUBNTRY Macro
.*
.SUB100  ANOP
         AIF   ('&SAVE' EQ '').SUB120
         AIF   (&SUBC(&SUBH) EQ 1).SUB110
         LMG   &SAVE,$&S+8             Load Saved Registers
         AGO   .SUB120
.SUB110  ANOP
         LG    &SAVE,$&S+8             Load Saved Register
.*
.** Restore Return Linkage
.*
.SUB120  ANOP
         LG    R14,$&S                 Load Return Address
.*
.** Generate SUBEXIT Trace Point
.*
         AIF   ('&XTRC' NE 'YES').SUB130
*        #TRACE TYPE=SUBX,             Indicate Program Exit Call      *
               MSG=&MSG,               Print PGMEXIT Message           *
               REGS=&REGS,             Print Desired Regs              *
               DATA=&DATA              Print Any Desired Data
&L       #TRACE TYPE=SUBX,                                             *
               MSG=&MSG,                                               *
               REGS=&REGS,                                             *
               DATA=&DATA,                                             *
               PRINT=&PRINT
.*
.** Return to Caller
.*
.SUB130  ANOP
         BR    R14                  -> Return
&SUBH    SETA  &SUBH+1
         AGO   .MEND
.*
.** ERROR MESSAGES
.*
.MNOTE1  ANOP
         MNOTE 8,'SUBEXIT: ..'
         AGO   .MEND
.*
.MEND    ANOP
         MEND ,
./ ADD NAME=SUBNTRY  0100-10050-10050-1200-00191-00191-00000-RHDMAC
         MACRO ,
&LBL     SUBNTRY &SAVE=,               Registers to Save On Entry      *
               &AMODE=,                31/64 to Specify AMODE          *
               &ASCENV=,               P/AR, Primary or AR Mode        *
               &MSG=,                  Tracing Parameters              *
               &REGS=,                 (Same)                          *
               &DATA=,                 (Same)                          *
               &PRINT=NOGEN
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** SUBNTRY - Entry Linkage for Subroutines                           *
.*                                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS                Copy Globals
.*
         LCLC  &S,&L,&R
         LCLC  &SAM,&ASCE
         LCLA  &I,&P,Q,&K
&L       SETC  '&LBL'.'E'
.*
&SAM     SETC  ''
&ASCE    SETC  ''
.*
.** Save Return Linkage
.*
         AIF   ('&LBL' EQ '').MNOTE01
&I       SETA  &SUBH
&SUBN(&I) SETC '&LBL'                  Save Name of Subroutine
&S       SETC  '&SUBN(&I)'
*
&SUBC(&I) SETA 0                       Initialize Count of Saved Regs
&SUBS(&I) SETC ''                      Pass This to SUBEXIT
&SUBA(&I) SETC ''                      Initialize State
&SUBM(&I) SETC ''                      (Same)
.*
&LBL     DS    0H
         STG   R14,$&S                 Save Return Address
.*
.*--------------------------------------------------------------------*
.** SAVE Additional Registers
.*--------------------------------------------------------------------*
.*
         AIF   ('&SAVE' EQ '').SAV999
         AIF   (N'&SAVE NE 2).MNOTE02
         AIF   ('&SAVE'(1,1) NE '(').MNOTE02
.*
         AIF   ('&SAVE(1)'(1,1) NE 'R').SAV010
&K       SETA  K'&SAVE(1)-1
&R       SETC  '&SAVE(1)'(2,&K)
&P       SETA  &R
         AGO   .SAV020
.SAV010  ANOP
&P       SETA  &SAVE(1)
.SAV020  ANOP
.*
         AIF   ('&SAVE(2)'(1,1) NE 'R').SAV030
&K       SETA  K'&SAVE(2)-1
&R       SETC  '&SAVE(2)'(2,&K)
&Q       SETA  &R
         AGO   .SAV040
.SAV030  ANOP
&Q       SETA  &SAVE(2)
.SAV040  ANOP
.*
&K       SETA  1
         AIF   (&P EQ &Q).SAV200       Save 1 Register
         AIF   (&P GT &Q).SAV100       Over R15
&K       SETA  &Q-&P+1                 Get Count of Regs
         AGO   .SAV110
.*
.SAV100  ANOP                          1st Reg Gt 2nd Reg
&K       SETA  16-&P                   Get Count of Regs
&K       SETA  &K+&Q+1                 (Same)
.SAV110  ANOP                          1st Reg Gt 2nd Reg
&SUBC(&I) SETA &K                      Count of Saved Regs For SUBEXIT
.*
         STMG  &SAVE(1),&SAVE(2),$&S+8 Save Volitale Registers
&SUBS(&I) SETC '&SAVE(1)'.',&SAVE(2)'  Pass This to SUBEXIT
         AGO   .SAV999
.*
.SAV200  ANOP
         STG   &SAVE(1),$&S+8          Save Volitale Rewgister
&SUBS(&I) SETC '&SAVE(1)'              Pass This to SUBEXIT
.*
.SAV999  ANOP
.*
.*--------------------------------------------------------------------*
.** Set AMODE and ASCENV                                              *
.*--------------------------------------------------------------------*
.*
         AIF  (('&AMODE' EQ '') AND ('&ASCENV' EQ '')).TRC000
.*
.MOD010  ANOP
         AIF  ('&AMODE' EQ '').MOD100
&SUBA(&I) SETC '&SYSAM64'               Save Current State
         AIF  ('&AMODE' EQ '31').MOD020
&SAM     SETC  'YES'
         SAM64 ,                        Change State
         AGO   .MOD100
.MOD020  ANOP
&SAM     SETC  'NO'
         SAM31 ,                        Change State
.*
.MOD100  ANOP
         AIF  ('&ASCENV' EQ '').MOD120
&SUBM(&I) SETC '&SYSASCE'               Save Current State
         AIF  ('&ASCENV' EQ 'AR').MOD110
&ASCE    SETC  'P'
         SAC   000                      Change Current State
         AGO  .MOD120
.MOD110  ANOP
&ASCE    SETC  'AR'
         SAC   512                      Change Current State
.*
.*--------------------------------------------------------------------*
.** Generate SYSTATE Macro
.*--------------------------------------------------------------------*
.*
.MOD120  ANOP
         AIF   (('&SAM' EQ '') OR ('&ASCE' EQ '')).MOD130
         SYSSTATE AMODE64=&SAM,ASCENV=&ASCE
         AGO   .MOD150
.MOD130  ANOP
         AIF   ('&ASCE' NE '').MOD140
         SYSSTATE AMODE64=&SAM
         AGO   .MOD150
.MOD140  ANOP
         SYSSTATE ASCENV=&ASCE
.MOD150  ANOP
.*
.*--------------------------------------------------------------------*
.** Generate Subroutine Trace Point
.*--------------------------------------------------------------------*
.*
.TRC000  ANOP
         AIF   ('&XTRC' NE 'YES').SUBX020
*        #TRACE TYPE=SUBE,              Indicate Program Exit Call     *
               MSG=&MSG,                Print PGMEXIT Message          *
               REGS=&REGS,              Print Desired Regs             *
               DATA=&DATA               Print Any Desired Data
&L       #TRACE TYPE=SUBE,                                             *
               MSG=&MSG,                                               *
               REGS=&REGS,                                             *
               DATA=&DATA,                                             *
               PRINT=&PRINT
.*
.SUBX020 ANOP
*
         AGO   .MEND
.*
.** ERROR MESSAGES
.*
.MNOTE01 ANOP
         MNOTE 8,'SUBNTRY: LABEL WAS NOT PROVIDED AND IS REQUIRED.'
         AGO   .MEND
.MNOTE02 ANOP
         MNOTE 8,'SUBNTRY: SAVE= Parameter is not a sublist (x,y).'
         AGO   .MEND
.*
.MEND    ANOP
         MEND  ,
./ ADD NAME=SVCEXIT  0100-10050-10050-1200-00150-00150-00000-RHDMAC
         MACRO
&NAME    SVCEXIT &RC=,&RS=,            Return Code                     *
               &R1=,                   Other Parameter Register        *
               &MSG=,                  Message to Print                *
               &REGS=ALL,              Registers to Print              *
               &DATA=                  Data to Print
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** SVCEXIT - Define Exit for an SVC                                  *
.*                                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 00/00/00 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
         COPY  PGMGBLAS
.*
.** Generate Label Field if Present
.*
         AIF   ('&NAME' EQ '').SVX005
&NAME    DS    0H
.*
.** Process Return Code
.*
.SVX005  ANOP
         AIF   (T'&RC EQ 'O').SVX030   If Parameter Omitted?
         AIF   ('&RC' NE '*').SVX010   If Value Not Asterisk?
         L     R15,RBSAVR15            Restore Original Value
         AGO   .SVX100                 ->
.SVX010  ANOP
         AIF   ('&RC' EQ '&RC(1)').SVX020 If not a Register Value?
         AIF   ('&RC' EQ '15' OR '&RC' EQ 'R15').SVX100
         LR    R15,&RC                 Use Value From Register
         AGO   .SVX100                 ->
.SVX020  ANOP
         LA    15,&RC                  Use Value From Parameter
         AGO   .SVX100                 ->
.SVX030  ANOP
         L     R15,DSA$RC              Use Default Value
.*
.** Process Reason Code
.*
.SVX100  ANOP
         AIF   (T'&RS EQ 'O').SVX130   If Parameter Omitted?
         AIF   ('&RS' NE '*').SVX110   If Value Not Asterisk?
         L     R0,RBSAVR0              Restore Original Value
         AGO   .SVX200                 ->
.SVX110  ANOP
         AIF   ('&RS' EQ '&RS(1)').SVX120 If not a Register Value?
         AIF   ('&RS' EQ '0' OR '&RS' EQ 'R0').SVX200
         LR    R0,&RS                  Use Value From Register
         AGO   .SVX200                 ->
.SVX120  ANOP
         LA    R0,&RS                  Use Value From Storage
         AGO   .SVX200                 ->
.SVX130  ANOP
         L     R0,DSA$RS               Use Default Value
.*
.** Process R1 Parameter Register
.*
.SVX200  ANOP
         AIF   (T'&R1 EQ 'O').SVX230   If Parameter Omitted?
         AIF   ('&R1' NE '*').SVX210   If Value Not Asterisk?
         L     R1,RBSAVR1              Restore Original Value
         AGO   .SVX250                 ->
.SVX210  ANOP
         AIF   ('&R1' EQ '&R1(1)').SVX220 If not a Register Value?
         AIF   ('&R1' EQ '1' OR '&R1' EQ 'R1').SVX250
         LR    R1,&R1                  Use Value From Register
         AGO   .SVX250                 ->
.SVX220  ANOP
         L     R1,&R1                  Use Value From Storage
         AGO   .SVX250                 ->
.SVX230  ANOP
         XR    R1,R1                   Zero Register On Return
.*
.** Generate Traces if Desired
.*
.SVX250  ANOP
         AIF   ('&XTRC' NE 'YES').SVX300
*        #TRACE TYPE=PGMX,              Indicate Program Exit Call     *
               MSG=&MSG,                Print SVCEXIT Message          *
               REGS=&REGS,              Print Desired Regs             *
               DATA=&DATA               Print Any Desired Data
         #TRACE TYPE=PGMX,                                             *
               MSG=&MSG,                                               *
               REGS=&REGS,                                             *
               DATA=&DATA
.*
.** Freemain Dynamic Storage
.*
.SVX300  ANOP
         L     14,RBSAVR14             Restore Return Address
         STM   14,1,RBSAVR14           Save Return Codes
*        SETLOCK OBTAIN,TYPE=LOCAL,    Obtain Local Lock for Branch
*              MODE=UNCOND,REGS=USE    ..Entry Freemain
         SETLOCK OBTAIN,TYPE=LOCAL,    Obtain Local Lock for Branch    *
               MODE=UNCOND,REGS=USE    ..Entry Freemain
*
         LR    R1,R13                  Get Address of Area to Free
         L     R0,DSALENTH             Get length of Area
*
         L     R4,RBSAVR4              Reload TCB Address
         L     R7,RBSAVR7              Reload ASCB Address
*        FREEMAIN RU,LV=(0),A=(1),     Free Dynamic Storage
*              SP=230,                 (Same)
*              BRANCH=YES              (Same)
         FREEMAIN RU,LV=(0),A=(1),     Free Dynamic Storage            *
               SP=230,                 (Same)                          *
               BRANCH=YES              (Same)
*
*        SETLOCK RELEASE,TYPE=LOCAL,  Free Local Lock
*              REGS=USE                (Same)
         SETLOCK RELEASE,TYPE=LOCAL,  Free Local Lock                  *
               REGS=USE                (Same)
.*
.** Return to Caller
.*
         SPKA 0                        Set Key of Zero
         LM    R14,R1,RBSAVR14         Restore Return Address and Codes
         BR    R14                     -> Exit SVC
.*
.MEND    ANOP
         MEND
./ ADD NAME=SVCNTRY  0100-10050-10050-1200-00587-00587-00000-RHDMAC
         MACRO
&LBL     SVCNTRY &SVCNO=,              SVC Number for Protocol         *
               &SVTYP=4,               Type of SVC                     *
               &TYPE=USER,             USER SVC or HOOK                *
               &BASE=(R6),             Program Base Registers          *
               &CBAS=,                 Constant Base Registers         *
               &DBAS=,                 Extra DSA Bases After R13       *
               &LEN=4,                 Number of K for DSA             *
               &AMODE=31,              Program AMODE                   *
               &RMODE=ANY,             Program RMODE                   *
               &TRACE=YES,             Allow Program Traces            *
               &IMP=BASR,              #TRACE Implementation           *
               &BUFFDAT=NO,            YES/NO to Buffer Trace Data     *
               &BUFFMAX=,              Number of Lines to Buffer       *
               &MSG=,                  Message to Print                *
               &REGS=ALL,              Registers to Print              *
               &DATA=,                 Data to Print                   *
               &PRINT=NOGEN            PRINT MODE GEN/NOGEN
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.** SVCNTRY - Define Entry Protocol for an SVC                        *
.*                                                                    *
.*    This macro is the foundation for SCVs and SVC hooks. It         *
.*  establishes the basic structure of the CSECT, the various LOCTR's *
.*  to be used by other macros in the system. It does the basic stuff *
.*  like setting up addressability, a patch area, and the MVS save    *
.*  area.  But it also determines whether tracing is in effect and    *
.*  initializes the trace facility if the are.                        *
.*                                                                    *
.** The Input Parameters Are:                                         *
.*                                                                    *
.*    SVCNO   - This parameter defines the SVC number to be used      *
.*              and places this number in the protocol at the         *
.*              beginning of the program.                             *
.*    SVTYP   - This parameter defines the type of SVC which should   *
.*              be 2/3/4/6, but I've only a 4 to this point.          *
.*    BASE=   - Specified as a sublist the base registers to be       *
.*              used for this CSECT. The default value is R12,R11.    *
.*    CBAS=   - Specified as a sublist the base registers to be       *
.*              used for this CSECTs Constant Area.                   *
.*    DBAS=   - Specified as a sublist the base registers to be       *
.*              used for this CSECTs Dynamic Storage Area. This       *
.*              would be in addition to R13 whcich is always the      *
.*              primary DSA base register.                            *
.*                                                                    *
.*    TYPE=   - SUBR/MAIN.  The difference here is that TYPE=MAIN     *
.*              Will allways do a STORAGE OBTAIN to acquire it's      *
.*              own DSA Upstack seperate from the caller.  The        *
.*              TYPE=SUBR will use the Upstack of the caller for      *
.*              his DSA if there is sufficient room available.  If    *
.*              there is not sufficient room available the macro      *
.*              will obtain a seperate 4K Upstack DSA to use.         *
.*    LEN=    - Specified as a decimal number that represents the     *
.*              length of the DSA Upstack to OBTAIN.  The default     *
.*              is 4K, and it should be specified as a decimal        *
.*              number in a multple of 4K. LEN=4 means 4K.            *
.*    AMODE=  - This value specifies the addressing mode for the      *
.*              program.  It may be specified as 24, 31, or 64.  The  *
.*              default value is 31.                                  *
.*    RMODE=  - This parameter specifies the residency mode for the   *
.*              program.  This can be 24, 31, or ANY.  The default    *
.*              value is ANY.                                         *
.*    PRINT=  - This parameter determines whether the source code     *
.*              generated by these program management macros will     *
.*              be generated in the listing. The default is NOGEN.    *
.*              It is provided for debugging purposes.  If PRINT=GEN  *
.*              is specified the macros will expand during assembly.  *
.*                                                                    *
.*    TRACE=  - This parameter indicates whether or not tracing       *
.*              should be active for this program.  The default       *
.*              value is YES but may be specified as NO to disable    *
.*              all tracing for this CSECT.                           *
.*    MSG=      Specifies a message to be printed allowinf for        *
.*              embedded variables in a sublisted string.  Variable   *
.*              data will be printed according to the type of         *
.*              variable.  Types C and Z are printes in character     *
.*              format.  Types F, H and P are printed in decimal      *
.*              format.  Everything else is printed in hex format.    *
.*               MSG='This is a message'                              *
.*               MSG=('The ',COLOR,' HARE ' is ',HEIGHT,' ft. tall.'  *
.*               MSG=('Show savearea at: ',DSASAVEA)                  *
.*    DATA=   - Specifies an area in storage that is to be displayed  *
.*              in hex dump format. An optional title may be specified*
.*              to identify the area being displayed.  The areas to be*
.*              displayed must be specified as a sublist within a     *
.*              sublist.                                              *
.*               DATA=('My DSA Area',0(R13),DSALNGTH)                 *
.*               DATA=(('Previous SA in Chain',0(R6),SALNGTH),        *
.*                     ('Next SA in Chain,',0(R5),(R2))               *
.*   BUFFDAT= - YES/NO. Specifying YES indicates that trace data be   *
.*              bufferred and written to sysout only at termination.  *
.*   BUFFMAX= - Number < 64000. The number of print lines to be       *
.*              maintained in the buffer above-the-line in a wrap     *
.*              around table for storage of trace output.             *
.*                                                                    *
.*                                                                    *
.** Change History                                                    *
.*                                                                    *
.* Date     Developer Cng# Comments                                   *
.* ======== ========= ==== ========================================== *
.* 03/30/07 R.Harper  M000 Macro Developed                            *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*
.**********************************************************************
.* Define Variables                                                   *
.**********************************************************************
.*
         COPY  PGMGBLAS                Copy Global Variables
.*
         LCLC  &USING                  USING Statment Build Area
         LCLC  &START                  Label For Housekeeping Code
         LCLC  &LBL1,&LBL2,&LBL3       Generic Labels
         LCLC  &DSALEN,&OVCHK,&ENDCT
.*
         LCLC  &D                      DSA Prefix
         LCLA  &L                      DSA Length for Getmain
.*
         LCLC  &A,&B,&C                General Work Variables
         LCLA  &X,&Y,&Z,&N             General Work Variables
.*
         LCLC  &PGM000,&PGM010,&PGM020 Program Labels
         LCLC  &PGM030,&PGM040,&PGM050 (Same)
         LCLC  &PGM060,&PGM070,&PGM080 (Same)
.*
.** Save Current RSECT Name and Generate TRACE Constant LOCTR Name
.*
&CASECT  SETC  '&LBL'                   Set Current RSECT Name
         AIF   (K'&CASECT LT 6).BILD010 Build LOCTR Name for Traces
&N       SETA  K'&CASECT+3-8+1          (Same)
&C       SETC '&CASECT'(&N,9-&N)        (Same)
.BILD010 ANOP                           (Same)
&DASECT  SETC  '@#$'.'&C'               Set Trace Constant LOCTR Name
.*
.** Initialize Global Variables
.*
         COPY  PGMGBINI                Initialize Glogal Variables
.*
&D       SETC  '&LCDSA'                Set DSA Prefix-Small Footprint
&DSALEN  SETC  '&LCDSA'.'L'            Set Label Small Footprint
&OVCHK   SETC  '&LCDSA'.'_OVCHK'       Set Label for Overlay Check
&ENDCT   SETC  '&LCDSA'.'_ENDCT'       Set Label Ending Eye Catcher
.*
&PAMODE  SETA  &AMODE                  Save AMODE Value
&PPRINT  SETC  '&PRINT'                Save PRINT Value
.*
&L       SETA  &LEN*1024
&DSAL    SETA  &L                      Save for PGMEXIT Macro
&SUBH    SETA  1                       Initialize Subr Count
.*
.** Generate Lables Needed for PGMNTRY
.*
&PGM000  SETC  'P00'.'&SYSNDX'         Build Required Labels
&PGM010  SETC  'P10'.'&SYSNDX'         (Same)
&PGM020  SETC  'P20'.'&SYSNDX'         (Same)
&PGM030  SETC  'P30'.'&SYSNDX'         (Same)
&PGM040  SETC  'P40'.'&SYSNDX'         (Same)
&PGM050  SETC  'P50'.'&SYSNDX'         (Same)
&PGM060  SETC  'P60'.'&SYSNDX'         (Same)
.*
         AIF   ('&MACS' EQ 'Y').NOMAC  Have macros Been Included?
&MACS    SETC  'Y'
         PUSH  PRINT
         PRINT OFF
         COPY  ASMMSP                  Structured Programming Macs
         COPY  IEABRC                  Branch Relative Instrs
         ASMDREG ,                     Define Register Equates
         DSADSECT                      Bring in DSA Prefix
         POP   PRINT
.NOMAC   ANOP
         PRINT ON,&PRINT
.*
.**********************************************************************
.* Basic Validation of Required Parameters                            *
.**********************************************************************
.*
         AIF   ('&LBL' EQ '').MNOTE5
         AIF   (T'&SVCNO EQ 'O').MNOTE6
         AIF   (('&SVTYP' NE '2') AND ('&SVTYP' NE '3') AND            *
               ('&SVTYP' NE '4') AND ('&SVTYP' NE '6')).MNOTE9
         AIF   (('&TYPE' NE 'USER') AND ('&TYPE' NE 'HOOK')).MNOTE8
.*
.**********************************************************************
.* Setup Basic RSECT and LOCTR Structure                              *
.**********************************************************************
.*
&LBL     RSECT ,
&LBL     AMODE &AMODE                   Establish AMODE
&LBL     RMODE &RMODE                   Establish RMODE
.*
&LCSCT         LOCTR ,                  SCT LOCTR - Main CSECT
&LCSC1         LOCTR ,                  SCT LOCTR - Middle 1 CSECT
&LCSC2         LOCTR ,                  SCT LOCTR - Middle 2 CSECT
&LCSPG         LOCTR ,                  SPG LOCTR - SUB Programs
*
&LCCON         LOCTR ,                  CON LOCTR - For Constants
&LCCN1         LOCTR ,                  CON LOCTR 1 For Constants
&LCCN2         LOCTR ,                  CON LOCTR 2 For Constants
&LCTRC         LOCTR ,                  TRC LOCTR - For Trace Data
*
&DSDSA         DSECT ,                  Setup Primary DSA LOCTR
         DS    XL(DSAPFXLN)             Reserve Space for DSA Prefix
&LCDSA         LOCTR ,                  Setup Primary DSA LOCTR
&LCDSB         LOCTR ,                  Setup Middle1 DSA LOCTR
&LCDSC         LOCTR ,                  Setup Middle2 DSA LOCTR
&LCDSD         LOCTR ,                  Setup Middle3 DSA LOCTR
&LCDSE         LOCTR ,                  Setup Ending  DSA LOCTR
.*
.**********************************************************************
.*  Setup Initial SVC Addressability                                  *
.**********************************************************************
.*
&LCSCT   LOCTR ,                       Reset LOCTR For This CSECT
         USING &LBL,R6                 SVCs Use R6 as Initial Base
&START   SETC  'SVE&SYSNDX'            Generate a Branch Label
         J     &START                  Branch to Housekeeping Code
.*
.**********************************************************************
.*  Define SVC Protocol                                               *
.**********************************************************************
.*                                  -*- Define SVC Protocol
PROTOCOL DS    0F                      Dynamic SVC Protocol
PROTNAME DC    CL8'&LBL'               ..User SVC/Hook Name
PROTLNTH DC    F'0'                    ..Length for Freemain
PROTNEXT DC    A(0)                    ..Previous SVC Entry Point
PROTTPLK DC    A(0)                    ..Previous SVC Type & Locks Word
PROTTYPE DC    C'&SVTYP'               ..SVC Type, 2/3/4/6
PROTSVCN DC    AL1(&SVCNO)             ..SVC Number to Use
         DC    XL2'0'                  ..(Reserved)
         DC    4F'0'                   ..(Reserved)
.*
.**********************************************************************
.*  Define Patch Area                                                 *
.**********************************************************************
.*
         DC    CL64'&LBL Assembled on, &SYSDATE, &SYSTIME '
         #CPYRGT                       Generate Copyright Notice
         DROP  R6                      Drop Temp Base
.*
.**********************************************************************
.* Define Required DSECT Areas                                        *
.**********************************************************************
.*
          PUSH  PRINT
          PRINT OFF
          IKJTCB ,
          USING TCB,R4
          IHARB DSECT=YES
          ORG   RBEXSAVE+0
RBSAVR13 DS    F
RBSAVR14 DS    F
RBSAVR15 DS    F
RBSAVR0  DS    F
RBSAVR1  DS    F
RBSAVR2  DS    F
RBSAVR3  DS    F
RBSAVR4  DS    F
RBSAVR5  DS    F
RBSAVR6  DS    F
RBSAVR7  DS    F
RBSAVEA  EQU   RBEXSAVE,*-RBEXSAVE,C'X'
         USING RBBASIC,R5
.*
.**********************************************************************
.*  SPECIAL REGISTER EQUATES FOR SUPERVISOR SERVICE                   *
.**********************************************************************
.*
RCVT     EQU   R3                      CVT  Pointer On Entry
RTCB     EQU   R4                      TCB  Pointer On Entry
RSRB     EQU   R5                      SVRB Pointer On Entry
RASB     EQU   R7                      ASCB Pointer On Entry
         POP   PRINT
.*
.**********************************************************************
.* Setup Program Addressability                                       *
.**********************************************************************
.*
&LCSCT   LOCTR ,
&START   DS    0H
         STM   R13,R7,RBEXSAVE         Save Registers
.*
.** Setup Program Bases - If Requested
.*
.B000    ANOP
         AIF   ('&BASE(1)' EQ '').B005  -> If No Base Registers
         LR    &BASE(1),R6              Setup Program Addressability
         AIF   ('&BASE(2)' EQ '').B001
         LA    &BASE(2),2048(,&BASE(1)) 2nd Base Register
         LA    &BASE(2),2048(,&BASE(2)) (Same)
         AIF   ('&BASE(3)' EQ '').B001
         LA    &BASE(3),2048(,&BASE(2)) 3rd Base Register
         LA    &BASE(3),2048(,&BASE(3)) (Same)
         AIF   ('&BASE(4)' EQ '').B001
         LA    &BASE(4),2048(,&BASE(3)) 4th Base Register
         LA    &BASE(4),2048(,&BASE(4)) (Same)
         AIF   ('&BASE(5)' NE '').MNOTE1
.*
.B001    ANOP
         AIF   ('&BASE(4)' EQ '').B002
         USING &LBL,&BASE(1),&BASE(2),&BASE(3),&BASE(4)
         AGO   .B005
.B002    ANOP
         AIF   ('&BASE(3)' EQ '').B003
         USING &LBL,&BASE(1),&BASE(2),&BASE(3)
         AGO   .B005
.B003    ANOP
         AIF   ('&BASE(2)' EQ '').B004
         USING &LBL,&BASE(1),&BASE(2)
         AGO   .B005
.B004    ANOP
         AIF   ('&BASE(1)' EQ '').B005
         USING &LBL,&BASE(1)
.B005    ANOP
.*
.** Setup Constant Base Registers if Requested
.*
         AIF   ('&CBAS(1)' EQ '').C001
         LARL  &CBAS(1),&CONPFX         Setup Constant Addressability
         AIF   ('&CBAS(2)' EQ '').C001
         LA    &CBAS(2),2048(,&CBAS(1)) 2nd Base Register
         LA    &CBAS(2),2048(,&CBAS(2)) (Same)
         AIF   ('&CBAS(3)' EQ '').C001
         LA    &CBAS(3),2048(,&CBAS(2)) 3rd Base Register
         LA    &CBAS(3),2048(,&CBAS(3)) (Same)
         AIF   ('&CBAS(4)' EQ '').C001
         LA    &CBAS(4),2048(,&CBAS(3)) 4th Base Register
         LA    &CBAS(4),2048(,&CBAS(4)) (Same)
         AIF   ('&CBAS(5)' NE '').MNOTE2
.*
.C001    ANOP
         AIF   ('&CBAS(4)' EQ '').C002
         USING &CONP,&CBAS(1),&CBAS(2),&CBAS(3),&CBAS(4)
         AGO   .C005
.C002    ANOP
         AIF   ('&CBAS(3)' EQ '').C003
         USING &CONP,&CBAS(1),&CBAS(2),&CBAS(3)
         AGO   .C005
.C003    ANOP
         AIF   ('&CBAS(2)' EQ '').C004
         USING &CONP,&CBAS(1),&CBAS(2)
         AGO   .C005
.C004    ANOP
         AIF   ('&CBAS(1)' EQ '').C005
         USING &CONP,&CBAS(1)
         AGO   .C005
.C005    ANOP
         LAM   AR0,AR15,=16A(0)         Set Primary ASID for All
         LMH   R0,R15,=16A(0)           Zero High Words of GPRs
.*
.*--------------------------------------------------------------------*
.** Obtain and Establish Addressability to Upstack DSA                *
.*--------------------------------------------------------------------*
.*
         USING &DSDSA,R13               Setup DSA Addressability
         USING DSA,&DSDSA               (Same)
*
** Getmain DSA Storage in Key of Caller
*
*        SETLOCK OBTAIN,TYPE=LOCAL,    Obtain Local Lock for
*              MODE=UNCOND,REGS=USE    ..Branch Entry Getmain
         SETLOCK OBTAIN,TYPE=LOCAL,    Obtain Local Lock for           *
               MODE=UNCOND,REGS=USE    ..Branch Entry Getmain
*
         L     R2,=A(&L)               Get Length of initial DSA
         LA    R2,4095(,R2)            (Same)
         SRL   R2,12                   (Same)
         SLL   R2,12                   (Same)
         LR    R0,R2                   (Same)
*
*        GETMAIN RU,LV=(0),SP=230,     Issue Branch Entry Getmain
*              KEY=(R3),LOC=BELOW,     For Dynamic Storage Area
*              BNDRY=DBLWD,            (Same)
*              BRANCH=YES              (Same)
         GETMAIN RU,LV=(0),SP=230,     Issue Branch Entry Getmain      *
               LOC=BELOW,              For Dynamic Storage Area        *
               BNDRY=DBLWD,            (Same)                          *
               BRANCH=YES              (Same)
         LR    R13,R1                  R13 -> DSA
*
*        SETLOCK RELEASE,TYPE=LOCAL,   Release Local Lock
*              REGS=SAVE               (Same)
         SETLOCK RELEASE,TYPE=LOCAL,   Release Local Lock              *
               REGS=SAVE               (Same)
*
         LR    R0,R1                    Assure Zero Filled DSA
         L     R1,=A(&L)                (Same)
         XR    R14,R14                  (Same)
         XR    R15,R15                  (Same)
         MVCL  R0,R14                   (Same)
*
         OI    DSAFLAG1,DSAOWNER        Indicate We own it
         MVC   DSALENTH,=A(&L)          Save Length for Freemain
         L     R1,=A(&L)                Get Residual Length
         SH    R1,=Y(&D.L)              (Same)
         ST    R1,DSARESID              Save in Our DSA
.*
.*--------------------------------------------------------------------*
.** Generate Additional Bases for DSA if Reqested                     *
.*--------------------------------------------------------------------*
.*
         AIF   ('&DBAS(1)' EQ '').D004
         LA    &DBAS(1),2048(,R13)      2nd DSA Base Register
         LA    &DBAS(1),2048(,&DBAS(1)) (Same)
         AIF   ('&DBAS(2)' EQ '').D001
         LA    &DBAS(2),2048(,&DBAS(1)) 3rd DSA Base Register
         LA    &DBAS(2),2048(,&DBAS(2)) (Same)
         AIF   ('&DBAS(3)' EQ '').D001
         LA    &DBAS(3),2048(,&DBAS(2)) 4th DSA Base Register
         LA    &DBAS(3),2048(,&DBAS(3)) (Same)
         AIF   ('&DBAS(4)' NE '').MNOTE3
.*
.D001    ANOP
         AIF   ('&DBAS(3)' EQ '').D002
         USING &DSDSA,R13,&DBAS(1),&DBAS(2),&DBAS(3)
         AGO   .D005
.D002    ANOP
         AIF   ('&DBAS(2)' EQ '').D003
         USING &DSDSA,R13,&DBAS(1),&DBAS(2)
         AGO   .D005
.D003    ANOP
         AIF   ('&DBAS(1)' EQ '').D004
         USING &DSDSA,R13,&DBAS(1)      DSA Addressability
         AGO   .D005
.D004    ANOP
         USING &DSDSA,R13               DSA Addressability
.D005    ANOP
         USING DSA,&DSDSA               DSA Prefix Addressability
*
         MVC   DSAEYECT,=CL4'DSA'       Set DSA EyeCatcher
         MVC   &ENDCT,=CL4'DSAE'        Set DSA Ending EyeCatcher
         LA    R14,&OVCHK               Set up Overlay Check
         ST    R14,&OVCHK               (Same)
         MVC   DSALNGTH,=A(&D.L)        Set Length of Our DSA
         MVC   DSATRAPS,=4X'0700'       Assume No Traps at Present
*temp    ST    R5,DSAPRWD1              Save SVRB Address
.*
.*--------------------------------------------------------------------*
.** Fillin Support for Traces in DSA                                  *
.*--------------------------------------------------------------------*
.*
         MVC   DSATRAPS,=4X'0700'       Assume No Traps at Present
.*
         AIF   ('&TRACE' NE 'YES').T999 Determine Type of Traces
&PTRACE  SETB  1                        Indicate TRACE=YES Specified
         AIF   ('&IMP' EQ 'TRAP2').T300 (Same)
         AIF   ('&IMP' EQ 'SVC').T200   (Same)
         AIF   ('&IMP' EQ 'BASR').T100  (Same)
         AGO   .MNOTE4
.*
.T100    ANOP                           Process if IMP=BASR Traces
         MVC   DSATRAPS,=4X'0DEF'       Set Target of EX as: BASR 14,15
         MVC   DSATRCEP,=V(RDHTRACG)    Set Entry Point to Trace Pgm
         AGO   .T999
.*
.T200    ANOP                           Process if IMP=SVC Traces
         L     R14,16                   Get CVT Address
         USING CVT,R14                  Change Addressability
         L     R14,CVTABEND             Get Address of SCVT
         USING SCVTSECT,R14             Change Addressability
*
         L  R14,SCVTSVCT                Get Address of SVCTABLE
         AH R14,=Y(255*8)               Point at SVC 255
         LA R15,255                     Loop All SVC Table Entries
*
         DO FROM=(R15)                  Loop Through SVC Table
            L  R1,0(,R14)               Get SVC Entry Point
            LA R1,0(,R1)
            DOEXIT (CLC,=C'RDHTRSVC',EQ,4(R1))
            AHI R14,-8                  Bump to Prev SVCTABLE Entry
         ENDDO ,                        -> Loop
*
         IF (CLC,=C'RDHTRSVC',EQ,4(R1)) Found Our SVC?
            STC R15,DSASVCNO            Save SVC Number
            MVC DSATRAPS,=4X'0A00'      Set Target of EX as: SVC #
            STC R15,DSATRPGM+1          Set SVC Number to Use
            STC R15,DSATRSUB+1          (Same)
            STC R15,DSATRTRC+1          (Same)
            STC R15,DSATRSPM+1          (Same)
         ELSE ,
            EX 0,*
            DC 'RDHTRSVC SVC is not Installed.'
         ENDIF ,
         AGO   .T999
.*
.T300    ANOP                           Process if IMP=TRAP2 Traces
         MVC   DSATRAPS,=6X'01FF'       Set Target of EX as: TRAP2
         AGO   .T999

.T999    ANOP
         LM    R14,R7,RBEXSAVE+4       Save Registers
.*
.*--------------------------------------------------------------------*
.** Generate Traces if Requested                                      *
.*--------------------------------------------------------------------*
.*
&XTRC    SETC  'NO'                     Note Value in GBLC for PGMEXIT
         AIF   ('&TRACE' NE 'YES').EXIT
&XTRC    SETC  'YES'
*
*        #TRACE TYPE=PGME,              Indicate Program Entry Call    *
               BUFFDAT=&BUFFDAT,        Buffer Data YES/NO             *
               BUFFMAX=&BUFFMAX,        Lines to Buffer                *
               MSG=&MSG,                Print Desired Message          *
               REGS=&REGS,              Print Desired Registers        *
               DATA=&DATA,              Print Any Desired Data         *
               PRINT=&PRINT             Print Any Desired Data
&PGM060  #TRACE TYPE=PGME,                                             *
               BUFFDAT=&BUFFDAT,                                       *
               BUFFMAX=&BUFFMAX,                                       *
               MSG=&MSG,                                               *
               REGS=&REGS,                                             *
               DATA=&DATA,                                             *
               PRINT=&PRINT
         AGO   .EXIT                   -> Done
.*
.**********************************************************************
.* Error Messages                                                     *
.**********************************************************************
.*
.MNOTE1   MNOTE 8,'PGMNTRY: More than four registers for BASE='
         AGO   .EXIT
.*
.MNOTE2   MNOTE 8,'PGMNTRY: More than four registers for CBAS='
         AGO   .EXIT
.*
.MNOTE3  MNOTE 8,'PGMNTRY: More than four registers for DBAS='
         AGO   .EXIT
.*
.MNOTE4  MNOTE 8,'PGMNTRY: IMP=value invalid. Must be BRANCH, SVC, or T*
               RAP2.'
         AGO   .EXIT
.*
.MNOTE5  ANOP ,
         MNOTE 8,'SVCNTRY: Csect name not specified and is required.'
         AGO   .EXIT
.*
.MNOTE6  ANOP ,
         MNOTE 8,'SVCNTRY: SVCNO= not specified and is required.'
         AGO   .EXIT
.*
.MNOTE7  ANOP ,
         MNOTE 8,'SVCNTRY: AMODE/RMODE parameter conflict, AMODE=&AMODE*
               ,RMODE=&RMODE'
         AGO   .EXIT
.MNOTE8  ANOP ,
         MNOTE 8,'SVCNTRY: TYPE=&TYPE is invalid.  Must be USER/HOOK.'
         AGO   .EXIT
.*
.MNOTE9  ANOP ,
         MNOTE 8,'SVCNTRY: SVTYP=&SVTYP is invalid.  Must be 2/3/4/6.'
         AGO   .EXIT
.*
.MNOTE10 ANOP ,
         MNOTE 8,'SVCNTRY: No base registers were specified.'
         AGO   .EXIT
.*
.** Exit Macro
.*
.EXIT    ANOP
         MEND

./ ADD NAME=TRCDSECT 0100-10050-10050-1200-00222-00222-00000-RHDMAC
         MACRO
&LBL     TRCDSECT ,
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
*                                                                     *
** TRCDSECT - Primary Data Repository for the RDHTRACE System         *
*                                                                     *
*    This data area contains all the data necessary to provide        *
*  support for the Label level Tracing Facility.  It is task          *
*  related, which is to say one of these data areas exist for         *
*  each MVS Task gbeing traced within the address space.              *
*    It is Anchored off of RMEPARAM, the parameter passed into        *
*  RESMGR.  Thr RME data areas are a forward/backward chained         *
*  set of control blocks pointed to by STCBRMEF.                      *
*    This control block is created the first time a #TRACE Macro      *
*  is executed under any subtask within the address space, and        *
*  freed by the resource manager exit RDHRESEX at task termination.   *
*  RDHRESEX is located within RDHTRACE.                               *
*                                                                     *
* Date     Developer Cng# Comments                                    *
* ======== ========= ==== =========================================== *
* 00/00/00 R.Harper  M000 Macro Developed                             *
*                                                                     *
***********************************************************************
*
TRCDSECT DSECT ,                       Define TRC Persistant Data Area
TRCEYECT DS    CL8                     Eye Catcher C'TRCDSECT'
TRCCDATE DS    CL8                     Date Initiated
TRCCTIME DS    CL8                     Time Initiated
TRCTCBAC DS    CL8                     TCB Address in Character
TRCRC    DS    F                       Return Code
TRCRS    DS    F                       Reason Code
*
TRCPFLAG DS    B                       Processing Flag
TRCPDDSO EQU   X'80'                   ..TRCPRINT is SYSOUT
TRCPDDPS EQU   X'40'                   ..TRCPRINT is PS
TRCPDDPO EQU   X'20'                   ..TRCPRINT is PO
*
TRCBFLAG DS    B                       Buffering Flags
TRCBBFON EQU   X'80'                   ..Buffering is Indicated
TRCBBATL EQU   X'40'                   ..Buffer is Above-The-Line
TRCBBATB EQU   X'20'                   ..Buffer is Above-The-Bar
*
         DS    BL7                     (Reserved) - For More Flags
*
TRCTCBAD DS    A                       TCB Address That Own This Area
TRCPARMA DS    A                       R1 Value On Entry
TRCTRPAD DS    A                       Address of Current TRPDSECT
TRCENDAT DS    A                       Address of End of DATA
TRCDADDR DS    A                       Address of TRCDAREA Data Area
*
TRCBUFAD DS    A                       Address of Print Buffer
TRCBUFLN DS    F                       Length of Print Buffer
TRCBUFND DS    A                       Address of End of Buffer
TRCBUFCR DS    A                       Current Position in Buffer
*
TRCDDNAM DS    CL8                     DDNAME for This TCB
TRCDSNAM DS    CL44                    TRCPRINT DSNAME
*
TRCHEADT DS    CL8                     Type of Trap Heading
TRCNAME  DS    CL8                     Name For Trap Heading
*
         DS    0D
TRCPNTRY DS    XL(TRCDLNTH)            Previous Save Area Entry
         DS    0D
TRCCNTRY DS    XL(TRCDLNTH)            Current  Save Area Entry
*
TRCREG#  DS    PL2                     Current Register Number
TRCPTKEY DS    XL1                     Current Key
TRCWKCL9 DS    CL9                     General Work Area
TRCWKC16 DS    XL16                    (Same)
TRCWORKC DS    XL20                    (Same)
TRCWORKX DS    XL32                    (Same)
*
TRCSAVE4 DS    4A                      Register Save Area
TRCWORKD DS    D                       General Purpose Workarea
TRCWORKF DS    F                       (Same)
TRCLMOD  DS    CL8                     Load Module Name
TRCLMODC DS    CL8                     Load Module For Calling Procram
*
TRCPLINE DS    CL128                   Print Line
TRCMSGWK DS    CL255                   MSG= Work Area
*
** Estae Recovery Variables for TRCESTAE - RDHTRACE Recovery Program
*
TRCRETRY DS    F                       Address of Recovery RTN or Zero
TRCEFAIL DS    F                       Address of Fail Recovery Rtn
TRCEACNT DS    H                       Count of Abends
TRCEACMP DS    XL3                     Abend Completion Code
TRCEPSW  DS    2F                      PSW at Time of Error
TRCEREGS DS    16F                     Registers at Time of Abend 0-15
*
** Abend Recovery Variables for TRCABEND - Print Abend Diagnostics
*
TRCABSAV DS    9D                      Register Savearea
TRCPLIST DS    4F                      PLIST for CALL Macro
*
***********************************************************************
*
** Indention Levels
*
*    Each time a subroutine is called we increase the level of
*  indention by three bytes on the output to increase readabillity.
*  We allow a maximum of ten levels of indention within a program.
*  After that we stop indenting, as we've used up thirty bytes.
*   The low order byte of the TRCINDNT entry is used to maintain
*  the current number of bytes to indent.  The high order byte is
*  used to maintain the number of times we have entered a new
*  subroutine after we have overflowed.  In this way we can always
*  return to the proper indention level for the calling program upon
*  return from a called program.
*    This whole mechanism allows for 265 levels of nested subroutines
*  within a program and one hundred levels of nested programs per
*  task being traced. That should be enough.
*    Each time we enter a new program, we start again left justified
*  on the page and move to a new counter in TRCINDNT by incrementing
*  TRCINCUR.  When we exit a program we zero out that entry in
*  TRCINDNT and decrement TRCINCUR which should ultimately return to
*  zero upon return to MVS.
*
TRCINLVL DS    H                       Indention Level for This Call
*
TRCINCUR DS    H                       Index to Current Program in Tbl
TRCINDNT DS    100H                    Indention Levels for 100 Pgms
*
***********************************************************************
*
***********************************************************************
* Define Space for MF=L Constructs                                    *
***********************************************************************
*
*
         DS   0D
TRCDCB   DS   XL(MDLDCBL)              Reserve Space for DCB
TRCDCBID DS   CL4                      Trace DCB Ident C'TRAC'     @RDH
*
TRCRJFCL DS   F                        Reserve Space for RDJFCB MF=L
TRCEXLST DS   F                        Space for DCB EXLST
TRCJFCB  DS   0D,CL176                 Reserve Space for JFCB
*
         DS   0D
TRCOPL   DS   XL(MDLOPLL)              Reserve Space for OPEN Parm
         DS   0D
TRCCLL   DS   XL(MDLCLLL)              Reserve Space for CLOSE Parm
*
         DS   0D
TRCRESM  DS   XL(MDLRESML)             Reserve Space for RESMGR
TRCRESMP DS   D                        Parm Passed to Resource Manager
TRCRESMT DS   F                        Token From RESMGR
*
TRCESTAL ESTAEX ,CT,                   Exit Routine Address, Not Here  X
               XCTL=NO,                XCTL Cancels ESTAE Exit         X
               PURGE=NONE,             Do Not Purge I/O on Abend       X
               ASYNCH=YES,             Allow ASYNC to Continue         X
               TERM=NO,                Don't Enter if Task Cancelled   X
               MF=L                    This is List Form
*
         SQUEEZE MF=L                  Get Data Areas for SQUEEZE
TRCTMFL  TIME LINKAGE=SYSTEM,MF=L
*
         DS    0D
TRCLNGTH EQU   *-TRCDSECT              Length of Data Area
*
***********************************************************************
* TRCDAREA - Savearea Info DSECT - Pointed to by TRCDADDR             *
***********************************************************************
*
*   This area is filled in by TRCDSAVE on each call to RDHTRACE and
* any call to TRCADIAG during an abend.  It contains all the data
* related to programs in the savearea chain or linkage stack entries.
*
TRCDAREA DSECT ,
TRCDEYE  DS    CL8                     Eye Catcher
TRCDLEN  DS    A                       Length of Area for Freemain
TRCDCNT  DS    F                       Count of Enties in Table
TRCPLTH  EQU   *-TRCDAREA              Length of Prefix Area
*
TRCDNTRY DS    0D                      Initial CSECT Entry
TRCDLMOD DS    CL8                     LMOD Name
TRCDEPAD DS    A                       EP Address
         DS    A
*
TRCDCSCT DS    CL8                     CSECT Name
TRCDCSEP DS    A                       CSECT EP Address - R15 on Entry
TRCDCOFS DS    A                       CSECT Offset From LMOD
*
TRCDRTLM DS    CL8                     Return LMOD  Name
TRCDRTCS DS    CL8                     Return CSECT Name
TRCDRTAD DS    A                       Return Address
TRCDROFS DS    A                       Offset Into CSECT
*
TRCDLSEN DS    A                       Linkage Stack Entry Address
TRCDR13  DS    A                       R13 Value
*
TRCDPGID DS    CL32                    Program ID Data
TRCDLNTH EQU   *-TRCDNTRY              Length of Each Entry
*
TRCDSIZE EQU   12*1024                 Size for Getmain - 12K
TRCDMAXC EQU   TRCDSIZE/TRCDLNTH       Max Entries in Table
         MEND  ,
./ ADD NAME=TRGDSECT 0100-10050-10050-1200-00091-00091-00000-RHDMAC
         MACRO
&LBL     TRGDSECT ,
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
*                                                                     *
** TRGDSECT - #TRACE Glue Code Data Area                              *
*                                                                     *
*   This DSECT area defines the machine status at the time of the     *
* execution of the #TRACE macro.  This includes the PSW, GP Registers *
* Access Registers, and Control Register in effect and is the primary *
* input to the tracing program RDHTRACE which produces the diagnostic *
* output.                                                             *
*                                                                     *
*                                                                     *
* Date     Developer Cng# Comments                                    *
* ======== ========= ==== =========================================== *
* 00/00/00 R.Harper  M000 Macro Developed                             *
*                                                                     *
***********************************************************************
*
TRGDSECT DSECT ,
TRGEYECT DS    CL8'TRGDSECT'         EyeCatcher
*
TRGFLAG1 DS    B                     Flag Byte #1
TRG1SRBM EQU   X'80'                 ..Running in SRB Mode
TRG1SVCI EQU   X'40'                 ..IMP=SVC
TRG1TRPI EQU   X'20'                 ..IMP=TRAP2
TRG1BSRI EQU   X'10'                 ..IMP=BASR
TRG1ARMD EQU   X'08'                 ..ARMODE PSW
TRG1AM64 EQU   X'04'                 ..AMODE=64
TRG1AM31 EQU   X'02'                 ..AMODE=31
TRG1AM24 EQU   X'01'                 ..AMODE=24
         DS    BL3                   (Reserved)
*
TRGASCB  DS    A                     Current ASCB Address
TRGTCB   DS    A                     Current TCB  Address
*
TRGTRPAD DS    A                     Addr of TRPDSECT This Trace Point
TRGPLIST DS    2F                    PLIST Area
TRGHLNTH EQU   *-TRGDSECT            Header Length
*
** Define Space for Copy of Linkage Stack Entry
*
TRGLSEN  DS    XL(LSENLNTH)          Space for Linkage Stack Entry
*
** Define Space for Control Registers
*
TRGCNTRL DS    0D                    Control Registers in Effect
TRGCR0   DS    D                     (Same)
TRGCR1   DS    D                     (Same) - PASN ASCE
TRGCR2   DS    D                     (Same) - DUCT Origin
TRGCR3   DS    D                     (Same)
TRGCR4   DS    D                     (Same)
TRGCR5   DS    D                     (Same)
TRGCR6   DS    D                     (Same)
TRGCR7   DS    D                     (Same) - SASN ASCE
TRGCR8   DS    D                     (Same)
TRGCR9   DS    D                     (Same)
TRGCR10  DS    D                     (Same)
TRGCR11  DS    D                     (Same)
TRGCR12  DS    D                     (Same)
TRGCR13  DS    D                     (Same) - HASN ASCE
TRGCR14  DS    D                     (Same)
TRGCR15  DS    D                     (Same) - Linkage Stack Pointer
*
         DS    0D                    Doubleword Aligned
TRGLNGTH EQU   *-TRGDSECT            Length of User Area
         MEND  ,
./ ADD NAME=TRPDSECT 0100-10050-10050-1200-00116-00116-00000-RHDMAC
         MACRO ,
&LBL     TRPDSECT ,
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
*                                                                     *
** TRPDSECT - Define a Trace Point Trap                               *
*                                                                     *
*    This dsect defines the data area generated by the #TRACE macro.  *
*  It's pretty much variable in nature depending upon what was        *
*  specified on the macro.  The data area, the data area title or     *
*  the message area may of may not exist.                             *
*                                                                     *
*                                                                     *
* Date     Developer Cng# Comments                                    *
* ======== ========= ==== =========================================== *
* 00/00/00 R.Harper  M000 Macro Developed                             *
*                                                                     *
***********************************************************************
*
TRPDSECT DSECT ,
TRPNAME  DS    CL8                  Name of This Trap
TRPFLAG1 DS    B                    Flag Byte
TRPFTRAP EQU   X'80'                ..Trace Point Trap
TRPFPGME EQU   X'40'                ..Program Entry Trap
TRPFPGMX EQU   X'20'                ..Program Exit  Trap
TRPFSUBE EQU   X'10'                ..Subroutine Entry Trap
TRPFSUBX EQU   X'08'                ..Subroutine Exit  Trap
TRPFLAG2 DS    B                    Flag Byte
TRPFSQEZ EQU   X'80'                ..SQUEEZE=YES Specified
TRPFNOHD EQU   X'40'                ..NOHEAD=YES Specified
TRPFREGS EQU   X'08'                ..REGS= Was Specified
TRPFMSGS EQU   X'04'                ..MSG=  Was Specified
TRPFDATA EQU   X'02'                ..DATA= Was Specified
TRPLNGTH DS    HL2                  Length of This Trap
TRPTRPAD DS    AL4                  Addr of TRPDSECT+00 Open Segment
TRPOFFST DS    XL2                  Offset Into CSECT in Hex
TRPPREGS DS    BL2                  Registers to Display 0-15
TRPHLNTH EQU   *-TRPDSECT           Length of Header Area
*
TRPOPENA DS    0X               -*- Define Open Segment - 1st Segment
TRPOFLG1 DS    B                    Flag Byte - Same as TRPFLAG1
TRPOBUFF EQU   X'04'                ..Buffering is in Effect
TRPOFLG2 DS    B                    Protocol Type
TRPOPGME EQU   X'80'                ..PGME
TRPOSVCE EQU   X'40'                ..SVCE
TRPOESTE EQU   X'20'                ..ESTAE
TRPOSRBE EQU   X'10'                ..SRBE
TRPOPCE  EQU   X'08'                ..PCE
TRPOBMAX DS    HL2                  Max Lines to Buffer
TRPDDNAM DS    CL8                  DDNAME Used
TRPCSECT DS    CL8                  CSECT Name of Program
TRPOLNTH EQU   *-TRPOPENA           Length of Open Area
*
         ORG   TRPOPENA             Overlay The Open Stuff
TRPMSG   DS    0H               -*- Message Area Variable Segment
TRPMLNTH DS    YL2                  Length of MSG= Segment
TRPMDATA EQU   *                    Beginning of Message Data
*
TRPEVAR  DSECT ,                    Embedded Variable Description
TRPEVID  DS    X                    Donates Beginning of Variable
TRPEVVAR EQU   X'FE'                ..Variable indicater
TRPEVFIL EQU   X'FD'                ..Filler Byte - For Alignment
TRPETYP  DS    C                    Type of Constant to Insert
TRPETYPC EQU   C'C'                 ..C - Character Data
TRPETYPZ EQU   C'Z'                 ..Z - Zoned Data
TRPETYPF EQU   C'F'                 ..F - Fullword Data
TRPETYPH EQU   C'H'                 ..H - Halfword Data
TRPETYPP EQU   C'P'                 ..P - Packed Data
TRPETYPX EQU   C'X'                 ..X - Hexadecmil Data
TRPESCON DS    SL2                  SCON Address of Data to Insert
TRPESCDH DS    BL1                  DH Part of SCON
TRPEDLEN DS    YL1                  Length of Variable
TRPESLEN EQU   *-TRPEVAR            Length of a Variable Area (6)
*
TRPDDATA DSECT ,                -*- Data Area Description
TRPDLNTH DS    H                    LENGTH of DATA= Area
TRPDCNT  DS    AL2                  Count of DATA= Entries (1,2,3)
*
TRPDSTRT DS    0X                   Start of One Segment
TRPDHDR  DS    0X                   Start of Area Heading
TRPDFLAG DS    B                    Flag Byte
TRPDFREG EQU   X'80'                ..Length is in Register
TRPDFRDR EQU   X'70'                ..Redirection in Effect
TRPDF64R EQU   X'40'                ..Addr is !64-Bit Redirect
TRPDF31R EQU   X'20'                ..Addr is ?31-Bit Redirect
TRPDF24R EQU   X'10'                ..Addr is %24-Bit Redirect
TRPDFRAD EQU   X'08'                ..Addr is is a Real Address
TRPDTLEN DS    AL1                  Length of Title
TRPDADRL DS    SL2                  BDDD Address of Area
TRPDADRH DS    BL1                  DH   Address of Area
TRPDATLN DS    FL2                  Length of Area to Print
TRPDTITL DS    0X                   Title For Area
TRPDSLEN EQU   *-TRPDSTRT           Length of DATA= Segment
         MEND ,
./ ADD NAME=VSGDSECT 0100-10050-10050-1200-00103-00103-00000-RHDMAC
          MACRO ,
          VSGDSECT
.*
.**********************************************************************
.* Copyright (c) 2007 - Richard D. Harper, All Rights Reserved        *
.**********************************************************************
.*                                                                    *
.*   This file is part of Richard Harper's Private Development        *
.* Platform (PDP).                                                    *
.*                                                                    *
.*   Richard Harper's PDP is free software: you can redistribute      *
.* it and/or modify it under the terms of the GNU General Public      *
.* License as published by the Free Software Foundation, either       *
.* version 3 of the License, or (at your option) any later version    *
.*                                                                    *
.*   Richard Harper's PDP is distributed in the hope that it will     *
.* be useful, but WITHOUT ANY WARRANTY; without even the implied      *
.* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   *
.* See the GNU General Public License for more details.               *
.*                                                                    *
.*   You should have received a copy of the GNU General Public        *
.* License along with Richard harper's PDP.  If not, see              *
.* <http://www.gnu.org/licenses/>.                                    *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
*                                                                     *
** VSGDSECT - Virtual Storage Control Block Definations               *
*                                                                     *
*    This macro is provided to define the structure of the virtual    *
*  storage table entries.  Three different DSECTs are generated by    *
*  this macro.  These include:                                        *
*                                                                     *
*    RGNDSECT - Defines the Region Table Entry structure.             *
*    SEGDSECT - Defines the Segment Table Entry structure.            *
*    PAGDSECT - Defines the Page Table Entry structure.               *
*                                                                     *
*                                                                     *
* Date     Developer Cng# Comments                                    *
* ======== ========= ==== =========================================== *
* 00/00/00 R.Harper  M000 Macro Developed                             *
*                                                                     *
***********************************************************************
*
** Region Table DSECT Area
*
RGNDSECT DSECT ,                       Define Region Table Entry
RGNORIGN DS    0D                      Next Table Origin
RGNORMSK EQU   X'FFFFF000'             Mask for Stripping Flag Bits
RGNFLMSK EQU   X'00000FFF'             Mask for Stripping Addr Bits
         DS    XL6                     Place Holder
RGNFLAG1 DS    B                       Flag Byte #1
RGN1P    EQU   X'02'                   ..DAT Protection Applies
RGNFLAG2 DS    B                       Flag Byte #2
RGN2TF   EQU   X'C0'                   ..TF - Table Offset *4096
RGN2I    EQU   X'20'                   ..I  - Region Invalid Bit
RGN2TT   EQU   X'0C'                   ..TT - Region Table Type 3-1
RGN2TT11 EQU   X'0C'                   ..TT - Region First Table
RGN2TT10 EQU   X'08'                   ..TT - Region Second Table
RGN2TT01 EQU   X'04'                   ..TT - Region Third Table
RGN2TT00 EQU   X'00'                   ..TT - Segment Table
RGN2TL   EQU   X'03'                   ..TL - Region Table Length
RGNLNGTH EQU   *-RGNDSECT              Length of DSECT (8-Bytes)
*
** Segment Table DSECT Area
*
SEGDSECT DSECT ,                       Define Region Table Entry
SEGORIGN DS    0D                      Next Table Origin
SEGOMSK0 EQU   X'FFFFF800'             Mask to Strip Flag Bits - FC=0
SEGFMSK0 EQU   X'000007FF'             Mask to Strip Addr Bits - FC=0
SEGOMSK1 EQU   X'FFF00000'             Mask to Strip Flag Bits - FC=1
SEGFMSK1 EQU   X'000FFFFF'             Mask to Strip Addr Bits - FC=1
         DS    XL5                     Place Holder
SEGFLAG1 DS    B                       Flag Byte #1
SEG1AV   EQU   X'01'                   ..Acc Cntrl Validty Bit - FC=1
SEGFLAG2 DS    B                       Flag Byte #2
SEG2ACC  EQU   X'F0'                   ..Acc Cntrl Storage Key - FC=1
SEG2F    EQU   X'08'                   ..F  - Fetch Protection Bit
SEG2FC   EQU   X'04'                   ..FC - Page or 1=Segment Addr
SEG2P    EQU   X'02'                   ..P  - DAT Protection Bit
SEG2CO   EQU   X'01'                   ..CO - Change Recording Overide
SEGFLAG3 DS    B                       Flag Byte #2
SEG2I    EQU   X'20'                   ..I  - Segment Invalid Bit
SEG2C    EQU   X'10'                   ..C  - Common Segment Bit
SEG2TT   EQU   X'0C'                   ..TT - Segment Table Type '00'
SEGLNGTH EQU   *-SEGDSECT              Length of DSECT (8-Bytes)
*
** Page Table DSECT Area
*
PAGDSECT DSECT ,                       Define Region Table Entry
PAGORMSK EQU   X'FFFFF000'             Mask for Stripping Flag Bits
PAGFLMSK EQU   X'00000FFF'             Mask for Stripping Addr Bits
         DS    XL6                     Place Holder
PAGFLAG1 DS    B                       Flag Byte #1
PAG1I    EQU   X'04'                   ..I  - Page Invalid Bit
PAG1P    EQU   X'02'                   ..P  - DAT Protection Bit
PAG1CO   EQU   X'01'                   ..CO - Change Recording Overide
PAGFLAG2 DS    B                       Flag Byte #2
PAG2ACC  EQU   X'F0'                   ..Acc Cntrl Storage Key 0-F
PAG2F    EQU   X'08'                   ..F  - Fetch Protection Bit
PAGLNGTH EQU   *-PAGDSECT              Length of DSECT (8-Bytes)
         MEND
