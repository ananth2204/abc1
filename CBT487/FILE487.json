{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012146000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE487.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE487.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x07'", "DS1TRBAL": "b'\\xbb\"'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\x86\\x00\\x06\\x03\\x86\\x00\\x08\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"@FILE487": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x99\\x08?\\x01\\x005_\\x12\\x15\\x00\\x11\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1999-03-24T00:00:00", "modifydate": "2000-12-20T12:15:00", "lines": 17, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 487 is a TSO REXX exec from Robert Bridges, which can     *   FILE 487\n//*           be used to ISPF VIEW the TSO terminal output of       *   FILE 487\n//*           commands.  This way, the output would not roll off    *   FILE 487\n//*           the screen.                                           *   FILE 487\n//*                                                                 *   FILE 487\n//*           For example, instead of typing:                       *   FILE 487\n//*                                                                 *   FILE 487\n//*             TSO HELP XMIT        under ISPF, getting the        *   FILE 487\n//*                                  raw TSO output, you type       *   FILE 487\n//*                                                                 *   FILE 487\n//*             TSO DISP HELP XMIT   and you get to VIEW all        *   FILE 487\n//*                                  the output under ISPF.         *   FILE 487\n//*                                                                 *   FILE 487\n//*           This exec is therefore very convenient to have.       *   FILE 487\n//*                                                                 *   FILE 487\n//*              Robert_Bridges@vanguard.com                        *   FILE 487\n//*                                                                 *   FILE 487\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISP": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x00\\x01\\x00%o\\x01\\x005_\\x10F\\x00+\\x00)\\x00\\x00\\xe4\\xd9\\xc1\\xc2@@@@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2000-09-12T00:00:00", "modifydate": "2000-12-20T10:46:00", "lines": 43, "newlines": 41, "modlines": 0, "user": "URAB"}, "text": "/* REXX to trap output from a given command and, instead of letting it\ndisplay once and be lost, copies it to a temporary dataset for browsing.\nThis is useful in two cases:  1) When the output is rather long and it'd\nbe nice to be able to browse up and down through it (for example as with\nHELP XMIT or LISTCAT HISTORY), and 2) when you want to be able to search\nthrough it for a particular string, or otherwise manipulate it with VIEW\ncommands.\n\nTo make the call, just insert DISP between TSO and the command; for\nexample, instead of saying TSO HELP XMIT, say TSO DISP HELP XMIT. */\n\narg cmd\n\n/* Turn any single quotes into triples */\npq=pos(\"'\",cmd); do while pq>0\n  cmd=insert(\"''\",cmd,pq)\n  pq=pos(\"'\",cmd,pq+3); end\n\nrc=outtrap('op.'); interpret \"'\"cmd\"'\"; rc=outtrap('OFF')\nif op.0=0 then say,\n  \"No output, or TRAP can't handle this type of output\"\nelse do\n  vx=sysvar('SYSWTERM')\n  'ALLOCATE DDN(DISPTRAP) NEW REUSE LRECL('vx')'; call chkrc 'ALLOCATE'\n  'EXECIO * DISKW DISPTRAP (STEM OP. FINIS';      call chkrc 'EXECIO'\n  'ISPEXEC LMINIT DATAID(OP) DDNAME(DISPTRAP)';   call chkrc 'LMINIT'\n  'ISPEXEC VIEW DATAID('op')';                    call chkrc 'VIEW'\n  'FREE DDN(DISPTRAP)';                           call chkrc 'FREE'\n  end\nexit 0\n\nchkrc: arg stm;\n  if rc=0 then return\n  if stm='LMINIT' then do\n    say strip(zerrsm) '(help panel =' zerrhm')'\n    say strip(zerrlm); end\n  msg=stm 'returns' rc;\n  if rc>4 & wordpos(stm,'ALLOCATE FREE')=0 then do\n    'FREE DDN(DISPTRAP)'; call abend msg; end;\n  say '*  ' msg'!'; return\n\nabend: parse arg msg; say '***' msg; parse source . . self .\n  say '   ' self 'abending (RC=8)'; exit 8\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT487/FILE487.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT487", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}