{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011616000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 705432, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 27, "INMDSNAM": "CBT.V500.FILE263.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 705432, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 705432, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE263.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\r\\x17'", "DS1TRBAL": "b'\\x1b~'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xd2\\x00\\x03\\x01\\xd3\\x00\\x01\\x00\\x0e'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x96\\x12\\x7f\\x00\\x96\\x12\\x7f\\x19S\\x00\\x14\\x00\\x14\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-05-06T00:00:00", "modifydate": "1996-05-06T19:53:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "SBGCSC"}, "text": "DOC FOR THIS FILE (263).\n\n   THIS FILE CONSISTS OF ALL MEMBERS OF THE OLD UK G.U.I.D.E. TAPE\n   WHICH ARE NOT IN THE NEW UK G.U.I.D.E. TAPE WHICH I RECEIVED\n   FROM PHIL PECKSEN, WHO IS ITS PROPRIETOR.  I HAVE ASSUMED THAT\n   THESE MEMBERS, MOST OF WHICH ARE MACROS, ARE NECESSARY FOR\n   ASSEMBLING THE CONTENTS OF FILES 244 AND 245 OF THE CBT TAPE,\n   WHICH IS FROM HIM, BUT WHICH CONTAINS FEW LOOSE MACROS.\n\n   THE COMPLETE UK G.U.I.D.E. TAPE TOGETHER WITH THESE MEMBERS,\n   CAN NOW BE FOUND ON THE CBT OVERFLOW TAPE, WHICH WAS JUST\n   ESTABLISHED.  THE UK G.U.I.D.E. TAPE FILE IS FILE 012 ON THAT\n   TAPE.\n\n          MAY 06, 96       SAM GOLOB\n                           P.O. BOX 423\n                           HOWELL, NJ 07731-0423\n                           908-901-0943\n                           718-403-8666    DAY PHONE\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AAAADDR": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x85\\x14/\\x00\\x85\\x14/\\x15\\x10\\x00D\\x00D\\x00\\x00\\xe8\\xe9\\xd9\\xc4\\xd9\\xf1\\xf4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1985-05-22T00:00:00", "modifydate": "1985-05-22T15:10:00", "lines": 68, "newlines": 68, "modlines": 0, "user": "YZRDR14"}, "text": "000 PROGRAMS OF UNCERTAIN ORIGIN CONTRIBUTED ANONYMOUSLY\n020 BANK OF AMERICA\n030 BANK OF SCOTLAND\n040 BOOTS\n050 BLAKELANDS COMPUTER SERVICES (VOLKSWAGEN)\n060 B.R.B. DERBY\n070 B.R.B. MARYLEBONE\n080 BRITISH STEEL CORP., CORBY\n090 BRITISH STEEL CORP., PORT TALBOT\n100 C.A.V.\n110 C.I.E.\n120 CO-OP INSURANCE SOCIETY\n130 DEVON COUNTY COUNCIL\n140 EAST MIDLAND ELECTRITY BOARD\n150 C.D.C.\n160 C.T.BOWRING\n170 CARBORUNDUM\n180 COMMERCIAL UNION\n190 HALIFAX BUILDING SOCIETY\n200 HOOVER\n210 I.C.I. (CMS)\n220 I.P.C.\n230 LILLY INDUSTRIES\n250 MIDLAND HOUSEHOLD STORES\n260 METEOROLOGICAL OFFICE\n270 DEPT. OF POSTS AND TELEGRAPH, DUBLIN\n280 B.L.M.C. - ROVER\n290 ROWNTREE - MACKINTOSH\n300 ROYAL BANK OF SCOTLAND\n310 KINGSTON AND SUTTON JCD.\n330 SOUTHERN GAS BOARD\n340 STOCK EXCHANGE\n360 U.D.T.\n370 WEST SUSSEX COUNTY COUNCIL\n380 TRINITY COLLEGE - DUBLIN\n390 AER LINGUS\n400 LOLA\n410 ALLIED BREWERIES\n420 UNILEVER\n430 DUNLOP\n440 BANKERS TRUST\n450 CAMBRIDGE UNIVERSITY\n460 BARCLAYS BANK\n470 SCOTTISH AND NEWCASTLE BREWERIES\n480 LLOYDS BANK\n490 JOSEPH LUCAS\n500 ETERNIT\n510 HAMBRO LIFE\n520 BEECHAMS PRODUCTS\n530 UNIVERSITY OF GOTHENBURG\n540 SUN ALIANCE & LONDON INSURANCE GROUP\n550 ABBEY LIFE ASSURANCE COMPANY\n560 MONSANTO\n570 ROYAL INSURANCE GROUP\n620 STANDARD LIFE\n650 EAGLE STAR\n660 EUROPEAN SPACE AGENCY\n690 SEDGWICK FORBES SERVICES LTD\n700 CIBA-GEIGY(UK)\n710 DERBYSHIRE COUNTY COUNCIL\n720 BOULTON & PAUL\n730 UNITED GLASS\n740 GRIP\n750 MOBIL\n760 CHASE MANHATTAN BANK\n770 LEGAL & GENERAL\n780 TUBE INVESTMENTS\n790 PIRELLI\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALLOCATE": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&MNAME   ALLOCATE &L\n&MNAME   LA    0,&L\n.*       GETMAIN R,LV=(0)\n         GETMAIN R,LV=(0)\n         LR    3,1\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ANUM": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00 \\x00 \\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          001\n&NAME    ANUM                                                           002\n         B     F&SYSNDX+6                                               003\nA&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'                          004\nB&SYSNDX DC    X'C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0'              005\nC&SYSNDX DC    X'C0'                                                    006\n         DC    XL9'00'                                                  007\n         DC    X'CACBCCCDCECFD0'                                        008\n         DC    XL9'00'                                                  009\n         DC    X'DADBDCDDDEDFE0E1'                                      010\n         DC    XL8'00'                                                  011\n         DC    X'EAEBECEDEEEF'                                          012\n         DC    XL10'00'                                                 013\n         DC    X'FAFBFCFDFEFF'                                          014\nX&SYSNDX DC    F'0'                SAVE AREA REGISTER 2                 0141\nD&SYSNDX NC    B&SYSNDX,0(14)                                           015\nE&SYSNDX XC    B&SYSNDX,=20X'C0'                                        016\nF&SYSNDX TRT   0(0,14),C&SYSNDX-192                                     017\n&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO           018\n         MVI   E&SYSNDX+1,X'00'                                         0181\n         MVI   F&SYSNDX+1,X'00'                                         0182\n         BCTR  15,0                                                     0183\n         ST    2,X&SYSNDX          SAVE REGISTER 2                      0184\n         MVC   B&SYSNDX,=20X'C0'   SET MASK TO LOWEST VALID CHAR.LESS 1 019\n         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15  020\n         EX    15,E&SYSNDX         EYECUTE EXCL.OR- DATA LENGTH IN R15  021\n         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON            022\n         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST           023\n         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE         024\nG&SYSNDX LR    14,15               ERROR RTN.SETS R14 AND R15 EQUAL     025\nH&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2                   0251\n         MEND                                                           026\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BEGIN": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x87\\x00\\x87\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 135, "newlines": 135, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    BEGIN &SAVE,&BASE=12,&ID=*\n.*\n.* THE BEGIN MACRO PROVIDES THE FOLLOWING FACILITIES....\n.*   1.  REGISTER SAVING\n.*\n.*       THE SAVE MACRO IS USED TO SAVE REGISTERS 14,12 IN THE SAVE\n.*       AREA ADDRESSED BY REG 13.\n.*   2.  IDENTIFIER.\n.*\n.*       YOU MAY PROVIDE ANY IDENTIFIER (TO HELP FIND THE ENTRY POINT\n.*       IN A DUMP) BY CODING 'ID=STRING OF UP TO 70 CHARS' - THE\n.*       DEFAULT ID IS THE NAME OF THE MACRO OR THE CSECT NAME UNLESS\n.*       YOU CANCEL THE PARAMETER BY CODING 'ID='\n.*   3.  DEFINING BASE REGISTERS.\n.*       YOU MAY PREVENT ANY BASE REGISTER INITIALIZATION BY CODING\n.*       'BASE=NONE', OR SET UP ONE OR MORE BASE REGISTERS BY CODING\n.*       'BASE=(10,11,12...)'.  IF THE BASE PARAMETER IS OMITTED REG 12\n.*       IS INITIALIZED AS A BASE BY DEFAULT.  NOTE THAT YOU CANNOT USE\n.*       SYMBOLIC NAMES FOR THE BASE REGISTERS OTHER THAN THE FIRST.\n.*       E.G. BASE=(R10,11,12) IS VALID BUT 'BASE=(R10,R11,R12) IS NOT\n.*   4.  SAVE AREA PROVISION.\n.*       THIS IS DEFINED BY THE FIRST POSITIONAL PARAMETER.  BY DEFAULT\n.*       A 72 BYTE SAVE AREA IS GENERATED IN THE MACRO EXPANSION.\n.*       YOU MAY ALSO CODE ONE OF.....\n.*       A)  'NOSAVE' CAUSES NO SAVE AREA TO BE GENERATED AND LEAVES\n.*             REG 13 AS AT ENTRY. UNLESS NOSAVE IS CODED REG 13 IS\n.*             ALWAYS SET TO POINT TO THE NEW SAVE AREA.\n.*       B)    IF YOU DEFINE THE SAVE AREA IN YOUR PROGRAM YOU CODE THE\n.*             SAVE AREA NAME E.G. 'BEGIN SAVE'.\n.*             BY CODING 'BEGIN (SAVE,,SAVE)' YOU WILL GENERATE A\n.*             STATEMENT 'USING SAVE,13' TO BE GENERATED AND THIS CAN\n.*             BE A USEFUL WAY OF CREATING A SECOND BASE REGISTER FOR\n.*       WHAT COMES AFTER THE SAVE AREA IN YOUR PROGRAM.\n.*       C)    IF YOU WISH TO ACQUIRE CORE DYNAMICALLY FOR THE SAVE\n.*             AREA BEGIN WILL ISSUE A GETMAIN FOR YOU IF YOU CODE\n.*             'BEGIN DYNAMIC'.  BY DEFAULT A 72 BYTE AREA WILL BE\n.*             ACQUIRED AND REG 13 WILL BE SET TO POINT TO IT.\n.*             IF YOU WISH TO ACQUIRE A LARGER AREA FOR OTHER PURPOSES\n.*             IN ADDITION TO THE SAVE AREA YOU CODE THE TOTAL LENGTH\n.*             AND DSECT NAME FOR THE AREA E.G. ........\n.*             'BEGIN (DYNAMIC,240,DYNAR)'.  THIS EXAMPLE WILL RESULT\n.*             IN A GETMAIN FOR 240 BYTES FROM SUBPOOL 0, REG 13 WILL\n.*             BE SET TO THE ACQUIRED ADDRESS, AND A 'USING DYNAR,13'\n.*             WILL BE GENERATED.\n.*\n.*       FORMAT OF MACRO....\n.* NAME  BEGIN NOSAVE                            OR        (POS PARM 1)\n.*             (SAVEAREA ADDRESS,,DSECT NAME)    OR\n.*             (DYNAMIC,LENGTH,DSECT NAME)\n.*             ,BASE=NONE                        OR        (KEYWORD 1)\n.*             ,BASE=(REGISTER LIST)\n.*             ,ID='CHARACTER STRING'                      (KEYWORD 2)\n.*\n         LCLA  &A(15),&A0,&A1,&R1,&R2\n         LCLC  &GNAME,&C1,&C(5)\n&NAME    SAVE  (14,12),T,&ID       SAVE REGISTERS.\n         AIF   ('&BASE' EQ ''  OR '&BASE'EQ 'NONE').C10\n         BALR  &BASE(1),0          SET FIRST (OR ONLY) BASE REGISTER.\n         AIF   (N'&BASE EQ 1).C1\n&A0      SETA  1\n&A1      SETA  2\n.C18     AIF   (K'&BASE LE (&A1+8)).C2\n&C(&A0)  SETC  '&BASE'(&A1,8)\n&A0      SETA  &A0+1\n&A1      SETA  &A1+8\n         AGO   .C18\n.C2      ANOP\n&C(&A0)  SETC  '&BASE'(&A1,K'&BASE-&A1)\n         USING *,&C(1)&C(2)&C(3)&C(4)&C(5)   DEFINE BASE REGISTER(S).\n&GNAME   SETC  'IHB'.'&SYSNDX'\n&C1      SETC  '&GNAME'.'A'\n&GNAME   EQU   *                   DEFINE BASE REGISTER ORIGIN.\n&A0      SETA  2\n.C4      AIF   (&A0 GT N'&BASE).C3\n&A1      SETA  &BASE(&A0)\n&A(&A1)  SETA  4096*(&A0-1)\n&A0      SETA  &A0+1\n         AGO   .C4\n.C1      USING *,&BASE(1)\n         AGO   .C10\n.C3      ANOP\n&A0      SETA  0\n&R1      SETA  1\n.C11     ANOP\n&R2      SETA  &R1+1\n         AIF   (&A(&R1) EQ 0).C5\n.C7      AIF   (&A(&R2) EQ 0).C6\n&R2      SETA  &R2+1\n         AIF   (&R2 LT 16).C7\n.C6      AIF   (&R1 EQ (&R2-1)).C8\n&A1      SETA  &R2-1\n         LM    &R1,&A1,&GNAME.A+&A0     INITIALISE BASE REGISTER(S).\n         AGO   .C9\n.C8      L     &R1,&GNAME.A+&A0    INITIALISE BASE REGISTER(S).\n.C9      ANOP\n&A0      SETA  &A0+4*(&R2-&R1)\n.C5      AIF   (&R2 GE 16).C10\n&R1      SETA  &R2\n         AGO   .C11\n.C10     AIF   ('&SAVE(1)' EQ '').C12\n         AIF   ('&SAVE' EQ 'NOSAVE').C13\n         AIF   ('&SAVE(1)' EQ 'DYNAMIC').C14\n         LA    15,&SAVE(1)         SET GR15 -> NEW SAVE AREA.\n         AGO   .C15\n.C12     CNOP  0,4                 FORCE ALIGNMENT ON WORD BOUNDARY.\n         BAL   15,*+76             SET GR15-> NEW SAVE AREA.\n         DC    18F'0'              NEW SAVE AREA.\n         AGO   .C15\n.C14     AIF   ('&SAVE(2)' EQ '').C20\n         LA    0,&SAVE(2)(0,0)    SET GR0 = LENGTH OF DYNAMIC AREA.\n         AGO   .C19\n.C20     LA    0,72(0,0)           SET GR0 = LENGTH OF DYNAMIC AREA.\n.C19     GETMAIN R,LV=(0)          OBTAIN DYNAMIC NEW SAVE AREA.\n         LR    15,1                SET GR15 -> NEW SAVE AREA.\n         LM    0,1,20(13)          RESTORE PARAMETER REGISTERS.\n.C15     ST    15,8(13,0)          STORE NSA ADDR. IN LSA.\n         ST    13,4(15,0)          STORE LSA ADDR.IN NSA.\n         LR    13,15               SET GR13 -> NEW SAVE AREA.\n         AIF   ('&SAVE(3)' EQ '').C13\n         USING &SAVE(3),13         DEFINE GR13 AS BASE REGISTER.\n.C13     AIF   (N'&BASE LE 1).EXIT\n         BC    15,&GNAME.B         BRANCH ROUND BASE REGISTER VALUE(S).\n&A0      SETA  1\n.C17     AIF   (&A(&A0) EQ 0).C16\n&C1      DC    A(&GNAME+&A(&A0))   BASE REGISTER VALUE.\n&C1      SETC  ''\n.C16     ANOP\n&A0      SETA  &A0+1\n         AIF   (&A0 LE 15).C17\n&GNAME.B EQU   *\n AIF (&A(13)NE 0 OR &A(15)NE 0 OR(&A(1)NE 0 AND'&SAVE'EQ'DYNAMIC')).E1\n.EXIT    MEXIT\n.E1      MNOTE 12,'***  IHBNNN  INVALID REGISTER SPECIFIED'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BER": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0044\n&NAME    BER   &R                                                       EXMN0045\n&NAME    BCR   8,&R                BR ON EQUAL                          EXMN0046\n         MEND                                                           EXMN0047\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BHR": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0054\n&NAME    BHR   &R                                                       EXMN0055\n&NAME    BCR   2,&R                BR ON HIGH                           EXMN0056\n         MEND                                                           EXMN0057\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BLR": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0049\n&NAME    BLR   &R                                                       EXMN0050\n&NAME    BCR   4,&R                BR ON LOW                            EXMN0051\n         MEND                                                           EXMN0052\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BMR": {"ttr": 533, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0014\n&NAME    BMR   &R                                                       EXMN0015\n&NAME    BCR   4,&R                BR ON MINUS OR MIXED                 EXMN0016\n         MEND                                                           EXMN0017\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BNER": {"ttr": 535, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0029\n&NAME    BNER  &R                                                       EXMN0030\n&NAME    BCR   7,&R                BR ON NOT EQUAL                      EXMN0031\n         MEND                                                           EXMN0032\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BNHR": {"ttr": 537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0039\n&NAME    BNHR  &R                                                       EXMN0040\n&NAME    BCR   13,&R               BR ON NOT HIGH                       EXMN0041\n         MEND                                                           EXMN0042\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BNLR": {"ttr": 539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0034\n&NAME    BNLR  &R                                                       EXMN0035\n&NAME    BCR   11,&R               BR ON NOT LOW                        EXMN0036\n         MEND                                                           EXMN0037\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BNMR": {"ttr": 541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0064\n&NAME    BNMR  &R                                                       EXMN0065\n&NAME    BCR   11,&R               BR ON NOT MINUS                      EXMN0066\n         MEND                                                           EXMN0067\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BNOR": {"ttr": 543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0069\n&NAME    BNOR  &R                                                       EXMN0070\n&NAME    BCR   14,&R               BR IF NOT ONES                       EXMN0071\n         MEND                                                           EXMN0072\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BNPR": {"ttr": 545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0059\n&NAME    BNPR  &R                                                       EXMN0060\n&NAME    BCR   13,&R               BR ON NOT PLUS                       EXMN0061\n         MEND                                                           EXMN0062\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BNZR": {"ttr": 547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0009\n&NAME    BNZR  &R                                                       EXMN0010\n&NAME    BCR   7,&R                BR ON NOT ZERO                       EXMN0011\n         MEND                                                           EXMN0012\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BOR": {"ttr": 549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0019\n&NAME    BOR   &R                                                       EXMN0020\n&NAME    BCR   1,&R                BR ON OVERFLOW OR IF ONES            EXMN0021\n         MEND                                                           EXMN0022\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BPR": {"ttr": 551, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0024\n&NAME    BPR   &R                                                       EXMN0025\n&NAME    BCR   2,&R                BR ON PLUS                           EXMN0026\n         MEND                                                           EXMN0027\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BZR": {"ttr": 553, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          EXMN0004\n&NAME    BZR   &R                                                       EXMN0005\n&NAME    BCR   8,&R                BR ON ZERO                           EXMN0006\n         MEND                                                           EXMN0007\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CANCEL": {"ttr": 555, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x08\\x00\\x08\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    CANCEL\n&NAME    DS    0H\n         MNOTE 0,'CANCEL NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        TO TERMINATE ABNORMALLY USE O.S. 'ABEND' MACRO.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CCB": {"ttr": 557, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x06\\x00\\x06\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    CCB\n&NAME    DS    0H\n         MNOTE 0,'CCB NOT SUPPORTED BY O.S.'\n         PIOCS\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHKPT": {"ttr": 770, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x17\\x00\\x17\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    CHKPT\n&NAME    DS    0H\n         MNOTE 0,'CHKPT VARIES UNDER O.S.'\n         SPACE 2\n*        CHKPT EXISTS UNDER O.S. BUT WITH THE FOLLOWING CHANGES -\n*                   1.  RETURN CODE PASSED IN R15 INSTEAD OF R0 AND MAY\n*                       ALSO INDICATE SUCCESSFUL RESTART.\n*                   2.  NO RESTART ADDRESS SUPPLIED - AUTOMATIC RESTART\n*                       OCCURS ON THE FIRST INSTRUCTION AFTER THE\n*                       CHKPT EXPANSION.\n*                   3.  A DCB ADDRESS SHOULD BE CODED INSTEAD OF\n*                       SYSNNN.\n*                   4.  NO END ADDRESS SUPPLIED - AUTOMATIC DUMP OF\n*                       ENTIRE PARTITION.\n*                   5.  NO T POINTER SUPPLIED - O.S. AUTOMATICALLY\n*                       REPOSITIONS TAPE FILES.\n*                   6.  NO D POINTER SUPPLIED - THIS FUNCTION PERFORMED\n*                       DURING ALLOCATION.\n*                   7.  FILENAME PARAMETER MUCH THE SAME AS DCB ADDRESS\n*                       O.S. LOADS CHKPT ROUTINES AT OPEN TIME.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOSE": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    CLOSE\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'CLOSE MACRO FORMAT VARIES UNDER O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOSEF": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x1b\\x00\\x1b\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    CLOSEF &DCB,&TYPE=,&LIST=NO\n         LCLA  &N,&C\n         PUSH  PRINT\n         AIF   ('&LIST' EQ 'YES').X\n         PRINT OFF\n.X       ANOP\n&N       SETA  N'&DCB\n         AIF   (T'&DCB EQ 'O').ERR1\n         AIF   (T'&TYPE EQ 'O').STD\n&NAME    CLOSE &DCB,TYPE=&TYPE\n         AGO   .FREE\n.STD     ANOP\n&NAME    CLOSE &DCB\n.FREE    AIF   ('&DCB'(1,1) EQ '(').MULTI\n         FREEPOOL &DCB\n         POP   PRINT\n         MEXIT\n.MULTI   ANOP\n&C       SETA  1\n.LOOP    FREEPOOL &DCB(&C)\n&C       SETA  &C+2\n         AIF   (&C LE &N).LOOP\n         POP   PRINT\n         MEXIT\n.ERR1    IHBERMAC 01\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOSER": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    CLOSER\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'CLOSER MACRO NOT SUPPORTED BY O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMRG": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x14\\x00\\x14\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    COMRG\n&NAME    DS    0H\n         MNOTE 0,'COMRG NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        FOR UPSI BYTE USE PARM= IN EXEC STATEMENT,\n*                       OR RETURN CODES (SEE RETURN MACRO).\n*        FOR USER BYTES USE A COMMON DATA SET.\n*                       OR COMMON AREA OF A ROOT MODULE,\n*                       OR RETURN CODES.\n*        FOR DATE USE O.S. MACRO 'TIME' OR,\n*                       GENERAL PURPOSE MODULE GETDAT.\n*        FOR JOB NAME USE PARM= IN THE EXEC STATEMENT OR\n*                       GENERAL PURPOSE MODULE GETJOB.\n*        FOR PROBLEM PROGRAM EXPANSION USE O.S. MACROS.\n*                       'GETMAIN' AND 'FREEMAIN' AND,\n*                       SEE ALSO SUPERVISOR AND DATA MANAGEMENT\n*                       SERVICES MANUAL.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DATE": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DCBEXITS": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DTFALL": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00#\\x00#\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         DTFALL\n         GBLB  &DTFALL1\n         AIF   (&DTFALL1).EXIT\n         SPACE 1\n*        THE O.S. OPERANDS SHOWN BELOW ARE MERELY GUIDELINES.  FULLER\n*        COVERAGE MAY BE FOUND IN THE FOLLOWING -\n*        1.   SUPERVISOR AND DATA MANAGEMENT MACROS MANUAL\n*             DCB MACRO --- PAGES 51-70\n*        2.   JOB CONTROL LANGUAGE REFERENCE MANUAL\n*             DD STATEMENT --- PAGES 105-242\n*        3.   DOS TO OS IMPLEMENTATION GUIDE\n*             GENERAL --- PAGES 111-183\n*             FROM WHICH THE INFORMATION HERE IS EXTRACTED\n*\n*        THE FOLLOWING POINTS SHOULD BE NOTED FOR ALL DTF'S -\n*\n*             A.  DO NOT TRANSCRIBE PARAMETERS LIKE WORKA=\n*                 IOAREA= ETC. INTO THE DCB - DATA MANAGEMENT WILL\n*                 ALLOCATE BUFFER SPACE DYNAMICALLY AT EXECUTION IF\n*                 E.G. BUFNO=, BUFLN= ARE NOT CODED.\n*             B.  AVOID DEVICE DEPENDENT PARAMETERS E.G. PRINTOV=,\n*                 CONTROL= IN DTF'S AND DEVD=, OPTCD= IN DCB'S\n*                 WHEREVER POSSIBLE.\n*             C.  FOR GREATER FLEXIBILITY, CODE PARAMETERS LIKE\n*                 BLKSIZE= IN THE JCL SO THAT MODIFICATIONS CAN BE\n*                 MADE EXTERNALLY.  THE MINIMUM NUMBER OF KEYWORDS\n*                 FOR A DCB IS MACRF=, DDNAME=, DSORG=.\n*             D.  BEWARE DEFAULTS FOR OMITTED PARAMETERS - E.G.\n*                 RECFORM= DEFAULTS TO FIXUNB IN A DTF, WHEREAS\n*                 RECFM= DEFAULTS TO UNDEFINED IN A DCB.\n         SPACE 1\n&DTFALL1 SETB  1\n.EXIT    ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DTFCD": {"ttr": 786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x007\\x007\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 55, "newlines": 55, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    DTFCD &DEVADDR=,&IOAREA1=,&IOAREA2=,&BLKSIZE=,&CONTROL=,      X\n               &CTLCHR=,&SSELECT=,&CRDERR=,&DEVICE=,&EOFADDR=,&IOREG=, X\n               &WORKA=,&MODNAME=,&QUBLKSZ=,&RDONLY=,&SEPASMB=,         X\n               &RECFORM=,&RECSIZE=,&TYPEFLE=\n         DTFALL\n&NAME    DS    0H\n         MNOTE 0,'DTFCD NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        BASIC CODE NECESSARY IS\n*        DCB   DSORG=PS,.....      FOLLOWED BY\n         SPACE 1\n         AIF   (T'&DEVADDR EQ 'O').STEP1\n*        DEVADDR=   ...,VOLUME=    IN THE DD STATEMENT\n.STEP1   AIF   (T'&IOAREA1 EQ 'O').STEP2\n*        IOAREA1=   ...,BUFNO=1,MACRF=(..M..)\n.STEP2   AIF   (T'&IOAREA2 EQU 'O').STEP3\n*        IOAREA2=   ...,BUFNO=2    OR MORE\n.STEP3   AIF   (T'&BLKSIZE EQ 'O').STEP4\n*        BLKSIZE=   ...,BLKSIZE=NNN\n.STEP4   AIF   (T'&CONTROL EQ 'O').STEP5\n*        CONTROL=   ...,MACRF=(..C..)\n.STEP5   AIF   (T'&CTLCHR EQ 'O').STEP6\n*        CTLCHR=    ...,RECFM=(...M/A)\n.STEP6   AIF   (T'&SSELECT EQ 'O').STEP7\n*        SSELECT=   ...,DEVD=(STACK=1/2)\n.STEP7   AIF   (T'&CRDERR EQ 'O').STEP8\n*        CRDERR=    NOT APPLICABLE\n.STEP8   AIF   (T'&DEVICE EQ 'O').STEP9\n*        DEVICE=    ...,UNIT=      IN THE DD STATEMENT\n.STEP9   AIF   (T'&EOFADDR EQ 'O').STEP10\n*        EOFADDR=   ...,EODAD=XXXXXXXX\n.STEP10  AIF   (T'&IOREG EQ 'O').STEP11\n*        IOREG=     ...,MACRF=(...L..)\n.STEP11  AIF   (T'&WORKA EQ 'O').STEP12\n*        WORKA=     ...,MACRF=(..M..)\n.STEP12  AIF   (T'&MODNAME EQ 'O').STEP13\n*        MODNAME=   NOT APPLICABLE\n.STEP13  AIF   (T'&QUBLKSZ EQ 'O').STEP14\n*        QUBLKSZ=   NOT APPLICABLE\n.STEP14  AIF   (T'&RDONLY EQ 'O').STEP15\n*        RDONLY=    NOT APPLICABLE\n.STEP15  AIF   (T'&SEPASMB EQ 'O').STEP16\n*        SEPASMB=   USER MUST CODE THE DCB AS A CSECT IF REQUIRED\n.STEP16  AIF   (T'&RECFORM EQ 'O').STEP17\n*        RECFORM=   ...,RECFM=(...)\n.STEP17  AIF   (T'&RECSIZE EQ 'O').STEP18\n*        RECSIZE=   ...,LRECL=NN\n.STEP18  AIF   (T'&TYPEFLE EQ 'O').STEP19\n*        TYPEFLE=   ...,DEVD=RD/PC,MACRF=(G/P..)\n*                   NB THIS ELIMINATES DEVICE INDEPENDENCE .. CODE\n*                   DEVD=DA IF DASD SYSIN & SYSOUT QUEUES TO BE USED.\n.STEP19  ANOP\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DTFDA": {"ttr": 788, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00N\\x00N\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 78, "newlines": 78, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    DTFDA &BLKSIZE=,&DEVICE=,&ERRBYTE=,&IOAREA1=,&TYPEFLE=,       X\n               &AFTER=,&CONTROL=,&DEVADDR=,&ERREXT=,&HOLD=,&DSKXTNT=,  X\n               &IDLOC=,&KEYARG=,&KEYLEN=,&LABADDR=,&MODNAME=,&RDONLY=, X\n               &READKEY=,&READID,=&WRITEID=,&WRITEKY=,&RECFORM=,       X\n               &RECSIZE=,&RELTYPE=,&SEPASMB=,&SRCHM=,&TRLBL=,&VERIFY=, X\n               &XTNTXIT=\n         DTFALL\n&NAME    DS    0H\n         MNOTE 0,'DTFDA NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        BASIC CODE NECESSARY IS\n*        DCB   DSORG=DA,.....      FOLLOWED BY\n         SPACE 1\n         AIF   (T'&BLKSIZE EQ 'O').STEP1\n*        BLKSIZE=   ...,BLKSIZE=NNN\n.STEP1   AIF   (T'&DEVICE EQ 'O').STEP2\n*        DEVICE=    ...,UNIT=      IN THE DD STATEMENT\n.STEP2   AIF   (T'&ERRBYTE EQ 'O').STEP3\n*        ERRBYTE=   THIS INFORMATION AVAILABLE IN SYNAD ROUTINE\n.STEP3   AIF   (T'&IOAREA1 EQ 'O').STEP4\n*        IOAREA1=   THIS ADDRESS IS SPECIFIED IN READ/WRITE MACROS\n.STEP4   AIF   (T'&TYPEFLE EQ 'O').STEP5\n*        TYPEFLE=   THIS IS AN OPTION OF THE OPEN MACRO UNDER O.S.\n.STEP5   AIF   (T'&AFTER EQ 'O').STEP6\n*        AFTER=     NO O.S. EQUIVALENT\n*                   CODE DISP=NEW AND RUN PREFORMAT PROGRAM\n.STEP6   AIF   (T'&CONTROL EQ 'O').STEP7\n*        CONTROL=   NO O.S. EQUIVALENT\n.STEP7   AIF   (T'&DEVADDR EQ 'O').STEP8\n*        DEVADDR=   ...,VOLUME=    IN THE DD STATEMENT\n.STEP8   AIF   (T'&ERREXT EQ 'O').STEP9\n*        ERREXT=    ...,SYNAD=XXXXXXXX\n.STEP9   AIF   (T'&HOLD EQ 'O').STEP10\n*        HOLD=      USE O.S. ENQ/DEQ LOGIC FOR SPECIFIC RESOURCES\n.STEP10  AIF   (T'&DSKXTNT EQ 'O').STEP11\n*        DSKXTNT=   ...,OPTCD=(..R..)\n.STEP11  AIF   (T'&IDLOC EQ 'O').STEP12\n*        IDLOC=     USE TYPECODE AND BLOCK ADDRESS OPTIONS IN READ/\n*                   WRITE MACROS.  FORMAT OF FEEDBACK DEPENDS ON\n*                   OPTCD= IN DCB.\n.STEP12  AIF   (T'&KEYARG EQ 'O').STEP13\n*        KEYARG=    USE KEY ADDRESS IN READ/WRITE MACROS\n.STEP13  AIF   (T'&KEYLEN EQ 'O').STEP14\n*        KEYLEN=    ...,KEYLEN=NNN\n.STEP14  AIF   (T'&LABADDR EQ 'O').STEP15\n*        LABADDR=   ...,EXLST=XXXXXXXX\n.STEP15  AIF   (T'&MODNAME EQ 'O').STEP16\n*        MODNAME=   NOT APPLICABLE\n.STEP16  AIF   (T'&RDONLY EQ 'O').STEP17\n*        RDONLY=    NOT APPLICABLE\n.STEP17  AIF   (T'&READKEY EQ 'O').STEP18\n*        READKEY=   ...,MACRF=(..RK..)\n.STEP18  AIF   (T'&READID EQ 'O').STEP19\n*        READID=    ...,MACRF=(..RI..)\n.STEP19  AIF   (T'&WRITEID EQ 'O').STEP20\n*        WRITEID=   ...,MACRF=(..WI..)\n.STEP20  AIF   (T'&WRITEKY EQ 'O').STEP21\n*        WRITEKY=   ...,MACRF=(..WK..)\n.STEP21  AIF   (T'&RECFORM EQ 'O').STEP22\n*        RECFORM=   ...,RECFM=XXX\n.STEP22  AIF   (T'&RECSIZE EQ 'O').STEP23\n*        RECSIZE=   USE LENGTH IN READ/WRITE MACROS\n.STEP23  AIF   (T'&RELTYPE EQ 'O').STEP24\n*        RELTYPE=   NO EQUIVALENT FOR DEC\n.STEP24  AIF   (T'&SEPASMB EQ 'O').STEP25\n*        SEPASMB=   USER MUST CODE THE DCB AS A CSECT IF REQUIRED\n.STEP25  AIF   (T'&SRCHM EQ 'O').STEP26\n*        SRCHM=     ...,LIMCT=X,OPTCD=E\n.STEP26  AIF   (T'&TRLBL EQ 'O').STEP27\n*        TRLBL=     ...,EXLST=XXXXXXXX\n.STEP27  AIF   (T'&VERIFY EQ 'O').STEP28\n*        VERIFY=    ...,OPTCD=W\n.STEP28  AIF   (T'&XTNTXIT EQ 'O').STEP29\n*        XTNTXIT=   NO EQUIVALENT\n.STEP29  ANOP\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DTFIS": {"ttr": 791, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00R\\x00R\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 82, "newlines": 82, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    DTFIS &DSKXTNT=,&IOROUT=,&KEYLEN=,&NRECDS=,&RECFORM=,         X\n               &RECSIZE=,&CYLOFL=,&DEVICE=,&ERREXT=,&MSTIND=,          X\n               &INDAREA=,&INDSIZE=,&INDSKIP=,&IOAREA2,&WORKL=,&WORKS=, X\n               &WORKR=,&IOAREAL=,&IOAREAR=,&IOAREAS=,&IOREG=,&IOSIZE=, X\n               &HINDEX=,&KEYARG=,&KEYLOC=,&TYPEFLE=,&VERIFY=,          X\n               &MODNAME=,&RDONLY=,&SEPASMB=\n         DTFALL\n&NAME    DS    0H\n         MNOTE 0,'DTFIS NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        BASIC CODE NECESSARY IS\n*        DCB   DSORG=IS,.....      FOLLOWED BY\n         SPACE 1\n         AIF   (T'&DSKXTNT EQ 'O').STEP1\n*        DSKXTNT=   ...,SPACE=     IN THE DD STATEMENT\n.STEP1   AIF   (T'&IOROUT EQ 'O').STEP2\n*        IOROUT=    ...,MACRF=     VARIOUS OPTIONS\n*                   ALSO USE OPEN MACRO OPTIONS\n.STEP2   AIF   (T'&KEYLEN EQ 'O').STEP3\n*        KEYLEN=    ...,KEYLEN=NN\n.STEP3   AIF   (T'&NRECDS EQ 'O').STEP4\n*        NRECDS=    ...,BLKSIZE=NNN\n.STEP4   AIF   (T'&RECFORM EQ 'O').STEP5\n*        RECFORM=   ...,RECFM=XXX\n.STEP5   AIF   (T'&RECSIZE EQ 'O').STEP6\n*        RECSIZE=   ...,LRECL=NNN\n.STEP6   AIF   (T'&CYLOFL EQ 'O').STEP7\n*        CYLOFL=    ...,CYLOFL=NN\n.STEP7   AIF   (T'&DEVICE EQ 'O').STEP8\n*        DEVICE=    ...,UNIT=      IN THE DD STATEMENT\n.STEP8   AIF   (T'&ERREXT EQ 'O').STEP9\n*        ERREXT=    ...,SYNAD=XXXXXXXX\n.STEP9   AIF   (T'&MSTIND EQ 'O').STEP10\n*        MSTIND=    ...,OPTCD=M,NTM=NN\n.STEP10  AIF   (T'&INDAREA EQ 'O').STEP11\n*        INDAREA=   ...,MSHI=XXXXXXXX\n.STEP11  AIF   (T'&INDSIZE EQ 'O').STEP12\n*        INDSIZE=   ...,SMSI=NNN\n.STEP12  AIF   (T'&INDSKIP EQ 'O').STEP13\n*        INDSKIP=   NO EQUIVALENT\n.STEP13  AIF   (T'&IOAREA2 EQ 'O'E.STEP14\n*        IOAREA2=   ...,BUFNO=(BLOCKS PER TRACK + 1)\n.STEP14  AIF   (T'&WORKL NE 'O').STEP15\n         AIF   (T'&WORKS NE 'O').STEP15\n         AIF   (T'&WORKR EQ 'O').STEP16\n.STEP15  ANOP\n*        WORKL=  *\n*        WORKS=  * ...,MACRF=(..M..)\n*        WORKR=  *\n.STEP16  AIF   (T'&IOAREAL NE 'O').STEP17\n         AIF   (T'&IOAREAR NE 'O').STEP17\n         AIF   (T'&IOAREAS NE 'O').STEP18\n.STEP17  ANOP\n*        IOAREAL=*\n*        IOAREAR= * ...,BUFNO=1,MACRF=(..L..)\n*        IOAREAS=*\n.STEP18  AIF   (T'&IOREG EQ 'O').STEP19\n*        IOREG=     ...,MACRF=(..L..)\n.STEP19  AIF   (T'&IOSIZE EQ 'O').STEP20\n*        IOSIZE=    ...,MSWA=XXXXXXXX,SMSW=NNN\n.STEP20  AIF   (T'&HINDEX EQ 'O').STEP21\n*        HINDEX=    ...,UNIT=      IN THE DD STATEMENT\n.STEP21  AIF   (T'&KEYARG EQ 'O').STEP22\n*        KEYARG=    SEQUENTIAL RETRIEVAL...SPECIFY IN SETL MACRO\n*                   RANDOM RETRIEVAL...SPECIFY IN READ/WRITE MACROS\n.STEP22  AIF   (T'&KEYLOC EQ 'O').STEP23\n*        KEYLOC=    ...,BKP=N\n.STEP23  AIF   (T'&TYPEFLE EQ 'O').STEP24\n*        TYPEFLE=   ...,MACRF=     VARIOUS OPTIONS\n*                   ALSO USE OPEN MACRO OPTIONS\n.STEP24  AIF   (T'&VERIFY EQ 'O').STEP25\n*        VERIFY=    ...,OPTCD=W    (NOT VALID FOR RANDOM ADDRESSING)\n.STEP25  AIF   (T'&MODNAME EQ 'O').STEP26\n*        MODNAME=   NOT APPLICABLE\n.STEP26  AIF   (T'&RDONLY EQ 'O').STEP27\n*        RDONLY=    NOT APPLICABLE\n.STEP27  AIF   (T'&SEPASMB EQ 'O').STEP28\n*        SEPASMB=   USER MUST CODE THE DCB AS A CSECT IF REQUIRED\n.STEP28  ANOP\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DTFMT": {"ttr": 794, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00D\\x00D\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 68, "newlines": 68, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    DTFMT &BLKSIZE=,&DEVADDR=,&EOFADDR=,&FILABL=,&IOAREA1=,       X\n               &IOAREA2=,&CKPTREC=,&ERROPT=,&READ=,&IOREG=,&WORKA=,    X\n               &LABADDR=,&MODNAME=,&HDRINFO=,&RDONLY=,&RECFORM=,       X\n               &RECSIZE=,&REWIND=,&SEPASMB=,&TPMARK=,&TYPEFLE=,        X\n               &NOTEPNT=,&VARBLD=,&WLRERR=\n         DTFALL\n&NAME    DS    0H\n         MNOTE 0,'DTFMT NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        BASIC CODE NECESSARY IS\n*        DCB   DSORG=PS,.....      FOLLOWED BY\n         SPACE 1\n         AIF   (T'&BLKSIZE EQ 'O').STEP1\n*        BLKSIZE=   ...,BLKSIZE=NNN\n.STEP1   AIF   (T'&DEVADDR EQ 'O').STEP2\n*        DEVADDR=   ...,VOLUME=    IN THE DD STATEMENT\n.STEP2   AIF   (T'&EOFADDR EQ 'O').STEP3\n*        EOFADDR=   ...,EODAD=XXXXXXXX\n.STEP3   AIF   (T'&FILABL EQ 'O').STEP4\n*        FILABL=    ...,LABEL=     IN THE DD STATEMENT\n.STEP4   AIF   (T'&IOAREA1 EQ 'O').STEP5\n*        IOAREA1=   ...,BUFNO=1,MACRF=(..M..)\n.STEP5   AIF   (T'&IOAREA2 EQ 'O').STEP6\n*        IOAREA2=   ...,BUFNO=2    OR MORE\n.STEP6   AIF   (T'&CKPTREC EQ 'O').STEP7\n*        CKPTREC=   INTERSPERSED CHKPT RECORDS NOT ALLOWED BY O.S.\n.STEP7   AIF   (T'&ERROPT EQ 'O').STEP8\n*        ERROPT=    ...,EROPT=ACC/SKP/ABE    FOR IGNORE OR SKIP\n*                   ...,SYNAD=XXXXXXXX       FOR USER HANDLING ROUTINE\n.STEP8   AIF   (T'&READ EQ 'O').STEP9\n*        READ=      THIS IS AN OPTION OF THE OPEN MACRO UNDER O.S.\n.STEP9   AIF   (T'&IOREG EQ 'O').STEP10\n*        IOREG=     ...,MACRF=(..L..)\n.STEP10  AIF   (T'&WORKA EQ 'O').STEP11\n*        WORKA=     ...,MACRF=(..M..)\n.STEP11  AIF   (T'&LABADDR EQ 'O').STEP12\n*        LABADDR=   ...,EXLST=XXXXXXXX       FOR STANDARD LABELS\n*                   ...,LABEL=(,SUL)         (IN THE DD STATEMENT)\n*                   FOR NON-STANDARD LABELS, SEE SYSTEMS\n.STEP12  AIF   (T'&MODNAME EQ 'O').STEP13\n*        MODNAME=   NOT APPLICABLE\n.STEP13  AIF   (T'&HDRINFO EQ 'O').STEP14\n*        HDRINFO=   NOT APPLICABLE\n.STEP14  AIF   (T'&RDONLY EQ 'O').STEP15\n*        RDONLY=    NOT APPLICABLE\n.STEP15  AIF   (T'&RECFORM EQ 'O').STEP16\n*        RECFORM=   ...,RECFM=XXX\n.STEP16  AIF   (T'&RECSIZE EQ 'O').STEP17\n*        RECSIZE=   ...,LRECL=NNN\n.STEP17  AIF   (T'&REWIND EQ 'O').STEP18\n*        REWIND=    THIS IS AN OPTION OF THE OPEN MACRO UNDER O.S.\n.STEP18  AIF   (T'&SEPASMB EQ 'O').STEP19\n*        SEPASMB=   USER MUST CODE THE DCB AS A CSECT IF REQUIRED\n.STEP19  AIF   (T'&TPMARK EQ 'O').STEP20\n*        TPMARK=    THIS IS AN O.S. STANDARD FEATURE  I.E. ALWAYS 'YES'\n.STEP20  AIF   (T'&TYPEFLE EQ 'O').STEP21\n*        TYPEFLE=   ...,MACRF=(G/P...)\n*                   ALSO CODE INPUT OR OUTPUT IN OPEN MACRO\n.STEP21  AIF   (T'&NOTEPNT EQ 'O').STEP22\n*        NOTEPNT=   ...,MACRF=(RP,WP)\n.STEP22  AIF   (T'&VARBLD EQ 'O').STEP23\n*        VARBLD=    CODE (L'RECORD+4) IN LRECL FIELD OF DCB\n.STEP23  AIF   (T'&WLRERR EQ 'O').STEP24\n*        WLRERR=    ...,SYNAD=XXXXXXXX\n.STEP24  ANOP\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DTFPR": {"ttr": 796, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x001\\x001\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 49, "newlines": 49, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    DTFPR &DEVADDR=,&IOAREA1=,&IOAREA2=,&BLKSIZE=,&CONTROL=,      X\n               &CRLCHR=,&DEVICE=,&IOREG=,&MODNAME=,&PRINTOV=,&RDONLY=, X\n               &RECFORM=,&RECSIZE=,&SEPASMB=,&STLIST=,&UCS=,&WORKA=\n         DTFALL\n&NAME    DS    0H\n         MNOTE 0,'DTFPR NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        BASIC CODE NECESSARY IS\n*        DCB   DSORG=PS,.....      FOLLOWED BY\n         SPACE 1\n         AIF   (T'&DEVADDR EQ 'O').STEP1\n*        DEVADDR=   ...,UNIT=      IN THE DD STATEMENT\n.STEP1   AIF   (T'&IOAREA1 EQ 'O').STEP2\n*        IOAREA1=   ...,BUFNO=1,MACRF=(..M..)\n.STEP2   AIF   (T'&IOAREA2 EQ 'O').STEP3\n*        IOAREA2=   ...,BUFNO=2    OR MORE\n.STEP3   AIF   (T'&BLKSIZE EQ 'O').STEP4\n*        BLKSIZE=   ...,BLKSIZE=NN\n.STEP4   AIF   (T'&CONTROL EQ 'O').STEP5\n*        CONTROL=   ...,MACRF=(PC) AND ALSO\n*                   ...,UNIT=      IN THE DD STATEMENT\n.STEP5   AIF   (T'&CRLCHR EQ 'O').STEP6\n*        CRLCHR=    ...,RECFM=(..A/M)\n.STEP6   AIF   (T'&DEVICE EQ 'O').STEP7\n*        DEVICE=    ...,UNIT=      IN THE DD STATEMENT\n.STEP7   AIF   (T'&IOREG EQ 'O').STEP8\n*        IOREG=     ...,MACRF=(..L..)\n.STEP8   AIF   (T'&MODNAME EQ 'O').STEP9\n*        MODNAME=   NOT APPLICABLE\n.STEP9   AIF   (T'&PRINTOV EQ 'O').STEP10\n*        PRINTOV=   USE PRTOV MACRO\n.STEP10  AIF   (T'&RDONLY EQ 'O').STEP11\n*        RDONLY=    NOT APPLICABLE\n.STEP11  AIF   (T'&RECFORM EQ 'O').STEP12\n*        RECFORM=   ...,RECFM=(...)\n.STEP12  AIF   (T'&RECSIZE EQ 'O').STEP13\n*        RECSIZE=   ...,LRECL=NN\n.STEP13  AIF   (T'&SEPASMB EQ 'O').STEP14\n*        SEPASMB=   USER MUST CODE THE DCB AS A CSECT IF REQUIRED\n.STEP14  AIF   (T'&STLIST EQ 'O').STEP15\n*        STLIST=    NOT APPLICABLE\n.STEP15  AIF   (T'&UCS EQ 'O').STEP16\n*        UCS=       ...,OPTCD=(..U..)\n.STEP16  AIF   (T'&WORKA EQ 'O').STEP17\n*        WORKA=     ...,MACRF=(..M..)\n.STEP17  ANOP\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DTFSD": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00E\\x00E\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 69, "newlines": 69, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    DTFSD &BLKSIZE=,&EOFADDR=,&IOAREA1=,&IOAREA2=,&IOREG=,        X\n               &RECFORM=,&RECSIZE=,&CONTROL=,&DELETFL=,&DEVADDR=,      X\n               &DEVICE=,&ERROPT=,&WLRERR=,&WORKA=,&VARBLD=,&HOLD=,     X\n               &MODNAME=,&RDONLY=,&SEPASMB=,&TRUNC=,&TYPEFLE=,         X\n               &UPDATE=,&VERIFY=,&LABADDR,&NOTEPNT=\n         DTFALL\n&NAME    DS    0H\n         MNOTE 0,'DTFSD NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        BASIC CODE NECESSARY IS\n*        DCB   DSORG=PS,.....      FOLLOWED BY\n         SPACE 1\n         AIF   (T'&BLKSIZE EQ 'O').STEP1\n*        BLKSIZE=   ...,BLKSIZE=NN\n.STEP1   AIF   (T'&EOFADDR EQ 'O').STEP2\n*        EOFADDR=   ...,EODAD=XXXXXXXX\n.STEP2   AIF   (T'&IOAREA1 EQ 'O').STEP3\n*        IOAREA1=   ...,BUFNO=1,MACRF=(..M..)\n.STEP3   AIF   (T'&IOAREA2 EQ 'O').STEP4\n*        IOAREA2=   ...,BUFNO=2    OR MORE\n.STEP4   AIF   (T'&IOREG EQ 'O').STEP5\n*        IOREG=     ...,MACRF=(..L..)\n.STEP5   AIF   (T'&RECFORM EQ HO').STEP6\n*        RECFORM=   ...,RECFM=XXX\n.STEP6   AIF   (T'&RECSIZE EQ 'O').STEP7\n*        RECSIZE=   ...,LRECL=NNN\n.STEP7   AIF   (T'&CONTROL EQ 'O').STEP8\n*        CONTROL=   NOT REQUIRED\n.STEP8   AIF   (T'&DELETFL EQ 'O').STEP9\n*        DELETFL=   ...,DISP=      IN THE DD STATEMENT\n.STEP9   AIF   (T'&DEVADDR EQ 'O').STEP10\n*        DEVADDR=   ...,UNIT=      IN THE DD STATEMENT\n.STEP10  AIF   (T'&DEVICE EQ 'O').STEP11\n*        DEVICE=    ...,UNIT=      IN THE DD STATEMENT\n.STEP11  AIF   (T'&ERROPT EQ 'O').STEP12\n*        ERROPT=    ...,EROPT=ACC/SKP        FOR IGNORE OR SKIP (QSAM)\n*                   ...,SYNAD=XXXXXXXX       FOR USER HANDLING ROUTINE\n.STEP12  AIF   (T'&WLRERR EQ 'O').STEP13\n*        WLRERR=    ...,SYNAD=XXXXXXXX\n.STEP13  AIF   (T'&WORKA EQ 'O').STEP14\n*        WORKA=     ...,MACRF=(..M..)\n.STEP14  AIF   (T'&VARBLD EQ 'O').STEP15\n*        VARBLD=    CODE (L'RECORD+4) IN LRECL FIELD OF DCB\n.STEP15  AIF   (T'&HOLD EQ 'O').STEP16\n*        HOLD=      USE O.S. ENQ/DEQ LOGIC FOR SPECIFIC RESOURCES\n.STEP16  AIF   (T'&MODNAME EQ 'O').STEP17\n*        MODNAME=   NOT APPLICABLE\n.STEP17  AIF   (T'&RDONLY EQ 'O').STEP18\n*        RDONLY=    NOT APPLICABLE\n.STEP19  AIF   (T'&SEPASMB EQ 'O').STEP20\n*        SEPASMB=   USER MUST CODE THE DCB AS A CSECT IF REQUIRED\n.STEP20  AIF   (T'&TRUNC EQ 'O').STEP21\n*        TRUNC=     TRUNCATED BLOCKS ASSUMED UNLESS RECFM=(...S) CODED\n.STEP21  AIF   (T'&TYPEFLE EQ 'O').STEP22\n*        TYPEFLE=   ...,MACRF=(G/P...)\n*                   ALSO CODE INPUT OT OUTPUT IN OPEN MACRO\n.STEP22  AIF   (T'&UPDATE EQ 'O').STEP23\n*        UPDATE=    ...,MACRF=(G/R...,P/W...)\n*                   ALSO CODE UPDATE IN OPEN MACRO FOR NON-WORK FILES\n.STEP23  AIF   (T'&VERIFY EQ 'O').STEP24\n*        VERIFY=    ...,OPTCD=W\n.STEP24  AIF   (T'&LABADDR EQ 'O').STEP25\n*        LABADDR=   ...,EXIST=XXXXXXXX\n.STEP25  AIF   (T'&NOTEPNT EQ 'O').STEP26\n*        NOTEPNT=   ...,MACRF=(..P..)\n.STEP26  ANOP\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ENDFL": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x06\\x00\\x06\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    ENDFL\n         SPACE\n         MNOTE 0,'ENDFL  MACRO NOT SUPPORTED BY O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ENTER": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\xaf\\x00\\xaf\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 175, "newlines": 175, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    ENTER &B1,&B2,&ENT=,&RENT=NO,&EXTENT=,&XTRN=,&BIT=NO,&EQU=NO, X\n               &SP=0,&SA=72,&EC=YES\n         GBLA  &#SA,&#SP\n         GBLB  &#RENT\n         GBLC  &SAVE\n         LCLA  &R1,&R2,&K,&Q,&A\n         LCLB  &B,&SW(2)\n         LCLC  &N\n         AIF   ('&SA' NE 'NO').ENT1\n&SW(1)   SETB  1\n.ENT1    AIF   ('&EC' EQ 'YES').ENT2\n&SW(2)   SETB  1\n.ENT2    AIF   (&SW(1)).ENT3\n&#SA     SETA  &SA\n&SAVE    SETC  'SAVE&SYSNDX'\n.ENT3    ANOP\n&N       SETC  '$PRIVATE'\n&R1      SETA  13\n&R2      SETA  13\n         AIF   (T'&NAME EQ 'O').A1\n&K       SETA  K'&NAME\n&N       SETC  '&NAME'\n.A1      AIF   (T'&B2 EQ 'O').A2\n&R2      SETA  &B2\n.A2      AIF   (T'&B1 EQ 'O').A3\n&R1      SETA  &B1\n         AGO   .A4\n.A3      ANOP\n.A4      AIF   (&R1 LT 2 OR &R1 GT 13).ERR2\n         AIF   (&R2 LT 2 OR &R2 GT 13).ERR2\n&N       CSECT\n         AIF   ('&EQU' EQ 'NO').S\n         REQU\n.S       AIF   ('&BIT' EQ 'NO').T\n         BEQU\n.T       ANOP\n         AIF   (T'&ENT EQ 'O').Q1\n&Q       SETA  N'&ENT\n         AIF   ('&ENT'(1,1) NE '(').SPEC\n&A       SETA  1\n.Q2      ANOP\n&ENT(&A) EQU   *\n         ENTRY &ENT(&A)\n&A       SETA  &A+1\n         AIF   (&A GT &Q).Q1\n         AGO   .Q2\n.SPEC    ANOP\n&ENT     EQU   *\n         ENTRY &ENT\n.Q1      AIF   (T'&EXTENT EQ 'O').Q3\n&Q       SETA  N'&EXTENT\n         AIF   ('&EXTENT'(1,1) NE '(').SPEC2\n&A       SETA  1\n.Q4      ANOP\n         ENTRY &EXTENT(&A)\n&A       SETA  &A+1\n         AIF   (&A GT &Q).Q3\n         AGO   .Q4\n.SPEC2   ENTRY &EXTENT\n.Q3      AIF   (T'&XTRN EQ 'O').Q5\n&Q       SETA  N'&XTRN\n         AIF   ('&XTRN'(1,1) NE '(').SPEC3\n&A       SETA  1\n.Q6      ANOP\n         EXTRN &XTRN(&A)\n&A       SETA  &A+1\n         AIF   (&A GT &Q).Q5\n         AGO   .Q6\n.SPEC3   EXTRN &XTRN\n.Q5      ANOP\n         USING *,15\n         STM   14,12,12(13)        SAVE REGS\n         AIF   ('&RENT' EQ 'YES').RTYPE\n         AIF   (&SW(1)).ENT6\n         LR    14,13               SAVE HSA ADDRESS\n.ENT6    AIF   (&SW(2)).X2\n         B     B&SYSNDX            BRANCH ROUND CONSTANTS\n         DC    H'&K'\n         AIF   (&K EQ 0).X1\n         DC    CL8'&N'             EYECATCHER\n         AGO   .X2\n.X1      DC    CL8'NONAME'         PC EYECATCHER\n.X2      ANOP\n         AIF   (NOT &SW(1)).ENT7\n         AIF   (&SW(2)).ENT4\nB&SYSNDX DS    0H\n         AGO   .ENT4\n.ENT7    ANOP\nB&SYSNDX BAL   13,A&SYSNDX         BRANCH AROUND SAVE AREA\n         AIF   (&R1 NE 13).A5\n         AIF   (T'&B2 NE 'O').Z1\n         USING *,13\n         AGO   .Z2\n.Z1      USING *,13,&R2\n&B       SETB  1\n.Z2      DROP  15\n.A5      ANOP\n&SAVE    DS    ((&#SA+3)/4)F       SAVE AREA\n         CNOP  0,4\nA&SYSNDX EQU   *\n.ENT4    AIF   (NOT &SW(1)).ENT5\n         AIF   (T'&B1 EQ 'O').RT8\n         AIF   (&R1 EQ 13).ERR5\n.ENT5    ANOP\n         AIF   (&R1 EQ 13).A6\n         BALR  &R1,0               LOAD BASE REGISTER\n         AIF   (T'&B2 EQ 'O').A7\n         USING *,&R1,&R2\n         DROP  15\n         AGO   .A8\n.A7      ANOP\n         USING *,&R1\n         DROP  15\n         AGO   .A6\n.A8      LA    &R2,2048(0,&R1)     LOAD SECOND\n         LA    &R2,2048(0,&R2)        BASE REGISTER\n&B       SETB  0\n.A6      AIF   (&B).A8\n         AIF   (&SW(1)).RT8\n         AIF   (&#SA LT 8).ERR6\n         ST    13,8(0,14)          FORWARD POINTER\n         ST    14,4(0,13)          BACKWARD POINTER\n         MEXIT\n.RTYPE   ANOP\n&#RENT   SETB  1\n&#SP     SETA  &SP\n         AIF   (T'&B1 EQ 'O').ERR3\n         AIF   ('&B1' EQ '13').ERR4\n.RT9     AIF   ('&SA' EQ 'NO').RT1\n&#SA     SETA  &SA\n         LR    14,13               SAVE HSA ADDRESS\n         GETMAIN  R,LV=&SA,SP=&SP  GET SAVE AREA STORAGE\n         LR    13,1                LOAD SAVE AREA ADDRESS\n         ST    13,8(0,14)          FORWARD POINTER\n         ST    14,4(0,13)          BACKWARD POINTER\n         LM    14,1,12(14)         RESTORE LINKAGE REGISTERS\n.RT1     B     R&SYSNDX            BRANCH ROUND CONSTANTS\n         DC    H'&K'\n         AIF   (&K EQ 0).RT2\n         DC    CL8'&N'             EYECATCHER\n         AGO   .RT3\n.RT2     DC    CL8'NONAMER'        PC EYECATCHER\n.RT3     AIF   (T'&B1 EQ 'O').RT4\n         AIF   ('&B1' EQ '13').RT10\nR&SYSNDX BALR  &B1,0\n         AIF   (T'&B2 EQ 'O').RT5\n         USING *,&B1,&B2\n         LA    &B2,2048(0,&B1)     LOAD SECOND\n         LA    &B2,2048(0,&B2)       BASE REGISTER\n         AGO   .RT7\n.RT5     USING *,&B1\n.RT7     DROP  15\n         AGO   .RT6\n.RT10    AIF   (T'&B2 EQ 'O').RT4\n         DROP  15\n         USING &N,15,&B2\nR&SYSNDX LA    &B2,2048(0,15)\n         LA    &B2,2048(0,&B2)\n         AGO   .RT6\n.RT4     ANOP\nR&SYSNDX EQU   *\n.RT6     AIF   ('&SA' EQ 'NO').RT8\n.RT8     MEXIT\n.ERR2    MNOTE 12,'INVALID BASE REGISTER ASSIGNMENT'\n         MEXIT\n.ERR3    MNOTE *,'NO BASE REGISTER ASSIGNED - 15 ASSUMED'\n         AGO   .RT9\n.ERR4    MNOTE *,'REG 13 INVALID AS BASE - REG 15 ASSUMED'\n         AGO   .RT9\n.ERR5    MNOTE *,'REG 13 INVALID AS BASE - REG 15 ASSUMED'\n         AGO   .RT8\n.ERR6    MNOTE 8,'SAVE AREA IS TOO SMALL FOR POINTERS'\n         AGO   .RT8\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EOJ": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x0e\\x00\\x0e\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 14, "newlines": 14, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    EOJ\n&NAME    DS    0H\n         MNOTE 0,'EOJ NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        TO RETURN CONTROL TO THE OPERATING SYSTEM, THE MACROS\n*                       'RETURN' OR 'WAYOUT' MUST BE ISSUED AT\n*                       THE SAME CALLING LEVEL AT WHICH THE USER\n*                       PROGRAM WAS ENTERED  I.E. THE MAINLINE MODULE.\n*                       NOTE THAT CALLS TO THE MODULE EOJ1 WILL NOT\n*                       TERMINATE PROCESSING - RETURN OR WAYOUT IS\n*                       REQUIRED AFTER THE CALL STATEMENT.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EQUREG": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x18\\x00\\x18\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         EQUREG\n         GBLB  &EQUREG\n         AIF   (&EQUREG).ERROR\n&EQUREG  SETB  1\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         MEXIT\n.ERROR   MNOTE *,'EQUREG MACRO ALREADY ISSUED'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ESETL": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    ESETL\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'ESETL MACRO FORMAT VARIES UNDER O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXCP": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    EXCP\n&NAME    DS    0H\n         MNOTE 0,'EXCP VARIES UNDER O.S.'\n         PIOCS\n         MEND\n<>       ENDUP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXIT": {"ttr": 1041, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         EXIT\n         BR    14\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FETCH": {"ttr": 1043, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x0b\\x00\\x0b\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 11, "newlines": 11, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    FETCH\n&NAME    DS    0H\n         MNOTE 0,'FETCH NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        FOR TRANSFER OF CONTROL USE O.S. MACROS\n*                       'LINK' AND 'XCTL' AND,\n*                       SEE ALSO SUPERVISOR AND DATA MANAGEMENT\n*                       SERVICES MANUAL.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FINDUCB": {"ttr": 1045, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FIX": {"ttr": 1047, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00Q\\x00Q\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 81, "newlines": 81, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    FIX   &FWD,&FP=YES\n         GBLB  &FXA(2)\n         GBLC  &FXN(2)\n         AIF   ('&FWD'(1,1) EQ '(').REG\n         AIF   (T'&FWD NE 'E' AND T'&FWD NE 'F').ERR\n&NAME    LA    1,&FWD\n         AGO   .A\n.REG     AIF   ('&FWD' EQ '(1)').NAMIT\n&NAME    LR    1,&FWD(1)\n         AGO   .A\n.NAMIT   ANOP\n&NAME    CNOP  0,4\n.A       AIF   ('&FP' NE 'NO').C\n         AIF   (&FXA(1)).SEC\n&FXN(1)  SETC  'X&SYSNDX.X'\n         AGO   .SEC\n.C       AIF   ('&FP' NE 'YES').ERR2\n         AIF   (&FXA(2)).SEC2\n&FXN(2)  SETC  'X&SYSNDX.X2'\n         AGO   .SEC2\n.SEC     BAL   14,&FXN(1)\n         AIF   (&FXA(1)).END\n         AGO   .B\n.SEC2    BAL   14,&FXN(2)\n         AIF   (&FXA(2)).END\n.B       B     R&SYSNDX\n         AIF   ('&FP' EQ 'YES').FPT#X\n&FXA(1)  SETB  1\nX&SYSNDX.X STM 15,1,16(13)\n         OI    B&SYSNDX+1,X'F0'\n         SR    0,0\n         L     1,0(0,1)\n         LTR   1,1\n         BNM   *+8\n         NI    B&SYSNDX+1,X'0F'\n         SLDL  0,8\nB&SYSNDX B     *+12\n         SH    0,=H'128'\n         NI    S&SYSNDX+1,X'0F'\n         SH    0,=H'64'\n         BM    Z&SYSNDX\n         SLL   0,2\n         LR    15,0\n         SR    0,0\n         SLDA  0,0(15)\n         LTR   1,1\n         BNM   *+8\n         AH    0,=H'1'\nO&SYSNDX L     1,24(0,13)\nS&SYSNDX B     *+10\n         OI    *-3,X'F0'\n         LCR   0,0\n         ST    0,0(0,1)\n         LM    15,0,16(13)\n         BR    14\nZ&SYSNDX SR    0,0\n         B     O&SYSNDX\n         AGO   .OUT\n.FPT#X   ANOP\n&FXA(2)  SETB  1\nX&SYSNDX.X2 ST 15,16(0,13)\n         SDR   0,0\n         AE    0,0(0,1)\n         AW    0,X&SYSNDX.C\n         STD   0,X&SYSNDX.D\n         L     15,X&SYSNDX.D+4\n         BC    11,A&SYSNDX\n         LCR   15,15\nA&SYSNDX ST    15,0(0,1)\n         L     15,16(0,13)\n         BR    14\nX&SYSNDX.D DC  D'0'\nX&SYSNDX.C DC  X'4E00000000000000'\n.OUT     ANOP\nR&SYSNDX CNOP  0,4\n.END     MEXIT\n.ERR     MNOTE 8,'NUMBER TO BE FIXED IS NOT A FULLWORD'\n         MEXIT\n.ERR2    MNOTE 8,'FP=&FP IS AN INVALID OPERAND'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FLOAT": {"ttr": 1050, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\\\\\x00\\\\\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 92, "newlines": 92, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    FLOAT &FWD,&FP=YES\n         GBLB  &#A#(2)\n         GBLC  &N(2)\n         AIF   ('&FWD'(1,1) EQ '(').REG\n         AIF   (T'&FWD NE 'F' AND T'&FWD NE 'E').ERR1\n&NAME    LA    1,&FWD\n         AGO   .A\n.REG     AIF   ('&FWD' EQ '(1)').NAMIT\n&NAME    LR    1,&FWD(1)\n         AGO   .A\n.NAMIT   ANOP\n&NAME    CNOP  0,4\n.A       AIF   ('&FP' NE 'NO').C\n         AIF   (&#A#(1)).SEC\n&N(1)    SETC  'F&SYSNDX.F'\n         AGO   .SEC\n.C       AIF   ('&FP' NE 'YES').ERR2\n         AIF   (&#A#(2)).SEC2\n&N(2)    SETC  'F&SYSNDX.F2'\n         AGO   .SEC2\n.SEC     BAL   14,&N(1)\n         AIF   (&#A#(1)).END\n         AGO   .B\n.SEC2    BAL   14,&N(2)\n         AIF   (&#A#(2)).END\n.B       B     R&SYSNDX\n         AIF   ('&FP' EQ 'YES').FPT#F\n&#A#(1)  SETB  1\nF&SYSNDX.F MVI F&SYSNDX.A+3,0\n         STM   15,1,16(13)\n         L     0,0(0,1)\n         OI    F&SYSNDX.N+1,X'F0'\n         LTR   0,0\n         BNM   *+10\n         LCR   0,0\n         NI    F&SYSNDX.N+1,X'0F'\n         SR    1,1\n         SRDL  0,8\n         STM   0,1,F&SYSNDX.D\n         LA    15,4\n         LA    1,F&SYSNDX.D+1(0)\nF&SYSNDX.B TM  0(1),X'F0'\n         BNZ   F&SYSNDX.C(0)\n         TM    0(1),X'0F'\n         BNZ   F&SYSNDX.E(0)\n         LA    1,1(0,1)\n         BCT   15,F&SYSNDX.B(0)\nF&SYSNDX.G L   1,24(0,13)\n         ST    15,0(0,1)\nF&SYSNDX.N B   *+8\n         OI    0(1),X'80'\n         LM    15,0,16(13)\n         BR    14\nF&SYSNDX.E MVI F&SYSNDX.A+3,4\nF&SYSNDX.C SH  15,=H'4'\n         LCR   15,15\n         SLL   15,3\nF&SYSNDX.A LA  15,0(0,15)\n         L     1,F&SYSNDX.D+4(0)\n         SLDL  0,0(15)\n         STM   0,1,F&SYSNDX.D\n         SRL   15,2\n         LA    0,72\n         SLR   0,15\n         STC   0,F&SYSNDX.D(0)\n         L     15,F&SYSNDX.D(0)\n         B     F&SYSNDX.G(0)\n         AGO   .OUT\n.FPT#F   ANOP\n&#A#(2)  SETB  1\nF&SYSNDX.F2 STM 14,15,12(13)\n         L     14,0(0,1)\n         LPR   15,14\n         N     14,F&SYSNDX.Y\n         STM   14,15,F&SYSNDX.D\n         OI    F&SYSNDX.D,X'4E'\n         SDR   0,0\n         AD    0,F&SYSNDX.D\n         STE   0,0(0,1)\n         LM    14,15,12(13)\n         BR    14\n         CNOP  0,4\nF&SYSNDX.Y DC  X'80000000'\n.OUT     ANOP\nF&SYSNDX.D DC  D'0'\nR&SYSNDX CNOP  0,4\n.END     MEXIT\n.ERR1    MNOTE 8,'NUMBER TO BE FLOATED IS NOT A FULLWORD'\n         MEXIT\n.ERR2    MNOTE 8,'FP=&FP IS AN INVALID OPERAND'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "F1DSCB": {"ttr": 1282, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00,\\x00,\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    F1DSCB &ORG\n         SPACE\n         AIF   (T'&ORG EQ 'O').DSECT\n         AIF   ('&ORG' EQ 'DSECT').DSECT\n         ORG   &ORG\n&NAME    EQU   *                   FORMAT 1 DSCB\n         AGO   .CONT\n.DSECT   ANOP\n&NAME    DSECT                     FORMAT 1 DSCB\n.CONT    ANOP\n         SPACE\nDS1DSNAM DS    CL44                DATA SET NAME\nDS1FMTID DS    CL1                 FORMAT IDENTIFIER = X'F1'\nDS1DSSN  DS    CL6                 VOLUME SERIAL NUMBER\nDS1VOLSQ DS    CL2                 VOLUME SEQUENCE NUMBER\nDS1CREDT DS    XL3                 CREATION DATE\nDS1EXPDT DS    XL3                 EXPIRATION DATE\nDS1NOEPV DS    XL1                 NO OF EXTENTS\nDS1NOBDB DS    XL1                 NO OF BYTES USED IN LAST PDS BLK\n         DS    CL1                 RESERVED\nDS1SYSCD DS    CL13                PROGRAMMING SYSTEM CODE ID\n         DS    CL7                 RESERVED\nDS1DSORG DS    XL2                 DATASET ORGANISATION\nDS1RECFM DS    XL1                 RECORD FORMAT\nDS1OPTCD DS    XL1                 OPTION CODES\nDS1BLKL  DS    XL2                 BLOCK LENGTH\nDS1LRECL DS    XL2                 LOGICAL RECORD LENGTH\nDS1KEYL  DS    XL1                 KEYLENGTH\nDS1REKP  DS    XL2                 RELATIVE KEY POSITION\nDS1DSIND DS    XL1                 DATA SET INDICATORS\nDS1SCALO DS    XL4                 SECONDARY ALLOCATION\nDS1LSTAR DS    XL3                 POINTER TO LAST WRITTEN BLOCK\nDS1TRBAL DS    XL2                 LL PART OF DISK ADDRESS\n         DS    CL2                 RESERVED\nDS1EXT1  DS    0XL10               FIRST EXTENT DESCRIPTION\n         DS    XL1                 EXTENT TYPE INDICATOR\n         DS    XL1                 EXTENT SEQUENCE NO (M)\n         DS    XL4                 LOWER LIMIT OF EXTENT(CCHH)\n         DS    XL4                 UPPER LIMIT OF EXTENT(CCHH)\nDS1EXT2  DS    XL10                SECOND EXTENT DESCRIPTION\nDS1EXT3  DS    XL10                THIRD  EXTENT DESCRIPTION\nDS1PTRDS DS    XL5                 CCHHR OF F2DSCB OR F3DSCB\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "F3DSCB": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x1d\\x00\\x1d\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    F3DSCB &ORG\n         SPACE\n         AIF   (T'&ORG EQ 'O').DSECT\n         AIF   ('&ORG' EQ 'DSECT').DSECT\n         ORG   &ORG\n&NAME    EQU   *                   FORMAT 3 DSCB\n         AGO   .CONT\n.DSECT   ANOP\n&NAME    DSECT                     FORMAT 3 DSCB\n.CONT    ANOP\n         SPACE\nDS3KEYID DS    XL4                 KEY IDENTIFIER = 4X'03'\nDS3EXT4  DS    XL10                EXTENT DESCRIPTION\nDS3EXT5  DS    XL10                EXTENT DESCRIPTION\nDS3EXT6  DS    XL10                EXTENT DESCRIPTION\nDS3EXT7  DS    XL10                EXTENT DESCRIPTION\nDS3FMTID DS    CL1                 FORMAT IDENTIFIER = X'F3'\nDS3EXT8  DS    XL10                EXTENT DESCRIPTION\nDS3EXT9  DS    XL10                EXTENT DESCRIPTION\nDS3EXT10 DS    XL10                EXTENT DESCRIPTION\nDS3EXT11 DS    XL10                EXTENT DESCRIPTION\nDS3EXT12 DS    XL10                EXTENT DESCRIPTION\nDS3EXT13 DS    XL10                EXTENT DESCRIPTION\nDS3EXT14 DS    XL10                EXTENT DESCRIPTION\nDS3EXT15 DS    XL10                EXTENT DESCRIPTION\nDS3EXT16 DS    XL10                EXTENT DESCRIPTION\nDS3PTRDS DS    CL5                 RESERVED\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "F4DSCB": {"ttr": 1286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00'\\x00'\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 39, "newlines": 39, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    F4DSCB &ORG\n         SPACE\n         AIF   (T'&ORG EQ 'O').DSECT\n         AIF   ('&ORG' EQ 'DSECT').DSECT\n         ORG   &ORG\n&NAME    EQU   *                   FORMAT 4 DSCB\n         AGO   .CONT\n.DSECT   ANOP\n&NAME    DSECT                     FORMAT 4 DSCB\n.CONT    ANOP\n         SPACE\nDS4KEYID DS    XL44                KEY IDENTIFIER = 44X'04'\nDS4IDEMT DS    CL1                 FORMAT IDENTIFIER =X'F4'\nDS4HPCHR DS    CL5                 HIGHEST DISK ADDRESS OF F1DSCB\nDS4DSREC DS    XL2                 NO OF AVAIL DSCBS IN VTOC\nDS4CCHH  DS    XL4                 CCHH OF NEXTALT\nDS4NOATK DS    XL2                 NO OF ALT TRACKS\nDS4CTOCI DS    XL1                 VTOC INDICATORS\nDS4NOEXT DS    XL1                 VTOC CONSTANT = X'01'\n         DS    CL2                 RESERVED\nDS4DEVSZ DS    XL4                 NO OF LOGICAL CYLINDERS OR TRACKS\nDS4DEVTK DS    XL2                 DEVICE TRACK LENGTH\nDS4DEVI  DS    XL1                 CONSTANT FOR KEYED BLOCK\nDS4DEVL  DS    CL1                 CONSTANT FOR LAST BLOCK\nDS4DEVK  DS    XL1                 CONSTANT FOR NO KEY IN BLOCK\nDS4DEVFG DS    XL1                 FLAG BYTE\nDS4DEVTL DS    XL2                 DEVICE TOLERANCE\nDS4DEVDT DS    XL1                 DSCBS/TRK\nDS4DEVDB DS    XL1                 DIRECTORY BLOCKS/TRK\n         DS    CL24                RESERVED\nDS4F6PTR DS    CL5                 D/A ADDRESS OF 1ST F6DSCB\nDS4VTOCE DS    0CL10               EXTENT DESCRIPTION OF VTOC\nDS4IND   DS    CL1\nDS4EXSEQ DS    CL1\nDS4LEXT  DS    CL4\nDS4HEXT  DS    CL4\n         DS    CL25                RESERVED\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "F5DSCB": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x12\\x00\\x12\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    F5DSCB &ORG\n         SPACE\n         AIF   (T'&ORG EQ 'O').DSECT\n         AIF   ('&ORG' EQ 'DSECT').DSECT\n         ORG   &ORG\n&NAME    EQU   *                   FORMAT 5 DSCB\n         AGO   .CONT\n.DSECT   ANOP\n&NAME    DSECT                     FORMAT 5 DSCB\n.CONT    ANOP\n         SPACE\nDS5KEYID DS    XL4                 KEY IDENTIFIER = 4X'05'\nDS5AVEXT DS    8CL5                8AVAILABLE EXTENTS\nDS5FMTID DS    CL1                 FORMAT IDENTIFIER = X'F5'\nDS5MAVET DS    18CL5               18 AVAILABLE EXTENTS\nDS5PTRDS DS    CL5                 D/A ADDRESS OF NEXT F5DSCB\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "F6DSCB": {"ttr": 1290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x12\\x00\\x12\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    F6DSCB &ORG\n         SPACE\n         AIF   (T'&ORG EQ 'O').DSECT\n         AIF   ('&ORG' EQ 'DSECT').DSECT\n         ORG   &ORG\n&NAME    EQU   *                   FORMAT 6 DSCB\n         AGO   .CONT\n.DSECT   ANOP\n&NAME    DSECT                     FORMAT 6 DSCB\n.CONT    ANOP\n         SPACE\nDS6KEYID DS    CL4                 KEY ID = 4X'06'\nDS6AVEXT DS    8CL5                SHARED EXTENTS\nDS6FMTID DS    CL1                 FORMAT IDENTIFIER\nDS6MAVET DS    18CL5\nDS6PTRDS DS    CL5                 D/A ADDRES OF NEXT F6DSCB\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GAIN": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NP      GAIN   &TYPE,&PADD=\n&NP      LA     0,&TYPE.REQ\n         GETMAIN R,LV=(0)\n         LA     1,0(,1)\n         ST     1,&TYPE\n         L      &TYPE.REG,&TYPE\n         XC     &TYPE.(&TYPE.REQ),&TYPE\n         AIF    (T'&PADD EQ 'O').DONE\n         MVI    &TYPE+4,&PADD\n         MVC    &TYPE+5(&TYPE.REQ-5),&TYPE+4\n.DONE    MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GET": {"ttr": 1294, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    GET\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'GET   MACRO FORMAT VARIES UNDER O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GETIME": {"ttr": 1296, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\n\\x00\\n\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 10, "newlines": 10, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    GETIME\n&NAME    DS    0H\n         MNOTE 0,'GETIME NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        FOR GETIME STANDARD USE O.S. 'TIME DEC'\n*        FOR GETIME BINARY USE O.S. 'TIME BIN'\n*        FOR GETIME TU USE O.S. 'TIME TU'\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GOBACK": {"ttr": 1298, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00.\\x00.\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 46, "newlines": 46, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    GOBACK     &SAVE,&RC=0\n.*\n.* THE GOBACK MACRO PROVIDES..........\n.*   1.  RESETTING OF REG 13.\n.*       REG 13 WILL BE RESET ACCORDING TO THE HSA POINTER IN THE\n.*       CURRENT SAVE AREA UNLESS YOU CODE 'GOBACK NOSAVE' (IMPLYING\n.*       THE YOU ISSUED 'BEGIN NOSAVE')\n.*   2.   FREEMAIN OF DYNAMIC SAVE AREA.\n.*       IF YOU CODE 'GOBACK (DYNAMIC,LENGTH)' A FREEMAIN WILL BE\n.*       ISSUED FOR THE LENGTH YOU SPECIFY FROM THE ADDRESS GIVEN BY\n.*       REG 13 (BEFORE RESETTING).\n.*   3.  RETURN CODE.\n.*       YOU MAY EITHER CODE 'RC=NUMBER' OR PUT THE NUMBER IN REG 15\n.*       AND CODE 'RC=(15)'.  BY DEFAULT REG 15 IS SET TO ZERO.\n.*   4.        RESTORING REGISTERS.\n.*       GOBACK ISSUES 'RETURN (14,12),T,RC=(15)' AFTER OPERATIONS\n.*       DESCRIBED IN 2 AND 3 UNLESS YOU CODE 'NOSAVE'.\n.*\n         AIF   ('&SAVE' EQ 'NOSAVE').C1\n         AIF   ('&SAVE(1)' EQ 'DYNAMIC').C2\n&NAME    L     13,4(13,0)          SET GR13 -> PREVIOUS SAVE AREA.\n.C3      AIF   ('&RC' EQ '' OR '&RC' EQ '(15)').C3A\n         AIF   ('&RC'(1,1) NE '(').C3A\n         LR    15,&RC(1)           SET GR15 = RETURN CODE.\n.C1B     RETURN     (14,12),T,RC=(15)\n         MEXIT\n.C3A     RETURN     (14,12),T,RC=&RC\n         MEXIT\n.C1      AIF   ('&RC' EQ '' OR '&RC' EQ '(15)').C1A\n         AIF   ('&RC'(1,1) NE '(').C1A\n&NAME    LR    15,&RC(1)           SET GR15 = RETURN CODE.\n         AGO   .C1B\n.C1A     ANOP\n&NAME    RETURN     (14,12),T,RC=&RC\n         MEXIT\n.C2      ANOP\n&NAME    LR    1,13                SET GR1 -> CURRENT SAVE AREA.\n         L     13,4(13,0)          SET GR13 -> PREVIOUS SAVE AREA.\n         AIF   ('&SAVE(2)' NE '').C4\n         LA    0,72(0,0)           SET GR0 = LENGTH OF DYNAMIC AREA.\n         AGO   .C5\n.C4      LA    0,&SAVE(2)(0,0)     SET GR0 = LENGTH OF DYNAMIC AREA.\n.C5      SVC   10                  ISSUE FREEMAIN SVC.\n         AGO   .C3\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GOTO": {"ttr": 1300, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00Q\\x00Q\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 81, "newlines": 81, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&EPNAME  GOTO  &ENTRY,&PARM,&VL,&LOAD=YES\n         GBLA  &A\n         GBLC  &GN(16)\n         LCLA  &I,&K,&N\n         LCLB  &ADNAME\n         LCLC  &J\n&ADNAME  SETB  (T'&PARM EQ 'O')\n         AIF   (T'&EPNAME EQ 'O').NAMED\n&EPNAME  EQU   *\n.NAMED   AIF   (T'&ENTRY EQ 'O').R15SET\n         AIF   ('&ENTRY'(1,1) EQ '(').RENTRY\n         AIF   ('&LOAD' EQ 'NO').NOLD\n&I       SETA  1\n.SUBL    AIF   (&I GT &A).ASUB\n         AIF   ('&GN(&I)' EQ '&ENTRY').SKIPWX\n&I       SETA  &I+1\n         AGO   .SUBL\n.ASUB    ANOP\n&GN(&I)  SETC  '&ENTRY'\n&A       SETA  &I\n         WXTRN &ENTRY\n.SKIPWX  L     15,=V(&ENTRY)\n         LTR   15,15\n         BNZ   #&SYSNDX            ROUTINE AVAILABLE\n         STM   14,1,12(13)\n         LOAD  EP=&ENTRY\n         LA    15,=V(&ENTRY)\n         ST    0,0(0,15)           ENTRY POINT ADDRESS\n         ST    0,16(0,13)\n         LM    14,1,12(13)\n#&SYSNDX EQU   *\n.R15SET  AIF   (&ADNAME).NOPARA\n         AIF   ('&PARM'(1,1) NE '(').SETR1\n&N       SETA  N'&PARM\n&K       SETA  0\n&I       SETA  1\n         CNOP  2,4\n.TNEXT   ANOP\n&J       SETC  '&PARM(&I)'\n         AIF   ('&J'(1,1) NE '(').INC\n&K       SETA  &K+1\n.INC     ANOP\n&I       SETA  &I+1\n         AIF   (&I LE &N).TNEXT\n         AIF   (&K EQ 0).L14\n&I       SETA  1\n&K       SETA  4*&K+6\n.TNP     ANOP\n&J       SETC  '&PARM(&I)'\n         AIF   ('&J'(1,1) NE '(').NST\n         STCM  &PARM(&I),7,*+&K+1+4*(&I-1)\n&K       SETA  &K-4\n.NST     ANOP\n&I       SETA  &I+1\n         AIF   (&I LE &N).TNP\n.L14     LA    14,*+6+4*&N\n         BALR  1,15\n&I       SETA  1\n.TLP     AIF   (&I GE &N).TVL\n.LONGAD  DC    A(&PARM(&I))\n&I       SETA  &I+1\n         AGO   .TLP\n.RENTRY  AIF   ('&ENTRY' EQ '(15)').R15SET\n         LR    15,&ENTRY(1)\n         AGO   .R15SET\n.TVL     AIF   (&I GT &N).ADSET\n         AIF   (T'&VL EQ 'O').LONGAD\n         DC    X'80',AL3(&PARM(&N))\n.ADSET   AGO   .END\n.SETR1   LA    1,&PARM\n         AIF   (T'&VL NE 'N').NOPARA\n         OI    4*&VL-4(1),X'80'\n         BALR  14,15\n         LA    14,&PARM\n         NI    4*&VL-4(14),X'7F'\n         AGO   .END\n.NOLD    L     15,=V(&ENTRY)\n         AGO   .R15SET\n.NOPARA  BALR  14,15\n.END     MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFARRAY": {"ttr": 1303, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x06\\x00\\x06\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         GTFARRAY &DISK\n SPACE\nTAB&DISK   CSECT\n         DC    420A(0)\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFCONST": {"ttr": 1305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x05\\x00\\x05\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 5, "newlines": 5, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         GTFCONST &DISK\n SPACE\nDISK&DISK  DC    X'0&DISK'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFDISK": {"ttr": 1307, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    GTFDISK &DISK\n SPACE\n&NAME    EQU   *\n         L     R10,V&DISK             * R10 -> TABLE OF COUNTS PER CYL*\n         MVC   HWD(2),CC              * ALIGN 'CC' OF MBBCCHHR        *\n         LH    R9,HWD                 * INTO A REGISTER               *\n         SLL   R9,2                   * TIMES 4 FOR OFFSET            *\n         AR    R10,R9                 * CALCULATE LOCN IN TABLE       *\n         L     R8,0(0,R10)            *                               *\n         LA    R8,1(0,R8)             * *  AND INCREASE COUNT BY 1   **\n         ST    R8,0(0,R10)            *                               *\n         L     R8,CT&DISK             *    INCREASE COUNT OF          *\n         LA    R8,1(0,R8)             **   DISK ACCESSES BY ONE      **\n         ST    R8,CT&DISK             *                               *\n         MVC   OUTCC1(2),OLD&DISK     *   BUILD                       *\n         MVC   OUTCC2(2),HWD          *     UP                        *\n         MVC   UCBID(4),CHAR&DISK     *       RECORD                  *\n         MVC   OLD&DISK.(2),HWD       *   CHANGE LAST POSITION OF HEAD*\n**       PUT   SYSUT2,OUTCC1          *   WRITE RECORD                *\n SPACE\n         PUT   SYSUT2,OUTCC1          *                               *\n SPACE\n         B     LOOP1                  *  GET ANOTHER RECORD           *\nCHAR&DISK  DC    C'0&DISK'            * IDENTIFIER OF DEVICE          *\nV&DISK     DC    V(TAB&DISK)          * ADDRESS OF TABLE              *\nCT&DISK    DC    A(0)                 * ACCESS COUNT                  *\nOLD&DISK   DC   AL2(419)                *  INITIAL VALUE OF 'FROM' CC *\n SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFJCL1": {"ttr": 1309, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00-\\x00-\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 45, "newlines": 45, "modlines": 0, "user": "UKGUIDE"}, "text": "***                 JCL FOR DISK MOVEMENT PROGRAMS                  ***\n***                                                                 ***\n//*       STEP1 - READ GTF DATA\n//*\n//A       EXEC PGM=PGM1\n//SYSPRINT  DD SYSOUT=A\n//SYSUT1    DD ........... SYS1.TRACE ....   DATA FROM GTF\n//SYSUT2    DD DSN=&&A,DISP=(,PASS),UNIT=3330,SPACE=(CYL,(2,1))\n//*\n//*       STEP2 - REPORT ON MOVEMENTS - ALL OF THEM\n//*\n//B       EXEC PGM=PGM2\n//SORTLIB   DD DISP=SHR,DSN=SYS1.SORTLIB\n//SYSOUT    DD SYSOUT=A\n//SORTWK01  DD UNIT=3330,SPACE=(CYL,3)\n//SORTWK02  DD UNIT=3330,SPACE=(CYL,3)\n//SORTWK03  DD UNIT=3330,SPACE=(CYL,3)\n//SORTIN    DD DSN=&&A,DISP=(OLD,PASS)\n//SORTOUT   DD DSN=&&B,DISP=(,PASS),UNIT=3330,SPACE=(CYL,(2,1)),\n//             DCB=(RECFM=FB,LRECL=8,BLKSIZE=2000)\n//PRINT     DD SYSOUT=A\n//SYSUT2    DD DSN=&&C,DISP=(,PASS),UNIT=3330,SPACE=(CYL,(2,1))\n//*\n//*       STEP3 - SORT THE RECORDS FROM PGM2\n//*\n//C       EXEC PGM=SORT\n//SORTLIB   DD DISP=SHR,DSN=SYS1.SORTLIB\n//SYSOUT    DD SYSOUT=A\n//SORTWK01  DD UNIT=3330,SPACE=(CYL,3)\n//SORTWK02  DD UNIT=3330,SPACE=(CYL,3)\n//SORTWK03  DD UNIT=3330,SPACE=(CYL,3)\n//SORTIN    DD DSN=&&C,DISP=(OLD,PASS)\n//SORTOUT   DD DSN=&&D,DISP=(,PASS),UNIT=3330,SPACE=(CYL,(2,1)),\n//             DCB=(RECFM=FB,LRECL=14,BLKSIZE=2800)\n//SYSIN     DD *\n SORT FIELDS=(11,4,BI,A,1,2,BI,A,3,2,BI,A,5,2,BI,A,7,4,BI,A)\n//*\n//*       PRINT THE ABBREVIATED REPORTS\n//*\n//D       EXEC PGM=PGM3\n//SYSPRINT  DD SYSOUT=A\n//SYSUT1    DD DSN=&&D,DISP=(OLD,PASS)\n//SYSIN     DD *\nA000026             FOR HEAD MOVEMENT  OR\nX000049             FOR FREQUENCY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFJCL2": {"ttr": 1311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "UKGUIDE"}, "text": "//*      JCL FOR GTF SVC ANALYSIS\n//*\n//S1     EXEC  PGM=PGM4\n//SYSPRINT DD  SYSOUT=A\n//SYSUT1   DD  UNIT=3420,....  DEFINES GTF INPUT\n//SYSUT2   DD  UNIT=SYSDA,DISP=(,PASS),DSN=&&A,SPACE=(CYL,(2,1))\n//*\n//*      SORT THE DATA FOR REPORT # 2\n//*\n//SORT   EXEC  PGM=SORT\n//SYSOUT   DD  SYSOUT=A\n//SORTLIB  DD  DISP=SHR,DSN=SYS1.SORTLIB\n//SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,3)\n//SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,3)\n//SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,3)\n//SORTIN   DD  DSN=&&A,DISP=(OLD,PASS)\n//SORTOUT  DD  DSN=&&B,DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(2,1)),\n//             DCB=(RECFM=FB,LRECL=30,BLKSIZE=1800)\n//SYSIN    DD  *\n SORT FIELDS=(2,8,CH,A,1,1,BI,A)\n//*\n//*      FORMAT THE SECOND REPORT\n//*\n//S3     EXEC  PGM=PGM5\n//SYSPRINT DD  SYSOUT=A\n//SYSUT1   DD  DSN=&&B,DISP=(OLD,PASS)\n//*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFQ": {"ttr": 1313, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         GTFQ  &DISK\n SPACE\n         CLC   UCB,DISK&DISK          * IS THIS UCB OURS ?            *\n         BE    D&DISK                 * BRANCH ON YES                 *\n SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFREPT": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x01\\x17\\x01\\x17\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 279, "newlines": 279, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    GTFREPT &DISK=,&TSTP=\n.*\n.*             MACRO TO EASE THE REDUCTION OF DISK MOVEMENT DATA\n.*\n         LCLA  &A,&B\n.*\n.*             INVOCATION :-\n.*                            NAME     GTFREPT DISK=(150,151,...)\n.*\n.*             THIS WILL RESULT IN THE PRODUCTION OF CODE TO PRODUCE\n.*\n.*             1.   A REPORT ON THE # OF SIO TO EACH CYLINDER OF\n.*\n.*                  EACH SPECIFIED UCB\n.*\n.*             2.   A SUMMARY OF THE NUMBER OF SIO TO EACH UCB\n.*\n.*             3.   A FILE OF RECORDS CONTAININING  'FROM' AND 'TO'\n.*\n.*                  CYLINDER ADDRESS AND UCB IDENTIFIER\n.*\n.*\n.*             OTHER USER MACROS INVOKED :-\n.*\n.*             BEGIN, EQUREG       SAVES ETC\n.*\n.*             GTFQ, GTFDISK, GTFSUMMY, GTFTAB, GTFARRAY, GTFCONST\n.*\n.*             ALL THE ABOVE SHOULD BE PROVIDED 'IN-STREAM'\n.*\n.*             DSECT 'SIOCOMP' IS USED TO PROVIDE ADDRESSABILITY TO\n.*\n.*             THE SIO COMPREHENSIVE RECORD\n.*\n.*\n.*             ASSUMPTIONS :-\n.*\n.*           1.  THAT GTF HAS BEEN ENHANCOD TO PROVIDE THE FULL\n.*\n.*               DISK SEEK ADDRESS FROM THE UCB (MBBCCHHR) IN THE\n.*\n.*               FIRST TWO WORDS OF THE 5-WORD RQE FIELD. THE\n.*\n.*               REMAINDER OF THE FIELD IS FILLED WITH HEX'FFF...'\n.*\n.*               (THE VOLUME SERIAL NUMBER MAY BE SAVED IN THE\n.*\n.*             HEX 'FFF... ' PART OF THE FIELD)\n.*\n.*           2. THAT THE SIO RECORDS PROCESSED DO NOT HAVE A TIMESTAMP.\n.*\n.*              THIS MAY BE CIRCUMVENTED BY CODING TSTP=TIME AS AN\n.*\n.*              ADDITIONAL OPERAND OF THE GTFREPT MACRO. THIS WILL\n.*\n.*              GENERATE A DSECT WHICH ALLOWS FOR TIME STAMPS\n         AIF   (N'&DISK GT 28).ERR1\n.*                                       OF DISK ? ADDRESSING PROBLEMS\n         TITLE 'ROUTINE TO PRODUCE GTF DISK ANALYSIS REPORT'\n.*\n         AIF   ('&NAME' EQ '').DGFAULT       NAME FIELD BLANK ?\n.*\n&NAME    BEGIN ,                   *** MACRO CALL ***\n         AGO   .MIS1\n.DGFAULT ANOP\n         BEGIN ,                   *** MACRO CALL ***\n.MIS1    ANOP\n         EJECT\n         LA    R3,EODAD .        * R3 -> EODAD ROUTINE (ADDRESSING)   *\n         USING EODAD,R3\n         LA    R4,REPORT2 .      * R4 -> SUMMARY ROUTINE (ADDRESSING) *\n         USING REPORT2,R4\n         LA    R2,SYSUT1         * ENSURE ADDRESSABILITY OF CONSTANTS *\n         USING SYSUT1,R2\n         LA    R11,AREA .        * R11 -> AREA                        *\n         USING SIOCOMP,R11\n         SPACE\n         SPACE\n         OPEN  (SYSUT1,,SYSUT2,(OUTPUT),SYSPRINT,(OUTPUT))\n         SPACE\nLOOP1    DS    0H .\n         GET   SYSUT1,AREA .     * READ A RECORD                      *\n         SPACE\n***            FILTER OUT ALL BUT SIO COMPREHENSIVE RECORD          ***\n         SPACE 2\n         CLI   AREAID,TIMESTP .  * TIME STAMP ?                       *\n         BE    LOOP1 .           * YES                                *\n         CLI   AREAID,LOSTDTA1 . * LOST DATA - TYPE 1 ?               *\n         BE    LOOP1 .           * YES                                *\n         CLI   AREAID,LOSTDTA2 . * LOST DATA - TYPE 2 ?               *\n         BE    LOOP1 .           * YES                                *\n         CLI   AREAID,SIOC .     * SIO COMPREHENSIVE ?                *\n         BNE   LOOP1 .           * NO                                 *\n         CLC   AREAEID(2),SIOCEID .SIO EID ?                          *\n         BNE   LOOP1 .           * NO                                 *\n         CLC   CC(2),MINUS1      * IS CYLINDER ADDRESS X'FFFF' - IF   *\n*                                  SO IT IS DUE TO RECORD BEING WRITTEN\n*                                  WHICH WAS INITIALISED BY THE MOD TO*\n*                                  GTF BUT NO DISK ADDRESS HAS BEEN   *\n*                                  MOVED IN                           *\n         BE    LOOP1 .           * YES - IGNORE IT                    *\n         SPACE 2\nSIOC     EQU   0 .               * SIO FORMAT ID                      *\nTIMESTP  EQU   4 .               * TIME STAMP FORMAT ID               *\nLOSTDTA1 EQU   5 .               * LOST DATA                          *\nLOSTDTA2 EQU   6 .               *  FORMAT IDS                        *\n         EJECT\n***            INTERROGATE THE UCB FIELD FOR THE DESIRED UCBS       ***\n         SPACE 2\n&A       SETA  N'&DISK\n&B       SETA  1\n.LOOP001 ANOP\n         AIF   (&B GT &A).END1\n         GTFQ  &DISK(&B)       *** MACRO CALL ***\n&B       SETA  &B+1\n         AGO   .LOOP001\n.END1    ANOP\n         B     LOOP1             * NONE OF THOSE - GET ANOTHER RECORD *\n         EJECT\n***            PROCESS THE APPROPRIATE TABLE ENTRIES                ***\n         SPACE 2\n&B       SETA  1\n.LOOP002 ANOP\n         AIF   (&B GT &A).END2\nD&DISK(&B)     GTFDISK &DISK(&B) * MACRO CALL ***\n.*\n&B       SETA  &B+1\n         AGO   .LOOP002\n.*\n.END2    ANOP\n         EJECT\n***            END OF INPUT - PROCESS TABLES AND REPORT             ***\n         SPACE 2\nEODAD    DS    0H                *                                    *\n&B       SETA  1\n.LOOP003 ANOP\n         AIF   (&B GT &A).END3\n         GTFTAB &DISK(&B)      *** MACRO CALL ***\n&B       SETA  &B+1\n         AGO   .LOOP003\n.END3    ANOP\n         EJECT\n***            PRINT SECOND REPORT                                  ***\n         SPACE 2\nREPORT2  DS    0H .              *                                    *\n         SPACE 2\n**       PUT   SYSPRINT,SUMHDG1  * WRITE A HEADING                    *\n         SPACE\n         PUT   SYSPRINT,SUMHDG1  * WRITE A HEADING                    *\n         SPACE\n**       PUT   SYSPRINT,SUMHDG2  * WRITE A HEADING                    *\n         SPACE\n         PUT   SYSPRINT,SUMHDG2  * WRITE A HEADING                    *\n&B       SETA  1\n.LOOP004 ANOP\n         AIF   (&B GT &A).END4\n         GTFSUMMY &DISK(&B)    *** MACRO CALL ***\n&B       SETA  &B+1\n         AGO   .LOOP004\n.END4    ANOP\n.*\n         SPACE 4\n***            CLOSE FILES AND RETURN                               ***\n         SPACE 2\n         CLOSE (SYSUT1,,SYSUT2,,SYSPRINT)\n         SPACE\n         L     R13,4(0,R13) .    * R13 -> OLD SAVE AREA               *\n         LM    R14,R12,12(R13) . * RESTORE REGISTERS                  *\n         LA    R15,0 .           * RETURN CODE                        *\n         BR    R14 .             * BACK TO SCP                        *\n         EJECT\n***            CONSTANTS ETC                                        ***\n         SPACE 2\n**SYSUT1 DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=EODAD\n         SPACE\nSYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=EODAD\n         SPACE\n**SYSUT2 DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,LRECL=8,BLKSIZE=2000,   *\n               RECFM=FB\n         SPACE\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,LRECL=8,BLKSIZE=2000,   *\n               RECFM=FB\n         SPACE\n**SYSPRINT DCB DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=121,BLKSIZE=1210*\n               ,RECFM=FBA\n         SPACE\nSYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=121,BLKSIZE=1210*\n               ,RECFM=FBA\n         EJECT\nDWK      DS    D .               * WORK AREA                          *\nHWD      DS    H .               * ANOTHER WORK AREA                  *\nMINUS1   DC    H'-1' .           * COMPARAND USED TO FILTER OUT SIO   *\n*                                * COMPREHENSIVES WHICH ARE 'BAD'     *\n*                                                                     *\n***            OUTPUT RECORD ON SYSUT2                              ***\n*                                                                     *\nOUTCC1   DS    CL2 .             * FROM  CYLINDER                     *\nOUTCC2  DS    CL2 .              * TO    CYLINDER                     *\nUCBID    DS    CL4 .             * UCB IDENTITY                       *\n*\n         DC    12C' ' .          * SPARE AREA FOR SM-023 (SHORT RCDS) *\nMASK     DC    X'40',7X'20',X'2120' * EDIT PATTERN                    *\n*                                                                     *\n***            HEADINGS AND PRINTLINES                              ***\n*                                                                     *\nHEAD1    DC    C'1',10C' ',C' CYLINDER ACCESS COUNT FOR DEVICE '\nHEAD1DEV DS    CL3\n         DC    84C' '\nHEAD2    DC    C'-',10C' ',C'CYLINDER #',10C' ',C'SIO COUNT',80C' '\nLINE1    DC    14C' '\nLINE1CYL DS    CL3\n         DC    13C' '\nLINE1CT  DS    CL10              * SIO COUNT                          *\n         DC    85C' '\nTAIL     DC    C'-',10C' ',C' END OF REPORT FOR DEVICE '\nTAILVOL  DS    CL3\n         DC    81C' '\nSUMHDG1  DC    C'1',10C' ',C'TOTALS BY DISK            ',84C' '\nSUMHDG2  DC    C'-',20C' ',C' DISK UNIT',10C' ',C'TOTAL ACCESSES'\n         DC    70C' '\nSUMLINE  DC    C' ',23C' '\nSUMUNIT  DS    CL3\n         DC    15C' '\nSUM      DS    CL10\n         DC    70C' '\nSIOCEID  DC    X'7000'           * EID FOR SIO COMPREHENSIVE          *\n         EJECT\n***            CONSTANTS FOR GTF UCB ADDRESSES                      ***\n         SPACE 2\n&B       SETA  1\n.LOOP005 ANOP\n         AIF   (&B GT &A).END5\n         GTFCONST &DISK(&B)    *** MACRO CALL ***\n&B       SETA  &B+1\n         AGO   .LOOP005\n.END5    ANOP\n         SPACE 4\n         LTORG\nAREA     DS    CL200 .           * RECORDS READ IN HERE               *\n         EJECT\n***            DSECT FOR SIO COMPREHENSIVE RECORD                   ***\n         SPACE 2\nSIOCOMP  DSECT\nRDW      DS    CL4 .             * RDW                                *\n         DS    CL1               * ID                                 *\nAREAID   DS    CL1 .             * ID TYPE                            *\nAREAEID  DS    CL2 .             * EID                                *\n         AIF   ('&TSTP' NE 'TSTP').NOTIME                             *\n         DS    CL12 .            * TIME STAMP                         *\n.NOTIME  ANOP\n         DS    CL8 .             * JOBNAME                            *\n         DS    CL4 .             * RQE TCB                            *\n         DS    CL2 .             * SIO COMPLETION CODE                *\nUCB      DS    CL2 .             * UCB IN HEX                         *\n         DS    CL4 .             * CAW                                *\n         DS    CL8 .             * CSW                                *\nM        DS    CL1 .             * DISK                               *\nBB       DS    CL2 .             *  SEEK                              *\nCC       DS    CL2 .             *   ADDRESS                          *\nHH       DS    CL2 .             *    ADDED BY                        *\nR        DS    CL1 .             *     STOCK EXCHANGE MOD             *\nVOLSERNO DS    CL6 .             * VOL SERIAL # ADDED IN SAME WAY     *\n         EJECT\n***            TABLES FOR CYLINDER ACCESS COUNT\n***            - ONE FOR EACH DISK\n         SPACE 2\n&B       SETA  1\n.LOOP006 ANOP\n         AIF   (&B GT &A).END6\n         GTFARRAY &DISK(&B)    *** MACRO CALL ***\n&B       SETA  &B+1\n         AGO   .LOOP006\n.ERR1    ANOP\n         MNOTE 12,'*** MORE THAN 28 SUB-OPERANDS OF DISK ***'\n         MNOTE 12,'*** ADDRESSING PROBLEMS WILL ARISE ***'\n         MEXIT\n.END6    ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFSUMMY": {"ttr": 1542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\r\\x00\\r\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         GTFSUMMY &DISK\n SPACE\n         L     R6,CT&DISK             * R6 HAS SIO COUNT TO DISK\n         CVD   R6,DWK                 *\n         MVC   SUM(10),MASK      * MOVE IN MASK                       *\n         ED    SUM(10),DWK+3\n         MVC   SUMUNIT,=C'&DISK'      * SET UP PRINTLINE\n**       PUT   SYSPRINT,SUMLINE       * WRITE IT\n SPACE\n         PUT   SYSPRINT,SUMLINE\n SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFSVC1": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\xd1\\x00\\xd1\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 209, "newlines": 209, "modlines": 0, "user": "UKGUIDE"}, "text": "GTFSVC   BEGIN\n SPACE\n         OPEN  (SYSUT1,,SYSUT2,(OUTPUT),SYSPRINT,(OUTPUT))\n SPACE\nLOOP     GET   SYSUT1,AREA\n SPACE\n         XC    OUTRCD(30),OUTRCD   CLEAR O/P AREA\n**             FILTER OUT ALL BUT SVC COMPREHENSIVE RECORDS          **\n         CLI   AREA+5,TIMESTP      TIME STAMP ?\n         BE    LOOP                YES\n         CLI   AREA+5,LOSTDTA1     LOST DATA ?\n         BE    LOOP                YES\n         CLI   AREA+5,LOSTDTA2     LOST DATA ?\n         BE    LOOP                YES\n         CLI   AREA+5,SVCFID       SVC FID ?\n         BNE   LOOP                NO\n         CLC   AREA+6(2),SVCEID    SVC EID ?\n         BNE   LOOP                NO\nLOSTDTA2 EQU   6\nLOSTDTA1 EQU   5\nTIMESTP  EQU   4\nSVCFID   EQU   1\n         LA    R11,AREA            R11 -> AREA\n         XR    R10,R10                * CLEAR R10\n         LA    R9,SVCTAB              * R9 -> TABLE\n         USING SVCCOMP,R11\n         IC    R10,SVCNO              * SVC #\n         SLL   R10,2                  * TIMES 4\n         AR    R9,R10                 * GET TABLE OFFSET\n         L     R8,0(0,R9)             *  UPDATE TABLE\n         LA    R8,1(0,R8)             **   ENTRY AND\n         ST    R8,0(0,R9)             *      STORE BACK\n         CLI   SVCNO,SIX              * LINK ?\n         BE    SVC6                   * YES\n         CLI   SVCNO,SEVEN            * XCTL ?\n         BE    SVC7                   * YES\n         CLI   SVCNO,EIGHT            * LOAD ?\n         BE    SVC8                   * YES\n         CLI   SVCNO,EIGHTEEN         * BLDL ?\n         BE    SVC18                  * YES\n         CLI   SVCNO,ATTACH           * ATTACH ?\n         BNE   LOOP                   * NO\n         B     LOOP\nSVC18    EQU   *\n         MVC   RECID(1),SVCNO      SVC #\n         SPACE\n         DROP  R11\n         USING SVC18DS,R11\n         SPACE\n         XR    R7,R7               CLEAR R7\n         IC    R7,VARLENG          R7 HAS LENGTH OF VARIABLE AREA\n         CH    R7,=H'8'            FIND ?\n         BE    FIND                YES\n         MVC   MODNAME(8),BLDLMOD  NO - MUST BE BLDL\n         MVI   MODNAME+8,C'B'      INDICATE BLDL\n SPACE\n         PUT   SYSUT2,OUTRCD\n SPACE\n         XC    OUTRCD,OUTRCD       CLEAR FIELD\n         B     LOOP\nFIND     DS    0H\n         MVC   MODNAME(8),FINDMOD  MOVE IN MEMBER NAME\n         MVI   MODNAME+8,C'F'      INDICATE FIND\n SPACE\n         PUT   SYSUT2,OUTRCD\n SPACE\n         XC    OUTRCD,OUTRCD       CLEAR FIELD\n         B     LOOP\nSVC6     EQU   *\nSVC7     EQU   *\n         DROP  R11\n         USING     SVCCOMP,R11\n         MVC   RECID(1),SVCNO      MOVE SVC # FOR ID\n         DROP  R11\n         USING SVC67DS,R11\n         MVC   MODNAME(8),PGMNM    EP/DE ENTRY\n         B     WRITE               WRITE RECORD\nSVC8     EQU   *\n         DROP  R11\n         USING SVCCOMP,R11\n         MVC   RECID(1),SVCNO      MOVE IN SVC # FOR ID\n         USING SVC8DS,R11\n         MVC   MODNAME(8),PGMNAME  EP/DE ENTRY\n         B     WRITE               WRITE RECORD\n         DROP  R11\nWRITE    EQU   *\n SPACE\n         PUT   SYSUT2,OUTRCD\n SPACE\n         XC    OUTRCD,OUTRCD       CLEAR O/P AREA\n         B     LOOP                GET ANOTHER RECORD\nEND      LA    R9,SVCTAB           R9 -> TABLE\n         LA    R8,0                1ST SVC #\n         BAL   R10,SVCPAGE              PRINT HEADINGS\nSVCLOOP  CLC   0(4,R9),ZEROS       ANY SVC XX ISSUED ?\n         BE    MISSOUT       NO\n         L     R6,0(0,R9)          YES\n         CVD   R6,DWORK            CONVERT\n         MVC   SVCT(8),MASK1     * MOVE IN EDIT PATTERN               *\n         ED    SVCT(8),DWORK+4   * EDIT IN SVC COUNT                  *\n         CVD   R8,DWORK            CONVERT\n         MVC   SVC#(4),MASK2     * MOVE IN EDIT PATTERN               *\n         ED    SVC#(4),DWORK+6   * EDIT IN SVC #                      *\n         PUT   SYSPRINT,SVCLINE\n         AP    PCOUNT,=P'10'            ADD TO LINE COUNT\n         BNO   *+8                      PRINT HEADINGS IF NECESSARY\n         BAL   R10,SVCPAGE\nMISSOUT  LA    R8,1(0,R8)          NEXT SVC #\n         CH    R8,TWO56            IS THAT ALL ?\n         BE    XIT                 YES\n         LA    R9,4(0,R9)          NO - POINT TO NEXT SVC COUNT\n         B     SVCLOOP\nXIT      EQU   *\n         CLOSE (SYSPRINT,,SYSUT1,,SYSUT2)\n         L     R13,4(0,R13)        R13 -> OLD SAVE AREA\n         LM    R14,R12,12(R13)     RESTORE REGS\n         LA    R15,0               RETURN CODE\n         BR    R14                 RETURN\n SPACE\nSVCPAGE  PUT   SYSPRINT,HEAD1\n SPACE\n         PUT   SYSPRINT,HEAD2\n         ZAP   PCOUNT,=P'500'           RESET LINE COUNT\n         BR    R10\n         EJECT\n***      CONSTANTS ETC                                              ***\n         SPACE 3\n         PRINT NOGEN\nSYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=121,RECFM=FBA,  *\n               BLKSIZE=1210\nSYSUT2   DCB   DDNAME=SYSUT2,MACRF=PM,DSORG=PS,LRECL=30,BLKSIZE=1800,  *\n               RECFM=FB\nSYSUT1   DCB   DDNAME=SYSUT1,MACRF=GM,DSORG=PS,EODAD=END\n*\nPCOUNT   DS    PL2\nDWORK    DS    D\nMASK1    DC    X'40',5X'20',X'2120' * EDIT PATTERN                    *\nMASK2    DC    X'40202120'       * EDIT PATTERN                       *\nSVCTAB   DC    256A(0)             SVC TABLE\nSIX      EQU   6                   LOAD\nSEVEN    EQU   7                   XCTL\nEIGHT    EQU   8                   LINK\nEIGHTEEN EQU   18                  BLDL\nATTACH   EQU   42                  ATTACH\nSVCEID   DC    X'0100'             EID FOR SVC COMPREHENSIVE RECORDS\nOUTRCD   DS    0CL30         O/P RECORD FOR SUBSEQUENT ANALYSIS\nRECID    DS    CL1                 SVC #\nMODNAME  DS    CL8                 EP /DE ENTRY\nFILLA    DS    CL21                SPARE\nHEAD1    DC    C'1',10C' ',C'FREQUENCY OF SVC LOADS BY SVC NUMBER    '\n         DC    70C' '\nHEAD2    DC    C'-',22C' ',C' SVC  #   ',13C' ',C'  COUNT   ',70C' '\nSVCLINE  DC    24C' '\nSVC#     DS    CL4               * SVC # GOES HERE                    *\n         DC    17C' '\nSVCT     DS    CL8               * SVC COUNT GOES HERE                *\n         DC    69C' '\nZEROS    DC    A(0)\nTWO56    DC    H'256'\nAREA     DS    CL200               RECORDS READ IN HERE\n*\nOPENTEST EQU   *\nSVCCOMP  DSECT\nRDW      DS    CL4\n         DS    CL2                 RCD ID, FORMAT ID\n         DS    CL2                 EID\n         DS    CL8                 JOBNAME\n         DS    CL4                 TCB\n         DS    CL3                 PSW\nSVCNO    DS    CL1                 SVC # IN OLD PSW\nSVC67DS  DSECT\n         DS    CL4                 RDW\n         DS    CL4                 IDS & EID\n*                                  NO TIMESTAMP ASSUMED\n         DS     CL8                JOBNAME\n         DS    CL4                 OLD TCB\n         DS    CL8                 OLD PSW\n         DS    CL8                 RB NAME\n         DS    CL12                REGS 15,0,1\n         DS    CL8                 PARAMETERS\nPGMNM    DS    CL8                 EP/DE NAME FOR LINK,XCTL\nSVC8DS   DSECT\n         DS    CL4                 RDW\n         DS    CL4                 IDS & EID\n*                                  NO TIMESTAMP ASSUMED\n         DS     CL8                JOBNAME\n         DS    CL4                 OLD TCB\n         DS    CL8                 OLD PSW\n         DS    CL8                 RB NAME\n         DS    CL12                REGS 15,0,1\nPGMNAME  DS    CL8                 EP/DE NAME FOR LOAD\n*\nSVC18DS  DSECT\n         DS    CL4                 RDW\n         DS    CL4                 1DS AND EID\n*                                  NO TIMESTAMP ASSUMED\n         DS    CL8                 JOBNAME\n         DS    CL4                 OLD TCB\n         DS    CL8                 OLD PSW\n         DS    CL8                 RBNAME\n         DS    CL12                REGS 15,0,1\nVARLENG  DS    CL1                 LENGTH OF REST (MAX = 40)\nBLDLDATA DS    0CL4                DATA STARTS HERE\nBLDL#    DS    CL2                 # OF ENTRIES\nBLDLENG  DS    CL2                 LENGTH OF EACH ENTRY\nBLDLMOD  DS    CL8                 MODULE NAME IN BLDL PARM LIST\n         ORG   BLDLDATA\nFINDMOD  DS    CL8                 MODULE NAME FOR FIND\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFSVC2": {"ttr": 1548, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\xc0\\x00\\xc0\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 192, "newlines": 192, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    INCR  &FIELD\n&NAME    DS    0H\n         L     R2,&FIELD           LOAD COUNT\n         LA    R2,1(0,R2)          INCREMENT BY 1\n         ST    R2,&FIELD           STORE BACK\n         SPACE\n         MEND\n         MACRO\n         SUMMY &A,&B\n         SPACE\n         L     R2,&A               R2 HAS COUNT IN BINARY\n         CVD   R2,DWORK            INTO DECIMAL\n         MVC   &B.(10),MASK2     * EDIT PATTERN                       *\n         ED    &B.(10),DWORK+3   * EDIT IN COUNT                      *\n         SPACE\n         MEND\n         MACRO\n         CLEAR &CT\n         XC    &CT.(4),&CT         SET FIELD TO ZERO\n         MEND\n         EJECT\nSVCANAL  BEGIN\n         EJECT\n***            ROUTINE TO ANALYSE LINK, LOAD & XCTL ACTIVITY        ***\n         SPACE 2\n***            ASSUMPTIONS  SYSUT1 IS SORTED 30 BYTE RECORDS -      ***\n***            MAPPED BY DSECT 'REC'                                ***\n***            SORTED BY MODULE NAME & SVC CALL WITHIN MODULE NAME  ***\n         SPACE 2\n         OPEN  (SYSUT1,,SYSPRINT,(OUTPUT))\n         SPACE\n         LA    R11,AREA            R11 -> INPUT RCD\n         USING REC,R11\n         SPACE\nLOOP     GET   SYSUT1,AREA         GET ONE\n         SPACE\n         CLC   LAST(8),BLANKS      1ST RECORD ?\n         BNE   OHREALLY\n         MVC   LAST(8),MODULE  *** HOW ABOUT INITIALISING 'LAST' MIKE ?\n         B     HDG\nOHREALLY DS    0H\n         CLC   LAST(8),MODULE      NO - SAME MODULE ?\n         BNE   EOM                 NO - WRITE TOTALS FOR PREVIOUS ONE\nTEST     CLI   RECID,6             YES - ISSUED BY SVC 6 ?\n         BE    SVC6                YES\n         CLI   RECID,7             NO - ISSUED BY SVC 7 ?\n         BE    SVC7                YES\n         CLI   RECID,8             NO - ISSUED BY SVC 8 ?\n         BE    SVC8                YES\n         CLI   RECID,18            BLDL\n         BE    SVC18             * YES\n         INCR  NOT678              COUNT OF RECORDS NOT SVC 6,7,8\n         B     LOOP                ANOTHER RECORD\n         SPACE 2\nSVC6     INCR  SVC6CT              THIS MODULE VIA SVC 6\n         INCR  THISMOD             THIS MODULE\n         INCR  TOT678              TOTAL MODULES\n         INCR  TOT6                TOTAL SVC 6\n         B     LOOP                ANOTHER RECORD\n         SPACE 2\nSVC7     INCR  SVC7CT              THIS MODULE VIA SVC 7\n         INCR  THISMOD             THIS MODULE\n         INCR  TOT678\n         INCR  TOT7\n         B     LOOP\n         SPACE 2\nSVC8     INCR  SVC8CT              THIS MODULE VIA SVC 8\n         INCR  THISMOD             THIS MODULE\n         INCR  TOT678              TOTAL MODULES\n         INCR  TOT8                TOTAL SVC 8\n         B     LOOP                ANOTHER RECORD\nSVC18    INCR  SVC18CT             COUNT OF SVC 18 FOR THIS MODULE\n         INCR  THISMOD             TOTAL FOR THIS MODULE\n         INCR  TOT678              TOTAL SUCS 6+7+8+18\n         INCR  TOT18               TOTAL SVC 18\n         B     LOOP                ANOTHER RECORD\n         EJECT\nEOM      DS    0H\n         MVC   MNM(8),LAST         MODULE NAME TO PRINTLINE\n         SUMMY SVC6CT,TOTSVC6      CALLS VIA SVC 6\n         SUMMY SVC7CT,TOTSVC7      CALLS VIA SVC 7\n         SUMMY SVC8CT,TOTSVC8      CALLS VIA SVC 8\n         SUMMY SVC18CT,TOTSVC18    SVC 18 TOTAL FOR THIS MODULE\n         SUMMY THISMOD,TOTALMOD    TOTAL CALLS FOR THIS MODULE\n         PUT   SYSPRINT,LINE\n         INCR  LINECT              UP THE LINE COUNT\n         CLEAR SVC6CT              COUNT SET TO ZERO\n         CLEAR SVC7CT              COUNT SET TO ZERO\n         CLEAR SVC8CT              COUNT SET TO ZERO\n         CLEAR SVC18CT             SET TO ZERO\n         CLEAR THISMOD                  *** DONT FORGET THIS ONE MIKE\n         MVC   LAST(8),MODULE      TRANSFER NEW NAME TO BUFFER\n         CLC   LINECT(4),=F'50'    END OF PAGE ?\n         BE    NEWPAGE             YES\n         B     TEST                NO - TEST THIS RECORD FOR SVC 6,7,8\n         EJECT\nNEWPAGE  DS    0H\n         CLEAR LINECT              LINE COUNT TO ZERO\nHDG      DS    0H\n         BAL   R3,PRT              WRITE HEADINGS\n         B     TEST                TEST THIS RECORD\n         SPACE 2\nPRT      DS         0H\n         PUT   SYSPRINT,HD1        HEADING 1\n         PUT   SYSPRINT,HD2        HEADING 2\n         BR    R3                  RETURN\n         SPACE 3\nEND      DS    0H\n         MVC   MNM(8),LAST         LAST MODULE NAME\n         SUMMY SVC6CT,TOTSVC6      CALLS VIA SVC 6\n         SUMMY SVC7CT,TOTSVC7      CALLS VIA SVC 7\n         SUMMY SVC8CT,TOTSVC8      CALLS VIA SVC 8\n         SUMMY SVC18CT,TOTSVC18    TOTAL SVC 18 FOR THIS MODULE\n         SUMMY THISMOD,TOTALMOD    TOTAL INVOCATIONS FOR THIS MODULE\n         PUT   SYSPRINT,LINE       WRITE OUT LAST RECORD\n         SUMMY TOT6,TOT6A          COUNT OF SVC 6\n         SUMMY TOT7,TOT7A          COUNT OF SVC 7\n         SUMMY TOT8,TOT8A          COUNT OF SVC 8\n         SUMMY TOT18,TOT18A        TOTAL SVC 18 OVERALL\n         PUT   SYSPRINT,TOTLINE\n         SPACE\n         SUMMY TOT678,ALLMODS      TOTAL SVC 6+7+8\n         SUMMY NOT678,OTHERS       SVCS NOT 6,7,8\n         PUT   SYSPRINT,TAIL       TRAILER LINE\n         CLOSE (SYSUT1,,SYSPRINT)  SHUT UP\n         L     R13,4(0,R13)        OLD SAVE AREA\n         LM    R14,R12,12(R13)     RESTORE REGISTERS\n         LA    R15,0               RETURN CODE\n         BR    R14                 BACK TO O.S.\n         EJECT\n***            CONSTANTS ETC                                        ***\n         SPACE 2\n         PRINT NOGEN\nSYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=END\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,BLKSIZE=1210,LRECL=121*\n               ,RECFM=FBA\nDWORK    DS    D\nNOT678   DC    A(0)                COUNT OF RECORDS NOT 6,7,8,18\nTOT678   DC    A(0)                COUNT OF RECORDS 6+7+8+18\nSVC6CT   DC    A(0)                TOTAL RECORDS SVC 6\nSVC7CT   DC    A(0)                TOTAL RECORDS SVC 7\nSVC8CT   DC    A(0)                TOTAL RECORDS SVC 8\nSVC18CT  DC    A(0)                TOTAL RECORDS SVC 18\nTOT6     DC    A(0)                   COUNT OF SVC 6\nTOT7     DC    A(0)                   COUNT OF SVC 7\nTOT8     DC    A(0)                   COUNT OF SVC 8\nTOT18    DC    A(0)                COUNT OF SVC 18\nTHISMOD  DC    A(0)                TOTAL SVC 6+7+8 FOR A GIVEN MODULE\nLINECT   DC    A(0)                LINE COUNT\nLAST     DC    8C' '               OLD MODULE SAVED HERE\nBLANKS   DC    8C' '               COMPARAND FOR FIRST TIME THROUGH\nMASK2    DC    X'40',7X'20',X'2120' * EDIT PATTERN                    *\nAREA     DS    CL50                RECORD IS READ IN HERE\n*\nHD1      DC    C'1',6C' ',C' MODULE LOADING SUMMARY  ',90C' '\nHD2      DC    C'-',8C' ',C'MODULE NAME',10C' ',C'SVC  6',9C' '\n         DC    C'SVC  7',9C' ',C'SVC  8',9C' ',C'SVC 18',10C' '\n         DC    C'TOTAL',40C' '\n*\nLINE     DC    C' ',9C' '\nMNM      DS    CL8                 MODULE NAME\n         DC    8C' '\nTOTSVC6  DS    CL10              * CALLS VIA SVC 6                    *\n         DC    5C' '\nTOTSVC7  DS    CL10              * CALLS VIA SVC 7                    *\n         DC    5C' '\nTOTSVC8  DS    CL10              * CALLS VIA SVC 8\n         DC    5C' '\nTOTSVC18 DS    CL10              * CALLS VIA SVC 18                   *\n         DC    5C' '\nTOTALMOD DS    CL10              TOTAL CALLS FOR THIS MODULE          *\n         DC    44C' '\nTOTLINE  DC    C'-',17C' ',C'TOTALS  '\nTOT6A    DS    CL10                COUNT OF SVC 6\n         DC    5C' '\nTOT7A    DS    CL10\n         DC    5C' '\nTOT8A    DS    CL10\n         DC    5C' '\nTOT18A   DS    CL10\n         DC    55C' '\nTAIL     DC    C'-',8C' ',C'TOTAL SVCS 6+7+8+18 = '\nALLMODS  DS    CL10              * ALL SVC CALLS 6+7+8+18             *\n         DC    4C' ',C'TOTAL OTHERS = '\nOTHERS   DS    CL10              * ALL OTHERS                         *\n         DC    56C' '\nREC      DSECT\nRECID    DS    CL1                 ID OF RECORD (= INVOKING SVC #)\nMODULE   DS    CL8                 MODULE CALLED\nFILLER   DS    CL21\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFTAB": {"ttr": 1796, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00,\\x00,\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         GTFTAB &DISK\n SPACE\n         L     R10,V&DISK               * R10 -> DISK ARRAY TABLE\n         LA    R9,404                 * R9 HAS # OF CYLS\n         LA    R7,0                   * CURRENT CYL #\n         MVC   HEAD1DEV,=C'&DISK'     * SET UP HEADING\nPAGE&DISK  EQU *\n**       PUT   SYSPRINT,HEAD1         * WRITE IT\n SPACE\n         PUT   SYSPRINT,HEAD1\n SPACE\n**       PUT   SYSPRINT,HEAD2         *\n SPACE\n         PUT   SYSPRINT,HEAD2\n SPACE\n         LA    R8,50                  * # OF LINES PER PAGE\nLOOPY&DISK EQU   *\n         L     R6,0(0,R10)            * GET COUNT FOR THAT CYLINDER\n         CVD   R6,DWK                 *\n         MVC   LINE1CT(10),MASK  * MOVE IN MASK                       *\n         ED    LINE1CT(10),DWK+3\n         CVD   R7,DWK                 *\n         UNPK  LINE1CYL(3),DWK+6(2)   **  CYLINDER ADDRESS TO EBCDIC\n         OI    LINE1CYL+2,X'F0'       *\n**       PUT   SYSPRINT,LINE1         * WRITE LINE\n SPACE\n         PUT   SYSPRINT,LINE1\n SPACE\n         LA    R7,1(0,R7)             * INCREMENT CYLINDER ADDRESS\n         LA    R10,4(0,R10)           * AND TABLE POINTER\n         BCT   R9,LOOPX&DISK          * END OF THIS DISK ?\n         MVC   TAILVOL,=C'&DISK'      * YES\n**       PUT   SYSPRINT,TAIL          * WRITE TAIL RECORD\n SPACE\n         PUT   SYSPRINT,TAIL\n SPACE\n         B     XIT&DISK               * NEXT DISK - IF ANY\nLOOPX&DISK EQU   *\n         BCT   R8,LOOPY&DISK          * NO - END OF PAGE THEN ?\n         B     PAGE&DISK              * YES - NEW PAGE ROUTINE\nXIT&DISK   EQU   *                    *\n SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTFZAP": {"ttr": 1798, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00!\\x00!\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "UKGUIDE"}, "text": " NAME HHLTSIO HHLTSIO\n*\n*         SUPERZAP TO ENABLE GTF TO LOG DISK ADDRESSES AND\n*\n*         VOLUME SERIAL NUMBER FOR 1ST SEEKS TO D.A.DEVICES\n*\n*         WHERE THE COMPLETION CODE IS ZERO.\n*\n*         APPLICABLE TO RELEASE 2.6 OF VS1\n*\n*         REPLACES CODE WHICH FILLS UP THE 5-WORD RQE FIELDS\n*         IN THE SIO COMPREHENSIVE RECORDS\n*\n*\n*\n VER     0064  45E0B2A0       VERIFY BAL TO RQE ROUTINE\n VER     02A0  9240C001       FIRST INSTRUCTION OF RQE ROUTINE\n REP     02A0  92FFC044,0700  MOVE HEXADECIMAL 'FF' TO\n REP     02A6  D212C045,C044  RQE WORDS FIELD\n REP     02AC  92FFC030,0700  AND ALSO TO\n REP     02B2  D202C031,C030  RQE TCB POINTER\n REP     02B8  4840,1002      R4 -> RQE ( ... R1 -> UCB)\n REP     02BC  9107,C035      SIO COMP CODE = 0 ?\n REP     02C0  4770,B2E0      NO - EXIT\n REP     02C4  9520,4012      DEVICE DIRECT ACCESS ?\n REP     02C8  4770,B2E0      NO - EXIT\n REP     02CC  9160,4006      FIRST SEEK ?\n REP     02D0  4770,B2E0      NO - EXIT\n REP     02D4  D207C044,4030  YES - MOVE IN SEEK ADDRESS\n REP     02DA  D205C04C,401C  AND VOLUME SERIAL NUMBER\n REP     02E0  07FE           RETURN - THE RQE FIELD WILL\n*                             CONTAIN VALID DATA OR\n*                             HEXADECIMAL 'FF'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HEXPRINT": {"ttr": 1800, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INIT": {"ttr": 1802, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00S\\x00S\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 83, "newlines": 83, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    INIT  &AREA,&LV=8,&FILL=00\n         LCLA  &L\n         AIF   (T'&AREA EQ 'O').ERR1\n         AIF   ('&LV'(1,1) EQ '(').A\n&L       SETA  &LV\n         AIF   (&L LT 513).MVC\n.A       AIF   ('&AREA'(1,1) EQ '(').B\n&NAME    LA    0,&AREA             LOAD AREA ADDRESS\n         AGO   .C\n.B       AIF   ('&AREA' EQ '(0)').NAMEIT\n&NAME    LR    0,&AREA(1)          LOAD AREA ADDRESS\n         AGO   .C\n.NAMEIT  ANOP\n&NAME    DS    0H\n.C       LR    14,0                LOAD AREA ADDRESS\n         AIF   ('&LV'(1,1) EQ '(').D\n         AIF   (&L LT 4096).E\n         L     1,=F'&L'            LOAD LENGTH\n         AGO   .F\n.D       AIF   ('&LV' EQ '(1)').F\n         LR    1,&LV(1)            LOAD LENGTH\n         AGO   .F\n.E       LA    1,&L.(0,0)          LOAD LENGTH\n.F       AIF   ('&FILL' EQ '00').X\n         IC    15,=X'&FILL'        LOAD PADDING CHARACTER\n         SLL   15,24               SHIFT TO HIGH ORDER BYTE\n         AGO   .Y\n.X       SR    15,15               SET PADDING CHAR. TO X'00'\n.Y       MVCL  0,14                INITIALISE STORAGE\n         MEXIT\n.MVC     AIF   ('&FILL' EQ '00').XOR\n         AIF   ('&AREA'(1,1) EQ '(').G\n&NAME    MVI   &AREA,X'&FILL'      MOVE PADDING CHAR. TO FIRST BYTE\n&L       SETA  &L-1\n         AGO   .H\n.G       ANOP\n&NAME    MVI   0&AREA,X'&FILL'     MOVE PADDING CHAR. TO FIRST BYTE\n&L       SETA  &L-1\n.H       AIF   (&L GT 256).I\n         AIF   ('&LV' EQ '1').END\n         AIF   ('&AREA'(1,1) EQ '(').J\n         MVC   &AREA+1(&L),&AREA   INITIALISE STORAGE\n         MEXIT\n.J       MVC   1(&L,&AREA(1)),0&AREA    INITIALISE STORAGE\n         MEXIT\n.I       AIF   ('&AREA'(1,1) EQ '(').K\n         MVC   &AREA+1(256),&AREA  INITIALISE FIRST 256 BYTES\n&L       SETA  &L-256\n         MVC   &AREA+256(&L),&AREA+255  INITIALISE REST OF STORAGE\n         MEXIT\n.K       MVC   1(256,&AREA(1)),0&AREA   INITIALISE FIRST 256 BYTES\n&L       SETA  &L-256\n         MVC   256(&L,&AREA(1)),255&AREA    INITIALISE REST OF STORAGE\n         MEXIT\n.XOR     AIF   (&L LT 257).Z\n         AIF   ('&AREA'(1,1) EQ '(').M\n&NAME    XC    &AREA.(256),&AREA   CLEAR FIRST 256 BYTES\n         AGO   .N\n.M       ANOP\n&NAME    XC    0(256,&AREA(1)),0&AREA   CLEAR FIRST 256 BYTES\n.N       ANOP\n&L       SETA  &L-256\n         AIF   ('&AREA'(1,1) EQ '(').O\n         XC    &AREA+256(&L),&AREA+256  CLEAR REST OF AREA\n         MEXIT\n.O       XC    256(&L,&AREA(1)),256&AREA  CLEAR REST OF AREA\n         MEXIT\n.Z       AIF   (&L EQ 1).P\n         AIF   ('&AREA'(1,1) EQ '(').Q\n&NAME    XC    &AREA.(&L),&AREA    CLEAR STORAGE\n         MEXIT\n.Q       ANOP\n&NAME    XC    0(&L,&AREA(1)),0&AREA    CLEAR STORAGE\n         MEXIT\n.P       AIF   ('&AREA'(1,1) EQ '(').R\n&NAME    MVI   &AREA,X'00'         MOVE LOW VALUES INTO STORAGE\n         MEXIT\n.R       ANOP\n&NAME    MVI   0&AREA,X'00'        MOVE LOW VALUES INTO STORAGE\n         MEXIT\n.ERR1    MNOTE 8,'AREA ADDRESS NOT SPECIFIED'\n.END     MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LATCH": {"ttr": 1805, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00!\\x00!\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    LATCH &A,&B,&VL,&TYPE=\n         CNOP  0,4\n&NAME    DS    0H\n         AIF   ('&TYPE' EQ 'LINK').BA02\n         AIF   (K'&B NE 0).BA01\n         ST    R1,L1&SYSNDX+4      SAVE ADDRESS OF PARAMETER LIST\n         B     *+12                BRANCH AROUND CONSTANTS\nL1&SYSNDX DS    A                  ENTRY POINT ADDRESS\n         DS    A                   PARAMETER LIST ADDRESS\nL2&SYSNDX BC   0,L3&SYSNDX         BRANCH ROUND LOAD AFTER 1ST TIME\n         LOAD  EP=&A\n         ST    R0,L1&SYSNDX        SAVE ENTRY POINT ADDRESS\n         OI    L2&SYSNDX+1,X'F0'   CAUSE BRANCH ROUND LOAD\nL3&SYSNDX LM   R0,R1,L1&SYSNDX     LOAD ENTRY POINT & PARM LIST ADDR.\n         LR    R15,R0         LOAD ENTRY POINT OF MODULE\n         CALL  (15)\n         MEXIT\n.BA01    ANOP\nL4&SYSNDX BC   0,L5&SYSNDX         BRANCH ROUND LOAD AFTER 1ST TIME\n         LOAD  EP=&A\n         ST    R0,L6&SYSNDX        SAVE ENTRY POINT ADDRESS\n         OI    L4&SYSNDX+1,X'F0'   CAUSE BRANCH AROUND LOAD\n         CNOP  0,4\n         B     *+8                 BRANCH AROUND ENTRY POINT ADDRESS\nL6&SYSNDX DS   A                   ENTRY POINT ADDRESS\nL5&SYSNDX L    R0,L6&SYSNDX        LOAD ENTRY POINT ADDRESS\n         LR    R15,R0         LOAD ENTRY POINT OF MODULE\n         CALL  (15),&B,&VL\n         MEXIT\n.BA02    ANOP\n         LINK  EP=&A,PARAM=&B\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LEAVE": {"ttr": 1807, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x17\\x00\\x17\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    LEAVE &RC,&REG=(14,12)\n         GBLA  &#SA,&#SP\n         GBLB  &#RENT\n         LCLA  &R\n         AIF   ('&NAME' EQ '').GO\n&NAME    DS    0H\n.GO      AIF   (&#RENT).RTYPE\n         AIF   (&#SA LT 8).RCCHK\n         L     13,4(0,13)          LOAD HSA ADDRESS\n.RCCHK   AIF   (T'&RC EQ 'O').RET\n         AIF   ('&RC'(1,1) EQ '(').SPEC\n&R       SETA  &RC\n.RET     RETURN &REG,RC=&R\n         MEXIT\n.SPEC    RETURN &REG,RC=&RC\n         MEXIT\n.RTYPE   AIF   (&#SA EQ 0).RCCHK\n         LR    1,13                SAVE AREA ADDRESS\n         L     13,4(0,13)          LOAD HSA ADDRESS\n         FREEMAIN R,LV=&#SA,SP=&#SP,A=(1)\n         AGO   .RCCHK\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOAD": {"ttr": 1809, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\r\\x00\\r\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    LOAD\n&NAME    DS    0H\n         MNOTE 0,'LOAD VARIES UNDER O.S.'\n         SPACE 2\n*        LOAD EXISTS UNDER O.S. BUT WITH THE FOLLOWING CHANGES -\n*                   1.  ENTRY ADDRESS RETURNED IN R0 RATHER THAN R1.\n*                   2.  YOU CANNOT SUPPLY AN OVERRIDING 'LOADADDR'.\n*                   3.  USE THE 'DELETE' MACRO TO FREE SPACE CONSUMED\n*                       BY A LOADED MODULE.\n*                   4.  MACROS SEGLD AND SEGWT MAY ALSO BE USED.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOSE": {"ttr": 1811, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00r\\x00r\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 114, "newlines": 114, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    LOSE  &A,&SWITCH=,&ALSO=\n         GBLB  &JLOSE\n         GBLA  &JLSW,&JLADD\n         GBLC  &SWSTOR(10),&ALSTOR(30),&P,&TH(10)\n         LCLB  &LOCAL\n         LCLA  &NUM,&INDX,&LIMIT\n&TH(1)   SETC  'ST'\n&TH(2)   SETC  'ND'\n&TH(3)   SETC  'RD'\n&TH(4)   SETC  'TH'\n&TH(5)   SETC  'TH'\n&TH(6)   SETC  'TH'\n&TH(7)   SETC  'TH'\n&TH(8)   SETC  'TH'\n&TH(9)   SETC  'TH'\n&TH(10)  SETC  'TH'\n         AIF   (&JLOSE).NORM\n&JLOSE   SETB  (1)\n&INDX  SETA  1\n         AIF   (T'&SWITCH EQ 'O').TRYAL\n&LOCAL   SETB  (1)\n&P       SETC   'SWITCH'\n&LIMIT   SETA  N'&SWITCH\n         AIF   (&LIMIT GT 10).TOOBIG\n&INDX    SETA  (&LIMIT/2)*2\n         AIF   (&INDX NE &LIMIT).NOTX2\n&JLSW    SETA  &INDX\n&INDX    SETA  1\n.L1    AIF  (K'&SWITCH(&INDX) GT 4).TOOLONG\n&SWSTOR(&INDX) SETC '&SWITCH(&INDX)'\n&INDX    SETA  &INDX+1\n         AIF   (&INDX LE &LIMIT).L1\n&INDX    SETA  1\n.TRYAL   AIF   (T'&ALSO EQ 'O').NORMX\n&LOCAL   SETB  (1)\n&P       SETC  'ALSO'\n&LIMIT   SETA  N'&ALSO\n         AIF   (&LIMIT GT 30).TOOBIG\n&INDX    SETA  (&LIMIT/2)*2\n         AIF   (&INDX NE &LIMIT).NOTX2\n&JLADD   SETA  &INDX\n&INDX    SETA  1\n.L2            AIF (K'&ALSO(&INDX) GT 4).TOOLONG\n&ALSTOR(&INDX) SETC '&ALSO(&INDX)'\n&INDX    SETA  &INDX+1\n         AIF   (&INDX LE &LIMIT).L2\n&INDX  SETA  1\n.NORMX AIF (&JLSW LT &INDX).NORM\n&P       SETC  '&SWSTOR(&INDX)'\n&LIMIT   SETA  2\n.TEST0   AIF   ('&P' EQ '&SWSTOR(&LIMIT)').WARN\n.L4    ANOP\n&LIMIT   SETA  &LIMIT+2\n         AIF   (&JLSW GT &LIMIT).TEST0\n&INDX  SETA  &INDX+2\n         AGO   .NORMX\n.WARN    MNOTE 4,'&INDX &TH(&INDX) OPERAND - &P - REPEATED AS SUBJECT IN\n               N &LIMIT &TH(&LIMIT) OPERAND IN SWITCH KEYWORD'\n&SWSTOR(&LIMIT-1) SETC ''\n       AGO  .L4\n.NORM    AIF   (T'&A EQ 'O').ERRORT\n         AIF   (T'&NAME EQ 'O').NLAB\n&NAME    DC    0H'0'\n.NLAB ANOP\n&LOCAL   SETB  0\n&NUM     SETA  &SYSNDX\n$$LS&NUM LA    &A.REG,&A\n         LTR   1,&A.REG .              END CHAIN\n         BZ    $$LE&NUM\n         AIF   (&JLADD EQ 0).OUT1\n&INDX    SETA  1\n.TEST1   AIF   ('&ALSTOR(&INDX)' NE '&A').UP2\n&P       SETC  '&ALSTOR(&INDX+1)'\n         L     &P.REG,&A.&P\n         LOSE  &P\n.UP2     ANOP\n&INDX    SETA  &INDX+2\n         AIF   (&JLSW GT &INDX).L3\n&INDX    SETA  &INDX+2\n         AIF   (&INDX LT &JLADD).TEST1\n            LR 1,&A.REG\n.OUT1    AIF   (&JLSW EQ 0).OUT2\n&INDX    SETA  1\n.TEST2   AIF   ('&SWSTOR(&INDX)' EQ '&A').OUT3\n&INDX    SETA  &INDX+2\n         AIF   (&INDX LT &JLSW).TEST2\n.OUT2    L     &A.REG,&A.LINK .        LOAD FOR NEXT BUFFER\n         AGO   .FREE\n.OUT3    ANOP\n&P       SETC  '&SWSTOR(&INDX+1)'\n&LOCAL   SETB  (1)\n         L     &P.REG,&A.LINK .        SWITCH TO NEXT BUFFER CHAIN\n.FREE    LA    0,&A.REQ\n         FREEMAIN R,A=(1),LV=(0)\n         AIF   (&LOCAL).OUT4\n         B     $$LS&NUM\n$$LE&NUM EQU   *\n         MEXIT\n.OUT4    LOSE  &P\n$$LE&NUM EQU   *\n         MEXIT\n.TOOLONG MNOTE 4,'&INDX &TH(&INDX)&P OPERAND TOO MANY CHARACTERS'\n         MEXIT\n.TOOBIG  MNOTE 4,'&P HAS TOO MANY OPERANDS'\n         MEXIT\n.ERRORT  AIF   (&LOCAL).OUT\n         MNOTE 4,'TYPE TO FREE MUST NOT BE OMMITTED'\n.OUT     MEXIT\n.NOTX2   MNOTE 4,'&P HAS NOT GOT A EVEN NO. OF OPS.'\n         MEND\n         LOSE  SWITCH=($SET,$MEM),ALSO=($MEM,$ADD,$INC,$ADD)\n  LOSE $SET\n END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LPYR": {"ttr": 1814, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          001\n&NAME    LPYR  &INPUT,&NOLPYR                                           002\n         AIF   ('&INPUT' NE ' ').NO                                     003\n         MNOTE 'FIRST PARAMETER OMITTED'                                004\n         AGO   .N1                                                      005\n.NO      AIF   ('&NOLPYR' NE ' ').N2                                    006\n         MNOTE 'SECOND PARAMETER OMITTED'                               007\n.N1      MNOTE 'GENERATION TERMINATED'                                  008\n         MEXIT                                                          009\n.N2      ANOP                                                           010\n&NAME    TM    &INPUT,X'01'                                             011\n         BO    &NOLPYR                                                  012\n         TM    &INPUT,X'12'                                             013\n         BM    &NOLPYR                                                  014\n         MEND                                                           015\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MIPCARD": {"ttr": 2049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x001\\x001\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 49, "newlines": 49, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    MIPCARD &DSECT,&TYPE=NEW\n         AIF   ('&DSECT' EQ 'DSECT').DSECT\n         DS    0F\n&NAME    DS    0CL80               PUNCH CARD IMAGE\n         AGO   .CARD\n.DSECT   ANOP\n&NAME    DSECT                     PUNCH CARD IMAGE\n.CARD    AIF   ('&TYPE' EQ 'OLD').OLD\n         SPACE\n*              VOLUME CARD\nPUNVSN   DS    CL6                 VOLUME SERIAL NUMBER\nPUNDATE  DS    CL8                 DATE OF RUN\nPUNDESC  DS    CL15                VOLUME DESCRIPTION\nPUNDEVC  DS    CL8                 DEVICE CODE\nPUNOWNID DS    CL10                OWNER ID\n         DS    CL32\nPUNCTYPE DS    CL1                 INDICATOR = 1 FOR VOLUME\n         SPACE\n*              DATA SET CARD\n         SPACE\n         ORG   PUNDESC             BEFORE THIS SAME AS VOLUME CARD\nPUNDSN   DS    CL44                DATA SET NAME\nPUNTYPE  DS    CL1                 LIBRARY TYPE\nPUNCREDT DS    CL5                 CREATION DATE\nPUNEXPDT DS    CL5                 EXPIRY DATE\n         SPACE\n*              MEMBER CARD\n         SPACE\n         ORG   PUNCREDT            BEFORE THIS SAME AS DATA SET CARD\nPUNMEM   DS    CL8                 MEMBER NAME\nPUNALIAS DS    CL1                 ALIAS\nPUNSSI   DS    CL8                 SSI\n         ORG   PUNCARD+80\n         SPACE\n         MEXIT\n.OLD     ANOP\n         SPACE\nPUNMEM   DS    CL8                 MEMBER NAME\nPUNALIAS DS    CL1                 ALIAS\nPUNTYPE  DS    CL1                 LIBRARY TYPE\nPUNVSN   DS    CL6                 VOLUME SERIAL\nPUNDATE  DS    CL8                 DATE OF RUN\nPUNDSN   DS    CL44                DATA SET NAME\nPUNSSI   DS    CL8                 SSI\n         DS    CL3                 RESERVED\nPUNCTYPE DS    CL1                 INDICATOR FOR CARD TYPE\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MIPDSEXT": {"ttr": 2051, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x15\\x00\\x15\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    MIPDSEXT\n         SPACE\n*              OVERLAY MASK FOR EXTENT BLOCK\n&NAME    DSECT\n         SPACE\nDSEXT1   DS    CL28\n         SPACE\n         ORG   DSEXT1\nEXTANEXT DC    A(0)                ADDRESS OF NEXT SEQUENTIAL EXTENT\nEXTSCCHH DC    F'0'                STARTING CCHH\nEXTECCHH DC    F'0'                ENDING CCHH\nEXTNOTRK DC    H'0'                NUMBER OF TRACKS IN EXTENT\nEXTSEQ   EQU   *                   EXTENT SEQUENCE NUMBER\nEXTTYPND DC    X'0'                OR   EXTENT TYPE INDICATOR\n         DC    X'00'               RESERVED\nEXTADSN  DC    A(0)                ADDRESS OF DATA SET NAME\nEXTSABS  DC    H'0'                STARTING ABSTRAK\nEXTEABS  DC    H'0'                ENDING ABSTRAK\nEXTDNEXT DC    A(0)                ADDRESS OF NEXT EXTENT FOR DATA SET\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MIPF1": {"ttr": 2053, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x0b\\x00\\x0b\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 11, "newlines": 11, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    MIPF1 &ORG\n&NAME    F1DSCB &ORG\n         SPACE\n*              END OF FORMAT 1 DSCB\n         SPACE\nDS1FDAD  DS    CL8                 FULL D-A ADDRESS OF DSCB\nDS1AF3   DS    A                   ADDRESS OF FORMAT 3 DSCB\nDS1ANEXT DS    A                   ADDRESS OF NEXT FORMAT 1 DSCB\nDS1AEXT  DS    A                   ADDRESS OF FIRST EXTENT BLOCK\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MIPPCWA": {"ttr": 2055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x009\\x009\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 57, "newlines": 57, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    MIPPCWA &DSECT\n         SPACE\n         AIF   ('&DSECT' EQ 'DSECT').DSECT\n         DS    0F\n&NAME    EQU   *                   PROGRAM CONTROL WORK AREA\n         AGO   .CONT\n.DSECT   ANOP\n&NAME    DSECT                     PROGRAM CONTROL WORK AREA\n.CONT    ANOP\n         SPACE\nVOLSER#  DC    CL6' '              CURRENT VOLUME BEING LISTED\nVOLCT    DC    H'0'                NUMBER OF VOLUMES TO BE LISTED\nAF1DSCB  DC    A(0)                ADDRESS OF FORMAT 1 DSCB\nAF3DSCB  DC    A(0)                ADDRESS OF FORMAT 3 DSCB\nAF4DSCB  DC    A(0)                ADDRESS OF FORMAT 4 DSCB\nAF5DSCB  DC    A(0)                ADDRESS OF FORMAT 5 DSCB\nOPBYTE1  EQU   *                   FLAG BYTE\nSETBLANK EQU   X'80'               START SPACES AT TOP OF PAGE\n*        EQU   X'40'\n*        EQU   X'20'\n*        EQU   X'10'\n*        EQU   X'08'\n*        EQU   X'04'\n*        EQU   X'02'\n*        EQU   X'01'\n         DC    A(0)\nOPBYTE2  EQU   *                   OPTION BYTE\nOPTIONS  EQU   *                   OPTION BYTE\nOPDUMP   EQU   X'01'               DUMP OPTION\nOPPDS    EQU   X'02'               PDS LISTING REQUIRED\nOPCATLG  EQU   X'04'               CATALOG FLAGGING REQUIRED\nOPPUNCH  EQU   X'08'               PUNCHED OUTPUT REQUIRED\nOPEXT    EQU   X'10'               DATA SET EXTENTS REQUIRED\nFULLPDS  EQU   X'20'               FULL PDS LISTING REQUIRED\nOPTERM   EQU   X'40'               TERMINAL OUTPUT REQUIRED\nOPUSAGE  EQU   X'80'                    DISC USAGE REQUIRED\n         DC    A(0)                RESERVED\n         AIF   ('&DSECT' EQ 'DSECT').DSECT2\nAPUNCARD DC    A(PUNCARD)          ADDRESS OF PUNCH CARD IMAGE\nAPRLINE  DC    A(PRSTART)          ADDRESS OF PRINT LINE\nATOPLINE DC    A(AHEADING)         ADDRESS OF FIRST HEADING\nAJFCB    DC    X'87'               INDICATE JFCB\n         DC    AL3(JFCB)           ADDRESS OF JFCB\nVOLUMEXX DC    CL6'VOLUME'         CURRENT DDNAME\nDDVOLNO  DC    CL2'00'             INCLUDING DD VOLUME NUMBER\nPERCENT  DC    H'80'                    DEFAULT %AGE FILLED VALUE\n         AGO   .OPT\n.DSECT2  ANOP\nAPUNCARD DS    A                   ADDRESS OF PUNCH CARD IMAGE\nAPRLINE  DS    A                   ADDRESS OF PRINT LINE\nATOPLINE DS    A                   ADDRESS OF FIRST HEADING\nAJFCB    DS    A                   ADDRESS OF JFCB\nVOLUMEXX DS    CL8                 CURRENT DD NAME\nPERCENT  DS    H                        %AGE FILLED VALUE\n.OPT     ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MODIN": {"ttr": 2057, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\"\\x00\"\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 34, "newlines": 34, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    MODIN &ID=YES\n.*\n.**      MACRO MODIN  VERSION 1.0\n.**      -----------\n.**                   PROVIDE ADDRESSABILITY,SAVEAREA CHAINING\n.**                   PARAMETER ADDRESSES AND IDENTIFICATION.\n.**\n.*\n         LCLA  &LA01\n         LCLC  &LC01\n         AIF   ('&ID' EQ 'NO').MB05\n&LA01    SETA  8                   LENGTH OF IDENTIFICATION\n         AIF   ('&ID' EQ 'YES').MB03\n&LC01    SETC  '&ID'\n         AGO   .MB05\n.MB03    ANOP\n&LC01    SETC  '&SYSECT'\n.MB05    ANOP\n.*\n         USING *,R15\n         CNOP  2,4                 ALIGN SAVEAREA\n&NAME    STM   R14,R12,12(R13)     SAVE REGISTERS\n         ST    R13,SAVEAREA+4      BACK CHAIN SAVEAREAS\n         LR    R14,R13             SAVE POINTER TO SAVEAREA\n         BAL   R13,&LA01+*+76      POINT R13 TO SAVEAREA\nSAVEAREA DC    18A(0)              SAVEAREA\n         AIF   (&LA01 NE 8).MB20   SKIP IDENTIFICATION\n         DC    CL8'&LC01'          IDENTIFY MODULE\n.MB20    DROP  R15                 DROP INITIAL BASE REGISTER\n         USING SAVEAREA,R13        ADDRESSABILIY FOR MODULE VIA R13\n         ST    R13,8(R14)          FORWARD CHAIN SAVEAREAS\n         LM    R6,R10,0(R1)        LOAD PARAMETER REGISTERS\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MODOUT": {"ttr": 2059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00$\\x00$\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    MODOUT &R1,&R2,&R3,&R4,&R5,&R6\n         LCLA  &A,&B\n&NAME    L     R13,4(R13)\n         AIF   (K'&R6 EQ 0).M01\n         MNOTE 1,'NO MORE THAN 5 REGS CAN BE SPECIFIED- REST IGNORED'\n.M01     AIF   (K'&R1 EQ 0).M09\n&A       SETA  &R1\n         AIF   (&A GT 12).ERROR\n&B       SETA  &A*4+20\n         ST    &A,&B.(R13)\n         AIF   (K'&R2 EQ 0).M09\n&A       SETA  &R2\n         AIF   (&A GT 12).ERROR\n&B       SETA  &A*4+20\n         ST    &A,&B.(R13)\n         AIF   (K'&R3 EQ 0).M09\n&A       SETA  &R3\n         AIF   (&A GT 12).ERROR\n&B       SETA  &A*4+20\n         ST    &A,&B.(R13)\n         AIF   (K'&R4 EQ 0).M09\n&A       SETA  &R4\n         AIF   (&A GT 12).ERROR\n&B       SETA  &A*4+20\n         ST    &A,&B.(R13)\n         AIF   (K'&R5 EQ 0).M09\n&A       SETA  &R5\n         AIF   (&A GT 12).ERROR\n&B       SETA  &A*4+20\n         ST    &A,&B.(R13)\n         AGO   .M09\n.ERROR   MNOTE 1,'REGS 13,14 AND 15 CANNOT BE CHANGED- MACRO IGNORED'\n         MEXIT\n.M09     RETURN (14,12)\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MOVE": {"ttr": 2061, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00Q\\x00Q\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 81, "newlines": 81, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    MOVE  &T,&F,&LV\n         LCLA  &L,&I\n         AIF   (T'&T EQ 'O').ERR1\n         AIF   (T'&F EQ 'O').ERR1\n         AIF   (T'&LV EQ 'O').A\n         AIF   ('&LV'(1,1) EQ '(').MVCL\n&L       SETA  &LV\n         AGO   .B\n.A       ANOP\n&L       SETA  L'&T\n.B       AIF   (&L GT 512).MVCL\n         AIF   (&L GT 256).MULTI\n         AIF   ('&T'(1,1) EQ '(' AND '&F'(1,1) EQ '(').RRMVC\n         AIF   ('&T'(1,1) EQ '(' AND '&F'(1,1) NE '(').R1MVC\n         AIF   ('&T'(1,1) NE '(' AND '&F'(1,1) EQ '(').R2MVC\n&NAME    MVC   &T.(&L),&F\n         MEXIT\n.RRMVC   ANOP\n&NAME    MVC   0(&L,&T(1)),0&F\n         MEXIT\n.R1MVC   ANOP\n&NAME    MVC   0(&L,&T(1)),&F\n         MEXIT\n.R2MVC   ANOP\n&NAME    MVC   &T.(&L),0&F\n         MEXIT\n.MULTI   AIF   ('&T'(1,1) EQ '(' AND '&F'(1,1) EQ '(').RRMULTI\n         AIF   ('&T'(1,1) EQ '(' AND '&F'(1,1) NE '(').R1MULTI\n         AIF   ('&T'(1,1) NE '(' AND '&F'(1,1) EQ '(').R2MULTI\n&NAME    MVC   &T.(256),&F\n&L       SETA  &L-256\n         MVC   &T+256(&L),&F+256\n         MEXIT\n.RRMULTI ANOP\n&NAME    MVC   0(256,&T(1)),0&F\n&L       SETA  &L-256\n         MVC   256(&L,&T(1)),256&F\n         MEXIT\n.R1MULTI ANOP\n&NAME    MVC   0(256,&T(1)),&F\n&L       SETA  &L-256\n         MVC   256(&L,&T(1)),&F+256\n         MEXIT\n.R2MULTI ANOP\n&NAME    MVC   &T.(256),0&F\n&L       SETA  &L-256\n         MVC   &T+256(&L),256&F\n         MEXIT\n.MVCL    ANOP\n&NAME    STM   14,1,12(13)\n         AIF   ('&T' EQ '(0)').F\n         AIF   ('&T'(1,1) EQ '(').R1\n         LA    0,&T\n         AGO   .F\n.R1      LR    0,&T(1)\n.F       AIF   ('&F' EQ '(14)').LEN\n         AIF   ('&F'(1,1) EQ '(').R2\n         LA    14,&F\n         AGO   .LEN\n.R2      LR    14,&F(1)\n.LEN     AIF   (T'&LV EQ 'O').X1\n         AIF   ('&LV' EQ '(1)').L1\n         AIF   ('&LV' EQ '(15)').L2\n         AIF   ('&LV'(1,1) EQ '(').R3\n.X1      AIF   (&L GT 4096).DAMN\n         LA    1,&L\n         AGO   .L1\n.DAMN    L     1,=F'&L'\n         LA    1,0(0,1)\n.L1      LR    15,1\n         AGO   .MOOV\n.L2      LR    1,15\n         AGO   .MOOV\n.R3      LR    1,&LV(1)\n         AGO   .L1\n.MOOV    MVCL  0,14\n         LM    14,1,12(13)\n         MEXIT\n.ERR1    MNOTE 8,'REQUIRED PARAMETER(S) MISSING'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MSG": {"ttr": 2064, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x08\\x00\\x08\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    MSG\n&NAME    DS    0H\n         MNOTE 0,'MSG & MSGMN NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        FOR CONSOLE I/O USE O.S. MACROS 'WTO' & 'WTOR'.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MSGMN": {"ttr": 2066, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x04\\x00\\x04\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    MSGMN\n&NAME    MSG\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVCOM": {"ttr": 2068, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x05\\x00\\x05\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 5, "newlines": 5, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    MVCOM\n         MNOTE 0,'MVCOM NOT SUPPORTED BY O.S.'\n&NAME    COMRG\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NUMBR": {"ttr": 2070, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x19\\x00\\x19\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO                                                          001\n&NAME    NUMBR                                                          002\n         B     F&SYSNDX+6\nA&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'\nB&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'              005\nC&SYSNDX DC    XL10'00'\n         DC    X'FAFBFCFDFEFF'\nX&SYSNDX DC    F'0'                SAVE AREA REGISTER 2                 0071\nD&SYSNDX NC    B&SYSNDX,0(14)\nE&SYSNDX XC    B&SYSNDX,=20X'F0'                                        009\nF&SYSNDX TRT   0(0,14),C&SYSNDX-240                                     010\n&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO           011\n         MVI   E&SYSNDX+1,X'00'\n         MVI   F&SYSNDX+1,X'00'\n         BCTR  15,0\n         ST    2,X&SYSNDX          SAVE REGISTER 2\n         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER   012\n         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15  013\n         EX    15,E&SYSNDX\n         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON            015\n         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST           016\n         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE         017\nG&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL. 018\nH&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2                   0181\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPEN": {"ttr": 2072, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    OPEN\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'OPEN  MACRO FORMAT VARIES UNDER O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPENR": {"ttr": 2074, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    OPENR\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'OPENR  MACRO NOT SUPPORTED BY O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PERFORM": {"ttr": 2076, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x11\\x00\\x11\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&LBL     PERFORM &LAB\n         AIF   (K'&LAB GT 8).ERR1\n         AIF   (N'&LAB GT 1).ERR2\n         AIF   ('&LAB'(1,1) GT 'Z').ERR1\n         AIF   ('&LAB'(1,1) LT 'A').NAT\n         AGO   .BUILD\n.NAT     AIF   ('&LAB'(1,1) EQ '$').BUILD\n         AIF   ('&LAB'(1,1) EQ '#').BUILD\n         AIF   ('&LAB'(1,1) NE '@').ERR1\n.BUILD   ANOP\n&LBL     BAL   14,&LAB\n         MEXIT\n.ERR1    MNOTE 'INVALID LABEL'\n         MEXIT\n.ERR2    MNOTE 'TOO MANY PARAMETERS SUPPLIED'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PIOCS": {"ttr": 2078, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\t\\x00\\t\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         PIOCS\n         SPACE 2\n*        THE USE OF PHYSICAL IOCS IS NOT RECOMMENDED UNDER O.S.\n*                       LOGICAL IOCS SHOULD BE SUBSTITUTED OR A\n*                       UTILITY USED IN PREFERENCE.\n*                       SEE SYSTEMS IF PROBLEMS ARISE.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRINCORE": {"ttr": 2080, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRINTCC": {"ttr": 2305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00j\\x00j\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 106, "newlines": 106, "modlines": 0, "user": "UKGUIDE"}, "text": " TITLE 'GTF DISK ARM MOVEMENT ANALYSIS - BY BASCOMB LAMAR LUNSFORD - 5 S\n               STRING BANJO PLAYER EXTRODINAIRE'\nPRINTCC  BEGIN\n         LA    R1,SORTLIST              INDEX PARAMETER LIST\n         LINK  EP=SORT                  & LINK SORT\n         OPEN  (RECORDS,,PRINTDCB,(OUTPUT),SYSUT2,(OUTPUT))\nGET      GET   RECORDS,RECAREA          GET A RECORD\n         CLC   UCBADDR,RECAREA+5        HAS DEVICE ADDRESS CHANGED ?\n         BE    SKIP                     NO - SKIP ON\n         CLC   UCBADDR,=3C' '           1ST TIME THRU ?\n         BE    *+8                      DON'T PRINT TOTALS\n         BAL   R10,PRINTOT\n         MVC   UCBADDR,RECAREA+5        SAVE NEW DEVICE ADDRESS\n         PUT   PRINTDCB,HEADER          SKIP CHAN 1 & PRINT HEADER\n         ZAP   LINCOUNT,=P'450'         RESET LINE COUNT\n         MVC   CCSAV(4),RECAREA         SAVE CC1 & CC2\nSKIP     CLC   CCSAV(4),RECAREA         HAS CC1/CC2 CHANGED ?\n         BE    ADD                      NO - JUST ADD 1 TO COUNT\n         BAL   R10,PRINTOT              PRINT THE TOTALS\nADD      AP    COUNT,=P'1'              ADD 1 TO COUNT\n         B     GET                      & LOOP BACK\n         SPACE 2\nPRINTOT  LH    R1,CCSAV                 PICK UP CC1\n         MVC   UCB+1(3),UCBADDR    UCB ADDRESS\n         MVC   TIMES(4),COUNT      MOVE # TIMES\n         MVC   CC1(4),CCSAV        MOVE FROM & TO\n         LH    R1,CCSAV            FROM\n         LH    R2,CCSAV+2          TO\n         CR    R1,R2               EQUAL ?\n         BE    EQ                  YES\n         BL    ALOW                R1 LOW\n         SR    R1,R2               R1 HIGH\n         STH   R1,MOVED            STORE MOVED DISTANCE\n         B     OUT                 WRITE\nALOW     DS    0H\n         SR    R2,R1               CALCULATE MOVEMENT\n         STH   R2,MOVED            SAVE IN RCD\n         B     OUT                 WRITE\nEQ       DS    0H\n         XC    MOVED(2),MOVED      CLEAR FIELD\n         SPACE\nOUT      PUT   SYSUT2,CC1\n         LH    R1,CCSAV            RESTORE R1\n         CVD   R1,DWORD                 GET IN DECIMAL\n         UNPK  PLINE+1(3),DWORD+6(2)    UNPACK TO EBCDIC\n         OI    PLINE+3,X'F0'            ENSURE ZONE\n         LH    R1,CCSAV+2               REPEAT\n         CVD   R1,DWORD                 FOR\n         UNPK  PLINE+8(3),DWORD+6(2)    CC2\n         OI    PLINE+10,X'F0'\n         MVC   PLINE+14(8),MASK         MOVE IN MASK\n         ED    PLINE+14(8),COUNT        EDIT TOTAL COUNT\n         PUT   PRINTDCB,PLINE           PRINT THE RESULTS\n         ZAP   COUNT,=P'0'              RESET COUNT\n         MVC   CCSAV,RECAREA            SAVE NEXT CC1/CC2\n         AP    LINCOUNT,=P'10'          ADD TO LINE COUNT\n         BNOR  R10                      EXIT IF NEW PAGE NOT NEEDED\n         PUT   PRINTDCB,=CL22'1'        ELSE SKIP NEW PAGE\n         ZAP   LINCOUNT,=P'450'         RESET LINE COUNT\n         BR    R10                      & RETURN\n         SPACE 2\nEODAD    BAL   R10,PRINTOT\n         CLOSE (PRINTDCB,,RECORDS)\n         CLOSE (SYSUT2)\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n         EJECT\n*\n*  WORKING  STORAGE  SECTION\n*\nCC1      DS    CL2                 FROM CYL\nCC2      DS    CL2                 TO CYL\nMOVED    DS    CL2                 COUNT OF CYLS MOVED\nTIMES    DS    CL4                 FREQUENCY\nUCB      DC    4C'0'\nCCSAV    DC    XL4'0'\nDWORD    DS    D\nRECAREA  DS    CL8\nMASK     DC    X'4020202020202120'\nCOUNT    DC    PL4'0',XL2'0'\nHEADER   DC    CL22' '\n         ORG   HEADER\n         DC    C'1DISK DEVICE ='\nUCBADDR  DC    CL3' '\n         ORG\nLINCOUNT DC    P'450'\nPLINE    DC    CL22' XXX -> XXX    XXXXXXX'\n         CNOP  0,8\nSORTLIST DC    X'80',AL3(ADLST),XL2'0'\nADLST    DC    AL2(ENLIST-(ADLST+2))\n         DC    A(SORTCARD,SORTCDEN,RECARD,RECEND,0,0)\n         DC    A(1024*60)\nENLIST   DC    0A(0)\nSORTCARD DC    C' SORT FIELDS=(5,4,A,1,2,A,3,2,A),FORMAT=BI,SIZE=E5000'\nSORTCDEN DC    C' '\nRECARD   DC    C' RECORD LENGTH=8,TYPE=F'\nRECEND   DC    C' '\n         SPACE 2\nRECORDS  DCB   DSORG=PS,RECFM=FB,MACRF=(GM),DDNAME=SORTOUT,LRECL=8,    X\n               EODAD=EODAD\nPRINTDCB DCB   DSORG=PS,RECFM=FA,MACRF=(PM),DDNAME=PRINT,LRECL=22,     X\n               BLKSIZE=22\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,LRECL=14,BLKSIZE=2800,  *\n               RECFM=FB\n         LTORG\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PROGIN": {"ttr": 2308, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00#\\x00#\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    PROGIN &ID=YES\n.*\n.**      MACRO PROGIN    VERSION 1.0\n.**      -----------\n.**                      PROVIDE ADDRESSABILITY,SAVEAREA CHAINING,\n.**                      LINKAGE, SAVEAREA, AND IDENTIFICATION.\n.**\n.*\n         LCLA  &LA01\n         LCLC  &LC01\n         AIF   ('&ID' EQ 'NO').MB05\n&LA01    SETA  8                   LENGTH OF IDENTIFICATION\n         AIF   ('&ID' EQ 'YES').MB03\n&LC01    SETC  '&ID'\n         AGO   .MB05\n.MB03    ANOP\n&LC01    SETC  '&SYSECT'\n.MB05    ANOP\n.*\n         ENTRY SAVEAREA\n&NAME    DS    0H\n         USING *,R15\n         CNOP  2,4                 ALIGN SAVEAREA\n         STM   R14,R12,12(R13)     SAVE REGISTERS\n         ST    R13,SAVEAREA+4      BACK CHAIN SAVEAREAS\n         LR    R14,R13             SAVE POINTER TO SAVEAREA\n         BAL   R13,&LA01+*+76      POINT R13 TO SAVEAREA\nSAVEAREA DC    18A(0)              SAVEAREA\n         AIF   (&LA01 NE 8).MB20   SKIP IDENTIFICATION\n         DC    CL8'&LC01'          IDENTIFY MODULE\n.MB20    DROP  R15                 DROP INITIAL BASE REGISTER\n         USING SAVEAREA,R13        ADDRESSABILIY FOR MODULE VIA R13\n         ST    R13,8(R14)          FORWARD CHAIN SAVEAREAS\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PROGOUT": {"ttr": 2310, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x11\\x00\\x11\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    PROGOUT  &RC\n         LCLA  &A\n&NAME    L     R13,4(R13)\n         LM    R14,R12,12(R13)\n         AIF   (K'&RC GT 0).G01\n         MNOTE 0,'RC OMITTED RC=0 ASSUMED'\n&A       SETA  0\n         AGO   .G03\n.G01     ANOP\n&A       SETA  &RC\n         AIF   (&A GT 15).ERROR\n.G03     LA    R15,&A.(R0,R0)\n         BR    R14\n         MEXIT\n.ERROR   MNOTE 8,'INVALID RETURN CODE'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PUT": {"ttr": 2312, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    PUT\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'PUT   MACRO FORMAT VARIES UNDER O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "READ": {"ttr": 2314, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    READ\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'READ  MACRO FORMAT VARIES UNDER O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REGEQU": {"ttr": 2316, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x10\\x00\\x10\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 16, "newlines": 16, "modlines": 0, "user": "UKGUIDE"}, "text": "R0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPORT": {"ttr": 2318, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\xa1\\x00\\xa1\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 161, "newlines": 161, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    PRUNT  &FLD,&TARG\n&NAME    LH    R1,&FLD\n         CVD   R1,DWORK\n         OI    DWORK+7,15\n         UNPK  &TARG.(3),DWORK+6(2)\n         SPACE\n         MEND\n         EJECT\nREPORT   BEGIN\n         EJECT\n***      ROUTINE TO PRINT HEAD MOVEMENT AND FREQUENCY               ***\n***      DRIVEN BY CONTROL CARD ON SYSIN                            ***\n***      FORMAT :-                                                  ***\n***            COL 1   'A'    HEAD MOVEMENT REPORT                  ***\n***                   ANY OTHER    FREQUENCY REPORT                 ***\n***                    LETTER                                       ***\n***            COLS 2-7       MINIMUM VALUE ACCEPTED FOR            ***\n***                           THE REPORT TO BE MADE                 ***\n***                                                                 ***\n***            E.G.  A000100  WILL REPORT ON ANY HEAD MOVEMENT      ***\n***                           OF 100 CYLS OR GREATER                ***\n***                                                                 ***\n***            AND   X000050  WILL REPORT ON ANY HEAD MOVEMENTS     ***\n***                           THAT OCCURRED 50 OR MORE TIMES        ***\n         SPACE 4\n         OPEN  (SYSIN,,SYSUT1,,SYSPRINT,(OUTPUT))\n         SPACE\n         GET   SYSIN,DATA\n         SPACE\n         LA    R11,AREA            R11 -> DATA FROM SYSUT1\n         USING RCD,R11\n         GET   SYSUT1,AREA\n         MVC   LAST(4),UCB         MOVE IN UCB\n         MVC   DRIVE(3),UCB+1      MOVE IN HEADER\n         CLI   DATA,C'A'          'A'TYPE REPORT ?  - HEAD MOVEMENT ?\n         BE    HMVMT               YES\n         BAL   R8,FREQHDG          NO - ASSUME FREQUENCY\n         PACK  DWORK(8),DATA+1(6)  MINIMUM FREQUENCY FROM CARD\n         MVC   COMP(4),DWORK+4     MOVE IN COMPARAND\n         B     MISGET1\nLOOP1    DS    0H\n         GET   SYSUT1,AREA         RECORD FROM SYSUT1\n         SPACE\n         CLC   LAST(4),UCB          SAME UCB AS BEFORE\n         BE    SAME1\n         XC    LINECT(2),LINECT         CLEAR LINE COUNT\n         MVC   LAST(4),UCB\n         MVC   DRIVE(3),UCB+1      RE- INITIALISE HEADING\n         BAL   R8,FREQHDG\nSAME1    DS    0H\nMISGET1  DS    0H\n         CP    #TIMES(4),COMP      HAS IT MOVED ENOUGH TIMES ?\n         BL    LOOP1               NO - NEXT RECORD\n         LA    R8,LOOP1            YES - SET UP R8\nWRITE    DS    0H\n         PRUNT CC1,CC1LINE\n         PRUNT CC2,CC2LINE\n         PRUNT #CYLS,CYLSLINE\n         MVC   TIMELINE(8),PATTERN PATTERN TO PRINTLINE\n         ED    TIMELINE(8),#TIMES  PRINT # OF MOVEMENTS\n         SPACE\n         PUT   SYSPRINT,LINE\n         SPACE\n         LH    R1,LINECT           INCREMENT\n         LA    R1,1(0,R1)           LINE\n         STH   R1,LINECT             COUNT\n         CH    R1,=H'50'           TIME FOR NEW PAGE ?\n         BNE   NOHDG               NO\n         SPACE\n         PUT   SYSPRINT,HD1\n         SPACE\n         PUT   SYSPRINT,HD2\n         SPACE\n         XC    LINECT(2),LINECT    CLEAR LINE COUNT\nNOHDG    DS    0H\n         BR    R8\n         EJECT\nHMVMT    DS    0H\n         BAL   R8,MVMTHDG          WRITE HEADINGS\n         PACK  DWORK(8),DATA+1(6)  PACK MINIMUM VALUE\n         CVB   R10,DWORK\n         B     MISGET2\nLOOP2    DS    0H\n         GET   SYSUT1,AREA\n         SPACE\n         CLC   LAST(4),UCB          SAME UCB AS BEFORE\n         BE    SAME2\n         XC    LINECT(2),LINECT         CLEAR LINE COUNT\n         MVC   LAST(4),UCB\n         MVC   DRIVE(3),UCB+1      RE- INITIALISE HEADING\n         BAL   R8,MVMTHDG          NEW HEADING PLEASE\nSAME2    DS    0H\nMISGET2  DS    0H\n         CH    R10,#CYLS           DID IT MOVE FAR ENOUGH ?\n         BH    LOOP2               NO\n         LA    R8,LOOP2            YES - SET UP R8 FOR RETURN\n         B     WRITE               WRITE RECORD\n         SPACE\nFREQHDG  DS    0H\n         MVC   HD1TYPE(9),=C'FREQUENCY' SET UP TITLE\n         MVC   HD1NUM(6),DATA+1    MINIMUM VALUE FROM SYSIN\n         SPACE\nHDRITE   PUT   SYSPRINT,HD1\n         SPACE\n         PUT   SYSPRINT,HD2\n         SPACE\n         BR    R8\n         SPACE 3\nMVMTHDG  DS    0H\n         MVC   HD1TYPE(9),=C'MOVEMENT '  SET UP TITLE\n         MVC   HD1NUM(6),DATA+1    MINIMUM VALUE\n         B     HDRITE              WRITE HEADINGS\n         EJECT\nEND      DS    0H\n         CLOSE (SYSPRINT,,SYSUT1,,SYSIN)\n         SPACE\n         L     R13,4(0,R13)        R13 -> OLD SAVE AREA\n         LM    R14,R12,12(R13)     RESTORE REGISTERS\n         LA    R15,0               RETURN CODE\n         BR    R14                 BACK TO O.S.\n         SPACE 4\n***                 CONSTANTS ETC                                   ***\n         SPACE\n        PRINT NOGEN\nDWORK    DS    D                   UBIQUITOUS DOUBLEWORD\nDATA     DS    CL80                DATA IN HERE\nCOMP     DS    CL4                 COMPARAND FOR FREQUENCY\nPATTERN  DC    X'4020202020202120' PATTERN FOR PRINTLINE\nLINECT   DC    H'0'                LINE COUNT\nAREA     DS    CL10                RECORDS READ IN HERE\nUCB      DS    CL4\nHD1      DC    C'1          DISK MOVEMENT REPORT  -  MINIMUM '\nHD1TYPE  DS    CL9\n         DC    C' REPORTED = '\nHD1NUM   DS    CL6\n         DC    10C' '\nDRIVE    EQU   HD1+3\nHD2      DC    C'-          FROM CYL    TO CYL    # CYLS MOVED'\n         DC    C'    # OF TIMES                      '\nLINE     DC    C'              '\nCC1LINE  DS    CL3\n         DC    C'       '\nCC2LINE  DS    CL3\n         DC    C'           '\nCYLSLINE DS    CL3\n         DC    9C' '\nTIMELINE DS    CL8\n         DC    23C' '\nLAST    DC    4C' '\nSYSUT1   DCB   DDNAME=SYSUT1,MACRF=GM,DSORG=PS,EODAD=END\nSYSIN    DCB   DDNAME=SYSIN,MACRF=GM,DSORG=PS,LRECL=80,RECFM=F,        *\n               BLKSIZE=80\nSYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=081,BLKSIZE=1620*\n               ,RECFM=FBA\nRCD      DSECT\nCC1      DS    CL2                 TO CYL\nCC2      DS    CL2                 FROM CYL\n#CYLS    DS    CL2                 # CYLS TRAVERSED\n#TIMES   DS    CL4                 # OF TIMES THIS OCCURRED\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REQU": {"ttr": 2322, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00!\\x00!\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         REQU\n         SPACE 2\n***********************************************************************\n*                                                                     *\n*                                  REGISTER EQUATES                   *\n*                                                                     *\n***********************************************************************\n         SPACE 2\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SETFL": {"ttr": 2324, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    SETFL\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'SETFL  MACRO NOT SUPPORTED BY O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SETIME": {"ttr": 2326, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\n\\x00\\n\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 10, "newlines": 10, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    SETIME\n&NAME    DS    0H\n         MNOTE 0,'SETIME NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        FOR SETIME WITH OR WITHOUT A TECB, SPECIFY O.S. MACRO\n*                       'STIMER'.  NOTE THAT A WAIT IS INBUILT INTO\n*                       THIS MACRO EXPANSION IN THE CASE OF A TECB.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SETL": {"ttr": 2328, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    SETL\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'SETL  MACRO FORMAT VARIES UNDER O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFGET": {"ttr": 2330, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x97\\x00\\x97\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 151, "newlines": 151, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    SMFGET &REC=(4),&DUP=LOSE,&TYPE=JOB,&DATES=,                  X\n               &FIELDS=(31,4,PD,A,27,4,BI,A,19,8,CH,A,6,1,BI,A,43,1,BI,X\n               A)\n         GBLB  &SWSMF\n         LCLA  &R(50),&B,&C\n&C       SETA  N'&REC\n&B       SETA  1\n.R       ANOP\n&R(&B)   SETA  &REC(&B)\n&B       SETA  &B+1\n         AIF   (&B GT &C).Q\n         AGO   .R\n.Q       ANOP\n&NAME    LINK  EP=SORT,PARAM=P&SYSNDX,VL=1\n         PUSH  USING\n         AIF   (&SWSMF).SECOND\nE15EXIT  CSECT\n         USING *,15\n         SAVE  (14,12),,*\n         LR    14,13\n         LR    11,1\n         BAL   13,*+76\n         USING *,13\n         DROP  15\n         DS    18F\n         ST    14,4(13)\n         ST    13,8(14)\nE15SW    NOP   GET&SYSNDX\n         OPEN  (IN&SYSNDX)\n         OI    E15SW+1,X'F0'\n&B       SETA  1\n         AIF   (T'&DATES EQ 'O').GETIT\n         L     2,=V(&DATES)\n         PACK  F&SYSNDX.(4),0(5,2)\n         PACK  L&SYSNDX.(4),5(5,2)\n         OI    F&SYSNDX+3,X'0F'\n         OI    L&SYSNDX+3,X'0F'\n.GETIT   ANOP\nGET&SYSNDX  GET   IN&SYSNDX\n         AIF   (T'&DATES EQ 'O').B\n         CLC   30(4,1),F&SYSNDX\n         BL    GET&SYSNDX\n         CLC   30(4,1),L&SYSNDX\n         BH    GET&SYSNDX\n.B       AIF   (&B GT &C).FIN\n         CLI   5(1),X'&R(&B)'\n         BE    GOT&SYSNDX\n&B       SETA  &B+1\n         AGO   .B\n.FIN     ANOP\n         B     GET&SYSNDX\nGOT&SYSNDX  L     13,4(13)\n         LM    2,12,28(13)\n         LM    14,0,12(13)\n         LA    15,12\n         BR    14\nE15EOF   L     13,4(13)\n         RETURN (14,12),RC=8\n         LTORG\nIN&SYSNDX   DCB   DDNAME=SORTIN,DSORG=PS,MACRF=(GL),RECFM=VBS,         X\n               EODAD=E15EOF,BFTEK=A\n         AIF   (T'&DATES EQ 'O').NODC\nF&SYSNDX DC    PL4'0'\nL&SYSNDX DC    PL4'0'\n.NODC    AIF   ('&DUP' EQ 'KEEP').SECOND\nE35EXIT  CSECT\n         USING *,15\n         SAVE  (14,12),,*\n         LR    14,13\n         LR    11,1\n         BAL   13,*+76\n         USING *,13\n         DROP  15\n         DS    18F\n         ST    14,4(13)\n         ST    13,8(14)\n         CLC   0(4,11),=F'0'\n         BE    FIN&SYSNDX\nE35SW    NOP   G&SYSNDX\n         OPEN  (OUT&SYSNDX,(OUTPUT))\n         OI    E35SW+1,X'F0'\nG&SYSNDX L     2,0(11)\n         CLI   FLG&SYSNDX,X'00'\n         BE    C&SYSNDX\n         CLC   BUF&SYSNDX.(16),0(2)\n         BE    RET&SYSNDX\n         PUT   OUT&SYSNDX,BUF&SYSNDX\nC&SYSNDX TM    0(2),X'FF'\n         MVI   FLG&SYSNDX,X'FF'\n         BNZ   M&SYSNDX\n         IC    3,1(2)\nS&SYSNDX STC   3,*+5\n         MVC   BUF&SYSNDX.(0),0(2)\nRET&SYSNDX L   13,4(13)\n         RETURN (14,12),RC=4\nFIN&SYSNDX PUT OUT&SYSNDX,BUF&SYSNDX\n         CLOSE (OUT&SYSNDX)\n         L     13,4(13)\n         RETURN (14,12),RC=8\nM&SYSNDX SR    3,3\n         ICM   3,B'0011',0(2)\nN&SYSNDX MVC   BUF&SYSNDX.(256),0(2)\n         SH    3,=H'256'\n         LA    2,256(2)\n         C     3,=F'256'\n         BL    S&SYSNDX\n         B     N&SYSNDX\n         SAVE  (14,12),,*\n         LR    14,13\n         LR    11,1\n         BAL   13,*+76\n         USING *,13\n         DROP  15\n         DS    18F\n         ST    14,4(13)\n         ST    13,8(14)\n         CLC   0(4,11),=F'0'\n         BE    FIN&SYSNDX\nE35SW    NOP   G&SYSNDX\n         OPEN  (OUT&SYSNDX,(OUTPUT))\n         OI    E35SW+1,X'F0'\nG&SYSNDX L     2,0(11)\n         CLI   FLG&SYSNDX,X'00'\n         BE    C&SYSNDX\n         CLC   BUF&SYSNDX.(16),0(2)\n         BE    RET&SYSNDX\n         PUT   OUT&SYSNDX,BUF&SYSNDX\nC&SYSNDX TM    0(2),X'FF'\n         MVI   FLG&SYSNDX,X'FF'\n         BNZ   M&SYSNDX\n         IC    3,1(2)\nS&SYSNDX STC   3,*+5\n         MVC   BUF&SYSNDX.(0),0(2)\nRET&SYSNDX L   13,4(13)\n         RETURN (14,12),RC=4\nFIN&SYSNDX PUT OUT&SYSNDX,BUF&SYSNDX\n         CLOSE (OUT&SYSNDX)\n         L     13,4(13)\n         RETURN (14,12),RC=8\nM&SYSNDX SR    3,3\n         ICM   3,B'0011',0(2)\nN&SYSNDX MVC   BUF&SYSNDX.(256),0(2)\n         SH    3,=H'256'\n         LA    2,256(2)\n         C     3,=F'256'\n         BL    S&SYSNDX\n         B     N&SYSNDX\n         L     1,4(0,1)            OUR TCB ADDRESS\n         L     1,12(0,1)           TIOT ADDRESS\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SPMODE": {"ttr": 2564, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STXIT": {"ttr": 2566, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x10\\x00\\x10\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 16, "newlines": 16, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    STXIT\n&NAME    DS    0H\n         MNOTE 0,'STXIT NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        FOR 'STXIT IT' USE O.S. MACRO 'STIMER'\n*        FOR 'STXIT PC' USE O.S. MACRO 'SPIE'\n*        FOR 'STXIT AB' USE O.S. MACRO 'STAE'\n*        FOR 'STXIT OC' THERE IS NO EQUIVALENT O.S. FEATURE SINCE\n*                       THE EXTERNAL INTERRUPT BUTTON IS RESERVED\n*                       FOR MULTIPLE CONSOLE SUPPORT.  USE 'WTOR'\n*                       FOR OPERATOR COMMUNICATIONS WITH A 'WAIT'\n*                       WHICH CAN BE CHECKED AT VARIOUS STAGES OF\n*                       THE USER PROGRAM FOR ANY OPERATOR RESPONSE.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TECB": {"ttr": 2568, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x08\\x00\\x08\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    TECB\n&NAME    DS    0H\n         MNOTE 0,'TECB NOT SUPPORTED BY O.S.'\n         SPACE 2\n*        O.S. MACRO 'STIMER' HAS ITS OWN INBUILT WAIT ROUTINE.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSGINNRA": {"ttr": 2570, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSGINNRB": {"ttr": 2572, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSGINNRC": {"ttr": 2574, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSGINNRD": {"ttr": 2576, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSGSNAP": {"ttr": 2578, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12\\x19\\x00\\x01\\x00\\x01\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:19:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "UKGUIDE"}, "text": " DUMMY MEMBER TO ENSURE FOLLOWING REPL WORKS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "U251235A": {"ttr": 2580, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12 \\x00%\\x00%\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:20:00", "lines": 37, "newlines": 37, "modlines": 0, "user": "UKGUIDE"}, "text": "BEGIN-GENERATES INITIALISATION CODING FOR AN ASSEMBLER PROGRAM.IT WILL SET UP A\nSAVE-AREA AND PERFORM ALL SAVE-AREA CHAINING.IT IS SPECIFIED AS FOLLOWS:\n     NAME      BEGIN BASE=A\n                     BASE=(R1,R2,....RN)\n                     PL1=YES\n                     PL1=NO\n                     ENTRY=ENTRYNAME\n                     REGS=R1\n                     REGS=R01\nALL PARAMETERS ARE OPTIONAL.DEFAULT VALUES ARE BASE=1,PL1=NO,REGS=R01.\nNAME WHEN SUPPLIED,IS USED TO LABEL THE CSECT STATEMENT\nA    CAN BE 1,2 OR 3 AND REPRESENT THE NUMBER OF BASE REGISTERS ASSIGNED.THEY\n     ARE ASSIGNED IN THE ORDER 12,11,10\n(R1,R2,...RN) ALLOWS OTHER REGISTERS TO BE USED AS BASES INSTEAD OF 10,11 AND 12\n     THEY MAY SPECIFY ANY REGISTERS(EXCEPT 0) IN ANY ORDER,E.G.\n          BASE=(R02,R11,R06,R10)\n     NB. NOTE THE CONVENTION FOR SPECIFYING THESE REGISTERS\nPL1=YES WILL GENERATE PL1-F COMPATIBLE CODE FOR ENTRY AND RETURN FROM THE MODULE\n     NB. THE OPTIMIZING COMPILER USES DIFFERENT CONVENTIONS AND IS NOT\n         COMPATIBLE WITH THIS MACRO\nENTRYNAME CAUSES A SECONDARY ENTRY POINT OF THE SPECIFIED NAME TO BE GENERATED\nREGS=R01 CAUSES A LIST OF REGISTER EQUATES TO BE GENERATED IN THE FORM:\n                    R00  EQU 0\n                    R01  EQU 1\n                         .\n                         .\n                         .\n                    R15  EQU 15\nREGS=R1 GENERATES EQUATES IN THE FORM\n                    R0   EQU 0\n                    R1   EQU 1\n                         .\n                         .\n                         .\n                    R15 EQU 15\n     NB. THE REGISTER EQUATES WILL ONLY BE GENERATED ONCE PER ASSEMBLY,\n         IRRESPECTIVE OF THE NUMBER OF BEGIN MACROS.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "U251235B": {"ttr": 2582, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12 \\x00\\r\\x00\\r\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:20:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "UKGUIDE"}, "text": "BACK-THIS ALLOWS RETURN TO BE MADE TO A HIGHER LEVEL MODULE.IT SHOULD ONLY BE\nUSED IN CONJUNCTION WITH THE BEGIN MACRO.\n     NAME      BACK  RC=N\n                     RC=(15)\n                     RC=(R15)\n                     RC=(RN)\nNAME IS OPTIONAL\nRC=  IS FOR RETURN CODE PROCESSING,AND IF NOT APECIFIED,A CODE OF 0 IS RETURNED.\nN    LOADS A VALUE OF 'N' INTO R15 BEFORE RETURNING\n(R15) OR (15) INDICATES THAT REGISTER 15 ALREADY CONTAINS THE RETURN CODE,AND IS\n     NOT TO BE ALTERED\nRN   CAUSES REGISTER 'N' TO BE LOADED INTO REGISTER 15 BEFORE RETURNING.THE\n     REGISTER MUST BE SPECIFIED USING THE FORMAT SHOWN IN THE BEGIN MACRO WHEN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCCAT": {"ttr": 2584, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00\\xc1\\x00\\xc1\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 193, "newlines": 193, "modlines": 0, "user": "UKGUIDE"}, "text": "VTOCCAT  CSECT\n         SPACE 4\n*    *    *    *    *    *    *    *    *    *    *    *    *    *    *\n*                                                                     *\n*        VTOCCAT    WILL CHECK IF DATA SETS ARE CATALOGUED AND IF SO  *\n*                   PRINTS THEM                                       *\n*                                                                     *\n*                   2 PARAMETERS ARE PASSED: ADDRESS OF PCWA          *\n*                                            ADDRESS OF 1ST DSCB      *\n*                                                                     *\n*    *    *    *    *    *    *    *    *    *    *    *    *    *    *\n         SPACE 4\n         BEGIN (SAVE)\n         SPACE\n         YEBEQU\n         SPACE 4\n         LM    R10,R11,0(R1)            ADDRESS PARAMETERS\n         USING PCWA,R10                 R10 -> PCWA\n         L     R11,0(R11)               R11 -> 1ST FORMAT 4 DSCB\n         LR    R2,R11\n         USING F1DSCB,R11\n         EJECT\n*              SET UP HEADER LINE - INITIALISE PRINT LINE\n         SPACE\n         L     R9,ATOPLINE              ADDRESS PAGE HEADER LINE\n         USING TOPLINE,R9\n         LA    R8,HEADING               ADDRESS NEXT HEADING\n         ST    R8,ANEXT                 STORE IN PAGE HEADER LINE\n         MVC   THEAD,=C'CATALOGUED DATA SETS FOR VOLUME '\n         MVC   TVOL,VOLSER#             VOLUME SERIAL\n         SPACE\n         L     R9,APRLINE               ADDRESS PRINT LINE\n         USING PRFIELD,R9\n         SR    R8,R8\n         ST    R8,ACLINE                NO FURTHER PRINT LINES\n         MVC   LINECT,=H'999'\n         MVI   PRCTL,C' '               SPACE TO NEXT LINE\n         MVC   PRLINE+1(132),PRLINE     CLEAR PRINT LINE\n         SPACE\n         MVC   VOLSERNO,VOLSER#\n         SR    R5,R5                    CATALOGUE COUNT\n         EJECT\n*              RUN THROUGH DSCB'S CHECKING FOR CATALOGED DATA SETS\n         SPACE\nCHKDSCB  CLC   DS1DSNAM,HEXFS           ANY MORE DSCBS?\n         BE    TRAIL                    NO\n         MVC   DSN,DS1DSNAM\n*              CHECK IF DATA SET CATALOGUED ON SYSTEM CATALOGUE\n         LOCATE LIST1\n         LTR   R15,R15                  FOUND IN SYSTEM CATALOGUE?\n         BZ    FOUND                    YES\n         SPACE\n         LOCATE LIST2\n         LTR   R15,R15                  FOUND IN PRIVATE CATALOGUE?\n         BZ    FOUND\n         OI    152(R11),X'80'      NOT FOUND - TURN ON HIGH ORDER BIT\n         SPACE\nNEXTDSCB L     R11,152(R11)             ADDR NEXT DSCB\n         B     CHKDSCB\nFOUND    LA    R5,1(R5)                 DATA SET COUNT\n         NI    152(R11),X'7F'      FOUND - TURN OFF HIGH ORDER BIT\n         MVC   LINES,=H'1'\n         MVC   PRLINE+11(44),DS1DSNAM\n         PERFORM PRINT                  PRINT LINE\n         B     NEXTDSCB\n         SPACE 4\nTRAIL    MVC   PRLINE+40(37),=C'<<<<<      DATA SETS CATALOGUED >>>>>'\n         MVC   PRLINE+45(5),=X'2020202120'   EDIT PATTERN\n         CVD   R5,DBWD                  NO OF DATA SETS CATALOGUED\n         ED    PRLINE+45(5),DBWD+5\n         PERFORM PRINT\n         SPACE 2\n***      NOW LIST UNCATALOGED DATASETS                              ***\n         SPACE 2\n         BAL   R3,UNCATHDG         WRITE UNCAT HEADINGS\n         LR    R11,R2              R11 -> 1ST FMT 1 DSCB            MKB\n         SR    R5,R5               CLEAR R5 FOR COUNT               MKB\nNEXT1    L     R2,152(0,R11)       R2 -> NEXT DSCB                  MKB\n         LTR   R2,R2               HIGH ORDER BIT ON ?              MKB\n         BM    UNCAT               YES - NOT CATALOGED              MKB\nNEXT2    LR    R11,R2              NO - CATALOGED - R11 -> NEXT DSCB KB\n         CLC   DS1DSNAM,HEXFS      ANYMORE DSCBS ?                  MKB\n         BE    TRAIL2              NO                               MKB\n         B          NEXT1          YES - PRAY CONTINUE              MKB\n         SPACE\nUNCAT    DS    0H                                                   MKB\n         MVC   PRLINE+11(44),DS1DSNAM  MOVE IN PRINTED DSNAME       MKB\n         LA    R5,1(0,R5)          ADD 1 TO COUNT                   MKB\n         MVC   LINES,=C'1'         PRINT AFTER 1                    MKB\n         PERFORM PRINT                                              MKB\n         B     NEXT2               TRY NEXT DSCB                    MKB\nTRAIL2   DS    0H                                                   MKB\n         MVC   PRLINE+40(37),=C'<<<<<      DATA SETS NOT CATLGD >>>>>'\n         MVC   PRLINE+45(5),=X'2020202120'                          MKB\n         CVD   R5,DBWD                                              MKB\n         ED    PRLINE+45(5),DBWD+5 COUNT OF DATA SETS               MKB\n         PERFORM PRINT                                              MKB\n         SPACE\n         GOBACK RC=0\n         SPACE 4\n*              PRINT LINE\n         SPACE\nPRINT    ST    R14,SAVE14\n         CALL  VTOCPRT,((R10))\n         L     R14,SAVE14\n         BR    R14\nSAVE14   DS    F\n         SPACE 2\nUNCATHDG DS    0H                  HEADINGS FOR UNCATALOGED DATA SETS\n         L     R9,ATOPLINE         R9 -> PAGE HEADER LINE\n         LA    R8,UHEAD            R8 -> NEXT HEADING\n         ST    R8,0(0,R9)          CHAIN UP                         MKB\n         MVC   51(32,R9),=C'LIST OF UNCATALOGED DATA SETS   '\n         L     R9,APRLINE          R9 -> PRINTLINE\n         LA    R8,0                TERMINATE\n         ST    R8,0(0,R9)           CHAIN\n         MVC   LINECT,=H'999'      LINE COUNT = 999 ...\n         MVI   7(R9),C' '          CLEAR PRINT LINE\n         MVC   8(132,R9),7(R9)\n         BR    R3                  RETURN TO CALLER\n*              LIST OF CATALOGUED DATA SETS HEADINGS\n         SPACE\nHEADING  DC    A(UNLINE)           ADDRESS OF UNDERLINE\n         DC    H'3'                NO OF LINES IN THIS GROUP\n         DC    X'40'\n         DC    C'-'                WRITE AFTER 3\n         DC    CL10' '\n         DC    CL122'CATALOGUED DATA SETS'\nUNLINE   DC    A(0)                NO FURTHER LINES TO PRINT\n         DC    H'0'                NO OF LINES\n         DC    X'40'\n         DC    C'+'                SPACE NO LINES\n         DC    CL10' '\n         DC    20C'_'\n         DC    CL102' '\n         SPACE 2\nUTOP     DC    C'        ',C'UNCATALOGED DATA SETS',110C' '  PAGEHDGG\nUHEAD    DC    A(LINEUN)           ADDRESS OF UNDERLINE\n         DC    H'3'                # OF LINES THIS GROUP\n         DC    X'40'\n         DC    C'-'                WRITE AFTER 3\n         DC    10C' '\n         DC    C' DATA SETS NOT CATALOGED',110C' '\nLINEUN   DC    A(0)                NO MORE TO PRINT\n         DC    H'0'\n         DC    X'40'\n         DC    C'+'                NO SPACE\n         DC    10C' '\n         DC    C' ',23C'_',110C' '\n         SPACE 2\n*              LOCATE & CAMLST WORK AREAS\n         SPACE\nLIST1    CAMLST NAME,DSN,,RTRNFLD\nLIST2    CAMLST NAME,DSN,VOLSERNO,RTRNFLD\n         SPACE\nDSN      DS    CL44                DATA SET NAME\nVOLSERNO DS    CL6                 VOLUME SERIAL\nRTRNFLD  DS    0D                  CAMLIST\n         DS    CL265\n         SPACE 4\n*              WORK AREAS\n         SPACE\nSAVE     DS    9D\nDBWD     DS    D\nHEXFS    DC    44X'FF'\n         EJECT\n*              PROGRAM CONTROL WORK AREA\n         SPACE\nPCWA     MIPPCWA DSECT\n         SPACE 4\n*              PAGE HEADING FOR CATALOGED DATA SET LIST\n         SPACE\nTOPLINE  DSECT\nANEXT    DS    F\n         DS    CL47\nTHEAD    DS    CL32\nTVOL     DS    CL6\n         SPACE 4\n*              PRINT LINE\n         SPACE\nPRFIELD  DSECT\nACLINE   DS    A                        ADDRESS NEXT LINE\nLINES    DS    H                        NO OF LINES\n         DS    C\nPRCTL    EQU   *                        CONTROL CHARACTER\nPRLINE   DS    CL133\nLINECT   DS    H                        LINE COUNT\nLINELMT  DS    H                        LINES/PAGE\n         SPACE 4\n*              FORMAT 1 DSCB\n         SPACE\nF1DSCB   MIPF1\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCEXT": {"ttr": 2588, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00\\xb6\\x00\\xb6\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 182, "newlines": 182, "modlines": 0, "user": "UKGUIDE"}, "text": "         TITLE 'VTOCEXT - DATA SET EXTENT LISTER'\nVTOCEXT  CSECT\n         SPACE 3\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*                                                                     *\n*   VTOCEXT    WILL IF REQUIRED PRODUCE A LIST OF EXTENTS FOR EACH    *\n*        DATA SET LISTED BY VTOCLIST                                  *\n*                                                                     *\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n         BEGIN\n         SPACE 3\n         YEBEQU\n         SPACE 3\n         L     R11,0(R1)           R11 -> PCWA\n         USING PCWA,R11\n         L     R10,APRLINE         R10 -> PRINT LINE\n         USING PRLINE,R10\n         EJECT\n*              INITIALISE FIELDS\n         SPACE\n         L     R8,AF1DSCB          R8 -> FORMAT 1 DSCB\n         USING F1DSCB,R8\n         CLI   DS1NOEPV,0          ANY EXTENTS?\n         BE    GOBACK              NO - TAKE NO ACTION\n         MVI   COLUMN,ONE          SET TO PRINT IN COLUMN 1\n         L     R8,DS1AEXT          R8 -> FIRST EXTENT BLOCK\n         USING DSEXT,R8\n         LTR   R8,R8               SHOULD POINT TO NEXT EXTENT\n         BZ    GOBACK              RETURN IF ZERO\n         SPACE 3\n*              SET UP HEADINGS\n         SPACE\n         MVC   PRFLD1,TITLES       MOVE TITLES TO COLUMN 1\n         MVC   PRFLD2,TITLES            AND TO COLUMN 2\n         MVC   LINES,=H'2'         SPACE 2 LINES\n         MVI   PRCTL,C'0'\n         PERFORM PRINT             PUT HEADINGS\n         MVC   PRFLD1,ULINE        MOVE UNDERLINES TO COLUMN 1\n         MVC   PRFLD2,ULINE             AND COLUMN 2\n         MVC   LINES,=H'0'         SPACE NO LINES\n         MVI   PRCTL,C'+'\n         PERFORM PRINT\n         SPACE 3\n*              SET UP PRINT FIELD\n         SPACE\nSETEXT   SR    R0,R0               CLEAR R0\n         IC    R0,EXTSEQ           R0 = SEQUENCE NUMBER\n         AH    R0,=H'1'            PLUS 1\n         CVD   R0,DNUM             IN DECIMAL\n         MVC   EXTNO,MASK1         MOVE IN MASK\n         ED    EXTNO,DNUM+6        EDIT EXTENT NUMBER\n         UNPK  TRFIELD,EXTSCCHH(5) STARTING CCHH\n         TR    TRFIELD,TRABLE      TRANSLATE TO PRINT\n         MVC   FROMCC,TRCC         MOVE IN CC\n         MVC   FROMHH,TRHH              AND HH\n         UNPK  TRFIELD,EXTECCHH(5) ENDING CCHH\n         TR    TRFIELD,TRABLE      TRANSLATE TO PRINT\n         MVC   TOCC,TRCC           MOVE IN CC\n         MVC   TOHH,TRHH                AND HH\n         SPACE 3\n*              NOW TRACKS\n         SPACE\n         LH    R0,EXTSABS          R0 = STARTING ABSTRAK NUMBER\n         CVD   R0,DNUM             IN DECIMAL\n         MVC   FROMABS,MASK2       MOVE IN MASK\n         ED    FROMABS,DNUM+5      THEN EDIT\n         LH    R0,EXTEABS          R0 = ENDING ABSTRAK NUMBER\n         CVD   R0,DNUM             IN DECIMAL\n         MVC   TOABS,MASK2         MOVE IN MASK\n         ED    TOABS,DNUM+5        THEN EDIT\n         LH    R0,EXTNOTRK         R0 = NUMBER OF TRACKS IN EXTENT\n         CVD   R0,DNUM             IN DECIMAL\n         MVC   NOTRKS,MASK2        MOVE IN MASK\n         ED    NOTRKS,DNUM+5       THEN EDIT\n         SPACE 3\n*              MOVE TO PRINT LINE\n         SPACE\n         CLI   COLUMN,ONE          FIRST PRINT COLUMN\n         BNE   COLUMN2             NO - MUST BE SECOND\n         MVC   PRFLD1,LINE         MOVE TO COLUMN 1\n         MVI   COLUMN,TWO          NEXT LINE TO COLUMN 2\n         L     R8,EXTDNEXT         R8 -> NEXT BLOCK\n         LTR   R8,R8               OR ZERO?\n         BNZ   SETEXT              NO - PROCESS THIS BLOCK\n         PERFORM PRINT             YES - PRINT LINE\n         B     ENDPRINT            GO TO FINISH PRINTING\nCOLUMN2  MVC   PRFLD2,LINE         MOVE TO COLUMN 2\n         PERFORM PRINT             PUT THE LINE\n         MVI   COLUMN,ONE          NEXT LINE TO COLUMN 1\n         L     R8,EXTDNEXT         R8 -> NEXT BLOCK\n         LTR   R8,R8               OR ZERO?\n         BNZ   SETEXT              NO - PROCESS THE BLOCK\n         SPACE 3\n*              TIDY UP PRINT\n         SPACE\nENDPRINT PERFORM PRINT             PUT BLANK LINE\nGOBACK   GOBACK RC=0               AND RETURN\n         SPACE 3\n*              PRINT ROUTINE\n         SPACE\nPRINT    ST    R14,PRINTST         SAVE R14\n         LA    R1,PCWA             R1 -> PCWA\n         CALL VTOCPRT,((R1))       BRANCH TO PRINT ROUTINE\n         L     R14,PRINTST         RESTORE R14\n         EXIT                      RETURN\n         SPACE 3\nDNUM     DC    D'0'\nTRLS     DC    C'0123456789ABCDEF' TRANSLATE TABLE\nTRABLE   EQU   TRLS-240            TRANSLATE TABLE ORIGIN\nPRINTST  DC    F'0'\nMASK1    DC    X'40202120'\nMASK2    DC    X'402020202120'\nTRFIELD  DC    CL9' '\n         ORG   TRFIELD\nTRCC     DS    CL4\nTRHH     DS    CL4\n         ORG\nCOLUMN   DC    X'00'\nONE      EQU   X'00'\nTWO      EQU   X'FF'\n         SPACE 3\nTITLES   DC    CL4' '\n         DC    C'EXT'\n         DC    CL4' '\n         DC    C'FROM'\n         DC    CL6' '\n         DC    C'TO'\n         DC    CL7' '\n         DC    C'FROM'\n         DC    CL3' '\n         DC    C'TO'\n         DC    CL5' '\n         DC    C'TRKS'\n         DC    CL18' '\n         SPACE\nULINE    DC    CL4' '\n         DC    3C'_'\n         DC    CL4' '\n         DC    4C'_'\n         DC    CL6' '\n         DC    2C'_'\n         DC    CL7' '\n         DC    4C'_'\n         DC    CL3' '\n         DC    2C'_'\n         DC    CL5' '\n         DC    4C'_'\n         DC    CL18' '\n         SPACE 3\nLINE     DC    CL2' '\nEXTNO    DC    XL4'40202120'\n         DC    CL2' '\nFROMCC   DC    CL4'0000'\n         DC    CL1'.'\nFROMHH   DC    CL4'0000'\n         DC    CL1' '\nTOCC     DC    CL4'0000'\n         DC    CL1'.'\nTOHH     DC    CL4'0000'\n         DC    CL1' '\nFROMABS  DC    XL6'402020202120'\nTOABS    DC    XL6'402020202120'\n         DC    CL1' '\nNOTRKS   DC    XL6'402020202120'\n         DC    CL18' '\n         SPACE 3\nDSEXT    MIPDSEXT\n         SPACE 3\nPRLINE   DSECT\nPRANEXT  DC    F'0'\nLINES    DC    0H'0'\nPRLINES  DC    H'0'\nSPACE    DC    X'40'\nPRCTL    DC    CL1' '\nPRFLD1   DC    CL66' '             COLUMN 1\nPRFLD2   DC    CL66' '             COLUMN 2\n         SPACE 3\nPCWA     MIPPCWA DSECT\n         SPACE 3\nF1DSCB   MIPF1\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCPARM": {"ttr": 2820, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x01\\x8d\\x01\\x8d\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 397, "newlines": 397, "modlines": 0, "user": "UKGUIDE"}, "text": "         TITLE 'VTOCPARM - PARM PROCESS ROUTINE OF YEBDMAP'\n         SPACE 3\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*                                                                     *\n*   VTOCPARM   WILL READ THE PARM FIELD PASSED BY VTOCLIST AND SETS   *\n*        ON THE APPROPRIATE FLAGS IN THE PCWA.                        *\n*                                                                     *\n*   ON ENTRY   R1 POINTS TO TWO ADDRESSES                             *\n*              1) THE ADDRESS OF THE PARM FIELD                       *\n*              2) THE ADDRESS OF THE PCWA                             *\n*                                                                     *\n** ALTERATION 1 BY S.A.LYNCH FEB 1975                                **\n** TO ALLOW FOR NEGATIVE OPTIONS AND ABBREVIATIONS                   **\n**  E.G. PARM=NODECK , PARM=NDK                                      **\n*                                                                     *\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         MACRO                                                    MSAL1\n&L       VTCSET &LAB\n&L       LA    R8,1(,R8)           CHAR COUNT OF OPTION IN R8\n         AR    R2,R8               R2 -> NEXT WORD\n         SR    R3,R8\n         CLI   PARMCHAR,COMMA      NEXT CHAR A COMMA ?\n         BE    &LAB                OR\n         LTR   R3,R3               END OF PARM?\n         BZ    &LAB                OR\n         B     BADPARM             NOT\n         MEND\n         SPACE  3\nVTOCPARM CSECT\n         BEGIN\n         YEBEQU\n         EJECT\n*              SET UP ADDRESSES\n         SPACE\n         L     R2,0(R1)            LOAD PARM ADDRESS\n         LH    R3,0(R2)            LOAD PARMLENGTH\n         LA    R2,2(R2)            LOAD PARM FIELD ADDRESS\n         L     R11,4(R1)           R11 -> PCWA\n         USING PCWA,R11\n         L     R10,APRLINE         R10 -> PRLINE\n         USING PRFIELD,R10\n         SPACE 3\n*              CHECK PARM FIELD\n         SPACE\n         MVC   PRLINE+10(21),=C'EXEC PARAMETER FIELD:'\n         CH    R3,=H'99'           CHECK PARM LENGTH\n         BL    A00010              BRANCH IF OK\n         MVC   PRLINE+30(29),=C'  IS TOO LONG AND WAS IGNORED'\n         SR    R3,R3\n         B     A00050\nA00010   LTR   R1,R3\n         BZ    A00050\n         BCTR  R1,R0\n         STC   R1,A00030+1\nA00030   MVC   PRLINE+33(1),0(R2)\nA00050   EQU   *\nA00070   MVI   PRLINE,C'-'         SPACE 3 LINES THEN WRITE\n         MVC   LINES,=H'3'         SPACE 3 LINES\n         PERFORM PRINT          BRANCH TO PRINT HEADERS\n         USING PARM,R2\n         MVI   OPBYTE1,0           SET OPBYTE1 TO DEFAULTS\n         MVI   OPBYTE2,0           SET OPBYTE2 TO DEFAULTS\nNEXTWORD LTR   R3,R3               TEST R3\n         BZ    ENDPARM             IF ZERO THEN END OF PARM\n         LR    R15,R2              SAVE R2\n         LA    R7,PARMTAB          PNTR TO PARAM TABLE             SAL1\n         CLI   PARMCHAR,COMMA                                      SAL1\n         BE    LBCOMA                                             SAL1\nBAKPARM  XR    R8,R8               CLEAR R8                        SAL|\n         LH    R8,0(R7)            LENTH-1 IN R8                   SAL1\n         EX    R8,TEST             TEST FOR PARAM IN TABLE        SAL1\n         BE    FOUND               BRANCH IF PARAM FOUND           SAL1\n         LA    R7,5(R7)            ADJUST PNTR                     SAL1\n         AR    R7,R8               PNTR TO NEXT TABLE ENTRY        SAL1\n         LA    R0,1                                                SAL1\n         NR    R0,R7              TEST IF R7 AT HALFWORD ADDR      SAL1\n         BE    HAFWD              IF SO                            SAL1\n         LA    R7,1(,R7)          INCR ADDR BY 1                   SAL1\nHAFWD    CLC   0(2,R7),=X'FFFF'    TEST FOR END OF TABLE           SAL1\n         BNE   BAKPARM                                             SAL1\n         B     BADPARM                                             SAL1\nLBCOMA   LA    R2,1(,R2)                                           SAL1\n         BCTR  R3,0                REDUCE LENGTH BY 1\n         B     NEXTWORD\n         SPACE  3\nFOUND    LH    R1,2(,R7)           INDEX IN R7                     SAL1\n         M     R0,=F'04'           MULT INDEX FOR FULLWD COUNT     SAL1\n         LA    R7,SUBTAB           SBRTN TABLE PNTR                SAL1\n         AR    R7,R1               PNTR TO RELV ENTRY              SAL1\n         L     R1,0(,R7)           PNTR TO SBRTN IN R1             SAL1\n         BR    R1                  BRANCH TO RELV RTN              SAL1\n         SPACE 3\n*              VOLUME COUNT\n         SPACE\nVOLS     LA    R2,5(R2)            R2 -> VOLUME COUNT\n         SH    R3,=H'5'            REDUCE LENGTH BY 5\n         BZ    ENDVOL              NO COUNT\n         SR    R0,R0               CLEAR R0\n         SR    R1,R1               CLEAR R1\nTESTVOL  CLI   PARMCHAR,COMMA      IS IT A COMMA?\n         BE    ENDVOL              YES\n         TM    PARMCHAR,X'F0'      TEST FOR CHAR > X'EF'\n         BNO   BADPARM             NO THEN USE DEFAULT\n         IC    R0,PARMCHAR         R0 = DIGIT\n         N     R0,=F'15'           CLEAR SIGN BITS\n         CH    R0,=H'10'           DECIMAL NUMBER?\n         BNL   BADPARM             NO - USE DEFAULT\n         MH    R1,=H'10'           MULTIPLY PREVIOUS BY 10\n         AR    R1,R0               ADD ON NEW\n         LA    R2,1(R2)            R2 -> NEXT BYTE\n         BCT   R3,TESTVOL          GO ROUND AGAIN\nENDVOL   STH   R1,VOLCT            SAVE VOLUME COUNT\n         B     NEXTWORD            GO ROUND AGAIN\n         SPACE 3\n*              DUMP OPTION\n         SPACE\nDUMP     VTCSET   SETDUMP                                          SAL1\nSETDUMP  OI    OPBYTE2,OPDUMP      SET FLAG\n         B     NEXTWORD            GO ROUND AGAIN\n         SPACE  3\n*              NO DUMP OPTION\n         SPACE  1\nNDMP     VTCSET  CLDUMP                                            SAL1\nCLDUMP   NI    OPBYTE2,255-OPDUMP  CLEAR FLAG                      SAL1\n         B     NEXTWORD            GO ROUND AGAIN                  SAL1\n         SPACE 3\n*              PDS LISTING OPTION\n         SPACE\nPDS      VTCSET   SETPDS                                           SAL1\nSETPDS   OI    OPBYTE2,OPPDS       SET FLAG\n         B     NEXTWORD            GO ROUND AGAIN\n         SPACE  3\n*              NO PDS LISTING OPTION\n         SPACE  1\nNPDS     VTCSET CLPDS                                              SAL1\nCLPDS    NI    OPBYTE2,255-OPPDS   CLEAR FLAG                      SAL1\n         B     NEXTWORD            GO ROUND AGAIN                  SAL1\n         SPACE 3\n*              CATALOG FLAGGING OPTION\n         SPACE\nCATLG    VTCSET   SETCATLG                                         SAL1\nSETCATLG OI    OPBYTE2,OPCATLG\n         B     NEXTWORD            GO ROUND AGAIN\n         SPACE  3\n*              NO CATALOG FLAGGING OPTION\n         SPACE  1\nNCTLG    VTCSET CLCTLG                                             SAL1\nCLCTLG   NI    OPBYTE2,255-OPCATLG CLEAR FLAG                      SAL1\n         B     NEXTWORD            GO ROUND AGAIN                  SAL1\n         SPACE 3\n*              DATA SET EXTENT OPTION\n         SPACE\nEXTENTS  VTCSET   SETEXT                                           SAL1\nSETEXT   OI    OPBYTE2,OPEXT       SET FLAG\n         B     NEXTWORD            GO ROUND AGAIN\n         SPACE  3\n*              NO DATA SET EXTENT OPTION\n         SPACE  1\nNEXTNT   VTCSET CLEXT                                              SAL1\nCLEXT    NI    OPBYTE2,255-OPEXT   CLEAR FLAG                      SAL1\n         B     NEXTWORD            GO ROUND AGAIN                  SAL1\n         SPACE 3\n*              PUNCHED OUTPUT OPTION\n         SPACE\nPUNCH    VTCSET   SETPUNCH                                         SAL1\nSETPUNCH OI    OPBYTE2,OPPUNCH     SET FLAG\n         B     NEXTWORD            GO ROUND AGAIN\n         SPACE  3\n*              NO PUNCHED OUTPUT OPTION\n         SPACE  1\nNPUNCH   VTCSET CLPUNCH                                            SAL1\nCLPUNCH  NI    OPBYTE2,255-OPPUNCH CLEAR FLAG                      SAL1\n         B     NEXTWORD            GO ROUND AGAIN                  SAL1\n         SPACE 3\n*              TERMINAL OUTPUT OPTION\n         SPACE\nTERM     VTCSET   SETTERM                                          SAL1\nSETTERM  OI    OPBYTE2,OPTERM      SET FLAG\n         B     NEXTWORD            GO ROUND AGAIN                  SAL1\n         SPACE  3\n*              NO TERMINAL OUTPUT OPTION                           SAL1\n         SPACE  1\nNTERM    VTCSET CLTERM                                             SAL1\nCLTERM   NI    OPBYTE2,255-OPTERM  CLEAR FLAG                      SAL1\n         B     NEXTWORD            GO ROUND AGAIN                  SAL1\n         SPACE 4\n*              VALUE FOR PERCENTAGE FILLED WARNING\n         SPACE\nPRCENT   LA    R2,5(R2)                 R2 -> %AGE VALUE\n         SH    R3,=H'5'                 COUNT LESS 5\n         BZ    ENDPARM                  END OF PARM - 80% DEFAULT\n         CLI   PARMCHAR,COMMA           VALUE PRESENT?\n         BE    NEXTWORD                 NO - 80% DEFAULT\n         LA    R4,2                     NO OF %AGE DIGITS\n         SR    R1,R1                    CLEAR R1 FOR DYNAMIC LENGTH\n         LR    R5,R2                    SAVE START OF %AGE VALUE\nNUM      TM    0(R2),X'F0'              NUMERIC?\n         BNO   BADPARM                  NO\n         LA    R2,1(R2)                 ADDRESS NEXT CHAR IN PARM FIELD\n         BCTR  R3,R0                    COUNT LESS 1\n         LTR   R3,R3                    END OF PARM?\n         BZ    INSRT                    YES\n         CLI   0(R2),COMMA              END OF %AGE VALUE?\n         BE    INSRT                    YES\n         LA    R1,1(R1)                 LENGTH OF %AGE\n         BCT   R4,NUM\n         B     BADPARM                  %AGE VALUE TOO LONG\nINSRT    EX    R1,PCK                   PACK %AGE VALUE\n         CVB   R5,DBWD\n         STH   R5,PERCENT               STORE %AGE VALUE\n         B     NEXTWORD\n         SPACE\nPCK      PACK  DBWD,0(1,R5)\nDBWD     DS    D\n         SPACE 4\n*              FULL PDS LISTING OPTION\n         SPACE\nFPDS     VTCSET   SETFPDS                                          SAL1\nSETFPDS  OI    OPBYTE2,FULLPDS+OPPDS    SET FLAGS\n         B     NEXTWORD            GO ROUND AGAIN                  SAL1\n         SPACE  3\n*              NO FULL PDS LISTING OPTION\n         SPACE  1\nNFPDS    VTCSET CLFPDS                                             SAL1\nCLFPDS   NI    OPBYTE2,255-FULLPDS         CLEAR FULLPDS BIT       SAL1\n         B     NEXTWORD            GO ROUND AGAIN                  SAL1\n         SPACE 4\n*              DISC USAGE OPTION\n         SPACE\nUSAGE    VTCSET   SETUSAGE                                         SAL1\nSETUSAGE OI    OPBYTE2,OPUSAGE\n         B     NEXTWORD                 GO ROUND AGAIN\n         SPACE 4\n*              ERROR IN PARMFIELD\n         SPACE\n*              ERROR IN PARMFIELD\n         SPACE\nBADPARM  MVC   PARMWORD,SPACES     CLEAR PARMWORD\n         MVC   PRLINE+10(50),=C'''        '' IS AN ILLEGAL PARAMETER AN*\n               D WAS IGNORED'\n         LR    R2,R15              RESTORE R2\n         LA    R1,8                MAX LENGTH OF ERROR\nSEECOMMA CLI   PARMCHAR,COMMA      REACHED A COMMA?\n         BE    SETERR              YES\n         LA    R2,1(R2)            NO R2 -> NEXT BYTE\n         BCT   R1,SEECOMMA\nSETERR   LR    R14,R2              R14 -> NEXT COMMA\n         SR    R14,R15             R14 = LENGTH\n         SR    R3,R14              COUNT LESS LENGTH OF ERROR\n         BCTR  R14,0               LENGTH LESS 1\n         EX    R14,MOVERR          MOVE BAD WORD\n         MVC   PRLINE+11(8),PARMWORD\n         MVC   LINES,=H'3'         SET LINES TO 3\n         MVI   PRLINE,C'-'         SPACE 3 LINES THEN WRITE\n         PERFORM PRINT\n         LA    R2,1(R2)            R2 -> NEXT BYTE\n         BCTR  R3,0                PARM COUNT - 1\n         LTR   R3,R3               TEST R3 FOR MORE DATA\n         BP    NEXTWORD            IF THERE IS, GO ROUND AGAIN\n         SPACE  3\n*              NO DISC USAGE OPTION\n         SPACE  1\nNUSGE    VTCSET CLUSG                                              SAL1\nCLUSG    NI    OPBYTE2,255-OPUSAGE CLEAR FLAG                      SAL1\n         B     NEXTWORD            GO ROUND AGAIN                  SAL1\n         SPACE 3\n*              MAP OPTION\n         SPACE  1\nMAP      B     NEXTWORD            DUMMY RTN                       SAL1\n         SPACE  3\n*              NO MAP OPTION\n         SPACE  1\nNMAP     B     NEXTWORD            DUMMY RTN                       SAL1\n         SPACE  3\n*              END OF PARM\n         SPACE\nENDPARM  EQU   *\n         CLC   VOLCT,=H'0'         VOLUME COUNT = ZERO?\n         BNE   A00180              NO - CONTINUE\n         MVC   VOLCT,=H'1'         YES - SET VOLUME COUNT TO 1\nA00180   LH    R0,VOLCT\n         PERFORM CONVERT\n         MVC   PRLINE+10(3),DECRADJ+1   NUMBER OF VOLUMES\n         MVC   PRLINE+14(24),=C'VOLUME(S) WILL BE LISTED'\n         MVC   LINES,=H'3'         SET LINES TO 3\n         MVI   PRLINE,C'-'         SPACE 3 LINES THEN WRITE\n         PERFORM PRINT\n         SPACE 3\nGOBACK   GOBACK\n         SPACE 5\n*        PRINT ROUTINE\n         SPACE\nPRINT    ST    R14,R14SAVE         SAVE R14\n         LA    R1,PCWA             R1 -> PCWA\n         CALL  VTOCPRT,((R1))      PRINT LINE\n         L     R14,R14SAVE         RESTORE R14\n         EXIT\n         SPACE 5\n*              CONVERT TO DECIMAL ROUTINE\n         SPACE\nCONVERT  LPR   R0,R0\n         CVD   R0,PNUM             PNUM = PACKED DECIMAL\n         MVC   DECRADJ,MASK1       MOVE IN MASK\n         ED    DECRADJ,PNUM+6      EDIT\n         EXIT\n         SPACE 5\nTEST     CLC   PARMCHAR(0),4(R7)   TEST FOR PARM IN TABLE          SAL1\nPNUM     DC    D'0'                PACKED NUMBER\nMASK1    DC    X'40202120'         EDITING MASK\nDECRADJ  DC    CL4' '              DECIMAL NUMBER\n         SPACE\nPARMWORD DC    CL8' '              PARM WORD RETURN AREA\nR14SAVE  DS    F                   R14 SAVE AREA\nSPACES   DC    CL8' '\nMOVERR   MVC   PARMWORD,0(R15)     MOVE WORD IN ERROR\nCOMMA    EQU   C','                COMMA\n         SPACE 3\n*              PARM FIELD\n         SPACE\n         DS    0H\nPARMTAB  DC    H'04',H'00',C'VOLS='                                SAL1\n         DC    H'04',H'03',C'CATLG'\n         DC    H'06',H'13',C'NOCATLG'\n         DC    H'03',H'09',C'%AGE'\n         DC    H'04',H'08',C'USAGE'\n         DC    H'06',H'18',C'NOUSAGE'\n         DC    H'03',H'01',C'DUMP'\n         DC    H'05',H'11',C'NODUMP'\n         DC    H'02',H'02',C'PDS'\n         DC    H'04',H'12',C'NOPDS'\n         DC    H'06',H'07',C'FULLPDS'\n         DC    H'08',H'17',C'NOFULLPDS'\n         DC    H'06',H'04',C'EXTENTS'\n         DC    H'08',H'14',C'NOEXTENTS'\n         DC    H'01',H'00',C'V='\n         DC    H'00',H'03',C'C'\n         DC    H'01',H'13',C'NC'\n         DC    H'01',H'09',C'%='\n         DC    H'00',H'08',C'U'\n         DC    H'01',H'18',C'NU'\n         DC    H'01',H'01',C'DP'\n         DC    H'02',H'11',C'NDP'\n         DC    H'00',H'02',C'P'\n         DC    H'01',H'12',C'NP'\n         DC    H'01',H'07',C'FP'\n         DC    H'02',H'17',C'NFP'\n         DC    H'00',H'04',C'E'\n         DC    H'01',H'14',C'NE'\n         DC    H'02',H'10',C'MAP'\n         DC    H'04',H'19',C'NOMAP'\n         DC    H'00',H'10',C'M'\n         DC    H'01',H'19',C'NM'\n         DC    H'03',H'06',C'TERM'\n         DC    H'03',H'05',C'DECK'\n         DC    H'00',H'06',C'T'\n         DC    H'01',H'05',C'DK'\n         DC    H'05',H'16',C'NOTERM'\n         DC    H'05',H'15',C'NODECK'\n         DC    H'01',H'16',C'NT'\n         DC    H'02',H'15',C'NDK'\n         DS    0H\n         DC    X'FFFF'\nSUBTAB   DC    A(VOLS)                                             SAL1\n         DC    A(DUMP)\n         DC    A(PDS)\n         DC    A(CATLG)\n         DC    A(EXTENTS)\n         DC    A(PUNCH)\n         DC    A(TERM)\n         DC    A(FPDS)\n         DC    A(USAGE)\n         DC    A(PRCENT)\n         DC    A(MAP)\n         DC    A(NDMP)\n         DC    A(NPDS)\n         DC    A(NCTLG)\n         DC    A(NEXTNT)\n         DC    A(NPUNCH)\n         DC    A(NTERM)\n         DC    A(NFPDS)\n         DC    A(NUSGE)\nPARM     DSECT                                                     SAL1\nPLENGTH  DS    0H\nPARMCHAR DS    100C\n         SPACE 5\n*              PRINT LINE\n         SPACE\nPRFIELD DSECT\n         DS    F\nLINES    DS    H\nSPACE    DC    X'40'\nPRLINE   DS    CL133\n         SPACE 5\n*              PROGRAM CONTROL WORK AREA\n         SPACE\nPCWA     MIPPCWA DSECT\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCPCH": {"ttr": 2827, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00G\\x00G\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 71, "newlines": 71, "modlines": 0, "user": "UKGUIDE"}, "text": "         TITLE 'VTOCPCH - PUNCH ROUTINE OF VTOCLIST'\nVTOCPCH  CSECT\n         ENTRY OPENPCH,CLOSEPCH\n         BEGIN (SAVE)\n         YEBEQU\n         EJECT\n*              PROVIDE ADDRESSABILITY TO PCWA\n         SPACE\n         L     R11,0(R1)           R11 -> PCWA\n         USING PCWA,R11\n         L     R10,APUNCARD        R10 -> PUNCH CARD IMAGE\n         USING PUNCARD,R10\n         SPACE 3\n*              PUT CARD IMAGE\n         SPACE\n         PUT SYSPUNCH,PUNCARD      PUNCH CARD IMAGE\n         B     GOBACK\n         SPACE 3\n*              OPEN SYSPUNCH\n         SPACE\nOPENPCH  BEGIN (SAVE)\n         GETMAIN R,LV=176          GET CORE FOR JFCB\n         ST    R1,JFCBAD           STORE ADDRESS\n         MVI   JFCBAD,X'87'        INDICATE JFCB\n         RDJFCB SYSPUNCH           READ JFCB\n         L     R1,JFCBAD           R1 -> JFCB\n         CLC   102(2,R1),=H'0'     BLOCK SIZE SPECIFIED?\n         BNE   @1                  BRANCH IF NOT ZERO\n         MVC   102(2,R1),=H'1680'  ELSE SET BLOCKSIZE\n@1       OPEN  (SYSPUNCH,OUTPUT),TYPE=J\n         L     R1,JFCBAD           R1 -> CORE TO BE FREED\n         FREEMAIN R,LV=176,A=(R1)  FREE CORE\n         TM    SYSPUNCH+48,X'10'   TEST FOR SUCCESSFUL OPEN\n         BO    GOBACK              RETURN IF OK\n         NI    OPTIONS,X'EF'       SWITCH OFF PUNCH OPTION\n         L     R9,APRLINE          R9 -> PRINT LINE - 7\n         USING PRFIELD,R9\n         MVC   PRLINE+10(58),=C'UNSUCCESSFUL OPEN FOR SYSPUNCH, NO PUNC*\n               HED OUTPUT PRODUCED'\n         MVI   PRLINE,C'-'         SPACE 3 THEN WRITE\n         MVC   LINES,=H'3'         ADD 3 TO LINE COUNT\n         LA    R1,PCWA\n         CALL  VTOCPRT,((R1))      PRINT LINE\n         B     GOBACK\n         SPACE 3\n*              CLOSE SYSPUNCH\n         SPACE\nCLOSEPCH BEGIN (SAVE)\n         CLOSE SYSPUNCH\n         B     GOBACK\n         SPACE 3\nGOBACK   GOBACK\n         SPACE 3\nSYSPUNCH DCB   DDNAME=SYSPUNCH,DSORG=PS,RECFM=FB,LRECL=80,             *\n               MACRF=PM,EXLST=JFCBAD\nJFCBAD   DC    X'87'\n         DC    AL3(0)              JFCB ADDRESS\nSAVE     DC    18F'0'              REGISTER SAVE AREA\n         SPACE 3\nPRFIELD  DSECT\n         DS    F\nLINES    DS    H\nSPACE    DC    X'40'\nPRLINE   DS    CL133\n         SPACE\n         SPACE 3\nPUNCARD  DSECT\n         DS    CL80                PUNCH CARD IMAGE\n         SPACE 3\nPCWA     MIPPCWA DSECT\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCPDS": {"ttr": 3073, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x02\\x12\\x02\\x12\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 530, "newlines": 530, "modlines": 0, "user": "UKGUIDE"}, "text": "         TITLE 'VTOCPDS - PDS LISTING SUBROUTINE'\nVTOCPDS  CSECT\n         SPACE\n*              ON ENTRY R1 -> THE ADDRESS OF THE PCWA\n         SPACE\n** ALTERATION 2 BY S.A.LYNCH FEB 1975                                **\n** TO PRODUCE CONTINUATION HEADINGS WHEN PRINTING MEMBERS OF A       **\n** PARTITIONED DATA SET USING PDS OPTION                             **\n         SPACE 3\n         BEGIN\n         YEBEQU\n         EJECT\n**             UPDATED FEB 1975 BY MKB TO STOP LOOP IN PRINTING     **\n**             DIRECTORY ENTRIES WITH MORE THAN 44 BYTES OF USER    **\n**             DATA. NO DEDUCTION WAS BEING RECORDED IN FIELD       **\n**             LENTRY. ADDITIONAL STH INSTRUCTION ADDED IN          **\n**             ROUTINE 'PUTLINE'. PROBLEM DETECTED WHEN PROCESSING  **\n**             SMP CDS FILE - SMP STRIKES AGAIN                     **\n         SPACE 4\n*              PROVIDE ADDRESSABILITY TO PCWA\n         SPACE\n         L     R11,0(R1)           R11 -> PCWA\n         USING PCWA,R11\n         L     R10,APRLINE         R10 -> PRINT LINE\n         USING PRLINE,R10\n         L     R9,APUNCARD         R9 -> CARD IMAGE\n         USING PUNCARD,R9\n         SPACE 3\n         CLI   OPBYTE2,OPPUNCH     DECK OPTION ONLY ?               MKB\n         BE    NOLIST              YES - NO HEADINGS                MKB\n         SPACE 2\n*              PUT HEADINGS\n         SPACE\n         TM    OPBYTE2,FULLPDS     FULL LISTING REQUIRED?\n         BZ    SHTHEAD             NO - PUT SHORT HEADINGS\n         MVC   PRFLDA,HEADING      MOVE HEADING\n         MVC   PRTEXT+20(9),=C'USER DATA'\n         LA    R1,HEADS2          LONG HDR WHEN NEW PAGE           SAL2\n         B     PUTHEAD\nSHTHEAD  MVI   HEADING+19,C' '     NO TTR COUNT\n         MVC   PRFLD1,HEADING      MOVE\n         MVC   PRFLD2,HEADING          IN\n         MVC   PRFLD3,HEADING              FOUR\n         MVC   PRFLD4,HEADING                  HEADINGS\n         LA    R1,HEADS1          SHORT HDRS WHEN NEW PAGE         SAL2\nPUTHEAD  MVI   PRCTL,C'0'          SKIP 2 THEN WRITE\n         MVC   LINES,=H'2'         NUMBER OF LINES = 2\n         L     R2,ATOPLINE        SET UP PNTRS TO REQ HDRS         SAL2\n         MVC   HDSTOR,0(R2)       STORE PREV HDR PNTRS             SAL2\n         LA    R0,PDHDR           PNTR TO 2ND HDR                  SAL2\n         ST    R0,0(,R2)          STORE PNTR IN CHAIN              SAL2\n         ST    R1,PDHDR           CHAIN COMPLETED                  SAL2\n         MVC   PDHDR+8(44),DMYDSN  CLEAR DSNAM SPACE               SAL2\n         L    R3,AF1DSCB          BASE FOR FORMAT 1 DSCB           SAL2\n         USING F1DSCB,R3                                           SAL2\n         MVC   PDHDR+8(44),DS1DSNAM  DSNAM IN HDR 2                SAL2\n         PERFORM PRINT\n         TM    OPBYTE2,FULLPDS     FULL LISTING?\n         BZ    SHTUNDER            NO - PUT SHORT UNDERLINES\n         MVC   PRFLDA,ULINE        MOVE IN UNDERLINE\n         MVC   PRTEXT+20(9),=9C'_'\n         B     PUTUNDER\nSHTUNDER MVI   ULINE+19,C' '       NO TTR COUNT\n         MVC   PRFLD1,ULINE        MOVE\n         MVC   PRFLD2,ULINE           IN\n         MVC   PRFLD3,ULINE              FOUR\n         MVC   PRFLD4,ULINE                 UNDERLINES\nPUTUNDER MVI   PRCTL,C'+'          NO SPACE\n         MVC   LINES,=H'0'         NO LINES\n         PERFORM PRINT\n         SPACE 3\n*              OBTAIN DATA SET NAME\n         SPACE\nNOLIST   DS    0H                                                   MKB\n         MVC   DCBDDNAM,VOLUMEXX   MOVE IN DD NAME\n         L     R2,AJFCB            R2 -> JFCB\n         L     R3,AF1DSCB          R3 -> FORMAT 1 DSCB\n         USING F1DSCB,R3\n         MVC   0(44,R2),DS1DSNAM   MOVE DATA SET NAME TO JFCB\n         DROP  R3\n         SPACE 3\n**             PREPARE FIELDS\n         SPACE\nOPENDCB  EQU   *\n         LA    R1,AJFCB            R1 -> ADDRESS OF JFCB\n         ST    R1,AENTRY           USE AENTRY AS WORK FIELD\n         MVC   DCBEXLST,AENTRY+1   MOVE ADDRESS TO EXIT LIST\n         OPEN  (DIRECTRY,INPUT),TYPE=J     OPEN DIRECTORY\n         SR    R0,R0               CLEAR R0\n         STH   R0,PDSBKCT          BLOCK COUNT = ZERO\n         STH   R0,PDSBKUS          NUMBER OF BLOCKS USED = ZERO\n         STH   R0,PDSMBCT          MEMBER COUNT = ZERO\n         STH   R0,PDSDACT          AMOUNT OF DATA LEFT IN BLOCK = ZERO\n         STH   R0,FLDCT            FIELD COUNT = ZERO\nA00A74   EQU   *\nREADTEST LH    R0,PDSDACT          R0 = LENGTH OF DATA REMAINING\n         LTR   R0,R0\n         BP    A00AD8              STILL ENTRIES TO BE PROCESSED\n         SPACE 3\n*              READ NEW DIRECTORY BLOCK\n         SPACE\nDIREAD   READ DIRECB,SF,DIRECTRY,DIRBLOK\n         CHECK DIRECB              CHECK FOR COMPLETION\n         LA    R8,DIRBLOK          R8 -> DIRECTORY BLOCK\n         LH    R1,PDSBKCT          R1 = OLD BLOCK COUNT\n         LA    R1,1(R1)            PLUS 1\n         STH   R1,PDSBKCT          STORE NEW BLOCK COUNT\n         CLC   OLDKEY,NEWKEY       IS MEMBER NAME SAME AS PREVIOUS?\n         BNE   MOVEKEY             NO -THEN CONTINUE\n         B     DIREAD              YES - READ NEXT BLOCK\nMOVEKEY  MVC   OLDKEY,NEWKEY       MOVE IN NEW KEY\n         LH    R0,8(R8)            R0 = LENGTH OF DATA\n         SH    R0,=H'2'            LESS 2\n         STH   R0,PDSDACT          STORE LENGTH OF DATA REMAINING\n         LA    R1,10(R8)           R1 -> FIRST ENTRY\n         ST    R1,AENTRY           STORE ADDRESS OF NEXT ENTRY\n         B     READTEST\n         SPACE 3\n*              PROCESS DIRECTORY BLOCK\n         SPACE\nA00AD8   EQU   *\nMEMBCT   L     R8,AENTRY           R8 -> MEMBER ENTRY\n         USING MEMNAME,R8\n         IC    R2,MEMIND           R2 = INDICATORS\n         N     R2,=F'31'           R2 = NO OF HALFWORDS OF USERDATA\n         SLL   R2,1                R2 = NO OF BYTES\n         LR    R1,R8               R1 -> ENTRY\n         AR    R1,R2\n         LA    R1,12(R1)           R1 -> NEXT ENTRY\n         ST    R1,AENTRY           SAVE ADDRESS OF NEXT ENTRY\n         LH    R1,PDSDACT          R1 = LENGTH OF DATA REMAINING\n         SR    R1,R2               R1 =\n         SH    R1,=H'12'           LESS 12\n         STH   R1,PDSDACT          STORE NEW LENGTH\n         STH   R2,LENTRY\n         CLC   MEMNAME,=8X'FF'     MEMBER NAME = ALL X'FF'?\n         BNE   MEMBSET\n         MVC   PDSBKUS,PDSBKCT     BLOCKS USED = BLOCK COUNT\n         B     READTEST\n         SPACE 3\n*              SET UP PRINT AND PUNCH FIELDS\n         SPACE\nMEMBSET  MVC   PRWORK,SPACE        CLEAR WORK FIELD\n         LH    R1,PDSMBCT          R1 = MEMBER COUNT\n         LA    R1,1(R1)            PLUS 1\n         STH   R1,PDSMBCT          STORE NEW MEMBER COUNT\n         MVC   PRMEMBER,MEMNAME    MOVE NAME TO PRINT\n         MVC   PUNMEM,MEMNAME         AND PUNCH FIELDS\n         TM    MEMIND,ALIAS        ALIAS NAME?\n         BZ    A00B34              NO?\n         MVI   PRALIAS,C'A'        YES\n         MVI   PUNALIAS,C'A'\nA00B34   EQU   *\nSETPRINT UNPK  TTRWORK(7),MEMTTRP(4)    TTR\n         TR    TTRWORK,TRABLE-240  TRANSLATE TO PRINTABLE CHARS\n         MVC   PRTT,TTRWORK        SET UP TRACK NUMBER\n         MVI   PRDOT,C'.'\n         MVC   PRR,TTRWORK+4       SET UP RECORD NUMBER\n         TM    OPBYTE2,FULLPDS     FULL LISTING?\n         BZ    SETPUNCH            NO - BYPASS TTR COUNT\n         IC    R0,MEMIND           R0 = INDICATORS\n         SRL   R0,5\n         N     R0,=F'3'            CLEAR ALL BUT LAST TWO BITS\n         STC   R0,PRNOTTR          NUMBER OF TTR'S IN USER DATA\n         OI    PRNOTTR,X'F0'       SET SIGN\n         SPACE 3\n*              SET UP PUNCH FIELDS\n         SPACE\nSETPUNCH EQU   *\n         LH    R1,LENTRY           R1 = ENTRY LENGTH\n         LTR   R1,R1               ANY USER DATA?\n         BZ    NOTSSI              IF ZERO THEN NO SSI PRESENT\n         CLI   PUNTYPE,C'L'        LOAD LIBRARY?\n         BE    LOADLIB\n         B     SETSSI              NO - THEN SET SSI\n         SPACE 3\n*        LOAD LIBRARY\n         SPACE\nLOADLIB  SH    R1,=H'21'           LESS MINIMUM LENGTH OF USER DATA\n         BZ    NOTSSI              IF ZERO THEN NO SSI\n         TM    MEMATTR,X'04'       SCATTER LOADED?\n         BZ    TESTAL              NO\n         SH    R1,=H'8'            YES - SUBTRACT SCATTER LENGTH\n         BZ    NOTSSI              IF ZERO NO SSI\nTESTAL   TM    MEMIND,ALIAS        ALIAS?\n         BZ    SETSSI              NO\n         TM    MEMATTR,X'C0'       YES - AND RENT AND/OR REUS?\n         BZ    SETSSI              NO\n         SH    R1,=H'11'           YES - SUBTRACT LENGTH\n         BZ    NOTSSI\n         SPACE 3\n*              SET SSI INFORMATION\n         SPACE\nSETSSI   SRL   R1,1                SWITCH OFF '1' BIT TO TAKE ACCOUNT\n         SLL   R1,1                    OF POSSIBLE SLACK BYTE\n         CH    R1,=H'4'            SHOULD BE FOUR BYTES LEFT\n         BNE   NOTSSI\n         L     R3,AENTRY           R3 -> NEXT ENTRY\n         SH    R3,=H'4'            R3 -> SSI\n         UNPK  TTRWORK,0(5,R3)     UNPACK SSI\n         TR    TTRWORK,TRABLE-240  TRANSLATE TO CHARACTERS\n         MVC   PUNSSI,TTRWORK      MOVE TO PUNCH FIELD\n         MVC   PRSSI,TTRWORK       MOVE TO PRINT FIELD\n         B     PUNCHCD\nNOTSSI   MVC   PUNSSI,SPACES       CLEAR SSI FIELD\nPUNCHCD  EQU   *\n         TM    OPTIONS,OPPUNCH     PUNCH REQUIRED?\n         BZ    TESTFUL             NO - BYPASS PUNCH\n         MVI   PUNCTYPE,C'3'       INDICATE MEMBER CARD\n         PERFORM PUNCH            PUNCH CARD\n         CLI   OPBYTE2,OPPUNCH     DECK OPTION ONLY ?               MKB\n         BE    READTEST            YES - DO NOT PRINT               MKB\nTESTFUL  EQU   *\n         TM    OPTIONS,FULLPDS     FULL LISTING REQUIRED?\n         BZ    SHORTPDS            NO\n         SPACE 3\n*              SET UP FULL PDS LISTING\n         SPACE\n         MVC   PRFLDA,PRWORK       MOVE TO PRINT FIELD\n         LH    R5,LENTRY           R5 = LENGTH OF USER DATA\n         CH    R5,=H'4'            IS IT ONLY SSI?\n         BNH   TESTONE             YES - DON'T BOTHER TO DUMP\n         CH    R5,=H'44'           NUMBER OF BYTES > 44?\n         BNH   SETDUMP              NO - ONLY ONE LINE TO BE PRINTED\n         LA    R2,2\n         AH    R2,LINECT           ADD CURRENT LINE COUNT\n         CH    R2,LINELMT          IS IT > LINE LIMIT?\n         BNH   NORESET             NO - THEN CONTINUE\n         MVC   LINECT,=H'999'      YES - SET LINE COUNT TO 999\nNORESET  EQU   *\n         LA    R5,44\nSETDUMP  LA    R3,MEMTTRT          R3 -> FIRST BYTE TO BE PRINTED\nCONVEX   EQU   *\n         LA    R4,PRTEXT           R4 -> DUMP AREA\n         PERFORM HEXDUMP\nTESTONE  EQU   *\n         MVI   PRCTL,C' '          SPACE 1 THEN WRITE\n         TS    LINE1               TEST IF THIS IS THE FIRST LINE\n         BNZ   PUTLINE             BRANCH IF NOT - ELSE\n         MVI   PRCTL,C'0'          SPACE 2 THEN WRITE\n         MVC   LINES,=H'2'         ADD 2 TO LINE COUNT\nPUTLINE  EQU   *\n         PERFORM PRINT\n         LH    R5,LENTRY           R5 = LENGTH OF USERDATA\n         CH    R5,=H'44'           OVER 44 BYTES?\n         BNH   READTEST            NO - GET NEXT ENTRY\n         SH    R5,=H'44'           NUMBER OF BYTES REMAINING\n         STH    R5,LENTRY         STORE BACK LENGTH OF USER DATA MKB75\n*                                 TO BE PRINTED IN SECOND LINE   MKB75\n         LA    R3,MEMNAME+56       R3 -> FIRST BYTE ON SECOND LINE\n         B     CONVEX              PRINT NEXT 44 BYTES\n         SPACE 3\n*              SET UP SHORT PDS LIST\n         SPACE\nSHORTPDS LH    R8,FLDCT            R8 FIELD INDICATOR\n         B     MOVEPRT(R8)         BRANCH TO APPROPRIATE MOVE\nMOVEPRT  B     MOVE1               BRANCH TO FIRST MOVE\n         B     MOVE2               BRANCH TO SECOND MOVE\n         B     MOVE3               BRANCH TO THIRD MOVE\n         B     MOVE4               BRANCH TO FOURTH MOVE\nMOVE1    MVC   PRFLD1,PRWORK       MOVE FIRST FIELD\n         B     SETUP               SET UP INDICATORS\nMOVE2    MVC   PRFLD2,PRWORK       MOVE TO SECOND FIELD\n         B     SETUP               SET UP INDICATORS\nMOVE3    MVC   PRFLD3,PRWORK       MOVE TO THIRD FIELD\nSETUP    LA    R8,4(R8)            R8 = INDEX TO NEXT FIELD\n         STH   R8,FLDCT            SAVE INDICATOR\n         B     READTEST            GO TO READ NEXT ENTRY\nMOVE4    MVC   PRFLD4,PRWORK       MOVE TO FOURTH FIELD\n         TS    LINE1               FIRST LINE?\n         BNZ   NEWLINE             NO - BRANCH\n         MVI   PRCTL,C'0'          SPACE 2 THEN WRITE\n         MVC   LINES,=H'2'         2 LINES\nNEWLINE  PERFORM PRINT             PUT LINE\n         MVC   FLDCT,=H'0'         RESET INDICATOR TO ZERO\n         B     READTEST            GO TO READ NEXT ENTRY\n         SPACE 3\n*              END OF DIRECTORY\n         SPACE\nDIREND   CLOSE DIRECTRY\n         CLI   OPBYTE2,OPPUNCH     DECK OPTION ONLY ?               MKB\n         BE    XIT                 YES                              MKB\n         LH    R8,FLDCT            R8 = FIELD COUNT\n         LTR   R8,R8               R8 = ZERO?\n         BZ    LASTLINE            YES\n         TS    LINE1               CHECK THAT A LINE HAS BEEN PRINTED\n         BNZ   NOTFIRST            IF SO THE NO PROBLEM\n         MVI   PRCTL,C'0'          ELSE SPACE 2\n         MVC   LINES,=H'2'            BEFORE WRITING\nNOTFIRST EQU   *\n         PERFORM PRINT             NO - PRINT UNFINISHED LINE\nLASTLINE EQU   *\n         LH    R0,PDSMBCT          R0 = NO OF MEMBERS\n         PERFORM CONVERT           CONVERT NUMBER OF MEMBERS\n         MVC   MEMNO,DECRADJ+8\n         LH    R0,PDSBKUS          R0 = NO OF BLOCKS USED\n         PERFORM CONVERT           CONVERT NUMBER OF BLOCKS USED\n         MVC   DIRUSE,DECRADJ+8\n         LH    R0,PDSBKCT          R0 = NO OF BLOCKS ALLOCATED\n         PERFORM CONVERT           CONVERT TOTAL NUMBER OF BLOCKS\n         MVC   DIRALL,DECRADJ+8\n         MVC   PRFLD1+4(84),DIRCON END OF LIST SUMMARY\n         MVI   PRCTL,C'0'          SPACE 2 THEN WRITE\n         MVC   LINES,=H'2'         ADD 2 TO LINE COUNT\n         PERFORM PRINT\n         PERFORM PRINT\n         MVI   LINE1,OFF           SWITCH LINE1 OFF\n         L     R2,ATOPLINE        SET UP PNTRS TO REQ HDRS         SAL2\n         MVC   0(4,R2),HDSTOR     RESTORING HDR PNTR               SAL2\nXIT      DS    0H                                                   MKB\n         GOBACK\n         SPACE 3\n*              CONVERT TO DECIMAL ROUTINE\n         SPACE\nCONVERT  LPR   R0,R0\n         CVD   R0,PNUM             PNUM = PACKED DECIMAL\n         MVC   DECRADJ,MASK1       MOVE IN MASK\n         ED    DECRADJ,PNUM+2      EDIT\n         EXIT\nPNUM     DC    D'0'                PACKED NUMBER\nMASK1    DC    X'40',9X'20',X'2120'   EDITING MASK\nDECRADJ  DC    CL12' '             RIGHT ADJUSTED WITH SPACES\n         SPACE 3\n*              CONVERT TO DUMP FORMAT\n         SPACE\nHEXDUMP  LTR   R5,R5               TEST NUMBER OF BYTES TO BE PRINTED\n         BP    SETCOUNT            BRANCH IF POSITIVE\n         EXIT                      ELSE EXIT\nINSPACE  BCT   R1,EDIT             NO OF BYTES LEFT IN WORD\n         MVI   0(R4),C' '          INSERT SPACE\n         LA    R4,1(R4)            R4 -> NEXT PRINT CHARACTER\nSETCOUNT LA    R1,4                SET WORD COUNT\nEDIT     UNPK  TTRWORK(3),0(2,R3)  TRANSLATE BYTE\n         TR    TTRWORK(2),TRABLE-240    TO PRINTABLE CHARACTER\n         MVC   0(2,R4),TTRWORK     MOVE TO PRINT FIELD\n         LA    R3,1(R3)            R3 -> NEXT BYTE\n         LA    R4,2(R4)            R4 -> NEXT TWO PRINT CHARACTERS\n         BCT   R5,INSPACE          R5 = NO OF BYTES LEFT\n         EXIT\n         SPACE 3\n*        PRINT ROUTINE\n         SPACE\nPRINT    ST    R14,R14SAVE         SAVE R14\n         LA    R1,PCWA             R1 -> PCWA\n         CALL  VTOCPRT,((R1))      PRINT LINE\n         L     R14,R14SAVE         RESTORE R14\n         EXIT\n         SPACE\nR14SAVE  DS    F                   R14 SAVE AREA\n         SPACE 3\n*              PUNCH ROUTINE\n         SPACE\nPUNCH    ST    R14,R14SAVE         SAVE R14\n         LA    R1,PCWA             R1 -> PCWA\n         CALL  VTOCPCH,((R1))      PUNCH CARD\n         L     R14,R14SAVE         RESTORE R14\n         EXIT\n         SPACE 3\n*              SYNAD ROUTINE FOR ERROR READING DIRECTORY\n         SPACE\nDIRERR   MVI   PRCTL,C'0'          SPACE 2\n         MVC   LINES,=H'2'            THEN WRITE\n         MVC   PRFLDA(51),READERR  MOVE ERROR MESSAGE\n         PERFORM PRINT             PRINT IT OUT\n         PERFORM PRINT             FOLLOWED BY A SPACE\n         CLOSE DIRECTRY\n         L     R2,ATOPLINE        SET UP PNTRS TO REQ HDRS         SAL2\n         MVC   0(4,R2),HDSTOR     RESTORING HDR PNTR               SAL2\n         XR    R6,R6              CLEAR REGS                       SAL2\n         GOBACK\n         SPACE 3\nHDSTOR   DS    F                  STORE FOR HDR PNTR\nREADERR  DC    C'ERROR READING DIRECTORY, CONTINUE WITH NEXT DATASET'\nDIRCON   DC    CL19'DIRECTORY CONTAINS'\nMEMNO    DC    CL4'0000'\nMEMUSE   DC    CL18' MEMBERS AND USES'\nDIRUSE   DC    CL4'0000'\nOFTHE    DC    CL8' OF THE'\nDIRALL   DC    CL4'0000'\nDIRBLO   DC    CL27' DIRECTORY BLOCKS ALLOCATED'\nLINE1    DC    X'00'               FIRST LINE SWITCH\nON       EQU   X'FF'\nOFF      EQU   X'00'\nAENTRY   DC    A(0)                ADDRESS OF NEXT MEMBER ENTRY\nLENTRY   DC    H'0'                LENGTH OF CURRENT ENTRY\nPDSDACT  DC    H'0'                LENGTH OF DATA REMAINING\nPDSBKCT  DC    H'0'                DIRECTORY BLOCK COUNT\nPDSBKUS  DC    H'0'                DIRECTORY BLOCKS USED\nPDSMBCT  DC    H'0'                MEMBER COUNT\nFLDCT    DC    H'0'\nOLDKEY   DC    CL8' '              DIRECTORY BLOCK KEY\n         LTORG\nTTRWORK  DS    CL9\nTRABLE   DC    C'0123456789ABCDEF' TRANSLATE TABLE\nHEADS1   DC    A(ULINS1)          ADDR OF UNDERLINE\n         DC    H'3'               NO OF LINES IN THIS GROUP\n         DC    X'40'              SPACE LINES IN THIS GROUP\n         DC    C'-'               WRITE AFTER 3\n         DC     CL132' MEMBER      TTR       SSI         MEMBER      TT*\n               R       SSI         MEMBER      TTR       SSI         ME*\n               MBER      TTR       SSI    '\nHEADS2   DC    A(ULINS2)          ADDR OF UNDERLINE\n         DC    H'3'               NO OF LINES IN THIS GROUP\n             DC    X'40'              SPACE LINES IN THIS GROUP\n         DC    C'-'               WRITE AFTER 3\n         DC     CL132'  MEMBER     TTR     T SSI                       *\n                  USER DATA '\nULINS1   DC    A(0)               NO FURTHER LINES\n         DC    H'0'               NO OF LINES 0NES\n         DC    X'40'              SPACE\n         DC    C'+'              0 LINES TO BE SPACED\n         DC    CL133' ______      ___       ___         ______      ___*\n                      ___         ______      ___       ___         ___*\n               ___      ___       ___ '\nULINS2   DC    A(0)               NO FURTHER LINES\n         DC    H'0'               NO OF LINES 0NES\n         DC    X'40'              SPACE\n         DC    C'+'              0 LINES TO BE SPACED\n         DC    CL132'  ______     ___       ___                        *\n                 _________ '\nHEADING  DC    CL8' MEMBER '\n         DC    CL3' '\n         DC    CL7'  TTR'\n         DC    CL3' T'\n         DC    CL8'  SSI'\n         DC    CL1' '\nULINE    DC    CL8' ______'\n         DC    CL3' '\n         DC    CL7'  ___'\n         DC    CL3' _'\n         DC    CL8'  ___'\n         DC    CL1' '\n         SPACE\nSPACE    DC    CL1' '\nPRWORK   DS    0CL30\nPRMEMBER DC    CL8' '              MEMBER NAME\n         DC    CL1' '\nPRALIAS  DC    CL1' '              ALIAS = 'A'\n         DC    CL1' '\nPRTT     DC    CL4' '              TRACK NUMBER\nPRDOT    DC    CL1'.'              TTR DIVIDER\nPRR      DC    CL2' '              RECORD NUMBER\n         DC    CL1' '\nPRNOTTR  DC    CL1' '              NUMBER OF TTR'S IN USER DATA\n         DC    CL1' '\nPRSSI    DC    CL8' '              SSI\n         DC    CL1' '\nDMYDSN   DC    CL44' '           SPACES TO CLEAR DSN\nDIRECTRY DCB   DDNAME=VOLUME01,                                        *\n               MACRF=R,                                                *\n               RECFM=F,                                                *\n               DSORG=PS,                                               *\n               BLKSIZE=256,                                            *\n               KEYLEN=8,                                               *\n               SYNAD=DIRERR,                                           *\n               EODAD=DIREND\n         ORG   DIRECTRY\n         DS    CL37\nDCBEXLST DS    CL3                 EXIT LIST ADDRESS\nDCBDDNAM DS    CL8                 DD NAME\n         ORG\nSPACES   DC    CL8' '\nFWORK    DS    F\n         SPACE 3\nPDHDR    DC    A(0)               2ND HDR FOR PDS\n         DC    H'4'               NO OF LINES\n         DC    X'40'              SPACES\n         DC    C' '               CONTROL CHAR\n         DC    CL46' '            DSNAM\n         DC    CL86'(CONTINUED) '\n*              PDS DIRECTORY BLOCK\n         SPACE\nDIRBLOK  DS    CL264               DIRECTORY BLOCK\n         ORG   DIRBLOK\nNEWKEY   DS    CL8                 NAME OF LAST ENTRY IN BLOCK\nMEMNAME  DS    CL8                 MEMBER OR ALIAS NAME\nMEMTTRP  DS    XL3                 RELATIVE ADDRSS OF FIRST BLOCK\nMEMIND   DS    B                   INDICATORS\nALIAS    EQU   B'10000000'         ALIAS INDICATORS\nNOTTR    EQU   B'01100000'         NO OF TTRS IN USER DATA\nLENTH    EQU   B'00011111'         LENGTH OF USER DATA IN HALFWORDS\nMEMTTRT  DS    XL3                 RELATIVE ADDRESS OF FIRST TEXT BLOCK\n         DC    X'00'\nMEMTTRST DS    XL3                 RELATIVE ADDRESS OF NOTE LIST OR\n*                                  SCAT/TRANS TABLE\nMEMNLST  DS    FL1                 NUMBER LIST ENTRIES\nMEMATTR  DS    BL2                 MODULE ATTRIBUTES\nMEMSTOR  DS    FL3                 MAIN STORAGE NEEDED FOR MODULE\nMEMLFTXT DS    FL2                 LENGTH OF FIRST TEXT BLOCK\nMEMEPAD  DS    FL3                 ENTRY POINT ADDRESS\nMEMFTORG DS    FL3                 FIRST TEXT BLOCK ORIGIN\n         ORG\n         SPACE 3\n*              PRINT LINE\n         SPACE\nPRLINE   DSECT                     PRINT LINE\nPRANEXT  DS    A\nLINES    DS    H\nPRSPACE  DC    X'40'\nPRCTL    DS    CL1                 CONTROL CHARACTER\nPRFLD1   DS    CL30\n         DS    CL4\nPRFLD2   DS    CL30\n         DS    CL4\nPRFLD3   DS    CL30\n         DS    CL4\nPRFLD4   DS    CL30\n         ORG   PRFLD1\n         DS    CL2\nPRFLDA   DS    CL30\n         DS    CL1\nPRTEXT   DS    CL99                TEXT FIELD\n         ORG\nLINECT   DS    H                   LINE COUNT\nLINELMT  DS    H                   MAXIMUM NO OF LINES PER PAGE = 57\n         SPACE 3\nPUNCARD  MIPCARD DSECT,TYPE=OLD\n         SPACE 3\n*              PROGRAM CONTROL WORK AREA\n         SPACE\nPCWA     MIPPCWA DSECT\n         SPACE 3\n*              FORMAT 1 DSCB\n         SPACE\nF1DSCB   F1DSCB\n         SPACE 3\n*              FORMAT 4 DSCB\n         SPACE\nF4DSCB   F4DSCB\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCPRT": {"ttr": 3082, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00\\xaa\\x00\\xaa\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 170, "newlines": 170, "modlines": 0, "user": "UKGUIDE"}, "text": "         TITLE 'VTOCPRT - PRINT ROUTINE OF VTOCLIST'\nVTOCPRT  CSECT\n         ENTRY OPENPRT,CLOSEPRT\n         BEGIN (SAVE)\n         YEBEQU\n         SPACE 3\n*              PROVIDE ADDRESSABILITY FOR PCWA\n         SPACE\n         L     R11,0(R1)           R11 -> PCWA\n         USING PCWA,R11\n         L     R10,ATOPLINE        R10 -> TOPLINE-7\n         USING TOPLINE,R10\n         L     R9,APRLINE          R9 -> PRLINE-7\n         USING PRFIELD,R9\n         EJECT\n*              CHECK LINE COUNT\n         SPACE\n         TM    FLAGS,GROUPFLG      PART OF A GROUP?\n         BO    GROUP               YES\n         LH    R1,LINES            R1 = LINE COUNT\n         CLI   PRCTL,C' '          SPACE 1 LINE\n         BE    SPACE1              OR\n         CLI   PRCTL,C'0'          SPACE 2 LINES\n         BE    SPACE2              OR\n         CLI   PRCTL,C'-'          SPACE 3 LINES\n         BE    SPACE3              OR\n         CLI   PRCTL,C'+'          NO SPACE\n         BE    SPACE0              OR\n         MVI   PRCTL,C' '          DEFAULT TO 1\n         B     SPACE1\nSPACE0   MVC   LINES,=H'0'         SET SPACE COUNT TO ZERO\n         B     CHKLINE             CARRY ON\nSPACE1   LA    R0,1                SPACE 1\n         B     CHKGROUP            OR\nSPACE2   LA    R0,2                SPACE 2\n         B     CHKGROUP            OR\nSPACE3   LA    R0,3                SPACE 3\nCHKGROUP CR    R1,R0               LINES LESS THAN SHOULD BE?\n         BNL   SETGROUP            NO - CARRY ON\n         STH   R0,LINES            YES - STORE MINIMUM\n         B     CHKLINE             CARRY ON\nSETGROUP SR    R1,R0               ANY LEFT OVER?\n         BZ    CHKLINE             NO - NOT GROUP\n         OI    FLAGS,GROUPFLG      ELSE ITS THE START OF A GROUP\n         STH   R1,GROUPCT          NUMBER OF LINES LEFT IN GROUP\n         B     CHKLINE             CARRY ON\n         SPACE 3\n*              CONTINUATION OF A GROUP\n         SPACE\nGROUP    CLI   PRCTL,C'+'          NO SPACE\n         BE    PUTLINE             NO SPACING -SHOULD BE O K\n         LH    R1,GROUPCT          NUMBER OF LINES LEFT IN GROUP\n         MVI   PRCTL,C' '          ONLY SINGLE SPACING IN A GROUP\n         BCT   R1,GROUPA           ANOTHER LINE\n         NI    FLAGS,GROUPOFF      IF ZERO CLEAR GROUP FLAG\nGROUPA   STH   R1,GROUPCT          NUMBER OF LINES LEFT\n         B     PUTLINE\n         SPACE 3\n*              CHECK FOR SPACE ON THE PAGE\n         SPACE\nCHKLINE  EQU   *\n         LH    R8,LINECT           R8 = LINE COUNT\n         AH    R8,LINES            R8 = LINE COUNT AFTER THIS GROUP\n         CH    R8,LINELMT          HIGHER THAN LINE LIMIT\n         BL    STORCNT             NO - SAVE COUNT AND PUT LINE\n         SR    R8,R8               CLEAR R8\n         SPACE 3\n*              CONVERT PAGE NUMBER\n         SPACE\n         LH    R1,PAGECT           R1 = PAGE COUNT\n         LA    R1,1(R1)            PLUS 1\n         STH   R1,PAGECT           SAVE NEW PAGE COUNT\n         CVD   R1,PNUM             CONVERT TO DECIMAL\n         MVC   PAGENO,=X'202120'   MOVE IN MASK\n         ED    PAGENO-1(4),PNUM+6  EDIT PAGE NUMBER\n         PUT   SYSPRINT,HEADER     PUT TOP LINE\nPUTHEAD  L     R10,ANEXT           R10 -> NEXT HEADER\n         LTR   R10,R10             OR = ZEROS\n         BZ    TOPSPACE            CHECK IF SPACE NEEDED\n         PUT   SYSPRINT,HEADER     PUT HEADING\n         AH    R8,LINES            ADD ON NUMBER OF LINES\n         B     PUTHEAD             PUT NEXT HEADER\n         SPACE 3\n*              INSERT BLANK LINE IF NECESSARY\n         SPACE\nTOPSPACE TM    OPBYTE1,SETBLANK    BUT ONLY IF FLAG IS ON\n         BZ    STORCNT             IF NOT ON THEN BYPASS\n         LH    R2,GROUPCT          R2 = GROUP COUNT\n         CLI   PRCTL,C'+'          NO SPACE\n         BE    STORCNT             OR\n         CLI   PRCTL,C'0'          SPACE 2\n         BE    STORCNT             OR\n         CLI   PRCTL,C'-'          SPACE 3\n         BE    TOPS3               OR\n         CLI   PRCTL,C' '          SPACE 1\n         LA    R1,1(R1)            ADD 1 TO SPACE COUNT\n         LA    R2,1(R2)            ADD 1 TO GROUP COUNT\n         B     TOPSREST            RESET\nTOPS3    BCTR  R1,0                SPACE COUNT LESS 1\n         BCTR  R2,0                GROUP COUNT LESS 1\nTOPSREST STH   R1,LINES            SAVE SPACE COUNT\n         STH   R2,GROUPCT          SAVE GROUP COUNT\n         MVI   PRCTL,C'0'          SET CONTROL TO SPACE 2\n         SPACE 3\n*              PUT PRINT LINE\n         SPACE\nSTORCNT  STH   R8,LINECT           SAVE LINE COUNT\nPUTLINE  PUT   SYSPRINT,PRLINE     PUT PRINT LINE\n         MVC   PRLINE,SPACE        CLEAR PRINT LINE\n         MVC   LINES,=H'1'         RESET LINES TO 1\n         B     GOBACK\n         SPACE 3\n*              OPEN SYSPRINT\n         SPACE\nOPENPRT  BEGIN (SAVE)\n         GETMAIN R,LV=176          GET CORE FOR JFCB\n         ST    R1,JFCBAD           STORE ADDRESS\n         MVI   JFCBAD,X'87'        INDICATE JFCB\n         RDJFCB SYSPRINT           READ JFCB\n         L     R1,JFCBAD           R1 -> JFCB\n         CLC   102(2,R1),=H'0'     BLOCK SIZE SPECIFIED?\n         BNE   @10                 BRANCH IF NOT ZERO\n         MVC   102(2,R1),=H'1330'  ELSE SET BLOCK SIZE\n@10      OPEN  (SYSPRINT,OUTPUT),TYPE=J\n         L     R1,JFCBAD           R1 -> CORE TO BE FREED\n         FREEMAIN R,LV=176,A=(R1)  FREE CORE\n         B     GOBACK\n         SPACE 3\n*              CLOSE SYSPRINT\n         SPACE\nCLOSEPRT BEGIN (SAVE)\n         CLOSE SYSPRINT\n         B     GOBACK\n         SPACE 3\nGOBACK   GOBACK\n         SPACE 3\nPNUM     DC    D'0'                WORK AREA\nSAVE     DC    18F'0'\nGROUPCT  DC    H'0'                GROUP LINE COUNT\nFLAGS    DC    X'00'               FLAGS\nGROUPFLG EQU   X'80'               GROUP ON\nGROUPOFF EQU   X'7F'               GROUP OFF\n         DS    0F\nJFCBAD   DC    X'87'\n         DC    AL3(0)              ADDRESS OF JFCB\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,RECFM=FBA,LRECL=133,           *\n               MACRF=PM,EXLST=JFCBAD\n         SPACE 3\n*              PROGRAM CONTROL WORK AREA\n         SPACE\nPCWA     MIPPCWA DSECT\n         SPACE 3\nTOPLINE  DSECT\nANEXT    DS    F\nPAGECT   DS    H                   CURRENT PAGE NUMBER\n         DS    C\nHEADER   DS    CL130\nPAGENO   DS    CL3\n         SPACE 3\n*              PRINT LINE\n         SPACE\nPRFIELD  DSECT\nACLINE   DS    A                   ADDRESS OF NEXT LINE\nLINES    DS    H                   NUMBER OF LINES\nSPACE    DS    C                   SPACE\nPRCTL    EQU   *\nPRLINE   DS    CL133\nLINECT   DS    H                   LINE COUNT\nLINELMT  DS    H                   MAXIMUM NUMBER OF LINES ON A PAGE\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCUSE": {"ttr": 3332, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00:\\x00:\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 58, "newlines": 58, "modlines": 0, "user": "UKGUIDE"}, "text": "VTOCUSE  CSECT\n         SPACE\n*    *    *    *    *    *    *    *    *    *    *    *    *    *    *\n*                                                                     *\n*    VTOCUSE   WILL IF REQUIRED PRODUCE A PUNCHED CARD,RECORD ID = 9  *\n*              GIVING                                                 *\n*                                                                     *\n*                        DSNAME                                       *\n*                        TOTAL TRACKS ALLOCATED                       *\n*                        TOTAL TRACKS IN USE                          *\n*                        VOLUME SERIAL NUMBER                         *\n*                                                                     *\n*    *    *    *    *    *    *    *    *    *    *    *    *    *    *\n         SPACE 4\n         BEGIN\n         SPACE 4\n         YEBEQU\n         SPACE 4\n         L     R10,4(R1)                R10 -> CARD AREA\n         L     R11,0(R1)                R11 -> PCWA\n         USING PCWA,R11\n         SPACE 4\n*              1ST ENTRY OPEN SYSPUNCH IF NOT IN USE\n         SPACE\n         BC    0,OPENED                 NO BRANCH 1ST TIME THRO\n         OI    *-3,X'F0'                SET TO UNCONDITIONAL BRANCH\n         TM    OPTIONS,OPPUNCH          SYSPUNCH ALREADY IN USE\n         BO    OPENED                   YES\n         CALL  OPENPCH                  NO - OPEN SYSPUNCH\n         EJECT\nOPENED   L     R8,AF1DSCB               R8 -> FORMAT 1 DSCB\n         USING F1DSCB,R8\n         CLI   DS1NOEPV,0               ANY EXTENTS?\n         BE    GOBACK                   NO - TAKE NO ACTION\n         L     R7,DS1AEXT               R7 -> FIRST EXTENT BLOCK\n         USING DSEXT,R7\n         LTR   R7,R7                    SHOULD POINT TO NEXT EXTENT\n         BZ    GOBACK                   RETURN IF ZERO\n         LH    R6,DS1LSTAR              POINTER TO LAST WRITTEN BLOCK\n         LA    R6,1(R6)                 ROUND UP TO WHOLE TRACKS\n         ST    R6,44(R10)               STORE TRACKS USED\n         SR    R5,R5                    CLEAR R5 -> 0\nNEXTEXT  EQU   *\n         AH    R5,EXTNOTRK              INCR NO OF TRACKS ALLOCTED\n         L     R7,EXTDNEXT              ADDRESS NEXT BLOCK\n         LTR   R7,R7                    ANOTHER BLOCK EXIST?\n         BNZ   NEXTEXT                  YES\n         ST    R5,48(R10)               LOAD TRACKS ALLOCATED\n         CALL  VTOCPCH,((R11))          PUNCH CARD\n         SPACE 3\nGOBACK   GOBACK RC=0                    RETURN\n         EJECT\nDSEXT    MIPDSEXT\n         SPACE 4\nPCWA     MIPPCWA DSECT\n         SPACE 4\nF1DSCB   MIPF1\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WAIT": {"ttr": 3334, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00\\t\\x00\\t\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    WAIT\n&NAME    DS    0H\n         MNOTE 0,'WAIT VARIES UNDER O.S#'\n         PIOCS\n*        IF WAIT IS USED WITH SETIME, NOTE THAT O.S. 'STIMER' HAS AN\n*                       INBUILT WAIT ROURINE.\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WAITF": {"ttr": 3336, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    WAITF\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'WAITF  MACRO NOT SUPPORTED BY O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WAYOUT": {"ttr": 3338, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00G\\x00G\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 71, "newlines": 71, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    WAYOUT &RET\n         GBLB  &WAYIN1\n         GBLB  &WAYIN4\n         LCLC  &RETCOD\n.*         ***************      PROGRAM ABSTRACT        ***************\n.*\n.*         TITLE  - WAYOUT.\n.*         AUTHOR - CHRIS THOMSON.\n.*                  THIS VERSION FOR OS BY IAIN MACKINTOSH.\n.*         DATES  - A. MARCH, 1970.\n.*                  B. JANUARY, 1972.\n.*\n.*         FUNCTION -\n.*                  GENERAL EXIT MACRO FOR ASSEMBLER MODULES.\n.*                  PROVIDES ADDRESSING COMPATIBILITY FOR WAYIN.\n.*\n.*         SAMPLE OF USE -\n.*                  WAYOUT ,       RETURN CODE OF ZERO ASSUMED\n.*                  WAYOUT (R15)   R15 PRE-LOADED BY USER WITH CODE\n.*                  WAYOUT 32      RETURN CODE LOADED BY WAYOUT\n.*\n.*         PARAMETERS USED -\n.*                  AS ABOVE TO DENOTE FORM AND/OR VALUE OF RETURN\n.*                  CODE TO BE PASSED TO HIGHER LEVEL.  NOTE THAT DOS\n.*                  VERSIONS OF WAYOUT NOW NEED TO SPECIFY AN OPERAND\n.*                  OR COMMA FOR DEFAULT VALUES.  NOTE ALSO THAT (15)\n.*                  AND (R15) ARE BOTH ACCEPTABLE AS REGISTER\n.*                  NOTATION.  RETURN CODE VALUES MUST RANGE 1-4095.\n.*\n.*         ADDITIONAL REMARKS -\n.*                  REGISTER EQUATES USED AS STANDARD.\n.*                  SAVE AREA AUTOMATICALLY FLAGGED TO SHOW ENTRY.\n.*                  LABEL 'SAVEAREA' GENERATED FOR 72-BYTE BUCKET.\n.*\n.*         ***************      END OF ABSTRACT         ***************\n.*\n.*\n&RETCOD  SETC  '&RET'\n*                                WAYOUT GENERAL PURPOSE MACRO    1.0\n*                                  STANDARD RETURN FROM A MODULE.\n         AIF   (NOT &WAYIN4).ZSRE00\n&NAME    LR    R1,R13 .            POINT AT GOTTEN CORE\n         L     R13,4(R13) .        RESET SAVE AREA ADDRESS\n         MVI   12(R13),X'FF' .     DENOTE SUCCESSFUL RETURN\n         LA    R0,72 .               AND LENGTH\n         SVC   10 .                FREEMAIN CORE\n         AGO   .TESTRET\n.ZSRE00  ANOP\n&NAME    L     R13,4(R13) .        RESET SAVEAREA ADDRESS\n         MVI   12(R13),X'FF' .     DENOTE SUCCESSFUL RETURN\n.TESTRET AIF   ('&RET' EQ '(15)' OR '&RET' EQ '(R15)').REGCODE\n         AIF   (T'&RET EQ 'O').ZS01\n         AIF   (T'&RET NE 'N').ERROR\n         AIF   ('&RET' GE '0' AND '&RET' LE '4095').NOCODE\n.ERROR   MNOTE 0,'WAYOUT .. INVALID RETURN CODE .. ZERO ASSUMED'\n.ZS01    ANOP\n&RETCOD  SETC  '0'\n.NOCODE  ANOP\n         LM    R14,R12,12(R13) .   RE-LOAD REGISTERS\n         LA    R15,&RETCOD .            LOAD SUPPLIED RETURN CODE\n         AGO   .RETURN\n.REGCODE ANOP\n         L     R14,12(R0,R13) .    RE-LOAD R14\n         LM    R0,R12,20(R13) .    RE-LOAD R0-R12\n.RETURN  ANOP\n         BR    R14 .               RETURN TO CALLER\n         AIF   (&WAYIN1).NOSAVE\n*\nSAVEAREA DS    9D .                REGISTER BUCKET FOR THIS MODULE\n.NOSAVE  MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WAYUP": {"ttr": 3341, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00\\x83\\x00\\x83\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 131, "newlines": 131, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    WAYUP &MODULE,&PARAMS\n.*\n.*         ***************      PROGRAM ABSTRACT        ***************\n.*\n.*         TITLE  - WAYUP (MACRO).\n.*         AUTHOR - IAIN MACKINTOSH (OS VERSION).\n.*         DATE   - FEBRUARY, 1972.\n.*\n.*         FUNCTION -\n.*                  PROVIDES AN EXTENSION TO CALL MACRO BY ENABLING\n.*                 DSECT ADDRESSIBILITY.\n.*\n.*         SAMPLE OF USE -\n.*                  WAYUP MODULE,(PARAM1,PARAM2,....)\n.*\n.*         PARAMETERS -\n.*                  AS PER CALL MACRO, BUT NOTE THAT -\n.*\n.*                  1.  REGISTER NOTATION FULLY SUPPORTED IN THIS\n.*                      VERSION.  BOTH MODULE AND PARAMETER ADDRESSES\n.*                      CAN BE SPECIFIED IN ANY REGISTER, AND MAY BE\n.*                      INTERMIXED WITH ASSEMBLER LABELS.  THE USE\n.*                      OF REGISTER EQUATES IS PERMITTED ALSO.\n.*                  2.  THE VL PARAMETER OF CALL IS UNNECESSARY AS\n.*                      WAYUP AUTOMATICALLY FLAGS THE FINAL ADDRESS\n.*                      CONSTANT WITH X'80'.\n.*                  3.  THE ID PARAMETER OF CALL IS NOT SUPPORTED.\n.*\n.*         OTHER REMARKS -\n.*                  ENFORCES THE USE OF REGISTER EQUATES.\n.*                  USES SYSTEM REGISTERS 14 THROUGH 1.\n.*                  GENERATES RECURSIVE LABEL 'SPGANNNN'.\n.*\n.*         **************       END OF ABSTRACT         ***************\n.*\n.*\n         LCLA  &REG(4)                  REGISTERS 14 THROUGH 1\n         LCLA  &SUBLIST                 NUMBER OF PARAMETERS\n         LCLA  &PARMNO                  CURRENT PARAMETER\n         LCLA  &LOOPCNT                 STM LOOP COUNTER\n         LCLA  &DISPL                   DISPLACEMENT INTO PARM LIST\n         LCLB  &MODSW                   SET ACCORDING TO MODULE\n         LCLC  &DUMPARM                 INTERMEDIATE PARAMETER\n.*\n         AIF   (T'&MODULE NE 'O').COMMENT\n         MNOTE 8,'WAYUP .. NO MODULE SPECIFIED .. NO CODE GENERATED'\n         MEXIT\n.COMMENT ANOP\n*                                WAYUP GENERAL PURPOSE MACRO    2.0\n*                                  EXTENDED LINKAGE FACILITIES\n&NAME    DS    0H\n         AIF   (T'&PARAMS EQ 'O').NOPARMS\n&REG(1)  SETA  14\n&REG(2)  SETA  15                       SET UP THE STM\n&REG(3)  SETA  0                        REGISTER VARIABLES\n&REG(4)  SETA  1\n&SUBLIST SETA  N'&PARAMS\n&PARMNO  SETA  1\n         AIF   ('&MODULE'(1,1) NE '(').LOOP1\n         AIF   ('&MODULE' EQ '(R15)' OR '&MODULE' EQ '(15)').SAVE\n         AIF   ('&MODULE' EQ '(R14)' OR '&MODULE' EQ '(14)').SAVE\n         AIF   ('&MODULE' EQ '(R0)' OR '&MODULE' EQ '(0)').SAVE\n         AIF   ('&MODULE' NE '(R1)' OR '&MODULE' NE '(1)').LOOP1\n.SAVE    ANOP\n&DUMPARM SETC  '&MODULE'(2,K'&MODULE-2)\n&LOOPCNT SETA  (&SUBLIST*4)+4\n         ST    &DUMPARM,SPGA&SYSNDX+&LOOPCNT\n&MODSW   SETB  1\n.*\n.LOOP1   ANOP\n&LOOPCNT SETA  0\n.*\n.LOOP2   ANOP\n&LOOPCNT SETA  &LOOPCNT+1\n         AIF   (K'&PARAMS(&PARMNO) GT 8).NOSETC\n&DUMPARM SETC  '&PARAMS(&PARMNO)'\n         AIF   ('&DUMPARM'(1,1) EQ '(').REGNOTN\n         LA    R&REG(&LOOPCNT),&DUMPARM\n         AGO   .BUMPUP\n.NOSETC  LA    R&REG(&LOOPCNT),&PARAMS(&PARMNO)\n         AGO   .BUMPUP\n.REGNOTN ANOP\n&DUMPARM SETC  '&DUMPARM'(2,K'&PARAMS(&PARMNO)-2)\n         LR    R&REG(&LOOPCNT),&DUMPARM\n.BUMPUP  ANOP\n         AIF   (&SUBLIST EQ 1 AND &LOOPCNT EQ 1).ONLYONE\n.*\n&PARMNO  SETA  &PARMNO+1\n&SUBLIST SETA  &SUBLIST-1\n         AIF   (&SUBLIST EQ 0).STOREG\n         AIF   (&LOOPCNT LT 4).LOOP2\n.STOREG  ANOP\n         STM   R14,R&REG(&LOOPCNT),SPGA&SYSNDX+&DISPL\n&DISPL   SETA  &DISPL+(&LOOPCNT*4)\n         AIF   (&SUBLIST EQ 0).ALLDONE\n         AGO   .LOOP1\n.ONLYONE ANOP\n         ST    R14,SPGA&SYSNDX+&DISPL\n&DISPL   SETA  &DISPL+4\n.ALLDONE ANOP\n         CNOP  0,4 .               FULLWORD ALIGNMENT\n         OI    SPGA&SYSNDX+(&DISPL-4),X'80' .  FLAG LAST ADCON\n         AIF   ('&MODULE'(1,1) NE '(' OR &MODSW).BIGBAL\n         BAL   R1,*+4+&DISPL\n         AGO   .PARMLST\n.BIGBAL  BAL   R1,*+8+&DISPL\n.PARMLST ANOP\n&DISPL   SETA  &DISPL/4\nSPGA&SYSNDX DS &DISPL.F\n.NOPARMS ANOP\n         AIF   (&MODSW).LABEL\n         AIF   ('&MODULE'(1,1) NE '(').LABEL\n         AIF   ('&MODULE' EQ '(15)' OR '&MODULE' EQ '(R15)').BALR\n&DUMPARM SETC  '&MODULE'(2,K'&MODULE-2)\n         LR    R15,&DUMPARM\n         AGO   .BALR\n.LABEL   ANOP\n         AIF   (T'&PARAMS NE 'O').SETCON\n         CNOP  0,4 .               FULLWORD ALIGNMENT\n         B     *+8 .               BRANCH ROUND ADCON\n.SETCON  AIF   (&MODSW).ATYPE\n         DC    V(&MODULE) .\n         AGO   .LOAD\n.ATYPE   ANOP\n         DC    A(0) .\n.LOAD    ANOP\n         L     R15,*-4 .           LOAD ENTRY ADDRESS IN R15\n.BALR    ANOP\n         BALR  R14,R15 .           EXIT TO CALLED MODULE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WRITE": {"ttr": 3344, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n&NAME    WRITE\n&NAME    DS    0H\n         SPACE\n         MNOTE 0,'WRITE MACRO FORMAT VARIES UNDER O.S.'\n         SPACE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XDATEDIT": {"ttr": 3346, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00\\x07\\x00\\x07\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "UKGUIDE"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "XM21CP": {"ttr": 3348, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00)\\x00)\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 41, "newlines": 41, "modlines": 0, "user": "UKGUIDE"}, "text": "//SCRCPF  EXEC PGM=IEHPROGM\n//*\n//*  SCRATCH CHECKPOINT FILE PRIOR TO XM21\n//*  -------------------------------------\n//SYSPRINT DD  SYSOUT=A\n//DD1      DD  VOL=REF=SYS1.SVCLIB,UNIT=3330,DISP=OLD\n//DD2      DD  VOL=SER=HBS107,DISP=OLD,UNIT=2314\n//SYSIN    DD  DSN=HBS.CONCARD(XM21SCR),DISP=SHR\n//XM21    EXEC PGM=XM21\n//*\n//*  XM21 - COMPARE PROGRAM (WITH CHECKPOINT FILE)\n//*         COMPARES DATA SETS,DEFINED BY DD CARDS WITH DDNAMES OF\n//*         DS01I & DS02I, AS INDICATED BY CONTROL CARDS\n//*  -------------------------------------------------------------\n//STEPLIB  DD  DSN=HBS.LOADLIB,DISP=SHR\n//SYSABEND DD  SYSOUT=A\n//TIME     DD  DUMMY\n//*\n//*      CPFILE - CHECKPOINT FILE\n//*      ------------------------\n//CPFILE   DD  DSN=HBS.CPFXM21,DISP=(,,CATLG),                         X\n//             DCB=(BLKSIZE=7294,RECFM=U),                             X\n//             SPACE=(CYL,(30,1)),                                     X\n//             VOL=SER=HBS107,                                         X\n//             UNIT=2314\n//*\n//*      DS01I - FIRST DATA SET TO BE COMPARED\n//*      -------------------------------------\n//DS01I    DD  DUMMY\n//*\n//*      DS02I - SECOND DATA SET TO BE COMPARED\n//*      --------------------------------------\n//DS02I    DD  DUMMY\n//*\n//*      P03 - CARD VALIDATION AND COMPARISON REPORT\n//*      -------------------------------------------\n//P03      DD  SYSOUT=A,DCB=(BLKSIZE=1330,LRECL=133,RECFM=FBA)\n//*\n//*      CONCARD - CONTROL CARDS\n//*      -----------------------\n//CONCARD  DD  DUMMY,DCB=BLKSIZE=80\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "YEBEQU": {"ttr": 3350, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92!\\x7f\\x00\\x92!\\x7f\\x12!\\x00\\t\\x00\\t\\x00\\x00\\xe4\\xd2\\xc7\\xe4\\xc9\\xc4\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-08-04T00:00:00", "modifydate": "1992-08-04T12:21:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "UKGUIDE"}, "text": "         MACRO\n         YEBEQU\n         LCLA  &A\n&A       SETA  0\n.LOOP    ANOP\nR&A      EQU   &A\n&A       SETA  &A+1\n         AIF   (&A LT 16).LOOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT263/FILE263.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT263", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}