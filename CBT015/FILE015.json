{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011047000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 352716, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE015.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE015.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x10'", "DS1TRBAL": "b'H@'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00+\\x00\\x02\\x00+\\x00\\t\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DSCLAIM": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ">>>>>>>>>>>>>>>>>>>>>> W B    D I S C L A I M E R<<<<<<<<<<<<<<<<<<<<<<<\n\n     THE INFORMATION OR MATERIAL BEING PROVIDED BY WARNER BROS. INC.\n(WB), WHETHER IN HARD COPY OR MACHINE READABLE FORM, HAS BEEN DEVELOPED\nBY WB FOR ITS OWN PURPOSE AND FOR USE ON ITS OWN EQUIPMENT AND WITHIN\nITS OWN DATA PROCESSING SYSTEM.  WB MAKES NO REPRESENTATIONS OR\nWARRANTIES WHATSOEVER WITH RESPECT TO THE INFORMATION OR MATERIAL\nFURNISHED HEREUNDER, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS\nFOR ANY PARTICULAR USE OR PURPOSE OR THAT THE USE OF THE INFORMATION OR\nMATERIAL WILL NOT INFRINGE ANY PATENT, COPYRIGHT, TRADEMARK, OR OTHER\nPROPRIETARY INTEREST.  YOU ARE, THEREFORE, ACCEPTING THIS INFORMATION OR\nMATERIAL ON AN \"AS IS\" BASIS AND WILL BE USING IT AT YOUR OWN RISK.\nNEITHER WB NOR ANY OF ITS AFFILIATES SHALL BE LIABLE WITH RESPECT TO\nANY CLAIM, ACTION, OR DEMAND BY ANY USER OR OTHER PARTY (INCLUDING ANY\nCLAIM, ACTION, OR DEMAND FOR CONSEQUENTIAL DAMAGES EVEN IF WB HAS BEEN\nADVISED OF THE POSSIBILITY OF SUCH DAMAGES) ARISING FROM THE USE OF THE\nINFORMATION OF THE MATERIALS AND CONCEPTS RELATED THERETO.  FURTHERMORE,\nWB MAKES NO CLAIM THAT IT WILL MAINTAIN, CORRECT, OR UPDATE THIS\nINFORMATION OR MATERIAL IN THE FUTURE.\n\n>>>>>>>>>>>>>>>>>>>>>> W B    D I S C L A I M E R<<<<<<<<<<<<<<<<<<<<<<<\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$JCL": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//YARF020N JOB (SD,A,SPM000,ARF),'CREATE CBT TAPE',\n// NOTIFY=YARF,CLASS=M,MSGCLASS=T,TYPRUN=HOLD\n/*JOBPARM  ROOM=1318\n//S1        EXEC PGM=IEBCOPY,REGION=2M\n//SYSPRINT  DD SYSOUT=*\n//SYSUT3    DD UNIT=VIO,SPACE=(CYL,(5))\n//SYSUT4    DD UNIT=VIO,SPACE=(CYL,(5))\n//SYSUT1    DD DISP=SHR,DSN=YARF.CBT.DATA\n//SYSUT2    DD DISP=(,KEEP),DSN=YARF.CBT.TAPE,\n// UNIT=CART,LABEL=(,NL,EXPDT=98000),VOL=SER=123456\n//SYSIN  DD *\n   COPY I=((SYSUT1,R)),O=SYSUT2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$README": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\nINCLUDED ARE:\n\n  TABLES AND JOBS NECESSARY TO GET SMF TYPE 32 TSO COMMAND ACCOUNTING\n  RECORDS RUNNING. USEFULL TO SEE WHAT RESOURCES OEM TSO PRODUCTS USE.\n\n  A FEW PDF EDIT MACROS AND HELP MEMBERS. A PDF FRONT END FOR\n  DYNASOFTS TSO WORDPROCESSOR AND SPREADSHEET. A PRIMARY PDF PANEL\n  THAT CAN SCROLL IN ALL FOUR DIRECTIONS TO ALLOW DISPLAY OF LOTS\n  PDF OPTIONS.\n\n  A COUPLE OF ACF2 ASM ROUTINES TO DO RESOURCE VALIDATION AND\n  INQUERY FUNCTIONS.\n\n  VERISON OF CLIP THAT WORKS WITH DSF REL9 AND XA OR 370.\n\n  TO JES EXITS. ONE PROVIDES A MASKABLE VERISON OF $D'NAME*** .\n  WAS A SOURCE MOD TO HASPCOMM RE-WRIITEN AS AN EXIT.\n  EXIT FOUR ALLOWS FOR CODING DSN= ON SETUP CARDS. EXIT CONVERTS\n  DSN NAMES TO VOLSER'S SO USER DOES NOT HAVE TO LOOK THEM UP. SOME\n  LOCAL CODE IN THIS BUT WOULD BE EASY TO DROP OR CHANGE.\n\n  MVS/XA MOD TO INSTALL CUSTOM CONSOLE PFK DEFINITIONS. ONE SAMPLE\n  DEFINITIONS INCLUDED . THIS ALLOWS FOR SIMPLE RE-DEFINES ARE GENS\n  OR MAINTENANCE. WE HAVE TEN CONSOLES SO THIS HELPS.\n\n  MVS/XA MOD TO ALLOW RESTART OF JOBS THAT USE GDG'S AND REFER\n  TO THEM AS +1 IN LATER STEPS.\n  WITHOUT THIS MOD JOBS RESTARTED WOULD HAVE TO HAVE ALL\n  REFERENCRES TO +1 CHANGED TO 0.  THIS IS AN ERROR PRONE AND\n  TIME CONSUMING TASK. TESTED AND RUNNING UNDER XA 2.1.7 DFP 2.2.3.\n  THIS IS A VERY STABLE MOD. HAS NOT CHANGE SIZE OF LOCATION IN\n  YEARS. LAST CHANGE WAS A \"DISPLACEMEMNT\" CHANGE WHEN SIZE OF\n  MODULE WAS CHANGED.\n\n\n\n  MEMBER                     DESCRIPTION\n\n  $JCL           JCL USED TO CREATE THIS TAPE.\n  $DSCLAIM       STANDARD CYA DISCLAIMER\n  $README        THIS STUFF\n  #RESTORE       HELP FOR RESTORE EDIT MACRO.\n  #TRAP          HELP FOR TRAP EDIT MACRO.\n  #VPS           HELP FOR VPS  EDIT MACRO.\n  ACF2INQ        ASM SUBROUTINE TO RETURN ACF2 UID STRING TO\n                 A REQUESTING CICS TRANSACTION.\n  ACF2VALD       ASM PGM THAT DOES A RESOURCE VALIDATION FROM\n                 BATCH OR TSO. CAN BE USED TO CONTROL POWERFULL\n                 TSO CP'S LIKE SPY , QUEUE, ETC. OR TO CONTROL\n                 BATCH ACCESS TO CRITICAL RESOURCES.\n  ASKUID         ASM SUBROUTINE TO RETURN ACF2 UID STRING TO\n                 AS A PDF DIALOG VARIABLE.\n  CLIP           ASM PGM RUNS AS A STARTED TASK. USED TO RELABEL\n                 OR INSPECT DASD FROM A CONSOLE. RUNS OK WITH\n                 DSF REL9.\n  DYN#C1         PDF CLIST TO INVOKE DYNASOFT PRODUCT\n  DYN#P1         PRIMARY DYNAPLAN PANEL\n  DYN#T1         FIRST PANEL OF PROPOSED TUTORIAL SERIES, WOULD\n                 ALSO BE A SELECTABLE OPTION OF DYN#P1.\n  DYNASEND       JCL USED TO CREATE THIS TAPE\n  DYNM00         PDF MESSAGE MEMBER\n  GDGMOD         VERY USEFUL MOD TO SIMPLIFY RESTARTING JOBS THAT\n                 USE GDG'S.\n  IEEMB846       SOURCE FOR TSO ACCOUNTING TABLE .\n  IEEPK860       SAMPLE INPUT TO CONSOLE PFK MOD.\n  ISPTCM         SOURCE FOR ISPF ACCOUNTING TABLE\n  ISR@PRIM       SAMPLE PRIM PANEL USED TO INVOKE OPTION \"DYNA\"\n                 KIND OF NEAT AS IT'S SCROLLABLE IN FOUR\n                 DIRECTIONS.\n  JCLJES4        JCL TO ASM + LINK JES EXIT 4\n  JCLJES5        JCL TO ASM + LINK JES EXIT 5\n  JESXIT5D       ADD $D'JOB**** COMMAND TO JES2.\n  JES2XIT4       MOD TO ALL DSN= ON SETP CARDS IN JES MAKES\n                 IT MUCH EASIER TO PULL TAPES FOR PRODUCTION\n                 JOBS. HAS SOME SITE DEPENDENT CODE IN IT .\n  PRIMDOWN       SAMPLE PRIM DOWN PANEL\n  PRIMLEFT       SAMPLE PRIM LEFT PANEL\n  PRIMRGHT       SAMPLE PRIM RGHT PANEL\n  PRIMUP         SAMPLE PRIM UP PANEL\n  RESTORE        EDIT MACRO. RELOADES LAST SAVED COPY OF CURRENT\n                 MEMBER. FASTER THAN DOING A CANCEL AND SELECTING\n                 MEMBER OVER AGAIN.\n  SMFPRM00       SAMPLE SMF PARMS. NOTE ATE DETAIL MUST BE CODED\n                 FOR TCB, IO, ECT. TO BE RECORDED IN SMF32.\n  SMF32SAS       SAS PGM TO ANALYSIS SMF32 RECORDS.\n  SMPEIEE        SAMPLE SMPEJCL TO INSTALL IEEMB846\n  SMPEPFK        SAMPLE SMPEJCL TO INSTALL CONSOLE PFK MOD.\n  SMPETCM        SAMPLE SMPEJCL TO INSTALL ISPTCM\n  SWTSO          SOURCE CODE TO SMF FRONT END PGM. THIS IS A\n                 GENERAL PURPOSE PGM WHICH SETS UP THE SMF32\n                 ENVIORNMENT. BECAUSE OF INTERNAL WB STANDARDS\n                 A LMODLIB DD STATEMENT IS REQUIRED. THE CODE\n                 COULD VERY EASILY BE ADDED TO DYNAPLAN OR\n                 THE FRONTEND PGM SUPPLIED AS A USER OPTION.\n                 THE SVC STARTS AND STOPS SMF32 ACCOUNTING.\n  TRAP           EDIT MACRO. WILL TRAP THE OUTPUT OF A TSO CP\n                 AND PLACE IT AT THE BOTTOM OF THE CURRENT EDIT\n                 DATASET. GOOD EXAMPLE OF SOME OF THE NEAT\n                 THINGS YOU CAN DO UNDER TSO/E. WILL ONLY\n                 WORK WITH TSO CP'S THAT US PUTLINE. WILL NOT\n                 WORK WITH FULLSCREEN TPUT'S.\n  VPS            EDIT MACRO. QUICK WAY TO GET A VPSPINT OF\n                 CURRENT EDIT DATA. NOTE: DOES A SAVE FIRST.\n                 THIS TECHNIQUE COULD BE USED FOR ANY TSOCP OR\n                 UTILITY.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#RESTORE": {"ttr": 523, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n)BODY Expand(//)\n%Tutorial /-/  ONLY  /-/ Tutorial\n%SELECTION ===>_ZCMD                                                           +\n%                     -----------------------------------\n                      |     Edit Macro  \"RESTORE\"       |\n                      -----------------------------------\n+\n    This Edit Macro allows a user to restore a member edit from the\n    last saved copy . This can be used when you have made a change you\n    did not mean to make.                                               .\n\n%SYNTAX:+   Restore\n+\n)PROC\n     &ZUP = #EMCH\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#TRAP": {"ttr": 525, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n)BODY Expand(//)\n%Tutorial /-/ ACFCOMP /-/ Tutorial\n%SELECTION ===>_ZCMD                                                           +\n%                     --------------------------------\n+                     |  EDIT MACRO  \"TRAP\"          |\n                      --------------------------------\n+\n+     This macro will put the output from a TSO CP that uses PUTLINE    e\n+     macros into an edit file.                                         e\n+\n+\n%SYNTAX:+\n+\n+           Trap command (plus any parameters)\n+\n%Example:+\n+\n+ COMMAND ===> TRAP DUDASD\n+\n)PROC\n     &ZUP = #EMCH\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#VPS": {"ttr": 527, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n)BODY Expand(//)\n%Tutorial /-/ ACFCOMP /-/ Tutorial\n%SELECTION ===>_ZCMD                                                           +\n%                     --------------------------------\n+                     |  EDIT MACRO  \"VPS\"           |\n                      --------------------------------\n+\n+     This macro will invoke VSPPRINT to print the dataset you are      e\n+     editing.                                                          e\n+\n+     Note: The member or dataset is saved first before the VPSPRINT\n+           command is issued.\n+\n%SYNTAX:+\n+\n+           Enter VPS on the EDIT command line when you have\n+           completed editing The dataset. You can supply up to four\n+           (4) additonal VPS options. The fist option must be the\n+           printer you wish the print out to go too.\n+\n%Example:+\n+\n+ COMMAND ===> VPS W8DF EJECT NOHEADER ASC\n+\n)PROC\n     &ZUP = #EMCH\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ACF2INQ": {"ttr": 529, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET ACF2INQV1  AT LEVEL 002 AS OF 11/05/87\n         TITLE 'ACF2CALL    V4.1    FOR CICS   1.6.1          '         00001\n         REGEQU                                                         00002\n*                                                                       00003\n*   COMM AREA PASSED BY CALLING PORGRAM                                 00004\n*                                                                       00005\nCOMMAREA DSECT                                                          00006\nCOMM     DS  0CL703                                                     00007\nLONONID  DS  CL8                                                        00008\nSOURCE   DS  CL8                                                        00009\nNAME     DS  CL20                                                       00010\nUID      DS  CL24                                                       00011\nOPER     DS  CL3                                                        00012\nMESSAGE  DS  CL128                                                      00013\nFILLER   DS  CL512       FILLER                                         00014\n*                                                                       00015\n*      ACF2 CONTROL BLOCK AND DATA AREAS                                00016\n*                                                                       00017\nDFHEISTG DSECT                                                          00018\n         ACFAEUCP                                                       00019\nUCPSCDLN EQU *-ACFAEUCP                                                 00020\n*                                                                       00021\n*      REFORMAT COMM AREA INTO ACF2 CONTROL BLOCK                       00022\n*                                                                       00023\nACF2CALL DFHEIENT CODEREG=(9,10),DATAREG=(11),EIBREG=12                 00024\n         B     START                                                    00025\n*                                                                       00026\n         DC    CL44'ACF2INQ   PROGRAM VER 4.1 '                         00027\n*                                                                       00028\nSTART    DS    0H                                                       00029\n*                                                                       00030\n         EXEC CICS HANDLE CONDITION ERROR(LINKERR)                      00031\n*                                                                       00032\n         L     R8,DFHEICAP          COMMAREA                            00033\n         USING COMMAREA,R8                                              00034\n         MVI   UCPTYP,UCPTYPP                                           00035\n         MVI   UCPREQB,UCPINQ                                           00036\n*                                                                       00037\n         EXEC CICS LINK PROGRAM('ACFAEUCC') COMMAREA(ACFAEUCP)         X00038\n               LENGTH(=AL2(UCPSCDLN))                                   00039\n*                                                                       00040\n*        CLC   UCPSTAT,UCPSTATE                                         00041**2\n*        BE    ERROR                                                    00042**2\n*                                                                       00043\n         MVC   LONONID,UCPLID                                           00044\n         MVC   SOURCE,UCPSRCE                                           00045\n         MVC   NAME,UCPNAME                                             00046\n         MVC   UID,UCPUID                                               00047\n         MVC   OPER,UCPOPID                                             00048\n         B     RETURN                                                   00049\n*                                                                       00050\nLINKERR  DS    0H                                                       00051\n         MVC   MESSAGE,=C'ACF2CALL-1 ACFAEUCC NOT AVAILABLE'            00052\n         B     RETURN                                                   00053\n*                                                                       00054\nERROR    DS    0H                                                       00055\n         MVC   MESSAGE,=C'ACF2CALL-2 ERROR OCURRED DURRING VALIDATION ' 00056\n         B     RETURN                                                   00057\n*                                                                       00058\nRETURN   DS    0H                                                       00059\n         EXEC CICS RETURN                                               00060\n         LTORG                                                          00061\n         END                                                            00062\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ACF2VALD": {"ttr": 531, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET ACF2VALDV1 AT LEVEL 019 AS OF 07/03/86\n*********************************************************************** 00001\n* ACF2 RESOURCE VALIDATION CALL FOR BATCH                             * 00002\n*                                                                     * 00003**6\n*      CALL ACF2VALD(TYPE: CHAR(4),     /* NOT USED   */              * 00004**6\n*                    P2  : PTR,         /* NOT USED   */              * 00005**6\n*                    RES : CHAR(40),    /*RESOURCE    */              * 00006**6\n*                    ACCS: CHAR(1);     /*ACCESS REQ  */              * 00007**6\n*                                                                     * 00008**6\n*********************************************************************** 00009\nACF2VALD  CSECT                                                         00010\n          SAVE   (14,12),,*                                             00011\n          LR     R3,R15                                                 00012**2\n          USING  ACF2VALD,R3                                            00013*10\n          L      R4,8(,R1)              POINT TO RESOURCE               00014**6\n          L      R5,12(,R1)             POINT TO ACCESS                 00015**6\n          GETMAIN RU,LV=@LWORK                                          00016**6\n          ST     R1,8(,R13)                                             00017**6\n          ST     R13,4(,R1)                                             00018**6\n          LR     R13,R1                                                 00019**6\n*                                                                       00020**6\n*       BUILD ACF2 INTERFACE CB'S AND CALL ACF2                         00021*12\n*                                                                       00022**6\n          LA     R6,@SAVEL(,R13)                                        00023*12\n          USING  ACDSV,R6                                               00024*12\n          MVI    0(R6),X'00'                                            00025*12\n          MVC    1(ACFSPRML-1,R6),0(R6)    CLEAR DSN                    00026*12\n          MVI    ACFSPID1,ACFSPIUR         USER CALL                    00027*12\n          MVI    ACFSPREQ,ACFSPRDS         DATASET VALIDATION           00028*12\n          CLI    0(R5),C'R'                                             00029*12\n          BNE    CHKWR                                                  00030*12\n          MVI    ACFSPAC1,ACFSPAIN                                      00031*12\n          B      DSN                                                    00032*12\nCHKWR     CLI    0(R5),C'W'                                             00033*12\n          BNE    CHKAL                                                  00034*12\n          MVI    ACFSPAC1,ACFSPAOU                                      00035*12\n          B      DSN                                                    00036*12\nCHKAL     CLI    0(R5),C'L'                                             00037*12\n          BNE    PARMERR                                                00038*12\n          MVI    ACFSPAC1,ACFSPAOT                                      00039*12\nDSN       EQU    *                                                      00040*12\n          ST     R4,ACFSPDSN                                            00041*12\n          LA     R1,@SAVEL+ACFSPRML(,R13)                               00042*12\n          ST     R1,ACFSPMSG                                            00043*12\n          ACFSVC 0(R6),TYPE=S,CVT=FIND,NONE=NOACF2                      00044*12\n          LTR    R15,R15                                                00045*12\n          BZ     RETURN0                                                00046*12\n*                                                                       00047*12\n*       HERE IF WE ARE TO WASTE THE REQUEST                             00048*12\n*                                                                       00049*12\nPARMERR   EQU    *                                                      00050*13\nERRRTN    EQU    *                                                      00051**9\n          LR     R4,R13                                                 00052**9\n          L      R13,4(,R13)                                            00053**9\n          FREEMAIN RU,LV=@LWORK,A=(R4)                                  00054*17\n          RETURN (14,12),RC=8                                           00055**9\n          SPACE  4                                                      00056**6\nRETURN0   EQU   *                             HERE IF OK TO KEEP        00057**6\n          LR     R4,R13                                                 00058**9\n          L      R13,4(,R13)                                            00059*17\n          FREEMAIN RU,LV=@LWORK,A=(R4)                                  00060**9\n          RETURN (14,12),RC=0                 CHECKING                  00061**6\nNOACF2    EQU   *                             HERE IF OK TO KEEP        00062**7\n          LR     R4,R13                                                 00063**9\n          L      R13,4(,R13)                                            00064*17\n          FREEMAIN RU,LV=@LWORK,A=(R4)                                  00065**9\n          RETURN (14,12),RC=64                CHECKING                  00066**6\n          EJECT                                                         00067**6\n          PRINT NOGEN                                                   00068**6\n          ACCVT                                                         00069**6\n          ACDSV                                                         00070*12\n          ACSXP                                                         00071**6\n          ACFREGS                                                       00072**6\n@LWORK    EQU     80+ACFSPRML+133                                       00073*12\n@SAVEL    EQU     80                                                    00074*12\n          END                                                           00075**6\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASKUID": {"ttr": 534, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET ASKUIDV1   AT LEVEL 002 AS OF 01/27/87\n*********************************************************************** 00001\n*                                                                     * 00002\n*    ASKUID:   RETURN THE UID STRING FOR A GIVEN LID                  * 00003\n*              NOTE THIS USES SPF DIALOG SERVICES                     * 00004\n*                                                                     * 00005\n*           ISPEXEC PGM(ASKUID)                                       * 00006\n*           INPUT VARIABLE IN LOCAL POOL IS LID                       * 00007\n*           OUTPUT VARIABLE IN LOCAL POOL IS UIDSTR                   * 00008\n*                                                                     * 00009\n*                                                                     * 00010\n*           RC 0:   NORMAL RETURN                                     * 00011\n*              4:   ACF2 ERROR RETURNED FOR REQUEST                   * 00012\n*              16:  ERROR TRAPPED BY ESTAE                            * 00013\n*                                                                     * 00014\n*   WARNING:  THIS WILL OBTAIN AUTHORIZATION AND WILL EXECUTE         * 00015\n*             THE ACFSVC TYPE=A SUPERCALL REQUEST.                    * 00016\n*                                                                     * 00017\n*   ANOTHER RRN DRUG INDUCED OPUS                                     * 00018**2\n*********************************************************************** 00019\n*        PRINT NOGEN                                                    00020\n         MACRO                                                          00021\n         VDEFINE &VARLST=,&FORMAT=,&LEN=,&OPTIONS=,&UDATA=              00022\n*********************************************************************** 00023\n*   VDEFINE: INVOKE VDEFINE SERVICES                                  * 00024\n*          BY: BOB NEIMAN                                             * 00025\n*          NOTE: FUNCTION MAY BE INCOMPLETE.  WILL BE MAINTAINED      * 00026\n*          AS TIME PERMITS                                            * 00027\n*********************************************************************** 00028\n         LCLA  &GMSIZE                                                  00029\n         LCLA  &VARCNT                                                  00030\n         LCLA  &VARCNT2                                                 00031\n         LCLA  &KOUNT1                                                  00032\n         LCLA  &NBYTES                                                  00033\n         LCLC  &NDX                                                     00034\n         LCLC  &BYPASS                                                  00035\n&VARCNT  SETA  N'&VARLST                                                00036\n&VARCNT2 SETA  1                                                        00037\n&NDX     SETC  '&SYSNDX'                                                00038\n&BYPASS  SETC  'VDF'.'&NDX'                                             00039\n&DATA    SETC  'VDD'.'&NDX'                                             00040\n         LA    R15,VDEFINE                                              00041\n         ST    R15,@ISPFSVC                                             00042\n         LA    R15,&DATA+8+4              POINT TO SPFHEADER            00043\n         ST    R15,@ISPFP1                STORE IN PLIST1               00044\n         LA    R15,&VARLST(1,2)                                         00045\n         ST    R15,@ISPFP2                                              00046\n         LA    R15,&DATA                                                00047\n         ST    R15,@ISPFP3                FORMAT                        00048\n         LA    R15,&DATA+8                                              00049\n         O     R15,=X'80000000'                                         00050\n         ST    R15,@ISPFP4                LENGTH                        00051\n         B     &BYPASS                    SKIP CONSTANT FIELD           00052\n&DATA    DS    0D                                                       00053\n         DC    CL8'&FORMAT'                                             00054\n         DS    0F                                                       00055\n         DC    AL4(&LEN)                                                00056\n         DC    F'&VARCNT'                SPFHEADER                      00057\n         DC    F'0'                                                     00058\n.ILOOP1  ANOP                                                           00059\n         DC    CL8'&VARLST(&VARCNT2,1)'                                 00060\n&VARCNT2 SETA  &VARCNT2+1                                               00061\n         AIF   (&VARCNT GE &VARCNT2).ILOOP1                             00062\n&VARCNT2 SETA  1                                                        00063\n&BYPASS  DS    0F                                                       00064\n         L     R15,=V(ISPLINK)                                          00065\n         LA    R1,@ISPFPLS                POINT TO PARM LIST            00066\n         BALR  R14,R15                                                  00067\n         MEXIT                                                          00068\n.ERR1    ANOP                                                           00069\n         MNOTE 4,'NAME OF SPF VARIALBE IS INVALID'                      00070\n         MEND                                                           00071\n         MACRO                                                          00072\n         VGET  &NAMES=,&TYPE                                            00073\n*********************************************************************** 00074\n*   VGET:  INVOKE VGET SERVICES                                       * 00075\n*          BY: BOB NEIMAN                                             * 00076\n*          NOTE: FUNCTION MAY BE INCOMPLETE.  WILL BE MAINTAINED      * 00077\n*          AS TIME PERMITS                                            * 00078\n*********************************************************************** 00079\n         LCLA  &KOUNT                                                   00080\n         LCLA  &NAMEKNT                                                 00081\n         LCLC  &DATA                                                    00082\n         LCLC  &NDX                                                     00083\n         LCLC  &NAMELST,&LENGTH,&VALUE                                  00084\n&NDX     SETC  '&SYSNDX'                                                00085\n&BYPASS  SETC  'VGE'.'&NDX'                                             00086\n&NAMELST SETC  'VGE1'.'&NDX'                                            00087\n&TYPELOC SETC  'VGE2'.'&NDX'                                            00088\n&NAMEKNT SETA  N'&NAMES                                                 00089\n&KOUNT   SETA  1                                                        00090\n         B     &BYPASS                                                  00091\n&NAMELST DS    0F                                                       00092\n         DC    F'&NAMEKNT'                                              00093\n         DC    F'0'                                                     00094\n.LOOP1   ANOP                                                           00095\n         DC    CL8'&NAMES(&KOUNT)'                                      00096\n&KOUNT   SETA  &KOUNT+1                                                 00097\n         AIF   (&NAMEKNT GE &KOUNT).LOOP1                               00098\n         AIF   ('&TYPE' EQ '').TYASIS                                   00099\n         AIF   ('&TYPE' EQ 'ASIS').TYASIS                               00100\n         AIF   ('&TYPE' EQ 'SHARED').TYOK                               00101\n         AIF   ('&TYPE' EQ 'PROFILE').TYOK                              00102\n         MNOTE 4,'TYPE &TYPE NOT VALID. ASIS IS ASSUMED'                00103\n.TYASIS  ANOP                                                           00104\n&TYPELOC DC    CL8'ASIS'                                                00105\n         AGO   .GENCODE                                                 00106\n.TYOK    ANOP                                                           00107\n&TYPELOC DC    CL8'&TYPE'                                               00108\n         AGO   .GENCODE                                                 00109\n.GENCODE ANOP                                                           00110\n&BYPASS  DS    0F                                                       00111\n         LA    R15,VGET                                                 00112\n         ST    R15,@ISPFSVC              MARK SERVICE                   00113\n         LA    R15,&NAMELST                                             00114\n         ST    R15,@ISPFP1                                              00115\n         LA    R15,&TYPELOC                                             00116\n         O     R15,=X'80000000'                                         00117\n         ST    R15,@ISPFP2                                              00118\n         L     R15,=V(ISPLINK)                                          00119\n         LA    R1,@ISPFPLS                                              00120\n         BALR  R14,R15                                                  00121\n         MEXIT                                                          00122\n.ERR1    ANOP                                                           00123\n         MNOTE 4,'&TUSE IS INVALID'                                     00124\n         MEND                                                           00125\n         MACRO                                                          00126\n         VPUT  &NAMES=,&TYPE                                            00127\n*********************************************************************** 00128\n*   VPUT:  INVOKE VPUT SERVICES                                       * 00129\n*          BY: BOB NEIMAN                                             * 00130\n*          NOTE: FUNCTION MAY BE INCOMPLETE.  WILL BE MAINTAINED      * 00131\n*          AS TIME PERMITS                                            * 00132\n*********************************************************************** 00133\n         LCLA  &KOUNT                                                   00134\n         LCLA  &NAMEKNT                                                 00135\n         LCLC  &DATA                                                    00136\n         LCLC  &NDX                                                     00137\n         LCLC  &NAMELST,&LENGTH,&VALUE                                  00138\n&NDX     SETC  '&SYSNDX'                                                00139\n&BYPASS  SETC  'VPU'.'&NDX'                                             00140\n&NAMELST SETC  'VPU1'.'&NDX'                                            00141\n&TYPELOC SETC  'VPU2'.'&NDX'                                            00142\n&NAMEKNT SETA  N'&NAMES                                                 00143\n&KOUNT   SETA  1                                                        00144\n         B     &BYPASS                                                  00145\n&NAMELST DS    0F                                                       00146\n         DC    F'&NAMEKNT'                                              00147\n         DC    F'0'                                                     00148\n.LOOP1   ANOP                                                           00149\n         DC    CL8'&NAMES(&KOUNT)'                                      00150\n&KOUNT   SETA  &KOUNT+1                                                 00151\n         AIF   (&NAMEKNT GE &KOUNT).LOOP1                               00152\n         AIF   ('&TYPE' EQ '').TYASIS                                   00153\n         AIF   ('&TYPE' EQ 'ASIS').TYASIS                               00154\n         AIF   ('&TYPE' EQ 'SHARED').TYOK                               00155\n         AIF   ('&TYPE' EQ 'PROFILE').TYOK                              00156\n         MNOTE 4,'TYPE &TYPE NOT VALID. ASIS IS ASSUMED'                00157\n.TYASIS  ANOP                                                           00158\n&TYPELOC DC    CL8'ASIS'                                                00159\n         AGO   .GENCODE                                                 00160\n.TYOK    ANOP                                                           00161\n&TYPELOC DC    CL8'&TYPE'                                               00162\n         AGO   .GENCODE                                                 00163\n.GENCODE ANOP                                                           00164\n&BYPASS  DS    0F                                                       00165\n         LA    R15,VPUT                                                 00166\n         ST    R15,@ISPFSVC              MARK SERVICE                   00167\n         LA    R15,&NAMELST                                             00168\n         ST    R15,@ISPFP1                                              00169\n         LA    R15,&TYPELOC                                             00170\n         O     R15,=X'80000000'                                         00171\n         ST    R15,@ISPFP2                                              00172\n         L     R15,=V(ISPLINK)                                          00173\n         LA    R1,@ISPFPLS                                              00174\n         BALR  R14,R15                                                  00175\n         MEXIT                                                          00176\n.ERR1    ANOP                                                           00177\n         MNOTE 4,'&TUSE IS INVALID'                                     00178\n         MEND                                                           00179\nASKUID   CSECT                                                          00180\n         SAVE   (14,12),,*              SAVE OLD REGISTERS              00181\n         LR     R3,R15                  MOVE EPA FOR ADDRESSIBILITY     00182\n         USING  ASKUID,R3                                               00183\n         GETMAIN RU,LV=@DYNLEN          GET ME A SAVE AREA              00184\n         ST     R13,4(,R1)                 CHAIN                        00185\n         ST     R1,8(,R13)                CHAIN                         00186\n         LR     R13,R1                                                  00187\n         USING  @DYNWORK,R13           ADDRESS DSA                      00188\n         L      R15,=V(UIDESTAE)         FIND ESATE RECOVERY RTN        00189\n         ESTAE  (15),OV,PARAM=ESTAPLST   PREVENT BAD ABENDS             00190\n         LA     R4,@DYNACAL              POINT TO ACALT BLOCK           00191\n         USING  ACALT,R4                   ADDRESS IT                   00192\n         MVI    ACAFCN,X'02'               MAKE IT ACALT REQUEST        00193\n         MVI    ACASFCN,ACASIRT            IRT SUB-FUNCTION             00194\n         MVI    ACACNTL,ACACLRET   LID SUPPLIED, LIMIT RETURN           00195\n         L      R1,=X'FFFFFFFF'        SUPERCALL                        00196\n         ST     R1,ACAUCB                                               00197\n         LA     R1,@DYNMSG             RETURNED MESSAGE POINTER         00198\n         ST     R1,ACAMSG                                               00199\n         MVI    ACASLID,X'00'           CLEAR LIK(LID) LID              00200\n         MVC    ACASLID+1(7),ACASLID                                    00201\n         L      R1,REQFLDA              SAY FIELDS TO ASK FOR           00202\n         ST     R1,ACAFLDB                                              00203\n         L      R1,=F'1'                ONLY 1 IN THIS CASE             00204\n         ST     R1,ACAFLDC                                              00205\n         LA     R1,@DYNACAR             ACARE FIELD                     00206\n         ST     R1,ACARETB                                              00207\n         L      R1,=F'4096'             LENGTH OF ACARE                 00208\n         ST     R1,ACARETL                                              00209\n         VDEFINE VARLST=((LID,SPFLID)),FORMAT=CHAR,LEN=8                00210\n         VGET   NAMES=(LID),ASIS                                        00211\n         LA     R1,SPFLID                                               00212\n         MVC    ACALID(8),0(R1)                                         00213\n         OC     ACALID(8),=X'4040404040404040'                          00214\n         RWHOLE AUTHON                  GET AUTHORIZED                  00215\n         MODESET MODE=SUP               GET SUPERVISOR                  00216\n         ACFSVC @DYNACAL,TYPE=A,CVT=FIND,NONE=ACFNAV                    00217\n         LR     R5,R15                  ARE WE COOL?                    00218\n         B      PROBMODE               YES, RESUME PROB STATE           00219\nACFNAV   L      R5,=F'4096'              NO, SET BOZO RETURN CODE       00220\nPROBMODE MODESET MODE=PROB            CLEAR SUPERVISOR STATE            00221\n         RWHOLE  AUTHOFF                UNAUTHORIZE                     00222\n         ESTAE  0                       UNESATE                         00223\n         LTR    R5,R5                   ARE WE OK?                      00224\n         BZ     RC0                     YES, EXIT                       00225\nRC4      LA     R15,4                  SET RC4                          00226\n         B      EXITUID                                                 00227\nRC0      LA     R15,0                  SET RC0                          00228\n         LA     R1,@DYNACAR                                             00229\n         USING  ACASMAP,R1                                              00230\n         VDEFINE VARLST=((UIDSTR,ACASUID)),FORMAT=CHAR,LEN=22           00231\n         VPUT   NAMES=(UIDSTR),ASIS                                     00232\n         B      EXITUID                                                 00233\nRC16     LA     R15,16                 SET RC16                         00234\n         B      EXITUID                                                 00235\n         B      RC16                                                    00236\nEXITUID  LR     R1,R13                 POINT TO DSA                     00237\n         L      R13,4(,R13)             POINT TO RETN SAVE AREA         00238\n         ST     R15,16(,R13)             SAVE RETN CODE                 00239\n         FREEMAIN RU,LV=@DYNLEN,A=(1)     FREE DSA                      00240\n         RETURN (14,12)                BACK TO THE FUTURE.....          00241\nVDEFINE  DC     CL8'VDEFINE'                                            00242\nVCOPY    DC     CL8'VCOPY'                                              00243\nVGET     DC     CL8'VGET'                                               00244\nVPUT     DC     CL8'VPUT'                                               00245\nESTAPLST EQU    *                                                       00246\n         DC     A(RC16)                ADDRESS OF RC16 FOR ESATE        00247\nREQFLDA  DS     0F                                                      00248\n         DC     AL4(REQFLD1)           ACFSVC PLIST                     00249\nREQFLDS  DS     0F                                                      00250\nREQFLD1  DC     CL8'UID'               WE WANT THE UID FIELD            00251\n@DYNWORK DSECT                                                          00252\n@DYNSTRT DS     18F                                                     00253\nSPFLID   DS     CL8                                                     00254\n@ISPFPLS DS     0D                                                      00255\n@ISPFSVC DS     AL4                                                     00256\n@ISPFP1  DS     AL4                                                     00257\n@ISPFP2  DS     AL4                                                     00258\n@ISPFP3  DS     AL4                                                     00259\n@ISPFP4  DS     AL4                                                     00260\n@DYNACAL EQU    *                                                       00261\n         ORG    *+ACALTLN                                               00262\n@DYNMSG  DS     CL128                                                   00263\n@DYNACAR EQU    *                                                       00264\n         ORG    *+4096                                                  00265\n@DYNLEN  EQU    *-@DYNSTRT                                              00266\n         ACALT  DSECT=YES                                               00267\nACALTLN  EQU    *-ACAFCN                                                00268\n         ACCVT                                                          00269\n         PRINT  GEN                                                     00270\n         ACASMAP                                                        00271\n         REGEQU                                                         00272\n         END                                                            00273\nUIDESTAE CSECT                     THE PURPOSE OF THIS ESTAE            00274\n         PRINT NOGEN                IS TO ENSURE THAT THERE IS NO       00275\n         LR    R3,R0                 WAY TO ABEND BACK TO CALLER        00276\n         LR    R4,R15                  WHILE IN SUPV MODE               00277\n         USING UIDESTAE,R4                                              00278\n         LA    R5,ESVT                                                  00279\n         L     R5,0(R5,R3)          LOAD CORRECT HANDLER ADDRESS        00280\n         BR    R5                      MAKE VECTOR BRANCH               00281\nESVT     DS    0F                                                       00282\n         DC    AL4(ESEC0)                                               00283\n         DC    AL4(ESEC4)                                               00284\n         DC    AL4(ESEC8)                                               00285\n         DC    AL4(ESEC12)            NO SDWA ENTRY                     00286\n         DC    AL4(ESEC16)                                              00287\nESEC12   EQU   *                                                        00288\n         L     R0,0(,R2)             POINT TO RC16 IN ACFUID            00289\n         LA    R15,4                 INDICATE RETRY DESIRED             00290\n         BR    R14                                                      00291\nESEC0    EQU   *                   THE NEXT 4 ENTRIES ARE               00292\nESEC4    EQU   *                   TAKEN WHEN AN SDWA IS PRESENT        00293\nESEC8    EQU   *                                                        00294\nESEC16   EQU   *                                                        00295\n         USING SDWA,R1                                                  00296\n         TM    SDWAMWPA,SDWASPVA                                        00297\n         BZ    FINSHIT                                                  00298\n         MODESET MODE=PROB                                              00299\n         RWHOLE AUTHOFF                                                 00300\nFINSHIT  L     R3,SDWAPARM          POINT TO RC16 IN ACFUID             00301\n         L     R3,0(,R3)                                                00302\n         SETRP WKAREA=(1),RC=4,RETADDR=(R3),DUMP=NO,                   X00303\n               RETREGS=YES,FRESDWA=YES                                  00304\n         BR    R14                                                      00305\n         IHASDWA                                                        00306\n         REGEQU                                                         00307\n         END                                                            00308\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLIP": {"ttr": 773, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET CLIPV3     AT LEVEL 003 AS OF 09/20/85\n* MODIFY TO USE IOSVSUCB ROUTINE                                        00001\n*          DATA SET CLIP       AT LEVEL 004 AS OF 01/26/83              00002\nCLIP     TITLE 'CLIP - RELABEL A DISK PACK'                             00003\nR0       EQU   0                                                        00004\nR1       EQU   1                                                        00005\nR2       EQU   2                                                        00006\nR3       EQU   3                                                        00007\nR4       EQU   4                                                        00008\nR5       EQU   5                                                        00009\nR6       EQU   6                                                        00010\nR7       EQU   7                                                        00011\nR8       EQU   8                                                        00012\nR9       EQU   9                                                        00013\nR10      EQU   10                                                       00014\nR11      EQU   11                                                       00015\nR12      EQU   12                                                       00016\nR13      EQU   13                                                       00017\nR14      EQU   14                                                       00018\nR15      EQU   15                                                       00019\n*********************************************************************** 00020\n*                                                                     * 00021\n*        THIS PROGRAM WILL RELABEL ANY OFFLINE DISK PACK. THE PROGRAM * 00022\n*        IS USED AS A STARTED TASK AND INTERACTION IS DONE THROUGH    * 00023\n*        WTO AND WTOR. ANY NUMBER OF PACKS CAN BE RELABELED OR        * 00024\n*        INSPECTED IN ONE EXECUTION OF THIS PROGRAM.                  * 00025\n*                                                                     * 00026\n*                                                                     * 00027\n*        LINKEDIT ATTRIBUTES: AC=1                                    * 00028\n*                                                                     * 00029\n*        JCL REQUIRED:                                                * 00030\n*                                                                     * 00031\n*        //CLIP     EXEC PGM=CLIP,DPRTY=10                            * 00032\n*        //STEPLIB  DD  <TO A AUTHORIZED LIBRARY, OPTIONAL>           * 00033\n*        //SYSPRINT DD SYSOUT=K <OUTPUT FORM ICKDSF>                  * 00034\n*        //SYSIN    DD DSN=&&CLIP,UNIT=SYSDA,SPACE=(TRK,(1)),         * 00035\n*        //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=80)             * 00036\n*                                                                     * 00037\n*        WRITTEN BY                                                   * 00038\n*                                                                     * 00039\n*             KENNETH RASMUSSEN                                       * 00040\n*             ROCKWELL INTERNATIONAL                                  * 00041\n*             P O BOX 2515  041/SH28                                  * 00042\n*             SEAL BEACH, CA. 90740                                   * 00043\n*             (213) 594-2540                                          * 00044\n*                                                                     * 00045\n*         MODIFIED BY:                                                * 00046\n*                                                                     * 00047\n*             TO ELIMINATE UNEEDED GETMAIN AND FREEMAIN               * 00048\n*             AND FOR DOWNWARD COMPATABILITY BETWEEN                  * 00049\n*             A 370 AND XA SYSTEM.                                    * 00050\n*                                                                     * 00051\n*             DEAN MCCOY   WARNER BROTHERS                            * 00052\n*             TO USE PROGRAM PRODUCT DSF                              * 00053\n*             AND OPTIONALY INSPECT A VOLUME                          * 00054\n*             DEFAULTING TO OPTIONS:                                  * 00055\n*              ALL TRACKS NOASSIGN NOCHECK NOVERFY                    * 00056\n*                                                                     * 00057\n*             9/20/85 CORRECT UCBSCAN PARMLIST FOR                    * 00058**3\n*             MULTIPLE PASSES,  DELETED PRE-SP UCBSCAN CODE.          * 00059**3\n*                                                                     * 00060**3\n*                                                                     * 00061**3\n*********************************************************************** 00062\n         EJECT                                                          00063\n         SPLEVEL SET=1 THIS IS FOR DOWNWARD COMPATABILITY WITH 370 ONLY 00064\nCLIP     CSECT                                                          00065\n         STM   R14,R12,12(R13)        SAVE OUR REGS                     00066\n         USING CLIP,R12               SET UP BASE REGISTURE             00067\n         LR    R12,R15                NOW LOAD IT                       00068\n         ST    R13,SAVEAREA+4         LINK SAVEAREAS                    00069\n         LA    R13,SAVEAREA           NOW LOAD IT                       00070\n*        REGEQU                                                         00071\nMAINLOOP OPEN  (SYSIN,(OUTPUT))         CREATE THE CONTROL CARD         00072\nASKAGAIN XC    CLIPECB,CLIPECB          RESET ECB WORD                  00073\n         MVC   CLIPRPLY(10),BLANKS      RESET REPLY AREA                00074\n         WTOR  'CLIP - REPLY UUU,VVVVVV OR UUU,INSPCT OR END',         C00075\n               CLIPRPLY,10,CLIPECB,ROUTCDE=2                            00076\n         WAIT  ECB=CLIPECB                                              00077\n         OC    CLIPRPLY(10),BLANKS      SET REPLY TO CAPS               00078\n         CLC   CLIPRPLY(3),=CL3'END'    REPLY = END ?                   00079\n         BE    ENDPGM                   IF YES, THEN BRANCH             00080\n         EJECT                                                          00081\n*********************************************************************** 00082\n*                                                                     * 00083\n*        CHECK REPLY AND VALIDATE DEVICE ADDRESS                      * 00084\n*                                                                     * 00085\n*********************************************************************** 00086\n         CLC   =C'INSPCT',CLIPRPLY+3    REPLY = INSPECT                 00087\n         BE    CHKRPLY2                   THEN GO ON                    00088\n         CLI   CLIPRPLY+3,C','          CHECK MSG FORMAT                00089\n         BE    CHKRPLY2                 IF OK, THEN BRANCH              00090\n         CLI   CLIPRPLY+4,C' '          CHECK MSG FORMAT                00091\n         BNE   CHKRPLY2                 IF OK, THEN BRANCH              00092\nCHKRPLY1 LA    R1,WTO01                 INVALID MSG FORMAT              00093\n         SVC   35                                                       00094\n         B     ASKAGAIN                                                 00095\n         USING CVTMAP,R2                                                00096\nCHKRPLY2 L     R2,CVTPTR                GET CVT POINTER                 00097\n         OI    PARMUCB,X'80'           FLAG AS END OF PARMS             00098\n*        L     R2,CVTILK2(,R2)          GET TABLE POINTER               00099\n         USING UCB,R4                                                   00100\n         LA    R3,CLIPRPLY              POINT AT SPECIFIED DEVICE       00101\n*        SR    R4,R4                                                    00102\n         MVI   WORKAREA,X'00'           CLEAR UCBSCAN WORK AREA         00103**3\n         MVC   WORKAREA+1(L'WORKAREA-1),WORKAREA                        00104**3\nUCBSCAN  DS    0H                                                       00105\n         LA    R1,PARMLIST                                              00106\n         L     R15,CVTUCBSC            GET ADDRESS OF ROUTINE           00107\n         BALR  R14,R15                 CALL IT                          00108\n         LTR   R15,R15                 Q. FOUND A UCB                   00109\n         BNZ   UCBERROR                A. NOT ZERO - YES                00110\n         L     R4,ADDRUCB              POINT TO FOUND UCB               00111\n         CLC   UCBNAME(3),0(R3)         MATCH ON UCB ?                  00112\n         BE    CHKDEV1                  BRANCH IF FOUND                 00113\nUCBLOOP  DS    0H                                                       00114\n         B     UCBSCAN                  LOOP THRU TABLE                 00115\nUCBERROR MVC   WTO02+11(3),0(R3)        INSERT BAD UCB ADDRESS          00116\n         LA    R1,WTO02                                                 00117\n         SVC   35                                                       00118\n         B     ASKAGAIN                                                 00119\nCHKDEV1  CLI   UCBTBYT3,UCB3DACC        DIRECT ACCESS DEVICE ?          00120\n         BE    CHKDEV2                  BRANCH IF YES                   00121\n         MVC   WTO03+11(3),0(R3)        INSERT UCB ADDRESS              00122\n         LA    R1,WTO03                                                 00123\n         SVC   35                                                       00124\n         B     ASKAGAIN                                                 00125\nCHKDEV2  TM    UCBSTAT,UCBONLI          DEVICE OFFLINE ?                00126\n         BO    CHKDEV3                  IF ONLINE, THEN BRANCH          00127\n         TM    UCBSTAT,UCBCHGS          DEVICE CHANGING STATUS ?        00128\n         BNO   DASDLABL                 IF NOT, THEN BRANCH             00129\nCHKDEV3  TM    UCBSTAT,UCBPRES          DEVICE PERM RESIDENT ?          00130\n         BNO   CHKDEV4                  IF NOT, THEN BRANCH             00131\n         MVC   WTO04+11(3),0(R3)        INSERT UCB ADDRESS              00132\n         LA    R1,WTO04                                                 00133\n         SVC   35                                                       00134\n         B     ASKAGAIN                                                 00135\nCHKDEV4  MVC   WTO05+11(3),0(R3)        INSERT UCB ADDRESS              00136\n         LA    R1,WTO05                 DEVICE NOT OFFLINE              00137\n         SVC   35                                                       00138\n         B     ASKAGAIN                                                 00139\n         DROP  R4                                                       00140\n         EJECT                                                          00141\n*********************************************************************** 00142\n*                                                                     * 00143\n*        INVOKE DSF TO RELABEL VOLUME                                 * 00144\n*                                                                     * 00145\n*********************************************************************** 00146\nDASDLABL CLC   =C'INSPCT',CLIPRPLY+3    REPLY = INSPECT                 00147**2\n         BE    INSPECT                   IF SO THEN INSPECT             00148\n         MVC   CLIPUNIT(3),0(R3)        SETUP FOR ICKDSF                00149\n         MVC   CLIPVOL(6),CLIPRPLY+4     UNIT AND VOLUME                00150\n         PUT   SYSIN,INPUT                                              00151\n         B     CLOSEIT                                                  00152\nINSPECT  MVC   CLIPUNI2(3),0(R3)                                        00153\n         PUT   SYSIN,INPUT2                                             00154\nCLOSEIT  CLOSE SYSIN                                                    00155\n         LINK  EP=ICKDSF,PARAM=(CLIPLIST),VL=1                          00156\n         C     R15,RETCODE              CHK HIGHEST RETURN CODE         00157\n         BNH   DASDRET                                                  00158\n         ST    R15,RETCODE              SAVE RETURN CODE                00159\nDASDRET  LTR   R5,R15                   REURN CODE = 0 ?                00160\n         BNZ   DASDRERR                 IF NOT, THEN BRANCH             00161\n         CLC   =C'INSPCT',CLIPRPLY+3    REPLY = INSPECT                 00162**2\n         BE    INSPEND                                                  00163\n         MVC   WTO06+11(3),CLIPRPLY     EDIT UNIT                       00164\n         MVC   WTO06+36(6),CLIPRPLY+4    AND VOLUME                     00165\n         LA    R1,WTO06                                                 00166\n         SVC   35                                                       00167\n         B     MAINLOOP                 LOOP AGAIN                      00168\nINSPEND  MVC   WTO09+11(3),CLIPRPLY     EDIT UNIT                       00169\n         LA    R1,WTO09                                                 00170\n         SVC   35                                                       00171\n         B     MAINLOOP                 LOOP AGAIN                      00172\nDASDRERR MVC   WTO06+11(3),CLIPRPLY     ERROR IN ICKDSF EXECUTION       00173\n         LA    R1,WTO07                                                 00174\n         SVC   35                                                       00175\n         B     MAINLOOP                 LOOP AGAIN                      00176\nENDPGM   LA    R1,WTO08                                                 00177\n         SVC   35                                                       00178\n         L     R15,RETCODE              PICK UP RETURN CODE             00179\n         L     R13,SAVEAREA+4           RESTORE CALLERS STUFF           00180\n         RETURN (14,12)                 NOW RETURN                      00181\n*********************************************************************** 00182\n*                                                                     * 00183\n*        WORKAREA AND CONSTANTS                                       * 00184\n*                                                                     * 00185\n*********************************************************************** 00186\n         DS    0D                      ALIGN                            00187\nWORKAREA DS    CL100                                                    00188\nSAVEAREA DC    18F'0'                   SAVE AREA FOR ICKDSF            00189\nCLIPECB  DC    F'0'                     WTOR ECB                        00190\nRETCODE  DC    F'0'                     ICKDSF RETURN CODE (HIGHEST)    00191\nADDRUCB  DC    A(0)                    ADDRESS OF RETURNED UCB          00192\nPARMLIST EQU   PARMWA                                                   00193\nPARMWA   DC    A(WORKAREA)                                              00194\nPARMDEVT DC    A(DEVCLASS)                                              00195\nPARMUCB  DC    A(ADDRUCB)                                               00196\nDEVCLASS DC    X'00'                   LOOK AT THEM ALL                 00197\nTABLEEND DC    X'0000FFFF'              FOR UCB TABLE END CHECK         00198\nCLIPLIST DS    0H                       ICKDSF PARAMETERS               00199\n         DC    H'0'                                                     00200\nCLIPRPLY DC    10C' '                   WTOR REPLY AREA                 00201\nBLANKS   DC    10C' '                                                   00202\nINPUT    DC    C' '                     SYSIN RECORD FOR ICKDSF         00203\n         DC    C'REFORMAT UNIT('                                        00204\nCLIPUNIT DC    CL3' '                                                   00205\n         DC    C') VOLID('                                              00206\nCLIPVOL  DC    CL6' '                                                   00207\n         DC    C') NVFY'                                                00208\n         DC    (80-(*-INPUT))C' '                                       00209\nINPUT2   DC    C' INSPECT UNIT('        SYSIN RECORD FOR ICKDSF         00210\nCLIPUNI2 DC    CL3' '                                                   00211\n         DC    C') ALLTRK NASGN NCHK NVFY'                              00212\n         DC    (80-(*-INPUT2))C' '                                      00213\n*VTUCBSC EQU   X'434'                   ADDRESS OF UCB SCAN ROUTINE     00214\n*VTPTR   EQU   X'10'                    ADDRESS OF CVT POINTER          00215\n         EJECT                                                          00216\n*********************************************************************** 00217\n*                                                                     * 00218\n*        WRITE TO OPERATOR'S                                          * 00219\n*                                                                     * 00220\n*********************************************************************** 00221\nWTO01  WTO  'CLIP - INVALID REPLY',ROUTCDE=2,MF=L                       00222\nWTO02  WTO  'CLIP - XXX IS AN INVALID DEVICE ADDRESS',ROUTCDE=2,MF=L    00223\nWTO03  WTO  'CLIP - XXX IS NOT A DIRECT ACCESS DEVICE',ROUTCDE=2,MF=L   00224\nWTO04  WTO  'CLIP - XXX IS A PERM RESIDENT VOLUME',ROUTCDE=2,MF=L       00225\nWTO05  WTO  'CLIP - XXX IS NOT OFFLINE',ROUTCDE=2,MF=L                  00226\nWTO06  WTO  'CLIP - XXX RELABELED TO VOL SER YYYYYY',ROUTCDE=2,MF=L     00227\nWTO07  WTO  'CLIP - XXX ICKDSF ERROR - CHECK SYSPRINT',ROUTCDE=2,MF=L   00228\nWTO08  WTO  'CLIP - RUN ENDED',ROUTCDE=2,MF=L                           00229\nWTO09  WTO  'CLIP - XXX INSPECTED SUCCESSFULLY - CHECK SYSPRINT',      C00230\n               ROUTCDE=2,MF=L                                           00231\n         EJECT                                                          00232\nSYSIN    DCB   DDNAME=SYSIN,BUFNO=1,DSORG=PS,MACRF=PM                   00233\n         LTORG                                                          00234\n         EJECT                                                          00235\nTIOT     DSECT                                                          00236\n         IEFTIOT1                                                       00237\n         EJECT                                                          00238\nUCB      DSECT                                                          00239\n         IEFUCBOB                                                       00240\n         PUSH  PRINT                                                    00241\n         PRINT OFF                                                      00242\n         CVT   DSECT=YES                                                00243\n         POP   PRINT                                                    00244\n         END CLIP                                                       00245\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DYN#C1": {"ttr": 778, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 DFLTMSG(DYNM001) LIB() LIB2(XASP.DYNA.SAMPLIB)            +\n       VDYNPRJ() VDYNLIB() VDYNTYP() VDYNIND() DEBUG\n\nCONTROL NOLIST NOFLUSH NOMSG NOPROMPT\nIF &DEBUG NE THEN CONTROL LIST NOFLUSH MSG CONLIST SYMLIST PROMPT\n\n FREE FI(DYNAPRNT DYNAUDIT DYNALIB DYNALIST SAMPLIB)\n FREE FI(DYNAWORK DYNWHELP DYNAHELP DYNAROUT DYNWROUT)\n FREE FI(CTRANS WEBSTER THESARUS PERSONAL)\n FREE FI(LMODLIB)\n\nSET &PERSONAL = &SYSUID..DYNA.PERSONAL.DYNWLEX\nWHATIF DATASET('&PERSONAL') CATALOGED\nSET &CC = &LASTCC\n IF &CC \u00ac= 0 THEN +\n   DO\n    CONTROL MSG\n    ALLOC DA('&PERSONAL') FI(PERSONAL) +\n          LIKE('XASP.DYNA.PERSONAL.DYNWLEX') UNIT(TSOTSO)\n   END\n\nSET &DYNALIB = &SYSUID..DYNA.DATA\nWHATIF DATASET('&DYNALIB') CATALOGED\nSET &CC = &LASTCC\n  IF &CC \u00ac= 0 THEN +\n    DO\n     CONTROL MSG\n     ALLOC DA('&DYNALIB') FI(DYNALIB)  LIKE('XASP.DYNA.SAMPLIB') +\n           SP(1,1) CYLINDERS DIR(10) UNIT(TSOTSO)\n    END\n\nISPEXEC VGET (VDYNPRJ VDYNLIB VDYNTYP VDYNPRF) PROFILE\n\nENTER: +\n SET &MSG = &DFLTMSG\n\n ISPEXEC DISPLAY PANEL(DYN#P1) MSG(&MSG)\n\n SET &LCC = &LASTCC\n\n IF &LCC EQ 8 THEN GOTO XIT\n\n ISPEXEC CONTROL DISPLAY LINE\n\n IF &STR(&VDYNIND) NE THEN +\n        DO\n        SET &LIB = &STR(&VDYNIND.)\n        END\n IF &STR(&VDYNPRJ.&VDYNLIB.&VDYNTYP) NE THEN +\n        DO\n        SET &LIB EQ &STR('&VDYNPRJ..&VDYNLIB..&VDYNTYP.')\n        END\n\n ALLOC F(DYNALIB) DA(&LIB.) SHR REUSE\n\n IF &LASTCC NE 0 THEN +\n    DO\n    SET &MSG EQ DYNM003\n    GOTO REENTER\n    END\n\n ALLOC F(DYNAROUT) DA('XASP.DYNA.ROUTE(DYNAROUT)') SHR REUSE\n ALLOC F(DYNWROUT) DA('XASP.DYNA.ROUTE(DYNWROUT)') SHR REUSE\n ALLOC FI(SAMPLIB) DA('&LIB2.') SHR REUSE\n ALLOC FI(DYNAWORK) SPACE(1 1) TRACK REUSE\n ALLOC FI(DYNWHELP) DA('XASP.DYNA.DYNWHELP') SHR REUSE\n ALLOC FI(DYNAHELP) DA('XASP.DYNA.DYNAHELP') SHR REUSE\n ALLOC FI(CTRANS) DA('XASP.DYNA.SASC.LINKLIB') SHR REUSE\n ALLOC FI(WEBSTER) DA('XASP.DYNA.WEBSTER.DYNWLEX') SHR REUSE\n ALLOC FI(THESARUS) DA('XASP.DYNA.THESARUS.DYNWTHES') SHR REUSE\n ALLOC FI(PERSONAL) DA(DYNA.PERSONAL.DYNWLEX) SHR REUSE\n ALLOC FI(LMODLIB) DA('XASP.DYNA.LOAD') SHR REUSE\n\n CONTROL NOFLUSH MSG\n\n IF &VDYNPRF EQ Y THEN +\n          DO\n   ISPEXEC SELECT PGM(SWTSO) +\n                  PARM('DYNASTRT,/EX PROFILE I TIME=0;/EX *')\n          END\n          ELSE ISPEXEC SELECT PGM(DYNASTRT)\n\n  ISPEXEC LOG MSG(DYNM004)\n  ISPEXEC CONTROL DISPLAY REFRESH\n\n  IF &DEBUG = DEBUG THEN CONTROL PROMPT LIST CONLIST SYMLIST MSG\n     ELSE CONTROL MAIN MSG\n\n GOTO ENTER\n\nXIT: +\n ISPEXEC VPUT (VDYNPRJ VDYNLIB VDYNTYP VDYNPRF) PROFILE\n\n IF &DEBUG NE DEBUG THEN CONTROL MAIN NOMSG\n\n FREE FI(DYNAPRNT DYNAUDIT DYNALIB DYNALIST SAMPLIB)\n FREE FI(DYNAWORK DYNWHELP DYNAHELP DYNAROUT DYNWROUT)\n FREE FI(CTRANS WEBSTER THESARUS PERSONAL)\n FREE FI(LMODLIB)\n EXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DYN#P1": {"ttr": 781, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------------  DYNAPLAN -  DYNAWORD  -------------------------------\n% COMMAND%===>_ZCMD                                                            +\n+\n+ ISPF DYNASOFT LIBRARY:\n+    PROJECT%===>_Z       +\n+    GROUP  %===>_Z       +\n+    TYPE   %===>_Z       +\n+\n+ OTHER DYNASOFT LIBRARY:                                                      +\n+    DATA SET NAME %===>_Z                                                     +\n+                                                                              +\n+  INITIAL PROFILE %===>_Z+               (exec initial profile%Y+or%N+)       +\n+                                                                              +\n+\n+\n+ TO REVIEW VERSION 3.2 NEW FEATURES, USE \"/HELP NEWS\" CMD\n+ SAMPLE WORKSHEET LIBRARY, '&LIB2', IS ACCESSED VIA DDNAME SAMPLIB\n+\n)INIT\n  .ZVARS = 'VDYNPRJ VDYNLIB VDYNTYP VDYNIND VDYNPRF'\n  .HELP = DYN#T1\n  IF (&VDYNPRF = &Z)\n     &VDYNPRF = 'N'\n  IF (&VDYNPRj = &Z)\n     &VDYNPRJ = &USERID\n  IF (&VDYNLIB = &Z)\n     &VDYNLIB = 'DYNA'\n  IF (&VDYNTYP = &Z)\n     &VDYNTYP = 'DATA'\n)PROC\n  VER (&VDYNIND,DSNAME)\n  VER (&VDYNPRJ,DSNAME)\n  VER (&VDYNLIB,DSNAME)\n  VER (&VDYNTYP,DSNAME)\n  VER (&VDYNPRF,LIST,Y,N)\n  IF (&VDYNIND = ' ')\n     VER (&VDYNPRJ,NONBLANK MSG=DYNM016)\n     VER (&VDYNLIB,NONBLANK MSG=DYNM016)\n     VER (&VDYNTYP,NONBLANK MSG=DYNM016)\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DYN#T1": {"ttr": 783, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL --------------- DYNAPLAN  -  DYNAWORD ------------------------TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%\n%                     -----------------------------------\n                      |      DYNAPLAN - DYNAWORD        |\n                      -----------------------------------\n+\n  %DYNAPLAN+is a mainframe spread sheet system.\n\n  %DYNAWORD+is a mainframe word processing system .\n\n The following topics are presented in sequence, or may be selected by number:\n  %0+- General introduction\n  %1+- DYNAPLAN - DYNAWORD datasets\n  %2+- User profiles\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                0,DYN#TA00\n                1,DYN#TB00\n                2,DYN#TC00\n                )\n   &ZUP = ISR00003\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DYNASEND": {"ttr": 1025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//YARF010N JOB (SD,A,SPM000,ARF),'COPY IT',\n// NOTIFY=YARF,MSGCLASS=T,CLASS=M,TYPRUN=HOLD\n//*\n//* YARF.X.PANELS - CONTAINS PANELS, CLIST, PGM SOURCE ETC.\n//*\n//* YARF.DYNA.LOTUS - DYNA PDS CONTAINS MEMBER BUD88. THIS IS THE\n//*                   VERY SIMPLE SPREAD THAT AFTER LOADING INTO\n//*                   DYNAPLAN HAS CELL ERRORS. DYNA THINKS THAT\n//*                   SOME OF THE EMPTY CELLS ARE TEXT NOT DATA.\n//*                   THIS LOTUS SPREAD WAS UPLOADED \"AS IS\" INTO\n//*                   YARF.DYNA.LOTUS AS MEMBER BUD88 USING THE\n//*                   IBM TSO FILE TRANSFER PGM. THE ORGININAL LOTUS\n//*                   SPREAD IS ON THE INCLOSED FLOPPY.\n//*\n/*JOBPARM  ROOM=1318\n//S1        EXEC PGM=IEBCOPY\n//SYSPRINT  DD SYSOUT=*\n//I1  DD DISP=SHR,DSN=YARF.X.PANELS\n//O1  DD DSN=YARF.X.PANELS,UNIT=T,VOL=SER=123456,\n// LABEL=(,SL,EXPDT=98000),DISP=(,PASS)\n//SYSUT3    DD UNIT=VIO,SPACE=(CYL,(20))\n//SYSUT4    DD UNIT=VIO,SPACE=(CYL,(20))\n//SYSIN     DD *\n   COPY  INDD=((I1,R)),OUTDD=O1\n//S2        EXEC PGM=IEBCOPY\n//SYSPRINT  DD SYSOUT=*\n//I1  DD DISP=SHR,DSN=YARF.DYNA.LOTUS\n//O1  DD DSN=YARF.DYNA.LOTUS,UNIT=T,VOL=SER=123456,\n// LABEL=(2,SL,EXPDT=98000),DISP=(,PASS)\n//SYSUT3    DD UNIT=VIO,SPACE=(CYL,(20))\n//SYSUT4    DD UNIT=VIO,SPACE=(CYL,(20))\n//SYSIN     DD *\n   COPY  INDD=((I1,R)),OUTDD=O1\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DYNM00": {"ttr": 1027, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DYNM001     '  ENTER PARAMETERS  '\n'SPECIFY OPTIONAL PARAMETERS, HIT ENTER FOR DYNACALC, OR END KEY.'\n\nDYNM002                                .ALARM = YES\n'SPECIFY IF /PRINT OUTPUT DIRECTED TO DATASET OR TO ''SYSOUT''.'\n\nDYNM003     '&DDN ALLOCATE ERROR'   .ALARM = YES\n'&DDN. NOT ALLOCATED TO &LIB., PLEASE RESPECIFY.'\n\nDYNM004     '              '         .ALARM = YES\n'                                                             '\n\nDYNM005     ' ENTER Y OR N '         .ALARM = YES\n'SPECIFY EXECUTION OF USER PROFILE. PROFILE MUST EXIST ALREADY'\n\nDYNM006     'SPECIFY DYNALIB DATASET'  .ALARM = YES\n'DYNALIB DATASET MUST BE SPECIFIED.'\n\nDYNM007     'SPECIFY DYNACALC VERSION' .ALARM = YES\n'SPECIFY ''2.4'' OR BLANK FOR PRODUCTION (DEFAULT) VERSION (ONLY 2.4 NOW).'\n\nDYNM008     'SPECIFY GRAPHICS UTILITY' .ALARM = YES\n'SPECIFY IF YOU WANT TO USE THE ICU (GRAPHICS) INTERFACE. (Y, YES, N, OR NO).'\n\nDYNM009     'SPECIFY GRAPHICS UTILITY' .ALARM = YES\n'SHOULD AN AUTOMATIC \"/EX PROFILE\" BE EXECUTED AT STARTUP? (Y, YES, N, OR NO).'\n\nDYNM001A    'SPECIFY FOR HELD OUTPUT' .ALARM = YES\n'''HELD'' ALLOWS PRINT OUTPUT TO BE VIEWED, DELETED VIA IOF.(Y, YES, N, OR NO).'\n\nDYNM001B    'SPECIFY OPTIONAL DATASET' .ALARM = YES\n'SPECIFY AN OPTIONAL WORKSHEET LIBRARY (OR EXTERNAL FILE) AND IT''S DDNAME.'\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GDGMOD": {"ttr": 1029, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//XKZS0015  JOB (SD,A,SPM000,DZK),WB00015,\n// NOTIFY=XKZS,CLASS=M,MSGCLASS=T,COND=(1,LT)\n/*JOBPARM R=1318,K=60\n//*--->>> MODIFIED FOR XA AND SMPE . THIS IS THE GDG MOD.\n//SMPE    EXEC PGM=GIMSMP,REGION=4096K,\n//             COND=(0,NE)\n//STEPCAT  DD  DSN=ICF.VSMPE81.UCAT,DISP=SHR\n//SMPCSI   DD  DISP=SHR,DSN=SMPE.WBIPO.GLOBAL.CSI\n//SMPPTS   DD  DISP=SHR,DSN=SMPE.WBIPO.SMPPTS,UNIT=D,VOL=SER=IPOCAT\n//SMPOUT   DD  SYSOUT=*\n//SMPRPT   DD  SYSOUT=*\n//SMPLOG   DD  DUMMY\n//SMPLOGA  DD  DUMMY\n//SMPLIST  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SMPCNTL  DD *\n SET BDY(GLOBAL) .\n   REJECT  S(LC00015) BYPASS(APPCHK) .\n   RESETRC .\n   RECEIVE S(LC00015) SYSMODS .\n SET BDY(IPOTEST) .\n   APPLY S(LC00015) REDO BYPASS(HOLDUSER) .\n//SMPPTFIN DD *\n++USERMOD(LC00015)\n  /* THE PURPOSE OF THIS MODIFICATION IS TO ALLOW RESTART OF JOBS\n     THAT USE GDG AND REFER TO THEM AS +1 IN LATER STEPS.\n     WITHOUT THIS MOD JOBS RESTARTED WOULD HAVE TO HAVE ALL\n     REFERENCRES TO +1 CHANGED TO 0.  THIS IS AN ERROR PRONE AND\n     TIME CONSUMING TASK.  THEREFORE THE FOLLOWING MODIFICATION.....\n\n     FUNCTION:\n     IF THE GDG IS NOT FOUND IN THE GDGNT (GDG NAME TABLE)\n        THEN IT HAS NOT BEEN PROCESSED IN THE 'JOB' BEFORE AND WE\n        NEED TO CHECK DISP.\n     IF DISP IS NEW\n        THEN DO NOTHING.\n     IF DISP IS NOT NEW\n        THEN CHECK RGN FOR +.\n     IF RGN IS NOT +\n        THEN DO NOTHING.\n     IF RGN IS +\n        THEN CHECK FOR EXACTLY +1.\n     IF NOT +1\n        THEN DO NOTHING.\n     IF +1\n        THEN SUBTRACT ONE FROM BASE LEVEL AND CONTINUE PROCESSING */.\n++VER(Z038) FMID(JBB2110) PRE(UZ66555) .\n++ZAP(IEFAB461) .\n EXPAND IEFAB461(128)\nNAME IEFAB461\nVER 0608 50A0,1040         ST    @01,HWGDGBSP(,@01)\nVER 089D 0000,D0                 DC    AL3(((@ENDDATD-@DATD+7)/8)*8)\n*\nREP 0608 47F0,C896               B     PATCH\nREP 089D 0000,D4                 DC    AL3(((@ENDDATD-@DATD+7+4)/8)*8)\n*\nREP 08B8 50A0,1040      PATCH    ST    @10,HWGDGBSP(,@01)\nREP 08BC 58A0,B054               L     @10,@PC00001+12\nREP 08C0 58A0,A000               L     @10,SIOTPTR(,@10)\nREP 08C4 9104,A03A               TM    SCTSNEW(@10),X'04'\nREP 08C8 4710,C5EA               BO    @RF00159\nREP 08CC 58A0,B058               L     @10,@PC00001+16\nREP 08D0 5860,A000               L     @06,0(,@10)\nREP 08D4 954E,602C               CLI   44(@06),C'+'\nREP 08D8 4770,C5EA               BNE   @RF00159\nREP 08DC 4160,6001      L1       LA    @06,1(,@06)\nREP 08E0 95F0,602C               CLI   44(@06),C'0'\nREP 08E4 4780,C8BA               BE    L1\nREP 08E8 95F1,602C               CLI   44(@06),C'1'\nREP 08EC 4770,C5EA               BNE   @RF00159\nREP 08F0 9540,602D               CLI   45(@06),C' '\nREP 08F4 4770,C5EA               BNE   @RF00159\nREP 08F8 58A0,1040               L     @10,HWGDGBSP(,@01)\nREP 08FC F223,B0D0,A000          PACK  @DATD+208(3),0(4,@10)\nREP 0902 FB20,B0D0,C8F4          SP    @DATD+208(3),PACKONE\nREP 0908 F332,A000,B0D0          UNPK  0(4,@10),@DATD+220(3)\nREP 090E 96F0,A003               OI    3(@10),X'F0'\nREP 0912 47F0,C5EA               B     @RF00159\nREP 0916 1C00           PACKONE  DC    PL1'1'\nIDRDATA LC00015\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEEMB846": {"ttr": 1032, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET IEEMB846   AT LEVEL 002 AS OF 05/03/88\n         TITLE 'IEEMB846 - TSO COMMAND TABLE '                          00001\n*********************************************************************** 00002\n*                                                                     * 00003\n* TITLE -- 'IEEMB846 - TSO COMMAND TABLE FOR ACCOUNTING'      @ZA42002* 00004\n*                                                                     * 00005\n* STATUS -- VERSION 1                                                 * 00006\n*                                                                     * 00007\n* FUNCTION/OPERATION -- THIS TABLE INCLUDES ALL THE COMMANDS          * 00008\n*    WHICH WILL BE COUNTED INTO THE SMF TYPE 32 RECORD. ALL OTHER     * 00009\n*    COMMANDS AND SUBCOMMANDS, INCLUDING ALIASES, WILL BE             * 00010\n*    COUNTED UNDER '***OTHER'.                                        * 00011\n*                                                                     * 00012\n*    THE IBM-SUPPLIED DEFAULT TABLE IS A SUBSET OF IBM        @ZA42002* 00013\n*    SUPPLIED TSO COMMANDS AND THEIR ALIASES. USERS CAN ADD   @ZA42002* 00014\n*    TO OR DELETE FROM THIS TABLE AS THEY WISH                @ZA42002* 00015\n*                                                                     * 00016\n*  NOTE: AT WARNER BROS. WE HAVE DELETED ALL THE IBM ENTERIES TO      * 00016\n*        REDUCE ACCOUNTING OVERHEAD. ONLY TSO CP'S AND CLISTS THAT    * 00016\n*        REQUIRE SPECIAL TRACKING OR BILLING PROCEDURES ARE RECORDED. * 00016\n*                                                                     * 00016\n*                                                                     * 00016\n* ENTRY POINTS --                                                     * 00017\n*                                                                     * 00018\n*         N/A                                                         * 00019\n*                                                                     * 00020\n* FORMAT -                                                            * 00021\n*          **********************************                         * 00022\n*          *                                *                         * 00023\n*    0     *   NUMBER OF COMMANDS IN TABLE  *                         * 00024\n*          *                                *                         * 00025\n*          **********************************                         * 00026\n*          *                                *                         * 00027\n*    4     *   RESERVED                     *                         * 00028\n*          *                                *                         * 00029\n*          **********************************                         * 00030\n*          *                                *                         * 00031\n*    8     *  COMMAND NAMES - EACH ENTRY    *                         * 00032\n*          *  IS EIGHT CHARACTERS IN        *                         * 00033\n*          *  LENGTH. NAMES MUST BE LEFT-   *                         * 00034\n*          *  JUSTIFIED AND BLANK FILLED    *                         * 00035\n*          *  IF THEY ARE LESS THAN EIGHT   *                         * 00036\n*          *  CHARACTERS                    *                         * 00037\n*          *                                *                         * 00038\n*          **********************************                         * 00039\n*                                                                     * 00040\n*                                                                     * 00041\n* CHANGE ACTIVITY = ZA42002                                           * 00042\n*                                                                     * 00043\n* A000000 - 999999                                            @G473PJW* 00044\n* C - 'OCONTINUE' INCORRECTLY SPELLED                         @ZA42002* 00045\n* A - ADD ADDITIONAL COMMANDS                                 @ZA42002* 00046\n*********************************************************************** 00047\n         SPACE                                                          00048\nIEEMB846 CSECT ,                                                        00049\nCOUNT    DC     AL4(NCMDS)              NUMBER OF COMMANDS              00050\nRSVD     DC     F'0'                                                    00051\nCOMMAND  DS     0F                                                      00052\n*********************************************************************** 00053\n*                                                                     * 00054\n*                                                                     * 00055\n*     TSO COMMANDS AND ALIASES                                        * 00056\n*                                                                     * 00057\n*                                                                     * 00058\n*                                                                     * 00059\n*********************************************************************** 00060\n*********************************************************************** 00061\n*                                                                     * 00062\n*                                                                     * 00063\n*     PROGRAM PRODUCT COMMANDS                                        * 00064\n*                                                                     * 00065\n*                                                                     * 00066\n*********************************************************************** 00067\n         DC    CL8'XPFSPF  '                                            00068\n         DC    CL8'XPFCHKAL'                                            00069\n         DC    CL8'XPF     '                                            00070\n         DC    CL8'XPFTSO  '                                            00071\n         DC    CL8'DYNASTRT'                                            00072**2\n         DC    CL8'DYNAPLAN'                                            00073**2\n         DC    CL8'DYNAFULL'                                            00074**2\n         DC    CL8'DYNA    '                                            00075**2\n*********************************************************************** 00076\n*                                                                     * 00077\n*    END OF COMMAND TABLE. THIS LINE MUST STAY HERE IN ORDER FOR      * 00078\n*    THE NUMBER OF COMMANDS TO BE SPECIFIED AUTOMATICALLY             * 00079\n*                                                                     * 00080\n*********************************************************************** 00081\nCMDEND   DS    0F          END OF COMMANDS. LINE MUST STAY HERE         00082\nNCMDS    EQU    (CMDEND-COMMAND)/8                                      00083\n         END                                                            00084\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEEPK860": {"ttr": 1035, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET IEEPK860V2 AT LEVEL 002 AS OF 06/10/87\n      PRINT ON,NODATA                                                   00001\nIEEPK860 CSECT                                                          00002\n         DC    A(KEY)                                                   00003\n         DC    XL10'0'                                                  00004\nKEY      DC    AL2(ENDPFK-IEEPK860)                                     00005\n         DC    H'0'                                                     00006\n         DC    FL1'1'                                                   00007\n         DC    X'A0'                                                    00008\n         DC    CL108'$D''_********'''                                   00009**2\n         DC    FL1'2'                                                   00010\n         DC    X'A0'                                                    00011\n         DC    CL108'$DMJ_XXX,''**********'''                           00012**2\n         DC    FL1'3'                                                   00013\n         DC    X'A0'                                                    00014\n         DC    CL108'$HJ_XXXX'                                          00015\n         DC    FL1'4'                                                   00016\n         DC    X'A0'                                                    00017\n         DC    CL108'$EJ_XXXX'                                          00018\n         DC    FL1'5'                                                   00019\n         DC    X'A0'                                                    00020\n         DC    CL108'$AJ_XXXX'                                          00021\n         DC    FL1'6'                                                   00022\n         DC    X'A0'                                                    00023\n         DC    CL108'$TJ_XXXX'                                          00024\n         DC    FL1'7'                                                   00025\n         DC    X'80'                                                    00026\n         DC    CL108'$DI'                                               00027\n         DC    FL1'8'                                                   00028\n         DC    X'80'                                                    00029\n         DC    CL108'D R,L'                                             00030\n         DC    FL1'9'                                                   00031\n         DC    X'A0'                                                    00032\n         DC    CL108'$DJ_XXXX'                                          00033\n         DC    FL1'10'                                                  00034\n         DC    X'A0'                                                    00035\n         DC    CL108'$DN,Q=XEQ_X'                                       00036\n         DC    FL1'11'                                                  00037\n         DC    X'A0'                                                    00038\n         DC    CL108'$LF,Q=_A'                                          00039\n         DC    FL1'12'                                                  00040\n         DC    X'A0'                                                    00041\n         DC    CL108'$RPRT,J=J_XXX,D=WBEAST'                            00042\n         DC    FL1'13'                                                  00043\n         DC    X'80'                                                    00044\n         DC    CL108'K'                                                 00045\n         DC    FL1'14'                                                  00046\n         DC    X'80'                                                    00047\n         DC    CL108'K E,D'                                             00048\n         DC    FL1'15'                                                  00049\n         DC    X'80'                                                    00050\n         DC    CL108'D U,,,680,14'                                      00051\n         DC    FL1'16'                                                  00052\n         DC    X'80'                                                    00053\n         DC    CL108'K E,1'                                             00054\n         DC    FL1'17'                                                  00055\n         DC    X'A0'                                                    00056\n         DC    CL108'V 68_X,OFFLINE'                                    00057\n         DC    FL1'18'                                                  00058\n         DC    X'80'                                                    00059\n         DC    CL108'$DA'                                               00060\n         DC    FL1'19'                                                  00061\n         DC    X'80'                                                    00062\n         DC    CL108'K D,F'                                             00063\n         DC    FL1'20'                                                  00064\n         DC    X'80'                                                    00065\n         DC    CL108'D A,L'                                             00066\n         DC    FL1'21'                                                  00067\n         DC    X'80'                                                    00068\n         DC    CL108'$DQ'                                               00069\n         DC    FL1'22'                                                  00070\n         DC    X'80'                                                    00071\n         DC    CL108'$DF'                                               00072\n         DC    FL1'23'                                                  00073\n         DC    X'80'                                                    00074\n         DC    CL108'$DN'                                               00075\n         DC    FL1'24'                                                  00076\n         DC    X'A0'                                                    00077\n         DC    CL108'D NET,STATIONS,ID=NCP_XX'                          00078\n         DC    FL1'100'                                                 00079\n         DS    0D                                                       00080\nENDPFK   EQU   *                                                        00081\n         END                                                            00082\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ISPTCM": {"ttr": 1038, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "THIS ISPTCM GENERATE MODULE IS NOT INCLUDED BECAUSE IT IS AN\nIBM COPYRIGHTED MODULE                                                  00001**2\nIS IS PRODUCT 5665-319                                                  00002**2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ISR@PRIM": {"ttr": 1040, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n @ AREA(DYNAMIC) SCROLL(ON)\n)BODY\n%-----------------------  ISPF/PDF PRIMARY OPTION MENU  ------------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%   0 +ISPF PARMS  - Specify terminal and user parameters   +TIME     - &ZTIME\n%   1 +BROWSE      - Display source data or output listings +DATE     - &ZDATE\n%   2 +EDIT        - Create or change source data           +JULDATE  - &ZJDATE\n%   3 +UTILITIES   - Perform utility functions\n%   4 +FOREGROUND  - Invoke language processors in foreground\n%   5 +BATCH       - Submit job for language processing\n%   6 +COMMAND     - Enter TSO command or CLIST\n%   7 +DIALOG TEST - Perform dialog testing\n%   8 +LM UTILITIES- Perform library administrator utility functions\n%   9 +IBM PRODUCTS- Additional IBM program development products\n%   C +CHANGES     - Display summary of changes for this release\n%   T +TUTORIAL    - Display information about ISPF/PDF\n%   X +EXIT        - Terminate ISPF using log and list defaults\n%\n%\n%\n%\n%                                   @D@\n+Scroll%UP+,%DOWN+,%LEFT+or%RIGHT+for more options.\n%\n+Enter%X+to terminate ISPF.\n)INIT\n  &DYNAM = '+ '\n  .HELP = ISR00003\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n  VPUT (ZHTOP,ZHINDEX) PROFILE\n)PROC\n IF (&ZCMD = &Z)\n   IF (&ZVERB = UP,DOWN,RIGHT,LEFT)\n      &ZCMD = &ZVERB\n &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n        /*      6,'PGM(ISRPTC)'   OLD IBM OPTION 6 TSO PGM */\n                6,'PGM(TSO0)'\n                7,'PGM(ISRYXDR) NOCHECK'\n                8,'PANEL(ISRLPRIM)'\n                9,'PANEL(ISRDIIS)'\n             ISMF,'PGM(DGTFMD01) PARM(&ZCMD) NEWAPPL(DGT) NOCHECK'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n        /***********************************************/\n        /*    EVERYTHING BEFORE THIS IS STOCK IBM PDF  */\n        /***********************************************/\n                \u00a2,'PGM($AVRSPF) PARM($.NY) NOCHECK NEWAPPL($AVR)'\n                $,'PGM($AVRSPF) PARM(&ZCMD) NOCHECK NEWAPPL($AVR)'\n                A,'PANEL(ABRPRIME)'\n                B,'PANEL(BGS000)'\n                I,'PGM(BLGINIT) PARM(SESS(OP))'\n                F,'PANEL(IFAMU01) NEWAPPL(FAXE)'\n                J,'CMD(%JCKSPF)'\n                L,'CMD(%CATCMD)'\n                O,'PANEL(OMSPF02) NEWAPPL(OMEG)'\n                P,'PGM(IPNINIT) NOCHECK'\n                S,'PANEL(ZSDSFOP2) NEWAPPL(ISF)'\n                U,'PANEL(USERSEL)'\n                W,'PANEL(@WOPT)'\n               OC,'PANEL(OCSPF02) NEWAPPL(OMEG)'\n              ABR,'PANEL(ABRPRIME)'\n              ABE,'CMD(%ABND#C)'\n              ACF,'PANEL(ACFOPTS)'\n              APT,'CMD(%APT) NOCHECK'\n              AST,'PGM(AST0SPFC) PARM(I)'\n              TUT,'PGM(TUTPRNT1)'\n              CDS,'PANEL(OPTC)'\n              FTP,'PANEL(PCXFR00)'\n              PDS,'PANEL(PDS@PRIM)'\n              SAS,'CMD(%SAS001)'\n           SASLPA,'CMD(%SASLPA1)'\n              SSR,'CMD(%SSRALLOC) NEWAPPL(SSR) NOCHECK'\n              VPS,'PANEL(VPS@PRIM)'\n              WTS,'PANEL(WTS#P)'\n              XPF,'CMD(%XPFSPF) NEWAPPL'\n             ACFM,'PANEL(ACFM0000)'\n             COMP,'CMD(%@WOPT2)'\n             IDTF,'PANEL(TRC#P)'\n             INFO,'PGM(BLGINIT) PARM(SESS(OP))'\n             IOCP,'CMD(%IOCPCMD1)'\n             ONLF,'PANEL(ONL$PRIM)'\n           DOCLIB,'PANEL(ONL$DOCL)'\n             SMPE,'PGM(GIMISCV) PARM(&ZCMD) NEWAPPL(SMP2) NOCHECK'\n             SORT,'CMD(%ASP001U)'\n             TECH,'PANEL(USERTECH)'\n             VTOC,'CMD(%VTOCCMD1)'\n             DYNA,'CMD(%DYN#C1) NEWAPPL'\n            DITTO,'PGM(DUTDITTO) NEWAPPL(DUT)'\n            INFOA,'PGM(BLGINIT) PARM(SESS(WB))'\n            PHONE,'PANEL(PHONPRIM)'\n            TCOMP,'CMD(%@WOPT1)'\n          INFOLIB,'PANEL(INFOLIB)'\n            BOOKS,'PANEL(INFOLIB)'\n          MANUALS,'PANEL(INFOLIB)'\n          ARFLIST,'CMD(%ARFLIST)'\n          BLKSIZE,'PANEL(BLKOPT01)'\n          FINANCE,'PGM(BLGINIT) PARM(SESS(fi))'\n          PAYROLL,'PANEL(JPR0000)'\n           JPRLOG,'PANEL(JPR1010)'\n          WBNRULE,'CMD(%WBNRCMD1)'\n         WRKPAPER,'PANEL(@IFP000)'\n               UP,'PANEL(PRIMUP)'\n             DOWN,'PANEL(PRIMDOWN)'\n            RIGHT,'PANEL(PRIMRGHT)'\n             LEFT,'PANEL(PRIMLEFT)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  IF (&ZCMD = 'S')\n     &ZSEL  = 'PGM(ISFISP) NEWAPPL(ISF)'\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCLJES4": {"ttr": 1043, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//XKZS004J JOB (SD,A,SPM000,ARF),'JES2EXIT4',\n//       NOTIFY=XKZS,CLASS=M,MSGCLASS=T,COND=(1,LT)\n/*JOBPARM  R=1318\n//STEP01 EXEC PGM=PAN#1\n//PANDD1 DD DSN=WB.A.ASPPAN,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//PANDD2 DD DSN=&&PASS,DISP=(,PASS),UNIT=SYSDA,\n//        SPACE=(TRK,(2,1),RLSE),\n//        DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)\n//SYSIN DD *\n++WRITE WORK,JES2XIT4V1\n//STEP1    EXEC ASMHC,REG=2M,PARM=BATCH\n//SYSLIB   DD  DSN=SYS1.SMPMTS,DISP=SHR,VOL=SER=IPORES,UNIT=D\n//         DD  DSN=SYS1.MACLIB,DISP=SHR,VOL=SER=IPORES,UNIT=D\n//         DD  DSN=SYS1.ACFMAC,DISP=SHR,VOL=SER=IPORES,UNIT=D\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR,VOL=SER=SMPE81,UNIT=D\n//         DD  DSN=SYS1.HASPSRC,DISP=SHR,VOL=SER=IPOCAT,UNIT=D\n//         DD  DSN=WB.A.TMSGEN,DISP=SHR\n//         DD  DSN=WB.A.MACLIB,DISP=SHR\n//SYSPUNCH DD DSN=&&OBJECT,UNIT=SYSDA,\n//           SPACE=(3200,(8,8),,,ROUND),\n//           DCB=BLKSIZE=3200,DISP=(,PASS)\n//SYSIN  DD  DSN=&PASS,DISP=(OLD,DELETE)\n//LKED     EXEC PGM=HEWL,PARM='LIST,LET,XREF,REUS,AMODE=24,RMODE=24'\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(3,1))\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DSN=&&OBJECT,DISP=(OLD,DELETE)\n//SYSLMOD  DD DISP=SHR,DSN=SYS1.LINKLIB($XIT4) ,\n//*        UNIT=D,VOL=SER=IPORES\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCLJES5": {"ttr": 1045, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//XKZS005J JOB (SD,A,SPM000,ARF),'JES2EXIT5D',\n//       NOTIFY=XKZS,CLASS=M,MSGCLASS=T,COND=(1,LT)\n/*JOBPARM  R=1318\n//STEP01 EXEC PGM=PAN#1\n//PANDD1 DD DSN=WB.A.ASPPAN,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//PANDD2 DD DSN=&&PASS,DISP=(,PASS),UNIT=SYSDA,\n//        SPACE=(TRK,(2,1),RLSE),\n//        DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)\n//SYSIN DD *\n++WRITE WORK,JESXIT5D\n//STEP1    EXEC ASMHC,REG=2M,PARM=BATCH\n//SYSLIB   DD  DSN=SYS1.SMPMTS,DISP=SHR,VOL=SER=IPORES,UNIT=D\n//         DD  DSN=SYS1.MACLIB,DISP=SHR,VOL=SER=IPORES,UNIT=D\n//         DD  DSN=SYS1.ACFMAC,DISP=SHR,VOL=SER=IPORES,UNIT=D\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR,VOL=SER=SMPE81,UNIT=D\n//         DD  DSN=SYS1.HASPSRC,DISP=SHR,VOL=SER=IPOCAT,UNIT=D\n//         DD  DSN=WB.A.MACLIB,DISP=SHR\n//SYSPUNCH DD DSN=&&OBJECT,UNIT=SYSDA,\n//           SPACE=(3200,(8,8),,,ROUND),\n//           DCB=BLKSIZE=3200,DISP=(,PASS)\n//SYSIN  DD  DSN=&PASS,DISP=(OLD,DELETE)\n//LKED     EXEC PGM=HEWL,PARM='LIST,LET,XREF,REUS,AMODE=24,RMODE=24'\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(3,1))\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DSN=&&OBJECT,DISP=(OLD,DELETE)\n//SYSLMOD  DD DISP=SHR,DSN=SYS1.LINKLIB($XIT5D),\n//         UNIT=D,VOL=SER=IPORES\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JESXIT5D": {"ttr": 1281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET JESXIT5D   AT LEVEL 001 AS OF 11/13/87\n         TITLE 'JES2 $D* COMMAND PROCESSOR'                             00001\n*********************************************************************** 00002\n*                                                                     * 00003\n*        ENVIRONMENT   MVS/XA 2.1.5                                   * 00004\n*                                                                     * 00005\n*        THIS JES2 EXIT PROGRAM IS DESIGNED PROCESS THE $D* COMMAND   * 00006\n*        WHEN ENTERED.  THIS COMMAND IS IMPLEMENTED AS A TYPE 5       * 00007\n*        EXIT TO JES2, AND AS SUCH MUST INTERCEPT ONLY THE $L*        * 00008\n*        COMMAND WHEN ENCOUNTERED.                                    * 00009\n*                                                                     * 00010\n*                                                                     * 00011\n*        THE $D* COMMAND HAS THE FOLLOWING SYNTAX:                    * 00012\n*                                                                     * 00013\n*        $D'NNN*****'                                                 * 00014\n*        WRITTEN BY:                                                  * 00015\n*                        KEN SCHAUB                                   * 00016\n*                                                                     * 00017\n*********************************************************************** 00018\n         EJECT                                                          00019\n*********************************************************************** 00020\n*                                                                     * 00021\n*        THE FOLLOWING RESPONSES WILL BE MADE BY THIS EXIT:           * 00022\n*                                                                     * 00023\n*        1)  THE HASP900 MESSAGE WILL BE ISSUED FOR EACH OUTPUT       * 00024\n*            GROUP WHICH MATCHES THE SELECTION CRITERIA.              * 00025\n*                                                                     * 00026\n*        $HASP900 JOB NNNN JJJJJJJJ PRT LOCAL    PUN LOCAL            * 00027\n*                                                                     * 00028\n*                                                                     * 00029\n*            A)  JJJJJJJJ   - JOBNAME                                 * 00030\n*            B)  JOBNNNN    - JOB NUMBER                              * 00031\n*                                                                     * 00032\n*        2)  THE HASP919 MESSAGE WILL BE ISSUED WHEN NO OUTPUT        * 00033\n*            GROUP MATCHES THE SELECTION CRITERIA.                    * 00034\n*                                                                     * 00035\n*        $HASP919 NO OUTPUT QUEUED                                    * 00036\n*                                                                     * 00037\n*                                                                     * 00038\n*********************************************************************** 00039\n*********************************************************************** 00040\n         EJECT                                                          00041\n*********************************************************************** 00042\n*                                                                     * 00043\n*              M A C R O S   U S E D   I N   J E S E X I T 1          * 00044\n*                                                                     * 00045\n*        01)  $BUFFER      SYS1.HASPSRC                               * 00046\n*        02)  $CAT         SYS1.HASPSRC                               * 00047\n*        03)  $CMB         SYS1.HASPSRC                               * 00048\n*        04)  $COMWORK     SYS1.HASPSRC                               * 00049\n*        05)  $CWTO        SYS1.HASPSRC                               * 00050\n*        06)  $DEST        SYS1.HASPSRC                               * 00051\n*        07)  $ENTRY       SYS1.HASPSRC                               * 00052\n*        08)  $GETBUF      SYS1.HASPSRC                               * 00053\n*        09)  $FREEBUF     SYS1.HASPSRC                               * 00054\n*        10)  $HASPEQU     SYS1.HASPSRC                               * 00055\n*        11)  $HASPGBL     SYS1.HASPSRC                               * 00056\n*        12)  $HCT         SYS1.HASPSRC                               * 00057\n*        13)  $JCT         SYS1.HASPSRC                               * 00058\n*        14)  $JOE         SYS1.HASPSRC                               * 00059\n*        16)  $JQE         SYS1.HASPSRC                               * 00060\n*        18)  $MODEND      SYS1.HASPSRC                               * 00061\n*        19)  $MODULE      SYS1.HASPSRC                               * 00062\n*        20)  $PCE         SYS1.HASPSRC                               * 00063\n*        21)  $RAT         SYS1.HASPSRC                               * 00064\n*        22)  $RETURN      SYS1.HASPSRC                               * 00065\n*        23)  $SAVE        SYS1.HASPSRC                               * 00066\n*        24)  $STORE       SYS1.HASPSRC                               * 00067\n*        25)  IAZRESPA     SYS1.AMODGEN                               * 00068\n*        26)  IFGRPL       SYS1.MACLIB                                * 00069\n*                                                                     * 00070\n*                                                                     * 00071\n*              L I N K A G E    E D I T O R    I N F O                * 00072\n*                                                                     * 00073\n*        SIZE:       3K                                               * 00074\n*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                * 00075\n*                                                                     * 00076\n*                                                                     * 00077\n*********************************************************************** 00078\n         EJECT                                                          00079\n         COPY  $HASPGBL                                                 00080\n$XIT5D   $MODULE SYSP=(NOGEN,NOGEN,NOGEN,NOGEN,NOGEN),                 X00081\n               ENVIRON=JES2,                                           X00082\n               TITLE='JES2 $D* COMMAND PROCESSOR',                     X00083\n               $HASPEQU,           GENERATE HASP EQUATES               X00084\n               RESPA,              GENERATE MVS  RESPA DSECT           X00085\n               RPL,                GENERATE MVS  IFGRPL DSECT          X00086\n               $PCE,               GENERATE HASP PCE DSECT             X00087\n               $JQE,               GENERATE HASP JQE DSECT             X00088\n               $BUFFER,            GENERATE HASP BUFFER DSECT          X00089\n               $JCT,               GENERATE HASP JCT DSECT             X00090\n               $CAT,               GENERATE HASP CAT DSECT             X00091\n               $HCT,               GENERATE HASP HCT DSECT             X00092\n               $COMWORK,           GENERATE HASP COMWORK DSECT         X00093\n               $MIT,               GENERATE HASP MIT DSECT             X00094\n               $RAT,               GENERATE HASP RAT DSECT             X00095\n               $JOE,               GENERATE HASP JOE DSECT             X00096\n               $CMB                GENERATE HASP CMB DSECT              00097\n         EJECT                                                          00098\n         TITLE 'JES2 $D* COMMAND PROCESSOR'                             00099\n*********************************************************************** 00100\n*                                                                     * 00101\n*        EXIT 5 MAIN ENTRY POINT                                      * 00102\n*                                                                     * 00103\n*********************************************************************** 00104\nUEXIT5D  $ENTRY BASE=R12                                                00105\n         SPACE 1                                                        00106\n         $SAVE                     SAVE CALLER'S REGISTERS              00107\n         LR    R12,R15             LOAD BASE REGISTER                   00108\n         EJECT                                                          00109\n*********************************************************************** 00110\n*                                                                     * 00111\n*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             * 00112\n*                                                                     * 00113\n*        R5       - ADDRESS OF THE CURRENT OPERAND                    * 00114\n*        R6       - INCREMENT VALUE OF 4                              * 00115\n*        R7       - ADDRESS OF THE LAST OPERAND                       * 00116\n*        R11      - ADDRESS OF THE HCT                                * 00117\n*        R13      - ADDRESS OF THE HASPCOMM PCE                       * 00118\n*        R14      - RETURN ADDRESS                                    * 00119\n*        R15      - ENTRY ADDRESS                                     * 00120\n*                                                                     * 00121\n*********************************************************************** 00122\n         SPACE 3                                                        00123\n*********************************************************************** 00124\n*                                                                     * 00125\n*        SEE IF THIS IS A $D* COMMAND                                 * 00126\n*                                                                     * 00127\n*********************************************************************** 00128\n         CLC   COMVERB(2),=C'D'''  IS THIS IS THE $D* COMMAND           00129\n         BNE   EXIT0               NO, BRANCH TO COMMAND OK EXIT        00130\n         MVC   COMJNAME(8),$BLANKS BLANK OUT JOB NAME                   00131\n         L     R1,0(R5)            GET OPERAND ADDRESS                  00132\n         MVC   COMJNAME(8),1(R1)   MOVE JOB NAME TO COMJNAME AREA       00133\n         LA    R1,COMJNAME+7       SET R1 TO LENGTH OF JNAME            00134\n         LA    R2,COMJNAME         GET JOBNAME ADDRESS                  00135\nCKCMD    DS    0H                                                       00136\n         CR    R2,R1               HAVE WE CHECKED ALL CHARS ?          00137\n         BH    EXIT0               YES, GET OUT                         00138\n         CLI   0(R2),C'*'          IS IT A GENERIC COMMAND ?            00139\n         BE    FINDQ               YES. GO CHECK FOR QUOTE              00140\n         LA    R2,1(R2)            POINT TO NEXT CHAR                   00141\n         B     CKCMD                                                    00142\nFINDQ    DS    0H                                                       00143\n         LA    R2,COMJNAME         GET JOBNAME ADDRESS                  00144\nLOOPQ    DS    0H                                                       00145\n         CR    R2,R1               HAVE WE GONE 8                       00146\n         BH    PROCESS             YES, GO PROCESS                      00147\n         CLI   0(R2),C''''         CHECK FOR ENDING QUOTE               00148\n         BE    FILLOUT             YES. GO FILL OUT WITH *              00149\n         LA    R2,1(R2)            POINT TO NEXT CHAR                   00150\n         B     LOOPQ                                                    00151\nFILLOUT  DS    0H                                                       00152\n         MVI   0(R2),C' '          FILL WITH BLANK                      00153\n         EJECT                                                          00154\n         SPACE 1                                                        00155\n*********************************************************************** 00156\n*                                                                     * 00157\n*        GET A JES2 BUFFER FOR REENTRANCY AND                         * 00158\n*        CLEAR THE COMMAND WORK AREA                                  * 00159\n*                                                                     * 00160\n*********************************************************************** 00161\n         SPACE 1                                                        00162\nPROCESS  DS    0H                                                       00163\n         $GETBUF TYPE=HASP,WAIT=YES GET A WORK AREA                     00164\n         LR    R8,R1               SAVE WORK AREA ADDRESS               00165\n         USING DWORK,R8           SET ADDRESSABILITY TO WORK AREA       00166\n         XC    DWORK(CLEARLN),DWORK CLEAR WORK AREA PREFIX              00167\n         L     R4,$WSAJQE          GET JQE ADDRESS                      00168\n         USING JQE,R4                                                   00169\n         SPACE 3                                                        00170\n*********************************************************************** 00171\n*                                                                     * 00172\n*        SCAN JOB QUEUE FOR SELECTED JOBS                             * 00173\n*                                                                     * 00174\n*********************************************************************** 00175\n         SPACE 1                                                   SPR2 00176\n         LA    R15,0               SET INDEX FOR START OF QUEUE    SPR2 00177\nQSCAN    STH   R15,COMJQHDS        SAVE JOB QUEUE HEADER INDEX          00178\n         LA    R4,$JQHEADS-(JQENEXT-JQE)(R15) POINT NEXT JOB QUEUE SPR2 00179\nWORKJQE  L     R4,JQENEXT          GET OFFSET OF NEXT JQE          SPR2 00180\n         N     R4,$ZEROFFF         INSURE OFFSET POSITIVE          SPR2 00181\n         BZ    NEXTQ               BR IF END OF QUEUE                   00182\n         AL    R4,$JOBQPTR         GET JQE ADDRESS                 SPR2 00183\n         B     CKJOBNM              AND ENTER PROCESS ROUTINE           00184\nNEXTQ    LH    R15,COMJQHDS        GET CURRENT JOB QUEUE HDR INDEX      00185\n         LA    R15,4(,R15)         INDEX TO NEXT QUEUE             SPR2 00186\n         LA    R4,$JQTYPES*$JQHEADL  GET LENGTH OF QUEUE HEADS     SPR2 00187\n         CLR   R15,R4              END OF THE QUEUES...            SPR2 00188\n         BL    QSCAN               BRANCH OF NO                    SPR2 00189\n         B     ENDJQES             BR IF NO                             00190\n*********************************************************************** 00191\n*        CHECK THE JOBNAME  FOR OUR VALUE                             * 00192\n*********************************************************************** 00193\nCKJOBNM  DS    0H                                                       00194\n         CLI   COMJNAME,C'*'       DO WE WANT TO COMPARE THIS POS ?     00195\n         BE    CKJOB2              NO, GO TO NEXT                       00196\n         CLC   COMJNAME(1),JQEJNAME COMPARE FIRST CHARACTER             00197\n         BNE   WORKJQE             GO GET NEXT JQE ENTRY                00198\nCKJOB2   DS    0H                                                       00199\n         CLI   COMJNAME+1,C'*'     COMPARE THIS POSITION                00200\n         BE    CKJOB3              NO, SKIP TO NEXT                     00201\n         CLC   COMJNAME+1(1),JQEJNAME+1 COMPARE 2ND POSITION            00202\n         BNE   WORKJQE                                                  00203\nCKJOB3   DS    0H                                                       00204\n         CLI   COMJNAME+2,C'*'     COMPARE THIS POSITION                00205\n         BE    CKJOB4              NO, SKIP TO NEXT                     00206\n         CLC   COMJNAME+2(1),JQEJNAME+2 COMPARE 2ND POSITION            00207\n         BNE   WORKJQE                                                  00208\nCKJOB4   DS    0H                                                       00209\n         CLI   COMJNAME+3,C'*'     COMPARE THIS POSITION                00210\n         BE    CKJOB5              NO, SKIP TO NEXT                     00211\n         CLC   COMJNAME+3(1),JQEJNAME+3 COMPARE 2ND POSITION            00212\n         BNE   WORKJQE                                                  00213\nCKJOB5   DS    0H                                                       00214\n         CLI   COMJNAME+4,C'*'     COMPARE THIS POSITION                00215\n         BE    CKJOB6              NO, SKIP TO NEXT                     00216\n         CLC   COMJNAME+4(1),JQEJNAME+4 COMPARE 2ND POSITION            00217\n         BNE   WORKJQE                                                  00218\nCKJOB6   DS    0H                                                       00219\n         CLI   COMJNAME+5,C'*'     COMPARE THIS POSITION                00220\n         BE    CKJOB7              NO, SKIP TO NEXT                     00221\n         CLC   COMJNAME+5(1),JQEJNAME+5 COMPARE 2ND POSITION            00222\n         BNE   WORKJQE                                                  00223\nCKJOB7   DS    0H                                                       00224\n         CLI   COMJNAME+6,C'*'     COMPARE THIS POSITION                00225\n         BE    CKJOB8              NO, SKIP TO NEXT                     00226\n         CLC   COMJNAME+6(1),JQEJNAME+6 COMPARE 2ND POSITION            00227\n         BNE   WORKJQE                                                  00228\nCKJOB8   DS    0H                                                       00229\n         CLI   COMJNAME+7,C'*'     COMPARE THIS POSITION                00230\n         BE    GOODJQE             NO, SKIP TO NEXT                     00231\n         CLC   COMJNAME+7(1),JQEJNAME+7 COMPARE 2ND POSITION            00232\n         BNE   WORKJQE                                                  00233\n*********************************************************************** 00234\n*        MOVE THE JOBNAME TO THE MESSAGE                              * 00235\n*********************************************************************** 00236\nGOODJQE  DS    0H                                                       00237\n         MVC   MESSAGE(50),=CL50' '                                     00238\n         MVC   OJOBNM,JQEJNAME     MOVE JOBNAME TO MESSAGE              00239\n*********************************************************************** 00240\n*        MOVE THE JOB NUMBER TO THE MESSAGE                           * 00241\n*********************************************************************** 00242\n         LH    R0,JQEJOBNO         LOAD JOB NUMBER                      00243\n         CVD   R0,$DOUBLE          CONVERT JOB NUMBER TO PACKED         00244\n         MVC   WRKA(6),=X'402020202120' SET EDIT MASK                   00245\n         ED    WRKA(6),$DOUBLE+5   UNPACK JOB NUMBER TO WORK AREA       00246\n         MVC   OJOBNO(4),WRKA+2    MOVE JOB NUMBER TO MESSAGE           00247\n*********************************************************************** 00248\n*        MOVE THE JOB TYPE TO THE MESSAGE                             * 00249\n*********************************************************************** 00250\n         MVC   OTYPE(3),=CL3'JOB'  ASSUME BATCH JOB                     00251\n         TM    JQEFLAG3,JQE3JOB    IS THIS A BATCH JOB                  00252\n         BZ    GOODJNO             YES, BRANCH                          00253\n         MVC   OTYPE(3),=CL3'STC'  ASSUME STARTED TASK                  00254\n         TM    JQEFLAG3,JQE3STC    IS THIS A STARTED TASK               00255\n         BO    GOODJNO             YES, BRANCH                          00256\n         MVC   OTYPE(3),=CL3'TSU'  ASSUME TSO LOGON                     00257\n         TM    JQEFLAG3,JQE3TSU    IS THIS A TSO LOGON                  00258\n         BO    GOODJNO             YES, BRANCH                          00259\n         MVC   OTYPE(3),=CL3'XTR'  ASSUME TRANSMITTER                   00260\nGOODJNO  DS    0H                                                       00261\n*********************************************************************** 00262\n*        MOVE THE JOB QUEUE TO THE MESSAGE                            * 00263\n*********************************************************************** 00264\n         TM    JQETYPE,$XEQ        IS THIS JOB EXECUTING                00265\n         BZ    CKPRT               GO CHECK IF ON PRINTER               00266\n         CLI   JQETYPE,$XEQ        IS JOB ON CONVERTER                  00267\n         BNE   CKXEQ               GO CHECK FOR EXECUTION               00268\n         MVC   OQUE(10),=CL10'CONVERTING'  IN CONVERSION                00269\n         B     GOODTYP                                                  00270\nCKXEQ    DS    0H                                                       00271\n         TM    JQEFLAG1,JQE1BUSY   TEST FOR ACTIVE                      00272\n         BZ    AWXEQ               JOB WAITING                          00273\n         MVC   OQUE(10),=CL10'EXECUTING '  JOB EXECUTING                00274\n         MVC   OCLASS(1),JQEJCLAS    GET JOB CLASS                      00275\n         B     GOODTYP                                                  00276\nAWXEQ    DS    0H                                                       00277\n         MVC   OQUE(18),=CL18'AWAITING EXECUTION'  WAITING              00278\n         MVC   OCLASS(1),JQEJCLAS    GET JOB CLASS                      00279\n         B     GOODTYP                                                  00280\nCKPRT    DS    0H                                                       00281\n         CLI   JQETYPE,$HARDCPY    QUEUED FOR OUTPUT                    00282\n         BNE   CKOUT               CHECK IF PRINTING                    00283\n         MVC   OQUE(25),=CL25'PRT LOCAL      PUN LOCAL'                 00284\n         B     GOODTYP                                                  00285\nCKOUT    DS    0H                                                       00286\n         CLI   JQETYPE,$OUTPUT     IS THIS JOB PRINTING                 00287\n         BNE   GOODTYP             NO , BRANCH                          00288\n         MVC   OQUE(18),=CL18'PRINTING          '  JOB PRINTING         00289\nGOODTYP  DS    0H                                                       00290\n*********************************************************************** 00291\n*                                                                     * 00292\n*        WRITE THE MESSAGE FOR THIS JQE                               * 00293\n*                                                                     * 00294\n*********************************************************************** 00295\n         LA    R0,50               WRITE FIRST MESSAGE                  00296\n         LA    R1,MSG1             LOAD ADDRESS OF MESSAGE              00297\n         $CWTO L=(R0),MSG=(R1),MSGID=900  DISPLAY MESSAGE               00298\nSETFND   OI    MISCSW,MATCH        TURN ON MATCH FOUND SWITCH           00299\n         B     WORKJQE             GO GET ANOTHER WORK JQE              00300\n         EJECT                                                          00301\n*********************************************************************** 00302\n*                                                                     * 00303\n*        END OF ALL JQES.  IF NO MESSAGES WERE ISSUED, ISSUE          * 00304\n*        A MESSAGE THAT NO OUTPUT WAS QUEUED.                         * 00305\n*                                                                     * 00306\n*********************************************************************** 00307\nENDJQES  TM    MISCSW,MATCH        WAS A MATCH FOUND                    00308\n         BZ    NOUTPUT             NO, BRANCH                           00309\n         B     EXIT8               GET OUT                              00310\nNOUTPUT  $CWTO MSG='NO OUTPUT QUEUED',MSGID=919  ISSUE MESSAGE          00311\n         B     EXIT8               GET OUT                              00312\n         SPACE 1                                                        00313\n         EJECT                                                          00314\n*********************************************************************** 00315\n*                                                                     * 00316\n*                    E X I T     R O U T I N E S                      * 00317\n*                                                                     * 00318\n*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                * 00319\n*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        * 00320\n*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      * 00321\n*        RC = 12 - TERMINATE ISSUING THE \"OK\" MESSAGE                 * 00322\n*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            * 00323\n*                                                                     * 00324\n*********************************************************************** 00325\nEXIT0    DS    0H                                                       00326\n         LA    R15,0               SET RETURN CODE TO 0                 00327\n         $RETURN RC=(R15)          RETURN TO JES2                       00328\nEXIT8    DS    0H                                                       00329\n         $FREEBUF (R8)             FREE THE WORK AREA                   00330\n         LA    R15,8               SET RETURN CODE TO 8                 00331\n         $RETURN RC=(R15)          RETURN TO JES2                       00332\n         EJECT                                                          00333\n         LTORG                                                          00334\n         EJECT                                                          00335\n         $MODEND                                                        00336\n*********************************************************************** 00337\n*                                                                     * 00338\n*        PROGRAM WORK AREAS                                           * 00339\n*                                                                     * 00340\n*********************************************************************** 00341\n         SPACE 3                                                        00342\nDWORK    DSECT                     COMMAND WORK AREA                    00343\n         DS    CL104               ***** RESERVED BY JES2  *****        00344\nWRKA     DS    CL10                EXIT WORK AREA                       00345\nJTYPE    DS    C                   JOB TYPE (* OR JQEFLAG VALUE)        00346\nMISCSW   DS    X                   MISCELLANEOUS SWITCHES               00347\nTWOPART  EQU   X'80'               TWO PART DESTINATION SPECIFIED       00348\nMATCH    EQU   X'40'               MATCH FOR OUTPUT FOUND               00349\nNUMCLASS DS    X                   NUMBER OF OUTPUT CLASSES FOLLOWING   00350\nOUTCLASS DS    CL8                 JOB OUTPUT CLASS / *                 00351\nLOWJOB   DS    H                   LOW JOB NUMBER FOR SEARCH            00352\nHIGHJOB  DS    H                   HIGH JOB NUMBER FOR SEARCH           00353\nCLEARLN  EQU   *-DWORK             LENGTH OF WORK AREA PREFIX           00354\nMESSAGE  DS    CL50                MESSAGE WORK AREA                    00355\n*                                                                       00356\nMSG1     EQU   MESSAGE             FIRST MESSAGE                        00357\nOTYPE    EQU   MESSAGE,3           JOB TYPE (STC TSU JOB XTR)           00358\nOJOBNO   EQU   MESSAGE+4,4         OUTPUT JOB NUMBER                    00359\nOJOBNM   EQU   MESSAGE+9,8         OUTPUT JOBNAME                       00360\nOQUE     EQU   MESSAGE+18,25       JES QUEUE WHERE JOB RESIDES          00361\nOCLASS   EQU   MESSAGE+45,1        OUTPUT CLASS                         00362\n         END                                                            00363\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JES2XIT4": {"ttr": 1288, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET JES2XIT4V9 AT LEVEL 014 AS OF 11/16/87\n*          DATA SET JES2XIT4V8 AT LEVEL 011 AS OF 06/05/85              00001**6\n        TITLE 'JES SETUP CARD TRANSLATION'                              00002**6\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *       00003**6\n*    FIX TO CHECK FOR GENERATED SYSIN DD * TO PREVENT LOOP YARF *       00004**7\n*    XRRN  THIS EXIT WAS CHANGED TO SUPPORT JES2 2.1.5.         *       00005*10\n*    XKZS  THIS EXIT WAS CHANGED TO SUPPORT JES2 1.3.4.         *       00006*10\n*                                            HJE2330            *       00007**6\n*                                                               *       00008**6\n*    PURPOSE:                                                   *       00009**6\n*     TO FACILATE THE USE OF THE SETUP CARD BY TRANSLATING      *       00010**6\n*     ANY \"DSN=XXXX\" TO  THE ACTUAL VOL=SER THAT THE DSN IS     *       00011**6\n*     ON AND REPLACING THAT IN THE JES STATEMENT. IF THE DATA   *       00012**6\n*     SET NAME IS NOT CATALOGED 'NOT CATLG' WILL BE PUT IN      *       00013**6\n*     COLS 63-71.                                               *       00014**6\n*                                                               *       00015**6\n*     MODIFIED TO HANDLE SETUPS FOR CIS JOBS                    *       00016**6\n*                                                               *       00017**6\n*     MODIFIED TO INSERT /*ROUTE CARDS FOR CIS                  *       00018**6\n*                                                               *       00019**6\n*     MODIFIED TO INSERT //JOBLIB CARDS FOR CIS                 *       00020**6\n*                                                               *       00021**6\n*     MODIFIED TO PREVENT S0C4 ISSUING TMSSVC                   *       00022**6\n*                                                               *       00023**6\n*     ENTRY POINT = UEXIT4                                      *       00024**6\n*                                                               *       00025**6\n*     MODULE NAME = $XIT4                                       *       00026**6\n*                                                               *       00027**6\n*     INPUT (REGISTERED):                                       *       00028**6\n*       R0    =0 JES2 COMMAND                                   *       00029**6\n*             =4 JCL STATEMENT                                  *       00030**6\n*       R1    POINTER TO 3WORD PERAMETER LIST                   *       00031**6\n*             WORD 1 (+0) ADDRESS OF CONTROL STATEMENT          *       00032**6\n*                         IMAGE BUFFER                          *       00033**6\n*             WORD 2 (+4) ADDRESS OF EXIT FLAG BYTE             *       00034**6\n*             WORD 3 (+8) ADDRESS OF JCTXWRK FIELD IN JCT       *       00035**6\n*       R2-9  N/A                                               *       00036**6\n*       R10   ADDRESS OF JCT                                    *       00037**6\n*       R11   ADDRESS OF HCT                                    *       00038**6\n*       R12   BASE REGISTURE                                    *       00039**6\n*       R13   ADDRESS OF PCE                                    *       00040**6\n*       R14   RETURN ADDRESS                                    *       00041**6\n*       R15   ENTRY ADDRESS                                     *       00042**6\n*                                                               *       00043**6\n*     RETURN (REGISTERS):                                       *       00044**6\n*       R0-14 N/A                                               *       00045**6\n*       R15   RETURN CODE                                       *       00046**6\n*             =0  PROCESS NEXT EXIT OR RETURN                   *       00047**6\n*             =4  IGNORE NEXT EXIT                              *       00048**6\n*             =8  IGNORE HASPRCCS PROCESSING                    *       00049**6\n*             =12 CANCEL JOB                                    *       00050**6\n*             =16 PURGE THE JOB                                 *       00051**6\n*                                                               *       00052**6\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *       00053**6\n         PRINT OFF                                                      00054**6\n         COPY  $HASPGBL       COPY JES GLOBAL PARMS                     00055**6\n         PRINT ON,NOGEN                                                 00056**6\n**   CREATE THE MIT TABLE  **                                           00057**6\n$XIT4   $MODULE SYSP=(NOGEN,GEN,NODATA,NOGEN,NOGEN),                   X00058*11\n               $HASPEQU,                                               X00059**6\n               $BUFFER,                                                X00060**6\n               $RDRWORK,                                               X00061**6\n               $JCT,                                                   X00062**6\n               $JQE,                                                   X00063**6\n               $PCE,                                                   X00064**6\n               $CAT,                                                   X00065**6\n               $HCT,                                                   X00066**6\n               $MIT,                                                   X00067**8\n               RPL                                                      00068**8\n         TITLE 'JES SETUP CARD TRANSLATION'                             00069**6\n         PRINT ON,GEN,NODATA                                            00070**6\nUEXIT4  $ENTRY BASE=R12          EXIT ROUTINE ENTRY POINT               00071*12\n        $SAVE                                                           00072**6\n         LR    R12,R15                     LOAD BASE REGISTER           00073**6\n         SLR   R15,R15                     CLEAR R15                    00074**6\n         LR    R7,R1               SAVE ADDRESS PARAMETERS              00075**6\n         LR    R9,R0               SAVE CARD TYPE INDICATOR             00076**6\n         L     R4,0(R7)                                                 00077**6\n         USING JCT,R10                                                  00078**8\n*        MVC   #CARD,0(R4)                                              00079**6\n*        WTO   MF=(E,WTOLIST)                                           00080**6\n         BAL   R14,#CHKJOB                                              00081**6\n         LTR   R15,R15             Q. CIS JOB                           00082**6\n         BNZ   CHKSETUP            A. NOT ZERO - NO                     00083**6\n         CLC   =C'//*',0(R4)       Q. COMMENT                           00084**6\n         BE    #EXIT               A. EQUAL - YES                       00085**6\n         CLC   =C'//SYSIN',0(R4)   Q. GENERATERED SYSIN                 00086**6\n         BE    #EXIT               A. EQUAL - YES                       00087**6\n         TM    JCTUSER0+1,HOLDBIT  Q. STILL NEED TO GO THERE            00088**6\n         BZ    CARDSCAN            A. ZERO - YES                        00089**6\nCHKSETUP DS    0H                                                       00090**6\n         LTR   R9,R9               Q. JES2 CONTROL STATEMENT            00091**6\n         BNZ   #EXIT               A. NOT ZERO - NO                     00092**6\n         L     R2,0(R7)            LOAD RECORD TO WORK WITH             00093**6\n         L     R4,0(R7)            LOAD RECORD START ADDRESS            00094**6\n         CLC   SETUP,0(R4)         Q. JES2 CARD                         00095**6\n         BNE   #EXIT               A. NOT EQUAL - NO                    00096**6\n         LA    R3,25                                                    00097**6\nBGNSRC   DS    0H                                                       00098**6\n         CLC   #KEYWORD,0(R2)      Q.IS IT HERE                         00099**6\n         BE    GOON                A. YES                               00100**6\n         LA    R2,1(R2)            INCREMENT                            00101**6\n         BCT   R3,BGNSRC              ONLY 25 TIMES                     00102**6\n         B     #MOVECLS            RETURN                               00103**6\nGOON     CLI   4(R2),C' '          Q. ANY DSNAME THERE                  00104**6\n         BE    #MOVECLS            A. EQUAL - NO                        00105**6\n         MVC   #DSNAME,BLANKS      CLEAR TO BLANKS                      00106**6\n         LA    R1,5(R2)            SET START OF SCAN                    00107**6\n         LA    R5,4(R2)            SAVE ADDRESS OF START OF DSN         00108**6\n         LA    R3,44               SET MAX SCAN                         00109**6\nDSNLOOP  DS    0H                  FIND FIRST BLANK                     00110**6\n         CLI   0(R1),C' '          Q. BLANK HERE                        00111**6\n         BE    FOUND               A. EQUAL - YES                       00112**6\n         LA    R1,1(,R1)                                                00113**6\n         BCT   R3,DSNLOOP                                               00114**6\nFOUND    DS    0H                                                       00115**6\n*        MVC   0(2,R2),=C'C='                                           00116**6\n*        MVC   2(1,R2),JCTJCLAS    MOVE IN JOB CLASS                    00117**6\n         SR    R1,R5               SET TO LENGTH                        00118**6\n         BCTR  R1,0                SUBTRACT 1                           00119**6\n         EX    R1,MOVEDSN          MOVE IN DSNAME FOR LOCATE            00120**6\n         LOCATE #NAME              GET VOLSERS                          00121**6\n         LTR   R15,R15             Q. CATALOGUED                        00122**6\n         BZ    #CATLG              A. ZERO - YES                        00123**6\n         MVC   62(9,R4),CATMSG     MOVE =C'NOT CATLG'                   00124**6\n         B     #MOVECLS            NOW GO EXIT                          00125**6\n#CATLG   DS    0H                                                       00126**6\n         LH    R3,#VOLIST          GET # OF ENTRIES                     00127**6\n         LA    R1,#VOLIST+6                                             00128**6\n*        LA    R5,4(,R2)           POINT PAST 'C=? '                    00129**6\n         LA    R5,0(,R2)           POINT TO START                       00130**6\n         LA    R6,62(,R2)          POINT TO END OF CARD                 00131**6\n         SR    R6,R5               GET LENGTH                           00132**6\n         MVI   0(R5),C' '          CLEAR REST OF CARD                   00133**6\n         EX    R6,CLEAR            CLEAR WITH LENGTH IN R6              00134**6\n         LA    R6,67(,R4)          POINT TO END OF CARD - 3             00135**6\n         SH    R6,SIX              MINUS SIX                            00136**6\n#VOLLOOP DS    0H                                                       00137**6\n         CR    R5,R6               Q. ANY MORE ROOM                     00138**6\n         BH    #MOVECLS            A. HIGH - NO                         00139**6\n         MVC   0(6,R5),0(R1)                                            00140**6\n         CR    R6,R5               Q. ANY MORE ROOM                     00141**6\n         BNH   #CHKVOLS            A. NOT HIGH - NO                     00142**6\n         MVI   6(R5),C','                                               00143**6\n         LA    R5,7(,R5)                                                00144**6\n         LA    R1,12(R1)                                                00145**6\n         BCT   R3,#VOLLOOP                                              00146**6\n         BCTR  R5,0                                                     00147**6\n         MVI   0(R5),C' '                                               00148**6\n#CHKVOLS DS    0H                                                       00149**6\n         LA    R1,JCTJNAME                                              00150**6\n         BAL   R14,#CHKJOB          CHECK JOBNAME                       00151**6\n         LTR   R15,R15              Q. NEED TO CHECK                    00152**6\n         BNZ   #MOVECLS             A. NOT EQUAL - NO                   00153**6\n         ST    R12,0(R13)           FOR UCC                             00154**6\n         OPENTMC NOTACT=#EXIT                                           00155**6\n         LR    R3,R2                POINT TO START OF VOLS              00156**6\n#CHKLOOP DS    0H                                                       00157**6\n         CLI   0(R3),C' '           Q. END OF THE TESTS                 00158**6\n         BE    #MOVECLS             A. EQUAL - YES                      00159**6\n         CLI   0(R3),C'0'           Q. NEED TO CHECK                    00160**6\n         BNE   #NXTVOL              A. NOT EQUAL - NO                   00161**6\n         MVC   TMVOLSER,0(R3)       COPY VOLSER                         00162**6\n         MVI   TMVOLSER,C'C'        FORCE A 'C'                         00163**6\n         GETTMC TMVOLSER,TMRECORD,#NXTVOL,ENQ=NO                        00164**6\n         CLC   TMDSN,#DSNAME        Q. SAME DATASET                     00165**6\n         BNE   #NXTVOL              A. NOT EQUAL - NO                   00166**6\n         MVI   0(R3),C'C'           CHANGE IT TO A 'C'                  00167**6\n#NXTVOL  DS    0H                                                       00168**6\n         LA    R3,7(,R3)            A. SKIP OVER XXXXXX,                00169**6\n         B     #CHKLOOP                                                 00170**6\n#MOVECLS DS    0H                                                       00171**6\n         MVC   67(2,R4),=C'C='                                          00172**6\n         MVC   69(1,R4),JCTJCLAS                                        00173**6\n         B     #EXIT                                                    00174**6\n*CHKJCLS DS    0H                                                       00175**6\n*        TM    JCTUSER0+1,CLSBIT   Q. INSERTED JOBCLASS CARD            00176**6\n*        BO    #EXIT               A. ONE - YES                         00177**6\n*        MVC   JCTXWRK,SETUPM                                           00178**6\n*        MVC   JCTXWRK+18(1),JCTJCLAS      POST JOB CLASS               00179**6\n*        OI    RDWFLAGX,RDWXXSNC           SET TO ACCEPT NEW STATEMENT  00180**9\n*        OI    JCTUSER0+1,CLSBIT           SET AS INSERTED              00181**6\n*        LA    R15,8                                                    00182**6\n*        B     #ALTEXIT                                                 00183**6\n#EXIT    DS    0H                                                       00184**6\n         LA    R15,0                       SET RETURN CODE              00185**6\n#ALTEXIT DS    0H                                                       00186**6\n        $RETURN RC=(R15)                   RETURN TO HASPPRPU           00187**6\nCARDSCAN DS    0H                                                       00188**6\n*        CLC   =C'$XIT4',44(R4)            Q. HAVE THESE CARDS BEEN ADD 00189*14\n*        BNE   CHKROUT                     A. NO- GO ADD THEM           00190*14\n*        MVI   JCTUSER0+1,X'FF'            TURN ALL BITS ON TO SAY DONE 00191*14\n*        B     #EXIT                       GO EXIT                      00192*14\n*HKROUT  DS    0H                                                       00193*14\n         TM    JCTUSER0+1,ROUTEBIT         Q. ROUTE CARD NEEDED         00194**6\n         BO    CHKPUNCH                    A. ONE - NO                  00195**6\n         L     R1,0(R7)                    POINT TO JCL IMAGE           00196**6\n         MVC   #HOLD,0(R1)                 COPY ORIGINAL STATEMENT      00197**6\n         MVI   2(R1),C'*'                  MAKE IT A COMMENT            00198**6\n         MVC   JCTXWRK,ROUTE               MOVE IN ROUTE CARD           00199**6\n         OI    RDWFLAGX,RDWXXSNC           SET TO ACCEPT NEW STATEMENT  00200**9\n         OI    JCTUSER0+1,ROUTEBIT         SET AS INSERTED              00201**6\n         LA    R15,8                       MAKE A COMMENT               00202**6\n         CLI   JCTJNAME+2,C'T'             Q. TEST JOB                  00203**6\n         BNE   #ALTEXIT                    A. NOT EQUAL - NO            00204**6\n         MVC   JCTXWRK,PUNCH               MOVE IN /*ROUTE PUNCH        00205**6\n         OI    JCTUSER0+1,PUNCHBIT+OUTBIT  ROUTE ONLY PUNCH             00206**6\n         LA    R15,8                       MAKE A COMMENT               00207**6\n         B     #ALTEXIT                    EXIT                         00208**6\nCHKPUNCH DS    0H                                                       00209**6\n         TM    JCTUSER0+1,PUNCHBIT         Q. ALREADY DONE              00210**6\n         BO    CHKOUT                      A. ONE - YES                 00211**6\n         MVC   JCTXWRK,PUNCH               MOVE IN OUTPUT CARD          00212**6\n         OI    RDWFLAGX,RDWXXSNC           SET TO ACCEPT NEW STATEMENT  00213**9\n         OI    JCTUSER0+1,PUNCHBIT         SET AS INSERTED              00214**6\n         B     #EXIT                       EXIT                         00215**6\nCHKOUT   DS    0H                                                       00216**6\n         TM    JCTUSER0+1,OUTBIT           Q. ALREADY DONE              00217**6\n         BO    CHKLIB                      A. ONE - YES                 00218**6\n         MVC   JCTXWRK,OUTPUT              MOVE IN OUTPUT CARD          00219**6\n         OI    RDWFLAGX,RDWXXSNC           SET TO ACCEPT NEW STATEMENT  00220**9\n         OI    JCTUSER0+1,OUTBIT           SET AS INSERTED              00221**6\n         B     #EXIT                       EXIT                         00222**6\nCHKLIB   DS    0H                                                       00223**6\n         TM    JCTUSER0+1,LIBBIT           Q. ALREADY DONE              00224**6\n         BO    CHKHOLD                     A. ONE - YES                 00225**6\n         MVC   JCTXWRK,JOBLIB              MOVE IN OUTPUT CARD          00226**6\n         OI    RDWFLAGX,RDWXXSNC           SET TO ACCEPT NEW STATEMENT  00227**9\n         OI    JCTUSER0+1,LIBBIT           SET AS INSERTED              00228**6\n         B     #EXIT                       EXIT                         00229**6\nCHKHOLD  DS    0H                                                       00230**6\n         MVC   JCTXWRK,#HOLD               MOVE IN HELD CARD            00231**6\n         OI    RDWFLAGX,RDWXXSNC           SET TO ACCEPT NEW STATEMENT  00232**9\n         OI    JCTUSER0+1,HOLDBIT          SET AS INSERTED              00233**6\n         B     #EXIT                       EXIT                         00234**6\n#CHKJOB  DS    0H                                                       00235**6\n         LA    R15,0                                                    00236**6\n         CLI   JCTUSER0,X'FF'             Q. CIS JOB                    00237**6\n         BER   R14                        A. EQUAL - YES                00238**6\n         LA    R15,4                                                    00239**6\n         BR    R14                                                      00240**6\n* FLAGS                                                                 00241**6\nJOBBIT   EQU   B'00000001'                JOB CARD FOUND                00242**6\nCONTBIT  EQU   B'00000010'                LAST CARD CONTINUED           00243**6\nROUTEBIT EQU   B'00000100'                ROUTE PRINT CARD INSERTED     00244**6\nOUTBIT   EQU   B'00001000'                OUTPUT CARD INSERTED          00245**6\nPUNCHBIT EQU   B'00010000'                ROUTE PUNCH CARD INSERTED     00246**6\nHOLDBIT  EQU   B'00100000'                CARD NEEDS TO BE RE-INSERTED  00247**6\nLIBBIT   EQU   B'01000000'                JOBLIB CARD HAS BEEN INSERTED 00248**6\nCLSBIT   EQU   B'10000000'                JOBCLASS CARD INSERTED        00249**6\nMOVEDSN  MVC   #DSNAME(0),4(R2)            MOVE IN DSNAME               00250**6\nCLEAR    MVC   1(0,R5),0(R5)                                            00251**6\n#NAME    CAMLST NAME,#DSNAME,,#VOLIST                                   00252**6\nSAVEJOB  DS    A                                                        00253**6\n#VOLIST  DS    0H,265C                                                  00254**6\nTMRECORD TMRECORD                                                       00255**6\nWTOLIST  DC    AL2(L'PREFIX+L'#CARD+4,0)                                00256**6\nPREFIX   DC    C'$XIT4 - '                                              00257**6\n#CARD    DS    CL80                                                     00258**6\n#HOLD    DS    CL80                                                     00259**6\nPUNCH    DC    CL80'/*ROUTE PUNCH WBWEST                        $XIT4'  00260**6\nROUTE    DC    CL80'/*ROUTE PRINT WBEAST                        $XIT4'  00261**6\nOUTPUT   DC    CL80'//JESDS OUTPUT JESDS=ALL,DEST=LOCAL,CLASS=W $XIT4'  00262**6\nJOBLIB   DC    CL80'//JOBLIB DD DSN=WDS.LINKLIB,DISP=SHR        $XIT4'  00263**6\nSETUPM   DC    CL80'/*SETUP JOB CLASS=                          $XIT4'  00264**6\n#DSNAME  DS    CL44                                                     00265**6\nCATMSG   DC    CL9'NOT CATLG'                                           00266**6\nSETUP    DC    C'/*SETUP'                                               00267**6\nJOB      DC    C' JOB '                                                 00268**6\n#KEYWORD DC    CL4'DSN='                                                00269**6\nBLANKS   DC    CL44' '                                                  00270**6\nTWO      DC    H'2'                                                     00271**6\nSIX      DC    H'6'                                                     00272**6\n         LTORG                                                          00273**6\n        $MODEND                                                         00274**6\n         END    ,                                                       00275**6\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PRIMDOWN": {"ttr": 1539, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n @ AREA(DYNAMIC) SCROLL(ON)\n)BODY\n%-----------------------  ISPF/PDF DOWN    OPTION MENU  ------------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%      \u00a2+ $AVRSNY     - Sysout viewing WBEAST users         +TIME     - &ZTIME\n%      $+ $AVRS       - Sysout viewing WBWEST users         +DATE     - &ZDATE\n%      A+ ABR/FDR     - Automatic Backup and Recovery       +JULDATE  - &ZJDATE\n%      F+ FILE-AID    - FILE-AID SPF extened Edit and Browse\n%      J+ JCLCHECK    - Analyze and Document JCL\n%      L+ LISTCAT     - Fullscreen LISTC\n%      P+ PANVALET    - Browse, Edit, and Utilities\n%      S+ SDSF        - Spool Display and Search Facility\n%\n%\n%\n%\n%\n%\n%\n%\n%                                   @D@\n+Scroll%UP+for more options.\n%\n+Enter%END+command to return to previous menu.\n)INIT\n  &DYNAM = '+ '\n  .HELP = ISR00003\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n  VPUT (ZHTOP,ZHINDEX) PROFILE\n)PROC\n IF (&ZCMD = &Z)\n   IF (&ZVERB = UP,DOWN,RIGHT,LEFT)\n      &ZCMD = &ZVERB\n &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n       /*       6,'PGM(ISRPTC)'                        */\n                6,'PGM(TSO0)'\n                7,'PGM(ISRYXDR) NOCHECK'\n                8,'PANEL(ISRLPRIM)'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n        /***********************************************/\n        /*    EVERYTHING BEFORE THIS IS STOCK IBM PDF  */\n        /***********************************************/\n                \u00a2,'PGM($AVRSPF) PARM($.NY) NOCHECK NEWAPPL($AVR)'\n                $,'PGM($AVRSPF) PARM(&ZCMD) NOCHECK NEWAPPL($AVR)'\n                A,'PANEL(ABRPRIME)'\n                B,'PANEL(BGS000)'\n                I,'PGM(BLGINIT) PARM(SESS(OP))'\n                F,'PANEL(IFAMU01) NEWAPPL(FAXE)'\n                J,'CMD(%JCKSPF)'\n                L,'CMD(%CATCMD)'\n                O,'PANEL(OMSPF02) NEWAPPL(OMEG)'\n                P,'PGM(IPNINIT) NOCHECK'\n                S,'PANEL(ZSDSFOP2) NEWAPPL(ISF)'\n                U,'PANEL(USERSEL)'\n                W,'PANEL(@WOPT)'\n               OC,'PANEL(OCSPF02) NEWAPPL(OMEG)'\n              ABR,'PANEL(ABRPRIME)'\n              ABE,'CMD(%ABND#C)'\n              ACF,'PANEL(ACFOPTS)'\n              AST,'PGM(AST0SPFC) PARM(I)'\n              CDS,'PANEL(OPTC)'\n            FORMS,'PANEL(ASP100)'\n              FTP,'PANEL(PCXFR00)'\n              PDS,'PANEL(PDS@PRIM)'\n              SAS,'CMD(%SAS001)'\n           SASLPA,'CMD(%SASLPA1)'\n              TUT,'PGM(TUTPRNT1)'\n              VPS,'PANEL(VPS@PRIM)'\n              WTS,'PANEL(WTS#P)'\n              XPF,'CMD(%XPFSPF)'\n             ACFM,'PANEL(ACFM0000)'\n             COMP,'CMD(%@WOPT2)'\n             IDTF,'PANEL(TRC#P)'\n             INFO,'PGM(BLGINIT) PARM(SESS(OP))'\n             IOCP,'CMD(%IOCPCMD1)'\n             ONLF,'PANEL(ONL$PRIM)'\n             SMPE,'PGM(GIMISCV) PARM(&ZCMD) NEWAPPL(SMP2) NOCHECK'\n             SORT,'CMD(%ASP001U)'\n             TECH,'PANEL(USERTECH)'\n             VTOC,'CMD(%VTOCCMD1)'\n            DITTO,'PGM(DUTDITTO) NEWAPPL(DUT)'\n            INFOA,'PGM(BLGINIT) PARM(SESS(WB))'\n            PHONE,'PANEL(PHONPRIM)'\n            TCOMP,'CMD(%@WOPT1)'\n           DOCLIB,'CMD(%ONLFUSER)'\n          ARFLIST,'CMD(%ARFLIST)'\n          BLKSIZE,'PANEL(BLKOPT01)'\n          FINANCE,'PGM(BLGINIT) PARM(SESS(fi))'\n          PAYROLL,'PANEL(JPR0000)'\n           JPRLOG,'PANEL(JPR1010)'\n          WBNRULE,'CMD(%WBNRCMD1)'\n         WRKPAPER,'PANEL(@IFP000)'\n              ' ',' '\n               UP,'EXIT'\n             LEFT,'EXIT'\n             DOWN,'EXIT'\n            RIGHT,'EXIT'\n                X,'EXIT'\n                *,'?' )\n  IF (&ZCMD = 'S')\n     &ZSEL  = 'PGM(ISFISP) NEWAPPL(ISF)'\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRIMLEFT": {"ttr": 1542, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n @ AREA(DYNAMIC) SCROLL(ON)\n)BODY\n%-----------------------  ISPF/PDF  LEFT   OPTION MENU  ------------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%    ABE+ ABEND     - Display common causes of abends       +TIME     - &ZTIME\n%    AST+ ASTUTE    - ASTUTE DASD utilities                 +DATE     - &ZDATE\n%    PDS+ PDS       - Partition dataset command processor   +JULDATE  - &ZJDATE\n%    SAS+ SAS       - SAS interactive option\n% SASLPA+ SAS       - SAS interactive option (if sas datasets preallocated)\n%    VPS+ VPSPRINT  - Vtam local printer services and control\n%    FTP+ FORTE     - Forte file transfer utility\n%   ACFM+ ACFMINE   - Build ACF2 data access rules\n%   COMP+ COMPRESS  - Compress a PDS in batch with saftey backup\n%   INFO+ INFO      - IBM's Information System utilities\n%   VTOC+ VTOC      - Dasd VTOC command processor\n%  TCOMP+ COMPILE   - Batch test compile\n%BLKSIZE+ BLKSIZE   - Calculate blocksize for disk/tape devices\n%ARFLIST+ ARFLIST   - List ARF Tables\n%\n%\n%                                   @D@\n+Scroll%RIGHT+for more options.\n%\n+Enter%END+command to return to previous menu.\n)INIT\n  &DYNAM = '+ '\n  .HELP = ISR00003\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n  VPUT (ZHTOP,ZHINDEX) PROFILE\n)PROC\n IF (&ZCMD = &Z)\n   IF (&ZVERB = UP,DOWN,RIGHT,LEFT)\n      &ZCMD = &ZVERB\n &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n       /*       6,'PGM(ISRPTC)'        */\n                6,'PGM(TSO0)'\n                7,'PGM(ISRYXDR) NOCHECK'\n                8,'PANEL(ISRLPRIM)'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n        /***********************************************/\n        /*    EVERYTHING BEFORE THIS IS STOCK IBM PDF  */\n        /***********************************************/\n                \u00a2,'PGM($AVRSPF) PARM($.NY) NOCHECK NEWAPPL($AVR)'\n                $,'PGM($AVRSPF) PARM(&ZCMD) NOCHECK NEWAPPL($AVR)'\n                A,'PANEL(ABRPRIME)'\n                B,'PANEL(BGS000)'\n                I,'PGM(BLGINIT) PARM(SESS(OP))'\n                F,'PANEL(IFAMU01) NEWAPPL(FAXE)'\n                J,'CMD(%JCKSPF)'\n                L,'CMD(%CATCMD)'\n                O,'PANEL(OMSPF02) NEWAPPL(OMEG)'\n                P,'PGM(IPNINIT) NOCHECK'\n                S,'PANEL(ZSDSFOP2) NEWAPPL(ISF)'\n                U,'PANEL(USERSEL)'\n                W,'PANEL(@WOPT)'\n               OC,'PANEL(OCSPF02) NEWAPPL(OMEG)'\n              ABR,'PANEL(ABRPRIME)'\n              ABE,'CMD(%ABND#C)'\n              ACF,'PANEL(ACFOPTS)'\n              AST,'PGM(AST0SPFC) PARM(I)'\n              CDS,'PANEL(OPTC)'\n            FORMS,'PANEL(asp100)'\n              FTP,'PANEL(PCXFR00)'\n              PDS,'PANEL(PDS@PRIM)'\n              SAS,'CMD(%SAS001)'\n           SASLPA,'CMD(%saslpa1)'\n              TUT,'PGM(TUTPRNT1)'\n              VPS,'PANEL(VPS@PRIM)'\n              WTS,'PANEL(WTS#P)'\n              XPF,'CMD(%XPFSPF)'\n             ACFM,'PANEL(ACFM0000)'\n             COMP,'CMD(%@WOPT2)'\n             IDTF,'PANEL(TRC#P)'\n             INFO,'PGM(BLGINIT) PARM(SESS(OP))'\n             IOCP,'CMD(%IOCPCMD1)'\n             ONLF,'PANEL(ONL$PRIM)'\n             SMPE,'PGM(GIMISCV) PARM(&ZCMD) NEWAPPL(SMP2) NOCHECK'\n             SORT,'CMD(%ASP001U)'\n             TECH,'PANEL(USERTECH)'\n             VTOC,'CMD(%VTOCCMD1)'\n            DITTO,'PGM(DUTDITTO) NEWAPPL(DUT)'\n            INFOA,'PGM(BLGINIT) PARM(SESS(WB))'\n            PHONE,'PANEL(PHONPRIM)'\n            TCOMP,'CMD(%@WOPT1)'\n           DOCLIB,'CMD(%ONLFUSER)'\n          ARFLIST,'CMD(%ARFLIST)'\n          BLKSIZE,'PANEL(BLKOPT01)'\n          FINANCE,'PGM(BLGINIT) PARM(SESS(fi))'\n          PAYROLL,'PANEL(JPR0000)'\n           JPRLOG,'PANEL(JPR1010)'\n          WBNRULE,'CMD(%WBNRCMD1)'\n         WRKPAPER,'PANEL(@IFP000)'\n              ' ',' '\n            RIGHT,'EXIT'\n             LEFT,'EXIT'\n             DOWN,'EXIT'\n               UP,'EXIT'\n                X,'EXIT'\n                *,'?' )\n  IF (&ZCMD = 'S')\n     &ZSEL  = 'PGM(ISFISP) NEWAPPL(ISF)'\n &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRIMRGHT": {"ttr": 1545, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n @ AREA(DYNAMIC) SCROLL(ON)\n)BODY\n%-----------------------  ISPF/PDF  RIGHT  OPTION MENU  ------------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%  BOOKS+ INFO/LIB  - IBM nessage manuals online            +TIME     - &ZTIME\n%   IDTF+ XMIT/REC  - Interactive data transmission facility+DATE     - &ZDATE\n%                                                           +JULDATE  - &ZJDATE\n%                                                           +TIME     - &ZTIME\n%\n%\n%\n%                 This panel is not in use currently\n%             it will contain new functions in the future\n%\n%\n%\n%\n%\n%\n%\n%                                   @D@\n+Scroll%LEFT+for more options.\n%\n+Enter%END+command to return to previous menu.\n)INIT\n  &DYNAM = '+ '\n  .HELP = ISR00003\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n  VPUT (ZHTOP,ZHINDEX) PROFILE\n)PROC\n IF (&ZCMD = &Z)\n   IF (&ZVERB = UP,DOWN,RIGHT,LEFT)\n      &ZCMD = &ZVERB\n &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n        /*      6,'PGM(ISRPTC)'   OLD IBM OPTION 6 TSO PGM */\n                6,'PGM(TSO0)'\n                7,'PGM(ISRYXDR) NOCHECK'\n                8,'PANEL(ISRLPRIM)'\n                9,'PANEL(ISRDIIS)'\n             ISMF,'PGM(DGTFMD01) PARM(&ZCMD) NEWAPPL(DGT) NOCHECK'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n        /***********************************************/\n        /*    EVERYTHING BEFORE THIS IS STOCK IBM PDF  */\n        /***********************************************/\n                \u00a2,'PGM($AVRSPF) PARM($.NY) NOCHECK NEWAPPL($AVR)'\n                $,'PGM($AVRSPF) PARM(&ZCMD) NOCHECK NEWAPPL($AVR)'\n                A,'PANEL(ABRPRIME)'\n                B,'PANEL(BGS000)'\n                I,'PGM(BLGINIT) PARM(SESS(OP))'\n                F,'PANEL(IFAMU01) NEWAPPL(FAXE)'\n                J,'CMD(%JCKSPF)'\n                L,'CMD(%CATCMD)'\n                O,'PANEL(OMSPF02) NEWAPPL(OMEG)'\n                P,'PGM(IPNINIT) NOCHECK'\n                S,'PANEL(ZSDSFOP2) NEWAPPL(ISF)'\n                U,'PANEL(USERSEL)'\n                W,'PANEL(@WOPT)'\n               OC,'PANEL(OCSPF02) NEWAPPL(OMEG)'\n              ABR,'PANEL(ABRPRIME)'\n              ABE,'CMD(%ABND#C)'\n              ACF,'PANEL(ACFOPTS)'\n              APT,'CMD(%APT) NOCHECK'\n              AST,'PGM(AST0SPFC) PARM(I)'\n              TUT,'PGM(TUTPRNT1)'\n              CDS,'PANEL(OPTC)'\n            FORMS,'PANEL(asp100)'\n              FTP,'PANEL(PCXFR00)'\n              PDS,'PANEL(PDS@PRIM)'\n              SAS,'CMD(%SAS001)'\n           SASLPA,'CMD(%SASLPA1)'\n              SSR,'CMD(%SSRALLOC) NEWAPPL(SSR) NOCHECK'\n              VPS,'PANEL(VPS@PRIM)'\n              WTS,'PANEL(WTS#P)'\n              XPF,'CMD(%XPFSPF) NEWAPPL'\n             ACFM,'PANEL(ACFM0000)'\n             COMP,'CMD(%@WOPT2)'\n             IDTF,'PANEL(TRC#P)'\n             INFO,'PGM(BLGINIT) PARM(SESS(OP))'\n             IOCP,'CMD(%IOCPCMD1)'\n             ONLF,'PANEL(ONL$PRIM)'\n           DOCLIB,'PANEL(ONL$DOCL)'\n             SMPE,'PGM(GIMISCV) PARM(&ZCMD) NEWAPPL(SMP2) NOCHECK'\n             SORT,'CMD(%ASP001U)'\n             TECH,'PANEL(USERTECH)'\n             VTOC,'CMD(%VTOCCMD1)'\n            DITTO,'PGM(DUTDITTO) NEWAPPL(DUT)'\n            INFOA,'PGM(BLGINIT) PARM(SESS(WB))'\n            PHONE,'PANEL(PHONPRIM)'\n            TCOMP,'CMD(%@WOPT1)'\n          INFOLIB,'PANEL(INFOLIB)'\n            BOOKS,'PANEL(INFOLIB)'\n          MANUALS,'PANEL(INFOLIB)'\n          ARFLIST,'CMD(%ARFLIST)'\n          BLKSIZE,'PANEL(BLKOPT01)'\n          FINANCE,'PGM(BLGINIT) PARM(SESS(fi))'\n          PAYROLL,'PANEL(JPR0000)'\n           JPRLOG,'PANEL(JPR1010)'\n          WBNRULE,'CMD(%WBNRCMD1)'\n         WRKPAPER,'PANEL(@IFP000)'\n              ' ',' '\n             LEFT,'EXIT'\n             DOWN,'EXIT'\n               UP,'EXIT'\n            RIGHT,'EXIT'\n                X,'EXIT'\n                *,'?' )\n  IF (&ZCMD = 'S')\n     &ZSEL  = 'PGM(ISFISP) NEWAPPL(ISF)'\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRIMUP": {"ttr": 1548, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n @ AREA(DYNAMIC) SCROLL(ON)\n)BODY\n%-----------------------  ISPF/PDF    UP   OPTION MENU  ------------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%                                                           +TIME     - &ZTIME\n%WBNRULE+ WBNRULE  - Control ACF2 utility                   +DATE     - &ZDATE\n%                                                           +JULDATE  - &ZJDATE\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%\n%                                   @D@\n+Scroll%DOWN+for more options.\n%\n+Enter%END+command to return to previous menu.\n)INIT\n  &DYNAM = '+ '\n  .HELP = ISR00003\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n  VPUT (ZHTOP,ZHINDEX) PROFILE\n)PROC\n IF (&ZCMD = &Z)\n   IF (&ZVERB = UP,DOWN,RIGHT,LEFT)\n      &ZCMD = &ZVERB\n &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n        /*      6,'PGM(ISRPTC)'           */\n                6,'PGM(TSO0)'\n                7,'PGM(ISRYXDR) NOCHECK'\n                8,'PANEL(ISRLPRIM)'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n        /***********************************************/\n        /*    EVERYTHING BEFORE THIS IS STOCK IBM PDF  */\n        /***********************************************/\n                \u00a2,'PGM($AVRSPF) PARM($.NY) NOCHECK NEWAPPL($AVR)'\n                $,'PGM($AVRSPF) PARM(&ZCMD) NOCHECK NEWAPPL($AVR)'\n                A,'PANEL(ABRPRIME)'\n                B,'PANEL(BGS000)'\n                I,'PGM(BLGINIT) PARM(SESS(OP))'\n                F,'PANEL(IFAMU01) NEWAPPL(FAXE)'\n                J,'CMD(%JCKSPF)'\n                L,'CMD(%CATCMD)'\n                O,'PANEL(OMSPF02) NEWAPPL(OMEG)'\n                P,'PGM(IPNINIT) NOCHECK'\n                S,'PANEL(ZSDSFOP2) NEWAPPL(ISF)'\n                U,'PANEL(USERSEL)'\n                W,'PANEL(@WOPT)'\n               OC,'PANEL(OCSPF02) NEWAPPL(OMEG)'\n              ABR,'PANEL(ABRPRIME)'\n              ABE,'CMD(%ABND#C)'\n              ACF,'PANEL(ACFOPTS)'\n              AST,'PGM(AST0SPFC) PARM(I)'\n              CDS,'PANEL(OPTC)'\n            FORMS,'PANEL(asp100)'\n              FTP,'PANEL(PCXFR00)'\n              PDS,'PANEL(PDS@PRIM)'\n              SAS,'CMD(%SAS001)'\n           SASLPA,'CMD(%saslpa1)'\n              TUT,'PGM(TUTPRNT1)'\n              VPS,'PANEL(VPS@PRIM)'\n              WTS,'PANEL(WTS#P)'\n              XPF,'CMD(%XPFSPF)'\n             ACFM,'PANEL(ACFM0000)'\n             COMP,'CMD(%@WOPT2)'\n             IDTF,'PANEL(TRC#P)'\n             INFO,'PGM(BLGINIT) PARM(SESS(OP))'\n             IOCP,'CMD(%IOCPCMD1)'\n             ONLF,'PANEL(ONL$PRIM)'\n             SMPE,'PGM(GIMISCV) PARM(&ZCMD) NEWAPPL(SMP2) NOCHECK'\n             SORT,'CMD(%ASP001U)'\n             TECH,'PANEL(USERTECH)'\n             VTOC,'CMD(%VTOCCMD1)'\n            DITTO,'PGM(DUTDITTO) NEWAPPL(DUT)'\n            INFOA,'PGM(BLGINIT) PARM(SESS(WB))'\n            PHONE,'PANEL(PHONPRIM)'\n            TCOMP,'CMD(%@WOPT1)'\n           DOCLIB,'CMD(%ONLFUSER)'\n          ARFLIST,'CMD(%ARFLIST)'\n          BLKSIZE,'PANEL(BLKOPT01)'\n          FINANCE,'PGM(BLGINIT) PARM(SESS(fi))'\n          PAYROLL,'PANEL(JPR0000)'\n           JPRLOG,'PANEL(JPR1010)'\n          WBNRULE,'CMD(%WBNRCMD1)'\n         WRKPAPER,'PANEL(@IFP000)'\n              ' ',' '\n                UP,'EXIT'\n              LEFT,'EXIT'\n             RIGHT,'EXIT'\n              DOWN,'EXIT'\n                 X,'EXIT'\n                *,'?' )\n  IF (&ZCMD = 'S')\n     &ZSEL  = 'PGM(ISFISP) NEWAPPL(ISF)'\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RESTORE": {"ttr": 1551, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* MACRO NAME: RESTORE                                                */\n/*                                                                    */\n/* FUNCTION: RELOAD LAST SAVED COPY OF A MEMBER.                      */\n/*                                                                    */\nISREDIT MACRO (APARM)\n\n/*                                                                   */\n/* ----------------->   ITEM DOCUMENTATION    <--------------------- */\n/* |                                                               | */\n/* | SYNTAX HELP                                                   | */\n/* |                                                               | */\n/* ----------------->   ITEM DOCUMENTATION    <--------------------- */\n/*                                                                   */\n  IF &STR(&APARM.) = &STR(HELP) THEN +\n    DO\n       ISPEXEC DISPLAY PANEL(#RESTORE)\n     EXIT CODE(0)\n    END\n\n  CONTROL ASIS\n  ISREDIT (MEMBER) = MEMBER\n  IF &MEMBER = THEN DO\n    SET ZEDSMSG = ONLY AVAILABLE IN PDS\n    SET ZEDLMSG = YOU MUST PERFORM THIOS FUNCTION YOURSELF ON PS FILES.\n    EXIT\n  END\n  ISREDIT (CHANGED) = DATA_CHANGED\n  IF &CHANGED = YES THEN DO\n    ISREDIT EXCLUDE ALL\n    ISREDIT COPY &MEMBER BEFORE .ZFIRST\n    ISREDIT DELETE ALL EX\n    SET ZEDSMSG = MEMBER RESTORED\n    SET ZEDLMSG = THIS COPY WAS REPLACED WITH THE LAST DISK ONE.\n    EXIT\n  END\n  ELSE DO\n    SET ZEDSMSG = RESTORE NOT REQUIRED.\n    SET ZEDLMSG = THIS COPY WAS NOT CHANGED FROM THE LAST DISK ONE.\n  END\n  ISPEXEC SETMSG (MSG(ISRZ000)\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFPRM00": {"ttr": 1793, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "     ACTIVE                       /* ACTIVE SMF RECORDING */\n     DSNAME(SYS1.MANA,SYS1.MAND)  /* TWO DATA SETS MANA AND MANB */\n     NOPROMPT                     /* NO PROMPT UNLESS ERROR */\n     REC(PERM)                    /* TYPE 17 PERM RECORDS ONLY */\n     BUFNUM(4,40)                 /* 10 - 4096 BUFFERS ALWAYS AND\n                                     ALLOW UP TO 40 BEFORE SUSPENDING\n                                     A USER FOR BUFFER SHORTAGE */\n     MAXDORM(3000)                /* WRITE AN IDLE BUF. AFTER 30 MIN */\n     NOSTATUS                     /* DO NOT WRITE SMF STATUS RECS */\n     JWT(0050)                    /* 522 AFTER 20 MINUTES */\n /* NOTE : CHANGING SID REQUIRES A COLD START OF JES2 */\n     SID(Q084)                    /* SYSTEM ID */\n     LISTDSN                      /* LIST DATA SET STATUS AT IPL */\n     SYS(NOTYPE(8:11,14,15,17:19,22,23,31,43,45,60,62:64,67:69,90),\n         EXITS(IEFU29,IEFU83,IEFU84,IEFACTRT,IEFUJV,IEFUSI,IEFUJI,\n               IEFUTL),\n         INTERVAL(010000),\n         DETAIL)\n\n     SUBSYS(STC,\n            NOTYPE(8:11,14,15,17:19,22,23,31,40,43,45,60,62:64,67:69,\n                   90),\n         EXITS(IEFU29,IEFU83,IEFU84),\n         INTERVAL(010000),\n         DETAIL)\n\n     /* WRITE ALL RECORDS EXCEPT THOSE LISTED, TAKE ALL SMF EXITS\n        LISTED, NOTE: IEFU29 EXECUTES IN THE MASTER ASID WHICH IS A\n        STC ADDRESS SPACE SO IEFU29 MUST BE ON FOR STC. USE ALL OTHER\n        SYS PARMETERES AS A DEFAULT THERE IS A TWO HOUR INTERVAL\n        ON RECORDS WRITTEN */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF32SAS": {"ttr": 1795, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//XKZS015N JOB (SD,A,SPM000,DZK),'SMF TYPE 32',\n//          CLASS=M,MSGCLASS=T,NOTIFY=XKZS,TIME=(20,0)\n/*JOBPARM R=131\n/*SETUP DSN=WB.A.ABL001T1(-1)\n//STEP1     EXEC  SAS,OPTIONS='TIME=MAX'\n//*SMFIN    DD DSN=WB.A.ABL010D1,DISP=SHR\n//*SMFIN    DD DSN=XKZS.ABLDATA.WEEK1,DISP=SHR\n//SMFIN    DD DSN=WB.A.ABL001T1(-1),DISP=SHR\n//SYSIN    DD   *\n  DATA SASIN ;\n  INFILE SMFIN CLOSE=FREE MISSOVER;\n  KEEP  TTIME TDATE USERID CMDNAME NOTIME TCBI SRBI TRANCNT EXCPCNT\n         TERMIO CPUTIME ;\n  INPUT @2 RECNO PIB1. @3 TIMEDATE SMFSTAMP8. @43 NOCMD PIB2. @;\n  IF RECNO = 32 AND NOCMD >= 2 THEN DO;\n    TTIME = TIMEPART(TIMEDATE) ;\n    TDATE = DATEPART(TIMEDATE) ;\n    INPUT @57 USERID $CHAR8. @221 CMDNAME $CHAR8. @229 NOTIME PIB4.\n          @233 TCBI PIB4.2 @237 SRBI PIB4.2 @241 TGET PIB4.\n          @245 TPUT PIB4. @;\n          TERMIO = TGET + TPUT;\n          CPUTIME = TCBI + SRBI ;\n    INPUT @249 TRANCNT PIB4. @253 EXCPCNT PIB4. ;\n    IF 'DYNA' = SUBSTR(CMDNAME,1,4) THEN OUTPUT;\n  END;\n  RETURN;\n*______________________________________________________________________*\n*                                                                      *\n*         RECORD TYPE 32  : TSO/E WORK ACCOUNTING RECORD               *\n*______________________________________________________________________;\n  PROC SORT DATA=SASIN ;\n       BY USERID TDATE TTIME CMDNAME ;\n  TITLE 'DYNASOFT USAGE DETAIL REPORT' ;\n  PROC PRINT DATA=SASIN LABEL UNIFORM N;\n   LABEL TDATE='DATE' TTIME='TIME' CMDNAME='COMMAND'\n         TCBI='TCB TIME' SRBI='SRB TIME' EXCPCNT='# EXCPS'\n         TERMIO='TERM I/O' NOTIME='TIMES EXECUTED' ;\n   BY USERID;\n   SUM TCBI SRBI EXCPCNT TERMIO NOTIME ;\n   FORMAT TCBI SRBI COMMA8.2 ;\n   FORMAT TDATE MMDDYY8. TTIME TIME. ;\n   ID TDATE TTIME USERID CMDNAME ;\n   VAR TCBI SRBI EXCPCNT TERMIO NOTIME ;\n  PROC SUMMARY DATA=SASIN ;\n   CLASS USERID ;\n   VAR TCBI SRBI CPUTIME EXCPCNT TERMIO NOTIME ;\n   OUTPUT OUT=TSUM SUM= ;\n  TITLE 'DYNASOFT USAGE SUMMARY REPORT' ;\n  PROC PRINT DATA=TSUM LABEL UNIFORM N;\n   LABEL CMDNAME='COMMAND' TCBI='TCB TIME' SRBI='SRB TIME'\n         CPUTIME='CPU TIME' EXCPCNT='# EXCPS'\n         TERMIO='TERM I/O' NOTIME='TIMES EXECUTED' ;\n   FORMAT CPUTIME TCBI SRBI COMMA8.2 ;\n   ID USERID ;\n   VAR CPUTIME TCBI SRBI EXCPCNT TERMIO NOTIME ;\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMPEIEE": {"ttr": 1797, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//XKZS025U  JOB (SD,A,SPM000,DZK),'LC00025',\n//         CLASS=M,MSGCLASS=T,\n//         NOTIFY=XKZS\n/*JOBPARM R=1318,K=60\n//*\n//* DOC  THIS JOB MAY BE USED TO INSTALL THE TSO ACCOUTING  EXIT\n//*       ROUTINE  'IEEMB846' . THE JOB CONSISTS OF TWO STEPS:\n//*       * STEP 1 - ASSEMBLES 'IEEMB846'\n//*       * STEP 2 - USES SMP TO INSTALL THE EXIT ROUTINE WITH PTF\n//*         NUMBER LC00025.\n//*\n//*\n//STEP01 EXEC PGM=PAN#1\n//SYSPRINT DD SYSOUT=*\n//PANDD1 DD DSN=WB.A.ASPPAN,DISP=SHR\n//PANDD2 DD DISP=(,PASS),DSN=&&SRC(IEEMB846),UNIT=D,\n//          SPACE=(CYL,(2,1,3)),DCB=(LRECL=80,RECFM=FB,BLKSIZE=9040)\n//SYSIN DD *\n++WRITE WORK,IEEMB846\n//STEPA1   EXEC ASMHC,PARM.ASM='RENT'\n//ASM.SYSLIB DD  DISP=SHR,DSN=SYS1.SMPMTS,UNIT=D,VOL=SER=NEWRES\n//         DD  DISP=SHR,DSN=SYS1.MACLIB,UNIT=D,VOL=SER=NEWRES\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN,UNIT=D,VOL=SER=SMPE80\n//SYSPUNCH DD DISP=SHR,DSN=SYS1.OBJPDS01(IEEMB846),\n//         UNIT=D,VOL=SER=NEWRES\n//SYSIN    DD DISP=(OLD,PASS),DSN=&&SRC(IEEMB846)\n//SMPE    EXEC PGM=GIMSMP,REGION=4096K,\n//             COND=(0,NE)\n//SMPCSI   DD  DISP=SHR,DSN=SMPE.WBIPO.GLOBAL.CSI\n//SMPLOG   DD  DUMMY\n//SMPLOGA  DD  DUMMY\n//SYSPRINT DD  SYSOUT=*\n//SMPCNTL  DD *\n SET BDY(GLOBAL) .\n   REJECT  S(LC00025) BYPASS(APPCHK) .\n   RESETRC .\n   RECEIVE S(LC00025) SYSMODS .\n SET BDY(MVSTEST) .\n   APPLY S(LC00025) REDO  BYPASS(HOLDUSER).\n//SMPPTFIN DD  DATA,DLM=@@\n++ USERMOD (LC00025)  /* TSO COMMAND ACCOUNTING EXIT */ .\n++ VER (Z038) FMID(HBB2102) .\n++ MOD (IEEMB846) TXLIB(OBJPDS01) .\n@@\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMPEPFK": {"ttr": 1799, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//XKZS0014  JOB (SD,A,SPM000,DZK),'LC00014 PFK',\n// NOTIFY=XKZS,CLASS=M,MSGCLASS=T,COND=(1,LT) ,TYPRUN=HOLD\n/*JOBPARM R=1318,K=60\n//*==> IS IN SMPE AND XA FORMAT DEFINE PFK'S FOR THE OS CONSOLES .\n//*\n//STEP01 EXEC PGM=PAN#1\n//SYSPRINT DD SYSOUT=*\n//PANDD1 DD DSN=WB.A.ASPPAN,DISP=SHR\n//PANDD2 DD DISP=(,PASS),DSN=&&SRC(IEEPK860),UNIT=D,\n//          SPACE=(CYL,(5,1,5)),DCB=(LRECL=80,RECFM=FB,BLKSIZE=9040)\n//SYSIN DD *\n++WRITE WORK,IEEPK860V2\n//ASM1    EXEC PGM=IEV90,PARM='LIST',REGION=2M\n//SYSLIB   DD DISP=SHR,DSN=SYS1.SMPMTS,UNIT=D,VOL=SER=NEWRES\n//         DD DISP=SHR,DSN=SYS1.MACLIB,UNIT=D,VOL=SER=NEWRES\n//         DD DISP=SHR,DSN=SYS1.AMODGEN,UNIT=D,VOL=SER=SMPE80\n//SYSPUNCH DD DISP=SHR,DSN=SYS1.OBJPDS01(IEEPK860),\n//         UNIT=D,VOL=SER=NEWRES\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=D,SPACE=(CYL,(5,5,5)),DSN=&&SYSUT1\n//SYSIN    DD DISP=(OLD,PASS),DSN=&&SRC(IEEPK860)\n//*\n//SMPE    EXEC PGM=GIMSMP,REGION=4096K,\n//             COND=(0,NE)\n//SMPCSI   DD  DISP=SHR,DSN=SMPE.WBIPO.GLOBAL.CSI\n//SMPLOG   DD  DUMMY\n//SMPLOGA  DD  DUMMY\n//SYSPRINT DD  SYSOUT=*\n//SMPCNTL  DD *\n SET BDY(GLOBAL) .\n   REJECT  S(LC00014) BYPASS(APPCHK) .\n   RESETRC .\n   RECEIVE S(LC00014) SYSMODS .\n SET BDY(MVSTEST) .\n   APPLY S(LC00014) REDO BYPASS(HOLDUSER) .\n//SMPPTFIN DD DATA,DLM=##\n++USERMOD (LC00014) .\n++VER(Z038) FMID(JBB2125) PRE(UZ68948) .\n++MOD(IEEPK860)  TXLIB(OBJPDS01) .\n++JCLIN .\n//LINK EXEC PGM=IEWL,PARM='NCAL,LIST,XREF'\n//OBJPDS01 DD DSN=SYS1.OBJPDS01\n//SYSLMOD DD DSN=SYS1.DCMLIB\n//SYSIN DD *\n INCLUDE OBJPDS01(IEEPK860)\n NAME IEEPK860(R)\n##\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMPETCM": {"ttr": 1801, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//XKZS026U  JOB (SD,A,SPM000,DZK),'LC00026',\n//         CLASS=M,MSGCLASS=T,\n//         NOTIFY=XKZS\n/*JOBPARM R=1318,K=60\n//*\n//* DOC  THIS JOB MAY BE USED TO INSTALL THE ISPTCM TABLE EXIT\n//*       ROUTINE  'ISPTCM' . THE JOB CONSISTS OF TWO STEPS:\n//*       * STEP 1 - ASSEMBLES 'ISPTCM'\n//*       * STEP 2 - USES SMP TO INSTALL THE EXIT ROUTINE WITH PTF\n//*         NUMBER LC00026.\n//*\n//*\n//STEP01 EXEC PGM=PAN#1\n//SYSPRINT DD SYSOUT=*\n//PANDD1 DD DSN=WB.A.ASPPAN,DISP=SHR\n//PANDD2 DD DISP=(,PASS),DSN=&&SRC(ISPTCM),UNIT=D,\n//          SPACE=(CYL,(2,1,3)),DCB=(LRECL=80,RECFM=FB,BLKSIZE=9040)\n//SYSIN DD *\n++WRITE WORK,ISPTCMV1\n//STEPA1   EXEC ASMHC,PARM.ASM='RENT'\n//ASM.SYSLIB DD  DISP=SHR,DSN=SYS1.SMPMTS,UNIT=D,VOL=SER=NEWRES\n//         DD  DISP=SHR,DSN=ISP.V2R3M0.ISPMACS,UNIT=D,VOL=SER=NEWRES\n//         DD  DISP=SHR,DSN=SYS1.MACLIB,UNIT=D,VOL=SER=NEWRES\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN,UNIT=D,VOL=SER=SMPE80\n//SYSPUNCH DD DISP=SHR,DSN=SYS1.OBJPDS01(ISPTCM),\n//         UNIT=D,VOL=SER=NEWRES\n//SYSIN    DD DISP=(OLD,PASS),DSN=&&SRC(ISPTCM)\n//SMPE    EXEC PGM=GIMSMP,REGION=4096K,\n//             COND=(0,NE)\n//SMPCSI   DD  DISP=SHR,DSN=SMPE.WBIPO.GLOBAL.CSI\n//SMPLOG   DD  DUMMY\n//SMPLOGA  DD  DUMMY\n//SYSPRINT DD  SYSOUT=*\n//SMPCNTL  DD *\n SET BDY(GLOBAL) .\n   REJECT  S(LC00026) BYPASS(APPCHK) .\n   RESETRC .\n   RECEIVE S(LC00026) SYSMODS .\n SET BDY(MVSTEST) .\n   APPLY S(LC00026) REDO  BYPASS(HOLDUSER).\n//SMPPTFIN DD  DATA,DLM=@@\n++ USERMOD (LC00026)  /* ISPTCM COMMAND CHARACTERISTICS */ .\n++ VER (Z038) FMID(HIF2302) .\n++ MOD (ISPTCM) TXLIB(OBJPDS01) .\n@@\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SWTSO": {"ttr": 1803, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET SWTSO      AT LEVEL 003 AS OF 01/27/88\n*=====================================================================* 00001\n* SWTSO   TSO COMMAND INTERFACE PROVIDES COMMAND ACCOUNTING UNDER SMF * 00002\n*=====================================================================* 00003\n                                        SPACE                           00004\n         PRINT NOGEN                                                    00005\n         REGS                                                           00006\nSWTSO    CSECT                                                          00007\n                                        SPACE                           00008\n         USING *,R15                    LINKAGE CONVETION               00009\n         B     START                                                    00010\n         DROP  R15                                                      00011\n         DC    AL1(START-*-1)                                           00012\n         DC    C'SWTSO   '                                              00013\n         DC    C'00 &SYSPARM'                                           00014\n         DC    C'&SYSDATE'                                              00015\n         DC    C'&SYSTIME'                                              00016\n         DC    C'WARNER BROS. INC.'                                     00017\n                                        SPACE                           00018\nSTART    DS    0H                                                       00019\n         SAVE  (14,12)                                                  00020\n         BALR  R12,0                                                    00021\n         USING *,R12                                                    00022\n         LR    R14,R13                                                  00023\n         LA    R13,SAVE                                                 00024\n         ST    R13,8(R14)                                               00025\n         ST    R14,4(R13)                                               00026\n                                        SPACE                           00027\nGETPARM  L     R2,0(R1)                                                 00028\n         LH    R3,0(R2)                                                 00029\n         LA    R4,PARMNAME                                              00030\n         S     R3,=F'2'                                                 00031\n         BNP   PARMERR                                                  00032\n         CLI   0(R2),C'S'                                               00033**2\n         BE    GETLOOP                                                  00034\n         MVI   PARMWORD,X'00'                                           00035\n         CLI   0(R2),C'P'                                               00036**2\n         BNE   PARMERR                                                  00037\n                                        SPACE                           00038\nGETLOOP  MVC   0(1,R4),4(R2)                                            00039\n         LA    R2,1(R2)                                                 00040\n         LA    R4,1(R4)                                                 00041\n         BCT   R3,GETLOOP                                               00042\n                                        SPACE                           00043\nSVC109   LA    R15,25                                                   00044\n         SVC   109                                                      00045\n                                        SPACE                           00046\nEXIT     L     R13,4(R13)                                               00047\n         RETURN                                                         00048\n                                        SPACE                           00049\nPARMERR  LA    R15,16                                                   00050\n         B     EXIT                                                     00051\n                                        SPACE                           00052\nSAVE     DC    18F'0'                                                   00053\nPARMLIST DS    0F                                                       00054\nPARMWORD DC    F'0'                                                     00055\nPARMNAME DC    CL8' '                                                   00056\n         LTORG                                                          00057**2\n         END   SWTSO                                                    00058**3\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TRAP": {"ttr": 1805, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* ISPF EDIT MACRO: TRAP                                              */\n/*                                                                    */\n/* FUNCTION: PUT ANY TSO CP OUTPUT INTO EDIT                          */\n/* SYNTAX  : TRAP  COMMAND (PLUS ANY PARAMETERS)                      */\n/*                                                                    */\n/*                                                                    */\nISREDIT MACRO (CMDNAME)\n\n/*                                                                   */\n/* ----------------->   ITEM DOCUMENTATION    <--------------------- */\n/* |                                                               | */\n/* | SYNTAX HELP                                                   | */\n/* |                                                               | */\n/* ----------------->   ITEM DOCUMENTATION    <--------------------- */\n/*                                                                   */\n  IF &STR(&CMDNAME) = &STR(HELP) THEN +\n    DO\n       ISPEXEC DISPLAY PANEL(#TRAP)\n    EXIT CODE(0)\n    END\n\n\n  ISREDIT EXCLUDE ALL\n  ISREDIT LINE_AFTER .ZLAST = '> OUTPUT FROM TSO COMMAND : &CMDNAME <'\n  CONTROL ASIS\n  SET &I = 1\n  SET &SYSOUTTRAP = 400\n  TSOEXEC &CMDNAME\n  SET &BOT = &SYSOUTLINE\n  DO WHILE &BOT >= &I\n     SET &TEMP = &&SYSOUTLINE&I\n     ISREDIT LINE_AFTER .ZLAST = \"&TEMP\"\n     SET &I = &I + 1\n  END\nEXIT\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VPS": {"ttr": 1807, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* ISPF EDIT MACRO: VPS                                               */\n/*                                                                    */\n/* FUNCTION: VPSPRINT CURRENT EDIT INCORE DATASET.                    */\n/*                                                                    */\n/*                                                                    */\nISREDIT MACRO (KW1 KW2 KW3 KW4)\n\n/*                                                                   */\n/* ----------------->   ITEM DOCUMENTATION    <--------------------- */\n/* |                                                               | */\n/* | SYNTAX HELP                                                   | */\n/* |                                                               | */\n/* ----------------->   ITEM DOCUMENTATION    <--------------------- */\n/*                                                                   */\n  IF &STR(&KW1) = &STR(HELP) THEN +\n    DO\n       ISPEXEC DISPLAY PANEL(#VPS)\n     EXIT CODE(0)\n    END\n\n  CONTROL ASIS\n\n  ISREDIT (DATASET)  = DATASET\n  ISREDIT (MEMBER)   = MEMBER\n  ISREDIT SAVE\n\n/*                                                                   */\n/* ----------------->   ITEM DOCUMENTATION    <--------------------- */\n/* |                                                               | */\n/* | ISSUE VPSPRINT COMMAND                                        | */\n/* |                                                               | */\n/* ----------------->   ITEM DOCUMENTATION    <--------------------- */\n/*                                                                   */\n  IF &MEMBER = THEN +\n     VPSPRINT '&DATASET' &KW1 &KW2 &WK3 &KW4\n  ELSE +\n     VPSPRINT '&DATASET(&MEMBER)' &KW1 &KW2 &WK3 &KW4\n  SET &ZEDSMG = DATA SAVED AND VSPRINTED.\n  SET &ZEDLMG = DATASET '&DATASET(&MEMBER)' VPSPRINTED, &WK1\n  ISPEXEC SETMSG MSG(ISRZ000)\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT015/FILE015.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT015", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}