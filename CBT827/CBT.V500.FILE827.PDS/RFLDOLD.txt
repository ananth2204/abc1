./ ADD NAME=$$$$DOC  0100-02365-02365-1147-00051-00051-00000-JMILLER
1 -----------------------------------------------------------------
             RFLD - RACF Dataset Maintenance Dialogs.
             Version 1.1
             09/25/97
  -----------------------------------------------------------------


  John Miller
  California State University, Office of the Chancellor
  jcmiller@calstate.edu

  PLEASE: Send me email on the inevitable bugs that you may find.


1 -----------------------------------------------------------------
                     I N T R O D U C T I O N
  -----------------------------------------------------------------
  This set of ISPF components comprise an ISPF based method of
  maintaining RACF dataset profiles.  Coded using Rexx, the dialog
  is invoked by entering the Exec name, RFLD, from the ISPF option
  6 panel, or by entering TSO RFLD from other ISPF command lines.
  Example:

  EDIT ---- DATASET.NAME($$$$DOC) - 01.00 ----------------- 009 080
  COMMAND ===> TSO RFLD

  A filter criteria can optionally be specified on the command line
  to change the list of profiles displayed.   The default is to
  display profiles beginning with the user's TSO USERID.  The filter
  criteria can also be changed at will on the main RFLD panel.

  Once on the main RFLD panel, the line commands allow various
  operations to be performed on the RACF profiles, including full-screen
  manipulation of the access lists.

1 -----------------------------------------------------------------
                     I N S T A L L A T I O N
  -----------------------------------------------------------------
  Copy the following members from the temporary install PDS to
  the indicated library.  The library indicated is the DDNAME of
  the TSO allocation environment, and will be different for each
  site.

  Member:   Library:
  -------   --------
  RFLD      SYSPROC or SYSEXEC
  AULD      SYSPROC or SYSEXEC
  RFLD1     ISPPLIB
  RFLD2     ISPPLIB
  AULD1     ISPPLIB
  RFMAI50   ISPMLIB
./ ADD NAME=$DOCRFLD 0100-02365-02365-1147-00040-00040-00000-JMILLER
RFLD - Dialog to Maintain RACF Dataset Profiles

What it does:
-----------------------------------------------
This ISPF dialog lets you conveniently maintain access lists, and
do lots of other RACF tasks that are cumbersome to perform using
the IBM supplied RACF ISPF panels.  This dialog works with any
kind of resource, including dataset profiles and general resource
classes.


How to transfer file to the MVS host.
-----------------------------------------------

- Create a PDS on the MVS system, called userid.TEMP, or some
  such name.  CYL(1,1,15) is big enough.
  RECFM=FB,LRECL=80,BLKSIZE=6160 are suitable DCB parameters.

- Download the RFLD.EXE self-extracting file to a PC.  Place
  RFLD.EXE in a directory by itself, and run it.  This will
  result in all required members being extracted. (These won't be
  readable on a PC  See note below)

- FTP all the extracted files from the PC to the MVS PDS
  allocated in the first step.  Use the FTP subcommand: "BINARY"
  or equivalent to specify a binary transfer.  This is a must.
  (These FTP'd files become members of the target PDS.)

- Read the $$$$$DOC member in the PDS for further instructions.


NOTE: The files that are in this self-extracting zip file are in
EBCDIC format, so they will look like garbage on the PC, even
after being extracted.  They will however be normal, readable
EBCDIC PDS members after they are extracted and transferred to an
MVS host using Binary mode.


John C. Miller
john@jmit.com
./ ADD NAME=AULD     0100-02365-02365-1147-00274-00274-00000-JMILLER
/*------------------------------------------------------=Rexx=-*/
/* AULD - Edit authorization list                              */
/*-------------------------------------------------------------*/
/* Description:                                                */
/* This Rexx Exec is called by RFLD exec.  The purpose is      */
/* to display in ISPF table format the authorization list for  */
/* a selected RACF dataest profile.   This exec is passed the  */
/* values of 'PROFNAM', the profile name, and the absolute     */
/* value of 'GENERIC' if the profile passed is a generic       */
/* profile.                                                    */
/*-------------------------------------------------------------*/
/* Panels:                                                     */
/*   AULD1                                                     */
/* Messages                                                    */
/*   RFMAI500-RFMAI508                                         */
/* Tables                                                      */
/*   AUDISP55                                                  */
/* 2nd level Execs                                             */
/*   NONE                                                      */
/*-------------------------------------------------------------*/
/* 04/29/91 John Miller                                        */
/*-------------------------------------------------------------*/
PARSE UPPER ARG profnam x
PARSE UPPER ARG args
TRACE off

IF iget('GENERIC') THEN generic = 'GENERIC'
ELSE generic =

/*=============================================================*/
/* SET UP DEFAULT VALUES                                       */
/*=============================================================*/
ztdmark   = '* * * End of list * * *'
cc        = 0
panel     = 'AULD1'
csr       = 'ACMD'
tabname   = 'AUDISP55'
ptype     = '  Userid     Access'
maxout    = 200
names     = 'PPARM1 PPARM2'

/*=============================================================*/
/* CREATE THE TEMPORARY TABLE                                  */
/*=============================================================*/
IF \authlist() THEN SIGNAL listerr
/*=============================================================*/
/* MAIN LOOP - EXIT WHEN END (PF3) IS ENTERED (RC-8)           */
/*=============================================================*/
startlp:
cc = 0
DO WHILE cc < 8
/*=============================================================*/
/* DISPLAY THE TABLE                                           */
/*=============================================================*/
tbdis:
   ADDRESS ISPEXEC "TBDISPL" tabname,
      "PANEL("panel") CURSOR("csr")"
   cc = RC
   PARSE UPPER VAR zcmd cmd cmdprms
/*=============================================================*/
/* PROCESS COMMANDS                                            */
/*=============================================================*/
      SELECT
         WHEN cmd  = 'S'     THEN  CALL sort
         WHEN cmd  = 'SORT'  THEN  CALL sort
         WHEN cmd  = 'F'     THEN  CALL find
         WHEN cmd  = 'FIND'  THEN  CALL find
         OTHERWISE NOP
      END
/*=============================================================*/
/* PROCESS LINE COMMANDS UNTIL ALL SELECTED ROWS ARE DONE      */
/*=============================================================*/
   DO WHILE ztdsels > 0
      PARSE UPPER VAR acmd xcmd 2 anum
      IF DATATYPE(anum) /= 'NUM' THEN anum = 0
      ELSE acmd = xcmd
      SELECT
         WHEN acmd = 'I' THEN CALL insert
         WHEN acmd = 'A' THEN CALL add
         WHEN acmd = 'D' THEN CALL delete
         WHEN acmd = 'R' THEN CALL repeat
         OTHERWISE IF (pparm1 /= '') & (pparm2 /= '') THEN call add
      END
      IF ztdsels > 1 THEN DO
         ADDRESS ISPEXEC "TBDISPL" tabname
      END
      ELSE DO
         ztdsels = 0
      END
   END
END
SIGNAL exit

/*=============================================================*/
/* USER HAS EXITED THE DIALOG - CLEAN UP, CLOSE THE TABLE, ETC */
/*=============================================================*/
listerr:
SAY 'Error creating authorization list table'

exit:
ADDRESS ISPEXEC "TBEND" tabname

exit0:
EXIT



/*=============================================================*/
/* LINE COMMAND I (INSERT)                                     */
/*=============================================================*/
insert:
/* TRACE r */
   IF anum > 0 THEN max = anum
   ELSE max = 1
   DO WHILE max > 0
   ADDRESS ISPEXEC "TBVCLEAR" tabname
   ADDRESS ISPEXEC "TBADD" tabname "ORDER"
   csr = 'PPARM1'
   ADDRESS ISPEXEC "TBTOP" tabname
   RETURN

/*=============================================================*/
/* LINE COMMAND A (ADD)                                        */
/*=============================================================*/
add:
/* TRACE r */
   IF anum > 0 THEN max = anum
   ELSE max = 1
   DO WHILE max > 0
      "PERMIT '"profnam"' ID("pparm1") ACCESS("pparm2") "generic
      cc = RC
      IF cc = 0 THEN DO
         ADDRESS ISPEXEC "SETMSG MSG(RFMAI500)"
         ADDRESS ISPEXEC "TBADD" tabname
      END
      ELSE DO
         IF cc = 4 THEN ISPEXEC "SETMSG MSG(RFMAI501)"
         IF cc > 4 THEN ISPEXEC "SETMSG MSG(RFMAI503)"
      END
      csr = 'PPARM1'
      ADDRESS ISPEXEC "TBSKIP" tabname "NUMBER(+1)"
      max = max - 1
   END
   ADDRESS ISPEXEC "TBTOP" tabname
   RETURN

/*=============================================================*/
/* LINE COMMAND R (REPEAT)                                     */
/*=============================================================*/
repeat:
   IF anum > 0 THEN max = anum
   ELSE max = 1
   DO WHILE max > 0
      ADDRESS ISPEXEC "TBADD" tabname "ORDER"
      csr = 'PPARM1'
      csrr = crp + 1
      max = max - 1
   END
   RETURN

/*=============================================================*/
/* LINE COMMAND D (DELETE)                                     */
/*=============================================================*/
delete:
   IF anum > 0 THEN max = anum
   ELSE max = 1

   DO WHILE max > 0
      IF pparm1 /= '' THEN DO
         "PERMIT '"profnam"' ID("pparm1") DELETE" generic
         cc = RC
         IF cc = 0 THEN DO
            ADDRESS ISPEXEC "SETMSG MSG(RFMAI502)"
         END
         ELSE IF cc = 4 THEN DO
            ADDRESS ISPEXEC "SETMSG MSG(RFMAI501)"
         END
         ELSE DO
            ADDRESS ISPEXEC "SETMSG MSG(RFMAI503)"
         END
         ADDRESS ISPEXEC "TBDELETE" tabname
      END
      csr = 'ACMD'
      csrr = crp
      max = max - 1
      ADDRESS ISPEXEC "TBSKIP" tabname "NUMBER(+1)"
   END
   RETURN

/*=============================================================*/
/* COMMAND LINE COMMAND: FIND                                  */
/*=============================================================*/
find:
   pparm1 = cmdprms"*"
   ADDRESS ISPEXEC "TBSCAN" tabname,
      "ARGLIST(pparm1) POSITION(crp)"
   crpsave = crp
   RETURN


/*-------------------------------------------*/
/*-------------------------------------------*/
/*---- s u b r o u t i n e s ----------------*/
/*-------------------------------------------*/
/*-------------------------------------------*/

/*-------------------------------------------*/
/* Get keyword parm (return value)           */
/*-------------------------------------------*/
xget:
ARG var1,var2
pstr = " "var1" "
IF POS(" "var1" "," "args" ") = 0 THEN RETURN var2
ELSE RETURN var1

/*-------------------------------------------*/
/* Get keyword parm (return boolean)         */
/*-------------------------------------------*/
iget:
ARG var
pstr = " "var" "
IF POS(" "var" "," "args" ") = 0 THEN RETURN 0
ELSE RETURN 1

/*-------------------------------------------*/
/* Get keyword value parameter               */
/*-------------------------------------------*/
kget:
ARG var, default
PARSE UPPER VAR args (var)'(' var ')'
IF var = '' THEN var = default
RETURN var

/*-------------------------------------------*/
/* Build new profile access list table       */
/* Return "0" means failed                   */
/* Return "1" means ok                       */
/*-------------------------------------------*/
authlist:
x = OUTTRAP("LINE.",maxout)
 "LD DA('"profnam"') AU"
x = OUTTRAP("OFF")
cc = RC
IF line.0 > 4 THEN DO
  PARSE UPPER VAR line.5 P1 P2 PUACC junk
END
ADDRESS ISPEXEC "TBCREATE" tabname "NOWRITE NAMES("names") REPLACE"
IF RC > 4 THEN RETURN 0

afnd = 0
IF cc = 0 THEN,
DO num = 1 to line.0
   IF \afnd THEN DO
      IF POS("ID     ACCESS "," "line.num" ") > 0 THEN DO
         afnd = 1
         num = num + 2
      END
   END
   IF afnd THEN DO
      PARSE UPPER VAR line.num pparm1 pparm2
      IF pparm1 = '' THEN LEAVE
      ADDRESS ISPEXEC "TBADD" tabname
   END
END
ELSE DO
   pparm1 = 'No Entries Found'
   ADDRESS ISPEXEC "TBADD" tabname
END
ADDRESS ISPEXEC "TBTOP"  tabname
RETURN 1
sortflds = 'pparm1,c,a'
ADDRESS ISPEXEC "TBSORT" tabname "FIELDS("sortflds")"
RETURN 1

./ ADD NAME=AULD1    0100-02365-02365-1147-00038-00038-00000-JMILLER
)ATTR
/*=========================================================*/
/* AULD1    - Display RACF Authorized list (Dataset use)   */
/*---------------------------------------------------------*/
/* J Miller 02/05/90                                       */
/*=========================================================*/
  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD('''')
  _ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)
  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)
  ¢ TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)
)BODY WIDTH(80)
%---------------------------- Profile Detail ----------------------------------+
%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +
+
%Profile Name:+ &PROFNAM               %UACC:+ &PUACC
+
%Line Commands:
+ %D+- Delete userid + %I+- Insert a userid+ %A+- Add userid to profile
+
%    &PTYPE
)MODEL
 !Z   _Z       + _Z      _Z       +
)INIT
  .ZVARS = '( +
            ZSCML                                      +
            ACMD                                       +
            PPARM1                                     +
            PPARM2                                     +
            PPARM3                                     +
            )'
 &ACMD = ' '
)PROC
  IF (&ACMD = 'A')
     VER (&PPARM1,NB)
     VER (&PPARM2,NB)
  VPUT (ZSCML    ) PROFILE
  &RESPONSE = .RESP
)END
./ ADD NAME=RFLD     0100-02365-02365-1147-00350-00350-00000-JMILLER
/*-----------------------------------------------------=Rexx=--*/
/* RFLD   - Display a list of profiles                         */
/*-------------------------------------------------------------*/
/* Description:                                                */
/*   Uses ISPF table services to display and manipulate RACF   */
/*   data set profiles.                                        */
/*-------------------------------------------------------------*/
/* Panels:                                                     */
/*   RFLD1, RFLD2                                              */
/* Messages                                                    */
/*   RFMAI500-RFMAI508                                         */
/* Tables                                                      */
/*   RFDISP05                                                  */
/* 2nd level Execs                                             */
/*   AULD                                                      */
/*-------------------------------------------------------------*/
/* 04/29/91 John Miller                                        */
/*-------------------------------------------------------------*/
PARSE UPPER ARG mask
TRACE off
function = 'RFLD'

/*=============================================================*/
/* Set up default values                                       */
/*=============================================================*/
userpref  = SYSVAR(SYSPREF)
mode      = 'MASK'
mode      = 'FILTER'
maxout    = 500
tabname   = 'rfld1'
ztdmark   = '* * * END OF LIST * * *'
cc        = 0
panel     = 'RFLD1'
csr       = 'ACMD'
names     = 'PPARM1 PPARM2 PPARM3 PMSG PPARM4'
scrn      = 'FILTER'
pmsg      =  ''
ptype     =  '  Profile                         Input Data'
rebuild   = 1

ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
ADDRESS ISPEXEC "VGET rpanel"
ADDRESS ISPEXEC "VGET filter"
ADDRESS ISPEXEC "VGET dadsn"
IF (rpanel = '') | (rpanel = rpanel) THEN DO
   rpanel = panel
   ADDRESS ISPEXEC "VPUT rpanel"
END
ELSE DO
   panel = rpanel
END
IF dadsn /= '' & filter = '' THEN DO
   PARSE UPPER VAR dadsn filter
END

IF mask /= '' THEN prf = mask
              ELSE prf = userpref

IF scrn = 'FILTER' THEN filter = prf".**"
                   ELSE filter = prf
/*=============================================================*/
/* MAIN LOOP - EXIT WHEN END (PF3) IS ENTERED (RC-8)           */
/*=============================================================*/
startlp:
cc = 0
DO WHILE cc < 8
/*=============================================================*/
/* DISPLAY THE TABLE                                           */
/*=============================================================*/
TBDIS:
   IF rebuild THEN DO
      IF \buildlist() THEN SIGNAL taberr
   END
   ADDRESS ISPEXEC "TBDISPL" tabname,
      "PANEL("panel") CURSOR("csr")"
   cc = RC
   PARSE UPPER VAR zcmd cmd cmdprms
   IF filter /= savefilt THEN DO
      IF \buildlist() THEN SIGNAL taberr
   END
/*=============================================================*/
/* PROCESS COMMANDS                                            */
/*=============================================================*/
      SELECT
         WHEN cmd  = 'F'       THEN  CALL find
         WHEN cmd  = 'FIND'    THEN  CALL find
         WHEN cmd  = 'R'       THEN  CALL refresh
         WHEN cmd  = 'REFRESH' THEN  CALL refresh
         WHEN cmd  = 'L'       THEN  CALL long
         WHEN cmd  = 'LONG'    THEN  CALL long
         WHEN cmd  = 'S'       THEN  CALL short
         WHEN cmd  = 'SHORT'   THEN  CALL short
         OTHERWISE NOP
      END
/*=============================================================*/
/* PROCESS LINE COMMANDS UNTIL ALL SELECTED ROWS ARE DONE      */
/*=============================================================*/
   DO WHILE ztdsels > 0
      SELECT
         WHEN acmd = 'A' THEN CALL sel
         WHEN acmd = 'S' THEN CALL sel
         WHEN acmd = 'C' THEN CALL copy
         WHEN acmd = 'D' THEN CALL delete
         WHEN acmd = 'R' THEN CALL replic
         WHEN acmd = 'U' THEN CALL uacc
         OTHERWISE NOP
      END
      IF ztdsels > 1 THEN DO
         ADDRESS ISPEXEC "TBDISPL" tabname
      END
      ELSE DO
         ztdsels = 0
      END
   END
END
SIGNAL exit

/*=============================================================*/
/* USER HAS EXITED THE DIALOG - CLEAN UP, CLOSE THE TABLE, ETC */
/*=============================================================*/
taberr:
SAY 'Error building ISPF table - Fucntion terminated'
SIGNAL exit0

exit:
ADDRESS ISPEXEC "TBEND" tabname

exit0:
EXIT

/*=============================================================*/
/* COMMAND LINE COMMAND: Long                                  */
/*=============================================================*/
long:
   rpanel = 'RFLD2'
   panel  = 'RFLD2'
   ADDRESS ISPEXEC "VPUT rpanel"
   RETURN

/*=============================================================*/
/* COMMAND LINE COMMAND: Short                                 */
/*=============================================================*/
short:
   rpanel = 'RFLD1'
   panel  = 'RFLD1'
   ADDRESS ISPEXEC "VPUT rpanel"
   RETURN

/*=============================================================*/
/* COMMAND LINE COMMAND: Refresh                               */
/*=============================================================*/
refresh:
   rebuild = 1
   RETURN

/*=============================================================*/
/* COMMAND LINE COMMAND: FIND                                  */
/*=============================================================*/
find:
   pparm1 = cmdprms"*"
   ADDRESS ISPEXEC "TBSCAN" tabname,
      "ARGLIST(pparm1) POSITION(crp)"
   crpsave = crp
   RETURN

/*=============================================================*/
/* LINE COMMAND U (Uacc)                                       */
/*=============================================================*/
uacc:
TRACE off
   PARSE UPPER VAR pparm1 ds x
   IF POS(' 'pparm2' ',' NONE READ ALTER UPDATE CONTROL ') = 0 THEN DO
      pmsg = 'Bad UACC entered:' pparm2'.'
      pmsg = pmsg' Enter valid UACC value in the "Input Data" field'
      ADDRESS ISPEXEC "SETMSG MSG(RFMAI507)"
      ADDRESS ISPEXEC "TBPUT" tabname
   END
   ELSE DO
      "ALTDSD '"ds"' UACC("pparm2")" pparm3
      xcc = RC
      IF xcc > 0 THEN DO
         pmsg = 'ALTDSD command failed, return code' xcc'.'
         ADDRESS ISPEXEC "SETMSG MSG(RFMAI507)"
         ADDRESS ISPEXEC "TBPUT" tabname
      END
      ELSE DO
         pmsg = 'UACC changed to' pparm2'.'
         ADDRESS ISPEXEC "SETMSG MSG(RFMAI508)"
         ADDRESS ISPEXEC "TBPUT" tabname
      END
   END
TRACE off
   RETURN

/*=============================================================*/
/* LINE COMMAND S (SELECT)                                     */
/*=============================================================*/
sel:
   TRACE off
   PARSE UPPER VAR pparm1 ds x
   CALL AULD ds pparm3
   RETURN

/*=============================================================*/
/* LINE COMMAND C (COPY) and R (Replic)                        */
/*=============================================================*/
replic:
   PARSE UPPER VAR pparm1 pparm2 x
   ADDRESS ISPEXEC "TBPUT" tabname
   RETURN

copy:
   PARSE UPPER VAR pparm1 ds x
   IF pparm3 = 'GENERIC' THEN DO
      fgeneric = 'FGENERIC'
      generic = 'GENERIC'
   END
   ELSE DO
      fgeneric = ''
      generic = ''
   END
   x = OUTTRAP("CMD.",5)
   "ADDSD '"pparm2"' FROM('"ds"')" generic fgeneric
   xcc = RC
   x = OUTTRAP("OFF")
   IF xcc = 0 THEN DO
      pparm1 = pparm2
      pparm2 = ''
      IF generic = 'GENERIC' THEN DO
         pparm1 = pparm1' (G)'
         pparm3 = 'GENERIC'
      END
      pmsg = 'Profile created successfully'
      ADDRESS ISPEXEC "TBADD"   tabname
      ADDRESS ISPEXEC "TBSKIP"  tabname "NUMBER(+1)"
   END
   ELSE DO
      pmsg = cmd.1
      ADDRESS ISPEXEC "TBPUT" tabname
      ADDRESS ISPEXEC "SETMSG MSG(RFMAI507)"
   END
   RETURN

/*=============================================================*/
/* LINE COMMAND D (Delete)                                     */
/*=============================================================*/
delete:
   PARSE UPPER VAR pparm1 ds x
   IF pparm3 = 'GENERIC' THEN generic = 'GENERIC'
                ELSE generic = ''
   confmsg = 'delete RACF profile' ds
   ADDRESS ISPEXEC "DISPLAY PANEL(CONFIRM)"
   IF RC = 0 THEN DO
      x = OUTTRAP("CMD.",5)
      "DELDSD '"ds"'" generic
      xcc = RC
      x = OUTTRAP("OFF")
      rebuild = 1
      IF xcc = 0 THEN DO
         pmsg = 'Profile' ds 'deleted'
         ADDRESS ISPEXEC "SETMSG MSG(RFMAI508)"
         ADDRESS ISPEXEC "TBDELETE" tabname
      END
      ELSE DO
         pmsg = 'Profile' ds 'not deleted'
         ADDRESS ISPEXEC "SETMSG MSG(RFMAI507)"
         ADDRESS ISPEXEC "TBDELETE" tabname
      END
   END
   ELSE DO
      pmsg = 'Profile' ds 'not deleted'
      ADDRESS ISPEXEC "SETMSG MSG(RFMAI509)"
   END
   RETURN

/*-------------------------------------------*/
/* Build new profile list table              */
/* Return "0" means no datasets found        */
/* Return "1" means ok                       */
/*-------------------------------------------*/
buildlist:
pmsg = ''
pparm2 = ''
rebuild = 0
x = OUTTRAP("LINE.",maxout)
 "SEARCH "scrn"("filter")"
x = OUTTRAP("OFF")
cc = RC
ADDRESS ISPEXEC "TBCREATE" tabname "NOWRITE NAMES("names") REPLACE"
IF RC > 4 THEN RETURN 0

savefilt = filter

IF cc = 0 THEN DO num = 1 to line.0
   PARSE UPPER VAR line.num pparm1 gener
   IF gener = '(G)' THEN DO
      pparm1 = pparm1" (G)"
      pparm3 = "GENERIC"
   END
   ELSE DO
      pparm3 =
   END
   IF pparm1 /= '' THEN DO
      ADDRESS ISPEXEC "TBADD" tabname
   END
trace off
END
ELSE DO
   pparm1 = 'No profiles Found'
   ADDRESS ISPEXEC "TBADD" tabname
END
sortflds = 'pparm1,c,a'
ADDRESS ISPEXEC "TBSORT" tabname "FIELDS("sortflds")"
ADDRESS ISPEXEC "TBTOP"  tabname
RETURN 1


/*-------------------------------------------*/
/*-------------------------------------------*/
/*---- s u b r o u t i n e s ----------------*/
/*-------------------------------------------*/
/*-------------------------------------------*/

/*-------------------------------------------*/
/* Get keyword parm (return value)           */
/*-------------------------------------------*/
xget:
ARG var1,var2
pstr = " "var1" "
IF POS(" "var1" "," "args" ") = 0 THEN RETURN var2
ELSE RETURN var1

/*-------------------------------------------*/
/* Get keyword parm (return boolean)         */
/*-------------------------------------------*/
iget:
ARG var
pstr = " "var" "
IF POS(" "var" "," "args" ") = 0 THEN RETURN 0
ELSE RETURN 1

/*-------------------------------------------*/
/* Get keyword value parameter               */
/*-------------------------------------------*/
kget:
ARG var, default
PARSE UPPER VAR args (var)'(' var ')'
IF var = '' THEN var = default
RETURN var

./ ADD NAME=RFLD1    0100-02365-02365-1147-00037-00037-00000-JMILLER
)ATTR
/*=========================================================*/
/* RFLIST01 - Display list of RACF dataset profiles        */
/*---------------------------------------------------------*/
/* J Miller 02/08/90                                       */
/*=========================================================*/
  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD('''')
  _ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)
  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)
  ¢ TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)
)BODY WIDTH(80)
%----------------------------- Profile Detail ---------------------------------+
%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +
+
+Search Filter ===>_FILTER                                    +
+
+ %Line Commands:+
+
+ %A+- Access List %C+- Copy profile %D+- Delete profile %L+-Long list format
+ %R+- Copy dsn    %U+- Change UACC
+
%    &PTYPE
)MODEL
 !Z   {Z                             +_Z                            +_Z       +
)INIT
  .ZVARS = '( +
            ZSCML                                      +
            ACMD                                       +
            PPARM1                                     +
            PPARM2                                     +
            PPARM4                                     +
            )'
 &ACMD = ' '
)PROC
  VPUT (ZSCML    ) PROFILE
  &RESPONSE = .RESP
)END
./ ADD NAME=RFLD2    0100-02365-02365-1147-00040-00040-00000-JMILLER
)ATTR
/*=========================================================*/
/* RFLIST01 - Display list of RACF dataset profiles        */
/*---------------------------------------------------------*/
/* J Miller 02/08/90                                       */
/*=========================================================*/
  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD('''')
  _ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)
  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)
  # TYPE(OUTPUT) CAPS(OFF) JUST(LEFT) INTENS(HIGH) COLOR(RED)
  ¢ TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)
)BODY WIDTH(80)
%----------------------------- Profile Detail ---------------------------------+
%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +
+
+Search Filter ===>_FILTER                                    +
+
+ %Line Commands:+
+
+ %A+- Access List %C+- Copy profile %D+- Delete profile %S+-Short list format
+ %R+- Copy dsn    %U+- Change UACC
+
%    &PTYPE
)MODEL
 !Z   {Z                             +_Z                            +
      #Z                                                            +

)INIT
  .ZVARS = '( +
            ZSCML                                      +
            ACMD                                       +
            PPARM1                                     +
            PPARM2                                     +
            PMSG                                       +
            )'
 &ACMD = ' '
)PROC
  VPUT (ZSCML    ) PROFILE
  &RESPONSE = .RESP
)END
./ ADD NAME=RFMAI50  0100-02365-02365-1147-00030-00030-00000-JMILLER
RFMAI500 'User/group added'
'Access added for &profnam: id: &pparm1  access: &pparm2'

RFMAI501 'User/group not found'
'User/group &pparm1 not defined to RACF'

RFMAI502 'User/group deleted'
'Access deleted  for &profnam: id: &pparm1  access: &pparm2'

RFMAI503 'RACF error'
'Error processing RACF command: permit rc &cc'

RFMAI504 'Profile not found'
'Profile &pparm1 not found in RACF class &class'

RFMAI505 'Invalid class'
'Class &class is not a valid RACF class'

RFMAI506 'No entries found'
'&mask - no entries meet search criteria'

RFMAI507 'Error - press pf1'
'&pmsg'

RFMAI508 'Operation ok'
'&pmsg'

RFMAI509 'Operation cancelled'
'&pmsg'

