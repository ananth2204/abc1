{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012904000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 411502, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE827.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE827.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x0c'", "DS1TRBAL": "b'\\x1a\\x08'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\xa9\\x00\\x0e\\x05\\xaa\\x00\\x06\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04O\\x00H\\x01\\x10\\x11?\\x01\\x10\\x11?\\x19\\x03\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf9@@@'", "ispf": {"version": "04.79", "flags": 0, "createdate": "2010-04-23T00:00:00", "modifydate": "2010-04-23T19:03:48", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-479"}, "text": "REGULAR CBT TAPE - VERSION 479    FILE:  827\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT479.FILE827\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 23 MEMBERS COUNTED; CUMULATIVE SIZE IS 3,373 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   04/23/10    19:03:48    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00A\\x01\\x10\\x11?\\x01\\x10\\x11?\\x18C\\x00,\\x00,\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-04-23T00:00:00", "modifydate": "2010-04-23T18:43:41", "lines": 44, "newlines": 44, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  CBT File 609 update (now File 827)\nFrom:     \"John C. Miller\" <john@jmit.com>\nDate:     Thu, 01 Apr 2010 22:45:37 -0400\nTo:       <sbgolob@cbttape.org>\n\nHi Sam,\n\nrlpv22.xmi is an updated version of the RACF profile utility.  I\nadded some requested features, including:\n\n- A simple user options panel;\n- The option of confirm/noconfirm for profile deletes;\n- The option to have the dialog display the RACF commands being\n  issued \"under the covers\"  for each operation done. This is a\n  good learning tool for those new to RACF;\n- For DATASET class, the ability to enter a fully qualified\n  dataset name in the \"Filter\" field, in which case the list of\n  profiles is narrowed down to the one profile that covers the\n  dataset entered.  This is useful when one needs to grant\n  permission to a dataset, but is unsure of which profile to\n  tweak.\n- Fixed assorted bugs and cleaned things up a bit, improving\n  support for some RACF classes.\n\nThis xmi file can be downloaded from my web site at:\n\nhttp://www.jmit.com/os390/systools/rlp/rlpv22.xmi\n\nLet me know if there are any problems with the files.\n\nAll best -\n\nJohn\n====\n\n--\nJohn C. Miller\n\njohn@jmit.com\n530-873-9005 (Northern CA Office)\n714-598-4544 (Southern CA Office)\n800-423-7197 (Fax)\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$README": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00\\x06\\x01\\x10\\x04/\\x01\\x10\\x04/\\x16\\x17\\x00'\\x00\\x01\\x00'\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "2010-02-11T00:00:00", "modifydate": "2010-02-11T16:17:06", "lines": 39, "newlines": 1, "modlines": 39, "user": "COMPJM"}, "text": "----------------------- RLP - RACF Lisf Profiles V2.1 ------------------\nThus ISPF dialog can be used to supplement the IBM provided dialogs for\nRACF administration.  Let me know if you find this facility useful by\ndropping me an email at software@jmit.com.  Thanks - John Miller\n\n----------------------------- Install ----------------------------------\nInstallation is simple:\n\n1) FTP the XMIT format file from your PC to an MVS or z/OS system.  Be\n   sure that the file you FTP into is RECFM=FB, LRECL=80.  The FTP must\n   be done in binary mode.\n\n2) From an ISPF command prompt, enter: TSO RECEIVE INDA('xmitfile')\n   The resulting file contains everything (almost) needed for RLP.\n   Rename this file to whatever meets your system standards.  SYS2.RLP\n   might be a reasonable name.\n\n3) Edit the #RLP member, and enter the name of your dataset from step 2.\n   (e.g. SYS2.RLP).\n\n4) Copy the modified #RLP member to one of your system clist libraries,\n   and name it something convenient, like 'RLP'.\n\nNow you should be able to invoke the dialog from within ISPF by typing\non any Command ===> TSO RLP\n\n----------------------------- Change Log -------------------------------\nVersion 2.1\n- This version mostly has some cleanup done in the execs and panels and\n  some bugs fixed.  Other bugs no doubt remain.\n\n- Added an Options panel.  For now this panel lets you turn on/off\n  confirmation of delete operations, and lets you turn on/off an option\n  that lists the actual RACF command being done under the covers.  This\n  feature was requested as an educational aid by a sysprog who was\n  learning RACF.\n\n- See the comments in member RLP for more details on some of the things\n  changed or fixed.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$RFLDOLD": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x026_\\x01\\x026_\\x12\\x18\\x00\\\\\\x00\\\\\\x00\\x00\\xd6\\xd3\\xc4\\xe5\\xc5\\xd9\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-12-31T00:00:00", "modifydate": "2002-12-31T12:18:38", "lines": 92, "newlines": 92, "modlines": 0, "user": "OLDVERS"}, "text": "1 -----------------------------------------------------------------\n             RFLD - RACF Dataset Maintenance Dialogs.\n             Version 1.1\n             09/25/97\n  -----------------------------------------------------------------\n\n\n  John Miller\n  California State University, Office of the Chancellor\n  jcmiller@calstate.edu\n\n  PLEASE: Send me email on the inevitable bugs that you may find.\n\n\n1 -----------------------------------------------------------------\n                     I N T R O D U C T I O N\n  -----------------------------------------------------------------\n  This set of ISPF components comprise an ISPF based method of\n  maintaining RACF dataset profiles.  Coded using Rexx, the dialog\n  is invoked by entering the Exec name, RFLD, from the ISPF option\n  6 panel, or by entering TSO RFLD from other ISPF command lines.\n  Example:\n\n  EDIT ---- DATASET.NAME($$$$DOC) - 01.00 ----------------- 009 080\n  COMMAND ===> TSO RFLD\n\n  A filter criteria can optionally be specified on the command line\n  to change the list of profiles displayed.   The default is to\n  display profiles beginning with the user's TSO USERID.  The filter\n  criteria can also be changed at will on the main RFLD panel.\n\n  Once on the main RFLD panel, the line commands allow various\n  operations to be performed on the RACF profiles, including full-screen\n  manipulation of the access lists.\n\n1 -----------------------------------------------------------------\n                     I N S T A L L A T I O N\n  -----------------------------------------------------------------\n  Copy the following members from the temporary install PDS to\n  the indicated library.  The library indicated is the DDNAME of\n  the TSO allocation environment, and will be different for each\n  site.\n\n  Member:   Library:\n  -------   --------\n  RFLD      SYSPROC or SYSEXEC\n  AULD      SYSPROC or SYSEXEC\n  RFLD1     ISPPLIB\n  RFLD2     ISPPLIB\n  AULD1     ISPPLIB\n  RFMAI50   ISPMLIB\n./ ADD NAME=$DOCRFLD 0100-02365-02365-1147-00040-00040-00000-JMILLER\nRFLD - Dialog to Maintain RACF Dataset Profiles\n\nWhat it does:\n-----------------------------------------------\nThis ISPF dialog lets you conveniently maintain access lists, and\ndo lots of other RACF tasks that are cumbersome to perform using\nthe IBM supplied RACF ISPF panels.  This dialog works with any\nkind of resource, including dataset profiles and general resource\nclasses.\n\n\nHow to transfer file to the MVS host.\n-----------------------------------------------\n\n- Create a PDS on the MVS system, called userid.TEMP, or some\n  such name.  CYL(1,1,15) is big enough.\n  RECFM=FB,LRECL=80,BLKSIZE=6160 are suitable DCB parameters.\n\n- Download the RFLD.EXE self-extracting file to a PC.  Place\n  RFLD.EXE in a directory by itself, and run it.  This will\n  result in all required members being extracted. (These won't be\n  readable on a PC  See note below)\n\n- FTP all the extracted files from the PC to the MVS PDS\n  allocated in the first step.  Use the FTP subcommand: \"BINARY\"\n  or equivalent to specify a binary transfer.  This is a must.\n  (These FTP'd files become members of the target PDS.)\n\n- Read the $$$$$DOC member in the PDS for further instructions.\n\n\nNOTE: The files that are in this self-extracting zip file are in\nEBCDIC format, so they will look like garbage on the PC, even\nafter being extracted.  They will however be normal, readable\nEBCDIC PDS members after they are extracted and transferred to an\nMVS host using Binary mode.\n\n\nJohn C. Miller\njohn@jmit.com\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#RLP": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00&\\x01\\x10\\x04/\\x01\\x10\\x04/\\x15R\\x00\\x1b\\x00\\x1b\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-11T00:00:00", "modifydate": "2010-02-11T15:52:26", "lines": 27, "newlines": 27, "modlines": 0, "user": "COMPJM"}, "text": "/*----------------------------------------------------------REXX----*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\nPARSE UPPER ARG prm\n\n/*------------------------------------------------------------------*/\n/* Change the name in the statement below to correct name for your  */\n/* system.  You should be able to leave the rest of this exec alone.*/\n/*------------------------------------------------------------------*/\nRLPDSN  = \"'SYS2.RLP'\"\n\n/*------------------------------------------------------------------*/\n/* Ok, Don't change any of the stuff below unless you know what you */\n/* are doing.                                                       */\n/*------------------------------------------------------------------*/\n\"ALTLIB ACTIVATE APPLICATION(CLIST) DATASET(\"RLPDSN\")\"\n\nADDRESS ISPEXEC\n\n   \"LIBDEF ISPPLIB DATASET ID(\"RLPDSN\")\"\n   \"LIBDEF ISPMLIB DATASET ID(\"RLPDSN\")\"\n   \"SELECT CMD(%RLP \"prm\")\"\n   \"LIBDEF ISPPLIB\"\n   \"LIBDEF ISPMLIB\"\n\nADDRESS TSO\n\"ALTLIB DEACTIVATE APPLICATION(CLIST)\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE827": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04O\\x00A\\x01\\x10\\x11?\\x01\\x10\\x11?\\x19\\x03\\x00Q\\x00Q\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf9@@@'", "ispf": {"version": "04.79", "flags": 0, "createdate": "2010-04-23T00:00:00", "modifydate": "2010-04-23T19:03:41", "lines": 81, "newlines": 81, "modlines": 0, "user": "CBT-479"}, "text": "//***FILE 827 is from John C. Miller and contains dialogs to help   *   FILE 827\n//*           administer RACF.                                      *   FILE 827\n//*                                                                 *   FILE 827\n//*           email: \"John C. Miller\" <john@jmit.com>               *   FILE 827\n//*                                                                 *   FILE 827\n//*     (The older version of this package has been moved here      *   FILE 827\n//*     from File 609.  That version is in members RFLDOLD and      *   FILE 827\n//*     $RFLDOLD.)                                                  *   FILE 827\n//*                                                                 *   FILE 827\n//*     RLP is an updated version of my RACF profile utility.       *   FILE 827\n//*     I added some requested features, including:                 *   FILE 827\n//*                                                                 *   FILE 827\n//*     - A simple user options panel;                              *   FILE 827\n//*     - The option of confirm/noconfirm for profile deletes;      *   FILE 827\n//*     - The option to have the dialog display the RACF            *   FILE 827\n//*       commands being issued \"under the covers\"  for each        *   FILE 827\n//*       operation done. This is a good learning tool for those    *   FILE 827\n//*       new to RACF;                                              *   FILE 827\n//*     - For DATASET class, the ability to enter a fully           *   FILE 827\n//*       qualified dataset name in the \"Filter\" field, in which    *   FILE 827\n//*       case the list of profiles is narrowed down to the one     *   FILE 827\n//*       profile that covers the dataset entered.  This is         *   FILE 827\n//*       useful when one needs to grant permission to a            *   FILE 827\n//*       dataset, but is unsure of which profile to tweak.         *   FILE 827\n//*     - Fixed assorted bugs and cleaned things up a bit,          *   FILE 827\n//*       improving support for some RACF classes.                  *   FILE 827\n//*                                                                 *   FILE 827\n//*     ----------- RLP - RACF Lisf Profiles V2.1 --------------    *   FILE 827\n//*     Thus ISPF dialog can be used to supplement the IBM          *   FILE 827\n//*     provided dialogs for RACF administration.  Let me know      *   FILE 827\n//*     if you find this facility useful by dropping me an email    *   FILE 827\n//*     at software@jmit.com.  Thanks - John Miller                 *   FILE 827\n//*                                                                 *   FILE 827\n//*     -------------------- Install ---------------------------    *   FILE 827\n//*     Installation is simple:                                     *   FILE 827\n//*                                                                 *   FILE 827\n//*     1) FTP the XMIT format file from your PC to an MVS or       *   FILE 827\n//*        z/OS system.  Be sure that the file you FTP into is      *   FILE 827\n//*        RECFM=FB, LRECL=80.  The FTP must be done in binary      *   FILE 827\n//*        mode.                                                    *   FILE 827\n//*                                                                 *   FILE 827\n//*     2) From an ISPF command prompt, enter: TSO RECEIVE          *   FILE 827\n//*        INDA('xmitfile') The resulting file contains             *   FILE 827\n//*        everything (almost) needed for RLP.  Rename this file    *   FILE 827\n//*        to whatever meets your system standards.  SYS2.RLP       *   FILE 827\n//*        might be a reasonable name.                              *   FILE 827\n//*                                                                 *   FILE 827\n//*     3) Edit the #RLP member, and enter the name of your         *   FILE 827\n//*        dataset from step 2.  (e.g. SYS2.RLP).                   *   FILE 827\n//*                                                                 *   FILE 827\n//*     4) Copy the modified #RLP member to one of your system      *   FILE 827\n//*        clist libraries, and name it something convenient,       *   FILE 827\n//*        like 'RLP'.                                              *   FILE 827\n//*                                                                 *   FILE 827\n//*     Now you should be able to invoke the dialog from within     *   FILE 827\n//*     ISPF by typing on any Command ===> TSO RLP                  *   FILE 827\n//*                                                                 *   FILE 827\n//*     ------------------- Change Log -------------------------    *   FILE 827\n//*     Version 2.1                                                 *   FILE 827\n//*     - This version mostly has some cleanup done in the execs    *   FILE 827\n//*       and panels and some bugs fixed.  Other bugs no doubt      *   FILE 827\n//*       remain.                                                   *   FILE 827\n//*                                                                 *   FILE 827\n//*     - Added an Options panel.  For now this panel lets you      *   FILE 827\n//*       turn on/off confirmation of delete operations, and        *   FILE 827\n//*       lets you turn on/off an option that lists the actual      *   FILE 827\n//*       RACF command being done under the covers.  This           *   FILE 827\n//*       feature was requested as an educational aid by a          *   FILE 827\n//*       sysprog who was learning RACF.                            *   FILE 827\n//*                                                                 *   FILE 827\n//*     - See the comments in member RLP for more details on        *   FILE 827\n//*       some of the things changed or fixed.                      *   FILE 827\n//*                                                                 *   FILE 827\n//*                                                                 *   FILE 827\n//*                                                                 *   FILE 827\n//*                                                                 *   FILE 827\n//*                                                                 *   FILE 827\n//*                                                                 *   FILE 827\n//*                                                                 *   FILE 827\n//*                                                                 *   FILE 827\n//*                                                                 *   FILE 827\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CONFIRM": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x006\\x01\\x10\\x04/\\x01\\x10\\x04/\\x14S\\x00$\\x00$\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-02-11T00:00:00", "modifydate": "2010-02-11T14:53:36", "lines": 36, "newlines": 36, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* CONFIRM - Generic confirm panel.                                 */\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n   % TYPE(TEXT)   INTENS(HIGH) COLOR(YELLOW)\n   + TYPE(TEXT)   INTENS(LOW)  COLOR(BLUE)\n   _ TYPE(INPUT)  INTENS(LOW)  COLOR(GREEN)\n   | TYPE(OUTPUT) INTENS(LOW)  COLOR(BLUE)      CAPS(OFF)\n   { TYPE(TEXT)   INTENS(LOW)  COLOR(PINK)\n   } TYPE(TEXT)   INTENS(HIGH) COLOR(WHITE)\n   ! TYPE(TEXT)   INTENS(LOW)  COLOR(TURQ)\n   @ TYPE(TEXT)   INTENS(HIGH) COLOR(RED)\n   # TYPE(TEXT)   INTENS(HIGH) COLOR(GREEN)\n)BODY\n%-------------------------------# Confirmation %--------------------------------\n%COMMAND ===>_ZCMD\n+\n+\n+  |CONFMG1\n+  |CONFMG2\n+  |CONFMG3\n+  |CONFMG4\n+  |CONFMG5\n+\n+               Press}Enter+to|CONFACT                                         +\n+\n+               or press}PF3+to Cancel\n+\n+\n+\n+\n)INIT\n  &ZCMD = ' '\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RFLDOLD": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x026_\\x01\\x026_\\x12\\x15\\x03d\\x03d\\x00\\x00\\xd6\\xd3\\xc4\\xe5\\xc5\\xd9\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-12-31T00:00:00", "modifydate": "2002-12-31T12:15:00", "lines": 868, "newlines": 868, "modlines": 0, "user": "OLDVERS"}, "text": "./ ADD NAME=$$$$DOC  0100-02365-02365-1147-00051-00051-00000-JMILLER\n1 -----------------------------------------------------------------\n             RFLD - RACF Dataset Maintenance Dialogs.\n             Version 1.1\n             09/25/97\n  -----------------------------------------------------------------\n\n\n  John Miller\n  California State University, Office of the Chancellor\n  jcmiller@calstate.edu\n\n  PLEASE: Send me email on the inevitable bugs that you may find.\n\n\n1 -----------------------------------------------------------------\n                     I N T R O D U C T I O N\n  -----------------------------------------------------------------\n  This set of ISPF components comprise an ISPF based method of\n  maintaining RACF dataset profiles.  Coded using Rexx, the dialog\n  is invoked by entering the Exec name, RFLD, from the ISPF option\n  6 panel, or by entering TSO RFLD from other ISPF command lines.\n  Example:\n\n  EDIT ---- DATASET.NAME($$$$DOC) - 01.00 ----------------- 009 080\n  COMMAND ===> TSO RFLD\n\n  A filter criteria can optionally be specified on the command line\n  to change the list of profiles displayed.   The default is to\n  display profiles beginning with the user's TSO USERID.  The filter\n  criteria can also be changed at will on the main RFLD panel.\n\n  Once on the main RFLD panel, the line commands allow various\n  operations to be performed on the RACF profiles, including full-screen\n  manipulation of the access lists.\n\n1 -----------------------------------------------------------------\n                     I N S T A L L A T I O N\n  -----------------------------------------------------------------\n  Copy the following members from the temporary install PDS to\n  the indicated library.  The library indicated is the DDNAME of\n  the TSO allocation environment, and will be different for each\n  site.\n\n  Member:   Library:\n  -------   --------\n  RFLD      SYSPROC or SYSEXEC\n  AULD      SYSPROC or SYSEXEC\n  RFLD1     ISPPLIB\n  RFLD2     ISPPLIB\n  AULD1     ISPPLIB\n  RFMAI50   ISPMLIB\n./ ADD NAME=$DOCRFLD 0100-02365-02365-1147-00040-00040-00000-JMILLER\nRFLD - Dialog to Maintain RACF Dataset Profiles\n\nWhat it does:\n-----------------------------------------------\nThis ISPF dialog lets you conveniently maintain access lists, and\ndo lots of other RACF tasks that are cumbersome to perform using\nthe IBM supplied RACF ISPF panels.  This dialog works with any\nkind of resource, including dataset profiles and general resource\nclasses.\n\n\nHow to transfer file to the MVS host.\n-----------------------------------------------\n\n- Create a PDS on the MVS system, called userid.TEMP, or some\n  such name.  CYL(1,1,15) is big enough.\n  RECFM=FB,LRECL=80,BLKSIZE=6160 are suitable DCB parameters.\n\n- Download the RFLD.EXE self-extracting file to a PC.  Place\n  RFLD.EXE in a directory by itself, and run it.  This will\n  result in all required members being extracted. (These won't be\n  readable on a PC  See note below)\n\n- FTP all the extracted files from the PC to the MVS PDS\n  allocated in the first step.  Use the FTP subcommand: \"BINARY\"\n  or equivalent to specify a binary transfer.  This is a must.\n  (These FTP'd files become members of the target PDS.)\n\n- Read the $$$$$DOC member in the PDS for further instructions.\n\n\nNOTE: The files that are in this self-extracting zip file are in\nEBCDIC format, so they will look like garbage on the PC, even\nafter being extracted.  They will however be normal, readable\nEBCDIC PDS members after they are extracted and transferred to an\nMVS host using Binary mode.\n\n\nJohn C. Miller\njohn@jmit.com\n./ ADD NAME=AULD     0100-02365-02365-1147-00274-00274-00000-JMILLER\n/*------------------------------------------------------=Rexx=-*/\n/* AULD - Edit authorization list                              */\n/*-------------------------------------------------------------*/\n/* Description:                                                */\n/* This Rexx Exec is called by RFLD exec.  The purpose is      */\n/* to display in ISPF table format the authorization list for  */\n/* a selected RACF dataest profile.   This exec is passed the  */\n/* values of 'PROFNAM', the profile name, and the absolute     */\n/* value of 'GENERIC' if the profile passed is a generic       */\n/* profile.                                                    */\n/*-------------------------------------------------------------*/\n/* Panels:                                                     */\n/*   AULD1                                                     */\n/* Messages                                                    */\n/*   RFMAI500-RFMAI508                                         */\n/* Tables                                                      */\n/*   AUDISP55                                                  */\n/* 2nd level Execs                                             */\n/*   NONE                                                      */\n/*-------------------------------------------------------------*/\n/* 04/29/91 John Miller                                        */\n/*-------------------------------------------------------------*/\nPARSE UPPER ARG profnam x\nPARSE UPPER ARG args\nTRACE off\n\nIF iget('GENERIC') THEN generic = 'GENERIC'\nELSE generic =\n\n/*=============================================================*/\n/* SET UP DEFAULT VALUES                                       */\n/*=============================================================*/\nztdmark   = '* * * End of list * * *'\ncc        = 0\npanel     = 'AULD1'\ncsr       = 'ACMD'\ntabname   = 'AUDISP55'\nptype     = '  Userid     Access'\nmaxout    = 200\nnames     = 'PPARM1 PPARM2'\n\n/*=============================================================*/\n/* CREATE THE TEMPORARY TABLE                                  */\n/*=============================================================*/\nIF \\authlist() THEN SIGNAL listerr\n/*=============================================================*/\n/* MAIN LOOP - EXIT WHEN END (PF3) IS ENTERED (RC-8)           */\n/*=============================================================*/\nstartlp:\ncc = 0\nDO WHILE cc < 8\n/*=============================================================*/\n/* DISPLAY THE TABLE                                           */\n/*=============================================================*/\ntbdis:\n   ADDRESS ISPEXEC \"TBDISPL\" tabname,\n      \"PANEL(\"panel\") CURSOR(\"csr\")\"\n   cc = RC\n   PARSE UPPER VAR zcmd cmd cmdprms\n/*=============================================================*/\n/* PROCESS COMMANDS                                            */\n/*=============================================================*/\n      SELECT\n         WHEN cmd  = 'S'     THEN  CALL sort\n         WHEN cmd  = 'SORT'  THEN  CALL sort\n         WHEN cmd  = 'F'     THEN  CALL find\n         WHEN cmd  = 'FIND'  THEN  CALL find\n         OTHERWISE NOP\n      END\n/*=============================================================*/\n/* PROCESS LINE COMMANDS UNTIL ALL SELECTED ROWS ARE DONE      */\n/*=============================================================*/\n   DO WHILE ztdsels > 0\n      PARSE UPPER VAR acmd xcmd 2 anum\n      IF DATATYPE(anum) /= 'NUM' THEN anum = 0\n      ELSE acmd = xcmd\n      SELECT\n         WHEN acmd = 'I' THEN CALL insert\n         WHEN acmd = 'A' THEN CALL add\n         WHEN acmd = 'D' THEN CALL delete\n         WHEN acmd = 'R' THEN CALL repeat\n         OTHERWISE IF (pparm1 /= '') & (pparm2 /= '') THEN call add\n      END\n      IF ztdsels > 1 THEN DO\n         ADDRESS ISPEXEC \"TBDISPL\" tabname\n      END\n      ELSE DO\n         ztdsels = 0\n      END\n   END\nEND\nSIGNAL exit\n\n/*=============================================================*/\n/* USER HAS EXITED THE DIALOG - CLEAN UP, CLOSE THE TABLE, ETC */\n/*=============================================================*/\nlisterr:\nSAY 'Error creating authorization list table'\n\nexit:\nADDRESS ISPEXEC \"TBEND\" tabname\n\nexit0:\nEXIT\n\n\n\n/*=============================================================*/\n/* LINE COMMAND I (INSERT)                                     */\n/*=============================================================*/\ninsert:\n/* TRACE r */\n   IF anum > 0 THEN max = anum\n   ELSE max = 1\n   DO WHILE max > 0\n   ADDRESS ISPEXEC \"TBVCLEAR\" tabname\n   ADDRESS ISPEXEC \"TBADD\" tabname \"ORDER\"\n   csr = 'PPARM1'\n   ADDRESS ISPEXEC \"TBTOP\" tabname\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND A (ADD)                                        */\n/*=============================================================*/\nadd:\n/* TRACE r */\n   IF anum > 0 THEN max = anum\n   ELSE max = 1\n   DO WHILE max > 0\n      \"PERMIT '\"profnam\"' ID(\"pparm1\") ACCESS(\"pparm2\") \"generic\n      cc = RC\n      IF cc = 0 THEN DO\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI500)\"\n         ADDRESS ISPEXEC \"TBADD\" tabname\n      END\n      ELSE DO\n         IF cc = 4 THEN ISPEXEC \"SETMSG MSG(RFMAI501)\"\n         IF cc > 4 THEN ISPEXEC \"SETMSG MSG(RFMAI503)\"\n      END\n      csr = 'PPARM1'\n      ADDRESS ISPEXEC \"TBSKIP\" tabname \"NUMBER(+1)\"\n      max = max - 1\n   END\n   ADDRESS ISPEXEC \"TBTOP\" tabname\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND R (REPEAT)                                     */\n/*=============================================================*/\nrepeat:\n   IF anum > 0 THEN max = anum\n   ELSE max = 1\n   DO WHILE max > 0\n      ADDRESS ISPEXEC \"TBADD\" tabname \"ORDER\"\n      csr = 'PPARM1'\n      csrr = crp + 1\n      max = max - 1\n   END\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND D (DELETE)                                     */\n/*=============================================================*/\ndelete:\n   IF anum > 0 THEN max = anum\n   ELSE max = 1\n\n   DO WHILE max > 0\n      IF pparm1 /= '' THEN DO\n         \"PERMIT '\"profnam\"' ID(\"pparm1\") DELETE\" generic\n         cc = RC\n         IF cc = 0 THEN DO\n            ADDRESS ISPEXEC \"SETMSG MSG(RFMAI502)\"\n         END\n         ELSE IF cc = 4 THEN DO\n            ADDRESS ISPEXEC \"SETMSG MSG(RFMAI501)\"\n         END\n         ELSE DO\n            ADDRESS ISPEXEC \"SETMSG MSG(RFMAI503)\"\n         END\n         ADDRESS ISPEXEC \"TBDELETE\" tabname\n      END\n      csr = 'ACMD'\n      csrr = crp\n      max = max - 1\n      ADDRESS ISPEXEC \"TBSKIP\" tabname \"NUMBER(+1)\"\n   END\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: FIND                                  */\n/*=============================================================*/\nfind:\n   pparm1 = cmdprms\"*\"\n   ADDRESS ISPEXEC \"TBSCAN\" tabname,\n      \"ARGLIST(pparm1) POSITION(crp)\"\n   crpsave = crp\n   RETURN\n\n\n/*-------------------------------------------*/\n/*-------------------------------------------*/\n/*---- s u b r o u t i n e s ----------------*/\n/*-------------------------------------------*/\n/*-------------------------------------------*/\n\n/*-------------------------------------------*/\n/* Get keyword parm (return value)           */\n/*-------------------------------------------*/\nxget:\nARG var1,var2\npstr = \" \"var1\" \"\nIF POS(\" \"var1\" \",\" \"args\" \") = 0 THEN RETURN var2\nELSE RETURN var1\n\n/*-------------------------------------------*/\n/* Get keyword parm (return boolean)         */\n/*-------------------------------------------*/\niget:\nARG var\npstr = \" \"var\" \"\nIF POS(\" \"var\" \",\" \"args\" \") = 0 THEN RETURN 0\nELSE RETURN 1\n\n/*-------------------------------------------*/\n/* Get keyword value parameter               */\n/*-------------------------------------------*/\nkget:\nARG var, default\nPARSE UPPER VAR args (var)'(' var ')'\nIF var = '' THEN var = default\nRETURN var\n\n/*-------------------------------------------*/\n/* Build new profile access list table       */\n/* Return \"0\" means failed                   */\n/* Return \"1\" means ok                       */\n/*-------------------------------------------*/\nauthlist:\nx = OUTTRAP(\"LINE.\",maxout)\n \"LD DA('\"profnam\"') AU\"\nx = OUTTRAP(\"OFF\")\ncc = RC\nIF line.0 > 4 THEN DO\n  PARSE UPPER VAR line.5 P1 P2 PUACC junk\nEND\nADDRESS ISPEXEC \"TBCREATE\" tabname \"NOWRITE NAMES(\"names\") REPLACE\"\nIF RC > 4 THEN RETURN 0\n\nafnd = 0\nIF cc = 0 THEN,\nDO num = 1 to line.0\n   IF \\afnd THEN DO\n      IF POS(\"ID     ACCESS \",\" \"line.num\" \") > 0 THEN DO\n         afnd = 1\n         num = num + 2\n      END\n   END\n   IF afnd THEN DO\n      PARSE UPPER VAR line.num pparm1 pparm2\n      IF pparm1 = '' THEN LEAVE\n      ADDRESS ISPEXEC \"TBADD\" tabname\n   END\nEND\nELSE DO\n   pparm1 = 'No Entries Found'\n   ADDRESS ISPEXEC \"TBADD\" tabname\nEND\nADDRESS ISPEXEC \"TBTOP\"  tabname\nRETURN 1\nsortflds = 'pparm1,c,a'\nADDRESS ISPEXEC \"TBSORT\" tabname \"FIELDS(\"sortflds\")\"\nRETURN 1\n\n./ ADD NAME=AULD1    0100-02365-02365-1147-00038-00038-00000-JMILLER\n)ATTR\n/*=========================================================*/\n/* AULD1    - Display RACF Authorized list (Dataset use)   */\n/*---------------------------------------------------------*/\n/* J Miller 02/05/90                                       */\n/*=========================================================*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD('''')\n  _ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  \u00a2 TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n)BODY WIDTH(80)\n%---------------------------- Profile Detail ----------------------------------+\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +\n+\n%Profile Name:+ &PROFNAM               %UACC:+ &PUACC\n+\n%Line Commands:\n+ %D+- Delete userid + %I+- Insert a userid+ %A+- Add userid to profile\n+\n%    &PTYPE\n)MODEL\n !Z   _Z       + _Z      _Z       +\n)INIT\n  .ZVARS = '( +\n            ZSCML                                      +\n            ACMD                                       +\n            PPARM1                                     +\n            PPARM2                                     +\n            PPARM3                                     +\n            )'\n &ACMD = ' '\n)PROC\n  IF (&ACMD = 'A')\n     VER (&PPARM1,NB)\n     VER (&PPARM2,NB)\n  VPUT (ZSCML    ) PROFILE\n  &RESPONSE = .RESP\n)END\n./ ADD NAME=RFLD     0100-02365-02365-1147-00350-00350-00000-JMILLER\n/*-----------------------------------------------------=Rexx=--*/\n/* RFLD   - Display a list of profiles                         */\n/*-------------------------------------------------------------*/\n/* Description:                                                */\n/*   Uses ISPF table services to display and manipulate RACF   */\n/*   data set profiles.                                        */\n/*-------------------------------------------------------------*/\n/* Panels:                                                     */\n/*   RFLD1, RFLD2                                              */\n/* Messages                                                    */\n/*   RFMAI500-RFMAI508                                         */\n/* Tables                                                      */\n/*   RFDISP05                                                  */\n/* 2nd level Execs                                             */\n/*   AULD                                                      */\n/*-------------------------------------------------------------*/\n/* 04/29/91 John Miller                                        */\n/*-------------------------------------------------------------*/\nPARSE UPPER ARG mask\nTRACE off\nfunction = 'RFLD'\n\n/*=============================================================*/\n/* Set up default values                                       */\n/*=============================================================*/\nuserpref  = SYSVAR(SYSPREF)\nmode      = 'MASK'\nmode      = 'FILTER'\nmaxout    = 500\ntabname   = 'rfld1'\nztdmark   = '* * * END OF LIST * * *'\ncc        = 0\npanel     = 'RFLD1'\ncsr       = 'ACMD'\nnames     = 'PPARM1 PPARM2 PPARM3 PMSG PPARM4'\nscrn      = 'FILTER'\npmsg      =  ''\nptype     =  '  Profile                         Input Data'\nrebuild   = 1\n\nADDRESS ISPEXEC \"CONTROL ERRORS RETURN\"\nADDRESS ISPEXEC \"VGET rpanel\"\nADDRESS ISPEXEC \"VGET filter\"\nADDRESS ISPEXEC \"VGET dadsn\"\nIF (rpanel = '') | (rpanel = rpanel) THEN DO\n   rpanel = panel\n   ADDRESS ISPEXEC \"VPUT rpanel\"\nEND\nELSE DO\n   panel = rpanel\nEND\nIF dadsn /= '' & filter = '' THEN DO\n   PARSE UPPER VAR dadsn filter\nEND\n\nIF mask /= '' THEN prf = mask\n              ELSE prf = userpref\n\nIF scrn = 'FILTER' THEN filter = prf\".**\"\n                   ELSE filter = prf\n/*=============================================================*/\n/* MAIN LOOP - EXIT WHEN END (PF3) IS ENTERED (RC-8)           */\n/*=============================================================*/\nstartlp:\ncc = 0\nDO WHILE cc < 8\n/*=============================================================*/\n/* DISPLAY THE TABLE                                           */\n/*=============================================================*/\nTBDIS:\n   IF rebuild THEN DO\n      IF \\buildlist() THEN SIGNAL taberr\n   END\n   ADDRESS ISPEXEC \"TBDISPL\" tabname,\n      \"PANEL(\"panel\") CURSOR(\"csr\")\"\n   cc = RC\n   PARSE UPPER VAR zcmd cmd cmdprms\n   IF filter /= savefilt THEN DO\n      IF \\buildlist() THEN SIGNAL taberr\n   END\n/*=============================================================*/\n/* PROCESS COMMANDS                                            */\n/*=============================================================*/\n      SELECT\n         WHEN cmd  = 'F'       THEN  CALL find\n         WHEN cmd  = 'FIND'    THEN  CALL find\n         WHEN cmd  = 'R'       THEN  CALL refresh\n         WHEN cmd  = 'REFRESH' THEN  CALL refresh\n         WHEN cmd  = 'L'       THEN  CALL long\n         WHEN cmd  = 'LONG'    THEN  CALL long\n         WHEN cmd  = 'S'       THEN  CALL short\n         WHEN cmd  = 'SHORT'   THEN  CALL short\n         OTHERWISE NOP\n      END\n/*=============================================================*/\n/* PROCESS LINE COMMANDS UNTIL ALL SELECTED ROWS ARE DONE      */\n/*=============================================================*/\n   DO WHILE ztdsels > 0\n      SELECT\n         WHEN acmd = 'A' THEN CALL sel\n         WHEN acmd = 'S' THEN CALL sel\n         WHEN acmd = 'C' THEN CALL copy\n         WHEN acmd = 'D' THEN CALL delete\n         WHEN acmd = 'R' THEN CALL replic\n         WHEN acmd = 'U' THEN CALL uacc\n         OTHERWISE NOP\n      END\n      IF ztdsels > 1 THEN DO\n         ADDRESS ISPEXEC \"TBDISPL\" tabname\n      END\n      ELSE DO\n         ztdsels = 0\n      END\n   END\nEND\nSIGNAL exit\n\n/*=============================================================*/\n/* USER HAS EXITED THE DIALOG - CLEAN UP, CLOSE THE TABLE, ETC */\n/*=============================================================*/\ntaberr:\nSAY 'Error building ISPF table - Fucntion terminated'\nSIGNAL exit0\n\nexit:\nADDRESS ISPEXEC \"TBEND\" tabname\n\nexit0:\nEXIT\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: Long                                  */\n/*=============================================================*/\nlong:\n   rpanel = 'RFLD2'\n   panel  = 'RFLD2'\n   ADDRESS ISPEXEC \"VPUT rpanel\"\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: Short                                 */\n/*=============================================================*/\nshort:\n   rpanel = 'RFLD1'\n   panel  = 'RFLD1'\n   ADDRESS ISPEXEC \"VPUT rpanel\"\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: Refresh                               */\n/*=============================================================*/\nrefresh:\n   rebuild = 1\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: FIND                                  */\n/*=============================================================*/\nfind:\n   pparm1 = cmdprms\"*\"\n   ADDRESS ISPEXEC \"TBSCAN\" tabname,\n      \"ARGLIST(pparm1) POSITION(crp)\"\n   crpsave = crp\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND U (Uacc)                                       */\n/*=============================================================*/\nuacc:\nTRACE off\n   PARSE UPPER VAR pparm1 ds x\n   IF POS(' 'pparm2' ',' NONE READ ALTER UPDATE CONTROL ') = 0 THEN DO\n      pmsg = 'Bad UACC entered:' pparm2'.'\n      pmsg = pmsg' Enter valid UACC value in the \"Input Data\" field'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   ELSE DO\n      \"ALTDSD '\"ds\"' UACC(\"pparm2\")\" pparm3\n      xcc = RC\n      IF xcc > 0 THEN DO\n         pmsg = 'ALTDSD command failed, return code' xcc'.'\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n         ADDRESS ISPEXEC \"TBPUT\" tabname\n      END\n      ELSE DO\n         pmsg = 'UACC changed to' pparm2'.'\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n         ADDRESS ISPEXEC \"TBPUT\" tabname\n      END\n   END\nTRACE off\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND S (SELECT)                                     */\n/*=============================================================*/\nsel:\n   TRACE off\n   PARSE UPPER VAR pparm1 ds x\n   CALL AULD ds pparm3\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND C (COPY) and R (Replic)                        */\n/*=============================================================*/\nreplic:\n   PARSE UPPER VAR pparm1 pparm2 x\n   ADDRESS ISPEXEC \"TBPUT\" tabname\n   RETURN\n\ncopy:\n   PARSE UPPER VAR pparm1 ds x\n   IF pparm3 = 'GENERIC' THEN DO\n      fgeneric = 'FGENERIC'\n      generic = 'GENERIC'\n   END\n   ELSE DO\n      fgeneric = ''\n      generic = ''\n   END\n   x = OUTTRAP(\"CMD.\",5)\n   \"ADDSD '\"pparm2\"' FROM('\"ds\"')\" generic fgeneric\n   xcc = RC\n   x = OUTTRAP(\"OFF\")\n   IF xcc = 0 THEN DO\n      pparm1 = pparm2\n      pparm2 = ''\n      IF generic = 'GENERIC' THEN DO\n         pparm1 = pparm1' (G)'\n         pparm3 = 'GENERIC'\n      END\n      pmsg = 'Profile created successfully'\n      ADDRESS ISPEXEC \"TBADD\"   tabname\n      ADDRESS ISPEXEC \"TBSKIP\"  tabname \"NUMBER(+1)\"\n   END\n   ELSE DO\n      pmsg = cmd.1\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n   END\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND D (Delete)                                     */\n/*=============================================================*/\ndelete:\n   PARSE UPPER VAR pparm1 ds x\n   IF pparm3 = 'GENERIC' THEN generic = 'GENERIC'\n                ELSE generic = ''\n   confmsg = 'delete RACF profile' ds\n   ADDRESS ISPEXEC \"DISPLAY PANEL(CONFIRM)\"\n   IF RC = 0 THEN DO\n      x = OUTTRAP(\"CMD.\",5)\n      \"DELDSD '\"ds\"'\" generic\n      xcc = RC\n      x = OUTTRAP(\"OFF\")\n      rebuild = 1\n      IF xcc = 0 THEN DO\n         pmsg = 'Profile' ds 'deleted'\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n         ADDRESS ISPEXEC \"TBDELETE\" tabname\n      END\n      ELSE DO\n         pmsg = 'Profile' ds 'not deleted'\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n         ADDRESS ISPEXEC \"TBDELETE\" tabname\n      END\n   END\n   ELSE DO\n      pmsg = 'Profile' ds 'not deleted'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI509)\"\n   END\n   RETURN\n\n/*-------------------------------------------*/\n/* Build new profile list table              */\n/* Return \"0\" means no datasets found        */\n/* Return \"1\" means ok                       */\n/*-------------------------------------------*/\nbuildlist:\npmsg = ''\npparm2 = ''\nrebuild = 0\nx = OUTTRAP(\"LINE.\",maxout)\n \"SEARCH \"scrn\"(\"filter\")\"\nx = OUTTRAP(\"OFF\")\ncc = RC\nADDRESS ISPEXEC \"TBCREATE\" tabname \"NOWRITE NAMES(\"names\") REPLACE\"\nIF RC > 4 THEN RETURN 0\n\nsavefilt = filter\n\nIF cc = 0 THEN DO num = 1 to line.0\n   PARSE UPPER VAR line.num pparm1 gener\n   IF gener = '(G)' THEN DO\n      pparm1 = pparm1\" (G)\"\n      pparm3 = \"GENERIC\"\n   END\n   ELSE DO\n      pparm3 =\n   END\n   IF pparm1 /= '' THEN DO\n      ADDRESS ISPEXEC \"TBADD\" tabname\n   END\ntrace off\nEND\nELSE DO\n   pparm1 = 'No profiles Found'\n   ADDRESS ISPEXEC \"TBADD\" tabname\nEND\nsortflds = 'pparm1,c,a'\nADDRESS ISPEXEC \"TBSORT\" tabname \"FIELDS(\"sortflds\")\"\nADDRESS ISPEXEC \"TBTOP\"  tabname\nRETURN 1\n\n\n/*-------------------------------------------*/\n/*-------------------------------------------*/\n/*---- s u b r o u t i n e s ----------------*/\n/*-------------------------------------------*/\n/*-------------------------------------------*/\n\n/*-------------------------------------------*/\n/* Get keyword parm (return value)           */\n/*-------------------------------------------*/\nxget:\nARG var1,var2\npstr = \" \"var1\" \"\nIF POS(\" \"var1\" \",\" \"args\" \") = 0 THEN RETURN var2\nELSE RETURN var1\n\n/*-------------------------------------------*/\n/* Get keyword parm (return boolean)         */\n/*-------------------------------------------*/\niget:\nARG var\npstr = \" \"var\" \"\nIF POS(\" \"var\" \",\" \"args\" \") = 0 THEN RETURN 0\nELSE RETURN 1\n\n/*-------------------------------------------*/\n/* Get keyword value parameter               */\n/*-------------------------------------------*/\nkget:\nARG var, default\nPARSE UPPER VAR args (var)'(' var ')'\nIF var = '' THEN var = default\nRETURN var\n\n./ ADD NAME=RFLD1    0100-02365-02365-1147-00037-00037-00000-JMILLER\n)ATTR\n/*=========================================================*/\n/* RFLIST01 - Display list of RACF dataset profiles        */\n/*---------------------------------------------------------*/\n/* J Miller 02/08/90                                       */\n/*=========================================================*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD('''')\n  _ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  \u00a2 TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n)BODY WIDTH(80)\n%----------------------------- Profile Detail ---------------------------------+\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +\n+\n+Search Filter ===>_FILTER                                    +\n+\n+ %Line Commands:+\n+\n+ %A+- Access List %C+- Copy profile %D+- Delete profile %L+-Long list format\n+ %R+- Copy dsn    %U+- Change UACC\n+\n%    &PTYPE\n)MODEL\n !Z   {Z                             +_Z                            +_Z       +\n)INIT\n  .ZVARS = '( +\n            ZSCML                                      +\n            ACMD                                       +\n            PPARM1                                     +\n            PPARM2                                     +\n            PPARM4                                     +\n            )'\n &ACMD = ' '\n)PROC\n  VPUT (ZSCML    ) PROFILE\n  &RESPONSE = .RESP\n)END\n./ ADD NAME=RFLD2    0100-02365-02365-1147-00040-00040-00000-JMILLER\n)ATTR\n/*=========================================================*/\n/* RFLIST01 - Display list of RACF dataset profiles        */\n/*---------------------------------------------------------*/\n/* J Miller 02/08/90                                       */\n/*=========================================================*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD('''')\n  _ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  # TYPE(OUTPUT) CAPS(OFF) JUST(LEFT) INTENS(HIGH) COLOR(RED)\n  \u00a2 TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n)BODY WIDTH(80)\n%----------------------------- Profile Detail ---------------------------------+\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +\n+\n+Search Filter ===>_FILTER                                    +\n+\n+ %Line Commands:+\n+\n+ %A+- Access List %C+- Copy profile %D+- Delete profile %S+-Short list format\n+ %R+- Copy dsn    %U+- Change UACC\n+\n%    &PTYPE\n)MODEL\n !Z   {Z                             +_Z                            +\n      #Z                                                            +\n\n)INIT\n  .ZVARS = '( +\n            ZSCML                                      +\n            ACMD                                       +\n            PPARM1                                     +\n            PPARM2                                     +\n            PMSG                                       +\n            )'\n &ACMD = ' '\n)PROC\n  VPUT (ZSCML    ) PROFILE\n  &RESPONSE = .RESP\n)END\n./ ADD NAME=RFMAI50  0100-02365-02365-1147-00030-00030-00000-JMILLER\nRFMAI500 'User/group added'\n'Access added for &profnam: id: &pparm1  access: &pparm2'\n\nRFMAI501 'User/group not found'\n'User/group &pparm1 not defined to RACF'\n\nRFMAI502 'User/group deleted'\n'Access deleted  for &profnam: id: &pparm1  access: &pparm2'\n\nRFMAI503 'RACF error'\n'Error processing RACF command: permit rc &cc'\n\nRFMAI504 'Profile not found'\n'Profile &pparm1 not found in RACF class &class'\n\nRFMAI505 'Invalid class'\n'Class &class is not a valid RACF class'\n\nRFMAI506 'No entries found'\n'&mask - no entries meet search criteria'\n\nRFMAI507 'Error - press pf1'\n'&pmsg'\n\nRFMAI508 'Operation ok'\n'&pmsg'\n\nRFMAI509 'Operation cancelled'\n'&pmsg'\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RFMAI50": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x05\\x01\\x10\\x01_\\x01\\x10\\x04/\\x14V\\x00\\x18\\x00\\x1e\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-01-15T00:00:00", "modifydate": "2010-02-11T14:56:05", "lines": 24, "newlines": 30, "modlines": 0, "user": "COMPJM"}, "text": "RFMAI501 'User/group not found'\n'User/group &pparm1 not defined to RACF'\n\nRFMAI503 'RACF error'\n'Error processing RACF command: permit rc &cc'\n\nRFMAI504 'Profile not found'\n'Profile &pparm1 not found in RACF class &class'\n\nRFMAI505 'Invalid class'\n'Class &class is not a valid RACF class'\n\nRFMAI506 'No entries found'\n'&mask - no entries meet search criteria'\n\nRFMAI507 ' ' .TYPE=WARNING\n'&pmsg'\n\nRFMAI508 ' '\n'&pmsg'\n\nRFMAI509 'Operation cancelled'\n'&pmsg'\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLP": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01A\\x00R\\x01\\x10\\x01?\\x01\\x10\\x07\\x8f\\x19E\\x04p\\x02\\xe0\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.65", "flags": 0, "createdate": "2010-01-13T00:00:00", "modifydate": "2010-03-19T19:45:52", "lines": 1136, "newlines": 736, "modlines": 0, "user": "COMPJM"}, "text": "/*-----------------------------------------------------=Rexx=--*/\n/* RLP  - Racf List Profile - V2.2                             */\n/*-------------------------------------------------------------*/\n/* Description:                                                */\n/*   Uses ISPF table services to display and manipulate RACF   */\n/*   data set profiles.                                        */\n/*-------------------------------------------------------------*/\n/* Panels:                                                     */\n/*   RLPP00, RLPP01, RLPP02, RLPP03                            */\n/* Messages                                                    */\n/*   RFMAI500-RFMAI508                                         */\n/* Tables                                                      */\n/*   RLPT01                                                    */\n/* 2nd level Execs                                             */\n/*   RLP02                                                     */\n/*-------------------------------------------------------------*/\n/* 04/29/91 John Miller                                        */\n/* 04/16/2003 John C. Miller - Version 2.0                     */\n/* 01/15/2010 John C. Miller - Fixed various bugs.             */\n/*    - Fixed DELETE so the ISPF table row gets deleted when   */\n/*      a profile is deleted.                                  */\n/*    - Fixed the \"O\" line command (set OWNER).                */\n/*    - Added ISPEXEC DISPLAY SAVE/RESTORE to allow multiple   */\n/*      line commands to be entered without going into a loop. */\n/*    - Change message display so MSG2 is automatically at the */\n/*      bottom of the screen for various FAILED or SUCCEEDED   */\n/*      messages.                                              */\n/*    - Added GR option to do a SETR GENERIC(class) REFRESH.   */\n/*    - Improved some error checking and handling and made     */\n/*      some messages more apropos.                            */\n/*    - Fixed invocation parameter handling so that %RLP hlq   */\n/*      invokes the dialog with hlq.** already in the search   */\n/*      field.                                                 */\n/*    - Added Options panel for saving user options:           */\n/*      - Confirm profile delete option.                       */\n/*      - Display RACF command entered under the covers.       */\n/*    - Fixed COPY of non-DATASET CLASS profiles.              */\n/* 03/19/2010 John C. Miller - Added a special function where  */\n/*      if the user enters a filter value that has no generic  */\n/*      characters in it, then this exec assumes that the      */\n/*      value entered was a dataset name, and will build the   */\n/*      list of profiles with the single profile (if it exists)*/\n/*      that covers the DSN entered.  It answers the question: */\n/*      What profile covers DSN?                               */\n/*-------------------------------------------------------------*/\nPARSE UPPER ARG args\nPARSE UPPER ARG mask .\n\n/*=============================================================*/\n/* Set up default values                                       */\n/*=============================================================*/\nrfclass  = kget('CLASS')\nfunction = 'RFLD'\ncmdlist   = 1\nuserpref  = SYSVAR(SYSPREF)\nmode      = 'MASK'\nmode      = 'FILTER'\nmaxout    = 900\ntabname   = 'RLPT01'\nztdmark   = '* * * END OF LIST * * *'\ncc        = 0\npanel     = 'RLPP01'\ncsr       = 'ACMD'\nnames     = 'PPARM1 PPARM2 PPARM3 PMSG PPARM4'\nscrn      = 'FILTER'\npmsg      =  ''\nptype     =  '  Profile                         Input Data'\nrebuild   = 1\nrfsropt   = \"\"\n\n/*=============================================================*/\n/* Read ISPF PROFILE variables into memory.                    */\n/*=============================================================*/\nxvars = \"xCMDLIST xCNFDEL \"\nADDRESS ISPEXEC \"VGET ( \" xvars \")\"\n\nADDRESS ISPEXEC \"CONTROL ERRORS RETURN\"\nADDRESS ISPEXEC \"VGET rpanel\"\nADDRESS ISPEXEC \"VGET filter\"\n\nIF (rfclass = '') THEN DO\n   ADDRESS ISPEXEC \"VGET rfclass\"\n   IF rfclass = '' THEN DO\n      rfclass = 'DATASET'\n      ADDRESS ISPEXEC \"VPUT rfclass\"\n   END\nEND\n\nIF (rpanel = '') | (rpanel = rpanel) THEN DO\n   rpanel = panel\n   ADDRESS ISPEXEC \"VPUT rpanel\"\nEND\nELSE DO\n   panel = rpanel\nEND\n\nIF rfclass = 'DATASET' THEN DO\n   IF mask /= '' THEN prf = mask\n   ELSE prf = userpref\n   IF scrn = 'FILTER' THEN filter = prf\".**\"\n   ELSE filter = prf\nEND\nELSE DO\n   filter = mask\nEND\n/*=============================================================*/\n/* MAIN LOOP - EXIT WHEN END (PF3) IS ENTERED (RC-8)           */\n/*=============================================================*/\nstartlp:\ncc = 0\nDO WHILE cc < 8\n/*=============================================================*/\n/* DISPLAY THE TABLE                                           */\n/*=============================================================*/\nTBDIS:\n   /*-------------------------------------------------------------*/\n   /* Decide whether or not to rebuild the profile list.          */\n   /*-------------------------------------------------------------*/\n   IF rebuild THEN DO\n   /* IF rfclass = 'DATASET', */\n      IF POS(\" \"filter\" \",\" ** **.** \") > 0 THEN DO\n         confmg1 = 'The filter that you have specified, 'filter', may'\n         confmg2 = 'result in a very large output, and take several  '\n         confmg3 = 'minutes to complete.                             '\n         confact = 'proceed with filter' filter', class' rfclass'.'\n         ADDRESS ISPEXEC \"DISPLAY PANEL(CONFIRM)\"\n         IF rc = 0 THEN rebuild = 1\n         ELSE DO\n            filter = ''\n            rebuild = 0\n         END\n         confmg1=; confmg2=;confmg3=\n      END\n      IF rebuild THEN DO\n         IF \\buildlist() THEN SIGNAL taberr\n      END\n   END\n\n   /*-------------------------------------------------------------*/\n   /* Display the profile list.                                   */\n   /*-------------------------------------------------------------*/\n   ADDRESS ISPEXEC \"TBDISPL\" tabname,\n      \"PANEL(\"panel\") CURSOR(\"csr\")\"\n   cc = RC\n   PARSE UPPER VAR zcmd cmd cmdprms\n\n   /*-------------------------------------------------------------*/\n   /* If any search critera change, set the rebuild flag.         */\n   /*-------------------------------------------------------------*/\n   IF filter  /= savefilt  THEN rebuild = 1\n   IF rfclass /= saveclass THEN rebuild = 1\n   IF rfsropt /= saveopt   THEN rebuild = 1\n\n/*=============================================================*/\n/* PROCESS COMMANDS                                            */\n/*=============================================================*/\n      SELECT\n         WHEN cmd  = 'L'       THEN  CALL find\n         WHEN cmd  = 'LOCATE'  THEN  CALL find\n         WHEN cmd  = 'F'       THEN  CALL find\n         WHEN cmd  = 'FIND'    THEN  CALL find\n         WHEN cmd  = 'R'       THEN  CALL refresh\n         WHEN cmd  = 'REFRESH' THEN  CALL refresh\n         WHEN cmd  = 'RR'      THEN  CALL raclist\n         WHEN cmd  = 'RACLIST' THEN  CALL raclist\n         WHEN cmd  = 'GR'      THEN  CALL genref\n         WHEN cmd  = 'LL'      THEN  CALL long\n         WHEN cmd  = 'LONG'    THEN  CALL long\n         WHEN cmd  = 'SL'      THEN  CALL short\n         WHEN cmd  = 'SHORT'   THEN  CALL short\n         WHEN cmd  = '0'       THEN  CALL parameters\n         OTHERWISE DO\n            NOP\n         END\n      END\n/*=============================================================*/\n/* PROCESS LINE COMMANDS UNTIL ALL SELECTED ROWS ARE DONE      */\n/*=============================================================*/\n   DO WHILE ztdsels > 0\n      ADDRESS ISPEXEC \"CONTROL DISPLAY SAVE\"\n      SELECT\n         WHEN acmd = 'A'     THEN CALL sel\n         WHEN acmd = 'AM'    THEN CALL addmem\n         WHEN acmd = 'ALT'   THEN CALL aalter\n         WHEN acmd = 'ALTER' THEN CALL aalter\n         WHEN acmd = 'DM'    THEN CALL delmem\n         WHEN acmd = 'LM'    THEN CALL lstmem\n         WHEN acmd = 'S'     THEN CALL list\n         WHEN acmd = 'C'     THEN CALL copy\n         WHEN acmd = 'L'     THEN CALL list\n         WHEN acmd = 'D'     THEN CALL delete\n         WHEN acmd = 'R'     THEN CALL replic\n         WHEN acmd = 'U'     THEN CALL uacc\n         WHEN acmd = 'G'     THEN CALL convert\n         WHEN acmd = 'O'     THEN CALL owner\n         OTHERWISE NOP\n      END\n      ADDRESS ISPEXEC \"CONTROL DISPLAY RESTORE\"\n      IF ztdsels > 1 THEN DO\n         ADDRESS ISPEXEC \"TBDISPL\" tabname\n      END\n      ELSE DO\n         ztdsels = 0\n      END\n   END\nEND\nSIGNAL exit\n\n/*=============================================================*/\n/* USER HAS EXITED THE DIALOG - CLEAN UP, CLOSE THE TABLE, ETC */\n/*=============================================================*/\ntaberr:\nSAY 'Error building ISPF table - Function terminated'\nSIGNAL exit0\n\nexit:\nADDRESS ISPEXEC \"TBEND\" tabname\n\nexit0:\nEXIT\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: 0 (Parameters)                        */\n/*=============================================================*/\nparameters:\n   zcmd=\"\";cc=0\n   ADDRESS ISPEXEC \"DISPLAY PANEL(RLPP00)\"\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: Long                                  */\n/*=============================================================*/\nlong:\n   rpanel = 'RLPP02'\n   panel  = 'RLPP02'\n   ADDRESS ISPEXEC \"VPUT rpanel\"\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: Short                                 */\n/*=============================================================*/\nshort:\n   rpanel = 'RLPP01'\n   panel  = 'RLPP01'\n   ADDRESS ISPEXEC \"VPUT rpanel\"\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: Refresh                               */\n/*=============================================================*/\nrefresh:\n   rebuild = 1\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: Raclist                               */\n/*=============================================================*/\ngenref:\n   IF \\is_racf_class(rfclass) THEN DO\n      pmsg = \"Invalid RACF Class: \"rfclass\".\"\n      pmsg = left(pmsg,78)\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      RETURN\n   END\n   IF \\is_generic_class(rfclass) THEN DO\n      pmsg = \"Invalid operation: \"rfclass\" is not a GENERIC class.\"\n      pmsg = left(pmsg,78)\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      RETURN\n   END\n   cmd = 'SETROPTS GENERIC('rfclass') REFRESH'\n   cmd\n   IF rc > 0 THEN DO\n      pmsg = \"FAIL: Unable to refresh generics for class \"rfclass\".\"\n      pmsg = left(pmsg,78)\n      IF xCMDLIST = \"/\" THEN pmsg=pmsg\"\"left(\"Cmd was: \"cmd,78)\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   ELSE DO\n      pmsg = \"OK: refreshed generic profile for class \"rfclass\".\"\n      pmsg = left(pmsg,78)\n      IF xCMDLIST = \"/\" THEN pmsg=pmsg\"\"left(\"Cmd was: \"cmd,78)\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n   END\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: Raclist                               */\n/*=============================================================*/\nraclist:\n   rcmd = 'SETROPTS RACLIST('rfclass') REFRESH'\n   IF \\is_raclisted_class(rfclass) THEN DO\n      pmsg = \"Invalid operation: \"rfclass\" is not a RACLIST class.\"\n      pmsg = left(pmsg,78)\n      IF xCMDLIST = \"/\" THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      RETURN\n   END\n   x = OUTTRAP(\"xx.\",1)\n   rcmd\n   xcc = RC\n   x = OUTTRAP('OFF')\n   IF xcc > 0 THEN DO\n      pmsg = 'FAIL: 'rcmd'. Is 'rfclass' a raclisted class?'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   ELSE DO\n      pmsg = 'Raclist refresh successful for class 'rfclass'.'\n      pmsg = left(pmsg,78)\n      IF xCMDLIST = '/' THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: FIND                                  */\n/*=============================================================*/\nfind:\n   pparm1 = cmdprms\"*\"\n\n   ADDRESS ISPEXEC \"TBSCAN\" tabname,\n      \"ARGLIST(pparm1) POSITION(crp)\"\n   crpsave = crp\n   RETURN\n\n/*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/\n/* Grouping Class Commands.                                    */\n/*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/\n/*=============================================================*/\n/* Line command: Addmem.                                       */\n/*=============================================================*/\naddmem:\n   PARSE UPPER VAR pparm1 profile x\n   PARSE UPPER VAR pparm2 mem x\n   pparm2 = \"\"\n   IF substr(rfclass,1,1) /= \"G\" THEN DO\n      pmsg = 'Invalid cmd: 'rfclass' is not a grouping class.'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n      RETURN\n   END\n   RALTER rfclass profile \"ADDMEM(\"mem\")\"\n   xcc = RC\n   IF xcc > 0 THEN DO\n      pmsg = 'ADDMEM command failed, return code' xcc'.'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   ELSE DO\n      pmsg = 'Member' mem 'added.'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   RETURN\n\n/*=============================================================*/\n/* Line command: Aalter.                                       */\n/*=============================================================*/\naalter:\n   PARSE UPPER VAR pparm1 profile x\n   cmdparms = pparm2\n   pparm2 = \"\"\n   commd = 'RALTER 'rfclass profile cmdparms\n   commd\n   xcc = RC\n   IF xcc > 0 THEN DO\n      pmsg = 'FAIL: 'commd\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   ELSE DO\n      pmsg = 'OK: 'commd\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   RETURN\n\n/*=============================================================*/\n/* Line command: Delmem.                                       */\n/*=============================================================*/\ndelmem:\n   PARSE UPPER VAR pparm1 profile x\n   PARSE UPPER VAR pparm2 mem x\n   pparm2 = \"\"\n   IF substr(rfclass,1,1) /= \"G\" THEN DO\n      pmsg = 'Invalid cmd: 'rfclass' is not a grouping class.'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n      RETURN\n   END\n   RALTER rfclass profile \"DELMEM(\"mem\")\"\n   xcc = RC\n   IF xcc > 0 THEN DO\n      pmsg = 'DELMEM command failed, return code' xcc'.'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   ELSE DO\n      pmsg = 'Member' mem 'deleted.'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   RETURN\n\n/*=============================================================*/\n/* Line command: lstmem.                                       */\n/*=============================================================*/\nlstmem:\n   PARSE UPPER VAR pparm1 profile x\n   PARSE UPPER VAR pparm2 mem x\n   pparm2 = \"\"\n   IF substr(rfclass,1,1) /= \"G\" THEN DO\n      pmsg = 'Invalid cmd: 'rfclass' is not a grouping class.'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n      RETURN\n   END\n   x = OUTTRAP(\"ld.\",9999)\n   RLIST rfclass profile\n   x = OUTTRAP('OFF')\n   drop lstmem.\n   lstmem.0 = 2\n   lstmem.1 = 'Members in profile' profile':'\n   lstmem.2 = '----------------------------'\n   DO qq = 1 TO ld.0\n      IF POS('RESOURCES IN GROUP',ld.qq) > 0 THEN,\n      DO rr = qq+2 to ld.0\n         PARSE VAR ld.rr zmem .\n         IF zmem = \"\" THEN LEAVE rr\n         zz = lstmem.0 + 1\n         lstmem.0 = zz\n         lstmem.zz = zmem\n      END\n   END\n   call view \"lstmem.\"\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND U (Uacc)                                       */\n/*=============================================================*/\nuacc:\n   PARSE UPPER VAR pparm1 ds x\n   IF pparm2 = \"\" THEN DO\n      m=\"\"\n      m1=\"Error: Enter new UACC value in the input field for this line.\"\n      m1=left(m1,78)\n      m2=\"Tab to the right under 'Data Input' heading to enter UACC.\"\n      m2=left(m2,78)\n      pmsg = m1\"\"m2\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      RETURN\n   END\n   IF POS(' 'pparm2' ',' NONE READ ALTER UPDATE CONTROL ') = 0 THEN DO\n      pmsg = 'Bad UACC entered:' pparm2'.'\n      pmsg = pmsg' Enter valid UACC value in the \"Input Data\" field.'\n      pmsg = left(pmsg,78)\n      p2 = \"Valid UACC values are: CONTROL NONE READ UPDATE ALTER\"\n      pmsg = pmsg\"\"left(p2,78)\n      pparm2 = \"\"\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n      RETURN\n   END\n   IF rfclass = 'DATASET' THEN DO\n      rcmd = \"ALTDSD '\"ds\"' UACC(\"pparm2\")\" pparm3\n   END\n   ELSE DO\n      rcmd = \"RALTER \" rfclass ds \"UACC(\"pparm2\")\"\n   END\n   rcmd\n   xcc = RC\n   IF xcc > 0 THEN DO\n      pmsg = 'Command failed, UACC not changed. ' xcc\n      pmsg = left(pmsg,78)\n      IF xCMDLIST = '/' THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n      pparm2  = \"\"\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   ELSE DO\n      pmsg = 'UACC for 'ds' in 'rfclass' class changed to' pparm2'.'\n      pmsg = left(pmsg,78)\n      IF xCMDLIST = '/' THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n      pparm2  = \"\"\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n   END\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND S (SELECT)                                     */\n/*=============================================================*/\nsel:\n   PARSE UPPER VAR pparm1 ds x\n   CALL RLP02 ds pparm3 \"CLASS(\"rfclass\")\"\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND C (COPY) and R (Replic)                        */\n/*=============================================================*/\nreplic:\n   PARSE UPPER VAR pparm1 pparm2 x\n   ADDRESS ISPEXEC \"TBPUT\" tabname\n   RETURN\n\ncopy:\ntrace off\n   PARSE UPPER VAR pparm1 ds x\n   IF pparm3 = 'GENERIC' THEN DO\n      fgeneric = 'FGENERIC'\n      generic = 'GENERIC'\n   END\n   ELSE DO\n      fgeneric = ''\n      generic = ''\n   END\n\n   /*----------------------------------------------------------*/\n   /* Make sure user entered a new profile name in input fld.  */\n   /*----------------------------------------------------------*/\n   IF pparm2 = \"\" THEN DO\n      m=\"\"\n      m1=\"Error: Enter new profile name in the input field \"\n      m1=m1\"for this line.\"\n      m1=left(m1,78)\n      m2=\"Tab to the right under 'Data Input' heading to enter the new \"\n      m2=m2\"profile name.\"\n      m2=left(m2,78)\n      pmsg = m1\"\"left(\"\",78)\"\"m2\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      RETURN\n   END\n\n   IF rfclass = 'DATASET' THEN DO\n      rcmd = \"ADDSD '\"pparm2\"' FROM('\"ds\"')\" generic fgeneric\n   END\n   ELSE DO\n      rcmd = \"RDEFINE \"rfclass\" \"pparm2\" FROM(\"ds\")\"\n   END\n\n   x = OUTTRAP(\"err.\",5)\n      rcmd\n      xcc = RC\n   x = OUTTRAP(\"OFF\")\n   IF xcc = 0 THEN DO\n      temp = pparm2\n      pparm2 = ''\n      ADDRESS ISPEXEC \"TBPUT\"   tabname\n      pparm1 = temp\n      IF generic = 'GENERIC' THEN DO\n         pparm1 = pparm1' (G)'\n         pparm3 = 'GENERIC'\n      END\n      pmsg = 'Profile created successfully'\n      pmsg = left(pmsg,78)\n      IF xCMDLIST = \"/\" THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      ADDRESS ISPEXEC \"TBADD\"   tabname\n      ADDRESS ISPEXEC \"TBSKIP\"  tabname \"NUMBER(+1)\"\n   END\n   ELSE DO\n      pmsg = \"Error: Copy of profile \"ds\" failed.\"\n      pmsg = left(pmsg,78)\n      DO xxx = 1 TO err.0\n         pmsg=pmsg\"\"left(err.xxx,78)\n      END\n      IF xCMDLIST = \"/\" THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n      ADDRESS ISPEXEC \"TBPUT\" tabname\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n   END\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND D (Delete)                                     */\n/*=============================================================*/\ndelete:\ntrace off\n   /*----------------------------------------------------------*/\n   /* Confirm deletion of profile.                             */\n   /*----------------------------------------------------------*/\n   PARSE UPPER VAR pparm1 ds x\n   trace off\n   IF xCNFDEL = \"/\" THEN DO\n   trace off\n      confmg1 = 'Delete RACF profile' ds' in class 'rfclass':'\n      confact = 'delete the profile'\n      ADDRESS ISPEXEC \"DISPLAY PANEL(CONFIRM)\"\n      IF rc > 0 THEN DO\n         pmsg = 'Profile' ds 'not deleted'\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI509)\"\n         RETURN\n      END\n   END\n\n   /*----------------------------------------------------------*/\n   /* User wants to delete profile--do so.                     */\n   /*----------------------------------------------------------*/\n   IF pparm3 = 'GENERIC' THEN extraparms = 'GENERIC'\n                ELSE extraparms = 'NOSET'\n   /*----------------------------------------------------------*/\n   /* Process DATASET profile.                                 */\n   /*----------------------------------------------------------*/\n   IF rfclass = 'DATASET' THEN DO\n     rcmd = \"DELDSD '\"ds\"'\" extraparms\n     rcmd\n     del_rc = rc\n      IF rc = 0 THEN DO\n         pmsg = 'Profile' ds 'deleted'\n         pmsg = left(pmsg,78)\n         IF xCMDLIST = \"/\" THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n         ADDRESS ISPEXEC \"TBDELETE\" tabname\n      END\n      ELSE DO\n         pmsg = 'Profile' ds 'not deleted'\n         pmsg = left(pmsg,78)\n         IF xCMDLIST = \"/\" THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n         ADDRESS ISPEXEC \"TBDELETE\" tabname\n      END\n   END\n   /*----------------------------------------------------------*/\n   /* Process GENERAL RESOURCE profile.                        */\n   /*----------------------------------------------------------*/\n   ELSE DO\n      rcmd = \"RDELETE \"rfclass ds\n      rcmd\n      IF rc = 0 THEN DO\n         pmsg = 'Profile' ds 'in class' rfclass 'deleted.'\n         pmsg = left(pmsg,78)\n         IF xCMDLIST = \"/\" THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI509)\"\n         ADDRESS ISPEXEC \"TBDELETE\" tabname\n      END\n      ELSE DO\n         pmsg = 'Error: Profile' ds 'in class' rfclass 'not deleted.'\n         pmsg = left(pmsg,78)\n         IF xCMDLIST = \"/\" THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI509)\"\n      END\n   END\n\ntrace off\nRETURN\n\n/*=============================================================*/\n/* LINE COMMAND G (Convert)                                    */\n/*=============================================================*/\nconvert:\n   PARSE UPPER VAR pparm1 ds x\n   IF pparm3 = 'GENERIC' THEN generic = 'GENERIC'\n                ELSE generic = ''\n   IF generic = 'GENERIC' THEN DO\n      RETURN\n   END\n\n   confmg1 = 'Discrete profile' ds\n   confmg2 = 'will be converted to Generic;'\n   confmsg = 'proceed with conversion'\n   ADDRESS ISPEXEC \"DISPLAY PANEL(CONFIRM)\"\n   IF RC = 0 THEN DO\n      x = OUTTRAP(\"CMD.\",5)\n      /* Add a generic using the discrete as a model */\n      \"AD '\"ds\"' GENERIC FROM('\"ds\"')\"\n      /* If no good, throw error and return          */\n      IF rc > 4 THEN DO\n         pmsg = 'Error converting' ds'.'\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n         RETURN\n      END\n      /* If is good, delete the discrete profile     */\n      \"DELDSD '\"ds\"'\" generic\n      xcc = RC\n      x = OUTTRAP(\"OFF\")\n      rebuild = 1\n\n      /* If delete failed, try NOSET parm     */\n      IF xcc > 0 THEN DO\n         \"DELDSD '\"ds\"' NOSET\"\n         xcc = RC\n      END\n\n      IF xcc = 0 THEN DO\n         pmsg = 'Profile' ds 'converted.'\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n      END\n      ELSE DO\n         pmsg = 'Profile' ds 'not converted.'\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      END\n   END\n   ELSE DO\n      pmsg = 'Profile' ds 'not converted.'\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI509)\"\n   END\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND L (List)                                       */\n/*=============================================================*/\nlist:\n   PARSE UPPER VAR pparm1 ds x\n   IF pparm3 = 'GENERIC' THEN generic = 'GENERIC'\n                ELSE generic = ''\n   segments = \"\"\n   IF rfclass =  'STARTED' THEN segments = 'STDATA'\n   IF rfclass /= 'DATASET' THEN DO\n      x = OUTTRAP(\"ld.\",9999)\n      \"RLIST \"rfclass ds generic segments \"AU\"\n      x = OUTTRAP('OFF')\n      call view \"ld.\"\n   END\n   ELSE DO\n      x = OUTTRAP(\"ld.\",9999)\n      \"LD DA('\"ds\"')\" generic \"HISTORY AU\"\n      x = OUTTRAP('OFF')\n      call view \"ld.\"\n   END\n   return\n\n/*=============================================================*/\n/* LINE COMMAND O (Owner).  Change owner of this profile.      */\n/*=============================================================*/\nowner:\n   PARSE VAR pparm1 zprofname zgenflag .\n   IF zgenflag = '(G)' THEN zgenflag = 'GENERIC'\n   ELSE zgenflag = ''\n   /*----------------------------------------------------------*/\n   /* Make sure user entered an owner in the input field.      */\n   /*----------------------------------------------------------*/\n   IF pparm2 = \"\" THEN DO\n      m=\"\"\n      m1=\"Error: Enter new OWNER in the input field for this line.\"\n      m1=left(m1,78)\n      m2=\"Tab to the right under 'Data Input' heading to enter owner.\"\n      m2=left(m2,78)\n      pmsg = m1\"\"left(\"\",78)\"\"m2\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      RETURN\n   END\n   IF \\is_rf_group(pparm2) & \\is_rf_user(pparm2) THEN DO\n      m=\"\"\n      m1=\"Error: New owner must be a RACF userid or group.\"\n      m1=left(m1,78)\n      m2=pparm2 \"is not a valid RACF userid or group.\"\n      m2=left(m2,78)\n      pmsg = m1\"\"left(\"\",78)\"\"m2\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      RETURN\n   END\n   IF rfclass = 'DATASET' THEN DO\n      rcmd = \"ALTDSD '\"zprofname\"' OWNER(\"pparm2\")\" zgenflag\n   END\n   ELSE DO\n      rcmd = \"RALTER \"rfclass\" \"zprofname\" OWNER(\"pparm2\")\"\n   END\n   rcmd\n   IF rc = 0 THEN DO\n      pmsg = 'Owner for' pparm1 'changed to' pparm2'.'\n      pmsg=left(pmsg,78)\n      IF xCMDLIST = '/' THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n   END\n   ELSE DO\n      pmsg = \"Error: Unable to change owner of \"zprofname\" to \"pparms\".\"\n      pmsg=left(pmsg,78)\n      IF xCMDLIST = '/' THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n      ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n   END\n   return\n\n/*-------------------------------------------*/\n/* Build new profile list table              */\n/* Return \"0\" means no datasets found        */\n/* Return \"1\" means ok                       */\n/*-------------------------------------------*/\nbuildlist:\npmsg = ''\npparm2 = ''\nrebuild = 0\n\n/*----------------------------------------------------------------*/\n/* Special case:  If the search filter has no generic             */\n/* characters, and the class is DATASET, then find out what if    */\n/* any profiles cover the entered value.                          */\n/*----------------------------------------------------------------*/\nIF rfclass = 'DATASET' & \\is_generic(filter) THEN DO\n   dsn = filter\n   ADDRESS ISPEXEC \"TBCREATE\" tabname \"NOWRITE NAMES(\"names\") REPLACE\"\n   IF RC > 4 THEN RETURN 0\n\n   /*-------------------------------------------------------------*/\n   /* See if a discrete profile exists for the dataset.           */\n   /*-------------------------------------------------------------*/\n   x = OUTTRAP('sr.',5)\n       \"LISTDSD DA('\"dsn\"') NOGENERIC\"\n       cc = rc\n   x = OUTTRAP('OFF')\n   IF cc = 0 THEN DO\n      pparm1 = dsn\n      ADDRESS ISPEXEC \"TBADD\" tabname\n      RETURN 1\n   END\n\n   /*-------------------------------------------------------------*/\n   /* No discrete profile exists - Check for a generic profile.   */\n   /* If one exists, parse the name out of line 1 of the output.  */\n   /*-------------------------------------------------------------*/\n   x = OUTTRAP('sr.',5)\n       \"LISTDSD DA('\"dsn\"') GENERIC\"\n       cc = rc\n   x = OUTTRAP('OFF')\n   IF cc = 0 THEN DO\n      PARSE VAR sr.1 \"INFORMATION FOR DATASET \" prof\n      prof = STRIP(prof,\"B\")\n      pparm1 = prof\n      ADDRESS ISPEXEC \"TBADD\" tabname\n      RETURN 1\n   END\n   /*----------------------------------------------------------------*/\n   /* No profiles found for the dataset entered.  Enter a dummy      */\n   /* record for the table display.                                  */\n   /*----------------------------------------------------------------*/\n   pparm1 = 'PROFILE NOT FOUND FOR' dsn'.'\n   ADDRESS ISPEXEC \"TBADD\" tabname\n   RETURN 1\nEND\n\n/*-------------------------------------------*/\n/* Make sure class is valid.                 */\n/*-------------------------------------------*/\nIF \\is_racf_class(rfclass) THEN DO\n   m=\"\"\n   m1=\"Error: \"rfclass\" is not a valid RACF class.\"\n   m1=left(m1,78)\n   m2=\"Enter a valid RACF class to continue.\"\n   m2=left(m2,78)\n   pmsg = m1\"\"left(\"\",78)\"\"m2\n   ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n   rebuild = 1\nEND\n\naaa:\nx = OUTTRAP(\"LINE.\",maxout)\n \"SEARCH \"scrn\"(\"filter\") CLASS(\"rfclass\")\" rfsropt\n srcc = rc\nx = OUTTRAP(\"OFF\")\nADDRESS ISPEXEC \"TBCREATE\" tabname \"NOWRITE NAMES(\"names\") REPLACE\"\nIF RC > 4 THEN RETURN 0\n\nsavefilt = filter\nsaveclass = rfclass\nsaveopt   = rfsropt\n\nIF srcc = 0 THEN DO num = 1 to line.0\n   PARSE UPPER VAR line.num pparm1 gener\n   IF gener = '(G)' THEN DO\n      pparm1 = pparm1\" (G)\"\n      pparm3 = \"GENERIC\"\n   END\n   ELSE DO\n      pparm3 =\n   END\n   IF pparm1 /= '' THEN DO\n      ADDRESS ISPEXEC \"TBADD\" tabname\n   END\nEND\nELSE DO\n   pparm1 = 'No profiles Found'\n   ADDRESS ISPEXEC \"TBADD\" tabname\nEND\nsortflds = 'pparm1,c,a'\nADDRESS ISPEXEC \"TBSORT\" tabname \"FIELDS(\"sortflds\")\"\nADDRESS ISPEXEC \"TBTOP\"  tabname\nRETURN 1\n\n\n/*-------------------------------------------*/\n/*-------------------------------------------*/\n/*-------------------------------------------*/\n/*---- s u b r o u t i n e s ----------------*/\n/*-------------------------------------------*/\n/*-------------------------------------------*/\n/*-------------------------------------------*/\n\n/*-------------------------------------------*/\n/* Get keyword parm (return value)           */\n/*-------------------------------------------*/\nxget:\nARG var1,var2\npstr = \" \"var1\" \"\nIF POS(\" \"var1\" \",\" \"args\" \") = 0 THEN RETURN var2\nELSE RETURN var1\n\n/*---------------------------------------------------------*/\n/* ISPF EDIT of a stem var contents.                       */\n/*---------------------------------------------------------*/\nview:\nPARSE ARG stem service\nif service = \"\" THEN service = \"BROWSE\"\n/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/\n/* Allocate temporary file; write command output to it;    */\n/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/\n##ddn = LEFT(\"DD\"TIME('S'),7)\n\"ALLOC FI(\"##ddn\") DSORG(PS) RECFM(F B) LRECL(80) BLKSIZE(8000)\",\n   \"NEW TRACKS UNIT(SYSDA) SP(15,5)\"\nINTERPRET '\"EXECIO * DISKW '##ddn' (STEM 'stem' FINIS\"'\n/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/\n/* Assign dataid; edit or browse it; free the dataid.      */\n/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/\nADDRESS ISPEXEC \"LMINIT DATAID(##id) DDNAME(\"##ddn\")\"\nADDRESS ISPEXEC service \"DATAID(\"##id\")\"\nADDRESS ISPEXEC \"LMFREE DATAID(\"##id\")\"\n\n\"FREE  FI(\"##ddn\")\"\nreturn\n\n/*-------------------------------------------*/\n/* Get keyword parm (return boolean)         */\n/*-------------------------------------------*/\niget:\nARG var\npstr = \" \"var\" \"\nIF POS(\" \"var\" \",\" \"args\" \") = 0 THEN RETURN 0\nELSE RETURN 1\n\n/*-------------------------------------------*/\n/* Get keyword value parameter               */\n/*-------------------------------------------*/\nkget:\nARG var, default\nPARSE UPPER VAR args (var)'(' var ')'\nIF var = '' THEN var = default\nRETURN var\n\n/*---------------------------------------------------Rexx--*/\n/* JULIAN  - Convert between gregorian and julian dates.   */\n/* v1.0                                                    */\n/*---------------------------------------------------------*/\n/* For gregorian input, assumes mm/dd/yy or mm/dd/yyyy     */\n/* For julian input, assumes yyddd or yyyyddd              */\n/*---------------------------------------------------------*/\n/* Copyright 2003 JMIT.                                    */\n/*---------------------------------------------------------*/\n/* 04/08/2003 John C. Miller                               */\n/*---------------------------------------------------------*/\nPARSE ARG ##date .\n\ndays.1  = 31; days.2  = 28; days.3  = 31; days.4  = 30; days.5  = 31;\ndays.6  = 30; days.7  = 31; days.8  = 31; days.9  = 30; days.10 = 31;\ndays.11 = 30; days.12 = 31\n\n/*---------------------------------------------------------*/\n/* A \"/\" was found in the input date, so assume gregorian  */\n/*---------------------------------------------------------*/\nIF POS(\"/\",##date) > 1 THEN DO\n   IF length(##date) = 8 THEN DO\n      year = substr(##date,7,2)\n      IF year > 50 THEN year = \"19\"year\n      ELSE year = \"20\"year\n   END\n   ELSE IF length(##date) = 10 THEN DO\n      year = substr(##date,7,4)\n   END\n   ELSE DO\n      exit\n      RETURN 0\n   END\n   /* Adjust for leap year.                                   */\n   IF year // 4= 0 THEN days.2 = 29\n   month = substr(##date,1,2); day = substr(##date,4,2)\n   dayctr = day\n   DO z = 1 TO month-1\n      dayctr = days.z + dayctr\n   END\n   return year\"/\"RIGHT(\"000\"dayctr,3)\nEND\n/*---------------------------------------------------------*/\n/* Input was julian, so return gregorian.                  */\n/*---------------------------------------------------------*/\nELSE DO\n   IF length(##date) = 5 THEN DO\n      year = substr(##date,1,2)\n      IF year > 50 THEN year = \"19\"year\n      ELSE year = \"20\"year\n      day = substr(##date,3,3)\n   END\n   ELSE IF length(##date) = 7 THEN DO\n      year = substr(##date,1,4)\n      day = substr(##date,5,3)\n   END\n   ELSE DO\n      return 0\n   END\n   ctr = day + 0\n   DO z = 1 TO 12\n      ctr = ctr - days.z\n      IF ctr < 0 THEN LEAVE\n   END\n   ctr = ctr + days.z\n   return right(\"00\"z,2)\"/\"right(\"00\"ctr,2)\"/\"year\nEND\n\n/*-------------------------------------------------------------*/\n/* is_rf_group - Returns 1 if passed value is a RACF group.    */\n/*-------------------------------------------------------------*/\nis_rf_group:\nARG ##grp\n##x = OUTTRAP(\"##y.\",15)\n\"LG \"##grp\n##x = OUTTRAP(\"OFF\")\nIF POS(\" NAME NOT FOUND IN RACF DATA SET\",##y.1) > 0 THEN RETURN 0\nIF POS(\" INVALID GROUP\",##y.1) > 0 THEN RETURN 0\nRETURN 1\n\n/*-------------------------------------------------------------*/\n/* is_rf_user - Returns 1 if passed value is a RACF user.      */\n/*-------------------------------------------------------------*/\nis_rf_user:\nARG ##usr\n##x = OUTTRAP(\"##y.\",15)\n\"LU \"##usr\n##x = OUTTRAP(\"OFF\")\nIF POS(\" UNABLE TO LOCATE USER\",##y.1) > 0 THEN RETURN 0\nIF POS(\" INVALID USERID\",##y.1) > 0 THEN RETURN 0\nRETURN 1\n\n/*-------------------------------------------------------------*/\n/* am_i_rf_special - Returns 1 if userid is RACF special.      */\n/* This works even if you are not RACF SPECIAL, since you can  */\n/* always list your own userid.                                */\n/*-------------------------------------------------------------*/\nam_i_rf_special:\n##x = OUTTRAP(\"##y.\",10)\n\"LU \"USERID()\n##x = OUTTRAP(\"OFF\")\nDO ##x = 1 TO ##y.0\n   PARSE VAR ##y.##x \"ATTRIBUTES=\" ##attr\n   IF POS(\"SPECIAL\",\" \"##attr) > 0 THEN RETURN 1\nEND\nRETURN 0\n\n/*-------------------------------------------------------------*/\n/* is_raclisted                                                */\n/* Return if this is a RACF group that is RACLISTed.           */\n/*-------------------------------------------------------------*/\nis_raclisted_class:\nPARSE UPPER ARG ##class .\nIF \\is_racf_class(##class) THEN RETURN 0\nPARSE UPPER ARG ##class .\n##classes = setr_text_block(\"RACLIST CLASSES =\")\nIF WORDPOS(##class,##classes) > 0 THEN RETURN 1\nELSE RETURN 0\n\n/*-------------------------------------------------------------*/\n/* is_generic                                                  */\n/* Return if this is a RACF group that is GENERIC.             */\n/*-------------------------------------------------------------*/\nis_generic_class:\nPARSE UPPER ARG ##class .\nIF \\is_racf_class(##class) THEN RETURN 0\nPARSE UPPER ARG ##class .\n##classes = setr_text_block(\"GENERIC PROFILE CLASSES =\")\nIF WORDPOS(##class,##classes) > 0 THEN RETURN 1\nELSE RETURN 0\n\n/*-------------------------------------------------------------*/\n/* is_global_checking                                          */\n/* Return if this is a RACF group that is GLOBAL ACCESS CHKING */\n/*-------------------------------------------------------------*/\nis_global_access:\nPARSE UPPER ARG ##class .\nIF \\is_racf_class(##class) THEN RETURN 0\nPARSE UPPER ARG ##class .\n##classes = setr_text_block(\"GLOBAL CHECKING CLASSES =\")\nIF WORDPOS(##class,##classes) > 0 THEN RETURN 1\nELSE RETURN 0\n\n/*-------------------------------------------------------------*/\n/* is_racf_class                                               */\n/* Return if this is a RACF class.                             */\n/*-------------------------------------------------------------*/\nis_racf_class:\nPARSE UPPER ARG ##class .\n##x = OUTTRAP(\"##b.\",10)\n\"SR CLASS(\"##class\") MASK(\u00a2%\u00a2%&\u00a2$$\u00a2$)\"\n##x = OUTTRAP(\"OFF\")\nDO ##a = 1 TO ##b.0\n   IF POS(\"INVALID CLASS\",\" \"##b.##a) > 0 THEN RETURN 0\nEND\nRETURN 1\n\n/*-------------------------------------------------------------*/\n/* setr_text_block                                             */\n/* Return block of text in the SETR LIST output.  Accepts      */\n/* the header of the desired text, such as \"ACTIVE CLASSES\"    */\n/* and would find the desired text in a block similar to:      */\n/*                                                             */\n/* ACTIVE CLASSES = DATASET USER GROUP $PPSFUNC ACCTNUM        */\n/*                  CCICSCMD CSFKEYS CSFSERV DCICSDCT          */\n/*                  DIGTRING DIRECTRY DSNR ECICSDCT            */\n/*                  GCICSTRN GCSFKEYS GSDSF GTERMINL           */\n/*                  IBMOPC JCICSJCT JESSPOOL KCICSJCT          */\n/*                  OPERCMDS PCICSPSB PERFGRP PMBR             */\n/*                                                             */\n/*-------------------------------------------------------------*/\nsetr_text_block:\nPARSE UPPER ARG ##srchstr\n###classes=\"\"\n##x = OUTTRAP(\"##y.\",999)\n\"SETR LIST\"\n##x = OUTTRAP(\"OFF\")\nDO ##x = 1 TO ##y.0\n   IF POS(##srchstr,\" \"##y.##x) > 0 THEN DO\n      PARSE VAR ##y.##x (##srchstr) ###classes\n      ###classes = STRIP(###classes,\"B\")\n      DO ##xx = ##x+1 to ##y.0\n         IF SUBSTR(##y.##xx,1,5) <> \"     \" THEN LEAVE ##x\n         ###classes = ###classes\" \"STRIP(##y.##xx,\"B\")\n      END\n   END\nEND\nRETURN ###classes\n\n/*----------------------------------------------------------------*/\n/* Check for Generic characters * or %.                           */\n/*----------------------------------------------------------------*/\nis_generic: Procedure\nARG dsn\nIF POS(\"*\",dsn) > 0 THEN RETURN 1\nIF POS(\"%\",dsn) > 0 THEN RETURN 1\nRETURN 0\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RLPH00": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00#\\x01\\x10\\x04/\\x01\\x10\\x04/\\x15\\x14\\x000\\x00&\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2010-02-11T00:00:00", "modifydate": "2010-02-11T15:14:23", "lines": 48, "newlines": 38, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPH00 - ISPF help panel.                                        */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n    TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(YELLOW)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(:;)\n#                           %RACF List Profile (RLP) Help#\n%Option ===>_ZCMD\n+\n+This dialog provides a menu driven alternative to the IBM supplied ISPF\n panels for RACF Administration.\n\n Enter a help option in the %Option+ field above, or just press%Enter+to\n go to the first help panel.\n\n%1 +- General RLP help\n%2 +- Help for Command Line Commands\n%3 +- Help for Line Commands\n%4 +- Help for Access List Commands\n\n\n\n\n\n\n\n\n%PF3+- Exit\n%Enter+- Continue\n\n)PROC\n &ZCONT = RLPH01\n &ZSEL  = TRANS(&ZCMD\n             1,RLPH01\n             2,RLPH02\n             3,RLPH03\n             4,RLPH04\n             )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLPH01": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00A\\x01\\x10\\x04/\\x01\\x10\\x07\\x8f\\x194\\x001\\x001\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-11T00:00:00", "modifydate": "2010-03-19T19:34:41", "lines": 49, "newlines": 49, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPH01 - ISPF help panel.                                        */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n    TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(YELLOW)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(\\;)\n#                         %RLP Help - General Help info#\n%Option ===>_ZCMD\n+\n+This dialog provides a menu driven alternative to the IBM supplied ISPF panels\n for RACF Administration.  Profiles of various classes can be manipulated, such\n as for the%DATASET, FACILITY,+or other classes.\n\n%NOTE:  +The RLP dialogs %ONLY+allow you to perform operations that your ID is\n permitted to perform.  The dialogs simply present an interface for issuing\n commands to which you are already authorized.\n\n%-----------------------+Fields on the main RLP panel%-------------------------+\n%Search Filter ===>+- Enter the search criteria for profiles that you want\n listed.  Use wildcards as defined in the RACF%SEARCH+command.  By default the\n search filter is set to your userid plus **, e.g.  PGTKJBL.**\n\n See the help documentation for the RACF%SEARCH+command for more information on\n specifying the search filter.  To access the help documentation on the\n RACF%SEARCH+command, enter the following command on the ISPF COMMAND line:\n    %TSO HEL SEARCH+or%TSO H SEARCH+\n+\n%PF3+- Exit\n%Enter+- Continue\n\n)PROC\n &ZCONT = RLPH01a\n &ZSEL  = TRANS(&ZCMD\n             1,RLPH01\n             2,RLPH02\n             3,RLPH03\n             4,RLPH04\n             B,RLPH00\n             )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLPH01A": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00U\\x01\\x10\\x07\\x8f\\x01\\x10\\x07\\x8f\\x19G\\x001\\x00&\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-03-19T00:00:00", "modifydate": "2010-03-19T19:47:55", "lines": 49, "newlines": 38, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPH01 - ISPF help panel.                                        */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n    TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(YELLOW)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(\\;)\n#                         %RLP Help - General Help info#\n%Option ===>_ZCMD\n+\n\n%-----------------------+Fields on the main RLP panel%-------------------------+\n%Search Filter ===>+\n+\n This field also has a secondary use.  If a dataset name is entered instead of\n a search string, then the dialog will determine which (if any) RACF profiles\n cover that dataset.  The dialog assumes that the value entered is a DSN if\n there are no Generic characters in the field.\n\n+\n+\n+\n+\n+\n+\n+\n+\n+\n%PF3+- Exit\n%Enter+- Continue\n\n)PROC\n &ZCONT = RLPH01b\n &ZSEL  = TRANS(&ZCMD\n             1,RLPH01\n             2,RLPH02\n             3,RLPH03\n             4,RLPH04\n             B,RLPH00\n             )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLPH01B": {"ttr": 1545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x10\\x04/\\x01\\x10\\x04/\\x15\\x19\\x001\\x001\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-02-11T00:00:00", "modifydate": "2010-02-11T15:19:25", "lines": 49, "newlines": 49, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPH01B - ISPF help panel.                                       */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n    TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(YELLOW)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(\\;)\n#                         %RLP Help - General Help info#\n%Option ===>_ZCMD\n+\n%------------------+Fields on the main RLP panel (Cont'd)%---------------------+\n%Class ===>+- The RACF class that you want to work with.  Not all commands are\n appropriate or possible with all classes, so you must be familiar with what is\n appropriate for the various classes with which you might work.\n\n%Search Options ===>+- The%SEARCH+command has various options that can narrow\n down the list of profiles that are listed.  See the%SEARCH+help documentation\n as listed above for a complete treatment of available options.\n\n Some of the options that might be useful include:\n   %WARNING+- List only profiles that are in WARN mode.\n+\n   %USER(userid):+- List the profiles that the specified user has access to\n    (READ authority or higher, or owner) for the class you specify on the CLASS\n    operand.  RACF lists only those profiles that the specified owner is allowed\n    to see.\n\n\n%PF3+- Exit\n%Enter+- Continue\n\n)PROC\n &ZCONT = RLPH02\n &ZSEL  = TRANS(&ZCMD\n             1,RLPH01\n             2,RLPH02\n             3,RLPH03\n             4,RLPH04\n             B,RLPH01\n             )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLPH02": {"ttr": 1547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00 \\x01\\x10\\x04/\\x01\\x10\\x04/\\x15\"\\x001\\x00\"\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2010-02-11T00:00:00", "modifydate": "2010-02-11T15:22:20", "lines": 49, "newlines": 34, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPH01 - ISPF help panel.                                        */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n    TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(YELLOW)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(\\;)\n#                         %RLP Help - Command Line Commands#\n%Option ===>_ZCMD\n+\n+These are the commands entered in the%COMMAND ===>+ field at the top\n of the screen.\n\n%0 +- Display or change dialog settings.\n\n%GR+- Perform SETR GENERIC REFRESH on the current RACF class.\n\n%RR+- Perform SETR RACLIST REFRESH on the current RACF class.\n\n%LL+- Select the long form of the screen.  This option shows\n      fewer profiles in the list, but provides more space to\n      view them and enter data.\n\n%R+ - Refresh the list of profiles.\n\n%F+ -Find a profile in the list of profiles.  Use as follows:\n     F searchstring\n\n%PF3+- Exit\n%Enter+- Continue\n\n)PROC\n &ZCONT = RLPH03\n &ZSEL  = TRANS(&ZCMD\n             1,RLPH01\n             2,RLPH02\n             3,RLPH03\n             4,RLPH04\n             B,RLPH01\n             )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLPH03": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x07\\x01\\x10\\x04/\\x01\\x10\\x04/\\x15\"\\x001\\x00#\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-11T00:00:00", "modifydate": "2010-02-11T15:22:07", "lines": 49, "newlines": 35, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPH01 - ISPF help panel.                                        */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n    TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(YELLOW)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(\\;)\n#                          %RLP Help - Line Commands#\n%Option ===>_ZCMD\n+\n+These are the commands entered in the input field to the left of\n each profile entry.\n\n%A+- Display and manipulate the access list for the selected profile.\n\n%C+- Copy a profile:  Creates a new RACF profile with a name that you specify by\n     tabbing to the right of the profile name, and entering a new profile name.\n     The profile name to be created should be entered without any quotes.\n\n%D+- Delete a RACF profile.  A confirmation panel is displayed before the action\n     deletion takes place, asking you to confirm that you want to delete the\n     profile.\n\n%U+- Change the UACC of a profile.  Tab the the right and type the desired uacc:\n     NONE, READ, UPDATE, ALTER, or CONTROL.\n\n\n\n%PF3+- Exit\n%Enter+- Continue\n\n)PROC\n &ZCONT = RLPH04\n &ZSEL  = TRANS(&ZCMD\n             1,RLPH01\n             2,RLPH02\n             3,RLPH03\n             4,RLPH04\n             B,RLPH02\n             )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLPH04": {"ttr": 1551, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00T\\x01\\x10\\x04/\\x01\\x10\\x04/\\x15\"\\x001\\x00\"\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-02-11T00:00:00", "modifydate": "2010-02-11T15:22:54", "lines": 49, "newlines": 34, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPH01 - ISPF help panel.                                        */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n    TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(YELLOW)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(\\;)\n#                        %RLP Help - Access List Commands#\n%Option ===>_ZCMD\n+\n+These are the commands entered in the input field toe\n each profile entry.\n\n%AM+- Add a member to a grouping class profile.\n      Tab to the right of the profile name to enter the member name.\n      This command is only valid for grouping class profiles.\n\n%DM+- Delete a member from a grouping class profile.\n      Tab to the right of the profile name to enter the member name.\n      This command is only valid for grouping class profiles.\n\n%LM+- List members belonging to a grouping class profile.  Only valid\n      for grouping class profiles.\n\n%O +- Change owner of profile (must be a valid RACF USER or GROUP)\n      Tab to the right of the profile name to enter the new owner.\n\n\n%PF3+- Exit\n%Enter+- Continue\n\n)PROC\n &ZCONT = RLPH00\n &ZSEL  = TRANS(&ZCMD\n             1,RLPH01\n             2,RLPH02\n             3,RLPH03\n             4,RLPH04\n             B,RLPH03\n             )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLPP00": {"ttr": 1553, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00\\t\\x01\\x10\\x01_\\x01\\x10\\x04/\\x151\\x00(\\x00/\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2010-01-15T00:00:00", "modifydate": "2010-02-11T15:31:09", "lines": 40, "newlines": 47, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPP00 - Display dialog parameters.                              */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  COLOR(BLUE) INTENS(LOW) hilite(uscore)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  \u001b TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(WHITE)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(:;)\n@                             %Session Parameters@                             +\n\n%COMMAND%===>$ZCMD                                            %SCROLL ===>$Z   +\n+\n+Options for the RLP dialog\n+\n   +$Z@Confirm profile delete\n+\n   +$Z@List RACF commands\n+\n)INIT\n  .HELP  = 'RLPH00'\n  .ZVARS = '( +\n            ZSCML                                      +\n            XCNFDEL                                    +\n            XCMDLIST                                   +\n            )'\n)PROC\n IF (&XCMDLIST \u00ac= ' ') &XCMDLIST = '/'\n ELSE &XCMDLIST = ' '\n IF (&XCNFDEL  \u00ac= ' ') &XCNFDEL  = '/'\n ELSE &XCNFDEL  = ' '\n VPUT ( XCMDLIST ) PROFILE\n VPUT ( XCNFDEL  ) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLPP01": {"ttr": 1555, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x18\\x01\\x10\\x01_\\x01\\x10\\x07\\x8f\\x198\\x001\\x00,\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2010-01-15T00:00:00", "modifydate": "2010-03-19T19:38:18", "lines": 49, "newlines": 44, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPP01 - Display list of RACF profiles. (Default short format)   */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  \u001b TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(YELLOW)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(:;)\n#                        %RLP - RACF Profile List#                             +\n%COMMAND%===>$ZCMD                                            %SCROLL ===>$Z   +\n+\n+Search Filter or DSN...%===>$FILTER                                   +\n+Class..................%===>$RFCLASS +\n+Search Options.........%===>$RFSROPT                                  +\n+\n#                          %Command Line Commands#                             +\n@0%-+Options        @GR%-+Generic Refresh  @RR%-+RACLIST refresh\n@R%-+Refresh list   @F% -+Find             @LL%-+Long list fmt\n#                              %List Commands#                                 +\n@A%-+Access List  @C% -+Copy profile  @D% -+Delete profile  @L% -+List  profile\n@U%-+Change UACC  @LM%-+List Members  @AM%-+Add member      @DM%-+Delete member\n@O%-+Change OWNER\n#                                                                              +\n# Cmd       Profile                           Data Input                       +\n)MODEL\n!Z         {Z                               +$Z                    +$Z         +\n)INIT\n  .HELP  = 'RLPH00'\n  .ZVARS = '( +\n            ZSCML                                      +\n            ACMD                                       +\n            PPARM1                                     +\n            PPARM2                                     +\n            PPARM4                                     +\n            )'\n &ACMD = ' '\n)PROC\n  VPUT (ZSCML    ) PROFILE\n  VPUT (RFCLASS  ) PROFILE\n  VPUT (RFSROPT  ) PROFILE\n  &RESPONSE = .RESP\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLPP02": {"ttr": 1557, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x04\\x01\\x10\\x01_\\x01\\x10\\x04/\\x155\\x00/\\x00+\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2010-01-15T00:00:00", "modifydate": "2010-02-11T15:35:04", "lines": 47, "newlines": 43, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPP02 - Display list of RACF profiles. (Long format)            */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  \u001b TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(YELLOW)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(:;)\n#                        %RLP - RACF Profile List#                             +\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +\n+\n+Search Filter  ===>_FILTER                                    +\n+Class          ===>_RFCLASS +\n+Search Options ===>_RFSROPT                                   +\n+\n#                          %Command Line Commands#                             +\n@0%-+Options        @GR%-+Generic Refresh  @RR%-+RACLIST refresh\n@R%-+Refresh list   @F% -+Find             @SL%-+Short list fmt\n#                              %List Commands#                                 +\n@A%-+Access List  @C% -+Copy profile  @D% -+Delete profile  @L% -+List  profile\n@U%-+Change UACC  @LM%-+List Members  @AM%-+Add member      @DM%-+Delete member\n@O%-+Change OWNER\n#                                                                              +\n# Cmd       Profile                           Data Input                       +\n)MODEL\n !Z        {Z                                                         +\n           _Z                                                          +\n)INIT\n  .HELP  = 'RLPH00'\n  .ZVARS = '( +\n            ZSCML                                      +\n            ACMD                                       +\n            PPARM1                                     +\n            PPARM2                                     +\n            )'\n &ACMD = ' '\n)PROC\n  VPUT (ZSCML    ) PROFILE\n  &RESPONSE = .RESP\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLPP03": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x16\\x01\\x10\\x04/\\x01\\x10\\x04/\\x15G\\x00.\\x00,\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2010-02-11T00:00:00", "modifydate": "2010-02-11T15:47:16", "lines": 46, "newlines": 44, "modlines": 0, "user": "COMPJM"}, "text": ")ATTR\n/*------------------------------------------------------------------*/\n/* RLPP03 - Display access list for profile.                        */\n/*------------------------------------------------------------------*/\n/* RLP - RACF List Profiles Dialog V2.1   John C. Miller 02/02/2010 */\n/*------------------------------------------------------------------*/\n/* John C. Miller 02/10/2010 software@jmit.com                      */\n/*------------------------------------------------------------------*/\n  ! TYPE(INPUT)  CAPS(ON)  JUST(LEFT) PAD(_)\n  $ TYPE(INPUT)  CAPS(ON)  JUST(LEFT) INTENS(LOW)\n  { TYPE(OUTPUT) CAPS(ON)  JUST(LEFT) INTENS(LOW)\n    TYPE(TEXT)   CAPS(OFF) INTENS(LOW) SKIP(ON)\n  @ TYPE(TEXT)   CAPS(OFF) INTENS(HIGH) COLOR(YELLOW)\n  # type(text)  intens(low)  color(blue)   hilite(uscore)\n)BODY WIDTH(80) EXPAND(\\;)\n#                             %Access List#\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +\n+\n%&PLINE1\n%&PLINE2\n%&PLINE3\n+\n%  Line Commands:\n+\n+ %D+- Delete userid + %I+- Insert a blank line+ %A+- Add userid to profile\n+\n+     %User/grp+ %Level\n)MODEL\n !Z   _Z       + _Z       _Z       +\n)INIT\n  .HELP  = 'RLPH03'\n  .ZVARS = '( +\n            ZSCML                                      +\n            ACMD                                       +\n            PPARM1                                     +\n            PPARM2                                     +\n            PPARM3                                     +\n            )'\n &ACMD = ' '\n)PROC\n  IF (&ACMD = 'A')\n     VER (&PPARM1,NB)\n     VER (&PPARM2,NB)\n  VPUT (ZSCML    ) PROFILE\n  &RESPONSE = .RESP\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RLP02": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00F\\x01\\x10\\x01_\\x01\\x10\\x04/\\x15P\\x01\\xc9\\x01\\xc0\\x00\\x19\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2010-01-15T00:00:00", "modifydate": "2010-02-11T15:50:46", "lines": 457, "newlines": 448, "modlines": 25, "user": "COMPJM"}, "text": "/*------------------------------------------------------=Rexx=-*/\n/* RLP02 - Edit authorization list                             */\n/*-------------------------------------------------------------*/\n/* V 2.1                                                       */\n/*-------------------------------------------------------------*/\n/* Description:                                                */\n/* This Rexx Exec is called by RLP exec.  The purpose is       */\n/* to display in ISPF table format the authorization list for  */\n/* a selected RACF dataest profile.   This exec is passed the  */\n/* values of 'PROFNAM', the profile name, and the absolute     */\n/* value of 'GENERIC' if the profile passed is a generic       */\n/* profile.                                                    */\n/*-------------------------------------------------------------*/\n/* Panels:                                                     */\n/*   RLPP03                                                    */\n/* Messages                                                    */\n/*   RFMAI500-RFMAI508                                         */\n/* Tables                                                      */\n/*   RLPLST01                                                  */\n/* 2nd level Execs                                             */\n/*   NONE                                                      */\n/*-------------------------------------------------------------*/\n/* 04/29/91 John Miller                                        */\n/*-------------------------------------------------------------*/\n/* 04/16/2003 John C. Miller - Added new functions.            */\n/*-------------------------------------------------------------*/\nPARSE UPPER ARG profnam x\nPARSE UPPER ARG args\n\nrfclass   = kget('CLASS','DATASET')\n\nIF iget('GENERIC') THEN generic = 'GENERIC'\nELSE generic =\n\n\n/*=============================================================*/\n/* SET UP DEFAULT VALUES                                       */\n/*=============================================================*/\nztdmark   = '* * * End of list * * *'\ncc        = 0\npanel     = 'RLPP03'\ncsr       = 'ACMD'\ntabname   = 'RLPLST01'\nmaxout    = 900\nnames     = 'PPARM1 PPARM2'\n\n/*=============================================================*/\n/* Read ISPF PROFILE variables into memory.                    */\n/*=============================================================*/\nxvars = \"xCMDLIST xCNFDEL \"\nADDRESS ISPEXEC \"VGET ( \" xvars \")\"\n\n/*=============================================================*/\n/* CREATE THE TEMPORARY TABLE                                  */\n/*=============================================================*/\nIF \\authlist() THEN SIGNAL listerr\n/*=============================================================*/\n/* MAIN LOOP - EXIT WHEN END (PF3) IS ENTERED (RC-8)           */\n/*=============================================================*/\nstartlp:\ncc = 0\nDO WHILE cc < 8\n/*=============================================================*/\n/* DISPLAY THE TABLE                                           */\n/*=============================================================*/\ntbdis:\n   ADDRESS ISPEXEC \"TBDISPL\" tabname,\n      \"PANEL(\"panel\") CURSOR(\"csr\")\"\n   cc = RC\n   PARSE UPPER VAR zcmd cmd cmdprms\n/*=============================================================*/\n/* PROCESS COMMANDS                                            */\n/*=============================================================*/\n      SELECT\n         WHEN cmd  = 'S'     THEN  CALL sort\n         WHEN cmd  = 'SORT'  THEN  CALL sort\n         WHEN cmd  = 'F'     THEN  CALL find\n         WHEN cmd  = 'FIND'  THEN  CALL find\n         WHEN cmd  = 'L'     THEN  CALL find\n         WHEN cmd  = 'LIST'  THEN  CALL find\n         OTHERWISE NOP\n      END\n/*=============================================================*/\n/* PROCESS LINE COMMANDS UNTIL ALL SELECTED ROWS ARE DONE      */\n/*=============================================================*/\n   DO WHILE ztdsels > 0\n      PARSE UPPER VAR acmd xcmd 2 anum\n      IF DATATYPE(anum) /= 'NUM' THEN anum = 0\n      ELSE acmd = xcmd\n      SELECT\n         WHEN acmd = 'I' THEN CALL insert\n         WHEN acmd = 'A' THEN CALL add\n         WHEN acmd = 'D' THEN CALL delete\n         WHEN acmd = 'R' THEN CALL repeat\n         OTHERWISE IF (pparm1 /= '') & (pparm2 /= '') THEN call add\n      END\n      IF ztdsels > 1 THEN DO\n         ADDRESS ISPEXEC \"TBDISPL\" tabname\n      END\n      ELSE DO\n         ztdsels = 0\n      END\n   END\nEND\nSIGNAL exit\n\n/*=============================================================*/\n/* USER HAS EXITED THE DIALOG - CLEAN UP, CLOSE THE TABLE, ETC */\n/*=============================================================*/\nlisterr:\nSAY 'Error creating authorization list table'\n\nexit:\nADDRESS ISPEXEC \"TBEND\" tabname\n\nexit0:\nEXIT\n\n\n\n/*=============================================================*/\n/* LINE COMMAND I (INSERT)                                     */\n/*=============================================================*/\ninsert:\n/* TRACE r */\n   IF anum > 0 THEN max = anum\n   ELSE max = 1\n   DO WHILE max > 0\n   ADDRESS ISPEXEC \"TBVCLEAR\" tabname\n   ADDRESS ISPEXEC \"TBADD\" tabname \"ORDER\"\n   csr = 'PPARM1'\n   ADDRESS ISPEXEC \"TBTOP\" tabname\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND A (ADD)                                        */\n/*=============================================================*/\nadd:\n/* TRACE r */\n   IF anum > 0 THEN max = anum\n   ELSE max = 1\n   DO WHILE max > 0\n      IF rfclass = 'DATASET' THEN DO\n         rcmd = \"PERMIT '\"profnam\"' ID(\"pparm1\")\",\n         \"ACCESS(\"pparm2\") \"generic\n      END\n      ELSE DO\n         rcmd = \"PERMIT \"profnam\" ID(\"pparm1\") CLASS(\"rfclass\")\",\n         \"ACCESS(\"pparm2\") \"generic\n      END\n      rcmd\n      cc = RC\n      IF cc = 0 THEN DO\n         pmsg = pparm2\" permission set to\" profnam \"for\" pparm1\".\"\n         pmsg = left(pmsg,78)\n         IF xCMDLIST = '/' THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n         ADDRESS ISPEXEC \"TBADD\" tabname\n      END\n      ELSE DO\n         pmsg=\"Error: Permit not performed.\"\n         pmsg = left(pmsg,78)\n         IF xCMDLIST = '/' THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n         ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n      END\n      csr = 'PPARM1'\n      ADDRESS ISPEXEC \"TBSKIP\" tabname \"NUMBER(+1)\"\n      max = max - 1\n   END\n   ADDRESS ISPEXEC \"TBTOP\" tabname\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND R (REPEAT)                                     */\n/*=============================================================*/\nrepeat:\n   IF anum > 0 THEN max = anum\n   ELSE max = 1\n   DO WHILE max > 0\n      ADDRESS ISPEXEC \"TBADD\" tabname \"ORDER\"\n      csr = 'PPARM1'\n      csrr = crp + 1\n      max = max - 1\n   END\n   RETURN\n\n/*=============================================================*/\n/* LINE COMMAND D (DELETE)                                     */\n/*=============================================================*/\ndelete:\n   IF anum > 0 THEN max = anum\n   ELSE max = 1\n\n   DO WHILE max > 0\n      IF pparm1 /= '' THEN DO\n         IF rfclass = 'DATASET' THEN DO\n            rcmd = \"PERMIT '\"profnam\"' ID(\"pparm1\") DELETE\" generic\n         END\n         ELSE DO\n            rcmd = \"PERMIT \"profnam\" ID(\"pparm1\") DELETE\",\n            \"CLASS(\"rfclass\")\" generic\n         END\n         rcmd\n         IF cc = 0 THEN DO\n            pmsg = pparm2\" permission removed from\",\n               profnam \"for\" pparm1\".\"\n            pmsg = left(pmsg,78)\n            IF xCMDLIST = '/' THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n            ADDRESS ISPEXEC \"SETMSG MSG(RFMAI508)\"\n            ADDRESS ISPEXEC \"TBDELETE\" tabname\n         END\n         ELSE DO\n            pmsg=\"Error: Permit not removed.\"\n            pmsg = left(pmsg,78)\n            IF xCMDLIST = '/' THEN pmsg=pmsg\"\"left(\"Cmd was: \"rcmd,78)\n            ADDRESS ISPEXEC \"SETMSG MSG(RFMAI507)\"\n         END\n      END\n      csr = 'ACMD'\n      csrr = crp\n      max = max - 1\n      ADDRESS ISPEXEC \"TBSKIP\" tabname \"NUMBER(+1)\"\n   END\n   RETURN\n\n/*=============================================================*/\n/* COMMAND LINE COMMAND: FIND                                  */\n/*=============================================================*/\nfind:\n   pparm1 = cmdprms\"*\"\n\n   ADDRESS ISPEXEC \"TBSCAN\" tabname,\n      \"ARGLIST(pparm1) POSITION(crp)\"\n   crpsave = crp\n   RETURN\n\n\n/*-------------------------------------------*/\n/*-------------------------------------------*/\n/*---- s u b r o u t i n e s ----------------*/\n/*-------------------------------------------*/\n/*-------------------------------------------*/\n\n/*-------------------------------------------*/\n/* Get keyword parm (return value)           */\n/*-------------------------------------------*/\nxget:\nARG var1,var2\npstr = \" \"var1\" \"\nIF POS(\" \"var1\" \",\" \"args\" \") = 0 THEN RETURN var2\nELSE RETURN var1\n\n/*-------------------------------------------*/\n/* Get keyword parm (return boolean)         */\n/*-------------------------------------------*/\niget:\nARG var\npstr = \" \"var\" \"\nIF POS(\" \"var\" \",\" \"args\" \") = 0 THEN RETURN 0\nELSE RETURN 1\n\n/*-------------------------------------------*/\n/* Get keyword value parameter               */\n/*-------------------------------------------*/\nkget:\nARG var, default\nPARSE UPPER VAR args (var)'(' var ')'\nIF var = '' THEN var = default\nRETURN var\n\n/*-------------------------------------------*/\n/* Build new profile access list table       */\n/* Return \"0\" means failed                   */\n/* Return \"1\" means ok                       */\n/*-------------------------------------------*/\nauthlist:\n/*-------------------------------------------*/\n/* Trap output of approp. list command.      */\n/*-------------------------------------------*/\nx = OUTTRAP(\"LINE.\",maxout)\nIF rfclass = 'DATASET' THEN DO\n    \"LD DA('\"profnam\"') AU HIST\"\nEND\nELSE DO\n   \"RLIST \"rfclass profnam \" AU HIST\"\nEND\nx = OUTTRAP(\"OFF\")\ncc = RC\n\n/*-------------------------------------------*/\n/* Parse UACC.  <<<DEFUNCT>>>                */\n/*-------------------------------------------*/\nIF line.0 > 4 THEN DO\n  IF rfclass = 'DATASET' THEN,\n     PARSE UPPER VAR line.5 P1 P2 PUACC .\n  ELSE DO nnn = 1 TO 25\n     PARSE UPPER VAR line.nnn P1 P2 P3 P4 .\n     IF p3 p4 = 'UNIVERSAL ACCESS' THEN DO\n        nnn = nnn + 2\n        PARSE UPPER VAR line.nnn p1 p2 PUACC .\n        LEAVE\n     END\n  END\nEND\n\n/*-------------------------------------------*/\n/* Create table and populate it.             */\n/*-------------------------------------------*/\nADDRESS ISPEXEC \"TBCREATE\" tabname \"NOWRITE NAMES(\"names\") REPLACE\"\nIF RC > 4 THEN RETURN 0\n\nafnd = 0\nIF rfclass = 'DATASET' THEN header = \"ID     ACCESS\"\nELSE                        header = \"USER      ACCESS\"\n\nIF cc = 0 THEN,\nDO num = 1 to line.0\n   IF \\afnd THEN DO\n      IF POS(header,\" \"line.num\" \") > 0 THEN DO\n         afnd = 1\n         num = num + 2\n      END\n   END\n   IF afnd THEN DO\n      PARSE UPPER VAR line.num pparm1 pparm2 .\n      IF pparm1 = '' THEN LEAVE\n      ADDRESS ISPEXEC \"TBADD\" tabname\n   END\nEND\nELSE DO\n   pparm1 = 'No Entries Found'\n   ADDRESS ISPEXEC \"TBADD\" tabname\nEND\nADDRESS ISPEXEC \"TBTOP\"  tabname\n\n/*-------------------------------------------*/\n/* Get some values out for the user.         */\n/*-------------------------------------------*/\nIF rfclass = 'DATASET' THEN cmd = \"LD DA('\"profnam\"') AU HIST\"\nELSE                        cmd = \"RLIST \"rfclass profnam\" AU HIST\"\n\n/* Trap command output. */\nIF \\(trap(\"lst.\",cmd) < 4) THEN DO\n   pline1 = \"\"; pline2 = \"\"; pline3 = \"\"\nEND\nELSE DO\n   pline1 = \"\"; pline2 = \"\"; pline3 = \"\"\n   DO zz = 1 TO lst.0\n      IF POS(\"LEVEL  OWNER\",lst.zz) = 0 THEN ITERATE\n      zz2 = zz+2\n      PARSE VAR lst.zz2 zlevel zowner zuacc zmyaccess zwarn .\n      pline1 =       \"Owner: \"substr(zowner,1,13)\n      pline1 = pline1\"UACC: \"substr(zuacc,1,12)\n      pline1 = pline1\"Warn: \"substr(zwarn,1,9)\n      pline2 = pline2\"My access: \"substr(zmyaccess,1,9)\n      pline3 = \"\"\n   END\n   DO zz = 1 TO lst.0\n      IF POS(\"CREATION DATE\",lst.zz) = 0 THEN ITERATE\n      zz = zz + 3\n      PARSE VAR lst.zz zcrday zcryear .\n      zcrdate = julian(zcryear\"\"zcrday)\n      pline2 = pline2\"Created: \"substr(zcrdate,1,12)\n      LEAVE zz\n   END\nEND\n\nRETURN 1\nsortflds = 'pparm1,c,a'\nADDRESS ISPEXEC \"TBSORT\" tabname \"FIELDS(\"sortflds\")\"\nRETURN 1\n\n/*---------------------------------------------------------*/\n/* Trap command output in a stem variable.                 */\n/*---------------------------------------------------------*/\ntrap:\nARG stem, cmd, max\n\nIF stem = \"\" THEN RETURN 8\nIF cmd = \"\" THEN RETURN 8\nIF DATATYPE(max) /= 'NUM' THEN MAX = 1000\n\nINTERPRET \"x = OUTTRAP(\"stem\",\"max\")\"\n   cmd\n   cc = rc\nx = OUTTRAP('OFF')\nRETURN cc\n\n/*---------------------------------------------------Rexx--*/\n/* JULIAN  - Convert between gregorian and julian dates.   */\n/* v1.0                                                    */\n/*---------------------------------------------------------*/\n/* For gregorian input, assumes mm/dd/yy or mm/dd/yyyy     */\n/* For julian input, assumes yyddd or yyyyddd              */\n/*---------------------------------------------------------*/\n/* Copyright 2003 JMIT.                                    */\n/*---------------------------------------------------------*/\n/* 04/08/2003 John C. Miller                               */\n/*---------------------------------------------------------*/\njulian:\nPARSE ARG ##date .\n\ndays.1  = 31; days.2  = 28; days.3  = 31; days.4  = 30; days.5  = 31;\ndays.6  = 30; days.7  = 31; days.8  = 31; days.9  = 30; days.10 = 31;\ndays.11 = 30; days.12 = 31\n\n/*---------------------------------------------------------*/\n/* A \"/\" was found in the input date, so assume gregorian  */\n/*---------------------------------------------------------*/\nIF POS(\"/\",##date) > 1 THEN DO\n   IF length(##date) = 8 THEN DO\n      year = substr(##date,7,2)\n      IF year > 50 THEN year = \"19\"year\n      ELSE year = \"20\"year\n   END\n   ELSE IF length(##date) = 10 THEN DO\n      year = substr(##date,7,4)\n   END\n   ELSE DO\n      exit\n      RETURN 0\n   END\n   /* Adjust for leap year.                                   */\n   IF year // 4= 0 THEN days.2 = 29\n   month = substr(##date,1,2); day = substr(##date,4,2)\n   dayctr = day\n   DO z = 1 TO month-1\n      dayctr = days.z + dayctr\n   END\n   return year\"/\"RIGHT(\"000\"dayctr,3)\nEND\n/*---------------------------------------------------------*/\n/* Input was julian, so return gregorian.                  */\n/*---------------------------------------------------------*/\nELSE DO\n   IF length(##date) = 5 THEN DO\n      year = substr(##date,1,2)\n      IF year > 50 THEN year = \"19\"year\n      ELSE year = \"20\"year\n      day = substr(##date,3,3)\n   END\n   ELSE IF length(##date) = 7 THEN DO\n      year = substr(##date,1,4)\n      day = substr(##date,5,3)\n   END\n   ELSE DO\n      exit\n      return 0\n   END\n   ctr = day + 0\n   DO z = 1 TO 12\n      ctr = ctr - days.z\n      IF ctr < 1 THEN LEAVE\n   END\n   ctr = ctr + days.z\n   return right(\"00\"z,2)\"/\"right(\"00\"ctr,2)\"/\"year\nEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "X": {"ttr": 1803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x009\\x01\\x10\\x07\\x8f\\x01\\x10\\x07\\x8f\\x19\\t\\x00!\\x00!\\x00\\x00\\xc3\\xd6\\xd4\\xd7\\xd1\\xd4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-03-19T00:00:00", "modifydate": "2010-03-19T19:09:39", "lines": 33, "newlines": 33, "modlines": 0, "user": "COMPJM"}, "text": "/*----------------------------------------------------------------*/\n/* See if a discrete profile exists for the dataset.              */\n/*----------------------------------------------------------------*/\nx = OUTTRAP('sr.',5)\n    \"LISTDSD DA(\"dsn\") NOGENERIC\"\n    cc = rc\nx = OUTTRAP('OFF')\nIF cc = 0 THEN DO\n   SAY dsn 'is covered by profile: 'dsn' (Discrete)'\n   EXIT\nEND\n\n/*----------------------------------------------------------------*/\n/* No discrete profile exists - Check for a generic profile.      */\n/* If one exists, parse the name out of line 1 of the output.     */\n/*----------------------------------------------------------------*/\nx = OUTTRAP('sr.',5)\n    \"LISTDSD DA(\"dsn\") GENERIC\"\n    cc = rc\nx = OUTTRAP('OFF')\nIF cc = 0 THEN DO\n   PARSE VAR sr.1 \"INFORMATION FOR DATASET \" prof\n   prof = STRIP(prof,\"B\")\n   SAY dsn 'is covered by profile: 'prof\n   EXIT\nEND\n\nEXIT\nis_generic: Procedure\nARG dsn\nIF POS(\"*\",dsn) > 0 THEN RETURN 1\nIF POS(\"%\",dsn) > 0 THEN RETURN 1\nRETURN 0\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT827/FILE827.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT827", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}