X080     TITLE 'IGG0191N - CHECK DSAT FOR APF AUTHORIZATION'
VER      OPSYN ORG
REP      OPSYN ORG
         PRINT ON,GEN,DATA
         SPACE 1
*++ ZAP (IGG0191N).
*NAME    IGG0191N
*SMP EXPAND IGG0191N(400)
*IDRDATA X08004A                   /* INSERT MODIFICATION NUMBER */
         SPACE 1
***********************************************************************
*   I G G 0 1 9 1 N           *                                       *
*******************************                                       *
*                                                                     *
*        APF AUTHORIZATION FROM THE DSAT                              *
*                                                                     *
*        IF THE DATASET / VOLSER IS NOT IN THE ALT (BUILT DURING      *
*        NIP FROM 'SYS1.PARMLIB(IEAAPF00)'), WE CHECK TO SEE          *
*        IF THERE IS AN ENTRY IN THE DSAT                             *
*                                                                     *
***********************************************************************
         EJECT 1
*---------------------------------------------------------------------*
*        VERIFY BASE REGISTER                                         *
*---------------------------------------------------------------------*
         SPACE 1
IGG0191N CSECT ,
         SPACE 1
         VER   IGG0191N
         BALR  RBASE,0
         USING PO,RBASE
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING TIOENTRY,RTIOT
         USING UCBOB,RUCB
PO       EQU   *
         B     CPYRGHTA            BRANCH AROUND EYE-CATCHER AND CPYRT
         DC    CL8'IGG0191N'        MODULE DISTRIBUTION NAME
         DC    CL8'08/08/86'       DATE COMPILED
         DC    CL8'HDP2210'         LEVEL OF THIS PRODUCT
         DC    CL8'UZ84825'     MAINTENANCE - NONE OR PTF NUMBER
         SPACE 1
         VER   IGG0191N+X'0000026'
CPYRGHTA DS    0H
         L     RDCB,0(RPARC)             GET DCB ADDRESS
         L     RWBASE,4(RWTGC)           GET WORK AREA
         EJECT 1
*---------------------------------------------------------------------*
*        CHECK IF DATASET IS CAPABLE OF BEING AUTHORIZED              *
*---------------------------------------------------------------------*
         SPACE 1
         VER   IGG0191N+X'0000086'
         STM   RWK4,RWK5,DXRGSAVE(RWBASE)
$ZAP0001 L     RWK2,CVTPTR         GET CVT ADDRESS
         USING CVTMAP,RWK2
RET#0001 L     RWK2,CVTAUTHL       GET ADDRESS OF ALT
         DROP  RWK2
         LTR   RWK2,RWK2           WAS AN ALT BUILT
         BZ    OBPAM184            NO, BYPASS ALT TESTING
         SPACE 1
         VER   IGG0191N+X'0000A2'
         SR    RWK4,RWK4           PREPARE REG FOR COUNT
*                                    FOR CLC INST
OBPAM182 EQU   *
         IC    RWK4,ALTLNENT(,R14) INIT REG FOR INST TO GET
*                                    TO THE NEXT ENTRY
         SPACE 1
         REP   $ZAP0001
         B     PATCH1              TEST EXPIRY DATE & RACF BIT
         EJECT 1
*---------------------------------------------------------------------*
*        CHECK IF DATASET IS AUTHORIZED VIA THE DSAT TABLE            *
*---------------------------------------------------------------------*
         SPACE 1
         VER   IGG0191N+X'0000FE'
$ZAP0002 BCT   RWK3,OBPAM182       RETURN IF MORE ENTRIES
OBPAM184 L     RWK5,0(RPARC)       GET DCB ADDR
         DROP  RDCB
         USING IHADCB,RWK5
         L     RWK5,DCBDEBAD       GET DEB ADDR
         DROP  RWK5
         USING DEBBASIC,RWK5
         NI    DEBFLGS1,X'FF'-DEBAPFIN  TURN BIT OFF IF NO MORE
*                                         ENTRIES OR NO ALT
OBPAM185 EQU   *
         LM    RWK4,RWK5,DXRGSAVE(RWBASE)
         DROP  RWK5
         SPACE 1
         REP   $ZAP0002
         B     PATCH2
         EJECT 1
*---------------------------------------------------------------------*
*        PATCH AREA                                                   *
*---------------------------------------------------------------------*
         SPACE 1
         VER   IGG0191N+X'0008A2'
PATCH    DC    0H'0',50X'00'       PATCH AREA
         SPACE 1
*---------------------------------------------------------------------*
*        PATCH ONE:                                                   *
*        1) ALLOW APF AUTHORIZATION IF "TEST" DIP SPECIFIED           *
*        2) DISALLOW APF AUTHORIZATION IF EXPDT IS < 90.000           *
*        3) DISALLOW APF AUTHORIZATION IF NOT RACF PROTECTED          *
*           - PATCH AREA MUST BE ZAPPED IF (3) IS TO BE ENFORCED      *
*---------------------------------------------------------------------*
         SPACE 1
         REP   PATCH
         SPACE 1
         USING DSCB,RDCB
PATCH1   #@DCCVT RC=RWK2,RD=RWK2,NODCCVT=PATCH1X
         TM    DCCVMODE,DCCVTEST   CHECK IF "TEST" DIP SPECIFIED
         BO    PATCH1X             B. IF YES
         DROP  RWK2
         CLI   DS1EXPDT,90         CHECK IF EXPDT YEAR < 1990
         BL    OBPAM184            B. IF YES
         TM    DS1DSIND,DS1IND40   CHECK IF DATASET IS RACF DEFINED
         NOP   OBPAM184            B. IF NOT
PATCH1X  L     RWK2,CVTPTR         REPLACE OVERLAID INSTRUCTION
         B     RET#0001            RETURN
         EJECT 1
*---------------------------------------------------------------------*
*        PATCH TWO:                                                   *
*        1) CHECK THE DSAT TABLE FOR APF AUTHORIZATION                *
*---------------------------------------------------------------------*
PATCH2   BCT   RWK3,OBPAM182       RETURN IF MORE ENTRIES
         STM   R13,R2,REGSAVE(RWBASE)
         LA    R13,0(,RBASE)       GET VALID 31-BIT ADDR'S
         LA    RUCB,0(,RUCB)
         LA    RTIOT,0(,RTIOT)
         #MODE 31,R=R15            GET INTO 31 BIT ADDRESSING MODE
         DROP  RBASE
         USING PO,R13
         SLR   RWK5,RWK5           LOAD JFCB ADDRESS
         ICM   RWK5,B'0111',TIOEJFCB
         USING INFMJFCB-16,RWK5
         SLR   RWBASE,RWBASE       LOAD JFCB EXTENSION ADDRESS
         ICM   RWBASE,B'0111',JFCBEXAD
         USING JFCBX-16,RWBASE
         #@DCCVT RC=R14,RD=R14,NODCCVT=PATCH270
         ICM   R14,B'1111',DC@NONOL
         BZ    PATCH270            B. IF NO DSAT TABLE EXISTS
         DROP  R14
         SPACE 1
*-------
*        SEARCH THE DSAT TABLE
*-------
         SPACE 1
         SLR   R15,R15
         USING DSATE,R14
PATCH210 ICM   R15,1,DSATDSL       LOAD DSNAME LENGTH
         BZ    PATCH270            B. IF ZERO (END OF TABLE)
         CLI   DSATSRT1,DSATCOMP   CHECK IF ENTRY IS FOR COMPLETE DSN
         BNE   PATCH270            B. IF NOT
         TM    DSATFLG1,DSATAPF    CHECK IF ENTRY IS FOR APF DSN
         BNO   PATCH260            B. IF NOT
         SPACE 1
         LR    R1,R15
         BCTR  R1,0                DECREMENT FOR EXECUTE
         LA    R2,JFCBDSNM         LOAD ADDRESS OF DATASET NAME
         EXECUTE R1,CLC,DSATDSN(*-*),JFCBDSNM
         BE    PATCH220            B. IF MATCH FOUND
         LTR   RWBASE,RWBASE       CHECK FOR JFCB EXTENSION
         BZ    PATCH260            B. IF NONE
         EXECUTE R1,CLC,DSATDSN(*-*),JFCBXNAM
         BNE   PATCH260            B. IF MATCH NOT FOUND
         LA    R2,JFCBXNAM         LOAD ADDRESS OF DATASET NAME
         SPACE 1
PATCH220 CH    R1,=H'43'           CHECK IF DSNAME IS 44 BYTES LONG
         BE    PATCH230            B. IF YES
         LA    R2,1(R1,R2)         POINT TO END OF JFCBDSNM/JFCBXNAM
         CLI   0(R2),C' '          CHECK FOR END OF DSNAME
         BNE   PATCH260            B. IF NOT
         SPACE 1
PATCH230 CLI   DSATVOL,X'00'       CHECK IF VOLSER SPECIFIED IN DSAT
         BE    PATCH270            B. IF NOT
         CLC   DSATVOL,UCBVOLI     CHECK FOR COMPLETE VOLSER MATCH
         BE    PATCH280            B. IF YES
         SPACE 1
         LA    R1,UCBVOLI          LOAD ADDRESS OF VOLSER IN UCB
         LA    R2,DSATVOL          LOAD ADDRESS OF VOLSER IN DSAT
         LA    RWK3,6              LOAD LENGTH OF VOLSER
PATCH240 CLI   0(R2),C'*'          CHECK FOR WILDCARD CHARACTER
         BE    PATCH250            B. IF YES
         CLC   0(1,R1),0(R2)       CHECK FOR MATCHING CHARACTER
         BNE   PATCH260            B. IF NOT
PATCH250 LA    R1,1(,R1)           ADVANCE UCB VOLSER POINTER
         LA    R2,1(,R2)           ADVANCE DSAT VOLSER POINTER
         BCT   RWK3,PATCH240       PROCESS ENTIRE VOLSER
         B     PATCH280            B. IF ALL CHARACTERS MATCH
         SPACE 1
PATCH260 LA    R14,DSATFXL(R15,R14)
         B     PATCH210            PROCESS NEXT ENTRY IN DSAT
         SPACE 1
         LTORG ,                   LITERAL POOL
         EXECUTE ,                 EXECUTE STATEMENTS
         SPACE 1
         DROP  R13
         USING PO,RBASE
         SPACE 1
PATCH270 #MODE 24                  RETURN TO 24 BIT ADDRESSING MODE
         L     RWBASE,4(RWTGC)     RELOAD WORKAREA ADDRESS
         LM    R13,R2,REGSAVE(RWBASE)
         B     OBPAM184            DISALLOW APF AUTHORIZATION
         SPACE 1
PATCH280 #MODE 24                  RETURN TO 24 BIT ADDRESSING MODE
         L     RWBASE,4(RWTGC)     RELOAD WORKAREA ADDRESS
         LM    R13,R2,REGSAVE(RWBASE)
         B     OBPAM185            ALLOW APF AUTHORIZATION
         SPACE 1
PATCHL   EQU   *-PATCH             LENGTH OF PATCH AREA
         EJECT 1
*ZAP END
RWK3     EQU   0
RDCB     EQU   2
RBASE    EQU   3
RWBASE   EQU   4
RCORE    EQU   4
RWK4     EQU   5
RWK5     EQU   6
RPARC    EQU   7
RWTGC    EQU   8
RTIOT    EQU   9
RUCB     EQU   10
RWK2     EQU   14
DXRGSAVE EQU   X'190'
REGSAVE  EQU   X'198'
ALTLNENT EQU   X'000'
         #REGS ,
         #DSATE
FORCORE  DSECT ,
         IECDSECT IOB=NO
JFCBX    DSECT ,
         IEFJFCBX ,
         #DSECTS CVT,DCB,DCCVT,DEB,TIOT,UCB,DSCB
         END   ,
