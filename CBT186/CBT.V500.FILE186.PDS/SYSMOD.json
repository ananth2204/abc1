{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "IBMUSER", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20190926043124000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 235144, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 27920, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "IBMUSER.SYSMODS.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"IBMUSER.SYSMODS.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27920, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 1113, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "190269", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\x1e'", "DS1LSTAR": "b'\\x00\\x04\\x12'", "DS1TRBAL": "b'8\\x94'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f2\\xf0\\x00\\x04\\x97\\x90`'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f2\\xf0\\x00\\x04\\x97\\x90`'", "b'X\\xf4\\xf0(\\x00\\x00\\x010\\x00\\x04\\x011\\x00\\x03\\x00\\x0f'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$NOTE01": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00@\\x01\\x19\\x05_\\x01\\x19\\x05_#I\\x00\\x0e\\x00\\x0e\\x00\\x00```````@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-02-24T00:00:00", "modifydate": "2019-02-24T23:49:40", "lines": 14, "newlines": 14, "modlines": 0, "user": "-------"}, "text": "Note.  This sysmod is not intended for use in a production system.\n       It is more suited for a software house, where similar packs\n       are used for different releases or copies of the software,\n       and it is possible that copies of an authorized library may\n       lie on several different packs.\n\n       With this mod, you don't have to worry about authorizing the\n       same library 5 different times (for the different packs) in\n       the PROGxx PARMLIB member.\n\n       However, in a production environment, it is possible to produce\n       a rogue copy of an authorized library, and do some harm.\n       Therefore, this mod has a use, but only in some trusted shops\n       such as a system software development house.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#DSECTS": {"ttr": 517, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x003\\x01\\x160\\x7f\\x01\\x160\\x7f\\x12V\\x05\\x19\\x05\\x19\\x00\\x00```````@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2016-11-02T00:00:00", "modifydate": "2016-11-02T12:56:33", "lines": 1305, "newlines": 1305, "modlines": 0, "user": "-------"}, "text": "         MACRO ,\n         #DSECTS &LIST=NO,&TYPE=\n.*---------------------------------------------------------------------\n.*\n.*  GEN SEQUENCE -\n.*\n.*       PSA CSD SVT LCCA LCCAT PCCA PCCAT GDA LDA CPAB CVT SCVT DCCVT\n.*       ASCB ASXB ASVT SRB TCB DCTCB OUCB OUXB SIOT TIOT TCT LCT SCT\n.*       JCT JMR JMUD JSCB ATTCH SCB SMCA BASEA CSCB CIB ECB ACB RPL\n.*       DCB DECB JFCB JFCBX JFCBE DEB IOB IOSB IPIB ATB IOCM UCB UCM\n.*       WQE RQE DSCB DSAB RB IQE CDE LPDE LLE XL QCB QEL PSCB ECT UPT\n.*       SDWA FRRS WSAVT TSB CPPL PPL CSPL CSOA IOPL ALLOC AMDSB CAXWA\n.*       CCA CICB CTGCV CAMLST CTGFL CTGFV CTGPL CTGVL CTGWA EDT UPL\n.*       ZB502 ZB505 ZB506 QMPA JESCT SSCVT SSVT SSIB SSOB SSAT JCTX\n.*       DSNT PCCB SWB WPL SCTX IOBE\n.*\n.* --------------------------------------------------------------------\n.*\n.*  GROUP NAMES-\n.*      DM -     ACB DCB DEB DECB DSAB DSCB IOB JFCB RPL\n.*      ENQ -    QCB QEL\n.*      IO -     ACB DCB DEB DECB ECB IOB IOBE JFCB RPL RQE UCB\n.*      JOB -    ASCB CIB CSCB ECB JMR JMUD JSCB TCT TIOT\n.*      PROG -   CDE LLE LPDE RB XL\n.*      SUBSYS - JESCT SSCT SSIB SSOB SSVT\n.*      SWA -    DSNT JCT JCTX JFCB JFCBE LCT SCT SIOT SCTX\n.*      SWAM -   ZB502 ZB505 ZB506 QMPA\n.*      SYS -    CVT DCCVT ECB PSA CSD QCB QEL SCVT UCB UCM\n.*      TASK -   SCB TCB TCT TIOT\n.*      TSO -    CPPL ECT JSCB PSCB TSB UPT PPL IOPL\n.*      VSAM -   ACB RPL\n.*\n.* --------------------------------------------------------------------\n.*\n.*      TO INCLUDE NEW DSECTS THE FOLLOWING STEPS ARE NECESSARY-\n.*      1) DEFINE A GLOBAL SWITCH, FORMAT &RCPXXXX\n.*      2) INSERT A SWITCH SETTING(S) FOR THE NEW SWITCH AS FOLLOWS\n.*         &RCPXXXX SETB ('&O' EQ 'KEY' OR &RCPXXXX)\n.*         WHERE KEY IS THE OPERAND WHICH REQUESTS THE DSECT\n.*         ONE SETB IS REQUIRED FOR EACH KEY REQUIRED, EG. THE\n.*         ACRONYM FOR THE DATA AREA, THE GENERIC NAME, AND ANY ALIASES\n.*      3) DETERMINE WHERE IN THE ASSEMBLY YOU WANT THE DSECT TO APPEAR\n.*         AND INSERT THE FOLLOWING STATEMENTS-\n.*                  AIF   (NOT &RCPXXXX AND NOT &ALL).NOXXXX\n.*                  TITLE 'DATA AREA NAME'\n.*         XXXX     DSECT (IF NECESSARY)\n.*                  DSECTMACRONAME LIST=&LIST (IFNECESSARY)\n.*         .NOXXXX  ANOP\n.*\n.* --------------------------------------------------------------------\n         GBLB  &RCPACB(2)\n         GBLB  &RCPACEE(2)\n         GBLB  &RCPALLC(2)\n         GBLB  &RCPASCB(2)\n         GBLB  &RCPASSB(2)\n         GBLB  &RCPASVT(2)\n         GBLB  &RCPASXB(2)\n         GBLB  &RCPATB(2)\n         GBLB  &RCPATCH(2)\n         GBLB  &RCPBASE(2)\n         GBLB  &RCPCDE(2)\n         GBLB  &RCPCIB(2)\n         GBLB  &RCPCPAB(2)\n         GBLB  &RCPCPPL(2)\n         GBLB  &RCPCSCB(2)\n         GBLB  &RCPCSD(2)\n         GBLB  &RCPCSPL(2)\n         GBLB  &RCPCTLG(2)\n         GBLB  &RCPCVAF(2)\n         GBLB  &RCPCVT(2)\n         GBLB  &RCPDACA(2)\n         GBLB  &RCPDCB(2)\n         GBLB  &RCPDCBE(2)\n         GBLB  &RCPDCVT(2)\n         GBLB  &RCPDEB(2)\n         GBLB  &RCPDECB(2)\n         GBLB  &RCPDSAB(2)\n         GBLB  &RCPDSCB(2)\n         GBLB  &RCPDSNT(2)\n         GBLB  &RCPDSERV(2)\n         GBLB  &RCPDTCB(2)\n         GBLB  &RCPECB(2)\n         GBLB  &RCPECT(2)\n         GBLB  &RCPEDT(2)\n         GBLB  &RCPFRRS(2)\n         GBLB  &RCPGDA(2)\n         GBLB  &RCPGEPL(2)\n         GBLB  &RCPIOB(2)\n         GBLB  &RCPIOBE(2)\n         GBLB  &RCPIOPL(2)\n         GBLB  &RCPIOSB(2)\n         GBLB  &RCPIPA(2)\n         GBLB  &RCPIPIB(2)\n         GBLB  &RCPIQE(2)\n         GBLB  &RCPJCT(2)\n         GBLB  &RCPJCTX(2)\n         GBLB  &RCPJES(2)\n         GBLB  &RCPJFCB(2)\n         GBLB  &RCPJFCX(2)\n         GBLB  &RCPJMR(2)\n         GBLB  &RCPJMUD(2)\n         GBLB  &RCPJSCB(2)\n         GBLB  &RCPLCCA(2)\n         GBLB  &RCPLCCT(2)\n         GBLB  &RCPLCT(2)\n         GBLB  &RCPLDA(2)\n         GBLB  &RCPLLE(2)\n         GBLB  &RCPLPDAT(2)\n         GBLB  &RCPLPDE(2)\n         GBLB  &RCPLWA(2)\n         GBLB  &RCPMEPL(2)\n         GBLB  &RCPMNPL(2)\n         GBLB  &RCPMQAA(2)\n         GBLB  &RCPOUCB(2)\n         GBLB  &RCPOUXB(2)\n         GBLB  &RCPPCCA(2)\n         GBLB  &RCPPCCB(2)\n         GBLB  &RCPPCCT(2)\n         GBLB  &RCPPPL(2)\n         GBLB  &RCPPSA(2)\n         GBLB  &RCPPSCB(2)\n         GBLB  &RCPQDB(2)\n         GBLB  &RCPQCB(2)\n         GBLB  &RCPQEL(2)\n         GBLB  &RCPQMPA(2)\n         GBLB  &RCPQUAA(2)\n         GBLB  &RCPRB(2)\n         GBLB  &RCPRCVT(2)\n         GBLB  &RCPRMCT(2)\n         GBLB  &RCPRMCTZ(2)\n         GBLB  &RCPRPL(2)\n         GBLB  &RCPRQE(2)\n         GBLB  &RCPSCB(2)\n         GBLB  &RCPSCT(2)\n         GBLB  &RCPSCTX(2)\n         GBLB  &RCPSCVT(2)\n         GBLB  &RCPSDWA(2)\n         GBLB  &RCPSEPL(2)\n         GBLB  &RCPSIOT(2)\n         GBLB  &RCPSIOTX(2)\n         GBLB  &RCPSMCA(2)\n         GBLB  &RCPSRB(2)\n         GBLB  &RCPSSS(2)\n         GBLB  &RCPSSAT(2)\n         GBLB  &RCPSVT(2)\n         GBLB  &RCPSWB(2)\n         GBLB  &RCPTCB(2)\n         GBLB  &RCPTCT(2)\n         GBLB  &RCPTIOT(2)\n         GBLB  &RCPTSB(2)\n         GBLB  &RCPUCB(2)\n         GBLB  &RCPUCBCX(2)\n         GBLB  &RCPUCBG(2)\n         GBLB  &RCPUCM(2)\n         GBLB  &RCPUPT(2)\n         GBLB  &RCPWPL(2)\n         GBLB  &RCPWQE(2)\n         GBLB  &RCPWSVT(2)\n         GBLB  &RCPXL(2)\n         GBLB  &RCPXSB(2)\n         GBLB  &RCPZ4UV(2)\n         GBLB  &RCPZ502(2)\n         GBLB  &RCPZ505(2)\n         GBLB  &RCPZ506(2)\n.*\n         LCLA  &OP\n         LCLC  &O\n         LCLB  &ALL,&PRT\n         GBLC  &ZPRINT              IBM MACRO PRINT CONTROL\n         GBLC  &ZCBPRINT            ANOTHER IBM PRINT CTL\n         LCLC  &SAVEZ\n         LCLC  &SAVEZCB\n&SAVEZ   SETC  '&ZPRINT'            SAVE CURRENT VALUE\n&SAVEZCB SETC  '&ZCBPRINT'          SAVE CURRENT VALUE\n&ZPRINT  SETC  '&LIST'              SET IBM PRINT CONTROL\n&ZCBPRINT SETC '&LIST'              SET ANOTHER IBM CONTROL\n&PRT     SETB  ('&LIST' EQ 'YES')\n&ALL     SETB  (N'&SYSLIST EQ 1 AND '&SYSLIST(1)' EQ 'ALL')\n         AIF   (&ALL).DSE0200\n.DSE0100 AIF   (&OP EQ N'&SYSLIST).DSE0200\n&OP      SETA  &OP+1\n&O       SETC  '&SYSLIST(&OP)'\n.*\n.*  SET UP REQUESTED CONTROL SWITCHES\n.*\n&RCPACB(1)  SETB ('&O' EQ 'ACB'   OR '&O' EQ 'VSAM' OR &RCPACB(1))\n&RCPACB(1)  SETB ('&O' EQ 'DM'    OR &RCPACB(1))\n&RCPACB(1)  SETB ('&O' EQ 'IO'    OR &RCPACB(1))\n&RCPACEE(1) SETB ('&O' EQ 'ACEE'  OR &RCPACEE(1))\n&RCPALLC(1) SETB ('&O' EQ 'ALLOC' OR '&O' EQ 'ALLOCX' OR &RCPALLC(1))\n&RCPASCB(1) SETB ('&O' EQ 'ASCB'  OR &RCPASCB(1))\n&RCPASSB(1) SETB ('&O' EQ 'ASSB'  OR &RCPASSB(1))\n&RCPASCB(1) SETB ('&O' EQ 'JOB'   OR &RCPASCB(1))\n&RCPASVT(1) SETB ('&O' EQ 'ASVT'  OR &RCPASVT(1))\n&RCPASXB(1) SETB ('&O' EQ 'ASXB'  OR &RCPASXB(1))\n&RCPASXB(1) SETB ('&O' EQ 'JOB'   OR &RCPASXB(1))\n&RCPATB(1)  SETB ('&O' EQ 'ATB'   OR &RCPATB(1))\n&RCPATCH(1) SETB ('&O' EQ 'ATTCH' OR &RCPATCH(1))\n&RCPBASE(1) SETB ('&O' EQ 'BASEA' OR &RCPBASE(1))\n&RCPBASE(1) SETB ('&O' EQ 'MSRDA' OR &RCPBASE(1))\n&RCPCDE(1)  SETB ('&O' EQ 'CDE'   OR &RCPCDE(1))\n&RCPCDE(1)  SETB ('&O' EQ 'PROG'  OR &RCPCDE(1))\n&RCPCIB(1)  SETB ('&O' EQ 'CIB'   OR &RCPCIB(1))\n&RCPCIB(1)  SETB ('&O' EQ 'JOB'   OR &RCPCIB(1))\n&RCPCPAB(1) SETB ('&O' EQ 'CPAB'  OR &RCPCPAB(1))\n&RCPCPPL(1) SETB ('&O' EQ 'CPPL'  OR &RCPCPPL(1))\n&RCPCPPL(1) SETB ('&O' EQ 'TSO'   OR &RCPCPPL(1))\n&RCPCSCB(1) SETB ('&O' EQ 'CSCB'  OR &RCPCSCB(1))\n&RCPCSCB(1) SETB ('&O' EQ 'JOB'   OR &RCPCSCB(1))\n&RCPCSD(1)  SETB ('&O' EQ 'CSD'   OR &RCPCSD(1))\n&RCPCSD(1)  SETB ('&O' EQ 'SYS'   OR &RCPCSD(1))\n&RCPCSPL(1) SETB ('&O' EQ 'CSOA'  OR &RCPCSPL(1))\n&RCPCSPL(1) SETB ('&O' EQ 'CSPL'  OR &RCPCSPL(1))\n&RCPCSPL(1) SETB ('&O' EQ 'TSO'   OR &RCPCSPL(1))\n&RCPCTLG(1) SETB ('&O' EQ 'CATLG' OR &RCPCTLG(1))\n&RCPCTLG(1) SETB ('&O' EQ 'CTLG'  OR &RCPCTLG(1))\n&RCPCVAF(1) SETB ('&O' EQ 'CVAF'  OR &RCPCVAF(1))\n&RCPCVT(1)  SETB ('&O' EQ 'CVT'   OR &RCPCVT(1))\n&RCPCVT(1)  SETB ('&O' EQ 'SYS'   OR &RCPCVT(1))\n&RCPDACA(1) SETB ('&O' EQ 'DACA'  OR &RCPDACA(1))\n&RCPDCB(1)  SETB ('&O' EQ 'DCB'   OR &RCPDCB(1))\n&RCPDCB(1)  SETB ('&O' EQ 'DM'    OR &RCPDCB(1))\n&RCPDCB(1)  SETB ('&O' EQ 'IO'    OR &RCPDCB(1))\n&RCPDCBE(1) SETB ('&O' EQ 'DCBE'  OR &RCPDCBE(1))\n&RCPDCVT(1) SETB ('&O' EQ 'SYS'   OR &RCPDCVT(1))\n&RCPDEB(1)  SETB ('&O' EQ 'DEB'   OR &RCPDEB(1))\n&RCPDEB(1)  SETB ('&O' EQ 'DM'    OR &RCPDEB(1))\n&RCPDEB(1)  SETB ('&O' EQ 'IO'    OR &RCPDEB(1))\n&RCPDECB(1) SETB ('&O' EQ 'DECB'  OR &RCPDECB(1))\n&RCPDECB(1) SETB ('&O' EQ 'DM'    OR &RCPDECB(1))\n&RCPDECB(1) SETB ('&O' EQ 'IO'    OR &RCPDECB(1))\n&RCPDSAB(1) SETB ('&O' EQ 'DM'    OR &RCPDSAB(1))\n&RCPDSAB(1) SETB ('&O' EQ 'DSAB'  OR &RCPDSAB(1))\n&RCPDSCB(1) SETB ('&O' EQ 'DM'    OR &RCPDSCB(1))\n&RCPDSCB(1) SETB ('&O' EQ 'DSCB'  OR &RCPDSCB(1))\n&RCPDSNT(1) SETB ('&O' EQ 'DSNT'  OR &RCPDSNT(1))\n&RCPDSNT(1) SETB ('&O' EQ 'SWA'   OR &RCPDSNT(1))\n&RCPDSERV(1) SETB ('&O' EQ 'DSERV' OR &RCPDSERV(1))\n&RCPECB(1)  SETB ('&O' EQ 'ECB'   OR &RCPECB(1))\n&RCPECB(1)  SETB ('&O' EQ 'IO'    OR &RCPECB(1))\n&RCPECB(1)  SETB ('&O' EQ 'JOB'   OR &RCPECB(1))\n&RCPECB(1)  SETB ('&O' EQ 'SYS'   OR &RCPECB(1))\n&RCPECT(1)  SETB ('&O' EQ 'ECT'   OR &RCPECT(1))\n&RCPECT(1)  SETB ('&O' EQ 'TSO'   OR &RCPECT(1))\n&RCPEDT(1)  SETB ('&O' EQ 'EDT'   OR &RCPEDT(1))\n&RCPFRRS(1) SETB ('&O' EQ 'FRRS'  OR &RCPFRRS(1))\n&RCPGDA(1)  SETB ('&O' EQ 'GDA'   OR &RCPGDA(1))\n&RCPGEPL(1) SETB ('&O' EQ 'GEPL'  OR &RCPGEPL(1))\n&RCPIOB(1)  SETB ('&O' EQ 'DM'    OR &RCPIOB(1))\n&RCPIOB(1)  SETB ('&O' EQ 'IO'    OR &RCPIOB(1))\n&RCPIOB(1)  SETB ('&O' EQ 'IOB'   OR &RCPIOB(1))\n&RCPIOBE(1) SETB ('&O' EQ 'IO'    OR &RCPIOBE(1))\n&RCPIOBE(1) SETB ('&O' EQ 'IOBE'  OR &RCPIOBE(1))\n&RCPIOPL(1) SETB ('&O' EQ 'IOPL'  OR &RCPIOPL(1))\n&RCPIOPL(1) SETB ('&O' EQ 'TSO'   OR &RCPIOPL(1))\n&RCPIOSB(1) SETB ('&O' EQ 'IOSB'  OR &RCPIOSB(1))\n&RCPIPA(1)  SETB ('&O' EQ 'IPA'   OR &RCPIPA(1))\n&RCPIPIB(1) SETB ('&O' EQ 'IPIB'  OR &RCPIPIB(1))\n&RCPIQE(1)  SETB ('&O' EQ 'IQE'   OR &RCPIQE(1))\n&RCPJCT(1)  SETB ('&O' EQ 'JCT'   OR &RCPJCT(1))\n&RCPJCT(1)  SETB ('&O' EQ 'SWA'   OR &RCPJCT(1))\n&RCPJCTX(1) SETB ('&O' EQ 'JCTX'  OR &RCPJCTX(1))\n&RCPJCTX(1) SETB ('&O' EQ 'SWA'   OR &RCPJCTX(1))\n&RCPJES(1)  SETB ('&O' EQ 'JESCT' OR &RCPJES(1))\n&RCPJFCB(1) SETB ('&O' EQ 'DM'    OR &RCPJFCB(1))\n&RCPJFCB(1) SETB ('&O' EQ 'IO'    OR &RCPJFCB(1))\n&RCPJFCB(1) SETB ('&O' EQ 'JFCB'  OR &RCPJFCB(1))\n&RCPJFCB(1) SETB ('&O' EQ 'SWA'   OR &RCPJFCB(1))\n&RCPJFCX(1) SETB ('&O' EQ 'DM'    OR &RCPJFCX(1))\n&RCPJFCX(1) SETB ('&O' EQ 'IO'    OR &RCPJFCX(1))\n&RCPJFCX(1) SETB ('&O' EQ 'JFCBE' OR &RCPJFCX(1))\n&RCPJFCX(1) SETB ('&O' EQ 'JFCBX' OR &RCPJFCX(1))\n&RCPJFCX(1) SETB ('&O' EQ 'SWA'   OR &RCPJFCX(1))\n&RCPJMR(1)  SETB ('&O' EQ 'JMR'   OR &RCPJMR(1))\n&RCPJMR(1)  SETB ('&O' EQ 'JOB'   OR &RCPJMR(1))\n&RCPJSCB(1) SETB ('&O' EQ 'JOB'   OR &RCPJSCB(1))\n&RCPJSCB(1) SETB ('&O' EQ 'JSCB'  OR &RCPJSCB(1))\n&RCPJSCB(1) SETB ('&O' EQ 'TSO'   OR &RCPJSCB(1))\n&RCPLCCA(1) SETB ('&O' EQ 'LCCA'  OR &RCPLCCA(1))\n&RCPLCCT(1) SETB ('&O' EQ 'LCCAT' OR &RCPLCCT(1))\n&RCPLCT(1)  SETB ('&O' EQ 'LCT'   OR &RCPLCT(1))\n&RCPLCT(1)  SETB ('&O' EQ 'SWA'   OR &RCPLCT(1))\n&RCPLDA(1)  SETB ('&O' EQ 'LDA'   OR &RCPLDA(1))\n&RCPLLE(1)  SETB ('&O' EQ 'LLE'   OR &RCPLLE(1))\n&RCPLLE(1)  SETB ('&O' EQ 'PROG'  OR &RCPLLE(1))\n&RCPLPDAT(1) SETB ('&O' EQ 'LPDAT' OR &RCPLPDAT(1))\n&RCPLPDE(1) SETB ('&O' EQ 'LPDE'  OR &RCPLPDE(1))\n&RCPLPDE(1) SETB ('&O' EQ 'PROG'  OR &RCPLPDE(1))\n&RCPLWA(1)  SETB ('&O' EQ 'LWA'   OR &RCPLWA(1))\n&RCPMEPL(1) SETB ('&O' EQ 'MEPL'  OR &RCPMEPL(1))\n&RCPMNPL(1) SETB ('&O' EQ 'MNPL'  OR &RCPMNPL(1))\n&RCPMQAA(1) SETB ('&O' EQ 'MQAA'  OR &RCPMQAA(1))\n&RCPOUCB(1) SETB ('&O' EQ 'OUCB'  OR &RCPOUCB(1))\n&RCPOUXB(1) SETB ('&O' EQ 'OUXB'  OR &RCPOUXB(1))\n&RCPPCCA(1) SETB ('&O' EQ 'PCCA'  OR &RCPPCCA(1))\n&RCPPCCB(1) SETB ('&O' EQ 'PCCB'  OR &RCPPCCB(1))\n&RCPPCCT(1) SETB ('&O' EQ 'PCCAT' OR &RCPPCCT(1))\n&RCPPPL(1)  SETB ('&O' EQ 'PPL'   OR &RCPPPL(1))\n&RCPPPL(1)  SETB ('&O' EQ 'TSO'   OR &RCPPPL(1))\n&RCPPSA(1)  SETB ('&O' EQ 'PSA'   OR &RCPPSA(1))\n&RCPPSA(1)  SETB ('&O' EQ 'SYS'   OR &RCPPSA(1))\n&RCPPSCB(1) SETB ('&O' EQ 'PSCB'  OR &RCPPSCB(1))\n&RCPPSCB(1) SETB ('&O' EQ 'TSO'   OR &RCPPSCB(1))\n&RCPQCB(1)  SETB ('&O' EQ 'ENQ'   OR &RCPQCB(1))\n&RCPQCB(1)  SETB ('&O' EQ 'QCB'   OR &RCPQCB(1))\n&RCPQCB(1)  SETB ('&O' EQ 'SYS'   OR &RCPQCB(1))\n&RCPQDB(1)  SETB ('&O' EQ 'QDB'   OR &RCPQDB(1))\n&RCPQEL(1)  SETB ('&O' EQ 'ENQ'   OR &RCPQEL(1))\n&RCPQEL(1)  SETB ('&O' EQ 'QEL'   OR &RCPQEL(1))\n&RCPQEL(1)  SETB ('&O' EQ 'SYS'   OR &RCPQEL(1))\n&RCPQMPA(1) SETB ('&O' EQ 'QMPA'  OR &RCPQMPA(1))\n&RCPQMPA(1) SETB ('&O' EQ 'SWAM'  OR &RCPQMPA(1))\n&RCPQUAA(1) SETB ('&O' EQ 'QUAA'  OR &RCPQUAA(1))\n&RCPRB(1)   SETB ('&O' EQ 'PROG'  OR &RCPRB(1))\n&RCPRB(1)   SETB ('&O' EQ 'RB'    OR &RCPRB(1))\n&RCPRCVT(1) SETB ('&O' EQ 'RCVT'  OR &RCPRCVT(1))\n&RCPRMCT(1) SETB ('&O' EQ 'RMCT'  OR &RCPRMCT(1))\n&RCPRMCTZ(1) SETB ('&O' EQ 'RMCTZ'  OR &RCPRMCTZ(1))\n&RCPRPL(1)  SETB ('&O' EQ 'DM'    OR &RCPRPL(1))\n&RCPRPL(1)  SETB ('&O' EQ 'IO'    OR &RCPRPL(1))\n&RCPRPL(1)  SETB ('&O' EQ 'RPL'   OR '&O' EQ 'VSAM' OR &RCPRPL(1))\n&RCPRQE(1)  SETB ('&O' EQ 'IO'    OR &RCPRQE(1))\n&RCPRQE(1)  SETB ('&O' EQ 'RQE'   OR &RCPRQE(1))\n&RCPSCB(1)  SETB ('&O' EQ 'SCB'   OR &RCPSCB(1))\n&RCPSCB(1)  SETB ('&O' EQ 'TASK'  OR &RCPSCB(1))\n&RCPSCT(1)  SETB ('&O' EQ 'SCT'   OR &RCPSCT(1))\n&RCPSCT(1)  SETB ('&O' EQ 'SWA'   OR &RCPSCT(1))\n&RCPSCTX(1) SETB ('&O' EQ 'SCTX'  OR &RCPSCTX(1))\n&RCPSCTX(1) SETB ('&O' EQ 'SWA'   OR &RCPSCTX(1))\n&RCPSCVT(1) SETB ('&O' EQ 'SCVT'  OR &RCPSCVT(1))\n&RCPSCVT(1) SETB ('&O' EQ 'SYS'   OR &RCPSCVT(1))\n&RCPSDWA(1) SETB ('&O' EQ 'SDWA'  OR &RCPSDWA(1))\n&RCPSEPL(1) SETB ('&O' EQ 'SEPL'  OR &RCPSEPL(1))\n&RCPSIOT(1) SETB ('&O' EQ 'SIOT'  OR &RCPSIOT(1))\n&RCPSIOT(1) SETB ('&O' EQ 'SWA'   OR &RCPSIOT(1))\n&RCPSIOTX(1) SETB ('&O' EQ 'SIOTX' OR &RCPSIOTX(1))\n&RCPSIOTX(1) SETB ('&O' EQ 'SWA'   OR &RCPSIOTX(1))\n&RCPSMCA(1) SETB ('&O' EQ 'SMCA'  OR &RCPSMCA(1))\n&RCPSMCA(1) SETB ('&O' EQ 'SMF'   OR &RCPSMCA(1))\n&RCPSRB(1)  SETB ('&O' EQ 'SRB'   OR &RCPSRB(1))\n&RCPSSAT(1) SETB ('&O' EQ 'SSAT'  OR &RCPSSAT(1))\n&RCPSSS(1)  SETB ('&O' EQ 'SSCT'  OR &RCPSSS(1))\n&RCPSSS(1)  SETB ('&O' EQ 'SSIB'  OR &RCPSSS(1))\n&RCPSSS(1)  SETB ('&O' EQ 'SSOB'  OR &RCPSSS(1))\n&RCPSSS(1)  SETB ('&O' EQ 'SSVT'  OR &RCPSSS(1))\n&RCPSSS(1)  SETB ('&O' EQ 'SUBSYS' OR &RCPSSS(1))\n&RCPSVT(1)  SETB ('&O' EQ 'SVT'   OR &RCPSVT(1))\n&RCPSWB(1)  SETB ('&O' EQ 'SWB'   OR &RCPSWB(1))\n&RCPTCB(1)  SETB ('&O' EQ 'TASK'  OR &RCPTCB(1))\n&RCPTCB(1)  SETB ('&O' EQ 'TCB'   OR &RCPTCB(1))\n&RCPTCT(1)  SETB ('&O' EQ 'JOB'   OR &RCPTCT(1))\n&RCPTCT(1)  SETB ('&O' EQ 'TASK'  OR &RCPTCT(1))\n&RCPTCT(1)  SETB ('&O' EQ 'TCT'   OR &RCPTCT(1))\n&RCPTIOT(1) SETB ('&O' EQ 'DM'    OR &RCPTIOT(1))\n&RCPTIOT(1) SETB ('&O' EQ 'IO'    OR &RCPTIOT(1))\n&RCPTIOT(1) SETB ('&O' EQ 'JOB'   OR &RCPTIOT(1))\n&RCPTIOT(1) SETB ('&O' EQ 'TASK'  OR &RCPTIOT(1))\n&RCPTIOT(1) SETB ('&O' EQ 'TIOT'  OR &RCPTIOT(1))\n&RCPTSB(1)  SETB ('&O' EQ 'TSB'   OR &RCPTSB(1))\n&RCPTSB(1)  SETB ('&O' EQ 'TSO'   OR &RCPTSB(1))\n&RCPUCB(1)  SETB ('&O' EQ 'IO'    OR &RCPUCB(1))\n&RCPUCB(1)  SETB ('&O' EQ 'SYS'   OR &RCPUCB(1))\n&RCPUCB(1)  SETB ('&O' EQ 'UCB'   OR &RCPUCB(1))\n&RCPUCBCX(1) SETB ('&O' EQ 'UCBCX' OR &RCPUCBCX(1))\n&RCPUCBG(1) SETB ('&O' EQ 'IOCM'  OR &RCPUCBG(1))\n&RCPUCBG(1) SETB ('&O' EQ 'IOCOM' OR &RCPUCBG(1))\n&RCPUCBG(1) SETB ('&O' EQ 'UCBLOOK' OR &RCPUCBG(1))\n&RCPUCM(1)  SETB ('&O' EQ 'SYS'   OR &RCPUCM(1))\n&RCPUCM(1)  SETB ('&O' EQ 'UCM'   OR &RCPUCM(1))\n&RCPUPT(1)  SETB ('&O' EQ 'TSO'   OR &RCPUPT(1))\n&RCPUPT(1)  SETB ('&O' EQ 'UPT'   OR &RCPUPT(1))\n&RCPWPL(1)  SETB ('&O' EQ 'WPL'   OR &RCPWPL(1))\n&RCPWQE(1)  SETB ('&O' EQ 'WQE'   OR &RCPWQE(1))\n&RCPWSVT(1) SETB ('&O' EQ 'WSAVT' OR &RCPWSVT(1))\n&RCPXL(1)   SETB ('&O' EQ 'PROG'  OR &RCPXL(1))\n&RCPXL(1)   SETB ('&O' EQ 'XL'    OR &RCPXL(1))\n&RCPXSB(1)  SETB ('&O' EQ 'XSB'   OR &RCPXSB(1))\n&RCPZ4UV(1) SETB ('&O' EQ 'ZB4UV' OR &RCPZ4UV(1))\n&RCPZ502(1) SETB ('&O' EQ 'SWAM'  OR &RCPZ502(1))\n&RCPZ502(1) SETB ('&O' EQ 'ZB502' OR &RCPZ502(1))\n&RCPZ505(1) SETB ('&O' EQ 'EPA'   OR &RCPZ505(1))\n&RCPZ505(1) SETB ('&O' EQ 'SWAM'  OR &RCPZ505(1))\n&RCPZ505(1) SETB ('&O' EQ 'ZB505' OR &RCPZ505(1))\n&RCPZ506(1) SETB ('&O' EQ 'EPA'   OR &RCPZ506(1))\n&RCPZ506(1) SETB ('&O' EQ 'SWAM'  OR &RCPZ506(1))\n&RCPZ506(1) SETB ('&O' EQ 'ZB506' OR &RCPZ506(1))\n         AGO   .DSE0100\n.*\n.*  SET UP DEPENDENCIES\n.*\n.DSE0200    ANOP  ,\n&RCPASCB(1) SETB (&RCPASCB(1) OR &RCPASXB(1))     ASXB  -->  ASCB\n&RCPCSCB(1) SETB (&RCPCSCB(1) OR &RCPCIB(1))      CIB   -->  CSCB\n&RCPCVT(1)  SETB (&RCPCVT(1)  OR &RCPEDT(1))      EDT   -->  CVT\n&RCPCVT(1)  SETB (&RCPCVT(1)  OR &RCPQMPA(1))     QMPA  -->  CVT\n&RCPCVT(1)  SETB (&RCPCVT(1)  OR &RCPSCVT(1))     SCVT  -->  CVT\n&RCPCVT(1)  SETB (&RCPCVT(1)  OR &RCPZ505(1))     ZB505 -->  CVT\n&RCPCVT(1)  SETB (&RCPCVT(1)  OR &RCPZ506(1))     ZB506 -->  CVT\n&RCPJES(1)  SETB (&RCPJES(1)  OR &RCPEDT(1))      EDT   -->  JESCT\n&RCPJES(1)  SETB (&RCPJES(1)  OR &RCPQMPA(1))     QMPA  -->  JESCT\n&RCPJES(1)  SETB (&RCPJES(1)  OR &RCPSSS(1))      SUBSYS-->  JESCT\n&RCPJES(1)  SETB (&RCPJES(1)  OR &RCPZ505(1))     ZB505 -->  JESCT\n&RCPJES(1)  SETB (&RCPJES(1)  OR &RCPZ506(1))     ZB506 -->  JESCT\n&RCPJFCB(1) SETB (&RCPJFCB(1) OR &RCPJFCX(1))     JFCBX -->  JFCB\n&RCPLCCA(1) SETB (&RCPLCCA(1) OR &RCPLCCT(1))     LCCAT -->  LCCA\n&RCPOUCB(1) SETB (&RCPOUCB(1) OR &RCPOUXB(1))     OUXB  -->  OUCB\n&RCPPCCA(1) SETB (&RCPLCCA(1) OR &RCPPCCT(1))     PCCAT -->  PCCA\n&RCPPSA(1)  SETB (&RCPPSA(1)  OR &RCPJMR(1))      JMR   -->  PSA\n&RCPTCB(1)  SETB (&RCPTCB(1)  OR &RCPTCT(1))      TCT   -->  TCB\n&RCPTCT(1)  SETB (&RCPTCT(1)  OR &RCPJMR(1))      JMR   -->  TCT\n.*\n         AIF   ('&TYPE' EQ '').DSE0300\n         AIF   ('&TYPE' EQ 'DEFER        '(1,K'&TYPE)).DSE0500\n.DSE0300 ANOP  ,\n         AIF   (&PRT).DSE0400\n         PUSH  PRINT\n         PRINT OFF\n.DSE0400 ANOP  ,\n         AIF   (NOT &RCPPSA(1) AND NOT &ALL OR &RCPPSA(2)).NOPSA\n&RCPPSA(2) SETB 1\n         TITLE 'PREFIXED SAVE AREA'\nPSA      DSECT ,\n*        IHAPSA LIST=YES\n         IHAPSA LIST=YES\n.NOPSA   ANOP  ,\n         AIF   (NOT &RCPCSD(1) AND NOT &ALL OR &RCPCSD(2)).NOCSD\n&RCPCSD(2) SETB 1\n         TITLE 'COMMON SYSTEM DATA AREA'\n*        IHACSD ,\n         IHACSD ,\n         AIF   (D'CSD_CPU_ALIVE_ADDR).CSD11 Skip if 1.11+ macs\n         ORG   CSDDIAG+88\nCSD_CPU_ALIVE_ADDR  DC   A(0) CPU alive mask pointer. Points to a\n*                             bitmask on a double word boundary (for\n*                             compare and swap) that is\n*                             ECVTMaxMPNumBytesInMask bytes long where\n*                             the first (CVTMAXMP+1) bits are valid.\n*                                                                  @LAA\nCSD_BYLPAR_CP_MASK_ADDR DC A(0) Pointer to mask of processors defined\n*                             as standard processors - not necessarily\n*                             online.  Points to a bitmask on\n*                             a double word boundary (for compare and\n*                             swap) that is ECVTMaxMPNumBytesInMask\n*                             bytes long where the first (CVTMAXMP+1)\n*                             bits are valid.                      @LAA\nCSD_BYLPAR_ZAAP_MASK_ADDR DC A(0) Pointer to mask of processors defined\n*                             as special processors - not necessarily\n*                             online.  Points to a bitmask on\n*                             a double word boundary (for compare and\n*                             swap) that is ECVTMaxMPNumBytesInMask\n*                             bytes long where the first (CVTMAXMP+1)\n*                             bits are valid.                      @LAA\nCSD_BYLPAR_ZIIP_MASK_ADDR DC A(0) Pointer to mask of processors defined\n*                             as zIIP processors - not necessarily\n*                             online.  Points to a bitmask on\n*                             a double word boundary (for compare and\n*                             swap) that is ECVTMaxMPNumBytesInMask\n*                             bytes long where the first (CVTMAXMP+1)\n*                             bits are valid.                      @LAA\nCSD_CPUS_GOING_ON_OR_OFF_MASK_ADDR DC A(0) Pointer to mask of CPUs\n*                             configured on or off during a reporting\n*                             interval.  Points to a bitmask on a\n*                             double word boundary (for compare and\n*                             swap) that is ECVTMaxMPNumBytesInMask\n*                             bytes long where the first (CVTMAXMP+1)\n*                             bits are valid.                      @LAA\nCSD_CPUS_MANIPULATED_BY_WLM_ADDR DC A(0)  Pointer to mask of CPUs\n*                             manipulated by WLM. If bit x is on, then\n*                             WLM put the CPU into its current state\n*                             (online or offline).  Points to a\n*                             bitmask on a double word boundary (for\n*                             compare and swap) that is\n*                             ECVTMaxMPNumBytesInMask bytes long where\n*                             the first (CVTMAXMP+1) bits are valid.\n*                                                                  @LAA\nCSD_CPUS_VARIED_OFFLINE_BY_OPERATOR_ADDR DC A(0) Pointer to mask of\n*                             CPUs configured offline by the operator.\n*                             Points to a bitmask on a double word\n*                             boundary (for compare and swap) that is\n*                             ECVTMaxMPNumBytesInMask bytes long where\n*                             the first (CVTMAXMP+1) bits are valid.\n*                                                                  @LAA\nCSD_CPUS_TAKEN_OFFLINE_BY_ACR_ADDR DC A(0) Pointer to mask of CPUs\n*                             configured offline by ACR.  Points to a\n*                             bitmask on a double word boundary (for\n*                             compare and swap) that is\n*                             ECVTMaxMPNumBytesInMask bytes long where\n*                             the first (CVTMAXMP+1) bits are valid.\n*                                                                  @LAA\n.CSD11   ANOP  ,\n.NOCSD   ANOP  ,\n         AIF   (NOT &RCPSSAT(1) AND NOT &ALL OR &RCPSSAT(2)).NOSSAT\n&RCPSSAT(2) SETB 1\n         TITLE 'SUB SYSTEM AFFINITY TABLE'\n*        IHASSAT ,\n         IHASSAT ,\n.NOSSAT  ANOP  ,\n         AIF   (NOT &RCPSVT(1) AND NOT &ALL OR &RCPSVT(2)).NOSVT\n&RCPSVT(2) SETB 1\n         TITLE 'SUPERVISOR VECTOR TABLE'\n*        IHASVT ,\n         IHASVT ,\n.NOSVT   ANOP  ,\n         AIF   (NOT &RCPSWB(1) AND NOT &ALL OR &RCPSWB(2)).NOSWB\n&RCPSWB(2) SETB 1\n*        IEFSWB ,\n         IEFSWB ,\n.NOSWB   ANOP  ,\n         AIF   (NOT &RCPLCCA(1) AND NOT &ALL OR &RCPLCCA(2)).NOLCCA\n&RCPLCCA(2) SETB 1\n         TITLE 'LOGICAL CONFIGURATION COMMUNICATION AREA'\n*        IHALCCA ,\n         IHALCCA ,\n.NOLCCA  ANOP  ,\n         AIF   (NOT &RCPLCCT(1) AND NOT &ALL OR &RCPLCCT(2)).NOLCCT\n&RCPLCCT(2) SETB 1\n         TITLE 'LCCA VECTOR TABLE'\n*        IHALCCAT ,\n         IHALCCAT ,\n.NOLCCT  ANOP  ,\n         AIF   (NOT &RCPPCCA(1) AND NOT &ALL OR &RCPPCCA(2)).NOPCCA\n&RCPPCCA(2) SETB 1\n         TITLE 'PHYSICAL CONFIGURATION COMMUNICATION AREA'\n*        IHAPCCA ,\n         IHAPCCA ,\n.NOPCCA  ANOP  ,\n         AIF   (NOT &RCPPCCB(1) AND NOT &ALL OR &RCPPCCB(2)).NOPCCB\n&RCPPCCB(2) SETB 1\n*        IEFPCCB ,\n         IEFPCCB ,\n.NOPCCB  ANOP  ,\n         AIF   (NOT &RCPPCCT(1) AND NOT &ALL OR &RCPPCCT(2)).NOPCCT\n&RCPPCCT(2) SETB 1\n         TITLE 'PCCA VECTOR TABLE'\n*        IHAPCCAT ,\n         IHAPCCAT ,\nPCCATEND EQU   *\n.NOPCCT  ANOP  ,\n         AIF   (NOT &RCPGDA(1) AND NOT &ALL OR &RCPGDA(2)).NOGDA\n&RCPGDA(2) SETB 1\n         TITLE 'VSM GLOBAL DATA AREA'\n*        IHAGDA ,\n         IHAGDA ,\n.NOGDA   ANOP  ,\n         AIF   (NOT &RCPLDA(1) AND NOT &ALL OR &RCPLDA(2)).NOLDA\n&RCPLDA(2) SETB 1\n         TITLE 'VSM LOCAL DATA AREA'\n*        IHALDA ,\n         IHALDA ,\n.NOLDA   ANOP  ,\n         AIF   (NOT &RCPCPAB(1) AND NOT &ALL OR &RCPCPAB(2)).NOCPAB\n&RCPCPAB(2) SETB 1\n         TITLE 'VSM CELL POOL ANCHOR BLOCK'\n*        IHACPAB ,\n         IHACPAB ,\n.NOCPAB  ANOP  ,\n         AIF   (NOT &RCPCVT(1) AND NOT &ALL OR &RCPCVT(2)).NOCVT\n&RCPCVT(2) SETB 1\n         TITLE 'COMMUNICATION VECTOR TABLE'\n*        CVT   LIST=YES,DSECT=YES,PREFIX=YES\n         CVT   LIST=YES,DSECT=YES,PREFIX=YES\nCVT      EQU   CVTMAP\n         IHAECVT LIST=YES,DSECT=YES\n.NOCVT   ANOP  ,\n         AIF   (NOT &RCPSCVT(1) AND NOT &ALL OR &RCPSCVT(2)).NOSCVT\n&RCPSCVT(2) SETB 1\n         TITLE 'SECONDARY COMMUNICATION VECTOR TABLE'\n*        IHASCVT LIST=YES\n         IHASCVT LIST=YES\n.NOSCVT  ANOP  ,\n         AIF   (NOT &RCPASCB(1) AND NOT &ALL OR &RCPASCB(2)).NOASCB\n&RCPASCB(2) SETB 1\n         TITLE 'ADDRESS SPACE CONTROL BLOCK'\n*        IHAASCB ,\n         IHAASCB ,\n.NOASCB  ANOP  ,\n         AIF   (NOT &RCPASSB(1) AND NOT &ALL OR &RCPASSB(2)).NOASSB\n&RCPASSB(2) SETB 1\n         TITLE 'ADDRESS SPACE SECONDARY BLOCK'\n*        IHAASSB LIST=YES\n         IHAASSB LIST=YES\n.NOASSB  ANOP  ,\n         AIF   (NOT &RCPASXB(1) AND NOT &ALL OR &RCPASXB(2)).NOASXB\n&RCPASXB(2) SETB 1\n         TITLE 'ADDRESS SPACE EXTENSION BLOCK'\n*        IHAASXB ,\n         IHAASXB ,\n.NOASXB  ANOP  ,\n         AIF   (NOT &RCPASVT(1) AND NOT &ALL OR &RCPASVT(2)).NOASVT\n&RCPASVT(2) SETB 1\n         TITLE 'ADDRESS SPACE VECTOR TABLE'\n*        IHAASVT ,\n         IHAASVT ,\n.NOASVT  ANOP  ,\n         AIF   (NOT &RCPSRB(1) AND NOT &ALL OR &RCPSRB(2)).NOSRB\n&RCPSRB(2) SETB 1\n         TITLE 'SERVICE REQUEST BLOCK'\n*        IHASRB ,\n         IHASRB ,\n.NOSRB   ANOP  ,\n         AIF   (NOT &RCPTCB(1) AND NOT &ALL OR &RCPTCB(2)).NOTCB\n&RCPTCB(2) SETB 1\n         TITLE 'TASK CONTROL BLOCK'\n*        IKJTCB LIST=YES\n         IKJTCB LIST=YES\n.NOTCB   ANOP  ,\n         AIF   (NOT &RCPOUCB(1) AND NOT &ALL OR &RCPOUCB(2)).NOOUCB\n&RCPOUCB(2) SETB 1\n         TITLE 'SRM USER CONTROL BLOCK'\n*        IRAOUCB ,\n         IRAOUCB ,\n.NOOUCB  ANOP  ,\n         AIF   (NOT &RCPOUXB(1) AND NOT &ALL OR &RCPOUXB(2)).NOOUXB\n&RCPOUXB(2) SETB 1\n         TITLE 'SRM USER EXTENSION BLOCK'\n*        IHAOUXB ,\n         IHAOUXB ,\n.NOOUXB  ANOP  ,\n         AIF   (NOT &RCPSIOT(1) AND NOT &ALL OR &RCPSIOT(2)).NOSIOT\n&RCPSIOT(2) SETB 1\n         TITLE 'STEP INPUT/OUTPUT TABLE'\nSIOT     DSECT ,\n*        IEFASIOT ,\n         IEFASIOT ,\nSIOTL    EQU   176\n.NOSIOT  ANOP  ,\n         AIF   (NOT &RCPSIOTX(1) AND NOT &ALL OR &RCPSIOTX(2)).NOSIOTX\n&RCPSIOTX(2) SETB 1\n         TITLE 'STEP INPUT/OUTPUT TABLE EXTENSION'\n*        IEFSIOTX ,\n         IEFSIOTX ,\nSIOTEXTL EQU   *-SIOTX\n.NOSIOTX ANOP  ,\n         AIF   (NOT &RCPTIOT(1) AND NOT &ALL OR &RCPTIOT(2)).NOTIOT\n&RCPTIOT(2) SETB 1\n         TITLE 'TASK INPUT OUTPUT TABLE'\nTIOT     DSECT ,\n*        IEFTIOT1 ,\n         IEFTIOT1 ,\n.NOTIOT  ANOP  ,\n         AIF   (NOT &RCPTCT(1) AND NOT &ALL OR &RCPTCT(2)).NOTCT\n&RCPTCT(2) SETB 1\n         TITLE 'TIMING CONTROL TABLE'\n*        IEFTCT ,\n         IEFTCT ,\n.NOTCT   ANOP  ,\n         AIF   (NOT &RCPLCT(1) AND NOT &ALL OR &RCPLCT(2)).NOLCT\n&RCPLCT(2) SETB 1\n         TITLE 'LINKAGE CONTROL TABLE'\nLCT      DSECT ,\n*        IEFALLCT ,\n         IEFALLCT ,\n.NOLCT   ANOP  ,\n         AIF   (NOT &RCPSCT(1) AND NOT &ALL OR &RCPSCT(2)).NOSCT\n&RCPSCT(2) SETB 1\n         TITLE 'STEP CONTROL TABLE'\nSCT      DSECT ,\n*        IEFASCTB ,\n         IEFASCTB ,\n.NOSCT   ANOP  ,\n         AIF   (NOT &RCPSCTX(1) AND NOT &ALL OR &RCPSCTX(2)).NOSCTX\n&RCPSCTX(2) SETB 1\n         TITLE 'STEP CONTROL TABLE EXTENSION'\nSCTX     DSECT ,\n*        IEFSCTX DSECT=NO\n         IEFSCTX DSECT=NO\n.NOSCTX  ANOP  ,\n         AIF   (NOT &RCPJCT(1) AND NOT &ALL OR &RCPJCT(2)).NOJCT\n&RCPJCT(2) SETB 1\n         TITLE 'JOB CONTROL TABLE'\nJCT      DSECT ,\n*        IEFAJCTB ,\n         IEFAJCTB ,\n.NOJCT   ANOP  ,\n         AIF   (NOT &RCPJCTX(1) AND NOT &ALL OR &RCPJCTX(2)).NOJCTX\n&RCPJCTX(2) SETB 1\n         TITLE 'JOB CONTROL TABLE EXTENSION'\nJCTX     DSECT ,\n*        IEFJCTX ,\n         IEFJCTX ,\n.NOJCTX  ANOP  ,\n         AIF   (NOT &RCPJMR(1) AND NOT &ALL OR &RCPJMR(2)).NOJMR\n&RCPJMR(2) SETB 1\n         TITLE 'JOB MANAGEMENT RECORD'\n*        IEFJMR ,\n         IEFJMR ,\nJMRCBLEN EQU    *-JMR\n.NOJMR   ANOP  ,\n         AIF   (NOT &RCPJSCB(1) AND NOT &ALL OR &RCPJSCB(2)).NOJSCB\n&RCPJSCB(2) SETB 1\n         TITLE 'JOB STEP CONTROL BLOCK'\n*        IEZJSCB ,\n         IEZJSCB ,\nJSCB     EQU   IEZJSCB\n.NOJSCB  ANOP  ,\n         AIF   (NOT &RCPATCH(1) AND NOT &ALL OR &RCPATCH(2)).NOATTCH\n&RCPATCH(2) SETB 1\n         TITLE 'ATTACH (SVC 42) PARAMETER LIST'\n*        IEZATTCH ,\n         IEZATTCH ,\n.NOATTCH ANOP  ,\n         AIF   (NOT &RCPSCB(1) AND NOT &ALL OR &RCPSCB(2)).NOSCB\n&RCPSCB(2) SETB 1\n         TITLE 'STAE CONTROL BLOCK'\n*        IHASCB ,\n         IHASCB ,\n.NOSCB   ANOP  ,\n         AIF   (NOT &RCPSMCA(1) AND NOT &ALL OR &RCPSMCA(2)).NOSMCA\n&RCPSMCA(2) SETB 1\n         TITLE 'SYSTEM MANAGEMENT FACILITIES CONTROL AREA (SMCA)'\n*        IEESMCA ,\n         IEESMCA ,\nSMCA     EQU   SMCABASE\n.NOSMCA  ANOP  ,\n         AIF   (NOT &RCPBASE(1) AND NOT &ALL OR &RCPBASE(2)).NOBASEA\n&RCPBASE(2) SETB 1\n         TITLE 'MASTER SCHEDULER RESIDENT DATA AREA (BASEA)'\n*        IEEBASEA ,\n         IEEBASEA ,\nBASEA    EQU   BASE\n.NOBASEA ANOP  ,\n         AIF   (NOT &RCPCSCB(1) AND NOT &ALL OR &RCPCSCB(2)).NOCSCB\n&RCPCSCB(2) SETB 1\n         TITLE 'COMMAND SCHEDULING CONTROL BLOCK'\nCSCB     DSECT ,\n*        IEECHAIN ,\n         IEECHAIN ,\n.NOCSCB  ANOP  ,\n         AIF   (NOT &RCPCIB(1) AND NOT &ALL OR &RCPCIB(2)).NOCIB\n&RCPCIB(2) SETB 1\n         TITLE 'COMMAND INPUT BUFFER'\nCIB      DSECT ,\n*        IEZCIB ,\n         IEZCIB ,\n.NOCIB   ANOP  ,\n         AIF   (NOT &RCPECB(1) AND NOT &ALL OR &RCPECB(2)).NOECB\n&RCPECB(2) SETB 1\n         TITLE 'EVENT CONTROL BLOCK'\n*        IHAECB ,\n         IHAECB ,\n.NOECB   ANOP  ,\n         AIF   (NOT &RCPACB(1) AND NOT &ALL OR &RCPACB(2)).NOACB\n&RCPACB(2) SETB 1\n         TITLE 'ACCESS METHOD CONTROL BLOCK (ACB)'\n*        IFGACB ,\n         IFGACB ,\nACB      EQU   IFGACB\n.NOACB   ANOP  ,\n         AIF   (NOT &RCPACEE(1) AND NOT &ALL OR &RCPACEE(2)).NOACEE\n&RCPACEE(2) SETB 1\n         TITLE 'ACCESSOR ENVIRONMENT ELEMENT (ACEE)'\n*        IHAACEE ,\n         IHAACEE ,\n.NOACEE  ANOP  ,\n         AIF   (NOT &RCPRPL(1) AND NOT &ALL OR &RCPRPL(2)).NORPL\n&RCPRPL(2) SETB 1\n         TITLE 'REQUEST PARAMETER LIST'\n*        IFGRPL ,\n         IFGRPL ,\nRPL      EQU   IFGRPL\n.NORPL   ANOP  ,\n         AIF   (NOT &RCPDACA(1) AND NOT &ALL OR &RCPDACA(2)).NODACA\n&RCPDACA(2) SETB 1\n         TITLE 'DEVICE ALLOCATION COMMUNICATION AREA'\n*        DACA  ,\n         DACA  ,\n.NODACA  ANOP  ,\n         AIF   (NOT &RCPDCB(1) AND NOT &ALL OR &RCPDCB(2)).NODCB\n&RCPDCB(2) SETB 1\n         TITLE 'DATA CONTROL BLOCK'\n*        DCBD  DSORG=(BX,DA,IS,PO,PS,XA,XE),DEVD=(BS,DA,RD,PC,PR,TA,WT)\n         DCBD  DSORG=(BX,DA,IS,PO,PS,XA,XE),DEVD=(BS,DA,RD,PC,PR,TA,WT)\nDCB      EQU   IHADCB\n.NODCB   ANOP  ,\n         AIF   (NOT &RCPDCBE(1) AND NOT &ALL OR &RCPDCBE(2)).NODCBE\n&RCPDCBE(2) SETB 1\n         TITLE 'DATA CONTROL BLOCK EXTENSION'\n*        IHADCBE ,\n         IHADCBE\n.NODCBE  ANOP  ,\n         AIF   (NOT &RCPDECB(1) AND NOT &ALL OR &RCPDECB(2)).NODECB\n&RCPDECB(2) SETB 1\n         TITLE 'DATA EVENT CONTROL BLOCK'\n*        IHADECB ,                      (SUPPLANTS IECTDECB)\n         IHADECB ,\nIECTDECB EQU   DECB                     (DSECT NAME USED BY BTAM)\n.NODECB  ANOP  ,\n         AIF   (NOT &RCPJFCB(1) AND NOT &ALL OR &RCPJFCB(2)).NOJFCB\n&RCPJFCB(2) SETB 1\n         TITLE 'JOB FILE CONTROL BLOCK'\nJFCB     DSECT ,\n*        IEFJFCBN LIST=YES\n         IEFJFCBN LIST=YES\n.NOJFCB  ANOP  ,\n         AIF   (NOT &RCPJFCX(1) AND NOT &ALL OR &RCPJFCX(2)).NOJFCBX\n&RCPJFCX(2) SETB 1\n         TITLE 'JOB FILE CONTROL BLOCK EXTENSION'\nJFCBX    DSECT ,\n*        IEFJFCBX ,\n         IEFJFCBX ,\nJFCBXLEN EQU   *-JFCBX\n         EJECT ,\n*        IEFJFCBE ,\n         IEFJFCBE ,\n.NOJFCBX ANOP  ,\n         AIF   (NOT &RCPDEB(1) AND NOT &ALL OR &RCPDEB(2)).NODEB\n&RCPDEB(2) SETB 1\n         TITLE 'DATA EXTENT BLOCK'\n*        IEZDEB LIST=YES\n         IEZDEB LIST=YES\nIECTDEB  EQU   DEB                      (DSECT NAME USED BY BTAM)\n.*DEBSYSPG EQU   DEPOPATB+1,3,C'A'        (FROM IECTDEB MAPPING)\n.NODEB   ANOP  ,\n         AIF   (NOT &RCPGEPL(1) AND NOT &ALL OR &RCPGEPL(2)).NOGEPL\n&RCPGEPL(2) SETB 1\n         TITLE 'GROUP EXIT PARAMETER LIST (GEPL)'\n*        IXCYGEPL ,\n         IXCYGEPL ,\n.NOGEPL  ANOP  ,\n         AIF   (NOT &RCPMEPL(1) AND NOT &ALL OR &RCPMEPL(2)).NOMEPL\n&RCPMEPL(2) SETB 1\n         TITLE 'MESSAGE EXIT PARAMETER LIST (MEPL)'\n*        IXCYMEPL ,\n         IXCYMEPL ,\n.NOMEPL  ANOP  ,\n         AIF   (NOT &RCPMNPL(1) AND NOT &ALL OR &RCPMNPL(2)).NOMNPL\n&RCPMNPL(2) SETB 1\n         TITLE 'MESSAGE NOTIFY EXIT PARAMETER LIST (MNPL)'\n*        IXCYMNPL ,\n         IXCYMNPL ,\n.NOMNPL  ANOP  ,\n         AIF   (NOT &RCPMQAA(1) AND NOT &ALL OR &RCPMQAA(2)).NOMQAA\n&RCPMQAA(2) SETB 1\n         TITLE 'MESSAGE CONTROL QUERY ANSWER AREA (MQAA)'\n*        IXCYMQAA ,\n         IXCYMQAA ,\n.NOMQAA  ANOP  ,\n         AIF   (NOT &RCPQUAA(1) AND NOT &ALL OR &RCPQUAA(2)).NOQUAA\n&RCPQUAA(2) SETB 1\n         TITLE 'QUERY ANSWER AREA (QUAA)'\n*        IXCYQUAA ,\n         IXCYQUAA ,\n.NOQUAA  ANOP  ,\n         AIF   (NOT &RCPSEPL(1) AND NOT &ALL OR &RCPSEPL(2)).NOSEPL\n&RCPSEPL(2) SETB 1\n         TITLE 'STATUS EXIT PARAMETER LIST (SEPL)'\n*        IXCYSEPL ,\n         IXCYSEPL ,\n.NOSEPL  ANOP  ,\n         AIF   (NOT &RCPIOB(1) AND NOT &ALL OR &RCPIOB(2)).NOIOB\n&RCPIOB(2) SETB 1\n         TITLE 'INPUT OUTPUT BLOCK'\n*        IEZIOB ,\n         IEZIOB ,\nIECTIOB  EQU   IOBSTDRD                 (DSECT NAME USED BY BTAM)\n.NOIOB   ANOP  ,\n         AIF   (NOT &RCPIOBE(1) AND NOT &ALL OR &RCPIOBE(2)).NOIOBE\n&RCPIOBE(2) SETB 1\n         TITLE 'INPUT OUTPUT BLOCK EXTENSION'\n*        IOSDIOBE ,\n         IOSDIOBE ,\n.NOIOBE  ANOP  ,\n         AIF   (NOT &RCPIOSB(1) AND NOT &ALL OR &RCPIOSB(2)).NOIOSB\n&RCPIOSB(2) SETB 1\n         TITLE 'I/O SUPERVISOR BLOCK (IOSB)'\n*        IECDIOSB ,\n         IECDIOSB ,\n.NOIOSB  ANOP  ,\n         AIF   (NOT &RCPIPA(1) AND NOT &ALL OR &RCPIPA(2)).NOIPA\n&RCPIPA(2) SETB 1\n         TITLE 'INITIALIZATION PARAMETER AREA (IPA)'\n*        IHAIPA DSECT=YES\n         IHAIPA DSECT=YES\n.NOIPA   ANOP  ,\n         AIF   (NOT &RCPIPIB(1) AND NOT &ALL OR &RCPIPIB(2)).NOIPIB\n&RCPIPIB(2) SETB 1\n         TITLE 'I/O SUPERVISOR PURGE INTERFACE BLOCK (IPIB)'\n*        IECDIPIB ,\n         IECDIPIB ,\n.NOIPIB  ANOP  ,\n         AIF   (NOT &RCPATB(1) AND NOT &ALL OR &RCPATB(2)).NOATB\n&RCPATB(2) SETB 1\n         TITLE 'IOS ATTENTION TABLE'\n*        IECDATB\n         IECDATB ,\n.NOATB   ANOP  ,\n         AIF   (NOT &RCPUCBG(1) AND NOT &ALL OR &RCPUCBG(2)).NOUCBG\n&RCPUCBG(2) SETB 1\n         TITLE 'IOS COMMUNICATIONS AREA'\n*        IECDIOCM\n         IECDIOCM ,\n.NOUCBG  ANOP  ,\n         AIF   (NOT &RCPUCB(1) AND NOT &ALL OR &RCPUCB(2)).NOUCB\n&RCPUCB(2) SETB 1\n         TITLE 'UNIT CONTROL BLOCK'\n*        IEFUCBOB LIST=YES,PREFIX=YES\n         IEFUCBOB LIST=YES,PREFIX=YES\n.NOUCB   ANOP  ,\n         AIF   (NOT &RCPUCBCX(1) AND NOT &ALL OR &RCPUCBCX(2)).NOUCBCX\n&RCPUCBCX(2) SETB 1\n         TITLE 'UCB TAPE CLASS EXTENSION'\n*        IECUCBCX ,\n         IECUCBCX ,\n.NOUCBCX ANOP  ,\n         AIF   (NOT &RCPUCM(1) AND NOT &ALL OR &RCPUCM(2)).NOUCM\n&RCPUCM(2) SETB 1\n         TITLE 'UNIT CONTROL MODULE'\n*        IEECUCM FORMAT=NEW,LIST=YES\n         IEECUCM FORMAT=NEW,LIST=YES\n.NOUCM   ANOP  ,\n         AIF   (NOT &RCPWPL(1) AND NOT &ALL OR &RCPWPL(2)).NOWPL\n&RCPWPL(2) SETB 1\n         TITLE 'WRITE TO OPERATOR PARAMETER LIST'\n*        IEZWPL\n         IEZWPL ,\nWPLRFLEN EQU   *-WPLRF\n.NOWPL   ANOP  ,\n         AIF   (NOT &RCPWQE(1) AND NOT &ALL OR &RCPWQE(2)).NOWQE\n&RCPWQE(2) SETB 1\n         TITLE 'WRITE TO OPERATOR QUEUE ELEMENT'\n*        IHAWQE\n         IHAWQE ,\n.NOWQE   ANOP  ,\n         AIF   (NOT &RCPRQE(1) AND NOT &ALL OR &RCPRQE(2)).NORQE\n&RCPRQE(2) SETB 1\n         TITLE 'REQUEST QUEUE ELEMENT'\n*        IECDRQE ,\n         IECDRQE ,\n.NORQE   ANOP  ,\n         AIF   (NOT &RCPDSCB(1) AND NOT &ALL OR &RCPDSCB(2)).NODSCB\n&RCPDSCB(2) SETB 1\n         TITLE 'DATA SET CONTROL BLOCK - FORMAT 1'\nDSCB     DSECT ,\n         IECSDSL1 1\n         TITLE 'DATA SET CONTROL BLOCK - FORMAT 2'\n         ORG   DSCB\n         IECSDSL1 2\n         TITLE 'DATA SET CONTROL BLOCK - FORMAT 3'\n         ORG   DSCB\n         IECSDSL1 3\n         TITLE 'DATA SET CONTROL BLOCK - FORMAT 4'\n         ORG   DSCB\n         DS    XL44                     KEY\n         IECSDSL1 4\n         TITLE 'DATA SET CONTROL BLOCK - FORMAT 5'\n         ORG   DSCB\n         IECSDSL1 5\n         TITLE 'DATA SET CONTROL BLOCK - FORMAT 6'\n         ORG   DSCB\n         IECSDSL1 6\n.NODSCB  ANOP  ,\n         AIF   (NOT &RCPDSNT(1) AND NOT &ALL OR &RCPDSNT(2)).NODSNT\n&RCPDSNT(2) SETB 1\n         TITLE 'DATA SET NAME TABLE'\nDSNT     DSECT ,\n*        IEFDSNT ,\n         IEFDSNT ,\n.NODSNT  ANOP  ,\n         AIF   (NOT &RCPDSAB(1) AND NOT &ALL OR &RCPDSAB(2)).NODSAB\n&RCPDSAB(2) SETB 1\n         TITLE 'DSAB QUEUE DESCRIPTOR BLOCK'\n*        IEFZB4D5 ,\n         IEFZB4D5 ,\n         TITLE 'DATA SET ASSOCIATION BLOCK'\n*        IHADSAB ,\n         IHADSAB ,\n.NODSAB  ANOP  ,\n         AIF   (NOT &RCPRB(1) AND NOT &ALL OR &RCPRB(2)).NORB\n&RCPRB(2) SETB 1\n         TITLE 'REQUEST BLOCK'\n*        IHARB ,\n         IHARB LIST=&LIST\n.NORB    ANOP  ,\n  AIF   (NOT &RCPXSB(1) AND NOT &ALL OR &RCPXSB(2)).NOXSB\n&RCPXSB(2) SETB 1\n         TITLE 'EXTENDED STATUS BLOCK'\n*        IHAXSB ,\n         IHAXSB LIST=&LIST\n.NOXSB   ANOP  ,\n         AIF   (NOT &RCPIQE(1) AND NOT &ALL OR &RCPIQE(2)).NOIQE\n&RCPIQE(2) SETB 1\n         TITLE 'INTERRUPTION QUEUE ELEMENT'\n*        IHAIQE ,\n         IHAIQE ,\nIQE      EQU   IQESECT\n.NOIQE   ANOP  ,\n         AIF   (NOT &RCPCDE(1) AND NOT &ALL OR &RCPCDE(2)).NOCDE\n&RCPCDE(2) SETB 1\n         TITLE 'CONTENTS DIRECTORY ENTRY'\n*        IHACDE ,\n         IHACDE ,\n.NOCDE   ANOP  ,\n         AIF   (NOT &RCPLPDE(1) AND NOT &ALL OR &RCPLPDE(2)).NOLPDE\n&RCPLPDE(2) SETB 1\n         TITLE 'LINK PACK DIRECTORY ENTRY'\n*        IHALPDE ,\n         IHALPDE ,\n.NOLPDE  ANOP  ,\n         AIF   (NOT &RCPLWA(1) AND NOT &ALL OR &RCPLWA(2)).NOLWA\n&RCPLWA(2) SETB 1\n         TITLE 'LOGON WORK AREA'\n*        IKJEFLWA ,\n         IKJEFLWA ,\n.NOLWA   ANOP  ,\n         AIF   (NOT &RCPLLE(1) AND NOT &ALL OR &RCPLLE(2)).NOLLE\n&RCPLLE(2) SETB 1\n         TITLE 'LOAD LIST ELEMENT'\n*        IHALLE ,\n         IHALLE ,\n.NOLLE   ANOP  ,\n         AIF   (NOT &RCPXL(1) AND NOT &ALL OR &RCPXL(2)).NOXL\n&RCPXL(2) SETB 1\n         TITLE 'EXTENT LIST'\n*        IHAXTLST ,\n         IHAXTLST ,\n.NOXL    ANOP  ,\n         AIF   (NOT &RCPQCB(1) AND NOT &ALL OR &RCPQCB(2)).NOQCB\n&RCPQCB(2) SETB 1\n         TITLE 'GRS QUEUE CONTROL BLOCK'\n*        ISGQCB ,\n         ISGQCB ,\n.NOQCB   ANOP  ,\n         AIF   (NOT &RCPQDB(1) AND NOT &ALL OR &RCPQDB(2)).NOQDB\n&RCPQDB(2) SETB 1\n         TITLE 'QUEUE DESCRIPTOR BLOCK'\n*        IHAQDB DSECT=YES\n         IHAQDB DSECT=YES\n.NOQDB   ANOP  ,\n         AIF   (NOT &RCPQEL(1) AND NOT &ALL OR &RCPQEL(2)).NOQEL\n&RCPQEL(2) SETB 1\n         TITLE 'GRS QUEUE ELEMENT'\n*        ISGQEL ,\n         ISGQEL ,\n.NOQEL   ANOP  ,\n         AIF   (NOT &RCPPSCB(1) AND NOT &ALL OR &RCPPSCB(2)).NOPSCB\n&RCPPSCB(2) SETB 1\n         TITLE 'PROTECTED STEP CONTROL BLOCK'\n*        IKJPSCB ,\n         IKJPSCB ,\n.NOPSCB  ANOP  ,\n         AIF   (NOT &RCPECT(1) AND NOT &ALL OR &RCPECT(2)).NOECT\n&RCPECT(2) SETB 1\n         TITLE 'ENVIRONMENT CONTROL TABLE'\n*        IKJECT ,\n         IKJECT ,\nECTLEN   EQU   *-ECT\n.NOECT   ANOP  ,\n         AIF   (NOT &RCPUPT(1) AND NOT &ALL OR &RCPUPT(2)).NOUPT\n&RCPUPT(2) SETB 1\n         TITLE 'USER PROFILE TABLE'\n*        IKJUPT ,\n         IKJUPT ,\nUPTLNGTH EQU   *-UPT\n.NOUPT   ANOP  ,\n         AIF   (NOT &RCPSDWA(1) AND NOT &ALL OR &RCPSDWA(2)).NOSDWA\n&RCPSDWA(2) SETB 1\n         TITLE 'SYSTEM DIAGNOSTIC WORK AREA'\n*        IHASDWA ,\n         IHASDWA ,\n.NOSDWA  ANOP  ,\n         AIF   (NOT &RCPFRRS(1) AND NOT &ALL OR &RCPFRRS(2)).NOFRRS\n&RCPFRRS(2) SETB 1\n         TITLE 'FUNCTION RECOVERY ROUTINE (FRR) STACK'\n*        IHAFRRS ,\n         IHAFRRS ,\n.NOFRRS  ANOP  ,\n         AIF   (NOT &RCPWSVT(1) AND NOT &ALL OR &RCPWSVT(2)).NOWSAVT\n&RCPWSVT(2) SETB 1\n         TITLE 'GLOBAL WORK/SAVE AREA VECTOR TABLE'\n*        IHAWSAVT CLASS=GLOBAL\n         IHAWSAVT CLASS=GLOBAL\n         TITLE 'LOCAL WORK/SAVE AREA VECTOR TABLE'\n*        IHAWSAVT CLASS=LOCAL\n         IHAWSAVT CLASS=LOCAL\n         TITLE 'CPU WORK/SAVE AREA VECTOR TABLE'\n*        IHAWSAVT CLASS=CPU\n         IHAWSAVT CLASS=CPU\n.NOWSAVT ANOP  ,\n         AIF   (NOT &RCPTSB(1) AND NOT &ALL OR &RCPTSB(2)).NOTSB\n&RCPTSB(2) SETB 1\n         TITLE 'TERMINAL STATUS BLOCK AND EXTENSION'\n*        IKJTSB LIST=YES,EXT=YES\n         IKJTSB LIST=YES,EXT=YES\n.NOTSB   ANOP  ,\n         AIF   (NOT &RCPCPPL(1) AND NOT &ALL OR &RCPCPPL(2)).NOCPPL\n&RCPCPPL(2) SETB 1\n         TITLE 'COMMAND PROCESSOR PARAMETER LIST'\n*        IKJCPPL ,\n         IKJCPPL ,\n.NOCPPL  ANOP  ,\n         AIF   (NOT &RCPPPL(1) AND NOT &ALL OR &RCPPPL(2)).NOPPL\n&RCPPPL(2) SETB 1\n         TITLE 'TSO PARSE PARAMETER LIST'\n*        IKJPPL ,\n         IKJPPL ,\nPPLLEN   EQU   *-PPL\n.NOPPL   ANOP  ,\n         AIF   (NOT &RCPCSPL(1) AND NOT &ALL OR &RCPCSPL(2)).NOCSPL\n&RCPCSPL(2) SETB 1\n         TITLE 'TSO COMMAND SCAN PARAMETER LIST && OUTPUT AREA'\n*        IKJCSPL ,\n         IKJCSPL ,\nCSPLLEN  EQU   *-CSPL\n         SPACE 2\n*        IKJCSOA ,\n         IKJCSOA ,\nCSOALEN  EQU   *-CSOA\n.NOCSPL  ANOP  ,\n         AIF   (NOT &RCPIOPL(1) AND NOT &ALL OR &RCPIOPL(2)).NOIOPL\n&RCPIOPL(2) SETB 1\n         TITLE 'TSO INPUT/OUTPUT PARAMETER LIST'\n*        IKJIOPL ,\n         IKJIOPL ,\nIOPLLEN  EQU   *-IOPL\n.NOIOPL  ANOP  ,\n         AIF   (NOT &RCPALLC(1) AND NOT &ALL OR &RCPALLC(2)).NOALLOC\n&RCPALLC(2) SETB 1\n         TITLE 'DYNAMIC ALLOCATION PARAMETER LIST'\n*        IEFZB4D0 ,\n         IEFZB4D0 ,\n         TITLE 'DYNAMIC ALLOCATION TEXT UNIT KEYS'\n*        IEFZB4D2 ,\n         IEFZB4D2 ,\n         TITLE 'DAIRFAIL PARAMETER LIST'\n.*       IKJEFFDF DFDSECT=YES,DFDSEC2=YES\n         IKJEFFDF DFDSECT=YES,DFDSEC2=YES\n.NOALLOC ANOP  ,\n         AIF   (NOT &RCPCTLG(1) AND NOT &ALL OR &RCPCTLG(2)).NOCTLG\n&RCPCTLG(2) SETB 1\n         TITLE 'ACCESS METHOD DATA STATISTICS BLOCK'\n*        IDAAMDSB ,\n         IDAAMDSB ,\n         TITLE 'CATALOG AUXILIARY WORK AREA'\n*        IGGCAXWA ,\n         IGGCAXWA ,\nCAXLEN   EQU   *-IGGCAXWA\n         TITLE 'CATALOG COMMUNICATION AREA'\n*        IGGCCA ,\n         IGGCCA ,\n         TITLE 'CATALOG COMMUNICATION AREA EXTENSION'\n*        IGGCCX ,\n         IGGCCX ,\n         TITLE 'CATALOG INTEGRITY CONTROL BLOCK'\n*        CICB  ,\n         CICB  ,\n         TITLE 'CATALOG CONTROL VOLUME LIST'\n*        IEZCTGCV ,\n         IEZCTGCV ,\n         TITLE 'CATALOG CAMLST PARAMETER LIST'\n*        IEZCAML ,\n         IEZCAML ,\n         TITLE 'CATALOG FIELD PARAMETER LIST'\n*        IEZCTGFL ,\n         IEZCTGFL ,\n         TITLE 'CATALOG FIELD VECTOR TABLE'\n*        IEZCTGFV ,\n         IEZCTGFV ,\n         TITLE 'CATALOG PARAMETER LIST'\n*        IEZCTGPL ,\nIEZCTGPL DSECT ,\n         IEZCTGPL\n         TITLE 'CATALOG VOLUME LIST'\n*        IEZCTGVL ,\n         IEZCTGVL ,\n         TITLE 'CATALOG WORK AREA'\n*        IEZCTGWA ,\n         IEZCTGWA ,\n         TITLE 'CATALOG MANAGEMENT RETURN CODES'\n*        COPY  #CATRC\n         COPY  #CATRC\n.NOCTLG  ANOP  ,\n         AIF   (NOT &RCPCVAF(1) AND NOT &ALL OR &RCPCVAF(2)).NOCVAF\n&RCPCVAF(2) SETB 1\n         TITLE 'CVAF PARAMETER LIST'\n*        ICVAFPL ,\n         ICVAFPL ,\n         TITLE 'CVAF BUFFER LIST'\n*        ICVAFBFL ,\n         ICVAFBFL ,\n.NOCVAF  ANOP  ,\n         AIF   (NOT &RCPEDT(1) AND NOT &ALL OR &RCPEDT(2)).NOEDT\n&RCPEDT(2) SETB 1\n         TITLE 'ELIGIBLE DEVICES TABLE AND UCB POINTER LIST'\n*        IEFZB421 ,\n         IEFZB421 ,\n         SPACE 3\n*        IEFZB461 ,\n         IEFZB461 ,\n.NOEDT   ANOP  ,\n         AIF   (NOT &RCPZ4UV(1) AND NOT &ALL OR &RCPZ4UV(2)).NOZ4UV\n&RCPZ4UV(2) SETB 1\n         TITLE 'IEFAB4UV/IEFEB4UV PARAMETER LIST'\n*        IEFZB4UV ,\n         IEFZB4UV ,\n.NOZ4UV  ANOP  ,\n         AIF   (NOT &RCPZ502(1) AND NOT &ALL OR &RCPZ502(2)).NOZ502\n&RCPZ502(2) SETB 1\n         TITLE 'SWA BLOCK HEADER'\n*        IEFZB502 ,\n         IEFZB502 ,\nSWPSIZE  EQU   *-ZB502\n.NOZ502  ANOP  ,\n         AIF   (NOT &RCPZ505(1) AND NOT &ALL OR &RCPZ505(2)).NOZ505\n&RCPZ505(2) SETB 1\n         TITLE 'SWA MANAGER EXTERNAL PARAMETER AREA - LOCATE MODE'\n*        IEFZB505 ,\n         IEFZB505 ,\nZB505L   EQU   *-ZB505\n.NOZ505  ANOP  ,\n         AIF   (NOT &RCPZ506(1) AND NOT &ALL OR &RCPZ506(2)).NOZ506\n&RCPZ506(2) SETB 1\n         TITLE 'SWA MANAGER EXTERNAL PARAMETER AREA - MOVE MODE'\n*        IEFZB506 ,\n         IEFZB506 ,\n.NOZ506  ANOP  ,\n         AIF   (NOT &RCPQMPA(1) AND NOT &ALL OR &RCPQMPA(2)).NOQMPA\n&RCPQMPA(2) SETB 1\n         TITLE 'QUEUE MANAGER PARAMETER AREQ (QMPA)'\n*        IEFQMNGR ,\n         IEFQMNGR ,\n.NOQMPA  ANOP  ,\n         AIF   (NOT &RCPJES(1) AND NOT &ALL OR &RCPJES(2)).NOJES\n&RCPJES(2) SETB 1\n         TITLE 'JES CONTROL TABLE'\n*        IEFJESCT ,\n         IEFJESCT ,\n.NOJES   ANOP  ,\n         AIF   (NOT &RCPSSS(1) AND NOT &ALL OR &RCPSSS(2)).NOSSS\n&RCPSSS(2) SETB 1\n         TITLE 'SUBSYSTEM COMMUNICATIONS VECTOR TABLE'\n*        IEFJSCVT ,\n         IEFJSCVT ,\n         TITLE 'SUBSYSTEM VECTOR TABLE'\n*        IEFJSSVT ,\n         IEFJSSVT ,\n         TITLE 'SUBSYSTEM IDENTIFICATION BLOCK'\n*        IEFJSSIB ,\n         IEFJSSIB ,\n         TITLE 'SUBSYSTEM OPTIONS BLOCK'\n*        IEFJSSOB (SO,CS,JS,AL,EN,ET,WT,CM,US,JT,RQ,DM,VS,DA,RR,CF,\n*              SI,CI,AG)\n         IEFJSSOB (SO,CS,JS,AL,EN,ET,WT,CM,US,JT,RQ,DM,VS,DA,RR,CF,    X\n               SI,CI,AG)\n.NOSSS   ANOP  ,\n         AIF   (NOT &RCPRCVT(1) AND NOT &ALL OR &RCPRCVT(2)).NORCVT\n&RCPRCVT(2) SETB 1\n         TITLE 'RACF COMMUNICATIONS VECTOR TABLE'\n*        ICHPRCVT ,\n         ICHPRCVT ,\n.***NOTE: THE FOLLOWING STATEMENTS CAN BE REMOVED ONCE OUR\n.***      ASSEMBLY BASE IS Z/OS 1.5 OR HIGHER\n         AIF   (D'RCVTML2F).RCVT15   SKIP IF Z/OS 1.5 MACLIB\nRCVTML2F EQU   RCVTSINT+L'RCVTSINT,1 DEFINE 1.5 LEVEL FIELD\nRCVTSBYS EQU   X'10'                 DEFINE 1.5 LEVEL FLAG\n.RCVT15  ANOP  ,\n.NORCVT  ANOP  ,\n         AIF   (NOT &RCPLPDAT(1) AND NOT &ALL OR &RCPLPDAT(2)).NOLPDAT\n&RCPLPDAT(2) SETB 1\n         TITLE 'SYSEVENT LPAR CAPACITY DATA PARAMETER LIST'\n*        IRALPDAT\n         IRALPDAT TITLE=NO,LIST=&LIST\n         AIF   (D'LPDATIMGMSULIMIT).LPDAT80 SKIP IF 1.11 MACLIB\nLPDATIMGMSULIMIT EQU LPDATRESERVED,4,C'F' DEFINE 1.11 FIELD\nLPDATSERVICEUNUSEDGROUPCAPACITY EQU LPDATSERVICECAPPEDTIME+4,4,C'F'\n.LPDAT80 ANOP  ,\n         GBLC  &IRALPDAT_INCLUDED    IBM GLOBAL\n&IRALPDAT_INCLUDED SETC 'YES'        SET IBM GLOBAL\n.NOLPDAT ANOP  ,\n         AIF   (NOT &RCPRMCT(1) AND NOT &ALL OR &RCPRMCT(2)).NORMCT\n&RCPRMCT(2) SETB 1\n         TITLE 'SYSTEM RESOURCES MANAGER CONTROL TABLE (RMCT)'\n*        IRARMCT\n         IRARMCT ,\n         AIF   (D'RMCTX3).RMCT30     Skip if RMCTZ ptr defined\nRMCTX3   EQU   RMCTR01,4,C'F'  Define ptr to RMCTZ\n.RMCT30  ANOP  ,\n.NORMCT  ANOP  ,\n         AIF   (NOT &RCPRMCTZ(1) AND NOT &ALL OR &RCPRMCTZ(2)).NORMCTZ\n&RCPRMCTZ(2) SETB 1\n         TITLE 'RMCT EXTENSION 3 (RMCTZ)'\n*        IRARMCTZ\n         IRARMCTZ ,\n.NORMCTZ ANOP  ,\n         AIF   (NOT &RCPDSERV(1) AND NOT &ALL OR &RCPDSERV(2)).NODSERV\n&RCPDSERV(2) SETB 1\n         TITLE 'IAZDSERV'\n*        IAZDSERV\n         IAZDSERV ,\n         AIF   (D'DSRVSZE8).DSRV8\nDSRVSVR8 EQU   8                   Service version number of\n*                                  IAZDSERV - z/OS 2.1\n         ORG   DSERV+X'88'\nDSRVCATC DS    A                   Pointer to CAT/GRPOBJ cache\n*                                  if NOT a live version and\n*                                  cache is requested.\nDSRVSZE8 EQU   *-DSERV             DSERV Version 8 fixed\n*                                  parameter length\n.DSRV8   ANOP  ,\n.NODSERV ANOP  ,\n         TITLE ' '\n&ZPRINT  SETC  '&SAVEZ'        RESTORE IBM PRINT CONTROL\n&ZCBPRINT SETC '&SAVEZCB'      RESTORE OTHER IBM PRINT CONTROL\n         AIF   (&PRT).DSE0500\n         POP   PRINT\n.DSE0500 MEND  ,\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IGG0191N": {"ttr": 513, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x17\\x19\\x0f\\x01\\x17\\x19\\x0f\\x13R\\x00\\xeb\\x00\\xeb\\x00\\x00```````@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2017-07-09T00:00:00", "modifydate": "2017-07-09T13:52:29", "lines": 235, "newlines": 235, "modlines": 0, "user": "-------"}, "text": "X080     TITLE 'IGG0191N - CHECK DSAT FOR APF AUTHORIZATION'\nVER      OPSYN ORG\nREP      OPSYN ORG\n         PRINT ON,GEN,DATA\n         SPACE 1\n*++ ZAP (IGG0191N).\n*NAME    IGG0191N\n*SMP EXPAND IGG0191N(400)\n*IDRDATA X08004A                   /* INSERT MODIFICATION NUMBER */\n         SPACE 1\n***********************************************************************\n*   I G G 0 1 9 1 N           *                                       *\n*******************************                                       *\n*                                                                     *\n*        APF AUTHORIZATION FROM THE DSAT                              *\n*                                                                     *\n*        IF THE DATASET / VOLSER IS NOT IN THE ALT (BUILT DURING      *\n*        NIP FROM 'SYS1.PARMLIB(IEAAPF00)'), WE CHECK TO SEE          *\n*        IF THERE IS AN ENTRY IN THE DSAT                             *\n*                                                                     *\n***********************************************************************\n         EJECT 1\n*---------------------------------------------------------------------*\n*        VERIFY BASE REGISTER                                         *\n*---------------------------------------------------------------------*\n         SPACE 1\nIGG0191N CSECT ,\n         SPACE 1\n         VER   IGG0191N\n         BALR  RBASE,0\n         USING PO,RBASE\n         USING IHADCB,RDCB\n         USING FORCORE,RCORE\n         USING TIOENTRY,RTIOT\n         USING UCBOB,RUCB\nPO       EQU   *\n         B     CPYRGHTA            BRANCH AROUND EYE-CATCHER AND CPYRT\n         DC    CL8'IGG0191N'        MODULE DISTRIBUTION NAME\n         DC    CL8'08/08/86'       DATE COMPILED\n         DC    CL8'HDP2210'         LEVEL OF THIS PRODUCT\n         DC    CL8'UZ84825'     MAINTENANCE - NONE OR PTF NUMBER\n         SPACE 1\n         VER   IGG0191N+X'0000026'\nCPYRGHTA DS    0H\n         L     RDCB,0(RPARC)             GET DCB ADDRESS\n         L     RWBASE,4(RWTGC)           GET WORK AREA\n         EJECT 1\n*---------------------------------------------------------------------*\n*        CHECK IF DATASET IS CAPABLE OF BEING AUTHORIZED              *\n*---------------------------------------------------------------------*\n         SPACE 1\n         VER   IGG0191N+X'0000086'\n         STM   RWK4,RWK5,DXRGSAVE(RWBASE)\n$ZAP0001 L     RWK2,CVTPTR         GET CVT ADDRESS\n         USING CVTMAP,RWK2\nRET#0001 L     RWK2,CVTAUTHL       GET ADDRESS OF ALT\n         DROP  RWK2\n         LTR   RWK2,RWK2           WAS AN ALT BUILT\n         BZ    OBPAM184            NO, BYPASS ALT TESTING\n         SPACE 1\n         VER   IGG0191N+X'0000A2'\n         SR    RWK4,RWK4           PREPARE REG FOR COUNT\n*                                    FOR CLC INST\nOBPAM182 EQU   *\n         IC    RWK4,ALTLNENT(,R14) INIT REG FOR INST TO GET\n*                                    TO THE NEXT ENTRY\n         SPACE 1\n         REP   $ZAP0001\n         B     PATCH1              TEST EXPIRY DATE & RACF BIT\n         EJECT 1\n*---------------------------------------------------------------------*\n*        CHECK IF DATASET IS AUTHORIZED VIA THE DSAT TABLE            *\n*---------------------------------------------------------------------*\n         SPACE 1\n         VER   IGG0191N+X'0000FE'\n$ZAP0002 BCT   RWK3,OBPAM182       RETURN IF MORE ENTRIES\nOBPAM184 L     RWK5,0(RPARC)       GET DCB ADDR\n         DROP  RDCB\n         USING IHADCB,RWK5\n         L     RWK5,DCBDEBAD       GET DEB ADDR\n         DROP  RWK5\n         USING DEBBASIC,RWK5\n         NI    DEBFLGS1,X'FF'-DEBAPFIN  TURN BIT OFF IF NO MORE\n*                                         ENTRIES OR NO ALT\nOBPAM185 EQU   *\n         LM    RWK4,RWK5,DXRGSAVE(RWBASE)\n         DROP  RWK5\n         SPACE 1\n         REP   $ZAP0002\n         B     PATCH2\n         EJECT 1\n*---------------------------------------------------------------------*\n*        PATCH AREA                                                   *\n*---------------------------------------------------------------------*\n         SPACE 1\n         VER   IGG0191N+X'0008A2'\nPATCH    DC    0H'0',50X'00'       PATCH AREA\n         SPACE 1\n*---------------------------------------------------------------------*\n*        PATCH ONE:                                                   *\n*        1) ALLOW APF AUTHORIZATION IF \"TEST\" DIP SPECIFIED           *\n*        2) DISALLOW APF AUTHORIZATION IF EXPDT IS < 90.000           *\n*        3) DISALLOW APF AUTHORIZATION IF NOT RACF PROTECTED          *\n*           - PATCH AREA MUST BE ZAPPED IF (3) IS TO BE ENFORCED      *\n*---------------------------------------------------------------------*\n         SPACE 1\n         REP   PATCH\n         SPACE 1\n         USING DSCB,RDCB\nPATCH1   #@DCCVT RC=RWK2,RD=RWK2,NODCCVT=PATCH1X\n         TM    DCCVMODE,DCCVTEST   CHECK IF \"TEST\" DIP SPECIFIED\n         BO    PATCH1X             B. IF YES\n         DROP  RWK2\n         CLI   DS1EXPDT,90         CHECK IF EXPDT YEAR < 1990\n         BL    OBPAM184            B. IF YES\n         TM    DS1DSIND,DS1IND40   CHECK IF DATASET IS RACF DEFINED\n         NOP   OBPAM184            B. IF NOT\nPATCH1X  L     RWK2,CVTPTR         REPLACE OVERLAID INSTRUCTION\n         B     RET#0001            RETURN\n         EJECT 1\n*---------------------------------------------------------------------*\n*        PATCH TWO:                                                   *\n*        1) CHECK THE DSAT TABLE FOR APF AUTHORIZATION                *\n*---------------------------------------------------------------------*\nPATCH2   BCT   RWK3,OBPAM182       RETURN IF MORE ENTRIES\n         STM   R13,R2,REGSAVE(RWBASE)\n         LA    R13,0(,RBASE)       GET VALID 31-BIT ADDR'S\n         LA    RUCB,0(,RUCB)\n         LA    RTIOT,0(,RTIOT)\n         #MODE 31,R=R15            GET INTO 31 BIT ADDRESSING MODE\n         DROP  RBASE\n         USING PO,R13\n         SLR   RWK5,RWK5           LOAD JFCB ADDRESS\n         ICM   RWK5,B'0111',TIOEJFCB\n         USING INFMJFCB-16,RWK5\n         SLR   RWBASE,RWBASE       LOAD JFCB EXTENSION ADDRESS\n         ICM   RWBASE,B'0111',JFCBEXAD\n         USING JFCBX-16,RWBASE\n         #@DCCVT RC=R14,RD=R14,NODCCVT=PATCH270\n         ICM   R14,B'1111',DC@NONOL\n         BZ    PATCH270            B. IF NO DSAT TABLE EXISTS\n         DROP  R14\n         SPACE 1\n*-------\n*        SEARCH THE DSAT TABLE\n*-------\n         SPACE 1\n         SLR   R15,R15\n         USING DSATE,R14\nPATCH210 ICM   R15,1,DSATDSL       LOAD DSNAME LENGTH\n         BZ    PATCH270            B. IF ZERO (END OF TABLE)\n         CLI   DSATSRT1,DSATCOMP   CHECK IF ENTRY IS FOR COMPLETE DSN\n         BNE   PATCH270            B. IF NOT\n         TM    DSATFLG1,DSATAPF    CHECK IF ENTRY IS FOR APF DSN\n         BNO   PATCH260            B. IF NOT\n         SPACE 1\n         LR    R1,R15\n         BCTR  R1,0                DECREMENT FOR EXECUTE\n         LA    R2,JFCBDSNM         LOAD ADDRESS OF DATASET NAME\n         EXECUTE R1,CLC,DSATDSN(*-*),JFCBDSNM\n         BE    PATCH220            B. IF MATCH FOUND\n         LTR   RWBASE,RWBASE       CHECK FOR JFCB EXTENSION\n         BZ    PATCH260            B. IF NONE\n         EXECUTE R1,CLC,DSATDSN(*-*),JFCBXNAM\n         BNE   PATCH260            B. IF MATCH NOT FOUND\n         LA    R2,JFCBXNAM         LOAD ADDRESS OF DATASET NAME\n         SPACE 1\nPATCH220 CH    R1,=H'43'           CHECK IF DSNAME IS 44 BYTES LONG\n         BE    PATCH230            B. IF YES\n         LA    R2,1(R1,R2)         POINT TO END OF JFCBDSNM/JFCBXNAM\n         CLI   0(R2),C' '          CHECK FOR END OF DSNAME\n         BNE   PATCH260            B. IF NOT\n         SPACE 1\nPATCH230 CLI   DSATVOL,X'00'       CHECK IF VOLSER SPECIFIED IN DSAT\n         BE    PATCH270            B. IF NOT\n         CLC   DSATVOL,UCBVOLI     CHECK FOR COMPLETE VOLSER MATCH\n         BE    PATCH280            B. IF YES\n         SPACE 1\n         LA    R1,UCBVOLI          LOAD ADDRESS OF VOLSER IN UCB\n         LA    R2,DSATVOL          LOAD ADDRESS OF VOLSER IN DSAT\n         LA    RWK3,6              LOAD LENGTH OF VOLSER\nPATCH240 CLI   0(R2),C'*'          CHECK FOR WILDCARD CHARACTER\n         BE    PATCH250            B. IF YES\n         CLC   0(1,R1),0(R2)       CHECK FOR MATCHING CHARACTER\n         BNE   PATCH260            B. IF NOT\nPATCH250 LA    R1,1(,R1)           ADVANCE UCB VOLSER POINTER\n         LA    R2,1(,R2)           ADVANCE DSAT VOLSER POINTER\n         BCT   RWK3,PATCH240       PROCESS ENTIRE VOLSER\n         B     PATCH280            B. IF ALL CHARACTERS MATCH\n         SPACE 1\nPATCH260 LA    R14,DSATFXL(R15,R14)\n         B     PATCH210            PROCESS NEXT ENTRY IN DSAT\n         SPACE 1\n         LTORG ,                   LITERAL POOL\n         EXECUTE ,                 EXECUTE STATEMENTS\n         SPACE 1\n         DROP  R13\n         USING PO,RBASE\n         SPACE 1\nPATCH270 #MODE 24                  RETURN TO 24 BIT ADDRESSING MODE\n         L     RWBASE,4(RWTGC)     RELOAD WORKAREA ADDRESS\n         LM    R13,R2,REGSAVE(RWBASE)\n         B     OBPAM184            DISALLOW APF AUTHORIZATION\n         SPACE 1\nPATCH280 #MODE 24                  RETURN TO 24 BIT ADDRESSING MODE\n         L     RWBASE,4(RWTGC)     RELOAD WORKAREA ADDRESS\n         LM    R13,R2,REGSAVE(RWBASE)\n         B     OBPAM185            ALLOW APF AUTHORIZATION\n         SPACE 1\nPATCHL   EQU   *-PATCH             LENGTH OF PATCH AREA\n         EJECT 1\n*ZAP END\nRWK3     EQU   0\nRDCB     EQU   2\nRBASE    EQU   3\nRWBASE   EQU   4\nRCORE    EQU   4\nRWK4     EQU   5\nRWK5     EQU   6\nRPARC    EQU   7\nRWTGC    EQU   8\nRTIOT    EQU   9\nRUCB     EQU   10\nRWK2     EQU   14\nDXRGSAVE EQU   X'190'\nREGSAVE  EQU   X'198'\nALTLNENT EQU   X'000'\n         #REGS ,\n         #DSATE\nFORCORE  DSECT ,\n         IECDSECT IOB=NO\nJFCBX    DSECT ,\n         IEFJFCBX ,\n         #DSECTS CVT,DCB,DCCVT,DEB,TIOT,UCB,DSCB\n         END   ,\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYSMODS": {"ttr": 257, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00#\\x01\\x11\\x08O\\x01\\x17\\x17\\x8f\\x19C\\x01]\\x01]\\x00\\x00```````@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2011-03-25T00:00:00", "modifydate": "2017-06-27T19:43:23", "lines": 349, "newlines": 349, "modlines": 0, "user": "-------"}, "text": "./ ADD NAME=LM11000  0105-92007-95340-0824-00027-00028-00008-\n++USERMOD(LM11000) .\n++VER(Z038) FMID(HDP3320) PRE(UY62447)\n      /*\n                                  U S E R M O D S\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HDP3320\n             MOD:       IGG0191N\n            LMOD:       IGG0191A\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            USERMOD LIBRARY:       SYS2.USERMODS\n            USERMOD MEMBER(S):     LM11000\n            MAINTENANCE DATE:      01/08/92\n            USERMOD SOURCE:\n\n            USERMOD DESCRIPTION:\n               THIS JOB FIXES THE DUPLICATE APF ENTRIES\n               BY NOT CHECKING VOLSER\n      */ .\n++ZAP(IGG0191N).\n  NAME IGG0191N\n  VER  00C2  D505,E001,A01C        CLC  APFVOL(6),JFCBVOL\n  VER  00C8  4780                  BE   .....\n  REP  00C8  47F0                  B    .....\n  IDRDATA LM11000\n./ ADD NAME=LM11000A 0102-93232-95049-2051-00028-00028-00002-\n++USERMOD(LM11000) .\n++VER(Z038) FMID(HBB4430) PRE(UY92594)\n      /*\n                                  U S E R M O D S\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB4430\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            USERMOD LIBRARY:       SYS2.USERMODS\n            USERMOD MEMBER(S):     LM11000\n            MAINTENANCE DATE:      09/20/93\n            USERMOD SOURCE:\n\n            USERMOD DESCRIPTION:\n               THIS JOB FIXES THE DUPLICATE APF ENTRIES\n               BY NOT CHECKING VOLSER\n      */ .\n++ZAP(CSVAPFPR).\n  NAME CSVAPFP0\n  VER  1BCE  D505,1030,6001        CLC  JFCBVOL(6),APFVOL\n  VER  1BD4  4770                  BNE  .....\n  REP  1BD4  4700                  B    .....\n  IDRDATA LM11000\n./ ADD NAME=LM11000B 0101-95285-95285-0748-00028-00028-00001-\n++USERMOD(LM11000) .\n++VER(Z038) FMID(HBB5520)\n      /*\n                                  U S E R M O D S\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB5520\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            USERMOD LIBRARY:       SYS2.USERMODS\n            USERMOD MEMBER(S):     LM11000\n            MAINTENANCE DATE:      10/11/95\n            USERMOD SOURCE:\n\n            USERMOD DESCRIPTION:\n               THIS JOB FIXES THE DUPLICATE APF ENTRIES\n               BY NOT CHECKING VOLSER\n      */ .\n++ZAP(CSVAPFPR).\n  NAME CSVAPFP0\n  VER  1C36  D505,1030,6001        CLC  JFCBVOL(6),APFVOL\n  VER  1C3C  4770                  BNE  .....\n  REP  1C3C  4700                  B    .....\n  IDRDATA LM11000\n./ ADD NAME=LM11000C 0103-97325-99095-0848-00028-00028-00004-\n++USERMOD(LM11000) .\n++VER(Z038) FMID(HBB6603)\n      /*\n                                  U S E R M O D S\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB6603\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            USERMOD LIBRARY:       SYS2.USERMODS\n            USERMOD MEMBER(S):     LM11000\n            MAINTENANCE DATE:      10/11/95\n            USERMOD SOURCE:\n\n            USERMOD DESCRIPTION:\n               THIS JOB FIXES THE DUPLICATE APF ENTRIES\n               BY NOT CHECKING VOLSER\n      */ .\n++ZAP(CSVAPFPR).\n  NAME CSVAPFP0\n  VER  1D42  D505,1030,8001        CLC  JFCBVOL(6),APFVOL\n  VER  1D48  4770                  BNE  .....\n  REP  1D48  4700                  B    .....\n  IDRDATA LM11000\n./ ADD NAME=LM11000D 0101-00028-00028-1002-00028-00028-00001-\n++USERMOD(LM11000) .\n++VER(Z038) FMID(HBB6606)\n      /*\n                                  U S E R M O D S\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB6607\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            USERMOD LIBRARY:       SYS2.USERMODS\n            USERMOD MEMBER(S):     LM11000\n            MAINTENANCE DATE:      01/28/2000\n            USERMOD SOURCE:\n\n            USERMOD DESCRIPTION:\n               THIS JOB FIXES THE DUPLICATE APF ENTRIES\n               BY NOT CHECKING VOLSER\n      */ .\n++ZAP(CSVAPFPR).\n  NAME CSVAPFP0\n  VER  1D9E  D505,1030,8001        CLC  JFCBVOL(6),APFVOL\n  VER  1DA4  4770                  BNE  .....\n  REP  1DA4  4700                  B    .....\n  IDRDATA LM11000\n./ ADD NAME=LM11000E 0101-01053-05280-1553-00031-00028-00006-\n++USERMOD(LM11000) .\n++VER(Z038) FMID(HBB7703)\n      /*\n                                  U S E R M O D S\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB7703\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            USERMOD LIBRARY:       SYS2.USERMODS\n            USERMOD MEMBER(S):     LM11000\n            MAINTENANCE DATE:      02/22/2001\n            USERMOD SOURCE:\n\n            USERMOD DESCRIPTION:\n               THIS JOB FIXES THE DUPLICATE APF ENTRIES\n               BY NOT CHECKING VOLSER\n      */ .\n++ZAP(CSVAPFPR).\n  NAME CSVAPFP0\n  VER  1D9E  D505,1030,8001        CLC  JFCBVOL(6),APFVOL\n  VER  1DA4  4770                  BNE  .....\n  VER  1E66  D505,1030,8044        CLC  DSNVOL(6),APFVOL (APHT)\n  VER  1E6C  4770\n  REP  1DA4  4700                  B    .....\n  REP  1E6C  4700\n  IDRDATA LM11000\n./ ADD NAME=LM11000F 0103-05229-05280-1232-00057-00032-00030-\n//MOD1100F JOB (1),,NOTIFY=&SYSUID,REGION=110M,\n//         CLASS=X,MSGCLASS=X,MSGLEVEL=(1,1)\n/*JOBPARM  T=99,L=999\n//*------- -----------------------------------------------------------\n//RECV     EXEC PGM=GIMSMP,REGION=100M\n//SMPCSI   DD DISP=SHR,DSN=SMPE.Z14.GLOBAL.CSI\n//SMPOUT   DD SYSOUT=*\n//SMPLOG   DD SYSOUT=*\n//SMPLOGA  DD SYSOUT=*\n//SMPRPT   DD SYSOUT=*\n//SMPLIST  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SMPHOLD  DD DUMMY\n//SMPCNTL  DD *\n  SET BDY (GLOBAL).\n    REJECT  S(LM11000) BYPASS(APPCHK ACCCHK).\n    RESETRC.\n    RECEIVE S(LM11000).\n  SET BDY (MVST100).\n    APPLY       S(LM11000).\n/*\n//SMPPTFIN DD *\n++USERMOD(LM11000) .\n++VER(Z038) FMID(HBB7707)\n      /*  Z/OS 1.4\n                                  U S E R M O D S\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB7707\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            USERMOD LIBRARY:       SYS2.USERMODS\n            USERMOD MEMBER(S):     LM11000\n            MAINTENANCE DATE:      08/14/2005\n            USERMOD SOURCE:\n\n            USERMOD DESCRIPTION:\n               THIS JOB FIXES THE DUPLICATE APF ENTRIES\n               BY NOT CHECKING VOLSER\n\n      001D90   C4784770   C0AE18F9   180947F0   C0C0D505\n      001DA0   10308001   4770C09C   18F91809   47F0C0C0\n\n      */ .\n++ZAP(CSVAPFPR).\n  NAME CSVAPFP0\n  VER  1D9E  D505,1030,8001        CLC  JFCBVOL(6),APFVOL\n  VER  1DA4  4770                  BNE  .....\n  VER  1E66  D505,1030,8044        CLC  DSNVOL(6),APFVOL (APHT)\n  VER  1E6C  4770\n  REP  1DA4  4700                  B    .....\n  REP  1E6C  4700\n  IDRDATA LM11000\n./ ADD NAME=LM11000G 0100-07283-07283-1610-00056-00056-00000-\n//KCY1100G JOB (1),KCYOSHI,NOTIFY=&SYSUID,REGION=110M,\n//         CLASS=X,MSGCLASS=X,MSGLEVEL=(1,1)\n/*JOBPARM  T=99,L=999\n//*------- -----------------------------------------------------------\n//RECV     EXEC PGM=GIMSMP,REGION=100M\n//SMPCSI   DD DISP=SHR,DSN=SMPE.Z17.GLOBAL.CSI\n//SMPOUT   DD SYSOUT=*\n//SMPLOG   DD SYSOUT=*\n//SMPLOGA  DD SYSOUT=*\n//SMPRPT   DD SYSOUT=*\n//SMPLIST  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SMPHOLD  DD DUMMY\n//SMPCNTL  DD *\n  SET BDY (GLOBAL).\n    REJECT  S(LM11000) BYPASS(APPCHK ACCCHK).\n    RESETRC.\n    RECEIVE S(LM11000).\n  SET BDY (MVST100).\n    APPLY CHECK S(LM11000).\n/*\n//SMPPTFIN DD *\n++USERMOD(LM11000) .\n++VER(Z038) FMID(HBB7720)\n      /*  Z/OS 1.7\n                                  U S E R M O D S\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB7720\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            USERMOD LIBRARY:       SYS2.USERMODS\n            USERMOD MEMBER(S):     LM11000\n            MAINTENANCE DATE:      08/14/2005\n            USERMOD SOURCE:\n\n            USERMOD DESCRIPTION:\n               THIS JOB FIXES THE DUPLICATE APF ENTRIES\n               BY NOT CHECKING VOLSER\n\n      001D40   180947F0   C0C0D505   10308001   4770C09C\n\n      */ .\n++ZAP(CSVAPFPR).\n  NAME CSVAPFP0\n  VER  1D46  D505,1030,8001        CLC  JFCBVOL(6),APFVOL\n  VER  1D4C  4770                  BNE  .....\n  VER  1E0E  D505,1030,7044        CLC  DSNVOL(6),APFVOL (APHT)\n  VER  1E14  4770\n  REP  1D4C  4700                  B    .....\n  REP  1E14  4700\n  IDRDATA LM11000\n./ ADD NAME=LM11000H 0100-10042-10042-0917-00056-00056-00000-\n//KCY1100G JOB (1),KCYOSHI,NOTIFY=&SYSUID,REGION=110M,\n//         CLASS=X,MSGCLASS=X,MSGLEVEL=(1,1)\n/*JOBPARM  T=99,L=999\n//*------- -----------------------------------------------------------\n//RECV     EXEC PGM=GIMSMP,REGION=100M\n//SMPCSI   DD DISP=SHR,DSN=SYSC.SMPE.Z19.GLOBAL.CSI\n//SMPOUT   DD SYSOUT=*\n//SMPLOG   DD SYSOUT=*\n//SMPLOGA  DD SYSOUT=*\n//SMPRPT   DD SYSOUT=*\n//SMPLIST  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SMPHOLD  DD DUMMY\n//SMPCNTL  DD *\n  SET BDY (GLOBAL).\n    REJECT  S(LM11000) BYPASS(APPCHK ACCCHK).\n    RESETRC.\n    RECEIVE S(LM11000).\n  SET BDY (MVST100).\n    APPLY CHECK S(LM11000).\n/*\n//SMPPTFIN DD *\n++USERMOD(LM11000) .\n++VER(Z038) FMID(HBB7740)\n      /*  Z/OS 1.9  (WORKS THRU Z/OS 1.13)\n                                  U S E R M O D S\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB7740\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            USERMOD LIBRARY:       SYS2.USERMODS\n            USERMOD MEMBER(S):     LM11000\n            MAINTENANCE DATE:      08/14/2005\n            USERMOD SOURCE:\n\n            USERMOD DESCRIPTION:\n               THIS JOB FIXES THE DUPLICATE APF ENTRIES\n               BY NOT CHECKING VOLSER\n\n      001D40   180947F0   C0C0D505   10308001   4770C09C\n\n      */ .\n++ZAP(CSVAPFPR).\n  NAME CSVAPFP0\n  VER  1D78  D505,1030,8001        CLC  JFCBVOL(6),APFVOL\n  VER  1D7E  4770                  BNE  .....\n  VER  1E40  D505,1030,7044        CLC  DSNVOL(6),APFVOL (APHT)\n  VER  1E46  4770\n  REP  1D7E  4700                  B    .....\n  REP  1E46  4700\n  IDRDATA LM11000\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSMOD00": {"ttr": 261, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x06\\x01\\x17\\x17\\x8f\\x01\\x17\\x17\\x9f\\x00R\\x00\\x05\\x00\\x0f\\x00\\x00```````@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2017-06-27T00:00:00", "modifydate": "2017-06-28T00:52:06", "lines": 5, "newlines": 15, "modlines": 0, "user": "-------"}, "text": "About these sysmods.\n\nThese sysmods are all one system modification, for different levels\nof the operating system.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SYSMOD21": {"ttr": 259, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00)\\x01\\x17\\x17\\x8f\\x01\\x17\\x17\\x8f \\x11\\x00$\\x00 \\x00\\x00```````@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2017-06-27T00:00:00", "modifydate": "2017-06-27T20:11:29", "lines": 36, "newlines": 32, "modlines": 0, "user": "-------"}, "text": "      /*  Z/OS 2.1      HBB7790      HBB7790\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB7790\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            MAINTENANCE DATE:      06/27/2017\n\n            USERMOD DESCRIPTION:\n               THIS MOD IGNORES VOLSER CHECKING WHEN\n               DECIDING THAT A LIBRARY IS APF AUTHORIZED\n\n\n      */ .\n\n//IBMUSERA  JOB (ACCT#),ZAPLPA,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//ZAPAPF  EXEC PGM=AMASPZAP\n//SYSPRINT   DD SYSOUT=*\n//SYSLIB     DD DSN=SYS1.BACKUP.LPALIB,DISP=SHR\n//SYSIN DD *\n  NAME CSVAPFPR CSVAPFP0\n  VER  1D72 D505 1030 7001      CLC   48(6,R1),1(R7)\n  VER  1D78 A774 0006           BRC   7,*+12\n  VER  1E42 D505 1030 5044      CLC   48(6,R1),68(R5)\n  VER  1E48 A774 0006           BRC   7,*+12\n  REP  1D78 A704                (DON'T BRANCH)\n  REP  1E48 A704                (DON'T BRANCH)\n  IDRDATA LM11000\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSMOD22": {"ttr": 265, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x12\\x01\\x17\\x17\\x8f\\x01\\x17\\x18\\x7f\\x18\\x13\\x00$\\x00 \\x00\\x00```````@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2017-06-27T00:00:00", "modifydate": "2017-07-06T18:13:12", "lines": 36, "newlines": 32, "modlines": 0, "user": "-------"}, "text": "      /*  Z/OS 2.2      UA77056      HBB77A0\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB77A0\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            MAINTENANCE DATE:      06/27/2017\n\n            USERMOD DESCRIPTION:\n               THIS MOD IGNORES VOLSER CHECKING WHEN\n               DECIDING THAT A LIBRARY IS APF AUTHORIZED\n\n\n      */ .\n\n//IBMUSERA  JOB (ACCT#),ZAPLPA,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//ZAPAPF  EXEC PGM=AMASPZAP\n//SYSPRINT   DD SYSOUT=*\n//SYSLIB     DD DSN=SYS1.BACKUP.LPALIB,DISP=SHR\n//SYSIN DD *\n  NAME CSVAPFPR CSVAPFP0\n  VER  1FAE D505 1030 7001      CLC   48(6,R1),1(R7)\n  VER  1FB4 A774 0006           BRC   7,*+12\n  VER  207E D505 1030 8044      CLC   48(6,R1),68(R8)\n  VER  2084 A774 0006           BRC   7,*+12\n  REP  1FB4 A704                (DON'T BRANCH)\n  REP  2084 A704                (DON'T BRANCH)\n  IDRDATA LM11000\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSMOD23": {"ttr": 263, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00U\\x01\\x17\\x17\\x8f\\x01\\x17\\x18\\x7f\\x18\\x12\\x00$\\x00 \\x00\\x00```````@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2017-06-27T00:00:00", "modifydate": "2017-07-06T18:12:55", "lines": 36, "newlines": 32, "modlines": 0, "user": "-------"}, "text": "      /*  Z/OS 2.3      HBB77B0      HBB77B0\n\n            COMPONENT:  MVS\n            COMPID:\n            FMID:       HBB77B0\n             MOD:       CSVAPFPR\n            LMOD:       CSVAPFPR\n            DISTRIBUTION LIBRARY:\n\n            TARGET LIBRARY:        SYS1.LPALIB\n            MAINTENANCE DATE:\n\n            USERMOD DESCRIPTION:\n               THIS MOD IGNORES VOLSER CHECKING WHEN\n               DECIDING THAT A LIBRARY IS APF AUTHORIZED\n\n\n      */ .\n\n//IBMUSERA  JOB (ACCT#),ZAPLPA,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//ZAPAPF  EXEC PGM=AMASPZAP\n//SYSPRINT   DD SYSOUT=*\n//SYSLIB     DD DSN=SYS1.BACKUP.LPALIB,DISP=SHR\n//SYSIN DD *\n  NAME CSVAPFPR CSVAPFP0\n  VER  202C D505 1030 7001      CLC   48(6,R1),1(R7)\n  VER  2032 A774 0006           BRC   7,*+12\n  VER  20FC D505 1030 8044      CLC   48(6,R1),68(R8)\n  VER  2102 A774 0006           BRC   7,*+12\n  REP  2032 A704                (DON'T BRANCH)\n  REP  2102 A704                (DON'T BRANCH)\n  IDRDATA LM11000\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTZ23": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x19!o\\x01\\x19!o\\x16\\x17\\x00\\x06\\x00\\x06\\x00\\x00```````@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-08-04T00:00:00", "modifydate": "2019-08-04T16:17:28", "lines": 6, "newlines": 6, "modlines": 0, "user": "-------"}, "text": "*  TEST IF ZAP IS ON Z/OS 2.3\nTSOV LISTMOD CSVAPFPR\nFIND '8100' 100 120\nFIND 'A000'\nTHE TEST IS: +8178 IS A7040006    AND NOT  A7740006\n             +8386 IS A7040006    AND NOT  A7740006\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTZ23A": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x19\\x01\\x19!o\\x01\\x19!o @\\x00\\x1e\\x00\\x19\\x00\\x00```````@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-08-04T00:00:00", "modifydate": "2019-08-04T20:40:19", "lines": 30, "newlines": 25, "modlines": 0, "user": "-------"}, "text": "*  TEST IF ZAP IS ON Z/OS 2.3\nTSOV LISTMOX CSVAPFPR\nTHE TEST IS: +1FF2 IS A7040006    AND NOT  A7740006\n             +20C2 IS A7040006    AND NOT  A7740006\n\n---+---+---+---1---+---+---+---2---+---+---+---3---+---+---+---4\n      x   n   x   j   x   N   E x       x4  N     ####    x4  N    00001FC0\n001B1BABFF94B0A7029010A700D070CAA7011F10AF01D01370A0001F10AF01D0\n0A81E57AFE500074011102740B55015A74088A8A740E55000174068A8A740555\n---+---+---+---1---+---+---+---2---+---+---+---3---+---+---+---4\n  E x   x8  x   x   ; Df     h  x  C hx     x   x8  x   x4 _  xd   00002000\n70CAA700AF00A000A40058C814141817A2FC18A7071FA707AF00A000AF0617A8\n015A7406780478417801E046E7E5288474F32874062F740378047842740D2774\n---+---+---+---1---+---+---+---2---+---+---+---3---+---+---+---4\n    x   x8  x   x4 / &  ;&  ;&  x   ;&  x   ;&  x   ;&  ;&  ;&     00002040\n001AA700AF00A000AF06551055105510A2005511A4035511A600551155115512\n052A74087804784274018004E008E00C7800E000780DE0047800E008E00CE000\n---+---+---+---1---+---+---+---2---+---+---+---3---+---+---+---4\n;&  ;&  ;&         6  i       x4  n   xd  j   xd  N     x   N      00002080\n5512551255121312151F1B8B0058A3AF029081A8029010A801D21081A701D013\nE004E008E00C85D482868290038B00740D500874071102740A5B0408740E5500\n---+---+---+---1---+---+---+---2---+---+---+---3---+---+---+---4\n  #### 6  x4  j   xd  x8  x   x4  N     x   j   x        hx  M h   000020C0\n84A0001F10AF019880A801AF00A000AF00D21081A7009880A700588118A7FD18\n0474068686740A1004740178047841740B5B040874061004740780002874F428\n---+---+---+---1---+---+---+---2---+---+---+---3---+---+---+---4\nx     x   x8  x   q }    V}  @} x   K|L L k&L  -L   Bh; {   {      00002100\nA7001FA700AF00A00091D10F9ED997DBA600D4D7D295D746D749C859C649C441\n74092F7406780478428C087E05000C0078012F3838203820398028E004400010\n---+---+---+---1---+---+---+---2---+---+---+---3---+---+---+---4\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZAP23": {"ttr": 515, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x002\\x01\\x18\\x12?\\x01\\x18\\x19?\\x13V\\x00\\x11\\x00\\x11\\x00\\x00```````@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2018-05-03T00:00:00", "modifydate": "2018-07-12T13:56:32", "lines": 17, "newlines": 17, "modlines": 0, "user": "-------"}, "text": "//IBMUSERA  JOB (ACCT#),ZAPLPA,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//ZAPAPF  EXEC PGM=AMASPZAP\n//SYSPRINT   DD SYSOUT=*\n//SYSLIB     DD DSN=SYS1.LPALIB,DISP=SHR\n//SYSIN DD *\n  NAME CSVAPFPR CSVAPFP0\n  VER  202C D505 1030 7001      CLC   48(6,R1),1(R7)\n  VER  2032 A774 0006           BRC   7,*+12\n  VER  20FC D505 1030 8044      CLC   48(6,R1),68(R8)\n  VER  2102 A774 0006           BRC   7,*+12\n  REP  2032 A704                (DON'T BRANCH)\n  REP  2102 A704                (DON'T BRANCH)\n  IDRDATA LM11000\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZAP23A": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x08\\x01\\x19\\x18\\x1f\\x01\\x19\\x18\\x1f\\x146\\x00\\x11\\x00\\x11\\x00\\x00```````@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2019-06-30T00:00:00", "modifydate": "2019-06-30T14:36:08", "lines": 17, "newlines": 17, "modlines": 0, "user": "-------"}, "text": "//IBMUSERA  JOB (ACCT#),ZAPLPA,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//ZAPAPF  EXEC PGM=AMASPZAP\n//SYSPRINT   DD SYSOUT=*\n//SYSLIB     DD DISP=SHR,DSN=SYS1.LPALIB\n//SYSIN DD *\n  NAME CSVAPFPR CSVAPFP0\n  VER  202C D505 1030 7001      CLC   48(6,R1),1(R7)\n  VER  2032 A774 0006           BRC   7,*+12\n  VER  20FC D505 1030 8044      CLC   48(6,R1),68(R8)\n  VER  2102 A774 0006           BRC   7,*+12\n  REP  2032 A704                (DON'T BRANCH)\n  REP  2102 A704                (DON'T BRANCH)\n  IDRDATA LM11000\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZAP23OFF": {"ttr": 1041, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00R\\x01\\x19&\\x9f\\x01\\x19&\\x9f\\x00'\\x00\\x14\\x00\\x14\\x00\\x00```````@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2019-09-26T00:00:00", "modifydate": "2019-09-26T00:27:52", "lines": 20, "newlines": 20, "modlines": 0, "user": "-------"}, "text": "//IBMUSERA  JOB (ACCT#),ZAPLPA,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*------------------------------------------------------------*//\n//*                 UNDO THE CSVAPFPR ZAP                      *//\n//*------------------------------------------------------------*//\n//ZAPAPF  EXEC PGM=AMASPZAP\n//SYSPRINT   DD SYSOUT=*\n//SYSLIB     DD DSN=SYS1.LPALIB,DISP=SHR\n//SYSIN DD *\n  NAME CSVAPFPR CSVAPFP0\n  VER  202C D505 1030 7001      CLC   48(6,R1),1(R7)\n  VER  2032 A704 0006           BRC   0,*+12       DON'T BRANCH\n  VER  20FC D505 1030 8044      CLC   48(6,R1),68(R8)\n  VER  2102 A704 0006           BRC   0,*+12       DON'T BRANCH\n  REP  2032 A774                (YES BRANCH)\n  REP  2102 A774                (YES BRANCH)\n  IDRDATA LM11000\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT186/CBT.V500.FILE186.PDS/SYSMOD.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT186/CBT.V500.FILE186.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}