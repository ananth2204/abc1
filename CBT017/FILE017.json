{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011049000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE017.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE017.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x01'", "DS1TRBAL": "b'\\xe2\\xfa'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00,\\x00\\x00\\x00,\\x00\\x04\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04]\\x00Y\\x01\\x17\\x03\\x7f\\x01\\x17\\x03\\x7f\\x00V\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf3@@@'", "ispf": {"version": "04.93", "flags": 0, "createdate": "2017-02-06T00:00:00", "modifydate": "2017-02-06T00:56:59", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-493"}, "text": "REGULAR CBT TAPE - VERSION 493    FILE:  017\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT493.FILE017\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 5 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,137 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/06/17    00:56:59    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE017": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04]\\x00R\\x01\\x17\\x03\\x7f\\x01\\x17\\x03\\x7f\\x00V\\x00\\x13\\x00\\x13\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf3@@@'", "ispf": {"version": "04.93", "flags": 0, "createdate": "2017-02-06T00:00:00", "modifydate": "2017-02-06T00:56:52", "lines": 19, "newlines": 19, "modlines": 0, "user": "CBT-493"}, "text": "//***FILE 017 is a copy of the TSO CP called LISTDD from Fireman's  *   FILE 017\n//*           Fund of California.  This CP will list allocation     *   FILE 017\n//*           information sorted by DDNAME.  See the code for       *   FILE 017\n//*           additional information.                               *   FILE 017\n//*                                                                 *   FILE 017\n//*           email:  sbgolob@cbttape.org or sbgolob@attglobal.net  *   FILE 017\n//*                                                                 *   FILE 017\n//*           This program is a slick way to display your TSO       *   FILE 017\n//*           session's file allocations.                           *   FILE 017\n//*                                                                 *   FILE 017\n//*           PUTLINE interface is used, so the output can be       *   FILE 017\n//*           trapped.                                              *   FILE 017\n//*                                                                 *   FILE 017\n//*           The program was fixed to operate if SWA=ABOVE was     *   FILE 017\n//*           set in the JOBCLASS(TSU) of the JES2 parms.  The      *   FILE 017\n//*           old version of the program is called LISTDD00, and    *   FILE 017\n//*           works when SWA is below the line, even for late       *   FILE 017\n//*           level operating systems like z/OS 2.2.                *   FILE 017\n//*                                                                 *   FILE 017\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LISTDD": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00)\\x01\\x16$_\\x01\\x17\\x03\\x7f\\x00#\\x02-\\x02\\r\\x00\\x00\\xe2\\xe6\\xc1\\xc2\\xd6\\xe5\\xc5@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2016-09-01T00:00:00", "modifydate": "2017-02-06T00:23:29", "lines": 557, "newlines": 525, "modlines": 0, "user": "SWABOVE"}, "text": "         TITLE 'LISTDD - LIST DATASETS ALLOCATED TO TSO SESSION'        00001\n         PRINT GEN                                                      00002\n*********************************************************************** 00003\n*TSO DD ALLOCATION LIST -- AN ALTERNATIVE TO THE TSO LISTALC COMMAND  * 00004\n*                                                                     * 00005\n*AUTHOR: ANTHONY M. HECHT                                             * 00006\n*        FIREMAN'S FUND INSURANCE COMPANY -- JULY 1988                * 00007\n*        (415) 492-5026                                               * 00008\n* UPDATED FEB 5 2017 BY CBT-TAPE CONTRIBUTOR TO USE SWAREQ            *\n*********************************************************************** 00009\n* FEATURES: ALLOCATION INFO SORTED BY DDNAME                          * 00010\n*           SPEED GREATLY IMPROVED (OVER LISTALC)                     * 00011\n*           ALLOCATED PDS MEMBERNAMES DISPLAYED                       * 00012\n*           INPUT PARAMETER FLEXIBILITY                               * 00013\n*           OUTPUT WITH PUTLINE FOR &SYSOUTTRAP COMPATIBILITY         * 00014\n*           DATASET VOLSER AND DISPOSTION INFO INCLUDED               * 00015\n*                                                                     * 00016\n* FORMAT:   LISTDD  {DDNAME}                                          * 00017\n*           IF DDNAME SUPPLIED, LISTS DSN INFO FOR THAT DD. WILDCARD  * 00018\n*           CHARACTER '*' PERMITTED AT END OF SUPPLIED DDNAME.  IF    * 00019\n*           NO DDNAME SUPPLIED, EXTRACTS AND SORTS ALL DD'S ALLOCATED * 00020\n*           FOR SESSION.                                              * 00021\n*                                                                     * 00022\n* TSO                                                                 * 00023\n* EXAMPLES: LISTDD SYSPROC                                            * 00024\n*            DISPLAYS INFO FOR ALL DATASETS ALLOCATED TO DDNAME       * 00025\n*            \"SYSPROC\".                                               * 00026\n*           LISTDD ISP*                                               * 00027\n*            DISPLAYS INFO FOR ALL DATASETS ALLOCATED TO ALL DDNAMES  * 00028\n*            BEGINNING WITH THE CHARACTERS \"ISP\", SORTED BY DDNAME.   * 00029\n*           LISTDD                                                    * 00030\n*            DISPLAYS INFO FOR ALL DATASETS ALLOCATED TO ALL DDNAMES, * 00031\n*            SORTED BY DDNAME.                                        * 00032\n*                                                                     * 00033\n*                                                                     * 00034\n* RETURN CODES:   0 -- ALL OKAY                                       * 00035\n*                11_ -- INPUT PARM ERRORS:                            * 00036\n*                113 -- DDNAME > 8 CHARACTERS                         * 00037\n*                130 -- DDNAME NOT FOUND                              * 00038\n*                140 -- TABLE SIZE EXCEEDED                           * 00039\n*                                                                     * 00040\n* REGISTER USAGE:                                                     * 00041\n*                 R9  - ADDRESS LISTDD TABLE                          * 00042\n*                 R10 - ADDRESS TIOT                                  * 00043\n*                 R11 - BRANCH-AND-LINK REGISTER                      * 00044\n*                 R12 - BASE REGISTER                                 * 00045\n*                                                                     * 00046\n* ASSEMBLY/LINK INSTRUCTIONS:                                         * 00047\n*                 ASSEMBLED WITH IEV90 (ASM-H), LINK-EDITED WITH IEWL.* 00048\n*                 NO SPECIAL ATTRIBUTES REQUIRED.                     * 00049\n*                 //SYSLIB DD FOR ASM STEP MUST INCLUDE LIBRARIES     * 00050\n*                 CONTAINING THE FOLLOWING SYSTEM MACROS:             * 00051\n*                 IHAPSA IKJTCB IEFTIOT1 IEFJFCBN IKJCPPL AND IKJIOPL * 00052\n*                                                                     * 00053\n*********************************************************************** 00054\nLISTDD   CSECT 0                                                        00055\nR0       EQU   0                                                        00056\nR1       EQU   1                                                        00057\nR2       EQU   2                                                        00058\nR3       EQU   3                                                        00059\nR4       EQU   4                                                        00060\nR5       EQU   5                                                        00061\nR6       EQU   6                                                        00062\nR7       EQU   7                                                        00063\nR8       EQU   8                                                        00064\nR9       EQU   9                                                        00065\nR10      EQU   10                                                       00066\nR11      EQU   11                                                       00067\nR12      EQU   12                                                       00068\nR13      EQU   13                                                       00069\nR14      EQU   14                                                       00070\nR15      EQU   15                                                       00071\n*                                                                       00072\n         SAVE  (14,12)             SAVE REGISTERS                       00073\n         USING LISTDD,R12          OS                                   00074\n         LR    R12,R15              STAN-                               00075\n         ST    R13,SAVEAREA+4        DARD                               00076\n         LA    R13,SAVEAREA           LINK-                             00077\n         ST    R13,SAVEAREA+8          AGE                              00078\n         B     BEGIN                                                    00079\nSAVEAREA DS    18F                                                      00080\n         DC    C'&SYSDATE AT &SYSTIME FROM LISTDD'                      00081\n         USING SORTLINE,R9             ADDRESS LISTDD TABLE             00082\n         USING TIOENTRY,R10            ADDRESS TIOT                     00083\n         USING INFMJFCB,R5             ADDRESS JFCB                     00084\nBEGIN    DS    0H                                                       00085\n         ST    R1,PARMADDR        SAVE REGISTER 1 FOR AWHILE            00086\n*                                                                       00087\n         BAL   R11,INIT1          INITIALIZATION                        00088\n         CLI   ERRFLAG1,C'Y'        ERRORS FOUND?                       00089\n         BE    EOJ                  YES: QUIT                           00090\n*                                                                       00091\n         BAL   R11,SCAN1          SCAN INPUT REQUEST                    00092\n         CLI   ERRFLAG1,C'Y'        ERRORS FOUND?                       00093\n         BE    EOJ                  YES: QUIT                           00094\n*                                                                       00095\n         BAL   R11,GETM1          ALLOCATE LISTDD TABLE                 00096\n*                                                                       00097\n         BAL   R11,SCTT1          SCAN TASK I/O TABLE FOR DDNAMES       00098\n         CLI   ERRFLAG1,C'Y'        ERRORS FOUND?                       00099\n         BE    FREEMAIN             YES: FREE TABLE AND QUIT            00100\n*                                                                       00101\n         BAL   R11,SORT1          SORT ACQUIRED LISTDD TABLE            00102\n*                                                                       00103\n         BAL   R11,DISP1          DISPLAY RESULTS TABLE                 00104\n*                                                                       00105\nFREEMAIN DS    0H                                                       00106\n         BAL   R11,FREE1          FREE LISTDD TABLE                     00107\n         B     EOJ                                                      00108\n*                                                                       00109\n***************************                                             00110\n** EOJ                   **                                             00111\n***************************                                             00112\nEOJ      DS    0H                                                       00113\n         L     R15,RETCODE                                              00114\n         L     R13,4(,R13)                                              00115\n         RETURN (14,12),RC=(15)                                         00116\n*                                                                       00117\n**********************************************************              00118\n**** PUTLINE CONTROL BLOCKS INITIALIZATION ROUTINE      **              00119\n**********************************************************              00120\n         DS    F                                                        00121\nINIT1    ST    R11,INIT1-4        SAVE RETURN ADDRESS                   00122\n         L     R2,PARMADDR        RETRIEVE PARM ADDRESS                 00123\n         TM    0(R2),X'80'        IS THIS A CMD PROCESSOR?              00124\n         BZ    INIT1$01           YES, CONTINUE                         00125\n         TPUT  ERRMSG00,L'ERRMSG00  NO: SEND ERROR MSG                  00126\n         MVI   ERRFLAG1,C'Y'      SET ERROR FLAG                        00127\n         B     INIT1END           AND GO TO RETURN                      00128\n*                                                                       00129\nINIT1$01 DS    0H                                                       00130\n         MVC   MYIOPL+IOPLUPT-IOPL,CPPLUPT-CPPL(R2)                     00131\n         MVC   MYIOPL+IOPLECT-IOPL,CPPLECT-CPPL(R2)                     00132\n         LA    R1,MYECB                EVENT CONTROL BLOCK ADDRESS      00133\n         ST    R1,MYIOPL+IOPLECB-IOPL                                   00134\n         LA    R1,PUTLISTF             PUTLINE PARAMETER BLOCK ADDRESS  00135\n         ST    R1,MYIOPL+IOPLIOPB-IOPL                                  00136\n*                                                                       00137\nINIT1END L     R11,INIT1-4        GET RETURN ADDRESS                    00138\n         BR    R11                AND RETURN                            00139\n*                                                                       00140\n************************************                                    00141\n**** INPUT BUFFER SCAN ROUTINE    **                                    00142\n************************************                                    00143\n         DS    F                                                        00144\nSCAN1    ST    R11,SCAN1-4        SAVE RETURN ADDRESS                   00145\n         L     R2,PARMADDR        RETRIEVE PARM ADDRESS                 00146\n         L     R2,0(R2)           ADDRESS OF CP INPUT STRING            00147\n         LH    R3,0(R2)           OVERALL LENGTH OF INPUT STRING        00148\n         LH    R4,2(R2)           LENGTH OF COMMAND NAME                00149\n         SR    R3,R4              GET LENGTH OF PARM: SUBTRACT          00150\n         SH    R3,=H'4'             4 (FOR LENGTH OF FIRST FULLWORD)    00151\n         STH   R3,PARMLEN         SAVE PARM LENGTH                      00152\n         BNZ   SCAN1$01           PARM GIVEN: GO CHECK IT               00153\n         MVI   INPUTDD,C'*'       NO PARMS GIVEN: LIST ALL DD'S         00154\n         B     SCAN1END           ALL DONE SCANNING                     00155\n*                                                                       00156\nSCAN1$01 DS    0H                                                       00157\n         CH    R3,=H'8'           DDNAME > 8 CHARACTERS?                00158\n         BNH   SCAN1$02           NO: OK CONTINUE                       00159\n         MVC   RETCODE,=F'113'    SET BAD RETURN CODE                   00160\n         MVC   PLDATA(L'ERRMSG13),ERRMSG13 SEND                         00161\n         BAL   R11,PUTLINE                   MESSAGE                    00162\n         MVI   ERRFLAG1,C'Y'      SET ERROR FLAG                        00163\n         B     SCAN1END           AND GO TO RETURN                      00164\n*                                                                       00165\nSCAN1$02 DS    0H                                                       00166\n         LA    R2,4(R2,R4)        POINT R2 AT START OF REAL PARM        00167\n         BCTR  R3,0               SUBTRACT 1 FOR EXECUTE                00168\n         EX    R3,MVCIT1          MOVE INPUT PARMS TO HOLD AREA         00169\n         OC    INPUTDD,=8C' '     FOLD TO UPPERCASE                     00170\n*                                                                       00171\nSCAN1$03 DS    0H                                                       00172\n         LA    R2,0(R2,R3)        POINT TO LAST CHARACTER               00173\n         CLI   0(R2),C'*'         IS IT THE WILDCARD CHARACTER?         00174\n         BNE   SCAN1END           NO: NON-GENERIC REQUEST; DONE         00175\n         BCTR  R3,0               YES: REQUEST IS GENERIC;              00176\n         STH   R3,COMPLEN          SAVE LENGTH FOR EXECUTED COMPARE     00177\n*                                                                       00178\nSCAN1END L     R11,SCAN1-4        GET RETURN ADDRESS                    00179\n         BR    R11                AND RETURN                            00180\n*                                                                       00181\n***************************                                             00182\n** GETMAIN ROUTINE       **                                             00183\n***************************                                             00184\n         DS    F                                                        00185\nGETM1    ST    R11,GETM1-4          SAVE RETURN ADDRESS                 00186\n         GETMAIN RC,LV=20000          GET AREA FOR TABLE                00187\n         LR    R9,R1                  SAVE TABLE BEGINNING ADDRESS      00188\n         ST    R9,TABLBEG             STORE TABLE BEGINNING ADDRESS     00189\n         A     R1,=F'19999'           CALCULATE ENDING TABLE ADDRESS    00190\n         ST    R1,TABLEND             STORE TABLE ENDING ADDRESS        00191\n         L     R11,GETM1-4          GET RETURN ADDRESS                  00192\n         BR    R11                  AND RETURN                          00193\n*                                                                       00194\n*************************************                                   00195\n** SCAN TASK I/O TABLE ROUTINE     **                                   00196\n*************************************                                   00197\n         DS    F                                                        00198\nSCTT1    ST    R11,SCTT1-4          SAVE RETURN ADDRESS                 00199\n         L     R10,PSATOLD-PSA         CURRENT TCB ADDR                 00200\n         L     R10,TCBTIO-TCB(,R10)    OUR TIOT ADDR                    00201\n         LA    R10,TIOENTRY-TIOT(,R10) 1ST DD SEGMENT IN TIOT           00202\n         SR    R4,R4                   CLEAR FOR WORK (TIO ENT LENGTH)  00203\n         SR    R5,R5                   CLEAR FOR WORK                   00204\n         SR    R6,R6                   CLEAR FOR WORK (SEQ COUNTER)     00205\n*                                                                       00206\nSCTT1$01 DS    0H                                                       00207\n         MVI   SORTLINE,C' '           CLEAR CURRENT TABLE LINE         00208\n         MVC   SORTLINE+1(L'SORTLINE-1),SORTLINE      TO BLANKS         00209\n         LA    R10,TIOENTRY(R4)        POINT TO NEXT TIOT ENTRY         00210\n         CLI   TIOELNGH,0              END OF TIOT?                     00211\n         BE    SCTT1$18                YES: DONE SCANNING TIOT          00212\n         IC    R4,TIOELNGH             LENGTH OF THIS ENTRY             00213\n         CLI   TIOEDDNM,C'A'           DDNAME FIRST CHARACTER VALID?    00214\n         BNL   SCTT1$02                YES: USE AS IS                   00215\n         CLC   TIOEDDNM,=8C' '         ALL BLANKS?                      00216\n         BNE   SCTT1$01                NO: DEALLOCATED; SKIP IT.        00217\n         MVC   SORTDDN,PREVDDN         YES: CONCAT DD'S; USE PREV DDN   00218\n         B     SCTT1$03                GO CHECK FOR DDNAME REQUEST      00219\n*                                                                       00220\nSCTT1$02 DS    0H                                                       00221\n         MVC   SORTDDN,TIOEDDNM        MOVE DDNAME FOR SORT             00222\n         MVC   PREVDDN,SORTDDN         AND SAVE IT FOR POSSIBLE CONCATS 00223\n*                                                                       00224\nSCTT1$03 DS    0H                                                       00225\n         CLI   INPUTDD,C'*'            IS THIS AN 'ALL' REQUEST?        00226\n         BE    SCTT1$04                YES: CONTINUE                    00227\n         LH    R2,COMPLEN              GET COMPARE LENGTH FOR EXECUTE   00228\n         EX    R2,COMPIT1              IS THIS THE DD WE WANT?          00229\n         BE    SCTT1$04                YES: CONTINUE                    00230\n         B     SCTT1$01                NO: CONTINUE LOOKING             00231\n*                                                                       00232\nSCTT1$04 DS    0H                                                       00233\n         STCM  R6,B'0011',SORTTAG      TO KEEP CONCAT SEQUENCE W/ SORT  00234\n         LA    R6,1(,R6)               INCREMENT SEQ COUNTER            00235\n*-       ICM   R5,7,TIOEJFCB           JFCB POINTER              -.SWA. 00236\n*-       LA    R5,16(R5)               FIX IT                    -.SWA. 00237\n         XC    EPA(28),EPA                                        .SWA.\n         LA    R5,EPA                                             .SWA.\n         ST    R5,EPAPTR                                          .SWA.\n         MVC   SWVA-SWAEPA(3,R5),TIOEJFCB                         .SWA.\n         MVC   WSWAREQ(CSWAREQL),CSWAREQ                          .SWA.\n         LA    R15,M31                  PREPARE FOR AMODE 31      .SWA.\n         O     R15,=A(X'80000000')      TO 31-BIT MODE            .SWA.\n         SR    R14,R14                  CLEAR R14                 .SWA.\n         BSM   R14,R15                  DON'T NEED BASSM          .SWA.\nM31      ST    R14,ORIGMODE             SAVE OLD AMODE BIT        .SWA.\n         SWAREQ FCODE=RL,UNAUTH=YES,EPA=EPAPTR,MF=(E,WSWAREQ)     .SWA.\n         L     R5,SWBLKPTR-SWAEPA(,R5)                            .SWA.\n         MVC   COPYJFCB(JFCBLGTH),0(R5)  COPY JFCB BELOW THE LINE .SWA.\n         LA    R14,M24                 PREPARE FOR AMODE 24       .SWA.\n         O     R14,ORIGMODE            SET AMODE BIT              .SWA.\n         BSM   0,R14                                              ,SWA.\nM24      EQU   *                                                  .SWA.\n         LA    R5,COPYJFCB             POINT TO THE COPY          .SWA.\n         MVC   SORTDSN,JFCBDSNM        MOVE DSNAME FOR DISPLAY          00238\n         MVC   SORTVOLS,JFCBVOLS       MOVE VOLS FOR DISPLAY            00239\n         TM    JFCFLGS1,JFCVRDS        VIO DATASET?                     00240\n         BZ    SCTT1$05                NO: CONTINUE CHECKING            00241\n         MVC   SORTVOLS,=CL6'(VIO)'    YES: MOVE LITERAL                00242\n         B     SCTT1$06                CONTINUE                         00243\n*                                                                       00244\nSCTT1$05 DS    0H                                                       00245\n         TM    TIOELINK,TIOTTERM       IS DEVICE A TERMINAL?            00246\n         BZ    SCTT1$06                NO: USE VOLSER AND CONTINUE      00247\n         MVC   SORTVOLS,=C'(TERM)'     YES: MOVE LITERAL                00248\n*                                                                       00249\nSCTT1$06 DS    0H                                                       00250\n         TM    JFCBIND1,JFCPDS         IS ALLOC TO A PDS MEMBER?        00251\n         BZ    SCTT1$11                NO: GO GET DISPOSITION           00252\n         LA    R2,SORTDSN              FIND                             00253\n         LA    R3,45                    END                             00254\n*                                                                       00255\nSCTT1$07 DS    0H                        OF                             00256\n         CLI   0(R2),C' '                 DSN                           00257\n         BE    SCTT1$08                    FIELD                        00258\n         LA    R2,1(,R2)                    TO                          00259\n         BCT   R3,SCTT1$07                   PLACE                      00260\n*                                                                       00261\nSCTT1$08 DS    0H                             MEMBER NAME               00262\n         MVI   0(R2),C'('              MOVE LITERAL                     00263\n         MVC   1(8,R2),JFCBELNM        MOVE MEMBER NAME                 00264\n         LA    R3,9                    FIND                             00265\n*                                                                       00266\nSCTT1$09 DS    0H                       END                             00267\n         CLI   0(R2),C' '                OF                             00268\n         BE    SCTT1$10                   MEMBER                        00269\n         LA    R2,1(,R2)                   NAME                         00270\n         BCT   R3,SCTT1$09                  TO                          00271\n*                                                                       00272\nSCTT1$10 DS    0H                            PLACE ')'                  00273\n         MVI   0(R2),C')'              MOVE LITERAL                     00274\n*                                                                       00275\nSCTT1$11 DS    0H                                                       00276\n         TM    JFCBIND2,JFCTEMP        TEMP DATASET?                    00277\n         BZ    SCTT1$12                NO: KEEP TRYING                  00278\n         MVC   SORTDISP,=C'TMP'        YES: MOVE LITERAL                00279\n         B     SCTT1$17                AND CONTINUE                     00280\n*                                                                       00281\nSCTT1$12 DS    0H                                                       00282\n         TM    JFCBIND2,JFCSHARE       SHR DATASET?                     00283\n         BZ    SCTT1$13                NO: KEEP TRYING                  00284\n         MVC   SORTDISP,=C'SHR'        YES: MOVE LITERAL                00285\n         B     SCTT1$17                AND CONTINUE                     00286\n*                                                                       00287\nSCTT1$13 DS    0H                                                       00288\n         TM    JFCBIND2,JFCOLD         OLD DATASET?                     00289\n         BZ    SCTT1$14                NO: KEEP TRYING                  00290\n         MVC   SORTDISP,=C'OLD'        YES: MOVE LITERAL                00291\n         B     SCTT1$17                AND CONTINUE                     00292\n*                                                                       00293\nSCTT1$14 DS    0H                                                       00294\n         TM    JFCBIND2,JFCMOD         MOD DATASET?                     00295\n         BZ    SCTT1$15                NO: KEEP TRYING                  00296\n         MVC   SORTDISP,=C'MOD'        YES: MOVE LITERAL                00297\n         B     SCTT1$17                AND CONTINUE                     00298\n*                                                                       00299\nSCTT1$15 DS    0H                                                       00300\n         TM    JFCBIND2,JFCNEW         NEW DATASET?                     00301\n         BZ    SCTT1$16                NO: LEAVE BLANK                  00302\n         MVC   SORTDISP,=C'NEW'        YES: MOVE LITERAL                00303\n         B     SCTT1$17                AND CONTINUE                     00304\n*                                                                       00305\nSCTT1$16 DS    0H                                                       00306\n         MVC   SORTDISP,=C'   '        INSERT BLANKS                    00307\n*                                                                       00308\nSCTT1$17 DS    0H                                                       00309\n         CLI   ERRFLAG2,C'E'           TABLE SIZE ALREADY EXCEEDED?     00310\n         BE    SCTT1$01                YES: JUST KEEP COUNTING          00311\n         LA    R9,80(,R9)              BUMP TABLE POINTER               00312\n         C     R9,TABLEND              PAST TABLE END?                  00313\n         BNH   SCTT1$01                NO: ITERATE                      00314\n         MVI   ERRFLAG2,C'E'           YES: FLAG TABLE SIZE EXCEEDED    00315\n         B     SCTT1$01                BUT CONTINUE COUNTING            00316\n*                                                                       00317\nSCTT1$18 DS    0H                                                       00318\n         CLI   ERRFLAG2,C'E'           TABLE SIZE EXCEEDED?             00319\n         BNE   SCTT1$19                NO: CONTINUE                     00320\n         MVC   PLDATA(ERR40LEN),ERRMSG40  NOTIFY USER,                  00321\n         BAL   R11,PUTLINE                 TABLE SIZE EXCEEDED          00322\n         MVC   RETCODE,=F'140'         SET BAD RETURN CODE              00323\n         MVI   ERRFLAG1,C'Y'           SET ERROR FLAG                   00324\n         B     SCTT1END                DONE PROCESSING                  00325\n*                                                                       00326\nSCTT1$19 DS    0H                                                       00327\n         STH   R6,DSNSAVE              SAVE NUMBER OF DATASETS          00328\n         LTR   R6,R6                   DID WE FIND ANY?                 00329\n         BNZ   SCTT1END                YES: DONE                        00330\n         MVC   ERR30DDN,INPUTDD        NO: FILL IN ERROR PARAMETER      00331\n         LH    R10,PARMLEN             GET LENGTH OF PARM               00332\n         LA    R4,ERR30DDN(R10)         TO BUILD ERROR MSG              00333\n         MVC   1(L'ERRMSG31,R4),ERRMSG31 AND JUSTIFY                    00334\n         MVC   PLDATA(ERR30LEN),ERRMSG30  SEND                          00335\n         BAL   R11,PUTLINE                 MSG                          00336\n         MVC   RETCODE,=F'130'    SET BAD RETURN CODE                   00337\n         MVI   ERRFLAG1,C'Y'           SET ERROR FLAG                   00338\n*                                                                       00339\nSCTT1END L     R11,SCTT1-4          GET RETURN ADDRESS                  00340\n         BR    R11                  AND RETURN                          00341\n*                                                                       00342\n****************************************************                    00343\n** SORT ROUTINE FOR ACQUIRED LISTDD TABLE         **                    00344\n****************************************************                    00345\n         DS    F                                                        00346\nSORT1    ST    R11,SORT1-4          SAVE RETURN ADDRESS                 00347\n         L     R9,TABLBEG              RESET TO BEGINNING OF TABLE      00348\n         LH    R6,DSNSAVE              GET NUMBER OF DATASETS           00349\n         BCTR  R6,0                    R6=# OF SORT SCANS REMAINING     00350\n         LTR   R6,R6                   ONLY 1 RECORD?                   00351\n         BZ    SORT1END                YES: DON'T BOTHER TO SORT        00352\nSORT1$01 LR    R7,R6                   R7=# OF COMPARES FOR THIS SCAN   00353\n         LA    R8,80(,R9)              POINT TO TEST RECORD FOR COMPARE 00354\n*                                                                       00355\nSORT1$02 DS    0H                                                       00356\n         CLC   0(L'SORTKEY,R8),SORTKEY IS THIS RECORD < CURRENT?        00357\n         BNL   SORT1$03                NO: TRY NEXT RECORD              00358\n         XC    SORTLINE,0(R8)  ----+                                    00359\n         XC    0(80,R8),SORTLINE   +-- YES: SWAP 'EM                    00360\n         XC    SORTLINE,0(R8)  ----+                                    00361\n*                                                                       00362\nSORT1$03 LA    R8,80(,R8)              BUMP COMPARE POINTER             00363\n         BCT   R7,SORT1$02             ITERATE R7 TIMES                 00364\n         LA    R9,80(,R9)              BUMP BASE POINTER                00365\n         BCT   R6,SORT1$01             ITERATE R6 TIMES                 00366\n*                                                                       00367\nSORT1END L     R11,SORT1-4          GET RETURN ADDRESS                  00368\n         BR    R11                  AND RETURN                          00369\n*                                                                       00370\n******************************                                          00371\n** TABLE DISPLAY ROUTINE    **                                          00372\n******************************                                          00373\n         DS    F                                                        00374\nDISP1    ST    R11,DISP1-4          SAVE RETURN ADDRESS                 00375\n         LH    R6,DSNSAVE              RETRIEVE NUMBER OF DATASETS      00376\n         CVD   R6,DBLWORK              CONVERT NUMBER                   00377\n         UNPK  DSNCOUNT,DBLWORK+6(2)    OF DATASETS                     00378\n         OI    DSNCOUNT+2,X'F0'          TO DISPLAY FORMAT              00379\n         CLI   DSNCOUNT,C'0'           ONLY TWO SIGNIFICANT DIGITS?     00380\n         BNE   DISP1$01                NO: GO DISPLAY LINE              00381\n         MVC   HDR1(HDR1LEN-1),HDR1+1  YES: SHIFT AND DESTROY           00382\n         CLI   DSNCOUNT,C'0'           ONLY ONE SIGNIFICANT DIGIT??     00383\n         BNE   DISP1$01                NO: GO DISPLAY LINE              00384\n         MVC   HDR1(HDR1LEN-1),HDR1+1  YES: SHIFT AND DESTROY           00385\n*                                                                       00386\nDISP1$01 DS    0H                                                       00387\n         MVC   PLDATA(HDR1LEN),HDR1    AND DISPLAY                      00388\n         BAL   R11,PUTLINE              MSG LINE                        00389\n*                                                                       00390\nDISP1$02 DS    0H                                                       00391\n         MVI   PLDATA,C' '             DISPLAY                          00392\n         BAL   R11,PUTLINE              BLANK LINE                      00393\n         MVC   PLDATA(HDR2LEN),HDR2    DISPLAY                          00394\n         BAL   R11,PUTLINE              MSG LINE                        00395\n         MVC   PLDATA(HDR3LEN),HDR3    DISPLAY                          00396\n         BAL   R11,PUTLINE              MSG LINE                        00397\n*                                                                       00398\n         L     R9,TABLBEG              START OF TABLE                   00399\n         MVC   PREVDDN,=8C' '          INITIALIZE DDNAME HOLD AREA      00400\nDISP1$03 DS    0H                                                       00401\n         CLC   SORTDDN,PREVDDN         SAME DDNAME?                     00402\n         BNE   DISP1$04                NO: USE IT                       00403\n         MVC   SORTDDN,=8C' '          YES: BLANK IT OUT                00404\n         B     DISP1$05                AND GO DISPLAY                   00405\nDISP1$04 DS    0H                                                       00406\n         MVC   PREVDDN,SORTDDN         SET NEW DDNAME HOLD AREA         00407\nDISP1$05 DS    0H                                                       00408\n         MVC   SORTTAG,=C'  '          ERASE TAG CHARACTER              00409\n         MVC   SORTLTRL,=C'DD'         FILL IN 'DD'                     00410\n         MVC   PLDATA(L'SORTLINE-1),SORTLINE  DISPLAY                   00411\n         BAL   R11,PUTLINE                     DATALINE                 00412\n         LA    R9,80(,R9)              BUMP BASE POINTER                00413\n         BCT   R6,DISP1$03             ITERATE                          00414\nDISP1END L     R11,DISP1-4          GET RETURN ADDRESS                  00415\n         BR    R11                  AND RETURN                          00416\n*                                                                       00417\n***************************                                             00418\n** FREEMAIN ROUTINE      **                                             00419\n***************************                                             00420\n         DS    F                                                        00421\nFREE1    ST    R11,FREE1-4          SAVE RETURN ADDRESS                 00422\n         L     R1,TABLBEG                                               00423\n         FREEMAIN RC,LV=20000,A=(R1)                                    00424\n         L     R11,FREE1-4          GET RETURN ADDRESS                  00425\n         BR    R11                  AND RETURN                          00426\n*                                                                       00427\n***************************                                             00428\n** PUTLINE ROUTINE       **                                             00429\n***************************                                             00430\n         DS    F                                                        00431\nPUTLINE  ST    R11,PUTLINE-4        SAVE RETURN ADDRESS                 00432\n         PUTLINE OUTPUT=(PLLINE,,,DATA),MF=(E,MYIOPL)                   00433\n         MVI   PLDATA,C' '                 BLANK OUT                    00434\n         MVC   PLDATA+1(L'PLDATA-1),PLDATA   DATA LINE                  00435\n         L     R11,PUTLINE-4        GET RETURN ADDRESS                  00436\n         BR    R11                  AND RETURN                          00437\n*                                                                       00438\n***************************                                             00439\n** DATA AREAS            **                                             00440\n***************************                                             00441\nMVCIT1   MVC   INPUTDD(0),0(R2)        EXECUTED                         00442\nCOMPIT1  CLC   SORTDDN(0),INPUTDD      EXECUTED                         00443\nPUTLISTF PUTLINE MF=L                                                   00444\n*                                                                       00445\nDBLWORK  DS    D                                                        00446\nTABLBEG  DS    F                                                        00447\nTABLEND  DS    F                                                        00448\nPARMADDR DS    F                                                        00449\nRETCODE  DC    F'0'                                                     00450\nMYECB    DC    F'0'       FOR PUTLINE                                   00451\nMYIOPL   DC    4F'0'      FOR PUTLINE                                   00452\nPARMLEN  DC    H'0'                                                     00453\nCOMPLEN  DC    H'7'       ASSUME NON-GENERIC (IE, FULL-LENGTH) REQUEST  00454\nDSNSAVE  DC    H'0'                                                     00455\nINPUTDD  DC    CL8' '                                                   00456\nPREVDDN  DS    CL8' '                                                   00457\nERRFLAG1 DC    C'N'                                                     00458\nERRFLAG2 DC    C'N'                                                     00459\nCSWAREQ  SWAREQ EPA=0,MF=L                                        .SWA.\nCSWAREQL EQU   *-CSWAREQ                                          .SWA.\nWSWAREQ  DS    0F,(CSWAREQL)X                                     .SWA.\nEPAPTR   DS    F                                                  .SWA.\nEPA      DS    7F                                                 .SWA.\nORIGMODE DS    F                                                  .SWA.\nCOPYJFCB DS    0F,(JFCBLGTH)X                                     .SWA.\n*                                                                       00460\nPLLINE   DC    H'84',H'0'   DATA LENGTH + 4 FOR THESE 2 HALFWORDS       00461\nPLDATA   DC    CL80' '                                                  00462\n*                                                                       00463\nHDR1     DS    0C                                                       00464\nDSNCOUNT DS    PL3                                                      00465\n         DC    C' DATASET(S) CURRENTLY ALLOCATED. '                     00466\nHDR1LEN  EQU   *-HDR1                                                   00467\nHDR2     DS    0C                                                       00468\n         DC    CL7'DDNAME:'                                             00469\n         DC    5C' '                                                    00470\n         DC    CL13'DATASET NAME:'                                      00471\n         DC    42C' '                                                   00472\n         DC    CL11'VOLSR: DSP:'                                        00473\nHDR2LEN  EQU   *-HDR2                                                   00474\nHDR3     DS    0C                                                       00475\n         DC    CL7'------ '                                             00476\n         DC    5C' '                                                    00477\n         DC    CL13'------- ---- '                                      00478\n         DC    42C' '                                                   00479\n         DC    CL11'-----  --- '                                        00480\nHDR3LEN  EQU   *-HDR3                                                   00481\n*                                                                       00482\nERRMSG00 DC    C'ERROR: LISTDD MUST BE INVOKED AS A TSO CMD PROCESSOR.' 00483\nERRMSG13 DC    C'DDNAME MUST BE 8 CHARACTERS OR LESS IN LENGTH.'        00484\nERRMSG30 DC    C'DDNAME '                                               00485\nERR30DDN DC    CL8' '                                                   00486\nERR30LN1 EQU   *-ERRMSG30                                               00487\n         DC    CL30' '                                                  00488\nERRMSG31 DC    C'IS NOT CURRENTLY ALLOCATED.'                           00489\nERR31LN1 EQU   *-ERRMSG31                                               00490\nERR30LEN EQU   ERR30LN1+ERR31LN1+1                                      00491\nERRMSG40 DC    C'UNFORTUNATELY, THIS IS TOO MANY FOR LISTDD TO SORT '   00492\n         DC    C'AND DISPLAY.  TERMINATING.'                            00493\nERR40LEN EQU   *-ERRMSG40                                               00494\n         DSECT                                                          00495\nSORTLINE DS    0CL80                                                    00496\nSORTKEY  DS    0CL10                                                    00497\nSORTDDN  DS    CL8                                                      00498\nSORTTAG  DS    XL2                                                      00499\n         ORG   SORTTAG+1                                                00500\nSORTLTRL DS    CL2                                                      00501\n         DS    CL1                                                      00502\nSORTDSN  DS    CL44                                                     00503\n         DS    CL11     SPACE FOR MEMBER NAME IF FOUND                  00504\nSORTVOLS DS    CL6        (VOLUME LIST TRUNCATED TO 1 VOLSER)           00505\n         DS    CL1                                                      00506\nSORTDISP DS    CL3                                                      00507\n         ORG   SORTLINE+80                                              00508\n         EJECT                                                          00509\n*                                                                       00510\n*  MVS MAPPING MACROS                                                   00511\n*                                                                       00512\n         CSECT                                                          00513\n         PRINT NOGEN\n         IHAPSA                                                         00514\n         IKJTCB                                                         00515\nTIOT     DSECT                                                          00516\n         IEFTIOT1                                                       00517\nJFCB     DSECT                                                          00518\n         IEFJFCBN                                                       00519\n         IKJCPPL                                                        00520\n         IKJIOPL                                                        00521\n*              CREATE ZB505 DSECT FOR SWAREQ\n         IEFZB505 LOCEPAX=YES\n*        CVT   DSECT=YES\nCVTPTR   EQU   16\nCVTFIX   DSECT\nCVTMAP   EQU   *\nCVTJESCT EQU   CVTMAP+X'128'\n         IEFJESCT\n         END   LISTDD                                                   00522\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LISTDD$": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x12\\x01\\x16$_\\x01\\x16$_\\x12\\x13\\x00\\x1b\\x00\\x1b\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2016-09-01T00:00:00", "modifydate": "2016-09-01T12:13:12", "lines": 27, "newlines": 27, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,RLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT493.FILE017(LISTDD)\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=(OLD,PASS),DSN=&&TEMP\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  *\n INCLUDE SYSLIB\n ORDER   LISTDD\n SETSSI  CB493017\n ENTRY   LISTDD\n NAME    LISTDD(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTDD00": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00R\\x00\\x88%\\x8f\\x00\\x88%\\x8f\\x12\\x12\\x02\\n\\x02\\r\\x00\\x00\\xe2\\xe6\\xc1\\xc2\\xc5\\xd3\\xd6@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1988-09-14T00:00:00", "modifydate": "1988-09-14T12:12:52", "lines": 522, "newlines": 525, "modlines": 0, "user": "SWABELO"}, "text": "         TITLE 'LISTDD - LIST DATASETS ALLOCATED TO TSO SESSION'        00001\n         PRINT GEN                                                      00002\n*********************************************************************** 00003\n*TSO DD ALLOCATION LIST -- AN ALTERNATIVE TO THE TSO LISTALC COMMAND  * 00004\n*                                                                     * 00005\n*AUTHOR: ANTHONY M. HECHT                                             * 00006\n*        FIREMAN'S FUND INSURANCE COMPANY -- JULY 1988                * 00007\n*        (415) 492-5026                                               * 00008\n*********************************************************************** 00009\n* FEATURES: ALLOCATION INFO SORTED BY DDNAME                          * 00010\n*           SPEED GREATLY IMPROVED (OVER LISTALC)                     * 00011\n*           ALLOCATED PDS MEMBERNAMES DISPLAYED                       * 00012\n*           INPUT PARAMETER FLEXIBILITY                               * 00013\n*           OUTPUT WITH PUTLINE FOR &SYSOUTTRAP COMPATIBILITY         * 00014\n*           DATASET VOLSER AND DISPOSTION INFO INCLUDED               * 00015\n*                                                                     * 00016\n* FORMAT:   LISTDD  {DDNAME}                                          * 00017\n*           IF DDNAME SUPPLIED, LISTS DSN INFO FOR THAT DD. WILDCARD  * 00018\n*           CHARACTER '*' PERMITTED AT END OF SUPPLIED DDNAME.  IF    * 00019\n*           NO DDNAME SUPPLIED, EXTRACTS AND SORTS ALL DD'S ALLOCATED * 00020\n*           FOR SESSION.                                              * 00021\n*                                                                     * 00022\n* TSO                                                                 * 00023\n* EXAMPLES: LISTDD SYSPROC                                            * 00024\n*            DISPLAYS INFO FOR ALL DATASETS ALLOCATED TO DDNAME       * 00025\n*            \"SYSPROC\".                                               * 00026\n*           LISTDD ISP*                                               * 00027\n*            DISPLAYS INFO FOR ALL DATASETS ALLOCATED TO ALL DDNAMES  * 00028\n*            BEGINNING WITH THE CHARACTERS \"ISP\", SORTED BY DDNAME.   * 00029\n*           LISTDD                                                    * 00030\n*            DISPLAYS INFO FOR ALL DATASETS ALLOCATED TO ALL DDNAMES, * 00031\n*            SORTED BY DDNAME.                                        * 00032\n*                                                                     * 00033\n*                                                                     * 00034\n* RETURN CODES:   0 -- ALL OKAY                                       * 00035\n*                11_ -- INPUT PARM ERRORS:                            * 00036\n*                  113 -- DDNAME > 8 CHARACTERS                       * 00037\n*                130 -- DDNAME NOT FOUND                              * 00038\n*                140 -- TABLE SIZE EXCEEDED                           * 00039\n*                                                                     * 00040\n* REGISTER USAGE:                                                     * 00041\n*                 R9  - ADDRESS LISTDD TABLE                          * 00042\n*                 R10 - ADDRESS TIOT                                  * 00043\n*                 R11 - BRANCH-AND-LINK REGISTER                      * 00044\n*                 R12 - BASE REGISTER                                 * 00045\n*                                                                     * 00046\n* ASSEMBLY/LINK INSTRUCTIONS:                                         * 00047\n*                 ASSEMBLED WITH IEV90 (ASM-H), LINK-EDITED WITH IEWL.* 00048\n*                 NO SPECIAL ATTRIBUTES REQUIRED.                     * 00049\n*                 //SYSLIB DD FOR ASM STEP MUST INCLUDE LIBRARIES     * 00050\n*                 CONTAINING THE FOLLOWING SYSTEM MACROS:             * 00051\n*                 IHAPSA IKJTCB IEFTIOT1 IEFJFCBN IKJCPPL AND IKJIOPL * 00052\n*                                                                     * 00053\n*********************************************************************** 00054\nLISTDD   CSECT 0                                                        00055\nR0       EQU   0                                                        00056\nR1       EQU   1                                                        00057\nR2       EQU   2                                                        00058\nR3       EQU   3                                                        00059\nR4       EQU   4                                                        00060\nR5       EQU   5                                                        00061\nR6       EQU   6                                                        00062\nR7       EQU   7                                                        00063\nR8       EQU   8                                                        00064\nR9       EQU   9                                                        00065\nR10      EQU   10                                                       00066\nR11      EQU   11                                                       00067\nR12      EQU   12                                                       00068\nR13      EQU   13                                                       00069\nR14      EQU   14                                                       00070\nR15      EQU   15                                                       00071\n*                                                                       00072\n         SAVE  (14,12)             SAVE REGISTERS                       00073\n         USING LISTDD,R12          OS                                   00074\n         LR    R12,R15              STAN-                               00075\n         ST    R13,SAVEAREA+4        DARD                               00076\n         LA    R13,SAVEAREA           LINK-                             00077\n         ST    R13,SAVEAREA+8          AGE                              00078\n         B     BEGIN                                                    00079\nSAVEAREA DS    18F                                                      00080\n         DC    C'&SYSDATE AT &SYSTIME FROM LISTDD'                      00081\n         USING SORTLINE,R9             ADDRESS LISTDD TABLE             00082\n         USING TIOENTRY,R10            ADDRESS TIOT                     00083\n         USING INFMJFCB,R5             ADDRESS JFCB                     00084\nBEGIN    DS    0H                                                       00085\n         ST    R1,PARMADDR        SAVE REGISTER 1 FOR AWHILE            00086\n*                                                                       00087\n         BAL   R11,INIT1          INITIALIZATION                        00088\n         CLI   ERRFLAG1,C'Y'        ERRORS FOUND?                       00089\n         BE    EOJ                  YES: QUIT                           00090\n*                                                                       00091\n         BAL   R11,SCAN1          SCAN INPUT REQUEST                    00092\n         CLI   ERRFLAG1,C'Y'        ERRORS FOUND?                       00093\n         BE    EOJ                  YES: QUIT                           00094\n*                                                                       00095\n         BAL   R11,GETM1          ALLOCATE LISTDD TABLE                 00096\n*                                                                       00097\n         BAL   R11,SCTT1          SCAN TASK I/O TABLE FOR DDNAMES       00098\n         CLI   ERRFLAG1,C'Y'        ERRORS FOUND?                       00099\n         BE    FREEMAIN             YES: FREE TABLE AND QUIT            00100\n*                                                                       00101\n         BAL   R11,SORT1          SORT ACQUIRED LISTDD TABLE            00102\n*                                                                       00103\n         BAL   R11,DISP1          DISPLAY RESULTS TABLE                 00104\n*                                                                       00105\nFREEMAIN DS    0H                                                       00106\n         BAL   R11,FREE1          FREE LISTDD TABLE                     00107\n         B     EOJ                                                      00108\n*                                                                       00109\n***************************                                             00110\n** EOJ                   **                                             00111\n***************************                                             00112\nEOJ      DS    0H                                                       00113\n         L     R15,RETCODE                                              00114\n         L     R13,4(,R13)                                              00115\n         RETURN (14,12),RC=(15)                                         00116\n*                                                                       00117\n**********************************************************              00118\n**** PUTLINE CONTROL BLOCKS INITIALIZATION ROUTINE      **              00119\n**********************************************************              00120\n         DS    F                                                        00121\nINIT1    ST    R11,INIT1-4        SAVE RETURN ADDRESS                   00122\n         L     R2,PARMADDR        RETRIEVE PARM ADDRESS                 00123\n         TM    0(R2),X'80'        IS THIS A CMD PROCESSOR?              00124\n         BZ    INIT1$01           YES, CONTINUE                         00125\n         TPUT  ERRMSG00,L'ERRMSG00  NO: SEND ERROR MSG                  00126\n         MVI   ERRFLAG1,C'Y'      SET ERROR FLAG                        00127\n         B     INIT1END           AND GO TO RETURN                      00128\n*                                                                       00129\nINIT1$01 DS    0H                                                       00130\n         MVC   MYIOPL+IOPLUPT-IOPL,CPPLUPT-CPPL(R2)                     00131\n         MVC   MYIOPL+IOPLECT-IOPL,CPPLECT-CPPL(R2)                     00132\n         LA    R1,MYECB                EVENT CONTROL BLOCK ADDRESS      00133\n         ST    R1,MYIOPL+IOPLECB-IOPL                                   00134\n         LA    R1,PUTLISTF             PUTLINE PARAMETER BLOCK ADDRESS  00135\n         ST    R1,MYIOPL+IOPLIOPB-IOPL                                  00136\n*                                                                       00137\nINIT1END L     R11,INIT1-4        GET RETURN ADDRESS                    00138\n         BR    R11                AND RETURN                            00139\n*                                                                       00140\n************************************                                    00141\n**** INPUT BUFFER SCAN ROUTINE    **                                    00142\n************************************                                    00143\n         DS    F                                                        00144\nSCAN1    ST    R11,SCAN1-4        SAVE RETURN ADDRESS                   00145\n         L     R2,PARMADDR        RETRIEVE PARM ADDRESS                 00146\n         L     R2,0(R2)           ADDRESS OF CP INPUT STRING            00147\n         LH    R3,0(R2)           OVERALL LENGTH OF INPUT STRING        00148\n         LH    R4,2(R2)           LENGTH OF COMMAND NAME                00149\n         SR    R3,R4              GET LENGTH OF PARM: SUBTRACT          00150\n         SH    R3,=H'4'             4 (FOR LENGTH OF FIRST FULLWORD)    00151\n         STH   R3,PARMLEN         SAVE PARM LENGTH                      00152\n         BNZ   SCAN1$01           PARM GIVEN: GO CHECK IT               00153\n         MVI   INPUTDD,C'*'       NO PARMS GIVEN: LIST ALL DD'S         00154\n         B     SCAN1END           ALL DONE SCANNING                     00155\n*                                                                       00156\nSCAN1$01 DS    0H                                                       00157\n         CH    R3,=H'8'           DDNAME > 8 CHARACTERS?                00158\n         BNH   SCAN1$02           NO: OK CONTINUE                       00159\n         MVC   RETCODE,=F'113'    SET BAD RETURN CODE                   00160\n         MVC   PLDATA(L'ERRMSG13),ERRMSG13 SEND                         00161\n         BAL   R11,PUTLINE                   MESSAGE                    00162\n         MVI   ERRFLAG1,C'Y'      SET ERROR FLAG                        00163\n         B     SCAN1END           AND GO TO RETURN                      00164\n*                                                                       00165\nSCAN1$02 DS    0H                                                       00166\n         LA    R2,4(R2,R4)        POINT R2 AT START OF REAL PARM        00167\n         BCTR  R3,0               SUBTRACT 1 FOR EXECUTE                00168\n         EX    R3,MVCIT1          MOVE INPUT PARMS TO HOLD AREA         00169\n         OC    INPUTDD,=8C' '     FOLD TO UPPERCASE                     00170\n*                                                                       00171\nSCAN1$03 DS    0H                                                       00172\n         LA    R2,0(R2,R3)        POINT TO LAST CHARACTER               00173\n         CLI   0(R2),C'*'         IS IT THE WILDCARD CHARACTER?         00174\n         BNE   SCAN1END           NO: NON-GENERIC REQUEST; DONE         00175\n         BCTR  R3,0               YES: REQUEST IS GENERIC;              00176\n         STH   R3,COMPLEN          SAVE LENGTH FOR EXECUTED COMPARE     00177\n*                                                                       00178\nSCAN1END L     R11,SCAN1-4        GET RETURN ADDRESS                    00179\n         BR    R11                AND RETURN                            00180\n*                                                                       00181\n***************************                                             00182\n** GETMAIN ROUTINE       **                                             00183\n***************************                                             00184\n         DS    F                                                        00185\nGETM1    ST    R11,GETM1-4          SAVE RETURN ADDRESS                 00186\n         GETMAIN RC,LV=20000          GET AREA FOR TABLE                00187\n         LR    R9,R1                  SAVE TABLE BEGINNING ADDRESS      00188\n         ST    R9,TABLBEG             STORE TABLE BEGINNING ADDRESS     00189\n         A     R1,=F'19999'           CALCULATE ENDING TABLE ADDRESS    00190\n         ST    R1,TABLEND             STORE TABLE ENDING ADDRESS        00191\n         L     R11,GETM1-4          GET RETURN ADDRESS                  00192\n         BR    R11                  AND RETURN                          00193\n*                                                                       00194\n*************************************                                   00195\n** SCAN TASK I/O TABLE ROUTINE     **                                   00196\n*************************************                                   00197\n         DS    F                                                        00198\nSCTT1    ST    R11,SCTT1-4          SAVE RETURN ADDRESS                 00199\n         L     R10,PSATOLD-PSA         CURRENT TCB ADDR                 00200\n         L     R10,TCBTIO-TCB(,R10)    OUR TIOT ADDR                    00201\n         LA    R10,TIOENTRY-TIOT(,R10) 1ST DD SEGMENT IN TIOT           00202\n         SR    R4,R4                   CLEAR FOR WORK (TIO ENT LENGTH)  00203\n         SR    R5,R5                   CLEAR FOR WORK                   00204\n         SR    R6,R6                   CLEAR FOR WORK (SEQ COUNTER)     00205\n*                                                                       00206\nSCTT1$01 DS    0H                                                       00207\n         MVI   SORTLINE,C' '           CLEAR CURRENT TABLE LINE         00208\n         MVC   SORTLINE+1(L'SORTLINE-1),SORTLINE      TO BLANKS         00209\n         LA    R10,TIOENTRY(R4)        POINT TO NEXT TIOT ENTRY         00210\n         CLI   TIOELNGH,0              END OF TIOT?                     00211\n         BE    SCTT1$18                YES: DONE SCANNING TIOT          00212\n         IC    R4,TIOELNGH             LENGTH OF THIS ENTRY             00213\n         CLI   TIOEDDNM,C'A'           DDNAME FIRST CHARACTER VALID?    00214\n         BNL   SCTT1$02                YES: USE AS IS                   00215\n         CLC   TIOEDDNM,=8C' '         ALL BLANKS?                      00216\n         BNE   SCTT1$01                NO: DEALLOCATED; SKIP IT.        00217\n         MVC   SORTDDN,PREVDDN         YES: CONCAT DD'S; USE PREV DDN   00218\n         B     SCTT1$03                GO CHECK FOR DDNAME REQUEST      00219\n*                                                                       00220\nSCTT1$02 DS    0H                                                       00221\n         MVC   SORTDDN,TIOEDDNM        MOVE DDNAME FOR SORT             00222\n         MVC   PREVDDN,SORTDDN         AND SAVE IT FOR POSSIBLE CONCATS 00223\n*                                                                       00224\nSCTT1$03 DS    0H                                                       00225\n         CLI   INPUTDD,C'*'            IS THIS AN 'ALL' REQUEST?        00226\n         BE    SCTT1$04                YES: CONTINUE                    00227\n         LH    R2,COMPLEN              GET COMPARE LENGTH FOR EXECUTE   00228\n         EX    R2,COMPIT1              IS THIS THE DD WE WANT?          00229\n         BE    SCTT1$04                YES: CONTINUE                    00230\n         B     SCTT1$01                NO: CONTINUE LOOKING             00231\n*                                                                       00232\nSCTT1$04 DS    0H                                                       00233\n         STCM  R6,B'0011',SORTTAG      TO KEEP CONCAT SEQUENCE W/ SORT  00234\n         LA    R6,1(,R6)               INCREMENT SEQ COUNTER            00235\n         ICM   R5,7,TIOEJFCB           JFCB POINTER                     00236\n         LA    R5,16(R5)               FIX IT                           00237\n         MVC   SORTDSN,JFCBDSNM        MOVE DSNAME FOR DISPLAY          00238\n         MVC   SORTVOLS,JFCBVOLS       MOVE VOLS FOR DISPLAY            00239\n         TM    JFCFLGS1,JFCVRDS        VIO DATASET?                     00240\n         BZ    SCTT1$05                NO: CONTINUE CHECKING            00241\n         MVC   SORTVOLS,=CL6'(VIO)'    YES: MOVE LITERAL                00242\n         B     SCTT1$06                CONTINUE                         00243\n*                                                                       00244\nSCTT1$05 DS    0H                                                       00245\n         TM    TIOELINK,TIOTTERM       IS DEVICE A TERMINAL?            00246\n         BZ    SCTT1$06                NO: USE VOLSER AND CONTINUE      00247\n         MVC   SORTVOLS,=C'(TERM)'     YES: MOVE LITERAL                00248\n*                                                                       00249\nSCTT1$06 DS    0H                                                       00250\n         TM    JFCBIND1,JFCPDS         IS ALLOC TO A PDS MEMBER?        00251\n         BZ    SCTT1$11                NO: GO GET DISPOSITION           00252\n         LA    R2,SORTDSN              FIND                             00253\n         LA    R3,45                    END                             00254\n*                                                                       00255\nSCTT1$07 DS    0H                        OF                             00256\n         CLI   0(R2),C' '                 DSN                           00257\n         BE    SCTT1$08                    FIELD                        00258\n         LA    R2,1(,R2)                    TO                          00259\n         BCT   R3,SCTT1$07                   PLACE                      00260\n*                                                                       00261\nSCTT1$08 DS    0H                             MEMBER NAME               00262\n         MVI   0(R2),C'('              MOVE LITERAL                     00263\n         MVC   1(8,R2),JFCBELNM        MOVE MEMBER NAME                 00264\n         LA    R3,9                    FIND                             00265\n*                                                                       00266\nSCTT1$09 DS    0H                       END                             00267\n         CLI   0(R2),C' '                OF                             00268\n         BE    SCTT1$10                   MEMBER                        00269\n         LA    R2,1(,R2)                   NAME                         00270\n         BCT   R3,SCTT1$09                  TO                          00271\n*                                                                       00272\nSCTT1$10 DS    0H                            PLACE ')'                  00273\n         MVI   0(R2),C')'              MOVE LITERAL                     00274\n*                                                                       00275\nSCTT1$11 DS    0H                                                       00276\n         TM    JFCBIND2,JFCTEMP        TEMP DATASET?                    00277\n         BZ    SCTT1$12                NO: KEEP TRYING                  00278\n         MVC   SORTDISP,=C'TMP'        YES: MOVE LITERAL                00279\n         B     SCTT1$17                AND CONTINUE                     00280\n*                                                                       00281\nSCTT1$12 DS    0H                                                       00282\n         TM    JFCBIND2,JFCSHARE       SHR DATASET?                     00283\n         BZ    SCTT1$13                NO: KEEP TRYING                  00284\n         MVC   SORTDISP,=C'SHR'        YES: MOVE LITERAL                00285\n         B     SCTT1$17                AND CONTINUE                     00286\n*                                                                       00287\nSCTT1$13 DS    0H                                                       00288\n         TM    JFCBIND2,JFCOLD         OLD DATASET?                     00289\n         BZ    SCTT1$14                NO: KEEP TRYING                  00290\n         MVC   SORTDISP,=C'OLD'        YES: MOVE LITERAL                00291\n         B     SCTT1$17                AND CONTINUE                     00292\n*                                                                       00293\nSCTT1$14 DS    0H                                                       00294\n         TM    JFCBIND2,JFCMOD         MOD DATASET?                     00295\n         BZ    SCTT1$15                NO: KEEP TRYING                  00296\n         MVC   SORTDISP,=C'MOD'        YES: MOVE LITERAL                00297\n         B     SCTT1$17                AND CONTINUE                     00298\n*                                                                       00299\nSCTT1$15 DS    0H                                                       00300\n         TM    JFCBIND2,JFCNEW         NEW DATASET?                     00301\n         BZ    SCTT1$16                NO: LEAVE BLANK                  00302\n         MVC   SORTDISP,=C'NEW'        YES: MOVE LITERAL                00303\n         B     SCTT1$17                AND CONTINUE                     00304\n*                                                                       00305\nSCTT1$16 DS    0H                                                       00306\n         MVC   SORTDISP,=C'   '        INSERT BLANKS                    00307\n*                                                                       00308\nSCTT1$17 DS    0H                                                       00309\n         CLI   ERRFLAG2,C'E'           TABLE SIZE ALREADY EXCEEDED?     00310\n         BE    SCTT1$01                YES: JUST KEEP COUNTING          00311\n         LA    R9,80(,R9)              BUMP TABLE POINTER               00312\n         C     R9,TABLEND              PAST TABLE END?                  00313\n         BNH   SCTT1$01                NO: ITERATE                      00314\n         MVI   ERRFLAG2,C'E'           YES: FLAG TABLE SIZE EXCEEDED    00315\n         B     SCTT1$01                BUT CONTINUE COUNTING            00316\n*                                                                       00317\nSCTT1$18 DS    0H                                                       00318\n         CLI   ERRFLAG2,C'E'           TABLE SIZE EXCEEDED?             00319\n         BNE   SCTT1$19                NO: CONTINUE                     00320\n         MVC   PLDATA(ERR40LEN),ERRMSG40  NOTIFY USER,                  00321\n         BAL   R11,PUTLINE                 TABLE SIZE EXCEEDED          00322\n         MVC   RETCODE,=F'140'         SET BAD RETURN CODE              00323\n         MVI   ERRFLAG1,C'Y'           SET ERROR FLAG                   00324\n         B     SCTT1END                DONE PROCESSING                  00325\n*                                                                       00326\nSCTT1$19 DS    0H                                                       00327\n         STH   R6,DSNSAVE              SAVE NUMBER OF DATASETS          00328\n         LTR   R6,R6                   DID WE FIND ANY?                 00329\n         BNZ   SCTT1END                YES: DONE                        00330\n         MVC   ERR30DDN,INPUTDD        NO: FILL IN ERROR PARAMETER      00331\n         LH    R10,PARMLEN             GET LENGTH OF PARM               00332\n         LA    R4,ERR30DDN(R10)         TO BUILD ERROR MSG              00333\n         MVC   1(L'ERRMSG31,R4),ERRMSG31 AND JUSTIFY                    00334\n         MVC   PLDATA(ERR30LEN),ERRMSG30  SEND                          00335\n         BAL   R11,PUTLINE                 MSG                          00336\n         MVC   RETCODE,=F'130'    SET BAD RETURN CODE                   00337\n         MVI   ERRFLAG1,C'Y'           SET ERROR FLAG                   00338\n*                                                                       00339\nSCTT1END L     R11,SCTT1-4          GET RETURN ADDRESS                  00340\n         BR    R11                  AND RETURN                          00341\n*                                                                       00342\n****************************************************                    00343\n** SORT ROUTINE FOR ACQUIRED LISTDD TABLE         **                    00344\n****************************************************                    00345\n         DS    F                                                        00346\nSORT1    ST    R11,SORT1-4          SAVE RETURN ADDRESS                 00347\n         L     R9,TABLBEG              RESET TO BEGINNING OF TABLE      00348\n         LH    R6,DSNSAVE              GET NUMBER OF DATASETS           00349\n         BCTR  R6,0                    R6=# OF SORT SCANS REMAINING     00350\n         LTR   R6,R6                   ONLY 1 RECORD?                   00351\n         BZ    SORT1END                YES: DON'T BOTHER TO SORT        00352\nSORT1$01 LR    R7,R6                   R7=# OF COMPARES FOR THIS SCAN   00353\n         LA    R8,80(,R9)              POINT TO TEST RECORD FOR COMPARE 00354\n*                                                                       00355\nSORT1$02 DS    0H                                                       00356\n         CLC   0(L'SORTKEY,R8),SORTKEY IS THIS RECORD < CURRENT?        00357\n         BNL   SORT1$03                NO: TRY NEXT RECORD              00358\n         XC    SORTLINE,0(R8)  ----+                                    00359\n         XC    0(80,R8),SORTLINE   +-- YES: SWAP 'EM                    00360\n         XC    SORTLINE,0(R8)  ----+                                    00361\n*                                                                       00362\nSORT1$03 LA    R8,80(,R8)              BUMP COMPARE POINTER             00363\n         BCT   R7,SORT1$02             ITERATE R7 TIMES                 00364\n         LA    R9,80(,R9)              BUMP BASE POINTER                00365\n         BCT   R6,SORT1$01             ITERATE R6 TIMES                 00366\n*                                                                       00367\nSORT1END L     R11,SORT1-4          GET RETURN ADDRESS                  00368\n         BR    R11                  AND RETURN                          00369\n*                                                                       00370\n******************************                                          00371\n** TABLE DISPLAY ROUTINE    **                                          00372\n******************************                                          00373\n         DS    F                                                        00374\nDISP1    ST    R11,DISP1-4          SAVE RETURN ADDRESS                 00375\n         LH    R6,DSNSAVE              RETRIEVE NUMBER OF DATASETS      00376\n         CVD   R6,DBLWORK              CONVERT NUMBER                   00377\n         UNPK  DSNCOUNT,DBLWORK+6(2)    OF DATASETS                     00378\n         OI    DSNCOUNT+2,X'F0'          TO DISPLAY FORMAT              00379\n         CLI   DSNCOUNT,C'0'           ONLY TWO SIGNIFICANT DIGITS?     00380\n         BNE   DISP1$01                NO: GO DISPLAY LINE              00381\n         MVC   HDR1(HDR1LEN-1),HDR1+1  YES: SHIFT AND DESTROY           00382\n         CLI   DSNCOUNT,C'0'           ONLY ONE SIGNIFICANT DIGIT??     00383\n         BNE   DISP1$01                NO: GO DISPLAY LINE              00384\n         MVC   HDR1(HDR1LEN-1),HDR1+1  YES: SHIFT AND DESTROY           00385\n*                                                                       00386\nDISP1$01 DS    0H                                                       00387\n         MVC   PLDATA(HDR1LEN),HDR1    AND DISPLAY                      00388\n         BAL   R11,PUTLINE              MSG LINE                        00389\n*                                                                       00390\nDISP1$02 DS    0H                                                       00391\n         MVI   PLDATA,C' '             DISPLAY                          00392\n         BAL   R11,PUTLINE              BLANK LINE                      00393\n         MVC   PLDATA(HDR2LEN),HDR2    DISPLAY                          00394\n         BAL   R11,PUTLINE              MSG LINE                        00395\n         MVC   PLDATA(HDR3LEN),HDR3    DISPLAY                          00396\n         BAL   R11,PUTLINE              MSG LINE                        00397\n*                                                                       00398\n         L     R9,TABLBEG              START OF TABLE                   00399\n         MVC   PREVDDN,=8C' '          INITIALIZE DDNAME HOLD AREA      00400\nDISP1$03 DS    0H                                                       00401\n         CLC   SORTDDN,PREVDDN         SAME DDNAME?                     00402\n         BNE   DISP1$04                NO: USE IT                       00403\n         MVC   SORTDDN,=8C' '          YES: BLANK IT OUT                00404\n         B     DISP1$05                AND GO DISPLAY                   00405\nDISP1$04 DS    0H                                                       00406\n         MVC   PREVDDN,SORTDDN         SET NEW DDNAME HOLD AREA         00407\nDISP1$05 DS    0H                                                       00408\n         MVC   SORTTAG,=C'  '          ERASE TAG CHARACTER              00409\n         MVC   SORTLTRL,=C'DD'         FILL IN 'DD'                     00410\n         MVC   PLDATA(L'SORTLINE-1),SORTLINE  DISPLAY                   00411\n         BAL   R11,PUTLINE                     DATALINE                 00412\n         LA    R9,80(,R9)              BUMP BASE POINTER                00413\n         BCT   R6,DISP1$03             ITERATE                          00414\nDISP1END L     R11,DISP1-4          GET RETURN ADDRESS                  00415\n         BR    R11                  AND RETURN                          00416\n*                                                                       00417\n***************************                                             00418\n** FREEMAIN ROUTINE      **                                             00419\n***************************                                             00420\n         DS    F                                                        00421\nFREE1    ST    R11,FREE1-4          SAVE RETURN ADDRESS                 00422\n         L     R1,TABLBEG                                               00423\n         FREEMAIN RC,LV=20000,A=(R1)                                    00424\n         L     R11,FREE1-4          GET RETURN ADDRESS                  00425\n         BR    R11                  AND RETURN                          00426\n*                                                                       00427\n***************************                                             00428\n** PUTLINE ROUTINE       **                                             00429\n***************************                                             00430\n         DS    F                                                        00431\nPUTLINE  ST    R11,PUTLINE-4        SAVE RETURN ADDRESS                 00432\n         PUTLINE OUTPUT=(PLLINE,,,DATA),MF=(E,MYIOPL)                   00433\n         MVI   PLDATA,C' '                 BLANK OUT                    00434\n         MVC   PLDATA+1(L'PLDATA-1),PLDATA   DATA LINE                  00435\n         L     R11,PUTLINE-4        GET RETURN ADDRESS                  00436\n         BR    R11                  AND RETURN                          00437\n*                                                                       00438\n***************************                                             00439\n** DATA AREAS            **                                             00440\n***************************                                             00441\nMVCIT1   MVC   INPUTDD(0),0(R2)        EXECUTED                         00442\nCOMPIT1  CLC   SORTDDN(0),INPUTDD      EXECUTED                         00443\nPUTLISTF PUTLINE MF=L                                                   00444\n*                                                                       00445\nDBLWORK  DS    D                                                        00446\nTABLBEG  DS    F                                                        00447\nTABLEND  DS    F                                                        00448\nPARMADDR DS    F                                                        00449\nRETCODE  DC    F'0'                                                     00450\nMYECB    DC    F'0'       FOR PUTLINE                                   00451\nMYIOPL   DC    4F'0'      FOR PUTLINE                                   00452\nPARMLEN  DC    H'0'                                                     00453\nCOMPLEN  DC    H'7'       ASSUME NON-GENERIC (IE, FULL-LENGTH) REQUEST  00454\nDSNSAVE  DC    H'0'                                                     00455\nINPUTDD  DC    CL8' '                                                   00456\nPREVDDN  DS    CL8' '                                                   00457\nERRFLAG1 DC    C'N'                                                     00458\nERRFLAG2 DC    C'N'                                                     00459\n*                                                                       00460\nPLLINE   DC    H'84',H'0'   DATA LENGTH + 4 FOR THESE 2 HALFWORDS       00461\nPLDATA   DC    CL80' '                                                  00462\n*                                                                       00463\nHDR1     DS    0C                                                       00464\nDSNCOUNT DS    PL3                                                      00465\n         DC    C' DATASET(S) CURRENTLY ALLOCATED. '                     00466\nHDR1LEN  EQU   *-HDR1                                                   00467\nHDR2     DS    0C                                                       00468\n         DC    CL7'DDNAME:'                                             00469\n         DC    5C' '                                                    00470\n         DC    CL13'DATASET NAME:'                                      00471\n         DC    42C' '                                                   00472\n         DC    CL11'VOLSR: DSP:'                                        00473\nHDR2LEN  EQU   *-HDR2                                                   00474\nHDR3     DS    0C                                                       00475\n         DC    CL7'------ '                                             00476\n         DC    5C' '                                                    00477\n         DC    CL13'------- ---- '                                      00478\n         DC    42C' '                                                   00479\n         DC    CL11'-----  --- '                                        00480\nHDR3LEN  EQU   *-HDR3                                                   00481\n*                                                                       00482\nERRMSG00 DC    C'ERROR: LISTDD MUST BE INVOKED AS A TSO CMD PROCESSOR.' 00483\nERRMSG13 DC    C'DDNAME MUST BE 8 CHARACTERS OR LESS IN LENGTH.'        00484\nERRMSG30 DC    C'DDNAME '                                               00485\nERR30DDN DC    CL8' '                                                   00486\nERR30LN1 EQU   *-ERRMSG30                                               00487\n         DC    CL30' '                                                  00488\nERRMSG31 DC    C'IS NOT CURRENTLY ALLOCATED.'                           00489\nERR31LN1 EQU   *-ERRMSG31                                               00490\nERR30LEN EQU   ERR30LN1+ERR31LN1+1                                      00491\nERRMSG40 DC    C'UNFORTUNATELY, THIS IS TOO MANY FOR LISTDD TO SORT '   00492\n         DC    C'AND DISPLAY.  TERMINATING.'                            00493\nERR40LEN EQU   *-ERRMSG40                                               00494\n         DSECT                                                          00495\nSORTLINE DS    0CL80                                                    00496\nSORTKEY  DS    0CL10                                                    00497\nSORTDDN  DS    CL8                                                      00498\nSORTTAG  DS    XL2                                                      00499\n         ORG   SORTTAG+1                                                00500\nSORTLTRL DS    CL2                                                      00501\n         DS    CL1                                                      00502\nSORTDSN  DS    CL44                                                     00503\n         DS    CL11     SPACE FOR MEMBER NAME IF FOUND                  00504\nSORTVOLS DS    CL6        (VOLUME LIST TRUNCATED TO 1 VOLSER)           00505\n         DS    CL1                                                      00506\nSORTDISP DS    CL3                                                      00507\n         ORG   SORTLINE+80                                              00508\n         EJECT                                                          00509\n*                                                                       00510\n*  MVS MAPPING MACROS                                                   00511\n*                                                                       00512\n         CSECT                                                          00513\n         IHAPSA                                                         00514\n         IKJTCB                                                         00515\nTIOT     DSECT                                                          00516\n         IEFTIOT1                                                       00517\nJFCB     DSECT                                                          00518\n         IEFJFCBN                                                       00519\n         IKJCPPL                                                        00520\n         IKJIOPL                                                        00521\n         END   LISTDD                                                   00522\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT017/FILE017.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT017", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}