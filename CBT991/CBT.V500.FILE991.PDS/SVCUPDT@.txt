***********************************************************************
*                                                                     *
* Name: SVCUPDTE          (THIS IS THE HELP MEMBER)                   *
*                                                                     *
* Function: Dynamic install of ESR (SVC 109) & non-ESR Type 2/3/4     *
*           SVC    (Temporary install until job is cancelled)         *
*                                                                     *
* Purpose: This program defines an SVC routine to the system. It    @14
*          supports the installation of all ESR routed or standard  @14
*          SVC types 1, 2, 3/4, and 6. The installation of the SVC  @14
*          code is either temportary or for the life of the IPL     @14
*          depending on parameters supplied by the submitting uaer. @14
*                                                                     *
* Version/Release: V1R1                                               *
*                                                                     *
* Author:       J. Hamlet                                             *
*               Information Systems Division                          *
*               Mainframe Support Department                          *
*                                                                     *
*                                                                     *
* Dependencies:    MVS/ESA 4.2.2 or above                           @14
*                  APF authorized                                     *
*                  SVCUPDTE for Type-1, 2, 3/4 & 6 ESR 109 SVC      @14
*                   installs                                        @14
*                                                                   @14
*               Protecting CLASS(#SNOMISC) profiles must exist for  @14
*               SVC or ESR SVC to be installed.                     @14
*                                                                   @14
*               Standard SVC protection profiles will be of the     @14
*               following form:                                     @14
*                                                                   @14
*               SVCUPDTE_nnn                                        @14
*                                                                   @14
*               where nnn is a 3 digit zoned decimal number in the  @14
*               range of 0-255 where the ESR routed SVC numbers of  @14
*               109, 116, 122 & 137 are excluded.                   @14
*                                                                   @14
*               ESR routed SVC protection profiles will be of the   @14
*               following form:                                     @14
*                                                                   @14
*               SVCUPDTE_aaabbb                                     @14
*                                                                   @14
*               where aaa is a 3 digit zoned decimal number         @14
*               representing the ESR routed SVC number and must be  @14
*               109, 116, 122 or 137 and bbb is the 3 digit zoned   @14
*               decimal function code whose range is dependent on   @14
*               the type of ESR SVC being installed. See the SVC    @14
*               parameter in the "Usage:" section below.            @14
*                                                                   @14
*                                                                   @14
* Restrictions: As currently implemented the invoking user must     @14
*               have read level authority to a pre-existing         @14
*               CL(#SNOMISC) profile that protects the SVC or ESR   @14
*               SVC slot requested by the input parameters.         @14
*                                                                   @14
* Module Type:  Procedure requires batch execution.                 @14
*                                                                   @14
* Attributes:   RENT, RMODE ANY, AMODE 31, PSW Keys 8 & zero,       @14
*                                                                   @14
*               Supervisor and problem state                        @14
*                                                                   @14
* Operation: This program defines an SVC routine to the system as a @14
*            replacement in the SVC or ESR SVC slot assigned to     @14
*            that SVC or it can list protecting RACF profiles for   @14
*            those SVC or ESR SVC slots defined for this program's  @14
*            usage in the CLASS(#SNOMISC).                          @14
*                                                                   @14
*            All SVC installations are temporary in nature and any  @14
*            newly installed SVC will be deleted when the address   @14
*            space executing the SVCUPDTE program is either stopped @14
*            via an OS STOP command or cancelled from execution by  @14
*            a Job Entry System or OS CANCEL command.               @14
*                                                                   @14
*            ENQ is used to prevent simultaneous installation of    @14
*            the same SVC by different jobs.                        @14
*                                                                   @14
* Usage: SVCUPDTE is invoked via JCL to either list existing        @14
*            CL(#SNOMISC) profiles used by this program along with  @14
*            a status report for these profiles showing any address @14
*            space that may be using an SVC or ESR SVC slot for     @14
*            testing purposes as handled by this program or the     @14
*            program can be used to perform a temporary install of  @14
*            SVC code for testing/development purposes.             @14
*                                                                   @14
*            A "LIST" request consists of a PARM field that         @14
*            contains only the text string LIST. Any other parame-  @14
*            ter specification will be considered to be an attempt  @14
*            to install or replace an SVC on the current system     @14
*            image.                                                 @14
*                                                                   @14
*            Minimum mode follows:                                  @14
*            =====================                                  @14
*                                                                   @14
*            // EXEC PGM=SVCUPDTE,PARM='LIST'                       @14
*                                                                   @14
*            The above requests that a list of the current profiles @14
*            and the usage status of those profiles is to be        @14
*            generated to a system generated ddname as a spin-      @14
*            sysout file since the SYSPRINT DD was missing.         @14
*                                                                   @14
*            Same as above but without using a spun sysout file:    @14
*            ===================================================    @14
*                                                                   @14
*            // EXEC PGM=SVCUPDTE,PARM='LIST'                       @14
*            //SYSPRINT DD SYSOUT=* <- optional                     @14
*                                                                   @14
*            SVC installs use the following JCL:                    @1*
*            ===================================                    @1*
*                                                                   @14
*            The SYSPRINT DD is not used for the SVC install path   @14
*                                                                   @14
*            // EXEC PGM=SVCUPDTE,PARM='parameters'                 @14
*            //SVCLIB DD DISP=SHR,DSN=data-set-name,                @14
*            //          FREE=CLOSE <- strongly suggested           @14
*            //SYSTSPRT DD SYSOUT=* <- optional                     @14
*                                                                   @14
*            In the above JCL we suggest that the data set name     @14
*            provided on the SVCLIB DD be freed when the program    @14
*            closes the associated DCB. If this is not done         @14
*            exclusive use of the library while the SVCUPDTE        @14
*            program is in execution.                               @14
*                                                                   @14
*            The SYSTSPRT DD being directed to a sysout class is    @14
*            optional. If there is an issue related to the parsing  @14
*            of the input parameters you should use the SYSTSPRT    @14
*            DD to gather as much information about the suspected   @14
*            parse failure before reportign the problem to the SAS  @14
*            Help Desk.                                             @14
*                                                                   @14
*          The description of the content of the above "parameters" @14
*          possibilities follows.                                   @14
*                                                                   @14
*          PARM='SVC(aaa,bbb), +                              @05@08@14
*                LMOD(cccccccc), +                            @05@08@14
*                ATTR(NPRMT,APF,AR),                                @14
*                LOCKS(LOCAL,CMS,SRM,SALLOC,DISP),                  @14
*                TYPE(t),                                           @14
*                GOODNITE(hhmm), +                                  @14
*                USER(uuuuuuuu)'                                    @14
*                                                                   @14
*          where;                                                   @14
*                                                                   @14
*            SVC  is the SVC number you want to install. There are  @14
*                 2 formats for requesting an SVC install;          @14
*                                                                   @14
*                 SVC(aaa) for a standard (non-ESR routed) SVC or   @14
*                 SVC(aaa,bbb) for an ESR-routed SVC where aaa is   @14
*                 the ESR routed SVC and bbb is the function code.  @14
*                 In the case of the SVC(aaa,bbb) format the aaa    @14
*                 value must be one of the following values;        @14
*                                                                   @14
*                 109 for a T3/4 ESR SVC                            @14
*                 116 for a T1 ESR SVC                              @14
*                 122 for a T2 ESR SVC                              @14
*                 137 for a T6 ESR SVC                              @14
*                                                                   @14
*                 The bbb value must be within an acceptable range  @14
*                 for the type of ESR SVC being defined where the   @14
*                 acceptable ranges are:                            @14
*                                                                   @14
*                 001-255 for a T3/4 ESR SVC (109)                  @14
*                 001-014 for a T1   ESR SVC (116)                  @14
*                 001-019 for a T2   ESR SVC (122)                  @14
*                 001-007 for a T6   ESR SVC (137)                  @14
*                                                                   @14
*                 Specification of an aaa value that is less than   @14
*                 200 that is not one of the above ESR routed SVC   @14
*                 numbers requires RACF global special priviledges  @14
*                 and read level access to the protecting profile   @14
*                 which must exist.                                 @14
*                                                                   @14
*                 Note: The SVC(aaa,bbb) format of this parameter   @14
*                       is mutually exclusive of the TYPE           @14
*                       parameter.                                  @14
*                                                                   @14
*                 The SVC parameter specification is required.      @14
*                                                                   @14
*            cccccccc is the name of a load module (or alias)       @14
*                 that you want to install as SVC nnn. It must      @14
*                 have the following attributes:                    @14
*                                                                   @14
*                 RENT                                              @14
*                 REFR                                              @14
*                 REUS                                              @14
*                 EXEC                                              @14
*                 Not OVLY phased                                   @14
*                 Not SCTR (Scatter) format                         @14
*                 Not RMODE=SPLIT                                   @14
*                 Not TEST/TESTRAN                                  @14
*                 AMODE 24 or AMODE 31                              @14
*                                                                   @14
*                 The load module to be installed must be loaded    @14
*                 from the 1st library that exists in the SVCLIB    @14
*                 concatenation sequence.                           @14
*                                                                   @14
*                 Note: A future release may alleviate this         @14
*                       restriction. Time just did not allow the    @14
*                       writing of the necessary code for this      @14
*                       release of the SVCUPDTE utility program.    @14
*                                                                   @14
*                 The LMOD parameter is required in all SVC         @14
*                 install attempts (non LIST executions).           @14
*                                                                   @14
*            ATTR(NPRMT,APF,AR) is the list of SVC attributes to be @14
*                 assigned to the newly installed SVC code where    @14
*                 all are optional. The supported and available SVC @14
*                 attributes are;                                   @14
*                                                                   @14
*                 NPRMT - SVC is not pre-emptable for I/O interrup- @14
*                        tions. If a non-preemptable SVC sustains   @14
*                        an I/O interrupt, the SVC, rather than the @14
*                        highest priority ready work will get       @14
*                        control when I/O processing is complete.   @14
*                        A non-preemtable SVC cannot issue other    @14
*                        SVCs and remain non-preemptable. If a non- @14
*                        preemtable SVC issdues a STAX DEFER=NO     @14
*                        macro the SVC routine remain non-preemp-   @14
*                        table until it exits.                      @14
*                         DEFAULT: SVC will be pre-emptible         @14
*                                                                   @14
*                 APF   - SVC caller must be APF authorized         @14
*                         DEFAULT: Caller does not need to be APF   @14
*                                  authorized.                      @14
*                                                                   @14
*                 AR    - SVC caller can be in Access Register (AR) @14
*                         ASC mode.                                 @14
*                         DEFAULT: AR mode callers are not          @14
*                                  supported.                       @14
*                                                                   @14
*                 Note: This parameter is optional.                 @14
*                                                                   @14
*            LOCKS(LOCAL,CMS,SRM,SALLOC,DISP) is the list of        @14
*                 available system locks for the SVC FLIH (First    @14
*                 Level INterrupt Handler) to obtain before the SVC @14
*                 entry point is given control on bahalf of the SVC @14
*                 caller. Several of these locks are restricted as  @14
*                 they could impact other users of the system in    @14
*                 the case of a problem in the introduced SVC code. @14
*                 The locks specifications supported are:           @14
*                                                                   @14
*                 LOCAL  - This is a local suspend lock used to     @14
*                         serialize functions and storage within a  @14
*                         local address space. One local lock       @14
*                         exists per address space. Type 3/4 SVCs   @14
*                         are always entered with the local lock    @14
*                         obtained regardless of wheter the local   @14
*                         lock was requested.                       @14
*                                                                   @14
*                 CMS    - This is a GLOBAL SUSPEND lock used for   @14
*                          serialization on more than one address   @14
*                          space when the serialization is not      @14
*                          provided by one or more of the other     @14
*                          available global locks. The CMS lock     @14
*                          provides global serialization when k     @14
*                          enablement is required. See the section  @14
*                          titled "Serialization Summary" in the    @14
*                          "z/OS Diagnosis: Reference" manual for   @14
*                          additional information.                  @14
*                                                                   @14
*                 Note: T3/4 SVCs can only request LOCAL or         @14
*                       LOCAL+CMS locks                             @14
*                                                                   @14
*                 The following lock specifications can only be     @14
*                 requested by a userid that has RACF Global        @14
*                 Special priviledges and also has ACCESS(READ)     @14
*                 authority for the protecting CLASS(#SNOMISC)      @14
*                 profile that protects the SVC of ESR SVC sllot.   @14
*                                                                   @14
*                 SRM    - This is a GLOBAL SPIN lock that          @14
*                         serializes SRM control blocks and         @14
*                         data used by the SRM/OPT/WLM components   @14
*                         of z/OS.                                  @14
*                                                                   @14
*                 SALLOC - This is a GLOBAL SPIN lock that          @14
*                         serializes external routines that enable  @14
*                         a processor for either an emergency       @14
*                         signal (EMS) or a malfunction alert (MA). @14
*                                                                   @14
*                 DISP   - This is a GLOBAL SPIN lock that          @14
*                         serializes certain global functions that  @14
*                         are controlled by the z/OS Dispatcher.    @14
*                         Some examples are WEB and TIMER queues    @14
*                         but there are a lot of others.            @14
*                                                                   @14
*                                                                   @14
*                 Note: If no LOCKS parameter is supplied you will  @14
*                       get the IBM default lock assignment for the @14
*                       SVC type being installed.                   @14
*                                                                   @14
*            TYPE(t) is the parameter that supplies the SVC type    @14
*                 that is to be installed. The possible values for  @14
*                 t are;                                            @14
*                                                                   @14
*                 1 - for a type 1 SVC                              @14
*                 2 - for a type 2 SVC                              @14
*                 3 - for a type 3 SVC                              @14
*                 4 - for a type 4 SVC                              @14
*                 6 - for a type 6 SVC                              @14
*                                                                   @14
*                 The TYPE specification and the SVC(aaa,bbb) form  @14
*                 of the SVC parameter are mutually exclusive.      @14
*                                                                   @14
*                 A type 3 SVC traditionally identified a function  @14
*                 that is contained in a single load module while   @14
*                 a type 4 SVC identified a a function that loads   @14
*                 additional modules. In the past one could         @14
*                 identify these loaded modules as IGC01nnn,...,    @14
*                 and IGC0xnnn. (IGC01nnn is the first module that  @14
*                 IGC00nnn loads, IGC02nnn is the second module     @14
*                 that IGC00nnn loads, etc.) These old conventions  @14
*                 no longer hold water and the SVCUPDTE program     @14
*                 although supporting both TYPE(3) and TYPE(4)      @14
*                 specifications it does not support the specifica- @14
*                 tion of more than one LMOD to provide the         @14
*                 traditional TYPE(4) environment. All know IBM     @14
*                 and vendor utilities used to display the SVC      @14
*                 table entries will show "T3/4" for either a type  @14
*                 3 or 4 SVC entry.                                 @14
*                                                                   @14
*                 For a non-ESR SVC installation...SVC(aaa) form    @14
*                 of the SVC parameter the TYPE parameter is        @14
*                 required.                                         @14
*                                                                   @14
*            GOODNITE(hhmm) is the parameter that supplies a time   @14
*                 later on the same execution day that the SVCUPDTE @14
*                 program will use to automatically uninstall the   @14
*                 installed SVC and place back in service the       @14
*                 previously existing SVC in the same SVC or ESR    @14
*                 SVC slot.                                         @14
*                                                                   @14
*                 This parameter is optional.                       @14
*                                                                   @14
*            USER(uuuuuuuu) parameter is used to supply a "filter"  @14
*                 userid. The logic is such that only this userid   @14
*                 will have access to the newly installed SVC code  @14
*                 while all other users of the SVC will have their  @14
*                 SVC requests sent to the old entry point.         @14
*                                                                   @14
*                 Note: When using the USER(uuuuuuuu) parameter     @14
*                       one must be aware that a single SVC or ESR  @14
*                       SVC slot supports both the old SVC and new  @14
*                       SVC code. Thus any ATTR or LOCKS assignment @14
*                       for the new SVC will be in place for the    @14
*                       old SVC callers also. Tus we discourage the @14
*                       use of the USER(uuuuuuuu) parameter in      @14
*                       combination with any change to the original @14
*                       SVC or ESR SVC slot's locks or attributes   @14
*                       supplied by any LOCKS or ATTR parameters    @14
*                       furnished by the user for the new SVC. A    @14
*                       case in point. Assume ATTR(APF) was speci-  @14
*                       fied in combination with the USER(uuuuuuuu) @14
*                       parameter for a replacement SVC. If this    @14
*                       was done the result would be that both the  @14
*                       calls to the old SVC and the calls to the   @14
*                       new SVC would have to come from an APF      @14
*                       authorized environment. This may not have   @14
*                       been the intent of the SVC installer.       @14
*                                                                   @14
* Return codes:                                                       *
*                                                                   @14
*        0  Successful completion: SVC has been installed and       @14
*           uninstalled or the requested LIST operation completed   @14
*           successfully                                            @14
*                                                                   @14
*        1  SVCUPDTE program not APF authorized                     @14
*                                                                   @14
*        2  Required SVCUPDTE profile does not exist                @14
*                                                                   @14
*        3  Required SVC keyword not present                        @14
*                                                                   @14
*        4  Required SVCLIB DDname missing                          @14
*                                                                   @14
*        6  Required IRRSEQ00 service not available                 @14
*                                                                   @14
*        8  User not authorized to add/replace SVC specified        @14
*                                                                   @14
*        9  ERRET routine driven for LOAD SVC                       @14
*                                                                   @14
*       10  Non-zero return code from IKJTSOEV service              @14
*                                                                   @14
*       12  ENQ for SVCUPDTE resource failed                        @14
*                                                                   @14
*       16  LMOD supplied module name not found on SVCLIB library   @14
*                                                                   @14
*       18  Unable to obtain IRRSEQ00 workarea                      @14
*                                                                   @14
*       19  Unable to obtain RIBs workarea                          @14
*                                                                   @14
*       20  Illegal execution environment                           @14
*                                                                   @14
*       24  Backing slot for requested SVC or ESR-SVC is not T2/3/4 @14
*           (obsolete)                                              @14
*                                                                   @14
*       26  Report sysout file allocation failure                   @14
*                                                                   @14
*       32  Open for report sysout file failed                      @14
*                                                                   @14
*       34  SAF extract failure                                     @14
*                                                                   @14
*       35  ESR T1/2/6 SVCs not supported (obsolete)                @14
*                                                                   @14
*       36  No SVCUPDTE profiles found                              @14
*                                                                   @14
*       37  EXTR000 - not CLASS(#SNOMISC) profile returned          @14
*                                                                   @14
*       38  EXTR000 - SD (Segment Descriptor) number returned was   @14
*           not 1                                                   @14
*                                                                   @14
*       39  EXTR000 - BASE segment not returned                     @14
*                                                                   @14
*       40  EXTR000 - Invalid length SVCUPDTE_* profile found on    @14
*           extract operation                                       @14
*                                                                   @14
*       41  CHKINUSE - unexpected GQSCAN return code received       @14
*                                                                   @14
*       42  Unable to acquire MLWTO workarea                        @14
*                                                                   @14
*       44  OPEN for SVCLIB data set failed                         @14
*                                                                   @14
*       48  SWAREQ request failed                                   @14
*                                                                   @14
*       52  SVCLIB not DSORG=PO/POE                                 @14
*                                                                   @14
*       56  SVCLIB not RECFM=U                                      @14
*                                                                   @14
*       60  SVCLIB library cannot be multi-volume                   @14
*                                                                   @14
*       64  Member name coded on SVCLIB (not supported)             @14
*                                                                   @14
*       68  Invalid LOCKS parameter supplied                        @14
*                                                                   @14
*       72  SVC number parameter supplied not numeric               @14
*                                                                   @14
*       73  SVCUPDTE reveral failed                                 @14
*                                                                   @14
*       76  GOODNITE time (hhmm) supplied parameter not numeric     @14
*                                                                   @14
*       80  SVC number not in range 0-255                           @14
*                                                                   @14
*       84  GOODNITE time (hhmm) supplied parameter out of range    @14
*                                                                   @14
*       88  GOODNITE time (hhmm) supplied time less than current    @14
*           time                                                    @14
*                                                                   @14
*       92  ESR T3/4 naming convention violation (obsolete)         @14
*                                                                   @14
*       96  LMOD module attribute requirements not met              @14
*                                                                   @14
*      100  LOAD for LMOD module failed                             @14
*                                                                   @14
*      104  LMOD module is RMODE=SPLIT                              @14
*                                                                   @14
*      105  LMOD module not marked RENT on SVCLIB                   @14
*                                                                   @14
*      106  LMOD module not marked REUS on SVCLIB                   @14
*                                                                   @14
*      107  LMOD module not marked REFR on SVCLIB                   @14
*                                                                   @14
*      108  LMOD module not marked EXEC on SVCLIB                   @14
*                                                                   @14
*      109  LMOD module cannot be marked OVLY on SVCLIB             @14
*                                                                   @14
*      110  LMOD module cannot be marked SCTR on SVCLIB             @14
*                                                                   @14
*      111  LMOD module cannot be marked SPLIT on SVCLIB            @14
*                                                                   @14
*      112  Bad lgic (loc #__) - R15=________                       @14
*                                                                   @14
*      113  LMOD module cannot be marked TEST/TESTRAN on SVCLIB     @14
*                                                                   @14
*      114  LMOD module must be on 1st library in any SVCLIB        @14
*           supplied concatenation sequence                         @14
*                                                                   @14
*      120  Insufficient CSA/ECSA for SVC module to be installed    @14
*                                                                   @14
*      121  Insufficient ESQA for USER filter code                  @14
*                                                                   @14
*      124  User not authorized to set requested LOCK               @14
*                                                                   @14
*      128  Missing input parameter/parameters                      @14
*                                                                   @14
*      132  Excessive input parameter length                        @14
*                                                                   @14
*      136  Invalid character(s) in input parameters found          @14
*                                                                   @14
*      137  IKJPARS failed parameter string                         @14
*                                                                   @14
*      140  Invalid PARM field found                                @14
*                                                                   @14
*      141  SVC or ESR SVC slot ENQ SYSTEM failed                   @14
*                                                                   @14
*      142  Non-ESR SVC request requires TYPE be specified          @14
*                                                                   @14
*      143  SVCUPDTE service request failed                         @14
*                                                                   @14
*      144  QEDIT failure                                           @14
*                                                                   @14
* Abends:                                                             *
*                                                                   @14
*      U901  - Unable to obtain ENQ for SYSZSVC table               @14
*                                                                   @14
*      U902  - QEDIT limit set failure                              @14
*                                                                   @14
*      U333  - Invalid logic detected during parse processing       @14
*                                                                   @14
*      U334  - Logic error detected in TYPE assignment              @14
*                                                                   @14
*      U1001 - Invalid SVC type passed parsing                      @14
*                                                                   @14
*                                                                     *
* Modification Log                                                    *
* ================                                                    *
* D a t e tag         Description of change & responsible party       *
* ======= === ======================================================= *
* 01Jun96 n/a -Genesis. Goal to reduce IPLs for SVC Type 3 installs.  *
*              **********************************************<SNOJRH> *
* 10Jun96 @01 -Leave SVC installed and exit if module was loaded from *
*              LPA and "goodnight" time missing in PARM.*****<SNOJRH> *
* 12Jun96 @02 -Issue ENQ on SYSZSVC/table to prevent simultaneous     *
*              updates.**************************************<SNOJRH> *
* 14Jun96 @03 -Restore address of old SVC after temporary install of  *
*              SVC.******************************************<SNOJRH> *
* 10Oct97 @04 -Fix "good-night" routine which hasn't been working for *
*              a while.**************************************<SNOJRH> *
* 28Oct98 @05 -Restrict access to new SVC to userid specified in PARM *
*              field. Idea from Gilbert Saint-Flour. Survive LPA      *
*              resident check when performing screen.********<SNOJRH> *
* 16Nov98 @06 -Support to install IGX00nnn named module as a Type-3   *
*              ESR function (only ESR SVC 109 supported).****<SNOJRH> *
* 01Dec98 @07 -Prevent conflict on ENQ when SVC 109 is being used for *
*              ESR install when ESR numbers are unique and being      *
*              tested simultaneously.************************<SNOJRH> *
* 01Dec98 @08 -PARM option for LOCAL and CMS locks for special test   *
*              requirements.*********************************<SNOJRH> *
* 27Nov01 @09 -Reviewed support for dynamic LPA and found CDNIP check *
*              following CHECKLPA label is sufficient and that the    *
*              ECVTDLPF (first) through ECVTDLPL (last) chain does    *
*              not need to be scanned for dynamic LPA queue           *
*              existence.************************************<SNOJRH> *
* 12Jul11 @10 -Updated for FLAG(PAGE0)***********************<SNOSEW> *
* 15Dec11 @11 -Support for Large Page Support...i.e support for       *
*              1MB page sizes. PGSER PROTECT|UNPROTECT operations are *
*              not supported for locations in the R/O Nucleus even if *
*              1MB page support is not enabled on the newer           *
*              processors the R/O Nucleus will be backed by 1MB       *
*              pages. If PGSER PROTECT|UNPROTECT operations are       *
*              attempted on the newer processors for areas in the     *
*              R/O nucleus a S18A abend will occur with the reason    *
*              code placed in GPR0 identifying the operation. The     *
*              code is now upward and downward compatible for all     *
*              supported z/OS releases.***************<SNOJRH/SNOSEW> *
* 15Dec11 @12 -Fix bug left over from @06 change where wrong register *
*              used to preserve ESR function code in the ESR# field.  *
*              **********************************************<SNOJRH> *
* 16Dec11 @13 -Fix bug left over from @07 change where SVCNO was used *
*              execute form of ENQ instead of RNAME. This resulted in *
*              the SVC number parameter being repeated twice as the   *
*              RNAME when an ESR SVC was involved instead of the SVC  *
*              number followed by the ESR number.************<SNOJRH> *
* 25Oct13 n/a -Replaced displacement branches with relative branches. *
*              **********************************************<SNOJRH> *
* 22Jul15 @14 -Version 2 Release 0 (total rewrite):                   *
*              -Program now designed to run from the system LNKLST    *
*               by verifying that it is not being executed under TEST *
*               or TESTAUTH.                                          *
*              -SVC load modules will now be loaded from SVCLIB       *
*               instead of STEPLIB.                                   *
*              -Above SVCLIB library does NOT need to be APF          *
*               authorized.                                           *
*              -Will now issue WTO indicating what user has installed *
*               what SVC.                                             *
*              -Requires batch execution now instead of as a started  *
*               procedure.                                            *
*              -Lots of new return codes added due to use of IRRSEQ00 *
*               (RACF Administration) service and support for users   *
*               requesting an inventory report of registered SVC slot *
*               profiles using that service.                          *
*              -Users attempting to install/replace an SVC will have  *
*               the following CLASS(#SNOMISC) rule checked:           *
*                                                                     *
*               SVCUPDTE_xxxyyy                                       *
*                                                                     *
*               where;                                                *
*                                                                     *
*               xxx is the SVC number and                             *
*                                                                     *
*               yyy is the ESR function code if xxx is an ESR routed  *
*                   SVC. The yyy portion is not present if the        *
*                   xxx portion represents a standard SVC.            *
*                                                                     *
