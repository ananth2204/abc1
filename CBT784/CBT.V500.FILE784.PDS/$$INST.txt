 The RECEIVE member of this library needs to be customized and then run
 to create the "pax" archive containing the UNIX files needed.  The main
 customizatin of the RECEIVE member is to update the followin SET
 JCL commands.

 THISDSN needs to point to this dataset.
 REXXLIB needs to point to the library which will contain the
    DSLIST0 and DSLIST4 REXX programs
 UNIXDIR needs to point to a UNIX subdirectory into which the pax
    archive will be placed. This can be your HOME directory.

 Once you are successfully run the above, you need to enter the
 following two UNIX commands from a UNIX shell or batch job.

 cd /usr/lpp/internet/server_root
 pax -v -pe -rf /???/dslist.pax

 Note that the "cd" command really needs to set your working directory
 to your HTTPD server's "root" directory. The directory in the example
 is the default as supplied by IBM. You will probably either need to be
 "root" or have ALTER access to the SUPERUSER.FILESYS profile in the
 UNIXPRIV class.

 The "pax" command must have the ??? replaced with the subdirectory
 which contains the "dslist.pax" file. This could be your HOME directory
 or some other directory which you chose in the RECEIVE job.

 Update the HTTPD server's configuration file with the following lines:

Protection dslisting  {
        ServerId        Use_Mainframe_ID
        AuthType        Basic
        PasswdFile      %%SAF%%
        UserID          %%CLIENT%%
        Mask            All
}

Protect /dslist/* dslisting
Protect /dslist-bin/* dslisting

Exec  /dslist-bin/*  /usr/lpp/internet/server_root/dslist-bin/*
Pass  /dslist/*      /usr/lpp/internet/server_root/dslist/*

 Normally the HTTPD server's configuration file is /etc/httpd.conf This
 assumes that you want the users of this function to be forced to login
 using their RACF userid and password. If you do not want to force a
 login, simply do not include the two "Protect" lines.  Note that I have
 not tested this and do not know if it will work.  I think that would
 depend on the dataset access profiles in RACF.

 Once you have successfully done all of the above steps, you must tell
 the HTTPD server to refresh its configuration. You can do this by
 either stopping and restarting it, or via a console command:

 F IMWEBSRV,APPL=-RESTART

 This assumes that you are running the HTTPD server with the job name of
 IMWEBSRV. If you call it something else, use that name instead.
