/* REXX */
/* customize this by changing the dataset names as required
   for your shop. */
PARSE UPPER ARG ARGS
PARSE SOURCE TSO WHICH EXEC DDN DSN EXECO ENV ANAME TOKEN
ACTIVE=SYSVAR('SYSISPF')
IF ACTIVE <> 'ACTIVE' THEN DO
   /* DO ALLOCATIONS */
   "ALLOC DDN(ISPPROF) ",
   " LRECL(80) RECFM(F B) BLKSIZE(3120) ",
   " NEW DELETE SPACE(10 10) DIR(100) TRACKS"
   "ALLOC DDN(ISPLOG) DUMMY RECFM(F B A) ",
   " LRECL(121) BLKSIZE(121)"
   "ALLOC DDN(ISPLIST) DUMMY RECFM(F B A) ",
   " LRECL(121) BLKSIZE(121)"
   "ALLOC DDN(ISPPLIB) DSN('ISP.SISPPENU') SHR"
   "ALLOC DDN(ISPTLIB) DSN('ISP.SISPTENU') SHR"
   "ALLOC DDN(ISPMLIB) DSN('ISP.SISPMENU') SHR"
   "ALLOC DDN(ISPSLIB) DSN('ISP.SISPSLIB') SHR"
   "ALLOC DDN(SYSPROC) DSN('ISP.SISPCLIB') SHR"
   "ALLOC DDN(SYSEXEC) DSN('ISP.SISPEXEC'",
     "'"DSN"'",
   ") SHR"
   "ISPSTART CMD(%"EXEC ARGS")"
   RETURN
END
IF WORDS(ARGS) > 0
THEN LEVEL=WORD(ARGS,1)
ELSE DO
     LEVEL=SYSVAR("SYSPREF")
     IF LEVEL="" THEN LEVEL=SYSVAR("SYSUID")
     END
ADDRESS ISPEXEC
"LMDINIT LISTID(LISTID) LEVEL("LEVEL")"
   /*
   NOTE that all the following SAYs have the line start with a
   less than sign. This is because the ADDRESS TSO ends up piping
   junk on some lines of the output being returned.
   By subsetting the returned lines to only those which have a <
   as the first character, the junk lines can be ignored.
   Of course, the caller must strip off the leading < character
   */
DSN=' '
say '<{"header": {"dsn": "DSN","vol": "Volume","dev": "Device",'
say '<"dsorg": "Dsorg","tracks": "Tracks","created": "Created",'
say '<"expires": "Expires","extents": "Extents","dsntype": "DSN type",'
say '<"units": "Space units",'
say '<"migrated": "Migrated","multivol": "MULTIVOL","cat": "CAT",'
say '<"recfm": "RECFM","lrecl": "LRECL","blksize": "BLKSIZE",'
say '<"used": "USED%","lastref": "Referred"'
say '<},'
SAY '<"dsnlist": Ý'
comma=''
DO FOREVER
   "LMDLIST LISTID("LISTID") OPTION(LIST) DATASET(DSN) STATS(YES)"
   IF RC <> 0 THEN LEAVE
   SAY '<'comma'{'
   comma=','
   SAY       '<"dsn": "'DSN'",'
   SAY space('<"vol": "'ZDLVOL'",',0)
   SAY space('<"dev": "'ZDLDEV'",',0)
   SAY space('<"dsorg": "'ZDLDSORG'",',0)
   SAY space('<"tracks": "'ZDLSIZEX'",',0)
   SAY space('<"created": "'ZDLCDATE'",',0)
   say space('<"expires": "'ZDLEDATE'",',0)
   say space('<"extents": "'ZDLEXTX'",',0)
   say space('<"dsntype": "'ZDLDSNTP'",',0)
   say space('<"units": "'ZDLSPACU'",',0)
   SAY space('<"migrated": "'ZDLMIGR'",',0)
   SAY space('<"multivol": "'ZDLMVOL'",',0)
   SAY space('<"cat": "'ZDLCATNM'",',0)
   SAY space('<"recfm": "'ZDLRECFM'",',0)
   SAY space('<"lrecl": "'ZDLLRECL'",',0)
   SAY space('<"blksize": "'ZDLBLKSZ'",',0)
   SAY space('<"used": "'ZDLUSED'",',0)
   SAY space('<"lastref": "'ZDLRDATE'"',0)
   SAY '<}'
END
say "<¨}"
return
