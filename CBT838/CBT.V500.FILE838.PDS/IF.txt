* COPIED FROM FILE 078 OF SHARE MVS GROUP MODS TAPE, V29 (04/84)
*          DATA SET AM010500   AT LEVEL 002 AS OF 05/23/76
*          DATA SET AM010500   AT LEVEL 001 AS OF 10/28/75
*          DATA SET AM010500   AT LEVEL 001 AS OF 04/01/74
         MACRO ,
         IF    ,
         GBLA  &ELSE(10),&SEQ(10),&LEVEL,&LAB
         GBLA  &ELSEIF(10)
         LCLA  &N,&M,&S,&LAB1,&L,&I
         LCLC  &OP,&OPR
         LCLB  &TESTSW
         EQUBC ,             DEFINE CONDITIONS, IF NOT ALREADY DEFINED
.* AUTHOR.   DON HIGGINS.
.* DATE.     03/27/74.
.* REMARKS.  MACRO TO ALLOW STRUCTURED PROGRAMMING USING
.*           IF, THEN, ELSE, AND DO UP TO TEN LEVELS DEEP
.*           AND NO BRANCH INSTRUCTIONS.
.*
.*           EXAMPLE FORM.
.*               SAMPLE  SUBENTRY
.*                       IF (CLI,FLAG,TRUE,EQ)
.*                       THEN BEGIN
.*                            DO  WHILE,(CLC,A,B,NE)
.*                               PERFORM R100PROC,R190EXIT
.*                            DO END
.*                       THEN END
.*                       ELSE BEGIN
.*                            PERFORM R200LIST,R290EXIT
.*                       ELSE END
.*                       IF (CLI,SW,TRUE,EQ),AND,(SRC,R1,E)
.*                            PERFORM R300RPT,R390EXIT
.*                       ELSE CONTINUE
.*                       SUBEXIT
         AIF   (&LEVEL EQ 10).ERR1
&LEVEL   SETA  &LEVEL+1
&ELSEIF(&LEVEL) SETA 0
&SEQ(&LEVEL) SETA 1
&LAB     SETA  &LAB+1
&ELSE(&LEVEL) SETA &LAB
&N       SETA N'&SYSLIST
.NEXTAND ANOP
&TESTSW  SETB  0
.TEST    ANOP
&S       SETA  &S+1
         AIF   (&S GT &N).ERR2
&M       SETA  N'&SYSLIST(&S)
         AIF   (&M EQ 1).TESTEND
         AIF   (&M LT 2).ERR3
         AIF   (&M GT 5).ERR4
&I       SETA  2
&OPR     SETC  ''
&OP      SETC  '&SYSLIST(&S,1)'
         AIF   (&M GT 2).TESTOPR
         &OP
         AGO   .TESTEND
.TESTOPR ANOP
         AIF   ('&SYSLIST(&S,&I)'(1,1) NE '''').NOLIT
&L       SETA  K'&SYSLIST(&S,&I)
&OPR     SETC  '&OPR'.'&SYSLIST(&S,&I)'(2,&L-2)
         AGO   .NEXTOPR
.NOLIT   ANOP
&OPR     SETC  '&OPR'.'&SYSLIST(&S,&I)'
.NEXTOPR ANOP
&I       SETA  &I+1
         AIF   (&I EQ &M).TESTGEN
&OPR     SETC  '&OPR'.','
         AGO   .TESTOPR
.TESTGEN ANOP
         &OP   &OPR
.TESTEND ANOP
         AIF   (&TESTSW EQ 1).ORBC
.AMBC    ANOP
         BC    15-&SYSLIST(&S,&M),IF0&LAB
.CONNECT ANOP
&S       SETA  &S+1
         AIF   (&S GT &N).EXIT
&M       SETA  N'&SYSLIST(&S)
         AIF   (&M NE 1).ERR5  BAD CONNECTOR
         AIF   ('&SYSLIST(&S)' EQ 'AND').NEXTAND
         AIF   ('&SYSLIST(&S)' NE 'OR').ERR5  BAD CONNECTOR
.NEXTOR   ANOP
&LAB1    SETA  &LAB+1
         B     IF0&LAB1  SKIP TEST IF LAST ONE TRUE
IF0&LAB   EQU *          DO TEST IF LAST ONE FALSE
&LAB     SETA  &LAB+2
&ELSE(&LEVEL) SETA &LAB
&TESTSW  SETB  1
         AGO   .TEST
.ORBC    ANOP
         BC    15-&SYSLIST(&S,&M),IF0&LAB
IF0&LAB1 EQU *
         AGO   .CONNECT
.ERR1    MNOTE 8,'IF - LEVEL OVERFLOW'
         AGO   .EXIT
.ERR2    MNOTE 8,'IF - MISSING TEST LIST'
         AGO   .EXIT
.ERR3    MNOTE 8,'IF - TEST LIST TOO SHORT'
         AGO   .EXIT
.ERR4    MNOTE 8,'IF - TEST LIST TOO LONG'
         AGO   .EXIT
.ERR5    MNOTE 8,'IF - INVALID CONNECTOR'
.EXIT    ANOP
         MEND
