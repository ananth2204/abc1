/* Rexx ISPF exit */
/* exit 0 uses ISPF processing.  exit 8 skips ISPF processing. */
arg Cmd . "'" DSN '(' Mem ')' . VolSer Tail
if Pos(Cmd,'DHOR') = 0 then exit 0
if Cmd = 'H' then do
   call a#vHist SubWord(arg(1),2)
   exit 8
end
if Cmd = 'O' then do
   call a#Opt SubWord(arg(1),2)
   exit 8
end
if Right(Mem,1) = '{' then exit 0
if Right(DSN,4) = '.ARC' then exit 0
DT = Date('D')*86400+Time('S')
address ISPExec
"VGet (MCMDDSN) SHARED"
if RC = 0 then do
   if Word(MCMDDSN,1) = VolSer':'DSN then do
      oDT = Word(MCMDDSN,2)
      if DT = oDT then exit 0
      else if (DT - oDT) <= 10 then do
         MCMDDSN = oDSN DT
         "VPut (MCMDDSN) SHARED"
         exit 0
      end
   end
end
IsCat = ListDSI("'"DSN"'") = 0
if IsCat then IsCat = (SysVolume = VolSer)
if IsCat then Vol = ''
else Vol = ' VOLUME('VolSer')'
SysDSOrg = 'BAD'
ArcDSN = DSN'.ARC'
if Length(ArcDSN) <= 44 then call ListDSI "'"ArcDSN"'"||Vol
if Left(SysDSOrg,2) <> 'PO' then ArcDSN = DSN
ArcMem = Strip(Left(Mem,7))'{'

"VGet (ZTERM)"
if ZTerm <> '3278' & ZTerm <> '3278A' then
   "Select Pgm(ISPTTDef) Parm(3278)"
"LMInit DataID(DID) DataSet('"ArcDSN"')"Vol "ENQ(SHRW)"
"LMOpen DataID(&DID)"
"LMMFind DataID(&DID) Member(Z{PARMS{)"
zParms = (RC = 0)
if ArcDSN = DSN & zParms = 0 then do           /* No archive dataset */
   MCMDDSN = VolSer':'DSN DT
   "VPut (MCMDDSN) SHARED"
   signal Quit
end
ArcCopy = 0
if ArcDSN <> DSN then do
   "LMMFind DataID(&DID) Member(&Mem)"
   ArcCopy = (RC = 0)
end
"LMMFind DataID(&DID) Member(&ArcMem)"
if RC = 0 then
  "LMGet DataID(&DID) Mode(INVAR) MaxLen(80) DataLoc(Data) DataLen(Len)"
if RC <> 0 then IsArc = 0
else do
   parse UPPER VAR Data 2 Type Info
   if Type = 'CURRENT' then do
      parse VAR Info 'MEMBER('aMem')'
      if aMem = Mem then IsArc = 1
      else do
         IsArc = 0
         ArcMem = ''
      end
   end; else do
      parse VAR Info 'ID('ConID')'
      ArcMem = 'Z{'Right(ConID,4,0)||SubStr(Mem,8)||'{'
      "LMMFind DataID(&DID) Member(&ArcMem)"
      IsArc = (RC = 0)
   end
end
if Left(Tail,1) = '*' then Tail = ''
Select
When Cmd = 'R' then do
   if IsArc = 0 & ArcCopy = 0 then signal Quit
   if Tail <> '' then parse VAR Tail UDARen .
   else do
      address ISPExec
      UDMSMem = Mem
      "AddPop"
      "Display Panel(ISRUREN)"
      RV = RC
      "RemPop"
      if RV <> 0 then signal Done
   end
   /* If not archived, do this the simple way */
   if IsArc = 0 then do
      "LMClose DataID(&DID)"
      "LMOpen DataID(&DID) Option(OUTPUT)"
      "LMMRen DataID(&DID) Member(&Mem) NewName(&UDARen)"
      "LMClose DataID(&DID)"
      "LMFree DataID(&DID)"
      "LMInit DataID(DID) DataSet('"DSN"')"Vol "Enq(SHRW)"
      "LMOpen DataID(&DID) Option(OUTPUT)"
      "LMMRen DataID(&DID) Member(&Mem) NewName(&UDARen)"
      signal Done
   end
   address TSO
   "Alloc f(in) dsn('"ArcDSN"("ArcMem")')"Vol "SHR REUSE"
   "ExecIO * DiskR in (STEM Arc. FINIS"
   "Free f(in)"
   ms = 'MEMBER('                /* string to look for */
   lp = Pos(ms,Translate(Arc.1))
   if lp <> 0 then ms = SubStr(Arc.1,lp,Length(ms))
   parse VAR Arc.1 Left (ms) . ')' Right
   Arc.1 = Strip(Left,'T') 'Member('UDARen')'||Right
   NewArc = Strip(Left(UDARen,7))'{'
   address ISPExec
   /* Check for contention */
   if NewArc = ArcMem then RC = 4           /* contention with self */
   else "LMMFind DataID(&DID) Member(&NewArc)"
   if RC = 0 then do
      "LMGet DataID(&DID) Mode(INVAR) MaxLen(80) DataLoc(Data) DataLen(Len)"
      parse UPPER VAR Data 2 Type Info
      if Type = 'RESOLVE' then parse VAR Info 'ID('ConID')'
      else do
         "LMClose DataID(&DID)"
         address TSO
         parse VAR Info 'MEMBER('OldMem')'
         Parms. = 0
         ConID = ''
         if zParms then do
            "Alloc f(in) dsn('"ArcDSN"(Z{PARMS{)')"Vol "SHR REUSE"
            "ExecIO * DiskR in (STEM Parms. FINIS"
            "Free f(in)"
            do i=1 to Parms.0
               parse UPPER VAR Parms.i 2 Type Info
               if Type <> 'RESOLVE' then iterate
               pl = i
               parse UPPER VAR Parms.i . 'ID('ConID')'
            end
         end
         if ConID <> '' then ConID = Right(ConID+1,4,0)
         else do
            ConID = '0000'
            pl = Parms.0+1; Parms.0 = pl
         end
         Parms.pl = ')Resolve ID('ConID')'
         "Alloc f(out) dsn('"ArcDSN"(Z{PARMS{)')"Vol "SHR REUSE"
         "ExecIO" Parms.0 "DiskW out (STEM Parms. FINIS"
         "Free f(out)"
         OldArc = 'Z{'ConID||SubStr(OldMem,8)||'{'
         address ISPExec
         "LMOpen DataID(&DID) Option(OUTPUT)"
         "LMMRen DataID(&DID) Member(&NewArc) NewName(&OldArc)"
         Data = Parms.pl
         "LMPut DataID(&DID) Mode(INVAR) DataLoc(Data) DataLen(80)"
         "LMMAdd DataID(&DID) Member(&NewArc) Stats(NO)"
      end
      ConID = Right(ConID,4,0)
      NewArc = 'Z{'ConID||SubStr(UDARen,8)||'{'
   end
   "LMClose DataID(&DID)"
   address TSO
   "Alloc f(out) dsn('"ArcDSN"("NewArc")')"Vol "SHR REUSE"
   "ExecIO * DiskW out (STEM Arc. FINIS"
   "Free f(out)"
   address ISPExec
   "LMOpen DataID(&DID) Option(OUTPUT)"
   if NewArc <> ArcMem then
      "LMMDel DataID(&DID) Member(&ArcMem)"
   if ArcCopy then
      "LMMRen DataID(&DID) Member(&Mem) NewName(&UDARen)"
   "LMClose DataID(&DID)"
   "LMFree DataID(&DID)"
   "LMInit DataID(DID) DataSet('"DSN"')"Vol "Enq(SHRW)"
   "LMOpen DataID(&DID) Option(OUTPUT)"
   "LMMRen DataID(&DID) Member(&Mem) NewName(&UDARen)"
   end
When Cmd = 'D' then do
   "VGet (ZMemConf)"
   if ZMemConf <> 'OFF' then do
      ZCFDSN = DSN
      ZCFMEM = Mem
      "AddPop"
      "Display Panel(ISRUDELC)"
      RV = RC
      "RemPop"
      if RV <> 0 then signal Done
   end
   "LMClose DataID(&DID)"
   "LMFree DataID(&DID)"
   address TSO
   if IsArc then do
      "Alloc f(in) dsn('"ArcDSN"("ArcMem")')"Vol "SHR REUSE"
      "ExecIO 1 DiskR in (STEM Head"
      parse UPPER VAR Head1 'HEADER('Header')' 1 'DATA('Data')'
      if Header = '' then Header = 0
   end; else Data = ''
   /* if the archive is already wrapped then ignore the new junk */
   if Data <> '' then do
      "ExecIO 0 DiskR in (FINIS"
      "Free f(in)"
   end; else do
      /* Wrap the data into the archive */
      if IsArc = 0 then do
         Header = 0
         address ISPExec
         "LMInit DataID(DID) DataSet('"DSN"')"Vol "Enq(SHRW)"
         "LMOpen DataID(&DID)"
         "LMMFind DataID(&DID) Member(&Mem) STATS(YES)"
         "LMClose DataID(&DID)"
         "LMFree DataID(&DID)"
         if ZLVers <> '' then do
            Stats = 'Version('ZLVers'.'ZLMod')',
                    'User('ZLUser')',
                    'Modified('ZLM4Date ZLMTime':'ZLMSec')'
            Header = 1
            Header.1 = '-Stats' Stats
         end
         Header.0 = Header
         address TSO
      end; else do
         if Header = 0 then Header.0 = 0
         else "ExecIO" Header "DiskR in (STEM Header."
         "ExecIO * DiskR in (STEM Arc. FINIS"
         "Free f(in)"
      end
      "Alloc f(data) dsn('"DSN"("Mem")')"Vol "SHR REUSE"
      "ExecIO * DiskR data (STEM Data. FINIS"
      "Free f(data)"
      if a#Open('OUT',VolSer':'DSN'('Mem')','WRITE') <> '' then do
         push ')Current Header('Header+1') Data('Data.0') Member('Mem')'
         "ExecIO 1 DiskW out"
         "ExecIO * DiskW out (STEM Header."
         Mod = Translate('1234/56/78',Date('S'),'12345678') Time()
         push '-Hist (Deleted at' Mod 'by' UserID()')'
         "ExecIO 1 DiskW out"
         "ExecIO * DiskW out (STEM Data."
         "ExecIO * DiskW out (STEM Arc. FINIS"
         "Free f(out)"
      end
   end
   address ISPExec
   if ArcCopy then do
      "LMInit DataID(DID) DataSet('"ArcDSN"')"Vol "Enq(SHRW)"
      "LMOpen DataID(&DID) Option(OUTPUT)"
      "LMMDel DataID(&DID) Member(&Mem)"
      "LMClose DataID(&DID)"
      "LMFree DataID(&DID)"
   end
   "LMInit DataID(DID) DataSet('"DSN"')"Vol "Enq(SHRW)"
   "LMOpen DataID(&DID) Option(OUTPUT)"
   "LMMDel DataID(&DID) Member(&Mem)"
   end
Otherwise nop
End
/* All done */
Done:
"LMClose DataID(&DID)"
"LMFree DataID(&DID)"
if ZTerm <> '3278' & ZTerm <> '3278A' then
   "Select Pgm(ISPTTDef) Parm("ZTerm")"
exit 8

/* Let ISPF handle this one. */
Quit:
"LMClose DataID(&DID)"
"LMFree DataID(&DID)"
if ZTerm <> '3278' & ZTerm <> '3278A' then
   "Select Pgm(ISPTTDef) Parm("ZTerm")"
exit 0
