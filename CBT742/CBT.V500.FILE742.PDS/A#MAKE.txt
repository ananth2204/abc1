/* Rexx function to make a temporary dataset containing a specific
*  Dataset(Member) at a specific Version() User() Modified() level.
*  Usage: a#Make(ArcKey,Stats)
*  Returns the dataset name of the temporary dataset.
*  ArcKey is in the format Volume:DSN(Member),
*  Stats is in the format
*  Version(vv.ll) User(uuuuuuu) Modified(yyyy/mm/dd hh:mm:ss)
*.
*. 2005/12/02 Use the archive copy, not the edited dataset.
*. 2005/08/09 Created by bsquare
*/
arg ArcKey,Stats
if ArcKey = '' then signal Macro
parse VAR ArcKey Vol ':' DSN
if DSN = '' then parse VAR Vol DSN,Vol
parse VAR DSN DSN '('Mem')'
if DSN = '' then return ''

if Vol <> '' then Vol = ' VOLUME('Vol')'
if ListDSI("'"DSN"'"Vol) <> 0 then return ''
RecFm = Left(SysRecFm,1)
if RecFm <> 'F' & RecFm <> 'V' then return ''

/* Find LLQ of ArcKey */
LLQ = Translate(DSN,,'.')
LLQ = Word(LLQ,Words(LLQ))
Temp = 'DS'Right(Time('S'),5,0)
TempDS = 'TEMP.'Temp'.'LLQ
address TSO
"Alloc f("Temp") dsn("TempDS") NEW CATALOG",
   "RecFm("RecFM "B) LRecL("SysLRecL") DSOrg(PS) SPACE(15,15) TRACKS"
if RC <> 0 then return ''
"Free f("Temp")"

address ISPExec
"VPut (ArcKey Stats) SHARED"
"Edit DataSet("TempDS") MACRO(a#Make)"
return TempDS

Macro:
   address ISPExec
   "Control ERRORS RETURN"
   "VGet (ArcKey Stats) SHARED"
   if RC <> 0 then return
   address ISREdit
   "Macro"
   if RC <> 0 then return

   parse VALUE a#Open('IN',ArcKey,'READ') WITH Archive VolInfo
   if Archive = '' then signal Cancel
   address TSO
   "ExecIO * DiskR in (STEM Arc. FINIS"
   "Free f(in)"

   address ISREdit
   parse VAR ArcKey Vol ':' DSN
   if DSN = '' then parse VAR Vol DSN,Vol

   /* Set up the initial dataset contents */
   if Arc.0 = 0 then signal Cancel          /* empty archive */
   parse UPPER VAR Arc.1 2 Section . 'HEADER('Header')',
         1 'DATA('Data')' 1 'MEMBER('Mem')'
   if Section <> 'CURRENT' then signal Cancel /* bad archive */
   if Header = '' then Header = 0
   if Data <> '' then do
      do i=1 to Data
         Cur = Value('ARC.'Header+i+1)
         "LINE_AFTER" i-1 "= (Cur)"
      end
   end; else do
      if Mem = '' then signal Cancel        /* No archive copy! */
      parse VAR Archive ArcDSN '('
      ArcCopy = ArcDSN'('Mem')'
      if VolInfo = '' then do
         "COPY '"ArcCopy"' BEFORE .ZFIRST"
         if RC <> 0 then signal Cancel      /* No archive copy! */
      end; else do
         address TSO
         "Alloc f(in) dsn('"ArcCopy"')"VolInfo "SHR REUSE"
         if RC <> 0 then signal Cancel
         "ExecIO * DiskR in (STEM In. FINIS"
         "Free f(in)"
         address ISREdit
         do i=1 to In.0
            Cur = In.i
            "LINE_AFTER" i-1 "= (Cur)"
         end
      end
   end
   if Data = '' then Data = 0

   parse UPPER VAR Stats,
      'VERSION('Vers')' 1 'USER('User')' 1 'MODIFIED('Mod')'
   if Mod <> '' then Key = 'MOD'
   else if Vers <> '' then Key = 'VERS'
   else Key = 'USER'
   ln = 2
   do until ln > Arc.0 | Value(Key) = Value('A'Key)
      aVers = '00.00'; aUser = ''; aMod = ''
      do Header
         parse UPPER VALUE ln+1||Arc.ln WITH ln '-' Type Info
         if Type <> 'STATS' then iterate
         parse VAR Info,
            'VERSION('aVers')' 1 'USER('aUser')' 1 'MODIFIED('aMod')'
      end
      last = ln+Data
      offset = 0                   /* line offset */
      if Section = 'ARCHIVE' then do while ln < last
         parse UPPER VALUE ln+1||Arc.ln WITH ln '-' Type Info
         Select
         When Type = 'INS' then do          /* Insert Lines at Start */
            parse VAR Info 'LINES('Lines')' 1 'START('Start')'
            Start = Start-1
            do i=ln to ln+Lines-1
               Cur = Arc.i
               "LINE_AFTER &Start = (Cur)"
               Start = Start+1
            end
            ln = ln+Lines
            offset = offset + Lines
            end
         When Type = 'DEL' then do
            parse VAR Info 'COUNT('Count')' 'START('Start')'
            Start = Start + offset
            do Count
               "DELETE &Start"
            end
            offset = offset - Count
            end
         Otherwise nop
         End
      end
      ln = last
      parse UPPER VALUE ln+1||Arc.ln WITH ln ')' Section Info
      if Section <> 'ARCHIVE' then leave
      parse VAR Info 'HEADER('Header')' 1 'DATA('Data')'
      if Header = '' then Header = 0
      if Data   = '' then Data   = 0
   end
   "BUILTIN SAVE"
   "BUILTIN END"
   exit

Cancel: /* Cancel the macro - major error */
   address ISREdit "CANCEL"
   exit
