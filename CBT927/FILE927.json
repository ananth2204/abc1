{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013457000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE927.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE927.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x0c'", "DS1TRBAL": "b'l`'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\tZ\\x00\\x02\\tZ\\x00\\x04\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Z\\x00\\t\\x01\\x15\\x01/\\x01\\x15\\x01/\\x116\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf0@@@'", "ispf": {"version": "04.90", "flags": 0, "createdate": "2015-01-12T00:00:00", "modifydate": "2015-01-12T11:36:09", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-490"}, "text": "REGULAR CBT TAPE - VERSION 490    FILE:  927\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT490.FILE927\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 3 MEMBERS COUNTED; CUMULATIVE SIZE IS 264 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   01/12/15    11:36:09    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE927": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Z\\x00\\x03\\x01\\x15\\x01/\\x01\\x15\\x01/\\x116\\x00\\t\\x00\\t\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf0@@@'", "ispf": {"version": "04.90", "flags": 0, "createdate": "2015-01-12T00:00:00", "modifydate": "2015-01-12T11:36:03", "lines": 9, "newlines": 9, "modlines": 0, "user": "CBT-490"}, "text": "//***FILE 927 is from Steve Wentworth and contains a program        *   FILE 927\n//*           called PRMEVSAM, which writes and deletes a zero      *   FILE 927\n//*           record to a newly defined VSAM cluster so that a      *   FILE 927\n//*           COBOL program can begin doing I/O to the cluster      *   FILE 927\n//*           past the first record.                                *   FILE 927\n//*                                                                 *   FILE 927\n//*           email:  Steven.Wentworth@ca.com                       *   FILE 927\n//*                   slwcis@cs.com                                 *   FILE 927\n//*                                                                 *   FILE 927\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRMEVSAM": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x001\\x01\\x15\\x00\\x9f\\x01\\x15\\x00\\x9f\\x12Q\\x00\\xf3\\x00\\xf3\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-01-09T00:00:00", "modifydate": "2015-01-09T12:51:31", "lines": 243, "newlines": 243, "modlines": 0, "user": "SBGOLOB"}, "text": "         TITLE 'PRMEVSAM - PRIME VSAM - STEVE WENTWORTH'\n***********************************************************************\n*                                                                     *\n*                P R I M E   V S A M   C L U S T E R                  *\n*                                                                     *\n* THIS PROGRAM WRITES A KEYED RECORD TO A VSAM CLUSTER.               *\n* THE KEY AND DATA ARE ALL X'00'.                                     *\n*                                                                     *\n* THIS PROGRAM THEN READS THIS RECORD AND THEN DELETES THE RECORD.    *\n*                                                                     *\n* COBOL PROGRAMS CAN NOW OPEN THIS VSAM CLUSTER FOR I/O.              *\n* THERE IS NO LONGER A NEED FOR A SPECIAL 'INITIAL RECORD DELETE'     *\n* STEP OR PROCESSING CODE TO SKIP THE FIRST RECORD OF THIS CLUSTER.   *\n*                                                                     *\n***********************************************************************\n*\n*\n*\n***********************************************************************\n*                                                                     *\n*                S A M P L E   E X E C U T I O N   J C L              *\n*                                                                     *\n*//         JOB                                                       *\n*//* STEPNAME                TASK                                     *\n*//* --------            -------------------------------------------- *\n*//* IDC1                DEFINE BASE CLUSTER WITH INDEX AND DATA.     *\n*//*                     DISPLAY CATALOG INFORMATION.                 *\n*//*                     NOTE HI-USED RBA.                            *\n*//* PRMEVSAM            WRITE RECORD WITH X'00' KEY AND DATA.        *\n*//*                     DELETE THIS RECORD.                          *\n*//* IDC2                DISPLAY CATALOG INFORMATION.                 *\n*//*                     NOTE HI-USED RBA.                            *\n*//*                                                                  *\n*//IDC1   EXEC  PGM=IDCAMS                                            *\n*//SYSPRINT DD SYSOUT=*                                               *\n*//SYSIN    DD *                                                      *\n* DELETE (VSAM.SAMPLE.C)                                              *\n* DEFINE CLUSTER(NAME(VSAM.SAMPLE.C)           +                      *\n*          VOLUME(VSAM00)                      +                      *\n*          RECORDSIZE(80,80)                   +                      *\n*          RECORDS(100,50)                     +                      *\n*          INDEXED                             +                      *\n*          KEYS(5,0)                           +                      *\n*          SHAREOPTIONS(1,3)       )           +                      *\n*        INDEX(NAME(VSAM.SAMPLE.I)             +                      *\n*          CISZ(2048)              )           +                      *\n*        DATA(NAME(VSAM.SAMPLE.D)              +                      *\n*          CISZ(4096)              )                                  *\n* LISTC LEVEL(VSAM.SAMPLE)                     +                      *\n*       ALL                                                           *\n*//PRMEVSAM EXEC PGM=PRMEVSAM                                         *\n*//DS      DD DSN=VSAM.SAMPLE.C,DISP=SHR                              *\n*//SYSUDUMP DD SYSOUT=*                                               *\n*//IDC2   EXEC  PGM=IDCAMS                                            *\n*//SYSPRINT DD SYSOUT=*                                               *\n*//SYSIN    DD *                                                      *\n* LISTC LEVEL(VSAM.SAMPLE)                     +                      *\n*       ALL                                                           *\n*                                                                     *\n***********************************************************************\n*\n*\n*\n***********************************************************************\n*                                                                     *\n*                R E G I S T E R   U S A G E                          *\n*                                                                     *\n* R0:   ABEND MACRO                                                   *\n* R1:   SYSTEM SERVICES MACROS AND IO MACROS                          *\n* R4:   ADDRESS OF LOGICAL RECORD AREA                                *\n* R5:   LENGTH OF LOGICAL RECORD                                      *\n* R6:   SECOND OPERAND ADDRESS (X'00000000') FOR MVCL                 *\n* R7:   PADDING BYTE AND LENGTH (X'00000000') FOR MVCL                *\n* R12:  PROGRAM BASE ADDRESS REGISTER                                 *\n* R13:  ADDRESS OF REGISTER SAVE AREA                                 *\n* R14:  RETURN ADDRESS                                                *\n* R15:  ENTRY POINT ADDRESS/RETURN CODE                               *\n*                                                                     *\n***********************************************************************\n*\n*\n*\n***********************************************************************\n*                                                                     *\n*              L O A D   M O D U L E   A T T R I B U T E S            *\n*                                                                     *\n* NOT REENTERABLE                                                     *\n* ADDRESSING MODE = 24                                                *\n* RESIDENCY MODE  = 24                                                *\n*                                                                     *\n***********************************************************************\n*\n*\n*\n***********************************************************************\n*                                                                     *\n*                C H A N G E   H I S T O R Y                          *\n*                                                                     *\n* 31-JUL-91/0900     VERSION 1 RELEASE 0                              *\n*                                                                     *\n***********************************************************************\n         EJECT\n         MACRO\n         CPYRIGHT &VER=1,&REL=0\n         USING &SYSECT,15\n         B     CPYR&SYSNDX        BRANCH OVER IDENTIFIER AND COPYRIGHT\n         DROP  15\n         DC    CL8'&SYSECT'       CSECT NAME\n         DC    C'VERSION &VER'    VERSION LEVEL\n         DC    C'RELEASE &REL'    RELEASE LEVEL\n         DC    C'&SYSDATE'        ASSEMBLY DATE\n         DC    C'&SYSTIME'        ASSEMBLY TIME\n         DC    C'STEVE WENTWORTH' AUTHOR NAME\n         DC    C'COPYRIGHT 1991'  COPYRIGHT NOTICE\nCPYR&SYSNDX CNOP 0,4\n         MEND\n         MACRO\n         REGEQU\n         LCLA  &RN\n&RN      SETA  0\n.GENEQU  ANOP\nR&RN     EQU   &RN\n&RN      SETA  &RN+1\n         AIF   (&RN NE 16).GENEQU\n         MEND\n         MACRO\n         BEGPGM\n         STM   14,12,12(13)       SAVE CALLER'S REGISTER CONTENTS\n         LR    12,15              PLACE BASE ADDRESS INTO REGISTER 12\n         USING &SYSECT,12         ESTABLISH ADDRESSABILITY\n         LA    2,RSVE&SYSNDX      R2 ==> THIS CSECT'S REG SAVE AREA\n         ST    2,8(,13)           CALLER'S SAVE ==> THIS SAVE AREA\n         ST    13,4(,2)           THIS SAVE ==> CALLER'S SAVE AREA\n         LR    13,2               R13 ==> THIS CSECT'S REG SAVE AREA\n         B     RSVE&SYSNDX+(4*18) BRANCH OVER REGISTER SAVE AREA\nRSVE&SYSNDX DC  18F'0'            REGISTER SAVE AREA\n         MEND\n         MACRO\n         ENDPGM\n         L     13,4(,13)          R13 ==> CALLER'S REGISTER SAVE AREA\n         LM    14,12,12(13)       RESTORE CALLER'S REGISTER CONTENTS\n         XR    15,15              SET RETURN CODE TO ZERO\n         BR    14                 RETURN TO CALLER\n         MEND\n         MACRO\n&L       PATCH  &NBYTES=64,&PRINT=NOGEN\n         PUSH  PRINT\n         PRINT &PRINT\n&L       DS    0F\n         DC    &NBYTES.S(*)\n         POP   PRINT\n         MEND\n         EJECT\nPRMEVSAM CSECT\n         REGEQU                   R0 EQU 0, ETC.\n         CPYRIGHT                 IDENTIFIER AND COPYRIGHT\n         EJECT\n         BEGPGM                   BEGIN PROGRAM EXECUTION\n*\n* CREATE AND WRITE THE NULL RECORD\n*\n         OPEN  (DS)               CONNECT VSAM CLUSTER TO PROGRAM\n         LTR   R15,R15            OK OPEN?\n         BNZ   OPENERR            NO\n         SHOWCB ACB=DS,           OBTAIN LRECL                         X\n               AREA=RECLEN,                                            X\n               LENGTH=4,                                               X\n               FIELDS=(LRECL)\n         LTR   R15,R15            OK SHOWCB?\n         BNZ   SHOWERR            NO\nGETSTOR  GETMAIN EU,              ACQUIRE STORAGE FOR LOGICAL RECORD   X\n               LV=RECLEN,                                              X\n               A=@AREA,                                                X\n               RELATED=(FREESTOR,'GET STORAGE')\n         LTR   R15,R15            OK GETMAIN?\n         BNZ   GETMNERR           NO\n         L     R4,@AREA           R4 ==> LOGICAL RECORD AREA\n         L     R5,RECLEN          R5 CONTAINS LOGICAL RECORD LENGTH\n         MODCB RPL=RPL,           MODIFY THE RPL CONTROL BLOCK         X\n               AREA=(4),                                               X\n               AREALEN=(5),                                            X\n               RECLEN=(5)\n         LTR   R15,R15            OK MODCB?\n         BNZ   MODERR             NO\n         XR    R6,R6              SET SECOND OPERAND ADDRESS FOR MVCL\n         XR    R7,R7              SET PAD AND LENGTH TO X'00' FOR MVCL\n         MVCL  R4,R6              PLACE ALL X'00' INTO LOGICAL RECORD\n         PUT   RPL=RPL            WRITE A LOGICAL RECORD\n         LTR   R15,R15            OK PUT?\n         BNZ   PUTERR             NO\n         CLOSE (DS)               DISCONNECT VSAM CLUSTER FROM PROGRAM\n         LTR   R15,R15            OK CLOSE?\n         BNZ   CLOSEERR           NO\n*\n* READ AND DELETE THE NULL RECORD\n*\n         MODCB ACB=DS,            MODIFY THE ACCESS CONTROL BLOCK      X\n               MACRF=(KEY,SEQ,OUT)\n         LTR   R15,R15            OK MODCB?\n         BNZ   MODERR             NO\n         MODCB RPL=RPL,           MODIFY THE REQUEST PARAMETER LIST    X\n               OPTCD=(KEY,SEQ,UPD)\n         LTR   R15,R15            OK MODCB?\n         BNZ   MODERR             NO\n         OPEN  (DS)               CONNECT VSAM CLUSTER TO PROGRAM\n         LTR   R15,R15            OK OPEN?\n         BNZ   OPENERR            NO\n         GET   RPL=RPL            READ LOGICAL RECORD\n         LTR   R15,R15            OK GET?\n         BNZ   GETERR             NO\n         ERASE RPL=RPL            DELETE LOGICAL RECORD\n         LTR   R15,R15            OK ERASE?\n         BNZ   ERASEERR           NO\n         CLOSE (DS)               DISCONNECT VSAM CLUSTER FROM PROGRAM\n         LTR   R15,R15            OK CLOSE?\n         BNZ   CLOSEERR           NO\nFREESTOR FREEMAIN EU,             RELEASE STORAGE                      X\n               LV=RECLEN,                                              X\n               A=@AREA,                                                X\n               RELATED=(GETSTOR,'FREE STORAGE')\n         LTR   R15,R15            OK FREEMAIN?\n         BNZ   FREEMNER           NO\n         ENDPGM                   END PROGRAM EXECUTION\n         PATCH PRINT=GEN          PATCH AREA\n         EJECT\nDS       ACB   AM=VSAM,           ACCESS CONTROL BLOCK                 X\n               DDNAME=DS,                                              X\n               MACRF=(DIR,OUT)\nRPL      RPL   AM=VSAM,           REQUEST PARAMETER LIST               X\n               ACB=DS\n@AREA    DC    F'0'               ADDRESS OF LOGICAL RECORD AREA\nRECLEN   DC    F'0'               LENGTH OF LOGICAL RECORD\n         EJECT\nOPENERR  ABEND 101,DUMP           ERROR PROCESSING\nSHOWERR  ABEND 102,DUMP\nMODERR   ABEND 103,DUMP\nPUTERR   ABEND 104,DUMP\nGETERR   ABEND 105,DUMP\nERASEERR ABEND 106,DUMP\nCLOSEERR ABEND 107,DUMP\nGETMNERR ABEND 108,DUMP\nFREEMNER ABEND 109,DUMP\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT927/FILE927.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT927", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}