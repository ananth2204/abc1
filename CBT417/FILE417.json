{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011958000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 3585946, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE417.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 3585946, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 3585946, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE417.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x007\\n'", "DS1TRBAL": "b'\\tn'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\x05\\x00\\x08\\x03\\t\\x00\\x03\\x008'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x00%\\x01 4/\\x01 4/\\x15\\x15\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "2020-12-07T00:00:00", "modifydate": "2020-12-07T15:15:25", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-500"}, "text": "REGULAR CBT TAPE - VERSION 500    FILE:  417\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT500.FILE417\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 13 MEMBERS COUNTED; CUMULATIVE SIZE IS 33,722 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/07/20    15:15:25    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$README": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x19\\x01 \\x02\\x1f\\x01 \\x17\\x7f\\x08T\\x00,\\x00\\x12\\x00\\x00\\xd9\\xc5\\xc1\\xc4\\xd4\\xc5@@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "2020-01-21T00:00:00", "modifydate": "2020-06-25T08:54:19", "lines": 44, "newlines": 18, "modlines": 0, "user": "README"}, "text": "           RACFADM is the Enhanced RACF Administration application.\n\nDetails and usage are found in the ISPF Dialog Tutorials accessed using the F1\nkey.\n\nThe package consists of 4 datasets:\n\n   1. This PDS that you are reading\n   2. Four XMIT files:\n        RACFADM.EXEC.XMIT      - REXX Execs that drive the dialog\n        RACFADM.MSGS.XMIT      - ISPF Messages\n        RACFADM.PANELS.XMIT    - ISPF Panels\n        RACFADM.SKELS.XMIT     - ISPF Skeletons\n\nTo create usable datasets from the .XMIT datasets execute the $INSTALL member\nof this PDS - follow the prompts.\n\nAccess to three of the IBM RACF ISPF dialogs is available, but requires that\nthe RACFSITE REXX program be updated with the correct HLQ and LLQ's for the\nIBM RACF ISPF dialog datasets.\n\nThen to use the application execute the hlq.RACFADM.EXEC member RACFADM\nwhich all LIBDEF and ALTLIB the required libraries and then start the\napplication.\n\nInstallation Suggestions:\n\n1. Tailor the $STUB REXX code and then copy it into a library in the SYSEXEC\n   (or SYSPROC) allcation with the name RACFADM. This is modelled after Tom\n   Conley's Dynamic ISPF approach.\n\n2. If you have PLP installed (see PLPISPF in file 312 at cbttape.org)\n   then add a menu item with these values:\n\n   Application Name      RACFADM  A unique application name 1-8 characters\n   Description           Easy RACF Administration ISPF Dialog\n   ISPF Message Dataset\n   ISPF Panel Dataset\n   REXX EXEC Library     'hlq.RACFADM.EXEC'\n   REXX SKELS Library\n   Application Start (select one):\n      Command %RACFADM\n      Program             Parm\n      ISPF Panel          Panel option\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$DOC": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00&\\x01 \\x03\\x7f\\x01 \\x03\\x7f\\tB\\x00\\x11\\x00\\x11\\x00\\x00\\xc9\\xd5\\xe3\\xd9\\xd6@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-02-06T00:00:00", "modifydate": "2020-02-06T09:42:26", "lines": 17, "newlines": 17, "modlines": 0, "user": "INTRO"}, "text": "*---------------------------------------------------------------------*\n*                            Introduction                             *\n*---------------------------------------------------------------------*\nRACF Administration (RACFADM) makes many security tasks simple.  It\nlists user, group, data set, and general resource profiles by means of a\nuser-friendly, menu-driven interface; it provides interactive\nmodification of most fields.\n\nAmong its features are: connecting groups to a user, adding permissions,\nuser authorization searching across classes, and displaying the group\nfrom which an authorization is granted.\n\nWritten in customizable Rexx, RACFADM includes an exec to automate\ncreation of aliases or data sets when creating a new TSO user and can\nbrowse all RACF system options from a single, scrollable display.\n\nTo begin using execute the RACFADM member found in the EXEC library.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$INSTALL": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00!\\x01 \\x02\\x1f\\x01 \\x18/\\x11E\\x00t\\x00l\\x00\\x00\\xd9\\xe4\\xd5\\xd4\\xc5@@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2020-01-21T00:00:00", "modifydate": "2020-06-30T11:45:21", "lines": 116, "newlines": 108, "modlines": 0, "user": "RUNME"}, "text": "/* this rexx exec is expected to be invoked by the EXEC command\n   thus:\n\n   EXec 'dsname($INSTALL)'\n\n   Prompting will occur for hlq and optional volser.\n\n   and it will then issue the TSO RECEIVE command for the\n   the following members to create these new data sets:\n\n   Member       Dataset\n   EXEC         hlq.EXEC\n   MSGS         hlq.MSGS\n   PANELS       hlq.PANELS\n   SKELS        hlq.SKELS\n\n   You will then need to copy these datasets/members into\n   datasets for production use.\n\n   After these data sets are created several of the members\n   of this install data set will be browsed.\n   */\n\n  parse source x1 x2 x3 x4 dsn .\n  x = PROMPT(\"ON\") /* enable prompting */\n\n  say \"Enter desired hlq for target data sets\",\n    \"(default is\" sysvar(\"syspref\")\".racfadm.NEW):\"\n  pull hlq\n  hlq = strip(hlq)\n\n  if hlq = \"\" then hlq = sysvar(\"syspref\")\".racfadm.NEW\"\n  hlq = translate(hlq)\n\n  say \"Enter optional volser for target data sets\",\n    \"default is to allow standard allocation to\",\n    \"find a volume. Note the volser may be ignored by\" ,\n    \"storage management classes.\"\n  pull volser\n  volser = strip(volser)\n\n  say \"Enter optional SYSOUT class for RECEIVE messages,\" ,\n    \"a null SYSOUT class is recommended.\"\n  pull sysout\n  sysout = strip(sysout)\n  if sysout <> \"\" then sys = \"sysout(\"sysout\")\"\n  else sys = \"\"\n\n  if volser <> \"\" then vol = \"vol(\"volser\")\"\n  else vol = \"\"\n\n  Say \"Using HLQ:\" hlq\n  if vol <> \"\" then\n  Say \"Using Volser:\" volser\n\n/* ----------------------------------------------- *\n * Check for an ISPF environment and then check to *\n * see if the receive target datasets exist. If so *\n * then compress  them before the receive.         *\n * ----------------------------------------------- */\n  if sysvar('sysispf') = \"ACTIVE\" then do\n    Address ISPEXEC\n    call do_comp   \"'\"hlq\".exec'\"\n    call do_comp   \"'\"hlq\".msgs'\"\n    call do_comp   \"'\"hlq\".panels'\"\n    call do_comp   \"'\"hlq\".skels'\"\n    Address TSO\n  end\n\n/* ------------------------------------------------------------ *\n * Process the TSO RECEIVE command on all the pertinent members *\n * ------------------------------------------------------------ */\n  queue \"dsn('\"hlq\".exec')\"  sys vol\n  \"Receive inds('\"dsn\"(exec)')\"\n  queue \"dsn('\"hlq\".msgs')\"  sys vol\n  \"Receive inds('\"dsn\"(msgs)')\"\n  queue \"dsn('\"hlq\".panels')\"  sys vol\n  \"Receive inds('\"dsn\"(panels)')\"\n  queue \"dsn('\"hlq\".skels')\"  sys vol\n  \"Receive inds('\"dsn\"(skels)')\"\n\n/* -------------------------------------------- *\n * If ISPF is active show key members in Browse *\n * -------------------------------------------- */\n  if sysvar('sysispf') <> \"ACTIVE\" then exit\n  Address ISPEXEC\n  \"Browse dataset('\"dsn\"(readme)')\"\n  \"Edit dataset('\"hlq\".panels($defsetg)')\"\n  Address TSO ,\n  \"Altlib act app(exec) dataset('\"dsn\"')\"\n  \"Edit dataset('\"hlq\".exec($stub)') macro($macstub) parm(hlq)\"\n  Address TSO ,\n  \"Altlib deact app(exec)\"\n\n/* ------------------------------------------------- *\n * Now display a list of the received datasets using *\n * ISPF LMM services (ISPF 3.4)                      *\n * ------------------------------------------------- */\n  Address ISPExec\n  if vol <> \"\" then lmvol = \"VOLUME(\"volser\")\"\n  else lmvol = \"\"\n  \"LMDINIT LISTID(LISTID) LEVEL(\"hlq\")\"\n  \"LMDDISP LISTID(\"ListId\") Confirm(Yes)\",\n    \"View(Volume)\"\n  \"LMDFREE LISTID(\"ListId\")\"\n\n  Exit\n\nDo_Comp: procedure\n  arg compdsn\n  if sysdsn(compdsn) /= 'OK' then return\n  say \"Compressing:\"  compdsn\n  \"LMInit dataid(compress) enq(exclu) dataset(\"compdsn\")\"\n  \"LMComp Dataid(\"compress\")\"\n  \"LMFree Dataid(\"compress\")\"\n  return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$MACSTUB": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01 \\x18\\x1f\\x01 \\x18\\x1f\\x10V\\x00\\x04\\x00\\x04\\x00\\x00\\xc5\\xd3\\xc5\\xd4\\xc5\\xd5\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-06-29T00:00:00", "modifydate": "2020-06-29T10:56:44", "lines": 4, "newlines": 4, "modlines": 0, "user": "ELEMENT"}, "text": "/* rexx */\n  Address ISREdit\n  'Macro (hlq)'\n  ISREdit 'change first 'radmhlq hlq\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$STUB": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x002\\x01 \\x13O\\x01 \\x16O\\x160\\x00\\x1d\\x00\\x0b\\x00\\x00\\xe2\\xc1\\xd4\\xd7\\xd3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2020-05-13T00:00:00", "modifydate": "2020-06-12T16:30:32", "lines": 29, "newlines": 11, "modlines": 0, "user": "SAMPLE"}, "text": "  /* --------------------  rexx procedure  -------------------- *\n  | Name:      RACFADM Stub                                    |\n  |                                                            |\n  | Function:  Allocate the RACFADM Libraries and then         |\n  |            invoke the RACFADM application.                 |\n  |                                                            |\n  | Syntax:    %racfadm                                        |\n  |                                                            |\n  | Usage Notes: 1. Copy into a library in the standard        |\n  |                 SYSEXEC (or SYSPROC) allocations for the   |\n  |                 intended users.                            |\n  |              2. Tailor the HLQ variable for the RACFADM    |\n  |                 high-level-qualifier.                      |\n  |                                                            |\n  * ---------------------------------------------------------- */\n  hlq = 'radmhlq'   /* <=== Change this variable */\n\n  Address TSO\n  \"Altlib Act App(Exec) Dataset('\"hlq\".racfadm.exec')\"\n  Address ISPExec\n  \"Libdef ISPMLIB Dataset ID('\"hlq\".racfadm.msgs') stack\"\n  \"Libdef ISPPLIB Dataset ID('\"hlq\".racfadm.panels') stack\"\n  \"Libdef ISPSLIB Dataset ID('\"hlq\".racfadm.skels') stack\"\n  \"Select Cmd(%RacfADM NA) NewAppl(RADM) Passlib\"\n  \"Libdef ISPMLIB\"\n  \"Libdef ISPPLIB\"\n  \"Libdef ISPSLIB\"\n  Address TSO\n  \"Altlib DeAct App(Exec)\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE417": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\x00\\x00\\x19\\x01 4/\\x01 4/\\x15\\x15\\x00\\x15\\x00\\x15\\x00\\x00\\xc3\\xc2\\xe3`\\xf5\\xf0\\xf0@@@'", "ispf": {"version": "05.00", "flags": 0, "createdate": "2020-12-07T00:00:00", "modifydate": "2020-12-07T15:15:19", "lines": 21, "newlines": 21, "modlines": 0, "user": "CBT-500"}, "text": "//***FILE 417 is from a team working to make RACF Administration    *   FILE 417\n//*           easy for the z/OS Security Administrator.             *   FILE 417\n//*                                                                 *   FILE 417\n//*  Version 34.7 - Updated 12/04/2020                              *   FILE 417\n//*                                                                 *   FILE 417\n//*  RACFADM is an open source ISPF Application that makes RACF     *   FILE 417\n//*  Administration easy.                                           *   FILE 417\n//*                                                                 *   FILE 417\n//*       NAME       VER.MOD   LAST MODIFIED     SIZE   ID          *   FILE 417\n//*       $$README    01.18   2020/06/25 08:54     44 README        *   FILE 417\n//*       $DOC        01.02   2020/02/06 09:42     17 INTRO         *   FILE 417\n//*       $INSTALL    01.16   2020/06/30 11:45    116 RUNME         *   FILE 417\n//*       $MACSTUB    01.00   2020/06/29 10:56      4 ELEMENT       *   FILE 417\n//*       $STUB       01.02   2020/06/12 16:30     29 SAMPLE        *   FILE 417\n//*       EXEC        01.00   2020/12/07 04:52  20632 XMIT          *   FILE 417\n//*       INTRO       01.00   2020/03/12 06:33     31 README        *   FILE 417\n//*       MSGS        01.00   2020/12/07 04:52     24 XMIT          *   FILE 417\n//*       PANELS      01.00   2020/12/07 04:52   9847 XMIT          *   FILE 417\n//*       README      01.00   2020/03/12 06:33     31 README        *   FILE 417\n//*       SKELS       01.00   2020/12/07 04:52   2914 XMIT          *   FILE 417\n//*                                                                 *   FILE 417\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EXEC": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00 \\x01 4/\\x01 4/\\x04RP\\x98P\\x98\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-12-07T00:00:00", "modifydate": "2020-12-07T04:52:20", "lines": 20632, "newlines": 20632, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "INTRO": {"ttr": 8966, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00@\\x01 \\x07/\\x01 \\x07/\\x063\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd9\\xc5\\xc1\\xc4\\xd4\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-03-12T00:00:00", "modifydate": "2020-03-12T06:33:40", "lines": 31, "newlines": 31, "modlines": 0, "user": "README"}, "text": "*---------------------------------------------------------------------*\n*                            Introduction                             *\n*---------------------------------------------------------------------*\nRACF Administration (RACFADM) makes many security tasks simple.  It\nlists user, group, data set, and general resource profiles by means of a\nuser-friendly, menu-driven interface; it provides interactive\nmodification of most fields.\n\nAmong its features are: connecting groups to a user, adding permissions,\nuser authorization searching across classes, and displaying the group\nfrom which an authorization is granted.\n\nWritten in customizable Rexx, RACFADM includes an exec to automate\ncreation of aliases or data sets when creating a new TSO user and can\nbrowse all RACF system options from a single, scrollable display.\n\nTo begin using execute the RACFADM member found in the EXEC library.\n\n*---------------------------------------------------------------------*\n*                            Contributors                             *\n*---------------------------------------------------------------------*\n\n             Name                              Website\n  ---------------------------  ---------------------------------------\n  Nico Rizzuto (Creator)       http://www.rizzuto.it\n  Lionel B. Dyck               http://www.lbdsoftware.com/\n                               http://github.com/lbdyck\n                               http://www.cbttape.org/\n  John Kalinich\n  Bill Smith\n  Bruce Koss\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MSGS": {"ttr": 8968, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01 4/\\x01 4/\\x04R\\x00\\x18\\x00\\x18\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-12-07T00:00:00", "modifydate": "2020-12-07T04:52:21", "lines": 24, "newlines": 24, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PANELS": {"ttr": 8970, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01 4/\\x01 4/\\x04R&w&w\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-12-07T00:00:00", "modifydate": "2020-12-07T04:52:21", "lines": 9847, "newlines": 9847, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "README": {"ttr": 13060, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00@\\x01 \\x07/\\x01 \\x07/\\x063\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd9\\xc5\\xc1\\xc4\\xd4\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-03-12T00:00:00", "modifydate": "2020-03-12T06:33:40", "lines": 31, "newlines": 31, "modlines": 0, "user": "README"}, "text": "*---------------------------------------------------------------------*\n*                            Introduction                             *\n*---------------------------------------------------------------------*\nRACF Administration (RACFADM) makes many security tasks simple.  It\nlists user, group, data set, and general resource profiles by means of a\nuser-friendly, menu-driven interface; it provides interactive\nmodification of most fields.\n\nAmong its features are: connecting groups to a user, adding permissions,\nuser authorization searching across classes, and displaying the group\nfrom which an authorization is granted.\n\nWritten in customizable Rexx, RACFADM includes an exec to automate\ncreation of aliases or data sets when creating a new TSO user and can\nbrowse all RACF system options from a single, scrollable display.\n\nTo begin using execute the RACFADM member found in the EXEC library.\n\n*---------------------------------------------------------------------*\n*                            Contributors                             *\n*---------------------------------------------------------------------*\n\n             Name                              Website\n  ---------------------------  ---------------------------------------\n  Nico Rizzuto (Creator)       http://www.rizzuto.it\n  Lionel B. Dyck               http://www.lbdsoftware.com/\n                               http://github.com/lbdyck\n                               http://www.cbttape.org/\n  John Kalinich\n  Bill Smith\n  Bruce Koss\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SKELS": {"ttr": 13062, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01 4/\\x01 4/\\x04R\\x0bb\\x0bb\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-12-07T00:00:00", "modifydate": "2020-12-07T04:52:21", "lines": 2914, "newlines": 2914, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT417/FILE417.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT417", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}