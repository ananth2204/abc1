JRP121 TITLE 'JRP COMMAND AND INITIALIZATION PARES'
***********************************************************************
*                                                                     *
*             MODULE NAME = JRP121                                    *
*                                                                     *
*             DESCRIPTIVE NAME =  PROCESS COMMANDS FROM JRP CONSOLE   *
*                                                                     *
*                                                                     *
*             AUTHOR = MIKE SCHORTMAN -                               *
*                                                                     *
*             COPYRIGHT = 1/8/84                                      *
*                                                                     *
*              MODIFIED = *
*                                                                     *
*             STATUS = ONE INVALID MESSAGE ISSUED ON FIRST COMMAND    *
*                      PASS,NOT CRITICAL,WILL BE FIXED.               *
*                                                                     *
*             FUNCTION =                                              *
*                PARSES MVS OPERATOR COMMANDS AND INPUT FROM          *
*                JRP INITIALIZATION DATA SET.                         *
*                                                                     *
*                OPERATION =                                          *
*                   SCAN COMMANDS OR INPUT PASSED BY JRP100           *
*                   FOR JRP KEYWORDS AND MAKES APPROPRIATE            *
*                   MODIFICATIONS TO DYNAMIC PRINTER ENTRY AREAS.     *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = JRPDMAC AND/OR JRPSMAC MUST NOT      *
*                              BE CHANGED WITHOUT REASSEMBLY.         *
*                                                                     *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 1 TO 11 = WORK REGISTERS               *
*                    REGISTER  12      = ADDRESSABILITY TO JRP121     *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER AND       *
*                                        ADDRESSABILITY TO GETMAINED  *
*                                        WORK AREA                    *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE = 5K BYTES                               *
*                                                                     *
*                ATTRIBUTES = SCHEDULER KEY 8, PROBLEM STATE          *
*                   PROBLEM PROGRAM STATE                             *
*                                                                     *
*             ENTRY POINTS = JRP121 (ONLY ENTRY POINT)                *
*                                                                     *
*                LINKAGE =                                            *
*                   FROM JRP300 AS A SUBROUTINE                       *
*                                                                     *
*             INPUT = R8 POINTS TO JRPPFLG ,R10 POINTS TO JRP"S       *
*                DYNAMIC PRINTER AREAS,R11 POINTS TO COMMAND OR       *
*                INITIALIZATION INPUT.                                *
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = IKJPARS, DAIRFAIL, GNRLFAIL               *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = PWT                                 *
*                                                                     *
*                                                                     *
*             TABLES = DATA AREA TO BE GETMAINED.  MAPPED BY DSECT    *
*                BEGINNING AT LABEL P1DWA.                            *
*                                                                     *
*             MACROS = JRPSAVE,JRPRTRN,TPUT,STIMER,MODCB,             *
*                                                                     *
*             CHANGE ACTIVITY =                                       *
*               SKV 02/20/06 - SKV - STARTED ADDING SUPPORT FOR       *
*                  PFKEYS. DEFINED PFKEY 1-12 & PA1 & PA2             *
*               SKV 02/21/06 - SKV - CHANGED THE BASE REG FOR J1TWA   *
*                  FROM R11 TO R8.  AND USED REG 11 AS AN ADDITIONAL  *
*                  BASE REGISTER.                                     *
*               SKV 02/24/06 - SKV - ADDED SUPPORT FOR THE K COMMAND  *
*                  CLEAR THE SCREEN.                                  *
*               SKV 12/17/06 - SKV - ADDED SUPPORT FOR ALTERNATE      *
*                  COMMAND CHARACTER                                  *
*                                                                     *
*             MESSAGES =                                              *
*                                                                     *
*                THIS PROGRAM IS THE PROPERTY OF MIKE SCHORTMAN,      *
*                CONN. MUTUAL LIFE INS. CO.                           *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
***********************************************************************
*                                                                   SKV
         COPY  JRPGLBL                                              SKV
*                                                                   SKV
JRP121 CSECT
         JRPSAVE REG=(11,12),ID=*,LV=P1DSASIZ
         USING P1DSA,R13
         L     R8,0(R1)
         USING J1TWA,R8                 ;TERMINAL DSECT
         USING J1DWA,R7                  ;PRINTER DSECT
*
**       MOVE MODEL DATA TO GOTTEN AREA, ZERO REST.
*
P1WINIT  DS    0H
         LA    R0,P1DWA                  ;START OF DYNAMIC AREA
         LA    R1,(P1DCLRE-P1DWA)        ;LENGTH OF DYNAMIC AREA
         LA    R14,P1SWA                 ;START OF STATIC DATA
         LA    R15,P1SMDL                ;LENGTH OF MODEL DATA
         MVCL  R0,R14                    ;MOVE W/ZERO TO BE RENT,REUS
P1WCKBSY TM    J1TFLG,J1TBUSY            ;THIS GUY BUSY ???
         BNO   P1WBEGIN                  ;NO HE'S NOT BUSY
         STIMER WAIT,BINTVL==F'100'      ;YEH, WAIT A SECOND WILL YA
         B     P1WCKBSY                  ;GO BACK AND CHECK BUSY.
P1WBEGIN L     R2,J1TRPL                 ;O.K. NOW GET OUR RPL
         OI    J1TFLG,J1TBUSY            ;TURN ON THE BUSY FLAG
         MVI   J1DPRN,C'('               ;CHANGE LU SEARCH ARGUMENT
         MVC   J2DMSS(30),=CL30'OK'      ;SET O.K. MESSAGE
         MODCB AM=VTAM,RPL=(R2),CHNGDIR=(NCMD),OPTCD=(CS,SYN,SPEC)
*        CLI  J1DTXT1,X'6D'              ;CLEAR KEY FLAG ON ??     *SKV
*        BNE  CHKPF1                     ;NO, SEE IF PF1           *SKV
         B    CHKPF1                     BYPASS CLEAR SCREEN       *SKV
         MVC  J1DOUTBF(1),CLEAR          ;YEH,SET WRITE ERASE
         L    R14,J1DADTBL               ;TOP OF SCREEN ADDRESS
         ST   R14,J1TADDSV               ;STORE IN SAVE AREA
         B    PROCESS
CHKPF1   DS   0H
         CLI  J1DTXT1,X'F1'              ;IS THIS A PF1
         BNE  CHKPF2                     ;NO MAYBE PF2
         MVC  J1DTXT(80),PF01CMD         ;MOVE IN THE PF01 COMMAND *SKV
*        MVC  J1DTXT(80),J1DHLD          ;MOVE IN PREVIOUS COMMAND *SKV
         B    PROCESS
CHKPF2   EQU *
         CLI  J1DTXT1,X'F2'              ;IS THIS A PF2            *SKV
         BNE  CHKPF3                     ;NO MAYBE PF3             *SKV
         MVC  J1DTXT(80),PF02CMD         ;MOVE IN THE PF02 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPF3   EQU *                           ;PFKEYS                   *SKV
         CLI  J1DTXT1,X'F3'              ;IS THIS A PF3            *SKV
         BNE  CHKPF4                     ;NO MAYBE PF4             *SKV
         MVC  J1DTXT(80),PF03CMD         ;MOVE IN THE PF03 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPF4   EQU *
         CLI  J1DTXT1,X'F4'              ;IS THIS A PF4            *SKV
         BNE  CHKPF5                     ;NO MAYBE PF5             *SKV
         MVC  J1DTXT(80),PF04CMD         ;MOVE IN THE PF04 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPF5   EQU *
         CLI  J1DTXT1,X'F5'              ;IS THIS A PF5            *SKV
         BNE  CHKPF6                     ;NO MAYBE PF6             *SKV
         MVC  J1DTXT(80),PF05CMD         ;MOVE IN THE PF05 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPF6   EQU *
         CLI  J1DTXT1,X'F6'              ;IS THIS A PF6            *SKV
         BNE  CHKPF7                     ;NO MAYBE PF7             *SKV
         MVC  J1DTXT(80),PF06CMD         ;MOVE IN THE PF06 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPF7   EQU *
         CLI  J1DTXT1,X'F7'              ;IS THIS A PF7            *SKV
         BNE  CHKPF8                     ;NO MAYBE PF8             *SKV
         MVC  J1DTXT(80),PF07CMD         ;MOVE IN THE PF07 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPF8   EQU *
         CLI  J1DTXT1,X'F8'              ;IS THIS A PF8            *SKV
         BNE  CHKPF9                     ;NO MAYBE PF9             *SKV
         MVC  J1DTXT(80),PF08CMD         ;MOVE IN THE PF08 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPF9   EQU *
         CLI  J1DTXT1,X'F9'              ;IS THIS A PF9            *SKV
         BNE  CHKPF10                    ;NO MAYBE PF10            *SKV
         MVC  J1DTXT(80),PF09CMD         ;MOVE IN THE PF09 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPF10  EQU *
         CLI  J1DTXT1,X'7A'              ;IS THIS A PF10           *SKV
         BNE  CHKPF11                    ;NO MAYBE PF11            *SKV
         MVC  J1DTXT(80),PF10CMD         ;MOVE IN THE PF10 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPF11  EQU *
         CLI  J1DTXT1,X'7B'              ;IS THIS A PF11           *SKV
         BNE  CHKPF12                    ;NO MAYBE PF12            *SKV
         MVC  J1DTXT(80),PF11CMD         ;MOVE IN THE PF11 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPF12  EQU *
         CLI  J1DTXT1,X'7C'              ;IS THIS A PF12           *SKV
         BNE  CHKPA1                     ;NO MAYBE PA1             *SKV
         MVC  J1DTXT(80),PF12CMD         ;MOVE IN THE PF12 COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPA1   EQU *
         CLI  J1DTXT1,X'6C'              ;IS THIS A PA1            *SKV
         BNE  CHKPA2                     ;NO MAYBE PA1             *SKV
         MVC  J1DTXT(80),PA01CMD         ;MOVE IN THE PA1  COMMAND *SKV
         B    PROCESS                                              *SKV
CHKPA2   EQU *
         CLI  J1DTXT1,X'6E'              ;IS THIS A PA2            *SKV
         BNE  PROCESS                    ;NO - NO IDEA...          *SKV
         MVC  J1DTXT(80),PA02CMD         ;MOVE IN THE PA2  COMMAND *SKV
         B    PROCESS                                              *SKV
         B    PROCESS                                              *SKV
PF01CMD  DC   CL80'/DU                 '                           *SKV
PF02CMD  DC   CL80'/DJPRT1             '                           *SKV
PF03CMD  DC   CL80'/DJPRT2             '                           *SKV
PF04CMD  DC   CL80'/SJPRT1             '                           *SKV
PF05CMD  DC   CL80'/SJPRT2             '                           *SKV
PF06CMD  DC   CL80'/PJPRT1             '                           *SKV
PF07CMD  DC   CL80'/PJPRT2             '                           *SKV
PF08CMD  DC   CL80'/CJPRT1             '                           *SKV
PF09CMD  DC   CL80'/CJPRT2             '                           *SKV
PF10CMD  DC   CL80'/EJPRT1             '                           *SKV
PF11CMD  DC   CL80'/EJPRT2             '                           *SKV
PF12CMD  DC   CL80'UNSOL               '                           *SKV
PA01CMD  DC   CL80'WRAP                '                           *SKV
PA02CMD  DC   CL80'NOWRAP              '                           *SKV
*
**  PROCESS MODIFY
*
PROCESS  DS    0H                                                  *SKV
*    WRITE SMF RECORD FOR BEGINNING                                *SKV
****     USING JRP4DS,R14                                          *SKV
*        L     R14,J1DJRP4D                                        *SKV
*        MVI   JRP4STAT,C'R'                                       *SKV
*        MVI   JRP4DSRN,X'07'                                      *SKV
*        MVI   JRP4DATA+00,X'40'                                   *SKV
*        MVC   JRP4DATA+01(39),JRP4DATA                            *SKV
*        MVC   JRP4DATA+00(8),J1DUSER                              *SKV
*        MVC   JRP4DATA+09(31),J1DTXT                              *SKV
*        LR    R1,R14                                              *SKV
*        L     R15,J1DJRP4A                                        *SKV
*        BALR  R14,R15                                             *SKV
****     DROP  R14                                                 *SKV
         TM    J1TFLG,J1TTOP             ;TOP LINE ON FOR NOWRAP   *SKV
         BNO   NEWCMD                    ;NO RESTORE TO CONTINUE
*
**  THESE INSTRUCTIONS RESTORE REGISTERS FOR MORE DATA ON NOWRAP
*
         L     R3,ST3
         L     R4,ST4
         L     R5,ST5
         L     R6,ST6
         L     R7,ST7
         L     R9,ST9
         L     R10,ST10
*
         B     SENDBACK                  ;GO CLEAR MORE DATA LINE AND
NEWCMD   DS    0H
         L     R9,J1TPWT                 ;GET ADDRESS OF PWT
         OI    J1TFLG,J1TGLBF            ;SET DEFAULT GLOBAL DISPLAY
         MVC   J1DHLD(80),J1DTXT         ;SAVE DATA ENTERED
         MVC   J2DMSS(30),=CL30'NO COMMAND RECEIVED'
         CLI   J1DHLD,C' '               ;IS IT EMPTY
         BE    P1CMPOK                   ;YEA, SEND INVALID MESSAGE
P1CMFLN  LA    R10,J1DHLD                ;LOAD UP ENTERED DATA ADDR
         LR    R5,R10                    ;DUP IT TO REG 5
         LR    R6,R5                     ;DUP IT TO REG 6
P1CMBMPL LA    R5,1(R5)                  ;BUMP DATA ADDRESS ONE BYTE
         CLC   0(2,R5),=2C' '            ;IS IT BLANK ???
         BNE   P1CMBMPL                  ;NO, LOOP TILL WE FIND ONE
         SR    R5,R10                    ;BOUT TIME, LETS FIND LENGTH
         S     R5,=F'1'                  ;MINUS 1 FOR LENGTH
         BAL   R10,P1TSEND               ;GO TO DISPLAY ROUTINE
         MVC   J2DMSS(30),=CL30'OK'      ;SET O.K. MESSAGE
         CLC   J1DHLD(6),=C'CANCEL'      ;WAS THIS A CANCEL COMMAND
         BE    P1CMPOK                   ;YEH, GOTTA TELL HIM OK
         CLC   J1DHLD(6),=C'PRISCN'      ;WAS THIS A CANCEL COMMAND
         BE    P1CMPOK                   ;YEH, GOTTA TELL HIM OK
         CLC   J1DHLD(6),=C'ALTSCN'      ;WAS THIS A CANCEL COMMAND
         BE    P1CMPOK                   ;YEH, GOTTA TELL HIM OK
         CLC   J1DHLD(6),=C'LOGON '      ;WAS THIS A LOGON ATTEMPT
         BNE   CKK                       ;NO, MAYBE HE'S SETTING K *SKV
P1INVCMD MVC   J2DMSS(30),=CL30'APPL INVALID OR INACCESSIBLE'
         B     P1CMPOK                   ;LETS TELL HIM NO GOOD
CKK      CLC   J1DHLD(1),=C'K'           ;WAS THIS A CLEAR ATTEMPT *SKV
         BNE   CKNOWRP                   ;NO, MAYBE HE'S SETTING NOWRAP
         MVC   J1DOUTBF(1),CLEAR         ;YEH,SET WRITE ERASE      *SKV
         L     R14,J1DADTBL              ;TOP OF SCREEN ADDRESS    *SKV
         ST    R14,J1TADDSV              ;STORE IN SAVE AREA       *SKV
         B     P1CMPOK                                             *SKV
CKNOWRP  CLC   J1DHLD(6),=C'NOWRAP'      ;DOES THIS GUY WANT NOWRAP
         BNE   CKAUTO                    ;NO, MAYBE HE'S RESETTING WRAP
         TM    J1TFLG,J1TUNSOL
         BZ    NOWRPOK
         MVC   J2DMSS(30),=CL30'NOWRAP INVALID WITH UNSOL'
         B     P1CMPOK                   ;LETS TELL HIM O.K.
NOWRPOK  OI    J1TFLG,J1TAUTO            ;IF HE DOES SET NOWRAP FLAG
         MVC   J2DMSS(30),=CL30'OK'
         B     P1CMPOK                   ;LETS TELL HIM O.K.
CKAUTO   DS    0H
         CLC   J1DHLD(4),=C'WRAP'        ;IS WRAP HE WANTS ??
         BNE   CKUNSOL                   ;NO, MAYBE UNSOLICITTED
         MVC   J2DMSS(30),=CL30'OK'
         NI    J1TFLG,255-J1TAUTO        ;IF SO TURN ON AUTO WRAP
         B     P1CMPOK                   ;TELL HIM O.K.
CKUNSOL  CLC   J1DHLD(4),=C'UNSO'        ;DOES THIS GUY WANT UNSOLICIT
         BNE   CKNOUN                    ;NO, MAYBE HE'S RESETTING UNSO
         TM    J1TFLG,J1TAUTO
         BZ    UNSOLOK
         MVC   J2DMSS(30),=CL30'UNSOL INVALID WITH NOWRAP'
         B     P1CMPOK                   ;LETS TELL HIM O.K.
UNSOLOK  OI    J1TFLG,J1TUNSOL           ;IF HE DOES SET UNSOL FLAG
         MVC   J2DMSS(30),=CL30'OK'
         B     P1CMPOK                   ;LETS TELL HIM O.K.
CKNOUN   DS    0H
         CLC   J1DHLD(5),=C'NOUNS'       ;IS IT NOUNSOL HE WANTS ??
         BNE   P1OCMDS1                  ;NO, MUST BE OTHER CMDS   *SKV
         NI    J1TFLG,255-J1TUNSOL       ;IF SO TURN OFF UNSOL
         MVC   J2DMSS(30),=CL30'OK'
         B     P1CMPOK                   ;TELL HIM O.K.
*                                                                  *SKV
P1OCMDS1 DS    0H                                                  *SKV
         CLC   J1DHLD(4),=C'DPFK'        ;IS A DISPL OF PFKEYS?    *SKV
         BNE   CKHELP                    ;NO, GO TRY HELP          *SKV
*        MVC   J2DMSS(30),=CL30'DPFK                          '   **SKV
*        B     P1CMWTO             ISSUE WTO                      **SKV
         MVC   J2DMSS(30),=CL30'DPFK:                         '   **SKV
         BAL   R10,P1TSEND                                        **SKV
         MVC   J2DMSS(30),PF01CMD                             '   **SKV
         BAL   R10,P1TSEND                                        **SKV
         MVC   J2DMSS(30),PF02CMD                             '   **SKV
         BAL   R10,P1TSEND                                        **SKV
         B     P1CMPOK                   ;TELL HIM O.K.            *SKV
*                                                                  *SKV
CKHELP   DS    0H                                                  *SKV
         CLC   J1DHLD(4),=C'HELP'        ;IS IT HELP HE WANTS ?    *SKV
         BNE   CKHELP1                   ;NO, TRY A ? COMMAND      *SKV
         MVC   J2DMSS(3),=CL3'OK'                                  *SKV
         B     P1CMPOK                   ;TELL HIM O.K.            *SKV
CKHELP1  DS    0H                                                  *SKV
         CLC   J1DHLD(1),=C'?'           ;IS IT HELP HE WANTS ?    *SKV
         BNE   P1PLPRT                   ;NO, MUST BE A $ COMMAND  *SKV
*        NI    J1TFLG,255-J1TUNSOL       ;IF SO TURN OFF UNSOL     *SKV
         MVC   J2DMSS(3),=CL3'OK'                                  *SKV
         B     P1CMPOK                   ;TELL HIM O.K.            *SKV
*                                                                  *SKV
**             FIND PRINTERS DYNAMIC AREA
*
P1PLPRT  DS    0H
         MVC   J2DMSS(30),=CL30'NOT A VALID PRINTER ID'
         LA    R4,J1DHLD+2               ;BUMP PASSED  COMMAND
P1PLOOP  CLI   0(R4),C','                ;IS IT COMMA(END OF STRING) ?
         BE    P1FPLOOP                  ;YEH, FIND PRINTER NAME.
         CLI   0(R4),C' '                ;IS IT BLANK(END OF STRING) ?
         BE    P1FPLOOP                  ;YEH, FIND PRINTER NAME.
         LA    R4,1(R4)                  ;BUMP IT UP 1
         B     P1PLOOP                   ;GO BACK AND FIND END
P1FPLOOP DS    0H
         LR    R5,R4                     ;DUP R5 TO R4
         LA    R1,J1DHLD+2               ;BUMP PASSED $X CMD
         SR    R5,R1                     ;GET LENGTH OF PRINTER NAME
         SH    R5,=H'1'                  ;MINUS 1 FOR LENGTH
         CLC   0(4,R9),=C'PEND'          ;IS THIS END OF TABLE
         BE    P1CMEND                   ;YES. WE DONT OWN THIS PRINTER
         CLC   J1DHLD+2(2),=C'U '        ;IS THIS GLOBAL REQUEST
         BE    P1FPSET                   ;YEH, DONT WORRY WHO IT IT
         CLC   J1DHLD+2(2),=C'U,'        ;IS THIS GLOBAL REQUEST
         BE    P1FPSET                   ;YEH, DON'T WORRY WHO IT IS
         NI    J1TFLG,255-J1TGLBF        ;SET GLOBAL OFF FOR ONE PRTR
         EX    R5,J2SPCHK                ;CHECK PRINTER NAME
         BE    P1FPSET                   ;THIS IS OUR BOY,GO FOR IT
P1PALOOP DS    0H
         LA    R9,12(R9)                 ;NOT HIM GET NEXT ENTRY
         B     P1FPLOOP                  ;GO CHECK AGAIN
P1FPSET  DS    0H
         L     R7,8(R9)                  ;LOAD UP DYNAMIC AREA ADDRESS
*
**   WRITE SMF RECORD FOR BEGINNING                                *SKV
*
         USING JRP4DS,R14                                          *SKV
         L     R14,J1DJRP4D                                        *SKV
         MVI   JRP4STAT,C'R'                                       *SKV
         MVI   JRP4DSRN,X'09'                                      *SKV
         MVI   JRP4DATA+00,X'40'                                   *SKV
         MVC   JRP4DATA+01(39),JRP4DATA                            *SKV
         MVC   JRP4DATA+00(8),J1DUSER                              *SKV
         MVC   JRP4DATA+09(31),J1DTXT                              *SKV
         LR    R1,R14                                              *SKV
         L     R15,J1DJRP4A                                        *SKV
         BALR  R14,R15                                             *SKV
         DROP  R14                                                 *SKV
*
**             DISPLAY ENTERED COMMAND ON MVS CONSOLE
*
         MVC   J1DOPER+07(4),=C'905I'    SET MESSAGE ID            *SKV
         MVC   J1DOPER+12(8),J1DUSER     SET USERID ISSUING CMD    *SKV
         MVC   J1DOPER+21(20),J1DHLD     SET COMMAND REQUESTED     *SKV
         WTO   ,MF=(E,J1DOPER)           DISPLAY UPON MVS CONSOLE  *SKV
*
**             DISP (DISPLAY PRINTER ATTRIBUTES)
*
P1CM$D   DS    0H
         CLC   J1DCOMCH(1),J1DHLD        VALID COMMAND CHAR?       *SKV
         BNE   P1CM$C                    ;NO-LOOK FOR KEYWORDS     *SKV
         CLC   =C'D',J1DHLD+1            ;DISPLAY ??               *SKV
         BNE   P1CM$C                    ;NO-LOOK FOR KEYWORDS
P1WDST   LR    R3,R4                     ;DUP R4 TO R3
         B     P1CMOK                    ;SAY O.K. FRIEND
*
**             $C    (CANCEL PRINT )
*
P1CM$C   DS    0H                                                  *SKV
         CLC   J1DCOMCH(1),J1DHLD        VALID COMMAND CHAR?       *SKV
         BNE   P1CM$E                    ;NO-LOOK FOR KEYWORDS     *SKV
         CLC   =CL1'C',J1DHLD+1          ;FLUSH CURRENT D.S. ??    *SKV
         BNE   P1CM$E                    ;NO - TRY RESTART
FLUSHOK  OI    J1DFLAG2,J1DFLUSH         ;YES, SET RESTART FLAG
         NI    J1DFLAG1,255-J1DKEEP      ;TURN OFF KEEP FLAG
         LR    R3,R4                     ;POINT TO USERID (IF ANY)
         B     P1CMOK ;TELL HIM O.K.
*
**             $E    (RESTART PRINT )
*
P1CM$E   DS    0H                                                  *SKV
         CLC   J1DCOMCH(1),J1DHLD        VALID COMMAND CHAR?       *SKV
         BNE   P1CM$P                    ;NO-LOOK FOR KEYWORDS     *SKV
         CLC   =CL1'E',J1DHLD+1          ;RESTART CURRENT D.S.     *SKV
         BNE   P1CM$P                    ;NO - TRY PRINTER PURGE
         OI    J1DFLAG2,J1DFLUSH         ;SET RESTART FLAG
         OI    J1DFLAG1,J1DKEEP          ;SET D.S. KEEP FLAG
         LR    R3,R4                     ;POINT TO USERID (IF ANY)
         B     P1CMOK                    ;TELL OPER O.K.
*
**             PURGE AFTER CURRENT DATA-SET
*
P1CM$P   DS    0H
         CLC   J1DCOMCH(1),J1DHLD        VALID COMMAND CHAR?       *SKV
         BNE   P1CM$S                    ;NO-LOOK FOR KEYWORDS     *SKV
         CLC   =CL1'P',J1DHLD+1          ;PURGE PRINTER ??         *SKV
         BNE   P1CM$S                    ;NO TRY START
         LR    R3,R4                     ;DUP REG 4 TO REG 3
         OI    J1DFLAG2,J1DPURGE         ;TURN ON PURGE FLAG
         CLC   J1DHSTAT,=C'ACTIV'        ;CHECK CURRENT PRINTER STATUS
         BE    P1CMACT
         CLC   J1DHSTAT,=C'RETRYING'     ;AND MAKE ADJUSTMENTS
         BNE   P1CKINA
P1CMACT  MVC   J1DHSTAT,=CL10'DRAINING'  ;AS REQUIRED
         B     P1CMOK
P1CKINA  MVC   J1DHSTAT,=CL10'DRAINED'
         B     P1CMOK                    ;THEN TELL OPER O.K.
*
**             START UP AFTER PAUSE
*
P1CM$S   DS    0H
         CLC   J1DCOMCH(1),J1DHLD        VALID COMMAND CHAR?       *SKV
         BNE   P1CM$T                    ;NO-LOOK FOR KEYWORDS     *SKV
         CLC   =CL1'S',J1DHLD+1          ;PRINTER START            *SKV
         BNE   P1CM$T                    ;NO SEE IF MORE KEYWORDS
         LR    R3,R4                     ;DUP REG 4 TO REG 3 AGAIN
         NI    J1DFLAG2,255-J1DPURGE     ;TURN OFF PURGE FLAG
         NI    J1DFLAG1,255-J1DRTLM      ;TURN OFF RETRY LIMIT FLAG
         CLC   J1DHSTAT(5),=C'ACTIV'     ;SEE IF ALREADY ACTIVE
         BE    P1CMOK                    ;YES, JUST SAY O.K.
         CLC   J1DHSTAT(8),=C'DRAINING'  ;IF ITS DRAINING
         BNE   *+14
         MVC   J1DHSTAT,=CL10'ACTIVE'    ;MAKE IT ACTIVE
         B     P1CMOK                    ;O.K.
         MVC   J1DHSTAT,=CL10'INACTIVE'  ;IF ITS INACTIVE LEAVE IT
         B     P1CMOK                    ;THEN SAY O.K.
*
**             SET PRINTER ATTRIBUTES
*
P1CM$T   DS    0H
         CLC   J1DCOMCH(1),J1DHLD        VALID COMMAND CHAR?       *SKV
         BNE   P1CMINVC                  ;NO-LOOK FOR KEYWORDS     *SKV
         CLC   =CL1'T',J1DHLD+1          ;SET PRINTER ATTRIBUTES?  *SKV
         BNE   P1CMINVC                  ;NO-SORRY WE HAVE NO MORE CMDS
         LR    R3,R4                     ;DUP THAT 4 TO 3 AGAIN
*
**             SCAN FOR KEYWORDS
*
P1CMKEYW DS    0H
         LA    R14,P1CMFMXT              ;SET RETURN ADDRESS
**********************************************************************
*                                                                    *
**             PARSE DOWN STARTUP PARMS OR MODIFY KEYWORDS           *
*                                                                    *
**********************************************************************
P1CMFMSU DS    0H
         ST    R14,P1DFMRET              ;SAVE RETURN ADDR
P1CMTYP  DS    0H
         CLI   0(R3),C','                ;LOOK FOR KEYWORDS
         BNE   *+8                       ;"
         LA    R3,1(R3)                  ;BUMP PAST COMMA
         CLC   0(2,R3),=C'C='            ;CLASS CHANGE ??
         BE    P1CMCLAS                  ;YEH TAKE CARE OF IT
         CLC   0(3,R3),=C'LU='           ;LUNAME CHANGE ??
         BE    P1CMLUID                  ;YEH, TAKE CARE OF THAT
         CLC   0(5,R3),=C'MLIN='         ;MAX LINES CHANGE ??
         BE    P1CMLNE                   ;TAKE CARE OF THAT ONE
         CLC   0(4,R3),=C'SCS='          ;SCS Y/N ??
         BE    P1CMSCSO                  ;WAT'ER YA WAITIN FOR, DO IT
         CLC   0(5,R3),=C'LGMD='         ;SET LOGMODE
         BE    P1CMLGMD                  ;DO THAT TOO.
         CLC   0(2,R3),=C'R='            ;JES2 DESTID CHANGE ??
         BE    P1CMDEST                  ;O.K. I'LL DO IT
         CLC   0(2,R3),=C'F='            ;FORM NUMBER CHANGE ??
         BE    P1CMFRM                   ;GOD I'M GETTING SICK OF THIS
         CLC   0(2,R3),=C'S='            ;YOU WANT SEPERATOR PAGE ??
         BE    P1CMSEP                   ;I'LL GET THAT RIGHT AWAY
         CLC   0(4,R3),=C'LPP='          ;NOW HE WANTS LINES PER PAGE
         BE    P1CMLEN                   ;THATS A JOB BUT I'LL GET IT
*        COPY  DHC121A                                             *DHC
         B     P1CMFMER                  ;AH-HA, SEE THERE ARE NO MORE
*
**       PROCESS FORMS CHANGE
*
P1CMFRM  DS    0H
         LA    R0,4                      ;MAX LENGTH FOR FORM
         LA    R3,2(R3)                  ;BUMP PAST F=
         LA    R15,J1DHFORM              ;GET HOLD AREA
         MVC   0(4,R15),=4CL1' ' ;CLEAR IT
         BAL   R14,P1CMSCN               ;GO EDIT DATA
         B     P1CMCKMR                  ;MUST BE O.K.
*
**       PROCESS SCS OPTION CHANGE
*
P1CMSCSO DS    0H                        ;SCS OPTION
         LA    R0,1                      ;MAX 1 CHAR
         LA    R3,4(R3)                  ;BUMP PAST SCS=
         LA    R15,J1DHSCS               ;GET HOLD AREA
         BAL   R14,P1CMSCN               ;EDIT DATA
         B     P1CMCKMR                  ;ASSUME GOOD
*
**       PROCESS LUID CHANGE
*
P1CMLUID DS    0H
         LA    R0,8                      ;8 CHAR MAX
         LA    R3,3(R3)                  ;BUMP PAST LU=
         LA    R15,J1DLUID               ;GET HOLD AREA
         MVC   0(8,R15),=8CL1' '         ;CLEAR IT
         BAL   R14,P1CMSCN               ;EDIT DATA
         LA    R2,J1DBFCL                ;GET NORMAL MESSAGE
         BAL   R5,PUTLU                  ;PUT IT IN MESSAGE
         LA    R2,J1DFLSMS               ;GET FLUSH MESSAGE
         BAL   R5,PUTLU                  ;PUT IT IN MESSAGE
         B     P1CMCKMR                  ;ASSUME DATA GOOD
PUTLU    DS    0H
         CLC   0(1,R2),J1DPRN            ;END OF PRINT ??
         BE    *+12
         LA    R2,1(R2)
         B     PUTLU
         MVI   0(R2),C'('
         MVC   1(8,R2),J1DLUID
         MVI   9(R2),C')'
         BR    R5
*
**       PROCESS CLASS CHANGE
*
P1CMLGMD DS    0H                  CLASS CHANGE
         LA    R0,8                8 CHAR MAX
         LA    R3,5(R3)            BUMP PAST LGMD=
         LA    R15,J1DLGMD         GET HOLD AREA
         MVC   0(8,R15),=8CL1' '
         BAL   R14,P1CMSCN         EDIT DATA
         B     P1CMCKMR            ASSUME DATA GOOD
*
**       PROCESS CLASS CHANGE
*
P1CMCLAS DS    0H                  CLASS CHANGE
         LA    R0,8                8 CHAR MAX
         LA    R3,2(R3)            BUMP PAST C=
         LA    R15,J1DHCLAS        GET HOLD AREA
         MVC   J1DHCLAS,=8CL1' '
         BAL   R14,P1CMSCN         EDIT DATA
         B     P1CMCKMR            ASSUME DATA GOOD
*
**       PROCESS DESTINATION
*
P1CMDEST DS    0H                  DEST CHANGE
         LA    R0,8                8 CHAR MAX
         LA    R3,2(R3)            BUMP PAST R=
         LA    R15,J1DHDEST        GET HOLD AREA
         MVC   0(8,R15),=8CL1' '    CLEAR AREA
         BAL   R14,P1CMSCN         EDIT DATA
         B     P1CMCKMR            ASSUME DATA GOOD
*
**       PROCESS PAGE SEPERATOR OPTION
*
P1CMSEP  DS    0H                  SEP  CHANGE
         LA    R0,1                1 CHAR MAX
         LA    R3,2(R3)            BUMP PAST S=
         LA    R15,J1DSEP          GET SEP SWITCH
         MVI   J1DSEP,C'Y'         SET IT ON AS A DEFAULT
         BAL   R14,P1CMSCN         EDIT DATA
         B     P1CMCKMR            ASSUME DATA GOOD
*
**       PROCESS PAGE LENGTH CHANGE
*
P1CMLEN  DS    0H                  LEN  CHANGE
         LA    R0,3
         LA    R3,4(R3)            RESTORE PASSED "LPP="
         LA    R1,J1DLEN           GET ANSWER LOC.
*
**       COMMON CODE FOR L=NNN,W=NNN
*
P1CMLENT DS    0H                  SCAN FOR NUMERIC KEYWORD
         LR    R6,R0               DUP MAX LEN
         LA    R15,P1DWORK         GET WORK AREA
         XC    P1DWORK,P1DWORK     CLEAR IT
         BAL   R14,P1CMSCN         EDIT DATA
         SR    R0,R6               (RESIDUAL-MAX)=NEG. DIGITS
         BZ    P1CMCKMR            NONE-USE CURRENT
         LPR   R0,R0               DIGITS OF DATA
         XR    R15,R15             CLEAR WORK
P1CMLNXT DS    0H                  CONVERT VALUE TO BINARY
         IC    R14,P1DWORK         PICK A DIGIT
         N     R14,=F'15'          GET NUMERIC PART
         MH    R15,=H'10'          SHIFT CURRENT VALUE A DIGIT
         AR    R15,R14             ADD NEW DIGIT
         MVC   P1DWORK(7),P1DWORK+1 SHIFT DIGITS DOWN
         BCT   R0,P1CMLNXT         LOOP
         ST    R15,0(R1)           SAVE NEW VALUE IN ANSWER AREA
         B     P1CMCKMR            ASSUME DATA GOOD
*
**       PROCESS PAGE WIDTH CHANGE
*
P1CMLNE  DS    0H                  WID  CHANGE
         LA    R0,4
         LA    R3,5(R3)            RESTORE PASSED "MLIN="
         LA    R1,J1DMLNE          GET ANSWER LOC.
         B     P1CMLENT            GO TO COMMON CODE
*        COPY  DHC121B                                             *DHC
*
**       LOOK FOR ANOTHER KEYWORD
*
P1CMCKMR DS    0H                  SEE IF ANOTHER KEYWORD
         CLI   0(R3),C' '          END OF STRING
         BE    P1CMFMOK            YES-GIVE OK P1G
         B     P1CMTYP             NO-CLASSIFY
*
**       MOVE KEYWORD DATA
*
P1CMSCN  DS    0H                  EDIT
         CLI   0(R3),C' '          END OF STRING
         BE    P1CMSCND            YES-RETURN
         CLI   0(R3),C','          END OF STRING
         BE    P1CMSCND            YES-RETURN
         MVC   0(1,R15),0(R3)      MOVE DATA INTO WORK
         LA    R3,1(R3)            BUMP
         LA    R15,1(R15)          "
         BCT   R0,P1CMSCN          LOOP
P1CMSCND DS    0H                  RETURN
         BR    R14                 "
**********************************************************************
*
**             PARSE RETURN
*
P1CMFMOK DS    0H                  PARSE OK
         L     R14,P1DFMRET        GET RETURN ADDR
         B     0(R14)              +0 = OK
P1CMFMER DS    0H                  BAD PARSE
         L     R14,P1DFMRET        GET RETURN
         B     4(R14)              +4 = BAD
**********************************************************************
*
**              RETURN FROM PARSE  OF MODIFY TEXT
*
P1CMFMXT DS    0H                  BRANCH TABLE
         B     P1CMOK              +0=OK
         B     P1CMINVT            +4=ERR
P1TSEND  DS    0H
         C     R5,J1DCOLS
         BNL   P1CSETMR
         NI    J1TFLG,255-J1TMRMSG
         B     P1CSETNM
P1CSETMR DS    0H
         OI    J1TFLG,J1TMRMSG      MORE MESSAGE
         LR    R15,R6                NEW ADDRESS
         A     R15,J1DCOLS           NEW ADDRESS
         LR    R14,R5
         S     R14,J1DCOLM1
         ST    R15,J1TNEWAD
         ST    R14,J1TNEWLN
         L     R5,J1DCOLM1
P1CSETNM L     R14,J1TADDSV
         LTR   R14,R14
         BZ    TOP
         CLC   6(4,R14),=C'TEND'
         BE    TOP
         CLC   8(4,R14),=C'TEND'
         BNE   NOBUMP
         MVI   J1DAREA2,C' '
         MVC   J1DAREA2+(78),J1DAREA2
         B     NOBUMP
TOP      DS    0H
         MVI   J1DAREA2,C'-'
         MVC   J1DAREA2+1(78),J1DAREA2
         L     R14,J1DADTBL
         ST    R14,J1TADDSV
         TM    J1TFLG,J1TAUTO
         BZ    NOBUMP
         OI    J1TFLG,J1TTOP
         L     R2,J1TRPL
         XR    R15,R15
         SEND  RPL=(R2),OPTCD=(SYN,SPEC,CA),AREA=MOREDATA,RECLEN=25,   X
               CHAIN=ONLY,STYPE=REQ,CHNGDIR=CMD,BRACKET=(NBB,NEB)
         LTR   R15,R15
         BNZ   J1FATALF
         ST    R3,ST3
         ST    R4,ST4
         ST    R5,ST5
         ST    R6,ST6
         ST    R7,ST7
         ST    R9,ST9
         ST    R10,ST10
         B     JRPRTRN
SENDBACK SEND  RPL=(R2),OPTCD=(SYN,SPEC,CS),AREA=CLERDATA,RECLEN=25,   X
               CHAIN=ONLY,STYPE=REQ,BRACKET=(NBB,NEB) CHNGDIR=CMD
         LTR   R15,R15
         BNZ   J1FATALF
         NI    J1TFLG,255-J1TTOP
         L     R14,J1TADDSV
NOBUMP   MVC   J1DADD1(2),0(R14)
         MVC   J1DADD2(2),2(R14)
         MVI   J1DAREA1,C' '
         MVC   J1DAREA1+1(79),J1DAREA1
         EX    R5,PRTMVC
         LA    R14,2(R14)
         ST    R14,J1TADDSV
         LA    R5,J1DOUTBF
         LA    R6,J1DOUTLN
         L     R2,J1TRPL
         SEND  RPL=(R2),RECLEN=(R6),AREA=(R5),CHAIN=ONLY,              X
               OPTCD=(SYN,SPEC),STYPE=REQ,BRACKET=(NBB,NEB)
         LTR   R15,R15
         BNZ   J1FATALF
         MVC   J1DOUTBF(1),=X'F1'
         TM    J1TFLG,J1TMRMSG     MORE DATA
         BZR   R10
         L     R6,J1TNEWAD
         L     R5,J1TNEWLN
         B     P1TSEND
**********************************************************************
*
**             GIVE OPER STATUS TO MODIFY COMMAND
*
P1CMOK   DS    0H                  GIVE OPER OK P1G
         MVC   J2DMSS(30),=CL30'OK'
         B     P1CMWTO             ISSUE WTO
P1CMINVC DS    0H                  GIVE INVALID P1G
         MVC   J2DMSS(30),=CL30'INVALID COMMAND'
         B     P1CMPOK
P1CMINVT DS    0H                  GIVE INVALID P1G
         MVC   J2DMSS(30),=CL30'INVALID COMMAND TEXT'
         B     P1CMPOK
P1CMWTO  DS    0H
         L     R0,J1DLEN
         CVD   R0,P1DWORK
         UNPK  J1DLEN2,P1DWORK+6(2)
         OI    J1DLEN2+L'J1DLEN2-1,C'0'
         L     R0,J1DMLNE
         CVD   R0,P1DWORK
         UNPK  J1DMLNE2(4),P1DWORK+5(3)
         OI    J1DMLNE2+L'J1DMLNE2-1,C'0'
         MVC   J1DBYWHO(8),J1TLUID TELL WHO CANCELLED OUTPUT
         MVI   J1DBYWHO+7,C' '
         LA    R5,J1DTPUTL
         LA    R6,J1DTPUT
         BAL   R10,P1TSEND
P1CMEND  DS    0H
         CLC   0(4,R9),=C'PEND'
         BE    P1CMPOK
         TM    J1TFLG,J1TGLBF
         BO    P1PALOOP
P1CMPOK  DS    0H
         LA    R5,L'J2SOK-1
         LA    R6,J2SOK
         L     R2,J1TRPL
         MODCB AM=VTAM,RPL=(R2),OPTCD=(CA),CHNGDIR=CMD
         BAL   R10,P1TSEND
         B     JRPRTRN
J2SPCHK  CLC   0(0,R9),J1DHLD+2  RDW+$T
PRTMVC   MVC   J1DAREA1,0(R6)
P1CMDMV  MVC   J1DHLD(0),0(R10)
J1CMWRP  DS    0H
J1CMLGF  DS    0H
JRPRTRN  DS    0H
         NI    J1TFLG,255-J1TBUSY        ;TURN ON THE BUSY FLAG
         OI    J1TFLG,J1TRECD            ;TURN ON RECEIVE DIR.
         DROP  R7
         DROP  R8
         JRPRTRN
J1FATALF DS    0H
         ABEND 121
J2SYN    EQU   *    DUMMY LABEL
P1GEOD   EQU   *    DUMMY LABEL
J1TOWN   EQU   X'02'
TRANSTBL DS    0CL256
TRANS    DC    XL24'000102030405060708090A0B0C0D0E0F1011121314151617'
         DC    XL24'18191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F'
         DC    XL16'303132333435363738393A3B3C3D3E3F'
         DC    XL24'404142434445464748494A4B4C4D4E4F5051525354555657'
         DC    XL24'58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F'
         DC    XL24'707172737475767778797A7B7C7D7E7F80C1C2C3C4C5C6C7'
         DC    XL24'C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    XL24'E0E1E2E3E4E5E6E7E8E9AAABACADAEAFB0B1B2B3B4B5B6B7'
         DC    XL24'B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    XL24'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7'
         DC    XL24'E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9000000000000'
         TITLE 'LITERAL POOL'
         LTORG
         TITLE 'STATIC STORAGE'
P1SWA    DS    0D
**********************************************************************
****NOTE NOTE NOTE  MUST KEEP STATIC AND DYNAMIC AREAS IN SYNC***
****DYNAMIC IS GETMAINED AND STATIC IS USED TO INITIALIZE IT.
**********************************************************************
J2SPRN   DC    C' '
J2SOK    DC    CL45'JRP100I '
P1SMDL   EQU   *-P1SWA
         SPACE 2
         TITLE 'DYNAMIC - GOTTEN AREA'
P1DSA    DSECT
         DS    9D                  O/S SAVE
****NOTE NOTE NOTE  MUST KEEP STATIC AND DYNAMIC AREAS IN SYNC***
****DYNAMIC IS GETMAINED AND STATIC IS USED TO INITIALIZE IT.
P1DWA    DS    0D
J1DPRN   DC    C' '
J2DOK    DC    CL45'JRP100I '
J2DMSS   EQU   J2SOK+8,30
***********************************************************************
*  EVERYTHING FROM HERE ON IS SET TO LOW VALUES AT INIT TIME          *
***********************************************************************
         DS    0F
P1DTBL   DS    F                   RETURN SAVE AREA
P1DWRET  DS    F                   RETURN SAVE AREA
P1DFMRET DS    F                   RETURN SAVE AREA
P1DWORK  DS    D                   WORK FIELD
P1DSPALL DS    C
P1DCLRE  EQU   *                   END OF DYNAMIC AREA
P1DSASIZ EQU   *-P1DWA             SIZE OF DYNAMIC AREA
         TITLE 'MISC EQUATES AND DSECTS'
         JRPDMAC
         JRPTMAC
         JRPREGS
         JRP4DS
         ISTDNIB
         IFGRPL AM=VTAM
         PUSH  PRINT
*        PRINT NOGEN               SAVE A LITTLE PAPER
         PRINT ON,GEN
         END
