JRP400   START 0
         SPACE 3
* ********************************************************************
*
*     NAME:     JRP400
*     PURPOSE:  TO WRITE SMF RECORDS IN SUPPORT FOR JRP
*     REQUIREMENTS:  MUST BE LINKED WITH AC=1, WITH RENT AND REUS
*
*
* ********************************************************************
*
         COPY  JRPGLBL
*
         SPACE 3
R0       EQU   0             WORK REGISTER
R1       EQU   1             WORK REGISTER
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12            MAPPING REGISTER
R13      EQU   13            SAVE AREA POINTER
R14      EQU   14            RETURN REGISTER
R15      EQU   15            RETURN CODE / CALLING REGISTER
         USING *,R15
         B     AROUND
         DC    CL8'JRP400'
         DC    CL8'&SYSDATE'
         DC    CL1' '
         DC    CL8'&SYSTIME'
AROUND   DS    0H
         STM   R14,R12,12(R13)     SAVE CALLERS REGISTERS
         BALR  R12,0               COPY BASE REGISTER
         USING *,R12
         LR    R3,R1               SAVE PARM POINTER
         LR    R4,R1               SAVE PARM POINTER
         LR    R11,R13             SAVE CALLER'S SAP
         GETMAIN R,LV=2048         GET A PAGE OF STRG FOR OUR WORK AREA
         USING WORKAREA,R13
         LR    R13,R1              SET ADDRESS TO OUR WORKAREA
         ST    R11,SAVEAREA+4      SAVE CALLERS SAP
*        L     R4,0(,R3)           GET ADDRESS OF PARM
         ST    R4,PARMADDR         STORE THE PARM ADDRESS
         USING JRP4DS,R4           MAP THE INPUT AREA
         USING JRP4SMF,R9          MAP THE SMF AREA
         LA    R9,SMFSTOR          POINT TO THE SMF RECORD AREA
JRP4STAR DS    0H
         B     SRNINIT              YES - GO STOP
         CLI   JRP4STAT,C'I'       IS THERE A REQUEST TO INIT?
         BE    SRNINIT              YES - GO STOP
         CLI   JRP4STAT,C'S'       IS THERE A REQUEST TO STOP?
         BE    SRNINIT              YES - GO STOP
         CLI   JRP4STAT,C'R'       GOT A RUN REQUEST?
         BE    SRNINIT              GO DO PROCESS IT
         WTO   'JRP401E - INVALID PARAMETER 1'
         ABEND 001,DUMP
         SPACE 3
SRNINIT  DS    0H
*   DO THE FOLLOWING ON RECEIVING A INIT REQUEST
*   (SHOULD ONLY BE DONE ONCE)
*   GET SMF ID
*        WTO   'JRP400I INITIALIZING'
         L     R5,16               POINT TO CVT
         USING CVT,R5              MAP CVT
         L     R6,CVTSMCA          POINT TO SMF AREA
         USING SMCABASE,R6         MAP SMF AREA
         MVC   SID(4),SMCASID      SAVE SYSTEM ID
         DROP  R5
*   INIT THE RECORD
         MVC   SMFRSEG(2),=X'0000'      SET SEGMENT DESCRIPTER
         MVC   SMFRSID(4),SID           SET SYSTEM ID
         MVC   SMFRFLG(1),=X'02'        SET SYSTEM DESCRIPTER
         MVC   SMFRRTY(1),JRP4DSMF      SET RECORD NUMBER - 255
         MVC   SMFRAPID(4),JRP4DAID     SET APPLICATION ID
*        B     EXIT                     DONE - GO EXIT
         SPACE 3
SRNXX    DS    0H
*   GET CURRENT DATE AND TIME
*        WTO   'JRP400I RUNNING     '
         TIME  BIN
         ST    R0,FTIME
         ST    R1,FDATE
*        LA    R11,SMFBFR           POINT TO BUFFER AREA
*        USING SMFRCDD,R11          MAP THE AREA
         SPACE 3
*   BUILD RECORD
         MVI   SMFRTXT,X'40'            PREP TO CLEAR AREA
         MVC   SMFRTXT+1(39),SMFRTXT      AND CLEAR REMAINDER
         MVC   SMFRTME(4),FTIME         SET TIME
         MVC   SMFRDTE(4),FDATE         SET DATE
         MVC   SMFRSRT(1),JRP4DSRN      SET SUB RECORD TYPE
         MVC   SMFRLEN(2),=X'003B'      SET RECORD LENGTH - 59
         MVC   SMFRTXT(40),JRP4DATA     MOVE TEXT
*  TEST IF SUB RECORD TYPE IS INVALID
         CLI   JRP4DSRN,X'00'      IS THE SUB RECORD NUMBER LESS?
         BL    INVSRN               YES - GO DO ERROR
         CLI   JRP4DSRN,X'39'      IS THE SUB RECORD NUMBER GREATER?
         BH    INVSRN               YES - GO DO ERROR
         B     C1                  OK - WE ARE WITHIN RANGE
INVSRN   DS    0H
         WTO   'JRP400E - INVALID CODE RECEIVED. '
         ABEND 041,DUMP
C1       DS    0H
*        MVC   BR+3(1),JRP4DSRN    STORE INDEX INTO REG STRG AREA+3
*        L     R8,BR              LOAD R15 WITH BRANCH INDEX VALUE
*        ABEND 044,DUMP
*        B     RTVT(R8)           BRANCH TO THE ROUTINE
         SPACE 3
WRTRCD   DS    0H
*   WRITE RECORD
*        WTO   'JRP400I: WRITING SMF RECORD...'
         L     R11,=F'0'            SET GOOD RETURN CODE
         SMFWTM SMFBFR              WRITE THE SMF RECORD
         LR    R3,R15               SAVE THE RETURN CODE
         LTR   R15,R15              DID THE WRITE WORK?
         BZ    EXIT                  YES - GO EXIT
         WTO   'JRP400E JRP400 ABENDING'
         ABEND 043,DUMP               TERMINATE THE PROGRAM
J4STOP   DS    0H
*        WTO   'JRP400I: JRP400 ENDING 0 '
*   EXIT PROGRAM
EXIT     DS    0H
*        WTO   'JRP400I: JRP400 ENDING 1 '
         LR    R11,R13              COPY OUR GOTTEN SAVE AREA LOC.
         L     R13,SAVEAREA+4       RELOAD CALLERS SAP
         FREEMAIN R,LV=2048,A=(R11) FREE OUR STORAGE
*        WTO   'JRP400I: JRP400 ENDING '
         LM    R14,R12,12(R13)      RELOAD CALLERS REGISTERS
         SR    R15,R15              SET PGM RC = 0
         BR    R14                  RETURN TO CALLER
*
***  STATIC AREA - UNCHANGABLE
*
WAITTIME DC    C'00000500'   TIME TO WAIT = 1 SEC. IN HHMMSSTH
         LTORG
*
***  DYNAMIC AREA - CHANGABLE
*
WORKAREA DSECT
SAVEAREA DS    18F
PARMADDR DS    F
BR       DC    F'0'
SID      DC    4CL1' '
FTIME    DC    F'0'
FDATE    DC    F'0'
*
SMFSTOR  DS    CL70
         JRP4SMF
         JRP4DS
         CVT   DSECT=YES,LIST=NO
         IEESMCA
         END
