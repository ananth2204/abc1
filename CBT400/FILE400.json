{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011927000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1234506, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE400.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1234506, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1234506, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE400.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x14\\x0c'", "DS1TRBAL": "b'\\x14\\xda'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\xd7\\x00\\r\\x02\\xd9\\x00\\x03\\x00\\x15'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$DYNDOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0e\\x00\\x00\\x00\\x840\\x7f\\x00\\x92\\x04_\\x13'\\x00b\\x00;\\x00\\x00\\xe2\\xc3\\xd7\\xe2\\xc4\\xe2@@@@\"", "ispf": {"version": "01.14", "flags": 0, "createdate": "1984-11-02T00:00:00", "modifydate": "1992-02-14T13:27:00", "lines": 98, "newlines": 59, "modlines": 0, "user": "SCPSDS"}, "text": "             SECURITY PACIFIC AUTOMATION COMPANY\n           \u00bf\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u009a\n          TO:      DYNAMASK USERS\n\n          FROM:    STEVEN SMITH\n                   SYSTEMS ARCHITECT\n                   TECHNICAL SERVICES  G12-99\n\n          DATE:    JUNE  14, 1990\n\n          SUBJECT: NEW DYNAMASK FOR XA\n\n          SEND INQUIRES TO:\n                   STEVEN D. SMITH   G12-99\n                   SECURITY PACIFIC AUTOMATION COMPANY\n                   611 NORTH BRAND\n                   GLENDALE, CA, 91203\n\n          OR PHONE: (818) 507-3014\n\n      THE ENCLOSED TAPE IS A IEBCOPY UNLOAD OF THE NEW DYNAMASK\n   AND RELATED PROGRAMS.\n   THE TAPE IS  NONLABELED AND HAS TWO  FILES,  BOTH IEBCOPY\n   UNLOADS OF THE SAME MEMBERS.  NO ADDITIONAL USER MACROS\n   ARE REQUIRED FOR THESE PROGRAMS.\n\n   MEMBERS:\n\n    $$DYNDOC     THIS MEMBER\n\n    DYNAMSK7\n      DYNAMASK PROVIDES THE ABILITY TO DYNAMICALLY CHANGE AND ADD\n      TO THE UNIT NAMES DEFINED AT SYSGEN.   DYNAMASK OPTIONALLY\n      CAN BE GIVEN UNIT ADDRESSES OR VOLUMES AND THE UNIT NAMES\n      WILL BE ASSIGNED TO THE UNIT ADDRESSES THAT THE VOLUMES ARE\n      CURRENTLY MOUNTED.  IT CAN BE RUN AT ANY TIME THE SYSTEM\n      IS DAINED OF ALL ACTIVITY.  DYNAMASK RUNS AS AN OPERATOR\n      REQUESTED OR BATCH SUBMITTED UTILITY WHICH MAKES THE\n      NECESSARY CONTROL BLOCK CHANGES AND EXITS.  IT REQUIRES\n      MINIMUM RESOURCES AND EXECUTES IN A FEW SECONDS.\n      DYNAMASK SUPPORTS THE FOLLOWING RELEASES:\n      MVS3.8 - MVS/SP1.3, MVS/XA2.0 - 2.1.7\n\n      COMPLETE DOCUMENTATION IS CONTAINED IN THE COMMENTS AT THE\n      FRONT OF THE SOURCE\n\n    DYNAMSK2\n      THIS IS THE DYNAMASK FOR MVS/XA 2.2.0  - MVS/ESA 3.1.3\n\n    DYNAMCKR\n      THIS WILL CHECK AND VALIDATE THE INPUT TO DYNAMSK2.  ALL UNITS\n      REQUESTED IN THE INPUT ARE LOCATED FOR VALIDATION PURPOSES.\n      DYNAMCKR IS CREATED BY ASSEMBLING DYNAMSK2 WITH A SYSPARM(CKER)\n\n    DYNAMTST\n      THIS WILL BUILD A NEW EDT BUT WILL NOT REPLACE THE OLD EDT.\n      THE NEW, OLD, AND INITIAL EDTS WILL BE DUMPED TO SYSPRINT.\n      DYNAMTST IS CREATED BY ASSEMBLING DYNAMSK2 WITH A SYSPARM(TEST)\n\n    DYNAMSK4\n      THIS IS THE DYNAMASK FOR MVS/ESA 4.2  - MVS/ESA 4.2.2\n              (MAY WORK WITH ESA 4.1)\n\n    DYNASWAP\n      DYNASWAP PROVIDES THE ABILITY TO DYNAMICALLY SWAP TWO DEVICES\n      WITHIN THE EDT,  BOTH DEVICES MUST BE OFFLINE DASD DEVICES.\n      THIS PROVIDES A WAY TO REPLACE A BAD VOLUME WITH A RECOVERY\n      VOLUME FOR ALL RELATED ESOTARIC NAMES WITHIN THE EDT.\n      IT CAN ALSO BE USED TO ADD NEW DEVICES TO A SET OF RELATED\n      ESORTARIC NAMES BY SWAPPING A DEVICE FOR A NEW VOLUME FOR\n      A NOT CONNECTED DEVICE ADDRESS ADDED TO THESE ESORTARICS\n      FOR THIS PURPOSE.  THIS IS THE FOR MVS/XA 2.2.0 - MVS/ESA 3.1.3\n\n    DYNASWP4\n      THIS IS THE DYNASWAP FOR MVS/ESA 4.2  - MVS/ESA 4.2.2\n\n    GENERIC\n      THIS IS A MVS/370 PROGRAM TO UPDATE THE DEVTMASK AND DEVTNAME\n      TABLES.  IT WILL BE CALLED BY DYNAMASK IF INCLUDED IN THE\n      LKED AND WILL BE BYPASSED IF IN A XA SYSTEM.\n      THIS PROGRAM WAS WRITTEN BY LOCKHEED CALIFORNIA.\n      THIS PROGRAM IS NOT SUPPORTED BY SECURITY PACIFIC AUTOMATION\n\n    SYSUNITS\n      SYSUNITS WILL READ A LIST OF UNITNAMES AND RETURN THE RELATED\n      UNITS AND VOLUMES TO SYSOUT OR A DATASET\n\n    UCBMASK\n      UCBMASK WILL SET MOUNT ATTR BASED ON VOLSER USING A USER\n      SUPPLIED VOLUME LIST DATASET WITH GENERIC NAMES\n\n    VATUCB\n      THIS IS A PROGRAM TO UPDATE THE UCB'S FROM INFORMATION IN\n      A USER SUPPLIED VATLST.  THIS WILL RUN IN XA AND MVS/370 MODE.\n      IT WILL BE CALLED BY DYNAMASK IF INCLUDED IN THE LKED\n      THIS PROGRAM WAS WRITTEN BY LOCKHEED CALIFORNIA.\n      THIS PROGRAM IS NOT SUPPORTED BY SECURITY PACIFIC AUTOMATION\n      THIS PROGRAM WILL NOT WORK WITH ESA GENERIC VATLST ENTRIES\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DYNAMSK@": {"ttr": 519, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1d\\x00\\x00\\x00\\x88\\x03\\x9f\\x00\\x893/\\x17\\x12\\x08\\xd4\\x08\\x9b\\x01&\\xe2\\xc3\\xd7\\xe2\\xc4\\xe2@@@@'", "ispf": {"version": "01.29", "flags": 0, "createdate": "1988-02-08T00:00:00", "modifydate": "1989-11-28T17:12:00", "lines": 2260, "newlines": 2203, "modlines": 294, "user": "SCPSDS"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "DYNAMSK2": {"ttr": 1290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x90\\x15?\\x00\\x92\\x01\\x7f\\x16#\\t\\x14\\x08\\xea\\x002\\xe2\\xc3\\xd7\\xe2\\xc4\\xe2@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1990-06-02T00:00:00", "modifydate": "1992-01-17T16:23:00", "lines": 2324, "newlines": 2282, "modlines": 50, "user": "SCPSDS"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "DYNAMSK4": {"ttr": 2312, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00\\x00\\x00\\x92\\x01\\x7f\\x00\\x920\\x1f\\x15X\\n\\x10\\x08\\xd4\\n\\x10\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "1992-01-17T00:00:00", "modifydate": "1992-10-27T15:58:00", "lines": 2576, "newlines": 2260, "modlines": 2576, "user": "SBGCSC"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "DYNAMSK7": {"ttr": 3337, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x00\\x00\\x87\\x06\\x8f\\x00\\x903\\x1f\\x117\\x08\\xea\\x08\\x93\\x00\\xa2\\xe2\\xc3\\xd7\\xe2\\xc4\\xe2@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1987-03-09T00:00:00", "modifydate": "1990-11-27T11:37:00", "lines": 2282, "newlines": 2195, "modlines": 162, "user": "SCPSDS"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "DYNASWAP": {"ttr": 4358, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x00\\x90\\x15?\\x00\\x903\\x1f\\t\"\\x01\\xab\\x07\\xf9\\x00\\xee\\xe2\\xc3\\xd7\\xe2\\xc4\\xe2@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "1990-06-02T00:00:00", "modifydate": "1990-11-27T09:22:00", "lines": 427, "newlines": 2041, "modlines": 238, "user": "SCPSDS"}, "text": "DYNASWAP TITLE 'PROGRAM TO MODIFY ELIGIBLE DEVICE TABLE'\n***********************************************************************\n*    CHANGE DATE: JUNE 1990  MVS 2.2 VERSION ONLY (ALSO ESA)          *\n*                                                                     *\n*                                                                     *\n*     ABSTRACT                                                        *\n*                                                                     *\n*     DYNASWAP PROVIDES THE ABILITY TO DYNAMICALLY SWAP TWO DEVICES   *\n*     WITHIN THE EDT,  BOTH DEVICES MUST BE OFFLINE DASD DEVICES.     *\n*     THIS PROVIDES A WAY TO REPLACE A BAD VOLUME WITH A RECOVERY     *\n*     VOLUME FOR ALL RELATED ESOTARIC NAMES WITHIN THE EDT.           *\n*     IT CAN ALSO BE USED TO ADD NEW DEVICES TO A SET OF RELATED      *\n*     ESORTARIC NAMES BY SWAPPING A DEVICE FOR A NEW VOLUME FOR       *\n*     A NOT CONNECTED DEVICE ADDRESS ADDED TO THESE ESORTARICS        *\n*     FOR THIS PURPOSE.                                               *\n*                                                                     *\n*     DYNASWAP SUPPORTS THE FOLLOWING RELEASES:                       *\n*                                                                     *\n*     MVS/XA 2.2.0 - ESA 3.1.3                                        *\n*                                                                     *\n*     INQUIRES:                                                       *\n*                                                                     *\n*     SEND INQUIRES TO:                                               *\n*              STEVEN D. SMITH   G12-99                               *\n*              SECURITY PACIFIC AUTOMATION COMPANY                    *\n*              611 NORTH BRAND                                        *\n*              GLENDALE, CA, 91203                                    *\n*                                                                     *\n*     OR PHONE: (818) 507-3014                                        *\n*                                                                     *\n*                                                                     *\n*     INSTALLATION                                                    *\n*                                                                     *\n*     DYNASWAP IS A SINGLE MODULE AND MUST BE LINK EDITED INTO        *\n*     AN AUTHORIZED LIBRARY WITH ATTRIBUTES AC=1 RENT REUS REFR       *\n*     ASSEMBLY USING ASMH AND XA MACRO LIBRARY                        *\n*                                                                     *\n*                                                                     *\n*     A PARM VALUE MUST BE INCLUDED TO PROVIDE THE TWO DEVICE         *\n*     ADDRESSES TO BE SWAPPED.                                        *\n*                                                                     *\n*      //DYNASWAP PROC A=NON,B=NON                                    *\n*      //DYNASWAP EXEC PGM=DYNASWAP,PARM='&A,&B'                      *\n*                                                                     *\n*     RESTRICTIONS                                                    *\n*                                                                     *\n*     THE DEVICES MUST BE OFFLINE.                                    *\n*     THE DEVICES MUST BE DASD                                        *\n*     THE DEVICES MUST BE THE SAME DEVICE TYPE                        *\n*                                                                     *\n*     NOTES                                                           *\n*                                                                     *\n*     THERE ARE NO ENQUE INVOLVED OR NECESSARY AND THERE ARE NO       *\n*     INTEGRITY PROBLEMS WITH ALLOCATION BECAUSE THE DEVICES ARE      *\n*     OFFLINE WHEN THE SWAP IS DONE.  THE GROUP STRUCTURE OF THE      *\n*     EDT IS NOT CHANGES AND THEREFOR DOES NOT AFFECT MSX (MIM)       *\n*     OR STC 4400 HSC SOFTWARE                                        *\n*                                                                     *\n*     ALL MESSAGES ARE OF THE FORM TSDXXX WHICH CAN BE EDITTED        *\n*     TO LOCAL MESSAGE ID STANDARDS                                   *\n*                                                                     *\n*    ATTRIBUTES - REENTRANT                                           *\n*    TAB SETTINGS - 10 16 36 41 72                                    *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n         SPACE 3                                               DM JUN83\n         PRINT OFF                                             DM JUN83\n         MACRO ,                                               DM JUN83\n         EDT   &TYPE=SP                                        DM NOV83\nEDT      DSECT ,                   ELIGIBLE DEVICES TABLE      DM JUN83\nEDTNAME  DS    CL3                   EDT NAME                  SS FEB88\nEDTLEVEL DS    C                     LEVEL                     SS FEB88\nEDTCREAT DS    0CL8                EDT CREATION ID             SS FEB88\nEDTCBNAM DS    CL6                 EDT CB NAME                 SS FEB88\nEDTIDNUM DS    CL2                 EDT VER ID                  SS FEB88\nEDTDATE  DS    CL8                   CREATION DATE (MM/DD/YY)  SS FEB88\nEDTTIME  DS    CL5                     TIME (HH.MM)            SS FEB88\n         DS    XL3                                             SS FEB88\nEDTLKUP  DS    A                   POINTER TO LOOK-UP SECTION  DM JUN83\nEDTGNRC  DS    A                   POINTER TO GENERIC SECTION  DM JUN83\nEDTGRP   DS    A                   POINTER TO GROUP SECTION    DM JUN83\nEDTUCB   DS    A                   POINTER TO UCB SECTION      DM JUN83\nEDTMSK   DS    A                   POINTER TO MASK SECTION     DM JUN83\nEDTGRPT  DS    A                   POINTER TO GROUP POINTERS   DM JUN83\nEDTPREF  DS    A                   POINTER TO PREFERENCE TABLE DM JUN83\nEDTTAPE  DS    A                   POINTER TO TAPE DEVICE EL   SS FEB88\nEDTGENE  DS    A                   MVSCP GENERATED EDT ADDRESS SS FEB88\nEDTSIZE  DS    A                   SUBPOOL AND SIZE OF EDT     SS FEB88\nEDTHDRLX EQU   *-EDT               LENGTH OF THE HEADER        DM JUN83\n         SPACE 2                                               DM JUN83\n* EACH OF THE FOLLOWING SECTIONS IS PREFIXED BY                SS FEB88\n*   A HEADER  - MOST ARE 12 BYTES LONG EXCEPT FOR LOOKUP HDR   SS FEB88\n*   FIRST 8 BYTES ARE HEADER ID                                SS FEB88\n*   NEXT  4 BYTES ARE THE NUMBER OF ENTRYS                     SS FEB88\n*   NEXT  4 BYTES ARE FOR LOOKUP SECTION ONLY                  SS FEB88\n*         2 BYTES ARE FOR LOOKUP INDEX TO FIRST ENTRY          SS FEB88\n*         2 BYTES ARE RESERVED                                 SS FEB88\n         SPACE ,                                               DM JUN83\nLKPSECT  DSECT ,                   LOOK-UP SECTION             DM JUN83\nLKPNAME  DS    CL8                 UNITNAME                    DM JUN83\nLKPDEVT  DS    XL4                 DEVICE TYPE (AS IN CATALOG) DM JUN83\nLKPMSKPT DS    A                   INDEX   TO MASK ENTRY       SS FEB88\nLKPALTPT DS    A                   ALTERNATE MASK INDEX        SS FEB88\nLKPGNRC# DS    F                   NUMBER OF GENERICS          DM JUN83\nLKPFLAGS DS    XL2                 FLAGS                       DM JUN83\nLKPVIO   EQU   X'80'               ELIGIBLE FOR VIO            SS JAN84\nLKPAGMSK EQU   X'40'               GENERIC HAS ALT MASK        SS JAN84\nLKPMGEN  EQU   X'20'               ALLOC OF MUTL GEN OK        SS JAN84\nLKPGENR  EQU   X'10'               THIS IS A GENERIC: FULL DEV SS JAN84\nLKPESOTR EQU   X'08'               THIS IS A ESOTERIC          SS JAN84\nLKPGGERN EQU   X'04'               THIS IS A GENERATED GEN     SS JAN84\nLKPGESOR EQU   X'08'               THIS IS A GENERATED ESOTR   SS FEB88\nLKPAFFIX DS    H                   AFFINITY INDEX              SS FEB88\nLKPGNRC1 DS    H                   INDEX   TO FIRST GENERIC    SS FEB88\nLKPNXT   DS    H                   INDEX TO NEXT ENTRY         SS FEB88\nLKPLNG   EQU   *-LKPSECT           LENGTH OF SECTION           DM JUN83\n         SPACE ,                                               DM JUN83\nGNRCSECT DSECT ,                   GENERIC SECTION             DM JUN83\nGNRCDEVT DS    XL4                 DEVICE TYPE (AS IN CATALOG) DM JUN83\nGNRCGRP# DS    F                   NUMBER OF GROUPS            DM JUN83\nGNRCGRP1 DS    H                   INDEX   TO FIRST GROUP      SS FEB88\nGNRCNXT  DS    H                   INDEX TO NEXT ENTRY         SS FEB88\nGNRCLNG  EQU   *-GNRCSECT          LENGTH OF SECTION           DM JUN83\n         SPACE ,                                               DM JUN83\nGRPTSECT DSECT                     GROUP POINTER SEC           SS JAN84\nGRPTPTR  DS    H                   A GROUP INDEX               SS FEB88\nGRPTNXT  DS    H                   INDEX TO NEXT ENTRY         SS FEB88\nGRPTLNG  EQU   *-GRPTSECT          LENGTH OF SECTION           SS FEB88\n         SPACE ,                                               SS JAN84\nGRPSECT  DSECT ,                   GROUP SECTION               DM JUN83\nGRPID    DS    H                   GROUP ID NUMBER             SS FEB88\nGRPDEV#  DS    H                   NUMBER OF DEVICES           SS FEB88\nGRPUCB1  DS    A                   INDEX   TO FIRST UCB        SS FEB88\nGRPNXT   DS    H                   INDEX TO NEXT ENTRY         SS FEB88\n         DS    H                   RESERVED                    SS FEB88\nGRPLNGX  EQU   *-GRPSECT           LENGTH OF SECTION XA SECT   DM JUN83\n         SPACE ,                                               DM JUN83\nMSKSECT  DSECT ,                   GROUP MASK SECTION          DM JUN83\nMSKMASK  DS    X                   GROUP MASK (LENGTH VARIABLE)DM JUN83\nMSKLNG   EQU   *-MSKSECT           LENGTH OF SECTION           DM JUN83\n         SPACE ,                                               DM JUN83\nUCBSECT  DSECT ,                   UCB POINTER SECTION         DM JUN83\nDEV#     DS    CL3                 DEVICE NUMBER IN EBCDIC     DM NOV83\n         DS    C                   EXTRA BYTE                  SS FEB88\nDEVNXT   DS    F                   INDEX TO NEXT ENTRY         SS FEB88\nUCBLNGX  EQU   *-UCBSECT           LENGTH OF SECTION XA SECT   DM JUN83\n         SPACE ,                                               DM JUN83\n         MEND  ,                                               DM JUN83\n         PRINT ON                                              DM JUN83\n         SPACE 3\nDYNASWAP CSECT\n*\n*  EQUATES FOR REGISTERS AND FLAGS\n*\nFF       EQU   X'FF'\nCVTPT    EQU   16                  PSA POINTER TO CVT\nCVTILK2  EQU   40                  CVT POINTER TO UCB LOOK-UP  DM JUN83\nCVTJESCT EQU   X'128'              JESCT ADDR                  SS JAN84\nCVTDCB   EQU   X'74'               CVT SYSTEM TYPE OFFSET      SS JAN84\nCVTMVSE  EQU   X'80'               XA MODE                     SS JAN84\nJESUPLP  EQU   X'5C'               UCB POINTER LIST            SS JAN84\nJESEDTA  EQU   X'34'               EDT POINTER                 SS JAN84\nUPLUCBA  EQU   X'10'               FIRST POINTER IN LIST       SS JAN84\nUCBSTAT  EQU   3,1,C'X'            UCB STATUS                  DM NOV83\nUCBONLI  EQU   128                 DEVICE IS ONLINE            DM NOV83\nUCBCHGS  EQU   64                  DEVICE IS TO BE CHANGED TO  DM NOV83\n*               OFFLINE & ALLOCATION IS ENQUEUED OR DEVICE     DM NOV83\n*               IS ALLOCATED                                   DM NOV83\nUCBUNLD  EQU   16                  UNLOAD IN PROCESS           DM NOV83\nUCBNAME  EQU   13,3,C'C'           UCB NAME                    DM NOV83\nUCBNUM   EQU   4,2,C'X'            UCB DEVICE NUMBER           SS MAR87\nUCBTYPE  EQU   16,4,C'X'           DEVICE TYPE                 DM NOV83\nUCBDVCLS EQU   18,1,C'X'           DEVICE CLASS                DM NOV83\nUCB3DACC EQU   32                  DASD CLASS                  DM NOV83\nUCBVOLI  EQU   28,6,C'C'           VOLUME SERIAL               DM NOV83\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2                   USED FOR COUNTER\nR3       EQU   3                   USED AS POINTER IN LOOP\nR4       EQU   4                   UCB, POINTER  NEXT IN NEW EDT\nR5       EQU   5                   COUNTER OR POINTER  NEW PTXREF\nR6       EQU   6                   COUNTER OR POINTER  OLD PTXREF\nR7       EQU   7                   COUNTER TO TOTAL FOR EACH SEC\nR8       EQU   8                   POINTER TO MODEL EDT\nR9       EQU   9                   SIZE OF GROUP - UNIT XREF\nR10      EQU   10                  POINTER TO NEW EDT\nR11      EQU   11                  PROGRAM BASE\nR12      EQU   12                  PROGRAM BASE TWO\nR13      EQU   13                  SAVE AREA/WORK BASE\nR14      EQU   14\nR15      EQU   15\n         SPACE 3                                               SS JUN90\n         SAVE  (14,12),T,DYNASWAP                              SS JUN90\n         LR    R11,R15             SET UP BASE                 SS JUN90\n         USING DYNASWAP,R11                                    SS JUN90\n         L     R2,CVTPT                                        SS JUN90\n         TM    CVTDCB(R2),CVTMVSE                              SS JUN90\n         BZ    XA0                                             SS JUN90\n         LA    R2,IN31J                 *                      SS JUN90\n         O     R2,=X'80000000'          *                      SS JUN90\n         BSM   0,R2                     *                      SS JUN90\nIN31J    DS    0H                       *                      SS JUN90\n         L     R2,CVTPT                 LOAD CVT ADDR          SS JUN90\n         L     R2,CVTJESCT(R2)          LOAD JESCT ADDR        SS JUN90\n         L     R2,JESEDTA(R2)           LOAD EDT ADDR          SS JUN90\n         CLC   0(3,R2),=C'EDT'          XA2.2 EDT              SS JUN90\n         BE    XA220                    YES                    SS JUN90\n         LA    R2,XA0                   *                      SS JUN90\n         BSM   0,R2                     *                      SS JUN90\nXA0      DS    0H                                              SS JUN90\n         DC    X'00'                    *                      SS JUN90\nXA220    DS    0H                       *                      SS JUN90\n         LA    R2,IN24J                 *                      SS JUN90\n         BSM   0,R2                     *                      SS JUN90\nIN24J    DS    0H                                              SS JUN90\n         L     R0,GETMLEN          LENGTH OF GETMAIN           SS JUN90\n         LR    R6,R1               SAVE PARM ADDR              SS JUN90\n         GETMAIN R,LV=(0)          STORAGE FOR WORK AND TABLES SS JUN90\n         LR    R2,R1               AREA TO ZERO                SS JUN90\n         L     R3,GETMLEN          LENGTH TO ZERO              SS JUN90\n         SR    R4,R4               FROM ADDRESS NULL           SS JUN90\n         SR    R5,R5               FILL CHAR & FROM LEN        SS JUN90\n         MVCL  R2,R4               ZERO GETMAIN AREA           SS JUN90\n         ST    R1,8(R13)           FORWARD POINTER             SS JUN90\n         ST    R13,4(R1)           BACK POINTER                SS JUN90\n         LR    R13,R1              SET BASE/SAVE AREA          SS JUN90\n         USING SAVE,R13                                        SS JUN90\n         LTR   R5,R6               ANY PARM PASSED             SS JUN90\n         BZ    MSG1                NO                          SS JUN90\n         L     R5,0(R5)            PARM ADDRESS                SS JUN90\n         LTR   R5,R5               ANY                         SS JUN90\n         BZ    MSG1                BAD                         SS JUN90\n         LH    R1,0(R5)            GET LENGTH                  SS JUN90\n         LTR   R1,R1               ANY LENGTH                  SS JUN90\n         BZ    MSG1                BAD                         SS JUN90\n         CH    R1,=H'7'            EXACT SIZE                  SS JUN90\n         BNE   MSG1                BAD                         SS JUN90\n         MVC   SAVEPARM(7),2(R5)        EXECUTED MOVE          SS JUN90\n         OC    SAVEPARM(7),BLK8         FORCE UPPER CASE       SS JUN90\n*                                                              SS JUN90\n*  FIND UNITS IN EDT THAT MATCH PARM CUUS                      SS JUN90\n*                                                              SS JUN90\n         LA    R1,IN31A                 START OF 31 BIT MODE   SS JUN90\n         O     R1,=X'80000000'          MODE BIT ON            SS JUN90\n         BSM   0,R1                     SWITCH MODES TO 31     SS JUN90\nIN31A    DS    0H                                              SS JUN90\n         L     R2,CVTPT            LOAD CVT ADDR               SS JUN90\n         L     R2,CVTJESCT(R2)     LOAD JESCT ADDR             SS JUN90\n         L     R3,JESEDTA(R2)      LOAD OLD EDT PTR            SS JUN90\n         LR    R8,R3               ASSUME GEN EDT              SS JUN90\n         LA    R8,0(,R8)                CLEAR BIT ZERO         SS JUN90\n         ST    R8,EDTPTR                SAVE SYSGEN EDT        SS JUN90\n         USING EDT,R8                                          SS JUN90\n         L     R1,JESUPLP(R2)           UCB PT TLE             SS JUN90\n         LA    R1,UPLUCBA-4(R1)         OFFSET FOR INDEX       SS JUN90\n         L     R3,EDTGRP                GRP PT SEC             SS JUN90\n         USING GRPSECT,R3                                      SS JUN90\n         L     R2,8(R3)                 NUM OF PT              SS JUN90\n         LA    R3,12(R3)                OVER HDR               SS JUN90\nBLDGX2   LH    R5,GRPID                 GRP ID                 SS JUN90\n         LH    R6,GRPDEV#               UCBS IN GRP            SS JUN90\n         L     R7,GRPUCB1               FIRST DEV INDEX        SS JUN90\n         LR    R14,R7                   SAVE INDEX             SS JUN90\n         SLA   R7,3                     TIMES 8                SS JUN90\n         AL    R7,EDTUCB                ADD SECTION ADDRESS    SS JUN90\n         LA    R7,12-8(,R7)             ADJUST FOR TRUE ADDR   SS JUN90\n         USING UCBSECT,R7                                      SS JUN90\nBLDGXE2  DS    0H                                              SS JUN90\n         CLC   0(3,R7),SAVEPARM         SAME AS FIRST          SS JUN90\n         BNE   NOTFIRST                                        SS JUN90\n         ST    R7,SAVEDP1               SAVE IT                SS JUN90\n         LR    R7,R14                   GET DEVICE ENTRY       SS JUN90\n         SLA   R7,2                     TIMES 4 (FULL WORD)    SS JUN90\n         ALR   R7,R1                    INDEX INTO UCB LIST    SS JUN90\n         ST    R7,SAVEUP1               SAVE IT                SS JUN90\nNOTFIRST DS    0H                                              SS JUN90\n         CLC   0(3,R7),SAVEPARM+4       SAME AS SECOND         SS JUN90\n         BNE   NOTSECD                                         SS JUN90\n         ST    R7,SAVEDP2               SAVE IT                SS JUN90\n         LR    R7,R14                   GET DEVICE ENTRY       SS JUN90\n         SLA   R7,2                     TIMES 4 (FULL WORD)    SS JUN90\n         ALR   R7,R1                    INDEX INTO UCB LIST    SS JUN90\n         ST    R7,SAVEUP2               SAVE IT                SS JUN90\nNOTSECD  DS    0H                                              SS JUN90\n         LR    R7,R14                   GET DEVICE ENTRY       SS JUN90\n         SLA   R7,3                     TIMES 8                SS JUN90\n         AL    R7,EDTUCB                ADD SECTION ADDRESS    SS JUN90\n         LA    R7,12-8(,R7)             ADJUST FOR TRUE ADDR   SS JUN90\n         L     R7,DEVNXT                GET NEXT INDEX         SS JUN90\n         LR    R14,R7                   SAVE THIS INDEX        SS JUN90\n         SLA   R7,3                     TIMES 8                SS JUN90\n         AL    R7,EDTUCB                ADD SECTION ADDRESS    SS JUN90\n         LA    R7,12-8(,R7)             ADJUST FOR TRUE ADDR   SS JUN90\n         BCT   R6,BLDGXE2               FOR EACH IN GRP        SS JUN90\n         LA    R3,GRPLNGX(R3)           NEXT GRP               SS JUN90\n         BCT   R2,BLDGX2                FOR ALL GRPS           SS JUN90\n         DROP  R3,R7,R8                                        SS JUN90\n         SR    R10,R10                  ZERO FLAG              SS JUN90\n         LA    R15,SAVEPARM             THIS UCB               SS JUN90\n         L     R1,SAVEDP1                ADDR                  SS JUN90\n         LTR   R1,R1                     ANY ADDR              SS JUN90\n         BZ    ERR2                      NO, ERROR             SS JUN90\n         L     R2,SAVEUP1                                      SS JUN90\n         L     R6,0(R2)                  UCB PTR               SS JUN90\n         CLI   UCBTYPE+2(R6),X'20'      DSAD                   SS JUN90\n         BNE   ERR4                     NO                     SS JUN90\n         TM    UCBSTAT(R6),UCBONLI      ONLINE                 SS JUN90\n         BZ    CKU2                     NO                     SS JUN90\n         BAL   R14,MSG3                 *                      SS JUN90\n         B     CKU2                     *                      SS JUN90\nERR2     DS    0H                       *                      SS JUN90\n         BAL   R14,MSG2                 *                      SS JUN90\n         B     CKU2                     *                      SS JUN90\nERR4     DS    0H                       *                      SS JUN90\n         BAL   R14,MSG5                 *                      SS JUN90\n         B     CKU2                     *                      SS JUN90\nCKU2     DS    0H                       *                      SS JUN90\n         LA    R15,SAVEPARM+4           THIS UCB               SS JUN90\n         L     R3,SAVEDP2                                      SS JUN90\n         LTR   R3,R3                     ANY ADDR              SS JUN90\n         BZ    ERR3                      NO, ERROR             SS JUN90\n         L     R4,SAVEUP2                                      SS JUN90\n         L     R8,0(R4)                  UCB PTR               SS JUN90\n         CLI   UCBTYPE+2(R8),X'20'      DSAD                   SS JUN90\n         BNE   ERR5                     NO                     SS JUN90\n         TM    UCBSTAT(R8),UCBONLI      ONLINE                 SS JUN90\n         BZ    CKALL                    NO                     SS JUN90\n         BAL   R14,MSG3                 *                      SS JUN90\n         B     EXIT                     *                      SS JUN90\nERR3     DS    0H                       *                      SS JUN90\n         BAL   R14,MSG2                 *                      SS JUN90\n         B     EXIT                     *                      SS JUN90\nERR5     DS    0H                       *                      SS JUN90\n         BAL   R14,MSG5                 *                      SS JUN90\n         B     EXIT                     *                      SS JUN90\nCKALL    DS    0H                       *                      SS JUN90\n         LTR   R10,R10                  FLAG                   SS JUN90\n         BNZ   EXIT                     SOME ERROR             SS JUN90\n         CLC   UCBTYPE+2(2,R6),UCBTYPE+2(R8) SAME TYPE         SS NOV90\n         BNE   MSG6                                            SS NOV90\n         CLC   UCBTYPE(1,R6),UCBTYPE(R8) SAME TYPE             SS NOV90\n         BNE   MSG6                                            SS NOV90\n         L     R7,0(R3)                  VALUE                 SS JUN90\n         L     R5,0(R1)                  VALUE                 SS JUN90\n         NOP   EXIT        TEST , DONT SWAP                    SS JUN90\n         LR    R10,R1              SAVE R1                     SS JUN90\n         MODESET KEY=ZERO               *                      SS JUN90\n         ST    R5,0(R3)            SWAP  VALUE                 SS JUN90\n         ST    R6,0(R4)            SWAP  UCB PTR               SS JUN90\n         ST    R7,0(R10)           SWAP  VALUE                 SS JUN90\n         ST    R8,0(R2)            SWAP  UCB PTR               SS JUN90\n         MODESET KEY=NZERO              *                      SS JUN90\n         MVC   WTOE(WTO4LN),WTO4                               SS JUN90\n         MVC   WTOE+28(7),SAVEPARM                             SS JUN90\n         WTO   MF=(E,WTOE)                                     SS JUN90\nEXIT     LR    R1,R13                                          SS JUN90\n         L     R0,GETMLEN          LENGTH TO FREE              SS JUN90\n         L     R13,4(R13)                                      SS JUN90\n         FREEMAIN R,A=(1),LV=(0)                               SS JUN90\n         RETURN (14,12),RC=0                                   SS JUN90\n         EJECT ,                                               SS JUN90\nMSG1     WTO   'TSDXXXI PARM MISSING OR MORE THAN 7 CHARACTORS',       X\n               ROUTCDE=(2,11)\n         B     EXIT\nMSG6     WTO   'TSDXXXI UNITS ARE NOT THE SAME DEVICE TYPE    ',       X\n               ROUTCDE=(2,11)                                  SS NOV90\n         B     EXIT                                            SS NOV90\nMSG2     MVC   WTOE(WTO2LN),WTO2                               SS JUN90\n         MVC   WTOE+17(3),0(R15)                               SS JUN90\n         WTO   MF=(E,WTOE)                                     SS JUN90\n         LA    R10,4             ERROR FLAG                    SS JUN90\n         BR    R14               RETURN                        SS JUN90\nMSG3     MVC   WTOE(WTO3LN),WTO3                               SS JUN90\n         MVC   WTOE+17(3),0(R15)                               SS JUN90\n         WTO   MF=(E,WTOE)                                     SS JUN90\n         LA    R10,4             ERROR FLAG                    SS JUN90\n         BR    R14               RETURN                        SS JUN90\nMSG5     MVC   WTOE(WTO5LN),WTO5                               SS JUN90\n         MVC   WTOE+17(3),0(R15)                               SS JUN90\n         WTO   MF=(E,WTOE)                                     SS JUN90\n         LA    R10,4             ERROR FLAG                    SS JUN90\n         BR    R14               RETURN                        SS JUN90\nWTO2     WTO   'TSDXXXI UNIT XXX NOT FOUND               ',            X\n               ROUTCDE=(2,11),                                         X\n               MF=L\nWTO2LN   EQU   *-WTO2\nWTO3     WTO   'TSDXXXI UNIT XXX NOT OFFLINE             ',            X\n               ROUTCDE=(2,11),                                         X\n               MF=L\nWTO3LN   EQU   *-WTO3\nWTO4     WTO   'TSDXXXI SWAP DONE                        ',            X\n               ROUTCDE=(2,11),                                         X\n               MF=L\nWTO4LN   EQU   *-WTO4\nWTO5     WTO   'TSDXXXI UNIT XXX NOT DASD TYPE           ',            X\n               ROUTCDE=(2,11),                                         X\n               MF=L\nWTO5LN   EQU   *-WTO5\nMSG10    ABEND 10,DUMP\nGETMLEN  DC    A(SAVEEND-SAVE)          FOR TEMPORARY WORK AREA\nBLK8     DC    CL8' '                   *                      SS JUN90\n         LTORG\n         EJECT\nSAVE     DSECT\nSAVEAREA DS    18F\nDBLWRD   DS    D                                               SS JUN90\nUPLSTR   DS    F                   SAVE POINTER TO UCB PT LIST SS JUN90\nNUMUNIT  DS    F                   NUMBER OF UNITS             SS JUN90\nUCBLU    DS    F                                               SS JUN90\nGXRLNG2  DS    H                   SAVE LENGTH GXREF           SS JUN90\nSAVEGRPT DS    A                        *                      SS JUN90\nEDTPTR   DS    A                                               SS JUN90\nSAVEDP1  DS    A                                               SS JUN90\nSAVEUP1  DS    A                                               SS JUN90\nSAVEDP2  DS    A                                               SS JUN90\nSAVEUP2  DS    A                                               SS JUN90\nFLAGS    DS    X                    READ FLAGS                 SS JUN90\nBFLAG    DS    X                    SORT FLAG                  SS JUN90\nFLAG2    DS    X                    MISC FLAGS                 SS JUN90\nSAVEPARM DS    CL8                  SAVE PARM                  SS JUN90\nWTOE     DS    CL133                                           SS JUN90\n         SPACE 2                                               SS JUN90\nSAVEEND  EQU   *                                               SS JUN90\n         EJECT ,                                               DM JUN83\n         EDT   ,                                               DM JUN83\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DYNASWP4": {"ttr": 4612, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92\\x04\\x1f\\x00\\x92\\x04/\\x123\\x01\\xe4\\x01\\xe3\\x00\\x02\\xe2\\xc3\\xd7\\xe2\\xc4\\xe2@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-02-10T00:00:00", "modifydate": "1992-02-11T12:33:00", "lines": 484, "newlines": 483, "modlines": 2, "user": "SCPSDS"}, "text": "DYNASWAP TITLE 'PROGRAM TO MODIFY ELIGIBLE DEVICE TABLE'\n***********************************************************************\n*    CHANGE DATE: FEB  1992  MVS 4.2 VERSION ONLY (ALSO ESA)          *\n*                                                                     *\n*                                                                     *\n*     ABSTRACT                                                        *\n*                                                                     *\n*     DYNASWAP PROVIDES THE ABILITY TO DYNAMICALLY SWAP TWO DEVICES   *\n*     WITHIN THE EDT,  BOTH DEVICES MUST BE OFFLINE DASD DEVICES.     *\n*     THIS PROVIDES A WAY TO REPLACE A BAD VOLUME WITH A RECOVERY     *\n*     VOLUME FOR ALL RELATED ESOTARIC NAMES WITHIN THE EDT.           *\n*     IT CAN ALSO BE USED TO ADD NEW DEVICES TO A SET OF RELATED      *\n*     ESORTARIC NAMES BY SWAPPING A DEVICE FOR A NEW VOLUME FOR       *\n*     A NOT CONNECTED DEVICE ADDRESS ADDED TO THESE ESORTARICS        *\n*     FOR THIS PURPOSE.                                               *\n*                                                                     *\n*     DYNASWAP SUPPORTS THE FOLLOWING RELEASES:                       *\n*                                                                     *\n*     MVS/XA 2.2.0 - ESA 3.1.3                                        *\n*                                                                     *\n*     INQUIRES:                                                       *\n*                                                                     *\n*     SEND INQUIRES TO:                                               *\n*              STEVEN D. SMITH   G12-99                               *\n*              SECURITY PACIFIC AUTOMATION COMPANY                    *\n*              611 NORTH BRAND                                        *\n*              GLENDALE, CA, 91203                                    *\n*                                                                     *\n*     OR PHONE: (818) 507-3014                                        *\n*                                                                     *\n*                                                                     *\n*     INSTALLATION                                                    *\n*                                                                     *\n*     DYNASWAP IS A SINGLE MODULE AND MUST BE LINK EDITED INTO        *\n*     AN AUTHORIZED LIBRARY WITH ATTRIBUTES AC=1 RENT REUS REFR       *\n*     ASSEMBLY USING ASMH AND XA MACRO LIBRARY                        *\n*                                                                     *\n*                                                                     *\n*     A PARM VALUE MUST BE INCLUDED TO PROVIDE THE TWO DEVICE         *\n*     ADDRESSES TO BE SWAPPED.                                        *\n*                                                                     *\n*      //DYNASWAP PROC A=NON,B=NON                                    *\n*      //DYNASWAP EXEC PGM=DYNASWAP,PARM='&A,&B'                      *\n*                                                                     *\n*     RESTRICTIONS                                                    *\n*                                                                     *\n*     THE DEVICES MUST BE OFFLINE.                                    *\n*     THE DEVICES MUST BE DASD                                        *\n*     THE DEVICES MUST BE THE SAME DEVICE TYPE                        *\n*                                                                     *\n*     NOTES                                                           *\n*                                                                     *\n*     THERE ARE NO ENQUE INVOLVED OR NECESSARY AND THERE ARE NO       *\n*     INTEGRITY PROBLEMS WITH ALLOCATION BECAUSE THE DEVICES ARE      *\n*     OFFLINE WHEN THE SWAP IS DONE.  THE GROUP STRUCTURE OF THE      *\n*     EDT IS NOT CHANGES AND THEREFOR DOES NOT AFFECT MSX (MIM)       *\n*     OR STC 4400 HSC SOFTWARE                                        *\n*                                                                     *\n*     ALL MESSAGES ARE OF THE FORM TSDXXX WHICH CAN BE EDITTED        *\n*     TO LOCAL MESSAGE ID STANDARDS                                   *\n*                                                                     *\n*    ATTRIBUTES - REENTRANT                                           *\n*    TAB SETTINGS - 10 16 36 41 72                                    *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n         SPACE 3                                               DM JUN83\n         SPACE 3                                               DM JUN83\n         PRINT OFF                                             DM JUN83\n         MACRO ,                                               DM JUN83\n         EDT   &TYPE=SP                                        DM NOV83\n.* WRITTEN BY DOUG MERCER, JUNE 1983, FOR THE LOCKHEED-CALIFORNIA CO.\n.* CHANGED BY DOUG MERCER, NOVEMBER 1983, FOR XA DIFFERENCES   DM NOV83\n.* CHANGED BY STEVE SMITH, JANUARY  1984, FOR XA DIFFERENCES   SS JAN84\n.* CHANGED BY STEVE SMITH, FEBRUARY 1988, FOR XA2.2            SS FEB88\nEDT      DSECT ,                   ELIGIBLE DEVICES TABLE      DM JUN83\nEDTNAME  DS    CL3                   EDT NAME                  SS FEB88\nEDTLEVEL DS    C                     LEVEL                     SS FEB88\nEDTCREAT DS    0CL8                EDT CREATION ID             SS FEB88\nEDTCBNAM DS    CL6                 EDT CB NAME                 SS FEB88\nEDTIDNUM DS    CL2                 EDT VER ID                  SS FEB88\nEDTDATE  DS    CL8                   CREATION DATE (MM/DD/YY)  SS FEB88\nEDTTIME  DS    CL5                     TIME (HH.MM)            SS FEB88\nEDTFLAGS DS    XL1                 EDT FLAGS                  JAH JUL91\nEDTIODF  EQU   B'10000000'         EDT BUILT AT NIP TIME      JAH JUL91\nEDTGLINX EQU   B'01000000'         GROUP LOCKING INDEX        JAH JUL91\nEDTDLOCK EQU   B'00100000'         LOCKING DEADLOCK           JAH JUL91\nEDTSP    DS    XL1                 EDT SUBPOOL                JAH JUL91\nEDTKEY   DS    XL1                 EDT STORAGE KEY            JAH JUL91\nEDTLKUP  DS    A                   POINTER TO LOOK-UP SECTION  DM JUN83\nEDTGNRC  DS    A                   POINTER TO GENERIC SECTION  DM JUN83\nEDTGRP   DS    A                   POINTER TO GROUP SECTION    DM JUN83\nEDTUCB   DS    A                   POINTER TO UCB SECTION      DM JUN83\nEDTMSK   DS    A                   POINTER TO MASK SECTION     DM JUN83\nEDTGRPT  DS    A                   POINTER TO GROUP POINTERS   DM JUN83\nEDTPREF  DS    A                   POINTER TO PREFERENCE TABLE DM JUN83\nEDTTAPE  DS    A                   POINTER TO TAPE DEVICE EL   SS FEB88\n* THE FOLLOWING ADDED TO HEADER FOR VERSION 3 UPDATES         JAH JUL91\nEDTLUBL  DS    CL4                 LENGTH OF LUVSECT          JAH JUL91\nEDTGENL  DS    CL4                 LENGTH OF GENSECT          JAH JUL91\nEDTGRPL  DS    CL4                 LENGTH OF GRPSECT          JAH JUL91\nEDTUCBL  DS    CL4                 LENGTH OF EUCBSECT         JAH JUL91\nEDTMSKTL DS    CL4                 LENGTH OF GRMSKTAB         JAH JUL91\nEDTGRPPL DS    CL4                 LENGTH OF GRPPSECT         JAH JUL91\nEDTPREFL DS    CL4                 LENGTH OF PREFTAB          JAH JUL91\nEDTTAPEL DS    CL4                 LENGTH OF TAPETAB          JAH JUL91\nEDTRESV1 DS    CL16                RESERVED                   JAH JUL91\nEDTUPLP  DS    A                   POINTER TO UCB POINTER LISTJAH JUL91\nEDTUPLL  DS    CL4                 LENGTH OF UPL              JAH JUL91\nEDTGMCTP DS    A         POINTER TO GROUP MASK CONVERTION TABLEJAHJUL91\nEDTGMCTL DS    CL4                 LENGTH OF GMCT             JAH JUL91\nEDTRESV2 DS    CL8                 RESERVED                   JAH JUL91\n* THE FOLLOWING ADDED TO HEADER FOR DYNAMSK2                   SS FEB88\nEDTGENE  DS    A                   MVSCP GENERATED EDT ADDRESS SS FEB88\nEDTSIZE  DS    A                   SUBPOOL AND SIZE OF EDT     SS FEB88\nEDTHDRLX EQU   *-EDT               LENGTH OF THE HEADER        DM JUN83\n         SPACE 2                                               DM JUN83\n* EACH OF THE FOLLOWING SECTIONS IS PREFIXED BY                SS FEB88\n*   A HEADER  - MOST ARE 12 BYTES LONG EXCEPT FOR LOOKUP HDR   SS FEB88\n*   FIRST 8 BYTES ARE HEADER ID                                SS FEB88\n*   NEXT  4 BYTES ARE THE NUMBER OF ENTRYS                     SS FEB88\n*   NEXT  4 BYTES ARE FOR LOOKUP SECTION ONLY                  SS FEB88\n*         2 BYTES ARE FOR LOOKUP INDEX TO FIRST ENTRY          SS FEB88\n*         2 BYTES ARE RESERVED                                 SS FEB88\n         SPACE ,                                               DM JUN83\nLUVHDR   DSECT ,                   LOOK-UP SECTION            JAH JUL91\nLUVHDRNM DS    CL8                 SECTION HEADER NAME        JAH JUL91\nLUVENTNO DS    XL4                 NO ENTRIES THIS SECTION    JAH JUL91\nLUVFIRST DS    XL2                 INDEX TO FIRST GENERIC/ESO JAH JUL91\nLUVRSV1  DS    XL2                 RESERVED                   JAH JUL91\nLUVHDRL  EQU   *-LUVHDR            HEADER LENGTH              JAH JUL91\n         SPACE ,                                               DM JUN83\nLKPSECT  DSECT ,                   LOOK-UP SECTION             DM JUN83\nLKPNAME  DS    CL8                 UNITNAME                    DM JUN83\nLKPDEVT  DS    XL4                 DEVICE TYPE (AS IN CATALOG) DM JUN83\nLKPMSKPT DS    A                   INDEX TO GROUP MASK ENTRY  JAH JUL91\nLKPALTPT DS    A                   ALTERNATE MASK INDEX        SS FEB88\nLKPGNRC# DS    F                   NUMBER OF GENERICS          DM JUN83\nLKPFLAGS DS    XL2                 FLAGS                       DM JUN83\nLKPVIO   EQU   X'80'               ELIGIBLE FOR VIO            SS JAN84\nLKPAGMSK EQU   X'40'               GENERIC HAS ALT MASK        SS JAN84\nLKPMGEN  EQU   X'20'               ALLOC OF MUTL GEN OK        SS JAN84\nLKPGENR  EQU   X'10'               THIS IS A GENERIC: FULL DEV SS JAN84\nLKPESOTR EQU   X'08'               THIS IS A ESOTERIC          SS JAN84\nLKPGGERN EQU   X'04'               THIS IS A GENERATED GEN     SS JAN84\nLKPGESOR EQU   X'08'               THIS IS A GENERATED ESOTR   SS FEB88\nLKPAFFIX DS    H                   AFFINITY INDEX              SS FEB88\nLKPGNRC1 DS    H                   INDEX   TO FIRST GENERIC    SS FEB88\nLKPNXT   DS    H                   INDEX TO NEXT ENTRY         SS FEB88\nLKPGRPNO DS    XL4                 TOTAL # GRPS FOR LUV       JAH JUL91\nLKPUCBNO DS    XL4                 TOTAL # DEVICES FOR LUV    JAH JUL91\nLKPRESV2 DS    CL12                RESERVED                   JAH JUL91\nLKPEND   EQU   *                        *                      SS JAN92\nLKPLNG   EQU   *-LKPSECT           LENGTH OF SECTION           DM JUN83\n         SPACE ,                                               DM JUN83\nGNRCSECT DSECT ,                   GENERIC SECTION             DM JUN83\nGNRCDEVT DS    XL4                 DEVICE TYPE (AS IN CATALOG) DM JUN83\nGNRCGRP# DS    F                   NUMBER OF GROUPS            DM JUN83\nGNRCGRP1 DS    H                   INDEX   TO FIRST GROUP      SS FEB88\nGNRCNXT  DS    H                   INDEX TO NEXT ENTRY         SS FEB88\nGNRCLNG  EQU   *-GNRCSECT          LENGTH OF SECTION           DM JUN83\n         SPACE ,                                               DM JUN83\nGRPTSECT DSECT                     GROUP POINTER SEC           SS JAN84\nGRPTPTR  DS    H                   A GROUP INDEX               SS FEB88\nGRPTNXT  DS    H                   INDEX TO NEXT ENTRY         SS FEB88\nGRPTLNG  EQU   *-GRPTSECT          LENGTH OF SECTION           SS FEB88\n         SPACE ,                                               SS JAN84\nGRPSECT  DSECT ,                   GROUP SECTION               DM JUN83\nGRPID    DS    H                   GROUP ID NUMBER             SS FEB88\nGRPDEV#  DS    H                   NUMBER OF DEVICES           SS FEB88\nGRPUCB1  DS    A                   INDEX   TO FIRST UCB        SS FEB88\nGRPNXT   DS    H                   INDEX TO NEXT ENTRY         SS FEB88\n         DS    H                   RESERVED                    SS FEB88\nGRPLNGX  EQU   *-GRPSECT           LENGTH OF SECTION XA SECT   DM JUN83\n         SPACE ,                                               DM JUN83\nMSKSECT  DSECT ,                   GROUP MASK SECTION          DM JUN83\nMSKMASK  DS    X                   GROUP MASK (LENGTH VARIABLE)DM JUN83\nMSKLNG   EQU   *-MSKSECT           LENGTH OF SECTION           DM JUN83\n         SPACE ,                                               DM JUN83\nUCBSECT  DSECT ,                   UCB POINTER SECTION         DM JUN83\nDEV#     DS    CL3                 DEVICE NUMBER IN EBCDIC     DM NOV83\n         DS    C                   EXTRA BYTE                  SS FEB88\nDEVNXT   DS    F                   INDEX TO NEXT ENTRY         SS FEB88\nUCBLNGX  EQU   *-UCBSECT           LENGTH OF SECTION XA SECT   DM JUN83\n         SPACE ,                                               DM JUN83\n         MEND  ,                                               DM JUN83\n         PRINT ON                                              DM JUN83\n         SPACE 3\nDYNASWAP CSECT                          *                      SS JAN92\n*\n*  EQUATES FOR REGISTERS AND FLAGS\n*\nCVTPT    EQU   16                  PSA POINTER TO CVT\nCVTILK2  EQU   40                  CVT POINTER TO UCB LOOK-UP  DM JUN83\nCVTJESCT EQU   X'128'              JESCT ADDR                  SS JAN84\nCVTDCB   EQU   X'74'               CVT SYSTEM TYPE OFFSET      SS JAN84\nCVTMVSE  EQU   X'80'               XA MODE                     SS JAN84\nCVTOSLV0 EQU   X'4F0'              LEVEL FLAGS                 SS JAN92\nCVTOS41  EQU   X'08'               LEVEL SP 4.1                SS JAN92\nCVTOS42  EQU   X'40'               LEVEL SP 4.2                SS JAN92\nDACA     EQU   X'78'                                          JAH JUL91\nEDTL     EQU   X'60'               EDTLIST                    JAH JUL91\nEDTT     EQU   X'10'               PRIMARY EDT POINTER        JAH JUL91\nEDTT2    EQU   X'14'               SECONDARY EDT POINTER       SS JAN92\nEDTLFG   EQU   X'08'               EDT STATUS FLAG IN EDTL     SS JAN92\nJESUPLP  EQU   X'5C'               UCB POINTER LIST            SS JAN84\nJESEDTA  EQU   X'34'               EDT POINTER                 SS JAN84\nUPLUCBA  EQU   X'10'               FIRST POINTER IN LIST       SS JAN84\nUCBSTAT  EQU   3,1,C'X'            UCB STATUS                  DM NOV83\nUCBONLI  EQU   128                 DEVICE IS ONLINE            DM NOV83\nUCBCHGS  EQU   64                  DEVICE IS TO BE CHANGED TO  DM NOV83\n*               OFFLINE & ALLOCATION IS ENQUEUED OR DEVICE     DM NOV83\n*               IS ALLOCATED                                   DM NOV83\nUCBUNLD  EQU   16                  UNLOAD IN PROCESS           DM NOV83\nUCBNAME  EQU   13,3,C'C'           UCB NAME                    DM NOV83\nUCBNUM   EQU   4,2,C'X'            UCB DEVICE NUMBER           SS MAR87\nUCBTYPE  EQU   16,4,C'X'           DEVICE TYPE                 DM NOV83\nUCBDVCLS EQU   18,1,C'X'           DEVICE CLASS                DM NOV83\nUCB3DACC EQU   32                  DASD CLASS                  DM NOV83\nUCBVOLI  EQU   28,6,C'C'           VOLUME SERIAL               DM NOV83\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2                   USED FOR COUNTER\nR3       EQU   3                   USED AS POINTER IN LOOP\nR4       EQU   4                   UCB, POINTER  NEXT IN NEW EDT\nR5       EQU   5                   COUNTER OR POINTER  NEW PTXREF\nR6       EQU   6                   COUNTER OR POINTER  OLD PTXREF\nR7       EQU   7                   COUNTER TO TOTAL FOR EACH SEC\nR8       EQU   8                   POINTER TO MODEL EDT\nR9       EQU   9                   SIZE OF GROUP - UNIT XREF\nR10      EQU   10                  POINTER TO NEW EDT\nR11      EQU   11                  PROGRAM BASE\nR12      EQU   12                  PROGRAM BASE TWO\nR13      EQU   13                  SAVE AREA/WORK BASE\nR14      EQU   14\nR15      EQU   15\n         SPACE 3                                               SS JUN90\n         SAVE  (14,12),T,DYNASWAP                              SS JUN90\n         LR    R11,R15             SET UP BASE                 SS JUN90\n         USING DYNASWAP,R11                                    SS JUN90\n         L     R2,CVTPT                                        SS JUN90\n         TM    CVTDCB(R2),CVTMVSE                              SS FEB88\n         BZ    XA0                                             SS FEB88\n         LA    R2,IN31J                 *                      SS FEB88\n         O     R2,=X'80000000'          *                      SS FEB88\n         BSM   0,R2                     *                      SS FEB88\nIN31J    DS    0H                       *                      SS FEB88\nCHECKEDT DS    0H                       *                      SS JAN92\n         LR    R6,R1               SAVE PARM ADDR              SS JAN92\n         L     R2,CVTPT                 LOAD CVT ADDR          SS FEB88\n         TM    CVTDCB(R2),CVTMVSE       XA                     SS JAN92\n         BZ    ESANO                    NO                     SS JAN92\n         TM    CVTOSLV0(R2),CVTOS41     SP 41                  SS JAN92\n         BZ    ESANO                    NO                     SS JAN92\n*        TM    CVTOSLV0(R2),CVTOS42     SP 42                  SS JAN92\n*        BZ    XA0                      NO                     SS JAN92\n         L     R2,CVTJESCT(R2)          LOAD JESCT ADDR        SS FEB88\n         L     R2,DACA(R2)                                    JAH JUL91\n         L     R2,EDTL(R2)                                    JAH JUL91\n         TM    EDTLFG(R2),X'08'         SECONDARY ACTIVE       SS JAN92\n         BZ    USEEDT1                  NO USE PRIMARY         SS JAN92\n         L     R2,EDTT2(R2)             GET SECONDARY EDT      SS JAN92\n         B     USEEDT                   CONTINUE               SS JAN92\nUSEEDT1  DS    0H                       *                      SS JAN92\n         L     R2,EDTT(R2)              LOAD EDT ADDRESS      JAH JUL91\nUSEEDT   DS    0H                       *                      SS JAN92\n         LR    R8,R2                    HOLD THIS EDT          SS JAN92\n         CLC   0(3,R2),=C'EDT'          ESA 4.2                SS JAN92\n         BE    XA420                    YES                    SS JAN92\nESANO    DS    0H                                              SS JAN92\n         LA    R2,XA0                   *                      SS FEB88\n         BSM   0,R2                     *                      SS FEB88\nXA0      DS    0H                                              SS FEB88\n         DC    X'00'                    *                      SS JUN90\nXA420    DS    0H                       *                      SS JUN90\n         LA    R2,IN24J                 *                      SS JUN90\n         BSM   0,R2                     *                      SS JUN90\nIN24J    DS    0H                                              SS JUN90\n         L     R0,GETMLEN          LENGTH OF GETMAIN           SS JUN90\n         LR    R6,R1               SAVE PARM ADDR              SS JUN90\n         GETMAIN R,LV=(0)          STORAGE FOR WORK AND TABLES SS JUN90\n         LR    R2,R1               AREA TO ZERO                SS JUN90\n         L     R3,GETMLEN          LENGTH TO ZERO              SS JUN90\n         SR    R4,R4               FROM ADDRESS NULL           SS JUN90\n         SR    R5,R5               FILL CHAR & FROM LEN        SS JUN90\n         MVCL  R2,R4               ZERO GETMAIN AREA           SS JUN90\n         ST    R1,8(R13)           FORWARD POINTER             SS JUN90\n         ST    R13,4(R1)           BACK POINTER                SS JUN90\n         LR    R13,R1              SET BASE/SAVE AREA          SS JUN90\n         USING SAVE,R13                                        SS JUN90\n         LTR   R5,R6               ANY PARM PASSED             SS JUN90\n         BZ    MSG1                NO                          SS JUN90\n         L     R5,0(R5)            PARM ADDRESS                SS JUN90\n         LTR   R5,R5               ANY                         SS JUN90\n         BZ    MSG1                BAD                         SS JUN90\n         LH    R1,0(R5)            GET LENGTH                  SS JUN90\n         LTR   R1,R1               ANY LENGTH                  SS JUN90\n         BZ    MSG1                BAD                         SS JUN90\n         CH    R1,=H'7'            EXACT SIZE                  SS JUN90\n         BNE   MSG1                BAD                         SS JUN90\n         MVC   SAVEPARM(7),2(R5)        EXECUTED MOVE          SS JUN90\n         OC    SAVEPARM(7),BLK8         FORCE UPPER CASE       SS JUN90\n*                                                              SS JUN90\n*  FIND UNITS IN EDT THAT MATCH PARM CUUS                      SS JUN90\n*                                                              SS JUN90\n         LA    R1,IN31A                 START OF 31 BIT MODE   SS JUN90\n         O     R1,=X'80000000'          MODE BIT ON            SS JUN90\n         BSM   0,R1                     SWITCH MODES TO 31     SS JUN90\nIN31A    DS    0H                                              SS JUN90\n         ST    R8,EDTPTR                SAVE SYSGEN EDT        SS JUN90\n         USING EDT,R8                   *                      SS JAN92\n         L     R1,EDTUPLP-EDT(R8)       UCB PT LIST            SS JAN92\n         LA    R1,UPLUCBA-4(R1)         OFFSET FOR INDEX       SS JUN90\n         L     R3,EDTGRP                GRP PT SEC             SS JUN90\n         USING GRPSECT,R3                                      SS JUN90\n         L     R2,8(R3)                 NUM OF PT              SS JUN90\n         LA    R3,12(R3)                OVER HDR               SS JUN90\nBLDGX2   LH    R5,GRPID                 GRP ID                 SS JUN90\n         LH    R6,GRPDEV#               UCBS IN GRP            SS JUN90\n         L     R7,GRPUCB1               FIRST DEV INDEX        SS JUN90\n         LR    R14,R7                   SAVE INDEX             SS JUN90\n         SLA   R7,3                     TIMES 8                SS JUN90\n         AL    R7,EDTUCB                ADD SECTION ADDRESS    SS JUN90\n         LA    R7,12-8(,R7)             ADJUST FOR TRUE ADDR   SS JUN90\n         USING UCBSECT,R7                                      SS JUN90\nBLDGXE2  DS    0H                                              SS JUN90\n         CLC   0(3,R7),SAVEPARM         SAME AS FIRST          SS JUN90\n         BNE   NOTFIRST                                        SS JUN90\n         ST    R7,SAVEDP1               SAVE IT                SS JUN90\n         LR    R7,R14                   GET DEVICE ENTRY       SS JUN90\n         SLA   R7,2                     TIMES 4 (FULL WORD)    SS JUN90\n         ALR   R7,R1                    INDEX INTO UCB LIST    SS JUN90\n         ST    R7,SAVEUP1               SAVE IT                SS JUN90\nNOTFIRST DS    0H                                              SS JUN90\n         CLC   0(3,R7),SAVEPARM+4       SAME AS SECOND         SS JUN90\n         BNE   NOTSECD                                         SS JUN90\n         ST    R7,SAVEDP2               SAVE IT                SS JUN90\n         LR    R7,R14                   GET DEVICE ENTRY       SS JUN90\n         SLA   R7,2                     TIMES 4 (FULL WORD)    SS JUN90\n         ALR   R7,R1                    INDEX INTO UCB LIST    SS JUN90\n         ST    R7,SAVEUP2               SAVE IT                SS JUN90\nNOTSECD  DS    0H                                              SS JUN90\n         LR    R7,R14                   GET DEVICE ENTRY       SS JUN90\n         SLA   R7,3                     TIMES 8                SS JUN90\n         AL    R7,EDTUCB                ADD SECTION ADDRESS    SS JUN90\n         LA    R7,12-8(,R7)             ADJUST FOR TRUE ADDR   SS JUN90\n         L     R7,DEVNXT                GET NEXT INDEX         SS JUN90\n         LR    R14,R7                   SAVE THIS INDEX        SS JUN90\n         SLA   R7,3                     TIMES 8                SS JUN90\n         AL    R7,EDTUCB                ADD SECTION ADDRESS    SS JUN90\n         LA    R7,12-8(,R7)             ADJUST FOR TRUE ADDR   SS JUN90\n         BCT   R6,BLDGXE2               FOR EACH IN GRP        SS JUN90\n         LA    R3,GRPLNGX(R3)           NEXT GRP               SS JUN90\n         BCT   R2,BLDGX2                FOR ALL GRPS           SS JUN90\n         DROP  R3,R7,R8                                        SS JUN90\n         SR    R10,R10                  ZERO FLAG              SS JUN90\n         LA    R15,SAVEPARM             THIS UCB               SS JUN90\n         L     R1,SAVEDP1                ADDR                  SS JUN90\n         LTR   R1,R1                     ANY ADDR              SS JUN90\n         BZ    ERR2                      NO, ERROR             SS JUN90\n         L     R2,SAVEUP1                                      SS JUN90\n         L     R6,0(R2)                  UCB PTR               SS JUN90\n         CLI   UCBTYPE+2(R6),X'20'      DSAD                   SS JUN90\n         BNE   ERR4                     NO                     SS JUN90\n         TM    UCBSTAT(R6),UCBONLI      ONLINE                 SS JUN90\n         BZ    CKU2                     NO                     SS JUN90\n         BAL   R14,MSG3                 *                      SS JUN90\n         B     CKU2                     *                      SS JUN90\nERR2     DS    0H                       *                      SS JUN90\n         BAL   R14,MSG2                 *                      SS JUN90\n         B     CKU2                     *                      SS JUN90\nERR4     DS    0H                       *                      SS JUN90\n         BAL   R14,MSG5                 *                      SS JUN90\n         B     CKU2                     *                      SS JUN90\nCKU2     DS    0H                       *                      SS JUN90\n         LA    R15,SAVEPARM+4           THIS UCB               SS JUN90\n         L     R3,SAVEDP2                                      SS JUN90\n         LTR   R3,R3                     ANY ADDR              SS JUN90\n         BZ    ERR3                      NO, ERROR             SS JUN90\n         L     R4,SAVEUP2                                      SS JUN90\n         L     R8,0(R4)                  UCB PTR               SS JUN90\n         CLI   UCBTYPE+2(R8),X'20'      DSAD                   SS JUN90\n         BNE   ERR5                     NO                     SS JUN90\n         TM    UCBSTAT(R8),UCBONLI      ONLINE                 SS JUN90\n         BZ    CKALL                    NO                     SS JUN90\n         BAL   R14,MSG3                 *                      SS JUN90\n         B     EXIT                     *                      SS JUN90\nERR3     DS    0H                       *                      SS JUN90\n         BAL   R14,MSG2                 *                      SS JUN90\n         B     EXIT                     *                      SS JUN90\nERR5     DS    0H                       *                      SS JUN90\n         BAL   R14,MSG5                 *                      SS JUN90\n         B     EXIT                     *                      SS JUN90\nCKALL    DS    0H                       *                      SS JUN90\n         LTR   R10,R10                  FLAG                   SS JUN90\n         BNZ   EXIT                     SOME ERROR             SS JUN90\n         CLC   UCBTYPE+2(2,R6),UCBTYPE+2(R8) SAME TYPE         SS NOV90\n         BNE   MSG6                                            SS NOV90\n         CLC   UCBTYPE(1,R6),UCBTYPE(R8) SAME TYPE             SS NOV90\n         BNE   MSG6                                            SS NOV90\n         L     R7,0(R3)                  VALUE                 SS JUN90\n         L     R5,0(R1)                  VALUE                 SS JUN90\n         NOP   EXIT        TEST , DONT SWAP                    SS JUN90\n         LR    R10,R1              SAVE R1                     SS JUN90\n         MODESET KEY=ZERO               *                      SS JUN90\n         ST    R5,0(R3)            SWAP  VALUE                 SS JUN90\n         ST    R6,0(R4)            SWAP  UCB PTR               SS JUN90\n         ST    R7,0(R10)           SWAP  VALUE                 SS JUN90\n         ST    R8,0(R2)            SWAP  UCB PTR               SS JUN90\n         MODESET KEY=NZERO              *                      SS JUN90\n         MVC   WTOE(WTO4LN),WTO4                               SS JUN90\n         MVC   WTOE+28(7),SAVEPARM                             SS JUN90\n         WTO   MF=(E,WTOE)                                     SS JUN90\nEXIT     LR    R1,R13                                          SS JUN90\n         L     R0,GETMLEN          LENGTH TO FREE              SS JUN90\n         L     R13,4(R13)                                      SS JUN90\n         FREEMAIN R,A=(1),LV=(0)                               SS JUN90\n         RETURN (14,12),RC=0                                   SS JUN90\n         EJECT ,                                               SS JUN90\nMSG1     WTO   'TSDXXXI PARM MISSING OR MORE THAN 7 CHARACTORS',       X\n               ROUTCDE=(2,11)\n         B     EXIT\nMSG6     WTO   'TSDXXXI UNITS ARE NOT THE SAME DEVICE TYPE    ',       X\n               ROUTCDE=(2,11)                                  SS NOV90\n         B     EXIT                                            SS NOV90\nMSG2     MVC   WTOE(WTO2LN),WTO2                               SS JUN90\n         MVC   WTOE+17(3),0(R15)                               SS JUN90\n         WTO   MF=(E,WTOE)                                     SS JUN90\n         LA    R10,4             ERROR FLAG                    SS JUN90\n         BR    R14               RETURN                        SS JUN90\nMSG3     MVC   WTOE(WTO3LN),WTO3                               SS JUN90\n         MVC   WTOE+17(3),0(R15)                               SS JUN90\n         WTO   MF=(E,WTOE)                                     SS JUN90\n         LA    R10,4             ERROR FLAG                    SS JUN90\n         BR    R14               RETURN                        SS JUN90\nMSG5     MVC   WTOE(WTO5LN),WTO5                               SS JUN90\n         MVC   WTOE+17(3),0(R15)                               SS JUN90\n         WTO   MF=(E,WTOE)                                     SS JUN90\n         LA    R10,4             ERROR FLAG                    SS JUN90\n         BR    R14               RETURN                        SS JUN90\nWTO2     WTO   'TSDXXXI UNIT XXX NOT FOUND               ',            X\n               ROUTCDE=(2,11),                                         X\n               MF=L\nWTO2LN   EQU   *-WTO2\nWTO3     WTO   'TSDXXXI UNIT XXX NOT OFFLINE             ',            X\n               ROUTCDE=(2,11),                                         X\n               MF=L\nWTO3LN   EQU   *-WTO3\nWTO4     WTO   'TSDXXXI SWAP DONE                        ',            X\n               ROUTCDE=(2,11),                                         X\n               MF=L\nWTO4LN   EQU   *-WTO4\nWTO5     WTO   'TSDXXXI UNIT XXX NOT DASD TYPE           ',            X\n               ROUTCDE=(2,11),                                         X\n               MF=L\nWTO5LN   EQU   *-WTO5\nMSG10    ABEND 10,DUMP\nGETMLEN  DC    A(SAVEEND-SAVE)          FOR TEMPORARY WORK AREA\nBLK8     DC    CL8' '                   *                      SS JUN90\n         LTORG\n         EJECT\nSAVE     DSECT\nSAVEAREA DS    18F\nDBLWRD   DS    D                                               SS JUN90\nUPLSTR   DS    F                   SAVE POINTER TO UCB PT LIST SS JUN90\nNUMUNIT  DS    F                   NUMBER OF UNITS             SS JUN90\nUCBLU    DS    F                                               SS JUN90\nGXRLNG2  DS    H                   SAVE LENGTH GXREF           SS JUN90\nSAVEGRPT DS    A                        *                      SS JUN90\nEDTPTR   DS    A                                               SS JUN90\nSAVEDP1  DS    A                                               SS JUN90\nSAVEUP1  DS    A                                               SS JUN90\nSAVEDP2  DS    A                                               SS JUN90\nSAVEUP2  DS    A                                               SS JUN90\nFLAGS    DS    X                    READ FLAGS                 SS JUN90\nBFLAG    DS    X                    SORT FLAG                  SS JUN90\nFLAG2    DS    X                    MISC FLAGS                 SS JUN90\nSAVEPARM DS    CL8                  SAVE PARM                  SS JUN90\nWTOE     DS    CL133                                           SS JUN90\n         SPACE 2                                               SS JUN90\nSAVEEND  EQU   *                                               SS JUN90\n         EJECT ,                                               DM JUN83\n         EDT   ,                                               DM JUN83\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GENERIC": {"ttr": 4865, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "GENERIC  TITLE 'MAKE DEVMASKT ENTRIES EQUIVALENT TO EDT'\n***********************************************************************\n*                                                                     *\n*   MODIFY ENTRIES IN DEVMASKT TO BE EQUIVALENT TO THE SAME           *\n*   ENTRIES IN THE ELIGIBLE DEVICE TABLE                              *\n*                                                                     *\n*   INVOKED AS A SUBPROGRAM FROM AN AUTHORIZED PROGRAM                *\n*   PARM 1 - THE ELIGIBLE DEVICE TABLE                                *\n*                                                                     *\n*   DEVMASKT MUST BE IN THE PAGEABLE LINKPACK AREA (PLPA),            *\n*      THE FIXED LINKPACK AREA (FLPA) OR THE MODIFIED                 *\n*      LINKPACK AREA (MLPA). IF DEVMASKT IS IN PLPA,                  *\n*      THE ALTERED AREAS WILL BE PAGE-FIXED.                          *\n*                                                                     *\n*   WRITTEN BY DOUGLAS MERCER, JULY 1980,                             *\n*      FOR THE LOCKHEED-CALIFORNIA COMPANY                            *\n*                                                                     *\n*   MODIFIED BY DOUGLAS MERCER, MARCH 1982,                           *\n*      FOR THE PLPA PROTECT FEATURE OF MVS                            *\n*      (CORRECTED APRIL 1982)                                         *\n*      (CORRECTED OCTOBER 1982)                                       *\n*      (CORRECTED NOVEMBER 1982)                                      *\n*                                                                     *\n*        ATTRIBUTES - REENTRANT                                       *\n*        TAB SETTINGS - 10 16 35 40 72                                *\n*                                                                     *\n***********************************************************************\n         SPACE 3\nGENERIC  START ,\n         SAVE  (14,12),,GENERIC_&SYSDATE\n         SPACE 2\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9                  REMAINING DEVMASKT ENTRY COUNT\nR10      EQU   10                 CURRENT DEVMASKT ENTRY\nR11      EQU   11                 EDT POINTER\nR12      EQU   12                 BASE REGISTER\nR13      EQU   13                 WORK AREA POINTER\nR14      EQU   14\nR15      EQU   15\nTCBJSTCB EQU   124,4,C'A'     POINTER TO JOB STEP TCB (TO CURRENT      *\n                                   IF HIGHER THAN JOB STEP)\nTCBJPQ   EQU   44,4,C'A'      ADDRESS OF LAST CDE IN JOB PACK\nCDCHAIN  EQU   0,4,C'A'       ADDRESS OF NEXT CDE OR 0\nCDNAME   EQU   8,8,C'C'       MODULE OR ALIAS NAME\nCDATTR   EQU   28,1,C'X'      ATTRIBUTES\nCDNIP    EQU   128            MODULE IS IN LINK PACK AREA\nASCBRSM  EQU   52,4,C'A'      REAL STORAGE MGR HDR             DM MAR82\nRSMVSTO  EQU   0,4,C'A'       VIRTUAL ADDRESS OF SEGTAB        DM MAR82\n         SPACE 3\n         LR    R12,R15\n         USING GENERIC,R12\n         L     R11,0(,R1)         EDT\n         SPACE ,\n         L     R1,FLCCVT-PSA\n         L     R1,CVTILK2-CVT(,R1)     UCB POINTERS\n         SR    R2,R2\n         SPACE\n* COUNT THE NUMBER OF UCB POINTERS (INCLUDING ZEROS)\nLOOP1    CLC   =H'-1',0(R1)\n         BE    END1               DONE\n         LA    R2,1(,R2)          COUNT THE POINTER\n         LA    R1,2(,R1)\n         B     LOOP1\n         SPACE\nEND1     LA    R2,MASKRND(,R2)    COUNT HEADER AND SLACK BYTES\n         SRA   R2,3               / 8 TO CONVERT BITS TO BYTES\n         N     R2,=F'-4'          TRUNCATE TO FULLWORD\n         LA    R0,WRKLNG1(,R2)    TOTAL LENGTH\n         GETMAIN R,LV=(0)\n         ST    R1,8(,R13)         LOWER SAVE AREA POINTER\n         L     R14,=A(SAVEAREA)   INITIALIZE\n         LA    R15,WRKLNG1             THE WORK\n         LR    R4,R1                        AREA\n         LR    R5,R0\n         MVCL  R4,R14\n         ST    R13,4(,R1)         HIGHER SAVE AREA POINTER\n         LR    R13,R1\n         USING SAVEAREA,R13\n         ST    R0,GMLNG           SAVE THE LENGTH\n         ST    R2,MASKLNG         MASK ENTRY LENGTH\n         MODESET MODE=SUP         GET TO SUPERVISOR STATE      DM MAR82\n         STCTL 0,0,CTLREG0        TO FIND SEGMENT SIZE         DM MAR82\n         MODESET MODE=PROB        GET BACK TO PROB STATE       DM MAR82\n         L     R0,=F'1048576'     1M SEGEMENT SIZE             DM MAR82\n         TM    CTLREG0+1,CRSEG1M                               DM MAR82\n         BO    *+8                                             DM MAR82\n         L     R0,=F'65536'       64K SEGEMENTS                DM MAR82\n         ST    R0,SEGSIZE                                      DM MAR82\n         BCTR  R0,0               REDUCE BY 1                  DM MAR82\n         ST    R0,SEGROUND                                     DM MAR82\n         LNR   R0,R0              DEVELOP                      DM MAR82\n         BCTR  R0,0                    TRUNCATION MASK         DM MAR82\n         ST    R0,SEGTRUNC                                     DM MAR82\n         LH    R0,=H'4096'        4K PAGE SIZE                 DM MAR82\n         TM    CTLREG0+1,CRPAG4K                               DM MAR82\n         BO    *+8                                             DM MAR82\n         LH    R0,=H'2048'        2K PAGES                     DM MAR82\n         ST    R0,PGSIZE                                       DM MAR82\n         BCTR  R0,0               REDUCE BY 1                  DM MAR82\n         ST    R0,PGROUND                                      DM MAR82\n         LNR   R0,R0              DEVELOP                      DM MAR82\n         BCTR  R0,0                    TRUNCATION MASK         DM MAR82\n         ST    R0,PGTRUNC                                      DM MAR82\n         SPACE ,\n         MODESET KEY=ZERO\n         L     R15,0(,R11)        GET ENTRY LENGTH FOR EACH EDT SECTION\n         L     R0,4(,R15)\n         STH   R0,EDTLKUPL        LOOK-UP SECTION LENGTH\n         L     R15,4(,R11)\n         L     R0,4(,R15)\n         STH   R0,EDTGENRL        GENERIC SECTION LENGTH\n         L     R15,20(,R11)\n         L     R0,4(,R15)\n         STH   R0,EDTGRPTL        GROUP POINTER SECTION LENGTH\n         L     R15,8(,R11)\n         L     R0,4(,R15)\n         STH   R0,EDTGRPL         GROUP SECTION LENGTH\n         L     R15,12(,R11)\n         L     R0,4(,R15)\n         STH   R0,EDTUCBPL        UCB POINTER SECTION LENGTH\n         LOAD  EPLOC=DEVNAMET\n         ST    R0,ADRNAMET\n         LOAD  EPLOC=DEVMASKT\n         ST    R0,ADRMASKT\n         SPACE ,\n* MAKE SURE THE MODULE IS IN LINK-PACK (OR MLPA)\n         L     R1,PSATOLD-FLC     CURRENT TCB\n         L     R1,TCBJSTCB(,R1)   JOB STEP TCB\n         L     R1,TCBJPQ(,R1)     JOB PACK QUEUE (CDE'S)\n         SPACE ,\nCDELOOP  LTR   R1,R1              SEE IF END\n         BZ    CDELAST            NOT IN JPA - OK\n         CLC   CDNAME(,R1),DEVMASKT\n         BE    CDEFOUND           THIS IS OUR MODULE\n         L     R1,CDCHAIN(,R1)    NEXT CDE\n         B     CDELOOP\n         SPACE ,\nCDEFOUND TM    CDATTR(R1),CDNIP\n         BO    CDELAST            IN LPA/MLPA - OK\n         WTO   'GENERIC - DEVMASKT NOT IN LPA/MLPA',ROUTCDE=1,DESC=2\n         B     TERM           DON'T PROCESS\n         SPACE ,\nCDELAST  EQU   *\n         SPACE 3\n         L     R10,ADRMASKT       PROCESS THE DEVMASKT\n         LH    R9,0(,R10)         ENTRY COUNT\n         LA    R10,4(,R10)        FIRST ENTRY\n         SPACE 2\nLOOP2    SR    R0,R0\n         SR    R1,R1\n         LA    R14,MASKWRK        ZERO\n         L     R15,MASKLNG             THE NEW\n         MVCL  R14,R0                       ENTRY AREA\n         MVC   MASKDEVT,4(R10)    DEVICE TYPE OR IDENTIFIER\n         L     R14,ADRNAMET       FIND THE UNIT NAME\n         L     R0,0(,R14)              BASED ON THE DEVICE\n         LA    R14,4(,R14)                  TYPE OR IDENTIFIER\n         SPACE ,\nLOOP3    CLC   MASKDEVT,8(R14)\n         BE    END3               FOUND\n         LA    R14,12(,R14)       NEXT\n         BCT   R0,LOOP3\n         B     NOCHNG             NOT FOUND (SHOULD NEVER HAPPEN)\n         SPACE ,\nEND3     L     R1,0(,R11)         FIND THE EDT LOOKUP ENTRY\n         L     R0,0(,R1)               BASED ON THE DEVICE\n         LA    R1,8(,R1)                    NAME\n         SPACE ,\nLOOP4    CLC   0(8,R1),0(R14)\n         BE    END4               FOUND\n         AH    R1,EDTLKUPL        NEXT\n         BCT   R0,LOOP4\n         B     NOCHNG             NOT FOUND (SHOULD BE RARE)\n         SPACE ,\nEND4     BAL   R14,CHNGMASK       BUILD A NEW ENTRY (IN WORK AREA)\n         LR    R0,R10             CURRENT ENTRY\n         LA    R14,MASKWRK        NEW ENTRY\n         L     R1,MASKLNG         SEE IF THE\n         LR    R15,R1                  NEW ENTRY\n         CLCL  R0,R14                       IS DIFFERENT\n         BE    NOCHNG             NO - LEAVE AS IS\n         LR    R2,R10             PAGE FIX\n         BAL   R14,PAGEFIX             THE ENTRY (IF IN PLPA)\n         BAL   R14,CHNGDEVT       CHANGE THE DEVMASKT ENTRY    DM MAR82\n         SPACE ,\nNOCHNG   A     R10,MASKLNG        NEXT DEVMASKT ENTRY\n         BCT   R9,LOOP2\n         SPACE 3\nTERM     MODESET KEY=NZERO\n         DELETE EPLOC=DEVMASKT\n         DELETE EPLOC=DEVNAMET\n         L     R0,GMLNG           FREE THE\n         LR    R1,R13                  WORK AREA\n         L     R13,4(,R13)        HIGHER SAVE AREA\n         FREEMAIN R,LV=(0),A=(1)\n         RETURN (14,12),RC=0\n         EJECT ,\n* MODIFY MASKBITS BASED ON THE EDT\n* R1 POINTS TO THE EDT LOOKUP ENTRY, R14 IS RETURN\nCHNGMASK STM   R14,R12,12(R13)\n         LM    R3,R4,16(R1)       GENERIC COUNT & POINTER\n         SPACE\nCHNGMSK1 LM    R5,R6,4(R4)        GROUP POINTER COUNT & POINTER\n         SPACE\nCHNGMSK2 L     R7,0(,R6)          GROUP\n         LM    R8,R9,4(R7)        UCB POINTER COUNT & POINTER\n         SPACE\nCHNGMSK3 LH    R14,0(,R9)         RELATIVE UCB LOOKUP\n         LA    R1,X'80'\n         SRDL  R14,3              SEPARATE\n         SRL   R15,29                  BYTE/BIT\n         LA    R14,MASKBITS(R14)  ADDRESS BYTE TO BE SET\n         SRL   R1,0(R15)          SET BIT MASK\n         EX    R1,SETMASK\n         LA    R0,1               INCREMENT THE DEVICE COUNT\n         A     R0,MASKCNT\n         ST    R0,MASKCNT\n         SPACE\n         AH    R9,EDTUCBPL        NEXT UCB POINTER\n         BCT   R8,CHNGMSK3\n         SPACE\n         AH    R6,EDTGRPTL        NEXT GROUP POINTER\n         BCT   R5,CHNGMSK2\n         SPACE\n         AH    R4,EDTGENRL        NEXT GENERIC\n         BCT   R3,CHNGMSK1\n         LM    R14,R12,12(R13)\n         BR    R14                RETURN\n         SPACE 2\nSETMASK  OI    0(R14),0           FOR EXECUTE\n         EJECT ,                                               DM MAR82\n* MODIFY DEVMASKT ENTRY FROM MASKWRK                           DM MAR82\n* R10 POINTS TO THE DEVMASKT ENTRY, R14 IS RETURN              DM MAR82\nCHNGDEVT STM   R14,R12,12(R13)                                 DM MAR82\n         NI    SWA,255-LPAPROT                                 DM MAR82\n         LR    R0,R10             DEVELOP OFFSET TO SEGMENT    DM MAR82\n         SRDA  R0,32                 TABLE ENTRY FOR           DM MAR82\n         D     R0,SEGSIZE               BEGINNING OF ENTRY     DM MAR82\n         SLL   R1,2                        DEVMASKT ENTRY      DM MAR82\n         LR    R2,R10             DEVELOP OFFSET TO SEGMENT    DM MAR82\n         A     R2,MASKLNG            TABLE ENTRY FOR           DM MAR82\n         BCTR  R2,0                     END OF DEVMASKT        DM MAR82\n         SRDA  R2,32                       ENTRY               DM MAR82\n         D     R2,SEGSIZE                                      DM MAR82\n         SLL   R3,2                                            DM MAR82\n         LR    R2,R1                                           DM MAR82\n         L     R15,PSAAOLD-PSA    CURRENT ASCB                 DM MAR82\n         L     R15,ASCBRSM(,R15)  REAL STORAGE MGR HDR         DM MAR82\n         L     R15,RSMVSTO(,R15)  VIRTUAL ADDRESS OF SEGTAB    DM MAR82\n         AR    R2,R15             DEVELOP ADDRESSES OF         DM MAR82\n         AR    R3,R15                  SEGTAB ENTRIES          DM MAR82\n         TM    3(R2),4            TEST STORE PROTECTION BIT    DM MAR82\n         BZ    NOPROT1            NO PROTECTION                DM MAR82\n         OI    SWA,LPAPROT        LPA PROTECT IS ON            DM MAR82\n         NI    3(R2),255-4        TURN OFF                     DM MAR82\n         NI    3(R3),255-4             PROTECTION              DM MAR82\n         SPACE ,                                               DM NOV82\n         MODESET MODE=SUP         GET IN SUPERVISOR STATE      DM NOV82\n         PTLB  ,          PURGE TRANSLATION LOOK-ASIDE BUFFER  DM NOV82\n         MODESET MODE=PROB        BACK TO PROBLEM STATE        DM NOV82\n         SPACE ,                                               DM NOV82\nNOPROT1  LR    R0,R10             CURRENT DEVMASKT ENTRY       DM MAR82\n         LA    R14,MASKWRK        NEW DEVMASKT ENTRY           DM MAR82\n         L     R1,MASKLNG         MOVE THE                     DM MAR82\n         LR    R15,R1                  NEW ENTRY               DM MAR82\n         MVCL  R0,R14                       TO THE CURRENT     DM MAR82\n         TM    SWA,LPAPROT        SEE IF LPA PROTECTED         DM MAR82\n         BZ    NOPROT2            NO - SKIP REPROTECT          DM MAR82\n         OI    3(R2),4            TURN ON                      DM MAR82\n         OI    3(R3),4                 PROTECTION              DM MAR82\nNOPROT2  LM    R14,R12,12(R13)                                 DM MAR82\n         BR    R14                RETURN                       DM MAR82\n         EJECT\nPAGEFIX  STM  R14,R12,12(R13)     SAVE ENTRY REGISTERS\n         SPACE 1\n***********************************************************************\n* IN ORDER TO FACILITATE AN UNACCOUNTED FOR PAGEFIX, THE BRANCH       *\n* ENTRY TO THE PAGE SERVICE INTERFACE ROUTINE (IEAVPSIB) MUST BE      *\n* USED. THE FOLLOWING ARE THE REQUIREMENTS FOR THIS ROUTINE:          *\n*    MODE:      SUPERVISOR                                            *\n*    KEY:       ZERO                                                  *\n*    LOCKS:     LOCAL                                                 *\n*    REGISTERS: R0 - ECB ADDRESS, OR ZERO                             *\n*               R1,R2 - IF R1, BYTE 0=1 THEN                          *\n*                          R1=ADDRSS(VSL)                             *\n*                          R2=N/A                                     *\n*                       IF R1, BYTE 0, BIT 0=0                        *\n*                          R1 - XL1(FLAG),AL3(START ADDR)             *\n*                          R2 - XL1(FLAG),AL3(END ADDR +1)            *\n*               R3 - N/A                                              *\n*               R4 - TCB ADDRESS, OR ZERO - IF ZERO NO FOE WILL       *\n*                                           BE BUILT - NO RLSE AT     *\n*                                           END OF TASK               *\n*               R5-R13 - N/A                                          *\n*               R14 - RETURN ADDRESS                                  *\n*               R15 - ENTRY POINT OF IEAVPSIB                         *\n***********************************************************************\n         SPACE 1\n* ON ENTRY R2 - ADDR OF DEVMASKT ENTRY\n         SPACE 1\n         L     R1,FLCCVT-PSA\n         CLM   R2,7,CVTLPDIR-CVT(R1)   SEE IF IN PLPA\n         BL    PGFXRET            NO - ADDRESS TOO LOW\n         LR    R4,R2              SET ENTRY START ADDRESS\n         N     R4,=F'-4096'       TRUNCATE TO PAGE START\n         LR    R5,R4\n         AH    R5,=H'4096'        FIX 4096 BYTES\n         A     R2,MASKLNG         END OF ENTRY\n         CR    R2,R5              CHECK IF OVER END OF PAGE\n         BNH   *+8                NO\n         AH    R5,=H'4096'        FIX 8192 BYTES\n         C     R4,FIXLOW\n         BL    PAGEFIX1           BELOW LAST FIX\n         C     R5,FIXHIGH\n         BH    PAGEFIX1           ABOVE LAST FIX\n         B     PGFXRET            THIS PAGE ALREADY FIXED\n         SPACE ,\nPAGEFIX1 STM   R4,R5,FIXLOW       SAVE NEW LIMITS\n         ICM   R4,8,=X'42'        INDICATE LONG FIX\n         ICM   R5,8,=X'80'        INDICATE LAST ENTRY\n* R4 & R5 NOW CONTAIN VSL TO BE USED IN PAGE FIX\n         MODESET MODE=SUP         GET TO SUPERVISOR STATE\n         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,               *\n               RELATED=('LOCAL LOCK FOR IEAVPSIB')\n         XC    FXECB,FXECB        CLEAR ECB\n         LA    R0,FXECB           SET ECB ADDRESS\n         LR    R1,R4              LOAD VSL INTO REGS 1 & 2\n         LR    R2,R5              FROM REGS 4 & 5\n         SR    R4,R4              SET R4=0, INDICATE NO TCB\n         L     R15,16             GET CVT ADDRESS\n         L     R15,CVTVPSIB-CVT(,R15) GET IEAVPSIB ADDRESS\n         BALR  R14,R15            BRANCH ENTER PAGE SERVICES\n         LR    R10,R15            SAVE RETURN CODE\n         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                          *\n               RELATED=('LOCAL LOCK FOR IEAVPSIB')\n         MODESET MODE=PROB        GET BACK TO PROB STATE\n         LTR   R10,R10            CHECK PGFIX RC\n         BZ    PGFXRET            0 - FIX COMPLETE & OK\n         WAIT  ECB=FXECB          WAIT FOR PAGE I/O COMPLETE\n         CLI   FXECB+3,0          WAS FIX OK?\n         BE    PGFXRET            YES, SET UP RETURN\n         WTO   'GENERIC HAS FAILED TO PAGEFIX DEVMASKT',               *\n               ROUTCDE=2\n         SPACE 1\nPGFXRET  LM    R14,R12,12(R13)    RESTORE REGS\n         BR    R14                RETURN\n         SPACE 3\nDEVNAMET DC    CL8'DEVNAMET'\nDEVMASKT DC    CL8'DEVMASKT'\n         SPACE ,\n         LTORG ,\n         EJECT ,\n* WORK AREA DEFINITION AND INITIALIZATION AREA\n* R13 POINTS TO A GETMAIN AREA WHICH IS THEN INITIALIZED\n* WITH THIS DATA\n         CSECT ,\nSAVEAREA DC    18F'0'             REGISTER SAVE AREA\nGMLNG    DC    F'0'               LENGTH OF THIS AREA\nMASKLNG  DC    F'0'               LENGTH OF ONE DEVMASKT ENTRY\n         SPACE 1\nFXECB    DS    F                  PAGE FIX ECB\nFIXLOW   DC    A(0)               LOWER BOUND OF LAST PAGEFIX\nFIXHIGH  DC    A(0)               UPPER BOUND OF LAST PAGEFIX\nADRNAMET DC    A(0)               ENTRY POINT OF DEVNAMET\nADRMASKT DC    A(0)               ENTRY POINT OF DEVMASKT\nCTLREG0  DC    F'0'               CONTROL REGISTER 0           DM MAR82\n* BYTE 0                                                       DM MAR82\nCRBLKMUX EQU   128                BLOCK MULTIPLEXING CONTROL   DM MAR82\nCRSSMSUP EQU   64                 SSM SUPPRESSION              DM MAR82\nCRTODCTL EQU   32                 TOD-CLOCK SYNC               DM MAR82\nCRLAPROT EQU   16                 LOW-ADDRESS PROTECTION       DM MAR82\nCREXAUTH EQU   8                  EXTRACTION AUTHORITY         DM MAR82\nCRSECSPC EQU   4                  SECONDARY ADDRESS SPACE CTL  DM MAR82\nCRRSV1   EQU   2                  RESERVED                     DM MAR82\nCRSKEXC  EQU   1                  STORAGE EXCEPTION CONTROL    DM MAR82\n* BYTE 1                                                       DM MAR82\nCRPAG4K  EQU   128                4K PAGES (DAT)               DM MAR82\nCRPAG2K  EQU   64                 2K PAGES                     DM MAR82\nCRRSV2   EQU   32                 RESERVED                     DM MAR82\nCRSEG1M  EQU   16                 1-MEG SEGMENTS               DM MAR82\n*                                 0 IS 64-K SEGMENTS           DM MAR82\nCRRSV3   EQU   8                  RESERVED                     DM MAR82\nCRPFASST EQU   4                  PAGE-FIX ASSIST              DM MAR82\nCRRSV4   EQU   2                  RESERVED                     DM MAR82\nCRRSV5   EQU   1                  RESERVED                     DM MAR82\n* BYTE 2                                                       DM MAR82\nCRMASUBM EQU   128                MALFUNCTION-ALERT SUBCLASS M DM MAR82\nCRESSUBM EQU   64                 EMERGENCY-SIGNAL SUBCLASS MA DM MAR82\nCRXCSUBM EQU   32                 EXTERNAL-CALL SUBBCLASS MASK DM MAR82\nCRTODSYN EQU   16                 TOD-CLOCK SYNC-CHECK SUBCLAS DM MAR82\nCRCCSUBM EQU   8                  CLOCK-COMPARATOR SUBCLASS MA DM MAR82\nCRCPUSUB EQU   4                  CPU-TIMER SUBCLASS MASK      DM MAR82\nCRSSSUBM EQU   2                  SERVICE-SIGNAL SUBCLASS MASK DM MAR82\nCRRSV6   EQU   1                  RESERVED                     DM MAR82\n* BYTE 3                                                       DM MAR82\nCRITSUBM EQU   128                INTERVAL TIMER SUBCLASS MASK DM MAR82\nCRIKSUBM EQU   64                 INTERRUPT-KEY SUBCLASS MASK  DM MAR82\nCREXSUBM EQU   32                 EXTERNAL-SIGNAL SUBCLASS MAS DM MAR82\nCRRSV7   EQU   16                 RESERVED                     DM MAR82\nCRRSV8   EQU   8                  RESERVED                     DM MAR82\nCRRSV9   EQU   4                  RESERVED                     DM MAR82\nCRIUCVSM EQU   2                  IUCV SUBCLASS MASK (VM/370)  DM MAR82\nCRVMCFSM EQU   1                  VMCF SUBCLASS MASK (VM/370)  DM MAR82\n         SPACE ,                                               DM MAR82\nSEGSIZE  DC    F'0'               SEGMENT LENGTH (64K OR 1M)   DM MAR82\nSEGROUND DC    F'0'               SEGMENT ROUNDING FACTOR      DM MAR82\nSEGTRUNC DC    F'0'               'AND' MASK TO TRUNCATE SGMNT DM MAR82\nPGSIZE   DC    F'0'               PAGE LENGTH (2K OR 4K)       DM MAR82\nPGROUND  DC    F'0'               PAGE ROUNDING FACTOR         DM MAR82\nPGTRUNC  DC    F'0'               'AND' MASK TO TRUNCATE PAGE  DM MAR82\n         SPACE\n* THE FOLLOWING NUMBERS ARE THE LENGTHS OF EACH SECTION OF THE EDT\nEDTLKUPL DC    H'32'              LOOK-UP SECTION\nEDTGENRL DC    H'12'              GENERIC SECTION\nEDTGRPTL DC    H'4'               GROUP POINTER SECTION\nEDTGRPL  DC    H'12'              GROUP SECTION\nEDTUCBPL DC    H'2'               UCB POINTER SECTION\n         SPACE ,                                               DM MAR82\nSWA      DC    X'0'               BIT SWITCHES                 DM MAR82\nLPAPROT  EQU   128                LPA PROTECT IS ON            DM MAR82\n         DC    0D'0'\nWRKLNG1  EQU   *-SAVEAREA         FIXED PORTION OF AREA\nMASKWRK  DS    0F\nMASKCNT  DS    F                  NUMBER OF DEVICES IN THIS ENTRY\nMASKDEVT DS    F                  DEVICE TYPE\nMASKBITS EQU   *\nMASKRND  EQU   7+8*(*-MASKWRK+3)  FACTOR TO CONVERT BITS IN            *\n                                  DEVMASKT TO A NUMBER OF BYTES        *\n                                  THAT IS A FULLWORD MULTIPLE\n         SPACE 3\n         CVT   DSECT=YES\n         PUSH  PRINT\n         PRINT ON,NOGEN\n         IHAPSA ,\n         POP PRINT\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSUNITS": {"ttr": 4873, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x00\\x892\\x8f\\x00\\x90\\x16_\\x17\\x18\\x00\\xbd\\x00Q\\x00u\\xe2\\xc3\\xd7\\xe2\\xc4\\xe2@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "1989-11-24T00:00:00", "modifydate": "1990-06-14T17:18:00", "lines": 189, "newlines": 81, "modlines": 117, "user": "SCPSDS"}, "text": "SYSUNITS CSECT\nTOP      SAVE  (14,12),T,'SYSUNITS &SYSDATE &SYSTIME'\n         LR    R10,15\n         USING TOP,R10\n         LR    R2,R1\n         LA    R1,WAREA\n         ST    13,4(R1)                NEW CORE IS SAVE AREA\n         ST    R1,8(13)\n         LR    13,R1\n         USING WAREA,13\n***************************************************************\n*** FUNC:  TO READ A LIST OF UNITNAMES AND RETURN           ***\n***        THE RELATED UNITS AND VOLUMES TO SYSOUT          ***\n***        A DATASET                                        ***\n***                                                         ***\n*** DATE:  06/14/90                                         ***\n***                                                         ***\n*** INPUT  UNITIN  DDNAME  COLUME 2 IS UNIT NAME            ***\n***        OR * IN COLUME ONE FOR COMMENT                   ***\n***        IN COLUME 10 OPTIONAL:  ALL                      ***\n***                 THIS OPTION HAS NO MEANING FOR NON-DASD ***\n***                 IF BLANK ONLY ONLINE DASD WILL BE PUT   ***\n***                 OUT                                     ***\n***                                                         ***\n*** OUTPUT UNITOUT DDNAME  (RECFM=FB,LRECL=80) SYSOUT OR DISK *\n***        INPUT RECORD  FOLLOWED BY RECORDS OF DEVICES:    ***\n***        COLUME 10-CUU, 15-VOLUME 25-DEVICE TYPE          ***\n***                DEVICE TYPES ARE DASD, TAPE, UREC        ***\n***                  UREC IS USED FOR ALL OTHER TYPES       ***\n***                                                         ***\n***                                                         ***\n***          THIS WORKS FOR ALL XA AND ESA SYSTEMS          ***\n***                                                         ***\n***   SEND INQUIRES TO:                                     ***       *\n***            STEVEN D. SMITH   G12-99                     ***       *\n***            SECURITY PACIFIC AUTOMATION COMPANY          ***       *\n***            611 NORTH BRAND                              ***       *\n***            GLENDALE, CA, 91203                          ***       *\n***                                                         ***       *\n***   OR PHONE: (818) 507-3014                              ***       *\n***                                                         ***       *\n*************************************************************\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nOFLG     EQU   X'10'\n         OPEN  (SYSUT1,INPUT)\n         TM   DCBOFLGS-IHADCB+SYSUT1,X'10'\n         BNO   ABEND1\n         OPEN  (SYSUT2,OUTPUT)\n         TM   DCBOFLGS-IHADCB+SYSUT2,X'10'\n         BNO   ABEND1\n         MVI   OUTPUT,C' '              *                      SS AUG89\n         MVC   OUTPUT+1(79),OUTPUT      *                      SS AUG89\n         SPACE 3\nGETNXT   DS    0H                       *                      SS AUG89\n         GET   SYSUT1,INPUT             *                      SS AUG89\n         PUT   SYSUT2,INPUT             *                      SS AUG89\n         CLI   INPUT,C'*'               *                      SS AUG89\n         BE    GETNXT                   *                      SS AUG89\n         MVC   CNTLTBL(8),INPUT+1       *                      SS AUG89\n         OC    CNTLTBL(8),OUTPUT+30     FORCE UPPER CASE       SS AUG89\n         NI    FLAGS,255-DISPOFLN       *                      SS AUG89\n         CLI   INPUT+10,C' '            REQUEST ON             SS AUG89\n         BE    *+8                      NO                     SS AUG89\n         OI    FLAGS,DISPOFLN      DISPLAY OFFLINE             SS AUG89\n* GET DASD UCB FOR GENERIC DEVICE TYPE USING IEFEB4UV          SS AUG89\n         LA    R1,CNTLTBL          UNIT TABLE  ADDRESS         SS AUG86\n         ST    R1,PARMLIST         SET POINTER                 SS AUG86\n         LA    R1,REQUTYPE         REQUEST FLAG                SS AUG86\n         ST    R1,PARMLIST+4       SET POINTER                 SS AUG86\n         LA    R1,PARMLIST         POINT TO PARMLIST           SS AUG86\n         LINK  EP=IEFEB4UV         XA SERVICE ROUTINE          SS AUG86\n         LTR   R15,R15                  *                      SS AUG86\n         BNZ   NOUCBS              NO ENTRIES                  SS AUG86\n         L     R5,LISTPTR          GET POINTER TO LIST         SS AUG86\n         L     R4,4(R5)            GET COUNT                   SS AUG86\n         LA    R5,8(R5)            FIRST ENTRY                 SS AUG89\n         B     CHKUCB                   *                      SS AUG89\nSCANLOOP DS    0H                  LOOP                        SS NOV85\n*  EXTRACT ENTRY FROM UCB LIST                                 SS NOV85\n         LA    R5,4(,R5)         NEXT ADDRESS                  SS AUG86\n         BCT   R4,CHKUCB         MORE TO DO                    SS AUG86\n*  AT END OF LIST FREEMAIN                                     SS NOV85\n         L     R1,LISTPTR        GET LIST ADDRESS              SS AUG86\n         L     R0,0(,R1)         SUBPOOL AND LENGTH            SS AUG86\n         FREEMAIN R,LV=(0),A=(1) FREE LIST                     SS AUG86\n         B     SCANEND                  *                      SS AUG86\nCHKUCB   DS    0H                       *                      SS AUG89\n         L     R1,0(R5)                                        SS NOV85\n         USING UCBOB,R1                                        SS NOV85\n         CLI   UCBTBYT3,X'20'      REALLY A DASD DEVICE        SS AUG86\n         BNE   PUTOTHER            NO, SKIP IT                 SS AUG86\n         TM    UCBSTAT,UCBONLI     IS IT ONLINE                SS NOV85\n         BZ    OFFLINE             NO, SKIP IT                 SS NOV85\n         CLI   UCBVOLI,C' '        ANY VOLUME                  SS NOV85\n         BNH   OFFLINE             NO VOLUME, SKIP IT          SS NOV85\n         TM    UCBSTAT,UCBCHGS+UCBUNLD GOING OFFLINE           SS NOV85\n         BNZ   OFFLINE             YES, SKIP IT                SS NOV85\n* PROCESS UCB                           *                      SS AUG89\n         MVC   OUTPUT+9(3),UCBNAME      *                      SS AUG89\n         MVC   OUTPUT+14(6),UCBVOLI     *                      SS AUG89\n         MVC   OUTPUT+24(4),DASD        *                      SS AUG89\n         PUT   SYSUT2,OUTPUT            *                      SS AUG89\n         B     SCANLOOP                 *                      SS AUG89\nOFFLINE  DS    0H                       *                      SS AUG89\n         TM    FLAGS,DISPOFLN      DISPLAY OFFLINE             SS AUG89\n         BZ    SCANLOOP                 *                      SS AUG89\n         MVC   OUTPUT+9(3),UCBNAME      *                      SS AUG89\n         MVC   OUTPUT+14(6),OFFLNMG     *                      SS AUG89\n         MVC   OUTPUT+24(4),DASD        *                      SS AUG89\n         PUT   SYSUT2,OUTPUT            *                      SS AUG89\n         B     SCANLOOP                 *                      SS AUG89\nOFFLNMG  DC    C'*OFFLN'                *                      SS AUG89\nPUTOTHER DS    0H                       *                      SS AUG89\n         CLI   UCBTBYT3,X'80'      COULD BE TAPE               SS AUG86\n         BE    PUTTAPE             NO, SKIP IT                 SS AUG86\n         MVC   OUTPUT+9(3),UCBNAME      *                      SS AUG89\n         MVC   OUTPUT+14(6),OUTPUT+30   BLANK                  SS AUG89\n         MVC   OUTPUT+24(4),UREC        *                      SS AUG89\n         PUT   SYSUT2,OUTPUT            *                      SS AUG89\n         B     SCANLOOP                 *                      SS AUG89\nPUTTAPE  DS    0H                       *                      SS AUG89\n         MVC   OUTPUT+9(3),UCBNAME      *                      SS AUG89\n         MVC   OUTPUT+14(6),OUTPUT+30   BLANK                  SS AUG89\n         MVC   OUTPUT+24(4),TAPE        *                      SS AUG89\n         PUT   SYSUT2,OUTPUT            *                      SS AUG89\n         B     SCANLOOP                 *                      SS AUG89\nDASD     DC    CL4'DASD'                *                      SS AUG89\nUREC     DC    CL4'UREC'                *                      SS AUG89\nTAPE     DC    CL4'TAPE'                *                      SS AUG89\n* DONE                                  *                      SS AUG89\nSCANEND  DS    0H                       *                      SS AUG89\n         DROP  R1                       *                      SS AUG89\n         B     GETNXT                   *                      SS AUG89\nNOUCBS   DS    0H                       *                      SS AUG89\n         PUT   SYSUT2,MSG1              *                      SS AUG89\n         B     GETNXT                   *                      SS AUG89\nEODAD    CLOSE (SYSUT1)\nOUT      CLOSE (SYSUT2)\nEXIT     L     13,4(13)                 LOAD ADDRESS OF PREV SAVE AREA\n         RETURN (14,12),RC=0\n         SPACE 1\nABEND1   ABEND 1\n         SPACE 3\n         DROP  10                       *                      SS AUG89\n         USING *,15\nOUTEXIT  DS    0H\n         CLC   DCBBLKSI-IHADCB(L'DCBBLKSI,1),=H'0'\n         BNE   *+10\n         MVC   DCBBLKSI-IHADCB(L'DCBBLKSI,1),BLKSIZE\n         BR    14\n         DROP  15\n         SPACE 1\nWAREA    DS    18F\nBLKSIZE  DC    H'3200'\nREQUTYPE DC    X'1000'             GEN UCB LIST REQUEST        SS AUG89\nFLAGS    DC    F'0'                ZERO FLAGS                  SS AUG89\nDISPOFLN EQU   X'80'               DISPLAY OFFLINE             SS AUG89\nPARMLIST DS    2F                       *                      SS AUG89\nCNTLTBL  DS    0F                  SCAN ROUTINE ADDR           SS AUG89\n         DS    2F                  UNIT NAME GOES HERE         SS AUG89\nLISTPTR  DS    F                   RETURNED                    SS AUG89\nINPUT    DS    CL80                     *                      SS AUG89\nOUTPUT   DS    CL80                     *                      SS AUG89\nMSG1     DC    CL80'NO VOLUMES FOR THIS UNIT NAME'             SS AUG89\nSYSUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=UNITIN,EODAD=EODAD\nSYSUT2   DCB   DSORG=PS,MACRF=PM,DDNAME=UNITOUT,EROPT=ACC,EXLST=YYYY,  X\n               RECFM=FB,LRECL=80\n         SPACE 1\n         DS    0F\nYYYY     DC    X'85',AL3(OUTEXIT)\n         SPACE 1\n         DCBD  DSORG=PS\n         IEFUCBOB\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UCBMASK": {"ttr": 5123, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x832\\x0f\\x00\\x90\\x16/\\x16\\x00\\x00\\xa9\\x00\\x95\\x005\\xe2\\xc3\\xd7\\xe2\\xc4\\xe2@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1983-11-16T00:00:00", "modifydate": "1990-06-11T16:00:00", "lines": 169, "newlines": 149, "modlines": 53, "user": "SCPSDS"}, "text": "UCBMASK  CSECT\nTOP      SAVE  (14,12),T,UCBMASK\n         LR    BASE,15\n         USING TOP,BASE\n         LA    R1,SAVEAREA\n         ST    13,4(R1)                NEW CORE IS SAVE AREA\n         ST    R1,8(13)\n         LR    13,R1\n         USING SAVEAREA,13\n**************************************************************\n*** FUNC: TO SET MOUNT ATTR BASED ON VOLSER                ***\n***       USING AT VOLUME LIST WITH GENERIC NAMES          ***\n*** DATE: 06/11/90                                         ***\n***                                                        ***\n*** ATTR: ACF AUTH .. AC(1)                                ***\n***                                                        ***\n*** SAMPLE INPUT ON DD SYSIN .. COL1 VOL, COL8 : PT PRIVATE **\n***                                              ST STORAGE **\n***                                              PU PUBLIC  **\n***      ....+....1....                                     **\n***      SYSDA* ST                                         ***\n***      SYSL*  PT                                         ***\n***      TSOVS* ST                                         ***\n***      TSO*   ST                                         ***\n***                                                        ***\n***                                                        ***\n*** NOTES:   ALL DASD UCBS ARE SCANNED, FIRST SYSIN        ***\n***          ENTRY TO MATCH UCB VOL WILL APPLY MOUNT ATTR. ***\n***          IF NO MATCH, PRIVATE WILL BE USED AS ATTR.    ***\n***                                                        ***\n***                                                        ***\n***          THIS WORKS FOR ALL XA AND ESA SYSTEMS         ***\n***          SHOULD WORK WITH MVS/370 SYSTEMS WITH         ***\n***          UCBSCAN SUPPORT  1.3.0 AND UP                 ***\n*************************************************************\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nBASE     EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nE        EQU   8\nO        EQU   9\nXFF      EQU   X'FF'\nX0F      EQU   X'0F'\nXF0      EQU   X'F0'\nOFLG     EQU   X'10'\nEOF      EQU   1\nNOCLOSE  EQU   2\nECHO     EQU   4\nNOCLOSEI EQU   8\nNOSYSIN  EQU   16\nNOOUT2   EQU   32\n         MVI   FLAG1,0\n         MVI   FLAG2,0\n         L     R4,AVOLS                 SAVE VOLS HERE ALSO\n         ST    R4,LASTVOL               PRESET LAST VOL ENTRY\nOPENSYSN OPEN (SYSIN,INPUT)\n         TM    SYSIN+48,OFLG\n         BZ    NOINPUT\nGETSYSIN GET   SYSIN,OUTLINE\n         MVC   0(16,R4),OUTLINE\n         LA    R5,1(R4)                 SECOND CHAR IN VOL\n         LA    R6,5                     LOOK AT NEXT 5 CHAR\nCHKG     CLI   0(R5),C'*'               VOL IS GENERIC\n         BE    GENERIC                  YES\n         LA    R5,1(R5)                 TRY NEXT CHAR\n         BCT   R6,CHKG                  LOOP ON COUNT\n         MVI   15(R4),5                 NO GENERIC, COMP ON ALL 6 CHR\n         B     NEXTIN\nGENERIC  LA    R6,1(R4)                 CALCULATE\n         SR    R5,R6                             LENGTH\n         STC   R5,15(R4)                                FOR COMPARE\nNEXTIN   LA    R4,16(R4)\n         ST    R4,LASTVOL\n         B     GETSYSIN\nSYSINEOF DS    0H\n         CLOSE (SYSIN)\n         B     GETCVT\nNOINPUT  WTO   'TSDXXXI UCBMASK NO INPUT, FUCTION TERMIATED ',    XXXXXX\n               ROUTCDE=(2,11)\n         B     EXIT\nGETCVT   L     R3,16                    CVT\n         L     R3,X'434'(R3)            IOSVSUCB\n         SR    R2,R2                    ZERO FOR ICM\n         L     R4,AVOLS                 START VOL SEARCH HERE\n         XC    UCBWORK,UCBWORK\n         LA    R1,UCBWORK\n         ST    R1,UCBP1\n         LA    R1,=X'20'                DASD TYPE\n         ST    R1,UCBP2\n         LA    R1,UCBADDR\n         ST    R1,UCBP3\n         OI    UCBP3,X'80'\n         MODESET KEY=ZERO\nUCBLOOP  LR    R15,R3\n         LA    R1,UCBP1\n         BALR  R14,R15\n         LTR   R15,R15                  END OF UCBS\n         BNZ   ENDUCB                   YES\n         L     R2,UCBADDR               LOAD UCB ADDR\n         CLI   18(R2),X'20'             DASD\n         BNE   UCBLOOP                  NO\n         CLI   28(R2),0                 VOL SER\n         BE    UCBLOOP                  NO\n         L     R4,AVOLS                 GET NEXT EMPTY SLOT\n         SR    R5,R5                    CLEAR FOR IC\nVOLCK    C     R4,LASTVOL               CHECK END OF LIST\n         BE    NOVOL                    NOT IN LIST\n         IC    R5,15(R4)                LENGTH FOR GENERIC\n         EX    R5,VCOMP                 DO VOL COMPARE\n         BE    VOLMATCH                 MATCH\n         LA    R4,16(R4)                TRY NEXT\n         B     VOLCK\nVCOMP    CLC   0(0,R4),28(R2)           MATCH VOLSER\nVOLMATCH DS    0H\n         CLI   7(R4),C'S'               REQUEST STORAGE\n         BNE   TRYPUB\n         NI    34(R2),255-X'18'         TURN OF PUB AND PRI\n         OI    34(R2),X'04'             TURN ON STORAGE\n         B     UCBLOOP                  TRY THIS ONE\nTRYPUB   CLI   7(R4),C'B'               REQUEST BYPASS THIS UCB\n         BE    UCBLOOP                  YES TRY NEXT UCB\n         CLI   7(R4),C'P'               REQUEST PUB OR PRI\n         BNE   NOVOL                    INVALID, MAKE PRI\n         CLI   8(R4),C'U'               REQUEST PUBLIC\n         BNE   NOVOL                    NO, MAKE PRI\n         NI    34(R2),255-X'14'         TURN OF STR AND PRI\n         OI    34(R2),X'08'             PUBLIC\n         B     UCBLOOP\nNOVOL    DS    0H\n         NI    34(R2),255-X'0C'         TURN OF PUB AND STR\n         OI    34(R2),X'10'             TURN ON PRIVATE\n         B     UCBLOOP                  TRY THIS ONE\nENDUCB   WTO   'TSDXXXI UCBMASK DONE',ROUTCDE=(2,11)\nEXIT     L     R13,4(R13)\n         RETURN (14,12),T,RC=0\nSAVEAREA DS    18F\nDWORD    DS    D\nSAVE14   DS    F\nUCBP1    DS    F\nUCBP2    DS    F\nUCBP3    DS    F\nUCBADDR  DS    F\nLASTLINE DS    F\nNUMVOLS  DS    F\nLASTVOL  DS    F\nAVOLS    DC    A(VOLS)\n         LTORG\nFLAG1    DS    X\nFLAG2    DS    X\nSYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=SYSINEOF,          X\n               RECFM=FB,LRECL=80\nOUTLINE  DS    CL80\n         DS    0D\nUCBWORK  DS    CL100\nVOLS     DS    1000CL16\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VATUCB": {"ttr": 5127, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x84\\x01/\\x00\\x84\\x01/\\x07P\\x01N\\x01N\\x00\\x00|\\xf4\\xf2\\xf1\\xf0\\xf9\\xf8@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1984-01-12T00:00:00", "modifydate": "1984-01-12T07:50:00", "lines": 334, "newlines": 334, "modlines": 0, "user": "@421098"}, "text": "***********************************************************************\n*                                                                     *\n*   PROGRAM TO MAKE ALL DIRECT ACCESS VOLUMES MATCH VATLST            *\n*   WHEN CHANGES ARE MADE AFTER IPL TIME                              *\n*                                                                     *\n*   WRITTEN BY AL ARAUJO, JUNE 1976,                                  *\n*      FOR THE LOCKHEED-CALIFORNIA COMPANY                            *\n*                                                                     *\n*   MODIFIED BY DOUG MERCER, JULY 1980,                               *\n*      TO BE REENTRANT                                                *\n*                                                                     *\n*   MODIFIED BY DOUG MERCER, AUGUST 1980,                             *\n*      TO BINARY SEARCH THE VATLST TABLE (IF IN SEQUENCE)             *\n*                                                                     *\n*   MODIFIED BY DOUG MERCER, JANUARY 1984,                            *\n*      FOR MVS/XA (IOSVSUCB RATHER THAN UCB LOOKUP TABLE)             *\n*                                                                     *\n*      THIS PROGRAM IS BEING CALLED IN BY GENERIC AND LOADS IN THE    *\n*         VATLIST TO BE COMPARED WITH THE DIRECT ACCESS VOLUMES.      *\n*      1.THE CORRESPONDING 'USE' ATTRIBUTE IS ALTERED IN ITS UCB      *\n*      2.THE CORRESPONDING 'SHARE' ATTRIBUTE IS ALTERED IN ITS UCB    *\n*      3.THE CORRESPONDING 'MOUNT' ATTRIBUTE IS ALTERED IN ITS UCB    *\n*                                                     A.R.A. DEC 76   *\n*      4.ANY DIRECT ACCESS DEVICE NOT FOUND IN THE VATLST TABLE WILL  *\n*        BE MARKED AS PRIVATE AND RESERVE.            A.R.A. JAN 80   *\n*                                                                     *\n*        ATTRIBUTES - REENTRANT                                       *\n*        TAB SETTINGS - 10 16 31 72                                   *\n*                                                                     *\n***********************************************************************\n         SPACE 1\nVATUCB   CSECT ,\n         USING VATUCB,R12\n         USING EXSA,R8\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\n         SAVE  (14,12)        *SAVE THE REGISTERS\n         LR    R12,R15\n         SPACE 3                                               DM JUL80\n         GETMAIN R,LV=SAVSIZ\n         L     R14,=A(SAVEAREA)                                DM JUL80\n         LR    R15,R0                                          DM JUL80\n         LR    R2,R1          INITIALIZE                       DM JUL80\n         LR    R3,R0               THE WORK                    DM JUL80\n         MVCL  R2,R14                   AREA                   DM JUL80\n         ST    R1,8(,R13)\n         ST    R13,4(,R1)\n         LR    R13,R1\n         USING SAVEAREA,R13                                    DM JUL80\n         SPACE 3\n         L     R3,VATTBLE                                      DM JUL80\n         USING VATLST,R3\n         OPEN  VATIN,MF=(E,OCLIST)                             DM JUL80\n         BAL   R14,GETVAT     GET A TABLE AREA                 DM JUL80\n         SPACE 4\n********************************************************************\n*   LOAD VATLST TABLE                                              *\nINPUT    DS    0H\n         C     R3,VATLAST     SEE IF THIS IS LAST SLOT         DM JUL80\n         BNH   *+8            NO                               DM AUG80\n         BAL   R14,GETVAT     GET A LARGER AREA                DM JUL80\n         GET   VATIN          BRING IN VATLST ENTRY            DM JUL80\n         LA    R0,1           COUNT                            DM AUG80\n         AH    R0,VATCNT           TABLE                       DM AUG80\n         STH   R0,VATCNT                ENTRY                  DM AUG80\n         MVC   VATLST(VATLNG),0(R1)                            DM JUL80\n         CLC   SEQCHK,VOLSER  CHECK SEQUENCE                   DM AUG80\n         MVC   SEQCHK,VOLSER       UPDATE SEQUENCE CHECK       DM AUG80\n         BL    NEXTBL         OK - IN SEQUENCE                 DM AUG80\n         MVC   SEQSER,VOLSER  OUT OF SEQUENCE                  DM AUG80\n         LA    R1,SEQWTO      SEND ERROR MESSAGE               DM AUG80\n         WTO   MF=(E,(1))                                      DM AUG80\n         OI    BITS1,OUTSEQ   INDICATE SEQUENCE ERROR          DM AUG80\nNEXTBL   LA    R3,VATLNG(,R3) SET PTR TO NEXT TABLE ENTRY      DM JUL80\n         B     INPUT          GO LOAD ANOTHER CARD IN TABLE\nEND      DS    0H\n         MODESET KEY=ZERO                                      DM AUG80\n         SPACE 3                                               DM AUG80\n********************************************************************\n*   BEGIN UCB SEARCH IN VATLST TABLE                               *\n         SR    R3,R3          ZERO VATTBLE REGISTER\n         XC    UCBWORK,UCBWORK    ZERO WORK AREA               DM JAN84\n         LA    R0,UCBWORK         INITIALIZE PARAMETER LIST    DM JAN84\n         ST    R0,UCBPARM                                      DM JAN84\n         LA    R0,=AL1(UCB3DACC)  DASD DEVICE TYPE             DM JAN84\n         ST    R0,UCBPARM+4                                    DM JAN84\n         LA    R0,UCBADDR         RETURN ADDRESS               DM JAN84\n         ST    R0,UCBPARM+8                                    DM JAN84\n         OI    UCBPARM+8,X'80'    SET END OF LIST              DM JAN84\n         L     R4,CVTPTR\n         USING CVTMAP,R4\n         L     R4,CVTUCBSC    ADDR OF UCB SCAN ROUTINE         DM JAN84\n         DROP  R4\nA0100    DS    0H\n         SPACE ,                                               DM AUG80\n         LR    R15,R4             CVTUCBSC                     DM JAN84\n         LA    R1,UCBPARM                                      DM JAN84\n         BALR  R14,R15            SCAN                         DM JAN84\n         LTR   R15,R15                                         DM JAN84\n         BNZ   ENDSRCH            LAST UCB                     DM JAN84\n         SPACE ,                                               DM JAN84\n         L     R10,UCBADDR                                     DM JAN84\n         USING UCBOB,R10\n         CLI   UCBVOLI,X'0'         IS THE VOL ID ZERO?\n         BE    A0400\n         L     R3,VATTBLE     SET POINTER BACK TO VATTBLE TOP  DM JUL80\n         USING VATLST,R3\n         LH    R0,VATCNT      SEARCH FOR VOLUME                DM AUG80\n         TM    BITS1,OUTSEQ                                    DM AUG80\n         BZ    B0100          IN SEQUENCE - BINARY SEARCH      DM AUG80\n         SPACE ,                                               DM AUG80\nA0300    CLC   VOLSER,UCBVOLI       IS UCB IN VATLST?          DM AUG80\n         BE    A0900                YES, GO HAVE 'USE' ATTRIB ALTER'D\n         LA    R3,VATLNG(R3)  SET POINTER TO NEXT VATLST ENTRY DM JUL80\n         BCT   R0,A0300       GO TRY NEXT VATLST ENTRY         DM AUG80\n         B     A1700          NOT FOUND                        DM AUG80\n         SPACE 2                                               DM AUG80\nA0400    DS    0H\n         B     A0100          CONTINUE UCB SEARCH\n         SPACE 3\n* BINARY SEARCH VATLST TABLE                                   DM AUG80\nB0100    SH    R3,=Y(VATLNG)  BACK UP TO ENTRY(0)              DM AUG80\n         SPACE ,                                               DM AUG80\nB0200    LR    R15,R3         SAVE THIS AS LAST LOW            DM AUG80\nB0300    LR    R3,R15         RESET FROM PRIOR LOW             DM AUG80\n         LR    R14,R0         DEVELOP ADDRESS INCREMENT        DM AUG80\n         LA    R14,1(,R14)         FROM COUNT                  DM AUG80\n         SRA   R14,1          HALVE (ROUNDED)                  DM AUG80\n         BZ    A1700          NOT FOUND                        DM AUG80\n         SR    R0,R14         REMAINING COUNT                  DM AUG80\n         MH    R14,=Y(VATLNG)     * ENTRY LENGTH               DM AUG80\n         AR    R3,R14         NEXT ADDRESS                     DM AUG80\n         CLC   VOLSER,UCBVOLI      SEE IF THIS IS VOLUME       DM AUG80\n         BL    B0200          NO - TOO LOW                     DM AUG80\n         BH    B0300          NO - TOO HIGH                    DM AUG80\n         B     A0900          FOUND                            DM AUG80\n         SPACE 2\n**********************************************************************\n*   CHECK VATLST FOR THE 'USE' ATTRIBUTE OF VOLUME                   *\nA0900    DS    0H\n         NI    UCBSTAB,255-(UCBBPRV+UCBBSTR+UCBBPUB)   ZERO OUT UCB\n         CLI   USE,USESTOR    SHOULD IT BE A STORAGE VOL?      DM JUL80\n         BE    A1000          GO ALTER ITS UCB\n         CLI   USE,USEPUB     SHOULD IT BE A PUBLIC VOL?       DM JUL80\n         BE    A1100          GO ALTER ITS UCB\n         CLI   USE,USEPRIV    SHOULD IT BE A PRIVATE VOL?      DM JUL80\n         BE    A1200          GO ALTER ITS UCB\n         B     A0100          GO GET ANOTHER UCB\n         SPACE 2\n**********************************************************************\n*   ALTER THE UCB TO THE CORRECT 'USE' ATTRIBUTE                     *\nA1000    DS    0H\n         OI    UCBSTAB,UCBBSTR  ALTER ITS UCB TO EQUAL STORAGE VOL\n         B     A1300            GO CHECK SHARE STATUS\n         SPACE 1\nA1100    DS    0H\n         OI    UCBSTAB,UCBBPUB  ALTER ITS UCB TO EQUAL  PUBLIC VOL\n         B     A1300            GO CHECK SHARE STATUS\n         SPACE 1\nA1200    DS    0H\n         OI    UCBSTAB,UCBBPRV  ALTER ITS UCB TO EQUAL  PRIVATE VOL\n         SPACE 3\n***********************************************************************\n*   ALTER THE UCB IF 'SHARE' OR 'UNSHR' ATTRIBUTE IS REQUIRED         *\nA1300    DS    0H\n         CLC   SHRFLAG,=C'UNSHR'  IS THIS VOL UNSHARABLE\n         BNE   A1400              CONTINUE SHARE CHECK\n         NI    UCBTBYT2,255-UCBRR  ALTER UCB TO UNSHARED STATUSDM JAN84\nA1400    DS    0H\n         CLC   SHRFLAG,=C'SHARE'  IS THIS VOL SHARABLE\n         BNE   A1500              CONTINUE UCB SCAN\n         OI    UCBTBYT2,UCBRR     ALTER UCB TO SHARE STATUS\n         SPACE 3\n******************************************************************\n*    CHECK AND ALTER 'MOUNT' UCB ATTRIBUTE AS REQUIRED            *\nA1500    DS    0H\n         CLI   MOUNT,MNTRSDNT SHOULD IT BE A PERMANENT RESIDENT VOL? DM\n         BNE   A1600          NO. CONTINUE CHECKING\n         NI    UCBSTAT,255-UCBRESV      REMOVE RESERVE STATUS  DM JAN84\n         OI    UCBSTAT,UCBPRES  ALTER THE UCB TO PERM. RESIDENT\n         B     A1800          CONTINUE UCB SCAN\n         SPACE 1\nA1600    DS    0H\n         CLI   MOUNT,MNTRSERV SHOULD IT BE A RESERVED VOL?     DM JUL80\n         BNE   A1700          NO.NO ATTRIBUTES FOUND IN VATLST\n         NI    UCBSTAT,255-UCBPRES      REMOVE PERM. RESIDENT  DM JAN84\n         OI    UCBSTAT,UCBRESV  ALTER THE UCB TO RESERVE\n         B     A1800          CONTINUE THE UCB SCAN\n         EJECT\n********************************************************************\n*   ASSIGNING A DEFAULT VALUE TO A UCB NOT FOUND IN VATLST         *\nA1700    DS    0H                                              ARA 1/80\n         TM    UCBTBYT2,UCBRVDEV       IS IT A VIRT UCB?       ARA 1/80\n         BO    A0400                   YES/ GO GET ANOTHER UCB ARA 1/80\n         MVC   DFLTVOL,UCBVOLI     MOVE VOLID INTO WTO MSG     DM AUG80\n         LA    R1,DFLTWTO          SET 'DEFAULT' MSG ADDR      DM AUG80\n*        WTO   MF=(E,(1))                                      DM SEP81\n         SPACE 3\n         NI    UCBSTAB,255-(UCBBPRV+UCBBSTR+UCBBPUB)  CLEAR UCBDM NOV81\n         OI    UCBSTAB,UCBBPRV         ALTER TO PRIVATE        ARA 1/80\n         NI    UCBSTAT,255-UCBPRES     REMOVE PERM. RESIDENT   DM JAN84\n         OI    UCBSTAT,UCBRESV         ALTER TO RESERVED       ARA 1/80\n         SPACE 4\nA1800    DS    0H\n         B     A0400                   GO GET ANOTHER UCB      ARA 1/80\n         SPACE 4                                               DM JUL80\n************************************************************** DM JUL80\n* GETMAIN AN AREA FOR THE VATLST ENTRIES -                   * DM JUL80\n* MOVE THE CURRENT LIST TO IT (ZEROS IF FIRST TIME)          * DM JUL80\nGETVAT   STM   R14,R5,12(R13)                                  DM JUL80\n         L     R2,VATTBLE                                      DM JUL80\n         L     R3,VATGMLNG                                     DM JUL80\n         LH    R0,=H'4096'    INCREMENT OVER PREVIOUS          DM JUL80\n         AR    R0,R3          ADD PREVIOUS LENGTH (0 IF FIRST) DM JUL80\n         GETMAIN R,LV=(0)                                      DM JUL80\n         STM   R0,R1,VATGMLNG SAVE                             DM JUL80\n         AR    R0,R1          BYTE PAST END                    DM JUL80\n         SH    R0,=Y(VATLNG)  LAST AVAILABLE SLOT              DM JUL80\n         ST    R0,VATLAST                                      DM JUL80\n         LR    R4,R2          SAVE OLD GETMAIN DATA            DM JUL80\n         LR    R5,R3               ACROSS MVCL                 DM JUL80\n         LR    R0,R1          MOVE PRIOR DATA                  DM JUL80\n         L     R1,VATGMLNG         TO NEW AREA                 DM JUL80\n         MVCL  R0,R2                    (0 IF FIRST TIME)      DM JUL80\n         L     R3,VATTBLE                                      DM JUL80\n         LTR   R0,R5          PRIOR LENGTH                     DM JUL80\n         BZ    GETVAT1        ZERO - FIRST TIME                DM JUL80\n         FREEMAIN R,LV=(0),A=(R4)  FREE OLD                    DM JUL80\n         A     R3,32(,R13)    CALCULATE WHERE CURRENT          DM JUL80\n         SR    R3,R4               ENTRY HAS MOVED TO          DM JUL80\n         SPACE ,                                               DM JUL80\nGETVAT1  ST    R3,32(,R13)    SET NEW CURRENT (AFTER LM)       DM JUL80\n         LM    R14,R5,12(R13)                                  DM JUL80\n         BR    R14            RETURN                           DM JUL80\n         EJECT\nENDSRCH  DS    0H\n         MODESET KEY=NZERO                                     DM AUG80\n         LA    R5,ENDVAT      SET NORMAL 'END' MSG ADDR\n         CLOSE VATIN,MF=(E,OCLIST)                             DM JUL80\n         WTO   MF=(E,(R5))\n         LM    R0,R1,VATGMLNG FREE THE TABLE AREA              DM JUL80\n         FREEMAIN R,LV=(0),A=(1)                               DM JUL80\n         FREEPOOL             VATIN                            DM JUL80\n         LR    R1,R13\n         L     R13,4(,R13)\n         DROP  R13                                             DM JUL80\n         FREEMAIN R,LV=SAVSIZ,A=(1)\n         RETURN (14,12),T,RC=(15)\n         EJECT\nENDVAT   WTO   'END UCB ALTERATIONS',MF=L,ROUTCDE=(2,11)\n         SPACE 2\n         LTORG\n         EJECT\n         CSECT ,              WORK AREA DEFINITION AND         DM JUL80*\n                              INITIALIZATION AREA - R13 POINTS DM JUL80*\n                              TO A GETMAIN AREA                DM JUL80\nSAVEAREA DC    18A(0)\n         SPACE 2\n         DC    0D'0'                                           DM JAN84\nUCBWORK  DC    XL100'0'           IOSVSUCB WORK AREA           DM JAN84\n         SPACE ,                                               DM JAN84\nUCBPARM  DC    3A(0)    (UCBWORK,=X'20',UCBADDR+X'80000000')   DM JAN84\nUCBADDR  DC    A(0)                                            DM JAN84\n         SPACE 2                                               DM AUG80\nVATCNT   DC    H'0'           COUNT OF VATLST ENTRIES          DM AUG80\n         SPACE ,                                               DM AUG80\nDFLTWTO  DC    Y(DFLTWTOL),X'8000'                             DM AUG80\n         DC    C'A DEFAULT VALUE WAS ASSIGNED FOR '            DM AUG80\nDFLTVOL  DC    CL6' '                                          DM AUG80\nDFLTWTOL EQU   *-DFLTWTO                                       DM AUG80\n         DC    X'00004020'    ROUTCDE=(2,11)                   DM AUG80\n         SPACE ,                                               DM AUG80\nBITS1    DC    X'0'                                            DM AUG80\nOUTSEQ   EQU   128            VATLST IS OUT OF SEQUENCE        DM AUG80\n         SPACE ,                                               DM AUG80\nSEQWTO   DC    Y(SEQWTOL),X'8000'                              DM AUG80\n         DC    C'VATLST OUT OF SEQUENCE AT '                   DM AUG80\nSEQSER   DC    CL6' '                                          DM AUG80\nSEQWTOL  EQU   *-SEQWTO                                        DM AUG80\n         DC    X'40004020'    DESC=2,ROUTCDE=(2,11)            DM AUG80\n         SPACE ,                                               DM AUG80\nSEQCHK   DC    XL6'0'         SEQUENCE CHECK FOR VATLST        DM AUG80\n         SPACE 3\nVATIN    DCB   DDNAME=VATIN,DSORG=PS,MACRF=GL,RECFM=FB,EODAD=END\n         SPACE 3\nOCLIST   OPEN  0,MF=L\nVATGMLNG DC    A(0)           LENGTH OF VATLST GETMAIN         DM JUL80\nVATTBLE  DC    A(0)           ADDRESS OF VATLST GETMAIN        DM JUL80\nVATLAST  DC    A(0)           LAST SLOT IN VATLST GETMAIN      DM JUL80\nSAVSIZ   EQU   *-SAVEAREA\n         SPACE 2\nVATLST   DSECT\nVOLSER   DS    CL6            VOLUME SERIAL\n         DS    CL1\nMOUNT    DS    CL1            MOUNT ATTRIBUTE\nMNTRSDNT EQU   C'0'                RESIDENT                    DM JUL80\nMNTRSERV EQU   C'1'                RESERVED                    DM JUL80\n         DS    CL1\nUSE      DS    CL1            USE ATTRIBUTE\nUSESTOR  EQU   C'0'                STORAGE                     DM JUL80\nUSEPUB   EQU   C'1'                PUBLIC                      DM JUL80\nUSEPRIV  EQU   C'2'                PRIVATE                     DM JUL80\n         DS    CL1\nDEVT     DS    CL8            DEVICE TYPE\n         DS    CL1\nN        DS    CL1            MOUNT MESSAGE\n         DS    CL1\nSHRFLAG  DS    CL5            SHARE ATTRIBUTE\n* THIS IS A USER-DEFINED FIELD                                 DM JUL80\n*        OUR VALUES ARE 'UNSHR' TO TURN OFF THE SHARED         DM JUL80\n*            ATTRIBUTE IN THE UCB DEVTYPE AND 'SHARE'          DM JUL80\n*            TO TURN IT ON                                     DM JUL80\nVATLNG   EQU   *-VATLST       PORTION THAT WE WILL STORE       DM JUL80\n         DS    CL53\n         SPACE 2\nEXSA     DSECT\n         IEFUCBOB LIST=NO\n         CVT DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT400/FILE400.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT400", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}