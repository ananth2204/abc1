      ****************************************************************
      * This file is an addaption of the parts of IBM <regex.h>      *
      * header file for COBOL interface                              *
      * The intended use is for COBOL interface for the IBM, POSIX   *
      * compliant, runtime library implementation of Regular         *
      * Expressions pattern matching functions.                      *
      * in particular this is an adaptation of the __regex_t_a       *
      * structure                                                    *
      ****************************************************************
      *
      * Copyright (c) 2015 Ze'ev Atlas
      * Please refer to the LICENSE document to see all other
      * applicable copyrights.
      *
      *---------------------------------------------------------------
      *Redistribution and use in source and binary forms, with or
      *without modification, are permitted provided that the following
      *conditions are met:

      * 1. Redistributions of source code must retain the above
      * copyright notice, this list of conditions and the following
      * disclaimer.

      * 2. Redistributions in binary form must reproduce the above
      * copyright notice, this list of conditions and the following
      * disclaimer in the documentation and/or other materials
      * provided with the distribution.

      * 3. Neither the name of Ze'ev Atlas nor the names of other
      * contributors may be used to endorse or promote
      * products derived from this software without specific prior
      * written permission.

      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
      *CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      ****************************************************************
      * Note about this implementation
      * IBM goes to a long distance to create either separate regext
      * and regmatch structures, one for ASCII and one for EBCDIC, or
      * default to one of them.  After developing the EBCDIC version
      * and ASCII version for use with GNU, I've decided to develop
      * an ASCII version for IBM as well.
      * There is no need to develop a special IBM ASCII regmtch.cpy
      * since it is the same as the existing regmtcha.cpy (being POZIX
      * compliant.
      ****************************************************************

      * the REG_ENOSYS has to be 17 for function not supported
      * use the REG_ENOSYS_A instead

      * IBM implementation require that The size of regex_t must not
      * change and must be exactly 336 bytes,
       01  :PREFIX:-regex-t.

      * regcomp() data saved for regexec()
           05 :PREFIX:-nsub                 PIC 9(9) COMP-5.
      * # of subexpressions in RE pattern    */
           05 :PREFIX:-re-comp              USAGE POINTER.
      * compiled RE; freed by regfree()
           05 :PREFIX:-re-cflags            PIC S9(9) COMP-5.
      * saved cflags for regexec()
           05 :PREFIX:-re-erroff            PIC 9(9) COMP-5.
      * RE pattern error offset
           05 :PREFIX:-re-len               PIC 9(9) COMP-5.
      * # wchar_t chars in compiled pattern
           05 :PREFIX:-re-ucoll    PIC 9(4) COMP-5 OCCURS 2.
      * min/max unique collating values
           05 :PREFIX:-re-lsub              USAGE POINTER
              OCCURS 1 TO 100 DEPENDING ON UREG-SUBEXP-MAX-AP1.
      * start subexp
           05 :PREFIX:-re-esub              USAGE POINTER
              OCCURS 1 TO 100 DEPENDING ON UREG-SUBEXP-MAX-AP1.
      * end subexp
           05 :PREFIX:-re_map               USAGE POINTER.
      * map of valid pattern characters
           05 :PREFIX:-UUmaxsub            PIC S9(9) COMP-5.
      * maximum number of subs in pattern.
           05 :PREFIX:-UUunused     OCCURS 34 USAGE POINTER.
      * Extra space if ever needed

