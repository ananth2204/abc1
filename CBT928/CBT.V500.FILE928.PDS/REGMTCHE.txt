      ****************************************************************
      * This file is an addaption of the parts of IBM <regex.h>      *
      * header file for COBOL interface                              *
      * The intended use is for COBOL interface for the IBM, POSIX   *
      * compliant, runtime library implementation of Regular         *
      * Expressions pattern matching functions.                      *
      * Note: leading underscores in a name are marked with U        *
      *       other underscores converted to dashes                  *
      * in particular this is an adaptation of the __regmatch_t_e    *
      * structure                                                    *
      ****************************************************************
      *
      * Copyright (c) 2015 Ze'ev Atlas
      * Please refer to the LICENSE document to see all other
      * applicable copyrights.
      *
      *---------------------------------------------------------------
      *Redistribution and use in source and binary forms, with or
      *without modification, are permitted provided that the following
      *conditions are met:

      * 1. Redistributions of source code must retain the above
      * copyright notice, this list of conditions and the following
      * disclaimer.

      * 2. Redistributions in binary form must reproduce the above
      * copyright notice, this list of conditions and the following
      * disclaimer in the documentation and/or other materials
      * provided with the distribution.

      * 3. Neither the name of Ze'ev Atlas nor the names of other
      * contributors may be used to endorse or promote
      * products derived from this software without specific prior
      * written permission.

      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
      *CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      ****************************************************************
      * Note about this implementation
      * The original IBM go to a long distance to create either
      * separate regext and regmatch structures, one for ASCII and one
      * for EBCDIC, or default to one of them.  I went only for the
      * separate option and created one version.  Since this
      * implementation is geared towards EBCDIC one should probably
      * always use the EBCDIC version anyway.
      * There is a default value that is not used anyway but is
      * defaulted to the EBCDIC.
      ****************************************************************
      * Note, starts on level 10, to allow level 05 with OCCURS
      * substring locations - from regexec()
       10  :PREFIX:-regmatch-t.
           15 :PREFIX:-rm-so      PIC       S9(9) COMP-5 SYNCHRONIZED.
      * offset of substring
           15 :PREFIX:-rm-ss      PIC       s9(4) COMP-5.
      * Shift state at start of substring
      * The filler was added since despite the fact that the C
      * calls for short rm-ss and rm-es (i.e. S9(4) COMP-5) allocates
      * 4 bytes, either because short is not short after all or
      * because of integral boundary.
           15 :PREFIX:-rm-eo      PIC       S9(9) COMP-5 SYNCHRONIZED.
      * offset of first char after substring
           15 :PREFIX:-rm-es      PIC       S9(4) COMP-5.
      * Shift state at end of substring
