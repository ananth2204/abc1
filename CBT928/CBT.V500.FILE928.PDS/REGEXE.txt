      ****************************************************************
      * This file is an addaption of the parts of IBM <regex.h>      *
      * header file for COBOL interface                              *
      * The intended use is for COBOL interface for the IBM, POSIX   *
      * compliant, runtime library implementation of Regular       *
      * Expressions pattern matching functions.                      *
      * Note: leading underscores in a name are marked with U        *
      *       other underscores converted to dashes                  *
      * in particular this copybook is an adaptation of the constants*
      * and global variable portion of that header.                  *
      ****************************************************************
      *         !!! WARNING !!!                                      *
      * Warning: This copybook will not work with any GNU            *
      * implemetation because of an inherent difference between IBM  *
      * and GNU implementation regarding the cflags and eflags , some*
      * error codes and other constants                               *
      ****************************************************************
      *
      * Copyright (c) 2015 Ze'ev Atlas
      * Please refer to the LICENSE document to see all other
      * applicable copyrights.
      *
      *---------------------------------------------------------------
      *Redistribution and use in source and binary forms, with or
      *without modification, are permitted provided that the following
      *conditions are met:

      * 1. Redistributions of source code must retain the above
      * copyright notice, this list of conditions and the following
      * disclaimer.

      * 2. Redistributions in binary form must reproduce the above
      * copyright notice, this list of conditions and the following
      * disclaimer in the documentation and/or other materials
      * provided with the distribution.

      * 3. Neither the name of Ze'ev Atlas nor the names of other
      * contributors may be used to endorse or promote
      * products derived from this software without specific prior
      * written permission.

      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
      *CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      ****************************************************************
      * Note about this implementation
      * IBM goes to a long distance to create either separate regext
      * and regmatch structures, one for ASCII and one for EBCDIC, or
      * default to one of them.  I went only for the EBCDIC version
      * (file name end with 'e'.)
      * The ASCII version is incompatible with any IBM version and is
      * geared towards GNU COBOL usage (which probably will work for
      * Microd-Focus COBOL that in most cases shold work with what is
      * available on Windows and Linux machines.)  An IBM for ASCII
      * version would be developed if there is any (unforseeable)
      * demand.
      ****************************************************************

       01  REGEX-NUMERIC-CONSTANTS.
           05 UUUregex             PIC S9(9) COMP-5 VALUE 1.
           05 UUEDC-LE-X           PIC X(4)
                                   VALUE x'10000000'.
           05 UUEDC-LE REDEFINES UUEDC-LE-X  PIC S9(9) COMP-5.
      * size_t is unsigned PIC 9(9) COMP-5.
      * I ignore the 64 bit possibility.
      * wchar_t is unsigned PIC 9(4) COMP-5.
      * I ignore the 64 bit possibility.
      * _LC_colval_t -> ULC_colval_t is PIC 9(4) COMP-5.
      * uchar_t is PIC X.
      * mbstate_t is PIC S9(4) COMP-5.   /* multi-byte shift state */
      * __off_t -> UUoff_t is S9(9) COMP-5 /* file offset */
      * I ignore the 64 bit possibility.
      * regoff_t is S9(9) COMP-5.
           05 UUREG-SUBEXP-MAX     PIC S9(9) COMP-5 VALUE 9.
      * Maximum # of subexpressions  */
           05 UREG-SUBEXP-MAX-A    PIC S9(9) COMP-5 VALUE 23.
      * Maximum # of subexpressions - Ascii  */
           05 UREG-SUBEXP-MAX-E    PIC S9(9) COMP-5 VALUE 9.
      * Maximum # of subexpressions - EBCDIC */
           05 UREG-SUBEXP-MAX-AP1  PIC S9(9) COMP-5 VALUE 24.
      * COBOL for depending on clause.  Must be
      * UREG-SUBEXP-MAX-A + 1
           05 UREG-SUBEXP-MAX-EP1  PIC S9(9) COMP-5 VALUE 10.
      * COBOL for depending on clause.  Must be
      * UREG-SUBEXP-MAX-E + 1

      * regcomp() cflags */
           05 REG-EXTENDED-X       PIC X(4) VALUE x'00000001'.
           05 REG-EXTENDED REDEFINES REG-EXTENDED-X  PIC S9(9) COMP-5.
      * Use Extended RE syntax rules */
           05 REG-ICASE-X          PIC X(4) VALUE x'00000002'.
           05 REG-ICASE REDEFINES REG-ICASE-X        PIC S9(9) COMP-5.
      * Ignore case in match         */
           05 REG-NEWLINE-X        PIC X(4) VALUE x'00000004'.
           05 REG-NEWLINE REDEFINES REG-NEWLINE-X    PIC S9(9) COMP-5.
      * Convert <backslash><n> to <newline> */
           05 REG-NOSUB-X          PIC X(4) VALUE x'00000008'.
           05 REG-NOSUB REDEFINES REG-NOSUB-X        PIC S9(9) COMP-5.

      * regexec() eflags */
      * Important.  There seems to be a difference between the IBM and
      * the GNU implementations.  IBM caters for the possibility of
      * cflags and eflags use (overlap) the same fullword, so the
      * eflags bits are in differnt possitions than those of cflags.
      * This copybook is strictly for the NON-IBM version.
           05 REG-NOTBOL-X         PIC X(4) VALUE x'00000100'.
           05 REG-NOTBOL REDEFINES REG-NOTBOL-X      PIC S9(9) COMP-5.
      * First character not start of line   */
           05 REG-NOTEOL-X         PIC X(4) VALUE x'00000200'.
           05 REG-NOTEOL REDEFINES REG-NOTEOL-X      PIC S9(9) COMP-5.
      * Last character not end of line      */

      * Regular Expression error codes */
        05 REG-ERROR-CODE       PIC S9(9) COMP-5.
              88 REG-NOMATCH       VALUE 1.
      * RE pattern not found           */
              88 REG-BADPAT        VALUE 2.
      * Invalid Regular Expression     */
              88 REG-ECOLLATE      VALUE 3.
      * Invalid collating element      */
              88 REG-ECTYPE        VALUE 4.
      * Invalid character class        */
              88 REG-EESCAPE       VALUE 5.
      * Last character is \            */
              88 REG-ESUBREG       VALUE 6.
      * Invalid number in \digit       */
              88 REG-EBRACK        VALUE 7.
      * imbalance                      */
              88 REG-EPAREN        VALUE 8.
      * \( \) or () imbalance          */
              88 REG-EBRACE        VALUE 9.
      * \{ \} or { } imbalance         */
              88 REG-BADBR         VALUE 10.
      * Invalid \{ \} range exp        */
              88 REG-ERANGE        VALUE 11.
      * Invalid range exp endpoint     */
              88 REG-ESPACE        VALUE 12.
      * Out of memory                  */
              88 REG-BADRPT        VALUE 13.
      * ?*+ not preceded by valid RE   */
      * These error codes are for IBM compatibility and are defferent
      * then the GNU implementation
              88 REG-ECHAR         VALUE 14.
      * invalid multibyte character    */
              88 REG-EBOL          VALUE 15.
      * .. anchor and not BOL           */
              88 REG-EEOL          VALUE 16.
      * $ anchor and not EOL           */
              88 REG-ENOSYS-A      VALUE 17.
      * function not supported */
              88 REG-ENOSYS-E      VALUE 134.
      * function not supported */
              88 REG-ENOSYS        VALUE 134.
      * function not supported */
      * Note: default to the EBCDIC value since this is an EBCDIC
      * oriented implementation

      *int    regcomp(regex_t *restrict, const char *restrict, int);
      *size_t regerror(int, const regex_t *restrict, char *restrict, size_t);
      *int    regexec(const regex_t *restrict, const char *restrict, size_t,
      *           regmatch_t.restrict., int);
      *void   regfree(regex_t *);
