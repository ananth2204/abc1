      ****************************************************************
      * This file is an implementation of regex.h as defined in IEEE *
      * Std 1003.1, 2004 Edition to work with GNU COBOL.             *
      * The intended use is for GNU COBOL interface for the GNU,     *
      * POSIX compliant, runtime library implementation of Regular   *
      * Expressions pattern matching functions.                      *
      * Note: leading underscores in a name are marked with U        *
      *       other underscores converted to dashes                  *
      * in particular this copybook is an adaptation of the structure*
      * for the regmatch_t portion of  of that header.               *
      ****************************************************************
      *         !!! WARNING !!!                                      *
      * Warning: This copybook will not work with any IBM            *
      * implemetation because of an inherent difference between IBM  *
      * and GNU implementation regarding the cflags and eflags , some*
      * error codes and other constants                               *
      ****************************************************************
      *
      * Copyright (c) 2015 Ze'ev Atlas
      * Please refer to the LICENSE document to see all other
      * applicable copyrights.
      *
      *---------------------------------------------------------------
      *Redistribution and use in source and binary forms, with or
      *without modification, are permitted provided that the following
      *conditions are met:

      * 1. Redistributions of source code must retain the above
      * copyright notice, this list of conditions and the following
      * disclaimer.

      * 2. Redistributions in binary form must reproduce the above
      * copyright notice, this list of conditions and the following
      * disclaimer in the documentation and/or other materials
      * provided with the distribution.

      * 3. Neither the name of Ze'ev Atlas nor the names of other
      * contributors may be used to endorse or promote
      * products derived from this software without specific prior
      * written permission.

      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
      *CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      ****************************************************************
      * The GNU dudes did a lot of their own implementation.  For
      * COBOL usage we'll keep it strictly POSIX compliant and
      * ignore the GNU internals
      ****************************************************************

      * Type for byte offsets within the string.  Mandated by POSIX.
      * regoff_t is S9(9) COMP-5.
      * POSIX specification for registers.  POSIX uses an array of
      * structures, and not a structure of arrays as the GNU does.
       10  :PREFIX:-regmatch-t.
           15 :PREFIX:-rm-so      PIC       S9(9) COMP-5 SYNCHRONIZED.
      * offset of substring
           15 :PREFIX:-rm-eo      PIC       S9(9) COMP-5 SYNCHRONIZED.
      * offset of first char after substring
