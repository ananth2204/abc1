      ****************************************************************
      * This file is an implementation of regex.h as defined in IEEE *
      * Std 1003.1, 2004 Edition to work with GNU COBOL.             *
      * The intended use is for GNU COBOL interface for the GNU,     *
      * POSIX compliant, runtime library implementation of Regular   *
      * Expressions pattern matching functions.                      *
      * Note: leading underscores in a name are marked with U        *
      *       other underscores converted to dashes                  *
      * in particular this copybook is an adaptation of the constants*
      * and global variable portion of that header.                  *
      ****************************************************************
      *         !!! WARNING !!!                                      *
      * Warning: This copybook will not work with any IBM            *
      * implemetation because of an inherent difference between IBM  *
      * and GNU implementation regarding the cflags and eflags , some*
      * error codes and other constants                              *
      ****************************************************************
      *
      * Copyright (c) 2015 Ze'ev Atlas
      * Please refer to the LICENSE document to see all other
      * applicable copyrights.
      *
      *---------------------------------------------------------------
      *Redistribution and use in source and binary forms, with or
      *without modification, are permitted provided that the following
      *conditions are met:

      * 1. Redistributions of source code must retain the above
      * copyright notice, this list of conditions and the following
      * disclaimer.

      * 2. Redistributions in binary form must reproduce the above
      * copyright notice, this list of conditions and the following
      * disclaimer in the documentation and/or other materials
      * provided with the distribution.

      * 3. Neither the name of Ze'ev Atlas nor the names of other
      * contributors may be used to endorse or promote
      * products derived from this software without specific prior
      * written permission.

      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
      *CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      ****************************************************************
       01  REGEX-NUMERIC-CONSTANTS.
      * size_t is unsigned PIC 9(9) COMP-5.
      * wchar_t is unsigned PIC 9(4) COMP-5.
      * uchar_t is PIC X.
      * __off_t is S9(9) COMP-5 file offset
      * Type for byte offsets within the string.
      * regoff_t is S9(9) COMP-5.

      * regcomp() cflags
           05 REG-EXTENDED-X       PIC X(4) VALUE x'00000001'.
           05 REG-EXTENDED REDEFINES REG-EXTENDED-X  PIC S9(9) COMP-5.
      * Use Extended RE syntax rules
           05 REG-ICASE-X          PIC X(4) VALUE x'00000002'.
           05 REG-ICASE REDEFINES REG-ICASE-X        PIC S9(9) COMP-5.
      * Ignore case in match
           05 REG-NEWLINE-X        PIC X(4) VALUE x'00000004'.
           05 REG-NEWLINE REDEFINES REG-NEWLINE-X    PIC S9(9) COMP-5.
      * Convert <backslash><n> to <newline>
           05 REG-NOSUB-X          PIC X(4) VALUE x'00000008'.
           05 REG-NOSUB REDEFINES REG-NOSUB-X        PIC S9(9) COMP-5.

      * regexec() eflags
      * Important.  There seems to be a difference between the IBM and
      * the GNU implementations.  IBM caters for the possibility of
      * cflags and eflags use (overlap) the same fullword, so the
      * eflags bits are in differnt possitions than those of cflags.
      * This copybook is strictly for the NON-IBM version.
           05 REG-NOTBOL-X         PIC X(4) VALUE x'00000001'.
           05 REG-NOTBOL REDEFINES REG-NOTBOL-X      PIC S9(9) COMP-5.
      * First character not start of line
           05 REG-NOTEOL-X         PIC X(4) VALUE x'00000002'.
           05 REG-NOTEOL REDEFINES REG-NOTEOL-X      PIC S9(9) COMP-5.
      * Last character not end of line
      * The below bit was added to cater for GNU users
      * Use PMATCH.0. to delimit the start and end of the search in
      * the buffer.  This bit is not defined in the IBM version.
           05 REG-STARTEND-X         PIC X(4) VALUE x'00000004'.
           05 REG-STARTEND REDEFINES REG-STARTEND-X PIC S9(9) COMP-5.

      * Regular Expression error codes
        05 REG-ERROR-CODE       PIC S9(9) COMP-5.
              88 REG-NOERROR       VALUE 0.
      * Success.
              88 REG-NOMATCH       VALUE 1.
      * RE pattern not found
              88 REG-BADPAT        VALUE 2.
      * Invalid Regular Expression
              88 REG-ECOLLATE      VALUE 3.
      * Invalid collating element
              88 REG-ECTYPE        VALUE 4.
      * Invalid character class
              88 REG-EESCAPE       VALUE 5.
      * Last character is \
              88 REG-ESUBREG       VALUE 6.
      * Invalid number in \digit
              88 REG-EBRACK        VALUE 7.
      * Unmatched left bracket.
              88 REG-EPAREN        VALUE 8.
      * \( \) or () imbalance
              88 REG-EBRACE        VALUE 9.
      * \{ \} or { } imbalance
              88 REG-BADBR         VALUE 10.
      * Invalid \{ \} range exp
              88 REG-ERANGE        VALUE 11.
      * Invalid range exp endpoint
              88 REG-ESPACE        VALUE 12.
      * Out of memory
              88 REG-BADRPT        VALUE 13.
      * ?*+ not preceded by valid RE
      * These error codes are for GNU compatibility and are defferent
      * then the IBM implementation
              88 REG-EEND          VALUE 14.
      * Premature end.
              88 REG-ESIZE         VALUE 15.
      * Compiled pattern bigger than 2.16 bytes.
              88 REG-ERPAREN       VALUE 16.
      * Unmatched ) or \); not returned from
      * function not supported
      * Another incompatibility with the IBM implementation
              88 REG-ENOSYS        VALUE -1.

      * POSIX function definitions
      * int regcomp(regex_t *restrict preg, const char *restrict pattern,
      *            int cflags);
      * size_t regerror(int errcode, const regex_t *restrict preg,
      *            char *restrict errbuf, size_t errbuf_size);
      * int regexec(const regex_t *restrict preg, const char *restrict string,
      *            size_t nmatch, regmatch_t pmatch.restrict., int eflags);
      * void regfree(regex_t *preg);

      * Maximum number of duplicates an interval can allow. (GNU)
           05 RE-DUP-MAX-X                 PIC x(4)
                                           VALUE X'00007FFF'.
           05 RE-DUP-MAX REDEFINES RE-DUP-MAX-X PIC 9(9) COMP-5.
      * Number of registers. (GNU)
           05 RE_NREGS             PIC 9(9) COMP-5 VALUE 30.

