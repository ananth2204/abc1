      ****************************************************************
      * This file is an implementation of regex.h as defined in IEEE *
      * Std 1003.1, 2004 Edition to work with GNU COBOL.             *
      * The intended use is for GNU COBOL interface for the GNU,     *
      * POSIX compliant, runtime library implementation of Regular   *
      * Expressions pattern matching functions.                      *
      * Note: leading underscores in a name are marked with U        *
      *       other underscores converted to dashes                  *
      * in particular this copybook is an adaptation of the structure*
      * for the regex_t portion of  of that header.                  *
      ****************************************************************
      *         !!! WARNING !!!                                      *
      * Warning: This copybook will not work with any IBM            *
      * implemetation because of an inherent difference between IBM  *
      * and GNU implementation regarding the cflags and eflags , some*
      * error codes and other constants                               *
      ****************************************************************
      *
      * Copyright (c) 2015 Ze'ev Atlas
      * Please refer to the LICENSE document to see all other
      * applicable copyrights.
      *
      *---------------------------------------------------------------
      *Redistribution and use in source and binary forms, with or
      *without modification, are permitted provided that the following
      *conditions are met:

      * 1. Redistributions of source code must retain the above
      * copyright notice, this list of conditions and the following
      * disclaimer.

      * 2. Redistributions in binary form must reproduce the above
      * copyright notice, this list of conditions and the following
      * disclaimer in the documentation and/or other materials
      * provided with the distribution.

      * 3. Neither the name of Ze'ev Atlas nor the names of other
      * contributors may be used to endorse or promote
      * products derived from this software without specific prior
      * written permission.

      *THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
      *CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
      *INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
      *MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
      *DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
      *CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
      *SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
      *NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
      *LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
      *HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
      *CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
      *OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
      *EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      ****************************************************************
      * A data structure that represents a compiled pattern in the GNU
      * implementation.  Set fields 'buffer', 'allocated', 'fastmap',
      * 'translate', and 'no_sub' before compiling the pattern.
      * After the pattern has been compiled, only the 're_nsub' field
      * is available.  All other fields are for internal use.

      * reg_syntax_t is PIC S9(9) COMP-5.

       01  :PREFIX:-regex-t.
           05 :PREFIX:-buffer               USAGE POINTER.
      * Pointer to the compiled pattern.
           05 :PREFIX:-allocated            PIC S9(18) COMP-5.
      * Number of bytes to which 'buffer' points.
           05 :PREFIX:-used                 PIC S9(18) COMP-5.
      * Number of bytes actually used in `buffer'.
           05 :PREFIX:-syntax               PIC S9(18) COMP-5.
      * Syntax setting with which the pattern was compiled.
           05 :PREFIX:-fastmap              USAGE POINTER.
      * Pointer to a fastmap, if any, otherwise zero.  re_search
      * uses the fastmap, if there is one, to skip over
      * impossible starting points for matches.
           05 :PREFIX:-translate            USAGE POINTER.
      * translate table applied to all characters before comparing,
      * or zero for no translation.  The translation is applied to
      * pattern in compile time and to thw string in match time.
           05 :PREFIX:-re-nsub               PIC 9(18) COMP-5.
      * Number of subexpressions found by the compiler.
           05 :PREFIX:-can-be-null           PIC x.
      * Zero if pattern cannot match the empty string, one if could.
      * used only in 're_search_2', to decide whether to use the
      * fastmap.  Yet another GNU implementation peculiartity.
           05 :PREFIX:-regs-allocated        PIC xx.
      * Allocate space in the of regmatch_t structure for 'max
      * (RE_NREGS, re_nsub + 1)' groups.
           05 :PREFIX:-fastmap-accurate      PIC x.
      * Set to zero when `regex_compile' compiles a pattern; set to
      * one by `re_compile_fastmap' if it updates the fastmap.
           05 :PREFIX:-no-sub                PIC x.
      * When set, `re_match_2' does not return information about
      * subexpressions.
           05 :PREFIX:-not-bol               PIC x.
      * When set, a beginning-of-line anchor doesn't match at the
      * beginning of the string.
           05 :PREFIX:-not-eol               PIC x.
      * Similarly for an end-of-line anchor.
           05 :PREFIX:-newline-anchor        PIC x.
      * If true, an anchor at a newline matches.
      *    05 FILLER                         PIC X.
