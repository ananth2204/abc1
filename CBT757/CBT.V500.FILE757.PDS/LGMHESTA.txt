***********************************************************************
*LLL      GGGGGGG M     M H     H EEEEEEE SSSSSSS TTTTTTTTT  AAAAAAA  *
* L       G     G MM   MM H     H E       S     S T   T   T A       A *
* L       G       M M M M H     H E       S           T     A       A *
* L       G  GGGG M  M  M HHHHHHH EEEEE   SSSSSSS     T     AAAAAAAAA *
* L       G     G M     M H     H E             S     T     A       A *
* L       G     G M     M H     H E       S     S     T     A       A *
* LLLLLLL GGGGGGG M     M H     H EEEEEEE SSSSSSS     T     A       A *
***********************************************************************
*                                                                     *
***********************************************************************
*                                                                     *
* NAME:            LGMHESTA                                           *
*                                                                     *
* TYPE:            Assembler Source (High Level Assembler)            *
*                                                                     *
* FUNCTION:        Logger Services Abend Recovery Exit                *
*                                                                     *
* INPUT REGS:      R0 =>  Value to Indicate SWDA status               *
*                  R1 =>  Address of System Diagnostic Work Area      *
*                  R2 =>  Address of the LGRWK2II Area Mapped by the  *
*                         LGCPLSWA CopyBook.                          *
*                  R13=>  Address of a Save Area                      *
*                  R14=>  Return Address to RTM                       *
*                                                                     *
* OUTPUT REGS:     R15 => Return Code                                 *
*                                                                     *
* ATTRIBUTES:      REENTRANT, REUSABLE                                *
*                  AMODE 64, RMODE ANY, AC=0                          *
*                                                                     *
* DEPENDENCIES:    Copybooks LGCPLOGR and LGCPLSWA                    *
*                                                                     *
* RESTRICTIONS:    z/Architecture Mode                                *
*                                                                     *
* REGISTER USAGE:  R15, Entry Point Address                           *
*                  R14, Return Address                                *
*                  R13, (RLCA) Save Area & Dynamic Area               *
*                  R12, (RBASE1) First Program Base Register          *
*                  R11, (RBASE2) Second Program Base Register         *
*                  R10, (RCOM) Common Area                            *
*                  R9,  (RLGW) LGRWK2II Area (From LGCPLSWA CopyBook) *
*                  R8,  (RSDW) SDWA Dsect Area                        *
*                  R0-R7, General Work registers                      *
*                                                                     *
* CALLED PROGRAMS: None                                               *
*                                                                     *
* RETURN CODES:    00 - Success                                       *
*                                                                     *
* CHANGE ACTIVITY:                                                    *
*                                                                     *
*  Reason  Release   Date    Description                              *
* -------- ------- -------- ------------------------------------------*
* Change   V1R1M17 20120721 Added new SETRP with RUB to Suppress @@KHF*
*                           Dump and Return Information on Abend @@KHF*
*                           in the IARV64 Virtual Storage Service@@KHF*
* Update   V1R1M16 20120127 Update VV.RR.MM stats for Fix Pack 16@@KHF*
* Fix      V1R1M15 20110930 Not Checking ECVT ECVTPSEQ to Ensure @@KHF*
*                           Proper Redirection When 64-bit.      @@KHF*
* Update   V1R1M14 20110423 Update VV.RR.MM stats for Fix Pack 14@@KHF*
* Fix      V1R1M13 20110108 Verify if Regs/PSW Available in SDWA,@@KHF*
*                           And If Our ESTAE 1st to get Control. @@KHF*
* Update   V1R1M12 20100306 Update VV.RR.MM stats for Fix Pack 12@@KHF*
* Fix      V1R1M11 20091023 S0C4-11 when 64-bit redirection with @@KHF*
*                           z/OS V1R7. Set minimum to z/OS V1R8. @@KHF*
* Update   V1R1M10 20090523 Update VV.RR.MM stats for Fix Pack 10@@KHF*
* Update   V1R1M09 20090110 Updated VV.RR.MM stats for Fix Pack 9@@KHF*
* Update   V1R1M08 20081010 Updated VV.RR.MM stats for Fix Pack 8@@KHF*
* Update   V1R1M07 20080524 Updated VV.RR.MM stats for Fix Pack 7@@KHF*
* Update   V1R1M06 20080223 Updated VV.RR.MM stats for Fix Pack 6@@KHF*
* Update   V1R1M05 20080112 Updated VV.RR.MM stats for Fix Pack 5@@KHF*
* Update   V1R1M04 20071104 Updated VV.RR.MM stats for Fix Pack 4@@KHF*
* Update   V1R1M03 20070701 Updated VV.RR.MM stats for Fix Pack 3@@KHF*
* Update   V1R1M02 20070610 Updated VV.RR.MM stats for Fix Pack 2@@KHF*
* Update   V1R1M01 20070512 Updated VV.RR.MM stats for Fix Pack 1@@KHF*
* (New)    V1R1M00 20070420 First Release (@CBT-Tape)            @@KHF*
*                                                                     *
***********************************************************************
*
*+-------------------------------------------------------------------+*
*|  D e f i n e   a n d   S e t   P r o g r a m   V a r i a b l e s  |*
*+-------------------------------------------------------------------+*
*
         PRINT NOGEN
         LCLC  &KXHVER,&KXHREL,&KXHMOD Version/Release/Modlvl
         LCLC  &KXHVRM             Set for Program Version/Release/Mod
         LCLC  &RELDATE            Indicate Program Release Date
         LCLC  &AMODE              Addressing Mode of Program
         LCLC  &RMODE              Resident Mode of Program
&KXHVER  SETC  'V1'                Indicate the Program Version Number
&KXHREL  SETC  'R1'                Indicate the Program Release Number
&KXHMOD  SETC  'M17'               Indicate the Pgm Modification Level
&KXHVRM  SETC  '&KXHVER.&KXHREL..&KXHMOD'  Set for Version/Release/Mod
&RELDATE SETC  '&SYSDATC'          Assemble (Program Release) Date
&CPYRITE SETC  '2008,2012'         Indicate the Copyright Year
&MODID   SETC  'LGMHESTA'          Set the Program Module Identifier
&AMODE   SETC  '64'                Set Default Program Addressing Mode
&RMODE   SETC  'ANY'               Set Default Program Residence Mode
*
*+-------------------------------------------------------------------+*
*|   D e f i n e   G e n e r i c   R e g i s t e r   E q u a t e s   |*
*+-------------------------------------------------------------------+*
*
R0       EQU   0                   Define Program Register 0 Equate
R1       EQU   1                   Define Program Register 1 Equate
R2       EQU   2                   Define Program Register 2 Equate
R3       EQU   3                   Define Program Register 3 Equate
R4       EQU   4                   Define Program Register 4 Equate
R5       EQU   5                   Define Program Register 5 Equate
R6       EQU   6                   Define Program Register 6 Equate
R7       EQU   7                   Define Program Register 7 Equate
R8       EQU   8                   Define Program Register 8 Equate
R9       EQU   9                   Define Program Register 9 Equate
R10      EQU   10                  Define Program Register 10 Equate
R11      EQU   11                  Define Program Register 11 Equate
R12      EQU   12                  Define Program Register 12 Equate
R13      EQU   13                  Define Program Register 13 Equate
R14      EQU   14                  Define Program Register 14 Equate
R15      EQU   15                  Define Program Register 15 Equate
*
RLCA     EQU   13                  Establish Caller's LCA Address (R13)
RBASE1   EQU   12                  Establish Program Base Register 12
RBASE2   EQU   11                  Establish Program Base Register 11
RCOM     EQU   10                  Address of a Common Area
RLGW     EQU   9                   Address of Associated LGRWK2II Area
RSDW     EQU   8                   System Diagnostic Work Area (SDWA)
         EJECT  ,
***********************************************************************
*+-------------------------------------------------------------------+*
*|          MM       MM     AAAAA    IIIIIII   NNN     NNN           |*
*|          M M     M M    A     A      I       N N     N            |*
*|          M  M   M  M    A     A      I       N  N    N            |*
*|          M   M M   M    AAAAAAA      I       N   N   N            |*
*|          M    M    M    A     A      I       N    N  N            |*
*|          M         M    A     A      I       N     N N            |*
*|         MMM       MMM   A     A   IIIIIII   NNN     NN            |*
*+-------------------------------------------------------------------+*
***********************************************************************
*+-------------------------------------------------------------------+*
*|    LGMHESTA - (Entry Point)                                       |*
*+-------------------------------------------------------------------+*
* PROGRAM NAME:    LGMHESTA                                           *
*                                                                     *
* FUNCTION:        Logger Service ESTAEX Recovery Exit                *
*                                                                     *
*                  This AMODE64 ESTAEX exit program is entered upon a *
*                  task abnormally terminating (Abend). When a task   *
*                  encounters a problem and the task has terminated   *
*                  abnormally, the Recovery Termination Manager will  *
*                  receive control, and during abnormal termination   *
*                  the z/OS Recovery Termination Manager will route   *
*                  control to this program (LGMHESTA) which is the    *
*                  logger service recovery exit routine. The Specify  *
*                  Task Abnormal Exit Extended (ESTAEX) macro was     *
*                  issued previously by the Logger Service program    *
*                  'LGMHLRCI' which defined this exit routine named   *
*                  'LGMHESTA' for the current program environment.    *
*                  When program 'LGMHLRCI' previously issued the      *
*                  ESTAEX macro, the Recovery Termination Manager     *
*                  created an SCB (STAE Control Block) containing a   *
*                  pointer to this 'LGMHESTA' exit routine, the       *
*                  processing options, and parameter list pointers.   *
*                  The addresses of the SCB's are chained on a LIFO   *
*                  stack which is anchored by the TCBSTABB field off  *
*                  the TCB.                                           *
*                                                                     *
*                  If a task abends causing the Recovery Termination  *
*                  Manager to receive control, the RTM will attempt to*
*                  get dynamic storage for a work area called the     *
*                  System Diagnostic Work Area (SDWA) which is the    *
*                  control block used for any communications between  *
*                  the Recovery Termination Manager and this ESTAEX   *
*                  recovery exit routine. This ESTAEX recovery exit   *
*                  will extract information about the abend from the  *
*                  SDWA. First upon entry to this Logger recovery     *
*                  exit routine, Register 0 will be checked to verify *
*                  if the RTM was able to create a SDWA. If no SDWA   *
*                  exists, the likely situation would be insufficient *
*                  storage as the result un-used virtual storage      *
*                  being accumulated and not being released. If no    *
*                  SDWA exists, then this Logger Service recovery exit*
*                  routine will return control back to the RTM with an*
*                  indication to terminate. If a SDWA does exits, then*
*                  this recovery exit will attempt to stop the abend  *
*                  and retry.                                         *
*                                                                     *
*                  If a retry address exists in the LGWRETRY field    *
*                  (non-zero) of area LGRWK2II in copybook LGCPLOGR,  *
*                  then the retry routine specified by the abending   *
*                  program will be called to attempt a recovery from  *
*                  the abend in order for normal program processing to*
*                  continue. The dump option bits will be checked to  *
*                  determine if a dump will be suppressed in order to *
*                  prevent recursive dump processing from filling the *
*                  Spool. If retry processing allows for dumps, a     *
*                  count is maintained for the number of dumps taken  *
*                  and if the count is exceeded, then the task will   *
*                  terminate. When Logger service routines are        *
*                  performing work on behalf of a user program, Logger*
*                  services will set a retry address to use ESTAE     *
*                  protection to prevent an abend in Logger from      *
*                  terminating the user program. Logger services will *
*                  clear the retry address to zeros when done with    *
*                  processing a Logpoint in the user's program.       *
*                                                                     *
*                  If a retry address does not exist in the LGWRETRY  *
*                  field (LGWRETRY is zero) in the Logger Service area*
*                  (LGRWK2II), then this Logger ESTAEX exit program   *
*                  will attempt to perform abend recovery only so far *
*                  as being able to call the Logger retry program     *
*                  'LGMHRTRY' in order to extract and print basic     *
*                  diagnostic information to the //LGRECOUT DD to     *
*                  assist with problem determination. Therefore in    *
*                  those circumstances where a retry address is not   *
*                  specified, the LGMHRTRY program will be invoked    *
*                  to process diagnostic information, the abend will  *
*                  be allowed to percolate, and the task will end.    *
*                                                                     *
*                  Upon entry to this program, when GPR 0 contains any*
*                  value other than 12, an SDWA is present, its       *
*                  address will be in GPR 1, and GPR 2 will contain   *
*                  the 64-bit address of the parameter area specified *
*                  on the PARAM parameter on the ESTAEX established by*
*                  Logger Services program LGMHLRCI. This address in  *
*                  R2 will point to the LGRWRK2II Logger Services area*
*                  mapped by the LGCPLSWA copybook. When the Recovery *
*                  Termination Manager provides an SDWA, the RTM also *
*                  provides a register save area whose address is in  *
*                  register 13.                                       *
*                                                                     *
* INPUT REGS:      R0 =>  Value to Indicate SWDA status               *
*                  R1 =>  Address of System Diagnostic Work Area      *
*                  R2 =>  Address of the LGRWK2II Area Mapped by the  *
*                         LGCPLSWA CopyBook.                          *
*                  R13=>  Address of a Save Area                      *
*                  R14=>  Return Address to RTM                       *
*                                                                     *
* OUTPUT REGS:     R15 => Used to Indicate Percolation                *
*                                                                     *
* ATTRIBUTES:      REENTRANT, REUSABLE                                *
*                  AMODE 64, RMODE ANY, AC=0                          *
*                                                                     *
* CALLED PROGRAMS: None (Return to RTM)                               *
*                                                                     *
* RETURN CODES:    N/A                                                *
*                                                                     *
***********************************************************************
*
&MODID   RSECT *                   Main Read Only Control Section Name
&MODID   AMODE &AMODE              Address Mode  - &AMODE
&MODID   RMODE &RMODE              Resident Mode - &RMODE
         CNOP  0,8                 Ensure Proper Boundary Alignment
         BRAS  R15,*+8             Branch Around the Static Data Area
         DC    A(*+4)              Establish Static Area with Address
KXHA0003 L     R15,0(R15,R0)       Set up to Address of Static Data
         USING *-4,R15             Set Program Temporary Base Register
         BRU   DUMMYPNT            Branch Past the Literal Area
         DC    C'&MODID'           Set Eyecatcher for the Program Name
         DC    C' (LOGGRASM-&KXHVRM)' Program Version.Rlse.ModLvl
         DC    C' &SYSDATC &SYSTIME ' Set Assemble Date & Time Stamp
         DC    C' Copyright &CPYRITE (C)' Establish Copyright Notice
         DC    C' LOGGRASM Information Logger for Assembler'
       SPLEVEL SET=6               Set for OS/390 R2 or Above (z/OS+)
         DC    50S(*)              Define a Program Patch Area
*
*+-------------------------------------------------------------------+*
*|    Verify If System Diagnostic Work Area Is Available             |*
*+-------------------------------------------------------------------+*
*|  If no SDWA is available, then allow the abend to continue and do |*
*|  not attempt retry. If an SDWA is available, then check for the   |*
*|  version of the SDWA. If version cannot be validated, then allow  |*
*|  abend to continue. If a valid version id available, continue with|*
*|  recovery processing.                                             |*
*+-------------------------------------------------------------------+*
*
DUMMYPNT DS    0H
         CHI   R0,(12)             Have a System Diagnostic Work Area?
         BRE   LGES5000            No  => Then Percolate the Abend
         CLC   SDWAVERF-SDWA(L'SDWAVERF,R1),=X'FFFF'  Valid Version Id?
         BRNE  LGES5000            No  => Then Percolate the Abend
         CLC   SDWAVID-SDWA(L'SDWAVID,R1),=Y(SDWAVS10) Is SDWA at 7720?
         BRL   LGES1000            No  => Then RTM Level Not All 64-Bit
         LLGT  R3,CVTPTR           Absolute Address of Pointer to CVT
         USING ECVT,R3             Addressability to the Extended CVT
         LLGT  R3,CVTECVT-CVT(,R3) Get Address to the Extended CVT Area
         CLC   ECVTPSEQ,=XL4'01011000' Is z/OS Version Lvl Above V1R10?
         BRNH  LGES1000            No  => Branch For RTM Compatibility
         BRU   LGES3000            Yes => RTM, ESTAEX, SETRP in Synch
         DROP  R15,R3              Remove Listed Reg as Temp Base Reg
*
***********************************************************************
*+-------------------------------------------------------------------+*
*|Perform Recovery Exit Processing When z/OS V1R10 (HBB7750) or Lower|*
*+-------------------------------------------------------------------+*
***********************************************************************
*
LGES1000 DS    0H
         STM   R14,R12,LCASA_R14-LCASAVE(R13) Save Caller's Registers
         LLGTR RBASE1,R15          R15 has Our Entry Point Address
         LA    RBASE2,2048(,RBASE1)  Load 2nd Base w/ Addressable Range
         LA    RBASE2,2048(,RBASE2)  Add to Preceding Address Range
         LLGTR RBASE2,RBASE2       Ensure Base Reg Has a Good Address
         USING &MODID+(KXHA0003-LGMHESTA),RBASE1,RBASE2   Set Base Regs
         USING LGRWK2II,RLGW       Establish LGRWK2II Addressability
         USING SDWA,RSDW           Establish SDWA Addressability
LGES1100 DS    0H
         LG    RLGW,0(,R2)         Get the LGRWK2II Logger Area Address
         LLGTR RSDW,R1             Get System Diagnostic Work Area Addr
         LA    R15,LGWSAVE@        Get the Address of Our Save Area
         ST    R15,LCASA_FWD-LCASAVE(,R13) Establish Forward Chain Pntr
         ST    R13,LCASA_BCK-LCASAVE(,R15) Establish Back Chain Pointer
         LLGTR R13,R15             Save Area is Now Chained In
*
*+-------------------------------------------------------------------+*
*|          Verify If A Retry Effort Should Be Attempted             |*
*+-------------------------------------------------------------------+*
*
LGES1200 DS    0H
         TM    SDWAERRD,SDWACLUP   Recovery Only and Retry Not Allowed?
         BRNZ  LGES2500            Yes => Then Do Not Attempt to Retry
         TM    SDWAERRD,SDWARPIV   Have Regs and PSW at Time of Error?
         BRNZ  LGES2500            No  => Then Do Not Attempt to Retry
         TM    SDWAERRB,SDWAPERC   Our ESTAE First One to Get Control?
         BRNZ  LGES2500            No  => Then Do Not Attempt to Retry
         TM    LGWFLAG,LGWSDUMP    Retry Request with Dump Suppression?
         BRO   LGES1300            Yes => Branch to Check for Recovery
         LLGH  R14,LGWRTCNT        Obtain the Previous Retry Count
         LA    R14,1(,R14)         Increment the Current Retry Counter
         STH   R14,LGWRTCNT        Set the New Recovery Retry Count
         CHI   R14,(3)             More than 3 Abends In This Trap?
         BRNL  LGES2300            Yes => Forget Recovery, Just Abend
LGES1300 DS    0H
         OC    LGWRETRY,LGWRETRY   A Recovery Retry Address Specified?
         BRZ   LGES2300            No  => Branch to Continue With Abend
         TM    LGWFLAG,LGWSDUMP    Retry Request with Dump Suppression?
         BRO   LGES1400            Yes => Attempt Retry & Suppress Dump
         BRU   LGES1800            No  => Attempt Retry and Write Dump
*
*+-------------------------------------------------------------------+*
*|  Process Request to Perform Abend Recovery. This ESTAEX Exit      |*
*|  Recovery Program Routine Will Suppress The Dump and Return to    |*
*|  the Retry Address to Allow Program Execution to Continue.        |*
*+-------------------------------------------------------------------+*
*
LGES1400 DS    0H
         TM    LGWFLAG,LGW@SRSV    Retry for Abend in a System Service?
         BRO   LGES1600            Yes => Attempt Retry on System Abend
         LLGFR R1,RSDW             System Diagnostic Work Area to SETRP
         LLGT  R2,LGWRETRY         Obtain the Retry Routine Address
         LLGT  R13,LCASA_BCK-LCASAVE(,R13) ..Restore Caller's Save Area
LGES1500 DS    0H
         SETRP WKAREA=(R1),        Address of the System Diag Wrk Area X
               RC=4,               Indicate Retry Using Retry Address  X
               DUMP=NO,            Indicate No Storage Dump to Be TakenX
               REGS=(14,12),       Restore the Caller's Registers      X
               RETADDR=(R2),       Address of the Retry Routine        X
               RETREGS=64,         Restore Regs From SDWAG64 of SDWA   X
               FRESDWA=YES,        Free SDWA Area Before Entry to RetryX
               RECORD=IGNORE,      Previous Record Option is Unchanged X
               RETRYAMODE=64       Retry Routine Receives Control 64Bit
*
*+-------------------------------------------------------------------+*
*|  Process request to perform abend recovery. This ESTAEX Exit      |*
*|  Recovery Program Routine will suppress the dump, prepare the     |*
*|  register update block to load GPRs 2 and 3, and then return to   |*
*|  the retry address to allow user program execution to continue.   |*
*|  In this instance, the retry address will be in the LGMHLB64      |*
*|  program where the abend occurred. The Register Update Block (RUB)|*
*|  is used to ensure that the Completion Code and the Reason Code   |*
*|  information from an abend which occurred in IARV64 services is   |*
*|  preserved and made available to the LGMHLB64 program.            |*
*+-------------------------------------------------------------------+*
*
LGES1600 DS    0H
         SLGR  R0,R0               For Insert of System Completion Code
         SLGR  R15,R15             For Insert of Abend Reason Code
         XC    LGWSDPFX(LGWSDWAL),LGWSDPFX  Clear Register Update Block
         ICM   R0,B'0111',SDWACMPC Get the System Completion Code
         TM    SDWACMPF,SDWARCF    Do We Have a Valid Reason Code?
         BRZ   LGES1700            No  => Do Not Attempt to Process One
         LLGT  R15,SDWAXPAD        Addr of SDWA Extension Pointers Area
         ICM   R15,B'1111',SDWASRVP-SDWAPTRS(R15) A SDWA 1st Extension?
         BRZ   LGES1700            No  => Process for Abend Recovery
         LLGF  R15,SDWACRC-SDWARC1(,R15) Get Reason Code With Our Abend
         LLILL R1,X'3000'          Mask for SDWA Register-Update-Block
         STH   R1,LGWSDPFX         ESTAE Exit Register-Updte-Blk Prefix
         ST    R0,LGWSDWA@         Register Update Info for Register 2
         ST    R15,LGWSDWA@+4      Register Update Info for Register 3
LGES1700 DS    0H
         LLGFR R1,RSDW             System Diagnostic Work Area to SETRP
         LLGT  R2,LGWRETRY         Obtain the Retry Routine Address
         LG    R13,LCAF64BCK-LCASAVE(,R13) ..Restore Caller's Save Area
         SETRP WKAREA=(R1),        Address of the System Diag Wrk Area X
               RC=4,               Indicate Retry Using Retry Address  X
               DUMP=NO,            Indicate No Storage Dump to be TakenX
               REGS=(14,12),       Restore the Caller's Registers      X
               RETADDR=(R2),       Address of the Retry Routine        X
               RETREGS=YES,        Restore Regs From SDWASRSV of SDWA  X
               RUB=LGWSDPFX,       Set Register Update Block for SDWA  X
               FRESDWA=YES,        Free SDWA Area Before Entry to RetryX
               RECORD=IGNORE,      Previous Record Option is Unchanged X
               RETRYAMODE=64       Retry Routine Receives Control 64Bit
*
*+-------------------------------------------------------------------+*
*|  Process Request to Perform Abend Recovery. This ESTAEX Exit      |*
*|  Recovery Program Routine Will Allow a Dump and Return to the     |*
*|  Retry Address to Allow Program Execution to Continue.            |*
*+-------------------------------------------------------------------+*
*
LGES1800 DS    0H
         LLGT  R1,CVTPTR           Absolute Address of Pointer to CVT
         USING CVT,R1              Establish Addressability to CVT
         LLGT  R1,CVTTCBP          Obtain the Task Control Block Addr
         LLGT  R2,4(,R1)           Obtain the Current TCB Address
         USING TCB,R2              Establish Addressability to TCB
         LLGT  R1,TCBTIO           Obtain Address of Task I/O Table
         USING TIOT1,R1            Establish addressability to TIOT
         LA    R1,TIOENTRY         Point at the First DD Entry
         USING TIOENTRY,R1         Establish Addressability to Entry
         SLGR  R0,R0               Clear for Use as Work Register
LGES1900 DS    0H
         ICM   R0,B'0001',TIOELNGH Is There a Leng in Bytes for Entry?
         BRZ   LGES2300            No  => Branch If End of TIOT
         TM    TIOESTTA,TIOSLTYP   Is This a Freed TIOT Entry?
         BRO   LGES2000            Yes => Branch to Process Next TIOT
         CLC   4(8,R1),=C'LGRECOUT' ..Is This Our Logger Output DDname?
         BRE   LGES2100            Yes => Branch to Process Recovery
LGES2000 DS    0H
         ALR   R1,R0               Point to the Next TIOT DDname Entry
         BRU   LGES1900            Loop to Check Next DDname in List
LGES2100 DS    0H
         LLGFR R1,RSDW             System Diagnostic Work Area to SETRP
         LLGT  R2,LGWRETRY         Obtain the Retry Routine Address
         LLGT  R13,LCASA_BCK-LCASAVE(,R13) ..Restore Caller's Save Area
LGES2200 DS    0H
         SETRP WKAREA=(R1),        Address of the System Diag Wrk Area X
               RC=4,               Indicate Retry Using Retry Address  X
               DUMP=IGNORE,        Previous Dump Options Are Unchanged X
               REGS=(14,12),       Restore the Caller's Registers      X
               RETADDR=(R2),       Address of the Retry Routine        X
               RETREGS=YES,        Restore Regs From SDWASRSV of SDWA  X
               RUB=LGWSDPFX,       Set Register Update Block for SDWA  X
               FRESDWA=YES,        Free SDWA Area Before Entry to RetryX
               RECORD=IGNORE       Previous Record Option is Unchanged
*
*+-------------------------------------------------------------------+*
*|  Process Request to Perform Abend Recovery. This Recovery Routine |*
*|  Will Specifically Request a Storage Dump and Proceed to the Retry|*
*|  Address for the LGMHRTRY Program. This Retry Program Only Prints |*
*|  Diagnostic Information And Performs Its Own Dump of Selected     |*
*|  Storage Areas Before Ending With Abnormal Termination.           |*
*+-------------------------------------------------------------------+*
*
LGES2300 DS    0H
         ST    RSDW,LGWSDWA        Pass the SDWA Address to LGWRETRY
         MVC   LGWABEND,SDWASR13   Pass the Abending Program's R13
         ST    RLGW,SDWASR01       Pass the LGRWK2II Addr to LGMHRTRY
         LLGT  R14,=V(LGMHRTRY)    Obtain the Address of Retry Routine
         ST    R14,SDWASR15        Preserve Retry Address in SDWA
         ST    R13,SDWASR13        Pass the Save Area to the SDWA
         LLGFR R1,RSDW             System Diagnostic Work Area to SETRP
         LLGT  R2,=V(LGMHRTRY)     Obtain the Retry Routine Address
         LA    R2,1(R2)            Establish Amode64 Entry for LGMHRTRY
         LLGT  R13,LCASA_BCK-LCASAVE(,R13) ..Restore Caller's Save Area
LGES2400 DS    0H
         SETRP WKAREA=(R1),        Address of the System Diag Wrk Area X
               RC=4,               Indicate Retry Using Retry Address  X
               DUMP=YES,           Indicate a Request for a Dump       X
               REGS=(14,12),       Restore the Caller's Registers      X
               RETADDR=(R2),       Address of the Retry Routine        X
               REMREC=YES,         Disable Current ESTAEX Environment  X
               RETREGS=YES,        Restore Regs From SDWASRSV of SDWA  X
               FRESDWA=NO,         Hold SDWA Area Before Entry to RetryX
               RECORD=IGNORE,      Previous Record Option is Unchanged X
               RETRYAMODE=64       Retry Routine Receives Control 64Bit
*
*+-------------------------------------------------------------------+*
*|   Continue With Abend - Process For When the SDWA is Available    |*
*+-------------------------------------------------------------------+*
*
LGES2500 DS    0H
         LLGT  R13,LCASA_BCK-LCASAVE(,R13) ..Restore Caller's Save Area
         LLGFR R1,RSDW             System Diagnostic Work Area to SETRP
         XC    SDWASR15,SDWASR15   Clear to Force Percolation
         SETRP RC=0,               Percolate - Continue With Abend     X
               REGS=(14,12),       Restore the Caller's Registers      X
               DUMP=IGNORE         Previous Dump Options Are Unchanged
*
***********************************************************************
*+-------------------------------------------------------------------+*
*|  Perform Recovery Processing When z/OS V1R11 (HBB7760) or Higher  |*
*+-------------------------------------------------------------------+*
***********************************************************************
*
LGES3000 DS    0H
         SYSSTATE AMODE64=YES,ARCHLVL=2 ...Establish 64-Bit Environment
         STMG  R14,R12,LCAF64R14-LCASAVE(R13) Save Caller's Registers
         LLGTR RBASE1,R15          R15 has Our Entry Point Address
         LA    RBASE2,2048(,RBASE1)  Load 2nd Base w/ Addressable Range
         LA    RBASE2,2048(,RBASE2)  Add to Preceding Address Range
         LLGTR RBASE2,RBASE2       Ensure Base Reg Has a Good Address
         USING &MODID+(KXHA0003-LGMHESTA),RBASE1,RBASE2   Set Base Regs
         USING LGRWK2II,RLGW       Establish LGRWK2II Addressability
         USING SDWA,RSDW           Establish SDWA Addressability
LGES3100 DS    0H
         LG    RLGW,0(,R2)         Get the LGRWK2II Logger Area Address
         LLGTR RSDW,R1             Get System Diagnostic Work Area Addr
         LA    R15,LGWSAVE@        Get the Address of Our Save Area
         STG   R15,LCAF64FWD-LCASAVE(,R13) Establish Forward Chain Pntr
         STG   R13,LCAF64BCK-LCASAVE(,R15) Establish Back Chain Pointer
         MVC   LCAF64F4A-LCASAVE(4,R15),=CL4'F4SA'  Indicate Format 4
         LLGTR R13,R15             Save Area is Now Chained In
*
*+-------------------------------------------------------------------+*
*|           Verify If A Retry Effort Should Be Attempted            |*
*+-------------------------------------------------------------------+*
*
LGES3200 DS    0H
         TM    SDWAERRD,SDWACLUP   Recovery Only and Retry Not Allowed?
         BRNZ  LGES4500            Yes => Then Do Not Attempt to Retry
         TM    SDWAERRD,SDWARPIV   Have Regs and PSW at Time of Error?
         BRNZ  LGES4500            No  => Then Do Not Attempt to Retry
         TM    SDWAERRB,SDWAPERC   Our ESTAE First One to Get Control?
         BRNZ  LGES4500            No  => Then Do Not Attempt to Retry
         TM    LGWFLAG,LGWSDUMP    Retry Request with Dump Suppression?
         BRO   LGES3300            Yes => Branch to Check for Recovery
         LLGH  R14,LGWRTCNT        Obtain the Previous Retry Count
         LA    R14,1(,R14)         Increment the Current Retry Counter
         STH   R14,LGWRTCNT        Set the New Recovery Retry Count
         CHI   R14,(3)             More than 3 Abends In This Trap?
         BRNL  LGES4300            Yes => Forget Recovery, Just Abend
LGES3300 DS    0H
         OC    LGWRETRY,LGWRETRY   A Recovery Retry Address Specified?
         BRZ   LGES4300            No  => Branch to Continue With Abend
         TM    LGWFLAG,LGWSDUMP    Retry Request with Dump Suppression?
         BRO   LGES3400            Yes => Attempt Retry & Suppress Dump
         BRU   LGES3800            No  => Attempt Retry and Write Dump
*
*+-------------------------------------------------------------------+*
*|  Process request to perform abend recovery. This ESTAEX Exit      |*
*|  Recovery Program Routine will suppress the dump and return to    |*
*|  the retry address to allow program execution to continue.        |*
*+-------------------------------------------------------------------+*
*
LGES3400 DS    0H
         TM    LGWFLAG,LGW@SRSV    Retry for Abend in a System Service?
         BRO   LGES3600            Yes => Attempt Retry on System Abend
         LLGFR R1,RSDW             System Diagnostic Work Area to SETRP
         LLGT  R2,LGWRETRY         Obtain the Retry Routine Address
         LG    R13,LCAF64BCK-LCASAVE(,R13) ..Restore Caller's Save Area
LGES3500 DS    0H
         SETRP WKAREA=(R1),        Address of the System Diag Wrk Area X
               RC=4,               Indicate Retry Using Retry Address  X
               DUMP=NO,            Indicate No Storage Dump to Be TakenX
               REGS=(14,12),       Restore the Caller's Registers      X
               RETADDR=(R2),       Address of the Retry Routine        X
               RETREGS=64,         Restore Regs From SDWAG64 of SDWA   X
               FRESDWA=YES,        Free SDWA Area Before Entry to RetryX
               RECORD=IGNORE,      Previous Record Option is Unchanged X
               RETRYAMODE=64       Retry Routine Receives Control 64Bit
*
*+-------------------------------------------------------------------+*
*|  Process request to perform abend recovery. This ESTAEX Exit      |*
*|  Recovery Program Routine will suppress the dump, prepare the     |*
*|  register update block to load GPRs 2 and 3, and then return to   |*
*|  the retry address to allow user program execution to continue.   |*
*|  In this instance, the retry address will be in the LGMHLB64      |*
*|  program where the abend occurred. The Register Update Block (RUB)|*
*|  is used to ensure that the Completion Code and the Reason Code   |*
*|  information from an abend which occurred in IARV64 services is   |*
*|  preserved and made available to the LGMHLB64 program.            |*
*+-------------------------------------------------------------------+*
*
LGES3600 DS    0H
         SLGR  R0,R0               For Insert of System Completion Code
         SLGR  R15,R15             For Insert of Abend Reason Code
         XC    LGWSDPFX(LGWSDWAL),LGWSDPFX  Clear Register Update Block
         ICM   R0,B'0111',SDWACMPC Get the System Completion Code
         TM    SDWACMPF,SDWARCF    Do We Have a Valid Reason Code?
         BRZ   LGES3700            No  => Do Not Attempt to Process One
         LLGT  R15,SDWAXPAD        Addr of SDWA Extension Pointers Area
         ICM   R15,B'1111',SDWASRVP-SDWAPTRS(R15) A SDWA 1st Extension?
         BRZ   LGES3700            No  => Process for Abend Recovery
         LLGF  R15,SDWACRC-SDWARC1(,R15) Get Reason Code With Our Abend
         LLILL R1,X'3000'          Mask for SDWA Register-Update-Block
         STH   R1,LGWSDPFX         ESTAE Exit Register-Updte-Blk Prefix
         ST    R0,LGWSDWA@         Register Update Info for Register 2
         ST    R15,LGWSDWA@+4      Register Update Info for Register 3
LGES3700 DS    0H
         LLGFR R1,RSDW             System Diagnostic Work Area to SETRP
         LLGT  R2,LGWRETRY         Obtain the Retry Routine Address
         LG    R13,LCAF64BCK-LCASAVE(,R13) ..Restore Caller's Save Area
         SETRP WKAREA=(R1),        Address of the System Diag Wrk Area X
               RC=4,               Indicate Retry Using Retry Address  X
               DUMP=NO,            Indicate No Storage Dump to be TakenX
               REGS=(14,12),       Restore the Caller's Registers      X
               RETADDR=(R2),       Address of the Retry Routine        X
               RETREGS=YES,        Restore Regs From SDWASRSV of SDWA  X
               RUB=LGWSDPFX,       Set Register Update Block for SDWA  X
               FRESDWA=YES,        Free SDWA Area Before Entry to RetryX
               RECORD=IGNORE,      Previous Record Option is Unchanged X
               RETRYAMODE=64       Retry Routine Receives Control 64Bit
*
*+-------------------------------------------------------------------+*
*|  Process Request to Perform Abend Recovery. This ESTAEX Exit      |*
*|  Recovery Program Routine Will Allow a Dump and Return to the     |*
*|  Retry Address to Allow Program Execution to Continue.            |*
*+-------------------------------------------------------------------+*
*
LGES3800 DS    0H
         LLGT  R1,CVTPTR           Absolute Address of Pointer to CVT
         USING CVT,R1              Establish Addressability to CVT
         LLGT  R1,CVTTCBP          Obtain the Task Control Block Addr
         LLGT  R2,4(,R1)           Obtain the Current TCB Address
         USING TCB,R2              Establish Addressability to TCB
         LLGT  R1,TCBTIO           Obtain Address of Task I/O Table
         USING TIOT1,R1            Establish addressability to TIOT
         LA    R1,TIOENTRY         Point at the First DD Entry
         USING TIOENTRY,R1         Establish Addressability to Entry
         SLGR  R0,R0               Clear for Use as Work Register
LGES3900 DS    0H
         ICM   R0,B'0001',TIOELNGH Is There a Leng in Bytes for Entry?
         BRZ   LGES4300            No  => Branch If End of TIOT
         TM    TIOESTTA,TIOSLTYP   Is This a Freed TIOT Entry?
         BRO   LGES4000            Yes => Branch to Process Next TIOT
         CLC   4(8,R1),=C'LGRECOUT' ..Is This Our Logger Output DDname?
         BRE   LGES4100            Yes => Branch to Process Recovery
LGES4000 DS    0H
         ALR   R1,R0               Point to the Next TIOT DDname Entry
         BRU   LGES3900            Loop to Check Next DDname in List
LGES4100 DS    0H
         LLGFR R1,RSDW             System Diagnostic Work Area to SETRP
         LLGT  R2,LGWRETRY         Obtain the Retry Routine Address
         LG    R13,LCAF64BCK-LCASAVE(,R13) ..Restore Caller's Save Area
LGES4200 DS    0H
         SETRP WKAREA=(R1),        Address of the System Diag Wrk Area X
               RC=4,               Indicate Retry Using Retry Address  X
               DUMP=IGNORE,        Previous Dump Options Are Unchanged X
               REGS=(14,12),       Restore the Caller's Registers      X
               RETADDR=(R2),       Address of the Retry Routine        X
               RETREGS=YES,        Restore Regs From SDWASRSV of SDWA  X
               RUB=LGWSDPFX,       Set Register Update Block for SDWA  X
               FRESDWA=YES,        Free SDWA Area Before Entry to RetryX
               RECORD=IGNORE       Previous Record Option is Unchanged
*
*+-------------------------------------------------------------------+*
*|  Process Request to Perform Abend Recovery. This Recovery Routine |*
*|  Will Specifically Request a Storage Dump and Proceed to the Retry|*
*|  Address for the LGMHRTRY Program. This Retry Program Only Prints |*
*|  Diagnostic Information And Performs Its Own Dump of Selected     |*
*|  Storage Areas Before Ending With Abnormal Termination.           |*
*+-------------------------------------------------------------------+*
*
LGES4300 DS    0H
         ST    RSDW,LGWSDWA        Pass the SDWA Address to LGWRETRY
         MVC   LGWABEND,SDWASR13   Pass the Abending Program's R13
         ST    RLGW,SDWASR01       Pass the LGRWK2II Addr to LGMHRTRY
         LLGT  R14,=V(LGMHRTRY)    Obtain the Address of Retry Routine
         ST    R14,SDWASR15        Preserve Retry Address in SDWA
         ST    R13,SDWASR13        Pass the Save Area to the SDWA
         LLGFR R1,RSDW             System Diagnostic Work Area to SETRP
         LLGT  R2,=V(LGMHRTRY)     Obtain the Retry Routine Address
         LA    R2,1(R2)            Establish Amode64 Entry for LGMHRTRY
         LG    R13,LCAF64BCK-LCASAVE(,R13) ..Restore Caller's Save Area
LGES4400 DS    0H
         SETRP WKAREA=(R1),        Address of the System Diag Wrk Area X
               RC=4,               Indicate Retry Using Retry Address  X
               DUMP=YES,           Indicate a Request for a Dump       X
               REGS=(14,12),       Restore the Caller's Registers      X
               RETADDR=(R2),       Address of the Retry Routine        X
               REMREC=YES,         Disable Current ESTAEX Environment  X
               RETREGS=YES,        Restore Regs From SDWASRSV of SDWA  X
               FRESDWA=NO,         Hold SDWA Area Before Entry to RetryX
               RECORD=IGNORE,      Previous Record Option is Unchanged X
               RETRYAMODE=64       Retry Routine Receives Control 64Bit
*
*+-------------------------------------------------------------------+*
*|   Continue With Abend - Process For When the SDWA is Available    |*
*+-------------------------------------------------------------------+*
*
LGES4500 DS    0H
         LG    R13,LCAF64BCK-LCASAVE(,R13) ..Restore Caller's Save Area
         LLGFR R1,RSDW             System Diagnostic Work Area to SETRP
         XC    SDWASR15,SDWASR15   Clear to Force Percolation
         SETRP RC=0,               Percolate - Continue With Abend     X
               REGS=(14,12),       Restore the Caller's Registers      X
               DUMP=IGNORE         Previous Dump Options Are Unchanged
*
*+-------------------------------------------------------------------+*
*|   Continue With Abend - Process For When the SDWA Not Available   |*
*+-------------------------------------------------------------------+*
*
LGES5000 DS    0H
         SLGR  R0,R0               Set Retry Address to Zero
         SLGR  R15,R15             Indicate Program Abend Percolation
         BR    R14                 Return to System
         EJECT ,
*
***********************************************************************
*+-------------------------------------------------------------------+*
*|    Define Constants and Literals                                  |*
*+-------------------------------------------------------------------+*
***********************************************************************
*
         LTORG ,                   Define the Literal Origin Pool
         EJECT ,
***********************************************************************
*+-------------------------------------------------------------------+*
*|      DDDDDD    SSSSS   EEEEEEE   CCCCCC   TTTTTTTTT   SSSSS       |*
*|      D     D  S     S  E        C      C      T      S     S      |*
*|      D     D  S        E        C             T      S            |*
*|      D     D   SSSSS   EEEEEE   C             T       SSSSS       |*
*|      D     D        S  E        C             T            S      |*
*|      D     D  S     S  E        C      C      T      S     S      |*
*|      DDDDDD    SSSSS   EEEEEEE   CCCCCC       T       SSSSS       |*
*+-------------------------------------------------------------------+*
***********************************************************************
*
*+-------------------------------------------------------------------+*
*|        L o g g e r   S e r v i c e   W o r k   A r e a            |*
*+-------------------------------------------------------------------+*
*
         COPY  LGCPLSWA            Include Logger Service Work Area Map
         EJECT ,
*+-------------------------------------------------------------------+*
*|        L o g g e r   C o n t r o l   A r e a   -   (LCA )         |*
*+-------------------------------------------------------------------+*
*
         COPY  LGCPLOGR            Include Logger Service for LCA Dsect
LGVTRCE@ LPGMNTRY TYPE=SUB,        Define as a Sub-Program Entry       X
               LCAPFX=LCA,         Define LCA Prefix for This Mapping  X
               LCADSECT=YES,       Create the LCA Area Dsect Map Only  X
               LOG=OFF             Turn Logging Off In This Program
         EJECT ,
*
*+-------------------------------------------------------------------+*
*|              M V S   S y s t e m   D s e c t s                    |*
*+-------------------------------------------------------------------+*
*
         PRINT  NOGEN
         CVT    DSECT=YES,LIST=YES Communications Vector Table
         IHAECVT DSECT=YES,LIST=YES Extended Communications Vector Tble
         DCBD   DSORG=PS,DEVD=DA   Data Control Block
         IHAPSA LIST=YES           Prefix Storage Area
         IKJTCB LIST=YES           Job Task Control Block
         IHASDWA ,                 System Diagnostic Work Area Recovery
TIODSECT DSECT
         IEFTIOT1                  Task Input/Output Table
         END
