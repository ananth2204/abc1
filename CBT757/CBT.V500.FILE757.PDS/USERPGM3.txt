***********************************************************************
*+-------------------------------------------------------------------+*
*|                                                                   |*
*| PROGRAM NAME:   USERPGM3                                          |*
*|                                                                   |*
*| FUNCTION:       Program Example. Performs request for storage     |*
*|                 above-the-bar, displays storage area, releases,   |*
*|                 and ends. Shows example of defined log point.     |*
*|                                                                   |*
*| ATTRIBUTES:     REENTRANT, REUSABLE                               |*
*|                 AMODE 64, RMODE 31, AC=0                          |*
*|                                                                   |*
*+-------------------------------------------------------------------+*
***********************************************************************
*
         COPY  LGCPLOGR            ==>Include Logger CopyBook First<==
*
USERPGM3 LPGMNTRY TYPE=MAIN,       Define Main Program Entry (Required)X
               BASE=(12),          Establish Base Register (Default)   X
               AMOD=64,RMOD=31,    Addressing (64) and Residency Modes X
               STORAGE=32,         Define LCA Storage Size (Default)   X
               LOG=ON,             Turn On Logging (Default)           X
               LOGOUT=PRNT,        Print Records When Gen'ed (Default) X
               LCAPFX=USR,         Name the LCA Prefix (Required)      X
               MSG='Main User Program 3 Example' Set Any Msg (Optional)
*
***********************************************************************
* The IARV64 service is used in this AMODE 64 program example to      *
* allocate virtual storage above-the-bar. Storage is allocated in 1   *
* Megabyte blocks. The storage range between 2 Gigabytes and 4        *
* gigabytes is never allocated. In this example a guard area is       *
* allocated above our block of virtual storage. The guard area is not *
* addressable, but the virtual storage address range is reserved. The *
* addressable block represents what may be used by this program.      *
* However, this usable area may be expanded or reduced in size which  *
* will reduce or expand the size of the guard area. The guard area    *
* does not count against the MEMLIMIT, so you can allocate a large    *
* guard area to anticipate large storage use if needed. In this simple*
* example 256 Megabytes of above-the-bar storage is requested of which*
* 1 Meg will be addressable, and the remaining 255 Megabytes will be  *
* reserved in a guard-area.                                           *
***********************************************************************
*
USER0100 DS    0H
         IARV64 REQUEST=GETSTOR,   Indicate Create a Memory Object     X
               COND=YES,           Set RC if Unable to Satisfy Request X
               CONTROL=UNAUTH,     Free by Unauth Caller Owning Object X
               SVCDUMPRGN=YES,     Dump Usable Area of Obj on SDATA=RGNX
               SEGMENTS==AD(MAXSIZE), Indicate Object Size in MegabytesX
               GUARDLOC=HIGH,      Guard Area Starts Top of Memory Obj X
               GUARDSIZE==A(MAXSIZE-1), Set Guardsize In Case Need MoreX
               ORIGIN=ORIGIN,      Indicate Lowest Address of Mem ObjctX
               RETCODE=(R15),      Retrieve Return Code for Mem RequestX
               RSNCODE=(R0),       Retrieve Reason Code for Mem RequestX
               MF=(E,USRSTOR1,COMPLETE) Remote Form of Parameter List
         LTGFR R15,R15             Memory Object Request Successful?
         BRNZ  USEREXIT            No  => Branch to Exit This Program
         LG    R4,ORIGIN           Get the Starting Address of Memory
         LGR   R0,R4               Current Start Addr for Calculation
         ALGF  R0,=A(1024*1024)    Calculate Ending Address of Memery
         STG   R0,HIGH             Preserve Ending Address of Memory
*
***********************************************************************
*   Show An Example of Using #LGPOINT to Display High Storage Area    *
***********************************************************************
*
USER0200 DS    0H
         MVC   0(DATATBLN,R4),DATATABL Move Some Data to Memory Object
*
USER0300 #LGPOINT SHOW=('Show IARV64 AREA',(R4),32760),PVTAREA=YES
*
***********************************************************************
*                   Release the High Storage Area                     *
***********************************************************************
*
USER0400 IARV64 REQUEST=DETACH,    Release the Memory Object           X
               MEMOBJSTART=ORIGIN, Address of 1st Byte in Memory ObjectX
               MATCH=SINGLE,       MEMOBSTART is for One Memory Object X
               AFFINITY=LOCAL,     Only Local Affinity Affected for ObjX
               OWNER=YES,          Task Owning Memory Match Current TCBX
               TTOKEN=NO_TTOKEN,   Memory Owned by TCB Creating Object X
               MF=(E,USRSTOR1,COMPLETE) Remote Form Parameter List
*
***********************************************************************
*     Return To Caller                                                *
***********************************************************************
*
USER$END DS    0H
         SLGR  R15,R15             Indicate Successful Completion-Retcd
         SLGR  R0,R0               Indicate Successful Completion-Rsncd
USEREXIT DS    0H
         LPGMEXIT RC=(R15),RS=(R0) Define Program Exit
*
***********************************************************************
*     Area for Data Constants                                         *
***********************************************************************
*
MAXSIZE  EQU   (1*256)             Establish Memory Object Size in Megs
DATATABL DC    256AL1(*-DATATABL)  Define a Table
DATATBLN EQU   *-DATATABL          Indicated Length of Data Table
*
***********************************************************************
*     Program RENT Work Area for USERPGM3 RSECT                       *
***********************************************************************
*
         LCA   DEFINE              Define Program RENT Work Area
*
USR$WORK DS    10D                 General Work Area
HIGH     DS    FD                  Ending Address of Unguarded Area
ORIGIN   DS    FD                  Addr of 1st Byte in Unguarded Area
IAR64STR IARV64 PLISTVER=MAX,      Ensure List Sufficient for All ParmsX
               MF=(L,USRSTOR1,0D)  List Form of Parameter List
IARV64LN EQU   *-IAR64STR
*
         LCA   DEFEND              Define End of Program RENT Work Area
*
***********************************************************************
*                    End of Main Program                              *
***********************************************************************
*
         END
