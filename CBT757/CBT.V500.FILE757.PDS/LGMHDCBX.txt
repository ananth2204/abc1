***********************************************************************
*LLL      GGGGGGG M     M H     H DDDDDDD   CCCCCCC BBBBBB  XX     XX *
* L       G     G MM   MM H     H D      D  C     C B     B   X   X   *
* L       G       M M M M H     H D       D C       B     B    X X    *
* L       G  GGGG M  M  M HHHHHHH D       D C       BBBBBBB     X     *
* L       G     G M     M H     H D       D C       B     B    X X    *
* L       G     G M     M H     H D      D  C     C B     B   X   X   *
* LLLLLLL GGGGGGG M     M H     H DDDDDDD   CCCCCCC BBBBBB  XX     XX *
***********************************************************************
*                                                                     *
***********************************************************************
*                                                                     *
* NAME:            LGMHDCBX                                           *
*                                                                     *
* TYPE:            Assembler Source (High Level Assembler)            *
*                                                                     *
* FUNCTION:        Logger Services DCB Abend Exit Routine             *
*                                                                     *
* INPUT DATA:      R1  => Standard z/OS Parameter List                *
*                  R14 => Return Point (Must not be altered!)         *
*                  R15 => Entry Point Address                         *
*                                                                     *
* OUTPUT REGS:     R15  Not Used                                      *
*                                                                     *
* ATTRIBUTES:      REENTRANT, REUSABLE                                *
*                  AMODE 64, RMODE ANY, AC=0                          *
*                                                                     *
* DEPENDENCIES:    Copybooks LGCPLOGR and LGCPLSWA                    *
*                                                                     *
* RESTRICTIONS:    z/Architecture Mode                                *
*                                                                     *
* REGISTER USAGE:  R15, Entry Point Address                           *
*                  R14, Return Address (Must not be altered!)         *
*                  R2,  Address of Logger Services Area               *
*                  R3-R12, General Work Registers                     *
*                                                                     *
* CALLING PROGRAM: DCB OPEN, CLOSE, EOV through DCB$EXIT              *
*                                                                     *
* CALLED PROGRAMS: None                                               *
*                                                                     *
* RETURN CODES:    Same as Completion Code                            *
*                                                                     *
* CHANGE ACTIVITY:                                                    *
*                                                                     *
*  Reason  Release   Date    Description                              *
* -------- ------- -------- ------------------------------------------*
* Update   V1R1M17 20120721 Update VV.RR.MM stats for Fix Pack 17@@KHF*
* Update   V1R1M16 20120127 Update VV.RR.MM stats for Fix Pack 16@@KHF*
* Update   V1R1M15 20110930 Update VV.RR.MM stats for Fix Pack 15@@KHF*
* Update   V1R1M14 20110423 Update VV.RR.MM stats for Fix Pack 14@@KHF*
* Update   V1R1M13 20110108 Update VV.RR.MM stats for Fix Pack 13@@KHF*
* Update   V1R1M12 20100306 Update VV.RR.MM stats for Fix Pack 12@@KHF*
* Update   V1R1M11 20091023 Update VV.RR.MM stats for Fix Pack 11@@KHF*
* Update   V1R1M10 20090523 Update VV.RR.MM stats for Fix Pack 10@@KHF*
* Update   V1R1M09 20090110 Updated VV.RR.MM stats for Fix Pack 9@@KHF*
* Update   V1R1M08 20081011 Updated VV.RR.MM stats for Fix Pack 8@@KHF*
* Update   V1R1M07 20080524 Updated VV.RR.MM stats for Fix Pack 7@@KHF*
* Update   V1R1M06 20080223 Updated VV.RR.MM stats for Fix Pack 6@@KHF*
* Update   V1R1M05 20080112 Updated VV.RR.MM stats for Fix Pack 5@@KHF*
* Update   V1R1M04 20071104 Updated VV.RR.MM stats for Fix Pack 4@@KHF*
* Update   V1R1M03 20070701 Updated VV.RR.MM stats for Fix Pack 3@@KHF*
* Update   V1R1M02 20070610 Updated VV.RR.MM stats for Fix Pack 2@@KHF*
* Update   V1R1M01 20070512 Updated VV.RR.MM stats for Fix Pack 1@@KHF*
* (New)    V1R1M00 20070420 First Release (@CBT-Tape)            @@KHF*
*                                                                     *
***********************************************************************
*
*+-------------------------------------------------------------------+*
*|  D e f i n e   a n d   S e t   P r o g r a m   V a r i a b l e s  |*
*+-------------------------------------------------------------------+*
*
         PRINT NOGEN
         LCLC  &KXHVER,&KXHREL,&KXHMOD Version/Release/Modification Lvl
         LCLC  &KXHVRM             Set for Version/Release/Mod Level
         LCLC  &RELDATE            Indicate the Release Date
         LCLC  &AMODE              Addressing Mode of Logger Program
         LCLC  &RMODE              Resident Mode of Logger Program
&KXHVER  SETC  'V1'                Indicate the Program Version Number
&KXHREL  SETC  'R1'                Indicate the Program Release Number
&KXHMOD  SETC  'M17'               Indicate the Pgm Modification Level
&KXHVRM  SETC  '&KXHVER.&KXHREL..&KXHMOD'  Set for Version/Release/Mod
&RELDATE SETC  '&SYSDATC'          Assemble (Program Release) Date
&CPYRITE SETC  '2008,2012'         Program Copyright Year
&AMODE   SETC  '64'                Set Default Program Addressing Mode
&RMODE   SETC  'ANY'               Set Default Program Residence Mode
&MODID   SETC  'LGMHDCBX'          Set the Program Module Identifier
*
         YREGS ,                   Set the Standard Register Equates
         EJECT  ,
***********************************************************************
*+-------------------------------------------------------------------+*
*|          MM       MM     AAAAA    IIIIIII   NNN     NNN           |*
*|          M M     M M    A     A      I       N N     N            |*
*|          M  M   M  M    A     A      I       N  N    N            |*
*|          M   M M   M    AAAAAAA      I       N   N   N            |*
*|          M    M    M    A     A      I       N    N  N            |*
*|          M         M    A     A      I       N     N N            |*
*|         MMM       MMM   A     A   IIIIIII   NNN     NN            |*
*+-------------------------------------------------------------------+*
***********************************************************************
*                                                                     *
***********************************************************************
*+-------------------------------------------------------------------+*
*|    LGMHDCBX - (Entry Point)                                       |*
*+-------------------------------------------------------------------+*
* PROGRAM NAME:    LGMHDCBX                                           *
*                                                                     *
* FUNCTION:        Logger Services DCB Abend Exit Routine             *
*                                                                     *
*                  This is an active DCB abend exit routine for the   *
*                  //LGRECOUT DD. There is an address in the DCB exit *
*                  list pointing to a DCB abend exit routine for the  *
*                  //LGRECOUT DCB being processed. That address which *
*                  was placed in the DCB exit list was not for this   *
*                  DCB exit but for a DCB exit routine stub with      *
*                  executable code which was copied by Logger program *
*                  'LGMHLRCI' to a field called DCB$EXIT in LGWRK2II, *
*                  a below-the-line get-main'ed area. In the event    *
*                  that an abend related just to the //LGRECOUT data  *
*                  set should occur, the DCB exit stub pointed to in  *
*                  the //LGRECOUT DCB exit list will be given control *
*                  to meet the system requirement that the DCB exit   *
*                  routine entry point must reside below the 16Meg    *
*                  line. Upon entry in 24-bit addressing mode to the  *
*                  DCB exit stub located in the below-the-line        *
*                  get-main area, the stub will perform redirection   *
*                  passing control to this 64-bit addressing mode DCB *
*                  exit routine residing above-the-line.              *
*                                                                     *
*                  When this DCB exit routine is entered the          *
*                  low-order three bytes of register R1 will contain  *
*                  the address of a parameter list created by OPEN,   *
*                  CLOSE, or EOV at the time an error in I/O          *
*                  activity occurred to the //LGRECOUT data set. The  *
*                  first three bytes of the parameter list will       *
*                  contain the abend code and reason code, and the    *
*                  last byte (byte 3 in the parameter list) will      *
*                  contain an option byte. This routine will parse    *
*                  the parameter list for the following abend and     *
*                  reason codes:                                      *
*                                                                     *
*                    B37-004 - VTOC, Used 16 Extents, Volume is Out   *
*                              of Space.                              *
*                    D37-004 - Primary Allocation Used, No Secondary  *
*                              Allocation Requested.                  *
*                    E37-004   Used All Available Space               *
*                    913-0xx   Open Error                             *
*                                                                     *
*                  For the above completion codes, this routine will  *
*                  check the option byte to verify if there is a      *
*                  condition for which an attempt at recovery will be *
*                  allowed. If Yes, then a request will be made by    *
*                  this routine to ignore the abend by placing a value*
*                  of X'04' in byte 3 of the parameter list, the error*
*                  flags will be set, and the completion code saved.  *
*                  Then this program will pass control back to OPEN,  *
*                  CLOSE, or End-of-Volume processing which will pass *
*                  control back to the calling Logger Service program *
*                  which will pass control back to the user program.  *
*                  Otherwise, if recovery is not available, then      *
*                  abend immediately.                                 *
*                                                                     *
* INPUT REGS:      R1 => Standard z/OS Parameter List                 *
*                  R2 => Pointer to LGRWK2II Work Area                *
*                  R15=> Entry Point to LGMGDCBX                      *
*                                                                     *
* OUTPUT REGS:     R15 => None                                        *
*                                                                     *
* ATTRIBUTES:      REENTRANT, REUSABLE                                *
*                  AMODE 64, RMODE ANY, AC=0                          *
*                                                                     *
* CALLING PROGRAM: DCB OPEN, CLOSE, EOV through DCB$EXIT              *
*                                                                     *
* CALLED PROGRAMS: None                                               *
*                                                                     *
* RETURN CODES:    Same as Completion Code                            *
*                                                                     *
***********************************************************************
*
&MODID   RSECT *                   Main Pgm Read-Only Control Section
&MODID   AMODE &AMODE              Program Addressing Mode -  &AMODE
&MODID   RMODE &RMODE              Program Residence Mode - &RMODE
         SYSSTATE AMODE64=YES,ARCHLVL=2 ...Establish 64-Bit Environment
         CNOP  0,8                 Ensure Proper Boundary Alignment
         BRAS  R15,*+8             Branch Around the Static Data Area
         DC    A(*+4)              Establish Static Area with Address
         L     R15,0(R15,R0)       Set up to Address of Static Data
         USING *-4,R15             Set Program Temporary Base Register
         BRU   DCBA0100            Branch Past the Literal Area
         DC    C'&MODID'           Set Eyecatcher for the Program Name
         DC    C' (LOGGRASM-&KXHVRM)' Program Version.Rlse.ModLvl
         DC    C' &SYSDATC &SYSTIME ' Set Compile Date and Time Stamp
         DC    C' Copyright &CPYRITE (C)' Establish Copyright Notice
         DC    C' LOGGRASM Information Logger for Assembler'
         SPLEVEL SET=6             Set for OS/390 R2 or Above (z/OS+)
         DC    50S(*)              Define a Patch Area
DCBA0100 DS    0H
         LLGTR R15,R15             Ensure Base Reg Has a Good Address
         LLGFR R1,R1               Clear Hi-Half of Parm List Register
         RLL   R1,R1,8             Clear Hi-Order Bits in Parm Lst Addr
         SRL   R1,8                And Shift Back For Our 3-Byte Addr
         LLGTR R2,R2               Set the Address to LGRWK2II Area
         USING LGRWK2II,R2         Establish Addressability to Area
         CLC   0(3,R1),=X'B37004'  B37-004 (VTOC, Extents, Vol Space)?
         BRE   DCBA0200            Yes => Branch to Attempt Recovery
         CLC   0(3,R1),=X'D37004'  D37-004 (Prim Used, No Sec Request)?
         BRE   DCBA0200            Yes => Branch to Attempt Recovery
         CLC   0(3,R1),=X'E37004'  E37-004 (Used All Available Space)?
         BRE   DCBA0200            Yes => Branch to Attempt Recovery
         CLC   0(2,R1),=X'9130'    913-0xx (Error processing OPEN)?
         BRNE  DCBA0400            No  => Terminate Task Immediately
         OI    LGWFLAG2,LGWAB913   Set Indicator for 913 Abend at Open
         BRU   DCBA0300            Branch to Attempt Abend Recovery
DCBA0200 DS    0H
         OI    LGWFLAG2,LGWABX37   Set Indicator for x37 Abend at EOV
DCBA0300 DS    0H
         MVC   LGWABND$+1(3),0(R1) Preserve the System Abend Code
         TM    3(R1),X'04'         Option Mask Allow Ignore of Abend?
         BRZ   DCBA0400            No  => Then Recovery Not Available
         MVC   LGWREAS$+1(3),0(R1) Preserve the Abend Reason Code
         MVI   3(R1),4             In Parm List Indicate Ignore Abend
         BRU   DCBA0500            Branch to Exit From This Routine
DCBA0400 DS    0H
         MVI   3(R1),0             In Parm List Indicate Abend Now
*
*+-------------------------------------------------------------------+*
*|    Return to Caller                                               |*
*+-------------------------------------------------------------------+*
*
DCBA0500 DS    0H
         BSM   R0,R14              Return to OPEN, CLOSE, or EOV
         CNOP  0,8                 Ensure Doubleword Aligment
         LTORG ,                   Establish Literal Origin Pool
         DROP  R2,R15              Remove Listed Registers as Base Regs
         EJECT ,
*
*+-------------------------------------------------------------------+*
*|        L o g g e r   S e r v i c e   W o r k   A r e a            |*
*+-------------------------------------------------------------------+*
*
         COPY  LGCPLSWA            Include Logger Service Work Area Map
         EJECT ,
*
*+-------------------------------------------------------------------+*
*|        L o g g e r   C o n t r o l   A r e a   -   (LCA)          |*
*+-------------------------------------------------------------------+*
*
         COPY  LGCPLOGR            Include Logger Service LCA Dsect Map
DBXLRCE@ LPGMNTRY TYPE=SUB,        Define as a Sub-Program Entry       X
               LCAPFX=LCA,         Define LCA Prefix for This Mapping  X
               LCADSECT=YES,       Create the LCA Area Dsect Map Only  X
               LOG=OFF             Turn Logging Off In This Program
         EJECT ,
*+-------------------------------------------------------------------+*
*|            z / O S   S y s t e m   D s e c t s                    |*
*+-------------------------------------------------------------------+*
*
         PRINT NOGEN
         CVT    DSECT=YES,LIST=YES Communications Vector Table
         DCBD   DSORG=PS,DEVD=DA   Data Control Block
         END
