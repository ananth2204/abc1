{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013501000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 27, "INMDSNAM": "CBT.V500.FILE931.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE931.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x0c'", "DS1TRBAL": "b'm,'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\t[\\x00\\x07\\t[\\x00\\x0e\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Z\\x009\\x01\\x15\\x12_\\x01\\x15\\x12_\\x11P\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf0@@@'", "ispf": {"version": "04.90", "flags": 0, "createdate": "2015-05-05T00:00:00", "modifydate": "2015-05-05T11:50:39", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-490"}, "text": "REGULAR CBT TAPE - VERSION 490    FILE:  931\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT490.FILE931\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 126 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,772 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/05/15    11:50:39    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#READMEC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00V\\x01\\x15\\x12O\\x01\\x15\\x12O\\x12V\\x00\\x05\\x00\\x05\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-05-04T00:00:00", "modifydate": "2015-05-04T12:56:56", "lines": 5, "newlines": 5, "modlines": 0, "user": "GABRIEL"}, "text": "THESE CLISTS GO WITH THE BOOK\nTSO CLIST TO TSO REXX CONVERSION HANDBOOK\nBY GABRIEL F. GARGIULO\nISBN-13: 978-1508668497\nISBN-10: 1508668493\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#READMER": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x15\\x12O\\x01\\x15\\x12O\\x12P\\x00\\x05\\x00\\x05\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-05-04T00:00:00", "modifydate": "2015-05-04T12:50:36", "lines": 5, "newlines": 5, "modlines": 0, "user": "GABRIEL"}, "text": "THESE REXX PROGRAMS GO WITH THE BOOK\nTSO CLIST TO TSO REXX CONVERSION HANDBOOK\nBY GABRIEL F. GARGIULO\nISBN-13: 978-1508668497\nISBN-10: 1508668493\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE931": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Z\\x000\\x01\\x15\\x12_\\x01\\x15\\x12_\\x11P\\x00\\x1e\\x00\\x1e\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf0@@@'", "ispf": {"version": "04.90", "flags": 0, "createdate": "2015-05-05T00:00:00", "modifydate": "2015-05-05T11:50:30", "lines": 30, "newlines": 30, "modlines": 0, "user": "CBT-490"}, "text": "//***FILE 931 is from Gabriel F. Gargiulo who writes books about    *   FILE 931\n//*           TSO topics, CLISTs, and REXX.                         *   FILE 931\n//*                                                                 *   FILE 931\n//*           email:  gabeg@yoursecondlanguage.com                  *   FILE 931\n//*                                                                 *   FILE 931\n//*           This file is from Gabriel's new book called:          *   FILE 931\n//*                                                                 *   FILE 931\n//*           \"TSO CLIST to TSO REXX Conversion Handbook\"           *   FILE 931\n//*                   By Gabriel F. Gargiulo                        *   FILE 931\n//*                   ISBN-13: 978-1508668497                       *   FILE 931\n//*                   ISBN-10: 1508668493                           *   FILE 931\n//*                                                                 *   FILE 931\n//*           which you can order from Amazon.com, among other      *   FILE 931\n//*           places.                                               *   FILE 931\n//*                                                                 *   FILE 931\n//*           This file contains the exercise examples from         *   FILE 931\n//*           the book.                                             *   FILE 931\n//*                                                                 *   FILE 931\n//*       Organization of PDS members:                              *   FILE 931\n//*                                                                 *   FILE 931\n//*       Each CLIST which is converted to a REXX (and supposedly   *   FILE 931\n//*       does a similar action), has the same suffix number as     *   FILE 931\n//*       the corresponding REXX exec member of this file.          *   FILE 931\n//*                                                                 *   FILE 931\n//*       For example:  member CLST0003 corresponds to member       *   FILE 931\n//*                            REXX0003,                            *   FILE 931\n//*                                                                 *   FILE 931\n//*                     and so forth for all 61 examples currently  *   FILE 931\n//*                     displayed here in this pds.                 *   FILE 931\n//*                                                                 *   FILE 931\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CLST0001": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x009\\x01\\x15\\x07?\\x01\\x15\\t\\x9f\\x14\\x14\\x00\\x05\\x00\\x05\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-14T00:00:00", "modifydate": "2015-04-09T14:14:39", "lines": 5, "newlines": 5, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0001 TO ILLUSTRATE A VARIABLE WITHIN A VARIABLE */\nSET DAY = MONDAY\nSET WHICHDAY = &&DAY\nWRITE THE DAY SPECIFIED IS &WHICHDAY /* GIVES MONDAY */\nWRITE DAY IS &DAY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0002": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00Y\\x01\\x15\\x07?\\x01\\x15\\t\\x9f\\x14\\x14\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-14T00:00:00", "modifydate": "2015-04-09T14:14:59", "lines": 12, "newlines": 12, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0002 TO ILLUSTRATE &STR */\nSET NAME = JOE          /* NO LITERAL DELIMITERS NEEDED */\n\nSET BAD_DATE = &SYSDATE /* WITHOUT &STR, DIVISION IS DONE */\nWRITE &BAD_DATE         /* GIVES 0 */\n\nSET GOOD_DATE = &STR(&SYSDATE) /* &STR NEEDED TO PREVENT DIVISION */\n         /* TAKING PLACE DUE TO THE SLASHES RETURNED BY &SYSDATE */\nWRITE &GOOD_DATE        /* GIVES DATE, CORRECTLY */\n\n\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0003": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\t\\x01\\x15\\x07?\\x01\\x15\\t\\x9f\\x14\\x15\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-14T00:00:00", "modifydate": "2015-04-09T14:15:09", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0003 ILLUSTRATES HOW &STR KEEPS LEADING AND TRAILING BLANKS*/\nSET NAME = &STR(     JOE)\nWRITE XX&NAME.XX\n\nSET NAME = &STR(JOE     )\nWRITE XX&NAME.XX\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0004": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00G\\x01\\x15\\x06\\x8f\\x01\\x15\\t\\x9f\\x14\\x16\\x00\\x16\\x00\\x14\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-09T00:00:00", "modifydate": "2015-04-09T14:16:47", "lines": 22, "newlines": 20, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLIST CLST0004 TO SHOW LABELS */\nGOTO HERE\n/* CODE */\n/* CODE */\n\nHERE: +\nWRITE AFTER THE LABEL HERE\n/* CODE */\n\nGOTO THERE\n/* CODE */\n/* CODE */\n\nTHERE: WRITE AFTER THE LABEL THERE\n/* CODE */\n\n/* NO EXIT IS NEEDED BECAUSE CONTROL DOESN'T GO TO A SUBPROCEDURE */\n/* EXCEPT THROUGH A SYSCALL */\nMYSUBPROCEDURE: +\nSET A = 1 + 2\nRETURN\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0005": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00X\\x01\\x15\\x07?\\x01\\x15\\t\\x9f\\x14\\x16\\x00\\x1a\\x008\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-14T00:00:00", "modifydate": "2015-04-09T14:16:58", "lines": 26, "newlines": 56, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0005 TO ILLUSTRATE CLIST ARITHMETIC */\nSET TOTAL = 1 + 1         /* ADDITION */\nWRITE &TOTAL              /* 2 */\n\nSET TOTAL = 1 - 1         /* SUBTRACTION */\nWRITE &TOTAL              /* 0 */\n\nSET TOTAL = 16 / 4        /* DIVISION */\nWRITE &TOTAL              /* 4 */\n\nSET TOTAL = 16 / 5        /* DIVISION */\nWRITE &TOTAL              /* 3 */\n\nSET REMAINDER = 16 // 5  /* REMAINDER */\nWRITE &REMAINDER         /* 1 */\n\nSET TOTAL = 4 ** 2       /* EXPONENTIATION */\nWRITE &TOTAL             /* 16 */\n\nSET TOTAL = 4 ** -1      /* EXPONENTIATION */\nWRITE &TOTAL             /* 1 */\n\n\n/* DOESN'T WORK. FRACTIONAL EXPONENT  */\n/* SET &TOTAL = 4 * 2.2 */   /* EXPONENTIATION */\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0006": {"ttr": 534, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\t\\x01\\x15\\x06\\x8f\\x01\\x15\\t\\x9f\\x14\\x17\\x00\\x06\\x00\\x06\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-09T00:00:00", "modifydate": "2015-04-09T14:17:09", "lines": 6, "newlines": 6, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0006 TO SHOW SYSDATE FUNCTION */\nWRITE &SYSDATE\nSET MYDATE =      &SYSDATE\nWRITE &MYDATE     /* 0, BECAUSE DIVISION WAS DONE */\nSET MYDATE = &STR(&SYSDATE)\nWRITE &MYDATE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0007": {"ttr": 536, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x18\\x01\\x15\\x07?\\x01\\x15\\t\\x9f\\x14\\x17\\x00\\x08\\x00\\x08\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-14T00:00:00", "modifydate": "2015-04-09T14:17:18", "lines": 8, "newlines": 8, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0007 TO ILLUSTRATE &SYSDVAL AND READDVAL\nSET SYSDVAL = A STRING OF DATA\nREADDVAL VAR1 VAR2 VAR3 VAR4 VAR5\nWRITE &VAR1\nWRITE &VAR2\nWRITE &VAR3\nWRITE &VAR4\nWRITE &VAR5 /* IN THIS EXAMPLE, &VAR5 WILL BE NULL */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0008": {"ttr": 538, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x16\\x01\\x15\\x06/\\x01\\x15\\x11_\\t\\x19\\x00\\x10\\x00\\x10\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-03T00:00:00", "modifydate": "2015-04-25T09:19:16", "lines": 16, "newlines": 16, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0008. THIS CLIST WILL EXECUTE THE TSO COMMAND LISTDS */\n /* AND CAPTURE THE OUTPUT THAT IS NORMALLY DISPLAYED AT THE TERMINAL */\n /* THIS EXAMPLE DISPLAYS THE CAPTURED DATA.     */\n /* YOU CAN DO OTHER THINGS WITH THE CAPTURED DATA */\n SET SYSOUTTRAP = 100            /* ARBITRARILY CHOOSING 100 LINES. */\n                                 /* YOU CAN USE A DIFFERENT VALUE */\n LISTDS  'USERID.TEST1.EXEC'     /* USE A VALID DATASET NAME HERE */\n SET SYSOUTTRAP = 0              /* TURN OFF CAPTURING. */\n SET MAX_RETURNED = &SYSOUTLINE  /* HOW MANY LINES RETURNED */\n SET INDEX= 0\n DO WHILE &INDEX LE &MAX_RETURNED       /* NOTE 1 */\n         SET INDEX = &INDEX + 1         /* INCREMENT INDEX */\n         SET CURRENT_LINE = &STR(&&SYSOUTLINE&INDEX) /* NOTE 2 */\n         WRITE LINE RETRIEVED IS &STR(&CURRENT_LINE)\n                                                     /* NOTE 3 */\n END /* END DO WHILE */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0009": {"ttr": 540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00U\\x01\\x15\\x06/\\x01\\x15\\t\\x9f\\x14\\x18\\x00\\x13\\x00\\x10\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-03T00:00:00", "modifydate": "2015-04-09T14:18:55", "lines": 19, "newlines": 16, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0009. THIS CLIST WILL EXECUTE THE TSO COMMAND LISTDS */\n /* AND CAPTURE THE OUTPUT THAT IS NORMALLY DISPLAYED AT THE TERMINAL */\n /* THIS EXAMPLE DISPLAYS THE CAPTURED DATA.     */\n /* YOU CAN DO OTHER THINGS WITH THE CAPTURED DATA */\n /* IN THIS EXAMPLE, THE DATASET DOES NOT EXIST    */\n CONTROL NOFLUSH  /* NOTE 1 */   /* DON'T TERMINATE IF ERROR      */\n SET SYSOUTTRAP = 100            /* ARBITRARILY CHOOSING 100 LINES.*/\n                                 /* YOU CAN USE A DIFFERENT VALUE */\n LISTDS  'USERID.TEST1.CLIST'    /* USE A VALID DATASET NAME HERE */\n WRITE &LASTCC WAS RETURN CODE FROM LISTDS COMMAND /* NOTE 2 */\n SET SYSOUTTRAP = 0              /* TURN OFF CAPTURING. */\n SET MAX_RETURNED = &SYSOUTLINE  /* HOW MANY LINES RETURNED */\n SET INDEX= 0\n DO WHILE &INDEX LE &MAX_RETURNED\n         SET INDEX = &INDEX + 1         /* INCREMENT INDEX */\n         SET CURRENT_LINE = &STR(&&SYSOUTLINE&INDEX)\n         WRITE LINE RETRIEVED IS &STR(&CURRENT_LINE)\n\n END /* END DO WHILE */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0010": {"ttr": 542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00Y\\x01\\x15\\x06?\\x01\\x15\\x11_\\t \\x00\\r\\x00\\x0e\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-25T09:20:59", "lines": 13, "newlines": 14, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0010 TO TEST &LASTCC AND &MAXCC */\nERROR DO\n    WRITE &LASTCC  &MAXCC\n    WRITE IN ERROR ROUTINE\n    WRITE &LASTCC  &MAXCC\n    RETURN /* IGNORE ERROR, GO BACK AFTER OFFENDING STATEMENT */\nEND\n\nWRITE BEFORE DOING ANYTHING &LASTCC\nWRITE ABOUT TO EXECUTE BAD CLIST STATEMENT\nSET TOTAL = 1 + B\nWRITE AFTER BAD CLIST STATEMENT &LASTCC  &MAXCC\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0011": {"ttr": 544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x19\\x01\\x15\\x06?\\x01\\x15\\x11_\\t%\\x00\\r\\x00\\x04\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-25T09:25:19", "lines": 13, "newlines": 4, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0011 TO TEST &LASTCC AND &MAXCC */\nCONTROL NOFLUSH /* TO PREVENT TERMINATION OF CLIST */\nERROR DO\n    WRITE &LASTCC  &MAXCC\n    WRITE IN ERROR ROUTINE\n    WRITE &LASTCC  &MAXCC\n    RETURN /* IGNORE ERROR, GO BACK AFTER OFFENDING STATEMENT */\nEND\n\nWRITE DOING BAD TSO COMMAND\nLISTDS TEST1.CLIST XXX /* BAD OPERAND */\nWRITE AFTER LISTDS &LASTCC   &MAXCC\nWRITE ENDING CLIST\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0012": {"ttr": 546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x08\\x01\\x15\\x06?\\x01\\x15\\t\\x9f\\x143\\x00\\x07\\x00\\x05\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-09T14:33:08", "lines": 7, "newlines": 5, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0012 TO TEST FUNCTION &DATATYPE */\nWRITE &DATATYPE(ABCD) &STR(ABCD)                   /*CHAR*/\nWRITE &DATATYPE(1234) &STR(1234)                   /*NUM*/\nWRITE &DATATYPE(1 + 1) &STR(1 + 1)                 /*NUM*/\nWRITE &DATATYPE(10.20) &STR(10.20)                 /*CHAR*/\nWRITE &DATATYPE(DSN.ABCD.DATA) &STR(DSN.ABCD.DATA) /*CHAR*/\nWRITE &DATATYPE(ABCD1234) &STR(ABCD1234)           /*CHAR*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0013": {"ttr": 548, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x16\\x01\\x15\\x06?\\x01\\x15\\x11_\\t&\\x00\\x08\\x00\\x05\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-25T09:26:16", "lines": 8, "newlines": 5, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0013 TO TEST THE &EVAL FUNCTION */\nCONTROL LIST\nWRITE 1 + 1          /* 1 + 1 */\nWRITE &EVAL(1 + 1)   /* 2 */\nWRITE 1 + X          /* 1 + X */\nWRITE &EVAL(1 + X)   /* CLIST ERROR */\n\nALLOCATE SPACE(&EVAL(1 + 1)) NEW DELETE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0014": {"ttr": 550, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x002\\x01\\x15\\x06?\\x01\\x15\\t\\x9f\\x14#\\x00\\n\\x00\\n\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-09T14:23:32", "lines": 10, "newlines": 10, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0014 TO TEST THE &LENGTH FUNCTION */\nWRITE &LENGTH(ABCD)           /* 4 */\nWRITE &LENGTH(1 + 2)          /* 1 */\nSET &VAR = &STR(1 + 2)\nWRITE &LENGTH(&VAR)           /* 1 WORKS THE SAME WITH VARIABLE */\nWRITE &LENGTH(&STR(1 + 2))    /* 5 */\nWRITE &LENGTH(    ABCD)       /* 4 */\nWRITE &LENGTH(&STR(    ABCD)) /* 8 */\nWRITE &LENGTH(ABCD    )       /* 4 */\nWRITE &LENGTH(&STR(ABCD    )) /* 8 */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0015": {"ttr": 552, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x05\\x01\\x15\\x06?\\x01\\x15\\t\\x9f\\x14$\\x00\\x03\\x00\\x03\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-09T14:24:05", "lines": 3, "newlines": 3, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0015 TO ILLUSTRATE THE &NRSTR FUNCTION */\nSET X = &NRSTR(DSN=&&TEMP,DISP=(NEW,PASS))\nWRITE &X    /* DSN=&TEMP,DISP=(NEW,PASS) */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0016": {"ttr": 554, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00 \\x01\\x15\\t\\x9f\\x01\\x15\\x11_\\t)\\x00\\t\\x00\\t\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-25T09:29:20", "lines": 9, "newlines": 9, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0016 TO ILLUSTRATE THE &SYSNSUB FUNCTION */\nSET LEVEL1 = JOE\nSET LEVEL2 =  &&LEVEL1 /* FIRST  LEVEL VARIABLE IS PUT IN &LEVEL2 */\nSET LEVEL3 =  &&LEVEL2 /* SECOND LEVEL VARIABLE IS PUT IN &LEVEL3 */\nWRITE &LEVEL3 /* GIVES \"JOE\" */\nWRITE &SYSNSUB(0,&LEVEL3) /* GIVES \"&LEVEL3\" */\nWRITE &SYSNSUB(1,&LEVEL3) /* GIVES \"&LEVEL2\" */\nWRITE &SYSNSUB(2,&LEVEL3) /* GIVES \"&LEVEL1\" */\nWRITE &SYSNSUB(3,&LEVEL3) /* GIVES \"JOE\"     */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CLST0017": {"ttr": 556, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00'\\x01\\x15\\x06?\\x01\\x15\\t\\x9f\\x14$\\x00\\x08\\x00\\x08\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-09T14:24:27", "lines": 8, "newlines": 8, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0017 TO ILLUSTRATE &STR FUNCTION */\nSET MYVAR = &STR(1 + 2)   /* NO MATH DONE */\nWRITE &MYVAR              /* 1 + 2 */\nSET VAR1   = &MYVAR       /* THIS DOES THE MATH */\nWRITE &VAR1               /* 3 */\nSET VAR2   = &STR(&MYVAR) /* DOESN'T DO MATH */\nWRITE &VAR2               /* 1 + 2 */\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0018": {"ttr": 558, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x006\\x01\\x15\\x06?\\x01\\x15\\t\\x9f\\x14$\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-09T14:24:36", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0018 TO ILLUSTRATE &STR WITH &SYSDATE\nSET MYVAR = &SYSDATE\nSET VAR1 = &MYVAR\nWRITE &VAR1                 /* 0 BECAUSE IT DOES DIVISION ON DATA */\nSET MYVAR = &STR(&SYSDATE)\nSET VAR1 = &STR(&MYVAR)\nWRITE &VAR1                 /* TODAY'S DATE */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0019": {"ttr": 560, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00#\\x01\\x15\\x07?\\x01\\x15\\t\\x9f\\x14%\\x00\\x04\\x00\\x04\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-14T00:00:00", "modifydate": "2015-04-09T14:25:23", "lines": 4, "newlines": 4, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0019 TO ILLUSTRATE SETTING TO PARENTHESIS */\nSET &RPAREN = )\nSET &LPAREN = &STR((\nWRITE &RPAREN &LPAREN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0020": {"ttr": 562, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x005\\x01\\x15\\x06?\\x01\\x15\\t\\x9f\\x14%\\x00\\x08\\x00\\x03\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-09T14:25:35", "lines": 8, "newlines": 3, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0020 TO ILLUSTRATE &STR AROUND THE NAME OF A COMMAND */\n/* ASSUMING THAT YOUR INSTALLATION HAS A PROGRAM NAMED \"SELECT\" */\nCONTROL LIST /* SO YOU SEE WHAT IT IS TRYING TO EXECUTE */\n\n&STR(SELECT) /* EXECUTES THE PROGRAM SELECT, NOT THE CLIST COMMAND */\n\nSET &TSOCOMMAND = &STR(SELECT) /* ALSO CAN PUT IT IN A VARIABLE */\n&TSOCOMMAND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CLST0021": {"ttr": 564, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00C\\x01\\x15\\x07?\\x01\\x15\\t\\x9f\\x14%\\x00\\x04\\x00\\x04\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-14T00:00:00", "modifydate": "2015-04-09T14:25:43", "lines": 4, "newlines": 4, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0021 TO ILLUSTRATE &SUBSTR FUNCTION */\n WRITE &SUBSTR(1:2,ABCD)      /* GIVES \"AB\" */\n WRITE &SUBSTR(3:3,1+2+3+4)   /* DOESN'T DO MATH ON THE STRING.\n                              /* RETURNS \"2\" */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CLST0022": {"ttr": 770, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x08\\x01\\x15\\x07?\\x01\\x15\\t\\x9f\\x14@\\x00\\x06\\x00\\t\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-14T00:00:00", "modifydate": "2015-04-09T14:40:08", "lines": 6, "newlines": 9, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0022 TO ILLUSTRATE &SYSCAPS */\n CONTROL ASIS\n WRITE PLEASE ENTER YOUR NAME\n READ NAME\n WRITE THANK YOU, &NAME           /* DISPLAYS THE NAME AS ENTERED */\n WRITE THANK YOU, &SYSCAPS(&NAME) /* DISPLAYS UPPERCASED NAME */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0023": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00A\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14@\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:40:41", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0023 TO ILLUSTRATE &SYSDSN */\n IF &SYSDSN(MY.DATASET.DATA) = \"OK\" THEN +\n   DO\n      WRITE DATASET IS AVAILABLE, DOING AN ALLOCATE\n      ALLOCATE DDNAME(INFILE) SHR REUSE DSN(MY.DATASET.DATA)\n   END\n ELSE WRITE &SYSDSN(MY.DATASET.DATA) /* ERROR MESSAGE */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CLST0024": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14A\\x00\\t\\x00\\t\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:41:06", "lines": 9, "newlines": 9, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0024 TO ILLUSTRATE &SYSINDEX */\n SET ALPHABET = ABCDEFGHIJKLMNOPQRSTUVWXYZ\n WRITE &SYSINDEX(G,&ALPHABET,1)   /* GIVES 7 */\n\n SET ALPHABET = ABCDEFGHIJKLMNOPQRSTUVWXYZ\n WRITE &SYSINDEX(1,&ALPHABET,1)   /* NOT FOUND. GIVES 0*/\n\n SET ALPHABET = ABCDEFGHIJKLMNOPQRSTUVWXYZ\n WRITE &SYSINDEX(G,&ALPHABET,27)  /* GIVES 0 */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0025": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00R\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14A\\x00\\x05\\x00\\x05\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:41:52", "lines": 5, "newlines": 5, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0025 TO ILLUSTRATE &SYSONEBYTE AND &SYSTWOBYTE  */\n/* DBCS DATA CAN NOT BE DISPLAYED HERE.                */\n/* THE FOLLOWING SHOWS A CONVERSION TO DBCS            */\n/* AND BACK AGAIN TO CHARACTER DATA                    */\n WRITE &SYSONEBYTE(&SYSTWOBYTE(ABCD))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0026": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14B\\x00#\\x00#\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:42:58", "lines": 35, "newlines": 35, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0026 TO ILLUSTRATE FORMAT OF IF, THEN AND ELSE */\n/* THEN AND ELSE SPECIFIED */\nSET SALARY = 100\nWRITE PLEASE ENTER NAME  (JOE)\nREAD NAME\nIF &NAME = JOE +\nTHEN SET SALARY = &SALARY * 2\nELSE SET  SALARY = &SALARY - 1\nWRITE NEW SALARY IS &SALARY\n\n/* NO ELSE */\nSET SALARY = 100\nWRITE PLEASE ENTER NAME   (JOE)\nREAD NAME\nIF &NAME = JOE +\nTHEN SET SALARY = &SALARY * 2\nWRITE NEW SALARY IS &SALARY\n\n/* NULL THEN */\nSET SALARY = 100\nWRITE PLEASE ENTER NAME  (NOT JOE)\nREAD NAME\nIF &NAME = JOE +\nTHEN\nELSE SET  SALARY = &SALARY - 1\nWRITE NEW SALARY IS &SALARY\n\n/* NULL THEN WITH UNSET VARIABLE WHOSE VALUE IS NULL */\nSET SALARY = 100\nWRITE PLEASE ENTER NAME (NOT JOE)\nREAD NAME\nIF &NAME = JOE +\nTHEN &NULL\nELSE SET  SALARY = &SALARY - 1\nWRITE NEW SALARY IS &SALARY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0027": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14C\\x00\\x10\\x00\\x10\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:43:34", "lines": 16, "newlines": 16, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0027 TO ILLUSTRATE DO - END SEQUENCES */\n SET SALARY = 100\n WRITE PLEASE ENTER NAME (JOE)\n READ NAME\n IF &NAME = JOE +\n THEN DO /* NAME = JOE */\n     SET SALARY = &SALARY * 2\n     WRITE DOUBLING JOE'S SALARY\n     WRITE NEW SALARY IS &SALARY\n     END /* NAME = JOE */\n ELSE DO /* NAME NE  JOE */\n     SET  SALARY = &SALARY - 1\n     WRITE REDUCING SALARY BY ONE\n     WRITE NEW SALARY IS &SALARY\n     END /* NAME NE  JOE */\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0028": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14C\\x00\\x15\\x00\\x15\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:43:55", "lines": 21, "newlines": 21, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0028 TO ILLUSTRATE COMPOUND CONDITIONS */\n /*COMPOUND CONDITION.  THEN AND ELSE SPECIFIED */\n WRITE TODAY S DATE IS &STR(&SYSSDATE)\n SET SALARY = 100\n WRITE PLEASE ENTER NAME (JOE)\n READ NAME\n IF &NAME = JOE  AND &STR(&SYSSDATE) GT &STR(15/06/09) +\n THEN SET SALARY = &SALARY * 2\n ELSE SET SALARY = &SALARY - 1\n WRITE NEW SALARY IS &SALARY\n\n /*COMPOUND CONDITION.  THEN AND ELSE SPECIFIED */\n /*PARENTHESES ASSURE CORRECT INTERPRETATION */\n SET SALARY = 100\n WRITE PLEASE ENTER NAME  (JOE OR MARY)\n READ NAME\n IF (&NAME = JOE OR &NAME = MARY) +\n     AND &STR(&SYSSDATE) GT &STR(15/06/09) +\n THEN SET SALARY = &SALARY * 2\n ELSE SET SALARY = &SALARY - 1\n WRITE NEW SALARY IS &SALARY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0029": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14D\\x00\\x12\\x00\\x12\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:44:18", "lines": 18, "newlines": 18, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0029 TO ILLUSTRATE NESTED IF */\nWRITE PLEASE ENTER NAME AND DEPARTMENT (JOE DEPT1 OR DEPT2)\nSET SALARY = 100\nREAD NAME DEPARTMENT\nIF &NAME = JOE THEN +\n    DO /* NAME = JOE */\n        IF &DEPARTMENT = DEPT1 THEN +\n        DO /* DEPT 1 */\n         SET SALARY = &SALARY * 2\n        END /* DEPT 1 */\n     IF &DEPARTMENT = DEPT2 THEN +\n        DO /* DEPT 2 */\n         SET SALARY = &SALARY * 3\n        END /* DEPT 2 */\n    END /* NAME = JOE */\n\nWRITE NEW SALARY IS &SALARY\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0030": {"ttr": 786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14D\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:44:37", "lines": 12, "newlines": 12, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0030 TO ILLUSTRATE SELECT WITH NO EXPRESSION */\n SET A = 2\n SELECT\n     WHEN (&A = 1) +\n     WRITE A IS EQUAL TO 1\n     WHEN (&A = 2) +\n     WRITE A IS EQUAL TO 2\n     WHEN (&A = 3) +\n     WRITE A IS EQUAL TO 3\n OTHERWISE +\n     WRITE A WAS NOT EQUAL TO ANY OF THE VALUES\n END /* SELECT */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0031": {"ttr": 788, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00V\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14D\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:44:56", "lines": 12, "newlines": 12, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0031 TO ILLUSTRATE SELECT WITH AN EXPRESSION */\nSET A = 2\nSELECT (&A)\n    WHEN (1) +\n    WRITE A IS EQUAL TO 1\n    WHEN (2) +\n    WRITE A IS EQUAL TO 2\n    WHEN (3) +\n    WRITE A IS EQUAL TO 3\nOTHERWISE +\n    WRITE A WAS NOT EQUAL TO ANY OF THE VALUES\nEND /* SELECT */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0032": {"ttr": 790, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14E\\x00\\r\\x00\\r\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:45:11", "lines": 13, "newlines": 13, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0032 TO ILLUSTRATE SELECT WITH A MORE COMPLEX EXPRESSION */\nSET A = 2\nSET B = 3\nSELECT (&A + &B)\n    WHEN (2) +\n    WRITE TOTAL IS 2\n    WHEN (3) +\n    WRITE TOTAL IS 3\n    WHEN (5) +\n    WRITE TOTAL IS 5\nOTHERWISE +\n    WRITE TOTAL WAS NOT EQUAL TO ANY OF THE VALUES\nEND /* SELECT */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0033": {"ttr": 792, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14E\\x00\\x06\\x00\\x06\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:45:38", "lines": 6, "newlines": 6, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0033 TO ILLUSTRATE DO WHILE */\n SET REPLY =  /* SET TO NULL */\n DO WHILE &REPLY =\n   WRITE PLEASE PRESS ENTER TO CONTINUE. ANYTHING ELSE TO STOP\n   READ REPLY\n END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0034": {"ttr": 794, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00V\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14E\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:45:56", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0034 TO ILLUSTRATE DO WHILE */\n SET TOTAL = 0\n DO WHILE &TOTAL < 10 /*(STOP WHEN NOT TRUE) */\n    SET TOTAL = &TOTAL + 1\n    /* ACTION */\n    WRITE &TOTAL\n END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0035": {"ttr": 796, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14F\\x00\\x08\\x00\\x08\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:46:15", "lines": 8, "newlines": 8, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0035 TO ILLUSTRATE DO WHILE */\nSET INDEX = 1\nSET MAX   = 10\nDO WHILE &INDEX < &MAX /*(STOP WHEN NOT TRUE) */\n   SET INDEX = &INDEX + 1\n   /* ACTION */\n   WRITE &INDEX\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0036": {"ttr": 798, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00P\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14F\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:46:50", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0036 TO ILLUSTRATE DO UNTIL */\nSET REPLY =  /* SET TO NULL */\nDO UNTIL &REPLY = STOP /*(STOP WHEN TRUE) */\n   WRITE ENTER STOP TO TERMINATE LOOP, OR SOMETHING ELSE TO CONTINUE\n   READ REPLY\n   WRITE THANK YOU FOR YOUR REPLY\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0037": {"ttr": 800, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14G\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:47:05", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0037 TO ILLUSTRATE DO UNTIL */\nSET TOTAL = 0\nDO UNTIL &TOTAL = 10 /*(STOP WHEN TRUE) */\n    SET TOTAL = &TOTAL + 1\n    /* ACTION */\n    WRITE &TOTAL\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0038": {"ttr": 802, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14G\\x00\\x08\\x00\\x08\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:47:21", "lines": 8, "newlines": 8, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0038 TO ILLUSTRATE DO UNTIL */\nSET INDEX = 1\nSET MAX   = 10\nDO UNTIL &INDEX = &MAX /*(STOP WHEN TRUE) */\n    SET INDEX = &INDEX + 1\n    /* ACTION */\n    WRITE &INDEX\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0039": {"ttr": 804, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00E\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14G\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:47:45", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0039 TO ILLUSTRATE DO UNTIL */\nSET STOP = NO\nDO UNTIL &STOP = STOP\n    WRITE IN THE LOOP\n    WRITE ENTER STOP TO STOP, ANYTHING ELSE TO CONTINUE\n    READ STOP\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0040": {"ttr": 806, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14H\\x00\\x11\\x00\\x11\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:48:10", "lines": 17, "newlines": 17, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0040 DO INCREMENTING A VARIABLE TO A LIMIT */\nWRITE &STR(INDEX = 1 TO 20 BY 1)\nDO INDEX = 1 TO 20 BY 1\n    WRITE &INDEX\nEND\n\nWRITE\nWRITE &STR(INDEX = 1 TO 20 BY 2)\nDO INDEX = 1 TO 20 BY 2\n    WRITE &INDEX\nEND\n\nWRITE\nWRITE &STR(INDEX = 10 TO -2 BY -1)\nDO INDEX = 10 TO -2 BY -1\n    WRITE &INDEX\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0041": {"ttr": 808, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x009\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14H\\x00\\x10\\x00\\x10\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:48:39", "lines": 16, "newlines": 16, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0041 TO ILLUSTRATE ATTN ROUTINE */\nSET &NULL =\nATTN +\n  DO\n    WRITE YOU HIT ATTN/PA1!\n    WRITE DO YOU WANT TO CONTINUE OR STOP?\n    WRITE ENTER STOP OR ANYTHING ELSE TO CONTINUE\n    READ CS\n    IF &CS EQ STOP THEN EXIT\n    WRITE ENTER YOUR NAME NOW\n    &NULL  /* REEXECUTE STATEMENT THAT WAS INTERRUPTED (READ) */\n  END /* ATTN DO */\n\nWRITE PLEASE ENTER YOUR NAME\nREAD NAME\nWRITE THANK YOU, &NAME, FOR ENTERING YOUR NAME SUCCESSFULLY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0042": {"ttr": 810, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00#\\x01\\x15\\t\\x9f\\x01\\x15\\x11\\x1f\\x11\\x17\\x00\\x12\\x00\\x13\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-21T11:17:23", "lines": 18, "newlines": 19, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0042 TO ILLUSTRATE ERROR ROUTINE */\n/* A TSO ALLOCATE FAILS, DUE TO WRONG DSN */\n/* CONTROL GOES TO ERROR ROUT. WHERE USER IS ASKED FOR A GOOD DSN */\n CONTROL LIST    /* TO SHOW COMMAND BEING EXECUTED */\n CONTROL NOFLUSH /* WITHOUT THIS, ALLOC BELOW KICKS OUT OF CLIST */\n ERROR +\n   DO\n     WRITE CAN'T ALLOCATE FILE\n     WRITE DO YOU WANT TO ENTER A VALID DSN?\n     READ YN\n     IF &YN NE YES THEN EXIT\n     WRITE ENTER VALID DSN\n     READ DSN\n     ALLOCATE DDNAME(INFILE) SHR REUSE DSN(&DSN)\n     RETURN /* GO TO STATEMENT AFTER ONE THAT SENT HERE */\n END /* END OF ERROR ROUTINE */\n\n ALLOCATE DDNAME(INFILE) SHR REUSE DSN(ABC.NOTHERE.DATA)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0043": {"ttr": 812, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00W\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14P\\x00\\x10\\x00\\x10\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:50:57", "lines": 16, "newlines": 16, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0043 GO TO LABEL IN VARIABLE */\nWRITE WHICH LABEL DO YOU WANT TO GO TO? (LABEL1, LABEL2, LABEL3)\nREAD LABEL\nIF &LABEL = THEN EXIT /* STOP IF NOTHING ENTERED */\nGOTO &LABEL\nEXIT\n\nLABEL1: +\nWRITE IN LABEL1\nEXIT\nLABEL2: +\nWRITE IN LABEL2\nEXIT\nLABEL3:+\nWRITE IN LABEL3\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0044": {"ttr": 814, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14Q\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:51:26", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0044 TO ILLUSTRATE THE END THAT ENDS THE PROGRAM */\n/* THIS SHOULD NEVER BE ALLOWED TO HAPPEN.              */\n/* INSTEAD, THE LOGICAL END OF YOUR PROGRAM SHOULD BE   */\n/* EXIT                                                 */\nWRITE THIS IS JUST BEFORE THE END STATEMENT\nEND\nWRITE THIS IS RIGHT AFTER THE END STATEMENT (NEVER GET HERE)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0045": {"ttr": 816, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14Q\\x00\\x11\\x00\\x11\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:51:44", "lines": 17, "newlines": 17, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0045  SIMPLE SUBPROCEDURE. JUST DO SOMETHING */\nWRITE IN MAIN PART OF CLIST\nSET SALARY = 1000\nSYSCALL MYSUB /* CALLING THE SUBPROCEDURE */\nWRITE AFTER CALLING THE SUBPROCEDURE\nWRITE ILLUSTRATING THAT THE VARIABLE DEPARTMENT IS NOT SHARED:\nWRITE &DEPARTMENT\nEXIT /* LOGICAL END OF PROGRAM (NOT REQUIRED) */\n\nMYSUB: PROC 0\n   WRITE CONTROL IS IN THE SUBPROCEDURE\n   WRITE &SYSDATE &SYSTIME\n   WRITE ILLUSTRATING THAT THE VARIABLE SALARY IS NOT SHARED:\n   WRITE &SALARY\n   SET DEPARTMENT = 2D1\nEND /* LOGICAL END OF THE SUBPROCEDURE. RETURNS CONTROL */\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0046": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14R\\x00\\x11\\x00\\x11\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:52:09", "lines": 17, "newlines": 17, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0046  SUBPROCEDURE. PASS DATA TO IT                 */\n/* SUBPROCEDURE RETURNS CODE INDICATING SUCCESS OR FAILURE */\nWRITE IN MAIN PART OF CLIST\nSET DSN = MYLIB.DATA.CLIST\nSYSCALL MYSUB &DSN /* CALLING THE SUBPROCEDURE, PASSING &DSN */\nWRITE RETURN CODE FROM SUBPROCEDURE WAS &LASTCC\nEXIT  /* LOGICAL END OF PROGRAM (NOT REQUIRED) */\n\nMYSUB: PROC 1 DATASET_PASSED_TO_PROCEDURE\n   CONTROL LIST NOFLUSH\n   WRITE SUBPROCEDURE RECEIVED &DATASET_PASSED_TO_PROCEDURE\n   ALLOCATE DDN(TEMP001) SHR REUSE DSN(&DATASET_PASSED_TO_PROCEDURE)\n   SET HOLD_CC = &LASTCC\n   WRITE &HOLD_CC WAS RETURN CODE FROM ALLOCATE\n   RETURN CODE(&HOLD_CC) /* RETURNS CONTROL AND PASSES NUMBER BACK */\nEND /* LOGICAL END OF THE SUBPROCEDURE. */\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0047": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14R\\x00\\x10\\x00\\x10\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:52:32", "lines": 16, "newlines": 16, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0047  SUBPROCEDURE. PASS DATA TO IT                 */\n/* SUBPROCEDURE PASSES BACK THE RESULT OF A CALCULATION    */\nSET SALARY        = 1000\nSET MULTIPLY_BY   = 10\nSET RETURNED_DATA = 0 /* MUST HAVE A VALUE! */\nSYSCALL MYSUB &SALARY &MULTIPLY_BY RETURNED_DATA\nWRITE SUBPROCEDURE CALCULATED NEW SALARY AS &RETURNED_DATA\nEXIT  /* LOGICAL END OF PROGRAM (NOT REQUIRED) */\n\nMYSUB: PROC 3 SAL MULT RET_DATA\n   SYSREF RET_DATA\n   WRITE IN SUBPROCEDURE: RECEIVED &SAL AND &MULT\n   SET RET_DATA = &SAL * &MULT\n   WRITE IN SUBPROCEDURE: CALCULATED &RET_DATA\nEND /* LOGICAL END OF THE SUBPROCEDURE. RETURNS CONTROL */\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0048": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14S\\x00\\x10\\x00\\x10\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:53:07", "lines": 16, "newlines": 16, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0048  SUBPROCEDURE. PASS DATA TO IT                   */\n/* SUBPROCEDURE SHARES ONE VARIABLE WITH MAIN PART OF CLIST  */\n/* USING NGLOBAL                                             */\nSET SALARY        = 1000\nSET MULTIPLY_BY   = 15\nSYSCALL MYSUB &SALARY &MULTIPLY_BY\nWRITE SUBPROCEDURE CALCULATED NEW SALARY AS &RET_DATA\nEXIT  /* LOGICAL END OF PROGRAM (NOT REQUIRED) */\n\nMYSUB: PROC 2 SAL MULT\n   NGLOBAL RET_DATA\n   WRITE IN SUBPROCEDURE: RECEIVED &SAL AND &MULT\n   SET RET_DATA = &SAL * &MULT\n   WRITE IN SUBPROCEDURE: CALCULATED &RET_DATA\nEND /* LOGICAL END OF THE SUBPROCEDURE. RETURNS CONTROL */\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0049": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x009\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14T\\x00\\x0b\\x00\\x0b\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:54:39", "lines": 11, "newlines": 11, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0049 TO ILLUSTRATE PROC STATEMENT */\nPROC 3 NAME ADDR PHONE   STATE(NY) WEEKDAY(MONDAY) CALENDAR(GREGORIAN)\nCLS\nWRITE &STR(POSITIONAL PARAMETERS AS RESOLVED)\nWRITE &STR(NAME) &NAME\nWRITE &STR(ADDR) &ADDR\nWRITE &STR(PHONE) &PHONE\nWRITE &STR(KEYWORD    PARAMETERS AS RESOLVED)\nWRITE &STR(STATE) &STATE\nWRITE &STR(WEEKDAY) &WEEKDAY\nWRITE &STR(CALENDAR) &CALENDAR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0050": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14U\\x00\\x04\\x00\\x04\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:55:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0050 TO ILLUSTRATE AN ISPF COMMAND */\nIF &SYSISPF = ACTIVE THEN +\nISPEXEC VGET SAVEDVAR\nWRITE &SAVEDVAR /* NOTHING WAS SET, SO VARIABLE IS NULL */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0051": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14U\\x00\\x03\\x00\\x03\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:55:26", "lines": 3, "newlines": 3, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0051 TO ILLUSTRATE A SHORT ISPF EDITOR MACRO */\nISREDIT MACRO            /* MUST BE FIRST THING IN THE PROGRAM */\nISREDIT FIND FIRST A     /* A SIMPLE EDITOR COMMAND */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0052": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14V\\x00\\x15\\x00\\x15\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:56:21", "lines": 21, "newlines": 21, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0052 EXAMPLE OF READING A FILE */\n ALLOC DDN(INFILE) SHR REUSE DSN('DATASET-YOU-ARE-READING')\n ERROR DO\n      WRITE &LASTCC\n      IF &LASTCC NE 0 THEN SET EOF = YES\n      RETURN\n END\n\n SET EOF = NO\n\n OPENFILE INFILE INPUT\n DO UNTIL &EOF = YES\n      GETFILE INFILE\n      IF &EOF NE YES THEN DO\n          WRITE RECORD READ WAS:\n          WRITE &INFILE\n      END /* EOF NE YES */\n END /* DO WHILE */\n\n CLOSFILE INFILE\n FREE DDNAME(INFILE)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0053": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x009\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14V\\x00\\r\\x00\\r\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:56:39", "lines": 13, "newlines": 13, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0053 TO ILLUSTRATE WRITING THREE RECORDS */\nCONTROL LIST CONLIST\nALLOCATE DDN(OUTFILE) OLD REUSE DSN('GABRIEL.TEST2.DATA')\nOPENFILE OUTFILE OUTPUT\nSET OUTFILE = RECORD1 WILL BE WRITTEN\nPUTFILE OUTFILE\nSET OUTFILE = RECORD2 WILL BE WRITTEN\nPUTFILE OUTFILE\nSET OUTFILE = RECORD3 WILL BE WRITTEN\nPUTFILE OUTFILE\n\nCLOSFILE OUTFILE\nFREE DDN(OUTFILE)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0054": {"ttr": 1041, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00F\\x01\\x15\\t\\x9f\\x01\\x15\\x11_\\x10\\x07\\x00\\x14\\x00\\x14\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-25T10:07:46", "lines": 20, "newlines": 20, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0054 TO ILLUSTRATE WRITING RECORDS WITH A DO LOOP */\nCONTROL LIST CONLIST\nALLOCATE DDN(OUTFILE) OLD REUSE DSN('USERID.TEST2.DATA')\nOPENFILE OUTFILE OUTPUT\n\nSET STOP = NO\nDO UNTIL &STOP = STOP\n    WRITE IN THE LOOP\n    TIME\n    WRITE ENTER A LINE OF DATA TO BE WRITTEN. JUST ENTER, TO STOP\n    READ DATA\n    IF &DATA = THEN SET STOP = STOP\n    ELSE DO  /* DATA = NULL */\n        SET OUTFILE = &DATA\n        PUTFILE OUTFILE\n    END      /* DATA = NULL */\nEND /* DO UNTIL */\nCLOSFILE OUTFILE\nFREE DDN(OUTFILE)\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0055": {"ttr": 1043, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14W\\x00-\\x00-\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:57:28", "lines": 45, "newlines": 45, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0055  QUICK STATUS.                                          */\n/* EXECUTES THE TSO COMMAND STATUS, CAPTURES THE DISPLAYED OUTPUT,  */\n/* LOOPS THROUGH THE OUTPUT,                                        */\n/* AND IF THE MESSAGE IS NO JOBS FOUND, IT EXITS                    */\n/* IT LOOPS AGAIN, COUNTING THE NUMBER OF JOBS IN EACH STATUS       */\nSET EXECUTING_CTR = 0\nSET WAIT_CTR      = 0\nSET OUTPUT_CTR    = 0\nSET SYSOUTTRAP    = 100   /* ARBITRARILY CHOOSING 100 LINES. */\nSTATUS                 /* GET NAMES OF JOBS AND INFO ABOUT THEM */\nSET SYSOUTTRAP    = 0              /* TURN OFF CAPTURING. */\nSET MAX_RETURNED = &SYSOUTLINE  /* HOW MANY LINES RETURNED */\nSET INDEX = 0\nDO INDEX = 1 TO &MAX_RETURNED\n        SET INDEX = &INDEX + 1         /* INCREMENT INDEX */\n        SET CURRENT_LINE = &STR(&&SYSOUTLINE&INDEX) /* NOTE 2 */\n        /* WRITE LINE RETRIEVED IS &STR(&CURRENT_LINE) */\n        IF &SYSINDEX(NO JOBS FOUND,&CURRENT_LINE,1) GT 0 THEN +\n        DO\n            WRITE YOU HAVE NO JOBS IN THE SYSTEM NOW\n            EXIT\n        END /* NO JOBS FOUND */\n END /* END DO WHILE */\n SET INDEX = 0\n DO WHILE &INDEX LE &MAX_RETURNED       /* NOTE 1 */\n         SET INDEX = &INDEX + 1         /* INCREMENT INDEX */\n         SET CURRENT_LINE = &STR(&&SYSOUTLINE&INDEX) /* NOTE 2 */\n         /* WRITE LINE RETRIEVED IS &STR(&CURRENT_LINE) */\n                                                           /* NOTE 3 */\n         IF &SYSINDEX(EXECUTING,&CURRENT_LINE,1) GT 0 THEN +\n            SET EXECUTING_CTR = &EXECUTING_CTR + 1\n\n         IF &SYSINDEX(OUTPUT QUEUE,&CURRENT_LINE,1) GT 0 THEN +\n            SET OUTPUT_CTR = &OUTPUT_CTR + 1\n\n         IF &SYSINDEX(WAITING FOR,&CURRENT_LINE,1) GT 0 THEN +\n            SET WAIT_CTR = &WAIT_CTR + 1\n\nEND /* END DO WHILE */\n WRITE EXECUTING             &EXECUTING_CTR\n WRITE ON OUTPUT QUEUE       &OUTPUT_CTR\n WRITE WAITING FOR EXECUTION &WAIT_CTR\n\n\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0056": {"ttr": 1045, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14W\\x00%\\x00%\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:57:58", "lines": 37, "newlines": 37, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0056 - CANJOB\n /*\n /* PURPOSE: DOES A STATUS, THEN ASKS YOU FOR JOB SUFFIX,\n /*          AND JES JOB NUMBER\n /*          THEN CANCELS THE JOB WITH A PURGE\n /*\n /* USE: %CLST0058\n /*      THEN REPLY WITH JOB SUFFIX,\n /*      I.E. LETTER/NUMBER APPENDED TO YOUR USERID ON JOB NAME\n /*      AND JES JOB NUMBER, NUMERIC PART ONLY\n /*\n /*      FOR EXAMPLE:\n /*\n /*       %CANJOB\n /*       - MESSAGE APPEARS: TSOU01A(JOB01234) EXECUTING\n /*       A   1234  */\n STATUS\n WRITE TO CANCEL ONE OF YOUR JOBS,\n  WRITE - TYPE IN:\n  WRITE - JOB SUFFIX     JES JOB NUMBER\n  WRITE - EXAMPLE:     P  1234\n  WRITE\n  READ SUFFIX NUMBER\n  IF &SUFFIX = THEN +\n     DO\n       WRITE NEED JOB SUFFIX AND JOB NUMBER, NO COMMAS\n       EXIT\n     END\n  IF &SUFFIX = THEN EXIT\n  IF &SUFFIX = STOP  THEN EXIT\n\n CONTROL LIST\n SET &RPAREN = )\n SET &LPAREN = &STR((\n CANCEL &SYSUID.&SUFFIX.&LPAREN.JOB&NUMBER&RPAREN, PURGE /* NOTE 2 */\n /* THE COMMAND CREATED WILL BE LIKE THIS:\n /* CANCEL USERIDP(JOB1234), PURGE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0057": {"ttr": 1047, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x005\\x01\\x15\\t\\x9f\\x01\\x15\\x11_\\x10 \\x00%\\x00&\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-25T10:20:35", "lines": 37, "newlines": 38, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0057 SUBMIT JCL USING THE LINE MODE EDITOR\n/*    SUBMITTING JCL FOR BATCH PROCESSING.\n/*    INSERTING VARIABLE VALUES INTO THE JCL.\n/*    USING THE TSO LINE MODE EDITOR TO CREATE\n/*    A TEMPORARY FILE, SUBMIT IT,\n/*    AND EXIT WITHOUT SAVING IT\n/*\nSET TEMP_FILE_NAME = '&SYSUID..TEMP.SUBMIT.CNTL'\nSET PROGRAM_TO_EXECUTE = MYPROG1\nSET JCL_DELIMITER = &STR(/*)\n\n/* DELETE, IF IT EXISTS. IT'S A TEMP FILE.\n/* YOU SHOULD HAVE NOTHING GOOD IN A TEMP FILE. GOODBYE.  */\n\nCONTROL NOMSG\nDELETE &TEMP_FILE_NAME\nCONTROL MSG\nCONTROL LIST\nALLOCATE DSN(&TEMP_FILE_NAME.) NEW REUSE TRACKS +\n   SPACE(3,1) LRECL(80) RECFM(F,B) BLKSIZE(8000)\n\nEDIT &TEMP_FILE_NAME CNTL OLD NUM EMODE\n10 //&SYSUID.@ JOB (0),'TEST JOB ',\n20 //         TYPRUN=SCAN,\n30 //         MSGLEVEL=1,CLASS=A,NOTIFY=&SYSUID\n40 //STEP1    EXEC PGM=&PROGRAM_TO_EXECUTE\n50 //INFILE   DD DSN=&SYSUID..INPUT.FILE,DISP=SHR\n60 //OUTFILE  DD SYSOUT=A\n70 //SYSIN    DD *\n80 &SYSDATE &SYSTIME\n90 &JCL_DELIMITER\n\nLIST\nSUBMIT\nEND NOSAVE\n\nSTATUS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0058": {"ttr": 1049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14X\\x00\\x14\\x00\\x14\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:58:58", "lines": 20, "newlines": 20, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0058 CALCULATE SQUARE      ROOT OF A NUMBER */\n/* IN A SUBPROCEDURE                               */\n SET RESULT = 0\n SYSCALL SQRT 646 RESULT\n WRITE THE SQUARE ROOT IS &RESULT\n\n EXIT /* LOGICAL END OF PROGRAM (NOT NEEDED) */\n\n SQRT: PROC 2 NUMBER RESULT_DATA\n SYSREF RESULT_DATA\n SET GUESS = &NUMBER / 2\n\n DO I = 1 TO 50\n    SET NEW_GUESS = (&GUESS + (&NUMBER / &GUESS)) / 2\n    SET GUESS = &NEW_GUESS\n    WRITE &GUESS\n END /* DO I = 1 TO 50 */\n\n SET RESULT_DATA = &NEW_GUESS\n END /* END SUBPROCEDURE */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0059": {"ttr": 1051, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x15\\t\\x9f\\x01\\x15\\t\\x9f\\x14Y\\x00\\x19\\x00\\x19\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-09T00:00:00", "modifydate": "2015-04-09T14:59:26", "lines": 25, "newlines": 25, "modlines": 0, "user": "GABRIEL"}, "text": " /* CLST0059 - $HIDEALL MACRO                             */\n /* A MACRO FOR THE TSO/ISPF EDITOR.                      */\n /* USED WITHIN A TSO/ISPF EDIT SESSION.                  */\n /* I SUGGEST YOU RENAME IT $HIDEALL                      */\n /* IT EXCLUDES (HIDES) ALL LINES OF THE FILE WHICH       */\n /* CONTAIN A SPECIFIC CHARACTER STRING.                  */\n /* TO USE, WITHIN A TSO/ISPF EDIT SESSION,               */\n /* TYPE $HIDEALL CHARACTER-STRING ON THE COMMAND LINE.   */\n /* EXAMPLE:                                              */\n /* $HIDEALL DSN=                                         */\n\n ISREDIT MACRO (PARM1)\n\n IF &LASTCC GT 0 THEN GOTO NOT_AS_A_MACRO\n IF &PARM1 = THEN EXIT\n ISREDIT EXCLUDE ALL\n ISREDIT FIND ALL '&PARM1'\n ISREDIT FLIP\n EXIT /* NORMAL END OF PROGRAM */\n\n NOT_AS_A_MACRO: +\n WRITE THIS IS A TSO/ISPF EDITOR MACRO\n WRITE IT MAY BE EXECUTED ONLY IN THE ISPF EDITOR\n WRITE BY TYPING $HIDEALL CHAR-STRING ON THE COMMAND LINE\n EXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0060": {"ttr": 1053, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00Q\\x01\\x14\\x14o\\x01\\x15\\x11_\\x10&\\x00\\x0c\\x00\\x10\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2014-05-26T00:00:00", "modifydate": "2015-04-25T10:26:51", "lines": 12, "newlines": 16, "modlines": 0, "user": "GABRIEL"}, "text": "/* CLST0060 MODEL CLIST\n/* FOR TESTING CLIST TO REXX PROC CONVERTER PROGRAM\nPROC 3 NAME ADDR PHONE   STATE(NY) WEEKDAY(MONDAY) CALENDAR(GREGORIAN)\nWRITE &STR(POSITIONAL PARAMETERS AS RESOLVED)\nWRITE &STR(NAME) &NAME\nWRITE &STR(ADDR) &ADDR\nWRITE &STR(PHONE) &PHONE\nWRITE &STR(KEYWORD    PARAMETERS AS RESOLVED)\nWRITE &STR(STATE) &STATE\nWRITE &STR(WEEKDAY) &WEEKDAY\nWRITE &STR(CALENDAR) &CALENDAR\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLST0061": {"ttr": 1055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00A\\x01\\x15\\x10\\x8f\\x01\\x15\\x10\\x8f\\x107\\x00\\x1e\\x00\\x1e\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-18T00:00:00", "modifydate": "2015-04-18T10:37:41", "lines": 30, "newlines": 30, "modlines": 0, "user": "GABRIEL"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "REXX0001": {"ttr": 1057, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00$\\x01\\x15\\x06?\\x01\\x15\\x10\\x0f\\x13\\x14\\x00\\x05\\x00\\x0e\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-10T13:14:24", "lines": 5, "newlines": 14, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0001 TO ILLUSTRATE VARIABLES IN VARIABLES */\nDAY = \"MONDAY\"\nWHICHDAY = \"DAY\"\nSAY VALUE(\"WHICHDAY\")   /* GIVES DAY */\nSAY VALUE(WHICHDAY)     /* GIVES MONDAY */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0002": {"ttr": 1059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x13\\x15\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T13:15:11", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0002 TO SHOW HOW IT HANDLES SLASHES IN DATA */\n NAME = \"JOE\" /* NORMAL WAY TO SPECIFY A LITERAL          */\n NAME = JOE   /* JOE IS UPPERCASED AND TAKEN AS A LITERAL.*/\n BAD_DATE  = 09/06/15   /* DIVISION IS ATTEMPTED = 0.1 */\n SAY BAD_DATE\n GOOD_DATE = \"09/06/15\" /* NO DIVISION IS DONE   */\n SAY GOOD_DATE\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0003": {"ttr": 1061, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x13\\x16\\x00\\x06\\x00\\x06\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T13:16:11", "lines": 6, "newlines": 6, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0003 LEADING AND TRAILING BLANKS IN LITERALS */\n NAME = \"     JOE\"\n SAY \"XX\"NAME\"XX\"\n\n NAME = \"JOE     \"\n SAY \"XX\"NAME\"XX\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0004": {"ttr": 1063, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x13\\x16\\x00\\x16\\x00\\x16\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T13:16:58", "lines": 22, "newlines": 22, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX PROGRAM REXX0004 TO SHOW LABELS */\nSIGNAL HERE\n/* CODE */\n/* CODE */\n\nHERE:\nSAY \"AFTER THE LABEL HERE\"\n/* CODE */\n\nSIGNAL THERE\n/* CODE */\n/* CODE */\n\nTHERE:\nSAY \"AFTER THE LABEL THERE\"\n\nEXIT /* EXIT NEEDED SO CONTROL DOESN'T FALL INTO SUBROUTINE */\n\nMYSUBROUTINE:\nA = 1 + 2\nRETURN\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0005": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x13\\x01\\x15\\x06?\\x01\\x15\\x10\\x0f\\x13\\x19\\x00\\x18\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-10T13:19:13", "lines": 24, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0005 TO ILLUSTRATE REXX ARITHMETIC */\n\nTOTAL = 1 + 1          /* ADDITION */\nSAY TOTAL              /* 2 */\n\nTOTAL = 1 - 1          /* SUBTRACTION */\nSAY TOTAL              /* 0 */\n\nTOTAL = 16 / 4         /* DIVISION */\nSAY TOTAL              /* 4 */\n\nTOTAL = 16 / 5         /* DIVISION */\nSAY TOTAL              /* 3 */\n\nREMAINDER = 16 // 5    /* REMAINDER */\nSAY REMAINDER          /* 1 */\n\nTOTAL = 4 ** 2         /* EXPONENTIATION */\nSAY TOTAL              /* 16 */\n\n/* DOESN'T WORK: FRACTIONAL EXPONENT\nTOTAL = 4 ** 2.2       /* EXPONENTIATION */\nSAY TOTAL\n*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXX0006": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00C\\x01\\x15\\x06?\\x01\\x15\\x10\\x0f\\x13!\\x00\\x04\\x00\\x00\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-10T13:21:43", "lines": 4, "newlines": 0, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX PROGRAM REXX0006 TO SHOW DATE FUNCTION*/\n SAY DATE(U)   /* FORMAT 06/09/15  */\n MYDATE = DATE(U)\n SAY MYDATE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXX0007": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00&\\x01\\x15\\x06?\\x01\\x15\\x10\\x0f\\x146\\x00\\t\\x00\\n\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-04-10T14:36:26", "lines": 9, "newlines": 10, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX PROGRAM REXX0007 BREAKING UP DATA INTO WORDS. */\nSIMULATE_SYSDVAL = \"A STRING OF DATA\"\nPARSE UPPER VAR SIMULATE_SYSDVAL VAR1 VAR2 VAR3 VAR4 VAR5\n/* IN THIS EXAMPLE, VAR5 WILL BE NULL */\nSAY VAR1\nSAY VAR2\nSAY VAR3\nSAY VAR4\nSAY VAR5\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0008": {"ttr": 1287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x14\\x01\\x15\\x10\\x0f\\x01\\x15\\x11_\\t \\x00\\x0e\\x00\\x0e\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-25T09:20:14", "lines": 14, "newlines": 14, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX PROGRAM REXX0008 WHICH WILL EXECUTE THE TSO COMMAND LISTDS\n     AND CAPTURE THE OUTPUT THAT IS NORMALLY DISPLAYED AT THE TERMINAL\n     THIS EXAMPLE DISPLAYS THE CAPTURED DATA.\n     YOU CAN DO OTHER THINGS WITH THE CAPTURED DATA.\n */\n CALL OUTTRAP \"SYSOUTLINE.\", \"100\"/* ARBITRARILY CHOOSING 100 LINES. */\n                                  /* YOU CAN USE A DIFFERENT VALUE */\n\n \"LISTDS  'USERID.TEST1.CLIST'\"   /* USE A VALID DATASET NAME HERE */\n CALL OUTTRAP \"OFF\"\n MAX_RETURNED = SYSOUTLINE.0\n DO INDEX = 1 TO MAX_RETURNED     /* THIS LOOP DISPLAYS ALL LINES */\n     SAY \"LINE RETRIEVED IS\" SYSOUTLINE.INDEX\n END INDEX\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0009": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\"\\x01\\x15\\x06?\\x01\\x15\\x12_\\t\\x17\\x00\\x05\\x00\\x06\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-05-05T09:17:22", "lines": 5, "newlines": 6, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0009 */\nSAY \"THERE IS NO REXX PROGRAM CORRESPONDING TO CLST0009\"\nSAY \"BECAUSE REXX AND CLIST WORK DIFFERENTLY \"\nSAY \"WHEN THE DATASET DOESN'T EXIST\"\nSAY \"REXX0008 AND REXX0009 WOULD BE THE SAME\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0010": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00T\\x01\\x15\\x06?\\x01\\x15\\x12_\\t \\x00\\x05\\x00\\x04\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-04T00:00:00", "modifydate": "2015-05-05T09:20:54", "lines": 5, "newlines": 4, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0010 */\nSAY \"THERE IS NO REXX PROGRAM CORRESPONDING TO CLST0010\"\nSAY \"BECAUSE REXX AND CLIST WORK DIFFERENTLY \"\nSAY \"CLIST SETS &LASTCC AND &MAXCC AFTER CLIST INSTRUCTIONS\"\nSAY \"REXX SETS RC ONLY AFTER TSO COMMANDS   \"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0011": {"ttr": 1293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x12\\x01\\x15\\x10\\x0f\\x01\\x15\\x12_\\t\"\\x00\\x04\\x00\\x01\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-05-05T09:22:12", "lines": 4, "newlines": 1, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0011 */\nSAY \"THERE IS NO REXX PROGRAM CORRESPONDING TO CLST0011\"\nSAY \"BECAUSE REXX AND CLIST WORK DIFFERENTLY \"\nSAY \"REXX HAS NOTHING LIKE CLIST CONTROL NOFLUSH\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0012": {"ttr": 1295, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x13G\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T13:47:29", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0012 TO TEST DATATYPE FUNCTION */\nSAY DATATYPE(ABCD) \"ABCD\"    /* CHAR */\nSAY DATATYPE(1234) \"1234\"    /* NUM */\nSAY DATATYPE(1 + 1) \"1 + 1\"  /* NUM */\nSAY DATATYPE(10.20) \"10.20\"  /* NUM */\nSAY DATATYPE(DSN.ABCD.DATA) \"DSN.ABCD.DATA\" /*CHAR*/\nSAY DATATYPE(ABCD1234) \"ABCD1234\" /* CHAR */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0013": {"ttr": 1297, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x11\\x01\\x15\\x06O\\x01\\x15\\x10\\x0f\\x13Q\\x00\\x08\\x00\\n\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-05T00:00:00", "modifydate": "2015-04-10T13:51:11", "lines": 8, "newlines": 10, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0013 TO SHOW USE OF QUOTES */\nTRACE C\nSAY \"1 + 1\" /* 1 + 1 */\nSAY 1 + 1   /* 2 */\nSAY \"1 + X\" /* 1 + X */\nSAY 1 + X   /* ERROR */\n\n\"ALLOCATE SPACE(\"1 + 1\") NEW DELETE\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0014": {"ttr": 1299, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00@\\x01\\x15\\x06O\\x01\\x15\\x10\\x0f\\x13S\\x00\\n\\x00\\x13\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-05T00:00:00", "modifydate": "2015-04-10T13:53:40", "lines": 10, "newlines": 19, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0014 TO TEST THE LENGTH FUNCTION */\nSAY LENGTH(ABCD)        /* 4 */\nSAY LENGTH(1 + 2)       /* 1 */\nVAR = 1 + 2\nSAY LENGTH(VAR)         /* 1 WORKS THE SAME WITH VARIABLE */\nSAY LENGTH(\"1 + 2\")     /* 5 */\nSAY LENGTH(      ABCD)  /* 4 */\nSAY LENGTH(\"    ABCD\")  /* 8 */\nSAY LENGTH(ABCD      )  /* 4 */\nSAY LENGTH(\"ABCD    \")  /* 8 */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0015": {"ttr": 1301, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00'\\x01\\x15\\x06\\x8f\\x01\\x15\\x12_\\t#\\x00\\x03\\x00\\x12\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-09T00:00:00", "modifydate": "2015-05-05T09:23:27", "lines": 3, "newlines": 18, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0015 */\nSAY \"THERE IS NO REXX PROGRAM CORRESPONDING TO CLST0015\"\nSAY \"REXX HAS NOTHING LIKE THE &NRSTR FUNCTION \"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0016": {"ttr": 1303, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x006\\x01\\x15\\x06\\x8f\\x01\\x15\\x12_\\t$\\x00\\x03\\x00\\x05\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-09T00:00:00", "modifydate": "2015-05-05T09:24:36", "lines": 3, "newlines": 5, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0016 */\nSAY \"THERE IS NO REXX PROGRAM CORRESPONDING TO CLST0016\"\nSAY \"REXX HAS NOTHING LIKE THE &SYSNSUB FUNCTION \"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0017": {"ttr": 1305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00#\\x01\\x15\\tO\\x01\\x15\\x10\\x0f\\x13V\\x00\\x06\\x00\\x05\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-04-04T00:00:00", "modifydate": "2015-04-10T13:56:23", "lines": 6, "newlines": 5, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0017 TO ILLUSTRATE LITERALS AND MATH OPERATIONS */\nMYVAR = \"1 + 2\"               /* NO MATH DONE */\nSAY MYVAR                     /* 1 + 2 */\nVAR1 = MYVAR                  /* THIS DOES THE MATH */\nSAY VAR1                      /* 3 */\n/* NO REXX EQUIVALENT OF CLIST SET VAR2   = &STR(&MYVAR) */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0018": {"ttr": 1307, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x08\\x01\\x15\\tO\\x01\\x15\\x10\\x0f\\x14\\x00\\x00\\x04\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-04-04T00:00:00", "modifydate": "2015-04-10T14:00:08", "lines": 4, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0018 TO ILLUSTRATE DATE FUNCTION */\nMYVAR = DATE(U)   /* USA FORMAT FOR DATE */\nVAR1  = MYVAR     /* DOES NOT DO MATH ON DATA IN A VARIABLE */\nSAY VAR1          /* TODAY'S DATE */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXX0019": {"ttr": 1309, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x13\\x01\\x15\\tO\\x01\\x15\\x12_\\t0\\x00\\x04\\x00\\x06\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-04-04T00:00:00", "modifydate": "2015-05-05T09:30:13", "lines": 4, "newlines": 6, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0019 SETTING A VARIABLE TO PARENTHESIS*/\nRPAREN = \")\"\nLPAREN = \"(\"\nSAY RPAREN LPAREN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0020": {"ttr": 1311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x001\\x01\\x15\\x08\\x0f\\x01\\x15\\x10\\x0f\\x13X\\x00\\n\\x00\\x18\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-21T00:00:00", "modifydate": "2015-04-10T13:58:31", "lines": 10, "newlines": 24, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0020 TO ILLUSTRATE RUNNING A TSO COMMAND\n   THAT HAS THE SAME NAME AS A REXX KEYWORD (NOT A GOOD PRACTICE)\n   ASSUMING THAT YOUR INSTALLATION HAS A PROGRAM NAMED SELECT\n*/\n\"SELECT\" /* EXECUTES THE PROGRAM SELECT, NOT THE REXX KEYWORD */\n\n TSOCOMMAND = \"SELECT\" /* ALSO CAN PUT IT IN A VARIABLE */\n TSOCOMMAND\n\n\"\" SELECT /* THIS WORKS TOO, BUT IS STRANGE */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0021": {"ttr": 1313, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00V\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14\\x01\\x00\\x06\\x00\\t\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:01:56", "lines": 6, "newlines": 9, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX PROGRAM REXX0021 TO ILLUSTRATE SUBSTR FUNCTION */\n SAY SUBSTR(\"ABCD\",1,2)      /* GIVES \"AB\" */\n SAY SUBSTR(1+2+3+4,3,1)     /* DOES  MATH ON THE STRING. */\n                             /* RETURNS SPACE */\n SAY SUBSTR(\"1+2+3+4\",3,1)   /* DOESN'T DO MATH ON THE STRING.*/\n                             /* RETURNS \"2\" */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0022": {"ttr": 1315, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x002\\x01\\x15\\x10\\x0f\\x01\\x15\\x12_\\tI\\x00\\x04\\x00\\x01\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-05-05T09:49:32", "lines": 4, "newlines": 1, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0022 */\nSAY \"THERE IS NO REXX PROGRAM CORRESPONDING TO CLST0022\"\nSAY \"BECAUSE REXX AND CLIST WORK DIFFERENTLY \"\nSAY \"THERE IS NO REXX EQUIVALENT TO  &SYSCAPS OR CONTROL ASIS\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0023": {"ttr": 1317, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00P\\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x14\\x04\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T14:04:50", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX023 TO ILLUSTRATE SYSDSN */\n  IF SYSDSN(MY.DATASET.DATA) = \"OK\" THEN\n    DO\n       SAY \"DATASET IS AVAILABLE, DOING AN ALLOCATE\"\n       \"ALLOCATE DDNAME(INFILE) SHR REUSE DSN(MY.DATASET.DATA)\"\n    END\n  ELSE SAY SYSDSN(MY.DATASET.DATA) /* ERROR MESSAGE */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0024": {"ttr": 1319, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x006\\x01\\x15\\tO\\x01\\x15\\x10\\x0f\\x14\\x05\\x00\\t\\x00\\x06\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-04-04T00:00:00", "modifydate": "2015-04-10T14:05:36", "lines": 9, "newlines": 6, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX PROGRAM REXX0024 TO ILLUSTRATE INDEX() */\n ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n SAY INDEX(ALPHABET,\"G\",1)   /* GIVES 7 */\n\n ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n SAY INDEX(ALPHABET,\"1\",1)   /* NOT FOUND. GIVES 0*/\n\n ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n SAY INDEX(ALPHABET,\"G\",27)   /* GIVES 0 */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0025": {"ttr": 1321, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x03\\x01\\x15\\x10\\x0f\\x01\\x15\\x12_\\tR\\x00\\x04\\x00\\x01\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-05-05T09:52:03", "lines": 4, "newlines": 1, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0025 TO ILLUSTRATE DBCS */\n OPTIONS \"EXMODE\"   /* REQUIRED BEFORE YOU CAN USE DBCS DATA */\n DBCS_STRING2 = DBTODBCS(\"ABCD\")\n SAY DATATYPE(DBCS_STRING2,D)      \"GIVES A 1, MEANING DBCS\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0026": {"ttr": 1323, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x12\\x01\\x15\\x08\\x7f\\x01\\x15\\x12_\\t\\t\\x00!\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-05-05T09:09:12", "lines": 33, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX0026 TO ILLUSTRATE FORMAT OF IF, THEN AND ELSE */\n /* THEN AND ELSE SPECIFIED */\n SALARY = 100\n SAY \"PLEASE ENTER NAME  (JOE)\"\n PULL NAME\n IF NAME = \"JOE\"\n THEN SALARY = SALARY * 2\n ELSE SALARY = SALARY - 1\n SAY \"NEW SALARY IS\" SALARY\n /* NO ELSE */\n SALARY = 100\n SAY \"PLEASE ENTER NAME   (JOE) \"\n PULL NAME\n IF NAME = \"JOE\"\n THEN SALARY = SALARY * 2\n SAY \"NEW SALARY IS\" SALARY\n /* NULL THEN */\n SALARY = 100\n SAY \"PLEASE ENTER NAME  (NOT JOE) \"\n PULL NAME\n IF NAME = \"JOE\"\n THEN NOP\n ELSE SALARY = SALARY - 1\n SAY \"NEW SALARY IS\" SALARY\n /* NULL THEN WITH UNSET VARIABLE WHOSE VALUE IS NULL */\n /* YOU CAN'T DO THAT IN REXX, BUT NOP IS THE REXX EQUIVALENT */\n SALARY = 100\n SAY \"PLEASE ENTER NAME (NOT JOE)\"\n PULL NAME\n IF NAME = \"JOE\"\n THEN NOP\n ELSE SALARY = SALARY - 1\n SAY \"NEW SALARY IS\" SALARY\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0027": {"ttr": 1325, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00I\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14\\t\\x00\\x0f\\x00\\t\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:09:49", "lines": 15, "newlines": 9, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX0027 TO ILLUSTRATE DO - END SEQUENCES */\n SALARY = 100\n SAY \"PLEASE ENTER NAME (JOE) \"\n PULL NAME\n IF NAME = \"JOE\"\n THEN DO /* NAME = JOE */\n     SALARY = SALARY * 2\n     SAY \"DOUBLING JOE'S SALARY \"\n     SAY \"NEW SALARY IS\" SALARY\n     END /* NAME = JOE */\n ELSE DO /* NAME <>  JOE */\n     SALARY = SALARY - 1\n     SAY \"REDUCING SALARY BY ONE \"\n     SAY \"NEW SALARY IS\" SALARY\n     END /* NAME <>  JOE */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0028": {"ttr": 1327, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x14\\x10\\x00\\x15\\x00\\x15\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T14:10:25", "lines": 21, "newlines": 21, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX0028 TO ILLUSTRATE COMPOUND CONDITIONS */\n /*COMPOUND CONDITION.  THEN AND ELSE SPECIFIED */\n SAY \"TODAY'S DATE IS\" DATE(O)\n SALARY = 100\n SAY \"PLEASE ENTER NAME (JOE)\"\n PULL NAME\n IF NAME = \"JOE\"  & DATE(O)  > \"15/06/09\"\n THEN SALARY = SALARY * 2\n ELSE SALARY = SALARY - 1\n SAY \"NEW SALARY IS\" SALARY\n\n /*COMPOUND CONDITION.  THEN AND ELSE SPECIFIED */\n /*PARENTHESES ASSURE CORRECT INTERPRETATION */\n SALARY = 100\n SAY \"PLEASE ENTER NAME  (JOE OR MARY) \"\n PULL NAME\n IF (NAME = \"JOE\" | NAME = MARY) ,\n     & DATE(O)  > \"15/06/09\"\n THEN SALARY = SALARY * 2\n ELSE SALARY = SALARY - 1\n SAY \"NEW SALARY IS\" SALARY\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0029": {"ttr": 1329, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x19\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14\\x12\\x00\\x11\\x00\\x18\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:12:19", "lines": 17, "newlines": 24, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX0029 TO ILLUSTRATE NESTED IF */\n SAY \"PLEASE ENTER NAME AND DEPARTMENT (JOE DEPT1 OR DEPT2)\"\n SALARY = 100\n PULL NAME DEPARTMENT\n IF NAME = \"JOE\" THEN\n     DO /* NAME = JOE */\n         IF DEPARTMENT = \"DEPT1\" THEN\n         DO /* DEPT 1 */\n          SALARY = SALARY * 2\n         END /* DEPT 1 */\n      IF DEPARTMENT = \"DEPT2\" THEN\n         DO /* DEPT 2 */\n          SALARY = SALARY * 3\n         END /* DEPT 2 */\n     END /* NAME = JOE */\n\n SAY \"NEW SALARY IS\" SALARY\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0030": {"ttr": 1331, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00(\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14\\x13\\x00\\x0c\\x00\\x0f\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:13:28", "lines": 12, "newlines": 15, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0030 TO ILLUSTRATE SELECT WITH NO EXPRESSION */\nA = 2\nSELECT\n    WHEN (A = 1)\n    THEN SAY \"A IS EQUAL TO 1 \"\n    WHEN (A = 2)\n    THEN SAY \"A IS EQUAL TO 2\"\n    WHEN (A = 3)\n    THEN SAY \"A IS EQUAL TO 3 \"\nOTHERWISE\n    SAY \"A WAS NOT EQUAL TO ANY OF THE VALUES\"\nEND /* SELECT */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0031": {"ttr": 1333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00P\\x01\\x15\\x08\\x7f\\x01\\x15\\x12_\\t\\x08\\x00\\x03\\x00\\x15\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-05-05T09:08:50", "lines": 3, "newlines": 21, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0031 */\nSAY \"REXX SELECT DOES NOT WORK WITH AN EXPRESSION\"\nSAY \"THIS WORKS WITH CLIST: SELECT (&A), BUT NOT WITH REXX\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0032": {"ttr": 1335, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00S\\x01\\x15\\x08\\x7f\\x01\\x15\\x12_\\t1\\x00\\x03\\x00\\x11\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-05-05T09:31:53", "lines": 3, "newlines": 17, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0032 */\nSAY \"REXX SELECT DOES NOT WORK WITH AN EXPRESSION\"\nSAY \"THIS WORKS WITH CLIST: SELECT (&A + &B) BUT NOT WITH REXX\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0033": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x000\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14\\x15\\x00\\x06\\x00\\x0c\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:15:30", "lines": 6, "newlines": 12, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX0033 TO ILLUSTRATE DO WHILE */\n REPLY = \"\" /* SET TO NULL */\n DO WHILE REPLY =  \"\"\n   SAY \"PLEASE PRESS ENTER TO CONTINUE. ANYTHING ELSE TO STOP\"\n   PULL REPLY\n END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0034": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x14\\x16\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T14:16:25", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX0034 TO ILLUSTRATE DO WHILE */\n TOTAL = 0\n DO WHILE TOTAL < 10 /*(STOP WHEN NOT TRUE) */\n    TOTAL = TOTAL + 1\n    /* ACTION */\n    SAY TOTAL\n END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXX0035": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x14\\x17\\x00\\x08\\x00\\x08\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T14:17:13", "lines": 8, "newlines": 8, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX0035 TO ILLUSTRATE DO WHILE */\n INDEX = 1\n MAX   = 10\n DO WHILE INDEX < MAX /*(STOP WHEN NOT TRUE) */\n    INDEX = INDEX + 1\n    /* ACTION */\n    SAY INDEX\n END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXX0036": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00V\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14\\x17\\x00\\x07\\x00\\x06\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:17:56", "lines": 7, "newlines": 6, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0036 TO ILLUSTRATE DO UNTIL */\nREPLY = \"\" /* SET TO NULL */\nDO UNTIL REPLY = \"STOP\" /*(STOP WHEN TRUE) */\n   SAY \"ENTER STOP TO TERMINATE LOOP, OR SOMETHING ELSE TO CONTINUE\"\n   PULL REPLY\n   SAY \"THANK YOU FOR YOUR REPLY\"\nEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0037": {"ttr": 1545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x008\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14\\x18\\x00\\x07\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:18:38", "lines": 7, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX0037 TO ILLUSTRATE DO UNTIL */\n TOTAL = 0\n DO UNTIL TOTAL = 10 /*(STOP WHEN TRUE) */\n     TOTAL = TOTAL + 1\n     /* ACTION */\n     SAY TOTAL\n END  /* DO UNTIL */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXX0038": {"ttr": 1547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x10\\x01\\x15\\x08\\x7f\\x01\\x15\\x11_\\tG\\x00\\x08\\x00\\x08\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-25T09:47:10", "lines": 8, "newlines": 8, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX0038 TO ILLUSTRATE DO UNTIL */\n INDEX = 1\n MAX   = 10\n DO UNTIL INDEX = MAX /*(STOP WHEN TRUE) */\n     INDEX = INDEX + 1\n     /* ACTION */\n     SAY INDEX\n END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXX0039": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x17\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14!\\x00\\x08\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:21:17", "lines": 8, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0039 TO ILLUSTRATE DO UNTIL */\nSTOP = \"NO\"\nDO UNTIL STOP = \"STOP\"\n    SAY \"IN THE LOOP\"\n    \"TIME\"\n    SAY \"ENTER STOP TO STOP, ANYTHING ELSE TO CONTINUE\"\n    PULL STOP\nEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0040": {"ttr": 1551, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00W\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14!\\x00\\x11\\x00\\x07\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:21:57", "lines": 17, "newlines": 7, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0040 DO INCREMENTING A VARIABLE TO A LIMIT */\nSAY \"INDEX = 1 TO 20 BY 1\"\nDO INDEX = 1 TO 20 BY 1\n    SAY INDEX\nEND\n\nSAY\nSAY \"INDEX = 1 TO 20 BY 2\"\nDO INDEX = 1 TO 20 BY 2\n    SAY INDEX\nEND\n\nSAY\nSAY \"INDEX = 10 TO -2 BY -1\"\nDO INDEX = 10 TO -2 BY -1\n    SAY INDEX\nEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0041": {"ttr": 1553, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x009\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14#\\x00\\x13\\x00\\x08\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:23:39", "lines": 19, "newlines": 8, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0041 TO ILLUSTRATE INTERRUPT PROCESSING */\nCALL ON HALT /* CALL IMPLIES THAT CONTROL WILL COME BACK*/\nSAY \"PLEASE ENTER YOUR NAME\"\nPULL NAME\nSAY \"THANK YOU,\" NAME \"FOR ENTERING YOUR NAME SUCCESSFULLY\"\n\nEXIT /* LOGICAL END OF PROGRAM. NEEDED BEFORE ROUTINES */\n\nHALT:\n    SAY \"YOU HIT ATTN/PA1!     \"\n    SAY \"DO YOU WANT TO CONTINUE OR STOP? \"\n    SAY \"ENTER 'CONTINUE' OR 'STOP' \"\n    PULL CS\n    IF CS = \"CONTINUE\" THEN DO\n      SAY \"ENTER YOUR NAME NOW\"\n      PULL NAME\n      RETURN\n      END\n    IF CS = \"STOP\" THEN EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0042": {"ttr": 1555, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x12\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14%\\x00\\x14\\x00\\x08\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:25:12", "lines": 20, "newlines": 8, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0042 TO ILLUSTRATE ERROR TRAP */\n/* A TSO ALLOCATE FAILS, DUE TO WRONG DSN */\n/* CONTROL GOES TO ERROR TRAP, WHERE PROGRAM ASKS FOR A GOOD DSN */\n\nCALL ON ERROR\n\"ALLOCATE DDNAME(INFILE) SHR REUSE DSN(ABC.NOTHERE.DATA)\"\nCALL OFF ERROR\nEXIT\n\n/* FURTHER DOWN THE PROGRAM */\nERROR:\n     SAY \"CAN'T ALLOCATE FILE\"\n     SAY \"DO YOU WANT TO ENTER A VALID DSN?\"\n     PULL YN\n     IF YN <> \"YES\" THEN EXIT\n     SAY \"ENTER VALID DSN\"\n     PULL DSN\n     \"ALLOCATE DDNAME(INFILE) SHR REUSE DSN(\"DSN\")\"\n     RETURN /* GO TO STATEMENT AFTER ONE THAT SENT HERE */\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0043": {"ttr": 1557, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00Q\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14'\\x00\\x10\\x00\\x11\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:27:51", "lines": 16, "newlines": 17, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX REXX0043 SIGNAL A LABEL IN A VARIABLE */\n SAY \"WHICH LABEL DO YOU WANT TO GO TO? (LABEL1, LABEL2, LABEL3)\"\n PULL LABEL\n IF LABEL = \"\" THEN EXIT\n TRACE C\n SIGNAL VALUE LABEL\n EXIT\n LABEL1:\n SAY \"IN LABEL1\"\n EXIT\n LABEL2:\n SAY \"IN LABEL2\"\n EXIT\n LABEL3:\n SAY \"IN LABEL3\"\n EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0044": {"ttr": 1559, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\t\\x01\\x15\\x08\\x7f\\x01\\x15\\x12_\\t5\\x00\\x06\\x00\\x14\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-05-05T09:35:09", "lines": 6, "newlines": 20, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0044 */\nSAY \"A SUPERFLUOUS 'END' IN A REXX PROGRAM IS A SYNTAX ERROR\"\nSAY \"THIS PROGRAM WILL NOT EXECUTE, BECAUSE OF THE ERROR\"\nSAY \"THIS IS JUST BEFORE THE END STATEMENT\"\nEND\nSAY \"THIS IS RIGHT AFTER THE END STATEMENT (NEVER GET HERE)\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0045": {"ttr": 1561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00#\\x01\\x15\\x08?\\x01\\x15\\x10\\x0f\\x140\\x00\\x10\\x00\\x10\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-24T00:00:00", "modifydate": "2015-04-10T14:30:23", "lines": 16, "newlines": 16, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0045  SIMPLE SUBROUTINE. JUST DO SOMETHING */\nSAY \"IN MAIN PART OF PROGRAM \"\nSALARY = 1000\nCALL MYSUB /* CALLING THE SUBROUTINE */\nSAY \"AFTER CALLING THE SUBROUTINE\"\nSAY \"ILLUSTRATING THAT THE VARIABLE DEPARTMENT IS SHARED:\"\nSAY DEPARTMENT\nEXIT /* LOGICAL END OF PROGRAM (REQUIRED) */\n\nMYSUB:       /* START OF THE SUBROUTINE */\n   SAY \"CONTROL IS IN THE SUBROUTINE\"\n   SAY DATE(U) TIME()\n   SAY \"ILLUSTRATING THAT THE VARIABLE SALARY IS SHARED:\"\n   SAY SALARY\n   DEPARTMENT = \"2D1\"\nRETURN /* LOGICAL END OF THE SUBROUTINE. RETURNS CONTROL */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0046": {"ttr": 1563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00 \\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x141\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T14:31:20", "lines": 14, "newlines": 14, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0046  SUBROUTINE. PASS DATA TO IT                 */\n/* SUBROUTINE RETURNS CODE INDICATING SUCCESS OR FAILURE */\nSAY \"IN MAIN PART OF PROGRAM\"\nDSN = \"MYLIB.DATA.CLIST\"\nCALL MYSUB DSN /* CALLING THE SUBROUTINE, PASSING DSN */\nSAY \"RETURN CODE FROM SUBROUTINE WAS\" RESULT\nEXIT  /* LOGICAL END OF PROGRAM (REQUIRED) */\n\nMYSUB: ARG DATASET_PASSED_TO_PROCEDURE\n   SAY \"SUBROUTINE RECEIVED\" DATASET_PASSED_TO_PROCEDURE\n   \"ALLOCATE DDN(TEMP001) SHR REUSE DSN(\"DATASET_PASSED_TO_PROCEDURE\")\"\n   HOLD_CC = RC\n   SAY HOLD_CC \"WAS RETURN CODE FROM ALLOCATE \"\n   RETURN HOLD_CC /* RETURNS CONTROL AND PASSES NUMBER BACK */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0047": {"ttr": 1565, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x15\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x142\\x00\\r\\x00\\x10\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:32:15", "lines": 13, "newlines": 16, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0047  SUBROUTINE. PASS DATA TO IT                 */\n/* SUBROUTINE PASSES BACK THE RESULT OF A CALCULATION    */\nSALARY        = 1000\nMULTIPLY_BY   = 10\nCALL MYSUB SALARY MULTIPLY_BY\nSAY \"SUBROUTINE CALCULATED NEW SALARY AS\" RESULT\nEXIT  /* LOGICAL END OF PROGRAM (REQUIRED) */\n\n MYSUB: ARG SAL MULT\n    SAY \"IN SUBROUTINE: RECEIVED\" SAL \"AND\" MULT\n    RET_DATA = SAL * MULT\n    SAY \"IN SUBROUTINE: CALCULATED\" RET_DATA\n RETURN RET_DATA /* LOGICAL END OF SUB. RETURNS CONTROL */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0048": {"ttr": 1567, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x07\\x01\\x15\\x08\\x7f\\x01\\x15\\x12_\\tC\\x00\\x04\\x00\\x0e\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-05-05T09:43:07", "lines": 4, "newlines": 14, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0048 */\nSAY \"THERE IS NO REXX PROGRAM CORRESPONDING TO CLST0048\"\nSAY \"BECAUSE REXX AND CLIST WORK DIFFERENTLY \"\nSAY \"SEE REXX0047 FOR THE WAY TO PASS DATA BACK TO THE CALLER\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0049": {"ttr": 1569, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x001\\x01\\x15\\x08\\x7f\\x01\\x15\\x12_\\tG\\x00\\x03\\x00\\r\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-05-05T09:47:31", "lines": 3, "newlines": 13, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0049 */\nSAY \"THE REXX ARG WORKS DIFFERENTLY FROM CLIST PROC    \"\nSAY \"SEE REXX PROGRAM REXX0060               \"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0050": {"ttr": 1571, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x147\\x00\\x04\\x00\\x04\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T14:37:05", "lines": 4, "newlines": 4, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0050 TO ILLUSTRATE AN ISPF COMMAND */\nIF SYSVAR(\"SYSISPF\") = \"ACTIVE\"\nTHEN \"ISPEXEC VGET SAVEDVAR\"\nSAY SAVEDVAR /* NOTHING WAS SET, SO VARIABLE IS NULL */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0051": {"ttr": 1573, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01\\x15\\x10\\x0f\\x01\\x15\\x10\\x0f\\x148\\x00\\x03\\x00\\x03\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2015-04-10T00:00:00", "modifydate": "2015-04-10T14:38:14", "lines": 3, "newlines": 3, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0051 TO ILLUSTRATE A SHORT ISPF EDITOR MACRO */\n\"ISREDIT MACRO\"            /* MUST BE FIRST THING IN THE PROGRAM */\n\"ISREDIT FIND FIRST A\"     /* A SIMPLE EDITOR COMMAND */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0052": {"ttr": 1575, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00I\\x01\\x15\\x08\\x7f\\x01\\x15\\x11_\\x10\\x04\\x00\\x15\\x00\\x03\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-25T10:04:49", "lines": 21, "newlines": 3, "modlines": 0, "user": "GABRIEL"}, "text": " /* REXX0052 EXAMPLE OF READING A FILE                   */\n /* READS ONE RECORD AT A TIME INTO A STEM VARIABLE      */\n /* ONLY THE FIRST ELEMENT OF THE STEM VARIABLE IS USED! */\n /* TRACE C */\n \"ALLOC DDN(INFILE) SHR REUSE DSN('DATASET-YOU-ARE-READING')\"\n\n EOF = \"NO\"\n\n DO I = 1 WHILE EOF = \"NO\"\n    \"EXECIO 1 DISKR INFILE (STEM INFILE.)\"\n     IF RC <> 0 THEN DO\n        EOF = \"YES\"\n     END /* RC <> 0 */\n     ELSE DO\n        SAY \"RECORD READ WAS \"\n        SAY INFILE.1\n     END  /* RC  = 0 */\n END /* DO WHILE */\n\n \"EXECIO 0 DISKR INFILE (FINIS)\" /*CLOSE THE FILE */\n \"FREE DDNAME(INFILE)\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0053": {"ttr": 1577, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x14\\x01\\x15\\x08\\x7f\\x01\\x15\\x10\\x0f\\x14@\\x00\\x0c\\x00\\x04\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-10T14:40:14", "lines": 12, "newlines": 4, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0053 TO ILLUSTRATE WRITING THREE RECORDS */\nTRACE C\n\"ALLOCATE DDN(OUTFILE) OLD REUSE DSN('USERID.TEST2.DATA')\"\nOUTFILE.1 =\"RECORD1 WILL BE WRITTEN\"\n\"EXECIO 1 DISKW OUTFILE (STEM OUTFILE.)\"\nOUTFILE.1 =\"RECORD2 WILL BE WRITTEN\"\n\"EXECIO 1 DISKW OUTFILE (STEM OUTFILE.)\"\nOUTFILE.1 =\"RECORD3 WILL BE WRITTEN\"\n\"EXECIO 1 DISKW OUTFILE (STEM OUTFILE.)\"\n\n\"EXECIO 0 DISKW OUTFILE (FINIS)\"\n\"FREE DDN(OUTFILE)\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0054": {"ttr": 1579, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00U\\x01\\x15\\x08\\x7f\\x01\\x15\\x11_\\x10\\x07\\x00\\x13\\x00\\x15\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-25T10:07:55", "lines": 19, "newlines": 21, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX0054 TO ILLUSTRATE WRITING RECORDS WITH A DO LOOP */\nTRACE C\n\"ALLOCATE DDN(OUTFILE) OLD REUSE DSN('USERID.TEST2.DATA')\"\n\nSTOP = \"NO\"\nDO UNTIL STOP = \"STOP\"\n    SAY \"IN THE LOOP\"\n    \"TIME\"\n    SAY \"ENTER A LINE OF DATA TO BE WRITTEN. JUST ENTER, TO STOP\"\n    PULL DATA\n    IF DATA = \"\" THEN STOP = \"STOP\"\n    ELSE DO /* DATA NOT NULL */\n        OUTFILE.1 = DATA\n        \"EXECIO 1 DISKW OUTFILE (STEM OUTFILE.)\"\n    END     /* DATA NOT NULL */\nEND /* DO UNTIL */\n\n\"EXECIO 0 DISKW OUTFILE (FINIS)\"\n\"FREE DDN(OUTFILE)\"       ?\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0055": {"ttr": 1581, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x03\\x01\\x15\\x08\\x7f\\x01\\x15\\x11_\\x10\\t\\x00#\\x00\\x0c\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-25T10:09:03", "lines": 35, "newlines": 12, "modlines": 0, "user": "GABRIEL"}, "text": "/*REXX REXX0057  - STQUICK\n COUNT AND STATUS OF JOBS SUBMITTED BY YOU\n*/\nCALL OUTTRAP \"LINE.\",\"*\"  /* NOTE 1 */\n\"STATUS\"\nCALL OUTTRAP \"OFF\"        /* NOTE 2 */\nMAX_RETURNED = LINE.0\n\nEXECUTING_CTR = 0\nWAIT_CTR      = 0\nOUTPUT_CTR    = 0\n\n\n DO I = 1 TO MAX_RETURNED  /* NOTE 3 */\n    IF POS(\"NO JOBS FOUND\",LINE.I) > 0\n    THEN\n      DO\n        SAY \"YOU HAVE NO JOBS IN THE SYSTEM NOW\"\n        EXIT\n      END\n END I\n\n DO I = 1 TO MAX_RETURNED  /* NOTE 4 */\n    IF POS(\"EXECUTING\",LINE.I) > 0\n       THEN EXECUTING_CTR =   EXECUTING_CTR + 1\n    IF POS(\"OUTPUT QUEUE\",LINE.I) > 0\n       THEN OUTPUT_CTR =      OUTPUT_CTR    + 1\n    IF POS(\"WAITING FOR\",LINE.I) > 0\n       THEN WAIT_CTR =        WAIT_CTR      + 1\n END I\n\n SAY \"EXECUTING\"             EXECUTING_CTR\n SAY \"ON OUTPUT QUEUE\"       OUTPUT_CTR\n SAY \"WAITING FOR EXECUTION\" WAIT_CTR\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0056": {"ttr": 1583, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00W\\x01\\x15\\x08\\x7f\\x01\\x15\\x11_\\x10\\x10\\x00'\\x00\\x13\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-28T00:00:00", "modifydate": "2015-04-25T10:10:57", "lines": 39, "newlines": 19, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX NAME: REXX0056 - CANJOB\n\n   PURPOSE: DOES A STATUS, THEN ASKS YOU FOR JOB SUFFIX,\n            AND JES JOB NUMBER\n            THEN CANCELS THE JOB WITH A PURGE\n\n   USE: %REXX0056\n        THEN REPLY WITH JOB SUFFIX,\n        I.E. LETTER/NUMBER APPENDED TO YOUR USERID ON JOB NAME\n        AND JES JOB NUMBER, NUMERIC PART ONLY\n\n        FOR EXAMPLE:\n\n         %REXX0056\n         - MESSAGE APPEARS: TSOU01A(JOB01234) EXECUTING\n         A   1234\n*/\n \"STATUS\"                  /* NOTE 1 */\n SAY \"TO CANCEL ONE OF YOUR JOBS,\"\n SAY \"- TYPE IN:\"\n SAY \"- JOB SUFFIX     JES JOB NUMBER \"         /* NOTE 2 */\n SAY \"- EXAMPLE:     P  1234 \"\n SAY\n PULL SUFFIX NUMBER                             /* NOTE 3 */\n IF SUFFIX = \"\"\n THEN\n    DO\n      SAY \"NEED JOB SUFFIX AND JOB NUMBER, NO COMMAS\"\n      EXIT\n    END\n IF SUFFIX = \"\" THEN EXIT\n IF SUFFIX = \"STOP\"  THEN EXIT\n TRACE C                                        /* NOTE 4 */\n \"CANCEL\" USERID() || SUFFIX || \"(JOB\" || NUMBER\"), PURGE\"\n /* ALTERNATIVELY, YOU COULD HAVE DONE IT THIS WAY:\n \"CANCEL\" USERID()\"\"SUFFIX\"(JOB\"NUMBER\"), PURGE\"\n THE COMMAND CREATED WILL BE LIKE THIS:\n CANCEL USERIDP(JOB1234), PURGE\n */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0057": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00Y\\x01\\x15\\x07\\x8f\\x01\\x15\\x11_\\x10\\x18\\x00#\\x00B\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-19T00:00:00", "modifydate": "2015-04-25T10:18:59", "lines": 35, "newlines": 66, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0057  - SUBJCL3\n   SUBMITTING JCL FOR BATCH PROCESSING.\n   INSERTING VARIABLE VALUES INTO THE JCL.\n   USING THE TSO LINE MODE EDITOR TO CREATE\n   A TEMPORARY FILE, SUBMIT IT,\n   AND EXIT WITHOUT SAVING IT\n*/\n/* TRACE C */\nTEMP_FILE_NAME = \"'\"USERID()\".TEMP.SUBMIT.CNTL'\"\nPROGRAM_TO_EXECUTE = \"MYPROG1\"\nJCL_DELIMITER = \"/*\"\n/* DELETE, IF IT EXISTS. IT'S A TEMP FILE.\n   YOU SHOULD HAVE NOTHING GOOD IN A TEMP FILE. GOODBYE.\n*/\nCALL MSG \"OFF\"\n\"DELETE\" TEMP_FILE_NAME\nCALL MSG \"ON\"\n\n\"ALLOCATE DSN(\"TEMP_FILE_NAME\") NEW REUSE TRACKS\",\n   \"SPACE(3,1) LRECL(80) RECFM(F,B) BLKSIZE(8000)\"\n\nQUEUE \"10 //\"USERID()\"A JOB (0),'TEST JOB',\"\nQUEUE \"20 //         TYPRUN=SCAN,  \"\nQUEUE \"30 //         MSGLEVEL=1,CLASS=A,NOTIFY=\"USERID()\nQUEUE \"40 //STEP1    EXEC PGM=\"PROGRAM_TO_EXECUTE\nQUEUE \"50 //INFILE   DD DSN=\"USERID()\".INPUT.FILE,DISP=SHR \"\nQUEUE \"60 //OUTFILE  DD SYSOUT=A \"\nQUEUE \"70 //SYSIN    DD * \"\nQUEUE \"80\" DATE() TIME()\nQUEUE \"90\" JCL_DELIMITER\nQUEUE \"LIST\"\nQUEUE \"SUBMIT\"\nQUEUE \"END NOSAVE\"\n\"EDIT\" TEMP_FILE_NAME \"CNTL OLD   NUM EMODE\"\n\"STATUS\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0058": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00\\x19\\x01\\x15\\x07\\x8f\\x01\\x15\\x10\\x0f\\x14E\\x00\\x18\\x00'\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "2015-03-19T00:00:00", "modifydate": "2015-04-10T14:45:19", "lines": 24, "newlines": 39, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX PROGRAM REXX0058 TO CALCULATE SQUARE ROOT */\n/* ILLUSTRATE A USER-WRITTEN  FUNCTION OR SUBROUTINE */\nCALL SQRT 64\nSAY RESULT\nEXIT /* LOGICAL END OF PROGRAM */\n\nSQRT: /* SQRT FUNCTION OR SUBROUTINE*/\nARG NUMBER\nGUESS = NUMBER / 2\nIF NUMBER < 0 THEN DO\n    SAY \"NUMBER MUST BE POSITIVE\"\nRETURN 0\nEND\n\nIF DATATYPE(NUMBER) = \"CHAR\" THEN DO\n    SAY \"NUMBER MUST BE NUMERIC\"\nRETURN 0\nEND\n\nDO 50\n    NEW_GUESS = (GUESS + (NUMBER / GUESS)) / 2\n    GUESS = NEW_GUESS\nEND\nRETURN NEW_GUESS /* LOGICAL END OF SUBROUTINE */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0059": {"ttr": 1797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00!\\x01\\x15\\x07\\x8f\\x01\\x15\\x10o\\x14D\\x00\\x1a\\x00&\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2015-03-19T00:00:00", "modifydate": "2015-04-16T14:44:21", "lines": 26, "newlines": 38, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0059 - EDITOR MACRO $HIDEALL\nA MACRO FOR THE TSO/ISPF EDITOR.\nUSED WITHIN A TSO/ISPF EDIT SESSION.\nIT EXCLUDES (HIDES) ALL LINES OF THE FILE WHICH\nCONTAIN A SPECIFIC CHARACTER STRING.\nI SUGGEST YOU RENAME IT $HIDEALL\n\nTO USE, WITHIN A TSO/ISPF EDIT SESSION,\nTYPE $HIDEALL CHARACTER-STRING ON THE COMMAND LINE.\nEXAMPLE:\n$HIDEALL DSN=\n*/\nADDRESS ISREDIT \"MACRO (PARM1)\"\n\nIF RC > 0 THEN SIGNAL NOT_AS_A_MACRO\nIF PARM1 = \"\" THEN EXIT\nADDRESS ISREDIT \"EXCLUDE ALL\"\nADDRESS ISREDIT \"FIND ALL '\"PARM1\"'\"\nADDRESS ISREDIT \"FLIP \"\nEXIT /* NORMAL END OF PROGRAM */\n\nNOT_AS_A_MACRO:\nSAY \"THIS IS A TSO/ISPF EDITOR MACRO\"\nSAY \"IT MAY BE EXECUTED ONLY IN THE ISPF EDITOR\"\nSAY \"BY TYPING $HIDEALL CHAR-STRING ON THE COMMAND LINE\"\nEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0060": {"ttr": 1799, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x005\\x01\\x15\\x07\\x8f\\x01\\x15\\x10\\x0f\\x14H\\x00\\xa4\\x00\\x18\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-19T00:00:00", "modifydate": "2015-04-10T14:48:35", "lines": 164, "newlines": 24, "modlines": 0, "user": "GABRIEL"}, "text": "/* REXX REXX0060 TO DUPLICATE FUNCTIONALITY OF CLIST PROC */\nTO TEST:\n\nREXX0060 JOE 22-ELM-ST 4343434\nREXX0060 JOE 22-ELM-ST 4343434 STATE(CT)\nREXX0060 JOE 22-ELM-ST 4343434 CALENDAR(JULIAN)\n\n*/\nDEBUG = \"NO \"                    /* YES OR NO */\nSHOW_RESOLVED_VARIABLES = \"YES\"  /* SHOW ALL VARIABLES/PARMS SET */\nARG CMD_LINE_ENTERED    /* PICK UP WHAT'S ON COMMAND LINE */\nNUM_POS_PARMS = 3       /* COUNT THE FOLLOWING   */\nPOS_PARM.1    = \"NAME\"  /* CHANGE FOR YOUR NEEDS */\nPOS_PARM.2    = \"ADDR\"  /* CHANGE FOR YOUR NEEDS */\nPOS_PARM.3    = \"PHONE\" /* CHANGE FOR YOUR NEEDS */\nPOS_PARM.0    = NUM_POS_PARMS\n\nNUM_KEY_PARMS = 3                     /* COUNT THE FOLLOWING   */\nKEY_PARM.1    = \"STATE(NY)\"           /* CHANGE FOR YOUR NEEDS */\nKEY_PARM.2    = \"WEEKDAY(MONDAY)\"     /* CHANGE FOR YOUR NEEDS */\nKEY_PARM.3    = \"CALENDAR(GREGORIAN)\" /* CHANGE FOR YOUR NEEDS */\nKEY_PARM.0    = 3                     /* NUMBER OF KEYW PARMS  */\n\nCALL UNSTRING_CMD_LINE_ENTERED\nCALL PARM_WAS_ENTERED_OR_ASK\nCALL VERIFY_INPUT\nIF SHOW_RESOLVED_VARIABLES = \"YES\" THEN CALL DISPLAY_INPUT\nCALL PROCESS_KEYWORDS\nIF SHOW_RESOLVED_VARIABLES = \"YES\" THEN CALL DISPLAY_INPUT_KEYWORDS\nEXIT /* LOGICAL END OF PROGRAM */\n\nUNSTRING_CMD_LINE_ENTERED: /* PICS UP BOTH POSIT AND KEYWORD PARMS */\nDO I = 1 TO WORDS(CMD_LINE_ENTERED)\n   POS_ENTERED.I = WORD(CMD_LINE_ENTERED, I)\nEND I\nIF DEBUG = \"YES\" THEN DO I = 1 TO WORDS(CMD_LINE_ENTERED)\n   SAY POS_ENTERED.I I\nEND\nRETURN\n\nPARM_WAS_ENTERED_OR_ASK:\n\"CLS\" /* CLEAR THE SCREEN. DELETE IF YOU DON'T HAVE THIS PROGRAM */\nDO I = 1 TO NUM_POS_PARMS\n  IF DEBUG = \"YES\" THEN SAY POS_ENTERED.I \"IS THE ARG FOR \" I\n  IF DEBUG = \"YES\" THEN SAY SYMBOL(\"POS_ENTERED.I\") \"SYMBOL\"\n  /* \"OR\" CHARACTER, ON NEXT LINE, IS HEX 4F */\n  IF POS_ENTERED.I = \"\" | SYMBOL(\"POS_ENTERED.I\") = \"LIT\"\n      THEN CALL GET_POS_PARM POS_PARM.I I\n      ELSE INTERPRET POS_PARM.I \" = POS_ENTERED.I\"\nEND I\nRETURN\n\nGET_POS_PARM:\nSAY \"ENTER POSITIONAL PARAMETER\" POS_PARM.I\nPULL ENTRY\nIF ENTRY = \"\" THEN SIGNAL NO_POS_PARM_ENTERED\nINTERPRET POS_PARM.I \"= ENTRY\"\nIF DEBUG = \"YES\" THEN SAY VALUE(POS_PARM.I)\nRETURN\n\nVERIFY_INPUT:\n/* CHECK FOR \"(\" AMONG POSITIONALS */\nDO J = 1 TO NUM_POS_PARMS\n   TEMP = POS_ENTERED.J\n   IF POS(\"(\",TEMP) > 0 THEN DO\n      SAY \"POSITIONAL PARAMETER\" POS_ENTERED.J \"CONTAINS PAREN\"\n      SAY \"ONLY KEYWORD PARAMETERS CAN CONTAIN PARENS. TERMINATING\"\n      EXIT\n      END\nEND J\n\n/* CHECK FOR TOO MANY PARAMETERS, IN ALL */\nIF WORDS(CMD_LINE_ENTERED) > (NUM_POS_PARMS + NUM_KEY_PARMS)\n   THEN DO\n        SAY \"TOO MANY PARAMETERS ENTERED ON COMMAND LINE\"\n        SAY \"MAX IS \" NUM_POS_PARMS \"POSITIONAL \"\n        SAY \"AND    \" NUM_KEY_PARMS \"KEYWORD. TERMINATING\"\n        EXIT\n        END\n\n/*  CHECK EVERY WORD ON CMD LINE CONTAINING \"(\" */\nTEMP_CONCAT = \"\"\n/* STRING ALL VALID KEYWORDS TOGETHER INTO ONE VARIABLE */\nDO P2 = 1 TO NUM_KEY_PARMS\n   TEMP_CONCAT = TEMP_CONCAT KEY_PARM.P2\nEND P2\n\nDO P = 1 TO WORDS(CMD_LINE_ENTERED)\n\n   TEMP = WORD(CMD_LINE_ENTERED, P)\n   IF POS(\"(\", TEMP) = 0 THEN ITERATE /* IGNORE IF NO ( */\n\n   PARSE VAR TEMP TEMP \"(\"    /* DROP \"(\" AND WHAT FOLLOWS */\n   TEMP = TEMP\"(\"             /* PUT BACK THE \"(\" */\n\n   IF POS(TEMP, TEMP_CONCAT) = 0 THEN DO\n      SAY \"KEYWORD ENTERED \" TEMP \" IS NOT DEFINED\"\n      SAY \"TERMINATING\"\n      EXIT\n      END\nEND P\n\n/* CHECK FOR BALANCED PARENS */\nCTR_LEFT_PARENS  = 0\nCTR_RIGHT_PARENS = 0\nDO Q = 1 TO LENGTH(CMD_LINE_ENTERED)\n   IF SUBSTR(CMD_LINE_ENTERED, Q, 1) = \"(\"\n      THEN CTR_LEFT_PARENS  = CTR_LEFT_PARENS + 1\n   IF SUBSTR(CMD_LINE_ENTERED, Q, 1) = \")\"\n      THEN CTR_RIGHT_PARENS = CTR_RIGHT_PARENS + 1\nEND Q\nIF CTR_LEFT_PARENS <> CTR_RIGHT_PARENS\nTHEN DO\n     SAY \"UNBALANCED PARENTHESES ON INPUT. TERMINATING\"\n     EXIT\n     END\n\nIF POS(\"((\", CMD_LINE_ENTERED) > 0 THEN DO\n     SAY \"UNBALANCED PARENTHESES ON INPUT. TERMINATING\"\n     EXIT\n     END\n\nIF POS(\"))\", CMD_LINE_ENTERED) > 0 THEN DO\n     SAY \"UNBALANCED PARENTHESES ON INPUT. TERMINATING\"\n     EXIT\n     END\n\nRETURN /* FOR VERIFY_INPUT */\n\nDISPLAY_INPUT:\nSAY \"POSITIONAL PARAMETERS AS RESOLVED\"\nDO K = 1 TO NUM_POS_PARMS\n   SAY POS_PARM.K VALUE(POS_PARM.K)\nEND K\nRETURN\n\nPROCESS_KEYWORDS:\nDO M = 1 TO KEY_PARM.0\n   PARSE UPPER VAR KEY_PARM.M KW \"(\" KW_VALUE \")\"\n   INTERPRET KW \"= KW_VALUE\"  /* SET DEFAULT VALUE */\n   KW2   = SPACE(KW\"(\",0)     /* ADD PAREN, DROP SPACES, IF ANY */\n   IF POS(KW2, CMD_LINE_ENTERED) > 0\n      THEN DO\n           PARSE UPPER VAR CMD_LINE_ENTERED (KW2) KW3 \")\"\n           INTERPRET   KW \"= KW3\"\n           END\nEND M\nRETURN\n\nDISPLAY_INPUT_KEYWORDS:\nSAY \"KEYWORD    PARAMETERS AS RESOLVED\"\nDO N = 1 TO KEY_PARM.0\n /*SAY KEY_PARM.N    */\n   PARSE UPPER VAR KEY_PARM.N KW \"(\"\n   INTERPRET \"SAY KW \"  KW\n/*   SAY \"THIS\";SAY KW    VALUE(KW)  */\n/* SAY        KEY_PARM.N VALUE(KEY_PARM.N)  */\nEND N\nRETURN\n\nNO_POS_PARM_ENTERED:\nSAY \"YOU DID NOT ENTER A REQUIRED POSITIONAL PARAMETER. TERMINATING\"\nEXIT\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REXX0061": {"ttr": 1803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x000\\x01\\x15\\x07\\x9f\\x01\\x15\\x10\\x8f\\x107\\x00\\x1c\\x00\\x1a\\x00\\x00\\xc7\\xc1\\xc2\\xd9\\xc9\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2015-03-20T00:00:00", "modifydate": "2015-04-18T10:37:30", "lines": 28, "newlines": 26, "modlines": 0, "user": "GABRIEL"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT931/FILE931.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT931", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}