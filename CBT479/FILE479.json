{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012139000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE479.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE479.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x06\\x05'", "DS1TRBAL": "b'\\xac\\x86'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\x81\\x00\\x01\\x03\\x81\\x00\\x07\\x00\\x07'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04E\\x00\\x00\\x01\\x05\\x10\\x9f\\x01\\x05\\x10\\x9f\\x11 \\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf9@@@'", "ispf": {"version": "04.69", "flags": 0, "createdate": "2005-04-19T00:00:00", "modifydate": "2005-04-19T11:20:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-469"}, "text": "REGULAR CBT TAPE - VERSION 469    FILE:  479\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT469.FILE479\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 16 MEMBERS COUNTED; CUMULATIVE SIZE IS 2,357 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   04/19/05    11:20:43    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x00$/\\x01\\x00$?\\x131\\x00$\\x00\\x1f\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-08-29T00:00:00", "modifydate": "2000-08-30T13:31:00", "lines": 36, "newlines": 31, "modlines": 0, "user": "WSBG"}, "text": "Golob, Sam\nFrom:   Paul W Lemons <plemons2@txu.com>\nSent:   Tuesday, August 29, 2000 12:35 PM\nTo:     sbgolob@attglobal.net\nSubject:        CBT contributions\n\nSent a couple of TSO Rexx/clists that others may be interested in.\n\nThe first is a broadcast editor which allows the use of the ISPF\neditor to edit the system broadcast general notification messages.\nThese are not the user messages.\n\nIE these are messages that everyone sees when they logon to TSO.\nThe driver is BCEDIT and it uses 2 edit macros; BCEDITM1 and\nBCEDITM2.\n\nThe second is BKSEARCH, a frontend to IBM's Bookmanager.  It is\ndesigned to be cursor sensitive and will search for an abend code or\na system message in the books contained in the IBM messages\nbookshelf.  It would require that bookshelf to have been uploaded\nand the BookManager clist library to be allocated.  This code will\naccept an abend code or message as a parm however the best way to\nimplement would be to assign it to a PFKey and then pressing that\nPFKey to  read the data at the cursor position.  This is NOT an edit\nmacro and should work from anywhere within ISPF.   I would be remiss\nin not acknowledging Doug Nadel's %VCURSOR code that is an integral\npart of this code.\n\nAlso included is a set of rexx code that is a single player version\nof yahtzee for the mainframe.  It has lots of members so I'd send it\nin xmit format.  Thanks to all those involved at CBT for their time\nand effort.\n\nPaul Lemons\nplemons2@txu.com\ntaltyman@excite.com\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE479": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04E\\x00\\x00\\x01\\x05\\x10\\x9f\\x01\\x05\\x10\\x9f\\x11 \\x00.\\x00.\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf9@@@'", "ispf": {"version": "04.69", "flags": 0, "createdate": "2005-04-19T00:00:00", "modifydate": "2005-04-19T11:20:00", "lines": 46, "newlines": 46, "modlines": 0, "user": "CBT-469"}, "text": "//***FILE 479 is a collection of programs from Paul W. Lemons.      *   FILE 479\n//*           Currently, this collection consists of three TSO      *   FILE 479\n//*           programs.                                             *   FILE 479\n//*                                                                 *   FILE 479\n//*           email:   Paul W Lemons <plemons2@txu.com>             *   FILE 479\n//*                                                                 *   FILE 479\n//*      BCEDIT    - A set of REXX execs to edit and update         *   FILE 479\n//*                  the current Global Notification records        *   FILE 479\n//*                  in SYS1.BRODCAST.  These are the messages      *   FILE 479\n//*                  that are displayed to everyone by the          *   FILE 479\n//*                  LISTBC program, when they LOGON to TSO.        *   FILE 479\n//*                  The system administrator can maintain these    *   FILE 479\n//*                  notices easily with the help of these EXECs.   *   FILE 479\n//*                                                                 *   FILE 479\n//*      Important note:  In order for the BCEDIT package to        *   FILE 479\n//*      be able to issue the proper OPERATOR SEND commands on      *   FILE 479\n//*      behalf of the TSO user, TSO CONSOLE authority has to       *   FILE 479\n//*      have been turned on.  To make that job easier, an          *   FILE 479\n//*      updated version of the authorized TSO command CPSCB        *   FILE 479\n//*      has been included in this file.  Since CPSCB does not      *   FILE 479\n//*      produce any TSO output when it has executed success-       *   FILE 479\n//*      fully, its companion TSO command LPSCB (List the PSCB)     *   FILE 479\n//*      has also been included in this file.  These two TSO        *   FILE 479\n//*      commands are designed to be used together, with CPSCB      *   FILE 479\n//*      doing the changing, and LPSCB doing the reporting.         *   FILE 479\n//*                                                                 *   FILE 479\n//*      BKSEARCH  - A frontend to IBM's Bookmanager.  It is        *   FILE 479\n//*                  designed to be cursor sensitive and will       *   FILE 479\n//*                  search for an abend code or a system message   *   FILE 479\n//*                  in the books contained in the IBM messages     *   FILE 479\n//*                  bookshelf.  It would require that bookshelf    *   FILE 479\n//*                  to have been uploaded and the BookManager      *   FILE 479\n//*                  clist library to be allocated.  This code      *   FILE 479\n//*                  will accept an abend code or message as a      *   FILE 479\n//*                  parm.  However the best way to implement       *   FILE 479\n//*                  would be to assign it to a PFKey and then      *   FILE 479\n//*                  pressing that PFKey to read the data at the    *   FILE 479\n//*                  cursor position.  This is NOT an edit macro    *   FILE 479\n//*                  and should work from anywhere within ISPF.     *   FILE 479\n//*                  I would be remiss in not acknowledging Doug    *   FILE 479\n//*                  Nadel's %VCURSOR code that is an integral      *   FILE 479\n//*                  part of this code.                             *   FILE 479\n//*                                                                 *   FILE 479\n//*      YAHTZEE   - A single player version of the YAHTZEE game    *   FILE 479\n//*                  that runs under TSO.                           *   FILE 479\n//*                                                                 *   FILE 479\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BCEDIT": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01'\\x00\\x00\\x00\\x993o\\x01\\x00$/\\x11\\x15\\x00K\\x00\\x16\\x00\\x00\\xc7\\xd3\\xf4\\xd4@@@@@@\"", "ispf": {"version": "01.39", "flags": 0, "createdate": "1999-12-02T00:00:00", "modifydate": "2000-08-29T11:15:00", "lines": 75, "newlines": 22, "modlines": 0, "user": "GL4M"}, "text": "/*********************************REXX**********************************\n* Display and edit the broadcast messages                              *\n* Paul Lemons, Texas Utilities (TXU) 12/5/99\n* the BCEDITM1/2 edit macros also required\n* If messages exist then an edit screen will display existing messages\n* If no messages exist then a default screen will be displayed\n* In either case whatever is saved can be used to update the broadcast\n*   dataset.  A prompt will verify whether or not to make changes.\n***********************************************************************/\nTrace off\nmsg_status=msg('off')\nCall outtrap \"LINE.\"\nlistbc notices\nCall outtrap \"OFF\"\nIf line.0 \u00ac= 0 then do\n  rline = line.0\n  cnt = 0\n  do until cnt = rline\n    cnt = cnt + 1\n    if words(sysl.cnt) > 0 then do\n      line.cnt = strip(line.cnt,l,' ')\n    end\n  end\nend\nexist = 'yes'\nIf line.0 = 0 then do\n  exist = 'no'\n  line.0 = 1\n  line.1 = '                                                           '\nend\neddsn = space(mvsvar('sysname') .bcedit.temp.file,0)\neddsn = \"'\"eddsn\"'\"\nx = sysdsn(eddsn)\nif x = ok then \"delete (\"eddsn\")\"\n\"free f(brddtmp)\"\n\"alloc f(brddtmp) da(\"eddsn\") new space(1,1) track lrecl(80) recfm(f)\"\naddress ispexec \"lminit dataid(dataid) ddname(brddtmp)\"\naddress ispexec \"lmfree dataid(\"dataid\")\"\n\"execio\" line.0 \"diskw brddtmp (stem line. finis)\"\naddress ispexec \"lminit dataid(dataid) ddname(brddtmp)\"\nif exist = 'no' then\n  address ispexec \"edit dataid(\"dataid\") macro(bceditm1)\"\nif exist = 'yes' then\n  address ispexec \"edit dataid(\"dataid\") macro(bceditm2)\"\naddress ispexec \"lmfree dataid(\"dataid\")\"\n\"execio * diskr brddtmp (stem sysl. finis\"\nsay 'BCEDIT001I - Update or Cancel? (U/C) CANCEL is the default'\nparse pull reply\nif substr(reply,1) = 'U' | substr(reply,1) = 'u' then do\n  \"CONSOLE ACTIVATE\"\n  if rc >= 4 then do\n    say 'BCEDIT003E - Unable to activate console'\n   msg_status=msg('on')\n    return 12\n  end\n  GETCODE = GETMSG('CONSMSG.','SOL','XXXS0001',,3)\n  \"CONSPROF SOLDISP(NO) SOLNUM(400)\"\n  IF rline > 0 THEN DO cnt = 1 to rline\n    \"CONSOLE SYSCMD(se \"cnt\",delete) CART('CONS0001')\"\n    msgrett = getmsg('dmsg','sol','CONS0001',,1)\n  END\n  IF sysl.0 > 0 THEN DO cnt = 1 to sysl.0\n    IF WORDS(sysl.cnt) > 0 THEN do\n      \"CONSOLE SYSCMD(se '\"sysl.cnt\"',save) CART('CONS0001')\"\n      msgrett = getmsg('dmsg','sol','CONS0001',,1)\n    END\n  END\n  \"CONSOLE DEACTIVATE\"\n  say 'BCEDIT004I - Broadcast Messages updated'\n  msg_status=msg('on')\n  return\nend\nmsg_status=msg('on')\nsay 'BCEDIT002I - update cancelled'\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BCEDITA": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x00\\x00\\x993o\\x01\\x00$?\\x13\\x18\\x00L\\x00\\x16\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1999-12-02T00:00:00", "modifydate": "2000-08-30T13:18:00", "lines": 76, "newlines": 22, "modlines": 0, "user": "WSBG"}, "text": "/*********************************REXX**********************************\n* Display and edit the broadcast messages                              *\n* Paul Lemons, Texas Utilities (TXU) 12/5/99\n* the BCEDITM1/2 edit macros also required\n* If messages exist then an edit screen will display existing messages\n* If no messages exist then a default screen will be displayed\n* In either case whatever is saved can be used to update the broadcast\n*   dataset.  A prompt will verify whether or not to make changes.\n***********************************************************************/\nTrace off\nmsg_status=msg('off')\nCall outtrap \"LINE.\"\nlistbc notices\nCall outtrap \"OFF\"\nIf line.0 \u00ac= 0 then do\n  rline = line.0\n  cnt = 0\n  do until cnt = rline\n    cnt = cnt + 1\n    if words(sysl.cnt) > 0 then do\n      line.cnt = strip(line.cnt,l,' ')\n    end\n  end\nend\nexist = 'yes'\nIf line.0 = 0 then do\n  exist = 'no'\n  line.0 = 1\n  line.1 = '                                                           '\nend\neddsn = space(sysvar(sysuid) .bcedit.temp.file,0)\neddsn = \"'\"eddsn\"'\"\nsay eddsn\nx = sysdsn(eddsn)\nif x = ok then \"delete (\"eddsn\")\"\n\"free f(brddtmp)\"\n\"alloc f(brddtmp) da(\"eddsn\") new space(1,1) track lrecl(80) recfm(f)\"\naddress ispexec \"lminit dataid(dataid) ddname(brddtmp)\"\naddress ispexec \"lmfree dataid(\"dataid\")\"\n\"execio\" line.0 \"diskw brddtmp (stem line. finis)\"\naddress ispexec \"lminit dataid(dataid) ddname(brddtmp)\"\nif exist = 'no' then\n  address ispexec \"edit dataid(\"dataid\") macro(bceditm1)\"\nif exist = 'yes' then\n  address ispexec \"edit dataid(\"dataid\") macro(bceditm2)\"\naddress ispexec \"lmfree dataid(\"dataid\")\"\n\"execio * diskr brddtmp (stem sysl. finis\"\nsay 'BCEDIT001I - Update or Cancel? (U/C) CANCEL is the default'\nparse pull reply\nif substr(reply,1) = 'U' | substr(reply,1) = 'u' then do\n  \"CONSOLE ACTIVATE\"\n  if rc >= 4 then do\n    say 'BCEDIT003E - Unable to activate console'\n   msg_status=msg('on')\n    return 12\n  end\n  GETCODE = GETMSG('CONSMSG.','SOL','XXXS0001',,3)\n  \"CONSPROF SOLDISP(NO) SOLNUM(400)\"\n  IF rline > 0 THEN DO cnt = 1 to rline\n    \"CONSOLE SYSCMD(se \"cnt\",delete) CART('CONS0001')\"\n    msgrett = getmsg('dmsg','sol','CONS0001',,1)\n  END\n  IF sysl.0 > 0 THEN DO cnt = 1 to sysl.0\n    IF WORDS(sysl.cnt) > 0 THEN do\n      \"CONSOLE SYSCMD(se '\"sysl.cnt\"',save) CART('CONS0001')\"\n      msgrett = getmsg('dmsg','sol','CONS0001',,1)\n    END\n  END\n  \"CONSOLE DEACTIVATE\"\n  say 'BCEDIT004I - Broadcast Messages updated'\n  msg_status=msg('on')\n  return\nend\nmsg_status=msg('on')\nsay 'BCEDIT002I - update cancelled'\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BCEDITM1": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x994\\x0f\\x00\\x994\\x0f\\x108\\x00\\x07\\x00\\x05\\x00\\x00\\xc7\\xd3\\xf4\\xd4@@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1999-12-06T00:00:00", "modifydate": "1999-12-06T10:38:00", "lines": 7, "newlines": 5, "modlines": 0, "user": "GL4M"}, "text": "/* REXX */\n/* this is an edit macro for rexx exec BCEDIT */\naddress ispexec\n\"ISREDIT MACRO\"\nmsg1 = '**** NO existing broadcast messages were found ****'\n\"isredit line_before 1 =  noteline '\"msg1\"'\"\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BCEDITM2": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x994\\x0f\\x00\\x994\\x0f\\x108\\x00\\x08\\x00\\x06\\x00\\x00\\xc7\\xd3\\xf4\\xd4@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1999-12-06T00:00:00", "modifydate": "1999-12-06T10:38:00", "lines": 8, "newlines": 6, "modlines": 0, "user": "GL4M"}, "text": "/* REXX */\n/* this is an edit macro for rexx exec BCEDIT */\naddress ispexec\n\"ISREDIT MACRO\"\n\"isredit recovery on\"\nmsg1 = '**** Existing broadcast messages were found ****'\n\"isredit line_before 1 =  noteline '\"msg1\"'\"\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BKSEARCH": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x01\\x00#O\\x01\\x00$/\\x11\\x12\\x00:\\x00j\\x00\\x00\\xc7\\xd3\\xf4\\xd4@@@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2000-08-21T00:00:00", "modifydate": "2000-08-29T11:12:00", "lines": 58, "newlines": 106, "modlines": 0, "user": "GL4M"}, "text": "/* REXX */\n/* Will take the value of the string passed and will search */\n/*   the messages bookshelf for a match */\n/* if no value passed then will check for data based on the */\n/*   cursor position */\n/* Set a PFKey to call this REXX and place the cursor on the */\n/*   message or abend code you wish to lookup and then press the */\n/*   appropriate PFKey */\n/* Change the value of the dataset name in the shl variable */\n/*   to match the name of the messages bookshelf at your site */\n/* Requires the bookmanager clist library to be allocated */\n/* Much thanks to Doug Nadel, IBM for the cursor sensitive code */\n/* Written August 2000 - Paul lemons, Texas Utilities (TXU) */\n/* email taltyman@excite.com */\ntrace err\nparse arg msg junk\nif length(msg) > 0 then do\n  shl = \"shelf('TUS0STS.PRODTSS6.BOOKMGR.EZ2MO800.BKSHELF')\"\n  args = \"cmd(search \"msg\" )\"\n  \"ISPEXEC SELECT CMD(%EOXVSTRT\" shl args \")\",\n               \"MODE(FSCR) SUSPEND NEWAPPL(EOXR) \"\n  return\nend\n/* no parms passed */\nAddress ispexec\n'VGET (ZSCREENI,ZSCREENC,ZENVIR)'      /* Extract screen image,\n                                          cursor pos and ISPF level  */\nIf substr(zenvir,5,4) <4.5 Then\n  Call get_zscreen_values\ntrtable='abcdefghijklmnopqrstuvwxyz'   /* Setup valid msg    chars   */\ntrtable=trtable||translate(trtable)||'$#@0123456789.''-{()'\ntrtable=translate(xrange('00'x,'FF'x),,trtable,' ')\nzscreeni=translate(zscreeni,,trtable,' ') /* Remove non-msg chars    */\nIf substr(zscreeni,zscreenc+1,1) <> ' ' Then /* Maybe csr on msg     */\n  Do                                   /* Extract msg from screen image\n                                          and call bookmgr           */\n    msgid=word(substr(zscreeni,1+lastpos(' ',zscreeni,zscreenc)),1)\n    msgid=translate(strip(substr(msgid,1,56))) /* Max of 56 char msgid */\n    shl = \"shelf('TUS0STS.PRODTSS6.BOOKMGR.EZ2MO800.BKSHELF')\"\n    args = \"cmd(search \"msgid\" )\"\n    \"ISPEXEC SELECT CMD(%EOXVSTRT\" shl args \")\",\n               \"MODE(FSCR) SUSPEND NEWAPPL(EOXR) \"\n    Exit 0\n  end\n  else do\n    say 'error error error'\n    exit 32\n  end\nget_zscreen_values:                    /* obtain the screen image    */\nAddress ispexec 'VGET (ZSCREENW,ZSCREEND)'\np = ptr(96+ptr(ptr(24+ptr(112+ptr(132+ptr(540))))))\nzscreeni=translate(storage(d2x(p),,\n  zscreenw*zscreend),,xrange('00'x,'3f'x))\nzscreenc = c2d(storage(,\n  d2x(164+ptr(ptr(24+ptr(112+ptr(132+ptr(540)))))),4))\nReturn\nptr:  Return c2d(bitand(storage(d2x(Arg(1)),4),'7FFFFFFF'x))\nReturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CPSCB": {"ttr": 534, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x13\\x00\\x91\\t?\\x01\\x05\\x10\\x9f\\x10\\x12\\x01x\\x01X\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1991-04-03T00:00:00", "modifydate": "2005-04-19T10:12:13", "lines": 376, "newlines": 344, "modlines": 0, "user": "SBGOLOB"}, "text": "         TITLE '    C P S C B   '\n************************************************************\n*              'CPSCB'                                     *\n************************************************************\n         SPACE\n*        WRITTEN BY. BILL GODFREY, PLANNING RESEARCH CORPORATION.\n*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA\n*        DATE WRITTEN. FEBRUARY 21 1975.\n*        DATE UPDATED. JULY 7 1981.\n*        ATTRIBUTES. RE-ENTRANT.\n*        DESCRIPTION.'\n*         THIS TSO COMMAND ALLOWS SYSTEMS PROGRAMMERS TO\n*         MODIFY THEIR SESSION'S PSCB.\n*\n*         LOG OF CHANGES.\n*         22APR81 - USER SVC REMOVED. MODESETS ADDED.\n*                   COMMAND MUST NOW BE AUTHORIZED.\n*         07JUL81 - CK FOR ASMI.\n*         26NOV82 - CHANGE THE CHECK TO SS    JIM MARSHALL, SADSC\n*         02APR91 - CLEANED UP THE CODE  JIM MARSHALL            JDM1\n*         18APR05 - ADDED CONS AND NOCONS SUBCOMMANDS\n         SPACE\nCPSCB    AMODE 24                                                JDM1\nCPSCB    RMODE 24                                                JDM1\nCPSCB    CSECT                                                   JDM1\n         USING *,R12\n         B     @PROLOG-*(,R15)\n         DC    AL1(11),CL11'CPSCB'\n         DC    CL16' &SYSDATE &SYSTIME '\n@PROLOG  STM   14,12,12(13)\n         LR    R12,R15\n         LR    R2,R1\n         USING CPPL,R2\n         GETMAIN R,LV=@DATAL\n         ST    13,4(,1)\n         ST    1,8(,13)\n         LR    13,1\n         LR    R9,R1\n         USING @DATA,R9\n         SPACE 1\n         SLR   15,15\n         ST    15,MYANS\n         SPACE\n         L     R1,16               CVTPTR\n         L     R1,0(,R1)           TCB WORDS\n         L     R1,4(,R1)           CURRENT TCB\n         L     R1,180(,R1)         TCBJSCB\n         L     R1,264(,R1)         JSCBPSCB\n         LA    R1,0(,R1)           CLEAR HI ORDER BYTE\n         LTR   R1,R1               IS THERE A PSCB\n         BZ    IMPLEXEC            NO, ISSUE COMMAND-NOT-FOUND MSG\n         ST    R1,PSCBPTR          SAVE PSCB ADDRESS\n         SPACE\n         L     R1,548              PSAAOLD, CURRENT ASCB\n         L     R15,172(,R1)        ASCBJBNI\n         LTR   R15,R15             IS THIS A JOB\n         BNZ   IMPLEXEC            YES, ISSUE COMMAND-NOT-FOUND MSG\n         L     R0,60(,R1)          ASCBTSB\n         LTR   R0,R0               IS THIS TSO\n         BZ    PROCEED             NO, BRANCH IF STARTED TASK\n         B     PROCEED                                       DIAG 06/99\n         L     R1,PSCBPTR          POINT TO USERID IN PSCB\n         USING PSCB,R1\n*        TM    PSCBATR1,PSCBCTRL   OPER\n*        BO    PROCEED             YES, BRANCH\n*        CLC   PSCBUSER(4),ASFI\n*        BE    PROCEED\n         CLC   PSCBUSER(1),SS\n         BE    PROCEED\n         LA    R15,USERIDS         POINT TO LIST OF AUTHORIZED USERS\nUSERLOOP CLI   0(R15),0            END OF LIST\n         BE    IMPLEXEC            YES, BRANCH\n         CLC   PSCBUSER,0(R15)     IS USERID IN LIST\n         BE    PROCEED             YES, BRANCH\n         LA    R15,8(,R15)         POINT TO NEXT USERID IN LIST\n         B     USERLOOP\n         DROP  R1                  PSCB\nSS       DC    C'W'                SYSTEMS TYPE\nUSERIDS  DC    0D'0'               ALIGN FOR EASY ZAPS\n         DC    8D'0'               ROOM FOR 8 USERIDS\n         DC    H'0'                END OF LIST\n         SPACE\nIMPLEXEC L     R15,CPPLCBUF        CPPLCBUF\n         XC    2(2,R15),2(R15)     SET CBUF OFFSET TO IMPLICIT EXEC\n         L     R15,CPPLECT         CPPLECT\n         CLI   20(R15),X'40'       ECTSCMD BLANK?\n         BNE   *+10                YES - SUBCOMMAND NOT FOUND\n         MVC   12(8,R15),=CL8'EXEC' NO - COMMAND NOT FOUND\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN R,A=(1),LV=@DATAL\n         L     R1,24(,R13)         RESTORE CPPL POINTER\n         LA    R15,20(,R13)        POINT TO 8 BYTE WORKAREA\n         XC    0(8,R15),0(R15)     ZERO WORKAREA\n         XCTL  (2,12),EP=EXEC,SF=(E,(15))\n         SPACE 1\nPROCEED  EQU   *\n         TESTAUTH FCTN=1\n         LTR   R15,R15\n         BNZ   AUTHERR\n         SPACE\n************************************************************\n*        SET UP PPL FOR PARSE                              *\n************************************************************\n         SPACE\n         LA    R15,MYPPL\n         USING PPL,R15\n         MVC   PPLUPT(4),CPPLUPT\n         MVC   PPLECT(4),CPPLECT\n         LA    R0,MYECB\n         ST    R0,PPLECB\n         XC    MYECB,MYECB\n         L     R0,=A(CPSCBPCL)\n         ST    R0,PPLPCL\n         LA    R0,MYANS\n         ST    R0,PPLANS\n         MVC   PPLCBUF(4),CPPLCBUF\n         ST    R9,PPLUWA\n         DROP  R15\n         SPACE 1\n************************************************************\n*        CALL THE PARSE SERVICE ROUTINE                    *\n************************************************************\n         SPACE 1\n         LR    R1,R15              POINT TO PPL\n         L     R15,16              CVTPTR\n         TM    520(R15),X'80'      IF HI ORDER BIT NOT ON\n         BNO   PARSELNK               THEN DO LINK, NOT CALL\n         L     R15,520(,R15)       CVTPARS\n         BALR  R14,R15             CALL IKJPARS\n         B     PARSEEXT            SKIP AROUND LINK\n         SPACE\nPARSELNK EQU   *\n         LINK  EP=IKJPARS\nPARSEEXT EQU   *\n         SPACE 1\n         LTR   15,15               PARSE SUCCESSFUL?\n         BNZ   EXIT                NO - BRANCH\n         L     R7,MYANS\n         USING IKJPARMD,R7\n         L     R8,PSCBPTR          REG 8 --> PSCB\n         USING PSCB,R8\n         SPACE\n         MODESET KEY=ZERO\n         SPACE\n         CLI   OPER+1,1            OPER?\n         BNE   *+8                 NO\n         OI    PSCBATR1,PSCBCTRL   YES\n         CLI   OPER+1,2            NOOPER?\n         BNE   *+8                 NO\n         NI    PSCBATR1,255-PSCBCTRL\n         SPACE\n         CLI   ACCT+1,1            ACCT?\n         BNE   *+8                 NO\n         OI    PSCBATR1,PSCBACCT   YES\n         CLI   ACCT+1,2            NOACCT?\n         BNE   *+8                 NO\n         NI    PSCBATR1,255-PSCBACCT\n         SPACE\n         CLI   JCL+1,1             JCL?\n         BNE   *+8                 NO\n         OI    PSCBATR1,PSCBJCL    YES\n         CLI   JCL+1,2             NOJCL?\n         BNE   *+8                 NO\n         NI    PSCBATR1,255-PSCBJCL\n         SPACE\n         CLI   MOUNTKW+1,1         MOUNT\n         BNE   *+8                 NO\n         OI    PSCBATR1,PSCBVMNT   YES\n         CLI   MOUNTKW+1,2         NOMOUNT\n         BNE   *+8                 NO\n         NI    PSCBATR1,255-PSCBVMNT\n         SPACE\n         CLI   CONSKW+1,1          CONSOLE\n         BNE   *+8                 NO\n         OI    PSCBATR1,PSCBCNAU   YES\n         CLI   CONSKW+1,2          NOCONSOLE\n         BNE   *+8                 NO\n         NI    PSCBATR1,255-PSCBCNAU\n         SPACE\n         CLI   RECOVKW+1,1         NO EDIT RECOVERY\n         BNE   *+8                 NO\n         OI    PSCBATR1,PSCBRCVR   YES\n         CLI   RECOVKW+1,2         EDIT RECOVERY\n         BNE   *+8                 NO\n         NI    PSCBATR1,255-PSCBRCVR\n         SPACE\n         CLI   RRBAKW+1,1          RRBA\n         BNE   *+8                 NO\n         OI    PSCBATR1,PSCBRRBA   YES\n         CLI   RRBAKW+1,2          NORRBA\n         BNE   *+8                 NO\n         NI    PSCBATR1,255-PSCBRRBA\n         SPACE\n         TM    USERDATA+6,X'80'    USERDATA PRESENT?\n         BZ    USERDAX             NO - BRANCH\n         L     4,USERDATA          REG 4 --> VALUE ENTERED\n         LH    5,USERDATA+4        REG 5  =  LENGTH\n         BCTR  5,0\n         B     *+10\n         MVC   WORK4(0),0(4)\n         EX    5,*-6\n         LA    1,WORK4\n         LA    0,2\n         BAL   2,PACK              CONVERT TO HEX\n         MVC   PSCBATR2(2),WORK4\nUSERDAX  EQU   *\n         SPACE\n         TM    UNITNAME+6,X'80'    UNITNAME PRESENT?\n         BZ    UNITNAX             NO - BRANCH\n         L     4,UNITNAME          REG 4 --> VALUE ENTERED\n         LH    5,UNITNAME+4        REG 5  =  LENGTH\n         BCTR  5,0\n         MVC   WORK8(8),=CL8' '\n         B     *+10\n         MVC   WORK8(0),0(4)\n         EX    5,*-6\n         CLC   WORK8(5),=CL5'NONE ' UNIT(NONE) SPECIFIED?\n         BNE   *+10                NO - BRANCH AROUND MVC\n         MVC   WORK8,=CL8' '       YES - MOVE SPACES\n         MVC   PSCBGPNM,WORK8\nUNITNAX  EQU   *\n         MODESET KEY=NZERO\n         B     EXIT0\n         SPACE\nEXIT12   LA    15,12\n         B     EXIT\nEXIT0    SLR   15,15\nEXIT     EQU   *\n         STH   15,WORK4\n         IKJRLSA MYANS\n         LH    15,WORK4\n         SPACE\n         LR    1,13\n         L     13,4(,13)\n         ST    15,16(,13)\n         FREEMAIN R,A=(1),LV=@DATAL\n         LM    14,12,12(13)\n         BR    14\n         SPACE\nPACK     LR    15,1                REG 15 --> RECEIVING FLD\n         SR    14,14               CLEAR REG 14\n         IC    14,0(,1)            REG 14  =  1ST CHAR\n         CLI   0(1),C'0'           NUMBER OR LETTER\n         BNL   *+8                 NUMBER - BRANCH\n         LA    14,57(,14)          LETTER - CONVERT TO FA-FF\n         SLL   14,4                SHIFT LEFT 4 BITS\n         STC   14,0(,15)           STORE LEFT HALF\n         IC    14,1(,1)            REG 14  =  2ND CHAR\n         CLI   1(1),C'0'           NUMBER OR LETTER\n         BNL   *+8                 NUMBER - BRANCH\n         LA    14,57(,14)          LETTER - CONVERT\n         SLL   14,28               SHIFT LEFT HALF TO OBLIVION\n         SRL   14,28               SHIFT BACK AGAIN\n         STC   14,1(,15)           STORE RIGHT HALF\n         OC    0(1,15),1(15)       'OR' RIGHT HALF OVER LEFT HALF\n         LA    1,2(,1)             INCREMENT SENDING FLD\n         LA    15,1(,15)           INCREMENT RECEIVING FLD\n         BCT   0,PACK+2            LOOP USING LENGTH IN REG 0\n         BR    2                   EXIT\n         SPACE\nAUTHERR  LA    R1,AUTHMSG\n         LA    R0,L'AUTHMSG\n         TPUT  (1),(0),R\n         B     EXIT12\n         SPACE\n************************************************************\n*        CONSTANTS                                         *\n************************************************************\n         SPACE\n         LTORG\nAUTHMSG  DC    C'ENVIRONMENT IS NOT APF AUTHORIZED'\n         SPACE\n         PRINT NOGEN\n         SPACE\nCPSCBPCL IKJPARM\nOPER     IKJKEYWD\n         IKJNAME 'OPER'\n         IKJNAME 'NOOPER'\nACCT     IKJKEYWD\n         IKJNAME 'ACCT'\n         IKJNAME 'NOACCT'\nJCL      IKJKEYWD\n         IKJNAME 'JCL'\n         IKJNAME 'NOJCL'\nMOUNTKW  IKJKEYWD\n         IKJNAME 'MOUNT'\n         IKJNAME 'NOMOUNT'\nCONSKW   IKJKEYWD\n         IKJNAME 'CONS'\n         IKJNAME 'NOCONS'\nRECOVKW  IKJKEYWD\n         IKJNAME 'RECOV'\n         IKJNAME 'NORECOV'\nRRBAKW   IKJKEYWD\n         IKJNAME 'RRBA'\n         IKJNAME 'NORRBA'\nUSERKW   IKJKEYWD\n         IKJNAME 'USERDATA',SUBFLD=USERSF\nUNITKW   IKJKEYWD\n         IKJNAME 'UNITNAME',SUBFLD=UNITSF\nUSERSF   IKJSUBF\nUSERDATA IKJIDENT 'USERDATA',MAXLNTH=4,                                *\n               FIRST=NONATNUM,OTHER=NONATNUM,                          *\n               PROMPT='USERDATA',                                      *\n               VALIDCK=CPSCBVC\nUNITSF   IKJSUBF\nUNITNAME IKJIDENT 'UNITNAME',MAXLNTH=8,                                *\n               FIRST=NONATABC,OTHER=NONATNUM,                          *\n               PROMPT='UNITNAME'\n         IKJENDP\n         PRINT GEN\n         SPACE\n************************************************************\n*        DSECTS                                            *\n************************************************************\n         SPACE\n         IKJCPPL\n         SPACE\n         IKJPPL\n         SPACE\n         IKJPSCB\n         SPACE 2\n@DATA    DSECT\n         DS    18F\nMYECB    DS    F\nMYPPL    DS    7F\nMYANS    DS    F                   WILL POINT TO PDL\nPSCBPTR  DS    F\nWORK4    DS    F\nWORK8    DS    CL8\n         DS    0D\n@DATAL   EQU   *-@DATA\n         SPACE 2\n*\n*              PARSE VALIDITY CHECKING ROUTINE FOR USERDATA\n*\nCPSCBVC  CSECT\n         USING *,10\n         STM   14,12,12(13)\n         LR    10,15\n         LM    8,9,0(1)            REG 8 --> PDE\n*        L     9,0(,9)             REG 9 --> MYDSECT\n         L     4,0(,8)             REG 4 --> CHARACTER STRING\n         LH    5,4(,8)             REG 5  =  LENGTH\n         LA    15,4                RETURN CODE IF CHECK FAILS\n         CLI   5(8),4              LENGTH = 4?\n         BNE   VALEXIT             NO - EXIT WITH RC=4\nVALLOOP  CLI   0(4),C'0'           NUMERIC?\n         BNL   VALINCR             YES - THIS CHAR OK\n         CLI   0(4),C'F'           IN RANGE A THRU F?\n         BH    VALEXIT             NO - EXIT WITH RC=4\nVALINCR  LA    4,1(,4)             POINT TO NEXT CHAR\n         BCT   5,VALLOOP           LOOP FOR LENGTH OF STRING\n         SR    15,15               SET RC=0\nVALEXIT  L     14,12(,13)\n         LM    0,12,20(13)\n         BR    14\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CPSCB$": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00E\\x00\\x904_\\x01\\x05\\x10\\x8f\\x10G\\x00\\x1d\\x00\\x0b\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1990-12-11T00:00:00", "modifydate": "2005-04-18T10:47:45", "lines": 29, "newlines": 11, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,BATCH,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SBGOLOB.R16.MACLIB\n//         DD DISP=SHR,DSN=SBGOLOB.R16.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.B.ASM(CPSCB)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n ENTRY   CPSCB\n SETCODE AC(1)\n SETSSI  CB469300\n NAME    CPSCB(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CPSCB#": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x003\\x00\\x811?\\x01\\x05\\x10\\x9f\\x10S\\x001\\x00\\x0c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1981-11-09T00:00:00", "modifydate": "2005-04-19T10:53:33", "lines": 49, "newlines": 12, "modlines": 0, "user": "SBGOLOB"}, "text": ")F FUNCTION -\n  THE CPSCB (CHANGE THE PSCB) IS AN AUTHORIZED TSO COMMAND\n  TO CHANGE A TSO USER'S PSCB (PROTECTED STEP CONTROL BLOCK).\n\n  THIS HAS THE EFFECT OF CHANGING THE AUTHORITY WHICH THE\n  TSO USER HAS, AND THEREFORE THE USE OF THE COMMAND SHOULD BE\n  RESTRICTED TO AUTHORIZED SYSTEMS SUPPORT PERSONNEL ONLY.\n\n  THE CPSCB COMMAND DOES NOT PRODUCE ANY TSO OUTPUT MESSAGES\n  WHEN IT HAS BEEN PROPERLY EXECUTED.  TO SEE THE EFFECT\n  OF THE CPSCB COMMAND ON THE USER'S PSCB, YOU SHOULD ISSUE\n  THE COMPANION \"LPSCB\" (LIST THE PSCB) COMMAND, BEFORE AND\n  AFTER THE CPSCB COMMAND HAS BEEN EXECUTED.  LPSCB BY DEFAULT,\n  DOES NOT NEED ANY OPERANDS.\n\n)X SYNTAX  -\n         CPSCB  OPER    | NOOPER   (OPERATOR AUTHORITY)\n                ACCT    | NOACCT   (ACCOUNT AUTHORITY)\n                JCL     | NOJCL    (JCL SUBMIT AUTHORITY)\n                MOUNT   | NOMOUNT  (MOUNT AUTHORITY)\n                CONS    | NOCONS   (CONSOLE AUTHORITY)\n                RECOV   | NORECOV  (REVERSE LOGIC HERE -\n                                     RECOV MEANS EDIT RECOVERY\n                                     IS OFF)\n                RRBA    | NORRBA   (NOT NORMALLY USED)\n\n                USERDATA(  )       (UP TO 2 HEX BYTES)\n                UNITNAME(  )       (UP TO 8 CHARACTER BYTES)\n\n  REQUIRED - ANY ONE OF THE PERMITTED OPERANDS\n\n)O OPERANDS -\n))OPER      -  TURNS OPERATOR AUTHORITY ON.\n))NOOPER    -  TURNS OPERATOR AUTHORITY OFF.\n))ACCT      -  TURNS ACCOUNT AUTHORITY ON.\n))NOACCT    -  TURNS ACCOUNT AUTHORITY OFF.\n))JCL       -  TURNS JOB SUBMIT AUTHORITY ON.\n))NOJCL     -  TURNS JOB SUBMIT AUTHORITY OFF.\n))MOUNT     -  TURNS VOLUME MOUNT AUTHORITY ON.\n))NOMOUNT   -  TURNS VOLUME MOUNT AUTHORITY OFF.\n))CONS      -  TURNS TSO CONSOLE AUTHORITY ON.\n))NOCONS    -  TURNS TSO CONSOLE AUTHORITY OFF.\n))RECOV     -  TURNS EDIT RECOVERY OFF (REVERSE LOGIC).\n))NORECOV   -  TURNS EDIT RECOVERY ON  (REVERSE LOGIC).\n))RRBA      -  FORCES ADJUSTMENT OF BRODCAST RELATIVE\n               RECORD ADDRESS FOR THIS USER AT LOGOFF.\n               (NOT NORMALLY USED)\n))NORRBA    -  TURNS THE RRBA FLAG OFF.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LPSCB": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01#\\x00\\x03\\x00\\x804_\\x01\\x05\\x10\\x9f\\x10\"\\x02\\xbe\\x01\\xcf\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.35", "flags": 0, "createdate": "1980-12-10T00:00:00", "modifydate": "2005-04-19T10:22:03", "lines": 702, "newlines": 463, "modlines": 0, "user": "SBGOLOB"}, "text": "         TITLE '   L P S C B     '\n************************************************************\n*        'LPSCB' OR 'LIST PROTECTED STEP CONTROL BLOCK'    *\n************************************************************\n         SPACE\n*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.\n*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.\n*        DATE WRITTEN. OCTOBER 19 1979.\n*        DATE UPDATED. MAY 10, 1995   SAM GOLOB\n*        ATTRIBUTES. RE-ENTRANT.\n*        COMMENTS.\n*            THIS TSO COMMAND LISTS THE PSCB ON THE TERMINAL.\n*        CHANGE LOG:\n*           JDM - JIM MARSHALL\n*           SBG - SAM GOLOB\n*\n*     JDM    02APR91 - ADDED DSECTS TO REPLACE HARDCODED OFFSETS JDM1\n*     SBG    09MAY95 - COMPLETED DISPLAY OF UPT, ADDED DISPLAY OF ECT.\n*                      ADDED KEYWORDS:  ECT, ALL.  FIXED ERROR\n*                      IN THE PROCESSING OF KEYWORD:  REAL.          .\n*     SBG    10MAY95 - LOOKED AT MVS/370 MACROS AND FOUND THAT THE\n*                      UPT IS SHORTER THERE.  CORRECTED CODING SO IT\n*                      CAN ASSEMBLE UNDER MVS/370 MACROS OR LATER.\n*                      ALSO PUT IN CONDITIONAL ASSEMBLY:  &SYSLVL.\n*                      IF YOU ARE NOT AT TSO/E VERSION 2, INVESTIGATE\n*                      THE UPT DISPLAY AT LABEL \"DOUPT\".\n*\n         SPACE\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    LA    1,&FROM\n         LA    0,&LEN\n         LA    15,&TO\n         BAL   14,HEX\n         MEND\n         SPACE\n         MACRO\n&NAME    MSGZ  &AREA,&LEN\n         LA    1,&AREA\n         LA    0,&LEN\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         GBLC  &SYSLVL\n&SYSLVL  SETC  'ESA'                 370 OR ESA ?\n*                                    SET ESA FOR TSO/E VERSION 2\n*                                    SET 370 FOR MVS/370.\n*   LOOK AT YOUR LEVEL OF IKJUPT TO SEE HOW MUCH CAN DISPLAY.\n*   SEE BELOW LABEL :    DOUPT\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         PRINT ON,NOGEN                                          JDM1\nLPSCB    AMODE 24                                                JDM1\nLPSCB    RMODE 24                                                JDM1\nLPSCB    CSECT                                                   JDM1\n         USING *,R12\n         B     @PROLOG-*(,15)\n         DC    AL1(11),CL11'LPSCB '\n         DC    CL16' &SYSDATE &SYSTIME '\n@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)\n@PROLOG  STM   14,12,12(R13)       SAVE REGISTERS\n         LR    R12,R15             LOAD BASE REGISTER\n         LR    R2,R1               PARM POINTER\n         USING CPPL,R2\n         L     R0,@SIZE            WORKAREA SUBPOOL AND LENGTH\n         GETMAIN R,LV=(0)\n         LR    R9,R1               INITIALIZE WORKAREA POINTER\n         USING @DATA,R9\n         SPACE 1\n         ST    R13,4(,R9)          CHAIN SAVEAREA\n         ST    R9,8(,R13)          CHAIN SAVEAREA\n         LR    R13,R9              UPDATE SAVEAREA POINTER\n         SPACE\n         MVI   LINE-1,C' '\n         XC    LINKAREA(8),LINKAREA\n         SPACE\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         SPACE\n         SPACE 1\n************************************************************\n*        SET UP PPL FOR PARSE                              *\n************************************************************\n         SPACE\n         LA    R15,MYPPL\n         USING PPL,R15\n         MVC   PPLUPT(4),CPPLUPT\n         MVC   PPLECT(4),CPPLECT\n         LA    R0,MYECB\n         ST    R0,PPLECB\n         XC    MYECB,MYECB\n         L     R0,=A(MYPCL)\n         ST    R0,PPLPCL\n         LA    R0,MYANS\n         ST    R0,PPLANS\n         MVC   PPLCBUF(4),CPPLCBUF\n         ST    R13,PPLUWA\n         DROP  R15\n         SPACE 1\n************************************************************\n*        CALL THE PARSE SERVICE ROUTINE                    *\n************************************************************\n         SPACE 1\n         LR    R1,R15              POINT TO PPL\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPARS,X'80'       IF HI ORDER BIT NOT ON        JDM1\n         BNO   PARSELNK               THEN DO LINK, NOT CALL\n         L     R15,CVTPARS         CVTPARS                       JDM1\n         DROP  R15                                               JDM1\n         BALR  R14,R15             CALL IKJPARS\n         B     PARSEEXT            SKIP AROUND LINK\nPARSELNK EQU   *\n         LINK  EP=IKJPARS,SF=(E,LINKAREA)\nPARSEEXT EQU   *\n         SPACE 1\n         LTR   R15,R15\n         BNZ   EXIT12\n         L     R3,MYANS\n         USING IKJPARMD,R3\n         L     R4,CPPLPSCB\n         CLI   ALLKW+1,1           'ALL SPECIFIED'\n         BE    GOTPSCB\n         CLI   REALKW+1,2          'REAL' SPECIFIED\n         BNE   GOTPSCB             NO, BRANCH\n         L     R1,CVTPTR           YES, FIND PSCB VIA JSCB       JDM1\n         USING CVTMAP,R1           GET ADDRESSABILITY            JDM1\n         L     R1,CVTTCBP          POINT TO NEW TCB WORD         JDM1\n         L     R1,4(,R1)           POINT TO OLD TCB WORD         JDM1\n         DROP  R1                                                JDM1\n         USING TCB,R1              ADDRESSABILITY TO TCB         JDM1\n         L     R1,TCBJSCB          GET JSCB ADDRESS              JDM1\n         DROP  R1                                                JDM1\n         USING IEZJSCB,R1          GET ADDRESSABILITY            JDM1\n         L     R1,JSCBPSCB         GET JSCB ADDRESS              JDM1\n         DROP  R1                                                JDM1\n         LTR   R4,R1               IS THERE A PSCB\n         BZ    EXIT12              NO, BRANCH\nGOTPSCB  EQU   *\n         USING PSCB,R4\n         MVC   LINE,LINE-1\n         ST    R4,ADDRESS\n         HEX   LINE,3,ADDRESS+1\n         MVC   LINE+7(L'MSG01),MSG01\n         MSGZ  LINE,L'MSG01+7\n         MVC   LINETXT,TEXTUSER\n         HEX   LINEX,7,PSCBUSER\n         MVC   LINEC(7),PSCBUSER\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTUSRL\n         HEX   LINEX,1,PSCBUSRL\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTGPNM\n         HEX   LINEX,8,PSCBGPNM\n         CLI   PSCBGPNM,0\n         BE    *+10\n         MVC   LINEC(8),PSCBGPNM\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTATR1\n         HEX   LINEX,2,PSCBATR1\n         LA    R15,LINEC\n         LA    R1,PSCBATR1\n         TM    0(R1),PSCBCTRL\n         BZ    *+14\n         MVC   0(4,R15),=C'OPER'\n         LA    R15,5(,R15)\n         TM    0(R1),PSCBACCT\n         BZ    *+14\n         MVC   0(4,R15),=C'ACCT'\n         LA    R15,5(,R15)\n         TM    0(R1),PSCBJCL\n         BZ    *+14\n         MVC   0(3,R15),=C'JCL'\n         LA    R15,4(,R15)\n         TM    0(R1),PSCBCNAU\n         BZ    *+14\n         MVC   0(4,R15),=C'CONS'\n         LA    R15,5(,R15)\n         TM    0(R1),PSCBVMNT                                    JDM1\n         BZ    *+14\n         MVC   0(5,R15),=C'MOUNT'\n         LA    R15,6(,R15)\n*        LA    R15,1(,R15)\n         TM    0(R1),PSCBATTN                                    JDM1\n         BZ    *+14\n         MVC   0(10,R15),=C'LINE(ATTN)'\n         LA    R15,11(,R15)\n         TM    0(R1),PSCBRCVR                                    JDM1\n         BZ    *+14\n         MVC   0(7,R15),=C'RECOVER'\n         LA    R15,8(,R15)\n         TM    0(R1),PSCBRRBA\n         BZ    *+14\n         MVC   0(4,R15),=C'RRBA'\n         LA    R15,5(,R15)\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTATR2\n         HEX   LINEX,2,PSCBATR2\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTLTIM\n         HEX   LINEX,8,PSCBLTIM\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTSUBH\n         HEX   LINEX,1,PSCBSUBH\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTSUBC\n         HEX   LINEX,1,PSCBSUBC\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTSUBM\n         HEX   LINEX,1,PSCBSUBM\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTSOUT\n         HEX   LINEX,1,PSCBSOUT\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTRESV\n         HEX   LINEX,1,PSCBSOUT+1\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTDRBA\n         HEX   LINEX,3,PSCBDRBA\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTRESR\n         HEX   LINEX,4,PSCBDRBA+3\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTDEST\n         HEX   LINEX,8,PSCBDEST\n         CLI   PSCBDEST,0\n         BE    *+10\n         MVC   LINEC(8),PSCBDEST\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTRLGB\n         HEX   LINEX,4,PSCBRLGB\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTUPT\n         HEX   LINEX,4,PSCBUPT\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTUPTL\n         HEX   LINEX,2,PSCBUPTL\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTCHAR\n         HEX   LINEX,1,PSCBCHAR\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTLINE\n         HEX   LINEX,1,PSCBLINE\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTRSZ\n         HEX   LINEX,4,PSCBRSZ\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTU\n         HEX   LINEX,8,PSCBU\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTEXWD\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTEXK\n         HEX   LINEX,4,PSCBEXK\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTEXL\n         HEX   LINEX,4,PSCBEXL\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTEXD\n         HEX   LINEX,4,PSCBEXD\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTRSVD\n         HEX   LINEX,20,PSCBEXD+4\n         BAL   R8,MSG\n         SPACE\n         CLI   UPTKW+1,1           'UPT' SPECIFIED\n         BNE   NOUPT               NO, BRANCH\nDOUPT    L     R5,CPPLUPT\n         ST    R5,UPTADDRC         UPT FROM CPPL\n         L     R5,PSCBUPT\n         ST    R5,UPTADDR          UPT FROM PSCB\n         HEX   LINE,3,UPTADDR+1\n         MVC   LINE+7(L'MSG02),MSG02\n         MSGZ  LINE,L'MSG02+7\n         HEX   LINE,3,UPTADDRC+1\n         MVC   LINE+7(L'MSG02A),MSG02A\n         MSGZ  LINE,L'MSG02A+7\n         USING UPT,R5\n         MVC   LINETXT,TEXTPUP1\n         HEX   LINEX,2,UPT\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTPUP2\n         HEX   LINEX,10,UPTUSER\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTPUP3\n         HEX   LINEX,1,UPTSWS\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTPUP4\n         HEX   LINEX,1,UPTCDEL\n         BAL   R8,MSG\n         SPACE\n         MVC   LINETXT,TEXTPUP5\n         HEX   LINEX,1,UPTLDEL\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTPUP6\n         HEX   LINEX,1,UPTLDEL+1    UPTVERS - CODED FOR MVS/370\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTPUP7\n         HEX   LINEX,7,UPTPREFX\n         MVC   LINEC(7),UPTPREFX\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTPUP8\n         HEX   LINEX,1,UPTPREFL\n         BAL   R8,MSG\n         AIF   ('&SYSLVL' EQ '370').UPT370\n*  NOTE - IMPORTANT - IF YOU ARE ASSEMBLING UNDER MVS/370 PLEASE\n*                     COMMENT OUT ALL 'UPT' STATEMENTS BELOW, TO\n*                     THE CORRESPONDING NOTE.  (ALL STATEMENTS BETWEEN)\n*    -  AT THAT LEVEL, THE UPT WAS SHORTER - - - - - - -    *\n*    OR SETC &SYSLVL TO '370' BEFORE ASSEMBLING. - - - -    *\n         MVC   LINETXT,TEXTPUP9\n         HEX   LINEX,3,UPTPLANG\n         MVC   LINEC(3),UPTPLANG\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTPU10\n         HEX   LINEX,3,UPTSLANG\n         MVC   LINEC(3),UPTSLANG\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTPU11\n         HEX   LINEX,2,UPTLNGFL\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTPU12\n         HEX   LINEX,10,UPTLNGFL+2\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTPU13\n         HEX   LINEX,10,UPTLNGFL+12\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTPU14\n         HEX   LINEX,4,UPTLNGFL+22\n         BAL   R8,MSG\n*  NOTE - IMPORTANT - IF YOU ARE ASSEMBLING UNDER MVS/370 PLEASE\n*                     COMMENT OUT ALL UPT STATEMENTS ABOVE FROM\n*                     THE CORRESPONDING NOTE.  (ALL STATEMENTS BETWEEN)\n*    -  AT THAT LEVEL, THE UPT WAS SHORTER - - - - - - -    *\n.UPT370  ANOP\n         DROP  R5\n         CLI   ALLKW+1,1           'ALL SPECIFIED'\n         BE    DOECT               DON'T TEST FOR ECT PARAMETER\n         B     TRYECT\nNOUPT    CLI   ALLKW+1,1           'ALL SPECIFIED'\n         BE    DOUPT\nTRYECT   CLI   ECTKW+1,1           'ECT' SPECIFIED\n         BNE   NOECT               NO, BRANCH\nDOECT    L     R5,CPPLECT           GET ECT ADDRESS\n         ST    R5,ECTADDR           PUT IT AWAY FOR MSG\n         HEX   LINE,3,ECTADDR+1\n         MVC   LINE+7(L'MSG03),MSG03\n         MSGZ  LINE,L'MSG03+7\n         USING ECT,R5\n         MVC   LINETXT,TEXTECT1\n         HEX   LINEX,1,ECTRCDF\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTECT2\n         HEX   LINEX,3,ECTRTCD\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTECT3\n         HEX   LINEX,4,ECTIOWA\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTECT4\n         HEX   LINEX,1,ECTMSGF\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTECT5\n         HEX   LINEX,3,ECTSMSG\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTECT6\n         HEX   LINEX,8,ECTPCMD\n         MVC   LINEC(7),ECTPCMD\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTECT7\n         HEX   LINEX,8,ECTSCMD\n         MVC   LINEC(7),ECTSCMD\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTECT8\n         HEX   LINEX,1,ECTSWS\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTECT9\n         HEX   LINEX,3,ECTDDNUM\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTEC10\n         HEX   LINEX,4,ECTUSER\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTEC11\n         HEX   LINEX,4,ECTBKPB\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTEC12\n         HEX   LINEX,1,ECTSWS2\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTEC13\n         HEX   LINEX,1,ECTSWS22\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTEC14\n         HEX   LINEX,2,ECTSWS22+1\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTEC15\n         HEX   LINEX,4,ECTHELP\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTEC16\n         HEX   LINEX,4,ECTHELP+4      ECTENVBK - CODED HERE FOR MVS/370\n         BAL   R8,MSG\n         MVC   LINETXT,TEXTEC17\n         HEX   LINEX,4,ECTHELP+8      ECTEXTPR - CODED HERE FOR MVS/370\n         BAL   R8,MSG\nNOECT    B     EXIT0\n         SPACE\nHEX      MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         BR    R14                 RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\nMSG      LA    R1,LINE\n         LA    R0,72\n         BAL   R14,PUTLINE\n         MVC   LINE,LINE-1\n         BR    R8\n         SPACE\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n         SPACE\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n         SPACE 1\nEXIT0    SR    R15,R15             RETURN CODE ZERO\n         B     EXIT\nEXIT12   LA    R15,12              RETURN CODE 12\nEXIT     LR    R2,R15              SAVE RETURN CODE\nEXITX    LR    R15,R2              RESTORE RETURN CODE\n         LR    R1,R13              POINT R1 TO AREA TO BE FREED\n         L     R0,@SIZE            SUBPOOL AND LENGTH\n         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA\n         ST    R15,16(,R13)        STORE RETURN CODE FOR LM\n         FREEMAIN R,A=(1),LV=(0)\n         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC\n         BR    14                  RETURN\n         SPACE\n************************************************************\n*        CONSTANTS                                         *\n************************************************************\n         SPACE\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\n         DS    0F\nMSG01    DC    C'PSCB ADDRESS'\nMSG02    DC    C'UPT FROM PSCB   '\nMSG02A   DC    C'  UPT FROM CPPL '\nMSG03    DC    C'ECT ADDRESS '\nTEXTUSER DC    C'    +0  PSCBUSER'\nTEXTUSRL DC    C'    +7  PSCBUSRL'\nTEXTGPNM DC    C'    +8  PSCBGPNM'\nTEXTATR1 DC    C'   +10  PSCBATR1'\nTEXTATR2 DC    C'   +12  PSCBATR2'\nTEXTLTIM DC    C'   +14  PSCBLTIM'\nTEXTSUBH DC    C'   +1C  PSCBSUBH'\nTEXTSUBC DC    C'   +1D  PSCBSUBC'\nTEXTSUBM DC    C'   +1E  PSCBSUBM'\nTEXTSOUT DC    C'   +1F  PSCBSOUT'\nTEXTRESV DC    C'   +20  RESERVED'\nTEXTDRBA DC    C'   +21  PSCBDRBA'\nTEXTRESR DC    C'   +24  RESERVED'\nTEXTDEST DC    C'   +28  PSCBDEST'\nTEXTRLGB DC    C'   +30  PSCBRLGB'\nTEXTUPT  DC    C'   +34  PSCBUPT '\nTEXTUPTL DC    C'   +38  PSCBUPTL'\nTEXTCHAR DC    C'   +3A  PSCBCHAR'\nTEXTLINE DC    C'   +3B  PSCBLINE'\nTEXTRSZ  DC    C'   +3C  PSCBRSZ '\nTEXTU    DC    C'   +40  PSCBU   '\nTEXTEXWD DC    C'   +48  PSCBEXWD'\nTEXTEXK  DC    C'   +48  PSCBEXK '\nTEXTEXL  DC    C'   +4C  PSCBEXL '\nTEXTEXD  DC    C'   +50  PSCBEXD '\nTEXTRSVD DC    C'   +54  RESERVED'\nTEXTPUP1 DC    C'    +0  UPTLEN  '\nTEXTPUP2 DC    C'    +2  UPTUSER '\nTEXTPUP3 DC    C'    +C  UPTSWS  '\nTEXTPUP4 DC    C'    +D  UPTCDEL '\nTEXTPUP5 DC    C'    +E  UPTLDEL '\nTEXTPUP6 DC    C'    +F  UPTVERS '\nTEXTPUP7 DC    C'   +10  UPTPREFX'\nTEXTPUP8 DC    C'   +17  UPTPREFL'\nTEXTPUP9 DC    C'   +18  UPTPLANG'\nTEXTPU10 DC    C'   +1B  UPTSLANG'\nTEXTPU11 DC    C'   +1E  UPTLNGFL'\nTEXTPU12 DC    C'   +20  RESERVE1'\nTEXTPU13 DC    C'   +2A  RESERVE2'\nTEXTPU14 DC    C'   +34  RESERVE3'\nTEXTECT1 DC    C'    +0  ECTRCDF '\nTEXTECT2 DC    C'    +1  ECTRTCD '\nTEXTECT3 DC    C'    +4  ECTIOWA '\nTEXTECT4 DC    C'    +8  ECTMSGF '\nTEXTECT5 DC    C'    +9  ECTSMSG '\nTEXTECT6 DC    C'    +C  ECTPCMD '\nTEXTECT7 DC    C'   +14  ECTSCMD '\nTEXTECT8 DC    C'   +1C  ECTSWS  '\nTEXTECT9 DC    C'   +1D  ECTDDNUM'\nTEXTEC10 DC    C'   +20  ECTUSER '\nTEXTEC11 DC    C'   +24  ECTBKPB '\nTEXTEC12 DC    C'   +28  ECTSWS2 '\nTEXTEC13 DC    C'   +29  ECTSWS22'\nTEXTEC14 DC    C'   +2A  RESERVED'\nTEXTEC15 DC    C'   +2C  ECTHELP '\nTEXTEC16 DC    C'   +30  ECTENVBK'\nTEXTEC17 DC    C'   +34  ECTEXTPR'\n         SPACE\n************************************************************\n*        PARSE PCL                                         *\n************************************************************\n         SPACE\n         PRINT NOGEN\nMYPCL    IKJPARM\nREALKW   IKJKEYWD\n         IKJNAME 'CPPL'\n         IKJNAME 'REAL'\nUPTKW    IKJKEYWD\n         IKJNAME 'UPT'\nECTKW    IKJKEYWD\n         IKJNAME 'ECT'\nALLKW    IKJKEYWD\n         IKJNAME 'ALL'\n         IKJENDP\n         PRINT GEN\n         SPACE\n************************************************************\n*        DSECTS                                            *\n************************************************************\n         SPACE\n@DATA    DSECT\n         DS    18F                 REGISTER SAVEAREA\nDOUBLE   DS    D                   DOUBLEWORD WORK AREA\nLINKAREA DS    2F\nADDRESS  DS    F\nUPTADDR  DS    F                   UPT FROM PSCB\nUPTADDRC DS    F                   UPT FROM CPPL\nECTADDR  DS    F\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL100            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nLINEB    DS    C                   LINE-1\nLINE     DS    CL120\nLINETXT  EQU   LINE,16\nLINEX    EQU   LINE+17\nLINEC    EQU   LINE+34\n@DATAL   EQU   *-@DATA\n         SPACE 1                                                 JDM1\n         CVT   DSECT=YES,LIST=NO                                 JDM1\n         SPACE 1                                                 JDM1\n         PRINT ON,GEN\n         IKJTCB DSECT=YES,LIST=NO                                JDM1\n         SPACE 1                                                 JDM1\n         IKJPSCB\n         SPACE\n         IEZJSCB                                                 JDM1\n         SPACE\n         IKJCPPL\n         SPACE\n         IKJIOPL\n         SPACE\n         IKJPPL\n         SPACE\n         IKJUPT\n         SPACE\n         IKJECT\n         SPACE\n         PRINT OFF\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LPSCB$": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00H\\x00\\x91\\x12?\\x01\\x05\\x10\\x8f\\x10V\\x00\\x1d\\x00\\x0e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-05-03T00:00:00", "modifydate": "2005-04-18T10:56:48", "lines": 29, "newlines": 14, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,BATCH,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SBGOLOB.R16.MACLIB\n//         DD DISP=SHR,DSN=SBGOLOB.R16.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.B.ASM(LPSCB)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n ENTRY   LPSCB\n SETCODE AC(0)\n SETSSI  CB469300\n NAME    LPSCB(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LPSCB#": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x811?\\x01\\x05\\x10\\x9f\\x11\\x00\\x00\\x11\\x00\\x0c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1981-11-09T00:00:00", "modifydate": "2005-04-19T11:00:00", "lines": 17, "newlines": 12, "modlines": 0, "user": "SBGOLOB"}, "text": ")F FUNCTION -\n  THE LPSCB (LIST PSCB) COMMAND LISTS THE PROTECTED STEP\n  CONTROL BLOCK (PSCB) IN A TSO USER'S REGION.\n  IT OPTIONALLY LISTS THE USER PROFILE TABLE (UPT),\n    AND ALSO THE ECT.\n\n)X SYNTAX  -\n         LPSCB  CPPL/REAL UPT  ALL\n  REQUIRED - NONE\n  DEFAULTS - CPPL\n  ALIAS    - NONE\n\n)O OPERANDS -\n))CPPL      -  THE PSCB ADDRESS IN THE CPPL WILL BE USED.\n))REAL      -  THE PSCB ADDRESS IN THE JSCB WILL BE USED.\n))UPT       -  LISTS THE USER PROFILE TABLE TOO.\n))ALL       -  LISTS THE PSCB, THE UPT, AND THE ECT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "YAHCLIST": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x015_\\x01\\x015_\\t\\x10\\x02\\xfa\\x02\\xfa\\x00\\x00\\xd3\\xc5\\xd4\\xd6\\xd5\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-12-21T00:00:00", "modifydate": "2001-12-21T09:10:00", "lines": 762, "newlines": 762, "modlines": 0, "user": "LEMONS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "YAHPANEL": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00$/\\x01\\x00$/\\x16\\x03\\x00K\\x00K\\x00\\x00\\xd3\\xc5\\xd4\\xd6\\xd5\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-08-29T00:00:00", "modifydate": "2000-08-29T16:03:00", "lines": 75, "newlines": 75, "modlines": 0, "user": "LEMONS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT479/FILE479.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT479", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}