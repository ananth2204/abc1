{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011333000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE144.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE144.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x02'", "DS1TRBAL": "b'\\xcb4'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x08\\x00\\x06\\x01\\x08\\x00\\t\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"VPSEXIT": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "VPSSUE14 TITLE 'VPS USER EXIT-14:   DATASET ADD'\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n*                                                                     *\n*   TITLE:    VPSSUE14                                                *\n*                                                                     *\n*                                                                     *\n*   AUTHOR:   GARY ROBERTS                                            *\n*             WASHINGTON STATE DEPARTMENT OF TRANSPORTATION           *\n*             TRANSPORTATION BUILDING  MS-KF01                        *\n*             MIS/SOFTWARE                                            *\n*             OLYMPIA, WASHINGTON  98504                              *\n*             (206) 753-2946                                          *\n*                                                                     *\n*                                                                     *\n*   PURPOSE:  THIS EXIT ALLOWS INSERTION OF DATA (PRINT OR CONTROL)   *\n*             BOTH BEFORE AND AFTER EACH DATASET AND SEPARATOR        *\n*             PROCESSED BY VPS.                                       *\n*                                                                     *\n*                                                                     *\n*   FUNCTION:                                                         *\n*                                                                     *\n*   THIS EXIT IS USED TO SEND PRINTER CONTROL INFORMATION TO THE      *\n*   XEROX LASER PRINTERS AHEAD OF A DATASET.  BEFORE PROCESSING A     *\n*   DATASET, THIS EXIT CHECKS TO SEE IF A FORM WAS ENTERED.  IF A     *\n*   FORM WAS ENTERED, THIS EXIT USES THE FORM NAME AS THE MEMBER      *\n*   NAME AND OPENS A FORMS FILE.  THE MEMBER INFORMATION IS THEN      *\n*   READ AND SENT TO THE PRINTER TO SET IT UP AHEAD OF THE DATASET.   *\n*   IF THERE WAS NO FORM ENTERED, THIS EXIT IS EXITED.  AFTER PRO-    *\n*   CESSING A DATASET ON A LASER PRINTER, REGARDLESS OF WHETHER A     *\n*   FORM WAS ENTERED OR NOT, A RESET COMMAND IS SENT TO THE PRINTER.  *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*                                                                     *\n*   MODIFICATIONS:                                                    *\n*                                                                     *\n*   08/23/89 - GARY ROBERTS                                           *\n*     ADDED CODE TO OPEN A FILE WITH A DDNAME OF 'FORMTEST' IF        *\n*     A FORM NAME OF 'TST?' IS ENTERED.                               *\n*                                                                     *\n*   09/21/89 - GARY ROBERTS                                           *\n*     ADDED CODE TO DO A RESET BEFORE THE START JOB SEPARATOR.        *\n*     THIS IS DONE BECAUSE THE LAN CHANGES THE PRINTER BUT DOES       *\n*     NOT GO THROUGH THIS EXIT SO IT DOESN'T DO A RESET AFTERWARDS.   *\n*                                                                     *\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n         EJECT\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n*                                                                     *\n*   PROCESSING NOTES:                                                 *\n*                                                                     *\n*     THIS EXIT IS CALLED BEFORE AND AFTER SEPARATORS AND STANDARD    *\n*     PRINT LINE DATASETS.                                            *\n*                                                                     *\n*     WHEN THIS EXIT IS CALLED FOR A START-JOB SEPARATOR, THE INFO    *\n*     IN THE DATASET ATTRIBUTE LIST IS FOR THE FIRST OR ONLY DATASET  *\n*     OF THE JOB.                                                     *\n*                                                                     *\n*     WHEN THIS EXIT IS CALLED FOR A END-JOB SEPARATOR, THE INFO IN   *\n*     THE DATASET ATTRIBUTE LIST IS FOR THE LAST OR ONLY DATASET OF   *\n*     THE JOB.                                                        *\n*                                                                     *\n*     THIS EXIT IS NOT CALLED IF UE02 GAVE A NON-ZERO RETURN CODE     *\n*     FOR THE DATA SET.                                               *\n*                                                                     *\n*     THIS EXIT MAY GIVE A RC=04 ON THE FIRST CALL TO IT TO INDICATE  *\n*     NO DATA IS TO BE ADDED FOR THIS DATASET AT THIS TIME.           *\n*                                                                     *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*                                                                     *\n*   MODULE NAME:  VPSSUE14                                            *\n*                                                                     *\n*   EXIT NAME:    DATASET ADD                                         *\n*                                                                     *\n*   EXIT TYPE:    PRINTER                                             *\n*                                                                     *\n*   EXIT TCB:     PRINTER                                             *\n*                                                                     *\n*   RECOVERY:     EXITNN= KEYWORD DETERMINES RECOVERY ON/OFF          *\n*                 RECOVERY ON:  EXIT WILL BE DISABLED                 *\n*                 RECOVERY OFF: PRINTER WILL BE 'EDRAINED'            *\n*                                                                     *\n*   ATTRIBUTES:   REENTRANT, REUSEABLE, REFRESHABLE                   *\n*                 PROBLEM STATE, KEY 8                                *\n*                 AUTHORIZED                                          *\n*                                                                     *\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n         EJECT\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n*                                                                     *\n*   INPUT:                                                            *\n*                                                                     *\n*     INPUT TO THIS EXIT IS FOUR VPS DSECTS AND TWO PDS'S .  THE      *\n*     DDNAMES OF THE PDS'S ARE 'FORMFILE' AND 'FORMTEST'.  YOU        *\n*     WILL NEED TO ADD THESE TWO DDNAMES TO YOUR VPS STARTUP          *\n*     PROC.  (THE DDNAMES CAN BE CHANGED IN THE CODE)                 *\n*                                                                     *\n*     FORMFILE IS THE PRODUCTION FILE AND CONTAINS TWO TYPES OF       *\n*     MEMBERS.  ONE TYPE IS FOR THE XEROX 3700 AND IS PRECEDED BY     *\n*     A # SIGN AND THE OTHER TYPE IS FOR THE XEROX 4045 AND IS        *\n*     PRECEDED BY AN @ SIGN.  THIS IS DONE BECAUSE THE 3700 AND       *\n*     THE 4045 REQUIRE DIFFERENT CONTROL INFO TO DO THE SAME THING.   *\n*     DO NOT INCLUDE THE # OR @ IN THE FORM NAME ON THE EXECUTING     *\n*     JOB.  JUST USE THE 1 TO 4 BYTE FORM NAME AND THE EXIT WILL      *\n*     APPEND THE SPECIAL CHARACTER TO THE FRONT.  THIS WILL ALSO      *\n*     ALLOW A FORM NAME TO START WITH A NUMERIC.                      *\n*                                                                     *\n*     EX:  THE FORM NAME IS 9118.                                     *\n*          THE MEMBER NAME IS #9118 FOR A 3700 AND @9118 FOR A 4045   *\n*                                                                     *\n*     THE TYPE OF PRINTER IS DETERMINED BY THE PRASEPI FIELD IN THE   *\n*     VPSSPRAT DSECT.  THIS FIELD IS THE VALUE OF THE SEPINFO KEYWORD *\n*     OF THE PRINTER MEMBER IN THE VPS CONTROL DATASET.  AT WSDOT,    *\n*     THE FIRST FOUR BYTES OF THE SEPINFO KEYWORD FOR ALL LASER       *\n*     PRINTERS IS 'SCSL' AND THE LAST FOUR BYTES CONTAIN EITHER 3700  *\n*     OR 4045 ACCORDINGLY.                                            *\n*                                                                     *\n*     FORMTEST IS A TEST FILE WHOSE MEMBERS ALL HAVE 'TST' AS THE     *\n*     FIRST 3 CHARACTERS OF THEIR NAME, PRECEDED BY EITHER A # OR     *\n*     AN @ AS NOTED ABOVE.  CHECKING ONLY THE FIRST 3 BYTES ALLOWS    *\n*     US TO HAVE MANY TEST MEMBERS IN THIS TEST FILE (#TSTA, #TSTB,   *\n*     #TST1, #TST2, @TSTA, @TSTB, @TST1, @TST2, ETC...).  THIS IS     *\n*     VERY HANDY WHEN DEVELOPING AND TESTING NEW FORMS.               *\n*                                                                     *\n*     THE ONLY RULES FOR CREATING MEMBERS ARE,                        *\n*     1) ALL COMMENT LINES OR BLANK LINES MUST HAVE AN  *  IN COL 1.  *\n*     2) ALL MEMBERS MUST START WITH A  #  OR AN  @  SIGN.            *\n*                                                                     *\n*     THE FOUR VPS DSECTS USED ARE,                                   *\n*     VPSSSYAT - SYSTEM ATTRIBUTE  DSECT                              *\n*     VPSSPRAT - PRINTER ATTRIBUTE DSECT                              *\n*     VPSSDSAT - DATASET ATTRIBUTE DSECT                              *\n*     VPSSLINE - LINE WORK AREA    DSECT                              *\n*                                                                     *\n*     THERE IS ALSO ONE EXIT DEFINED DSECT,                           *\n*     USERAREA - EXIT DEFINED USER AREA DSECT                         *\n*                                                                     *\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n         EJECT\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n*                                                                     *\n*   REGISTER USAGE:                                                   *\n*                                                                     *\n*                                                                     *\n*      ON ENTRY:                                                      *\n*                                                                     *\n*         R0 ==>  REQUEST CODE                                        *\n*         R1 ==>  PARAMETER LIST ADDRESS                              *\n*        R13 ==>  ADDRESS OF CALLERS SAVEAREA.                        *\n*        R14 ==>  RETURN ADDRESS                                      *\n*        R15 ==>  ENTRY  ADDRESS                                      *\n*                                                                     *\n*                                                                     *\n*      DURING EXECUTION:                                              *\n*                                                                     *\n*         R0 ==>  WORK REGISTER                                       *\n*         R1 ==>  WORK REGISTER                                       *\n*         R2 ==>  SYSTEM  ATTRIBUTE BASE REGISTER                     *\n*         R3 ==>  TWO-WORD WORK AREA                                  *\n*         R4 ==>  PRINTER ATTRIBUTE BASE REGISTER                     *\n*         R5 ==>  DATASET ATTRIBUTE BASE REGISTER                     *\n*         R6 ==>  LINE WORK AREA    BASE REGISTER                     *\n*         R7 ==>  WORK AREA DSECT   BASE REGISTER                     *\n*         R8 ==>  WORK REGISTER                                       *\n*         R9 ==>  WORK REGISTER                                       *\n*        R10 ==>  NOT USED                                            *\n*        R11 ==>  NOT USED                                            *\n*        R12 ==>  PROGRAM BASE REGISTER                               *\n*        R13 ==>  CALLERS SAVE AREA                                   *\n*        R14 ==>  RETURN ADDRESS                                      *\n*        R15 ==>  ENTRY  ADDRESS                                      *\n*                                                                     *\n*                                                                     *\n*      ON EXIT:                                                       *\n*                                                                     *\n*         ALL REGISTERS WILL BE RESTORED TO ENTRY CONDITIONS,         *\n*         EXCEPT R15 WHICH WILL CONTAIN A RETURN CODE.                *\n*                                                                     *\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n         EJECT\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n*                                                                     *\n*      REQUEST CODES:                                                 *\n*                                                                     *\n*         00 - ADD DATA BEFORE A DATASET                              *\n*         04 - ADD DATA AFTER  A DATASET                              *\n*         08 - CLEANUP EXIT RESOURCES, VPS FOUND A SEVERE ERROR       *\n*                                                                     *\n*                                                                     *\n*      PARAMETER LIST FORMAT:                                         *\n*                                                                     *\n*         +0  ADDR: SYSTEM ATTRIBUTES                                 *\n*         +4  ADDR: TWO-WORD WORK AREA FOR THE USER                   *\n*         +8  ADDR: PRINTER ATTRIBUTE DSECT                           *\n*        +12  ADDR: DATA SET ATTRIBUTE DSECT                          *\n*        +16  ADDR: LINE AREA DSECT                                   *\n*                                                                     *\n*                                                                     *\n*      RETURN CODES:                                                  *\n*                                                                     *\n*         00 - PROCESS THE DATA IN THE LINE WORK AREA AND COME BACK   *\n*         04 - NO DATA TO PROCESS AND DON'T COME BACK                 *\n*         08 - RESERVED                                               *\n*         12 - RESERVED                                               *\n*         16 - EDRAIN THE PRINTER (EXIT ENCOUNTERED SEVERE ERROR)     *\n*                                                                     *\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n*                                                                     *\n*                       - - - NOTE - - -                              *\n*                                                                     *\n*   THIS EXIT WAS CODED TO BE USED WITH XEROX LASER PRINTERS, BUT     *\n*   THE ONLY XEROX DEPENDENT CODE IS THE RESET COMMAND.  THIS EXIT    *\n*   COULD EASILY HANDLE ANY OTHER TYPE, OR MANY OTHER TYPES, OF       *\n*   PRINTERS BY CHECKING THE VALUE IN THE PRASEPI FIELD AND TAKING    *\n*   THE APPROPRIATE ACTION.  SUCH AS MOVING IN A DIFFERENT DDNAME,    *\n*   ISSUING A DIFFERENT RESET COMMAND, SENDING OUT A CONTROL STRING,  *\n*   OR WHATEVER.                                                      *\n*                                                                     *\n*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*\n         EJECT\n*        SETR                        EQUATE REGISTERS\nR0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*\n*\n*=====================================================================*\n*     ESTABLISH SAVE AREA LINKAGE AND ADDRESSABILITIES                *\n*=====================================================================*\n*\nVPSSUE14 CSECT\n         USING VPSSUE14,R12          BASE REGISTER\n         USING SYADSECT,R2           SYSTEM ATTRIBUTES\n         USING USERAREA,R3           USER WORK AREA\n         USING PRADSECT,R4           PRINTER ATTRIBUTES\n         USING DSADSECT,R5           DATASET ATTRIBUTES\n         USING LINEDSCT,R6           LINE WORK AREA\n         USING WORKAREA,R7           OUR WORKAREA\n*\n         STM   R14,R12,12(R13)       SAVE VPS'S REGISTERS\n         LR    R12,R15               LOAD BASE REGISTER\n         LR    R8,R0                 SAVE REQUEST CODE\n         LM    R2,R6,0(R1)           LOAD USING REGISTERS\n         L     R7,GETSAVE             ''    ''    ''\n         EJECT\n*\n*\n*=====================================================================*\n*     SEE IF THIS IS A LASER AND, IF SO, IF WE ARE AT DATASET LEVEL   *\n*=====================================================================*\n* N:  THIS CHECK WILL DETERMINE WHAT GROUP OF PRINTERS WILL BE\n* O:  AFFECTED BY THIS EXIT.  'PRASEPI' IS AN 8-BYTE FIELD WHICH\n* T:  CONTAINS THE VALUE OF THE 'SEPINFO' KEYWORD IN THE VPS CONTROL\n* E:  DATASET MEMBER FOR THE PRINTER.  CHANGE THIS VALUE AS NEEDED.\n*\n         CLC   PRASEPI(4),=C'SCSL'   IS THIS FOR A LASER PRINTER?\n         BNE   EXIT04                 NO...EXIT & DON'T COME BACK\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*\n         TM    DSATYPE,$DSASTDP      ARE WE AT DATASET LEVEL?\n         BO    DATASET                YES..CONTINUE\n*\n         TM    DSATYPE,$DSASSEP      ARE WE AT START SEPARATOR?\n         BZ    EXIT04                 NO...EXIT & DON'T COME BACK\n         C     R8,=F'0'              ARE WE BEFORE START SEPARATOR?\n         BE    RESET                  YES..GO DO A RESET\n         B     EXIT04                 NO...EXIT & DON'T COME BACK\n*\nDATASET  EQU   *\n         TM    SWITCH,$MESSAGE       IS OUR MESSAGE SWITCH SET?\n         BO    CLOSE                  YES..CLEAN UP AND EXIT\n*\n         B     *+4(R8)               AT DATASET LEVEL, BUT WHERE?\n         B     BEFORE                0 ==> BEFORE DATASET PROCESSING\n         B     RESET                 4 ==> AFTER DATASET PROCESSING\n         B     CLOSE                 8 ==> DISASTROUS ERROR\n         EJECT\n*\n*\n*=====================================================================*\n*     WE ARE BEFORE DATASET PROCESSING.  SEE IF THEY ENTERED          *\n*     A FORM.  IF SO, PROCESS IT.  IF NOT, EXIT.                      *\n*=====================================================================*\n*\nBEFORE   EQU   *\n         CLC   DSAFORM(4),=C'STD '   IS THIS THE DEFAULT FORM NAME?\n         BE    EXIT04                 YES..NO FORM WAS ENTERED, EXIT\n*\n         TM    SWITCH,$OPENED        HAVE WE ALREADY OPENED THE FILE?\n         BO    READ                   YES..GO READ NEXT LINE\n*\n         LA    R7,WORKLEN            LENGTH OF WORKAREA DSECT\n         GETMAIN RC,LV=(R7),SP=240   GET CORE\n         LTR   R15,R15               IS THE RETURN CODE ZERO?\n         BNZ   ERROR3                 NO...NOT ENOUGH VIRTUAL\n         LR    R7,R1                 GET CORE ADDRESS\n         ST    R7,GETSAVE            SAVE THE ADDRESS\n         OI    SWITCH,$GETMAIN       SET GETMAIN SWITCH\n*\n         MVC   MSG4(MSG1L),MSG1      MOVE THIS STUFF TO DSECT\n         MVC   FORMFILE(DCBL),DCBMDL    ''      ''      ''\n         MVC   EXIT1(EXLSTL),EXLSTMDL   ''      ''      ''\n         LA    R8,EXIT1              LOAD EXLST ADDR\n         ST    R8,FORMFILE+36        STORE IT IN THE DCB\n         LA    R8,JFCB1              LOAD JFCB WORK AREA ADDR\n         ST    R8,EXIT1              STORE IT IN THE EXLST\n         MVI   EXIT1,X'07'           ACTIVATE JFCB EXIT\n         B     OPEN\n         EJECT\n*\n*\n*---------------------------------------------------------------------*\n*     NOW OPEN THE FORMS FILE                                         *\n*---------------------------------------------------------------------*\n*\nOPEN     EQU   *\n         CLC   DSAFORM(3),=C'TST'    IS THIS A TEST MEMBER?\n         BNE   OPEN1                        NO...CONTINUE\n         MVC   FORMFILE+40(8),=C'FORMTEST'  YES..OPEN TEST FILE\nOPEN1    EQU   *\n         LA    R8,FORMFILE           LOAD DCB ADDR INTO REG\n*        RDJFCB ((R8),INPUT)         READ JFCB INTO WORK AREA\n*\n         ST    R8,ARG1              ( STORE DCB ADDR IN ARG1     )\n         MVI   ARG1,128             ( MOVE IN OPTION BYTE        )\n         LA    1,ARG1               ( LOAD ADDR OF AGRUMENT LIST )\n         SVC   64                   ( ISSUE RDJFCB SVC           )\n*\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*     ALL MEMBERS IN THE FORMS FILE ARE PRECEDED BY EITHER A '#'\n* N:  SIGN OR AN '@' SIGN.  THE MEMBERS WITH A '#' SIGN ARE FOR\n* O:  THE XEROX 3700'S AND THE '@' SIGN MEMBERS ARE FOR THE XEROX\n* T:  4045'S.  THE LAST 4 BYTES OF THE PRASEPI FIELD DETERMINE\n* E:  WHICH TYPE OF PRINTER WE ARE DEALING WITH.  THIS IS DONE\n*     BECAUSE THE CONTROL INFO IS DIFFERENT FOR EACH PRINTER.\n*\n         MVC   JFCB1+44(8),BLANK     INITIALIZE FIELD\n         MVI   JFCB1+44,C'#'         ASSUME ROUTING TO A XEROX 3700\n         CLC   PRASEPI+4(4),=C'3700' IS THIS FOR A XEROX 3700?\n         BE    OPEN2                  YES..CONTINUE\n         MVI   JFCB1+44,C'@'          NO...MUST BE A XEROX 4045\nOPEN2    EQU   *\n         MVC   JFCB1+45(4),DSAFORM   MOVE IN MEMBER NAME\n*        LA    R8,FORMFILE           LOAD DCB ADDR INTO REG\n*        OPEN  ((R8),INPUT),TYPE=J   OPEN THE FORMS FILE\n*\n         LA    1,ARG1               ( LOAD ADDR OF AGRUMENT LIST )\n         SVC   22                   ( ISSUE OPEN SVC             )\n*\n         TM    SWITCH,$NOTFND        WAS THE MEMBER FOUND?\n         BO    ERROR2                 NO...PRINT MESSAGE SAYING SO\n         OI    SWITCH,$OPENED         YES..MARK AS OPENED\n         LH    R8,FORMFILE+82        LOAD LRECL FROM DCB\n         ST    R8,FLWD               SAVE IT FOR LATER\n         B     READ                  CONTINUE\n         EJECT\n*\n*\n*---------------------------------------------------------------------*\n*     READ A LINE FROM THE FORMS FILE                                 *\n*---------------------------------------------------------------------*\n*\nREAD     EQU   *\n         LA    1,FORMFILE            LOAD DCB ADDR\n         LA    0,LINELND             LOAD RECIEVING FIELD ADDR\n         GET   (1),(0)               READ FORMFILE INTO DATA LINE FLD\n         CLI   LINELND,C'*'          IS THIS A COMMENT LINE?\n         BE    READ                   YES..READ AGAIN\n*\n         LA    R8,LINELND            LOAD ADDR OF LINE AREA\n         A     R8,FLWD               ADD LRECL TO IT\n         MVC   0(2,R8),HEX           APPEND CARR RTRN & LINE FEED\n         L     R8,FLWD               LOAD LRECL\n         A     R8,=F'3'              LRECL + (CC + CR + LF) = LENGTH\n         STH   R8,LINELNL            STORE THE LENGTH\n*\n         OI    LINELNF,$LINECCP      SKIP CARR CNTL PROCESSING\n         MVI   LINELNF2,X'00'        DON'T WORRY ABOUT THIS BYTE\n         B     EXIT00                PROCESS THIS LINE\n         EJECT\n*\n*\n*=====================================================================*\n*     WE ARE AFTER DATASET PROCESSING                                 *\n*=====================================================================*\n*\nRESET    EQU   *\n         TM    SWITCH,$RESET         HAVE WE ALREADY RESET?\n         BO    EXIT04                 YES..EXIT\n         MVC   LINELND(RESETL),RESETCMD   MOVE IN RESET COMMAND\n         LA    R8,RESETL+1           LENGTH OF RESET + 1 FOR CC\n         STH   R8,LINELNL            STORE THE LENGTH\n         OI    LINELNF,$LINECCP      SKIP CARR CNTL PROCESSING\n         MVI   LINELNF2,X'00'        DON'T WORRY ABOUT THIS BYTE\n         OI    SWITCH,$RESET         SET FLAG INDICATING WE RESET\n         B     EXIT00                GO ISSUE RESET\n         EJECT\n*\n*\n*=====================================================================*\n*     ALL DONE FOR NOW, CLOSE THE FILE AND FREEMAIN                   *\n*=====================================================================*\n*\nCLOSE    EQU   *\n         TM    SWITCH,$OPENED        WAS THE FILE OPENED?\n         BZ    FREE                   NO...DON'T CLOSE IT\n*        LA    R8,FORMFILE            YES..LOAD IT'S ADDRESS\n*        CLOSE ((R8))                      AND CLOSE IT\n*\n         LA    1,ARG1               ( LOAD ADDR OF AGRUMENT LIST )\n         SVC   20                   ( ISSUE CLOSE SVC            )\n*\n         LA    R8,FORMFILE           LOAD DCB ADDRESS\n         FREEPOOL ((R8))             FREE THE BUFFER POOLS\n*\nFREE     EQU   *\n         TM    SWITCH,$GETMAIN       DID WE DO A GETMAIN?\n         BZ    EXIT04                 NO...DON'T DO A FREEMAIN\n         LA    R8,WORKLEN             YES..GET THE LENGTH\n         L     R7,GETSAVE                  AND THE ADDRESS\n         FREEMAIN RC,LV=(R8),A=(R7),SP=240 AND FREE IT\n         LTR   R15,R15               IS THE RETURN CODE ZERO?\n         BNZ   ERROR4                 NO...TELL ME ABOUT IT\n         B     EXIT04                 YES..EXIT, ALL DONE\n         EJECT\n*\n*\n*=====================================================================*\n*     EXIT WITH RC=00  (PROCESS LINE AND COME BACK)                   *\n*=====================================================================*\n*\nEXIT00   EQU   *\n         LM    R14,R12,12(R13)       RESTORE REGS 14 THRU 12\n         LA    R15,00                LOAD R15 WITH RC=00\n         BR    R14                   RETURN TO VPS\n*\n*\n*=====================================================================*\n*     EXIT WITH RC=04  (DON'T PROCESS AND DON'T COME BACK)            *\n*=====================================================================*\n*\nEXIT04   EQU   *\n         NI    SWITCH,$CLEAR         CLEAR ALL SWITCHES\n         LM    R14,R12,12(R13)       RESTORE REGS 14 THRU 12\n         LA    R15,04                LOAD R15 WITH RC=04\n         BR    R14                   RETURN TO VPS\n         EJECT\n*\n*\n*=====================================================================*\n*     DCB ABEND EXIT ROUTINE  (ENTERED WHEN A MEMBER IS NOT FOUND)    *\n*=====================================================================*\n*                                                                     *\n*     CONTROL IS PASSED TO THIS ROUTINE IMMEDIATELY AFTER ISSUING     *\n*     THE OPEN SVC (SVC 22) IF THE MEMBER IS NOT IN THE FORMS FILE.   *\n*---------------------------------------------------------------------*\n*\nERROR1   EQU   *\n         TM    3(R1),X'04'           O.K. TO IGNORE THIS ABEND?\n         BZ    BLOWUP                 NO...HAVE TO BLOW UP THEN\n         MVI   3(R1),X'04'            YES..SET CODE TO IGNORE IT\n         OI    SWITCH,$NOTFND              AND SET ERROR SWITCH\n         RETURN ,                    FALL BACK INTO PROGRAM FLOW\nBLOWUP   ABEND 77,REASON=77\n*\n*\n*=====================================================================*\n*     ERROR MESSAGE ROUTINE FOR MEMBER NOT FOUND                      *\n*=====================================================================*\n*\nERROR2   EQU   *\n         MVC   MSG4(8),JFCB1+44      MOVE FORM TO MESSAGE FIELD\n         MVC   LINELND(MSG1L),MSG4   MOVE MESSAGE TO LINE AREA\n         MVI   LINELNC,C'-'          SET CARR CNTL FOR TRIPLE SPACE\n         LA    R8,MSG1L+1            LENGTH OF MESSAGE + 1\n         STH   R8,LINELNL             FOR CARR CNTL & STORE IT\n         MVI   LINELNF,$LINEHCC      DESIGNATE LINE HAS CARR CNTL\n         MVI   LINELNF2,X'00'        DON'T WORRY ABOUT THIS FLAG\n         OI    SWITCH,$MESSAGE       SET MESSAGE SWITCH\n         B     EXIT00                GO PRINT THE MESSAGE\n*\n*\n*=====================================================================*\n*     ERROR MESSAGE ROUTINE FOR FAILED GETMAIN                        *\n*=====================================================================*\n*\nERROR3   EQU   *\n         MVC   LINELND(MSG2L),MSG2   MOVE MESSAGE TO LINE AREA\n         MVI   LINELNC,C'-'          SET CARR CNTL FOR TRIPLE SPACE\n         LA    R8,MSG2L+1            LENGTH OF MESSAGE + 1\n         STH   R8,LINELNL             FOR CARR CNTL & STORE IT\n         MVI   LINELNF,$LINEHCC      DESIGNATE LINE HAS CARR CNTL\n         MVI   LINELNF2,X'00'        DON'T WORRY ABOUT THIS FLAG\n         OI    SWITCH,$MESSAGE       SET MESSAGE SWITCH\n         B     EXIT00                GO PRINT THE MESSAGE\n*\n*\n*=====================================================================*\n*     ERROR MESSAGE ROUTINE FOR FAILED FREEMAIN                       *\n*=====================================================================*\n*\nERROR4   EQU   *\n         MVC   LINELND(MSG3L),MSG3   MOVE MESSAGE TO LINE AREA\n         MVI   LINELNC,C'-'          SET CARR CNTL FOR TRIPLE SPACE\n         LA    R8,MSG3L+1            LENGTH OF MESSAGE + 1\n         STH   R8,LINELNL             FOR CARR CNTL & STORE IT\n         MVI   LINELNF,$LINEHCC      DESIGNATE LINE HAS CARR CNTL\n         MVI   LINELNF2,X'00'        DON'T WORRY ABOUT THIS FLAG\n         OI    SWITCH,$MESSAGE       SET MESSAGE SWITCH\n         B     EXIT00                GO PRINT THE MESSAGE\n         EJECT\n*\n*\n*=====================================================================*\n*=====================================================================*\n*     MISCELLANEOUS WORK FIELDS AND STUFF                             *\n*=====================================================================*\n*\nRESETCMD EQU   *\n         DC    C' =UDK=~'\nHEX      DC    X'0D25'    (X'0D' = CARRIAGE RETURN,  X'25' = LINEFEED)\n         DC    C' ~+X'\n         DC    X'0D25'\n         DC    C' =UDK=~'\n         DC    X'0D25'\n         DC    C' ~+P'\n         DC    X'0D25'\nRESETL   EQU   *-RESETCMD\n*\nMSG1     DC    C'         WAS NOT FOUND IN THE FORMS FILE'\n         DC    C'...VTAM.VPS.FORMS'\nMSG1L    EQU   *-MSG1\n*\nMSG2     DC    C'   *** GETMAIN FAILED *** '\n         DC    C'...CONTACT SOFTWARE, 586-0701, IMMEDIATELY!!!'\nMSG2L    EQU   *-MSG2\n*\nMSG3     DC    C'   *** FREEMAIN FAILED *** '\n         DC    C'...CONTACT SOFTWARE, 586-0701, IMMEDIATELY!!!'\nMSG3L    EQU   *-MSG3\n*\nDCBMDL   DCB   DDNAME=FORMFILE,DSORG=PS,MACRF=GM,                      *\n               EXLST=EXLSTMDL,EODAD=CLOSE,EROPT=ACC\nDCBL     EQU   *-DCBMDL\n*\nEXLSTMDL DS    0F                     EXIT LIST FOR FORMFILE DCB\n         DS    X'07'                  INDICATE JFCB EXIT IS ACTIVE\n         DS    AL3(JFCB1)             ADDR OF JFCB WORK AREA\n         DC    X'11'                  INDICATE ABEND EXIT IS ACTIVE\n         DC    AL3(ERROR1)            ADDR OF ABEND EXIT ROUTINE\n         DC    X'80000000'            INDICATE END OF LIST\nEXLSTL   EQU   *-EXLSTMDL\n*\nBLANK    DC    CL8' '\n*\n         LTORG ,\n         EJECT\n*\n*\n*=====================================================================*\n*     DSECTS                                                          *\n*=====================================================================*\n*\nWORKAREA DSECT\n*\nEXIT1    DS    0F                     EXIT LIST FOR FORMFILE DCB\n         DS    X'07'                  INDICATE JFCB EXIT IS ACTIVE\n         DS    AL3(JFCB1)             ADDR OF JFCB WORK AREA\n         DS    X'11'                  INDICATE ABEND EXIT IS ACTIVE\n         DS    AL3(ERROR1)            ADDR OF ABEND EXIT ROUTINE\n         DS    X'80000000'            INDICATE END OF LIST\n*\nJFCB1    DS    0F                     JFCB FOR FORMFILE\n         DS    CL176\n*\nFORMFILE DCB   DDNAME=FORMFILE,DSORG=PS,MACRF=GM,                      *\n               EXLST=EXIT1,EODAD=CLOSE,EROPT=ACC\n*\nARG1     DS    F                      ARGUMENT FOR RDJFCB, OPEN, CLOSE\nFLWD     DS    F                      SAVE AREA FOR LRECL\n*\nMSG4     DS    C'         WAS NOT FOUND IN THE FORMS FILE'\n         DS    C'...VTAM.VPS.FORMS'\n*\nWORKLEN  EQU   *-WORKAREA\n*\n*\n*---------------------------------------------------------------------*\n         EJECT\n*---------------------------------------------------------------------*\nUSERAREA DSECT                     USER AREA DSECT  (2 WORDS)\nGETSAVE  DS    F                   SAVE AREA FOR GETMAIN ADDR\nSWITCH   DS    XL1                 WORK SWITCH\n$CLEAR   EQU   B'00000000'\n$OPENED  EQU   B'10000000'\n$RESET   EQU   B'01000000'\n$MESSAGE EQU   B'00100000'\n$GETMAIN EQU   B'00010000'\n$NOTFND  EQU   B'00001000'\n$UNUSED3 EQU   B'00000100'\n$UNUSED2 EQU   B'00000010'\n$UNUSED1 EQU   B'00000001'\n         DS    XL3\n*---------------------------------------------------------------------*\n         VPSSSYAT                  SYSTEM ATTRIBUTE  DSECT\n*---------------------------------------------------------------------*\n         VPSSPRAT                  PRINTER ATTRIBUTE DSECT\n*---------------------------------------------------------------------*\n         VPSSDSAT                  DATASET ATTRIBUTE DSECT\n*---------------------------------------------------------------------*\n         VPSSLINE                  LINE WORK AREA    DSECT\n*---------------------------------------------------------------------*\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT144/FILE144.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT144", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}