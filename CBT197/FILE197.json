{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011457000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1528436, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 17, "INMDSNAM": "CBT.V500.FILE197.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1528436, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1528436, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE197.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x18\\x0f'", "DS1TRBAL": "b'\\x05\\xfa'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x83\\x00\\n\\x01\\x85\\x00\\x04\\x00\\x19'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x14I\\x00\\x12\\x00\\x0e\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T14:49:00", "lines": 18, "newlines": 14, "modlines": 0, "user": "SBGCSC"}, "text": "//*                                                                 *   FILE 197\n//*       This is a collection of mods to IMS 3.1 that are on       *   FILE 197\n//*       Rockwell's system.  If you have any questions, please     *   FILE 197\n//*       contact:                                                  *   FILE 197\n//*                                                                 *   FILE 197\n//*               Hugh Hoskins                                      *   FILE 197\n//*               Rockwell International                            *   FILE 197\n//*               m/s 110-SE28                                      *   FILE 197\n//*               P.O. Box 2515                                     *   FILE 197\n//*               2201 Seal Beach Blvd.                             *   FILE 197\n//*               Seal Beach, California 90740                      *   FILE 197\n//*                                                                 *   FILE 197\n//*               Phone:    (310) 797-2835                          *   FILE 197\n//*                                                                 *   FILE 197\n//*       Hugh says that an experienced IMS systems programmer      *   FILE 197\n//*       should know what is going on.  Sorry that there's no      *   FILE 197\n//*       better documentation for now.                             *   FILE 197\n//*                                                                 *   FILE 197\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "##DSECTS": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x08\\xb7\\x08\\xb7\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 2231, "newlines": 2231, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31## JOB 'IMSGROUP  SH28205610*110A044         015  1001009037',\n//  MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016,\n//  REGION=2048K,TIME=010\n//*MAIN ORG=LOCAL,CLASS=L5\n//IMSDSECT EXEC IMSUPDTE,P=IMA,DISPR=SHR,PGMC=IEV90,\n//   SYMI=SOURCETM,SYMO=SOURCETM,\n//   SMEMBER=IMSDSECT,LMEMBER=IMSDSECT,\n//   DECK='NODECK,BATCH',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   CONDL=0,\n//   ACCT=0\n//*.SYSPRINT DD DISP=SHR,DSN=IMA.DSECT2\n//*** COPIED FROM IMA.SOURCESV(DFSADSCT)\n//C.SYSIN DD *\n        TITLE ' AN  I N D E X.'\n**********************************************************************\n*                                                                    *\n*      THIS MODULE PROVIDES IMS/VS CONTROL BLOCK DSECTS.             *\n*                                                                    *\n*      AN ALPHBETICAL INDEX STARTS ON FRAME A06.                     *\n*                                                                    *\n*      EACH CARD STARTS WITH A TABLE OF CONTENTS OF THAT CARD.       *\n*                                                                    *\n**********************************************************************\n*                                                                    *\n*         IN THE FOLLOWING LIST OF DSECTS AND OWNING FUNCTION,       *\n*         AN ASTERISK ('*') PRECEDING ANY DSECT NAME INDICATES       *\n*         THAT THE NAME IS ASSIGNED BY THIS MODULE, RATHER           *\n*         THAN BEING THE OFFICIAL DSECT NAME.                        *\n*                                                                    *\n**********************************************************************\n*                                                                    *\n*  AASTAREC - STAT          ABMSGDS  - DB            ACLOGREC - LOGR *\n*  ADSC     - FP            ADSL     - FP                            *\n*  ATLOGREC - LOGR          A00      - COMM          A01      - COMM *\n*  A02      - COMM          A03      - COMM          A04      - COMM *\n*  A50      - COMM                                                   *\n*  A51      - COMM          A52      - COMM          A53      - COMM *\n*  A54      - COMM          A55      - COMM          A56      - COMM *\n*  A57      - COMM          A58      - COMM          A59      - COMM *\n*  A70      - COMM          A71      - COMM          BATW     - DB   *\n*  BALG     - FP            BCB      - DB            BCP      - SYS  *\n*  BCPPSTS  - SYS           BCPVOLS  - SYS           BFSP     - DB   *\n*  BFUS     - DB            BHDR     - FP            BLDWT    - UTIL *\n*  BLK      - DB                                     BQEL     - DB   *\n*                           BSTAREC  - STAT          BUFBTAM  - COMM *\n* *BUFBTAMR - COMM          BUFLU6   - COMM          BUFMS    - MSC  *\n*  BUFSLUP  - COMM          BUFVTAM  - COMM          BUFVTPRE - COMM *\n*  BUFWORK  - COMM          BUF3600  - COMM          B01      - COMM *\n*  B02      - COMM          B03      - COMM          B50      - COMM *\n*  B70      - COMM          CADSECT  - SYS           CAPLOG   - LOGR *\n*  CARDFMT  - LOGR          CBUF     - SV                            *\n*  CCB      - COMM          CDS      - UTIL                          *\n*  CIB      - COMM         *CIBEXT   - COMM          CIR      - DB   *\n*                          *CLB (SEE DFSMSCLB)       CMDFMT   - COMM *\n*  CMLOG    - LOGR          CMSCREC  - LOGR          CMTIAVM  - DB   *\n*  CNSW     - DB            CNT      - COMM                          *\n*  CONSAVE  - COMM          CRB      - COMM          CSSW     - DB   *\n*  CSYN     - FP                                                     *\n*  CTB      - COMM                                                   *\n*  CTELDESC - LOGR          CTREC    - LOGR          CTT      - COMM *\n*  CUMCONST - UTIL         *CUMHDR (SEE CUMCONST)    CUMREC   - UTIL *\n*  CVB      - COMM          C00      - COMM          C01      - COMM *\n*  C02      - COMM          C03      - COMM          C50      - COMM *\n*  C51      - COMM          C52      - COMM          C53      - COMM *\n*  C54      - COMM          C70      - COMM          C71      - COMM *\n*  DAWE     - DB             *DBCTM  - SV                            *\n*  DBCUMO   - UTIL          DBDDSECT - DB            DBDNLIST - DB   *\n*  DBDSORTB - DB            DBFDEBSC - FP   *                        *\n*  DBFMDSND - FP            DBFMSDBW - FP                            *\n*  DBKL     - FP            DBLOG    - LOGR                          *\n*  DBPCB    - DB            DBPCBDV  - DB            DBSTATS  - DB   *\n*  DCBTABDS - FP           *DCTLVTAM - COMM         *DCTL327V - COMM *\n* *DCTL3600 - COMM          DCW      - COMM                          *\n*                           DDIR     - DB            DEB      - DB   *\n*  DEBACSMD - DB            DEBDASD  - DB            DEBOSAME - DB   *\n*  DEBOSTAB - DB            DEBSUBNM - DB            DEBXTN   - DB   *\n*  DECB     - SYS           DEND     - FP            DEVITB   - UTIL *\n*  DEVPFKS  - UTIL          DEVTABLE - SYS           DFLDITB  - UTIL *\n*  DFSAGT   - SYS           DFSAIDX  - SYS           DFSAURQL - DB   *\n*  DFSEEQE  - SYS           DFSAVEC  - SYS                           *\n*  DFSCBTS  - DB            DFSDLIST - SYS           DFSDBPFH - SYS  *\n*  DFSDOPTB - SYS           DFSDPARM - SYS                           *\n*  DFSDPRH  - SV            DSSI     - SV            DFSE     - FP   *\n*  DFSEQEL  - SV                                                      *\n*  DFSFRLWA - LOGR          DFSFXC00 - DB                            *\n*  DFSHSRVW - COMM          DFSIEQE  - SV            DFSISIT  - SYS  *\n*  DFSMFSTL - COMM         *DFSMSCLB - COMM                          *\n*  DFSNCB   - DB            DFSPLDT0 - SYS           DFSPRPX0 - SYS  *\n*  DFSPRRG0 - SYS           DFSRCWKA - DBRC                          *\n*  DFSRPST  - DB            DFSRRTPR - SV            DFSSRB   - SV   *\n*  DFSUARC  - SYS                                                    *\n*  DFSTORPL - SYS           DFSUSTAT - UTIL          DFSVTDIR - DB   *\n*                                                    DIFDELIM - COMM *\n*  DIFFDE   - COMM          DIFHEADR - COMM          DIFNULL  - COMM *\n*  DIFOPT   - COMM          DIFPFKEY - COMM          DIFPNTBL - COMM *\n*  DIFSECTN - COMM          DIFTBLE  - COMM          DIVITB   - UTIL *\n*  DLLEVTBL - DB                                                     *\n*  DLOGDATA - SV            DLOGDB   - SV            DLOGDSHR - SV   *\n*  DLOGFSE  - SV            DLOGKEY  - SV            DLOGTRCK - SV   *\n*  DLREC    - LOGR          DLSRWORK - SV                            *\n*  DLTR     - DB            DLTRLOGR - LOGR                          *\n*  DLTTRCE  - DB            DLTWA    - DB            DMAC     - FP   *\n*  DMAN     - DB            DMB      - DB            DMBAMP   - DB   *\n*  DMBCPAC  - DB            DMBDACS  - DB            DMBPSDB  - DB   *\n*  DMBSEC   - DB            DMBXMPRM - DB            DMCB     - FP   *\n*  DMHR     - FP            DOCL     - FP                            *\n*  DOFCOM   - COMM          DOFFDE   - COMM                          *\n*  DOFHEADR - COMM          DOFLINK  - COMM          DOFOPT   - COMM *\n*  DOFSECT  - COMM          DOFSOPT  - COMM          DOL      - DB   *\n*  DPDIR    - DB            DSEG     - FP                            *\n*  DSG      - DB            DSPPST   - SYS                           *\n*  DSPSRB(SEE SRBSECT)      DSPWRK   - SYS                           *\n*  DSPWRK1  - SYS           DTRMPOOL - SYS           DTSTREC  - STAT *\n*  DUMPHDR  - UTIL          DVCTBL   - COMM          D01      - COMM *\n*  D03      - COMM          D04      - COMM          D50      - COMM *\n*  D70      - COMM          D71      - COMM          ECNT     - FP   *\n*  EDSG     - DB                                                     *\n*  EEVT     - SYS           EEVTP    - SYS           DMHB     - FP   *\n*  EMP      - SYS           EPCB     - FP            EPF      - SYS  *\n*  EPST     - FP            EQE      - FP            ERLGDSCT - LOGR *\n*  ERMSA    - FP                                                     *\n*  ESCD     - FP            ESETP    - SYS           ESFC     - SYS  *\n*  ESGO     - SYS                                                    *\n*  ESRB     - FP            ESRT     - FP            ESSW     - SYS  *\n*  ESTR     - SYS           ESTAREC  - STAT          ES30     - SYS  *\n*  ETPCP    - DB                                     EXTDBD   - DB   *\n*  EZS      - SYS           E01      - COMM          E71      - COMM *\n*  FAQE     - SYS           FBP      - COMM                          *\n*  FDB      - DB            FDBF     - FP            FEILINK  - COMM *\n*  FERSFLAG - COMM          FETUNIT  - COMM                          *\n*  FLD      - DB            FLDC     - FP                            *\n*  FLDE     - UTIL          FLDQ     - FP            FLDTAB   - DB   *\n*  FLIM     - FP            FLOM     - FP            FLRE     - FP   *\n*  FLSD     - FP                                                     *\n*  FLSF     - FP            FLSY     - FP                            *\n*  FMHMSC   - MSC           FMHTYPE1 - COMM                          *\n*  FMTITB   - UTIL          FPALDS   - FP            FPCP     - FP   *\n*  FPF      - COMM          FRB      - DB            FRE      - COMM *\n*                           FSA      - FP            FSB      - DB   *\n*  FSBLIST  - DB            FSTAREC  - STAT          FTCBTBL  - SYS  *\n* *FUNCODE  - DB            F01      - COMM          F02      - COMM *\n*  F50      - COMM          F70      - COMM          GB       - DB   *\n*  GBCB     - DB                                                     *\n*  GESE     - SYS           GLT      - DB            GPT      - DB   *\n*  GQCB     - DB            GRPITB   - UTIL          G00      - COMM *\n*  G01      - COMM          G02      - COMM          G03      - COMM *\n*  G06      - COMM          G07      - COMM          G08      - COMM *\n*  G50      - COMM          G51      - COMM          G52      - COMM *\n*  G53      - COMM          G54      - COMM          G70      - COMM *\n* *HDS0DS   - DB           *HDTRX (SEE DLTR)         HHSTRT   - DB   *\n*  HICL5947 - SV            HSIIC12  - SV            HSSD     - DB   *\n*  HSSO     - SV            HSSP     - SV            HSSR     - SV   *\n*  HTRWKA   - COMM          HWKA     - COMM                          *\n*  H03      - COMM          H04      - COMM          H05      - COMM *\n*  H07      - COMM                                                   *\n*  H08      - COMM          H09      - COMM          H10      - COMM *\n*  H11      - COMM          H12      - COMM          H50      - COMM *\n*  H51      - COMM          H52      - COMM          H53      - COMM *\n*  H54      - COMM          H70      - COMM          H71      - COMM *\n*  H72      - COMM          H73      - COMM          IBFPRF   - DB   *\n*  IBPOOL   - DB            IDAACB   - DB            IDAAMB   - DB   *\n*  IDAAMBL  - DB            IDABSPH  - DB            IDABUFC  - DB   *\n*  IDAEDB   - DB            IDAEDBHD - DB            IDALPMB  - DB   *\n*  IDAPLH   - DB            IDAPLHDR - DB            IDARPL   - DB   *\n*  IDLWORK  - SYS           IECTDECB - COMM          IECTIOB  - DB   *\n*  IENQCB   - SYS           IENQE    - SYS           IFE      - UTIL *\n* *IFGRPL (SEE BUFSLUP)     IFITB    - UTIL          IFIXLIST - SYS  *\n*  IHADCB   - DB            IHADCWB  - DB            IHADCWQ  - DB   *\n*  ILRDOC   - LOGR          IMCS     - MSC           IMSTAREC - STAT *\n*  INDXTAB  - DB            INTLIST  - DB            IOAR     - FP   *\n*  IOAREA   - UTIL          IOMA     - DB            IOSB     - DB   *\n*  IOSBQCBD - DB            IPB      - SYS           ISRBPARM - SYS  *\n*  ISTWORK  - SYS           ISUBPL   - DB            ITBNODE  - UTIL *\n*  ITRMWRK  - SYS           IXLATLST - SYS           IWALE    - SYS  *\n*  I01      - COMM                                                   *\n*  I02      - COMM          I03      - COMM          I50      - COMM *\n*  I51      - COMM          I70      - COMM          I71      - COMM *\n*  JCB      - DB            JCBP     - DB            JM       - LOGR *\n*  JRNLDSCT - UTIL          J01      - COMM          J02      - COMM *\n*  J50      - COMM          J51      - COMM          J52      - COMM *\n*  J70      - COMM                                                   *\n*  KETWRD   - COMM                                                   *\n*  K01      - COMM          K50      - COMM          K70      - COMM *\n*  LAWE     - DB            LBUFFER  - SYS           LCB      - MSC  *\n*  LCDEST   - LOGR          LCHILD   - DB            LCONVERS - LOGR *\n*  LCRE     - SYS           LDBQ     - FP                            *\n* *LEDSCT (SEE CDS)         LELOGREC - LOGR                          *\n*  LESE     - SYS           LESEP    - SYS           LEV      - DB   *\n*  LINTD    - LOGR                                                   *\n*  LITP     - SYS          *LLB (SEE IECTDECB)      *LNB (SEE CNT)   *\n*  LNREC    - LOGR          LOGRCD   - SYS           LOG01    - LOGR *\n*  LOG13    - LOGR          LOG16    - LOGR          LOG41DSC - LOGR *\n*  LSRT     - FP           *LTB (SEE CTB)            LTRWKA   - COMM *\n*  LU6WA    - COMM          LWKA     - COMM                          *\n*  LXBDEF   - MSC           L01      - COMM          L02      - COMM *\n*  L50      - COMM          L56X     - SV            L67FAREC - LOGR *\n*  L70      - COMM          L71      - COMM          MBRNTRY  - UTIL *\n*  MCT      - UTIL          MCTA     - UTIL          MCTE     - UTIL *\n*  MCTLRECD - FP            MDE      - DB            MDL      - COMM *\n*                           MFLDITB  - UTIL          MFSFLDE  - COMM *\n*  MFSGBL   - UTIL          MFSSEGE  - COMM          MIDFDE   - COMM *\n*  MIDGRP   - COMM          MIDHEADR - COMM          MIDLINK  - COMM *\n*  MIDLITOR - COMM          MIDSEG   - COMM          MLTE     - FP   *\n*  MOASN    - SYS           MODEL    - SYS                           *\n*  MODFDE   - COMM          MODGRP   - COMM          MODHEADR - COMM *\n* *MODID    - DB            MODTBL   - SYS           MODTBLPX - SYS  *\n*  MP       - SYS                                                    *\n*  MRMB     - FP            MSDBSSA  - FP            MSDBTBL  - FP   *\n*  MSDIRECD - FP            MSGBUFPX - SV                            *\n*  MSGITB   - UTIL          MSGLU6   - LOGR                          *\n*  MSGMAP   - COMM          MSGMSC   - LOGR                          *\n*  MSGRACF  - LOGR          MSGSITEM - LOGR          MSGXDATA - SV   *\n*  MSNQLIST - FP                                                     *\n*  MSRSEG   - MSC           MSUPLOG  - FP           *MTMA     - MSC  *\n*  MTMWHDR  - MSC           MTMWINDO - MSC           MWBSIDE  - MSC  *\n*  M00      - COMM          M01      - COMM          M02      - COMM *\n*  M03      - COMM          M04      - COMM          M05      - COMM *\n*  M50      - COMM                                                   *\n*  NID      - SYS           NTE      - UTIL          N00      - COMM *\n*  N01      - COMM                                                   *\n*  N50      - COMM          N70      - COMM          OUTWORK  - COMM *\n*                                                                    *\n*  PALOGREC - LOGR          PAPL     - SV            PAPLRINL - SV   *\n*  PAPLRRCT - SV            PAPLSTAR - SV                            *\n*  PARMLIST - SYS           PASITB   - UTIL                          *\n*  PCIB     - COMM          PDIR     - DB            PDIRNTRY - COMM *\n*  PDL      - SV            PRP      - SV                            *\n*                                                    PFECB    - COMM *\n*  PITREC   - LOGR          PITRNTRY - LOGR          PMLT     - FP   *\n*  PPGITB   - UTIL          PPRE     - DB                            *\n*  PPT      - UTIL                                                   *\n*                           PREFIX   - DB            PRM      - DB   *\n*  PSB      - DB            PSE      - UTIL          PST      - SYS  *\n*  PTAL     - COMM                                                   *\n*  PTH      - UTIL          P01      - COMM          P50      - COMM *\n*  P70      - COMM                                                   *\n*  QBFALST  - DB            QBFRE    - SYS           QBLKRCDD - SYS  *\n*  QCB      - SYS          *QCBDC    - COMM          QCSS     - DB   *\n*  QDCBLST  - DB            QDEST    - SYS                           *\n*  QE       - SYS           QEL      - DB            QHDR     - DB   *\n*  QICR     - SV                                                     *\n*  QLFXBERR - LOGR          QLFXFREE - LOGR          QLFXQBLK - LOGR *\n*  QLFXRERR - LOGR          QLGMSCHN - DB            QLOGCANC - LOGR *\n*  QLOGDEQS - LOGR                                                   *\n*  QLOGENQU - LOGR          QLOGFREE - LOGR          QLOGGETU - LOGR *\n*  QLOGMSGD - LOGR          QLOGMSGI - LOGR          QLOGMSGP - LOGR *\n*  QLOGREJE - LOGR          QLOGRELI - LOGR          QLOGRELO - LOGR *\n*  QLOGXFER - LOGR          QPOOL    - SYS           QRD      - SV   *\n*  QSAPWKAD - SYS           QSAV     - DB                            *\n*  QTPPCB   - COMM          Q01      - COMM          Q02      - COMM *\n*  Q50      - COMM          Q70      - COMM          Q71      - COMM *\n*  RCHKREC  - SYS           RCNT     - MSC           RCTE     - FP   *\n*  RDBLOCK  - COMM                                                   *\n*  RDSW     - DB            RDSEG    - COMM          REORGHDR - UTIL *\n*  REQBLK   - DB            RET      - COMM                          *\n*  RLWWORKD - SYS           RPLI     - DB            RRE      - SYS  *\n*  RSE      - UTIL                                                   *\n*  RSESEG   - COMM          RSISEG   - COMM          RSRSEG   - COMM *\n*  RSSSEG   - COMM                                                   *\n*  RVET     - DB            R01      - COMM          R50      - COMM *\n*  R70      - COMM          SAP      - SYS           SAVWORK  - MSC  *\n*  SBDCB    - DB            SBHE     - DB            SBPARM   - DB   *\n*  SBPSS    - DB            SBPST    - DB            SBSCD    - DB   *\n*  SBSNA    - DB           *SBUF (SEE IBFPRF)                        *\n*  SCANPARM - UTIL          SCAR     - DB            SCA1     - DB   *\n*  SCD      - SYS           SCHCTLBK - UTIL                          *\n*  SCHGROUP - UTIL         *SCHPT    - SYS           SCREC    - LOGR *\n*  SDB      - DB            SDBF     - FP            SDBXP    - DB   *\n*  SDSG     - DB                                                     *\n*  SDW      - UTIL          SECITB   - UTIL          SEGITB   - UTIL *\n*  SEGTAB   - DB            SID      - MSC           SIGNSAVE - SV   *\n*  SLU1STK  - DC                                                     *\n*  SLX      - SYS                                                    *\n*  SLXLSTAT - SYS           SMB      - SYS           SMLT     - FP   *\n*  SMREC    - LOGR          SNELDESC - LOGR          SNMT     - FP   *\n*  SNREC    - LOGR          SPAD     - COMM          SPCB     - FP   *\n*  SPINDATA - SYS           SPQB     - COMM          SPRM     - SV   *\n*  SQPST    - SYS           SRAN     - DB            SRBSECT  - DC   *\n*  SSIB     - DB            SSIE     - SYS           SSITP    - SYS  *\n*  SSMM     - FP            SSOB     - DB            SSREC    - LOGR *\n*  SSTAREC  - STAT          STAEPARM - SYS           STATVBH  - DB   *\n*  STDBLOG  - LOGR          STKIDBLK - UTIL          STKIDQE  - UTIL *\n*  STLOGREC - LOGR          SWA      - UTIL          SXREC    - LOGR *\n*  SYM      - UTIL          SYME     - UTIL          S00      - COMM *\n*  S01      - COMM          S02      - COMM          S03      - COMM *\n*  S04      - COMM          S3REC63  - LOGR                          *\n*  S50      - COMM          S70      - COMM                          *\n*  TABLE    - UTIL          TBE      - COMM                          *\n*  TBLE     - UTIL          TBLITB   - UTIL          TCT      - SYS  *\n*  TLAM     - UTIL          TPCB     - SYS          *TRACEHDM - DB   *\n*  TRACEHDR - LOGR          TRACEMAP - MSC           TRCENT   - DB   *\n*  TSE      - UTIL          TSTREC   - STAT          TTE      - UTIL *\n*  TWB      - SV                                                     *\n*  T02      - COMM          T03      - COMM          T04      - COMM *\n*  T05      - COMM          T06      - COMM          T50      - COMM *\n*  T51      - COMM          T70      - COMM          T71      - COMM *\n*  UCFCMVEC - UTIL          UCFFCL   - UTIL          UCSTAT   - UTIL *\n*  UDTB     - FP            UHIC     - SV            UTDD     - FP   *\n*  UTDW     - FP            UTHR     - FP                            *\n*  U00      - COMM          U50      - COMM          U70      - COMM *\n*                           U7CADBCD - UTIL          U7CAIDCD - UTIL *\n*  U7DDLST  - UTIL          U7FDRWK  - UTIL          U7IMCARD - UTIL *\n*  U7PADRCK - UTIL          U7PADUCK - UTIL          U7PAFINT - UTIL *\n*  U7PAILCK - UTIL          U7PAIMCK - UTIL          U7PAPUCK - UTIL *\n*  U7PARUCK - UTIL          U7PARVCK - UTIL          U7PASNCK - UTIL *\n*  U7PASRCK - UTIL          U7PASUCK - UTIL          U7PRM    - UTIL *\n*  U7RVCARD - UTIL          U7STAIPM - UTIL          U7SUCARD - UTIL *\n*  U7WRKDCT - UTIL          U7ZBCARD - UTIL                          *\n*  VARPREF  - COMM          VBSCTL   - UTIL                          *\n*  VECTOR   - SYS           VLISTDST - COMM                          *\n*  VTDENTRY - DB            VTE      - UTIL                          *\n*  V00      - DC            V01      - COMM                          *\n*  V10      - DC            V11      - COMM                          *\n*  V50      - DC                                                     *\n*  V70      - DC            V71      - COMM                          *\n*  WORK     - DB            WORKAREA - COMM                          *\n*  WORKSTOR - COMM          WRKFILE1 - UTIL          WRKFIL2  - UTIL *\n*  WRKFIL3  - UTIL                                                   *\n*  W00      - COMM          W01      - COMM          W02      - COMM *\n*  W03      - COMM          W04      - COMM                          *\n*  W10      - COMM          W13      - COMM                          *\n*  W70      - COMM                                   XBLK     - DB   *\n*  XCRB     - FP                                                     *\n*  XLOGBKET - LOGR          XLOG18   - LOGR          XREF     - UTIL *\n*  XRPSTAB  - DB                                                     *\n*  XWORKARA - DB            XWSSACA  - DB            X1       - COMM *\n*  X10      - COMM          X11      - COMM          X12      - COMM *\n*  X13      - COMM          X14      - COMM          X15      - COMM *\n*  X2       - COMM                                                   *\n*  X3       - COMM          X4       - COMM          X5       - COMM *\n*  X6       - COMM          X7       - COMM          X8       - COMM *\n*  X9       - COMM          X99      - COMM          ZIB      - SYS  *\n*                                                                    *\n**********************************************************************\n         START\n TITLE 'IMS/VS/DB DSECTS:  ABMSGDS'\n         IABMSG DSECT=YES                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  CMTIAVM'\n         CMTIAVM FUNC=DSECT                                    @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IDAACB'\n         IDLIVSAM ACB                                          @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IDAAMB'\n         IDLIVSAM AMB                                          @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IDAAMBL'\n         IDLIVSAM AMBL                                         @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  BATW'\n         DFSBATW\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  BCB'\n         DFSBCB FUNC=DSECT                                     @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  BQEL'\n         DFSBQEL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IDABUFC'\n         IDLIVSAM BUFC                                         @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  BCBQE, BCBPE, EQUATES FOR DFSBCBSS MACROS'\n         PRINT OFF\n         REQUATE SAVE=YES                                      @BM60166\n         PRINT ON\n         DFSBCB FUNC=EQU                                       @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  BFSP, BFUS, RPLI'\n         IDLIVSAM BFSP                                         @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IBFPRF, SBUF'\n         IBFPRF FMTLIST=NO,SBEXT=YES                           @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IBPOOL'\n         IBPOOL FMTLIST=NO                                     @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IDABSPH'\n         IDLIVSAM BSPH                                         @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  ISUBPL'\n         ISUBPL FMTLIST=NO                                     @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  CIR'\n         DFSCIR FUNC=DSECT                                     @BM60386\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  CNSW'\n         DFSCNSW\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  CSSW'\n         DFSCSSW\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DAWE'\n         DFSDAWE TYPE=ALL,FUNC=DSECT                           @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DFSAURQL'\n         DFSAURQL\n         DFSAURQL DSECT=SSPRM                                  @BM60166\n         DFSAURQL DSECT=UTPRM,PREFIX=AUT                       @BM60166\n         DFSAURQL DSECT=DSPRM                                  @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DBDDSECT, PREFIX, DMAN, SEGTAB, FLDTAB, LCHI;\n               LD, EXTDBD, DBDSORTB, INDXTAB'\n         IDBD\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DBDNLIST'\n         DBDNLIST\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DBPCB'\n         IDLI  DPCBASE=0,CALLER=IMS                            @BIL8MDC\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DBPCBDV'\n         IDLI  PDVBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DBSTATS'\n         IDLI  DBSBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DFSCBTS'\n         DFSCBTS FUNC=DSECT                                    @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DFSNCB'\n         DFSNCB\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DFSRPST'\n         DFSRPST ,                                             @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DFSVTDIR,VTDENTRY'\n         DFSVTDIR\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IHADCB '\n         DLGWORK TYPE=DSECT,FMLIST=NO                          @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IHADCWB'\n         IHADCWB\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IHADCWQ'\n         IHADCWQ\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DDIR'\n         IDLI  DDRBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DEB, DEBDASD, DEBACSMD, DEBSUBNM, DEBXTN, DE;\n               BOSAME, DEBOSTAB'\n         GBLC  &DFSYSVS                                        @BIHC9RL\n         AIF   ('&DFSYSVS' EQ 'VS201').SVSDEB                  @BIHC9RL\n         IDEBOSD LIST=YES                                      @BIHC9RL\n         AGO   .ENDDEB                                         @BIHC9RL\n.SVSDEB  ANOP                 GENERATE WITHOUT LIST FOR SVS.   @BIHC9RL\n         IDEBOSD\n.ENDDEB  ANOP\n*        END\n*        START                                                 @PL58837\n TITLE  'IMS/DB DSECTS:  DLOGDB, DLOGDSHR, DLOGTRCK, DLOGKEY, DLOGFSE, ;\n               DLOGDATA'                                       @PL58837\n         DFSDLOG ,                                             @PL58837\n*        END                                                   @PL58837\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DLTR, HDTRX'\n         IDLIVSAM TRACENT                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DLTWA, DLLEVTBL, DLTTRCE'\n         DLTWA TRACE=YES                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DMB, DMBAMP, DMBPSDB, DMBSEC, DMBDACS, DMBCP;\n               AC, DMBXMPRM'\n         IDLI  DMBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DOL'\n         DFSDOL FUNC=DSECT                                     @BM60386\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DPDIR'\n         DFSDPDIR\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DSG'\n         IDLI  DSGBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IDAEDBHD, IDAEDB'\n         IDLIVSAM EDB                                          @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  ETPCP'\n         DFSETPCP\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  FDB'\n         IDLI  FDBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  FLD'\n         IDLI  FLDBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  FRB'\n         DFSFRB ,                                              @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  FSB, FSBLIST'\n         IDLI  FSBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS -- DL/I FUNCTION CODES'\nFUNCODE  DSECT\n         IDLI  FUNBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  GB'\n         IGLI  GBBASE=0                                        @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  GBCB'\n         IGLI  GBCBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  GLT'\n         IGLI  GLTBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  GPT'\n         IGLI  GPTBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  GQCB'\n         IGLI  GQCBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  HDS0DS'\nHDS0DS   DSECT\n         PRINT OFF\n         IPST\n         PRINT ON\n         HDS0DS\n*        END\n*        START\n TITLE 'IMS/DB DSECTS:  HSSD'                                  @PL58837\n         DBFHSSD\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IDARPL'\n         IDLIVSAM RPL                                          @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  INTLIST'\n         INTLIST\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IECTIOB'\n         OSAMIOBD\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IOMA'\n         OSAMIOMA MASK=NO                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IOSBQCBD, IOSB'\n         PRINT OFF\n         COPY IMSPS                                            @BIHC9RL\n         PRINT ON\n         OSAMIOSB QCB=YES,IOSB=YES,FMTLIST=NO                  @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  JCBP, JCB, HHSTRT'\n         IDLI  JCBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  LAWE'\n         DFSLAWE FUNC=DSECT                                    @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  LEV'\n         IDLI  LEVBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IDALPMB'\n         IDLIVSAM LPMB                                         @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS -- STORAGE MGMT. MODULE ID''S'\nMODID    DSECT\n         IDLI  SMBASE=0                                        @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  IDAPLHDR, IDAPLH'\n         IDLIVSAM PLH                                          @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  MDE'\n         DFSMDE\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  PDIR'\n         IDLI  PDRBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  PPRE'\n         DFSPPRE FUNC=DSECT                                    @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  PRM'\n         PIPARM\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  PSB'\n         IDLI  PSBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  QBFALST, QDCBLST'\n         QBFALSTD ,                                            @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  QCSS'\n         DFSQCSS FUNC=DSECT                                    @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  QHDR'\n         DFSQHDR ,                                             @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  QLGMSCHN'\n         QLGMSCHN ,                                            @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  QSAV'\n         DFSQSAV\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  RDSW'\n         PRINT OFF                                             @BM60000\n         IEPF\n         OSAMDECB QEL=YES                                      @BM60386\n         PRINT ON                                              @BM60000\n         DFSRDSW\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  RVET'\n         DFSRVET FUNC=DSECT                                    @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBDCB'\n         DFSSBDCB\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBHE'\n         DFSSBHE\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBPARM'\n         DFSSBPAR\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBPSS'\n         DFSSBPSS\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBPST'\n         DFSSBPST\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBSCD'\n         DFSSBSCD\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBSNA'\n         DFSSBSNA\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SCAR, SCA1'\n         DFSSBCAR\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  SDB, SDBXP'\n         IDLI  SDBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS FOR SB: EDSG, SDSG'\n         DFSSBDSG\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SRAN'\n         DFSSBRAN\n*        END\n*        START\n TITLE 'IMS/DB DSECTS:  SPRM'                                  @PL58837\n         DSECT ,                                               @PL58837\n         DFSSPRM\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  SSIB'\n         DFSSSOB IEFJSSIB                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  SSOB'\n         DFSSSOB IEFJSSOB                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  STATVBH'\n         IDLIVSAM STATVBH                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  XBLK'\n         DFSXBLK\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  XRPSTAB'\n         DFSXRPST ,                                            @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  DFSFXC00, REQBLK, BLK, QCB, QEL, TRCENT'\n         XC00\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  XWORKARA, XWSSACA'\n         XMTWA\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  ''/DISPLAY'' FORMATS -- A00 THROUGH X99'\n         DISPLAY TYPE=ALL                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  BUFBTAM'\n         ICLI  BUFBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  BUFBTAMR'\n         ICLIRS BUFBASE=0                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  BUFLU6'\n         PRINT OFF\n         MACRO\n         BUFLU6\n         COPY BUFLU6                                           @BIHC9RL\n         MEND\n         PRINT ON\n         BUFLU6\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  BUFSLUP, IFGRPL'\n         PRINT OFF\n         MACRO\n         BUFSLUP\n         COPY BUFSLUP                                          @BIHC9RL\n         MEND\n         PRINT ON\n         BUFSLUP\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  BUFVTAM, IFGRPL'\n         PRINT OFF\n         MACRO\n         BUFVTAM\n         COPY BUFVTAM                                          @BIHC9RL\n         MEND\n         PRINT ON\n         BUFVTAM\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  BUFVTPRE'\n         BUFVTPRE\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  BUFWORK'\n         BUFWORK\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  BUF3600, IFGRPL'\n         PRINT OFF\n         MACRO\n         BUF3600\n         COPY BUF3600                                          @BIHC9RL\n         MEND\n         PRINT ON\n         BUF3600\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CCB'\n         ICLI  CCBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CIB'\n         ICLI  CIBBASE=0                                       @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CIBEXT'\nCIBEXT   DSECT\n         PRINT OFF\n         COPY CIB                                              @BIHC9RL\n         MACRO\n         CIBEXT\n         COPY  CIBEXT                                          @BIHC9RL\n         MEND\n         PRINT ON\n         CIBEXT\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CLB (IECTDECB)'\n         ICLI  CLBBASE=0                                       @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CMDFMT'\n         PRINT OFF\n         MACRO\n         CMDFMT\n         COPY CMDFMT                                           @BIHC9RL\n         MEND\n         PRINT ON\n         CMDFMT\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CNT (LNB)'\n         ICLI  CNTBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CONSAVE'\n         PRINT OFF\n         MACRO\n         CONSAVE\n         COPY CONSAVE                                          @BIHC9RL\n         MEND\n         PRINT ON\n         CONSAVE\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CRB'\n         ICLI  CRBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CTB (LTB)'\n         ICLI  CTBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CTT'\n         ICLI  CTTBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  CVB'\n         ICLI  CVBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  DCTLVTAM'\nDCTLVTAM DSECT\n         PRINT OFF\n         MACRO\n         DCTLVTAM\n         COPY DCTLVTAM                                         @BIHC9RL\n         MEND\n         ICLI  CTBBASE=0                                       @BIHC9RL\n         PRINT ON\n         DCTLVTAM\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  DCTL327V'\nDCTL327V DSECT\n         PRINT OFF\n         MACRO\n         DCTL327V\n         COPY  DCTL327V                                        @BIHC9RL\n         MEND\n         PRINT ON\n         DCTL327V\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  DCTL3600'\nDCTL3600 DSECT\n         PRINT OFF\n         MACRO\n         DCTL3600\n         COPY  DCTL3600                                        @BIHC9RL\n         MEND\n         PRINT ON\n         DCTL3600\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS: DCW'\n         PRINT OFF\n         MACRO\n         DCW\n         DSECT ,                                               @PL58837\n         COPY DCW                                              @BM60166\n         MEND\n         PRINT ON\n         DCW\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  DFSHSRVW'\n         DFSHSRVW ,                                            @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  DFSMFSTL'\n         DFSMFST DSECT=YES                                     @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS: DIFHEADR, DIFSECTN, DIFFDE, DIFNULL, DIFDELIM;\n               , DIFOPT, DIFPNTBL, DIFPFKEY, DIFTBLE'\n         PRINT OFF\n         MACRO\n         DIF\n         COPY DIF                                              @BIHC9RL\n         MEND\n         PRINT ON\n         DIF\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  DOFHEADR, DOFSECT, DOFLINK, DOFFDE, DOFCOM, ;\n               DOFSOPT, DOFOPT'\n         PRINT OFF\n         MACRO\n         DOF\n         COPY DOF                                              @BIHC9RL\n         MEND\n         PRINT ON\n         DOF\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  DVCTBL'\n         PRINT OFF\n         MACRO\n         DVCTBL\n         COPY DVCTBL                                           @BIHC9RL\n         MEND\n         PRINT ON\n         DVCTBL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  FBP'\n         ICLI  FBPBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  FEILINK'\n         FEILINK ,                                             @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  FERSFLAG'\n         PRINT OFF\n         MACRO\n         FERSFLAG\n         COPY FERSFLAG                                         @BIHC9RL\n         MEND\n         PRINT ON\n         FERSFLAG\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  FETUNIT'\n         FETUNIT\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS: FMHTYPE1'\n         PRINT OFF\n         MACRO\n         FMHTYPE1\n         DSECT ,                                               @PL58837\n         COPY FMHTYPE1                                         @BM60166\n         MEND\n         PRINT ON\n         FMHTYPE1\n*        END\n TITLE 'IMS/VS/DC DSECTS:  FRE'\n         ICLI  FREBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  LU6WA'\n         PRINT OFF\n         MACRO\n         LU6WA\n         COPY LU6WA                                            @BIHC9RL\n         MEND\n         PRINT ON\n         LU6WA\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  LWKA, LTRWKA'\n         DFSLWKA ,                                             @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  MDL'\n         DFSMDL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  MFSFLDE'\n         PRINT OFF\n         MACRO\n         MFSFLDE\n         COPY MFSFLDE                                          @BIHC9RL\n         MEND\n         PRINT ON\n         MFSFLDE\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  MFSSEGE'\n         PRINT OFF\n         MACRO\n         MFSSEGE\n         COPY MFSSEGE                                          @BIHC9RL\n         MEND\n         PRINT ON\n         MFSSEGE\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  MIDHEADR, MIDGRP, MIDLINK, MIDSEG, MIDFDE, M;\n               IDLITOR'\n         PRINT OFF\n         MACRO\n         MID\n         COPY MID                                              @BIHC9RL\n         MEND\n         PRINT ON\n         MID\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  MODHEADR, MODGRP, MODFDE'\n         PRINT OFF\n         MACRO\n         MOD\n         COPY MOD                                              @BIHC9RL\n         MEND\n         PRINT ON\n         MOD\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  MSGMAP, KEYWRD, VARPREF, VLISTDST'\n         DFSMMAPS ,                                            @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  OUTWORK, WORKSTOR'\n         PRINT OFF\n         MACRO\n         MFSOUT\n         COPY MFSOUT                                           @BIHC9RL\n         MEND\n         PRINT ON\n         MFSOUT\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  PARM'\n         DFSPARM\n*        END\n*        START\n TITLE 'IMS/VS/DB DSECTS:  PDIRNTRY'\n         DFSPDSE\n*        END\n*        START\n TITLE 'IMS/DB DSECTS:  UHIC'                                  @PL58837\n         DSECT ,                                               @PL58837\n         DFSUHIC\n*        END\n*        START\n TITLE 'IMS/DB DSECTS:  WORK'                                  @PL58837\n         DBFHWORK\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  PFECB, PCIB'\n         IPFECB  PFCIB=YES                                     @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  PTAL, TBE, HWKA, HTRWKA'\n         DFSPTAL ,                                             @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  QTPPCB'\n         ICLI  QPCBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  RDBLOCK'\n         ICLIRS RDBBASE=0                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  RDSEG'\n         ICLIRS RDSBASE=0                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  RET'\n         PRINT OFF\n         MACRO\n         RET3600\n         COPY RET3600                                          @BIHC9RL\n         MEND\n         PRINT ON\n         RET3600\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  RSESEG'\n         ICLIRS RSEBASE=0                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  RSISEG'\n         ICLIRS RSIBASE=0                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  RSRSEG'\n         ICLIRS RSRBASE=0                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  RSSSEG'\n         ICLIRS RSSBASE=0                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS: SLU1STK'\n         PRINT OFF\n         MACRO\n         SLU1STK\n         COPY SLU1STK                                          @BM60166\n         MEND\n         PRINT ON\n         SLU1STK\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  SPAD'\n         ICLI  SPABASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  SPQB'\n         ICLI SPQBASE=0                                        @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/DC DSECTS:  SRBSECT(DSPSRB)'\n         IDSPSRB\n*        END\n*        START                                                 @PL58837\n TITLE 'IMS/DC DSECTS:  TCF, EL, INCARD'                       @PL58837\n         DFSTCF ,                                              @PL58837\n*        END                                                   @PL58837\n*        START\n TITLE 'IMS/VS/DC DSECTS:  WORKAREA'\n         PRINT OFF\n         MACRO\n         WDSECT\nM3BROD   EQU   0                                               @BIHC9RL\n         COPY WDSECT                                           @BIHC9RL\n         MEND\n         PRINT ON\n         WDSECT\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  DFSAGT, DFSAIDX'\n         PRINT OFF\n         MACRO\n         DFSAGTDS\n         COPY DFSAGTDS                                         @BIHC9RL\n         MEND\n         PRINT ON\n         DFSAGTDS\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  BCP, BCPPSTS, BCPVOLS'\n         BCPID\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  CADSECT, PARMLIST'\n         REQUATE                                               @PL58837\n         ICADSECT DSECT=YES                                    @BIHC9RL\n*        END\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n*        START                                                 @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n TITLE 'IMS/SYS DSECTS:  DBCTM'                                @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\nDBCTM    DFSDBCTM TYPE=DSECT,PFX=DFS,AREA=BOTH                 @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n*        END                                                   @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n*        START\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n TITLE 'IMS/SYS DSECTS:  DEVTABLE'                             @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n         DEVTABLE ,                                            @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS:  DFSAVEC, DFSDOPTB '                   @PL58837\n         DFSAVECT DSECT=YES                                    @PL58837\n         DFSDOPTB DSECT=YES                                    @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS:  DFSDPARM            '                 @PL58837\n         DFSDPARM TYPE=DSECT                                   @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS:  DFSDPPFH, DFSDBPRF '                  @PL58837\n         DFSDBPFH DSECT=YES                                    @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE  'IMS/SYS DSECTS: DFSDPRH'                              @PL58837\n         DFSDPRH ,                                             @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS: DFSIEQE'                               @PL58837\n         DFSIEQE ,                                             @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS: DFSRRTPR'                              @PL58837\n         DFSRRT ,                                              @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS: DFSSRB'                                @PL58837\n         PRINT OFF                                             @PL58837\n         IHASRB ,                                              @PL58837\n         ISRBPARM ,                                            @PL58837\n         PRINT ON                                              @PL58837\n         DFSSRB ,                                              @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n TITLE 'IMS/VS/SYS DSECTS:  DSPWRK1, DSPWRK, DSPPST'\n         IDSPWRK TYPE=DSECT,FMLIST=NO                          @BIHC9RL\n         IDSPWRK TYPE=KIT                                      @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  MP'\n         DFSMP\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  DFSEEQE'\n         DFSEEQE ,                                             @BMA0012\n*        END\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n*        START                                                 @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n TITLE  'IMS/SYS DSECTS: DFSEQEL'                              @PL58837\n         DFSEQEL ,                                             @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS: DSSI'                                  @PL58837\nDSSI     DFSDSSIM TYPE=DSECT,PFX=DFS                           @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS:  DFSTORPL'                             @PL58837\n         DFSIOT  FUNC=DSECT                                    @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS:  DTRMPOOL'                             @PL58837\n         DTRMPOOL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  EPF'\n&EPFGEN1 SETB  0              ALLOW DSECT TO BE GENERATED.     @BIHC9RL\n         IEPF  NO,DSECT=YES                                    @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  IDLWORK'\n         IDLWORK\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  FTCBTBL'\n         DFSTCBTB FUNC=DSECT                                   @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  EEVT'\n         DFSEEVT\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  EEVTP'\n         DFSEEVTP\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  EMP'\n         DFSEMP\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  IENQCB, IENQE'\n         IENQCB\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  ESETP'\n         DFSESETP\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  ESFC'\n         DFSESFC\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  ESGO'\n         DFSESGO FUNC=DSECT                                    @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  ESSW'\n         DFSESSW\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  ESTR'\n         DFSESTR FUNC=DSECT                                    @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  ES30'\n         DFSES30 FUNC=DSECT                                    @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  EZS'\n         DFSEZS\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  GESE'\n         DFSGESE\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  IFIXLIST, IXLATLST'\n         IFXFLST\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  IPB'\n         IPB\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  ISRBPARM'\n         DSECT                                                 @PL58837\nSRBEND   EQU   *                                               @BA47516\nISRBPARM ISRBPARM\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  ISTWORK'\n         ISTWORK\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  ITRMWRK'\n         ITRMWRK\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  IWALE'\n         PRINT OFF                                             @BM60000\n         DFSSSOB IEFJSSOB                                      @BM60429\n         PRINT ON                                              @BM60000\n         DFSIWALE\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  DECB, LCD, LBUFFER'\n         LCDSECT FMLIST=NO                                     @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  LCRE'\n         DFSLCRE\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  LESE'\n         DFSLESE\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  LESEP'\n         DFSLESEP\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  LITP'\n         DFSLITP\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  LOGRCD'\n         ICLI  QLGBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  MOASN'\n         DFSMOASN\n*        END\n*        START\n TITLE 'IMS/SYS DSECTS:  MSGBUFPX, MSGXDATA'                   @PL58837\n         DFSDBMSG ,                                            @PL58837\n*        END\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS:  NID'                                  @PL58837\n         DFSNID ,                                              @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/VS/SYS DSECTS:  DFSPLDT0, MODTBL, MODEL, MODTBLPX'\n         PRLDBLK DSECT                                         @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  DFSPRRG0'\n         PARMS D,RGPBASE=0                                     @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  DFSPRPX0, PST, DFSDLIST, DFSISIT'\n         IPST  ISIT=YES                                        @BIHC9RL\n*        END\n*        START                                                 @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n TITLE 'IMS/SYS DSECTS:  PAPL, PAPLRINL, PAPLRRCT, PAPLSTAR'   @PL58837\n         DFSPAPL ,                                             @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n TITLE 'IMS/SYS DSECTS:  PDL'                                  @PL58837\n         DFSPDL ,                                              @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n TITLE 'IMS/SYS DSECTS:  PRP'                                  @PL58837\n         DFSPRP ,                                              @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS:  QBFFR'                                @PL58837\n         ICLI  BFRBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  QBLKRCDD'\n         QBLKRCDD\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  QCB, QE'\n         IQCB\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  QDEST'\n         ICLI  QDSBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  QPOOL'\n         ICLI  POOBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  QSAPWKAD'\n         QSAPWKAD\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  RCHKREC'\n         RCKPTREC\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  RLWWORKD -- RESTART LOG READ WORK AREA'\n         PRINT OFF                                             @BM60000\n         LCDSECT TYPE=REST                                     @BM60386\n         DFSDAWE TYPE=CMTI                                     @BM60386\n         PRINT ON                                              @BM60000\n         DFSFRLWA TYPE=ALL                                     @BM60166\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  RRE'\n         DFSRRE\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  SAP'\n         ISAP\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  SCD'\n         ISCD  SECTYPE=DSECT                                   @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  SCHPT'\nSCHPT    DSECT\n         ISCHPT\n*        END\n*        START                                                 @PL58837\n TITLE 'IMS/SYS DSECTS:  SIGNSAVE'                             @PL58837\n         PRINT OFF                                             @PL58837\n         COPY DFSAWE                                           @PL58837\n         DFSSSOB (IEFJSSOB)                                    @PL58837\n         PRINT ON                                              @PL58837\n         SIGNSAVE ,                                            @PL58837\n*        END                                                   @PL58837\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  SLX, SLXLSTAT'\n         DFSSLX\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  SMB'\n         IAPS  SMBBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  SPINDATA'\n         PRINT OFF\n         MACRO\n         SPINDATA\n         COPY SPINDATA                                         @BIHC9RL\n         MEND\n         PRINT ON\n         SPINDATA\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  SQPST'\n         ISQPST\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  SSIE'\n         DFSSSIE\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  SSITP'\n         DFSSSITP\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  STAEPARM'\n         STPARM\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  TCT'\n         IAPS  TCTBASE=0                                       @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  TPCB'\n         IDLI  TPCBASE=0,CALLER=IMS                            @BIL8MDC\n*        END\n*        START                                                 @PL58837\n TITLE 'IMS/SV DSECTS:  TWB'                                   @PL58837\n         PRINT OFF                                             @PL58837\n         IEPF ,                                                @PL58837\n         PRINT ON                                              @PL58837\n         DFSTWB ,                                              @PL58837\n*        END                                                   @PL58837\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  VECTOR'\n         IRCVECT\n*        END\n*        START\n TITLE 'IMS/VS/SYS DSECTS:  ZIB, FAQE'\n         IZIB\n*        END\n*        START\n TITLE 'IMS/VS DSECTS -- LOG RECORD FORMATS'\n         ILOGREC  TYPE=DSECT,RECID=ALL                         @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS DSECTS -- STATISTICS RECORD FORMATS'\n         ISTATR  TYPE=DSECT,RECID=ALL                          @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS: -- LOG ARCHIVE UTILITY TABLES'\n         DFSUARC\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  CDS (LEDSCT)'\n         PRINT OFF\n         MACRO\n         DFSUCDS0\n         COPY DFSUCDS0                                         @BIHC9RL\n         MEND\n         PRINT ON\n         DFSUCDS0\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  UCSTAT, CUMCONST (CUMHDR)'\n         DFSUCUMC UCMTYP=DSECT                                 @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  CUMREC, DBCUMO'\n         DFSUCREC\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  DFSUSTAT'\n         DFSUSTAT\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  DUMPHDR'\n         DFSUDHDR\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  FLDE'\n         IFLDE\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  IFE'\n         PRINT OFF\n         MACRO\n         IFE\n         COPY IFE                                              @BIHC9RL\n         MEND\n         PRINT ON\n         IFE\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  IOAREA'\n         DFSURGUF\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  ITBNODE'\n         ITBNODE K=B                                           @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  MBRNTRY'\n         ACBDIR\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  MCT'\n         IMCT\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  MCTA'\n         IMCTA\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  MCTE'\n         IMCTE\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  MFSGBL, XREF'\n         MFSGBL DSECT                                          @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS -- MFS INTERMEDIATE TEXT BLOCK FORMATS'\n         PRINT OFF\n         MACRO\n         MFSITB\n         COPY MFSITB                                           @BIHC9RL\n         MEND\n         PRINT ON\n         MFSITB\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  PSE, PTH, TSE, TTE, NTE, TLAM, RSE, VTE'\n         PRINT OFF\n         MACRO\n         PARSE\n         COPY PARSE                                            @BIHC9RL\n         MEND\n         PRINT ON\n         PARSE\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  PPT'\n         IPPT  TYPE=DSECT                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  REORGHDR'\n         DFSURHDR\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  SCANPARM'\n         ISPB  TYPE=DSECT                                      @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  SCHCTLBK, SCHGROUP'\n         SEARCHDS\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  SDW'\n         ISDW\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  STKIDQE, STKIDBLK'\n         PRINT OFF\n         MACRO\n         STKDSECT\n         COPY STKDSECT                                         @BIHC9RL\n         MEND\n         PRINT ON\n         STKDSECT\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  SWA'\n         ISWA\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  SYM'\n         ISYM  TYPE=EXTERNAL                                   @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  SYME'\n         ISYME TYPE=EXTERNAL                                   @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  TBLE'\n         PRINT OFF\n         MACRO\n         TBLE\n         COPY TBLE                                             @BIHC9RL\n         MEND\n         PRINT ON\n         TBLE\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS -- UTILITY CONTROL FACILITY COMMON WORK AREA  ;\n               (DFSUCP70)'\n         UCFCMVEC UCFTYP=DSECT                                 @BIHC9RL\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  VBSCTL'\n         IVBSCTL\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  WRKFILE1'\n         DFSURWF1\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  WRKFIL2'\nVARLEN   EQU   100                                             @BIHC9RL\n         DFSURWF2\n*        END\n*        START\n TITLE 'IMS/VS/UT DSECTS:  WRKFIL3'\n         DFSURWF3\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  BUFMS'\n         PRINT OFF\n         MACRO\n         BUFMS\n         COPY BUFMS                                            @BIHC9RL\n         MEND\n         PRINT ON\n         BUFMS\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  FMHMSC'\n         PRINT OFF\n         MACRO\n         FMHMSC\n         COPY FMHMSC                                           @BIHC9RL\n         MEND\n         PRINT ON\n         FMHMSC\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  IMCS'\n         PRINT OFF\n         MACRO\n         IMCS\n         COPY IMCS                                             @BIHC9RL\n         MEND\n         PRINT ON\n         IMCS\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  LCB'\n         PRINT OFF\n         MACRO\n         LCB\n         COPY LCB                                              @BIHC9RL\n         MEND\n         PRINT ON\n         LCB\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  LXBDEF'\n         PRINT OFF\n         MACRO\n         LXB\n         COPY LXB                                              @BIHC9RL\n         MEND\n         PRINT ON\n         LXB\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  MSRSEG'\n         PRINT OFF\n         MACRO\n         DFSMSMSR\n         COPY DFSMSMSR                                         @BIHC9RL\n         MEND\n         PRINT ON\n         DFSMSMSR\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  MTMWHDR'\n         PRINT OFF\n         MACRO\n         MTMWHDR\n         COPY MTMWHDR                                          @BIHC9RL\n         MEND\n         PRINT ON\n         MTMWHDR\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  MWBSIDE, MTMWINDO'\n         PRINT OFF\n         MACRO\n         MTMWINDO\n         COPY MTMWINDO                                         @BIHC9RL\n         MEND\n         PRINT ON\n         MTMWINDO\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  RCNT'\n         PRINT OFF\n         MACRO\n         RCNT\n         COPY RCNT                                             @BIHC9RL\n         MEND\n         PRINT ON\n         RCNT\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  MTMA, SAVWORK, TRACEHDM, TRACEMAP'\nMTMA     DSECT\n         PRINT OFF\n         COPY MTMWINDO                                         @BIHC9RL\n         PRINT ON\n         CSECT\n         INTFMTMA\n*        END\n*        START\n TITLE 'IMS/VS/MSC DSECTS:  SID'\n         PRINT OFF\n         MACRO\n         DFSMSSID\n         COPY  DFSMSSID                                        @BIHC9RL\n         MEND\n         PRINT ON\n         DFSMSSID\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  ADSC'\n         DBFADSC\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  ADSL'\n         DBFADSL\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  BALG'\n         DBFBALG\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  BHDR, MSNQLIST, MSUPLOG, MSDBSSA, FSA'\n         DBFBMSDB\n*        END\n*        START                                                 @PL58837\n TITLE  'IMS/FP DSECTS:  CBUF'                                 @PL58837\n         DBFCBUF ,                                             @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE  'IMS/FP DSECTS:  CSYN'                                 @PL58837\n         DBFCSYN ,                                             @PL58837\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  DBLK, DEND, DSEG, DFSE'\n         DBFDBLK\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  DCBTABDS'\n         DBFDCBT\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  DBFDEBSC'\n         PRINT OFF                                             @BMA0012\n         MACRO\n         DBFDEBSC\n         DSECT ,                                               @PL58837\n         COPY DBFDEBSC                                         @BMA0012\n         MEND\n         PRINT ON                                              @BMA0012\n         DBFDEBSC ,                                            @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  DBFMSDBW'\n         DBFMSDBW ,                                            @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  DBFMDSND'\n         DBFMSDSN ,                                            @BMA0012\n*        END\n*        START\n         DSECT ,                                               @PL58837\n TITLE 'IMS/FP DSECTS:  DLSRWORK'                              @PL58837\n         DBFDLSR ,                                             @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/VS/FP DSECTS:  DMAC'\n         DBFDMAC\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  DMCB'\n         DBFDMCB\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  DMHR'\n         DBFDMHR\n*        END\n*        START\n TITLE  'IMS/VS/FP DSECTS:  DOCL'\n         DBFDOCL\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  ECNT'\n         DBFECNT\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  EMHB'\n         DBFEMHB\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  EPCB'\n         DBFEPCB\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  EPST'\n         DBFEPST\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  EQE'\n         DBFEQE DSECT=EQE                                      @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  ERMSA'\n         DBFERMSA\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  ESCD'\n         DBFESCD\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  ESRB'\n         DBFESRB\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  ESRT'\n         DBFESRT\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FDBF'\n         DBFMFDB\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FLDC'\n         DBFFLDC\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FPALDS'\n         DBFAREA\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FLDQ'\n         DBFLGRDQ\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FLIM'\n         DBFLGRIM\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FLOM'\n         DBFLGROM\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FLRE'\n         DBFLGRRE ,                                            @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FLSD'\n         DBFLGRSD\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FLSF'\n         DBFLGRSF\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FLSY'\n         DBFLGRSY\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  FPCP'\n         DBFFPCP\n*        END\n*        START                                                 @PL58837\n TITLE  'IMS/SV DSECTS:  HICL5947'                             @PL58837\n         DBFLGRIC ,                                            @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE  'IMS/FP DSECTS:  HSSO'                                 @PL58837\n         DBFHSSO ,                                             @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE  'IMS/FP DSECTS:  HSSP'                                 @PL58837\n         DBFHSSPS ,                                            @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE  'IMS/FP DSECTS:  HSSR'                                 @PL58837\n         DBFHSSR ,                                             @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/FP DSECTS:  IOAR'                                  @PL58837\n         DBFUTIO\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  LDBQ'\n         DBFLDQB ,                                             @BMA0012\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  LSRT'\n         DBFLSRT RECID=50,TYPE=O                               @BIHC9RL\n*        END\n*        START                                                 @PL58837\n TITLE  'IMS/FP DSECTS:  L56X'                                 @PL58837\n         PRINT OFF                                             @PL58837\n         DFSDAWE TYPE=SQPP                                     @PL58837\n         DFSETPCP ,                                            @PL58837\n         PRINT ON                                              @PL58837\n         DBFL56X ,                                             @PL58837\n*        END                                                   @PL58837\n*        START\n TITLE 'IMS/VS/FP DSECTS:  MCTLRECD'\n         DBFMCTL\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  MLTE'\n         DBFMLTE\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  MRMB'\n         DBFMRMB\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  MSDBTBL'\n         DBFMSDBT\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  MSDIRECD'\n         DBFIREC\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  PMLT'\n         DBFPMLT\n*        END\n*        START                                                 @PL58837\n TITLE 'IMS/FP DSECTS:  QICR'                                  @PL58837\nQICR     DBFQICR ,                                             @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/FP DSECTS:  QRD'                                   @PL58837\nQRD      DBFPICR ,                                             @PL58837\n*        END                                                   @PL58837\n*        START                                                 @PL58837\n TITLE 'IMS/VS/FP DSECTS:  RCTE'\n         DBFRCTE\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  SDBF'\n         DBFSDBT\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  SMLT'\n         DBFSMLT\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  SNMT'\n         DBFSNMT DSECT=                                        @BA23320\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  SPCB'\n         DBFSPCB\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  SSMM'\n         DBFSSMM\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  UDTB'\n         DBFUDTB\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  UTDD'\n         DBFUTDD\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  UTDW'\n         DBFUTDW\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  UTHR'\n         DBFUTHR\n*        END\n*        START\n TITLE 'IMS/VS/FP DSECTS:  XCRB'\n         DBFXCRB\n*        END\n*        START                                                 @PL58837\n TITLE 'IMS/DBRC DSECTS:  DFSRCWKA'                            @PL58837\n         DFSRCWKA ,                                            @PL58837\n         END                                                   @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n.*  LINE DELETED BY APAR PL58837                               @PL58837\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "##DSECT1": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x08\\xbb\\x08\\xbb\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 2235, "newlines": 2235, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31## JOB 'IMSGROUP  SH28205610*110A044         015  1001009037',\n//  MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016,\n//  REGION=2048K,TIME=010\n//*MAIN ORG=LOCAL,CLASS=L5\n//IMSDSECT EXEC IMSUPDTE,P=IMA,DISPR=SHR,PGMC=IEV90,\n//   SYMI=SOURCETM,SYMO=SOURCETM,\n//   SMEMBER=IMSDSECT,LMEMBER=IMSDSECT,\n//   DECK='NODECK,BATCH',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   CONDL=0,\n//   ACCT=0\n//*.SYSPRINT DD DISP=SHR,DSN=IMA.DSECT2\n//*** COPIED FROM IMA.SOURCESV(DFSADSCT)\n//**   WITH SOME FIXES\n//**       REMOVE ALL LEADING *    FROM THE \"START\" STMTS\n//**       REMOVE ALL APAR NUMBERS FROM THE \"START\" STMTS\n//**       CHANGE ALL LEADING .* TO **\n//C.SYSIN DD *\n        TITLE ' AN  I N D E X.'\n**********************************************************************\n*                                                                    *\n*      THIS MODULE PROVIDES IMS/VS CONTROL BLOCK DSECTS.             *\n*                                                                    *\n*      AN ALPHBETICAL INDEX STARTS ON FRAME A06.                     *\n*                                                                    *\n*      EACH CARD STARTS WITH A TABLE OF CONTENTS OF THAT CARD.       *\n*                                                                    *\n**********************************************************************\n*                                                                    *\n*         IN THE FOLLOWING LIST OF DSECTS AND OWNING FUNCTION,       *\n*         AN ASTERISK ('*') PRECEDING ANY DSECT NAME INDICATES       *\n*         THAT THE NAME IS ASSIGNED BY THIS MODULE, RATHER           *\n*         THAN BEING THE OFFICIAL DSECT NAME.                        *\n*                                                                    *\n**********************************************************************\n*                                                                    *\n*  AASTAREC - STAT          ABMSGDS  - DB            ACLOGREC - LOGR *\n*  ADSC     - FP            ADSL     - FP                            *\n*  ATLOGREC - LOGR          A00      - COMM          A01      - COMM *\n*  A02      - COMM          A03      - COMM          A04      - COMM *\n*  A50      - COMM                                                   *\n*  A51      - COMM          A52      - COMM          A53      - COMM *\n*  A54      - COMM          A55      - COMM          A56      - COMM *\n*  A57      - COMM          A58      - COMM          A59      - COMM *\n*  A70      - COMM          A71      - COMM          BATW     - DB   *\n*  BALG     - FP            BCB      - DB            BCP      - SYS  *\n*  BCPPSTS  - SYS           BCPVOLS  - SYS           BFSP     - DB   *\n*  BFUS     - DB            BHDR     - FP            BLDWT    - UTIL *\n*  BLK      - DB                                     BQEL     - DB   *\n*                           BSTAREC  - STAT          BUFBTAM  - COMM *\n* *BUFBTAMR - COMM          BUFLU6   - COMM          BUFMS    - MSC  *\n*  BUFSLUP  - COMM          BUFVTAM  - COMM          BUFVTPRE - COMM *\n*  BUFWORK  - COMM          BUF3600  - COMM          B01      - COMM *\n*  B02      - COMM          B03      - COMM          B50      - COMM *\n*  B70      - COMM          CADSECT  - SYS           CAPLOG   - LOGR *\n*  CARDFMT  - LOGR          CBUF     - SV                            *\n*  CCB      - COMM          CDS      - UTIL                          *\n*  CIB      - COMM         *CIBEXT   - COMM          CIR      - DB   *\n*                          *CLB (SEE DFSMSCLB)       CMDFMT   - COMM *\n*  CMLOG    - LOGR          CMSCREC  - LOGR          CMTIAVM  - DB   *\n*  CNSW     - DB            CNT      - COMM                          *\n*  CONSAVE  - COMM          CRB      - COMM          CSSW     - DB   *\n*  CSYN     - FP                                                     *\n*  CTB      - COMM                                                   *\n*  CTELDESC - LOGR          CTREC    - LOGR          CTT      - COMM *\n*  CUMCONST - UTIL         *CUMHDR (SEE CUMCONST)    CUMREC   - UTIL *\n*  CVB      - COMM          C00      - COMM          C01      - COMM *\n*  C02      - COMM          C03      - COMM          C50      - COMM *\n*  C51      - COMM          C52      - COMM          C53      - COMM *\n*  C54      - COMM          C70      - COMM          C71      - COMM *\n*  DAWE     - DB             *DBCTM  - SV                            *\n*  DBCUMO   - UTIL          DBDDSECT - DB            DBDNLIST - DB   *\n*  DBDSORTB - DB            DBFDEBSC - FP   *                        *\n*  DBFMDSND - FP            DBFMSDBW - FP                            *\n*  DBKL     - FP            DBLOG    - LOGR                          *\n*  DBPCB    - DB            DBPCBDV  - DB            DBSTATS  - DB   *\n*  DCBTABDS - FP           *DCTLVTAM - COMM         *DCTL327V - COMM *\n* *DCTL3600 - COMM          DCW      - COMM                          *\n*                           DDIR     - DB            DEB      - DB   *\n*  DEBACSMD - DB            DEBDASD  - DB            DEBOSAME - DB   *\n*  DEBOSTAB - DB            DEBSUBNM - DB            DEBXTN   - DB   *\n*  DECB     - SYS           DEND     - FP            DEVITB   - UTIL *\n*  DEVPFKS  - UTIL          DEVTABLE - SYS           DFLDITB  - UTIL *\n*  DFSAGT   - SYS           DFSAIDX  - SYS           DFSAURQL - DB   *\n*  DFSEEQE  - SYS           DFSAVEC  - SYS                           *\n*  DFSCBTS  - DB            DFSDLIST - SYS           DFSDBPFH - SYS  *\n*  DFSDOPTB - SYS           DFSDPARM - SYS                           *\n*  DFSDPRH  - SV            DSSI     - SV            DFSE     - FP   *\n*  DFSEQEL  - SV                                                      *\n*  DFSFRLWA - LOGR          DFSFXC00 - DB                            *\n*  DFSHSRVW - COMM          DFSIEQE  - SV            DFSISIT  - SYS  *\n*  DFSMFSTL - COMM         *DFSMSCLB - COMM                          *\n*  DFSNCB   - DB            DFSPLDT0 - SYS           DFSPRPX0 - SYS  *\n*  DFSPRRG0 - SYS           DFSRCWKA - DBRC                          *\n*  DFSRPST  - DB            DFSRRTPR - SV            DFSSRB   - SV   *\n*  DFSUARC  - SYS                                                    *\n*  DFSTORPL - SYS           DFSUSTAT - UTIL          DFSVTDIR - DB   *\n*                                                    DIFDELIM - COMM *\n*  DIFFDE   - COMM          DIFHEADR - COMM          DIFNULL  - COMM *\n*  DIFOPT   - COMM          DIFPFKEY - COMM          DIFPNTBL - COMM *\n*  DIFSECTN - COMM          DIFTBLE  - COMM          DIVITB   - UTIL *\n*  DLLEVTBL - DB                                                     *\n*  DLOGDATA - SV            DLOGDB   - SV            DLOGDSHR - SV   *\n*  DLOGFSE  - SV            DLOGKEY  - SV            DLOGTRCK - SV   *\n*  DLREC    - LOGR          DLSRWORK - SV                            *\n*  DLTR     - DB            DLTRLOGR - LOGR                          *\n*  DLTTRCE  - DB            DLTWA    - DB            DMAC     - FP   *\n*  DMAN     - DB            DMB      - DB            DMBAMP   - DB   *\n*  DMBCPAC  - DB            DMBDACS  - DB            DMBPSDB  - DB   *\n*  DMBSEC   - DB            DMBXMPRM - DB            DMCB     - FP   *\n*  DMHR     - FP            DOCL     - FP                            *\n*  DOFCOM   - COMM          DOFFDE   - COMM                          *\n*  DOFHEADR - COMM          DOFLINK  - COMM          DOFOPT   - COMM *\n*  DOFSECT  - COMM          DOFSOPT  - COMM          DOL      - DB   *\n*  DPDIR    - DB            DSEG     - FP                            *\n*  DSG      - DB            DSPPST   - SYS                           *\n*  DSPSRB(SEE SRBSECT)      DSPWRK   - SYS                           *\n*  DSPWRK1  - SYS           DTRMPOOL - SYS           DTSTREC  - STAT *\n*  DUMPHDR  - UTIL          DVCTBL   - COMM          D01      - COMM *\n*  D03      - COMM          D04      - COMM          D50      - COMM *\n*  D70      - COMM          D71      - COMM          ECNT     - FP   *\n*  EDSG     - DB                                                     *\n*  EEVT     - SYS           EEVTP    - SYS           DMHB     - FP   *\n*  EMP      - SYS           EPCB     - FP            EPF      - SYS  *\n*  EPST     - FP            EQE      - FP            ERLGDSCT - LOGR *\n*  ERMSA    - FP                                                     *\n*  ESCD     - FP            ESETP    - SYS           ESFC     - SYS  *\n*  ESGO     - SYS                                                    *\n*  ESRB     - FP            ESRT     - FP            ESSW     - SYS  *\n*  ESTR     - SYS           ESTAREC  - STAT          ES30     - SYS  *\n*  ETPCP    - DB                                     EXTDBD   - DB   *\n*  EZS      - SYS           E01      - COMM          E71      - COMM *\n*  FAQE     - SYS           FBP      - COMM                          *\n*  FDB      - DB            FDBF     - FP            FEILINK  - COMM *\n*  FERSFLAG - COMM          FETUNIT  - COMM                          *\n*  FLD      - DB            FLDC     - FP                            *\n*  FLDE     - UTIL          FLDQ     - FP            FLDTAB   - DB   *\n*  FLIM     - FP            FLOM     - FP            FLRE     - FP   *\n*  FLSD     - FP                                                     *\n*  FLSF     - FP            FLSY     - FP                            *\n*  FMHMSC   - MSC           FMHTYPE1 - COMM                          *\n*  FMTITB   - UTIL          FPALDS   - FP            FPCP     - FP   *\n*  FPF      - COMM          FRB      - DB            FRE      - COMM *\n*                           FSA      - FP            FSB      - DB   *\n*  FSBLIST  - DB            FSTAREC  - STAT          FTCBTBL  - SYS  *\n* *FUNCODE  - DB            F01      - COMM          F02      - COMM *\n*  F50      - COMM          F70      - COMM          GB       - DB   *\n*  GBCB     - DB                                                     *\n*  GESE     - SYS           GLT      - DB            GPT      - DB   *\n*  GQCB     - DB            GRPITB   - UTIL          G00      - COMM *\n*  G01      - COMM          G02      - COMM          G03      - COMM *\n*  G06      - COMM          G07      - COMM          G08      - COMM *\n*  G50      - COMM          G51      - COMM          G52      - COMM *\n*  G53      - COMM          G54      - COMM          G70      - COMM *\n* *HDS0DS   - DB           *HDTRX (SEE DLTR)         HHSTRT   - DB   *\n*  HICL5947 - SV            HSIIC12  - SV            HSSD     - DB   *\n*  HSSO     - SV            HSSP     - SV            HSSR     - SV   *\n*  HTRWKA   - COMM          HWKA     - COMM                          *\n*  H03      - COMM          H04      - COMM          H05      - COMM *\n*  H07      - COMM                                                   *\n*  H08      - COMM          H09      - COMM          H10      - COMM *\n*  H11      - COMM          H12      - COMM          H50      - COMM *\n*  H51      - COMM          H52      - COMM          H53      - COMM *\n*  H54      - COMM          H70      - COMM          H71      - COMM *\n*  H72      - COMM          H73      - COMM          IBFPRF   - DB   *\n*  IBPOOL   - DB            IDAACB   - DB            IDAAMB   - DB   *\n*  IDAAMBL  - DB            IDABSPH  - DB            IDABUFC  - DB   *\n*  IDAEDB   - DB            IDAEDBHD - DB            IDALPMB  - DB   *\n*  IDAPLH   - DB            IDAPLHDR - DB            IDARPL   - DB   *\n*  IDLWORK  - SYS           IECTDECB - COMM          IECTIOB  - DB   *\n*  IENQCB   - SYS           IENQE    - SYS           IFE      - UTIL *\n* *IFGRPL (SEE BUFSLUP)     IFITB    - UTIL          IFIXLIST - SYS  *\n*  IHADCB   - DB            IHADCWB  - DB            IHADCWQ  - DB   *\n*  ILRDOC   - LOGR          IMCS     - MSC           IMSTAREC - STAT *\n*  INDXTAB  - DB            INTLIST  - DB            IOAR     - FP   *\n*  IOAREA   - UTIL          IOMA     - DB            IOSB     - DB   *\n*  IOSBQCBD - DB            IPB      - SYS           ISRBPARM - SYS  *\n*  ISTWORK  - SYS           ISUBPL   - DB            ITBNODE  - UTIL *\n*  ITRMWRK  - SYS           IXLATLST - SYS           IWALE    - SYS  *\n*  I01      - COMM                                                   *\n*  I02      - COMM          I03      - COMM          I50      - COMM *\n*  I51      - COMM          I70      - COMM          I71      - COMM *\n*  JCB      - DB            JCBP     - DB            JM       - LOGR *\n*  JRNLDSCT - UTIL          J01      - COMM          J02      - COMM *\n*  J50      - COMM          J51      - COMM          J52      - COMM *\n*  J70      - COMM                                                   *\n*  KETWRD   - COMM                                                   *\n*  K01      - COMM          K50      - COMM          K70      - COMM *\n*  LAWE     - DB            LBUFFER  - SYS           LCB      - MSC  *\n*  LCDEST   - LOGR          LCHILD   - DB            LCONVERS - LOGR *\n*  LCRE     - SYS           LDBQ     - FP                            *\n* *LEDSCT (SEE CDS)         LELOGREC - LOGR                          *\n*  LESE     - SYS           LESEP    - SYS           LEV      - DB   *\n*  LINTD    - LOGR                                                   *\n*  LITP     - SYS          *LLB (SEE IECTDECB)      *LNB (SEE CNT)   *\n*  LNREC    - LOGR          LOGRCD   - SYS           LOG01    - LOGR *\n*  LOG13    - LOGR          LOG16    - LOGR          LOG41DSC - LOGR *\n*  LSRT     - FP           *LTB (SEE CTB)            LTRWKA   - COMM *\n*  LU6WA    - COMM          LWKA     - COMM                          *\n*  LXBDEF   - MSC           L01      - COMM          L02      - COMM *\n*  L50      - COMM          L56X     - SV            L67FAREC - LOGR *\n*  L70      - COMM          L71      - COMM          MBRNTRY  - UTIL *\n*  MCT      - UTIL          MCTA     - UTIL          MCTE     - UTIL *\n*  MCTLRECD - FP            MDE      - DB            MDL      - COMM *\n*                           MFLDITB  - UTIL          MFSFLDE  - COMM *\n*  MFSGBL   - UTIL          MFSSEGE  - COMM          MIDFDE   - COMM *\n*  MIDGRP   - COMM          MIDHEADR - COMM          MIDLINK  - COMM *\n*  MIDLITOR - COMM          MIDSEG   - COMM          MLTE     - FP   *\n*  MOASN    - SYS           MODEL    - SYS                           *\n*  MODFDE   - COMM          MODGRP   - COMM          MODHEADR - COMM *\n* *MODID    - DB            MODTBL   - SYS           MODTBLPX - SYS  *\n*  MP       - SYS                                                    *\n*  MRMB     - FP            MSDBSSA  - FP            MSDBTBL  - FP   *\n*  MSDIRECD - FP            MSGBUFPX - SV                            *\n*  MSGITB   - UTIL          MSGLU6   - LOGR                          *\n*  MSGMAP   - COMM          MSGMSC   - LOGR                          *\n*  MSGRACF  - LOGR          MSGSITEM - LOGR          MSGXDATA - SV   *\n*  MSNQLIST - FP                                                     *\n*  MSRSEG   - MSC           MSUPLOG  - FP           *MTMA     - MSC  *\n*  MTMWHDR  - MSC           MTMWINDO - MSC           MWBSIDE  - MSC  *\n*  M00      - COMM          M01      - COMM          M02      - COMM *\n*  M03      - COMM          M04      - COMM          M05      - COMM *\n*  M50      - COMM                                                   *\n*  NID      - SYS           NTE      - UTIL          N00      - COMM *\n*  N01      - COMM                                                   *\n*  N50      - COMM          N70      - COMM          OUTWORK  - COMM *\n*                                                                    *\n*  PALOGREC - LOGR          PAPL     - SV            PAPLRINL - SV   *\n*  PAPLRRCT - SV            PAPLSTAR - SV                            *\n*  PARMLIST - SYS           PASITB   - UTIL                          *\n*  PCIB     - COMM          PDIR     - DB            PDIRNTRY - COMM *\n*  PDL      - SV            PRP      - SV                            *\n*                                                    PFECB    - COMM *\n*  PITREC   - LOGR          PITRNTRY - LOGR          PMLT     - FP   *\n*  PPGITB   - UTIL          PPRE     - DB                            *\n*  PPT      - UTIL                                                   *\n*                           PREFIX   - DB            PRM      - DB   *\n*  PSB      - DB            PSE      - UTIL          PST      - SYS  *\n*  PTAL     - COMM                                                   *\n*  PTH      - UTIL          P01      - COMM          P50      - COMM *\n*  P70      - COMM                                                   *\n*  QBFALST  - DB            QBFRE    - SYS           QBLKRCDD - SYS  *\n*  QCB      - SYS          *QCBDC    - COMM          QCSS     - DB   *\n*  QDCBLST  - DB            QDEST    - SYS                           *\n*  QE       - SYS           QEL      - DB            QHDR     - DB   *\n*  QICR     - SV                                                     *\n*  QLFXBERR - LOGR          QLFXFREE - LOGR          QLFXQBLK - LOGR *\n*  QLFXRERR - LOGR          QLGMSCHN - DB            QLOGCANC - LOGR *\n*  QLOGDEQS - LOGR                                                   *\n*  QLOGENQU - LOGR          QLOGFREE - LOGR          QLOGGETU - LOGR *\n*  QLOGMSGD - LOGR          QLOGMSGI - LOGR          QLOGMSGP - LOGR *\n*  QLOGREJE - LOGR          QLOGRELI - LOGR          QLOGRELO - LOGR *\n*  QLOGXFER - LOGR          QPOOL    - SYS           QRD      - SV   *\n*  QSAPWKAD - SYS           QSAV     - DB                            *\n*  QTPPCB   - COMM          Q01      - COMM          Q02      - COMM *\n*  Q50      - COMM          Q70      - COMM          Q71      - COMM *\n*  RCHKREC  - SYS           RCNT     - MSC           RCTE     - FP   *\n*  RDBLOCK  - COMM                                                   *\n*  RDSW     - DB            RDSEG    - COMM          REORGHDR - UTIL *\n*  REQBLK   - DB            RET      - COMM                          *\n*  RLWWORKD - SYS           RPLI     - DB            RRE      - SYS  *\n*  RSE      - UTIL                                                   *\n*  RSESEG   - COMM          RSISEG   - COMM          RSRSEG   - COMM *\n*  RSSSEG   - COMM                                                   *\n*  RVET     - DB            R01      - COMM          R50      - COMM *\n*  R70      - COMM          SAP      - SYS           SAVWORK  - MSC  *\n*  SBDCB    - DB            SBHE     - DB            SBPARM   - DB   *\n*  SBPSS    - DB            SBPST    - DB            SBSCD    - DB   *\n*  SBSNA    - DB           *SBUF (SEE IBFPRF)                        *\n*  SCANPARM - UTIL          SCAR     - DB            SCA1     - DB   *\n*  SCD      - SYS           SCHCTLBK - UTIL                          *\n*  SCHGROUP - UTIL         *SCHPT    - SYS           SCREC    - LOGR *\n*  SDB      - DB            SDBF     - FP            SDBXP    - DB   *\n*  SDSG     - DB                                                     *\n*  SDW      - UTIL          SECITB   - UTIL          SEGITB   - UTIL *\n*  SEGTAB   - DB            SID      - MSC           SIGNSAVE - SV   *\n*  SLU1STK  - DC                                                     *\n*  SLX      - SYS                                                    *\n*  SLXLSTAT - SYS           SMB      - SYS           SMLT     - FP   *\n*  SMREC    - LOGR          SNELDESC - LOGR          SNMT     - FP   *\n*  SNREC    - LOGR          SPAD     - COMM          SPCB     - FP   *\n*  SPINDATA - SYS           SPQB     - COMM          SPRM     - SV   *\n*  SQPST    - SYS           SRAN     - DB            SRBSECT  - DC   *\n*  SSIB     - DB            SSIE     - SYS           SSITP    - SYS  *\n*  SSMM     - FP            SSOB     - DB            SSREC    - LOGR *\n*  SSTAREC  - STAT          STAEPARM - SYS           STATVBH  - DB   *\n*  STDBLOG  - LOGR          STKIDBLK - UTIL          STKIDQE  - UTIL *\n*  STLOGREC - LOGR          SWA      - UTIL          SXREC    - LOGR *\n*  SYM      - UTIL          SYME     - UTIL          S00      - COMM *\n*  S01      - COMM          S02      - COMM          S03      - COMM *\n*  S04      - COMM          S3REC63  - LOGR                          *\n*  S50      - COMM          S70      - COMM                          *\n*  TABLE    - UTIL          TBE      - COMM                          *\n*  TBLE     - UTIL          TBLITB   - UTIL          TCT      - SYS  *\n*  TLAM     - UTIL          TPCB     - SYS          *TRACEHDM - DB   *\n*  TRACEHDR - LOGR          TRACEMAP - MSC           TRCENT   - DB   *\n*  TSE      - UTIL          TSTREC   - STAT          TTE      - UTIL *\n*  TWB      - SV                                                     *\n*  T02      - COMM          T03      - COMM          T04      - COMM *\n*  T05      - COMM          T06      - COMM          T50      - COMM *\n*  T51      - COMM          T70      - COMM          T71      - COMM *\n*  UCFCMVEC - UTIL          UCFFCL   - UTIL          UCSTAT   - UTIL *\n*  UDTB     - FP            UHIC     - SV            UTDD     - FP   *\n*  UTDW     - FP            UTHR     - FP                            *\n*  U00      - COMM          U50      - COMM          U70      - COMM *\n*                           U7CADBCD - UTIL          U7CAIDCD - UTIL *\n*  U7DDLST  - UTIL          U7FDRWK  - UTIL          U7IMCARD - UTIL *\n*  U7PADRCK - UTIL          U7PADUCK - UTIL          U7PAFINT - UTIL *\n*  U7PAILCK - UTIL          U7PAIMCK - UTIL          U7PAPUCK - UTIL *\n*  U7PARUCK - UTIL          U7PARVCK - UTIL          U7PASNCK - UTIL *\n*  U7PASRCK - UTIL          U7PASUCK - UTIL          U7PRM    - UTIL *\n*  U7RVCARD - UTIL          U7STAIPM - UTIL          U7SUCARD - UTIL *\n*  U7WRKDCT - UTIL          U7ZBCARD - UTIL                          *\n*  VARPREF  - COMM          VBSCTL   - UTIL                          *\n*  VECTOR   - SYS           VLISTDST - COMM                          *\n*  VTDENTRY - DB            VTE      - UTIL                          *\n*  V00      - DC            V01      - COMM                          *\n*  V10      - DC            V11      - COMM                          *\n*  V50      - DC                                                     *\n*  V70      - DC            V71      - COMM                          *\n*  WORK     - DB            WORKAREA - COMM                          *\n*  WORKSTOR - COMM          WRKFILE1 - UTIL          WRKFIL2  - UTIL *\n*  WRKFIL3  - UTIL                                                   *\n*  W00      - COMM          W01      - COMM          W02      - COMM *\n*  W03      - COMM          W04      - COMM                          *\n*  W10      - COMM          W13      - COMM                          *\n*  W70      - COMM                                   XBLK     - DB   *\n*  XCRB     - FP                                                     *\n*  XLOGBKET - LOGR          XLOG18   - LOGR          XREF     - UTIL *\n*  XRPSTAB  - DB                                                     *\n*  XWORKARA - DB            XWSSACA  - DB            X1       - COMM *\n*  X10      - COMM          X11      - COMM          X12      - COMM *\n*  X13      - COMM          X14      - COMM          X15      - COMM *\n*  X2       - COMM                                                   *\n*  X3       - COMM          X4       - COMM          X5       - COMM *\n*  X6       - COMM          X7       - COMM          X8       - COMM *\n*  X9       - COMM          X99      - COMM          ZIB      - SYS  *\n*                                                                    *\n**********************************************************************\n         START\n TITLE 'IMS/VS/DB DSECTS:  ABMSGDS'\n         IABMSG DSECT=YES                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  CMTIAVM'\n         CMTIAVM FUNC=DSECT                                    @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IDAACB'\n         IDLIVSAM ACB                                          @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IDAAMB'\n         IDLIVSAM AMB                                          @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IDAAMBL'\n         IDLIVSAM AMBL                                         @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  BATW'\n         DFSBATW\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  BCB'\n         DFSBCB FUNC=DSECT                                     @BM60166\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  BQEL'\n         DFSBQEL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IDABUFC'\n         IDLIVSAM BUFC                                         @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  BCBQE, BCBPE, EQUATES FOR DFSBCBSS MACROS'\n         PRINT OFF\n         REQUATE SAVE=YES                                      @BM60166\n         PRINT ON\n         DFSBCB FUNC=EQU                                       @BM60166\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  BFSP, BFUS, RPLI'\n         IDLIVSAM BFSP                                         @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IBFPRF, SBUF'\n         IBFPRF FMTLIST=NO,SBEXT=YES                           @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IBPOOL'\n         IBPOOL FMTLIST=NO                                     @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IDABSPH'\n         IDLIVSAM BSPH                                         @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  ISUBPL'\n         ISUBPL FMTLIST=NO                                     @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  CIR'\n         DFSCIR FUNC=DSECT                                     @BM60386\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  CNSW'\n         DFSCNSW\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  CSSW'\n         DFSCSSW\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DAWE'\n         DFSDAWE TYPE=ALL,FUNC=DSECT                           @BM60166\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DFSAURQL'\n         DFSAURQL\n         DFSAURQL DSECT=SSPRM                                  @BM60166\n         DFSAURQL DSECT=UTPRM,PREFIX=AUT                       @BM60166\n         DFSAURQL DSECT=DSPRM                                  @BM60166\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DBDDSECT, PREFIX, DMAN, SEGTAB, FLDTAB, LCHI;\n               LD, EXTDBD, DBDSORTB, INDXTAB'\n         IDBD\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DBDNLIST'\n         DBDNLIST\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DBPCB'\n         IDLI  DPCBASE=0,CALLER=IMS                            @BIL8MDC\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DBPCBDV'\n         IDLI  PDVBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DBSTATS'\n         IDLI  DBSBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DFSCBTS'\n         DFSCBTS FUNC=DSECT                                    @BM60166\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DFSNCB'\n         DFSNCB\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DFSRPST'\n         DFSRPST ,                                             @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DFSVTDIR,VTDENTRY'\n         DFSVTDIR\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IHADCB '\n         DLGWORK TYPE=DSECT,FMLIST=NO                          @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IHADCWB'\n         IHADCWB\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IHADCWQ'\n         IHADCWQ\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DDIR'\n         IDLI  DDRBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DEB, DEBDASD, DEBACSMD, DEBSUBNM, DEBXTN, DE;\n               BOSAME, DEBOSTAB'\n         GBLC  &DFSYSVS                                        @BIHC9RL\n         AIF   ('&DFSYSVS' EQ 'VS201').SVSDEB                  @BIHC9RL\n         IDEBOSD LIST=YES                                      @BIHC9RL\n         AGO   .ENDDEB                                         @BIHC9RL\n.SVSDEB  ANOP                 GENERATE WITHOUT LIST FOR SVS.   @BIHC9RL\n         IDEBOSD\n.ENDDEB  ANOP\n         END\n         START\n TITLE  'IMS/DB DSECTS:  DLOGDB, DLOGDSHR, DLOGTRCK, DLOGKEY, DLOGFSE, ;\n               DLOGDATA'\n         DFSDLOG ,\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DLTR, HDTRX'\n         IDLIVSAM TRACENT                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DLTWA, DLLEVTBL, DLTTRCE'\n         DLTWA TRACE=YES                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DMB, DMBAMP, DMBPSDB, DMBSEC, DMBDACS, DMBCP;\n               AC, DMBXMPRM'\n         IDLI  DMBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DOL'\n         DFSDOL FUNC=DSECT                                     @BM60386\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DPDIR'\n         DFSDPDIR\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DSG'\n         IDLI  DSGBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IDAEDBHD, IDAEDB'\n         IDLIVSAM EDB                                          @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  ETPCP'\n         DFSETPCP\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  FDB'\n         IDLI  FDBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  FLD'\n         IDLI  FLDBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  FRB'\n         DFSFRB ,                                              @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  FSB, FSBLIST'\n         IDLI  FSBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS -- DL/I FUNCTION CODES'\nFUNCODE  DSECT\n         IDLI  FUNBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  GB'\n         IGLI  GBBASE=0                                        @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  GBCB'\n         IGLI  GBCBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  GLT'\n         IGLI  GLTBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  GPT'\n         IGLI  GPTBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  GQCB'\n         IGLI  GQCBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  HDS0DS'\nHDS0DS   DSECT\n         PRINT OFF\n         IPST\n         PRINT ON\n         HDS0DS\n         END\n         START\n TITLE 'IMS/DB DSECTS:  HSSD'\n         DBFHSSD\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IDARPL'\n         IDLIVSAM RPL                                          @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  INTLIST'\n         INTLIST\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IECTIOB'\n         OSAMIOBD\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IOMA'\n         OSAMIOMA MASK=NO                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IOSBQCBD, IOSB'\n         PRINT OFF\n         COPY IMSPS                                            @BIHC9RL\n         PRINT ON\n         OSAMIOSB QCB=YES,IOSB=YES,FMTLIST=NO                  @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  JCBP, JCB, HHSTRT'\n         IDLI  JCBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  LAWE'\n         DFSLAWE FUNC=DSECT                                    @BM60166\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  LEV'\n         IDLI  LEVBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IDALPMB'\n         IDLIVSAM LPMB                                         @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS -- STORAGE MGMT. MODULE ID''S'\nMODID    DSECT\n         IDLI  SMBASE=0                                        @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  IDAPLHDR, IDAPLH'\n         IDLIVSAM PLH                                          @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  MDE'\n         DFSMDE\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  PDIR'\n         IDLI  PDRBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  PPRE'\n         DFSPPRE FUNC=DSECT                                    @BM60166\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  PRM'\n         PIPARM\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  PSB'\n         IDLI  PSBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  QBFALST, QDCBLST'\n         QBFALSTD ,                                            @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  QCSS'\n         DFSQCSS FUNC=DSECT                                    @BM60166\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  QHDR'\n         DFSQHDR ,                                             @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  QLGMSCHN'\n         QLGMSCHN ,                                            @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  QSAV'\n         DFSQSAV\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  RDSW'\n         PRINT OFF                                             @BM60000\n         IEPF\n         OSAMDECB QEL=YES                                      @BM60386\n         PRINT ON                                              @BM60000\n         DFSRDSW\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  RVET'\n         DFSRVET FUNC=DSECT                                    @BM60166\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBDCB'\n         DFSSBDCB\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBHE'\n         DFSSBHE\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBPARM'\n         DFSSBPAR\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBPSS'\n         DFSSBPSS\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBPST'\n         DFSSBPST\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBSCD'\n         DFSSBSCD\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SBSNA'\n         DFSSBSNA\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SCAR, SCA1'\n         DFSSBCAR\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  SDB, SDBXP'\n         IDLI  SDBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS FOR SB: EDSG, SDSG'\n         DFSSBDSG\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS FOR SB: SRAN'\n         DFSSBRAN\n         END\n         START\n TITLE 'IMS/DB DSECTS:  SPRM'\n         DSECT ,\n         DFSSPRM\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  SSIB'\n         DFSSSOB IEFJSSIB                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  SSOB'\n         DFSSSOB IEFJSSOB                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  STATVBH'\n         IDLIVSAM STATVBH                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  XBLK'\n         DFSXBLK\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  XRPSTAB'\n         DFSXRPST ,                                            @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  DFSFXC00, REQBLK, BLK, QCB, QEL, TRCENT'\n         XC00\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  XWORKARA, XWSSACA'\n         XMTWA\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  ''/DISPLAY'' FORMATS -- A00 THROUGH X99'\n         DISPLAY TYPE=ALL                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  BUFBTAM'\n         ICLI  BUFBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  BUFBTAMR'\n         ICLIRS BUFBASE=0                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  BUFLU6'\n         PRINT OFF\n         MACRO\n         BUFLU6\n         COPY BUFLU6                                           @BIHC9RL\n         MEND\n         PRINT ON\n         BUFLU6\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  BUFSLUP, IFGRPL'\n         PRINT OFF\n         MACRO\n         BUFSLUP\n         COPY BUFSLUP                                          @BIHC9RL\n         MEND\n         PRINT ON\n         BUFSLUP\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  BUFVTAM, IFGRPL'\n         PRINT OFF\n         MACRO\n         BUFVTAM\n         COPY BUFVTAM                                          @BIHC9RL\n         MEND\n         PRINT ON\n         BUFVTAM\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  BUFVTPRE'\n         BUFVTPRE\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  BUFWORK'\n         BUFWORK\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  BUF3600, IFGRPL'\n         PRINT OFF\n         MACRO\n         BUF3600\n         COPY BUF3600                                          @BIHC9RL\n         MEND\n         PRINT ON\n         BUF3600\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CCB'\n         ICLI  CCBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CIB'\n         ICLI  CIBBASE=0                                       @BM60166\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CIBEXT'\nCIBEXT   DSECT\n         PRINT OFF\n         COPY CIB                                              @BIHC9RL\n         MACRO\n         CIBEXT\n         COPY  CIBEXT                                          @BIHC9RL\n         MEND\n         PRINT ON\n         CIBEXT\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CLB (IECTDECB)'\n         ICLI  CLBBASE=0                                       @BM60166\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CMDFMT'\n         PRINT OFF\n         MACRO\n         CMDFMT\n         COPY CMDFMT                                           @BIHC9RL\n         MEND\n         PRINT ON\n         CMDFMT\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CNT (LNB)'\n         ICLI  CNTBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CONSAVE'\n         PRINT OFF\n         MACRO\n         CONSAVE\n         COPY CONSAVE                                          @BIHC9RL\n         MEND\n         PRINT ON\n         CONSAVE\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CRB'\n         ICLI  CRBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CTB (LTB)'\n         ICLI  CTBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CTT'\n         ICLI  CTTBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  CVB'\n         ICLI  CVBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  DCTLVTAM'\nDCTLVTAM DSECT\n         PRINT OFF\n         MACRO\n         DCTLVTAM\n         COPY DCTLVTAM                                         @BIHC9RL\n         MEND\n         ICLI  CTBBASE=0                                       @BIHC9RL\n         PRINT ON\n         DCTLVTAM\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  DCTL327V'\nDCTL327V DSECT\n         PRINT OFF\n         MACRO\n         DCTL327V\n         COPY  DCTL327V                                        @BIHC9RL\n         MEND\n         PRINT ON\n         DCTL327V\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  DCTL3600'\nDCTL3600 DSECT\n         PRINT OFF\n         MACRO\n         DCTL3600\n         COPY  DCTL3600                                        @BIHC9RL\n         MEND\n         PRINT ON\n         DCTL3600\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS: DCW'\n         PRINT OFF\n         MACRO\n         DCW\n         DSECT ,\n         COPY DCW                                              @BM60166\n         MEND\n         PRINT ON\n         DCW\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  DFSHSRVW'\n         DFSHSRVW ,                                            @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  DFSMFSTL'\n         DFSMFST DSECT=YES                                     @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS: DIFHEADR, DIFSECTN, DIFFDE, DIFNULL, DIFDELIM;\n               , DIFOPT, DIFPNTBL, DIFPFKEY, DIFTBLE'\n         PRINT OFF\n         MACRO\n         DIF\n         COPY DIF                                              @BIHC9RL\n         MEND\n         PRINT ON\n         DIF\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  DOFHEADR, DOFSECT, DOFLINK, DOFFDE, DOFCOM, ;\n               DOFSOPT, DOFOPT'\n         PRINT OFF\n         MACRO\n         DOF\n         COPY DOF                                              @BIHC9RL\n         MEND\n         PRINT ON\n         DOF\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  DVCTBL'\n         PRINT OFF\n         MACRO\n         DVCTBL\n         COPY DVCTBL                                           @BIHC9RL\n         MEND\n         PRINT ON\n         DVCTBL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  FBP'\n         ICLI  FBPBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  FEILINK'\n         FEILINK ,                                             @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  FERSFLAG'\n         PRINT OFF\n         MACRO\n         FERSFLAG\n         COPY FERSFLAG                                         @BIHC9RL\n         MEND\n         PRINT ON\n         FERSFLAG\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  FETUNIT'\n         FETUNIT\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS: FMHTYPE1'\n         PRINT OFF\n         MACRO\n         FMHTYPE1\n         DSECT ,\n         COPY FMHTYPE1                                         @BM60166\n         MEND\n         PRINT ON\n         FMHTYPE1\n         END\n TITLE 'IMS/VS/DC DSECTS:  FRE'\n         ICLI  FREBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  LU6WA'\n         PRINT OFF\n         MACRO\n         LU6WA\n         COPY LU6WA                                            @BIHC9RL\n         MEND\n         PRINT ON\n         LU6WA\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  LWKA, LTRWKA'\n         DFSLWKA ,                                             @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  MDL'\n         DFSMDL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  MFSFLDE'\n         PRINT OFF\n         MACRO\n         MFSFLDE\n         COPY MFSFLDE                                          @BIHC9RL\n         MEND\n         PRINT ON\n         MFSFLDE\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  MFSSEGE'\n         PRINT OFF\n         MACRO\n         MFSSEGE\n         COPY MFSSEGE                                          @BIHC9RL\n         MEND\n         PRINT ON\n         MFSSEGE\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  MIDHEADR, MIDGRP, MIDLINK, MIDSEG, MIDFDE, M;\n               IDLITOR'\n         PRINT OFF\n         MACRO\n         MID\n         COPY MID                                              @BIHC9RL\n         MEND\n         PRINT ON\n         MID\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  MODHEADR, MODGRP, MODFDE'\n         PRINT OFF\n         MACRO\n         MOD\n         COPY MOD                                              @BIHC9RL\n         MEND\n         PRINT ON\n         MOD\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  MSGMAP, KEYWRD, VARPREF, VLISTDST'\n         DFSMMAPS ,                                            @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  OUTWORK, WORKSTOR'\n         PRINT OFF\n         MACRO\n         MFSOUT\n         COPY MFSOUT                                           @BIHC9RL\n         MEND\n         PRINT ON\n         MFSOUT\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  PARM'\n         DFSPARM\n         END\n         START\n TITLE 'IMS/VS/DB DSECTS:  PDIRNTRY'\n         DFSPDSE\n         END\n         START\n TITLE 'IMS/DB DSECTS:  UHIC'\n         DSECT ,\n         DFSUHIC\n         END\n         START\n TITLE 'IMS/DB DSECTS:  WORK'\n         DBFHWORK\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  PFECB, PCIB'\n         IPFECB  PFCIB=YES                                     @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  PTAL, TBE, HWKA, HTRWKA'\n         DFSPTAL ,                                             @BMA0012\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  QTPPCB'\n         ICLI  QPCBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  RDBLOCK'\n         ICLIRS RDBBASE=0                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  RDSEG'\n         ICLIRS RDSBASE=0                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  RET'\n         PRINT OFF\n         MACRO\n         RET3600\n         COPY RET3600                                          @BIHC9RL\n         MEND\n         PRINT ON\n         RET3600\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  RSESEG'\n         ICLIRS RSEBASE=0                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  RSISEG'\n         ICLIRS RSIBASE=0                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  RSRSEG'\n         ICLIRS RSRBASE=0                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  RSSSEG'\n         ICLIRS RSSBASE=0                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS: SLU1STK'\n         PRINT OFF\n         MACRO\n         SLU1STK\n         COPY SLU1STK                                          @BM60166\n         MEND\n         PRINT ON\n         SLU1STK\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  SPAD'\n         ICLI  SPABASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  SPQB'\n         ICLI SPQBASE=0                                        @BM60166\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  SRBSECT(DSPSRB)'\n         IDSPSRB\n         END\n         START\n TITLE 'IMS/DC DSECTS:  TCF, EL, INCARD'\n         DFSTCF ,\n         END\n         START\n TITLE 'IMS/VS/DC DSECTS:  WORKAREA'\n         PRINT OFF\n         MACRO\n         WDSECT\nM3BROD   EQU   0                                               @BIHC9RL\n         COPY WDSECT                                           @BIHC9RL\n         MEND\n         PRINT ON\n         WDSECT\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  DFSAGT, DFSAIDX'\n         PRINT OFF\n         MACRO\n         DFSAGTDS\n         COPY DFSAGTDS                                         @BIHC9RL\n         MEND\n         PRINT ON\n         DFSAGTDS\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  BCP, BCPPSTS, BCPVOLS'\n         BCPID\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  CADSECT, PARMLIST'\n         REQUATE\n         ICADSECT DSECT=YES                                    @BIHC9RL\n         END\n**  LINE DELETED BY APAR PL58837\n         START\n**  LINE DELETED BY APAR PL58837\n TITLE 'IMS/SYS DSECTS:  DBCTM'\n**  LINE DELETED BY APAR PL58837\nDBCTM    DFSDBCTM TYPE=DSECT,PFX=DFS,AREA=BOTH\n**  LINE DELETED BY APAR PL58837\n         END\n**  LINE DELETED BY APAR PL58837\n         START\n**  LINE DELETED BY APAR PL58837\n TITLE 'IMS/SYS DSECTS:  DEVTABLE'\n**  LINE DELETED BY APAR PL58837\n         DEVTABLE ,\n         END\n         START\n TITLE 'IMS/SYS DSECTS:  DFSAVEC, DFSDOPTB '\n         DFSAVECT DSECT=YES\n         DFSDOPTB DSECT=YES\n         END\n         START\n TITLE 'IMS/SYS DSECTS:  DFSDPARM            '\n         DFSDPARM TYPE=DSECT\n         END\n         START\n TITLE 'IMS/SYS DSECTS:  DFSDPPFH, DFSDBPRF '\n         DFSDBPFH DSECT=YES\n         END\n         START\n TITLE  'IMS/SYS DSECTS: DFSDPRH'\n         DFSDPRH ,\n         END\n         START\n TITLE 'IMS/SYS DSECTS: DFSIEQE'\n         DFSIEQE ,\n         END\n         START\n TITLE 'IMS/SYS DSECTS: DFSRRTPR'\n         DFSRRT ,\n         END\n         START\n TITLE 'IMS/SYS DSECTS: DFSSRB'\n         PRINT OFF\n         IHASRB ,\n         ISRBPARM ,\n         PRINT ON\n         DFSSRB ,\n         END\n         START\n**  LINE DELETED BY APAR PL58837\n TITLE 'IMS/VS/SYS DSECTS:  DSPWRK1, DSPWRK, DSPPST'\n         IDSPWRK TYPE=DSECT,FMLIST=NO                          @BIHC9RL\n         IDSPWRK TYPE=KIT                                      @BM60166\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  MP'\n         DFSMP\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  DFSEEQE'\n         DFSEEQE ,                                             @BMA0012\n         END\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n         START\n**  LINE DELETED BY APAR PL58837\n TITLE  'IMS/SYS DSECTS: DFSEQEL'\n         DFSEQEL ,\n         END\n         START\n TITLE 'IMS/SYS DSECTS: DSSI'\nDSSI     DFSDSSIM TYPE=DSECT,PFX=DFS\n         END\n         START\n TITLE 'IMS/SYS DSECTS:  DFSTORPL'\n         DFSIOT  FUNC=DSECT\n         END\n         START\n TITLE 'IMS/SYS DSECTS:  DTRMPOOL'\n         DTRMPOOL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  EPF'\n&EPFGEN1 SETB  0              ALLOW DSECT TO BE GENERATED.     @BIHC9RL\n         IEPF  NO,DSECT=YES                                    @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  IDLWORK'\n         IDLWORK\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  FTCBTBL'\n         DFSTCBTB FUNC=DSECT                                   @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  EEVT'\n         DFSEEVT\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  EEVTP'\n         DFSEEVTP\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  EMP'\n         DFSEMP\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  IENQCB, IENQE'\n         IENQCB\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  ESETP'\n         DFSESETP\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  ESFC'\n         DFSESFC\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  ESGO'\n         DFSESGO FUNC=DSECT                                    @BM60166\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  ESSW'\n         DFSESSW\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  ESTR'\n         DFSESTR FUNC=DSECT                                    @BM60166\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  ES30'\n         DFSES30 FUNC=DSECT                                    @BM60166\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  EZS'\n         DFSEZS\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  GESE'\n         DFSGESE\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  IFIXLIST, IXLATLST'\n         IFXFLST\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  IPB'\n         IPB\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  ISRBPARM'\n         DSECT\nSRBEND   EQU   *                                               @BA47516\nISRBPARM ISRBPARM\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  ISTWORK'\n         ISTWORK\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  ITRMWRK'\n         ITRMWRK\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  IWALE'\n         PRINT OFF                                             @BM60000\n         DFSSSOB IEFJSSOB                                      @BM60429\n         PRINT ON                                              @BM60000\n         DFSIWALE\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  DECB, LCD, LBUFFER'\n         LCDSECT FMLIST=NO                                     @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  LCRE'\n         DFSLCRE\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  LESE'\n         DFSLESE\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  LESEP'\n         DFSLESEP\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  LITP'\n         DFSLITP\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  LOGRCD'\n         ICLI  QLGBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  MOASN'\n         DFSMOASN\n         END\n         START\n TITLE 'IMS/SYS DSECTS:  MSGBUFPX, MSGXDATA'\n         DFSDBMSG ,\n         END\n         START\n TITLE 'IMS/SYS DSECTS:  NID'\n         DFSNID ,\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  DFSPLDT0, MODTBL, MODEL, MODTBLPX'\n         PRLDBLK DSECT                                         @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  DFSPRRG0'\n         PARMS D,RGPBASE=0                                     @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  DFSPRPX0, PST, DFSDLIST, DFSISIT'\n         IPST  ISIT=YES                                        @BIHC9RL\n         END\n         START\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n TITLE 'IMS/SYS DSECTS:  PAPL, PAPLRINL, PAPLRRCT, PAPLSTAR'\n         DFSPAPL ,\n         END\n         START\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n TITLE 'IMS/SYS DSECTS:  PDL'\n         DFSPDL ,\n         END\n         START\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n TITLE 'IMS/SYS DSECTS:  PRP'\n         DFSPRP ,\n         END\n         START\n TITLE 'IMS/SYS DSECTS:  QBFFR'\n         ICLI  BFRBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  QBLKRCDD'\n         QBLKRCDD\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  QCB, QE'\n         IQCB\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  QDEST'\n         ICLI  QDSBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  QPOOL'\n         ICLI  POOBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  QSAPWKAD'\n         QSAPWKAD\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  RCHKREC'\n         RCKPTREC\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  RLWWORKD -- RESTART LOG READ WORK AREA'\n         PRINT OFF                                             @BM60000\n         LCDSECT TYPE=REST                                     @BM60386\n         DFSDAWE TYPE=CMTI                                     @BM60386\n         PRINT ON                                              @BM60000\n         DFSFRLWA TYPE=ALL                                     @BM60166\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  RRE'\n         DFSRRE\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  SAP'\n         ISAP\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  SCD'\n         ISCD  SECTYPE=DSECT                                   @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  SCHPT'\nSCHPT    DSECT\n         ISCHPT\n         END\n         START\n TITLE 'IMS/SYS DSECTS:  SIGNSAVE'\n         PRINT OFF\n         COPY DFSAWE\n         DFSSSOB (IEFJSSOB)\n         PRINT ON\n         SIGNSAVE ,\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  SLX, SLXLSTAT'\n         DFSSLX\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  SMB'\n         IAPS  SMBBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  SPINDATA'\n         PRINT OFF\n         MACRO\n         SPINDATA\n         COPY SPINDATA                                         @BIHC9RL\n         MEND\n         PRINT ON\n         SPINDATA\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  SQPST'\n         ISQPST\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  SSIE'\n         DFSSSIE\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  SSITP'\n         DFSSSITP\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  STAEPARM'\n         STPARM\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  TCT'\n         IAPS  TCTBASE=0                                       @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  TPCB'\n         IDLI  TPCBASE=0,CALLER=IMS                            @BIL8MDC\n         END\n         START\n TITLE 'IMS/SV DSECTS:  TWB'\n         PRINT OFF\n         IEPF ,\n         PRINT ON\n         DFSTWB ,\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  VECTOR'\n         IRCVECT\n         END\n         START\n TITLE 'IMS/VS/SYS DSECTS:  ZIB, FAQE'\n         IZIB\n         END\n         START\n TITLE 'IMS/VS DSECTS -- LOG RECORD FORMATS'\n         ILOGREC  TYPE=DSECT,RECID=ALL                         @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS DSECTS -- STATISTICS RECORD FORMATS'\n         ISTATR  TYPE=DSECT,RECID=ALL                          @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS: -- LOG ARCHIVE UTILITY TABLES'\n         DFSUARC\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  CDS (LEDSCT)'\n         PRINT OFF\n         MACRO\n         DFSUCDS0\n         COPY DFSUCDS0                                         @BIHC9RL\n         MEND\n         PRINT ON\n         DFSUCDS0\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  UCSTAT, CUMCONST (CUMHDR)'\n         DFSUCUMC UCMTYP=DSECT                                 @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  CUMREC, DBCUMO'\n         DFSUCREC\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  DFSUSTAT'\n         DFSUSTAT\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  DUMPHDR'\n         DFSUDHDR\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  FLDE'\n         IFLDE\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  IFE'\n         PRINT OFF\n         MACRO\n         IFE\n         COPY IFE                                              @BIHC9RL\n         MEND\n         PRINT ON\n         IFE\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  IOAREA'\n         DFSURGUF\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  ITBNODE'\n         ITBNODE K=B                                           @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  MBRNTRY'\n         ACBDIR\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  MCT'\n         IMCT\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  MCTA'\n         IMCTA\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  MCTE'\n         IMCTE\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  MFSGBL, XREF'\n         MFSGBL DSECT                                          @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS -- MFS INTERMEDIATE TEXT BLOCK FORMATS'\n         PRINT OFF\n         MACRO\n         MFSITB\n         COPY MFSITB                                           @BIHC9RL\n         MEND\n         PRINT ON\n         MFSITB\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  PSE, PTH, TSE, TTE, NTE, TLAM, RSE, VTE'\n         PRINT OFF\n         MACRO\n         PARSE\n         COPY PARSE                                            @BIHC9RL\n         MEND\n         PRINT ON\n         PARSE\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  PPT'\n         IPPT  TYPE=DSECT                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  REORGHDR'\n         DFSURHDR\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  SCANPARM'\n         ISPB  TYPE=DSECT                                      @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  SCHCTLBK, SCHGROUP'\n         SEARCHDS\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  SDW'\n         ISDW\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  STKIDQE, STKIDBLK'\n         PRINT OFF\n         MACRO\n         STKDSECT\n         COPY STKDSECT                                         @BIHC9RL\n         MEND\n         PRINT ON\n         STKDSECT\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  SWA'\n         ISWA\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  SYM'\n         ISYM  TYPE=EXTERNAL                                   @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  SYME'\n         ISYME TYPE=EXTERNAL                                   @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  TBLE'\n         PRINT OFF\n         MACRO\n         TBLE\n         COPY TBLE                                             @BIHC9RL\n         MEND\n         PRINT ON\n         TBLE\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS -- UTILITY CONTROL FACILITY COMMON WORK AREA  ;\n               (DFSUCP70)'\n         UCFCMVEC UCFTYP=DSECT                                 @BIHC9RL\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  VBSCTL'\n         IVBSCTL\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  WRKFILE1'\n         DFSURWF1\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  WRKFIL2'\nVARLEN   EQU   100                                             @BIHC9RL\n         DFSURWF2\n         END\n         START\n TITLE 'IMS/VS/UT DSECTS:  WRKFIL3'\n         DFSURWF3\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  BUFMS'\n         PRINT OFF\n         MACRO\n         BUFMS\n         COPY BUFMS                                            @BIHC9RL\n         MEND\n         PRINT ON\n         BUFMS\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  FMHMSC'\n         PRINT OFF\n         MACRO\n         FMHMSC\n         COPY FMHMSC                                           @BIHC9RL\n         MEND\n         PRINT ON\n         FMHMSC\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  IMCS'\n         PRINT OFF\n         MACRO\n         IMCS\n         COPY IMCS                                             @BIHC9RL\n         MEND\n         PRINT ON\n         IMCS\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  LCB'\n         PRINT OFF\n         MACRO\n         LCB\n         COPY LCB                                              @BIHC9RL\n         MEND\n         PRINT ON\n         LCB\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  LXBDEF'\n         PRINT OFF\n         MACRO\n         LXB\n         COPY LXB                                              @BIHC9RL\n         MEND\n         PRINT ON\n         LXB\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  MSRSEG'\n         PRINT OFF\n         MACRO\n         DFSMSMSR\n         COPY DFSMSMSR                                         @BIHC9RL\n         MEND\n         PRINT ON\n         DFSMSMSR\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  MTMWHDR'\n         PRINT OFF\n         MACRO\n         MTMWHDR\n         COPY MTMWHDR                                          @BIHC9RL\n         MEND\n         PRINT ON\n         MTMWHDR\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  MWBSIDE, MTMWINDO'\n         PRINT OFF\n         MACRO\n         MTMWINDO\n         COPY MTMWINDO                                         @BIHC9RL\n         MEND\n         PRINT ON\n         MTMWINDO\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  RCNT'\n         PRINT OFF\n         MACRO\n         RCNT\n         COPY RCNT                                             @BIHC9RL\n         MEND\n         PRINT ON\n         RCNT\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  MTMA, SAVWORK, TRACEHDM, TRACEMAP'\nMTMA     DSECT\n         PRINT OFF\n         COPY MTMWINDO                                         @BIHC9RL\n         PRINT ON\n         CSECT\n         INTFMTMA\n         END\n         START\n TITLE 'IMS/VS/MSC DSECTS:  SID'\n         PRINT OFF\n         MACRO\n         DFSMSSID\n         COPY  DFSMSSID                                        @BIHC9RL\n         MEND\n         PRINT ON\n         DFSMSSID\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  ADSC'\n         DBFADSC\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  ADSL'\n         DBFADSL\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  BALG'\n         DBFBALG\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  BHDR, MSNQLIST, MSUPLOG, MSDBSSA, FSA'\n         DBFBMSDB\n         END\n         START\n TITLE  'IMS/FP DSECTS:  CBUF'\n         DBFCBUF ,\n         END\n         START\n TITLE  'IMS/FP DSECTS:  CSYN'\n         DBFCSYN ,\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  DBLK, DEND, DSEG, DFSE'\n         DBFDBLK\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  DCBTABDS'\n         DBFDCBT\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  DBFDEBSC'\n         PRINT OFF                                             @BMA0012\n         MACRO\n         DBFDEBSC\n         DSECT ,\n         COPY DBFDEBSC                                         @BMA0012\n         MEND\n         PRINT ON                                              @BMA0012\n         DBFDEBSC ,                                            @BMA0012\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  DBFMSDBW'\n         DBFMSDBW ,                                            @BMA0012\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  DBFMDSND'\n         DBFMSDSN ,                                            @BMA0012\n         END\n         START\n         DSECT ,\n TITLE 'IMS/FP DSECTS:  DLSRWORK'\n         DBFDLSR ,\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  DMAC'\n         DBFDMAC\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  DMCB'\n         DBFDMCB\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  DMHR'\n         DBFDMHR\n         END\n         START\n TITLE  'IMS/VS/FP DSECTS:  DOCL'\n         DBFDOCL\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  ECNT'\n         DBFECNT\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  EMHB'\n         DBFEMHB\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  EPCB'\n         DBFEPCB\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  EPST'\n         DBFEPST\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  EQE'\n         DBFEQE DSECT=EQE                                      @BMA0012\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  ERMSA'\n         DBFERMSA\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  ESCD'\n         DBFESCD\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  ESRB'\n         DBFESRB\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  ESRT'\n         DBFESRT\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FDBF'\n         DBFMFDB\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FLDC'\n         DBFFLDC\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FPALDS'\n         DBFAREA\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FLDQ'\n         DBFLGRDQ\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FLIM'\n         DBFLGRIM\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FLOM'\n         DBFLGROM\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FLRE'\n         DBFLGRRE ,                                            @BMA0012\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FLSD'\n         DBFLGRSD\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FLSF'\n         DBFLGRSF\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FLSY'\n         DBFLGRSY\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  FPCP'\n         DBFFPCP\n         END\n         START\n TITLE  'IMS/SV DSECTS:  HICL5947'\n         DBFLGRIC ,\n         END\n         START\n TITLE  'IMS/FP DSECTS:  HSSO'\n         DBFHSSO ,\n         END\n         START\n TITLE  'IMS/FP DSECTS:  HSSP'\n         DBFHSSPS ,\n         END\n         START\n TITLE  'IMS/FP DSECTS:  HSSR'\n         DBFHSSR ,\n         END\n         START\n TITLE 'IMS/FP DSECTS:  IOAR'\n         DBFUTIO\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  LDBQ'\n         DBFLDQB ,                                             @BMA0012\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  LSRT'\n         DBFLSRT RECID=50,TYPE=O                               @BIHC9RL\n         END\n         START\n TITLE  'IMS/FP DSECTS:  L56X'\n         PRINT OFF\n         DFSDAWE TYPE=SQPP\n         DFSETPCP ,\n         PRINT ON\n         DBFL56X ,\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  MCTLRECD'\n         DBFMCTL\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  MLTE'\n         DBFMLTE\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  MRMB'\n         DBFMRMB\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  MSDBTBL'\n         DBFMSDBT\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  MSDIRECD'\n         DBFIREC\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  PMLT'\n         DBFPMLT\n         END\n         START\n TITLE 'IMS/FP DSECTS:  QICR'\nQICR     DBFQICR ,\n         END\n         START\n TITLE 'IMS/FP DSECTS:  QRD'\nQRD      DBFPICR ,\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  RCTE'\n         DBFRCTE\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  SDBF'\n         DBFSDBT\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  SMLT'\n         DBFSMLT\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  SNMT'\n         DBFSNMT DSECT=                                        @BA23320\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  SPCB'\n         DBFSPCB\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  SSMM'\n         DBFSSMM\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  UDTB'\n         DBFUDTB\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  UTDD'\n         DBFUTDD\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  UTDW'\n         DBFUTDW\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  UTHR'\n         DBFUTHR\n         END\n         START\n TITLE 'IMS/VS/FP DSECTS:  XCRB'\n         DBFXCRB\n         END\n         START\n TITLE 'IMS/DBRC DSECTS:  DFSRCWKA'\n         DFSRCWKA ,\n         END\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n**  LINE DELETED BY APAR PL58837\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "##DSECT2": {"ttr": 2308, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x1b\\x00\\x1b\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS22## JOB 'IMSGROUP  SH28205610*110A044         015  1001009037',\n//  MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016,\n//  REGION=512K,TIME=010\n//*MAIN ORG=LOCAL,CLASS=L5\n//IMSDSECT EXEC IMSUPDTE,P=IMA,DISPR=SHR,PGMC=IEV90,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=IMSDSECT,LMEMBER=IMSDSECT,\n//   DECK='NODECK,BATCH',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   CONDL=0,\n//   ACCT=0\n//*.SYSPRINT DD DISP=SHR,DSN=IMA.DSECT2\n//C.SYSIN DD *\n     START\n        TITLE ' THE ECP        '\n         DFSECP\n      END\n     START\n        TITLE ' THE PARMBLK    '\n         PARMBLK\n      END\n     START\n        TITLE ' THE PCB-S '\n         IDLI TPCBASE=0\n         IDLI DPCBASE=0\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "##DSECVB": {"ttr": 2310, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x11\\x00\\x11\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS22## JOB 'IMSGROUP  SH28205610*110A044         015  1001009037',\n//  MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016,\n//  REGION=512K,TIME=010\n//*MAIN ORG=LOCAL,CLASS=L5\n//IMSDSECT EXEC IMSUPDTE,P=IMA,DISPR=SHR,PGMC=IEV90,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=IMSDSECT,LMEMBER=IMSDSECT,\n//   DECK='NODECK,BATCH',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   CONDL=0,\n//   ACCT=0\n//*.SYSPRINT DD DISP=SHR,DSN=IMA.DSECT2\n//C.SYSIN DD *\n        TITLE ' THE VTAM BUFFER'\n         BUFVTAM\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#TRN2740": {"ttr": 2312, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS22MT JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=256K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//UPDTE EXEC IMSUPDTE,P=IMA,MEMBER=TRN2740,DISPR=SHR,\n//    SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,\n//    SOUT='*',CONDL=0\n//SYSIN  DD *\n./   CHANGE  NAME=TRN2740\n./ NUMBER INSERT=YES,SEQ1=00020000,NEW1=00020555,INCR=001 00020000 ---\n*/ NUMBER INSERT=YES,SEQ1=00020000,NEW1=00020555,INCR=001 00020000 BGN\n************************************************************\n   SPACE 3\n****************************************\n* 2740 SEND  MODS.\n* THESE ARE NEEDED FOR  BIG BEAD A-N-D  ALSO FOR SOME FORMS CONTROL\n*  (INCLUDING BUT NOT NECESSARILY LIMITED TO THE 3767'S AS 2740'S\n*  ( AT NAAO ON THEIR OLD \"LIMS\" SYSTEM UNDER CONTROL OF BILL-HRIPKO.)\nBEADA    EQU   X'27'\nBEADB    EQU   X'28'\n         ORG   TR27401S+BEADA\n         DC    X'3E'\n         ORG   TR27401S+BEADB\n         DC    X'3E'\n         ORG\n****************************************\n   SPACE 3\n************************************************************\n*/ NUMBER INSERT=YES,SEQ1=00020000,NEW1=00020555,INCR=001 00020000 END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ADCTR": {"ttr": 2314, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00;\\x00;\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 59, "newlines": 59, "modlines": 0, "user": "HOSKINS"}, "text": "//YA3324UE JOB 'EACARBONE.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=YA3324\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  (YA3324.IMA.RECORD(ADCTR))  ******\n//ADCTR    EXEC IMSUPDTE,P=IMA,DISPR=SHR,MEMBER=ADCTR,\n//   SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,NEW=NEW,\n//   SOUT='*',CONDL=0\n//SYSIN    DD  *\n./  ADD     NAME=ADCTR\n         MACRO                                                           0010000\n&NAME    ADCTR &CTR,&REG1=R15,&REG2=R14,&SCD=R9,&PST=\n.**********************************************************************\n.*                                                                    *\n.*       THIS MACRO IS USED TO INCREASE BY ONE THE VALUE OF A         *\n.*       SYSTEM COUNTER DESIGNATED BY &CTR.  &CTR IS A NUMERIC        *\n.*       SPECIFICATION STARTING FROM 1 (OR 01) AND GOES UP TO 64.     *\n.*       THE VALUES FOR &REG1 AND &REG2 ARE REGISTER NOTATIONS        *\n.*       AND ALWAYS TAKE THE FORM \"R_\" OR \"R__\".  THE VALUES FOR      *\n.*       &SCD CAN BE REGISTER NOTATION OR THE VALUE \"PSTSCDAD\".       *\n.*       IF NO VALUE IS GIVEN FOR &PST, THEN ADDRESSABILITY TO A      *\n.*       PST IS ASSUMED.  IF A \"R_\" OR \"R__\" VALUE IS GIVEN, THEN     *\n.*       ADDRESSABILITY IS NOT ASSUMED AND THE GIVEN REGISTER IS      *\n.*       USED.  THE INNER MACRO \"NARSCDF\" IS USED TO FIND THE         *\n.*       LOCATION OF THE ROCKWELL EXTENTION OF THE SCD AND THEN       *\n.*       THE FIELD OF COUNTERS IS FOUND USING THE ADDRESS RETURNED.   *\n.*                                                                    *\n.**********************************************************************\n         LCLC  &I\n         LCLA  &N\n&I       SETC  '&CTR'(1,K'&CTR)\n&N       SETA  &CTR\n         AIF   (&N GE 1 AND &N LE 64).CONT\n         MNOTE 8,'COUNTER VALUE &CTR INVALID'\n         AGO   .MEND\n.*\n.CONT    ANOP\n         AIF   ('&PST' NE '').NOPST\n&NAME    TM    PSTCODE1,PSTP3RGN\n         AGO   .CONT1\n.NOPST   ANOP\n&NAME    TM    PSTCODE1-PST(&PST),PSTP3RGN\n.CONT1   ANOP\n         BO    OVRCTR&I\n         AIF   ('&SCD' EQ 'PSTSCDAD').NOTREG\n         LR    &REG1,&SCD\n         AGO   .CONT2\n.NOTREG  ANOP\n         L     &REG1,&SCD\n.CONT2   ANOP\n*\n         NARSCDF &REG1,NARSWAT0,KNOWN=SCD,FAILX=OVRCTR&I\n*\n         LA    &REG2,1\n         A     &REG2,(&N-1)*4(,&REG1)\n         ST    &REG2,(&N-1)*4(,&REG1)\nOVRCTR&I EQU   *\n.MEND    MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ADCTRDSP": {"ttr": 2316, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00$\\x00$\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "HOSKINS"}, "text": "//YA3324UE JOB 'EACARBONE.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=YA3324\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  (YA3324.IMA.RECORD(ADCTRDSP))  ***\n//ADCTRDSP EXEC IMSUPDTE,P=IMA,DISPR=SHR,MEMBER=ADCTRDSP,\n//   SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,NEW=NEW,\n//   SOUT='*',CONDL=0\n//SYSIN    DD  *\n./  ADD     NAME=ADCTRDSP\n         MACRO                                                           0010000\n&NAME    ADCTRDSP &CTR,&REG1=R9,&REG2=R7\n.**********************************************************************\n.*                                                                    *\n.*       THIS MACRO IS USED INTERNAL TO DFSIDSP0 TO INCREASE BY       *\n.*       ONE THE VALUE OF A SYSTEM COUNTER DESIGNATED BY &CTR.        *\n.*       &CTR IS A NUMERIC SPECIFICATION STARTING FROM 1 (OR 01)      *\n.*       AND GOES UP TO 64.  THE VALUES FOR &REG1 AND &REG2 ARE       *\n.*       REGISTER NOTATIONS AND ALWAYS TAKE THE FORM \"R_\" OR \"R__\".   *\n.*                                                                    *\n.*                                                                    *\n.**********************************************************************\n         LCLC  &I\n         LCLA  &N\n&I       SETC  '&CTR'(1,K'&CTR)\n&N       SETA  &CTR\n         AIF   (&N GE 1 AND &N LE 64).CONT\n         MNOTE 8,'COUNTER VALUE &CTR INVALID'\n         AGO   .MEND\n.*\n.CONT    ANOP\n&NAME    LA    &REG2,1\n         A     &REG2,(&N-1)*4(,&REG1)\n         ST    &REG2,(&N-1)*4(,&REG1)\n.MEND    MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSADBC0": {"ttr": 2318, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "HOSKINS"}, "text": "//$A1041UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1041\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSADBC0))  ***\n//DFSADBC0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDB,SYMO=SOURCEDB,\n//   SMEMBER=DFSADBC0,LMEMBER=DFSADBCL,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *\n./  CHANGE  NAME=DFSADBC0        RW0050A\n./   NUMBER  INSERT=YES,SEQ1=06002100,NEW1=06002101,INCR=01\n***********************************************************************\n*                                                                     *\n*                                                                     *\n         B     DBCOM005  BYPASS SOME STUFF AND GO DIRECTLY TO         *\n*                                        PRINT ISAM/OSAM BUFFERS      *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n./   NUMBER  INSERT=YES,SEQ1=24890300,NEW1=24890301,INCR=01\n***********************************************************************\n*                                                                     *\n         DC    C' ...FORMATTED BY DFSADBC0 (LAM)'                     *\n*                                                                     *\n***********************************************************************\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSADCC0": {"ttr": 2320, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x19\\x00\\x19\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "HOSKINS"}, "text": "//$A1041UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1041\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSADCC0))  ***\n//DFSADCC0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=DFSADCC0,LMEMBER=DFSADCCL,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *\n./  CHANGE  NAME=DFSADCC0        RW0050B\n./   NUMBER  INSERT=YES,SEQ1=01073200,NEW1=01073201,INCR=01\n         SPACE 3\n***********************************************************************\n*                                                                     *\n*                                                                     *\n         B     EXIT    BYPASS ALL THIS CLB/CTB/CNT STUFF      RW0050B *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSAOS10": {"ttr": 2322, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x19\\x00\\x19\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "HOSKINS"}, "text": "//YA332431 JOB 'EACARBONE.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=YA3324\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  (YA3324.IMA.RECORD(DFSAOS10))  ***\n//DFSAOS10 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSAOS10,LMEMBER=DFSAOS1L,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *   RW0027A   SYS/IWAIT COUNTERS\n./ CHANGE   NAME=DFSAOS10\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 10,SCD=R4,PST=R5  # OF SCANS FOR FILEMARK.     SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 11,SCD=R4,PST=R5  # SEARCHES FOR LAST LOG. REC.SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         EJECT                                                SYS/IWAIT\n         PRINT ON,GEN                                         SYS/IWAIT\n         NARSCD                                               SYS/IWAIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSAOS7S": {"ttr": 2324, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x1d\\x00\\x1d\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "HOSKINS"}, "text": "//YA332431 JOB 'EACARBONE.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=YA3324\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  (YA3324.IMA.RECORD(DFSAOS70))  ***\n//DFSAOS70 EXEC IMSUPDTE,DISPR=SHR,PGMC=IEUASM,\n//   SYMI=SOURCE,SYMO=SOURCE,SP=IMS,LP=IMA,MP=IMA,P=,\n//*  SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSAOS70,LMEMBER=DFSAOS7M,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=SYS1,\n//   ACCT=0\n//U.SYSIN  DD  *   PL69092F\n./ CHANGE   NAME=DFSAOS70\n         CHANGEID  APAR=PL69092,ID=G,PREREQ=0                 @PL69092\n         LA    R12,IOMAWAPT(,R11)   GET W/A ADDRESS           @PL69092\n         ST    R12,IOMATFLE          AND SAVE IN GLOBAL AOMA  @PL69092\n//C.SYSLIB  DD DISP=SHR,DSN=IMA.MACLIB\n//          DD DISP=SHR,DSN=IMA.GENLIB\n//          DD DISP=SHR,DSN=SYS1.MACLIB\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSAOS70": {"ttr": 2326, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "HOSKINS"}, "text": "//YA332431 JOB 'EACARBONE.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=YA3324\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  (YA3324.IMA.RECORD(DFSAOS70))  ***\n//DFSAOS70 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSAOS70,LMEMBER=DFSAOS7L,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=SYS1,\n//   ACCT=0\n//U.SYSIN  DD  *   PL69092F\n./ CHANGE   NAME=DFSAOS70\n         CHANGEID  APAR=PL69092,ID=G,PREREQ=0                 @PL69092\n         LA    R12,IOMAWAPT(,R11)   GET W/A ADDRESS           @PL69092\n         ST    R12,IOMATFLE          AND SAVE IN GLOBAL AOMA  @PL69092\n//C.SYSLIB  DD DISP=SHR,DSN=IMA.MACLIB\n//          DD DISP=SHR,DSN=IMA.GENLIB\n//          DD DISP=SHR,DSN=SYS1.MACLIB\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSAOUEH": {"ttr": 2328, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x08B\\x08B\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 2114, "newlines": 2114, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31UE JOB 'IMSGROUP  SH28205610*110A044         999  3000009037',\n//  NOTIFY=$A1016,\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H\n//*MAIN ORG=LOCAL,CLASS=L\n//NARAOUE0 EXEC IMSUPDTE,DISPR=SHR,\n//  MEMBER=DFSAOUEH,\n//             P=IMA,LOAD='PVT.MODS',\n//* CONDL=0,\n//* XREFC='XREF(FULL)',\n//  SYMI=SOURCETM,SYMO=SOURCETM,ACCT=1,SOUT='*'\n//C.SYSIN  DD *\n         TITLE 'DFSAOUE0    ---   MACROS.'\n         MACRO\n&NAME    CALLIST &X,&WXTRN=YES\n         AIF   ('&WXTRN' EQ 'NO').WXTDUN\n         WXTRN   &X\n.WXTDUN  ANOP\n&NAME    DC    CL8'&X',V(&X)\n         MEND\n         EJECT\n         MACRO\n&NAME    NARUEBUF &COMMENT\nNUECPYBF DSECT\nNUELL    DC    Y(0)\nNUEZZ    DC    Y(0)\nNUECMD   DC    CL4'/CMD'\n         ORG   NUECMD\nNUETXT   DC    CL7'DFS994I'\n         ORG\n         MEND\n         EJECT\n         MACRO\n&NAME    SNAP1LST &N1,&N2,&VERBAGE,&MODE=,&ORG=\n         GBLC  &VERBNAM(20),&VERBTXT(20)\n         GBLA  &I\n         LCLA  &L,&J\n         AIF   ('&MODE' EQ 'MESSAGES').DOMSGS\n.*************************************************************\n         AIF   ('&VERBAGE'(1,1) EQ '').OVVERB\n.*    *********************\n&L       SETA  K'&VERBAGE-2         -2 FOR QUOTES.\n&I       SETA  &I+1\n&VERBNAM(&I) SETC 'SPL&SYSNDX.A'\n&VERBTXT(&I) SETC '&VERBAGE'\n         DC    A(SPL&SYSNDX.A)\n         DC    A(SPL&SYSNDX.A+&L-1)\n.OVVERB  ANOP\n.***********************************************\n         AIF   ('&MODE' EQ 'ADCONS').ADCONS\n         AIF   ('&N1'(1,1) EQ '0').OVDCANM\n.*    *********************\n&N1      DC    A(SPL0000Y)\n&N2      DC    A(SPL0000Z-1)\n         AGO  .OVDCANM\n.*    *********************\n.ADCONS  DC    A(&N1,&N2)\n.OVDCANM ANOP\n.**************************\n         AIF   ('&MODE' NE 'ENDLIST').OVEND\n         ORG   *-4\n         DC    X'80'\n         ORG\n.OVEND   ANOP\n         MEXIT\n.**************************************************************\n.DOMSGS  ANOP\n         AIF   ('&ORG' EQ '').OVADJ\n         CNOPBIGR ORG=&ORG\n.OVADJ   ANOP\n.*******************************\n.LOPMSG  ANOP\n&J       SETA  &J+1\n         AIF   (&J GT &I).DUNMSG\n&VERBNAM(&J) DC   0D'0',CL32&VERBTXT(&J)\n         AGO   .LOPMSG\n.DUNMSG  ANOP\nSPL0000Y DC    0D'0',CL32'NOT AVAILABLE IN THIS DUMP.'\nSPL0000Z EQU   *\n         MEND\n**********************************************************************\n  TITLE 'NARAOUE0 --- INITIALIZATION.'\n**********************************************************************\nDFSAOUE0 CSECT\n**   REGS ON INPUT\n*    R0     A FLAG VALUE\n*          =0  INIT ENTRY FOR THIS MSG; UEHBFLG1=UEH1SEG=X'40' IF R0=0.\n*              IF UEHFLG1=UEH1CPYP=X'20',THEN UEHCPYBF POINTS\n*                                              TO A SYSTEM MESSAGE.\n*              IF UEHFLG1=UEH1CMD=X'10', THEN UEHCPYBF POINTS\n*                                              TO COPY OF ORIG BUFR.\n*          =4  NEITHER FIRST NOR LAST ENTRY; SOMEWHERE IN THE MIDDLE.\n*          =8  LAST ENTRY FOR THIS MSG.\n*         =12=X'0C' ENTRY FOLLOWING REQUEST FOR STORAGE.\n*                    ADDR IS IN UEHUBUFF; =0 IF NONE AVAIL.\n*         =16=X'10' ERROR ENCOUNTERED; COMMAND ABORTED; NO SEG AVAIL.\n*\n*    R1    PTR TO UEHB\n*    R7    PTR TO CTB\n*    R9    PTR TO CLB\n*    R11   PTR TO SCD\n*    R13   SAVE AREA\n*    R14   RETURN\n*    R15   ENTRY POINT\n**   REGS ON EXIT\n*    R0      ADDRESS OF ALT DEST NAME IF RC/R15=0 OR 8; 8BYTES PADDED.\n*            /OR/  SIZE OF STORAGE REQUEST IF RC/R15=16(X'10')\n*    R1      ADDRESS OF SEG TO ISRT TO ALT DEST IF R15=0 OR 8.\n*    R15  =0 ISRT SEG TO ALT DEST; R0-> DEST; R1-> SEGMENT\n*         =4 IGNORE THIS SEG ONLY.\n*         =8 PROC COMPLETE; A SEGMENT MAY BE ISRT'ED.\n*        =12 PROC COMPLETE; CANCEL ALL ISRT'ED SEGMENTS.\n*        =16 REQUEST FOR STORAGE  (R0)=SIZE-OF-AREA-TO-BE-GOTTEN.\n*               NEXT ENTRY WILL HAVE (R0)=12.\n*        =20\n         PRINT   GEN\n*        CHANGEID NAME=DFSAOUE,BASE=12\n*        CHANGEID IDEND=YES\n         PROLOGUE SAVE=*PRECHN\n         REQUATE\n         CEQUATE\n         PRINT   GEN\nD#E      EQU   R0        IN SRDUP   = REG FOR DIVIDE - EVEN MBR OF PAIR\nD#O      EQU   D#E+1     IN SRDUP   = REG FOR DIVIDE - ODD  MBR OF PAIR\nR#L      EQU   R1        IN SRLOGIT = PTR TO LTERM NAME.\nM#T      EQU   R1        IN SRTIMSTP= PTR TO \"TO\"   AREA.\nM#F      EQU   R2        IN SRTIMSTP= PTR TO \"FROM\" AREA.\n*B#F     EQU   R2        IN         = PTR TO FEATURES BASE.\nC#A      EQU   R1        IN SRDUP   = PTR TO A COMPARAND.\nC#B      EQU   R2        IN SRDUP   = PTR TO A COMPARAND.\nP#C      EQU   R2        IN SRCALL  = PTR TO CALL-LIST.\nB#U      EQU   R3        BASE FOR THE UEHB.\nB#C      EQU   R4        BASE FOR THE MSG/CMD BUFFER.\nP#B      EQU   R5        IN SRTIMSTP= PTR TO THE BLANK SPOT (C/B = M#F)\nP#F      EQU   R5        IN FGFEAT  = PTR TO FEATURE DBL WORD.\nE#M      EQU   R6        IN SRTIMSTP= LENGTH TO EXECUTE IN MACH CODE.\nB#SEC    EQU   R9        THE SECOND BASE REGITER.\nB#S      EQU   R11       *** IDENTITY W/ IBM AT TIME OF CALL.\nL##      EQU   R14       LINK TO ALL SUB ROUTINES.\nR#X      EQU   R14       WORKING REGISTER --- SHORT TERM FOR INDEXING.\nR#BALC   EQU   R14       BRANCH AND LINK CONDITIONAL.\nR#W      EQU   R15       WORKING REGISTER --- SHORT TERM FOR MISC.\n         STM   R0,R15,STM015\n         LA    B#SEC,4095(R12)\n         LA    B#SEC,1(B#SEC)\n         USING DFSAOUE0+4096,B#SEC\n         LR    B#U,R1\n         USING UEHB,B#U\n         USING SCD,B#S\n         USING NUECPYBF,B#C\n**************************************************\n         ICM   R15,X'0F',=X'01000000'     PRETEND 31-BIT MODE.       XA\n         LA    R15,0(R15)                 TRY TO CLEAR IT.           XA\n         LTR   R15,R15                    Q. WAS IT CLEARED.         XA\n         BZ    AMODE31X                     YES; IS 24, NOT 31.      XA\n         OI    AMODE31F,X'80'               NO;  IS 31-BIT. SET FLAG.XA\n         LA    R15,AMODE31X               RIG POINTER TO CONTINUE.   XA\n         BSM   0,R15                      SET AMODE=24.              XA\nAMODE31X #                                                           XA\n**************************************************\n         BAL   L##,SRLOGIT\n         L     R#W,STMR0\n         B     *+4(R#W)\n         B     ENTRY0\n         B     ENTRY4\n         B     ENTRY8\n         B     ENTRY12\n         B     ENTRY16\nAMODE31F DC    A(0)                                                  XA\n**********************************************************************\n  TITLE 'NARAOUE0 --- ENTRY0; INITIAL ENTRY FOR THIS PROCESS.'\n**********************************************************************\n*    R0     A FLAG VALUE\n*          =0  INIT ENTRY FOR THIS MSG; UEHBFLG1=UEH1SEG=X'40' IF R0=0.\n*              IF UEHFLG1=UEH1CPYP=X'20',THEN UEHCPYBF POINTS\n*                                              TO A SYSTEM MESSAGE.\n*              IF UEHFLG1=UEH1CMD=X'10', THEN UEHCPYBF POINTS\n*                                              TO COPY OF ORIG BUFR.\nENTRY0   #\n         TM    UEHBFLG1,UEH1CPYP\n         BO    E0MSG\n         TM    UEHBFLG1,UEH1CMD\n         BO    E0CMD\n         MVC   RETCODE,=A(12)\n         B     EXITVV\n**********************************************************************\n  TITLE 'NARAOUE0 --- ENTRY4; MIDDLE ENTRY FOR THIS PROCESS.'\n**********************************************************************\n*    R0     A FLAG VALUE\n*          =4  NEITHER FIRST NOR LAST ENTRY; SOMEWHERE IN THE MIDDLE.\nENTRY4   #\n         TM    UEHBFLG1,UEH1CPYP\n         BO    E4MSG\n         TM    UEHBFLG1,UEH1CMD\n         BO    E4CMD\n         MVC   RETCODE,=A(08)\n         MVC   RET#R0,=A(00)\n         MVC   RET#R1,=A(00)\n         B     EXITVV\n**********************************************************************\n  TITLE 'NARAOUE0 --- ENTRY8; LAST ENTRY FOR THIS PROCESS.'\n**********************************************************************\n*    R0     A FLAG VALUE\n*          =8  LAST ENTRY FOR THIS MSG.\nENTRY8   #\n         TM    UEHBFLG1,UEH1CPYP\n         BO    E8MSG\n         TM    UEHBFLG1,UEH1CMD\n         BO    E8CMD\n         MVC   RETCODE,=A(08)\n         MVC   RET#R0,=A(00)\n         MVC   RET#R1,=A(00)\n         B     EXITVV\n**********************************************************************\n  TITLE 'NARAOUE0 --- ENTRY12; RETURN FROM GET-SPACE.'\n**********************************************************************\n*    R0     A FLAG VALUE\n*         =12=X'0C' ENTRY FOLLOWING REQUEST FOR STORAGE.\n*                    ADDR IS IN UEHUBUFF; =0 IF NONE AVAIL.\nENTRY12  #\n         MVC   RETCODE,=A(12)\n         B     EXITVV\n**********************************************************************\n  TITLE 'NARAOUE0 --- ENTRY16; ERROR.'\n**********************************************************************\n*    R0     A FLAG VALUE\n*         =16=X'10' ERROR ENCOUNTERED; COMMAND ABORTED; NO SEG AVAIL.\nENTRY16  #\n         MVC   RETCODE,=A(12)\n         B     EXITVV\n**********************************************************************\n  TITLE 'NARAOUE0 --- RETURN '\n**********************************************************************\nEXITVV   BAL   L##,SRSNAP\nEXITXX   STM   R0,R15,EXITREGS\n***      ***********************\n         TM    AMODE31F,X'80'      Q. HOW WAS AMODE WHEN WE ENTERED. XA\n         BZ    AMODE31A              AMODE WAS =24; SKIP & IGNORE.   XA\n         L     R14,=A(X'80000000'+AMODE31A)  RIG POINTER TO CONTINU. XA\n         BSM   0,R14                 AMODE WAS =31; SET IT BACK.     XA\nAMODE31A #                                                           XA\n**********************************************************************\n*&\u00eb%$#   BAL   L##,SRSNAP              **&&%%$$##**\n         L      R0,RET#R0\n         L      R1,RET#R1\n         L     R15,RETCODE\n         EPILOGUE  RETURN=(R0,R1,R15)\n**********************************************************************\n  TITLE 'NARAOUE0 --- HANDLE AN OUTPUT MESSAGE.'\n**********************************************************************\n** FORMAT OF AREA POINTED TO BY UEHCPYBF\n*   LLZZ,AL1(CC),'MESSAGE',AL1(CC),XL20'WORKAREA'\n*   LL  INCLUDE ALL BUT THE LAST 20 BYTES.\n*   CC  IS OPTIONAL CARRIAGE CONTROL\n*   WORKAREA CONTENTS MOST LIKELY ARE GARBAGE.\n         PRINT NOGEN\nE0MSG    #\nE4MSG    #\nE8MSG    #\n         L     R#W,UEHCPYBF\n         MVC   MSGCPY9,0(R#W)           COPY MOST RECENT  BUFFER.\n         CLC   MSGCPY0,MSGCPY1          Q. IS THE \"FIRST\" BUFFER FULL.\n         BNE   *+4+6                      YES, SKIP; DO NOT   RE-FILL.\n         MVC   MSGCPY1,0(R#W)             NO,  COPY INTO  BUFFER.\n         BAL   L##,SRSNAP\n         XC    MSGMSGPT,MSGMSGPT        CLEAR \"MESSAGE TO SEND\" PTR.\n         L     B#C,UEHCPYBF\n         BAL   L##,SRDUPLIC             CHECK FOR DUPES & NEAR-DUPES.\n         BAL   L##,SRTIMSTP             ADD TIME STAMP IF NOT PRESENT.\n         CLC   =C'DFS994',NUETXT        IF MSG-DFS994,\n         BALC  EQ,MSG994,R=L##            THEN PROCESS NUC CHKPTS.\n         CLC   =C'DFS681',NUETXT        IF MSG-DFS681,\n         BALC  EQ,MSG681,R=L##            THEN PROCESS BMP CHKPTS.\n         CLC   =C'DFS0488',NUETXT       IF MSG-DFS488,\n         BALC  EQ,MSG488,R=L##            THEN PROCESS CMD COMPLETED.\n         CLC   =C'IM0',NUETXT           IF MSG-IM0---- FROM B&B'S.\n         BALC  EQ,MSGIF0,R=L##            THEN B&B'S IMF MESSAGE.\n         CLC   =C'DFS551',NUETXT        IF MSG-DFS551,\n         BALC  EQ,MSG551,R=L##            THEN PROCESS MSG/BMP STA/STO.\n         CLC   =C'DFS552',NUETXT        IF MSG-DFS552,\n         BALC  EQ,MSG551,R=L##            THEN PROCESS MSG/BMP STA/STO.\n         OC    MSGMSGPT,MSGMSGPT        Q. ANY MESSAGE TO SEND.\n         BNZ   MSGEX08R                   YES; RIG TO SEND IT.\n         MVC   RETCODE,=A(04)             NO; EXIT.\n         B     EXITXX\n*******************\nMSGEX08R L     R1,MSGMSGPT              POINT TO MSG TO SEND.\n         LA    R0,=CL8'MASTER'          POINT TO DEST NAME.\n         ST    R0,RET#R0                STO\n         ST    R1,RET#R1                STO\n         MVC   RETCODE,=A(00)           INDICATE NEED TO SEND MSG.\n         B     EXITXX\n*******************************\nMSGMSGPT DC    A(0)\n**********************************************************************\n  TITLE 'NARAOUE0 --- MESSAGE \"DFS994...\".'\n**********************************************************************\n*-* IF NUC CHKPT MESSAGE\n*-*   IF FIRST ONE\n*-*     THEN CALL THE INITIALIZATION ROUTINE LIST.\nMSG994   BENT\n         AP    MSG994NN,=P'1'             COUNT CHECKPOINTMSGS.\n         CP    MSG994NN,=P'1'             Q. IS THIS THE FIRST ONE.\n         BE    MSG994#1                     YES; THEN DO SOME INIT.\n         B     MSG994ZZ                     NO; EXIT.\nMSG994#1 #\n         DLLINK (M,4),'DFSAOUE0/RST=>',(B#C),*WTP\n         DLLINK  M,*WTO\n         LA    P#C,CALLIST1       POINT TO THE INITIALIZATION LIST.\n         BAL   L##,SRCALIST       CALL THE FIND-AND-CALL ROUTINE.\nMSG994ZZ BEXIT\nMSG994NN DC    PL4'0'\n**********************************************************************\n  TITLE 'NARAOUE0 --- MESSAGE \"DFS681...\".'\n**********************************************************************\n*-* IF BMP CHKPT MESSAGE\n*-*   IF THE FEAT=12 (DECIMAL) IS SET ON.\n*-*     THEN IGNORE IT BY SETTING ITS LENGTH TO ZERO.\nMSG681   BENT\n         AP    MSG681NN,=P'1'             COUNT BMP CHKPT-MSGS.\n         CP    MSG681NN,=P'4'             Q. IS THIS A LATE ONE.\n         BH    MSG681#1                     YES; THEN SKIP THE WTP.\n         DLLINK (M,4),'DFSAOUE0/681=>',(B#C),*WTP\nMSG681#1 #\n         PUSH  PRINT\n         PRINT GEN\n         NARSCDF B#F,NARSCFB0      GET  FEATURES BASE.\n         TM    012*8(B#F),X'80'    Q. FEATURE #12 INFORCE.\n         BZ    MSG681ZZ              NO; IGNORE; CONTINUE NORMALLY.\n         POP   PRINT\n         XC    NUELL,NUELL         SET LENGTH TO ZERO TO IGNORE THIS.\nMSG681ZZ BEXIT\nMSG681NN DC    PL4'0'\n**********************************************************************\n  TITLE 'NARAOUE0 --- MESSAGE \"DFS488...\".'\n**********************************************************************\n*-* IF CMD COMPLETED MSG.\n*-*   IF THE FEAT=13 (DECIMAL) IS SET ON.\n*-*     THEN IGNORE IT BY SETTING ITS LENGTH TO ZERO.\nMSG488   BENT\n         AP    MSG488NN,=P'1'             COUNT COMMAND COMPLETED MSGS.\n         CP    MSG488NN,=P'4'             Q. IS THIS A LATE ONE.\n         BH    MSG488#1                     YES; THEN SKIP THE WTP.\n         DLLINK (M,4),'DFSAOUE0/488=>',(B#C),*WTP\nMSG488#1 #\n         PUSH  PRINT\n         PRINT GEN\n         NARSCDF B#F,NARSCFB0      GET  FEATURES BASE.\n         TM    013*8(B#F),X'80'    Q. FEATURE #13 INFORCE.\n         BZ    MSG488ZZ              NO; IGNORE; CONTINUE NORMALLY.\n         POP   PRINT\n         XC    NUELL,NUELL         SET LENGTH TO ZERO TO IGNORE THIS.\nMSG488ZZ BEXIT\nMSG488NN DC    PL4'0'\n**********************************************************************\n  TITLE 'NARAOUE0 --- MESSAGES \"IM0....\" FROM B && B''S IMF.'\n**********************************************************************\n*-* IF  IM0----       MSG.\n*-*  IF IM0203        MSG.\n*-*   IF THE FEAT=14 (DECIMAL) IS SET ON.\n*-*     THEN IGNORE IT BY SETTING ITS LENGTH TO ZERO.\nMSGIF0   BENT\n         CLC   =C'IM0203',NUETXT       IF MSG-IM0203,\n         BE    MSGIF0#0                  THEN SUPPRESS.\n         B     MSGIF0ZZ                 ELSE SKIP AND ALLOW IT.\nMSGIF0#0 AP    MSGIF0NN,=P'1'             COUNT B & B MSGS.\n         CP    MSGIF0NN,=P'4'             Q. IS THIS A LATE ONE.\n         BH    MSGIF0#1                     YES; THEN SKIP THE WTP.\n         DLLINK (M,4),'DFSAOUE0/IM0=>',(B#C),*WTP\nMSGIF0#1 #\n         PUSH  PRINT\n         PRINT GEN\n         NARSCDF B#F,NARSCFB0      GET  FEATURES BASE.\n         TM    014*8(B#F),X'80'    Q. FEATURE #14 INFORCE.\n         BZ    MSGIF0ZZ              NO; IGNORE; CONTINUE NORMALLY.\n         POP   PRINT\n         XC    NUELL,NUELL         SET LENGTH TO ZERO TO IGNORE THIS.\nMSGIF0ZZ BEXIT\nMSGIF0NN DC    PL4'0'\n**********************************************************************\n  TITLE 'NARAOUE0 --- MESSAGES \"DFS551\" FOR MSG/BMP START/STOP.'\n**********************************************************************\n*-* IF MSG/BMP START/STOP MSG\n*-*  CALL NARAOUP0 TO DO THE WORK.\nMSG551   BENT\n         AP    MSG551NN,=P'1'             COUNT THESE MSGS.\n         CP    MSG551NN,=P'4'             Q. IS THIS A LATE ONE.\n         BH    MSG551#1                     YES; THEN SKIP THE WTP.\n         DLLINK (M,4),'DFSAOUE0/551=>',(B#C),*WTP\nMSG551#1 #\n         XC    MSG551MG,MSG551MG                 CLEAR MESSAGE PTR.\n         CALL  NARAOUP0,((B#S),(B#U),MSG551MG),VL\n**************\n         L     R#W,=A(PST551FF)                  PTR TO SNAP FLAG.\n         OC    0(4,R#W),0(R#W)                   Q. ANY NEED TO SNAP.\n         BZ    MSG551S                             NO; SKIP.\n         AP    SRSNPNNN,=P'4'                           BUMP CNTR.\n         BAL   L##,SRSNAP                          YES; SNAP NOW.\nMSG551S  #\n**************\n         OC    MSG551MG,MSG551MG                 Q. ANY MESSAGE.\n         BZ    MSG551Z                             NO; SKIP.\n         MVC   MSGMSGPT,MSG551MG                   YES; COPY TO CALLER.\nMSG551Z  BEXIT\nMSG551MG DC    A(0)\n         BEXIT\nMSG551NN DC    PL4'0'\n**********************************************************************\n  TITLE 'NARAOUE0 --- MESSAGE DUPLICATES.'\n**********************************************************************\n*-* IF THIS MESSAGE LOOKS A LOT LIKE THE LAST ONE.\n*-*   IF THE FEAT=11 (DECIMAL) IS SET ON.\n*-*     THEN IGNORE IT BY SETTING ITS LENGTH TO ZERO.\n         LCLC  &SRDUL\n&SRDUL   SETC  '100'\nSRDUPLIC BENT\n         AGO   .OVRDUPE\n         NARSCDF B#F,NARSCFB0      GET  FEATURES BASE.\n         TM    011*8(B#F),X'80'    Q. FEATURE #11 INFORCE.\n         BZ    SRDUPEZZ              NO; IGNORE; EXIT.\n       AGO   .OVRDUPE     *&\u00eb%$#@*&\u00eb%$#@\n         XC    SRDUPFLG,SRDUPFLG        CLEAR \"DUPE\" FLAG.\n         LH    E#M,NUELL                GET LENGTH.\n         CH    E#M,SRDUPREV             Q. SAME AS PREV MSG'S LEN.\n         BNE   SRDUPDIF                   NO; EXIT. NO CHANCE FOR DUPE.\n         XC    SRDUCURR,SRDUCURR        CLEAR \"CURR\" SPACE.\n         CH    E#M,=Y(L'SRDUCURR)       Q. IS IT TOO LONG.\n         BC    GT,*+4+4                   NO; USE IT.\n         LH    E#M,=Y(L'SRDUCURR)         YES; CUT IT OFF.\n         BCTR  E#M,0                    MACHCODE.\n         EX    E#M,SRDUMVC              MOVE MOST OF THIS MESSAGE.\n*************************************\n         ZAP   SRDUPCRD,=P'0'           ZERO THE DUPE COUNTER.\n         ZAP   SRDUPCDF,=P'0'           ZERO THE DIFF COUNTER.\n         LA    C#A,SRDUPREV-1           POINT TO THE\n         LA    C#B,SRDUCURR-1                TWO COMPARANDS.\nSRDULOOP LA    C#A,1(C#A)               BUMP THE\n         LA    C#B,1(C#B)                    TWO COMPARAND POINTERS.\n         C     C#B,=A(SRDUCURR+L'SRDUCURR)   Q. ARE WE THRU.\n         BC    GE,SRDUDUN                      YES; EXIT.\n         CLC   0(1,C#A),0(C#B)          Q. ARE THE CHARS ALIKE.\n         BNE   SRDUPDIF                   NO; THEY ARE DIFFERENT.\n         CLI   0(C#A),X'00'             Q. ARE THE CHARS X'00'.\n         BE    SRDULOOP                   YES; TREAT AS A NULL; LOOP.\n         CLI   0(C#A),X'40'             Q. ARE THE CHARS X'40'.\n         BE    SRDULOOP                   YES; TREAT AS A NULL; LOOP.\n         AP    SRDUPCRD,=P'1'           CHAR A NON-NULL REAL DUPE.\n         B     SRDULOOP\nSRDUPDIF AP    SRDUPCDF,=P'1'           CHAR IS DIFFERENT.\n         B     SRDULOOP\n****************\n         ZAP   SRDUPCTL,SRDUPCDF        NBR OF DIFF CHRS\n         SP    SRDUPCTL,SRDUPCRD         + NBR REAL DUPES = TTL REAL.\n         LA    R#W,100\n         CVB   D#O,SRDUPCRD             DUPE REAL\n         M     D#E,R#W                    * 100   = 100*REAL DUPE.\n         CVB   R#W,SRDUPCTL             TOTAL REAL.\n         D     D#E,R#W                  D#O= PERCENT OF DUPE IN TOTAL.\n         C     D#O,SRDUPRCT             Q. ARE THERE ENOUGH DUP CHRS.\n         BC    GT,SRDUPYES                YES; TREAT AS DUPE MESSAGE.\n*********************\n*   THIS MESSAGE IS NOT LIKE THE PREV MESSAGE.\n*    IF THE PREVIOUS MESSAGE WAS LIKE THE ONE BEFORE IT,\n*      THEN WE WANT TO INDICATE HOW MANY WERE SUPPRESSED.\nSRDUPDIF CP    SRDUPCTR,SRDUPCLM        Q. HAVE DUPES JUST GONE BY.\n         BC    LT,SRDUPDFF                NO; EXIT.\n*        BAL ???                          YES; ADD COUNT TO THIS MSG.\nSRDUPDFF ZAP   SRDUPCTR,=P'0'           ZERO THE DUPE MESSAGE CTR.\n         BE    SRDUPEZ5                 EXIT.\n*********************\n*   THIS MESSAGE IS LIKE THE PREVIOUS MESSAGE.\n*    IF THERE HAVE BEEN ENOUGH OF THEM IN A ROW,\n*      THEN WE WANT TO SUPPRESS THIS ONE.\nSRDUPYES OI    SRDUPFLG,X'01'           SET THE FLAG.\n         AP    SRDUPCTR,=P'1'           BUMP THE DUPE MESSAGE CTR.\n         CP    SRDUPCTR,SRDUPCLM        Q. HAVE ENOUGH DUPE MESSAGES.\n         BC    LT,SRDUPEZ5                NO; JUST A FEW; LET 'EM GO.\n         XC    NUELL,NUELL                YES; SUPPRESS THIS ONE.\n*************************************\nSRDUPEZ5 MVC   SRDUPREV,SRDUCURR\n.OVRDUPE ANOP\nSRDUPEZZ BEXIT\n******************************************************\nSRDUPFLG DC    XL1'0'\nSRDUPCLM DC    PL2'4'\nSRDUPRCT DC    A(75)   PERCENT OF DUPES IN TTL REAL TO MAKE MSG A DUPE.\nSRDUPCTL DC    PL4'0'\nSRDUPCRD DC    PL4'0'\nSRDUPCDF DC    PL4'0'\nSRDUPCTR DC    PL4'0'\nSRDUMVC  MVC   SRDUCURR(0),NUECPYBF\nSRDUPREV DC    XL&SRDUL'0'\nSRDUCURR DC    XL&SRDUL'0'\n**********************************************************************\n  TITLE 'NARAOUE0 --- HANDLE AN  INPUT COMMAND.'\n**********************************************************************\n** FORMAT OF AREA POINTED TO BY UEHCPYBF\n*     UNKNOWN AT THIS POINT ??\n** FORMAT OF AREA POINTED TO BY UEHECMD\n*  AL1(F1),CL3'CMD',AL1(NK),AL1(F2),CL3'KEY',AL1(F2..........,C'.'\n*  AL1(F1),CL3'CMD',AL1(NK),AL1(F2),AL1(LTH),AL1(DLM),AL1(F2.,C'.'\n*      F1 = X'FE'  IF OK\n*         = X'FC'  IF A BAD PARM\n*      F2 = X'FC' ==> FOLLOWING PARM IS IN ERROR\n*         = X'FF' ==> FOLLOWING IS A 3-BYTE KEYWORD\n*         = X'FE' ==> FOLLOWING IS A 1-BYTE LENGTH THEN A PARM\n*         = C'('  ==> FOLLOWING IS A 1-BYTE LENGTH THEN A PSWD\n*      DLM = THE ENTERED DELIMITER (E.G., COMMA SPACE )\nE0CMD    #\nE4CMD    #\nE8CMD    #\n         L     R#W,UEHCPYBF\n         MVC   CMDCPYW,0(R#W)           COPY MOST RECENT  BUFFER.\n         MVC   CMDCPY9,0(R#W)           COPY MOST RECENT  BUFFER.\n         CLC   CMDCPY0,CMDCPY1          Q. IS THE \"FIRST\" BUFFER FULL.\n         BNE   *+4+6                      YES, SKIP; DO NOT   RE-FILL.\n         MVC   CMDCPY1,0(R#W)             NO,  COPY INTO  BUFFER.\n         L     R#W,UEHECMD\n         MVC   ECMDCPY9,0(R#W)          COPY MOST RECENT  BUFFER.\n         CLC   ECMDCPY0,ECMDCPY1        Q. IS THE \"FIRST\" BUFFER FULL.\n         BNE   *+4+6                      YES, SKIP; DO NOT   RE-FILL.\n         MVC   ECMDCPY1,0(R#W)            NO,  COPY INTO  BUFFER.\n         BAL   L##,SRSNAP\n         XC    CMDMSGPT,CMDMSGPT\n*        *****\n         CLC   CMDCPYW(2),=Y(L'CMDCPYW)\n         BC    LT,*+4+6\n         MVC   CMDCPYW(2),=Y(L'CMDCPYW)\n*        *****\n         L     B#C,UEHCPYBF\n         MVC   RETCODE,=A(04)            SET RC= FOR NO NEW MSG NOW.\n         CLC   NUECMD,=C'/LOC'\n         BALC  EQ,CMDLOC,R=L##\n         CLC   NUECMD,=C'/LOG'\n         BALC  EQ,CMDLOG,R=L##\n         CLC   NUECMD,=C'/STA'\n         BALC  EQ,CMDSTA,R=L##\n         CLC   NUECMD,=C'/CHE'\n         BALC  EQ,CMDCHE,R=L##\n         CLC   NUECMD,=C'/RCL'\n         BALC  EQ,CMDRCL,R=L##\n         CLC   NUECMD,=C'/SIG'\n         BALC  EQ,CMDSIG,R=L##\n         CLC   NUECMD,=C'/DIS'\n         BALC  EQ,CMDDIS,R=L##\n         OC    CMDMSGPT,CMDMSGPT        Q. ANY MESSAGE TO SEND.\n         BNZ   CMDEX08R                   YES; RIG TO SEND IT.\n         B     EXITXX\n*******************\nCMDEX08R L     R1,CMDMSGPT              POINT TO MSG TO SEND.\n         LA    R0,=CL8'MASTER'          POINT TO DEST NAME.\n         ST    R0,RET#R0                STO\n         ST    R1,RET#R1                STO\n         MVC   RETCODE,=A(00)           INDICATE NEED TO SEND MSG.\n         B     EXITXX\n******************************************\nCMDMSGPT DC    A(0)\nCMDPT1   DC    A(CMDPT2)\nCMDPT2   DC    A(CMDCPYW) > UEHCPYBF\n**********************************************************************\n  TITLE 'NARAOUE0 --- SUBROUTINES '\n**********************************************************************\n*-* IF THIS COMMAND IS /LOCK\nCMDLOC   BENT\n         DLLINK (M,4),'  ',*DATETIME,' LOCK CMD =>',(B#C),*WTP\n         BEXIT\n************************\n**\n************************\n*-* IF THIS COMMAND IS /LOG\n*-*   IF THE /DYN  KEYWORD IS PRESENT\n*-*     THEN CALL  NARDYNT0\n*-*   IF THE /FLAG KEYWORD IS PRESENT\n*-*          /FFF   OR  /FFFF\n*-*     THEN CALL  NARSOUF0\nCMDLOG   BENT\n         DLLINK (M,4),'  ',*DATETIME,' LOG  CMD =>',(B#C),*WTP\n         BAL   L##,SRKEYFLG\n         CLI   PMDYN,0\n         BNE   CMDLDYN\n         OC    PMFLG(4),PMFLG3\n         OC    PMFLG(4),PMFLG4\n         CLI   PMFLG,0\n         BNE   CMDLFLAG\nCMDLOGX9 BEXIT\n************************\n         PUSH  PRINT\n         PRINT NOGEN\nCMDLFLAG CALL  NARAOUF0,((B#S),(B#U)),VL\n         B     CMDLOGX9\n*      *************\n**\n*      *************\n         WXTRN NARDYNT0\nCMDLDYN  #\n*&\u00eb%$#@  CALL  NARDYNT0,((B#S),(B#U)),VL\n         POP   PRINT\n         B     CMDLOGX9\n************************\n**\n************************\n*-* IF THIS COMMAND IS /LOG\n*-*   IF THE /TRAN KEYWORD IS PRESENT\n*-*          /TTT   OR  ETC.\n*-*     IF THE .PROG KEYWORD IS PRESENT\n*-*            .PPP OR  ETC.\n*-*       THEN CALL  NARAOUT0 TO START THE PMG THAT GOES WITH THE TRAN.\nCMDSTA   BENT\nCMDSTA10 BAL   L##,SRKEYFLG\n         OC    PMTTT(4),PMTTT2      \"OR\" TOGETHER ALL OF THE\n         OC    PMTTT(4),PMTTT3           ALIASES FOR \"TRAN\".\n         OC    PMTTT(4),PMTTT4\n         OC    PMTTT(4),PMTTT5\n         CLI   PMTTT,0\n         BE    CMDSTAT9\n         OC    PMPPP(4),PMPPP2      \"OR\" TOGETHER ALL OF THE\n         OC    PMPPP(4),PMPPP3           ALIASES FOR \"PROG\".\n         OC    PMPPP(4),PMPPP2A\n         CLI   PMPPP,0\n         BE    CMDSTAT9\n         XC    CMDSTAMG,CMDSTAMG                 CLEAR MESSAGE PTR.\n         CALL  NARAOUT0,((B#S),(B#U),CMDSTAMG),VL\n         OC    CMDSTAMG,CMDSTAMG                 Q. ANY MESSAGE.\n         BZ    CMDSTAT9                            NO; SKIP.\n         MVC   CMDMSGPT,CMDSTAMG                   YES; COPY TO CALLER.\nCMDSTAT9 BEXIT\nCMDSTAMG DC    A(0)\n************************\n**\n************************\n*-* IF CHKPT COMMAND\n*-*   IF A SHUTDOWN TYPE\n*-*     THEN CALL THE TERMINATION    ROUTINE LIST.\nCMDCHE   BENT\nCMDCHE10 BAL   L##,SRKEYFLG\n         CLI   PMFRE,0\n         BNE   CMDCHE20\n         CLI   PMDPQ,0\n         BNE   CMDCHE20\n         CLI   PMPUR,0\n         BNE   CMDCHE20\n         B     CMDCHE90\nCMDCHE20 #\n         DLLINK (M,4),'DFSAOUE0/SHUT=>',(B#C),*WTP\n         LA    P#C,CALLIST2       POINT TO THE TERMINATION LIST.\n         BAL   L##,SRCALIST       CALL THE FIND-AND-CALL ROUTINE.\n         AP    SRSNPNNN,=P'30'    BUMP CTR TO GET AT LEAST N MORE.\n         SP    SRLOGNNN,=P'100'   DECR CTR TO GET AT LEAST N MORE.\nCMDCHE90 BAL   L##,SRSNAP\n         BEXIT\n************************\n**\n************************\n*-* IF /RCL  COMMAND\n*-*   IF FEATURE SET ON\n*-*     THEN RIG RC=12 TO  NOT GET     RESPONSE TO THIS COMMAND.\n*-*      AND TO SUPPRESS IMF'S GETTING RESPONSE TO THIS COMMAND.\nCMDRCL   BENT\n         NARSCDF B#F,NARSCFB0      GET  FEATURES BASE.\n         TM    017*8(B#F),X'80'    Q. FEATURE     INFORCE.\n         BZ    CMDRCL9W              NO; CONTINUE NORMALLY.\n         MVC   RETCODE,=A(12)        YES; SET RC=12 TO IGNORE RESPONSE\nCMDRCL9W BEXIT\n************************\n**\n************************\n*-* IF /SIG  COMMAND\n*-*   IF FEATURE SET ON\n*-*     THEN RIG RC=12 TO  NOT GET     RESPONSE TO THIS COMMAND.\n*-*      AND TO SUPPRESS IMF'S GETTING RESPONSE TO THIS COMMAND.\nCMDSIG   BENT\n         NARSCDF B#F,NARSCFB0      GET  FEATURES BASE.\n         TM    018*8(B#F),X'80'    Q. FEATURE     INFORCE.\n         BZ    CMDSIG9W              NO; CONTINUE NORMALLY.\n         MVC   RETCODE,=A(12)        YES; SET RC=12 TO IGNORE RESPONSE\nCMDSIG9W BEXIT\n************************\n**\n************************\n*-* IF /DIS  COMMAND\n*-*  IF NOT ENTERED FROM THE MASTER.\n*-*   IF COMMAND DOES NOT HAVE .JJJ IN IT.\n*-*    IF FEATURE SET ON\n*-*     THEN RIG RC=12 TO  NOT GET     RESPONSE TO THIS COMMAND.\n*-*      AND TO SUPPRESS IMF'S GETTING RESPONSE TO THIS COMMAND.\nCMDDIS   BENT\n         CLC   SRLOGNAM,=CL8'MASTER' Q. IS THIS THE MASTER.\n         BE    CMDDIS9W                YES; SKIP. LET RC= STAND.\n         CLC   SRLOGNAM,=CL8'WTOR'   Q. IS THIS THE CONSOLE.\n         BE    CMDDIS9W                YES; SKIP. LET RC= STAND.\nCMDDIS10 BAL   L##,SRKEYFLG\n         OC    PMDIS(4),PMDIS2      \"OR\" TOGETHER ALL OF THE\n         OC    PMDIS(4),PMDIS3           ALIASES FOR DIS/LOG/JRNL.\n         CLI   PMDIS,0             Q. DO WE WANT IT LOGGED.\n         BNE   CMDDIS9W              YES; SKIP. LET RC= STAND.\n         NARSCDF B#F,NARSCFB0      GET  FEATURES BASE.\n         TM    019*8(B#F),X'80'    Q. FEATURE     INFORCE.\n         BZ    CMDDIS9W              NO; CONTINUE NORMALLY.\n         MVC   RETCODE,=A(12)        YES; SET RC=12 TO IGNORE RESPONSE\nCMDDIS9W BEXIT\n************************\n**\n************************\n**********************************************************************\n  TITLE 'NARAOUE0 --- SUBROUTINES '\n**********************************************************************\n***  S/R TO FIND THE KEYWORD FLAGS.\nSRKEYFLG BENT\n         TR   CMDCPYW+4(L'CMDCPYW-4),TABLEC  SET CNTRL CHARS TO BLANKS.\n         ST   R13,SRSAVEAR+04        SET HI-SAVE PTR IN NEW SAVE-AREA.\n         LA   R13,SRSAVEAR                 PT TO NEW SAVE AREA FOR S/R.\n         CALL KEYFLAGS,(CMDPT1,KEYWORDS)   S/R WILL FORE & BACK CHAIN.\n         L    R13,04(R13)                  RESTORE SAVE-SET POINTER.\n         BEXIT\n**********************************************************************\n  TITLE 'NARAOUE0 --- SUBROUTINES '\n**********************************************************************\n*** SUB-ROUTINE TO PUT DATE INTO MESSAGE IF ONE NOT ALREADY THERE.\n*-*  IF \"DFS\" NEAR FRONT OF MESSAGE   /AND/\n*-*    IF A BLANK SOON THEREAFTER       /AND/\n*-*      IF NO COLON \":\"  X'7D' SOON      /AND/\n*-*        THEN INSERT A TIME STAMP OF THE FORM HH-MM-SS\n*                                          AT THE SPOT OF THE BLANK.\n*    ELSE EXIT WITHOUT ANY CHANGE.\n*\n***  MSG IS SEPARATED INTO TWO PARTS; FRONT PART & BACK PART.\n*     FRONT PART IS LEFT INTACT.\n*     BACK  PART IS COPIED TO A LOCAL /DC/.\n*     OUR STAMP IS INSERTED AFTER FRONT PART.\n*     BACK  PART IS COPIED TO ORIG BUFR AFTER OUR STAMP.\n*     LENGTH IS CHANGED TO REFLECT ADDED STAMP.\n*\n* W-A-R-N-I-N-G    ----------\n*   STRANGE MESSAGES MAY RESULT IF LENGTH .GT. \"SRTILEN\"\n*\nSRTIMSTP BENT\n         LA    R#W,NUETXT-1            START OF TEXT PRE-DECRMTD.\n         LA    R#X,10                  DEPTH TO SCAN.\nSRTILOP1 LA    R#W,1(R#W)              BUMP SCAN PTR.\n         CLC   =C'DFS',0(R#W)          Q. IS SACRED PREFIX PRESENT.\n         BE    SRTIDFS                   YES, OK.\n         BCT   R#X,SRTILOP1              NO, LOOP.\n         B     SRTIEXIT                  NO, EXHAUSTED; EXIT.\n**************************\nSRTIDFS  LA    R#X,10                  DEPTH TO SCAN.\nSRTILOP2 LA    R#W,1(R#W)              BUMP SCAN PTR.\n         CLI   0(R#W),X'40'            Q. ANY BLANK TO BE FOUND.\n         BE    SRTIBLNK                  YES, OK.\n         BCT   R#X,SRTILOP2              NO, LOOP.\n         B     SRTIEXIT                  NO, EXHAUSTED; EXIT\n**************************\nSRTIBLNK LR    P#B,R#W                 SAVE PTR TO BLANK.\n         LA    R#X,6                   DEPTH TO SCAN.\nSRTILOP3 LA    R#W,1(R#W)              BUMP SCAN PTR.\n         CLI   0(R#W),C':'             Q. ANY COLON PRESENT.\n         BE    SRTIEXIT                  YES, ALREADY STAMPED; EXIT.\n         BCT   R#X,SRTILOP3              NO, LOOP.\n*                                        NO, EXHAUSTED, OK; CONTINUE.\n*********************************\nSRTIDTIT #\n         LR    R#W,P#B              ADDR OF THE IMEEDED BLANK.\n         SR    R#W,B#C                - ADDR OF DL = SIZE OF FRONTEND.\n         LH    E#M,NUELL            ORIG LENGTH\n         SR    E#M,R#W                - FRONTEND   = BACKEND.\n         C     E#M,=A(SRTILEN)      Q. LENGTH TOO BIG.\n         BC    LE,SRTILNOK            NO, OK; SKIP.\n         L     E#M,=A(SRTILEN)        YES, USE SMALLER LENGTH.\n         OI    SRTI1FLG,X'80'               & SET FLAG.\nSRTILNOK ST    E#M,SRTILBAK         STO LENGTH OF THE BACK END.\n         BCTR  E#M,0                MACH CODE.\n         LA    M#T,SRTITEMP         \"TO\"   PTR.\n         LR    M#F,P#B              \"FROM\" PTR.\n         EX    E#M,SRTIMVC          SAVE THE BACK END.\n         TIME  DEC                      GET TIME.\n         ST    R0,SRTIR0                STO TIME.\n         UNPK  SRTIUNPK,SRTIR0          UNPACK TIME.\n         MVC   SRTISTHH,SRTIUNHH        REFORMAT HOURS,\n         MVC   SRTISTMM,SRTIUNMM                 MINUTES,\n         MVC   SRTISTSS,SRTIUNSS                 SECONDS.\n         MVC   0(SRTISTML,P#B),SRTISTMP MOVE INTO MESSAGE SPOT.\n         LA    M#T,(SRTISTML)(P#B)      SET \"TO\"   PTR.\n         L     E#M,SRTILBAK             LENGTH OF BACKEND.\n         BCTR  E#M,0                    MACH CODE.\n         LA    M#F,SRTITEMP             SET \"FROM\" PTR.\n         EX    E#M,SRTIMVC              MOVE BACKEND BACK INTO PLACE.\n         LH    R#W,NUELL             ORIGINAL LENGTH\n         LA    R#W,SRTISTML(R#W)      + ADDED LENGTH\n         STH   R#W,NUELL               =  NEW LENGTH.\nSRTIEXIT BEXIT\n************************************************\nSRTIMVC  MVC   0(0,M#T),0(M#F)\nSRTIR0   DC    A(0)\nSRTIUNPK DC    CL8' '\nSRTIUNHH EQU   SRTIUNPK+01\nSRTIUNMM EQU   SRTIUNPK+03\nSRTIUNSS EQU   SRTIUNPK+05\n************\nSRTISTM0 DC    0C'0'\n         DC    C' '\nSRTISTHH DC    CL2'  '\n         DC    C'-'\nSRTISTMM DC    CL2'  '\n         DC    C'-'\nSRTISTSS DC    CL2'  '\nSRTISTML EQU   (*-SRTISTM0)\nSRTISTMP EQU   SRTISTM0,SRTISTML\n************\nSRTI1FLG DC    A(0)\nSRTILBAK DC    A(0)\nSRTILEN  EQU   240\nSRTITEMP DC    CL(SRTILEN)' '\n**********************************************************************\n  TITLE 'NARAOUE0 --- SUBROUTINES '\n**********************************************************************\n* WALK DOWN A NAME/ADCON LIST\n* IF ADDRESS NEGATIVE, QUIT.\n* IF ADDRESS NONZERO, CALL THE ADDRESS.\n* IF ADDRESS IS ZERO, THEN DO BLDL.\n* IF BLDL IS SUCCESSFUL, THEN LOAD IT.\n* IF LOAD IS SUCCESSFUL, THEN CALL IT.\nSRCALIST BENT\n         S     P#C,=A(12)              PRE-DECREMENT THE LIST PTR.\nSRCALOOP LA    P#C,12(P#C)             BUMP LIST PTR.\n         DLLINK (M,4),'DFSAOUE0/CALL, ',((P#C),8)\n         L     R#W,8(P#C)              GET THE POTENTIAL ADDRESS.\n         C     R#W,=A(0)               Q. WAS THERE ONE.\n         BL    SRCAEXIT            =-1   YES, NEGATIVE; END OF LIST.\n         LA    R#W,0(R#W)              GET  JUST THE ADDRESS.\n         C     R#W,=A(0)               Q. WAS THERE ONE.\n         BNE   SRCALL40           \u00eb=0    YES; USE IT.\n*                                  =0    NO; GOTTA TRY TO LOAD IT.\n         MVC   BLDLNAME,0(P#C)         MOVE IN THE NAME FOR BLDL.\n         BLDL  0,BLDLIST               ATTEMPT TO FIND THE MEMBER.\n         LTR   R15,R15                 Q. WAS IT FOUND.\n         BZ    SRCALDIT                      YES; GOODIE.\n         DLLINK M,' NOT IN STEPLIB.',*WTP    NO; SEND MSG,\n         OI    8(P#C),X'08'                       MARK AS \"NOT FOUND\".\n         B     SRCALOOP                            & LOOP.\nSRCALDIT LOAD  EPLOC=(P#C)                     LOAD IT.\n         ST    R0,8(P#C)                       SAVE THE ADDR.\n         OI       8(P#C),X'01'                 MARK AS \"LOADED\".\n         DLLINK M,' FOUND IN STEPLIB.',*WTP    SEND MSG.\n         B     SRCALL45                        GO TO IT.\nSRCALL40 DLLINK M,' FOUND LINKEDITED.',*WTP    SEND MSG.\n         OI    8(P#C),X'02'                    MARK AS \"FOUND\".\nSRCALL45 LA    R1,CALLPRM                      GET PARM ADDRESS.\n         L     R15,8(P#C)                      GET CALL ADDRESS.\n         LA    R15,0(R15)                      JUST THE ADDR.\n         BALR  R14,R15                         C-A-L-L THE ROUTINE.\n         B     SRCALOOP                        LOOP.\nSRCAEXIT BEXIT\n**********************\n         CNOP    0,4\nCALLIST1 CALLIST NARBGN20\n         CALLIST NARBGN40\n         DC   3F'-1'\nCALLIST2 CALLIST NAREND40\n         DC   3F'-1'\nCALLPRM  DC    V(NARSCD00)\n         DC    V(DLLINK)\n         DC    F'-1'\n**********************************************************************\n  TITLE 'NARAOUE0 --- SUBROUTINES '\n**********************************************************************\n*-*  IF A MESSAGE OR A COMMAND\n*-*    IF ONE OF THE FIRST SEVERAL\n*-*      THEN  WTP IT FOR EXAMPLING.\nSRLOGIT  BENT\n         PUSH  PRINT\n         PRINT NOGEN\n         L     R#W,UEHCPYBF\n         MVC   SRLOGCPY,0(R#W)\n         L     R#L,UEHSRCE             GET\n         LA    R#L,(CNTNAME-CNT)(R#L)     THE\n         MVC   SRLOGNAM,0(R#L)               LTERM NAME.\n         CLC   =C'/SIG',SRLOGCPY+4     Q. IS IT \"/SIGN ON\".\n         BE    SRLOGXX                   YES, SECY EXPOS; SKIP OUT.\n**       CALL  NARAOUC0\n         AP    SRLOGNNN,=P'1'\n         CP    SRLOGNNN,SRLOGNZZ\n         BH    SRLOGXX\n         L     R#L,UEHSRCE\n         LA    R#L,(CNTNAME-CNT)(R#L)\n         DLLINK (M,4),'   ',*DATETIME,' BUFR==(',(SRLOGNAM,8),         *\n               ')==>',SRLOGCDL\n         DLLINK M,*WTP\n         TM    UEHBFLG1,UEH1ECMD\n         BZ    SRLOGOE\n         L     R#W,UEHECMD\n         MVC   SRLOGCPY,0(R#W)\n         DLLINK (M,4),'   ',*DATETIME,' EDIT==>',SRLOGCDL\n         DLLINK M,*WTP\nSRLOGOE  #\n         POP   PRINT\nSRLOGXX  BEXIT\nSRLOGNAM DC    D'0'\nSRLOGCDL DC    0A(0),Y(84,0)\nSRLOGCPY DC    CL80' '\nSRLOGNAA DC    PL4'0'\nSRLOGNNN DC    PL4'0'\nSRLOGNZZ DC    PL4'100'\n**********************************************************************\n  TITLE 'NARAOUE0 --- SUBROUTINES '\n**********************************************************************\n*-*  IF A MESSAGE OR A COMMAND\n*-*    IF ONE OF THE FIRST SEVERAL\n*-*      THEN  SNAP IT FOR EXAMPLING.\n         PUSH  PRINT\n         PRINT NOGEN\n         SNAP2 OPT=(DCB,NOSNAP),DDNAME=NAOUSNAP,DCB=SRSNPDCB\n         POP   PRINT\nSRSNAP   BENT\n         CP    SRSNPNNN,=P'0'\n         BE    SRSNAPXX\n         SP    SRSNPNNN,=P'1'\nSRSNAPOX BC    0,SRSNPOPX\n         SNAP2 OPT=(OPEN,NOSNAP)\n         MVI   SRSNAPOX+1,X'F0'\nSRSNPOPX #\n         LA    R#W,UEHB\n         ST    R#W,NEHBA\n         LA    R#W,UEHURSVD+20\n         ST    R#W,NEHBZ\n*        ***\n         L     R#W,UEHSRCE\n         ST    R#W,NEHSRCEA\n         AH    R#W,=Y(64)\n         ST    R#W,NEHSRCEZ\n*        ***\n         L     R#W,UEHDEST\n         ST    R#W,NEHDESTA\n         AH    R#W,=Y(64)\n         ST    R#W,NEHDESTZ\n*        ***\n         L     R#W,UEHUBUFF\n         ST    R#W,NEHUBUFA\n         AH    R#W,=Y(64)\n         ST    R#W,NEHUBUFZ\n*        ***\n         L     R#W,UEHCPYBF\n         ST    R#W,NEHCPYBA\n         AH    R#W,0(R#W)\n         AH    R#W,=Y(20)\n         ST    R#W,NEHCPYBZ\n*        ***\n         L     R#W,UEHECMD\n         ST    R#W,NEHECMDA\n         AH    R#W,=Y(64)\n         ST    R#W,NEHECMDZ\n*        ***\n         L     R#W,UEHIPCB\n         ST    R#W,NEHIPCBA\n         AH    R#W,=Y(64)\n         ST    R#W,NEHIPCBZ\n*        ***\n         SNAP2 LIST=SNAPLST0\nSRSNAPXX #\n         BEXIT\nSRSNPNAA DC    PL4'0'\nSRSNPNNN DC    PL4'06'\n**********************************************************************\n  TITLE 'NARAOUE0 --- CONSTANTS  -ETC.'\n**********************************************************************\nRETCODE  DC    A(12)\nRET#R0   DC    A(00)\nRET#R1   DC    A(00)\nSTM015   DC    16A(0)\n         ORG   STM015\nSTMR0    DC    A(0)\nSTMR1    DC    A(0)\nSTMR2    DC    A(0)\nSTMR3    DC    A(0)\nSTMR4    DC    A(0)\nSTMR5    DC    A(0)\nSTMR6    DC    A(0)\nSTMR7    DC    A(0)\nSTMR8    DC    A(0)\nSTMR9    DC    A(0)\nSTMR10   DC    A(0)\nSTMR11   DC    A(0)\nSTMR12   DC    A(0)\nSTMR13   DC    A(0)\nSTMR14   DC    A(0)\nSTMR15   DC    A(0)\n         ORG\nEXITREGS DC    16A(0)\nSRSAVEAR DC    18A(0)\nBLDLIST  DC    Y(1),Y(76)\nBLDLNAME DC    CL8' ',CL76' '\nPMFRE    DLPARM FREEZE,KEYWORDS\nPMDPQ    DLPARM DUMPQ\nPMPUR    DLPARM PURGE\nPMDYN    DLPARM /DYN\nPMFLG    DLPARM /FLAG\nPMFLG3   DLPARM /FFF\nPMFLG4   DLPARM /FFFF\nPMTTT    DLPARM TTT\nPMTTT2   DLPARM TRA\nPMTTT3   DLPARM TRAN\nPMTTT4   DLPARM TRANSACTION\nPMTTT5   DLPARM TRANSACTIONS\nPMPPP    DLPARM .PPP\nPMPPP2   DLPARM .PROG\nPMPPP2A  DLPARM .PROGA\nPMPPP3   DLPARM .PROGRAM\nPMDIS    DLPARM .DDD\nPMDIS2   DLPARM .JJJ\nPMDIS3   DLPARM .LLL\n         DC    Y(0,0,0,0)\nMSGCPY0  DC   2D'2.718281828'\n         ORG   MSGCPY0+8\nMSGCPY1  DS   0XL64,XL8\n         DC    XL56'0'\nMSGCPY9  DC    XL64'0'\nCMDCPY0  DC   2D'2.718281828'\n         ORG   CMDCPY0+8\nCMDCPY1  DS   0XL64,XL8\n         DC    XL56'0'\nCMDCPY9  DC    XL64'0'\nCMDCPYW  DC    XL64'0'\nECMDCPY0 DC   2D'2.718281828'\n         ORG   ECMDCPY0+8\nECMDCPY1 DS   0XL64,XL8\n         DC    XL56'0'\nECMDCPY9 DC    XL64'0'\nM        DC    XL200'00'\nSNAPLST0 DC    0D'0'\n         SNAP1LST DFSAOUE0,SNAPLST9,'MODULE DFSAOUE0',MODE=ADCONS\n         SNAP1LST NEHBA,NEHBZ,'USER EXIT HEADER BLOCK (UEHB)' MODE=TAGS\n         SNAP1LST NEHSRCEA,NEHSRCEZ,'SOURCE CNT'\n         SNAP1LST NEHDESTA,NEHDESTZ,'DEST   CNT'\n         SNAP1LST NEHUBUFA,NEHUBUFZ,'USER BUFFR'\n         SNAP1LST NEHCPYBA,NEHCPYBZ,'COPY BUFFR'\n         SNAP1LST NEHECMDA,NEHECMDZ,'EDITED CMD BUFR'\n         SNAP1LST NEHIPCBA,NEHIPCBZ,'INIT PCB.'\nSNAPAOUF SNAP1LST NARAOUF0,NARAOUFZ,'CSECT  NARAOUF0',MODE=ADCONS\nSNAPAOUT SNAP1LST NARAOUT0,NARAOUTZ,'CSECT  NARAOUT0',MODE=ADCONS\nSNAPAOUC SNAP1LST NARAOUC0,NARAOUCZ,'CSECT  NARAOUC0',MODE=ADCONS\nSNAPAOUP SNAP1LST NARAOUP0,NARAOUPZ,'CSECT  NARAOUP0',MODE=ADCONS\n         SNAP1LST 0,0,'END OF AREAS',MODE=ENDLIST\nSNAPLST9 EQU   *-1\n         SNAP1LST MODE=MESSAGES,ORG=DFSAOUE0\n         LTORG\nTABLEC   DC   256AL1(*-TABLEC)  TRANSLATE ALL-TO-SAME.\n         ORG  TABLEC+00\n         DC   064X'40'          EXCEPT FIRST 64(10) ARE SET TO X'40'.\n         ORG\n         CNOPBIGR ORG=DFSAOUE0\n**********************************************************************\n  TITLE 'NARAOUF0 --- PROCESS THE /LOG COMMANDS OF THE \"FLAGS\"-TYPE.'\n**********************************************************************\nNARAOUF0 CSECT\n         DROP\n*B#U     EQU   R3        BASE FOR THE UEHB.\n*B#C     EQU   R4        BASE FOR THE MSG/CMD BUFFER.\n*E#M     EQU   R6        LENGTH TO EXECUTE IN MACH CODE.\n*B#S     EQU   R11       *** IDENTITY W/ IBM AT TIME OF CALL.\n*L##     EQU   R14       LINK TO ALL SUB ROUTINES.\n*R#X     EQU   R14       WORKING REGISTER --- SHORT TERM FOR INDEXING.\n*R#W     EQU   R15       WORKING REGISTER --- SHORT TERM FOR MISC.\nB#F      EQU   R2\nP#S      EQU   R2\nB#T      EQU   R5\nP#P      EQU   R5\nP#D      EQU   R5\n         PROLOGUE SAVE=*PRECHN\n         L     B#S,0(R1)\n         L     B#U,4(R1)\n         USING UEHB,B#U\n         USING SCD,B#S\n         USING NUECPYBF,B#C\n         L     B#C,UEHCPYBF\n*        *****\n         MVC   FCMDCPYW,0(B#C)\n         CLC   FCMDCPYW(2),=Y(L'FCMDCPYW)\n         BC    LT,*+4+6\n         MVC   FCMDCPYW(2),=Y(L'FCMDCPYW)\n*        *****\n         DLLINK (MM,4),'NARAOUF0 ==>',(B#C),*WTP\n         DLLINK (MM,4),'NARAOUF0/PARM =>'\n         TR    FCMDCPYW+4(L'FCMDCPYW-4),FTABLEC   CTRL CHARS TO BLANKS.\n         ST    R13,FRSAVEAR+04        SET HI-SAVE PTR IN NEW SAVE-AREA.\n         LA    R13,FRSAVEAR                PT TO NEW SAVE AREA FOR S/R.\n         CALL  KEYFLAGS,(FCMDPT1,FKEYS)    S/R WILL FORE & BACK CHAIN.\n         L     R13,04(R13)                 RESTORE SAVE-SET POINTER.\n***************************\n         NARSCDF B#F,NARSCFA0\n         USING NARSCFA0,B#F\n***      *********\n         CLI   FPMBLDL,0\n         BNE   FGPBLX0\n         CLI   FPMSTOR,0\n         BNE   FGPSTX0\n         CLI   FPMHEX,0\n         BNE   FGHEXX0\n         CLI   FPMSNAP,0\n         BNE   FGSNAPX0\n         CLI   FPMTCT,0\n         BNE   FGTCT0\n         CLI   FPMMT2,0\n         BNE   FGMT20\n         CLI   FPMFEAT,0\n         BNE   FGFEAT0\n         CLI   FPMDEVC,0\n         BNE   FGDEVC0\n         B     FGWTP\n**********************************************\n**  /LOG /FLAG  BLDL SYSON     NOW\n*                    SYSOFF\n*                       ON\n*                       OFF\n*                       RESET\n*     ON/OFF         TOGGLE NARSCFA2'S  X'10'\n*     SYSON/SYSOFF   TOGGLE NARSCFA3'S  X'02'\n*     RESET          SETS   NARSCFA2'S  X'02'\n*   /LOG /FLAG SNAP LIST=NARLST--\n*   /LOG /FLAG SNAP #=3\nFGPBLX0  DLLINK MM,'=BLDL'\n         CLI   FPMSON,0\n         BE    FGPSNX9\n         OI    NARSCFA3,X'02'\n         BAL   L##,SRFGPSTS\n         DLLINK MM,'=SYSON'\nFGPSNX9  #\n***      *********\n         CLI   FPMSOFF,0\n         BE    FGPSFX9\n         NIF   NARSCFA3,X'02'\n         BAL   L##,SRFGPSTS\n         DLLINK MM,'=SYSOFF'\nFGPSFX9  #\n***      *********\n         CLI   FPMON,0\n         BE    FGPONX9\n         NIF   NARSCFA2,X'10'\n         BAL   L##,SRFGPSTS\n         DLLINK MM,'=ON'\nFGPONX9  #\n***      *********\n         CLI   FPMOFF,0\n         BE    FGPOFX9\n         OI    NARSCFA2,X'10'\n         BAL   L##,SRFGPSTS\n         DLLINK MM,'=OFF'\nFGPOFX9  #\n***      *********\n         CLI   FPMRES,0\n         BE    FGPREX9\n         NARSCDF B#T,NARSTIM0\n         STCK  NARSTBLD-NARSTIM0(B#T)\n         AP    NARSTBLC-NARSTIM0(,B#T),=P'1'\n         OI    NARSCFA2,X'02'\n         BAL   L##,SRFGPSTS\n         DLLINK MM,'=RESET'\nFGPREX9  #\n***      *********\n*          THE \"NOW\" ISN'T VERY USEFUL AS MOST BLDL'S\n*                             ON DONE ON A NON-IMSTASK CPU.\n         CLI   FPMNOW,0\n         BE    FGPNWX9\n         DLLINK MM,'=NOW'\n         DLLINK (MM2,4),'F IMSTASK,NOW  ',*COMMAND\nFGPNWX9  #\nFGPBLX9  B     FGWTP\n***************************\nFGPSTX0  #\n         DLLINK MM,'=STOR'\n         B     FGWTP\n***************************\n**   /LOG /FLAG HEX ID=A  OFFSET=/X DATA=/Y\n*      WHERE                      X=> OFFSET=RIGHT 4 BITS OF CHAR \"X\"\n*                                 Y=> DATA= THE CHAR AT \"Y\".\n*     CONTROLS THE CONTENTS OF NARSCFA_\nFGHEXX0  #\n         DLLINK MM,'=HEX'\n         LA    P#P,FPMID\n         BAL   L##,SRLAYIN\n         BNO   FGHEXX9\n         CLI   L+4,C'A'\n         BE    FGHEXA\n         B     FGWTP\nFGHEXA   LA    P#P,FPMOFSET\n         BAL   L##,SRLAYIN\n         MVC   FGHXOFF,L+4\n         LA    P#P,FPMDATA\n         BAL   L##,SRLAYIN\n         MVC   FGHXBYT,L+4\n         CLI   FGHXOFF,C'/'\n         BNE   FGHEXX9\n         CLI   FGHXBYT,C'/'\n         BNE   FGHEXX9\n         IC    R#X,FGHXOFF+1\n         N     R#X,=A(X'0F')\n         XR    R#W,R#W\n         IC    R#W,FGHXBYT+1\n         STC   R#W,NARSCFAX(R#X)\n         BAL   L##,SRFGPSTS\nFGHEXX9  #\n         B     FGWTP\n***************************\n**  /LOG /FLAG SNAP LIST=NARLST--\n**  /LOG /FLAG SNAP #=3\nFGSNAPX0 #\n         DLLINK MM,'=SNAP'\n         CLI   FPMNBR,0                Q. WAS A NUMBER SPECIFIED.\n         BNE   FGSNRSET                  YES, GO RESET.\n         MVC   FBLDLNAM,FBLDLNM0       SET MEMBER NAME TO DEFAULT.\n         SNAP2 OPT=(OPEN,NOSNAP)       MAKE SURE IT'S OPEN.\n         LA    P#S,FSNAPLST            POINT TO DEFAULT SNAPLIST.\n         LA    P#P,FPMLIST             POINT TO NAME OF LIST MODULE.\n         BAL   L##,SRLAYIN             Q. WAS THERE ONE.\n         BNO   FGSNBLDL                  NO; USE DEFAULT MEMBER.\n         MVC   FBLDLNAM,L+4              YES; COPY MEMBER.\nFGSNBLDL BLDL  0,FBLDLIST              ATTEMPT TO FIND THE MEMBER.\n         LTR   R15,R15                 Q. WAS IT FOUND.\n         BNZ   FGSNAPIT                  NO; USE DEFAULT LIST.\n         LOAD  EPLOC=FBLDLNAM            YES; LOAD SPECD LIST &\n         LR    P#S,R0                                     USE IT.\n         DLLINK MM,' SNAPLIST=',(FBLDLNAM,8),' LOADED.'\n         PUSH PRINT\n         PRINT GEN\nFGSNAPIT L     P#D,=A(SRSNPDCB)\n         SNAP2 MF=(E,(P#S)),DCB=((P#D))  TAKE A SNAP.\n         ST    R15,FGSNAP15\n         POP  PRINT\n         DELETE EPLOC=FBLDLNAM         DELETE THE MODULE, ANYWAY.\n         DLLINK MM,*WTO\n         B     FGWTP\n**********************************************\n**  /LOG /FLAG SNAP #=3\nFGSNRSET LH    R#W,FPMNBR+2            GET THE NUMBER IN BINARY.\n         CVD   R#W,FGWORKD             CONVERT TO DECIMAL.\n         L     R#W,=A(SRSNPNNN)        FIND WHERE TO STORE IT.\n         MVC   0(4,R#W),FGWORKD+4      THEN GO       STORE IT.\n         L     R#W,=A(SRLOGNNN)        FIND WHERE TO STORE IT.\n         ZAP   0(4,R#W),=P'0'          THEN GO ZAP IN A ZERO.\n         DLLINK MM,' NUMBER RESET.'\n         B     FGWTP\n******************************************************\n*    /LOG /FLAG TCT ON\n*                   OFF\nFGTCT0   #\n         DLLINK MM,'=TCT'\n         MVI   FGTCTP2+1,C' '          SET PARM TO BLANK.\n         CLI   FPMON,0                 Q. IS \"ON\"  SPECIFIED.\n         BE    *+4+4                     NO, SKIP.\n         MVI   FGTCTP2+1,C'1'            YES, SET PARM TO C'-1'.\n         CLI   FPMOFF,0                Q. IS \"OFF\" SPECIFIED.\n         BE    *+4+4                     NO, SKIP.\n         MVI   FGTCTP2+1,C'0'            YES, SET PARM TO C'-0'.\n         CLI   FGTCTP2+1,C' '\n         BE    FGTCTXX\n         MVI   FGTCTP2+0,C'B'            YES, SET PARM TO C'B-'.\n         PUSH  PRINT\n         PRINT GEN\n         LINK  EP=NARAO200,PARAM=((B#S),FGTCTP2)\n         POP   PRINT\n         DLLINK MM,' NARAO200/TCT CALLED WITH PARM ',(FGTCTP2,2)\n         DLLINK MM,*WTO\nFGTCTXX  #\n         B     FGWTP\nFGTCTP2  DC    D'0'\n******************************************************\n*-*  /LOG /FLAG SECONDARY ON\n*-*                       OFF\n*-*   IF \"ON\"\n*-*     IF HAVE ORIGINAL ADDRESS SAVED FROM AN \"OFF\"-EXECUTION\n*-*       THEN RESTORE IT.\n*-*   IF \"OFF\"\n*-*     IF HAVE ORIGINAL ADDRESS IN SCD TO SAVE\n*-*       THEN SAVE IT & CLEAR THE ONE IN THE SCD.\nFGMT20   #\n         DLLINK MM,'=MT2'\n         CLI   FPMON,0                 Q. IS \"ON\"  SPECIFIED.\n         BE    FGMT2ON9                  NO, SKIP.\n         OC    FGMT2SAV,FGMT2SAV         YES; Q. WAS ORIG ADDR SAVED.\n         BZ    FGMT2ON9                         NO; SKIP OUT.\n         MVC   SCDSMTRM,FGMT2SAV                YES, RESTORE IT.\n         DLLINK MM,' ON'\nFGMT2ON9 #\n         CLI   FPMOFF,0                Q. IS \"OFF\" SPECIFIED.\n         BE    FGMT2OF9                  NO, SKIP.\n         OC    SCDSMTRM,SCDSMTRM         YES; Q. IS ORIG ADDR PRESENT.\n         BZ    FGMT2OF9                         NO; SKIP OUT.\n         MVC   FGMT2SAV,SCDSMTRM                YES, SAVE ORIG ADDR.\n         XC    SCDSMTRM,SCDSMTRM                     CLEAR SCD-PTR.\n         DLLINK MM,' OFF'\nFGMT2OF9 #\n         DLLINK MM,*WTO\n         B     FGWTP\n****************\nFGMT2SAV DC   A(0)\n******************************************************\nFGFEAT0  #\n*    /LOG /FLAG FEAT=13    ON\n*                          OFF\n*                       SYSON\n*                       SYSOFF\n*-*   IF \"ON\"\n*-*     IF NO PREV \"SYSOFF\"\n*-*       THEN SET  \"ON\"-BIT\n*-*   IF \"OFF\"\n*-*     IF NO PREV \"SYSON\"\n*-*       THEN RESET \"ON\"-BIT\n*-*   IF \"SYSON\"\n*-*       THEN SET \"ON\"-BIT AND THE \"SYSON\"-BIT\n*-*   IF \"SYSOFF\"\n*-*       THEN RESET \"ON\"-BIT AND THE \"SYSON\"-BIT\n*      THE IDEA IS THAT ONLY SYSTEMPROGRAMMERS CAN SET THE \"SYS--\" BITS\n*       AND THE OPERATORS CAN SET THE \"ON\"-BIT BUT ONLY IF THE \"SYS--\"\n*       BIT IS NOT SET.\n*         AS OF YET THERE IS NO SUCH SECURITY.\n*\n*\nFGFEBFET EQU   X'80'    SET TO 0 BY \"SYSOFF\"\n*                       SET TO 1 BY \"SYSON\"\n*                       SET TO 0 BY \"OFF\"; SET TO 1 BY \"ON\".\n*                        * *  E X C E P T\n*                          CANNOT BE SET TO 0 BY \"OFF\" IF \"SYSON\"  SET.\n*                          CANNOT BE SET TO 1 BY \"ON\"  IF \"SYSOFF\" SET.\n*                       BIT=0 ==> FEATURE IS OFF.\n*                       BIT=1 ==> FEATURE IS ON.\nFGFEBSON EQU   X'20'    SET TO 0 BY \"SYSOFF\"; SET TO 1 BY \"SYSON\".\n*                       BIT=1 ==> FGFEBFET IS SET TO 1.\n*                                    \"OFF\" CANNOT  TURN FEAT OFF.\n*                                 \"SYSOFF\" REQD TO TURN FEAT OFF.\nFGFEBSOF EQU   X'10'    SET TO 0 BY \"SYSON\"; SET TO 1 BY \"SYSOFF\".\n*                       BIT=1 ==> FGFEBFET IS SET TO 0.\n*                                    \"ON\"  CANNOT  TURN FEAT ON.\n*                                 \"SYSON\"  REQD TO TURN FEAT ON.\nFGFEBABE EQU   X'01'    SET TO 0 BY \"S-/OFF  \"; SET TO 1 BY \"ABEND\".\n*                       BIT=1 ==> FEATURE CAN TEST FOR DEBUG ABEND.\n         DLLINK MM,'=FEAT'\n         CLI   FPMFEAT,X'40'\n         BNE   FGFEATXX\n         NARSCDF B#F,NARSCFB0          FEATURE FLAG BASE.\n         LH    R#W,FPMFEAT+2           GET FEATURE NUMBER IN BINARY.\n         N     R#W,=A(X'0000FFFF')     JUST SOME OF IT.\n         C     R#W,=A(X'000000FF')     Q. SMALL ENOUGH.\n         BH    FGFEATXX                  NO; PITY; EXIT.   (TOO BIG)\n         MH    R#W,=H'8'               NBR * LGTH FLAG DBLWD = OFFSET.\n         LA    P#F,0(R#W,B#F)          BASE + OFFSET = FLAG DBLWD ADD.\n         CLI   FPMON,0                 Q. IS \"ON\"  SPECIFIED.\n         BE    FGFEUON9                  NO, SKIP.\n         TM    0(P#F),FGFEBSOF           YES; Q. IS SYS-OFF SET.\n         BO    FGFEUON9                         YES; PITY; NOT ALLOWED.\n         OI    0(P#F),FGFEBFET             A.O.K.; SET FEAT ON.\n         DLLINK MM,'=ON'\nFGFEUON9 #\n         CLI   FPMOFF,0                Q. IS \"OFF\" SPECIFIED.\n         BE    FGFEUOF9                  NO, SKIP.\n         TM    0(P#F),FGFEBSON           YES; Q. IS SYS-ON  SET.\n         BO    FGFEUOF9                         YES; PITY; NOT ALLOWED.\n         NIF   0(P#F),FGFEBFET             A.O.K.; SET FEAT OFF.\n         NIF   0(P#F),FGFEBABE                     SET ABND OFF.\n         DLLINK MM,'=OFF'\nFGFEUOF9 #\n         CLI   FPMSON,0                Q. IS \"SYSON\"  SPECIFIED.\n         BE    FGFESON9                  NO, SKIP.\n         OI    0(P#F),FGFEBFET                     SET FEAT ON.\n         OI    0(P#F),FGFEBSON                     SET SYSON  YES.\n         NIF   0(P#F),FGFEBSOF                     SET SYSOFF NO.\n         DLLINK MM,'=SYSON'\nFGFESON9 #\n         CLI   FPMSOFF,0               Q. IS \"SYSOFF\" SPECIFIED.\n         BE    FGFESOF9                  NO, SKIP.\n         NIF   0(P#F),FGFEBFET                     SET FEAT OFF.\n         NIF   0(P#F),FGFEBSON                     SET SYSON  NO.\n         NIF   0(P#F),FGFEBABE                     SET ABND OFF.\n         OI    0(P#F),FGFEBSOF                     SET SYSOFF YES.\n         DLLINK MM,'=SYSOFF'\nFGFESOF9 #\n         CLI   FPMABEND,0              Q. IS \"ABEND \" SPECIFIED.\n         BE    FGFEABE9                  NO, SKIP.\n         OI    0(P#F),FGFEBABE                     SET ABEND ON.\n         DLLINK MM,'=SYSOFF'\nFGFEABE9 #\n         DLLINK MM,*WTO\nFGFEATXX #\n         B     FGWTP\n******************************************************\nFGDEVC0  #\n*    /LOG /FLAG DEV=13     ON          (DEV=A-DECIMAL-NUMBER)\n*                          OFF\n*  THIS IMPLEMENTATION IS QUITE LIKE THE FEATURES IMPLEMENTATION;\n*   AFTER DIFFERENT INITIAL LOGIC, THIS CODE BRANCHES TO THE FEAT CODE.\n*  ANY NON-ZERO VALUE WILL IMPLY TO INSTR=\"TRT\" THAT THIS DEVICE IS A\n*   MEMBER OF THE SET NOMINALLY KNOWN AS \"SIGN-ON-FORMAT CANDIDATES\".\nFGDEBDEV EQU   X'80'    SET TO 0/1 BY OFF/ON\n         DLLINK MM,'=DEVICE'\n         CLI   FPMDEVC,X'40'\n         BNE   FGDEVCXX\n         NARSCDF B#F,NARSDEV0          DEVICE  FLAG BASE.\n         LH    R#W,FPMDEVC+2           GET DEVICE NUMBER IN BINARY.\n         N     R#W,=A(X'0000FFFF')     JUST SOME OF IT.\n         C     R#W,=A(X'000000FF')     Q. SMALL ENOUGH.\n         BH    FGDEVCXX                  NO; PITY; EXIT.   (TOO BIG)\n**\n         LA    P#F,0(R#W,B#F)          BASE + OFFSET = FLAG DBLWD ADD.\n         CLI   FPMON,0                 Q. IS \"ON\"  SPECIFIED.\n         BE    FGDEUON9                  NO, SKIP.\n         OI    0(P#F),FGDEBDEV           YES; SET DEVC ON.\n         DLLINK MM,'=ON'\nFGDEUON9 #\n         CLI   FPMOFF,0                Q. IS \"OFF\" SPECIFIED.\n         BE    FGDEUOF9                  NO, SKIP.\n         NIF   0(P#F),FGDEBDEV           YES; SET DEVC OFF.\n         DLLINK MM,'=OFF'\nFGDEUOF9 #\n         DLLINK MM,*WTO\nFGDEVCXX #\n         B     FGWTP\n**********************************************\nFGWTP    #\n         DLLINK MM,*WTP\n         EPILOGUE\n**********************************************************************\n  TITLE 'NARAOUF0 --- COPY FLAGS TO THE INDIVIDUAL AUXILIARY PST/S.'\n**********************************************************************\nSRFGPSTS BENT\n         NARSCDF R14,NARPSTSL           PTR TO TABLE OF PST ADCONPAIRS.\n         S     R14,=F'8'                     (PRE-DECRMT)\n*        *****\nSRFGPLOP LA    R14,8(R14)               PTR TO 1ST/NEXT     ADCONPAIR.\n         L     R15,0(R14)               PTR TO 1ST/NEXT AUX PST.\n         LTR   R15,R15                  Q. IS IT REAL & PRESENT.\n         BNP   SRFGPDUN                      NO,  EXIT LOOP.\n         L     R15,NARPSTW0-NARPST#0+12(R15) YES, PTR TO 4TH WORK AREA.\n         NC    NARCFLGA-NARCMOV4(16,R15),SRFGBIT0 ZERO MOST BITS.\n         OC    NARCFLGA-NARCMOV4(16,R15),NARSCFA0 FLAGS TO THIS AUXPST.\n         L     R0,NARCNUCA-NARCMOV4(R15)     NUC ADDR\n         A     R0,=X'01000000'                 +1 IN HIGH BYTE\n         ST    R0,NARCNUCA-NARCMOV4(R15)         TO MAKE UNIQUE.\n         B     SRFGPLOP                 LOOP FOR NEXT PST.\nSRFGPDUN EQU   *\n*        *****\n         NC    NARSCFA0(16),SRFGBIT1        ZERO SOME BITS.\n         BEXIT\nSRFGBIT0 DC    XL16'00000200000000000000000000000000'\n*                    0 1 2 3 4 5 6 7 8 9 A B C D E F\nSRFGBIT1 DC    XL16'FFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFF'\n**********************************************************************\n  TITLE 'NARAOUF0 --- LAY PARM INTO FIELD.'\n**********************************************************************\n* SUB-ROTINE TO LAY INTO 'L' AREA THE PARM POINTED TO BY P#P.\n*        LA    P#P,PARMFIELDNAME\n*        BAL   L##,LAYIN\n*        BNO   IF_NOT_FOUND\nSRLAYIN  BENT\n         TM    0(P#P),X'C0'\n         BNO   SRLAYEX\n         MVI   L+4,X'40'\n         MVC   L+5(80),L+4\n         XR    E#M,E#M\n         IC    E#M,0(P#P)\n         N     E#M,=A(63)\n         S     E#M,=A(01)\n*&\u00eb%$    BALC  LT,ABEND\n         L     R#W,0(P#P)\n         EX    E#M,SRMVCPRM\n         LA    E#M,5(E#M)\n         STH   E#M,L\n         OC    L+4(80),DCL80BBB    FORCE UPPER CASE.\n         TM    *,1\nSRLAYEX  BEXIT\n*        ******\nSRMVCPRM MVC   L+4(0),0(R#W)\nL        DC    0D'0',Y(4,0),CL84'*PARAMETER-IS-MISSING*'\nDCL80BBB DC    CL80' '\n**********************************************************************\n  TITLE 'NARAOUF0 --- CONSTANTS ETC.'\n**********************************************************************\nFCMDPT1  DC    A(FCMDPT2)\nFCMDPT2  DC    A(FCMDCPYW)  ===> UEHCPYBF\nFCMDCPYW DC    XL64'0'\nFGHXOFF  DC    A(0)\nFGHXBYT  DC    A(0)\nFPMFLAG  DLPARM FLAG,FKEYS\nFPMYES   DLPARM YES\nFPMNO    DLPARM NO\nFPMSON   DLPARM SYSON\nFPMSOFF  DLPARM SYSOFF\nFPMON    DLPARM ON\nFPMOFF   DLPARM OFF\nFPMBLDL  DLPARM BLDL\nFPMRES   DLPARM RESET\nFPMNOW   DLPARM NOW\nFPMHEX   DLPARM HEX\nFPMID    DLPARM ID\nFPMOFSET DLPARM OFFSET\nFPMDATA  DLPARM DATA\nFPMSTOR  DLPARM STOR\nFPMSNAP  DLPARM SNAP\nFPMLIST  DLPARM LIST\nFPMNBR   DLPARM #\nFPMTCT   DLPARM TCT\nFPMMT2   DLPARM SECONDARY\nFPMFEAT  DLPARM FEAT\nFPMDEVC  DLPARM DEV\nFPMFVAL  DLPARM VAL\nFPMABEND DLPARM ABEND\nFPMNOI01 DLPARM ?01\nFPMNOI02 DLPARM ?02\nFPMNOI03 DLPARM ?03\n         DC    4Y(0)\nFGWORKD  DC    D'0'\nFRSAVEAR DC    18F'0'\nFGSNAP15 DC    A(0)\nFBLDLIST DC    Y(1),Y(76)\nFBLDLNAM DC    CL8'        ',CL76' '\nFBLDLNM0 DC    CL8'NARSLST0'\nFSNAPLST SNAP  MF=L,ID=099,LIST=SNAPLST0\nMM       DC    XL200'0'\nMM2      DC    XL200'0'\n         LTORG\nFTABLEC  DC    256AL1(*-FTABLEC)\n         ORG   FTABLEC+00\n         DC    064X'40'\n         ORG\n         CNOPBIGR ORG=NARAOUF0\nNARAOUFZ EQU   *-1\n**********************************************************************\n  TITLE 'NARAOUT0 --- START PROGRAMS TO GO WITH EACH TRANSACTION.'\n**********************************************************************\nNARAOUT0 CSECT\n         DROP\n*B#U     EQU   R3        BASE FOR THE UEHB.\n*B#C     EQU   R4        BASE FOR THE MSG/CMD BUFFER.\n*P#P     EQU   R5\n*E#M     EQU   R6        LENGTH TO EXECUTE IN MACH CODE.\n*B#S     EQU   R11       *** IDENTITY W/ IBM AT TIME OF CALL.\n*L##     EQU   R14       LINK TO ALL SUB ROUTINES.\n*R#X     EQU   R14       WORKING REGISTER --- SHORT TERM FOR INDEXING.\n*R#W     EQU   R15       WORKING REGISTER --- SHORT TERM FOR MISC.\nT#A      EQU   R3\nT#C      EQU   R4\nT#D      EQU   R5\nT#E      EQU   R6\n         PROLOGUE SAVE=*PRECHN\n         L     B#S,0(R1)\n         L     B#U,4(R1)\n         MVC   TCMDMSGP,8(R1)           ADDR WHERE TO LEAVE MSG ADD.\n         USING UEHB,B#U\n         USING SCD,B#S\n         USING NUECPYBF,B#C\n         L     B#C,UEHCPYBF\n*        *****\n         MVC   TCMDCPYW,0(B#C)\n         CLC   TCMDCPYW(2),=Y(L'TCMDCPYW)\n         BC    LT,*+4+6\n         MVC   TCMDCPYW(2),=Y(L'TCMDCPYW)\n         TR    TCMDCPYW+4(L'TCMDCPYW-4),TTABLEC   CTRL CHARS TO BLANKS.\n         MVC   TCMDCPYW+2(2),=Y(0)                CLEAR ZZ.\n*        *****\n         DLLINK (TMM,4),'NARAOUT0 ==>',(B#C),*WTP\n         DLLINK (TMM,4),'DFSAOUT0 PROG STARTED FOR TRAN  =>'\n         ST    R13,TRSAVEAR+04        SET HI-SAVE PTR IN NEW SAVE-AREA.\n         LA    R13,TRSAVEAR                PT TO NEW SAVE AREA FOR S/R.\n         CALL  KEYFLAGS,(TCMDPT1,TKEYS)    S/R WILL FORE & BACK CHAIN.\n         L     R13,04(R13)                 RESTORE SAVE-SET POINTER.\n*        *****\n         OC    TPMTTT(4),TPMTTT2    \"OR\" TOGETHER ALL OF THE\n         OC    TPMTTT(4),TPMTTT3         ALIASES FOR \"TRAN\".\n         OC    TPMTTT(4),TPMTTT4\n         OC    TPMTTT(4),TPMTTT5\n         CLI   TPMTTT,0\n         BE    TRADONE7\n         OC    TPMPPP(4),TPMPPP2    \"OR\" TOGETHER ALL OF THE\n         OC    TPMPPP(4),TPMPPP3         ALIASES FOR \"PROG\".\n         OC    TPMPPP(4),TPMPPP2A\n         CLI   TPMPPP,0\n         BE    TRADONE7\n**************************************\n*\n**************************************\n**  FIND EACH TRAN CODE IN COMMAND.\n         LA    T#A,TPTRNAMS-4             FIRST TRAN PARM (PRE-DECR).\nTRALOOP  LA    T#A,4(T#A)                 NEXT TRAN PARM.\n         ICM   P#P,X'F',0(T#A)            Q. REAL PTR.\n         BZ    TRADONE6                     NO, END; QUIT.\n         BAL   L##,TRLAYIN                  YES, GET PARM IN W/A=\"TL\".\n         BNO   TRADONE6                          QUIT IF NONE.\n         L     R14,=A(X'80000000'+X31SMB1)  RIG POINTER TO CONTINUE. XA\n         BSM   0,R14                        SET AMODE=31.            XA\nX31SMB1  #                                                           XA\n******************************\n*     FOR EACH TRAN CODE IN COMMAND, FIND THE CORRECT SMB.\n         L     T#C,SCDSMBEP               ADDR OF FIRST SMB.\n         LH    T#D,SCDSMBL                LENGTH OF EACH,\n         MH    T#D,SCDNSMB+2                * NBR OF SMB,\n         AR    T#D,T#C                      + FIRST = ADDR AFTER LAST.\n         SH    T#C,SCDSMBL                PRE-DECREMENTED.\nTRASMBLP AH    T#C,SCDSMBL                FIRST/NEXT SMB.\n         CR    T#C,T#D                    Q. ANY LEFT.\n         BC    GE,TRAERR1                   NO, QUIT; NEXT INPUT TRAN.\n         CLC   SMBNAME-SMB(,T#C),TL+4     Q. IS THIS OUR SMB.\n         BNE   TRASMBLP                     NO, KEEP LOOKING.\n         TM    SMBFLAG2-SMB(T#C),SMB2RMT  Q. IS THIS A REMOTE SMB?\n         BO    TRAERR1                      YES, QUIT; GO TO NEXT TRAN.\n******************\n*      FOR THE CORRECT SMB GET PTR TO THE PDIR.\n         L     T#E,SMBPDIR-SMB(T#C)       PDIR POINTER.\n*&\u00eb%     A     T#E,SCDDLIPS               NO OFFSET+BASE IN THIS VER.\n         NIF   PDIRCODE-PDIR(T#E),PDIRNOSC TURN OFF THE NO-SCHED BIT.\n         DLLINK TMM,' ',TL\nTRADONE1 #\n         LA    R14,X24SMB1                RIG POINTER TO CONTINUE.   XA\n         BSM   0,R14                      SET AMODE=24.              XA\nX24SMB1  #                                                           XA\n         B     TRALOOP                    LOOP FOR NEXT TRAN.\n*****************************\nTRAERR1  #                PUT (PARENS) AROUND TRANS IN ERROR.\n         DLLINK TMM,' (',TL,')'\n         B     TRADONE1                   LOOP FOR NEXT TRAN.\n*****************************\nTRADONE6 #\n         STM   R0,R15,TRSTMZ9\n         CLI   TPMPPP2A,0             Q. REQUEST FOR ABEND.\n         BE    TRADONE8                 NO, SKIP.\n         DC    A(0)                     YES;  S/0C1.\nTRADONE8 #\n         DLLINK TMM,*WTP\n         DLLINK TMM,TMMCARR\n         L     R#W,TCMDMSGP           WHERE TO PUT MSG PTR.\n         MVC   0(4,R#W),=A(TMM)                PUT MSG PTR.\nTRADONE7 #\n         LA    R14,X24SMB7                RIG POINTER TO CONTINUE.   XA\n         BSM   0,R14                      SET AMODE=24.              XA\nX24SMB7  #                                                           XA\n         EPILOGUE\n**********************************************************************\n  TITLE 'NARAOUT0 --- LAY PARM INTO FIELD.'\n**********************************************************************\n* SUB-ROTINE TO LAY INTO 'L' AREA THE PARM POINTED TO BY P#P.\n*        LA    P#P,PARMFIELDNAME\n*        BAL   L##,LAYIN\n*        BNO   IF_NOT_FOUND\nTRLAYIN  BENT\n         TM    0(P#P),X'C0'\n         BNO   TRLAYEX\n         MVI   TL+4,X'40'\n         MVC   TL+5(80),TL+4\n         XR    E#M,E#M\n         IC    E#M,0(P#P)\n         N     E#M,=A(63)\n         S     E#M,=A(01)\n*&\u00eb%$    BALC  LT,ABEND\n         L     R#W,0(P#P)\n         EX    E#M,TRMVCPRM\n         LA    E#M,5(E#M)\n         STH   E#M,TL\n         OC    TL+4(80),TDCL80BB   FORCE UPPER CASE.\n         TM    *,1\nTRLAYEX  BEXIT\n*        ******\nTRMVCPRM MVC   TL+4(0),0(R#W)\nTL       DC    0D'0',Y(4,0),CL84'*PARAMETER-IS-MISSING*'\nTDCL80BB DC    CL80' '\n**********************************************************************\n  TITLE 'NARAOUT0 --- CONSTANTS AND BUFFERS.'\n**********************************************************************\nTCMDPT1  DC    A(TCMDPT2)\nTCMDPT2  DC    A(TCMDCPYW)  ===> UEHCPYBF\nTCMDCPYW DC    XL64'0'\nTRSAVEAR DC    18A(0)\nTMMCARR  DC    Y(5,0),X'15'\nTCMDMSGP DC    A(0)\nTPTRNAMS DC    A(TPMT1)\n         DC    A(TPMT2)\n         DC    A(TPMT3)\n         DC    A(TPMT4)\n         DC    A(TPMT5)\n         DC    A(TPMT6)\n         DC    A(TPMT7)\n         DC    A(TPMT8)\n         DC    A(TPMT9)\n         DC    A(TPMT10)\n         DC    A(TPMT11)\n         DC    A(TPMT12)\n         DC    A(TPMT13)\n         DC    A(TPMT14)\n         DC    A(TPMT15)\n         DC    A(TPMT16)\n         DC    A(TPMT17)\n         DC    A(TPMT18)\n         DC    A(TPMT19)\n         DC    A(0)\nTPMTTT   DLPARM TTT,TKEYS\nTPMTTT2  DLPARM TRA\nTPMTTT3  DLPARM TRAN\nTPMTTT4  DLPARM TRANSACTION\nTPMTTT5  DLPARM TRANSACTIONS\nTPMPPP   DLPARM .PPP\nTPMPPP2  DLPARM .PROG\nTPMPPP2A DLPARM .PROGABEND\nTPMPPP3  DLPARM .PROGRAM\nTPMSTA1  DLPARM /STA                    TRAP THE VERB.\nTPMALL   DLPARM ALL\nTPMT1    DLPARM ?01\nTPMT2    DLPARM ?01\nTPMT3    DLPARM ?01\nTPMT4    DLPARM ?01\nTPMT5    DLPARM ?01\nTPMT6    DLPARM ?01\nTPMT7    DLPARM ?01\nTPMT8    DLPARM ?01\nTPMT9    DLPARM ?01\nTPMT10   DLPARM ?01\nTPMT11   DLPARM ?01\nTPMT12   DLPARM ?01\nTPMT13   DLPARM ?01\nTPMT14   DLPARM ?01\nTPMT15   DLPARM ?01\nTPMT16   DLPARM ?01\nTPMT17   DLPARM ?01\nTPMT18   DLPARM ?01\nTPMT19   DLPARM ?01\n         DC    4Y(0)\n         SPACE 2\nTRSTMZ9  DC    16A(0)\nTMM      DC    CL200' '\n         LTORG\nTTABLEC  DC    256AL1(*-TTABLEC)\n         ORG   TTABLEC+00\n         DC    072X'40'\n         ORG\n         CNOPBIGR ORG=NARAOUT0\nNARAOUTZ EQU   *-1\n**********************************************************************\n  TITLE 'NARAOUP0 --- PROCESS THE DEPENDENT REGIONS START/STOP MSGS.'\n**********************************************************************\nNARAOUP0 CSECT\n         DROP\n*B#F     EQU   R2        BASE FOR THE FEATURES.\n*B#U     EQU   R3        BASE FOR THE UEHB.\n*B#C     EQU   R4        BASE FOR THE MSG/CMD BUFFER.\n*P#P     EQU   R5\n*E#M     EQU   R6        LENGTH TO EXECUTE IN MACH CODE.\n*B#S     EQU   R11       *** IDENTITY W/ IBM AT TIME OF CALL.\n*L##     EQU   R14       LINK TO ALL SUB ROUTINES.\n*R#X     EQU   R14       WORKING REGISTER --- SHORT TERM FOR INDEXING.\n*R#W     EQU   R15       WORKING REGISTER --- SHORT TERM FOR MISC.\n         PROLOGUE SAVE=*PRECHN\n         L     B#S,0(R1)\n         L     B#U,4(R1)\n         MVC   PMSGMSGP,8(R1)           ADDR WHERE TO LEAVE MSG ADD.\n         USING UEHB,B#U\n         USING SCD,B#S\n         USING NUECPYBF,B#C\n         L     B#C,UEHCPYBF\n         ST    B#S,PST551SC               STORE IBM SCD PTR.\n         LR      R#W,B#S                  COPY  IBM SCD PTR.\n         NARSCDF R#W,NARSCD10,KNOWN=SCD   GET   AUX SCD PTR\n         ST      R#W,PST551RI             STORE AUX SCD PTR.\n*        *****\n         MVC   PMSGCPYW,0(B#C)\n         CLC   PMSGCPYW(2),=Y(L'PMSGCPYW)\n         BC    LT,*+4+6\n         MVC   PMSGCPYW(2),=Y(L'PMSGCPYW)\n*        *****\n         XC    PST551FF,PST551FF          CLEAR SNAP FLAG.\n         DLLINK (PMM,4),'NARAOUP0 ==>',PMSGCPYW,*WTP\n         DLLINK (PMM,4),'OK'\n         DLLINK (PMM,4),'NARAOUP0 PST EXTENSION ERROR - A.'\n*        ST    R13,PRSAVEAR+04        SET HI-SAVE PTR IN NEW SAVE-AREA.\n*        LA    R13,PRSAVEAR                PT TO NEW SAVE AREA FOR S/R.\n*        CALL  KEYFLAGS,(PCMDPT1,PKEYS)    S/R WILL FORE & BACK CHAIN.\n*        L     R13,04(R13)                 RESTORE SAVE-SET POINTER.\n*****************************************************************\n*-* HERE FOR MSG/BMP START/STOP MSG\n*-*       IF MSG/BMP START\n*-*         IF FEAT=16 (DEC)\n*-*           IF OUR PST DOES NOT EXIST.\n*-*             THEN CREATE OUR PST EXTENSION AND POINT TO IT FROM\n*-*                         OUR SCD EXTENSION.\n*-*\n*-*       IF    BMP START/STOP MSG.\n*-*         IF THE FEAT=15 (DECIMAL) IS SET ON.\n*-*           THEN ADD PSBNAME.\n*\n         MVI   PST551FG,0          CLEAR THE MSG/BMP START/STOP FLAG.\n*************************************************\n*   DETERMINE START OR STOP.\n         MVI   PST551GF,C'A'\n         CLC   =C'DFS551',NUETXT        IF MSG-DFS551,\n         BE    PST551AS                   THEN PROCESS MSG/BMP STA.\n         CLC   =C'DFS552',NUETXT        IF MSG-DFS552,\n         BE    PST551AP                   THEN PROCESS MSG/BMP STO.\n         B     PST551WW                 IF NONE; SKIP OUT.\nPST551AS OI    PST551FG,PST551FS        FLAG FOR START.\n         B     PST551B\nPST551AP OI    PST551FG,PST551FP        FLAG FOR STOP.\n         B     PST551B\n*************************************************\n*   FIND REGION TYPE  1=MSG, 2=BMP.\nPST551B  #\n         MVI   PST551GF,C'B'\n         LA    R#W,NUETXT-1            START OF TEXT PRE-DECRMTD.\n         LA    R#X,20                  DEPTH TO SCAN.\nPST551L1 LA    R#W,1(R#W)              BUMP SCAN PTR.\n         CLC   =C' MESSAGE ',0(R#W)    Q. IS IT A MSG.\n         BE    PST551B1                  YES, OK.\n         CLC   =C' BATCH ',0(R#W)      Q. IS IT A BMP.\n         BE    PST551B2                  YES, OK.\n         BCT   R#X,PST551L1              NO, LOOP.\n         B     PST551WW                  NO, EXHAUSTED; EXIT.\nPST551B1 OI    PST551FG,PST551F1       FLAG AS TYPE=1=MSG\n         B     PST551C\nPST551B2 OI    PST551FG,PST551F2       FLAG AS TYPE=2=BMP\n         B     PST551C\n*************************************************\n*   FIND REGION NUMBER.\nPST551C  LA    R#X,40                  DEPTH TO SCAN.\n         MVI   PST551GF,C'C'\nPST551L2 LA    R#W,1(R#W)              BUMP SCAN PTR.\n         CLC   PST551C1,0(R#W)          Q. PST ID FOUND.\n         BE    PST551D                   YES, OK.\n         BCT   R#X,PST551L2              NO, LOOP.\n         B     PST551WW                  NO, EXHAUSTED; EXIT.\n**************************\nPST551D  #\n         MVI   PST551GF,C'D'\n         LA    R#X,L'PST551C1(R#W)     PTR TO CHAR AFTER COMPARAND.\n         ST    R#X,PST551A1            STO IT.        (R#X=FBA)\n         LA    R#X,10                  DEPTH TO SCAN.\nPST551L3 LA    R#W,1(R#W)              BUMP SCAN PTR.\n         CLI   0(R#W),C' '             Q. TRAILING BLANK FOUND\n         BE    PST551M                   YES, OK.     (R#W=LBA+1)\n         BCT   R#X,PST551L3              NO, LOOP.\n         B     PST551WW                  NO, EXHAUSTED; EXIT.\n**************************\nPST551M  MVC   PST551W1,PST551W0       INITIALIZE THE PST NUMBER.\n         MVI   PST551GF,C'M'\n         LA    M#T,PST551W1            PTR TO  \"TO\" FBA.\n         LR    E#M,R#W                 LBA+1\n         L     R#W,PST551A1                       (\"FROM\" FBA)\n         SR    E#M,R#W                   - FBA = LENGTH OF SOURCE.\n         LA    R#X,L'PST551W1                    LENGTH OF \"TO\".\n         SR    R#X,E#M                 AMOUNT BY WHICH \"TO\" > \"FROM\".\n         BC    EQ,PST551M0             IF 0, THEY ARE THE SAME.\n         BC    GT,PST551M4             IF +, THEN \"FROM\" < \"TO\"\n*      ********                        HERE WHEN  \"FROM\" > \"TO\"\n         B     PST551WW                THIS IS AN ERROR SO SKIP.\n*&\u00eb      AR    R#W,R#X                        SO INCREASE FROM FBA,\n*&\u00eb      SR    E#M,R#X                           DECREASE MVC LGTH.\n*&\u00eb      B     PST551M0                        AND MOVE.\n*      ********\nPST551M4 #                             HERE WHEN  \"FROM\" < \"TO\"\n         AR    M#T,R#X                        SO INCREASE \"TO\" FBA.\n*      ********\nPST551M0 #                             HERE WHEN ALL IS OK.\n         BCTR  E#M,0                     (-1 FOR MACH.CODE.)\n         EX    E#M,PST551MV            MOVE IT.\n         PACK  PST551WP,PST551W1       PST NUMBER.\n         CVB   R#W,PST551WP            PST NUMBER.\n         ST    R#W,PST551WB            PST NUMBER.\n*************************************************\n*   TAKE APPROPRIATE ACTION.\n*          (START LOGIC MUST PRECEDE PSB NAME LOGIC BECAUSE\n*           PSBNAME LOGIC IS DEPENDENT UPON THE CHAINING.   )\n         TM    PST551FG,PST551FS       Q. IS THIS A START.\n         BALC  ALLON,PST551SA,R=L##      YES; GO CHAIN OUR PST.\n         TM    PST551FG,PST551FP       Q. IS THIS A STOP.\n         BALC  ALLON,PST551QA,R=L##      YES; RIG TO IGNORE.\n         TM    PST551FG,PST551F2       Q. IS THIS A BMP.\n         BALC  ALLON,PST551PA,R=L##      YES; ADD PSB NAME.\n         B     PST551ZZ\n*       **\nPST551WW MVC   PST551FF,=A(*)\n         DLLINK (PMM,4),'NARAOUP0 PST EXTENSION ERROR- W=',(PST551GF,1)\nPST551ZZ STM   0,15,PST551RR\n         CLC   PMM(2),=Y(12)          Q. IS THE MSG  TRIVIALLY SMALL.\n         BC    LE,PST551Z9              YES, SMALL; SKIP.\n         DLLINK PMM,*WTP\n         DLLINK PMM,PMMCARR\n         L     R#W,PMSGMSGP           WHERE TO PUT MSG PTR.\n         MVC   0(4,R#W),=A(PMM)                PUT MSG PTR.\nPST551Z9 #\n         EPILOGUE\n*************************************************\n         SPACE 3\nPST551FF DC    A(0)\nPST551GF DC    A(0)\n  TITLE 'NARAOUP0 --- SUB ROUTINES.'\n*************************************************\n** S/R          TO ESTABLISH THE EXTENDED/AUXILIARY PST'S AND TO\n*   STO THE POINTERS INTO EACH OTHER.\nR#N      EQU   R2\n*B#C     EQU   R4\nB#D      EQU   R6\nB#B      EQU   R7\nB#A      EQU   R8\n*B#S     EQU   R11 IDENTITY W/IBM AT TIME OF CALL.  SCD ADDR.\nPST551SA BENT\n         USING   PST,B#B\n         USING   SCD,B#S\n         PUSH  PRINT\n         PRINT GEN\n         L       B#S,PST551SC\n         NARSCDF B#F,NARSCFB0      GET  FEATURES BASE.\n         TM    016*8(B#F),X'80'    Q. FEATURE #16 INFORCE.\n         BZ    PST551SZ              NO; IGNORE; CONTINUE NORMALLY.\n****************************************************\n*&\u00eb%$\n*   FIND  THE IBM PST.\n         L     R#N,PST551WB          REGN-NBR\n         L     R14,=A(X'80000000'+X31CBT1)  RIG POINTER TO CONTINUE. XA\n         BSM   0,R14                        SET AMODE=31.            XA\nX31CBT1  #                                                           XA\n         DFSCBTS  FUNC=FIND,TYPE=DPST,P1=(R#N,R),                      *\n               OPTION=NOSER,                                           *\n               PARM=PST551PM\n         LA    R14,X24CBT1                RIG POINTER TO CONTINUE.   XA\n         BSM   0,R14                      SET AMODE=24.              XA\nX24CBT1  #                                                           XA\n         LTR   R15,R15\n         BNZ   PST551SZ\n         LR    B#B,R1\n****************************************************\n*   FIND  OUR EXTENSION.\n         NARSCDF R#X,NARPSTSA          PTR TO  NUMBER,LENGTH.\n         L       R#N,PST551WB          REGN-NBR\n         CH      R#N,0(R#X)            REGN-NBR : MAX AVAIL OUR PST'S.\n         BC      GT,PST551S1            NOT ENOUGH; SKIP OUT.\n         NARSCDF B#A,NARPSTSL          PTR TO  LIST OF ADCON PAIRS.\n         SLL     R#N,3                 REGN-NBR * 8 = OFFSET IN LIST.\n         AR      B#A,R#N               PTR TO ADCON PAIR.\n         ICM     B#D,7,1(B#A)          GET  AUX  PST ADDR FROM LIST.\n         BNZ     PST551S5              IF PRESENT, THEN USE  IT.\n         IMODULE LOAD,EPLOC=PST551NM,SP=241,USE=NO NOT; LOAD IT.\n         ST      R15,PST551R5          STO RETCDS.\n         LTR     R15,R15               Q. AOK.\n         BNZ     PST551S2                NO; PSHAW.\n         LR      B#D,R0                  YES; GOT AN  ADDRESS.\n         ST      B#D,NARPSTRI-NARPSTSL(B#A)   STO EXTD PST IN LIST.\n         ST      B#B,NARPSTBM-NARPSTSL(B#A)   STO REAL PST IN LIST.\n         ST      B#B,NARPIPS0-NARPST#0(B#D)   STO REAL PST IN EXTD PST.\n         MVC   NARPSCD0-NARPST#0(4,B#D),PST551SC   REAL SCD IN AUX PST.\n         MVC   NARPRS10-NARPST#0(4,B#D),PST551RI   EXTD SCD IN AUX PST.\n         POP   PRINT\n         DLLINK (PMM,4),'OK'    IF MSG IS SHORT, THEN IT'S NOT SENT.\n         DLLINK (PMM,4),'NARAOUP0 PST EXTENSION LOADED.'\nPST551SZ BEXIT\n************************\nPST551S1 DLLINK (PMM,4),'NARAOUP0 PST EXTENSION NOT ATTEMPED.'\n         B     PST551SZ\nPST551S2 DLLINK (PMM,4),'NARAOUP0 PST EXTENSION FAILED.'\n         B     PST551SZ\nPST551S5 #\n         DLLINK (PMM,4),'NARAOUP0 PST EXTENSION ALREADY IN PLACE.'\n         DLLINK (PMM,4),'IN'    IF MSG IS SHORT, THEN IT'S NOT SENT.\n         B     PST551SZ\n************************\nPST551R5 DC    A(0)\nPST551NM DC    CL8'NARPST00'\n*************************************************\n         SPACE 9\n*************************************************\nPST551QA BENT\n         DLLINK (PMM,4),'STOP'     SHORT TO IGNORE.\n         BEXIT\n*************************************************\n         EJECT\n*************************************************\n**    S/R TO ADD THE PSB NAME ONTO THE BMP STARTED MESSAGE.\nPST551PA BENT\n         NARSCDF B#F,NARSCFB0      GET  FEATURES BASE.\n         TM    015*8(B#F),X'80'    Q. FEATURE #15 INFORCE.\n         BZ    PST551PZ              NO; IGNORE; CONTINUE NORMALLY.\n         NARSCDF R#X,NARPSTSA          PTR TO  NUMBER/SIZE WORD.\n         L       R#N,PST551WB          REGN-NBR\n         CH      R#N,0(R#X)            REGN-NBR : MAX AVAIL OUR PST'S.\n         BC      GT,PST551P1            NOT ENOUGH; SKIP OUT.\n         NARSCDF B#A,NARPSTSL          PTR TO  LIST OF ADCON PAIRS.\n         SLL     R#N,3                 REGN-NBR * 8 = OFFSET IN LIST.\n         AR      B#A,R#N               PTR TO ADCON PAIR.\n         ICM   R#W,7,4+1(B#A)          GET  REAL PST ADDR FROM LIST.\n         BZ    PST551P2                IF NONE.\n         ICM   R#X,7,PSTPSB-PST+1(R#W) PTR TO THE PDIR.\n         BZ    PST551P3                IF NONE.\n         MVC   PST551PN,PDIRSYM-PDIR(R#X) MOVE THE NAME.\n*        ***\n         LA    R#W,NUETXT                  BEGINNING OF MESSAGE\n         AH    R#W,0(R#W)                   + LGTH = LBA + 1.\n         MVC   0(PST551PL,R#W),PST551P0        ADD ON THERE.\n         LH    R#W,NUELL               ORIGINAL LENGTH\n         LA    R#W,PST551PL(R#W)        + ADDED LENGTH\n         STH   R#W,NUELL                 =  NEW LENGTH.\n         DLLINK (PMM,4),'OK'\n         DLLINK (PMM,4),'NARAOUP0 MSG REGN PSB NAME ADDED.'\nPST551PZ #\n         NARSCDF B#F,NARSCFB0\n         TM    015*8(B#F),X'01'\n         BZ    *+4+4\n         DC    A(0)\n         BEXIT\n***************************************\nPST551P1 DLLINK (PMM,4),'NARAOUP0 NOT ENUF NAR PST/S.'\n         B     PST551PZ\nPST551P2 DLLINK (PMM,4),'NARAOUP0 NO PST ADDRESS.'\n         B     PST551PZ\nPST551P3 DLLINK (PMM,4),'NARAOUP0 NO PDIR ADDRESS.'\n         B     PST551PZ\n**********************************************************************\n  TITLE 'NARAOUP0 --- CONSTANTS AND BUFFERS.'\n**********************************************************************\nPST551SC DC    A(0)\nPST551RI DC    A(0)\nPST551MV MVC   0(0,M#T),0(R#W)         MOVE THE PST NUMBER IN EBCDIC.\nPST551C1 DC    C'ID='\nPST551A1 DC    A(0)\nPST551W0 DC    CL4'0000'\nPST551W1 DC    CL4'0000'\nPST551WP DC    0D'0',PL8'0'\nPST551WB DC    A(0)\n*        ***\nPST551PK DC    C'  PSB='\nPST551PN DC    CL8' '\nPST551PL EQU   *-PST551PK\nPST551P0 EQU   PST551PK,PST551PL\n*        ***\nPST551FG DC    X'0'\nPST551F1 EQU   X'01'\nPST551F2 EQU   X'02'\nPST551FS EQU   X'40'\nPST551FP EQU   X'80'\nPST551RR DC    16A(0)\nPST551PM DC    A(*+4),2XL(CBTPLEN)'0'    PARM FIELD FOR DFSCBTS MACRO.\nPMSGPT1  DC    A(PMSGPT2)\nPMSGPT2  DC    A(PMSGCPYW)  ===> UEHCPYBF\nPMSGCPYW DC    XL64'0'\nPRSAVEAR DC    18A(0)\nPRSTMZ9  DC    18A(0)\nPMMCARR  DC    Y(5,0),X'15'\nPMSGMSGP DC    A(0)\nPMM      DC    CL200' '\n         LTORG\n         CNOPBIGR ORG=NARAOUP0\nNARAOUPZ EQU   *-1\n**********************************************************************\n  TITLE 'NARAOUC0 --- STACK THE LAST NNN COMMANDS IN A CIRCLE.'\n**********************************************************************\nNARAOUC0 CSECT\n         DROP\n*B#U     EQU   R3        BASE FOR THE UEHB.\n*B#C     EQU   R4        BASE FOR THE MSG/CMD BUFFER.\n*E#M     EQU   R6        LENGTH TO EXECUTE IN MACH CODE.\n*B#S     EQU   R11       *** IDENTITY W/ IBM AT TIME OF CALL.\n*L##     EQU   R14       LINK TO ALL SUB ROUTINES.\n*R#X     EQU   R14       WORKING REGISTER --- SHORT TERM FOR INDEXING.\n*R#W     EQU   R15       WORKING REGISTER --- SHORT TERM FOR MISC.\n         PROLOGUE SAVE=*PRECHN\n         L     B#S,0(R1)\n         L     B#U,4(R1)\n         USING UEHB,B#U\n         USING SCD,B#S\n         USING NUECPYBF,B#C\n         L     B#C,UEHCPYBF\n*        *****\n* THIS CODE IS TO KEEP IN CORE THE LAST NN COMMANDS ISSUED.\n*  THE MECHANIZATION IS TO KEEP A TABLE OF NN ADCON PAIRS;\n*  THE FIRST WORD POINTS TO THE NEXT ENTRY IN THE TABLE OF ADCON PAIRS;\n*  THE 2-ND  WORD POINTS TO THE PARTICULAR ELEMENT IN THE DATA STACK.\n*  (NECESSARILY THE LAST ENTRY POINTS TO THE FIRST)\n*  THE ADDRESS OF THE NEXT ADSON PAIR ENTRY TO BE USED IS KEPT\n*   IN A SEPARATE CONTROL WORD.\n*   (NECESSARILY THIS IS INITIALIZED TO POINT TO THE LAST ENTRY)\n* WHENEVER THE SYSTEM MAY ABEND, THE CONTROL WORD WILL POINT TO THE\n*  MOST-RECENTLY-USED ADCON PAIR ENTRY IN THE TABLE. THE ENTRIES\n*  MUST BE READ BACKWARD TO FIND THE LAST NN COMMANDS.\n*        *****\n         L     R#W,CCMDCTR0           GET PTR TO PREVIOUS ENTRY.\n         L     R#W,4(R#W)                 PTR TO NEXT CONTROL PAIR.\n         L     R#X,8(R#W)                 PTR TO ELEMENT IN THE STACK.\n         MVC   0(L'CCMDSTAK,R#X),0(B#C)   COPY COMMAND INTO THE STACK.\n         ST    R#W,CCMDCTR0           STO PTR TO       THIS ENTRY.\n         EPILOGUE\n*********************************\n*\n*********************************\nCCNN     EQU   10\nCCTL     EQU    8\nCCSL     EQU   32\nCCMDCTR0 DC    A(CCMDCTRZ)\n** FOLLOWING IS A LIST OF POINTER-PAIRS CONTROLLING THE STACK.\n*        DC   NN-A(PTR_TO_NEXT_PAIR, PTR_TO_A_STACK_ELEMENT)\n         PUSH PRINT\n         PRINT GEN,DATA\nCCMDCTRL DC    (CCNN)A(*+CCTL,CCMDSTAK+((*-CCMDCTRL)/CCTL)*L'CCMDSTAK)\n         ORG   *-CCTL OVERLAY LAST ENTRY\nCCMDCTRZ DC      A(CCMDCTRL) W/ PTR TO FIRST ENTRY.\n         ORG\n         POP  PRINT\n         DC    C'NARAOUC0 --- THE LAST NN COMMANDS FOLLOW HERE'\nCCMDSTAK DC    (CCNN)XL(CCSL)'0'\n         CNOPBIGR ORG=NARAOUC0\nNARAOUCZ EQU   *-1\n**********************************************************************\n  TITLE 'NARAOUE0 --- D-S-E-C-T-S'\n**********************************************************************\n         NARSCD\n         NARCPY\n         NARUEBUF\n         UEHB\n         DFSCBTS FUNC=DSECT\n*        PRINT NOGEN\n         ISCD  SCDBASE=0\n         PRINT NOGEN\n         IDLI  PSTBASE=0,PDRBASE=0\n         IAPS  SMBBASE=0\n         ICLI  CNTBASE=0\n         END\n//L.IMSLOAD DD DISP=SHR,DSN=IMS.LOAD\n//L.SYSIN DD *\n  INCLUDE IMSLOAD(KEYFLAGS)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSCBT10": {"ttr": 3333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x12\\x00\\x12\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31BT JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  (       IMA.RECORD(DFSCBT10))  ***\n//DFSCBT10 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSCBT10,LMEMBER=DFSCBT1H,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *\n./  CHANGE  NAME=DFSCBT10\n*  THIS LINE ADDED TO FORCE RE-ASSEMBLY FOR LOCAL MOD TO ILOGREC    #28\n         SPACE 1                                                    #28\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSCFE80": {"ttr": 3335, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x15\\x00\\x15\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMSCFE8 JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=YA3324\n//*MAIN CLASS=L\n//*********************************  (IMA.RECORD(DFSCFE80))  ***\n//DFSCFE80 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=DFSCFE80,LMEMBER=DFSCFE8E,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN1 DD  *     RW0044A\n./  CHANGE  NAME=DFSCFE80\n*******  DC    CL5' ',X'00',CL7' ',X'000E0F'                  @PL21098\n         DC    CL5' ',X'00',CL7' ',X'004040'              @PL12568 #44A\n*******  ABOVE FIX OF ERRONEOUS 'KANJI' IBM CODE IN 'IME' LEVEL    #44A\n         DC    CL5' ',X'0000',CL7' ',X'1E40'       1E=FIELD MARK   #44A\n*******  ABOVE FOR AUTONETICS AND FOR \"Z\" TRANSACTION  *********   #44A\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSCKWD0": {"ttr": 3337, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x003\\x003\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 51, "newlines": 51, "modlines": 0, "user": "HOSKINS"}, "text": "//$A1041UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1041\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSCKWD0))  ***\n//DFSCKWD0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=DFSCKWD0,LMEMBER=DFSCKWDL,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   LINEC=54,\n//*  CONDL=0,\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN1 DD  *   RW0101A   ADDED SYNONYMS AND KEYWORDS\n./ CHANGE   NAME=DFSCKWD0\n         PRINT NOGEN                                              #101A\n         SYN   ACT                                                #101A\n         SYN   AAA                                                #101A\n         SYN   ASS                                                #101A\n         SYN   ASG                                                #101A\n         SYN   CHE                                                #101A\n         SYN   CMP                                                #101A\n         SYN   CON                                                #101A\n         SYN   CP                                                 #101A\n         SYN   DIRECTORY                                          #101A\n         SYN   LLL                                                #101A\n         SYN   LP                                                 #101A\n         SYN   LTT                                                #101A\n         SYN   NNN                                                #101A\n         SYN   NP                                                 #101A\n         SYN   PASS                                               #101A\n         KEYWD PITRACE                                            #101A\n         SYN   POOLS                                              #101A\n         SYN   PRI                                                #101A\n         SYN   PPP                                                #101A\n         SYN   PTT                                                #101A\n         SYN   PUR                                                #101A\n         SYN   SHUT                                               #101A\n         SYN   STS                                                #101A\n         SYN   SSS                                                #101A\n         SYN   TTT                                                #101A\n//SYSNUSED DD  DATA\n//U.SYSIN2 DD  *   RW0102B   MAKE \"ALL\" INVALID FOR LTERM & NODE\n./ CHANGE   NAME=DFSCKWD0\n         ENTRY DFSLTE              ENTRY FOR DFSICL30             #102B\n         KEYWD LTERM,ALL=NO                                       #102B\n         KEYWD NODE,ALL=NO                                        #102B\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSCOFC0": {"ttr": 3339, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x80\\x00\\x80\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 128, "newlines": 128, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31CF JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=996K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//COFC0     EXEC IMSUPDTE,SMEMBER=DFSCOFC0,LMEMBER=DFSCOFCH,\n//             P=IMA,LOAD='PVT.MODS',RE=RENT,DISPR=SHR,\n//  DECK='NODECK,SYSPARM(S)',\n//*CONDL=0,\n//  SYMI=SOURCETM,SYMO=SOURCETM,RECORD=NO,ACCT=1,SOUT='*'\n//SYSIN  DD *\n./DFSCOFC0 CHANGE NAME=DFSCOFC0\n*/ NUMBER INSERT=YES,SEQ1=00119000,NEW1=00119111,INCR=001 00119000 BGN\n         MVC   NARMNM08,=CL8' '    RESET OUR NAME.\n*        TM    CIBBFLAG,CIBBOFMT   Q. DEVICE FORMATTED FOR OUT.\n*        BZ    NARSACOV              NO; MUST BE CLEARED; SKIP.\n*        ICM   R#X,15,CTBRACFT     Q. SIGNED ON.\n*        BNZ   NARSACMA              YES; SKIP A FEW NAMES.\n*        CLC   CIBMNAME,NARMODX1   Q. SACRED NAME ALREADY SET.\n*        BE    NARSACSV              YES; SAVE THIS.\n*        CLC   CIBMNAME,NARMODX2   Q. SACRED NAME ALREADY SET.\n*        BE    NARSACSV              YES; SAVE THIS.\nNARSACMA #\n*        CLC   CIBMNAME,NARMODX4   Q. SACRED NAME ALREADY SET.\n*        BE    NARSACSV              YES; SAVE THIS.\n*        CLC   CIBMNAME,NARMODX5   Q. SACRED NAME ALREADY SET.\n*        BE    NARSACSV              YES; SAVE THIS.\n*        CLC   CIBMNAME,NARMODX6   Q. SACRED NAME ALREADY SET.\n*        BE    NARSACSV              YES; SAVE THIS.\n         CLC   =C' X',CIBMNAME+6   Q. SACRED NAME ALREADY SET.\n         BE    NARSACSV              YES; SAVE THIS.\n         B     NARSACOV            IF NONE MATCH; THEN SKIP OUT.\nNARSACSV MVC   NARMNM07,CIBMNAME   REMEMBER THIS ONE.\n         ST    R6,NARMCIB0         SAVE CIB ADDR.\nNARSACOV #\n*/ NUMBER INSERT=YES,SEQ1=00119000,NEW1=00119111,INCR=001 00119000 END\n*/ NUMBER INSERT=YES,SEQ1=00241000,NEW1=00241111,INCR=001 00241000 BGN\n         SPACE 3\n**************************************************************\nB#D      EQU   14\nR#X      EQU   14\nB#F      EQU   15\n         TM    CTBFLAG1,CTB1MAST   MASTER TERMINAL?\n         BO    NARNORML            YES - USE DEFAULT FORMAT\n         TM    CTBFEAT,CTBFPRTR    Q. IS IT A PRINTER.\n         BO    NARNORML              YES, SKIP.\n         LA      B#F,SCD                                PTR TO SCD.\n         NARSCDF B#F,NARSCFB0,KNOWN=SCD,FAILX=NARNORML  GET FEAT BASE.\n         CLC   CLBTEMP5+2(2),=H'2002' TERMINAL CONNECTED MSG?\n         BE    NARSIGN             YES - SET UP SIGN FORMAT\n         TM    003*8(B#F),X'80'    Q. FEATURE # 3 INFORCE.\n         BZ    NARNORML              NO; IGNOR FLAG; CONTU NRML.\n         CLI   NARMNM08,C' '       Q. SACRED NAME SET.\n         BE    NARNORML              NO; LEAVE ALONE\n         C     R6,NARMCIB0         Q. SAME CIB WHEN SACRED FOUND.\n         BE    NARSACRD              YES; RE-ESTAB ORIG NAME.\n         LH    R#X,003*8+4(B#F)      NO; HAVE RE-ENTRANT PROBLEM.\n         LA    R#X,1(R#X)                 BUMP FAILURE COUNTER.\n         STH   R#X,003*8+4(B#F)            BY ONE;\n         B     NARNORML                     AND LEAVE.\n************************************\nNARSACRD MVC   CIBMNAME,NARMNM08   RE-ESTABLISH THE SACRED NAME.\n         B     NARCONTU\n************************************\nNARSIGN  #                SPECIAL FORMAT NEEDED, MOST LIKELY.\n         NARSCDF B#D,NARSDEV0      FIND CRT DEV TABLE BASE.\n*WARNING TRT   ** DESTROYS GPR'S  R1 & R2; WHICH AREN'T USED.**\n         TRT   CTTDEVIC,0(B#D)     Q. IS IT A  REGULAR CRT.\n         BZ    NARNORML              NO,  SKIP.\n         TM    001*8(B#F),X'80'    Q. FEATURE # 1 INFORCE.\n         BZ    *+4+6                 YES, GO DO IT.\n         MVC   CIBMNAME,NARMOD01  SET SIGNON MOD NAME #1.\n         TM    002*8(B#F),X'80'    Q. FEATURE # 2 INFORCE.\n         BZ    *+4+6                 YES, GO DO IT.\n         MVC   CIBMNAME,NARMOD02  SET SIGNON MOD NAME #2.\n         B     NARCONTU            AND CONTINUE.\n************************************\n*\n************************************\nNARMOD01 DC    CL8'IMS'            MOD NAME FOR SIGNON  FEAT#1\nNARMOD02 DC    CL8'SIGNON'         MOD NAME FOR SIGNON  FEAT#2\nNARMODX1 DC    CL8'IMS    X'       COMP NAM FOR SIGNON  FEAT#1\nNARMODX2 DC    CL8'SIGNON X'       COMP NAM FOR SIGNON  FEAT#2\nNARMODX4 DC    CL8'DFSMO2 X'       COMP NAM FOR SIGNON  FEAT#4\nNARMODX5 DC    CL8'IMSYN  X'       COMP NAM FOR SIGNON  FEAT#5\nNARMODX6 DC    CL8'IMSYM  X'       COMP NAM FOR SIGNON  FEAT#6\nNARMNM08 DC    CL8'        '       SACRED NAME KEPT HERE.\nNARMNM07 EQU   NARMNM08,7          SACRED NAME L-MOST 7 BYTES\nNARMCIB0 DC    A(0)                CIB ADDR FOR RE-ENT CHECK.\n********************\n*\n********************\nNARCONTU #                ALTERED FORMAT NAME PROCESSING CONT.\nNARNORML #                NORMAL  FORMAT NAME PROCESSING CONT.\n**************************************************************\n**\n**************************************************************\n         SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=00241000,NEW1=00241111,INCR=001 00241000 END\n./ NUMBER INSERT=YES,SEQ1=00263000,NEW1=00263111,INCR=001 00263000 ---\n*/ NUMBER INSERT=YES,SEQ1=00263000,NEW1=00263111,INCR=001 00263000 BGN\n         TM    CTBFLAG1,CTB1MAST   MASTER TERMINAL?\n         BO    NARNORM2            YES - USE DEFAULT FORMAT\n         TM    CTBFEAT,CTBFPRTR    Q. IS IT A PRINTER.\n         BO    NARNORM2              YES, SKIP.\n         LA      B#F,SCD                               PTR TO SCD.\n         NARSCDF B#F,NARSCFB0,KNOWN=SCD,FAILX=NARNORM2  GET FEAT BASE.\n         TM    003*8(B#F),X'80'    Q. FEATURE # 3 INFORCE.\n         BZ    NARNORM2              NO; IGNOR FLAG; CONTU NRML.\n*\n         CLI   NARMNM08,C' '       Q. SACRED NAME SET.\n         BE    NARNORM2              NO; LEAVE ALONE\n         C     R6,NARMCIB0         Q. SAME CIB WHEN SACRED FOUND.\n         BE    NARSACR2              YES; RE-ESTAB ORIG NAME.\n         LH    R#X,003*8+6(B#F)      NO; HAVE RE-ENTRANT PROBLEM.\n         LA    R#X,1(R#X)                 BUMP FAILURE COUNTER.\n         STH   R#X,003*8+6(B#F)            BY ONE;\n         B     NARNORM2                     AND LEAVE.\n************************************\nNARSACR2 MVC   CIBMNAME,NARMNM08   RE-ESTABLISH THE SACRED NAME.\n         B     NARCONT2\nNARCONT2 #                ALTERED FORMAT NAME PROCESSING CONT.\nNARNORM2 #                NORMAL  FORMAT NAME PROCESSING CONT.\n************************************\n*/ NUMBER INSERT=YES,SEQ1=00263000,NEW1=00263111,INCR=001 00263000 END\n         NARSCD                                                    HUGH\n         EJECT                                                     HUGH\n         COPY DCTL327V                                             HUGH\n         EJECT                                                     HUGH\n         PRINT NOGEN                                               HUGH\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSCPY00": {"ttr": 3342, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00=\\x00=\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 61, "newlines": 61, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31CP JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=RMP01,CLASS=L\n//*********************************  (       IMA.RECORD(DFSCPY00))  ***\n//DFSCPY00 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSCPY00,LMEMBER=DFSCPY0H,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *   RW0028D   PROCESS \"SETC\" DL/I CALL\n./  CHANGE  NAME=DFSCPY00\n*                                                              #28/SETC\n*&%$#    SPKA  0(R15)              GOTO USER'S KEY.            #28/SETC\n         CL    R2,=C'SETC'         'SETC' CALL?                #28/SETC\n*&%$#    SPKA  7*16                BACK TO KEY 7.              #28/SETC\n         BE    FRCBRNCH            ..YES, GO FORCE BRANCH.     #28/SETC\n*                                                              #28/SETC\nFRCBRNCH EQU   *                                               #28/SETC\n*&%$#    SPKA  0(R15)              GOTO USER'S KEY.            #28/SETC\n         CL    R14,=C'SETC'        'SETC' CALL?                #28/SETC\n*&%$#    SPKA  7*16                BACK TO IMS KEY.            #28/SETC\n         BE    SETCCALL            ..YES, HANDLE THIS CALL.    #28/SETC\n*                                                              #28/SETC\n./ NUMBER INSERT=YES,SEQ1=09800000,NEW1=09800010,INCR=010  09800000 ---\n         SPACE 2\n***************************************************************#28/SETC\n*    THIS ROUTINE PROCESSES THE ROCKWELL 'SETC' CALL.          #28/SETC\n*                                                              #28/SETC\n*    REGISTERS AT ENTRY:                                       #28/SETC\n*           R5:  A(PSTDIAG COPY OF USER PARM LIST)             #28/SETC\n*           R4:  A(PST)                                        #28/SETC\n*           R11: A(SCD)                                        #28/SETC\n*           R15: DEPENDANT REGION KEY                          #28/SETC\n***************************************************************#28/SETC\n*                                                              #28/SETC\nSETCCALL DS    0H                                              #28/SETC\n         LR    R1,R15              USER'S KEY TO R1.           #28/SETC\n         LR    R15,R4              A(PST) TO R15.              #28/SETC\n         NARPSTF R15,FAILX=SETCRTN      FIND OUR EXTENDED PST. #28/SETC\n         L     R15,NARPSTJ0-NARPST#0(,R15) PTR TO ACCTNG AREA. #28/SETC\n         USING NARPSTK0,R15                                    #28/SETC\n         L     R14,8(,R5)          GET USER'S I/O AREA ADDR    #28/SETC\n         LA    R3,11               DEVELOP LENGTH TO BE MOVED. #28/SETC\n         MVCK  NARPCHG0(R3),0(R14),R1  MVE 11 BYTES TO ACCTAREA#28/SETC\n         MVC   NARPCHI0,G2SETMRK   SET TYPE MARKER INDICATOR.  #28/SETC\nSETCRTN  EQU   *                                               #28/SETC\n         L     R3,PSTSAV1          SET A(SAP) FOR EXIT         #28/SETC\n         B     RPLYSETC             AND EXIT.                  #28/SETC\n*                                                              #28/SETC\nG2SETMRK DC    CL4'CPY$'  MARKER SHOWING \"CHG#-FROM-DFSCPY00\". #28/SETC\n*        DC    C'&SYSDATE-&SYSTIME'                            #28/SETC\n         EJECT                                                 #28/SETC\nRPLYSETC DS    0H                  ENTRY FOR SETC CALL         #28/SETC\n         EJECT                                                 #28/SETC\n         NARSCD                                                #28/SETC\n         SPACE 1                                               #28/SETC\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSDBH10": {"ttr": 3344, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x1e\\x00\\x1e\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "HOSKINS"}, "text": "//$A1041UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1041\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSDBH10))  ***\n//DFSDBH10 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDB,SYMO=SOURCEDB,\n//   SMEMBER=DFSDBH10,LMEMBER=DFSDBH1L,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN1 DD  *   RW0028E\n./  CHANGE  NAME=DFSDBH10\n*                                                                   #28\n         B     OVDBHFLG                                             #28\n         DC    C'FLG@DBH1'         FLAG TO BE CHECKED IN DFSIDSP0.  #28\nOVDBHFLG DS    0H                                                   #28\n*                                                                   #28\n//U.SYSIN2 DD  *   RW0027B\n./  CHANGE  NAME=DFSDBH10\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 12   COUNT # OF CREATE NEW LRECL OR BLOCK.     SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         EJECT                                                SYS/IWAIT\n         PRINT ON,GEN                                         SYS/IWAIT\n         NARSCD                                               SYS/IWAIT\n         EJECT                                                SYS/IWAIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSDBH20": {"ttr": 3346, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00%\\x00%\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 37, "newlines": 37, "modlines": 0, "user": "HOSKINS"}, "text": "//$A1041UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1041\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSDBH20))  ***\n//DFSDBH20 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDB,SYMO=SOURCEDB,\n//   SMEMBER=DFSDBH20,LMEMBER=DFSDBH2L,\n//   RE='RENT,REFR',\n//** CONDL=0,\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN1 DD  *   RW0028F\n./ CHANGE   NAME=DFSDBH20\n*                                                                   #28\n         B     OVDBHFLG                                             #28\n         DC    C'FLG@DBH2'         FLAG TO BE CHECKED IN DFSIDSP0.  #28\nOVDBHFLG DS    0H                                                   #28\n*                                                                   #28\n//U.SYSIN2 DD  *   RW0027C\n./ CHANGE   NAME=DFSDBH20\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 13    COUNT BUFFER STEALS ISAM WRITES.         SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 14    COUNT BUFFER STEALS OSAM WRITES.         SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 15    COUNT BUFFER STEALS ISAM READS.          SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 16    COUNT BUFFER STEALS OSAM READS.          SYS/IWAIT\n         EJECT                                                SYS/IWAIT\n         NARSCD                                               SYS/IWAIT\n         EJECT                                                SYS/IWAIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSDBH30": {"ttr": 3348, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00#\\x00#\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "HOSKINS"}, "text": "//$A1041UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1041\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSDBH30))  ***\n//DFSDBH30 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDB,SYMO=SOURCEDB,\n//   SMEMBER=DFSDBH30,LMEMBER=DFSDBH3L,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN1 DD  *   RW0028G\n./  CHANGE  NAME=DFSDBH30\n*                                                                   #28\n         B     OVDBHFLG                                             #28\n         DC    C'FLG@DBH3'         FLAG TO BE TESTED IN DFSIDSP0.   #28\nOVDBHFLG DS    0H                                                   #28\n*                                                                   #28\n//U.SYSIN2 DD  *   RW0027D\n./  CHANGE  NAME=DFSDBH30\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 17    COUNT BUFFER PURGES, SINGLE ISAM WRITES. SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 18    COUNT BUFFER PURGES, SINGLE OSAM WRITES. SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 19    COUNT BUFFER PURGES, QUEUED WRITES.      SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         EJECT                                                SYS/IWAIT\n         NARSCD                                               SYS/IWAIT\n         EJECT                                                SYS/IWAIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSDISM0": {"ttr": 3585, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x16\\x00\\x16\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "HOSKINS"}, "text": "//$A1041UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1041\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSDISM0))  ***\n//DFSDISM0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDB,SYMO=SOURCEDB,\n//   SMEMBER=DFSDISM0,LMEMBER=DFSDISML,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *   RW0027E   SYS/IWAIT COUNTERS\n./  CHANGE  NAME=DFSDISM0\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 20,SCD=PSTSCDAD   # OF BISAM READS.            SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         EJECT                                                SYS/IWAIT\n         NARSCD                                               SYS/IWAIT\n         EJECT                                                SYS/IWAIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSDLA00": {"ttr": 3587, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x01\\x15\\x01\\x15\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 277, "newlines": 277, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31DA JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=RMY24,CLASS=L\n//******************************* (       IMA.RECORD(DFSDLA00)) ******\n//DFSDLA00 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSDLA00,LMEMBER=DFSDLA0G,\n//** CONDL=0,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN1 DD  *    RW0028H   PROCESS \"SETC\" (PARTIAL) CALL.\n./ CHANGE   NAME=DFSDLA00\n**************************************************             #28/SETC\n         SPACE 1                                               #28/SETC\n         L     R4,=A(NARCDTST)     GO TEST FOR NAR CODES       #28/SETC\n         BR    R4                                              #28/SETC\n*                                                              #28/SETC\nOVNARTST DS    0H                  RETURN HERE IF NOT NAR CODE #28/SETC\n         SPACE 3                                               #28/SETC\n./ NUMBER INSERT=YES,SEQ1=34230080,NEW1=34230081,INCR=001      #28/SETC\n*/ NUMBER INSERT=YES,SEQ1=34230080,NEW1=34230081,INCR=001  BGN #28/SETC\n         SPACE 2                                               #28/SETC\n************************************************************** #28/SETC\n         L     R4,=A(SETCSET)      GET ADDR OF SETC ROUTINE    #28/SETC\n         BR    R4                  GO TO IT                    #28/SETC\n*                                                              #28/SETC\nNOTSETC  EQU   *                                               #28/SETC\n************************************************************** #28/SETC\n         SPACE 2                                               #28/SETC\n*/ NUMBER INSERT=YES,SEQ1=34230080,NEW1=34230081,INCR=001  END #28/SETC\n./ NUMBER INSERT=YES,SEQ1=62220000,NEW1=62220025,INCR=001      #28/SETC\n*/ NUMBER INSERT=YES,SEQ1=62220000,NEW1=62220025,INCR=001  BGN #28/SETC\n         SPACE 2                                               #28/SETC\n*************************************************************  #28/SETC\n         TITLE 'ROCKWELL MODIFICATIONS  '                      #28/SETC\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  #28/SETC\n* * *                                                   * * *  #28/SETC\n* * *    R O C K W E L L   M O D I F I C A T I O N S    * * *  #28/SETC\n* * *                                                   * * *  #28/SETC\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  #28/SETC\n         SPACE 2                                               #28/SETC\n*                                                              #28/SETC\nNARCDTST DS    0H                                              #28/SETC\n         USING *,R4                TELL THE ASSEMBLER          #28/SETC\n         SR    R15,R15             CLEAR R15                   #28/SETC\n         LA    R2,SETCCODE         POINT TO SETC CODE          #28/SETC\n         CL    R5,SETCCODE         IS FUNCTION = 'SETC'?       #28/SETC\n         BE    RFUNCFND            YES, BRANCH                 #28/SETC\n         L     R14,=A(OVNARTST)    GET ADDR OF OVNARTST        #28/SETC\n         L     R4,SECBASE          RESTORE 2ND BASE REG        #28/SETC\n         BR    R14                 RETURN TO OVNARTST          #28/SETC\nRFUNCFND DS    0H                                              #28/SETC\n         L     R14,=A(FUNCFND)     GET ADDR OF FUNCFND         #28/SETC\n         L     R4,SECBASE          RESTORE 2ND BASE REG        #28/SETC\n         BR    R14                 RETURN TO FUNCFND           #28/SETC\n******************************                                 #28/SETC\n         DS    0F                                              #28/SETC\n*        ******                                                #28/SETC\nSETCCODE DC    CL4'SETC'                                       #28/SETC\n         DC    X'C3'                                           #28/SETC\n         DC    X'000000'                                       #28/SETC\n         SPACE 2                                               #28/SETC\n************************************************************** #28/SETC\n         LTORG                                                 #28/SETC\n************************************************************** #28/SETC\n         EJECT                                                 #28/SETC\n*                                                              #28/SETC\nSETCSET  DS    0H                                              #28/SETC\n         USING *,R4                TELL THE ASSEMBLER          #28/SETC\n         CLI   PSTFUNCT,X'C3'      SPECIAL 'SETC' CALL?        #28/SETC\n         BNE   NOTSETCS            NO,  BRANCH                 #28/SETC\n         TM    PSTCODE1,PSTP3RGN   IS THIS A BATCH REGION?     #28/SETC\n         BO    GOTORET6            YES, IGNORE THE SETC CALL   #28/SETC\n         TM    PSTVSFLG,PSTVS1     IS THIS A VS ANALYZE CALL?  #28/SETC\n         BZ    GOTORET2            NO, EXIT WITHOUT TRACE      #28/SETC\n*                                                              #28/SETC\n*        LR    R15,R1              A(PST) TO R15               #28/SETC\n*        NARPSTF R15               FIND OUR EXTENDED PST       #28/SETC\n*        L     R15,NARPSTJ0-NARPST#0(,R15) PTR TO ACCTNG AREA  #28/SETC\n*        USING NARPSTK0,R15                                    #28/SETC\n*        L     R14,8(,R9)          POINT TO USER'S I/O AREA    #28/SETC\n*        MVC   NARPCHG0(11),0(R14) MVE 11 BYTES TO ACCTNG AREA #28/SETC\n*        OI    PSTVSFLG,PSTVS3     MARK PSEUDO CALL COMPLETED  #28/SETC\n*        DROP  R15                                             #28/SETC\n*                                                              #28/SETC\nGOTORET6 EQU   *                                               #28/SETC\n         L     R15,=A(RETURN6)     GET ADDR OF RETURN6         #28/SETC\n         L     R4,SECBASE          RESTORE 2ND BASE REGISTER   #28/SETC\n         BR    R15                 GO TO RETURN6               #28/SETC\nGOTORET2 EQU   *                                               #28/SETC\n         L     R15,=A(RETURN2)     GET ADDR OF RETURN2         #28/SETC\n         L     R4,SECBASE          RESTORE 2ND BASE REGISTER   #28/SETC\n         BR    R15                 GO TO RETURN2               #28/SETC\nNOTSETCS EQU   *                                               #28/SETC\n         L     R15,=A(NOTSETC)     GET ADDR OF NOTSETC         #28/SETC\n         L     R4,SECBASE          RESTORE 2ND BASE REGISTER   #28/SETC\n         BR    R15                 GO TO NOTSETC               #28/SETC\n         SPACE 2                                               #28/SETC\n************************************************************** #28/SETC\n         LTORG                                                 #28/SETC\n************************************************************** #28/SETC\n**                                                             #28/SETC\n**                                                             #28/SETC\n************************************************************** #28/SETC\n         SPACE 2                                               #28/SETC\n*/ NUMBER INSERT=YES,SEQ1=62220000,NEW1=62220025,INCR=001  END #28/SETC\n**       HANG ANOTHER GRUNCH HERE  MUST BE 62220100            #28/SETC\n//U.SYSIN2 DD  *    RW0029A   PROCESS \"LOG\" CALL.\n./ CHANGE   NAME=DFSDLA00\n         NARSCD                                                #29/WLOG\n         CLI   XLOGCODE,X'A0'      Q. IS THIS A NONUSER CALL.  #29/WLOG\n         BL    OVNAR29H              YES; SKIP NAR SIZE TESTS. #29/WLOG\n         CLC   0(2,R10),=AL2(PSTLOGWS-(NARLR+48)) IF TOOO BIG, #29/WLOG\n         BH    BADLENG             RETURN 'AT' STATUS CODE     #29/WLOG\n         SRL   R5,2                ONLY 1/4 OF MAX LENGTH      #29/WLOG\nOVNAR29H #                                                     #29/WLOG\n         L     R4,=A(NARSLOG)      GO TO NAR'S ROUTINE TO MAKE #29/WLOG\n         BR    R4                   A LOG RECORD.              #29/WLOG\n*                                                              #29/WLOG\nNARRET2X EQU   *                                               #29/WLOG\n./ NUMBER INSERT=YES,SEQ1=62220100,NEW1=62220110,INCR=001      #29/WLOG\n*/ NUMBER INSERT=YES,SEQ1=62220100,NEW1=62220110,INCR=001  BGN #29/WLOG\n         EJECT                                                 #29/WLOG\n*                                                              #29/WLOG\nNARSLOG  DS    0H                                              #29/WLOG\n         USING *,R4                TELL THE ASSEMBLER          #29/WLOG\n***********************************************************    #29/WLOG\n*        EQU   R0                  MUST RELOAD THESE W/ SCD ADDR.   #29\nP#P      EQU   R1  ** IDENTITY **  BASED ON IBM'S PST PTR NOW. #29/WLOG\nR#P      EQU   R3  ** IDENTITY **  AREA POINTER LOADED HERE.   #29/WLOG\nR#A      EQU   R5                  FREE REG BECOMES SAVE PTR.  #29/WLOG\n*        EQU   R6                  MUST RELOAD THESE W/ SCD ADDR.   #29\nR#C      EQU   R7                  PTR TO ACCTG AREA IN NARPST #29/WLOG\nR#F      EQU   R8                  CONTAINS SETC FLAG.         #29/WLOG\nR#L      EQU   R9                  CONTAINS SETC LENGTH.       #29/WLOG\n*        EQU   R10 ** IDENTITY **  PTR TO THE SEGMENT TO LOG.  #29/WLOG\nR#W      EQU   R15                                             #29/WLOG\n***************************************                        #29/WLOG\n         CLI   4(R10),X'A0'        Q. IS IT NON-USER TYPE.     #29/WLOG\n         BL    NARORIG               YES; USE IBM FORM OF CALL.#29/WLOG\n         LR    R#A,P#P             A(PST) TO R(R#A).           #29/WLOG\n         NARPSTF R#A,FAILX=NARORIG PTR TO EXTRA/AUXILARY PST.  #29/WLOG\n         L     R#A,(NARPSTV0-NARPST#0)(R#A)  PTR TO S/A.       #29/WLOG\n*&\u00eb%     LR    R0,R6               RESTORE SCD ADDR.           #29/WLOG\n         STM   R0,R15,0(R#A)       SAVE EM AND RELAX.          #29/WLOG\n******************************                                 #29/WLOG\n*&\u00eb%     L     R4,(4*(4+0))(R#A)   RESTORE OUR CURRENT BASE REG.    #29\n         L     R#P,PSTLOGWA        PTR TO LOG WORK AREA.       #29/WLOG\n******************************                                 #29/WLOG\n         CLC   =C'SETC',4(R10)     Q. IS THIS A \"SETC\" LOG.    #28/SETC\n         BNE   NARSTACK              NO; SKIP OVER.            #28/SETC\n         LR    R#C,P#P             A(PST) TO R#C               #28/SETC\n         NARPSTF R#C,FAILX=NARSTACK     FIND OUR EXTENDED PST  #28/SETC\n         L     R#C,NARPSTJ0-NARPST#0(,R#C) PTR TO ACCTNG AREA  #28/SETC\n         USING NARPSTK0,R#C                                    #28/SETC\n         XR    R#L,R#L             CLEAR REGISTER.             #28/SETC\n         IC    R#L,1(,R10)         GET LENTH OF REC.(0000000L) #28/SETC\n         XC    NARPCHF0(02),NARPCHF0 CLEAR L-HALF OF FLAG WORD.#28/SETC\n         LR    R#F,R#L               SAVE ORIG LEN  (0000000L) #28/SETC\n         C     R#L,=A(NARPCHM0)      Q. IS LEN TOO LONG.       #28/SETC\n         BNH   NARLENOK                NO, GOOD; CONTINUE.     #28/SETC\n         O     R#F,=A(X'80')           YES; FLAG IT (0000008L) #28/SETC\n         LA    R#L,NARPCHM0                  & SET MAX.        #28/SETC\nNARLENOK LR    R#W,R#L               COPY LENGTH  (000000LL)   #28/SETC\n         SLL   R#W,16                SHIFT IT TO  (00LL0000)   #28/SETC\n         ST    R#W,NARPCHL0          STORE IT.    (00LL0000)   #28/SETC\n         S     R#L,=A(5)             MACH CODE LEN OF DATA.    #28/SETC\n         EX    R#L,NARSCMVC          MOVE THE DATA.            #28/SETC\n         SLL   R#F,8                 SHIFT THE FLAG (0000XL00) #28/SETC\n         STH   R#F,NARPCHF0          STO R-H OF REG            #28/SETC\n*                                     AS L-H OF FLAG(XL00UUUU) #28/SETC\n*                                                              #28/SETC\n******************************                                 #29/WLOG\n***  STACK THE COMBINED PIECES IN THE NEW CORE.                #29/WLOG\nNARSTACK #                                                     #29/WLOG\n         USING NARRDW,R#P                                      #29/WLOG\n         XC    NARRDWLR,NARRDWLR   CLEAR PRFIX.                #29/WLOG\n         MVC   NARRDW(16),NARRDW00 MOVE PREFIX W/RDW ATTACHED. #29/WLOG\n         LH    R#W,0(R10)          USERS LENGTH                #29/WLOG\n         STH   R#W,NARUSRLL            (COPIED)                #29/WLOG\n         AH    R#W,NARRDW00         + SYSTEM OVHD  =  TOTAL LENGTH. #29\n         STH   R#W,NARRDW          SET LENGTH INTO RDW.        #29/WLOG\n*        ***                                                   #29/WLOG\n         TIME  DEC                 GET                         #29/WLOG\n         ST    R0,NARTIME             TIME                     #29/WLOG\n         ST    R1,NARDATE           & DATE.                    #29/WLOG\n         LM    R0,R1,0(R#A)        RESTORE REGS FROM SAVE AREA #29/WLOG\n         L     R#W,PSTPSB          GET A(PSB) FROM THE PST.    #29/WLOG\n         LA    R#W,0(R#W)                                      #29/WLOG\n         LTR   R#W,R#W                                         #29/WLOG\n         BZ    *+4+6                                           #29/WLOG\n         MVC   NARLPSBN,PDIRSYM-PDIR(R#W) MOVE PSBNAME TO REC. #29/WLOG\n         L     R#W,PSTSMB          GET A(SMB) FROM THE PST.    #29/WLOG\n         LA    R#W,0(R#W)                                      #29/WLOG\n         LTR   R#W,R#W                                         #29/WLOG\n         BZ    *+4+6                                           #29/WLOG\n         MVC   NARLTRAN,SMBTRNCD-SMB(R#W) MOVE SMBNAME TO REC. #29/WLOG\n*        ******                                                #29/WLOG\n         LA    R#W,L'NARRDWLR(R#P) PTR TO WHERE TO STO USER DATA.   #29\n         ST    R#W,NARTOOOA        STO FOR MVCL.               #29/WLOG\n*        ***                                                   #29/WLOG\n         ST    R10,NARFROMA        USERS PTR.     STO FOR MVCL.#29/WLOG\n*        ***                                                   #29/WLOG\n         LH    R#W,0(R10)          USERS LENGTH.               #29/WLOG\n         ST    R#W,NARFROML        STO FOR MVCL.               #29/WLOG\n*                                                              #29/WLOG\n         ST    R#W,NARTOOOL        STO FOR MVCL.               #29/WLOG\n*        ******                                                #29/WLOG\n         LM    R6,R9,NARTOOOA                                  #29/WLOG\n         STM   R6,R9,(4*(016))(R#A)                            #29/WLOG\n         MVCL  R6,R8               MOVE THE USERS HUGE GRUNCH..#29/WLOG\n*        ***********                                           #29/WLOG\n         L     R6,(4*(6+0))(R#A)   RESTORE SCD ADDR.           #29/WLOG\n************************************************************** #29/WLOG\n***  WRITE THE COMBINED PIECES TO THE LOG.                     #29/WLOG\n*                                                              #29/WLOG\n         ILOG  FUNC=WRT,SCD=(R6),WAITYPE=IWAIT,RCD=(R#P)       #29/WLOG\n*                                                              #29/WLOG\n************************************************************** #29/WLOG\n***  CLEAN UP & RETURN TO INSTR AFTER IBM'S ILOG CALL.         #29/WLOG\n         LM    R0,R15,0(R#A)                                   #29/WLOG\n         L     R15,=A(NARRET2X)                                #29/WLOG\n         BR    R15                                             #29/WLOG\n******************************                                 #29/WLOG\n*                                                              #29/WLOG\n************************************************************** #29/WLOG\n***  COME HERE TO GO BACK TO IBM'S ILOG CALL.                  #29/WLOG\nNARORIG  DS    0H                                              #29/WLOG\n         L     R15,=A(CODEOK)                                  #29/WLOG\n         BR    R15                                             #29/WLOG\n**************************************************             #29/WLOG\n         EJECT                                                 #29/WLOG\n         DC    0A(0)                                           #29/WLOG\nNARRDW00 DC    Y(NARLR,0)                                      #29/WLOG\n         DC    CL8'NARLOG  '                                   #29/WLOG\n         DC    Y(NARLP,0)                                      #29/WLOG\n**********************                                         #29/WLOG\n         DC    C'&SYSDATE-&SYSTIME'                            #29/WLOG\nNARSCMVC MVC   NARPCHI0(00),4(R10) MVE NN BYTES TO ACCTNG AREA #28/SETC\n**************************************************             #29/WLOG\n         SPACE 2                                               #29/WLOG\n**************************************************             #29/WLOG\n         LTORG                                                 #29/WLOG\n**************************************************             #29/WLOG\n         SPACE 2                                               #29/WLOG\n*/ NUMBER INSERT=YES,SEQ1=62220100,NEW1=62220110,INCR=001  END #29/WLOG\n./ NUMBER INSERT=YES,SEQ1=90300000,NEW1=90300010,INCR=010      #29/WLOG\n*/ NUMBER INSERT=YES,SEQ1=90300000,NEW1=90300010,INCR=010  BGN #29/WLOG\n         EJECT                                                 #29/WLOG\n***********************************************************    #29/WLOG\nNARRDW   DSECT                                                 #29/WLOG\n         DC    Y(0,0)         LENGTH, ZEROS.                   #29/WLOG\n         DC    CL8' '         CONSTANT 'NARLOG  '              #29/WLOG\nNARPRE   DC    Y(0,0)         LENGTH OF NARLP.                 #29/WLOG\nNARUSRLL DC    Y(0,0)         USER DATA LENGTH.                #29/WLOG\nNARDATE  DC    A(0)           DATE THIS RECORD LOGGED.         #29/WLOG\nNARTIME  DC    A(0)           TIME THIS RECORD LOGGED.         #29/WLOG\nNARLPSBN DC    CL8' '         PSB NAME.                        #29/WLOG\nNARLTRAN DC    CL8' '         TRAN CODE NAME.                  #29/WLOG\n         DC    A(0)           (RESERVED).                      #29/WLOG\n         DC    A(0)           (RESERVED).                      #29/WLOG\nNARLP    EQU   *-NARPRE                                        #29/WLOG\nNARLR    EQU   *-NARRDW                                        #29/WLOG\nNARRDWLR EQU   NARRDW,NARLR   START OF USER LOG DATA.          #29/WLOG\nNARTOOOA DC    A(0)           WORK AREA OVERLAID BY USER DATA. #29/WLOG\nNARTOOOL DC    A(0)             \"    \"      \"     \"   \"    \"   #29/WLOG\nNARFROMA DC    A(0)             \"    \"      \"     \"   \"    \"   #29/WLOG\nNARFROML DC    A(0)             \"    \"      \"     \"   \"    \"   #29/WLOG\n***********************************************************    #29/WLOG\n         SPACE 2                                               #29/WLOG\n*/ NUMBER INSERT=YES,SEQ1=90300000,NEW1=90300010,INCR=010  END #29/WLOG\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSDLA30": {"ttr": 3592, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00%\\x00%\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 37, "newlines": 37, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31D3 JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  (       IMA.RECORD(DFSDLA30))  ***\n//DFSDLA30 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCETM,SYMO=SOURCETM,\n//   SMEMBER=DFSDLA30,LMEMBER=DFSDLA3H,\n//   RE='RENT,REFR',\n//*  CONDL=0,\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   LINEC=54,\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  * RW0001A, 28L, 33A, 151B\n./    CHANGE   NAME=DFSDLA30\n./ NUMBER INSERT=YES,SEQ1=30460000,NEW1=30460055,INCR=001 30460000 ---\n*/ NUMBER INSERT=YES,SEQ1=30460000,NEW1=30460055,INCR=001          BGN\n         SPACE 3\n********************************************************************\n* CODE ADDED BY NAR TO PROCESS AVOID ALL PSEUDO-WFI OR QUICK RESCHED\n*\n*                                                                   #33\n         LA    R15,SCD             PUT A(SCD) IN R15.               #33\n*                                                                   #33\n         NARSCDF R15,NARSCFB0,KNOWN=SCD,FAILX=DLA30720              #33\n*                                                                   #33\n         TM    028*8(R15),X'80'   Q. FEAT #28 ON?                   #33\n         BO    DLA30720             YES, SKIP ALL THIS.             #33\n*                                   ELSE, CONTINUE PER IBM.         #33\n********************************************************************\n         SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=30460000,NEW1=30460055,INCR=001          END\n         PRINT NOGEN                                                #33\n         NARSCD                                                     #33\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSDVBH0": {"ttr": 3594, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x006\\x006\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 54, "newlines": 54, "modlines": 0, "user": "HOSKINS"}, "text": "//$A1041UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1041\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSDVBH0))  ***\n//DFSDVBH0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDB,SYMO=SOURCEDB,\n//   SMEMBER=DFSDVBH0,LMEMBER=DFSDVBHM,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *   RW0026A   ABORT DL/I CALL IN AN I/O LOOP\n./  CHANGE  NAME=DFSDVBH0\n./ NUMBER INSERT=YES,SEQ1=01800000,NEW1=01800010,INCR=10            #26\n         SPACE 3                                                    #26\n***********************************************************************\n*        MODIFICATION # 26                                            *\n*        PURPOSE: TO PERMIT ABORTING A DL/I CALL BEFORE IT COMPLETES. *\n*            (AN ILL-CONCEIVED GU WITH 3 SSA'S CAUSED 133,000 I/O'S)  *\n*            (AND TOOK 1 HR 45 MIN.                                )  *\n*        SUSPECTING SUCH A SITUATION, MASTER TERMINAL OPERATOR ISSUES *\n*        A \"/STOP REGION ABDUMP TRAN\" COMMAND.  THE FOLLOWING CODING  *\n*        DETECTS THAT THE SAPSABDP BIT IS ON IN THE SAP AND SETS UP   *\n*        FOR IMS TO ABORT THE CALL AND THE TRANSACTION.  IF ANY FORM  *\n*        OF DATABASE BACKOUT IS INDICATED, THEN THE ABORT ACTION IS   *\n*        NOT TAKEN.                                                   *\n***********************************************************************\n         LA    R15,SCD             GET THE ADDRESS OF THE SCD.      #26\n         NARSCDF R15,NARSCFB0,KNOWN=SCD,FAILX=NOTSTOP               #26\n*                                                                   #26\n         TM    025*8(R15),X'80'    FEAT=25 SET ON?                  #26\n         BZ    NOTSTOP             NO, IGNORE THE FOLLOWING CODE.   #26\n*                                                                   #26\n         L     R15,PSTSAV1         GET ADDRESS OF SAP.              #26\n         USING SAP,R15             TELL THE ASSEMBLER.              #26\n         TM    SAPSFLG0,SAPSABDP   \"/STOP REGION ABDUMP\" PENDING?   #26\n         BNO   NOTSTOP             NO.                              #26\n*                                                                   #26\n         TM    PSTDLSA,PSTDLSA1+PSTDLSA7  IF ANY KIND OF DATABASE   #26\n         BNZ   NOTSTOP             BACKOUT IS GOING ON, THEN DO NOT #26\n         TM    PSTSYNC,PSTSYNC1    SET THINGS UP TO ABORT THE CALL  #26\n         BNZ   NOTSTOP             AND THE TRAN.                    #26\n*                                                                   #26\n**       ABORT RUNAWAY CALL,  LET CPY00 MAKE IT A U474 PSEUDO ABEND #26\n         MVI   PSTSUBCD,X'04'      FOR R15 RETURN CODE.             #26\n         MVI   PSTRTCDE,PSTBDCAL   SET \"ILLEGAL CALL\".              #26\nNOTSTOP  DS    0H                                                   #26\n         DROP  R15                                                  #26\n********************************************************************#26\n         SPACE 3                                                    #26\n         NARSCD                                                     #26\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSDVSM0": {"ttr": 3596, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00_\\x00_\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 95, "newlines": 95, "modlines": 0, "user": "HOSKINS"}, "text": "//YA332431 JOB 'EACARBONE*SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  (YA3324.IMA.RECORD(DFSDVSM0))  ***\n//DFSDVSM0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDB,SYMO=SOURCEDB,\n//   SMEMBER=DFSDVSM0,LMEMBER=DFSDVSMH,   NOTE ON TOP OF PL18556\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//***   NOTE OVERRIDE TO GET PTF PL18556  ****\n//***U.SYSUT1 DD  DSN=IMS.SMP.TARGIMA.STS,DISP=SHR\n//***   NOTE OVERRIDE TO GET PTF PL18556  ****\n//U.SYSINW DD  *   RW0028I   ACCOUNTING FOR VSAM IWAITS\n./ CHANGE   NAME=DFSDVSM0\n./ NUMBER INSERT=YES,SEQ1=63340000,NEW1=63340010,INCR=010         IWAIT\n*********************  COLLECT IWAIT COUNTS FOR VSAM  ************IWAIT\n*                                                                 IWAIT\n         TM    PSTCODE1,PSTP3RGN   IS THIS A TYPE 3 BATCH REGION? IWAIT\n         BO    OVIWAIT             YES, IGNORE THE IWAIT STATS    IWAIT\n         PUSH  USING               SAVE USING STATUS              IWAIT\n         LR    R15,R11             PUT A(PST) IN R15              IWAIT\n*                                                                 IWAIT\n         NARPSTF R15,FAILX=OVIWAIT   FIND OUR EXTENDED PST        IWAIT\n*                                                                 IWAIT\n         L     R15,NARPSTJ0-NARPST#0(,R15) POINT TO ACCTNG AREA   IWAIT\n         USING NARPSTK0,R15                                       IWAIT\n         LA    R14,1               BUMP COUNT OF I/O              IWAIT\n         A     R14,NARPIWT0          IWAIT'S CAUSED BY            IWAIT\n         ST    R14,NARPIWT0             THIS PST                  IWAIT\n         POP   USING               RESTORE PRIOR BASES            IWAIT\nOVIWAIT  EQU   *                                                  IWAIT\n*                                                                 IWAIT\n         EJECT                                                    IWAIT\n         NARSCD                                                   IWAIT\n         EJECT                                                    IWAIT\n//U.SYSINX DD  *   RW0027F   SYS/IWAIT COUNTERS\n./  CHANGE  NAME=DFSDVSM0\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 21,SCD=PSTSCDAD   ENQREQ REQUESTS.             SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 22,SCD=PSTSCDAD   PUT REQUESTS.                SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 23,SCD=PSTSCDAD   ERASE REQUESTS.              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 24,SCD=PSTSCDAD   SCHBFR REQUESTS.             SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 25,SCD=PSTSCDAD   GET REQUESTS.                SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 26,SCD=PSTSCDAD   MRKBFR REQUESTS.             SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 27,SCD=PSTSCDAD   WRTBFR REQUESTS.             SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n         ADCTR 29,SCD=PSTSCDAD   # TIMES DVSM0 BUMPS NARPIWT0.SYS/IWAIT\n         SPACE 1                                              SYS/IWAIT\n//U.SYSINY DD  *   RW0028I   ECC'S VSAM IWAIT ACCOUNTING\n./ CHANGE   NAME=DFSDVSM0\n**************************************************************    IWAIT\n*        THIS MOD CAUSES CONTROL TO GO TO THE UPAD EXIT JUST *    IWAIT\n*        AS IF THE DC MONITOR WAS TURNED ON.                 *    IWAIT\n**************************************************************    IWAIT\n         OI    RPLOPT2,RPLWAITX   REQUEST UPAD EXIT TO COUNT VSAM IWAIT\n**************************************************************    IWAIT\n*        THIS MOD CAUSES CONTROL TO GO TO THE UPAD EXIT JUST *    IWAIT\n*        AS IF THE DC MONITOR WAS TURNED ON.                 *    IWAIT\n**************************************************************    IWAIT\n         OI    RPLOPT2,RPLWAITX   REQUEST UPAD EXIT TO COUNT VSAM IWAIT\n**************************************************************    IWAIT\n*        THIS MOD CAUSES CONTROL TO GO TO THE UPAD EXIT JUST *    IWAIT\n*        AS IF THE DC MONITOR WAS TURNED ON.                 *    IWAIT\n**************************************************************    IWAIT\n         OI    RPLOPT2,RPLWAITX   REQUEST UPAD EXIT TO COUNT VSAM IWAIT\n**************************************************************    IWAIT\n*        THIS MOD CAUSES CONTROL TO GO TO THE UPAD EXIT JUST *    IWAIT\n*        AS IF THE DC MONITOR WAS TURNED ON.                 *    IWAIT\n**************************************************************    IWAIT\n         OI    RPLOPT2,RPLWAITX   REQUEST UPAD EXIT TO COUNT VSAM IWAIT\n//U.SYSINZ DD  *   RW0028I   'SETMODE' MACRO CHNG TO TEST SCDSTMN2\n./ CHANGE   NAME=DFSDVSM0\n         TM    SCDSTMN2,SCDMTON  IF DC MONITOR ACTIVE             IWAIT\n//SYSNUSED DD  DATA\n/*\n//TSTTST EXEC PGM=IEBGENER\n//SYSPRINT DD  SYSOUT=T\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSFXC30": {"ttr": 3599, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00(\\x00(\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 40, "newlines": 40, "modlines": 0, "user": "HOSKINS"}, "text": "//$A1041UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1041\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSFXC30))  ***\n//DFSFXC30 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=DFSFXC30,LMEMBER=DFSFXC3M,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN1 DD  *\n./  CHANGE  NAME=DFSFXC30\n******************************************************************* LOU\n         LA    R15,SCD             GET THE ADDRESS OF THE SCD.      LOU\n         NARSCDF R15,NARSCFB0,KNOWN=SCD,FAILX=RETRY002              LOU\n*                                                                   LOU\n         TM    027*8(R15),X'01'    FEAT=27 SPECIAL FLAG ON?         LOU\n         BO    TSTDUMP             YES, FORCE A DUMP TEST.          LOU\n******************************************************************* LOU\n******************************************************************* LOU\nTSTDUMP  DS    0H                                                   LOU\n         LA    R15,SCD             GET THE ADDRESS OF THE SCD.      LOU\n         NARSCDF R15,NARSCFB0,KNOWN=SCD,FAILX=RETRY002              LOU\n*                                                                   LOU\n         TM    027*8(R15),X'80'    FEAT=27 SET ON?                  LOU\n         BZ    RETRY002            NO, DO NOT FORCE A DUMP.         LOU\n*                                                                   LOU\n         MVI   027*8(R15),X'00'    TURN OFF FEAT=27 BITS.           LOU\n         LR    R2,R1               SAVE A(PST) OVER SDUMP.          LOU\n         SDUMP HDR='IMS6 X(04) BIT',                                LOU*\n               SDATA=(RGN)                                          LOU\n         LR    R1,R2               RESTORE PST ADDRESS.             LOU\n         B     RETRY002                                             LOU\n*                                                                   LOU\n******************************************************************* LOU\n         NARSCD                                                     LOU\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSICIO0": {"ttr": 3601, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00$\\x00$\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS22CI JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//****************************\n//DFSICIO0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=DFSICIO0,LMEMBER=DFSICIOG,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSINA DD  *\n./ CHANGE   NAME=DFSICIO0\n./ NUMBER INSERT=YES,SEQ1=55430000,NEW1=55430155,INCR=001 55430000 ---\n*/ NUMBER INSERT=YES,SEQ1=55430000,NEW1=55430155,INCR=001 55430000 BGN\nDFS053   EQU   53         TERMINAL RESTARTED\nB#F      EQU   R15\n         PUSH  PRINT\n         PRINT GEN\n         NARSCDF B#F,NARSCFB0      GET  FEATURES BASE.\n         TM    029*8(B#F),X'80'    Q. FEATURE #29 INFORCE.\n         BZ    NARRESP9              NO; IGNORE; CONTINUE NORMALLY.\n         CLC   0(4,R2),=C'/END'       Q. IS THIS THE /END COMMAND.\n         BNE   NARRESP9                 NO,  CONTINUE PER IBM.\n         NI    CTBFLAG4,X'FF'-CTB4RESP  YES, TURN OFF RESP BIT.\n         LA    R1,DFS053                      & SEND TERM RESTARTED.\n         POP   PRINT\nNARRESP9 #\n*/ NUMBER INSERT=YES,SEQ1=55430000,NEW1=55430155,INCR=001 55430000 END\n./ NUMBER INSERT=YES,SEQ1=67290000,NEW1=67290155,INCR=001 67290000 ---\n*/ NUMBER INSERT=YES,SEQ1=67290000,NEW1=67290155,INCR=001 67290000 BGN\n         NARSCD\n*/ NUMBER INSERT=YES,SEQ1=67290000,NEW1=67290155,INCR=001 67290000 END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSICL70": {"ttr": 3841, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x17\\x00\\x17\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "HOSKINS"}, "text": "//$A2158UA JOB 'ANGIEBUA**SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A2158\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  ($A2158.IMA.RECORD(DFSDVSM0))  ***\n//DFSICL70 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=DFSICL70,LMEMBER=DFSICL7A,                  PL20717\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSINA DD  *   PL20717         FIX FOR ASSIGNING VIRTUAL TERMINALS\n./ CHANGE   NAME=DFSICL70\n         CHANGEID APAR=PL20717,ID=G,PREREQ=0       1/04/88  @PL20717\n         XC    CLBTEMP5,CLBTEMP5   CLEAR FLAG AREA          @PL20717\n./ ENDUP\n//SYSNUSED DD  DATA\n/*\n//TSTTST EXEC PGM=IEBGENER\n//SYSPRINT DD  SYSOUT=T\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSIDP00": {"ttr": 3843, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00 \\x00 \\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "HOSKINS"}, "text": "//YA2678UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=YA2678\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  (YA2678.IMA.RECORD(DFSIDP00))  ***\n//DFSIDP00 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSIDP00,LMEMBER=DFSIDP0Z,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//** CONDL=0,\n//   LINEC=54,     USE THIS IF PRINTING ON XEROX 3700\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN1 DD  *          RW0151C  MODS TO THE OUTPUT OF /DIS A COMMAND\n./ CHANGE NAME=DFSIDP00\n         BE    DISPAALL            BRANCH TO SHOW REGIONS          #151\n         NI    SPADCBFL,SPADREG+SPADDC JUST REGIONS, HIST. + CURR. #151\n         BNE   KEYTWOK4            NO, CHECK FOR STATUS            #151\nKEYTWOK4 DS    0H                                                  #151\n         CLC   0(3,R2),=C'STS'     WAS KEYWORD STATUS?             #151\n         BNE   ERIKCOMB            NO, INVALID KEYWORD COMBINATION.#151\n         OI    SPADCBFL,SPADREG+SPADDC    YES, SHOW REGIONS & DC.  #151\n         B     KEYTWOK3                                            #151\n//*********************************************************************\n//SYSNUSED DD  DATA    ************************************************\n/*\n//*********************************************************************\n//**C.STEPLIB DD DISP=SHR,DSN=AOST.LOAD\n//*********************************************************************\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSIDP20": {"ttr": 3845, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x02\\xc4\\x02\\xc4\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 708, "newlines": 708, "modlines": 0, "user": "HOSKINS"}, "text": "//YA267820 JOB 'LEE       SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=5120K,TIME=010,NOTIFY=YA2678\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  (YA2678.IMA.RECORD(DFSIDP20))  ***\n//STEP1    EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSIDP20,LMEMBER=DFSIDP2G,      <=========\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//** CONDL=0,\n//   LINEC=54,     USE THIS IF PRINTING ON XEROX 3700\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN1 DD  *          RW0151A  MODS TO THE OUTPUT OF /DIS A COMMAND\n./ CHANGE NAME=DFSIDP20\nDFSIDP2X DS    0H                                                  #151\n*                                                                  #151\n         B     TOTALS          14. GO PUT OUT PST TOTAL VALUES     #151\n         B     DBRCHK1         15. NOW REALLY GO CHECK DBRC REGION #151\n*                                (WE USED NO. 11 TO PUT OUT DASHES)#151\n*                                                                  #151\nTOTALS   DS    0H                                                  #151\n         L     R14,=A(TOTLINE)                                     #151\n         BR    R14                                                 #151\n         BO    HEADERX                                             #151\n         TM    SPADCBFL,SPADREG+SPADDC   SHOW HISTORY + CURRENT?   #151\n         BNZ   VTAMHDR                                             #151\nHEADERX  DS    0H                                                  #151\n         USING H70,R2              ADDRESSABILITY TO DISP DSECT    #151\n         MVI   H70NL,NEWLINE       MOVE IN NEWLINE CHAR            #151\n         MVC   H70FID(L'A70FID),A70FMT MOVE IN A70 FORMAT ID       #151\n         MVC   H70REG(L'REGID),REGID MOVE IN REGID LITERAL         #151\n         MVC   H70JOB(L'JOBNAME),JOBNAME MOVE IN JOBNAME LITERAL   #151\n         MVC   H70TYPE(L'TYPE),TYPE MOVE IN TYPE LITERAL           #151\n         MVC   H70TRAN(L'TRAN),TRAN MOVE IN TRAN LITERAL           #151\n         MVC   H70PGM(L'PROGRAM),PROGRAM MOVE IN PROGRAM LITERAL   #151\n         MVC   H70STAT(L'STATUS),STATUS MOVE IN STATUS LITERAL     #151\n         MVC   H70CLASS(L'CLASS),CLASS MOVE IN CLASS LITERAL       #151\n         MVC   H70SCHD(L'SCHD),SCHD    MOVE IN SCHD  LITERAL       #151\n         MVC   H70DBCAL(L'DBCAL),DBCAL MOVE IN DBCAL LITERAL       #151\n         MVC   H70IWAIT(L'IWAIT),IWAIT MOVE IN IWAIT LITERAL       #151\n         MVC   H70MSGS(L'MSGS),MSGS    MOVE IN MSGS  LITERAL       #151\n         MVC   H70MSCAL(L'MSCAL),MSCAL MOVE IN MSCAL LITERAL       #151\n         LA    R3,H70LEN           INDICATE TOTAL HDR LENGTH.      #151\n         TM    SPADCBFL,SPADREG+SPADDC   SHOW HISTORY + CURRENT?   #151\n         BNM   BUFFRET             YES, BRANCH.                    #151\n         MVC   63(4,R2),=C'ENQS'   CHANGE HEADER FOR JUST CURRENT. #151\n         BINHEX PKAREA,PSTPRTY     IF REGN WAITING,                #151\n         MVC   27(2,R2),PKAREA+2   GET CUT-OFF PRIORITY.           #151\n         BINHEX PKAREA,SMBQCBPR    IF TRAN PRESENT,                #151\n         MVC   28(1,R2),PKAREA+3     GET ITS CURRENT PRIORITY.     #151\n         BINHEX PKAREA,SMBCLASS    GET ITS CLASS.                  #151\n         MVC   27(1,R2),PKAREA+3   MOVE CLASS TO PRINT LINE.       #151\n         L     R4,=A(FPCODE)                                       #151\n         BR    R4                                                  #151\n./ DELETE  SEQ1=08770000,SEQ2=10510000\n*                                                                  #151\n*                                                                  #151\n*                                                                  #151\n*                                                                  #151\n*                                                                  #151\n./ NUMBER INSERT=YES,SEQ1=10860000,NEW1=10860005,INCR=005 10860000 ---\n*                                                                  #152\n         TM    SCDSTMN2,SCDMSTRT   IS THE MONITOR ACTIVE?          #152\n         BZ    OVMONACT            NO, DON'T ADD TO MESSAGE        #152\n         MVC   48(21,R2),MNACTMSG  YES, ADD MONITOR ACTIVE MESSAGE #152\n         LA    R3,21(,R3)          ADD IN MESSAGE DELTA            #152\nOVMONACT EQU   *                                                   #152\n         TM    SPADCBFL,SPADDC     /DIS ACTIVE DC?                 #151\n         BO    LINECK2             YES, GO PROCESS.                #151\n         MVI   SPADNTRY,8          NO, SETUP TIME AND DATE.        #151\n         B     TIME8               BRANCH TO PUT OUT TIMESTAMP.    #151\nLINECK2  DS    0H                                                  #151\n./ NUMBER INSERT=YES,SEQ1=13860000,NEW1=13860005,INCR=001 13860000 ---\nNARDASH  DS    0H                                                  #151\n         TM    SPADFLAG,X'C0'     AT LEAST 1 MSG OR BMP REG ACTIVE?#151\n         BZ    DBRCHK1            NO, IGNORE DASHES & TOTALS LINES.#151\n         TM    SPADCBFL,SPADREG+SPADDC  HIST. + CURR. SPECIFIED?   #151\n         BM    DBRCHK1            NO, DON'T SET UP FOR PST TOTALS. #151\n         MVI   SPADNTRY,14        SET NEXT ENTRY TO DO PST TOTALS. #151\n         MVC   4(3,R2),=C'A98'    SET LINE ID = 'A98'              #151\n         MVC   9(L'DASHLINE,R2),DASHLINE MOVE DASHES TO OUTPUT AREA#151\n         LA    R3,L'DASHLINE+11   SET TOTAL LINE LENGTH.           #151\n         B     BUFFRET            GO TO OUTPUT MSG.                #151\n         SPACE 3                                                   #151\n         B     NARDASH            OUTPUT DASH LINE AND PST TOTALS. #151\nDBRCHK1  EQU   *                  NOW HANDLE THE DBRC MESSAGE.     #151\nDOUBLE   DC    D'0'                ALIGNMENT.                      #151\n*HDRLINE DC    C'REGID JOBNAME  TYPE  TRAN/STEP PROGRAM  CLASS SCHD  MS\n*              GS DBCAL MSCAL IWAIT'   PRIOR LINE COL 72 NOW BLANK #151\nDASHLINE DC    C'                                                     -*\n               ---- ----- -----    -----  -----'                   #151\nBLNKS    DC    50X'40'    FOR INIT.                                #151\nSCHD     DC    C'SCHD'                SCHD LITERAL                 #151\nMSGS     DC    C'MSGS'                MSGS LITERAL                 #151\nDBCAL    DC    C'DBCAL'              DBCAL LITERAL                 #151\nMSCAL    DC    C'MSCAL'              MSCAL LITERAL                 #151\nIWAIT    DC    C'IWAIT'              IWAIT LITERAL                 #151\nP1000    DC    P'1000'                                             #151\nP500     DC    P'500'                                              #151\n         LR    R4,R12                                              #151\n         LA    R3,56               INDICATE OUTPUT POS USED.       #151\n         L     R14,=A(NARWAY1)                                     #151\n         BR    R14                 BUT LET'S DO IT OUR WAY.        #151\n         AGO   .OVNAR1                                             #151\n.OVNAR1  ANOP                                                      #151\n         DROP  R12                                                 #151\n         USING DFSIDP2X,R12                                        #151\n         PRINT GEN                                                 #151\n         A70RW151 ROCKWELL HEADER LINE                             #151\n***      ISAP      MOVED DOWN FOR ADDR REASONS                     #151\n./ NUMBER INSERT=YES,SEQ1=19960000,NEW1=19960010,INCR=010 19960000 ---\n         PRINT GEN                                                 #151\nDFSIDP20 CSECT                                                     #151\n**************************************************                 #151\n**************************************************                 #151\n***CHANGED STUFF HAS '****' IN COLS. 1-4 *********                 #151\n**************************************************                 #151\n*   EARL :   REPL R4 WITH R12 ???*****************                 #151\n**************************************************                 #151\n**************************************************                 #151\n**************************************************                 #151\n**************************************************                 #151\n*                        **  IDENTITY                              #151\nR#S      EQU   2    R2   ** PTR TO ORG OF P LINE.                  #151\nR#L      EQU   3    R3   ** LENGTH OF PRINT LINE.                  #151\nR#P      EQU   7    R7   ** BASE OF IBM'S PST.                     #151\nR#M      EQU   8    R8      LENGTH OF DATA PRINTED FOR THIS ENTRY. #151\nR#N      EQU   8    R8      BASE OF NAR'S PST.                     #151\nR#A      EQU   9    R9      ACCUMULATOR.                           #151\nR#X      EQU   10   R10     PTR TO DRIVING TABLE ENTRY.            #151\nR#D      EQU   11   R11     PTR TO VALUE BEING PROCESSED.          #151\nR#Z      EQU   14   R14                                            #151\nR#W      EQU   15   R15                                            #151\n******************************                                     #151\nNARWAY1  DC    0Y(0)                                               #151\n         USING NARWAY1,R14                                         #151\n         LR    R12,R4              POINT R12 TO VERY TOP           #151\n         STM   R0,R15,STM0X15      SAVE REGISTERS.                 #151\n         LR    R4,R14                                              #151\n         DROP  R14                                                 #151\n         USING NARWAY1,R4                                          #151\n         LA    R#Z,0(R#L,R#S)      BLANK-OUT                       #151\n         MVC   0(35,R#Z),BLNKS       OUR PART.                     #151\n*        ***                                                       #151\n         XC    PKAREA,PKAREA       CLEAR WORK AREA TO ZERO.        #151\n         MVN   PKAREA,PSTCLASS     MOVE PST CLASSES TO WORK AREA   #151\n         TR    PKAREA,=C'0123456789ABCDEF' AND MAKE THEM PRINTABLE.#151\n         MVC   1(4,R#Z),PKAREA     MOVE CLASSES TO PRINT LINE.     #151\n         LA    R#L,05(,R#L)        LGTH TO OUR PART.               #151\n********************                                               #151\n         TPROT 0(R#P),X'70'        CAN WE ACCESS THE PST ADDRESS?  #151\n         BNZ   ENDY                NO, AVOID A S/0C4 ABEND.        #151\n         LR    R#N,R#P             A(PST) TO R#N                   #151\n         NARPSTF R#N,FAILX=ENDY    FIND LOCAL AUXILIARY PST.       #151\n         L     R#W,NARPSTY0-NARPST#0(R#N)  FIND HUGH'S ACCT AREA.  #151\n         ST    R#W,XPSTBAS         STO AS BASE FOR TABLE.          #151\n         L     R#W,NARPSTJ0-NARPST#0(R#N)  FIND LOU'S ACCT AREA.   #151\n         ST    R#W,KPSTBAS         STO AS BASE FOR TABLE.          #151\n******************************                                     #151\n*        MVC   RISPCBFL,SPADCBFL   SAVE SPADCBFL                   #151\n         TM    SPADCBFL,SPADREG+SPADDC   SHOW HIST. + CURR. ?      #151\n         BNM   SETR6ALL            YES, SET R6 TO 'ALL' LIST.      #151\n         L     R6,PSTSUPNQ         CALCULATE NUMBER OF UPDATE      #151\n         S     R6,PSTSUPDQ          ENQUEUES - # OF DEQUEUES.      #151\n         ST    R6,NQLESSDQ         SAVE VALUE FOR DISPLAY.         #151\n         LA    R6,DRVLIST2         POINT TO REG-ONLY DRIVE LIST.   #151\n         B     LOOPSPST                                            #151\n*                                                                  #151\nSETR6ALL DS    0H                                                  #151\n         LA    R6,DRIVTADD         POINT TO 'SYS' DRIVE LIST.      #151\n********************                                               #151\nLOOPSPST XR    R#A,R#A             CLEAR ACCUM.                    #151\n         L     R10,0(,R6)          GET PTR TO TABLE ENTRY.         #151\n*        ***********                                               #151\nLOOPXPST DS    0H                                                  #151\n         SR    R#D,R#D             CLEAR R11.                      #151\n         ICM   R#D,7,1(R#X)        GET DATA PTR, OFFSET, OR ZERO.  #151\n         BZ    OVACC               IF ZERO, NO VALUE TO PROCESS.   #151\n*         *                                                        #151\n         CLI   1(R#X),0            POINTER OR OFFSET?              #151\n         BNE   CUMMDATA            POINTER; SKIP ADDING BASE.      #151\n         TM    4(R#X),X'01'        OFFSET; WHICH BASE TO BE USED?  #151\n         BZ    ISITXBAS                                            #151\n         A     R#D,KPSTBAS         ADD-ON THE KBASE.               #151\n         B     CUMMDATA                                            #151\nISITXBAS EQU   *                                                   #151\n         TM    4(R#X),X'02'        IS IT A(PST)                    #151\n         BNZ   ADDPST              YES, BRANCH                     #151\n         A     R#D,XPSTBAS         ADD-ON THE XBASE.               #151\n         B     CUMMDATA                                            #151\nADDPST   EQU   *                                                   #151\n         AR    R#D,R#P             ADD-ON A(CURRENT PST)           #151\n*        ***                                                       #151\nCUMMDATA EQU   *                   HERE TO ACCUMULATE DATA.        #151\n         TM    4(R#X),X'20'        HALF-WORD ADD?                  #151\n         BZ    FULLADD             NO, BRANCH                      #151\n         AH    R#A,0(,R#D)         ACCUMULATE DATA.                #151\n         B     OVACC                                               #151\nFULLADD  EQU   *                                                   #151\n         A     R#A,0(,R#D)         ACCUMULATE DATA.                #151\nOVACC    EQU   *                                                   #151\n*        ***                                                       #151\n         CLI   0(R#X),0            Q. CONTINUE OR PRINT.           #151\n         BNE   PRNTRTN1            PRINT.                          #151\n         LA    R#X,8(,R#X)         BUMP TABLE PTR.                 #151\n         B     LOOPXPST            CONTINUE ACCUMULATING.          #151\n*        ******                                                    #151\nPRNTRTN1 DS    0H                                                  #151\n         CVD   R#A,PKAREA          PRINT THE RESULT.               #151\n         TM    4(R#X),X'80'        SHOULD WE DIVIDE BY 1000?       #151\n         BZ    OVDIVK1             NO                              #151\n         CP    PKAREA(8),P1000     HAS VALUE REACHED 1000 YET?     #151\n         BL    OVDIVK1             NO, DON'T DIVIDE                #151\n         OI    4(R#X),X'40'        SHOW THAT WE DID DIVIDE BY 1000 #151\n         AP    PKAREA(8),P500      ROUND VALUE TO NEAREST 1000     #151\n         DP    PKAREA(8),P1000     DIVIDE VALUE BY 1000            #151\n         UNPK  DOUBLE,PKAREA(5)                                    #151\n         B     OVDIVK2                                             #151\nOVDIVK1  EQU   *                                                   #151\n         UNPK  DOUBLE,PKAREA(8)                                    #151\nOVDIVK2  EQU   *                                                   #151\n         OI    DOUBLE+L'DOUBLE-1,X'F0'                             #151\n*        ***                                                       #151\n         LA    R#Z,0(R#L,R#S)      CALC FBA.  (TO)                 #151\n         IC    R#M,0(,R#X)         NBR OF CHARS.                   #151\n         BCTR  R#M,0                (MACH CODE)                    #151\n         N     R#M,=A(7)           MAX.                            #151\n         LA    R#W,DOUBLE+L'DOUBLE-1   CALC. END OF AREA ADDRESS   #151\n         LR    R#A,R#W             CALC.                           #151\n         SR    R#A,R#M               FBA.                          #151\nEDITLOOP EQU   *                                                   #151\n         CLI   0(R#A),X'F0'        LEADING ZERO?                   #151\n         BNE   ENDEDIT             NO, STOP THE EDIT LOOP          #151\n         MVI   0(R#A),X'40'        REPLACE ZERO WITH A BLANK       #151\n         LA    R#A,1(,R#A)         BUMP TO NEXT POSITION           #151\n         CR    R#A,R#W             ARE WE AT LAST POSITION?        #151\n         BL    EDITLOOP            NO, CONTINUE TO EDIT LEADING 0'S#151\nENDEDIT  EQU   *                                                   #151\n         SR    R#W,R#M             CALC. FBA.  (FROM)              #151\n         MVI   0(R#Z),C' '                                         #151\n         TM    4(R#X),X'40'        HAVE WE DIVIDED BY 1000?        #151\n         BZ    OVDIVK3             NO                              #151\n         BCTR  R#M,0                                               #151\n         LA    R#W,1(,R#W)                                         #151\nOVDIVK3  EQU   *                                                   #151\n         EX    R#M,MOVEXP          MOVE PRINTABLES.                #151\n************                                                       #151\n         TM    4(R#X),X'40'        HAVE WE DIVIDED BY 1000?        #151\n         BZ    OVDIVK4             NO                              #151\n         LA    R#M,1(,R#M)                                         #151\n         LA    R#W,1(R#Z,R#M)      FIND K COLUMN                   #151\n         MVI   0(R#W),C'K'                                         #151\nOVDIVK4  EQU   *                                                   #151\n         NI    4(R#X),X'BF'        TURN OFF DIV-BY-1000 INDICATOR  #151\n         LA    R#L,2(R#L,R#M)      BUMP LENGTH.                    #151\n         LA    R6,4(,R6)           BUMP TO NEXT LIST ENTRY.        #151\n         CLI   0(R6),X'FF'         AT END OF LIST?                 #151\n         BE    ENDX                YES, CLEAN UP AND LEAVE.        #151\n         B     LOOPSPST            NEXT ACCUMULATION GROUP.        #151\n***************************************                            #151\nENDX     EQU   *                                                   #151\n         LM    R4,R15,STM0X15+(4*R4)   RESTORE REGS R4 - R15       #151\n         LA    R3,1(,R3)                                           #151\n         B     INITMSG3                                            #151\n************                                                       #151\nMOVEXP   MVC   1(0,R#Z),0(R#W)                                     #151\n****************************************                           #151\nENDY     EQU   *                                                   #151\n         LA    R#Z,0(R#L,R#S)      CALC FBA.  (TO).                #151\n         MVC   0(22,R#Z),=C' NARXPST NOT AVAILABLE'                #151\n         LA    R#L,22(,R#L)        BUMP LENGTH.                    #151\n         B     ENDX                RETURN.                         #151\n         EJECT                                                     #151\n***************************************                            #151\n** THE FOLLOWING TABLE OF DBLE WRDS CONTROLS THE ADD'L PST DISPLAY.#151\n**       XX00JKLM   ADD-IN VALUE IN WORD @ NARPSTX0 + JKLM         #151\n**       XXADDRES   ADD-IN VALUE IN WORD @ LOCATION   ADDRES       #151\n**       00XXXXXX   CONTINUE ACCUM AFTER ADDING-IN THIS VALUE.     #151\n**       NNXXXXXX   THIS IS LAST VALUE. CONV TO NN DIGITS & PRINT. #151\n**       XX000000   NO VALUE TO BE PROCESSED.                      #151\n**       FFFFFFFF   END-OF-LIST ID IS X'FF'.                       #151\n**                                                                 #151\n**               XX   FLAG BYTE                                    #151\n**               80   1: VALUE CAN BE DIVIDED BY 1000              #151\n**                    0: VALUE CANNOT BE DIVIDED BY 1000           #151\n**               40   1: VALUE HAS BEEN DIVIDED BY 1000            #151\n**                    0: VALUE HAS NOT BEEN DIVIDED BY 1000        #151\n**               20   1: PERFORM HALF-WORD ADDITION                #151\n**                    0: PERFORM FULL-WORD ADDITION                #151\n**               10      RESERVED                                  #151\n**               08      RESERVED                                  #151\n**               04      RESERVED                                  #151\n**               02   1: ADD A(PST)  TO OFFSET JKLM                #151\n**               01   1: ADD KPSTBAS TO OFFSET JKLM                #151\n**                    0: ADD XPSTBAS TO OFFSET JKLM                #151\n**                                                                 #151\n**                                                                 #151\n**                                                                 #151\n         PRINT DATA                                                #151\nDRIVTABL DC    0D'0'                                               #151\nDRIVTAB1 DC    AL1(0),AL3(NARPSTL0-NARPSTX0),A(0)      # PGM LOADS #151\n         DC    AL1(5),AL3(0),X'00',AL3(0)                          #151\n**                                                                 #151\nDRIVTB1A DC    AL1(0),AL3(NQLESSDQ),A(0)               # ENQS      #151\n         DC    AL1(5),AL3(0),X'00',AL3(0)                          #151\n**                                                                 #151\n**                                                                 #151\nN$1      EQU   NARPSTN0-NARPSTX0                                   #151\nDRIVTAB4 DC          (((PSTDREPL+0-PSTDGU+000)/4)+1)A(((*-DRIVTAB4)/2)+*\n               N$1+PSTDGU+000-PSTACCT+00,0)            # DB CALLS  #151\nDRIVTB4A DC          (((PSTDREPL+0-PSTDGU+000)/4)+1)A(((*-DRIVTB4A)/2)+*\n               PSTDGU+000-PST+00,2*16777216)           # DB CALLS  #151\n         DC    AL1(5),AL3(0),X'80',AL3(0)                          #151\n**                                                                 #151\n**                                                                 #151\nDRIVTAB6 DC    AL1(0),AL3(NARPSTI0-NARPSTX0),X'00',AL3(0) # IWAITS #151\nDRIVTB6A DC    AL1(0),AL3(NARPIWT0-NARPSTK0),X'01',AL3(0) # IWAITS #151\n         DC    AL1(5),AL3(0),X'80',AL3(0)                          #151\nDRIVTAB2 DC    AL1(0),AL3(NARPSTM0-NARPSTX0),A(0)      # MSGS      #151\nDRIVTB2A DC    AL1(0),AL3(PSTDQCNT-PST),X'22',AL3(0)   # MSGS      #151\n         DC    AL1(8),AL3(0),X'00',AL3(0)                          #151\nDRIVTAB5 DC          (((PSTMPURG+0-PSTMGU+000)/4)+1)A(((*-DRIVTAB5)/2)+*\n               N$1+PSTMGU+000-PSTACCT+00,0)            # TP CALLS  #151\nDRIVTB5A DC          (((PSTMPURG+0-PSTMGU+000)/4)+1)A(((*-DRIVTB5A)/2)+*\n               PSTMGU+000-PST+00,2*16777216)           # TP CALLS  #151\n         DC    AL1(6),AL3(0),X'80',AL3(0)                          #151\n**                                                                 #151\n         DC   2F'-1'                                               #151\n         PRINT NODATA                                              #151\n******************************                                     #151\nXPSTBAS  DC    A(0)                                                #151\nKPSTBAS  DC    A(0)                                                #151\nNQLESSDQ DC    A(0)                                                #151\nDRIVTADD DC    A(DRIVTAB1)                                         #151\n         DC    A(DRIVTAB4)                                         #151\n         DC    A(DRIVTAB6)                                         #151\n         DC    A(DRIVTAB2)                                         #151\n         DC    A(DRIVTAB5)                                         #151\n         DC    F'-1'                                               #151\nDRVLIST2 DC    A(DRIVTB1A)                                         #151\n         DC    A(DRIVTB4A)                                         #151\n         DC    A(DRIVTB6A)                                         #151\n         DC    A(DRIVTB2A)                                         #151\n         DC    A(DRIVTB5A)                                         #151\n         DC    F'-1'                                               #151\n**************************************************                 #151\n         EJECT                                                     #151\nTOTLINE  DS    0H                                                  #151\n         DROP  R4                                                  #151\n         USING TOTLINE,R14                                         #151\n         STM   R0,R15,STM0X15      SAVE REGS                       #151\n         LR    R4,R14                                              #151\n         LA    R14,TOTLINE-NARWAY1                                 #151\n         SR    R4,R14                                              #151\n         USING NARWAY1,R4                                          #151\n         DROP  R14                                                 #151\n         LA    R10,DRIVTADD        POINT TO TABLE OF ADCONS        #151\n         LA    R3,61               PRESET CHAR POSITION IN LINE    #151\n         SR    R8,R8                                               #151\n*                                                                  #151\nA        EQU   *                                                   #151\n         SR    R9,R9               SET ACCUMULATOR TO ZERO         #151\n         LR    R5,R11              PUT A(SCD) INTO R5              #151\n         NARSCDF R5,NARPSTSL,KNOWN=SCD   FIND NAR PST/EXT LIST.    #151\n         L     R7,4(,R5)           GET FIRST A(PST) FROM LIST.     #151\n         LTR   R7,R7                                               #151\n         BZ    F                   IF ADR = 0, GO LOOK FOR ANOTHER.#151\n*                                                                  #151\nB        EQU   *                                                   #151\n         TPROT 0(R7),X'70'         CAN WE ACCESS THE PST ADDRESS?  #151\n         BNZ   F                   NO, AVOID A S/0C4 ABEND.        #151\n         LR    R8,R7               ADDR OF PST TO R8               #151\n         NARPSTF R8,FAILX=F        FIND NAR'S AUXILIARY PST        #151\n*                                                                  #151\n         L     R15,NARPSTY0-NARPST#0(R8)  NOW FIND ACCTNG AREA     #151\n         ST    R15,XPSTBAS         STORE AS BASE FOR HUGH'S CUMMS  #151\n         L     R15,NARPSTJ0-NARPST#0(R8)  NOW FIND ACCTNG AREA     #151\n         ST    R15,KPSTBAS         STORE AS BASE FOR LOU'S ACCTNG  #151\n         L     R8,0(,R10)          POINT TO START OF INNER TABLE   #151\n*                                                                  #151\nC        EQU   *                                                   #151\n         SR    R6,R6               CLEAR R6                        #151\n         ICM   R6,7,1(R8)          GET DATA PTR, OFFSET, OR ZERO.  #151\n         BZ    E                   IF ZERO, NO VALUE TO PROCESS.   #151\n         CLI   1(R8),0             POINTER OR OFFSET?              #151\n         BNE   D                   POINTER, SKIP ADDING BASE       #151\n         TM    4(R8),X'01'         OFFSET, WHICH BASE DO WE USE?   #151\n         BZ    C1                  GO SEE IF IT IS XBASE           #151\n         A     R6,KPSTBAS          ADD-ON THE KBASE                #151\n         B     D                                                   #151\nC1       EQU   *                                                   #151\n         TM    4(R8),X'02'         IS IT A(CURRENT PST)?           #151\n         BNZ   C2                  YES, BRANCH                     #151\n         A     R6,XPSTBAS          ADD-ON THE XBASE                #151\n         B     D                                                   #151\nC2       EQU   *                                                   #151\n         AR    R6,R7               ADD-ON A(CURRENT PST)           #151\n*                                                                  #151\nD        EQU   *                                                   #151\n         TM    4(R8),X'20'         IS IT HALF-WORD ADD?            #151\n         BZ    D1                  NO, BRANCH                      #151\n         AH    R9,0(,R6)           ACCUMULATE THE DATA             #151\n         B     E                                                   #151\nD1       EQU   *                                                   #151\n         A     R9,0(,R6)           ACCUMULATE THE DATA             #151\n*                                                                  #151\nE        EQU   *                                                   #151\n         CLI   0(R8),0             CONTINUE OR SHIFT TO NEXT PST?  #151\n         BNE   F                   SHIFT TO NEXT PST               #151\n         LA    R8,8(,R8)           BUMP TO NXT ENTRY IN INNER TABLE#151\n         B     C                   CONTINUE WITH CURRENT PST       #151\n*                                                                  #151\nF        EQU   *                                                   #151\n         LA    R5,08(,R5)          BUMP TO NXT ENTRY IN PSTEXT LIST#151\n         CLI   0(R5),X'FF'         AT END OF LIST?                 #151\n         BE    F1                  YES, BRANCH.                    #151\n         L     R7,4(,R5)           GET ADDR OF NEXT PST FROM LIST. #151\n         LTR   R7,R7               IF ZERO, GO BACK THROUGH LOOP.  #151\n         BZ    F                   IF ADR = 0, GO LOOK FOR ANOTHER.#151\n         B     B                   CONTINUE WITH NEXT PST.         #151\n*                                                                  #151\nF1       EQU   *                                                   #151\n         LTR   R8,R8                                               #151\n         BZ    M                                                   #151\n         CVD   R9,PKAREA           PREPARE THE CUMM VALUE FOR PRINT#151\n         CP    PKAREA(8),P1000     HAS VALUE REACHED 1000 YET?     #151\n         BL    G                   NO, DON'T DIVIDE BY 1000        #151\n         OI    4(R8),X'40'         SHOW THAT WE DID DIVIDE BY 1000 #151\n         AP    PKAREA(8),P500      ROUND VALUE UP TO NEAREST 1000  #151\n         DP    PKAREA(8),P1000     DIV ROUNDED CUMM VALUE BY 1000  #151\n         UNPK  DOUBLE,PKAREA(5)    UNPACK QUOTIENT                 #151\n         B     H                                                   #151\n*                                                                  #151\nG        EQU   *                                                   #151\n         UNPK  DOUBLE,PKAREA(8)    UNPACK WHOLE VALUE              #151\n*                                                                  #151\nH        EQU   *                                                   #151\n         OI    DOUBLE+7,X'F0'      MAKE SURE SIGN IS PLUS          #151\n         LA    R14,0(R2,R3)        CALCULATE FBA.  (TO)            #151\n         IC    R7,0(,R8)           PICK UP NUMBER OF CHARS TO PRINT#151\n         BCTR  R7,0                MAKE IT EXECUTABLE              #151\n         N     R7,=A(7)            MAKE SURE IT'S NOT LARGER THAN 7#151\n         LA    R15,DOUBLE+7        CALC. END OF AREA ADDRESS       #151\n         LR    R9,R15                                              #151\n         SR    R9,R7                                               #151\n*                                                                  #151\nI        EQU   *                                                   #151\n         CLI   0(R9),X'F0'         LEADING ZERO?                   #151\n         BNE   J                   NO, STOP THE EDIT LOOP          #151\n         MVI   0(R9),X'40'         REPLACE ZERO WITH A BLANK       #151\n         LA    R9,1(,R9)           BUMP TO NEXT POSITION           #151\n         CR    R9,R15              ARE WE AT LAST POSITION?        #151\n         BL    I                   NO, CONTINUE EDITING LEADING 0'S#151\n*                                                                  #151\nJ        EQU   *                                                   #151\n         SR    R15,R7              CALC. FBA.   (FROM)             #151\n         MVI   0(R14),X'40'                                        #151\n         TM    4(R8),X'40'         HAVE WE DIVIDED BY 1000?        #151\n         BZ    K                   NO, DON'T ADJUST REGS           #151\n         BCTR  R7,0                MOVE ONE LESS CHARACTER         #151\n         LA    R15,1(,R15)          FROM DOUBLE ARRAY              #151\n*                                                                  #151\nK        EQU   *                                                   #151\n         EX    R7,MOVEXP           MOVE PRINTABLES                 #151\n         TM    4(R8),X'40'         DID WE DIVIDE BY 1000?          #151\n         BZ    L                   NO                              #151\n         LA    R7,1(,R7)           YES, RESET CHAR COUNT           #151\n         LA    R15,1(R14,R7)       FIND K COLUMN                   #151\n         MVI   0(R15),C'K'                                         #151\n*                                                                  #151\nL        EQU   *                                                   #151\n         NI    4(R8),X'BF'         TURN OFF DIV-BY-1000 FLAG       #151\n         LA    R3,2(R7,R3)         BUMP COUNT OF CHARACTERS        #151\n*                                                                  #151\nM        EQU   *                                                   #151\n         LA    R10,4(,R10)         BUMP TO NEXT ADCON ADDRESS      #151\n         CLI   0(R10),X'FF'        ARE WE THRU THIS LIST?          #151\n         BNE   A                   NO, LOOP BACK                   #151\n         LM    R4,R15,STM0X15+(4*R4)  RESTORE REGS R4 THRU R15     #151\n         LA    R3,1(,R3)                                           #151\n         MVI   SPADNTRY,15         SET RETURN TO PROCESS DBRC MSG. #151\n         B     BUFFRET                                             #151\n         SPACE 2                                                   #151\n***********************************************************************\n*                                                                     *\n*  -------                                                            *\n*  ENTRY 3   - PROCESS ALL FAST PATH REGIONS                          *\n*  -------                                                            *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n******** FAST PATH CODE MOVED DOWN HERE FOR ADDR. REASONS *************\n***********************************************************************\nFPCODE   DS    0H                                              @BM60942\n         USING FPCODE,R4                                        #151\n         L     R15,SCDFRB          A(FRB)                      @PL52295\n         USING FRB,R15             SET BASE                    @PL52295\n         LTR   R15,R15             XRF CAPABLE SYSTEM?         @PL52295\n         BNM   FPCHKA              NO, USE IMSID FROM SCD      @PL52295\n         LA    R14,FRBRSENM        YES, USE RSENAME FROM FRB   @PL52295\n         B     FPCHKB              GO SCAN FOR LCRE            @PL52295\n         DROP  R15                                             @PL52295\nFPCHKA   DS    0H                                              @PL52295\n         LA    R14,SSCDIMID        ADDRESS OF IMSID            @PL52295\nFPCHKB   DS    0H                                              @PL52295\n         BAL   R5,SCANLCRE        FIND NEXT LCRE OFF SIDX      @BIM8USS\n         LTR   R15,R15             DID WE FIND AN LCRE?        @PL52295\n         BNZ   FPEND              NO, DONE WITH FP DISPLAYS    @BIHC9AS\n         L     R1,SPADLBLK        RESTORE PTR TO NEW LCRE      @BM60618\n         USING DFSLCRE,R1         ADDRESSABILITY.              @BM60618\n         L     R7,LCREPSTA        GET ADDR ACTIVE PST(THERE IS @BM60618\n         DROP  R1                 AN LCRE FOR EACH ACTIVE PST).@BM60618\n**             DELETED BY PL52295                              @PL52295\n**             DELETED BY PL52295                              @PL52295\n**             DELETED BY PL52295                              @PL52295\n**             DELETED BY PL52295                              @PL52295\n**             DELETED BY PL52295                              @PL52295\n*----------------------------------------------------------------------\n*  A51 FP REGION JOB TERMINATING\n*----------------------------------------------------------------------\nFPCHK1   DS    0H                                              @BIM8USS\n         USING A51,R2                                          @BIM8USS\n**             DELETED BY PL52295                              @PL52295\n         TM    PSTTERM,PSTFPA     IS THIS A FAST PATH REGION   @BIM8USS\n****     BZ    FPCHK              NO: SCAN OUT NEXT PST        @BIHC9AS\n         BZ    FPCODE             NO: SCAN OUT NEXT PST        #151\n         TM    PSTABTRM,PSTIQABN+PSTRGTRM  JOB TERMINATING     @BIL8TCH\n         BZ    FPCHK1A            NO, SKIP TERMINATE MSG       @BIM8USS\n         BAL   R1,INITMSGA        YES, SET UP STANDARD MSG     @BIM8USS\n         MVC   A51TERM(L'TERM),TERM TERMINATE MESSAGE          @BIM8USS\n         MVC   A51FID(L'A51FID),=C'A51' FORMAT ID ='A51'       @BIM8USS\n         B     FP03               GO OUTPUT MESSAGE.           @BIM8USS\n         DROP  R2                                              @BIM8USS\n*----------------------------------------------------------------------\n*  CHECK FOR HOTSTANDBY BACKUP DISPLAY\n*  A60 FP REGION WAITING FOR SWITCHOVER\n*----------------------------------------------------------------------\nFPCHK1A  DS    0H                                              @BIM8USS\n         USING A60,R2                                          @BIM8USS\n         L     R10,SCDFRB         GET A(FAST RESTART BLOCK).   @BIJ1SJH\n         LTR   R10,R10            SYSTEM 'HOTSTANDBY CAPABLE'? @BIJ1SJH\n         BNM   FPCHK2             NO... BYPASS SPECIAL MESSAGE @BMK0088\n         PUSH  USING                                           @BIJ1SJH\n         USING FRB,R10            ADDRESSABILITY TO FRB.       @BIJ1SJH\n         TM    FRBFLAG1,FRBACTV+FRBRSTRT    BACKUP SYSTEM?     @BIJ1SJH\n         BNO   FPCHK2             NO..BYPASS SPECIAL MESSAGE.  @BIJ1SJH\n         BAL   R1,INITMSGA        GO SET UP STANDARD MESSAGE.  @BIJ1SJH\n         MVC   A60FID(L'A60FID),=C'A60' FORMAT ID = 'A60'      @BIM8USS\n         MVC   A60TP(L'FP),FP     REGION TYPE, WAITING FOR     @BIM8USS\n         MVC   A60WAIT(L'SWITCH),SWITCH WAITING FOR SWITCHOVER @BM20126\n         B     FP03               PROCESS NEXT REGION.         @BIJ1SJH\n         POP   USING                                           @BIJ1SJH\n         DROP  R2                                              @BIM8USS\n*----------------------------------------------------------------------\n*  A58 FP REGION SCHEDULING\n*----------------------------------------------------------------------\nFPCHK2   DS    0H                                              @BIM8USS\n         USING A58,R2                                          @BIM8USS\n         L     R10,PSTPSB         GET ADRS OF PSBD             @BIJ1SJH\n         LTR   R10,R10            DOUBLE CHECK PDIR POINTER    @BIJ1SJH\n         BNZ   CKWIFP             IF NON-ZERO, BRANCH          @BIJ1SJH\n         BAL   R1,INITMSGA        GO TO SET UP STANDARD MSG    @BIJ1SJH\n         MVC   A58FID(L'A58FID),=C'A58' FORMAT ID = 'A58'      @BIM8USS\n         MVC   A58TP(L'FP),FP     SET 'FP' REGION TYPE         @BIM8USS\n         MVC   A58WAIT(L'SCHED),SCHED   'SCHEDULING'           @BIM8USS\n         B     FP03                                            @BM10348\n*----------------------------------------------------------------------\n*  A58 FP REGION WAITING\n*----------------------------------------------------------------------\nCKWIFP   DS    0H                                              @BM10348\n         L     R14,PSTSAV1        GET SAP ADDR                 @BM10348\n         USING SAP,R14                                    #151\n         TM    SAPSFLG0,SAPSWAIT  IS THE PST IN IWAIT          @BM10348\n         BZ    CKWIFP2            NO - BRANCH                  @BM10348\n         BAL   R1,INITMSGA        GO TO SET UP STANDARD MSG    @BM10348\n         TM    PDIRFLG3,PDIRIFPR  FP APPLICATION PROGRAM?      @BMV0082\n****     BNO   FPCHK              NO... OOPS, LOOK AT NEXT PST @BMV0082\n         BNO   FPCODE             NO... OOPS, LOOK AT NEXT PST #151\n         MVC   A58TP(L'FPM),FPM   PRIME WITH FPM.              @BIM8USS\n         TM    PDIRFLG3,PDIRIFPM  FP MESSAGE DRIVEN PROGRAM?   @BMV0082\n         BO    CKWIFPA            YES... LEAVE TYPE AS IS.     @BMV0082\n         TM    PDIRFLG3,PDIRIFPU  FP UTILITY PROGRAM?          @BMV0082\n****     BNO   FPCHK              NO... OOPS, LOOK AT NEXT PST @BMV0082\n         BNO   FPCODE             NO... OOPS, LOOK AT NEXT PST #151\n         MVC   A58TP(L'FPU),FPU   SHOW FPU.                    @BIM8USS\n         DROP  R2                                              @BIM8USS\n*----------------------------------------------------------------------\n*  A59 FP REGION WAITING FOR INTENT OR POOL SPACE\n*----------------------------------------------------------------------\nCKWIFPA  DS    0H                                              @BMV0082\n         USING A59,R2                                          @BIM8USS\n         L     R15,PSTSTRAC+4     GET LAST 8 TRACE ENTRIES     @BM10348\n         N     R15,MASK000F       MASK OFF HIGHEST 28 BITS     @BM10348\n         C     R15,TRACE1         IS WAIT FOR INTENT OR POOL   @BMK0088\n         BNE   CKWIFP1            NO - BRANCH                  @BM10348\n         MVC   A59FID(L'A59FID),=C'A59' FORMAT ID = 'A59'      @BIM8USS\n         MVC   A59WAIT(L'FINPLSP),FINPLSP WAITING FOR INTENT   @BIM8USS\n         B     FP03                                            @BM10348\n         DROP  R2                                              @BIM8USS\n*----------------------------------------------------------------------\n*  A57 FP REGION WAITING FOR BLOCK MOVER\n*----------------------------------------------------------------------\nCKWIFP1  DS    0H                                              @BM10348\n         USING A57,R2                                          @BIM8USS\n         MVC   A57FID(L'A57FID),=C'A57' FORMAT ID = 'A57'      @BIM8USS\n         MVC   A57WAIT(L'WBLKMVR),WBLKMVR WAITING FOR BLOCK MVR@BM20126\n         B     FP03                                            @BM10348\n         DROP  R14                                             @BM10348\n         DROP  R2                                              @BIM8USS\n*----------------------------------------------------------------------\n*  A00 CHECK IF FAST PATH UTILITY\n*----------------------------------------------------------------------\nCKWIFP2  DS    0H                 FP REGION NOT IWAITING..     @BIHC9AS\n         USING A00,R2                                          @BIM8USS\n         TM    PDIRFLG3,PDIRIFPR  FP APPLICATION PROGRAM?      @BMV0082\n****     BNO   FPCHK              NO... OOPS, LOOK AT NEXT PST @BMV0082\n         BNO   FPCODE             NO... OOPS, LOOK AT NEXT PST #151\n         TM    PDIRFLG3,PDIRIFPM   FP MESSAGE DRIVEN PROGRAM?  @BMV0082\n         BO    FP01                YES... GO SHOW IT.          @BMV0082\n         TM    PDIRFLG3,PDIRIFPU   FP UTILITY PROGRAM?         @BMV0082\n****     BNO   FPCHK               NO... OOPS, LOOK AT NEXT PST@BMV0082\n         BNO   FPCODE              NO... OOPS, LOOK AT NEXT PST#151\n         MVC   A00TYPE(L'FPU),FPU  SHOW FPU.                   @BIM8USS\n         MVC   A00STEP(L'PSTNSTEP),PSTNSTEP STEP NAME.         @BIM8USS\n         B     FP02                CONTINUE.                   @BMV0082\n*----------------------------------------------------------------------\n*  MESSAGE DRIVEN FP PROGRAM\n*----------------------------------------------------------------------\nFP01     DS    0H                                              @BMV0082\n         MVC   A00TYPE(L'FPM),FPM SHOW MESSAGE DRIVEN.         @BIM8USS\n         MVC   A00STEP(8),=C'NO MSG. ' PRIME TRAN CODE FIELD   @BIM8USS\n         L     R8,PSTSMB          GET SMB ADDRESS.             @BMV0082\n         LTR   R8,R8              IS THERE ONE?                @BMV0082\n         BZ    FP02               NO... LEAVE 'NO MSG.'.       @BMV0082\n         MVC   A00STEP(L'SMBTRNCD),SMBTRNCD TRAN CODE.         @BIM8USS\nFP02     DS    0H                                              @BMV0082\n         BAL   R1,INITMSG         SET STANDARD MSG             @BMV0082\n         MVC   A00FID(L'A00FID),=C'A00' FORMAT ID = 'A00'      @BIM8USS\n         DROP  R2                                              @BIM8USS\n*----------------------------------------------------------------------\n*  CHECK IF FP REGION HAS THREAD.  IF SO, PUT OUT THREAD DISPLAY\n*----------------------------------------------------------------------\nFP03     DS    0H                                              @BM10348\n         OI    SPADFLAG,FPACTIVE  IND AT LEAST 1 ACT FP REGION @BMR0278\n         L     R5,PSTRRE          GET ADDR(1ST RRE OFF PST).   @BMR0011\n         USING DFSRRE,R5                                       @BM80324\n         CLC   RRETYPE,=AL2(RRETYESS)  IS IT AN ESS BMP?       @BM80324\n         BNE   FP04               NO, SKIP ESS CODE            @BM80324\n         DROP  R5                                              @BM80324\n         L     R15,=A(FINDTHRD)   PREPARE TO FIND THREAD       @BIM8USS\n         BALR  R14,R15            CHECK FOR THREADS FROM PST.  @BIM8USS\n         LTR   R5,R5              ARE THERE ANY THREADS?       @BMR0011\n         BZ    BUFFRET            NO... CONTINUE AS USUAL      @BMR0011\n*----------------------------------------------------------------------\n*  SET UP FOR THREAD DISPLAY\n*----------------------------------------------------------------------\n         ST    R5,SPADRREA        SAVE POINTER TO RRE AND      @BMR0011\n         ST    R6,SPADEZSE        EZSE.                        @BMR0011\n         ST    R7,SPADPSAV        SAVE CURRENT PST POINTER AND @BIHC9\n         MVC   SPAD6SAV,SPADNTRY  ENTRY WHILE DISPLAYING       @BME0799\n*                                 THREADS FROM REGIONS.\n         MVI   SPADNTRY,X'09'     SET ENTRY FOR THREAD HEADER  @BIHC9\n*                                 NEXT TIME THROUGH.\n*\nFP04     DS    0H                                              @BM80324\n         B     BUFFRET            GO OUTPUT MESSAGE.           @BIM8USS\n*----------------------------------------------------------------------\n*  A55 FP REGION NOT ACTIVE\n*----------------------------------------------------------------------\nFPEND    DS    0H                                              @BIM8USS\n         USING A55,R2                                          @BIM8USS\n         MVI   SPADNTRY,13         SETUP FOR DBT REGIONS NEXT  @PL52295\n         XC    SPADLBLK,SPADLBLK  ZERO IN CASE USED.           @BM61166\n         TM    SPADFLAG,FPACTIVE  ANY ACTIVE FP REGIONS?       @BM61166\n         BO    BRSETUP            YES... CONTINUE.             @BM61166\n         MVC   A55FPR(L'FPMSG),FPMSG FP NOT ACTIVE MSG.        @BIM8USS\n         MVC   A55FID(L'A55FID),=C'A55' FORMAT ID = 'A55'      @BIM8USS\n         LA    R3,A55LEN          MSG LENGTH.                  @BIHC9\n         B     BUFFRET            PUT OUT MSG                  @BIHC9\n         DROP  R2                                              @BIM8USS\n         EJECT\nSTM0X15  DC    16A(0)                                              #151\n         DROP  R4                                                  #151\n         SPACE 2                                                   #151\n         LTORG                                                     #151\n         PRINT NOGEN                                               #151\n         NARSCD                                                    #151\n         SPACE 2                                                   #151\n         ISAP                                                      #151\n//U.SYSIN2 DD  *          RW0152A  MODS TO SHOW MONITOR IS ACTIVE.\n./ CHANGE NAME=DFSIDP20\nMNACTMSG DC    X'15',C'  MONITOR IS ACTIVE',X'15'                  #152\n//\n//********************** EOJ ******************************************\n//STEP2  EXEC PGM=IEWL,\n//             PARM='NCAL,LET,RENT,XREF,LIST'\n//SYSPRINT DD  SYSOUT=*\n//MODS    DD   DSN=IMA.PVT.MODS,DISP=SHR\n//SYSLMOD  DD  DSN=IMS.SY7N.NUCLEU7,DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(10,1))\n//SYSLIN   DD  *\n  INCLUDE MODS(DFSIDP2Z)\n  INCLUDE SYSLMOD(DFSVNUC0)\n  ENTRY DFSIOPL0\n  NAME DFSVNUC0(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSIDP30": {"ttr": 4101, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00w\\x00w\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 119, "newlines": 119, "modlines": 0, "user": "HOSKINS"}, "text": "//YA267830 JOB 'LEE       SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,NOTIFY=YA2678\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  (YA3324.IMA.RECORD(DFSIDP30))  ***\n//DFSIDP30 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCETM,SYMO=SOURCETM,\n//   SMEMBER=DFSIDP30,LMEMBER=DFSIDP3G,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *   RW0113A   MODS TO THE OUTPUT OF /DIS Q TTT CMND\n./ CHANGE NAME=DFSIDP30\n./ NUMBER INSERT=YES,SEQ1=00295000,NEW1=00295025,INCR=005 00295000 ---\n*/ NUMBER INSERT=YES,SEQ1=00295000,NEW1=00295025,INCR=005 00295000 BGN\n SPACE 3\n****************************************\n         XR    NARREG2,NARREG2\n         ICM   NARREG2,1,SMBQCBPR       000000PP      PRTY\n         ICM   NARREG2,2,PRIPTR         0000XXPP FLAG,PRTY\n         STH   NARREG2,NARBIN2       REMOVE AFTER TESTING.\n         C     NARREG2,=A(X'8000')   Q. 00008000 \"ALL\",0.\n         BE    DIS00200                YES, SKIP; 0 NOT PART OF \"ALL\".\n****************************************\n SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=00295000,NEW1=00295025,INCR=005 00295000 END\n./ NUMBER INSERT=YES,SEQ1=00558500,NEW1=00558505,INCR=005 00558500 ---\n*/ NUMBER INSERT=YES,SEQ1=00558500,NEW1=00558505,INCR=005 00558500 BGN\n SPACE 3\n****************************************\n         XC    NARBIN2(4),NARBIN2    ZERO THE WORK AREA.\n         TM    SMBFLAG2,SMB2RMT      REMOTE TRANSACTION?\n         BO    OVNAR5                YES, THEN THERE IS NO PDIR TO GET.\n         L     NARREG2,SMBPDIR       GET PDIR ADDRESS.\n         MVC   NARBIN2+2(2),PDIRCODE-PDIR(NARREG2) COPY PDIR STATS.\nOVNAR5   EQU   *\n         MVC   NARBIN2+0(2),SMBSTATS               COPY SMB  STATS.\n         NC    NARBIN2,=X'38021F01'                ONLY REAL STATS.\n*\n*\n         MVI   NARMSG4,C' '          SET NAR MSG AREA TO BLANKS.\n         MVC   NARMSG4+1(L'NARMSG4-1),NARMSG4\n         LA    RWORK0,NARMSG4-1      INITIALIZE WORK REG.\n*\nCHKS     EQU   *\n         TM    NARBIN2+2,X'04'       IS PSB SCHEDULED?\n         BZ    CHKIC                 NO.\n         MVC   1(2,RWORK0),=C'S,'    YES, MOVE 'S' TO MSG AREA.\n         LA    RWORK0,2(,RWORK0)     ADJUST WORK REG.\nCHKIC    EQU   *\n         TM    NARBIN2+2,X'01'       INTENT CONFLICT? (NO LONGER USED)\n         BZ    CHKDBS                NO.\n         MVC   1(3,RWORK0),=C'IC,'\n         LA    RWORK0,3(,RWORK0)\nCHKDBS   EQU   *\n         TM    NARBIN2+2,X'02'       A DATABASE FOR THIS PSB STOPPED?\n         BZ    CHKTS                 NO.\n         MVC   1(4,RWORK0),=C'DBS,'\n         LA    RWORK0,4(,RWORK0)\nCHKTS    EQU   *\n         TM    NARBIN2+0,X'10'       IS TRAN P-STOPPED OR STOPPED?\n         BZ    CHKPS                 NO.\n         MVC   1(3,RWORK0),=C'TS,'\n         LA    RWORK0,3(,RWORK0)\nCHKPS    EQU   *\n         TM    NARBIN2+2,X'08'       IS THE PSB STOPPED?\n         BZ    CHKTL                 NO.\n         MVC   1(3,RWORK0),=C'PS,'\n         LA    RWORK0,3(,RWORK0)\nCHKTL    EQU   *\n         TM    NARBIN2+0,X'08'       IS THE TRANSACTION LOCKED?\n         BZ    CHKPL                 NO.\n         MVC   1(3,RWORK0),=C'TL,'\n         LA    RWORK0,3(,RWORK0)\nCHKPL    EQU   *\n         TM    NARBIN2+2,X'10'       IS THE PSB LOCKED?\n         BZ    CHKPNA                NO.\n         MVC   1(3,RWORK0),=C'PL,'\n         LA    RWORK0,3(,RWORK0)\nCHKPNA   EQU   *\n         TM    NARBIN2+3,X'01'       ACB BLOCK MISSING?\n         BZ    CHKTNA                NO.\n         MVC   1(4,RWORK0),=C'PNA,'\n         LA    RWORK0,4(,RWORK0)\nCHKTNA   EQU   *\n         TM    NARBIN2+0,X'20'       IS TRANSACTION STOPPED?\n         BZ    CHKNTCT               NO.\n         MVC   1(4,RWORK0),=C'TNA,'\n         LA    RWORK0,4(,RWORK0)\nCHKNTCT  EQU   *\n         TM    NARBIN2+1,X'02'       IS TRAN ENQUEUED ON THE TCT?\n         BO    CHKUSTOP              YES, BRANCH.\n         MVC   1(5,RWORK0),=C'NTCT,' NO, MOVE MSG TO MSG AREA.\n         LA    RWORK0,5(,RWORK0)     ADJUST WORK REG.\nCHKUSTOP EQU   *\n         TM    SMBAOIFL,SMBNOSCH     IS TRAN 'USTOPPED'?\n         BZ    CHKSPND               NO, BRANCH.\n         MVC   1(6,RWORK0),=C'USTOP,'  YES, MOVE MSG TO MSG AREA.\n         LA    RWORK0,6(,RWORK0)     ADJUST WORK REG.\nCHKSPND  EQU   *\n         OC    SMBSSPND,SMBSSPND     IS TRAN ON THE SUSPEND QUEUE?\n         BZ    ENDCHKS               NO, BRANCH.\n         MVC   1(5,RWORK0),=C'SPND,' YES, MOVE MSG TO MSG AREA.\n         LA    RWORK0,5(,RWORK0)     ADJUST WORK REG.\nENDCHKS  EQU   *\n         CLI   0(RWORK0),C','\n         BNE   *+8\n         MVI   0(RWORK0),C' '\n****************************************\n SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=00558500,NEW1=00558505,INCR=005 00558500 END\nNARBIN2  DC    F'0,0'                                              HUGH\nNARREG2  EQU   LNKREG2 ** IDENTITY. **                             HUGH\n         DC    C' '                                                HUGH\nNARMSG4  DC    CL29' ',C' '                                   LOU+HH+JC\n         PRINT NOGEN                                               HUGH\n         IDLI  PDRBASE=0                                           HUGH\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSIDP40": {"ttr": 4104, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x008\\x008\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 56, "newlines": 56, "modlines": 0, "user": "HOSKINS"}, "text": "//YA2678UB JOB 'LEE       SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,NOTIFY=YA2678\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  (YA3324.IMA.RECORD(DFSIDP40))  ***\n//DFSIDP40 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=DFSIDP40,LMEMBER=DFSIDP4G,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *   RW0114A   MODS TO OUTPUT OF /DIS TTT ALL_ CMND\n./  CHANGE  NAME=DFSIDP40\n./ NUMBER SEQ1=00074040,NEW1=00074041,INCR=01,INSERT=YES\n*                                                                   LAM\n         CLC   0(3,R7),ALL         Q. WAS \"ALL\" SPECIFIED           LAM\n*                                    FOLLOWED BY A 1-3 DIGIT #?     LAM\n         BNE   NOTALL              IF NOT, SKIP.                    LAM\n         LA    R1,3(,R7)           BUMP INPUT POINTER.              LAM\n         LR    R3,R6               SAVE FIELD LENGTH.               LAM\n         SH    R3,=H'2'            DECREMENT LENGTH FOR \"ALL\".      LAM\n         CH    R3,=H'3'            Q. LENGTH OKAY?                  LAM\n         BH    NOTALL              IF NOT, SKIP.                    LAM\n         CH    R3,=H'1'            MAKE SURE LENGTH OKAY.           LAM\n         BL    NOTALL              IF NOT, SKIP.                    LAM\n         LR    R4,R1               SAVE POINTER TO FIRST NUMERIC.   LAM\n         LR    R2,R3               SAVE LENGTH OF FIELD.            LAM\nNUMCHK   CLI   0(R4),X'F0'         MAKE SURE NUMERIC.               LAM\n         BL    NOTALL              *   SKIP.                        LAM\n         CLI   0(R4),X'F9'         *                                LAM\n         BH    NOTALL              *   SKIP.                        LAM\n         LA    R4,1(,R4)           BUMP INPUT POINTER.              LAM\n         BCT   R2,NUMCHK           TEST NEXT DIGIT.                 LAM\n         BCTR  R3,0                MINUS ONE FOR EXECUTE INST.      LAM\n         EX    R3,PACKEM           PACK INPUT NUMBER.               LAM\n         CVB   R3,CONVAREA         AND MAKE IT BINARY.              LAM\n         STC   R3,CLASSHLD         SAVE FOR LATER COMPARE.          LAM\n         B     TRFMTALL            PROCESS TRAN-ALL.                LAM\n*                                                                   LAM\nPACKEM   PACK  CONVAREA(8),0(0,R1)    (EXECUTED INSTRUCTION)        LAM\nCLASSHLD DC    X'00'                                                LAM\n*                                                                   LAM\nNOTALL   DS    0H                                                   LAM\n         MVI   CLASSHLD,X'00'      CLEAR SMBCLASS FLAG.             LAM\n./ NUMBER SEQ1=00356000,NEW1=00356010,INCR=10,INSERT=YES\n*                                                                   LAM\n         CLI   CLASSHLD,X'00'      SPECIAL USE OF \"ALL\"?            LAM\n         BE    TRAN100A            IF NOT, SKIP.                    LAM\n         CLC   CLASSHLD(1),SMBCLASS  SMBCLASS WE'RE LOOKING FOR?    LAM\n         BNE   CHKENTRY            IF NOT, SKIP.                    LAM\n         CLC   =H'0',SMBNQCT       RIGHT CLASS, IS ENQCNT = 0?      LAM\n         BE    CHKENTRY            IF YES, SKIP THE SMB.            LAM\nTRAN100A EQU   *                                                    LAM\n*                                                                   LAM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSIDSPH": {"ttr": 4106, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\xdf\\x00\\xdf\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 223, "newlines": 223, "modlines": 0, "user": "HOSKINS"}, "text": "//YA332431 JOB 'EACARBONE*SH28205610*110A044    2    015  1000007   ',\n// MSGCLASS=H,TIME=10,REGION=3072K,NOTIFY=YA3324,MSGLEVEL=(1,1)\n//*MAIN CLASS=L\n//*MAIN ORG=LOCAL\n//*********************************************************************\n//*********************************************************************\n//*********************************  (YA3324.IMA.RECORD(DFSIDSP0))  ***\n//DFSIDSP0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSIDSP0,LMEMBER=DFSIDSPH,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *\n./  CHANGE  NAME=DFSIDSP0\n         EJECT                                                      #28\n*        ZDOCMOD DFSIDSP0      MOD #28J                             #28\n*        ZDOCMOD DFSIDSP0      MOD #27G                             #27\n./ NUMBER INSERT=YES,SEQ1=17750000,NEW1=17750010,INCR=010           #28\n         SPACE 1                                                    #28\n******************************************************************  #28\n         SPACE 1                                                    #28\n         L     R15,=A(NARIWAIT)    GET E.P. OF NARIWAIT ROUTINE.    #28\n         BALR  R14,R15             GO TO IT.                        #28\n         SPACE 1                                                    #28\n******************************************************************  #28\n         SPACE 1                                                    #28\n./ NUMBER INSERT=YES,SEQ1=18090000,NEW1=18090010,INCR=010           #28\n         TITLE 'DFSIDSP0 - ROCKWELL IWAIT COUNTING ROUTINE.'        #28\n******************************************************************  #28\n*                                                                   #28\n*   THIS ROUTINE HAS BEEN ADDED BY ROCKWELL TO COUNT IWAITS FOR     #28\n*   DL/I I/O ACTIVITY. THE COUNT IS KEPT IN AN EXTENDED PST THAT    #28\n*   EXISTS FOR EACH REAL PST IN THE SYSTEM.                         #28\n*                                                                   #28\n*   CODE HAS BEEN ADDED TO COUNT OCCURANCES OF SPECIFIC PLACES      #27\n*   WITHIN THE ROUTINE SO ANALYSIS OF THE COUNTS CAN BE USED FOR    #27\n*   A VARIETY OF PURPOSES, SUCH AS: DETERMINING THE MAKE-UP OF THE  #27\n*   IWAITS USED FOR ACCOUNTING, WHAT PERCENTAGE EACH PART IS OF THE #27\n*   TOTAL, ETC.;  A BENCH MARK AT NEW RELEASE INSTALLATION TIME TO  #27\n*   SEE IF THE SAME THINGS ARE COUNTED IN THE SAME WAY;             #27\n*   THE COUNTS ARE KEPT IN A ROCKWELL EXTENTION TO THE SCD.         #27\n*                                                                   #28\n******************************************************************  #28\n         SPACE 1                                                    #28\nNARIWAIT DS    0H                                                   #28\n         PUSH  USING                SAVE USING STATUS.              #28\n         USING DSPWRK2,R5           REESTABLISH CERTAIN             #28\n         USING SAP,R10                USING STATEMENTS JUST         #28\n         USING SCD,R11                  TO BE SAFE.                 #28\n         USING NARIWAIT,R12         SET BASE FOR THIS ROUTINE.      #28\n*                                                                   #28\n         STM   R14,R12,DSPWKSA2+12  SAVE REGS SO WE CAN USE 'EM.    #28\n         LR    R12,R15              LOAD BASE FOR THIS ROUTINE.     #28\n         LR    R9,R11               PUT A(SCD) INTO R9.             #28\n         NARSCDF R9,NARSWAT0,KNOWN=SCD,FAILX=OVBMPCTR  A(IWATCTRS). #27\n         ADCTRDSP 30                # TIMES ENTERED THIS ROUTINE.   #27\n         L     R13,SAPIWAIT         GET SAVE AREA AT ENTRY TO IWAIT.#28\n         L     R2,68(,R13)          GET CALLING MODULE'S BASE ADDR. #28\n         CLM   R2,B'0111',SCDDWAIT+1  USE IT IF NOT = TO IWAIT E.P. #28\n         BNE   OVBACKSA             IF = IWAIT E.P., S.A. IS B&B'S. #28\n         L     R13,4(,R13)          BACK UP ONE SAVE AREA SET.      #28\n         ADCTRDSP 31                # OF TIMES B&B INTERVENED.      #27\n*                         ******************************************#27\n         CH    R7,=H'100' * CODING THAT CAN BE ZAPPED TO FORM A    *#27\n         BNH   OVBACKSA   * TRAP IN CASE B&B HAS CHANGED SOMETHING *#27\n         NOPR  R0         * AND HASN'T TOLD US ABOUT IT.           *#27\n*                         ******************************************#27\nOVBACKSA EQU   *                                                    #28\n         L     R6,24(,R13)          GET A(PST) FROM REG1 IN S.A.    #28\n         LA    R6,0(,R6)            CLEAR HIGH BYTE.                #28\n         LR    R15,R11              PUT A(SCD) INTO R15.            #28\n*                                                                   #28\n         NARSCDF R15,NARPSTSL,KNOWN=SCD,FAILX=EXITCTR               #28\n*                                                                   #28\nCHEKPSTA EQU   *                                                    #28\n         C     R6,4(,R15)           IS THE A(PST) IN OUR LIST?      #28\n         BE    GOODPSTA             YES, GOOD PST ADR. USE IT.      #28\n         LA    R15,08(,R15)         BUMP TO NEXT ENTRY IN LIST.     #28\n         CLI   0(R15),X'FF'         AT THE END OF THE LIST?         #28\n         BE    PSTADRNG             YES, ADDRESS IS NOT TO A PST.   #28\n         B     CHEKPSTA             CONTINUE VALIDATION LOOP.       #28\n*                                                                   #28\nPSTADRNG EQU   *                                                    #28\n         ADCTRDSP 32                # OF TIMES BAD PST ADDRESS.     #27\n         B     EXITCTR                                              #28\n*                                                                   #28\nGOODPSTA EQU   *                                                    #28\n         L     R2,68(,R13)          GET CALLING MODULE'S BASE ADDR. #28\n         SR    R3,R3                SET R3 TO ZERO.                 #28\n         SR    R4,R4                SET R4 TO ZERO.                 #27\n*                                                                   #28\n         CLM   R2,B'0111',SCDOOPEN+1 OSAM OPEN INTERFACE? (DFSAOS10)#28\n         BNE   NOTOPEN              NO, BRANCH.                     #28\n         ADCTRDSP 01                YES, # OF AOS10 IWAITS.         #27\n         B     BUMPCTR              GO BUMP ACCTNG IWAIT COUNTER.   #28\n*                                                                   #28\nNOTOPEN  EQU   *                                                    #28\n*****    CLM   R2,B'0111',SCDISAM+1 ISAM SIMULATOR?       (DFSDISM0)#28\n*****    BNE   NOTISAM              NO, BRANCH.                     #28\n         B     NOTISAM              NO, BRANCH.                     #28\n*****    ADCTRDSP 02                YES, # OF DISM0 IWAITS.         #27\n*****    B     BUMPCTR              GO BUMP ACCTNG IWAIT COUNTER.   #28\n*                                                                   #28\nNOTISAM  EQU   *                                                    #28\n         TPROT 0(R2),X'70'          CAN WE ACCESS THE ADDRESS?      #28\n         BNZ   NO0C4AB              NO, AVOID A S/0C4 ABEND.        #28\n*                                                                   #28\n         CLC    5(8,R2),=C'DFSAOS80' Q. MIGHT THIS BE THE MIDDLEMAN #28\n         BNE   NOTAOS8                  NO; KEEP LOOKING.           #28\n         ADCTRDSP 36                    YES; COUNT AOS80.           #28\n         L     R15,4(,R13)          BACK UP ONE SAVE AREA SET.      #28\n         L     R2,68(,R15)          GET CALLING MODULE'S BASE ADDR. #28\n         CLC   26(7,R2),=C'FLG@DBH0' IWAIT FROM FLAGGED PARTS OF    #28\n*                                    THE BUFFER HANDLER?  (DFSDBH00)#28\n         BNE   NOT8DBH              NO, BRANCH.                     #28\n         ADCTRDSP 37                    YES; DBH- VIA AOS80         #28\n         B     OBUFHAND             GO MAKE FURTHER TESTS.          #28\nNOT8DBH  EQU   *                                                    #28\n         CLM   R2,B'0111',SCDOOPEN+1 OSAM OPEN INTERFACE? (DFSAOS10)#28\n         BNE   NOT8AOS1             NO, BRANCH.                     #28\n         ADCTRDSP 38                    YES; AOS10 VIA AOS80        #28\n         B     OBUFHAND             GO MAKE FURTHER TESTS.          #28\n*                                                                   #28\nNOTAOS8  EQU   *                                                    #28\n         CLC   26(7,R2),=C'FLG@DBH0' IWAIT FROM FLAGGED PARTS OF    #28\n*                                    THE BUFFER HANDLER?  (DFSDBH00)#28\n         BNE   NOTDBH               NO, BRANCH.                     #28\n         ADCTRDSP 03                YES, # OF DBH00 IWAITS.         #27\n         B     OBUFHAND             GO MAKE FURTHER TESTS.          #28\n*                                                                   #28\nNO0C4AB  EQU   *                                                    #28\n         ADCTRDSP 35                # TIMES AVOIDED S/0C4 ABEND.    #27\n*                                                                   #28\nNOT8AOS1 EQU   *                                                    #28\nNOTDBH   EQU   *                                                    #28\nNOTOBUF  EQU   *                                                    #28\n         ADCTRDSP 33                # OF TIMES NOTHING WE WANTED.   #27\n         B     EXITCTR              NOTHING WE WANT. SKIP ON OUT.   #28\n         SPACE 1                                                    #28\nOBUFHAND EQU   *                                                    #28\n         L     R3,PSTBUFFA-PST(,R6) GET ADDR OF BUFFER PREFIX.      #28\n         LA    R3,0(,R3)            CLEAR HI-BYTE.                  #28\n         LTR   R3,R3                IS ADDRESS ZERO?                #28\n         BNZ   RDORWRT              IF NOT ZERO, A READ OR WRITE.   #28\n*                                                                   #28\n         ADCTRDSP 04                # OF RELEASE OWNERSHIPS.        #27\n         B     BUMPCTR              GO BUMP ACCTNG IWAIT COUNTER.   #28\n*                                                                   #28\nRDORWRT  EQU   *                                                    #28\n         ADCTRDSP 05                # OF READS AND WRITES.          #27\n         L     R3,IBFALTR-IBFPRF(,R3)    GET BQEL PREFIX ANCHOR.    #28\n         LTR   R3,R3                IS IT ZERO?                     #28\n         BNZ   PSTWRTS              IF NOT 0, BUF HAS BEEN ALTERED. #28\n*                                     BUMP THE IWAIT COUNTER OF     #28\n*                                     THOSE PST'S THAT HAVE         #28\n*                                     MODIFIED THE BUFFER.          #28\n*                                   IF ZERO, IWAIT IS FOR A READ.   #28\n*                                     BUMP THE IWAIT COUNTER OF     #28\n*                                     THE PST WE ALREADY HAVE THE   #28\n*                                     ADDRESS OF.                   #28\n         ADCTRDSP 06                # OF IWAITS FOR A READ.         #27\n         B     BUMPCTR              GO BUMP ACCTNG IWAIT COUNTER.   #28\n*                                                                   #28\nPSTWRTS  EQU   *                                                    #28\n         ADCTRDSP 07                # OF IWAITS FOR A WRITE.        #27\n         USING DFSBQEL,R3                                           #28\n*                                                                   #28\nPSTLOOP  EQU   *                                                    #28\n         LA    R3,0(,R3)            CLEAR HI BYTE.                  #28\n         LTR   R3,R3                LAST BQEL ON BUFFER CHAIN?      #28\n         BZ    NAR8IWT              YES.                            #28\n         L     R6,BQELPSTA          GET A(PST) THAT ALTERED BUFFER. #28\n         LA    R4,1(,R4)            KEEP COUNT OF TRIPS THRU HERE.  #27\n         B     BUMPCTR              GO BUMP ACCTNG IWAIT COUNTER.   #28\n*                                                                   #28\nNEXTPST  EQU   *                                                    #28\n         L     R3,BQELNBUF          NEXT BQEL ON BUFFER CHAIN.      #28\n         B     PSTLOOP              CHECK NEXT.                     #28\n*                                                                   #28\nBUMPCTR  EQU   *                                                    #28\n         LR    R15,R6               PUT A(PST) IN R15.              #28\n*                                                                   #28\n         NARPSTF R15,FAILX=PSTADRNG FIND OUR EXTENDED PST.          #28\n*                                                                   #28\n         L     R15,NARPSTJ0-NARPST#0(,R15)  POINT TO ACCTNG AREA.   #28\n         USING NARPSTK0,R15                                         #28\n         LA    R7,1                 BUMP COUNT OF I/O               #28\n         A     R7,NARPIWT0             IWAIT'S CAUSED BY            #28\n         ST    R7,NARPIWT0                THIS PST.                 #28\n*                                                                   #28\n         ADCTRDSP 09                # TIMES IDSP0 BUMPED NARPIWT0.  #27\n         LTR   R3,R3                IF R3 IS ZERO, ALL PST'S        #28\n         BZ    EXITCTR                HAVE BEEN CONSIDERED.         #28\n         B     NEXTPST              ELSE, GO CHK FOR ANOTHER PST.   #28\n*                                                                   #28\nNAR8IWT  EQU   *                                                    #28\n         LA    R7,1                 DID MORE THAN ONE PST           #27\n         CR    R4,R7                  MODIFY THE SAME DL/I BUFFER?  #27\n         BNH   EXITCTR              NO, BRANCH.                     #27\n         ADCTRDSP 08                # TIMES > 1 PST MODED SAME BUF. #27\n*                                                                   #28\nEXITCTR  EQU   *                                                    #28\n         ADCTRDSP 34                # TIMES WE LEFT THIS ROUTINE.   #27\n*                                                                   #28\nOVBMPCTR EQU   *                                                    #28\n         LM    R14,R12,DSPWKSA2+12  RESTORE REGS.                   #28\n         LA    R13,DSPWKSA1         RESTORE REG 13                  #28\n         BR    R14                  RETURN TO MAINLINE CODE.        #28\n         POP   USING                RESTORE PRIOR USING STATUS.     #28\n******************************************************************  #28\n         LTORG ,                                                    #28\n******************************************************************  #28\n         EJECT                                                      #28\n         DFSBQEL                                                    #28\n         EJECT                                                      #28\n         IBFPRF                                                     #28\n         EJECT                                                      #28\n         NARSCD                                                     #28\n         SPACE 1                                                    #28\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSIINS0": {"ttr": 4111, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x12\\x00\\x12\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "HOSKINS"}, "text": "//$A1041UB JOB 'MEIER,L.A.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1041\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSIINS0))  ***\n//DFSIINS0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=DFSIINS0,LMEMBER=DFSIINSL,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  * LSO=S? DMB/DPSB POOLS TO CSA. ALLOWS DBDDATA TO RUN.\n./  CHANGE  NAME=DFSIINS0\n         DC    AL1(POOLDLSP+POOLDLI+POOLDLGB),AL3(RGDLIPS-RGPARMS) DDTA\n         DC    AL1(POOLGB+POOLDLI+POOLDLGB),AL3(RGDMBP-RGPARMS) DBDDATA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSMODU0": {"ttr": 4353, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00)\\x00)\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 41, "newlines": 41, "modlines": 0, "user": "HOSKINS"}, "text": "//YA3324ED JOB 'EACARBONE.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=YA3324\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  ($A1041.IMA.RECORD(DFSMODU0))  ***\n//DFSMODU0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSMODU0,LMEMBER=DFSMODUE,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *  RW0013A  CHANGE SP 231 STORAGE REQUESTS TO SP 241.\n./  CHANGE  NAME=DFSMODU0\n./  NUMBER  INSERT=YES,SEQ1=00800000,NEW1=00800010,INCR=10\n*********  USERMOD # 13   *********************************************\n*                                                                     *\n*     DFSMODU0 MODS CHANGE ALL SUBPOOL 231 REQUESTS TO SUBPOOL 241,   *\n*     SO THAT ALL NUCLEUS CSA IS FETCHABLE FROM MESSAGE REGIONS.      *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n         DC    X'E7',X'F1',X'80'   231 TO 241                       #13\n//SYSNUSED DD DATA\n./  NUMBER  INSERT=YES,SEQ1=06370000,NEW1=06370010,INCR=10\n*********  USERMOD # 13   *********************************************\n         CLI   MODWVSP,231  SUP POOL 231?                      #13    *\n         BNE   NOT231       NO, BRANCH.                        #13    *\n         MVI   MODWVSP,241  MAKE IT CSA, NON FETCH-PROTECTED   #13    *\nNOT231   EQU   *                                               #13    *\n*********  USERMOD # 13   *********************************************\n./  NUMBER  INSERT=YES,SEQ1=44100000,NEW1=44100010,INCR=10\n*********  USERMOD # 13   *********************************************\n         CLM   R3,B'0010',KSPK231  SUB POOL 231?                    #13\n         BNE   NOT231              NO, BRANCH.                      #13\n         ICM   R3,B'0010',KSPK241  MAKE IT CSA, NON-FETCH PROTECTED #13\nNOT231   EQU   *                                                    #13\n*********  USERMOD # 13   *********************************************\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSPCC20": {"ttr": 4355, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x02>\\x02>\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 574, "newlines": 574, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31P2 JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=996K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//PCC20     EXEC IMSUPDTE,SMEMBER=DFSPCC20,LMEMBER=DFSPCC2H,\n//             P=IMA,LOAD='PVT.MODS',RE=RENT,DISPR=SHR,\n//  DECK='NODECK,SYSPARM(S)',\n//*CONDL=0,\n//  SYMI=SOURCESV,SYMO=SOURCESV,RECORD=NO,ACCT=1,SOUT='*'\n//SYSIN  DD *\n./DFSPCC20 CHANGE NAME=DFSPCC20\n./ NUMBER INSERT=YES,SEQ1=06352000,NEW1=06352005,INCR=001 06352000 ---\n*/ NUMBER INSERT=YES,SEQ1=06352000,NEW1=06352005,INCR=001 06352000 BGN\n     SPACE 3\n************************************************************\n*\n***   ROCKWELL MODS ON THE TOP 'RB' (OUTER SHELL)        ***\n***     FOR MODULE LOADING AND RIGGING FOR               ***\n***     OUR STAEXIT/SNAPPING/SPINOFF MODS.               ***\n***     INSIDE  OF THE ABEND / RE-ATTACH-LOOP.           ***\n***     OUTSIDE OF THE APPLICATION LINK--LOOP.           ***\n*\n************************************************************\n         TM    RCTYPE,RCMSG           Q. TYPE-1=MSG_REGION\n         BZ    OVNAR11                  NO; SKIP OVER.\n         CLI   PXXCTLNM+4,C'*'\n         BNE   OVNAR11\n****************************\n* CODE TO FIND SCD POINTER.\nB#PT     EQU   R1          BASE FOR SSCT = SSCVT\n**HOLD   EQU   R2\nB#PO     EQU   R3          BASE FOR SSOB\nB#PI     EQU   R4          BASE FOR SSIB\nB#PC     EQU   R5          BASE FOR CVT\nB#PV     EQU   R6          BASE FOR JES'S CT\nB#PS     EQU   R7          BASE FOR SCD\n**HOLD   EQU   R8\nB#PM     EQU   R9          BASE FOR NARPARMS\nB#PE     EQU   R10         BASE FOR SSCT EXTENTION\nB#PD     EQU   R11         BASE FOR SSCD\n         L     B#PM,PXXCTLNM\n         USING NARPRM00,B#PM\n         STM   R0,R15,NARPSAV1          STORE ALL REGISTERS IN SPOT #1.\n         L     B#PO,RCSSOB              PTR TO SSOB.\n*&%$     USIN- SSOB,B#PO\n         L     B#PI,SSOBSSIB-SSOB(B#PO) PTR TO SSIB.\n*&%$     USIN- SSIB,B#PI\n         MVC   NARPSSNM,SSIBSSNM-SSIB(B#PI) COPY   SUB-SYSTEM NAME.\n*        *****\n         L     B#PC,CVTPTR              PTR TO CVT.\n*&%$     USIN- CVT,B#PC\n         L     B#PV,CVTJESCT-CVT(B#PC)  PTR TO SSCT'S.\n*&%$     USIN- JESCT,B#PV\n         L     B#PT,JESSSCT-JESCT(B#PV) PTR TO FIRST SSCT.\n         USING SSCT,B#PT\nNARSCTLP CLC   SSCTSNAM+2(2),=C'DC'    Q. IS THIS A 'DC' SSCT.\n         BNE   NARSCTNO                  NO; FORGET IT.\n*\n         L     B#PE,SSCTSUSE           GET A POSSIBL USER ADDRESS.\n         LTR   B#PE,B#PE               Q. IS THERE A USER ADDRESS.\n         BZ    NARSCTNO                  NO; SKIP.\n         CLC   0(8,B#PE),=CL8'SSCTEXT '  YES; Q. USERAREA AN EXTENTION.\n         BNE   NARSCTNO                         NO; SKIP.\n*******************                             YES; DIG DEEPER.\n         LA    B#PD,ESSCTLEN(B#PE)              BUMP TO SSCD.\n         CLC   NARPSSNM,SSCDIMID-SSCD(B#PD)         Q. IS IT OURS.\n         BNE   NARSCTNO                               NO;  FORGET IT.\n         CLI   SCDRGTYP-SSCD(B#PD),SCDRGCTL         Q. IS IT CTL.\n         BNE   NARSCTNO                               NO;  FORGET IT.\n*                                                     YES; USE IT.\n         L     B#PS,SSCDTCTN-SSCD(B#PD)            GET THE SCD ADDR.\n         ST    B#PS,NARPSCDI                       STO SCD ADDR.\n         B     NARSCTOK\n*************************\nNARSCTNO ICM   B#PT,X'F',SSCTSCTA      GET NEXT; Q. IS THERE A NEXT.\n         BNZ   NARSCTLP                            YES; LOOP.\n**    *************\n         ABEND 1114,DUMP                           NO; ABEND.\n*\n**********************************\nNARSCTOK STM   R0,R15,NARPSAV2         STORE ALL REGISTERS IN SPOT #2.\n         MVC   NARPSAV9(SSCTSIZE+SSCDLEN),SSCT    SAVE SSCT FOR DEBUG.\n         DROP  B#PT\n* FIND NARSCD.\n         NARSCDF B#PS,NARSCD10,KNOWN=SCD,FAILX=NARSCTX2\n         ST      B#PS,NARPSCDN         STORE THE NARSCD ADDRESS.\nNARSCTX2 #\n         STM   R0,R15,NARPSAV2         STORE ALL REGISTERS IN SPOT #2.\n         LM    R0,R15,NARPSAV1         RELOD ALL REGIST  FROM SPOT #1.\n*        ******\n**************************\n* RESET BLDL TIME TO NOW.\n         L     R15,NARPCC2P                   PTR TO NAR PCC20 STUF.\n*&%$     USIN-     NARPCC2D,R15\n         STCK  NARPCBLT-NARPCC2D(R15)         RESET BLDL TIME.\n         DROP  B#PM\n************************************************************\nOVNAR11  #\n     SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=06352000,NEW1=06352005,INCR=001 06352000 END\n./ NUMBER INSERT=YES,SEQ1=09160000,NEW1=09160006,INCR=001 09160000 ---\n*/ NUMBER INSERT=YES,SEQ1=09160000,NEW1=09160006,INCR=001 09160000 BGN\n     SPACE 3\n************************************************************\n*\n***   ROCKWELL MODS ON THE 2ND 'RB' (INNER SHELL)        ***\n***     INSIDE  OF THE ABEND / RE-ATTACH-LOOP.           ***\n***     OUTSIDE OF THE APPLICATION LINK--LOOP.           ***\n***                                                      ***\n*\n************************************************************\nB#SA     EQU   R7        BASE FOR PCC20 W/A IN NARPARMS\nB#D      EQU   R15       BASE FOR   MISC       NARPARMS\n         CLI   PXXCTLNM+4,C'*'\n         BNE   NAROV2O\n*******************\n         L     B#SA,PXXCTLNM\n         USING      NARPRM00,B#SA\n         L      B#D,NARPMOVS\n         USING      NARPMOV1,B#D\n         L     B#SA,NARPCC2P\n         USING      NARPCC2D,B#SA\n*        **********\n         AGO   .SKP10\n         ST    B#C,NARPCPST              STO ORIGINAL PST ADDR.\n         NARPSTF B#C,FAILX=NAROV1O\n         ST    B#C,NARPCPSR\n         USING     NARPST#0,B#C\n*        **********\n         MVC   NARPMOV1+00(04),NARPSTW0+00   PUT\n         MVC   NARPMOV2+00(04),NARPSTW0+04      CSA PTRS\n         MVC   NARPMOV3+00(04),NARPSTW0+08              INTO\n         MVC   NARPMOV4+00(04),NARPSTW0+12                  NARPARMS.\n*        ***\n         MVC   NARPMOV1+09(01),NARPSTW0+00   PUT\n         MVC   NARPMOV2+09(01),NARPSTW0+04      CSA LENGTHS\n         MVC   NARPMOV3+09(01),NARPSTW0+08              INTO\n         MVC   NARPMOV4+09(01),NARPSTW0+12                  NARPARMS.\nNAROV1O  #\n.SKP10   ANOP\n****************************************\n* CODE ADDED BY NAR TO FIND TCB, REGION TOP, AND OTHER STUF.\n         L     1,16           CVT\n         L     1,0(1)         DBL\n         L     1,0(1)         TCB\n         ST    1,NARPCTCB\n         B     NAROV2O *&%$  SKIP THE NEXT STUFF WHICH IS NON-XA'ABLE.\n*        ***\n         L     1,X'098'(1)    PTR TO L.D.A. == DPQE-8.\n         L     0,X'5CC'(1)    REGION SIZE LIMIT.\n         L     1,X'008'(1)    PTR TO PQE.\n         A     0,X'018'(1)    REG BASE ADDR + REGION SIZE LIMIT =\n         ST    0,NARPCTOP         =  ABSOLUTE/UNCONDITIONAL REGN TOP.\n*********************\nNAROV2O  #\n         DROP B#SA\n         DROP B#D\n************************************************************\n     SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=09160000,NEW1=09160006,INCR=001 09160000 END\n./ NUMBER INSERT=YES,SEQ1=13502000,NEW1=13502005,INCR=001 13502000 ---\n*/ NUMBER INSERT=YES,SEQ1=13502000,NEW1=13502005,INCR=001 13502000 BGN\n SPACE 3\n***********************************************************\n***   ROCKWELL MODS ON 2ND 'RB'  (INNER SHELL)          ***\n***    INSIDE THE APPLICATION LINK--LOOP.               ***\n***                                                     ***\n***********************************************************\n* NAR MODS FOR STIMER(REAL/TASK) AND STCK LOGIC. (PART-1A  - SCHED)\n         CLI   PXXCTLNM+4,C'*'\n         BNE   NAROV2I\nB#TA     EQU   R7\n*  OTHER REGS IN USE R0,R1,R15\n         L     B#TA,PXXCTLNM\n         L     B#TA,NARPTIMP-NARPRM00(B#TA)\n         USING NARPTIMS,B#TA\n         XC    NARPTIMA(NARPTIM#-NARPTIMA),NARPTIMA\n         STCK  NARPTIMA           TOD  OF  START-UP.\n*        *********\n         L     R1,RCETIME         26 USEC TU FROM -IASI0.  (REAL)\n         ST    R1,NARPTIM2        26 USEC TU.\n         M     R0,=F'26'           1 USEC\n         D     R0,=F'16'          16 USEC TU.\n         ST    R1,NARPTIM1        16 USEC TU.\n         ST    R1,NARPTIMD+2      16 USEC TU.\n         NI    NARPTIMD+5,X'FE'               FORCE EVEN.\n         LH    R15,NARPTIMA                       LEFT 2BYTES OF STCK.\n         AL    R1,NARPTIMA+2      16 USEC TU.\n         BC    4+8,STOLPART                       Q. OVRFLO/CARRY.\n         LA    R15,1(R15)                           YES, BUMP NEXT HWD.\nSTOLPART STH   R15,NARPTIMZ                       LEFT 2BYTES OF STCK.\n         ST    R1,NARPTIMZ+2         TOD  OF  KICK-OFF.\n         L     R1,RCETIME         26 USEC TU FROM -IASI0.  (REAL)\n*%@#./   M     R0,=F'                 NO CHANGE YET.\n*%@#./   D     R0,=F'\n         ST    R1,RCETIME         26 USEC TU FOR STIMER. (WHICHEVER)\n         NI    RCETIME+3,X'FE'     FORCE EVEN TO SHOW ORIG VALUE.\n         DROP  B#TA\n**************************************************\n SPACE 3\n**************************************************\n**  PROCEED ONLY IF TYPE#1=MSG\n         TM    RCTYPE,RCMSG        Q. IS ONLINE TYPE-1.\n         BZ    NAROV2IB              NO, GETOUT.\n**************************\n***  TEST FOR RESETTING THE BLDL TABLE.\nB#BP     EQU   R3\nB#BC     EQU   R4\nB#BS     EQU   R5\nX#B      EQU   R3\nB#B      EQU   R4\n         CLI   PXXCTLNM+4,C'*'\n         BNE   NAROVR3\n         L     B#BP,PXXCTLNM                   PTR TO NARPARMS.\n         USING      NARPRM00,B#BP\n         L     B#BC,NARPCC2P                   PTR TO NAR PCC20 STUF.\n         USING      NARPCC2D,B#BC\n*&%$#    L     B#BS,NARPSCDN                   PTR TO NAR'S SCD.\n         ICM   B#BS,X'F',NARPSCDN              PTR TO NAR'S SCD.\n         BZ    NAROVR3                             IF NONE; SKIP OUT.\n         NARSCDF B#BS,NARSTIM0,KNOWN=NARSCD\n         USING        NARSTIM0,B#BS\n*                                      CLC   MSG-REG : NUCLEUS\n*                                      BC            >=\n         CLC   NARPCBLT,NARSTBLD       Q. IS BLDL RESET REQUEST TIMELY.\n         BNL   NAROVR3                   NO; SKIP OVER.\n*********************************\n**      RESET THE BLDL TABLE..\n*                           ... FIRST TALK ABOUT IT.\n         MVC   NARPCBLT,NARSTBLD              RESET THE TIME.\n         AP    NARPCBLC,=P'1'                 COUNT THE TRIP.\n         DROP  B#BC\n         DROP  B#BP\n         DROP  B#BS\n*                                .... THEN  DO   IT.\n         USING MODTBL,B#B\n         L     X#B,PXMODDYN                  SIZE OF TABLE.\n         LTR   X#B,X#B                       Q. IS THERE A TABLE.\n         BZ    NAROVR3                         NO, LGTH IS ZERO; SKIP.\n         L     B#B,MTXDYNNM                  TOP OF TABLE.\nNARLOP3  MVI   MTNAME,X'F1'                  CLOBBER NAME.\n         XC    MTREFCNT,MTREFCNT                    & COUNT.\n         LA    B#B,MTLEN(B#B)                BUMP.\n         BCT   X#B,NARLOP3                   LOOP IF NOT EXHAUSTED.\n         DROP  B#B\n****************************************\n SPACE 3\nNAROVR3  #\nNAROV2IB #\nNAROV2I  #\n************************************************************\n SPACE 2\n*/ NUMBER INSERT=YES,SEQ1=13502000,NEW1=13502005,INCR=001 13502000 END\n./ NUMBER INSERT=YES,SEQ1=15350000,NEW1=15350555,INCR=001 15350000 ---\n*/ NUMBER INSERT=YES,SEQ1=15350000,NEW1=15350555,INCR=001 15350000 BGN\n SPACE 2\n************************************************************\n* NAR MODS FOR STIMER(REAL/TASK) AND STCK LOGIC. (PART-1B  - LINK )\nB#TB     EQU   R15\n         CLI   PXXCTLNM+4,C'*'\n         BNE   OVNART1\n         L     B#TB,PXXCTLNM       PTR TO TIMING AREA.\n         L     B#TB,NARPTIMP-NARPRM00(B#TB)\n         STCK  NARPTIMJ-NARPTIMS(B#TB)\n         STCK  NARPTIMK-NARPTIMS(B#TB)\nOVNART1  #\n************************************************************\n SPACE 2\n*/ NUMBER INSERT=YES,SEQ1=15350000,NEW1=15350555,INCR=001 15350000 END\n./ NUMBER INSERT=YES,SEQ1=17251000,NEW1=17251155,INCR=001 17251000 ---\n*/ NUMBER INSERT=YES,SEQ1=17251000,NEW1=17251155,INCR=001 17251000 BGN\n EJECT\n**************************************************\n***   ROCKWELL MODS TO  VERIFY CERTAIN        ****\n***   POINTS OF CORRECTNESS AFTER RETURNING   ****\n***   FROM TYPE#1=MSG APPLICATION PROGRAMS..  ****\n**************************************************\n         TM    RCTYPE,RCMSG        Q. IS ONLINE TYPE-1.\n         BZ    OVAFTER               NO, GETOUT.\n SPACE 1\n****************************************\n* VERIFY CORRECT PICA.\nB#SM     EQU   R7\n         L     B#SM,PXXCTLNM\n         USING      NARPRM00,B#SM\n         L     B#SM,NARPCC2P\n         USING      NARPCC2D,B#SM\n         L     1,NARPCTCB          PTR TO TCB.\n         CLC   =AL3(0),5(1)        Q. DOES PIE POINT EXIST.\n         BE    SPIEOK                NO;  NO PIE NO PICA; OK/GOOD.\n         L     1,4(1)                YES, GET PTR TO TOP OF PIE-BLOCK.\n         CLC   =AL3(SPIEZERO),1(1) Q. DOES PIE POINT TO OUR PICA.\n         BE    SPIEOK                YES, CORR PICA; OK/GOOD/CONTINUE.\n         MVC   NARPCWHO,RCPGM        NO, SAVE HIS NAME.\n         MVC   NARPCWHR,0(1)             AND ADDR OF HIS PICA.\n         SPIE  MF=(E,SPIEZERO)            & CORRECT THE PIE-PICA PTR.\n         AP    NARPCSNG,=P'1'\nSPIEOK   EQU   *\n***************************************\n         SPACE 3\n****************************************\n* VERIFY CORE LEFT.\n         B     COREOK     *&%$     NOT COMPATABLE WITH MVS/XA.\n         AGO   .OVCOR1\n         BAL   R14,CORETEST\n         B     COREOK              +0 => OK\n         BAL   R14,CORENAME        +4 => NG\n         AP    NARPCOR1,=P'1'\nCOREABTS EQU   *\n*&%$     TM    NARPCFGA+4,X'04'    Q. ABEND IF NOT GOOD ENUF.\n         BZ    OVCORE                NO, EXIT.\n         CLI   RCCLAS,X'03'        Q. JEFF'S DARN GETMAIN IN CLASS 3.\n         BE    OVCORE                YES,EXIT.\n         BAL   R14,CORENAMF\n         L     1,=X'86000458'             YES,  DO NOT FREE/FLUSH\n         SVC   13                                WHEN ABENDING.\n******************************\n*\n******************************\nDPQE     EQU   152\nFPQE     EQU   8\nFFBQ     EQU   0\nLFBQ     EQU   4\nNFBQ     EQU   0\nCORETEST EQU   *\n         L     1,NARPCTCB               TCB\n         L     1,DPQE(1)          DUMMY PQE\n         L     1,FPQE(1)          FIRST PQE     (PROBABLY ONLY)\n         LR    0,1                              (SAVE IT.)\n         XR    15,15              CLEAR TO REMEMBER JOBPACK FBQE.\n         XR     5,5               CLEAR TO COUNT TRIPS THRU LOOP.\nCORLOPFQ LA     5,1(5)                     COUNT TRIP.\n         L     1,0(1)             FIRST/NEXT FBQE\n         CR    0,1                Q. BACK TO THE PQE.\n         BE    FBQEXHAS             YES, DONE WITH ALL FBQE'S.\n         CLC   13(3,1),NARPCTOP+1 Q. THIS FBQE FOR JOBPACK AREA.\n         BNL   CORLOPFQ             NO, LOOP.\n         LTR   15,15                YES, JOBPACK; Q. FIRST IN JOBPACK.\n         BNZ   FBQTOMNY                             NO, PITY.\n         LR    15,1                                 YES, REMEMBER IT.\n         B     CORLOPFQ\n*        ***\nFBQEXHAS LTR   1,15               Q. ANY JOBPACK FBQE'S.\n         BZ    CHUNKNON             NO; BOY, ARE WE EVER IN TROUBLE.\n         CLC   13(3,1),NARPCBOT+1 Q. FREEBLOCK LOW ENOUGH.\n         BH    CHUNKBOT             NO, PITY.\n         L     15,08(1)           SIZE OF FREEBLOCK\n         A     15,12(1)             + LOW END  = TOP OF FREEBLOCK.\n         C     15,NARPCTOP        Q. IS BLOCK TOP PAST REGION TOP.\n         BL    CHUNKTOP             NO, PITY.\nCHUNKOK  MVC   NARPCBOT,12(1)       YES, GOOD; SAVE LOW END.\n         BR    R14\n*        ***********\nCHUNKTOP EQU   *                  JOBPACK FBQE TOP NOT HIGH ENOUGH.\n         O     0,=X'08000000'\nCHUNKBOT EQU   *                  JOBPACK FBQE BOT NOT LOW  ENOUGH.\n         O     0,=X'04000000'\nCHUNKNON EQU   *                   NO   JOBPACK FBQE AT ALL.\n         O     0,=X'02000000'\nFBQTOMNY EQU   *                   TOOMANY JOBPACK FBQE'S.\n         O     0,=X'01000000'\n         LA    R14,4(R14)          BUMP RETURN ADDR IF BADNEWS.\n         BR    R14\n******************************\n*\n******************************\nCORENAME EQU   *\n         CLI   NARPCWHC,C' '\n         BCR   7,R14\n*        ******\nCORENAMF EQU   *\n         MVC   NARPCWHR,RCPGM\n         LR    1,0                 PQE PTR STILL HERE HOPEFULLY.\n         L     1,FFBQ(1)\n         ST    1,NARPCFFB\n         MVC   NARPCFFB+4(12),0(1)\n         LR    1,0\n         L     1,LFBQ(1)\n         ST    1,NARPCLFB\n         MVC   NARPCLFB+4(12),0(1)\n         BR    R14\n******************************\n.OVCOR1  ANOP\nOVCORE   EQU   *\nCOREOK   EQU   *\n****************************************\n*&%$     TM    NARPCFGA+4,X'01'   IF FLAG IS OFF,\n         BZ    OVSIMTST           DON'T DO THIS NEXT TEST\n         B     OVSIMTST           DON'T DO THIS IN 1.3 FOR NOW.\n*\n         L     R14,4(,R13)        PICK UP PREVIOUS SAVE AREA\n         L     R14,12(,R14)       GET R14 FROM THAT SAVE AREA\n         LA    R14,0(,R14)        CLEAR HY-BYTE\n         LA    R15,PCSTART        POINT TO BEGINNING OF THIS MODULE\n         CR    R14,R15            IS PREVIOUS R14 < OUR E.P.?\n         BL    OVSIMTST           YES, EVERYTHING IS COOL.\n*\n         ABEND 1113,DUMP\n         SPACE 2\nOVSIMTST EQU   *\n         DROP  B#SM\n SPACE 3\n**************************************************\n SPACE 3\nOVAFTER  EQU   *\n SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=17251000,NEW1=17251155,INCR=001 17251000 END\n./ NUMBER INSERT=YES,SEQ1=18200000,NEW1=18200155,INCR=001 18200000 ---\n*/ NUMBER INSERT=YES,SEQ1=18200000,NEW1=18200155,INCR=001 18200000 BGN\n SPACE 3\n**************************************************\n***   ROCKWELL MODS TO  MAKE CERTAIN          ****\n***   TIME MEASUREMENT ADJ. AFTER RETURNING   ****\n***   FROM TYPE#1&2   APPLICATION PROGRAMS..  ****\n**************************************************\n         OI    RCETIME+3,X'01'     FORCE ODD TO SHOW THAT TIME IS VALD.\n         XC    RCTCTR,RCTCTR  CLEAR CTR BECAUSE  OF SUCCESSFUL EXEC.\n SPACE 3\n****************************************\n* NAR MODS FOR STIMER(REAL/TASK) AND STCK LOGIC. (PART-2  --- TERMIN)\nT#S      EQU   R1                  TIMER STOP REG.\nB#TC     EQU   R7                  BASE FOR TIMES.\nB#MC     EQU   R15\n         CLI   PXXCTLNM+4,C'*'\n         BNE   OVNART2\n         L     B#TC,PXXCTLNM\n         L     B#MC,NARPMOP2-NARPRM00(B#TC)\n         L     B#TC,NARPTIMP-NARPRM00(B#TC)\n         USING NARPTIMS,B#TC\n         STCK      NARPTIMT        TERMINATE TIME,\n         L     T#S,NARPTIMT+2\n         S     T#S,NARPTIMA+2       - START TIME,\n         ST    T#S,NARPTIMD+2       = DELTA TIME.\n         OI        NARPTIMD+5,X'01'   FORCE ODD.\n         USING NARCMOV2,B#MC\n         MVC   NARCTIMD,NARPTIMD\n         DROP  B#MC\n         DROP  B#TC\nOVNART2  DC    0Y(0)\n************************************************************\n SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=18200000,NEW1=18200155,INCR=001 18200000 END\nSPIEZERO SPIE  0,MF=L                                              HUGH\nMINTIME  DC    A(X'F1')    MINIMUM TIME TO BE RETURNED.            HUGH\n         BP    STA220    (IBM=BNZ) USE ONLY IF POS-NON-ZERO    HUGH+RDH\n./ NUMBER INSERT=YES,SEQ1=25136000,NEW1=25136001,INCR=001 25136000 ---\n*/ NUMBER INSERT=YES,SEQ1=25136000,NEW1=25136001,INCR=001 25136000 BGN\n SPACE 3\n**************************************************************\n***   ROCKWELL MODS IN THE STAE EXIT FOR TIMING  AND      ****\n***    DUMP SPIN PROCESSING.                              ****\n**************************************************************\n* NAR MODS FOR STIMER(REAL/TASK) AND STCK LOGIC. (PART-3  - ABEND)\nB#TD     EQU   R7\nB#MD     EQU   R15\n         OI    RCETIME+3,X'01'     FORCE ODD TO SHOW TRULY DONE.\n         CLI   PXXCTLNM+4,C'*'\n         BNE   OVNART3\n         L     B#TD,PXXCTLNM\n         L     B#MD,NARPMOP2-NARPRM00(B#TD)\n         L     B#TD,NARPTIMP-NARPRM00(B#TD)\n         USING NARPTIMS,B#TD\n         STCK      NARPTIMT        TERMINATE TIME,\n         L     T#S,NARPTIMT+2\n         S     T#S,NARPTIMA+2       - START TIME,\n         ST    T#S,NARPTIMD+2       = DELTA TIME.\n         OI        NARPTIMD+5,X'01'   FORCE ODD.\n         USING NARCMOV2,B#MD\n         MVC   NARCTIMD,NARPTIMD\nOVNART3  EQU   *\n         DROP  B#MD\n         DROP  B#TD\n*****************************************\n     SPACE 3\n*****************************************\n         DELETE EP=NARSPC10  FREE THE SPACE FOR STAE/SNAP/SPIN CODE.\nB#E      EQU   R7\n         TM    RCTYPE,RCMSG\n         BZ    SKASTAE\n**\n         CLI   PXXCTLNM+4,C'*'\n         BNE   SKASTAE\n         L     B#E,PXXCTLNM                   PTR TO NARPARMS.\n         USING     NARPRM00,B#E\n*&%$#    L     B#E,NARPSCDN                   PTR TO NAR'S SCD.\n         ICM   B#E,X'F',NARPSCDN              PTR TO NAR'S SCD.\n         BZ    SKASTAE                             IF NONE; SKIP OUT.\n         NARSCDF B#E,NARSCFB0,KNOWN=NARSCD\n         TM    022*8(B#E),X'80'                Q. FEATURE 22 ON.\n         BZ    SKASTAE                           NO; SKIP NARSTAE0.\n**\n         L     B#E,PXXCTLNM\n         USING NARPRM00,B#E\n         L     B#E,NARPSTAE\n         USING NARPSUAE,B#E\n         L     R1,RCECOMP      GET COMPLETION CODE\n         LA    R1,0(,R1)       ZERO HIGH ORDER BYTE\n         C     R1,=F'777'      IS IT PSEUDO ABEND\n         BE    SKASTAE         YES, DONT WANT A DUMP\n         C     R1,=F'778'      IS IT ROLL CALL.                     JB\n         BE    SKASTAE         YES, DONT WANT A DUMP                JB\n         C     R1,=F'3303'     IS IT A SUSPENSION\n         BE    SKASTAE         YES, DONT WANT A DUMP\n**********************************\n         LOAD  EP=NARSTAE0\n         ST    R0,NARPSTA1\n         LR    R15,R0\n         ST    R13,NARPSAVE+4\n         LA    R13,NARPSAVE\n         LR    R9,R14\n         BALR  R14,R15\n         LR    R14,R9\n         L     R13,NARPSAVE+4\nSKASTAE  EQU   *\n         DROP  B#E\n********************************************************\n SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=25136000,NEW1=25136001,INCR=001 25136000 END\n./ NUMBER INSERT=YES,SEQ1=34160410,NEW1=34160411,INCR=001 34160410 ---\n*/ NUMBER INSERT=YES,SEQ1=34160410,NEW1=34160411,INCR=001 34160410 BGN\n SPACE 3\n********************************************************\n         LTR   R5,R5\n         BZ    SKSETRP\n         TM    RCTYPE,RCBMP    IF IT IS A BMP DON'T KILL SYSUDUMP\n         BO    SKSETRP\n**\n         CLI   PXXCTLNM+4,C'*'\n         BNE   SKSETRP\nB#F      EQU   R15\n         L     B#F,PXXCTLNM                   PTR TO NARPARMS.\n         USING     NARPRM00,B#F\n*&%$#    L     B#F,NARPSCDN                   PTR TO NAR'S SCD.\n         ICM   B#F,X'F',NARPSCDN              PTR TO NAR'S SCD.\n         BZ    SKSETRP                             IF NONE; SKIP OUT.\n         NARSCDF B#F,NARSCFB0,KNOWN=NARSCD\n         TM    023*8(B#F),X'80'                Q. FEATURE 23 ON.\n         BZ    SKSETRP                           NO; SKIP DUMP KILL.\n**\nKILLDMP  SETRP WKAREA=(5),DUMP=NO    KILL SYSUDUMP\nSKSETRP  EQU   *\n         DROP  B#F\n********************************************************\n SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=34160410,NEW1=34160411,INCR=001 34160410 END\nMINTIME1 DC    A(X'F1')    MINIMUM TIME TO BE RETURNED.            HUGH\n./ NUMBER INSERT=YES,SEQ1=34450000,NEW1=34451111,INCR=001 34450000 ---\n*/ NUMBER INSERT=YES,SEQ1=34450000,NEW1=34451111,INCR=001 34450000 BGN\n***********************************************************\n   EJECT\n********************************************************\n         DC    C'&SYSDATE  &SYSTIME'\n         NARPRM\n********************************************************\n    EJECT\n********************************************************\n         NARCPY\n********************************************************\n    EJECT\n********************************************************\n         NARSCD\n    EJECT\n********************************************************\n   SPACE 3\n         ZNOGEN\n   SPACE 3\n         IDLI PSTBASE=0\n         ISCD SCDBASE=0\nSSCD     EQU  SSCDORG\n         DFSSSOB DFSESSCT\n********************************************************\n    SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=34450000,NEW1=34451111,INCR=001 34450000 END\n*&%$SSCD  DSECT\n*&%$      SSCD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSPIL00": {"ttr": 4609, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x008\\x008\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 56, "newlines": 56, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS22PI JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN CLASS=L\n//*******************************\n//DFSPIL00 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDB,SYMO=SOURCEDB,\n//   SMEMBER=DFSPIL00,LMEMBER=DFSPIL0H,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   ACCT=0\n//U.SYSIN1 DD  *\n./  CHANGE  NAME=DFSPIL00   11/20/89 INSTRUCTION CORRECTION FIX\n         CHANGEID APAR=PL36861,ID=K,PREREQ=0                   @PL36861\n         NR    R1,R2              STRIP FOR CONTROL            @PL36861\n//U.SYSIN2 DD  *\n./  CHANGE  NAME=DFSPIL00   11/25/89 NEW FIX FOR MULTI-LEVEL ENQUES.\n         CHANGEID APAR=PL53143,ID=P,PREREQ=0                   @PL53143\n         TM    REQFLGS,REQTENQ    IS THIS A TEST ENQUEUE.      @PL53143\n         BO    ADJUPXT2               YES, DO MORE CHECKING.   @PL53143\nADJUPXT0 DS    0H                                              @PL53143\n         SPACE 3                                               @PL53143\n************************************************************** @PL53143\n*    IF A TEST ENQUEUE REQUEST FOR A RESOURCE ALREADY OWNED    @PL53143\n*    WOULD RESULT INA RAISE CONTROL, IT IS POSSIBLE TO         @PL53143\n*    BE HERE WITH A TEST REQUEST BLOCK NOT HAVING TO WAIT.     @PL53143\n*    WE MUST RECONSTRUCT THIS TEST REQUEST BLOCK TO LOOK       @PL53143\n*    LIKE THE OWNING REQUEST BLOCK DID PRIOR TO ADJUP.         @PL53143\n************************************************************** @PL53143\n         SPACE 2                                               @PL53143\nADJUPXT2 DS    0H                                              @PL53143\n         TM    REQCTLW,REQWAIT      IS A WAIT REQUIRED.        @PL53143\n         BO    ADJUPXT0               YES, GO COMPLETE REQBLK. @PL53143\n         MVC   REQPCTLW,REQCTLW     RESTORE PRIOR CONTROL      @PL53143\n         NI    REQFLGS,255-REQTENQ  TURN OFF TEST ENQUE BIT    @PL53143\n         B     ENQXTNFB             RETURN TO CALLER W/ RC=0   @PL53143\n         IC    R15,TSTLVL+3         IN BOTH CURR AND PROPOSED  @PL53143\n//****************************  LINK  EDIT FOLLOWS  ********\n//***                            MUST BE RE-DONE IN NUC-MAKER  ***\n//L.SYSIN  DD  *\n         INCLUDE SYSLIB(DFSPIL00)   GET THE REST OF THE CSECTS\n         ENTRY DFSPIXA0\n         MODE AMODE(31),RMODE(24)\n//**     NAME FROM-JCL-ABOVE\n//**********************************************************\n//SYSNUSED DD  DATA\n//U.SYSINXXDD  *     THIS WAS A ONE-TIME TRAP --- BUT USELESS.\n./  CHANGE  NAME=DFSPIL00\n         CHANGEID APAR=PL53143,ID=Z,PREREQ=0                   @PL53143\n         LH    R4,QELWC           GET THE WAIT COUNT           @PL53143\n         LTR   R4,R4              IS THERE A COUNT?            @PL53143\n         BZ    ENQ31D1            NO, OK TO LEAVE.             @PL53143\n         BAL   R14,XC10ABND       YES, TAKE AN ABEND.          @PL53143\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSPSTB0": {"ttr": 4611, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x13\\x00\\x13\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31TB JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  (       IMA.RECORD(DFSPSTB0))  ***\n//DFSPSTB0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSPSTB0,LMEMBER=DFSPSTBL,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *\n./  CHANGE  NAME=DFSPSTB0\n*\n*  THIS LINE ADDED TO FORCE RE-ASSEMBLY FOR LOCAL MOD TO ILOGREC.   #28\n*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSRRA40": {"ttr": 4613, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x17\\x00\\x17\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31A4 JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=4096K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//RRA40     EXEC IMSUPDTE,SMEMBER=DFSRRA40,LMEMBER=DFSRRA4H,\n//             P=IMA,LOAD='PVT.MODS',DISPR=SHR,\n//  SYMI=SOURCESV,SYMO=SOURCESV,RECORD=NO,ACCT=1,SOUT='*'\n//RECORD DD DISP=SHR,DSN=IMS.EMTLIB\n//SYSINR DD DISP=SHR,DSN=IMS.EMTLIB\n//SYSIN  DD *\n./   CHANGE  NAME=DFSRRA40\n./ NUMBER INSERT=YES,SEQ1=24500000,NEW1=24502222,INCR=001 24500000 ---\n*/ NUMBER INSERT=YES,SEQ1=24500000,NEW1=24502222,INCR=001 24500000 BGN\n SPACE 3\n************************************************************\n***  PXMODDYN IS 2-DIGITS FROM THE PARM FIELD; WE NEED MORE LEVERAGE.\n         L     R15,PXMODDYN\n*&%$     SLL   R15,3                 MULT BY 8\n         MH    R15,=Y(10)            MULT BY 10\n*&%$     MH    R15,PXMODDYN+2        MULT BY ITSELF; SQUARE IT.\n         ST    R15,PXMODDYN\n************************************************************\n SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=24500000,NEW1=24502222,INCR=001 24500000 END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSRRC10": {"ttr": 4615, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x009\\x009\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 57, "newlines": 57, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31R1 JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=4096K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//RRC10     EXEC IMSUPDTE,SMEMBER=DFSRRC10,LMEMBER=DFSRRC1H,\n//             P=IMA,LOAD='PVT.MODS',DISPR=SHR,\n//  SYMI=SOURCESV,SYMO=SOURCESV,RECORD=NO,ACCT=1,SOUT='*'\n//RECORD DD DISP=SHR,DSN=IMS.EMTLIB\n//SYSINR DD DISP=SHR,DSN=IMS.EMTLIB\n//SYSIN  DD *\n./   CHANGE  NAME=DFSRRC10\n./ NUMBER INSERT=YES,SEQ1=03000000,NEW1=03002222,INCR=001 03000000 ---\n*/ NUMBER INSERT=YES,SEQ1=03000000,NEW1=03002222,INCR=001 03000000 BGN\n SPACE 3\n************************************************************\n         USING NARPRM00,R8\n***  REG 8 PRESUMED NOT USED BY IBM AND THEREFORE AVAIL FOR US.\n         LOAD  EP=NARPARMS         LOAD OUR OWN PARMS.\n*-       ICM   R0,B'1000',=C'*'    SET  *  IN HI-ORD BYTE.\n         ST    R0,PXXCTLNM         STO ADDR OVER PREVIOUSLY-USED WORD.\n         MVC   PXXCTLNM+4(4),=F'0' ZERO LAST HALF OF PXXCTLNM\n         MVI   PXXCTLNM+4,C'*'     STO ASTERISK MARKER FLAG.\n         LR    R8,R0               PTR TO OUR   PARMS.\n         LA    R15,PXPARMS         PTR TO THEIR PARMS.\n         ST    R15,NARPPXPM        STO THEIRS IN OURS.\n         MVC   NARPPSTI,RCPST      COPY PST PTR; PCC20 WILL ERASE IT.\n************************************************************\n SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=03000000,NEW1=03002222,INCR=001 03000000 END\n               SHSPV=10,                                               *\n         TM    RCETIME+3,X'01'     Q. ODD OR EVEN.                 HUGH\n         BO    RCE5SPIN               ODD;  THEN IT IS VALID.      HUGH\n        SPACE 3                                                    HUGH\n         BNL   RCS1           IF EQUAL,  DITTO  .                  HUGH\n         LA    R1,1121        ELSE, RIG FOR TERMINATION & ABEND.   HUGH\n         STCM  R1,7,NARPCMP+1                                      HUGH\n         OI         NARPCMP,X'01'                                  HUGH\n./ NUMBER SEQ1=04500000,NEW1=04500155,INCR=01,INSERT=YES 0450000 ---\n*/ NUMBER SEQ1=04500000,NEW1=04500155,INCR=01,INSERT=YES 0450000 BGN\n SPACE 3\n************************************************************\n         CLC   RCTLIM,RCTCTR       Q. HAS LIMIT BEEN EXCEEDED.\n         BNL   OVNAR4                NO, SKIP.\n         LA    R1,1122               YES, RIG FOR ABEND.\n         STCM  R1,7,NARPCMP+1\n         OI         NARPCMP,X'02'\nOVNAR4   EQU   *\n         ICM   R11,7,NARPCMP+1     Q. NAR COMP ZERO.\n         BZ    OVNAR5                YES, SKIP.\n         ABEND (R11),DUMP\nOVNAR5   EQU   *\n************************************************************\n SPACE 3\n*/ NUMBER SEQ1=04500000,NEW1=04500155,INCR=01,INSERT=YES 0450000 END\nSTIMLIM  DC    A(X'F2') CHARGE TIME IF ABEND OTHER THAN TIME-OUT.  HUGH\n         NARPRM                                                    HUGH\n         EJECT                                                     HUGH\n         NARCPY                                                    HUGH\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSSABN0": {"ttr": 4617, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\xe2\\x00\\xe2\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 226, "newlines": 226, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31AB JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  (       IMA.RECORD(DFSSABN0))  ***\n//DFSSABN0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSSABN0,LMEMBER=DFSSABNH,\n//   RE='RENT,REFR',\n//** CONDL=0,\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   LINEC=54,\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  * RW0001A, 28L, 33A, 151B\n./    CHANGE   NAME=DFSSABN0\n         XC    RIXC,RIXC           CLEAR THE RIXTRA AREA.           #28\n         MVC   RIXTRA4+2(2),PDIRCODE    COPY PDIR STATS/FLAG/CODE.  #28\n         MVC   RIXTRA4+0(2),SMBSTATS    COPY SMB  STATS/FLAG/CODE.  #28\n./ NUMBER INSERT=YES,SEQ1=01029400,NEW1=01029455,INCR=001 01029400 ---\n*/ NUMBER INSERT=YES,SEQ1=01029400,NEW1=01029455,INCR=001          BGN\n         SPACE 3\n****************************************\n* CODE ADDED BY NAR TO PROCESS THE BULK OF THE LOCAL MODS.\n*\n         BREAKOUT NARSABNA\n*\n***************************************\n SPACE 3\n*/ NUMBER INSERT=YES,SEQ1=01029400,NEW1=01029455,INCR=001          END\n./ NUMBER INSERT=YES,SEQ1=02500000,NEW1=02500100,INCR=0100  02500000\n TITLE ' ROCKWELL LOCAL MODIFICATIONS                                 '\n*/ NUMBER INSERT=YES,SEQ1=02500000,NEW1=02500100,INCR=0100   BGN\n         SPACE 3\n         LTORG\n*******************************************************************\n*******************************************************************\n******                             ********************************\n******   ROCKWELL MODS FOLLOW      ********************************\n******                             ********************************\n*******************************************************************\n*******************************************************************\n         SPACE 3\n*******************************************************************\n         CEQUATE\n         PRINT GEN\n         BREAKOUT *CSECT\nNARSABNA #\n         EJECT\n*PDIRBASE EQU   R3\n*SMBBASE  EQU   R4\n*PSTBASE  EQU   R9\n*LOG7BASE EQU   R10\n*SCDBASE  EQU   R11\nABTERM   EQU   DLRINT+DLRLOG+DLRAB\n         USING     PDIR,R3\n         USING      SMB,R4\n         USING      PST,R9\n         USING DTRMPOOL,R10\n         USING      SCD,R11\n         SPACE 2\n         STCK  RISTCKST            STO TOD NOW.\n         SPACE 2\n*******************************************************************  #1\n*                                                                    #1\n*   CHANGE THE CLASS OF A TRANSACTION FROM CLASS=1 TO CLASS=2 IF     #1\n*   THE RATIO OF DATABASE DL/I CALLS PLUS MSG Q CALLS PER ONE        #1\n*   MESSAGE GU EXCEEDS 40.  THE VALUE OF 40 WAS CHOSEN SOMEWHAT      #1\n*   ARBITRARILY AND COULD BE CHANGED IF IT BECOMES NECESSARY.        #1\n*                                                                    #1\n         TM    PSTTERM,PSTMSG      IS THIS AN ON-LINE MSG REGION?    #1\n         BZ    DONTDOIT            NO, DON'T CHANGE CLASS            #1\n         TM    PDIRCODE,PDIRTYP1   IS THE PROGRAM A TYPE 1?          #1\n         BZ    DONTDOIT            NO, CUT OUT                       #1\n         CLI   PDIRSYM,C'I'        DOES PROG NAME BEGIN WITH 'I'?    #1\n         BE    DONTDOIT            YES, DON'T CHANGE CLASS           #1\n         CLC   =AL3(0),PSTSMB+1    IS THERE AN SMB POINTER?          #1\n         BE    DONTDOIT            NO, CUT OUT                       #1\n         L     R15,PSTSMB          GET THE SMB POINTER               #1\n         CLI   SMBCLASS-SMB(R15),1 HAVE WE CHANGED CLASS ALREADY?    #1\n         BNE   DONTDOIT            YES, CUT OUT                      #1\n         TM    SMBFLAG1-SMB(R15),SMBENQ  IS THE TRAN ENQUEUED NOW?   #1\n         BO    DONTDOIT            YES, CUT OUT. WE'LL GET HIM LATER.#1\n         CLC   =F'0',PSTMGU        HAS A 'GU' BEEN ISSUED?           #1\n         BE    DONTDOIT            NO, CUT OUT                       #1\n         SR    R14,R14             CLEAR WORK REGISTER               #1\n         L     R15,PSTDGU          GET DATABASE 'GU' COUNT           #1\n         A     R15,PSTDGN          ADD    \"     'GN'   \"             #1\n         A     R15,PSTDGNP          \"     \"     'GNP'  \"             #1\n         A     R15,PSTDGHU          \"     \"     'GHU'  \"             #1\n         A     R15,PSTDGHN          \"     \"     'GHN'  \"             #1\n         A     R15,PSTDGHNP         \"     \"     'GHNP' \"             #1\n         A     R15,PSTDISRT         \"     \"     'ISRT' \"             #1\n         A     R15,PSTDDLET         \"     \"     'DLET' \"             #1\n         A     R15,PSTDREPL         \"     \"     'REPL' \"             #1\n         A     R15,PSTMGU           \"  MESSAGE  'GU'   \"             #1\n         A     R15,PSTMGN           \"     \"     'GN'   \"             #1\n         A     R15,PSTMISRT         \"     \"     'ISRT' \"             #1\n         D     R14,PSTMGU          DIVIDE BY COUNT OF MSG 'GU'S      #1\n         C     R15,=F'40'          COMPARE WITH HARD CODED CONSTANT  #1\n         BL    DONTDOIT            IF LESS THAN CONSTANT, CUT OUT    #1\n         L     R15,PSTSMB          ELSE, GET A(SMB) AND              #1\n         MVI   SMBCLASS-SMB(R15),2    CHANGE ITS CLASS TO '2'        #1\nDONTDOIT EQU   *                                                     #1\n*******************************************************************  #1\n         SPACE 3\n******************************************************************* #28\n*                                                                   #28\n*   COPY  \"SETC\" DATA, IWAIT COUNTS, AND MACHINE I.D. TO LOG REC.   #28\n*                                                                   #28\n         LR    R15,R9              PUT A(PST) IN R15.               #28\n         NARPSTF R15,FAILX=OVSETC  FIND OUR EXTENDED PST.           #28\n         L     R15,NARPSTJ0-NARPST#0(,R15) POINT TO ACCTNG AREA.    #28\n         USING NARPSTK0,R15                                         #28\n         MVC   RIXTRA1(12),NARPCHG0 MOVE \"SETC\" DATA TO LOG RECORD. #28\n         MVC   RIXTRA5,NARPIWT0    MOVE \"IWAIT COUNTS\" TO RECORD.   #28\n         L     R2,16               GET A(CVT).                      #28\n         L     R2,196(,R2)         GET A(SMCA).                     #28\n         MVC   RIXTRA6,16(R2)      MOVE MACHINE I.D. TO RECORD.     #28\n         MVC   RIXTRAX,NARPCHI0    MOVE  SOURCE I.D. TO RECORD.     #28\n         MVC   RIXTRAY,NARPCHF0    MOVE  SOURCE FLAGS.              #28\n*                                                                   #28\n         XC    NARPCHG0(12),NARPCHG0   SET \"SETC\" AREA TO ZEROS.    #28\n         XC    NARPCHI0,NARPCHI0   SET SOURCE I.D. TO ZEROS.        #28\n         XC    NARPCHF0,NARPCHF0   SET SOURCE FLAG TO ZEROS.        #28\nOVSETC   EQU   *                                                    #28\n******************************************************************* #28\n         SPACE 3\n****************************************************************** #151\n*   ADD  IBM'S PST STATS  INTO  NAR'S XPST STATS.                  #151\nP#X      EQU   R14                                                 #151\nR#P      EQU   R15                                                 #151\nR#W      EQU   R2                                                  #151\n         LR    P#X,R9              A(PST) TO R(P#X)                #151\n         NARPSTF P#X,FAILX=OVSTAT  PTR TO THE NAR PARALLEL PST.    #151\n         USING NARPST#0,P#X                                        #151\n         L     P#X,NARPSTY0                                        #151\n         USING     NARPSTX0,P#X                                    #151\n         L     R#W,NARPSTI0        BUMP                            #151\n         A     R#W,NARPIWT0          NBR OF                        #151\n         ST    R#W,NARPSTI0            I/O IWAITS.                 #151\n         XC    NARPIWT0,NARPIWT0   SET IWAIT COUNTER TO ZEROS.     #151\n         DROP  R15                                                 #151\n         L     R#W,NARPSTL0        BUMP                            #151\n         A     R#W,=A(1)             NBR                           #151\n         ST    R#W,NARPSTL0            OF LOADS.                   #151\n         L     R#W,NARPSTM0        BUMP                            #151\n         AH    R#W,PSTDQCNT          NBR                           #151\n         ST    R#W,NARPSTM0            OF MESSAGES.                #151\n         LA    R#P,0                                               #151\nLOOPSTX  LA    R#P,4(R#P)                                          #151\n         L     R#W,PSTACCT-04(R#P)                                 #151\n         A     R#W,NARPSTN0-4(R#P)                                 #151\n         LPR   R#W,R#W                                             #151\n         ST    R#W,NARPSTN0-4(R#P)                                 #151\n         C     R#P,NARPSTX0                                        #151\n         BL    LOOPSTX                                             #151\n         DROP  P#X                                                 #151\nOVSTAT   EQU   *                                                   #151\n****************************************************************** #151\n         SPACE 3\n******************************************************************* #33\n*                                                                   #33\n*   THIS CODE WILL SET ALL TP-PST'S TO MAXCLASS WHEN ONE OF THE     #33\n*   MESSAGE REGIONS IS GOING TO BE ABENDED WITH A USER 775.         #33\n*   THOSE PST'S THAT DO NOT GET CHANGED ARE TP-PST'S THAT HAVE      #33\n*   A CLASS OF 3 OR 9, ALL BMP-PST'S, AND ALL INACTIVE PST'S.       #33\n*   THIS ACTION WILL PREVENT THE ONLINE NUCLEUS FROM EVENTUALLY     #33\n*   ABENDING AND ALLOW THE SITUATION TO BE CLEARED UP GRACEFULLY.   #33\n*   THE MASTER TERMINAL OPERATOR MUST RESET THE REGION CLASSES TO   #33\n*   ALLOW IMS TO CONTINUE NORMAL PROCESSING.                        #33\n*                                                                   #33\n         LR    R15,R11             PUT A(SCD) IN R15.               #33\n*                                                                   #33\n         NARSCDF R15,NARSCFB0,KNOWN=SCD,FAILX=OVNAR775              #33\n*                                                                   #33\n         TM    026*8(R15),X'80'   Q. FEAT #26 ON?                   #33\n         BZ    OVNAR775             NO, SKIP ALL THIS.              #33\n*                                                                   #33\n         TM    DLRFLAG2,ABTERM    Q. DID PROG ABEND?                #33\n         BZ    OVNAR775             NO, SKIP ALL THIS.              #33\n         CLC   =H'775',DLRCOMP+2    YES; Q. WITH USER CODE 775?     #33\n         BNE   OVNAR775                    NO. STILL SKIP.          #33\n*                                                                   #33\n         PUSH  USING               SAVE USING STATUS.               #33\n         USING PST,R14             TELL THE ASSEMBLER.              #33\n         SR    R2,R2               CLEAR R2.                        #33\n         ICM   R2,B'1000',SCDTCTN+1   SET MAXCLASS IN R2.           #33\n         LR    R15,R11             PUT A(SCD) IN R15.               #33\n*                                                                   #33\n         NARSCDF R15,NARPSTSL,KNOWN=SCD,FAILX=OVNAR775              #33\n*                                                                   #33\nLOOPPST  EQU   *                                                    #33\n         L     R14,4(,R15)         GET A(PST) FROM OUR TABLE.       #33\n         LTR   R14,R14             IS THIS AN ACTIVE PST?           #33\n         BZ    PSTNEXT             NO, GO LOOK FOR ANOTHER PST.     #33\n         CLI   PSTCLASS,3          IS PST = CLASS 3 ?               #33\n         BE    PSTNEXT             YES, IGNORE (SYSTEMS PST).       #33\n         CLI   PSTCLASS,9          IS PST = CLASS 9 ?               #33\n         BE    PSTNEXT             YES, IGNORE (ANOTHER SYSTEMS PST)#33\n         TM    PSTTERM,PSTMSG      IS PST AN ONLINE MSG TYPE ?      #33\n         BNO   PSTNEXT             NO, IGNORE (NO BMP'S).           #33\n         ST    R2,PSTCLASS         SET PST TO MAXCLASS.             #33\nPSTNEXT  EQU   *                                                    #33\n         LA    R15,08(,R15)        BUMP TO NEXT TABLE POSITION.     #33\n         CLI   0(R15),X'FF'        AT END OF TABLE?                 #33\n         BNE   LOOPPST             NO, CONTINUE PST LOOP.           #33\n         POP   USING               RESTORE OLD USING STATUS.        #33\nOVNAR775 EQU *                                                      #33\n*                                                                   #33\n*******************************************************************\n         SPACE 3\n         B     NARSABN$\n*******************************************************************\n         EJECT\n*******************************************************************\n         LTORG\n*******************************************************************\n         PRINT NOGEN\n         NARSCD\n         SPACE 2\n*/ NUMBER INSERT=YES,SEQ1=02500000,NEW1=02500100,INCR=0100   END\n         SPACE 2\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSSBMP0": {"ttr": 4622, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00*\\x00*\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 42, "newlines": 42, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31BP JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  (       IMA.RECORD(DFSSBMP0))  ***\n//DFSSBMP0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSSBMP0,LMEMBER=DFSSBMPH,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   LINEC=54,\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  * RW0028M  SET \"SETC\" & \"IWAIT\" AREAS TO ZERO\n./  CHANGE  NAME=DFSSBMP0\n./ NUMBER INSERT=YES,SEQ1=06280000,NEW1=06280010,INCR=010           #28\n*/ NUMBER INSERT=YES,SEQ1=06280000,NEW1=06280010,INCR=010  BGN      #28\n         SPACE 2                                                    #28\n******************************************************************  #28\n*                                                                   #28\n*  FIND ROCKWELL'S EXTENDED PST AND SET \"IWAIT COUNTER\" TO ZERO     #28\n*  AND \"SETC\" AREA TO BLANKS.                                       #28\n*                                                                   #28\n         LR    R15,R9              PUT A(PST) IN R15                #28\n         NARPSTF R15,FAILX=OVSETC  FIND OUR EXTENDED PST            #28\n         L     R15,NARPSTJ0-NARPST#0(,R15)  POINT TO ACCTNG AREA    #28\n         USING NARPSTK0,R15                                         #28\n         MVI   NARPCHG0,X'40'      SET \"SETC\" AREA TO               #28\n         MVC   NARPCHG0+1(11),NARPCHG0    BLANKS                    #28\n         XC    NARPIWT0,NARPIWT0   SET \"IWAIT COUNTER\" TO ZERO      #28\n         XC    NARPIWX0,NARPIWX0   SET EXTND  COUNTERS TO ZERO      #28\n         MVC   NARPCHI0,=C'    '   SET SOURCE INDICATOR TO BLANKS   #28\n         XC    NARPCHF0,NARPCHF0   SET SOURCE FLAGS TO ZERO.        #28\nOVSETC   EQU   *                                                    #28\n         DROP  R15                                                  #28\n******************************************************************  #28\n         SPACE 2                                                    #28\n*/ NUMBER INSERT=YES,SEQ1=06280000,NEW1=06280010,INCR=010  END      #28\n         EJECT                                                      #28\n         NARSCD                                                     #28\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSSMIC0": {"ttr": 4624, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x13\\x00\\x13\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31IC JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  (       IMA.RECORD(DFSSMIC0))  ***\n//DFSSMIC0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSSMIC0,LMEMBER=DFSSMICH,\n//   RE='RENT,REFR',\n//** CONDL=0,\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *   RW0028N   ADJ LNGTH OF ZEROED AREA IN X'07' RCD.\n./    CHANGE   NAME=DFSSMIC0\n         XC    DLREC(DTRMLN-DLREC-RILL+DTRMPOOL),DLREC  CLEAR AREA  #28\n         XC    RIXC,RIXC                                CLEAR AREA  #28\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSSMSC0": {"ttr": 4626, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x001\\x001\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 49, "newlines": 49, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31SC JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  (       IMA.RECORD(DFSSMSC0))  ***\n//DFSSMSC0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSSMSC0,LMEMBER=DFSSMSCH,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   LINEC=54,\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *  RW0028O\n./  CHANGE  NAME=DFSSMSC0\n./ NUMBER INSERT=YES,SEQ1=33315000,NEW1=33315055,INCR=010           #28\n*/ NUMBER INSERT=YES,SEQ1=33315000,NEW1=33315055,INCR=010  BGN      #28\n         SPACE 2                                                    #28\n******************************************************************  #28\n*                                                                   #28\n*  FIND ROCKWELL'S EXTENDED PST AND SET \"IWAIT COUNTER\" TO ZERO     #28\n*  AND \"SETC\" AREA TO BLANKS.                                       #28\n*                                                                   #28\n         LR    R15,R9              PUT A(PST) IN R15                #28\n         NARPSTF R15,FAILX=OVSETC  FIND OUR EXTENDED PST            #28\n         L     R15,NARPSTJ0-NARPST#0(,R15)  POINT TO ACCTNG AREA    #28\n         USING NARPSTK0,R15                                         #28\n         MVC   NARPCHI0,=C'    '   SET SOURCE INDICATOR TO BLANKS   #28\n         XC    NARPCHF0,NARPCHF0   SET SOURCE FLAGS     TO ZEROS    #28\n         MVI   NARPCHG0,X'40'      SET \"SETC\" AREA TO               #28\n         MVC   NARPCHG0+1(11),NARPCHG0     BLANKS                   #28\n         XC    NARPIWT0,NARPIWT0   SET \"IWAIT COUNTER\" TO ZERO      #28\n         XC    NARPIWX0,NARPIWX0   SET EXTND  COUNTERS TO ZERO      #28\nOVSETC   EQU   *                                                    #28\n         DROP  R15                                                  #28\n******************************************************************  #28\n         SPACE 2                                                    #28\n*/ NUMBER INSERT=YES,SEQ1=33315000,NEW1=33315055,INCR=010  END      #28\n         EJECT                                                      #28\n         NARSCD                                                     #28\n         SPACE 1                                                    #28\n//SYSNUSED DD  DATA\n//U.SYSINX DD  *\n./  CHANGE  NAME=DFSSMSC0\n         B     MPPSMBRI            FORCE SCHD=3 OPTION.            HUGH\nMPPSMBRI EQU   *                                                   HUGH\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFSSTAT0": {"ttr": 4628, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00'\\x00'\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 39, "newlines": 39, "modlines": 0, "user": "HOSKINS"}, "text": "//YA332431 JOB 'EACARBONE.SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=YA3324\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  (YA3324.IMA.RECORD(DFSSTAT0))  ***\n//DFSSTAT0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCESV,SYMO=SOURCESV,\n//   SMEMBER=DFSSTAT0,LMEMBER=DFSSTATL,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSIN  DD  *  RW0027H    SYS/IWAIT COUNTERS\n./  CHANGE  NAME=DFSSTAT0\n         EJECT                                                      #27\n*        ZDOCMOD DFSSTAT0          MOD #27H                         #27\n         LA    R8,64*4+8(,R8)      ADD LENGTH OF SYS/IWAIT CTRS.    #27\n         LR    R15,R11        PUT A(SCD) INTO R15.                  #27\n         NARSCDF R15,NARSWAT0,KNOWN=SCD,FAILX=OVMVCTR1  A(IWATCTRS) #27\n         MVC   STBLENG+8(64*4,R4),0(R15)  MOVE COUNTERS TO RECORD.  #27\n         MVC   STBLENG(8,R4),=C'IWATCTRS' MOVE EYE-CATCHER TO REC.  #27\n         LA    R15,64*4+8     DEVELOP LENGTH OF CTR FIELDS.         #27\nOVMVCTR1 EQU   *                                                    #27\n*                                                                   #27\n         LA    R8,0(R15,R8)   ADD LENGTH OF CTR FIELDS, OR ZERO.    #27\n*                                                                   #27\n         LR    R15,R11        PUT A(SCD) INTO R15.                  #27\n         NARSCDF R15,NARSWAT0,KNOWN=SCD,FAILX=OVMVCTRS  A(IWATCTRS) #27\n         MVC   STBLENG+8(64*4,R4),0(R15)  MOVE COUNTERS TO RECORD.  #27\n         MVC   STBLENG(8,R4),=C'IWATCTRS' MOVE EYE-CATCHER TO REC.  #27\n         LA    R15,64*4+8     DEVELOP LENGTH OF CTR FIELDS.         #27\nOVMVCTRS EQU   *                                                    #27\n*                                                                   #27\n         LA    R8,0(R15,R8)   ADD LENGTH OF CTR FIELDS, OR ZERO.    #27\n         EJECT                                                      #27\n         NARSCD                                                     #27\n         SPACE 1                                                    #27\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFSUARP0": {"ttr": 4865, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x18\\x00\\x18\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "HOSKINS"}, "text": "//$A2158UA JOB 'ANGIEBUA**SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A2158\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************  ($A2158.IMA.RECORD(DFSDVSM0))  ***\n//DFSUARP0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDB,SYMO=SOURCEDB,\n//   SMEMBER=DFSUARP0,LMEMBER=DFSUARPA,                  PL27292\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSINW DD  *   PL27292   QUICK FIX FOR ARCHIVE\n./ CHANGE   NAME=DFSUARP0\n         CHANGEID APAR=PL27292,ID=K,PREREQ=PL12899 6/16/88  @PL27292\n         CLC   LOG41DAT(8),CSAVETOD NEWER TIMESTAMP?        @PL27292\n         MVC   CSAVETOD(8),LOG41DAT YES - SAVE NEWER TIMESTAMP @PL27292\n./ ENDUP\n//SYSNUSED DD  DATA\n/*\n//TSTTST EXEC PGM=IEBGENER\n//SYSPRINT DD  SYSOUT=T\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ILOGREC": {"ttr": 4867, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31IL JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=RMY24,CLASS=L\n//******************************** (       IMA.RECORD(ILOGREC)) ****\n//ILOGREC EXEC IMSUPDTE,P=IMA,MEMBER=ILOGREC,DISPR=SHR,\n//   SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,\n//   SOUT='*',CONDL=0\n//SYSIN    DD  *  RW0028A    ADD R.I. MACRO THAT ADDS TO 07 RECORD\n./    CHANGE   NAME=ILOGREC\n         COPY NARILOG7                                          RW0028A\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IMRUTRN6": {"ttr": 4869, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\xc7\\x00\\xc7\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 199, "newlines": 199, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31FA JOB 'IMSGROUP  SH28205610*110A044         999  3000009037',\n//  NOTIFY=$A1016,\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H\n//*MAIN ORG=LOCAL,CLASS=L\n//IMRUTRN6 EXEC IMSUPDTE,DISPR=SHR,\n//  MEMBER=IMRUTRN6,\n//             P=IMA,LOAD='PVT.MODS',\n// AUXLIB='IMS.VBNB260.TARGET.SAMPLIB',\n//* CONDL=0,\n//* XREFC='XREF(FULL)',\n//  SYMI=SOURCETM,SYMO=SOURCETM,ACCT=1,SOUT='*'\n//C.SYSIN  DD *    SEE IMS.VBNB260.TARGET.SAMPLIB(IMRUTRN6)\n         TITLE 'IMRUTRN6        - IMF COMMON TRANS.  RECORD EXIT'\n*---------------------------------------------------------------------*\n*                                                                     *\n*          ======>>         I M F             <<======                *\n*                                                                     *\n*---------------------------------------------------------------------*\n*                                                                     *\n*   TITLE:        TRANSACTION RECORD USER EXIT                        *\n*   MODULE NAME:  IMRUTRN6                                            *\n*   ENTRY POINTS: IMRUTRN6                                            *\n*   FUNCTION:                                                         *\n*        - THIS PROGRAM IS A SKELETON FOR USER TO BUILD ON.           *\n*          IT IS MAINLY FOR IMF 220/IMS 1.3 AND UP.                   *\n*        - THIS ROUTINE RECEIVES CONTROL FROM IMF/EC JUST BEFORE      *\n*          IT WRITES THE TRAN RECORD (X'FA').                         *\n*        - NORMALLY THIS IS ONCE PER SYNC POINT (MGU), AND PGM        *\n*          TERM (TERM THREAD).                                        *\n*          FOR BMP, WITH TRNSYNC=YES, ADD ONCE PER 'CHKP' CALL.       *\n*        - USER MAY EVALUATE AND CHANGE TRAN RECORD.                  *\n*        - A USER FIELD \"TRNUSER\" OF 16 BYTES IS PROVIDED IN          *\n*          EACH TRAN RECORD.  IT IS CLEARED AFTER LOGGED.             *\n*        - WHEN RETURNING CONTROL TO IMF/EC, R15 MUST BE ZERO.        *\n*          IF NOT, THE TRAN RECORD WILL NOT BE LOGGED.                *\n*        - THIS PROGRAM MUST BE LOGICALLY RE-ENTRANT.                 *\n*        - FOR IMF 220 AND LATER, IMS 1.3 AND LATER, THIS             *\n*          PROGRAM ALWAYS RECEIVE CONTROL IN IMS CONTROL REGION.      *\n*                                                                     *\n*---------------------------------------------------------------------*\n*                                                                     *\n*   ==>  IN ORDER TO ACTIVATE THIS USER EXIT, ASSEMBLE AND LINK THE   *\n*        USER WRITTEN EXIT AS FOLLOWS:                                *\n*                                                                     *\n*      - FOR IMS/VS 1.3 USER, NAME IMRUTRN3 WITH ENTRY POINT IMRUTRN3 *\n*      - FOR IMS/VS 2.1 USER, NAME IMRUTRN4 WITH ENTRY POINT IMRUTRN4 *\n*      - FOR IMS/VS 2.2 USER, NAME IMRUTRN5 WITH ENTRY POINT IMRUTRN5 *\n*      - FOR IMS/VS 3.1 USER, NAME IMRUTRN6 WITH ENTRY POINT IMRUTRN6 *\n*                                                                     *\n*      - AND COPY IT INTO THE IMS AUTHORIZED LIBRARY                  *\n*        (CONTROL REGION STEPLIB)                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n*                                                                     *\n*   REGISTERS AT ENTRY:                                               *\n*            R5 -  PST ADDRESS - REF IMS/VS DSECT IPST                *\n*            R7 -  TRN ADDRESS - REF IMF DSECT IMETRN                 *\n*            R11-  SCD ADDRESS - REF IMS/VS DSECT ISCD                *\n*            R13 - SAVE AREA ADDRESS                                  *\n*            R14 - RETURN POINT ADDRESS                               *\n*            R15 - ENTRY POINT ADDRESS                                *\n*                                                                     *\n*   REGISTERS AT EXIT:                                                *\n*            ALL REGISTERS RESTORED EXCEPT R15                        *\n*            R15 - RETURN CODE                                        *\n*                  00  ... RECORD ACCEPTED, WRITE TO LOG              *\n*                  04  ... RECORD REJECTED, DO NOT WRITE TO LOG       *\n*                                                                     *\n*   MODULE CALLED BY:                                                 *\n*            IMELTRN3                                                 *\n*                                                                     *\n*   EXTERNAL ROUTINES CALLED:                                         *\n*            NONE                                                     *\n*                                                                     *\n*   MESSAGES:                                                         *\n*            NONE                                                     *\n*                                                                     *\n*   ABENDS:                                                           *\n*            NONE                                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         EJECT ,\nIMRUTRN6 CSECT ,\n         CHANGEID NAME=IMRUTRN6-&SYSDATE,BASE=R12\n         CHANGEID IDEND=YES\n*\n         USING PST,R5\n         USING TRN,R7\n         USING SCD,R11\n         EJECT ,\n*---------------------------------------------------------------------*\n*                                                                     *\n*        MAINLINE LOGIC                                               *\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN100  DS    0H\n*\n*\n* USER CODE HERE.  EXECUTE IN CONTROL REGION.\n*\n*\nB#P      EQU   R2\n         LA    B#P,PST\n*******************************************************************\n*\n*   COPY  \"SETC\" DATA, IWAIT COUNTS, TO  X'FA' LOG REC.\n*\n*               (THIS IS AN APE OF THE SALIENT PARTS OF SIMILAR CODE )\n*               (FROM THE LOCAL MODS TO  DFSSABN0.                   )\n*\n*\n         NARPSTF B#P,FAILX=OVSETC  FIND OUR EXTENDED PST.\n         L     B#P,NARPSTJ0-NARPST#0(,B#P) POINT TO ACCTNG AREA.\n         USING NARPSTK0,B#P\n         MVC   TRNUSER(12),NARPCHG0 MOVE \"SETC\" DATA TO LOG RECORD.\n*&%$#    MVC   RIXTRAX,NARPCHI0    MOVE  SOURCE I.D. TO RECORD.\n         MVC   TRNUSER+11(1),NARPCHI0    SOURCE I.D. TO RECORD.\n         OI    TRNUSER+11,X'02'          ENSURE NON-ZERO. NON-BLANK.\n*&%$#    MVC   RIXTRAY,NARPCHF0    MOVE  SOURCE FLAGS.\n*&%$#    MVC   RIXTRA5,NARPIWT0    MOVE \"IWAIT COUNTS\" TO RECORD.\n*&%$#    MVC   TRNUSER+12(4),NARPIWT0   \"IWAIT COUNTS\" TO RECORD.\n         L     R0,NARPIWT0       \"IWAIT COUNTS\" FOR THIS SCHED.\n         S     R0,NARPIWX0+0*4              -   FOR PRIOR TRAN(S)\n         ST    R0,TRNOSPAC                   =  FOR THIS TRAN TO X'FA'\n         MVC   NARPIWX0+0*4(4),NARPIWT0    PRIOR TRANS <== THIS SCHED\n*\n         L     R0,PSTMGU         \"MSGGU COUNTS\" FOR THIS SCHED.\n         S     R0,NARPIWX0+1*4              -   FOR PRIOR TRAN(S)\n         ST    R0,TRNATCHR                   =  FOR THIS TRAN TO X'FA'\n         MVC   NARPIWX0+1*4(4),PSTMGU      PRIOR TRANS <== THIS SCHED\n*\n         L     R0,PSTMGN         \"MSGGN COUNTS\" FOR THIS SCHED.\n         S     R0,NARPIWX0+2*4              -   FOR PRIOR TRAN(S)\n         ST    R0,TRNALCHR                   =  FOR THIS TRAN TO X'FA'\n         MVC   NARPIWX0+2*4(4),PSTMGN      PRIOR TRANS <== THIS SCHED\n*\n         L     R0,PSTMGU        \"MSCALL COUNTS\" FOR THIS SCHED.\n         A     R0,PSTMGN\n         A     R0,PSTMISRT\n         A     R0,PSTMPURG\n         LR    R3,R0                            FOR THIS SCHED.\n         S     R0,NARPIWX0+3*4              -   FOR PRIOR TRAN(S)\n         ST    R0,TRNIMCHR                   =  FOR THIS TRAN TO X'FA'\n         ST    R3,NARPIWX0+3*4             PRIOR TRANS <== THIS SCHED\n*\n         L     R0,PSTCLCNT      \"DBCALL COUNTS\" FOR THIS SCHED.\n         LR    R4,0                             FOR THIS SCHED.\n         S     R0,NARPIWX0+4*4              -   FOR PRIOR TRAN(S)\n         ST    R0,TRNISPAC                   =  FOR THIS TRAN TO X'FA'\n         ST    R4,NARPIWX0+4*4             PRIOR TRANS <== THIS SCHED\n*\n         LR    R3,R3           \"ALLCALL COUNTS\" FOR THIS SCHED: MSG.\n         AR    R3,R4                            FOR THIS SCHED: DB.\n         LR    R0,R3                            FOR THIS SCHED: ALL.\n         S     R0,NARPIWX0+5*4              -   FOR PRIOR TRAN(S)\n         ST    R0,TRNOMCHR                   =  FOR THIS TRAN TO X'FA'\n         ST    R3,NARPIWX0+5*4             PRIOR TRANS <== THIS SCHED\n*\nOVSETC   EQU   *\n         B     EXIT000\n         EJECT ,\n*---------------------------------------------------------------------*\n*        EXIT                                                         *\n*---------------------------------------------------------------------*\nEXIT000  DS    0H\n         LA    R15,0               ACCEPT RECORD\n         B     EXIT900              AND RETURN\n*\nEXIT004  DS    0H\n         LA    R15,4               REJECT RECORD\n*\nEXIT900  DS    0H\n         LEAVE LINKAGE=IMS,RC=(15),RESTORE=(14,,2,12)\n         EJECT ,\n         LTORG ,\n         DC    CL8'---PATCH'\nPATCH    DC    16F'0'              PATCH AREA\n         PRINT   GEN\n         REQUATE SAVE=YES\n**********************************************************************\n  TITLE 'IMRUTRN6 --- D-S-E-C-T-S'\n**********************************************************************\n         PRINT   GEN\n         IMETRN ,\n         PRINT NOGEN\n         ISCD  ,\n         IPST  ,\n         ISAP  ,\n         IEPF  ,\n         IDSPWRK ,\n**********************\n         PRINT   GEN\n         NARPST\n         NARCPY\n         PRINT NOGEN\n         NARSCD  PST=NO\n         END\n//L.IMSLOAD DD DISP=SHR,DSN=IMS.LOAD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MRSELECT": {"ttr": 4873, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x16\\x00\\x16\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "HOSKINS"}, "text": "//YA2678MR JOB 'MOUNT     SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=YA2678\n//*MAIN ORG=LOCAL,CLASS=L\n//*********************************\n//MRSELECT EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCEDC,SYMO=SOURCEDC,\n//   SMEMBER=MRSELECT,LMEMBER=MRSELECT,\n//   RE='RENT,REFR',\n//** CONDL=0,\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   LINEC=54,\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSUT1 DD  DSN=IMS.MR.SOURCE,DISP=SHR\n//U.SYSIN  DD  * RW0230A\n./    CHANGE   NAME=MRSELECT\nMRMSG185 MVI   MRPREREJ,X'0D'          INDICATE SCRAP0D  /MIKE  @IMS130\n         CLI   SMBQCBPR,0               CHECK SMB PRIORITY /MIKE\n         BE    MRMSG185                 YES PRIORITY FOUND /MIKE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NARAO200": {"ttr": 4875, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\xfc\\x00\\xfc\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 252, "newlines": 252, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31A2 JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN CLASS=L,ORG=LOCAL\n//NARAO200  EXEC IMSUPDTE,MEMBER=NARAO200,\n//             P=IMA,LOAD='PVT.MODS',DISPR=SHR,\n//  SYMI=SOURCETM,SYMO=SOURCETM,SOUT='*'\n//C.SYSIN  DD *\n TITLE 'LOCAL ROCKWELL SUB-ROUTINES LINKED-TO FROM THE  A. O. I. EXIT.'\nNARAO200 CSECT\n**   R1 POINTS TO A LIST OF ADCONS\n*        DC    A(SCD)\n*        DC    A(ACTION_PARMS) E.G.,  A(=C'B1')\n         PRINT NOGEN\n         PROLOGUE SAVE=*PRECHN,DATE=&SYSDATE..&SYSTIME\n         REQUATE\n         CEQUATE\n         PRINT GEN\n         ST    R1,R1@NTRY\n         L     R2,0(R1)        COPY THE\n         ST    R2,P1@NTRY               SCD ADDRESS\n         L     R2,4(R1)        COPY THE\n         ST    R2,P2@NTRY               ACTION PARM POINTER.\n****************************************\nCOPYPARM EQU   *\nB#E      EQU   R4\n         L     R2,P2@NTRY\n         MVC   PARM2,0(R2)     COPY THE ACTION PARMS.\n****************************************\nVECTOR   CLI   PARM2,C'A'\n         BC    EQ,ACTA\n         CLI   PARM2,C'B'\n         BC    EQ,ACTB\n         CLI   PARM2,C'C'\n         BC    EQ,ACTC\n         B     RETACT\nRETACT   EQU   *\n         CLC   =C'AB',PARM2+6\n         BE    AB00\nEPILOGUE EPILOGUE\nR1@NTRY  DC    A(0)\nP1@NTRY  DC    A(0)\nP0SCDAD  EQU   R1@NTRY\nP2@NTRY  DC    A(0)\nPARM2    DC    D'0'\nAB00     EX    0,*\n******************************\n**********************************************************************\n   EJECT\n**********************************************************************\n*\n*  ACTION TO SET CLASSES AS FUNCTION OF PRESENCE IN \"STEPMSGP\" LIBRARY.\n*\nACTA     EQU   *\nP#S      EQU   R3\nP#C      EQU   R4\nP#T      EQU   R5\nP#P      EQU   R6\nP#L      EQU   R7\n         B     RETACT                 *&\u00eb%$#@\n         AGO   .OVRACTA               *&\u00eb%$#@\n         USING PDIR,P#P\n         USING  SMB,P#T\n         USING  SCD,P#S\n         LR    P#S,R1              PTR TO SCD.\n         TIME  DEC\n         STM   R0,R1,TIME1\n         RDJFCB STEPMSGP\n         LTR   R15,R15             Q. DD STMT PRESENT.\n         BNZ   STQUIT                NO, SKIP OUT.\n         OPEN  (STEPMSGP,(INPUT))\n         LH    P#L,SCDSMBN         QUANT OF   SMB.\n         L     P#T,SCDSMBEP        PTR TO 1ST SMB.\n         SH    P#T,SCDSMBL         PTR TO 0TH SMB.     (PRE-DECRMT)\nSTLOOP   AH    P#T,SCDSMBL         PTR TO 1ST/NEXT SMB.\n         TM    PARM2,X'04'         Q. ALL ALIKE.\n         BO    STLOODD               YES, TREAT ALL ALIKE.\n         L     P#P,SMBPDIR         OFF TO PDIR.\n         N     P#P,=A(X'FFFFFF')\n         CLI   PDIRSYM,C'I'        Q. SYSTEM STUF.\n         BE    STLOODD               YES, TREAT AS WHITE-HAT.\n         MVC   STBLDLNM,PDIRSYM    MEMBER NAME.\n         BLDL  STEPMSGP,STBLDL     LOOK     IN PREFERENTIAL LIST.\n         LTR   R15,R15             Q. FOUND IN PREFERENTIAL LIST.\n         BNZ   STHIEVEN              NO,  GIVE LOWER-QUALITY SERVICE.\n**  CLASS CODE PAIRS -  (1,2) ... (9,10)       (LO,HI)=(ODD,EVEN)\n*                                           (FIRST,TOURIST)=(TOP,BOTT)\nSTLOODD  XR    P#C,P#C\n         IC    P#C,SMBCLASS        ORIG CLASS =   1 2       9 10\n         BCTR  P#C,0                              0 1       8  9\n         O     P#C,=F'+1'                         1 1       9  9\n         B     STDUN\nSTHIEVEN XR    P#C,P#C\n         IC    P#C,SMBCLASS        ORIG CLASS =   1 2       9 10\n         LA    P#C,1(P#C)                         2 3      10 11\n         N     P#C,=F'-2'                         2 2      10 10\n         B     STDUN\nSTDUN    STC   P#C,SMBCLASS        STORE ADJUSTED CLASS VALUE.\n         BCT   P#L,STLOOP          LOOP IF NOT DONE\nSTQUIT   EQU   *\n         CLC   =C'AB',PARM2+6      Q. ABEND REQUESTED.\n         BE    AB00                  YES, GO TO IT\nSTQUITTT EQU   *\n         CLOSE (STEPMSGP)\n         TIME  DEC\n         STM   R0,R1,TIME2\n         B     RETACT\nTIME1    DC    2A(0)\nTIME2    DC    2A(0)\nSTBLDL   DC    H'1,76'\nSTBLDLNM DC    CL8' ',XL76'0'\n         PRINT NOGEN\nSTEPMSGP DCB   DDNAME=STEPMSGP,DSORG=PO,MACRF=R,EXLST=STEPEX\n         PRINT GEN\nSTEPEX   DC    0A(0),XL1'87',AL3(STEPJFCB)\nSTEPJFCB DC    XL176'0'\n.OVRACTA ANOP\n**********************************************************************\n   EJECT\n**********************************************************************\n*\n*  ACTION TO SET/RESET TCBTCT PTR TO AVOID SOME GETMAIN+I/O OVRHD.\n*\n*  PARM2 =B0 TO SET TO ZERO AND AVOID  OVERHEAD\n*  PARM2 =B1 TO SET TO REAL AND SUFFER OVERHEAD\nACTB     EQU   *\n         L     R1,16               CVT.\n         L     R1,000(R1)          DBL.\n         L     R1,000(R1)          TCB.\n         LA    R0,164(R1)          TCBTCT.\n         ST    R0,SUPWD1           PTR TO \"TCBTCT\" SPOT IN NUCLEUS TCB.\n*        ***********\n         CLI   PARM2+1,C'0'        Q. SMF OFF OR ON.\n         BE    NARTCT00                   OFF,          CLEAR TCBTCT.\n         CLI   PARM2+1,C'1'\n         BE    NARTCTNN                          ON,  RESTORE TCBTCT.\n         B     NARTCTZZ\n*        ***********\n* HERE TO RIG TO ZERO-OUT                  OUR TCBTCT PTR. (SMF OFF)\nNARTCT00 XR    R0,R0                           \"ZERO\"  =  NEW TCBTCT\n         ST    R0,SUPWD2\n         B     NARTCTXX\n*        ******\n* HERE TO RIG TO STO JST'S TCBTCT PTR FOR  OUR TCBTCT PTR. (SMF ON)\nNARTCTNN L     R1,124(R1)          JSTCB\n         L     R0,164(R1)          TCBTCT.\n         ST    R0,SUPWD2           ADDR OF TCT FOR JST =  NEW TCBTCT\n********************\n* HERE TO DO WHICHEVER.\nNARTCTXX LA    R1,SUPVRTCT\n         NOPR  0\n         SVC   243\nNARTCTZZ EQU   *\n         B     RETACT\n****************************************\nSUPVRTCT L     R1,SUPWD1\n         MVC   0(4,R1),SUPWD2\n         BR    R14\n******************************\nSUPWD1   DC    A(0)\nSUPWD2   DC    A(0)\n**********************************************************************\n   EJECT\n**********************************************************************\n*\n*  ACTION TO RUN AS SUPVR/PROB STATE TO ALLOW/NOT WAITING IN PK=0.\n*\nR#J      EQU   R3\nR#K      EQU   R4\nR#L      EQU   R5\nX#R      EQU   R6\nE#I      EQU   R7\nR#W      EQU   R15\n         SPACE 3\nACTC     #\n         B     RETACT                 *&\u00eb%$#@\n         AGO   .OVRACTC               *&\u00eb%$#@\n         CLI   PARM2+1,C'0'\n         BE    NARPK0\n         CLI   PARM2+1,C'1'\n         BE    NARPK1\n         B     RETACT\n******************************\nNARPK0   L     R#J,16              CVT.\n         L     R#J,0(R#J)          DBL.\n         L     R#J,0(R#J)          TCB.\n         L     R#K,0(R#J)          RB. (NEWEST)\n         LA    R#J,0(R#J)          TCB.\n         LA    X#R,6          LOOP CTR.      (RANDOM)\nRBLOOP   L     R#L,28(R#K)    NEXT RB.\n         LA    R#L,00(R#L)    PTR ONLY.\n         CR    R#L,R#J        Q. IS NEXT RB THE TCB.\n         BE    RBTOP            YES, THEN THIS IS TOP RB.\n         LR    R#K,R#L          NO, IS REAL RB.\n         BCT   X#R,RBLOOP           LOOP.  (FOR A WHILE)\n         B     RETACT\n*        ***********\nRBTOP    L       R#W,P0SCDAD\n         NARSCDF R#W,NARSCD10,NARSCDFA,KNOWN=SCD\n         LR   R0,R#W          PTR TO FLAG $A0.\n         L       R#W,P0SCDAD\n         NARSCDF R#W,NARSCD10,NARSCDPK,KNOWN=SCD\n         LA    R#L,16(R#K)    PTR TO PSW IN RB.\n         ST     R0,04(R#W)    PTR TO FLAG $A0.\n         MVI   04(R#W),C'S'   SHOW SUPVR STATE.\n         ST    R#L,08(R#W)    PTR TO PSW IN RB.\n         ST    R#K,12(R#W)    PTR TO        RB.\n         ST    R#J,16(R#W)    PTR TO        TCB.\n         MVC   24(8,R#W),00(R#L)     PSW IN RB.\n         MVZ   03(1,R#W),25(R#W)   COPY PK FOR USE BY \"SPKA\" INSTR.\n*              AABBCCDD            LEFT HALF OF LEAST\n*              07152331                SIGNIFICANT BYTE IS USED.\n         LA    E#I,STATSUNI        CHANGE STATE  TO SUPVR VIA \"NI\".\n         B    NARPKX\n****************************************\nNARPK1   L     R#W,P0SCDAD\n         NARSCDF R#W,NARSCD10,NARSCDPK,KNOWN=SCD\n         L     R#L,08(R#W)\n         LA    R#L,00(R#L)\n         LTR   R#L,R#L\n         BZ    RETACT\n         MVI   04(R#W),C'P'        SHOW PROB  STATE.\n         LA    E#I,STATPROR        CHANGE STATE  TO PROB  VIA \"OI\".\n****************************************\nNARPKX   EQU   *\n         L     R#J,20(R#W)         GET ADDR OF DATAAREA IN DISPATCHER.\n         LA    R#J,0(R#J)          IF ADDR\n         LTR   R#J,R#J                     IS ZERO,\n         BZ    RETACT                               THEN SKIP THE COPY.\n         MVC   00(08,R#J),0(R#W)   COPY TO DISPATCHER.\n         MVC   16(05,R#J),24(R#W)  COPY ORIG PSW EXCEPT FOR ADDRESS.\n         NI    16+01(R#J),X'FE'    MAKE SPVR PSW.\n         MVC   08(05,R#J),16(R#J)  COPY SPVR PSW EXCEPT FOR ADDRESS.\n         NI    08+01(R#J),X'0F'    MAKE SPVR PSW WITH PK#0.\n         LA    R1,STATCHNG         PTR TO WHERE TO GO IN SUPVR STATE.\n         SVC   243\n         B     RETACT\n         BALR  R14,R1\n**************************************************\nSTATCHNG EX    0,0(E#I)\n         BR    R14\nSTATSUNI NI    01(R#L),X'FE'       CHANGE STATE  TO SUPVR VIA \"NI\".\nSTATPROR OI    01(R#L),X'01'       CHANGE STATE  TO PROB  VIA \"OI\".\n.OVRACTC ANOP\n**********************************************************************\n   EJECT\n**********************************************************************\n         NARSCD\n         PRINT NOGEN\n         ISCD  SCDBASE=0\n         IAPS  SMBBASE=0\n         IDLI  PDRBASE=0\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NARBGN20": {"ttr": 4880, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x01-\\x01-\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 301, "newlines": 301, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31B2 JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//NARBGN20 EXEC IMSUPDTE,MEMBER=NARBGN20,\n//             P=IMA,LOAD='PVT.MODS',DISPR=SHR,\n//  XREFC='XREF(FULL)',PGMC=IEV90,\n//* CONDL=0,\n//  SYMI=SOURCETM,SYMO=SOURCETM,RECORD=NO,ACCT=1,SOUT='*'\n//C.SYSIN  DD *\n         MACRO\n&L       CHNEPST &EPST=(1),&ID=\n.*  CHAIN EPST MACRO: TO CHAIN SPECIFIED PST EXTENSION BLOCK\n.*  OFF PSTEPST.   BLOCK WILL BE PLACED AT HEAD OF QUEUE.\n************************************************\n**\n**  THIS IS CURRENTLY A LOCAL ROCKWELL MACRO IN THIS PROGRAM\n**    TO BE REPLACED BY AN IBM ONE SOMEDAY  ---  I HOPE.\n**\n************************************************\n         AIF   ('&EPST'(1,1) EQ '(').PASS1\n         MNOTE 12,'** EPST MUST BE REGISTER NOTATION'\n         MEXIT\n.PASS1   AIF   ('&ID' EQ '').PASS2 ID IS OPTIONAL\n         AIF   ('&ID'(1,1) EQ '(').PASS2\n         MNOTE 12,'** ID MUST BE REGISTER NOTATION'\n         MEXIT\n.PASS2   ANOP\n         AIF   ('&L' EQ '').SKLABEL\n&L       DS    0H\n.SKLABEL AIF   ('&ID' EQ '').IDPRES  ID PRESET\n         ST    &ID,4&EPST          SET EPSTID\n.IDPRES  L     15,PSTEPST          A(TOP EPST)\n         ST    15,0&EPST           MAKE IT NEXT TO TOP\n         ST    &EPST,PSTEPST       MAKE YOURS TOP EPST\n         MEND\n*********************************************************************\n         EJECT\n*********************************************************************\nNARBGN20 CSECT\n         PRINT NOGEN\n         PROLOGUE SAVE=*PRECHN\n         REQUATE\n         CEQUATE\n         PRINT   GEN\n**************************************************\nPART1    DC    0Y(0)\n**************************************************\n         SPACE 3\n**************************************************\n** THIS CODE IS TO STO THE IBM AND NAR SCD POINTERS INTO EACH OTHER.\nA#S      EQU   R11 IDENTITY W/IBM AT TIME OF CALL.  SCD ADDR.\nA#A      EQU   R3                   NARSCD00 IN CSA\nA#B      EQU   R4                   NARSCD10 IN CSA\nA#C      EQU   R5                   NARSCD00 IN THE NUC\n         MVC   PARMSIN,0(R1)        COPY INPUT PARMS.\n         ST    A#S,AIBMSCD         STO THEIRS.\n         USING SCD,A#S\n         IMODULE LOAD,EPLOC=LOCALSCD,SP=241\n         LTR   R15,R15\n         BZ    PART1A1\n         ST    R15,IMODR15\n         LR    R3,R15\n         WTO   'NARBGN20-IMODULE LOAD OF NARSCD FAILED; RC IS IN R3',  *\n               ROUTCDE=(2,8,11)\n         ABEND 1133,DUMP\nPART1A1  LR    A#A,R0                         PTR TO OFFSET=00\n         ST    A#A,ANARSCD\n********************\n         ST    A#S,NARSCD0I-NARSCD00(A#A)  IBMS SCD INTO OURS IN CSA\n         L     A#B,NARSCD1#-NARSCD00(A#A)     PTR TO SCD10    IN CSA\n         L     A#C,PARMNSCD                   PTR TO PREFIX   IN NUC\n         MVC   0(X'18',A#C),0(A#A)          MOVE NUC PREFIX FROM CSA\n         CHNESCD ESCD=(A#B)          CHAIN MASTER SCD TO OURS IN CSA\n**************************************************\n         SPACE 3\n**************************************************\n         NARSCDF A#C,NARSDLK#\n         MVC   0(4,A#C),=V(DLLINK)   INITIALIZ DLLINK VCON IN NARSCD.\n*&\u00eb%$    NARSCDF A#C,NARSTAT#\n*&\u00eb%$    MVC   0(4,A#C),=V(NAR#STAT) INIT. NUC STATS  VCON IN NARSCD.\n         DROP\n**************************************************\n         EJECT\n**************************************************\n** THIS CODE IS TO ESTABLISH THE EXTENDED/AUXILIARY PST'S AND TO\n*   STO THE POINTERS INTO EACH OTHER.\n         USING NARBGN20,R12\n         AGO   .PSTZZ\nB#A      EQU   R3\nB#B      EQU   R4\nB#C      EQU   R5\nB#D      EQU   R6\nB#S      EQU   R11 IDENTITY W/IBM AT TIME OF CALL.  SCD ADDR.\n         USING   PST,B#B\n         USING   SCD,B#S\n         L       B#S,AIBMSCD\n         LR      B#A,B#S\n         NARSCDF B#A,NARPSTSL,KNOWN=SCD FIRST LIST ENTRY\n         S       B#A,=A(8) PRE-DECREMENTED.\n         L       B#B,SCDDLIPA           FIRST PST\n         SH      B#B,SCDDLIPL            PRE-DECRMT BY LENGTH.\n         LH      B#C,SCDDLIPN           NUMBER OF PST'S.\nB2PSTLOP LA      B#A,8(B#A)      BUMP NEXT LIST ENTRY.\n         CLI   0(B#A),X'FF'      Q. ANY MORE AUX PST'S.\n         BE    B2PSTZ0             NO; EXIT.\n         AH    B#B,SCDDLIPL        YES; BUMP REAL PST ADDR.\n         L     B#D,0(B#A)               GET  AUX  PST ADDR FROM LIST.\n         ST    B#B,NARPIPS0-NARPST#0(B#D)  STO REAL IN AUX PST.\n         ST    B#B,NARPSTBM-NARPSTSL(B#A)  STO REAL IN LIST PAIR.\n         CHNEPST EPST=(B#D)              CHAIN-'EM-UP;   MOVE-'EM-OUT.\n         MVC   NARPSCD0-NARPST#0(4,B#D),AIBMSCD    REAL SCD IN AUX PST.\n         BCT   B#C,B2PSTLOP          Q. ANY MORE REAL PST'S; YES, LOOP.\nB2PSTZ0  #                                                   NO, QUIT.\n.PSTZZ   ANOP\n**************************************************\n SPACE 3\n**************************************************\n** THIS CODE ESTABLISHES A PSEUDO LOG RECORD WHICH IDENTIFIES THE\n*   THE START-TIME AND CPU, ETC..\nD#A      EQU   R3\nD#B      EQU   R4\nD#C      EQU   R5\nD#D      EQU   R6\nD#E      EQU   R7\nD#F      EQU   R8\nD#G      EQU   R9\n         USING SCD,D#G\n         L     D#G,AIBMSCD\n         LR    D#E,D#G\n         NARSCDF D#E,NARSDA10,KNOWN=SCD\n         USING NARSDATA,D#E\n         L     D#A,X'10'           PTR TO CVT.\n         LR    D#B,D#A\n         S     D#B,=A(PFXZZ-PFXAA) PTR TO CVT PREFIX.\n         USING PFXAA,D#B\n         L     D#C,X'C4'(D#A)      PTR TO SMCA.\n         MVC   NARSDSID,00016(D#C) SYSTEM ID.          (EG.  \"2A68\" )\n*                       00024(D#C) SMF VOLSER.\n*                         ,35(D#C) SMF X/Y.\n         MVC   NARSDSOS(1),116(D#A)     OS/CONFIG.     (FROM CVTDCB)\n         MVC   NARSDSIM(6),SSCDOSPS     OS/IMS/CONFIG. (FROM SSCD)\n         MVC   NARSDSLV,PFXRELNO        OS/LEVEL.      (FROM CVT PREFX)\n         MVC   NARSDSLG,=A(X'000001')   LOG TAPE FORMAT  I.D.\n         MVI   NARSDSNR,C'6'\n         STCK        NARSDSTK      THE BIG CLOCK ON SOME MERIDIAN.\n         TIME  DEC\n         STM   R0,R1,NARSDTIM      THE BIG CLOCK ON THE WALL.\n*\n         MVC   NARSDBGN,NARSDTIM   COPY CURRENT TIMES AS BEGINNING ONE.\n******************************\n** THIS CODE STORES THE PHYSICAL MACHINE ID AS THE TENTHS SECOND DIGIT.\n*        ALPHA         A  B  C\n*          HEX         C1 C2 C3\n*        TENTHS BYTE   1C 2C 3C\n***                                GET MACHINE ID. (EG. \"A\" FROM 2A68)\n         IC    D#F,NARSDSID+1      OBTAIN MACHINE ALPHA. (X'C1,C2,...')\n         N     D#F,=A(X'0F')       JUST NUMERIC PART.    (X'01,02,...')\n         C     D#F,=A(0009)        Q. BIGGER THAN  9.\n         BC    LE,*+4+2              NO, OK;  CONTINUE.\n         XR    D#F,D#F               YES, CLEAR TO 0.\n         SLL   D#F,4               SHIFT TO L-H BYTE.    (X'10,20,...')\n         O     D#F,=A(X'0C')       FORCE TO PACKED FMT.  (X'1C,2C,...')\n         STC   D#F,NARSDSOS+1      STO IT.\n         B     ENDPART1\n SPACE 3\nAIBMSCD  DC    A(0)\nANARSCD  DC    A(0)\nIMODR15  DC    A(0)\nLOCALSCD DC    CL8'NARSCD00'\nPARMSIN  DC    XL16'0'\n         ORG   PARMSIN\nPARMNSCD DC    A(0)\nPARMDLNK DC    A(0)\n         ORG\nM        DC    CL100' '\nMCS40    WTO   'MCS40',ROUTCDE=(2,8,11),MF=L\n SPACE 3\nENDPART1 DC    0Y(0)\n****************************************\n SPACE 3\n****************************************\n         DSECT\nPFXAA    DS    0D'0'\nPFXRELNO DS    A(0)\nPFXZZ    EQU   *\n         DROP\n***********************************************************\n         EJECT\n***********************************************************\nNARBGN20 CSECT\n         USING NARBGN20,R12\n**  THIS CODE IS TO READ-IN THE FLAGR STANDARD VALUES.\n         PRINT NOGEN\nE#R      EQU   R2\nPART2    RDJFCB DCBPO\n         MVC   BLDLMBR1(8),JFCB00+44\n         NIF               JFCB00+86,X'01'   NO MBR PRESENT.\n         OI                JFCB00+52,X'08'   NO WRITEBACK.\n         MVC               JFCB00+44(8),=CL8' '\n         OPEN  (DCBPO,INPUT),TYPE=J\n         TM     DCBPO+48,X'10'\n         BZ    SKIPRJ\n         BLDL   DCBPO,BLDLIST1\n         LTR   R15,R15\n         BNZ   SKIPRK\n         CLOSE  DCBPO\n         MVC               JFCB00+44(8),BLDLMBR1 MBR NAME.\n         OI                JFCB00+86,X'01'       MBR IS PRESENT.\n         OPEN  (DCBPS,INPUT)\n         TM    DCBPS+48,X'10'\n         BZ    SKIPRL\n         GET   DCBPS,GETFLAGR\n         L       E#R,AIBMSCD\n         NARSCDF E#R,NARSCFRX,KNOWN=SCD FIND WHERE TO MOVE THE DATA.\n         MVC   0(08,E#R),GETFLAGR                     MOVE THE DATA.\nSKIPRJ   AP    SKIPR,=P'1'\nSKIPRK   AP    SKIPR,=P'1'\nSKIPRL   AP    SKIPR,=P'1'\n         CLOSE  DCBPO\n         CLOSE  DCBPS\n         B     ENDPART2\n****************************************\n         SPACE 3\n****************************************\nGETFLAGR DC    XL80'0'\nSKIPR    DC    PL4'0'\nDCBPO    DCB   DDNAME=NARFLAGR,DSORG=PO,EXLST=EXLST,MACRF=R\nDCBPS    DCB   DDNAME=NARFLAGR,DSORG=PS,EXLST=EXLST,MACRF=GM\nEXLST    DC    0A(0),XL1'87',AL3(JFCB00)\nJFCB00   DC    XL176'0'\nBLDLIST1 DC    H'1',H'076'\nBLDLMBR1 DC    CL8' ',XL76'0'\n****************************************\n         SPACE 3\nENDPART2 DC    0Y(0)\n         DROP\n***********************************************************\n EJECT\n***********************************************************\n**  THIS CODE IS TO SET DISP=MOD FOR SEVERAL DATASETS.\nNARBGN20 CSECT\n         USING NARBGN20,R12\n         PRINT NOGEN\nPART3    #\nLOOPNAM  MVC   LTRDDNAM(8),NAMSHIFT     MOVE NAME INTO DCB.\n         MVC   WORD3,NAMSHIFT\n         MVI   JFCB3,0\n         RDJFCB SYSUDUMP\n         CLI   JFCB3,0\n         BE    OVRDO\n         NI    JFCB3+87,X'3F'\n         OI    JFCB3+87,X'80'\n         OPEN  (SYSUDUMP,(INPUT)),TYPE=J\n         CLOSE (SYSUDUMP)\n         ENQ   (SYSDSN,DSN,E,44,SYSTEM)\n         ST    R13,SAVEAR3+04    SET HI-SAVE-AREA PTR IN NEW SAVE AREA.\n         LA    R13,SAVEAR3                 PT TO NEW SAVE AREA FOR S/R.\n         LINK  EP=LTRBLOCK,PARAM=(LTRLIST,LTRDDNAM) S/R WILL FORE&BACK.\n         L     R13,SAVEAR3+04                     RESTORE SAVE-SET PTR.\n         DEQ   (SYSDSN,DSN,0044,SYSTEM)\nOVRDO    EQU   *\n         CLI   NAMSHIFT+8,0            Q. WAS THAT THE LAST DD NAME.\n         BE    ENDPART3                  YES; QUIT.\n         MVC   NAMSHIFT(NAML),NAMSHIFT+8 NO, SHIFT AGAIN.\n         B     LOOPNAM                     & LOOP.\n******************************\nLTRLIST  DC    CL8'*JOBNAME'\nWORD2    DC    CL8' '\nWORD3    DC    CL8' '\n         DC    A(0)\nSYSUDUMP DCB   DDNAME=SYSUDUMP,MACRF=E,EXLST=EXLST3\nNAMSHIFT DC    CL8'SYSUDUMP',CL8'SYSUSNAP',CL8'SYSABEND',X'00'\nNAML     EQU   *-NAMSHIFT\nEXLST3   DC    0A(0),XL1'87',AL3(JFCB3)\nSYSDSN   DC    CL8'SYSDSN'\nDSN      DC    C'NARDUMPS.'\nJFCB3    DC    0A(0),XL176'0'\nLTRDDNAM EQU   SYSUDUMP+DCBDDNAM-IHADCB\nLTRP2    DC    A(0)\nSAVEAR3  DC    18A(0)\n****************************************\n         SPACE 3\nENDPART3 DC    0Y(0)\n         DROP\n***********************************************************\n EJECT\n***********************************************************\n**\nNARBGN20 CSECT\n         USING NARBGN20,R12\n**********************************************************************\n         SPACE 3\n**********************************************************************\n         EPILOGUE\n   EJECT\n         NARSCD\n         PRINT NOGEN\n         ISCD  SCDBASE=0\n         IDLI  PSTBASE=0\n         DCBD  DSORG=PS\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NARBGN40": {"ttr": 5126, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x026\\x026\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 566, "newlines": 566, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31B4 JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//NARBGN40  EXEC IMSUPDTE,MEMBER=NARBGN40,\n//             P=IMA,LOAD='PVT.MODS',DISPR=SHR,\n//  SYMI=SOURCETM,SYMO=SOURCETM,RECORD=NO,ACCT=1,SOUT='*'\n//C.SYSIN  DD *\n         TITLE 'LOCAL ROCKWELL INITIALIZATION MODULE   N A R B G N 4 0'\nNARBGN40 CSECT\n         PROLOGUE SAVE=*PRECHN\n         REQUATE\n         CEQUATE\n         PRINT   GEN\nR#BALC   EQU   R0\nB#S      EQU   R11              *** IDENTITY FROM CALLER. **\nR#W      EQU   R15\n**********************************************************************\n SPACE 3\n         MVC   PARMSIN,0(R1)        COPY INPUT PARMS.\n         ST    B#S,ADDRSCD          STO IBM'S SCD PTR.\n SPACE 3\n***********************************************************\n         L       R#W,ADDRSCD\n         NARSCDF R#W,NARSCFRX,KNOWN=SCD   FIND THE RESTART FLAGS.\n         MVC   RSTFLAGS,0(R#W)            SAVE THEM LOCALLY.\n**********************************************************************\n   TITLE 'N A R B G N 4 0  ---  INITIALIZE SOME FLAGS AND FEATURES'\n**********************************************************************\n**  THIS CODE IS TO READ-IN THE FLAGA STANDARD VALUES.\nNARBGN40 CSECT\n*\n*\n         USING NARBGN40,R12\n         PRINT NOGEN\nA#A      EQU   R2\nA#B      EQU   R3\nA#C      EQU   R4\n         RDJFCB DCBPO\n         MVC   BLDLMBR1(8),JFCB00+44\n         NIF               JFCB00+86,X'01'   NO MBR PRESENT.\n         OI                JFCB00+52,X'08'   NO WRITEBACK.\n         MVC               JFCB00+44(8),=CL8' '\n         OPEN  (DCBPO,INPUT),TYPE=J\n         TM     DCBPO+48,X'10'\n         BZ    SKIPRJ\n         BLDL   DCBPO,BLDLIST1\n         LTR   R15,R15\n         BNZ   SKIPRK\n         CLOSE  DCBPO\n         MVC               JFCB00+44(8),BLDLMBR1 MBR NAME.\n         OI                JFCB00+86,X'01'       MBR IS PRESENT.\n         OPEN  (DCBPS,INPUT)\n         TM    DCBPS+48,X'10'\n         BZ    SKIPRL\n         GET   DCBPS,GETFLAGA\n         L       A#A,ADDRSCD\n         NARSCDF A#A,NARSCFAX,KNOWN=SCD FIND WHERE TO MOVE THE DATA.\n         MVC   0(16,A#A),GETFLAGA                     MOVE THE DATA.\n******************************\n**  STORE THE FLAG $A VALUES INTO ALL PSTS.\n         L       A#B,ADDRSCD\n         NARSCDF A#B,NARPSTSL,KNOWN=SCD PTR TO TABLE OF PST ADCONPAIRS.\n         S     A#B,=F'8'                            ( PRE - DECRMT )\n*        ***********\nLOOP12   LA    A#B,8(A#B)               PTR TO 1ST/NEXT     ADCONPAIR.\n         L     A#C,0(A#B)                               AUX PST.\n         LTR   A#C,A#C                  Q. IS IT REAL & PRESENT.\n         BNP   P12XX                         NO, EXIT THE LOOP.\n         L     A#C,NARPSTW0-NARPST#0+12(A#C) YES, PTR TO 4TH WORK AREA.\n         MVC   NARCFLGA-NARCMOV4(16,A#C),0(A#A)  STO ORIG FLAGS IN WA4.\n         B     LOOP12                            LOOP FOR NEXT PST.\n*        ***********\nP12XX    EQU   *\n********************\n         AP    SKIPR,=P'1'\nSKIPRJ   AP    SKIPR,=P'1'\nSKIPRK   AP    SKIPR,=P'1'\nSKIPRL   AP    SKIPR,=P'1'\n         CLOSE  DCBPO\n         CLOSE  DCBPS\n****************************************\n         B     ENDPRT1A\n**************************************************\nPSEUDOBF DC    Y(2+2+72,0) THESE FIELDS MUST REMAIN IN THIS ORDER 1.\nGETFLAGA DC    XL80'0'     THESE FIELDS MUST REMAIN IN THIS ORDER 2.\nSKIPR    DC    PL4'0'\nDCBPO    DCB   DDNAME=NARFLAGA,DSORG=PO,EXLST=EXLST,MACRF=R\nDCBPS    DCB   DDNAME=NARFLAGA,DSORG=PS,EXLST=EXLST,MACRF=GM\nEXLST    DC    0A(0),XL1'87',AL3(JFCB00)\nJFCB00   DC    XL176'0'\nBLDLIST1 DC    H'1',H'076'\nBLDLMBR1 DC    CL8' ',XL76'0'\nRSTFLAGS DC    CL16' '\nRSTFLAGA EQU   RSTFLAGS+0\nRSTFLAGB EQU   RSTFLAGS+1\nRSTFLAGC EQU   RSTFLAGS+2\nRSTFLAGD EQU   RSTFLAGS+3\nADDRSCD  DC    A(0)\nPARMSIN  DC    XL16'0'\n         LTORG\n**************************************************\nENDPRT1A #\n         DROP\n***********************************************************\n   EJECT\n***********************************************************\n         USING NARBGN40,R12\n         RDJFCB LDCBPO\n         MVC   BLDLMBR1(8),JFCB00+44\n         NIF               JFCB00+86,X'01'   NO MBR PRESENT.\n         OI                JFCB00+52,X'08'   NO WRITEBACK.\n         MVC               JFCB00+44(8),=CL8' '\n         OPEN  (LDCBPO,INPUT),TYPE=J\n         TM     LDCBPO+48,X'10'\n         BZ    LSKIPRJ\n         BLDL   LDCBPO,BLDLIST1\n         LTR   R15,R15\n         BNZ   LSKIPRK\n         CLOSE  LDCBPO\n         MVC               JFCB00+44(8),BLDLMBR1 MBR NAME.\n         OI                JFCB00+86,X'01'       MBR IS PRESENT.\n         OPEN  (LDCBPS,INPUT)\n         TM    LDCBPS+48,X'10'\n         BZ    LSKIPRL\n         L     A#A,ADDRSCD\nLGET     GET   LDCBPS,GETFLAGA\n         CLC   =C'/LOG',GETFLAGA\n         BNE   LGET\n         CALL  NARAOUF0,((A#A),LUEHPSUD)\n         B     LGET\nLSKIPRJ  AP    LSKIPR,=P'1'\nLSKIPRK  AP    LSKIPR,=P'1'\nLSKIPRL  AP    LSKIPR,=P'1'\nLEODAD   #\n         CLOSE  LDCBPO\n         CLOSE  LDCBPS\n         B     ENDPRT1L\n*******************************\nLSKIPR   DC    PL4'0'\nLDCBPO   DCB   DDNAME=NARLINIT,DSORG=PO,EXLST=EXLST,MACRF=R\nLDCBPS   DCB   DDNAME=NARLINIT,DSORG=PS,EXLST=EXLST,MACRF=GM,          *\n               EODAD=LEODAD\n         LTORG\nLUEHPSUD DC    A(0)             0  PSEUDO\n         DC    A(0)             4    UEHB\n         DC    A(0)             8      CONTROL\n         DC    A(PSEUDOBF)      C        BLOCK\n         DC  50A(0)               ZEROES\n*******************************\nENDPRT1L #\n***********************************************************\n   EJECT\n***********************************************************\n**  FIND A SUB-TASK PORT  AND  ATTACH THE  1-MINUTE TIMER ROUTINE.\nNARBGN40 CSECT\n*\nPART2    #\n*\n         USING NARBGN40,R12\nB#A      EQU   R2\nB#B      EQU   R3\nB#C      EQU   R4\nB#D      EQU   R5\nB#E      EQU   R6\nB#F      EQU   R8\n         TM    RSTFLAGB,X'02' Q. SHALL WE DO THE ATTACH.\n         BZ    ENDPART2         NO, SKIP.\n         NARSCDF B#A,NARSUBTX           PTR TO TOP OF LIST.\n*                                     = PTR TO PTR TO NEXT AVAIL ENTRY.\n         L     B#B,0(B#A)                      PTR TO NEXT AVAIL ENTRY.\n         CLI   0(B#B),X'FF'        Q. IS IT TRULY AVAILABLE.\n         BALC  EQ,INVALID            NO, PITY.\n         LA    R#W,4(B#B)            YES, CALC NEW NEXT\n         ST    R#W,0(B#A)                 STO  FOR NEXT USER.\n         USING NARSUBTC,B#B        ESTABLISH ADDRESSABILITY.\n         L     B#B,0(B#B)          BASE FOR ADCONS FOR THIS SUBTASK.\n         LA    B#F,NARSUBE2   PTR TO ECB ON WHICH S/TASK IS TO WAIT.\n         XC    NARSUBE1(8),NARSUBE1\n         STM   R0,R12,SAVESUB+20   SAVE REGS.\n         LA    B#C,SUBTCBB         PTR TO WHERE TO EXECUTE AS A SUBTSK.\n*\n         LA    B#D,NARSUBE1        PTR TO ECB FOR OS TO POST AT TERM.\n         LA    B#E,RSTFLAGS\n         TM    RSTFLAGB,X'04' Q. SHALL WE OFFER AN ECB TO DAUGHTER.\n         BZ    P22J             YES, LET IT STAND.\n         XR    B#D,B#D ZERO-OUT ECB PTR 'CAUSE OS/VS MAY  S/102.\nP22J     EQU   *\n*        ***\n         ATTACH EP=SUBTASK1,ECB=(B#D),SZERO=NO,STAI=(STAIXB,STAIPB),   *\n               PARAM=((B#C),SAVESUB)\n         ST   R1,NARSUBTC          STO TCB PTR.\n         CHAP +1,NARSUBTC\n         L     R1,NARSUBTC\n         L     B#E,112(R1)         GET FSA ADDR.\n         ST    B#E,NARSUBSA        STO FSA ADDR.\n         CHAP -2,NARSUBTC\n         MVI      NARSUBTC,X'01'   SHOW THAT WE ARE USING THIS ONE.\n         B     ENDPART2\n***************************************\n SPACE 3\n****************************************\nSAVESUB  DC    18A(0)\n         LTORG\n         DROP\n*************************************************\n SPACE 3\n*************************************************\n         USING *,R15               HERE WE ARE.\nSTAIXB   DC    0H'0'\n         AP    APQ,=P'1'           COUNT TRIPS.\n         XR    R15,R15             CLEAR.\n         BR    R14                 EXIT THE STAE EXIT.\nSTAIPB   DC    A(0)\nAPQ      DC    PL4'0'\n         LTORG\n         DROP  R15\n***************************************\n SPACE 3\n***************************************\n         USING NARBGN40,R12\nSUBTCBB  DC    0H'0'\n         L     R0,SUBTNAME\n         STIMER REAL,(0),BINTVL=BINTVL1\n         WAIT  ECB=(B#F)\n         LA    R15,259\n         BR    R10\n***********************\n         WXTRN   NARMINUT\nSUBTNAME DC    V(NARMINUT)\nBINTVL1  DC    A(100*1)  ONE SECOND IN HUNDREDTHS OF A SECOND.\n***************************************\n SPACE 3\n***************************************\n         LTORG\n SPACE 3\n**************************************************\nENDPART2 DC    0H'0'\n         DROP\n***********************************************************\n   EJECT\n***********************************************************\n**  FRAGMENT  SUB-POOL #2 TO AVOID FREED CORE FROM GOING TO PK#0.\nNARBGN40 CSECT\n         USING NARBGN40,R12\n     B  ENDPART3  NO LONGER USED...\n         LA    R6,7\nFRAGIT GETMAIN R,LV=4096,SP=2\n      FREEMAIN R,LV=4080,A=(1),SP=2\n         BCT   R6,FRAGIT\n****************************************\n         SPACE 3\n****************************************\n         B     ENDPART3\n SPACE 3\n         LTORG\n SPACE 3\n**************************************************\nENDPART3 DC    0H'0'\n         DROP\n***********************************************************\n   EJECT\n***********************************************************\n**  CALL  -NARBGNP0-  FOR SOME WORK.\n**\nNARBGN40 CSECT\n*\nPART4    #\n*\nD#D      EQU   R6\n         USING NARBGN40,R12\n****************************************\n**  FORCE  TRANSACTION  CLASS  PER  CONCATENATION LEVEL IN DD=STEPLMSG.\n         TM    RSTFLAGD,X'01'           Q. DO THIS PART.\n         BZ    P43XX\n         B     P43XX\n         AGO   .P43XX\n         NARSCDF D#D,NARSCD10,NARSCDCX  PTR TO NARSCDC0\n         L       D#D,00(D#D)            PTR TO NARSCDC1 = RESTART AREA.\n         TM    08+01(D#D),SCDRSCLD      Q. COLD START.\n         BZ    P43XX                      NO, SKIP.\n         TIME  DEC\n         ST    R0,CTIM1\n         L     R1,ADDRSCD                 NO, LOAD SCDPTR.\n         LA    R2,=X'FE02C100'\n         LINK  EP=NARBGNP0                          LINK  FOR CLASSSET.\n         TIME  DEC\n         ST    R0,CTIM2\n.P43XX   ANOP\nP43XX    EQU   *\n******************************\n         SPACE 3\n******************************\n**  WIPEOUT TCBTCT POINTER.\n         TM    RSTFLAGD,X'02'           Q. DO THIS PART.\n         BZ    P44XX                      NO, SKIP.\n         LINK  EP=NARAO200,PARAM=((B#S),P4TCTPM)\n         B     P44XX\nP4TCTPM  DC    CL8'B0'\nP44XX    EQU   *\n********************\n SPACE 3\n********************\n**  RIG TO RUN NUC IN SUPVR STATE\n**      SO THAT DISPATCHER CAN WAIT IN PK=0 FOR BETTER PERFORMANCE.\n         TM    RSTFLAGD,X'04'           Q. DO THIS PART.\n         BZ    P45XX                      NO, SKIP.\n         B     P45XX                      NO, SKIP.\n         L     R1,ADDRSCD\n         LA    R2,=X'FE02C3F0'\n         LINK  EP=NARBGNP0\nP45XX    #\n******************************\n SPACE 3\n******************************\n         B     ENDPART4\n******************************\n SPACE 3\n****************************************\nCTIM1    DC    A(0)\nCTIM2    DC    A(0)\n         LTORG\n SPACE 3\n**************************************************\nENDPART4 DC    0H'0'\n         DROP\n***********************************************************\n   EJECT\n***********************************************************\n**  INITIALIZE  AUX/EXTRA/NAR CLB'S.\nNARBGN40 CSECT\n*\nPART5    #\n*\n         USING NARBGN40,R12\n         B     ENDPART5\n         AGO   .ENDPT5\nE#A      EQU   8\nE#B      EQU   1\nE#C      EQU   2\nE#D      EQU   3\nE#E      EQU   4\nE#F      EQU   14\nCCLBA    EQU   5\nCLBLEN   EQU   6\nLASTCLB  EQU   7\nCNRCLBA  EQU   9\nNRCLBL   EQU   10\nLNRCLB   EQU   11\n**************************************************\n         L     R1,16               CVT\n         L     R1,00(R1)           DBL\n         L     R1,00(R1)           TCB\n         L     R1,12(R1)           TIOT\n         ST    R1,BGNTIOT          TIOT\n********************\n         L     E#A,ADDRSCD\n         USING     SCD,E#A\n***************************************\n         LH    LASTCLB,SCDCLBN          NO. CLB'S\n         BCTR  LASTCLB,0                -1\n         MH    LASTCLB,SCDCLBL          * LENGTH\n         L     CCLBA,SCDCLB             ADDRESS OF 1ST CLB\n         LA    CCLBA,0(,CCLBA)\n         AR    LASTCLB,CCLBA            ADDRESS OF LAST CLB\n         LH    CLBLEN,SCDCLBL           LENGTH OF CLB\n         USING CLBDECB,CCLBA\n******************************\n         NARSCDF E#C,NARSCD10,NARCLBXX,TOFIND=PTR\n         USING       NARCLBXX,E#C\n         LH    LNRCLB,NARCLBXX+4+0      NO. NR CLB'S\n         BCTR  LNRCLB,0                 -1\n         MH    LNRCLB,NARCLBXX+4+2      *  LENGTH\n         L     CNRCLBA,NARCLBXX         ADDRESS OF 1ST NR CLB\n         LA    CNRCLBA,0(,CNRCLBA)\n         AR    LNRCLB,CNRCLBA           ADDRESS OF LAST NR CLB\n         LH    NRCLBL,NARCLBXX+4+2      LENGTH OF NR CLB\n         BCTR  NRCLBL,0                 -1\n         STC   NRCLBL,CPYNR+1           STORE LENGTH TO MOVE\n         LA    NRCLBL,1(,NRCLBL)        RESTORE ACTUAL LENGTH\n         USING NARCLB$X,CNRCLBA\n****************************************\nNXTCLB   AP    DLIN,=P'1'\n*        ***********\n******************************\n***     LINE NUMBER.\n         MVI   NARCLBNO+3,C' '\n         UNPK  NARCLBNO,DLIN\n         OI    NARCLBNO+L'NARCLBNO-1,X'F0'\n********************\n***     CLB/DECB ADDRESS.\n         ST    CCLBA,NARCLBDE           DECB PTR FOR CURRENT CLB\n         MVC   NARCLBDE(1),DECRLN  STO RLN FOR THIS DECB.\n********************\n***********************************************************************\n* FIND NO. PTERMS FOR THIS CLB & DEVTYPE\n*\n         L     E#B,CLBCTB\n         LA    E#B,0(,E#B)\n         USING CTB,E#B\n         L     E#D,CTBCTT\n         MVC   NARCLBIO(1),0(E#D)       MOVE IN DEVTYPE FROM CTT\n         SR    E#D,E#D\n         SH    E#B,SCDCTBL              BACK UP ONE CTB BECAUSE-\nNXTCTB   AH    E#B,SCDCTBL              BUMP TO NEXT CTB\n         LA    E#D,1(,E#D)              COUNT ANOTHER PTERM\n         TM    CTBFLAG3,CTB3LAST        IS THIS THE LAST ONE?\n         BNO   NXTCTB                   NO\n         STC   E#D,NARCLBDC             YES\n***     DCB ADDRESS.\n         L     E#E,CLBDCB          DCB  PTR.\n         LA    E#E,0(E#E)\n         LTR   E#E,E#E\n         BZ    INCRBOTH\n         STCM  E#E,7,NARCLBDC+1\n         USING     IHADCB,E#E\n*        ***********\n***     DDNAME.\n         MVC   NARCLBUC,=CL4'NOP ' IN CASE NOT OPEN.\n         MVC   NARCLBDD,DCBDDNAM   MOVE DDNAME IF IT IS CLOSED.\n         TM    DCBOFLGS,X'10'      Q. IS IT OPEN.\n         BZ    INCRBOTH             NO, SKIP  REMAINING FIELDS.\n         LH    R#W,DCBTIOT\n         A     R#W,BGNTIOT\n         MVC   NARCLBDD,4(R#W)     MOVE DDNAME IF IT IS OPEN.\n********************\n***     DEB ADDRESS.\nNXTUADD  L     E#F,DCBDEBAD\n         ST    E#F,NARCLBDB             DEBPTR\n         MVC   NARCLBDB(1),16(E#F)      NBR OF UCB'S ON THIS DCB\n***     UNIT ADDRESS IN EBCDIC.\n         MVC   NARCLBUC,=CL4'INC ' IN CASE NOT ENUF UNITS.\n         CLC   NARCLBDE(1),NARCLBDB     Q. ENUF UNIT TO GET HERE?\n         BH    INCRBOTH                 NO,SKIP REMAINING FIELDS.\n         XR    R#W,R#W                  GET THIS\n         IC    R#W,NARCLBDE             RELATIVE LINE NO.\n         BCTR  R#W,0                     (RELATIVE TO ZERO)\n         SLA   R#W,2                * 4 = OFFSET TO UCB PTR.\n         L     R#W,32(R#W,E#F)     UCB PTR.\n         MVI   NARCLBUC+3,C' '\n         MVC   NARCLBUC+0(3),X'0D'(R#W)      UCB NAME.\n***     IOB ADDRESS.\n         L     E#F,DCBIOBAD        IOB BASE.\n         XR    R1,R1               RELATIVE\n         IC    R1,NARCLBDE                LINE NBR,\n         XR    R0,R0                * SIZE OF\n         IC    R0,DCBEIOBX                  EACH IOB,\n         MR    R0,R0                = OFFSET FROM BASE.\n         AR    E#F,R1               +  BASE =  IOB PTR.\n         STCM  E#F,7,NARCLBIO+1         IOB PTR.\n         CLI   DECRLN,X'01'             IS THIS THE FIRST CLB THIS LN\n         BNE   INCRBOTH                 NO\n         CLC   NARCLBDE(1),NARCLBDB     IS THIS THE LAST UCB THIS LN\n         BE    RESET                    YES\nNOP1     NOP   SKIPTEST\n         BXH   CCLBA,CLBLEN,ENDPART5    BUMP TO NEXT CLB OR QUIT\n         CLC   DECDCBAD+1(3),NARCLBDC+1 NEXTCLB HAVE SAME DCB?\n         BE    INCRNR                   YES\n         SR    CCLBA,CLBLEN             REST CLB POINTER\n         MVI   NOP1+1,X'F0'             MAKE NOP A BRANCH\nSKIPTEST LR    E#C,CNRCLBA              NO, MAKE A DUMMY ENTRY\n         BXH   CNRCLBA,NRCLBL,ENDPART5  IF ANY ROOM LEFT\nCPYNR    MVC   NARCLB$X,0(E#C)\n         XR    E#C,E#C\n         IC    E#C,NARCLBDE\n         LA    E#C,1(,E#C)\n         STC   E#C,NARCLBDE\n         B     NXTUADD\nRESET    MVI   NOP1+1,X'00'             MAKE BRANCH A NOP\nINCRBOTH BXH   CCLBA,CLBLEN,ENDPART5\nINCRNR   BXLE  CNRCLBA,NRCLBL,NXTCLB\n         B     ENDPART5\n**************************************************\nBGNTIOT  DC    A(0)\nDLIN     DC    PL4'0'\n**************************************************\n    SPACE 3\n.ENDPT5  ANOP\n*****************************************\n         LTORG\n*****************************************\n    SPACE 3\n*****************************************\nENDPART5 DC    0Y(0)\n         DROP\n***********************************************************\n   EJECT\n**********************************************************************\n*** MAKE UP OUR OWN OS/MVS START COMMAND PREFIX FOR /STA REGION CMDS\n*    TO SUFFIX WITH THE REGION JOB MEMBER NAME SUFFIX.\n*   IF PARMS AVAILABLE FROM START-UP OF THIS NUC, THEN ADD THEM IN.\nPART6    #\n         USING NARBGN40,R12\n         USING SCD,B#S\n         L     B#S,ADDRSCD\n         DLLINK (P6CMND00,4),P6CMNDPF      INITIALIZE WITH PREFIX.\n         OPEN (PARMPROP,INPUT)             OPEN PARMS PROPAGATED.\n         TM    PARMPROP+48,X'10'           Q. DID IT OPEN.\n         BZ    P6CONT1                       NO; SKIP.\n         GET   PARMPROP,P6CMNDPT             YES; GET PARM CARDIMAGE.\n         CLOSE PARMPROP                           CLOSE IT.\n         LA    R#W,P6CMNDPT+72   (COL73)   END OF RECORD PRE-INCREMENT.\nP6LOOP1  BCTR  R#W,0                       DECREMENT. (COL#72,71,70,..)\n         CLI   0(R#W),X'40'                Q. IS THIS A BLANK.\n         BNE   P6GOTEXT                      NO, NON-BLANK; GOT IT.\n         C     R#W,=A(P6CMNDPT)              YES; Q. ALL BLANK.\n         BC    GT,P6LOOP1                           NO, KEEP LOOKING.\n         B     P6CONT1                              YES; SKIP.\nP6GOTEXT MVC   P6LAST,0(R#W)               ADDR OF LAST NON-BLANK\n         S     R#W,=A(P6CMNDPT)             - ADDR 1ST CHAR = (LEN-1)\n         LA    R#W,5(R#W)                   + 5\n         STH   R#W,P6CMNDPL                 = LENGTH_INCLUDING_LL00.\n         DLLINK P6CMND00,P6CMNDPL          ADD-ON THE PROPAGATED PARMS.\n         CLI    P6LAST,C','                Q. WAS THERE A TRALNG COMMA.\n         BE    P6CONT1                       YES; SKIP.\n         DLLINK P6CMND00,','                 NO; ADD ONE.\nP6CONT1  DLLINK P6CMND00,P6CMNDSF          ADD-ON THE SUFFIX.\n         MVC   P6SCRDR0,SCDSRDR            COPY ORIGINAL VALUES\n         MVC   P6SCRMBR,SCDSRMBR               FROM THE SCD.\n         LA    R#W,P6CMND00                PTR TO OUR COMMAND\n         ST    R#W,SCDSRDR                    STO INTO SCD;\n         AH    R#W,P6CMND00                 + LEN = MEMBER NAME SPOT\n         ST    R#W,SCDSRMBR                   STO INTO SCD.\n         B     ENDPART6\n**********************************************************************\n    SPACE 3\n*****************************************\nP6LAST   DC    C' '\nP6SCRDR0 DC    A(0)\nP6SCRMBR DC    A(0)\nP6CMNDPF DLTEXT 'S SSS,'\nP6CMNDSF DLTEXT 'M=IMSMSG'\nP6CMNDPL DC    Y(0,0)\nP6CMNDPT DC    CL80' '\nP6CMND00 DC    XL128'0'\nPARMPROP DCB   DDNAME=PARMPROP,MACRF=GM,DSORG=PS,RECFM=FB,LRECL=80\n         LTORG\n*****************************************\n    SPACE 3\n*****************************************\nENDPART6 DC    0Y(0)\n         DROP\n         PRINT   GEN\n**********************************************************************\n   EJECT\n**********************************************************************\nNARBGN40 CSECT\n         USING NARBGN40,R12\nEPILOGUE EPILOGUE  RC=000\nINVALID  ABEND 1,DUMP\n**************************************************\n         LTORG\n**************************************************\n         DSECT\n         EJECT\n         NARSCD\n         EJECT\n         NARCPY\n         EJECT\n*&\u00eb%$    AIF   ('&SYSPARM'(1,1) NE 'S').OVNOGEN\n         PRINT NOGEN\n.OVNOGEN ANOP\n         ISCD  SCDBASE=0\n         IDLI  PSTBASE=0\n         ICLI  CLBBASE=0,CTBBASE=0\n         DCBD  DSORG=(CX,PS)\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NARCPY": {"ttr": 5382, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x1e\\x00\\x1e\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31MC JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//UPDTE EXEC IMSUPDTE,P=IMA,MEMBER=NARCPY,DISPR=SHR,\n//    SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,\n//    SOUT='*',CONDL=0\n//SYSIN  DD *\n./ ADD NAME=NARCPY\n         MACRO\n         NARCPY &SECT=DSECT\n         GBLC  &NARGBPS\n&NARGBPS SETC  '&SECT'\n         NARSEPAR\nNARCMOV1 DS    0D'0'\n         NARSEPAR\nNARCMOV2 DS    0D'0'\nNARCTIMD DS    XL8'0'\nNARCTIMP DS    Y(0,0)         TIME PERCENTAGES.\n         DS    Y(0,0)         RESERVED\nNARCFLGT DS    XL8'00'        TERMINATION FLAGS.  TTR,P,L,I;J,K.\n         DS    XL8'0'         FUTURE USE.\nNARCPY07 DS    XL32'0'        COPY TO X'07' RECORD.\n         NARSEPAR\nNARCMOV3 DS    0D'0'\n         NARSEPAR\nNARCMOV4 DS    0D'0'\nNARCNUCA DS    A(0)           ADDRESS OF CORRESPONDENT IN THE NUC.\n         DS    A(0)           RESERVED\nNARCFLGA DS    CL16' '        FLAGS  $A0 -->  15.\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NARILOG7": {"ttr": 5384, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00#\\x00#\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31L7 JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=RMY24,CLASS=L\n//*********************************  (       IMA.RECORD(NARILOG7))  ***\n//NARILOG7 EXEC IMSUPDTE,P=IMA,DISPR=SHR,MEMBER=NARILOG7,\n//   SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,NEW=NEW,\n//   SOUT='*',CONDL=0\n//SYSIN    DD  *\n./  ADD     NAME=NARILOG7   RW0028B - DEFINE ROCKWELL FIELDS IN 07 REC.\n         AIF   ('&SHORT' EQ 'YES').L07155\n*  ROCKWELL ADDITIONS  BEGIN.\nRIXTRA   DS    0F\nRISTCK26 DC     F'0'   DELTA TOD CONVERTED TO 26USEC UNITS FOR CONSIST.\nRISTCKST DC    2F'0'         TOD OF THIS X'07' RECORD.\nRIXTRAX  DC     F'0'             SETC SOURCE ID    SETC/CPY$\nRIXTRAY  DC     F'0'             SETC SOURCE FLAGS\nRIXTRA1  DC     F'0'         **\nRIXTRA2  DC     F'0'          *> SETC DATA\nRIXTRA3  DC     F'0'         **\nRIXTRA4  DC     F'0'             SMBSTATS / PDIRCODE\nRIXTRA5  DC     F'0'             IWAIT COUNTS\nRIXTRA6  DC     F'0'             MACHINE I.D.\nRIXTRA7  DC     F'0'         *   NARCFLGT\nRIXTRA8  DC     F'0'         *    (TERMINATION FLAGS)\nRIXTRMOV DC    XL32'00'\nRILL     EQU   *-RIXTRA\nRIRECZZ  EQU   *\n         ORG   RIXTRA\nRIXC     DS    XL(RILL)\n         ORG\n*  ROCKWELL END OF LOG RECORD.\n*  ROCKWELL ADDITIONS  END.\n.L07155  ANOP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NARPARMS": {"ttr": 5386, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x13\\x00\\x13\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31PM JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//NARPARMS  EXEC IMSUPDTE,MEMBER=NARPARMS,\n//             P=IMA,LOAD='PVT.MODS',DISPR=SHR,\n//  SYMI=SOURCETM,SYMO=SOURCETM,RECORD=NO,ACCT=1,SOUT='*'\n//RECORD DD DISP=SHR,DSN=IMS.EMTLIB\n//SYSINR DD DISP=SHR,DSN=IMS.EMTLIB\n//C.SYSIN  DD *\nNARPARMS CSECT\n         REQUATE\n         NARPRM SECT=CSECT\n         EJECT\n         NARPRM P=Q\n         EJECT\n         NARCPY\n         END\n/*\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NARPRM": {"ttr": 5388, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x88\\x00\\x88\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 136, "newlines": 136, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31MP JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//UPDTE EXEC IMSUPDTE,P=IMA,MEMBER=NARPRM,DISPR=SHR,\n//    SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,\n//    SOUT='*',CONDL=0\n//SYSIN  DD *\n./ ADD NAME=NARPRM\n         MACRO\n&N       NARPRM  &SECT=DSECT,&P=N,&L=1536\n         GBLC  &NARGBPS\n&NARGBPS SETC  '&SECT'\n         NARSEPAR\n&N       DC    0D'0'\n&P.ARPRM00 DC  ((&L-8)/8)D'0'\n         DC    2F'-1'\n           ORG  &P.ARPRM00\n&P.ARP     DC  2A(0)\n&P.ARPSCDN DC   A(0)           NAR          SCD PTR.\n&P.ARPPSTN DC   A(0)           NAR          PST PTR.\n&P.ARPPXPM DC   A(0)           ORIGINAL IBM PXP PTR.\n&P.ARPCMP  DC   A(0)           COMP CODE.\n&P.ARPSCDI DC   A(0)           ORIGINAL IBM SCD PTR.\n&P.ARPPSTI DC   A(0)           ORIGINAL IBM PST PTR.\n&P.ARPCC2P DC   A(&P.ARPCC2D)  PTR TO DATA FOR PCC20.\n&P.ARPSTAE DC   A(&P.ARPSUAE)  PTR TO DATA FOR STAE PROCESSING.\n           DC   A(0)\n&P.ARPTIMP DC   A(&P.ARPTIMS)  PTR TO DATA FOR TIMING.\n           DC  7A(0)\n&P.ARPSSNM DC   CL4' '         THIS SUBSYSTEM NAME.\n&P.ARPPCPY DC   A(0)\n           DC  3A(0)\n&P.ARPMOVS DC  A(&P.ARPMOV1)\n&P.ARPMOP2 DC  A(&P.ARPART2)\n&P.ARPMOP3 DC  A(&P.ARPART3)\n&P.ARPMOP4 DC  A(&P.ARPART4)\n           DC  16A(0)         FREE SPACE.\n&P.ARPSAV1 DC  24A(0)          S/A USED IN PCC20\n&P.ARPSAV2 DC  24A(0)          S/A USED IN PCC20\n&P.ARPSAV3 DC  24A(0)\n&P.ARPSAV4 DC  24A(0)\n&P.ARPSAV9 DC  XL128'0'\n*****************************************\n*** STUFF FOR PCC20\n         NARSEPAR\n&P.ARPCC2D DC   00D'0'\n           DC   10D'0'\n&P.ARPCBLT DC  D'0'\n&P.ARPCBLC DC  PL4'0'\n           DC  A(0)\n           DC  24A(0)\n*****************\n**  MEMORY CLEARNESS DATA.\n           DC  A(0)\n&P.ARPCTCB DC  A(0)\n           DC  A(0)\n&P.ARPCTOP DC  A(0)\n*        ******\n           DC  A(0)\n&P.ARPCWHO DC  CL8' '\n&P.ARPCWHR DC  A(0)\n*        ******\n&P.ARPCWHC DC  CL8' '\n*        ***\n&P.ARPCBOT DC  A(X'FEDCBA')\n&P.ARPCFFB DC  4A(0)\n&P.ARPCLFB DC  4A(0)\n*        ***\n&P.ARPCMMX DC 0D'0'\n           DC  A(X'10')\n           DC  X'007FFFFF'\n&P.ARPCMCH DC  D'0'\n*****************\n**  COUNTERS BY THE BUNCH.\n&P.ARPCTY1 DC PL4'0'\n&P.ARPCBLD DC PL4'0'\n&P.ARPCLDE DC PL4'0'\n&P.ARPCOR1 DC PL4'0'\n&P.ARPCOR2 DC PL4'0'\n&P.ARPCLNK DC PL4'0'\n&P.ARPCSNG DC PL4'0'\n*****************************************\n*    TIMING DATA --- DELTA STCK TYPE STUFF.\n         NARSEPAR\n&P.ARPTIMS DC    0D'0',Y(0)\n&P.ARPTIMA DC    XL8'0'\n&P.ARPTIMD DC    XL8'0'\n&P.ARPTIMN DC    XL8'0'\n&P.ARPTIMT DC    XL8'0'\n&P.ARPTIMZ DC    XL8'0'\n&P.ARPTIM1 DC    F'0'              16 USEC TU.\n&P.ARPTIM2 DC    F'0'              26 USEC TU.\n           DC    Y(0)\n&P.ARPTIMJ DC    XL8'0'\n&P.ARPTIMK DC    XL8'0'\n&P.ARPTIM# EQU   *\n*****************************************\n*** MOVE INSTR & ADDR.\n         NARSEPAR\n&P.ARPMOV1 DC   A(0),A(&P.ARP)     CTL(R14),MSG(R15)\n         MVC   0(0,R14),0(R15)     CTL  <--  MSG           1\n&P.ARPMOV2 DC   A(0),A(&P.ARPART2) CTL(R14),MSG(R15)\n         MVC   0(0,R14),0(R15)     CTL  <--  MSG           2\n&P.ARPMOV3 DC   A(0),A(&P.ARPART3) CTL(R14),MSG(R15)\n         MVC   0(0,R15),0(R14)     MSG  <--  CTL\n&P.ARPMOV4 DC   A(0),A(&P.ARPART4) CTL(R14),MSG(R15)  CTL(R15),MSG(R14)\n         MVC   0(0,R15),0(R14)     MSG  <--  CTL      CTL  <--  MSG\n         CNOP  0,4\n*****************************\n*     MOVE AREAS.\n         NARSEPAR\n&P.ARPART2 DC  CL100'0'\n         NARSEPAR\n&P.ARPART3 DC  CL100'0'\n         NARSEPAR\n&P.ARPART4 DC  CL100'0'\n         AIF   ('&SECT' EQ 'DSECT').OVLTST\n&P.ARPRMZZ ORG\n&P.ARPRMZL EQU &L-(&P.ARPRMZZ-&P.ARPRM00)    AMOUNT LEFT BEFORE ERROR.\n&P.ARPRMZX DC  0XL(&P.ARPRMZL)'0'            IF NEGATIVE THEN   ERROR.\n.OVLTST  ANOP\n*****************************************\n***  STAE EXIT DATA.\n         NARSEPAR\n&P.ARPSUAE DC  0D'0'\n&P.ARPSROT DC  A(0)\n&P.ARPSLTR DC  A(0)\n&P.ARPSTA1 DC  A(0)\n&P.ARPSTA2 DC  A(0)\n           DC 4A(0)\n&P.ARPSLGT EQU  *-&P.ARPSUAE\n&P.ARPSPFX EQU  &P.ARPSUAE,&P.ARPSLGT\n&P.ARPSAVE DC  18F'0'\n&P.ARPSPLG EQU 256\n&P.ARPSPIN DC  XL(&P.ARPSPLG)'0'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NARPST": {"ttr": 5391, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00T\\x00T\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 84, "newlines": 84, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31MS JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//NARPST EXEC IMSUPDTE,P=IMA,MEMBER=NARPST,DISPR=SHR,\n//    SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,\n//    SOUT='*',CONDL=0\n//SYSIN  DD *\n./ ADD NAME=NARPST\n         MACRO\n&NAME    NARPST &P=N,&SECT=DSECT,&XPSTL=896,&XPSTA=26\n         GBLC  &NARGBPS\n         LCLC  &I\n&NARGBPS SETC  '&SECT'\n****************************************  5/10/90\n&NAME    DC  0D'0'\n&I        SETC  '0'\n&P.ARPST#&I DC 0A(0),((&XPSTL/4)-1)A(0),F'-1'\n            ORG &P.ARPST#&I\n&P.ARPCHN&I DC  A(0)                PTR TO NEXT EXTENTION TO THIS PST\n&P.ARPID1&I DC  CL4'RIP1'                    ID FOR OUR  EXTENDED PST\n&P.ARPORG&I DC  A(&P.ARPST#&I)               PTR TO ORG OF THIS BLK\n&P.ARPIPS&I DC  A(0)                         PTR TO THE IBM PST\n&P.ARPSCD&I DC  A(0)  ==> V(DFSISCD)         PTR TO THE IBM SCD\n&P.ARPRS1&I DC  A(0)  ==> V(&P.ARSCD10)      PTR TO THE NAR SCD\n         PUSH  PRINT\n&P.ARPST1&I EQU &P.ARPST#&I,*-&P.ARPST#&I\n&P.ARPSTW&I DC AL1(L'&P.ARPST1&I-1),AL3(&P.ARPST1&I)       '\n            DC AL1(L'&P.ARPST2&I-1),AL3(&P.ARPST2&I)       '\n            DC AL1(L'&P.ARPST3&I-1),AL3(&P.ARPST3&I)       '\n            DC AL1(L'&P.ARPST4&I-1),AL3(&P.ARPST4&I)       '\n            DC 5A(0)          FREE SPACE.\n&P.ARPSTV&I DC A(&P.ARPSTQ&I)          A SAVE AREA\n&P.ARPSTY&I DC A(&P.ARPSTX&I)          REGN SUMMATION ACCTNG  DATA\n&P.ARPSTJ&I DC A(&P.ARPSTK&I)          THIS SCHED'S ACCOUNTING DATA\n&P.ARPSTC&I DC A(&P.ARPSTD&I)\n&P.ARPSTE&I DC A(&P.ARPSTF&I)          STCK ARITHMETIC\n**********************************\n         NARSEPAR\n&P.ARPSTD&I DC 06A(0)\n*************************\n         NARSEPAR\n&P.ARPSTF&I DC 0D'0'               FOR STCK ARITHMETIC\n&P.ARPTIA&I DC 8D'0'               FOR STCK ARITH  FOR MPP START STO\n&P.ARPTIB&I DC 8D'0'               FOR STCK ARITH  FOR DYN ALLOC\n*************************\n         NARSEPAR\n&P.ARPSTK&I DC 00A(0)\n&P.ARPCHL&I DC Y(0,0)\n&P.ARPCHI&I DC CL4'    '\n&P.ARPCHF&I DC Y(0,0)\n&P.ARPCHG&I DC 05A(0)              'SETC' VALUE (11 BYTES)\n&P.ARPCHM&I EQU *-&P.ARPCHL&I      MAX ALLOW FOR 00LL0000\n&P.ARPIWT&I DC 01A(0)              COUNT OF DL/I IWAITS FOR I/O\n&P.ARPIWX&I DC XL(24*4)'0'           MORE   DL/I IWAITS COUNTS\n*************************\n         NARSEPAR\n&P.ARPSTX&I DC   A(&XPSTA*4)       LGTH OF N-WORDS @ &P.ARPSTN&I\n&P.ARPSTL&I DC         A(0)        NBR OF LOADS\n&P.ARPSTM&I DC         A(0)        NBR OF MESSAGES\n&P.ARPSTN&I DC (&XPSTA)A(0)        N-WORDS CORRES. TO ACCT DATA AREA\n&P.ARPSTI&I DC         A(0)        IWAITS\n            DC        3F'-1'\n*************************\n         NARSEPAR\n&P.ARPSTQ&I DC 24A(0)\n***********************************\n         NARSEPAR\n&P.ARPST2&I DC XL64'0'\n*************************\n         NARSEPAR\n&P.ARPST3&I DC XL64'0'\n*************************\n         NARSEPAR\n&P.ARPST4&I DC 0XL64'0',A(*),XL60'00'\n&P.ARPSZZ&I EQU  *\n.*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n         AIF   ('&SECT' EQ 'DSECT').OVPSTS\n&P.ARPS@@@ EQU   &XPSTL-(&P.ARPSZZ0-&P.ARPST#0) AMOUNT LEFT BEFORE ERR.\n           DC 0XL(&P.ARPS@@@+1)'00'     IF \".@@@\"  NEGATIVE THEN ERROR.\n.OVPSTS  ANOP\n************************************************************\n**\n************************************************************\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NARPSTF": {"ttr": 5394, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00*\\x00*\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 42, "newlines": 42, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31MS JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//NARPSTF EXEC IMSUPDTE,P=IMA,MEMBER=NARPSTF,DISPR=SHR,\n//    SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,\n//    SOUT='*',CONDL=0\n//SYSIN  DD *\n./ ADD NAME=NARPSTF\n         MACRO\n&N       NARPSTF &B,&FAILX=,&WKR=0\n         LCLC  &NOFND,&S\n.*  BASIC FORM IS-   NARPSTF  REG\n.*   IBM PST PTR IS PROVIDED IN REGISTER SPECIFIED BY \"REG\".\n.*   NAR PST PTR IS RETURNED IN REGISTER SPECIFIED BY \"REG\".\n.*   IF  \"FAILX=TAG\" IS SPECIFIED, THEN MACRO BRANCHES TO TAG IF\n.*                                 LOCAL BLOCKS NOT FOUND.\n.*      ELSE                       PROGRAM CHECK ABEND S/0C6 OCCURRS.\n.**********************************************************\n&R       SETC  '&WKR'\n&S       SETC  '&B'       INPUT IN &B, OUTPUT IN &S; MUST BE THE SAME.\n&NOFND   SETC  '1(&B)'\n         AIF  ('&FAILX' EQ '').OVSETNO\n&NOFND   SETC  '&FAILX'\n.OVSETNO ANOP\n******************************\n.PST     ANOP\n*  GET IBM'S SCD ADDRESS.\n         XR    &R,&R                       CLEAR REG.\n         IC    &R,PSTNRLOB-PST(&B)        GET PST NUMBER.\n         ICM   &S,15,PSTSCDAD-PST+0(&B)    PTR TO SCD.\n         BZ    &NOFND                      IF NO POINTER AVAILABLE.\n******************************\n*  GET RI'S  SCD ADDRESS AND THEN THE NARPST LIST PTR.\n         NARSCDF &S,NARPSTSL,KNOWN=SCD,FAILX=&NOFND\n******************************\n*  GET RI'S  PST ADDRESS.\n         SLL   &R,3                        OFFSET IN LIST = # * 8.\n         AR    &S,&R                       ORIGIN+OFFSET=ENTRY\n         ICM   &S,15,0(&S)                 GET NAR'S PST PTR.\n         BZ    &NOFND                      IF NO POINTER AVAILABLE.\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NARPST00": {"ttr": 5634, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31PS JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//NARPST00  EXEC IMSUPDTE,MEMBER=NARPST00,\n//             P=IMA,DISPR=SHR,\n//  LOAD='PVT.MODS',\n//  SYMI=SOURCETM,SYMO=SOURCETM,ACCT=1,SOUT='*'\n//C.SYSIN  DD *\n  TITLE ' THE ORIGINAL MACRO=NARPST '\n         COPY  NARPST\n         PUNCH ' REPLACE NARSTEST '\nNARPST00 CSECT\n         PRINT   GEN\n         NARPST  SECT=CSECT\n         TITLE ' THE SAMPLE   DSECT=NARPST '\nQQ       DSECT\nTESTDSEC NARPST P=Q\n         TITLE ' SOME TEST CASES OF VARIOUS EXPANSIONS OF NARPSTF '\nNARSTEST CSECT\n         PROLOGUE\n         REQUATE\n     NARPSTF R6,FAILX=NARSTEST\n         SPACE 3\n     NARPSTF R6\n         SPACE 3\n         LTORG\n         PRINT   GEN\n         NARSCD  PST=NO\n         ISCD  SCDBASE=0\n         IDLI  PSTBASE=0\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NARSCD": {"ttr": 5636, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\xf4\\x00\\xf4\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 244, "newlines": 244, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31MS JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//UPDTE EXEC IMSUPDTE,P=IMA,MEMBER=NARSCD,DISPR=SHR,\n//    SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,\n//    SOUT='*',CONDL=0\n//SYSIN  DD *\n./ ADD NAME=NARSCD\n         MACRO\n&NAME    NARSCD &P=N,&SECT=DSECT,&XPSTN=255,&XPSTL=896,&XPSTA=26,&PP=, *\n               &NSUB=20,&JFCBN=12,&JFCBL=64,&PST=YES\n         GBLC  &NARGBPS\n         LCLA  &IN\n         LCLA  &K@NARX\n         LCLC  &I,&ILIST\n&NARGBPS SETC  '&SECT'\n.*$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n         NARSEPAR\n&NAME    DC  0D'0'\n         NARSEPAR\n.*$*****************\n           AIF ('&SECT' NE 'CSECT').OVCS02\n           ENTRY &P.ARSCD00\n           ENTRY &P.ARSCD1#,&P.ARSCD2#\n.OVCS02    ANOP\n.*$*****************\n&P.ARSCD00 DC    0D'0',AL1(&P.ARSCD0Z-&P.ARSCD00),VL3(&P.ARSCD00)\n&P.ARSCD0I DC    A(0)    ===           ==>  V(DFSISCD)\n           DC    A(0)\n           DC    A(0)\n.*$*****************\n&P.ARSCD1# DC    V(&P.ARSCD10)\n&P.ARSCD2# DC    A(0)  ==========> V(&P.ARSCD20)\n&P.ARSCD0Z EQU   *\n************************************************************\n         NARSEPAR\n           AIF ('&SECT' EQ 'CSECT').CSECT\n&P.ARSCD10 DC    0D'0'\n           AGO   .C1\n.CSECT     ANOP\n&P.ARSCD10 CSECT\n.C1        DC  A(0)                       PTR TO NEXT EXTENDED SCD\n           DC  CL4'RIS1'                  ID FOR OUR  EXTENDED SCD\n           DC  V(&P.ARSCD00)              PTR TO OUR  PREFIX\n           DC  A(0)\n           DC 2CL8'NARSCD10'\n&P.ARSCFA# DC  A(&P.ARSCFA0)           FLAGS OF TYPE $A-\n&P.ARSCFB# DC  A(&P.ARSCFB0)           FLAGS OF TYPE $B- FEATURES 0-255\n           DC 1A(0)\n&P.ARSCFR# DC  A(&P.ARSCFR0)           FLAGS OF TYPE $R-\n&P.ARSUBT# DC  A(&P.ARSUBT0)           LOCAL SUBTASK CONTROL BLKS\n&P.ARSDA1# DC  A(&P.ARSDA10)           LOCAL ADDL LOG RECORD\n&P.ARSDEV# DC  A(&P.ARSDEV0)           CRT DEV. TABL FOR OPCODE=\"TRT\"\n&P.ARSTAT# DC  A(0)  ===> V(NAR#STAT)  SYSTEM MINUTE UPDATES -- IN NUC.\n&P.ARSMIN# DC  A(0)  ===> V(NAR#STAT)  SYSTEM MINUTE UPDATES -- IN CSA.\n&P.ARSDLK# DC  A(0)  ===>              ==>  V(DLLINK)\n           DC 2A(0)\n&P.ARPSTS# DC  A(&P.ARPSTS0)           LOCAL EXTENDED PSTS\n           DC  3A(0)\n&P.ARSFMT# DC  A(&P.ARSFMT0)           SYSTEM FORMAT DATA\n&P.ARSWAT# DC  A(&P.ARSWAT0)           SYSTEM IWAIT DATA\n&P.ARSVTM# DC  A(&P.ARSVTM0)           SYSTEM VTAM  DATA\n&P.ARSMDA# DC  A(&P.ARSMDA0)           SYSTEM DYNAL DATA\n&P.ARSACS# DC  A(&P.ARSACS0)           SYSTEM ACF2  SIGNON DATA\n&P.ARSACT# DC  A(&P.ARSACT0)           SYSTEM ACF2  TRANST DATA\n&P.ARSJFC# DC  A(&P.ARSJFC0)           SYSTEM JFCB'S       DATA\n&P.ARSTIM# DC  A(&P.ARSTIM0)           TIME OF SEVERAL ACTION REQUESTS.\n           DC 16A(0)\n.*\n.*\n.*\n************************************************************\n*\n************************************************************\n         NARSEPAR\n&P.ARSCFAX DC  2D'0'\n           ORG &P.ARSCFAX\n&P.ARSCFA0 DC  XL1'0'\n&P.ARSCFA1 DC  XL1'0'\n&P.ARSCFA2 DC  XL1'0'\n&P.ARSCFA3 DC  XL1'0'\n&P.ARSCFA4 DC  XL1'0'\n&P.ARSCFA5 DC  XL1'0'\n&P.ARSCFA6 DC  XL1'0'\n&P.ARSCFA7 DC  XL1'0'\n&P.ARSCFA8 DC  XL1'0'\n&P.ARSCFA9 DC  XL1'0'\n&P.ARSCFAA DC  XL1'0'\n&P.ARSCFAB DC  XL1'0'\n&P.ARSCFAC DC  XL1'0'\n&P.ARSCFAD DC  XL1'0'\n&P.ARSCFAE DC  XL1'0'\n&P.ARSCFAF DC  XL1'0'\n           ORG\n           DC  2D'0'         (AND THEN SOME SPARES)\n******************************\n         NARSEPAR\n&P.ARSCFBX DC  256D'0'    256 DBL WDS FOR FEATURES #0 -TO- 255.\n           ORG &P.ARSCFBX\n&P.ARSCFB0 DC     D'0'\n           ORG\n           DC   4D'0'        (AND THEN SOME SPARES)\n******************************\n         NARSEPAR\n&P.ARSCFRX DC  1D'0'\n           ORG &P.ARSCFRX\n&P.ARSCFR0 DC  XL1'00'\n&P.ARSCFR1 DC  XL1'00'\n&P.ARSCFR2 DC  XL1'00'\n&P.ARSCFR3 DC  XL1'00'\n&P.ARSCFR4 DC  XL1'00'\n&P.ARSCFR5 DC  XL1'00'\n&P.ARSCFR6 DC  XL1'00'\n&P.ARSCFR7 DC  XL1'00'\n           ORG\n******************************\n         NARSEPAR\n&P.ARSUBT0 DC 0A(0)\n&P.ARSUBTX DC  A(*+4)              PTR TO NEXT UNUSED ADCON\n**    NEXT DC IS A TABLE OF ADCONS POINTING TO THE 4-WDS FOR EA S/TASK\n           DC  (&NSUB)A(((*-&P.ARSUBTX-4)/4+0)*016+&P.ARSUBTL)\n           DC  F'-1'               END MARKER\n**    NEXT DC IS                               THE 4-WDS FOR EA S/TASK\n&P.ARSUBTL DC  (&NSUB)A(0,0,0,0)\n&P.ARSUBTC EQU &P.ARSUBTL+00       TCB ADDR.\n&P.ARSUBSA EQU &P.ARSUBTL+04       FSA ADDR.\n&P.ARSUBE1 EQU &P.ARSUBTL+08       ECB POSTED BY OS WHEN SUBTASK QUITS.\n&P.ARSUBE2 EQU &P.ARSUBTL+12       ECB WATCHED BY SUBTASK FOR QUITTING.\n******************************\n         NARSEPAR\n&P.ARSFMT0 DC  8A(0)\n******************************\n         NARSEPAR\n&P.ARSWAT0 DC  141A(0)\n******************************\n         NARSEPAR\n&P.ARSVTM0 DC  2A(0)\n&P.ARSVTMN DC  CL8' '                       NODE NAME\n&P.ARSVTMK DC  XL8'0'                       TIME VIA STCK\n&P.ARSVTMS DC  XL8'0'                       TIME SUM OF DELTAS\n&P.ARSVTMD DC  XL8'0'                       TIME DELTA\n&P.ARSVTMX DC  XL8'0'                       TIME MAX DELTA\n&P.ARSVTMI DC  XL8'0'                       TIME MIN DELTA\n           DC  32A(0)\n******************************\n         NARSEPAR\n&P.ARSMDA0 DC  2A(0)\n&P.ARSMDAN DC  CL8' '\n&P.ARSMDAK DC  XL8'0'\n&P.ARSMDAS DC  XL8'0'\n&P.ARSMDAD DC  XL8'0'\n&P.ARSMDAX DC  XL8'0'\n&P.ARSMDAI DC  XL8'0'\n           DC  32A(0)\n******************************\n         NARSEPAR\n&P.ARSACS0 DC  2A(0)\n&P.ARSACSN DC  CL8' '\n&P.ARSACSK DC  XL8'0'\n&P.ARSACSS DC  XL8'0'\n&P.ARSACSD DC  XL8'0'\n&P.ARSACSX DC  XL8'0'\n&P.ARSACSI DC  XL8'0'\n           DC  16A(0)\n******************************\n         NARSEPAR\n&P.ARSACT0 DC  2A(0)\n&P.ARSACTN DC  CL8' '\n&P.ARSACTK DC  XL8'0'\n&P.ARSACTS DC  XL8'0'\n&P.ARSACTD DC  XL8'0'\n&P.ARSACTX DC  XL8'0'\n&P.ARSACTI DC  XL8'0'\n           DC  16A(0)\n******************************\n         NARSEPAR\n&P.ARSDA10 DC  0D'0'\n&P.ARSDATA DC   A(&P.ARSDECB,0)\n&P.ARSDRDW DC   Y(&P.ARSDZZZ-*,0),CL8'NARSDATA'\n&P.ARSDATB DC   Y(&P.ARSDATC-*,0),CL8'NARSDATB'\n&P.ARSDSID DC   XL4'0'\n&P.ARSDSOS DC   XL2'0'\n&P.ARSDSIM DC   XL6'0'\n&P.ARSDSLV DC   XL4'0'\n&P.ARSDSLG DC   XL4'0'\n&P.ARSDBGN DC   XL16'0'\n&P.ARSDTIM DC   A(0)                              TIME (R0) MACRO INST.\n&P.ARSDDAT DC   A(0)                                   (R1) MACRO INST.\n&P.ARSDSTK DC  2A(0)                              STCK      MACH INSTR.\n&P.ARSDSNR DC  2A(0)\n&P.ARSDATC DC        Y(&P.ARSDATZ-*,0),CL8'NARSDATC'\n&P.ARSDATZ DC        Y(&P.ARSDZZZ-*,0),CL8'NARSDATZ'\n           DC   Y(&P.ARSDZZZ-&P.ARSDRDW)\n&P.ARSDZZZ EQU *\n&P.ARSDECB DC  A(0)\n******************************\n         NARSEPAR\n&P.ARSDEV0 DC  256X'00'             CRT DEV. TABL FOR OPCODE=\"TRT\"\n*  NON-ZERO ==> DEV IS REAL/REGULAR CRT AND IS SIGN-ON-ABLE FOR ACF2.\n******************************\n         NARSEPAR\n&P.ARSJFC0 DC  A(&P.ARSJFCJ,&JFCBN,&JFCBL,0)\n&P.ARSJFCJ DC  (&JFCBN)CL(&JFCBL)' ' SEVERAL NUC JFCB'S COPIED HERE.\n           DC  X'FFFF'\n******************************\n         NARSEPAR\n&P.ARSTIM0 DC 0D'0'                  TIME OF SEVERAL ACTION REQUESTS.\n&P.ARSTBLD DC  D'0'                  TIME OF LAST BLDL RESET.\n&P.ARSTBLC DC  PL4'0'                  #  OF      BLDL RESETS.\n           DC 3D'0'\n************************************************************\n**\n************************************************************\n         NARSEPAR\n** E.G., SPECIFYING XPSTN=30 WILL GET 31 XPSTS NUMBERED 0-30\n*                   XPSTN=255 WILL GET 256 WHICH IS THE MAX FOR NOW.\n&IN      SETA  0\n           DC  0D'0',C'NARPSTS0'\n&P.ARPSTS0 DC  0A(0)\n&P.ARPSTSA DC  Y(&XPSTN,&XPSTL)\n&P.ARPSTSL DC  (&XPSTN+1)A(0,0)\n&P.ARPSTRI EQU &P.ARPSTSL+0  THE L-H WORD IN EACH PAIR=PTR TO OUR PST\n&P.ARPSTBM EQU &P.ARPSTSL+4  THE R-H WORD IN EACH PAIR=PTR TO IBM PST\n           DC  2F'-1'\n************************************************************\n**\n************************************************************\n         NARSEPAR\n.*\n.*\n.*\n************************************************************\n**     IF THIS IS A DSECT, THEN ISSUE OTHER DSECT MACROS.\n************************************************************\n           AIF ('&SECT' NE 'DSECT').OVCS98\n           AIF ('&PST'  EQ    'NO').OVCS95\n&PPP       SETC '&P'\n           AIF ('&PP'   EQ      '').OVCS91\n&PPP       SETC '&PP'\n.OVCS91    ANOP\n           NARPST  P=&PPP\n.OVCS95    ANOP\n.OVCS98    ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NARSCDF": {"ttr": 5641, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00k\\x00k\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 107, "newlines": 107, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31MS JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//UPDTE EXEC IMSUPDTE,P=IMA,MEMBER=NARSCDF,DISPR=SHR,\n//    SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,\n//    SOUT='*',CONDL=0\n//SYSIN  DD *\n./ ADD NAME=NARSCDF\n         MACRO\n&N       NARSCDF &B,&TAG,&KNOWN=VCON,&FAILX=\n         LCLC  &VCON#,&VCON0,&VCONID\n         LCLC  &TAG17,&TAG88,&TAGA,&TAGB\n         LCLC  &NOFND\n         LCLA  &KIND\n.*  BASIC FORM IS-   NARSCDF  REG,SYMBOLNAME\n.*   DESIRED PTR IS RETURNED IN REGISTER SPECIFIED BY \"REG\".\n.*    \"SYMBOLNAME\" = NAME OF A SYMBOL IN THE MACRO=NARSCD.\n.*   IF  \"KNOWN=SCD\"   IS SPECIFIED, TRACK BEGINS IN SCD AND SCD ADDR\n.*                                        MUST BE IN SPECIFIED  \"REG\".\n.*   IF  \"KNOWN=NARSCD\"   SPECIFIED, TRACK BEGINS IN NARSCD & NARSCD\n.*                                        MUST BE IN SPECIFIED  \"REG\".\n.*   IF  \"KNOWN=PST\"   IS SPECIFIED, TRACK BEGINS IN PST AND PST ADDR\n.*                                        MUST BE IN SPECIFIED  \"REG\".\n.*      ELSE                         TRACK BEGINS WITH V(NARSCD10).\n.*   IF  \"FAILX=TAG\"   IS SPECIFIED, THEN MACRO BRANCHES TO TAG IF\n.*                                 LOCAL BLOCKS NOT FOUND.\n.*      ELSE           NOT-FOUND CAUSES PROGRAM CHECK ABEND S/0C6.\n.**********************************************************\n&NOFND   SETC  '1(&B'.')'\n         AIF  ('&FAILX' EQ '').FAILDUN\n&NOFND   SETC  '&FAILX'\n.FAILDUN ANOP\n.**********************************************************\n         AIF   ('&TAG'   EQ 'NARSCD10').KIND0\n&TAG17   SETC  '&TAG'(1,7)\n&TAG88   SETC  '&TAG'(8,1)\n&TAGA    SETC  '&TAG'\n         AIF   ('&TAG88' EQ '#').KIND1\n         AIF   ('&TAG88' EQ '0').KIND2\n         AGO                    .KIND3    ELSE\n.*      *******\n.KIND0   ANOP\n&KIND    SETA  0\n         AGO   .SPOTJ\n.*      *******\n.KIND1   ANOP\n&KIND    SETA  1\n         AGO   .SPOTJ\n.*      *******\n.KIND3   ANOP\n&TAGB    SETC  '&TAG17'.'0'\n&KIND    SETA  3\n         AGO   .SPOTJ\n.*      *******\n.KIND2   ANOP\n&KIND    SETA  2\n.*    **************\n.SPOTJ   ANOP\n&TAGA    SETC  '&TAG17'.'#'\n.**********************************************************\n&VCON#    SETC  'NARSCD1#'\n&VCON0    SETC  'NARSCD10'\n&VCONID   SETC        '1'\n.CHKKNOW AIF   ('&KNOWN' EQ     'SCD').SCD\n         AIF   ('&KNOWN' EQ  'NARSCD').CHKFIND\n         AIF   ('&KNOWN' EQ     'PST').PST\n.*                               ELSE .VCON\n.*****************************\n.VCON    L     &B,=V(&VCON#)\n         L     &B,0(&B)\n         AGO   .CHKFIND\n.*****************************\n.SCD     ANOP\n         LA    &B,SCDESCDQ-SCD(&B)\nRIF&SYSNDX.S ICM  &B,15,0(&B)\n         BZ    &NOFND\n         CLC   =C'RIS&VCONID',4(&B)\n         BNE   RIF&SYSNDX.S\n         AGO   .CHKFIND\n.*****************************\n.PST     ANOP\n         LA    &B,PSTEPST-PST(&B)\nRIF&SYSNDX.P ICM  &B,15,0(&B)\n         BZ    &NOFND\n         CLC   =C'RIP1',4(&B)\n         BNE   RIF&SYSNDX.P\n         L     &B,NARPRS10-NARPST#0(&B)\n.***************************************\n.CHKFIND ANOP\n         AIF   (&KIND EQ 0).MEND\n.*       ******\n         AIF   (&KIND NE 1).DO23\n*                            POINTER TO TAG....# RECKONED FROM NARSCD..\n.DO1     LA    &B,&TAGA-&VCON0.(&B)    POINTER TO THE ADDRESS.\n         AGO   .MEND\n.*       ******\n.DO23    ANOP\n*                            POINTER TO TAG....0  LOADED  FROM TAG....#\n         L     &B,&TAGA-&VCON0.(&B)    POINTER TO THE SUB-AREA.\n         AIF   (&KIND NE 3).MEND\n.*       ******\n.DO3     ANOP\n*                            POINTER TO TAG....X RECKONED FROM TAG....0\n         LA    &B,&TAG-&TAGB.(&B)      POINTER TO THE SUB-AREA'S FIELD.\n.***************************************\n.MEND    ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NARSCD00": {"ttr": 5644, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x000\\x000\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 48, "newlines": 48, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31SC JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//NARSCD00  EXEC IMSUPDTE,MEMBER=NARSCD00,\n//             P=IMA,DISPR=SHR,\n//  LOAD='PVT.MODS',\n//  SYMI=SOURCETM,SYMO=SOURCETM,ACCT=1,SOUT='*'\n//C.SYSIN  DD *\n  TITLE ' THE ORIGINAL MACRO=NARSCD '\n         COPY  NARSCD\n         COPY  NARPST\n         TITLE ' THE REAL    CSECTS=(NARSCDID,NARSCD10) '\n         PUNCH ' REPLACE NARSTEST '\n         PUNCH ' ENTRY   NARSCD00 '\nNARSCDID CSECT\n         DC     0D'0',16C'ROCKWELL '\n         DC     CL16'&SYSDATE-&SYSTIME'\n         PRINT NOGEN\n         REQUATE\n         PRINT   GEN\nNARSECT  NARSCD  SECT=CSECT\nTAILBACK DC     0D'0',CL4'RIS0',A(NARSECT)\n         TITLE ' THE SAMPLE   DSECT=NARSCD '\nQQ       DSECT\nTESTDSEC NARSCD P=Q,PP=N\n         TITLE ' SOME TEST CASES OF VARIOUS EXPANSIONS OF NARSCDF '\nNARSTEST CSECT\n         PROLOGUE\n     NARSCDF R6,NARSCFA#\n         SPACE 3\n     NARSCDF R6,NARSCFA0\n         SPACE 3\n     NARSCDF R6,NARSCFA3\n         SPACE 3\n     NARSCDF R6,NARSCFA#,KNOWN=SCD\n         SPACE 3\n     NARSCDF R6,NARSCFA0,KNOWN=SCD\n         SPACE 3\n     NARSCDF R6,NARSCFA3,KNOWN=PST\n         SPACE 3\n     NARSCDF R6,NARSCD10,KNOWN=SCD\n         SPACE 3\n     NARSCDF R6,NARSTIM0,KNOWN=NARSCD\n         LTORG\n         PRINT NOGEN\n         ISCD  SCDBASE=0\n         IDLI  PSTBASE=0\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NARSEC": {"ttr": 5646, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31MC JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//UPDTE EXEC IMSUPDTE,P=IMA,MEMBER=NARSEC,DISPR=SHR,\n//    SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,\n//    SOUT='*',CONDL=0\n//SYSIN  DD *\n./ ADD NAME=NARSEC\n         MACRO\n         NARSEC &TYPE=,&GROUP=,&DETAIL=\n.*\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NARSEPAR": {"ttr": 5648, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x10\\x00\\x10\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 16, "newlines": 16, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31MR JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L5\n//UPDTE EXEC IMSUPDTE,P=IMA,MEMBER=NARSEPAR,DISPR=SHR,\n//    SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,\n//    SOUT='*',CONDL=0\n//SYSIN  DD *\n./ ADD NAME=NARSEPAR\n         MACRO\n         NARSEPAR\n         GBLC  &NARGBPS\n         AIF   ('&NARGBPS' NE 'DSECT').CSECT\nN##&SYSNDX DSECT\n         AGO   .MEND\n.CSECT   DC    0D'0'\n.MEND    MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NARSTAE0": {"ttr": 5650, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x01\\xd9\\x01\\xd9\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 473, "newlines": 473, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31SE JOB 'HOSKINS   SH28205610*110A044         015  1000007   ', *\n// MSGLEVEL=1,MSGCLASS=H,TIME=3,REGION=999K,NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//NARSTAE0 EXEC  IMSUPDTE,SMEMBER=NARSTAE0,\n//     LMEMBER=NARSTAE0,\n//*CONDL=0,\n// LOAD='PVT.MODS',\n// DECK='NODECK,SYSPARM(S)',\n// PRELIB='SYS1.MACLIB',\n//             P=IMA,SYMI=SOURCETM,SYMO=SOURCETM,RECORD=NO,DISPR=SHR,\n// SOUT='*'\n//*.RECORD DD DSN=IMS.EMTLIB\n//*.SYSINR DD DSN=IMS.EMTLIB\n//C.SYSIN  DD  *\n         TITLE 'NARSTAE0    ---   MACROS.'\n         MACRO\n&NAME    SNAP1LST &N1,&N2,&VERBAGE,&MODE=,&ORG=\n         GBLC  &VERBNAM(20),&VERBTXT(20)\n         GBLA  &I\n         LCLA  &L,&J\n         AIF   ('&MODE' EQ 'MESSAGES').DOMSGS\n.*************************************************************\n         AIF   ('&VERBAGE'(1,1) EQ '').OVVERB\n.*    *********************\n&L       SETA  K'&VERBAGE-2         -2 FOR QUOTES.\n&I       SETA  &I+1\n&VERBNAM(&I) SETC 'SPL&SYSNDX.A'\n&VERBTXT(&I) SETC '&VERBAGE'\n         DC    A(SPL&SYSNDX.A)\n         DC    A(SPL&SYSNDX.A+&L-1)\n.OVVERB  ANOP\n.***********************************************\n         AIF   ('&MODE' EQ 'ADCONS').ADCONS\n         AIF   ('&N1'(1,1) EQ '0').OVDCANM\n.*    *********************\n&N1      DC    A(SPL0000Y)\n&N2      DC    A(SPL0000Z-1)\n         AGO  .OVDCANM\n.*    *********************\n.ADCONS  DC    A(&N1,&N2)\n.OVDCANM ANOP\n.**************************\n         AIF   ('&MODE' NE 'ENDLIST').OVEND\n         ORG   *-4\n         DC    X'80'\n         ORG\n.OVEND   ANOP\n         MEXIT\n.**************************************************************\n.DOMSGS  ANOP\n         AIF   ('&ORG' EQ '').OVADJ\n         CNOPBIGR ORG=&ORG\n.OVADJ   ANOP\n.*******************************\n.LOPMSG  ANOP\n&J       SETA  &J+1\n         AIF   (&J GT &I).DUNMSG\n&VERBNAM(&J) DC   0D'0',CL32&VERBTXT(&J)\n         AGO   .LOPMSG\n.DUNMSG  ANOP\nSPL0000Y DC    0D'0',CL32'NOT AVAILABLE IN THIS DUMP.'\nSPL0000Z EQU   *\n         MEND\n****************************************************************\n         TITLE 'NARSTAE0    ---   INITIALIZATION.'\n****************************************************************\n         LCLC  &DDN\n&DDN     SETC  'SYSUSNAP'\nNARSTAE0 CSECT\nORG      EQU   *\n         PROLOGUE SAVE=INLINE,DATE=&SYSDATE-&SYSTIME\n         PRINT NOGEN\n         REQUATE\n         CEQUATE\nB#P      EQU   R2                  PXPARMS\nB#N      EQU   R3                  NARSTAE\nB#S      EQU   R10                 SDWA\nR#W      EQU   R15                 A WORK REG\n         PRINT GEN\n         LR    B#S,R5              COPY FROM PCC20\n         USING SDWA,B#S            PER    DFSPCC20\n         USING PXPARMS,B#P         SET IN DFSPCC20\n         CLI   PXXCTLNM+4,C'*'\n         BNE   EPIL               QUIT RAT NOW.\n         L     R15,PXXCTLNM\n         USING     NARPRM00,R15\n         L     R15,NARPCC2P\n         USING     NARPCC2D,R15\n         DROP  R15\n**************************************************************\n* ACQUIRE  S.D.W.A.  AND MASSAGE  PARTS OF IT FOR SNAP AND TITLES.\n         MVC   RAPART2,SDWAGRSV    R0---R15   @ TIME OF ABEND.\n*                                    + PROG-NAME & EP.\n         MVC   RAPART1,SDWAPARM    OTHER DATA.\n******************************\n         UNPK  CCBCD(3),RACC+1(2)\n         NC    CCBCD(3),=8X'0F'\n         TR    CCBCD(3),=C'0123456789ABCDEF'\n         L     R0,RACC\n         N     R0,=A(4095)\n         CVD   R0,DBL\n         UNPK  CCBCD+4(4),DBL\n         OI    CCBCD+7,X'F0'\n********************\n         CLC   =H'0001',RAABPSW+2  Q. WERE WE IN WAIT.\n         BE    OVCCAND               YES, DONT MESS WITH THE CC.\n         MVC   CCAND,=A(X'FFFFFF')\nOVCCAND  EQU   *\n         MVC   CCOR,=A(0)\n********************\n         MVC   PGM,RCPGM           MOVE NAME OF SCHEDULED PROGRAM.\n         CLI   PGM,X'00'           Q. IS IT ZEROES.\n         BE    STAENAME              YES, USE OTHER-ONE.\n         CLI   PGM,C' '            Q. IS IT BLANK.\n         BNE   GOTPGMNM              NO,  USE IT.\nSTAENAME MVC   PGM,PGMNAME           YES, USE THE ONE FROM STAE'S WKAR.\nGOTPGMNM EQU   *\n         TM    CC,X'01'       Q. IS BIT SET FOR NO SNAPS.\n         BO    OVSNAPS          YES, SKIP.\n***********************************************************\n         TITLE 'NARSTAE0    ---   MODULE LOADING AS REQUIRED.'\n***********************************************************\n* FIND  OR LOAD THE  DUMP ROUTING DESTINATION MODULE AND CALL IT.\n         L     R15,PXXCTLNM\n         USING NARPRM00,R15\n         L     B#N,NARPSTAE\n         DROP  R15\n         USING NARPSUAE,B#N\n         LOAD  EP=IMSROUTE\n         ST    R0,NARPSROT\n         LR    R15,R0\n         LA    R1,PGM\n         BALR  R14,R15\n         USING MSGDS,R1\n         MVC   DEST,DESTI\n         MVC   MSO,MSI\n         DROP  R1\n***********************************************************\n   SPACE  3\n***********************************************************\n* FIND  OR LOAD THE  BIG PRINT MODULE AND CALL IT.\n         LOAD  EP=LTRBLOCK\n         ST    R0,NARPSLTR\n         LR    R15,R0\n         LA    R1,LTRPARMS\n         BALR  R14,R15\n***********************************************************\n         TITLE 'NARSTAE0    ---   TCB LIST DETERMINATION.'\n***********************************************************\n         L     R1,16               CVT.\n         L     R1,0(R1)            DBL WRD.\n         L     R1,0(R1)            CURR TCB.\n         LA    R1,0(R1)            ONLY THE ADDR.\n         ST    R1,TCBCURR          SAVE CURR TCB ADDR.\n         L     R1,124(R1)          JOBSTEP TCB.\n         LA    R#W,TCBLIST         TOP OF LIST.\n         LA    R0,TCBLISTZ         END OF LIST.\n         B     LOOPTCBC            START IN THE MIDDLE OF THE LOOP.\n***********************\nLOOPTCB  LA    R#W,4(R#W)          BUMP.\n         CR    R#W,R0              Q. ANY SPACE LEFT.\n         BC    GE,DUNTCB             NO, QUIT.\nLOOPTCBB L     R1,136(R1)          N-TH SUBTASK.\n         LA    R1,0(R1)            ONLY THE ADDR.\nLOOPTCBC LTR   R1,R1               Q. IS THIS A TCB.\n         BZ    DUNTCB                NO, DONE.\n         C     R1,TCBCURR          Q. IS THIS MY ORIG TASK.\n         BNE   STOTCB                NO,  STO AS NEXT IN LIST.\n         O     R1,=XL4'80000000'     YES, FLAG IT AS SUCH.\nSTOTCB   ST    R1,0(R#W)           STO TCB PTR.\n         B     LOOPTCB\nDUNTCB   XC    0(4,R#W),0(R#W)     CLEAR ENTRY AFTER LAST.\n***********************************************************\n         TITLE 'NARSTAE0    ---   STORAGE LIST FILL-IN''S.'\n***********************************************************\n*  FIND PST.\n         L     R1,RCPST\n         LA    R1,0(R1)\n         LTR   R1,R1\n         BZ    OVBUF\n         ST    R1,PSTADD\n         USING PST,R1\n         LA    R4,PSTLEN-1(,R1)\n         ST    R4,PSTEADD\n****************************\n*  FIND PSB.\n         L     R4,PSTPSB\n         USING PDIR,R4\n         L     R4,PDIRADDR\n         USING PSB,R4\n         LA    R4,0(,R4)\n         ST    R4,PSBADD\n         AH    R4,PSBSIZE\n         SH    R4,=H'1'\n         ST    R4,PSBEADD   IN CASE NO DB PCB'S\n         L     R4,PSBADD\n         CLC   PSBDBOFF,=XL2'FFFF'\n         B     OVBUF                        *&\u00eb%\n         BNE   GOTPCB\n         B     OVBUF\nGOTPCB   LA    R5,PSBLIST\n         AH    R5,PSBDBOFF\n         S     R5,=F'4'\nNEXTPCB  LA    R5,4(,R5)\n         TM    0(R5),X'80'\n         BNO   NEXTPCB\n         L     R4,0(,R5)\n         USING DBPCB,R4\n         USING JCB,R5\n         L     R5,DBPCBJCB\n         L     R6,JCBSDBND\n         SH    R6,=H'1'\n         ST    R6,PSBEADD\n****************************\n*  NOW FIND DMB\n         L     R4,PSTDBPCB\n         L     R5,DBPCBJCB\n         L     R4,JCBSDB1\n         USING SDB,R4\n         L     R4,SDBDDIR\n         USING DDIR,R4\n         L     R4,DDIRADDR\n         USING DMB,R4\n         LA    R4,0(,R4)\n         ST    R4,DMBADD\n         A     R4,DMBSIZE\n         SH    R4,=H'1'\n         ST    R4,DMBEADD\n         L     R4,PSTBUFFA\n         LA    R4,0(,R4)\n         LTR   R4,R4\n*****   HUGH UN-DID SOME   WORK HERE AND AT 02390005 DUE TO NO MACRO.\n*#,$.@%  BNZ   GOTBUF\n         B     OVBUF\n****************************\n*#,$.@%  USING BFFRDS,R4\nGOTBUF   ST    R4,BUFFADD\n*#,$.@%  A     R4,BFFRSZE\n         SH    R4,=H'1'\n         ST    R4,BUFFEADD\nOVBUF    EQU   *\n****************************\n         DROP  R4\n         DROP  R1\n***********************************************************\n         TITLE 'NARSTAE0   ---  TAKE THE NEEDED SNAPS.'\n***********************************************************\n         OPEN  (SYSOUT,(OUTPUT))\n****************************\n* SNAP THE CURRENT TCB AND CONTROL BLOCKS. (ONE WAY OR ANOTHER)\n         B     SNAP12\nSNAP11   SNAP  DCB=SYSOUT,SDATA=(LSQA,SWA,CB,Q),PDATA=ALL,             *\n               LIST=SNAPLST0\n         B     SNAP19\n*     *************\nSNAP12   SNAP  DCB=SYSOUT,SDATA=(CB,Q),                                *\n               LIST=SNAPLST0,PDATA=(PSW,REGS,SA,JPA,SPLS)\nSNAP19   #\n****************************\n* SNAP THE OTHER   TCB'S.                  (ONE WAY OR ANOTHER)\n         LA    R4,TCBLIST          GET PTR TO LIST OF TCB'S.\n         S     R4,=A(4)            PRE-DECREMENT.\nNEXTTCB  LA    R4,4(R4)            BUMP.\n         L     R15,0(R4)           GET PTR TO         TCB.\n         LTR   R15,R15             Q. DONE, SKIP, OR USE.\n         BZ    DUNTCBS                DONE.\n         BM    NEXTTCB                      SKIP.\n************************\n         B     SNAP22\nSNAP21   SNAP  DCB=SYSOUT,SDATA=(SWA,CB,Q),PDATA=ALL,ID=3,TCB=(15)\n         B     SNAP29\n*     *************\nSNAP22   SNAP  DCB=SYSOUT,SDATA=(CB,Q),ID=3,TCB=(15),                  *\n               PDATA=(PSW,REGS,SA,JPA,SPLS)\nSNAP29   #\n         ST    R15,SNAPRC15        SAVE RETURN CODE.\n         LTR   R15,R15             Q. RC=0.\n         BZ    NEXTTCB               YES, LOOP FOR NEXT.\n*                                    NO; QUIT THE TCB'S.\nDUNTCBS  EQU   *\n***********************************************************\n         TITLE 'NARSTAE0   ---  RIG FOR CORRECT SPINNING.'\n***********************************************************\n* AT -8 DICK KEPT PTR-> 18F'0',A(LTRBLOCK,STAEXIT,STAEXITA,IMSROUTE)\n* AT -4 DICK KEPT F'2' FOR DOING THIS FOR TWO DATASETS.\n* NOW NOTHING IS AT SPINDATA-NEGOFFSET.\n*\n* THIS LOGIC SETS-UP A SORTA APE OF THE SPIN TEXT-UNIT PTRS IN THE\n*  NARPARMS STAE WORKAREA WITH THE ADDITION OF DESTINATION TEXT UNIT\n*  AND A SPARE/RVSD/FUTURE TU. THEN THE PTRS TO THE FIRST 2 IBM TEXT\n*  UNITS ARE COPIED TO OUR AREA AND THEIR TU-LIST-PTR CHANGED TO\n*  POINT TO OUR LIST (THE FIRST TWO ENTRIES IN WHICH POINT BACK TO\n*  THEIR TU'S).\n         L     R6,RCSPNDAT      PTR TO SPIN DATA\n         LA    R6,0(,R6)        CLEAR HIGH ORDER\n         LTR   R6,R6            ANY SPIN DATA?\n         BZ    OVSNAPS          NO\n         USING SPINDATA,R6\n         MVC   NARTUNP3,=CL6'LOCAL'   JUST IN CASE...\n         CLC   SPNTUNP1,=CL8'SYSUDUMP'\n         BE    FOUNDDD\n         CLC   SPNTUNP1,=CL8'&DDN'\n         BE    FOUNDDD\n         B     OVSNAPS          NO GOOD  DD IN SPIN LIST\nFOUNDDD  #\n         MVC   SPNTUNP1,=CL8'&DDN'           SET   1-ST TXT UNIT=DDN.\n         MVC   NARTUPL1+1(3),SPNTUPL1+1      COPY  1-ST TXT PTR=DDNAME.\n*        ***\n         MVC   NARTUPL2+1(3),SPNTUPL2+1      COPY  2-ND TXT PTR=CLASS.\n*        ***\n         MVC   NARTUNP3,DEST                 SET   3-RD TXT UNIT=DEST.\n         MVC   NARPSPIN(NARTULTH),NARTUP00   COPY PTRS + OUR TXTUNITS.\n*     *********\n         LA       R#W,NARTUN3-NARTUP00+NARPSPIN\n         STCM  R#W,7,NARTUPL3-NARTUP00+NARPSPIN+1\n*        ***\n         LA    R#W,NARPSPIN\n         ST    R#W,SPNTXTPP\n*    *****************\nOVSNAPS  EQU   *\n         CLOSE (SYSOUT)\n******************************\nEPIL     EPILOGUE RC=0\n***********************************************************\n         TITLE 'NARSTAE0   ---  CONSTANTS.'\n***********************************************************\n         DC   2C'RRRR'\nAREAR    DC    104X'00'\nAREARZ1  EQU   *\n         ORG   AREAR\nRAPARMPT DC    A(0)\nRACC     DC    A(0)\nRAABPSW  DC   2A(0)\nRAPPPSW  DC   2A(0)\nRAPART1  EQU   RAPARMPT,*-RAPARMPT\nRAR0     DC  16A(0)\nRAPGMNAM DC    CL8' '\nRAPGMEP  DC    A(0)\nRAWORD26 DC    A(0)\nRAPART2  EQU   RAR0,*-RAR0\nAREARZ2  EQU   *\n         ORG\nAREARZ3  EQU   *\nCC       EQU   RACC\nPGMNAME  EQU   RAPGMNAM\n*        ***********\n         DC   2C'QQQQ'\nAREAQ    DC    012X'00'\nAREAQZ1  EQU   *\n         ORG   AREAQ\nQS15     DC    A(0)\nQS00     DC    A(0)\nQS01     DC    A(0)\nAREAQZ2  EQU   *\n         ORG\nAREAQZ3  EQU   *\n******************************\n         DC    D'0'\nDBL      DC   2D'0'\nSNAPRC15 DC    A(0)\nCCOR     DC    A(0)\nCCAND    DC    F'-1'\n*****************\nLTRPARMS DC   A(LIST)\n         DC   A(DDNAME)\n*       ****\nLIST     DC    CL4'*LOC'\n         DC    A(MSG)\n         DC    CL8'*JOBNAME'\nPGM      DC    CL8'IMSTESTR'\nCCBCD    DC    CL8'0C5,4095'\n         DC    A(0)\n*       ****\nDDNAME   DC    CL8'&DDN'\n*       ****\nMSG      DC    AL2(MSE-MSG)\n         DC    XL2'0000'\n         DC    CL1'2'\nMSO      DC    CL40' THIS WILL BE THE DEST MSG.'\nMSE      EQU   *\n********************\nTCBCURR  DC     A(0)\nTCBLIST  DC    6A(0)\nTCBLISTZ DC     A(0)\nSNAPLST0 DC    0D'0'\n  SNAP1LST RAPARMPT,RAPPPSW+8-1,'PSW AT TIME OF ABEND',MODE=ADCONS\n  SNAP1LST RAR0,RAR0+16*4-1,'THE 16 GPRS AT TIME OF ABEND',MODE=ADCONS\n  SNAP1LST TCBLIST,TCBLISTZ-1,'THE TCB STRING',MODE=ADCONS\n  SNAP1LST SNAPLST0,SNAPLSTZ-1,'THE SNAP MACRO LIST',MODE=ADCONS\n  SNAP1LST PSTADD,PSTEADD,'PST AREA FOLLOWS'\n  SNAP1LST PSBADD,PSBEADD,'PSB AREA FOLLOWS'\n  SNAP1LST DMBADD,DMBEADD,'DMB AREA FOLLOWS'\n  SNAP1LST BUFFADD,BUFFEADD,'DB BUFFER AREA FOLLOWS'\n  SNAP1LST 0,0,'END OF DUMPED STORAGE AREAS',MODE=ENDLIST\n         DC    A(0),X'80',AL3(0)\nSNAPLSTZ EQU   *\n         SNAP1LST MODE=MESSAGES,ORG=ORG\n****************************************\n         PRINT NOGEN\nSYSOUT   DCB   DDNAME=&DDN,DSORG=PS,RECFM=VBA,MACRF=W,EXLST=EXLST,     *\n               BUFNO=0, SNAP USES HIS OWN; DONT LET OPEN GET ANY.      *\n               LRECL=125,BLKSIZE=882\nEXLST    DC    0A(0),XL1'87',AL3(JFCB)\nJFCB     DC    CL176' '\n         PRINT   GEN\n****************************************\nDEST     DC    CL6'LOCAL '\n***********************************************************\n         TITLE 'NARSTAE0   ---  CONSTANTS FOR DYNALLOC SPIN.'\n***********************************************************\nNARTUP00 DC   0A(0)\nNARTUPL1 DC    A(NARTUN1) ENTRY FOR TEXT UNIT 1            DDNAME\nNARTUPL2 DC    X'00',AL3(NARTUN2) ENTRY FOR TEXT UNIT 2    CLASS\nNARTUPL3 DC    X'80',AL3(NARTUN3) ENTRY FOR TEXT UNIT 3    DEST\nNARTUPL4 DC    X'80',AL3(NARTUN4) ENTRY FOR TEXT UNIT 4   *FUTURE*\n****************************\nNARTUN1  DS    0H  TEXT UNIT 1: DDNAME\nNARTUNK1 DS    AL2(1)  KEY: DDNAME\nNARTUNN1 DC    AL2(1)  NUMBER OF PARMS\nNARTUNL1 DC    AL2(8)  LENGTH OF 1ST PARM\nNARTUNP1 DC    CL8'XXXUDUMP' PARM: DDNAME\nNARTUN1L EQU   *-NARTUN1 LENGTH OF TEXT UNIT 1\n*********************\nNARTUN2  DS    0F  TEXT UNIT 2: SYSOUT CLASS/REALLY UNALLOCATE\nNARTUNK2 DC    XL2'18' KEY: SYSOUT CLASS/REALLY UNALLOCATE\n*&\u00eb*&ALO EQU   X'07'   KEY: REALLY UNALLOCATE\n*&\u00eb*&SOU EQU   X'18'   KEY: SYSOUT CLASS\nNARTUNN2 DC    AL2(1)  NUMBER OF PARMS: 1 FOR SYSOUT CLASS\n*                      NUMBER OF PARMS: 0 FOR REALLY UNALLOCATE\nNARTUNL2 DC    AL2(1)  LENGTH OF THIS PARM\nNARTUNP2 DC    CL1'A'  PARM=SYSOUT CLASS 'A'\nNARTUN2L EQU   *-NARTUN2  LENGTH OF TEXT UNIT 2\n*********************\nNARTUN3  DS    0F  TEXT UNIT 3: OPTIONAL DESTINATION\nNARTUNK3 DC    XL2'58' KEY: WORK STATION ROUTING\nNARTUNN3 DC    AL2(1)  NUMBER OF PARMS: 1 FOR ROUTING\nNARTUNL3 DC    AL2(6)  LENGTH OF THIS PARM\nNARTUNP3 DC    CL6'LOCAL'  DESTINATION\nNARTUN3L EQU   *-NARTUN3  LENGTH OF TEXT UNIT 3\n*********************\nNARTUN4  DS    0F  TEXT UNIT 4: OPTIONAL DESTINATION\nNARTUNK4 DC    XL2'58' KEY: WORK STATION ROUTING\nNARTUNN4 DC    AL2(1)  NUMBER OF PARMS: 1 FOR ROUTING\nNARTUNL4 DC    AL2(6)  LENGTH OF THIS PARM\nNARTUNP4 DC    CL6'LOCAL'  DESTINATION\nNARTUN4L EQU   *-NARTUN4  LENGTH OF TEXT UNIT 4\n*\n*&\u00eb*&SAV DS    F       REG 15 AFTER SVC 99\nNARTULTH EQU   *-NARTUP00          SPIN DATA AREA LENGTH\n         LTORG\n         CNOPBIGR ORG=ORG\n***********************************************************\n         TITLE 'NARSTAE0   ---  DSECTS.'\n***********************************************************\nMSGDS    DSECT\nDESTI    DS    CL6\nMSI      DS    CL40\n         NARPRM\n         NARCPY\n         ZNOGEN\n         IDLI  PSTBASE=0\n         IDLI  PSBBASE=0\n         IDLI  DMBBASE=0\n         IDLI  PDRBASE=0\n         IDLI  JCBBASE=0\n         IDLI  DDRBASE=0\n         IDLI  DPCBASE=0\n         IDLI  SDBBASE=0\n*#,$<@%  BFFRDS\n         PARMBLK DSECT\n         IHASDWA\n         COPY SPINDATA\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRSCEXIT": {"ttr": 5896, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x01\\x1d\\x01\\x1d\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 285, "newlines": 285, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31IR JOB 'IMSGROUP  SH28205610*110A044         999  3000009037',\n//  NOTIFY=$A1016,\n//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H\n//*MAIN ORG=LOCAL,CLASS=L\n//PRSCEXIT EXEC IMSUPDTE,DISPR=SHR,\n//  MEMBER=PRSCEXIT,\n//             P=IMS,LOAD=TEST,\n// AUXLIB='IMS.VBNB260.TARGET.SAMPLIB',\n//* CONDL=0,\n//* XREFC='XREF(FULL)',\n//  SOUT='*'\n//C.SYSIN  DD *    SEE IMS.VBNB260.TARGET.SAMPLIB(PRSCEXIT)\n         TITLE 'PRSCEXIT .DEFAULT ASSEMBLER EXIT ROUTINE TO IRUF DATA'\nPRSCEXIT CSECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*  PRSCEXIT - DEFAULT ASSEMBLER EXIT ROUTINE TO IRUF DATA             *\n*          ======>>         I M F             <<======                *\n*                                                                     *\n******* I M P O R T A N T *********************************************\n*                                                                     *\n*  THIS IS A REWRITE OF THE OLD PRSCEXIT (COBOL) ROUTINE USING        *\n*  ASSEMBLER TO IMPROVE IMFLEDIT PERFORMANCE.  IF CUSTOMERS DECIDE    *\n*  TO WRITE THEIR OWN EXIT,  WE STRONG RECOMMEND CUSTOMERS TO WRITE   *\n*  THE EXIT USING ASSEMBLER AND USE THIS EXIT AS SAMPLE.              *\n*  CUSTOMERS DO NOT NEED TO ASSEMBLE AND LINK-EDIT THIS MODULE IF     *\n*  CUSTOMERS DECIDE TO USE THE DEFAULT EXIT ROUTINE.                  *\n*                                                                     *\n*---------------------------------------------------------------------*\n*                                                                     *\n*   MODULE NAME:  PRSCEXIT                                            *\n*                                                                     *\n*   TITLE:   EXIT ROUTINE TO IRUF DATA                                *\n*            -----EXECUTES IN BATCH                                   *\n*                                                                     *\n*                                                                     *\n*   ENTRY POINTS:                                                     *\n*         CEXITEP1 - INITIALZATION ENTRY POINT (NO PARAMETERS)        *\n*         CEXITEOF - ENTRY POINT FOR EXIT TERMINATION                 *\n*         CEXITTER - ENTRY POINT FOR TERMINAL ACCOUNTING RECORD       *\n*                    PROCESSING.  R1 POINTS TO POINTER TO THE RECORD. *\n*         CEXITPSB - ENTRY POINT FOR PROGRAM ACCOUNTING RECORD        *\n*                    PROCESSING.  R1 POINTS TO POINTER TO THE RECORD. *\n*         CEXITTRN - ENTRY POINT FOR TRANSACTION ACCOUNTING RECORD    *\n*                    PROCESSING.  R1 POINTS TO POINTER TO THE RECORD. *\n*   FUNCTION:                                                         *\n*                THE PURPOSE OF THIS SUB-ROUTINE IS TO PROVIDE THE    *\n*                USER WITH A DEFAULT EXIT ROUTINE TO ESTABLISH THE    *\n*                CUSTOMER IDENTIFICATION IN THE IMS RESOURCE UTILI-   *\n*                ZATION FILE.  THE USER IS ABLE TO ENTER THEIR OWN    *\n*                CUSTOMER FIELD (UP TO 18 CHARACTERS IN LENGTH AND    *\n*                HAVING UP TO FIVE CONTROL FIELDS).                   *\n*                                                                     *\n*                THIS ROUTINE ESTABLISHES ONE FIELD (LOGICAL          *\n*                TERMINAL NAME) AS THE CUSTOMER FIELD.  FURTHERMORE   *\n*                FOR BMP TRANSACTIONS NOT ASSOCIATED TO A TRANSACTION *\n*                CODE, THE PROGRAM NAME WILL BE MOVED TO THE          *\n*                TRANSACTION CODE.                                    *\n*                                                                     *\n*                                                                     *\n*   REGISTERS AT ENTRY:                                               *\n*            R1  - PARM LIST\n*            R13 - SAVE AREA ADDRESS                                  *\n*            R15 - ENTRY POINT ADDRESS                                *\n*                                                                     *\n*   REGISTERS AT EXIT:                                                *\n*            ALL REGISTERS RESTORED EXCEPT R15                        *\n*            R15 - RETURN CODE                                        *\n*                  00  ... ONLY 0 IS VALID                            *\n*                                                                     *\n*   MODULE CALLED BY:                                                 *\n*            PR3TAR                                              IMF21*\n*            PR3PAR\n*            PR3LAR\n*                                                                     *\n*   EXTERNAL ROUTINES CALLED:                                         *\n*            NONE                                                     *\n*                                                                     *\n*   MESSAGES:                                                         *\n*            NONE                                                     *\n*                                                                     *\n*   ABENDS:                                                           *\n*            NONE                                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         EJECT\n         REQUATE\n*---------------------------------------------------------------------*\n*                                                                     *\n*        ENTRY POINT. THIS ENTRY IS CALLED ONLY ONCE.            *\n*                                                                     *\n*---------------------------------------------------------------------*\n*\n         ENTRY CEXITEP1\nCEXITEP1 DS    0H\n         DROP  ,                   DROP ALL BASE REGS\n         USING CEXITEP1,R12\n         B     20(0,R15)           BRANCH OVER NAME AND DATE\n         DC    CL8'CEXITEP1'       MODULE NAME\n         DC    CL8'&SYSDATE'       CURRENT DATE\n         STM   R14,R12,12(R13)     SAVE REGISTERS IN OLD SAVE AREA\n         LR    R12,R15             ESTABLISH A BASE REGISTER\n         LA    R14,SAVEAREA        R14 -> NEW SAVE AREA\n         ST    R14,8(,R13)         KEEP A(NEW SA) IN OLD SA.\n         ST    R13,4(,R14)         KEEP A(OLD SA) IN NEW SA.\n         LR    R13,R14             R13 -> NEW SAVE AREA\n*\n*\n         B     RETURN\n         EJECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*        CEXITEOF.  CALLED WHEN EOF OF IRUF\n*                                                                     *\n*---------------------------------------------------------------------*\n*\n         ENTRY CEXITEOF\nCEXITEOF DS    0H\n         DROP  ,                   DROP ALL BASE REGS\n         USING CEXITEOF,R12\n         B     20(0,R15)           BRANCH OVER NAME AND DATE\n         DC    CL8'CEXITEOF'       MODULE NAME\n         DC    CL8'&SYSDATE'       CURRENT DATE\n         STM   R14,R12,12(R13)     SAVE REGISTERS IN OLD SAVE AREA\n         LR    R12,R15             ESTABLISH A BASE REGISTER\n         LA    R14,SAVEAREA        R14 -> NEW SAVE AREA\n         ST    R14,8(,R13)         KEEP A(NEW SA) IN OLD SA.\n         ST    R13,4(,R14)         KEEP A(OLD SA) IN NEW SA.\n         LR    R13,R14             R13 -> NEW SAVE AREA\n*\n         B     RETURN\n*\n         EJECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*        CEXITTER.  CALLED FOR EVERY TERMINAL ACCOUNTING RECORD.      *\n*        R1 POINTS TO POINTER TO THE RECORD AND THE NEGATE-RECORD-SW  *\n*                                                                     *\n*---------------------------------------------------------------------*\n         ENTRY CEXITTER\nCEXITTER DS    0H\n         USING CEXITTER,R12\n         B     20(0,R15)           BRANCH OVER NAME AND DATE\n         DC    CL8'CEXITTER'       MODULE NAME\n         DC    CL8'&SYSDATE'       CURRENT DATE\n         STM   R14,R12,12(R13)     SAVE REGISTERS IN OLD SAVE AREA\n         LR    R12,R15             ESTABLISH A BASE REGISTER\n         LA    R14,SAVEAREA        R14 -> NEW SAVE AREA\n         ST    R14,8(,R13)         KEEP A(NEW SA) IN OLD SA.\n         ST    R13,4(,R14)         KEEP A(OLD SA) IN NEW SA.\n         LR    R13,R14             R13 -> NEW SAVE AREA\n*\n*\n         L     R4,0(R1)            LOAD THE POINTER TO THE RECORD\n         L     R5,4(R1)          LOAD THE POINTER TO NEGATE-RECORD-SW\n         USING TLTERM,R4         SET ADDRESSABILITY FOR RECORD\n         USING TLRECID,R4  *** CORRECTION OF ABOVE ERROR *** HH 5/29/91\n         MVC   TLCUST(8),TLLTERM   SET CUSTOMER ID TO LTERM\n         NI    TLCUST,X'BF'        SET CUSTOMER ID TO LOWERCASE HH 5/29\n         MVI   0(R5),C'0'         MOVE 0 TO NEGATE-RECORD-SW\n*                               MOVE 1 IF THIS RECORD IS NOT BE WRITTEN\n         B     RETURN\n*\n         EJECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*        CEXITPSB.  CALLED FOR EVERY PROGRAM  ACCOUNTING RECORD.      *\n*        R1 POINTS TO POINTER TO THE RECORD AND THE NEGATE-RECORD-SW  *\n*                                                                     *\n*---------------------------------------------------------------------*\n         ENTRY CEXITPSB\nCEXITPSB DS    0H\n         USING CEXITPSB,R12\n         B     20(0,R15)           BRANCH OVER NAME AND DATE\n         DC    CL8'CEXITPSB'       MODULE NAME\n         DC    CL8'&SYSDATE'       CURRENT DATE\n         STM   R14,R12,12(R13)     SAVE REGISTERS IN OLD SAVE AREA\n         LR    R12,R15             ESTABLISH A BASE REGISTER\n         LA    R14,SAVEAREA        R14 -> NEW SAVE AREA\n         ST    R14,8(,R13)         KEEP A(NEW SA) IN OLD SA.\n         ST    R13,4(,R14)         KEEP A(OLD SA) IN NEW SA.\n         LR    R13,R14             R13 -> NEW SAVE AREA\n*\n*\n         L     R4,0(R1)            LOAD THE POINTER TO THE RECORD\n         S     R4,=F'4'          GO BACK 4 FOR LLZZ\n         L     R5,4(R1)          LOAD THE POINTER TO NEGATE-RECORD-SW\n         USING PAPSB,R4         SET ADDRESSABILITY FOR RECORD\n         MVI   0(R5),C'0'         MOVE 0 TO NEGATE-RECORD-SW\n*                               MOVE 1 IF THIS RECORD IS NOT BE WRITTEN\n*\n         B     RETURN\n*\n         EJECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*        CEXITTRN.  CALLED FOR EVERY TRANSACTION ACCOUNTING RECORD.   *\n*        R1 POINTS TO POINTER TO THE RECORD AND THE NEGATE-RECORD-SW  *\n*                                                                     *\n*---------------------------------------------------------------------*\n         ENTRY CEXITTRN\nCEXITTRN DS    0H\n         USING CEXITTRN,R12\n         B     20(0,R15)           BRANCH OVER NAME AND DATE\n         DC    CL8'CEXITTRN'       MODULE NAME\n         DC    CL8'&SYSDATE'       CURRENT DATE\n         STM   R14,R12,12(R13)     SAVE REGISTERS IN OLD SAVE AREA\n         LR    R12,R15             ESTABLISH A BASE REGISTER\n         LA    R14,SAVEAREA        R14 -> NEW SAVE AREA\n         ST    R14,8(,R13)         KEEP A(NEW SA) IN OLD SA.\n         ST    R13,4(,R14)         KEEP A(OLD SA) IN NEW SA.\n         LR    R13,R14             R13 -> NEW SAVE AREA\n*\n*\n         L     R4,0(R1)            LOAD THE POINTER TO THE RECORD\n         S     R4,=F'4'          GO BACK 4 FOR LLZZ\n         L     R5,4(R1)          LOAD THE POINTER TO NEGATE-RECORD-SW\n         USING TATRANS,R4       SET ADDRESSABILITY FOR RECORD\n*\n         ZAP   TADTRCAT(2),=PL2'999'\n*      CHECK IF TRAN-INPUT-CLASS IS COMPOSED OF NUMERIC DIGIT\n         CLI   TACLASS,C'0'      CLASS - FIRST DIGIT\n         BL    PUT999               IF < 0,  NO GOOD\n         CLI   TACLASS,C'9'      CLASS- FIRST DIGIT\n         BH    PUT999               IF > 9,  NO GOOD\n         CLI   TACLASS+1,C'0'      CLASS - SECOND DIGIT\n         BL    PUT999               IF < 0,  NO GOOD\n         CLI   TACLASS+1,C'9'      CLASS- SECOND DIGIT\n         BH    PUT999               IF > 9,  NO GOOD\n         CLI   TACLASS+2,C'0'      CLASS - THIRD DIGIT\n         BL    PUT999               IF < 0,  NO GOOD\n         CLI   TACLASS+2,C'9'      CLASS- THIRD DIGIT\n         BH    PUT999               IF > 9,  NO GOOD\n*                     OK,  WE CAN PACK NOW\n         PACK  TADTRCAT(2),TACLASS(3)\nPUT999   DS    0H\n         CLI   TATRANT,TATRABMP    IS A BMP?\n         BE    CHECKTRN            YES,  CHECK TRAN NAME\n         CLI   TATRANT,TANDP       IS A FP-NDP?\n         BE    CHECKTRN            YES,  CHECK TRAN NAME\n         CLI   TATRANT,TAFPU       IS A FP-FPU?\n         BE    CHECKTRN            YES,  CHECK TRAN NAME\n         B     SKIPTRNN            NOT BMP,NDP,FPU, SKIP CHECK\nCHECKTRN DS    0H\n         CLC   TATRAN,=CL8' '       IS TRAN NAME BLANKS?\n         BE    MOVETRNN            YES, MOVE PSB NAME OVER\n         CLC   TATRAN,=8X'00'      IS TRAN NAME ALL HEX ZERO?\n         BE    MOVETRNN            YES, MOVE PSB NAME OVER\n         B     SKIPTRNN\nMOVETRNN DS    0H\n         MVC   TATRAN,TAPSBNAM     MOVE PSB NAME OVER TO TRAN NAME\nSKIPTRNN DS    0H\n         MVC   TACUST(8),TALGTRNM  MOVE LTERM NAME TO CUSTID\n         MVC   TACUST(8),TAPSBNAM  MOVE P.S.B.NAME TO CUSTID\n         MVI   0(R5),C'0'         MOVE 0 TO NEGATE-RECORD-SW\n*                               MOVE 1 IF THIS RECORD IS NOT BE WRITTEN\n*\n         B     RETURN\n*\n         EJECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*     RETURN. ALL ENTRIES RETURN THROUGH HERE.                        *\n*                                                                     *\n*---------------------------------------------------------------------*\n*\nRETURN   L      R13,4(,R13)\n         RETURN (14,12),T,RC=0\n*\n         EJECT\n*---------------------------------------------------------------------*\n*          C O N S T A N T S .                                        *\n*---------------------------------------------------------------------*\n*\nSAVEAREA DS     18F\n*\n         CIRUFR01\n         EJECT\n         END\n//L.SYSIN   DD *\n  INCLUDE IMFLOAD(PRSCEXTB)\n  ENTRY           PRSCEXTB\n  NAME            PRSCEXTB(R)\n//L.IMFLOAD DD DISP=SHR,DSN=IMS.VBNB260.TARGET.LOAD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WAITDC1A": {"ttr": 6148, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x01\\xd3\\x01\\xd3\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 467, "newlines": 467, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31DC JOB 'IMSGROUP  SH28205610*110A044990R2    999  9999997   ', *\n// REGION=1024K,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016,\n// TIME=1\n//*MAIN ORG=LOCAL,CLASS=L5\n//WAITDC10 EXEC IMSUPDTE,MEMBER=WAITDC10,\n// P=,SP=IMS,MP=IMA,LP=IMA,\n// SYSLMOD=PERM,\n//*PGMC=IEV90,\n//*CONDL=0,\n// LOAD=LOAD,\n// SOUT='*',\n// ACCT=0\n//C.SYSIN DD *\n          MACRO\n&N        XCXC\n          LCLA &I\n          LCLC &NN\n.LOOP     ANOP\n&I        SETA &I+1\n&NN       SETC  ''\n          AIF  (&I GT 1).OVNN\n&NN       SETC  '&N'\n.OVNN     ANOP\n&NN       XC    &SYSLIST(&I),&SYSLIST(&I)\n          AIF  (&I LT N'&SYSLIST).LOOP\n          MEND\n***********************************************************************\n   EJECT\n***********************************************************************\nWAITDC10 CSECT\n         PROLOGUE SAVE=INLINE,DATE=&SYSDATE-&SYSTIME\n         PRINT NOGEN\n         REQUATE\n         CEQUATE\nE#M      EQU   R1\nP#P      EQU   R2\nR#BALC   EQU   R9\nL##      EQU   R14\nR#W      EQU   R15\nNOTONES  EQU   14\n         ST    R1,R1@ENTRY\n         WTPASSEM\n         LOAD  EP=KEYFLAGS\n         ST    R0,EPKEYFGS\n         L      R15,EPKEYFGS\n         CALL  (15),(R1@ENTRY,KEYWORDS)\n         BAL   L##,EVAL\n*        ********\nLOOP     #\n         BAL   L##,LOOK                  LOOK AT THE TARGET.\n         OC    LOOKFLAG,LOOKFLAG         Q.  IS  THE TARGET READY.\n         BNZ   GOTIT                       YES, HOORAY.\n         BAL   L##,WAIT                    NO; WAIT A WHILE; TRY AGAIN.\n         SP    P1,=P'1'                  Q.  HAVE WE BEEN TOO LONG.\n         BP    LOOP                        NO; LOOP.\nEXHAUST  DLLINK (M,4),'RIIMSWT99 ',*JOBNAME,',',*DATETIME,',  ',       *\n               ' DESIRED RESOURCE STILL NOT READY; TRY AGAIN LATER.',  *\n               *WTO\n         ABEND 12,DUMP\n**************************\nGOTIT    #\n         DLLINK (M,4),'RIIMSWT08 ',*JOBNAME,',',*DATETIME,',  ',       *\n               ' DESIRED RESOURCE AND CONDITION FOUND; CONTINUING. ',  *\n               *WTO\n         L     R15,BIGRC15\n         TM    PMABEND,X'80'\n         BALC  ALLON,ABEND\n         EPILOGUE RETURN=(R15)\nABEND    ABEND 11,DUMP\n         PRINT NOGEN\nP1       DC    PL4'200'\n***************************************************************\n    TITLE ' WAITDC10  --  S/R TO WAIT FOR A WHILE.'\n***************************************************************\nWAIT     BENT\n         STIMER WAIT,BINTVL=WAITHUND\n         L     R#W,WAITTRIP\n         LA    R#W,1(R#W)\n         ST    R#W,WAITTRIP\n         C     R#W,WAITMSG\n         BC    LT,WAITQ\n         XCXC  WAITTRIP\n         DLLINK (M,4),'RIIMSWT01 ',*JOBNAME,',',*DATETIME,',  ',       *\n               ' WAITING FOR IMS NUC; CTL REG SSID=',(LOOKSSID,4),'.', *\n               *WTO\nWAITQ    #\n         BEXIT\nWAITHUND DC    A(0)\nWAITTRIP DC    A(0)\nWAITMSG  DC    A(0)\n***************************************************************\n    TITLE ' WAITDC10  --  S/R TO LOOK FOR SUBJECT.'\n***************************************************************\nLOOK     BENT\n         LA    L##,LOOKRET SET RETURN ADDR FROM FOLLOWING PSEUDO BAL'S.\n*        ********\n         CLC   =C'DBRC',LOOKTYPE\n         BC    EQ,DBRC\n*        ****\n         CLC   =C'DLS ',LOOKTYPE\n         BC    EQ,DLISAS\n*        ********\n         BALC  ABEND              IF NONE OTHER.\n*************************\nLOOKRET  #\n         BEXIT\nLOOKFLAG DC    A(0)\nLOOKTYPE DC    CL8' '\nLOOKSSID DC    CL4' '\n***************************************************************\n    TITLE ' WAITDC10  --  S/R TO LOOK IF  DBRC.'\n***************************************************************\nB#DS     EQU   R3\nB#DA     EQU   R4\nB#DB     EQU   R5\nDBRC     BENT\n         BAL   L##,NUC00               GO CHECK ON THE NUC.\n         ICM   B#DS,7,NUCPSCDI+1       Q. WAS THE NUC THERE.\n         BZ    DBEXIT                    NO; SKIP OUT.\n         USING SCD,B#DS\n**       **************\n**  CODE TO TEST FOR APPEARANCE THAT THE NUC HAS ISSUED THE START\n**      FOR DBRC TASK/JOB.\n*         THIS CODED LIKE DFSXRIC0 WHERE IT STARTS DBRC VIA SVC-34.\nDBRWAB   CLI   PMSTART,0               Q. TEST FOR DBRC STARTED.\n         BE    DBRWAB9                   NO; SKIP OVER\n         XCXC  DBRCFLAG                CLEAR IT.\n         AP    DBRTRC1,=P'1'           TRACE MARKER.\n         MVC   DBRWWA,SCDDBRWA         COPY POINTER.\n         MVC   DBRWWB,SCDDBRWB         COPY POINTER.\n         ICM   B#DA,7,SCDDBRWA+1       Q. DBRWA PRESENT.\n         BZ    DBEXIT                    NO; SKIP OUT.\n         AP    DBRTRC2,=P'1'           TRACE MARKER.\n         ICM   B#DB,7,SCDDBRWB+1       Q. DBRWB PRESENT.\n         BZ    DBEXIT                    NO; SKIP OUT.\n         USING DFSRCWKA,B#DA\n         USING DFSRCWKB,B#DB\n         AP    DBRTRC3,=P'1'           TRACE MARKER.\n         CLC   =A(0),RCWACQRE          Q. POINTER REAL.\n         BE    DBEXIT                    NO; SKIP OUT\n         AP    DBRTRC4,=P'1'           TRACE MARKER.\n         CLC   =A(0),RCWBCHAN          Q. POINTER REAL.\n         BE    DBEXIT                    NO; SKIP OUT\n         AP    DBRTRC5,=P'1'           TRACE MARKER.\n         MVC   DBRWCQRE,RCWACQRE       COPY POINTER.\n         MVC   DBRWCHAN,RCWBCHAN       COPY POINTER.\n         CLC   RCWACQRE,RCWBCHAN       Q. HAS DFSXRIC0 STARTED DBRC.\n         BNE   DBEXIT                    NO; SKIP OUT.\n         AP    DBRTRC6,=P'1'           TRACE MARKER.\n         MVC   DBRCFLAG,RCWBCHAN         YES; SET NUC FLAG NONZERO.\nDBRWAB9  #\n**       **************\n**  CODE TO TEST FOR THE NUC'S BEING IN WAIT FOR THE DBRC TO CONNECT.\n*         THIS CODED LIKE DFSXCIC0 WHERE IT TESTS ECB FOR DBRC STARTED.\nDBWT     CLI   PMWAIT,0                Q. TEST FOR WAITING FOR DBRC.\n         BE    DBWT9                     NO; SKIP OVER\n         AP    DBRTRC7,=P'1'           TRACE MARKER.\n         XCXC  DBRCFLAG                CLEAR IT.\n         MVC   DBWTWA,SCDDBRWA         COPY POINTER.\n         ICM   B#DA,7,SCDDBRWA+1       Q. DBRWA PRESENT.\n         BZ    DBEXIT                    NO; SKIP OUT.\n         AP    DBRTRC8,=P'1'           TRACE MARKER.\n         USING DFSRCWKA,B#DA\n         MVC   DBWTECB,RCWAIECB        COPY ECB.\n         TM    RCWAIECB,X'80'          Q. WAITING FOR DBRC.\n         BZ    DBEXIT                    NO; SKIP OUT.\n         AP    DBRTRC9,=P'1'           TRACE MARKER.\n         MVC   DBRCFLAG,RCWAIECB         YES; SET FLAG NONZERO.\nDBWT9    #\n**       **************\nDBEXIT   #\n         MVC   LOOKFLAG,DBRCFLAG\n         BEXIT\n         DC    C'DBRC DEBUG DATA'\nDBRWWA   DC    A(0)\nDBRWWB   DC    A(0)\nDBRWCQRE DC    A(0)\nDBRWCHAN DC    A(0)\nDBWTWA   DC    A(0)\nDBWTECB  DC    A(0)\nDBRCFLAG DC    A(0)\nDBRTRC1  DC    PL4'0'\nDBRTRC2  DC    PL4'0'\nDBRTRC3  DC    PL4'0'\nDBRTRC4  DC    PL4'0'\nDBRTRC5  DC    PL4'0'\nDBRTRC6  DC    PL4'0'\nDBRTRC7  DC    PL4'0'\nDBRTRC8  DC    PL4'0'\nDBRTRC9  DC    PL4'0'\n         DROP  B#DS,B#DA,B#DB\n***************************************************************\n    TITLE ' WAITDC10  --  S/R TO LOOK IF  DLISAS'\n***************************************************************\nB#LS     EQU   R3\nB#LA     EQU   R4\nB#LB     EQU   R5\nDLISAS   BENT\n         BAL   L##,NUC00\n         ICM   B#LS,X'7',NUCPSCDI+1\n         BZ    DLIEXIT\n         USING SCD,B#LS\n         TM    SCDSMMS1,SCDSDLIS       Q. RUNNING W/ DLI-SAS.\n         BALC  ZERO,ABEND                NO; ABEND; USELESS.\n**       **************\n**  CODE TO TEST FOR APPEARANCE THAT THE NUC HAS ISSUED THE START\n**      FOR DLI  TASK/JOB.\n*         THIS CODED LIKE DFSXLIC0 WHERE IT STARTS DLI  VIA SVC-34.\nDLIWAB   CLI   PMSTART,0               Q. TEST FOR DLI  STARTED.\n         BE    DLIWAB9                   NO; SKIP OVER\n         XCXC  DLIFLAG                 CLEAR IT.\n         AP    DLITRC1,=P'1'           TRACE MARKER.\n         TM    SCDLICT1,SCDL1RDR       Q. HAS THE START BEEN ISSUED?\n         BZ    DLIEXIT                   NO; SKIP OUT.\n         AP    DLITRC6,=P'1'                       TRACE MARKER.\n         MVC   DLIFLAG,SCDLICTL          YES; SET NUC FLAG NONZERO.\nDLIWAB9  #\n**       **************\n**  CODE/TO TEST FOR THE NUC'S BEING IN WAIT FOR THE DLI  TO CONNECT.\n*         THIS CODED LIKE DFSXCIC0 WHERE IT TESTS ECB FOR DLI  STARTED.\nDLIWT    CLI   PMWAIT,0                Q. TEST FOR WAITING FOR DLI.\n         BE    DLIWT9                    NO; SKIP OVER\n         AP    DLITRC7,=P'1'           TRACE MARKER.\n         XCXC  DLIFLAG                 CLEAR IT.\n         BZ    DLIEXIT                   NO; SKIP OUT.\n         AP    DLITRC8,=P'1'           TRACE MARKER.\n         MVC   DLITECB,SCDRSEIA        COPY ECB.\n         TM    SCDRSEIA,X'80'          Q. WAITING FOR DLI SAS.\n         BZ    DLIEXIT                   NO; SKIP OUT.\n         AP    DLITRC9,=P'1'           TRACE MARKER.\n         MVC   DLIFLAG,SCDRSEIA          YES; SET FLAG NONZERO.\nDLIWT9   #\n**       **************\nDLIEXIT  #\n         MVC   LOOKFLAG,DLIFLAG\n         BEXIT\n         DC    C'DLI  DEBUG DATA'\nDLIWWA   DC    A(0)\nDLIWWB   DC    A(0)\nDLIWCQRE DC    A(0)\nDLIWCHAN DC    A(0)\nDLITWA   DC    A(0)\nDLITECB  DC    A(0)\nDLIFLAG  DC    A(0)\nDLITRC1  DC    PL4'0'\nDLITRC2  DC    PL4'0'\nDLITRC3  DC    PL4'0'\nDLITRC4  DC    PL4'0'\nDLITRC5  DC    PL4'0'\nDLITRC6  DC    PL4'0'\nDLITRC7  DC    PL4'0'\nDLITRC8  DC    PL4'0'\nDLITRC9  DC    PL4'0'\n         DROP  B#LS,B#LA,B#LB\nDLEXIT   #\n         MVC   LOOKFLAG,DLIFLAG\n         BEXIT\n***************************************************************\n    TITLE ' WAITDC10  --  S/R TO LOOK FOR NUC'\n***************************************************************\n         PUSH PRINT\n         PRINT GEN\nNUC00    BENT\n****************************\n* CODE TO FIND SCD POINTER.\nB#PT     EQU   R1          BASE FOR SSCT = SSCVT\nB#PO     EQU   R3          BASE FOR SSOB\nB#PI     EQU   R4          BASE FOR SSIB\nB#PC     EQU   R5          BASE FOR CVT\nB#PV     EQU   R6          BASE FOR JES'S CT\nB#PS     EQU   R7          BASE FOR SCD\nB#PM     EQU   R9          BASE FOR NUCPARMS\nB#PE     EQU   R10         BASE FOR SSCT EXTENTION\nB#PD     EQU   R11         BASE FOR SSCD\n*        *****\n         STM   R0,R15,NUCPSAV1          STO ALL.\n         L     B#PC,CVTPTR              PTR TO CVT.\n*&%$     USIN- CVT,B#PC\n         L     B#PV,CVTJESCT-CVT(B#PC)  PTR TO SSCT'S.\n*&%$     USIN- JESCT,B#PV\n         L     B#PT,JESSSCT-JESCT(B#PV) PTR TO FIRST SSCT.\n         USING SSCT,B#PT\nNUCSCTLP CLC   SSCTSNAM+2(2),=C'DC'    Q. IS THIS A 'DC' SSCT.\n         BNE   NUCSCTNO                  NO; FORGET IT.\n*\n         MVC   NUCPSAV7(SSCTSIZE+SSCDLEN),SSCT    SAVE SSCT FOR DEBUG.\n         L     B#PE,SSCTSUSE           GET A POSSIBL USER ADDRESS.\n         LTR   B#PE,B#PE               Q. IS THERE A USER ADDRESS.\n         BZ    NUCSCTNO                  NO; SKIP.\n         CLC   0(8,B#PE),=CL8'SSCTEXT '  YES; Q. USERAREA AN EXTENTION.\n         BNE   NUCSCTNO                         NO; SKIP.\n*******************                             YES; DIG DEEPER.\n         LA    B#PD,ESSCTLEN(B#PE)              BUMP TO SSCD.\n         CLC   LOOKSSID,SSCDIMID-SSCD(B#PD)         Q. IS IT OURS.\n         BNE   NUCSCTNO                               NO;  FORGET IT.\n         CLI   SCDRGTYP-SSCD(B#PD),SCDRGCTL         Q. IS IT CTL.\n         BNE   NUCSCTNO                               NO;  FORGET IT.\n*                                                     YES; USE IT.\n         L     B#PS,SSCDTCTN-SSCD(B#PD)            GET THE SCD ADDR.\n         ST    B#PS,NUCPSCDI                       STO SCD ADDR.\n         B     NUCSCTOK\n*************************\nNUCSCTNO ICM   B#PT,X'F',SSCTSCTA      GET NEXT; Q. IS THERE A NEXT.\n         BNZ   NUCSCTLP                            YES; LOOP.\n**    *************\n         B     NUCNOGOT                            NO; SKIP.\n*\n**************************************************\nNUCSCTOK STM   R0,R15,NUCPSAV2         STORE ALL REGISTERS IN SPOT #2.\n         MVC   NUCPSAV9(SSCTSIZE+SSCDLEN),SSCT    SAVE SSCT FOR DEBUG.\n         DROP  B#PT\n         ICM   B#PS,7,NUCPSCDI+1       Q. IS THERE AN SCD ADDR.\n         BZ    NUCNOGOT                  NO; THEN SKIP OUT.\n*****************************************\n* FIND NUCSCD.\n         TM    PMNONAR,X'80'           Q. REQUEST TO SKIP.\n         BO    NUCOVNAR                  YES; SKIP.\n         NARSCDF B#PS,NARSCD10,KNOWN=SCD,FAILX=NUCOVNAR\n         ST      B#PS,NUCPSCDN         STORE THE NARSCD ADDRESS.\nNUCOVNAR #\n**********************************\nNUCNOGOT #\n         STM   R0,R15,NUCPSAV2         STORE ALL REGISTERS IN SPOT #2.\n         LM    R0,R15,NUCPSAV1         RELOD ALL REGIST  FROM SPOT #1.\n*        ******\nNUCRET   #\n         BEXIT\n***********************************************************\n         POP   PRINT\n         DC    C'NUC-FIND DEBUG DATA'\nNUCPSCDI DC      A(0)\nNUCPSCDN DC      A(0)\nNUCFLAG  DC      A(0)\nNUCPSAV1 DC    24A(0)\nNUCPSAV2 DC    24A(0)\nNUCPSAV7 DC    24A(0)\nNUCPSAV9 DC    24A(0)\n***************************************************************\n    TITLE ' WAITDC10  --  MISC SUB ROUTINES.'\n***************************************************************\n* S/R TO EVLUATE THE PARM FIELD.\nEVAL     BENT\n         LH   R#W,PMT1+2\n         MH   R#W,=H'100'\n         ST   R#W,WAITHUND\n*        ****\n         LH   R#W,PMT2+2\n         ST   R#W,WAITMSG\n*        *******\n         LA   P#P,PMSUBSYS\n         BAL  L##,LAYIN\n         BALC NOTONES,ABEND\n         MVC  LOOKTYPE,L+4\n*        *******\n         LA   P#P,PMSSID\n         BAL  L##,LAYIN\n         BALC NOTONES,ABEND\n         MVC  LOOKSSID,L+4\n*     **************\n         BEXIT\n***************************************************************\n         EJECT\n***************************************************************\n* SUB-ROTINE TO LAY INTO 'L' AREA THE PARM POINTED TO BY P#P.\n*        LA    P#P,PARMFIELDNAME\n*        BAL   L#L,LAYIN\nLAYIN    BENT\n         TM    0(P#P),X'C0'\n         BNO   EXITLAY\n         MVI   L+4,X'40'\n         MVC   L+5(80),L+4\n         XR    E#M,E#M\n         IC    E#M,0(P#P)\n         N     E#M,=A(63)\n         ST    E#M,E#MLGTH\n         S     E#M,=A(01)\n         BALC  LT,ABEND\n         L     R#W,0(P#P)\n         EX    E#M,MVCPARM\n         LA    R1,5(E#M)\n         STH   R1,L\n         TM    *,1                 SET TO BRANCH IF USE \"BO\" INSTR.\nEXITLAY  BEXIT\n*        ******\nMVCPARM  MVC   L+4(0),0(R#W)\nE#MLGTH  DC    A(0)\nL        DC    Y(4,0),CL120'*PARAMETER-IS-MISSING*'\n***************************************************************\n    TITLE ' WAITDC10  --  CONSTANTS AND STUFF LIKE THAT.'\n***************************************************************\nR1@ENTRY DC    A(0)\nBIGRC15  DC    A(0)\nEPKEYFGS DC    A(0)\nDBL      DC   2D'0'\nUNPK     DC   2D'0'\n*        *****\n*        *****\n**************************************************\n     EJECT\n**************************************************\n**************************************************\n*\n**************************************************\n**************************************************\n     EJECT\n**************************************************\n         PRINT NOGEN\nQWER     DLPARM ,KEYWORDS\nA        DLPARM  A\nPMT1     DLPARM  T1\nPMT2     DLPARM  T2\nPMT3     DLPARM  T3\nPMSUBSYS DLPARM SUBSYS\nPMSTART  DLPARM START\nPMWAIT   DLPARM WAIT\nPMSSID   DLPARM SSID\nPMABEND  DLPARM ABEND\nPMDEBUG  DLPARM DEBUG\nPMNONAR  DLPARM NONAR\n         DC    4Y(0)\n*        *****\nM        DC    XL200'0'\n*************************\n*\n*************************\nDCL80BBB DC    CL80' '\n*************************\n**************************************************\n    TITLE ' WAITDC10 - DSECTS  ETC.. '\n**************************************************\n         PRINT   GEN\n         DSECT\n         ISCD SCDBASE=0\nSSCD     EQU  SSCDORG\n         PRINT   GEN\n         DFSSSOB (IEFJSSIB,IEFJSSOB,IEFJESCT,IEFJSCVT,IEFJSSVT)\n         PRINT   GEN\n         DFSSSOB DFSESSCT\nASDFQWER DSECT\n         DFSRCWKA DSECT=NO\n         DFSRCWKB\n         CVT   DSECT=YES\n         NARSCD\n         END\n//L.IMSLOAD DD DISP=SHR,DSN=IMS.LOAD\n//L.SYSIN   DD  *\n INCLUDE IMSLOAD(DLLINK)\n SETCODE AC(1)\n//*******************************************************************\n//SYSNUSED DD DATA\n//** NULL NEXT\n//** NULL NEXT\n//** NULL NEXT\n//\n//*******************************************************************\n//TEST    EXEC  PGM=WAITDC10,COND=(4,LT),PARM=(A,\n//  'T1=10','T2=3',\n//  'SUBSYS=DLISAS','SSID=IMY7',\n//   ABEND,\n//   DEBUG,\n//   Z)\n//STEPLIB  DD DISP=MOD,DSN=&&T,SPACE=(CYL,(1,,1)),UNIT=SYSDA\n//         DD DISP=SHR,DSN=IMS.TEST\n//         DD DISP=SHR,DSN=IMS.LOAD\n//ABNLDUMP DD DUMMY\n//SYSUDUMP DD SYSOUT=*\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XFSAOS70": {"ttr": 6156, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 14, "newlines": 14, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS31A7 JOB 'IMSGROUP  SH28205610*110A044         999  3000003037',\n//  REGION=996K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016\n//*MAIN ORG=RMP01,CLASS=L5\n//AOS70     EXEC IMSUPDTE,SMEMBER=DFSAOS70,LMEMBER=XXXXXXXX,\n//             PRELIB='SYS1.MACLIB',\n//             AUXLIB='SYS1.MODGEN',\n//             SYSLMOD=TEMP,\n//             P=IMA,LOAD='PVT.MODS',RE=RENT,DISPR=SHR,\n//  DECK='NODECK,SYSPARM(S)',\n//*CONDL=0,\n//  SYMI=SOURCESV,SYMO=SOURCESV,RECORD=NO,ACCT=1,SOUT='*'\n//SYSIN  DD *\n./DFSAOS70 CHANGE NAME=DFSAOS70\n    SPACE 3        FORCE ASSEMBLY.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZFDIINV0": {"ttr": 6158, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93&o\\x00\\x93&o\\x12H\\x00\\x12\\x00\\x12\\x00\\x00\\xc8\\xd6\\xe2\\xd2\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-23T00:00:00", "modifydate": "1993-09-23T12:48:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "HOSKINS"}, "text": "//AIMS22IV JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',\n//  MSGLEVEL=1,MSGCLASS=H,\n//  REGION=1024K,TIME=010,\n//  NOTIFY=$A1016\n//*MAIN ORG=LOCAL,CLASS=L\n//****************************\n//DFSIINV0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,\n//   SYMI=SOURCETM,SYMO=SOURCETM,\n//   SMEMBER=DFSIINV0,LMEMBER=DFSIINVG,\n//   RE='RENT,REFR',\n//   LOAD='PVT.MODS',\n//   SOUT='*',\n//   CONDL=0,\n//   OSLIBS=AMVSXA,\n//   ACCT=0\n//U.SYSINA DD  *\n./ CHANGE   NAME=DFSIINV0\n*              ASSEMBLE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT197/FILE197.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT197", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}