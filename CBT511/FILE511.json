{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012235000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 529074, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE511.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE511.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\t\\n'", "DS1TRBAL": "b'\\x16\\x94'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xd8\\x00\\x02\\x03\\xd8\\x00\\x0b\\x00\\n'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\t_\\x01\\x01\\t_\\x12\\x00\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-04-05T00:00:00", "modifydate": "2001-04-05T12:00:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 434    FILE:  511\n\n    ORIGINAL DSNAME:  WSBG.CBT434.FILE511\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    27920   PO\n\n   10 MEMBERS COUNTED; CUMULATIVE SIZE IS 4,781 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   04/05/01    12:00:52    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x01\\x06O\\x01\\x01\\x06O @\\x01\\x87\\x01i\\x00\\x00\\xc3\\xf0\\xf9\\xf5\\xf7\\xf7\\xf5@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-03-05T00:00:00", "modifydate": "2001-03-05T20:40:00", "lines": 391, "newlines": 361, "modlines": 0, "user": "C095775"}, "text": "Install:\nInstall the cobol pgm into ISPLLIB. I use DYN,OPT(FULL),NUMPROC(PFD).\nInstall the clist     into SYSPROC.\nInstall the panels    into ISPPLIB    OR   use LIBDEFs in the CLIST.\nInstall the skeletons into ISPSLIB    OR   use LIBDEFs in the CLIST.\nIn foreground, invoke the function by typing in \"TSO VSAMCL\"\nIn batch,      invoke the function by modeling the sample JCL found\nin this doc, or found in the AP1PVSAM panel.\n\nFunction/Features:\n\n1) It can be used in foreground for individual files to:\n   a)  examine how efficiently the file is allocated, and how much\n       each component costs (used space cost, free space cost,\n       unused space cost, etc.)\n   b)  Run an index analysis to see if the index CI is adequate\n       to store all of the keys of a data CI.\n   c)  Run a job to calculate a file's true average LRECL\n   d)  Run a job to reorganize the file with 18K data cisize and\n       2K index cisize\n\n2) It can be used in a production batch step to:\n   a)  monitor a list of given VSAM datasets and print out exception\n       reports\n   b)  automatically generate fresh delete/define cards, based on\n       the exception report, as well as reorg JCL.\n   c)  save the delete/define cards in a PDS (specified in the\n       control cards; the PDS and member name is specified on\n       each control card)\n   d)  step can run in simulation mode (produces the exception\n       change reports, but not the reorg JCL)\n   e)  supports comment cards in the control card deck\n   f)  automatically submits (internal reader) the reorg JCL\n       if not in simulation mode\n   g)  Simulation mode can be turned on or off at the file level\n\n3) Datapacker (Data Accelerator) Support\n\nThere is a foreground (ISPF) and a background (batch) function.\nThe foreground function operates on a single VSAM dataset, specified\nin an initial panel (panel=IDC).\nA secondary screen, scrollable, displays all of the following:\n\nWatch section:  Green=Good, Yellow=Watch it, Red=Problem <== Should be colorful\n\n  Records total:         11335343\n  Allocated cylinders:       1240    Percent used            100.00\n  CI splits:                    0    Free CI:                     0\n  CA splits:                    0    Free CA:                     0\n  Extents:                     15    Data CISIZE:             18432\n  Key length:                  28    Index CISIZE:             2048\n  Bytes in CI free space        0\n\nReallocate the file?     ===>      (Yes-JCL will be generated to reallocate\n                                    the file in the most efficient manner\n                                    possible. Data will be preserved).\nIndex analysis?          ===>      (Yes-JCL will be generated that will\n                                    determine if the index adequately\n                                    addresses the data portion).\nCalculate true AVGLRECL? ===>      (Yes-JCL will be generated that will\n                                    calculate the TRUE average record length).\nCost section:\n                                ANNUAL COST     per cent\n\n  CI free space:                       0.00         0.00\n  CA free space:                       0.00         0.00\n  All free space:                      0.00         0.00\n  Unused portion (incl free):          0.00         0.00\n  Used portion (incl free):        7,275.10       100.00\n  Unused portion:                      0.00         0.00\n  Entire file:                     7,275.10       100.00\nSpace section:\n\n  Records per cylinder:                        9141\n  Records that can be added without\n   going into further extents:                    0\n  Primary allocation:                           240\n  Secondary allocation:                          24\n  Average LRECL (rarely accurate):              120\n  Max LRECL:                                    480\n\nCI free space percentages to accomodate n number of inserts per CI:\n\n    N CI percent        N CI percent        N CI percent\n\n    1          1        4          2        7          4\n    2          1        5          3        8          4\n    3          2        6          3        9          5\n\nI/O section:  (I/O stats since last load)\n\n  Records read:              56679,584\n  Records updated:                   0\n  Records inserted:                  0\n  Records deleted:                   0\n\n[ The next section is semi-fixed text. The text is fixed, but the\n  values are variables from the top of the screen ]\n\nExplanation of the fields that are in the \"watch\" section:\n\nPERCENT USED:  If a file has lots of unused space (i.e. has a low\n 100.00        percent used value), that space is billed to the\n               client. On the other hand, a high percent used\n               value may mean that there is little room for\n               growth; be aware, however, that free space--if\n               defined--will allow for inserts, even if the file\n               is otherwise \"full.\" In addition, VSAM can allocate\n               up to 123 extents, so one way or the other, about\n               the only thing that can cause a VSAM file to really\n               fill up is end-of-volume (or a system defined limit\n               other than 123). Rule of thumb: the larger the\n               file, the higher the percent used value should be.\n\nAlloc CYLS:    Large files cost more. Keeping space requirements\n   1240        to a minimum saves money and frees up resources.\n               (Rough 1997 value: 48 cents per cylinder per\n               month).\n\nCI/CA splits:  CI splits aren't so bad. CA splits are. Here's why:\nCI:     0      when an insert causes a CI split, no DASD head\nCA:     0      movement is required.  All necessary data shuffling\n               occurs within a single cylinder boundary. A CA\n               split, on the other hand, causes the DASD device to\n               shuffle up to 2 or 3 cylinders (i.e. head\n               movement). CA splits add lots of overhead for an\n               online transaction and even for a batch job.\n\n               Both forms of splits chop up the file, which is\n               why periodic reorgs are necessary to reclaim some\n               wasted space.\n\n               It is difficult to decide how much free space to\n               define for VSAM files. For starters, though, CI\n               free space should reflect an even multiple of\n               records. The bottom line: which is cheaper in your\n               opinion:  allocating too much free space, or\n               monitoring, redefining, and reorging the file?\n\n               Myth: a file that has a lot of splits slows down\n               online random retrievals. FALSE. Random retrievals\n               do not read sequentially. The index is read to get\n               the address, and then the data is read.\n\nFree space:    Calculating free space is difficult at best. Here\nCI:     0      are some rules of thumb:\nCA:     0\n               * Make sure the percentage of free space in the CI\n                 is at least large enough to hold one record. For\n                 example, don't code 10 per cent CI free space\n                 (roughly 409 bytes with a 4K data cisize) when\n                 your average LRECL is greater than 409 bytes.\n                 The CI free space percentage will be RED if the\n                 free space is too small for the average record.\n\n     * Code less and less free space for larger and larger files.\n       Reasoning:  Very large files will have hundreds or thousands\n       of chunks of free space that will most likely never be used\n       (but you pay for it anyway). Even with free space defined,\n       splits still occur when clustered insert activity fills up a\n       chunk of free space. Rule of thumb: for very large files and\n       even medium sized files, code enough CI free space to allow\n       for 1 or 2 record inserts, and a modest amount of CA free\n       space.\n\n     * Insert activity low or very low: code little or no free space.\n\n     * Insert activity consists of single records being inserted\n       all over the file: code enough free space for one record\n       per CI, and enough CA free space for one 1 or 2 CI splits.\n\n     * Insert activity consists of groups of records being inserted\n       all over the file (as is the case with many files): code\n       enough free space for at least 1, 2, or more records to be\n       inserted in each CI, and enough CA free space for several\n       CI splits.\n\nKey length:    You can't change the key length, but the key\n 28            length can seriously affect space usage, depending\n               on how large the index or data CI is.\n\n               If you have a large key (>30) and normal cisizes\n               (such as 4K for the data portion and 1K or 2K for\n               the index portion), chances are good that a part\n               of the data portion cannot be indexed, thus\n               wasting space.\n\n               VSAM builds an index record which contains keys\n               and addresses of the first record of each control\n               interval in the data portion.  The keys and\n               addresses for an entire control area must fit in\n               one index record (i.e. index cisize). If they\n               don't fit, VSAM ignores space in each control area\n               and continues writing in the next control area.\n\n               With 3390 devices and a 4K data cisize, you get\n               185 control intervals per cylinder (control area).\n               So if 185 keys and their corresponding addresses\n               can't fit in one index record, you're wasting\n               space.  If the key length value is yellow or red,\n               submit the \"Index Analysis\" job.  If the index\n               analysis shows that the index CI is too small,\n               make sure it is 2K, and increase the data CI to\n               8K. That should fix it.\n\nExtents:       There is no law that says a VSAM file can't have\n 15            multiple extents; however, multiple extents may be\n               an indication of:\n\n               * primary allocation inadequate\n               * insufficient free space\n               * the file is not being reorganized frequently enough\n\nCI sizes:      There is no great science to CI sizes, either.\nIndex   2048   VSAM can take CI sizes in multiples of 512, 1K,\nData   18432   2K, or 4K (see the IBM manuals if you need to know\n               exact rules), but not all CI sizes are efficient\n               in terms of space allocation or CICS memory/buffer\n               management.\n\n               The most efficient CI size in terms of space is 18432,\n               for 3390 devices.  Use this CI size for all non-CICS\n               files. CICS works fine with 18K CI sizes, but there may\n               be some inefficiencies with buffering in a production\n               environment.\n\n               The current recommendation for CICS files is 4096\n               or 8192 for production files. You can use TSO\n               AMSSPACE to see which size uses space more\n               efficiently.\n\n               If the index cisize is less than 2K, it will be red.\n               If the index cisize is gt   than 2K, it will be yellow.\n\n               If the data cisize is less than 4K, it will be red.\n\nCI free bytes: This is how many free bytes, as determined by the\n      0        percent of free space is specified for the control\n               interval, are available for record insertion. If\n               this value is less than the average record length,\n               it will be red.\n\n               Further up on this screen free space percent\n               values are calculated for you to accomodate 1 thru\n               9 record insertions per control interval.\n\nNOTE: For people using Datapacker: If you're using Datapacker to\nsave space, good for you. Unfortunately, you're probably paying\nmore than you're saving in CPU costs--it costs 2 or 3 times more\nCPU to compress or decompress a record than to merely read it. If\nyou have files that are not sequentially processed every day,\nDatapacker may still be a good bet. Or try the RC (repetitive\ncharacter) compression method, which is a much cheaper method CPU\nwise, but still gives good compression.\n\nBottom line: The bottom line for VSAM space management is how\nmuch you are paying for your VSAM files. With managed VSAM files,\nyou will realize the benefits of having your VSAM files\nautomatically monitored and resized based on actual use, allowing\nyou to have VSAM files with less wasted unused space, and tighter\nfree space paramaters.\n\nTo automatically monitor and resize your files, you need to run\nthe batch version of this program in CA7 as follows:\n\n//STEP010  EXEC PGM=IKJEFT01\n//REGISET   DD DSN=SYS3B.#BMC.BCSS.REGISET,DISP=SHR\n//ISPLLIB   DD DSN=your.prod.loadlib,DISP=SHR     ** AP1PISPF **\n//ISPMLIB   DD DSN=SYS1.ISPMLIB,DISP=SHR\n//ISPPLIB   DD DSN=SYS1.ISPPLIB,DISP=SHR\n//          DD DSN=NBSP.ISPPLIB,DISP=SHR\n//ISPSLIB   DD DSN=SYS1.ISPSLIB,DISP=SHR\n//          DD DSN=NBSP.ISPSLIB,DISP=SHR\n//ISPTLIB   DD DSN=SYS1.ISPTLIB,DISP=SHR\n//ISPFILE   DD DSN=your.jcl( 1),DISP=(,CATLG,DELETE),     ** JCL **\n//             SPACE=(TRK,(1,5),RLSE),\n//             RECFM=FB,LRECL=80,BLKSIZE=0\n//DSNLIST   DD DSN=your.parmlib(datasets),DISP=SHR   ** DATASETS **\n//SYSIN     DD SPACE=(TRK,1),\n//             RECFM=FB,LRECL=80,BLKSIZE=0\n//LISTCAT   DD SPACE=(TRK,1),\n//             RECFM=VBA,LRECL=125,BLKSIZE=0\n//EXCPRPT   DD SYSOUT=*,RECFM=FBA            ** EXCEPTION REPORT **\n//CHNGRPT   DD SYSOUT=*,RECFM=FBA            ** CHANGE    REPORT **\n//SYSPRINT  DD SYSOUT=*\n//SYSLBC    DD DSN=SYS1.BRODCAST,DISP=SHR\n//ISPLOG    DD SYSOUT=*,RECFM=VBA,LRECL=125,BLKSIZE=2040\n//ISPPROF   DD SPACE=(CYL,(1,1,1),RLSE),\n//             RECFM=FB,LRECL=80,BLKSIZE=6160\n//SYSTSPRT  DD SYSOUT=*\n//SYSOUT    DD SYSOUT=*\n//SYSIN     DD DUMMY\n//SYSTSIN   DD *\n ISPSTART PGM(AP1PISPF) PARM(eiiiihhhhhhhhjjjjjjjjm)\n//SUBMIT   EXEC PGM=ICEGENER\n//SYSIN     DD DUMMY\n//SYSUT1    DD DSN=your.jcl( 1),DISP=SHR        ** GENERATED JCL **\n//SYSUT2    DD SYSOUT=(A,INTRDR)    ** SUBMIT TO INTERNAL READER **\n//SYSPRINT  DD SYSOUT=*\n\nPARM LAYOUT:\n\nCard column(s)     Value\n\n   1   -   1       Environment: F (foreground) or B (background).\n                   For a batch job, make sure you specify B .\n\n   2   -   5       Image: TEST or PROD. This parameter inserts the\n                   VOLUME word for production, leaves it off for\n                   test. Also forces a data cisize of 18432 for\n                   test files.\n\n   6   -  13       High level qualifer of the job-temporary backup\n                   dataset of each VSAM file. The job you submit\n                   must have Top Secret or RACF access to that\n                   HLQ.\n\n  14   -  21       Jobname of the generated job. The first 4\n                   characters must match the jobname of the\n                   submitting job to pass Top Secret or RACF\n                   security.\n\n  22   -  22       Message class of the submitted job. All job messages\n                   and utility SYSPRINT will go to this class.\n                   Secret or RACF access to that HLQ.\n\n  14   -  21       Jobname of the generated job. The first 4\n                   characters must match the jobname of the\n                   submitting job to pass Top Secret or RACF\n                   security.\n\n  22   -  22       Message class of the submitted job. All job\n                   messages and utility SYSPRINT will go to this\n                   class.\n\nInput card layout (//DSNLIST file):\n\n Card column(s)    Value\n  1   -    1       '*' is a comment card\n                   'S' simulates only. No JCL is created, but\n                   reports are.\n  2   -   39       VSAM KSDS cluster name (do NOT specify a base\n                   cluster of an AIX).\n 40   -   80       PDS and PDS member name that is to receive the\n                   new DELETE/DEFINE cards for the given dataset.\n                   For example: your.prod.PARMLIB(whatever). You may\n                   leave this field blank.\n\n[ End of scrollable display screen ]\n\n\nCustomization and opportunities for upgrades:\n1)  You'll want to change the jobcard\n2)  If you don't have Datapacker (or Data Accelerator, same thing),\n    you'll need to dummy out //REGISET in the batch JCL, and dummy\n    out the REGISET in the allocation CLIST (VSAMCL). I think you'll\n    need to add AMP=('AMORG'), because it's a VSAM file. Or better yet,\n    add the OPTIONAL clause to the FD in the pgm (VSAMPGM) and pass it\n    a parm indicating \"NO DATAPACKER--DO NOT OPEN REGISET\".\n3)  If you do have Data Packer, you'll need to change the dataset name\n    in the JCL and in the CLIST to point to your file.\n4)  This function does not support the SMS STORCLAS parameter, nor\n    other SMS parameters. The VOLUME is preserved.\n5)  I forget if this function supports multi-volume datasets. You'll\n    have to test.\n6)  This function has not been tested with SMS compressed data. I'm\n    sure it'll work, but chances are really good that the space\n    parameters will be warped.\n7)  You may need to change the cost factor in the pgm (VSAMPGM). The\n    field name is WS-DAILY-GB-COST (currently $19.82). The GB stands\n    for gigabyte.\nTHE PGM IS SETUP FOR 3390 DRIVES!!!!!!\n8)  When new disk drives come out, you may need to change\n    WS-TRACKS-PER-CYL (currently 15).\n9)  When new disk drives come out, you may need to change\n    WS-GIGABYTE-PER-CYL (currently .000811).\n10) When new disk drives come out, you may need to change\n    the hardcoded factor of 21 (which represents number of 2K\n    cisizes per track). Look for INDXPRIM.\n11) When new disk drives come out, you may need to change\n    where WS-CIS-FOR-INDEX-SET is calculated; you may need to\n    change the hard-coded factor 248. OK, I'm sorry, but I forgot\n    to document what 248 means. I got the number from a REAL VSAM\n    guru. Maybe it's 248 something's per index block.\n12) When new disk drives come out, you may need to change\n    the EVALUATE clause in paragraf 0518- (where WS-BLOCKS-PER-TRACK\n    is calculated).\n\nGeoffrey McIntyre\ngeoffrey.mcintyre@firstunion.com\nCharlotte, NC\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE511": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x01\\x02_\\x01\\x01\\x06O Q\\x00)\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2001-03-05T20:51:00", "lines": 41, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 511 is from Geoffrey McIntyre, and contains an ISPF       *   FILE 511\n//*           based VSAM Space Manager application, written in      *   FILE 511\n//*           COBOL.                                                *   FILE 511\n//*                                                                 *   FILE 511\n//*           email:  geoffrey.mcintyre@firstunion.com              *   FILE 511\n//*                                                                 *   FILE 511\n//*      Function/Features of VSAMPGM                               *   FILE 511\n//*                                                                 *   FILE 511\n//*      1) VSAMPGM can be used in foreground for individual        *   FILE 511\n//*         files to:                                               *   FILE 511\n//*                                                                 *   FILE 511\n//*         a)  examine how efficiently the file is allocated,      *   FILE 511\n//*             and how much each component costs (used space       *   FILE 511\n//*             cost, free space cost, unused space cost, etc.)     *   FILE 511\n//*         b)  Run an index analysis to see if the index CI is     *   FILE 511\n//*             adequate to store all of the keys of a data CI.     *   FILE 511\n//*         c)  Run a job to calculate a file's true average        *   FILE 511\n//*             LRECL                                               *   FILE 511\n//*         d)  Run a job to reorganize the file with 18K data      *   FILE 511\n//*             cisize and 2K index cisize                          *   FILE 511\n//*                                                                 *   FILE 511\n//*      2) VSAMPGM can be used in a production batch step to:      *   FILE 511\n//*                                                                 *   FILE 511\n//*         a)  monitor a list of given VSAM datasets and print     *   FILE 511\n//*             out exception reports                               *   FILE 511\n//*         b)  automatically generate fresh delete/define cards,   *   FILE 511\n//*             based on the exception report, as well as reorg     *   FILE 511\n//*             JCL.                                                *   FILE 511\n//*         c)  save the delete/define cards in a PDS (specified    *   FILE 511\n//*             in the control cards; the PDS and member name is    *   FILE 511\n//*             specified on each control card)                     *   FILE 511\n//*         d)  step can run in simulation mode (produces the       *   FILE 511\n//*             exception change reports, but not the reorg JCL)    *   FILE 511\n//*         e)  supports comment cards in the control card deck     *   FILE 511\n//*         f)  automatically submits (internal reader) the         *   FILE 511\n//*             reorg JCL if not in simulation mode                 *   FILE 511\n//*         g)  Simulation mode can be turned on or off at the      *   FILE 511\n//*             file level                                          *   FILE 511\n//*                                                                 *   FILE 511\n//*      3) Datapacker (Data Accelerator) Support                   *   FILE 511\n//*                                                                 *   FILE 511\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FIXUPDSN": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08_\\x01\\x01\\x08_\\tG\\x00f\\x00f\\x00\\x00\\xc3\\xf0\\xf9\\xf5\\xf7\\xf7\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-26T00:00:00", "modifydate": "2001-03-26T09:47:00", "lines": 102, "newlines": 102, "modlines": 0, "user": "C095775"}, "text": "*          DATA SET FIXUPDSN   AT LEVEL 002 AS OF 10/23/90\n         TITLE 'FIXUP DSN FOR ISPF CLIST AND SKELETON PROCESSING -V2'   00001**2\n*---------------------------------------------------------------------* 00002**2\n*        FIXUPDSN IS AN ISPF PROGRAM DESIGNED TO SIMPLIFY             * 00003**2\n*        CLIST PROCESSING UNDER ISPF BY DETERMINING IF A              * 00004**2\n*        DSN PASSED FROM AN ISPF PANEL IS FULLY QUALIFIED IN          * 00005**2\n*        QUOTES OR NOT.                                               * 00006**2\n*                                                                     * 00007**2\n*        IF IT IS FULLY QUALIFIED IN QUOTES THEN THE QUOTES ARE       * 00008**2\n*        REMOVED AND IT IS PUT BACK INTO THE ISPF VARIABLE POOL.      * 00009**2\n*                                                                     * 00010**2\n*        IF IT IS NOT IN QUOTES THEN THE TSO PREFIX (ZPREFIX) IS      * 00011**2\n*        APPENDED IN FRONT AND IT IS PUT BACK INTO THE ISPF           * 00012**2\n*        VARIABLE POOL.                                               * 00013**2\n*                                                                     * 00014**2\n*        TO INVOKE VIA CLIST:                                         * 00015**2\n*              ISPEXEC SELECT PGM(FIXUPDSN) PARM(DSN-VARIABLE-NAME)   * 00016**2\n*                                                                     * 00017**2\n*        TO RETRIEVE THE UPDATED DSN:                                 * 00018**2\n*              ISPEXEC VGET DSN-VARIABLE-NAME                         * 00019**2\n*                                                                     * 00020**2\n*---------------------------------------------------------------------* 00021**2\n         EJECT                                                          00022**2\nFIXUPDSN $PROLOG                                                        00023**2\n         L     R1,0(R1)           * LOAD ADDR OF PARM                   00024**2\n         LH    R2,0(R1)           * LOAD LENGTH OF PARM                 00025**2\n         LTR   R2,R2              *    LENGTH OF ZERO                   00026**2\n         BZ    NOPARM             * NO - BYPASS MOVE                    00027**2\n         BCTR  R2,R0              *    SUBTRACT LENGTH BY 1             00028**2\n         EX    R2,MVCPARM         * EXECUTE THE MOVE                    00029**2\n         B     STARTIT                                                  00030**2\nMVCPARM  MVC   PARM(0),2(1)                                             00031**2\nSTARTIT  DS    0H                                                       00032**2\n         CALL  ISPLINK,(VDEFINE,PNAME,WORK,CHAR,L56,OPT),VL             00033**2\n         CALL  ISPLINK,(VGET,PNAME),VL                                  00034**2\n         CLI   WORK,X'7D'          QUOTED DSN ?                         00035**2\n         BNE   ADDPRE              NO - SO ADD PREFIX                   00036**2\n         LA    R1,WORK+1           -> FIRST REAL CHARACTER              00037**2\n         LA    R5,DSNWORK                                               00038**2\n         LA    R6,56               MAX SEARCH                           00039**2\nDSNMOVE  CLI   0(R1),X'7D'                                              00040**2\n         BE    VPUTIT                                                   00041**2\n         MVC   0(1,R5),0(R1)                                            00042**2\n         LA    R5,1(R5)            INCR R5                              00043**2\n         LA    R1,1(R1)            INCR R1                              00044**2\n         BCT   R6,DSNMOVE                                               00045**2\nVPUTIT   DS    0H                                                       00046**2\n         BCTR  R6,R0                   LESS 1                           00047**2\n         LA    R1,=H'56'                                                00048**2\n         SR    R1,R6                                                    00049**2\n         ST    R1,L56                  RESET LENGTH                     00050**2\n         MVC   WORK,DSNWORK                                             00051**2\n         CALL  ISPLINK,(VPUT,PNAME,SHARED),VL                           00052**2\n         CALL  ISPLINK,(VDELETE,PNAME),VL                               00053**2\n         B     LEAVE                                                    00054**2\nADDPRE   MVC   DSNWORK,WORK        SAVE DSN                             00055**2\n         CALL  ISPLINK,(VDEFINE,ZPREF,PREFIX,CHAR,L8,OPT),VL            00056**2\n         CALL  ISPLINK,(VGET,ZPREF),VL                                  00057**2\n         CALL  ISPLINK,(VDELETE,ZPREF),VL                               00058**2\n         LA    R1,PREFIX                                                00059**2\n         LA    R2,8                                                     00060**2\nFPREE    CLI   0(R1),C' '          END OF PREFIX                        00061**2\n         BE    MVDSN               YES                                  00062**2\n         LA    R1,1(R1)                                                 00063**2\n         BCT   R2,FPREE                                                 00064**2\nMVDSN    MVI   0(R1),C'.'                                               00065**2\n         LA    R1,1(R1)                                                 00066**2\n         LA    R2,48(R2)               ADD 48 TO COUNT                  00067**2\n         LA    R3,DSNWORK                                               00068**2\nMDSN     CLI   0(R3),C' '          END OF DSN ?                         00069**2\n         BE    VPUTDSN             YES                                  00070**2\n         MVC   0(1,R1),0(R3)                                            00071**2\n         LA    R1,1(R1)                                                 00072**2\n         LA    R3,1(R3)                                                 00073**2\n         BCT   R2,MDSN                                                  00074**2\nVPUTDSN  DS    0H                                                       00075**2\n         LA    R1,56                                                    00076**2\n         SR    R1,R2                                                    00077**2\n         ST    R1,L56                  RESET LENGTH                     00078**2\n         CALL  ISPLINK,(VPUT,PNAME,SHARED),VL                           00079**2\n         CALL  ISPLINK,(VDELETE,PNAME),VL                               00080**2\nLEAVE    $EPILOG                                                        00081**2\n         SPACE                                                          00082**2\nNOPARM   $EPILOG 4                                                      00083**2\n         LTORG                                                          00084**2\nPNAME    DC    C'('                                                     00085**2\nPARM     DC    CL8' '                                                   00086**2\n         DC    C')'                                                     00087**2\nPREFIX   DC    CL56' '                                                  00088**2\nWORK     EQU   PREFIX,56                                                00089**2\nDSNWORK  DC    CL56' '                                                  00090**2\nL8       DC    F'8'                                                     00091**2\nL56      DC    F'56'                                                    00092**2\nOPT      DC    C'(COPY)'                                                00093**2\nSHARED   DC    CL8'SHARED'                                *LBD 07/84*   00094**2\nCHAR     DC    CL8'CHAR'                                                00095**2\nZPREF    DC    C'(ZPREFIX)'                                             00096**2\nVGET     DC    CL8'VGET'                                                00097**2\nVPUT     DC    CL8'VPUT'                                                00098**2\nVDELETE  DC    CL8'VDELETE'                                             00099**2\nVDEFINE  DC    CL8'VDEFINE'                                             00100**2\n         END                                                            00101**2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GENSUB": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08_\\x01\\x01\\x08_\\tG\\x006\\x006\\x00\\x00\\xc3\\xf0\\xf9\\xf5\\xf7\\xf7\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-26T00:00:00", "modifydate": "2001-03-26T09:47:00", "lines": 54, "newlines": 54, "modlines": 0, "user": "C095775"}, "text": "PROC 1 DSN\n\nCONTROL ASIS\nISPEXEC CONTROL ERRORS RETURN             /*                         */\n\n/*                                                                   */\n/* CLIST NAME: GENSUB                                                */\n/*                                                                   */\n/* This CLIST is a generalized SUBMIT CLIST which displays ISPF      */\n/* panel GENSUB and allows the user to cancel the SUBMIT; do the     */\n/* SUBMIT; edit the job prior to SUBMIT; or browse the job prior     */\n/* to SUBMIT.                                                        */\n\nCONTROL PROMPT\n\nSET RC EQ 0\n\nSET &DSNX = &DSN\nISPEXEC VPUT DSNX\nISPEXEC SELECT PGM(FIXUPDSN) PARM(DSNX)     /* SHARE tape program   */\nISPEXEC VGET DSNX\nSET &DSNX = &DSNX  /* REMOVE TRAILING BLANKS PER ISPF/PDF V2 */\n\nDISPLAY: +\nISPEXEC DISPLAY PANEL(GENSUB)\nSET RC EQ &LASTCC\nIF &RC NE 0 THEN GOTO ENDIT\n\nIF &SOPT = END THEN DO\n  SET RC EQ 8\n  GOTO ENDIT\n  END\n\nIF &SOPT = C THEN DO\n  SET RC EQ 12\n  GOTO ENDIT\n  END\n\nIF &SOPT = S THEN DO\n                    SUBMIT '&DSNX'\n                    GOTO ENDIT\n                    END\n\nIF &SOPT = E THEN DO\n  ISPEXEC EDIT DATASET('&DSNX')\n  IF &LASTCC EQ 0 THEN ISPEXEC SETMSG MSG(ISRU244)\n  END\n\nIF &SOPT = B THEN ISPEXEC BROWSE DATASET('&DSNX')\n\nGOTO DISPLAY    /* ASK THE QUESTION AGAIN */\n\nENDIT: +\nEXIT CODE(&RC)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GENSUB#": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x08_\\x01\\x01\\x08_\\tG\\x00\\x1a\\x00\\x1a\\x00\\x00\\xc3\\xf0\\xf9\\xf5\\xf7\\xf7\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-26T00:00:00", "modifydate": "2001-03-26T09:47:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "C095775"}, "text": ")ATTR\n  % TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(&SCUPHHTX)\n  + TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCNTX) HILITE(&SCUPHNTX)\n  _ TYPE(INPUT)  INTENS(HIGH) COLOR(&SCUPCSTI) HILITE(&SCUPHSTI)\n  { TYPE(TEXT)   INTENS(LOW)  COLOR(&SCUPCFDS) HILITE(&SCUPHFDS)\n  } TYPE(OUTPUT) INTENS(LOW)  COLOR(&SCUPCOVR) HILITE(&SCUPHOVR) CAPS(OFF)\n  \\ TYPE(TEXT)   INTENS(HIGH) COLOR(&SCUPCHTX) HILITE(BLINK)\n)BODY\n%-----------------------  BATCH PROCESS SUBMIT PANEL  --------------------------\n%OPTION %===>_OPT\n+\n%    E+- Edit the generated job\n%    B+- Browse the generated job\n%    S+- Submit the generated job\n%    C+- Cancel without Submit\n+\n+Data set containing the generated job is:\n%    }DSNX\n+\n)INIT\n .CURSOR = OPT\n &OPT = &Z\n)PROC\n   &SOPT=TRUNC(&OPT,1)\n   VER (&SOPT,LIST,B,C,E,S)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ISPPLIB": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x01\\x06O\\x01\\x01\\x06O '\\x02\\x96\\x02\\x96\\x00\\x00\\xc3\\xf0\\xf9\\xf5\\xf7\\xf7\\xf5@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-05T00:00:00", "modifydate": "2001-03-05T20:27:00", "lines": 662, "newlines": 662, "modlines": 0, "user": "C095775"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "ISPSLIB": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x06O\\x01\\x01\\x06O\\x18\\x04\\x01J\\x01J\\x00\\x00\\xc3\\xf0\\xf9\\xf5\\xf7\\xf7\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-05T00:00:00", "modifydate": "2001-03-05T18:04:00", "lines": 330, "newlines": 330, "modlines": 0, "user": "C095775"}, "text": "./ ADD NAME=AP1PVSAM 0105-99014-01062-2217-00020-00016-00000-C095775\n//@&ZUSER JOB (DQFQP),'VSAM UTILITY',\n//             CLASS=T,COND=(0,NE),\n)SEL &ENVIRON = F\n//     NOTIFY=&ZUSER,\n)ENDSEL\n//     MSGCLASS=A\n//*    MSGCLASS=&MSGCLASS\n/*ROUTE PRINT FETCH\n/*JOBPARM ROOM=RB\n//*\n//* Recreate VSAM file(s)\n//* (Data is preserved)\n//*\n//*   Restart instructions:\n//*     1) Copy this JCL to whichever library you need to\n//*     2) Remove the steps that have already run\n//*     3) Submit the job\n//*\n//CLEAN    EXEC PGM=U11RMS,PARM='P' <=== THIS MIGHT NOW WORK IN ALL\n//*                                 <=== SHOPS\n./ ADD NAME=AP1PVSM2\n)TB 12\n//*\n//*  Redefine and reload a VSAM file...\n//*\n//*  DSN=&DSNAME\n//*\n\n)SEL &CNT = &Z\n)SET CNT  = 0\n)ENDSEL\n\n)SET CNT  = &CNT + 1\n\n//BKUP&CNT!EXEC PGM=IDCAMS\n//SYSIN     DD *\n REPRO IFILE(IN01) OFILE(OUT01) REUSE\n//IN01      DD DSN=&DSNAME,DISP=SHR,\n//             AMP=('BUFND=40,BUFNI=20')\n//OUT01     DD DSN=&BKUPHLQ..&DSNAME,\n//             DISP=(,CATLG,DELETE),\n//             SPACE=(CYL,(&NEWPRIM,&NEWSEC),RLSE),\n//             RECFM=VB,LRECL=27994,BLKSIZE=0,BUFNO=20\n//SYSPRINT  DD SYSOUT=*\n./ ADD NAME=AP1PVSM3 0100-99028-99028-1717-00063-00063-00000-C095775\n)TB 12\n//RDEF&CNT!EXEC PGM=IDCAMS\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD *\n    DELETE &DSNAME CLUSTER\n    DEFINE CLUSTER -\n       (NAME(&DSNAME) -\n       FREESPACE(&NEWCIFP &NEWCAFP) -\n       INDEXED -\n       KEYS(&KEYLEN &KEYOFF) -\n\n)SEL &MACHINE = PROD\n       VOLUME(&VOLSER) -\n)ENDSEL\n\n       RECORDSIZE(&AVGLRECL &MAXLRECL) -\n       REUSE -\n       SHAREOPTIONS(2 3) -\n       SPEED ) -\n    DATA(NAME(&DSNAME..DATA) -\n     CYLINDERS(&NEWPRIM &NEWSEC) -\n     CONTROLINTERVALSIZE(&NEWDCIS)) -\n    INDEX(NAME(&DSNAME..INDEX) -\n     TRACKS(1 5) -\n     CONTROLINTERVALSIZE(&NEWICIS))\n\n    IF MAXCC = 8 THEN SET MAXCC = 0\n)SEL &PDSMEM \u00ac= &Z\n)SEL &ENVIRON = B\n//*\n//* Save off delete/define cards to specified PDS member\n//* (specified on the DSNLIST input card).\n//*\n//PDS&CNT!EXEC PGM=ICEGENER\n//SYSIN     DD DUMMY\n//SYSUT1    DD *\n    DELETE &DSNAME CLUSTER\n    DEFINE CLUSTER -\n       (NAME(&DSNAME) -\n       FREESPACE(&NEWCIFP &NEWCAFP) -\n       INDEXED -\n       KEYS(&KEYLEN &KEYOFF) -\n\n)SEL &MACHINE = PROD\n       VOLUME(&VOLSER) -\n)ENDSEL\n\n       RECORDSIZE(&AVGLRECL &MAXLRECL) -\n       REUSE -\n       SHAREOPTIONS(2 3) -\n       SPEED ) -\n    DATA(NAME(&DSNAME..DATA) -\n     CYLINDERS(&NEWPRIM &NEWSEC) -\n     CONTROLINTERVALSIZE(&NEWDCIS)) -\n    INDEX(NAME(&DSNAME..INDEX) -\n     TRACKS(1 5) -\n     CONTROLINTERVALSIZE(&NEWICIS))\n\n    IF MAXCC = 8 THEN SET MAXCC = 0\n//SYSUT2    DD DSN=&PDSMEM,DISP=SHR\n//SYSPRINT  DD SYSOUT=*\n)ENDSEL\n)ENDSEL\n./ ADD NAME=AP1PVSM4\n)TB 12\n//REST&CNT!EXEC PGM=IDCAMS\n//SYSIN     DD *\n REPRO IFILE(IN01) OFILE(OUT01) REUSE\n//IN01      DD DSN=&BKUPHLQ..&DSNAME,\n//             DISP=SHR\n//OUT01     DD DSN=&DSNAME,DISP=SHR,\n//             AMP=('BUFND=40,BUFNI=20')\n//SYSPRINT  DD SYSOUT=*\n//DELT&CNT!EXEC PGM=IEFBR14\n//DD1       DD DSN=&BKUPHLQ..&DSNAME,\n//             DISP=(OLD,DELETE,DELETE)\n./ ADD NAME=AP1PVSM5 0100-99014-99014-1719-00166-00166-00000-C095775\n)SEL &VSMKEYL = YES\n//*\n//*  VSAM index analysis. This program will tell you if the index\n//*  CI is large enough to properly address all data CIs in the\n//*  control area.\n//*\n//*  DSN=&INDEXNAM\n//*\n//STEP020  EXEC SAS\n//*******************************************************************\n//* VSAMCI - CHANGE CICA=XX       SOURCE: MAINFRAME JOURNAL         *\n//*******************************************************************\n//IXFILE    DD DSN=&INDEXNAM,DISP=SHR\n//RESULTS   DD SYSOUT=*\n//SYSIN     DD *\nDATA _NULL_;\nCICA=&CIPERCA;\nINFILE IXFILE END=NOMORE;\nINPUT @1   IXLEN    PIB2.\n      @4   PTRLEN   PIB1.\n      @17  IXTYPE   PIB1.\n      @19  UNUSPC   PIB2.\n      @21  FIRSTKEY PIB2.;\nIF _N_ = 1 THEN DO;\n  KEYSUM  = 0;\n  IXRECS  = 0;\n  TOTCIS  = 0;\n  TOTUCIS = 0;\nEND;\n\nIF IXTYPE = 1 THEN GO TO CONT;\n\nGO TO READNEXT;\n\nCONT: IXRECS + 1;\nKEYSPACE = IXLEN - FIRSTKEY;\n\nIF UNUSPC = 24 THEN\n  DO;\n    AVGKEY = KEYSPACE / CICA;\n    AVGKEY = ROUND(AVGKEY);\n    AVGKEY + 1;\n    KEYSUM + AVGKEY;\n    IF NOMORE = 0 THEN\n      DO;\n        TOTCIS + CICA;\n      END;\n    FILE RESULTS;\n    PUT @08 'INDEX RECORD '\n        @25 IXRECS\n        @35 'AVERAGE KEY LENGTH'\n        @60 AVGKEY  3.;\n    GO TO READNEXT;\n  END;\n\nLISTLEN = UNUSPC - 24;\n\nIF PTRLEN = 1 THEN DO;\n   NOPTRS = LISTLEN / 1;\n   END;\n\nIF PTRLEN = 3 THEN DO;\n   NOPTRS = LISTLEN / 2;\n   END;\n\nIF PTRLEN = 7 THEN DO;\n   NOPTRS = LISTLEN / 3;\n   END;\n\nUSEDCI = CICA - NOPTRS;\nAVGKEY = KEYSPACE / USEDCI;\nAVGKEY = ROUND(AVGKEY);\nAVGKEY + 1;\nKEYSUM + AVGKEY;\n\nIF NOMORE = 0 THEN DO;\n   TOTCIS + CICA;\n   TOTUCIS + NOPTRS;\n   END;\n\nFILE RESULTS;\nPUT @08 'INDEX RECORD '\n    @25 IXRECS\n    @35 'AVERAGE KEY LENGTH'\n    @60 AVGKEY  3.;\n\nGO TO READNEXT;\n\nREADNEXT: IF NOMORE THEN GO TO PRTRTN;\nRETURN;\n\nPRTRTN: KLENAVG = KEYSUM / IXRECS;\nKLENAVG = ROUND(KLENAVG);\nMINSIZE = KLENAVG * CICA;\nIXSIZE = IXLEN + 7;\n\nIF MINSIZE GT IXLEN THEN DO;\n   FILE RESULTS;\n   PUT @08 //\n       @08 '*****  INDEX CI SIZE ANALYSIS      *****'//\n       @08 '*****  INDEX CI SIZE IS TOO SMALL  *****'/\n       @08 'THE CURRENT INDEX CI SIZE IS ' IXSIZE /\n       @08 'THE MINIMUM SIZE THE INDEX CI SHOULD BE IS '\n       @52 MINSIZE 5.//\n       @08 'THIS WILL ALLOW THE INDEX RECORDS TO ADDRESS '/\n       @08 CICA 3.\n       @13 'CIS IN THE CONTROL AREAS'/;\n   END;\nELSE DO;\n   FILE RESULTS;\n   PUT @08 //\n       @08 '*****  INDEX CI SIZE ANALYSIS       *****'//\n       @08 '*****  INDEX CI SIZE IS SUFFICIENT  *****'/\n       @08 'THE CURRENT INDEX CI SIZE IS ' IXSIZE /\n       @08 'THE MINIMUM SIZE THE INDEX CI SHOULD BE IS '\n       @52 MINSIZE 5.//\n       @08 'THIS WILL ALLOW THE INDEX RECORDS TO ADDRESS '/\n       @08 CICA 3.\n       @13 'CIS IN THE CONTROL AREAS'/;\n   END;\n\nPCTUNU = TOTUCIS / TOTCIS;\nPCTUNU = PCTUNU * 100;\n\nFILE RESULTS;\nPUT @08 //\n    @08 '*****  INDEX RECORD PROCESSING SUMMARY  *****'//\n    @08 'AVERAGE KEY LENGTH CALCULATED'\n    @45 KLENAVG 3. /\n    @08 'INDEX RECORDS PROCESSED'\n    @43 IXRECS  5.//\n    @08 '*****  DASD SPACE UTILIZATION ANALYSIS  *****'//\n    @08 'TOTAL CI IN CLUSTER'\n    @45 TOTCIS/\n    @08 'TOTAL UNUSED CI IN CLUSTER'\n    @45 TOTUCIS/\n    @08 'PERCENT OF FILE EMPTY'\n    @45 PCTUNU 3.//;\n)ENDSEL\n\n)SEL &VSMAVGL = YES\n//*\n//*  This program calculates the true average LRECL, which is\n//*  useful documentation for VSAM space management.\n//*\n//*  If the true AVGLRECL is different from that specified in the\n//*  catalog, you should redefine and reload the file.\n//*\n//*  NOTE: If the file is compressed, the true average LRECL will\n//*        be even smaller. BMC decompresses the data for the\n//*        SAS program.\n//*\n//*  DSN=&INDEXNAM\n//*\n//STEP030  EXEC SAS                                                     GMASMBT\n//VSAMFILE  DD DSN=&DSNAME,DISP=SHR,\n//             AMP=('BUFND=40,BUFNI=20')\n//SYSIN     DD *\nDATA OLD (KEEP = FILELEN);\n\nINFILE VSAMFILE LENGTH=LEN;\nINPUT;\nFILELEN = LEN;\nPROC MEANS;\n)ENDSEL\n\n./ ADD NAME=AP1PVSM6 0101-99014-99028-1718-00040-00040-00000-C095775\n)TB 12\n)SEL &PDSMEM \u00ac= &Z\n)SEL &ENVIRON = B\n//*\n//* Save off delete/define cards to specified PDS member\n//* (specified on the DSNLIST input card).\n//*\n//PDS&CNT!EXEC PGM=RNBUTLTY,PARM='ICEGENER,RC=00'\n//RNBSYSIN  DD DUMMY\n//SYSIN     DD DUMMY\n//SYSUT1    DD *\n    DELETE &DSNAME CLUSTER\n    DEFINE CLUSTER -\n       (NAME(&DSNAME) -\n       FREESPACE(&NEWCIFP &NEWCAFP) -\n       INDEXED -\n\n)SEL &SPANNED = Y\n       SPANNED -\n)ENDSEL\n\n       KEYS(&KEYLEN &KEYOFF) -\n       RECORDSIZE(&AVGLRECL &MAXLRECL) -\n       REUSE -\n       SHAREOPTIONS(&SHROPTNS) -\n       SPEED ) -\n    DATA(NAME(&DSNAME..DATA) -\n     CYLINDERS(&NEWPRIM &NEWSEC) -\n     VOLUME( &VOLUME ) -\n     CONTROLINTERVALSIZE(&NEWDCIS)) -\n    INDEX(NAME(&DSNAME..INDEX) -\n     TRACKS(&INDXPRIM &INDXSEC) -\n     VOLUME( * ) -\n     CONTROLINTERVALSIZE(&NEWICIS))\n\n    IF MAXCC = 8 THEN SET MAXCC = 0\n//SYSUT2    DD DSN=&PDSMEM,DISP=SHR\n//SYSPRINT  DD SYSOUT=*\n)ENDSEL\n)ENDSEL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "VSAMCL": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x99\\x01O\\x01\\x01\\t?\\x15X\\x00P\\x00A\\x00\\x00\\xc3\\xf0\\xf9\\xf5\\xf7\\xf7\\xf5@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1999-01-14T00:00:00", "modifydate": "2001-04-03T15:58:00", "lines": 80, "newlines": 65, "modlines": 0, "user": "C095775"}, "text": "/**********************************************************************/\n/*                                                                    */\n/*  CLIST NAME:       VSAMCL                                          */\n/*                                                                    */\n/*  AUTHOR:                                                           */\n/*    Geoffrey McIntyre.                                              */\n/*                                                                    */\n/*  LAST UPDATE:      April 3, 2001.                                  */\n/*                                                                    */\n/*  DESCRIPTION:                                                      */\n/*                                                                    */\n/*    Invokes a pgm that displays VSAM information, allowing the      */\n/*    user to re-allocate the file (with data), analyze the index     */\n/*    for proper size, or calculate the true average LRECL.           */\n/*                                                                    */\n/*    The DSN LEVEL is \"remembered\" from session to session.          */\n/*                                                                    */\n/*    Uncomment the LIBDEF statements if you need them (if the        */\n/*    the non-CLIST elements are not in the appropriate ISPF          */\n/*    allocations).                                                   */\n/*                                                                    */\n/*  CALLING PARMS:    NONE                                            */\n/*                                                                    */\n/*  RETURNED PARMS:   NONE                                            */\n/*                                                                    */\n/*  TABLES:           NONE                                            */\n/*                                                                    */\n/*  MSGS:             NONE                                            */\n/*                                                                    */\n/*  SKELETONS:        NONE                                            */\n/*                                                                    */\n/*  PANELS:           IDC                                             */\n/*                                                                    */\n/*  CALLED FUNCTIONS: ISPEXEC:  CONTROL   LIBDEF                      */\n/*                    OTHER:    AP1PVSAM                              */\n/*                                                                    */\n/**********************************************************************/\nISPEXEC CONTROL ERRORS RETURN             /*                          */\nTOP:                                      -\nISPEXEC DISPLAY PANEL(IDC)                /* ENTRY PANEL              */\nIF &LASTCC = 8 THEN                                                    +\n   DO\n/*   ISPEXEC LIBDEF ISPLLIB DATASET\n/*   ISPEXEC LIBDEF ISPSLIB DATASET\n/*   ISPEXEC LIBDEF ISPPLIB DATASET\n     EXIT\n   END\nCONTROL NOMSG                             /*                          */\nDELETE IDCAMS.OUTPUT                      /*                          */\nCONTROL MSG                               /*                          */\nALLOC F(LISTCAT) DA(IDCAMS.OUTPUT) NEW CATALOG SP(10 1) TRACK   -\n                 LRECL(125) RECFM(V B A) BLKSIZE(11476) RELEASE REUSE\nLISTC EN('&LEVEL') ALL OUTFILE(LISTCAT)   /*                       */\n\nIF &LASTCC NE 0 THEN GOTO TOP\n\nALLOC F(EXCPRPT) DUMMY REUSE\nALLOC F(CHNGRPT) DUMMY REUSE\nALLOC F(REGISET) DUMMY REUSE\nALLOC F(DSNLIST) DUMMY REUSE\nALLOC F(SYSIN)   DUMMY REUSE\n\n/*ISPEXEC LIBDEF ISPLLIB DATASET ID(',,,,,,,,.loadlib')\n/*ISPEXEC LIBDEF ISPSLIB DATASET ID(',,,,,,,,.ispslib')\n/*ISPEXEC LIBDEF ISPPLIB DATASET ID(',,,,,,,,.ispplib')\n\nSET TSOLEN = &LENGTH(&SYSUID)\nSELECT &TSOLEN\n  WHEN (7) SET PARMSTR = &STR(FTEST&SYSUID &SYSUID.VU)\n  WHEN (6) SET PARMSTR = &STR(FTEST&SYSUID  &SYSUID.VVU)\n  WHEN (5) SET PARMSTR = &STR(FTEST&SYSUID   &SYSUID.VVVU)\n  WHEN (4) SET PARMSTR = &STR(FTEST&SYSUID    &SYSUID.VVVVU)\n  WHEN (3) SET PARMSTR = &STR(FTEST&SYSUID     &SYSUID.VVVVVU)\n  WHEN (2) SET PARMSTR = &STR(FTEST&SYSUID      &SYSUID.VVVVVVU)\nEND\n\n/*ISPEXEC SELECT PGM(VSAMPGM) PARM(FTEST&SYSUID &SYSUID.VU)\nISPEXEC SELECT PGM(VSAMPGM) PARM(&STR(&PARMSTR))\n\nGOTO TOP                                  /*                          */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VSAMPGM": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x01\\x06/\\x01\\x01\\x06/!Y\\x0c\\x0b\\x0c\\n\\x00\\x00\\xc3\\xf0\\xf9\\xf5\\xf7\\xf7\\xf5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-03-03T00:00:00", "modifydate": "2001-03-03T21:59:00", "lines": 3083, "newlines": 3082, "modlines": 0, "user": "C095775"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. VSAMPGM.\n000300 AUTHOR.     GEOFFREY MCINTYRE.\n000400 DATE-WRITTEN. APRIL 18, 1997.\n000500 DATE-COMPILED.\n000600*REMARKS.\n000700*  TITLE: VSAM space manager.\n000800*\n000900*  This program is an interactive ISPF dialog function.\n001000*  It can also run in batch (see parm info).\n001100*\n001200*  INPUT:    DSNLIST  - A list of VSAM KSDS cluster names to be\n001300*                       monitored/processed.\n001400*            LISTCAT  - IDCAMS LISTCAT output created by a call\n001500*                       to IDCAMS.\n001600*            REGISET  - The Datapacker list of registered files.\n001700*            PARM     - Parm info is recieved in linkage.\n001800*\n001900*  PROCESS:- A LISTCAT is performed on each VSAM dataset. The LISTCAT\n002000*            output is parsed for various pieces of information.\n002100*\n002200*            Statistics and parameters that affect performance or\n002300*            space requirements are analyzed. For VSAM files that\n002400*            are poorly allocated, JCL to redefine the file is\n002500*            automatically generated (data is preserved) in batch.\n002600*\n002700*            If running in foreground, the user specifies a single\n002800*            VSAM file, and can choose whether or not to recreate\n002900*            the file. The user can also generate and submit a job\n003000*            that calculates the true average LRECL, and another job\n003100*            that analyzes the index portion.\n003200*\n003300*  OUTPUT:   ISPFILE  - Generated JCL. There is no FD for ISPFILE,\n003400*                       because this is an ISPF dialog that calls\n003500*                       file tailoring (skeletons), which in turn\n003600*                       writes to ISPFILE.\n003700*            SYSIN    - The IDCAMS LISTCAT card is created by this\n003800*                       program and written to SYSIN, which in turn\n003900*                       is read by a call to IDCAMS.\n004000*            EXCPRPT  - Exception report. Shows which files were\n004100*                       bypassed or processed, and for what reason.\n004200*            CHNGRPT  - Change report. Shows the before and after\n004300*                       values of the VSAM delete/define cards. Also\n004400*                       shows individual and total savings by cylinders\n004500*                       and dollars.\n004600*\n004700*   MAINTENANCE NOTES:\n004800*\n004900*----------------------------------------------------------------*\n005000*  When DASD costs change, then you need to change               *\n005100*     WS-DAILY-GB-COST    (currently $19.82).                    *\n005200*                                                                *\n005300*  When new disk drives come in, the cylinder size might change. *\n005400*  You will need to change                                       *\n005500*   - WS-GIGABYTE-PER-CYL (currently .000811).                   *\n005600*   - WS-TRACKS-PER-CYL   (currently 15).                        *\n005700*   - The EVALUATE clause in 0518- will need changing.           *\n005800*   - Where WS-CIS-FOR-INDEX-SET is calculated, the number       *\n005900*     248 may need adjusting. Call RTI for the new number.       *\n006000*   - Where INDXPRIM is calculated, the number 21 (number of     *\n006100*     2048-CISIZES per track) may need adjusting.                *\n006200*                                                                *\n006300*----------------------------------------------------------------*\n006400*     This program is an ISPF dialog. 'ISPEXEC' and 'ISPLINK' are\n006500*     used to call several ISPF service functions. If you are not\n006600*     familiar with ISPF services, it may be helpful to have an\n006700*     ISPF manual at your side (SC34-4266 and SC34-4259).  Many of\n006800*     the ISPF functions are intuitive; for example, TBSORT sorts\n006900*     a table, DISPLAY displays a panel, etc.\n007000*\n007100*     If you have coded CLISTs that use ISPF functions, the\n007200*     ISPEXEC method of invoking ISPF services will be most\n007300*     familiar to you:  the syntax of the CALL mechanism is almost\n007400*     precisely the same as in a CLIST. The ISPLINK method uses\n007500*     several different fields in its CALL mechanism.\n007600*\n007700*     Working-Storage definitions for successful handling of\n007800*     dialog variables is critical and a little complex. Once\n007900*     understood, however, the process is not difficult. Every\n008000*     variable that must be shared between the COBOL program and\n008100*     any panels, skeletons, tables, and/or CLISTs invoked by the\n008200*     COBOL program must be defined in Working-Storage using 4\n008300*     lists, as described below. In other words, if the COBOL\n008400*     program needs to read or update the contents of any given\n008500*     variable referenced by a skeleton, panel, etc.,\n008600*     addressibility for that variable needs to be established as\n008700*     described below:\n008800*\n008900*     C A U T I O N !!\n009000*       When adding or deleting an ISPF-variable, you must also\n009100*       update 4 lists:  ISPF-LENGTH-LIST,\n009200*                        ISPF-NAME-VDEFINE,\n009300*                        ISPF-VARIABLE-LIST, and\n009400*                        ISPF-FORMAT-LIST.\n009500*\n009600*       These lists are positional in relation to each other, so\n009700*       be careful! Each entry in each list must correspond to\n009800*       each other, or else unpredictable results will occur! The\n009900*       entries are maintained in alphabetical order to make it\n010000*       easier to keep the 4 lists in sync.\n010100*\n010200*       You must also adjust  ISPF-NAME-CNT  to reflect the\n010300*       new number of variables!!!\n010400*\n010500*     An alternative to executing a single VDEFINE with these 4\n010600*     lists is to execute a VDEFINE separately for each variable.\n010700*     (If you have 100 variables to define, that's 100 CALLs).\n010800*     The author of this program has chosen the LIST version.\n010900*\n011000*       With the advent of COBOL II, it is possible for the program\n011100*       to do a little self-checking to help verify that the 4 lists\n011200*       are in sync. This program performs the following checks:\n011300*\n011400*           1)  It verifies that ISPF-LENGTH-LIST has precisely\n011500*               as many entries as indicated by ISPF-NAME-CNT.\n011600*\n011700*           2)  It verifies that ISPF-NAME-VDEFINE has precisely\n011800*               as many entries as indicated by ISPF-NAME-CNT.\n011900*\n012000*           3)  It verifies that ISPF-FORMAT-LIST has precisely\n012100*               as many entries as indicated by ISPF-NAME-CNT.\n012200*\n012300*           4)  It verifies that ISPF-VARIABLE-LIST is precisely\n012400*               as long as the sum of the contents of each and\n012500*               every entry in ISPF-LENGTH-LIST.\n012600*\n012700*       It does NOT verify that the individual entries are sorted\n012800*       properly. YOU MUST VERIFY THAT THE 4 LISTS ARE SORTED PRO-\n012900*       PERLY!\n013000*\n013100*       If one or more of the above checks fail, an information\n013200*       panel indicating the problem is displayed, and the program\n013300*       exits.\n013400*\n013500*      _______________________________________________________________\n013600*\n013700********************************************************************\n013800 ENVIRONMENT DIVISION.\n013900 CONFIGURATION SECTION.\n014000 SOURCE-COMPUTER. IBM-370.\n014100 OBJECT-COMPUTER. IBM-370.\n014200 INPUT-OUTPUT SECTION.\n014300 FILE-CONTROL.\n014400     SELECT LISTCAT              ASSIGN TO LISTCAT.\n014500     SELECT DSNLIST              ASSIGN TO DSNLIST.\n014600     SELECT SYSIN                ASSIGN TO SYSIN.\n014700     SELECT EXCPRPT              ASSIGN TO EXCPRPT.\n014800     SELECT CHNGRPT              ASSIGN TO CHNGRPT.\n014900     SELECT REGISET              ASSIGN TO REGISET\n015000            ORGANIZATION IS INDEXED\n015100            ACCESS MODE  IS DYNAMIC\n015200            RECORD KEY   IS REG-KEY\n015300            FILE STATUS  IS VSAM-STATUS.\n015400\n015500 DATA DIVISION.\n015600 FILE SECTION.\n015700\n015800 FD  LISTCAT\n015900     BLOCK CONTAINS 0 RECORDS\n016000     LABEL RECORDS ARE STANDARD.\n016100 01  FILLER                               PIC X(121).\n016200 01  FILLER                               PIC X(008).\n016300\n016400 FD  DSNLIST\n016500     BLOCK CONTAINS 0 RECORDS\n016600     LABEL RECORDS ARE STANDARD.\n016700 01  DSNLIST-RECORD.\n016800     05  FILLER                           PIC X(01).\n016900         88 COMMENT-CARD                      VALUE '*'.\n017000         88 SIMULATE-CARD                     VALUE 'S'.\n017100     05  DSNLIST-SPECIAL-PROCESSING       PIC X(01).\n017200         88  PRESERVE-CISIZE                 VALUE 'P'.\n017300         88  BATCH-OPTIMAL-CISIZE            VALUE 'B'.\n017400         88  OPT-CISIZE-AND-100-PERCENT      VALUE '1'.\n017500     05  VSAM-DATASET-NAME                PIC X(38).\n017600     05  PDS-UPDATE-MEMBER                PIC X(40).\n017700\n017800 FD  SYSIN\n017900     BLOCK CONTAINS 0 RECORDS\n018000     LABEL RECORDS ARE STANDARD.\n018100 01  SYSIN-RECORD                         PIC X(80).\n018200\n018300 FD  EXCPRPT\n018400     BLOCK CONTAINS 0 RECORDS\n018500     LABEL RECORDS ARE STANDARD.\n018600 01  EXCPRPT-RECORD.\n018700     05  ER-ASA-CONTROL                   PIC X(01).\n018800     05  ER-SPECIAL-FLAG                  PIC X(01).\n018900         88  ER-COMPRESSED-FILE               VALUE '*'.\n019000         88  ER-SIMULATED-RUN                 VALUE 'S'.\n019100     05  ER-DATASET-NAME                  PIC X(38).\n019200     05  FILLER                           PIC X(01).\n019300     05  ER-EXCEPTION                     PIC X(46).\n019400     05  FILLER                           PIC X(01).\n019500     05  ER-ACTION                        PIC X(45).\n019600\n019700 FD  CHNGRPT\n019800     BLOCK CONTAINS 0 RECORDS\n019900     LABEL RECORDS ARE STANDARD.\n020000 01  CHNGRPT-RECORD                       PIC X(133).\n020100\n020200 FD  REGISET\n020300     BLOCK CONTAINS 0 RECORDS\n020400     LABEL RECORDS ARE STANDARD.\n020500 01  FILLER                               PIC X(1000).\n020600 01  FILLER                               PIC X(4087).\n020700 01  BMC-REGISTRATION.\n020800     05  REG-KEY                          PIC X(64).\n020900     05  FILLER                           PIC X(42).\n021000     05  BMC-COMPRESSION-FLAG             PIC X(01).\n021100         88  BMC-COMPRESSED-FILE              VALUE 'Y'.\n021200\n021300 WORKING-STORAGE SECTION.\n021400\n021500 01  WS-LISTCAT-RECORD                    PIC X(121).\n021600\n021700 01  WS-REG-KEY.\n021800     05  FILLER                           PIC X(02) VALUE 'DD'.\n021900     05  BMC-VSAM-DATASET-NAME            PIC X(44).\n022000     05  FILLER                           PIC X(18)\n022100                                              VALUE LOW-VALUES.\n022200\n022300******************************************************************\n022400*                                                                *\n022500*         WORKING-STORAGE FIELDS FOR ISPF SERVICE CALLS          *\n022600*                                                                *\n022700******************************************************************\n022800 01  ISPF-BUFFER             PICTURE X(150)     VALUE SPACES.\n022900*    ISPF-BUFFER FIELD LENGTH CAN BE INCREASED IF NECESSARY.\n023000 01  ISPF-BUF-LENGTH         PICTURE 9(6)  COMP VALUE 150.\n023100 01  ISPF-OPTION1            PICTURE X(8)       VALUE SPACES.\n023200 01  ISPF-OPTION2            PICTURE X(8)       VALUE SPACES.\n023300 01  ISPF-TABLE-NAME         PICTURE X(8)       VALUE SPACES.\n023400 01  ISPF-VDEFINE-OPTION                 PIC X(12)\n023500                                         VALUE '(COPY, LIST)'.\n023600\n023700* DEFINE DIALOG SERVICE TYPES FOR CALLS TO ISPF.\n023800 01  TBCREATE                  PIC X(08) VALUE 'TBCREATE'.\n023900 01  VDEFINE                   PIC X(08) VALUE 'VDEFINE '.\n024000 01  VDELETE                   PIC X(08) VALUE 'VDELETE '.\n024100\n024200******************************************************************\n024300*    ISPF-KEY-LIST IS USED BY THE TBCREATE SERVICE TO NAME THE   *\n024400*                 VARIABLES TO BE USED AS KEYS IN THE TABLE TO   *\n024500*                 BE CREATED                                     *\n024600 01  ISPF-KEY-LIST.\n024700     05  ISPF-KEY-COUNT      PICTURE 9(6)  COMP VALUE ZEROES.\n024800     05  FILLER              PICTURE 9(6)  COMP VALUE ZEROES.\n024900     05  ISPF-KEY       OCCURS  5 TIMES         PICTURE X(8).\n025000*        THIS ARRAY HAS BEEN DEFINED WITH A DIMENSION OF 5.      *\n025100*                 ADJUST ACCORDING TO YOUR REQUIREMENTS.         *\n025200******************************************************************\n025300     EJECT\n025400******************************************************************\n025500*    ISPF-LENGTH-LIST IS USED BY THE VDEFINE SERVICE             *\n025600*                    TO SPECIFY THE LENGTH OF THE DATA FOR THE   *\n025700*                    VARIABLES(S) IN A NAME LIST. EACH LENGTH    *\n025800*                    CORRESPONDS BY POSITION TO A VARIABLE IN    *\n025900*                    THE NAME LIST, SO THERE MUST BE AS MANY     *\n026000*                    LENGTHS AS THERE ARE NAMES IN THE LIST.     *\n026100******************************************************************\n026200 01  ISPF-LENGTH-LIST.\n026300     05  FILLER                          PIC 9(06) COMP VALUE  4. AACLOIFL\n026400     05  FILLER                          PIC 9(06) COMP VALUE  4. AACLOILL\n026500     05  FILLER                          PIC 9(06) COMP VALUE  4. AACLOINV\n026600     05  FILLER                          PIC 9(06) COMP VALUE  4. AACLOIVL\n026700     05  FILLER                          PIC 9(06) COMP VALUE  4. AALOIFL\n026800     05  FILLER                          PIC 9(06) COMP VALUE  4. AALOILL\n026900     05  FILLER                          PIC 9(06) COMP VALUE  4. AALOINV\n027000     05  FILLER                          PIC 9(06) COMP VALUE  4. AALOIVL\n027100     05  FILLER                          PIC 9(06) COMP VALUE  4. ABCODE\n027200     05  FILLER                          PIC 9(06) COMP VALUE  8. ABFUNC\n027300     05  FILLER                          PIC 9(06) COMP VALUE 70. ABMISC\n027400     05  FILLER                          PIC 9(06) COMP VALUE 70. ABMSG\n027500     05  FILLER                          PIC 9(06) COMP VALUE 30. ABPARA\n027600     05  FILLER                          PIC 9(06) COMP VALUE  2. ABVSAM\n027700     05  FILLER                          PIC 9(06) COMP VALUE  8. ADDRECS\n027800     05  FILLER                          PIC 9(06) COMP VALUE  5. ALLOCCYL\n027900     05  FILLER                          PIC 9(06) COMP VALUE  5. ARECSZ\n028000     05  FILLER                          PIC 9(06) COMP VALUE  5. AVGLRECL\n028100     05  FILLER                          PIC 9(06) COMP VALUE  5. AVGLRECT\n028200     05  FILLER                          PIC 9(06) COMP VALUE  8. BKUPHLQ\n028300     05  FILLER                          PIC 9(06) COMP VALUE  1. BMCFLAG\n028400     05  FILLER                          PIC 9(06) COMP VALUE  5. CIFBYTES\n028500     05  FILLER                          PIC 9(06) COMP VALUE  5. CIPERCA\n028600     05  FILLER                          PIC 9(06) COMP VALUE  5. CISIZED\n028700     05  FILLER                          PIC 9(06) COMP VALUE  5. CISIZED2\n028800     05  FILLER                          PIC 9(06) COMP VALUE  5. CISIZEI\n028900     05  FILLER                          PIC 9(06) COMP VALUE  8. COLALC\n029000     05  FILLER                          PIC 9(06) COMP VALUE  8. COLCAS\n029100     05  FILLER                          PIC 9(06) COMP VALUE  8. COLCIP\n029200     05  FILLER                          PIC 9(06) COMP VALUE  8. COLCIS\n029300     05  FILLER                          PIC 9(06) COMP VALUE  8. COLDCI\n029400     05  FILLER                          PIC 9(06) COMP VALUE  8. COLEXT\n029500     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFCA\n029600     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFCI\n029700     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFLG1\n029800     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFLG2\n029900     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFLG3\n030000     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFLG4\n030100     05  FILLER                          PIC 9(06) COMP VALUE  8. COLFLG5\n030200     05  FILLER                          PIC 9(06) COMP VALUE  8. COLICI\n030300     05  FILLER                          PIC 9(06) COMP VALUE  8. COLKEY\n030400     05  FILLER                          PIC 9(06) COMP VALUE  8. COLPCT\n030500     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTALLFS\n030600     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTCAFS\n030700     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTCIFS\n030800     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTTOTAL\n030900     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTUFS\n031000     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTUNUSD\n031100     05  FILLER                          PIC 9(06) COMP VALUE 13. CSTUSDFS\n031200     05  FILLER                          PIC 9(06) COMP VALUE 44. DSNAME\n031300     05  FILLER                          PIC 9(06) COMP VALUE  1. ENVIRON\n031400     05  FILLER                          PIC 9(06) COMP VALUE  5. EXTENTS\n031500     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECA\n031600     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECI\n031700     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP1\n031800     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP2\n031900     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP3\n032000     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP4\n032100     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP5\n032200     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP6\n032300     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP7\n032400     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP8\n032500     05  FILLER                          PIC 9(06) COMP VALUE  3. FREECIP9\n032600     05  FILLER                          PIC 9(06) COMP VALUE 44. INDEXNAM\n032700     05  FILLER                          PIC 9(06) COMP VALUE  4. INDXPRIM\n032800     05  FILLER                          PIC 9(06) COMP VALUE  4. INDXSEC\n032900     05  FILLER                          PIC 9(06) COMP VALUE  8. JOBNAME\n033000     05  FILLER                          PIC 9(06) COMP VALUE  5. KEYLEN\n033100     05  FILLER                          PIC 9(06) COMP VALUE  5. KEYOFF\n033200     05  FILLER                          PIC 9(06) COMP VALUE  4. MACHINE\n033300     05  FILLER                          PIC 9(06) COMP VALUE  5. MAXLRECL\n033400     05  FILLER                          PIC 9(06) COMP VALUE  1. MSGCLASS\n033500     05  FILLER                          PIC 9(06) COMP VALUE  3. NEWCAFP\n033600     05  FILLER                          PIC 9(06) COMP VALUE  3. NEWCIFP\n033700     05  FILLER                          PIC 9(06) COMP VALUE  5. NEWDCIS\n033800     05  FILLER                          PIC 9(06) COMP VALUE  5. NEWICIS\n033900     05  FILLER                          PIC 9(06) COMP VALUE  4. NEWPRIM\n034000     05  FILLER                          PIC 9(06) COMP VALUE  4. NEWSEC\n034100     05  FILLER                          PIC 9(06) COMP VALUE  3. OLDCAFP\n034200     05  FILLER                          PIC 9(06) COMP VALUE  3. OLDCIFP\n034300     05  FILLER                          PIC 9(06) COMP VALUE  5. OLDDCIS\n034400     05  FILLER                          PIC 9(06) COMP VALUE  5. OLDICIS\n034500     05  FILLER                          PIC 9(06) COMP VALUE  5. OLDPRIM\n034600     05  FILLER                          PIC 9(06) COMP VALUE  5. OLDSEC\n034700     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTALLFS\n034800     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTCAFS\n034900     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTCIFS\n035000     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTUFS\n035100     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTUNUSD\n035200     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTUSDFS\n035300     05  FILLER                          PIC 9(06) COMP VALUE  6. PCTUSED\n035400     05  FILLER                          PIC 9(06) COMP VALUE 41. PDSMEM\n035500     05  FILLER                          PIC 9(06) COMP VALUE  5. PRIMARY\n035600     05  FILLER                          PIC 9(06) COMP VALUE 10. RECCNT\n035700     05  FILLER                          PIC 9(06) COMP VALUE 10. RECDEL\n035800     05  FILLER                          PIC 9(06) COMP VALUE 10. RECINS\n035900     05  FILLER                          PIC 9(06) COMP VALUE  5. RECPCYL\n036000     05  FILLER                          PIC 9(06) COMP VALUE 10. RECREAD\n036100     05  FILLER                          PIC 9(06) COMP VALUE  9. RECTOTAL\n036200     05  FILLER                          PIC 9(06) COMP VALUE 10. RECUPD\n036300     05  FILLER                          PIC 9(06) COMP VALUE  6. SAVEDCYL\n036400     05  FILLER                          PIC 9(06) COMP VALUE 13. SAVEDDOL\n036500     05  FILLER                          PIC 9(06) COMP VALUE  5. SECNDARY\n036600     05  FILLER                          PIC 9(06) COMP VALUE  3. SHROPTNS\n036700     05  FILLER                          PIC 9(06) COMP VALUE  4. SPACTYPE\n036800     05  FILLER                          PIC 9(06) COMP VALUE  1. SPANNED\n036900     05  FILLER                          PIC 9(06) COMP VALUE  5. SPLITSCA\n037000     05  FILLER                          PIC 9(06) COMP VALUE  5. SPLITSCI\n037100     05  FILLER                          PIC 9(06) COMP VALUE  5. TAVGLREC\n037200     05  FILLER                          PIC 9(06) COMP VALUE  6. VOLSER\n037300     05  FILLER                          PIC 9(06) COMP VALUE  9. VOLUME\n037400     05  FILLER                          PIC 9(06) COMP VALUE  3. VSMAVGL\n037500     05  FILLER                          PIC 9(06) COMP VALUE  3. VSMKEYL\n037600     05  FILLER                          PIC 9(06) COMP VALUE  3. VSMREORG\n037700     05  FILLER                         PIC 9(06) COMP VALUE 512. ZEDLMSG\n037800     05  FILLER                          PIC 9(06) COMP VALUE 24. ZEDSMSG\n037900     05  FILLER                          PIC 9(06) COMP VALUE  2. ZMONTH\n038000     05  FILLER                          PIC 9(06) COMP VALUE  4. ZSYSID\n038100     05  FILLER                          PIC 9(06) COMP VALUE  4. ZTDSELS\n038200     05  FILLER                          PIC 9(06) COMP VALUE  5. ZTIME\n038300     05  FILLER                          PIC 9(06) COMP VALUE  8. ZUSER\n038400     05  FILLER                          PIC 9(06) COMP VALUE  2. ZYEAR\n038500\n038600 01  ISPF-LENGTH-TABLE.\n038700     05  ISPF-LENGTH-ENTRY  OCCURS  1000 TIMES\n038800                                         PIC 9(06) COMP.\n038900\n039000 01  LENGTH-SUB                          PIC 9(08) COMP VALUE 0.\n039100\n039200******************************************************************\n039300*    ISPF-NAME-LIST IS USED BY MANY VARIABLE AND TABLE SERVICES  *\n039400*                  TO  SPECIFY THE NAME(S) OF VARIABLES: THESE   *\n039500*                  MAY BE DIALOG VARIABLES, NON-KEY NAME         *\n039600*                  VARIABLES FOR TABLES, OR EXTENSION TABLE      *\n039700*                  VARIABLES.                                    *\n039800 01  ISPF-NAME-LIST.\n039900     05  ISPF-NAME-COUNT                 PIC 9(06) COMP VALUE  0.\n040000     05  FILLER                          PIC 9(06) COMP VALUE  0.\n040100     05  ISPF-NAME      OCCURS 25 TIMES         PIC X(08).\n040200*        THIS ARRAY HAS BEEN DEFINED WITH A DIMENSION OF 25.     *\n040300*                 ADJUST ACCORDING TO YOUR REQUIREMENTS.         *\n040400******************************************************************\n040500\n040600******************************************************************\n040700* ISPF-NAME-VDEFINE IS A LIST OF VARIABLES TO BE DEFINED IN THE  *\n040800*                   COMMON AREA (V-POOL).                        *\n040900******************************************************************\n041000 01  ISPF-NAME-VDEFINE.\n041100     05  ISPF-NAME-CNT           PIC 9(06) COMP VALUE 122.\n041200     05  FILLER                  PIC 9(06) COMP VALUE ZEROES.\n041300     05  FILLER                  PIC X(08) VALUE 'AACLOIFL'.\n041400     05  FILLER                  PIC X(08) VALUE 'AACLOILL'.\n041500     05  FILLER                  PIC X(08) VALUE 'AACLOINV'.\n041600     05  FILLER                  PIC X(08) VALUE 'AACLOIVL'.\n041700     05  FILLER                  PIC X(08) VALUE 'AALOIFL '.\n041800     05  FILLER                  PIC X(08) VALUE 'AALOILL '.\n041900     05  FILLER                  PIC X(08) VALUE 'AALOINV '.\n042000     05  FILLER                  PIC X(08) VALUE 'AALOIVL '.\n042100     05  FILLER                  PIC X(08) VALUE 'ABCODE  '.\n042200     05  FILLER                  PIC X(08) VALUE 'ABFUNC  '.\n042300     05  FILLER                  PIC X(08) VALUE 'ABMISC  '.\n042400     05  FILLER                  PIC X(08) VALUE 'ABMSG   '.\n042500     05  FILLER                  PIC X(08) VALUE 'ABPARA  '.\n042600     05  FILLER                  PIC X(08) VALUE 'ABVSAM  '.\n042700     05  FILLER                  PIC X(08) VALUE 'ADDRECS '.\n042800     05  FILLER                  PIC X(08) VALUE 'ALLOCCYL'.\n042900     05  FILLER                  PIC X(08) VALUE 'ARECSZ  '.\n043000     05  FILLER                  PIC X(08) VALUE 'AVGLRECL'.\n043100     05  FILLER                  PIC X(08) VALUE 'AVGLRECT'.\n043200     05  FILLER                  PIC X(08) VALUE 'BKUPHLQ '.\n043300     05  FILLER                  PIC X(08) VALUE 'BMCFLAG '.\n043400     05  FILLER                  PIC X(08) VALUE 'CIFBYTES'.\n043500     05  FILLER                  PIC X(08) VALUE 'CIPERCA '.\n043600     05  FILLER                  PIC X(08) VALUE 'CISIZED '.\n043700     05  FILLER                  PIC X(08) VALUE 'CISIZED2'.\n043800     05  FILLER                  PIC X(08) VALUE 'CISIZEI '.\n043900     05  FILLER                  PIC X(08) VALUE 'COLALC  '.\n044000     05  FILLER                  PIC X(08) VALUE 'COLCAS  '.\n044100     05  FILLER                  PIC X(08) VALUE 'COLCIP  '.\n044200     05  FILLER                  PIC X(08) VALUE 'COLCIS  '.\n044300     05  FILLER                  PIC X(08) VALUE 'COLDCI  '.\n044400     05  FILLER                  PIC X(08) VALUE 'COLEXT  '.\n044500     05  FILLER                  PIC X(08) VALUE 'COLFCA  '.\n044600     05  FILLER                  PIC X(08) VALUE 'COLFCI  '.\n044700     05  FILLER                  PIC X(08) VALUE 'COLFLG1 '.\n044800     05  FILLER                  PIC X(08) VALUE 'COLFLG2 '.\n044900     05  FILLER                  PIC X(08) VALUE 'COLFLG3 '.\n045000     05  FILLER                  PIC X(08) VALUE 'COLFLG4 '.\n045100     05  FILLER                  PIC X(08) VALUE 'COLFLG5 '.\n045200     05  FILLER                  PIC X(08) VALUE 'COLICI  '.\n045300     05  FILLER                  PIC X(08) VALUE 'COLKEY  '.\n045400     05  FILLER                  PIC X(08) VALUE 'COLPCT  '.\n045500     05  FILLER                  PIC X(08) VALUE 'CSTALLFS'.\n045600     05  FILLER                  PIC X(08) VALUE 'CSTCAFS '.\n045700     05  FILLER                  PIC X(08) VALUE 'CSTCIFS '.\n045800     05  FILLER                  PIC X(08) VALUE 'CSTTOTAL'.\n045900     05  FILLER                  PIC X(08) VALUE 'CSTUFS  '.\n046000     05  FILLER                  PIC X(08) VALUE 'CSTUNUSD'.\n046100     05  FILLER                  PIC X(08) VALUE 'CSTUSDFS'.\n046200     05  FILLER                  PIC X(08) VALUE 'DSNAME  '.\n046300     05  FILLER                  PIC X(08) VALUE 'ENVIRON '.\n046400     05  FILLER                  PIC X(08) VALUE 'EXTENTS '.\n046500     05  FILLER                  PIC X(08) VALUE 'FREECA  '.\n046600     05  FILLER                  PIC X(08) VALUE 'FREECI  '.\n046700     05  FILLER                  PIC X(08) VALUE 'FREECIP1'.\n046800     05  FILLER                  PIC X(08) VALUE 'FREECIP2'.\n046900     05  FILLER                  PIC X(08) VALUE 'FREECIP3'.\n047000     05  FILLER                  PIC X(08) VALUE 'FREECIP4'.\n047100     05  FILLER                  PIC X(08) VALUE 'FREECIP5'.\n047200     05  FILLER                  PIC X(08) VALUE 'FREECIP6'.\n047300     05  FILLER                  PIC X(08) VALUE 'FREECIP7'.\n047400     05  FILLER                  PIC X(08) VALUE 'FREECIP8'.\n047500     05  FILLER                  PIC X(08) VALUE 'FREECIP9'.\n047600     05  FILLER                  PIC X(08) VALUE 'INDEXNAM'.\n047700     05  FILLER                  PIC X(08) VALUE 'INDXPRIM'.\n047800     05  FILLER                  PIC X(08) VALUE 'INDXSEC '.\n047900     05  FILLER                  PIC X(08) VALUE 'JOBNAME '.\n048000     05  FILLER                  PIC X(08) VALUE 'KEYLEN  '.\n048100     05  FILLER                  PIC X(08) VALUE 'KEYOFF  '.\n048200     05  FILLER                  PIC X(08) VALUE 'MACHINE '.\n048300     05  FILLER                  PIC X(08) VALUE 'MAXLRECL'.\n048400     05  FILLER                  PIC X(08) VALUE 'MSGCLASS'.\n048500     05  FILLER                  PIC X(08) VALUE 'NEWCAFP '.\n048600     05  FILLER                  PIC X(08) VALUE 'NEWCIFP '.\n048700     05  FILLER                  PIC X(08) VALUE 'NEWDCIS '.\n048800     05  FILLER                  PIC X(08) VALUE 'NEWICIS '.\n048900     05  FILLER                  PIC X(08) VALUE 'NEWPRIM '.\n049000     05  FILLER                  PIC X(08) VALUE 'NEWSEC  '.\n049100     05  FILLER                  PIC X(08) VALUE 'OLDCAFP '.\n049200     05  FILLER                  PIC X(08) VALUE 'OLDCIFP '.\n049300     05  FILLER                  PIC X(08) VALUE 'OLDDCIS '.\n049400     05  FILLER                  PIC X(08) VALUE 'OLDICIS '.\n049500     05  FILLER                  PIC X(08) VALUE 'OLDPRIM '.\n049600     05  FILLER                  PIC X(08) VALUE 'OLDSEC  '.\n049700     05  FILLER                  PIC X(08) VALUE 'PCTALLFS'.\n049800     05  FILLER                  PIC X(08) VALUE 'PCTCAFS '.\n049900     05  FILLER                  PIC X(08) VALUE 'PCTCIFS '.\n050000     05  FILLER                  PIC X(08) VALUE 'PCTUFS  '.\n050100     05  FILLER                  PIC X(08) VALUE 'PCTUNUSD'.\n050200     05  FILLER                  PIC X(08) VALUE 'PCTUSDFS'.\n050300     05  FILLER                  PIC X(08) VALUE 'PCTUSED '.\n050400     05  FILLER                  PIC X(08) VALUE 'PDSMEM  '.\n050500     05  FILLER                  PIC X(08) VALUE 'PRIMARY '.\n050600     05  FILLER                  PIC X(08) VALUE 'RECCNT  '.\n050700     05  FILLER                  PIC X(08) VALUE 'RECDEL  '.\n050800     05  FILLER                  PIC X(08) VALUE 'RECINS  '.\n050900     05  FILLER                  PIC X(08) VALUE 'RECPCYL '.\n051000     05  FILLER                  PIC X(08) VALUE 'RECREAD '.\n051100     05  FILLER                  PIC X(08) VALUE 'RECTOTAL'.\n051200     05  FILLER                  PIC X(08) VALUE 'RECUPD  '.\n051300     05  FILLER                  PIC X(08) VALUE 'SAVEDCYL'.\n051400     05  FILLER                  PIC X(08) VALUE 'SAVEDDOL'.\n051500     05  FILLER                  PIC X(08) VALUE 'SECNDARY'.\n051600     05  FILLER                  PIC X(08) VALUE 'SHROPTNS'.\n051700     05  FILLER                  PIC X(08) VALUE 'SPACTYPE'.\n051800     05  FILLER                  PIC X(08) VALUE 'SPANNED '.\n051900     05  FILLER                  PIC X(08) VALUE 'SPLITSCA'.\n052000     05  FILLER                  PIC X(08) VALUE 'SPLITSCI'.\n052100     05  FILLER                  PIC X(08) VALUE 'TAVGLREC'.\n052200     05  FILLER                  PIC X(08) VALUE 'VOLSER  '.\n052300     05  FILLER                  PIC X(08) VALUE 'VOLUME  '.\n052400     05  FILLER                  PIC X(08) VALUE 'VSMAVGL '.\n052500     05  FILLER                  PIC X(08) VALUE 'VSMKEYL '.\n052600     05  FILLER                  PIC X(08) VALUE 'VSMREORG'.\n052700     05  FILLER                  PIC X(08) VALUE 'ZEDLMSG '.\n052800     05  FILLER                  PIC X(08) VALUE 'ZEDSMSG '.\n052900     05  FILLER                  PIC X(08) VALUE 'ZMONTH  '.\n053000     05  FILLER                  PIC X(08) VALUE 'ZSYSID  '.\n053100     05  FILLER                  PIC X(08) VALUE 'ZTDSELS '.\n053200     05  FILLER                  PIC X(08) VALUE 'ZTIME   '.\n053300     05  FILLER                  PIC X(08) VALUE 'ZUSER   '.\n053400     05  FILLER                  PIC X(08) VALUE 'ZYEAR   '.\n053500\n053600******************************************************************\n053700*    ISPF-VARIABLE-LIST IS USED BY THE VDEFINE SERVICE TO        *\n053800*                      IDENTIFY THE VARIABLE(S) WHOSE STORAGE IS *\n053900*                      TO BE USED. EACH VARIABLE HERE CORRESPONDS*\n054000*                      BY POSITION TO AN ISPF VARIABLE IN THE    *\n054100*                      NAME LIST, SO THERE MUST BE AS MANY       *\n054200*                      VARIABLE NAMES AS THERE ARE ISPF NAMES.   *\n054300******************************************************************\n054400 01  ISPF-VARIABLE-LIST.\n054500     05  AACLOIFL                        PIC 9(08) COMP.\n054600     05  AACLOILL                        PIC 9(08) COMP.\n054700     05  AACLOINV                        PIC 9(08) COMP.\n054800     05  AACLOIVL                        PIC 9(08) COMP.\n054900     05  AALOIFL                         PIC 9(08) COMP.\n055000     05  AALOILL                         PIC 9(08) COMP.\n055100     05  AALOINV                         PIC 9(08) COMP.\n055200     05  AALOIVL                         PIC 9(08) COMP.\n055300     05  ABCODE                          PIC X(04).\n055400     05  ABFUNC                          PIC X(08).\n055500     05  ABMISC                          PIC X(70).\n055600     05  ABMSG                           PIC X(70).\n055700     05  ABPARA                          PIC X(30).\n055800     05  ABVSAM                          PIC X(02).\n055900     05  ADDRECS                         PIC ZZZZ,ZZ9.\n056000     05  ALLOCCYL                        PIC ZZZZ9.\n056100     05  ARECSZ                          PIC ZZZZ9.\n056200     05  AVGLRECL                        PIC ZZZZ9.\n056300     05  AVGLRECT                        PIC ZZZZ9.\n056400     05  BKUPHLQ                         PIC X(08).\n056500     05  BMCFLAG                         PIC X(01).\n056600     05  CIFBYTES                        PIC ZZZZ9.\n056700     05  CIPERCA                         PIC 99999.\n056800     05  CISIZED                         PIC ZZZZ9.\n056900     05  CISIZED2                        PIC 9(05).\n057000     05  CISIZEI                         PIC ZZZZ9.\n057100     05  COLALC                          PIC X(08).\n057200     05  COLCAS                          PIC X(08).\n057300     05  COLCIP                          PIC X(08).\n057400     05  COLCIS                          PIC X(08).\n057500     05  COLDCI                          PIC X(08).\n057600     05  COLEXT                          PIC X(08).\n057700     05  COLFCA                          PIC X(08).\n057800     05  COLFCI                          PIC X(08).\n057900     05  COLFLG1                         PIC X(08).\n058000     05  COLFLG2                         PIC X(08).\n058100     05  COLFLG3                         PIC X(08).\n058200     05  COLFLG4                         PIC X(08).\n058300     05  COLFLG5                         PIC X(08).\n058400     05  COLICI                          PIC X(08).\n058500     05  COLKEY                          PIC X(08).\n058600     05  COLPCT                          PIC X(08).\n058700     05  CSTALLFS                        PIC ZZZZZZ,ZZ9.99.\n058800     05  CSTCAFS                         PIC ZZZZZZ,ZZ9.99.\n058900     05  CSTCIFS                         PIC ZZZZZZ,ZZ9.99.\n059000     05  CSTTOTAL                        PIC ZZZZZZ,ZZ9.99.\n059100     05  CSTUFS                          PIC ZZZZZZ,ZZ9.99.\n059200     05  CSTUNUSD                        PIC ZZZZZZ,ZZ9.99.\n059300     05  CSTUSDFS                        PIC ZZZZZZ,ZZ9.99.\n059400     05  DSNAME                          PIC X(44).\n059500     05  ENVIRON                         PIC X(01).\n059600     05  EXTENTS                         PIC ZZZZ9.\n059700     05  FREECA                          PIC ZZ9.\n059800     05  FREECI                          PIC ZZ9.\n059900     05  FREECIP1                        PIC ZZ9.\n060000     05  FREECIP2                        PIC ZZ9.\n060100     05  FREECIP3                        PIC ZZ9.\n060200     05  FREECIP4                        PIC ZZ9.\n060300     05  FREECIP5                        PIC ZZ9.\n060400     05  FREECIP6                        PIC ZZ9.\n060500     05  FREECIP7                        PIC ZZ9.\n060600     05  FREECIP8                        PIC ZZ9.\n060700     05  FREECIP9                        PIC ZZ9.\n060800     05  INDEXNAM                        PIC X(44).\n060900     05  INDXPRIM                        PIC 9(08) COMP.\n061000     05  INDXSEC                         PIC 9(08) COMP.\n061100     05  JOBNAME                         PIC X(08).\n061200     05  KEYLEN                          PIC ZZZZ9.\n061300     05  KEYOFF                          PIC ZZZZ9.\n061400     05  MACHINE                         PIC X(04).\n061500     05  MAXLRECL                        PIC ZZZZ9.\n061600     05  MSGCLASS                        PIC X(01).\n061700     05  NEWCAFP                         PIC ZZ9.\n061800     05  NEWCIFP                         PIC ZZ9.\n061900     05  NEWDCIS                         PIC ZZZZ9.\n062000     05  NEWICIS                         PIC ZZZZ9.\n062100     05  NEWPRIM                         PIC 9(08) COMP.\n062200     05  NEWSEC                          PIC 9(08) COMP.\n062300     05  OLDCAFP                         PIC ZZ9.\n062400     05  OLDCIFP                         PIC ZZ9.\n062500     05  OLDDCIS                         PIC ZZZZ9.\n062600     05  OLDICIS                         PIC ZZZZ9.\n062700     05  OLDPRIM                         PIC ZZZZ9.\n062800     05  OLDSEC                          PIC ZZZZ9.\n062900     05  PCTALLFS                        PIC ZZ9.99.\n063000     05  PCTCAFS                         PIC ZZ9.99.\n063100     05  PCTCIFS                         PIC ZZ9.99.\n063200     05  PCTUFS                          PIC ZZ9.99.\n063300     05  PCTUNUSD                        PIC ZZ9.99.\n063400     05  PCTUSDFS                        PIC ZZ9.99.\n063500     05  PCTUSED                         PIC ZZ9.99.\n063600     05  PDSMEM                          PIC X(41).\n063700     05  PRIMARY                         PIC ZZZZ9.\n063800     05  RECCNT                          PIC ZZZZZZZZZ9.\n063900     05  RECDEL                          PIC ZZZZZZ,ZZ9.\n064000     05  RECINS                          PIC ZZZZZZ,ZZ9.\n064100     05  RECPCYL                         PIC ZZZZ9.\n064200     05  RECREAD                         PIC ZZZZZZ,ZZ9.\n064300     05  RECTOTAL                        PIC ZZZZZZZZ9.\n064400     05  RECUPD                          PIC ZZZZZZ,ZZ9.\n064500     05  SAVEDCYL                        PIC ZZZZ9-.\n064600     05  SAVEDDOL                        PIC ZZZZZ,ZZ9.99-.\n064700     05  SECNDARY                        PIC ZZZZ9.\n064800     05  SHROPTNS                        PIC X(03).\n064900     05  SPACTYPE                        PIC X(04).\n065000     05  SPANNED                         PIC X(01).\n065100     05  SPLITSCA                        PIC ZZZZ9.\n065200     05  SPLITSCI                        PIC ZZZZ9.\n065300     05  TAVGLREC                        PIC ZZZZ9.\n065400     05  VOLSER                          PIC X(06).\n065500     05  VOLUME                          PIC X(09).\n065600     05  VSMAVGL                         PIC X(03).\n065700     05  VSMKEYL                         PIC X(03).\n065800     05  VSMREORG                        PIC X(03).\n065900     05  ZEDLMSG                         PIC X(512).\n066000     05  ZEDSMSG                         PIC X(24).\n066100     05  ZMONTH                          PIC X(02).\n066200     05  ZSYSID                          PIC X(04).\n066300     05  ZTDSELS                         PIC 9(08) COMP.\n066400     05  ZTIME                           PIC X(05).\n066500     05  ZUSER                           PIC X(08).\n066600     05  ZYEAR                           PIC X(02).\n066700\n066800*****************************************************************\n066900* ISPF-FORMAT-LIST HAS AS MANY FILLERS AS THERE ARE VARIABLES BEING\n067000*                  DEFINED.\n067100*****************************************************************\n067200 01  ISPF-FORMAT-LIST.\n067300     05  FILLER                          PIC X(08) VALUE 'FIXED'. AACLOIFL\n067400     05  FILLER                          PIC X(08) VALUE 'FIXED'. AACLOILL\n067500     05  FILLER                          PIC X(08) VALUE 'FIXED'. AACLOINV\n067600     05  FILLER                          PIC X(08) VALUE 'FIXED'. AACLOIVL\n067700     05  FILLER                          PIC X(08) VALUE 'FIXED'. AALOIFL\n067800     05  FILLER                          PIC X(08) VALUE 'FIXED'. AALOILL\n067900     05  FILLER                          PIC X(08) VALUE 'FIXED'. AALOINV\n068000     05  FILLER                          PIC X(08) VALUE 'FIXED'. AALOIVL\n068100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABCODE\n068200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABFUNC\n068300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABMISC\n068400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABMSG\n068500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABPARA\n068600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ABVSAM\n068700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ADDRECS\n068800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ALLOCCYL\n068900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ARECSZ\n069000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  AVGLRECL\n069100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  AVGLRECT\n069200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  BKUPHLQ\n069300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  BMCFLAG\n069400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CIFBYTES\n069500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CIPERCA\n069600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CISIZED\n069700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CISIZED2\n069800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CISIZEI\n069900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLALC\n070000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLCAS\n070100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLCIP\n070200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLCIS\n070300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLDCI\n070400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLEXT\n070500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFCA\n070600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFCI\n070700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFLG1\n070800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFLG2\n070900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFLG3\n071000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFLG4\n071100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLFLG5\n071200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLICI\n071300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLKEY\n071400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  COLPCT\n071500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTALLFS\n071600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTCAFS\n071700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTCIFS\n071800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTTOTAL\n071900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTUFS\n072000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTUNUSD\n072100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  CSTUSDFS\n072200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  DSNAME\n072300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ENVIRON\n072400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  EXTENTS\n072500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECA\n072600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECI\n072700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP1\n072800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP2\n072900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP3\n073000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP4\n073100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP5\n073200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP6\n073300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP7\n073400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP8\n073500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  FREECIP9\n073600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  INDEXNAM\n073700     05  FILLER                          PIC X(08) VALUE 'FIXED'. INDXPRIM\n073800     05  FILLER                          PIC X(08) VALUE 'FIXED'. INDXSEC\n073900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  JOBNAME\n074000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  KEYLEN\n074100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  KEYOFF\n074200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  MACHINE\n074300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  MAXLRECL\n074400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  MSGCLASS\n074500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  NEWCAFP\n074600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  NEWCIFP\n074700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  NEWDCIS\n074800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  NEWICIS\n074900     05  FILLER                          PIC X(08) VALUE 'FIXED'. NEWPRIM\n075000     05  FILLER                          PIC X(08) VALUE 'FIXED'. NEWSEC\n075100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDCAFP\n075200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDCIFP\n075300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDDCIS\n075400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDICIS\n075500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDPRIM\n075600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  OLDSEC\n075700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTALLFS\n075800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTCAFS\n075900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTCIFS\n076000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTUFS\n076100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTUNUSD\n076200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTUSDFS\n076300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PCTUSED\n076400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PDSMEM\n076500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  PRIMARY\n076600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECCNT\n076700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECDEL\n076800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECINS\n076900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECPCYL\n077000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECREAD\n077100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECTOTAL\n077200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  RECUPD\n077300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SAVEDCYL\n077400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SAVEDDOL\n077500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SECNDARY\n077600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SHROPTNS\n077700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SPACTYPE\n077800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SPANNED\n077900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SPLITSCA\n078000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  SPLITSCI\n078100     05  FILLER                          PIC X(08) VALUE 'CHAR'.  TAVGLREC\n078200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  VOLSER\n078300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  VOLUME\n078400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  VSMAVGL\n078500     05  FILLER                          PIC X(08) VALUE 'CHAR'.  VSMKEYL\n078600     05  FILLER                          PIC X(08) VALUE 'CHAR'.  VSMREORG\n078700     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZEDLMSG\n078800     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZEDSMSG\n078900     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZMONTH\n079000     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZSYSID\n079100     05  FILLER                          PIC X(08) VALUE 'FIXED'. ZTDSELS\n079200     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZTIME\n079300     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZUSER\n079400     05  FILLER                          PIC X(08) VALUE 'CHAR'.  ZYEAR\n079500******************************************************************\n079600*       END OF WORKING-STORAGE FIELDS FOR ISPF SERVICE CALLS     *\n079700******************************************************************\n079800     EJECT\n079900\n080000 01  WS-CIS-FOR-INDEX-SET                PIC 9(09) COMP-3.\n080100 01  WS-TOTAL-TRACKS-IN-FILE             PIC 9(09) COMP-3.\n080200 01  WS-HIGH-USED-RBA                    PIC 9(13) COMP-3.\n080300 01  WS-HIGH-ALLOCATED-RBA               PIC 9(13) COMP-3.\n080400 01  WS-RECORDS-PER-CYLINDER             PIC 9(09)V9(02) COMP-3.  RECPCYL\n080500 01  WS-CALC-RECORDS-PER-CYLINDER        PIC 9(09)V9(02) COMP-3.        L\n080600 01  WS-ALLOCATED-CYLINDERS              PIC 9(09) COMP-3.        ALLOCCYL\n080700 01  WS-RECORDS-IN-FILE                  PIC 9(13) COMP-3.        RECTOTAL\n080800 01  WS-FREESPACE-PERCENT-CI             PIC 9(03).               FREECI\n080900 01  WS-FREESPACE-PERCENT-CA             PIC 9(03).               FREECA\n081000 01  WS-NEW-ANNUAL-FILE-COST             PIC 9(09)V9(02) COMP-3.\n081100 01  WS-CI-FREESPACE-COST                PIC 9(09)V9(02) COMP-3.  CSTCIFS\n081200 01  WS-CA-FREESPACE-COST                PIC 9(09)V9(02) COMP-3.  CSTCAFS\n081300 01  WS-FREESPACE-COST                   PIC 9(09)V9(02) COMP-3.  CSTALLFS\n081400 01  WS-FREE-AND-UNUSED-COST             PIC 9(09)V9(02) COMP-3.  CSTUFS\n081500 01  WS-FREE-AND-USED-COST               PIC 9(09)V9(02) COMP-3.  CSTUSDFS\n081600 01  WS-UNUSED-SPACE-COST                PIC 9(09)V9(02) COMP-3.  CSTUNUSD\n081700 01  WS-ANNUAL-COST-OF-FILE              PIC 9(09)V9(02) COMP-3.  CSTTOTAL\n081800 01  WS-CI-FREESPACE-PCT-OF-COST         PIC 9(03)V9(02) COMP-3.  PCTCIFS\n081900 01  WS-CA-FREESPACE-PCT-OF-COST         PIC 9(03)V9(02) COMP-3.  PCTCAFS\n082000 01  WS-FREESPACE-PCT-OF-COST            PIC 9(03)V9(02) COMP-3.  PCTALLFS\n082100 01  WS-FREE-AND-UNUSED-PCT-OF-COST      PIC 9(03)V9(02) COMP-3.  PCTUFS\n082200 01  WS-FREE-AND-USED-PCT-OF-COST        PIC 9(03)V9(02) COMP-3.  PCTUSDFS\n082300 01  WS-UNUSED-SPACE-PCT-OF-COST         PIC 9(03)V9(02) COMP-3.  PCTUNUSD\n082400 01  WS-DATA-CISIZE                      PIC 9(05).               CISIZED\n082500 01  WS-INDEX-CISIZE                     PIC 9(05).               CISIZEI\n082600 01  WS-KEY-LENGTH                       PIC 9(05)       COMP-3.  KEYLEN\n082700 01  WS-EXTENTS                          PIC 9(05)       COMP-3.  EXTENTS\n082800 01  WS-CI-SPLITS                        PIC 9(05)       COMP-3.  SPLITSCI\n082900 01  WS-CA-SPLITS                        PIC 9(05)       COMP-3.  SPLITSCA\n083000 01  WS-TRUE-AVERAGE-LRECL               PIC 9(05)       COMP-3.  AVGLRECT\n083100 01  WS-LISTCAT-AVERAGE-LRECL            PIC 9(05)       COMP-3.  AVGLRECL\n083200 01  WS-LISTCAT-MAXIMUM-LRECL            PIC 9(05)       COMP-3.  MAXLRECL\n083300 01  WS-CI-FREE-BYTES                    PIC 9(05)       COMP-3.  CIFBYTES\n083400 01  WS-FREE-CI-PERCENTAGE-1             PIC 9(05)V9(04) COMP-3.  FREECIP1\n083500 01  WS-FREE-CI-PERCENTAGE-2             PIC 9(05)V9(04) COMP-3.  FREECIP2\n083600 01  WS-FREE-CI-PERCENTAGE-3             PIC 9(05)V9(04) COMP-3.  FREECIP3\n083700 01  WS-FREE-CI-PERCENTAGE-4             PIC 9(05)V9(04) COMP-3.  FREECIP4\n083800 01  WS-FREE-CI-PERCENTAGE-5             PIC 9(05)V9(04) COMP-3.  FREECIP5\n083900 01  WS-FREE-CI-PERCENTAGE-6             PIC 9(05)V9(04) COMP-3.  FREECIP6\n084000 01  WS-FREE-CI-PERCENTAGE-7             PIC 9(05)V9(04) COMP-3.  FREECIP7\n084100 01  WS-FREE-CI-PERCENTAGE-8             PIC 9(05)V9(04) COMP-3.  FREECIP8\n084200 01  WS-FREE-CI-PERCENTAGE-9             PIC 9(05)V9(04) COMP-3.  FREECIP9\n084300 01  WS-PERCENT-USED-UPPER-LIMIT         PIC V99         COMP-3\n084400                                             VALUE .95.\n084500 01  WS-PERCENT-USED-LOWER-LIMIT         PIC V99         COMP-3\n084600                                             VALUE .85.\n084700 01  WS-EXTENTS-UPPER-LIMIT              PIC 9(05)       COMP-3\n084800                                             VALUE 10.\n084900 01  WS-CISPLIT-UPPER-LIMIT              PIC 9(05)       COMP-3\n085000                                             VALUE 150.\n085100 01  WS-CASPLIT-UPPER-LIMIT              PIC 9(05)       COMP-3\n085200                                             VALUE 50.\n085300 01  WS-CI-FREE-UPPER-LIMIT              PIC 9(02) VALUE 20.\n085400 01  WS-CA-FREE-UPPER-LIMIT              PIC 9(02) VALUE 15.\n085500 01  WS-VSAM-PRIMARY-SPACE               PIC 9(05).\n085600 01  WS-VSAM-SECONDARY-SPACE             PIC 9(05).\n085700 01  WS-BLOCKS-PER-TRACK                 PIC 9(05) COMP-3.\n085800 01  WS-CI-OVERHEAD                      PIC 9(05) COMP-3.\n085900 01  WS-RECORDS-PER-CI                   PIC 9(05) COMP-3.\n086000 01  WS-LOADED-CIS-PER-CA                PIC 9(05) COMP-3.\n086100 01  WS-CI-PER-CA                        PIC 9(05) COMP-3.        CIPERCA\n086200\n086300 01  VSAM-STATUS                         PIC X(02).\n086400     88  VSAM-SUCCESSFUL                     VALUE '00'.\n086500     88  VSAM-NOT-FOUND                      VALUE '23'.\n086600     88  VSAM-END-OF-FILE                    VALUE '10'.\n086700\n086800 01  WS-ABEND-CODE                       PIC S9(4) COMP\n086900                                                  VALUE ZEROES.\n087000\n087100 01  END-OF-FILE-SW                      PIC X(01) VALUE 'N'.\n087200     88  END-OF-FILE                         VALUE 'Y'.\n087300\n087400 01  WS-DATE.\n087500     05  WS-DATE-YY                      PIC X(02).\n087600     05  WS-DATE-MM                      PIC X(02).\n087700     05  WS-DATE-DD                      PIC X(02).\n087800\n087900 01  WS-PERCENT-FILE-USED                PIC 9(03)V9(08) COMP-3.\n088000 01  WS-TRUE-PERCENT-FILE-USED           PIC 9(03)V9(08) COMP-3.\n088100\n088200 01  OFFSET                              PIC 9(03) VALUE ZEROES.\n088300\n088400 01  WS-DAILY-GB-COST                    PIC S9(02)V99 COMP-3\n088500                                             VALUE +19.82.\n088600 01  WS-GIGABYTE-PER-CYL                 PIC SV9(06) COMP-3\n088700                                             VALUE +.000811.\n088800 01  WS-TRACKS-PER-CYL                   PIC 9(3)    COMP-3\n088900                                             VALUE 15.\n089000\n089100 01  WS-CA-SPLITS-DISTORTION             PIC S9(2)V9(06) COMP-3.\n089200 01  WS-CI-SPLITS-DISTORTION             PIC S9(2)V9(06) COMP-3.\n089300\n089400 01  WS-ALPHA                            PIC X(11) JUST RIGHT.\n089500 01  WS-ALPHA-ZD  REDEFINES  WS-ALPHA    PIC 9(11).\n089600\n089700 01  WS-OLD-TOTAL-DOLLARS                PIC S9(09)V99 COMP-3\n089800                                             VALUE +0.\n089900 01  WS-NEW-TOTAL-DOLLARS                PIC S9(09)V99 COMP-3\n090000                                             VALUE +0.\n090100 01  WS-OLD-TOTAL-CYLS                   PIC S9(09)V99 COMP-3\n090200                                             VALUE +0.\n090300 01  WS-NEW-TOTAL-CYLS                   PIC S9(09)V99 COMP-3\n090400                                             VALUE +0.\n090500 01  LINE-COUNT-ER                       PIC 9(06) VALUE 100.\n090600 01  PAGE-COUNT-ER                       PIC 9(06) VALUE 0.\n090700 01  LINE-COUNT-CR                       PIC 9(06) VALUE 100.\n090800 01  PAGE-COUNT-CR                       PIC 9(06) VALUE 0.\n090900\n091000 01  END-OF-DSN-FILE-SW                  PIC X(01) VALUE 'N'.\n091100     88  END-OF-DSN-FILE                     VALUE 'Y'.\n091200\n091300 01  WS-ALTERNATE-INDEX-SW               PIC X(01) VALUE 'N'.\n091400     88  ALTERNATE-INDEX                     VALUE 'Y'.\n091500\n091600 01  WS-IMBEDDED-FILE-SW                 PIC X(01) VALUE 'N'.\n091700     88  IMBEDDED-FILE                       VALUE 'Y'.\n091800\n091900 01  WS-RECOVERY-SW                      PIC X(01) VALUE 'N'.\n092000     88  RECOVERY-FLAG                       VALUE 'Y'.\n092100\n092200 01  WS-WRITECHK-SW                      PIC X(01) VALUE 'N'.\n092300     88  WRITECHK-FLAG                       VALUE 'Y'.\n092400\n092500 01  WS-REPLICAT-SW                      PIC X(01) VALUE 'N'.\n092600     88  REPLICAT-FLAG                       VALUE 'Y'.\n092700\n092800 01  WS-ERASE-SW                         PIC X(01) VALUE 'N'.\n092900     88  ERASE-FLAG                          VALUE 'Y'.\n093000\n093100 01  TITLE-LINE-1.\n093200     05  FILLER                          PIC X(01) VALUE '1'.\n093300     05  FILLER                          PIC X(36)\n093400           VALUE '  VSAMPGM                          '.\n093500     05  FILLER                          PIC X(56) VALUE\n093600      '            VSAM FILE ANALYSIS ROUTINE                  '.\n093700     05  FILLER                          PIC X(09) VALUE SPACES.\n093800     05  TL-RUN-DATE.\n093900         10  TL-RUN-DATE-MM              PIC X(02).\n094000         10  FILLER                      PIC X(01) VALUE '/'.\n094100         10  TL-RUN-DATE-DD              PIC X(02).\n094200         10  FILLER                      PIC X(01) VALUE '/'.\n094300         10  TL-RUN-DATE-YY              PIC X(02).\n094400     05  FILLER                          PIC X(10) VALUE SPACES.\n094500     05  FILLER                          PIC X(05) VALUE 'PAGE '.\n094600     05  TL-PAGENO                       PIC ZZZ9.\n094700\n094800 01  TITLE-LINE-ER-2.\n094900     05  FILLER                          PIC X(01) VALUE SPACE.\n095000     05  FILLER                          PIC X(47) VALUE SPACES.\n095100     05  FILLER                          PIC X(38) VALUE\n095200         'VSAM SPACE MANAGEMENT-EXCEPTION REPORT'.\n095300\n095400 01  TITLE-LINE-ER-3.\n095500     05  FILLER                          PIC X(01) VALUE SPACE.\n095600     05  FILLER                          PIC X(40) VALUE SPACES.\n095700     05  FILLER                          PIC X(20) VALUE\n095800                         'BMC COMPRESSED FILES'.\n095900     05  FILLER                          PIC X(33) VALUE\n096000                        ' ARE FLAGGED WITH AN ''*'' IN CC''1'''.\n096100\n096200 01  TITLE-LINE-ER-4.\n096300     05  FILLER                          PIC X(01) VALUE SPACE.\n096400     05  FILLER                          PIC X(30) VALUE SPACES.\n096500     05  FILLER                          PIC X(34) VALUE\n096600              'FILES FLAGGED WITH AN ''S'' IN CC''1'''.\n096700     05  FILLER                          PIC X(38) VALUE\n096800              ' ARE MONITORED ONLY. NO JCL IS CREATED'.\n096900\n097000 01  TITLE-LINE-CR-2.\n097100     05  FILLER                          PIC X(01) VALUE SPACE.\n097200     05  FILLER                          PIC X(42) VALUE SPACES.\n097300     05  FILLER                          PIC X(47) VALUE\n097400         'VSAM SPACE MANAGEMENT-CHANGE AND SAVINGS REPORT'.\n097500\n097600 01  COLUMN-HEADING-ER.\n097700     05  FILLER                          PIC X(01) VALUE SPACE.\n097800     05  FILLER                          PIC X(01) VALUE SPACE.\n097900     05  FILLER                          PIC X(39) VALUE 'DSN'.\n098000     05  FILLER                          PIC X(47) VALUE\n098100                                             'EXCEPTION'.\n098200     05  FILLER                          PIC X(06) VALUE\n098300                                             'ACTION'.\n098400\n098500 01  COLUMN-HEADING-CR.\n098600     05  FILLER                          PIC X(01) VALUE '0'.\n098700     05  FILLER                          PIC X(44) VALUE SPACES.\n098800     05  FILLER                          PIC X(06) VALUE SPACES.\n098900     05  FILLER                          PIC X(10) VALUE\n099000                                             'OLD VALUE'.\n099100     05  FILLER                          PIC X(15) VALUE SPACES.\n099200     05  FILLER                          PIC X(10) VALUE\n099300                                             'NEW VALUE'.\n099400     05  FILLER                          PIC X(10) VALUE SPACES.\n099500     05  FILLER                          PIC X(10) VALUE\n099600                                             '    DELTA'.\n099700\n099800 01  LINE-0-CR.\n099900     05  FILLER                          PIC X(01) VALUE '0'.\n100000     05  CH-VSAM-DATASET-NAME-CR         PIC X(44).\n100100\n100200 01  LINE-1-CR.\n100300     05  FILLER                          PIC X(01) VALUE ' '.\n100400     05  FILLER                          PIC X(44)\n100500         VALUE '  TOTAL ALLOCATION IN CYLINDERS             '.\n100600     05  FILLER                          PIC X(05) VALUE SPACES.\n100700     05  CR-OLD-PRIMARY                  PIC Z(9)9.\n100800     05  FILLER                          PIC X(15) VALUE SPACES.\n100900     05  CR-NEW-PRIMARY                  PIC Z(9)9.\n101000     05  FILLER                          PIC X(10) VALUE SPACES.\n101100     05  CR-CYLINDER-DIFF                PIC Z(9)9-.\n101200\n101300 01  LINE-2-CR.\n101400     05  FILLER                          PIC X(01) VALUE SPACE.\n101500     05  FILLER                          PIC X(44)\n101600         VALUE '  SECONDARY SPACE (CYLINDERS)               '.\n101700     05  FILLER                          PIC X(05) VALUE SPACES.\n101800     05  CR-OLD-SECONDARY                PIC Z(9)9.\n101900     05  FILLER                          PIC X(15) VALUE SPACES.\n102000     05  CR-NEW-SECONDARY                PIC Z(9)9.\n102100\n102200 01  LINE-3-CR.\n102300     05  FILLER                          PIC X(01) VALUE SPACE.\n102400     05  FILLER                          PIC X(44)\n102500         VALUE '  ANNUAL COST                               '.\n102600     05  FILLER                          PIC X(04) VALUE SPACES.\n102700     05  CR-OLD-COST                     PIC $$$$,$$9.99.\n102800     05  FILLER                          PIC X(14) VALUE SPACES.\n102900     05  CR-NEW-COST                     PIC $$$$,$$9.99.\n103000     05  FILLER                          PIC X(10) VALUE SPACES.\n103100     05  CR-COST-DIFF                    PIC $$$,$$9.99-.\n103200\n103300 01  LINE-4-CR.\n103400     05  FILLER                          PIC X(01) VALUE SPACE.\n103500     05  FILLER                          PIC X(44)\n103600         VALUE '  CI % FREE                                 '.\n103700     05  FILLER                          PIC X(05) VALUE SPACES.\n103800     05  CR-OLD-CI-FREE                  PIC Z(8)Z9.\n103900     05  FILLER                          PIC X(15) VALUE SPACES.\n104000     05  CR-NEW-CI-FREE                  PIC Z(8)Z9.\n104100\n104200 01  LINE-5-CR.\n104300     05  FILLER                          PIC X(01) VALUE SPACE.\n104400     05  FILLER                          PIC X(44)\n104500         VALUE '  CA % FREE                                 '.\n104600     05  FILLER                          PIC X(05) VALUE SPACES.\n104700     05  CR-OLD-CA-FREE                  PIC Z(8)Z9.\n104800     05  FILLER                          PIC X(15) VALUE SPACES.\n104900     05  CR-NEW-CA-FREE                  PIC Z(8)Z9.\n105000\n105100 01  LINE-6-CR.\n105200     05  FILLER                          PIC X(01) VALUE SPACE.\n105300     05  FILLER                          PIC X(44)\n105400         VALUE '  DATA CI SIZE                              '.\n105500     05  FILLER                          PIC X(05) VALUE SPACES.\n105600     05  CR-OLD-DATA-CISIZE              PIC Z(9)9.\n105700     05  FILLER                          PIC X(15) VALUE SPACES.\n105800     05  CR-NEW-DATA-CISIZE              PIC Z(9)9.\n105900\n106000 01  LINE-7-CR.\n106100     05  FILLER                          PIC X(01) VALUE SPACE.\n106200     05  FILLER                          PIC X(44)\n106300         VALUE '  INDEX CI SIZE                             '.\n106400     05  FILLER                          PIC X(05) VALUE SPACES.\n106500     05  CR-OLD-INDEX-CISIZE             PIC Z(9)9.\n106600     05  FILLER                          PIC X(15) VALUE SPACES.\n106700     05  CR-NEW-INDEX-CISIZE             PIC Z(9)9.\n106800\n106900 01  LINE-8-CR.\n107000     05  FILLER                          PIC X(01) VALUE '0'.\n107100     05  FILLER                          PIC X(44)\n107200         VALUE '  TOTAL DOLLARS FOR THIS RUN:               '.\n107300     05  FILLER                          PIC X(04) VALUE SPACES.\n107400     05  CR-OLD-TOTAL-DOLLARS            PIC $$$$,$$9.99.\n107500     05  FILLER                          PIC X(14) VALUE SPACES.\n107600     05  CR-NEW-TOTAL-DOLLARS            PIC $$$$,$$9.99.\n107700     05  FILLER                          PIC X(09) VALUE SPACES.\n107800     05  CR-TOTAL-DOLLARS-SAVED          PIC $$$$,$$9.99-.\n107900\n108000 01  LINE-9-CR.\n108100     05  FILLER                          PIC X(01) VALUE ' '.\n108200     05  FILLER                          PIC X(44)\n108300         VALUE '  TOTAL CYLINDERS THIS RUN:                 '.\n108400     05  FILLER                          PIC X(05) VALUE SPACES.\n108500     05  CR-OLD-TOTAL-CYLS               PIC Z(9)9.\n108600     05  FILLER                          PIC X(15) VALUE SPACES.\n108700     05  CR-NEW-TOTAL-CYLS               PIC Z(9)9.\n108800     05  FILLER                          PIC X(10) VALUE SPACES.\n108900     05  CR-TOTAL-CYLS-SAVED             PIC Z(9)9-.\n109000\n109100 01  EXCPRPT-RECORD-HOLD                 PIC X(133).\n109200\n109300 01  CHNGRPT-RECORD-HOLD                 PIC X(133).\n109400\n109500 01  VSAM-DATASET-NAME-HOLD              PIC X(44).\n109600\n109700 LINKAGE SECTION.\n109800 01  PARM-CARD.\n109900     05  PARM-LEN                        PIC S9(04) COMP.\n110000     05  PARM-ENVIRONMENT                PIC X(01).\n110100         88  RUNNING-IN-FOREGROUND           VALUE 'F'.\n110200         88  RUNNING-IN-BACKGROUND           VALUE 'B'.\n110300     05  PARM-MACHINE                    PIC X(04).\n110400         88  TEST-MACHINE                    VALUE 'TEST'.\n110500         88  PROD-MACHINE                    VALUE 'PROD'.\n110600     05  PARM-BACKUP-HLQ                 PIC X(08).\n110700     05  PARM-JOBNAME                    PIC X(08).\n110800     05  PARM-MSGCLASS                   PIC X(01).\n110900\n111000 PROCEDURE DIVISION USING PARM-CARD.\n111100\n111200 0000-MAINLINE.\n111300\n111400     PERFORM 0003-INITIALIZATION            THRU 0003-EXIT.\n111500\n111600     IF RUNNING-IN-BACKGROUND\n111700        PERFORM 0050-PROCESS-DSN-LIST       THRU 0050-EXIT\n111800                UNTIL END-OF-DSN-FILE\n111900        PERFORM 1000-FTCLOSE                THRU 1000-EXIT.\n112000\n112100     IF RUNNING-IN-FOREGROUND\n112200        PERFORM 0050-PROCESS-DSN-LIST       THRU 0050-EXIT\n112300        IF RETURN-CODE = 8\n112400           PERFORM 1000-FTCLOSE             THRU 1000-EXIT\n112500           GO TO 0000-TERM\n112600        ELSE\n112700           MOVE 'VGET (VSMREORG VSMAVGL VSMKEYL) SHARED'\n112800                 TO ISPF-BUFFER\n112900           CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER\n113000           IF VSMREORG = 'YES' OR\n113100              VSMAVGL  = 'YES' OR\n113200              VSMKEYL  = 'YES'\n113300                 PERFORM 0600-GENERATE-JOBS THRU 0600-EXIT\n113400           ELSE\n113500                 PERFORM 1000-FTCLOSE       THRU 1000-EXIT\n113600           END-IF\n113700     END-IF.\n113800\n113900 0000-TERM.\n114000     PERFORM 9950-TERM                      THRU 9950-EXIT.\n114100\n114200     STOP RUN.\n114300\n114400 0000-EXIT.\n114500     EXIT.\n114600     EJECT\n114700 0003-INITIALIZATION.\n114800\n114900     IF PARM-LEN NOT = 22\n115000        DISPLAY 'MISSING OR TOO MUCH PARM INFORMATION'\n115100        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'\n115200        DISPLAY 'NEXT 4:          TEST OR PROD'\n115300        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'\n115400        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'\n115500        DISPLAY 'NEXT 1:          JOB MSGCLASS'\n115600        MOVE 101 TO WS-ABEND-CODE\n115700        CALL 'ILBOABN0' USING WS-ABEND-CODE.\n115800\n115900     IF PARM-ENVIRONMENT NOT = 'F' AND\n116000        PARM-ENVIRONMENT NOT = 'B'\n116100        DISPLAY 'MISSING OR WRONG ENVIRONMENT INFORMATION'\n116200        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'\n116300        DISPLAY 'NEXT 4:          TEST OR PROD'\n116400        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'\n116500        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'\n116600        DISPLAY 'NEXT 1:          JOB MSGCLASS'\n116700        MOVE 102 TO WS-ABEND-CODE\n116800        CALL 'ILBOABN0' USING WS-ABEND-CODE.\n116900\n117000     IF PARM-MACHINE NOT = 'TEST' AND\n117100        PARM-MACHINE NOT = 'PROD'\n117200        DISPLAY 'MISSING OR WRONG IMAGE INFORMATION'\n117300        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'\n117400        DISPLAY 'NEXT 4:          TEST OR PROD'\n117500        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'\n117600        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'\n117700        DISPLAY 'NEXT 1:          JOB MSGCLASS'\n117800        MOVE 103 TO WS-ABEND-CODE\n117900        CALL 'ILBOABN0' USING WS-ABEND-CODE.\n118000\n118100     IF PROD-MACHINE             AND\n118200        JOBNAME = SPACES\n118300        DISPLAY 'MISSING JOBNAME WHILE RUNNING PROD'\n118400        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'\n118500        DISPLAY 'NEXT 4:          TEST OR PROD'\n118600        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'\n118700        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'\n118800        DISPLAY 'NEXT 1:          JOB MSGCLASS'\n118900        MOVE 104 TO WS-ABEND-CODE\n119000        CALL 'ILBOABN0' USING WS-ABEND-CODE.\n119100\n119200     IF PARM-BACKUP-HLQ = SPACES\n119300        DISPLAY 'MISSING BACKUP HIGH LEVEL QUALIFIER'\n119400        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'\n119500        DISPLAY 'NEXT 4:          TEST OR PROD'\n119600        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'\n119700        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'\n119800        DISPLAY 'NEXT 1:          JOB MSGCLASS'\n119900        MOVE 105 TO WS-ABEND-CODE\n120000        CALL 'ILBOABN0' USING WS-ABEND-CODE.\n120100\n120200     IF PARM-MSGCLASS NOT ALPHABETIC-UPPER\n120300        DISPLAY 'MISSING OR BAD JOB MSGCLASS IN PARM FIELD'\n120400        DISPLAY 'FIRST CHARACTER: F OR B (FOREGROUND/BACKGROUND)'\n120500        DISPLAY 'NEXT 4:          TEST OR PROD'\n120600        DISPLAY 'NEXT 8:          HLQ OF BACKUP DATASETS'\n120700        DISPLAY 'NEXT 8:          JOBNAME OF GENERATED JCL'\n120800        DISPLAY 'NEXT 1:          JOB MSGCLASS'\n120900        MOVE 106 TO WS-ABEND-CODE\n121000        CALL 'ILBOABN0' USING WS-ABEND-CODE.\n121100\n121200     IF RUNNING-IN-FOREGROUND\n121300        OPEN INPUT LISTCAT.\n121400\n121500     IF RUNNING-IN-BACKGROUND\n121600        OPEN INPUT DSNLIST.\n121700\n121800     OPEN INPUT  REGISET\n121900          OUTPUT EXCPRPT\n122000                 CHNGRPT.\n122100\n122200     ACCEPT WS-DATE FROM DATE.\n122300     MOVE WS-DATE-YY TO TL-RUN-DATE-YY.\n122400     MOVE WS-DATE-MM TO TL-RUN-DATE-MM.\n122500     MOVE WS-DATE-DD TO TL-RUN-DATE-DD.\n122600\n122700     MOVE 'CONTROL ERRORS RETURN'      TO ISPF-BUFFER.\n122800     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n122900\n123000     PERFORM 0005-VDEFINE                   THRU 0005-EXIT.\n123100\n123200     MOVE 'VSAMPGM' TO ABFUNC.\n123300\n123400     MOVE PARM-JOBNAME     TO JOBNAME.\n123500     MOVE PARM-MSGCLASS    TO MSGCLASS.\n123600     MOVE PARM-ENVIRONMENT TO ENVIRON.\n123700     MOVE PARM-BACKUP-HLQ  TO BKUPHLQ.\n123800     MOVE PARM-MACHINE     TO MACHINE.\n123900\n124000* Start file tailoring services and generate jobcard ...\n124100     MOVE 'VGET (ZTEMPF)' TO ISPF-BUFFER.\n124200     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n124300\n124400     IF RUNNING-IN-FOREGROUND\n124500        MOVE 'FTOPEN TEMP' TO ISPF-BUFFER\n124600     ELSE\n124700        MOVE 'FTOPEN' TO ISPF-BUFFER\n124800     END-IF.\n124900     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n125000\n125100     IF RETURN-CODE NOT = 0\n125200*           8 - FILE TAILORING ALREADY IN PROGRESS\n125300*          12 - OUTPUT FILE IN USE; ENQ FAILED\n125400*          16 - SKELETON LIBRARY AND/OR OUTPUT FILE IS NOT\n125500*               ALLOCATED\n125600*          20 - SEVERE ERROR\n125700        IF RUNNING-IN-FOREGROUND\n125800           MOVE RETURN-CODE TO ABCODE\n125900           MOVE '0003-INITIALIZE' TO ABPARA\n126000           MOVE 'REORG GEN FAILED' TO ABMSG\n126100         MOVE 'UNABLE TO START FILE TAILORING - ALLOCATION ERROR?'\n126200                             TO ABMISC\n126300           MOVE VSAM-STATUS TO ABVSAM\n126400           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT\n126500        ELSE\n126600           DISPLAY '0003-INITIALIZE'\n126700           DISPLAY 'FTOPEN FOR REORG/GEN FAILED'\n126800           DISPLAY\n126900            'UNABLE TO START FILE TAILORING - ALLOCATION ERROR?'\n127000           MOVE 107 TO WS-ABEND-CODE\n127100           CALL 'ILBOABN0' USING WS-ABEND-CODE\n127200        END-IF.\n127300\n127400     MOVE 'FTINCL AP1PVSAM' TO ISPF-BUFFER.\n127500     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n127600\n127700     IF RETURN-CODE NOT = 0\n127800*           8 - SKELETON DOES NOT EXIST\n127900*          12 - SKELETON OR TABLE IN USE; ENQ FAILED\n128000*          16 - DATA TRUNCATION OCCURRED; OR SKELETON LIBRARY\n128100*               AND/OR OUTPUT FILE NOT ALLOCATED\n128200*          20 - SEVERE ERROR\n128300        IF RUNNING-IN-FOREGROUND\n128400           MOVE RETURN-CODE  TO ABCODE\n128500           MOVE '0600-GENERATE-JOBS' TO ABPARA\n128600           MOVE 'INCLUDE SKELETON FAILED' TO ABMSG\n128700           MOVE 'UNABLE TO INCLUDE SKELETON - NOT FOUND?'\n128800                             TO ABMISC\n128900           MOVE VSAM-STATUS  TO ABVSAM\n129000           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT\n129100        ELSE\n129200           MOVE RETURN-CODE  TO ABCODE\n129300           DISPLAY '0003-INITIALIZE'\n129400           DISPLAY 'INCLUDE AP1PVSAM SKELETON FAILED'\n129500           MOVE 101 TO WS-ABEND-CODE\n129600           CALL 'ILBOABN0' USING WS-ABEND-CODE\n129700        END-IF.\n129800\n129900 0003-EXIT.\n130000     EXIT.\n130100     EJECT\n130200 0005-VDEFINE.\n130300\n130400*    CALL VDEFINE TO DEFINE DIALOG FUNCTION VARIABLES TO ISPF.\n130500\n130600     CALL 'ISPLINK' USING VDEFINE        ISPF-NAME-VDEFINE\n130700                    ISPF-VARIABLE-LIST   ISPF-FORMAT-LIST\n130800                    ISPF-LENGTH-LIST     ISPF-VDEFINE-OPTION.\n130900\n131000     PERFORM 0005C-VERIFY-WS-INTEGRITY      THRU 0005C-EXIT.\n131100\n131200 0005-EXIT.\n131300     EXIT.\n131400     EJECT\n131500 0005C-VERIFY-WS-INTEGRITY.\n131600\n131700* Here we verify in part working-storage integrity. See maintennance\n131800* notes at the beginning of this program.\n131900\n132000* LENGTH OF ISPF-LENGTH-LIST.\n132100     COMPUTE AACLOILL\n132200           = ISPF-NAME-CNT\n132300           * 4.\n132400\n132500* LENGTH OF ISPF-NAME-VDEFINE.\n132600     COMPUTE AACLOINV\n132700           = ISPF-NAME-CNT\n132800           * 8\n132900           + 8.\n133000\n133100* LENGTH OF ISPF-FORMAT-LIST.\n133200     COMPUTE AACLOIFL\n133300           = ISPF-NAME-CNT\n133400           * 8.\n133500\n133600     MOVE ISPF-LENGTH-LIST TO ISPF-LENGTH-TABLE.\n133700     MOVE 0 TO AACLOIVL.\n133800\n133900     PERFORM 0005D-ADD-LENGTHS            THRU 0005D-EXIT\n134000             VARYING LENGTH-SUB FROM 1 BY 1\n134100             UNTIL   LENGTH-SUB > ISPF-NAME-CNT.\n134200\n134300     IF (LENGTH OF ISPF-LENGTH-LIST   NOT = AACLOILL) OR\n134400        (LENGTH OF ISPF-NAME-VDEFINE  NOT = AACLOINV) OR\n134500        (LENGTH OF ISPF-FORMAT-LIST   NOT = AACLOIFL) OR\n134600        (LENGTH OF ISPF-VARIABLE-LIST NOT = AACLOIVL)\n134700            MOVE LENGTH OF ISPF-LENGTH-LIST   TO AALOILL\n134800            MOVE LENGTH OF ISPF-NAME-VDEFINE  TO AALOINV\n134900            MOVE LENGTH OF ISPF-FORMAT-LIST   TO AALOIFL\n135000            MOVE LENGTH OF ISPF-VARIABLE-LIST TO AALOIVL\n135100            IF RUNNING-IN-FOREGROUND\n135200               MOVE 'DISPLAY PANEL(RSISPFWS)'    TO ISPF-BUFFER\n135300               CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER\n135400            ELSE\n135500               DISPLAY 'WORKING STORAGE INTEGRITY CHECK FAILED.'\n135600               MOVE 107 TO WS-ABEND-CODE\n135700               CALL 'ILBOABN0' USING WS-ABEND-CODE\n135800            END-IF\n135900            PERFORM 0017-VDELETE          THRU 0017-EXIT\n136000            STOP RUN.\n136100\n136200 0005C-EXIT.\n136300     EXIT.\n136400\n136500 0005D-ADD-LENGTHS.\n136600\n136700* LENGTH OF ISPF-VARIABLE-LIST.\n136800     COMPUTE AACLOIVL\n136900           = AACLOIVL\n137000           + ISPF-LENGTH-ENTRY (LENGTH-SUB).\n137100\n137200 0005D-EXIT.\n137300     EXIT.\n137400     EJECT\n137500 0017-VDELETE.\n137600\n137700     MOVE  1         TO ISPF-NAME-COUNT.\n137800     MOVE '*       ' TO ISPF-NAME(1).\n137900     CALL 'ISPLINK' USING  VDELETE       ISPF-NAME-LIST.\n138000*    IF RETURN-CODE NOT = 0\n138100*           8 - AT LEAST ONE VARIABLE NOT FOUND\n138200*          20 - SEVERE ERROR\n138300*        NEXT SENTENCE.\n138400\n138500 0017-EXIT.\n138600     EXIT.\n138700     EJECT\n138800 0050-PROCESS-DSN-LIST.\n138900\n139000     MOVE 'N'    TO WS-ALTERNATE-INDEX-SW\n139100                    WS-IMBEDDED-FILE-SW\n139200                    WS-RECOVERY-SW\n139300                    WS-WRITECHK-SW\n139400                    WS-REPLICAT-SW\n139500                    WS-ERASE-SW.\n139600     MOVE SPACES TO COLFLG1\n139700                    COLFLG2\n139800                    COLFLG3\n139900                    COLFLG4\n140000                    COLFLG5\n140100                    SPANNED.\n140200\n140300     IF RUNNING-IN-FOREGROUND\n140400        GO TO 0050-SKIP-BACKGROUND-STUFF.\n140500\n140600     PERFORM 9010-READ-DSNLIST              THRU 9010-EXIT.\n140700     IF END-OF-DSN-FILE\n140800        GO TO 0050-EXIT.\n140900\n141000     OPEN OUTPUT SYSIN.\n141100\n141200     MOVE SPACES TO SYSIN-RECORD.\n141300     STRING ' LISTC ENTRY('''          DELIMITED BY SIZE\n141400            VSAM-DATASET-NAME          DELIMITED BY SPACE\n141500            ''') ALL OUTFILE(LISTCAT)' DELIMITED BY SIZE\n141600       INTO SYSIN-RECORD.\n141700\n141800     WRITE SYSIN-RECORD.\n141900\n142000     CLOSE SYSIN.\n142100\n142200     CALL 'IDCAMS'.\n142300     IF RETURN-CODE > 0\n142400        DISPLAY 'IDCAMS LISTCAT FAILED ON DSN='\n142500                VSAM-DATASET-NAME\n142600        GO TO 0050-EXIT.\n142700\n142800     OPEN INPUT LISTCAT.\n142900\n143000 0050-SKIP-BACKGROUND-STUFF.\n143100     MOVE 0             TO WS-TOTAL-TRACKS-IN-FILE.\n143200     MOVE 'N'           TO END-OF-FILE-SW.\n143300     MOVE SPACES        TO VOLSER\n143400                           EXCPRPT-RECORD.\n143500     PERFORM 0100-GATHER-LISTCAT-INFO       THRU 0100-EXIT\n143600             UNTIL END-OF-FILE.\n143700\n143800     IF ALTERNATE-INDEX\n143900        MOVE SPACES TO EXCPRPT-RECORD\n144000        MOVE 'File is or has an AIX'  TO ER-EXCEPTION\n144100                                  ZEDSMSG\n144200        MOVE 'No action taken' TO ER-ACTION\n144300                                  ZEDLMSG\n144400        IF RUNNING-IN-BACKGROUND\n144500           MOVE VSAM-DATASET-NAME TO ER-DATASET-NAME\n144600           PERFORM 8000-WRITE-EXCPRPT-RECORD THRU 8000-EXIT\n144700           CLOSE LISTCAT\n144800        ELSE\n144900           MOVE 'SETMSG MSG(ISRZ001)' TO ISPF-BUFFER\n145000           CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER\n145100        END-IF\n145200        GO TO 0050-EXIT.\n145300\n145400     IF VOLSER = 'MIGRAT'\n145500        MOVE SPACES TO EXCPRPT-RECORD\n145600        MOVE 'File migrated'   TO ER-EXCEPTION\n145700                                  ZEDSMSG\n145800        MOVE 'No action taken' TO ER-ACTION\n145900                                  ZEDLMSG\n146000        IF RUNNING-IN-BACKGROUND\n146100           MOVE VSAM-DATASET-NAME TO ER-DATASET-NAME\n146200           PERFORM 8000-WRITE-EXCPRPT-RECORD THRU 8000-EXIT\n146300           CLOSE LISTCAT\n146400        ELSE\n146500           MOVE 'SETMSG MSG(ISRZ001)' TO ISPF-BUFFER\n146600           CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER\n146700        END-IF\n146800        GO TO 0050-EXIT.\n146900\n147000     IF WS-KEY-LENGTH = 0\n147100        MOVE SPACES TO EXCPRPT-RECORD\n147200        MOVE 'File not KSDS'   TO ER-EXCEPTION\n147300                                  ZEDSMSG\n147400        MOVE 'No action taken' TO ER-ACTION\n147500                                  ZEDLMSG\n147600        IF RUNNING-IN-BACKGROUND\n147700           MOVE VSAM-DATASET-NAME TO ER-DATASET-NAME\n147800           PERFORM 8000-WRITE-EXCPRPT-RECORD THRU 8000-EXIT\n147900           CLOSE LISTCAT\n148000        ELSE\n148100           MOVE 'SETMSG MSG(ISRZ001)' TO ISPF-BUFFER\n148200           CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER\n148300        END-IF\n148400        GO TO 0050-EXIT.\n148500\n148600     PERFORM 0200-CALCULATE-STATS           THRU 0200-EXIT.\n148700     IF WS-ALLOCATED-CYLINDERS < 10 AND\n148800        RUNNING-IN-BACKGROUND\n148900           CLOSE LISTCAT\n149000           GO TO 0050-EXIT.\n149100     IF WS-RECORDS-PER-CYLINDER = 0\n149200        IF RUNNING-IN-BACKGROUND\n149300           CLOSE LISTCAT\n149400        END-IF\n149500           GO TO 0050-EXIT\n149600     END-IF.\n149700\n149800     MOVE 0 TO OFFSET.\n149900     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n150000                FOR ALL 'INDEX ---'.\n150100     IF OFFSET > 0\n150200        MOVE 'N' TO END-OF-FILE-SW\n150300        PERFORM 0300-GET-INDEX-CISIZE       THRU 0300-EXIT\n150400                UNTIL END-OF-FILE.\n150500\n150600     IF RUNNING-IN-BACKGROUND\n150700        CLOSE LISTCAT.\n150800\n150900     PERFORM 0400-SET-SCREEN-COLORS         THRU 0400-EXIT.\n151000\n151100     PERFORM 0500-TREAT-EXCEPTION           THRU 0500-EXIT.\n151200\n151300     IF RUNNING-IN-FOREGROUND\n151400        PERFORM 0055-DISPLAY-INFO           THRU 0055-EXIT.\n151500\n151600 0050-EXIT.\n151700     EXIT.\n151800     EJECT\n151900 0055-DISPLAY-INFO.\n152000\n152100     MOVE 'DISPLAY PANEL(AP1PVSAM)' TO ISPF-BUFFER.\n152200     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n152300\n152400     IF RETURN-CODE > 8\n152500*           4 - COMMAND NOT FOUND\n152600*           8 - END OR RETURN COMMAND ENTERED\n152700*          12 - PANEL, MESSAGE, OR CURSOR FIELD COULD NOT BE FOUND\n152800*          16 - DATA TRUNCATION OR TRANSLATION ERROR\n152900*          20 - SEVERE ERROR\n153000        MOVE RETURN-CODE TO ABCODE\n153100        MOVE '0055-DISPLAY-INFO'\n153200                          TO ABPARA\n153300        MOVE 'UNABLE TO DISPLAY AP1PVSAM PANEL'\n153400                          TO ABMSG\n153500        MOVE 'IF CODE = 12: PANEL NOT FOUND'\n153600                          TO ABMISC\n153700        MOVE VSAM-STATUS  TO ABVSAM\n153800        PERFORM 9999-ISPF-ABEND             THRU 9999-EXIT.\n153900\n154000 0055-EXIT.\n154100     EXIT.\n154200     EJECT\n154300\n154400 0100-GATHER-LISTCAT-INFO.\n154500\n154600     PERFORM 9000-READ-LISTCAT              THRU 9000-EXIT.\n154700     IF END-OF-FILE\n154800        GO TO 0100-EXIT.\n154900\n155000     IF WS-LISTCAT-RECORD (96:5) = 'IMBED'\n155100        MOVE 'Y' TO WS-IMBEDDED-FILE-SW.\n155200\n155300     IF WS-LISTCAT-RECORD (24:10) = ' RECOVERY '\n155400        MOVE 'Y' TO WS-RECOVERY-SW.\n155500\n155600     IF WS-LISTCAT-RECORD (37:9) = ' SPANNED '\n155700        MOVE 'Y' TO SPANNED.\n155800\n155900     IF WS-LISTCAT-RECORD (80:11) = ' WRITECHECK'\n156000        MOVE 'Y' TO WS-WRITECHK-SW.\n156100\n156200     IF WS-LISTCAT-RECORD (109:9) = ' REPLICAT'\n156300        MOVE 'Y' TO WS-REPLICAT-SW.\n156400\n156500     IF WS-LISTCAT-RECORD (56:6) = ' ERASE'\n156600        MOVE 'Y' TO WS-ERASE-SW.\n156700\n156800     IF WS-LISTCAT-RECORD (8:10) = ' SHROPTNS('\n156900        MOVE WS-LISTCAT-RECORD (18:3) TO SHROPTNS\n157000        IF WS-LISTCAT-RECORD (66:8) NOT = ' INDEXED'\n157100* An RRDS dataset will have a key length of 4. Here we detect\n157200* an RRDS or ESDS dataset and fake out the key length, which is\n157300* used to detect non-KSDS datasets.\n157400           MOVE 0 TO WS-KEY-LENGTH\n157500           MOVE 'Y' TO END-OF-FILE-SW\n157600           GO TO 0100-EXIT.\n157700\n157800* Detect alternate exit.\n157900     MOVE 0 TO OFFSET.\n158000     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n158100             FOR ALL 'AIX------'.\n158200     IF OFFSET > 0\n158300        MOVE 'Y' TO END-OF-FILE-SW\n158400        MOVE 'Y' TO WS-ALTERNATE-INDEX-SW\n158500        GO TO 0100-EXIT\n158600     END-IF.\n158700\n158800* Get data set name\n158900     MOVE 0 TO OFFSET.\n159000     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n159100             FOR ALL 'CLUSTER--'.\n159200     IF OFFSET > 0\n159300        MOVE WS-LISTCAT-RECORD (18:44) TO DSNAME\n159400     END-IF.\n159500\n159600* Get key length, avg lrecl, and data cisize\n159700     MOVE 0 TO OFFSET.\n159800     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n159900                FOR ALL 'KEYLEN'.\n160000     IF OFFSET > 0\n160100        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA\n160200        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n160300        MOVE WS-ALPHA-ZD TO WS-KEY-LENGTH\n160400        IF WS-KEY-LENGTH = 0\n160500           MOVE 'Y' TO END-OF-FILE-SW\n160600           GO TO 0100-EXIT\n160700        END-IF\n160800\n160900        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA\n161000        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n161100        MOVE WS-ALPHA-ZD TO WS-LISTCAT-AVERAGE-LRECL\n161200\n161300        MOVE WS-LISTCAT-RECORD (109:11) TO WS-ALPHA\n161400        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n161500        MOVE WS-ALPHA-ZD TO WS-DATA-CISIZE\n161600\n161700        GO TO 0100-EXIT\n161800     END-IF.\n161900\n162000* Get key offset, max lrecl and CIs per CA\n162100     MOVE 0 TO OFFSET.\n162200     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n162300                FOR ALL 'RKP-'.\n162400     IF OFFSET > 0\n162500        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA\n162600        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n162700        MOVE WS-ALPHA-ZD TO KEYOFF\n162800\n162900        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA\n163000        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n163100        MOVE WS-ALPHA-ZD TO WS-LISTCAT-MAXIMUM-LRECL\n163200\n163300        MOVE WS-LISTCAT-RECORD (109:11) TO WS-ALPHA\n163400        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n163500        MOVE WS-ALPHA-ZD TO WS-CI-PER-CA\n163600\n163700        GO TO 0100-EXIT\n163800     END-IF.\n163900\n164000* Get statistics\n164100     MOVE 0 TO OFFSET.\n164200     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n164300                FOR ALL 'REC-TOTAL-'.\n164400     IF OFFSET > 0\n164500        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA\n164600        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n164700        MOVE WS-ALPHA-ZD TO WS-RECORDS-IN-FILE\n164800\n164900        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA\n165000        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n165100        MOVE WS-ALPHA-ZD TO WS-CI-SPLITS\n165200\n165300        GO TO 0100-EXIT\n165400     END-IF.\n165500\n165600     MOVE 0 TO OFFSET.\n165700     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n165800                FOR ALL 'REC-DELETED-'.\n165900     IF OFFSET > 0\n166000        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA\n166100        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n166200        MOVE WS-ALPHA-ZD TO RECDEL\n166300\n166400        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA\n166500        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n166600        MOVE WS-ALPHA-ZD TO WS-CA-SPLITS\n166700\n166800        MOVE WS-LISTCAT-RECORD (86:5) TO WS-ALPHA\n166900        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n167000        MOVE WS-ALPHA-ZD TO WS-EXTENTS\n167100\n167200        GO TO 0100-EXIT\n167300     END-IF.\n167400\n167500     MOVE 0 TO OFFSET.\n167600     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n167700                FOR ALL 'REC-INSERTED-'.\n167800     IF OFFSET > 0\n167900        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA\n168000        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n168100        MOVE WS-ALPHA-ZD TO RECINS\n168200\n168300        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA\n168400        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n168500        MOVE WS-ALPHA-ZD TO WS-FREESPACE-PERCENT-CI\n168600\n168700        GO TO 0100-EXIT\n168800     END-IF.\n168900\n169000     MOVE 0 TO OFFSET.\n169100     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n169200                FOR ALL 'REC-UPDATED-'.\n169300     IF OFFSET > 0\n169400        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA\n169500        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n169600        MOVE WS-ALPHA-ZD TO RECUPD\n169700\n169800        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA\n169900        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n170000        MOVE WS-ALPHA-ZD TO WS-FREESPACE-PERCENT-CA\n170100\n170200        GO TO 0100-EXIT\n170300     END-IF.\n170400\n170500     MOVE 0 TO OFFSET.\n170600     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n170700                FOR ALL 'REC-RETRIEVED'.\n170800     IF OFFSET > 0\n170900        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA\n171000        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n171100        MOVE WS-ALPHA-ZD TO RECREAD\n171200\n171300        GO TO 0100-EXIT\n171400     END-IF.\n171500\n171600* Get allocation stats\n171700     MOVE 0 TO OFFSET.\n171800     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n171900                FOR ALL 'SPACE-TYPE-'.\n172000     IF OFFSET > 0\n172100        IF WS-LISTCAT-RECORD (25:8) = 'CYLINDER'\n172200           MOVE 'CYLS' TO SPACTYPE\n172300        ELSE\n172400           MOVE 'TRKS' TO SPACTYPE\n172500        END-IF\n172600\n172700        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA\n172800        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n172900        MOVE WS-ALPHA-ZD TO WS-HIGH-ALLOCATED-RBA\n173000\n173100        PERFORM 9000-READ-LISTCAT           THRU 9000-EXIT\n173200        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA\n173300        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n173400        MOVE WS-ALPHA-ZD TO PRIMARY\n173500\n173600        MOVE WS-LISTCAT-RECORD (51:11) TO WS-ALPHA\n173700        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n173800        MOVE WS-ALPHA-ZD TO WS-HIGH-USED-RBA\n173900\n174000        PERFORM 9000-READ-LISTCAT           THRU 9000-EXIT\n174100        MOVE WS-LISTCAT-RECORD (22:11) TO WS-ALPHA\n174200        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n174300        MOVE WS-ALPHA-ZD TO SECNDARY\n174400     END-IF.\n174500\n174600* Get volume stats (how many tracks are allocated)\n174700     MOVE 0 TO OFFSET.\n174800     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n174900                FOR ALL 'LOW-CCHH-'.\n175000     IF OFFSET > 0\n175100        MOVE WS-LISTCAT-RECORD (81:10) TO WS-ALPHA\n175200        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n175300        ADD  WS-ALPHA-ZD TO WS-TOTAL-TRACKS-IN-FILE\n175400     END-IF.\n175500\n175600* Get volser (for production redefines)\n175700* Occasionally, the VOLSER field in the LISTCAT is corrupted.\n175800* Checking for spaces can correct it.\n175900     MOVE 0 TO OFFSET.\n176000     IF VOLSER = SPACES\n176100        INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n176200                FOR ALL 'VOLSER---'\n176300        IF OFFSET > 0\n176400           MOVE WS-LISTCAT-RECORD (27:6) TO VOLSER\n176500           IF VOLSER = 'MIGRAT'\n176600              MOVE 'Y' TO END-OF-FILE-SW\n176700              GO TO 0100-EXIT\n176800        END-IF\n176900     END-IF.\n177000\n177100 0100-EXIT.\n177200     EXIT.\n177300     EJECT\n177400 0200-CALCULATE-STATS.\n177500\n177600* Control interval overhead is 10 bytes for fixed records.\n177700* Variable records have more overhead. Hopefully 16 is a good average.\n177800     IF WS-LISTCAT-AVERAGE-LRECL = WS-LISTCAT-MAXIMUM-LRECL\n177900        COMPUTE WS-CI-OVERHEAD = 10\n178000     ELSE\n178100        COMPUTE WS-CI-OVERHEAD = 16.\n178200\n178300* how many bytes are in the free area of each CI\n178400     COMPUTE WS-CI-FREE-BYTES\n178500           = WS-FREESPACE-PERCENT-CI\n178600           * WS-DATA-CISIZE\n178700           / 100.\n178800\n178900     COMPUTE WS-LOADED-CIS-PER-CA\n179000           = WS-CI-PER-CA\n179100           * (100 - WS-FREESPACE-PERCENT-CA)\n179200           / 100.\n179300\n179400* Find out if the file is compressed.\n179500     MOVE SPACE             TO BMC-COMPRESSION-FLAG.\n179600     IF RUNNING-IN-BACKGROUND\n179700        MOVE VSAM-DATASET-NAME TO BMC-VSAM-DATASET-NAME\n179800     ELSE\n179900        MOVE DSNAME            TO BMC-VSAM-DATASET-NAME\n180000     END-IF.\n180100     MOVE WS-REG-KEY        TO REG-KEY.\n180200     READ REGISET  KEY      IS REG-KEY.\n180300     IF VSAM-NOT-FOUND      OR\n180400        VSAM-SUCCESSFUL\n180500           NEXT SENTENCE\n180600     ELSE\n180700        DISPLAY 'UNSUCCESSFUL READ ON REGISET FILE'\n180800        DISPLAY 'PARAGRAF: 0518-CALCULATE-SPACE'\n180900        DISPLAY 'KEY IS: ' REG-KEY\n181000        DISPLAY 'VSAM STATUS CODE: ' VSAM-STATUS\n181100        MOVE 100 TO WS-ABEND-CODE\n181200        CALL 'ILBOABN0' USING WS-ABEND-CODE.\n181300\n181400     IF BMC-COMPRESSED-FILE\n181500        MOVE 'Y' TO BMCFLAG\n181600     ELSE\n181700        MOVE 'N' TO BMCFLAG.\n181800\n181900* Total allocated cylinders.\n182000     COMPUTE WS-ALLOCATED-CYLINDERS\n182100           = WS-TOTAL-TRACKS-IN-FILE\n182200           / WS-TRACKS-PER-CYL.\n182300* Failsafe ....\n182400     IF WS-ALLOCATED-CYLINDERS = 0\n182500        COMPUTE WS-ALLOCATED-CYLINDERS = 1.\n182600\n182700* Space wasted due to CA and CI splits is calculated here as a\n182800* percentage\n182900     IF WS-CA-SPLITS > 0\n183000        COMPUTE WS-CA-SPLITS-DISTORTION\n183100              = (WS-CA-SPLITS\n183200              /  2)\n183300              /  WS-ALLOCATED-CYLINDERS\n183400     ELSE\n183500        MOVE 0 TO WS-CA-SPLITS-DISTORTION.\n183600\n183700     IF WS-CI-SPLITS > 0\n183800        COMPUTE WS-CI-SPLITS-DISTORTION\n183900              = (WS-CI-SPLITS\n184000              /  2)\n184100              / (WS-ALLOCATED-CYLINDERS\n184200              *  WS-CI-PER-CA)\n184300     ELSE\n184400        MOVE 0 TO WS-CI-SPLITS-DISTORTION.\n184500\n184600*  percent used    (in 0.99% format)\n184700     COMPUTE WS-PERCENT-FILE-USED ROUNDED\n184800           = WS-HIGH-USED-RBA\n184900           / WS-HIGH-ALLOCATED-RBA.\n185000\n185100*  true percent used (without space wasted due to splits)\n185200     COMPUTE WS-TRUE-PERCENT-FILE-USED ROUNDED\n185300           = WS-PERCENT-FILE-USED\n185400           - WS-CI-SPLITS-DISTORTION\n185500           - WS-CA-SPLITS-DISTORTION.\n185600\n185700* Too small to worry about\n185800     IF WS-ALLOCATED-CYLINDERS < 10\n185900        MOVE SPACES TO EXCPRPT-RECORD\n186000        MOVE 'File too small to worry about' TO ER-EXCEPTION\n186100        MOVE 'No action taken'               TO ER-ACTION\n186200        MOVE VSAM-DATASET-NAME               TO ER-DATASET-NAME\n186300        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT\n186400        IF RUNNING-IN-BACKGROUND\n186500           GO TO 0200-EXIT.\n186600\n186700*            annual cost for the used portion of the file\n186800     COMPUTE WS-FREE-AND-USED-COST ROUNDED\n186900           =  WS-ALLOCATED-CYLINDERS\n187000           *  WS-PERCENT-FILE-USED\n187100           *  WS-DAILY-GB-COST\n187200           *  365\n187300           *  WS-GIGABYTE-PER-CYL.\n187400\n187500*            annual cost for the unused portion of the file\n187600     COMPUTE WS-UNUSED-SPACE-COST ROUNDED\n187700           =  WS-ALLOCATED-CYLINDERS\n187800           * (1 - WS-PERCENT-FILE-USED)\n187900           *  WS-DAILY-GB-COST\n188000           *  365\n188100           *  WS-GIGABYTE-PER-CYL.\n188200\n188300*            annual cost for the whole bloody file ...\n188400     COMPUTE WS-ANNUAL-COST-OF-FILE ROUNDED\n188500           = WS-FREE-AND-USED-COST\n188600           + WS-UNUSED-SPACE-COST.\n188700\n188800* percent used in 99.99% format...\n188900     COMPUTE PCTUSED ROUNDED\n189000           = WS-PERCENT-FILE-USED\n189100           * 100.\n189200\n189300* percent of total cost represented by unused space\n189400     COMPUTE WS-UNUSED-SPACE-PCT-OF-COST ROUNDED\n189500           = WS-UNUSED-SPACE-COST\n189600           / WS-ANNUAL-COST-OF-FILE\n189700           * 100.\n189800\n189900* percent of total cost represented by used (incl free) space\n190000     COMPUTE WS-FREE-AND-USED-PCT-OF-COST ROUNDED\n190100           = WS-FREE-AND-USED-COST\n190200           / WS-ANNUAL-COST-OF-FILE\n190300           * 100.\n190400\n190500* Cost of CI free space\n190600     COMPUTE WS-CI-FREESPACE-COST ROUNDED\n190700           = WS-FREE-AND-USED-COST\n190800           * (WS-FREESPACE-PERCENT-CI / 100).\n190900\n191000* Cost of CA free space\n191100     COMPUTE WS-CA-FREESPACE-COST ROUNDED\n191200           = WS-FREE-AND-USED-COST\n191300           * (WS-FREESPACE-PERCENT-CA / 100).\n191400\n191500* Cost of CI and CA free space\n191600     COMPUTE WS-FREESPACE-COST ROUNDED\n191700           = WS-CI-FREESPACE-COST\n191800           + WS-CA-FREESPACE-COST.\n191900\n192000* percent of total cost as represented by CI free space\n192100     COMPUTE WS-CI-FREESPACE-PCT-OF-COST ROUNDED\n192200           = WS-CI-FREESPACE-COST\n192300           / WS-ANNUAL-COST-OF-FILE\n192400           * 100.\n192500\n192600* percent of total cost as represented by CA free space\n192700     COMPUTE WS-CA-FREESPACE-PCT-OF-COST ROUNDED\n192800           = WS-CA-FREESPACE-COST\n192900           / WS-ANNUAL-COST-OF-FILE\n193000           * 100.\n193100\n193200* percent of total cost as represented by CI and CA free space\n193300     COMPUTE WS-FREESPACE-PCT-OF-COST ROUNDED\n193400           = WS-CI-FREESPACE-PCT-OF-COST\n193500           + WS-CA-FREESPACE-PCT-OF-COST.\n193600\n193700* cost of unused and free space\n193800     COMPUTE WS-FREE-AND-UNUSED-COST ROUNDED\n193900           = WS-FREESPACE-COST\n194000           + WS-UNUSED-SPACE-COST.\n194100\n194200* percent of total cost as represented by free space and unused space\n194300     COMPUTE WS-FREE-AND-UNUSED-PCT-OF-COST ROUNDED\n194400           = WS-FREESPACE-PCT-OF-COST\n194500           + WS-UNUSED-SPACE-PCT-OF-COST.\n194600\n194700* Records per cylinder.\n194800* If the file is not compressed and consists of fixed records,\n194900* we use the sure-fire method. Even the \"sure-fire\" method doesn't\n195000* work if a VSAM file has the following attributes: CISIZE=4K,\n195100* LRECL=4089, CIFREE % = n. That's why an additional fail-safe\n195200* is installed.\n195300\n195400     IF ((NOT BMC-COMPRESSED-FILE)  AND\n195500          WS-LISTCAT-MAXIMUM-LRECL = WS-LISTCAT-AVERAGE-LRECL) OR\n195600          (WS-PERCENT-FILE-USED = 0)\n195700        COMPUTE WS-ALPHA-ZD\n195800           = (WS-DATA-CISIZE\n195900           -  WS-CI-OVERHEAD\n196000           -  WS-CI-FREE-BYTES)\n196100           /  WS-LISTCAT-AVERAGE-LRECL\n196200           *  WS-LOADED-CIS-PER-CA\n196300        MOVE WS-ALPHA-ZD TO WS-RECORDS-PER-CYLINDER\n196400        IF WS-RECORDS-PER-CYLINDER = 0\n196500           MOVE SPACES TO EXCPRPT-RECORD\n196600           MOVE 'Cannot process file. Bad news.' TO ER-EXCEPTION\n196700                                                    ZEDSMSG\n196800           MOVE 'No action taken'               TO ER-ACTION\n196900                                                    ZEDLMSG\n197000           IF RUNNING-IN-BACKGROUND\n197100              MOVE VSAM-DATASET-NAME TO ER-DATASET-NAME\n197200              PERFORM 8000-WRITE-EXCPRPT-RECORD THRU 8000-EXIT\n197300           ELSE\n197400              MOVE 'SETMSG MSG(ISRZ001)' TO ISPF-BUFFER\n197500              CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER\n197600           END-IF\n197700           GO TO 0200-EXIT\n197800        END-IF\n197900     ELSE\n198000        COMPUTE WS-RECORDS-PER-CYLINDER\n198100              =  WS-RECORDS-IN-FILE\n198200              / (WS-ALLOCATED-CYLINDERS * WS-PERCENT-FILE-USED)\n198300     END-IF.\n198400\n198500* additional records file can accommodate w/o going into extents.\n198600     COMPUTE ADDRECS\n198700           = WS-RECORDS-PER-CYLINDER\n198800           * (1 - WS-PERCENT-FILE-USED)\n198900           * WS-ALLOCATED-CYLINDERS.\n199000\n199100* Here the true average LRECL is calculated in case the LISTCAT\n199200* version is wrong (which it certainly is if compression is on).\n199300* In addition, variable length files with splits need adjusting.\n199400\n199500     IF ((NOT BMC-COMPRESSED-FILE)  AND\n199600          WS-LISTCAT-MAXIMUM-LRECL = WS-LISTCAT-AVERAGE-LRECL) OR\n199700          (WS-PERCENT-FILE-USED = 0)                           OR\n199800          (WS-RECORDS-IN-FILE   < 500)\n199900           MOVE WS-LISTCAT-AVERAGE-LRECL TO WS-TRUE-AVERAGE-LRECL\n200000     ELSE\n200100           COMPUTE WS-TRUE-AVERAGE-LRECL\n200200                 =  (WS-DATA-CISIZE\n200300                 -   WS-CI-OVERHEAD\n200400                 -   WS-CI-FREE-BYTES)\n200500                 *   WS-LOADED-CIS-PER-CA\n200600                 / ((WS-RECORDS-IN-FILE\n200700                 /  (WS-ALLOCATED-CYLINDERS\n200800                 *   WS-TRUE-PERCENT-FILE-USED))).\n200900\n201000* If the catalog is wrong with the record count (like way wrong), the\n201100* true avglrecl will be wrong too. Here's one correction:\n201200     IF WS-TRUE-AVERAGE-LRECL < 8\n201300        COMPUTE WS-TRUE-AVERAGE-LRECL = WS-LISTCAT-AVERAGE-LRECL.\n201400\n201500* The safety is on ...\n201600     IF WS-TRUE-AVERAGE-LRECL > WS-LISTCAT-MAXIMUM-LRECL\n201700        COMPUTE WS-TRUE-AVERAGE-LRECL = WS-LISTCAT-AVERAGE-LRECL.\n201800\n201900     PERFORM 0210-CALC-FREE-STUFF           THRU 0210-EXIT.\n202000\n202100 0200-EXIT.\n202200     EXIT.\n202300     EJECT\n202400 0210-CALC-FREE-STUFF.\n202500\n202600* what CI freespace percentage is required to store 1 record\n202700     COMPUTE WS-FREE-CI-PERCENTAGE-1\n202800           = WS-TRUE-AVERAGE-LRECL\n202900           / WS-DATA-CISIZE\n203000           * 100\n203100           + 1.\n203200\n203300* what CI freespace percentage is required to store 2 records\n203400     COMPUTE WS-FREE-CI-PERCENTAGE-2\n203500           = (WS-TRUE-AVERAGE-LRECL\n203600           / WS-DATA-CISIZE\n203700           *  100)\n203800           *  2\n203900           +  1.\n204000\n204100* what CI freespace percentage is required to store 3 records\n204200     COMPUTE WS-FREE-CI-PERCENTAGE-3\n204300           = (WS-TRUE-AVERAGE-LRECL\n204400           / WS-DATA-CISIZE\n204500           *  100)\n204600           *  3\n204700           +  1.\n204800\n204900* what CI freespace percentage is required to store 4 records\n205000     COMPUTE WS-FREE-CI-PERCENTAGE-4\n205100           = (WS-TRUE-AVERAGE-LRECL\n205200           / WS-DATA-CISIZE\n205300           *  100)\n205400           *  4\n205500           +  1.\n205600\n205700* what CI freespace percentage is required to store 5 records\n205800     COMPUTE WS-FREE-CI-PERCENTAGE-5\n205900           = (WS-TRUE-AVERAGE-LRECL\n206000           / WS-DATA-CISIZE\n206100           *  100)\n206200           *  5\n206300           +  1.\n206400\n206500* what CI freespace percentage is required to store 6 records\n206600     COMPUTE WS-FREE-CI-PERCENTAGE-6\n206700           = (WS-TRUE-AVERAGE-LRECL\n206800           / WS-DATA-CISIZE\n206900           *  100)\n207000           *  6\n207100           +  1.\n207200\n207300* what CI freespace percentage is required to store 7 records\n207400     COMPUTE WS-FREE-CI-PERCENTAGE-7\n207500           = (WS-TRUE-AVERAGE-LRECL\n207600           / WS-DATA-CISIZE\n207700           *  100)\n207800           *  7\n207900           +  1.\n208000\n208100* what CI freespace percentage is required to store 8 records\n208200     COMPUTE WS-FREE-CI-PERCENTAGE-8\n208300           = (WS-TRUE-AVERAGE-LRECL\n208400           / WS-DATA-CISIZE\n208500           *  100)\n208600           *  8\n208700           +  1.\n208800\n208900* what CI freespace percentage is required to store 9 records\n209000     COMPUTE WS-FREE-CI-PERCENTAGE-9\n209100           = (WS-TRUE-AVERAGE-LRECL\n209200           / WS-DATA-CISIZE\n209300           *  100)\n209400           *  9\n209500           +  1.\n209600\n209700 0210-EXIT.\n209800     EXIT.\n209900     EJECT\n210000 0300-GET-INDEX-CISIZE.\n210100\n210200     PERFORM 9000-READ-LISTCAT              THRU 9000-EXIT.\n210300     IF END-OF-FILE\n210400        GO TO 0300-EXIT.\n210500\n210600     MOVE 0 TO OFFSET.\n210700     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n210800                FOR ALL ' ATTRIBUTES'.\n210900     IF OFFSET > 0\n211000        PERFORM 9000-READ-LISTCAT           THRU 9000-EXIT\n211100        MOVE WS-LISTCAT-RECORD (109:11) TO WS-ALPHA\n211200        INSPECT WS-ALPHA REPLACING ALL '-' BY '0'\n211300        MOVE WS-ALPHA-ZD TO WS-INDEX-CISIZE\n211400        MOVE 'Y' TO END-OF-FILE-SW.\n211500\n211600 0300-EXIT.\n211700     EXIT.\n211800     EJECT\n211900 0400-SET-SCREEN-COLORS.\n212000\n212100* copy stat fields to the ISPF fields and report fields\n212200     MOVE WS-TRUE-AVERAGE-LRECL            TO TAVGLREC.\n212300     MOVE SECNDARY                         TO CR-OLD-SECONDARY\n212400                                              OLDSEC.\n212500     MOVE WS-RECORDS-PER-CYLINDER          TO RECPCYL.\n212600     MOVE WS-ALLOCATED-CYLINDERS           TO ALLOCCYL\n212700                                              CR-OLD-PRIMARY\n212800                                              OLDPRIM.\n212900     MOVE WS-RECORDS-IN-FILE               TO RECTOTAL.\n213000     MOVE WS-FREESPACE-PERCENT-CI          TO FREECI\n213100                                              CR-OLD-CI-FREE\n213200                                              OLDCIFP.\n213300     MOVE WS-FREESPACE-PERCENT-CA          TO FREECA\n213400                                              CR-OLD-CA-FREE\n213500                                              OLDCAFP.\n213600     MOVE WS-CI-FREESPACE-COST             TO CSTCIFS.\n213700     MOVE WS-CA-FREESPACE-COST             TO CSTCAFS.\n213800     MOVE WS-FREESPACE-COST                TO CSTALLFS.\n213900     MOVE WS-FREE-AND-UNUSED-COST          TO CSTUFS.\n214000     MOVE WS-FREE-AND-USED-COST            TO CSTUSDFS.\n214100     MOVE WS-UNUSED-SPACE-COST             TO CSTUNUSD.\n214200     MOVE WS-ANNUAL-COST-OF-FILE           TO CSTTOTAL\n214300                                              CR-OLD-COST.\n214400     MOVE WS-CI-FREESPACE-PCT-OF-COST      TO PCTCIFS.\n214500     MOVE WS-CA-FREESPACE-PCT-OF-COST      TO PCTCAFS.\n214600     MOVE WS-FREESPACE-PCT-OF-COST         TO PCTALLFS.\n214700     MOVE WS-FREE-AND-UNUSED-PCT-OF-COST   TO PCTUFS.\n214800     MOVE WS-FREE-AND-USED-PCT-OF-COST     TO PCTUSDFS.\n214900     MOVE WS-UNUSED-SPACE-PCT-OF-COST      TO PCTUNUSD.\n215000     MOVE WS-INDEX-CISIZE                  TO CISIZEI\n215100                                              OLDICIS\n215200                                           CR-OLD-INDEX-CISIZE.\n215300\n215400* We have two data cisizes, because the ISPF skeleton can't handle\n215500* the leading blanks ...\n215600     MOVE WS-DATA-CISIZE                   TO   CISIZED\n215700                                                OLDDCIS\n215800                                                CISIZED2\n215900                                           CR-OLD-DATA-CISIZE.\n216000     MOVE WS-KEY-LENGTH                    TO   KEYLEN.\n216100     MOVE WS-EXTENTS                       TO   EXTENTS.\n216200     MOVE WS-CI-SPLITS                     TO   SPLITSCI.\n216300     MOVE WS-CA-SPLITS                     TO   SPLITSCA.\n216400     MOVE WS-LISTCAT-MAXIMUM-LRECL         TO   MAXLRECL.\n216500     MOVE WS-LISTCAT-AVERAGE-LRECL         TO   AVGLRECL.\n216600     MOVE WS-TRUE-AVERAGE-LRECL            TO   AVGLRECT.\n216700     MOVE WS-CI-FREE-BYTES                 TO   CIFBYTES.\n216800     MOVE WS-FREE-CI-PERCENTAGE-1          TO   FREECIP1.\n216900     MOVE WS-FREE-CI-PERCENTAGE-2          TO   FREECIP2.\n217000     MOVE WS-FREE-CI-PERCENTAGE-3          TO   FREECIP3.\n217100     MOVE WS-FREE-CI-PERCENTAGE-4          TO   FREECIP4.\n217200     MOVE WS-FREE-CI-PERCENTAGE-5          TO   FREECIP5.\n217300     MOVE WS-FREE-CI-PERCENTAGE-6          TO   FREECIP6.\n217400     MOVE WS-FREE-CI-PERCENTAGE-7          TO   FREECIP7.\n217500     MOVE WS-FREE-CI-PERCENTAGE-8          TO   FREECIP8.\n217600     MOVE WS-FREE-CI-PERCENTAGE-9          TO   FREECIP9.\n217700     MOVE WS-CI-PER-CA                     TO   CIPERCA.\n217800\n217900* Default colors ...\n218000     MOVE 'GREEN' TO COLALC\n218100                     COLCAS\n218200                     COLCIP\n218300                     COLCIS\n218400                     COLDCI\n218500                     COLEXT\n218600                     COLFCA\n218700                     COLFCI\n218800                     COLICI\n218900                     COLKEY\n219000                     COLPCT.\n219100\n219200     MOVE ' ' TO ER-SPECIAL-FLAG.\n219300     IF BMC-COMPRESSED-FILE\n219400        MOVE '*' TO ER-SPECIAL-FLAG.\n219500     IF SIMULATE-CARD\n219600        MOVE 'S' TO ER-SPECIAL-FLAG.\n219700\n219800     IF OPT-CISIZE-AND-100-PERCENT AND\n219900        WS-PERCENT-FILE-USED < .95\n220000           MOVE 'RED' TO COLPCT\n220100           MOVE SPACES TO ER-ACTION, ER-EXCEPTION\n220200           STRING 'Percent-used ('       DELIMITED BY SIZE\n220300               PCTUSED                   DELIMITED BY SIZE\n220400               '%) out of range'         DELIMITED BY SIZE\n220500             INTO ER-EXCEPTION\n220600           MOVE 'Reallocating to 100%' TO ER-ACTION\n220700           MOVE VSAM-DATASET-NAME     TO ER-DATASET-NAME\n220800        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT\n220900     END-IF.\n221000\n221100     IF (NOT OPT-CISIZE-AND-100-PERCENT)                   AND\n221200        (WS-PERCENT-FILE-USED > WS-PERCENT-USED-UPPER-LIMIT OR\n221300         WS-PERCENT-FILE-USED < WS-PERCENT-USED-LOWER-LIMIT)\n221400           MOVE 'RED' TO COLPCT\n221500           MOVE SPACES TO ER-ACTION, ER-EXCEPTION\n221600           STRING 'Percent-used ('       DELIMITED BY SIZE\n221700               PCTUSED                   DELIMITED BY SIZE\n221800               '%) out of range'         DELIMITED BY SIZE\n221900             INTO ER-EXCEPTION\n222000           MOVE 'Reallocating to 90%' TO ER-ACTION\n222100           MOVE VSAM-DATASET-NAME     TO ER-DATASET-NAME\n222200        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n222300\n222400*    IF (WS-PERCENT-FILE-USED > .64 AND\n222500*        WS-PERCENT-FILE-USED < .71) OR\n222600*       (WS-PERCENT-FILE-USED > .90 AND\n222700*        WS-PERCENT-FILE-USED < .95)\n222800*          MOVE 'YELLOW' TO COLPCT\n222900*    END-IF.\n223000\n223100     IF WS-INDEX-CISIZE < 2048\n223200        MOVE 'RED' TO COLICI\n223300        MOVE SPACES TO ER-ACTION, ER-EXCEPTION\n223400        STRING 'Index CISIZE ('          DELIMITED BY SIZE\n223500               CISIZEI                   DELIMITED BY SIZE\n223600               ') too small'             DELIMITED BY SIZE\n223700          INTO ER-EXCEPTION\n223800        MOVE 'Changing to 2048'       TO ER-ACTION\n223900        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n224000        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n224100\n224200     IF WS-INDEX-CISIZE > 2048\n224300        MOVE 'YELLOW' TO COLICI.\n224400\n224500     IF WS-DATA-CISIZE  < 4096\n224600        MOVE 'RED' TO COLDCI\n224700        MOVE SPACES TO ER-ACTION, ER-EXCEPTION\n224800        STRING 'Data CISIZE ('           DELIMITED BY SIZE\n224900               CISIZED                   DELIMITED BY SIZE\n225000               ') too small'             DELIMITED BY SIZE\n225100          INTO ER-EXCEPTION\n225200        MOVE 'Changing to 4096'       TO ER-ACTION\n225300        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n225400        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT\n225500        IF PRESERVE-CISIZE\n225600           MOVE SPACES TO EXCPRPT-RECORD\n225700           MOVE '*** NOTE ***' TO VSAM-DATASET-NAME\n225800           MOVE '''PRESERVE-CISIZE OPTION TURNED ON''' TO\n225900                ER-EXCEPTION\n226000           MOVE 'DATA CISIZE NOT CHANGED' TO ER-ACTION.\n226100\n226200     IF WS-KEY-LENGTH   > 30    AND\n226300        WS-DATA-CISIZE  < 8192\n226400           MOVE 'YELLOW' TO COLKEY.\n226500\n226600     IF WS-EXTENTS      > 2     AND\n226700        WS-EXTENTS      < WS-EXTENTS-UPPER-LIMIT\n226800           MOVE 'YELLOW' TO COLEXT.\n226900\n227000     IF WS-EXTENTS      > WS-EXTENTS-UPPER-LIMIT\n227100        MOVE 'RED' TO COLEXT\n227200        MOVE SPACES TO ER-ACTION, ER-EXCEPTION\n227300        STRING 'Number of extents ('     DELIMITED BY SIZE\n227400               EXTENTS                   DELIMITED BY SIZE\n227500               ') out of range'          DELIMITED BY SIZE\n227600          INTO ER-EXCEPTION\n227700        MOVE 'Reallocating the file'  TO ER-ACTION\n227800        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n227900        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n228000\n228100     IF WS-CI-SPLITS    > 50    AND\n228200        WS-CI-SPLITS    < WS-CISPLIT-UPPER-LIMIT\n228300           MOVE 'YELLOW' TO COLCIS.\n228400\n228500     IF WS-CI-SPLITS    > WS-CISPLIT-UPPER-LIMIT\n228600        MOVE 'RED' TO COLCIS\n228700        MOVE SPACES TO ER-ACTION, ER-EXCEPTION\n228800        STRING 'CI splits ('             DELIMITED BY SIZE\n228900               SPLITSCI                  DELIMITED BY SIZE\n229000               ') excessive'             DELIMITED BY SIZE\n229100          INTO ER-EXCEPTION\n229200        MOVE 'Reallocating the file'  TO ER-ACTION\n229300        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n229400        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n229500\n229600     IF WS-CA-SPLITS    > 20    AND\n229700        WS-CA-SPLITS    < WS-CASPLIT-UPPER-LIMIT\n229800           MOVE 'YELLOW' TO COLCAS.\n229900\n230000     IF WS-CA-SPLITS    > WS-CASPLIT-UPPER-LIMIT\n230100        MOVE 'RED' TO COLCAS\n230200        MOVE SPACES TO ER-ACTION, ER-EXCEPTION\n230300        STRING 'CA splits ('             DELIMITED BY SIZE\n230400               SPLITSCA                  DELIMITED BY SIZE\n230500               ') excessive'             DELIMITED BY SIZE\n230600          INTO ER-EXCEPTION\n230700        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n230800        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n230900\n231000     IF WS-FREESPACE-PERCENT-CI > 15 AND\n231100        WS-FREESPACE-PERCENT-CI < WS-CI-FREE-UPPER-LIMIT\n231200           MOVE 'YELLOW' TO COLFCI.\n231300\n231400     IF WS-FREESPACE-PERCENT-CI > WS-CI-FREE-UPPER-LIMIT\n231500        MOVE 'RED' TO COLFCI\n231600        MOVE SPACES TO ER-ACTION, ER-EXCEPTION\n231700        STRING 'CI free space % ('       DELIMITED BY SIZE\n231800               FREECI                    DELIMITED BY SIZE\n231900               '%) is excessive'         DELIMITED BY SIZE\n232000          INTO ER-EXCEPTION\n232100        STRING 'Changing to '            DELIMITED BY SIZE\n232200               WS-CI-FREE-UPPER-LIMIT    DELIMITED BY SIZE\n232300               '%'                       DELIMITED BY SIZE\n232400          INTO ER-ACTION\n232500        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n232600        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n232700\n232800     IF WS-FREESPACE-PERCENT-CA > 10 AND\n232900        WS-FREESPACE-PERCENT-CA < WS-CA-FREE-UPPER-LIMIT\n233000           MOVE 'YELLOW' TO COLFCA.\n233100\n233200     IF WS-FREESPACE-PERCENT-CA > WS-CA-FREE-UPPER-LIMIT\n233300        MOVE 'RED' TO COLFCA\n233400        MOVE SPACES TO ER-ACTION, ER-EXCEPTION\n233500        STRING 'CA free space % ('       DELIMITED BY SIZE\n233600               FREECA                    DELIMITED BY SIZE\n233700               '%) is excessive'         DELIMITED BY SIZE\n233800          INTO ER-EXCEPTION\n233900        STRING 'Changing to '            DELIMITED BY SIZE\n234000               WS-CA-FREE-UPPER-LIMIT    DELIMITED BY SIZE\n234100               '%'                       DELIMITED BY SIZE\n234200          INTO ER-ACTION\n234300        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n234400        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n234500\n234600     IF WS-FREESPACE-PERCENT-CI > 0\n234700        IF WS-CI-FREE-BYTES < WS-TRUE-AVERAGE-LRECL\n234800           MOVE 'RED' TO COLCIP\n234900           MOVE SPACES TO ER-ACTION, ER-EXCEPTION\n235000           STRING 'CI free space in bytes (' DELIMITED BY SIZE\n235100                  CIFBYTES               DELIMITED BY SIZE\n235200                  ') < AVGLRECL'         DELIMITED BY SIZE\n235300             INTO ER-EXCEPTION\n235400           STRING 'Increasing to '       DELIMITED BY SIZE\n235500                  FREECIP1               DELIMITED BY SIZE\n235600                  '%'                    DELIMITED BY SIZE\n235700             INTO ER-ACTION\n235800           MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n235900           PERFORM 8000-WRITE-EXCPRPT-RECORD THRU 8000-EXIT.\n236000\n236100     IF WS-ALLOCATED-CYLINDERS > 500 AND\n236200        WS-ALLOCATED-CYLINDERS < 1200\n236300           MOVE 'YELLOW' TO COLALC.\n236400\n236500     IF WS-ALLOCATED-CYLINDERS > 1199\n236600        MOVE 'RED' TO COLALC.\n236700\n236800     IF IMBEDDED-FILE\n236900        MOVE 'IMBED'    TO COLFLG1\n237000        MOVE 'IMBED option detected'  TO ER-EXCEPTION\n237100        MOVE 'Changing to NOIMBED'    TO ER-ACTION\n237200        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n237300        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n237400\n237500     IF RECOVERY-FLAG\n237600        MOVE 'RECOVERY' TO COLFLG2\n237700        MOVE 'RECOVERY mode detected' TO ER-EXCEPTION\n237800        MOVE 'Changing to SPEED mode' TO ER-ACTION\n237900        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n238000        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n238100\n238200     IF WRITECHK-FLAG\n238300        MOVE 'WRITECHK' TO COLFLG3\n238400        MOVE 'WRITECHK mode detected' TO ER-EXCEPTION\n238500        MOVE 'Changing to NOWRITECHK' TO ER-ACTION\n238600        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n238700        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n238800\n238900     IF REPLICAT-FLAG\n239000        MOVE 'REPLICAT' TO COLFLG4\n239100        MOVE 'REPLICAT option detected' TO ER-EXCEPTION\n239200        MOVE 'Changing to NOREPLICAT' TO ER-ACTION\n239300        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n239400        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n239500\n239600     IF ERASE-FLAG\n239700        MOVE 'ERASE'    TO COLFLG5\n239800        MOVE 'ERASE option detected'  TO ER-EXCEPTION\n239900        MOVE 'Changing to NOERASE'    TO ER-ACTION\n240000        MOVE VSAM-DATASET-NAME        TO ER-DATASET-NAME\n240100        PERFORM 8000-WRITE-EXCPRPT-RECORD   THRU 8000-EXIT.\n240200\n240300 0400-EXIT.\n240400     EXIT.\n240500     EJECT\n240600 0500-TREAT-EXCEPTION.\n240700\n240800* Here we treat any exceptions ...\n240900\n241000     IF COLPCT = 'RED' OR\n241100        COLICI = 'RED' OR\n241200        COLDCI = 'RED' OR\n241300        COLEXT = 'RED' OR\n241400        COLCIS = 'RED' OR\n241500        COLCAS = 'RED' OR\n241600        COLFCI = 'RED' OR\n241700        COLFCA = 'RED' OR\n241800        COLCIP = 'RED' OR\n241900        RECOVERY-FLAG  OR\n242000        WRITECHK-FLAG  OR\n242100        REPLICAT-FLAG  OR\n242200        ERASE-FLAG     OR\n242300        IMBEDDED-FILE  OR\n242400        RUNNING-IN-FOREGROUND\n242500           PERFORM 0510-GENERATE-JCL        THRU 0510-EXIT.\n242600\n242700 0500-EXIT.\n242800     EXIT.\n242900     EJECT\n243000 0510-GENERATE-JCL.\n243100\n243200     IF COLICI = 'RED'\n243300        MOVE 2048                   TO WS-INDEX-CISIZE.\n243400\n243500     IF COLDCI = 'RED' AND\n243600        NOT PRESERVE-CISIZE\n243700           MOVE 4096                TO WS-DATA-CISIZE\n243800* Recalculated in case the cisize just changed\n243900           PERFORM 0210-CALC-FREE-STUFF     THRU 0210-EXIT.\n244000\n244100     IF (TEST-MACHINE           OR\n244200         BATCH-OPTIMAL-CISIZE)  AND\n244300         WS-DATA-CISIZE < 18432\n244400              MOVE 18432            TO WS-DATA-CISIZE\n244500              PERFORM 0210-CALC-FREE-STUFF  THRU 0210-EXIT.\n244600\n244700* Average LRECL larger than CI free space. Here we make the adjustment.\n244800     IF COLCIP = 'RED'\n244900        MOVE WS-FREE-CI-PERCENTAGE-1 TO WS-FREESPACE-PERCENT-CI\n245000     ELSE\n245100        IF COLFCI = 'RED'\n245200           PERFORM 0512-CALC-GOOD-CI-FREE   THRU 0512-EXIT.\n245300\n245400* Recalculated in case the ci free space just changed.\n245500     PERFORM 0210-CALC-FREE-STUFF           THRU 0210-EXIT.\n245600\n245700     IF COLFCA = 'RED'\n245800        MOVE WS-CA-FREE-UPPER-LIMIT TO WS-FREESPACE-PERCENT-CA.\n245900\n246000     PERFORM 0518-CALCULATE-SPACE           THRU 0518-EXIT.\n246100\n246200* We can't generate JCL if running in TSO, because the screen\n246300* asking the user if he wants to reorg hasn't been presented\n246400* yet. Paragraf 0600- performs 0519- if that option is\n246500* specified.\n246600     IF RUNNING-IN-BACKGROUND\n246700        IF NOT SIMULATE-CARD\n246800           PERFORM 0519-CREATE-JCL          THRU 0519-EXIT.\n246900\n247000 0510-EXIT.\n247100     EXIT.\n247200     EJECT\n247300 0512-CALC-GOOD-CI-FREE.\n247400\n247500     IF WS-FREE-CI-PERCENTAGE-1 > WS-CI-FREE-UPPER-LIMIT\n247600        GO TO 0512-EXIT\n247700     ELSE\n247800        IF WS-FREE-CI-PERCENTAGE-2 > WS-CI-FREE-UPPER-LIMIT\n247900           MOVE WS-FREE-CI-PERCENTAGE-2 TO\n248000                                           WS-FREESPACE-PERCENT-CI\n248100     ELSE\n248200        IF WS-FREE-CI-PERCENTAGE-3 > WS-CI-FREE-UPPER-LIMIT\n248300           MOVE WS-FREE-CI-PERCENTAGE-3 TO WS-FREESPACE-PERCENT-CI\n248400     ELSE\n248500        IF WS-FREE-CI-PERCENTAGE-4 > WS-CI-FREE-UPPER-LIMIT\n248600           MOVE WS-FREE-CI-PERCENTAGE-4 TO WS-FREESPACE-PERCENT-CI\n248700     ELSE\n248800        IF WS-FREE-CI-PERCENTAGE-5 > WS-CI-FREE-UPPER-LIMIT\n248900           MOVE WS-FREE-CI-PERCENTAGE-5 TO WS-FREESPACE-PERCENT-CI\n249000     ELSE\n249100        IF WS-FREE-CI-PERCENTAGE-6 > WS-CI-FREE-UPPER-LIMIT\n249200           MOVE WS-FREE-CI-PERCENTAGE-6 TO WS-FREESPACE-PERCENT-CI\n249300     ELSE\n249400        IF WS-FREE-CI-PERCENTAGE-7 > WS-CI-FREE-UPPER-LIMIT\n249500           MOVE WS-FREE-CI-PERCENTAGE-7 TO WS-FREESPACE-PERCENT-CI\n249600     ELSE\n249700        IF WS-FREE-CI-PERCENTAGE-8 > WS-CI-FREE-UPPER-LIMIT\n249800           MOVE WS-FREE-CI-PERCENTAGE-8 TO WS-FREESPACE-PERCENT-CI\n249900     ELSE\n250000        IF WS-FREE-CI-PERCENTAGE-9 > WS-CI-FREE-UPPER-LIMIT\n250100           MOVE WS-FREE-CI-PERCENTAGE-9 TO WS-FREESPACE-PERCENT-CI\n250200     ELSE\n250300           MOVE WS-CI-FREE-UPPER-LIMIT TO WS-FREESPACE-PERCENT-CI\n250400     .\n250500\n250600 0512-EXIT.\n250700     EXIT.\n250800     EJECT\n250900 0518-CALCULATE-SPACE.\n251000\n251100* This is misleading. We're actually calculating CI's per track,\n251200* which is the same as blocks per track (except for CI sizes of\n251300* 14336, 20480, 22528, 28672, 30720, and 32768 on a 3390 device).\n251400* I frankly don't know what to do with these exceptions. Oh well,\n251500* a future release...\n251600\n251700     EVALUATE WS-DATA-CISIZE\n251800         WHEN   512 COMPUTE WS-BLOCKS-PER-TRACK = 49\n251900         WHEN  1024 COMPUTE WS-BLOCKS-PER-TRACK = 33\n252000         WHEN  1536 COMPUTE WS-BLOCKS-PER-TRACK = 26\n252100         WHEN  2048 COMPUTE WS-BLOCKS-PER-TRACK = 21\n252200         WHEN  2560 COMPUTE WS-BLOCKS-PER-TRACK = 17\n252300         WHEN  3072 COMPUTE WS-BLOCKS-PER-TRACK = 15\n252400         WHEN  3584 COMPUTE WS-BLOCKS-PER-TRACK = 13\n252500         WHEN  4096 COMPUTE WS-BLOCKS-PER-TRACK = 12\n252600         WHEN  4608 COMPUTE WS-BLOCKS-PER-TRACK = 10\n252700         WHEN  5120 COMPUTE WS-BLOCKS-PER-TRACK = 9\n252800         WHEN  5632 COMPUTE WS-BLOCKS-PER-TRACK = 9\n252900         WHEN  6144 COMPUTE WS-BLOCKS-PER-TRACK = 8\n253000         WHEN  6656 COMPUTE WS-BLOCKS-PER-TRACK = 7\n253100         WHEN  7168 COMPUTE WS-BLOCKS-PER-TRACK = 7\n253200         WHEN  7680 COMPUTE WS-BLOCKS-PER-TRACK = 6\n253300         WHEN  8192 COMPUTE WS-BLOCKS-PER-TRACK = 6\n253400         WHEN 10240 COMPUTE WS-BLOCKS-PER-TRACK = 5\n253500         WHEN 12288 COMPUTE WS-BLOCKS-PER-TRACK = 4\n253600         WHEN 14336 COMPUTE WS-BLOCKS-PER-TRACK = 3\n253700         WHEN 16384 COMPUTE WS-BLOCKS-PER-TRACK = 3\n253800         WHEN 18432 COMPUTE WS-BLOCKS-PER-TRACK = 3\n253900         WHEN 20480 COMPUTE WS-BLOCKS-PER-TRACK = 2\n254000         WHEN 22528 COMPUTE WS-BLOCKS-PER-TRACK = 2\n254100         WHEN 24576 COMPUTE WS-BLOCKS-PER-TRACK = 2\n254200         WHEN 26624 COMPUTE WS-BLOCKS-PER-TRACK = 2\n254300         WHEN 28672 COMPUTE WS-BLOCKS-PER-TRACK = 2\n254400         WHEN 30720 COMPUTE WS-BLOCKS-PER-TRACK = 1\n254500         WHEN 32768 COMPUTE WS-BLOCKS-PER-TRACK = 1\n254600     END-EVALUATE.\n254700\n254800* how many bytes are in the free area of each CI\n254900* Recalculated here, because the values may have changed.\n255000     COMPUTE WS-CI-FREE-BYTES\n255100           = WS-FREESPACE-PERCENT-CI\n255200           * WS-DATA-CISIZE\n255300           / 100.\n255400\n255500     COMPUTE WS-RECORDS-PER-CI\n255600           = (WS-DATA-CISIZE\n255700           -  WS-CI-OVERHEAD\n255800           -  WS-CI-FREE-BYTES)\n255900           /  WS-TRUE-AVERAGE-LRECL.\n256000* With spanned records, we're going to make WS-RECORDS-PER-CI = 1\n256100     IF WS-RECORDS-PER-CI < 1\n256200        MOVE 1 TO WS-RECORDS-PER-CI.\n256300\n256400     IF IMBEDDED-FILE\n256500        COMPUTE WS-LOADED-CIS-PER-CA\n256600              = WS-BLOCKS-PER-TRACK\n256700              * (WS-TRACKS-PER-CYL - 1)\n256800              * (100 - WS-FREESPACE-PERCENT-CA)\n256900              / 100\n257000     ELSE\n257100        COMPUTE WS-LOADED-CIS-PER-CA\n257200              = WS-BLOCKS-PER-TRACK\n257300              * WS-TRACKS-PER-CYL\n257400              * (100 - WS-FREESPACE-PERCENT-CA)\n257500              / 100.\n257600\n257700     COMPUTE WS-CALC-RECORDS-PER-CYLINDER\n257800           = WS-RECORDS-PER-CI\n257900           * WS-LOADED-CIS-PER-CA.\n258000* Safety ...\n258100     IF WS-CALC-RECORDS-PER-CYLINDER < 1\n258200        MOVE 1 TO WS-CALC-RECORDS-PER-CYLINDER.\n258300\n258400* Note: if changing the \"109/100\" value, make the same change\n258500* elsewhere in this program...\n258600     IF OPT-CISIZE-AND-100-PERCENT\n258700        COMPUTE WS-VSAM-PRIMARY-SPACE\n258800              =  WS-RECORDS-IN-FILE\n258900              /  WS-CALC-RECORDS-PER-CYLINDER\n259000              +  1\n259100     ELSE\n259200        COMPUTE WS-VSAM-PRIMARY-SPACE\n259300              = (WS-RECORDS-IN-FILE * 109 / 100)\n259400              /  WS-CALC-RECORDS-PER-CYLINDER\n259500              +  1\n259600     END-IF.\n259700\n259800     COMPUTE WS-VSAM-SECONDARY-SPACE ROUNDED\n259900           = WS-VSAM-PRIMARY-SPACE\n260000           / 10.\n260100\n260200     IF WS-VSAM-SECONDARY-SPACE = 0\n260300        COMPUTE WS-VSAM-SECONDARY-SPACE = 1.\n260400\n260500     COMPUTE WS-NEW-ANNUAL-FILE-COST ROUNDED\n260600           = WS-VSAM-PRIMARY-SPACE\n260700           * WS-DAILY-GB-COST\n260800           * 365\n260900           * WS-GIGABYTE-PER-CYL.\n261000\n261100     COMPUTE CR-CYLINDER-DIFF\n261200           = WS-ALLOCATED-CYLINDERS\n261300           - WS-VSAM-PRIMARY-SPACE.\n261400\n261500     MOVE CR-CYLINDER-DIFF TO SAVEDCYL.\n261600\n261700     COMPUTE CR-COST-DIFF\n261800           = WS-ANNUAL-COST-OF-FILE\n261900           - WS-NEW-ANNUAL-FILE-COST.\n262000\n262100     MOVE CR-COST-DIFF TO SAVEDDOL.\n262200\n262300     MOVE WS-DATA-CISIZE          TO CR-NEW-DATA-CISIZE\n262400                                     NEWDCIS.\n262500     MOVE WS-INDEX-CISIZE         TO CR-NEW-INDEX-CISIZE\n262600                                     NEWICIS.\n262700     MOVE WS-FREESPACE-PERCENT-CA TO CR-NEW-CA-FREE\n262800                                     NEWCAFP.\n262900     MOVE WS-FREESPACE-PERCENT-CI TO CR-NEW-CI-FREE\n263000                                     NEWCIFP.\n263100     MOVE WS-VSAM-PRIMARY-SPACE   TO CR-NEW-PRIMARY\n263200                                     NEWPRIM.\n263300     MOVE WS-VSAM-SECONDARY-SPACE TO CR-NEW-SECONDARY\n263400                                     NEWSEC.\n263500\n263600* Here we check to see if the file should be multi-volume. If so,\n263700* we adjust NEWPRIM and NEWSEC, as well as raise a flag, for the\n263800* skeleton. We don't change the report, though.\n263900     IF WS-VSAM-PRIMARY-SPACE > 2500\n264000        EVALUATE TRUE\n264100            WHEN WS-VSAM-PRIMARY-SPACE > 2501 AND\n264200                 WS-VSAM-PRIMARY-SPACE < 3000\n264300                    MOVE '* *' TO VOLUME\n264400                    COMPUTE NEWPRIM ROUNDED\n264500                          = WS-VSAM-PRIMARY-SPACE / 2\n264600            WHEN WS-VSAM-PRIMARY-SPACE > 3001 AND\n264700                 WS-VSAM-PRIMARY-SPACE < 4000\n264800                    MOVE '* * *' TO VOLUME\n264900                    COMPUTE NEWPRIM ROUNDED\n265000                          = WS-VSAM-PRIMARY-SPACE / 3\n265100            WHEN WS-VSAM-PRIMARY-SPACE > 4001 AND\n265200                 WS-VSAM-PRIMARY-SPACE < 5000\n265300                    MOVE '* * * *' TO VOLUME\n265400                    COMPUTE NEWPRIM ROUNDED\n265500                          = WS-VSAM-PRIMARY-SPACE / 4\n265600            WHEN WS-VSAM-PRIMARY-SPACE > 5000\n265700                 MOVE '* * * * *' TO VOLUME\n265800                 COMPUTE NEWPRIM ROUNDED\n265900                       = WS-VSAM-PRIMARY-SPACE / 5\n266000        END-EVALUATE\n266100     ELSE\n266200        MOVE '*' TO VOLUME.\n266300\n266400* Calculate INDEX space values (using a CISIZE of 2048, even if\n266500* it's more than that). In English, the formula is (#-of-used-\n266600* CA's + #-of-used-CA's / 248) / blocks-per-track.\n266700\n266800     IF OPT-CISIZE-AND-100-PERCENT\n266900        COMPUTE WS-CIS-FOR-INDEX-SET ROUNDED\n267000              =  WS-VSAM-PRIMARY-SPACE\n267100              /  248\n267200              +  1\n267300        COMPUTE INDXPRIM ROUNDED\n267400              = (WS-VSAM-PRIMARY-SPACE\n267500              +  WS-CIS-FOR-INDEX-SET)\n267600              /  21\n267700              +  1\n267800     ELSE\n267900        COMPUTE WS-CIS-FOR-INDEX-SET ROUNDED\n268000              = (WS-VSAM-PRIMARY-SPACE * 109 / 100)\n268100              /  248\n268200              +  1\n268300        COMPUTE INDXPRIM ROUNDED\n268400              = (WS-VSAM-PRIMARY-SPACE * 109 / 100\n268500              +  WS-CIS-FOR-INDEX-SET)\n268600              /  21\n268700              +  1\n268800     END-IF.\n268900\n269000     COMPUTE INDXSEC ROUNDED\n269100           = INDXPRIM\n269200           * .10.\n269300\n269400     MOVE WS-NEW-ANNUAL-FILE-COST TO CR-NEW-COST.\n269500\n269600     COMPUTE WS-NEW-TOTAL-DOLLARS\n269700           = WS-NEW-TOTAL-DOLLARS\n269800           + WS-NEW-ANNUAL-FILE-COST.\n269900\n270000     COMPUTE WS-OLD-TOTAL-DOLLARS\n270100           = WS-OLD-TOTAL-DOLLARS\n270200           + WS-ANNUAL-COST-OF-FILE.\n270300\n270400     COMPUTE WS-NEW-TOTAL-CYLS\n270500           = WS-NEW-TOTAL-CYLS\n270600           + WS-VSAM-PRIMARY-SPACE.\n270700\n270800     COMPUTE WS-OLD-TOTAL-CYLS\n270900           = WS-OLD-TOTAL-CYLS\n271000           + WS-ALLOCATED-CYLINDERS.\n271100\n271200     MOVE VSAM-DATASET-NAME TO CH-VSAM-DATASET-NAME-CR.\n271300     MOVE PDS-UPDATE-MEMBER TO PDSMEM.\n271400\n271500     MOVE LINE-0-CR TO CHNGRPT-RECORD.\n271600     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.\n271700     MOVE LINE-1-CR TO CHNGRPT-RECORD.\n271800     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.\n271900     MOVE LINE-2-CR TO CHNGRPT-RECORD.\n272000     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.\n272100     MOVE LINE-3-CR TO CHNGRPT-RECORD.\n272200     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.\n272300     MOVE LINE-4-CR TO CHNGRPT-RECORD.\n272400     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.\n272500     MOVE LINE-5-CR TO CHNGRPT-RECORD.\n272600     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.\n272700     MOVE LINE-6-CR TO CHNGRPT-RECORD.\n272800     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.\n272900     MOVE LINE-7-CR TO CHNGRPT-RECORD.\n273000     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.\n273100\n273200 0518-EXIT.\n273300     EXIT.\n273400     EJECT\n273500 0519-CREATE-JCL.\n273600\n273700* If we try to backup an empty file, we'll just get an open error\n273800* of 12, so we'll just delete/define the file ...\n273900     IF WS-PERCENT-FILE-USED = 0   AND\n274000        WS-RECORDS-IN-FILE   = 0\n274100           GO TO 0519-UPDATE-PDS.\n274200\n274300     MOVE 'FTINCL AP1PVSM2' TO ISPF-BUFFER.\n274400     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n274500\n274600     IF RETURN-CODE NOT = 0\n274700*           8 - SKELETON DOES NOT EXIST\n274800*          12 - SKELETON OR TABLE IN USE; ENQ FAILED\n274900*          16 - DATA TRUNCATION OCCURRED; OR SKELETON LIBRARY\n275000*               AND/OR OUTPUT FILE NOT ALLOCATED\n275100*          20 - SEVERE ERROR\n275200        IF RUNNING-IN-FOREGROUND\n275300           MOVE RETURN-CODE  TO ABCODE\n275400           MOVE '0519-CREATE-JCL' TO ABPARA\n275500           MOVE 'INCLUDE AP1PVSM2 FAILED' TO ABMSG\n275600           MOVE 'UNABLE TO INCLUDE SKELETON - NOT FOUND?'\n275700                             TO ABMISC\n275800           MOVE VSAM-STATUS  TO ABVSAM\n275900           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT\n276000        ELSE\n276100           MOVE RETURN-CODE  TO ABCODE\n276200           DISPLAY '0519-CREATE-JCL'\n276300           DISPLAY 'INCLUDE AP1PVSM2 SKELETON FAILED'\n276400           MOVE 107 TO WS-ABEND-CODE\n276500           CALL 'ILBOABN0' USING WS-ABEND-CODE\n276600        END-IF.\n276700\n276800 0519-DELETE-DEFINE.\n276900\n277000     MOVE 'FTINCL AP1PVSM3' TO ISPF-BUFFER.\n277100     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n277200\n277300     IF RETURN-CODE NOT = 0\n277400*           8 - SKELETON DOES NOT EXIST\n277500*          12 - SKELETON OR TABLE IN USE; ENQ FAILED\n277600*          16 - DATA TRUNCATION OCCURRED; OR SKELETON LIBRARY\n277700*               AND/OR OUTPUT FILE NOT ALLOCATED\n277800*          20 - SEVERE ERROR\n277900        IF RUNNING-IN-FOREGROUND\n278000           MOVE RETURN-CODE  TO ABCODE\n278100           MOVE '0519-DELETE-DEFINE' TO ABPARA\n278200           MOVE 'INCLUDE AP1PVSM3 FAILED' TO ABMSG\n278300           MOVE 'UNABLE TO INCLUDE SKELETON - NOT FOUND?'\n278400                             TO ABMISC\n278500           MOVE VSAM-STATUS  TO ABVSAM\n278600           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT\n278700        ELSE\n278800           MOVE RETURN-CODE  TO ABCODE\n278900           DISPLAY '0519-DELETE-DEFINE'\n279000           DISPLAY 'INCLUDE AP1PVSM3 SKELETON FAILED'\n279100           MOVE 107 TO WS-ABEND-CODE\n279200           CALL 'ILBOABN0' USING WS-ABEND-CODE\n279300        END-IF.\n279400\n279500     IF WS-PERCENT-FILE-USED = 0   AND\n279600        WS-RECORDS-IN-FILE   = 0\n279700           GO TO 0519-UPDATE-PDS.\n279800\n279900     MOVE 'FTINCL AP1PVSM4' TO ISPF-BUFFER.\n280000     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n280100\n280200     IF RETURN-CODE NOT = 0\n280300*           8 - SKELETON DOES NOT EXIST\n280400*          12 - SKELETON OR TABLE IN USE; ENQ FAILED\n280500*          16 - DATA TRUNCATION OCCURRED; OR SKELETON LIBRARY\n280600*               AND/OR OUTPUT FILE NOT ALLOCATED\n280700*          20 - SEVERE ERROR\n280800        IF RUNNING-IN-FOREGROUND\n280900           MOVE RETURN-CODE  TO ABCODE\n281000           MOVE '0519-CREATE-JCL' TO ABPARA\n281100           MOVE 'INCLUDE AP1PVSM4 FAILED' TO ABMSG\n281200           MOVE 'UNABLE TO INCLUDE SKELETON - NOT FOUND?'\n281300                             TO ABMISC\n281400           MOVE VSAM-STATUS  TO ABVSAM\n281500           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT\n281600        ELSE\n281700           MOVE RETURN-CODE  TO ABCODE\n281800           DISPLAY '0519-CREATE-JCL'\n281900           DISPLAY 'INCLUDE AP1PVSM4 SKELETON FAILED'\n282000           MOVE 107 TO WS-ABEND-CODE\n282100           CALL 'ILBOABN0' USING WS-ABEND-CODE\n282200        END-IF.\n282300\n282400 0519-UPDATE-PDS.\n282500\n282600     MOVE 'FTINCL AP1PVSM6' TO ISPF-BUFFER.\n282700     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n282800\n282900     IF RETURN-CODE NOT = 0\n283000*           8 - SKELETON DOES NOT EXIST\n283100*          12 - SKELETON OR TABLE IN USE; ENQ FAILED\n283200*          16 - DATA TRUNCATION OCCURRED; OR SKELETON LIBRARY\n283300*               AND/OR OUTPUT FILE NOT ALLOCATED\n283400*          20 - SEVERE ERROR\n283500        IF RUNNING-IN-FOREGROUND\n283600           MOVE RETURN-CODE  TO ABCODE\n283700           MOVE '0519-UPDATE-PDS' TO ABPARA\n283800           MOVE 'INCLUDE AP1PVSM6 FAILED' TO ABMSG\n283900           MOVE 'UNABLE TO INCLUDE SKELETON - NOT FOUND?'\n284000                             TO ABMISC\n284100           MOVE VSAM-STATUS  TO ABVSAM\n284200           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT\n284300        ELSE\n284400           MOVE RETURN-CODE  TO ABCODE\n284500           DISPLAY '0519-UPDATE-PDS'\n284600           DISPLAY 'INCLUDE AP1PVSM6 SKELETON FAILED'\n284700           DISPLAY ABCODE\n284800           MOVE 107 TO WS-ABEND-CODE\n284900           CALL 'ILBOABN0' USING WS-ABEND-CODE\n285000        END-IF.\n285100\n285200 0519-EXIT.\n285300     EXIT.\n285400     EJECT\n285500 0600-GENERATE-JOBS.\n285600\n285700* This paragraf is invoked only if running under TSO ...\n285800\n285900     IF VSMREORG = 'YES'\n286000        PERFORM 0519-CREATE-JCL             THRU 0519-EXIT\n286100        MOVE RECTOTAL TO RECCNT\n286200        MOVE 'DISPLAY PANEL(AP1PVSM1)' TO ISPF-BUFFER\n286300        CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER\n286400        IF RETURN-CODE = 8\n286500           PERFORM 1000-FTCLOSE             THRU 1000-EXIT\n286600           GO TO 0600-EXIT\n286700        END-IF\n286800     END-IF.\n286900\n287000     IF VSMAVGL  = 'YES' OR\n287100        VSMKEYL  = 'YES'\n287200           MOVE 'FTINCL AP1PVSM5' TO ISPF-BUFFER\n287300           CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n287400\n287500     PERFORM 1000-FTCLOSE                   THRU 1000-EXIT.\n287600\n287700* Edit/Submit generated JCL ...\n287800     MOVE 'SELECT CMD(GENSUB ''&ZTEMPF'')' TO ISPF-BUFFER.\n287900     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n288000\n288100 0600-EXIT.\n288200     EXIT.\n288300     EJECT\n288400 1000-FTCLOSE.\n288500\n288600* The FTCLOSE is unconditional, because we've generated\n288700* reorg JCL anyhow, even if the user doesn't display it.\n288800\n288900     MOVE 'FTCLOSE' TO ISPF-BUFFER.\n289000     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n289100     IF RETURN-CODE NOT = 0\n289200*           4 - MEMBER EXISTS, NOREPL WAS SPECIFIED\n289300*           8 - FILE NOT OPEN\n289400*          12 - OUTPUT FILE IN USE; ENQ FAILED\n289500*          16 - SKELETON LIBRARY OR OUTPUT FILE NOT ALLOCATED\n289600*          20 - SEVERE ERROR\n289700        IF RUNNING-IN-FOREGROUND\n289800           MOVE RETURN-CODE      TO ABCODE\n289900           MOVE '1000-FTCLOSE'   TO ABPARA\n290000           MOVE 'FTCLOSE FAILED' TO ABMSG\n290100           MOVE 'UNABLE TO CLOSE FILE TAILORING - ENQ PROBLEM?'\n290200                             TO ABMISC\n290300           MOVE VSAM-STATUS  TO ABVSAM\n290400           PERFORM 9999-ISPF-ABEND          THRU 9999-EXIT\n290500        ELSE\n290600           DISPLAY '1000-FTCLOSE'\n290700           DISPLAY 'FTCLOSE FOR REORG/GEN FAILED'\n290800           DISPLAY\n290900            'UNABLE TO CLOSE FILE TAILORING - ENQ PROBLEM?'\n291000           MOVE 107 TO WS-ABEND-CODE\n291100           CALL 'ILBOABN0' USING WS-ABEND-CODE\n291200        END-IF.\n291300\n291400 1000-EXIT.\n291500     EXIT.\n291600     EJECT\n291700 8000-WRITE-EXCPRPT-RECORD.\n291800\n291900     IF LINE-COUNT-ER > 59\n292000        MOVE EXCPRPT-RECORD TO EXCPRPT-RECORD-HOLD\n292100        PERFORM 8005-HEADINGS               THRU 8005-EXIT\n292200        MOVE EXCPRPT-RECORD-HOLD TO EXCPRPT-RECORD.\n292300\n292400* Put a blank line between groups of dataset names ...\n292500     IF VSAM-DATASET-NAME-HOLD NOT = VSAM-DATASET-NAME\n292600        MOVE VSAM-DATASET-NAME TO VSAM-DATASET-NAME-HOLD\n292700        MOVE EXCPRPT-RECORD TO EXCPRPT-RECORD-HOLD\n292800        MOVE SPACES TO EXCPRPT-RECORD\n292900        WRITE EXCPRPT-RECORD\n293000        MOVE EXCPRPT-RECORD-HOLD TO EXCPRPT-RECORD\n293100        ADD 1 TO LINE-COUNT-ER.\n293200\n293300     WRITE EXCPRPT-RECORD.\n293400     ADD 1 TO LINE-COUNT-ER.\n293500\n293600 8000-EXIT.\n293700     EXIT.\n293800     EJECT\n293900 8005-HEADINGS.\n294000\n294100     ADD  1          TO PAGE-COUNT-ER.\n294200     MOVE 7          TO LINE-COUNT-ER.\n294300     MOVE PAGE-COUNT-ER TO TL-PAGENO.\n294400\n294500     MOVE TITLE-LINE-1     TO EXCPRPT-RECORD.\n294600     WRITE EXCPRPT-RECORD.\n294700\n294800     MOVE TITLE-LINE-ER-2  TO EXCPRPT-RECORD.\n294900     WRITE EXCPRPT-RECORD.\n295000\n295100     MOVE TITLE-LINE-ER-3  TO EXCPRPT-RECORD.\n295200     WRITE EXCPRPT-RECORD.\n295300\n295400     MOVE TITLE-LINE-ER-4  TO EXCPRPT-RECORD.\n295500     WRITE EXCPRPT-RECORD.\n295600\n295700     MOVE SPACES TO EXCPRPT-RECORD.\n295800     WRITE EXCPRPT-RECORD.\n295900\n296000     MOVE COLUMN-HEADING-ER TO EXCPRPT-RECORD.\n296100     WRITE EXCPRPT-RECORD.\n296200\n296300     MOVE SPACES TO EXCPRPT-RECORD.\n296400     WRITE EXCPRPT-RECORD.\n296500\n296600 8005-EXIT.\n296700     EXIT.\n296800     EJECT\n296900 8100-WRITE-CHNGRPT-RECORD.\n297000\n297100     IF LINE-COUNT-CR > 59\n297200        MOVE CHNGRPT-RECORD TO CHNGRPT-RECORD-HOLD\n297300        PERFORM 8105-HEADINGS              THRU 8105-EXIT\n297400        MOVE CHNGRPT-RECORD-HOLD TO CHNGRPT-RECORD.\n297500\n297600     WRITE CHNGRPT-RECORD.\n297700     ADD 1 TO LINE-COUNT-CR.\n297800\n297900 8100-EXIT.\n298000     EXIT.\n298100     EJECT\n298200 8105-HEADINGS.\n298300\n298400\n298500     ADD  1          TO PAGE-COUNT-CR.\n298600     MOVE 5          TO LINE-COUNT-CR.\n298700     MOVE PAGE-COUNT-CR TO TL-PAGENO.\n298800\n298900     MOVE TITLE-LINE-1     TO CHNGRPT-RECORD.\n299000     WRITE CHNGRPT-RECORD.\n299100\n299200     MOVE TITLE-LINE-CR-2  TO CHNGRPT-RECORD.\n299300     WRITE CHNGRPT-RECORD.\n299400\n299500     MOVE COLUMN-HEADING-CR TO CHNGRPT-RECORD.\n299600     WRITE CHNGRPT-RECORD.\n299700\n299800 8105-EXIT.\n299900     EXIT.\n300000     EJECT\n300100 9000-READ-LISTCAT.\n300200\n300300     READ LISTCAT NEXT RECORD INTO\n300400          WS-LISTCAT-RECORD\n300500          AT END\n300600             MOVE 'Y' TO END-OF-FILE-SW\n300700             GO TO 9000-EXIT.\n300800\n300900* Skip over title lines.\n301000     IF WS-LISTCAT-RECORD (1:1) = '1'\n301100        GO TO 9000-READ-LISTCAT.\n301200\n301300* If we hit the index portion of a VSAM file, we're essentially done.\n301400     MOVE 0 TO OFFSET.\n301500     INSPECT WS-LISTCAT-RECORD TALLYING OFFSET\n301600                FOR ALL 'INDEX ---'.\n301700     IF OFFSET > 0\n301800        MOVE WS-LISTCAT-RECORD (18:44) TO INDEXNAM\n301900        MOVE 'Y' TO END-OF-FILE-SW\n302000        GO TO 9000-EXIT.\n302100\n302200 9000-EXIT.\n302300     EXIT.\n302400     EJECT\n302500 9010-READ-DSNLIST.\n302600\n302700     READ DSNLIST  NEXT RECORD\n302800          AT END\n302900             MOVE 'Y' TO END-OF-DSN-FILE-SW\n303000             GO TO 9010-EXIT.\n303100\n303200* Skip over comment lines.\n303300     IF COMMENT-CARD\n303400        GO TO 9010-READ-DSNLIST.\n303500\n303600 9010-EXIT.\n303700     EXIT.\n303800     EJECT\n303900 9950-TERM.\n304000\n304100     MOVE WS-NEW-TOTAL-DOLLARS    TO CR-NEW-TOTAL-DOLLARS.\n304200     MOVE WS-OLD-TOTAL-DOLLARS    TO CR-OLD-TOTAL-DOLLARS.\n304300     MOVE WS-NEW-TOTAL-CYLS       TO CR-NEW-TOTAL-CYLS.\n304400     MOVE WS-OLD-TOTAL-CYLS       TO CR-OLD-TOTAL-CYLS.\n304500\n304600     COMPUTE CR-TOTAL-CYLS-SAVED\n304700           = WS-OLD-TOTAL-CYLS\n304800           - WS-NEW-TOTAL-CYLS.\n304900\n305000     COMPUTE CR-TOTAL-DOLLARS-SAVED\n305100           = WS-OLD-TOTAL-DOLLARS\n305200           - WS-NEW-TOTAL-DOLLARS.\n305300\n305400     MOVE LINE-8-CR TO CHNGRPT-RECORD.\n305500     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.\n305600\n305700     MOVE LINE-9-CR TO CHNGRPT-RECORD.\n305800     PERFORM 8100-WRITE-CHNGRPT-RECORD      THRU 8100-EXIT.\n305900\n306000     PERFORM 0017-VDELETE                   THRU 0017-EXIT.\n306100\n306200     IF RUNNING-IN-BACKGROUND\n306300        CLOSE DSNLIST.\n306400\n306500     IF RUNNING-IN-FOREGROUND\n306600        CLOSE LISTCAT.\n306700\n306800     CLOSE EXCPRPT, CHNGRPT, REGISET.\n306900\n307000 9950-EXIT.\n307100     EXIT.\n307200\n307300 9999-ISPF-ABEND.\n307400\n307500     MOVE 'DISPLAY PANEL(GMABEND)' TO ISPF-BUFFER.\n307600     CALL 'ISPEXEC' USING ISPF-BUF-LENGTH ISPF-BUFFER.\n307700\n307800     PERFORM 9950-TERM                      THRU 9950-EXIT.\n307900\n308000     STOP RUN.\n308100\n308200 9999-EXIT.\n308300     EXIT.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT511/FILE511.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT511", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}