{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011209000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE087.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE087.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x02'", "DS1TRBAL": "b'\\xda\\xe0'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\x88\\x00\\r\\x00\\x89\\x00\\x05\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$INDEX": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*\n* REFER: D061001.SYSLOG($$$INDEX)\n* DOC  : MASTER INDEX TO SYSLOG UTILITY COMPONENTS\n*      : MARK DIEHL - HERCULES/ALLEGANY BALLISTICS LAB 304-726-5140/5343\n*\n*      : PLEASE TAKE A MOMENT TO REVIEW THE FOLLOWING LIST OF MEMBERS\n*        AND THEIR RESPECTIVE DESCRIPTIONS SO AS TO GET A FEEL FOR THE\n*        MEMBERNAME NOMENCLATURE USED. (FOR EXAMPLE, MEMBERS BEGINNING\n*        WITH 'LOG' GENERALLY INDICATE AN ISPF PANEL;     MEMBERS PRE-\n*        FIXED 'C' INDICATE A CLIST; MEMBERS PREFIXED 'S' INDICATE AN\n*        ISPF SKELETON). CONTINUE BY READING MEMBER '$INSTALL'.\n\n\nMEMBERNAME                 DESCRIPTION\n\n\n$$$INDEX  APPLICATION MASTER INDEX (EQU *)\n$INSTALL  APPLICATION INSTALLATION OVERVIEW\n$MRMCBT   IEBCOPY TO CREATE TAPE CONTAINING ENTIRE SYSLOG UTILITY\nLOGASMCL  JOBSTREAM TO COMPLILE/LINK 'LOGSCAN' SOURCE\nLOGCMDS   JOBSTREAM TO SETUP JES2 AUTOMATIC CMDS FOR DUMPING SYSLOG\nBATSCAN   JOBSTREAM TO TEST MODS TO PROGRAM 'LOGSCAN'\nCLEAR     JOBSTREAM TO COMPILE/LINK \"CLEAR\" (SCREEN) COMMAND\nOPTEJCL   JOBSTREAM TO TEST MODS TO PROGRAM 'OPTIONE'\nOPTIONE   ASSEMBLER SOURCE TO PROGRAM 'OPTIONE'  (ASMCL  DECK)\nPOSTPROC  ASSEMBLER SOURCE TO PROGRAM 'POSTPROC' (ASMCLG DECK)\nPRINTLOG  IEBGENER TO WHOLESALE PRINT ENTIRE SYSLOG DATA\nPROC      SYS1.PROCLIB(SYSLOGD) -EXTERNAL WTR TO DUMP SYSLOG HOURLY\nRANGE     ASSEMBLER SOURCE TO PROGRAM 'RANGE'   (ASMCLG DECK)\nLOGSCAN   ASSEMBLER SOURCE TO PROGRAM 'LOGSCAN' (SEE ALSO LOGASMCL)\nSLOGTMP   AUTOMATED SYSLOG DUMP FAILURE CONTINGENCY (TSO BATCH CMDS)\nSOPENTRY  BRIEF DOC DESCRIBING SYSLOG APPL (FOR USE IN DP SOP MANUAL)\nISRUTIL   SAMPLE ISPF UTILITIES PANEL WITH MODS TO INVOKE SYSLOG APPL\nLOGMAIN   ISPF PANEL FOR PRIMARY SYSLOG UTILITY MENU\nLOGMAINH  ISPF PANEL FOR PRIMARY SYSLOG UTLIITY MENU HELP\nLOGMAINT  ISPF PANEL FOR PRIMARY SYSLOG UTILITY TUTORIAL \".HELP\"\nLOGC      ISPF PANEL FOR 'CREATE QUARTERLY TAPE' FUNCTION\nLOGCH     ISPF PANEL FOR 'CREATE QUARTERLY TAPE' FUNCTION HELP\nLOGDDH    ISPF PANEL FOR 'DUMP DAILY' HELP (PAGE 1)\nLOGDDH2   ISPF PANEL FOR 'DUMP DAILY' HELP (PAGE 2)\nLOGDDH3   ISPF PANEL FOR 'DUMP DAILY' HELP (PAGE 3)\nLOGDDH4   ISPF PANEL FOR 'DUMP DAILY' HELP (PAGE 4)\nLOGDW     ISPF PANEL FOR 'DUMP WEEKLY' FUNCTION\nLOGDWH    ISPF PANEL FOR 'DUMP WEEKLY' HELP (PAGE 1)\nLOGDWH2   ISPF PANEL FOR 'DUMP WEEKLY' HELP (PAGE 2)\nLOGE      ISPF PANEL FOR 'EXCEPTION REPORT' FUNCTION\nLOGEH     ISPF PANEL FOR 'EXCEPTION REPORT' FUNCTION HELP\nLOGEA     ISPF PANEL FOR 'EXCEPTION REPORT: ARCHIVES' FUNCTION\nLOGEAH    ISPF PANEL FOR 'EXCEPTION REPORT: ARCHIVES' HELP\nLOGSA     ISPF PANEL FOR 'SEARCH ARCHIVES' FUNCTION\nLOGSAH    ISPF PANEL FOR 'SEARCH ARCHIVES' FUNCTION HELP (PAGE 1)\nLOGSAH2   ISPF PANEL FOR 'SEARCH ARCHIVES' FUNCTION HELP (PAGE 2)\nLOGSC     ISPF PANEL FOR 'SEARCH CURRENT' FUNCTION\nLOGSCH1   ISPF PANEL FOR 'SEARCH CURRENT' FUNCTION HELP (PAGE 1)\nLOGSCH2   ISPF PANEL FOR 'SEARCH CURRENT' FUNCTION HELP (PAGE 2)\nLOGSCH3   ISPF PANEL FOR 'SEARCH CURRENT' FUNCTION HELP (PAGE 3)\nLOGSC2    ISPF PANEL FOR 'SEARCH CURRENT' FUNCTION 'OPTION 2'\nLOGV01    ISPF MESSAGES FOR SYSLOG UTILITY HELP\nSLOGC     ISPF SKELETON FOR 'CREATE QUARTERLY TAPE' FUNCTION\nSLOGDW    ISPF SKELETON FOR 'DUMP WEEKLY' FUNCTION\nSLOGEA    ISPF SKELETON FOR 'EXCEPTION: ARCHIVES' FUNCTION\nSLOGSA    ISPF SKELETON FOR 'SEARCH ARCHIVES' FUNCTION\nSLOGSC2   ISPF SKELETON FOR 'SEARCH CURRENT' FUNCTION 'OPTION 2'\nCLOGC     CLIST USED BY 'CREATE QUARTERLY TAPE' FUNCTION\nCLOGDW    CLIST USED BY 'DUMP WEEKLY SYSLOG' FUNCTION\nCLOGEA    CLIST USED BY 'EXCEPTION: ARCHIVES' FUNCTION\nCLOGEC    CLIST USED BY 'EXCEPTION: CURRENT' FUNCTION\nCLOGSA    CLIST USED BY 'SEARCH ARCHIVES' FUNCTION\nCLOGSC1   CLIST USED BY 'SEARCH CURRENT' FUNCTION OPTION 1\nCLOGSC2   CLIST USED BY 'SEARCH CURRENT' FUNCTION OPTION 2\nCLOGSC3   CLIST USED BY 'SEARCH CURRENT' FUNCTION OPTION 3\nCLOGMAIN  CLIST USED BY ISPF UTILITIES MENU FOR INVOKING SYSLOG APPL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$INSTALL": {"ttr": 519, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*\n* REF        : D061001.SYSLOG($INSTALL)\n* DOC        : SYSLOG UTILITY INSTALLATION OVERVIEW\n*            : MARK DIEHL - HERCULES/ALLEGANY BALLISTICS LAB(ABL)\n*            :            - PHONE 304-726-5140/5343\n* ENVIRONMENT: MVS/SP1;ISPF/PDF V2.2;TSO/E V3;JES2/V1.3.6\n\n  THIS UTILITY WAS WRITTEN AS A RESULT OF A DP AUDIT REQUIREMENT\nWHICH DICTATED THAT THE SYSLOG BE PRINTED AND RETAINED.  THE PRACTICAL\nALTERNATIVE IS TO RETAIN THE SYSLOG ON SOME MACHINE-READABLE MEDIUM.\nTO ACHIEVE THIS END, THE ABL ISPF SYSLOG UTILITY WAS CREATED. THE\nUTILITY IS COMPRISED OF ASSEMBLER PROGRAMS, CLISTS, JCL, AND,\nOF COURSE, MAKES USE OF THE VARIOUS ISPF CAPABILITIES. MENU OPTIONS\nPROVIDE THE ABILITY TO 'AUTOMATICALLY' RETAIN THE SYSLOG DATA; SUBSE-\nQUENTLY EXTRACT PERTINENT PORTIONS OF THE RETAINED SYSLOG; PERFORM\nVARIOUS UTILITY FUNCTIONS (E.G,. LABEL TAPES); OBTAIN REPORTS CONTAINING\nUSER-SPECIFIED 'EXCEPTION' EVENTS (SYSLOG POST-PROCESSOR). EXTRA EFFORT\nWAS SPENT ATTEMPTING TO CREATE THE ISPF TUTORIAL PANELS TO SUPPORT THIS\nUTILITY WITH A MINIMUM EFFORT ON THE PART OF SYSTEMS.\n\nTHIS IS A FAIRLY SIMPLE SYSTEM; A SHARP OPERATOR SHOULD BE ABLE TO PER-\nFORM MUCH OF THE INSTALLATION. THE EASIST INSTALL PATH IS TO BEGIN\nREVIEWING THE ISPF PANELS, ESPECIALLY THE TUTORIALS. YOU WILL FIND\nTHESE GENEROUS WITH DETAIL AND CROSS-REFERENCING IS USED FREQUENTLY.\nSEE MEMBER $$$INDEX FOR A DESCRIPTION OF THE SYSLOG UTILITY COMPONENTS.\nMODIFICATIONS TO SUIT YOUR SHOP'S STANDARDS GOES WITHOUT SAYING. DESPITE\nTHIS UTILITY'S PURPORTED SIMPLICITY, IT IS STRONGLY ADVISED THAT ALL\nCOMPONENTS BE THOROUGHLY REVIEWED IN THEIR ENTIRETY BEFORE TESTING AT\nYOUR SHOP.  THERE ARE ALWAYS MORE THAN ENOUGH 'MINOR DETAILS' THAT CAN\nGO AWRY AND WREAK HAVOC AMONG THE MASSES.\n\n THIS UTILITY IS GREAT FOR 4381-TYPE SHOPS WHO CAN'T AFFORD THE LIKES\nOF 'WE WON'T MENTION NAMES' TO PERFORM THE BASIC FUNCTIONS IT PROVIDES.\nTHE PDS CONTAINING THIS UTILITY OCCUPIES ONE MERE 3380 CYLINDER. IT\nIS IN UNLOADED IEBCOPY FORMAT.\n\n AS WITH ANY APPLICATION, IMPROVEMENTS CAN BE MADE.  I WOULD GREATLY\nAPPRECIATE YOUR SUGGESTIONS, CONSTRUCTIVE CRITICISM, OR QUESTIONS RE-\nGARDING THE USE OF THIS UTILITY.\n\n THANKS, AND MAY THIS PRODUCT BE OF USE TO YOU!     MARK\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$MRMCBT": {"ttr": 521, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,20,99),'CREATE NASPA TAPE',MSGCLASS=Q\n/*JOBPARM N=2\n//*\n//* REF: D061001.SYSLOG($MRMNASP)\n//* DOC: LOAD ABL'S SYSLOG UTILITY COMPONENTS TO TAPE FOR SHIPMENT\n//*      TO NASPA (TO BE INCLUDED ON THE NASPA MODS TAPE).\n//*    : LOAD ABL'S OUTLIST UTILITY COMPONENTS TO TAPE FOR SHIPMENT\n//*      TO NASPA (TO BE INCLUDED ON THE NASPA MODS TAPE).\n//*\n//OUTLIST  EXEC  PGM=IEBCOPY,TIME=1439,REGION=1024K\n//SYSPRINT DD SYSOUT=*\n//O      DD DISP=(,KEEP),\n// UNIT=TAPES,LABEL=(,NL),VOL=(,RETAIN,,SER=NASPA),\n// DCB=(RECFM=FB,LRECL=80,BLKSIZE=9040)\n//I      DD DISP=SHR,DSN=D061001.OUTLIST\n//SYSUT3  DD UNIT=SYSDA,SPACE=(CYL,(1))\n//SYSUT4  DD UNIT=SYSDA,SPACE=(CYL,(1))\n//SYSIN   DD *\n C I=I,O=O\n/*\n//SYSLOG   EXEC  PGM=IEBCOPY,TIME=1439,REGION=1024K\n//SYSPRINT DD SYSOUT=*\n//O      DD DISP=(,KEEP),\n// UNIT=TAPES,LABEL=(2,NL),VOL=(,RETAIN,,SER=NASPA),\n// DCB=(RECFM=FB,LRECL=80,BLKSIZE=9040)\n//I      DD DISP=SHR,DSN=D061001.SYSLOG\n//SYSUT3  DD UNIT=SYSDA,SPACE=(CYL,(1))\n//SYSUT4  DD UNIT=SYSDA,SPACE=(CYL,(1))\n//SYSIN   DD *\n C I=I,O=O\n/*\n//TAPEMAP  EXEC PGM=TAPEMAP,PARM=CHECK\n//STEPLIB  DD  DISP=SHR,DSN=D061001.LOAD\n//SYSUT1   DD  VOL=SER=NASPA,UNIT=TAPES,DISP=SHR,LABEL=(,BLP)\n//SYSPRINT DD  SYSOUT=*\n//SYSPRNT2 DD  SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BATSCAN": {"ttr": 523, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,10,99),BATSCAN,MSGCLASS=Q,NOTIFY=D061001\n//*\n//*   REFER: D061001.SYSLOG(BATSCAN)\n//*   DOC  : ORIGINAL VERSION OF BATCH JCL USED BEFORE THE DEVELOPMENT\n//*          OF THE ISPF SYSLOG APPLICATION.  THE ISPF APPL NOW BUILDS\n//*          THIS JOBSTREAM VIA PANELS/SKELETONS.\n//*\n//*\n//*   THIS JOB IS USED TO PRINT DATA FROM A SPECIFIED SYSLOG SOURCE.\n//*\n//*   ABEND CODES =   1.  INVALID LENGTH PARM.\n//*                   2.  INVALID JULIAN DATE IN PARM\n//*                   3.  INVALID STARTING HOUR IN PARM\n//*                   4.  SEARCH ARG LONGER THAN 18 CHAR\n//*                   5.  NUMBER OF HOURS TO PRINT EQUALS ZERO\n//*\n//* PARM=DDDHHRRSTRING\n//*  DDD    =STARTDAY(JULIAN)\n//*  HH     =STARTHR\n//*  RR     =ENDHR  (EFFECTIVE END DATE = STARTHR + ENDHR)\n//*  STRING =SEARCH ARGUMENT (OPTIONAL. MAXLEN=18 IF SPECIFIED)\n//*\n//SYSLOGSP EXEC PGM=LOGSCAN,REGION=300K,TIME=2,\n// PARM='0370701'\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSUT1 DD DSN=D061001.SYSLOGD,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT2 DD SYSOUT=*\n//SYSUDUMP  DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLEAR": {"ttr": 525, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,10),CLEAR,MSGCLASS=Q,NOTIFY=D061001\n//*\n//*  REFER: D061001.SYSLOG(CLEAR)\n//*  DOC  : THE \"CLEAR\" COMMAND IS USED BY THE SYSLOG APPL'S CLISTS.\n//*\n//SYSLOGSP EXEC PGM=IFOX00,PARM='OBJ,TERM'\n//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1700,(600,100))\n//SYSUT2   DD DSN=&&SYSUT2,UNIT=SYSDA,SPACE=(1700,(300,50))\n//SYSUT3   DD DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(1700,(300,50))\n//SYSTERM  DD SYSOUT=*\n//SYSPUNCH DD DUMMY\n//SYSGO    DD DSN=&&OBJSET,UNIT=SYSDA,SPACE=(80,(200,50)),\n//             DISP=(MOD,PASS)\n//SYSIN    DD *\n*\n* THIS CODE CLEARS A 3270-TYPE SCREEN\n*\nCLEAR    START 0\n         USING *,12\n         SAVE  (14,12)\n         LR    12,15\n         LR    15,13\n         LA    13,SAVEAREA\n         ST    13,8(15)\n         ST    15,4(13)\n         TPUT  ERASE,14,FULLSCR\n         L     13,4(13)\n         RETURN (14,12),RC=0\nSAVEAREA DC   18F'0'\nERASE    DC    X'C1115D7E1140403C4040001DC813'\n         END   CLEAR\n/*\n//SYSPRINT DD SYSOUT=*\n//LINKEDT EXEC PGM=IEWL,COND=(4,LT),\n//         PARM='LIST,XREF,LET',REGION=256K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(1700,(400,50))\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.USERLIB(CLEAR)\n//OBJSET   DD  DSN=&&OBJSET,DISP=(OLD,DELETE,DELETE)\n//SYSLIN   DD  *\n INCLUDE OBJSET\n NAME CLEAR(R)\n//*    END OF JOBSTREAM \"CLEAR\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CLOGC": {"ttr": 527, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* REF: D061001.SYSLOG(CLOGC)\n/* DOC: SYSLOG APPLICATION - CLIST TO GENERATE JCL TO CREATE (LABEL)\n/*                           A NEW QUARTERLY SYSLOG TAPE\n/*\nCONTROL MSG NOLIST\nISPEXEC DISPLAY PANEL(LOGC)\nIF &LASTCC = 8 THEN EXIT CODE (0)\nISPEXEC VGET (LOGQTR LOGYEAR ZTEMPF) SHARED\nISPEXEC FTOPEN TEMP\nISPEXEC FTINCL SLOGC\nISPEXEC FTCLOSE\nSUBMIT '&ZTEMPF'\nSE '#ABLLOG: QUARTERLY SYSLOG TAPE CREATED ON &SYSDATE BY ',CN(01)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOGDW": {"ttr": 529, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* REF: D061001.SYSLOG(CLOGDW)\n/* DOC: SYSLOG APPLICATION - CLIST TO GENERATE JCL TO DUMP WEEKLY\n/*                           SYSLOG DATA TO A QUARTERLY TAPE\n/*\nCONTROL MSG NOLIST\nISPEXEC DISPLAY PANEL(LOGDW)\nIF &LASTCC = 8 THEN EXIT CODE(0)\nISPEXEC VGET (LOGQTR LOGYEAR ZTEMPF) SHARED\nISPEXEC FTOPEN TEMP\nISPEXEC FTINCL SLOGDW\nISPEXEC FTCLOSE\nSUBMIT '&ZTEMPF'\nSE '#ABLLOG: WEEKLY SYSLOG DUMP SUBMITTED ON &SYSDATE BY ',CN(01)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOGEA": {"ttr": 531, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* REF: D061001.SYSLOG(CLOGEA)\n/* DOC: SYSLOG APPLICATION - CLIST TO SUBMIT AN EXCEPTION REPORT USING\n/*                           A QUARTERLY TAPE AS INPUT\n/*\nCONTROL MSG NOLIST\nISPEXEC DISPLAY PANEL(LOGEA)\nIF &LASTCC = 8 THEN EXIT CODE (0)\nISPEXEC VGET (LOGQTR LOGYEAR ZTEMPF) SHARED\nISPEXEC FTOPEN TEMP\nISPEXEC FTINCL SLOGEA\nISPEXEC FTCLOSE\nSUBMIT '&ZTEMPF'\nSE '#ABLLOG: ARCHIVE EXCEPTION REPORT REQUESTED ON &SYSDATE BY ',CN(01)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOGEC": {"ttr": 533, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* REF: D061001.SYSLOG(CLOGEC)\n/* DOC: SYSLOG APPLICATION - CLIST TO SUBMIT A WEEKLY EXCEPTION REPORT\n/*                           USING THE CURRENT WEEK'S ONLINE SYSLOG.\n/*\nCONTROL MSG NOLIST\nSUB 'D061001.SYSLOG(OPTEJCL)'\nSE '#ABLLOG: WEEKLY EXCEPTION REPORT REQUESTED ON &SYSDATE BY ',CN(01)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOGMAIN": {"ttr": 535, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* REF: D061001.SYSLOG(CLOGMAIN)\n/* DOC: SYSLOG APPLICATION - CLIST TO ALLOW ACCESS TO DP ONLY\n/*\nCONTROL MSG NOLIST\n/*CONTROL MAIN LIST SYMLIST CONLIST MSG\nIF &SYSUID EQ UNAMEIT THEN GOTO GOODGUY\nSE '#ABLLOG: ACCESS DENIED TO USER=&SYSUID ON &SYSDATE',CN(01)\nCLEAR\nWRITE\nWRITE &SYSUID NOT AUTHORIZED TO ACCESS SYSLOG APPLICATION\nWRITE CONTACT DATA PROCESSING FOR ASSISTANCE\nWRITE\nEXIT CODE (0)\nGOODGUY: ISPEXEC SELECT PANEL(LOGMAIN)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOGSA": {"ttr": 537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* REF: D061001.SYSLOG(CLOGSA)\n/* DOC: SYSLOG APPLICATION - CLIST TO GENERATE JCL TO SEARCH QUARTERLY\n/*                           SYSLOG DATA USING ARCHIVE TAPE\n/*\nCONTROL MSG NOLIST\nISPEXEC DISPLAY PANEL(LOGSA)\nIF &LASTCC = 8 THEN EXIT CODE(0)\nISPEXEC VGET (LOGQTR LOGYEAR ZTEMPF) SHARED\nISPEXEC VGET (LOGBDAT LOGBHR LOGENDHR LOGLIT) SHARED\nISPEXEC FTOPEN TEMP\nISPEXEC FTINCL SLOGSA\nISPEXEC FTCLOSE\nSUBMIT '&ZTEMPF'\nSE '#ABLLOG: ARCHIVED SYSLOG SEARCHED ON &SYSDATE BY ',CN(01)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOGSC1": {"ttr": 539, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* REF: D061001.SYSLOG(CLOGSC1)\n/* DOC: CLIST USES ISPF BROWSE TO VIEW CURRENT (ONLINE) SYSLOG\nISPEXEC BROWSE DATASET('D061001.SYSLOGD')\nSE '#ABLLOG: CURRENT SYSLOG BROWSED ON &SYSDATE  BY ',CN(01)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOGSC2": {"ttr": 541, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* REF: D061001.SYSLOG(CLOGSC2)\n/* DOC: SYSLOG APPLICATION - CLIST TO GENERATE JCL TO SEARCH CURRENT\n/*                           (I.E., ONLINE) SYSLOG DATA\n/*\nCONTROL MSG NOLIST\nISPEXEC DISPLAY PANEL(LOGSC2)\nIF &LASTCC = 8 THEN EXIT CODE(0)\nISPEXEC VGET (LOGBDAT LOGBHR LOGENDHR LOGLIT ZTEMPF ) SHARED\nISPEXEC FTOPEN TEMP\nISPEXEC FTINCL SLOGSC2\nISPEXEC FTCLOSE\nSUBMIT '&ZTEMPF'\nSE '#ABLLOG: SYSLOG SEARCH CURRENT BATCH ISSUED ON &SYSDATE BY ',CN(01)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLOGSC3": {"ttr": 543, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0\n/* REF: D061001.SYSLOG(CLOGSC3)\n/* DOC: CLIST FOR RUNNING THE SYSLOG EXTRACTION PROGRAM SPECIFICALLY\n/*      FOR DETERMINING THE DATE RANGE OF WEEKLY ONLINE SYSLOG DATA\n/*      FOR THE SPF 'SYSLOG' APPLICATION (OPTION SC.3)\n/*\nCONTROL NOMSG NOLIST\nFREE FI(SYSUT1 SYSUT2)\nALLOC FI(SYSUT1) DA('D061001.SYSLOGD') SHR\nALLOC FI(SYSUT2) DA(*)\nCLEAR\nTIME\nWRITE\nWRITE\nWRITE NOW SEARCHING TO DETERMINE THE DATE AND TIME RANGE\nWRITE OF THE ONLINE SYSLOG DATA\nWRITE\nCALL 'D061001.LOAD(RANGE)'\nSE '#ABLLOG: CURRENT DATE RANGE REQUESTED ON &SYSDATE BY ',CN(01)\nFREE FI(SYSUT1 SYSUT2)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ISRUTIL": {"ttr": 545, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%-------------------------  UTILITY SELECTION MENU  ----------------------------\n%OPTION  ===>_ZCMD                                                             +\n%\n%   1 +LIBRARY     - Library utility:\n+                           Print index listing or entire data set\n+                           Print, rename, delete, or browse members\n%   2 +DATASET     - Data set utility:\n+                           Display data set information\n+                           Allocate, rename, or delete entire data set\n+                           Catalog or uncatalog data set\n%   3 +MOVE/COPY   - Move, copy, or promote members or data sets\n%   4 +DSLIST      - Data set list:\n+                           Print or display (to process) list of data set names\n+                           Print or display VTOC information\n%   5 +RESET       - Reset statistics for members of ISPF library\n%   6 +HARDCOPY    - Initiate hardcopy output\n%   7 +VTOC        - Display DISK Volume Table Of Contents\n%   8 +OUTLIST     - Display, delete, or print held (Class Q) JOB output\n%   9 +COMMANDS    - Create/change an application command table\n%  10 +CONVERT     - Convert old format menus/messages to new format\n%  11 +FORMAT      - Format definition for formatted data Edit/Browse\n%SCAN +PDSSCAN     - Search dataset for a given literal string\n%  PC +PCLINK      - PC to Mainframe Communications\n%   S +SYSLOG      - System LOG Application (Data Processing ONLY)\n)INIT\n  .HELP = ISR30000\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                1,'PGM(ISRUDA) PARM(ISRUDA1)'\n                2,'PGM(ISRUDA) PARM(ISRUDA2)'\n                3,'PGM(ISRUMC)'\n                4,'PGM(ISRUDL)'\n                5,'PGM(ISRURS)'\n                6,'PGM(ISRUHC)'\n                7,'PGM(ISRUVT)'\n                8,'CMD(%ISRUOL)'\n                9,'PANEL(ISPUCMA)'\n               10,'PGM(ISRQCM) PARM(ISRQCMP)'\n               11,'PGM(ISRFMT)'\n             SCAN,'CMD(PDSSCAN)'\n               PC,'CMD(PCLINK)'\n                S,'CMD(CLOGMAIN)'\n              ' ',' '\n                *,'?' )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGASMCL": {"ttr": 547, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,10),ASMBLE,MSGCLASS=Q,NOTIFY=D061001\n//*\n//*  REFER: D061001.SYSLOG(LOGASMCL)\n//*  DOC  : PROGRAM 'LOGSCAN' IS USED BY THE ISPF SYSLOG APPLICATION\n//*         'SEARCH CURRENT' (SC) & 'SEARCH ARCHIVES' (SC) OPTIONS.\n//*         SEE MEMBER 'LOGSCAN' COMMENTS FOR DETAILS.\n//*\n//ASSEMBLE EXEC PGM=IFOX00,PARM='OBJ,TERM'\n//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1700,(600,100))\n//SYSUT2   DD DSN=&&SYSUT2,UNIT=SYSDA,SPACE=(1700,(300,50))\n//SYSUT3   DD DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(1700,(300,50))\n//SYSTERM  DD SYSOUT=*\n//SYSPUNCH DD DUMMY\n//SYSIN    DD DISP=SHR,DSN=D061001.SYSLOG(LOGSCAN)\n//SYSGO    DD DSN=&&OBJSET,UNIT=SYSDA,SPACE=(80,(200,50)),\n//             DISP=(MOD,PASS)\n//SYSPRINT DD SYSOUT=*\n//LINKEDT EXEC PGM=IEWL,COND=(4,LT),\n//         PARM='LIST,XREF,LET',REGION=650K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(1700,(400,50))\n//SYSLMOD  DD  DISP=SHR,DSN=D061001.LOAD\n//OBJSET   DD  DSN=&&OBJSET,DISP=(OLD,DELETE,DELETE)\n//SYSLIN   DD  *\n INCLUDE OBJSET\n NAME LOGSCAN(R)\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOGC": {"ttr": 770, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%---------------  LABEL NEW QUARTERLY SYSLOG DUMP TAPE  ---------------\n%\n%COMMAND ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%                                                           +TIME     - &ZTIME\n+ Enter the QUARTER and YEAR to be dumped to this tape:\n%\n% QUARTER ===>_LOGQTR\n%\n% YEAR    ===>_LOGYEAR\n%\n%\n%\n+ Press%PF3+(or enter END  command) to abort this function\n%\n+ Press%PF1+(or enter HELP command) for assistance\n%\n)INIT\n  .HELP = LOGCH\n  &ZPRIM = NO\n  &ZHTOP = LOGMAINh   /* TUTORIAL TABLE OF CONTENTS        */\n)PROC\n  VER (&LOGQTR NONBLANK MSG=LOGV013)\n  VER (&LOGQTR PICT,'N',MSG=LOGV013)\n  VER (&LOGQTR range 1 4 MSG=LOGV013)\n  VER (&LOGYEAR NONBLANK MSG=LOGV014)\n  VER (&LOGYEAR PICT,'NN',MSG=LOGV014)\n  VER (&LOGYEAR range 87 99 MSG=LOGV014)\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n  VPUT (LOGQTR LOGYEAR) SHARED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGCH": {"ttr": 772, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%TUTORIAL ------ CREATE NEW QUARTERLY SYSLOG DUMP TAPE  ------------- TUTORIAL\n%\n% COMMAND ===>_ZCMD\n%\n+ This function will create (i.e., label) a new quarterly dump tape that\n+ will then be used during the weekly dump (Option 'DW') procedure. The\n% QUARTER+ and%YEAR+ values supplied will be used to construct a tape volume\n+ serial of LOGqyy (where q=QUARTER and yy=YEAR).\n+\n% NOTE: +Write the creation date of this tape on the external label.\n+\n+ Refer to Primary option 'DW' for weekly dumping details.\n+\n+\n+\n+\n+\n+ Press%PF3+to return\n%\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGCMDS": {"ttr": 774, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*\n//*  REF:  SYS1.PROCLIB(LOGCMDS)\n//*\n//LOGCMDS   EXEC PGM=IEBGENER\n//SYSPRINT  DD DUMMY\n//SYSIN     DD DUMMY\n//SYSUT1    DD DISP=SHR,DSNAME=ABL.CNTL(LOGCMDS)\n//SYSUT2    DD SYSOUT=(A,INTRDR),DCB=BLKSIZE=80\n//* NOTE: ABL.CNTL(LOGCMDS) LISTED BELOW FOR REFERENCE\n/*$TA DLOG,T=23.00,I=3600,'$VS,''D T'''\n/*$TA WLOG,T=23.00,I=3600,'$VS,''W T'''\n/*$TA SLOG,T=23.01,I=3600,'$VS,''S SYSLOGD.LOG'''\n/*$TA PLOG,T=23.03,I=3600,'$VS,''P LOG'''\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOGDDH": {"ttr": 776, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%---------------  TUTORIAL: DAILY SYSLOG DUMP PROCEDURE  ---------------\n%\n%\n%COMMAND ===>_ZCMD\n+\n+  The SYSLOG is dumped to online storage via JES2 automatic commands\n+ on an hourly basis.  Use option 'SC' (Search Current) to access the\n+ SYSLOG for the current week.  The data available to this option will\n+ be current excluding the present hour's SYSLOG.\n+\n+  On the last working day of each week, the online SYSLOG is dumped to\n+ a quarterly archival tape using SYSLOG Option DW (Dump Weekly). Use\n+ option 'SA' (Search Archives) to access archived SYSLOG data.\n+\n+\n+\n+ Press%PF3+to return\n+\n+ Press %ENTER+ for additional DAILY DUMP details\n)INIT\n  &zcont = logddh2\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGDDH2": {"ttr": 778, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%---------------   DETAILS: DAILY SYSLOG DUMPING      -----------------\n%\n%COMMAND ===>_ZCMD             +\n+\n+  THE SYSLOG is dumped to online storage via JES2 automatic commands\n+ on an hourly basis.  These commands are initialized by the 'S LOGCMDS'\n+ command (which is part of the IPL procedure). They can also be entered\n+ manually  any time the SYSLOG is needed for immediate access/viewing.\n+ Note that manually entering the four commands needed to force an immediate\n+ SYSLOG dump will not affect the automatic commands schedule.\n+\n+ SYS1.PROCLIB(LOGCMDS) routes to the  internal reader the JES2 auto-\n+ matic commands contained in ABL.CNTL(LOGCMDS). These commands are:\n+\n+ /*$TA DLOG,T=23.00,I=3600,'$VS,''D T'''       -displays date/time for ref.\n+ /*$TA WLOG,T=23.00,I=3600,'$VS,''W T'''       -writes SYSLOG to class T\n+ /*$TA SLOG,T=23.01,I=3600,'$VS,''S SYSLOGD.LOG''' -dumps to online dataset\n+ /*$TA PLOG,T=23.03,I=3600,'$VS,''P LOG'''     -pauses external writer\n+\n+ Refer to the JES2 Operator Commands manual for details regarding the\n+ use of automatic commands.\n+\n+ Press%PF3+to return\n+ Press%ENTER+for details regarding SYSLOG spooling.\n)INIT\n  &ZCONT = LOGDDH3\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGDDH3": {"ttr": 780, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%---------------   DETAILS: SYSLOG SPOOLING       -----------------------------\n%\n%COMMAND ===>_ZCMD             +\n+\n+ The SYSLOG is written to sysout class \"T\" in two different ways:\n+\n+  1. It is automatically written to sysout by the system each time\n+     the buffer which holds the SYSLOG data fills up.   The buffer\n+     limit is controlled in Sys1.Parmlib(IEASYS00) entry \"LOGLMT=\".\n+     It is currently set to 5000 (6/84).  Each time the SYSLOG buf-\n+     fer reaches the 5000 line limit, the system automatically will\n+     write the buffer to sysout class \"T\".\n+\n+  2. The SYSLOG can also be spooled to sysout class \"T\" anytime it\n+     is desired to be dumped by manually entering the command \"W T\".\n+     The active log can also be printed immediately via the \"W A\"\n+     command.  This will print the current SYSLOG in class 'A'.\n+\n+  Regardless of how the SYSLOG is spooled to sysout class \"T\",\n+  (either automatically by the system or via manual operator command\n+  'W T'),    the message \"A SYSLOG DATASET HAS BEEN SPOOLED TO SYSOUT\n+  CLASS T\" will always be produced.   This means that the SYSLOG\n+  data is now in a regular JES2 sysout print class and is ready to\n+  either be printed (via printer setup to class \"T\") or dumped\n+  to disk for future use.  Dumping the SYSLOG to disk allows for\n+  the use of a utility program which can scan and selectively print\n+  a given time period or literal data. Use SPF option 3.S to access\n+  the retained SYSLOG.\n+\n+ ... Tutorial continued on next page ... press %ENTER+ to proceed\n)INIT\n  &ZCONT = LOGDDH4\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LOGDDH4": {"ttr": 782, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%---------------   DETAILS: SYSLOG SPOOLING    --------------------------------\n%\n%COMMAND ===>_ZCMD             +\n+\n+  Once the SYSLOG data is spooled to sysout class \"T\",  enter the\n+  following command:  S SYSLOGD.LOG  .  This task will add the current\n+  SYSLOG data to an online file each time it is run.  Note that the\n+  SYSLOG will not automatically print out each time it is dumped to\n+  online storage.  Use ISPF's primary menu option 3.S to access the\n+  online SYSLOG.\n+\n+  After the \"SYSLOGD\" task copies the SYSLOG from spool to disk,\n+  message \" LOG WAITING FOR WORK \" will appear.  The reply to this\n+  message will always be \" P LOG \" .  This reply will close the disk\n+  file (actually the external writer program) and complete the\n+  process of dumping (i.e., retaining) the SYSLOG.\n+\n+  NOTE: ANY problems with this procedure should be addressed as soon\n+        possible as the availability of SYSLOG data is critical in\n+        emergency situations.\n+\n+  Refer to the manual 'MVS SPL: JOB Management for details regarding\n+  the use of external writers.\n+\n+ Press%PF3+to return\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LOGDW": {"ttr": 784, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%----------------  DUMP WEEKLY SYSLOG DATA TO TAPE  ------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n%                                                           +USERID   - &ZUSER\n%                                                           +TIME     - &ZTIME\n+ Enter QUARTER and YEAR of SYSLOG being dumped:\n%\n% QUARTER ===>_LOGQTR   (enter value from 1 to 4)\n%\n% YEAR    ===>_LOGYEAR  (must be two digits - e.g., 87)\n+\n+\n+\n+\n+ Press%PF3+to abort this function (or enter the END command)\n%\n+ Press%PF1+for assistance  (or enter the HELP command)\n%\n)INIT\n  .HELP = LOGDWH\n  &ZPRIM = NO\n  &ZHTOP = LOGdwh     /* TUTORIAL TABLE OF CONTENTS        */\n)PROC\n  VER (&LOGQTR NONBLANK msg=LOGV013)\n  VER (&LOGQTR PICT,'N',MSG=LOGV013)\n  VER (&LOGQTR range 1 4 MSG=LOGV013)\n  VER (&LOGYEAR NONBLANK msg=LOGV014)\n  VER (&LOGYEAR PICT,'NN',MSG=LOGV014)\n  VER (&LOGYEAR range 87 99 MSG=LOGV014)\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n  VPUT (LOGQTR LOGYEAR) SHARED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGDWH": {"ttr": 786, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%TUTORIAL -------------- DUMP WEEKLY SYSLOG TO TAPE --------------------TUTORIAL\n%\n%COMMAND ===>_ZCMD                                                             +\n+\n+  On the last working day of each week, the online SYSLOG is dumped to\n+ a permanent archival tape using SYSLOG primary menu option DW. Option\n+ DW (Dump Weekly) prompts for the Quarter and Year containing the SYSLOG\n+ to be dumped.  As an archival tape is closed-out at the end of a quarter,\n+ the last day represented on the tape should be written externally on\n+ this tape.  Selection of the end-of-quarter dump precludes weekly dumps.\n+ If the end-of-quarter falls on a day other than the last working day of\n+ the week, it is acceptable to run the Dump Weekly procedure on this day so as\n+ to close out the quarter. In other words, it is possible to run the Dump\n+ Weekly procedure twice during an end-of-quarter week, once to end the quarter\n+ and another to end the week.\n+  It is imperative that the ending date be written externally on the tape\n+ so that the date range on a given quarterly tape can be readily determined.\n+ Input parameters required for the Dump Weekly function are described below.\n+\n+\n%Enter QUARTER and YEAR of SYSLOG being dumped:\n%\n+  %QUARTER+===> select a value from 1 to 4\n+  %YEAR   +===> 2 digit year - e.g., 89\n+\n+\n+\n+ Press%ENTER+for additional details\n+\n+ Press%PF3+to return\n)PROC\n &zcont = logdwh2\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGDWH2": {"ttr": 788, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%---------------   DETAILS: WEEKLY SYSLOG DUMPING     -----------------\n%\n%COMMAND ===>_ZCMD                                                +\n+\n+\n+  SYSLOG weekly dumping is invoked via primary menu option 'DW'.  This\n+ option submits an IEBGENER which dumps the online SYSLOG dataset\n+ (D061001.SYSLOGD) to the quarterly archival tape as requested on the\n+ DW panel.  DISP=MOD adds the current weekly online SYSLOG data to the tape.\n+ Step 'WEEKSCAN' reports the range of the weekly syslog being dumped.\n+ Step 'QTRSCAN' runs through the entire tape and reports the date and\n+ time range found.  This is done primarily for hardcopy documentation.\n+ Two subsequent steps conditionally DELETE then REALLOCATE dataset\n+ D061001.SYSLOGD, respectively.  These steps 'prime' this online\n+ repository dataset for another week of SYSLOG collection.  An additional\n+ step ('OPTIONE') reports exception events for the week being dumped. The\n+ report produced by this step is identical to the primary menu's option E\n+ report.  It was added to the DUMP WEEKLY jobstream to ensure execution\n+ on a weekly basis. Read option 'E's tutorial for details regarding excep-\n+ tion event reporting.\n+\n% Output from this JOB should be filed with the Quarterly tape.\n+\n+\n+\n+ Press%PF3+ to return\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGE": {"ttr": 790, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%----------------  SUBMIT SYSLOG EXCEPTION REPORT     -----------------\n%\n%REPORT PERIOD ===>_ZCMD\n%\n+ Select the period to be reported:\n+\n+   %C+- Current Week's SYSLOG\n+\n+   %A+- Archived SYSLOG (from quarterly tape)\n+\n+\n+\n+\n+\n+ Press%PF1+ for assistance\n%\n+ Press%PF3+ to return\n)INIT\n  .HELP = LOGEH\n  &ZPRIM = NO\n  &ZHTOP = LOGMAINH   /* TUTORIAL TABLE OF CONTENTS        */\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                C,'CMD(CLOGEC)'\n                A,'CMD(CLOGEA)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGEA": {"ttr": 792, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%---------------  EXCEPTION REPORT USING ARCHIVED SYSLOG   --------------------\n%\n%COMMAND ==>_ZCMD                                           +USERID   - &ZUSER\n%                                                           +TIME     - &ZTIME\n%\n%Enter QUARTER and YEAR containing the time period to be reported:\n%\n+   QUARTER ===>_LOGQTR    (enter value from 1 to 4)\n+   YEAR    ===>_LOGYEAR   (enter 2 digit year - e.g., 87)\n+\n+\n+\n+\n+Press%PF1+for assistance\n+\n+Press%PF3+to abort this function\n)INIT\n  .HELP = LOGEAH\n  &ZHTOP = LOGEH\n)PROC\n  VER (&LOGQTR NB MSG=LOGV013)\n  VER (&LOGQTR PICT,'N',MSG=LOGV013)\n  VER (&LOGQTR RANGE 1 4,MSG=LOGV013)\n  VER (&LOGYEAR NB MSG=LOGV014)\n  VER (&LOGYEAR PICT,'NN',MSG=LOGV014)\n  VER (&LOGYEAR RANGE 87 99 MSG=LOGV014)\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n  VPUT (LOGQTR LOGYEAR) SHARED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGEAH": {"ttr": 794, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%TUTORIAL ------  EXCEPTION REPORT USING ARCHIVED SYSLOG   ---------  TUTORIAL\n%COMMAND ===>_zcmd\n%\n+\n+An EXCEPTION report can be generated using an entire quarter's SYSLOG as input.\n+This report can be quite voluminous so care should be taken to view the output\n+via the SPF 3.8 OUTLIST utility before printing.  This JOB is also run by oper-\n+ations at the closing-out of a quarterly SYSLOG tape. Output is kept on file\n+with the quarterly tape for one year. Input to this option is described below.\n%\n%\n%Enter QUARTER and YEAR containing the time period to be reported:\n%\n+   QUARTER ===>           (enter value from 1 to 4)\n+   YEAR    ===>           (enter 2 digit year - e.g., 89)\n+\n+\n+\n+\n+\n+Press%PF3+to return\n)INIT\n  .HELP = LOGEH\n  &ZHTOP = LOGEH\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGEH": {"ttr": 796, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ----------  SUBMIT SYSLOG EXCEPTION REPORT   -------------- TUTORIAL\n%\n%COMMAND ===>_ZCMD\n+\n+ The EXCEPTION option  submits a batch JOB that will search either the  weekly\n+ online SYSLOG or a quarterly SYSLOG archive tape. The SYSLOG period request-\n+ ed will be searched for specific 'exception' events and a report will be\n+ generated that will be sorted by event type.  Contact Mark Diehl if there are\n+ additional exception events to be added to this report. The output produced\n+ by this JOB can be viewed using ISPF option 3.8. After viewing, either\n+ print (using 3.8 option 'P') or delete (using option 'D') this output.  Each\n+ report line will contain a 5-character event-ID, followed by a 3-digit julian\n+ date, followed by the time-of-day, followed by the actual text of the SYSLOG\n+ record itself.\n+\n+ Report Period options available on the EXCEPTION REPORT menu are:\n+\n+   %C - Current Week's SYSLOG+ - submits batch JOB directly. The report pro-\n+                                 duced by selecting this option is also pro-\n+                                 duced automatically by the weekly 'DW' option\n+\n+   %A - Archived SYSLOG (from quarterly tape)+ - requests the user to supply\n+                                                 report period, then submits\n+                                                 a batch JOB.\n+\n+\n+ Press%PF3+ to return\n)INIT\n  &ZPRIM = NO\n  &ZHTOP = LOGMAINH   /* TUTORIAL TABLE OF CONTENTS        */\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGMAIN": {"ttr": 798, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%-___---------------------  SYSLOG UTILITY PRIMARY MENU   ---------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%                                                           +TIME     - &ZTIME\n%  DD +-Dump Daily  SYSLOG to online storage\n%\n%  DW +-Dump Weekly SYSLOG data onto Quarterly Archival tape\n%\n%  SC +-Search SYSLOG from current week\n%\n%  SA +-Search Archived SYSLOG data (from Quarterly tape)\n%\n%   C +-Create new Quarterly tape\n%\n%   E +-Submit Exception Report\n%\n%   T +-Tutorial\n%\n% END +-Terminate SYSLOG utility and return to SPF\n)INIT\n  .HELP = LOGMAINT\n  &ZPRIM = YES\n  &ZHTOP = LOGMAINH\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n               SC,'PANEL(LOGSC)'\n               SA,'CMD(CLOGSA)'\n               DD,'PGM(ISPTUTOR) PARM(LOGDDH)'\n               DW,'CMD(CLOGDW)'\n                C,'CMD(CLOGC)'\n                E,'PANEL(LOGE)'\n                T,'PGM(ISPTUTOR) PARM(LOGMAINH)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGMAINH": {"ttr": 1025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n+ TUTORIAL -------------------  SYSLOG UTILITY    -------------------  TUTORIAL\n+\n%OPTION  ===>_ZCMD                                            +\n%\n+ To view the tutorial for a SYSLOG function, select from an option below\n+ (or press%ENTER+to view each option's tutorial sequentially).\n%\n%  DD +-Dump Daily  SYSLOG to online storage\n%\n%  DW +-Dump Weekly SYSLOG data onto a Quarterly Archival tape\n%\n%  SC +-Search SYSLOG from current week\n%\n%  SA +-Search Archived SYSLOG  (from Quarterly tape)\n%\n%   C +-Create new Quarterly tape\n%\n%   E +-Submit Exception Report\n+\n+\n+\n+ Press%PF3+Return to the SYSLOG PRIMARY MENU\n)INIT\n  .HELP = LOGMAINT\n  &zprim = no\n  &zhtop = logmainh\n)PROC\n  &ZSEL = TRANS (&ZCMD,\n               DD,LOGDDH\n               DW,LOGDWH\n               SC,LOGSCH\n               SA,LOGSAH\n                C,LOGCH\n                E,LOGEH\n               ' ',' '\n                *,'?' )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGMAINT": {"ttr": 1027, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n+-----------------------------------------------------------------------------\n+\n%COMMAND  ===>_ZCMD                                            +\n%\n+ Assistance is available for each of the SYSLOG utility's primary\n+ options by requesting option 'T' from the  PRIMARY MENU.  Functions\n+ are described individually by selecting option 'T'.\n+\n+ Press%PF3+  to return to the SYSLOG UTILITY PRIMARY MENU\n+\n+ Press%ENTER+to view the SYSLOG tutorial\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGSA": {"ttr": 1029, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%------------------  SEARCH ARCHIVED SYSLOG DATA     ------------------\n%\n%COMMAND ===>_ZCMD                                          +USERID   - &ZUSER\n%                                                           +TIME     - &ZTIME\n%\n%Enter QUARTER and YEAR containing the time period to be searched:\n%\n+   QUARTER ===>_LOGQTR    (enter value from 1 to 4)\n+   YEAR    ===>_LOGYEAR   (enter 2 digit year - e.g., 87)\n+\n+\n%Enter the DATE and TIME range to be searched:\n+\n+   BEGIN DATE (Julian)  ===>_LOGBDAT\n+   BEGIN HOUR (00-24 )  ===>_LOGBHR\n+   END   HOUR (01-99 )  ===>_LOGENDHR\n+\n%Optionally, enter the desired search literal ===>_LOGLIT            +\n+\n+\n+\n+Press%PF3+(or enter the END  command) to abort this function\n+\n+Press%PF1+(or enter the HELP command) for assistance\n)INIT\n  .HELP = LOGSAH\n  &ZHTOP = LOGSAH\n  &LOGBDAT = ' '\n  &LOGBHR = ' '\n  &LOGENDHR = ' '\n  &LOGLIT = ' '\n)PROC\n  VER (&LOGQTR NB MSG=LOGV013)\n  VER (&LOGQTR PICT,'N',MSG=LOGV013)\n  VER (&LOGQTR RANGE 1 4,MSG=LOGV013)\n  VER (&LOGYEAR NB MSG=LOGV014)\n  VER (&LOGYEAR PICT,'NN',MSG=LOGV014)\n  VER (&LOGYEAR RANGE 87 99 MSG=LOGV014)\n  VER (&LOGBDAT NB MSG=LOGV012)\n  VER (&LOGBDAT PICT,'NNN',MSG=LOGV012)\n  VER (&LOGBDAT RANGE 001 365 MSG=LOGV012)\n  VER (&LOGBHR NB MSG=LOGV010)\n  VER (&LOGBHR PICT,'NN',MSG=LOGV010)\n  VER (&LOGBHR RANGE 00 24 MSG=LOGV010)\n  VER (&LOGENDHR NB MSG=LOGV011)\n  VER (&LOGENDHR PICT,'NN',MSG=LOGV011)\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n  IF (&LOGLIT \u00ac= ' ')\n   VPUT (LOGLIT) SHARED\n  VPUT (LOGQTR LOGYEAR LOGBDAT LOGBHR LOGENDHR) SHARED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGSAH": {"ttr": 1031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%TUTORIAL -------------- SEARCH ARCHIVED SYSLOG DATA -------------------TUTORIAL\n%\n% COMMAND===>_ZCMD                                       +\n+\n+ Using this option, a batch JOB will be submitted that will search a quarterly\n+ SYSLOG archive tape.  After notification of JOB completion, view the output\n+ using the ISPF OUTLIST utility (ISPF UTILITIES - 3.8).  After viewing, the\n+ the output may then be either printed or deleted using option 3.8.\n+\n+ User supplied parameters to the SEARCH ARCHIVE function are described by\n+ pressing%ENTER.\n+\n+ For an overview of the content of the quarterly archive tape, return to the\n+ SYSLOG Primary Menu then choose option 'DD'.\n+\n+\n+\n+Press%ENTER+ for a description of the search argument.\n+\n+Press%PF3+to return\n)init\n &zcont = logsah2\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGSAH2": {"ttr": 1033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%TUTORIAL ------------- SEARCH ARGUMENT REQUIREMENTS ---------------- TUTORIAL\n%\n% COMMAND===>_ZCMD                                       +\n+\n%Enter QUARTER and YEAR to be searched:\n%\n+  %QUARTER+===> select a value from 1 to 4\n+  %YEAR   +===> 2 digit year - e.g., 87\n+\n+\n%Select the desired DATE and TIME range:\n+\n%   BEGIN DATE (Julian)+ ===> 3 digit value from 001-365\n%   BEGIN HOUR (00-24 )+ ===> Start time of search\n%   # HOURS TO REPORT  + ===> Specify the number of hours to be reported\n+                            %following+the BEGIN HOUR.  Value can be from 1\n+                             to 99 (max search range = 4 days (99/24=4)\n+                             This value is%NOT+a time-of-day hour.\n+\n+\n%Optionally, enter the desired search literal+===>\n+\n+  The search literal cannot exceed 18 characters and musn't contain blanks.\n+  Omitting the literal results in the reporting of the entire Date and\n+  TIME range.  Multiple literals cannot be supplied.\n+\n+\n+Press%PF3+to return\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGSC": {"ttr": 1035, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------  SEARCH CURRENT WEEK'S SYSLOG    ------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%   1 +-Browse SYSLOG                                       +TIME     - &ZTIME\n%   2 +-Generate a report (TIME range or LITERAL scan)      +TERMINAL - &ZTERM\n%   3 +-Determine DATE and TIME range of SYSLOG data\n% END +-Terminate SEARCH and return to SYSLOG MAIN MENU\n+\n+\n+\n+ Press%PF1+for assistance (or enter HELP command)\n+\n+ Press%PF3+to return to the SYSLOG Primary Menu\n)INIT\n  .HELP = LOGSCH\n  &zhtop = logsch\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                1,'CMD(CLOGSC1)'\n                2,'CMD(CLOGSC2)'\n                3,'CMD(CLOGSC3)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGSCAN": {"ttr": 1037, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "************************************************************************\n*\n*  REFER: D061001.SYSLOG(LOGSCAN)\n*  DOC  : MVS SYSLOG EXTRACT PROGRAM (LOADMOD=LOGSCAN)\n*         JOBSTREAM 'LOGASMCL' COMPILES AND LINKS THIS CODE\n*         MARK DIEHL - HERCULES/ALLEGANY BALLISTICS LAB (ABL)\n*\n*  THIS VERSION OF THE SYSLOG SCAN WAS CREATED BY MODIFYING THE\n*  ORIGINAL SE/2 VERSION SO IT WILL WORK USING SP/3 SYSLOG DATA.\n*  VERY FEW CHANGES WERE REQUIRED TO MAKE THE PROGRAM WORK ON SP.\n*  A FEW OFFSET CHANGES WHERE THE DATE AND TIME ARE SCANNED PLUS A\n*  CHANGE IN THE 'D T' MSG ID IEE104I ( WAS IEE102I IN SE/2) SCAN.\n*\n*  THIS VERSION SCANS THE ENTIRE SYSLOG TAPE INSTEAD OF READING\n*  UNTIL THE DESIRED DATE AND TIME IS LESS THAN THE TIME STAMP ON\n*  THE TAPE. THE TAPE CAN GET OUT OF SEQUENCE FOR VARIOUS REASONS\n*  SINCE THE EXTERNAL WRITER DOES NOT NECESSARILY WRITE THE LOGS\n*  TO TAPE IN THE SAME ORDER IN WHICH THEY WERE CREATED. (E.G., IPL)\n*\n*\n*  PRIOR TO THE INTEGRATION OF THIS PROGRAM INTO AN ISPF APPLICATION,\n*  (AND ISPF'S ACCOMPANYING INPUT VALIDATION CAPABILITIES) PARM VALIDITY\n*  CHECKING WAS DONE BY THIS PROGRAM (AS INDICATED BY THE VARIOUS CC'S\n*  BELOW).  ISPF NOW DOES THE PARM VALIDITY CHECKING IN THE PANELS BUT\n*  THIS CODE CONTINUES TO DO THE SAME CHECKING IN CASE SOME SOUL HAS AN\n*  OLD JCL DECK AROUND FROM THE PRE-ISPF DAYS.\n*\n*  PGM ABEND CODES            MESSAGE\n*           1        INVALID LENGTH PARM\n*           2        INVALID JULIAN DATE IN PARM\n*           3        INVALID STARTING HOUR IN PARM\n*           4        SEARCH ARGUMENT LONGER THAN 18 CHARS\n*           5        NUMBER OF HOURS TO PRINT EQUALS ZERO\n*\n*  NOTE THAT THE EFFECTIVE DATE RANGE OF A REPORT PRODUCED BY THIS PGM\n*  IS FOUR DAYS.  THIS IS BECAUSE THE ENDING DATE/TIME IS DERIVED BY\n*  ADDING THE 'NUMBER OF HOURS TO REPORT' TO THE 'BEGIN HOUR' VALUE.\n*  THESE TWO FIELDS ARE TWO BYTES EACH, HENCE A MAX '# HOURS' OF 99\n*  WOULD BE FOUR DAYS PLUS 3 HOURS (99/24).  THIS IMPOSED RANGE OF 4\n*  DAYS WORKS WELL IN OUR SHOP.   IT ALSO KEEPS THE USER OF THE SYSLOG\n*  APPLICATION HONEST BY PREVENTING THEM FROM PRODUCING LARGE REPORTS.\n*  AN ALTERNATIVE, SHOULD THIS 'RESTRICTION' PREVENT ONE FROM ACCESSING\n*  THE NEEDED SYSLOG DATA, IS TO RUN JOBSTREAM 'PRINTLOG' THEN USE\n*  SPF 3.8 OPTION 'O' TO STASH THE JOB AS AN ONLINE DATASET THEN USE\n*  SPF BROWSE TO FIND THE DESIRED DATA.\n*\n************************************************************************\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 2\nSYSLOGSP CSECT\n         STM   14,12,12(13)\n         BALR  9,0\n         USING *,9\n         ST    13,SAVEAREA+4\n         LA    12,SAVEAREA\n         ST    12,8(13)\n         LR    13,12\n         B     PROCPARM\n         DC    C'&SYSDATE'\nPROCPARM L     R1,0(R1)           LOAD ADDRESS OF PARM\n         LH    R2,0(R1)           LOAD LENGTH OF PARM\n         CH    R2,=H'5'           SEE IF AT LEAST 5 CHARS\n         BL    ERROR1             NO,ERROR\n         MVC   BEGDT,2(R1)        SAVE JULIAN DATE\n         PACK  WORK3,BEGDT        PACK BEGINNING DATE\n         CP    WORK3,=P'366'      SEE IF DATE GT 366\n         BH    ERROR2             YES,ERROR\n         MVC   BEGHR,5(R1)        SAVE BEGIN HOUR\n         PACK  WORK1,BEGHR        PACK BEGIN HOUR\n         CP    WORK1,=P'24'       SEE IF START HOUR GT 23\n         BNL   ERROR3             YES,ERROR\n         ZAP   WORK2,=P'2'        SET DEFAULT # HRS TO PRINT\n         CH    R2,=H'7'           SEE IF # HRS SPECIFIED\n         BL    DEFHRS             NO,BRANCH\n         PACK  WORK2,7(2,R1)      PACK # HRS\n         CP    WORK2,=P'0'        SEE IF # HRS SPECIFIED EQ 0\n         BE    ERROR5             YES, ERROR\nDEFHRS   SP    WORK2,=P'1'        SUBTRACT 1 FROM HOURS\n         AP    WORK1,WORK2        ADD BEGIN HRS TO # HRS\nDAYLOOP  CP    WORK1,=P'24'       HOURS GT 24\n         BL    DTEND              YES, GET OUT\n         SP    WORK1,=P'24'       SUBTRACT 24 HOURS\n         AP    WORK3,=P'1'        ADD 1 TO ENDING DATE\n         B     DAYLOOP            LOOP\nDTEND    CP    WORK3,=P'366'      SEE IF END DATE GT 366\n         BNH   GOODATE            NO, BRANCH\n         WTO   'ENDING DATE CANNOT CROSS YEAR BOUNDARY',ROUTCDE=11\n         WTO   'ENDING DATE ASSUMED DAY 366 HOUR 24',ROUTCDE=11\n         ZAP   WORK3,=P'366'      SET END DATE TO 366\n         ZAP   WORK1,=P'24'       SET END HOUR TO 24\nGOODATE  UNPK  ENDDT,WORK3        UNPACK ENDING DATE\n         OI    ENDDT+2,X'F0'      MAKE DATE PRINTABLE\n         UNPK  ENDHR,WORK1        UNPACK ENDING HOUR\n         OI    ENDHR+1,X'F0'      MAKE HOUR PRINTABLE\n         CH    R2,=H'7'           SEE IF SEARCH ARGUMENT PRESENT\n         BNH   STARTPR            NO, BRANCH\n         OI    SWITCH,SEARCH      TURN ON SEARCH ARG SWITCH\n         SH    R2,=H'8'           SUBTRACT 8 FOR MATCHING LENGTH OF ARG\n         CH    R2,=H'17'          SEE IF ARG  LENGTH GT 18\n         BH    ERROR4             YES, ERROR\n         EX    R2,MOVEARG         SAVE SEARCH ARGUMENT\n         STH   R2,ARGLEN          SAVE ARGUMENT MACHINE LENGTH\n         B     STARTPR            GO START PROCESSING\nMOVEARG  MVC   ARGUMENT(0),9(R1)        ***EXECUTE ONLY****\nSTARTPR  OPEN  (SYSUT1,,SYSUT2,(OUTPUT))\nREAD     GET   SYSUT1             READ SYSLOG\n         LA    R1,4(R1)           INCREMENT R1 BY 4 TO BYPASS RDW\n         CLC   25(7,R1),=C'IEE136I'  IS THIS A 'D T' DATE STAMP?\n         BE    DATE1              YES, GO PROCESS IT\n         CLC   25(7,R1),=C'IEE104I'  IS THIS A 'D A,L' DATE STAMP?\n         BE DATE2                 YES, GO PROCESS IT\n         TM    SWITCH,PRDATE      WAS OUR LAST DATE WITHIN RANGE ?\n         BNO   READ               NO, DROP THE RECORD\n         CLI   8(R1),C'.'         DOES THIS RECORD HAVE A TIME STAMP?\n         BE    CKTIME             YES, GO CHECK TIME\nCKLAST   TM    SWITCH,PRLAST      DID WE PRINT THE LAST LINE ?\n         BNO   READ               NO, DROP THE RECORD\n         B     WRITE              GO GET READY TO PRINT IT\nCKTIME   CLC   6(8,R1),=C'00.00.00'  SEE IF TIME = '00.00.00'\n         BE    CKLAST             YES, IGNORE TIME STAMP\n         CLC   6(2,R1),CURHR      SEE IF HOUR HAS CHANGED\n         BE    CKLAST             NO, GO SEE IF PREVIOUS WAS PRINTED\n         BH    INCREASE           INCREASED, NO DATE CHANGE ASSUMED\nDECREASE CLC   6(2,R1),=C'00'     SEE IF NEW HOUR COULD BE NEW DAY\n         BNE   INCREASE           PROBABLY NOT, ASSUME SAME DATE\n         MVC   CURHR,6(R1)        SAVE HOUR\n         PACK  WORK3,CURDT        PACK CURRENT DATE\n         AP    WORK3,=P'1'        ADD 1 TO CURRENT DATE FOR DAY CHANGE\n         UNPK  CURDT,WORK3        UNPACK NEW CURRENT DATE\n         OI    CURDT+2,X'F0'      MAKE NEW CURRENT DATE PRINTABLE\n         OI    SWITCH,PRDATE+PRLAST  TURN OFF\n         XI    SWITCH,PRDATE+PRLAST    DATE AND RECORD PROC INDICATORS\n         CLC   CURDT,BEGDT        SEE IF NEW DATE GT BEGIN DATE\n         BL    READ               NO,BYPASS UNTIL NEXT DATE RECORD\n         CLC   CURDT,ENDDT        SEE IF NEW DATE LT NEXT DATE RECORD\n         BH    READ               NO, BYPASS UNTIL NEXT DATE RECORD\n         OI    SWITCH,PRDATE      TURN ON DATE WITHIN RANGE INDICATOR\nINCREASE MVC   CURHR,6(R1)        SAVE HOUR\n         CLC   CURTIME,STARTIME   SEE IF NEW TIME GT START TIME\n         BL    NOPRINT            NO, SET TO NOT PRINT\n         CLC   CURTIME,ENDTIME    SEE IT NEW TIME LT ENDING TIME\n         BNH   WRITE              YES, GO GET READY TO PRINT IT\nNOPRINT  OI    SWITCH,PRLAST      RESET\n         XI    SWITCH,PRLAST      PROCESS PRINT INDICATOR\n         B     READ               GO READ NEXT RECORD\nDATE1    MVC   NEWDT,62(R1)       SAVE DATE\n         MVC   NEWHR,45(R1)       SAVE HOUR\n         B     PROCDATE           GO PROCESS NEW DATE\nDATE2    MVC   NEWDT,45(R1)       SAVE DATE\n         MVC   NEWHR,33(R1)       SAVE HOUR\nPROCDATE OI    SWITCH,PRDATE+PRLAST    TURN OFF THE\n         XI    SWITCH,PRDATE+PRLAST    DATE AND RECORD PROC INDICATORS\n         MVC   CURDT,NEWDT        SAVE DATE\n         MVC   CURHR,NEWHR        SAVE HOUR\n         CLC   CURTIME,LOWTIME    SEE IF NEW LOWEST TIME PROCESSED\n         BH    NEXTIME            NO, BRANCH\n         MVC   LOWTIME,CURTIME    MAKE CURRENT NEW LOW TIME\nNEXTIME  CLC   CURTIME,HIGHTIME   SEE IF NEW HIGHEST TIME PROCESSED\n         BL    CONTIME1           NO, BRANCH\n         MVC   HIGHTIME,CURTIME   MAKE CURRENT NEW HIGH TIME\nCONTIME1 CLC   CURDT,BEGDT        SEE IF NEW DATE GT BEGIN DATE\n         BL    READ               NO, BYPASS UNTIL NEXT DATE RECORD\n         CLC   CURDT,ENDDT        SEE IF NEW DATE LT END DATE\n         BH    READ               NO, BYPASS UNTIL NEXT DATE RECORD\n         OI    SWITCH,DTFOUND     TURN ON DATE FOUND INDICATOR\n         OI    SWITCH,PRDATE      TURN ON DATE WITHIN RANGE INDICATOR\n         CLC   CURTIME,STARTIME   SEE IF NEW TIME GT BEGIN TIME\n         BL    READ               NO, DROP THE RECORD\n         CLC   CURTIME,ENDTIME    SEE IF NEW TIME LT END TIME\n         BH    READ               NO, DROP THE RECORD\nWRITE    OI    SWITCH,PRDATE      TURN ON DATE WITHIN RANGE INDICATOR\n         OI    SWITCH,PRLAST      TURN ON RECORD PROCESSED INDICATOR\n         LR    R11,R1             SAVE INPUT RECORD ADDRESS\n         SH    R1,=H'4'           RESET R1 TO BEGINNING OF RECORD\n         TM    SWITCH,SEARCH      SEARCH ARGUMENT ?\n         BNO   PRINT              NO, GO PRINT IT\n         LH    R3,0(R1)           LOAD LRECL\n         LH    R4,ARGLEN          LOAD ARGUMENT LENGTH\n         SR    R3,R4              FIND # OF POSSIBLE STRINGS\nCOMPLOOP EX    R4,COMPARE         COMPARE FOR ARGUMENT\n         BE    PRINT              FOUND IT, NOW GO PRINT IT\n         LA    R11,1(R11)         INCREMENT COMPARE ADDRESS\n         BCT   R3,COMPLOOP        LOOP\n         B     READ               ARGUMENT NOT FOUND, DROP THE RECORD\nCOMPARE  CLC   ARGUMENT(0),0(R11)    ****EXECUTE ONLY ****\nPRINT    LR    R0,R1              SET RECD ADDRESS\n         PUT   SYSUT2             PRINT IT\n         AP    RECNT,=P'1'        ADD 1 TO RECORD COUNT\n         B     READ               GO GET NEXT RECORD\nEOF      MVC   WTO1+28(3),BEGDT   MOVE BEGIN DATE TO WTO\n         MVC   WTO1+37(2),BEGHR   MOVE BEGIN HOUR TO WTO\n         MVC   WTO1+53(3),ENDDT   MOVE ENDING DATE TO WTO\n         MVC   WTO1+62(2),ENDHR   MOVE ENDING HOUR TO WTO\n         WTO   ' ',ROUTCDE=11\n         WTO   'THE RANGE REQUESTED TO BE SEARCHED IS:',ROUTCDE=11\nWTO1     WTO   '       - BEGIN DATE=XXX TIME=XX  ENDING DATE=XXX TIME=XX\n               X',ROUTCDE=11\n         TM    SWITCH,SEARCH      WAS SEARCH ARGUMENT SPECIFIED ?\n         BNO   NOWTO2             NO, BYPASS WTO\n         MVC   WTO2+24(30),ARGUMENT   MOVE ARGUMENT STRING TO WTO\nWTO2     WTO   'SEARCH ARGUMENT=                               ',      X\n               ROUTCDE=11\nNOWTO2   MVC   WTO3+28(3),LOWDT   MOVE LOWEST DATE TO WTO\n         MVC   WTO3+37(2),LOWHR   MOVE LOWEST HOUR TO WTO\n         MVC   WTO3+53(3),HIGHDT  MOVE HIGHEST DATE TO WTO\n         MVC   WTO3+62(2),HIGHHR  MOVE HIGHEST HOUR TO WTO\n         WTO   ' ',ROUTCDE=11\n         WTO   'THE SYSLOG DATA RANGE THAT WAS SEARCHED IS:',ROUTCDE=11\nWTO3     WTO   '       - LOW   DATE=XXX TIME=XX  HIGH   DATE=XXX TIME=XX\n               X',ROUTCDE=11\n         TM    SWITCH,DTFOUND     SEE IF DATE MATCH FOUND\n         BO    EOF1               YES, BRANCH\nWTO4     WTO   'REQUESTED DATE NOT FOUND ON TAPE',ROUTCDE=11\n         OI    SWITCH,ERROR       TURN ON ERROR INDICATOR\nEOF1     CP    RECNT,=P'0'        SEE IF ANY RECORDS PRINTED\n         BNE   CLOSE              YES, BRANCH\nWTO5     WTO   'NO SYSLOG RECORDS PRINTED',ROUTCDE=11\n         OI    SWITCH,ERROR       TURN ON ERROR INDICATOR\nCLOSE    CLOSE (SYSUT1,,SYSUT2)   CLOSE FILES\n         LA    R15,0              SET RETURN CODE TO ZERO\n         TM    SWITCH,ERROR       SEE IF ERROR OCCURRED\n         BNO   REAR               NO, KEEP ZERO RETURN CODE\n         LA    R15,16             SET RETURN CODE TO 16\nREAR     L     13,SAVEAREA+4\n         LM    0,12,20(13)\n         L     14,12(13)\n         BR    14\n         EJECT\nERROR1   WTO   'PARM MUST START WITH 3 CHAR JULIAN DATE AND 2 CHAR STARX\n               TING HOUR',ROUTCDE=11\n         ABEND 1\nERROR2   WTO   'JULIAN DATE IN PARM GREATER THAN 366',ROUTCDE=11\n         ABEND 2\nERROR3   WTO   'STARTING HOUR IN PARM GREATER THAN 23',ROUTCDE=11\n         ABEND 3\nERROR4   WTO   'SEARCH ARGUMENT CANNOT EXCEED 18 CHARACTERS',ROUTCDE=11\n         ABEND 4\nERROR5   WTO   'NUMBER OF HOURS TO PRINT CANNOT BE ZERO',ROUTCDE=11\n         ABEND 5\n         EJECT\n         LTORG\nWORK1    DC    PL2'0'\nWORK2    DC    PL2'0'\nWORK3    DC    PL2'0'\nSTARTIME DS    0CL5\nBEGDT    DC    CL3'000'\nBEGHR    DC    CL2'00'\nENDTIME  DS    0CL5\nENDDT    DC    CL3'000'\nENDHR    DC    CL2'00'\nCURTIME  DS    0CL5\nCURDT    DC    CL3'000'\nCURHR    DC    CL2'00'\nNEWTIME  DS    0CL5\nNEWDT    DC    CL3'000'\nNEWHR    DC    CL2'00'\nLOWTIME  DS    0CL5\nLOWDT    DC    XL3'FFFFFF'\nLOWHR    DC    XL2'FFFF'\nHIGHTIME DS    0CL5\nHIGHDT   DC    XL3'000000'\nHIGHHR   DC    XL2'0000'\nSWITCH   DC    XL1'00'\nPRDATE   EQU   1\nPRLAST   EQU   2\nDTFOUND  EQU   4\nERROR    EQU   8\nSEARCH   EQU   16\nRECNT    DC    PL6'0'\nARGLEN   DC    H'0'\nARGUMENT DC    CL30' '\nSAVEAREA DC    18F'0'\nSYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=EOF,              X\n               BLKSIZE=32760,LRECL=133,RECFM=VBA\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,BLKSIZE=137,RECFM=VBA,  X\n               LRECL=133\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOGSCH": {"ttr": 1043, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%TUTORIAL ---------------  SEARCH CURRENT SYSLOG   ---------------------TUTORIAL\n+\n+ Primary option 'SC' provides access to the current week's SYSLOG.  This\n+ offers a convenient means of viewing this data online.  User supplied\n+ parameters allow reports to be generated.   The SYSLOG can be searched\n+ for a given literal or a date/time range can be reported.\n+\n+ For additional information, select from an%OPTION+below or press%ENTER+\n+ to view the tutorial for all SEARCH CURRENT options.\n+\n+\n%OPTION  ===>_ZCMD                    +\n%\n%   1 +-Browse SYSLOG\n%   2 +-Generate a report (TIME range or LITERAL scan)\n%   3 +-Determine DATE and TIME range of SYSLOG data\n+\n+\n+\n+\n+ Press%PF3+to return\n+\n)PROC\n  &ZSEL = TRANS(&ZCMD\n              1,LOGSCH1\n              2,LOGSCH2\n              3,LOGSCH3\n                *,'?' )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGSCH1": {"ttr": 1045, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%TUTORIAL -------------    BROWSE SYSLOG      --------------------------TUTORIAL\n+\n% COMMAND===>_ZCMD                                         +\n+\n+\n+ Browsing the current week's SYSLOG provides the user with the capabilities\n+ of standard ISPF BROWSE.  Literals can be searched for via 'FIND'\n+ commands or the user has the option of simply scrolling through the\n+ SYSLOG.  An ISPF tutorial offers additional assistance regarding general\n+ BROWSE capabilities (use Option 'T' on the ISPF Primary Menu). SYSLOG\n+ primary option 'DD' describes the daily SYSLOG dumping process.\n+\n% NOTE:+EXIT promptly from BROWSE of the SYSLOG when finished as the automated\n+       dump procedure requires access to this data on an hourly basis.\n+       Returning to the SEARCH CURRENT menu is sufficient to free the dataset.\n+\n% NOTE:+Message 'Dataset in use by another JOB, try again later' will be issued\n+       in the event that your request to browse the syslog coincides with\n+       the automated hourly syslog dump JOB.  When this occurs, wait five\n+       minutes then try again.\n+\n+ Press%ENTER+to continue\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGSCH2": {"ttr": 1282, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%TUTORIAL ---------- GENERATE SYSLOG SEARCH REPORT ------------------ TUTORIAL\n%\n% COMMAND===>_ZCMD                                       +\n+\n+ Using this option, a batch JOB will be submitted that will search the\n+ SYSLOG from the current week.  After notification of JOB completion, view\n+ the output via the ISPF OUTLIST utility (ISPF UTILITIES - 3.8).  After\n+ viewing, this output may then be either printed or deleted using 3.8.\n+ User supplied parameters to the SEARCH CURRENT option are described below.\n+\n%Select the desired date and time range:\n%\n%   BEGIN DATE (Julian)  ===>+3 digit value from 001-365\n%   BEGIN HOUR (00-24 )  ===>+Start time of search\n%   # HOURS TO REPORT    ===>+Specify the number of hours to be reported\n+                            %following+the BEGIN HOUR.  Value can be from 1\n+                             to 99 (max search range = 4 days (99/24=4)\n+                             This value is%NOT+a time-of-day hour.\n+\n+\n%Optionally, enter the desired search literal ===>\n+\n+  The search literal cannot exceed 18 characters and must not contain\n+  blanks. Omitting the literal results in the reporting of the entire Date\n+  and TIME range.  Multiple literals cannot be supplied.\n+\n+\n+Press%PF3  +to return\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGSCH3": {"ttr": 1284, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%TUTORIAL --------  DETERMINE DATE/TIME RANGE OF SYSLOG  ---------------TUTORIAL\n%\n% COMMAND===>_ZCMD                               +\n%\n+ This option will scan the SYSLOG and produce a report to the screen that\n+ will provide the date/time range that is encompassed for the current week.\n+ The information provided by this report is also provided in the various\n+ other SYSLOG SEARCH reports.  This option is provided solely as a quick\n+ method of determining the range of the current week's SYSLOG without\n+ having to generate an actual search jobstream.\n+\n+\n% Note:+ If the SYSLOG data being searched contains only one day's data, the\n+        LOW Date/Time will equal the HIGH Date/Time.  This false report\n+        condition can be ignored.  It is the exception, not the rule.\n+\n+\n+\n+\n+Press%ENTER+to continue\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGSC2": {"ttr": 1286, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%------------------  GENERATE SYSLOG SEARCH REPORT   ------------------\n%\n%COMMAND ===>_ZCMD                                          +USERID   - &ZUSER\n%                                                           +TIME     - &ZTIME\n%\n+Construct a SEARCH argument below then press%ENTER+to submit\n+\n+\n+  Select the desired date and time range:\n+\n%     BEGIN DATE (Julian) + ===>_LOGBDAT\n%     BEGIN HOUR (00-24 ) + ===>_LOGBHR\n%     # HOURS TO REPORT   + ===>_LOGENDHR\n+\n%  Optionally,+ enter a search literal ===>_LOGLIT            +\n+\n+Use SPF Option 3.8 to view the output produced by this function\n+\n+\n+Press%PF1+for assistance (or enter  HELP  command)\n+\n+Press%PF3+to abort this function\n)INIT\n  .HELP = LOGSCH2\n  &ZCMD = ' '\n  &LOGLIT = ' '\n  &LOGBDAT = ' '\n  &LOGBHR = ' '\n  &LOGENDHR = ' '\n)PROC\n  VER (&LOGBDAT NONBLANK MSG=LOGV012)\n  VER (&LOGBDAT PICT,'NNN',MSG=LOGV012)\n  VER (&LOGBHR NONBLANK MSG=LOGV010)\n  VER (&LOGBHR PICT,'NN',MSG=LOGV010)\n  VER (&LOGENDHR NONBLANK MSG=LOGV011)\n  VER (&LOGENDHR PICT,'NN',MSG=LOGV011)\n  IF (&LOGLIT \u00ac= ' ')\n   VPUT (LOGLIT) SHARED\n  VPUT (LOGBDAT LOGBHR LOGENDHR) SHARED\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOGV01": {"ttr": 1288, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "LOGV010  .HELP=* .ALARM=YES\n'BEGIN HOUR must be two digit numeric value from 00-24...re-enter'\nLOGV011  .HELP=* .ALARM=YES\n'END HOUR must be two digit numeric value from 01-99...re-enter'\nLOGV012  .HELP=* .ALARM=YES\n'BEGIN DATE must be 3 digit numeric value from 001-365...re-enter'\nLOGV013  .HELP=* .ALARM=YES\n'QUARTER must be 1 digit numeric value from 1-4...re-enter'\nLOGV014  .HELP=* .ALARM=YES\n'YEAR must be 2 digit numeric value  (e.g., 89 = 1989)'\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OPTEJCL": {"ttr": 1290, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,10),OPTIONE,MSGCLASS=Q,NOTIFY=D061001\n//*\n//*  REFER: D061001.SYSLOG(OPTEJCL)\n//*  DOC  : BATCH JOBSTREAM FOR THE SYSLOG EXCEPTION EVENT REPORTER\n//*         PROGRAM. THIS DECK IS SUBMITTED WHEN OPTION 'E' SUB-OPTION\n//*         'C' IS SELECTED. SEE OPTION E'S TUTORIAL FOR DETAILS.\n//*\n//*  THIS JOBSTREAM WILL:\n//*  1. DETERMINE THE  RANGE OF SYSLOG BEING REPORTED\n//*  2. SCAN THE ONLINE SYSLOG FOR SPECIFIC EXCEPTION EVENTS\n//*  3. SORT THE REPORT CREATED IN STEP 2 BY EVENT ID THEN DATE\n//*  4. PREPARE REPORT FOR PRINTING (INSERT PAGE BREAK ASA CHARS)\n//*\n//RANGE    EXEC PGM=RANGE,REGION=300K,TIME=2\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSUT1 DD DSN=D061001.SYSLOGD,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT2 DD SYSOUT=*\n//SYSUDUMP  DD SYSOUT=*\n//*\n//OPTIONE  EXEC PGM=OPTIONE,REGION=300K,TIME=2\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSUT1 DD DSN=D061001.SYSLOGD,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT2 DD DISP=(,PASS),DSN=&&SYSLOG,\n//       SPACE=(TRK,(30,5)),UNIT=SYSDA,VOL=SER=PRGPRD\n//SYSUDUMP  DD SYSOUT=*\n//*\n//SORT EXEC PGM=SORT,REGION=1000K,COND=(0,NE,OPTIONE)\n//SORTLIB DD DISP=SHR,DSN=SYS1.SORTLIB\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTIN DD UNIT=SYSDA,DSN=&&SYSLOG,DISP=(OLD,DELETE)\n//SORTOUT DD DCB=(RECFM=FA,BLKSIZE=133),UNIT=SYSDA,DSN=&&SORTOUT,\n//        SPACE=(TRK,(30,5)),DISP=(,PASS),VOL=SER=PRGPRD\n//SYSOUT  DD SYSOUT=*\n//SYSIN   DD *\n SORT FIELDS=(1,5,CH,A,7,3,CH,A,11,8,CH,A)\n//*\n//* NEXT STEP PREPARES REPORT FOR PRINTING (PAGE BREAK INSERTION)\n//POSTPROC EXEC PGM=POSTPROC,REGION=300K,TIME=1,COND=(0,NE,SORT)\n//STEPLIB  DD   DISP=SHR,DSN=D061001.LOAD\n//SYSUT1   DD   DSN=&&SORTOUT,UNIT=SYSDA,DISP=(OLD,DELETE),\n//         VOL=SER=PRGPRD\n//SYSUT2   DD   SYSOUT=*,DCB=(RECFM=FA,BLKSIZE=133)\n//SYSPRINT DD   SYSOUT=*\n//SYSUDUMP DD   SYSOUT=*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPTIONE": {"ttr": 1292, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,10),ASMBLE,MSGCLASS=Q,NOTIFY=D061001\n//*\n//* REF: D061001.SYSLOG(OPTIONE)\n//* DOC: ASM/LINK SPF SYSLOG APPLICATION'S EXCEPTION EVENT REPORTER\n//*\n//ASSEMBLE EXEC PGM=IFOX00,PARM='OBJ,TERM'\n//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1700,(600,100))\n//SYSUT2   DD DSN=&&SYSUT2,UNIT=SYSDA,SPACE=(1700,(300,50))\n//SYSUT3   DD DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(1700,(300,50))\n//SYSTERM  DD SYSOUT=*\n//SYSPUNCH DD DUMMY\n//SYSGO    DD DSN=&&OBJSET,UNIT=SYSDA,SPACE=(80,(200,50)),\n//             DISP=(MOD,PASS)\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n*\n*   REFER: D061001.SYSLOG(OPTIONE) - THIS SOURCE IS NAMED 'OPTIONE'\n*          SIMPLY BECAUSE THE ISPF SYSLOG APPLICATION MENU OPTION TO\n*          INVOKE THE EXCEPTION PROGRAM IS 'OPTION E'.\n*\n*    - THIS PROGRAM IS INVOKED VIA THE\n*      SPF SYSLOG UTILITY PRIMARY OPTION 'E'.     OPTION 'E' SUBMITS\n*      AN EXCEPTION REPORT WHICH SCANS THE SYSLOG FOR SPECIFIC LITERALS\n*      (I.E., EVENTS).       FOR EACH 'HIT' THAT IS FOUND, A 5 DIGIT\n*      IDENTIFIER IS WRITTEN AT THE BEGINNING OF THE RECORD. A 3 DIGIT\n*      JULIAN DATE FOLLOWS THEN THE ACTUAL SYSLOG RECORD TEXT COMPLETES\n*      THE RECORD.  ONCE THE SYSLOG IS SCANNED FOR VARIOUS EVENTS,\n*      THE EXTRACTED RECORDS ARE SORTED IN EVENT-ID, DATE, AND TIME\n*      ORDER. THE ISPF SYSLOG APPLICATION PROVIDES FOR THIS PROGRAM TO\n*      BE RUN AGAINST THE SYSLOG AT ANY TIME (OPTION 'E'). IN ADDITION,\n*      THIS SAME FUNCTION IS BUILT INTO THE WEEKLY SYSLOG DUMP JOB-\n*      STREAM (OPTION 'DW') SO AS TO ASSURE AUTOMATED WEEKLY EXECUTION.\n*\n*    - REPORT IDENTIFIERS ARE GROUPED BY APPLICATION AS FOLLOWS:\n*\n*      MVS - VARIOUS\n*      JES - LINE PROBLEMS, ETC.\n*      NET - MAJNODE ACT,LINE PROBLEMS, ETC.\n*      TSO - LOGON FAILURES,ETC.\n*      RAC - RACF ACTIVITY\n*      SAS - ISPF SAS INVOCATIONS\n*      VPS - JOBS PRINTED VIA VPS\n*      CAD - BUFFER SHORTAGES\n*      LOG - SYSLOG APPLICATION INVOCATIONS\n*      SMF - MAN FILE STATUS\n*      ARC - STATIC TEST DATA ARCHIVAL SYSTEM\n*      PCC - PCCOM - HOST/PC FILE TRANSFERS\n*      GUN - PE 'GUN' CODE INVOCATIONS\n*    PEPGM - PE PROGRAM INVOCATIONS  (NON-GUN)\n*      MCG - ABL-TO-MCGREGOR FILE TRANSFERS\n*     UTIL - ABL-INSTALLED UTILITIES (NON-IBM)\n*      X37 - DASD WOES\n*\n*    - SEVERAL OF THE APPLICATIONS MENTIONED ABOVE INCLUDE COMMANDS TO\n*      ISSUE CONSOLE MESSAGES (EITHER CLIST 'SEND' OR PGM 'WTO') SO\n*      THAT THE EXCEPTION PROCESSOR PROGRAM CAN READILY REPORT VARIOUS\n*      EVENTS.  TO IDENTIFY SYSLOG RECORDS PRODUCED BY AN ABL-SPECIFIC\n*      APPLICATION, THE CHARACTER '#ABL...' PRECEEDS THE TEXT OF EACH\n*      RECORD. E.G., THE SYSLOG RECORD '#ABLLOG ... TEXT ...' INDICATES\n*      A RECORD CREATED AS A RESULT OF A USER INVOKING ONE OF THE VARI-\n*      OUS SYSLOG APPLICATION FUNCTIONS.\n*\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 2\nOPTIONE  CSECT\n         STM   14,12,12(13)\n         BALR  9,0\n         USING *,9\n         ST    13,SAVEAREA+4\n         LA    12,SAVEAREA\n         ST    12,8(13)\n         LR    13,12\nSTARTPR  OPEN  (SYSUT1,,SYSUT2,(OUTPUT))\n*\n* REMEMBER TO ADD TO DISPLACE COMPARE'S BY 4 AS RECORDS HAVE RDW'S\n* SEE JES2 OPERATOR COMMANDS MANUAL FOR SYSLOG RECORD DESCRIPTION\n*\nREAD     MVI   RECORD,X'40'      CLEAR RECORD OF RECFM=VB POLLUTION\n         MVC   RECORD+1(132),RECORD\n         GET   SYSUT1,RECORD\n         CLC   29(7,R1),=C'IEE136I'  IS THIS A 'D T' DATE STAMP?\n*              ADD A JES2 AUTOMATIC COMMAND TO 'D T' ON YOUR SYSTEM\n         BNE   JCLERROR           NO, CONTINUE TESTING\n         MVC   DATE,66(R1)       YES, SAVE THE 'CURRENT' DATE\n         B     READ\nJCLERROR CLC   29(7,R1),=C'IEF452I'  IS THIS A JCL ERROR?\n         BNE   LOG01\n         MVC   PRTLINE(5),=C'MVS01'   ASSIGN UNIQUE SORT ID\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE+10(123),RECORD+10 BYPASS RDW + SYSLOG RECORD #'S\n         PUT   SYSUT2,PRTLINE\n         B     READ\nLOG01    CLC   30(7,R1),=C'#ABLLOG'  IS THIS A SYSLOG VIA SPF RECORD?\n         BNE   VPS01\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'LOG01'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nVPS01    CLC   29(10,R1),=C'VPS VPS205'   VPS 'JOB PRINTED' RECORD?\n         BNE   X37\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'VPS01'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nX37      CLC   38(4,R1),=C'37-0'      SPACE ABEND?\n         BNE   IPL\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'X37  '   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nIPL      CLC   42(7,R1),=C'IEA101A'    IPL RECORD?\n         BNE   MOREIPL\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'MVS77'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nMOREIPL  CLC   29(3,R1),=C'IFB'   IPL RECORD ?\n         BNE   SRM\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'MVS79'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nSRM      CLC   29(3,R1),=C'IRA'   SRM-RELATED ?\n         BNE   JOBABEND\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'MVS81'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nJOBABEND CLC   29(7,R1),=C'IEF450I'   JOB ABEND?\n         BNE   MASTCAT\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'MVS05'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nMASTCAT  CLC   32(7,R1),=C'IEC301A'   MASTERCAT VIOLATION ?\n         BNE   NETABEND\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'MVS07'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nNETABEND CLC   29(7,R1),=C'IST464I'   NCP CONTACT?\n         BNE   SETINITS\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'NET01'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nSETINITS CLC   29(3,R1),=C'$TI'      INITIATOR CHANGED?\n         BNE   BADMEMBR\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'JES04'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nBADMEMBR CLC   37(6,R1),=C'013-18'   WRONG MEMBER NAME SPECIFIED?\n         BNE   SMFINFO\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'MVS18'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nSMFINFO  CLC   29(5,R1),=C'IEE36'   GENERIC SMF RECORD?\n         BNE   SMFINFO2\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'SMF01'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nSMFINFO2 CLC   20(8,R1),=C'SYS1.MAN'   MAN INFO RECORD ?\n         BNE   ARC\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'SMF03'   ASSIGN SAME ID AS SMFINFO\n         PUT   SYSUT2,PRTLINE\n         B     READ\nARC      CLC   30(7,R1),=C'#ABLARC'   ARCHIVAL SYSTEM RECORD ?\n         BNE   TSOLOGON\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'ARC00'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nTSOLOGON CLC   29(5,R1),=C'IKJ60'  GENERIC LOGON FAILURE MSGID.\n         BNE   BADCMD\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'TSO00'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nBADCMD   CLC   29(7,R1),=C'IEE305I'  BAD OPER COMMAND\n         BNE   VTOCFULL\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'MVS30'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nVTOCFULL CLC   29(6,R1),=C'IEF254'  VTOC FULL ?\n         BNE   DEVCAN\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'MVS36'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nDEVCAN   CLC   29(6,R1),=C'IEF489'  DOES JOB NEED DEVICE?\n         BNE   PCCOM\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'MVS38'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nPCCOM    CLC   30(7,R1),=C'#ABLPCC'  WAS PCCOM INVOKED?\n         BNE   ABLVMCF\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'PCC01'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nABLVMCF  CLC   30(7,R1),=C'#ABLVMCF' WAS VPS/VMCF INVOKED?\n         BNE   ABLSAS\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'VPS10'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nABLSAS   CLC   30(7,R1),=C'#ABLSAS' WAS SAS (ISPSASEX) INVOKED IN SPF?\n         BNE   SASVTEC\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'SAS50'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nSASVTEC  CLC   30(7,R1),=C'IEV080I' WAS VERSATEC PLOTTING INVOKED?\n         BNE   CADBUFF\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'VTEC0'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nCADBUFF  CLC   29(7,R1),=C'IFF512I' DID CAD TUBE SESSION EXCEED BUFFER\n         BNE   CADPLOT\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'CAD00'\n         PUT   SYSUT2,PRTLINE\n         B     READ\nCADPLOT  CLC   30(7,R1),=C'#ABLCAD'  CAD PLOTTER OPERATOR DIALOG USED?\n         BNE   GUN\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'CAD02'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nGUN      CLC   30(7,R1),=C'#ABLGUN'  WAS 'GUN' CODE INVOKED IN SPF?\n         BNE   PEPGMS\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'PGM01'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nPEPGMS   CLC   30(7,R1),=C'#ABLPEPGM'  WERE PE PROGRAMS INVOKED?\n         BNE   ABLUTILS\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'PGM03'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nABLUTILS CLC   30(7,R1),=C'#ABLUTIL'  WERE ANY ABL UTILITIES INVOKED?\n         BNE   SASCBT\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'UTL01'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nSASCBT   CLC   30(7,R1),=C'#SASCBT'      WAS SAS CBT INVOKED?\n         BNE   ABLTOMCG\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'SAS61'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nABLTOMCG CLC   30(7,R1),=C'#ABLTOMCG' TRANSFER DATA TO MCGREGOR ?\n         BNE   RACFSPF\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'MCG00'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nRACFSPF  CLC   30(7,R1),=C'#ABLRACF' RACF DIALOG ACCESS\n         BNE   RACFTSO\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'RAC00'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nRACFTSO  CLC   33(8,R1),=C'ICH70004' RACF TSO VIOLATION NOTIFICATION?\n         BNE   READ\n         MVC   PRTLINE+10(123),RECORD+10\n         MVC   PRTLINE+6(3),DATE      MOVE CURRENT JULIAN DATE INTO REC\n         MVC   PRTLINE(5),=C'RAC02'   ASSIGN UNIQUE SORT ID\n         PUT   SYSUT2,PRTLINE\n         B     READ\nEOF      CLOSE (SYSUT1,,SYSUT2)\n         L     13,SAVEAREA+4\n         LM    0,12,20(13)\n         L     14,12(13)\n         BR    14\n         EJECT\n         LTORG\nRECORD   DS    CL133' '\nPRTLINE  DS    CL133' '\nDATE     DC    CL3'000'\nSAVEAREA DC    18F'0'\nSYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=EOF,              X\n               BLKSIZE=32760,LRECL=133,RECFM=VBA,EROPT=SKP\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,BLKSIZE=133,RECFM=FB,   X\n               LRECL=133\n         END\n/*\n//LINKEDT EXEC PGM=IEWL,COND=(4,LT),\n//         PARM='LIST,XREF,LET',REGION=650K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(1700,(400,50))\n//SYSLMOD  DD  DISP=SHR,DSN=D061001.LOAD\n//OBJSET   DD  DSN=&&OBJSET,DISP=(OLD,DELETE,DELETE)\n//SYSLIN   DD  *\n INCLUDE OBJSET\n NAME OPTIONE(R)\n//*   END OF JOSTREAM OPTIONE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POSTPROC": {"ttr": 1537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,10),POSTPROC,MSGCLASS=Q,NOTIFY=D061001\n//*\n//* REF: D061001.SYSLOG(POSTPROC)\n//* DOC: SYSLOG EXCEPTION REPORT POST-PROCESSOR PROGRAM\n//*      THIS JOB ASSEMBLES,LINKS, AND TESTS THE PROGRAM \"POSTPROC\".\n//*      SEE SOURCE CODE COMMENTS BELOW FOR ADDT'L INFO.\n//*\n//ASSEMBLE EXEC PGM=IFOX00,PARM='OBJ,TERM'\n//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1700,(600,100))\n//SYSUT2   DD DSN=&&SYSUT2,UNIT=SYSDA,SPACE=(1700,(300,50))\n//SYSUT3   DD DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(1700,(300,50))\n//SYSTERM  DD SYSOUT=*\n//SYSPUNCH DD DUMMY\n//SYSGO    DD DSN=&&OBJSET,UNIT=SYSDA,SPACE=(80,(200,50)),\n//             DISP=(MOD,PASS)\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n*\n*   THIS PROGRAM PROCESSES THE OUTPUT FROM PROGRAM 'OPTIONE' FOR\n*   THE SOLE PURPOSE OF CREATING A PAGE BREAK AT EACH CHANGE OF\n*   THE SYSLOG IDENTIFIER (SYSLOG RECORD COLUMNS 1 THRU 5).\n*   SEE SOURCE CODE 'OPTIONE' COMMENTS FOR ADDT'L INFO.\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 2\nPOSTPROC CSECT\n         STM   14,12,12(13)\n         BALR  9,0\n         USING *,9\n         ST    13,SAVEAREA+4\n         LA    12,SAVEAREA\n         ST    12,8(13)\n         LR    13,12\nSTARTPR  OPEN  (SYSUT1,,SYSUT2,(OUTPUT))\nREAD     MVI   RECORD,X'40'\n         MVC   RECORD+1(132),RECORD\n         GET   SYSUT1,RECORD\n         CLC   RECORD(5),CURRENT   DO WE HAVE A NEW SORT RECORD ID?\n         BE    SAMEID              NO. GO PRINT IT (WITHOUT ASA)\n         MVC   CURRENT(5),RECORD   SAVE NEW CURRENT SORTID\n         MVC   PRTLINE+1(132),RECORD\n         MVC   PRTLINE(1),=C'1'    MOVE ASA PAGE BREAK INTO PRINT LINE\n         PUT   SYSUT2,PRTLINE      PRINT RECORD\n         MVI   PRTLINE,X'40'\n         MVC   PRTLINE+1(132),PRTLINE\n         B     READ\nSAMEID   MVC   PRTLINE+1(132),RECORD\n         PUT   SYSUT2,PRTLINE   PRINT RECORD\n         MVI   PRTLINE,X'40'\n         MVC   PRTLINE+1(132),PRTLINE   CLEAR PRINT LINE\n         B     READ\nEOF      CLOSE (SYSUT1,,SYSUT2)\n         L     13,SAVEAREA+4\n         LM    0,12,20(13)\n         L     14,12(13)\n         BR    14\n         EJECT\n         LTORG\nRECORD   DS    CL133' '\nPRTLINE  DS    CL133' '\nCURRENT  DS    CL5' '\nSAVEAREA DC    18F'0'\nSYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=EOF,              X\n               BLKSIZE=133,LRECL=133,RECFM=F\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,BLKSIZE=133,RECFM=FA,   X\n               LRECL=133\n         END\n/*\n//LINKEDT EXEC PGM=IEWL,COND=(4,LT),\n//         PARM='LIST,XREF,LET',REGION=650K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(1700,(400,50))\n//SYSLMOD  DD  DISP=SHR,DSN=D061001.LOAD\n//OBJSET   DD  DSN=&&OBJSET,DISP=(OLD,DELETE,DELETE)\n//SYSLIN   DD  *\n INCLUDE OBJSET\n NAME POSTPROC(R)\n//*\n//OPTIONE  EXEC PGM=OPTIONE,REGION=300K,TIME=2\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSUT1 DD DSN=D061001.SYSLOGD,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT2 DD DISP=(,PASS),DSN=&&SYSLOG,SPACE=(CYL,(1,1),RLSE),UNIT=SYSDA\n//SYSUDUMP  DD SYSOUT=*\n//*\n//SORT EXEC PGM=SORT,REGION=1000K,COND=(0,NE,OPTIONE)\n//SORTLIB DD DISP=SHR,DSN=SYS1.SORTLIB\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTIN DD UNIT=SYSDA,DSN=&&SYSLOG,DISP=(OLD,DELETE)\n//SORTOUT DD UNIT=SYSDA,DSN=&&SORTOUT,SPACE=(TRK,(30,10)),DISP=(,PASS),\n// DCB=(RECFM=F,BLKSIZE=133)\n//SYSOUT  DD SYSOUT=*\n//SYSIN   DD *\n SORT FIELDS=(1,5,CH,A,7,3,CH,A,8,11,CH,A)\n/*\n//POSTPROC EXEC PGM=POSTPROC,REGION=300K,TIME=2,COND=(0,NE,SORT)\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSUT1 DD DSN=&&SORTOUT,UNIT=SYSDA,DISP=(OLD,DELETE)\n//SYSUT2 DD SYSOUT=*,DCB=(RECFM=FA,BLKSIZE=133)\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP  DD SYSOUT=*\n//* END OF D061001.SYSLOG(POSTPROC) JOBSTREAM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PRINTLOG": {"ttr": 1540, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,10,99),SYSLOG,MSGCLASS=A,NOTIFY=D061001\n/*JOBPARM K=99\n//*\n//*  REFER: D061001.SYSLOG(PRINTLOG)\n//*\n//*  USE THIS JCL TO \"WHOLESALE\" PRINT THE ENTIRE SYSLOG TAPE, FORWARD\n//*  SPACING THE PRINTER TO THE DESIRED RANGE. THE ISPF SYSLOG APPLICA-\n//*  TIONS' 'SEARCH CURRENT' & 'SEARCH ARCHIVES' OPTIONS PROVIDE THE\n//*  ABILITY TO REPORT A FOUR DAY WINDOW, AS THIS TIME FRAME WORKS FOR\n//*  99% OF THE NEEDS AT OUR SHOP.  HOWEVER, OCCASIONALLY A LARGER\n//*  WINDOW IS NEEDED.  THIS DECK SUFFICES FOR THOSE OCCASIONAL EXCEPT-\n//*  IONS.\n//*\n//PRINTLOG EXEC  PGM=IEBGENER\n//SYSUDUMP DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DISP=SHR,\n//         DSN=D061001.LOG487\n//SYSUT2   DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PROC": {"ttr": 1542, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,10,99),SYSLOGD,MSGCLASS=Q,NOTIFY=D061001\n//*\n//*  REFER: D061001.SYSLOG(PROC)  FOR DOCUMENTATION PURPOSES ONLY\n//*                               (REF: SYS1.PROCLIB(SYSLOGD)\n//SYSLOGD PROC\n//*\n//*  REFER: SYS1.PROCLIB(SYSLOGD)   THIS JOBSTREAM IS STARTED VIA THE\n//*         MASTER CONSOLE COMMAND: \" S SYSLOGD.LOG \" EITHER:\n//*         1. MANUALLY BY THE OPERATOR AFTER EACH TIME THE SYSLOG\n//*            BUFFER FILLS AUTOMATICALLY\n//*         2. MANUALLY BY THE OPERATOR AFTER EACH TIME A SYSLOG DUMP IS\n//*            FORCED VIA THE 'W T' COMMAND\n//*         3. AUTOMATICALLY ON AN HOURLY BASIS DUE TO THE SERIES OF\n//*            JES2 COMMANDS (SEE MEMBER 'LOGCMDS')\n//*\n//*  NOTE: JESPARMS MUST REFLECT THE CHOSEN SYSLOG OUTPUT CLASS (E.G. T)\n//*\n//SYSLOGD EXEC PGM=IASXWR00,PARM='PT'\n//IEFRDER DD   DISP=(MOD,KEEP),DSN=D061001.SYSLOGD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RANGE": {"ttr": 1544, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//D061001X JOB (00000000,06009,10),RANGE,MSGCLASS=Q,NOTIFY=D061001\n//*\n//* REFER: D061001.SYSLOG(RANGE)\n//* DOC  : COMPILE,LINK, AND TEST THE SYSLOG RANGE DETERMINATION PGM\n//*\n//ASSEMBLE EXEC PGM=IFOX00,PARM='OBJ,TERM'\n//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1700,(600,100))\n//SYSUT2   DD DSN=&&SYSUT2,UNIT=SYSDA,SPACE=(1700,(300,50))\n//SYSUT3   DD DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(1700,(300,50))\n//SYSTERM  DD SYSOUT=*\n//SYSPUNCH DD DUMMY\n//SYSGO    DD DSN=&&OBJSET,UNIT=SYSDA,SPACE=(80,(200,50)),\n//             DISP=(MOD,PASS)\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n*\n*   REFER: D061001.SYSLOG(RANGE)\n*\n*    - THIS SUBSET PROGRAM WAS CREATED FOR THE SPECIFIC PURPOSE\n*      OF SCANNING A GIVEN SYSLOG TO DETERMINE THE DATE/TIME\n*      RANGE ENCOMPASSED.  IT IS USED IN THE ISPF SYSLOG APPLICATION\n*      AS OPTION 3 UNDER THE 'SEARCH CURRENT' MENU. SEE ISPF TUTORIAL.\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 2\nRANGE    CSECT\n         STM   14,12,12(13)\n         BALR  9,0\n         USING *,9\n         ST    13,SAVEAREA+4\n         LA    12,SAVEAREA\n         ST    12,8(13)\n         LR    13,12\n         OPEN  (SYSUT1,,SYSUT2,(OUTPUT))\n* FOLLOWING (UP TO 'READ' LABEL) IS  ONE-TIME CODE\nGETFIRST GET   SYSUT1\n         LA    R1,4(R1)\n         CLC   25(7,R1),=C'IEE136I'  IS THIS A 'D T' DATE STAMP?\n         BNE   GETFIRST\n         MVC   LOWDATE,62(R1)\n         MVC   LOWHOUR,45(R1)\n         MVC   HIDATE,62(R1)\n         MVC   HIHOUR,45(R1)\n         B     DATECHEK\nREAD     GET   SYSUT1             READ SYSLOG\n         LA    R1,4(R1)           INCREMENT R1 BY 4 TO BYPASS RDW\n         CLC   25(7,R1),=C'IEE136I'  IS THIS A 'D T' DATE STAMP?\n         BNE   READ\nDATECHEK CLC   62(3,R1),LOWDATE   THIS DATE LOWER THAN LOWEST SO FAR?\n         BL    NEWLOW             YES.  WE HAVE A NEW LOW FOLKS\n         BE    LOHRCHEK\n         CLC   62(3,R1),HIDATE    NO. LET'S SEE IF WE HAVE A NEW HIGH\n         BL    READ               NOPE.  KEEP READING.\n         BE    HIHRCHEK           SAME DAY. SEE IF HOUR IS HIGHER\n         MVC   HIDATE,62(R1)      WE HAVE A NEW HIGH DATE\n         MVC   HIHOUR,45(R1)      ALSO SAVE NEW HIGH DATE'S HOUR\nHIHRCHEK CLC   45(2,R1),HIHOUR    DO WE HAVE A NEW HIGH HOUR ALSO?\n         BNH   READ               NOPE.  GO READ SOME MORE\n         MVC   HIHOUR,45(R1)      MOVE NEW HIGH HOUR INTO IT'S NICHE.\n         B     READ\nNEWLOW   MVC   LOWDATE,62(R1)     SAVE NEW LOW DATE\n         MVC   LOWHOUR,45(R1)     ALSO SAVE NEW LOW DATE'S HOUR\nLOHRCHEK CLC   45(2,R1),LOWHOUR   DO WE HAVE A NEW LOW HOUR ?\n         BNL   READ               NOPE.\n         MVC   LOWHOUR,45(R1)     YES, HAUL IT ON IN HERE BELINDA.\n         B     READ\nEOF      MVC   WTO3+28(3),LOWDATE   MOVE LOWEST DATE TO WTO\n         MVC   WTO3+37(2),LOWHOUR   MOVE LOWEST HOUR TO WTO\n         MVC   WTO3+53(3),HIDATE    MOVE HIGHEST DATE TO WTO\n         MVC   WTO3+62(2),HIHOUR    MOVE HIGHEST HOUR TO WTO\n         WTO   ' ',ROUTCDE=11\n         WTO   'THE SYSLOG DATA RANGE THAT WAS SEARCHED IS:',ROUTCDE=11\nWTO3     WTO   '       - LOW   DATE=XXX TIME=XX  HIGH   DATE=XXX TIME=XX\n               X',ROUTCDE=11\nCLOSE    CLOSE (SYSUT1,,SYSUT2)   CLOSE FILES\n         LA    R15,0              SET RETURN CODE TO ZERO\n         L     13,SAVEAREA+4\n         LM    0,12,20(13)\n         L     14,12(13)\n         BR    14\n         EJECT\n         LTORG\nLOWDATE  DS    CL3\nLOWHOUR  DS    CL2\nHIDATE   DS    CL3\nHIHOUR   DS    CL2\nSAVEAREA DC    18F'0'\nSYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=EOF,              X\n               BLKSIZE=32760,LRECL=133,EROPT=SKP\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,BLKSIZE=137,RECFM=VBA,  X\n               LRECL=133\n         END\n/*\n//LINKEDT EXEC PGM=IEWL,COND=(4,LT),\n//         PARM='LIST,XREF,LET',REGION=650K\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(1700,(400,50))\n//SYSLMOD  DD  DISP=SHR,DSN=D061001.LOAD\n//OBJSET   DD  DSN=&&OBJSET,DISP=(OLD,DELETE,DELETE)\n//SYSLIN   DD  *\n INCLUDE OBJSET\n NAME RANGE(R)\n//*\n//SYSLOG   EXEC PGM=RANGE,REGION=900K,TIME=5\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSUT1 DD DSN=D061001.LOG387,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT2 DD SYSOUT=*\n//SYSUDUMP  DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SLOGC": {"ttr": 1547, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM REF: D061001.SYSLOG(SLOGC)\n)CM DOC: SKELETON USED BY SYSLOG APPLICATION PANEL LOGC AND ALSO\n)CM      CLIST LOGC TO BUILD JCL TO LABEL A NEW QUARTERLY SYSLOG TAPE\n)CM\n//D061001S JOB (00000000,06949,10),'LABEL QTRLY TAPE',NOTIFY=D061001,\n//     CLASS=A,TIME=1,MSGCLASS=A\n//LABEL     EXEC  PGM=IEHINITT\n//SYSPRINT DD SYSOUT=*\n//LABELDD  DD DCB=DEN=4,UNIT=TAPES,VOL=(,RETAIN)\n//SYSIN DD *\nLABELDD INITT SER=LOG&LOGQTR.&LOGYEAR\n/*\n//* NEXT STEP IS NEEDED TO PREVENT 613 ABEND DURING FIRST INSTANCE\n//* OF THE 'DUMP WEEKLY' OPTION IN A GIVEN QTR (DUMP WEEKLY JOB\n//* USES DISP=MOD. ABEND 613 RESULTS IF TAPE IS EMPTY)\n//*\n//STOP613 EXEC PGM=IEBGENER,COND=(4,LT)\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD DUMMY\n//SYSUT2 DD UNIT=TAPES,DISP=(,CATLG,DELETE),\n// DCB=D061001.SYSLOGD,VOL=SER=LOG&LOGQTR.&LOGYEAR,\n// DSN=D061001.LOG&LOGQTR.&LOGYEAR,LABEL=(,SL)\n//SYSUT1 DD DATA,DLM=##\nBEGINNING OF SYSLOG DATA FOR QUARTER=&LOGQTR 19.&LOGYEAR\n##\n//* END OF QUARTERLY TAPE LABEL JOBSTREAM\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SLOGDW": {"ttr": 1549, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM REF: D061001.SYSLOG(SLOGDW)\n)CM DOC: SKELETON USED BY SYSLOG APPLICATION PANEL LOGDW001 AND ALSO\n)CM      CLIST LOGDW TO BUILD JCL TO COPY WEEKLY ON-LINE SYSLOG DATA\n)CM      TO QUARTERLY ARCHIVAL TAPE.\n)CM\n//D061001S JOB (00000000,06949,10),'DUMP WEEKLY SYSLOG',NOTIFY=D061001,\n//     CLASS=A,TIME=1,MSGCLASS=A\n//*\n//* NEXT STEP WTO'S THE DATE RANGE OF THE ONLINE SYSLOG BEING DUMPED\n//WEEKSCAN EXEC PGM=RANGE,REGION=300K,TIME=2\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSUT1 DD DSN=D061001.SYSLOGD,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT2 DD SYSOUT=*\n//SYSUDUMP  DD SYSOUT=*\n//*\n//* NEXT STEP DUMPS THE CURRENT WEEK'S SYSLOG TO QUARTERLY ARCHIVE TAPE\n//LOGDUMP EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DSN=D061001.SYSLOGD,DISP=SHR\n//SYSUT2   DD DISP=MOD,UNIT=TAPES,\n//         DSN=D061001.LOG&LOGQTR.&LOGYEAR,\n//         LABEL=(,SL),VOL=(,RETAIN,,SER=LOG&LOGQTR.&LOGYEAR)\n//*\n//* NEXT STEP WTO'S THE DATE RANGE OF THE QUARTERLY SYSLOG TAPE\n//QTRSCAN  EXEC PGM=RANGE,REGION=300K,TIME=2,COND=(4,LT,LOGDUMP)\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSUT1   DD DISP=SHR,UNIT=TAPES,\n//         DSN=D061001.LOG&LOGQTR.&LOGYEAR,\n//         LABEL=(,SL),VOL=SER=LOG&LOGQTR.&LOGYEAR\n//SYSPRINT DD SYSOUT=*\n//SYSUT2 DD SYSOUT=*\n//SYSUDUMP  DD SYSOUT=*\n//*\n//* NEXT STEP GENERATES A WEEKLY SYSLOG EXCEPTION REPORT\n//OPTIONE  EXEC PGM=OPTIONE,REGION=300K,TIME=2\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DISP=SHR,DSN=D061001.SYSLOGD\n//SYSUT2   DD DISP=(,PASS),UNIT=SYSDA,DSN=&&SYSLOG,SPACE=(TRK,(15,5))\n//SYSUDUMP  DD SYSOUT=*\n//*\n//*NEXT STEP SORTS BY JULIAN DATE WITHIN 'EVENT ID'\n//*\n//SORT EXEC PGM=SORT,REGION=1000K,COND=(0,NE,OPTIONE)\n//SORTLIB DD DISP=SHR,DSN=SYS1.SORTLIB\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTIN DD UNIT=SYSDA,DSN=&&SYSLOG,DISP=(OLD,DELETE)\n//SORTOUT DD DCB=(RECFM=FA,BLKSIZE=133),UNIT=SYSDA,DSN=&&SORTOUT,\n//        SPACE=(TRK,(10,2)),DISP=(,PASS)\n//SYSOUT  DD SYSOUT=*\n//SYSIN   DD *\n SORT FIELDS=(1,5,CH,A,7,3,CH,A)\n//*\n//* NEXT STEP PREPARES REPORT FOR PRINTING (INSERT ASA PAGE BREAKS)\n//*\n//POSTPROC EXEC PGM=POSTPROC,REGION=300K,TIME=1\n//STEPLIB  DD   DISP=SHR,DSN=D061001.LOAD\n//SYSUT1   DD   DSN=&&SORTOUT,UNIT=SYSDA,DISP=(OLD,DELETE)\n//SYSUT2   DD   SYSOUT=*,DCB=(RECFM=FA,BLKSIZE=133)\n//SYSPRINT DD   SYSOUT=*\n//SYSUDUMP DD   SYSOUT=*\n//*\n//* NEXT 2 STEPS PRIMES ONLINE DATASET FOR ANOTHER RECORDING WEEK\n//*\n//DELETE EXEC PGM=IEFBR14,COND=(4,LT,LOGDUMP)\n//DD1 DD DISP=(OLD,DELETE),DSN=D061001.SYSLOGD\n//*\n//REALLOC EXEC PGM=IEFBR14,COND=(4,LT,DELETE)\n//DD1 DD DISP=(,CATLG,DELETE),UNIT=DASD,VOL=SER=SP4DLB,\n//    DCB=(RECFM=VBA,LRECL=133,BLKSIZE=7477),\n//    SPACE=(CYL,(20,0)),DSN=D061001.SYSLOGD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SLOGEA": {"ttr": 1552, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM REF: D061001.SYSLOG(SLOGEA)\n)CM DOC: SKELETON USED BY SYSLOG APPLICATION PANEL LOGE AND ALSO\n)CM      CLIST LOGEA TO SUBMIT A QUARTERLY ARCHIVE EXCEPTION REPORT.\n)CM\n//&SYSUID.S JOB (00000000,06949,10),'SEARCH ARCHIVES',\n// CLASS=A,TIME=1,MSGCLASS=Q,NOTIFY=&SYSUID\n//* DOC: THIS JOBSTREAM PRODUCED VIA SPF OPTION 3.S.E.2\n//*\n//* NEXT STEP WILL DETERMINE THE RANGE OF SYSLOG BEING REPORTED.\n//*\n//RANGE    EXEC PGM=RANGE,REGION=300K,TIME=2\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSUT1 DD DISP=SHR,DSN=D061001.LOG&LOGQTR.&LOGYEAR,VOL=(,RETAIN)\n//SYSPRINT DD SYSOUT=*\n//SYSUT2 DD SYSOUT=*\n//SYSUDUMP  DD SYSOUT=*\n//*\n//OPTIONE  EXEC PGM=OPTIONE,REGION=300K,TIME=2\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSUT1 DD DISP=SHR,DSN=D061001.LOG&LOGQTR.&LOGYEAR\n//SYSPRINT DD SYSOUT=*\n//SYSUT2 DD DISP=(,PASS),DSN=&&SYSLOG,VOL=SER=PRGPRD,\n//       SPACE=(CYL,(10,2)),UNIT=SYSDA\n//SYSUDUMP  DD SYSOUT=*\n//*\n//SORT EXEC PGM=SORT,REGION=1000K,COND=(0,NE,OPTIONE)\n//SORTLIB DD DISP=SHR,DSN=SYS1.SORTLIB\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SORTIN DD UNIT=SYSDA,DSN=&&SYSLOG,DISP=(OLD,DELETE),VOL=SER=PRGPRD\n//SORTOUT DD DCB=(RECFM=FA,BLKSIZE=133),UNIT=SYSDA,DSN=&&SORTOUT,\n//        SPACE=(CYL,(10,2)),DISP=(,PASS),VOL=SER=PRGPRD\n//SYSOUT  DD SYSOUT=*\n//SYSIN   DD *\n SORT FIELDS=(1,5,CH,A,7,3,CH,A,11,8,CH,A)\n//*\n//* NEXT STEP FORMATS REPORT\n//POSTPROC EXEC PGM=POSTPROC,REGION=300K,TIME=1,COND=(0,NE,SORT)\n//STEPLIB  DD   DISP=SHR,DSN=D061001.LOAD\n//SYSUT1   DD   DSN=&&SORTOUT,UNIT=SYSDA,DISP=(OLD,DELETE),\n//         VOL=SER=PRGPRD\n//SYSUT2   DD   SYSOUT=*,DCB=(RECFM=FA,BLKSIZE=133)\n//SYSPRINT DD   SYSOUT=*\n//SYSUDUMP DD   SYSOUT=*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SLOGSA": {"ttr": 1554, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM REF: D061001.SYSLOG(SLOGSA)\n)CM DOC: SKELETON USED BY SYSLOG APPLICATION PANEL LOGSA001 AND ALSO\n)CM      CLIST LOGSA TO BUILD JCL TO SAERCH A GIVEN MONTHLY ARCHIVED\n)CM      SYSLOG TAPE.\n)CM\n//&SYSUID.S JOB (00000000,06949,10),'SEARCH ARCHIVES',\n// CLASS=A,TIME=1,MSGCLASS=Q,NOTIFY=D061001\n//* DOC: THIS JOBSTREAM PRODUCED VIA SPF OPTION 3.S.SA\n//SYSLOGSP EXEC PGM=LOGSCAN,REGION=300K,TIME=2,\n// PARM='&LOGBDAT.&LOGBHR.&LOGENDHR.&LOGLIT'\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DISP=SHR,DSN=D061001.LOG&LOGQTR.&LOGYEAR\n//SYSUT2 DD SYSOUT=*\n//SYSUDUMP  DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SLOGSC2": {"ttr": 1556, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM REF: D061001.SYSLOG(SLOGSC2)\n)CM DOC: SKELETON USED BY SYSLOG APPLICATION PANEL LOGSC2 AND ALSO\n)CM      CLIST CLOGSC2 TO BUILD JCL TO SEARCH THE CURRENT WEEKLY SYSLOG\n)CM\n//&SYSUID.S JOB (00000000,06949,10),'SEARCH CURRENT',\n// CLASS=A,MSGCLASS=Q,NOTIFY=&SYSUID\n//* DOC: THIS JOBSTREAM WAS PRODUCED VIA SPF OPTION 3.S.SC.2\n//SEARCH   EXEC PGM=LOGSCAN,REGION=512K,TIME=2,\n// PARM='&LOGBDAT.&LOGBHR.&LOGENDHR.&LOGLIT'\n//STEPLIB DD DSN=D061001.LOAD,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DISP=SHR,DSN=D061001.SYSLOGD\n//SYSUT2 DD SYSOUT=*\n//SYSUDUMP  DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SLOGTMP": {"ttr": 1558, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SE 'HOURLY SYSLOG DUMP FAILED',USER(D061001),LOGON\nSE 'HOURLY SYSLOG DUMP FAILED',USER(D061001),LOGON\nSE 'HOURLY SYSLOG DUMP FAILED',USER(D061001),LOGON\nSE '#ABLLOG SYSLOG DUMP FAILED...NOTIFY SYSTEMS IMMMEDIATELY',CN(01)\nSE '#ABLLOG SYSLOG DUMP FAILED...NOTIFY SYSTEMS IMMMEDIATELY',CN(01)\nSE '#ABLLOG SYSLOG DUMP FAILED...NOTIFY SYSTEMS IMMMEDIATELY',CN(01)\n/* ABL.CNTL(SLOGTMP) - USED BY PROC 'SYSLOGD' IF DUMP PROBLEMS OCCUR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SOPENTRY": {"ttr": 1560, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ABL-DP POLICY AND PROCEDURES MANUAL SECTION 2.4 (WEEKLY PROCEDURES)\n\n2.4.1 SYSLOG Retention\n\nThe system LOG (SYSLOG) is retained in online dataset 'D061001.SYSLOGD'\nduring the week and is then dumped to a quarterly archive tape on the\nlast working day of each week and on the last working day of each\nquarter.  TSO SPF UTILITIES SYSLOG option 'DW' facilitates this dumping.\nOption DW also automatically generates a report of 'exception' events\nwhich is reviewed weekly to address potential problem areas.\n\n Archived SYSLOG data is retained for one year.  Any portion of the\nSYSLOG may be printed at any time using the SPF SYSLOG application.  A\ntutorial is available within the SYSLOG application that explains in\ndetail the weekly dump procedure as well as other SYSLOG functions\n(e.g., report generation, SYSLOG searching).\n\n Use of the SPF SYSLOG application is restricted to data processing\npersonnel.\n\n\n\nTo perform a weekly SYSLOG dump:\n\n 1. LOGON to TSO\n 2. From READY, enter:   SPF 3.S  (requests the SYSLOG Utility Menu)\n 3. From the SYSLOG Primary Menu, select option DW\n 4. Supply the QUARTER and YEAR info then press ENTER to SUBMIT\n 5. Check the JOB's output for successful completion\n 6. File JOB output with quarterly tape, discarding last week's output.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SYSLOGD": {"ttr": 1793, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//SYSLOGD PROC\n//*\n//*  REFER: SYS1.PROCLIB(SYSLOGD)   THIS JOBSTREAM IS STARTED VIA THE\n//*         MASTER CONSOLE COMMAND \"S SYSLOGD.LOG\"  AFTER EACH TIME THE\n//*         SYSLOG DATASET FILLS UP AUTOMATICALLY OR AFTER EACH TIME IT\n//*         IT IS SWITCHED MANUALLY ( VIA THE  \" W T \" COMMAND ).\n//*         REFER TO THE ISPF TUTORIAL DESCRIBING DAILY SYSLOG DUMPING\n//*         DETAILS FOR INFO (SYSLOG UTILITY PRIMARY MENU OPTION 'DD').\n//*\n//SYSLOG  EXEC PGM=IASXWR00,PARM='PT'\n//IEFRDER DD   DISP=(MOD,KEEP),DSN=D061001.SYSLOGD\n//*\n//* DOC: NEXT STEPS RUNS ONLY SHOULD STEP 'SYSLOG' ABEND\n//*\n//TMPBATCH EXEC PGM=IKJEFT01,REGION=4096K,TIME=10,COND=(8,GT)\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD DISP=SHR,DSN=ABL.CNTL(SLOGTMP)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT087/FILE087.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT087", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}