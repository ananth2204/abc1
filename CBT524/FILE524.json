{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012251000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE524.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE524.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x06'", "DS1TRBAL": "b'g\\x10'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xe3\\x00\\x01\\x03\\xe3\\x00\\x04\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x18O\\x01\\x01\\x18O\\x10\\x07\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-07-03T00:00:00", "modifydate": "2001-07-03T10:07:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 437    FILE:  524\n\n    ORIGINAL DSNAME:  WCBT.CBT437.FILE524\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    27920   PO\n\n   3 MEMBERS COUNTED; CUMULATIVE SIZE IS 915 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   07/03/01    10:07:03    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE524": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x01\\x02_\\x01\\x01\\x18?\\x12\\x08\\x00D\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2001-07-02T12:08:00", "lines": 68, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 524 is from Ron Tatum and contains a subroutine to read   *   FILE 524\n//*           a tape, and write from a tape, and do other functions *   FILE 524\n//*           using EXCP.                                           *   FILE 524\n//*                                                                 *   FILE 524\n//*           email:  Ronald Tatum <rhtatum@door.net>               *   FILE 524\n//*                                                                 *   FILE 524\n//*   Short description of the routines:                            *   FILE 524\n//*                                                                 *   FILE 524\n//*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   *   FILE 524\n//*                                                                 *   FILE 524\n//*      EXCP-LEVEL MAGNETIC TAPE READ/WRITE/CONTROL ROUTINES       *   FILE 524\n//*                                                                 *   FILE 524\n//*      SUBROUTINE ENTRY POINTS AND INPUT/OUTPUT PARAMETERS        *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPRDOPEN - TO OPEN THE TAPE DATA SET                       *   FILE 524\n//*       CPROPN IS AN ALTERNATE ENTRY POINT NAME FOR THIS          *   FILE 524\n//*       OPERATION                                                 *   FILE 524\n//*                                                                 *   FILE 524\n//*        ANSWER (,DDNAME) INPUT TO ROUTINE. DDNAME DEFAULTS       *   FILE 524\n//*         TO 'READIN  ' IF (,DDNAME) IS OMITTED.  IF              *   FILE 524\n//*         SUPPLIED, IT MUST BE A CHAR STRING OF EIGHT BYTES,      *   FILE 524\n//*         THE FIRST ALPHABETIC; MUST MATCH THE DDNAME FOR         *   FILE 524\n//*         THE JCL STATEMENT FOR THE INPUT TAPE.                   *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPRDCLS -  TO CLOSE THE DATA SET. NO PARMS.                *   FILE 524\n//*       CPRCLS IS AN ALTERNATE ENTRY POINT NAME FOR CPRDCLS.      *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPRD -     READ ONE PHYSICAL BLOCK. ANSWER, DATA, COUNT.   *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPRDB -    READ BACKWARDS. ANSWER, DATA, COUNT.            *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPSKRD -   READ A BLOCK, SKIPPING SOME BYTES AT FIRST.     *   FILE 524\n//*                  ANSWER,DATA,COUNT.                             *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPSKBR -   BACKWARD READ AFTER SKIP FROM END OF RECORD.    *   FILE 524\n//*                  ANSWER, DATA, COUNT.                           *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPFSF -    FORWARD SPACE ONE FILE. ANSWER.                 *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPBSF -    BACKSPACE ONE FILE MARK. ANSWER.                *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPFSB -    SKIP FORWARD ONE PHYSICAL BLOCK. ANSWER.        *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPBSB -    BACKWARD SPACE ONE PHYSICAL BLOCK. ANSWER.      *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPREW -    REWIND THE TAPE TO BOT. ANSWER.                 *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPWTOPEN - OPEN THE OUTPUT TAPE DATA SET.                  *   FILE 524\n//*       CPWOPN IS AN ALTERNATE ENTRY POINT NAME.                  *   FILE 524\n//*                ANSWER (,DDNAME).                                *   FILE 524\n//*                DDNAME DEFAULTS TO 'SYSTAPE ' IF OMITTED.        *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPWT -    WRITE ONE PHYSICAL BLOCK. ANSWER, DATA, COUNT.   *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPWTM -   WRITE A TAPE MARK. ANSWER.                       *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPWERG -  ERASE GAP (NOMINALLY 3.5 INCHES). ANSWER.        *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPERAS -  DATA SECURITY ERASE TO EOT MARKER. ANSWER.       *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPWREW -  REWIND OUTPUT MAG TAPE VOLUME. ANSWER.           *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPWRED -  READ ONE BLOCK FROM OUTPUT TAPE VOLUME.          *   FILE 524\n//*                ANSWER, DATA,COUNT.                              *   FILE 524\n//*                                                                 *   FILE 524\n//*      CPWTCLS - CLOSE THE OUTPUT TAPE DATA SET.                  *   FILE 524\n//*       CPWCLS IS AN ALTERNATE ENTRY POINT NAME. NO PARMS.        *   FILE 524\n//*                                                                 *   FILE 524\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CPRDTAPE": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x18O\\x01\\x01\\x18O\\x10\\x06\\x03C\\x03C\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-07-03T00:00:00", "modifydate": "2001-07-03T10:06:00", "lines": 835, "newlines": 835, "modlines": 0, "user": "WSBG"}, "text": "*23456789012345678901234567890123456789012345678901234567890123456789012\nCPRDTAPE  CSECT                                                         CP000010\n* EXCP-LEVEL MAGNETIC TAPE READ/WRITE/CONTROL ROUTINES                  CP000020\n          PRINT ON,GEN                                                  CP000030\n* SUBROUTINE ENTRY POINTS AND INPUT/OUTPUT PARAMETERS                   CP000040\n*                                                                       CP000050\n* CPRDOPEN - TO OPEN THE TAPE DATA SET                                  CP000060\n*  CPROPN IS AN ALTERNATE ENTRY POINT NAME FOR THIS OPERATION           CP000070\n*   ANSWER (,DDNAME) INPUT TO ROUTINE. DDNAME DEFAULTS TO 'READIN  '    CP000080\n*    IF (,DDNAME) IS OMITTED. IF SUPPLIED, IT MUST BE A CHAR STRING     CP000090\n*    OF EIGHT BYTES, THE FIRST ALPHABETIC; MUST MATCH THE DDNAME        CP000100\n*    FOR THE JCL STATEMENT FOR THE INPUT TAPE.                          CP000110\n*                                                                       CP000120\n* CPRDCLS -  TO CLOSE THE DATA SET. NO PARMS.                           CP000130\n*  CPRCLS IS AN ALTERNATE ENTRY POINT NAME FOR CPRDCLS.                 CP000140\n*                                                                       CP000150\n* CPRD -     READ ONE PHYSICAL BLOCK. ANSWER, DATA, COUNT.              CP000160\n*                                                                       CP000170\n* CPRDB -    READ BACKWARDS. ANSWER, DATA, COUNT.                       CP000180\n*                                                                       CP000190\n* CPSKRD -   READ A BLOCK, SKIPPING SOME BYTES AT FIRST.                CP000200\n*             ANSWER,DATA,COUNT.                                        CP000210\n*                                                                       CP000220\n* CPSKBR -   BACKWARD READ AFTER SKIP FROM END OF RECORD.               CP000230\n*             ANSWER, DATA, COUNT.                                      CP000240\n*                                                                       CP000250\n* CPFSF -    FORWARD SPACE ONE FILE. ANSWER.                            CP000260\n*                                                                       CP000270\n* CPBSF -    BACKSPACE ONE FILE MARK. ANSWER.                           CP000280\n*                                                                       CP000290\n* CPFSB -    SKIP FORWARD ONE PHYSICAL BLOCK. ANSWER.                   CP000300\n*                                                                       CP000310\n* CPBSB -    BACKWARD SPACE ONE PHYSICAL BLOCK. ANSWER.                 CP000320\n*                                                                       CP000330\n* CPREW -    REWIND THE TAPE TO BOT. ANSWER.                            CP000340\n*                                                                       CP000350\n* CPWTOPEN - OPEN THE OUTPUT TAPE DATA SET.                             CP000360\n*  CPWOPN IS AN ALTERNATE ENTRY POINT NAME.                             CP000370\n*           ANSWER (,DDNAME). DDNAME DEFAULTS TO 'SYSTAPE ' IF OMITTED. CP000380\n*                                                                       CP000390\n* CPWT -    WRITE ONE PHYSICAL BLOCK. ANSWER, DATA, COUNT.              CP000400\n*                                                                       CP000410\n* CPWTM -   WRITE A TAPE MARK. ANSWER.                                  CP000420\n*                                                                       CP000430\n* CPWERG -  ERASE GAP (NOMINALLY 3.5 INCHES). ANSWER.                   CP000440\n*                                                                       CP000450\n* CPERAS -  DATA SECURITY ERASE TO EOT MARKER. ANSWER.                  CP000460\n*                                                                       CP000470\n* CPWREW -  REWIND OUTPUT MAG TAPE VOLUME. ANSWER.                      CP000480\n*                                                                       CP000490\n* CPWRED -  READ ONE BLOCK FROM OUTPUT TAPE VOLUME. ANSWER, DATA,COUNT. CP000500\n*                                                                       CP000510\n* CPWTCLS - CLOSE THE OUTPUT TAPE DATA SET.                             CP000520\n*  CPWCLS IS AN ALTERNATE ENTRY POINT NAME. NO PARMS.                   CP000530\n*                                                                       CP000540\n* THE PARAMETER \"ANSWER\" IS FIVE WORDS, \"COUNT(S)\" ONE TO THREE WORDS.  CP000550\n* FIRST \"COUNT\" IS THE NUMBER OF BYTES TO READ, SECOND WORD IS SKIP     CP000560\n* VALUE, IF ANY, AND THIRD WORD IS NUMBER TO READ AFTER A SKIP.         CP000570\n* \"DATA\" IS THE ADDRESS OF A CALLER-SUPPLIED AREA FOR THE DATA TO BE    CP000580\n* READ OR WRITTEN. SINCE THE BACKWARDS READS PLACE THE DATA IN STORAGE  CP000590\n* IN DESCENDING ADDRESS ORDER, THE DATA ADDRESS FOR THOSE CALLS SHOULD  CP000600\n* BE THE END, NOT THE BEGINNING, OF THE BUFFER IN MEMORY.               CP000610\n* THE LIMIT FOR \"COUNT\" FOR DATA TRANSFERS IS 9 CCW'S OF 65K EACH,      CP000620\n* OR A TOTAL OF 589815 BYTES FOR ANY COMBINATION OF READS AND SKIPS.    CP000630\n* (BYTES SKIPPED PLUS READ CAN'T BE MORE THAN 9*65K.)                   CP000640\n*                                                                       CP000650\n* THE FIRST WORD IN THE ANSWER ARRAY IS A PARTIAL COMPLETION INDICATOR  CP000660\n* WITH THE FOLLOWING MEANINGS:                                          CP000670\n*     0 = REQUEST WAS APPARENTLY SUCCESSFUL                             CP000680\n*    -1 = EOF ENCOUNTERED ON READ, EOT ENCOUNTERED ON WRITE.            CP000690\n*    -2 = DATA CHECK.                                                   CP000700\n*    -3 = HARDWARE FAILURE.                                             CP000710\n* THE THIRD WORD IS A COUNT OF BYTES ACTUALLY READ FROM TAPE.           CP000720\n* THE FOURTH AND FIFTH WORDS CONTAIN THE UNIT STATUS BYTES AND SENSE    CP000730\n* BYTES RETURNED BY THE CHANNEL AND IOS IN CASE OF ERRORS.              CP000740\n* A PLUS ONE IN THE FIRST WORD MEANS THE DCB COULD NOT BE OPENED        CP000750\n* FOR WHATEVER DDNAME FOR THE TAPE WAS REQUESTED.                       CP000760\n* THE ROUTINES WILL ABEND IF THINGS LOOK REALLY BAD WITH CODES:         CP000770\n*   44 = UNDECIPHERABLE ERROR STATUS ON READ.                           CP000780\n*   46 = MORE THAN 9 CCW'S REQUIRED FOR READ.                           CP000790\n*   56 = MORE THAN 9 CCW'S REQUIRED FOR READ BACKWARD.                  CP000800\n*   66 = MORE THAN 9 CCW'S REQUIRED FOR SKIP/READ COMBINATION.          CP000810\n*  144 = UNDECIPHERABLE ERROR STATUS ON WRITE.                          CP000820\n*  146 = MORE THAN 9 CCW'S REQUIRED FOR WRITE.                          CP000830\n*                                                                       CP000840\n* NOTA BENE:                                                            CP000850\n*  THIS ROUTINE CONSTRUCTS FORMAT 0 CCW'S ONLY, AND USES AN OS IOB;     CP000860\n*  IT WILL NOT WORK UNDER ESA AS DEFINED BY THE PRINCIPLES OF OPERATION CP000870\n*  MANUAL FOR MACHINES RUNNING IN THAT MODE. IF IT IS TO BE USED UNDER  CP000880\n*  ESA, THE APPROPRIATE CONTROL BLOCKS MUST BE USED AND FORMAT 1 CCW'S  CP000890\n*  MUST BE CONSTRUCTED FOR ANY I/O TO DATA AREAS ABOVE THE 16M MARK.    CP000900\n*                                                                       CP000910\n         ENTRY CPRDOPEN,CPRDCLS,CPFSF,CPBSF,CPRD,CPRDB,CPREW            CP000920\n         ENTRY CPROPN,CPRCLS                                            CP000930\n         ENTRY CPFSB,CPBSB,CPSKRD,CPSKBR                                CP000940\n*                                                                       CP000950\n         ENTRY CPWTOPN,CPWOPN,CPWTCLS,CPWCLS                            CP000960\n         ENTRY CPWT,CPWTM,CPWERG,CPERAS,CPWREW,CPWRED                   CP000970\n*                                                                       CP000980\nCPRD     STM   14,12,12(13)   READ ONE PHYSICAL BLK, FORWARD DIRECTION  CP000990\n         LR    12,15         DO CHAIN OF SA'S, SET GPR12 AS BASE ALWAYS CP001000\n         USING CPRD,12                                                  CP001010\n         USING ANSWER,11                                                CP001020\n         USING IHADCB,9                                                 CP001030\n         BAL   15,COMENTRY  PERFORM ALL COMMON SETUP/ENTRY FUNCTIONS    CP001040\n         LM    2,3,4(1)         2=@DATA, 3=@COUNT                       CP001050\n         LA    2,(,2)  ZERO HIGH ORDER BYTE FOR FORMAT 0 CCW ADDR FIELD CP001060\n         L     4,ACCWD                                                  CP001070\n         ST    4,ACCW2                                                  CP001080\n         LA    4,1(,0)      SET TO INCR. BLOCK COUNT IN IOB FOR O/S     CP001090\n         STH   4,IOBRDBCI                                               CP001100\n         LA    4,9(,0)      COUNTER FOR CCW'S TO BE BUILT               CP001110\n         MVI   IOBRD,X'02'  NOT CD OR CC - NO RELATED CP'S ASSUMED      CP001120\n         L     3,0(,3)      3=VAL(COUNT) - BYTES TO BE READ FROM TAPE   CP001130\nCPRDLOOP CR    3,5          MORE THAN 65K TO READ FROM TAPE?            CP001140\n         BC    12,CPRDLAST      LAST CCW TO BE CONSTRUCTED              CP001150\n         OI    IOBRD,X'80'      TURN ON DATA CHAINING IN IOB            CP001160\n         L     8,RDN            1ST HALF OF A CCW TO READ 65K           CP001170\n         OR    8,2              CHAIN ADDRESS PORTION OF CCW            CP001180\n         ST    8,0(,6)          INTO CCW ARRAY                          CP001190\n         L     8,RDN+4          BUILD 2ND HALF OF CCW                   CP001200\n         ST    8,4(,6)          AND IT TOO TO THE CCW ARRAY             CP001210\n         SR    3,5              DECREMENT REQUESTED BYTE COUNT          CP001220\n         LA    6,8(,6)          INCREMENT CP ARRAY POINTER              CP001230\n         AR    2,5              INCREMENT DATA POINTER                  CP001240\n         BCT   4,CPRDLOOP       BUILD ANOTHER IF POSSIBLE               CP001250\n         ABEND 46,DUMP,STEP     TRIED TO BUILD TOO MANY CCW'S           CP001260\n*                                                                       CP001270\nCPRDLAST L     8,RDF            LAST CCW TO BUILD FOR READ              CP001280\n         OR    8,2                                                      CP001290\n         ST    8,0(,6)          @DATA TO THAT CCW                       CP001300\n         L     8,RDF+4          SET TO BUILD 2ND HALF OF CCW            CP001310\n         OR    8,3              VAL(COUNT) INTO LAST CCW                CP001320\n         ST    8,4(,6)                                                  CP001330\n         LA    8,10(,0)         CALC HOW MANY CCW'S                     CP001340\n         SR    8,4                                                      CP001350\n         ST    8,NUMCCW                                                 CP001360\n         BAL   10,EXCPR         GO EXECUTE THE CP(S) BUILT              CP001370\n*                                                                       CP001380\nCPRDLST1 C     1,FM2       IF HW FAILURE, CLEAR TRANSFERRED COUNT VALUE CP001390\n         BC    4,CLEAR                                                  CP001400\n         L     2,IOBRDCSW       PICK UP PART OF CHANNEL STATUS WORD     CP001410\n         LA    2,0(,2)          ZERO HIGH-ORDER BYTE                    CP001420\n         S     2,F8             POINT TO LAST CCW USED                  CP001430\nCPRDLST  LR    3,2                                                      CP001440\n         L     1,IOBRDCSW+4     GET CSW FROM LAST CCW USED              CP001450\n         N     1,MASK           ZERO ALL BUT BYTE COUNT BITS            CP001460\n         LA    6,CP             POINT TO BEGINNING OF CCW CHAIN         CP001470\n         SR    3,6                                                      CP001480\n         SRA   3,3(0)           EXECUTED CCW'S - 1                      CP001490\n         MR    4,3              R5 = BYTES EXCEPT LAST CCW USED         CP001500\n         L     4,4(,2)          BYTE COUNT FROM PARTIALLY USED CSW      CP001510\n         N     4,MASK           BYTES POSSIBLE IN LAST CCW              CP001520\n         SR    4,1                                                      CP001530\n         AR    4,5                                                      CP001540\n         ST    4,APARTIAL       FINAL COUNT OF BYTES READ               CP001550\n         LA    4,1(,0)                                                  CP001560\n         ST    4,APART                                                  CP001570\n*                                                                       CP001580\nRETURN   L     13,SAVERD+4                                              CP001590\n         LM    14,12,12(13)     STANDARD EXIT TO CALLER                 CP001600\n         MVI   12(13),X'FF'                                             CP001610\n         BCR   15,14                                                    CP001620\n         SPACE 3                                                        CP001630\nCPSKRD   STM   14,12,12(13)     FORWARD READ AFTER SKIP ROUTINE         CP001640\n         USING CPSKRD,15                                                CP001650\n         L     12,ACPRD         GET STANDARD BASE SET                   CP001660\n         DROP  15                                                       CP001670\n         BAL   15,COMENTRY      PERFORM STANDARD SA CHAIN, ETC.         CP001680\n         LM    2,3,4(1)         @DATA, @3-WORD COUNT ARRAY FROM CALLER  CP001690\n         LA    2,0(,2)          MAKE 24-BIT ADDR. VALUE                 CP001700\n         LA    4,1                                                      CP001710\n         STH   4,IOBRDBCI       BLOCK COUNT INCREMENT                   CP001720\n         LA    4,10             MAX # CCW'S (9 IF NOT SKIPPING)         CP001730\n         MVI   IOBRD,X'82'      ALWAYS HAVE DATA CHAINING IF SKIPPING   CP001740\n         L     7,4(,3)          VAL(SKIP COUNT)                         CP001750\nCPSKLP1  CR    7,5              MORE THAN 65K?                          CP001760\n         BC    12,CPSKLAST      NO, BUILD LAST CCW                      CP001770\n         L     8,RDN            START WITH SKELETON ORDINARY READ       CP001780\n         OR    8,2              R8:=@DATA SAME CELL                     CP001790\n         ST    8,0(,6)                                                  CP001800\n         L     8,RDN+4          MAKE R8:=FLAGS, 65K COUNT               CP001810\n         ST    8,4(,6)                                                  CP001820\n         MVI   4(6),X'B0'       SET CD, SLI AND SKIP FLAGS IN CCW       CP001830\n         SR    7,5              SKIP COUNT := SKIP COUNT - 65K          CP001840\n         LA    6,8(,6)          CP PTR := CP PTR + 8                    CP001850\n         BCT   4,CPSKLP1        TRY TO BUILD ANOTHER CCW IN CHAIN       CP001860\nCPSKBABE ABEND 66,DUMP,STEP     TOO MANY CCW'S NEEDED                   CP001870\nCPSKLAST L     8,RDF            LAST FRAGMENT TO SKIP                   CP001880\n         OR    8,2              R8 := @DATA (SAME CELL)                 CP001890\n         ST    8,0(,6)                                                  CP001900\n         L     8,RDF+4                                                  CP001910\n         OR    8,7              R8 := FLAGS, FRAG COUNT                 CP001920\n         ST    8,4(,6)                                                  CP001930\n         MVI   4(6),X'BO'       SET ALL THOSE FLAGS ALSO                CP001940\n         L     3,8(,3)          VALUE OF COUNT TO READ AFTER SKIP       CP001950\n         LA    6,8(,6)          NEXT PLACE IN CCW LIST                  CP001970\n         B     CPRDLOOP        & GO TREAT AS STRAIGHT READ FROM HERE ON CP001980\n*                                                                       CP001990\n         SPACE 3                                                        CP002000\n*                                                                       CP002010\nCPRDB   STM    14,12,12(13)     READ BACKWARDS FUNCTION                 CP002020\n        USING  CPRDB,15                                                 CP002030\n        L      12,ACPRD         GET STANDARD BASE                       CP002040\n        DROP   15                                                       CP002050\n        BAL    15,COMENTRY      PERFORM STANDARD SA CHAIN, ETC.         CP002060\n        LM     2,3,4(1)         @DATA, @COUNT                           CP002070\n        LA     2,0(,2)          FORM 24-BIT ADDRESS VALUE               CP002080\n        L      4,ACCWD                                                  CP002090\n        ST     4,ACCW2                                                  CP002100\n        LA     4,1(,0)                                                  CP002110\n        STH    4,IOBRDBCI       SET TO INCREMENT BLOCK COUNT            CP002120\n        LA     4,9(,0)          MAX # CCW'S TO BUILD                    CP002130\n        MVI    IOBRD,X'02'      NOT CD OR CC - NO RELATED CHAN PROGS    CP002140\n        L      3,0(,3)          VALUE(COUNT) BYTES TO READ              CP002150\nBRDLOOP CR     3,5              ARE WE FIXED TO READ ENOUGH?            CP002160\n        BC     12,BRDLAST       BIF CAN GO CONSTRUCT LAST CCW           CP002170\n        OI     IOBRD,X'80'      TURN ON CHAINING BIT IN IOB             CP002180\n        L      8,RDB            GET BACKWARD, CHAINING READ CCW         CP002190\n        OR     8,2              MAKE DATA ADDRESS                       CP002200\n        ST     8,0(,6)          INTO CCW CHAIN                          CP002210\n        L      8,RDB+4                                                  CP002220\n        ST     8,4(,6)                                                  CP002230\n        SR     3,5              DECREMENT AMOUNT TO READ BY 65K         CP002240\n        LA     6,8(,6)          INCR. PTR TO CCW CHAIN AREA             CP002250\n        SR     2,5              ADJUST ADDR. OF WHERE TO READ INTO      CP002260\n        BCT    4,BRDLOOP         & GO BUILD SOME MORE CCW'S             CP002270\n        ABEND  56,DUMP,STEP     TOO MANY CCW'S REQUIRED                 CP002280\n*                                                                       CP002290\nBRDLAST  L     8,RDBF      LAST OR ONLY CCW TO BUILD INTO CHAIN OF THEM CP002300\n         OR    8,2              FIX UP FINAL CCW DATA ADDRESS           CP002310\n         ST    8,0(,6)                                                  CP002320\n         L     8,RDBF+4         FIX FINAL BYTE COUNT IN THAT CCW        CP002330\n         OR    8,3              R8 := FLAGS, FRAG. COUNT                CP002340\n         ST    8,4(,6)          PUT INTO CP ARRAY                       CP002350\n         LA    8,10(,0)         MAX + 1 #CCW'S                          CP002360\n         SR    8,4              CALC MAX USED                           CP002370\n         ST    8,NUMCCW                                                 CP002380\n         LA    10,CPRDLST1      POINT TO STANDARD RETURN PROCESSOR      CP002390\n         B     EXCPR             & GO EXECUTE THE CP(S)                 CP002400\n         SPACE 3                                                        CP002410\nSPSKBR   STM   14,12,12(13)     BACKWARD SKIP AND READ FUNCTION         CP002420\n         USING CPSKBR,15                                                CP002430\n         L     12,ACPRD                                                 CP002440\n         DROP  15                                                       CP002450\n         BAL   15,COMENTRY      PERFORM STANDARD CHAIN SA'S, ETC.       CP002460\n         LM    2,3,4(1)         @DATA, @3-WORD COUNT ARRAY              CP002470\n         LA    2,0(,2)          24-BIT ADDRESS FOR CCW ADDRESS FIELD    CP002480\n         LA    4,1                                                      CP002490\n         STH   4,IOBRDBCI       BLOCK COUNT INCREMENT                   CP002500\n         LA    4,10             MAX # CCW'S IF SKIPPING                 CP002510\n         MVI   IOBRD,X'82'      ALWAYS CHAIN IF SKIPPING                CP002520\n         L     7,4(,3)          VALUE OF SKIP COUNT                     CP002530\nCPSKBL1  CR    7,5              MORE THAN 65K?                          CP002540\n         BC    12,CPSKBLST      NO, JUST GO BUILD LAST IN SKIP CHAIN    CP002550\n         L     8,RDB                                                    CP002560\n         OR    8,2                                                      CP002570\n         ST    8,0(,6)          FIRST HALF OF A CCW BUILT               CP002580\n         L     8,RDB+4                                                  CP002590\n         ST    8,4(,6)          SKIP 65K WITH EACH CCW                  CP002600\n         MVI   4(6),X'B0'       CD, SLI, SKIP FLAGS GET TURNED ON       CP002610\n         SR    7,5              DECREMENT SKIP VALUE COUNT              CP002620\n         LA    6,8(,6)          NEXT IN ARRAY OF CCW'S TO BUILD         CP002630\n         BCT   4,CPSKBL1        IF WE CAN                               CP002640\nCPSKBRAB ABEND 66,DUMP,STEP     TOO MANY CCW'S REQUIRED                 CP002650\nCPSKBLST L     8,RDBF           LAST FRAGMENT OF 65K TO SKIP            CP002660\n         OR    8,2                                                      CP002670\n         ST    8,0(,6)                                                  CP002680\n         L     8,RDBF+4                                                 CP002690\n         OR    8,7                                                      CP002700\n         ST    8,4(,6)                                                  CP002710\n         MVI   4(6),X'B0'       SET CD, SLI, SKIP FLAGS FOR IT TOO      CP002720\n         L     3,8(,3)          VALUE OF READ DATA AFTER SKIP COUNT     CP002730\n         LA    6,8(,6)          NEXT SPOT IN CP ARRAY                   CP002740\n         B     BRDLOOP    AND PROCESS AS ORDINARY BACKWARD READ REQUEST CP002750\n*                                                                       CP002760\n***** END OF READ FUNCTIONS PORTION OF ROUTINE *****                    CP002770\n*                                                                       CP002780\n         EJECT                                                          CP002790\nCPFSF    STM   14,12,12(13)     FORWARD SPACE FILE FUNCTION             CP002800\n         USING CPFSF,15                                                 CP002810\n         L     12,ACPRD                                                 CP002820\n         DROP  15                                                       CP002830\n         BAL   15,COMENTRY      PERFORM STANDARD CHAIN SA'S ETC.        CP002840\n         LD    0,FSF            MOVE PROPER FSF CCW VIA FPREGS          CP002850\n         STD   0,CP                                                     CP002860\n         LA    9,DCBRD          @IHADCB                                 CP002870\n         SR    4,4                                                      CP002880\n         ST    4,DCBBLKCT       CLEAR BLOCK COUNT IN DCB                CP002890\n         STH   4,IOBRDBCI       SAY NO INCREMENT TO BLOCK COUNT IN IOB  CP002900\n         MVI   IOBRD,X'02'                                              CP002910\n         BAL   10,EXCPR         GO OFF AND ISSUE REAL EXCP-LEVEL STUFF  CP002920\n         SPACE 3                                                        CP002930\nCLEAR    SR    2,2             COMMON EXIT FOR FILE SPACING, H/W ERRORS CP002940\n         ST    2,APARTIAL       SAY NOTHING TRANSFERED                  CP002950\n         LA    2,1(,2)                                                  CP002960\n         ST    2,APART      SET PARTIAL COMPLETION INDICATOR FOR CALLER CP002970\n         B     RETURN                                                   CP002980\n         SPACE 3                                                        CP002990\nCOMENTRY LR    2,13             COMMON ENTRY PROCESOR - CHAIN SA'S      CP003000\n         LA    13,SAVERD                                                CP003010\n         ST    13,8(,2)                                                 CP003020\n         ST    2,SAVERD+4                                               CP003030\n         L     11,0(,1)         SET BASE FOR USER'S ANSWER ARRAY        CP003040\n         L     5,MAX            COMPARAND REG FOR LIMIT ON CCW COUNTS   CP003050\n         LA    6,CP             BASE ALWAYS USED FOR CP ARRAY           CP003060\n         BR    15               BACK TO MAINLINE CODE                   CP003070\n         SPACE 3                                                        CP003080\nCPBSF    STM   14,12,12(13)     BACKSPACE FILE FUNCTION                 CP003090\n         USING CPBSF,15                                                 CP003100\n         L     12,ACPRD                                                 CP003110\n         DROP  15                                                       CP003120\n         BAL   15,COMENTRY                                              CP003130\n         LD    0,BSF            MOVE CCW USING FPR                      CP003140\n         STD   0,CP                                                     CP003150\n         LA    9,DCBRD          @IHADCB                                 CP003160\n         SR    4,4                                                      CP003170\n         ST    4,DCBBLKCT       BLOCK COUNT IN DCB TO ZERO              CP003180\n         STH   4,IOBRDBCI       SET NO BLOCK INCREMENT IN IOB           CP003190\n         MVI   IOBRD,X'02'  NOT CD OR CC - NO RELATED CHANNEL PROGRAMS  CP003200\n         LA    10,CLEAR         COMMON END PROCESS ADDRESS              CP003210\n         B     EXCPR              - PERFORM REQUESTED FUNCTION          CP003220\n         SPACE 3                                                        CP003230\nCPFSB    STM   14,12,12(13)     FORWARD SPACE BLOCK FUNCTION            CP003240\n         USING CPFSB,15                                                 CP003250\n         L     12,ACPRD                                                 CP003260\n         DROP  15                                                       CP003270\n         BAL   15,COMENTRY      PERFORM STANDARD CHAIN SA'S, ETC.       CP003280\n         LA    4,1(,0)                                                  CP003290\n         STH   4,IOBRDBCI       SET BLOCK INCREMENT OF 1 IN IOB         CP003300\n         MVI   IOBRD,X'02'      NO RELATED CP'S FLAG TO IOB             CP003310\n         LD    0,FSB                                                    CP003320\n         STD   0,CP             CHUNK IN THAT CCW                       CP003330\n         LA    10,CLEAR         SET FOR COMMON EXIT PROCESSING          CP003340\n         B     EXCPR            GO PERFORM FUNCTION                     CP003350\n         SPACE 3                                                        CP003360\nCPBSB    STM   14,12,12(13)     BACKSPACE ONE BLOCK FUNCTION            CP003370\n         USING CPBSB,15                                                 CP003380\n         L     12,ACPRD                                                 CP003390\n         DROP  15                                                       CP003400\n         BAL   15,COMENTRY      PERFORM STANDARD CHAIN SA'S, ETC.       CP003410\n         L     4,FM1            GET A NEGATIVE ONE                      CP003420\n         STH   4,IOBRDBCI       FOR BLOCK INCREMENT                     CP003430\n         MVI   IOBRD,X'02'      SAY NO RELATED CP'S                     CP003440\n         LD    0,BSB            MOVE APPROPRIATE CCW TO CP AREA         CP003450\n         STD   0,CP                                                     CP003460\n         LA    10,CLEAR         COMMON END PROCESSING                   CP003470\n         B     EXCPR                                                    CP003480\n*                                                                       CP003490\n         SPACE 3                                                        CP003500\nCPREW    STM   14,12,12(13)                                             CP003510\n         USING CPREW,15                                                 CP003520\n         L     12,ACPRD                                                 CP003530\n         DROP  15                                                       CP003540\n         BAL   15,COMENTRY     PERFORM STANDARD HOUSEKEEPING            CP003550\n         LA    9,DCBRD         @IHADCB                                  CP003560\n         SR    4,4             SET TO CLEAR BLOCK COUNT                 CP003570\n         ST    4,DCBBLKCT                                               CP003580\n         STH   4,IOBRDBCI      SAY DON'T INCREMENT BLOCK COUNT          CP003590\n         MVI   IOBRD,X'02'     SAY NO RELATED CP'S                      CP003600\n         LD    0,REW           REWIND TAPE CHANNEL COMMAND              CP003610\n         STD   0,CP                                                     CP003620\n         LA    10,CLEAR        COMMON END PROCESSING                    CP003630\n         B     EXCPR                                                    CP003640\n*                                                                       CP003650\n         SPACE 3                                                        CP003660\nCPRDOPEN STM   14,12,12(13)    OPEN THE INPUT TAPE DCB                  CP003670\nCPROPN   EQU   CPRDOPEN        FORTRAN WON'T ALLOW 8 CHARACTER NAMES    CP003680\n         USING CPRDOPEN,15                                              CP003690\n         L     12,ACPRD                                                 CP003700\n         DROP  15                                                       CP003710\n         BAL   15,COMENTRY     STANDARD HOUSEKEEPING                    CP003720\n         LA    9,DCBRD         @IHADCB                                  CP003730\n         OI    DCBIFLG,X'0C'   SET SO DON'T DO ERROR RECOVERY IN IOS    CP003740\n         SR    5,5             TO CLEAR DCBBLKCT, AIER                  CP003750\n         LTR   11,11           ONLY ONE ITEM IN CALL PARMLIST?          CP003760\n         BC    4,DEFAULT       ONLY ONE ARG GIVEN, USE DEFAULT DDNAME   CP003770\n         L     2,4(,1)         GET @NAME SUPPLIED FOR DDNAME            CP003780\nOPN2     MVC   DCBDDNAM(8),0(2)  MOVE WHICHEVER TO DCB DDNAME FIELD     CP003790\n         OPEN  (DCBRD,(INPUT))                                          CP003800\n         TM    DCBOFLGS,X'10'  DID OPEN SUCCEED?                        CP003810\n         BC    8,OPNE          BIF FAILED FOR SOME REASON               CP003820\n         ST    5,DCBBLKCT      BLOCK COUNT TO ZERO                      CP003830\n         OI    DCBIFLGS,X'0C'  AGAIN SET NO IOS ERROR RECOVERY ATTEMPTS CP003840\nOPN3     ST    5,AIER          RETURN WHATEVER STATUS OF OPEN           CP003850\n         B     RETURN                                                   CP003860\nOPNE     LA    5,1(,0)         SAY OPEN FAILED                          CP003870\n         B     OPN3                                                     CP003880\nDEFAULT  LA    2,DFLTDDNM POINT TO STRING 'READIN  ' FOR DCB INP DDNAME CP003890\n         B     OPN2                                                     CP003900\n*                                                                       CP003910\n         SPACE 3                                                        CP003920\nCPRDCLS  STM   14,12,12(13)   CLOSE INPUT TAPE DCB                      CP003930\nCPRCLS   EQU   CPRDCLS         - ALTERNATE FORTRAN USABLE NAME          CP003940\n         USING CPRDCLS,15                                               CP003950\n         L     12,ACPRD                                                 CP003960\n         DROP  15                                                       CP003970\n         BAL   15,COMENTRY    PERFORM STANDARD HOUSEKEEPING             CP003980\n         CLOSE DCBRD                                                    CP003990\n         B     RETURN                                                   CP004000\n*                                                                       CP004010\n         SPACE 3                                                        CP004020\nEXCPR    SR   1,1      ACTUALLY USE CCW'S BUILT FOR READ-TYPE FUNCTIONS CP004030\n         ST   1,ECBRD         MAKE ECB SAY \"NOT BUSY\"                   CP004040\n         LA   9,DCBRD         @IHADCB                                   CP004050\n         EXCP IOBRD           REQUEST EXECUTION OF CP(S)                CP004060\n*                                                                       CP004070\n         WAIT  ECB=ECBRD      HANG AROUND FOR COMPLETION OF REQUEST     CP004080\n         CLI   ECBRD,X'7F'    EQUAL SAY REQUEST COMPLETED AOK           CP004090\n         BC    8,EXCPR6        - NORMAL EXIT, NO PROBLEMS               CP004100\n         TM    IOBRDCSW+4,X'0C'  CHANNEL AND DEVICE END?                CP004110\n         BC    1,EXCPR2          YES, BOTH                              CP004120\nEXCPR1   L     1,FM3             SET TO SHOW HARDWARE FALURE            CP004130\n         B     EXCPR7                                                   CP004140\nEXCPR2   TM    IOBRDCSW+4,X'04'  UNIT CHECK?                            CP004150\n         BC    8,EXCPR4       NONE DETECTED                             CP004160\n*                                                                       CP004170\n         TM    IOBRD+2,X'F7'  EQUIPMENT MALFUNCTION?                    CP004180\n         BC    5,EXCPR1       AFRAID SO                                 CP004190\n*                                                                       CP004200\n         TM    IOBRD+2,X'02'  DATA CHECK?                               CP004210\n         BC    8,EXCPR3       NO, LOOKS OK                              CP004220\n         L     1,FM2          SET TO SHOW DATA CHECK                    CP004230\n         ST    1,AIER        & POST RETURN CODE IN ANSWER ARRAY OF USER CP004240\n*                                                                       CP004250\n* A SENSE TO OBTAIN 5 SENSE BYTES FOR ANALYSIS OF A DATA ERROR          CP004260\n*                                                                       CP004270\n        SR    1,1                                                       CP004180\n        ST    1,ECBRD        RESET ECB TO NON-BUSY STATUS               CP004190\n        ST    1,ASTATUS      CLEAR USER'S ANSWER AREA                   CP004200\n        ST    1,ASTATUS+4                                               CP004210\n        MVC   ASTATUS(1),IOBRDCSW+4  STATUS BYTE                        CP004220\n        MVC   OLDCSW(8),IOBRDCSW   SAVE READ CSW                        CP004230\n        LD    0,SENSE        BUILD NEW CP FOR SENSE COMMAND             CP004240\n        STD   0,CP                                                      CP004250\n        LA    1,ASTATUS+1-ANSWER(11)  ADDR. FOR 5 STATUS BYTES          CP004260\n        O     1,CP                                                      CP004270\n        ST    1,CP           SET ADDRESS IN CP                          CP004280\n        MVI   OBRD,X'02'     SAY NO RELATED CP'S                        CP004290\n        NI    DCBIFLGS,X'3F'   TURN OFF ERROR BITS, LEAVE REST ALONE    CP004300\n*                                                                       CP004310\n        EXCP  IOBRD                                                     CP004320\n        WAIT  ECB=ECBRD                                                 CP004330\n        NI    DCBIFLGS,X'3F'   TURN OFF ERROR BITS AGAIN                CP004340\n        MVC   ASTATUS+6(1),IOBRDCSW+4  SENSE STATUS BYTE                CP004350\n        MVC   SENSECSW(8),IOBRDCSW   STORE SENSE CSW                    CP004360\n        MVC   IOBRDCSW(8),OLDCSW     RESET READ CSW                     CP004370\n        CLI   ECBRD,X'7F'        TEST FOR ADDITIONAL ERRORS             CP004380\n        BCR   8,10               BIF NONE                               CP004390\n        MVI   ASTATUS+7,X'03'    SET NOT PERFECT COMPLETION OF SENSE    CP004400\n        BR    10                                                        CP004410\n*                                                                       CP004420\nEXCPR3  TM    IOBRD+3,X'08' TEST FOR LOAD POINT IN CASE OF BSF, BSB     CP004430\n        BC    1,EXCPR5    OR A READ BACKWARDS, DON'T SEE EOT ON FORWARD CP004440\n        ABEND 44,DUMP,STEP  KILL JOB IF SOMETHING ELSE (UNDECIPHERABLE) CP004450\n*                                                                       CP004460\nEXCPR4  TM    IOBRDCSW+4,X'01'   UNIT EXCEPTION                         CP004470\n        BC    1,EXCPR5           BIF SO                                 CP004480\n*                                                                       CP004490\n        B     EXCPR6         NOT PERFECT COMPLETION, BUT NO ERRORS NOW  CP004500\n*                                                                       CP004510\nEXCPR5  L     1,FM1              SET TO SHOW EOF ENCOUNTERED            CP004520\n        B     EXCPR7                                                    CP004530\n*                                                                       CP004540\nEXCPR6  SR    1,1               HERE, EVERYTHING LOOKS AOK              CP004550\nEXCPR7  ST    1,AIER            PASS BACK WHATEVER CONDITION WE HAVE    CP004560\n        NI    DCBIFLGS,X'3F'    CLEAR ANY EXCEPTION BITS                CP004570\n        MVC   ASTATUS(1),IOBRDCSW+4  SENSE BITS (MAYBE UNIT CHECK)      CP004580\n        MVC   ASTATUS+1(2),IOBRD+2                                      CP004590\n        BR    10                BACK TO WHOEVER CALLED INTERNALLY       CP004600\n        EJECT                                                           CP004610\nCPWT    STM   14,12,12(13)      WRITE ONE PHYSICAL RECORD (BLOCK)       CP004620\n        USING CPWT,15                                                   CP004630\n        L     12,ACPRD                                                  CP004640\n        DROP  15                                                        CP004650\n        BAL   15,COMENTRY       PERFORM STANDARD HOUSEKEEPING           CP004660\n        LM    2,3,4(1)          @DATA, @COUNT                           CP004670\n        LA    2,0(,2)           24-BIT DATA ADDR. FOR CCW'S             CP004680\n        L     3,0(,3)           VAL(COUNT)                              CP004690\n        LA    4,1(,0)                                                   CP004700\n        STH   4,IOBWTBCI        BLOCK COUNT INCREMENT                   CP004710\n        LA    4,9               MAX CCW COUNTER                         CP004720\n        MVI   IOBWT,X'02'       ASSUME NO RELATED CP'S AT FIRST         CP004730\nCPWTLP  CR    3,5               65K OR LESS?                            CP004740\n        BC    12,CPWLAST        BIF LAST OR ONLY CCW TO BUILD           CP004750\n        OI    IOBWT,X'80'       TURN ON CD BIT IN IOB                   CP004760\n        L     7,WTN                                                     CP004770\n        OR    7,2               @DATA TO CCW                            CP004780\n        ST    7,0(,6)           HALF CCW TO CP ARRAY                    CP004790\n        L     7,WTN+4             - & SECOND HALF                       CP004800\n        ST    7,4(,6)           INTO CP ARRAY                           CP004810\n        SR    3,5               DECR. # BYTES TO WRITE BY 65K           CP004820\n        AR    2,5               INCR. DATA ADDRESS                      CP004830\n        LA    6,8(,6)             & CP PTR                              CP004840\n        BCT   4,CPWTLP          MORE, IF POSSIBLE                       CP004850\n        ABEND 146,DUMP,STEP   MORE THAN 9 CCW'S REQUIRED, ABORT PROGRAM CP004860\n*                                                                       CP004870\nCPWTLAST L    7,WTF             CONSTRUCT LAST WRITE CCW                CP004880\n         OR   7,2               MAKE DATA ADDRESS                       CP004890\n         ST   7,0(,6)                                                   CP004900\n         L    7,WTF+4           FORM CCW WITH FRAG. COUNT AS LAST       CP004910\n         OR   7,3                                                       CP004920\n         ST   7,4(,6)           LAST IN CP ARRAY                        CP004930\n         LA   7,10              NOW CALC. HOW MANY CCW'S BUILT IN CHAIN CP004940\n         SR   7,4                                                       CP004950\n         ST   7,NUMCCW                                                  CP004960\n         LA   10,RETURN         SET FOR COMMON END PROCESSING           CP004970\n         B    EXCPW             PERFORM THE ACTUAL I/O                  CP004980\n*                                                                       CP005000\n         SPACE 3                                                        CP005010\nCPWERG   STM   14,12,12(13)     ERASE GAP FUNCTION                      CP005020\n         USING CPWERG,15                                                CP005030\n         L     12,ACPRD         SET UP STANDARD BASE REG                CP005040\n         DROP  15                                                       CP005050\n         BAL   15,COMENTRY      PERFORM STANDARD HOUSEKEEPING           CP005060\n         SR    4,4              SAY NO BLOCK COUNT INCREMENT            CP005070\n         STH   IOBWTBCI                                                 CP005080\n         LD    0,ERG            MOVE THE CCW TO THE CP ARRAY            CP005090\n         STD   0,CP              - SINGLE CCW                           CP005100\n         MVI   IOBWT,X'02'      SAY NO CD, CC OR OTHER CP               CP005110\n         LA    10,RETURN        COMMON END PROCESING                    CP005120\n         B     EXCPW            PERFORM CHANPROG                        CP005130\n*                                                                       CP005140\n         SPACE 3                                                        CP005150\nCPWTM   STM    14,12,12(13)     WRITE A TAPE MARK FUNCTION              CP005160\n        USING  CPWTM,15                                                 CP005170\n        L      12,ACPRD         GET STANDARD BASE                       CP005180\n        DROP   15                                                       CP005190\n        BAL    15,COMENTRY      PERFORM STANDARD HOUSEKEEPING           CP005200\n        LA     9,DCBWT          @IHADCB FOR WRITE DCB                   CP005210\n        SR     4,4            CLEAR BLOCK COUNT, BLOCK COUNT INCREMENT  CP005220\n        ST     4,DCBBLKCT                                               CP005230\n        STH    4,IOBWTBCI                                               CP005340\n        LD     0,WTM            MOVE CCW TO CP ARRAY                    CP005350\n        STD    0,CP                                                     CP005360\n        MVI    IOBWT,X'02'      TURN OFF ALL CHAIN STUFF                CP005370\n        LA     10,RETURN        STANDARD END PROCESSING                 CP005380\n        B      EXCPW            GO EXECUTE THE CCW                      CP005390\n*                                                                       CP005400\n        SPACE 3                                                         CP005410\nCPERAS  STM   14,12,12(13)      DATA SECURITY ERASE TO EOT MARKER       CP005420\n        USING CPERAS,15                                                 CP005430\n        L     12,ACPRD          GET STANDARD BASE REG SET               CP005440\n        DROP  15                                                        CP005450\n        BAL   15,COMENTRY       DO STANDARD HOUSEKEEPING                CP005460\n        SR    4,4               CLEAR BLOCK COUNT INCREMENT             CP005470\n        STH   4,IOBWTBCI                                                CP005480\n        LD    0,ERASEXX         MOVE CCW'S                              CP005490\n        STD   0,CP                                                      CP005500\n        LD    0,REALERAS                                                CP005510\n        STD   0,CP+8                                                    CP005520\n        MVI   IOBWT,X'C0'       TURN ON CHAIN BIT FLAGS                 CP005530\n        LA    10,RETURN                                                 CP005540\n        B     EXCPW             PERFORM FUNCTION                        CP005550\n*                                                                       CP005560\n        SPACE 3                                                         CP005570\nCPWREW  STM   14,12,12(13)    REWIND OUTPUT TAPE (FOR VOLID CHKS, ETC.) CP005580\n        USING CPREW,15                                                  CP005590\n        L     12,ACPRD          SET STANDARD BASE REG                   CP005600\n        DROP  15                                                        CP005610\n        BAL   COMENTRY          PERFORM STANDARD HOUSEKEEPING           CP005620\n        LA    9,DCBWT                                                   CP005630\n        SR    4,4               SET TO CLEAR BLOCK COUNT                CP005640\n        ST    4,DCBBLKCT                                                CP005650\n        STH   4,IOBWTBCI        SAY NO NCREMENT                         CP005660\n        MVI   IOBWT,X'02'       NO CHAINING, NO RELATED CP'S            CP005670\n        LD    0,REW                                                     CP005670\n        STD   0,CP              REWIND COMMAND TO CP ARRAY              CP005680\n        LA    10,RETURN                                                 CP005690\n        B     EXCPW             ACTUALLY GO REWIND TAPE                 CP005700\n*                                                                       CP005710\n        SPACE 3                                                         CP005720\nCPWRED  STM  14,12,12(13)       DO READ FROM OUTPUT TAPE (CF. CPWREW)   CP005730\n        USING CPREW,15                                                  CP005740\n        L     12,ACPRD          STANDARD BASE REG                       CP005750\n        DROP  15                                                        CP005760\n        BAL   15,COMENTRY       STANDARD HOUSEKEEPING                   CP005770\n        LM    2,3,4(1)          @DATA, @COUNT                           CP005780\n        LA    2,0(,2)           24-BIT FOR CCW ADDR. FIELD              CP005790\n        LA    4,1(,0)           BLOCK COUNT INCREMENT                   CP005800\n        STH   4,IOBWTBCI                                                CP005810\n        LA    4,9(,0)           MAX # CCW'S                             CP005820\n        MVI   IOBWT,X'02' ASSUME HAVE NO MORE THAN ONE CCW IN CP ARRAY  CP005830\n        L     3,0(,3            VAL(COUNT OF BYTES TO READ)             CP005840\nCPWRLP1 CR    3,5               LESS THAN EQUAL 65K?                    CP005850\n        BC    12,CPWRLST         BIF SO                                 CP005860\n        OI    IOBWT,X'80'       SAY DATA CHAINING                       CP005870\n        L     8,RDN                                                     CP005880\n        OR    8,2               BUILD ADDR. PART OF CCW                 CP005890\n        ST    8,0(,6)                                                   CP005900\n        L     8,RDN+4           AND MAX. CT. PART OF A CP               CP005910\n        ST    8,4(,6)                                                   CP005920\n        SR    3,5               DECR BYTE COUNT BY 65K                  CP005930\n        LA    6,8(,6)           BUMP CP ARRAY PTR                       CP005940\n        AR    2,5               @DATA := @DATA + 65K                    CP005950\n        BCT   4,CPWRLP1         BUILD ANOTHER, IF POSSIBLE              CP005970\n        ABEND 46,DUMP,STEP      MORE THAN 9 CCW'S REQUIRED              CP005980\nCPWRLST  L    8,RDF             BUILD LAST (OR ONLY) CCW IN CHAIN       CP005990\n         OR   8,2                                                       CP006000\n         ST   8,0(,6)           ADDRESS PART TO CP                      CP006010\n         L    8,RDF+4                                                   CP006020\n         OR   8,3               COUNT PART OF CCW TO CP                 CP006030\n         ST   8,4(,6)                                                   CP006040\n         LA   8,10(,0)          CALC. # CCW'S BUILT                     CP006050\n         SR   8,4                                                       CP006060\n         ST   8,NUMCCW                                                  CP006070\n         BAL  10,EXCPW          GO TRY TO READ FROM AN OUTPUT TAPE      CP006080\n*                                                                       CP006090\n         C    1,FM2             BACK FROM EXCP, CHECK FOR ERRORS        CP006100\n         BC   4,CLEAR           HW FAILURE, CLEAR COUNT XFER'D & EXIT   CP006110\n         L    2,IOBWTCSW                                                CP006120\n         LA   2,0(,2)           FORM 24-BIT ADDRESS                     CP006130\n         S    2,F8              POINT TO LAST CCW USED                  CP006140\n         LR   3,2                                                       CP006150\n         L    1,IOBWTCSW+4                                              CP006160\n         N    1,MASK            ALL BUT BYTE COUNT FIELD                CP006170\n         LA   6,CP                                                      CP006180\n         SR   3,6                                                       CP006190\n         SRA  3,3(0)                                                    CP006200\n         MR   4,3               NOW, R5 = BYTES EXCEPT LAST CCW         CP006210\n         L    4,4(,2)           BYTE COUNT OF PARTIAL CCW               CP006220\n         N    4,MASK            BYTES POSSIBLE IN LAST CCW              CP006230\n         SR   4,1                                                       CP006240\n         AR   4,5                                                       CP006250\n         ST   4,APARTIAL        FINAL COUNT OF DATA READ                CP006260\n         LA   4,1(,0)                                                   CP006270\n         ST   4,APART                                                   CP006280\n         B    RETURN   STANDARD EXIT                                    CP006290\n* NOTE THAT MINIMAL ERROR CHECKING IS DONE WHEN READING OUTPUT TAPE,    CP006300\n* SINCE IT IS PRESUMED THAT THIS IS DONE RARELY, AND OS HAS CHECKED     CP006310\n* WHAT PROBABLY IS BEING READ ANYWAY.                                   CP006320\n*                                                                       CP006330\n         SPACE 3                                                        CP006340\nCPWTOPEN STM  14,12,12(13)     OPEN THE DCB FOR THE TAPE TO BE WRITTEN  CP006350\nCPWOPN   EQU  CPWTOPEN         ALTERNATE NAME                           CP006360\n         USING CPWTOPEN,15                                              CP006370\n         L    12,ACPRD                                                  CP006380\n         DROP 15                                                        CP006390\n         BAL  15,COMENTRY      PERFORM STANDARD HOUSEKEEPING            CP006400\n         LA   9,DCBWT          @IHADCB                                  CP006410\n         LTR  11,11            NEG SAYS ONE PARM - USE DEFAULT DDNAME   CP006420\n         BC   4,DFLTOPEN       IN THE DCB FOR THE TAPE                  CP006430\n         L    2,4(,1)          ELSE USE STRING PASSED AS DDNAME         CP006440\nOPEN2    MVC  DCBDDNAM(8),0(2)   FILL DCB WITH WHICHEVER                CP006450\n         OPEN (DCBWT,(OUTPUT))                                          CP006460\n         TM   DCBOFLGS,X'10'   DID DCB OPEN SUCCESSFULLY?               CP006470\n         BC   8,OPENFAIL       NO, IT DID NOT                           CP006480\n         SR   5,5                                                       CP006490\n         ST   5,DCBBLKCT       SAY NO BLOCKS PROCESSED                  CP006500\nOPEN3    ST   5,AIER           POST COMPLETION CODE TO CALLER           CP006510\n         B    RETURN           TAKE STANDARD EXIT                       CP006520\nOPENFAIL LA   5,1              SAY OPEN FAILED                          CP006530\n         B    OPEN3            GO POST WITHOUT FURTHER ACTION           CP006540\nDFLTOPEN LA  2,DFLTDDWT SET TO MOVE \"SYSTAPE \" TO DCB BEFORE OPENING IT CP006550\n         B    OPEN2                                                     CP006560\n*                                                                       CP006570\n         SPACE 3                                                        CP006580\nCPWTCLS  STM  14,12,12(13)  PERFORM A CLOSE ON THE DCB FOR OUTPUT TAPE  CP006590\nCPWCLS   EQU  CPWTCLS                                                   CP006600\n         USING CPWTCLS,15                                               CP006610\n         L    12,ACPRD                                                  CP006620\n         DROP  15                                                       CP006630\n         BAL   15,COMENTRY     STANDARD HOUSEKEEPING                    CP006640\n         CLOSE DCBWT                                                    CP006650\n         B     RETURN          SHORT AND SWEET                          CP006660\n         EJECT                                                          CP006670\n*                                                                       CP006680\n***** ACTUALLY DO EXCP I/O FOR TAPE WRITES (MOSTLY).                    CP006690\n*                                                                       CP006700\nEXCPW   SR    1,1                                                       CP006710\n        ST    1,ECBWT         RESET STATUS FOR ECB TO NOT BUSY          CP006720\n        EXCP  IOBWT           REQUEST IOS DO CHANPROG                   CP006730\n        WAIT  ECB=ECBWT       HANG AROUND UNTL COMPLETE                 CP006740\n*                                                                       CP006750\n        CLI   ECBWT,X'7F'     IOS SAY AOK?                              CP006760\n        BC    8,EXCPW6        BIF NO ERRORS                             CP006770\n        TM    IOBWTCSW+4,X'0C'   DEVICE AND CHANNEL END?                CP006780\n        BC    1,EXCPW2        YES, BOTH                                 CP006790\nEXCPW1  L     1,FM3           SET ANSWER TO -3 (HW FAILURE)             CP006800\n        B     EXCPW7          GO POST RETURN CODE TO USER               CP006810\nEXCPW2  TM    IOBWTCSW+4,X'02'  DID WE GET UNIT CHECK?                  CP006820\n        BC    8,EXCPW4        NO, MUST BE SOMETHING ELSE                CP006830\n        TM    IOBWT+2,X'F7'   EQUIPMENT MALFUNCTION?                    CP006840\n        BC    5,EXCPW1        JUST GO REPORT IT BACK TO CALLER          CP006850\n        TM    IOBWT+2,X'08'   DATA CHECK?                               CP006860\n        BC    8,EXCPW3        NO, PERHAPS EOT (BOT IF READ OP)          CP006870\n        L     1,FM2           SAY DATA CHECK                            CP006880\n        B     EXCPW7          GO POST THAT CODE                         CP006890\nEXCPW3  TM    IOBWT+3,X'09'   REFLECTIVE MARKER OF SOME SORT SEEN       CP006900\n        BC    1,EXCPW5                                                  CP006910\n        ABEND 144,DUMP,STEP   UNDECIPHERABLE ERROR, GIVE UP AND DIE     CP006920\n*                                                                       CP006930\nEXCPW4  TM    IOBWTCSW+4,X'01'  DEFINITELY UNIT EXCEPTION?              CP006940\n        BC    1,EXCPW5        BIF SO                                    CP006950\n        B     EXCPW6       MUST HAVE BEEN SYSTEM RETRY FOR SOME REASON  CP006960\nEXCPW5  L     1,FM1        SAY UNIT EXCEPTION (REFLECTIVE MARKER FOUND) CP006970\n        B     EXCPW7                                                    CP006980\nEXCPW6  SR    1,1             SAY NO ERRORS                             CP006990\nEXCPW7  ST    1,AIER          SET MAJOR RETURN STATUS TO CALLER         CP007000\n        MVC   ASTATUS(1),IOBWTCSW+4   HARDWARE STATUS BYTE              CP007010\n        MVC   ASTATUS+1(2),IOBWT+2   UNIT CHECK BYTES, IF ANY           CP007020\n        BR    10              RETURN TO INTERNAL CALLER                 CP007030\n*                                                                       CP007040\n       SPACE 3                                                          CP007050\n* VARIOUS DATA AREAS, CONSTANTS, CHANNEL PROGRAMS NEEDED                CP007060\nACPRD   DC   A(CPRD)   BASE ADDRESS FOR ALL INTERNAL INTERNAL ROUTINES  CP007070\nSAVERD  DS   9D               STANDARD OS SAVE AREA FOR GPR'S           CP007080\nCP      DC   10D'0'           ARRAY FOR ALL THE CCW'S WE MAY BUILD      CP007090\nFM1     DC   F'-1'                                                      CP007100\nFM2     DC   F'-2'                                                      CP007110\nFM3     DC   F'-3'                                                      CP007120\nF8      DC   F'8'                                                       CP007130\nMASK    DC   XL4'0000FFFF'                                              CP007140\nMAX     DC   F'65535'                                                   CP007150\nNUMCCW  DC   F'0'                                                       CP007170\nDFLTDDWT DC  CL8'SYSTAPE '     DEFAULT DDNAME FOR OUTPUT TAPE IN JCL    CP007180\nDFLTDDNM DC  CL8'READIN  '     SAME THING, INPUT TAPE                   CP007190\nACCW2    DC  A(0)                                                       CP007200\nACCW3    DC  A(0)                                                       CP007210\nACCWD    DC  A(16777215)                                                CP007220\n*                                                                       CP007230\n* CONTROL BLOCKS FOR READ OPERATIONS                                    CP007240\nECBRD   DC   F'0'      EVENT CONTROL BLOCK                              CP007250\nIOBRD   DC   F'0'      IOB FOR READ                                     CP007260\n        DC   A(ECBRD)  @ECB FOR THIS IOB                                CP007270\nIOBRDCSW DC  2F'0'     SLOTS FOR CHANNEL STATUS WORDS                   CP007280\nIOBRDACP DC  A(CP)     ADDRESS OF CHANNEL PROGRAM ARRAY                 CP007290\nIOBRDDCB DC  A(DCBRD)  ADDRESS OF DCB                                   CP007300\n         DC  F'0'      IOBRESTR (PURGE CHAIN/CCHH/COMMAND,CHANPROG)     CP007310\nIOBRDBCI DC  H'1'      BLOCK COUNT INCREMENT                            CP007320\nIOBRDECT DC  H'0'      ERROR COUNTS                                     CP007330\nSENSECSW DS  2F        CSW FOR THE SENSE COMMAND WE MAY HAVE USED       CP007340\nOLDCSW   DS  2F        CSW FOR READ WHILE DOING SENSE                   CP007350\n*                                                                       CP007360\n* CONTROL BLOCKS FOR WRITE OPERATIONS                                   CP007370\nECBWT    DC  F'0'      EVENT CONTROL BLOCK                              CP007380\nIOBWT    DC  F'0'      IOB FOR WRITE                                    CP007390\n         DC  A(ECBWT)  ADDRESS OF ECB FOR THIS IOB                      CP007400\nIOBWTCSW DC  2F'0'     CSW RETURNED BY IOS                              CP007410\nIOBWTACP DC  A(CP)     ADDR. OF CHANNEL PROGRAM ARRAY                   CP007420\nIOBWTDCB DC  A(DCBWT)  DCB FOR OUTPUT TAPE                              CP007430\n         DC  2F'0'                                                      CP007440\nIOBWTBCI DC  F'1'      WRITE BLOCK COUNT INCREMENT                      CP007450\nIOBWTECT DC  H'0'      WRITE ERROR COUNTS                               CP007460\n*                                                                       CP007470\n****** SKELETON CHANNEL COMMAND WORDS *****                             CP007480\n*                                                                       CP007490\nWTN     DC   X'01'     WRITE COMMAND FOR TAPE UNITS (MAX COUNT)         CP007500\n        DC   AL3(0)    SKELETON DATA ADDRESS                            CP007510\n        DC   X'A0'     CD, SLI FLAG BITS                                CP007520\n        DC   AL3(65535)   MAX BYTE COUNT FOR XFER                       CP007530\nWTF     DC   X'01'     WRITE COMMAND, MIN. COUNT                        CP007540\n        DC   AL3(0)    ADDRESS FIELD FOR DATA                           CP007550\n        DC   X'20'     SLI BIT ONLY                                     CP007560\n        DC   AL3(0)    FINAL COUNT (MUST BE AT LEAST 1)                 CP007570\nWTM     DC   X'1F'     CONTROL - WRITE FILE MARK                        CP007580\n        DC   AL3(CP)   JUST AN ADDRESS - PRESUMABLY ANY WOULD DO        CP007590\n        DC   X'20'     SLI BIT ONLY                                     CP007600\n        DC   AL3(1)    CHANNEL REQUIREMENT - MIN ONE BYTE XFER          CP007610\nERG     DC   X'17'     CONTROL - ERAWE GAP                              CP007620\n        DC   AL3(CP)   AGAIN, JUST AN ADDRESS                           CP007630\n        DC   X'20'     SLI BIT ONLY                                     CP007640\n        DC   AL3(1)    CHANNEL REQUIREMENT                              CP007650\nERASEXX DC   X'17'     FAKE TO MAKE SECURITY ERASE WORK                 CP007660\n        DC   AL3(CP)   JUST AN ADDRESS                                  CP007670\n        DC   X'60'     CC, SLI BITS                                     CP007680\n        DC   AL3(1)    CHANNEL REQUIREMENT                              CP007690\nREALERAS DC  X'97'     CONTROL - DATA SECURITY ERASE                    CP007700\n         DC  AL3(CP)   AGAIN, JUST AN ADDRESS                           CP007710\n         DC  X'20'     SLI FLAG BIT                                     CP007720\n         DC  AL3(1)    CHANNEL REQUIREMENT                              CP007730\n*                                                                       CP007740\n***** READ-TYPE CHANNEL COMMANDS WE MAY USE *****                       CP007750\n*                                                                       CP007760\nRDN      DC  X'02'     READ COMMAND FOR TAPE UNITS (MAX COUNT)          CP007770\n         DC  AL3(0)    SKELETON READ ADDRESS                            CP007780\n         DC  X'A0'     CD, SLI FLAG BITS                                CP007790\n         DC  AL3(65535)  MAX CCW DATA COUNT FIELD                       CP007800\n* NOTE THAT THE MAXIMUM TRANSFER COUNT IS X'FFFF',OR 65535, NOT X'7FFF' CP007810\nRDF      DC  X'02'     MAG TAPE READ, SKELETON ADDR., BYTE COUNT        CP007820\n         DC  AL3(0)    DATA ADDRESS                                     CP007830\n         DC  X'20'     SLI BIT ONLY                                     CP007840\n         DC  AL3(0)  PRESUMABLY, A VALID COUNT WILL BE BUILT FOR THIS   CP007850\nRDB      DC  X'0C'     TAPE READ BACKWARDS                              CP007860\n         DC  AL3(0)    @DATA                                            CP007870\n         DC  X'A0'     CD, SLI FLAG BITS                                CP007880\n         DC  AL3(65535)  MAX DATA COUNT                                 CP007890\nRDBF     DC  X'0C'     TAPE READ BACKWARDS, SKELETON COUNT              CP007900\n        DC   AL3(0)    @DATA SKELETON                                   CP007910\n        DC   X'20'     SLI BIT                                          CP007920\n        DC   AL3(0)    RESIDUAL BYTE COUNT SKELETON                     CP007930\nFSF     DC   X'3F'     CONTROL - FORWARD SPACE ONE FILE MARK            CP007930\n        DC   AL3(CP)   DUMMY, BUT ADDR REQUIRED BY CHANNEL              CP007940\n        DC   X'20'     SLI BIT ONLY                                     CP007950\n        DC   AL3(1)    CHANNEL REQUIREMENT                              CP007960\nBSF     DC   X'2F'     CONTROL - BACKSPACE ONE FILE MARK                CP007970\n        DC   AL3(CP)   DUMMY ADDRESS                                    CP007980\n        DC   X'20'     SLI BIT                                          CP007990\n        DC   AL3(1)    CHANNEL REQUIREMENT                              CP008000\nFSB     DC   X'37'     CONTROL - FORWARD SPACE ONE BLOCK                CP008010\n        DC   AL3(CP)   DUMMY                                            CP008020\n        DC   X'20'     SLI BIT                                          CP008030\n        DC   AL3(1)    CHANNEL REQUIREMENT                              CP008040\nBSB    DC  X'27'       CONTROL - BACKSPACE ONE BLOCK                    CP008050\n       DC  AL3(CP)     DUMMY                                            CP008060\n       DC  X'20'       SLI BIT                                          CP008070\n       DC  AL3(1)      CHANNEL REQUIREMENT                              CP008080\nSENSE  DC  X'04'       CONTROL/QUERY - SENSE COMMAND                    CP008090\n       DC  AL3(0)      FILLED IN DURING EXECUTION IF NEEDED             CP008100\n       DC  X'20'       SLI BIT                                          CP008110\n       DC  AL3(5)      REQUEST 5 SENSE BYTES FROM CHANNEL/DEVICE        CP008120\nREW    DC  X'07'       CONTROL - REWIND TAPE                            CP008130\n       DC  AL3(CP)     DUMMY                                            CP008140\n       DC  X'20'       SLI BIT                                          CP008150\n       DC  AL3(1)      CHANNEL REQUIREMENT                              CP008160\n*                                                                       CP008170\nDCBRD   DCB MACRF=(E),DEVD=TA,DSORG=PS,IOBAD=IOBRD,DDNAME=NONE,OPTCD=Z  CP008180\n* OPTCD=Z REQUESTS REDUCED ERROR RECOVERY BY IOS                        CP008190\n*                                                                       CP008200\nDCBWT   DCB MACRF=(E),DEVD=TA,DSORG=PS,IOBAD=IOBWT,DDNAME=NONE,OPTCD=Z  CP008210\nANSWER   DSECT                                                          CP008220\nAIER     DS    F    ERROR CODE FOR CALLER                               CP008230\nAPART    DS    F    PARTIAL COMPLETION INDICATOR                        CP008240\nAPARTIAL DS    F    BYTES ACTUALLY READ                                 CP008250\nASTATUS  DS    2F   UNIT STATUS AND SENSE BYTES                         CP008260\n         DCBD  DSORG=PS,DEVD=TA                                         CP008270\n         END   CPRDTAPE                                                 CP008280\n\n\n\n\n\n\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT524/FILE524.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT524", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}