{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011940000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1234506, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 10, "INMDSNAM": "CBT.V500.FILE407.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1234506, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1234506, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE407.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x14\\n'", "DS1TRBAL": "b'E\\xfe'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\xec\\x00\\x0b\\x02\\xee\\x00\\x01\\x00\\x15'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04]\\x00Q\\x01\\x165o\\x01\\x165o\\x14X\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf3@@@'", "ispf": {"version": "04.93", "flags": 0, "createdate": "2016-12-21T00:00:00", "modifydate": "2016-12-21T14:58:51", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-493"}, "text": "REGULAR CBT TAPE - VERSION 493    FILE:  407\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT493.FILE407\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 24 MEMBERS COUNTED; CUMULATIVE SIZE IS 11,384 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/21/16    14:58:51    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$XADOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00C\\x00C\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 67, "newlines": 67, "modlines": 0, "user": "FILE407"}, "text": "                DOCUMENTATION FOR XA VERSION OF DYNABLDL\n\n\n      DYNABLDL HAS BEEN CHANGED TO RUN UNDER XA.  UNDER XA, IT IS A\nREPLACEMENT FOR LLA.  IN ORDER TO USE DYNABLDL UNDER XA, YOU MUST STOP\nLLA FIRST, THEN START THE DYNABLDL PROC.\n\n      AT PRESENT, THE XA VERSION OF DYNABLDL IS A DIFFERENT PROGRAM\nFROM THE MVS/370 VERSION.  THE XA SOURCE IS CALLED \"DYNABLDX\" ON THIS\nPDS, AND THE SAMPLE JOB TO ASSEMBLE AND LINKEDIT THE XA VERSION IS\nCALLED $ASMLINX.  THE XA ASSEMBLY MUST BE DONE WITH ASSEMBLER H VERSION\n2.  AMODE OF THE LOAD MODULE MUST BE 31, RMODE IS 24.\n\n      IT IS UP TO THE USER TO DECIDE IF LLA OR DYNABLDL IS BETTER FOR\nHIS OWN SHOP.  A CRUDE PERFORMANCE TOOL HAS BEEN INCLUDED WITH THIS\nDISTRIBUTION.  THIS IS AN ASSEMBLER PROGRAM CALLED \"BLDLTEST\" IN WHICH\nTHE USER HARD-CODES A BLDL REQUEST FOR A LIST OF LOAD MODULES OF HIS\nOWN CHOICE.  THE CLIST \"BT\" RUNS THE PROGRAM A GIVEN NUMBER OF TIMES,\nAND TAKES CRUDE TIMING STATISTICS.\n\n      YOU ALONE MUST DECIDE IF DYNABLDL XA IS A GOOD TOOL FOR YOUR\nXA SYSTEM.  YOU MAY FIND THAT THE DYNABLDL REPORT WHICH SHOWS ALL LOAD\nMODULES HIT, MAY OFFSET ANY SLIGHT PERFORMANCE DISADVANTAGES THAT\nDYNABLDL XA MAY HAVE AGAINST LLA.  DYNABLDL COMES UP AND DOWN MUCH\nMORE QUICKLY THAN LLA, AND MAY ALLOW BETTER PERFORMANCE ON A SYSTEM\nWITH REAL STORAGE CONSTRAINTS, BECAUSE ITS TABLE OCCUPIES VERY FEW\nPAGES, AS COMPARED TO LLA'S TABLE.\n\n      PLEASE LOOK AT MEMBER \"SYNCNOTE\" FROM DAVE ANDREWS.\n\n      ONLY THREE VERSIONS OF DYNABLDL RECOGNITION CODE HAVE THUS FAR\nBEEN CODED FOR XA LEVELS OF IGC018.  THERE ARE MANY OTHER XA LEVELS\nOF IGC018 IN CIRCULATION.  RECOGNITION CODE FOR IGC018 IS BUILT INTO\nDYNABLDL SOURCE CODE, SO DYNABLDL RECOGNIZES THE VERSION OF THE BLDL\nSVC IGC018 THAT YOU ARE RUNNING.  TO ADD ADDITIONAL RECOGNITION CODE,\nYOU NEED MICROFICHE FOR THE LEVEL OF IGC018 THAT YOU ARE RUNNING.  I\nAM INCLUDING A FEW HELPFUL HINTS FOR FITTING RECOGNITION CODE TO YOUR\nIGC018.  THESE ARE IN MEMBER $RECOGN.  IF YOUR IGC018 IS KNOWN ALREADY\nTO DYNABLDL, YOU NEED ONLY ASSEMBLE AND LINKEDIT THE PROGRAM, TURN OFF\nLLA, ADD THE VARIOUS DYNABLDL PROCS TO SYS1.PROCLIB, AND START THE\nDYNABLDL PROC.  IF YOU SUCCESSFULLY CODE DYNABLDL RECOGNITION CODE\nFOR ANOTHER VERSION OF IGC018, KINDLY SEND YOUR CODE TO SAM GOLOB\nAT NEWSWEEK, INC., 333 ROUTE 46 WEST, MOUNTAIN LAKES, NJ 07046, OR TO\nARNOLD CASINGHINO AT CBT.  THIS WAY, OTHER PEOPLE DON'T HAVE TO\nREINVENT THE WHEEL.\n\n      THE XA UPGRADE WAS DONE BY JOHN WILLIAMS OF WESTERN UNION/EDS\nOF MAHWAH, NEW JERSEY.  THE CHANGE CONSISTED OF MAKING SURE THE AMODE\nWAS 31, AND TURNING OFF XA PAGE PROTECTION WHILE INSERTING AND\nREMOVING DYNABLDL'S HOOKS INTO IGC018.  THIS WAS NECESSARY BECAUSE\nIGC018 IS LOADED INTO THE READ-ONLY NUCLEUS AREA ABOVE THE 16M LINE IN\nAN XA SYSTEM.  SOME ASSISTANCE WAS PROVIDED BY JEFF BROIDO OF BROIDO\nCOMPUTER CONSULTING.  SAM GOLOB OF NEWSWEEK MERGED IN HIS CODE TO\nOPTIONALLY EXCLUDE CERTAIN LINKLIST LIBRARIES THAT YOU MAY NOT WANT\nDYNABLDL TO RECOGNIZE.\n\n         CURRENTLY SUPPORTED XA VERSIONS OF IGC018    (AS OF 10/24/90)\n\n                               FMID       RMID\n                VERSION 13    HDP2230    UY06422\n                VERSION 14    JDP2220    UY02277\n                VERSION 15    HDP2240    UY41197\n\n       IF YOU NEED HELP IN FITTING IGC018 RECOGNITION CODE, YOU\nMAY CALL SAM GOLOB, NEWSWEEK,             , OR DAVE COLE, AT COLE\nSOFTWARE, 703-456-8536, OR DAVE ANDREWS, DUDA, 407-365-2153.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$ASMLINK": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00!\\x00!\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "FILE407"}, "text": "//TST2DP2A JOB ,'TECH.SUPPORT',CLASS=M,NOTIFY=TST2SSG,TIME=1440,\n//        MSGLEVEL=(1,1),MSGCLASS=T\n//*\n//***********************************************************\n//*                                                         *\n//*      SAMPLE JCL TO ASSEMBLE AND LINKEDIT THE DYNABLDL   *\n//*      PROGRAM.                                           *\n//*                                                         *\n//*      \"COLE.MACLIB\" IS AVAILABLE FROM THE CBT TAPE AS OF *\n//*      VERSION 224 (JANUARY 15, 1984) IN FILE 408.        *\n//*                                                         *\n//*   VERSION TO SAVE OBJECT CODE                           *\n//***********************************************************\n//*\n//ASM     EXEC PGM=IFOX00,REGION=1024K,\n//             PARM='TEST,TERM,LOAD,NODECK'\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DSN=TST2SSG.DAVECOLE.MACLIB,DISP=SHR\n//         DD  DSN=TSY2.MACLIB,DISP=SHR\n//         DD  DSN=TSY2.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSGO    DD  DSN=TST2SSG.A.DATA(DYNABLDP),DISP=SHR\n//SYSIN    DD  DSN=TST.DYNABLDL.INSTALL(DYNABLDL),DISP=SHR\n//*\n//LKED    EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='TEST,NCAL,LIST,XREF'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD  DD  DSN=TST.TSO.CMDLIB(DYNABLDL),DISP=SHR\n//SYSLIN   DD  DSN=TST2SSG.A.DATA(DYNABLDP),DISP=SHR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$ASMLINX": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00 \\x00 \\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "FILE407"}, "text": "//TST2DP2A JOB ,'TECH.SUPPORT',CLASS=M,NOTIFY=TST2SSG,TIME=1440,\n//        MSGLEVEL=(1,1),MSGCLASS=T\n//***********************************************************\n//* XA XA XA XA XA XA XA XA XA XA XA XA XA XA XA XA XA XA XA*\n//*      SAMPLE JCL TO ASSEMBLE AND LINKEDIT THE DYNABLDL   *\n//*      PROGRAM.                                           *\n//*                                                         *\n//*      \"COLE.MACLIB\" IS AVAILABLE FROM THE CBT TAPE AS OF *\n//*      VERSION 224 (JANUARY 15, 1984) IN FILE 408.        *\n//* XA XA XA XA XA XA XA XA XA XA XA XA XA XA XA XA XA XA XA*\n//***********************************************************\n//*\n//ASM     EXEC PGM=IEV90,REGION=2048K,\n//             PARM='TEST,TERM,LOAD,NODECK'\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DSN=TST2SSG.DAVECOLE.MACLIB,DISP=SHR\n//         DD  DSN=TSY2.MACLIB,DISP=SHR\n//         DD  DSN=TSY2.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLIN   DD  DSN=&&OBJ,UNIT=SYSDA,SPACE=(TRK,(15,15)),\n//             DISP=(,PASS),DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//SYSIN    DD  DSN=TST.DYNABLDL.INSTALL(DYNABLDX),DISP=SHR\n//*\n//LKED    EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='TEST,NCAL,LIST,XREF'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD  DD  DSN=TST.TSO.CMDLIB(DYNABLDL),DISP=SHR\n//SYSLIN   DD  DSN=&&OBJ,DISP=(OLD,PASS)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$NEWCODE": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00A\\x00A\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 65, "newlines": 65, "modlines": 0, "user": "FILE407"}, "text": "*  THIS IS CODE INTRODUCED BY THE LIBRARY EXCLUSION FEATURE.  11/86 SBG\n*   YOU MUST CHANGE THIS CODE IN THE DYNABLDL SOURCE PROGRAM  11/86 SBG\n*   ITSELF.  THIS IS FOR ILLUSTRATIVE PURPOSES ONLY AND IS    11/86 SBG\n*   NOT A COPY MEMBER.                                        11/86 SBG\n*                                                             11/86 SBG\n*  TO DETERMINE WHICH LIBRARIES TO EXCLUDE, LOOK AT YOUR      11/86 SBG\n*   ACTIVE LINKLIST MEMBER (LNKLST--) IN SYS1.PARMLIB.        11/86 SBG\n*   START COUNTING FROM 0.  SYS1.LINKLIB IS LIBRARY 0.        11/86 SBG\n*   WHEN YOU HAVE DETERMINED THE LIBRARY NUMBERS YOU WANT     11/86 SBG\n*   TO EXCLUDE, GO INTO THE DYNABLDL CODE AND SET &LIBEX      11/86 SBG\n*   TO 'YES'.  THEN SET AS MANY &L- VARIABLES AS YOU NEED     11/86 SBG\n*   TO THE DESIRED LIBRARY NUMBERS.  A VALUE OF 15 NULLIFIES  11/86 SBG\n*   A &L- ENTRY.  SEE THE CODE EXAMPLE BELOW.                 11/86 SBG\n*                                                             11/86 SBG\n************************************************************* 11/86 SBG\nEXCLLIBS DS    0H         NEWSWEEK CODE TO GIVE LIBRARY       11/86 SBG\n*                         EXCLUSION OPTION BY CONDITIONAL     11/86 SBG\n*                         ASSEMBLY.  TO TURN ON THE OPTION,   11/86 SBG\n*                         SETC &LIBEX TO 'YES', AND SET       11/86 SBG\n*                         AS MANY LIBRARY EXCLUDE VARIABLES   11/86 SBG\n*                         AS YOUR INSTALLATION REQUIRES.      11/86 SBG\n*                         A SETTING OF 15 NULLIFIES AN ENTRY. 11/86 SBG\n************************************************************* 11/86 SBG\n*   WE INTRODUCE LOCAL VARIABLES FOR THE PURPOSE OF         * 11/86 SBG\n*     EXCLUDING LINKLIST LIBRARIES WHICH WE DON'T WANT      * 11/86 SBG\n*     DYNABLDL TO HIT, FOR WHATEVER PURPOSE.  OUR INSTAL-   * 11/86 SBG\n*     LATION HAS APPLICATION PROGRAMMER LIBRARIES IN THE    * 11/86 SBG\n*     LINKLIST, BECAUSE WE DON'T WANT THEM TO CODE STEPLIB  * 11/86 SBG\n*     IN PRODUCTION JCL.  WE THEREFORE DON'T WANT DYNABLDL  * 11/86 SBG\n*     TO HIT THEIR MODULES.  WE ARE PROVIDING THE OPTION    * 11/86 SBG\n*     TO EXCLUDE UP TO SIX LINKLIST LIBRARIES.              * 11/86 SBG\n*   CODING 15 FOR A &LN WILL NULLIFY IT IN EFFECT.          * 11/86 SBG\n************************************************************* 11/86 SBG\n         LCLA  &L1,&L2,&L3,&L4,&L5,&L6                        11/86 SBG\n         LCLC  &LIBEX                                         11/86 SBG\n&L1      SETA  5         , FIFTH LIBRARY AFTER SYS1.LINKLIB   11/86 SBG\n&L2      SETA  6         , SIXTH LIBRARY AFTER SYS1.LINKLIB   11/86 SBG\n&L3      SETA  15        , NULLIFY PARAMETER                  11/86 SBG\n&L4      SETA  15        , NULLIFY PARAMETER                  11/86 SBG\n&L5      SETA  15        , NULLIFY PARAMETER                  11/86 SBG\n&L6      SETA  15        , NULLIFY PARAMETER                  11/86 SBG\n&LIBEX   SETC  'YES'     , 'YES' TO EXCLUDE, 'NO ' NOT TO.    11/86 SBG\n************************************************************* 11/86 SBG\n         AIF   ('&LIBEX' NE 'YES').SKIPEX                     11/86 SBG\n************************************************************* 11/86 SBG\n*  INSERT CODE TO EXCLUDE CERTAIN LINKLIST LIBRARIES FROM   * 11/86 SBG\n*   THE SEARCH.  THIS IS A FIX SO THAT DYNABLDL DOES NOT    * 11/86 SBG\n*   HIT LIBRARIES IN THE LINKLIST THAT YOU DON'T WANT IT    * 11/86 SBG\n*   TO HIT.                                                 * 11/86 SBG\n************************************************************* 11/86 SBG\n         CLI   CCIDSAVE,&L1        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L2        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L3        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L4        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L5        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L6        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         DS    0H                  ENSURE  ALIGNMENT          11/86 SBG\n.SKIPEX  ANOP                                                 11/86 SBG\n************************************************************* 11/86 SBG\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$NEWDOC": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00\\x12\\x00\\x12\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "FILE407"}, "text": "************************************************************* 11/86 SBG\n*  MODIFIED 11/05/86 TO HAVE A NEW FEATURE.  YOU CAN NOW    * 11/86 SBG\n*   EXCLUDE UP TO SIX LINKLIST LIBRARIES FROM THE SEARCH.   * 11/86 SBG\n*   THIS IS DONE BY CONDITIONAL ASSEMBLY.  TO TURN ON THIS  * 11/86 SBG\n*   FEATURE, SET &LIBEX EQUAL TO 'YES'.  FOR MORE DETAILS,  * 11/86 SBG\n*   LOOK FOR THE NAME EXCLLIBS.                             * 11/86 SBG\n*                                                           * 11/86 SBG\n*  IT IS RECOMMENDED TO NULLIFY THE IEABLD-- MEMBER IN      * 11/86 SBG\n*   SYS1.PARMLIB.  THIS RESULTS IN A SIZABLE PERFORMANCE    * 11/86 SBG\n*   IMPROVEMENT.  SAVE THE OLD MEMBER, JUST IN CASE.        * 11/86 SBG\n*                                                           * 11/86 SBG\n*  MUCH THANKS TO DAVE COLE, WHO HELPED ME PUT THIS         * 11/86 SBG\n*   ENHANCEMENT INTO THE PROGRAM, AND TO JEFF BROIDO,       * 11/86 SBG\n*   WHO MADE ME RECOGNIZE THE DESIRABILITY OF THE FEATURE   * 11/86 SBG\n*   TO THE GENERAL PUBLIC.                                  * 11/86 SBG\n*                                                           * 11/86 SBG\n*  S.GOLOB - NEWSWEEK, INC. - LIVINGSTON, N.J. - 11/05/86   * 11/86 SBG\n************************************************************* 11/86 SBG\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$RECOGN": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00\\x9e\\x00\\x9e\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 158, "newlines": 158, "modlines": 0, "user": "FILE407"}, "text": "********************************************************************\n*  IN ORDER TO ADD RECOGNITION CODE FOR YOUR VERSION OF IGC018:    *\n*  YOU MUST ADD AN ENTRY TO THE VERSIONS TABLE, IN THE DYNABLDL    *\n*  SOURCE, AND CREATE A RECOGNITION TABLE ENTRY FROM YOUR          *\n*  MICROFICHE.  THEN YOU MUST COPY YOUR TABLE ENTRIES TO THE       *\n*  DYNABLDX SOURCE MODULE, FOR XA, OR THE                          *\n*  DYNABLDL SOURCE MODULE FOR MVS/370.                             *\n********************************************************************\n*  A SAMPLE RECOGNITION TABLE ENTRY FOR JDP2220 AT RMID            *\n*  UY02277 IS SHOWN BELOW.                                         *\n********************************************************************\nVERSIONS DC    A(VERSN#01)                                    11/83 DBC\n         DC    A(VERSN#02)                                    11/83 DBC\n         DC    A(VERSN#03)                                    11/83 DBC\n         DC    A(VERSN#04)                                    11/83 DBC\n         DC    A(VERSN#05)                                    04/84 JLC\n         DC    A(VERSN#06)                                    05/84 DBC\n         DC    A(VERSN#07)                                    08/84 DBC\n         DC    A(VERSN#08)                                    06/84 WRH\n         DC    A(VERSN#09)                                    09/84 DBC\n         DC    A(VERSN#10)                                    01/85 DBC\n         DC    A(VERSN#11)                                    10/85 DBC\n         DC    A(VERSN#12)                                    10/85 DBC\n         DC    A(VERSN#13)                                    03/88 JW\n         DC    A(VERSN#14)                                    03/88 SBG\n******  VERSIONS TABLE VECTOR POINTER CHANGE ABOVE HERE ********\n******  VERSIONS TABLE VECTOR POINTER CHANGE ABOVE HERE ********\n******    TAILORED RECOGNITION CODE CHANGE BELOW HERE   ********\n******    TAILORED RECOGNITION CODE CHANGE BELOW HERE   ********\n******  YOU MUST USE YOUR MICROFICHE TO CODE TABLE BELOW  ******\n         EJECT ,                                              02/88 SBG\n************************************************************* 02/88 SBG\n*                                                           * 02/88 SBG\n*        MODULE: IGC018                                     * 02/88 SBG\n*        PRODUCT: DFP (5665-XA2)  VERSION 2.2               * 02/88 SBG\n*        FMID: JDP2220                                      * 02/88 SBG\n*        PTF:  UY02277                                      * 02/88 SBG\n*                                                           * 02/88 SBG\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 02/88 SBG\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 02/88 SBG\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 02/88 SBG\n*        DSECT.                                             * 02/88 SBG\n*                                                           * 02/88 SBG\n************************************************************* 02/88 SBG\n         SPACE 1                                              02/88 SBG\nVERSN#14 CSECT ,                                              02/88 SBG\n         DC    A(ID#14)            --> VERSION VERIFIER       02/88 SBG\n         DC    A(SRCH#14)          --> ORIGINAL \"SRCHPDS\" COD 02/88 SBG\n         DC    A(FINDK#14)         --> ORIGINAL \"FINDKEY\" COD 02/88 SBG\n         DC    A(DOFF#14)          --> IBM DATA FIELDS DESCRIPTORS  SBG\n         SPACE 3                                              02/88 SBG\n************************************************************* 02/88 SBG\n*                                                           * 02/88 SBG\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 02/88 SBG\n*        DSECT.                                             * 02/88 SBG\n*                                                           * 02/88 SBG\n************************************************************* 02/88 SBG\n         SPACE 1                                              02/88 SBG\nID#14    DS    0H                                             02/88 SBG\n         DC    Y(X'6')             VERIFY LOCATION            02/88 SBG\n         DC    Y(ID#14VLN)         VERIFY LENGTH              02/88 SBG\n         SPACE 1                                              02/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#14V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'09/26/86'         00000E+         DC    C'&SYSDATE'\n*                                  00000E          DC    C'09/26/86'\n         DC    C'JDP2220 '         000016          DC    C'JDP2220 '\n         DC    C'UY02277 '         00001E          DC    C'UY02277 '\n         DC    C'5665-XA2'         000026          DC    C'5665-XA2 (C)\n*                                  ************************************\n         SPACE 1                                              02/88 SBG\nID#14VLN EQU   *-ID#14V            VERIFY LENGTH              02/88 SBG\n         SPACE 3                                              02/88 SBG\n************************************************************* 02/88 SBG\n*                                                           * 02/88 SBG\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 02/88 SBG\n*                                                           * 02/88 SBG\n************************************************************* 02/88 SBG\n         SPACE 1                                              02/88 SBG\nSRCH#14  DS    0H                                             02/88 SBG\n         DC    Y(X'546')           VERIFY LOCATION            02/88 SBG\n         DC    Y(SRCH#14L)         VERIFY LENGTH              02/88 SBG\n         SPACE 1                                              02/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#14V DS    0H                  000546 SRCHPDS  EQU   *\n         MVI   X'160'(R13),0       000546          MVI   ERCODE,0\n*                                  00054A          MODESET KEYADDR=EXSK\n         IC    R3,X'60'(,R6)       00054A+         IC    3,EXSKEY\n         SPKA  0(R3)               00054E+         SPKA  0(3)\n*                                  ************************************\n         SPACE 1                                              02/88 SBG\nSRCH#14L EQU   *-SRCH#14V          VERIFY LENGTH              02/88 SBG\n         #TEST SIZE=(SRCH#14L,GE,SRCHPOHL)                    02/88 SBG\n         SPACE 3                                              02/88 SBG\n************************************************************* 02/88 SBG\n*                                                           * 02/88 SBG\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 02/88 SBG\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 02/88 SBG\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 02/88 SBG\n*        LABEL \"DFOUND\".                                    * 02/88 SBG\n*                                                           * 02/88 SBG\n************************************************************* 02/88 SBG\n         SPACE 1                                              02/88 SBG\nFINDK#14 DS    0H                                             02/88 SBG\n         DC    Y(X'7F0')           VERIFY LOCATION            02/88 SBG\n         DC    Y(FIND#14L)         VERIFY LENGTH              02/88 SBG\n         SPACE 1                                              02/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007F0 FINDKEY  EQU   *\nFIND#14V STCM  R5,7,X'8'(R7)       0007F0          STCM  RY,ADDR3,PDS2T\n         LA    R5,X'E'             0007F4          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007F8          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007FA          AH    RY,BLDELEN\n         BM    X'82A'(,R12)        0007FE          BM    NOMOVE\n         BXLE  R4,R4,X'806'(R12)   000802          BXLE  RX,RX,EXEC\n*                                  ************************************\n         SPACE 1                                              02/88 SBG\nFIND#14L EQU   *-FIND#14V          VERIFY LENGTH              02/88 SBG\n         #TEST SIZE=(FIND#14L,GE,DFOUNDHL)                    02/88 SBG\n         SPACE 3                                              02/88 SBG\n************************************************************* 02/88 SBG\n*                                                           * 02/88 SBG\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 02/88 SBG\n*        DSECT.                                             * 02/88 SBG\n*                                                           * 02/88 SBG\n************************************************************* 02/88 SBG\n         SPACE 1                                              02/88 SBG\nDOFF#14  DS    0H                                             02/88 SBG\n         SPACE 1                                              02/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              02/88 SBG\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              02/88 SBG\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'161'(R13))      000161 CONCAT#  DS    FL1\n         SPACE 1                                              02/88 SBG\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              02/88 SBG\n         #TEST SIZE=(*-DOFF#14,EQ,FIELDSLN)                   02/88 SBG\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE407": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04]\\x00@\\x01\\x165o\\x01\\x165o\\x14X\\x00u\\x00u\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf3@@@'", "ispf": {"version": "04.93", "flags": 0, "createdate": "2016-12-21T00:00:00", "modifydate": "2016-12-21T14:58:40", "lines": 117, "newlines": 117, "modlines": 0, "user": "CBT-493"}, "text": "//***FILE 407 CONTAINS A COPY OF DYNAMIC BLDL FROM COMNET IN        *   FILE 407\n//*           WASHINGTON D.C. AND WAS WRITTEN BY MR DAVID B COLE.   *   FILE 407\n//*           THIS FILE IS IN IEBUPDTE SYSIN FORMAT (SEE THE        *   FILE 407\n//*           MEMBER CALLED $$DOC FOR ADDITIONAL DOCUMENTATION).    *   FILE 407\n//*                                                                 *   FILE 407\n//*           Colesoft Marketing, Inc.                              *   FILE 407\n//*           414 3rd ST. NE                                        *   FILE 407\n//*           Charlottesville, VA 22902 USA                         *   FILE 407\n//*           540-456-8210                                          *   FILE 407\n//*           www.colesoft.com                                      *   FILE 407\n//*           email:  dbcole@gmail.com                              *   FILE 407\n//*                                                                 *   FILE 407\n//*           THE MACROS NEEDED ARE CONTAINED IN FILE 408 OF        *   FILE 407\n//*           THIS TAPE AND THE DYNABLDL LOAD MODULE FOR THIS       *   FILE 407\n//*           LEVEL OF SOURCE RESIDES IN FILE 035 OF THIS TAPE.     *   FILE 407\n//*                                                                 *   FILE 407\n//*           THIS PROGRAM IS CONCEPTUALLY BASED ON THE VARIOUS     *   FILE 407\n//*           DYNAMIC BLDL PROGRAMS AVAILABLE FROM THE \"CBT         *   FILE 407\n//*           UTILITIES\" TAPE.  HOWEVER, THIS VERSION IS A          *   FILE 407\n//*           COMPLETE REWRITE THAT INCORPORATES A SERIES OF        *   FILE 407\n//*           IMPROVEMENTS:                                         *   FILE 407\n//*                                                                 *   FILE 407\n//*           THIS FILE ALSO CONTAINS AN XA VERSION OF DYNABLDL.    *   FILE 407\n//*           SEE THE MEMBER CALLED $$XADOC FOR ADDITIONAL          *   FILE 407\n//*           INFORMATION.  THE XA VERSION OF DYNABLDL WAS          *   FILE 407\n//*           WRITTEN BY JOHN ANDERSON AND JEFF BROIDO AT           *   FILE 407\n//*           WESTERN UNION/EDS IN MAHWAH, NEW JERSEY.              *   FILE 407\n//*                                                                 *   FILE 407\n//*                 - THIS VERSION OF DYNABLDL IS                   *   FILE 407\n//*                   CAPABLE OF RECOGNIZING AND HOOKING            *   FILE 407\n//*                   INTO ANY OF SEVERAL VERSIONS OF               *   FILE 407\n//*                   IBM'S IGC018.  THE RECOGNITION CODE           *   FILE 407\n//*                   IS TABLE DRIVEN, AND ADDITIONAL               *   FILE 407\n//*                   RECOGNITION TABLES CAN BE FAIRLY              *   FILE 407\n//*                   EASILY ADDED.                                 *   FILE 407\n//*                                                                 *   FILE 407\n//*                 - THE RECOGNITION TABLES ARE                    *   FILE 407\n//*                   COMPREHENSIVE.  EACH TABLE CONSISTS           *   FILE 407\n//*                   OF FOUR PARTS.  THE FIRST, LABELED            *   FILE 407\n//*                   \"ID#\" (WHERE \"#\" REPRESENTS AN                *   FILE 407\n//*                   ARBITRARY UNIQUE NUMERIC SUFFIX),             *   FILE 407\n//*                   MUST MATCH AN IGC018'S                        *   FILE 407\n//*                   IDENTIFICATION HEADER.  THIS IS               *   FILE 407\n//*                   USED TO DISTINGUISH ONE IGC018                *   FILE 407\n//*                   FROM ANOTHER.  THE SECOND AND THIRD           *   FILE 407\n//*                   PARTS, LABELED \"SRCHPO#\" AND                  *   FILE 407\n//*                   \"DFOUND#\", MUST MATCH THE TWO                 *   FILE 407\n//*                   LOCATIONS IN IGC018 WHERE DYNABLDL            *   FILE 407\n//*                   INSERTS ITS JUMPS TO ITS INTERCEPT            *   FILE 407\n//*                   ROUTINES.  THE FOURTH PART CONSISTS           *   FILE 407\n//*                   OF A LIST OF DESCRIPTORS OF ALL               *   FILE 407\n//*                   IBM PRIVATE DATA FIELDS REFERENCED            *   FILE 407\n//*                   BY THE INTERCEPT ROUTINES.  MOST              *   FILE 407\n//*                   OF THE DESCRIPTORS ARE S-CONS                 *   FILE 407\n//*                   GIVING THE BASE REGISTER BY WHICH             *   FILE 407\n//*                   IGC018 REFERENCES A FIELD AND THE             *   FILE 407\n//*                   DISPLACEMENT OF THAT FIELD INTO               *   FILE 407\n//*                   THE IBM PRIVATE CONTROL BLOCK.  THE           *   FILE 407\n//*                   DYNABLDL INITIALIZATION ROUTINE               *   FILE 407\n//*                   USES THIS LIST TO DYNAMICALLY                 *   FILE 407\n//*                   MODIFY ALL MACHINE INSTRUCTIONS IN            *   FILE 407\n//*                   THE TWO INTERCEPT ROUTINES SO THAT            *   FILE 407\n//*                   THEY CORRECTLY MATCH THE PARTICULAR           *   FILE 407\n//*                   VERSION OF IGC018 BEING HOOKED                *   FILE 407\n//*                   INTO.  NOTE, THE TWO IBM PRIVATE              *   FILE 407\n//*                   CONTROL BLOCKS INVOLVED HERE ARE              *   FILE 407\n//*                   THE \"BLDL WORK AREA\" AND BLDL'S               *   FILE 407\n//*                   \"SVRB EXTENDED SAVE AREA\".                    *   FILE 407\n//*                                                                 *   FILE 407\n//*                 - ALL ROUTINES RELATED TO DYNABLDL              *   FILE 407\n//*                   HAVE BEEN CONSOLIDATED INTO A                 *   FILE 407\n//*                   SINGLE PROGRAM.  THIS RELIEVES THE            *   FILE 407\n//*                   POTENTIAL FOR ERRORS ARISING FROM             *   FILE 407\n//*                   PARTIAL MODIFICATIONS.                        *   FILE 407\n//*                                                                 *   FILE 407\n//*                 - THE DYNAMIC BLDL TABLE IS NOW                 *   FILE 407\n//*                   MAINTAINED BY A STRAIGHTFORWARD               *   FILE 407\n//*                   \"LEAST RECENTLY USED\" ALGORITHM.              *   FILE 407\n//*                   THE PREVIOUSLY USED PERIODIC SORTS            *   FILE 407\n//*                   AND PARTIAL REFILL METHOD HAS BEEN            *   FILE 407\n//*                   DISCARDED.                                    *   FILE 407\n//*                                                                 *   FILE 407\n//*                 - PRIOR VERSIONS OF DYNABLDL DID                *   FILE 407\n//*                   NOT INTERCEPT LINKLIST BLDL                   *   FILE 407\n//*                   REQUESTS IN WHICH THE USER                    *   FILE 407\n//*                   REQUESTED TWO OR MORE NAMES.                  *   FILE 407\n//*                   FURTHER, PRIOR DYNABLDLS DID NOT              *   FILE 407\n//*                   COUNT SUCH IGNORED REQUESTS AS                *   FILE 407\n//*                   \"MISSES\".  CONSEQUENTLY, THE \"HIT             *   FILE 407\n//*                   RATE\" REPORTED BACK WAS                       *   FILE 407\n//*                   INCORRECT.  (IT WAS TOO HIGH).                *   FILE 407\n//*                   THIS VERSION OF DYNABLDL DOES                 *   FILE 407\n//*                   HANDLE MULTI-ENTRY BLDL REQUESTS,             *   FILE 407\n//*                   AND MY EXPERIENCE HAS BEEN THAT               *   FILE 407\n//*                   THE TRUE HIT RATE HAS RISEN FROM              *   FILE 407\n//*                   ABOUT 80% TO BETTER THAN 95%.                 *   FILE 407\n//*                                                                 *   FILE 407\n//*                 - THE REPORT FUNCTION NOW PRODUCES              *   FILE 407\n//*                   THREE LISTINGS OF THE DYNAMIC                 *   FILE 407\n//*                   TABLE (PRINTED IN 3-COLUMN FORMAT             *   FILE 407\n//*                   USING LESS THAN 79 CHARACTERS PER             *   FILE 407\n//*                   LINE - SUITABLE FOR 3270 DISPLAY).            *   FILE 407\n//*                   ONE LISTING IS SORTED BY NAME; A              *   FILE 407\n//*                   SECOND IS SORTED BY HITS COUNT;               *   FILE 407\n//*                   THE THIRD IS SORTED BY L.R.U.                 *   FILE 407\n//*                   CHARACTERISTIC.                               *   FILE 407\n//*                                                                 *   FILE 407\n//*                 - THE DYNABLDL STOP FUNCTION NOW                *   FILE 407\n//*                   COMPLETELY REMOVES DYNABLDL FROM              *   FILE 407\n//*                   THE SYSTEM RATHER THAN JUST                   *   FILE 407\n//*                   DISABLING THE HOOK ROUTINES.                  *   FILE 407\n//*                                                                 *   FILE 407\n//*                 - THERE IS AN UPDATE FROM SAM GOLOB             *   FILE 407\n//*                 - SO IF YOU WISH, YOU CAN EXCLUDE UP            *   FILE 407\n//*                 - TO SIX LINKLIST LIBRARIES FROM THE            *   FILE 407\n//*                 - SEARCH.                                       *   FILE 407\n//*                                                                 *   FILE 407\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASMJCL": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00\\x1f\\x00\\x1f\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "FILE407"}, "text": "//***********************************************************\n//* NON-XA  NON-XA  NON-XA  NON-XA  NON-XA  NON-XA  NON-XA  *\n//*                                                         *\n//*      SAMPLE JCL TO ASSEMBLE AND LINKEDIT THE DYNABLDL   *\n//*      PROGRAM.                                           *\n//*                                                         *\n//*      \"COLE.MACLIB\" IS AVAILABLE FROM THE CBT TAPE AS OF *\n//*      VERSION 224 (JANUARY 15, 1984) IN FILE 408.        *\n//*                                                         *\n//* NON-XA  NON-XA  NON-XA  NON-XA  NON-XA  NON-XA  NON-XA  *\n//***********************************************************\n//*\n//ASM     EXEC PGM=IFOX00,REGION=1024K,\n//             PARM='TEST,TERM,LOAD,NODECK'\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DSN=COLE.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSGO    DD  DSN=&&OBJECT,UNIT=SYSDA,SPACE=(CYL,(1,1)),DISP=(,PASS)\n//SYSIN    DD  DSN=COLE.SOURCLIB(DYNABLDL),DISP=SHR\n//*\n//LKED    EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='TEST,NCAL,LIST,XREF'\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD  DD  DSN=SYS1.LINKLIB(DYNABLDL),DISP=SHR\n//SYSLIN   DD  DSN=&&OBJECT,DISP=(OLD,DELETE)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BLDLTEST": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00Z\\x00Z\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 90, "newlines": 90, "modlines": 0, "user": "FILE407"}, "text": "BLDLTEST TITLE '- PERFORMANCE TEST OF BLDL ELIMINATORS.'\n         SPACE 1\n***********************************************************************\n*                                                                     *\n*         SEE CLIST BL AND NOTE AT LABEL \"ENTRIES\" BELOW.             *\n*                                                                     *\n***********************************************************************\n         SPACE 1\nBLDLTEST CSECT\n         REGS\n         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS.\n         LR    R12,R15             LOAD BASE.\n         USING BLDLTEST,R12        (TELL ASSEMBLER).\n         LR    R14,R13             POINT TO CALLER'S SAVE AREA.\n         LA    R13,SAVE            POINT TO MY SAVE AREA.\n         ST    R13,8(,R14)         CHAIN ...\n         ST    R14,4(,R13)         ... SAVE AREAS.\n         SPACE 2\n         BLDL  0,BLIST             FIND ALL MEMBERS IN LIST BELOW.\n         L     R13,SAVE+4          RESTORE CALLER'S SAVE AREA PTR.\n         LM    R0,R12,20(R13)      RESTORE CALLER'S REGISTERS.\n         L     R14,12(,R13)        RESTORE RETURN ADDRESS.\n         BR    R14                 EXIT USING BLDL'S RETURN CODE.\n         SPACE 2\nSAVE     DS    9D                  SAVE AREA.\nENTLEN   EQU   14                  LENGTH OF EACH BLDL LIST ENTRY.\nENTREM   EQU   ENTLEN-8            CALCULATED RESIDUAL LENGTH.\nBLIST    DC    AL2(TOTENT/ENTLEN),AL2(ENTLEN) CALCULATED # OF ENTRIES.\nENTRIES  EQU   *\n         SPACE 1\n***********************************************************************\n*                                                                     *\n*          REPLACE THE FOLLOWING DCS WITH A SIMILAR LIST              *\n*          IN EXACTLY THE SAME FORMAT USING YOUR OWN                  *\n*          LNKLST PROGRAM NAMES.  I SUGGEST YOU USE 100 ENTRIES.      *\n*                                                                     *\n***********************************************************************\n         SPACE 1\n         DC    C'$PDSFA33',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'#TMECOMM',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'#TMEWSPA',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ALLOCY  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'CWTABS01',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'EXECPY  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'FREEPY  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'HEWLPY  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEBCOPY ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEEMB846',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEEVSEND',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEEVSTAR',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEFIB600',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEFNB903',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEV00Y  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEV10Y  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEV20Y  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEV50Y  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IEV60Y  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IKJEES73',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IKJEFF04',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IKJEFF10',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IKJEFF18',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'IKJEFT25',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBOCHN0',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBOCMM0',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBOCOM0',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBOCVB0',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBODBG0',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBODSP0',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBOEXT0',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBONTR0',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBOQIO0',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBOSPA0',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ILBOSR  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISFISP  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISFJINIT',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISFMAIN ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISFPARMS',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISFSTAE ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISFSTOP ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISFS4DSP',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISFVTBL ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISPLINK ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISPSTART',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISPTBLS ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'ISR3278 ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'LOGOFF  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'SORTPY  ',XL(ENTREM)'00'   SORT THIS LIST\n         DC    C'SUBMIT  ',XL(ENTREM)'00'   SORT THIS LIST\nTOTENT   EQU   *-ENTRIES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BT": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x008\\x008\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 56, "newlines": 56, "modlines": 0, "user": "FILE407"}, "text": "PROC 1 NUMBER LIST SYMLIST CONLIST\n\n/*        THIS CLIST CALLS PROGRAM BLDLTEST A USER-SPECIFIED\n/*        NUMBER OF TIMES.  BLDLTEST, IN TURN, DOES A SINGLE BLDL\n/*        LOCATING A FIXED SET OF LINK LIST MODULES.  UPDATE\n/*        BLDLTEST TO INCLUDE A SET OF AT LEAST 100 MODULES FROM\n/*        VARIOUS LINK LIST LIBRARIES AT YOUR SHOP.  NOTE THAT\n/*        BLDL DEMANDS THAT THE LIST IS SORTED IN ASCENDING\n/*        SEQUENCE.  TO CALL BLDLTEST 10 TIMES, FOR EXAMPLE,\n/*        ASSUMING THAT THIS CLIST IS PLACED IN A LIBRARY\n/*        CONCATENATED TO DDNAME SYSPROC, JUST TYPE %BT 10\n/*\n/*        NOTE THAT THE LIBRARY SPECIFIED IN THE CALL BELOW\n/*        SHOULD BE THE LIBRARY INTO WHICH YOU LINK-EDITED\n/*        BLDLTEST.\n\nIF &SYMLIST \u00ac= THEN CONTROL SYM\nIF &CONLIST \u00ac= THEN CONTROL CON\nIF &LIST    \u00ac= THEN CONTROL LIST\nSET &C0 = &SYSCPU\nSET &S0 = &SYSSRV\nSET &T0 = &SYSTIME\nSET &IX = 0\nTIME\nDO WHILE &IX < &NUMBER\n\n\n    CALL 'SSFP.SFP.LOADLIB(BLDLTEST)' /* <=== CHANGE LIBRARY DSN.\n\n\n    SET &IX = &IX + 1\nEND\nTIME\nSET &C1 = &SYSCPU\nSET &S1 = &SYSSRV\nSET &T1 = &SYSTIME\nSET &S = &S1 - &S0\nSET &T0 = &EVAL(&EVAL(&SUBSTR(1:2,&T0)) * 3600 +\n        + &EVAL(&SUBSTR(4:5,&T0)) * 60   +\n        + &EVAL(&SUBSTR(7:8,&T0)))\nSET &T1 = &EVAL(&EVAL(&SUBSTR(1:2,&T1)) * 3600 +\n        + &EVAL(&SUBSTR(4:5,&T1)) * 60   +\n        + &EVAL(&SUBSTR(7:8,&T1)))\nSET &T = &T1 - &T0\nSET &L = &LENGTH(&STR(&C0))\nSET &L1 = &L - 3\nSET &L2 = &L - 1\nSET &C0 = &EVAL(&EVAL(&SUBSTR(1:&L1,&STR(&C0))) * 100 +\n        + &EVAL(&SUBSTR(&L2:&L,&STR(&C0))))\nSET &L = &LENGTH(&STR(&C1))\nSET &L1 = &L - 3\nSET &L2 = &L - 1\nSET &C1 = &EVAL(&EVAL(&SUBSTR(1:&L1,&STR(&C1))) * 100 +\n        + &EVAL(&SUBSTR(&L2:&L,&STR(&C1))))\nSET &C = &C1 - &C0\nWRITE CPU: &C..  SERVICE: &S..  SECONDS: &T..\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBTJCL": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00\\x08\\x00\\x08\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "FILE407"}, "text": "//CBT1493 JOB 527TSO000S0008,'CBT1493',CLASS=B,MSGCLASS=6,\n// NOTIFY=TS15500\n/*JOBPARM ROOM=F04L\n//STEP01   EXEC BANNER,P='CBT1493!!CBT1493',COPY=3\n// EXEC ASMBLR,SO=6,LIB='TS15500.CBT1494.PDS'\n//SYSIN DD DISP=SHR,DSN=TS15500.CBT1493.PDS(DYNABLDL)\n// EXEC LINKX,SO=6,NAME=CBT1493,LIB='SYS2.MLINKLIB',\n// OPT=',AC=1'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DBREPORT": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00\\x03\\x00\\x03\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 3, "newlines": 3, "modlines": 0, "user": "FILE407"}, "text": "//IEFPROC EXEC PGM=DYNABLDL,REGION=100K,PARM=R\n//SYSPRINT DD  DDNAME=IEFRDER\n//IEFRDER  DD  SYSOUT=A\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DBSTART": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00\\x01\\x00\\x01\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "FILE407"}, "text": "//IEFPROC EXEC PGM=DYNABLDL,REGION=100K\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DBSTOP": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00\\x01\\x00\\x01\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "FILE407"}, "text": "//IEFPROC EXEC PGM=DYNABLDL,REGION=100K,PARM=P\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DBYOYO": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00\\x02\\x00\\x02\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 2, "newlines": 2, "modlines": 0, "user": "FILE407"}, "text": "//DBSTOP  EXEC PGM=DYNABLDL,REGION=100K,PARM=P\n//DBATART EXEC PGM=DYNABLDL,REGION=100K\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DYNABLDL": {"ttr": 786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x13\\x0e\\x13\\x0e\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 4878, "newlines": 4878, "modlines": 0, "user": "FILE407"}, "text": "DYNABLDL TITLE ' '                                            11/83 DBC\n************************************************************* 11/86 SBG\n*  MODIFIED 11/05/86 TO HAVE A NEW FEATURE.  YOU CAN NOW    * 11/86 SBG\n*   EXCLUDE UP TO SIX LINKLIST LIBRARIES FROM THE SEARCH.   * 11/86 SBG\n*   THIS IS DONE BY CONDITIONAL ASSEMBLY.  TO TURN ON THIS  * 11/86 SBG\n*   FEATURE, SET &LIBEX EQUAL TO 'YES'.  FOR MORE DETAILS,  * 11/86 SBG\n*   LOOK FOR THE NAME EXCLLIBS.                             * 11/86 SBG\n*                                                           * 11/86 SBG\n*  IT IS RECOMMENDED TO NULLIFY THE IEABLD-- MEMBER IN      * 11/86 SBG\n*   SYS1.PARMLIB.  THIS RESULTS IN A SIZABLE PERFORMANCE    * 11/86 SBG\n*   IMPROVEMENT.  SAVE THE OLD MEMBER, JUST IN CASE.        * 11/86 SBG\n*                                                           * 11/86 SBG\n*  NOTE:  TO CHANGE THE SIZE OF THE DYNABLDL TABLE, SEE     * 01/88 SBG\n*            LABEL \"ENTRYCNT\" IN THE CODE BELOW.            * 01/88 SBG\n*                                                           * 01/88 SBG\n*  MUCH THANKS TO DAVE COLE, WHO HELPED ME PUT THIS         * 11/86 SBG\n*   ENHANCEMENT INTO THE PROGRAM, AND TO JEFF BROIDO,       * 11/86 SBG\n*   WHO MADE ME RECOGNIZE THE DESIRABILITY OF THE FEATURE   * 11/86 SBG\n*   TO THE GENERAL PUBLIC.                                  * 11/86 SBG\n*                                                           * 11/86 SBG\n*  S.GOLOB - NEWSWEEK, INC. - LIVINGSTON, N.J. - 11/05/86   * 11/86 SBG\n************************************************************* 11/86 SBG\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n* MODULE NAME = DYNABLDL.                                   * 11/83 DBC\n*                                                           * 11/83 DBC\n* DESCRIPTIVE NAME = DYNAMIC BLDL FACILITY.                 * 11/83 DBC\n*                                                           * 11/83 DBC\n* COPYRIGHT = DAVID B. COLE - 1983.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n* STATUS = RELEASE 88, MODIFICATION LEVEL A.                * 01/88 SBG\n*                                                           * 11/83 DBC\n* FUNCTION = MAINTAIN A DYNAMICALLY UPDATED LIST OF THE     * 11/83 DBC\n*            MOST FREQUENTLY USED BLDL ENTRIES FROM THE     * 11/83 DBC\n*            LINK LIST LIBRARIES.                           * 11/83 DBC\n*                                                           * 11/83 DBC\n*            THIS PROGRAM IS CONCEPTUALLY BASED ON THE      * 11/83 DBC\n*            VARIOUS DYNAMIC BLDL PROGRAMS AVAILABLE FROM   * 11/83 DBC\n*            THE \"CBT MODS\" TAPE. HOWEVER, THIS VERSION IS  * 11/83 DBC\n*            A COMPLETE REWRITE THAT INCORPORATES A SERIES  * 11/83 DBC\n*            OF IMPROVEMENTS LISTED BELOW UNDER \"CHANGE     * 11/83 DBC\n*            HISTORY\".                                      * 11/83 DBC\n*                                                           * 11/83 DBC\n* PROCESSOR = OS/VS ASSEMBLER.                              * 11/83 DBC\n*                                                           * 11/83 DBC\n* ATTRIBUTES = NOT REENTRANT.                               * 11/83 DBC\n*                                                           * 11/83 DBC\n* DEPENDANCIES = STRUCTURE OF IGC018.                       * 11/83 DBC\n*                                                           * 11/83 DBC\n* AUTHOR = DAVID B. COLE (DBC)                              * 11/83 DBC\n*          RR#2 BOX 712                                     * 11/83 DBC\n*          AFTON, VA. 22920                                 * 11/83 DBC\n*                                                           * 05/84 DBC\n*          ADDITIONAL MODIFICATIONS MADE BY:                * 05/84 DBC\n*                                                           * 09/84 DBC\n*          JERRY L. CALLEN (JLC)                            * 05/84 DBC\n*          UNIVERSITY OF CHICAGO                            * 05/84 DBC\n*          COMPUTER CENTER                                  * 05/84 DBC\n*          5640 SOUTH ELLIS AVENUE                          * 05/84 DBC\n*          CHICAGO, IL. 60637                               * 05/84 DBC\n*                                                           * 09/84 DBC\n*          BILL HORTEN (WRH)                                * 09/84 DBC\n*          TENNESSEE EASTMAN COMPANY                        * 09/84 DBC\n*          BOX 1973                                         * 09/84 DBC\n*          KINGSPORT, TN. 37662                             * 09/84 DBC\n*                                                           * 09/84 DBC\n*          SAM GOLOB   (SBG)                                * 01/88 SBG\n*          NEWSWEEK, INCORPORATED                           * 01/88 SBG\n*          333 ROUTE 46 WEST                                * 01/88 SBG\n*          MOUNTAIN LAKES, NJ. 07046                        * 01/88 SBG\n*          (201) 316-2328                                   * 01/88 SBG\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         TITLE 'CHANGE HISTORY'                               11/83 DBC\n************************************************************* 10/85 DBC\n*                                                           * 01/88 SBG\n* RELEASE 88A                                               * 01/88 SBG\n*                                                           * 01/88 SBG\n* LAST CHANGE DATE = JANUARY 4, 1988                        * 01/88 SBG\n*                                                           * 01/88 SBG\n*                  - INCLUDE ADDITIONAL VERSION TABLE       * 01/88 SBG\n*                        DFP 1.2  JDQ1111 BASE LEVEL        * 01/88 SBG\n************************************************************* 01/88 SBG\n         EJECT ,                                              01/88 SBG\n************************************************************* 01/88 SBG\n*                                                           * 10/85 DBC\n* RELEASE 85A                                               * 10/85 DBC\n*                                                           * 10/85 DBC\n* LAST CHANGE DATE = OCTOBER 3, 1985                        * 10/85 DBC\n*                                                           * 10/85 DBC\n*                  - INCLUDE ADDITIONAL VERSION TABLES      * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         EJECT ,                                              10/85 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n* RELEASE 84C                                               * 09/84 DBC\n*                                                           * 09/84 DBC\n* LAST CHANGE DATE = SEPTEMBER 27, 1984                     * 09/84 DBC\n*                                                           * 09/84 DBC\n*                  - INCLUDED ADDITIONAL VERSION TABLES     * 09/84 DBC\n*                    WORKED OUT BY BILL HORTEN OF TENNESSEE * 09/84 DBC\n*                    EASTMAN COMPANY.                       * 09/84 DBC\n*                                                           * 09/84 DBC\n*                  - MODIFIED THE SRCHPDS HOOK TO PROPERLY  * 09/84 DBC\n*                    HANDLE SOME CHANGES IN THE DFP         * 09/84 DBC\n*                    VERSIONS OF IGC018. THESE NEWER        * 09/84 DBC\n*                    VERSIONS WILL SOMETIMES SWITCH TO THE  * 09/84 DBC\n*                    DEB'S PROTECT KEY (INSTEAD OF THE      * 09/84 DBC\n*                    CALLER'S PROTECT KEY) BEFORE STORING   * 09/84 DBC\n*                    THE RETURNED DIRECTORY INFORMATION.    * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         EJECT ,                                              09/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n* RELEASE 84B                                               * 08/84 DBC\n*                                                           * 08/84 DBC\n* LAST CHANGE DATE = AUGUST 27,  1984                       * 08/84 DBC\n*                                                           * 08/84 DBC\n*                  - SUPPORT FOR ADDITIONAL VERSIONS OF     * 08/84 DBC\n*                    IGC018 (VERSIONS 7 AND 8) HAS BEEN     * 08/84 DBC\n*                    ADDED. THANKS TO VAL PITCHETT OF STATE * 08/84 DBC\n*                    FARM INSURANCE FOR HELP WITH THIS.     * 08/84 DBC\n*                                                           * 08/84 DBC\n*                  - THE DYNABLDL REPORT NOW FLAGS THOSE    * 08/84 DBC\n*                    LOAD MODULES THAT ARE REENTRANT. THIS  * 08/84 DBC\n*                    WILL BE HELPFUL IN DETERMINING WHICH   * 08/84 DBC\n*                    MODULES MIGHT BE BETTER PLACED IN      * 08/84 DBC\n*                    SYS1.LPALIB.                           * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         EJECT ,                                              08/84 DBC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n* RELEASE 84A                                               * 05/84 DBC\n*                                                           * 04/84 JLC\n* LAST CHANGE DATE = MAY 29, 1984                           * 05/84 DBC\n*                                                           * 04/84 JLC\n*                  - \"TYPO\" TYPE BUGS FIXED AT LABELS       * 04/84 JLC\n*                    \"ENTCNT\" AND \"SIZESCAN\". (BY CHANCE    * 04/84 JLC\n*                    THE BUGS HAD NO FUNCTIONAL EFFECT).    * 04/84 JLC\n*                                                           * 04/84 JLC\n*                  - SUPPORT ADDED FOR THE UZ61167 LEVEL OF * 04/84 JLC\n*                    IGC018.                                * 04/84 JLC\n*                                                           * 05/84 DBC\n*                  - SUPPORT FOR A SECOND VARIATION OF THE  * 05/84 DBC\n*                    UZ61168 LEVEL OF IGC018 ADDED.         * 05/84 DBC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         EJECT ,                                              05/84 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n* RELEASE 83.A                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n* LAST CHANGE DATE - NOVEMBER 15, 1983                      * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - THIS VERSION OF DYNABLDL IS CAPABLE OF * 11/83 DBC\n*                    RECOGNIZING AND HOOKING INTO ANY OF    * 11/83 DBC\n*                    SEVERAL VERSIONS OF IBM'S IGC018. THE  * 11/83 DBC\n*                    RECOGNITION CODE IS TABLE DRIVEN, AND  * 11/83 DBC\n*                    ADDITIONAL RECOGNITION TABLES CAN BE   * 11/83 DBC\n*                    FAIRLY EASILY ADDED.                   * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - THE RECOGNITION TABLES ARE             * 11/83 DBC\n*                    COMPREHENSIVE. EACH TABLE CONSISTS OF  * 11/83 DBC\n*                    FOUR PARTS. THE FIRST, LABELED \"ID#\"   * 11/83 DBC\n*                    (WHERE \"#\" REPRESENTS AN ARBITRARY     * 11/83 DBC\n*                    UNIQUE NUMERIC SUFIX), MUST MATCH AN   * 11/83 DBC\n*                    IGC018'S IDENTIFICATION HEADER. THIS   * 11/83 DBC\n*                    IS USED TO DISTINGUISH ONE IGC018 FROM * 11/83 DBC\n*                    ANOTHER. THE SECOND AND THIRD PARTS,   * 11/83 DBC\n*                    LABELED \"SRCHPO#\" AND \"DFOUND#\", MUST  * 11/83 DBC\n*                    MATCH THE TWO LOCATIONS IN IGC018      * 11/83 DBC\n*                    WHERE DYNABLDL INSERTS ITS JUMPS TO    * 11/83 DBC\n*                    ITS INTERCEPT ROUTINES. THE FOURTH     * 11/83 DBC\n*                    PART CONSISTS OF A LIST OF DESCRIPTORS * 11/83 DBC\n*                    OF ALL IBM PRIVATE DATA FIELDS         * 11/83 DBC\n*                    REFERENCED BY THE INTERCEPT ROUTINES.  * 11/83 DBC\n*                    MOST OF THE DESCRIPTORS ARE S-CONS     * 11/83 DBC\n*                    GIVING THE BASE REGISTER BY WHICH      * 11/83 DBC\n*                    IGC018 REFERENCES A FIELD AND THE      * 11/83 DBC\n*                    DISPLACEMENT OF THAT FIELD INTO THE    * 11/83 DBC\n*                    IBM PRIVATE CONTROL BLOCK. THE         * 11/83 DBC\n*                    DYNABLDL INITIALIZATION ROUTINE USES   * 11/83 DBC\n*                    THIS LIST TO DYNAMICALLY MODIFY ALL    * 11/83 DBC\n*                    MACHINE INSTRUCTIONS IN THE TWO        * 11/83 DBC\n*                    INTERCEPT ROUTINES SO THAT THEY        * 11/83 DBC\n*                    CORRECTLY MATCH THE PARTICULAR VERSION * 11/83 DBC\n*                    OF IGC018 BEING HOOKED INTO. NOTE, THE * 11/83 DBC\n*                    TWO IBM PRIVATE CONTROL BLOCKS         * 11/83 DBC\n*                    INVOLVED HERE ARE THE \"BLDL WORK AREA\" * 11/83 DBC\n*                    AND BLDL'S \"SVRB EXTENDED SAVE AREA\".  * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - ALL ROUTINES RELATED TO DYNABLDL HAVE  * 11/83 DBC\n*                    BEEN CONSOLIDATED INTO A SINGLE        * 11/83 DBC\n*                    PROGRAM. THIS RELIEVES THE POTENTIAL   * 11/83 DBC\n*                    FOR ERRORS ARISING FROM PARTIAL        * 11/83 DBC\n*                    MODIFICATIONS.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - THE DYNAMIC BLDL TABLE IS NOW          * 11/83 DBC\n*                    MAINTAINED BY A STRAIGHT FORWARD       * 11/83 DBC\n*                    \"LEAST RECENTLY USED\" ALGORITHM. THE   * 11/83 DBC\n*                    PREVIOUSLY USED PERIODIC SORTS AND     * 11/83 DBC\n*                    PARTIAL REFILL METHOD HAS BEEN         * 11/83 DBC\n*                    DISCARDED.                             * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - PRIOR VERSIONS OF DYNABLDL DID NOT     * 11/83 DBC\n*                    INTERCEPT LINKLIST BLDL REQUESTS IN    * 11/83 DBC\n*                    WHICH THE USER REQUESTED TWO OR MORE   * 11/83 DBC\n*                    NAMES. FURTHER, PRIOR DYNABLDLS DID    * 11/83 DBC\n*                    NOT COUNT SUCH IGNORED REQUESTS AS     * 11/83 DBC\n*                    \"MISSES\". CONSEQUENTLY, THE \"HIT RATE\" * 11/83 DBC\n*                    REPORTED BACK WAS INCORRECT. (IT WAS   * 11/83 DBC\n*                    TOO HIGH). THIS VERSION OF DYNABLDL    * 11/83 DBC\n*                    DOES HANDLE MULTI-ENTRY BLDL REQUESTS, * 11/83 DBC\n*                    AND MY EXPERIENCE HAS BEEN THAT THE    * 11/83 DBC\n*                    TRUE HIT RATE HAS RISEN FROM ABOUT 80% * 11/83 DBC\n*                    TO BETTER THAN 95%.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - THE REPORT FUNCTION NOW PRODUCES THREE * 11/83 DBC\n*                    LISTINGS OF THE DYNAMIC TABLE (PRINTED * 11/83 DBC\n*                    IN 3-COLUMN FORMAT USING LESS THAN 79  * 11/83 DBC\n*                    CHARACTERS PER LINE - SUITABLE FOR     * 11/83 DBC\n*                    3270 DISPLAY). ONE LISTING IS SORTED   * 11/83 DBC\n*                    BY NAME; A SECOND IS SORTED BY HITS    * 11/83 DBC\n*                    COUNT; THE THIRD IS SORTED BY L.R.U.   * 11/83 DBC\n*                    CHARACTERISTIC.                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - THE DYNABLDL STOP FUNCTION NOW         * 11/83 DBC\n*                    COMPLETELY REMOVES DYNABLDL FROM THE   * 11/83 DBC\n*                    SYSTEM RATHER THAN JUST DISABLING THE  * 11/83 DBC\n*                    HOOK ROUTINES.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         TITLE 'DOCUMANTATION'                                11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*              INSTALLATION GUIDE                           * 11/83 DBC\n*                                                           * 11/83 DBC\n* USE THE FOLLOWING STEPS TO INSTALL DYNABLDL.              * 11/83 DBC\n*                                                           * 11/83 DBC\n* EXAMINE THE MICROFICHE FOR THE VERSION OF IGC018 (THE     * 11/83 DBC\n* BLDL SVC ROUTINE) THAT EXISTS ON YOUR SYSTEM. IN          * 11/83 DBC\n* PARTICULAR, EXAMINE THE FOLLOWING.                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE MODULE IDENTIFICATION FIELDS LOCATED NEAR    * 11/83 DBC\n*          THE START OF IGC018. THIS IS USED BY DYNABLDL TO * 11/83 DBC\n*          IDENTIFY THE VERSION OF IGC018 THAT EXISTS IN    * 11/83 DBC\n*          YOUR SYSTEM.                                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE CODE LOCATED AT IGC018'S LABEL \"SRCHPDS\".    * 11/83 DBC\n*          THIS IS WHERE DYNABLDL INSERTS ITS JUMP TO ITS   * 11/83 DBC\n*          DYNAMIC TABLE LOOKUP ROUTINE.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE CODE LOCATED AT ICG018'S LABEL \"DFOUND\" OR   * 10/85 DBC\n*          \"FINDKEY\" (DEPENDING UPON THE VERSION IF ICG018  * 10/85 DBC\n*          THAT YOU HAVE). THIS IS WHERE DYNABLDL INSERTS   * 10/85 DBC\n*          ITS JUMP TO ITS DYNAMIC TABLE UPDATE ROUTINE.    * 10/85 DBC\n*                                                           * 11/83 DBC\n*        - THE BASE REGISTER (USUALLY R13) AND              * 11/83 DBC\n*          DISPLACEMENTS OF THE FOLLOWING FIELDS IN THE     * 11/83 DBC\n*          \"WORKAREA\" DSECT.                                * 11/83 DBC\n*              RDAREA                                       * 11/83 DBC\n*              CONCAT#                                      * 11/83 DBC\n*          THESE ARE FIELDS REFERENCED BY THE INTERCEPT     * 11/83 DBC\n*          ROUTINES.                                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE BASE REGISTER (USUALLY R6) AND DISPLACEMENTS * 09/84 DBC\n*          OF THE FOLLOWING FIELDS IN THE SVRB EXTENDED     * 09/84 DBC\n*          SAVE AREA. (REMEMBER THAT AN ASSEMBLY XREF FOR   * 09/84 DBC\n*          IGC018 WILL LIST THE VALUES OF THE FOLLOWING     * 09/84 DBC\n*          LABELS AT +X'40' GREATER THAT THEIR TRUE OFFSETS * 09/84 DBC\n*          BECAUSE OF THE PRESENCE OF A 64-BYTE LONG PREFIX * 10/85 DBC\n*          SECTION IN THE RB DSECT MAP).                    * 09/84 DBC\n*              EXSKEY                                       * 09/84 DBC\n*              EXSFLG                                       * 09/84 DBC\n*              EXSBLDL (FLAG BIT)                           * 09/84 DBC\n*          THESE FIELDS AND FLAGS ARE REFERENCES BY THE     * 09/84 DBC\n*          INTERCEPT ROUTINES.                              * 09/84 DBC\n*                                                           * 11/83 DBC\n*        - THE REGISTER (USUALLY R12 AND NAMED \"RBASE\")     * 11/83 DBC\n*          USED AS IGC018'S PROGRAM BASE, AND ITS RELATIVE  * 11/83 DBC\n*          BASE ADDRESS (USUALLY X'2').                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE BASE REGISTERS USED BY IGC018 TO POINT TO:   * 11/83 DBC\n*              - THE DCB OF THE LIBRARIES CURRENTLY BEING   * 11/83 DBC\n*                SEARCHED (USUALLY R11 AND NAMED \"RDCB\"),   * 11/83 DBC\n*              - THE USER'S PARAMETER LIST THAT WAS PASSED  * 11/83 DBC\n*                TO THE BLDL ROUTINE (USUALLY R10 AND NAMED * 11/83 DBC\n*                \"RLIST\"),                                  * 11/83 DBC\n*              - THE PDS DIRECTORY ENTRY FOUND BY IGC018 AT * 11/83 DBC\n*                THE TIME THAT \"DFOUND\" IS CALLED (USUALLY  * 11/83 DBC\n*                R8 AND NAMED \"RPDS1\").                     * 11/83 DBC\n*                                                           * 11/83 DBC\n* EXAMINE THE VERSION TABLES ALREADY EXISTING IN THIS       * 11/83 DBC\n* DYNABLDL TO SEE IF ANY OF THEM MATCH YOUR VERSION OF      * 11/83 DBC\n* IGC018. IF SO, THEN DYNABLDL WILL FUNCTION ON YOUR SYSTEM * 11/83 DBC\n* WITHOUT MODIFICATION. IF NOT, THEN YOU WILL HAVE TO ADD A * 11/83 DBC\n* VERSION TABLE TO DYNABLDL DESCRIBING YOUR IGC018.  UNLESS * 11/83 DBC\n* THE LOGIC OF IGC018 CHANGES DRASTICLY, CREATING A NEW     * 11/83 DBC\n* VERSION TABLE SHOULD BE ALL THAT YOU NEED TO DO; YOU      * 11/83 DBC\n* SHOULD NOT HAVE TO CHANGE ANYTHING ELSE IN DYNABLDL.      * 11/83 DBC\n*                                                           * 11/83 DBC\n* NOTE, AN EASY TEST WOULD BE TO SIMPLY RUN DYNABLDL AS     * 11/83 DBC\n* RECEIVED. IF IT RECOGNIZES YOUR IGC018, THEN IT WILL RUN. * 11/83 DBC\n* IF IT CANNOT RECOGNIZE YOUR IGC018, THEN IT WILL SAY SO   * 11/83 DBC\n* AND TERMINATE.                                            * 11/83 DBC\n*                                                           * 11/83 DBC\n* IF YOU NEED TO ADD A NEW VERSION TABLE, THEN DO THE       * 11/83 DBC\n* FOLLOWING:                                                * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - USING THE INFORMATION GATHERED BY YOUR           * 11/83 DBC\n*          EXAMINATION OF IGC018, CREATE A NEW VERSION      * 11/83 DBC\n*          TABLE MODELED ON THE VERSION TABLES ALREADY      * 11/83 DBC\n*          PROVIDED. BE SURE TO INCLUDE A 4-ELEMENT VECTOR  * 11/83 DBC\n*          POINTING TO THE FOUR PARTS OF YOUR NEW VERSION   * 11/83 DBC\n*          TABLE.                                           * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - ADD TO THE \"VERSIONS\" VECTOR AN ENTRY POINTING   * 11/83 DBC\n*          TO YOUR 4-ELEMENT VECTOR.                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - REASSEMBLE DYNABLDL USING \"SYS1.MACLIB\",         * 11/83 DBC\n*          \"SYS1.AMODGEN\", AND THE MACLIB PROVIDED WITH THE * 11/83 DBC\n*          DYNABLDL DISTRIBUTION.                           * 11/83 DBC\n*                                                           * 11/83 DBC\n* LINK EDIT DYNABLDL INTO A LINKLIST LIBRARY OR SOME OTHER  * 11/83 DBC\n* AUTHORIZED LIBRARY. NOTE, ALTHOUGH THE INTERCEPT ROUTINES * 11/83 DBC\n* INSERTED INTO IGC018 ARE REENTRANT, DYNABLDL ITSELF IS    * 11/83 DBC\n* NOT. THEREFORE, DYNABLDL SHOULD NOT BE PLACED IN          * 11/83 DBC\n* SYS1.LPALIB.                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n* CREATE THE FOLLOWING PROC NAMED DYNABLDL:                 * 11/83 DBC\n*                                                           * 11/83 DBC\n*        //IEFPROC EXEC PGM=DYNABLDL,REGION=100K            * 11/83 DBC\n*        //STEPLIB  DD  DSN= --- (ONLY IF NOT IN LINKLIST)  * 11/83 DBC\n*        //IEFRDER  DD  DDNAME=SYSPRINT                     * 11/83 DBC\n*        //SYSPRINT DD  SYSOUT=A (USED FOR REPORT FUNCTION) * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         EJECT ,                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*              USER'S GUIDE                                 * 11/83 DBC\n*                                                           * 11/83 DBC\n* THE FOLLOWING ASSUMES THAT DYNABLDL HAS BEEN INSTALLED AS * 11/83 DBC\n* DESCRIBED ABOVE.                                          * 11/83 DBC\n*                                                           * 11/83 DBC\n* TO START DYNABLDL USE THE FOLLOWING OPERATOR COMMAND.     * 11/83 DBC\n*        S DYNABLDL                -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=START     -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=S                                  * 11/83 DBC\n* DYNABLDL WILL (A) ATTEMPT TO RECOGNIZE THE VERSION OF     * 11/83 DBC\n* IGC018 RUNNING ON YOUR SYSTEM, (B) DETERMINE WHETHER OR   * 11/83 DBC\n* DYNAMIC BLDL PROCESSING IS ALREADY UP AND RUNNING,        * 11/83 DBC\n* (C) GENERATE INTERCEPT ROUTINES IN FIXED GLOBAL MEMORY,   * 11/83 DBC\n* (D) INSERT INTO IGC018 JUMPS TO THE INTERCEPT ROUTINES,   * 11/83 DBC\n* AND (E) TERMINATE LEAVING BEHIND THE ENABLED INTERCEPT    * 11/83 DBC\n* ROUTINES.                                                 * 11/83 DBC\n*                                                           * 11/83 DBC\n* TO STOP DYNABLDL USE THE FOLLOWING OPERATOR COMMAND.      * 11/83 DBC\n*        S DYNABLDL,PARM=STOP      -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=P                                  * 11/83 DBC\n* DYNABLDL WILL REMOVE THE HOOKS FROM IGC018 (BY RESTORING  * 11/83 DBC\n* THE ORIGINAL CODE) AND FREE THE GLOBAL MEMORY CONTAINING  * 11/83 DBC\n* THE INTERCEPT ROUTINES.                                   * 11/83 DBC\n*                                                           * 11/83 DBC\n* A DYNABLDL ACTIVITY REPORT CAN BE GENERATED ONLY WHILE    * 11/83 DBC\n* DYNABLDL PROCESSING IS ACTIVE. TO GENERATE AN ACTIVITY    * 11/83 DBC\n* REPORT, USE THE FOLLOWING OPERATOR COMMAND.               * 11/83 DBC\n*        S DYNABLDL,PARM=REPORT    -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=R                                  * 11/83 DBC\n*                                                           * 11/83 DBC\n* TO GENERATE ONLY AN ACTIVITY SUMMARY MESSAGE (WTO), USE   * 11/83 DBC\n* THE FOLLOWING OPERATOR COMMAND.                           * 11/83 DBC\n*        S DYNABLDL,DSN=NULLFILE,PARM=REPORT  -- OR --      * 11/83 DBC\n*        S DYNABLDL,DSN=NULLFILE,PARM=R                     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         TITLE 'IHASVC MACRO'                                 11/83 DBC\n         MACRO                                                11/83 DBC\n         IHASVC &D                                            11/83 DBC\nSVC      DSECT ,                                              11/83 DBC\nSVCENTRY DS    0XL8                SVC TABLE ENTRY            11/83 DBC\nSVCEP    DS    A                   A(SVC ROUTINE)             11/83 DBC\nSVCATTR1 DS    BL2                 ATTRIBUTES                 11/83 DBC\nSVCTP1   EQU   B'00000000'         TYPE 0                     11/83 DBC\nSVCTP2   EQU   B'10000000'         TYPE 2                     11/83 DBC\nSVCTP34  EQU   B'11000000'         TYPE 3/4                   11/83 DBC\nSVCTP6   EQU   B'00100000'         TYPE 6                     11/83 DBC\nSVCAPF   EQU   B'00001000'         CALLER MUST BE AUTHORIZED  11/83 DBC\nSVCESR   EQU   B'00000100'         \"ESR\" SVC                  11/83 DBC\nSVCNP    EQU   B'00000010'         NON-PREEMPTIVE SVC         11/83 DBC\nSVCLOCKS DS    BL2                 LOCK ATTRIBUTES            11/83 DBC\nSVCLL    EQU   B'10000000'         LOCAL LOCK                 11/83 DBC\nSVCCMS   EQU   B'01000000'         CMS LOCK                   11/83 DBC\nSVCOPT   EQU   B'00100000'         OPT LOCK                   11/83 DBC\nSVCALLOC EQU   B'00010000'         SALLOC LOCK                11/83 DBC\nSVCDISP  EQU   B'00001000'         DISP LOCK                  11/83 DBC\n         MEND                                                 11/83 DBC\n         TITLE '@ZAP MACRO'                                   11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        THIS MACRO BUILDS A ROUTINE TO DYNAMICALLY ADJUST  * 11/83 DBC\n*        AT EXECUTION TIME THOSE MACHINE INSTRUCTIONS THAT  * 11/83 DBC\n*        REFERENCE PRIVATE IBM DATA FIELDS.                 * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MACRO                                                11/83 DBC\n&N       @ZAP  &X                                             11/83 DBC\n         GBLA  &@ZAP#,&@ZCNT,&@ZAPFO(1024)                    11/83 DBC\n         GBLC  &@ZAPZN(1024),&@ZAPFN(1024)                    11/83 DBC\n         LCLA  &F#,&FO,&SIGN                                  11/83 DBC\n         LCLC  &ZN,&CN,&FN,&NN,&VALUE,&C1                     11/83 DBC\n         AIF   ('&X' EQ '').DUMP                              11/83 DBC\n.*                                                            11/83 DBC\n&@ZAP#   SETA  &@ZAP#+1                                       11/83 DBC\n&ZN      SETC  'ZAP&@ZAP#'                                    11/83 DBC\n         AIF   ('&N' EQ '').GOTZN                             11/83 DBC\n&ZN      SETC  '&N'                                           11/83 DBC\n.GOTZN   ANOP                                                 11/83 DBC\n&ZN      DS    0H                                             11/83 DBC\n.*                                                            11/83 DBC\n&F#      SETA  0                                              11/83 DBC\n.LP1     AIF   (&F# GE N'&SYSLIST).END1                       11/83 DBC\n&F#      SETA  &F#+1                                          11/83 DBC\n&@ZCNT   SETA  &@ZCNT+1                                       11/83 DBC\n&@ZAPZN(&@ZCNT) SETC '&ZN'                                    11/83 DBC\n&@ZAPFN(&@ZCNT) SETC '&SYSLIST(&F#,1)'                        11/83 DBC\n&VALUE   SETC  '&SYSLIST(&F#,2)'                              11/83 DBC\n&C1      SETC  '&VALUE'(1,1)                                  11/83 DBC\n&SIGN    SETA  1                                              11/83 DBC\n         AIF   ('&C1' NE '+' AND '&C1' NE '-').GOTNUM         11/83 DBC\n&VALUE   SETC  '&VALUE'(2,K'&VALUE-1)                         11/83 DBC\n         AIF   ('&C1' EQ '+').GOTNUM                          11/83 DBC\n&SIGN    SETA  -1                                             11/83 DBC\n.GOTNUM  ANOP                                                 11/83 DBC\n&@ZAPFO(&@ZCNT) SETA &SIGN*&VALUE                             11/83 DBC\n         AGO   .LP1                                           11/83 DBC\n.*                                                            11/83 DBC\n.END1    MEXIT                                                11/83 DBC\n.*                                                            11/83 DBC\n.*                                                            11/83 DBC\n.*                                                            11/83 DBC\n.DUMP    ANOP                                                 11/83 DBC\n&NN      SETC  '&N'                                           11/83 DBC\n&F#      SETA  0                                              11/83 DBC\n.LP2     AIF   (&F# GE &@ZCNT).END2                           11/83 DBC\n&F#      SETA  &F#+1                                          11/83 DBC\n         AIF   ('&ZN' EQ '&@ZAPZN(&F#)').NSPACE               11/83 DBC\n         SPACE 1                                              11/83 DBC\n&ZN      SETC  '&@ZAPZN(&F#)'                                 11/83 DBC\n.NSPACE  ANOP                                                 11/83 DBC\n&FN      SETC  '&@ZAPFN(&F#)'                                 11/83 DBC\n&FO      SETA  &@ZAPFO(&F#)                                   11/83 DBC\n&C1      SETC  '+'                                            11/83 DBC\n         AIF   (&FO GE 0).GOTSIGN                             11/83 DBC\n&C1      SETC  '-'                                            11/83 DBC\n.GOTSIGN ANOP                                                 11/83 DBC\n         AIF   (&FO/2*2 NE &FO).IMED                          11/83 DBC\n&NN      LH    R0,&ZN&C1&FO                                   11/83 DBC\n&NN      SETC  ''                                             11/83 DBC\n         AH    R0,&FN                                         11/83 DBC\n         STH   R0,&ZN&C1&FO                                   11/83 DBC\n         AGO   .LP2                                           11/83 DBC\n.IMED    ANOP                                                 11/83 DBC\n&NN      OC    &ZN&C1&FO.(1),&FN                              11/83 DBC\n&NN      SETC  ''                                             11/83 DBC\n         AGO   .LP2                                           11/83 DBC\n.*                                                            11/83 DBC\n.END2    ANOP                                                 11/83 DBC\n&@ZCNT   SETA  0                                              11/83 DBC\n         MEND                                                 11/83 DBC\n         TITLE 'IBM CONTROL BLOCK MAPS'                       11/83 DBC\n         PUNCH '         SETCODE AC(1)'                       11/83 DBC\n         SPACE 3                                              11/83 DBC\nDYNABLDL CSECT ,                                              11/83 DBC\n         PRINT NOGEN                                          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CVT = COMMUNICATIONS VECTOR TABLE                  * 11/83 DBC\n*        CVTFIX = PREFIX AND BASIC SECTIONS DSECT           * 11/83 DBC\n*        CVTFIX = PREFIX SECTION BASE                       * 11/83 DBC\n*        CVTMAP = BASIC SECTION BASE                        * 11/83 DBC\n*        CVTXTNT1 = OS COMMON EXTENSION DSECT AND BASE      * 11/83 DBC\n*        CVTXTNT2 = VS1/VS2 COMMON EXTENSION DSECT AND BASE * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CVT   DSECT=YES,PREFIX=YES,LIST=YES                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DCB = DATA CONTROL BLOCK                           * 11/83 DBC\n*        IHADCB = DSECT AND BASE                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DCBD  DSORG=(PS,PO)                                  11/83 DBC\n         SPACE 3                                              08/84 DBC\n************************************************************* 08/84 DBC\n*        PDS2 = PARTITIONED DATASET DIRECTORY ENTRIES FOR   * 08/84 DBC\n*               LOAD MODULES AS SHOWN BY THE BLDL SVC.      * 08/84 DBC\n*        PDS2 = DSECT AND BASE                              * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\n         IHAPDS ,                                             08/84 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SCVT = SECONDARY COMMUNICATIONS VECTOR TABLE       * 11/83 DBC\n*        SCVTSECT = DSECT AND BASE                          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         IHASCVT LIST=YES                                     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SVCTABLE = SVC TABLE ENTRY                         * 11/83 DBC\n*        SVC = DSECT AND BASE                               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         IHASVC ,                                             11/83 DBC\nSVCENTLN EQU   *-SVC               TABLE ENTRY LENGTH         11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        STANDARD REGISTER NAMES                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #REGS R,                  STANDARD REGISTER NAMES    11/83 DBC*\n               (BLDLBASE,R10),     IGC018 LOCATION POINTER    11/83 DBC*\n               (VERSBASE,R9),      SPECIFIC VERSION VECTOR PT 11/83 DBC*\n               (TABLBASE,R8)       HOOK ROUTINES AREA BASE    11/83 DBC\n         SPACE 1                                              11/83 DBC\nBLDLSVC  EQU   18                  BLDL SVC NUMBER            11/83 DBC\nENTRYCNT EQU   256                 DYNAMIC LIST SIZE          01/88 SBG\nCLOKSHFT EQU   10                  A SHIFT VALUE FOR          11/83 DBC\n*                                  SELECTING BITS 10-41 OF    11/83 DBC\n*                                  THE TOD CLOCK. NOTE, THESE 11/83 DBC\n*                                  ARE THE SAME BITS USED BY  11/83 DBC\n*                                  THE SRM FOR ITS INTERVAL   11/83 DBC\n*                                  TIMINGS.                   11/83 DBC\nLINKSVC  EQU   1                   BLDL'S SIGNAL RETURNED TO  11/83 DBC\n*                                  THE USER THAT THE          11/83 DBC\n*                                  DIRECTORY ENTRY WAS FOUND  11/83 DBC\n*                                  IN EITHER SVCLIB OR A      11/83 DBC\n*                                  LINKLIST LIBRARY.          11/83 DBC\nLEN3270  EQU   79                  LENGTH OF A 3270 DISPLAY   11/83 DBC\n*                                  LINE                       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  SUBAD=PUTWTO,MF=INIT                           11/83 DBC\n         SPACE 3                                              11/83 DBC\n         PRINT ON,GEN,NODATA                                  11/83 DBC\n         EJECT ,                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        BLDLIST -- THIS DSECT MAPS PLIST HEADER FIELDS     * 11/83 DBC\n*        THAT A USER OF THE BLDL SVC PASSES TO BLDL.        * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nBLDLIST  DSECT ,                   BLDL PLIST HEADER          11/83 DBC\nBLDENTS  DS    H                   NUMBER OF ELEMENTS BEING   11/83 DBC\n*                                  PASSED                     11/83 DBC\nBLDELEN  DS    H                   THE LENGTH OF EACH ELEMENT 11/83 DBC\nBLDENT   DS    0C                  THE START OF THE FIRST     11/83 DBC\n*                                  ELEMENT                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        PDS1 -- THIS DSECT MAPS A PDS DIRECTORY ENTRY.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPDS1     DSECT ,                   PDS DIRECTORY ENTRY        11/83 DBC\nPDS1NAME DS    CL8                 MEMBER NAME                11/83 DBC\nPDS1TTRP DS    XL3                 MEMBER'S TTR IN THE DASD   11/83 DBC\n*                                  LIBRARY                    11/83 DBC\nPDS1INDC DS    B                   FLAGS & L'UDATA/2          11/83 DBC\nPDS1LUSR EQU   B'00011111'         LENGTH BITS                11/83 DBC\nPDS1USRD DS    0X                  USER DATA FIELDS           11/83 DBC\n         TITLE 'DYNAHEAD DSECT'                               11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        DYNAHEAD -- THIS DSECT MAPS THE DYNAMIC AREA       * 11/83 DBC\n*        DESCRIPTOR TABLE.                                  * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNAHEAD DSECT ,                                              11/83 DBC\nDHID     DC    CL8'DYNAHEAD'       ID FIELD                   11/83 DBC\nAREA     DC    A(DYNAHEAD)         A(DYNA AREA)               11/83 DBC\nAREASPLN DS    A                   AREA'S SUBPOOL AND LENGTH  11/83 DBC\nSRCHPOPT DS    A                   A(SRCHPDS HOOK ROUTINE)    11/83 DBC\nDFOUNDPT DS    A                   A(DFOUND HOOK ROUTINE)     11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNAFIRS DC    A(*-*)            | --> FIRST DYNALIST ENTRY   11/83 DBC\nDYNAELEN DC    A(DYNLLEN)        | L' EACH DYNLLIST ENTRY     11/83 DBC\nDYNALAST DC    A(*-*+(ENTRYCNT-1)*DYNLLEN) --> LAST ENTRY     11/83 DBC\nDYNACLOK DS    F                   STARTUP TIME (BITS 10-41)  11/83 DBC\nDYNAHITS DC    F'0'                LIST HITS                  11/83 DBC\nDYNAMISS DC    F'0'                LIST MISSES                11/83 DBC\nDYNADDED DC    F'0'                NAMES ADDED TO LIST        11/83 DBC\n*                                  (INCLUDING STEALS)         11/83 DBC\nDHEADLEN EQU   *-DYNAHEAD          L'HEADER                   11/83 DBC\n         TITLE 'DYNL DSECT'                                   11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        DYNL -- THIS DSECT MAPS A DYNAMIC BLDL LIST ENTRY. * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNL     DSECT ,                                              11/83 DBC\nDYNLLRU# DS    F                   L.R.U. ALGORYTHM CONTROL   11/83 DBC\nDYNLHITS DS    F                   HIT COUNT                  11/83 DBC\nDYNLCLOK DS    F                   ENTRY CREATION TIME        11/83 DBC\nDYNLELEN DS    H                   L'DIRECTORY ENTRY IN THIS  11/83 DBC\n*                                  SLOT                       11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        GENERAL FORMAT PDS DIRECTORY ENTRY                 * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDENT     DS    0D                                             11/83 DBC\nDENTNAME DS    CL8                 MEMBER NAME. NOTE, THIS    11/83 DBC\n*                                  FIELD MUST BE DWORD        11/83 DBC\n*                                  ALIGNED DUE TO A \"CDS\"     11/83 DBC\n*                                  INSTRUCTION THAT IS ISSUED 11/83 DBC\n*                                  AGAINST IT                 11/83 DBC\nDYNLLOCK EQU   DENTNAME+3-DENTNAME LOCAL CONTROL LOCK BYTE    11/83 DBC\nUNLOCKED EQU   C' '                LOCAL CONTROL LOCK FLAG    11/83 DBC\nDENTTTRP DS    XL3                 MEMBER'S TTR IN THE DASD   11/83 DBC\n*                                  LIBRARY                    11/83 DBC\nDENTCNCT DS    FL1                 LIBRARY CONCATENATION      11/83 DBC\n*                                  INDEX                      11/83 DBC\nDENTLIBF DC    AL1(LINKSVC)        ORIGINATING LIBRARY TYPE   11/83 DBC\n*                                  ALWAYS \"LINKLIST LIB\")     11/83 DBC\nDENTINDC DS    B                   FLAGS & L'UDATA/2          11/83 DBC\nDENTLUSR EQU   B'00011111'         LENGTH BITS                11/83 DBC\nDENTUSRD DS    XL(DENTLUSR*2)      USER DATA (MAX LENGTH)     11/83 DBC\nDENTLEN  EQU   *-DENT              MAX D'ENTRY LENGTH         11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNLEND  DS    0D                  ALIGNMENT                  11/83 DBC\nDYNLLEN  EQU   DYNLEND-DYNL        L'DYNAMIC BLDL LIST ENTRY  11/83 DBC\n         TITLE 'IGC018 DSECT'                                 11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        IGC018 -- THIS IS A DUMMY DSECT USED SIMPLY TO     * 11/83 DBC\n*        SHOW WHERE, IN THE CODE, \"BLDLBASE\" IS LOADED AND  * 11/83 DBC\n*        WHERE IT IS NOT.                                   * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nIGC018   DSECT ,                                              11/83 DBC\n         TITLE 'VERSION DSECT'                                11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        VERSION -- THIS DSECT MAPS A VECTOR CONTAINING     * 11/83 DBC\n*        POINTERS TO THE FOUR PARTS OF A VERSION TABLE.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSION  DSECT ,                                              11/83 DBC\nIDVV     DS    A                   --> VERSION VERIFIER       11/83 DBC\nSRCHPOVV DS    A                   --> ORIGINAL \"SRCHPDS\" COD 11/83 DBC\nDFOUNDVV DS    A                   --> ORIGINAL \"DFOUND\" CODE 11/83 DBC\nDATAOFFS DS    A                   --> IBM DATA FIELDS DESCRIPTORS  DBC\n         TITLE 'ORIGINAL DSECT'                               11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        ORIGINAL -- THIS DSECT MAPS CONTROL BLOCKS (PARTS  * 11/83 DBC\n*        ONE, TWO, AND THREE OF THE VARIOUS VERSION TABLES) * 11/83 DBC\n*        THAT DESCRIBE SECTIONS OF ORIGINAL CODE IN IGC018. * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nORIGINAL DSECT ,                                              11/83 DBC\nORIGLOC  DS    Y                   OFFSET TO ORIGINAL CODE'S LOCATION C\nORIGLEN  DS    Y                   ORIGINAL CODE'S LENGTH     11/83 DBC\nORIGCODE DS    0X                  ORIGINAL CODE              11/83 DBC\n         TITLE 'FIELDS DSECT'                                 11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        FIELDS -- THIS DSECT MAPS TABLES THAT DESCRIBE IBM * 11/83 DBC\n*        PRIVATE DATA FIELDS. EACH ENTRY CORRESPONDS EITHER * 11/83 DBC\n*        TO A DATA FIELD OR TO IMMEDIATE DATA THAT DYNABLDL * 11/83 DBC\n*        REFERENCES BUT THAT IS PRIVATE TO IBM AND,         * 11/83 DBC\n*        THEREFORE, MAY CHANGE ACCROSS VARIOUS VERSIONS OF  * 11/83 DBC\n*        IGC018.                                            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        DATA FIELD ENTRIES CONSIST OF AN S-CON             * 11/83 DBC\n*        (BASE-REGISTER/DISPLACEMENT) WHICH CAN BE USED TO  * 11/83 DBC\n*        REFERENCE THAT FIELD IN A PARTICULAR VERSION OF    * 11/83 DBC\n*        IGC018.                                            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"IMMEDIATE DATA\" ENTRIES CONSIST OF A SINGLE BYTE  * 11/83 DBC\n*        CONTAINING THE ACTUAL BIT PATTERN USED BY A        * 11/83 DBC\n*        PARTICULAR VERSION OF IGC018 TO REPRESENT THE      * 11/83 DBC\n*        IMMEDIATE DATA.                                    * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nFIELDS   DSECT ,                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        VARIOUS BASE REGISTERS USED BY IGC018.             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nRBASE    DS    S                   IGC018'S PROGRAM BASE      11/83 DBC\n*                                  REGISTER DESCRIPTOR. THIS  11/83 DBC\n*                                  S-CON GIVES THE            11/83 DBC\n*                                  PROGRAMMING BASE REGISTER  11/83 DBC\n*                                  (USUALLY R12) AND THE      11/83 DBC\n*                                  RELATIVE BASE ADDRESS      11/83 DBC\n*                                  (USUALLY +2) USED BY       11/83 DBC\n*                                  IGC018.                    11/83 DBC\n         SPACE 1                                              11/83 DBC\nRPDS1    DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC\n*                                  POINT TO THE FOUND PDS     11/83 DBC\n*                                  DIRECTORY ENTRY AT THE     11/83 DBC\n*                                  TIME THAT \"DFOUND\" IS      11/83 DBC\n*                                  CALLED.                    11/83 DBC\nRLIST    DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC\n*                                  POINT TO THE USER'S BLDL   11/83 DBC\n*                                  PARAMETER LIST.            11/83 DBC\nRDCB     DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC\n*                                  POINT TO THE DCB FOR THE   11/83 DBC\n*                                  LIBRARIES CURRENTLY BEING  11/83 DBC\n*                                  SEARCHED.                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        FIELDS IN IGC018'S DYNAMIC WORK AREA               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nRDAREA   DS    S                   BASE/DISPLACEMENT          11/83 DBC\n*                                  NOTE, THIS FIELD IS A 256  11/83 DBC\n*                                  BYTE DIRECTORY BLOCK       11/83 DBC\n*                                  BUFFER WHOSE INTERNAL      11/83 DBC\n*                                  STRUCTURE IS PUBLIC AND    11/83 DBC\n*                                  WHICH, AT THE TIME THE     11/83 DBC\n*                                  SRCHPDS HOOK ROUTINE IS    11/83 DBC\n*                                  CALLED, CAN BE USED BY     11/83 DBC\n*                                  DYNABLDL FOR ITS OWN       11/83 DBC\n*                                  PURPOSES.                  11/83 DBC\n         SPACE 1                                              11/83 DBC\nCONCAT#  DS    S                   BASE/DISPLACEMENT          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        FIELDS IN IGC018'S SVRB EXTENDED SAVE AREA         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nEXSKEY   DS    S                   BASE/DISPLACEMENT          11/83 DBC\nEXSFLG   DS    S                   BASE/DISPLACEMENT          09/84 DBC\nEXSBLDL  DS    B                   FLAG'S BIT VALUE           09/84 DBC\n         SPACE 3                                              11/83 DBC\nFIELDSLN EQU   *-FIELDS            L'DATA AREA                11/83 DBC\n         TITLE 'DYNAWA DSECT'                                 11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        DYNAWA -- DYNAMIC WORK AREA USED BY THE TWO HOOK   * 11/83 DBC\n*        ROUTINES. THE \"SRCHPDS\" ROUTINE MAPS THIS AREA     * 11/83 DBC\n*        INTO THE \"RDAREA\" FIELD OF BLDL'S \"WORKAREA\" DSECT * 11/83 DBC\n*        WHICH IS AN I/O BUFFER FOR DIRECTORY BLOCKS AND IS * 11/83 DBC\n*        NOT IN USE AT THE TIME THAT \"SRCHPDS\" IS CALLED.   * 11/83 DBC\n*        THE \"DFOUND\" ROUTINE HAS TO GETMAIN ITS \"DYNAWA\"   * 11/83 DBC\n*        AREA SINCE THE \"RDAREA\" FIELD IS IN USE AT THE     * 11/83 DBC\n*        TIME THAT \"DFOUND\" IS CALLED.                      * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNAWA   DSECT ,                   LOCAL DYNAMIC WORK AREA    11/83 DBC\nREGSAVE  DS    13A                 REGISTER SAVE AREA         11/83 DBC\nCLOKSAVE DS    2A                  \"STCK\" BUFFER              11/83 DBC\nKEYSAVE  DS    X                   CALLER'S KEY SAVE AREA     11/83 DBC\nUSERKEY  DS    X                   USER'S KEY SAVE AREA       11/83 DBC\nBLDLFLG  DS    B                   IGC018'S EXSFLG SAVE AREA  09/84 DBC\nCCIDSAVE DS    X                   CONCATENATION INDEX SAVE A 11/83 DBC\nDYNAWAL  EQU   *-DYNAWA            L'DYNAWA                   11/83 DBC\n         #TEST SIZE=(DYNAWAL,LE,256) MUST FIT WITHIN IGC018'S 11/83 DBC*\n                                   \"RDAREA\" FIELD             11/83 DBC\n         TITLE 'INFO DSECT'                                   11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        INFO -- THIS DSECT MAPS THE INFORMATION MESSAGE    * 11/83 DBC\n*        PRINTED BY THE REPORT FUNCTION FOR EACH DYNAMIC    * 11/83 DBC\n*        BLDL TABLE ENTRY. NOTE, EACH MESSAGE LINE CONTAINS * 11/83 DBC\n*        THREE SEGMENTS. THE FIRST CONTAINS INFORMATION     * 11/83 DBC\n*        SORTED BY BLDL MEMBER NAME. THE SECOND CONTAINS    * 11/83 DBC\n*        INFORMATION SORTED BY HITS FREQUENCY. THE THIRD    * 11/83 DBC\n*        CONTAINS INFORMATION SORTED BY LEAST RECENT USAGE. * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nINFO     DSECT ,                                              11/83 DBC\nCOUNT    DS    CL3,C' '            MSG LINE NUMBER            11/83 DBC\n         SPACE 1                                              11/83 DBC\nNAMEBAR  DS    C'|',C' '           GUTTER                     11/83 DBC\nNAMENAME DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC\nNAMELIB# DS    CL2,C' '            LINKLIST LIB ID NUMBER     11/83 DBC\nNAMEHITS DS    CL5,C' '            HITS COUNT                 11/83 DBC\n         SPACE 1                                              11/83 DBC\nHITSBAR  DS    C'|',C' '           GUTTER                     11/83 DBC\nHITSHITS DS    CL5,C' '            HITS COUNT                 11/83 DBC\nHITSRENT DS    C                   REENTRANT MODULE SIGNAL    08/84 DBC\nHITSNAME DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC\nHITSIDLE DS    CL4,C' '            ENTRY'S IDLE TIME          11/83 DBC\nHITSAGE  DS    CL4,C' '            ENTRY AGE                  11/83 DBC\n         SPACE 1                                              11/83 DBC\nLRUBAR   DS    C'|',C' '           GUTTER                     11/83 DBC\nLRUIDLE  DS    CL4,C' '            IDLE INTERVAL              11/83 DBC\nLRUNAME  DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC\nLRUHITS  DS    CL5                 HITS COUNT                 11/83 DBC\n         SPACE 1                                              11/83 DBC\nINFOLEN  EQU   *-INFO              MESSAGE LENGTH             11/83 DBC\n         #TEST SIZE=(INFOLEN,LE,LEN3270) SHOULD FIT ON A 3270 11/83 DBC\n         TITLE 'INITIAL ENTRY - FUNCTION SELECTION'           11/83 DBC\n************************************************************* 11/83 DBC\n*        STANDARD NON-REENTRANT ENTRY LINKAGE               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNABLDL #ENTER 'COPYRIGHT DAVID B. COLE - 1983',BASES=2      11/83 DBC\n         L     R3,0(,R1)           LOAD THE PARM FIELD PTR    11/83 DBC\n         LA    R3,0(,R3)           PURIFY IT                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        ENQ TO SERIALIZE DYNABLDL PROCESSING               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ENQ   MF=(E,SERIALIZ)                                11/83 DBC\n         OI    FLAG,ENQED          SET AUDIT FLAG             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        GET THE CURRENT T.O.D. ISSOLATE BITS 10-41 WHICH   * 11/83 DBC\n*        MEASURE TIME RANGING FROM ABOUT 1/1000TH OF A      * 11/83 DBC\n*        SECOND UP TO APPROXIMATELY ONE MONTH. NOTE, THIS   * 11/83 DBC\n*        IS THE SAME TIME SCALE USED BY THE SRM FOR ITS     * 11/83 DBC\n*        INTERVAL TIMINGS.                                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         STCK  CLOCK               GET THE TOD CLOCK          11/83 DBC\n         LM    R0,R1,CLOCK         LOAD THE VALUE             11/83 DBC\n         SLDL  R0,CLOKSHFT         ISSOLATE BITS 10-41 INTO   11/83 DBC\n*                                  REGISTER 0.                11/83 DBC\n         ST    R0,CLOCK            STORE BACK                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        LOCATE THE BLDL SVC ROUTINE (IGC018).              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     BLDLBASE,CVTPTR     --> CVT                    11/83 DBC\n         L     BLDLBASE,CVTABEND-CVTMAP(,BLDLBASE) --> SCVT   11/83 DBC\n         L     BLDLBASE,SCVTSVCT-SCVTSECT(,BLDLBASE) --> SVCTABLE 3 DBC\n         L     BLDLBASE,SVCENTRY-SVC+BLDLSVC*SVCENTLN(,BLDLBASE) 83 DBC\n*                                  --> IGC018                 11/83 DBC\n         USING IGC018,BLDLBASE     SIGNAL THIS FACT           11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        IDENTIFY WHICH VERSION OF IGC018 IS IN THIS        * 11/83 DBC\n*        SYSTEM.                                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R2,VERSIONS-4       --> RECOGNITION VECTOR     11/83 DBC\n         BALR  R4,0                LOAD LOOP POINT            11/83 DBC\n         LA    R2,4(,R2)           --> NEXT TABLES PTR        11/83 DBC\n         ICM   VERSBASE,15,0(R2)   --> SPECIFIC TABLES VECTOR 11/83 DBC\n*                                  EO-RECOG VECTOR?           11/83 DBC\n         BZ    UNRECOGN            YES, IGC018 NOT RECOGNIZED 11/83 DBC\n         USING VERSION,VERSBASE    NO, DCL TABLE VECTOR BASE  11/83 DBC\n         L     R1,IDVV             --> IDENTIFIER CODE        11/83 DBC\n         BAL   R14,VERIFY          DOES IGC018 MATCH THIS?    11/83 DBC\n         BR    R4                  +0 NO, KEEP TRYING         11/83 DBC\n         NOPR  0                      (FILLER)                11/83 DBC\n*                                  +4 YES, PROCEED            11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        THE CURRENT VERSION OF IGC018 HAS BEEN RECOGNIZED. * 11/83 DBC\n*        NOW EXAMINE THE \"SRCHPDS\" HOOK LOCATION TO SEE     * 11/83 DBC\n*        WHAT IT CONTAINS.                                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC\n         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC\n         LH    R15,ORIGLOC         GET HOOK OFFSET            11/83 DBC\n         LA    R15,IGC018(R15)     CNVRT TO AN ADDRESS        11/83 DBC\n         CLC   0(SRCHPOAA-SRCHPOHH,R15),SRCHPOHH HAS THE      11/83 DBC\n*                                  SRCHPO HOOK ALREADY BEEN   11/83 DBC\n*                                  SET?                       11/83 DBC\n         BE    VEROK1              YES, PROCEED               11/83 DBC\n         OI    FLAG,SRCHPO00       NO, REMEMBER               11/83 DBC\n         BAL   R14,VERIFY          DOES THE HOOK LOCATION     11/83 DBC\n*                                  CONTAIN WHAT IT OUGHT TO?  11/83 DBC\n         B     BADSTRUC            +0 NO, ERROR               11/83 DBC\n*                                  +4 YES, PROCEED            11/83 DBC\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\nVEROK1   DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW DO THE SAME FOR THE \"DFOUND\" HOOK LOCATION.    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC\n         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC\n         LH    R15,ORIGLOC         GET HOOK OFFSET            11/83 DBC\n         LA    R15,IGC018(R15)     CNVRT TO AN ADDRESS        11/83 DBC\n         CLC   0(DFOUNDAA-DFOUNDHH,R15),DFOUNDHH HAS THE      11/83 DBC\n*                                  DFOUND HOOK ALREADY BEEN   11/83 DBC\n*                                  SET?                       11/83 DBC\n         BE    VEROK2              YES, PROCEED               11/83 DBC\n         OI    FLAG,DFOUND00       NO, REMEMBER               11/83 DBC\n         BAL   R14,VERIFY          DOES THE HOOK LOCATION     11/83 DBC\n*                                  CONTAIN WHAT IT OUGHT TO?  11/83 DBC\n         B     BADSTRUC            +0 NO, ERROR               11/83 DBC\n*                                  +4 YES, PROCEED            11/83 DBC\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\nVEROK2   DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        EXAMINE THE PARM FIELD TO DETERMINE THE DESIRED    * 11/83 DBC\n*        FUNCTION (\"START\", \"STOP\", OR \"REPORT\").           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTR   R3,R3               IS A PARM FIELD SET UP?    11/83 DBC\n         BZ    START               NO, ASSUME \"START\"         11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R15,PARMS-(PRMROOTL-(L'PRMLEN-1)) YES, PRIME   11/83 DBC\n         SR    R2,R2               PRIME LENGTH REGISTER      11/83 DBC\n         BALR  R14,0               LOAD SCAN LOOP HEAD        11/83 DBC\n         LA    R15,PRMROOTL-(L'PRMLEN-1)(R2,R15) --> NEXT ENT 11/83 DBC\n         ICM   R2,3,PRMLEN(R15)    GET L'ENTRY; EO-TABLE?     11/83 DBC\n         BM    INVALID             YES, ERROR                 11/83 DBC\n         LA    R2,L'PRMLEN-1(,R2)  NO, GET L'TEXT+L'LENFLD-1  11/83 DBC\n         CLC   0(*-*,R3),PRMTEXT-2(R15) (EXECUTED)            11/83 DBC\n         #TEST SIZE=(PRMTEXT-2,EQ,PRMLEN)                     11/83 DBC\n         EX    R2,*-6              RIGHT ENTRY?               11/83 DBC\n         BHR   R14                 NOT YET, CONTINUE SEARCH   11/83 DBC\n         BL    INVALID             NO, INVALID PARM           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R15,PRMHNDLR(,R15)  YES, LOAD HANDLER ADDRESS  11/83 DBC\n         BR    R15                 GOTO THE HANDLER           11/83 DBC\n         TITLE 'START -- DYNAMIC BLDL STARTUP ROUTINE'        11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        START -- THIS ROUTINE STARTS UP DYNAMIC BLDL       * 11/83 DBC\n*        PROCESSING.                                        * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        START PROCESSING REQUIRES AUTHORIZATION. TEST THIS * 11/83 DBC\n*        (DRAMATICALLY) BY ATTEMPTING TO AQUIRE SUPERVISOR  * 11/83 DBC\n*        STATE.                                             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSTART    MODESET MODE=SUP          SET SUPERVISOR STATE       11/83 DBC\n         OI    FLAG,SUPER          REMEMBER IN SUPER STATE    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        START PROCESSING CAN PROCEED ONLY IF BOTH IGC018   * 11/83 DBC\n*        HOOKS ARE NOT YET SET. CHECK THIS OUT.             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,SRCHPO00+DFOUND00 ARE BOTH HOOK LOCATIONS 11/83 DBC\n*                                  CLEAR?                     11/83 DBC\n         BZ    DONEB4              NO, BOTH ARE SET; EXIT.    11/83 DBC\n         BM    MESS                NO, ONE IS, ONE ISN'T; THE 11/83 DBC\n*                                  USER MUST INVOKE STOP      11/83 DBC\n*                                  PROCESSING TO CLEAN UP THE 11/83 DBC\n*                                  MESS.                      11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        IGC018 HAS BEEN POSITIVELY RECOGNIZED. NOW ADJUST  * 11/83 DBC\n*        ALL IBM PRIVATE FIELD REFERENCES, CONTAINED IN THE * 11/83 DBC\n*        TWO HOOK ROUTINES (\"SRCHPDS\" AND \"DFOUND\"), SO     * 11/83 DBC\n*        THAT THEY CORRESPOND CORRECTLY TO THE RECOGNIZED   * 11/83 DBC\n*        VERSION OF IGC018. NOTE, I DO THIS NOW, PRIOR TO   * 11/83 DBC\n*        MOVING THE HOOK ROUTINES TO SP245, SO THAT I DON'T * 11/83 DBC\n*        HAVE TO DO IT IN KEY-0.                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DEVELOP A RETURN DESCRIPTOR FOR THE SRCHPDS HOOK.  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DATAOFFS         --> IBM PRIVATE FIELDS     11/83 DBC\n*                                  DESCRIPTORS                11/83 DBC\n         USING FIELDS,R1           DCL A BASE FOR THEM        11/83 DBC\n         SR    R14,R14             CLEAR FOR INSERT           11/83 DBC\n         ICM   R14,3,RBASE         GET IGC018'S BASE          11/83 DBC\n*                                  DESCRIPTOR                 11/83 DBC\n         SRDL  R14,12              SEPARATE THE DISPLACEMENT  11/83 DBC\n*                                  FROM THE BASE REG          11/83 DBC\n         SRL   R15,20              ALIGN THE DISPLACEMENT     11/83 DBC\n         SLL   R14,12              ALIGN THE REG VALUE        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,SRCHPOVV         --> SRCHPDS VERIFY DATA    11/83 DBC\n         DROP  R1                  RELEASE FIELDS BASE        11/83 DBC\n         USING ORIGINAL,R1         DCL VERIFY DATA BASE       11/83 DBC\n         LNR   R0,R15              GET BASE'S DISPLACEMENT    11/83 DBC\n         AH    R0,ORIGLOC          SUBTR FROM PATCH'S         11/83 DBC\n*                                  DISPLACEMENT               11/83 DBC\n         AH    R0,ORIGLEN          ADD IN THE PATCH'S LENGTH  11/83 DBC\n*                                  TO DETERMINE THE ADDRESS   11/83 DBC\n*                                  OF THE LOCATION PAST THE   11/83 DBC\n*                                  PATCH RELATIVE TO IGC018'S 11/83 DBC\n*                                  BASE REGISTER.             11/83 DBC\n         CL    R0,=X'00000FFF'     BASE REG OVERFLOW?         11/83 DBC\n         #DIE  H,'IGC018 IS LONGER THAN 4K' YES               11/83 DBC\n         OR    R0,R14              NO, GET COMBINED           11/83 DBC\n*                                  BASE/DISPLACEMENT VALUE    11/83 DBC\n         STH   R0,SRCHPOXX         STORE FOR USE BY @ZAP      11/83 DBC\n         DROP  R1                  RELEASE SRCHPDS VERIFY     11/83 DBC\n*                                  DATA BASE                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW DO THE SAME FOR THE DFOUND HOOK.               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DFOUNDVV         --> DFOUND VERIFY DATA     11/83 DBC\n         USING ORIGINAL,R1         DCL VERIFY DATA BASE       11/83 DBC\n         LNR   R0,R15              GET BASE'S DISPLACEMENT    11/83 DBC\n         AH    R0,ORIGLOC          SUBTR FROM PATCH'S         11/83 DBC\n*                                  DISPLACEMENT               11/83 DBC\n         AH    R0,ORIGLEN          ADD IN THE PATCH'S LENGTH  11/83 DBC\n*                                  TO DETERMINE THE ADDRESS   11/83 DBC\n*                                  OF THE LOCATION PAST THE   11/83 DBC\n*                                  PATCH RELATIVE TO IGC018'S 11/83 DBC\n*                                  BASE REGISTER.             11/83 DBC\n         CL    R0,=X'00000FFF'     BASE REG OVERFLOW?         11/83 DBC\n         #DIE  H,'IGC018 IS LONGER THAN 4K' YES               11/83 DBC\n         OR    R0,R14              NO, GET COMBINED           11/83 DBC\n*                                  BASE/DISPLACEMENT VALUE    11/83 DBC\n         STH   R0,DFOUNDXX         STORE FOR USE BY @ZAP      11/83 DBC\n         DROP  R1                  RELEASE DFOUND VERIFY DATA 11/83 DBC\n*                                  BASE                       11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW CALL @ZAP TO ADJUST ALL REFERENCES TO IBM      * 11/83 DBC\n*        PRIVATE DATA FIELDS.                               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DATAOFFS         --> THE TABLE OF IBM       11/83 DBC\n*                                  PRIVATE FIELD REFERENCE    11/83 DBC\n*                                  DESCRIPTORS.               11/83 DBC\n         L     R15,=A(@ZAP)        --> THE GRAND ADJUSTER     11/83 DBC\n         BALR  R14,R15             ADJUST IBM FIELDS REFS     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        NOW ALLOCATE GLOBAL, FIXED, KEY-0, FETCH           * 11/83 DBC\n*        ACCESSABLE MEMORY (SP245) INTO WHICH THE HOOK      * 11/83 DBC\n*        ROUTINES AND DYNAMIC BLDL TABLE WILL BE BUILT. THE * 11/83 DBC\n*        AREA WILL BE USED AS FOLLOWS.                      * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE \"DYNAHEAD\" TABLE.                            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE \"SRCHPDS\" HOOK ROUTINE CONSTRUCTED AS        * 11/83 DBC\n*          FOLLOWS:                                         * 11/83 DBC\n*          - THE \"SRCHPDS\" CODE RELOCATED FROM THIS MODULE, * 11/83 DBC\n*          - THE \"SRCHPDS\" VERIFIED CODE COPIED FROM        * 11/83 DBC\n*            IGC018,                                        * 11/83 DBC\n*          - THE \"SRCHPOBC\" BRANCH STATEMENT.               * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE \"DFOUND\" HOOK ROUTINE CONSTRUCTED AS         * 11/83 DBC\n*          FOLLOWS:                                         * 11/83 DBC\n*          - THE \"DFOUND\" CODE RELOCATED FROM THIS MODULE,  * 11/83 DBC\n*          - THE \"DFOUND\" VERIFIED CODE COPIED FROM IGC018, * 11/83 DBC\n*          - THE \"DFOUNDBC\" BRANCH STATEMENT.               * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE DYNAMIC BLDL TABLE, DWORD ALIGNED.           * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DETERMINE  THE AMOUNT OF MEMORY NEEDED.            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R0,7                GET DWORD ROUNDER          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R3,(DHEADLEN+7)/8*8 GET L'DYNAHEAD ROUNDED     11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,SRCHPOVV         --> VERIFIER               11/83 DBC\n         LH    R1,ORIGLEN-ORIGINAL(,R1) GET VERIFIED LEN      11/83 DBC\n         LA    R1,SRCHPOLL+L'SRCHPOBC+7(,R1) INCLUDE L'BODY - 11/83 DBC\n         OR    R1,R0                ROUNDED UP TO -           11/83 DBC\n         XR    R1,R0                 DWORD ALIGNMENT          11/83 DBC\n         AR    R3,R1               ACCUMULATE                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DFOUNDVV         --> VERIFIER               11/83 DBC\n         LH    R1,ORIGLEN-ORIGINAL(,R1) GET VERIFIED LEN      11/83 DBC\n         LA    R1,DFOUNDLL+L'DFOUNDBC+7(,R1) INCLUDE L'BODY - 11/83 DBC\n         OR    R1,R0                ROUNDED UP TO -           11/83 DBC\n         XR    R1,R0                 DWORD ALIGNMENT          11/83 DBC\n         AR    R3,R1               ACCUMULATE                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R1,DYNLLEN          GET L'DLIST ENTRY          11/83 DBC\n         #TEST SIZE=(DYNLLEN/8*8,EQ,DYNLLEN)                  11/83 DBC\n         MH    R1,=Y(ENTRYCNT)     GET DLIST TABLE SIZE       11/83 DBC\n         AR    R3,R1               ACCUMULATE IT              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        GETMAIN AND CLEAR THE AREA                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MODESET EXTKEY=ZERO,SAVEKEY=PSWKEY,WORKREG=2 KEY0    11/83 DBC\n         OI    FLAG,KEY0           SET AUDIT FLAG             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ICM   R3,8,=AL1(245)      GET SUBPOOL ID             11/83 DBC\n         GETMAIN R,LV=(R3)         ALLOCATE GLOBAL MEMORY     11/83 DBC\n         LR    TABLBASE,R1         COPY AREA PTR              11/83 DBC\n         USING DYNAHEAD,TABLBASE   DCL A BASE FOR IT          11/83 DBC\n         LR    R0,R1               COPY THE AREA PTR          11/83 DBC\n         LR    R1,R3               COPY THE AREA LENGTH       11/83 DBC\n         SR    R15,R15             PREPARE TO CLEAR THE AREA  11/83 DBC\n         MVCL  R0,R14              CLEAR THE AREA             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        BEGIN TO CONSTRUCT THE DYNAHEAD TABLE              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   DHID,=CL8'DYNAHEAD' STORE TABLE ID             11/83 DBC\n         ST    TABLBASE,AREA       SAVE A(AREA)               11/83 DBC\n         ST    R3,AREASPLN         SAVE SP & LEN OF AREA      11/83 DBC\n         MVC   DYNACLOK,CLOCK      COPY TOD BITS 10-41        11/83 DBC\n         LA    R14,DYNAHEAD+(DHEADLEN+7)/8*8 --> PAST TABLE   11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE SRCHPDS HOOK ROUTINE                 * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ST    R14,SRCHPOAA        STORE IGC018'S POINTER     11/83 DBC\n         ST    R14,SRCHPOPT        STORE A(SRCHPDS HOOK)      11/83 DBC\n         ST    TABLBASE,SRCHPODH   A(DYNAHEAD) --> SRCHPDS    11/83 DBC\n         LA    R0,SRCHPDS          --> SRCHPDS SOURCE         11/83 DBC\n         LA    R1,SRCHPOLL         GET ITS LENGTH             11/83 DBC\n         LR    R15,R1              GET L'SINK                 11/83 DBC\n         MVCL  R14,R0              COPY BODY OF SRCHPDS HOOK  11/83 DBC\n         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC\n         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC\n         LA    R0,ORIGCODE         --> CODE MATCHED IN IGC018 11/83 DBC\n         LH    R15,ORIGLEN         GET ITS LENGTH             11/83 DBC\n         LR    R1,R15              COPY                       11/83 DBC\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\n         MVCL  R14,R0              COPY IGC018 CODE           11/83 DBC\n         MVC   0(L'SRCHPOBC,R14),SRCHPOBC COPY RETURN INSTR   11/83 DBC\n         LA    R14,L'SRCHPOBC+7(,R14) ADVANCE -               11/83 DBC\n         SRL   R14,3                SCANNER -                 11/83 DBC\n         SLL   R14,3                 ROUNDED                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE DFOUND HOOK ROUTINE                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ST    R14,DFOUNDAA        STORE IGC018'S POINTER     11/83 DBC\n         ST    R14,DFOUNDPT        STORE A(DFOUND HOOK)       11/83 DBC\n         ST    TABLBASE,DFOUNDDH   A(DYNAHEAD) --> DFOUND     11/83 DBC\n         LA    R0,DFOUND           --> DFOUND SOURCE          11/83 DBC\n         LA    R1,DFOUNDLL         GET ITS LENGTH             11/83 DBC\n         LR    R15,R1              GET L'SINK                 11/83 DBC\n         MVCL  R14,R0              COPY BODY OF DFOUND HOOK   11/83 DBC\n         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC\n         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC\n         LA    R0,ORIGCODE         --> CODE MATCHED IN IGC018 11/83 DBC\n         LH    R15,ORIGLEN         GET ITS LENGTH             11/83 DBC\n         LR    R1,R15              COPY                       11/83 DBC\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\n         MVCL  R14,R0              COPY IGC018 CODE           11/83 DBC\n         MVC   0(L'DFOUNDBC,R14),DFOUNDBC COPY RETURN INSTR   11/83 DBC\n         LA    R14,L'DFOUNDBC+7(,R14) ADVANCE -               11/83 DBC\n         SRL   R14,3                SCANNER -                 11/83 DBC\n         SLL   R14,3                 ROUNDED                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE DYNAMIC LIST TABLE DESCRIPTOR AND    * 11/83 DBC\n*        SKELETON.                                          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ST    R14,DYNAFIRS        STORE SO-TABLE             11/83 DBC\n         LA    R0,DYNLLEN          GET L'ENTRY                11/83 DBC\n         ST    R0,DYNAELEN         STORE                      11/83 DBC\n         LR    R1,R0               COPY                       11/83 DBC\n         MH    R1,=Y(ENTRYCNT-1)   GET OFFSET TO LAST ENTRY   11/83 DBC\n         AR    R1,R14              CNVRT TO ADDRESS           11/83 DBC\n         ST    R1,DYNALAST         STORE                      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R14            DCL DYNL ENTRY BASE        11/83 DBC\nDYNLINIT OI    DENTNAME+DYNLLOCK,UNLOCKED \"NOT LOCKED\"        11/83 DBC\n         BXLE  R14,R0,DYNLINIT     LOOP FOR ALL ENTRIES       11/83 DBC\n         DROP  R14                 RELEASE DYNL ENTRY BASE    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        COPY THE HOOKS TO IGC018.                          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC\n         LH    R1,ORIGLOC-ORIGINAL(,R1) GET HOOK OFFSET       11/83 DBC\n         LA    R1,IGC018(R1)       GET HOOK ADDRESS           11/83 DBC\n         MVC   0(DFOUNDHL,R1),DFOUNDHH COPY HOOK TO IGC018    11/83 DBC\n         NI    FLAG,255-DFOUND00   REMEMBER HOOK NOW SET      11/83 DBC\n         SPACE 3                                              11/83 DBC\n         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC\n         LH    R1,ORIGLOC-ORIGINAL(,R1) GET HOOK OFFSET       11/83 DBC\n         LA    R1,IGC018(R1)       GET HOOK ADDRESS           11/83 DBC\n         MVC   0(SRCHPOHL,R1),SRCHPOHH COPY HOOK TO IGC018    11/83 DBC\n         NI    FLAG,255-SRCHPO00   REMEMBER HOOK NOW SET      11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        START PROCESSING DONE. CLEAN UP AND EXIT.          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  TABLBASE            RELEASE GLOBAL AREA BASE   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MODESET KEYADDR=PSWKEY,WORKREG=2 RESTORE KEY8        11/83 DBC\n         NI    FLAG,255-KEY0       CLEAR AUDIT FLAG           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         B     STARTED             ISSUE MSG AND EXIT         11/83 DBC\n         TITLE 'STOP -- DYNAMIC BLDL SHUTDOWN ROUTINE'        11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        STOP -- THIS ROUTINE SHUTS DOWN DYNAMIC BLDL       * 11/83 DBC\n*        PROCESSING.                                        * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        STOP PROCESSING REQUIRES AUTHORIZATION. TEST THIS  * 11/83 DBC\n*        (DRAMATICALLY) BY ATTEMPTING TO AQUIRE SUPERVISOR  * 11/83 DBC\n*        STATE.                                             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSTOP     MODESET MODE=SUP          SET SUPERVISOR STATE       11/83 DBC\n         OI    FLAG,SUPER          REMEMBER IN SUPER STATE    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        I WILL PROCEED ONLY IF AT LEAST ONE HOOK IS SET.   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,SRCHPO00+DFOUND00 IS EITHER HOOK SET?     11/83 DBC\n         BO    STOPDB4             NO, JUST EXIT              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        AT LEAST ONE HOOK HAS BEEN PREVIOUSLY SET. LOAD    * 11/83 DBC\n*        KEY0 SO THAT I CAN CLEAR IT (OR THEM).             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MODESET EXTKEY=ZERO,SAVEKEY=PSWKEY,WORKREG=2         11/83 DBC\n         OI    FLAG,KEY0           SET AUDIT FLAG             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CLEAR THE \"DFOUND\" HOOK FIRST.                     * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         BALR  TABLBASE,0          LOAD A NON-ZERO POINTER TO 11/83 DBC\n*                                  AN ACCESSIBLE GARBAGE AREA 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,DFOUND00       IS THIS HOOK ALREADY CLER? 11/83 DBC\n         BNZ   CLEARD1             YES, SKIP                  11/83 DBC\n         L     R1,DFOUNDVV         NO, --> VERIFY DATA        11/83 DBC\n         USING ORIGINAL,R1         DCL ITS BASE               11/83 DBC\n         LH    R15,ORIGLOC         GET HOOK'S OFFSET          11/83 DBC\n         LA    R15,IGC018(R15)     GET ITS ADDRESS            11/83 DBC\n         L     TABLBASE,DFOUNDAA-DFOUNDHH(,R15) --> INTERCEPT 11/83 DBC\n         L     TABLBASE,DFOUNDDH-DFOUND(,TABLBASE) -->        11/83 DBC\n*                                  DYNABLDL'S CONTROL TABLE   11/83 DBC\n         MVC   0(DFOUNDHL,R15),ORIGCODE CLEAR THE HOOK        11/83 DBC\n         OI    FLAG,DFOUND00       SET AUDIT FLAG             11/83 DBC\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\nCLEARD1  DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW CLEAR THE \"SRCHPDS\" HOOK.                      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,SRCHPO00       IS THIS HOOK ALREADY CLER? 11/83 DBC\n         BNZ   CLEARD2             YES, SKIP                  11/83 DBC\n         L     R1,SRCHPOVV         NO, --> VERIFY DATA        11/83 DBC\n         USING ORIGINAL,R1         DCL ITS BASE               11/83 DBC\n         LH    R15,ORIGLOC         GET HOOK'S OFFSET          11/83 DBC\n         LA    R15,IGC018(R15)     GET ITS ADDRESS            11/83 DBC\n         CLC   DHID-DYNAHEAD(,TABLBASE),=CL8'DYNAHEAD' IS     11/83 DBC\n*                                  CONTROL TABLE PTR OK?      11/83 DBC\n         BE    GOTDHPTR            YES, PROCEED               11/83 DBC\n         L     TABLBASE,SRCHPOAA-SRCHPOHH(,R15) NO, -->       11/83 DBC\n*                                  INTERCEPT ROUTINE          11/83 DBC\n         L     TABLBASE,SRCHPODH-SRCHPDS(,TABLBASE) -->       11/83 DBC\n*                                  DYNABLDL'S CONTROL TABLE   11/83 DBC\nGOTDHPTR MVC   0(SRCHPOHL,R15),ORIGCODE CLEAR THE HOOK        11/83 DBC\n         OI    FLAG,SRCHPO00       SET AUDIT FLAG             11/83 DBC\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\nCLEARD2  DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW, IF I WAS ABLE TO GET A POINTER TO THE HEADER  * 11/83 DBC\n*        TABLE, THEN FREEMAIN DYNABLDL'S GLOBAL DATA AREA.  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CLC   DHID-DYNAHEAD(,TABLBASE),=CL8'DYNAHEAD' DO I   11/83 DBC\n*                                  HAVE A PTR TO THE CONTROL  11/83 DBC\n*                                  TABLE?                     11/83 DBC\n         BNE   FREED               NO, FORGET IT              11/83 DBC\n         USING DYNAHEAD,TABLBASE   YES, DCL HEADER TABLE'S    11/83 DBC\n*                                  BASE                       11/83 DBC\n         L     R1,AREA             --> GLOBAL AREA            11/83 DBC\n         L     R0,AREASPLN         GET ITS SUBPOOL AND LENGTH 11/83 DBC\n         FREEMAIN R,LV=(0),A=(1)   FREE IT                    11/83 DBC\n         DROP  TABLBASE            RELEASE BASE               11/83 DBC\n         SR    TABLBASE,TABLBASE   SET \"TABLE FREED\" SIGNAL   11/83 DBC\nFREED    DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RESTORE KEY8.                                      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MODESET KEYADDR=PSWKEY,WORKREG=2                     11/83 DBC\n         NI    FLAG,255-KEY0       CLEAR AUDIT FLAG           11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        EXIT ACCORDING TO WHETHER OR NOT I WAS ABLE TO     * 11/83 DBC\n*        FREE THE GLOBAL AREA.                              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTR   TABLBASE,TABLBASE   WAS THE GLOBAL AREA FOUND? 11/83 DBC\n         BNZ   PARTSTOP            NO, ISSUE SPECIAL MSG      11/83 DBC\n         B     STOPPED             YES, EXIT NORMALLY         11/83 DBC\n         TITLE 'REPORT -- DYNAMIC BLDL ACTIVITY REPORTING ROUTINE'  DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        REPORT -- THIS ROUTINE GENERATES A REPORT OF       * 11/83 DBC\n*        DYNAMIC BLDL'S ACTIVITY. THREE SORTS OF THE TABLE  * 11/83 DBC\n*        ARE PRINTED IN 3-COLUMN FORMAT. THE FIRST LISTS    * 11/83 DBC\n*        THE TABLE BY MEMBER NAME. THE SECOND LISTS IT BY   * 11/83 DBC\n*        HIT COUNT (MOST HITS TO LEAST HITS). THE THIRD     * 11/83 DBC\n*        LISTS THE TABLE BY L.R.U. CHARACTERISTIC (MOST TO  * 11/83 DBC\n*        LEAST RECENTLY USED). ALSO A SUMMARY MESSAGE IS    * 11/83 DBC\n*        BOTH PRINTED AND DISPLAYED VIA WTO GIVING THE      * 11/83 DBC\n*        \"HIT RATE\" AND OTHER DATA.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n*        OUTPUT IS WRITTEN TO SYSPRINT WHICH CAN HAVE ANY   * 11/83 DBC\n*        RECORD FORMAT AND ANY RECORD LENGTH THAT CAN HOLD  * 11/83 DBC\n*        AT LEAST 79 BYTES OF DATA. NOTE THAT THE RECORD    * 11/83 DBC\n*        LENGTH IS SUITABLE FOR DISPLAY ON A 3270 TERMINAL. * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF SYSPRINT IS OMITTED, THEN ONLY A SUMMARY        * 11/83 DBC\n*        MESSAGE IS DISPLAYED TO THE OPERATORS.             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        PROCEED ONLY IF DYNABLDL IS CURRENTLY ACTIVE.      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nREPORT   TM    FLAG,SRCHPO00+DFOUND00 ARE BOTH HOOKS IN?      11/83 DBC\n         BNZ   DOWN                NO, EXIT                   11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DYNABLDL IS ACTIVE. LOCATE THE DYNABLDL GLOBAL     * 11/83 DBC\n*        AREA.                                              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     TABLBASE,DFOUNDVV   --> VERIFY DATA            11/83 DBC\n         LH    TABLBASE,ORIGLOC-ORIGINAL(,TABLBASE) GET HOOK  11/83 DBC\n*                                  OFFSET                     11/83 DBC\n         LA    TABLBASE,IGC018(TABLBASE) CNVRT TO ADDRESS     11/83 DBC\n         L     TABLBASE,DFOUNDAA-DFOUNDHH(,TABLBASE) -->      11/83 DBC\n*                                  \"SRCHPDS\" INTERCEPT        11/83 DBC\n         L     TABLBASE,DFOUNDDH-DFOUND(,TABLBASE) -->        11/83 DBC\n*                                  CONTROL TABLE              11/83 DBC\n         USING DYNAHEAD,TABLBASE   DCL ITS BASE               11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE FIRST SUMMARY MESSAGE.               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   STATBUF(11),=C'TABLE LIFE '                    11/83 DBC\n         L     R1,CLOCK            GET CURRENT TIME           11/83 DBC\n*                                  (SECONDS*1024)             11/83 DBC\n         S     R1,DYNACLOK         GET TABLE LIFE             11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC\n         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         SR    R0,R0               CLEAR AGAIN                11/83 DBC\n         D     R0,=F'60'           CNVRT TO HOURS(R1) & MINS  11/83 DBC\n         BAL   R14,ZONEIT          CNVRT HOURS TO EBCDIC      11/83 DBC\n         MVC   STATBUF+11(*-*),0(R1) (EXECUTED)               11/83 DBC\n         EX    R15,*-6             COPY TO MSG L-J            11/83 DBC\n         LA    R5,STATBUF+12(R15)  LOAD SCANNER               11/83 DBC\n         MVI   0(R5),C':'          DELIMITER                  11/83 DBC\n         CVD   R0,DWORK            CNVRT MINS TO DECIMAL      11/83 DBC\n         UNPK  1(2,R5),DWORK(8)    ZONE IT                    11/83 DBC\n         OI    2(R5),C'0'          FIX THE FUCKING SIGN       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   3(10,R5),=C', ENTRIES '                        11/83 DBC\n         LM    R1,R3,DYNAFIRS      LOAD TABLE DESCRIPTOR      11/83 DBC\n         LR    R0,R1               SAVE SO-TABLE              11/83 DBC\nENTCNT   CLI   DENTNAME-DYNL(R1),0 UNUSED SLOT YET?           04/84 JLC\n         BE    ENTCNTZ             YES, DONE HERE             11/83 DBC\n         BXLE  R1,R2,ENTCNT        NO, KEEP SCANNING          11/83 DBC\nENTCNTZ  SR    R1,R0               YES, GET LIST SIZE         11/83 DBC\n         SR    R0,R0               CLEAR FIR DIVIDE           11/83 DBC\n         DR    R0,R2               GET # USED SLOTS           11/83 DBC\n         BAL   R14,ZONEIT          CONVERT IT TO EBCDIC       11/83 DBC\n         MVC   13(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY IT JEFT JUSTIFIED     11/83 DBC\n         LA    R5,14(R15,R5)       ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CL    R5,=A(STATBUF+L'STATBUF) BUFFER OVERFLOW?      11/83 DBC\n         #DIE  H                   YES, DESIGN ERROR          11/83 DBC\n         LA    R1,STATBUF          NO, --> SO-BUFFER          11/83 DBC\n         SR    R5,R1               GET L'MSG                  11/83 DBC\n         STC   R5,STATBUF-1        STORE FOR OUTPUT ROUTINES  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DISPLAY THE FIRST SUMMARY MESSAGE TO THE           * 11/83 DBC\n*        OPERATORS.                                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CH    R5,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC\n         BNH   STATLNOK            NO, PROCEED                11/83 DBC\n         LA    R5,WTOMAXL-9        YES, RESET                 11/83 DBC\nSTATLNOK MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC\n         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF COPY     11/83 DBC\n         LA    R5,9(,R5)           ADJ L'MSG                  11/83 DBC\n         STC   R5,WTOBUF+L'WTOHEAD-1 STORE FOR \"PUTWTO\"       11/83 DBC\n         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE SECOND SUMMARY MESSAGE.              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   STATBUF2(5),=C'HITS '                          11/83 DBC\n         L     R7,DYNAHITS         LOAD TOTAL HITS COUNT      11/83 DBC\n         LR    R1,R7               COPY FOR CONVERSION        11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   STATBUF2+5(*-*),0(R1) (EXECUTED)               11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R5,STATBUF2+6(R15)  ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   0(9,R5),=C', MISSES '                          11/83 DBC\n         ICM   R2,15,DYNAMISS      LOAD TOTAL MISSES; ANY?    11/83 DBC\n         BZ    NO2NDMSG            NO, NO USAGE               11/83 DBC\n         LR    R1,R2               COPY FOR CONVERSION        11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   9(*-*,R5),0(R1)     (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R5,10(R15,R5)       ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   0(13,R5),=C' (GOOD NAMES '                     11/83 DBC\n         L     R3,DYNADDED         GET STEAL COUNT            11/83 DBC\n         LR    R1,R3               COPY FOR CONVERSION        11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   13(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R5,14(R15,R5)       ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   0(12,R5),=C', BAD NAMES '                      11/83 DBC\n         LR    R1,R2               GET MISS COUNT             11/83 DBC\n         SR    R1,R3               SUBTR STEAL COUNT          11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   12(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R5,13(R15,R5)       ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   0(12,R5),=C'), HIT RATE ' YES                  11/83 DBC\n         AR    R2,R7               TOTAL USE COUNT            11/83 DBC\n         MH    R7,=H'1000'         SHIFT THE DECIMAL PLACE    11/83 DBC\n         SR    R6,R6               CLEAR FOR DIVIDE           11/83 DBC\n         DR    R6,R2               GET HIT RATE TO A 10TH OF  11/83 DBC\n*                                  A PERCENT                  11/83 DBC\n         SR    R1,R1               CLEAR ROUNDER              11/83 DBC\n         AR    R6,R6               DOUBLE THE REMAINDER       11/83 DBC\n         CR    R6,R2               NEED TO ROUND UP?          11/83 DBC\n         BL    NOROUNUP            NO, SKIP                   11/83 DBC\n         LA    R1,1                YES, RESET THE ROUNDER     11/83 DBC\nNOROUNUP AR    R1,R7               COPY AND ROUND FOR CNVRSN  11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   12(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R5,12(R15,R5)       --> LAST DIGIT (\"10THS\")   11/83 DBC\n         MVC   1(1,R5),0(R5)       MOVE IT OUT OF THE WAY     11/83 DBC\n         MVI   0(R5),C'.'          INSERT DECIMAL POINT       11/83 DBC\n         MVI   2(R5),C'%'          INSERT PERCENT SIGN        11/83 DBC\n         LA    R5,3(,R5)           ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CL    R5,=A(STATBUF2+L'STATBUF2) BUFFER OVERFLOW?    11/83 DBC\n         #DIE  H                   YES, DESIGN ERROR          11/83 DBC\n         LA    R1,STATBUF2         NO, --> SO-BUFFER          11/83 DBC\n         SR    R5,R1               GET L'MSG                  11/83 DBC\n         STC   R5,STATBUF2-1       STORE FOR OUTPUT ROUTINES  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DISPLAY THE SECOND SUMMARY MESSAGE TO THE          * 11/83 DBC\n*        OPERATORS.                                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CH    R5,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC\n         BNH   STATLOK2            NO, PROCEED                11/83 DBC\n         LA    R5,WTOMAXL-9        YES, RESET                 11/83 DBC\nSTATLOK2 MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC\n         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF2 COPY    11/83 DBC\n         LA    R5,9(,R5)           ADJ L'MSG                  11/83 DBC\n         STC   R5,WTOBUF+L'WTOHEAD-1 STORE FOR \"PUTWTO\"       11/83 DBC\n         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC\nNO2NDMSG DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE THIRD SUMMARY MESSAGE.               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   STATBUF3(14),=C'MAX ENTRY AGE ' TEXT           11/83 DBC\n         LM    R5,R7,DYNAFIRS      DYNA-TABLE DESCRIPTOR      11/83 DBC\n         USING DYNL,R5             DCL SLOT BASE              11/83 DBC\n         ICM   R0,15,DYNLCLOK      ANY SLOTS USED?            11/83 DBC\n         BZ    NO3RDMSG            NO, SKIP THIS MSG          11/83 DBC\nMXAGESCN CL    R0,DYNLCLOK         YES, ALREADY GOT OLDEST    11/83 DBC\n*                                  BIRTHDATE?                 11/83 DBC\n         BNH   MXAGENXT            YES, SKIP                  11/83 DBC\n         ICM   R1,15,DYNLCLOK      NO, GET OLDEST; EO-USED?   11/83 DBC\n         BZ    MXAGEGOT            YES, DONE HERE             11/83 DBC\n         LR    R0,R1               NO, COPY                   11/83 DBC\nMXAGENXT BXLE  R5,R6,MXAGESCN      CONTINUE SCANNING          11/83 DBC\n         DROP  R5                  RELEASE SLOT BASE          11/83 DBC\nMXAGEGOT L     R1,CLOCK            GET CURRENT TIME           11/83 DBC\n         SR    R1,R0               CNVRT BIRTHDATE TO AGE     11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC\n         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   STATBUF3+14(*-*),0(R1) (EXECUTED)              11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R4,STATBUF3+15(R15) ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   0(30,R4),=C' MINUTES, MAX ENTRY IDLE TIME '    11/83 DBC\n         LM    R5,R7,DYNAFIRS      DYNA-TABLE DESCRIPTOR      11/83 DBC\n         USING DYNL,R5             DCL SLOT BASE              11/83 DBC\n         L     R0,DYNLLRU#         PRINT LIMIT TESTER         11/83 DBC\nMXIDLELP CL    R0,DYNLLRU#         ALREADY GOT MOST IDLE?     11/83 DBC\n         BNH   MXIDLENX            YES, SKIP                  11/83 DBC\n         ICM   R1,15,DYNLLRU#      NO, GET MOST IDLE; EO-USD? 11/83 DBC\n         BZ    MXIDLEGO            YES, DONE HERE             11/83 DBC\n         LR    R0,R1               NO, COPY                   11/83 DBC\nMXIDLENX BXLE  R5,R6,MXIDLELP      CONTINUE SCANNING          11/83 DBC\n         DROP  R5                  RELEASE SLOT BASE          11/83 DBC\nMXIDLEGO L     R1,CLOCK            GET CURRENT TIME           11/83 DBC\n         SR    R1,R0               CNVRT IDLE TIME TO INTERVA 11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC\n         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   30(*-*,R4),0(R1)    (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R4,31(R15,R4)       ADVANCE SCANNER            11/83 DBC\n         MVC   0(8,R4),=C' MINUTES' MORE TEXT                 11/83 DBC\n         LA    R4,8(,R4)           ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CL    R4,=A(STATBUF3+L'STATBUF3) BUFFER OVERFLOW?    11/83 DBC\n         #DIE  H                   YES, DESIGN ERROR          11/83 DBC\n         LA    R1,STATBUF3         NO, --> SO-BUFFER          11/83 DBC\n         SR    R4,R1               GET L'MSG                  11/83 DBC\n         STC   R4,STATBUF3-1       STORE FOR OUTPUT ROUTINES  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DISPLAY THE THIRD SUMMARY MESSAGE TO THE           * 11/83 DBC\n*        OPERATORS.                                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CH    R4,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC\n         BNH   STATLOK3            NO, PROCEED                11/83 DBC\n         LA    R4,WTOMAXL-9        YES, RESET                 11/83 DBC\nSTATLOK3 MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC\n         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF3 COPY    11/83 DBC\n         LA    R4,9(,R4)           ADJ L'MSG                  11/83 DBC\n         STC   R4,WTOBUF+L'WTOHEAD-1 STORE FOR \"PUTWTO\"       11/83 DBC\n         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC\nNO3RDMSG DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        ATTEMPT TO OPEN SYSPRINT AND WRITE TITLE AND       * 11/83 DBC\n*        STATUS LINES.                                      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         OPEN  (SYSPRINT,OUTPUT)   ATTEMPT THE OPEN           11/83 DBC\n         TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN OPENED?      11/83 DBC\n         BZ    NOSYSP              NO, EXIT                   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  DYNATIT,SUBAD=PUTSYSP YES, SEND TITLE          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  NULL                SEND SPACER                11/83 DBC\n         #PUT  STATBUF             SEND SUMMARY MESSAGE       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  STATBUF2            PRINT 2ND MSG, IF ANY      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  STATBUF3            PRINT 3RD MSG, IF ANY      11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DETERMINE THE LOCATION AND SIZE OF THE DYNAMIC     * 11/83 DBC\n*        BLDL TABLE, AND THEN GETMAIN A LOCAL AREA THAT IS  * 11/83 DBC\n*        LARGE ENOUGH TO HOLD THREE COPIES.                 * 05/84 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LM    R5,R7,DYNAFIRS      LOAD THE TABLE DESCRIPTOR  11/83 DBC\n         LR    R1,R5               COPY SCANNER               11/83 DBC\nSIZESCAN CLI   DENTNAME-DYNL(R1),0 EMPTY SLOT YET?            04/84 JLC\n         BE    SIZEGOTN            YES, SIZE FOUND            11/83 DBC\n         BXLE  R1,R6,SIZESCAN      NO, CONTINUE SCANNING      11/83 DBC\nSIZEGOTN SR    R1,R5               EMPTY SLOT FOUND; GET      11/83 DBC\n*                                  TABLE SIZE; EMPTY?         11/83 DBC\n         BNP   EMPTY               YES, EXIT WITH MSG         11/83 DBC\n         LR    R7,R1               NO, SAVE TABLE SIZE        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R0,0(R1,R1)         DOUBLE IT                  11/83 DBC\n         AR    R0,R1               TRIPLE IT                  11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ST    R0,RTBLSIZE         SAVE FOR FREEMAIN          11/83 DBC\n         GETMAIN R,LV=(0)          GET A LOCAL AREA           11/83 DBC\n         ST    R1,RTBLPTR          SAVE FOR FREEMAIN          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW MAKE THE FIRST COPY OF THE ACTIVE TABLE, AND   * 11/83 DBC\n*        DETERMINE POINTERS TO WHERE THE OTHER TWO COPIES   * 11/83 DBC\n*        WILL GO.                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R3,R1               SAVE 1ST COPY POINTER      11/83 DBC\n         LR    R14,R5              --> COPY SOURCE            11/83 DBC\n         LR    R15,R7              GET ITS LENGTH             11/83 DBC\n         LR    R0,R3               --> COPY SINK              11/83 DBC\n         LR    R1,R7               GET ITS LENGTH             11/83 DBC\n         MVCL  R0,R14              MAKE THE 1ST COPY          11/83 DBC\n         LR    R4,R0               SAVE SECOND COPY POINTER   11/83 DBC\n         LA    R5,0(R7,R4)         GET 3RD COPY POINTER       11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SORT THE FIRST COPY OF THE DYNA-TABLE IN           * 11/83 DBC\n*        DESCENDING ORDER BY HITS COUNT.                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R15,R7              GET L'LIST                 11/83 DBC\n         LR    R0,R6               GET L'ENTRY                11/83 DBC\n         LR    R1,R3               GET A(LIST)                11/83 DBC\n         LA    R2,SORTHITS         --> COMPARE ROUTINE        11/83 DBC\n         BAL   R14,SORT            SORT THE MOTHER            11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CREATE AND SORT THE L.R.U. ORDERED LIST.           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R14,R4              --> COPY SINK              11/83 DBC\n         LR    R15,R7              GET L'SINK                 11/83 DBC\n         LR    R0,R3               --> COPY SOURCE            11/83 DBC\n         LR    R1,R7               GET L'COPY SOURCE          11/83 DBC\n         MVCL  R14,R0              MAKE THE 2ND COPY          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R15,R7              GET L'LIST                 11/83 DBC\n         LR    R0,R6               GET L'ENTRY                11/83 DBC\n         LR    R1,R4               GET A(LIST)                11/83 DBC\n         LA    R2,SORTLRU          --> COMPARE ROUTINE        11/83 DBC\n         BAL   R14,SORT            SORT THE LIST              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CREATE AND SORT THE NAME ORDERED LIST.             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R14,R5              --> COPY SINK              11/83 DBC\n         LR    R15,R7              GET L'SINK                 11/83 DBC\n         LR    R0,R3               --> COPY SOURCE            11/83 DBC\n         LR    R1,R7               GET L'COPY SOURCE          11/83 DBC\n         MVCL  R14,R0              MAKE THE 3RD COPY          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R15,R7              GET L'LIST                 11/83 DBC\n         LR    R0,R6               GET L'ENTRY                11/83 DBC\n         LR    R1,R5               GET A(LIST)                11/83 DBC\n         LA    R2,SORTNAME         --> COMPARE ROUTINE        11/83 DBC\n         BAL   R14,SORT            SORT THE LIST              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        PRINT THE TABLE TITLE LINES.                       * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  NULL                SPACE                      11/83 DBC\n         #PUT  NULL                SPACE                      11/83 DBC\n         #PUT  SORTTIT             TITLE                      11/83 DBC\n         #PUT  SORTTIT0            SUB-TITLE                  08/84 DBC\n         #PUT  SORTSUBT            SUB-TITLE                  11/83 DBC\n         #PUT  INFOBUF             BARRED SPACER              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SCAN THE THREE TABLES SIMULTANIOUSLY TO GENERATE   * 11/83 DBC\n*        THE THREE REPORTS IN 3-COLUMN FORMAT.              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R2,INFOBUF          --> MSG BUFFER             11/83 DBC\n         USING INFO,R2             DECLARE A BASE FOR IT      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         AR    R7,R3               --> PAST 1ST TABLE         11/83 DBC\n         SR    R7,R6               --> LAST ENTRY (BXLE LIM)  11/83 DBC\n         SPACE 1                                              11/83 DBC\nINFOLOOP MVI   INFO,C' '           CLEAR THE -                11/83 DBC\n         MVC   INFO+1(INFOLEN-1),INFO MESSAGE BUFFER          11/83 DBC\n         MVI   NAMEBAR,C'|'        INSERT GUTTER              11/83 DBC\n         MVI   HITSBAR,C'|'        INSERT GUTTER              11/83 DBC\n         MVI   LRUBAR,C'|'         INSERT GUTTER              11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R1,1                GET INCRIMENT              11/83 DBC\n         AH    R1,COUNTER          INCRIMENT LINE COUNTER     11/83 DBC\n         STH   R1,COUNTER          STORE NEW VALUE            11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   COUNT,0(R1)         COPY TO MSG L-J            11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        FORMAT INFO FROM THE HITS SORTED TABLE.            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R3             DCL TABLE ENTRY BASE       11/83 DBC\n         MVC   HITSNAME,DENTNAME   MEMBER NAME                11/83 DBC\n         SPACE 1                                              08/84 DBC\n         MVI   HITSRENT,C' '       CLEAR RENT SIGNAL          08/84 DBC\n         TM    PDS2ATR-PDS2+DENT,PDS2RENT REENTRANT MODULE?   08/84 DBC\n         BZ    HINORENT            NO, SKIP                   08/84 DBC\n         MVI   HITSRENT,C'*'       YES, SIGNAL THAT FACT      08/84 DBC\nHINORENT DS    0H                                             08/84 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,CLOCK            CURRENT TIME (APPROX       11/83 DBC\n*                                  SECONDS*1024)              11/83 DBC\n         S     R1,DYNLLRU#         CNVRT TO INTERVAL          11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC\n         LA    R1,30(,R1)          ADJUST FOR ROUNDING        11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC\n         MVC   HITSIDLE,ZONEBUF+L'ZONEBUF-L'HITSAGE COPY      11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'HITSIDLE-1,C' ' OVERFLOW?  11/83 DBC\n         BE    HIFITS              NO, SKIP                   11/83 DBC\n         MVC   HITSIDLE,=10C'*'    YES, \"SAY SO\"              11/83 DBC\nHIFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,CLOCK            CURRENT TIME (APPROX       11/83 DBC\n*                                  SECONDS*1024)              11/83 DBC\n         S     R1,DYNLCLOK         CNVRT TO INTERVAL          11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC\n         LA    R1,30(,R1)          ADJUST FOR ROUNDING        11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC\n         MVC   HITSAGE,ZONEBUF+L'ZONEBUF-L'HITSAGE COPY       11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'HITSAGE-1,C' ' OVERFLOW?   11/83 DBC\n         BE    HAFITS              NO, SKIP                   11/83 DBC\n         MVC   HITSAGE,=10C'*'     YES, \"SAY SO\"              11/83 DBC\nHAFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   HITSHITS,ZONEBUF+L'ZONEBUF-L'HITSHITS COPY     11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'HITSHITS-1,C' ' OVERFLOW?  11/83 DBC\n         BE    HHFITS              NO, PROCEED                11/83 DBC\n         MVC   HITSHITS,=10C'*'    YES, SIGNAL THAT           11/83 DBC\nHHFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  R3                  RELEASE HITS TABLE ENT BAS 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        FORMAT INFO FROM THE L.R.U. SORTED TABLE.          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R4             DCL TABLE ENTRY BASE       11/83 DBC\n         MVC   LRUNAME,DENTNAME    MEMBER NAME                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,CLOCK            CRNT TIME IN SECS*1024     11/83 DBC\n         S     R1,DYNLLRU#         CNVRT TO IDLE INTERVAL     11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO APPROX SECS       11/83 DBC\n         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC\n         MVC   LRUIDLE,ZONEBUF+L'ZONEBUF-L'LRUIDLE  COPY      11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'LRUIDLE-1,C' ' OVERFLOW?   11/83 DBC\n         BE    LUFITS              NO, PROCEED                11/83 DBC\n         MVC   LRUIDLE,=10C'*'     YES, SAY SO                11/83 DBC\nLUFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   LRUHITS,ZONEBUF+L'ZONEBUF-L'LRUHITS COPY       11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'LRUHITS-1,C' ' OVERFLOW?   11/83 DBC\n         BE    LHFITS              NO, PROCEED                11/83 DBC\n         MVC   LRUHITS,=10C'*'     YES, SIGNAL THAT           11/83 DBC\nLHFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  R4                  RELEASE DURA TABLE ENT BAS 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        FORMAT INFO FROM THE NAMES SORTED TABLE.           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R5             DCL TABLE ENTRY BASE       11/83 DBC\n         MVC   NAMENAME,DENTNAME   MEMBER NAME                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SR    R1,R1               CLEAR FOR INSERT           11/83 DBC\n         IC    R1,DENTCNCT         GET LIB#                   11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   NAMELIB#,0(R1)      COPY TO MSG                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   NAMEHITS,ZONEBUF+L'ZONEBUF-L'NAMEHITS COPY     11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'NAMEHITS-1,C' ' OVERFLOW?  11/83 DBC\n         BE    NHFITS              NO, PROCEED                11/83 DBC\n         MVC   NAMEHITS,=10C'*'    YES, SIGNAL THAT           11/83 DBC\nNHFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  R5                  RELEASE NAME TABLE ENT BAS 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DISPLAY THE MESSAGE AND THEN LOOP FOR THE NEXT     * 11/83 DBC\n*        ENTRIES.                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  INFOBUF             DISPLAY THE MSG            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         AR    R4,R6               ADVANCE 2ND TABLE SCANNER  11/83 DBC\n         AR    R5,R6               ADVANCE 3RD TABLE SCANNER  11/83 DBC\n         BXLE  R3,R6,INFOLOOP      ADVANCE 1ST TBL SCNR & LOO 11/83 DBC\n         DROP  R2                  RELEASE MSG BUFFER BASE    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DONE. FREEMAIN AND EXIT.                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LM    R0,R1,RTBLSIZE      LOAD REPORT AREA DESCRIPTR 11/83 DBC\n         FREEMAIN R,LV=(0),A=(1)   FREE IT                    11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SR    R1,R1               SINGAL NO TERMINATION MSG  11/83 DBC\n         B     EXIT0               GO EXIT                    11/83 DBC\n         DROP  TABLBASE            RELEASE CONTROL TABLE BASE 11/83 DBC\n         TITLE 'VARIOUS TERMINATION SETUPS'                   11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        THE FOLLOWING ARE VARIOUS TERMINATION SETUP        * 11/83 DBC\n*        ROUTINES.                                          * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 3                                              11/83 DBC\nBADSTRUC BAL   R1,EXIT16                                      11/83 DBC\n         DC    AL1(L'MBADSTRU)                                11/83 DBC\nMBADSTRU DC    C'DYNABLDL CANNOT FIND THE PROPER HOOK POINTS IN THE VER*\n               SION OF IGC018 INSTALLED ON THIS SYSTEM'       11/83 DBC\n         SPACE 3                                              11/83 DBC\nDONEB4   BAL   R1,EXIT4                                       11/83 DBC\n         DC    AL1(L'MDONEB4)                                 11/83 DBC\nMDONEB4  DC    C'DYNABLDL IS ALREADY ACTIVE'                  11/83 DBC\n         SPACE 3                                              11/83 DBC\nMESS     BAL   R1,EXIT8                                       11/83 DBC\n         DC    AL1(L'MMESS)                                   11/83 DBC\nMMESS    DC    C'DYNABLDL IS ALREADY PARTIALLY ACTIVE - IT MUST BE STOP*\n               PED AND THEN STARTED'                          11/83 DBC\n         SPACE 3                                              11/83 DBC\nSTOPDB4  BAL   R1,EXIT0                                       11/83 DBC\n         DC    AL1(L'MSTOPDB4)                                11/83 DBC\nMSTOPDB4 DC    C'DYNABLDL IS ALREADY STOPPED'                 11/83 DBC\n         SPACE 3                                              11/83 DBC\nDOWN     BAL   R1,EXIT8                                       11/83 DBC\n         DC    AL1(L'MDOWN)                                   11/83 DBC\nMDOWN    DC    C'DYNABLDL IS NOT ACTIVE'                      11/83 DBC\n         SPACE 3                                              11/83 DBC\nUNRECOGN BAL   R1,EXIT16                                      11/83 DBC\n         DC    AL1(L'MUNRECOG)                                11/83 DBC\nMUNRECOG DC    C'DYNABLDL IS UNABLE TO RECOGNIZE THE VERSION OF IGC018 *\n               INSTALLED ON THIS SYSTEM'                      11/83 DBC\n         SPACE 3                                              11/83 DBC\nINVALID  BAL   R1,EXIT16                                      11/83 DBC\n         DC    AL1(L'MINVALID)                                11/83 DBC\nMINVALID DC    C'DYNABLDL PARM FIELD IS INVALID - ONLY START, STOP, OR *\n               REPORT MAY BE SPECIFIED'                       11/83 DBC\n         SPACE 3                                              11/83 DBC\nSTARTED  BAL   R1,EXIT0                                       11/83 DBC\n         DC    AL1(L'MSTARTED)                                11/83 DBC\nMSTARTED DC    C'DYNABLDL STARTED'                            11/83 DBC\n         SPACE 3                                              11/83 DBC\nSTOPPED  BAL   R1,EXIT0                                       11/83 DBC\n         DC    AL1(L'MSTOPPED)                                11/83 DBC\nMSTOPPED DC    C'DYNABLDL STOPPED'                            11/83 DBC\n         SPACE 3                                              11/83 DBC\nPARTSTOP BAL   R1,EXIT4                                       11/83 DBC\n         DC    AL1(L'MPARTSTO)                                11/83 DBC\nMPARTSTO DC    C'DYNABLDL STOPPED BUT THE DYNAMIC BLDL TABLE COULD NOT *\n               BE FREED'                                      11/83 DBC\n         SPACE 3                                              11/83 DBC\nEMPTY    BAL   R1,EXIT0                                       11/83 DBC\n         DC    AL1(L'MEMPTY)                                  11/83 DBC\nMEMPTY   DC    C'DYNABLDL TABLE IS EMPTY'                     11/83 DBC\n         SPACE 3                                              11/83 DBC\nNOSYSP   SR    R1,R1               SIGNAL NO MESSAGE          11/83 DBC\n         B     EXIT4               EXIT                       11/83 DBC\n         TITLE 'TERMINATION'                                  11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        CLEAN UP AND EXIT PROCESSING                       * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        COMPLETION CODE VECTOR                             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nEXIT16   BAL   R0,EXIT             COMPLETION 16              11/83 DBC\nEXIT12   BAL   R0,EXIT             COMPLETION 12              11/83 DBC\nEXIT8    BAL   R0,EXIT             COMPLETION 8               11/83 DBC\nEXIT4    BAL   R0,EXIT             COMPLETION 4               11/83 DBC\nEXIT0    BAL   R0,EXIT             COMPLETION 0               11/83 DBC\nEXIT     LA    R15,EXIT            LOAD VECTOR BASE           11/83 DBC\n         SR    R15,R0              CNVRT TO COMPLETION CPODE  11/83 DBC\n         LA    R15,0(,R15)         PURIFY                     11/83 DBC\n         CH    R15,RCD             HIGHEST PRODUCED?          11/83 DBC\n         BNH   RCDZ                NO, KEEP HIGHER VALUE      11/83 DBC\n         STH   R15,RCD             YES, STORE NEW HIGH        11/83 DBC\nRCDZ     DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        IF SYSPRINT IS OPENED, THEN WRITE A COMPLETION     * 11/83 DBC\n*        MESSAGE, IF ANY, TO IT, AND THEN CLOSE IT.         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN IS IT OPEN?  11/83 DBC\n         BZ    NOPRT               NO, SKIP                   11/83 DBC\n         LTR   R2,R1               YES, IS THERE A            11/83 DBC\n*                                  TERMINATION MESSAGE?       11/83 DBC\n         BZ    NOPRTMSG            NO, SKIP                   11/83 DBC\n         #PUT  NULL,SUBAD=PUTSYSP  YES, SPACE A LINE          11/83 DBC\n         #PUT  NULL                SPACE ANOTHER LINE         11/83 DBC\n         #PUT  (R2)                PRINT THE MESSAGE          11/83 DBC\nNOPRTMSG DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CLOSE SYSPRINT            CLOSE THE FILE             11/83 DBC\n         FREEPOOL SYSPRINT         FREE ITS BUFFERS           11/83 DBC\n         LR    R1,R2               RESTORE MSG PTR            11/83 DBC\nNOPRT    DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        WRITE A COMPLETION MESSAGE, IF ANY, TO THE         * 11/83 DBC\n*        OPERATORS.                                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTR   R1,R1               IS THERE A FINAL MSG?      11/83 DBC\n         BZ    MSGZ                NO, SKIP                   11/83 DBC\n         #PUT  (R1),SUBAD=PUTWTO   YES, WRITE IT              11/83 DBC\nMSGZ     DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO PROBLEM MODE.                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,SUPER          IN SUPERVISOR STATE?       11/83 DBC\n         BZ    SUPERZ              NO, SKIP                   11/83 DBC\n         NI    FLAG,255-SUPER      YES, CLEAR AUDIT           11/83 DBC\n         MODESET MODE=PROB         RESUME PROBLEM MODE        11/83 DBC\nSUPERZ   DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DE-SERIALIZE                                       * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,ENQED          SERIALIZED?                11/83 DBC\n         BZ    ENQEDZ              NO, SKIP                   11/83 DBC\n         NI    FLAG,255-ENQED      YES, CLEAR AUDIT           11/83 DBC\n         DEQ   MF=(E,SERIALIZ)     DEQ                        11/83 DBC\nENQEDZ   DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RESTORE REGS AND RETURN TO CALLER                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LH    R15,RCD             LOAD COMPLETION CODE       11/83 DBC\n         #EXIT ((R14,R12)),RC=(R15) EXIT TO CALLER            11/83 DBC\n         TITLE 'PUTSYSP -- SEND MESSAGES TO A PRINT FILE'     11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        PUTSYSP -- THIS ROUTINE SEND MESSAGES TO A PRINT   * 11/83 DBC\n*        FILE. ALL RECFMS ARE SUPPORTED.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 POINTS TO A MESSAGE BLOCK.              * 11/83 DBC\n*              - R14 POINTS TO THE RETURN ADDRESS.          * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - IF THE SYSPRINT FILE IS OPEN, AND IF THE   * 11/83 DBC\n*                GIVEN MESSAGE IS NON-NULL, THEN THE        * 11/83 DBC\n*                MESSAGE IS WRITTEN TO SYSPRINT.            * 11/83 DBC\n*              - ALL REGISTERS ARE RESTORED.                * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTSYSP  TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN SYSPRINT     11/83 DBC\n*                                  AVAILABLE?                 11/83 DBC\n         BZR   R14                 NO, RETURN DOING NOTHING   11/83 DBC\n         STM   R14,R2,SAVEPUTS     YES, SAVE REGISTERS        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SR    R2,R2               CLEAR FOR INSERT           11/83 DBC\n         ICM   R2,1,0(R1)          GET L'MSG; NULL?           11/83 DBC\n         BZ    PUTSRET             YES, RETURN DOING NOTHING  11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    DCBRECFM-IHADCB+SYSPRINT,DCBRECU NO, RECFM=U?  11/83 DBC\n         BNM   PUTRECU             YES, GO HANDLE             11/83 DBC\n         TM    DCBRECFM-IHADCB+SYSPRINT,DCBRECF NO, RECFM=F?  11/83 DBC\n         BO    PUTRECF             YES, GO HANDLE             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=V HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTRECV  LA    R0,4(,R2)           GET NEEDED LRECL           11/83 DBC\n         STH   R0,DCBLRECL-IHADCB+SYSPRINT STORE FOR PUT      11/83 DBC\n*                                  LOCATE                     11/83 DBC\n         PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R0,4(,R2)           GET REC LEN AGAIN          11/83 DBC\n         SLL   R0,16               SHIFT                      11/83 DBC\n         ST    R0,0(,R1)           STORE RDW                  11/83 DBC\n         L     R15,SAVEPUTS+12     --> MESSAGE                11/83 DBC\n         BCTR  R2,0                ADJ L'MSG FOR 'EX'         11/83 DBC\n         MVC   4(*-*,R1),1(R15)    (EXECUTED)                 11/83 DBC\n         EX    R2,*-6              COPY MSG TO BUFFER         11/83 DBC\n         B     PUTSRET             DONE HERE                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=F HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTRECF  PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC\n         LR    R0,R1               --> COPY SINK              11/83 DBC\n         LH    R1,DCBLRECL-IHADCB+SYSPRINT GET L'SINK         11/83 DBC\n         L     R14,SAVEPUTS+12     --> MSG BLOCK              11/83 DBC\n         LA    R14,1(,R14)         --> COPY SOURCE            11/83 DBC\n         LR    R15,R2              GET L'SOURCE               11/83 DBC\n         ICM   R15,8,=C' '         GET PADDING BYTE           11/83 DBC\n         MVCL  R0,R14              COPY MSG TO BUFFER         11/83 DBC\n         B     PUTSRET             DONE HERE                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=U HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTRECU  STH   R2,DCBLRECL-IHADCB+SYSPRINT STORE FOR PUT      11/83 DBC\n*                                  LOCATE                     11/83 DBC\n         PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC\n         L     R15,SAVEPUTS+12     --> MSG BLOCK              11/83 DBC\n         BCTR  R2,0                ADJ L'MSG FOR 'EX'         11/83 DBC\n         MVC   0(*-*,R1),1(R15)    (EXECUTED)                 11/83 DBC\n         EX    R2,*-6              COPY MSG TO BUFFER         11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO CALLER                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTSRET  LM    R14,R2,SAVEPUTS     RESTORE REGISTERS          11/83 DBC\n         BR    R14                 RETURN                     11/83 DBC\n         TITLE 'PUTWTO -- ISSUE MESSAGES TO THE OPERATORS'    11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        PUTWTO -- THIS ROUTINE ISSUES MESSAGES TO THE      * 11/83 DBC\n*        OPERATORS.                                         * 11/83 DBC\n*                                                           * 11/83 DBC\n*        ROUTE CODES USED:                                  * 11/83 DBC\n*              - 2 IS \"MASTER CONSOLE INFORMATION\"          * 11/83 DBC\n*              - 11 IS \"PROGRAMMER INFORMATION\"             * 11/83 DBC\n*                                                           * 11/83 DBC\n*        DESCRIPTOR CODES USED:                             * 11/83 DBC\n*              - 4 IS \"SYSTEM STATUS\"                       * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 POINTS TO A MESSAGE BLOCK.              * 11/83 DBC\n*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - THE MESSAGE, IF NON-NULL, HAS BEEN ISSUED. * 11/83 DBC\n*              - ALL REGISTERS ARE RESTORED.                * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTWTO   STM   R14,R1,SAVEPUTW     SAVE REGISTERS             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SR    R15,R15             CLEAR FOR INSERT           11/83 DBC\n         ICM   R15,1,0(R1)         GET L'MSG; NULL?           11/83 DBC\n         BZ    PUTWRET             YES, RETURN TO CALLER      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   WTOBUF(L'WTOHEAD),WTOHEAD COPY HEADER FIELDS   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CH    R15,=Y(WTOMAXL)     NO, TOO LONG?              11/83 DBC\n         BNH   PUTWLNOK            NO, PROCEED                11/83 DBC\n         LA    R15,WTOMAXL         YES, TRUNCATE              11/83 DBC\nPUTWLNOK DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         BCTR  R15,0               ADJ FOR \"EX\"               11/83 DBC\n         MVC   WTOBUF+L'WTOHEAD(*-*),1(R1) (EXECUTED)         11/83 DBC\n         EX    R15,*-6             COPY MSG TO WTO BUFFER     11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R15,L'WTOHEAD+1(,R15) GET L'MSG+4              11/83 DBC\n         STH   R15,WTOBUF          STORE INTO PLIST           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R15,WTOBUF(R15)     --> PAST THE TEXT          11/83 DBC\n         MVC   0(L'WTOTAIL,R15),WTOTAIL COPY TRAILER FIELDS   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         WTO   MF=(E,WTOBUF)       ISSUE THE MSG              11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTWRET  LM    R14,R1,SAVEPUTW     RESTORE REGISTERS          11/83 DBC\n         BR    R14                 RETURN TO CALLER           11/83 DBC\n         TITLE 'SORT -- AN INPLACE-SORTING ROUTINE'           11/83 DBC\nSORT     #SORT CMPRID=(R2),SVID=SAVESORT                      11/83 DBC\n         TITLE 'SORTHITS/SORTLRU/SORTNAME -- VARIOUS SORTING COMPARISON*\n                ROUTINES'                                     11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        SORTHITS -- THIS COMPARISON ROUTINE SORTS DYNAMIC  * 11/83 DBC\n*        BLDL TABLE ENTRIES IN DESCENDING ORDER BY HITS     * 11/83 DBC\n*        COUNT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n*        SORTLRU -- THIS COMPARISON ROUTINE SORTS DYNAMIC   * 11/83 DBC\n*        BLDL TABLE ENTRIES IN L.R.U. ORDER - MOST TO LEAST * 11/83 DBC\n*        RECENTLY USED.                                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        SORTNAME -- THIS COMPARISON ROUTINE SORTS DYNAMIC  * 11/83 DBC\n*        BLDL TABLE ENTRIES IN ASCENDING ORDER BY MEMBER    * 11/83 DBC\n*        NAME.                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R6 POINTS TO A SEQUENTIALLY PRIOR TABLE    * 11/83 DBC\n*                ENTRY.                                     * 11/83 DBC\n*              - R7 POINTS TO A SEQUENTIALLY FOLLOWING      * 11/83 DBC\n*                TABLE ENTRY.                               * 11/83 DBC\n*              - R14 POINTS TO THE RETURN ADDRESS IN THE    * 11/83 DBC\n*                SORT ROUTINE.                              * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - THE TWO ENTRIES ARE SUITABLY COMPARED AND  * 11/83 DBC\n*                THE CONDITION CODE IS SET AS FOLLOWS:      * 11/83 DBC\n*                - CC=2 (I.E. IMPLIES \"HIGH\") INDICATES     * 11/83 DBC\n*                  THAT THE SORT ROUTINE MUST EXCHANGE THE  * 11/83 DBC\n*                  TWO TABLE ENTRIES.                       * 11/83 DBC\n*                - CC=0 OR 1 (I.E. IMPLIES \"EQUAL\" OR       * 11/83 DBC\n*                  \"LOW\") INDICATES THAT THE SORT ROUTINE   * 11/83 DBC\n*                  MUST NOT EXCHANGE THE TWO TABLE ENTRIES. * 11/83 DBC\n*              - ALL REGISTERS REMAIN UNCHANGED.            * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 3                                              11/83 DBC\nSORTHITS CLC   DYNLHITS-DYNL(,R7),DYNLHITS-DYNL(R6)           11/83 DBC\n         BNER  R14                                            11/83 DBC\n         CLC   DYNLLRU#-DYNL(,R7),DYNLLRU#-DYNL(R6)           11/83 DBC\n         BR    R14                                            11/83 DBC\n         SPACE 3                                              11/83 DBC\nSORTLRU  CLC   DYNLLRU#-DYNL(,R7),DYNLLRU#-DYNL(R6)           11/83 DBC\n         BR    R14                                            11/83 DBC\n         SPACE 3                                              11/83 DBC\nSORTNAME CLC   DENTNAME-DYNL(,R6),DENTNAME-DYNL(R7)           11/83 DBC\n         BR    R14                                            11/83 DBC\n         TITLE 'VERIFY -- CODE MATCH VERIFICATION ROUTINE'    11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        VERIFY -- THIS ROUTINE CHECKS A SECTION OF IGC018  * 11/83 DBC\n*        TO SEE IF ITS CONTENTS ARE AS EXPECTED.            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 POINTS TO A PLIST MAPPED BY THE         * 11/83 DBC\n*                \"ORIGINAL\" DSECT. THIS IDENTIFIES A        * 11/83 DBC\n*                LOCATION OF IGC018 AND ITS EXPECTED        * 11/83 DBC\n*                CONTENTS.                                  * 11/83 DBC\n*              - BLDLBASE POINTS TO IGC018.                 * 11/83 DBC\n*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - ERROR: THE CONTENTS OF IGC018 ARE NOT AS   * 11/83 DBC\n*                EXPECTED.                                  * 11/83 DBC\n*              - R14: THE HI-BITS MAY BE CHANGED.           * 11/83 DBC\n*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 4(,R14):                                    * 11/83 DBC\n*              - THE CONTENTS OF IGC018 ARE AS EXPECTED.    * 11/83 DBC\n*              - R14 IS INCRIMENTED BY 4.                   * 11/83 DBC\n*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING ORIGINAL,R1         DCL PLIST BASE             11/83 DBC\nVERIFY   STM   R14,R15,SAVEVERI    SAVE REGISTERS             11/83 DBC\n         LH    R15,ORIGLOC         GET OFFSET INTO IGC018     11/83 DBC\n         LA    R15,IGC018(R15)     GET LOCATION INTO IGC018   11/83 DBC\n         LH    R14,ORIGLEN         GET LENGTH TO CHECK        11/83 DBC\n         BCTR  R14,0               ADJ FOR \"EX-CLC\"           11/83 DBC\n         CLC   0(*-*,R15),ORIGCODE (EXECUTED)                 11/83 DBC\n         EX    R14,*-6             IS IGC018 AS EXPECTED?     11/83 DBC\n         BNE   VERIRET0            NO, RETURN +0              11/83 DBC\n*                                  YES, RETURN +4             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO CALLER                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         BAL   R15,VERIRET         +4 IGC018 IS AS EXPECTED   11/83 DBC\nVERIRET0 BAL   R15,VERIRET         +0 IGC018 IS NOT CORRECT   11/83 DBC\nVERIRET  LA    R14,VERIRET         LOAD VECTOR BASE           11/83 DBC\n         SR    R14,R15             GET RETURN OFFSET          11/83 DBC\n         A     R14,SAVEVERI        GET RETURN ADDRESS         11/83 DBC\n         L     R15,SAVEVERI+4      RESTORE REGISTER           11/83 DBC\n         BR    R14                 RETURN TO CALLER           11/83 DBC\n         DROP  R1                  RELEASE PLIST BASE         11/83 DBC\n         TITLE 'ZONEIT -- BINARY TO EBCDIC CONVERSION'        11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        ZONEIT -- THIS ROUTINE CONVERTS A BINARY NUMBER TO * 11/83 DBC\n*        A CHARACTER STRING THAT IS SUFFICIENTLY PADDED ON  * 11/83 DBC\n*        BOTH THE LEFT AND RIGHT WITH BLANKS. IF THE NUMBER * 11/83 DBC\n*        IS NEGATIVE, THEN THE STRING IS PREFIXED WITH A    * 11/83 DBC\n*        MINUS SIGN (-).                                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 CONTAINS THE NUMBER TO BE CONVERTED.    * 11/83 DBC\n*              - R14 POINTS TO THE RETURN ADDRESS.          * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - THE NUMBER HAS BEEN CONVERTED AS DESCRIBED * 11/83 DBC\n*                ABOVE.                                     * 11/83 DBC\n*              - ZONEBUF CONTAINS THE CHARACTER STRING      * 11/83 DBC\n*                RIGHT JUSTIFIED AND LEFT PADDED WITH       * 11/83 DBC\n*                BLANKS. ALSO, ZONEBUF IS TRAILED BLANKS.   * 11/83 DBC\n*              - R1 POINTS TO THE START OF THE CHARACTER    * 11/83 DBC\n*                STRING.                                    * 11/83 DBC\n*              - R15 CONTAINS THE LENGTH-1 OF THE CHARACTER * 11/83 DBC\n*                STRING.                                    * 11/83 DBC\n*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nZONEIT   CVD   R1,DWORK            CNVRT TO DECIMAL           11/83 DBC\n         MVI   ZONEBUF-1,C' '      LOAD LEFT PADDING BYTE     11/83 DBC\n         MVI   ZONEBUF,X'20'       LOAD EDIT CONTROL BYTE     11/83 DBC\n         MVC   ZONEBUF+1(L'ZONEBUF-1),ZONEBUF PROPAGATE IT    11/83 DBC\n         EDMK  ZONEBUF-1(L'ZONEBUF+1),DWORK CNVRT TO EBCDIC   11/83 DBC\n         BNZ   ZNOTZERO            JUMP IF VALUE WAS NOT 0    11/83 DBC\n         MVI   ZONEBUF+L'ZONEBUF-1,C'0' (WAS 0; STICK IT IN)  11/83 DBC\n         LA    R1,ZONEBUF+L'ZONEBUF-1 (SET STRING PTR)        11/83 DBC\nZNOTZERO BNM   ZNOTNEG             WASN'T NEGATIVE, SKIP      11/83 DBC\n         BCTR  R1,0                WAS NEG; BACK UP           11/83 DBC\n         MVI   0(R1),C'-'          INSERT SIGN                11/83 DBC\nZNOTNEG  DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R15,ZONEBUF+L'ZONEBUF-1 --> TO LAST CHARACTER  11/83 DBC\n         SR    R15,R1              GET L'STRING-1             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         BR    R14                 RETURN TO CALLER           11/83 DBC\n         TITLE 'DATA'                                         11/83 DBC\n         DROP  ,                   RELEASE ALL BASES          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        VERSIONS VECTOR                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSIONS DC    A(VERSN#01)                                    11/83 DBC\n         DC    A(VERSN#02)                                    11/83 DBC\n         DC    A(VERSN#03)                                    11/83 DBC\n         DC    A(VERSN#04)                                    11/83 DBC\n         DC    A(VERSN#05)                                    04/84 JLC\n         DC    A(VERSN#06)                                    05/84 DBC\n         DC    A(VERSN#07)                                    08/84 DBC\n         DC    A(VERSN#08)                                    06/84 WRH\n         DC    A(VERSN#09)                                    09/84 DBC\n         DC    A(VERSN#10)                                    01/85 DBC\n         DC    A(VERSN#11)                                    10/85 DBC\n         DC    A(VERSN#12)                                    10/85 DBC\n         DC    A(VERSN#13)                                    01/88 SBG\n         DC    A(0)                                           11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        LOCAL SOUBROUTINE SAVE AREAS                       * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSAVEPUTS DC    5A(0)               PUTSYSP                    11/83 DBC\nSAVEPUTW DC    4A(0)               PUTWTO                     11/83 DBC\nSAVESORT DC    16A(0)              SORT                       11/83 DBC\nSAVEVERI DC    2A(0)               VERIFY                     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        PARM FIELD ANALYSIS CONTROL DATA                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPARMS    DS    0X                  START OF TABLE (SORTED)    11/83 DBC\n         DC    AL4(START),AL2(0)                              11/83 DBC\n         DC    AL4(STOP),AL2(1),C'P'                          11/83 DBC\n         DC    AL4(REPORT),AL2(1),C'R'                        11/83 DBC\n         DC    AL4(START),AL2(1),C'S'                         11/83 DBC\n         DC    AL4(STOP),AL2(4),C'STOP'                       11/83 DBC\n         DC    AL4(START),AL2(5),C'START'                     11/83 DBC\n         DC    AL4(REPORT),AL2(6),C'REPORT'                   11/83 DBC\n         DC    AL4(INVALID),X'FF'                             11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRMHNDLR EQU   0,4                 A(HANDLER ROUTINE)         11/83 DBC\nPRMLEN   EQU   PRMHNDLR+L'PRMHNDLR,2 L'TEXT                   11/83 DBC\nPRMTEXT  EQU   PRMLEN+L'PRMLEN     TEXT                       11/83 DBC\nPRMROOTL EQU   PRMTEXT             ENTRY'S ROOT LENGTH        11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SERIALIZATION ENQ CONTROL DATA                     * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSERIALIZ ENQ   (QNAME,RNAME,E,L'RNAME,SYSTEM),RET=NONE,MF=L   11/83 DBC\nQNAME    DC    CL8'DYNABLDL'                                  11/83 DBC\nRNAME    DC    C'SERIALIZE'                                   11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        WTO MESSAGE BUFFER AND CONTROLS                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nWTOFLDS  WTO   ' ',ROUTCDE=(2,11),DESC=4,MF=L SKELETON        11/83 DBC\nWTOHEAD  EQU   WTOFLDS,4           HEADER FIELDS              11/83 DBC\nWTOTAIL  EQU   WTOHEAD+L'WTOHEAD+1,*-(WTOHEAD+L'WTOHEAD+1)    11/83 DBC\n*                                  TRAILER FIELDS             11/83 DBC\nWTOMAXL  EQU   124                 MAX WTO TEXT LENGTH        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DS    0F                  ALIGNMENT                  11/83 DBC\nWTOBUF   DC    XL(L'WTOHEAD+WTOMAXL+L'WTOTAIL)'00' BUFFER     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SYSPRINT CONTROL DATA                              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         PRINT NOGEN                                          11/83 DBC\nSYSPRINT DCB   DDNAME=SYSPRINT,                               11/83 DBC*\n               DSORG=PS,                                      11/83 DBC*\n               MACRF=PL,                                      11/83 DBC*\n               OPTCD=C,                                       11/83 DBC*\n               BUFNO=5,                                       11/83 DBC*\n               EXLST=PRTXLIST                                 11/83 DBC\n         PRINT GEN                                            11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTXLIST DS    0F                  DCB EXIT LIST              11/83 DBC\n         DC    X'85',AL3(PRTEXIT)  DCB OPEN EXIT              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        HOOK SKELETONS                                     * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CNOP  0,4                 ALIGNMENT                  11/83 DBC\nSRCHPOHH BALR  R15,0               LOAD TEMP BASE             11/83 DBC\n         L     R15,SRCHPOAA-*(,R15) --> HOOK ROUTINE          11/83 DBC\n         BR    R15                 JUMP TO HOOK ROUTINE       11/83 DBC\nSRCHPOAA DC    AL4(SRCHPDS-SRCHPDS) --> HOOK ROUTINE          11/83 DBC\nSRCHPOHL EQU   *-SRCHPOHH          L'HOOK                     11/83 DBC\n         SPACE 3                                              11/83 DBC\n         CNOP  0,4                 ALIGNMENT                  11/83 DBC\nDFOUNDHH BALR  R15,0               LOAD TEMP BASE             11/83 DBC\n         L     R15,DFOUNDAA-*(,R15) --> HOOK ROUTINE          11/83 DBC\n         BR    R15                 JUMP TO HOOK ROUTINE       11/83 DBC\n         DC    CL8'DAVECOLE'       HOOK RECOGNITION STRING    11/83 DBC\nDFOUNDAA DC    AL4(DFOUND-DFOUND)  --> HOOK ROUTINE           11/83 DBC\nDFOUNDHL EQU   *-DFOUNDHH          L'HOOK                     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        HOOK RETURN CONTROL DATA                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCHPOXX DS    S                   BASE/DISPLACEMENT FOR      11/83 DBC\n*                                  RETURN FROM SRCHPDS HOOK   11/83 DBC\nDFOUNDXX DS    S                   BASE/DISPLACEMENT FOR      11/83 DBC\n*                                  RETURN FROM DFOUND HOOK    11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCHPOBC B     SRCHPOXX-SRCHPOXX   RETURN TO IGC018 FROM      11/83 DBC\n         @ZAP  (SRCHPOXX,-2)       SRCHPDS HOOK               11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFOUNDBC B     DFOUNDXX-DFOUNDXX   RETURN TO IGC018 FROM      11/83 DBC\n         @ZAP  (DFOUNDXX,-2)       DFOUND HOOK                11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        MISC DATA                                          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDWORK    DS    D                   DWORD WORK AREA            11/83 DBC\nCLOCK    DS    2F                  STCK BUFFER                11/83 DBC\n         SPACE 1                                              11/83 DBC\nRTBLSIZE DC    A(0)              | REPORTS TABLE SIZE         11/83 DBC\nRTBLPTR  DC    A(0)              V REPORTS TABLE ADDRESS      11/83 DBC\n         SPACE 1                                              11/83 DBC\nCOUNTER  DC    H'0'                REPORT LINES COUNTER       11/83 DBC\nRCD      DC    H'0'                PROGRAM COMPLETION CODE    11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DC    C' '                LEFT-PADDING BLANK         11/83 DBC\nZONEBUF  DS    CL(8*2-1)           EDMK SINK                  11/83 DBC\n         DC    CL(L'ZONEBUF-1)' '  RIGHT-PADDING BLANKS       11/83 DBC\n         SPACE 1                                              11/83 DBC\nPSWKEY   DS    X                   SAVE AREA                  11/83 DBC\n         SPACE 1                                              11/83 DBC\nFLAG     DC    B'00000000'         AUDIT FLAG                 11/83 DBC\nSUPER    EQU   B'10000000'         IN SUPERVISOR STATE        11/83 DBC\nKEY0     EQU   B'01000000'         IN KEY ZERO                11/83 DBC\nENQED    EQU   B'00100000'         SERIALIZED                 11/83 DBC\nSRCHPO00 EQU   B'00010000'         THE SRCHPDS HOOK HAS NOT   11/83 DBC\n*                                  NOT NOT BEEN SET           11/83 DBC\nDFOUND00 EQU   B'00001000'         THE DFOUND HOOK HAS NOT    11/83 DBC\n*                                  NOT NOT BEEN SET           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTORG ,                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        MESSAGES                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(L'NULL)                                    11/83 DBC\nNULL     DC    C' '                                           11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(L'DYNATIT)                                 11/83 DBC\nDYNATIT  DC    C'DYNAMIC BLDL ACTIVITY REPORT'                11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DS    AL1                                            11/83 DBC\nSTATBUF  DS    CL(LEN3270)                                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(0)                                         11/83 DBC\nSTATBUF2 DS    CL(LEN3270)                                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(0)                                         11/83 DBC\nSTATBUF3 DS    CL(LEN3270)                                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(L'INFOBUF)                                 11/83 DBC\nINFOBUF  DC    CL(INFOLEN)' '                                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMEBAR-INFO+INFOBUF                           11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSBAR-INFO+INFOBUF                           11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUBAR-INFO+INFOBUF                            11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   ,                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(L'SORTTIT)                                 11/83 DBC\nSORTTIT  DC    CL(INFOLEN)' '                                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMEBAR-INFO+SORTTIT                           11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMENAME-INFO+SORTTIT                          11/83 DBC\n         DC    C'SORTED BY NAME'                              11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSBAR-INFO+SORTTIT                           11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSHITS-INFO+SORTTIT                          11/83 DBC\n         DC    C'SORTED BY HITS'                              11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUBAR-INFO+SORTTIT                            11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUIDLE-INFO+SORTTIT                           11/83 DBC\n         DC    C'SORTED BY L.R.U.'                            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   ,                                              11/83 DBC\n         SPACE 3                                              08/84 DBC\n         DC    AL1(L'SORTTIT0)                                08/84 DBC\nSORTTIT0 DC    CL(INFOLEN)' '                                 08/84 DBC\n         SPACE 1                                              08/84 DBC\n         ORG   NAMEBAR-INFO+SORTTIT0                          08/84 DBC\n         DC    C'|'                                           08/84 DBC\n         SPACE 1                                              08/84 DBC\n         ORG   HITSBAR-INFO+SORTTIT0                          08/84 DBC\n         DC    C'|'                                           08/84 DBC\n         SPACE 1                                              08/84 DBC\n         ORG   HITSHITS-INFO+SORTTIT0                         08/84 DBC\n         DC    C'(* MEANS REENTRANT)'                         08/84 DBC\n         SPACE 1                                              08/84 DBC\n         ORG   LRUBAR-INFO+SORTTIT0                           08/84 DBC\n         DC    C'|'                                           08/84 DBC\n         SPACE 1                                              08/84 DBC\n         ORG   ,                                              08/84 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(L'SORTSUBT)                                11/83 DBC\nSORTSUBT DC    CL(INFOLEN)' '                                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   COUNT-INFO+SORTSUBT                            11/83 DBC\n         DC    C'CNT'                                         11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMEBAR-INFO+SORTSUBT                          11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMENAME-INFO+SORTSUBT                         11/83 DBC\n         DC    C'NAME'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMELIB#-1-INFO+SORTSUBT                       11/83 DBC\n         DC    C'LIB#'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMEHITS+L'NAMEHITS-4-INFO+SORTSUBT            11/83 DBC\n         DC    C'HITS'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSBAR-INFO+SORTSUBT                          11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSHITS+L'HITSHITS-4-INFO+SORTSUBT            11/83 DBC\n         DC    C'HITS'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSIDLE+L'HITSIDLE-4-INFO+SORTSUBT            11/83 DBC\n         DC    C'IDLE'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSAGE+L'HITSAGE-3-INFO+SORTSUBT              11/83 DBC\n         DC    C'AGE'                                         11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSNAME-INFO+SORTSUBT                         11/83 DBC\n         DC    C'NAME'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUBAR-INFO+SORTSUBT                           11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUIDLE+L'LRUIDLE-4-INFO+SORTSUBT              11/83 DBC\n         DC    C'IDLE'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUHITS+L'LRUHITS-4-INFO+SORTSUBT              11/83 DBC\n         DC    C'HITS'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUNAME-INFO+SORTSUBT                          11/83 DBC\n         DC    C'NAME'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   ,                                              11/83 DBC\n         TITLE 'SRCHPDS -- IGC018 HOOK ROUTINE'               11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        SRCHPDS -- THIS ROUTINE RECEIVES CONTROL VIA A     * 11/83 DBC\n*        HOOK PLACED AT LABEL \"SRCHPDS\" IN IGC018. (IGC018  * 11/83 DBC\n*        BRANCHES TO \"SRCHPDS\" AFTER IT HAS SEARCHED THE    * 11/83 DBC\n*        RESIDENT BLDL TABLE AND WHEN IT IS READY TO READ   * 11/83 DBC\n*        THE PDS DIRECTORIES ON DISK). THIS INTERCEPT       * 11/83 DBC\n*        ROUTINE DETERMINES IF THE PDS DIRECTORIES ABOUT TO * 11/83 DBC\n*        BE SEARCHED ARE FOR THE LINKLIST LIBRARIES. IF SO, * 11/83 DBC\n*        THEN IT SCANS THE USER'S BLDL PLIST AGAINST ITS    * 11/83 DBC\n*        OWN DYNA-TABLE AND FILLS IN ALL USER REQUESTS FOR  * 11/83 DBC\n*        NAMES THAT ARE FOUND IN THE DYNA-TABLE. THUS DISK  * 11/83 DBC\n*        DIRECTORY SEARCHES FOR THOSE NAMES ARE BYPASSED.   * 11/83 DBC\n*                                                           * 11/83 DBC\n*        DURING DYNABLDL START PROCESSING, THE FOLLOWING IS * 11/83 DBC\n*        DONE.                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THIS ROUTINE IS COPIED TO GLOBAL, FIXED,   * 11/83 DBC\n*                KEY0, FETCH ACCESSABLE MEMORY (SP245).     * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - ALL ADCONS CONTAINED IN IT ARE RELOCATED.  * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - ALL REFERENCES TO IBM PRIVATE DATA FIELDS  * 11/83 DBC\n*                ARE ADJUSTED TO CORRESPOND TO THE CURRENT  * 11/83 DBC\n*                VERSION OF IGC018.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THIS ROUTINE IS APPENDED WITH AN EXACT     * 11/83 DBC\n*                COPY OF THE INSTRUCTIONS IN IGC018 (AT     * 11/83 DBC\n*                LABEL \"SRCHPDS\") THAT WERE OVERLAID BY THE * 11/83 DBC\n*                BRANCH TO THIS ROUTINE.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THOSE INSTRUCTIONS ARE APPENDED BY A       * 11/83 DBC\n*                BRANCH BACK TO IGC018 FOLLOWING THE        * 11/83 DBC\n*                OVERLAID INSTRUCTIONS.                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        STATIC INPUTS:                                     * 11/83 DBC\n*              - R15 POINTS TO THIS HOOK'S ENTRY ADDRESS.   * 11/83 DBC\n*              - R0 AND R1 ARE VOLITILE; THEY NEED NOT BE   * 11/83 DBC\n*                RESTORED.                                  * 11/83 DBC\n*              - ALL OTHER REGISTERS (INCLUDING R14), IF    * 11/83 DBC\n*                ALTERED, MUST BE RESTORED.                 * 11/83 DBC\n*              - THE \"RDAREA\" FIELD IN IGC018'S WORK AREA,  * 11/83 DBC\n*                SINCE IT IS ABOUT TO BE READ INTO BY EXCP, * 11/83 DBC\n*                IS AVAILABLE FOR LOCAL USE AT THIS TIME.   * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING SRCHPDS,R15         DCL LOCAL BASE             11/83 DBC\nSRCHPDS  DS    0F                  ALIGNMENT                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DETERMINE WHETHER OR NOT THE CURRENT SEARCH IS OF  * 11/83 DBC\n*        THE LINKLIST LIBRARIES.                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,CVTPTR           --> CVT                    11/83 DBC\n         LA    R0,0(,RDCB-RDCB)    GET CRNT DCB PTR           11/83 DBC\n         @ZAP  (RDCB,-2)                                      11/83 DBC\n         CL    R0,CVTLINK-CVTMAP(,R1) SEARCHING LINKLIST?     11/83 DBC\n         BNE   SRCHPOZZ            NO, IGNORE THIS CALL       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CLI   CONCAT#-CONCAT#,0   YES, 1ST PASS FOR THIS     11/83 DBC\n         @ZAP  (CONCAT#,-2)        PLIST?                     11/83 DBC\n         BNE   SRCHPOZZ            NO, DYNA-TABLE SEARCH      11/83 DBC\n*                                  ALREADY MADE; IGNORE THIS  11/83 DBC\n*                                  CALL                       11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SAVE IGC018'S ENVIRONMENT AND SET UP A LOCAL ONE.  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         STM   R2,R14,REGSAVE-DYNAWA+RDAREA-RDAREA SAVE       11/83 DBC\n         @ZAP  (RDAREA,-2)         IGC018'S REGISTERS         11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   USERKEY-DYNAWA+RDAREA-RDAREA,EXSKEY-EXSKEY     11/83 DBC\n         @ZAP  (RDAREA,-4),        SAVE IGC018'S USER'S KEY   11/83 DBC*\n               (EXSKEY,-2)                                    11/83 DBC\n         SPACE 1                                              09/84 DBC\n         MVC   BLDLFLG-DYNAWA+RDAREA-RDAREA,EXSFLG-EXSFLG     09/84 DBC\n         @ZAP  (RDAREA,-4),        SAVE IGC018'S CONTROL      09/84 DBC*\n               (EXSFLG,-2)         FLAGS                      09/84 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R1,0(,RLIST-RLIST)  COPY USER'S PLIST PTR TO A 11/83 DBC\n         @ZAP  (RLIST,-2)          SAFE REGISTER              11/83 DBC\n         USING BLDLIST,R1          DCL USER'S PLIST BASE      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R13,RDAREA-RDAREA   --> LOCAL WORK AREA        11/83 DBC\n         @ZAP  (RDAREA,-2)                                    11/83 DBC\n*                                  NOTE, DIRECT USE OF        11/83 DBC\n*                                  IGC018'S REGISTERS IS NOW  11/83 DBC\n*                                  NO LONGER SAFE.            11/83 DBC\n         USING DYNAWA,R13          DCL WORK AREA BASE         11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SAVE IGC018'S CURRENT KEY AND LOAD KEY-0.          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         IPK   ,                   DETERMINE CURRENT KEY      11/83 DBC\n         STC   R2,KEYSAVE          SAVE IT                    11/83 DBC\n         SPKA  0                   SET KEY-0                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        GET BITS 10-41 OF THE CURRENT TOD CLOCK VALUE      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         STCK  CLOKSAVE            GET THE TOD CLOCK          11/83 DBC\n         LM    R2,R3,CLOKSAVE      LOAD IT                    11/83 DBC\n         SLDL  R2,CLOKSHFT         ISSOLATE BITS 10-41        11/83 DBC\n         ST    R2,CLOKSAVE         STORE BACK                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        PREPARE TO SCAN THE USER'S PLIST                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R2,BLDENT           --> 1ST PLIST ENTRY        11/83 DBC\n         USING PDS2,R2             DCL A BASE FOR IT          11/83 DBC\n         LH    R0,BLDENTS          GET ENTRY COUNT            11/83 DBC\n         LTR   R0,R0               NULL?                      11/83 DBC\n         BNP   SRCHRET             YES, EXIT BACK TO IGC018   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R8,SRCHPODH         NO, --> CONTROL TABLE      11/83 DBC\n         USING DYNAHEAD,R8         DCL A BASE FOR IT          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SEARCH THE DYNA-TABLE FOR EACH USER REQUESTED NAME * 11/83 DBC\n*        THAT HAS NOT ALREADY BEEN FOUND.                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nNAMELOOP CLI   PDS2TTRP+2,0        HAS THIS NAME BEEN FOUND?  11/83 DBC\n         BNE   NAMENEXT            YES, SKIP IT               11/83 DBC\n         TM    PDS2NAME+DYNLLOCK,UNLOCKED NO, BUT WILL THE    11/83 DBC\n*                                  NAME CONFUSE ME?           11/83 DBC\n         BZ    NAMEMISS            YES, IGNORE IT             11/83 DBC\n         LM    R3,R5,DYNAFIRS      NO, LOAD DYNA-TABLE DESCRI 11/83 DBC\n         USING DYNL,R3             DCL TABLE ENTRY BASE       11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNLSCAN CLC   PDS2NAME,DENTNAME   NAME FOUND IN TABLE?       11/83 DBC\n         BE    NAMEHIT             YES, GO PROCESS            11/83 DBC\n         BXLE  R3,R4,DYNLSCAN      NO, KEEP SEARCHING         11/83 DBC\n         DROP  R3                  NO, RELEASE TABLE ENTRY BA 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        A USER REQUESTED NAME WAS NOT FOUND IN THE         * 11/83 DBC\n*        DYNA-TABLE. COUNT THE MISS AND LOOP TO THE NEXT    * 11/83 DBC\n*        ENTRY IN THE USER'S PLIST.                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nNAMEMISS LA    R4,1                LOAD INCRIMENT             11/83 DBC\n         AL    R4,DYNAMISS         COUNT THE MISS             11/83 DBC\n         ST    R4,DYNAMISS         STORE BACK. NOTE, I DO NOT 11/83 DBC\n*                                  BOTHER WITH A 'CS' BECAUSE 11/83 DBC\n*                                  ABSOLUTE ACCURACY HERE IS  11/83 DBC\n*                                  NOT REALLY THAT IMPORTANT. 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         B     NAMENEXT            GO ADVANCE TO NEXT NAME    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        A USER REQUESTED NAME HAS BEEN FOUND IN THE        * 11/83 DBC\n*        DYNA-TABLE. ATTEMPT TO LOCK OWNERSHIP OF THE       * 11/83 DBC\n*        DYNA-TABLE SLOT.                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R3             RESTORE SLOT BASE          11/83 DBC\nNAMEHIT  LM    R4,R5,PDS2NAME      GET THE GIVEN NAME         11/83 DBC\n         LR    R6,R4               COPY                       11/83 DBC\n         LR    R7,R5               COPY                       11/83 DBC\n         X     R6,=A(UNLOCKED)     SET LOCK SIGNAL            11/83 DBC\n         #TEST SIZE=(DYNLLOCK,EQ,3) THE LOCK SIGNAL MUST BE   11/83 DBC*\n                                   BYTE #3 OF THE NAME        11/83 DBC\n         CDS   R4,R6,DENTNAME      ATTEMPT TO LOCK THIS SLOT. 11/83 DBC\n*                                  GOT IT?                    11/83 DBC\n         BNE   NAMEMISS            NO, GIVE UP ON THIS NAME   11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        I NOW OWN THE SLOT. NOW COPY THE DIRECTORY DATA TO * 11/83 DBC\n*        THE USER'S PLIST.                                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LH    R4,BLDELEN          GET L'USER'S PLIST ENTRY   11/83 DBC\n         CH    R4,DYNLELEN         COMPARE WITH L'D-ENTRY     11/83 DBC\n         BNH   GOTBDLEN            LOW; USE USER'S LENGTH     11/83 DBC\n         LH    R4,DYNLELEN         HIGH; USE L'D-ENTRY        11/83 DBC\nGOTBDLEN SH    R4,=Y(PDS2TTRP-PDS2+1) DECRIMENT BY L'ROOT     11/83 DBC\n*                                  SECTION. ALSO DECRIMENT    11/83 DBC\n*                                  FOR \"EX-MVC\". IS USER'S    11/83 DBC\n*                                  SLOT LONG ENOUGH?          11/83 DBC\n         BNM   BLDLMOVE            YES, PROCEED               11/83 DBC\n         OI    DENTNAME+DYNLLOCK,UNLOCKED NO, RELEASE THE     11/83 DBC\n*                                  SLOT                       11/83 DBC\n         B     NAMEMISS            IGNORE THIS NAME           11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SET THE USER'S KEY AND THEN COPY THE BLDL ENTRY TO * 11/83 DBC\n*        HIS PLIST. NOTE, THE DESIRED USER KEY WILL BE      * 09/84 DBC\n*        EITHER HIS EXECUTION KEY OF THE KEY FROM THE DEB   * 10/85 DBC\n*        FOR THE PDS BEING SEARCHED. IF THE DESIRED KEY IS  * 09/84 DBC\n*        THE DEB KEY, THEN IGC018'S EXECUTION KEY MATCHES   * 09/84 DBC\n*        THE DEB KEY.                                       * 09/84 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nBLDLMOVE IC    R5,USERKEY          GET USER'S EXECUTION KEY   09/84 DBC\n         TM    BLDLFLG,EXSBLDL-EXSBLDL DOING A BLDL?          09/84 DBC\n         @ZAP  (EXSBLDL,-3)                                   09/84 DBC\n         BNZ   SINKKEY             YES, PROCEED               09/84 DBC\n         IC    R5,KEYSAVE          NO, DOING A FIND. GET      09/84 DBC\n*                                  IGC018'S EXECUTION KEY     09/84 DBC\n*                                  (WHICH WILL MATCH THE      09/84 DBC\n*                                  USER'D DEB KEY).           09/84 DBC\nSINKKEY  SPKA  0(R5)               SET USER'S KEY             09/84 DBC\n         SPACE 1                                              09/84 DBC\n         MVC   PDS2TTRP(*-*),DENTTTRP (EXECUTED)              11/83 DBC\n         EX    R4,*-6              COPY STUFF TO USER'S PLIST 11/83 DBC\n         SPKA  0                   RESUME KEY-0               11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        UPDATE THE SLOT'S LRU FIELD (MAKING IT M.R.U.),    * 11/83 DBC\n*        COUNT THE HIT, AND UNLOCK THE DYNA-SLOT.           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   DYNLLRU#,CLOKSAVE   MAKE SLOT M.R.U.         * 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R4,1                LOAD INCRIMENT             11/83 DBC\n         AL    R4,DYNLHITS         COUNT THE SLOT'S HITS      11/83 DBC\n         ST    R4,DYNLHITS         STORE BACK                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         OI    DENTNAME+DYNLLOCK,UNLOCKED RELEASE THE SLOT    11/83 DBC\n         DROP  R3                  RELEASE SLOT BASE          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R4,1                LOAD INCRIMENT             11/83 DBC\n         AL    R4,DYNAHITS         COUNT TOTAL HITS           11/83 DBC\n         ST    R4,DYNAHITS         STORE BACK                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        ADVANCE TO THE NEXT NAME IN THE USER'S PLIST.      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nNAMENEXT AH    R2,BLDELEN          --> NEXT PLIST ENTRY       11/83 DBC\n         BCT   R0,NAMELOOP         LOOP IF THERE ARE MORE     11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  R2                  NO MORE, REL PLIST ENTRY B 11/83 DBC\n         DROP  R8                  REL DYNA-CONTROL TBL BASE  11/83 DBC\n         DROP  R1                  RELEASE PLIST BASE         11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO IGC018                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCHRET  IC    R2,KEYSAVE          GET IGC018'S KEY           11/83 DBC\n         SPKA  0(R2)               RESTORE IT                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LM    R2,R14,REGSAVE      RESTORE IGC018'S REGS      11/83 DBC\n         DROP  R13                 RELEASE LCL WORK AREA BASE 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         B     SRCHPOZZ            GO BACK TO IGC018          11/83 DBC\n         DROP  ,                   RELEASE ALL BASES          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        STATIC DATA                                        * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCHPODH DC    A(DYNAHEAD-DYNAHEAD) --> CONTROL TABLE         11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTORG ,                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO IGC018                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCHPOZZ DS    0H                                             11/83 DBC\nSRCHPOLL EQU   SRCHPOZZ-SRCHPDS                               11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        THE ORIGINAL SRCHPDS CODE FROM IGC018 GETS COPIED  * 11/83 DBC\n*        FOLLOWING HERE.                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         TITLE 'DFOUND -- IGC018 HOOK ROUTINE'                11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        DFOUND -- THIS ROUTINE RECEIVES CONTROL VIA A HOOK * 11/83 DBC\n*        PLACED AT LABEL \"DFOUND\" IN IGC018. (IGC018        * 11/83 DBC\n*        BRANCHES TO \"DFOUND\" WHEN IT HAS SUCCESSFULLY READ * 11/83 DBC\n*        A PDS DIRECTORY BLOCK AND LOCATED THE DESIRED      * 11/83 DBC\n*        ENTRY WITHIN IT). IF THE MEMBER IS FROM A LINKLIST * 11/83 DBC\n*        LIBRARY BUT HAD NOT BEEN PREVIOUSLY COPIED TO THE  * 11/83 DBC\n*        DYNA-TABLE, THEN THIS INTERCEPT DOES THAT.         * 11/83 DBC\n*                                                           * 11/83 DBC\n*        DURING DYNABLDL START PROCESSING, THE FOLLOWING IS * 11/83 DBC\n*        DONE.                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THIS ROUTINE IS COPIED TO GLOBAL, FIXED,   * 11/83 DBC\n*                KEY0, FETCH ACCESSABLE MEMORY (SP245).     * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - ALL ADCONS CONTAINED IN IT ARE RELOCATED.  * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - ALL REFERENCES TO IBM PRIVATE DATA FIELDS  * 11/83 DBC\n*                ARE ADJUSTED TO CORRESPOND TO THE CURRENT  * 11/83 DBC\n*                VERSION OF IGC018.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THIS ROUTINE IS APPENDED WITH AN EXACT     * 11/83 DBC\n*                COPY OF THE INSTRUCTIONS IN IGC018 (AT     * 11/83 DBC\n*                LABEL \"DFOUND\") THAT WERE OVERLAID BY THE  * 11/83 DBC\n*                BRANCH TO THIS ROUTINE.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THOSE INSTRUCTIONS ARE APPENDED BY A       * 11/83 DBC\n*                BRANCH BACK TO IGC018 FOLLOWING THE        * 11/83 DBC\n*                OVERLAID INSTRUCTIONS.                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        STATIC INPUTS:                                     * 11/83 DBC\n*              - R15 POINTS TO THIS HOOK'S ENTRY ADDRESS.   * 11/83 DBC\n*              - R0 AND R1 ARE VOLITILE; THEY NEED NOT BE   * 11/83 DBC\n*                RESTORED.                                  * 11/83 DBC\n*              - ALL OTHER REGISTERS (INCLUDING R14), IF    * 11/83 DBC\n*                ALTERED, MUST BE RESTORED.                 * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DFOUND,R15          DCL LOCAL BASE             11/83 DBC\nDFOUND   DS    0F                  ALIGNMENT                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DETERMINE WHETHER OR NOT THE CURRENT MEMBER NAME   * 11/83 DBC\n*        IS FROM THE LINKLIST LIBRARIES.                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,CVTPTR           --> CVT                    11/83 DBC\n         LA    R0,0(,RDCB-RDCB)    COPY PDS DCB PTR           11/83 DBC\n         @ZAP  (RDCB,-2)                                      11/83 DBC\n         CL    R0,CVTLINK-CVTMAP(,R1) SEARCHING LINKLIST?     11/83 DBC\n         BNE   DFOUNDZZ            NO, IGNORE THIS CALL       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    PDS1NAME+DYNLLOCK-PDS1(RPDS1-RPDS1),UNLOCKED   11/83 DBC\n         @ZAP  (RPDS1,-2)          YES, BUT WILL THIS NAME    11/83 DBC*\n                                   CONFUSE ME?                11/83 DBC\n         BZ    DFOUNDZZ            YES, IGNORE THIS CALL      11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        AQUIRE A LOCAL DYNAMIC WORK AREA                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R0,=AL1(229,0,0,DYNAWAL) SP/LEN                11/83 DBC\n         GETMAIN R,LV=(0)          GET AN AREA                11/83 DBC\n         DROP  R15                 LOCAL BASE CLOBBERED       11/83 DBC\n         USING DYNAWA,R1           DCL WORK AREA BASE         11/83 DBC\n         BALR  R15,0               RELOAD A LOCAL BASE        11/83 DBC\n         USING *,R15               DECLARE IT                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SAVE IGC018'S ENVIRONMENT AND SET UP MY OWN.       * 11/83 DBC\n*   SEE NEWSWEEK CODE IN HERE.  SAM GOLOB - NEWSWEEK.         11/86 SBG\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         STM   R2,R14,REGSAVE      SAVE IGC018'S REGISTERS    11/83 DBC\n         MVC   CCIDSAVE,CONCAT#-CONCAT# SAVE CONCAT INDEX     11/83 DBC\n         @ZAP  (CONCAT#,-2)                                   11/83 DBC\n         LA    R0,0(,RPDS1-RPDS1)  --> FOUND D-ENTRY          11/83 DBC\n         @ZAP  (RPDS1,-2)                                     11/83 DBC\nEXCLLIBS DS    0H         NEWSWEEK CODE TO GIVE LIBRARY       11/86 SBG\n*                         EXCLUSION OPTION BY CONDITIONAL     11/86 SBG\n*                         ASSEMBLY.  TO TURN ON THE OPTION,   11/86 SBG\n*                         SETC &LIBEX TO 'YES', AND SET       11/86 SBG\n*                         AS MANY LIBRARY EXCLUDE VARIABLES   11/86 SBG\n*                         AS YOUR INSTALLATION REQUIRES.      11/86 SBG\n*                         A SETTING OF 15 NULLIFIES AN ENTRY. 11/86 SBG\n************************************************************* 11/86 SBG\n*   WE INTRODUCE LOCAL VARIABLES FOR THE PURPOSE OF         * 11/86 SBG\n*     EXCLUDING LINKLIST LIBRARIES WHICH WE DON'T WANT      * 11/86 SBG\n*     DYNABLDL TO HIT, FOR WHATEVER PURPOSE.  OUR INSTAL-   * 11/86 SBG\n*     LATION HAS APPLICATION PROGRAMMER LIBRARIES IN THE    * 11/86 SBG\n*     LINKLIST, BECAUSE WE DON'T WANT THEM TO CODE STEPLIB  * 11/86 SBG\n*     IN PRODUCTION JCL.  WE THEREFORE DON'T WANT DYNABLDL  * 11/86 SBG\n*     TO HIT THEIR MODULES.  WE ARE PROVIDING THE OPTION    * 11/86 SBG\n*     TO EXCLUDE UP TO SIX LINKLIST LIBRARIES.              * 11/86 SBG\n*   CODING 15 FOR A &LN WILL NULLIFY IT IN EFFECT.          * 11/86 SBG\n************************************************************* 11/86 SBG\n         LCLA  &L1,&L2,&L3,&L4,&L5,&L6                        11/86 SBG\n         LCLC  &LIBEX                                         11/86 SBG\n&L1      SETA  5         , FIFTH LIBRARY AFTER SYS1.LINKLIB   11/86 SBG\n&L2      SETA  6         , SIXTH LIBRARY AFTER SYS1.LINKLIB   11/86 SBG\n&L3      SETA  15        , NULLIFY PARAMETER                  11/86 SBG\n&L4      SETA  15        , NULLIFY PARAMETER                  11/86 SBG\n&L5      SETA  15        , NULLIFY PARAMETER                  11/86 SBG\n&L6      SETA  15        , NULLIFY PARAMETER                  11/86 SBG\n&LIBEX   SETC  'NO'      , 'YES' TO EXCLUDE, 'NO ' NOT TO.    11/86 SBG\n************************************************************* 11/86 SBG\n         AIF   ('&LIBEX' NE 'YES').SKIPEX                     11/86 SBG\n************************************************************* 11/86 SBG\n*  INSERT CODE TO EXCLUDE CERTAIN LINKLIST LIBRARIES FROM   * 11/86 SBG\n*   THE SEARCH.  THIS IS A FIX SO THAT DYNABLDL DOES NOT    * 11/86 SBG\n*   HIT LIBRARIES IN THE LINKLIST THAT YOU DON'T WANT IT    * 11/86 SBG\n*   TO HIT.                                                 * 11/86 SBG\n************************************************************* 11/86 SBG\n         CLI   CCIDSAVE,&L1        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L2        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L3        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L4        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L5        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L6        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         DS    0H                  ENSURE  ALIGNMENT          11/86 SBG\n.SKIPEX  ANOP                                                 11/86 SBG\n************************************************************* 11/86 SBG\n         LR    R13,R1              COPY LCL DYNAWA PTR.       11/83 DBC\n*                                  NOTE, DIRECT USE OF        11/83 DBC\n*                                  IGC018'S REGISTERS IS NOW  11/83 DBC\n*                                  NO LONGER SAFE.            11/83 DBC\n         DROP  R1                  RELEASE TEMP DYNAWA BASE   11/83 DBC\n         USING DYNAWA,R13          DCL NEW ONE                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R1,R0               COPY D-ENTRY POINTER       11/83 DBC\n         USING PDS1,R1             DCL A BASE FOR IT          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SAVE IGC018'S KEY AND LOAD KEY-0                     11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         IPK   ,                   GET IGC018'S KEY           11/83 DBC\n         STC   R2,KEYSAVE          SAVE IT                    11/83 DBC\n         SPKA  0                   LOAD KEY-0                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        GET BITS 10-41 OF THE CURRENT TOD CLOCK VALUE      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         STCK  CLOKSAVE            GET THE TOD CLOCK          11/83 DBC\n         LM    R2,R3,CLOKSAVE      LOAD IT                    11/83 DBC\n         SLDL  R2,CLOKSHFT         ISSOLATE BITS 10-41        11/83 DBC\n         ST    R2,CLOKSAVE         STORE BACK                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SCAN THE DYNA-TABLE IN SEARCH OF A STEALABLE SLOT. * 11/83 DBC\n*        NOTE, THE NAME MIGHT ALREADY EXIST IN THE TABLE,   * 11/83 DBC\n*        SO CHECK THAT TOO.                                 * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R8,DFOUNDDH         --> CONTROL TABLE          11/83 DBC\n         USING DYNAHEAD,R8         DCL CONTROL TABLE BASE     11/83 DBC\nRESCAN   LM    R3,R5,DYNAFIRS      --> DYNA-TABLE             11/83 DBC\n         USING DYNL,R3             DCL SLOT BASE              11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SR    R0,R0               LOAD LOGICAL HIGH -        11/83 DBC\n         BCTR  R0,0                 VALUE (4X'FF')            11/83 DBC\n         SPACE 1                                              11/83 DBC\nSCANLOOP CL    R0,DYNLLRU#         LESS RECENTLY USED SLOT?   11/83 DBC\n         BL    SCANNAME            NO, SKIP                   11/83 DBC\n         LR    R2,R3               YES, SAVE ITS POINTER      11/83 DBC\n         ICM   R0,15,DYNLLRU#      GET LRU#; UNUSED SLOT?     11/83 DBC\n         BZ    SCANGRAB            YES, GO USE IT.            11/83 DBC\nSCANNAME CLC   DENTNAME,PDS1NAME   NO, IS THE NAME ACTUALLY   11/83 DBC\n*                                  ALREADY IN THE DYNA-TABLE? 11/83 DBC\n         BE    SCANRET             YES, NOTHING TO DO HERE    11/83 DBC\n         BXLE  R3,R4,SCANLOOP      NO, CONTINUE SEARCHING     11/83 DBC\n         DROP  R3                  RELEASE SLOT BASE          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        A STEALABLE (OR UNUSED) SLOT HAS BEEN FOUND.       * 11/83 DBC\n*        ATTEMPT TO LOCK CONTROL OF IT.                     * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R2             DCL SLOT BASE              11/83 DBC\nSCANGRAB CLC   DYNLLRU#,CLOKSAVE   IF THE DYNA-TABLE IS VERY  11/83 DBC\n*                                  SMALL (SUCH AS 1 OR 2      11/83 DBC\n*                                  ENTRIES), THEN THE GRAB    11/83 DBC\n*                                  ATTEMPT COULD CONCEIVABLY  11/83 DBC\n*                                  FAIL ON EVERY SLOT AND     11/83 DBC\n*                                  THAT WOULD LEAD TO AN      11/83 DBC\n*                                  UNCONTROLLED LOOP. THIS    11/83 DBC\n*                                  TEST GUARDS AGAINST THAT.  11/83 DBC\n*                                  HAVE I ALREADY TRIED AND   11/83 DBC\n*                                  FAILED TO GRAB THIS SLOT?  11/83 DBC\n         BE    SCANRET             YES, GIVE UP.              11/83 DBC\n         MVC   DYNLLRU#,CLOKSAVE   NO, RESET THIS SLOT'S LRU# 11/83 DBC\n*                                  REGUARDLESS OF WHETHER OR  11/83 DBC\n*                                  I CAN LOCK IT.             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LM    R4,R5,DENTNAME      GET THE SLOT'S NAME        11/83 DBC\n         O     R4,=A(UNLOCKED)     SET UNLOCKED IN CASE       11/83 DBC\n*                                  ALREADY LOCKED JUST NOW BY 11/83 DBC\n*                                  SOMEONE ELSE               11/83 DBC\n         #TEST SIZE=(DYNLLOCK,EQ,3) THE LOCK BIT MUST BE IN   11/83 DBC*\n                                   THE NAME'S 4TH BYTE        11/83 DBC\n         LR    R6,R4               COPY THE -                 11/83 DBC\n         LR    R7,R5                NAME                      11/83 DBC\n         X     R6,=A(UNLOCKED)     SET \"LOCKED\" SIGNAL        11/83 DBC\n         #TEST SIZE=(DYNLLOCK,EQ,3)                           11/83 DBC\n         CDS   R4,R6,DENTNAME      ATTEMPT TO LOCK THIS SLOT. 11/83 DBC\n*                                  GOT IT?                    11/83 DBC\n         BNE   RESCAN              NO, TRY TO GET ANOTHER     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        I'VE NOW GOT A STEALABLE SLOT. COUNT IT AND STEAL  * 11/83 DBC\n*        IT.                                                * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         XC    DYNL(DYNLLEN),DYNL CLEAR THE SLOT              11/83 DBC\n         MVC   DYNLLRU#,CLOKSAVE   MAKE M.R.U.                11/83 DBC\n         MVC   DYNLCLOK,CLOKSAVE   SET BIRTHDATE              11/83 DBC\n         MVC   DENTCNCT,CCIDSAVE   SAVE LIB CONCAT INDEX      11/83 DBC\n         MVI   DENTLIBF,LINKSVC    SET \"FROM LINKLIST\" SIGNAL 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         IC    R4,PDS1INDC         GET L'UDAT/2               11/83 DBC\n         N     R4,=A(PDS1LUSR)     ISSOLATE IT                11/83 DBC\n         AR    R4,R4               CNVRT TO TRUE VALUE        11/83 DBC\n         LA    R5,DENTUSRD-DENT(,R4) CNVRT TO SLOT ENTRY LEN  11/83 DBC\n         STH   R5,DYNLELEN         SAVE                       11/83 DBC\n         MVC   DENTINDC(*-*),PDS1INDC (EXECUTED)              11/83 DBC\n         EX    R4,*-6              COPY FLAGS, LENGTH, AND    11/83 DBC\n*                                  USER DATA TO THE SLOT      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   DENTNAME(L'DENTNAME+L'DENTTTRP),PDS1NAME COPY  11/83 DBC\n*                                  REST OF INFO TO SLOT. ALSO 11/83 DBC\n*                                  UNLOCK THE SLOT.           11/83 DBC\n         DROP  R2                  RELEASE SLOT BASE          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R4,1                LOAD INCRIMENT             11/83 DBC\n         AL    R4,DYNADDED         INCR STEAL COUNTER         11/83 DBC\n         ST    R4,DYNADDED         STORE BACK                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO IGC018                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSCANRET  IC    R2,KEYSAVE          GET IGC018'S KEY           11/83 DBC\n         SPKA  0(R2)               RESTORE IT                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R1,DYNAWA           SAVE WORK AREA PTR         11/83 DBC\n         DROP  R1                  RELEASE D-ENTRY BASE       11/83 DBC\n         LM    R2,R14,REGSAVE      RESTORE IGC018'S REGISTERS 11/83 DBC\n         DROP  R8                  RELEASE CONTROL TABLE BASE 11/83 DBC\n         DROP  R13                 RELEASE WORK AREA BASE     11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R0,=AL1(229,0,0,DYNAWAL) GET SP/LEN            11/83 DBC\n         FREEMAIN R,LV=(0),A=(1)   RELEASE THE WORK AREA      11/83 DBC\n         DROP  R15                 LOCAL BASE CLOBBERED       11/83 DBC\n         BALR  R15,0               LOAD NEW LOCAL BASE        11/83 DBC\n         B     DFOUNDZZ-*(,R15)    GO EXIT TO IGC018          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        LOCAL DATA                                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  ,                   RELEASE ALL BASES          11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFOUNDDH DC    A(DYNAHEAD-DYNAHEAD) HEADER TABLE PTR          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTORG ,                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO IGC018                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFOUNDZZ DS    0H                                             11/83 DBC\nDFOUNDLL EQU   DFOUNDZZ-DFOUND                                11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        THE ORIGINAL DFOUND CODE FROM IGC018 GETS COPIED   * 11/83 DBC\n*        FOLLOWING HERE.                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         TITLE '@ZAP -- IBM PRIVATE FIELDS REFERENCE ADJUSTMENTS' 3 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        @ZAP -- THIS ROUTINE ADJUSTS ALL FLAGGED           * 11/83 DBC\n*        REFERENCES TO IBM PRIVATE FIELDS TO CORRESPOND TO  * 11/83 DBC\n*        THE CURRENT VERSION OF IGC018.                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 POINTS TO A TABLE OF FIELD DESCRIPTORS. * 11/83 DBC\n*              - THE PROGRAM BASE REGISTERS ARE AS          * 11/83 DBC\n*                ESTABLISHED BY THE #ENTER MACRO AT         * 11/83 DBC\n*                DYNABLDL'S ENTRY POINT.                    * 11/83 DBC\n*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC\n*              - R0 MAY BE DESTROYED.                       * 11/83 DBC\n*              - NOTE, A LOCAL BASE IS NOT NEEDED HERE.     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - THE REQUIRED ADJUSTMENTS HAVE BEEN MADE.   * 11/83 DBC\n*              - R0 IS DESTROYED.                           * 11/83 DBC\n*              - ALL OTHER REGISTERS ARE RESTORED.          * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #USING ,                  RESTORE ADDRESSABILITY     11/83 DBC\n         USING FIELDS,R1           DCL FIELDS BASE            11/83 DBC\n@ZAP     @ZAP  ,                                              11/83 DBC\n         SPACE 1                                              11/83 DBC\n         BR    R14                 RETURN TO CALLER           11/83 DBC\n         DROP  ,                   RELEASE ALL BASES          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTORG ,                                              11/83 DBC\n         TITLE 'PRTEXIT -- SYSPRINT DCB OPEN EXIT'            11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        PRTEXIT -- THIS IS A DCB OPEN EXIT ROUTINE FOR THE * 11/83 DBC\n*        SYSPRINT FILE. IT EXAMINES THE RECFM, LRECL, AND   * 11/83 DBC\n*        BLKSIZE DCB FIELDS TO ENFORCE VALID COMBINATIONS   * 11/83 DBC\n*        AND TO SET THE FOLLOWING DEFAULTS AS APPROPRIATE.  * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF NEITHER RECFM=F, =V, OR =U IS GIVEN, THEN       * 11/83 DBC\n*        RECFM=V IS SET.                                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF RECFM=A OR =M IS GIVEN, THEN THAT IS CLEARED.   * 11/83 DBC\n*        (CARRIAGE CONTROL IS NOT SUPPORTED BY DYNABLDL).   * 11/83 DBC\n*                                                           * 11/83 DBC\n*        FOR RECFM=U, LRECL IS FORCED TO ZERO.              * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF BLKSIZE=0 IS GIVEN, THEN A TENTATIVE DEFAULT    * 11/83 DBC\n*        BLKSIZE IS CHOSEN AS FOLLOWS:                      * 11/83 DBC\n*        - IF RECFM=F, THEN BLKSIZE=3120.                   * 11/83 DBC\n*        - IF RECFM=V, THEN BLKSIZE=4096.                   * 11/83 DBC\n*        - IF RECFM=U, THEN BLKSIZE=79.                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF LRECL=0 IS GIVEN, THEN A DEFAULT LRECL IS       * 11/83 DBC\n*        CHOSEN AS FOLLOWS:                                 * 11/83 DBC\n*        - IF RECFM=F, THEN LRECL=80.                       * 11/83 DBC\n*        - IF RECFM=V, THEN LRECL=83.                       * 11/83 DBC\n*                                                           * 11/83 DBC\n*        FOR RECFM=F, IF BLKSIZE IS NOT A MULTIPLE OF       * 11/83 DBC\n*        LRECL, THEN IT IS ROUNDED DOWN TO A LRECL          * 11/83 DBC\n*        MULTIPLE.                                          * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF, AT THIS POINT, BLKSIZE IS NOT LARGE ENOUGH     * 11/83 DBC\n*        WHEN COMPARED TO LRECL, THEN A NEW BLKSIZE IS SET  * 11/83 DBC\n*        AS FOLLOWS:                                        * 11/83 DBC\n*        - IF RECFM=F, THEN BLKSIZE=LRECL.                  * 11/83 DBC\n*        - IF RECFM=V, THEN BLKSIZE=LRECL+4.                * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 POINTS TO THE SYSPRINT DCB.             * 11/83 DBC\n*              - R14 POINTS TO A RETURN ADDRESS (SVC 3).    * 11/83 DBC\n*              - R15 POINTS TO THIS ROUTINE'S ENTRY         * 11/83 DBC\n*                ADDRESS.                                   * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - THE ABOVE DESCRIBED PROCESSING HAS BEEN    * 11/83 DBC\n*                COMPLETED.                                 * 11/83 DBC\n*              - R14 REMAINS UNCHANGED.                     * 11/83 DBC\n*              - OTHER REGISTERS MAY BE ALTERED.            * 11/83 DBC\n*                (RESTORATION IS NOT NECESSARY).            * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING IHADCB,R1           DCL DCB BASE               11/83 DBC\n         USING PRTEXIT,R15         DCL LOCAL BASE             11/83 DBC\nPRTEXIT  LH    R4,DCBLRECL         GET LRECL                  11/83 DBC\n         LH    R3,DCBBLKSI         SET BLKSIZE                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         OI    DCBRECFM,DCBRECBR   ASSUME BLOCKED RECORDS     11/83 DBC\n         SPACE 1                                              11/83 DBC\n         NI    DCBRECFM,255-DCBRECCC CLEAR CARRIAGE CONTROL   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    DCBRECFM,DCBRECU    RECFM DEFINED?             11/83 DBC\n         BO    PRTRECU             YES, RECFM=U               11/83 DBC\n         BNZ   PRTRECFV            YES, RECFM=F OR =V         11/83 DBC\n         OI    DCBRECFM,DCBRECV    NO, SET RECFM=V            11/83 DBC\nPRTRECFV TM    DCBRECFM,DCBRECF    RECFM=F?                   11/83 DBC\n         BO    PRTRECF             YES, GO HANDLE             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=V HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRECV  LTR   R3,R3               BLKSIZE=0?                 11/83 DBC\n         BNZ   PRTRVCK2            NO, SKIP                   11/83 DBC\n         LH    R3,=Y(4096)         YES, SET DEFAULT           11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRVCK2 CH    R4,=Y(LEN3270+4)    LRECL LARGE ENOUGH?        11/83 DBC\n         BNL   PRTRVCK3            YES, SKIP                  11/83 DBC\n         LA    R4,LEN3270+4        NO, RESET                  11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRVCK3 LA    R0,4(,R4)           GET LRECL+4                11/83 DBC\n         CR    R0,R3               BLKSIZE LARGE ENOUGH?      11/83 DBC\n         BH    PRTLBOK             YES, DONE HERE             11/83 DBC\n         NI    DCBRECFM,255-DCBRECBR NO, SIGNAL UNBLOCKED     11/83 DBC\n         LR    R3,R0               RESET THE BLKSIZE          11/83 DBC\n         B     PRTLBOK             DONE HERE                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=F HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRECF  LTR   R3,R3               BLKSIZE=0?                 11/83 DBC\n         BNZ   PRTRFCK2            NO, SKIP                   11/83 DBC\n         LA    R3,3120             YES, SET DEFAULT           11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRFCK2 CH    R4,=Y(LEN3270)      LRECL LARGE ENOUGH?        11/83 DBC\n         BNL   PRTRFCK3            YES, SKIP                  11/83 DBC\n         LA    R4,80               NO, SET DEFAULT            11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRFCK3 SR    R2,R2               CLEAR FOR DIVIDE           11/83 DBC\n         DR    R2,R4               ROUND BLKSIZE DOWN -       11/83 DBC\n         MR    R2,R4                TO A LRECL MULTIPLE       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CR    R3,R4               IS BLKSIZE LARGE ENOUGH?   11/83 DBC\n*                                  (MIGHT BE ZEROED BY THE    11/83 DBC\n*                                  ABOVE DIVIDE)              11/83 DBC\n         BH    PRTLBOK             YES, DONE HERE             11/83 DBC\n         NI    DCBRECFM,255-DCBRECBR NO, SIGNAL UNBLOCKED     11/83 DBC\n         LR    R3,R4               RESET BLKSIZE              11/83 DBC\n         B     PRTLBOK             DONE HERE                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=U HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRECU  NI    DCBRECFM,255-DCBRECBR SIGNAL UNBLOCKED         11/83 DBC\n         SR    R4,R4               SET LRECL=0                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CH    R3,=Y(LEN3270)      IS BLKSIZE LARGE ENOUGH?   11/83 DBC\n         BNL   PRTLBOK             YES, DONE HERE             11/83 DBC\n         LA    R3,LEN3270          NO, RESET THE BLKSIZE      11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO CALLER (OPEN VIA SVC 3)                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTLBOK  STH   R3,DCBBLKSI         STORE NEW BLKSIZE          11/83 DBC\n         STH   R4,DCBLRECL         STORE NEW LRECL            11/83 DBC\n         BR    R14                 RETURN TO CALLER           11/83 DBC\n         DROP  ,                   RELEASE ALL BASES          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTORG ,                                              11/83 DBC\n         TITLE 'VERSION TABLES'                               11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE: IGC018                                     * 11/83 DBC\n*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC\n*        LEVEL: 8206                                        * 11/83 DBC\n*        PTF: UZ56064                                       * 11/83 DBC\n*        APAR: AZ60132                                      * 11/83 DBC\n*                                                           * 11/83 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSN#01 CSECT ,                                              11/83 DBC\n         DC    A(ID#01)            --> VERSION VERIFIER       11/83 DBC\n         DC    A(SRCH#01)          --> ORIGINAL \"SRCHPDS\" COD 11/83 DBC\n         DC    A(DFND#01)          --> ORIGINAL \"DFOUND\" CODE 11/83 DBC\n         DC    A(DOFF#01)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nID#01    DS    0H                                             11/83 DBC\n         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC\n         DC    Y(ID#01VLN)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#01V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZA60132'         00000E          DC    C'@ZA60132'\n*                                                  DC    C'&SYSDATE'\n         DC    C'03/26/82'         000016+         DC    C'03/26/82'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nID#01VLN EQU   *-ID#01V            VERIFY LENGTH              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCH#01  DS    0H                                             11/83 DBC\n         DC    Y(X'572')           VERIFY LOCATION            11/83 DBC\n         DC    Y(SRCH#01L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#01V DS    0H                  000572 SRCHPDS  EQU   *\n         BAL   R14,X'4FA'(,R12)    000572          BAL   RSUBR,FIRSTMTY\n         TM    X'61'(R6),X'80'     000576          TM    EXSFLG,EXSSYDC\n         BO    X'580'(,R12)        00057A          BO    SRCHKYOK\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nSRCH#01L EQU   *-SRCH#01V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(SRCH#01L,GE,SRCHPOHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFND#01  DS    0H                                             11/83 DBC\n         DC    Y(X'7C4')           VERIFY LOCATION            11/83 DBC\n         DC    Y(DFND#01L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#01V MVC   X'8'(3,R7),X'8'(R8) 0007C4 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007CA          IC    RX,PDS1INDC\n         NR    R4,R14              0007CE          NR    RX,RZ\n         LA    R5,X'E'             0007D0          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007D4          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007D6          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nDFND#01L EQU   *-DFND#01V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(DFND#01L,GE,DFOUNDHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDOFF#01  DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              11/83 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              11/83 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1\n         SPACE 1                                              11/83 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\n         #TEST SIZE=(*-DOFF#01,EQ,FIELDSLN)                   11/83 DBC\n         EJECT ,                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE: IGC018                                     * 11/83 DBC\n*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC\n*        LEVEL: 8107                                        * 09/84 DBC\n*        PTF: UZ37480                                       * 09/84 DBC\n*        APAR: AZ49924                                      * 11/83 DBC\n*                                                           * 11/83 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSN#02 CSECT ,                                              11/83 DBC\n         DC    A(ID#02)            --> VERSION VERIFIER       11/83 DBC\n         DC    A(SRCH#02)          --> ORIGINAL \"SRCHPDS\" COD 11/83 DBC\n         DC    A(DFND#02)          --> ORIGINAL \"DFOUND\" CODE 11/83 DBC\n         DC    A(DOFF#02)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nID#02    DS    0H                                             11/83 DBC\n         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC\n         DC    Y(ID#02VLN)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#02V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZA49924'         00000E          DC    C'@ZA49924'\n*                                                  DC    C'&SYSDATE'\n         DC    C'05/28/81'         000016+         DC    C'05/28/81'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nID#02VLN EQU   *-ID#02V            VERIFY LENGTH              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCH#02  DS    0H                                             11/83 DBC\n         DC    Y(X'566')           VERIFY LOCATION            11/83 DBC\n         DC    Y(SRCH#02L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#02V DS    0H                  000566 SRCHPDS  EQU   *\n         BAL   R14,X'4EE'(,R12)    000566          BAL   RSUBR,FIRSTMTY\n         TM    X'61'(R6),X'80'     00056A          TM    EXSFLG,EXSSYDC\n         BO    X'574'(,R12)        00056E          BO    SRCHKYOK\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nSRCH#02L EQU   *-SRCH#02V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(SRCH#02L,GE,SRCHPOHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFND#02  DS    0H                                             11/83 DBC\n         DC    Y(X'7B8')           VERIFY LOCATION            11/83 DBC\n         DC    Y(DFND#02L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#02V MVC   X'8'(3,R7),X'8'(R8) 0007B8 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007BE          IC    RX,PDS1INDC\n         NR    R4,R14              0007C2          NR    RX,RZ\n         LA    R5,X'E'             0007C4          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007C8          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007CA          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nDFND#02L EQU   *-DFND#02V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(DFND#02L,GE,DFOUNDHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDOFF#02  DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              11/83 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              11/83 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1\n         SPACE 1                                              11/83 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\n         #TEST SIZE=(*-DOFF#02,EQ,FIELDSLN)                   11/83 DBC\n         EJECT ,                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE: IGC018                                     * 11/83 DBC\n*        PRODUCT: MVS SCP 3.8 (5752-MVS)                    * 11/83 DBC\n*        LEVEL: 8009                                        * 11/83 DBC\n*        PTF: UZ32516                                       * 11/83 DBC\n*        APAR: AZ47610                                      * 11/83 DBC\n*                                                           * 11/83 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSN#03 CSECT ,                                              11/83 DBC\n         DC    A(ID#03)            --> VERSION VERIFIER       11/83 DBC\n         DC    A(SRCH#03)          --> ORIGINAL \"SRCHPDS\" COD 11/83 DBC\n         DC    A(DFND#03)          --> ORIGINAL \"DFOUND\" CODE 11/83 DBC\n         DC    A(DOFF#03)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nID#03    DS    0H                                             11/83 DBC\n         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC\n         DC    Y(ID#03VLN)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#03V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZZ47610'         00000E          DC    C'@ZZ47610'\n*                                                  DC    C'&SYSDATE'\n         DC    C'07/09/80'         000016+         DC    C'07/09/80'\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nID#03VLN EQU   *-ID#03V            VERIFY LENGTH              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCH#03  DS    0H                                             11/83 DBC\n         DC    Y(X'4B2')           VERIFY LOCATION            11/83 DBC\n         DC    Y(SRCH#03L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#03V DS    0H                  0004B2 SRCHPDS  EQU   *\n         BAL   R14,X'43A'(,R12)    0004B2          BAL   RSUBR,FIRSTMTY\n         SR    R0,R0               0004B6          SR    R0,R0\n         IC    R0,X'141'(,R13)     0004B8 SRCHTTR  IC    R0,CONCAT#\n*                                        ******************************\n*                                        * NOTE, \"SRCHTTR\" IS NOT     *\n*                                        * REFERENCED IN IGC018, SO   *\n*                                        * NO PROBLEM EXISTS HERE.    *\n*                                        ******************************\n         TM    X'61'(R6),X'80'     0004BC          TM    EXSFLG,EXSSYDC\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nSRCH#03L EQU   *-SRCH#03V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(SRCH#03L,GE,SRCHPOHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFND#03  DS    0H                                             11/83 DBC\n         DC    Y(X'6A0')           VERIFY LOCATION            11/83 DBC\n         DC    Y(DFND#03L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#03V MVC   X'8'(3,R7),X'8'(R8) 0006A0 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0006A6          IC    RX,PDS1INDC\n         NR    R4,R14              0006AA          NR    RX,RZ\n         LA    R5,X'E'             0006AC          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0006B0          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0006B2          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nDFND#03L EQU   *-DFND#03V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(DFND#03L,GE,DFOUNDHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDOFF#03  DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              11/83 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              11/83 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1\n         SPACE 1                                              11/83 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\n         #TEST SIZE=(*-DOFF#03,EQ,FIELDSLN)                   11/83 DBC\n         EJECT ,                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE: IGC018                                     * 11/83 DBC\n*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC\n*        LEVEL: 8303                                        * 11/83 DBC\n*        PTF: UZ61168 (VARIATION \"@HZA\")                    * 05/84 DBC\n*                                                           * 11/83 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSN#04 CSECT ,                                              11/83 DBC\n         DC    A(ID#04)            --> VERSION VERIFIER       11/83 DBC\n         DC    A(SRCH#04)          --> ORIGINAL \"SRCHPDS\" COD 11/83 DBC\n         DC    A(DFND#04)          --> ORIGINAL \"DFOUND\" CODE 11/83 DBC\n         DC    A(DOFF#04)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nID#04    DS    0H                                             11/83 DBC\n         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC\n         DC    Y(ID#04VLN)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#04V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'    @HZA'         00000E          DC    C'    @HZA'\n*                                                  DC    C'&SYSDATE'\n         DC    C'11/19/82'         000016+         DC    C'11/19/82'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nID#04VLN EQU   *-ID#04V            VERIFY LENGTH              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCH#04  DS    0H                                             11/83 DBC\n         DC    Y(X'58C')           VERIFY LOCATION            11/83 DBC\n         DC    Y(SRCH#04L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#04V DS    0H                  00058C SRCHPDS  EQU   *\n         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY\n         SR    R0,R0               000590          SR    R0,R0\n         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#\n*                                        ******************************\n*                                        * NOTE, \"SRCHTTR\" IS NOT     *\n*                                        * REFERENCED IN IGC018, SO   *\n*                                        * NO PROBLEM EXISTS HERE.    *\n*                                        ******************************\n         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nSRCH#04L EQU   *-SRCH#04V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(SRCH#04L,GE,SRCHPOHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFND#04  DS    0H                                             11/83 DBC\n         DC    Y(X'808')           VERIFY LOCATION            11/83 DBC\n         DC    Y(DFND#04L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#04V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC\n         NR    R4,R14              000812          NR    RX,RZ\n         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               000818          LCR   RY,RY\n         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nDFND#04L EQU   *-DFND#04V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(DFND#04L,GE,DFOUNDHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDOFF#04  DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              11/83 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              11/83 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1\n         SPACE 1                                              11/83 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\n         #TEST SIZE=(*-DOFF#04,EQ,FIELDSLN)                   11/83 DBC\n         EJECT ,                                              04/84 JLC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n*        MODULE: IGC018                                     * 04/84 JLC\n*        PRODUCT: DF/DS (5740-AM7)                          * 04/84 JLC\n*        LEVEL: 8303                                        * 04/84 JLC\n*        PTF: UZ61167                                       * 04/84 JLC\n*                                                           * 04/84 JLC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 04/84 JLC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 04/84 JLC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 04/84 JLC\n*        DSECT.                                             * 04/84 JLC\n*                                                           * 04/84 JLC\n*        PREPARED 04/20/84 BY J.CALLEN AT U OF C            * 04/84 JLC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         SPACE 1                                              04/84 JLC\nVERSN#05 CSECT ,                                              04/84 JLC\n         DC    A(ID#05)            --> VERSION VERIFIER       04/84 JLC\n         DC    A(SRCH#05)          --> ORIGINAL \"SRCHPDS\" COD 04/84 JLC\n         DC    A(DFND#05)          --> ORIGINAL \"DFOUND\" CODE 04/84 JLC\n         DC    A(DOFF#05)          --> IBM DATA FIELDS DESCRIPTORS  JLC\n         SPACE 3                                              04/84 JLC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 04/84 JLC\n*        DSECT.                                             * 04/84 JLC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         SPACE 1                                              04/84 JLC\nID#05    DS    0H                                             04/84 JLC\n         DC    Y(X'6')             VERIFY LOCATION            04/84 JLC\n         DC    Y(ID#05VLN)         VERIFY LENGTH              04/84 JLC\n         SPACE 1                                              04/84 JLC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#05V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZA66915'         00000E          DC    C'ZA66915A'\n*                                                  DC    C'&SYSDATE'\n         DC    C'11/19/82'         000016+         DC    C'11/19/82'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              04/84 JLC\nID#05VLN EQU   *-ID#05V            VERIFY LENGTH              04/84 JLC\n         SPACE 3                                              04/84 JLC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 04/84 JLC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         SPACE 1                                              04/84 JLC\nSRCH#05  DS    0H                                             04/84 JLC\n         DC    Y(X'57A')           VERIFY LOCATION            04/84 JLC\n         DC    Y(SRCH#05L)         VERIFY LENGTH              04/84 JLC\n         SPACE 1                                              04/84 JLC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#05V DS    0H                  00057A SRCHPDS  EQU   *\n         BAL   R14,X'502'(,R12)    00057A          BAL   RSUBR,FIRSTMTY\n         TM    X'61'(R6),X'80'     00057E          TM    EXSFLG,EXSSYDC\n         BO    X'588'(,R12)        000582          BO    SRCHKYOK\n*                                  ************************************\n         SPACE 1                                              04/84 JLC\nSRCH#05L EQU   *-SRCH#05V          VERIFY LENGTH              04/84 JLC\n         #TEST SIZE=(SRCH#05L,GE,SRCHPOHL)                    04/84 JLC\n         SPACE 3                                              04/84 JLC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 04/84 JLC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         SPACE 1                                              04/84 JLC\nDFND#05  DS    0H                                             04/84 JLC\n         DC    Y(X'7CC')           VERIFY LOCATION            04/84 JLC\n         DC    Y(DFND#05L)         VERIFY LENGTH              04/84 JLC\n         SPACE 1                                              04/84 JLC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#05V MVC   X'8'(3,R7),X'8'(R8) 0007CC DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007D2          IC    RX,PDS1INDC\n         NR    R4,R14              0007D6          NR    RX,RZ\n         LA    R5,X'E'             0007D8          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007DC          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007DE          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              04/84 JLC\nDFND#05L EQU   *-DFND#05V          VERIFY LENGTH              04/84 JLC\n         #TEST SIZE=(DFND#05L,GE,DFOUNDHL)                    04/84 JLC\n         SPACE 3                                              04/84 JLC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 04/84 JLC\n*        DSECT.                                             * 04/84 JLC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         SPACE 1                                              04/84 JLC\nDOFF#05  DS    0H                                             04/84 JLC\n         SPACE 1                                              04/84 JLC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              04/84 JLC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              04/84 JLC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1\n         SPACE 1                                              04/84 JLC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              04/84 JLC\n         #TEST SIZE=(*-DOFF#05,EQ,FIELDSLN)                   04/84 JLC\n         EJECT ,                                              05/84 DBC\n************************************************************* 05/84 DBC\n*                                                           * 05/84 DBC\n*        MODULE: IGC018                                     * 05/84 DBC\n*        PRODUCT: DF/DS (5740-AM7)                          * 05/84 DBC\n*        LEVEL: 8303                                        * 05/84 DBC\n*        PTF: UZ61168 (VARIATION \"@H2A\")                    * 05/84 DBC\n*                                                           * 05/84 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 05/84 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 05/84 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 05/84 DBC\n*        DSECT.                                             * 05/84 DBC\n*                                                           * 05/84 DBC\n************************************************************* 05/84 DBC\n         SPACE 1                                              05/84 DBC\nVERSN#06 CSECT ,                                              05/84 DBC\n         DC    A(ID#06)            --> VERSION VERIFIER       05/84 DBC\n         DC    A(SRCH#06)          --> ORIGINAL \"SRCHPDS\" COD 05/84 DBC\n         DC    A(DFND#06)          --> ORIGINAL \"DFOUND\" CODE 05/84 DBC\n         DC    A(DOFF#06)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              05/84 DBC\n************************************************************* 05/84 DBC\n*                                                           * 05/84 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 05/84 DBC\n*        DSECT.                                             * 05/84 DBC\n*                                                           * 05/84 DBC\n************************************************************* 05/84 DBC\n         SPACE 1                                              05/84 DBC\nID#06    DS    0H                                             05/84 DBC\n         DC    Y(X'6')             VERIFY LOCATION            05/84 DBC\n         DC    Y(ID#06VLN)         VERIFY LENGTH              05/84 DBC\n         SPACE 1                                              05/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#06V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'    @H2A'         00000E          DC    C'    @H2A'\n*                                                  DC    C'&SYSDATE'\n         DC    C'11/19/82'         000016+         DC    C'11/19/82'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              05/84 DBC\nID#06VLN EQU   *-ID#06V            VERIFY LENGTH              05/84 DBC\n         SPACE 3                                              05/84 DBC\n************************************************************* 05/84 DBC\n*                                                           * 05/84 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 05/84 DBC\n*                                                           * 05/84 DBC\n************************************************************* 05/84 DBC\n         SPACE 1                                              05/84 DBC\nSRCH#06  DS    0H                                             05/84 DBC\n         DC    Y(X'58C')           VERIFY LOCATION            05/84 DBC\n         DC    Y(SRCH#06L)         VERIFY LENGTH              05/84 DBC\n         SPACE 1                                              05/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#06V DS    0H                  00058C SRCHPDS  EQU   *\n         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY\n         SR    R0,R0               000590          SR    R0,R0\n         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#\n*                                        ******************************\n*                                        * NOTE, \"SRCHTTR\" IS NOT     *\n*                                        * REFERENCED IN IGC018, SO   *\n*                                        * NO PROBLEM EXISTS HERE.    *\n*                                        ******************************\n         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC\n*                                  ************************************\n         SPACE 1                                              05/84 DBC\nSRCH#06L EQU   *-SRCH#06V          VERIFY LENGTH              05/84 DBC\n         #TEST SIZE=(SRCH#06L,GE,SRCHPOHL)                    05/84 DBC\n         SPACE 3                                              05/84 DBC\n************************************************************* 05/84 DBC\n*                                                           * 05/84 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 05/84 DBC\n*                                                           * 05/84 DBC\n************************************************************* 05/84 DBC\n         SPACE 1                                              05/84 DBC\nDFND#06  DS    0H                                             05/84 DBC\n         DC    Y(X'808')           VERIFY LOCATION            05/84 DBC\n         DC    Y(DFND#06L)         VERIFY LENGTH              05/84 DBC\n         SPACE 1                                              05/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#06V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC\n         NR    R4,R14              000812          NR    RX,RZ\n         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               000818          LCR   RY,RY\n         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              05/84 DBC\nDFND#06L EQU   *-DFND#06V          VERIFY LENGTH              05/84 DBC\n         #TEST SIZE=(DFND#06L,GE,DFOUNDHL)                    05/84 DBC\n         SPACE 3                                              05/84 DBC\n************************************************************* 05/84 DBC\n*                                                           * 05/84 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 05/84 DBC\n*        DSECT.                                             * 05/84 DBC\n*                                                           * 05/84 DBC\n************************************************************* 05/84 DBC\n         SPACE 1                                              05/84 DBC\nDOFF#06  DS    0H                                             05/84 DBC\n         SPACE 1                                              05/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              05/84 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              05/84 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1\n         SPACE 1                                              05/84 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              05/84 DBC\n         #TEST SIZE=(*-DOFF#06,EQ,FIELDSLN)                   05/84 DBC\n         EJECT ,                                              08/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n*        MODULE: IGC018                                     * 08/84 DBC\n*        PRODUCT: DFP (5665-295/A)                          * 08/84 DBC\n*                                                           * 08/84 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 08/84 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 08/84 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 08/84 DBC\n*        DSECT.                                             * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\nVERSN#07 CSECT ,                                              08/84 DBC\n         DC    A(ID#07)            --> VERSION VERIFIER       08/84 DBC\n         DC    A(SRCH#07)          --> ORIGINAL \"SRCHPDS\" COD 08/84 DBC\n         DC    A(FINDK#07)         --> ORIGINAL \"FINDKEY\" COD 08/84 DBC\n         DC    A(DOFF#07)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              08/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 08/84 DBC\n*        DSECT.                                             * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\nID#07    DS    0H                                             08/84 DBC\n         DC    Y(X'6')             VERIFY LOCATION            08/84 DBC\n         DC    Y(ID#07VLN)         VERIFY LENGTH              08/84 DBC\n         SPACE 1                                              08/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#07V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'JDQ1110 '         00000E          DC    C'JDQ1110 '\n*                                                  DC    C'&SYSDATE'\n         DC    C'10/19/83'         000016+         DC    C'10/19/83'\n         DC    C'5665-295'         00001E          DC    C'5665-295 ---\n*                                  ************************************\n         SPACE 1                                              08/84 DBC\nID#07VLN EQU   *-ID#07V            VERIFY LENGTH              08/84 DBC\n         SPACE 3                                              08/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\nSRCH#07  DS    0H                                             08/84 DBC\n         DC    Y(X'52C')           VERIFY LOCATION            08/84 DBC\n         DC    Y(SRCH#07L)         VERIFY LENGTH              08/84 DBC\n         SPACE 1                                              08/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#07V DS    0H                  00052C SRCHPDS  EQU   *\n         MVI   X'158'(R13),0       00052C          MVI   ERCODE,0\n         LH    R2,X'0'(,R10)       000530          LH    RSULEFT,BLDENT\n         LA    R7,X'4'(,R10)       000534          LA    RPDS2,BLDENT\n*                                  ************************************\n         SPACE 1                                              08/84 DBC\nSRCH#07L EQU   *-SRCH#07V          VERIFY LENGTH              08/84 DBC\n         #TEST SIZE=(SRCH#07L,GE,SRCHPOHL)                    08/84 DBC\n         SPACE 3                                              08/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 08/84 DBC\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 08/84 DBC\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 08/84 DBC\n*        LABEL \"DFOUND\".                                    * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\nFINDK#07 DS    0H                                             08/84 DBC\n         DC    Y(X'7BC')           VERIFY LOCATION            08/84 DBC\n         DC    Y(FIND#07L)         VERIFY LENGTH              08/84 DBC\n         SPACE 1                                              08/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007BC FINDKEY  EQU   *\nFIND#07V MVC   X'8'(3,R7),X'8'(R8) 0007BC          MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007C2          IC    RX,PDS1INDC\n         NR    R4,R14              0007C6          NR    RX,RZ\n         LA    R5,X'E'             0007C8          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007CC          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007CE          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              08/84 DBC\nFIND#07L EQU   *-FIND#07V          VERIFY LENGTH              08/84 DBC\n         #TEST SIZE=(FIND#07L,GE,DFOUNDHL)                    08/84 DBC\n         SPACE 3                                              08/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 08/84 DBC\n*        DSECT.                                             * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\nDOFF#07  DS    0H                                             08/84 DBC\n         SPACE 1                                              08/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              08/84 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              08/84 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1\n         SPACE 1                                              08/84 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              08/84 DBC\n         #TEST SIZE=(*-DOFF#07,EQ,FIELDSLN)                   08/84 DBC\n         EJECT ,                                              06/84 WRH\n************************************************************* 06/84 WRH\n*                                                           * 06/84 WRH\n*        MODULE: IGC018                                     * 06/84 WRH\n*        PRODUCT: DF/DS (5740-AM7)                          * 06/84 WRH\n*        LEVEL: 8402                                        * 06/84 WRH\n*        PTF: UZ69197                                       * 06/84 WRH\n*        APAR: AZ66915                                      * 06/84 WRH\n*                                                           * 06/84 WRH\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 06/84 WRH\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 06/84 WRH\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 06/84 WRH\n*        DSECT.                                             * 06/84 WRH\n*                                                           * 06/84 WRH\n************************************************************* 06/84 WRH\n         SPACE 1                                              06/84 WRH\nVERSN#08 CSECT ,                                              06/84 WRH\n         DC    A(ID#08)            --> VERSION VERIFIER       06/84 WRH\n         DC    A(SRCH#08)          --> ORIGINAL \"SRCHPDS\" COD 06/84 WRH\n         DC    A(DFND#08)          --> ORIGINAL \"DFOUND\" CODE 06/84 WRH\n         DC    A(DOFF#08)          --> IBM DATA FIELDS DESCRIPTORS  WRH\n         SPACE 3                                              06/84 WRH\n************************************************************* 06/84 WRH\n*                                                           * 06/84 WRH\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 06/84 WRH\n*        DSECT.                                             * 06/84 WRH\n*                                                           * 06/84 WRH\n************************************************************* 06/84 WRH\n         SPACE 1                                              06/84 WRH\nID#08    DS    0H                                             06/84 WRH\n         DC    Y(X'6')             VERIFY LOCATION            06/84 WRH\n         DC    Y(ID#08VLN)         VERIFY LENGTH              06/84 WRH\n         SPACE 1                                              06/84 WRH\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#08V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZA66915'         00000E          DC    C'@ZA66915'\n*                                                  DC    C'&SYSDATE'\n         DC    C'11/22/83'         000016+         DC    C'11/22/83'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              06/84 WRH\nID#08VLN EQU   *-ID#08V            VERIFY LENGTH              06/84 WRH\n         SPACE 3                                              06/84 WRH\n************************************************************* 06/84 WRH\n*                                                           * 06/84 WRH\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 06/84 WRH\n*                                                           * 06/84 WRH\n************************************************************* 06/84 WRH\n         SPACE 1                                              06/84 WRH\nSRCH#08  DS    0H                                             06/84 WRH\n         DC    Y(X'57A')           VERIFY LOCATION            06/84 WRH\n         DC    Y(SRCH#08L)         VERIFY LENGTH              06/84 WRH\n         SPACE 1                                              06/84 WRH\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#08V DS    0H                  00057A SRCHPDS  EQU   *\n         BAL   R14,X'502'(,R12)    00057A          BAL   RSUBR,FIRSTMTY\n         TM    X'61'(R6),X'80'     00057E          TM    EXSFLG,EXSSYCD\n         BO    X'588'(,R12)        000582          BO    SRCHKYOK\n*                                  ************************************\n         SPACE 1                                              06/84 WRH\nSRCH#08L EQU   *-SRCH#08V          VERIFY LENGTH              06/84 WRH\n         #TEST SIZE=(SRCH#08L,GE,SRCHPOHL)                    06/84 WRH\n         SPACE 3                                              06/84 WRH\n************************************************************* 06/84 WRH\n*                                                           * 06/84 WRH\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 06/84 WRH\n*                                                           * 06/84 WRH\n************************************************************* 06/84 WRH\n         SPACE 1                                              06/84 WRH\nDFND#08  DS    0H                                             06/84 WRH\n         DC    Y(X'7CC')           VERIFY LOCATION            06/84 WRH\n         DC    Y(DFND#08L)         VERIFY LENGTH              06/84 WRH\n         SPACE 1                                              06/84 WRH\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#08V MVC   X'8'(3,R7),X'8'(R8) 0007CC DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007D2          IC    RX,PDS1INDC\n         NR    R4,R14              0007D6          NR    RX,RZ\n         LA    R5,X'E'             0007D8          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007DC          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007DE          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              06/84 WRH\nDFND#08L EQU   *-DFND#08V          VERIFY LENGTH              06/84 WRH\n         #TEST SIZE=(DFND#08L,GE,DFOUNDHL)                    06/84 WRH\n         SPACE 3                                              06/84 WRH\n************************************************************* 06/84 WRH\n*                                                           * 06/84 WRH\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 06/84 WRH\n*        DSECT.                                             * 06/84 WRH\n*                                                           * 06/84 WRH\n************************************************************* 06/84 WRH\n         SPACE 1                                              06/84 WRH\nDOFF#08  DS    0H                                             06/84 WRH\n         SPACE 1                                              06/84 WRH\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              06/84 WRH\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              06/84 WRH\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1\n         SPACE 1                                              06/84 WRH\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              06/84 WRH\n         #TEST SIZE=(*-DOFF#08,EQ,FIELDSLN)                   06/84 WRH\n         EJECT ,                                              09/84 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n*        MODULE: IGC018                                     * 09/84 DBC\n*        PRODUCT: DFP (5665-295/A)                          * 09/84 DBC\n*                                                           * 09/84 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 09/84 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 09/84 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 09/84 DBC\n*        DSECT.                                             * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         SPACE 1                                              09/84 DBC\nVERSN#09 CSECT ,                                              09/84 DBC\n         DC    A(ID#09)            --> VERSION VERIFIER       09/84 DBC\n         DC    A(SRCH#09)          --> ORIGINAL \"SRCHPDS\" COD 09/84 DBC\n         DC    A(FINDK#09)         --> ORIGINAL \"FINDKEY\" COD 09/84 DBC\n         DC    A(DOFF#09)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              09/84 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 09/84 DBC\n*        DSECT.                                             * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         SPACE 1                                              09/84 DBC\nID#09    DS    0H                                             09/84 DBC\n         DC    Y(X'6')             VERIFY LOCATION            09/84 DBC\n         DC    Y(ID#09VLN)         VERIFY LENGTH              09/84 DBC\n         SPACE 1                                              09/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#09V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'ZA76850 '         00000E          DC    C'ZA76850 '\n*                                                  DC    C'&SYSDATE'\n         DC    C'03/28/84'         000016+         DC    C'03/28/84'\n         DC    C'5665-295'         00001E          DC    C'5665-295 ---\n*                                  ************************************\n         SPACE 1                                              09/84 DBC\nID#09VLN EQU   *-ID#09V            VERIFY LENGTH              09/84 DBC\n         SPACE 3                                              09/84 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         SPACE 1                                              09/84 DBC\nSRCH#09  DS    0H                                             09/84 DBC\n         DC    Y(X'52C')           VERIFY LOCATION            09/84 DBC\n         DC    Y(SRCH#09L)         VERIFY LENGTH              09/84 DBC\n         SPACE 1                                              09/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#09V DS    0H                  00052C SRCHPDS  EQU   *\n         MVI   X'158'(R13),0       00052C          MVI   ERCODE,0\n         LH    R2,X'0'(,R10)       000530          LH    RSULEFT,BLDENT\n         LA    R7,X'4'(,R10)       000534          LA    RPDS2,BLDENT\n*                                  ************************************\n         SPACE 1                                              09/84 DBC\nSRCH#09L EQU   *-SRCH#09V          VERIFY LENGTH              09/84 DBC\n         #TEST SIZE=(SRCH#09L,GE,SRCHPOHL)                    09/84 DBC\n         SPACE 3                                              09/84 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 09/84 DBC\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 09/84 DBC\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 09/84 DBC\n*        LABEL \"DFOUND\".                                    * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         SPACE 1                                              09/84 DBC\nFINDK#09 DS    0H                                             09/84 DBC\n         DC    Y(X'7BC')           VERIFY LOCATION            09/84 DBC\n         DC    Y(FIND#09L)         VERIFY LENGTH              09/84 DBC\n         SPACE 1                                              09/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007BC FINDKEY  EQU   *\nFIND#09V MVC   X'8'(3,R7),X'8'(R8) 0007BC          MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007C2          IC    RX,PDS1INDC\n         NR    R4,R14              0007C6          NR    RX,RZ\n         LA    R5,X'E'             0007C8          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007CC          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007CE          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              09/84 DBC\nFIND#09L EQU   *-FIND#09V          VERIFY LENGTH              09/84 DBC\n         #TEST SIZE=(FIND#09L,GE,DFOUNDHL)                    09/84 DBC\n         SPACE 3                                              09/84 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 09/84 DBC\n*        DSECT.                                             * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         SPACE 1                                              09/84 DBC\nDOFF#09  DS    0H                                             09/84 DBC\n         SPACE 1                                              09/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              09/84 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              09/84 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1\n         SPACE 1                                              09/84 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              09/84 DBC\n         #TEST SIZE=(*-DOFF#09,EQ,FIELDSLN)                   09/84 DBC\n         EJECT ,                                              01/85 DBC\n************************************************************* 01/85 DBC\n*                                                           * 01/85 DBC\n*        MODULE: IGC018                                     * 01/85 DBC\n*        PRODUCT: DF/DS (5740-AM7)                          * 01/85 DBC\n*        LEVEL: 8406                                        * 01/85 DBC\n*        PTF: UZ70857                                       * 01/85 DBC\n*                                                           * 01/85 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 01/85 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 01/85 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 01/85 DBC\n*        DSECT.                                             * 01/85 DBC\n*                                                           * 01/85 DBC\n************************************************************* 01/85 DBC\n         SPACE 1                                              01/85 DBC\nVERSN#10 CSECT ,                                              01/85 DBC\n         DC    A(ID#10)            --> VERSION VERIFIER       01/85 DBC\n         DC    A(SRCH#10)          --> ORIGINAL \"SRCHPDS\" COD 01/85 DBC\n         DC    A(DFND#10)          --> ORIGINAL \"DFOUND\" CODE 01/85 DBC\n         DC    A(DOFF#10)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              01/85 DBC\n************************************************************* 01/85 DBC\n*                                                           * 01/85 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 01/85 DBC\n*        DSECT.                                             * 01/85 DBC\n*                                                           * 01/85 DBC\n************************************************************* 01/85 DBC\n         SPACE 1                                              01/85 DBC\nID#10    DS    0H                                             01/85 DBC\n         DC    Y(X'6')             VERIFY LOCATION            01/85 DBC\n         DC    Y(ID#10VLN)         VERIFY LENGTH              01/85 DBC\n         SPACE 1                                              01/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#10V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZA74904'         00000E          DC    C'@ZA74904'\n*                                                  DC    C'&SYSDATE'\n         DC    C'03/27/84'         000016+         DC    C'03/27/84'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              01/85 DBC\nID#10VLN EQU   *-ID#10V            VERIFY LENGTH              01/85 DBC\n         SPACE 3                                              01/85 DBC\n************************************************************* 01/85 DBC\n*                                                           * 01/85 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 01/85 DBC\n*                                                           * 01/85 DBC\n************************************************************* 01/85 DBC\n         SPACE 1                                              01/85 DBC\nSRCH#10  DS    0H                                             01/85 DBC\n         DC    Y(X'58C')           VERIFY LOCATION            01/85 DBC\n         DC    Y(SRCH#10L)         VERIFY LENGTH              01/85 DBC\n         SPACE 1                                              01/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#10V DS    0H                  00058C SRCHPDS  EQU   *\n         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY\n         SR    R0,R0               000590          SR    R0,R001/85 DBC\n         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#\n*                                        ******************************\n*                                        * NOTE, \"SRCHTTR\" IS NOT     *\n*                                        * REFERENCED IN IGC018, SO   *\n*                                        * NO PROBLEM EXISTS HERE.    *\n*                                        ******************************\n         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC\n*                                  ************************************\n         SPACE 1                                              01/85 DBC\nSRCH#10L EQU   *-SRCH#10V          VERIFY LENGTH              01/85 DBC\n         #TEST SIZE=(SRCH#10L,GE,SRCHPOHL)                    01/85 DBC\n         SPACE 3                                              01/85 DBC\n************************************************************* 01/85 DBC\n*                                                           * 01/85 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 01/85 DBC\n*                                                           * 01/85 DBC\n************************************************************* 01/85 DBC\n         SPACE 1                                              01/85 DBC\nDFND#10  DS    0H                                             01/85 DBC\n         DC    Y(X'808')           VERIFY LOCATION            01/85 DBC\n         DC    Y(DFND#10L)         VERIFY LENGTH              01/85 DBC\n         SPACE 1                                              01/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#10V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC\n         NR    R4,R14              000812          NR    RX,RZ01/85 DBC\n         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               000818          LCR   RY,RY01/85 DBC\n         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              01/85 DBC\nDFND#10L EQU   *-DFND#10V          VERIFY LENGTH              01/85 DBC\n         #TEST SIZE=(DFND#10L,GE,DFOUNDHL)                    01/85 DBC\n         SPACE 3                                              01/85 DBC\n************************************************************* 01/85 DBC\n*                                                           * 01/85 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 01/85 DBC\n*        DSECT.                                             * 01/85 DBC\n*                                                           * 01/85 DBC\n************************************************************* 01/85 DBC\n         SPACE 1                                              01/85 DBC\nDOFF#10  DS    0H                                             01/85 DBC\n         SPACE 1                                              01/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              01/85 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              01/85 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL25601/85 DBC\n         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1\n         SPACE 1                                              01/85 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              01/85 DBC\n         #TEST SIZE=(*-DOFF#10,EQ,FIELDSLN)                   01/85 DBC\n         EJECT ,                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        MODULE: IGC018                                     * 10/85 DBC\n*        PRODUCT: DFP (5665-295/A)                          * 10/85 DBC\n*        PTF: UZ38298                                       * 10/85 DBC\n*        PUT: 8505                                          * 10/85 DBC\n*                                                           * 10/85 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 10/85 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 10/85 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nVERSN#11 CSECT ,                                              10/85 DBC\n         DC    A(ID#11)            --> VERSION VERIFIER       10/85 DBC\n         DC    A(SRCH#11)          --> ORIGINAL \"SRCHPDS\" COD 10/85 DBC\n         DC    A(FINDK#11)         --> ORIGINAL \"FINDKEY\" COD 10/85 DBC\n         DC    A(DOFF#11)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nID#11    DS    0H                                             10/85 DBC\n         DC    Y(X'6')             VERIFY LOCATION            10/85 DBC\n         DC    Y(ID#11VLN)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#11V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'ZA83145 '         00000E          DC    C'ZA83145 '\n*                                                  DC    C'&SYSDATE'\n         DC    C'03/19/85'         000016+         DC    C'03/19/85'\n         DC    C'5665-295'         00001E          DC    C'5665-295 ---\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nID#11VLN EQU   *-ID#11V            VERIFY LENGTH              10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nSRCH#11  DS    0H                                             10/85 DBC\n         DC    Y(X'52C')           VERIFY LOCATION            10/85 DBC\n         DC    Y(SRCH#11L)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#11V DS    0H                  00052C SRCHPDS  EQU   *\n         MVI   X'160'(R13),0       00052C          MVI   ERCODE,0\n*                                  000530          MODESET KEYADDR=EXSK\n         IC    R3,X'60'(,R6)       000530+         IC    3,EXSKEY\n         SPKA  0(R3)               000534+         SPKA  0(3)\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nSRCH#11L EQU   *-SRCH#11V          VERIFY LENGTH              10/85 DBC\n         #TEST SIZE=(SRCH#11L,GE,SRCHPOHL)                    10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 10/85 DBC\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 10/85 DBC\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 10/85 DBC\n*        LABEL \"DFOUND\".                                    * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nFINDK#11 DS    0H                                             10/85 DBC\n         DC    Y(X'7F2')           VERIFY LOCATION            10/85 DBC\n         DC    Y(FIND#11L)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007F2 FINDKEY  EQU   *\nFIND#11V STCM  R5,7,X'8'(R7)       0007F2          STCM  RY,ADDR3,PDS2T\n         LA    R5,X'E'             0007F6          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007FA          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007FC          AH    RY,BLDELEN\n         BM    X'82C'(,R12)        000800          BM    NOMOVE\n         BXLE  R4,R4,X'808'(R12)   000804          BXLE  RX,RX,EXEC\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nFIND#11L EQU   *-FIND#11V          VERIFY LENGTH              10/85 DBC\n         #TEST SIZE=(FIND#11L,GE,DFOUNDHL)                    10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nDOFF#11  DS    0H                                             10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              10/85 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              10/85 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'161'(R13))      000161 CONCAT#  DS    FL1\n         SPACE 1                                              10/85 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\n         #TEST SIZE=(*-DOFF#11,EQ,FIELDSLN)                   10/85 DBC\n         EJECT ,                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        MODULE: IGC018                                     * 10/85 DBC\n*        PRODUCT: DFP (5665-295/A)                          * 10/85 DBC\n*        PTF: UZ77946                                       * 10/85 DBC\n*        PUT: 8503                                          * 10/85 DBC\n*                                                           * 10/85 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 10/85 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 10/85 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nVERSN#12 CSECT ,                                              10/85 DBC\n         DC    A(ID#12)            --> VERSION VERIFIER       10/85 DBC\n         DC    A(SRCH#12)          --> ORIGINAL \"SRCHPDS\" COD 10/85 DBC\n         DC    A(FINDK#12)         --> ORIGINAL \"FINDKEY\" COD 10/85 DBC\n         DC    A(DOFF#12)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nID#12    DS    0H                                             10/85 DBC\n         DC    Y(X'6')             VERIFY LOCATION            10/85 DBC\n         DC    Y(ID#12VLN)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#12V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'ZA83696 '         00000E          DC    C'ZA83696 '\n*                                  000016          DC    C'&SYSDATE'\n         DC    C'01/06/85'         000016+         DC    C'01/06/85'\n         DC    C'5665-295'         00001E          DC    C'5665-295 ---\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nID#12VLN EQU   *-ID#12V            VERIFY LENGTH              10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nSRCH#12  DS    0H                                             10/85 DBC\n         DC    Y(X'52C')           VERIFY LOCATION            10/85 DBC\n         DC    Y(SRCH#12L)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#12V DS    0H                  00052C SRCHPDS  EQU   *\n         MVI   X'160'(R13),0       00052C          MVI   ERCODE,0\n*                                  000530          MODESET KEYADDR=EXSK\n         IC    R3,X'60'(,R6)       000530+         IC    3,EXSKEY\n         SPKA  0(R3)               000534+         SPKA  0(3)\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nSRCH#12L EQU   *-SRCH#12V          VERIFY LENGTH              10/85 DBC\n         #TEST SIZE=(SRCH#12L,GE,SRCHPOHL)                    10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 10/85 DBC\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 10/85 DBC\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 10/85 DBC\n*        LABEL \"DFOUND\".                                    * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nFINDK#12 DS    0H                                             10/85 DBC\n         DC    Y(X'7E0')           VERIFY LOCATION            10/85 DBC\n         DC    Y(FIND#12L)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007E0 FINDKEY  EQU   *\nFIND#12V STCM  R5,7,X'8'(R7)       0007E0          STCM  RY,ADDR3,PDS2T\n         LA    R5,X'E'             0007E4          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007E8          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007EA          AH    RY,BLDELEN\n         BM    X'81A'(,R12)        0007EE          BM    NOMOVE\n         BXLE  R4,R4,X'7F6'(R12)   0007F2          BXLE  RX,RX,EXEC\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nFIND#12L EQU   *-FIND#12V          VERIFY LENGTH              10/85 DBC\n         #TEST SIZE=(FIND#12L,GE,DFOUNDHL)                    10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nDOFF#12  DS    0H                                             10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              10/85 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              10/85 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'161'(R13))      000161 CONCAT#  DS    FL1\n         SPACE 1                                              10/85 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\n         #TEST SIZE=(*-DOFF#12,EQ,FIELDSLN)                   10/85 DBC\n         EJECT ,                                              01/88 SBG\n************************************************************* 01/88 SBG\n*                                                           * 01/88 SBG\n*        MODULE: IGC018                                     * 01/88 SBG\n*        PRODUCT: DFP (5665-295/B)  VERSION 1.2             * 01/88 SBG\n*        PTF: JDQ1111                                       * 01/88 SBG\n*        PUT: 8705                                          * 01/88 SBG\n*                                                           * 01/88 SBG\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 01/88 SBG\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 01/88 SBG\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 01/88 SBG\n*        DSECT.                                             * 01/88 SBG\n*                                                           * 01/88 SBG\n************************************************************* 01/88 SBG\n         SPACE 1                                              01/88 SBG\nVERSN#13 CSECT ,                                              01/88 SBG\n         DC    A(ID#13)            --> VERSION VERIFIER       01/88 SBG\n         DC    A(SRCH#13)          --> ORIGINAL \"SRCHPDS\" COD 01/88 SBG\n         DC    A(FINDK#13)         --> ORIGINAL \"FINDKEY\" COD 01/88 SBG\n         DC    A(DOFF#13)          --> IBM DATA FIELDS DESCRIPTORS  SBG\n         SPACE 3                                              01/88 SBG\n************************************************************* 01/88 SBG\n*                                                           * 01/88 SBG\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 01/88 SBG\n*        DSECT.                                             * 01/88 SBG\n*                                                           * 01/88 SBG\n************************************************************* 01/88 SBG\n         SPACE 1                                              01/88 SBG\nID#13    DS    0H                                             01/88 SBG\n         DC    Y(X'6')             VERIFY LOCATION            01/88 SBG\n         DC    Y(ID#13VLN)         VERIFY LENGTH              01/88 SBG\n         SPACE 1                                              01/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#13V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'08/03/87'         00000E+         DC    C'&SYSDATE'\n*                                  00000E          DC    C'08/03/87'\n         DC    C',JDQ1111'         000016          DC    C',JDQ1111'\n         DC    C',NOMAINT'         00001E          DC    C',NOMAINT'\n         DC    C'5665-295'         000026          DC    C'5665-295 COP\n*                                  ************************************\n         SPACE 1                                              01/88 SBG\nID#13VLN EQU   *-ID#13V            VERIFY LENGTH              01/88 SBG\n         SPACE 3                                              01/88 SBG\n************************************************************* 01/88 SBG\n*                                                           * 01/88 SBG\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 01/88 SBG\n*                                                           * 01/88 SBG\n************************************************************* 01/88 SBG\n         SPACE 1                                              01/88 SBG\nSRCH#13  DS    0H                                             01/88 SBG\n         DC    Y(X'538')           VERIFY LOCATION            01/88 SBG\n         DC    Y(SRCH#13L)         VERIFY LENGTH              01/88 SBG\n         SPACE 1                                              01/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#13V DS    0H                  000538 SRCHPDS  EQU   *\n         MVI   X'160'(R13),0       000538          MVI   ERCODE,0\n*                                  00053C          MODESET KEYADDR=EXSK\n         IC    R3,X'60'(,R6)       00053C+         IC    3,EXSKEY\n         SPKA  0(R3)               000540+         SPKA  0(3)\n*                                  ************************************\n         SPACE 1                                              01/88 SBG\nSRCH#13L EQU   *-SRCH#13V          VERIFY LENGTH              01/88 SBG\n         #TEST SIZE=(SRCH#13L,GE,SRCHPOHL)                    01/88 SBG\n         SPACE 3                                              01/88 SBG\n************************************************************* 01/88 SBG\n*                                                           * 01/88 SBG\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 01/88 SBG\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 01/88 SBG\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 01/88 SBG\n*        LABEL \"DFOUND\".                                    * 01/88 SBG\n*                                                           * 01/88 SBG\n************************************************************* 01/88 SBG\n         SPACE 1                                              01/88 SBG\nFINDK#13 DS    0H                                             01/88 SBG\n         DC    Y(X'7FE')           VERIFY LOCATION            01/88 SBG\n         DC    Y(FIND#13L)         VERIFY LENGTH              01/88 SBG\n         SPACE 1                                              01/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007FE FINDKEY  EQU   *\nFIND#13V STCM  R5,7,X'8'(R7)       0007FE          STCM  RY,ADDR3,PDS2T\n         LA    R5,X'E'             000802          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               000806          LCR   RY,RY\n         AH    R5,X'2'(,R10)       000808          AH    RY,BLDELEN\n         BM    X'838'(,R12)        00080C          BM    NOMOVE\n         BXLE  R4,R4,X'814'(R12)   000810          BXLE  RX,RX,EXEC\n*                                  ************************************\n         SPACE 1                                              01/88 SBG\nFIND#13L EQU   *-FIND#13V          VERIFY LENGTH              01/88 SBG\n         #TEST SIZE=(FIND#13L,GE,DFOUNDHL)                    01/88 SBG\n         SPACE 3                                              01/88 SBG\n************************************************************* 01/88 SBG\n*                                                           * 01/88 SBG\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 01/88 SBG\n*        DSECT.                                             * 01/88 SBG\n*                                                           * 01/88 SBG\n************************************************************* 01/88 SBG\n         SPACE 1                                              01/88 SBG\nDOFF#13  DS    0H                                             01/88 SBG\n         SPACE 1                                              01/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              01/88 SBG\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              01/88 SBG\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'161'(R13))      000161 CONCAT#  DS    FL1\n         SPACE 1                                              01/88 SBG\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              01/88 SBG\n         #TEST SIZE=(*-DOFF#13,EQ,FIELDSLN)                   01/88 SBG\n         END   ,                                              11/83 DBC\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DYNABLDX": {"ttr": 2821, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x14\\x97\\x14\\x97\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 5271, "newlines": 5271, "modlines": 0, "user": "FILE407"}, "text": "DYNABLDL TITLE ' '                                            11/83 DBC\n************************************************************* 11/86 SBG\n*  MODIFIED 03/88 TO RUN ON XA OPERATING SYSTEMS.           * 03/88 JW\n*   BY JOHN WILLIAMS OF WESTERN UNION/EDS, MAHWAH, N.J.     * 03/88 JW\n*                                                           * 11/86 SBG\n*  MODIFIED 11/05/86 TO HAVE A NEW FEATURE.  YOU CAN NOW    * 11/86 SBG\n*   EXCLUDE UP TO SIX LINKLIST LIBRARIES FROM THE SEARCH.   * 11/86 SBG\n*   THIS IS DONE BY CONDITIONAL ASSEMBLY.  TO TURN ON THIS  * 11/86 SBG\n*   FEATURE, SET &LIBEX EQUAL TO 'YES'.  FOR MORE DETAILS,  * 11/86 SBG\n*   LOOK FOR THE NAME EXCLLIBS.                             * 11/86 SBG\n*                                                           * 11/86 SBG\n*  IGC018 IS SUCH THAT LLA GETS CONTROL BEFORE DYNABLDL'S   * 03/88 SBG\n*   HOOKS.  THEREFORE YOU MUST STOP LLA WHEN USING          * 03/88 SBG\n*   DYNABLDL FOR XA SYSTEMS.                                * 03/88 SBG\n*                                                           * 11/86 SBG\n*  MUCH THANKS TO DAVE COLE, WHO HELPED ME PUT THIS         * 11/86 SBG\n*   ENHANCEMENT INTO THE PROGRAM, AND TO JEFF BROIDO,       * 11/86 SBG\n*   WHO MADE ME RECOGNIZE THE DESIRABILITY OF THE FEATURE   * 11/86 SBG\n*   TO THE GENERAL PUBLIC.                                  * 11/86 SBG\n*                                                           * 11/86 SBG\n*  S.GOLOB - NEWSWEEK, INC. - LIVINGSTON, N.J. - 11/05/86   * 11/86 SBG\n************************************************************* 11/86 SBG\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n* MODULE NAME = DYNABLDL.                                   * 11/83 DBC\n*                                                           * 11/83 DBC\n* DESCRIPTIVE NAME = DYNAMIC BLDL FACILITY.                 * 11/83 DBC\n*                                                           * 11/83 DBC\n* COPYRIGHT = DAVID B. COLE - 1983.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n* STATUS = RELEASE 85, MODIFICATION LEVEL A.                * 10/85 DBC\n*                                                           * 11/83 DBC\n* FUNCTION = MAINTAIN A DYNAMICALLY UPDATED LIST OF THE     * 11/83 DBC\n*            MOST FREQUENTLY USED BLDL ENTRIES FROM THE     * 11/83 DBC\n*            LINK LIST LIBRARIES.                           * 11/83 DBC\n*                                                           * 11/83 DBC\n*            THIS PROGRAM IS CONCEPTUALLY BASED ON THE      * 11/83 DBC\n*            VARIOUS DYNAMIC BLDL PROGRAMS AVAILABLE FROM   * 11/83 DBC\n*            THE \"CBT MODS\" TAPE. HOWEVER, THIS VERSION IS  * 11/83 DBC\n*            A COMPLETE REWRITE THAT INCORPORATES A SERIES  * 11/83 DBC\n*            OF IMPROVEMENTS LISTED BELOW UNDER \"CHANGE     * 11/83 DBC\n*            HISTORY\".                                      * 11/83 DBC\n*                                                           * 11/83 DBC\n* PROCESSOR = OS/VS ASSEMBLER.                              * 11/83 DBC\n*                                                           * 11/83 DBC\n* ATTRIBUTES = NOT REENTRANT.                               * 11/83 DBC\n*                                                           * 11/83 DBC\n* USER MACROS = #DIE, #ENTER, #EXIT, #PUT, #REGS, #SORT,    * 10/86 BB\n*               #TEST, #USING .                             * 10/86 BB\n*                                                           * 11/83 DBC\n* DEPENDANCIES = STRUCTURE OF IGC018.                       * 11/83 DBC\n*                                                           * 11/83 DBC\n* AUTHOR = DAVID B. COLE (DBC)                              * 11/83 DBC\n*          RR#2 BOX 712                                     * 11/83 DBC\n*          AFTON, VA. 22920                                 * 11/83 DBC\n*                                                           * 05/84 DBC\n*          ADDITIONAL MODIFICATIONS MADE BY:                * 05/84 DBC\n*                                                           * 09/84 DBC\n*          JERRY L. CALLEN (JLC)                            * 05/84 DBC\n*          UNIVERSITY OF CHICAGO                            * 05/84 DBC\n*          COMPUTER CENTER                                  * 05/84 DBC\n*          5640 SOUTH ELLIS AVENUE                          * 05/84 DBC\n*          CHICAGO, IL. 60637                               * 05/84 DBC\n*                                                           * 09/84 DBC\n*          BILL HORTEN (WRH)                                * 09/84 DBC\n*          TENNESSEE EASTMAN COMPANY                        * 09/84 DBC\n*          BOX 1973                                         * 09/84 DBC\n*          KINGSPORT, TN. 37662                             * 09/84 DBC\n*                                                           * 11/83 DBC\n*          JOHN WILLIAMS (JW )                              * 03/88 JRB\n*          ELECTRONIC DATA SYSTEMS CORPORATION              * 03/88 JRB\n*          70 MC KEE DRIVE                                  * 03/88 JRB\n*          MAHWAH, NJ 07430                                 * 03/88 JRB\n*                                                           * 11/83 DBC\n*          SAM GOLOB (SBG)                                  * 03/88 SBG\n*          NEWSWEEK, INCORPORATED                           * 03/88 SBG\n*          333 ROUTE 46 WEST                                * 03/88 SBG\n*          MOUNTAIN LAKES, NJ 07046                         * 03/88 SBG\n*                                                           * 10/90 DBA\n*          DAVID ANDREWS (DBA)                              * 10/90 DBA\n*          A. DUDA AND SONS, INC.                           * 10/90 DBA\n*          1975 W. BROADWAY / P.O. BOX 257                  * 10/90 DBA\n*          OVIEDO, FL  32765                                * 10/90 DBA\n*                                                           * 10/90 DBA\n************************************************************* 11/83 DBC\n         TITLE 'CHANGE HISTORY'                               11/83 DBC\n************************************************************* 10/90 DBA\n*                                                           * 10/90 DBA\n* RELEASE 90A                                               * 10/90 DBA\n*                                                           * 10/90 DBA\n* LAST CHANGE DATE = OCTOBER 9, 1990                        * 10/90 DBA\n*                                                           * 10/90 DBA\n*                  - RECOGNITION CODE ADDED FOR IGC018      * 10/90 DBA\n*                      FMID HDP2240, RMID UY41197           * 10/90 DBA\n*                                                           * 10/90 DBA\n************************************************************* 10/90 DBA\n         EJECT ,                                              10/90 DBA\n************************************************************* 11/83 DBC\n*                                                           * 03/88 JW\n* RELEASE 88A                                               * 03/88 JW\n*                                                           * 03/88 JW\n* LAST CHANGE DATE = MARCH 20,1988                          * 03/88 JW\n*                                                           * 03/88 JW\n*                  - INCLUDE SUPPORT FOR MVS/XA 2.2         * 03/88 JW\n*                    AND NUCLEUS PAGE PROTECTION            * 03/88 JW\n*                  - RECOGNITION CODE ADDED FOR IGC018      * 03/88 JW\n*                      FMID HDP2230, RMID UY06422           * 03/88 JW\n*                                                           * 03/88 JW\n************************************************************* 03/88 JW\n         EJECT ,                                              03/88 JW\n************************************************************* 03/88 SBG\n*                                                           * 03/88 SBG\n* RELEASE 88B                                               * 03/88 SBG\n*                                                           * 03/88 SBG\n* LAST CHANGE DATE = MARCH 23,1988                          * 03/88 SBG\n*                                                           * 03/88 SBG\n*                  - RECOGNITION CODE ADDED FOR IGC018      * 03/88 SBG\n*                      FMID JDP2220, RMID UY02277           * 03/88 SBG\n*                                                           * 03/88 SBG\n************************************************************* 03/88 SBG\n         EJECT ,                                              03/88 SBG\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n* RELEASE 85A                                               * 10/85 DBC\n*                                                           * 10/85 DBC\n* LAST CHANGE DATE = OCTOBER 3, 1985                        * 10/85 DBC\n*                                                           * 10/85 DBC\n*                  - INCLUDE ADDITIONAL VERSION TABLES      * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         EJECT ,                                              10/85 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n* RELEASE 84C                                               * 09/84 DBC\n*                                                           * 09/84 DBC\n* LAST CHANGE DATE = SEPTEMBER 27, 1984                     * 09/84 DBC\n*                                                           * 09/84 DBC\n*                  - INCLUDED ADDITIONAL VERSION TABLES     * 09/84 DBC\n*                    WORKED OUT BY BILL HORTEN OF TENNESSEE * 09/84 DBC\n*                    EASTMAN COMPANY.                       * 09/84 DBC\n*                                                           * 09/84 DBC\n*                  - MODIFIED THE SRCHPDS HOOK TO PROPERLY  * 09/84 DBC\n*                    HANDLE SOME CHANGES IN THE DFP         * 09/84 DBC\n*                    VERSIONS OF IGC018. THESE NEWER        * 09/84 DBC\n*                    VERSIONS WILL SOMETIMES SWITCH TO THE  * 09/84 DBC\n*                    DEB'S PROTECT KEY (INSTEAD OF THE      * 09/84 DBC\n*                    CALLER'S PROTECT KEY) BEFORE STORING   * 09/84 DBC\n*                    THE RETURNED DIRECTORY INFORMATION.    * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         EJECT ,                                              09/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n* RELEASE 84B                                               * 08/84 DBC\n*                                                           * 08/84 DBC\n* LAST CHANGE DATE = AUGUST 27,  1984                       * 08/84 DBC\n*                                                           * 08/84 DBC\n*                  - SUPPORT FOR ADDITIONAL VERSIONS OF     * 08/84 DBC\n*                    IGC018 (VERSIONS 7 AND 8) HAS BEEN     * 08/84 DBC\n*                    ADDED. THANKS TO VAL PITCHETT OF STATE * 08/84 DBC\n*                    FARM INSURANCE FOR HELP WITH THIS.     * 08/84 DBC\n*                                                           * 08/84 DBC\n*                  - THE DYNABLDL REPORT NOW FLAGS THOSE    * 08/84 DBC\n*                    LOAD MODULES THAT ARE REENTRANT. THIS  * 08/84 DBC\n*                    WILL BE HELPFUL IN DETERMINING WHICH   * 08/84 DBC\n*                    MODULES MIGHT BE BETTER PLACED IN      * 08/84 DBC\n*                    SYS1.LPALIB.                           * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         EJECT ,                                              08/84 DBC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n* RELEASE 84A                                               * 05/84 DBC\n*                                                           * 04/84 JLC\n* LAST CHANGE DATE = MAY 29, 1984                           * 05/84 DBC\n*                                                           * 04/84 JLC\n*                  - \"TYPO\" TYPE BUGS FIXED AT LABELS       * 04/84 JLC\n*                    \"ENTCNT\" AND \"SIZESCAN\". (BY CHANCE    * 04/84 JLC\n*                    THE BUGS HAD NO FUNCTIONAL EFFECT).    * 04/84 JLC\n*                                                           * 04/84 JLC\n*                  - SUPPORT ADDED FOR THE UZ61167 LEVEL OF * 04/84 JLC\n*                    IGC018.                                * 04/84 JLC\n*                                                           * 05/84 DBC\n*                  - SUPPORT FOR A SECOND VARIATION OF THE  * 05/84 DBC\n*                    UZ61168 LEVEL OF IGC018 ADDED.         * 05/84 DBC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         EJECT ,                                              05/84 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n* RELEASE 83.A                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n* LAST CHANGE DATE - NOVEMBER 15, 1983                      * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - THIS VERSION OF DYNABLDL IS CAPABLE OF * 11/83 DBC\n*                    RECOGNIZING AND HOOKING INTO ANY OF    * 11/83 DBC\n*                    SEVERAL VERSIONS OF IBM'S IGC018. THE  * 11/83 DBC\n*                    RECOGNITION CODE IS TABLE DRIVEN, AND  * 11/83 DBC\n*                    ADDITIONAL RECOGNITION TABLES CAN BE   * 11/83 DBC\n*                    FAIRLY EASILY ADDED.                   * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - THE RECOGNITION TABLES ARE             * 11/83 DBC\n*                    COMPREHENSIVE. EACH TABLE CONSISTS OF  * 11/83 DBC\n*                    FOUR PARTS. THE FIRST, LABELED \"ID#\"   * 11/83 DBC\n*                    (WHERE \"#\" REPRESENTS AN ARBITRARY     * 11/83 DBC\n*                    UNIQUE NUMERIC SUFIX), MUST MATCH AN   * 11/83 DBC\n*                    IGC018'S IDENTIFICATION HEADER. THIS   * 11/83 DBC\n*                    IS USED TO DISTINGUISH ONE IGC018 FROM * 11/83 DBC\n*                    ANOTHER. THE SECOND AND THIRD PARTS,   * 11/83 DBC\n*                    LABELED \"SRCHPO#\" AND \"DFOUND#\", MUST  * 11/83 DBC\n*                    MATCH THE TWO LOCATIONS IN IGC018      * 11/83 DBC\n*                    WHERE DYNABLDL INSERTS ITS JUMPS TO    * 11/83 DBC\n*                    ITS INTERCEPT ROUTINES. THE FOURTH     * 11/83 DBC\n*                    PART CONSISTS OF A LIST OF DESCRIPTORS * 11/83 DBC\n*                    OF ALL IBM PRIVATE DATA FIELDS         * 11/83 DBC\n*                    REFERENCED BY THE INTERCEPT ROUTINES.  * 11/83 DBC\n*                    MOST OF THE DESCRIPTORS ARE S-CONS     * 11/83 DBC\n*                    GIVING THE BASE REGISTER BY WHICH      * 11/83 DBC\n*                    IGC018 REFERENCES A FIELD AND THE      * 11/83 DBC\n*                    DISPLACEMENT OF THAT FIELD INTO THE    * 11/83 DBC\n*                    IBM PRIVATE CONTROL BLOCK. THE         * 11/83 DBC\n*                    DYNABLDL INITIALIZATION ROUTINE USES   * 11/83 DBC\n*                    THIS LIST TO DYNAMICALLY MODIFY ALL    * 11/83 DBC\n*                    MACHINE INSTRUCTIONS IN THE TWO        * 11/83 DBC\n*                    INTERCEPT ROUTINES SO THAT THEY        * 11/83 DBC\n*                    CORRECTLY MATCH THE PARTICULAR VERSION * 11/83 DBC\n*                    OF IGC018 BEING HOOKED INTO. NOTE, THE * 11/83 DBC\n*                    TWO IBM PRIVATE CONTROL BLOCKS         * 11/83 DBC\n*                    INVOLVED HERE ARE THE \"BLDL WORK AREA\" * 11/83 DBC\n*                    AND BLDL'S \"SVRB EXTENDED SAVE AREA\".  * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - ALL ROUTINES RELATED TO DYNABLDL HAVE  * 11/83 DBC\n*                    BEEN CONSOLIDATED INTO A SINGLE        * 11/83 DBC\n*                    PROGRAM. THIS RELIEVES THE POTENTIAL   * 11/83 DBC\n*                    FOR ERRORS ARISING FROM PARTIAL        * 11/83 DBC\n*                    MODIFICATIONS.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - THE DYNAMIC BLDL TABLE IS NOW          * 11/83 DBC\n*                    MAINTAINED BY A STRAIGHT FORWARD       * 11/83 DBC\n*                    \"LEAST RECENTLY USED\" ALGORITHM. THE   * 11/83 DBC\n*                    PREVIOUSLY USED PERIODIC SORTS AND     * 11/83 DBC\n*                    PARTIAL REFILL METHOD HAS BEEN         * 11/83 DBC\n*                    DISCARDED.                             * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - PRIOR VERSIONS OF DYNABLDL DID NOT     * 11/83 DBC\n*                    INTERCEPT LINKLIST BLDL REQUESTS IN    * 11/83 DBC\n*                    WHICH THE USER REQUESTED TWO OR MORE   * 11/83 DBC\n*                    NAMES. FURTHER, PRIOR DYNABLDLS DID    * 11/83 DBC\n*                    NOT COUNT SUCH IGNORED REQUESTS AS     * 11/83 DBC\n*                    \"MISSES\". CONSEQUENTLY, THE \"HIT RATE\" * 11/83 DBC\n*                    REPORTED BACK WAS INCORRECT. (IT WAS   * 11/83 DBC\n*                    TOO HIGH). THIS VERSION OF DYNABLDL    * 11/83 DBC\n*                    DOES HANDLE MULTI-ENTRY BLDL REQUESTS, * 11/83 DBC\n*                    AND MY EXPERIENCE HAS BEEN THAT THE    * 11/83 DBC\n*                    TRUE HIT RATE HAS RISEN FROM ABOUT 80% * 11/83 DBC\n*                    TO BETTER THAN 95%.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - THE REPORT FUNCTION NOW PRODUCES THREE * 11/83 DBC\n*                    LISTINGS OF THE DYNAMIC TABLE (PRINTED * 11/83 DBC\n*                    IN 3-COLUMN FORMAT USING LESS THAN 79  * 11/83 DBC\n*                    CHARACTERS PER LINE - SUITABLE FOR     * 11/83 DBC\n*                    3270 DISPLAY). ONE LISTING IS SORTED   * 11/83 DBC\n*                    BY NAME; A SECOND IS SORTED BY HITS    * 11/83 DBC\n*                    COUNT; THE THIRD IS SORTED BY L.R.U.   * 11/83 DBC\n*                    CHARACTERISTIC.                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*                  - THE DYNABLDL STOP FUNCTION NOW         * 11/83 DBC\n*                    COMPLETELY REMOVES DYNABLDL FROM THE   * 11/83 DBC\n*                    SYSTEM RATHER THAN JUST DISABLING THE  * 11/83 DBC\n*                    HOOK ROUTINES.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         TITLE 'DOCUMANTATION'                                11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*              INSTALLATION GUIDE                           * 11/83 DBC\n*                                                           * 11/83 DBC\n* USE THE FOLLOWING STEPS TO INSTALL DYNABLDL.              * 11/83 DBC\n*                                                           * 11/83 DBC\n* EXAMINE THE MICROFICHE FOR THE VERSION OF IGC018 (THE     * 11/83 DBC\n* BLDL SVC ROUTINE) THAT EXISTS ON YOUR SYSTEM. IN          * 11/83 DBC\n* PARTICULAR, EXAMINE THE FOLLOWING.                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE MODULE IDENTIFICATION FIELDS LOCATED NEAR    * 11/83 DBC\n*          THE START OF IGC018. THIS IS USED BY DYNABLDL TO * 11/83 DBC\n*          IDENTIFY THE VERSION OF IGC018 THAT EXISTS IN    * 11/83 DBC\n*          YOUR SYSTEM.                                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE CODE LOCATED AT IGC018'S LABEL \"SRCHPDS\".    * 11/83 DBC\n*          THIS IS WHERE DYNABLDL INSERTS ITS JUMP TO ITS   * 11/83 DBC\n*          DYNAMIC TABLE LOOKUP ROUTINE.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE CODE LOCATED AT ICG018'S LABEL \"DFOUND\" OR   * 10/85 DBC\n*          \"FINDKEY\" (DEPENDING UPON THE VERSION IF ICG018  * 10/85 DBC\n*          THAT YOU HAVE). THIS IS WHERE DYNABLDL INSERTS   * 10/85 DBC\n*          ITS JUMP TO ITS DYNAMIC TABLE UPDATE ROUTINE.    * 10/85 DBC\n*                                                           * 11/83 DBC\n*        - THE BASE REGISTER (USUALLY R13) AND              * 11/83 DBC\n*          DISPLACEMENTS OF THE FOLLOWING FIELDS IN THE     * 11/83 DBC\n*          \"WORKAREA\" DSECT.                                * 11/83 DBC\n*              RDAREA                                       * 11/83 DBC\n*              CONCAT#                                      * 11/83 DBC\n*          THESE ARE FIELDS REFERENCED BY THE INTERCEPT     * 11/83 DBC\n*          ROUTINES.                                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE BASE REGISTER (USUALLY R6) AND DISPLACEMENTS * 09/84 DBC\n*          OF THE FOLLOWING FIELDS IN THE SVRB EXTENDED     * 09/84 DBC\n*          SAVE AREA. (REMEMBER THAT AN ASSEMBLY XREF FOR   * 09/84 DBC\n*          IGC018 WILL LIST THE VALUES OF THE FOLLOWING     * 09/84 DBC\n*          LABELS AT +X'40' GREATER THAT THEIR TRUE OFFSETS * 09/84 DBC\n*          BECAUSE OF THE PRESENCE OF A 64-BYTE LONG PREFIX * 10/85 DBC\n*          SECTION IN THE RB DSECT MAP).                    * 09/84 DBC\n*              EXSKEY                                       * 09/84 DBC\n*              EXSFLG                                       * 09/84 DBC\n*              EXSBLDL (FLAG BIT)                           * 09/84 DBC\n*          THESE FIELDS AND FLAGS ARE REFERENCES BY THE     * 09/84 DBC\n*          INTERCEPT ROUTINES.                              * 09/84 DBC\n*                                                           * 11/83 DBC\n*        - THE REGISTER (USUALLY R12 AND NAMED \"RBASE\")     * 11/83 DBC\n*          USED AS IGC018'S PROGRAM BASE, AND ITS RELATIVE  * 11/83 DBC\n*          BASE ADDRESS (USUALLY X'2').                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE BASE REGISTERS USED BY IGC018 TO POINT TO:   * 11/83 DBC\n*              - THE DCB OF THE LIBRARIES CURRENTLY BEING   * 11/83 DBC\n*                SEARCHED (USUALLY R11 AND NAMED \"RDCB\"),   * 11/83 DBC\n*              - THE USER'S PARAMETER LIST THAT WAS PASSED  * 11/83 DBC\n*                TO THE BLDL ROUTINE (USUALLY R10 AND NAMED * 11/83 DBC\n*                \"RLIST\"),                                  * 11/83 DBC\n*              - THE PDS DIRECTORY ENTRY FOUND BY IGC018 AT * 11/83 DBC\n*                THE TIME THAT \"DFOUND\" IS CALLED (USUALLY  * 11/83 DBC\n*                R8 AND NAMED \"RPDS1\").                     * 11/83 DBC\n*                                                           * 11/83 DBC\n* EXAMINE THE VERSION TABLES ALREADY EXISTING IN THIS       * 11/83 DBC\n* DYNABLDL TO SEE IF ANY OF THEM MATCH YOUR VERSION OF      * 11/83 DBC\n* IGC018. IF SO, THEN DYNABLDL WILL FUNCTION ON YOUR SYSTEM * 11/83 DBC\n* WITHOUT MODIFICATION. IF NOT, THEN YOU WILL HAVE TO ADD A * 11/83 DBC\n* VERSION TABLE TO DYNABLDL DESCRIBING YOUR IGC018.  UNLESS * 11/83 DBC\n* THE LOGIC OF IGC018 CHANGES DRASTICLY, CREATING A NEW     * 11/83 DBC\n* VERSION TABLE SHOULD BE ALL THAT YOU NEED TO DO; YOU      * 11/83 DBC\n* SHOULD NOT HAVE TO CHANGE ANYTHING ELSE IN DYNABLDL.      * 11/83 DBC\n*                                                           * 11/83 DBC\n* NOTE, AN EASY TEST WOULD BE TO SIMPLY RUN DYNABLDL AS     * 11/83 DBC\n* RECEIVED. IF IT RECOGNIZES YOUR IGC018, THEN IT WILL RUN. * 11/83 DBC\n* IF IT CANNOT RECOGNIZE YOUR IGC018, THEN IT WILL SAY SO   * 11/83 DBC\n* AND TERMINATE.                                            * 11/83 DBC\n*                                                           * 11/83 DBC\n* IF YOU NEED TO ADD A NEW VERSION TABLE, THEN DO THE       * 11/83 DBC\n* FOLLOWING:                                                * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - USING THE INFORMATION GATHERED BY YOUR           * 11/83 DBC\n*          EXAMINATION OF IGC018, CREATE A NEW VERSION      * 11/83 DBC\n*          TABLE MODELED ON THE VERSION TABLES ALREADY      * 11/83 DBC\n*          PROVIDED. BE SURE TO INCLUDE A 4-ELEMENT VECTOR  * 11/83 DBC\n*          POINTING TO THE FOUR PARTS OF YOUR NEW VERSION   * 11/83 DBC\n*          TABLE.                                           * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - ADD TO THE \"VERSIONS\" VECTOR AN ENTRY POINTING   * 11/83 DBC\n*          TO YOUR 4-ELEMENT VECTOR.                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - REASSEMBLE DYNABLDL USING \"SYS1.MACLIB\",         * 11/83 DBC\n*          \"SYS1.AMODGEN\", AND THE MACLIB PROVIDED WITH THE * 11/83 DBC\n*          DYNABLDL DISTRIBUTION.                           * 11/83 DBC\n*                                                           * 11/83 DBC\n* LINK EDIT DYNABLDL INTO A LINKLIST LIBRARY OR SOME OTHER  * 11/83 DBC\n* AUTHORIZED LIBRARY. NOTE, ALTHOUGH THE INTERCEPT ROUTINES * 11/83 DBC\n* INSERTED INTO IGC018 ARE REENTRANT, DYNABLDL ITSELF IS    * 11/83 DBC\n* NOT. THEREFORE, DYNABLDL SHOULD NOT BE PLACED IN          * 11/83 DBC\n* SYS1.LPALIB.                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n* CREATE THE FOLLOWING PROC NAMED DYNABLDL:                 * 11/83 DBC\n*                                                           * 11/83 DBC\n*        //IEFPROC EXEC PGM=DYNABLDL,REGION=100K            * 11/83 DBC\n*        //STEPLIB  DD  DSN= --- (ONLY IF NOT IN LINKLIST)  * 11/83 DBC\n*        //IEFRDER  DD  DDNAME=SYSPRINT                     * 11/83 DBC\n*        //SYSPRINT DD  SYSOUT=A (USED FOR REPORT FUNCTION) * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         EJECT ,                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*              USER'S GUIDE                                 * 11/83 DBC\n*                                                           * 11/83 DBC\n* THE FOLLOWING ASSUMES THAT DYNABLDL HAS BEEN INSTALLED AS * 11/83 DBC\n* DESCRIBED ABOVE.                                          * 11/83 DBC\n*                                                           * 11/83 DBC\n* TO START DYNABLDL USE THE FOLLOWING OPERATOR COMMAND.     * 11/83 DBC\n*        S DYNABLDL                -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=START     -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=S                                  * 11/83 DBC\n* DYNABLDL WILL (A) ATTEMPT TO RECOGNIZE THE VERSION OF     * 11/83 DBC\n* IGC018 RUNNING ON YOUR SYSTEM, (B) DETERMINE WHETHER OR   * 11/83 DBC\n* DYNAMIC BLDL PROCESSING IS ALREADY UP AND RUNNING,        * 11/83 DBC\n* (C) GENERATE INTERCEPT ROUTINES IN FIXED GLOBAL MEMORY,   * 11/83 DBC\n* (D) INSERT INTO IGC018 JUMPS TO THE INTERCEPT ROUTINES,   * 11/83 DBC\n* AND (E) TERMINATE LEAVING BEHIND THE ENABLED INTERCEPT    * 11/83 DBC\n* ROUTINES.                                                 * 11/83 DBC\n*                                                           * 11/83 DBC\n* TO STOP DYNABLDL USE THE FOLLOWING OPERATOR COMMAND.      * 11/83 DBC\n*        S DYNABLDL,PARM=STOP      -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=P                                  * 11/83 DBC\n* DYNABLDL WILL REMOVE THE HOOKS FROM IGC018 (BY RESTORING  * 11/83 DBC\n* THE ORIGINAL CODE) AND FREE THE GLOBAL MEMORY CONTAINING  * 11/83 DBC\n* THE INTERCEPT ROUTINES.                                   * 11/83 DBC\n*                                                           * 11/83 DBC\n* A DYNABLDL ACTIVITY REPORT CAN BE GENERATED ONLY WHILE    * 11/83 DBC\n* DYNABLDL PROCESSING IS ACTIVE. TO GENERATE AN ACTIVITY    * 11/83 DBC\n* REPORT, USE THE FOLLOWING OPERATOR COMMAND.               * 11/83 DBC\n*        S DYNABLDL,PARM=REPORT    -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=R                                  * 11/83 DBC\n*                                                           * 11/83 DBC\n* TO GENERATE ONLY AN ACTIVITY SUMMARY MESSAGE (WTO), USE   * 11/83 DBC\n* THE FOLLOWING OPERATOR COMMAND.                           * 11/83 DBC\n*        S DYNABLDL,DSN=NULLFILE,PARM=REPORT  -- OR --      * 11/83 DBC\n*        S DYNABLDL,DSN=NULLFILE,PARM=R                     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         TITLE 'IHASVC MACRO'                                 11/83 DBC\n         MACRO                                                11/83 DBC\n         IHASVC &D                                            11/83 DBC\nSVC      DSECT ,                                              11/83 DBC\nSVCENTRY DS    0XL8                SVC TABLE ENTRY            11/83 DBC\nSVCEP    DS    A                   A(SVC ROUTINE)             11/83 DBC\nSVCATTR1 DS    BL2                 ATTRIBUTES                 11/83 DBC\nSVCTP1   EQU   B'00000000'         TYPE 0                     11/83 DBC\nSVCTP2   EQU   B'10000000'         TYPE 2                     11/83 DBC\nSVCTP34  EQU   B'11000000'         TYPE 3/4                   11/83 DBC\nSVCTP6   EQU   B'00100000'         TYPE 6                     11/83 DBC\nSVCAPF   EQU   B'00001000'         CALLER MUST BE AUTHORIZED  11/83 DBC\nSVCESR   EQU   B'00000100'         \"ESR\" SVC                  11/83 DBC\nSVCNP    EQU   B'00000010'         NON-PREEMPTIVE SVC         11/83 DBC\nSVCLOCKS DS    BL2                 LOCK ATTRIBUTES            11/83 DBC\nSVCLL    EQU   B'10000000'         LOCAL LOCK                 11/83 DBC\nSVCCMS   EQU   B'01000000'         CMS LOCK                   11/83 DBC\nSVCOPT   EQU   B'00100000'         OPT LOCK                   11/83 DBC\nSVCALLOC EQU   B'00010000'         SALLOC LOCK                11/83 DBC\nSVCDISP  EQU   B'00001000'         DISP LOCK                  11/83 DBC\n         MEND                                                 11/83 DBC\n         TITLE '@ZAP MACRO'                                   11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        THIS MACRO BUILDS A ROUTINE TO DYNAMICALLY ADJUST  * 11/83 DBC\n*        AT EXECUTION TIME THOSE MACHINE INSTRUCTIONS THAT  * 11/83 DBC\n*        REFERENCE PRIVATE IBM DATA FIELDS.                 * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MACRO                                                11/83 DBC\n&N       @ZAP  &X                                             11/83 DBC\n         GBLA  &@ZAP#,&@ZCNT,&@ZAPFO(1024)                    11/83 DBC\n         GBLC  &@ZAPZN(1024),&@ZAPFN(1024)                    11/83 DBC\n         LCLA  &F#,&FO,&SIGN                                  11/83 DBC\n         LCLC  &ZN,&CN,&FN,&NN,&VALUE,&C1                     11/83 DBC\n         AIF   ('&X' EQ '').DUMP                              11/83 DBC\n.*                                                            11/83 DBC\n&@ZAP#   SETA  &@ZAP#+1                                       11/83 DBC\n&ZN      SETC  'ZAP&@ZAP#'                                    11/83 DBC\n         AIF   ('&N' EQ '').GOTZN                             11/83 DBC\n&ZN      SETC  '&N'                                           11/83 DBC\n.GOTZN   ANOP                                                 11/83 DBC\n&ZN      DS    0H                                             11/83 DBC\n.*                                                            11/83 DBC\n&F#      SETA  0                                              11/83 DBC\n.LP1     AIF   (&F# GE N'&SYSLIST).END1                       11/83 DBC\n&F#      SETA  &F#+1                                          11/83 DBC\n&@ZCNT   SETA  &@ZCNT+1                                       11/83 DBC\n&@ZAPZN(&@ZCNT) SETC '&ZN'                                    11/83 DBC\n&@ZAPFN(&@ZCNT) SETC '&SYSLIST(&F#,1)'                        11/83 DBC\n&VALUE   SETC  '&SYSLIST(&F#,2)'                              11/83 DBC\n&C1      SETC  '&VALUE'(1,1)                                  11/83 DBC\n&SIGN    SETA  1                                              11/83 DBC\n         AIF   ('&C1' NE '+' AND '&C1' NE '-').GOTNUM         11/83 DBC\n&VALUE   SETC  '&VALUE'(2,K'&VALUE-1)                         11/83 DBC\n         AIF   ('&C1' EQ '+').GOTNUM                          11/83 DBC\n&SIGN    SETA  -1                                             11/83 DBC\n.GOTNUM  ANOP                                                 11/83 DBC\n&@ZAPFO(&@ZCNT) SETA &SIGN*&VALUE                             11/83 DBC\n         AGO   .LP1                                           11/83 DBC\n.*                                                            11/83 DBC\n.END1    MEXIT                                                11/83 DBC\n.*                                                            11/83 DBC\n.*                                                            11/83 DBC\n.*                                                            11/83 DBC\n.DUMP    ANOP                                                 11/83 DBC\n&NN      SETC  '&N'                                           11/83 DBC\n&F#      SETA  0                                              11/83 DBC\n.LP2     AIF   (&F# GE &@ZCNT).END2                           11/83 DBC\n&F#      SETA  &F#+1                                          11/83 DBC\n         AIF   ('&ZN' EQ '&@ZAPZN(&F#)').NSPACE               11/83 DBC\n         SPACE 1                                              11/83 DBC\n&ZN      SETC  '&@ZAPZN(&F#)'                                 11/83 DBC\n.NSPACE  ANOP                                                 11/83 DBC\n&FN      SETC  '&@ZAPFN(&F#)'                                 11/83 DBC\n&FO      SETA  &@ZAPFO(&F#)                                   11/83 DBC\n&C1      SETC  '+'                                            11/83 DBC\n         AIF   (&FO GE 0).GOTSIGN                             11/83 DBC\n&C1      SETC  '-'                                            11/83 DBC\n.GOTSIGN ANOP                                                 11/83 DBC\n         AIF   (&FO/2*2 NE &FO).IMED                          11/83 DBC\n&NN      LH    R0,&ZN&C1&FO                                   11/83 DBC\n&NN      SETC  ''                                             11/83 DBC\n         AH    R0,&FN                                         11/83 DBC\n         STH   R0,&ZN&C1&FO                                   11/83 DBC\n         AGO   .LP2                                           11/83 DBC\n.IMED    ANOP                                                 11/83 DBC\n&NN      OC    &ZN&C1&FO.(1),&FN                              11/83 DBC\n&NN      SETC  ''                                             11/83 DBC\n         AGO   .LP2                                           11/83 DBC\n.*                                                            11/83 DBC\n.END2    ANOP                                                 11/83 DBC\n&@ZCNT   SETA  0                                              11/83 DBC\n         MEND                                                 11/83 DBC\n         TITLE 'IBM CONTROL BLOCK MAPS'                       11/83 DBC\n         PUNCH '         SETCODE AC(1)'                       11/83 DBC\n         SPACE 3                                              11/83 DBC\nDYNABLDL CSECT ,                                              11/83 DBC\n         PRINT NOGEN                                          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CVT = COMMUNICATIONS VECTOR TABLE                  * 11/83 DBC\n*        CVTFIX = PREFIX AND BASIC SECTIONS DSECT           * 11/83 DBC\n*        CVTFIX = PREFIX SECTION BASE                       * 11/83 DBC\n*        CVTMAP = BASIC SECTION BASE                        * 11/83 DBC\n*        CVTXTNT1 = OS COMMON EXTENSION DSECT AND BASE      * 11/83 DBC\n*        CVTXTNT2 = VS1/VS2 COMMON EXTENSION DSECT AND BASE * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CVT   DSECT=YES,PREFIX=YES,LIST=YES                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DCB = DATA CONTROL BLOCK                           * 11/83 DBC\n*        IHADCB = DSECT AND BASE                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DCBD  DSORG=(PS,PO)                                  11/83 DBC\n         SPACE 3                                              08/84 DBC\n************************************************************* 08/84 DBC\n*        PDS2 = PARTITIONED DATASET DIRECTORY ENTRIES FOR   * 08/84 DBC\n*               LOAD MODULES AS SHOWN BY THE BLDL SVC.      * 08/84 DBC\n*        PDS2 = DSECT AND BASE                              * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\n         IHAPDS ,                                             08/84 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SCVT = SECONDARY COMMUNICATIONS VECTOR TABLE       * 11/83 DBC\n*        SCVTSECT = DSECT AND BASE                          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         IHASCVT LIST=YES                                     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SVCTABLE = SVC TABLE ENTRY                         * 11/83 DBC\n*        SVC = DSECT AND BASE                               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         IHASVC ,                                             11/83 DBC\nSVCENTLN EQU   *-SVC               TABLE ENTRY LENGTH         11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        STANDARD REGISTER NAMES                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #REGS R,                  STANDARD REGISTER NAMES    11/83 DBC*\n               (BLDLBASE,R10),     IGC018 LOCATION POINTER    11/83 DBC*\n               (VERSBASE,R9),      SPECIFIC VERSION VECTOR PT 11/83 DBC*\n               (TABLBASE,R8)       HOOK ROUTINES AREA BASE    11/83 DBC\n         SPACE 1                                              11/83 DBC\nBLDLSVC  EQU   18                  BLDL SVC NUMBER            11/83 DBC\nENTRYCNT EQU   512   WAS 256.      DYNAMIC LIST SIZE          03/88 JRB\nCLOKSHFT EQU   10                  A SHIFT VALUE FOR          11/83 DBC\n*                                  SELECTING BITS 10-41 OF    11/83 DBC\n*                                  THE TOD CLOCK. NOTE, THESE 11/83 DBC\n*                                  ARE THE SAME BITS USED BY  11/83 DBC\n*                                  THE SRM FOR ITS INTERVAL   11/83 DBC\n*                                  TIMINGS.                   11/83 DBC\nLINKSVC  EQU   1                   BLDL'S SIGNAL RETURNED TO  11/83 DBC\n*                                  THE USER THAT THE          11/83 DBC\n*                                  DIRECTORY ENTRY WAS FOUND  11/83 DBC\n*                                  IN EITHER SVCLIB OR A      11/83 DBC\n*                                  LINKLIST LIBRARY.          11/83 DBC\nLEN3270  EQU   79                  LENGTH OF A 3270 DISPLAY   11/83 DBC\n*                                  LINE                       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  SUBAD=PUTWTO,MF=INIT                           11/83 DBC\n         SPACE 3                                              11/83 DBC\n         PRINT ON,GEN,NODATA                                  11/83 DBC\n         EJECT ,                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        BLDLIST -- THIS DSECT MAPS PLIST HEADER FIELDS     * 11/83 DBC\n*        THAT A USER OF THE BLDL SVC PASSES TO BLDL.        * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nBLDLIST  DSECT ,                   BLDL PLIST HEADER          11/83 DBC\nBLDENTS  DS    H                   NUMBER OF ELEMENTS BEING   11/83 DBC\n*                                  PASSED                     11/83 DBC\nBLDELEN  DS    H                   THE LENGTH OF EACH ELEMENT 11/83 DBC\nBLDENT   DS    0C                  THE START OF THE FIRST     11/83 DBC\n*                                  ELEMENT                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        PDS1 -- THIS DSECT MAPS A PDS DIRECTORY ENTRY.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPDS1     DSECT ,                   PDS DIRECTORY ENTRY        11/83 DBC\nPDS1NAME DS    CL8                 MEMBER NAME                11/83 DBC\nPDS1TTRP DS    XL3                 MEMBER'S TTR IN THE DASD   11/83 DBC\n*                                  LIBRARY                    11/83 DBC\nPDS1INDC DS    B                   FLAGS & L'UDATA/2          11/83 DBC\nPDS1LUSR EQU   B'00011111'         LENGTH BITS                11/83 DBC\nPDS1USRD DS    0X                  USER DATA FIELDS           11/83 DBC\n         TITLE 'DYNAHEAD DSECT'                               11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        DYNAHEAD -- THIS DSECT MAPS THE DYNAMIC AREA       * 11/83 DBC\n*        DESCRIPTOR TABLE.                                  * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNAHEAD DSECT ,                                              11/83 DBC\nDHID     DC    CL8'DYNAHEAD'       ID FIELD                   11/83 DBC\nAREA     DC    A(DYNAHEAD)         A(DYNA AREA)               11/83 DBC\nAREASPLN DS    A                   AREA'S SUBPOOL AND LENGTH  11/83 DBC\nSRCHPOPT DS    A                   A(SRCHPDS HOOK ROUTINE)    11/83 DBC\nDFOUNDPT DS    A                   A(DFOUND HOOK ROUTINE)     11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNAFIRS DC    A(*-*)            | --> FIRST DYNALIST ENTRY   11/83 DBC\nDYNAELEN DC    A(DYNLLEN)        | L' EACH DYNLLIST ENTRY     11/83 DBC\nDYNALAST DC    A(*-*+(ENTRYCNT-1)*DYNLLEN) --> LAST ENTRY     11/83 DBC\nDYNACLOK DS    F                   STARTUP TIME (BITS 10-41)  11/83 DBC\nDYNAHITS DC    F'0'                LIST HITS                  11/83 DBC\nDYNAMISS DC    F'0'                LIST MISSES                11/83 DBC\nDYNADDED DC    F'0'                NAMES ADDED TO LIST        11/83 DBC\n*                                  (INCLUDING STEALS)         11/83 DBC\nDHEADLEN EQU   *-DYNAHEAD          L'HEADER                   11/83 DBC\n         TITLE 'DYNL DSECT'                                   11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        DYNL -- THIS DSECT MAPS A DYNAMIC BLDL LIST ENTRY. * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNL     DSECT ,                                              11/83 DBC\nDYNLLRU# DS    F                   L.R.U. ALGORYTHM CONTROL   11/83 DBC\nDYNLHITS DS    F                   HIT COUNT                  11/83 DBC\nDYNLCLOK DS    F                   ENTRY CREATION TIME        11/83 DBC\nDYNLELEN DS    H                   L'DIRECTORY ENTRY IN THIS  11/83 DBC\n*                                  SLOT                       11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        GENERAL FORMAT PDS DIRECTORY ENTRY                 * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDENT     DS    0D                                             11/83 DBC\nDENTNAME DS    CL8                 MEMBER NAME. NOTE, THIS    11/83 DBC\n*                                  FIELD MUST BE DWORD        11/83 DBC\n*                                  ALIGNED DUE TO A \"CDS\"     11/83 DBC\n*                                  INSTRUCTION THAT IS ISSUED 11/83 DBC\n*                                  AGAINST IT                 11/83 DBC\nDYNLLOCK EQU   DENTNAME+3-DENTNAME LOCAL CONTROL LOCK BYTE    11/83 DBC\nUNLOCKED EQU   C' '                LOCAL CONTROL LOCK FLAG    11/83 DBC\nDENTTTRP DS    XL3                 MEMBER'S TTR IN THE DASD   11/83 DBC\n*                                  LIBRARY                    11/83 DBC\nDENTCNCT DS    FL1                 LIBRARY CONCATENATION      11/83 DBC\n*                                  INDEX                      11/83 DBC\nDENTLIBF DC    AL1(LINKSVC)        ORIGINATING LIBRARY TYPE   11/83 DBC\n*                                  ALWAYS \"LINKLIST LIB\")     11/83 DBC\nDENTINDC DS    B                   FLAGS & L'UDATA/2          11/83 DBC\nDENTLUSR EQU   B'00011111'         LENGTH BITS                11/83 DBC\nDENTUSRD DS    XL(DENTLUSR*2)      USER DATA (MAX LENGTH)     11/83 DBC\nDENTLEN  EQU   *-DENT              MAX D'ENTRY LENGTH         11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNLEND  DS    0D                  ALIGNMENT                  11/83 DBC\nDYNLLEN  EQU   DYNLEND-DYNL        L'DYNAMIC BLDL LIST ENTRY  11/83 DBC\n         TITLE 'IGC018 DSECT'                                 11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        IGC018 -- THIS IS A DUMMY DSECT USED SIMPLY TO     * 11/83 DBC\n*        SHOW WHERE, IN THE CODE, \"BLDLBASE\" IS LOADED AND  * 11/83 DBC\n*        WHERE IT IS NOT.                                   * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nIGC018   DSECT ,                                              11/83 DBC\n         TITLE 'VERSION DSECT'                                11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        VERSION -- THIS DSECT MAPS A VECTOR CONTAINING     * 11/83 DBC\n*        POINTERS TO THE FOUR PARTS OF A VERSION TABLE.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSION  DSECT ,                                              11/83 DBC\nIDVV     DS    A                   --> VERSION VERIFIER       11/83 DBC\nSRCHPOVV DS    A                   --> ORIGINAL \"SRCHPDS\" COD 11/83 DBC\nDFOUNDVV DS    A                   --> ORIGINAL \"DFOUND\" CODE 11/83 DBC\nDATAOFFS DS    A                   --> IBM DATA FIELDS DESCRIPTORS  DBC\n         TITLE 'ORIGINAL DSECT'                               11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        ORIGINAL -- THIS DSECT MAPS CONTROL BLOCKS (PARTS  * 11/83 DBC\n*        ONE, TWO, AND THREE OF THE VARIOUS VERSION TABLES) * 11/83 DBC\n*        THAT DESCRIBE SECTIONS OF ORIGINAL CODE IN IGC018. * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nORIGINAL DSECT ,                                              11/83 DBC\nORIGLOC  DS    Y                   OFFSET TO ORIGINAL CODE'S LOCATION C\nORIGLEN  DS    Y                   ORIGINAL CODE'S LENGTH     11/83 DBC\nORIGCODE DS    0X                  ORIGINAL CODE              11/83 DBC\n         TITLE 'FIELDS DSECT'                                 11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        FIELDS -- THIS DSECT MAPS TABLES THAT DESCRIBE IBM * 11/83 DBC\n*        PRIVATE DATA FIELDS. EACH ENTRY CORRESPONDS EITHER * 11/83 DBC\n*        TO A DATA FIELD OR TO IMMEDIATE DATA THAT DYNABLDL * 11/83 DBC\n*        REFERENCES BUT THAT IS PRIVATE TO IBM AND,         * 11/83 DBC\n*        THEREFORE, MAY CHANGE ACCROSS VARIOUS VERSIONS OF  * 11/83 DBC\n*        IGC018.                                            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        DATA FIELD ENTRIES CONSIST OF AN S-CON             * 11/83 DBC\n*        (BASE-REGISTER/DISPLACEMENT) WHICH CAN BE USED TO  * 11/83 DBC\n*        REFERENCE THAT FIELD IN A PARTICULAR VERSION OF    * 11/83 DBC\n*        IGC018.                                            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"IMMEDIATE DATA\" ENTRIES CONSIST OF A SINGLE BYTE  * 11/83 DBC\n*        CONTAINING THE ACTUAL BIT PATTERN USED BY A        * 11/83 DBC\n*        PARTICULAR VERSION OF IGC018 TO REPRESENT THE      * 11/83 DBC\n*        IMMEDIATE DATA.                                    * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nFIELDS   DSECT ,                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        VARIOUS BASE REGISTERS USED BY IGC018.             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nRBASE    DS    S                   IGC018'S PROGRAM BASE      11/83 DBC\n*                                  REGISTER DESCRIPTOR. THIS  11/83 DBC\n*                                  S-CON GIVES THE            11/83 DBC\n*                                  PROGRAMMING BASE REGISTER  11/83 DBC\n*                                  (USUALLY R12) AND THE      11/83 DBC\n*                                  RELATIVE BASE ADDRESS      11/83 DBC\n*                                  (USUALLY +2) USED BY       11/83 DBC\n*                                  IGC018.                    11/83 DBC\n         SPACE 1                                              11/83 DBC\nRPDS1    DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC\n*                                  POINT TO THE FOUND PDS     11/83 DBC\n*                                  DIRECTORY ENTRY AT THE     11/83 DBC\n*                                  TIME THAT \"DFOUND\" IS      11/83 DBC\n*                                  CALLED.                    11/83 DBC\nRLIST    DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC\n*                                  POINT TO THE USER'S BLDL   11/83 DBC\n*                                  PARAMETER LIST.            11/83 DBC\nRDCB     DS    S                   REGISTER USED BY IGC018 TO 11/83 DBC\n*                                  POINT TO THE DCB FOR THE   11/83 DBC\n*                                  LIBRARIES CURRENTLY BEING  11/83 DBC\n*                                  SEARCHED.                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        FIELDS IN IGC018'S DYNAMIC WORK AREA               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nRDAREA   DS    S                   BASE/DISPLACEMENT          11/83 DBC\n*                                  NOTE, THIS FIELD IS A 256  11/83 DBC\n*                                  BYTE DIRECTORY BLOCK       11/83 DBC\n*                                  BUFFER WHOSE INTERNAL      11/83 DBC\n*                                  STRUCTURE IS PUBLIC AND    11/83 DBC\n*                                  WHICH, AT THE TIME THE     11/83 DBC\n*                                  SRCHPDS HOOK ROUTINE IS    11/83 DBC\n*                                  CALLED, CAN BE USED BY     11/83 DBC\n*                                  DYNABLDL FOR ITS OWN       11/83 DBC\n*                                  PURPOSES.                  11/83 DBC\n         SPACE 1                                              11/83 DBC\nCONCAT#  DS    S                   BASE/DISPLACEMENT          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        FIELDS IN IGC018'S SVRB EXTENDED SAVE AREA         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nEXSKEY   DS    S                   BASE/DISPLACEMENT          11/83 DBC\nEXSFLG   DS    S                   BASE/DISPLACEMENT          09/84 DBC\nEXSBLDL  DS    B                   FLAG'S BIT VALUE           09/84 DBC\n         SPACE 3                                              11/83 DBC\nFIELDSLN EQU   *-FIELDS            L'DATA AREA                11/83 DBC\n         TITLE 'DYNAWA DSECT'                                 11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        DYNAWA -- DYNAMIC WORK AREA USED BY THE TWO HOOK   * 11/83 DBC\n*        ROUTINES. THE \"SRCHPDS\" ROUTINE MAPS THIS AREA     * 11/83 DBC\n*        INTO THE \"RDAREA\" FIELD OF BLDL'S \"WORKAREA\" DSECT * 11/83 DBC\n*        WHICH IS AN I/O BUFFER FOR DIRECTORY BLOCKS AND IS * 11/83 DBC\n*        NOT IN USE AT THE TIME THAT \"SRCHPDS\" IS CALLED.   * 11/83 DBC\n*        THE \"DFOUND\" ROUTINE HAS TO GETMAIN ITS \"DYNAWA\"   * 11/83 DBC\n*        AREA SINCE THE \"RDAREA\" FIELD IS IN USE AT THE     * 11/83 DBC\n*        TIME THAT \"DFOUND\" IS CALLED.                      * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNAWA   DSECT ,                   LOCAL DYNAMIC WORK AREA    11/83 DBC\nREGSAVE  DS    13A                 REGISTER SAVE AREA         11/83 DBC\nCLOKSAVE DS    2A                  \"STCK\" BUFFER              11/83 DBC\nKEYSAVE  DS    X                   CALLER'S KEY SAVE AREA     11/83 DBC\nUSERKEY  DS    X                   USER'S KEY SAVE AREA       11/83 DBC\nBLDLFLG  DS    B                   IGC018'S EXSFLG SAVE AREA  09/84 DBC\nCCIDSAVE DS    X                   CONCATENATION INDEX SAVE A 11/83 DBC\nDYNAWAL  EQU   *-DYNAWA            L'DYNAWA                   11/83 DBC\n         #TEST SIZE=(DYNAWAL,LE,256) MUST FIT WITHIN IGC018'S 11/83 DBC*\n                                   \"RDAREA\" FIELD             11/83 DBC\n         TITLE 'INFO DSECT'                                   11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        INFO -- THIS DSECT MAPS THE INFORMATION MESSAGE    * 11/83 DBC\n*        PRINTED BY THE REPORT FUNCTION FOR EACH DYNAMIC    * 11/83 DBC\n*        BLDL TABLE ENTRY. NOTE, EACH MESSAGE LINE CONTAINS * 11/83 DBC\n*        THREE SEGMENTS. THE FIRST CONTAINS INFORMATION     * 11/83 DBC\n*        SORTED BY BLDL MEMBER NAME. THE SECOND CONTAINS    * 11/83 DBC\n*        INFORMATION SORTED BY HITS FREQUENCY. THE THIRD    * 11/83 DBC\n*        CONTAINS INFORMATION SORTED BY LEAST RECENT USAGE. * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nINFO     DSECT ,                                              11/83 DBC\nCOUNT    DS    CL3,C' '            MSG LINE NUMBER            11/83 DBC\n         SPACE 1                                              11/83 DBC\nNAMEBAR  DS    C'|',C' '           GUTTER                     11/83 DBC\nNAMENAME DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC\nNAMELIB# DS    CL2,C' '            LINKLIST LIB ID NUMBER     11/83 DBC\nNAMEHITS DS    CL5,C' '            HITS COUNT                 11/83 DBC\n         SPACE 1                                              11/83 DBC\nHITSBAR  DS    C'|',C' '           GUTTER                     11/83 DBC\nHITSHITS DS    CL5,C' '            HITS COUNT                 11/83 DBC\nHITSRENT DS    C                   REENTRANT MODULE SIGNAL    08/84 DBC\nHITSNAME DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC\nHITSIDLE DS    CL4,C' '            ENTRY'S IDLE TIME          11/83 DBC\nHITSAGE  DS    CL4,C' '            ENTRY AGE                  11/83 DBC\n         SPACE 1                                              11/83 DBC\nLRUBAR   DS    C'|',C' '           GUTTER                     11/83 DBC\nLRUIDLE  DS    CL4,C' '            IDLE INTERVAL              11/83 DBC\nLRUNAME  DS    CL(L'DENTNAME),C' ' MEMBER NAME                11/83 DBC\nLRUHITS  DS    CL5                 HITS COUNT                 11/83 DBC\n         SPACE 1                                              11/83 DBC\nINFOLEN  EQU   *-INFO              MESSAGE LENGTH             11/83 DBC\n         #TEST SIZE=(INFOLEN,LE,LEN3270) SHOULD FIT ON A 3270 11/83 DBC\n         TITLE 'INITIAL ENTRY - FUNCTION SELECTION'           11/83 DBC\n************************************************************* 11/83 DBC\n*        STANDARD NON-REENTRANT ENTRY LINKAGE               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNABLDL #ENTER 'COPYRIGHT DAVID B. COLE - 1983',BASES=2      11/83 DBC\nDYNABLDL AMODE 31                                             03/88 JW\nDYNABLDL RMODE 24                                             03/88 JW\n         L     R3,0(,R1)           LOAD THE PARM FIELD PTR    11/83 DBC\n         LA    R3,0(,R3)           PURIFY IT                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        ENQ TO SERIALIZE DYNABLDL PROCESSING               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ENQ   MF=(E,SERIALIZ)                                11/83 DBC\n         OI    FLAG,ENQED          SET AUDIT FLAG             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        GET THE CURRENT T.O.D. ISSOLATE BITS 10-41 WHICH   * 11/83 DBC\n*        MEASURE TIME RANGING FROM ABOUT 1/1000TH OF A      * 11/83 DBC\n*        SECOND UP TO APPROXIMATELY ONE MONTH. NOTE, THIS   * 11/83 DBC\n*        IS THE SAME TIME SCALE USED BY THE SRM FOR ITS     * 11/83 DBC\n*        INTERVAL TIMINGS.                                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         STCK  CLOCK               GET THE TOD CLOCK          11/83 DBC\n         LM    R0,R1,CLOCK         LOAD THE VALUE             11/83 DBC\n         SLDL  R0,CLOKSHFT         ISSOLATE BITS 10-41 INTO   11/83 DBC\n*                                  REGISTER 0.                11/83 DBC\n         ST    R0,CLOCK            STORE BACK                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        LOCATE THE BLDL SVC ROUTINE (IGC018).              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     BLDLBASE,CVTPTR     --> CVT                    11/83 DBC\n         L     BLDLBASE,CVTABEND-CVTMAP(,BLDLBASE) --> SCVT   11/83 DBC\n         L     BLDLBASE,SCVTSVCT-SCVTSECT(,BLDLBASE) --> SVCTABLE 3 DBC\n         L     BLDLBASE,SVCENTRY-SVC+BLDLSVC*SVCENTLN(,BLDLBASE) 83 DBC\n*                                  --> IGC018                 11/83 DBC\n         USING IGC018,BLDLBASE     SIGNAL THIS FACT           11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        IDENTIFY WHICH VERSION OF IGC018 IS IN THIS        * 11/83 DBC\n*        SYSTEM.                                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R2,VERSIONS-4       --> RECOGNITION VECTOR     11/83 DBC\n         BALR  R4,0                LOAD LOOP POINT            11/83 DBC\n         LA    R2,4(,R2)           --> NEXT TABLES PTR        11/83 DBC\n         ICM   VERSBASE,15,0(R2)   --> SPECIFIC TABLES VECTOR 11/83 DBC\n*                                  EO-RECOG VECTOR?           11/83 DBC\n         BZ    UNRECOGN            YES, IGC018 NOT RECOGNIZED 11/83 DBC\n         USING VERSION,VERSBASE    NO, DCL TABLE VECTOR BASE  11/83 DBC\n         L     R1,IDVV             --> IDENTIFIER CODE        11/83 DBC\n         BAL   R14,VERIFY          DOES IGC018 MATCH THIS?    11/83 DBC\n         BR    R4                  +0 NO, KEEP TRYING         11/83 DBC\n         NOPR  0                      (FILLER)                11/83 DBC\n*                                  +4 YES, PROCEED            11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        THE CURRENT VERSION OF IGC018 HAS BEEN RECOGNIZED. * 11/83 DBC\n*        NOW EXAMINE THE \"SRCHPDS\" HOOK LOCATION TO SEE     * 11/83 DBC\n*        WHAT IT CONTAINS.                                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC\n         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC\n         LH    R15,ORIGLOC         GET HOOK OFFSET            11/83 DBC\n         LA    R15,IGC018(R15)     CNVRT TO AN ADDRESS        11/83 DBC\n         CLC   0(SRCHPOAA-SRCHPOHH,R15),SRCHPOHH HAS THE      11/83 DBC\n*                                  SRCHPO HOOK ALREADY BEEN   11/83 DBC\n*                                  SET?                       11/83 DBC\n         BE    VEROK1              YES, PROCEED               11/83 DBC\n         OI    FLAG,SRCHPO00       NO, REMEMBER               11/83 DBC\n         BAL   R14,VERIFY          DOES THE HOOK LOCATION     11/83 DBC\n*                                  CONTAIN WHAT IT OUGHT TO?  11/83 DBC\n         B     BADSTRUC            +0 NO, ERROR               11/83 DBC\n*                                  +4 YES, PROCEED            11/83 DBC\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\nVEROK1   DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW DO THE SAME FOR THE \"DFOUND\" HOOK LOCATION.    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC\n         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC\n         LH    R15,ORIGLOC         GET HOOK OFFSET            11/83 DBC\n         LA    R15,IGC018(R15)     CNVRT TO AN ADDRESS        11/83 DBC\n         CLC   0(DFOUNDAA-DFOUNDHH,R15),DFOUNDHH HAS THE      11/83 DBC\n*                                  DFOUND HOOK ALREADY BEEN   11/83 DBC\n*                                  SET?                       11/83 DBC\n         BE    VEROK2              YES, PROCEED               11/83 DBC\n         OI    FLAG,DFOUND00       NO, REMEMBER               11/83 DBC\n         BAL   R14,VERIFY          DOES THE HOOK LOCATION     11/83 DBC\n*                                  CONTAIN WHAT IT OUGHT TO?  11/83 DBC\n         B     BADSTRUC            +0 NO, ERROR               11/83 DBC\n*                                  +4 YES, PROCEED            11/83 DBC\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\nVEROK2   DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        EXAMINE THE PARM FIELD TO DETERMINE THE DESIRED    * 11/83 DBC\n*        FUNCTION (\"START\", \"STOP\", OR \"REPORT\").           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTR   R3,R3               IS A PARM FIELD SET UP?    11/83 DBC\n         BZ    START               NO, ASSUME \"START\"         11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R15,PARMS-(PRMROOTL-(L'PRMLEN-1)) YES, PRIME   11/83 DBC\n         SR    R2,R2               PRIME LENGTH REGISTER      11/83 DBC\n         BALR  R14,0               LOAD SCAN LOOP HEAD        11/83 DBC\n         LA    R15,PRMROOTL-(L'PRMLEN-1)(R2,R15) --> NEXT ENT 11/83 DBC\n         ICM   R2,3,PRMLEN(R15)    GET L'ENTRY; EO-TABLE?     11/83 DBC\n         BM    INVALID             YES, ERROR                 11/83 DBC\n         LA    R2,L'PRMLEN-1(,R2)  NO, GET L'TEXT+L'LENFLD-1  11/83 DBC\n         CLC   0(*-*,R3),PRMTEXT-2(R15) (EXECUTED)            11/83 DBC\n         #TEST SIZE=(PRMTEXT-2,EQ,PRMLEN)                     11/83 DBC\n         EX    R2,*-6              RIGHT ENTRY?               11/83 DBC\n         BHR   R14                 NOT YET, CONTINUE SEARCH   11/83 DBC\n         BL    INVALID             NO, INVALID PARM           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R15,PRMHNDLR(,R15)  YES, LOAD HANDLER ADDRESS  11/83 DBC\n         BR    R15                 GOTO THE HANDLER           11/83 DBC\n         TITLE 'START -- DYNAMIC BLDL STARTUP ROUTINE'        11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        START -- THIS ROUTINE STARTS UP DYNAMIC BLDL       * 11/83 DBC\n*        PROCESSING.                                        * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        START PROCESSING REQUIRES AUTHORIZATION. TEST THIS * 11/83 DBC\n*        (DRAMATICALLY) BY ATTEMPTING TO AQUIRE SUPERVISOR  * 11/83 DBC\n*        STATE.                                             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSTART    MODESET MODE=SUP          SET SUPERVISOR STATE       11/83 DBC\n         OI    FLAG,SUPER          REMEMBER IN SUPER STATE    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        START PROCESSING CAN PROCEED ONLY IF BOTH IGC018   * 11/83 DBC\n*        HOOKS ARE NOT YET SET. CHECK THIS OUT.             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,SRCHPO00+DFOUND00 ARE BOTH HOOK LOCATIONS 11/83 DBC\n*                                  CLEAR?                     11/83 DBC\n         BZ    DONEB4              NO, BOTH ARE SET; EXIT.    11/83 DBC\n         BM    MESS                NO, ONE IS, ONE ISN'T; THE 11/83 DBC\n*                                  USER MUST INVOKE STOP      11/83 DBC\n*                                  PROCESSING TO CLEAN UP THE 11/83 DBC\n*                                  MESS.                      11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        IGC018 HAS BEEN POSITIVELY RECOGNIZED. NOW ADJUST  * 11/83 DBC\n*        ALL IBM PRIVATE FIELD REFERENCES, CONTAINED IN THE * 11/83 DBC\n*        TWO HOOK ROUTINES (\"SRCHPDS\" AND \"DFOUND\"), SO     * 11/83 DBC\n*        THAT THEY CORRESPOND CORRECTLY TO THE RECOGNIZED   * 11/83 DBC\n*        VERSION OF IGC018. NOTE, I DO THIS NOW, PRIOR TO   * 11/83 DBC\n*        MOVING THE HOOK ROUTINES TO SP245, SO THAT I DON'T * 11/83 DBC\n*        HAVE TO DO IT IN KEY-0.                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DEVELOP A RETURN DESCRIPTOR FOR THE SRCHPDS HOOK.  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DATAOFFS         --> IBM PRIVATE FIELDS     11/83 DBC\n*                                  DESCRIPTORS                11/83 DBC\n         USING FIELDS,R1           DCL A BASE FOR THEM        11/83 DBC\n         SR    R14,R14             CLEAR FOR INSERT           11/83 DBC\n         ICM   R14,3,RBASE         GET IGC018'S BASE          11/83 DBC\n*                                  DESCRIPTOR                 11/83 DBC\n         SRDL  R14,12              SEPARATE THE DISPLACEMENT  11/83 DBC\n*                                  FROM THE BASE REG          11/83 DBC\n         SRL   R15,20              ALIGN THE DISPLACEMENT     11/83 DBC\n         SLL   R14,12              ALIGN THE REG VALUE        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,SRCHPOVV         --> SRCHPDS VERIFY DATA    11/83 DBC\n         DROP  R1                  RELEASE FIELDS BASE        11/83 DBC\n         USING ORIGINAL,R1         DCL VERIFY DATA BASE       11/83 DBC\n         LNR   R0,R15              GET BASE'S DISPLACEMENT    11/83 DBC\n         AH    R0,ORIGLOC          SUBTR FROM PATCH'S         11/83 DBC\n*                                  DISPLACEMENT               11/83 DBC\n         AH    R0,ORIGLEN          ADD IN THE PATCH'S LENGTH  11/83 DBC\n*                                  TO DETERMINE THE ADDRESS   11/83 DBC\n*                                  OF THE LOCATION PAST THE   11/83 DBC\n*                                  PATCH RELATIVE TO IGC018'S 11/83 DBC\n*                                  BASE REGISTER.             11/83 DBC\n         CL    R0,=X'00000FFF'     BASE REG OVERFLOW?         11/83 DBC\n         #DIE  H,'IGC018 IS LONGER THAN 4K' YES               11/83 DBC\n         OR    R0,R14              NO, GET COMBINED           11/83 DBC\n*                                  BASE/DISPLACEMENT VALUE    11/83 DBC\n         STH   R0,SRCHPOXX         STORE FOR USE BY @ZAP      11/83 DBC\n         DROP  R1                  RELEASE SRCHPDS VERIFY     11/83 DBC\n*                                  DATA BASE                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW DO THE SAME FOR THE DFOUND HOOK.               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DFOUNDVV         --> DFOUND VERIFY DATA     11/83 DBC\n         USING ORIGINAL,R1         DCL VERIFY DATA BASE       11/83 DBC\n         LNR   R0,R15              GET BASE'S DISPLACEMENT    11/83 DBC\n         AH    R0,ORIGLOC          SUBTR FROM PATCH'S         11/83 DBC\n*                                  DISPLACEMENT               11/83 DBC\n         AH    R0,ORIGLEN          ADD IN THE PATCH'S LENGTH  11/83 DBC\n*                                  TO DETERMINE THE ADDRESS   11/83 DBC\n*                                  OF THE LOCATION PAST THE   11/83 DBC\n*                                  PATCH RELATIVE TO IGC018'S 11/83 DBC\n*                                  BASE REGISTER.             11/83 DBC\n         CL    R0,=X'00000FFF'     BASE REG OVERFLOW?         11/83 DBC\n         #DIE  H,'IGC018 IS LONGER THAN 4K' YES               11/83 DBC\n         OR    R0,R14              NO, GET COMBINED           11/83 DBC\n*                                  BASE/DISPLACEMENT VALUE    11/83 DBC\n         STH   R0,DFOUNDXX         STORE FOR USE BY @ZAP      11/83 DBC\n         DROP  R1                  RELEASE DFOUND VERIFY DATA 11/83 DBC\n*                                  BASE                       11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW CALL @ZAP TO ADJUST ALL REFERENCES TO IBM      * 11/83 DBC\n*        PRIVATE DATA FIELDS.                               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DATAOFFS         --> THE TABLE OF IBM       11/83 DBC\n*                                  PRIVATE FIELD REFERENCE    11/83 DBC\n*                                  DESCRIPTORS.               11/83 DBC\n         L     R15,=A(@ZAP)        --> THE GRAND ADJUSTER     11/83 DBC\n         BALR  R14,R15             ADJUST IBM FIELDS REFS     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        NOW ALLOCATE GLOBAL, FIXED, KEY-0, FETCH           * 11/83 DBC\n*        ACCESSABLE MEMORY (SP245) INTO WHICH THE HOOK      * 11/83 DBC\n*        ROUTINES AND DYNAMIC BLDL TABLE WILL BE BUILT. THE * 11/83 DBC\n*        AREA WILL BE USED AS FOLLOWS.                      * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE \"DYNAHEAD\" TABLE.                            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE \"SRCHPDS\" HOOK ROUTINE CONSTRUCTED AS        * 11/83 DBC\n*          FOLLOWS:                                         * 11/83 DBC\n*          - THE \"SRCHPDS\" CODE RELOCATED FROM THIS MODULE, * 11/83 DBC\n*          - THE \"SRCHPDS\" VERIFIED CODE COPIED FROM        * 11/83 DBC\n*            IGC018,                                        * 11/83 DBC\n*          - THE \"SRCHPOBC\" BRANCH STATEMENT.               * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE \"DFOUND\" HOOK ROUTINE CONSTRUCTED AS         * 11/83 DBC\n*          FOLLOWS:                                         * 11/83 DBC\n*          - THE \"DFOUND\" CODE RELOCATED FROM THIS MODULE,  * 11/83 DBC\n*          - THE \"DFOUND\" VERIFIED CODE COPIED FROM IGC018, * 11/83 DBC\n*          - THE \"DFOUNDBC\" BRANCH STATEMENT.               * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE DYNAMIC BLDL TABLE, DWORD ALIGNED.           * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DETERMINE  THE AMOUNT OF MEMORY NEEDED.            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R0,7                GET DWORD ROUNDER          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R3,(DHEADLEN+7)/8*8 GET L'DYNAHEAD ROUNDED     11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,SRCHPOVV         --> VERIFIER               11/83 DBC\n         LH    R1,ORIGLEN-ORIGINAL(,R1) GET VERIFIED LEN      11/83 DBC\n         LA    R1,SRCHPOLL+L'SRCHPOBC+7(,R1) INCLUDE L'BODY - 11/83 DBC\n         OR    R1,R0                ROUNDED UP TO -           11/83 DBC\n         XR    R1,R0                 DWORD ALIGNMENT          11/83 DBC\n         AR    R3,R1               ACCUMULATE                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DFOUNDVV         --> VERIFIER               11/83 DBC\n         LH    R1,ORIGLEN-ORIGINAL(,R1) GET VERIFIED LEN      11/83 DBC\n         LA    R1,DFOUNDLL+L'DFOUNDBC+7(,R1) INCLUDE L'BODY - 11/83 DBC\n         OR    R1,R0                ROUNDED UP TO -           11/83 DBC\n         XR    R1,R0                 DWORD ALIGNMENT          11/83 DBC\n         AR    R3,R1               ACCUMULATE                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R1,DYNLLEN          GET L'DLIST ENTRY          11/83 DBC\n         #TEST SIZE=(DYNLLEN/8*8,EQ,DYNLLEN)                  11/83 DBC\n         MH    R1,=Y(ENTRYCNT)     GET DLIST TABLE SIZE       11/83 DBC\n         AR    R3,R1               ACCUMULATE IT              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        GETMAIN AND CLEAR THE AREA                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MODESET EXTKEY=ZERO,SAVEKEY=PSWKEY,WORKREG=2 KEY0    11/83 DBC\n         OI    FLAG,KEY0           SET AUDIT FLAG             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ICM   R3,8,=AL1(245)      GET SUBPOOL ID             11/83 DBC\n         GETMAIN R,LV=(R3)         ALLOCATE GLOBAL MEMORY     11/83 DBC\n         LR    TABLBASE,R1         COPY AREA PTR              11/83 DBC\n         USING DYNAHEAD,TABLBASE   DCL A BASE FOR IT          11/83 DBC\n         LR    R0,R1               COPY THE AREA PTR          11/83 DBC\n         LR    R1,R3               COPY THE AREA LENGTH       11/83 DBC\n         SR    R15,R15             PREPARE TO CLEAR THE AREA  11/83 DBC\n         MVCL  R0,R14              CLEAR THE AREA             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        BEGIN TO CONSTRUCT THE DYNAHEAD TABLE              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   DHID,=CL8'DYNAHEAD' STORE TABLE ID             11/83 DBC\n         ST    TABLBASE,AREA       SAVE A(AREA)               11/83 DBC\n         ST    R3,AREASPLN         SAVE SP & LEN OF AREA      11/83 DBC\n         MVC   DYNACLOK,CLOCK      COPY TOD BITS 10-41        11/83 DBC\n         LA    R14,DYNAHEAD+(DHEADLEN+7)/8*8 --> PAST TABLE   11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE SRCHPDS HOOK ROUTINE                 * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ST    R14,SRCHPOAA        STORE IGC018'S POINTER     11/83 DBC\n         ST    R14,SRCHPOPT        STORE A(SRCHPDS HOOK)      11/83 DBC\n         ST    TABLBASE,SRCHPODH   A(DYNAHEAD) --> SRCHPDS    11/83 DBC\n         LA    R0,SRCHPDS          --> SRCHPDS SOURCE         11/83 DBC\n         LA    R1,SRCHPOLL         GET ITS LENGTH             11/83 DBC\n         LR    R15,R1              GET L'SINK                 11/83 DBC\n         MVCL  R14,R0              COPY BODY OF SRCHPDS HOOK  11/83 DBC\n         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC\n         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC\n         LA    R0,ORIGCODE         --> CODE MATCHED IN IGC018 11/83 DBC\n         LH    R15,ORIGLEN         GET ITS LENGTH             11/83 DBC\n         LR    R1,R15              COPY                       11/83 DBC\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\n         MVCL  R14,R0              COPY IGC018 CODE           11/83 DBC\n         MVC   0(L'SRCHPOBC,R14),SRCHPOBC COPY RETURN INSTR   11/83 DBC\n         LA    R14,L'SRCHPOBC+7(,R14) ADVANCE -               11/83 DBC\n         SRL   R14,3                SCANNER -                 11/83 DBC\n         SLL   R14,3                 ROUNDED                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE DFOUND HOOK ROUTINE                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ST    R14,DFOUNDAA        STORE IGC018'S POINTER     11/83 DBC\n         ST    R14,DFOUNDPT        STORE A(DFOUND HOOK)       11/83 DBC\n         ST    TABLBASE,DFOUNDDH   A(DYNAHEAD) --> DFOUND     11/83 DBC\n         LA    R0,DFOUND           --> DFOUND SOURCE          11/83 DBC\n         LA    R1,DFOUNDLL         GET ITS LENGTH             11/83 DBC\n         LR    R15,R1              GET L'SINK                 11/83 DBC\n         MVCL  R14,R0              COPY BODY OF DFOUND HOOK   11/83 DBC\n         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC\n         USING ORIGINAL,R1         DCL A BASE FOR IT          11/83 DBC\n         LA    R0,ORIGCODE         --> CODE MATCHED IN IGC018 11/83 DBC\n         LH    R15,ORIGLEN         GET ITS LENGTH             11/83 DBC\n         LR    R1,R15              COPY                       11/83 DBC\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\n         MVCL  R14,R0              COPY IGC018 CODE           11/83 DBC\n         MVC   0(L'DFOUNDBC,R14),DFOUNDBC COPY RETURN INSTR   11/83 DBC\n         LA    R14,L'DFOUNDBC+7(,R14) ADVANCE -               11/83 DBC\n         SRL   R14,3                SCANNER -                 11/83 DBC\n         SLL   R14,3                 ROUNDED                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE DYNAMIC LIST TABLE DESCRIPTOR AND    * 11/83 DBC\n*        SKELETON.                                          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ST    R14,DYNAFIRS        STORE SO-TABLE             11/83 DBC\n         LA    R0,DYNLLEN          GET L'ENTRY                11/83 DBC\n         ST    R0,DYNAELEN         STORE                      11/83 DBC\n         LR    R1,R0               COPY                       11/83 DBC\n         MH    R1,=Y(ENTRYCNT-1)   GET OFFSET TO LAST ENTRY   11/83 DBC\n         AR    R1,R14              CNVRT TO ADDRESS           11/83 DBC\n         ST    R1,DYNALAST         STORE                      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R14            DCL DYNL ENTRY BASE        11/83 DBC\nDYNLINIT OI    DENTNAME+DYNLLOCK,UNLOCKED \"NOT LOCKED\"        11/83 DBC\n         BXLE  R14,R0,DYNLINIT     LOOP FOR ALL ENTRIES       11/83 DBC\n         DROP  R14                 RELEASE DYNL ENTRY BASE    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        COPY THE HOOKS TO IGC018.                          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DFOUNDVV         --> VERIFY DATA            11/83 DBC\n         LH    R1,ORIGLOC-ORIGINAL(,R1) GET HOOK OFFSET       11/83 DBC\n         LA    R1,IGC018(R1)       GET HOOK ADDRESS           11/83 DBC\n         EJECT                                                03/88 JW\n************************************************************* 03/88 JW\n*        TURN OFF STORAGE PROTECTION FIRST HOOK             * 03/88 JW\n************************************************************* 03/88 JW\n         PRINT NOGEN                                          03/88 JW\n         SPACE 1                                              03/88 JW\nGETPAGE  EQU   *                                              03/88 JW\n         STM   R0,R15,SAVEREGS      SAVE DYNA REGS            03/88 JW\n         LA    R8,0(,R1)            ADDR OF STORAGE HOOK      03/88 JW\n         N     R8,STOMASK           CLEAR OUT BX FIELD        03/88 JW\n         STCTL 1,1,CR1              GET CONTROL REG 1         03/88 JW\n         L     R2,CR1               > PRIM SEG TABLE ORIGIN   03/88 JW\n         BAL   R10,NOPROT           GET PAGE TABLE ENTRY ADDR 03/88 JW\n         LM    R0,R15,SAVEREGS      GET DYNA REGS BACK        03/88 JW\n         MVC   0(DFOUNDHL,R1),DFOUNDHH COPY HOOK TO IGC018    11/83 DBC\n         NI    FLAG,255-DFOUND00   REMEMBER HOOK NOW SET      11/83 DBC\n         WTO   '** DFOUNDVV HOOK NOW SET **'                  03/88 JW\n         L     R1,SRCHPOVV         --> VERIFY DATA            11/83 DBC\n         LH    R1,ORIGLOC-ORIGINAL(,R1) GET HOOK OFFSET       11/83 DBC\n         LA    R1,IGC018(R1)       GET HOOK ADDRESS           11/83 DBC\n         STM   R0,R15,SAVEREGS     SAVE HOOK ADDR             03/88 JW\n         SPACE 2                                              03/88 JW\n************************************************************* 03/88 JW\n*        TURN OFF STORAGE PROTECTION FOR SECOND HOOK        * 03/88 JW\n************************************************************* 03/88 JW\n         LA    R8,0(,R1)            ADDR OF STORAGE HOOK      03/88 JW\n         N     R8,STOMASK           CLEAR OUT BX FIELD        03/88 JW\n         L     R2,CR1               > PRIM SEG TABLE ORIGIN   03/88 JW\n         BAL   R10,NOPROT           GET PAGE TABLE ENTRY ADDR 03/88 JW\n         LM    R0,R15,SAVEREGS      GET DYNA REGS BACK        03/88 JW\n         MVC   0(SRCHPOHL,R1),SRCHPOHH COPY HOOK TO IGC018    11/83 DBC\n         NI    FLAG,255-SRCHPO00   REMEMBER HOOK NOW SET      11/83 DBC\n         WTO   '** SRCHPOVV HOOK NOW SET **'                  03/88 JW\n         B     PAGEDONE                                       03/88 JW\n         EJECT                                                03/88 JW\n************************************************************* 03/88 JW\n*        TURN OFF STORAGE PROTECTION                        * 03/88 JW\n************************************************************* 03/88 JW\nNOPROT   EQU   *                                              03/88 JW\n         SR    R9,R9                                          03/88 JW\n         SRDL  R8,20                SHIFT OUT PX AND BX FIELD 03/88 JW\n         SLL   R8,2                 SX FIELD TIMES 4          03/88 JW\n         N     R2,STOMASK           CLEAN UP ADDRESS          03/88 JW\n         BAL   R15,REAL2VIR         GET VIRTUAL ADDRESS       03/88 JW\n         ALR   R2,R8                > SEGMENT TABLE           03/88 JW\n         SRL   R9,22                PAGE TBL OFFSET           03/88 JW\n         L     R2,0(,R2)            GET PAGE TABLE ORIGIN     03/88 JW\n         N     R2,PTOMASK           FIX PAGE TBL REAL ADDR    03/88 JW\n         BAL   R15,REAL2VIR         GET VIRTUAL ADDRESS       03/88 JW\n         ALR   R9,R2                ADDR OF PAGE TBL ENTRY    03/88 JW\n         ST    R9,PAGEADDR          SAVE > TO TURN BACK ON    03/88 JW\n         NI    2(R9),PROTOFF        TURN IT OFF               03/88 JW\n         PTLB  ,                    PURGE TRANS LOOKASIDE BUF 03/88 JW\n         BR    R10                  RETURN                    03/88 JW\n         SPACE 1                                              03/88 JW\nREAL2VIR EQU   *                                              03/88 JW\n         LR    R1,R2                GET STORAGE ADDR          03/88 JW\n         SRL   R1,12                REMOVE DISPLACEMENT       03/88 JW\n         L     R3,CVTPTR                                      03/88 JW\n         USING CVTFIX,R3                                      03/88 JW\n         L     R3,CVTPVTP-CVTMAP(,R3)  GET ADDR OF PVT        03/88 JW\n         L     R3,PVTRIT(,R3)       GET ADDR OF RIT           03/88 JW\n         L     R3,RITPFT(,R3)       GET ADDR OF PFTE          03/88 JW\n         SLL   R1,5                                           03/88 JW\n         L     R1,PFTVSA(R1,R3)     GET VIRTUAL PAGE ADDR     03/88 JW\n         N     R2,PAGEDISP          GET PAGE DISPLACEMENT     03/88 JW\n         OR    R2,R1                COMBINE WITH VIRT PAGE #  03/88 JW\n         BR    R15                                            03/88 JW\n         SPACE 2                                              03/88 JW\nPVTRIT   EQU   X'4'                                           03/88 JW\nRITPFT   EQU   X'D0'                                          03/88 JW\nPFTVSA   EQU   X'14'                                          03/88 JW\nSAVEREGS DS    16F                                            03/88 JW\nCR1      DC    F'0'                                           03/88 JW\nPAGEADDR DC    F'0'                                           03/88 JW\nSTOMASK  DC    X'7FFFF000'          FIX SEG TBL ORIGIN ADDR   03/88 JW\nPTOMASK  DC    X'7FFFFFC0'          FIX PAGE TBL ORIGIN ADDR  03/88 JW\nSEGMASK  DC    X'FFF00000'          FIX VIRT ADDR SEG >       03/88 JW\nPAGEMASK DC    X'000FF000'          FIX VIRT ADDR PAGE >      03/88 JW\nPAGEDISP DC    X'00000FFF'          PAGE DISPLACEMENT         03/88 JW\nPROTON   EQU   X'02'                TURN PAGE PROTECT ON      03/88 JW\nPROTOFF  EQU   X'FD'                TURN PAGE PROTECT OFF     03/88 JW\n         EJECT                                                03/88 JW\n         PRINT GEN                                            03/88 JW\n************************************************************* 11/83 DBC\n*        START PROCESSING DONE. CLEAN UP AND EXIT.          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPAGEDONE EQU   *                                              03/88 JW\n         DROP  TABLBASE            RELEASE GLOBAL AREA BASE   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MODESET KEYADDR=PSWKEY,WORKREG=2 RESTORE KEY8        11/83 DBC\n         NI    FLAG,255-KEY0       CLEAR AUDIT FLAG           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         B     STARTED             ISSUE MSG AND EXIT         11/83 DBC\n         TITLE 'STOP -- DYNAMIC BLDL SHUTDOWN ROUTINE'        11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        STOP -- THIS ROUTINE SHUTS DOWN DYNAMIC BLDL       * 11/83 DBC\n*        PROCESSING.                                        * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        STOP PROCESSING REQUIRES AUTHORIZATION. TEST THIS  * 11/83 DBC\n*        (DRAMATICALLY) BY ATTEMPTING TO AQUIRE SUPERVISOR  * 11/83 DBC\n*        STATE.                                             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSTOP     MODESET MODE=SUP          SET SUPERVISOR STATE       11/83 DBC\n         OI    FLAG,SUPER          REMEMBER IN SUPER STATE    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        I WILL PROCEED ONLY IF AT LEAST ONE HOOK IS SET.   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,SRCHPO00+DFOUND00 IS EITHER HOOK SET?     11/83 DBC\n         BO    STOPDB4             NO, JUST EXIT              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        AT LEAST ONE HOOK HAS BEEN PREVIOUSLY SET. LOAD    * 11/83 DBC\n*        KEY0 SO THAT I CAN CLEAR IT (OR THEM).             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MODESET EXTKEY=ZERO,SAVEKEY=PSWKEY,WORKREG=2         11/83 DBC\n         OI    FLAG,KEY0           SET AUDIT FLAG             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CLEAR THE \"DFOUND\" HOOK FIRST.                     * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         BALR  TABLBASE,0          LOAD A NON-ZERO POINTER TO 11/83 DBC\n*                                  AN ACCESSIBLE GARBAGE AREA 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,DFOUND00       IS THIS HOOK ALREADY CLER? 11/83 DBC\n         BNZ   CLEARD1             YES, SKIP                  11/83 DBC\n         L     R1,DFOUNDVV         NO, --> VERIFY DATA        11/83 DBC\n         USING ORIGINAL,R1         DCL ITS BASE               11/83 DBC\n         LH    R15,ORIGLOC         GET HOOK'S OFFSET          11/83 DBC\n         LA    R15,IGC018(R15)     GET ITS ADDRESS            11/83 DBC\n         LA    R8,0(,R15)           ADDR OF STORAGE HOOK      03/88 JW\n         STM   R0,R15,SAVEREGS      SAVE DYNA REGS            03/88 JW\n         N     R8,STOMASK           CLEAR OUT BX FIELD        03/88 JW\n         STCTL 1,1,CR1              GET CONTROL REG 1         03/88 JW\n         L     R2,CR1               > PRIM SEG TABLE ORIGIN   03/88 JW\n         BAL   R10,NOPROT          TURN OFF PAGE PROTECT      03/88 JW\n         LM    R0,R15,SAVEREGS      GET DYNA REGS BACK        03/88 JW\n         L     TABLBASE,DFOUNDAA-DFOUNDHH(,R15) --> INTERCEPT 11/83 DBC\n         L     TABLBASE,DFOUNDDH-DFOUND(,TABLBASE) -->        11/83 DBC\n*                                  DYNABLDL'S CONTROL TABLE   11/83 DBC\n         MVC   0(DFOUNDHL,R15),ORIGCODE CLEAR THE HOOK        11/83 DBC\n         OI    FLAG,DFOUND00       SET AUDIT FLAG             11/83 DBC\n         WTO   '** DFOUNDVV HOOK NOW REMOVED **'              03/88 JW\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\nCLEARD1  DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW CLEAR THE \"SRCHPDS\" HOOK.                      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,SRCHPO00       IS THIS HOOK ALREADY CLER? 11/83 DBC\n         BNZ   CLEARD2             YES, SKIP                  11/83 DBC\n         L     R1,SRCHPOVV         NO, --> VERIFY DATA        11/83 DBC\n         USING ORIGINAL,R1         DCL ITS BASE               11/83 DBC\n         LH    R15,ORIGLOC         GET HOOK'S OFFSET          11/83 DBC\n         LA    R15,IGC018(R15)     GET ITS ADDRESS            11/83 DBC\n         STM   R0,R15,SAVEREGS      SAVE DYNA REGS            03/88 JW\n         LA    R8,0(,R15)           ADDR OF STORAGE HOOK      03/88 JW\n         N     R8,STOMASK           CLEAR OUT BX FIELD        03/88 JW\n         L     R2,CR1               > PRIM SEG TABLE ORIGIN   03/88 JW\n         BAL   R10,NOPROT          TURN OFF PAGE PROTECT      03/88 JW\n         LM    R0,R15,SAVEREGS      GET DYNA REGS BACK        03/88 JW\n         CLC   DHID-DYNAHEAD(,TABLBASE),=CL8'DYNAHEAD' IS     11/83 DBC\n*                                  CONTROL TABLE PTR OK?      11/83 DBC\n         BE    GOTDHPTR            YES, PROCEED               11/83 DBC\n         L     TABLBASE,SRCHPOAA-SRCHPOHH(,R15) NO, -->       11/83 DBC\n*                                  INTERCEPT ROUTINE          11/83 DBC\n         L     TABLBASE,SRCHPODH-SRCHPDS(,TABLBASE) -->       11/83 DBC\n*                                  DYNABLDL'S CONTROL TABLE   11/83 DBC\nGOTDHPTR MVC   0(SRCHPOHL,R15),ORIGCODE CLEAR THE HOOK        11/83 DBC\n         OI    FLAG,SRCHPO00       SET AUDIT FLAG             11/83 DBC\n         WTO   '** SRCHPOVV HOOK NOW REMOVED **'              03/88 JW\n         DROP  R1                  RELEASE VERIFIER BASE      11/83 DBC\nCLEARD2  DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW, IF I WAS ABLE TO GET A POINTER TO THE HEADER  * 11/83 DBC\n*        TABLE, THEN FREEMAIN DYNABLDL'S GLOBAL DATA AREA.  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CLC   DHID-DYNAHEAD(,TABLBASE),=CL8'DYNAHEAD' DO I   11/83 DBC\n*                                  HAVE A PTR TO THE CONTROL  11/83 DBC\n*                                  TABLE?                     11/83 DBC\n         BNE   FREED               NO, FORGET IT              11/83 DBC\n         USING DYNAHEAD,TABLBASE   YES, DCL HEADER TABLE'S    11/83 DBC\n*                                  BASE                       11/83 DBC\n         L     R1,AREA             --> GLOBAL AREA            11/83 DBC\n         L     R0,AREASPLN         GET ITS SUBPOOL AND LENGTH 11/83 DBC\n         FREEMAIN R,LV=(0),A=(1)   FREE IT                    11/83 DBC\n         DROP  TABLBASE            RELEASE BASE               11/83 DBC\n         SR    TABLBASE,TABLBASE   SET \"TABLE FREED\" SIGNAL   11/83 DBC\nFREED    DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RESTORE KEY8.                                      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MODESET KEYADDR=PSWKEY,WORKREG=2                     11/83 DBC\n         NI    FLAG,255-KEY0       CLEAR AUDIT FLAG           11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        EXIT ACCORDING TO WHETHER OR NOT I WAS ABLE TO     * 11/83 DBC\n*        FREE THE GLOBAL AREA.                              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTR   TABLBASE,TABLBASE   WAS THE GLOBAL AREA FOUND? 11/83 DBC\n         BNZ   PARTSTOP            NO, ISSUE SPECIAL MSG      11/83 DBC\n         B     STOPPED             YES, EXIT NORMALLY         11/83 DBC\n         TITLE 'REPORT -- DYNAMIC BLDL ACTIVITY REPORTING ROUTINE'  DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        REPORT -- THIS ROUTINE GENERATES A REPORT OF       * 11/83 DBC\n*        DYNAMIC BLDL'S ACTIVITY. THREE SORTS OF THE TABLE  * 11/83 DBC\n*        ARE PRINTED IN 3-COLUMN FORMAT. THE FIRST LISTS    * 11/83 DBC\n*        THE TABLE BY MEMBER NAME. THE SECOND LISTS IT BY   * 11/83 DBC\n*        HIT COUNT (MOST HITS TO LEAST HITS). THE THIRD     * 11/83 DBC\n*        LISTS THE TABLE BY L.R.U. CHARACTERISTIC (MOST TO  * 11/83 DBC\n*        LEAST RECENTLY USED). ALSO A SUMMARY MESSAGE IS    * 11/83 DBC\n*        BOTH PRINTED AND DISPLAYED VIA WTO GIVING THE      * 11/83 DBC\n*        \"HIT RATE\" AND OTHER DATA.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n*        OUTPUT IS WRITTEN TO SYSPRINT WHICH CAN HAVE ANY   * 11/83 DBC\n*        RECORD FORMAT AND ANY RECORD LENGTH THAT CAN HOLD  * 11/83 DBC\n*        AT LEAST 79 BYTES OF DATA. NOTE THAT THE RECORD    * 11/83 DBC\n*        LENGTH IS SUITABLE FOR DISPLAY ON A 3270 TERMINAL. * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF SYSPRINT IS OMITTED, THEN ONLY A SUMMARY        * 11/83 DBC\n*        MESSAGE IS DISPLAYED TO THE OPERATORS.             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        PROCEED ONLY IF DYNABLDL IS CURRENTLY ACTIVE.      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nREPORT   EQU   *\n         TM    FLAG,SRCHPO00+DFOUND00 ARE BOTH HOOKS IN?      11/83 DBC\n         BNZ   DOWN                NO, EXIT                   11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DYNABLDL IS ACTIVE. LOCATE THE DYNABLDL GLOBAL     * 11/83 DBC\n*        AREA.                                              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     TABLBASE,DFOUNDVV   --> VERIFY DATA            11/83 DBC\n         LH    TABLBASE,ORIGLOC-ORIGINAL(,TABLBASE) GET HOOK  11/83 DBC\n*                                  OFFSET                     11/83 DBC\n         LA    TABLBASE,IGC018(TABLBASE) CNVRT TO ADDRESS     11/83 DBC\n         L     TABLBASE,DFOUNDAA-DFOUNDHH(,TABLBASE) -->      11/83 DBC\n*                                  \"SRCHPDS\" INTERCEPT        11/83 DBC\n         L     TABLBASE,DFOUNDDH-DFOUND(,TABLBASE) -->        11/83 DBC\n*                                  CONTROL TABLE              11/83 DBC\n         USING DYNAHEAD,TABLBASE   DCL ITS BASE               11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE FIRST SUMMARY MESSAGE.               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   STATBUF(11),=C'TABLE LIFE '                    11/83 DBC\n         L     R1,CLOCK            GET CURRENT TIME           11/83 DBC\n*                                  (SECONDS*1024)             11/83 DBC\n         S     R1,DYNACLOK         GET TABLE LIFE             11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC\n         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         SR    R0,R0               CLEAR AGAIN                11/83 DBC\n         D     R0,=F'60'           CNVRT TO HOURS(R1) & MINS  11/83 DBC\n         BAL   R14,ZONEIT          CNVRT HOURS TO EBCDIC      11/83 DBC\n         MVC   STATBUF+11(*-*),0(R1) (EXECUTED)               11/83 DBC\n         EX    R15,*-6             COPY TO MSG L-J            11/83 DBC\n         LA    R5,STATBUF+12(R15)  LOAD SCANNER               11/83 DBC\n         MVI   0(R5),C':'          DELIMITER                  11/83 DBC\n         CVD   R0,DWORK            CNVRT MINS TO DECIMAL      11/83 DBC\n         UNPK  1(2,R5),DWORK(8)    ZONE IT                    11/83 DBC\n         OI    2(R5),C'0'          FIX THE FUCKING SIGN       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   3(10,R5),=C', ENTRIES '                        11/83 DBC\n         LM    R1,R3,DYNAFIRS      LOAD TABLE DESCRIPTOR      11/83 DBC\n         LR    R0,R1               SAVE SO-TABLE              11/83 DBC\nENTCNT   CLI   DENTNAME-DYNL(R1),0 UNUSED SLOT YET?           04/84 JLC\n         BE    ENTCNTZ             YES, DONE HERE             11/83 DBC\n         BXLE  R1,R2,ENTCNT        NO, KEEP SCANNING          11/83 DBC\nENTCNTZ  SR    R1,R0               YES, GET LIST SIZE         11/83 DBC\n         SR    R0,R0               CLEAR FIR DIVIDE           11/83 DBC\n         DR    R0,R2               GET # USED SLOTS           11/83 DBC\n         BAL   R14,ZONEIT          CONVERT IT TO EBCDIC       11/83 DBC\n         MVC   13(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY IT JEFT JUSTIFIED     11/83 DBC\n         LA    R5,14(R15,R5)       ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CL    R5,=A(STATBUF+L'STATBUF) BUFFER OVERFLOW?      11/83 DBC\n         #DIE  H                   YES, DESIGN ERROR          11/83 DBC\n         LA    R1,STATBUF          NO, --> SO-BUFFER          11/83 DBC\n         SR    R5,R1               GET L'MSG                  11/83 DBC\n         STC   R5,STATBUF-1        STORE FOR OUTPUT ROUTINES  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DISPLAY THE FIRST SUMMARY MESSAGE TO THE           * 11/83 DBC\n*        OPERATORS.                                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CH    R5,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC\n         BNH   STATLNOK            NO, PROCEED                11/83 DBC\n         LA    R5,WTOMAXL-9        YES, RESET                 11/83 DBC\nSTATLNOK MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC\n         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF COPY     11/83 DBC\n         LA    R5,9(,R5)           ADJ L'MSG                  11/83 DBC\n         STC   R5,WTOBUF+L'WTOHEAD-1 STORE FOR \"PUTWTO\"       11/83 DBC\n         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE SECOND SUMMARY MESSAGE.              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   STATBUF2(5),=C'HITS '                          11/83 DBC\n         L     R7,DYNAHITS         LOAD TOTAL HITS COUNT      11/83 DBC\n         LR    R1,R7               COPY FOR CONVERSION        11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   STATBUF2+5(*-*),0(R1) (EXECUTED)               11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R5,STATBUF2+6(R15)  ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   0(9,R5),=C', MISSES '                          11/83 DBC\n         ICM   R2,15,DYNAMISS      LOAD TOTAL MISSES; ANY?    11/83 DBC\n         BZ    NO2NDMSG            NO, NO USAGE               11/83 DBC\n         LR    R1,R2               COPY FOR CONVERSION        11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   9(*-*,R5),0(R1)     (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R5,10(R15,R5)       ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   0(13,R5),=C' (GOOD NAMES '                     11/83 DBC\n         L     R3,DYNADDED         GET STEAL COUNT            11/83 DBC\n         LR    R1,R3               COPY FOR CONVERSION        11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   13(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R5,14(R15,R5)       ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   0(12,R5),=C', BAD NAMES '                      11/83 DBC\n         LR    R1,R2               GET MISS COUNT             11/83 DBC\n         SR    R1,R3               SUBTR STEAL COUNT          11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   12(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R5,13(R15,R5)       ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   0(12,R5),=C'), HIT RATE ' YES                  11/83 DBC\n         AR    R2,R7               TOTAL USE COUNT            11/83 DBC\n         MH    R7,=H'1000'         SHIFT THE DECIMAL PLACE    11/83 DBC\n         SR    R6,R6               CLEAR FOR DIVIDE           11/83 DBC\n         DR    R6,R2               GET HIT RATE TO A 10TH OF  11/83 DBC\n*                                  A PERCENT                  11/83 DBC\n         SR    R1,R1               CLEAR ROUNDER              11/83 DBC\n         AR    R6,R6               DOUBLE THE REMAINDER       11/83 DBC\n         CR    R6,R2               NEED TO ROUND UP?          11/83 DBC\n         BL    NOROUNUP            NO, SKIP                   11/83 DBC\n         LA    R1,1                YES, RESET THE ROUNDER     11/83 DBC\nNOROUNUP AR    R1,R7               COPY AND ROUND FOR CNVRSN  11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   12(*-*,R5),0(R1)    (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R5,12(R15,R5)       --> LAST DIGIT (\"10THS\")   11/83 DBC\n         MVC   1(1,R5),0(R5)       MOVE IT OUT OF THE WAY     11/83 DBC\n         MVI   0(R5),C'.'          INSERT DECIMAL POINT       11/83 DBC\n         MVI   2(R5),C'%'          INSERT PERCENT SIGN        11/83 DBC\n         LA    R5,3(,R5)           ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CL    R5,=A(STATBUF2+L'STATBUF2) BUFFER OVERFLOW?    11/83 DBC\n         #DIE  H                   YES, DESIGN ERROR          11/83 DBC\n         LA    R1,STATBUF2         NO, --> SO-BUFFER          11/83 DBC\n         SR    R5,R1               GET L'MSG                  11/83 DBC\n         STC   R5,STATBUF2-1       STORE FOR OUTPUT ROUTINES  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DISPLAY THE SECOND SUMMARY MESSAGE TO THE          * 11/83 DBC\n*        OPERATORS.                                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CH    R5,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC\n         BNH   STATLOK2            NO, PROCEED                11/83 DBC\n         LA    R5,WTOMAXL-9        YES, RESET                 11/83 DBC\nSTATLOK2 MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC\n         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF2 COPY    11/83 DBC\n         LA    R5,9(,R5)           ADJ L'MSG                  11/83 DBC\n         STC   R5,WTOBUF+L'WTOHEAD-1 STORE FOR \"PUTWTO\"       11/83 DBC\n         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC\nNO2NDMSG DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CONSTRUCT THE THIRD SUMMARY MESSAGE.               * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   STATBUF3(14),=C'MAX ENTRY AGE ' TEXT           11/83 DBC\n         LM    R5,R7,DYNAFIRS      DYNA-TABLE DESCRIPTOR      11/83 DBC\n         USING DYNL,R5             DCL SLOT BASE              11/83 DBC\n         ICM   R0,15,DYNLCLOK      ANY SLOTS USED?            11/83 DBC\n         BZ    NO3RDMSG            NO, SKIP THIS MSG          11/83 DBC\nMXAGESCN CL    R0,DYNLCLOK         YES, ALREADY GOT OLDEST    11/83 DBC\n*                                  BIRTHDATE?                 11/83 DBC\n         BNH   MXAGENXT            YES, SKIP                  11/83 DBC\n         ICM   R1,15,DYNLCLOK      NO, GET OLDEST; EO-USED?   11/83 DBC\n         BZ    MXAGEGOT            YES, DONE HERE             11/83 DBC\n         LR    R0,R1               NO, COPY                   11/83 DBC\nMXAGENXT BXLE  R5,R6,MXAGESCN      CONTINUE SCANNING          11/83 DBC\n         DROP  R5                  RELEASE SLOT BASE          11/83 DBC\nMXAGEGOT L     R1,CLOCK            GET CURRENT TIME           11/83 DBC\n         SR    R1,R0               CNVRT BIRTHDATE TO AGE     11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC\n         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   STATBUF3+14(*-*),0(R1) (EXECUTED)              11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R4,STATBUF3+15(R15) ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   0(30,R4),=C' MINUTES, MAX ENTRY IDLE TIME '    11/83 DBC\n         LM    R5,R7,DYNAFIRS      DYNA-TABLE DESCRIPTOR      11/83 DBC\n         USING DYNL,R5             DCL SLOT BASE              11/83 DBC\n         L     R0,DYNLLRU#         PRINT LIMIT TESTER         11/83 DBC\nMXIDLELP CL    R0,DYNLLRU#         ALREADY GOT MOST IDLE?     11/83 DBC\n         BNH   MXIDLENX            YES, SKIP                  11/83 DBC\n         ICM   R1,15,DYNLLRU#      NO, GET MOST IDLE; EO-USD? 11/83 DBC\n         BZ    MXIDLEGO            YES, DONE HERE             11/83 DBC\n         LR    R0,R1               NO, COPY                   11/83 DBC\nMXIDLENX BXLE  R5,R6,MXIDLELP      CONTINUE SCANNING          11/83 DBC\n         DROP  R5                  RELEASE SLOT BASE          11/83 DBC\nMXIDLEGO L     R1,CLOCK            GET CURRENT TIME           11/83 DBC\n         SR    R1,R0               CNVRT IDLE TIME TO INTERVA 11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC\n         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   30(*-*,R4),0(R1)    (EXECUTED)                 11/83 DBC\n         EX    R15,*-6             COPY TO MSG                11/83 DBC\n         LA    R4,31(R15,R4)       ADVANCE SCANNER            11/83 DBC\n         MVC   0(8,R4),=C' MINUTES' MORE TEXT                 11/83 DBC\n         LA    R4,8(,R4)           ADVANCE SCANNER            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CL    R4,=A(STATBUF3+L'STATBUF3) BUFFER OVERFLOW?    11/83 DBC\n         #DIE  H                   YES, DESIGN ERROR          11/83 DBC\n         LA    R1,STATBUF3         NO, --> SO-BUFFER          11/83 DBC\n         SR    R4,R1               GET L'MSG                  11/83 DBC\n         STC   R4,STATBUF3-1       STORE FOR OUTPUT ROUTINES  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DISPLAY THE THIRD SUMMARY MESSAGE TO THE           * 11/83 DBC\n*        OPERATORS.                                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CH    R4,=Y(WTOMAXL-9)    TOO LONG?                  11/83 DBC\n         BNH   STATLOK3            NO, PROCEED                11/83 DBC\n         LA    R4,WTOMAXL-9        YES, RESET                 11/83 DBC\nSTATLOK3 MVC   WTOBUF+L'WTOHEAD(9),=C'DYNABLDL ' INSERT ID    11/83 DBC\n         MVC   WTOBUF+L'WTOHEAD+9(WTOMAXL-9),STATBUF3 COPY    11/83 DBC\n         LA    R4,9(,R4)           ADJ L'MSG                  11/83 DBC\n         STC   R4,WTOBUF+L'WTOHEAD-1 STORE FOR \"PUTWTO\"       11/83 DBC\n         #PUT  WTOBUF+L'WTOHEAD    DISPLAY THE MESSAGE        11/83 DBC\nNO3RDMSG DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        ATTEMPT TO OPEN SYSPRINT AND WRITE TITLE AND       * 11/83 DBC\n*        STATUS LINES.                                      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R1,SET24            BRANCH ADDRESS             03/88 JW\n         BSM   0,R1                SET MODE                   03/88 JW\nSET24    EQU   *\n         OPEN  (SYSPRINT,OUTPUT)   ATTEMPT THE OPEN           11/83 DBC\n         TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN OPENED?      11/83 DBC\n         BZ    NOSYSP              NO, EXIT                   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  DYNATIT,SUBAD=PUTSYSP YES, SEND TITLE          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  NULL                SEND SPACER                11/83 DBC\n         #PUT  STATBUF             SEND SUMMARY MESSAGE       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  STATBUF2            PRINT 2ND MSG, IF ANY      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  STATBUF3            PRINT 3RD MSG, IF ANY      11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DETERMINE THE LOCATION AND SIZE OF THE DYNAMIC     * 11/83 DBC\n*        BLDL TABLE, AND THEN GETMAIN A LOCAL AREA THAT IS  * 11/83 DBC\n*        LARGE ENOUGH TO HOLD THREE COPIES.                 * 05/84 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LM    R5,R7,DYNAFIRS      LOAD THE TABLE DESCRIPTOR  11/83 DBC\n         LR    R1,R5               COPY SCANNER               11/83 DBC\nSIZESCAN CLI   DENTNAME-DYNL(R1),0 EMPTY SLOT YET?            04/84 JLC\n         BE    SIZEGOTN            YES, SIZE FOUND            11/83 DBC\n         BXLE  R1,R6,SIZESCAN      NO, CONTINUE SCANNING      11/83 DBC\nSIZEGOTN SR    R1,R5               EMPTY SLOT FOUND; GET      11/83 DBC\n*                                  TABLE SIZE; EMPTY?         11/83 DBC\n         BNP   EMPTY               YES, EXIT WITH MSG         11/83 DBC\n         LR    R7,R1               NO, SAVE TABLE SIZE        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R0,0(R1,R1)         DOUBLE IT                  11/83 DBC\n         AR    R0,R1               TRIPLE IT                  11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ST    R0,RTBLSIZE         SAVE FOR FREEMAIN          11/83 DBC\n         GETMAIN R,LV=(0)          GET A LOCAL AREA           11/83 DBC\n         ST    R1,RTBLPTR          SAVE FOR FREEMAIN          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        NOW MAKE THE FIRST COPY OF THE ACTIVE TABLE, AND   * 11/83 DBC\n*        DETERMINE POINTERS TO WHERE THE OTHER TWO COPIES   * 11/83 DBC\n*        WILL GO.                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R3,R1               SAVE 1ST COPY POINTER      11/83 DBC\n         LR    R14,R5              --> COPY SOURCE            11/83 DBC\n         LR    R15,R7              GET ITS LENGTH             11/83 DBC\n         LR    R0,R3               --> COPY SINK              11/83 DBC\n         LR    R1,R7               GET ITS LENGTH             11/83 DBC\n         MVCL  R0,R14              MAKE THE 1ST COPY          11/83 DBC\n         LR    R4,R0               SAVE SECOND COPY POINTER   11/83 DBC\n         LA    R5,0(R7,R4)         GET 3RD COPY POINTER       11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SORT THE FIRST COPY OF THE DYNA-TABLE IN           * 11/83 DBC\n*        DESCENDING ORDER BY HITS COUNT.                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R15,R7              GET L'LIST                 11/83 DBC\n         LR    R0,R6               GET L'ENTRY                11/83 DBC\n         LR    R1,R3               GET A(LIST)                11/83 DBC\n         LA    R2,SORTHITS         --> COMPARE ROUTINE        11/83 DBC\n         BAL   R14,SORT            SORT THE MOTHER            11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CREATE AND SORT THE L.R.U. ORDERED LIST.           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R14,R4              --> COPY SINK              11/83 DBC\n         LR    R15,R7              GET L'SINK                 11/83 DBC\n         LR    R0,R3               --> COPY SOURCE            11/83 DBC\n         LR    R1,R7               GET L'COPY SOURCE          11/83 DBC\n         MVCL  R14,R0              MAKE THE 2ND COPY          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R15,R7              GET L'LIST                 11/83 DBC\n         LR    R0,R6               GET L'ENTRY                11/83 DBC\n         LR    R1,R4               GET A(LIST)                11/83 DBC\n         LA    R2,SORTLRU          --> COMPARE ROUTINE        11/83 DBC\n         BAL   R14,SORT            SORT THE LIST              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        CREATE AND SORT THE NAME ORDERED LIST.             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R14,R5              --> COPY SINK              11/83 DBC\n         LR    R15,R7              GET L'SINK                 11/83 DBC\n         LR    R0,R3               --> COPY SOURCE            11/83 DBC\n         LR    R1,R7               GET L'COPY SOURCE          11/83 DBC\n         MVCL  R14,R0              MAKE THE 3RD COPY          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R15,R7              GET L'LIST                 11/83 DBC\n         LR    R0,R6               GET L'ENTRY                11/83 DBC\n         LR    R1,R5               GET A(LIST)                11/83 DBC\n         LA    R2,SORTNAME         --> COMPARE ROUTINE        11/83 DBC\n         BAL   R14,SORT            SORT THE LIST              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        PRINT THE TABLE TITLE LINES.                       * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  NULL                SPACE                      11/83 DBC\n         #PUT  NULL                SPACE                      11/83 DBC\n         #PUT  SORTTIT             TITLE                      11/83 DBC\n         #PUT  SORTTIT0            SUB-TITLE                  08/84 DBC\n         #PUT  SORTSUBT            SUB-TITLE                  11/83 DBC\n         #PUT  INFOBUF             BARRED SPACER              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SCAN THE THREE TABLES SIMULTANIOUSLY TO GENERATE   * 11/83 DBC\n*        THE THREE REPORTS IN 3-COLUMN FORMAT.              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R2,INFOBUF          --> MSG BUFFER             11/83 DBC\n         USING INFO,R2             DECLARE A BASE FOR IT      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         AR    R7,R3               --> PAST 1ST TABLE         11/83 DBC\n         SR    R7,R6               --> LAST ENTRY (BXLE LIM)  11/83 DBC\n         SPACE 1                                              11/83 DBC\nINFOLOOP MVI   INFO,C' '           CLEAR THE -                11/83 DBC\n         MVC   INFO+1(INFOLEN-1),INFO MESSAGE BUFFER          11/83 DBC\n         MVI   NAMEBAR,C'|'        INSERT GUTTER              11/83 DBC\n         MVI   HITSBAR,C'|'        INSERT GUTTER              11/83 DBC\n         MVI   LRUBAR,C'|'         INSERT GUTTER              11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R1,1                GET INCRIMENT              11/83 DBC\n         AH    R1,COUNTER          INCRIMENT LINE COUNTER     11/83 DBC\n         STH   R1,COUNTER          STORE NEW VALUE            11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   COUNT,0(R1)         COPY TO MSG L-J            11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        FORMAT INFO FROM THE HITS SORTED TABLE.            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R3             DCL TABLE ENTRY BASE       11/83 DBC\n         MVC   HITSNAME,DENTNAME   MEMBER NAME                11/83 DBC\n         SPACE 1                                              08/84 DBC\n         MVI   HITSRENT,C' '       CLEAR RENT SIGNAL          08/84 DBC\n         TM    PDS2ATR-PDS2+DENT,PDS2RENT REENTRANT MODULE?   08/84 DBC\n         BZ    HINORENT            NO, SKIP                   08/84 DBC\n         MVI   HITSRENT,C'*'       YES, SIGNAL THAT FACT      08/84 DBC\nHINORENT DS    0H                                             08/84 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,CLOCK            CURRENT TIME (APPROX       11/83 DBC\n*                                  SECONDS*1024)              11/83 DBC\n         S     R1,DYNLLRU#         CNVRT TO INTERVAL          11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC\n         LA    R1,30(,R1)          ADJUST FOR ROUNDING        11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC\n         MVC   HITSIDLE,ZONEBUF+L'ZONEBUF-L'HITSAGE COPY      11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'HITSIDLE-1,C' ' OVERFLOW?  11/83 DBC\n         BE    HIFITS              NO, SKIP                   11/83 DBC\n         MVC   HITSIDLE,=10C'*'    YES, \"SAY SO\"              11/83 DBC\nHIFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,CLOCK            CURRENT TIME (APPROX       11/83 DBC\n*                                  SECONDS*1024)              11/83 DBC\n         S     R1,DYNLCLOK         CNVRT TO INTERVAL          11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO SECONDS           11/83 DBC\n         LA    R1,30(,R1)          ADJUST FOR ROUNDING        11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC\n         MVC   HITSAGE,ZONEBUF+L'ZONEBUF-L'HITSAGE COPY       11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'HITSAGE-1,C' ' OVERFLOW?   11/83 DBC\n         BE    HAFITS              NO, SKIP                   11/83 DBC\n         MVC   HITSAGE,=10C'*'     YES, \"SAY SO\"              11/83 DBC\nHAFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   HITSHITS,ZONEBUF+L'ZONEBUF-L'HITSHITS COPY     11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'HITSHITS-1,C' ' OVERFLOW?  11/83 DBC\n         BE    HHFITS              NO, PROCEED                11/83 DBC\n         MVC   HITSHITS,=10C'*'    YES, SIGNAL THAT           11/83 DBC\nHHFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  R3                  RELEASE HITS TABLE ENT BAS 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        FORMAT INFO FROM THE L.R.U. SORTED TABLE.          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R4             DCL TABLE ENTRY BASE       11/83 DBC\n         MVC   LRUNAME,DENTNAME    MEMBER NAME                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,CLOCK            CRNT TIME IN SECS*1024     11/83 DBC\n         S     R1,DYNLLRU#         CNVRT TO IDLE INTERVAL     11/83 DBC\n         SRL   R1,CLOKSHFT         CNVRT TO APPROX SECS       11/83 DBC\n         LA    R1,30(,R1)          ADD ROUNDER                11/83 DBC\n         SR    R0,R0               CLEAR FOR DIVIDE           11/83 DBC\n         D     R0,=F'60'           CNVRT TO MINUTES           11/83 DBC\n         BAL   R14,ZONEIT          CNVRT MM TO EBCDIC         11/83 DBC\n         MVC   LRUIDLE,ZONEBUF+L'ZONEBUF-L'LRUIDLE  COPY      11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'LRUIDLE-1,C' ' OVERFLOW?   11/83 DBC\n         BE    LUFITS              NO, PROCEED                11/83 DBC\n         MVC   LRUIDLE,=10C'*'     YES, SAY SO                11/83 DBC\nLUFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   LRUHITS,ZONEBUF+L'ZONEBUF-L'LRUHITS COPY       11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'LRUHITS-1,C' ' OVERFLOW?   11/83 DBC\n         BE    LHFITS              NO, PROCEED                11/83 DBC\n         MVC   LRUHITS,=10C'*'     YES, SIGNAL THAT           11/83 DBC\nLHFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  R4                  RELEASE DURA TABLE ENT BAS 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        FORMAT INFO FROM THE NAMES SORTED TABLE.           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R5             DCL TABLE ENTRY BASE       11/83 DBC\n         MVC   NAMENAME,DENTNAME   MEMBER NAME                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SR    R1,R1               CLEAR FOR INSERT           11/83 DBC\n         IC    R1,DENTCNCT         GET LIB#                   11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   NAMELIB#,0(R1)      COPY TO MSG                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,DYNLHITS         LOAD HITS COUNTER          11/83 DBC\n         BAL   R14,ZONEIT          CNVRT TO EBCDIC            11/83 DBC\n         MVC   NAMEHITS,ZONEBUF+L'ZONEBUF-L'NAMEHITS COPY     11/83 DBC\n         CLI   ZONEBUF+L'ZONEBUF-L'NAMEHITS-1,C' ' OVERFLOW?  11/83 DBC\n         BE    NHFITS              NO, PROCEED                11/83 DBC\n         MVC   NAMEHITS,=10C'*'    YES, SIGNAL THAT           11/83 DBC\nNHFITS   DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  R5                  RELEASE NAME TABLE ENT BAS 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DISPLAY THE MESSAGE AND THEN LOOP FOR THE NEXT     * 11/83 DBC\n*        ENTRIES.                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #PUT  INFOBUF             DISPLAY THE MSG            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         AR    R4,R6               ADVANCE 2ND TABLE SCANNER  11/83 DBC\n         AR    R5,R6               ADVANCE 3RD TABLE SCANNER  11/83 DBC\n         BXLE  R3,R6,INFOLOOP      ADVANCE 1ST TBL SCNR & LOO 11/83 DBC\n         DROP  R2                  RELEASE MSG BUFFER BASE    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DONE. FREEMAIN AND EXIT.                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LM    R0,R1,RTBLSIZE      LOAD REPORT AREA DESCRIPTR 11/83 DBC\n         FREEMAIN R,LV=(0),A=(1)   FREE IT                    11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SR    R1,R1               SINGAL NO TERMINATION MSG  11/83 DBC\n         B     EXIT0               GO EXIT                    11/83 DBC\n         DROP  TABLBASE            RELEASE CONTROL TABLE BASE 11/83 DBC\n         TITLE 'VARIOUS TERMINATION SETUPS'                   11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        THE FOLLOWING ARE VARIOUS TERMINATION SETUP        * 11/83 DBC\n*        ROUTINES.                                          * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 3                                              11/83 DBC\nBADSTRUC BAL   R1,EXIT16                                      11/83 DBC\n         DC    AL1(L'MBADSTRU)                                11/83 DBC\nMBADSTRU DC    C'DYNABLDL CANNOT FIND THE PROPER HOOK POINTS IN THE VER*\n               SION OF IGC018 INSTALLED ON THIS SYSTEM'       11/83 DBC\n         SPACE 3                                              11/83 DBC\nDONEB4   BAL   R1,EXIT4                                       11/83 DBC\n         DC    AL1(L'MDONEB4)                                 11/83 DBC\nMDONEB4  DC    C'DYNABLDL IS ALREADY ACTIVE'                  11/83 DBC\n         SPACE 3                                              11/83 DBC\nMESS     BAL   R1,EXIT8                                       11/83 DBC\n         DC    AL1(L'MMESS)                                   11/83 DBC\nMMESS    DC    C'DYNABLDL IS ALREADY PARTIALLY ACTIVE - IT MUST BE STOP*\n               PED AND THEN STARTED'                          11/83 DBC\n         SPACE 3                                              11/83 DBC\nSTOPDB4  BAL   R1,EXIT0                                       11/83 DBC\n         DC    AL1(L'MSTOPDB4)                                11/83 DBC\nMSTOPDB4 DC    C'DYNABLDL IS ALREADY STOPPED'                 11/83 DBC\n         SPACE 3                                              11/83 DBC\nDOWN     BAL   R1,EXIT8                                       11/83 DBC\n         DC    AL1(L'MDOWN)                                   11/83 DBC\nMDOWN    DC    C'DYNABLDL IS NOT ACTIVE'                      11/83 DBC\n         SPACE 3                                              11/83 DBC\nUNRECOGN BAL   R1,EXIT16                                      11/83 DBC\n         DC    AL1(L'MUNRECOG)                                11/83 DBC\nMUNRECOG DC    C'DYNABLDL IS UNABLE TO RECOGNIZE THE VERSION OF IGC018 *\n               INSTALLED ON THIS SYSTEM'                      11/83 DBC\n         SPACE 3                                              11/83 DBC\nINVALID  BAL   R1,EXIT16                                      11/83 DBC\n         DC    AL1(L'MINVALID)                                11/83 DBC\nMINVALID DC    C'DYNABLDL PARM FIELD IS INVALID - ONLY START, STOP, OR *\n               REPORT MAY BE SPECIFIED'                       11/83 DBC\n         SPACE 3                                              11/83 DBC\nSTARTED  BAL   R1,EXIT0                                       11/83 DBC\n         DC    AL1(L'MSTARTED)                                11/83 DBC\nMSTARTED DC    C'DYNABLDL STARTED'                            11/83 DBC\n         SPACE 3                                              11/83 DBC\nSTOPPED  BAL   R1,EXIT0                                       11/83 DBC\n         DC    AL1(L'MSTOPPED)                                11/83 DBC\nMSTOPPED DC    C'** DYNABLDL STOPPED **'                      11/83 DBC\n         SPACE 3                                              11/83 DBC\nPARTSTOP BAL   R1,EXIT4                                       11/83 DBC\n         DC    AL1(L'MPARTSTO)                                11/83 DBC\nMPARTSTO DC    C'DYNABLDL STOPPED BUT THE DYNAMIC BLDL TABLE COULD NOT *\n               BE FREED'                                      11/83 DBC\n         SPACE 3                                              11/83 DBC\nEMPTY    BAL   R1,EXIT0                                       11/83 DBC\n         DC    AL1(L'MEMPTY)                                  11/83 DBC\nMEMPTY   DC    C'DYNABLDL TABLE IS EMPTY'                     11/83 DBC\n         SPACE 3                                              11/83 DBC\nNOSYSP   SR    R1,R1               SIGNAL NO MESSAGE          11/83 DBC\n         B     EXIT4               EXIT                       11/83 DBC\n         TITLE 'TERMINATION'                                  11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        CLEAN UP AND EXIT PROCESSING                       * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        COMPLETION CODE VECTOR                             * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nEXIT16   BAL   R0,EXIT             COMPLETION 16              11/83 DBC\nEXIT12   BAL   R0,EXIT             COMPLETION 12              11/83 DBC\nEXIT8    BAL   R0,EXIT             COMPLETION 8               11/83 DBC\nEXIT4    BAL   R0,EXIT             COMPLETION 4               11/83 DBC\nEXIT0    BAL   R0,EXIT             COMPLETION 0               11/83 DBC\nEXIT     LA    R15,EXIT            LOAD VECTOR BASE           11/83 DBC\n         SR    R15,R0              CNVRT TO COMPLETION CPODE  11/83 DBC\n         LA    R15,0(,R15)         PURIFY                     11/83 DBC\n         CH    R15,RCD             HIGHEST PRODUCED?          11/83 DBC\n         BNH   RCDZ                NO, KEEP HIGHER VALUE      11/83 DBC\n         STH   R15,RCD             YES, STORE NEW HIGH        11/83 DBC\nRCDZ     DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        IF SYSPRINT IS OPENED, THEN WRITE A COMPLETION     * 11/83 DBC\n*        MESSAGE, IF ANY, TO IT, AND THEN CLOSE IT.         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN IS IT OPEN?  11/83 DBC\n         BZ    NOPRT               NO, SKIP                   11/83 DBC\n         LTR   R2,R1               YES, IS THERE A            11/83 DBC\n*                                  TERMINATION MESSAGE?       11/83 DBC\n         BZ    NOPRTMSG            NO, SKIP                   11/83 DBC\n         #PUT  NULL,SUBAD=PUTSYSP  YES, SPACE A LINE          11/83 DBC\n         #PUT  NULL                SPACE ANOTHER LINE         11/83 DBC\n         #PUT  (R2)                PRINT THE MESSAGE          11/83 DBC\nNOPRTMSG DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CLOSE SYSPRINT            CLOSE THE FILE             11/83 DBC\n         FREEPOOL SYSPRINT         FREE ITS BUFFERS           11/83 DBC\n         LR    R1,R2               RESTORE MSG PTR            11/83 DBC\nNOPRT    DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        WRITE A COMPLETION MESSAGE, IF ANY, TO THE         * 11/83 DBC\n*        OPERATORS.                                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTR   R1,R1               IS THERE A FINAL MSG?      11/83 DBC\n         BZ    MSGZ                NO, SKIP                   11/83 DBC\n         #PUT  (R1),SUBAD=PUTWTO   YES, WRITE IT              11/83 DBC\nMSGZ     DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO PROBLEM MODE.                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,SUPER          IN SUPERVISOR STATE?       11/83 DBC\n         BZ    SUPERZ              NO, SKIP                   11/83 DBC\n         NI    FLAG,255-SUPER      YES, CLEAR AUDIT           11/83 DBC\n         MODESET MODE=PROB         RESUME PROBLEM MODE        11/83 DBC\nSUPERZ   DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DE-SERIALIZE                                       * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    FLAG,ENQED          SERIALIZED?                11/83 DBC\n         BZ    ENQEDZ              NO, SKIP                   11/83 DBC\n         NI    FLAG,255-ENQED      YES, CLEAR AUDIT           11/83 DBC\n         DEQ   MF=(E,SERIALIZ)     DEQ                        11/83 DBC\nENQEDZ   DS    0H                                             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RESTORE REGS AND RETURN TO CALLER                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LH    R15,RCD             LOAD COMPLETION CODE       11/83 DBC\n         #EXIT ((R14,R12)),RC=(R15) EXIT TO CALLER            11/83 DBC\n         TITLE 'PUTSYSP -- SEND MESSAGES TO A PRINT FILE'     11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        PUTSYSP -- THIS ROUTINE SEND MESSAGES TO A PRINT   * 11/83 DBC\n*        FILE. ALL RECFMS ARE SUPPORTED.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 POINTS TO A MESSAGE BLOCK.              * 11/83 DBC\n*              - R14 POINTS TO THE RETURN ADDRESS.          * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - IF THE SYSPRINT FILE IS OPEN, AND IF THE   * 11/83 DBC\n*                GIVEN MESSAGE IS NON-NULL, THEN THE        * 11/83 DBC\n*                MESSAGE IS WRITTEN TO SYSPRINT.            * 11/83 DBC\n*              - ALL REGISTERS ARE RESTORED.                * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTSYSP  TM    DCBOFLGS-IHADCB+SYSPRINT,DCBOFOPN SYSPRINT     11/83 DBC\n*                                  AVAILABLE?                 11/83 DBC\n         BZR   R14                 NO, RETURN DOING NOTHING   11/83 DBC\n         STM   R14,R2,SAVEPUTS     YES, SAVE REGISTERS        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SR    R2,R2               CLEAR FOR INSERT           11/83 DBC\n         ICM   R2,1,0(R1)          GET L'MSG; NULL?           11/83 DBC\n         BZ    PUTSRET             YES, RETURN DOING NOTHING  11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    DCBRECFM-IHADCB+SYSPRINT,DCBRECU NO, RECFM=U?  11/83 DBC\n         BNM   PUTRECU             YES, GO HANDLE             11/83 DBC\n         TM    DCBRECFM-IHADCB+SYSPRINT,DCBRECF NO, RECFM=F?  11/83 DBC\n         BO    PUTRECF             YES, GO HANDLE             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=V HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTRECV  LA    R0,4(,R2)           GET NEEDED LRECL           11/83 DBC\n         STH   R0,DCBLRECL-IHADCB+SYSPRINT STORE FOR PUT      11/83 DBC\n*                                  LOCATE                     11/83 DBC\n         PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R0,4(,R2)           GET REC LEN AGAIN          11/83 DBC\n         SLL   R0,16               SHIFT                      11/83 DBC\n         ST    R0,0(,R1)           STORE RDW                  11/83 DBC\n         L     R15,SAVEPUTS+12     --> MESSAGE                11/83 DBC\n         BCTR  R2,0                ADJ L'MSG FOR 'EX'         11/83 DBC\n         MVC   4(*-*,R1),1(R15)    (EXECUTED)                 11/83 DBC\n         EX    R2,*-6              COPY MSG TO BUFFER         11/83 DBC\n         B     PUTSRET             DONE HERE                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=F HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTRECF  PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC\n         LR    R0,R1               --> COPY SINK              11/83 DBC\n         LH    R1,DCBLRECL-IHADCB+SYSPRINT GET L'SINK         11/83 DBC\n         L     R14,SAVEPUTS+12     --> MSG BLOCK              11/83 DBC\n         LA    R14,1(,R14)         --> COPY SOURCE            11/83 DBC\n         LR    R15,R2              GET L'SOURCE               11/83 DBC\n         ICM   R15,8,=C' '         GET PADDING BYTE           11/83 DBC\n         MVCL  R0,R14              COPY MSG TO BUFFER         11/83 DBC\n         B     PUTSRET             DONE HERE                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=U HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTRECU  STH   R2,DCBLRECL-IHADCB+SYSPRINT STORE FOR PUT      11/83 DBC\n*                                  LOCATE                     11/83 DBC\n         PUT   SYSPRINT            GET NEXT RECORD SLOT       11/83 DBC\n         L     R15,SAVEPUTS+12     --> MSG BLOCK              11/83 DBC\n         BCTR  R2,0                ADJ L'MSG FOR 'EX'         11/83 DBC\n         MVC   0(*-*,R1),1(R15)    (EXECUTED)                 11/83 DBC\n         EX    R2,*-6              COPY MSG TO BUFFER         11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO CALLER                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTSRET  LM    R14,R2,SAVEPUTS     RESTORE REGISTERS          11/83 DBC\n         BR    R14                 RETURN                     11/83 DBC\n         TITLE 'PUTWTO -- ISSUE MESSAGES TO THE OPERATORS'    11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        PUTWTO -- THIS ROUTINE ISSUES MESSAGES TO THE      * 11/83 DBC\n*        OPERATORS.                                         * 11/83 DBC\n*                                                           * 11/83 DBC\n*        ROUTE CODES USED:                                  * 11/83 DBC\n*              - 2 IS \"MASTER CONSOLE INFORMATION\"          * 11/83 DBC\n*              - 11 IS \"PROGRAMMER INFORMATION\"             * 11/83 DBC\n*                                                           * 11/83 DBC\n*        DESCRIPTOR CODES USED:                             * 11/83 DBC\n*              - 4 IS \"SYSTEM STATUS\"                       * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 POINTS TO A MESSAGE BLOCK.              * 11/83 DBC\n*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - THE MESSAGE, IF NON-NULL, HAS BEEN ISSUED. * 11/83 DBC\n*              - ALL REGISTERS ARE RESTORED.                * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTWTO   STM   R14,R1,SAVEPUTW     SAVE REGISTERS             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SR    R15,R15             CLEAR FOR INSERT           11/83 DBC\n         ICM   R15,1,0(R1)         GET L'MSG; NULL?           11/83 DBC\n         BZ    PUTWRET             YES, RETURN TO CALLER      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   WTOBUF(L'WTOHEAD),WTOHEAD COPY HEADER FIELDS   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CH    R15,=Y(WTOMAXL)     NO, TOO LONG?              11/83 DBC\n         BNH   PUTWLNOK            NO, PROCEED                11/83 DBC\n         LA    R15,WTOMAXL         YES, TRUNCATE              11/83 DBC\nPUTWLNOK DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         BCTR  R15,0               ADJ FOR \"EX\"               11/83 DBC\n         MVC   WTOBUF+L'WTOHEAD(*-*),1(R1) (EXECUTED)         11/83 DBC\n         EX    R15,*-6             COPY MSG TO WTO BUFFER     11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R15,L'WTOHEAD+1(,R15) GET L'MSG+4              11/83 DBC\n         STH   R15,WTOBUF          STORE INTO PLIST           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R15,WTOBUF(R15)     --> PAST THE TEXT          11/83 DBC\n         MVC   0(L'WTOTAIL,R15),WTOTAIL COPY TRAILER FIELDS   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         WTO   MF=(E,WTOBUF)       ISSUE THE MSG              11/83 DBC\n         SPACE 1                                              11/83 DBC\nPUTWRET  LM    R14,R1,SAVEPUTW     RESTORE REGISTERS          11/83 DBC\n         BR    R14                 RETURN TO CALLER           11/83 DBC\n         TITLE 'SORT -- AN INPLACE-SORTING ROUTINE'           11/83 DBC\nSORT     #SORT CMPRID=(R2),SVID=SAVESORT                      11/83 DBC\n         TITLE 'SORTHITS/SORTLRU/SORTNAME -- VARIOUS SORTING COMPARISON*\n                ROUTINES'                                     11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        SORTHITS -- THIS COMPARISON ROUTINE SORTS DYNAMIC  * 11/83 DBC\n*        BLDL TABLE ENTRIES IN DESCENDING ORDER BY HITS     * 11/83 DBC\n*        COUNT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n*        SORTLRU -- THIS COMPARISON ROUTINE SORTS DYNAMIC   * 11/83 DBC\n*        BLDL TABLE ENTRIES IN L.R.U. ORDER - MOST TO LEAST * 11/83 DBC\n*        RECENTLY USED.                                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        SORTNAME -- THIS COMPARISON ROUTINE SORTS DYNAMIC  * 11/83 DBC\n*        BLDL TABLE ENTRIES IN ASCENDING ORDER BY MEMBER    * 11/83 DBC\n*        NAME.                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R6 POINTS TO A SEQUENTIALLY PRIOR TABLE    * 11/83 DBC\n*                ENTRY.                                     * 11/83 DBC\n*              - R7 POINTS TO A SEQUENTIALLY FOLLOWING      * 11/83 DBC\n*                TABLE ENTRY.                               * 11/83 DBC\n*              - R14 POINTS TO THE RETURN ADDRESS IN THE    * 11/83 DBC\n*                SORT ROUTINE.                              * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - THE TWO ENTRIES ARE SUITABLY COMPARED AND  * 11/83 DBC\n*                THE CONDITION CODE IS SET AS FOLLOWS:      * 11/83 DBC\n*                - CC=2 (I.E. IMPLIES \"HIGH\") INDICATES     * 11/83 DBC\n*                  THAT THE SORT ROUTINE MUST EXCHANGE THE  * 11/83 DBC\n*                  TWO TABLE ENTRIES.                       * 11/83 DBC\n*                - CC=0 OR 1 (I.E. IMPLIES \"EQUAL\" OR       * 11/83 DBC\n*                  \"LOW\") INDICATES THAT THE SORT ROUTINE   * 11/83 DBC\n*                  MUST NOT EXCHANGE THE TWO TABLE ENTRIES. * 11/83 DBC\n*              - ALL REGISTERS REMAIN UNCHANGED.            * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 3                                              11/83 DBC\nSORTHITS CLC   DYNLHITS-DYNL(,R7),DYNLHITS-DYNL(R6)           11/83 DBC\n         BNER  R14                                            11/83 DBC\n         CLC   DYNLLRU#-DYNL(,R7),DYNLLRU#-DYNL(R6)           11/83 DBC\n         BR    R14                                            11/83 DBC\n         SPACE 3                                              11/83 DBC\nSORTLRU  CLC   DYNLLRU#-DYNL(,R7),DYNLLRU#-DYNL(R6)           11/83 DBC\n         BR    R14                                            11/83 DBC\n         SPACE 3                                              11/83 DBC\nSORTNAME CLC   DENTNAME-DYNL(,R6),DENTNAME-DYNL(R7)           11/83 DBC\n         BR    R14                                            11/83 DBC\n         TITLE 'VERIFY -- CODE MATCH VERIFICATION ROUTINE'    11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        VERIFY -- THIS ROUTINE CHECKS A SECTION OF IGC018  * 11/83 DBC\n*        TO SEE IF ITS CONTENTS ARE AS EXPECTED.            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 POINTS TO A PLIST MAPPED BY THE         * 11/83 DBC\n*                \"ORIGINAL\" DSECT. THIS IDENTIFIES A        * 11/83 DBC\n*                LOCATION OF IGC018 AND ITS EXPECTED        * 11/83 DBC\n*                CONTENTS.                                  * 11/83 DBC\n*              - BLDLBASE POINTS TO IGC018.                 * 11/83 DBC\n*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - ERROR: THE CONTENTS OF IGC018 ARE NOT AS   * 11/83 DBC\n*                EXPECTED.                                  * 11/83 DBC\n*              - R14: THE HI-BITS MAY BE CHANGED.           * 11/83 DBC\n*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 4(,R14):                                    * 11/83 DBC\n*              - THE CONTENTS OF IGC018 ARE AS EXPECTED.    * 11/83 DBC\n*              - R14 IS INCRIMENTED BY 4.                   * 11/83 DBC\n*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING ORIGINAL,R1         DCL PLIST BASE             11/83 DBC\nVERIFY   STM   R14,R15,SAVEVERI    SAVE REGISTERS             11/83 DBC\n         LH    R15,ORIGLOC         GET OFFSET INTO IGC018     11/83 DBC\n         LA    R15,IGC018(R15)     GET LOCATION INTO IGC018   11/83 DBC\n         LH    R14,ORIGLEN         GET LENGTH TO CHECK        11/83 DBC\n         BCTR  R14,0               ADJ FOR \"EX-CLC\"           11/83 DBC\n         CLC   0(*-*,R15),ORIGCODE (EXECUTED)                 11/83 DBC\n         EX    R14,*-6             IS IGC018 AS EXPECTED?     11/83 DBC\n         BNE   VERIRET0            NO, RETURN +0              11/83 DBC\n*                                  YES, RETURN +4             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO CALLER                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         BAL   R15,VERIRET         +4 IGC018 IS AS EXPECTED   11/83 DBC\nVERIRET0 BAL   R15,VERIRET         +0 IGC018 IS NOT CORRECT   11/83 DBC\nVERIRET  LA    R14,VERIRET         LOAD VECTOR BASE           11/83 DBC\n         SR    R14,R15             GET RETURN OFFSET          11/83 DBC\n         A     R14,SAVEVERI        GET RETURN ADDRESS         11/83 DBC\n         L     R15,SAVEVERI+4      RESTORE REGISTER           11/83 DBC\n         BR    R14                 RETURN TO CALLER           11/83 DBC\n         DROP  R1                  RELEASE PLIST BASE         11/83 DBC\n         TITLE 'ZONEIT -- BINARY TO EBCDIC CONVERSION'        11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        ZONEIT -- THIS ROUTINE CONVERTS A BINARY NUMBER TO * 11/83 DBC\n*        A CHARACTER STRING THAT IS SUFFICIENTLY PADDED ON  * 11/83 DBC\n*        BOTH THE LEFT AND RIGHT WITH BLANKS. IF THE NUMBER * 11/83 DBC\n*        IS NEGATIVE, THEN THE STRING IS PREFIXED WITH A    * 11/83 DBC\n*        MINUS SIGN (-).                                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 CONTAINS THE NUMBER TO BE CONVERTED.    * 11/83 DBC\n*              - R14 POINTS TO THE RETURN ADDRESS.          * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - THE NUMBER HAS BEEN CONVERTED AS DESCRIBED * 11/83 DBC\n*                ABOVE.                                     * 11/83 DBC\n*              - ZONEBUF CONTAINS THE CHARACTER STRING      * 11/83 DBC\n*                RIGHT JUSTIFIED AND LEFT PADDED WITH       * 11/83 DBC\n*                BLANKS. ALSO, ZONEBUF IS TRAILED BLANKS.   * 11/83 DBC\n*              - R1 POINTS TO THE START OF THE CHARACTER    * 11/83 DBC\n*                STRING.                                    * 11/83 DBC\n*              - R15 CONTAINS THE LENGTH-1 OF THE CHARACTER * 11/83 DBC\n*                STRING.                                    * 11/83 DBC\n*              - ALL OTHER REGISTERS ARE UNCHANGED.         * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nZONEIT   CVD   R1,DWORK            CNVRT TO DECIMAL           11/83 DBC\n         MVI   ZONEBUF-1,C' '      LOAD LEFT PADDING BYTE     11/83 DBC\n         MVI   ZONEBUF,X'20'       LOAD EDIT CONTROL BYTE     11/83 DBC\n         MVC   ZONEBUF+1(L'ZONEBUF-1),ZONEBUF PROPAGATE IT    11/83 DBC\n         EDMK  ZONEBUF-1(L'ZONEBUF+1),DWORK CNVRT TO EBCDIC   11/83 DBC\n         BNZ   ZNOTZERO            JUMP IF VALUE WAS NOT 0    11/83 DBC\n         MVI   ZONEBUF+L'ZONEBUF-1,C'0' (WAS 0; STICK IT IN)  11/83 DBC\n         LA    R1,ZONEBUF+L'ZONEBUF-1 (SET STRING PTR)        11/83 DBC\nZNOTZERO BNM   ZNOTNEG             WASN'T NEGATIVE, SKIP      11/83 DBC\n         BCTR  R1,0                WAS NEG; BACK UP           11/83 DBC\n         MVI   0(R1),C'-'          INSERT SIGN                11/83 DBC\nZNOTNEG  DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R15,ZONEBUF+L'ZONEBUF-1 --> TO LAST CHARACTER  11/83 DBC\n         SR    R15,R1              GET L'STRING-1             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         BR    R14                 RETURN TO CALLER           11/83 DBC\n         TITLE 'DATA'                                         11/83 DBC\n         DROP  ,                   RELEASE ALL BASES          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        VERSIONS VECTOR                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSIONS DC    A(VERSN#01)                                    11/83 DBC\n         DC    A(VERSN#02)                                    11/83 DBC\n         DC    A(VERSN#03)                                    11/83 DBC\n         DC    A(VERSN#04)                                    11/83 DBC\n         DC    A(VERSN#05)                                    04/84 JLC\n         DC    A(VERSN#06)                                    05/84 DBC\n         DC    A(VERSN#07)                                    08/84 DBC\n         DC    A(VERSN#08)                                    06/84 WRH\n         DC    A(VERSN#09)                                    09/84 DBC\n         DC    A(VERSN#10)                                    01/85 DBC\n         DC    A(VERSN#11)                                    10/85 DBC\n         DC    A(VERSN#12)                                    10/85 DBC\n         DC    A(VERSN#13)                                    10/85 DBC\n         DC    A(VERSN#14)                                    03/88 SBG\n         DC    A(VERSN#15)                                    10/90 DBA\n         DC    A(0)                                           11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        LOCAL SOUBROUTINE SAVE AREAS                       * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSAVEPUTS DC    5A(0)               PUTSYSP                    11/83 DBC\nSAVEPUTW DC    4A(0)               PUTWTO                     11/83 DBC\nSAVESORT DC    16A(0)              SORT                       11/83 DBC\nSAVEVERI DC    2A(0)               VERIFY                     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        PARM FIELD ANALYSIS CONTROL DATA                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPARMS    DS    0X                  START OF TABLE (SORTED)    11/83 DBC\n         DC    AL4(START),AL2(0)                              11/83 DBC\n         DC    AL4(STOP),AL2(1),C'P'                          11/83 DBC\n         DC    AL4(REPORT),AL2(1),C'R'                        11/83 DBC\n         DC    AL4(START),AL2(1),C'S'                         11/83 DBC\n         DC    AL4(STOP),AL2(4),C'STOP'                       11/83 DBC\n         DC    AL4(START),AL2(5),C'START'                     11/83 DBC\n         DC    AL4(REPORT),AL2(6),C'REPORT'                   11/83 DBC\n         DC    AL4(INVALID),X'FF'                             11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRMHNDLR EQU   0,4                 A(HANDLER ROUTINE)         11/83 DBC\nPRMLEN   EQU   PRMHNDLR+L'PRMHNDLR,2 L'TEXT                   11/83 DBC\nPRMTEXT  EQU   PRMLEN+L'PRMLEN     TEXT                       11/83 DBC\nPRMROOTL EQU   PRMTEXT             ENTRY'S ROOT LENGTH        11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SERIALIZATION ENQ CONTROL DATA                     * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSERIALIZ ENQ   (QNAME,RNAME,E,L'RNAME,SYSTEM),RET=NONE,MF=L   11/83 DBC\nQNAME    DC    CL8'DYNABLDL'                                  11/83 DBC\nRNAME    DC    C'SERIALIZE'                                   11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        WTO MESSAGE BUFFER AND CONTROLS                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nWTOFLDS  WTO   ' ',ROUTCDE=(2,11),DESC=4,MF=L SKELETON        11/83 DBC\nWTOHEAD  EQU   WTOFLDS,4           HEADER FIELDS              11/83 DBC\nWTOTAIL  EQU   WTOHEAD+L'WTOHEAD+1,*-(WTOHEAD+L'WTOHEAD+1)    11/83 DBC\n*                                  TRAILER FIELDS             11/83 DBC\nWTOMAXL  EQU   124                 MAX WTO TEXT LENGTH        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DS    0F                  ALIGNMENT                  11/83 DBC\nWTOBUF   DC    XL(L'WTOHEAD+WTOMAXL+L'WTOTAIL)'00' BUFFER     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SYSPRINT CONTROL DATA                              * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         PRINT NOGEN                                          11/83 DBC\nSYSPRINT DCB   DDNAME=SYSPRINT,                               11/83 DBC*\n               DSORG=PS,                                      11/83 DBC*\n               MACRF=PL,                                      11/83 DBC*\n               OPTCD=C,                                       11/83 DBC*\n               BUFNO=5,                                       11/83 DBC*\n               EXLST=PRTXLIST                                 11/83 DBC\n         PRINT GEN                                            11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTXLIST DS    0F                  DCB EXIT LIST              11/83 DBC\n         DC    X'85',AL3(PRTEXIT)  DCB OPEN EXIT              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        HOOK SKELETONS                                     * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CNOP  0,4                 ALIGNMENT                  11/83 DBC\nSRCHPOHH BALR  R15,0               LOAD TEMP BASE             11/83 DBC\n         L     R15,SRCHPOAA-*(,R15) --> HOOK ROUTINE          11/83 DBC\n         BR    R15                 JUMP TO HOOK ROUTINE       11/83 DBC\nSRCHPOAA DC    AL4(SRCHPDS-SRCHPDS) --> HOOK ROUTINE          11/83 DBC\nSRCHPOHL EQU   *-SRCHPOHH          L'HOOK                     11/83 DBC\n         SPACE 3                                              11/83 DBC\n         CNOP  0,4                 ALIGNMENT                  11/83 DBC\nDFOUNDHH BALR  R15,0               LOAD TEMP BASE             11/83 DBC\n         L     R15,DFOUNDAA-*(,R15) --> HOOK ROUTINE          11/83 DBC\n         BR    R15                 JUMP TO HOOK ROUTINE       11/83 DBC\n         DC    CL8'DAVECOLE'       HOOK RECOGNITION STRING    11/83 DBC\nDFOUNDAA DC    AL4(DFOUND-DFOUND)  --> HOOK ROUTINE           11/83 DBC\nDFOUNDHL EQU   *-DFOUNDHH          L'HOOK                     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        HOOK RETURN CONTROL DATA                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCHPOXX DS    S                   BASE/DISPLACEMENT FOR      11/83 DBC\n*                                  RETURN FROM SRCHPDS HOOK   11/83 DBC\nDFOUNDXX DS    S                   BASE/DISPLACEMENT FOR      11/83 DBC\n*                                  RETURN FROM DFOUND HOOK    11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCHPOBC B     SRCHPOXX-SRCHPOXX   RETURN TO IGC018 FROM      11/83 DBC\n         @ZAP  (SRCHPOXX,-2)       SRCHPDS HOOK               11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFOUNDBC B     DFOUNDXX-DFOUNDXX   RETURN TO IGC018 FROM      11/83 DBC\n         @ZAP  (DFOUNDXX,-2)       DFOUND HOOK                11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        MISC DATA                                          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDWORK    DS    D                   DWORD WORK AREA            11/83 DBC\nCLOCK    DS    2F                  STCK BUFFER                11/83 DBC\n         SPACE 1                                              11/83 DBC\nRTBLSIZE DC    A(0)              | REPORTS TABLE SIZE         11/83 DBC\nRTBLPTR  DC    A(0)              V REPORTS TABLE ADDRESS      11/83 DBC\n         SPACE 1                                              11/83 DBC\nCOUNTER  DC    H'0'                REPORT LINES COUNTER       11/83 DBC\nRCD      DC    H'0'                PROGRAM COMPLETION CODE    11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DC    C' '                LEFT-PADDING BLANK         11/83 DBC\nZONEBUF  DS    CL(8*2-1)           EDMK SINK                  11/83 DBC\n         DC    CL(L'ZONEBUF-1)' '  RIGHT-PADDING BLANKS       11/83 DBC\n         SPACE 1                                              11/83 DBC\nPSWKEY   DS    X                   SAVE AREA                  11/83 DBC\n         SPACE 1                                              11/83 DBC\nFLAG     DC    B'00000000'         AUDIT FLAG                 11/83 DBC\nSUPER    EQU   B'10000000'         IN SUPERVISOR STATE        11/83 DBC\nKEY0     EQU   B'01000000'         IN KEY ZERO                11/83 DBC\nENQED    EQU   B'00100000'         SERIALIZED                 11/83 DBC\nSRCHPO00 EQU   B'00010000'         THE SRCHPDS HOOK HAS NOT   11/83 DBC\n*                                  NOT NOT BEEN SET           11/83 DBC\nDFOUND00 EQU   B'00001000'         THE DFOUND HOOK HAS NOT    11/83 DBC\n*                                  NOT NOT BEEN SET           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTORG ,                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        MESSAGES                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(L'NULL)                                    11/83 DBC\nNULL     DC    C' '                                           11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(L'DYNATIT)                                 11/83 DBC\nDYNATIT  DC    C'DYNAMIC BLDL ACTIVITY REPORT'                11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DS    AL1                                            11/83 DBC\nSTATBUF  DS    CL(LEN3270)                                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(0)                                         11/83 DBC\nSTATBUF2 DS    CL(LEN3270)                                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(0)                                         11/83 DBC\nSTATBUF3 DS    CL(LEN3270)                                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(L'INFOBUF)                                 11/83 DBC\nINFOBUF  DC    CL(INFOLEN)' '                                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMEBAR-INFO+INFOBUF                           11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSBAR-INFO+INFOBUF                           11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUBAR-INFO+INFOBUF                            11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   ,                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(L'SORTTIT)                                 11/83 DBC\nSORTTIT  DC    CL(INFOLEN)' '                                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMEBAR-INFO+SORTTIT                           11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMENAME-INFO+SORTTIT                          11/83 DBC\n         DC    C'SORTED BY NAME'                              11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSBAR-INFO+SORTTIT                           11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSHITS-INFO+SORTTIT                          11/83 DBC\n         DC    C'SORTED BY HITS'                              11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUBAR-INFO+SORTTIT                            11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUIDLE-INFO+SORTTIT                           11/83 DBC\n         DC    C'SORTED BY L.R.U.'                            11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   ,                                              11/83 DBC\n         SPACE 3                                              08/84 DBC\n         DC    AL1(L'SORTTIT0)                                08/84 DBC\nSORTTIT0 DC    CL(INFOLEN)' '                                 08/84 DBC\n         SPACE 1                                              08/84 DBC\n         ORG   NAMEBAR-INFO+SORTTIT0                          08/84 DBC\n         DC    C'|'                                           08/84 DBC\n         SPACE 1                                              08/84 DBC\n         ORG   HITSBAR-INFO+SORTTIT0                          08/84 DBC\n         DC    C'|'                                           08/84 DBC\n         SPACE 1                                              08/84 DBC\n         ORG   HITSHITS-INFO+SORTTIT0                         08/84 DBC\n         DC    C'(* MEANS REENTRANT)'                         08/84 DBC\n         SPACE 1                                              08/84 DBC\n         ORG   LRUBAR-INFO+SORTTIT0                           08/84 DBC\n         DC    C'|'                                           08/84 DBC\n         SPACE 1                                              08/84 DBC\n         ORG   ,                                              08/84 DBC\n         SPACE 3                                              11/83 DBC\n         DC    AL1(L'SORTSUBT)                                11/83 DBC\nSORTSUBT DC    CL(INFOLEN)' '                                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   COUNT-INFO+SORTSUBT                            11/83 DBC\n         DC    C'CNT'                                         11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMEBAR-INFO+SORTSUBT                          11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMENAME-INFO+SORTSUBT                         11/83 DBC\n         DC    C'NAME'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMELIB#-1-INFO+SORTSUBT                       11/83 DBC\n         DC    C'LIB#'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   NAMEHITS+L'NAMEHITS-4-INFO+SORTSUBT            11/83 DBC\n         DC    C'HITS'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSBAR-INFO+SORTSUBT                          11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSHITS+L'HITSHITS-4-INFO+SORTSUBT            11/83 DBC\n         DC    C'HITS'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSIDLE+L'HITSIDLE-4-INFO+SORTSUBT            11/83 DBC\n         DC    C'IDLE'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSAGE+L'HITSAGE-3-INFO+SORTSUBT              11/83 DBC\n         DC    C'AGE'                                         11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   HITSNAME-INFO+SORTSUBT                         11/83 DBC\n         DC    C'NAME'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUBAR-INFO+SORTSUBT                           11/83 DBC\n         DC    C'|'                                           11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUIDLE+L'LRUIDLE-4-INFO+SORTSUBT              11/83 DBC\n         DC    C'IDLE'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUHITS+L'LRUHITS-4-INFO+SORTSUBT              11/83 DBC\n         DC    C'HITS'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   LRUNAME-INFO+SORTSUBT                          11/83 DBC\n         DC    C'NAME'                                        11/83 DBC\n         SPACE 1                                              11/83 DBC\n         ORG   ,                                              11/83 DBC\n         TITLE 'SRCHPDS -- IGC018 HOOK ROUTINE'               11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        SRCHPDS -- THIS ROUTINE RECEIVES CONTROL VIA A     * 11/83 DBC\n*        HOOK PLACED AT LABEL \"SRCHPDS\" IN IGC018. (IGC018  * 11/83 DBC\n*        BRANCHES TO \"SRCHPDS\" AFTER IT HAS SEARCHED THE    * 11/83 DBC\n*        RESIDENT BLDL TABLE AND WHEN IT IS READY TO READ   * 11/83 DBC\n*        THE PDS DIRECTORIES ON DISK). THIS INTERCEPT       * 11/83 DBC\n*        ROUTINE DETERMINES IF THE PDS DIRECTORIES ABOUT TO * 11/83 DBC\n*        BE SEARCHED ARE FOR THE LINKLIST LIBRARIES. IF SO, * 11/83 DBC\n*        THEN IT SCANS THE USER'S BLDL PLIST AGAINST ITS    * 11/83 DBC\n*        OWN DYNA-TABLE AND FILLS IN ALL USER REQUESTS FOR  * 11/83 DBC\n*        NAMES THAT ARE FOUND IN THE DYNA-TABLE. THUS DISK  * 11/83 DBC\n*        DIRECTORY SEARCHES FOR THOSE NAMES ARE BYPASSED.   * 11/83 DBC\n*                                                           * 11/83 DBC\n*        DURING DYNABLDL START PROCESSING, THE FOLLOWING IS * 11/83 DBC\n*        DONE.                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THIS ROUTINE IS COPIED TO GLOBAL, FIXED,   * 11/83 DBC\n*                KEY0, FETCH ACCESSABLE MEMORY (SP245).     * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - ALL ADCONS CONTAINED IN IT ARE RELOCATED.  * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - ALL REFERENCES TO IBM PRIVATE DATA FIELDS  * 11/83 DBC\n*                ARE ADJUSTED TO CORRESPOND TO THE CURRENT  * 11/83 DBC\n*                VERSION OF IGC018.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THIS ROUTINE IS APPENDED WITH AN EXACT     * 11/83 DBC\n*                COPY OF THE INSTRUCTIONS IN IGC018 (AT     * 11/83 DBC\n*                LABEL \"SRCHPDS\") THAT WERE OVERLAID BY THE * 11/83 DBC\n*                BRANCH TO THIS ROUTINE.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THOSE INSTRUCTIONS ARE APPENDED BY A       * 11/83 DBC\n*                BRANCH BACK TO IGC018 FOLLOWING THE        * 11/83 DBC\n*                OVERLAID INSTRUCTIONS.                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        STATIC INPUTS:                                     * 11/83 DBC\n*              - R15 POINTS TO THIS HOOK'S ENTRY ADDRESS.   * 11/83 DBC\n*              - R0 AND R1 ARE VOLITILE; THEY NEED NOT BE   * 11/83 DBC\n*                RESTORED.                                  * 11/83 DBC\n*              - ALL OTHER REGISTERS (INCLUDING R14), IF    * 11/83 DBC\n*                ALTERED, MUST BE RESTORED.                 * 11/83 DBC\n*              - THE \"RDAREA\" FIELD IN IGC018'S WORK AREA,  * 11/83 DBC\n*                SINCE IT IS ABOUT TO BE READ INTO BY EXCP, * 11/83 DBC\n*                IS AVAILABLE FOR LOCAL USE AT THIS TIME.   * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING SRCHPDS,R15         DCL LOCAL BASE             11/83 DBC\nSRCHPDS  DS    0F                  ALIGNMENT                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DETERMINE WHETHER OR NOT THE CURRENT SEARCH IS OF  * 11/83 DBC\n*        THE LINKLIST LIBRARIES.                            * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,CVTPTR           --> CVT                    11/83 DBC\n         LA    R0,0(,RDCB-RDCB)    GET CRNT DCB PTR           11/83 DBC\n         @ZAP  (RDCB,-2)                                      11/83 DBC\n         CL    R0,CVTLINK-CVTMAP(,R1) SEARCHING LINKLIST?     11/83 DBC\n         BNE   SRCHPOZZ            NO, IGNORE THIS CALL       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CLI   CONCAT#-CONCAT#,0   YES, 1ST PASS FOR THIS     11/83 DBC\n         @ZAP  (CONCAT#,-2)        PLIST?                     11/83 DBC\n         BNE   SRCHPOZZ            NO, DYNA-TABLE SEARCH      11/83 DBC\n*                                  ALREADY MADE; IGNORE THIS  11/83 DBC\n*                                  CALL                       11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SAVE IGC018'S ENVIRONMENT AND SET UP A LOCAL ONE.  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         STM   R2,R14,REGSAVE-DYNAWA+RDAREA-RDAREA SAVE       11/83 DBC\n         @ZAP  (RDAREA,-2)         IGC018'S REGISTERS         11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   USERKEY-DYNAWA+RDAREA-RDAREA,EXSKEY-EXSKEY     11/83 DBC\n         @ZAP  (RDAREA,-4),        SAVE IGC018'S USER'S KEY   11/83 DBC*\n               (EXSKEY,-2)                                    11/83 DBC\n         SPACE 1                                              09/84 DBC\n         MVC   BLDLFLG-DYNAWA+RDAREA-RDAREA,EXSFLG-EXSFLG     09/84 DBC\n         @ZAP  (RDAREA,-4),        SAVE IGC018'S CONTROL      09/84 DBC*\n               (EXSFLG,-2)         FLAGS                      09/84 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R1,0(,RLIST-RLIST)  COPY USER'S PLIST PTR TO A 11/83 DBC\n         @ZAP  (RLIST,-2)          SAFE REGISTER              11/83 DBC\n         USING BLDLIST,R1          DCL USER'S PLIST BASE      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R13,RDAREA-RDAREA   --> LOCAL WORK AREA        11/83 DBC\n         @ZAP  (RDAREA,-2)                                    11/83 DBC\n*                                  NOTE, DIRECT USE OF        11/83 DBC\n*                                  IGC018'S REGISTERS IS NOW  11/83 DBC\n*                                  NO LONGER SAFE.            11/83 DBC\n         USING DYNAWA,R13          DCL WORK AREA BASE         11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SAVE IGC018'S CURRENT KEY AND LOAD KEY-0.          * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         IPK   ,                   DETERMINE CURRENT KEY      11/83 DBC\n         STC   R2,KEYSAVE          SAVE IT                    11/83 DBC\n         SPKA  0                   SET KEY-0                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        GET BITS 10-41 OF THE CURRENT TOD CLOCK VALUE      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         STCK  CLOKSAVE            GET THE TOD CLOCK          11/83 DBC\n         LM    R2,R3,CLOKSAVE      LOAD IT                    11/83 DBC\n         SLDL  R2,CLOKSHFT         ISSOLATE BITS 10-41        11/83 DBC\n         ST    R2,CLOKSAVE         STORE BACK                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        PREPARE TO SCAN THE USER'S PLIST                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R2,BLDENT           --> 1ST PLIST ENTRY        11/83 DBC\n         USING PDS2,R2             DCL A BASE FOR IT          11/83 DBC\n         LH    R0,BLDENTS          GET ENTRY COUNT            11/83 DBC\n         LTR   R0,R0               NULL?                      11/83 DBC\n         BNP   SRCHRET             YES, EXIT BACK TO IGC018   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R8,SRCHPODH         NO, --> CONTROL TABLE      11/83 DBC\n         USING DYNAHEAD,R8         DCL A BASE FOR IT          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SEARCH THE DYNA-TABLE FOR EACH USER REQUESTED NAME * 11/83 DBC\n*        THAT HAS NOT ALREADY BEEN FOUND.                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nNAMELOOP CLI   PDS2TTRP+2,0        HAS THIS NAME BEEN FOUND?  11/83 DBC\n         BNE   NAMENEXT            YES, SKIP IT               11/83 DBC\n         TM    PDS2NAME+DYNLLOCK,UNLOCKED NO, BUT WILL THE    11/83 DBC\n*                                  NAME CONFUSE ME?           11/83 DBC\n         BZ    NAMEMISS            YES, IGNORE IT             11/83 DBC\n         LM    R3,R5,DYNAFIRS      NO, LOAD DYNA-TABLE DESCRI 11/83 DBC\n         USING DYNL,R3             DCL TABLE ENTRY BASE       11/83 DBC\n         SPACE 1                                              11/83 DBC\nDYNLSCAN CLC   PDS2NAME,DENTNAME   NAME FOUND IN TABLE?       11/83 DBC\n         BE    NAMEHIT             YES, GO PROCESS            11/83 DBC\n         BXLE  R3,R4,DYNLSCAN      NO, KEEP SEARCHING         11/83 DBC\n         DROP  R3                  NO, RELEASE TABLE ENTRY BA 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        A USER REQUESTED NAME WAS NOT FOUND IN THE         * 11/83 DBC\n*        DYNA-TABLE. COUNT THE MISS AND LOOP TO THE NEXT    * 11/83 DBC\n*        ENTRY IN THE USER'S PLIST.                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nNAMEMISS LA    R4,1                LOAD INCRIMENT             11/83 DBC\n         AL    R4,DYNAMISS         COUNT THE MISS             11/83 DBC\n         ST    R4,DYNAMISS         STORE BACK. NOTE, I DO NOT 11/83 DBC\n*                                  BOTHER WITH A 'CS' BECAUSE 11/83 DBC\n*                                  ABSOLUTE ACCURACY HERE IS  11/83 DBC\n*                                  NOT REALLY THAT IMPORTANT. 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         B     NAMENEXT            GO ADVANCE TO NEXT NAME    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        A USER REQUESTED NAME HAS BEEN FOUND IN THE        * 11/83 DBC\n*        DYNA-TABLE. ATTEMPT TO LOCK OWNERSHIP OF THE       * 11/83 DBC\n*        DYNA-TABLE SLOT.                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R3             RESTORE SLOT BASE          11/83 DBC\nNAMEHIT  LM    R4,R5,PDS2NAME      GET THE GIVEN NAME         11/83 DBC\n         LR    R6,R4               COPY                       11/83 DBC\n         LR    R7,R5               COPY                       11/83 DBC\n         X     R6,=A(UNLOCKED)     SET LOCK SIGNAL            11/83 DBC\n         #TEST SIZE=(DYNLLOCK,EQ,3) THE LOCK SIGNAL MUST BE   11/83 DBC*\n                                   BYTE #3 OF THE NAME        11/83 DBC\n         CDS   R4,R6,DENTNAME      ATTEMPT TO LOCK THIS SLOT. 11/83 DBC\n*                                  GOT IT?                    11/83 DBC\n         BNE   NAMEMISS            NO, GIVE UP ON THIS NAME   11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        I NOW OWN THE SLOT. NOW COPY THE DIRECTORY DATA TO * 11/83 DBC\n*        THE USER'S PLIST.                                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LH    R4,BLDELEN          GET L'USER'S PLIST ENTRY   11/83 DBC\n         CH    R4,DYNLELEN         COMPARE WITH L'D-ENTRY     11/83 DBC\n         BNH   GOTBDLEN            LOW; USE USER'S LENGTH     11/83 DBC\n         LH    R4,DYNLELEN         HIGH; USE L'D-ENTRY        11/83 DBC\nGOTBDLEN SH    R4,=Y(PDS2TTRP-PDS2+1) DECRIMENT BY L'ROOT     11/83 DBC\n*                                  SECTION. ALSO DECRIMENT    11/83 DBC\n*                                  FOR \"EX-MVC\". IS USER'S    11/83 DBC\n*                                  SLOT LONG ENOUGH?          11/83 DBC\n         BNM   BLDLMOVE            YES, PROCEED               11/83 DBC\n         OI    DENTNAME+DYNLLOCK,UNLOCKED NO, RELEASE THE     11/83 DBC\n*                                  SLOT                       11/83 DBC\n         B     NAMEMISS            IGNORE THIS NAME           11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SET THE USER'S KEY AND THEN COPY THE BLDL ENTRY TO * 11/83 DBC\n*        HIS PLIST. NOTE, THE DESIRED USER KEY WILL BE      * 09/84 DBC\n*        EITHER HIS EXECUTION KEY OF THE KEY FROM THE DEB   * 10/85 DBC\n*        FOR THE PDS BEING SEARCHED. IF THE DESIRED KEY IS  * 09/84 DBC\n*        THE DEB KEY, THEN IGC018'S EXECUTION KEY MATCHES   * 09/84 DBC\n*        THE DEB KEY.                                       * 09/84 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nBLDLMOVE IC    R5,USERKEY          GET USER'S EXECUTION KEY   09/84 DBC\n         TM    BLDLFLG,EXSBLDL-EXSBLDL DOING A BLDL?          09/84 DBC\n         @ZAP  (EXSBLDL,-3)                                   09/84 DBC\n         BNZ   SINKKEY             YES, PROCEED               09/84 DBC\n         IC    R5,KEYSAVE          NO, DOING A FIND. GET      09/84 DBC\n*                                  IGC018'S EXECUTION KEY     09/84 DBC\n*                                  (WHICH WILL MATCH THE      09/84 DBC\n*                                  USER'D DEB KEY).           09/84 DBC\nSINKKEY  SPKA  0(R5)               SET USER'S KEY             09/84 DBC\n         SPACE 1                                              09/84 DBC\n         MVC   PDS2TTRP(*-*),DENTTTRP (EXECUTED)              11/83 DBC\n         EX    R4,*-6              COPY STUFF TO USER'S PLIST 11/83 DBC\n         SPKA  0                   RESUME KEY-0               11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        UPDATE THE SLOT'S LRU FIELD (MAKING IT M.R.U.),    * 11/83 DBC\n*        COUNT THE HIT, AND UNLOCK THE DYNA-SLOT.           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   DYNLLRU#,CLOKSAVE   MAKE SLOT M.R.U.         * 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R4,1                LOAD INCRIMENT             11/83 DBC\n         AL    R4,DYNLHITS         COUNT THE SLOT'S HITS      11/83 DBC\n         ST    R4,DYNLHITS         STORE BACK                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         OI    DENTNAME+DYNLLOCK,UNLOCKED RELEASE THE SLOT    11/83 DBC\n         DROP  R3                  RELEASE SLOT BASE          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R4,1                LOAD INCRIMENT             11/83 DBC\n         AL    R4,DYNAHITS         COUNT TOTAL HITS           11/83 DBC\n         ST    R4,DYNAHITS         STORE BACK                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        ADVANCE TO THE NEXT NAME IN THE USER'S PLIST.      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nNAMENEXT AH    R2,BLDELEN          --> NEXT PLIST ENTRY       11/83 DBC\n         BCT   R0,NAMELOOP         LOOP IF THERE ARE MORE     11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  R2                  NO MORE, REL PLIST ENTRY B 11/83 DBC\n         DROP  R8                  REL DYNA-CONTROL TBL BASE  11/83 DBC\n         DROP  R1                  RELEASE PLIST BASE         11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO IGC018                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCHRET  IC    R2,KEYSAVE          GET IGC018'S KEY           11/83 DBC\n         SPKA  0(R2)               RESTORE IT                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LM    R2,R14,REGSAVE      RESTORE IGC018'S REGS      11/83 DBC\n         DROP  R13                 RELEASE LCL WORK AREA BASE 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         B     SRCHPOZZ            GO BACK TO IGC018          11/83 DBC\n         DROP  ,                   RELEASE ALL BASES          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        STATIC DATA                                        * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCHPODH DC    A(DYNAHEAD-DYNAHEAD) --> CONTROL TABLE         11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTORG ,                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO IGC018                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCHPOZZ DS    0H                                             11/83 DBC\nSRCHPOLL EQU   SRCHPOZZ-SRCHPDS                               11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        THE ORIGINAL SRCHPDS CODE FROM IGC018 GETS COPIED  * 11/83 DBC\n*        FOLLOWING HERE.                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         TITLE 'DFOUND -- IGC018 HOOK ROUTINE'                11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        DFOUND -- THIS ROUTINE RECEIVES CONTROL VIA A HOOK * 11/83 DBC\n*        PLACED AT LABEL \"DFOUND\" IN IGC018. (IGC018        * 11/83 DBC\n*        BRANCHES TO \"DFOUND\" WHEN IT HAS SUCCESSFULLY READ * 11/83 DBC\n*        A PDS DIRECTORY BLOCK AND LOCATED THE DESIRED      * 11/83 DBC\n*        ENTRY WITHIN IT). IF THE MEMBER IS FROM A LINKLIST * 11/83 DBC\n*        LIBRARY BUT HAD NOT BEEN PREVIOUSLY COPIED TO THE  * 11/83 DBC\n*        DYNA-TABLE, THEN THIS INTERCEPT DOES THAT.         * 11/83 DBC\n*                                                           * 11/83 DBC\n*        DURING DYNABLDL START PROCESSING, THE FOLLOWING IS * 11/83 DBC\n*        DONE.                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THIS ROUTINE IS COPIED TO GLOBAL, FIXED,   * 11/83 DBC\n*                KEY0, FETCH ACCESSABLE MEMORY (SP245).     * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - ALL ADCONS CONTAINED IN IT ARE RELOCATED.  * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - ALL REFERENCES TO IBM PRIVATE DATA FIELDS  * 11/83 DBC\n*                ARE ADJUSTED TO CORRESPOND TO THE CURRENT  * 11/83 DBC\n*                VERSION OF IGC018.                         * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THIS ROUTINE IS APPENDED WITH AN EXACT     * 11/83 DBC\n*                COPY OF THE INSTRUCTIONS IN IGC018 (AT     * 11/83 DBC\n*                LABEL \"DFOUND\") THAT WERE OVERLAID BY THE  * 11/83 DBC\n*                BRANCH TO THIS ROUTINE.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*              - THOSE INSTRUCTIONS ARE APPENDED BY A       * 11/83 DBC\n*                BRANCH BACK TO IGC018 FOLLOWING THE        * 11/83 DBC\n*                OVERLAID INSTRUCTIONS.                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        STATIC INPUTS:                                     * 11/83 DBC\n*              - R15 POINTS TO THIS HOOK'S ENTRY ADDRESS.   * 11/83 DBC\n*              - R0 AND R1 ARE VOLITILE; THEY NEED NOT BE   * 11/83 DBC\n*                RESTORED.                                  * 11/83 DBC\n*              - ALL OTHER REGISTERS (INCLUDING R14), IF    * 11/83 DBC\n*                ALTERED, MUST BE RESTORED.                 * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DFOUND,R15          DCL LOCAL BASE             11/83 DBC\nDFOUND   DS    0F                  ALIGNMENT                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        DETERMINE WHETHER OR NOT THE CURRENT MEMBER NAME   * 11/83 DBC\n*        IS FROM THE LINKLIST LIBRARIES.                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R1,CVTPTR           --> CVT                    11/83 DBC\n         LA    R0,0(,RDCB-RDCB)    COPY PDS DCB PTR           11/83 DBC\n         @ZAP  (RDCB,-2)                                      11/83 DBC\n         CL    R0,CVTLINK-CVTMAP(,R1) SEARCHING LINKLIST?     11/83 DBC\n         BNE   DFOUNDZZ            NO, IGNORE THIS CALL       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    PDS1NAME+DYNLLOCK-PDS1(RPDS1-RPDS1),UNLOCKED   11/83 DBC\n         @ZAP  (RPDS1,-2)          YES, BUT WILL THIS NAME    11/83 DBC*\n                                   CONFUSE ME?                11/83 DBC\n         BZ    DFOUNDZZ            YES, IGNORE THIS CALL      11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        AQUIRE A LOCAL DYNAMIC WORK AREA                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R0,=AL1(229,0,0,DYNAWAL) SP/LEN                11/83 DBC\n         GETMAIN R,LV=(0)          GET AN AREA                11/83 DBC\n         DROP  R15                 LOCAL BASE CLOBBERED       11/83 DBC\n         USING DYNAWA,R1           DCL WORK AREA BASE         11/83 DBC\n         BALR  R15,0               RELOAD A LOCAL BASE        11/83 DBC\n         USING *,R15               DECLARE IT                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SAVE IGC018'S ENVIRONMENT AND SET UP MY OWN.       * 11/83 DBC\n*   SEE NEWSWEEK CODE IN HERE.  SAM GOLOB - NEWSWEEK.         11/86 SBG\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         STM   R2,R14,REGSAVE      SAVE IGC018'S REGISTERS    11/83 DBC\n         MVC   CCIDSAVE,CONCAT#-CONCAT# SAVE CONCAT INDEX     11/83 DBC\n         @ZAP  (CONCAT#,-2)                                   11/83 DBC\n         LA    R0,0(,RPDS1-RPDS1)  --> FOUND D-ENTRY          11/83 DBC\n         @ZAP  (RPDS1,-2)                                     11/83 DBC\nEXCLLIBS DS    0H         NEWSWEEK CODE TO GIVE LIBRARY       11/86 SBG\n*                         EXCLUSION OPTION BY CONDITIONAL     11/86 SBG\n*                         ASSEMBLY.  TO TURN ON THE OPTION,   11/86 SBG\n*                         SETC &LIBEX TO 'YES', AND SET       11/86 SBG\n*                         AS MANY LIBRARY EXCLUDE VARIABLES   11/86 SBG\n*                         AS YOUR INSTALLATION REQUIRES.      11/86 SBG\n*                         A SETTING OF 255 NULLIFIES AN ENTRY 10/90 DBA\n************************************************************* 11/86 SBG\n*   WE INTRODUCE LOCAL VARIABLES FOR THE PURPOSE OF         * 11/86 SBG\n*     EXCLUDING LINKLIST LIBRARIES WHICH WE DON'T WANT      * 11/86 SBG\n*     DYNABLDL TO HIT, FOR WHATEVER PURPOSE.  OUR INSTAL-   * 11/86 SBG\n*     LATION HAS APPLICATION PROGRAMMER LIBRARIES IN THE    * 11/86 SBG\n*     LINKLIST, BECAUSE WE DON'T WANT THEM TO CODE STEPLIB  * 11/86 SBG\n*     IN PRODUCTION JCL.  WE THEREFORE DON'T WANT DYNABLDL  * 11/86 SBG\n*     TO HIT THEIR MODULES.  WE ARE PROVIDING THE OPTION    * 11/86 SBG\n*     TO EXCLUDE UP TO SIX LINKLIST LIBRARIES.              * 11/86 SBG\n*   CODING 255 FOR A &LN WILL NULLIFY IT IN EFFECT.         * 10/90 DBA\n************************************************************* 11/86 SBG\n         LCLA  &L1,&L2,&L3,&L4,&L5,&L6                        11/86 SBG\n         LCLC  &LIBEX                                         11/86 SBG\n&L1      SETA  255       , NULLIFY PARAMETER                  10/90 DBA\n&L2      SETA  255       , NULLIFY PARAMETER                  10/90 DBA\n&L3      SETA  255       , NULLIFY PARAMETER                  10/90 DBA\n&L4      SETA  255       , NULLIFY PARAMETER                  10/90 DBA\n&L5      SETA  255       , NULLIFY PARAMETER                  10/90 DBA\n&L6      SETA  255       , NULLIFY PARAMETER                  10/90 DBA\n&LIBEX   SETC  'NO'      , 'YES' TO EXCLUDE, 'NO ' NOT TO.    11/86 SBG\n************************************************************* 11/86 SBG\n         AIF   ('&LIBEX' NE 'YES').SKIPEX                     11/86 SBG\n************************************************************* 11/86 SBG\n*  INSERT CODE TO EXCLUDE CERTAIN LINKLIST LIBRARIES FROM   * 11/86 SBG\n*   THE SEARCH.  THIS IS A FIX SO THAT DYNABLDL DOES NOT    * 11/86 SBG\n*   HIT LIBRARIES IN THE LINKLIST THAT YOU DON'T WANT IT    * 11/86 SBG\n*   TO HIT.                                                 * 11/86 SBG\n************************************************************* 11/86 SBG\n         CLI   CCIDSAVE,&L1        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L2        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L3        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L4        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L5        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         CLI   CCIDSAVE,&L6        SKIP THIS LIBRARY ?        11/86 SBG\n         BE    DFOUNDZZ            YES - SKIP IT.             11/86 SBG\n         DS    0H                  ENSURE  ALIGNMENT          11/86 SBG\n.SKIPEX  ANOP                                                 11/86 SBG\n************************************************************* 11/86 SBG\n         LR    R13,R1              COPY LCL DYNAWA PTR.       11/83 DBC\n*                                  NOTE, DIRECT USE OF        11/83 DBC\n*                                  IGC018'S REGISTERS IS NOW  11/83 DBC\n*                                  NO LONGER SAFE.            11/83 DBC\n         DROP  R1                  RELEASE TEMP DYNAWA BASE   11/83 DBC\n         USING DYNAWA,R13          DCL NEW ONE                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LR    R1,R0               COPY D-ENTRY POINTER       11/83 DBC\n         USING PDS1,R1             DCL A BASE FOR IT          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SAVE IGC018'S KEY AND LOAD KEY-0                     11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         IPK   ,                   GET IGC018'S KEY           11/83 DBC\n         STC   R2,KEYSAVE          SAVE IT                    11/83 DBC\n         SPKA  0                   LOAD KEY-0                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        GET BITS 10-41 OF THE CURRENT TOD CLOCK VALUE      * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         STCK  CLOKSAVE            GET THE TOD CLOCK          11/83 DBC\n         LM    R2,R3,CLOKSAVE      LOAD IT                    11/83 DBC\n         SLDL  R2,CLOKSHFT         ISSOLATE BITS 10-41        11/83 DBC\n         ST    R2,CLOKSAVE         STORE BACK                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        SCAN THE DYNA-TABLE IN SEARCH OF A STEALABLE SLOT. * 11/83 DBC\n*        NOTE, THE NAME MIGHT ALREADY EXIST IN THE TABLE,   * 11/83 DBC\n*        SO CHECK THAT TOO.                                 * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R8,DFOUNDDH         --> CONTROL TABLE          11/83 DBC\n         USING DYNAHEAD,R8         DCL CONTROL TABLE BASE     11/83 DBC\nRESCAN   LM    R3,R5,DYNAFIRS      --> DYNA-TABLE             11/83 DBC\n         USING DYNL,R3             DCL SLOT BASE              11/83 DBC\n         SPACE 1                                              11/83 DBC\n         SR    R0,R0               LOAD LOGICAL HIGH -        11/83 DBC\n         BCTR  R0,0                 VALUE (4X'FF')            11/83 DBC\n         SPACE 1                                              11/83 DBC\nSCANLOOP CL    R0,DYNLLRU#         LESS RECENTLY USED SLOT?   11/83 DBC\n         BL    SCANNAME            NO, SKIP                   11/83 DBC\n         LR    R2,R3               YES, SAVE ITS POINTER      11/83 DBC\n         ICM   R0,15,DYNLLRU#      GET LRU#; UNUSED SLOT?     11/83 DBC\n         BZ    SCANGRAB            YES, GO USE IT.            11/83 DBC\nSCANNAME CLC   DENTNAME,PDS1NAME   NO, IS THE NAME ACTUALLY   11/83 DBC\n*                                  ALREADY IN THE DYNA-TABLE? 11/83 DBC\n         BE    SCANRET             YES, NOTHING TO DO HERE    11/83 DBC\n         BXLE  R3,R4,SCANLOOP      NO, CONTINUE SEARCHING     11/83 DBC\n         DROP  R3                  RELEASE SLOT BASE          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        A STEALABLE (OR UNUSED) SLOT HAS BEEN FOUND.       * 11/83 DBC\n*        ATTEMPT TO LOCK CONTROL OF IT.                     * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING DYNL,R2             DCL SLOT BASE              11/83 DBC\nSCANGRAB CLC   DYNLLRU#,CLOKSAVE   IF THE DYNA-TABLE IS VERY  11/83 DBC\n*                                  SMALL (SUCH AS 1 OR 2      11/83 DBC\n*                                  ENTRIES), THEN THE GRAB    11/83 DBC\n*                                  ATTEMPT COULD CONCEIVABLY  11/83 DBC\n*                                  FAIL ON EVERY SLOT AND     11/83 DBC\n*                                  THAT WOULD LEAD TO AN      11/83 DBC\n*                                  UNCONTROLLED LOOP. THIS    11/83 DBC\n*                                  TEST GUARDS AGAINST THAT.  11/83 DBC\n*                                  HAVE I ALREADY TRIED AND   11/83 DBC\n*                                  FAILED TO GRAB THIS SLOT?  11/83 DBC\n         BE    SCANRET             YES, GIVE UP.              11/83 DBC\n         MVC   DYNLLRU#,CLOKSAVE   NO, RESET THIS SLOT'S LRU# 11/83 DBC\n*                                  REGUARDLESS OF WHETHER OR  11/83 DBC\n*                                  I CAN LOCK IT.             11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LM    R4,R5,DENTNAME      GET THE SLOT'S NAME        11/83 DBC\n         O     R4,=A(UNLOCKED)     SET UNLOCKED IN CASE       11/83 DBC\n*                                  ALREADY LOCKED JUST NOW BY 11/83 DBC\n*                                  SOMEONE ELSE               11/83 DBC\n         #TEST SIZE=(DYNLLOCK,EQ,3) THE LOCK BIT MUST BE IN   11/83 DBC*\n                                   THE NAME'S 4TH BYTE        11/83 DBC\n         LR    R6,R4               COPY THE -                 11/83 DBC\n         LR    R7,R5                NAME                      11/83 DBC\n         X     R6,=A(UNLOCKED)     SET \"LOCKED\" SIGNAL        11/83 DBC\n         #TEST SIZE=(DYNLLOCK,EQ,3)                           11/83 DBC\n         CDS   R4,R6,DENTNAME      ATTEMPT TO LOCK THIS SLOT. 11/83 DBC\n*                                  GOT IT?                    11/83 DBC\n         BNE   RESCAN              NO, TRY TO GET ANOTHER     11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        I'VE NOW GOT A STEALABLE SLOT. COUNT IT AND STEAL  * 11/83 DBC\n*        IT.                                                * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         XC    DYNL(DYNLLEN),DYNL CLEAR THE SLOT              11/83 DBC\n         MVC   DYNLLRU#,CLOKSAVE   MAKE M.R.U.                11/83 DBC\n         MVC   DYNLCLOK,CLOKSAVE   SET BIRTHDATE              11/83 DBC\n         MVC   DENTCNCT,CCIDSAVE   SAVE LIB CONCAT INDEX      11/83 DBC\n         MVI   DENTLIBF,LINKSVC    SET \"FROM LINKLIST\" SIGNAL 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         IC    R4,PDS1INDC         GET L'UDAT/2               11/83 DBC\n         N     R4,=A(PDS1LUSR)     ISSOLATE IT                11/83 DBC\n         AR    R4,R4               CNVRT TO TRUE VALUE        11/83 DBC\n         LA    R5,DENTUSRD-DENT(,R4) CNVRT TO SLOT ENTRY LEN  11/83 DBC\n         STH   R5,DYNLELEN         SAVE                       11/83 DBC\n         MVC   DENTINDC(*-*),PDS1INDC (EXECUTED)              11/83 DBC\n         EX    R4,*-6              COPY FLAGS, LENGTH, AND    11/83 DBC\n*                                  USER DATA TO THE SLOT      11/83 DBC\n         SPACE 1                                              11/83 DBC\n         MVC   DENTNAME(L'DENTNAME+L'DENTTTRP),PDS1NAME COPY  11/83 DBC\n*                                  REST OF INFO TO SLOT. ALSO 11/83 DBC\n*                                  UNLOCK THE SLOT.           11/83 DBC\n         DROP  R2                  RELEASE SLOT BASE          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R4,1                LOAD INCRIMENT             11/83 DBC\n         AL    R4,DYNADDED         INCR STEAL COUNTER         11/83 DBC\n         ST    R4,DYNADDED         STORE BACK                 11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO IGC018                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSCANRET  IC    R2,KEYSAVE          GET IGC018'S KEY           11/83 DBC\n         SPKA  0(R2)               RESTORE IT                 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LA    R1,DYNAWA           SAVE WORK AREA PTR         11/83 DBC\n         DROP  R1                  RELEASE D-ENTRY BASE       11/83 DBC\n         LM    R2,R14,REGSAVE      RESTORE IGC018'S REGISTERS 11/83 DBC\n         DROP  R8                  RELEASE CONTROL TABLE BASE 11/83 DBC\n         DROP  R13                 RELEASE WORK AREA BASE     11/83 DBC\n         SPACE 1                                              11/83 DBC\n         L     R0,=AL1(229,0,0,DYNAWAL) GET SP/LEN            11/83 DBC\n         FREEMAIN R,LV=(0),A=(1)   RELEASE THE WORK AREA      11/83 DBC\n         DROP  R15                 LOCAL BASE CLOBBERED       11/83 DBC\n         BALR  R15,0               LOAD NEW LOCAL BASE        11/83 DBC\n         B     DFOUNDZZ-*(,R15)    GO EXIT TO IGC018          11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        LOCAL DATA                                         * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         DROP  ,                   RELEASE ALL BASES          11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFOUNDDH DC    A(DYNAHEAD-DYNAHEAD) HEADER TABLE PTR          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTORG ,                                              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO IGC018                                   * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFOUNDZZ DS    0H                                             11/83 DBC\nDFOUNDLL EQU   DFOUNDZZ-DFOUND                                11/83 DBC\n         SPACE 1                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        THE ORIGINAL DFOUND CODE FROM IGC018 GETS COPIED   * 11/83 DBC\n*        FOLLOWING HERE.                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         TITLE '@ZAP -- IBM PRIVATE FIELDS REFERENCE ADJUSTMENTS' 3 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        @ZAP -- THIS ROUTINE ADJUSTS ALL FLAGGED           * 11/83 DBC\n*        REFERENCES TO IBM PRIVATE FIELDS TO CORRESPOND TO  * 11/83 DBC\n*        THE CURRENT VERSION OF IGC018.                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 POINTS TO A TABLE OF FIELD DESCRIPTORS. * 11/83 DBC\n*              - THE PROGRAM BASE REGISTERS ARE AS          * 11/83 DBC\n*                ESTABLISHED BY THE #ENTER MACRO AT         * 11/83 DBC\n*                DYNABLDL'S ENTRY POINT.                    * 11/83 DBC\n*              - R14 POINTS TO A RETURN ADDRESS.            * 11/83 DBC\n*              - R0 MAY BE DESTROYED.                       * 11/83 DBC\n*              - NOTE, A LOCAL BASE IS NOT NEEDED HERE.     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - THE REQUIRED ADJUSTMENTS HAVE BEEN MADE.   * 11/83 DBC\n*              - R0 IS DESTROYED.                           * 11/83 DBC\n*              - ALL OTHER REGISTERS ARE RESTORED.          * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         #USING ,                  RESTORE ADDRESSABILITY     11/83 DBC\n         USING FIELDS,R1           DCL FIELDS BASE            11/83 DBC\n@ZAP     @ZAP  ,                                              11/83 DBC\n         SPACE 1                                              11/83 DBC\n         BR    R14                 RETURN TO CALLER           11/83 DBC\n         DROP  ,                   RELEASE ALL BASES          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTORG ,                                              11/83 DBC\n         TITLE 'PRTEXIT -- SYSPRINT DCB OPEN EXIT'            11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        PRTEXIT -- THIS IS A DCB OPEN EXIT ROUTINE FOR THE * 11/83 DBC\n*        SYSPRINT FILE. IT EXAMINES THE RECFM, LRECL, AND   * 11/83 DBC\n*        BLKSIZE DCB FIELDS TO ENFORCE VALID COMBINATIONS   * 11/83 DBC\n*        AND TO SET THE FOLLOWING DEFAULTS AS APPROPRIATE.  * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF NEITHER RECFM=F, =V, OR =U IS GIVEN, THEN       * 11/83 DBC\n*        RECFM=V IS SET.                                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF RECFM=A OR =M IS GIVEN, THEN THAT IS CLEARED.   * 11/83 DBC\n*        (CARRIAGE CONTROL IS NOT SUPPORTED BY DYNABLDL).   * 11/83 DBC\n*                                                           * 11/83 DBC\n*        FOR RECFM=U, LRECL IS FORCED TO ZERO.              * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF BLKSIZE=0 IS GIVEN, THEN A TENTATIVE DEFAULT    * 11/83 DBC\n*        BLKSIZE IS CHOSEN AS FOLLOWS:                      * 11/83 DBC\n*        - IF RECFM=F, THEN BLKSIZE=3120.                   * 11/83 DBC\n*        - IF RECFM=V, THEN BLKSIZE=4096.                   * 11/83 DBC\n*        - IF RECFM=U, THEN BLKSIZE=79.                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF LRECL=0 IS GIVEN, THEN A DEFAULT LRECL IS       * 11/83 DBC\n*        CHOSEN AS FOLLOWS:                                 * 11/83 DBC\n*        - IF RECFM=F, THEN LRECL=80.                       * 11/83 DBC\n*        - IF RECFM=V, THEN LRECL=83.                       * 11/83 DBC\n*                                                           * 11/83 DBC\n*        FOR RECFM=F, IF BLKSIZE IS NOT A MULTIPLE OF       * 11/83 DBC\n*        LRECL, THEN IT IS ROUNDED DOWN TO A LRECL          * 11/83 DBC\n*        MULTIPLE.                                          * 11/83 DBC\n*                                                           * 11/83 DBC\n*        IF, AT THIS POINT, BLKSIZE IS NOT LARGE ENOUGH     * 11/83 DBC\n*        WHEN COMPARED TO LRECL, THEN A NEW BLKSIZE IS SET  * 11/83 DBC\n*        AS FOLLOWS:                                        * 11/83 DBC\n*        - IF RECFM=F, THEN BLKSIZE=LRECL.                  * 11/83 DBC\n*        - IF RECFM=V, THEN BLKSIZE=LRECL+4.                * 11/83 DBC\n*                                                           * 11/83 DBC\n*        INPUTS:                                            * 11/83 DBC\n*              - R1 POINTS TO THE SYSPRINT DCB.             * 11/83 DBC\n*              - R14 POINTS TO A RETURN ADDRESS (SVC 3).    * 11/83 DBC\n*              - R15 POINTS TO THIS ROUTINE'S ENTRY         * 11/83 DBC\n*                ADDRESS.                                   * 11/83 DBC\n*                                                           * 11/83 DBC\n*        RETURN 0(,R14):                                    * 11/83 DBC\n*              - THE ABOVE DESCRIBED PROCESSING HAS BEEN    * 11/83 DBC\n*                COMPLETED.                                 * 11/83 DBC\n*              - R14 REMAINS UNCHANGED.                     * 11/83 DBC\n*              - OTHER REGISTERS MAY BE ALTERED.            * 11/83 DBC\n*                (RESTORATION IS NOT NECESSARY).            * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\n         USING IHADCB,R1           DCL DCB BASE               11/83 DBC\n         USING PRTEXIT,R15         DCL LOCAL BASE             11/83 DBC\nPRTEXIT  LH    R4,DCBLRECL         GET LRECL                  11/83 DBC\n         LH    R3,DCBBLKSI         SET BLKSIZE                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         OI    DCBRECFM,DCBRECBR   ASSUME BLOCKED RECORDS     11/83 DBC\n         SPACE 1                                              11/83 DBC\n         NI    DCBRECFM,255-DCBRECCC CLEAR CARRIAGE CONTROL   11/83 DBC\n         SPACE 1                                              11/83 DBC\n         TM    DCBRECFM,DCBRECU    RECFM DEFINED?             11/83 DBC\n         BO    PRTRECU             YES, RECFM=U               11/83 DBC\n         BNZ   PRTRECFV            YES, RECFM=F OR =V         11/83 DBC\n         OI    DCBRECFM,DCBRECV    NO, SET RECFM=V            11/83 DBC\nPRTRECFV TM    DCBRECFM,DCBRECF    RECFM=F?                   11/83 DBC\n         BO    PRTRECF             YES, GO HANDLE             11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=V HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRECV  LTR   R3,R3               BLKSIZE=0?                 11/83 DBC\n         BNZ   PRTRVCK2            NO, SKIP                   11/83 DBC\n         LH    R3,=Y(4096)         YES, SET DEFAULT           11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRVCK2 CH    R4,=Y(LEN3270+4)    LRECL LARGE ENOUGH?        11/83 DBC\n         BNL   PRTRVCK3            YES, SKIP                  11/83 DBC\n         LA    R4,LEN3270+4        NO, RESET                  11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRVCK3 LA    R0,4(,R4)           GET LRECL+4                11/83 DBC\n         CR    R0,R3               BLKSIZE LARGE ENOUGH?      11/83 DBC\n         BH    PRTLBOK             YES, DONE HERE             11/83 DBC\n         NI    DCBRECFM,255-DCBRECBR NO, SIGNAL UNBLOCKED     11/83 DBC\n         LR    R3,R0               RESET THE BLKSIZE          11/83 DBC\n         B     PRTLBOK             DONE HERE                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=F HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRECF  LTR   R3,R3               BLKSIZE=0?                 11/83 DBC\n         BNZ   PRTRFCK2            NO, SKIP                   11/83 DBC\n         LA    R3,3120             YES, SET DEFAULT           11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRFCK2 CH    R4,=Y(LEN3270)      LRECL LARGE ENOUGH?        11/83 DBC\n         BNL   PRTRFCK3            YES, SKIP                  11/83 DBC\n         LA    R4,80               NO, SET DEFAULT            11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRFCK3 SR    R2,R2               CLEAR FOR DIVIDE           11/83 DBC\n         DR    R2,R4               ROUND BLKSIZE DOWN -       11/83 DBC\n         MR    R2,R4                TO A LRECL MULTIPLE       11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CR    R3,R4               IS BLKSIZE LARGE ENOUGH?   11/83 DBC\n*                                  (MIGHT BE ZEROED BY THE    11/83 DBC\n*                                  ABOVE DIVIDE)              11/83 DBC\n         BH    PRTLBOK             YES, DONE HERE             11/83 DBC\n         NI    DCBRECFM,255-DCBRECBR NO, SIGNAL UNBLOCKED     11/83 DBC\n         LR    R3,R4               RESET BLKSIZE              11/83 DBC\n         B     PRTLBOK             DONE HERE                  11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RECFM=U HANDLER                                    * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTRECU  NI    DCBRECFM,255-DCBRECBR SIGNAL UNBLOCKED         11/83 DBC\n         SR    R4,R4               SET LRECL=0                11/83 DBC\n         SPACE 1                                              11/83 DBC\n         CH    R3,=Y(LEN3270)      IS BLKSIZE LARGE ENOUGH?   11/83 DBC\n         BNL   PRTLBOK             YES, DONE HERE             11/83 DBC\n         LA    R3,LEN3270          NO, RESET THE BLKSIZE      11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*        RETURN TO CALLER (OPEN VIA SVC 3)                  * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nPRTLBOK  STH   R3,DCBBLKSI         STORE NEW BLKSIZE          11/83 DBC\n         STH   R4,DCBLRECL         STORE NEW LRECL            11/83 DBC\n         BR    R14                 RETURN TO CALLER           11/83 DBC\n         DROP  ,                   RELEASE ALL BASES          11/83 DBC\n         SPACE 1                                              11/83 DBC\n         LTORG ,                                              11/83 DBC\n         TITLE 'VERSION TABLES'                               11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE: IGC018                                     * 11/83 DBC\n*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC\n*        LEVEL: 8206                                        * 11/83 DBC\n*        PTF: UZ56064                                       * 11/83 DBC\n*        APAR: AZ60132                                      * 11/83 DBC\n*                                                           * 11/83 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSN#01 CSECT ,                                              11/83 DBC\n         DC    A(ID#01)            --> VERSION VERIFIER       11/83 DBC\n         DC    A(SRCH#01)          --> ORIGINAL \"SRCHPDS\" COD 11/83 DBC\n         DC    A(DFND#01)          --> ORIGINAL \"DFOUND\" CODE 11/83 DBC\n         DC    A(DOFF#01)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nID#01    DS    0H                                             11/83 DBC\n         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC\n         DC    Y(ID#01VLN)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#01V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZA60132'         00000E          DC    C'@ZA60132'\n*                                                  DC    C'&SYSDATE'\n         DC    C'03/26/82'         000016+         DC    C'03/26/82'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nID#01VLN EQU   *-ID#01V            VERIFY LENGTH              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCH#01  DS    0H                                             11/83 DBC\n         DC    Y(X'572')           VERIFY LOCATION            11/83 DBC\n         DC    Y(SRCH#01L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#01V DS    0H                  000572 SRCHPDS  EQU   *\n         BAL   R14,X'4FA'(,R12)    000572          BAL   RSUBR,FIRSTMTY\n         TM    X'61'(R6),X'80'     000576          TM    EXSFLG,EXSSYDC\n         BO    X'580'(,R12)        00057A          BO    SRCHKYOK\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nSRCH#01L EQU   *-SRCH#01V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(SRCH#01L,GE,SRCHPOHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFND#01  DS    0H                                             11/83 DBC\n         DC    Y(X'7C4')           VERIFY LOCATION            11/83 DBC\n         DC    Y(DFND#01L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#01V MVC   X'8'(3,R7),X'8'(R8) 0007C4 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007CA          IC    RX,PDS1INDC\n         NR    R4,R14              0007CE          NR    RX,RZ\n         LA    R5,X'E'             0007D0          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007D4          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007D6          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nDFND#01L EQU   *-DFND#01V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(DFND#01L,GE,DFOUNDHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDOFF#01  DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              11/83 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              11/83 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1\n         SPACE 1                                              11/83 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\n         #TEST SIZE=(*-DOFF#01,EQ,FIELDSLN)                   11/83 DBC\n         EJECT ,                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE: IGC018                                     * 11/83 DBC\n*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC\n*        LEVEL: 8107                                        * 09/84 DBC\n*        PTF: UZ37480                                       * 09/84 DBC\n*        APAR: AZ49924                                      * 11/83 DBC\n*                                                           * 11/83 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSN#02 CSECT ,                                              11/83 DBC\n         DC    A(ID#02)            --> VERSION VERIFIER       11/83 DBC\n         DC    A(SRCH#02)          --> ORIGINAL \"SRCHPDS\" COD 11/83 DBC\n         DC    A(DFND#02)          --> ORIGINAL \"DFOUND\" CODE 11/83 DBC\n         DC    A(DOFF#02)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nID#02    DS    0H                                             11/83 DBC\n         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC\n         DC    Y(ID#02VLN)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#02V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZA49924'         00000E          DC    C'@ZA49924'\n*                                                  DC    C'&SYSDATE'\n         DC    C'05/28/81'         000016+         DC    C'05/28/81'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nID#02VLN EQU   *-ID#02V            VERIFY LENGTH              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCH#02  DS    0H                                             11/83 DBC\n         DC    Y(X'566')           VERIFY LOCATION            11/83 DBC\n         DC    Y(SRCH#02L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#02V DS    0H                  000566 SRCHPDS  EQU   *\n         BAL   R14,X'4EE'(,R12)    000566          BAL   RSUBR,FIRSTMTY\n         TM    X'61'(R6),X'80'     00056A          TM    EXSFLG,EXSSYDC\n         BO    X'574'(,R12)        00056E          BO    SRCHKYOK\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nSRCH#02L EQU   *-SRCH#02V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(SRCH#02L,GE,SRCHPOHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFND#02  DS    0H                                             11/83 DBC\n         DC    Y(X'7B8')           VERIFY LOCATION            11/83 DBC\n         DC    Y(DFND#02L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#02V MVC   X'8'(3,R7),X'8'(R8) 0007B8 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007BE          IC    RX,PDS1INDC\n         NR    R4,R14              0007C2          NR    RX,RZ\n         LA    R5,X'E'             0007C4          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007C8          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007CA          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nDFND#02L EQU   *-DFND#02V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(DFND#02L,GE,DFOUNDHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDOFF#02  DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              11/83 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              11/83 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1\n         SPACE 1                                              11/83 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\n         #TEST SIZE=(*-DOFF#02,EQ,FIELDSLN)                   11/83 DBC\n         EJECT ,                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE: IGC018                                     * 11/83 DBC\n*        PRODUCT: MVS SCP 3.8 (5752-MVS)                    * 11/83 DBC\n*        LEVEL: 8009                                        * 11/83 DBC\n*        PTF: UZ32516                                       * 11/83 DBC\n*        APAR: AZ47610                                      * 11/83 DBC\n*                                                           * 11/83 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSN#03 CSECT ,                                              11/83 DBC\n         DC    A(ID#03)            --> VERSION VERIFIER       11/83 DBC\n         DC    A(SRCH#03)          --> ORIGINAL \"SRCHPDS\" COD 11/83 DBC\n         DC    A(DFND#03)          --> ORIGINAL \"DFOUND\" CODE 11/83 DBC\n         DC    A(DOFF#03)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nID#03    DS    0H                                             11/83 DBC\n         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC\n         DC    Y(ID#03VLN)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#03V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZZ47610'         00000E          DC    C'@ZZ47610'\n*                                                  DC    C'&SYSDATE'\n         DC    C'07/09/80'         000016+         DC    C'07/09/80'\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nID#03VLN EQU   *-ID#03V            VERIFY LENGTH              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCH#03  DS    0H                                             11/83 DBC\n         DC    Y(X'4B2')           VERIFY LOCATION            11/83 DBC\n         DC    Y(SRCH#03L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#03V DS    0H                  0004B2 SRCHPDS  EQU   *\n         BAL   R14,X'43A'(,R12)    0004B2          BAL   RSUBR,FIRSTMTY\n         SR    R0,R0               0004B6          SR    R0,R0\n         IC    R0,X'141'(,R13)     0004B8 SRCHTTR  IC    R0,CONCAT#\n*                                        ******************************\n*                                        * NOTE, \"SRCHTTR\" IS NOT     *\n*                                        * REFERENCED IN IGC018, SO   *\n*                                        * NO PROBLEM EXISTS HERE.    *\n*                                        ******************************\n         TM    X'61'(R6),X'80'     0004BC          TM    EXSFLG,EXSSYDC\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nSRCH#03L EQU   *-SRCH#03V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(SRCH#03L,GE,SRCHPOHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFND#03  DS    0H                                             11/83 DBC\n         DC    Y(X'6A0')           VERIFY LOCATION            11/83 DBC\n         DC    Y(DFND#03L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#03V MVC   X'8'(3,R7),X'8'(R8) 0006A0 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0006A6          IC    RX,PDS1INDC\n         NR    R4,R14              0006AA          NR    RX,RZ\n         LA    R5,X'E'             0006AC          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0006B0          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0006B2          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nDFND#03L EQU   *-DFND#03V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(DFND#03L,GE,DFOUNDHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDOFF#03  DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              11/83 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              11/83 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1\n         SPACE 1                                              11/83 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\n         #TEST SIZE=(*-DOFF#03,EQ,FIELDSLN)                   11/83 DBC\n         EJECT ,                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE: IGC018                                     * 11/83 DBC\n*        PRODUCT: DF/DS (5740-AM7)                          * 11/83 DBC\n*        LEVEL: 8303                                        * 11/83 DBC\n*        PTF: UZ61168 (VARIATION \"@HZA\")                    * 05/84 DBC\n*                                                           * 11/83 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 11/83 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 11/83 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nVERSN#04 CSECT ,                                              11/83 DBC\n         DC    A(ID#04)            --> VERSION VERIFIER       11/83 DBC\n         DC    A(SRCH#04)          --> ORIGINAL \"SRCHPDS\" COD 11/83 DBC\n         DC    A(DFND#04)          --> ORIGINAL \"DFOUND\" CODE 11/83 DBC\n         DC    A(DOFF#04)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nID#04    DS    0H                                             11/83 DBC\n         DC    Y(X'6')             VERIFY LOCATION            11/83 DBC\n         DC    Y(ID#04VLN)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#04V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'    @HZA'         00000E          DC    C'    @HZA'\n*                                                  DC    C'&SYSDATE'\n         DC    C'11/19/82'         000016+         DC    C'11/19/82'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nID#04VLN EQU   *-ID#04V            VERIFY LENGTH              11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nSRCH#04  DS    0H                                             11/83 DBC\n         DC    Y(X'58C')           VERIFY LOCATION            11/83 DBC\n         DC    Y(SRCH#04L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#04V DS    0H                  00058C SRCHPDS  EQU   *\n         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY\n         SR    R0,R0               000590          SR    R0,R0\n         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#\n*                                        ******************************\n*                                        * NOTE, \"SRCHTTR\" IS NOT     *\n*                                        * REFERENCED IN IGC018, SO   *\n*                                        * NO PROBLEM EXISTS HERE.    *\n*                                        ******************************\n         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nSRCH#04L EQU   *-SRCH#04V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(SRCH#04L,GE,SRCHPOHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDFND#04  DS    0H                                             11/83 DBC\n         DC    Y(X'808')           VERIFY LOCATION            11/83 DBC\n         DC    Y(DFND#04L)         VERIFY LENGTH              11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#04V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC\n         NR    R4,R14              000812          NR    RX,RZ\n         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               000818          LCR   RY,RY\n         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\nDFND#04L EQU   *-DFND#04V          VERIFY LENGTH              11/83 DBC\n         #TEST SIZE=(DFND#04L,GE,DFOUNDHL)                    11/83 DBC\n         SPACE 3                                              11/83 DBC\n************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 11/83 DBC\n*        DSECT.                                             * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n         SPACE 1                                              11/83 DBC\nDOFF#04  DS    0H                                             11/83 DBC\n         SPACE 1                                              11/83 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              11/83 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              11/83 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1\n         SPACE 1                                              11/83 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              11/83 DBC\n         #TEST SIZE=(*-DOFF#04,EQ,FIELDSLN)                   11/83 DBC\n         EJECT ,                                              04/84 JLC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n*        MODULE: IGC018                                     * 04/84 JLC\n*        PRODUCT: DF/DS (5740-AM7)                          * 04/84 JLC\n*        LEVEL: 8303                                        * 04/84 JLC\n*        PTF: UZ61167                                       * 04/84 JLC\n*                                                           * 04/84 JLC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 04/84 JLC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 04/84 JLC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 04/84 JLC\n*        DSECT.                                             * 04/84 JLC\n*                                                           * 04/84 JLC\n*        PREPARED 04/20/84 BY J.CALLEN AT U OF C            * 04/84 JLC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         SPACE 1                                              04/84 JLC\nVERSN#05 CSECT ,                                              04/84 JLC\n         DC    A(ID#05)            --> VERSION VERIFIER       04/84 JLC\n         DC    A(SRCH#05)          --> ORIGINAL \"SRCHPDS\" COD 04/84 JLC\n         DC    A(DFND#05)          --> ORIGINAL \"DFOUND\" CODE 04/84 JLC\n         DC    A(DOFF#05)          --> IBM DATA FIELDS DESCRIPTORS  JLC\n         SPACE 3                                              04/84 JLC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 04/84 JLC\n*        DSECT.                                             * 04/84 JLC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         SPACE 1                                              04/84 JLC\nID#05    DS    0H                                             04/84 JLC\n         DC    Y(X'6')             VERIFY LOCATION            04/84 JLC\n         DC    Y(ID#05VLN)         VERIFY LENGTH              04/84 JLC\n         SPACE 1                                              04/84 JLC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#05V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZA66915'         00000E          DC    C'ZA66915A'\n*                                                  DC    C'&SYSDATE'\n         DC    C'11/19/82'         000016+         DC    C'11/19/82'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              04/84 JLC\nID#05VLN EQU   *-ID#05V            VERIFY LENGTH              04/84 JLC\n         SPACE 3                                              04/84 JLC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 04/84 JLC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         SPACE 1                                              04/84 JLC\nSRCH#05  DS    0H                                             04/84 JLC\n         DC    Y(X'57A')           VERIFY LOCATION            04/84 JLC\n         DC    Y(SRCH#05L)         VERIFY LENGTH              04/84 JLC\n         SPACE 1                                              04/84 JLC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#05V DS    0H                  00057A SRCHPDS  EQU   *\n         BAL   R14,X'502'(,R12)    00057A          BAL   RSUBR,FIRSTMTY\n         TM    X'61'(R6),X'80'     00057E          TM    EXSFLG,EXSSYDC\n         BO    X'588'(,R12)        000582          BO    SRCHKYOK\n*                                  ************************************\n         SPACE 1                                              04/84 JLC\nSRCH#05L EQU   *-SRCH#05V          VERIFY LENGTH              04/84 JLC\n         #TEST SIZE=(SRCH#05L,GE,SRCHPOHL)                    04/84 JLC\n         SPACE 3                                              04/84 JLC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 04/84 JLC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         SPACE 1                                              04/84 JLC\nDFND#05  DS    0H                                             04/84 JLC\n         DC    Y(X'7CC')           VERIFY LOCATION            04/84 JLC\n         DC    Y(DFND#05L)         VERIFY LENGTH              04/84 JLC\n         SPACE 1                                              04/84 JLC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#05V MVC   X'8'(3,R7),X'8'(R8) 0007CC DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007D2          IC    RX,PDS1INDC\n         NR    R4,R14              0007D6          NR    RX,RZ\n         LA    R5,X'E'             0007D8          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007DC          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007DE          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              04/84 JLC\nDFND#05L EQU   *-DFND#05V          VERIFY LENGTH              04/84 JLC\n         #TEST SIZE=(DFND#05L,GE,DFOUNDHL)                    04/84 JLC\n         SPACE 3                                              04/84 JLC\n************************************************************* 04/84 JLC\n*                                                           * 04/84 JLC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 04/84 JLC\n*        DSECT.                                             * 04/84 JLC\n*                                                           * 04/84 JLC\n************************************************************* 04/84 JLC\n         SPACE 1                                              04/84 JLC\nDOFF#05  DS    0H                                             04/84 JLC\n         SPACE 1                                              04/84 JLC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              04/84 JLC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              04/84 JLC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1\n         SPACE 1                                              04/84 JLC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              04/84 JLC\n         #TEST SIZE=(*-DOFF#05,EQ,FIELDSLN)                   04/84 JLC\n         EJECT ,                                              05/84 DBC\n************************************************************* 05/84 DBC\n*                                                           * 05/84 DBC\n*        MODULE: IGC018                                     * 05/84 DBC\n*        PRODUCT: DF/DS (5740-AM7)                          * 05/84 DBC\n*        LEVEL: 8303                                        * 05/84 DBC\n*        PTF: UZ61168 (VARIATION \"@H2A\")                    * 05/84 DBC\n*                                                           * 05/84 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 05/84 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 05/84 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 05/84 DBC\n*        DSECT.                                             * 05/84 DBC\n*                                                           * 05/84 DBC\n************************************************************* 05/84 DBC\n         SPACE 1                                              05/84 DBC\nVERSN#06 CSECT ,                                              05/84 DBC\n         DC    A(ID#06)            --> VERSION VERIFIER       05/84 DBC\n         DC    A(SRCH#06)          --> ORIGINAL \"SRCHPDS\" COD 05/84 DBC\n         DC    A(DFND#06)          --> ORIGINAL \"DFOUND\" CODE 05/84 DBC\n         DC    A(DOFF#06)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              05/84 DBC\n************************************************************* 05/84 DBC\n*                                                           * 05/84 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 05/84 DBC\n*        DSECT.                                             * 05/84 DBC\n*                                                           * 05/84 DBC\n************************************************************* 05/84 DBC\n         SPACE 1                                              05/84 DBC\nID#06    DS    0H                                             05/84 DBC\n         DC    Y(X'6')             VERIFY LOCATION            05/84 DBC\n         DC    Y(ID#06VLN)         VERIFY LENGTH              05/84 DBC\n         SPACE 1                                              05/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#06V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'    @H2A'         00000E          DC    C'    @H2A'\n*                                                  DC    C'&SYSDATE'\n         DC    C'11/19/82'         000016+         DC    C'11/19/82'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              05/84 DBC\nID#06VLN EQU   *-ID#06V            VERIFY LENGTH              05/84 DBC\n         SPACE 3                                              05/84 DBC\n************************************************************* 05/84 DBC\n*                                                           * 05/84 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 05/84 DBC\n*                                                           * 05/84 DBC\n************************************************************* 05/84 DBC\n         SPACE 1                                              05/84 DBC\nSRCH#06  DS    0H                                             05/84 DBC\n         DC    Y(X'58C')           VERIFY LOCATION            05/84 DBC\n         DC    Y(SRCH#06L)         VERIFY LENGTH              05/84 DBC\n         SPACE 1                                              05/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#06V DS    0H                  00058C SRCHPDS  EQU   *\n         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY\n         SR    R0,R0               000590          SR    R0,R0\n         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#\n*                                        ******************************\n*                                        * NOTE, \"SRCHTTR\" IS NOT     *\n*                                        * REFERENCED IN IGC018, SO   *\n*                                        * NO PROBLEM EXISTS HERE.    *\n*                                        ******************************\n         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC\n*                                  ************************************\n         SPACE 1                                              05/84 DBC\nSRCH#06L EQU   *-SRCH#06V          VERIFY LENGTH              05/84 DBC\n         #TEST SIZE=(SRCH#06L,GE,SRCHPOHL)                    05/84 DBC\n         SPACE 3                                              05/84 DBC\n************************************************************* 05/84 DBC\n*                                                           * 05/84 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 05/84 DBC\n*                                                           * 05/84 DBC\n************************************************************* 05/84 DBC\n         SPACE 1                                              05/84 DBC\nDFND#06  DS    0H                                             05/84 DBC\n         DC    Y(X'808')           VERIFY LOCATION            05/84 DBC\n         DC    Y(DFND#06L)         VERIFY LENGTH              05/84 DBC\n         SPACE 1                                              05/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#06V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC\n         NR    R4,R14              000812          NR    RX,RZ\n         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               000818          LCR   RY,RY\n         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              05/84 DBC\nDFND#06L EQU   *-DFND#06V          VERIFY LENGTH              05/84 DBC\n         #TEST SIZE=(DFND#06L,GE,DFOUNDHL)                    05/84 DBC\n         SPACE 3                                              05/84 DBC\n************************************************************* 05/84 DBC\n*                                                           * 05/84 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 05/84 DBC\n*        DSECT.                                             * 05/84 DBC\n*                                                           * 05/84 DBC\n************************************************************* 05/84 DBC\n         SPACE 1                                              05/84 DBC\nDOFF#06  DS    0H                                             05/84 DBC\n         SPACE 1                                              05/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              05/84 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              05/84 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1\n         SPACE 1                                              05/84 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              05/84 DBC\n         #TEST SIZE=(*-DOFF#06,EQ,FIELDSLN)                   05/84 DBC\n         EJECT ,                                              08/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n*        MODULE: IGC018                                     * 08/84 DBC\n*        PRODUCT: DFP (5665-295/A)                          * 08/84 DBC\n*                                                           * 08/84 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 08/84 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 08/84 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 08/84 DBC\n*        DSECT.                                             * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\nVERSN#07 CSECT ,                                              08/84 DBC\n         DC    A(ID#07)            --> VERSION VERIFIER       08/84 DBC\n         DC    A(SRCH#07)          --> ORIGINAL \"SRCHPDS\" COD 08/84 DBC\n         DC    A(FINDK#07)         --> ORIGINAL \"FINDKEY\" COD 08/84 DBC\n         DC    A(DOFF#07)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              08/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 08/84 DBC\n*        DSECT.                                             * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\nID#07    DS    0H                                             08/84 DBC\n         DC    Y(X'6')             VERIFY LOCATION            08/84 DBC\n         DC    Y(ID#07VLN)         VERIFY LENGTH              08/84 DBC\n         SPACE 1                                              08/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#07V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'JDQ1110 '         00000E          DC    C'JDQ1110 '\n*                                                  DC    C'&SYSDATE'\n         DC    C'10/19/83'         000016+         DC    C'10/19/83'\n         DC    C'5665-295'         00001E          DC    C'5665-295 ---\n*                                  ************************************\n         SPACE 1                                              08/84 DBC\nID#07VLN EQU   *-ID#07V            VERIFY LENGTH              08/84 DBC\n         SPACE 3                                              08/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\nSRCH#07  DS    0H                                             08/84 DBC\n         DC    Y(X'52C')           VERIFY LOCATION            08/84 DBC\n         DC    Y(SRCH#07L)         VERIFY LENGTH              08/84 DBC\n         SPACE 1                                              08/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#07V DS    0H                  00052C SRCHPDS  EQU   *\n         MVI   X'158'(R13),0       00052C          MVI   ERCODE,0\n         LH    R2,X'0'(,R10)       000530          LH    RSULEFT,BLDENT\n         LA    R7,X'4'(,R10)       000534          LA    RPDS2,BLDENT\n*                                  ************************************\n         SPACE 1                                              08/84 DBC\nSRCH#07L EQU   *-SRCH#07V          VERIFY LENGTH              08/84 DBC\n         #TEST SIZE=(SRCH#07L,GE,SRCHPOHL)                    08/84 DBC\n         SPACE 3                                              08/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 08/84 DBC\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 08/84 DBC\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 08/84 DBC\n*        LABEL \"DFOUND\".                                    * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\nFINDK#07 DS    0H                                             08/84 DBC\n         DC    Y(X'7BC')           VERIFY LOCATION            08/84 DBC\n         DC    Y(FIND#07L)         VERIFY LENGTH              08/84 DBC\n         SPACE 1                                              08/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007BC FINDKEY  EQU   *\nFIND#07V MVC   X'8'(3,R7),X'8'(R8) 0007BC          MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007C2          IC    RX,PDS1INDC\n         NR    R4,R14              0007C6          NR    RX,RZ\n         LA    R5,X'E'             0007C8          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007CC          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007CE          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              08/84 DBC\nFIND#07L EQU   *-FIND#07V          VERIFY LENGTH              08/84 DBC\n         #TEST SIZE=(FIND#07L,GE,DFOUNDHL)                    08/84 DBC\n         SPACE 3                                              08/84 DBC\n************************************************************* 08/84 DBC\n*                                                           * 08/84 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 08/84 DBC\n*        DSECT.                                             * 08/84 DBC\n*                                                           * 08/84 DBC\n************************************************************* 08/84 DBC\n         SPACE 1                                              08/84 DBC\nDOFF#07  DS    0H                                             08/84 DBC\n         SPACE 1                                              08/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              08/84 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              08/84 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1\n         SPACE 1                                              08/84 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              08/84 DBC\n         #TEST SIZE=(*-DOFF#07,EQ,FIELDSLN)                   08/84 DBC\n         EJECT ,                                              06/84 WRH\n************************************************************* 06/84 WRH\n*                                                           * 06/84 WRH\n*        MODULE: IGC018                                     * 06/84 WRH\n*        PRODUCT: DF/DS (5740-AM7)                          * 06/84 WRH\n*        LEVEL: 8402                                        * 06/84 WRH\n*        PTF: UZ69197                                       * 06/84 WRH\n*        APAR: AZ66915                                      * 06/84 WRH\n*                                                           * 06/84 WRH\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 06/84 WRH\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 06/84 WRH\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 06/84 WRH\n*        DSECT.                                             * 06/84 WRH\n*                                                           * 06/84 WRH\n************************************************************* 06/84 WRH\n         SPACE 1                                              06/84 WRH\nVERSN#08 CSECT ,                                              06/84 WRH\n         DC    A(ID#08)            --> VERSION VERIFIER       06/84 WRH\n         DC    A(SRCH#08)          --> ORIGINAL \"SRCHPDS\" COD 06/84 WRH\n         DC    A(DFND#08)          --> ORIGINAL \"DFOUND\" CODE 06/84 WRH\n         DC    A(DOFF#08)          --> IBM DATA FIELDS DESCRIPTORS  WRH\n         SPACE 3                                              06/84 WRH\n************************************************************* 06/84 WRH\n*                                                           * 06/84 WRH\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 06/84 WRH\n*        DSECT.                                             * 06/84 WRH\n*                                                           * 06/84 WRH\n************************************************************* 06/84 WRH\n         SPACE 1                                              06/84 WRH\nID#08    DS    0H                                             06/84 WRH\n         DC    Y(X'6')             VERIFY LOCATION            06/84 WRH\n         DC    Y(ID#08VLN)         VERIFY LENGTH              06/84 WRH\n         SPACE 1                                              06/84 WRH\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#08V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZA66915'         00000E          DC    C'@ZA66915'\n*                                                  DC    C'&SYSDATE'\n         DC    C'11/22/83'         000016+         DC    C'11/22/83'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              06/84 WRH\nID#08VLN EQU   *-ID#08V            VERIFY LENGTH              06/84 WRH\n         SPACE 3                                              06/84 WRH\n************************************************************* 06/84 WRH\n*                                                           * 06/84 WRH\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 06/84 WRH\n*                                                           * 06/84 WRH\n************************************************************* 06/84 WRH\n         SPACE 1                                              06/84 WRH\nSRCH#08  DS    0H                                             06/84 WRH\n         DC    Y(X'57A')           VERIFY LOCATION            06/84 WRH\n         DC    Y(SRCH#08L)         VERIFY LENGTH              06/84 WRH\n         SPACE 1                                              06/84 WRH\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#08V DS    0H                  00057A SRCHPDS  EQU   *\n         BAL   R14,X'502'(,R12)    00057A          BAL   RSUBR,FIRSTMTY\n         TM    X'61'(R6),X'80'     00057E          TM    EXSFLG,EXSSYCD\n         BO    X'588'(,R12)        000582          BO    SRCHKYOK\n*                                  ************************************\n         SPACE 1                                              06/84 WRH\nSRCH#08L EQU   *-SRCH#08V          VERIFY LENGTH              06/84 WRH\n         #TEST SIZE=(SRCH#08L,GE,SRCHPOHL)                    06/84 WRH\n         SPACE 3                                              06/84 WRH\n************************************************************* 06/84 WRH\n*                                                           * 06/84 WRH\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 06/84 WRH\n*                                                           * 06/84 WRH\n************************************************************* 06/84 WRH\n         SPACE 1                                              06/84 WRH\nDFND#08  DS    0H                                             06/84 WRH\n         DC    Y(X'7CC')           VERIFY LOCATION            06/84 WRH\n         DC    Y(DFND#08L)         VERIFY LENGTH              06/84 WRH\n         SPACE 1                                              06/84 WRH\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#08V MVC   X'8'(3,R7),X'8'(R8) 0007CC DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007D2          IC    RX,PDS1INDC\n         NR    R4,R14              0007D6          NR    RX,RZ\n         LA    R5,X'E'             0007D8          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007DC          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007DE          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              06/84 WRH\nDFND#08L EQU   *-DFND#08V          VERIFY LENGTH              06/84 WRH\n         #TEST SIZE=(DFND#08L,GE,DFOUNDHL)                    06/84 WRH\n         SPACE 3                                              06/84 WRH\n************************************************************* 06/84 WRH\n*                                                           * 06/84 WRH\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 06/84 WRH\n*        DSECT.                                             * 06/84 WRH\n*                                                           * 06/84 WRH\n************************************************************* 06/84 WRH\n         SPACE 1                                              06/84 WRH\nDOFF#08  DS    0H                                             06/84 WRH\n         SPACE 1                                              06/84 WRH\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              06/84 WRH\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              06/84 WRH\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'141'(R13))      000141 CONCAT#  DS    FL1\n         SPACE 1                                              06/84 WRH\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              06/84 WRH\n         #TEST SIZE=(*-DOFF#08,EQ,FIELDSLN)                   06/84 WRH\n         EJECT ,                                              09/84 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n*        MODULE: IGC018                                     * 09/84 DBC\n*        PRODUCT: DFP (5665-295/A)                          * 09/84 DBC\n*                                                           * 09/84 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 09/84 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 09/84 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 09/84 DBC\n*        DSECT.                                             * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         SPACE 1                                              09/84 DBC\nVERSN#09 CSECT ,                                              09/84 DBC\n         DC    A(ID#09)            --> VERSION VERIFIER       09/84 DBC\n         DC    A(SRCH#09)          --> ORIGINAL \"SRCHPDS\" COD 09/84 DBC\n         DC    A(FINDK#09)         --> ORIGINAL \"FINDKEY\" COD 09/84 DBC\n         DC    A(DOFF#09)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              09/84 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 09/84 DBC\n*        DSECT.                                             * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         SPACE 1                                              09/84 DBC\nID#09    DS    0H                                             09/84 DBC\n         DC    Y(X'6')             VERIFY LOCATION            09/84 DBC\n         DC    Y(ID#09VLN)         VERIFY LENGTH              09/84 DBC\n         SPACE 1                                              09/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#09V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'ZA76850 '         00000E          DC    C'ZA76850 '\n*                                                  DC    C'&SYSDATE'\n         DC    C'03/28/84'         000016+         DC    C'03/28/84'\n         DC    C'5665-295'         00001E          DC    C'5665-295 ---\n*                                  ************************************\n         SPACE 1                                              09/84 DBC\nID#09VLN EQU   *-ID#09V            VERIFY LENGTH              09/84 DBC\n         SPACE 3                                              09/84 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         SPACE 1                                              09/84 DBC\nSRCH#09  DS    0H                                             09/84 DBC\n         DC    Y(X'52C')           VERIFY LOCATION            09/84 DBC\n         DC    Y(SRCH#09L)         VERIFY LENGTH              09/84 DBC\n         SPACE 1                                              09/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#09V DS    0H                  00052C SRCHPDS  EQU   *\n         MVI   X'158'(R13),0       00052C          MVI   ERCODE,0\n         LH    R2,X'0'(,R10)       000530          LH    RSULEFT,BLDENT\n         LA    R7,X'4'(,R10)       000534          LA    RPDS2,BLDENT\n*                                  ************************************\n         SPACE 1                                              09/84 DBC\nSRCH#09L EQU   *-SRCH#09V          VERIFY LENGTH              09/84 DBC\n         #TEST SIZE=(SRCH#09L,GE,SRCHPOHL)                    09/84 DBC\n         SPACE 3                                              09/84 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 09/84 DBC\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 09/84 DBC\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 09/84 DBC\n*        LABEL \"DFOUND\".                                    * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         SPACE 1                                              09/84 DBC\nFINDK#09 DS    0H                                             09/84 DBC\n         DC    Y(X'7BC')           VERIFY LOCATION            09/84 DBC\n         DC    Y(FIND#09L)         VERIFY LENGTH              09/84 DBC\n         SPACE 1                                              09/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007BC FINDKEY  EQU   *\nFIND#09V MVC   X'8'(3,R7),X'8'(R8) 0007BC          MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        0007C2          IC    RX,PDS1INDC\n         NR    R4,R14              0007C6          NR    RX,RZ\n         LA    R5,X'E'             0007C8          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007CC          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007CE          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              09/84 DBC\nFIND#09L EQU   *-FIND#09V          VERIFY LENGTH              09/84 DBC\n         #TEST SIZE=(FIND#09L,GE,DFOUNDHL)                    09/84 DBC\n         SPACE 3                                              09/84 DBC\n************************************************************* 09/84 DBC\n*                                                           * 09/84 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 09/84 DBC\n*        DSECT.                                             * 09/84 DBC\n*                                                           * 09/84 DBC\n************************************************************* 09/84 DBC\n         SPACE 1                                              09/84 DBC\nDOFF#09  DS    0H                                             09/84 DBC\n         SPACE 1                                              09/84 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              09/84 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              09/84 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1\n         SPACE 1                                              09/84 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              09/84 DBC\n         #TEST SIZE=(*-DOFF#09,EQ,FIELDSLN)                   09/84 DBC\n         EJECT ,                                              01/85 DBC\n************************************************************* 01/85 DBC\n*                                                           * 01/85 DBC\n*        MODULE: IGC018                                     * 01/85 DBC\n*        PRODUCT: DF/DS (5740-AM7)                          * 01/85 DBC\n*        LEVEL: 8406                                        * 01/85 DBC\n*        PTF: UZ70857                                       * 01/85 DBC\n*                                                           * 01/85 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 01/85 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 01/85 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 01/85 DBC\n*        DSECT.                                             * 01/85 DBC\n*                                                           * 01/85 DBC\n************************************************************* 01/85 DBC\n         SPACE 1                                              01/85 DBC\nVERSN#10 CSECT ,                                              01/85 DBC\n         DC    A(ID#10)            --> VERSION VERIFIER       01/85 DBC\n         DC    A(SRCH#10)          --> ORIGINAL \"SRCHPDS\" COD 01/85 DBC\n         DC    A(DFND#10)          --> ORIGINAL \"DFOUND\" CODE 01/85 DBC\n         DC    A(DOFF#10)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              01/85 DBC\n************************************************************* 01/85 DBC\n*                                                           * 01/85 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 01/85 DBC\n*        DSECT.                                             * 01/85 DBC\n*                                                           * 01/85 DBC\n************************************************************* 01/85 DBC\n         SPACE 1                                              01/85 DBC\nID#10    DS    0H                                             01/85 DBC\n         DC    Y(X'6')             VERIFY LOCATION            01/85 DBC\n         DC    Y(ID#10VLN)         VERIFY LENGTH              01/85 DBC\n         SPACE 1                                              01/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#10V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'@ZA74904'         00000E          DC    C'@ZA74904'\n*                                                  DC    C'&SYSDATE'\n         DC    C'03/27/84'         000016+         DC    C'03/27/84'\n         DC    C'5740-AM7'         00001E          DC    C'5740-AM7 ---\n*                                  ************************************\n         SPACE 1                                              01/85 DBC\nID#10VLN EQU   *-ID#10V            VERIFY LENGTH              01/85 DBC\n         SPACE 3                                              01/85 DBC\n************************************************************* 01/85 DBC\n*                                                           * 01/85 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 01/85 DBC\n*                                                           * 01/85 DBC\n************************************************************* 01/85 DBC\n         SPACE 1                                              01/85 DBC\nSRCH#10  DS    0H                                             01/85 DBC\n         DC    Y(X'58C')           VERIFY LOCATION            01/85 DBC\n         DC    Y(SRCH#10L)         VERIFY LENGTH              01/85 DBC\n         SPACE 1                                              01/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#10V DS    0H                  00058C SRCHPDS  EQU   *\n         BAL   R14,X'514'(,R12)    00058C          BAL   RSUBR,FIRSTMTY\n         SR    R0,R0               000590          SR    R0,R001/85 DBC\n         IC    R0,X'159'(,R13)     000592 SRCHTTR  IC    R0,CONCAT#\n*                                        ******************************\n*                                        * NOTE, \"SRCHTTR\" IS NOT     *\n*                                        * REFERENCED IN IGC018, SO   *\n*                                        * NO PROBLEM EXISTS HERE.    *\n*                                        ******************************\n         TM    X'61'(R6),X'80'     000596          TM    EXSFLG,EXSSYDC\n*                                  ************************************\n         SPACE 1                                              01/85 DBC\nSRCH#10L EQU   *-SRCH#10V          VERIFY LENGTH              01/85 DBC\n         #TEST SIZE=(SRCH#10L,GE,SRCHPOHL)                    01/85 DBC\n         SPACE 3                                              01/85 DBC\n************************************************************* 01/85 DBC\n*                                                           * 01/85 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 01/85 DBC\n*                                                           * 01/85 DBC\n************************************************************* 01/85 DBC\n         SPACE 1                                              01/85 DBC\nDFND#10  DS    0H                                             01/85 DBC\n         DC    Y(X'808')           VERIFY LOCATION            01/85 DBC\n         DC    Y(DFND#10L)         VERIFY LENGTH              01/85 DBC\n         SPACE 1                                              01/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nDFND#10V MVC   X'8'(3,R7),X'8'(R8) 000808 DFOUND   MVC   PDS2TTRP,PDS1T\n         IC    R4,X'B'(,R8)        00080E          IC    RX,PDS1INDC\n         NR    R4,R14              000812          NR    RX,RZ01/85 DBC\n         LA    R5,X'E'             000814          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               000818          LCR   RY,RY01/85 DBC\n         AH    R5,X'2'(,R10)       00081A          AH    RY,BLDELEN\n*                                  ************************************\n         SPACE 1                                              01/85 DBC\nDFND#10L EQU   *-DFND#10V          VERIFY LENGTH              01/85 DBC\n         #TEST SIZE=(DFND#10L,GE,DFOUNDHL)                    01/85 DBC\n         SPACE 3                                              01/85 DBC\n************************************************************* 01/85 DBC\n*                                                           * 01/85 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 01/85 DBC\n*        DSECT.                                             * 01/85 DBC\n*                                                           * 01/85 DBC\n************************************************************* 01/85 DBC\n         SPACE 1                                              01/85 DBC\nDOFF#10  DS    0H                                             01/85 DBC\n         SPACE 1                                              01/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              01/85 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              01/85 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL25601/85 DBC\n         DC    S(X'159'(R13))      000159 CONCAT#  DS    FL1\n         SPACE 1                                              01/85 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              01/85 DBC\n         #TEST SIZE=(*-DOFF#10,EQ,FIELDSLN)                   01/85 DBC\n         EJECT ,                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        MODULE: IGC018                                     * 10/85 DBC\n*        PRODUCT: DFP (5665-295/A)                          * 10/85 DBC\n*        PTF: UZ38298                                       * 10/85 DBC\n*        PUT: 8505                                          * 10/85 DBC\n*                                                           * 10/85 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 10/85 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 10/85 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nVERSN#11 CSECT ,                                              10/85 DBC\n         DC    A(ID#11)            --> VERSION VERIFIER       10/85 DBC\n         DC    A(SRCH#11)          --> ORIGINAL \"SRCHPDS\" COD 10/85 DBC\n         DC    A(FINDK#11)         --> ORIGINAL \"FINDKEY\" COD 10/85 DBC\n         DC    A(DOFF#11)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nID#11    DS    0H                                             10/85 DBC\n         DC    Y(X'6')             VERIFY LOCATION            10/85 DBC\n         DC    Y(ID#11VLN)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#11V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'ZA83145 '         00000E          DC    C'ZA83145 '\n*                                                  DC    C'&SYSDATE'\n         DC    C'03/19/85'         000016+         DC    C'03/19/85'\n         DC    C'5665-295'         00001E          DC    C'5665-295 ---\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nID#11VLN EQU   *-ID#11V            VERIFY LENGTH              10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nSRCH#11  DS    0H                                             10/85 DBC\n         DC    Y(X'52C')           VERIFY LOCATION            10/85 DBC\n         DC    Y(SRCH#11L)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#11V DS    0H                  00052C SRCHPDS  EQU   *\n         MVI   X'160'(R13),0       00052C          MVI   ERCODE,0\n*                                  000530          MODESET KEYADDR=EXSK\n         IC    R3,X'60'(,R6)       000530+         IC    3,EXSKEY\n         SPKA  0(R3)               000534+         SPKA  0(3)\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nSRCH#11L EQU   *-SRCH#11V          VERIFY LENGTH              10/85 DBC\n         #TEST SIZE=(SRCH#11L,GE,SRCHPOHL)                    10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 10/85 DBC\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 10/85 DBC\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 10/85 DBC\n*        LABEL \"DFOUND\".                                    * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nFINDK#11 DS    0H                                             10/85 DBC\n         DC    Y(X'7F2')           VERIFY LOCATION            10/85 DBC\n         DC    Y(FIND#11L)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007F2 FINDKEY  EQU   *\nFIND#11V STCM  R5,7,X'8'(R7)       0007F2          STCM  RY,ADDR3,PDS2T\n         LA    R5,X'E'             0007F6          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007FA          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007FC          AH    RY,BLDELEN\n         BM    X'82C'(,R12)        000800          BM    NOMOVE\n         BXLE  R4,R4,X'808'(R12)   000804          BXLE  RX,RX,EXEC\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nFIND#11L EQU   *-FIND#11V          VERIFY LENGTH              10/85 DBC\n         #TEST SIZE=(FIND#11L,GE,DFOUNDHL)                    10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nDOFF#11  DS    0H                                             10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              10/85 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              10/85 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'161'(R13))      000161 CONCAT#  DS    FL1\n         SPACE 1                                              10/85 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\n         #TEST SIZE=(*-DOFF#11,EQ,FIELDSLN)                   10/85 DBC\n         EJECT ,                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        MODULE: IGC018                                     * 10/85 DBC\n*        PRODUCT: DFP (5665-295/A)                          * 10/85 DBC\n*        PTF: UZ77946                                       * 10/85 DBC\n*        PUT: 8503                                          * 10/85 DBC\n*                                                           * 10/85 DBC\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 10/85 DBC\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 10/85 DBC\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nVERSN#12 CSECT ,                                              10/85 DBC\n         DC    A(ID#12)            --> VERSION VERIFIER       10/85 DBC\n         DC    A(SRCH#12)          --> ORIGINAL \"SRCHPDS\" COD 10/85 DBC\n         DC    A(FINDK#12)         --> ORIGINAL \"FINDKEY\" COD 10/85 DBC\n         DC    A(DOFF#12)          --> IBM DATA FIELDS DESCRIPTORS  DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nID#12    DS    0H                                             10/85 DBC\n         DC    Y(X'6')             VERIFY LOCATION            10/85 DBC\n         DC    Y(ID#12VLN)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#12V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'ZA83696 '         00000E          DC    C'ZA83696 '\n*                                  000016          DC    C'&SYSDATE'\n         DC    C'01/06/85'         000016+         DC    C'01/06/85'\n         DC    C'5665-295'         00001E          DC    C'5665-295 ---\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nID#12VLN EQU   *-ID#12V            VERIFY LENGTH              10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nSRCH#12  DS    0H                                             10/85 DBC\n         DC    Y(X'52C')           VERIFY LOCATION            10/85 DBC\n         DC    Y(SRCH#12L)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#12V DS    0H                  00052C SRCHPDS  EQU   *\n         MVI   X'160'(R13),0       00052C          MVI   ERCODE,0\n*                                  000530          MODESET KEYADDR=EXSK\n         IC    R3,X'60'(,R6)       000530+         IC    3,EXSKEY\n         SPKA  0(R3)               000534+         SPKA  0(3)\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nSRCH#12L EQU   *-SRCH#12V          VERIFY LENGTH              10/85 DBC\n         #TEST SIZE=(SRCH#12L,GE,SRCHPOHL)                    10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 10/85 DBC\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 10/85 DBC\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 10/85 DBC\n*        LABEL \"DFOUND\".                                    * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nFINDK#12 DS    0H                                             10/85 DBC\n         DC    Y(X'7E0')           VERIFY LOCATION            10/85 DBC\n         DC    Y(FIND#12L)         VERIFY LENGTH              10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007E0 FINDKEY  EQU   *\nFIND#12V STCM  R5,7,X'8'(R7)       0007E0          STCM  RY,ADDR3,PDS2T\n         LA    R5,X'E'             0007E4          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007E8          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007EA          AH    RY,BLDELEN\n         BM    X'81A'(,R12)        0007EE          BM    NOMOVE\n         BXLE  R4,R4,X'7F6'(R12)   0007F2          BXLE  RX,RX,EXEC\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\nFIND#12L EQU   *-FIND#12V          VERIFY LENGTH              10/85 DBC\n         #TEST SIZE=(FIND#12L,GE,DFOUNDHL)                    10/85 DBC\n         SPACE 3                                              10/85 DBC\n************************************************************* 10/85 DBC\n*                                                           * 10/85 DBC\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 10/85 DBC\n*        DSECT.                                             * 10/85 DBC\n*                                                           * 10/85 DBC\n************************************************************* 10/85 DBC\n         SPACE 1                                              10/85 DBC\nDOFF#12  DS    0H                                             10/85 DBC\n         SPACE 1                                              10/85 DBC\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              10/85 DBC\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              10/85 DBC\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'161'(R13))      000161 CONCAT#  DS    FL1\n         SPACE 1                                              10/85 DBC\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              10/85 DBC\n         #TEST SIZE=(*-DOFF#12,EQ,FIELDSLN)                   10/85 DBC\n         EJECT\n*************************************************************\n*                                                           *\n*        MODULE: IGC018                                     *\n*        PRODUCT: DFP (5665-295/A)                          *\n*        PTF: UY06422                                       *\n*        PUT: 8704                                          *\n*                                                           *\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  *\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    *\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   *\n*        DSECT.                                             *\n*                                                           *\n*************************************************************\n         SPACE 1\nVERSN#13 CSECT ,\n         DC    A(ID#13)            --> VERSION VERIFIER\n         DC    A(SRCH#13)          --> ORIGINAL \"SRCHPDS\" COD\n         DC    A(FINDK#13)         --> ORIGINAL \"FINDKEY\" COD\n         DC    A(DOFF#13)          --> IBM DATA FIELDS DESCRIPTORS\n         SPACE 3\n*************************************************************\n*                                                           *\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   *\n*        DSECT.                                             *\n*                                                           *\n*************************************************************\n         SPACE 1\nID#13    DS    0H\n         DC    Y(X'6')             VERIFY LOCATION\n         DC    Y(ID#13VLN)         VERIFY LENGTH\n         SPACE 1\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#13V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'02/06/87'         00000E+         DC    C'02/06/87'\n         DC    C'HDP2230 '         000016          DC    C'HDP2230 '\n         DC    C'UY06422 '         00001E          DC    C'UY06422 '\n         DC    C'5665-XA2'         000026          DC    C'5665-XA2'\n*                                  ************************************\n         SPACE 1\nID#13VLN EQU   *-ID#13V            VERIFY LENGTH\n         SPACE 3\n*************************************************************\n*                                                           *\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    *\n*                                                           *\n*************************************************************\n         SPACE 1\nSRCH#13  DS    0H\n         DC    Y(X'546')           VERIFY LOCATION\n         DC    Y(SRCH#13L)         VERIFY LENGTH\n         SPACE 1\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#13V DS    0H                  000546 SRCHPDS  EQU   *\n         MVI   X'160'(R13),0       000546          MVI   ERCODE,0\n*                                  00054A          MODESET KEYADDR=EXSK\n         IC    R3,X'60'(,R6)       00054A+         IC    3,EXSKEY\n         SPKA  0(R3)               00054E+         SPKA  0(3)\n*                                  ************************************\n         SPACE 1\nSRCH#13L EQU   *-SRCH#13V          VERIFY LENGTH\n         #TEST SIZE=(SRCH#13L,GE,SRCHPOHL)\n         SPACE 3\n*************************************************************\n*                                                           *\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     *\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       *\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  *\n*        LABEL \"DFOUND\".                                    *\n*                                                           *\n*************************************************************\n         SPACE 1\nFINDK#13 DS    0H\n         DC    Y(X'7F0')           VERIFY LOCATION\n         DC    Y(FIND#13L)         VERIFY LENGTH\n         SPACE 1\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007F0 FINDKEY  EQU   *\nFIND#13V STCM  R5,7,X'8'(R7)       0007F0          STCM  RY,ADDR3,PDS2T\n         LA    R5,X'E'             0007F4          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007F8          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007FA          AH    RY,BLDELEN\n         BM    X'82A'(,R12)        0007FE          BM    NOMOVE\n         BXLE  R4,R4,X'806'(R12)   000802          BXLE  RX,RX,EXEC\n*                                  ************************************\n         SPACE 1\nFIND#13L EQU   *-FIND#13V          VERIFY LENGTH\n         #TEST SIZE=(FIND#13L,GE,DFOUNDHL)\n         SPACE 3\n*************************************************************\n*                                                           *\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" *\n*        DSECT.                                             *\n*                                                           *\n*************************************************************\n         SPACE 1\nDOFF#13  DS    0H\n         SPACE 1\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'161'(R13))      000161 CONCAT#  DS    FL1\n         SPACE 1\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1\n         #TEST SIZE=(*-DOFF#13,EQ,FIELDSLN)\n         EJECT ,                                              02/88 SBG\n************************************************************* 02/88 SBG\n*                                                           * 02/88 SBG\n*        MODULE: IGC018                                     * 02/88 SBG\n*        PRODUCT: DFP (5665-XA2)  VERSION 2.2               * 02/88 SBG\n*        FMID: JDP2220                                      * 02/88 SBG\n*        PTF:  UY02277                                      * 02/88 SBG\n*                                                           * 02/88 SBG\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 02/88 SBG\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 02/88 SBG\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 02/88 SBG\n*        DSECT.                                             * 02/88 SBG\n*                                                           * 02/88 SBG\n************************************************************* 02/88 SBG\n         SPACE 1                                              02/88 SBG\nVERSN#14 CSECT ,                                              02/88 SBG\n         DC    A(ID#14)            --> VERSION VERIFIER       02/88 SBG\n         DC    A(SRCH#14)          --> ORIGINAL \"SRCHPDS\" COD 02/88 SBG\n         DC    A(FINDK#14)         --> ORIGINAL \"FINDKEY\" COD 02/88 SBG\n         DC    A(DOFF#14)          --> IBM DATA FIELDS DESCRIPTORS  SBG\n         SPACE 3                                              02/88 SBG\n************************************************************* 02/88 SBG\n*                                                           * 02/88 SBG\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 02/88 SBG\n*        DSECT.                                             * 02/88 SBG\n*                                                           * 02/88 SBG\n************************************************************* 02/88 SBG\n         SPACE 1                                              02/88 SBG\nID#14    DS    0H                                             02/88 SBG\n         DC    Y(X'6')             VERIFY LOCATION            02/88 SBG\n         DC    Y(ID#14VLN)         VERIFY LENGTH              02/88 SBG\n         SPACE 1                                              02/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#14V   DC    C'IGC018  '         000006          DC    C'IGC018  '\n         DC    C'09/26/86'         00000E+         DC    C'&SYSDATE'\n*                                  00000E          DC    C'09/26/86'\n         DC    C'JDP2220 '         000016          DC    C'JDP2220 '\n         DC    C'UY02277 '         00001E          DC    C'UY02277 '\n         DC    C'5665-XA2'         000026          DC    C'5665-XA2 (C)\n*                                  ************************************\n         SPACE 1                                              02/88 SBG\nID#14VLN EQU   *-ID#14V            VERIFY LENGTH              02/88 SBG\n         SPACE 3                                              02/88 SBG\n************************************************************* 02/88 SBG\n*                                                           * 02/88 SBG\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 02/88 SBG\n*                                                           * 02/88 SBG\n************************************************************* 02/88 SBG\n         SPACE 1                                              02/88 SBG\nSRCH#14  DS    0H                                             02/88 SBG\n         DC    Y(X'546')           VERIFY LOCATION            02/88 SBG\n         DC    Y(SRCH#14L)         VERIFY LENGTH              02/88 SBG\n         SPACE 1                                              02/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#14V DS    0H                  000546 SRCHPDS  EQU   *\n         MVI   X'160'(R13),0       000546          MVI   ERCODE,0\n*                                  00054A          MODESET KEYADDR=EXSK\n         IC    R3,X'60'(,R6)       00054A+         IC    3,EXSKEY\n         SPKA  0(R3)               00054E+         SPKA  0(3)\n*                                  ************************************\n         SPACE 1                                              02/88 SBG\nSRCH#14L EQU   *-SRCH#14V          VERIFY LENGTH              02/88 SBG\n         #TEST SIZE=(SRCH#14L,GE,SRCHPOHL)                    02/88 SBG\n         SPACE 3                                              02/88 SBG\n************************************************************* 02/88 SBG\n*                                                           * 02/88 SBG\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 02/88 SBG\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 02/88 SBG\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 02/88 SBG\n*        LABEL \"DFOUND\".                                    * 02/88 SBG\n*                                                           * 02/88 SBG\n************************************************************* 02/88 SBG\n         SPACE 1                                              02/88 SBG\nFINDK#14 DS    0H                                             02/88 SBG\n         DC    Y(X'7F0')           VERIFY LOCATION            02/88 SBG\n         DC    Y(FIND#14L)         VERIFY LENGTH              02/88 SBG\n         SPACE 1                                              02/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  0007F0 FINDKEY  EQU   *\nFIND#14V STCM  R5,7,X'8'(R7)       0007F0          STCM  RY,ADDR3,PDS2T\n         LA    R5,X'E'             0007F4          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               0007F8          LCR   RY,RY\n         AH    R5,X'2'(,R10)       0007FA          AH    RY,BLDELEN\n         BM    X'82A'(,R12)        0007FE          BM    NOMOVE\n         BXLE  R4,R4,X'806'(R12)   000802          BXLE  RX,RX,EXEC\n*                                  ************************************\n         SPACE 1                                              02/88 SBG\nFIND#14L EQU   *-FIND#14V          VERIFY LENGTH              02/88 SBG\n         #TEST SIZE=(FIND#14L,GE,DFOUNDHL)                    02/88 SBG\n         SPACE 3                                              02/88 SBG\n************************************************************* 02/88 SBG\n*                                                           * 02/88 SBG\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 02/88 SBG\n*        DSECT.                                             * 02/88 SBG\n*                                                           * 02/88 SBG\n************************************************************* 02/88 SBG\n         SPACE 1                                              02/88 SBG\nDOFF#14  DS    0H                                             02/88 SBG\n         SPACE 1                                              02/88 SBG\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1                                              02/88 SBG\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1                                              02/88 SBG\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'161'(R13))      000161 CONCAT#  DS    FL1\n         SPACE 1                                              02/88 SBG\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              02/88 SBG\n         #TEST SIZE=(*-DOFF#14,EQ,FIELDSLN)                   02/88 SBG\n         EJECT ,                                              10/90 DBA\n************************************************************* 10/90 DBA\n*                                                           * 10/90 DBA\n*        MODULE: IGC018                                     * 10/90 DBA\n*        PRODUCT: DFP (5665-XA2)  VERSION 2.4               * 10/90 DBA\n*        FMID: HDP2240                                      * 10/90 DBA\n*        PTF:  UY41197                                      * 10/90 DBA\n*                                                           * 10/90 DBA\n*        THE FOLLOWING VECTOR POINTS TO VARIOUS DATA AREAS  * 10/90 DBA\n*        USED TO BOTH IDENTIFY AND MATCH THIS PARTICULAR    * 10/90 DBA\n*        VERSION OF IGC018. IT IS MAPPED BY THE \"VERSION\"   * 10/90 DBA\n*        DSECT.                                             * 10/90 DBA\n*                                                           * 10/90 DBA\n************************************************************* 10/90 DBA\n         SPACE 1                                              10/90 DBA\nVERSN#15 CSECT ,                                              10/90 DBA\n         DC    A(ID#15)            --> VERSION VERIFIER       10/90 DBA\n         DC    A(SRCH#15)          --> ORIGINAL \"SRCHPDS\" COD 10/90 DBA\n         DC    A(FINDK#15)         --> ORIGINAL \"FINDKEY\" COD 10/90 DBA\n         DC    A(DOFF#15)          --> IBM DATA FIELDS DESCRIPTORS  DBA\n         SPACE 3                                              10/90 DBA\n************************************************************* 10/90 DBA\n*                                                           * 10/90 DBA\n*        MODULE IDENTIFIER CODE. MAPPED BY THE \"ORIGINAL\"   * 10/90 DBA\n*        DSECT.                                             * 10/90 DBA\n*                                                           * 10/90 DBA\n************************************************************* 10/90 DBA\n         SPACE 1                                              10/90 DBA\nID#15    DS    0H                                             10/90 DBA\n         DC    Y(X'6')             VERIFY LOCATION            10/90 DBA\n         DC    Y(ID#15VLN)         VERIFY LENGTH              10/90 DBA\n         SPACE 1                                              10/90 DBA\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nID#15V   DC    X'20'               000006          DC    AL1(CPYRGHTB-1\n         DC    C'IGC018  '         000007          DC    C'IGC018  '\n         DC    C'09/25/89'         00000F+         DC    C'&SYSDATE'\n*                                  00000F          DC    C'09/25/89'\n         DC    C'HDP2240 '         000017          DC    C'HDP2240 '\n         DC    C'UY41197 '         00001F          DC    C'UY41197 '\n*                                  000027 CPYRGHTB DS    0C\n         DC    C'5665-XA2'         000027          DC    C'5665-XA2 (C)\n*                                  ************************************\n         SPACE 1                                              10/90 DBA\nID#15VLN EQU   *-ID#15V            VERIFY LENGTH              10/90 DBA\n         SPACE 3                                              10/90 DBA\n************************************************************* 10/90 DBA\n*                                                           * 10/90 DBA\n*        \"SRCHPDS\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.    * 10/90 DBA\n*                                                           * 10/90 DBA\n************************************************************* 10/90 DBA\n         SPACE 1                                              10/90 DBA\nSRCH#15  DS    0H                                             10/90 DBA\n         DC    Y(X'57E')           VERIFY LOCATION            10/90 DBA\n         DC    Y(SRCH#15L)         VERIFY LENGTH              10/90 DBA\n         SPACE 1                                              10/90 DBA\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\nSRCH#15V DS    0H                  00057E SRCHPDS  EQU   *\n         MVI   X'160'(R13),0       00057E          MVI   ERCODE,0\n*                                  000582          MODESET KEYADDR=EXSK\n         IC    R3,X'60'(,R6)       000582+         IC    3,EXSKEY\n         SPKA  0(R3)               000586+         SPKA  0(3)\n*                                  ************************************\n         SPACE 1                                              10/90 DBA\nSRCH#15L EQU   *-SRCH#15V          VERIFY LENGTH              10/90 DBA\n         #TEST SIZE=(SRCH#15L,GE,SRCHPOHL)                    10/90 DBA\n         SPACE 3                                              10/90 DBA\n************************************************************* 10/90 DBA\n*                                                           * 10/90 DBA\n*        \"DFOUND\" TRAP. MAPPED BY THE \"ORIGINAL\" DSECT.     * 10/90 DBA\n*        NOTE, IN THIS VERSION OF IGC018, THE TRAP IS       * 10/90 DBA\n*        LOCATED AT LABEL \"FINDKEY\" WHICH IS NOW JUST PAST  * 10/90 DBA\n*        LABEL \"DFOUND\".                                    * 10/90 DBA\n*                                                           * 10/90 DBA\n************************************************************* 10/90 DBA\n         SPACE 1                                              10/90 DBA\nFINDK#15 DS    0H                                             10/90 DBA\n         DC    Y(X'828')           VERIFY LOCATION            10/90 DBA\n         DC    Y(FIND#15L)         VERIFY LENGTH              10/90 DBA\n         SPACE 1                                              10/90 DBA\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000828 FINDKEY  EQU   *\nFIND#15V STCM  R5,7,X'8'(R7)       000828          STCM  RY,ADDR3,PDS2T\n         LA    R5,X'E'             00082C          LA    RY,PDS2USRD-PD\n         LCR   R5,R5               000830          LCR   RY,RY\n         AH    R5,X'2'(,R10)       000832          AH    RY,BLDELEN\n         BM    X'862'(,R12)        000836          BM    NOMOVE\n         BXLE  R4,R4,X'83E'(R12)   00083A          BXLE  RX,RX,EXEC\n*                                  ************************************\n         SPACE 1                                              10/90 DBA\nFIND#15L EQU   *-FIND#15V          VERIFY LENGTH              10/90 DBA\n         #TEST SIZE=(FIND#15L,GE,DFOUNDHL)                    10/90 DBA\n         SPACE 3                                              10/90 DBA\n************************************************************* 10/90 DBA\n*                                                           * 10/90 DBA\n*        IBM DATA FIELD DESCRIPTORS. MAPPED BY THE \"FIELDS\" * 10/90 DBA\n*        DSECT.                                             * 10/90 DBA\n*                                                           * 10/90 DBA\n************************************************************* 10/90 DBA\n         SPACE 1                                              10/90 DBA\nDOFF#15  DS    0H                                             10/90 DBA\n         SPACE 1                                              10/90 DBA\n*                                  ************************************\n*                                  *          IGC018 CODE             *\n*                                  ************************************\n*                                  000000 IGC018   CSECT ,\n*                                  000000          BALR  RBASE,0\n         DC    S(X'2'(R12))        000002          USING *,RBASE\n         SPACE 1\n         DC    S(0(R8))            000008 RPDS1    EQU   8\n         DC    S(0(R10))           00000A RLIST    EQU   10\n         DC    S(0(R11))           00000B RDCB     EQU   11\n         SPACE 1\n*                                  000000 WORKAREA DSECT ,\n         DC    S(0(R13))           000000 RDAREA   DS    CL256\n         DC    S(X'161'(R13))      000161 CONCAT#  DS    FL1\n         SPACE 1\n*                                 -000040 RBPRFX   DSECT ,\n*                                  000000 RBBASIC  DS    0F\n         DC    S(X'60'(R6))        000060 EXSKEY   DS    X\n         DC    S(X'61'(R6))        000061 EXSFLG   DS    B\n         DC    B'00100000'                EXSBLDL  EQU   B'00100000'\n*                                  ************************************\n         SPACE 1                                              10/90 DBA\n         #TEST SIZE=(*-DOFF#15,EQ,FIELDSLN)                   10/90 DBA\n         END   ,                                              10/90 DBA\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXPORT": {"ttr": 4873, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00\\x13\\x00\\x13\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "FILE407"}, "text": "//*\n//UNLOAD  EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//I1       DD  DSN=J0PDBC.CBT.DYNABLDL.PENDING,DISP=SHR\n//I2       DD  DSN=J0PDBC.CBT.MACLIB.PENDING,DISP=SHR\n//O1A      DD  DSN=TRASH,UNIT=TAPE,VOL=SER=TRASH,LABEL=(,NL),\n//             DISP=(,PASS)\n//O1B      DD  DSN=TRASH,VOL=REF=*.O1A,LABEL=(2,NL),DISP=(,PASS)\n//O2A      DD  DSN=TRASH,VOL=REF=*.O1A,LABEL=(3,NL),DISP=(,PASS)\n//O2B      DD  DSN=TRASH,VOL=REF=*.O1A,LABEL=(4,NL),DISP=(,PASS)\n         C     I=I1,O=O1A\n         C     I=I1,O=O1B\n         C     I=I2,O=O2A\n         C     I=I2,O=O2B\n//*\n//TAPEMAP EXEC PGM=TAPEMAP\n//SYSPRINT DD  SYSOUT=*\n//SYSPRNT2 DD  SYSOUT=*\n//SYSUT1   DD  DSN=TRASH,VOL=REF=*.UNLOAD.O1A,LABEL=(,BLP),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INSTALL": {"ttr": 4875, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00h\\x00h\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 104, "newlines": 104, "modlines": 0, "user": "FILE407"}, "text": "************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*              INSTALLATION GUIDE                           * 11/83 DBC\n*                                                           * 11/83 DBC\n* USE THE FOLLOWING STEPS TO INSTALL DYNABLDL.              * 11/83 DBC\n*                                                           * 11/83 DBC\n* EXAMINE THE MICROFICHE FOR THE VERSION OF IGC018 (THE     * 11/83 DBC\n* BLDL SVC ROUTINE) THAT EXISTS ON YOUR SYSTEM. IN          * 11/83 DBC\n* PARTICULAR, EXAMINE THE FOLLOWING.                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE MODULE IDENTIFICATION FIELDS LOCATED NEAR    * 11/83 DBC\n*          THE START OF IGC018. THIS IS USED BY DYNABLDL TO * 11/83 DBC\n*          IDENTIFY THE VERSION OF IGC018 THAT EXISTS IN    * 11/83 DBC\n*          YOUR SYSTEM.                                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE CODE LOCATED AT IGC018'S LABEL \"SRCHPDS\".    * 11/83 DBC\n*          THIS IS WHERE DYNABLDL INSERTS ITS JUMP TO ITS   * 11/83 DBC\n*          DYNAMIC TABLE LOOKUP ROUTINE.                    * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE CODE LOCATED AT ICG018'S LABEL \"DFOUND\" OR   * 10/85 DBC\n*          \"FINDKEY\" (DEPENDING UPON THE VERSION IF ICG018  * 10/85 DBC\n*          THAT YOU HAVE). THIS IS WHERE DYNABLDL INSERTS   * 10/85 DBC\n*          ITS JUMP TO ITS DYNAMIC TABLE UPDATE ROUTINE.    * 10/85 DBC\n*                                                           * 11/83 DBC\n*        - THE BASE REGISTER (USUALLY R13) AND              * 11/83 DBC\n*          DISPLACEMENTS OF THE FOLLOWING FIELDS IN THE     * 11/83 DBC\n*          \"WORKAREA\" DSECT.                                * 11/83 DBC\n*              RDAREA                                       * 11/83 DBC\n*              CONCAT#                                      * 11/83 DBC\n*          THESE ARE FIELDS REFERENCED BY THE INTERCEPT     * 11/83 DBC\n*          ROUTINES.                                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE BASE REGISTER (USUALLY R6) AND DISPLACEMENTS * 09/84 DBC\n*          OF THE FOLLOWING FIELDS IN THE SVRB EXTENDED     * 09/84 DBC\n*          SAVE AREA. (REMEMBER THAT AN ASSEMBLY XREF FOR   * 09/84 DBC\n*          IGC018 WILL LIST THE VALUES OF THE FOLLOWING     * 09/84 DBC\n*          LABELS AT +X'40' GREATER THAT THEIR TRUE OFFSETS * 09/84 DBC\n*          BECAUSE OF THE PRESENCE OF A 64-BYTE LONG PREFIX * 10/85 DBC\n*          SECTION IN THE RB DSECT MAP).                    * 09/84 DBC\n*              EXSKEY                                       * 09/84 DBC\n*              EXSFLG                                       * 09/84 DBC\n*              EXSBLDL (FLAG BIT)                           * 09/84 DBC\n*          THESE FIELDS AND FLAGS ARE REFERENCES BY THE     * 09/84 DBC\n*          INTERCEPT ROUTINES.                              * 09/84 DBC\n*                                                           * 11/83 DBC\n*        - THE REGISTER (USUALLY R12 AND NAMED \"RBASE\")     * 11/83 DBC\n*          USED AS IGC018'S PROGRAM BASE, AND ITS RELATIVE  * 11/83 DBC\n*          BASE ADDRESS (USUALLY X'2').                     * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - THE BASE REGISTERS USED BY IGC018 TO POINT TO:   * 11/83 DBC\n*              - THE DCB OF THE LIBRARIES CURRENTLY BEING   * 11/83 DBC\n*                SEARCHED (USUALLY R11 AND NAMED \"RDCB\"),   * 11/83 DBC\n*              - THE USER'S PARAMETER LIST THAT WAS PASSED  * 11/83 DBC\n*                TO THE BLDL ROUTINE (USUALLY R10 AND NAMED * 11/83 DBC\n*                \"RLIST\"),                                  * 11/83 DBC\n*              - THE PDS DIRECTORY ENTRY FOUND BY IGC018 AT * 11/83 DBC\n*                THE TIME THAT \"DFOUND\" IS CALLED (USUALLY  * 11/83 DBC\n*                R8 AND NAMED \"RPDS1\").                     * 11/83 DBC\n*                                                           * 11/83 DBC\n* EXAMINE THE VERSION TABLES ALREADY EXISTING IN THIS       * 11/83 DBC\n* DYNABLDL TO SEE IF ANY OF THEM MATCH YOUR VERSION OF      * 11/83 DBC\n* IGC018. IF SO, THEN DYNABLDL WILL FUNCTION ON YOUR SYSTEM * 11/83 DBC\n* WITHOUT MODIFICATION. IF NOT, THEN YOU WILL HAVE TO ADD A * 11/83 DBC\n* VERSION TABLE TO DYNABLDL DESCRIBING YOUR IGC018.  UNLESS * 11/83 DBC\n* THE LOGIC OF IGC018 CHANGES DRASTICLY, CREATING A NEW     * 11/83 DBC\n* VERSION TABLE SHOULD BE ALL THAT YOU NEED TO DO; YOU      * 11/83 DBC\n* SHOULD NOT HAVE TO CHANGE ANYTHING ELSE IN DYNABLDL.      * 11/83 DBC\n*                                                           * 11/83 DBC\n* NOTE, AN EASY TEST WOULD BE TO SIMPLY RUN DYNABLDL AS     * 11/83 DBC\n* RECEIVED. IF IT RECOGNIZES YOUR IGC018, THEN IT WILL RUN. * 11/83 DBC\n* IF IT CANNOT RECOGNIZE YOUR IGC018, THEN IT WILL SAY SO   * 11/83 DBC\n* AND TERMINATE.                                            * 11/83 DBC\n*                                                           * 11/83 DBC\n* IF YOU NEED TO ADD A NEW VERSION TABLE, THEN DO THE       * 11/83 DBC\n* FOLLOWING:                                                * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - USING THE INFORMATION GATHERED BY YOUR           * 11/83 DBC\n*          EXAMINATION OF IGC018, CREATE A NEW VERSION      * 11/83 DBC\n*          TABLE MODELED ON THE VERSION TABLES ALREADY      * 11/83 DBC\n*          PROVIDED. BE SURE TO INCLUDE A 4-ELEMENT VECTOR  * 11/83 DBC\n*          POINTING TO THE FOUR PARTS OF YOUR NEW VERSION   * 11/83 DBC\n*          TABLE.                                           * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - ADD TO THE \"VERSIONS\" VECTOR AN ENTRY POINTING   * 11/83 DBC\n*          TO YOUR 4-ELEMENT VECTOR.                        * 11/83 DBC\n*                                                           * 11/83 DBC\n*        - REASSEMBLE DYNABLDL USING \"SYS1.MACLIB\",         * 11/83 DBC\n*          \"SYS1.AMODGEN\", AND THE MACLIB PROVIDED WITH THE * 11/83 DBC\n*          DYNABLDL DISTRIBUTION.                           * 11/83 DBC\n*                                                           * 11/83 DBC\n* LINK EDIT DYNABLDL INTO A LINKLIST LIBRARY OR SOME OTHER  * 11/83 DBC\n* AUTHORIZED LIBRARY. NOTE, ALTHOUGH THE INTERCEPT ROUTINES * 11/83 DBC\n* INSERTED INTO IGC018 ARE REENTRANT, DYNABLDL ITSELF IS    * 11/83 DBC\n* NOT. THEREFORE, DYNABLDL SHOULD NOT BE PLACED IN          * 11/83 DBC\n* SYS1.LPALIB.                                              * 11/83 DBC\n*                                                           * 11/83 DBC\n* CREATE THE FOLLOWING PROC NAMED DYNABLDL:                 * 11/83 DBC\n*                                                           * 11/83 DBC\n*        //IEFPROC EXEC PGM=DYNABLDL,REGION=100K            * 11/83 DBC\n*        //STEPLIB  DD  DSN= --- (ONLY IF NOT IN LINKLIST)  * 11/83 DBC\n*        //IEFRDER  DD  DDNAME=SYSPRINT                     * 11/83 DBC\n*        //SYSPRINT DD  SYSOUT=A (USED FOR REPORT FUNCTION) * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PROC": {"ttr": 4878, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00\\x03\\x00\\x03\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 3, "newlines": 3, "modlines": 0, "user": "FILE407"}, "text": "//IEFPROC EXEC PGM=DYNABLDL,REGION=100K\n//SYSPRINT DD  DDNAME=IEFRDER\n//IEFRDER  DD  SYSOUT=A\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAMPLE": {"ttr": 5121, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x01D\\x01D\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 324, "newlines": 324, "modlines": 0, "user": "FILE407"}, "text": "Below is a typical activity report generated by my DYNABLDL.\n\nShown are the contents of the currently active dyna-table sorted three\nways: (1) alphabetically by load module name, (2) by the number of\ntimes that the name was searched for and found in the dyna-table\n(\"hits\"), and (3) by the number of minutes that have elapsed since the\nname was last searched for (\"L.R.U.\" or \"Least Recently Used\").\n\nAlso shown is the following information:\n\nDYNABLDL processing has been active for 7 hours and 19 minutes.\n\nThe table currently contains 256 entries, which in this case completely\nfills the table. (The maximum table size is determined at DYNABLDL\nassembly time. Each table entry takes 96 <decimal> bytes of fixed,\ncommon memory).\n\nMany table entries have gone unreferenced for nearly two hours (up to\n107 minutes, in fact). Possibly, I have generated a larger table than I\nreally need. (An installation can choose any table size it desires\nwhenever it re-assembles DYNABLDL).\n\nThe dyna-table has enjoyed a hit rate of over 91% and, therefore, has\nsave a considerable amount of disk I/O.\n\nOf the 654 misses, 403 were for modules that subsequently were found in\none or another of the linklist libraries. Once found, these names were\nadded to the dyna-table replacing older names that had been used the\nleast recently. (Note, the next such miss will replace a name that\nhasn't been used for nearly two hours). You may notice that a few table\nentries show a zero hit count. These are entries that have not yet been\nreferenced again since they were first added to the table.\n\nOf the 654 misses, 251 were for modules that were NOT found in the\nlinklist libraries. These were either CLIST names or invalid names.\n\nEach of the three sorted lists shows the number of times each entry\nsatisfied a BLDL request - \"hits\".\n\nThe NAME sorted list shows the concatination id number of the linklist\nlibrary in which each load module was found. (Our installation has nine\ndatasets in its linklist concatination).\n\nThe HITS sorted list shows the length of time (in minutes) each entry\nhas survived in the dyna-table.\n\nThe HITS sorted list also shows which modules are reentrant. When such\na module has a high hit count, it would be worth considering placing it\ninto LPALIB.\n\nBoth the HITS sorted list and the L.R.U. sorted list show the length of\ntime (in minutes) each entry has gone unreferenced.\n\n                                                      - Dave Cole\n\n\n\n     DYNAMIC BLDL ACTIVITY REPORT\n\n     TABLE LIFE 7:19, ENTRIES 256\n     HITS 7029, MISSES 654 (GOOD NAMES 403, BAD NAMES 251), HIT RATE 91.5%\n     MAX ENTRY AGE 439 MINUTES, MAX ENTRY IDLE TIME 107 MINUTES\n\n\n         \u00a6 SORTED BY NAME    \u00a6 SORTED BY HITS            \u00a6 SORTED BY L.R.U.\n         \u00a6                   \u00a6 (* MEANS REENTRANT)       \u00a6\n     CNT \u00a6 NAME    LIB# HITS \u00a6  HITS  NAME     IDLE  AGE \u00a6 IDLE NAME      HITS\n         \u00a6                   \u00a6                           \u00a6\n     1   \u00a6 $AUTHEXT 8     72 \u00a6   508 *IEEVSEND    0  374 \u00a6    0 DYNABLDL     0\n     2   \u00a6 $DASDMNT 8      1 \u00a6   437 *EXEC        0  390 \u00a6    0 PGM         11\n     3   \u00a6 $DATECNV 8      1 \u00a6   343 *ALLOC       0  390 \u00a6    0 ALLOC      343\n     4   \u00a6 $MINDX   8      2 \u00a6   319 *IBMBOPCA    3  262 \u00a6    0 IEEVSEND   508\n     5   \u00a6 $MNTMON  8      0 \u00a6   319 *IBMBOPBA    3  262 \u00a6    0 EXEC       437\n     6   \u00a6 $MNTMRG  8      0 \u00a6   319 *IBMBOPAA    3  262 \u00a6    0 SORT        84\n     7   \u00a6 $MNTREN  8      0 \u00a6   318 *IBMBOPDA    3  262 \u00a6    0 IOFCMD      43\n     8   \u00a6 $NEWPARS 8     72 \u00a6   239 *IBMBOCAA    3  262 \u00a6    0 IOFSPF      36\n     9   \u00a6 $OPTIONR 8      2 \u00a6   115 *FREE        3  390 \u00a6    1 IEWL        53\n     10  \u00a6 $OPTIONS 8      8 \u00a6   105 *IEEVSTAR   38  439 \u00a6    1 IDCTSUV0    33\n     11  \u00a6 $PDSFA31 5      5 \u00a6    96 *IBMBOPEA   11  251 \u00a6    2 PDS         25\n     12  \u00a6 $PDSXF31 5      5 \u00a6    84  SORT        0  326 \u00a6    2 IDCTSLC0    23\n     13  \u00a6 $SM      8      2 \u00a6    82  ICEAM1     11  326 \u00a6    2 IDCLC01     23\n     14  \u00a6 $SP      8      7 \u00a6    72  $AUTHEXT    5  119 \u00a6    2 IDCCDLC     23\n     15  \u00a6 $SPCUB   8      4 \u00a6    72  $NEWPARS    5  119 \u00a6    2 IDCRILT     34\n     16  \u00a6 $STATUS  8      2 \u00a6    71 *IKJEFF10    4  374 \u00a6    2 IDCRI04     32\n     17  \u00a6 $TAU     8     11 \u00a6    71 *IKJEFF04    4  374 \u00a6    2 IDCTSTP0    34\n     18  \u00a6 $VALASM2 8      1 \u00a6    69 *SUBMIT      4  374 \u00a6    2 IDCTSEX0    34\n     19  \u00a6 $VUDATA  8      1 \u00a6    68 *IBMBREFA   11  262 \u00a6    2 IDCIO04     32\n     20  \u00a6 AHLCWRIT 0      2 \u00a6    67 *IKJEFT25    3  390 \u00a6    2 IDCSATO     32\n     21  \u00a6 AHLGTF   0      2 \u00a6    67 *LOGOFF      9  343 \u00a6    2 LISTC       31\n     22  \u00a6 AHLTMON  0      2 \u00a6    64 *IKJEES73    3  390 \u00a6    2 IKJEHSIR    36\n     23  \u00a6 AHLWTASK 0      2 \u00a6    63 *IBMBPGRA    3  262 \u00a6    2 LISTD       15\n     24  \u00a6 ALLOC    3    343 \u00a6    63 *IBMBPIIA    3  262 \u00a6    3 FREE       115\n     25  \u00a6 ALLOCATE 3     33 \u00a6    62 *IKJEFF18    4  390 \u00a6    3 TERMINAL     3\n     26  \u00a6 AMASPZAP 0      2 \u00a6    61 *IBMBPITA    3  262 \u00a6    3 LIS         52\n     27  \u00a6 AMDPRCMC 0      1 \u00a6    57 *IEEPALTR    3  431 \u00a6    3 IKJEFT25    67\n     28  \u00a6 AMDPRDMP 0      3 \u00a6    56 *IBMBRQAA   11  262 \u00a6    3 IKJEES73    64\n     29  \u00a6 AMDPRECT 0      3 \u00a6    53  IEWL        1  277 \u00a6    3 IEECB811    39\n     30  \u00a6 AMDPRLOD 0      3 \u00a6    52  LIS         3  390 \u00a6    3 IBMBPITA    61\n     31  \u00a6 AMDPRMST 0      1 \u00a6    51 *IBMBSTVA    3  251 \u00a6    3 IBMBOCAA   239\n     32  \u00a6 APFPGM   2      7 \u00a6    43 *IOFCMD      0  345 \u00a6    3 IBMBSTVA    51\n     33  \u00a6 ATTRIB   3     35 \u00a6    41 *EX         19  211 \u00a6    3 IBMBOPDA   318\n     34  \u00a6 CMD      2      1 \u00a6    39 *IEECB811    3  439 \u00a6    3 IBMBOPCA   319\n     35  \u00a6 COMPRESS 2      0 \u00a6    38 *IKJEFF53    5  144 \u00a6    3 IBMBOPBA   319\n     36  \u00a6 COPY     2      0 \u00a6    36 *IOFSPF      0  338 \u00a6    3 IBMBOPAA   319\n     37  \u00a6 DBCCMD   2      3 \u00a6    36 *IKJEHSIR    2  147 \u00a6    3 IBMBPGRA    63\n     38  \u00a6 DBCGBL   5      1 \u00a6    35  ICEEXIT    18  326 \u00a6    3 IBMBPIIA    63\n     39  \u00a6 DBCHELPM 5      1 \u00a6    35  ICEOPUT    18  326 \u00a6    3 IEEPALTR    57\n     40  \u00a6 DEL      3     17 \u00a6    35  ICEIPUT    18  326 \u00a6    4 IFOX62       1\n     41  \u00a6 DES      2      1 \u00a6    35 *ATTRIB     23  390 \u00a6    4 IFOX61       1\n     42  \u00a6 DFSAFMD0 0      4 \u00a6    34 *IDCRILT     2  356 \u00a6    4 IFOX51       1\n     43  \u00a6 DYNABLDL 5      0 \u00a6    34  IDCTSTP0    2  356 \u00a6    4 IFOX41       1\n     44  \u00a6 EDIT     3      3 \u00a6    34  IDCTSEX0    2  356 \u00a6    4 IFOX06       1\n     45  \u00a6 END      3     13 \u00a6    33  IDCTSUV0    1  356 \u00a6    4 IFOX05       1\n     46  \u00a6 EX       3     41 \u00a6    33 *IBMBSTAB   11  251 \u00a6    4 IFOX31       1\n     47  \u00a6 EXEC     3    437 \u00a6    33 *IEECB800   17  409 \u00a6    4 IFOX21       1\n     48  \u00a6 FRA      2      5 \u00a6    33 *L          19   98 \u00a6    4 IFOX11       1\n     49  \u00a6 FREE     3    115 \u00a6    33 *ALLOCATE   65  180 \u00a6    4 IFOX04       1\n     50  \u00a6 FREEALL  2      5 \u00a6    32 *IDCRI04     2  119 \u00a6    4 IFOX03       1\n     51  \u00a6 FSE      2      1 \u00a6    32  IDCIO04     2  119 \u00a6    4 IFOX02       1\n     52  \u00a6 FSESYSCD 2      0 \u00a6    32  IDCSATO     2  119 \u00a6    4 IFOX01       1\n     53  \u00a6 HELP     3      8 \u00a6    32 *IBMBSTIA   53  251 \u00a6    4 IFOX00       1\n     54  \u00a6 IBMBKDOA 6      0 \u00a6    31 *LISTC       2  119 \u00a6    4 IKJEFF18    62\n     55  \u00a6 IBMBKMRA 6      0 \u00a6    31 *IKJCT469    5  126 \u00a6    4 IKJEFF10    71\n     56  \u00a6 IBMBKPTA 6      0 \u00a6    30 *OUTPUT      5  126 \u00a6    4 IKJEFF04    71\n     57  \u00a6 IBMBOCAA 6    239 \u00a6    26 *IEE3603D   24  437 \u00a6    4 SUBMIT      69\n     58  \u00a6 IBMBOPAA 6    319 \u00a6    25 *PDS         2  211 \u00a6    5 IKJEFF53    38\n     59  \u00a6 IBMBOPBA 6    319 \u00a6    25 *IKJEBEPS   19  103 \u00a6    5 IKJCT469    31\n     60  \u00a6 IBMBOPCA 6    319 \u00a6    25 *TERM       25  390 \u00a6    5 OUTPUT      30\n     61  \u00a6 IBMBOPDA 6    318 \u00a6    24  IEBGENER   10  374 \u00a6    5 LISTS        7\n     62  \u00a6 IBMBOPEA 6     96 \u00a6    23 *IDCTSLC0    2  119 \u00a6    5 $OPTIONS     8\n     63  \u00a6 IBMBPERA 6      0 \u00a6    23 *IDCLC01     2  119 \u00a6    5 $AUTHEXT    72\n     64  \u00a6 IBMBPESA 6      0 \u00a6    23 *IDCCDLC     2  119 \u00a6    5 $MINDX       2\n     65  \u00a6 IBMBPEVA 6      0 \u00a6    23 *LOGON      62  187 \u00a6    5 $NEWPARS    72\n     66  \u00a6 IBMBPGRA 6     63 \u00a6    22  IEBCOPY     6  275 \u00a6    5 $TAU        11\n     67  \u00a6 IBMBPIIA 6     63 \u00a6    22  ICEDEG     11  219 \u00a6    5 $SM          2\n     68  \u00a6 IBMBPITA 6     61 \u00a6    22  ICEDYN     11  219 \u00a6    5 $PDSFA31     5\n     69  \u00a6 IBMBRABA 6      0 \u00a6    22  ICEDED     11  219 \u00a6    5 SEAPT002     4\n     70  \u00a6 IBMBRDAA 6      3 \u00a6    22  ICEDEC     11  219 \u00a6    5 SEAPR001     4\n     71  \u00a6 IBMBREFA 6     68 \u00a6    22  ICEDEF     11  219 \u00a6    5 $PDSXF31     5\n     72  \u00a6 IBMBRLAA 6      0 \u00a6    22  IOFOWNRS   93  182 \u00a6    5 PDSFAST      4\n     73  \u00a6 IBMBRQAA 6     56 \u00a6    21  IKFCBL60    8  129 \u00a6    5 APFPGM       7\n     74  \u00a6 IBMBRQBA 6      0 \u00a6    21  IKFCBL51    8  129 \u00a6    6 FRA          5\n     75  \u00a6 IBMBSOFA 6     13 \u00a6    21  IKFCBL50    8  129 \u00a6    6 DFSAFMD0     4\n     76  \u00a6 IBMBSTAB 6     33 \u00a6    21  IKFCBL40    8  129 \u00a6    6 IEAVTFMT     4\n     77  \u00a6 IBMBSTIA 6     32 \u00a6    21  IKFCBL30    8  129 \u00a6    6 IECDAFMT     4\n     78  \u00a6 IBMBSTVA 6     51 \u00a6    21  IKFCBL20    8  129 \u00a6    6 IEBCOPY     22\n     79  \u00a6 ICEAM1   4     82 \u00a6    21  IKFCBL1B    8  129 \u00a6    8 IKFCBL60    21\n     80  \u00a6 ICECRE   4     21 \u00a6    21  IKFCBL10    8  129 \u00a6    8 IKFCBL51    21\n     81  \u00a6 ICECRO   4     17 \u00a6    21  IKFCBL00    8  129 \u00a6    8 IKFCBL50    21\n     82  \u00a6 ICEDEC   4     22 \u00a6    21  ICEMOS     11  219 \u00a6    8 IKFCBL40    21\n     83  \u00a6 ICEDED   4     22 \u00a6    21  ICECRE     11  219 \u00a6    8 IKFCBL30    21\n     84  \u00a6 ICEDEF   4     22 \u00a6    21  ICEDEV     11  219 \u00a6    8 IKFCBL20    21\n     85  \u00a6 ICEDEG   4     22 \u00a6    20  JOB        23  390 \u00a6    8 IKFCBL1B    21\n     86  \u00a6 ICEDEV   4     21 \u00a6    17  ICECRO     11  219 \u00a6    8 IKFCBL10    21\n     87  \u00a6 ICEDYN   4     22 \u00a6    17 *DEL        22   34 \u00a6    8 IKFCBL70    11\n     88  \u00a6 ICEEXIT  4     35 \u00a6    17  IEHMVESS   89   91 \u00a6    8 IKFCBL00    21\n     89  \u00a6 ICEIPUT  4     35 \u00a6    15 *LISTD       2  148 \u00a6    8 IKFCBL6A    10\n     90  \u00a6 ICEKPUS  4     12 \u00a6    15  IEHMVESJ   89   91 \u00a6    8 IKFCBL01    10\n     91  \u00a6 ICEKPUT  4     12 \u00a6    13 *END        46  229 \u00a6    9 LOGOFF      67\n     92  \u00a6 ICEMOS   4     21 \u00a6    13 *IBMBSOFA   52   76 \u00a6   10 IEBGENER    24\n     93  \u00a6 ICEOBS   4      8 \u00a6    12  ICEKPUS    18  326 \u00a6   11 IBMBREFA    68\n     94  \u00a6 ICEOPUT  4     35 \u00a6    12  ICEKPUT    18  326 \u00a6   11 IBMBOPEA    96\n     95  \u00a6 ICERCB   4      0 \u00a6    11 *PGM         0  145 \u00a6   11 IBMBSTAB    33\n     96  \u00a6 ICERCM   4      0 \u00a6    11 *$TAU        5  119 \u00a6   11 IBMBRQAA    56\n     97  \u00a6 ICERCO   4      0 \u00a6    11  IKFCBL70    8  129 \u00a6   11 IEEMB813     9\n     98  \u00a6 ICERCZ   4      0 \u00a6    11 *LIST       24   89 \u00a6   11 ICEMOS      21\n     99  \u00a6 ICEXCP   4      0 \u00a6    11  IEHMVESU   89   91 \u00a6   11 ICECRO      17\n     100 \u00a6 IDCCDDL  0      8 \u00a6    10  IKFCBL6A    8  129 \u00a6   11 ICECRE      21\n     101 \u00a6 IDCCDLC  0     23 \u00a6    10  IKFCBL01    8  129 \u00a6   11 ICEXCP       0\n     102 \u00a6 IDCDL01  0      7 \u00a6    10 *IKJEFF51   27  144 \u00a6   11 ICEDEV      21\n     103 \u00a6 IDCIO04  0     32 \u00a6    10 *IKJEFF50   27  144 \u00a6   11 ICEDEG      22\n     104 \u00a6 IDCLC01  0     23 \u00a6     9 *IEEMB813   11  314 \u00a6   11 ICEDYN      22\n     105 \u00a6 IDCRILT  0     34 \u00a6     9  IEHPROGM   19  438 \u00a6   11 ICEOBS       8\n     106 \u00a6 IDCRI04  0     32 \u00a6     9 *SCHEDRUN   47  405 \u00a6   11 ICEDED      22\n     107 \u00a6 IDCSATO  0     32 \u00a6     9 *LISTCAT    81  110 \u00a6   11 ICEDEC      22\n     108 \u00a6 IDCTSDL0 0      7 \u00a6     9  PRO        95  102 \u00a6   11 ICEAM1      82\n     109 \u00a6 IDCTSEX0 0     34 \u00a6     8 *$OPTIONS    5  119 \u00a6   11 ICEDEF      22\n     110 \u00a6 IDCTSLC0 0     23 \u00a6     8  ICEOBS     11  219 \u00a6   16 RENAME       7\n     111 \u00a6 IDCTSLC1 0      2 \u00a6     8 *IDCCDDL    22   34 \u00a6   16 IKJEHMEM     4\n     112 \u00a6 IDCTSTP0 0     34 \u00a6     8  IERRCO00   28  105 \u00a6   17 IEECB800    33\n     113 \u00a6 IDCTSTP6 0      2 \u00a6     8 *HELP       76  118 \u00a6   18 ICEEXIT     35\n     114 \u00a6 IDCTSUV0 0     33 \u00a6     7  LISTS       5  122 \u00a6   18 ICEOPUT     35\n     115 \u00a6 IEAFTRT2 0      1 \u00a6     7 *APFPGM      5  186 \u00a6   18 ICEKPUS     12\n     116 \u00a6 IEAVTFMT 0      4 \u00a6     7 *RENAME     16  101 \u00a6   18 ICEKPUT     12\n     117 \u00a6 IEAVTFRT 0      1 \u00a6     7 *IDCTSDL0   22   34 \u00a6   18 ICEIPUT     35\n     118 \u00a6 IEAVTFSD 0      1 \u00a6     7 *IDCDL01    22   34 \u00a6   19 EX          41\n     119 \u00a6 IEBCOPY  0     22 \u00a6     7  $SP       101  105 \u00a6   19 IKJEBEPS    25\n     120 \u00a6 IEBGENER 0     24 \u00a6     6 *STATUS     27  105 \u00a6   19 L           33\n     121 \u00a6 IEBPTPCH 0      5 \u00a6     5  $PDSFA31    5  186 \u00a6   19 IEHPROGM     9\n     122 \u00a6 IECDAFMT 0      4 \u00a6     5  $PDSXF31    5  186 \u00a6   22 IDCTSDL0     7\n     123 \u00a6 IEECB800 0     33 \u00a6     5  FRA         6   66 \u00a6   22 IDCDL01      7\n     124 \u00a6 IEECB801 0      3 \u00a6     5 *PROFILE    23   40 \u00a6   22 IDCCDDL      8\n     125 \u00a6 IEECB804 0      3 \u00a6     5 *FREEALL    23   40 \u00a6   22 DEL         17\n     126 \u00a6 IEECB811 0     39 \u00a6     5  IEBPTPCH   38   41 \u00a6   23 ATTRIB      35\n     127 \u00a6 IEEMB813 0      9 \u00a6     5 *SASCP      48  100 \u00a6   23 PROFILE      5\n     128 \u00a6 IEEPALTR 0     57 \u00a6     5  IEHDPRNT   86   87 \u00a6   23 FREEALL      5\n     129 \u00a6 IEEVSEND 0    508 \u00a6     5  IEHMVEST   89   91 \u00a6   23 JOB         20\n     130 \u00a6 IEEVSTAR 0    105 \u00a6     4  SEAPT002    5  186 \u00a6   24 IEE3603D    26\n     131 \u00a6 IEE3603D 0     26 \u00a6     4  SEAPR001    5  186 \u00a6   24 IEECB801     3\n     132 \u00a6 IEHDAOUT 0      1 \u00a6     4  PDSFAST     5  186 \u00a6   24 IEECB804     3\n     133 \u00a6 IEHDASDR 0      1 \u00a6     4 *DFSAFMD0    6  134 \u00a6   24 LIST        11\n     134 \u00a6 IEHDASDS 0      1 \u00a6     4 *IEAVTFMT    6  134 \u00a6   24 CMD          1\n     135 \u00a6 IEHDDUMP 0      1 \u00a6     4 *IECDAFMT    6  134 \u00a6   25 TERM        25\n     136 \u00a6 IEHDPASS 0      1 \u00a6     4 *IKJEHMEM   16   85 \u00a6   27 IKJEFF51    10\n     137 \u00a6 IEHDPRNT 0      5 \u00a6     4  IEHMVESZ   89   91 \u00a6   27 IKJEFF50    10\n     138 \u00a6 IEHDSCAN 0      3 \u00a6     4  IEHMVXSF   89   91 \u00a6   27 STATUS       6\n     139 \u00a6 IEHLIST  0      0 \u00a6     4  $SPCUB    101  118 \u00a6   28 IERRCO00     8\n     140 \u00a6 IEHMOVE  0      1 \u00a6     3 *TERMINAL    3   72 \u00a6   28 MTRACE       1\n     141 \u00a6 IEHMVESA 0      1 \u00a6     3 *IEECB801   24   61 \u00a6   28 IEAFTRT2     1\n     142 \u00a6 IEHMVESE 0      3 \u00a6     3 *IEECB804   24   61 \u00a6   28 IEAVTFRT     1\n     143 \u00a6 IEHMVESJ 0     15 \u00a6     3  AMDPRLOD   32   93 \u00a6   28 IEAVTFSD     1\n     144 \u00a6 IEHMVESK 0      1 \u00a6     3  AMDPRECT   32   93 \u00a6   29 AMDPRCMC     1\n     145 \u00a6 IEHMVESN 0      0 \u00a6     3  AMDPRDMP   32   93 \u00a6   29 AMDPRMST     1\n     146 \u00a6 IEHMVESP 0      0 \u00a6     3 *IBMBRDAA   34   68 \u00a6   29 COMPRESS     0\n     147 \u00a6 IEHMVESR 0      2 \u00a6     3 *EDIT       44   78 \u00a6   31 ST           2\n     148 \u00a6 IEHMVESS 0     17 \u00a6     3 *LISTDS     76   85 \u00a6   32 AMDPRLOD     3\n     149 \u00a6 IEHMVEST 0      5 \u00a6     3  IEHDSCAN   86   87 \u00a6   32 AMDPRECT     3\n     150 \u00a6 IEHMVESU 0     11 \u00a6     3  POINT      87   89 \u00a6   32 AMDPRDMP     3\n     151 \u00a6 IEHMVESV 0      0 \u00a6     3  IEHMVESE   89   91 \u00a6   32 OUT          0\n     152 \u00a6 IEHMVESX 0      0 \u00a6     3 *PROTECT    91   94 \u00a6   33 IBMBPERA     0\n     153 \u00a6 IEHMVESY 0      0 \u00a6     3 *DBCCMD    105  188 \u00a6   33 IBMBKDOA     0\n     154 \u00a6 IEHMVESZ 0      4 \u00a6     2  $MINDX      5   90 \u00a6   33 IBMBKPTA     0\n     155 \u00a6 IEHMVETJ 0      0 \u00a6     2  $SM         5   90 \u00a6   33 IBMBKMRA     0\n     156 \u00a6 IEHMVXSE 0      1 \u00a6     2 *ST         31   33 \u00a6   33 IBMBPEVA     0\n     157 \u00a6 IEHMVXSF 0      4 \u00a6     2 *LISTALC    64   88 \u00a6   33 IBMBPESA     0\n     158 \u00a6 IEHPROGM 0      9 \u00a6     2  AMASPZAP   65   93 \u00a6   33 IBMBRLAA     0\n     159 \u00a6 IERRCO00 4      8 \u00a6     2 *IKJEBEDA   77   78 \u00a6   34 IBMBRDAA     3\n     160 \u00a6 IEWL     0     53 \u00a6     2 *IDCTSLC1   82  110 \u00a6   34 IBMBRABA     0\n     161 \u00a6 IFOX00   0      1 \u00a6     2 *IDCTSTP6   82  110 \u00a6   34 IBMBRQBA     0\n     162 \u00a6 IFOX01   0      1 \u00a6     2  IEHMVESR   89   89 \u00a6   38 IEEVSTAR   105\n     163 \u00a6 IFOX02   0      1 \u00a6     2  AHLCWRIT   90  147 \u00a6   38 IEBPTPCH     5\n     164 \u00a6 IFOX03   0      1 \u00a6     2  AHLWTASK   90  147 \u00a6   44 IKJEBEEX     1\n     165 \u00a6 IFOX04   0      1 \u00a6     2  AHLTMON    90  147 \u00a6   44 IKJEBEFC     1\n     166 \u00a6 IFOX05   0      1 \u00a6     2  AHLGTF     90  147 \u00a6   44 IKJEBESA     0\n     167 \u00a6 IFOX06   0      1 \u00a6     2  $STATUS   107  118 \u00a6   44 IKJEBEIP     0\n     168 \u00a6 IFOX11   0      1 \u00a6     2 *$OPTIONR  107  118 \u00a6   44 IKJEBELE     1\n     169 \u00a6 IFOX21   0      1 \u00a6     1  IFOX62      4  101 \u00a6   44 IKJEBEMA     1\n     170 \u00a6 IFOX31   0      1 \u00a6     1  IFOX61      4  101 \u00a6   44 IKJEBEAA     1\n     171 \u00a6 IFOX41   0      1 \u00a6     1  IFOX51      4  102 \u00a6   44 IKJEBEUI     1\n     172 \u00a6 IFOX51   0      1 \u00a6     1  IFOX41      4  102 \u00a6   44 IKJEBEMS     1\n     173 \u00a6 IFOX61   0      1 \u00a6     1  IFOX06      4  102 \u00a6   44 EDIT         3\n     174 \u00a6 IFOX62   0      1 \u00a6     1  IFOX05      4  102 \u00a6   46 END         13\n     175 \u00a6 IHCSTAE  7      0 \u00a6     1  IFOX31      4  103 \u00a6   47 SCHEDRUN     9\n     176 \u00a6 IKFCBL00 7     21 \u00a6     1  IFOX21      4  103 \u00a6   48 SASCP        5\n     177 \u00a6 IKFCBL01 7     10 \u00a6     1  IFOX11      4  104 \u00a6   52 IBMBSOFA    13\n     178 \u00a6 IKFCBL1B 7     21 \u00a6     1  IFOX04      4  104 \u00a6   53 IBMBSTIA    32\n     179 \u00a6 IKFCBL10 7     21 \u00a6     1  IFOX03      4  104 \u00a6   60 TMSSVC       0\n     180 \u00a6 IKFCBL20 7     21 \u00a6     1  IFOX02      4  104 \u00a6   60 U$PEEK       0\n     181 \u00a6 IKFCBL30 7     21 \u00a6     1  IFOX01      4  104 \u00a6   62 LOGON       23\n     182 \u00a6 IKFCBL40 7     21 \u00a6     1  IFOX00      4  104 \u00a6   64 LISTALC      2\n     183 \u00a6 IKFCBL50 7     21 \u00a6     1 *CMD        24   24 \u00a6   65 ALLOCATE    33\n     184 \u00a6 IKFCBL51 7     21 \u00a6     1 *MTRACE     28   92 \u00a6   65 AMASPZAP     2\n     185 \u00a6 IKFCBL6A 7     10 \u00a6     1 *IEAFTRT2   28   92 \u00a6   72 SEND         1\n     186 \u00a6 IKFCBL60 7     21 \u00a6     1 *IEAVTFRT   28   92 \u00a6   73 FSESYSCD     0\n     187 \u00a6 IKFCBL70 7     11 \u00a6     1 *IEAVTFSD   28   92 \u00a6   75 IOF          1\n     188 \u00a6 IKJCT469 0     31 \u00a6     1  AMDPRCMC   29   92 \u00a6   75 FSE          1\n     189 \u00a6 IKJEBEAA 3      1 \u00a6     1  AMDPRMST   29   92 \u00a6   76 LISTDS       3\n     190 \u00a6 IKJEBECH 3      0 \u00a6     1 *IKJEBEEX   44   77 \u00a6   76 HELP         8\n     191 \u00a6 IKJEBECI 3      0 \u00a6     1 *IKJEBEFC   44   78 \u00a6   77 IKJEBEDA     2\n     192 \u00a6 IKJEBECO 3      0 \u00a6     1 *IKJEBELE   44   78 \u00a6   78 SUB          1\n     193 \u00a6 IKJEBEDA 3      2 \u00a6     1 *IKJEBEMA   44   78 \u00a6   78 IKJEBECI     0\n     194 \u00a6 IKJEBEEX 3      1 \u00a6     1 *IKJEBEAA   44   78 \u00a6   78 IKJEBESU     0\n     195 \u00a6 IKJEBEFC 3      1 \u00a6     1 *IKJEBEUI   44   78 \u00a6   78 IKJEBECH     0\n     196 \u00a6 IKJEBEIP 3      0 \u00a6     1 *IKJEBEMS   44   78 \u00a6   78 IKJEBETO     0\n     197 \u00a6 IKJEBELE 3      1 \u00a6     1 *SEND       72   72 \u00a6   78 IKJEBECO     0\n     198 \u00a6 IKJEBEMA 3      1 \u00a6     1 *IOF        75   75 \u00a6   78 IKJEBEUT     0\n     199 \u00a6 IKJEBEMS 3      1 \u00a6     1  FSE        75   75 \u00a6   80 IHCSTAE      0\n     200 \u00a6 IKJEBEPS 3     25 \u00a6     1 *SUB        78   78 \u00a6   81 LISTCAT      9\n     201 \u00a6 IKJEBESA 3      0 \u00a6     1  IEHDAOUT   86   87 \u00a6   82 IDCTSLC1     2\n     202 \u00a6 IKJEBESU 3      0 \u00a6     1  IEHDPASS   86   87 \u00a6   82 IDCTSTP6     2\n     203 \u00a6 IKJEBETO 3      0 \u00a6     1  IEHDDUMP   86   87 \u00a6   86 IEHDPRNT     5\n     204 \u00a6 IKJEBEUI 3      1 \u00a6     1  IEHDASDS   86   87 \u00a6   86 IEHDAOUT     1\n     205 \u00a6 IKJEBEUT 3      0 \u00a6     1  IEHDASDR   86   87 \u00a6   86 IEHDPASS     1\n     206 \u00a6 IKJEES73 0     64 \u00a6     1  IEHMVESK   89   91 \u00a6   86 IEHDDUMP     1\n     207 \u00a6 IKJEFF04 0     71 \u00a6     1  IEHMVESA   89   91 \u00a6   86 IEHDSCAN     3\n     208 \u00a6 IKJEFF10 0     71 \u00a6     1  IEHMVXSE   89   91 \u00a6   86 IEHDASDS     1\n     209 \u00a6 IKJEFF18 0     62 \u00a6     1  IEHMOVE    89   91 \u00a6   86 IEHDASDR     1\n     210 \u00a6 IKJEFF50 0     10 \u00a6     1  DES        96   97 \u00a6   87 POINT        3\n     211 \u00a6 IKJEFF51 0     10 \u00a6     1  DBCHELPM  105  188 \u00a6   89 IEHMVESK     1\n     212 \u00a6 IKJEFF53 0     38 \u00a6     1  DBCGBL    105  188 \u00a6   89 IEHMVESU    11\n     213 \u00a6 IKJEFT25 0     67 \u00a6     1  $VUDATA   107  118 \u00a6   89 IEHMVESP     0\n     214 \u00a6 IKJEHMEM 3      4 \u00a6     1  $DATECNV  107  118 \u00a6   89 IEHMVESN     0\n     215 \u00a6 IKJEHSIR 3     36 \u00a6     1  $VALASM2  107  118 \u00a6   89 IEHMVESR     2\n     216 \u00a6 IOF      5      1 \u00a6     1  $DASDMNT  107  118 \u00a6   89 IEHMVETJ     0\n     217 \u00a6 IOFCMD   5     43 \u00a6     0  DYNABLDL    0    0 \u00a6   89 IEHMVESY     0\n     218 \u00a6 IOFOWNRS 5     22 \u00a6     0  ICEXCP     11   11 \u00a6   89 IEHMVESV     0\n     219 \u00a6 IOFSPF   5     36 \u00a6     0  COMPRESS   29   29 \u00a6   89 IEHMVESX     0\n     220 \u00a6 JOB      2     20 \u00a6     0 *OUT        32   32 \u00a6   89 IEHMVESZ     4\n     221 \u00a6 L        2     33 \u00a6     0 *IBMBPERA   33   33 \u00a6   89 IEHMVXSF     4\n     222 \u00a6 LIS      2     52 \u00a6     0 *IBMBKDOA   33   33 \u00a6   89 IEHMVEST     5\n     223 \u00a6 LIST     2     11 \u00a6     0 *IBMBKPTA   33   33 \u00a6   89 IEHMVESS    17\n     224 \u00a6 LISTALC  3      2 \u00a6     0 *IBMBKMRA   33   33 \u00a6   89 IEHMVESJ    15\n     225 \u00a6 LISTC    3     31 \u00a6     0 *IBMBPEVA   33   33 \u00a6   89 IEHMVESE     3\n     226 \u00a6 LISTCAT  3      9 \u00a6     0 *IBMBPESA   33   33 \u00a6   89 IEHMVESA     1\n     227 \u00a6 LISTD    3     15 \u00a6     0 *IBMBRLAA   33   33 \u00a6   89 IEHMVXSE     1\n     228 \u00a6 LISTDS   3      3 \u00a6     0 *IBMBRABA   34   34 \u00a6   89 IEHMOVE      1\n     229 \u00a6 LISTS    2      7 \u00a6     0 *IBMBRQBA   34   34 \u00a6   89 IEHLIST      0\n     230 \u00a6 LOGOFF   3     67 \u00a6     0 *IKJEBESA   44   44 \u00a6   90 AHLCWRIT     2\n     231 \u00a6 LOGON    3     23 \u00a6     0 *IKJEBEIP   44   44 \u00a6   90 AHLWTASK     2\n     232 \u00a6 MTRACE   0      1 \u00a6     0  TMSSVC     60   60 \u00a6   90 AHLTMON      2\n     233 \u00a6 OUT      3      0 \u00a6     0  U$PEEK     60   60 \u00a6   90 AHLGTF       2\n     234 \u00a6 OUTPUT   3     30 \u00a6     0  FSESYSCD   73   73 \u00a6   91 PROTECT      3\n     235 \u00a6 PDS      2     25 \u00a6     0 *IKJEBECI   78   78 \u00a6   93 ICERCZ       0\n     236 \u00a6 PDSFAST  5      4 \u00a6     0 *IKJEBESU   78   78 \u00a6   93 ICERCB       0\n     237 \u00a6 PGM      2     11 \u00a6     0 *IKJEBECH   78   78 \u00a6   93 ICERCM       0\n     238 \u00a6 POINT    2      3 \u00a6     0 *IKJEBETO   78   78 \u00a6   93 ICERCO       0\n     239 \u00a6 PRO      2      9 \u00a6     0 *IKJEBECO   78   78 \u00a6   93 IOFOWNRS    22\n     240 \u00a6 PROFILE  3      5 \u00a6     0 *IKJEBEUT   78   78 \u00a6   95 PRO          9\n     241 \u00a6 PROTECT  3      3 \u00a6     0  IHCSTAE    80   80 \u00a6   96 DES          1\n     242 \u00a6 RENAME   3      7 \u00a6     0  IEHMVESP   89   89 \u00a6  101 $SPCUB       4\n     243 \u00a6 SASCP    2      5 \u00a6     0  IEHMVESN   89   89 \u00a6  101 $SP          7\n     244 \u00a6 SCHEDRUN 5      9 \u00a6     0  IEHMVETJ   89   89 \u00a6  103 COPY         0\n     245 \u00a6 SEAPR001 5      4 \u00a6     0  IEHMVESY   89   89 \u00a6  105 DBCHELPM     1\n     246 \u00a6 SEAPT002 5      4 \u00a6     0  IEHMVESV   89   89 \u00a6  105 DBCGBL       1\n     247 \u00a6 SEND     3      1 \u00a6     0  IEHMVESX   89   89 \u00a6  105 DBCCMD       3\n     248 \u00a6 SORT     4     84 \u00a6     0  IEHLIST    89   89 \u00a6  107 $MNTREN      0\n     249 \u00a6 ST       3      2 \u00a6     0  ICERCZ     93   93 \u00a6  107 $MNTMRG      0\n     250 \u00a6 STATUS   3      6 \u00a6     0  ICERCB     93   93 \u00a6  107 $STATUS      2\n     251 \u00a6 SUB      3      1 \u00a6     0  ICERCM     93   93 \u00a6  107 $OPTIONR     2\n     252 \u00a6 SUBMIT   3     69 \u00a6     0  ICERCO     93   93 \u00a6  107 $MNTMON      0\n     253 \u00a6 TERM     3     25 \u00a6     0 *COPY      103  103 \u00a6  107 $VUDATA      1\n     254 \u00a6 TERMINAL 3      3 \u00a6     0  $MNTREN   107  107 \u00a6  107 $DATECNV     1\n     255 \u00a6 TMSSVC   5      0 \u00a6     0  $MNTMRG   107  107 \u00a6  107 $VALASM2     1\n     256 \u00a6 U$PEEK   5      0 \u00a6     0  $MNTMON   107  107 \u00a6  107 $DASDMNT     1\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYNCNOTE": {"ttr": 5127, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x005\\x005\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 53, "newlines": 53, "modlines": 0, "user": "FILE407"}, "text": "***\n***  An edited version of a fax message sent in October 1990.\n***  Users of DYNABLDL and SYNCSORT take note!\n***\n\n\nTo:     Shmuel Golob, Newsweek\nFrom:   David Andrews, A. Duda and Sons, Inc.  407-365-2153  (fax: 2148)\nSubj:   DYNABLDL vs. SYNCSORT\n-------------------------------------------------------------------------------\n\nI have been fiddling with DYNABLDL for the last couple of weeks.  I've\nbeen disappointed by the hit ratio - about 65 percent.  After spending\na day and a half on SLIP traps and GTF traces, I determined that the\nDYNABLDL misses were nearly all SYNCSORT modules.  This confused me;\nall the SYNCSORT modules live in a user LPA library and do NOT exist\nin the link list at all!\n\nI called Syncsort Technical Support and asked \"Why does SYNCSORT do\nBLDLs for modules that are already in the link pack?\"  The answer was\nthat \"SYNCSORT does this in order to accommodate customers that want\nto apply changes to SYNCSORT and test them without IPLing the system.\nIt is unlikely that we are ever going to change this behavior because\nthis is a BIG change.  If you do not want to endure the overhead of a\nBLDL search for all the SYNCSORT modules each time you run SYNCSORT,\nyou should put the SYNCSORT library near the front of your linklist\nconcatenation.  This library should not be authorized; if it is then\nSYNCSORT will ABEND U1178 (under XA, not 370).\"\n\nSo here is the choice you have with SYNCSORT:\n  1.  Install the package reentrant with a user LPA library.  Don't\n      put the modules in the linklist.  Each SYNCSORT execution will\n      cause a BLDL of 50-80 \"SS33xxxx\" modules against your linklist\n      concatenation.  If you have a long linklist (we have 14\n      libraries at Duda) then this is significant overhead.\n\n  2.  Install the package non-reentrant or pseudo-reentrant.\n\nIf you are using LLA, life is easy.  Because LLA maintains a complete\nincore copy of the linklist directories, it tolerates BLDLs for\nnon-existent members with relatively little overhead, since it handles\nBLDLs at near-electronic speed (though its storage requirement is\nhigh).\n\nIf you have installed DYNABLDL, life is hard.  DYNABLDL only\nimplements a small directory cache, and passes control to the real\nIGC018 if a miss occurs.  SYNCSORT generates many cache misses by\ndesign, adding considerable overhead.\n\nBecause DYNABLDL has the ability to ignore some of the linklist\nlibraries, and its storage requirements are so much smaller, we find\nit superior to LLA (Linklist Look-Aside).  But if you do a lot of\nsorting, SYNCSORT has problems in the DYNABLDL environment.\n", "mimetype": "text/x-diff", "datatype": "ebcdic", "extension": ".diff"}, "USERGIDE": {"ttr": 5129, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\x12\\x00\\x00&\\x00&\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf4\\xf0\\xf7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T12:00:00", "lines": 38, "newlines": 38, "modlines": 0, "user": "FILE407"}, "text": "************************************************************* 11/83 DBC\n*                                                           * 11/83 DBC\n*              USER'S GUIDE                                 * 11/83 DBC\n*                                                           * 11/83 DBC\n* THE FOLLOWING ASSUMES THAT DYNABLDL HAS BEEN INSTALLED AS * 11/83 DBC\n* DESCRIBED ABOVE.                                          * 11/83 DBC\n*                                                           * 11/83 DBC\n* TO START DYNABLDL USE THE FOLLOWING OPERATOR COMMAND.     * 11/83 DBC\n*        S DYNABLDL                -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=START     -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=S                                  * 11/83 DBC\n* DYNABLDL WILL (A) ATTEMPT TO RECOGNIZE THE VERSION OF     * 11/83 DBC\n* IGC018 RUNNING ON YOUR SYSTEM, (B) DETERMINE WHETHER OR   * 11/83 DBC\n* DYNAMIC BLDL PROCESSING IS ALREADY UP AND RUNNING,        * 11/83 DBC\n* (C) GENERATE INTERCEPT ROUTINES IN FIXED GLOBAL MEMORY,   * 11/83 DBC\n* (D) INSERT INTO IGC018 JUMPS TO THE INTERCEPT ROUTINES,   * 11/83 DBC\n* AND (E) TERMINATE LEAVING BEHIND THE ENABLED INTERCEPT    * 11/83 DBC\n* ROUTINES.                                                 * 11/83 DBC\n*                                                           * 11/83 DBC\n* TO STOP DYNABLDL USE THE FOLLOWING OPERATOR COMMAND.      * 11/83 DBC\n*        S DYNABLDL,PARM=STOP      -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=P                                  * 11/83 DBC\n* DYNABLDL WILL REMOVE THE HOOKS FROM IGC018 (BY RESTORING  * 11/83 DBC\n* THE ORIGINAL CODE) AND FREE THE GLOBAL MEMORY CONTAINING  * 11/83 DBC\n* THE INTERCEPT ROUTINES.                                   * 11/83 DBC\n*                                                           * 11/83 DBC\n* A DYNABLDL ACTIVITY REPORT CAN BE GENERATED ONLY WHILE    * 11/83 DBC\n* DYNABLDL PROCESSING IS ACTIVE. TO GENERATE AN ACTIVITY    * 11/83 DBC\n* REPORT, USE THE FOLLOWING OPERATOR COMMAND.               * 11/83 DBC\n*        S DYNABLDL,PARM=REPORT    -- OR --                 * 11/83 DBC\n*        S DYNABLDL,PARM=R                                  * 11/83 DBC\n*                                                           * 11/83 DBC\n* TO GENERATE ONLY AN ACTIVITY SUMMARY MESSAGE (WTO), USE   * 11/83 DBC\n* THE FOLLOWING OPERATOR COMMAND.                           * 11/83 DBC\n*        S DYNABLDL,DSN=NULLFILE,PARM=REPORT  -- OR --      * 11/83 DBC\n*        S DYNABLDL,DSN=NULLFILE,PARM=R                     * 11/83 DBC\n*                                                           * 11/83 DBC\n************************************************************* 11/83 DBC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT407/FILE407.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT407", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}