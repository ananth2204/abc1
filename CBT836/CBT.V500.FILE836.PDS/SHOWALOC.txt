Searching TSO library allocations

In a large TSO site, possibly with many different TSO log-on procedures,
it is often very difficult to search through all the various datasets
(panels, CLISTs, command libraries etc) allocated to particular TSO
sessions.  TSO users can of course complicate the problem by performing
their own library allocations.  One common problem when attempting to
resolve problems with 'non-working' TSO functions, panels, or CLISTs, is
actually finding out where the function being executed resides.  Is the
panel or CLIST a user has accessed his own version or a system version?

The following CLIST scans the datasets concatenated to a given DDNAME
searching for a given member name.  All datasets that the member name
resides in will be identified (the output being written to the
terminal).  For example, when I run this CLIST by entering

'TSO %WFROM WFROM SYSPROC' I get:

SYSPROC  userid.CLIST              <<<  HERE
         Project.PRIV.CLIST
         Project.PROD.CLIST        <<<  HERE
         SYS1.CLIST
         TSO.CLIST
         etc..
         etc..

displayed on my screen, because the CLIST WFROM exists in both my
user-id CLIST library and the Project Production CLIST library.

The two parameters to this CLIST are member, which is the member name to
be searched for (in the above example it was WFROM);  and ddname, which
is the DDNAME to be used for the scan of the above member (in the above
example it was SYSPROC).  The DDNAME needs to be the name of a DDNAME
allocated in the current TSO session.

/* TSO CLIST "WFROM"
PROC 2 MEMBER DDNAME Q(&)
SET SYSOUTTRAP = 1000
LISTALC STATUS
SET SYSLINES   = &SYSOUTLINE
SET SYSOUTTRAP = 0
SET I = 2
SET J = 0
SET NEED = Y
DO WHILE &I <= &SYSLINES
   SET DATA = &STR(&Q.SYSOUTLINE&I)
   IF &SUBSTR(1:3,&STR(&DATA   )) ¬= &STR() && +
      &SUBSTR(1:8,&STR(&DATA        )) ¬= NULLFILE && +
      &SUBSTR(1:8,&STR(&DATA        )) ¬= TERMFILE +
      THEN DO
           IF &SUBSTR(1:1,&STR(&DATA )) ¬= &STR() +
              THEN DO
                   SET DSN = &STR(&DATA)
                   IF &NEED = Y +
                      THEN DO
                           SET J = &J + 1
                           SET LIB&J = &STR(         &DSN)
                           SET DSN&J = &DSN
                           END
                   END
              ELSE DO
                   SET DD = &SUBSTR(3:10,&DATA)
                   SET DD = &DD
                   IF &DD = &DDNAME +
                      THEN DO
                           SET NEED = Y
                           SET LIB&J = +
                               &STR(&SUBSTR(1:9,&DD           )&DSN)
                           SET DSN&J = &DSN
                           END
                      ELSE SET NEED = N
                   END
           END
   SET I = &I + 1
END /* do while */
IF &NEED = N +
   THEN DO
        SET LIB&J = &STR()
        SET J = &J - 1
        END
SET I = 1
/*
/* You should really clear the screen somehow here !
/*
DO WHILE &I <= &J
   SET LIB = &STR(&Q.LIB&I)
   SET LIB = &SUBSTR(10:&LENGTH(&STR(&LIB)),&STR(&LIB))
   ISPEXEC LMINIT DATAID(DID) DATASET('&LIB') ENQ(SHR)
   ISPEXEC LMOPEN DATAID(&DID) OPTION(INPUT)
   ISPEXEC LMMFIND DATAID(&DID) MEMBER(&MEMBER)
   IF &LASTCC = 0 +
      THEN SET HERE = &STR((((  HERE)
      ELSE SET HERE = &STR()
   ISPEXEC LMCLOSE DATAID(&DID)
   ISPEXEC LMFREE DATAID(&DID)
   WRITE &SUBSTR(1:35,&STR(&Q.LIB&I                                 ))-
&STR(&HERE)
   SET I = &I + 1
END /* do while */


Andrew Cahillane
Software Programming Consultant
Delphic Computing Ltd (UK)    €        1988


