/*rexx                                                              */
/*  Program-id           SUBSYS                                     */
/*  Remarks              This routine will display the information  */
/*                       for each defined subsystem.                */
/*trace i*/                              /*    Turn tracing on      */
/*                                                                  */
/* initialize variables                                             */
/*                                                                  */
return_code= '00000000'x                 /* Init the return code    */
int_return_code= 0                       /* Init the internal rc    */
call house_keeping                       /* let's initialize        */
do forever                               /* main loop               */
   call display_info_panel               /* display the info panel  */
   call get_the_ssn_info                 /* obtain the subsys info  */
   call display_the_subsys_table         /* display the ssn table   */
   exit                                  /* obtain the subsys info  */
end
get_the_ssn_info:
cvt=      c2x(storage(10,4))            /* cvt address             */
cvtjesct= d2x((x2d(cvt))+296)           /* cvt + x'128' = cvtjesct */
jesct@=   c2x(storage(cvtjesct,4))      /* jesct address           */
jesssct=  d2x((x2d(jesct@))+24)         /* jesct + x'18'x = sscvt  */
sscvt@=   c2x(storage(jesssct,4))       /* sscvt @                 */
ssct@=    sscvt@                        /* let's switch            */
no_of_subsystems= 0                     /* no of subsystems        */
x=        1                             /* stem no                 */
do forever
   if (ssct@ = 00000000) then do        /* end of chain?           */
       return                           /* yes                     */
   end                                  /* yes                     */
   ssctname@=  d2x((x2d(ssct@))+8)      /* sub-system name @       */
   ssctsnam.x= storage(ssctname@,4)     /* sub-system name         */
   ssctflg1@=  d2x((x2d(ssct@))+12)     /* ssctflg1  @             */
   ssctflg1.x= storage(ssctflg1@,1)     /* ssctflg1                */
   ssctssid@=  d2x((x2d(ssct@))+13)     /* ssctssid @              */
   ssctssid.x= storage(ssctssid@,1)     /* ssctssid                */
   ssctssvt@=  d2x((x2d(ssct@))+16)     /* ssctssvt @              */
   ssctssvt.x= storage(ssctssvt@,4)     /* ssctssvt                */
   ssctsuse@=  d2x((x2d(ssct@))+20)     /* ssctsuse @              */
   ssctsuse.x= storage(ssctsuse@,4)     /* ssctsuse                */
   ssctsus2@=  d2x((x2d(ssct@))+28)     /* ssctsus2 @              */
   ssctsus2.x= storage(ssctsus2@,4)     /* ssctsus2                */
   ssctscta@=  d2x((x2d(ssct@))+4)      /* ssctscta @              */
   ssctscta.x= storage(ssctscta@,4)     /* ssctscta                */
   ssct@=      c2x(storage(ssctscta@,4)) /* next ssct on the chain */
   x= (x + 1)                           /* next stem               */
   no_of_subsystems= (no_of_subsystems + 1)/* no of subsystems     */
end
return
display_the_subsys_table:
ADDRESS "ISPEXEC" "TBCREATE SSNTAB NOWRITE REPLACE"
if (rc >  4) then do                     /* call okay?             */
   say 'TBCREATE error    rc = 'rc''     /* no- inform the user    */
   call dealloc                          /* Dealloc                */
   exit(0)                               /* let's quit             */
end
ztdmark='**************************** Bottom of data *************************'
ADDRESS  "ISPEXEC" "VPUT (ZTDMARK) SHARED"
tabrows=  200                            /* max table rows         */
ssel= '_'                                /* init the selection ind */
do i = 1 to no_of_subsystems             /* create ssn table ents  */
   sname=  ssctsnam.i                    /* subsystem name         */
   sflg1=  c2x(ssctflg1.i)               /* ssctflg1               */
   sssid=  c2x(ssctssid.i)               /* ssctssid               */
   sssvt=  c2x(ssctssvt.i)               /* ssctssvt               */
   ssuse=  c2x(ssctsuse.i)               /* ssctsuse               */
   ssus2=  c2x(ssctsus2.i)               /* ssctsus2               */
   ssscvt= c2x(ssctscta.i)               /* ssctscta               */
   ADDRESS "ISPEXEC" "TBADD SSNTAB       /* add the entries        */
            SAVE(sname,sflg1,sssid,sssvt,ssuse,ssus2,ssscvt)
            MULT("TABROWS")"
   if (rc ¬= 0) then do                  /* call okay?             */
      say 'TBADD error    rc = 'rc''     /* no- inform the user    */
      call dealloc                       /* Dealloc                */
      exit(0)                            /* let's quit             */
   end
end
ADDRESS "ISPEXEC" "TBTOP SSNTAB"         /* position to top of tab */
if (rc ¬= 0) then do                     /* call okay?             */
   say 'TBTOP error    rc = 'rc''        /* no- inform the user    */
   call dealloc                          /* Dealloc                */
   exit(0)                               /* let's quit             */
end
ADDRESS "ISPEXEC" "ADDPOP POPLOC(ZCMD)"  /* pop up position         */
ADDRESS "ISPEXEC" "TBDISPL SSNTAB PANEL(SUBSYSP1)"
if (rc = 8) then do                      /* pf3 or return?          */
   ADDRESS "ISPEXEC" "REMPOP"            /* remove pop-up           */
   return                                /* and quit                */
end
if (rc > 8) then do                      /* error?                  */
   say 'SUBSYSP1 TBDISPL error  rc = 'rc''
   call dealloc                          /* Dealloc                 */
   exit(0)                               /* and quit                */
end
do while (ztdsels > 0)                   /* Do while user selection?*/
   address "ISPEXEC" "CONTROL DISPLAY SAVE" /* Save The Environment */
   if (rc ¬= 0) then do                  /* save okay?              */
      say 'CONTROL SAVE error  rc = 'rc''
      call dealloc                       /* Dealloc                 */
      exit(0)                            /* and quit                */
   end
   if (ssel = '/') then do               /* Display subsystem matrix*/
      call display_the_subsys_matrix     /* yes-                    */
   end
   address "ISPEXEC" "CONTROL DISPLAY RESTORE" /* Restore the envirn*/
   if (rc ¬= 0) then do                  /* save okay?              */
      say 'CONTROL RESTORE error  rc = 'rc''
      call dealloc                       /* Dealloc                 */
      exit(0)                            /* and quit                */
   end
   ssel= '_'                             /* init selection          */
ztdmark='<<-------------------- End Of Subsystem Entries ------------------->>'
   ADDRESS "ISPEXEC" "TBDISPL SSNTAB"
   if (rc = 8) then do                   /* pf3 or return?          */
      ADDRESS "ISPEXEC" "REMPOP"         /* remove pop-up           */
      return                             /* and quit                */
   end
   if (rc > 8) then do
      say 'SUBSYSP1 TBDISPL error  rc = 'rc''
      call dealloc                       /* Dealloc                 */
      exit(0)                            /* and quit                */
   end
end
ADDRESS "ISPEXEC" "REMPOP"               /* remove pop-up           */
return
display_information_panel:
ADDRESS "ISPEXEC" "ADDPOP ROW(1) COLUMN(1)" /* pop up position      */
ADDRESS "ISPEXEC" "DISPLAY PANEL(SUBSYSP2)" /* position the cursor  */
if (rc = 8) then do                      /* error?                  */
   ADDRESS "ISPEXEC" "REMPOP"            /* remove pop-up           */
   return                                /* return to caller        */
end
if (rc ¬= 0) then do                     /* error?                  */
   ADDRESS "ISPEXEC" "REMPOP"            /* remove pop-up           */
   say 'SUBSYSP2 Display error    rc = 'rc''
   call dealloc                          /* Dealloc                 */
   exit(0)                               /* and quit                */
end
ADDRESS "ISPEXEC" "REMPOP"               /* remove pop-up           */
return
display_info_panel:
ADDRESS "ISPEXEC" "CONTROL DISPLAY LOCK" /* lock the terminal      */
if (rc ¬= 0) then do                     /* error?                 */
   say 'SUBSYS Lock error    rc = 'rc''  /* yes- output message    */
   call dealloc                          /* dealloc                */
   exit(0)                               /* and quit               */
end
subsinfo= 'Your Request Is Being Processed. Please Wait'
ADDRESS "ISPEXEC" "ADDPOP ROW(1) COLUMN(1)" /* pop-up position      */
ADDRESS "ISPEXEC" "DISPLAY PANEL(SUBSYSP2)" /* position the cursor  */
if (rc ¬= 0) then do                     /* error?                  */
   ADDRESS "ISPEXEC" "REMPOP"            /* remove pop-up           */
   say 'SUBSYSP2 Display error    rc = 'rc''
   call dealloc                          /* Dealloc                 */
   exit(0)                               /* and quit                */
end
ADDRESS "ISPEXEC" "REMPOP"               /* remove pop-up           */
return
house_keeping:
/*                                                                 */
/* Set the error mode                                              */
/*                                                                 */
address "ISPEXEC" "CONTROL ERRORS CANCEL"
/*                                                                 */
/* dynamically allocate the panel libraries                        */
/*                                                                 */
/* --------------------------------------------------------------- */
/* Change the next line to point to your load library in ISPLLIB.  */
/* --------------------------------------------------------------- */
address "ISPEXEC" "LIBDEF ISPLLIB DATASET ID('SYS1.W$$.LINKLIB')"
/* --------------------------------------------------------------- */
/* Change the next line to point to your panel dataset in ISPPLIB. */
/* --------------------------------------------------------------- */
address "ISPEXEC" "LIBDEF ISPPLIB DATASET ID('SYS1.U.PANELS')"
return
dealloc:
address "ISPEXEC" "LIBDEF ISPLLIB"
address "ISPEXEC" "LIBDEF ISPPLIB"
return
display_the_subsys_matrix:
ADDRESS "ISPEXEC" "TBCREATE SSVTTAB NOWRITE REPLACE"
if (rc >  4) then do                     /* call okay?             */
   say 'TBCREATE error    rc = 'rc''     /* no- inform the user    */
   call dealloc                          /* Dealloc                */
   exit(0)                               /* let's quit             */
end
ztdmark='<<------- End Of Function Table ------>>'
ADDRESS  "ISPEXEC" "VPUT (ZTDMARK) SHARED"
tabrows=  256                            /* max table rows         */
ssel= '_'                                /* init the selection ind */
if (sssvt = 00000000) then do           /* no functions supported? */
   subsinfo= 'No Functions are Supported by Subsystem 'sname''
   call display_information_panel       /* inform the user         */
   return                               /* return to caller        */
end
sssvt_addr= d2x(x2d(sssvt)+2)           /* sssvt address           */
ssvtfnum=   c2x(storage(sssvt_addr,2))  /* no of functs supported  */
snofunc=    x2d(ssvtfnum)               /* no of functs supported  */
if (ssvtfnum = 0000) then do            /* no functions supported? */
   subsinfo= 'No Functions are Supported by Subsystem 'sname''
   call display_information_panel       /* inform the user         */
   return                               /* return to caller        */
end
ssvtfcod_addr= d2x(x2d(sssvt)+4)        /* start of function matrix*/
do i= 1 to 256
   ssvtfcod= c2d(storage(ssvtfcod_addr,1)) /* sscvt @              */
   ssvtfcod_addr= d2x(x2d(ssvtfcod_addr)+1) /* next function byte  */
   if (ssvtfcod = 0) then do            /* no function?            */
      iterate                           /* yes-                    */
   end
   smfuncc= i                           /* position in matrix table*/
   smatrix=  ssvtfcod                   /* function code           */
   ssvtfcod= ((ssvtfcod - 1) * 4)       /* function subscript      */
   ssvtfrtn_addr= d2x(x2d(sssvt)+260)   /* function routine pointers*/
   ssvtfrtn_addr= d2x(x2d(ssvtfrtn_addr) + ssvtfcod) /* function @ */
   sfaddr= c2x(storage(ssvtfrtn_addr,4)) /* sscvt @                */
   ADDRESS "ISPEXEC" "TBADD SSVTTAB      /* add the entries        */
            SAVE(smfuncc,smatrix,sfaddr)
            MULT("TABROWS")"
   if (rc ¬= 0) then do                  /* call okay?             */
      say 'TBADD error    rc = 'rc''     /* no- inform the user    */
      call dealloc                       /* Dealloc                */
      exit(0)                            /* let's quit             */
   end
end
ADDRESS "ISPEXEC" "TBTOP SSVTTAB"        /* position to top of tab */
if (rc ¬= 0) then do                     /* call okay?             */
   say 'TBTOP error    rc = 'rc''        /* no- inform the user    */
   call dealloc                          /* Dealloc                */
   exit(0)                               /* let's quit             */
end
ADDRESS "ISPEXEC" "ADDPOP POPLOC(ZCMD)"  /* pop up position        */
ADDRESS "ISPEXEC" "TBDISPL SSVTTAB PANEL(SUBSYSP3)"
if (rc > 8) then do                      /* error?                 */
   say 'SUBSYSP3 TBDISPL error  rc = 'rc''
   call dealloc                          /* Dealloc                */
   exit(0)                               /* and quit               */
end
ADDRESS "ISPEXEC" "REMPOP"               /* remove pop-up          */
return
