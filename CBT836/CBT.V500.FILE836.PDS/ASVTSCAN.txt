*  Author:   David Welch (New Zealand)
ASVTSCAN CSECT
         BAKR  R14,0
         LR    R12,R15
         USING ASVTSCAN,R12
         L     R2,CVTPTR                      r2 --> cvt
         ICM   R1,15,CVTSMCA-CVT(R2)          r1 --> smca
         MVC   L0A+12(4),SMCASID-SMCABASE(R1) smfid
         L     R2,CVTASVT-CVT(,R2)            r2 --> asvt
         USING ASVT,R2
         CLC   ASVTASVT-ASVT(4,R2),=C'ASVT'   check eyecatcher
         BNE   ABEND
         XR    R8,R8
         L     R4,ASVTMAXI-ASVT(,R2)          r4 no of asvt slots
         LA    R3,ASVTENTY-ASVT(,R2)          r3 --> first asvt slot
         LR    R5,R3                          r5 --> MASTERs asvt slot
         L     R6,0(,R5)                      r6 --> MASTERs ascb
         CLC   ASCBASCB-ASCB(4,R6),=C'ASCB'
         BNE   ABEND
         ICM   R6,B'1111',ASCBJBNS-ASCB(R6)   r6 --> jobname
         BZ    ABEND
         CLC   0(8,R6),=C'*MASTER*'
         BNE   ABEND
         O     R5,=X'80000000'                turn high-order bit on
ASVT_LOOP EQU *
         ICM   R6,B'1111',0(R3)               asvt entry
         BNM   ASVT_NEXT                      assigned ?
         C     R6,=X'80000000'                end of queue ?
         BE    ASVT_NEXT
         CR    R5,R6                          MASTER asvt ?
         BNE   ASVT_NEXT
         LA    R8,1(,R8)                      yes - increment count
ASVT_NEXT EQU *
         LA    R3,4(,R3)                      r3 --> next asvt slot
         BCT   R4,ASVT_LOOP
         OPEN  (SYSPRINT,(OUTPUT))
         BAL   R3,PUT_LINE
         MVC   0(L'L0A,R7),L0A                system id
         BAL   R3,PUT_LINE
         BAL   R3,PUT_LINE
         MVC   BINARY(4),ASVTAAV-ASVT(R2)     no of free slots
         BAL   R3,CONVERT_TO_DECIMAL
         BAL   R3,PLACE_NUMBER
         MVC   0(L'L1A,R7),L1A
         LA    R7,L'L1A(,R7)
         MVC   BINARY(4),ASVTMAXI-ASVT(R2)    maxuser value
         BAL   R3,CONVERT_TO_DECIMAL
         BAL   R3,PLACE_NUMBER
         MVC   0(L'L1B,R7),L1B
         BAL   R3,PUT_LINE
         BAL   R3,PUT_LINE
         MVC   BINARY(4),ASVTAST-ASVT(R2)     free reserved (start q)
         BAL   R3,CONVERT_TO_DECIMAL
         BAL   R3,PLACE_NUMBER
         MVC   0(L'L2A,R7),L2A
         LA    R7,L'L2A(,R7)
         MVC   BINARY(4),ASVTSTRT-ASVT(R2)    rsvstrt value
         BAL   R3,CONVERT_TO_DECIMAL
         BAL   R3,PLACE_NUMBER
         MVC   0(L'L2B,R7),L2B
         BAL   R3,PUT_LINE
         BAL   R3,PUT_LINE
         MVC   BINARY(4),ASVTANR-ASVT(R2)     free non-reusable q
         BAL   R3,CONVERT_TO_DECIMAL
         BAL   R3,PLACE_NUMBER
         MVC   0(L'L3A,R7),L3A
         LA    R7,L'L3A(,R7)
         MVC   BINARY(4),ASVTNONR-ASVT(R2)    rsvnonr value
         BAL   R3,CONVERT_TO_DECIMAL
         BAL   R3,PLACE_NUMBER
         MVC   0(L'L3B,R7),L3B
         BAL   R3,PUT_LINE
         BAL   R3,PUT_LINE
         ST    R8,BINARY                      number flagged as
         BAL   R3,CONVERT_TO_DECIMAL          .. not reusable
         BAL   R3,PLACE_NUMBER
         MVC   0(L'L4A,R7),L4A
         LA    R7,L'L4A(,R7)
         MVC   BINARY(4),ASVTMAXI-ASVT(R2)    maxuser
         BAL   R3,CONVERT_TO_DECIMAL
         BAL   R3,PLACE_NUMBER
         CLOSE (SYSPRINT)
EXIT     XR    R15,R15
         PR                                   return to MVS
PUT_LINE EQU *                                subroutine
         PUT   SYSPRINT
         MVI   0(R1),C' '
         MVC   1(120,R1),0(R1)
         LA    R7,2(,R1)
         BR    R3                             return to caller
CONVERT_TO_DECIMAL EQU *                      subroutine
         L     R5,BINARY
         CVD   R5,PACKED
         MVC   ZONED(8),PATTERN
         ED    ZONED(8),PACKED+4              return to caller
         BR    R3
PLACE_NUMBER EQU *                            subroutine
         LA    R5,ZONED+6
         LA    R6,1
PLACE_NUMBER_LOOP EQU *
         CLI   0(R5),C' '
         BE    PLACE_NUMBER_MVC
         BCTR  R5,0
         LA    R6,1(,R6)
         B     PLACE_NUMBER_LOOP
PLACE_NUMBER_MVC EQU *
         EX    R6,MVC001
         LA    R7,1(R6,R7)
         BR    R3                             return to caller
MVC001   MVC   0(0,R7),0(R5)
ABEND    ABEND 99
SYSPRINT DCB DDNAME=SYSPRINT,MACRF=PL,DSORG=PS,LRECL=121
PACKED   DC    D'0'
BINARY   DC    F'0'
ZONED    DC    CL8' '
PATTERN  DC    X'4020202020202120'
L0A      DC    C'System id - xxxx'
L1A      DC    C' free ASVT slots (out of'
L1B      DC    C' - MAXUSER value)'
L2A      DC    C' free slots on reserved START queue (original size'
L2B      DC    C' - RSVSTRT value)'
L3A      DC    C' free slots on the non-reusable replacement queue (oriX
               ginal size'
L3B      DC    C' - RSVNONR value)'
L4A      DC    C' slots marked as not reusable - out of original'
         YREGS
         CVT DSECT=YES
         IHAASVT DSECT=YES,LIST=YES
         IHAASCB DSECT=YES,LIST=YES
         IEESMCA
         END
