         TITLE 'WTO PROGRAM'
         MACRO
         MODE24
         LA    R1,LAB&SYSNDX
         BSM   R0,R1
LAB&SYSNDX EQU  *
         MEND
         MACRO
         MODE31
         LCLA  &LABNUM
&LABNUM  SETA  &SYSNDX+1
         L     R1,LAB&SYSNDX
         BSM   R0,R1
LAB&SYSNDX DC  A(LBL&LABNUM+X'80000000')
LBL&LABNUM EQU *
         MEND
YES      EQU   C'Y'                         YES TO CONTINUE
REPLYLEN EQU   1                            REPLY LENGTH
WTORLOOP EQU   3                            WTOR LOOP MAX
PARMER   EQU   12                           PARM ERROR
MESSNO   EQU   16                           NO MESSAGE
WTOPROB  EQU   20                           WTOR PROBLEM
JOBFND   EQU   X'01'                        JOB ALREADY LOCATED
ZERO     EQU   X'00'                        SET TO ZERO
ASID     EQU   X'01'                        SET TO ASID SCAN
WTOR     EQU   X'02'                        ISSUE WTOR
NOTINSYS EQU   X'04'                        CHECK ASIDS NOT IN SYSTEM
MESSREAD EQU   X'08'                        MESSAGE HAS BEEN READ
WTOPROG  CSECT
WTOPROG  AMODE 31
WTOPROG  RMODE 24
         BAKR  R14,0                        SAVE CALLER'S ARS + GPRS
*                                           IN THE LINKAGE STACK
         LAE   R12,0(R15,0)                SET UP PROGRAM BASE REGISTER
GETWORK  EQU   *
         USING WTOPROG,R12                  INFORM THE ASSEMBLER
         LR    R8,R1                        PARM @ OF @
         STORAGE OBTAIN,LENGTH=WORKALEN,ADDR=(R10),SP=0,KEY=8,         X
               LOC=BELOW,COND=NO,RELATED=(FREEWORK,'FREE WORK AREA')
         LAE   R13,0(R10,0)                 @ THE WORKAREA
         USING WORKAREA,R13                 INFORM THE ASSEMBLER
         MVC   PREVSA,=C'F1SA'              PUT ACRONYM INTO SAVEAREA
*                                           TO INDICATE STATUS SAVED ON
*                                           THE LINKAGE STACK.
         MVI   OPTION,ASID                  SET TO ASID SCAN
         L     R8,0(,R8)                    PARM @
         LH    R9,0(,R8)                    PARM LENGTH FIELD
         LTR   R9,R9                        ANY PARM?
         BZ    NOPARM                       NO- CHECK ASID'S
         CH    R9,=H'1'                     1-BYTE PARM?
         BNE   PARMERR                      NO- PARMERR
         CLI   2(R8),C'M'                   CHECK ASIDS'S NOT IN SYS?
         BE    MISSING                      NO- PARMERR
         CLI   2(R8),C'W'                   WTOR TO ISSUE?
         BNE   PARMERR                      NO- PARMERR
         MVI   OPTION,WTOR                  SET TO WTOR SCAN
         MVC   DDCB,DISKDCB                 SET UP MESSAGES DCB AREA
         MVC   OPENARA3,OPENLST3            SET UP OPEN MACRO AREA
         MVC   CLOSEARA,CLOSELST            SET UP CLOSE MACRO AREA
         MVC   WTORARA(WTORLEN),WTORLIST    WTOR MACRO AREA
         LA    R7,DDCB                      @ MESSAGE DCB
         USING IHADCB,R7                    INFORM THE ASSEMBLER
         LA    R1,OPENARA3                  @ THE OPEN AREA CB
         OPEN  ((R7),INPUT),MODE=31,MF=(E,(R1))
         TM    DCBOFLGS,DCBOFOPN            OPEN SUCCESSFUL?
         BZ    OPENERR1                     NO- LET'S ABEND
         B     WTOMESS                      GIVE OUT THE MESSAGE
MISSING  EQU   *
         MVI   OPTION,NOTINSYS              ASID MISSING CHECK
NOPARM   EQU   *
         MVC   DDCB,DISKDCB                 SET UP MESSAGES DCB AREA
         MVC   JDCB,JOBNAME                 SET UP PARMLIB DCB AREA
         MVC   OPENARA,OPENLST              SET UP OPEN MACRO AREA
         MVC   OPENARA2,OPENLST2            SET UP OPEN MACRO AREA
         MVC   CLOSEARA,CLOSELST            SET UP CLOSE MACRO AREA
         MVC   WTORARA(WTORLEN),WTORLIST    WTOR MACRO AREA
         TITLE 'OPEN MESSAGE DATASET'
OPENMESS EQU   *
         LA    R7,DDCB                      @ MESSAGE DCB
         USING IHADCB,R7                    INFORM THE ASSEMBLER
         LA    R9,JDCB                      @ PARMLIB DCB
         LA    R1,OPENARA                   @ THE OPEN AREA CB
         OPEN  ((R7),INPUT,(R9),INPUT),MODE=31,MF=(E,(R1))
         TM    DCBOFLGS,DCBOFOPN            OPEN SUCCESSFUL?
         BZ    OPENERR1                     NO- LET'S ABEND
         DROP  R7                           INFORM THE ASSEMBLER
         USING IHADCB,R9                    INFORM THE ASSEMBLER
         TM    DCBOFLGS,DCBOFOPN            OPEN SUCCESSFUL?
         BZ    OPENERR2                     NO- LET'S ABEND
         TITLE 'OBTAIN THE PARMLIB INFO'
JINIT    EQU   *
         SR    R5,R5                        ZEROIZE
         MODE24                             GET INTO AMODE 24
JLOOP    EQU   *
         GET   JDCB,JOBNME                  READ A JOBNAME
         LA    R5,1(,R5)                    INCREMENT NO OF RECORDS
         B     JLOOP                        DO WHILE NOT EOF?
         TITLE 'CLOSE PARMLIB DATASET'
JEOD     EQU   *
         MODE31                             GET INTO AMODE 24
         STCM  R5,B'1111',SYSINRCS          NO OF RECORDS READ
         LTR   R5,R5                        ANY INPUT RECORDS?
         BZ    WTOMESS                      NO- JUST ISSUE WTO
         M     R4,=AL4(L'JNAME+L'JOBIND)    BUFFER LENGTH
         STCM  R5,B'1111',IBUFLEN           STORE FOR SAFE KEEPING
         LA    R1,CLOSEARA                  @ THE CLOSE AREA CB
         CLOSE ((R9)),MODE=31,MF=(E,(R1))   CLOSE PARMLIB DATASET
         LA    R1,OPENARA2                  @ THE OPEN AREA CB
         OPEN  ((R9),INPUT),MODE=31,MF=(E,(R1))
         STORAGE OBTAIN,LENGTH=(R5),ADDR=(R3),SP=0,KEY=8,              X
               LOC=BELOW,COND=NO,RELATED=(FREEWORK,'FREE WORK AREA')
         STCM  R3,B'1111',INPBUFF@          STORE FOR FUTURE REFERENCE
         ICM   R5,B'1111',SYSINRCS          NO OF RECORDS TO READ
         USING JOBDSECT,R3                  INFORM THE ASSEMBLER
READLOOP EQU  *
         MODE24                             GET INTO AMODE 24
         GET   JDCB,JOBNME                  READ A JOBNAME
         MODE31                             GET INTO AMODE 31
         MVC   JBNME,JNAME                  MOVE JOBNAME
         MVI   JOBIND,ZERO                  SET TO ZERO
         LA    R3,L'JBNME+L'JOBIND(,R3)     NEXT BUFFER ENTRY
         BCT   R5,READLOOP                  DO WHILE R5 > 0?
         LA    R1,CLOSEARA                  @ THE CLOSE AREA CB
         CLOSE ((R9)),MODE=31,MF=(E,(R1))   CLOSE PARMLIB DATASET
ASIDSCAN EQU  *
         L     R5,16(0,0)                   CVT @
         USING CVT,R5                       INFORM THE ASSEMBLER
         ICM   R5,B'1111',CVTASVT           ASVT @
         USING ASVT,R5                      INFORM THE ASSEMBLER
         ICM   R5,B'1111',ASVTMAXU          MAX NO OF ASID SLOTS
         LA    R10,1(0,0)                   START WITH *MASTER*
ASIDLOOP EQU   *
         LOCASCB ASID=(R10)                 OBTAIN ASCB @
         LTR   R15,R15                      ASID IN USE?
         BNZ   NEXTASID                     NO-
         USING ASCB,R1                      INFORM THE ASSEMBLER
         CLC   ASCBJBNI,=F'0'               STC?
         BE    STC                          YES-
         ICM   R11,B'1111',ASCBJBNI         BATCH JOB UNDER INIT
         B     COMPJBN                      COMPARE FOR JOBNAMES
STC      EQU   *
         ICM   R11,B'1111',ASCBJBNS         STC NO INIT
         B     COMPJBN                      COMPARE FOR JOBNAMES
COMPJBN  EQU   *
         ICM   R3,B'1111',INPBUFF@          INPUT BUFFER @
         ICM   R4,B'1111',SYSINRCS          NO OF RECORDS TO SCAN
JOBCLOOP EQU   *
         TM    JOBIND,JOBFND                JOB ALREADY LOCATED
         BO    NEXTJOB                      NEXT ASID
         CLC   JBNME,0(R11)                 = JOBNAMES?
         BNE   NEXTJOB                      NO-
         OI    JOBIND,JOBFND                INDICATE JOB FOUND
         B     NEXTASID                     NEXT ASID
NEXTJOB  EQU   *
         LA    R3,L'JBNME+L'JOBIND(,R3)     NEXT BUFFER ENTRY
         BCT   R4,JOBCLOOP                  DO WHILE R4 > 0?
NEXTASID EQU   *
         LA    R10,1(,R10)                  NEXT ASID
         BCT   R5,ASIDLOOP                  DO WHILE R5 > 0?
CHKINDS  EQU   *
         ICM   R3,B'1111',INPBUFF@          INPUT BUFFER @
         ICM   R4,B'1111',SYSINRCS          NO OF RECORDS TO SCAN
INDCHECK EQU   *
         TM    OPTION,ASID                  JOB ACTIVE CHECK?
         BO    CHKACTVE                     NO-
         CLI   JOBIND,ZERO                  JOB ACTIVE?
         BE    NXTJOB                       NO-
         B     WTOMESS                      YES- ISSUE WTO
CHKACTVE EQU   *
         TM    JOBIND,JOBFND                JOB ACTIVE?
         BNO   WTOMESS                      NO-
NXTJOB   EQU   *
         LA    R3,L'JBNME+L'JOBIND(,R3)     NEXT BUFFER ENTRY
         BCT   R4,INDCHECK                  DO WHILE R4 > 0?
         BAL   R2,CLOSE                     CLOSE FILES
         B     RETURN                       RETURN TO CALLER
         TITLE 'OBTAIN THE MESSAGE'
WTOMESS  EQU   *
         TM    OPTION,MESSREAD              IS THE MESSAGE IN THE
*                                           I/O AREA?
         BO    WTORMAX                      YES-
         MODE24                             GET INTO AMODE 24
         GET   DDCB,MESSAGE                 READ A MESSAGE
         MODE31                             GET INTO AMODE 31
         LA    R6,MESSARA+L'MESSARA-1       @ LAST BYTE OF MESSAGE
         LA    R7,L'MESSAGE                 LENGTH OF MESSAGE
         OI    OPTION,MESSREAD              INDICATE MESSAGE ISSUED
MESSSCAN EQU   *
         CLI   0(R6),C' '                   END OF MESSAGE?
         BNE   WTORMAX                      YES-
         BCTR  R6,0                         -1
         BCT   R7,MESSSCAN                  DO WHILE R7 > 0?
WTORMAX  EQU   *
         LA    R8,WTORLOOP                  MAX TIMES TO ISSUE WTOR
         MVC   WTORARA(WTORLEN),WTORLIST    WTOR AREA
ENDMESS  EQU   *
         XC    REPLYECB,REPLYECB            CLEAR THE ECB
         XC    REPLY,REPLY                  CLEAR THE REPLY
         STCM  R7,B'0011',MESSLEN           MESSAGE LENGTH
         MVC   TOKENDOM,=CL4'ACE3'          DOM TOKEN
         MVC   KEYID,=CL8'ACE3'             KEY
WTORMESS EQU   *
         WTOR  TEXT=(MESSARA,REPLY,REPLYLEN,REPLYECB),                 X
               RPLYISUR=RISUR,KEY=KEYID,TOKEN=TOKENDOM,                X
               MF=(E,WTORARA,EXTENDED)
         LTR   R15,R15                      SUCCESSFUL WTOR?
         BZ    WAITRPLY                    YES- LET'S WAIT FOR A REPLY?
         BCT   R8,ENDMESS                   DO WHILE R8 > 0?
         B     WTORERR                      LET'S GIVE UP
WAITRPLY EQU   *
         WAIT  ECB=REPLYECB                 LET'S WAIT A BIT?
         CLI   REPLY,YES                    CAN WE PROCEED?
         BNE   WTORMAX                      NO- IT'S ONLY 1 CHARACTER
         TM    OPTION,WTOR                  WTOR OPTION?
         BNO   REINIT                       NO-
         BAL   R2,CLOSE                     LET'S CLOSE THE FILE
         B     RETURN                       AND LET THE NEXT STEPS RUN
REINIT   EQU   *
         ICM   R3,B'1111',INPBUFF@          INPUT BUFFER @
         ICM   R4,B'1111',SYSINRCS          NO OF RECORDS TO SCAN
RESET    EQU   *
         MVI   JOBIND,ZERO                  RESET INDICATOR
         LA    R3,L'JBNME+L'JOBIND(,R3)     NEXT BUFFER ENTRY
         BCT   R4,RESET                     DO WHILE R4 > 0?
         B     ASIDSCAN                     KEEP CHECKING
         TITLE 'CLOSE MESSAGE DATASET'
CLOSE    EQU   *
         LA    R1,CLOSEARA                  @ THE OPEN AREA CB
         LA    R7,DISKDCB                   ADDR OF DCB BEFORE CLOSE
         CLOSE ((R7)),MODE=31,MF=(E,(R1))   CLOSE DISK DATASET
         BR    R2                           RETURN TO CALLER
         TITLE 'LETS RETURN TO THE INITIATOR'
RETURN   EQU   *
         LAE   R1,0(R13,0)                  ADDRESS TO FREE
         STORAGE RELEASE,ADDR=(R1),LENGTH=WORKALEN,SP=0,KEY=8,         X
               COND=NO,RELATED=(GETWORK,'OBTAIN WORK AREA')
         SLR   R15,R15                      SET RC TO ZERO
         PR                                 RESTORE CALLER'S AR'S
*                                           GPR'S 2-14 AND RETURN
*                                           TO CALLER
         TITLE 'ERROR SECTION'
OPENERR1 EQU   *
         ABEND 001,DUMP                     OPEN ERROR MESSAGES
OPENERR2 EQU   *
         ABEND 002,DUMP                     OPEN ERROR PARMLIB
NOMESS   EQU   *
         BAS   R2,CLOSE                     CLOSE DATASET
         LAE   R1,0(R13,0)                  ADDRESS TO FREE
         STORAGE RELEASE,ADDR=(R1),LENGTH=WORKALEN,SP=0,KEY=8,         X
               COND=NO,RELATED=(GETWORK,'OBTAIN WORK AREA')
         LA    R15,MESSNO                   SET RC TO NO MESSAGE
         PR                                 RESTORE CALLER'S AR'S
*                                           GPR'S 2-14 AND RETURN
*                                           TO CALLER
WTORERR  EQU   *
         BAS   R2,CLOSE                     CLOSE DATASET
         LAE   R1,0(R13,0)                  ADDRESS TO FREE
         STORAGE RELEASE,ADDR=(R1),LENGTH=WORKALEN,SP=0,KEY=8,         X
               COND=NO,RELATED=(GETWORK,'OBTAIN WORK AREA')
         LA    R15,WTOPROB                  SET RC TO WTO PROBLEM
         PR                                 RESTORE CALLER'S AR'S
*                                           GPR'S 2-14 AND RETURN
*                                           TO CALLER
PARMERR  EQU   *
         LAE   R1,0(R13,0)                  ADDRESS TO FREE
         STORAGE RELEASE,ADDR=(R1),LENGTH=WORKALEN,SP=0,KEY=8,         X
               COND=NO,RELATED=(GETWORK,'OBTAIN WORK AREA')
         LA    R15,PARMER                   SET RC TO PARM ERROR
         PR                                 RESTORE CALLER'S AR'S
*                                           GPR'S 2-14 AND RETURN
*                                           TO CALLER
         LTORG
DISKDCB  DCB   DDNAME=MESSAGES,DSORG=PS,MACRF=GM,EODAD=NOMESS
DDCBLEN  EQU *-DISKDCB                      DCB  MACRO LENGTH
JOBNAME  DCB   DDNAME=PARMLIB,DSORG=PS,MACRF=GM,EODAD=JEOD
JDCBLEN  EQU *-JOBNAME                      DCB  MACRO LENGTH
OPENLST  OPEN  (,,,),MF=L,MODE=31
OPENLEN  EQU *-OPENLST                      OPEN MACRO LENGTH
OPENLST2 OPEN  (,),MF=L,MODE=31
OPENLEN2 EQU *-OPENLST2                     OPEN MACRO LENGTH
OPENLST3 OPEN  (,),MF=L,MODE=31
OPENLEN3 EQU *-OPENLST3                     OPEN MACRO LENGTH
CLOSELST CLOSE (,),MF=L,MODE=31
CLOSELEN EQU *-CLOSELST                     OPEN MACRO LENGTH
WTORLIST WTOR  TEXT=(,,,),ROUTCDE=(2),RPLYISUR=,KEY=,TOKEN=,MF=L
WTORLEN  EQU *-WTORLIST                     WTOR LIST LENGTH
WORKAREA DSECT
SAVEAREA DS    CL72                         SAVEAREA
PREVSA   EQU   SAVEAREA+4,4                 @ OF PREVIOUS SAVEAREA
OPTION   DS    X                            OPTION BYTE
         DS    0F                           ALIGNMENT
RISUR    DS    CL12                         CONSOLE NAME AND ID
KEYID    DS    CL8                           USEFUL WITH D R COMMAND
TOKENDOM DS    CL4                           TOKEN FOR DOM MACRO
REPLYECB DS    F                             REPLY ECB
REPLY    DS    C                             REPLY AREA
         DS    0F                            ALIGNMENT
SYSINRCS DS    AL4                           NO OF SYSIN RECORDS READ
INPBUFF@ DS    AL4                           SYSIN BUFFER @
IBUFLEN  DS    AL4                           BUFFER LENGTH
         DS    0F                            ALIGNMENT
DDCB     DS    CL(DDCBLEN)                   DISK DCB AREA
         DS    0F                            ALIGNMENT
JDCB     DS    CL(JDCBLEN)                   DISK DCB AREA
         DS    0F                            ALIGNMENT
OPENARA  DS    CL(OPENLEN)                   OPEN AREA
         DS    0F                            ALIGNMENT
OPENARA2 DS    CL(OPENLEN2)                  OPEN AREA
         DS    0F                            ALIGNMENT
OPENARA3 DS    CL(OPENLEN3)                  OPEN AREA
         DS    0F                            ALIGNMENT
CLOSEARA DS    CL(CLOSELEN)                  CLOSE AREA
         DS    0F                            ALIGNMENT
WTORARA  DS    CL(WTORLEN)                   WTOR AREA
MESSARA  DS    0CL102                        MAXIMUM MESSAGE AREA
MESSLEN  DS    XL2                           MESSAGE LENGTH
MESSAGE  DS    CL100                         MAXIMUM MESSAGE
JOBNME   DS    CL80                          JOBNAME AREA
JNAME    EQU   JOBNME,8                      JOBNAME
WORKALEN EQU   *-WORKAREA                    WORK AREA LENGTH
JOBDSECT DSECT
JBNME    DS    CL8                           JOBNAME
JOBIND   DS    XL1                           JOB FOUND INDICATOR
         DCBD  DSORG=PS,DEVD=DA
         CVT   DSECT=YES
         IHAASCB DSECT=YES
         IHAASVT DSECT=YES
         YREGS
         END
