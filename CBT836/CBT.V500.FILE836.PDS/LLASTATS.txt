/* REXX - LLASTATS */

/*-------------------------------------------------------------------*/
/*                                                                   */
/*  L L A  Statistics                                                */
/*  -----------------                                                */
/*                                                                   */
/*  Source:  XEPHON 186 (CBT) - dated March 2002                     */
/*  Article title:  "Monitoring LLA activity", page 3                */
/*  Author:  Mile Pekic, Systems Programmer, Postal Savings Bank,    */
/*  Yugoslavia                                                       */
/*                                                                   */
/*  Updated 23Apr2020, Lionel B. Dyck, 21st Century Software.        */
/*  . Remove perm dsnames and intermediate console msg datasets      */
/*                                                                   */
/*  Updated 15Mar2020, William J. Smith, Trident Services, Inc.,     */
/*  Capitola, CA                                                     */
/*  . Reformatted totals line 'left' functions to adjust the column  */
/*    alignment of each value                                        */
/*  . Changed BROWSE to VIEW function to allow for quick sorting of  */
/*    displayed output                                               */
/*                                                                   */
/*  Updated 14Mar2020, William J. Smith, Trident Services, Inc.,     */
/*  Capitola, CA                                                     */
/*  . Corrected, reformatted, and tested on z/OS 2.3 RSU 1906        */
/*  . Uses an undocumented z/OS system command to display LLA        */
/*    statistics "D LLA,STATISTICS"                                  */
/*  . LLASTAT parses the output from the D LLA,STATISTICS command    */
/*    and formats a report which is displayed using ISPF BROWSE      */
/*  . Courtesy Mile Pekic, Systems Programmer, Postal Savings Bank   */
/*    (Yugoslavia)                                                   */
/*  . Most of Mr. Pekic's code has been left intact/unchanged        */
/*                                                                   */
/*  Consider changing the comds and comfm data set names to remove   */
/*  duplicate specification of the userid in the constructed data    */
/*  set names.  DCB was changed to half-track for each data set.     */
/*                                                                   */
/*  Note:  Contact Peter Relson, IBM Poughkeepsie, to obtain the     */
/*  IBM Module Fetch Monitor, as described in the Xephon article.    */
/*  Email:  relson@us.ibm.com                                        */
/*                                                                   */
/*-------------------------------------------------------------------*/

/*-------------------------------------------------------------------*/
/* Part I: Issue MVS command and write the output to a file          */
/*-------------------------------------------------------------------*/

/*Trace ?i*/
/*Trace ?r*/

Address TSO
  userid = sysvar('sysuid')
  cmdds = userid||'.comds.out'            /* Change data set names */
  cpu_seconds = sysvar(syscpu)
  begin = time(R)
  cart = sysvar('sysuid')

/*-------------------------------------------------------------------*/
/* Console environment                                               */
/*-------------------------------------------------------------------*/

 x = MSG('OFF')
 SD = SYSVAR("SOLDISP")
 USD = SYSVAR("UNSDISP")
 If SD = 'YES' then
   "CONSPROF SOLDISP(NO)"           /* Console Profile  solicited    */
 If USD = 'YES' then                /* unsolicited must be NO to be  */
   "CONSPROF UNSOLDISP(NO)"         /* able to catch command response*/
 "CONSPROF SOLNUM(400) UNSOLNUM(400)"

 x = MSG('ON')
 "CONSOLE ACTIVATE CART("cart")"         /* Activate CONSOLE service */

 "CONSOLE SYSCMD(D LLA,STATISTICS) CART("cart")"
 getcode = GETMSG('cons_msg.','SOL',cart,,5)

 "CONSOLE DEACTIVATE"                       /* Close console session */

/*-------------------------------------------------------------------*/
/* Copy the command response to output data set                      */
/*-------------------------------------------------------------------*/

 If SD = 'YES' then
   "CONSPROF SOLDISP("SD")"
 If USD = 'YES' then
   "CONSPROF UNSOLDISP("USD")"
 x = MSG('OFF')

 "ALLOC FILE(CMDOUT)" ,
    " UNIT(SYSALLDA) NEW TRACKS SPACE(2,1)" ,
    " REUSE LRECL(133) RECFM(F B) BLKSIZE(27930)"
  "ALLOC FILE(fout)" ,
    " UNIT(SYSALLDA) NEW TRACKS SPACE(2,1)",
    " REUSE LRECL(80) RECFM(F B) BLKSIZE(27920)"

 /*------------------------------------------------------------------*/
 /* Part II: Formatting captured output & printing it to a new file  */
 /*------------------------------------------------------------------*/

 /*------------------------------------------------------------------*/
 /* Print header and labels                                          */
 /*------------------------------------------------------------------*/

   Out.1 = left(' ',20,' '),
           ||center('Display LLA Statistics ',22,),
           ||left(' ',15,' ')
   Out.2 = left(' ',10,' '),
           ||center('Report produced on',18,),
           ||left(' ',1,' ')||left(date(),11),
           ||left(' ',1,' ')||left('at ',3,' '),
           ||left(time(),10)
   Out.3 = ' '
   Out.4 = left('LLA entry',28) left('members',8),
       left('members',8) left('members',8),
       left('dasd',8) left('vlf',4)
   Out.5 = left(' ',37) left('fetched',8) left('in vlf',7),
       left('fetched',8) left('retrieves',9)
   Out.6 = left('-',73,'-')
   t = 6

/*-------------------------------------------------------------------*/
/* Read command output                                               */
/*-------------------------------------------------------------------*/

   tmem  = 0
   tmemf = 0
   tmemv = 0
   tdasd = 0
   tvlfr = 0
   i=4
  do while(i <= cons_msg.0)
    dsname = SUBSTR(cons_msg.i,11,25)
    i = i+1
    mem = SUBSTR(cons_msg.i,26,5)
    tmem = tmem + mem
    i = i+1
    memf = SUBSTR(cons_msg.i,26,5)
    memv = SUBSTR(cons_msg.i,54,5)
    tmemf = tmemf + memf
    tmemv = tmemv + memv
    i = i+1
    dasdf = SUBSTR(cons_msg.i,26,5)
    vlfr = SUBSTR(cons_msg.i,54,5)
    tdasd = tdasd + dasdf
    tvlfr = tvlfr + vlfr
    i = i+1
    t = t+1

/*-------------------------------------------------------------------*/
/* Formatting and printing list of LLA enties                        */
/*-------------------------------------------------------------------*/

 Out.t = left(dsname,27) left(mem,7) left(memf,8) left(memv,8),
      left(dasdf,7) left(vlfr,7)
 End
 t = t + 1

/*-------------------------------------------------------------------*/
/* Print footer                                                      */
/*-------------------------------------------------------------------*/

 Out.t = left('-',67,'-')
  t = t + 1
  Out.t = left('Totals',27) left(tmem,8) left(tmemf,9) left(tmemv,6),
  left(tdasd,8) left(tvlfr,7)
  t = t + 1
  Out.t = left(' ',63,' ')
  t = t + 1
 elapsed_seconds = time(E)
 cpu_seconds = Sysvar(SYSCPU)-cpu_seconds
 Out.t = 'This REXX EXEC used' cpu_seconds 'CPU-seconds' ,
     'and' elapsed_seconds 'in elapsed time (seconds).'
  Out.0 = t
   "EXECIO * DISKW fout (Finis STEM Out.)"
      Address ISPExec
      'lminit dataid(ddb) ddname('fout')'
      'view dataid('ddb')'
      'lmfree dataid('ddb')'
  Address TSO
  "Free file(fout)"

 Exit

