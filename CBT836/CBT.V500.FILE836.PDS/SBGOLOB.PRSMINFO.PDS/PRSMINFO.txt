PRSMINFO TITLE 'OBTAIN PR/SM LPAR INFORMATION'
PRSMINFO CSECT
***********************************************************************
*        MODULE NAME.   PRSMINFO.                                     *
*        REMARKS.       TO RETURN THE CURRENT PR/SM SET UP AND FORMAT *
*                       THIS INFORMATION INTO A REXX VARIABLE.        *
*        RETURN CODES.  4  = LRA ERROR                                *
*                       8  = DIAGNOSE COMMAND ERROR                   *
*                       12 = REXX BUILD ERROR                         *
*                       16 = NO LPARS DEFINED                         *
***********************************************************************
         TITLE 'MAIN PROCESSING LOGIC'
PRSMINFO AMODE 31
PRSMINFO RMODE 24
         BAKR  R14,0                     SAVE CALLER'S ARS + GPRS
*                                        IN THE LINKAGE STACK
         LAE   R12,0(R15,0)              SET UP PROGRAM BASE REGISTER
GETWORK  EQU   *
         USING PRSMINFO,R12              INFORM THE ASSEMBLER
         STORAGE OBTAIN,LENGTH=WORKALEN,ADDR=(R10),SP=0,KEY=8,         X
               LOC=BELOW,COND=NO,RELATED=(FREEWORK,'FREE WORK AREA')
         LAE   R13,0(R10,0)              @ THE WORKAREA
         USING WORKAREA,R13              INFORM THE ASSEMBLER
         MVC   PREVSA,=C'F1SA'           PUT ACRONYM INTO SAVEAREA
*                                        TO INDICATE STATUS SAVED ON
*                                        THE LINKAGE STACK.
         STAX  DEFER=YES                 NO INTERRUPTS
         BAS   R2,GETLPAR                LET'S GET THE LPAR INFO
         STAX  DEFER=NO                  INTERRUPTS
RETURN   EQU   *
         LAE   R1,0(R13,0)               ADDRESS TO FREE
         STORAGE RELEASE,ADDR=(R1),LENGTH=WORKALEN,SP=0,KEY=8,         X
               COND=NO,RELATED=(GETWORK,'OBTAIN WORK AREA')
         LR    R15,R10                   SET RC
         PR                             RESTORE CALLER'S ARS
*                                       GPRS 2-14 AND RETURN
*                                       TO CALLER
         TITLE 'OBTAIN THE LPAR INFO'
GETLPAR  EQU   *
         STCM  R2,B'1111',R2STR1        STORE THE RETURN ADDRESS
         XR    R10,R10                  CLEAR
         MVC   MDESETX,MDESETL1         MOVE FOR EXECUTE FORM
         MODESET MF=(E,MDESETX)         SUPV STATE KEY 0
         STORAGE OBTAIN,LENGTH=DIAGNLEN,ADDR=(R9),SP=0,KEY=8,          X
               LOC=(RES,ANY),COND=NO,BNDRY=PAGE
         LR    R6,R9                    4K ADDRESS
         LR    R7,R6                    CALCULATE PAGE FIX
         A     R7,=AL4(DIAGNLEN-1)      ENDING ADDRESS
         STCM  R6,B'1111',LPARINF@      STORE FOR LATER REFERENCE
         PGSER R,FIX,A=(R6),EA=(R7),ECB=0,TCB=0,BRANCH=Y,LONG=N
         LRA   R1,0(R6,0)               LOAD THE REAL ADDRESS
         BNZ   LRAERR                   TRANSLATION PROBLEM
DIAGNOSE EQU   *
         LA    R0,4(0,0)                RETRIEVE PR/SM DATA
DIAG0204 DC    X'83100204'              DIAGNOSE 0204
         LTR   R0,R0                    DIAGNOSE OKAY?
         BNZ   DIAGERR                  NO-
         MVC   MDESETX,MDESETL2         MOVE FOR EXECUTE FORM
         MODESET MF=(E,MDESETX)         PROB STATE KEY 8
         USING LPARDEFS,R6              INFORM THE ASSEMBLER
         XC    LPARTAB,LPARTAB          CLEAR
         XR    R8,R8                    SET TO ZERO
         XR    R3,R3                    SET TO ZERO
         ICM   R3,B'0001',LPNOPART      NO OF PARTITIONS DEFINED
         BZ    NOLPAR                   NO LPARS DEFINED
         LA    R5,LPARDHL(0,0)          TABLE HEADER LENGTH
         LA    R9,LPARTAB               @ THE LPAR TABLE
         USING LPARTABL,R9              INFORM THE ASSEMBLER
         MVC   TIMESLCE,LPTSLICE        TIME SLICE
         MVC   NUMPPROC,LPNUMPP         NO OF PHYSICAL PROCESSORS
*                                       ASSIGNED FOR PR/SM USE
         MVC   NOPARTS,LPNOPART         NO OF CONFIGURED PARTITIONS
         LA    R9,LPARDHL(,R9)          MOVE OVER THE HEADER
         LA    R6,LPINFBLK(,R6)         MOVE OVER LPAR INFO BLOCK
LPARBLD  EQU   *
         LA    R8,1(,R8)                NO OF LPARS IN REXX VARIABLE
         MVC   PARTNAME,LPPARTNM        LPAR NAME
         MVC   PARTNO,LPLPNO            LPAR NO
         XR    R4,R4                    SET TO ZERO
         IC    R4,LPNOLCPU              NO OF LOGICAL CPUS
         MVC   LOGCPS,LPNOLCPU          NO OF LOGICAL CPUS
         LA    R6,L'LPPARTDE(,R6)       MOVE OVER THE PARTITION DATA
*                                       ENTRY
         MVI   WAITCMP,C'Y'             DEFAULT
         TM    LPFLAG2,LPWCF            WAIT COMPLETION?
         BO    CAPTEST                  YES-
         MVI   WAITCMP,C'N'             WAIT COMPLETION=N
CAPTEST  EQU   *
         MVI   CAPPED,C'Y'              DEFAULT
         TM    LPFLAG2,LPCAPPED         CAPPED=Y?
         BO    CPUREL                   YES-
         MVI   CAPPED,C'N'              CAPPED=N
CPUREL   EQU   *
         MVC   RELSHR,LPPRELS           CPU RELATIVE SHR
NEXTLCPU EQU   *
         LA    R15,L'LPLOGPDB(0,0)      LP DATA BLOCK LENGTH
         MR    R14,R4                   MOVE OVER THE LP DATA BLOCKS
         LA    R6,0(R15,R6)             MOVE ONTO THE NEXT LPAR
NEXTLPAR EQU   *
         LA    R5,LPARDEFL(,R5)         REXX VARIABLE LENGTH
         LA    R9,LPARDEFL(,R9)         MOVE OVER THE HEADER
         BCT   R3,LPARBLD               DO WHILE R3 > 0?
         STC   R8,NOPARTS               NO OF LPARS IN REXX VARIABLE
SETVAR   EQU   *
         LA    R14,VARNAME              @ OF VARIABLE NAME TO CREATE
         STCM  R14,B'1111',VARNPTR      STORE FOR IKJCT441
         LA    R14,L'VARNAME(0,0)       LENGTH OF VARIABLE NAME
         STCM  R14,B'1111',VARVNLEN     STORE FOR IKJCT441
         LA    R14,LPARTAB              @ OF VARIABLE
         STCM  R14,B'1111',VARVAL@      STORE FOR IKJCT441
         STCM  R5,B'1111',VARVALLN      STORE AWAY
         BAL   R2,REXXVAR               BUILD THE REXX VARIABLE
         LTR   R15,R15                  DID WE BUILD THE VARIABLE?
         BNZ   STATCHNG                 NO- DAMM IT
BLDOK    EQU   *
         SR    R10,R10                  BUILD OKAY
         B     STATCHNG                 AND LET'S QUIT
LRAERR   EQU   *
         LA    R10,4(0,0)               RETURN CODE
         B     PAGEFREE                 FREE THE PAGE
DIAGERR  EQU   *
         LA    R10,8(0,0)               RETURN CODE
         B     PAGEFREE                 FREE THE PAGE
NOLPAR   EQU   *
         LA    R10,12(0,0)              RETURN CODE
         B     STATCHNG                 GET INTO SUPVR STATE
STATCHNG EQU   *
         MVC   MDESETX,MDESETL1         MOVE FOR EXECUTE FORM
         MODESET MF=(E,MDESETX)         SUPV STATE KEY 0
PAGEFREE EQU   *
         ICM   R6,B'1111',LPARINF@      DIAGNOSE AREA
         PGSER R,FREE,A=(R6),EA=(R7),TCB=0,BRANCH=Y
         STORAGE RELEASE,LENGTH=DIAGNLEN,ADDR=(R6),SP=0,KEY=8,         X
               COND=NO
         MVC   MDESETX,MDESETL2         MOVE FOR EXECUTE FORM
         MODESET MF=(E,MDESETX)         PROB STATE KEY 8
         ICM   R2,B'1111',R2STR1       RETURN ADDRESS
         BR    R2                      RETURN TO CALLER
         TITLE 'DEFINE REXX VARIABLE'
REXXVAR  EQU   *
         XC    IKJTOKEN,IKJTOKEN       NOT REQUIRED FOR THIS CALL
         XC    RCODE441,RCODE441       RETURN CODE
         L     R15,CVTPTR              CVT @
         USING CVT,R15                 INFORM THE ASSEMBLER
         L     R15,CVTTVT              TSCT @
         USING TSVT,R15                INFORM THE ASSEMBLER
         L     R15,TSVTVACC            IKJCT441 @
         LTR   R15,R15                 ENTRY POINT FOUND?
         BNZ   CALL441                 YES- DO A CALL
LINK441  EQU   *
         MVC   LINKAREA,LINKL          LINK SL=L
         MVC   CALLAREA,CALLL          PROG PROGRAM LIST
         LINK  EP=IKJCT441,                                            X
               PARAM=(ECODE,           ENTRY CODE                      X
               VARNPTR,                POINTER TO VARIABLE NAME        X
               VARVNLEN,               LENGTH  OF VARIABLE NAME        X
               VARVAL@,                POINTER TO VARIABLE VALUE       X
               VARVALLN,               LENGTH  OF VARIABLE             X
               IKJTOKEN,               TOKEN                           X
               ECTPARM,                NOT REQUIRED                    X
               RCODE441),              RETURN CODE                     X
               VL=1,                   EOL                             X
               MF=(E,CALLAREA),        CALL AREA                       X
               SF=(E,LINKAREA)         LINK AREA
         B     CHKRET                  CHECK THE RETURN CODE
CALL441  EQU   *
         MVC   CALLAREA,CALLL          PROG PROGRAM LIST
         CALL  (15),                                                   X
               (ECODE,                 ENTRY CODE                      X
               VARNPTR,                POINTER TO VARIABLE NAME        X
               VARVNLEN,               LENGTH  OF VARIABLE NAME        X
               VARVAL@,                POINTER TO VARIABLE VALUE       X
               VARVALLN,               LENGTH  OF VARIABLE             X
               IKJTOKEN,               TOKEN                           X
               ECTPARM,                NOT REQUIRED                    X
               RCODE441),              RETURN CODE                     X
               VL,                     EOL                             X
               MF=(E,CALLAREA)
         B     CHKRET                  CHECK THE RETURN CODE
CHKRET   EQU   *
         LTR   R15,R15                 DID WE BUILD THE VARIABLE?
         BZR   R2                      YES-
         LA    R10,12(0,0)             SET RC INDICATOR
         BR    R2                      RETURN TO CALLER
         LTORG
VARNAME  DC    CL7'LPARINF'            VARIABLE NAME
ECTPARM  DC    X'FFFFFFFF'             ECT
ECODE    DC    AL4(TSVEUPDT)           CREATE CODE
LINKL    LINK SF=L
LINKLEN  EQU   *-LINKL                 LENGTH
CALLL    CALL  ,(,,,,,,,),MF=L
CALLLEN  EQU  *-CALLL                  LENGTH
MDESETL1 MODESET KEY=ZERO,MODE=SUP,MF=L LIST FORM OF MODESET
MSETLEN1 EQU   *-MDESETL1              LENGTH OF PARAMETER LIST
MDESETL2 MODESET KEY=NZERO,MODE=PROB,MF=L  LIST FORM OF MODESET
MSETLEN2 EQU   *-MDESETL2              LENGTH OF PARAMETER LIST
         TITLE 'STORAGE ITEMS'
WORKAREA DSECT
SAVEAREA DS    CL72                    SAVEAREA
PREVSA   EQU   SAVEAREA+4,4            @ OF PREVIOUS SAVEAREA
R2STR1   DS    F                       RETURN ADDRESS
LPARINF@ DS    F                       DIAGNOSE 0204 AREA @
*  IJKCT441 PARAMETERS                 UNIT NAME
IKJTOKEN DS    F                       TOKEN
RCODE441 DS    F                       RETURN CODE
VARNPTR  DS    F                       VARIABLE NAME PTR
VARVNLEN DS    F                       VARIABLE NAME LENGTH
VARVAL@  DS    F                       VARIABLE @
VARVALLN DS    F                       LENGTH OF VARIABLE
         DS    0F
LINKAREA DS    CL(LINKLEN)             LINK AREA
CALLAREA DS    CL(CALLLEN)             PARM LIST AREA
         DS    0F                      ALIGNMENT
MDESETX  DS    XL(MSETLEN1)            MODESET EXECUTE FORM
LPARTAB  DS    CL(LPARDHL+(LPARDEFL*16))  LPAR DEF TABLE
WORKALEN EQU   *-WORKAREA              WORK AREA LENGTH
         TITLE 'DIAGNOSE DATA BLOCK'
LPARDEFS DSECT
DIAGNLEN EQU   4096                    DIAGNOSE 0204 BLOCK LENGTH
LPNOPART DS    X                       NO OF CONFIGURED PARTITIONS
LPFLAG1  DS    X                       TIMER INFORMATION BLOCK HEADER
*                                      FLAG
LPPHY    EQU   X'80'                   ADDITION PARTITION NAMED
*                                      PHYSICAL IS PRESENT. THIS
*                                      PARTITION INCLUDES ALL THE
*                                      UNCAPTURED TIME THAT COULD NOT
*                                      BE ATTRIBUTED TO A SPECIFIC
*                                      LOGICAL PARTITION.
LPTSLICE DS    XL2                     TIME SLICE
LPNUMPP  DS    XL2                     NUMBER OF PHYSICAL PROCESSORS
*                                      ASSIGNED FOR PR/SM USE
LPOFFPD  DS    XL2                     OFFSET TO THE CALLER'S PARTITION
*                                      DATA
LPCTODCK DS    XL8                     CURRENT TOD CLOCK READING
LPINFBLK EQU   *-LPNOPART              INFORMATION BLOCK LENGTH
         ORG   LPNOPART                ORG BACK
LPPARTDE DS    0XL16                   PARTITION DATA ENTRY
LPLPNO   DS    X                       LOGICAL PARTITION NUMBER
LPNOLCPU DS    X                       NO OF LOGICAL CPUS ASSIGNED
*                                      TO THIS LOGICAL PARTITION
LPRESV1  DS    CL6                     RESERVED FOR FUTURE USE
LPPARTNM DS    CL8                     PARTITION NAME
         ORG   LPNOPART                ORG BACK
LPLOGPDB DS    0XL24                   LOGICAL PROCESSOR DATA BLOCKS
LPCPUADR DS    XL2                     LOGICAL CPU ADDRESS
LPRESV2  DS    CL3                     RESERVED FOR FUTURE USE
LPFLAG2  DS    X                       LOGICAL PROCESSOR FLAGS
LPWCF    EQU   X'80'                   WAIT COMPLETION FLAG. SET BY
*                                      WAIT COMPLETION=YES
LPCAPPED EQU   X'40'                   PARTITION CAPPING FLAG. SET BY
*                                      CAPPED=YES
LPPRELS  DS    XL2                     THE PARTITION RELATIVE SHARE OF
*                                      THE SYSTEM. THIS VALUE WILL BE
*                                      IN THE RANGE 0-999. IF THE VALUE
*                                      IS 65,535 THEN THE LOGICAL
*                                      PARTITION USES DEDICATED CPUS.
LPPCPTM1 DS    XL8                     THE ACCUMULATED NO OF MICROSECS
*                                      DURING WHICH A PHYSICAL CPU
*                                      WAS ASSIGNED TO THIS LOGICAL CPU
LPPCPTM2 DS    XL8                     THE ACCUMULATED NO OF MICROSECS
*                                      DURING WHICH A PHYSICAL CPU
*                                      WAS ASSIGNED TO THIS LOGICAL CPU
*                                      EXCLUDING LPAR MANAGEMENT TIME
         TITLE 'REXX VARIABLE TABLE'
LPARTABL DSECT
TIMESLCE DS    XL2                     TIME SLICE
NUMPPROC DS    XL2                     NUMBER OF PHYSICAL PROCESSORS
*                                      ASSIGNED FOR PR/SM USE
NOPARTS  DS    XL1                     NO OF PARTITION DEFINITIONS
*                                      FOLLOWING
LPARDHL  EQU   *-PARTNAME              LPAR DEF ENTRY HEADER LENGTH
         ORG   LPARTABL
PARTNAME DS    CL8                     PARTITION NAME
PARTNO   DS    X                       PARTITION NUMBER
LOGCPS   DS    X                       NO OF LOGICAL CPS ASSIGNED
WAITCMP  DS    C                       WAIT COMPLETION
CAPPED   DS    C                       CAPPED
RELSHR   DS    XL2                     RELATIVE PARTITION CPU SHARE
LPARDEFL EQU   *-PARTNAME              LPAR DEF ENTRY
         TITLE 'CVT DSECT'
         CVT   DSECT=YES,LIST=NO
         TITLE 'TSVT'
         IKJTSVT
         YREGS
         END   PRSMINFO
