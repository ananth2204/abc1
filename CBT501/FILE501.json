{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012224000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 999362, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE501.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 999362, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 999362, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE501.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x11\\x04'", "DS1TRBAL": "b'\\x9d\\x84'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xd0\\x00\\x04\\x03\\xd1\\x00\\x06\\x00\\x12'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x02O\\x01\\x01\\x02O\\x17@\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-24T00:00:00", "modifydate": "2001-01-24T17:40:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 432    FILE:  501\n\n    ORIGINAL DSNAME:  WSBG.CBT432.FILE501\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    27920   PO\n\n\n   20 MEMBERS COUNTED; CUMULATIVE SIZE IS 9,226 RECORDS\n\nTIME THIS PDS WAS SHIPPED:   01/24/01    17:40:44    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$SNTP": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00*\\x00*\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 42, "newlines": 42, "modlines": 0, "user": "KCLAPP"}, "text": "//TECKWC$T JOB (DP00,ETEC,99,99),'SNTP',CLASS=2,\n//             MSGCLASS=T,MSGLEVEL=(1,1),REGION=4M,\n//             NOTIFY=&SYSUID\n//*\n/*JOBPARM SYSAFF=(MVS0,IND)\n//*\n//****************************************************************\\\\\n//*\n//ASM     EXEC PGM=IEV90,\n//             PARM='DECK,NOOBJECT,LIST'\n//*\n//SYSIN     DD DISP=SHR,DSN=SYS3.TS.MVS.V28.USRSRC(SNTP)\n//*\n//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//          DD DISP=SHR,DSN=TCPIP.SEZACMAC\n//          DD DISP=SHR,DSN=SYS3.TS.MVS.V25.USRSRC\n//*\n//SYSUT1    DD UNIT=VIO,SPACE=(1700,(80,80))\n//SYSUT2    DD UNIT=VIO,SPACE=(1700,(80,80))\n//SYSUT3    DD UNIT=VIO,SPACE=(1700,(80,80))\n//SYSPUNCH  DD DSN=&&OBJ,UNIT=VIO,SPACE=(TRK,(1,1,1)),DISP=(,PASS)\n//SYSPRINT  DD SYSOUT=*\n//*\n//****************************************************************\\\\\n//*\n//LKED    EXEC PGM=IEWL,\n//             PARM='XREF,AC=1,NORENT,NOREUS',\n//             COND=(4,LT)\n//*\n//SYSLMOD DD DSN=SYS2.MVSA.LINKLIB.V28(SNTP),DISP=SHR\n//*\n//**SYSLMOD   DD DSN=SYS2.MVS0.LINKLIB.V28(SNTP),DISP=SHR\n//*\n//SYSLIB    DD DSN=SYS1.LINKLIB,DISP=SHR\n//*\n//SYSUDUMP  DD SYSOUT=*\n//SYSLIN    DD DSN=&&OBJ,DISP=(OLD,DELETE,DELETE)\n//*\n//SYSUT1    DD UNIT=VIO,DCB=BLKSIZE=1024,SPACE=(1024,(20,20))\n//SYSPRINT  DD SYSOUT=*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$SNTPRAT": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00#\\x00#\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "KCLAPP"}, "text": "//TECKWC$T JOB (DP00,ETEC,99,99),'SNTPTIME',CLASS=2,\n//             MSGCLASS=T,MSGLEVEL=(1,1),REGION=4M,\n//             NOTIFY=TECKWC\n//*\n//****************************************************************\\\\\n//*\n//S01      EXEC PGM=IEV90,PARM='DECK,NOOBJECT,LIST'\n//*\n//SYSIN    DD   DISP=SHR,DSN=TECKWC.#TSO.BAL(SNTPRAT2)\n//*\n//SYSLIB   DD   DISP=SHR,DSN=SYS1.MACLIB\n//         DD   DISP=SHR,DSN=SYS1.MODGEN\n//         DD   DISP=SHR,DSN=TCPIP.SEZACMAC\n//         DD   DISP=SHR,DSN=TECKWC.#TSO.BAL\n//*\n//SYSUT1   DD   UNIT=VIO,SPACE=(1700,(80,80))\n//SYSUT2   DD   UNIT=VIO,SPACE=(1700,(80,80))\n//SYSUT3   DD   UNIT=VIO,SPACE=(1700,(80,80))\n//SYSPUNCH DD   DSN=&&OBJ,UNIT=VIO,SPACE=(TRK,(1,1,1)),DISP=(,PASS)\n//SYSPRINT DD   SYSOUT=*\n//*\n//****************************************************************\\\\\n//*\n//LKED     EXEC PGM=IEWL,\n//         PARM='XREF,NORENT,NOREUS',\n//         COND=(4,LT)\n//*\n//SYSLMOD  DD   DSN=TECKWC.GROUP00.LOADLIB(SNTPRAT2),DISP=SHR\n//*\n//SYSLIB   DD   DSN=SYS2.MVSA.LINKLIB,DISP=SHR\n//SYSUDUMP DD   SYSOUT=*\n//SYSLIN   DD   DSN=&&OBJ,DISP=(OLD,DELETE,DELETE)\n//*        DD   DDNAME=OTHER\n//SYSUT1   DD   UNIT=VIO,DCB=BLKSIZE=1024,SPACE=(1024,(20,20))\n//SYSPRINT DD   SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$SNTPTST": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00#\\x00#\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "KCLAPP"}, "text": "//TECKWC$T JOB (DP00,ETEC,99,99),'SNTPTIME',CLASS=2,\n//             MSGCLASS=T,MSGLEVEL=(1,1),REGION=4M,\n//             NOTIFY=TECKWC\n//*\n//****************************************************************\\\\\n//*\n//S01      EXEC PGM=IEV90,PARM='DECK,NOOBJECT,LIST'\n//*\n//SYSIN    DD   DISP=SHR,DSN=TECKWC.#TSO.BAL(SNTPTEST)\n//*\n//SYSLIB   DD   DISP=SHR,DSN=SYS1.MACLIB\n//         DD   DISP=SHR,DSN=SYS1.MODGEN\n//         DD   DISP=SHR,DSN=TCPIP.SEZACMAC\n//         DD   DISP=SHR,DSN=TECKWC.#TSO.BAL\n//*\n//SYSUT1   DD   UNIT=VIO,SPACE=(1700,(80,80))\n//SYSUT2   DD   UNIT=VIO,SPACE=(1700,(80,80))\n//SYSUT3   DD   UNIT=VIO,SPACE=(1700,(80,80))\n//SYSPUNCH DD   DSN=&&OBJ,UNIT=VIO,SPACE=(TRK,(1,1,1)),DISP=(,PASS)\n//SYSPRINT DD   SYSOUT=*\n//*\n//****************************************************************\\\\\n//*\n//LKED     EXEC PGM=IEWL,\n//         PARM='XREF,NORENT,NOREUS',\n//         COND=(4,LT)\n//*\n//SYSLMOD  DD   DSN=TECKWC.GROUP00.LOADLIB(SNTPTEST),DISP=SHR\n//*\n//SYSLIB   DD   DSN=SYS2.MVSA.LINKLIB,DISP=SHR\n//SYSUDUMP DD   SYSOUT=*\n//SYSLIN   DD   DSN=&&OBJ,DISP=(OLD,DELETE,DELETE)\n//*        DD   DDNAME=OTHER\n//SYSUT1   DD   UNIT=VIO,DCB=BLKSIZE=1024,SPACE=(1024,(20,20))\n//SYSPRINT DD   SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#NTP": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00v\\x00v\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 118, "newlines": 118, "modlines": 0, "user": "KCLAPP"}, "text": "/* rexx                                                             */\n/* Kenneth W. Clapp                                                 */\n/* 2000 JAN 17                                                      */\n/* NTP                                                              */\n/*  determine date and time                                         */\n/*    base on NTP / SNTP timestamp                                  */\n/*                                                                  */\n/* 32 bit number                                                    */\n\nparse arg Hex_1 HEX_2 trash\n\nif length(hex_1) > 16\nthen do\n     hex_2 = substr(hex_1,9)\n     hex_1 = left(hex_1,8)\n     end\n\nhex_X = right('00000000'hex_1,8)\nhex_2 = left(HEX_2'00000000'hex_1,8)\n\n\n/* say '>'HEX_X'<' */\n\nnumeric digits 24\n\nDEC_X = X2d(HEX_X)\nDEC_2 = X2d(HEX_2)\n\n/* say '>'dec_x'<' */\n\nc_sec  = 1            /* counts per second */\nc_min  = c_sec  * 60\nc_hour = c_min  * 60\nc_day  = c_hour * 24\n\nS_year  = 1900\nS_day   = 001\ns_hour  = 00\ns_min   = 00\ns_sec   = 00\ns_milli = 000000\n\ndy.0 = 366\ndy.1 = 365\ndy.2 = 365\ndy.3 = 365\n\ns_days = c_dec(c_day)\ns_hour = c_dec(c_hour)\ns_min  = c_dec(c_min)\ns_sec  = c_dec(c_sec)\ns_milli = trunc((dec_2/4294967296)*1000000+.5)\n\nlx = 0\ndo i = 1900 to 2100\n   ld = dy.lx\n   if i = 1900 then ld = 365\n   if s_days < ld then leave\n   s_days = s_days - ld\n   s_year = s_year + 1\n   lx = lx + 1\n   if lx = 4 then lx = 0\n   end\n\ns_day  = s_days+1\nh_days = s_day\n\nm.1 = 31\nm.2 = 28\nm.3 = 31\nm.4 = 30\nm.5 = 31\nm.6 = 30\nm.7 = 31\nm.8 = 31\nm.9 = 30\nm.10 = 31\nm.11 = 30\n\nif ld = 366 then m.2 = 29\n\ndo i = 1 to 12\n   if h_days < m.i then leave\n   h_days = h_days - m.i\n   end\n\ns_hour  = right('0'S_HOUR,2)\ns_min   = right('0'S_min,2)\ns_SEC   = right('0'S_SEC,2)\ns_milli = right('000000's_milli,6)\n\ns_year = right('0000'S_Year,4)\ns_day  = right('000's_day,3)\n\ns_dD   = right('00'h_days,2)\ns_mm   = right('00'I,2)\n\nL_T = 'TIME='S_HOUR':'S_MIN':'S_SEC'.'S_MILLI\nL_J = 'DATE='S_YEAR'.'S_DAY\nL_D = 'DATE='S_YEAR'/'S_MM'/'s_DD\n\nsay ' '\nsay L_t L_J\nsay L_D\nsay ' '\nexit\n\n/* **************************************  */\n\nc_dec: procedure expose dec_x\n\nparse arg cc\n\nx = trunc(dec_x/cc)\ndec_x = dec_x-(x*CC)\n\nreturn x\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#SNTP": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00\\x96\\x00\\x96\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 150, "newlines": 150, "modlines": 0, "user": "KCLAPP"}, "text": "/* REXX                                                             */\n/* ---------------------------------------------------------------- */\n/*                                                                  */\n/*  SNTP                                                            */\n/*                                                                  */\n/*  Kenneth W. clapp                                                */\n/*   6 October   1999                                               */\n/*                                                                  */\n/*  write to port                                                   */\n/*  accept response                                                 */\n/*                                                                  */\n/* ---------------------------------------------------------------- */\n\ntrace off\n\nparse arg hostname\n\nport = 123\n\nsignal on halt\nsignal on syntax\n\ninitialized = 0\n\n/* Initialize                                                         */\nstuff = socket('Initialize','SNRX')\nparse var stuff src rest\n\nif src=0 then initialized = 1\nelse call error 'E', 200, 'Unable to initialize SOCKET'\n\nsay hostname\n/*\nstuff = socket('GetHostByName', hostname)\nparse var stuff src ipaddress rest\n*/\n\nsay ipaddress\n\n/* Initialize for receiving lines sent by the server                  */\n/* stuff = Socket('Socket') */\n\nstuff = Socket('Socket', 2, 'DATAGRAM', 'UDP' )\nparse var stuff src s rest\nif src\u00ac=0 then call error 'E', 32, 'SOCKET(SOCKET) rc='src\n\n\nnum_test = translate(hostname,'           ','0123456789.')\n\nif num_test = ' '\nthen do\n     ipaddress = hostname\n     end\n/*\nelse do\n     hostname = translate(Socket('GetHostName'))\n     if src\u00ac=0 then call error 'E', 32, 'SOCKET(GETHOSTNAME) rc='src\n     end\n*/\n\nheader = '13000C00'X\nheader = '12000C00'X\nfilx  = left('', 4, '00'x)\nstamp = left('', 8, '00'x)\nstampx = 'BBA60B0D390CB877'x\n\nbuffer = header||filx||filx||filx||stamp||stamp||stamp||stampx\n\nsay length(buffer)\n\nsay buffer\n\nstuff = Socket('SendTo', s, buffer, ,'AF_INET' PORT IPADDRESS)\nparse var stuff src rest\n\nstuff = Socket('RecvFrom', s)\nparse var stuff src t_NET t_port t_ip t_len buffer\n\nsay buffer\n\nreturn\n\n/* rc = sleep(1) */\n\ndo forever\n\n/* Receive a line and display it                                    */\n/* parse value Socket('Read', s) with len newline */\n   stuff = Socket('Recv', s, 64000)\n\n   parse var stuff src len newline\n   say 'Read    stuff='stuff\n   newline = ebcdic(newline)\n\n   if (src \u00ac= 0) | (len <= 0)\n   then do\n        say 'src='src\n        say 'len='len\n        leave\n        end\n\n   say 'len    =>'len'<='\n   say 'newline=>'newline'<='\n/*\n   dataline = dataline||newline\n*/\n\n   leave\n\n   end\n\n/* Terminate and exit ----------------------------------------------- */\n\nstuff = socket('Terminate','RSWEB')\nparse var stuff src rest\n\nexit 0\n\n/* Syntax error routine --------------------------------------------- */\n\nsyntax:\n  call error 'E', rc, '==> REXX Error No.' 20000+rc\nreturn\n\n\n/* Halt processing routine ------------------------------------------ */\n\nhalt:\n  call error 'E', 4, '==> REXX Interrupted'\nreturn\n\n/* Error message and exit routine ----------------------------------- */\n\nerror:\n  type = arg(1)\n  retc = arg(2)\n  text = arg(3)\n  ecretc = right(retc,3,'0')\n  ectype = translate(type)\n  ecfull = 'RXSCLI' || ecretc || ectype\n  say '===> Error:' ecfull text\n  if type\u00ac='E' then return\n  if initialized\n     then do\n       parse value Socket('SocketSetStatus') with . status severreason\n       if status\u00ac='Connected'\n          then say 'The status of the socket set is' status severreason\n     end\n  call Socket 'Terminate'\nexit retc\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#STCK": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00z\\x00z\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 122, "newlines": 122, "modlines": 0, "user": "KCLAPP"}, "text": "/* rexx                                                             */\n/* Kenneth W. Clapp                                                 */\n/* 8 sept 98                                                        */\n/* STCK                                                             */\n/*  determine date and time                                         */\n/*    base on MVS/370 64 bit millisecond counter                    */\n/*                                                                  */\n/* 64 bit number                                                    */\n/* bit 51 = incremented every millisecond                           */\n/* bits 52 through 63 unused                                        */\n\nparse arg Hex_1 HEX_2 trash\n\nif length(hex_1) = 16\nthen do\n     hex_2 = right(hex_1,8)\n     hex_1 = left(hex_1,8)\n     end\n\nhex_1 = right('00000000'hex_1,8)\nhex_2 = right('00000000'hex_2,8)\n\nHEX_X = HEX_1||HEX_2\n\n/* say '>'HEX_X'<' */\n\nnumeric digits 24\n\nDEC_X = X2d(HEX_X)\n\n/* say '>'dec_x'<' */\n\ndec_x = trunc(dec_x/4096) /* throw away unnecessary bits */\n\nc_sec  = 1000000      /* one million counts per second */\nc_min  = c_sec  * 60\nc_hour = c_min  * 60\nc_day  = c_hour * 24\n\nS_year  = 1900\nS_day   = 001\ns_hour  = 00\ns_min   = 00\ns_sec   = 00\ns_milli = 000000\n\ndy.0 = 366\ndy.1 = 365\ndy.2 = 365\ndy.3 = 365\n\ns_days = c_dec(c_day)\ns_hour = c_dec(c_hour)\ns_min  = c_dec(c_min)\ns_sec  = c_dec(c_sec)\ns_milli = dec_x\n\nlx = 0\ndo i = 1900 to 2100\n   ld = dy.lx\n   if i = 1900 then ld = 365\n   if s_days < ld then leave\n   s_days = s_days - ld\n   s_year = s_year + 1\n   lx = lx + 1\n   if lx = 4 then lx = 0\n   end\n\ns_day  = s_days+1\nh_days = s_day\n\nm.1 = 31\nm.2 = 28\nm.3 = 31\nm.4 = 30\nm.5 = 31\nm.6 = 30\nm.7 = 31\nm.8 = 31\nm.9 = 30\nm.10 = 31\nm.11 = 30\n\nif ld = 366 then m.2 = 29\n\ndo i = 1 to 12\n   if h_days < m.i then leave\n   h_days = h_days - m.i\n   end\n\ns_hour  = right('0'S_HOUR,2)\ns_min   = right('0'S_min,2)\ns_SEC   = right('0'S_SEC,2)\ns_milli = right('000000's_milli,6)\n\ns_year = right('0000'S_Year,4)\ns_day  = right('000's_day,3)\n\ns_dD   = right('00'h_days,2)\ns_mm   = right('00'I,2)\n\nL_T = 'TIME='S_HOUR':'S_MIN':'S_SEC'.'S_MILLI\nL_J = 'DATE='S_YEAR'.'S_DAY\nL_D = 'DATE='S_YEAR'/'S_MM'/'s_DD\n\nsay ' '\nsay L_t L_J\nsay L_D\nsay ' '\nexit\n\n/* **************************************  */\n\nc_dec: procedure expose dec_x\n\nparse arg cc\n\nx = trunc(dec_x/cc)\ndec_x = dec_x-(x*CC)\n\nreturn x\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE501": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x01\\x01\\x02_\\x01\\x01\\x01_\\x17C\\x00\\x1f\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2001-01-15T17:43:00", "lines": 31, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 501 is from Ken Clapp and contains an SNTP time server.   *   FILE 501\n//*           This is for synchronizing your OS/390 system clock.   *   FILE 501\n//*           This pds contains a short documentation file called   *   FILE 501\n//*           $$README, and it also contains a Word 97 document     *   FILE 501\n//*           as member RFC2030, which can be downloaded to a pc.   *   FILE 501\n//*                                                                 *   FILE 501\n//*           There are also two other members which cannot be      *   FILE 501\n//*           executed on an MVS (OS/390) system, but which must    *   FILE 501\n//*           be downloaded to a pc.  These are:                    *   FILE 501\n//*                                                                 *   FILE 501\n//*           S2968KCA - a Power Point executable which is a        *   FILE 501\n//*                      demo of this package                       *   FILE 501\n//*                                                                 *   FILE 501\n//*           ETS1     - a WIN/NT executable                        *   FILE 501\n//*                                                                 *   FILE 501\n//*           Instructions for using these members are outlined     *   FILE 501\n//*           in the $$README member.                               *   FILE 501\n//*                                                                 *   FILE 501\n//*           Copyright                                             *   FILE 501\n//*           Kenneth W. Clapp                                      *   FILE 501\n//*           7 October 1999                                        *   FILE 501\n//*                                                                 *   FILE 501\n//*           Phoenix Home Life Mutual Insurance Company            *   FILE 501\n//*           100 Bright Meadow Boulevard                           *   FILE 501\n//*           Enfield, CT 06083                                     *   FILE 501\n//*           USA                                                   *   FILE 501\n//*                                                                 *   FILE 501\n//*           Ken_Clapp@phl.com                                     *   FILE 501\n//*                                                                 *   FILE 501\n//*           KenClapp@aol.com                                      *   FILE 501\n//*                                                                 *   FILE 501\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@SNTPRAT": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00\\x0f\\x00\\x0f\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "KCLAPP"}, "text": "//TECKWCSR JOB (DP00,ETEC,99,99),'SNTPTEST',CLASS=0,\n//             MSGCLASS=T,MSGLEVEL=(1,1),REGION=4M,\n//             NOTIFY=TECKWC\n//*\n//*JOBPARM SYSAFF=(MVS4)\n//*\n//SNTPTST EXEC PGM=SNTPRAT2\n//*\n//STEPLIB   DD DISP=SHR,DSN=TECKWC.GROUP00.LOADLIB,\n//             UNIT=SYSDA,VOL=SER=TSOW10\n//*\n//SYSPRINT  DD SYSOUT=*\n//*\n//SYSUDUMP  DD SYSOUT=*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@SNTPTST": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00\\x0c\\x00\\x0c\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "KCLAPP"}, "text": "//TECKWCST JOB (DP00,ETEC,99,99),'SNTPTEST',CLASS=0,\n//             MSGCLASS=T,MSGLEVEL=(1,1),REGION=4M,\n//             NOTIFY=TECKWC\n//*\n//SNTPTST EXEC PGM=SNTPTEST\n//*\n//STEPLIB   DD DISP=SHR,DSN=TECKWC.GROUP00.LOADLIB\n//*\n//SYSPRINT  DD SYSOUT=*\n//*\n//SYSUDUMP  DD SYSOUT=*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ETS1": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x01\\x01_\\x01\\x01\\x01_\\x17'\\x10m\\x10m\\x00\\x00\\xe6\\xc9\\xd5a\\xd5\\xe3@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-15T00:00:00", "modifydate": "2001-01-15T17:27:00", "lines": 4205, "newlines": 4205, "modlines": 0, "user": "WIN/NT"}, "mimetype": "application/x-dosexec", "datatype": "binary", "extension": ".x-dosexec"}, "IPCOPY": {"ttr": 2561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x01\\x05\\x01\\x05\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 261, "newlines": 261, "modlines": 0, "user": "KCLAPP"}, "text": "*\n*        COPY BOOK USED BY SNTP ( MAYBE OTHERS)\n*\nIPTBL    DS    0F\n         DC    CL4'  0.'\n         DC    CL4'  1.'\n         DC    CL4'  2.'\n         DC    CL4'  3.'\n         DC    CL4'  4.'\n         DC    CL4'  5.'\n         DC    CL4'  6.'\n         DC    CL4'  7.'\n         DC    CL4'  8.'\n         DC    CL4'  9.'\n         DC    CL4' 10.'\n         DC    CL4' 11.'\n         DC    CL4' 12.'\n         DC    CL4' 13.'\n         DC    CL4' 14.'\n         DC    CL4' 15.'\n         DC    CL4' 16.'\n         DC    CL4' 17.'\n         DC    CL4' 18.'\n         DC    CL4' 19.'\n         DC    CL4' 20.'\n         DC    CL4' 21.'\n         DC    CL4' 22.'\n         DC    CL4' 23.'\n         DC    CL4' 24.'\n         DC    CL4' 25.'\n         DC    CL4' 26.'\n         DC    CL4' 27.'\n         DC    CL4' 28.'\n         DC    CL4' 29.'\n         DC    CL4' 30.'\n         DC    CL4' 31.'\n         DC    CL4' 32.'\n         DC    CL4' 33.'\n         DC    CL4' 34.'\n         DC    CL4' 35.'\n         DC    CL4' 36.'\n         DC    CL4' 37.'\n         DC    CL4' 38.'\n         DC    CL4' 39.'\n         DC    CL4' 40.'\n         DC    CL4' 41.'\n         DC    CL4' 42.'\n         DC    CL4' 43.'\n         DC    CL4' 44.'\n         DC    CL4' 45.'\n         DC    CL4' 46.'\n         DC    CL4' 47.'\n         DC    CL4' 48.'\n         DC    CL4' 49.'\n         DC    CL4' 50.'\n         DC    CL4' 51.'\n         DC    CL4' 52.'\n         DC    CL4' 53.'\n         DC    CL4' 54.'\n         DC    CL4' 55.'\n         DC    CL4' 56.'\n         DC    CL4' 57.'\n         DC    CL4' 58.'\n         DC    CL4' 59.'\n         DC    CL4' 60.'\n         DC    CL4' 61.'\n         DC    CL4' 62.'\n         DC    CL4' 63.'\n         DC    CL4' 64.'\n         DC    CL4' 65.'\n         DC    CL4' 66.'\n         DC    CL4' 67.'\n         DC    CL4' 68.'\n         DC    CL4' 69.'\n         DC    CL4' 70.'\n         DC    CL4' 71.'\n         DC    CL4' 72.'\n         DC    CL4' 73.'\n         DC    CL4' 74.'\n         DC    CL4' 75.'\n         DC    CL4' 76.'\n         DC    CL4' 77.'\n         DC    CL4' 78.'\n         DC    CL4' 79.'\n         DC    CL4' 80.'\n         DC    CL4' 81.'\n         DC    CL4' 82.'\n         DC    CL4' 83.'\n         DC    CL4' 84.'\n         DC    CL4' 85.'\n         DC    CL4' 86.'\n         DC    CL4' 87.'\n         DC    CL4' 88.'\n         DC    CL4' 89.'\n         DC    CL4' 90.'\n         DC    CL4' 91.'\n         DC    CL4' 92.'\n         DC    CL4' 93.'\n         DC    CL4' 94.'\n         DC    CL4' 95.'\n         DC    CL4' 96.'\n         DC    CL4' 97.'\n         DC    CL4' 98.'\n         DC    CL4' 99.'\n         DC    CL4'100.'\n         DC    CL4'101.'\n         DC    CL4'102.'\n         DC    CL4'103.'\n         DC    CL4'104.'\n         DC    CL4'105.'\n         DC    CL4'106.'\n         DC    CL4'107.'\n         DC    CL4'108.'\n         DC    CL4'109.'\n         DC    CL4'110.'\n         DC    CL4'111.'\n         DC    CL4'112.'\n         DC    CL4'113.'\n         DC    CL4'114.'\n         DC    CL4'115.'\n         DC    CL4'116.'\n         DC    CL4'117.'\n         DC    CL4'118.'\n         DC    CL4'119.'\n         DC    CL4'120.'\n         DC    CL4'121.'\n         DC    CL4'122.'\n         DC    CL4'123.'\n         DC    CL4'124.'\n         DC    CL4'125.'\n         DC    CL4'126.'\n         DC    CL4'127.'\n         DC    CL4'128.'\n         DC    CL4'129.'\n         DC    CL4'130.'\n         DC    CL4'131.'\n         DC    CL4'132.'\n         DC    CL4'133.'\n         DC    CL4'134.'\n         DC    CL4'135.'\n         DC    CL4'136.'\n         DC    CL4'137.'\n         DC    CL4'138.'\n         DC    CL4'139.'\n         DC    CL4'140.'\n         DC    CL4'141.'\n         DC    CL4'142.'\n         DC    CL4'143.'\n         DC    CL4'144.'\n         DC    CL4'145.'\n         DC    CL4'146.'\n         DC    CL4'147.'\n         DC    CL4'148.'\n         DC    CL4'149.'\n         DC    CL4'150.'\n         DC    CL4'151.'\n         DC    CL4'152.'\n         DC    CL4'153.'\n         DC    CL4'154.'\n         DC    CL4'155.'\n         DC    CL4'156.'\n         DC    CL4'157.'\n         DC    CL4'158.'\n         DC    CL4'159.'\n         DC    CL4'160.'\n         DC    CL4'161.'\n         DC    CL4'162.'\n         DC    CL4'163.'\n         DC    CL4'164.'\n         DC    CL4'165.'\n         DC    CL4'166.'\n         DC    CL4'167.'\n         DC    CL4'168.'\n         DC    CL4'169.'\n         DC    CL4'170.'\n         DC    CL4'171.'\n         DC    CL4'172.'\n         DC    CL4'173.'\n         DC    CL4'174.'\n         DC    CL4'175.'\n         DC    CL4'176.'\n         DC    CL4'177.'\n         DC    CL4'178.'\n         DC    CL4'179.'\n         DC    CL4'180.'\n         DC    CL4'181.'\n         DC    CL4'182.'\n         DC    CL4'183.'\n         DC    CL4'184.'\n         DC    CL4'185.'\n         DC    CL4'186.'\n         DC    CL4'187.'\n         DC    CL4'188.'\n         DC    CL4'189.'\n         DC    CL4'190.'\n         DC    CL4'191.'\n         DC    CL4'192.'\n         DC    CL4'193.'\n         DC    CL4'194.'\n         DC    CL4'195.'\n         DC    CL4'196.'\n         DC    CL4'197.'\n         DC    CL4'198.'\n         DC    CL4'199.'\n         DC    CL4'200.'\n         DC    CL4'201.'\n         DC    CL4'202.'\n         DC    CL4'203.'\n         DC    CL4'204.'\n         DC    CL4'205.'\n         DC    CL4'206.'\n         DC    CL4'207.'\n         DC    CL4'208.'\n         DC    CL4'209.'\n         DC    CL4'210.'\n         DC    CL4'211.'\n         DC    CL4'212.'\n         DC    CL4'213.'\n         DC    CL4'214.'\n         DC    CL4'215.'\n         DC    CL4'216.'\n         DC    CL4'217.'\n         DC    CL4'218.'\n         DC    CL4'219.'\n         DC    CL4'220.'\n         DC    CL4'221.'\n         DC    CL4'222.'\n         DC    CL4'223.'\n         DC    CL4'224.'\n         DC    CL4'225.'\n         DC    CL4'226.'\n         DC    CL4'227.'\n         DC    CL4'228.'\n         DC    CL4'229.'\n         DC    CL4'230.'\n         DC    CL4'231.'\n         DC    CL4'232.'\n         DC    CL4'233.'\n         DC    CL4'234.'\n         DC    CL4'235.'\n         DC    CL4'236.'\n         DC    CL4'237.'\n         DC    CL4'238.'\n         DC    CL4'239.'\n         DC    CL4'240.'\n         DC    CL4'241.'\n         DC    CL4'242.'\n         DC    CL4'243.'\n         DC    CL4'244.'\n         DC    CL4'245.'\n         DC    CL4'246.'\n         DC    CL4'247.'\n         DC    CL4'248.'\n         DC    CL4'249.'\n         DC    CL4'250.'\n         DC    CL4'251.'\n         DC    CL4'252.'\n         DC    CL4'253.'\n         DC    CL4'254.'\n         DC    CL4'255.'\n*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "README": {"ttr": 2566, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10$\\x01?\\x010\\x00\\x00\\xe3\\xc5\\xc3\\xd2\\xe6\\xc3@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:24:00", "lines": 319, "newlines": 304, "modlines": 0, "user": "TECKWC"}, "text": "SNTP for OS/390\n2001-01-16\n\n***********************************************************************\n*                                                                     *\n*             SNTP - Simple Network Time Protocol                     *\n*                        Server                                       *\n*                                                                     *\n*   Copyright                                                         *\n*   Kenneth W. Clapp                                                  *\n*   7 October 1999                                                    *\n*                                                                     *\n*   Phoenix Home Life Mutual Insurance Company                        *\n*   100 Bright Meadow Boulevard                                       *\n*   Enfield, CT 06083                                                 *\n*   USA                                                               *\n*                                                                     *\n*   Ken_Clapp@phl.com                                                 *\n*                                                                     *\n*   KenClapp@aol.com                                                  *\n*                                                                     *\n*   http://members.aol.com/kenclapp/sntp.htm                          *\n*                                                                     *\n***********************************************************************\n\nThis is the CBT version of the installation instructions\n\n\nREADME     - basic instructions, you're looking at it.\n\nSNTP       - THE SNTP SERVER SOURCE\nIPCOPY     - COPYBOOK USED BY SERVER\nX2CTBL     - COPYBOOK USED BY SERVER\n\n$SNTP      - SAMPLE ASSEMBLY JCL\n@SNTP      - PROC USED TO RUN SERVER (RENAME TO SNTP)\n\nThe above includes everything you need to build the SNTP server\n\n-----------------------------------------------------------------------\n\nSome Rexx utilities:\n\n#NTP       - Convert NTP  timestamps to date/time\n#STCK      - Convert STCK timestamps to date/time\n#SNTP      - Exercise SNTP server\n\n-----------------------------------------------------------------------\n\nSome programs (fragments of the SNTP server) I used to test\nperformance and correctness of the timestamp generation.\n\nSNTPRATE   - Generate 10,000,000 timestamp, check start/done times.\nSNTPTEST   - Display STCK and SNTP timestamp for verification\n\n$SNTPRAT   - ASSEMBLE SNTPRATE\n$SNTPTST   - ASSEMBLE SNTPTEST\n\n@SNTPRAT   - RUN JCL for SNTPRATE\n@SNTPTST   - RUN JCL for SNTPTEST\n\n-----------------------------------------------------------------------\n\nThere are some pieces that do not fit well within the CBT\ndistribution format:\n\n- The complete RFC2030 (SNTP specifications) in Word format.\n\n- The Powerpoint presentation I gave on this a Share in Boston\n  in August 2000.\n\nAnd last but certainly not least....\n\n- An External Time Source emulator.  This can be used to synchronize\n  the 9037 to some other NTP/SNTP server.\n\n\nYou can find these at my web site:\n\n\n         http://members.aol.com/kenclapp/sntp.htm\n\n\n**********************************************************************\n\nInstallation:\n\n1) Copy @SNTP to a proclib, rename it to SNTP.\n\n2) Update the $SNTP member to point to your source and load libraries\n\n3) Submit the $SNTP job,\n   - note it needs to assemble to an authorized library\n     because it makes itself non-swappable\n\n4) Verify your sysplex timer:\n   - it must be set to UCT (GMT) time with your local offset\n   - be sure it has the correct time and syncs to a \"good\"\n     time source regularly. There's no point to having the\n     wrong time.\n   - warning! in case you don't know, NEVER \"set\" the 9037,\n     always \"adjust\" it. Max adjustment is +/- 5.00 seconds per day.\n\n5) Start the server (S SNTP)\n   - be sure both TCPIP and SNTP have a high enough dispatching\n     priority to provide a consistent response\n\n***********************************************************************\n\n  Operation:\n\n    1) Start it up, watch it go. Well actually, it just sits there\n       waiting for a client request.\n\n    2) I'd suggest making it one of the TCPIP \"autostart\"ed tasks.\n\n    3) It stops automatically when TCPIP is shutdown.\n\n    4) Simply cancel it if you want to bring it down sooner.\n\n***********************************************************************\n*                                                                     *\n*   This code has been running since October 1999:                    *\n*   - Testing    OS/390 V2.10                                         *\n*   - Currently  OS/390 V2.9                                          *\n*   - Previously OS/390 V2.8                                          *\n*   - Initially  OS/390 V2.5                                          *\n*                                                                     *\n*   It will not work on any OS/390 prior to the availability of       *\n*   the TCP/IP assembler socket interface (OS/390 v2.5).              *\n*                                                                     *\n***********************************************************************\n\nFAQ\n\n--------------------------------------------------------------------------------\n\n1) Why SNTP and not NTP?\n\nSNTP is quite literally \"Simple Network Time Protocol\".  NTP servers are\nexpected to be able to be able to negotiate an average time between\nthemselves.  OS/390 cannot alter the sysplex timer, so this is not\nreally an option.\n\nIt is stated in the RFC2030 document, that\n\n\"to a NTP or SNTP client, NTP and SNTP servers are undistinguishable\".\n\n--------------------------------------------------------------------------------\n\n2) How accurate is the server?\n\nAt its best, a 9037-1 drifts about .087 seconds per day.  With a daily\ncall to a time service you can bring that down to within .010 seconds of\nthe correct time.  Our sysplex timer calls out every 12 hours.\nTypically we see it making adjustments of .005 to .007 seconds.\n\nClients should be able to maintain their clocks to\nwithin .005-.010 seconds of the OS/390 server.\n\n--------------------------------------------------------------------------------\n\n3) What if I need to be more accurate?\n\nWith an external time source you can reach the following levels of accuracy:\n\n9037-1 - .005\n9037-2 - .001\n\n--------------------------------------------------------------------------------\n\n4) What if...\n      we're too cheap to buy an external time source\n   or we need to synchronize OS/390 to some other NTP/SNTP server ?\n\nYou should try ets1.exe, it requires a PC (166+) running win/nt and\na NTP/SNTP client. It will use the time on the PC and emulates your\nchoice of time source protocols. The PC this runs on must be\ndedicated to this purpose though.\n\nI personally favor the Netclock/2 protocol.\n\nI hope I am NOT going to be sued by Austron, Netclock or Truetime.  My\nemulator cannot come close to the accuracy their hardware clocks\nprovide, so it's no real threat.  My overall accuracy is around\n.007 seconds which is quite reasonable for our purposes.\n\n--------------------------------------------------------------------------------\n\n5) My brand x client cannot synchronize to the OS/390 server!\n\nCheck the SNTP log on sysprint.  You should be able to find a line that\nsays \"received nnn.nnn.nnn.nnn \"followed by lots of hex stuff.\nThe nnn.nnn.nnn.nnn is the IP address of the client.  If you can't find\nyours, the client isn't configured properly.\n\nIf it is there, but still does sync, send my a copy of the log (just the couple\nof lines in question) showing the received and sendto packets for the client.\n\n--------------------------------------------------------------------------------\n\n6) So what's the rest of the stuff in the directories?\n\n\\sntp\n\nets1.exe - used to emulate an external time source. Facilitates synchronizing\n           a sysplex timer to a NTP/SNTP server.  Requires a dedicated PC\n           running win/nt on a pentium 166 or better with a NT NTP/SNTP time cli\n           Note that the SNTP server could be on some other OS/390 system.\n           This would allow for sychronizing multible sysplexes to a common cloc\n\n\\sntp\\rexx\n\nSNTP.rex - uses the tcp/ip rexx socket interface and can be used to\n           test the OS/390 SNTP server\n\nusage: sntp server.wherever.com\n\ncheck the log produced by SNTP you should see some activity.  I put this in\na batch tso job and run it occasionally.\n\n\nNTP.rex - if you actually want to know what time an NTP time\n          stamp really is, use this.\n\nsyntax:\n\nNTP bd7468b2 6b7e90fc\n\nresults:\n\nTIME=11:00:02.419900 DATE=2000.265\nDATE=2000/09/21\n\n\nSTCK.rex - use to convert IBM timestamps to standard date time\n\nsyntax:\n\nstck b36d3370 7be8cf00\n\nresults:\n\nTIME=15:05:33.070988 DATE=2000.010\nDATE=2000/01/10\n\n\n\\sntp\\test\n\nSNTPRATE.bal - used to determine how fast timestamps can be created\n$SNTPRAT.jcl - assembly jcl\nSNTPRATE.jcl - execution jcl\n\nSNTPTEST.bal - used to compare STCK and SNTP timestamps\n$SNTPTST.jcl - assembly jcl\nSNTPTEST.jcl - execution jcl\n\n--------------------------------------------------------------------------------\n\n7) Wouldn't it be better if... Why didn't you... How about...\n    - you had an operator interface\n    - you used CVD instead of those \"large\" tables\n    - used instruction xxx instead of yyy\n\n\nMy design criteria were:\n- keep it simple\n- keep it fast\n- get it running while OS/390 was still a candidate for corporate time server\n\nI think I successfully met all those goals.\n\nI couldn't think of anything an operator would need to do.\n\nThe tables allow me to do very quick indexed lookups.\n\nThe server is single threaded so it was important to handle each request\nas quickly as possible so its ready to receive the next one.  I spent\na lot of time testing with SNTPRATE and am able to built timestamps at a rate\nof about 2,000,000 per second on a 9672/R35.  Given that it takes two stamps\nper request and there is other overhead, we're probably able to service\nthousands, if not hundred of thousands of client request per second.  I\nkeep meaning to write something to test actual throughput.\n\nIf you've got a better idea send me a copy and I'll see how it works.\n\nNote:\n\nI am working on version 2. It will have an operator interface, be\nmultithreaded and may even have some NTP features.\n\nI am also looking into supporting leap seconds.\n\n--------------------------------------------------------------------------------\n\n8) We like the OS/390 SNTP server so much, we are going to make OS/390 time\n   available to everyone over the internet!\n\nUh... please don't do that.\n\nThe OS/390 SNTP server does not provide time accurate enough to be considered\na \"real\" timer server.  This is because of the following two limitations:\n\n - the accuracy of the sysplex timer itself.  Its pretty good, but it just\n   doesn't compare to an atomic clock.\n\n - OS/390 has more to do then just provide the time. Consequently\n   there is some variability to its response. (Better SNTP clients\n   can actually smooth this out though.)\n\nWhile this is bad if you are trying to navigate the ocean or study astronomy,\nits insignificant from a corporate perspective.\n\nYou should easily be able to maintain all of your clients to within .008 seconds\nof OS/390 time. The clocks on PCs can't be kept much closer.\n\n\n********************************************************************************\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RFC2030": {"ttr": 2817, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01_\\x01\\x01\\x01_\\x17)\\x03\\x8d\\x03\\x8d\\x00\\x00\\xe6\\xd6\\xd9\\xc4\\xf9\\xf7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-15T00:00:00", "modifydate": "2001-01-15T17:29:00", "lines": 909, "newlines": 909, "modlines": 0, "user": "WORD97"}, "mimetype": "application/msword", "datatype": "binary", "extension": ".doc"}, "SNTP": {"ttr": 3078, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x03E\\x03E\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 837, "newlines": 837, "modlines": 0, "user": "KCLAPP"}, "text": "SNTP     CSECT\nSNTP     AMODE ANY\nSNTP     RMODE 24\n*\n*        PRINT NOGEN\n*\n***********************************************************************\n*                                                                     *\n*   This code is freely distributed but must retain following banner  *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*   MODULE NAME:  SNTP - Simple Network Time Protocol                 *\n*                        Server                                       *\n*   Copyright                                                         *\n*   Kenneth W. Clapp                                                  *\n*   7 October 1999                                                    *\n*                                                                     *\n*   Phoenix Home Life Mutual Insurance Company                        *\n*   100 Bright Meadow Boulevard                                       *\n*   Enfield, CT 06083                                                 *\n*   USA                                                               *\n*                                                                     *\n*   Ken_Clapp@phl.com                                                 *\n*                                                                     *\n*   KenClapp@aol.com                                                  *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*   This code has been running since October 1999:                    *\n*   - Currently  on OS/390 V2.8                                       *\n*   - Previously on OS/390 V2.5                                       *\n*                                                                     *\n*   It will not work on any OS/390 prior to the availability of       *\n*   the TCP/IP assembler socket interface (OS/390 v2.5).              *\n*                                                                     *\n*   Neither Ken Clapp or the Phoenix Home Life can be held            *\n*   responsible for any loss or damages caused by the use or          *\n*   misuse of this code.                                              *\n*                                                                     *\n*   Although there is neither any formal support or guarantee         *\n*   provided with this code,  I will try to respond to email          *\n*   questions as time permits.                                        *\n*                                                                     *\n*   If you would like to be notified of updates, send me your name    *\n*   and email address.                                                *\n*                                                                     *\n*   If you have made improvements or have suggestions, let me know.   *\n*   I will see if I can incorporate them.                             *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*   If you find this program to be of value,                          *\n*   send your business card and one of whatever your                  *\n*   lowest denomination paper currency is to the following address.   *\n*                                                                     *\n*   International users, coin assortments appreciated,                *\n*   but not required.                                                 *\n*                                                                     *\n*                                                                     *\n*   Save the Mainframe                                                *\n*   ------------------                                                *\n*   C/O Kenneth W. Clapp - 2E311                                      *\n*   Phoenix Home Life Mutual Insurance Company                        *\n*   100 Bright Meadow Boulevard                                       *\n*   Enfield, CT 06083                                                 *\n*   USA                                                               *\n*                                                                     *\n*                                                                     *\n*   This is for whimsy only, as I am curious to see who is            *\n*   running my code and where it has traveled to.                     *\n*                                                                     *\n*   No payment is required.  No contract is implied.                  *\n*       - This code is FREE, FREE, FREE! -                            *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*   LANGUAGE:  Assembler                                              *\n*                                                                     *\n*   ATTRIBUTES: NON-REUSABLE, AUTHORIZED                              *\n*                                                                     *\n*   REGISTER USAGE:                                                   *\n*        R1  =                                                        *\n*        R2  =                                                        *\n*        R3  =                                                        *\n*        R4  = work     - even seconds                                *\n*        R5  = work     - fractional seconds                          *\n*        R6  = work                                                   *\n*        R7  = work                                                   *\n*        R8  =                                                        *\n*        R9  =                                                        *\n*        R10 = RETURN REG                                             *\n*        R11 =                                                        *\n*        R12 =               BASE REG 2                               *\n*        R13 = SAVE AREA   & BASE REG 1                               *\n*        R14 =                                                        *\n*        R15 =                                                        *\n*                                                                     *\n*   INPUT:  NONE                                                      *\n*   OUTPUT: SYSPRINT activity log                                     *\n*                                                                     *\n*   Copybooks: IPCOPY          IP TRANSLATION TABLE                   *\n*                                                                     *\n*              X2CTBL          HEX TO CHARACTER TRANSLATION TABLE     *\n*                                                                     *\n***********************************************************************\n*\n*  Caveats:\n*\n*    1) Your sysplex timer must be set to UCT (GMT) time,\n*       local time is determined from the timezone offset.\n*\n*    2) Be sure the dispatching priority of both TCP/IP and the SNTP\n*       server are high enough to provide a consistent response.\n*\n***********************************************************************\n*\n*  Operation:\n*\n*    1) Start it up, watch it go. Well actually, it just sits there\n*       waiting for a client request.\n*\n*    2) I'd suggest making it one of TCPIP \"autostart\"ed tasks.\n*\n*    3) It stops automatically when TCPIP is shutdown.\n*\n*    4) Simply cancel it if you want to bring it down sooner.\n*\n***********************************************************************\n*\n* Fixes:\n*\n* 2000-09-19 KWC - error in returned packet\n*         1) code had only moved stamp4 to stamp2 if stamp2 was zero\n*            --> this should always happen ! <--\n*         2) changed mode on returned packet from 4 to 2\n*         3) added printout of received packet\n*\n* 2000-09-20 KWC -\n*         1) changed mode on returned packet from 2 back to 4\n*            - some client misinterpret\n*         2) added code for older clients. test transmit time\n*            if it is zero, do -NOT- move it to originate time.\n*\n***********************************************************************\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*\n* ------ START OF EXECUTABLE CODE -----------------------------------\n*\n         USING BEGIN,R15               TEMP ADDRESSABILITY\n*\nBEGIN    B     SAVE                    JUMP OVER CONSTANTS\n         DC    F'0'                    ADDR OF PREV SAVE AREA\n         DC    F'0'                    ADDR OF NEXT SAVE AREA\n         DC    15F'0'                  REGS 14 - 12\n         DC    18F'0'                  SECOND LEVEL SAVE AREA\n*\n* -------------------------------------------------------------------\n*\nVERSION  DC    CL40'SNTP V1.9 : ASSEMBLED &SYSDATE &SYSTIME'\n         DC    CL40'Copyright: Kenneth W. Clapp 1999'\n         DC    CL40'Phoenix Home Life Insurance'\n         DC    CL40'100 Bright Meadow Boulevard'\n         DC    CL40'Enfield CT, 06083  USA     '\n         DC    CL40'Ken_Clapp@phl.com - KenClapp@aol.com'\n*\n* -------------------------------------------------------------------\n*\nSAVE     DS    0H\n         SAVE (14,12)\n         ST   15,8(,13)                ADDRESS OF THIS SAVE AREA\n         ST   13,4(,15)                ADDRESS OF THIS LAST AREA\n         LR   13,15                    ESTABLISH ADDRESSABILITY\n         LR   12,13\n         LA   12,2048(,R12)            SETUP SECOND BASE REGISTER\n         LA   12,2048(,R12)            SETUP SECOND BASE REGISTER\n*\n         DROP 15\n         USING BEGIN,R13,R12           READY TO ROCK AND ROLL\n*\n* ------ OPEN LOG FILE ----------------------------------------------\n*\n         OPEN  (SYSPRINT,(OUTPUT)),MODE=31\n*\n* ------ MOVE TEXT INTO MESSAGE AREA --------------------------------\n*\n         MVC   PRINTLIN+00(8),=CL8'STARTING'\n         MVC   PRINTLIN+10(40),VERSION\n         BAL   R10,LOG\n*\n* ------ MAKE OURSELF NON-SWAPPABLE ---------------------------------\n*\n         MODESET MODE=SUP,KEY=ZERO   GET INTO SUPERVISOR STATE\n         XR    R1,R1                 NO ECB POSTING\n         SYSEVENT TRANSWAP           MAKE OURSELF NON-SWAPPABLE\n         MODESET MODE=PROB,KEY=NZERO BACK TO PROBLEM STATE\n*\n* ------ MOVE TEXT INTO MESSAGE AREA --------------------------------\n*\n         MVC   PRINTLIN+00(8),=CL8'DELAY   '\n         MVC   PRINTLIN+10(32),=CL32'TO ENSURE TCP/IP IS RUNNING.'\n         BAL   R10,LOG\n*\n* ------ WAIT to ENSURE TCPIP STARTUP -------------------------------\n*\n         STIMER WAIT,BINTVL=WAITTIME   WAIT A MOMENT\n*\n* ------ Issue INITAPI to connect to interface ----------------------\n*\n         MVC   TYPE,MINITAPI           MOVE 'INITAPI' TO MESSAGE\n*\n         EZASMI TYPE=INITAPI,     Issue INITAPI Macro                  X\n               SUBTASK=SUBTASK,   SPECIFY SUBTASK IDENTIFIER           X\n               MAXSOC=MAXSOC,     SPECIFY MAXIMUM NUMBER OF SOCKETS    X\n               MAXSNO=MAXSNO,     (HIGHEST SOCKET NUMBER ASSIGNED)     X\n               ERRNO=ERRNO,       (Specify ERRNO field)                X\n               RETCODE=RETCODE,   (Specify RETCODE field)              X\n               APITYPE=APITYPE,   (SPECIFY APITYPE FIELD)              X\n               ERROR=ERROR       ABEND IF ERROR ON MACRO\n*\n         BAL   R10,RCCHECK            --> DID IT WORK?\n*\n* ------ ISSUE GETHOSTID CALL ---------------------------------------\n*\n         MVC   TYPE,=CL8'GETHOSTI'     'GETHOSTI' TO MESSAGE\n*\n         EZASMI TYPE=GETHOSTID,                                        X\n               ERRNO=ERRNO,       (Specify ERRNO field)                X\n               RETCODE=RETCODE,   (Specify RETCODE field)              X\n               REQAREA=REQAREA    IN CASE WE ARE DOING EXITS OR ECBS\n*\n         BAL   R10,RCCHECK        CHECK FOR SUCCESSFUL CALL\n*\n         ST    R8,ADDR            SAVE OUR ID\n*\n* -----  Issue SOCKET Macro to obtain a socket descriptor -----------\n*\n         MVC   TYPE,MSOCKET       MOVE 'SOCKET' TO MESSAGE\n*\n         EZASMI TYPE=SOCKET,      Issue SOCKET Macro                   X\n               AF='INET',         INET or IUCV                         X\n               SOCTYPE='DATAGRAM',  STREAM(TCP) DATAGRAM(UDP) OR RAW   X\n               ERRNO=ERRNO,       (Specify ERRNO field)                X\n               RETCODE=RETCODE,   (Specify RETCODE field)              X\n               REQAREA=REQAREA,   IN CASE WE ARE DOING EXITS OR ECBS   X\n               ERROR=ERROR        Abend if Macro error\n*\n         BAL   R10,RCCHECK        CHECK FOR SUCCESSFUL CALL\n*\n         STH   R8,S               SAVE RETCODE ( =SOCKET DESCRIPTOR )\n*\n* ------ Issue BIND socket ------------------------------------------\n*\n         MVC   TYPE,MBIND         MOVE 'BIND' TO MESSAGE\n*\n         MVC   PORT(2),PORTS      Load STREAM port #\n         MVC   ADDRESS(4),=F'0'   ACCEPT ANY CLIENT IP ADDRESS\n*\n         EZASMI TYPE=BIND,        Issue Macro                          X\n               S=S,               STREAM                               X\n               NAME=NAME,         (SOCKET NAME STRUCTURE)              X\n               ERRNO=ERRNO,       (Specify ERRNO field)                X\n               RETCODE=RETCODE,   (Specify RETCODE field)              X\n               REQAREA=REQAREA,   IN CASE WE ARE DOING EXITS OR ECBS   X\n               ERROR=ERROR        Abend if Macro error\n*\n         BAL   R10,RCCHECK        CHECK FOR SUCCESSFUL CALL\n*\n* -------------------------------------------------------------------\n*\n*        Issue READ - Read data and store in buffer\n*\n* -------------------------------------------------------------------\n*\nLOOP     EQU   *\n*\n         MVC   ADDRESS(4),=F'0'   ACCEPT ANY CLIENT IP ADDRESS\n         MVC   ADDRESSR(4),=F'0'  CLEAR LAST IP ADDRESS\n         MVC   NBYTE,=AL4(NBYTE-PACKET)    SIZE OF BUFFER\n*\n         EZASMI TYPE=RECVFROM,    Issue Macro                          X\n               S=S,               SOCKET                               X\n               NBYTE=NBYTE,       SIZE OF BUFFER                       X\n               BUF=PACKET,        (BUFFER)                             X\n               NAME=NAMER,        RECV NAME STRUCTURE                  X\n               ERRNO=ERRNO,       (Specify ERRNO field)                X\n               RETCODE=RETCODE,   (Specify RETCODE field)              X\n               REQAREA=REQAREA,   IN CASE WE ARE DOING EXITS OR ECBS   X\n               ERROR=ERROR        Abend if Macro error\n*\n         BAL   R10,GETTIME        RECEIVE TIME\n*\n         CLC   RETCODE,=F'-1'     ANY PROBLEMS ?\n         BE    TERM               YES...JUST TERMINATE\n*\n         MVC   PACKET1,PACKET     hold received packet    2000-09-19\n*\n         STM   R4,R5,STAMP3       STORE READ TIME STAMP\n*\n* -------------------------------------------------------------------\n*\n*        Process Packet\n*\n* -------------------------------------------------------------------\n*\n         CLC   ADDRESSR,=F'0'     IS FROM ADDRESS 0.0.0.0 ?\n         BE    ERROR              YES... ERROR !\n*\n         MVC   HEADWORK,HEADER    GET FIRST BYTE OF PACKET\n         NI    HEADWORK,X'07'     ONLY CHECK MODE BITS\n         CLI   HEADWORK,X'03'     IS THIS A CLIENT REQUEST ?\n         BNE   IGNORE             NO...IGNORE IT\n*\n*                       LL        LEAP FLAG -------------------------\n*                       LL          00  = NO LEAP SECOND\n*                       LL          01  = LAST MINUTE 61 SECS\n*                       LL          10  = LAST MINUTE 59 SECS\n*                       LL          11  = CLOCK NOT SYNCED!\n*                         VVV     VERSION ---------------------------\n*                         VVV       011 = 3\n*                         VVV       100 = 4\n*                            MOD  MODE ------------------------------\n*                            MOD    011 = CLIENT\n*                            MOD    100 = SERVER\n*\n         NI    HEADER,X'38'       TURN OFF MODE BITS AND LEAP FLAG\n         OI    HEADER,X'04'       SET MODE to 4 (SERVER) 2000-09-20\n*\n***      CLI   HEADER,X'24'       VERSION 4\n***      BE    V4\n***      CLI   HEADER,X'1C'       VERSION 3\n***      BE    V3\n***      CLI   HEADER,X'14'       VERSION 2\n***      BE    V2\n***      CLI   HEADER,X'0C'       VERSION 1\n***      BE    V1\n*\nV1       EQU   *\n***      B     VX\n*\nV2       EQU   *\n***      B     VX\n*\nV3       EQU   *\n         MVC   STRATUM,=AL1(1)        PRIMARY SERVER\n         MVC   REFID,=XL4'41435453'   REFERENCE ID - \"ACTS\" (ASCII)\n         MVC   ROOTDLY,=XL4'00000000'\n         MVC   ROOTDISP,=XL4'00000000'\nVX       EQU   *\n         MVC   PRECISN,=AL1(-24)  PRECISION (FRACTIONAL HEX BITS)\n*\n         MVC   NBYTE,=AL4(48)     BUFFER LENGTH\n*\n***                               REMOVED 2000-09-19\n***      CLC   STAMP2,=XL8'0000000000000000' IS ORIGINATE TIME SET?\n***      BNE   STAMP2OK           YES...\n*\n***                               ADDED   2000-09-20\n         CLC   STAMP4,=XL8'0000000000000000' IS TRANSMIT TIME SET?\n         BE    STAMP2OK           NO...\n*\n         MVC   STAMP2,STAMP4      MOVE INCOMING TRANSMIT TIME TO ORIG\nSTAMP2OK EQU   *\n*\n         BAL   R10,GETTIME        TRANSMIT TIME\n*\n         STM   R4,R5,STAMP4       STORE TRANSMIT TIME\n*\n         XR    R5,R5              ON AN EVEN SECOND\n         STM   R4,R5,STAMP1       LAST SYNC WITH MASTER CLOCK\n*\n* -------------------------------------------------------------------\n*\n*        Issue WRITE - Write data from buffer\n*\n* -------------------------------------------------------------------\n*\n         EZASMI TYPE=SENDTO,      Issue Macro                          X\n               S=S,               SOCKET                               X\n               NBYTE=NBYTE,       SIZE OF BUFFER                       X\n               BUF=PACKET,        (BUFFER)                             X\n               NAME=NAMER,        RECV NAME STRUCTURE                  X\n               ERRNO=ERRNO,       (Specify ERRNO field)                X\n               RETCODE=RETCODE,   (Specify RETCODE field)              X\n               REQAREA=REQAREA,   IN CASE WE ARE DOING EXITS OR ECBS   X\n               ERROR=ERROR        Abend if Macro error\n*\n         CLC   RETCODE,=F'-1'     ANY PROBLEMS ?\n         BE    ERROR              YES...\n*\n         BAL   R10,IPTRANS        TRANSLATE IP ADDRESS\n*\n         MVC   PACKET2,PACKET     hold sent    packet  2000-09-19\n         MVC   PACKET,PACKET1     get received packet  2000-09-19\n*\n         MVC   PRINTLIN+00(08),=CL8'RECEIVED'\n         MVC   PRINTLIN+09(15),IPADDR\n         BAL   R10,DUMPREC        CHARACTER FORMAT HEX RECORD\n         BAL   R10,LOG            PRINT TO LOG\n*\n         MVC   PACKET,PACKET2     get sent packet       2000-09-19\n         MVC   PRINTLIN+00(08),=CL8'SENDTO  '\n*\nIGNOREP  EQU   *\n         MVC   PRINTLIN+09(15),IPADDR\n         BAL   R10,DUMPREC        CHARACTER FORMAT HEX RECORD\n*\n         BAL   R10,LOG            PRINT TO LOG\n*\n         B     LOOP\n*\n*--------------------------------------------------------------------\n*\n*        Ignore, but write to log any invalid requests\n*\n*--------------------------------------------------------------------\n*\nIGNORE   EQU   *\n         MVC   NBYTE,=AL4(48)     BUFFER LENGTH\n*\n         MVC   PRINTLIN+00(08),=CL8'IGNORED '\n*\n         BAL   R10,IPTRANS        TRANSLATE IP ADDRESS\n*\n         B     IGNOREP\n*\n*--------------------------------------------------------------------\n*        Return to Caller\n*--------------------------------------------------------------------\n*\nTERM     EQU   *\n         MVC   TYPE,MRECV         MOVE 'RECVFROM' TO MESSAGE\n         BAL   R10,RCCHECK        CHECK FOR SUCCESSFUL CALL\n*\n         CLOSE SYSPRINT                CLOSE PRINTER\n*\n         L     R13,4(R13)\n         RETURN (14,12),T,RC=0\n*\n*--------------------------------------------------------------------\n*        translate incoming hex ip address\n*        to character dotted decimal\n*        result in IPADDR CL15\n*--------------------------------------------------------------------\n*\nIPTRANS  DS    0F\n         XR    R6,R6\n         IC    R6,ADDRESSR             FROM IP ADDRESS\n         SLL   R6,2                    * 4\n         L     R7,=A(IPTBL)\n         AR    R7,R6\n         MVC   IPADDR+0(4),0(R7)\n*\n         XR    R6,R6\n         IC    R6,ADDRESSR+1           FROM IP ADDRESS\n         SLL   R6,2                    * 4\n         L     R7,=A(IPTBL)\n         AR    R7,R6\n         MVC   IPADDR+4(4),0(R7)\n*\n         XR    R6,R6\n         IC    R6,ADDRESSR+2           FROM IP ADDRESS\n         SLL   R6,2                    * 4\n         L     R7,=A(IPTBL)\n         AR    R7,R6\n         MVC   IPADDR+8(4),0(R7)\n*\n         XR    R6,R6\n         IC    R6,ADDRESSR+3           FROM IP ADDRESS\n         SLL   R6,2                    * 4\n         L     R7,=A(IPTBL)\n         AR    R7,R6\n         MVC   IPADDR+12(3),0(R7)\n*\n         BR    R10\n*\n*--------------------------------------------------------------------\n*\n*        TRANSLATE PACKET TO CHARACTER FORMAT\n*\n*--------------------------------------------------------------------\n*\nDUMPREC  DS    0H\n*\n         LA    R3,PACKET              SNTP PACKET\n         L     R4,NBYTE               NUMBER OF BYTES\n         LA    R5,PRINTLIN+25         OUTPUT AREA\n***            R6                     COMPUTED INDEX\n         L     R7,=A(X2CTBL)          HEX TO CHAR TABLE\n*\nDUMPLOOP EQU   *\n         XR    R6,R6                   CLEAR REG 6\n         IC    R6,0(,R3)               GET HEX BYTE\n         SLL   R6,1                    * 2 (TABLE WIDTH)\n         AR    R6,R7                   INDEX INTO TABLE\n         MVC   0(2,R5),0(R6)           MOVE CHARACTERS TO PRINT LINE\n         LA    R3,1(,R3)\n         LA    R5,2(,R5)\n         BCT   R4,DUMPLOOP\n*\n         BR    R10\n*\n* -------------------------------------------------------------------\n*\n*        COMPUTE NTP TIME STAMP\n*\n*          r4  = seconds since 00:00:00 Jan 1, 1900\n*          r5  = fractional second\n*\n* -------------------------------------------------------------------\n*\nGETTIME  EQU   *\n*\n         STCK  IBMCLOCK\n         LM    R8,R9,IBMCLOCK      1,000,000 TICS PER SECOND\n         SRDL  R8,12               GET RID OF UNUSED BITS\n*\n         L     R6,=F'2000000'      2 * 1,000,000  (DIV BY 2)\n*\n         DR    R8,R6\n         LR    R4,R9               SAVE QUOTIENT\n*\n         XR    R9,R9\n         SRDL  R8,1                KEEP IT MANAGABLE (DIV BY 2)\n*\n         DR    R8,R6\n         LR    R5,R9               SAVE QUOTIENT\n*\n         SLL   R5,1                SHIFT IT BACK (MULT BY 2)\n         SLDL  R4,1                SHIFT 'EM ALL BACK (MULT BY 2)\n*\n         BR    R10\n*\nIBMCLOCK DC    2F'0'             R8 , R9  INPUT\n*\n* -------------------------------------------------------------------\n*        NTP/SNTP PACKET FORMAT\n* -------------------------------------------------------------------\n*\n         DS    0D\n         DC    CL8'PACKET'\nPACKET   DS    0CL84\nHEADER   DC    B'00011100' 00  - LEAP INDICATOR, NO WARNING\n*                          000 - VERSION,  3 IP4\n*                          000 - MODE,  3 CLIENT 4 SERVER\nSTRATUM  DC    AL1(1)      STATUM - PRIMARY REFERENCE\nPOLL     DC    AL1(00)     POLL INTERVAL ?\nPRECISN  DC    AL1(-20)    PRECISION (20 HEX BITS)\nROOTDLY  DC    F'0'        ROOT DELAY\nROOTDISP DC    F'0'        ROOT DISPERSION\nREFID    DC    XL4'41435453'   REFERENCE ID   \"ACTS\" (ASCII)\nSTAMP1   DC    CL8' '      REFERENCE TIMESTAMP (TIME OF LAST CORRECTED)\nSTAMP2   DC    CL8' '      ORIGINATE TIMESTAMP (SENT BY CLIENT)\nSTAMP3   DC    CL8' '      RECEIVE   TIMESTAMP (BY SERVER)\nSTAMP4   DC    CL8' '      TRANSMIT  TIMESTAMP (BY SERVER)\n         DC    F'0'        KEY ID              (OPTIONAL)\n         DC  32F'0'        MESSAGE DIGEST      (OPTIONAL)\n*\nPACKETX  DC    CL84' '\nPACKET1  DC    CL84' '\nPACKET2  DC    CL84' '\n*\nNBYTE    DC    AL4(NBYTE-PACKET)    SIZE OF BUFFER\n*\nHEADWORK DC    CL1' '\n*\n* -------------------------------------------------------------------\n*        LOG MESSAGE TO SYSPRINT\n* -------------------------------------------------------------------\n*\nLOG      DS    0F\n*\n         PUT   SYSPRINT,PRINTREC\n*\n         MVC   PRINTREC(133),SPACES    CLEAR PRINT RECORD\n*\n         BR    R10\n*\n* -------------------------------------------------------------------\n*\n*        log print record\n*\n* -------------------------------------------------------------------\n*\nPRINTREC DS    0F\nPRINTASA DC    C' '\nPRINTLIN DC    CL132' '\n*\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      C\n               RECFM=FBA,LRECL=133    ,BLKSIZE=0\n*\n* ------ STARTUP DELAY TIME -----------------------------------------\n*\nWAITTIME DC    F'00001000'          100 = 1 SECOND WAIT TIME\n*\n*--------------------------------------------------------------------\n*\nWTOSUB   DS    0F\n         MVC   MSGCMD(8),TYPE\n         WTO   TEXT=MSG           WRITE MESSAGE TO OPERATOR\n         BR    R10                --> RETURN TO CALLER\n*\n*--------------------------------------------------------------------\n*\n         CNOP  2,4\n*        USES R6,R7,R8         RETCODE RETURNED IN R8\nRCCHECK  EQU   *\n         MVC   MSGRSLT1,MSGSUCC   ...SUCCESS TEXT\n         L     R6,RETCODE\n         LTR   R6,R6\n         BM    NOWAIT\n         CLI   SYNFLAG,0          PLAIN CASE?\n         BE    NOWAIT             --> SKIP IT\n         MVC   KEY+14(8),SUBTASK\n         MVC   KEY+23(8),TYPE\nKEY      WTO   'WAIT: XXXXXXXX XXXXXXXX'\n         WAIT  ECB=ECB\nNOWAIT   EQU   *\n*        LA    R15,ECB\n*        ST    R15,ECB\n         ST    R9,ECB             MAKE THIS THE TOKEN AGAIN\n         L     R6,RETCODE         CHECK FOR SUCCESSFUL CALL\n         LTR   R8,R6              SAVE A COPY\n*\n         BNL   CONT00\n*\n         MVC   MSGRSLT1,MSGFAIL   ...FAIL TEXT\nCONT00   EQU   *\n*\n*--------------------------------------------------------------------\n*        FORMAT THE RETCODE= -XXXXXXX ERRNO= XXXXXXX MSG RESULTS\n*        ***> R6 = RETCODE VALUE ON ENTRY\n*--------------------------------------------------------------------\n*\n         MVC   MSGRTCT,MSGRETC    ' RETCODE= '\n         MVI   MSGRTCS,C'+'\n         LTR   R6,R6\n         BNM   NOTM               -->\n         MVI   MSGRTCS,C'-'       MOVE SIGN WHICH IS ALWAYS MINUS\nNOTM     EQU   *\n         MVC   MSGERRT,MSGERRN    ' ERRNO= '\n*\n         CVD   R6,DWORK           CONVERT IT TO DECIMAL\n         UNPK  MSGRTCV,DWORK+4(4) UNPACK IT\n         OI    MSGRTCV+6,X'F0'    CORRECT THE SIGN\n*\n         L     R6,ERRNO           GET ERRNO VALUE\n         CVD   R6,DWORK           CONVERT IT TO DECIMAL\n         UNPK  MSGERRV,DWORK+4(4) UNPACK IT\n         OI    MSGERRV+6,X'F0'    CORRECT THE SIGN\n*\n         MVC   MSGRSLT2(35),MSGRTCD\n*\n         SR    R6,R6              CLEAR OUT...\n         ST    R6,RETCODE            RETCODE AND...\n         ST    R6,ERRNO                 ERRNO\n*\n*\n         CLI   TRACE,0\n         BNE   NOTRACE\n         B     WTOSUB             --> DO WTO\n*\nNOTRACE  EQU   *\n         BR    R10                --> RETURN TO CALLER\n*\nSYNFLAG  DC    H'0'               DEFAULT TO SYN\nTRACE    DC    H'0'               DEFAULT TO TRACE\n*\n*--------------------------------------------------------------------\n*        ABEND PROGRAM AND GET A DUMP\n*--------------------------------------------------------------------\n*\nERROR    ABEND 1,DUMP\n*\n*--------------------------------------------------------------------\n* CONSTANTS USED TO RUN PROGRAM\n*--------------------------------------------------------------------\n*\nEZASMGW  EZASMI TYPE=GLOBAL,      Storage definition for GWA           X\n               STORAGE=CSECT\n*\n*---------------------*\n* INITAPI macro parms *\n*---------------------*\n*\nSUBTASK  DC    CL8'SNTP    '      SUBTASK PARM VALUE\nMAXSOC   DC    H'10'              MAXSOC PARM VALUE\nAPITYPE  DC    H'2'               OR A 3\nMAXSNO   DC    F'0'               (HIGHEST SOCKET DESCRIPTOR AVAILABLE)\nIDENT    DC    0CL16' '\n         DC    CL8'       '       NAME OF TCP TO WHICH CONNECTING\n         DC    CL8'SNTP    '      MY ADDR SPACE NAME\n*\n*--------------------------------------------------------------------\n* SOCKET macro parms *\n*--------------------*\n*\nS        DC    H'0'               SOCKET DESCRIPTOR FOR STREAM\n*\n*--------------------------------------------------------------------\n* BIND MACRO PARMS   *\n*--------------------*\n*\n         CNOP  0,4\nNAME     DC    0CL16' '           SOCKET NAME STRUCTURE\n         DC    AL2(2)             FAMILY\nPORT     DC    H'0'\nADDRESS  DC    F'0'               ACCEPT FROM THIS ADDRESS (0 = ANY)\n         DC    XL8'00'            RESERVED\n*\nIPADDR   DC    CL15' '\n*\n*--------------------------------------------------------------------\n* RECVFROM PARMS     *\n*--------------------*\n*\n         CNOP  0,4\nNAMER    DC    0CL16' '           SOCKET NAME STRUCTURE\n         DC    AL2(2)             FAMILY\nPORTR    DC    H'0'\nADDRESSR DC    F'0'               ACCEPT FROM THIS ADDRESS (0 = ANY)\n         DC    XL8'00'            RESERVED\n*\n*--------------------------------------------------------------------\n*\nADDR     DC    F'0'               MY IP ADDRESS\nPORTS    DC    H'123'             NTP / SNTP\n*\n*--------------------------------------------------------------------\n* LISTEN PARMS       *\n*--------------------*\n*\nBACKLOG  DC    F'5'               BACKLOG\n*\n*--------------------------------------------------------------------\n* READ MACRO PARMS   *\n*--------------------*\n*\nSOCDESCA DC    H'0'               SOCKET DESCRIPTOR FROM ACCEPT\nBUF      DC    CL256' THIS SHOULD NEVER APPEAR!!! :-('\n*\n*--------------------------------------------------------------------\n* WTO FRAGMENTS *\n*---------------*\n*\nMINITAPI DC    CL8'INITAPI'\nMSOCKET  DC    CL8'SOCKET'\nMBIND    DC    CL8'BIND'\nMACCEPT  DC    CL8'ACCEPT'\nMLISTEN  DC    CL8'LISTEN'\nMRECV    DC    CL8'RECVFROM'\nMWRITE   DC    CL8'WRITE'\nMSENDTO  DC    CL8'SENDTO'\nMCLOSE   DC    CL8'CLOSE'\nMTERMAPI DC    CL8'TERMAPI'\nMSGSTART DC    CL8' STARTED'\nMSGEND   DC    CL8' ENDED  '\nMSGBUFF  DC    CL10' BUFFER:  '                    ...\nMSGSUCC  DC    CL10' SUCCESS  '     Command results...\nMSGFAIL  DC    CL10' FAIL: ( '                    ...\nMSGRETC  DC    CL10' RETCODE= '                    ...\nMSGERRN  DC    CL10' ERRNO=   '                    ...\nBLANK35  DC    CL80' '\nSPACES   DC    CL133' '\n*\n*--------------------------------------------------------------------\n* ERROR NUMBER / RETURN CODE FIELDS *\n*-----------------------------------*\n*--------------------------------------------------------------------\n* MESSAGE AREA *\n*--------------*\n*\nMSG      DC    0F'0'              MESSAGE AREA\n         DC    AL2(MSGE-MSGNUM)   LENGTH OF MESSAGE\nMSGNUM   DC    CL6'SNTP:'        'EZASOKASXX:'\nMSGCMD   DC    CL8' '             COMMAND ISSUED\nMSGRSLT1 DC    CL10' '            COMMAND RESULTS (SUCC, PASS, FAIL)\nMSGRSLT2 DC    CL66' '            RETURNED VALUES\nMSGE     EQU   *                  End of message\n*\n*--------------------------------------------------------------------\n* MESSAGE RESULTS AREAS (fill in and move to MSGRSLT2) *\n*------------------------------------------------------*\n*\nMSGRTCD  DC    0CL35' '           GENERAL RETURNED VALUE\nMSGRTCT  DC    CL10'RETCODE='    ' RETCODE= '\nMSGRTCS  DC    CL1' '             '-' (NEGATIVE SIGN)\nMSGRTCV  DC    CL7' '             RETURNED VALUE (RETCODE)\nMSGERRT  DC    CL10' ERRNO='      ' ERRNO=   '\nMSGERRV  DC    CL7' '             RETURNED VALUE (ERRNO)\n*\n*--------------------------------------------------------------------\n*\nDWORK    DC    D'0'            WORK AREA\n*\n         LTORG ,\n*\n*--------------------------------------------------------------------\n*\n         CNOP  0,8\n*\nMYCB     EQU   *               MY CONTROL BLOCK\nREQAREA  EQU   *\nECB      DC    A(ECB)          SELF POINTER\n         DC    CL100'WORK AREA'\n*\nMYTIE    EZASMI TYPE=TASK,STORAGE=CSECT     TIE\n*\nTYPE     DC    CL8'TYPE'\nERRNO    DC    F'0'\nRETCODE  DC    F'0'\n*\n*--------------------------------------------------------------------\n*\n         COPY  IPCOPY          IP TRANSLATION TABLE\n*\n         COPY  X2CTBL          HEX TO CHARACTER TRANSLATION TABLE\n*\n*--------------------------------------------------------------------\n*\n         END   BEGIN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SNTPPROC": {"ttr": 3337, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00\\x14\\x00\\x14\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "KCLAPP"}, "text": "//SNTP    PROC\n//*\n//*********************************************************************\n//*\n//*                    SIMPLE NETWORK TIME PROTOCOL\n//*                    --------- SERVER -----------\n//*\n//*\n//* KENNETH W CLAPP\n//* 7 OCTOBER 1999\n//*\n//*********************************************************************\n//*\n//SERVER  EXEC PGM=SNTP,\n//             TIME=1440\n//*\n//SYSPRINT  DD SYSOUT=8\n//*\n//SYSUDUMP  DD SYSOUT=T\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SNTPRATE": {"ttr": 3339, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00\\xeb\\x00\\xeb\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 235, "newlines": 235, "modlines": 0, "user": "KCLAPP"}, "text": "SNTPRATE CSECT\nSNTPRATE AMODE ANY\nSNTPRATE RMODE 24\n*\n*        PRINT NOGEN\n*\n***********************************************************************\n*                                                                     *\n*   MODULE NAME:  SNTPTEST test SNTP timestamp creation performance   *\n*                                                                     *\n*   Kenneth W. Clapp                                                  *\n*   7 October 1999                                                    *\n*                                                                     *\n*   LANGUAGE:  Assembler                                              *\n*                                                                     *\n*   ATTRIBUTES: NON-REUSABLE, AUTHORIZED                              *\n*                                                                     *\n*   REGISTER USAGE:                                                   *\n*        R1  =                                                        *\n*        R2  =                                                        *\n*        R3  =                                                        *\n*        R4  = work     - even seconds                                *\n*        R5  = work     - fractional seconds                          *\n*        R6  = work                                                   *\n*        R7  = work                                                   *\n*        R8  =                                                        *\n*        R9  =                                                        *\n*        R10 = RETURN REG                                             *\n*        R11 =                                                        *\n*        R12 =               BASE REG 2                               *\n*        R13 = SAVE AREA   & BASE REG 1                               *\n*        R14 =                                                        *\n*        R15 =                                                        *\n*                                                                     *\n*   INPUT: NONE                                                       *\n*   OUTPUT: SYSPRINT results                                          *\n*                                                                     *\n***********************************************************************\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*\n* ------ START OF EXECUTABLE CODE ---------------------------------\n*\n         USING BEGIN,R15               TEMP ADDRESSABILITY\n*\nBEGIN    B     SAVE                    JUMP OVER CONSTANTS\n         DC    F'0'                    ADDR OF PREV SAVE AREA\n         DC    F'0'                    ADDR OF NEXT SAVE AREA\n         DC    15F'0'                  REGS 14 - 12\n         DC    18F'0'                  SECOND LEVEL SAVE AREA\nVERSION  DC    CL60'SNTPRATE V1.1 : ASSEMBLED &SYSDATE &SYSTIME '\nSAVE     DS    0H\n         SAVE (14,12)\n         ST   15,8(,13)                ADDRESS OF THIS SAVE AREA\n         ST   13,4(,15)                ADDRESS OF THIS LAST AREA\n         LR   13,15                    ESTABLISH ADDRESSABILITY\n         LR   12,13\n         LA   12,2048(,R12)            SETUP SECOND BASE REGISTER\n         LA   12,2048(,R12)            SETUP SECOND BASE REGISTER\n*\n         DROP 15\n         USING BEGIN,R13,R12           READY TO ROLL\n*\n* ------ OPEN LOG FILE --------------------------------------------\n*\n         OPEN  (SYSPRINT,(OUTPUT)),MODE=31\n*\n***********************************************************************\n*                                                                     *\n*        Issue READ - Read data and store in buffer                   *\n*                                                                     *\n***********************************************************************\n*\n         L     R11,=F'10000000'  10,000,000\n*\n         BAL   R10,GETTIME       RECEIVE TIME\n         STM   R4,R5,NTPSTMP1    STORE STAMP\n*\nLOOP     EQU   *\n*\n         BAL   R10,GETTIME\n*\n         BCT   R11,LOOP\n*\n         STM   R4,R5,NTPSTMP2    STORE STAMP\n*\n         MVC   PRINTLIN+00(08),=CL8'SNTP1   '\n*\n         LA    R3,NTPSTMP1\n         LA    R4,8\n         LA    R5,PRINTLIN+08\n         BAL   R10,DUMPREC        CHARACTER FORMAT HEX RECORD\n*\n         MVC   PRINTLIN+40(08),=CL8'SNTP2   '\n         LA    R3,NTPSTMP2\n         LA    R4,8\n         LA    R5,PRINTLIN+48\n         BAL   R10,DUMPREC        CHARACTER FORMAT HEX RECORD\n*\n         BAL   R10,LOG            PRINT TO LOG\n*\n         STIMER WAIT,BINTVL=WAITTIME   WAIT A MOMENT\n*\n*\n*---------------------------------------------------------------------*\n*        Return\n*---------------------------------------------------------------------*\n*\nTERM     EQU   *\n*\n         CLOSE SYSPRINT                CLOSE PRINTER\n*\n         L     R13,4(R13)\n         RETURN (14,12),T,RC=0\n*\n* ------ DELAY TIME --------------------------------------------------\n*\nWAITTIME DC    F'00000013'          100 = 1 SECOND WAIT TIME\n*\n*---------------------------------------------------------------------*\n*        TRANSLATE PACKET TO CHARACTER FORMAT\n*        R3 - SOURCE\n*        R4 - LENGTH\n*        R5 - DEST\n*---------------------------------------------------------------------*\n*\nDUMPREC  DS    0H\n*\n***      LA    R3,PACKET              SNTP PACKET\n***      L     R4,NBYTE               NUMBER OF BYTES\n***      LA    R5,PRINTLIN+25         OUTPUT AREA\n***            R6                     COMPUTED INDEX\n         L     R7,=A(X2CTBL)          HEX TO CHAR TABLE\n*\nDUMPLOOP EQU   *\n         XR    R6,R6                   CLEAR REG 6\n         IC    R6,0(,R3)               GET HEX BYTE\n         SLL   R6,1                    * 2 (TABLE WIDTH)\n         AR    R6,R7                   INDEX INTO TABLE\n         MVC   0(2,R5),0(R6)           MOVE CHARACTERS TO PRINT LINE\n         LA    R3,1(,R3)\n         LA    R5,2(,R5)\n         BCT   R4,DUMPLOOP\n*\n         BR    R10\n*\n* --------------------------------------------------------------------*\n*\n*        COMPUTE NTP TIME STAMP\n*        r4  = seconds since jan 1 1900\n*        r5  = fractional second\n*        r10 = return address\n*\n* -------------------------------------------------------------------\n*\nGETTIME  EQU   *\n*\n         STCK  IBMCLOCK\n         LM    R8,R9,IBMCLOCK      1,000,000 TICS PER SECOND\n         SRDL  R8,12               GET RID OF UNUSED BITS\n*\n         L     R6,=F'2000000'      2 * 1,000,000  (DIV BY 2)\n*\n         DR    R8,R6\n         LR    R4,R9               SAVE QUOTIENT\n*\n         XR    R9,R9\n         SRDL  R8,1                KEEP IT MANAGABLE (DIV BY 2)\n*\n         DR    R8,R6\n         LR    R5,R9               SAVE QUOTIENT\n*\n         SLL   R5,1                SHIFT IT BACK (MULT BY 2)\n         SLDL  R4,1                SHIFT 'EM ALL BACK (MULT BY 2)\n*\n         BR    R10\n*\nIBMCLOCK DC    2F'0'             R8 , R9  INPUT\n*\nNTPSTMP1 DC    2F'0'\nNTPSTMP2 DC    2F'0'\n*\n* ---------------------------------------------------------------------\n*        LOG MESSAGE TO SYSPRINT\n* ---------------------------------------------------------------------\n*\nLOG      DS    0F\n*\n         PUT   SYSPRINT,PRINTREC\n*\n         MVC   PRINTREC(133),SPACES    CLEAR PRINT RECORD\n*\n         BR    R10\n*\n* -------------------------------------------------------------------\n*\n* -------------------------------------------------------------------\n*\nPRINTREC DS    0F\nPRINTASA DC    C' '\nPRINTLIN DC    CL132' '\n*\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      C\n               RECFM=FBA,LRECL=133    ,BLKSIZE=0\n*\n*---------------------------------------------------------------------*\n* CONSTANTS USED TO RUN PROGRAM                                       *\n*---------------------------------------------------------------------*\n*\nSPACES   DC    CL133' '\n*\n         LTORG ,\n*\n*---------------------------------------------------------------------*\n*\n         COPY  X2CTBL          HEX TO CHARACTER TRANSLATION TABLE\n*\n*---------------------------------------------------------------------*\n*\n         END   BEGIN\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SNTPTEST": {"ttr": 3589, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x00\\xe6\\x00\\xe6\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 230, "newlines": 230, "modlines": 0, "user": "KCLAPP"}, "text": "SNTPTEST CSECT\nSNTPTEST AMODE ANY\nSNTPTEST RMODE 24\n*\n*        PRINT NOGEN\n*\n***********************************************************************\n*                                                                     *\n*   MODULE NAME:  SNTPTEST test SNTP timestamp creation               *\n*                                                                     *\n*   Kenneth W. Clapp                                                  *\n*   7 October 1999                                                    *\n*                                                                     *\n*   LANGUAGE:  Assembler                                              *\n*                                                                     *\n*   ATTRIBUTES: NON-REUSABLE, AUTHORIZED                              *\n*                                                                     *\n*   REGISTER USAGE:                                                   *\n*        R1  =                                                        *\n*        R2  =                                                        *\n*        R3  =                                                        *\n*        R4  = work     - even seconds                                *\n*        R5  = work     - fractional seconds                          *\n*        R6  = work                                                   *\n*        R7  = work                                                   *\n*        R8  =                                                        *\n*        R9  =                                                        *\n*        R10 = RETURN REG                                             *\n*        R11 =                                                        *\n*        R12 =               BASE REG 2                               *\n*        R13 = SAVE AREA   & BASE REG 1                               *\n*        R14 =                                                        *\n*        R15 =                                                        *\n*                                                                     *\n*   INPUT: NONE                                                       *\n*   OUTPUT: SYSPRINT results                                          *\n*                                                                     *\n***********************************************************************\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*\n* ------ START OF EXECUTABLE CODE ---------------------------------\n*\n         USING BEGIN,R15               TEMP ADDRESSABILITY\n*\nBEGIN    B     SAVE                    JUMP OVER CONSTANTS\n         DC    F'0'                    ADDR OF PREV SAVE AREA\n         DC    F'0'                    ADDR OF NEXT SAVE AREA\n         DC    15F'0'                  REGS 14 - 12\n         DC    18F'0'                  SECOND LEVEL SAVE AREA\nVERSION  DC    CL60'SNTPTEST V1.1 : ASSEMBLED &SYSDATE &SYSTIME '\nSAVE     DS    0H\n         SAVE (14,12)\n         ST   15,8(,13)                ADDRESS OF THIS SAVE AREA\n         ST   13,4(,15)                ADDRESS OF THIS LAST AREA\n         LR   13,15                    ESTABLISH ADDRESSABILITY\n         LR   12,13\n         LA   12,2048(,R12)            SETUP SECOND BASE REGISTER\n         LA   12,2048(,R12)            SETUP SECOND BASE REGISTER\n*\n         DROP 15\n         USING BEGIN,R13,R12           READY TO ROLL\n*\n* ------ OPEN LOG FILE --------------------------------------------\n*\n         OPEN  (SYSPRINT,(OUTPUT)),MODE=31\n*\n***********************************************************************\n*                                                                     *\n*        Issue READ - Read data and store in buffer                   *\n*                                                                     *\n***********************************************************************\n*\n         LA    R11,20\n*\nLOOP     EQU   *\n*\n         BAL   R10,GETTIME        RECEIVE TIME\n*\n         STM   R4,R5,NTPSTAMP     STORE STAMP\n*\n         MVC   PRINTLIN+00(08),=CL8'STCK    '\n*\n         LA    R3,IBMCLOCK\n         LA    R4,8\n         LA    R5,PRINTLIN+08\n         BAL   R10,DUMPREC        CHARACTER FORMAT HEX RECORD\n*\n         MVC   PRINTLIN+40(08),=CL8'SNTP    '\n         LA    R3,NTPSTAMP\n         LA    R4,8\n         LA    R5,PRINTLIN+48\n         BAL   R10,DUMPREC        CHARACTER FORMAT HEX RECORD\n*\n         BAL   R10,LOG            PRINT TO LOG\n*\n         STIMER WAIT,BINTVL=WAITTIME   WAIT A MOMENT\n*\n         BCT   R11,LOOP\n*\n*---------------------------------------------------------------------*\n*        Return\n*---------------------------------------------------------------------*\n*\nTERM     EQU   *\n*\n         CLOSE SYSPRINT                CLOSE PRINTER\n*\n         L     R13,4(R13)\n         RETURN (14,12),T,RC=0\n*\n* ------ DELAY TIME --------------------------------------------------\n*\nWAITTIME DC    F'00000013'          100 = 1 SECOND WAIT TIME\n*\n*---------------------------------------------------------------------*\n*        TRANSLATE PACKET TO CHARACTER FORMAT\n*        R3 - SOURCE\n*        R4 - LENGTH\n*        R5 - DEST\n*---------------------------------------------------------------------*\n*\nDUMPREC  DS    0H\n*\n***      LA    R3,PACKET              SNTP PACKET\n***      L     R4,NBYTE               NUMBER OF BYTES\n***      LA    R5,PRINTLIN+25         OUTPUT AREA\n***            R6                     COMPUTED INDEX\n         L     R7,=A(X2CTBL)          HEX TO CHAR TABLE\n*\nDUMPLOOP EQU   *\n         XR    R6,R6                   CLEAR REG 6\n         IC    R6,0(,R3)               GET HEX BYTE\n         SLL   R6,1                    * 2 (TABLE WIDTH)\n         AR    R6,R7                   INDEX INTO TABLE\n         MVC   0(2,R5),0(R6)           MOVE CHARACTERS TO PRINT LINE\n         LA    R3,1(,R3)\n         LA    R5,2(,R5)\n         BCT   R4,DUMPLOOP\n*\n         BR    R10\n*\n* --------------------------------------------------------------------*\n*\n*        COMPUTE NTP TIME STAMP\n*        r4  = seconds since jan 1 1900\n*        r5  = fractional second\n*        r10 = return address\n*\n* -------------------------------------------------------------------\n*\nGETTIME  EQU   *\n*\n         STCK  IBMCLOCK\n         LM    R8,R9,IBMCLOCK      1,000,000 TICS PER SECOND\n         SRDL  R8,12               GET RID OF UNUSED BITS\n*\n         L     R6,=F'2000000'      2 * 1,000,000  (DIV BY 2)\n*\n         DR    R8,R6\n         LR    R4,R9               SAVE QUOTIENT\n*\n         XR    R9,R9\n         SRDL  R8,1                KEEP IT MANAGABLE (DIV BY 2)\n*\n         DR    R8,R6\n         LR    R5,R9               SAVE QUOTIENT\n*\n         SLL   R5,1                SHIFT IT BACK (MULT BY 2)\n         SLDL  R4,1                SHIFT 'EM ALL BACK (MULT BY 2)\n*\n         BR    R10\n*\nIBMCLOCK DC    2F'0'             R8 , R9  INPUT\n*\nNTPSTAMP DC    2F'0'\n*\n* ---------------------------------------------------------------------\n*        LOG MESSAGE TO SYSPRINT\n* ---------------------------------------------------------------------\n*\nLOG      DS    0F\n*\n         PUT   SYSPRINT,PRINTREC\n*\n         MVC   PRINTREC(133),SPACES    CLEAR PRINT RECORD\n*\n         BR    R10\n*\n* -------------------------------------------------------------------\n*\n* -------------------------------------------------------------------\n*\nPRINTREC DS    0F\nPRINTASA DC    C' '\nPRINTLIN DC    CL132' '\n*\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      C\n               RECFM=FBA,LRECL=133    ,BLKSIZE=0\n*\n*---------------------------------------------------------------------*\n* CONSTANTS USED TO RUN PROGRAM                                       *\n*---------------------------------------------------------------------*\n*\nSPACES   DC    CL133' '\n*\n         LTORG ,\n*\n*---------------------------------------------------------------------*\n*\n         COPY  X2CTBL          HEX TO CHARACTER TRANSLATION TABLE\n*\n*---------------------------------------------------------------------*\n*\n         END   BEGIN\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "S2968KCA": {"ttr": 3594, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01_\\x01\\x01\\x01_\\x171\\x05`\\x05`\\x00\\x00\\xd7\\xd6\\xe6\\xc5\\xd9\\xd7\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-15T00:00:00", "modifydate": "2001-01-15T17:31:00", "lines": 1376, "newlines": 1376, "modlines": 0, "user": "POWERPT"}, "mimetype": "application/vnd.ms-powerpoint", "datatype": "binary", "extension": ".ppt"}, "X2CTBL": {"ttr": 4106, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x01o\\x01\\x01\\x01o\\x10E\\x01\\x06\\x01\\x06\\x00\\x00\\xd2\\xc3\\xd3\\xc1\\xd7\\xd7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-16T00:00:00", "modifydate": "2001-01-16T10:45:00", "lines": 262, "newlines": 262, "modlines": 0, "user": "KCLAPP"}, "text": "*\n*        COPY BOOK USED BY SNTP (MAYBE OTHERS)\n*\nX2CTBL   DS    0F\n         DC    C'00'\n         DC    C'01'\n         DC    C'02'\n         DC    C'03'\n         DC    C'04'\n         DC    C'05'\n         DC    C'06'\n         DC    C'07'\n         DC    C'08'\n         DC    C'09'\n         DC    C'0A'\n         DC    C'0B'\n         DC    C'0C'\n         DC    C'0D'\n         DC    C'0E'\n         DC    C'0F'\n         DC    C'10'\n         DC    C'11'\n         DC    C'12'\n         DC    C'13'\n         DC    C'14'\n         DC    C'15'\n         DC    C'16'\n         DC    C'17'\n         DC    C'18'\n         DC    C'19'\n         DC    C'1A'\n         DC    C'1B'\n         DC    C'1C'\n         DC    C'1D'\n         DC    C'1E'\n         DC    C'1F'\n         DC    C'20'\n         DC    C'21'\n         DC    C'22'\n         DC    C'23'\n         DC    C'24'\n         DC    C'25'\n         DC    C'26'\n         DC    C'27'\n         DC    C'28'\n         DC    C'29'\n         DC    C'2A'\n         DC    C'2B'\n         DC    C'2C'\n         DC    C'2D'\n         DC    C'2E'\n         DC    C'2F'\n         DC    C'30'\n         DC    C'31'\n         DC    C'32'\n         DC    C'33'\n         DC    C'34'\n         DC    C'35'\n         DC    C'36'\n         DC    C'37'\n         DC    C'38'\n         DC    C'39'\n         DC    C'3A'\n         DC    C'3B'\n         DC    C'3C'\n         DC    C'3D'\n         DC    C'3E'\n         DC    C'3F'\n         DC    C'40'\n         DC    C'41'\n         DC    C'42'\n         DC    C'43'\n         DC    C'44'\n         DC    C'45'\n         DC    C'46'\n         DC    C'47'\n         DC    C'48'\n         DC    C'49'\n         DC    C'4A'\n         DC    C'4B'\n         DC    C'4C'\n         DC    C'4D'\n         DC    C'4E'\n         DC    C'4F'\n         DC    C'50'\n         DC    C'51'\n         DC    C'52'\n         DC    C'53'\n         DC    C'54'\n         DC    C'55'\n         DC    C'56'\n         DC    C'57'\n         DC    C'58'\n         DC    C'59'\n         DC    C'5A'\n         DC    C'5B'\n         DC    C'5C'\n         DC    C'5D'\n         DC    C'5E'\n         DC    C'5F'\n         DC    C'60'\n         DC    C'61'\n         DC    C'62'\n         DC    C'63'\n         DC    C'64'\n         DC    C'65'\n         DC    C'66'\n         DC    C'67'\n         DC    C'68'\n         DC    C'69'\n         DC    C'6A'\n         DC    C'6B'\n         DC    C'6C'\n         DC    C'6D'\n         DC    C'6E'\n         DC    C'6F'\n         DC    C'70'\n         DC    C'71'\n         DC    C'72'\n         DC    C'73'\n         DC    C'74'\n         DC    C'75'\n         DC    C'76'\n         DC    C'77'\n         DC    C'78'\n         DC    C'79'\n         DC    C'7A'\n         DC    C'7B'\n         DC    C'7C'\n         DC    C'7D'\n         DC    C'7E'\n         DC    C'7F'\n         DC    C'80'\n         DC    C'81'\n         DC    C'82'\n         DC    C'83'\n         DC    C'84'\n         DC    C'85'\n         DC    C'86'\n         DC    C'87'\n         DC    C'88'\n         DC    C'89'\n         DC    C'8A'\n         DC    C'8B'\n         DC    C'8C'\n         DC    C'8D'\n         DC    C'8E'\n         DC    C'8F'\n         DC    C'90'\n         DC    C'91'\n         DC    C'92'\n         DC    C'93'\n         DC    C'94'\n         DC    C'95'\n         DC    C'96'\n         DC    C'97'\n         DC    C'98'\n         DC    C'99'\n         DC    C'9A'\n         DC    C'9B'\n         DC    C'9C'\n         DC    C'9D'\n         DC    C'9E'\n         DC    C'9F'\n         DC    C'A0'\n         DC    C'A1'\n         DC    C'A2'\n         DC    C'A3'\n         DC    C'A4'\n         DC    C'A5'\n         DC    C'A6'\n         DC    C'A7'\n         DC    C'A8'\n         DC    C'A9'\n         DC    C'AA'\n         DC    C'AB'\n         DC    C'AC'\n         DC    C'AD'\n         DC    C'AE'\n         DC    C'AF'\n         DC    C'B0'\n         DC    C'B1'\n         DC    C'B2'\n         DC    C'B3'\n         DC    C'B4'\n         DC    C'B5'\n         DC    C'B6'\n         DC    C'B7'\n         DC    C'B8'\n         DC    C'B9'\n         DC    C'BA'\n         DC    C'BB'\n         DC    C'BC'\n         DC    C'BD'\n         DC    C'BE'\n         DC    C'BF'\n         DC    C'C0'\n         DC    C'C1'\n         DC    C'C2'\n         DC    C'C3'\n         DC    C'C4'\n         DC    C'C5'\n         DC    C'C6'\n         DC    C'C7'\n         DC    C'C8'\n         DC    C'C9'\n         DC    C'CA'\n         DC    C'CB'\n         DC    C'CC'\n         DC    C'CD'\n         DC    C'CE'\n         DC    C'CF'\n         DC    C'D0'\n         DC    C'D1'\n         DC    C'D2'\n         DC    C'D3'\n         DC    C'D4'\n         DC    C'D5'\n         DC    C'D6'\n         DC    C'D7'\n         DC    C'D8'\n         DC    C'D9'\n         DC    C'DA'\n         DC    C'DB'\n         DC    C'DC'\n         DC    C'DD'\n         DC    C'DE'\n         DC    C'DF'\n         DC    C'E0'\n         DC    C'E1'\n         DC    C'E2'\n         DC    C'E3'\n         DC    C'E4'\n         DC    C'E5'\n         DC    C'E6'\n         DC    C'E7'\n         DC    C'E8'\n         DC    C'E9'\n         DC    C'EA'\n         DC    C'EB'\n         DC    C'EC'\n         DC    C'ED'\n         DC    C'EE'\n         DC    C'EF'\n         DC    C'F0'\n         DC    C'F1'\n         DC    C'F2'\n         DC    C'F3'\n         DC    C'F4'\n         DC    C'F5'\n         DC    C'F6'\n         DC    C'F7'\n         DC    C'F8'\n         DC    C'F9'\n         DC    C'FA'\n         DC    C'FB'\n         DC    C'FC'\n         DC    C'FD'\n         DC    C'FE'\n         DC    C'FF'\n*\n*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT501/FILE501.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT501", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}