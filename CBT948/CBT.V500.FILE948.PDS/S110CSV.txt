/* REXX ***************************************************************/
/*                                                                    */
/*  Author:  Duc Tuan Nguyen                                          */
/*  Email :  dt n <ndt2004@gmail.com>                                 */
/*                                                                    */
/*              REXX TO CREATE A CSV DATASET FROM SMF110              */
/*                     (CICS PERFORMANCE RECORDS)                     */
/*                                                                    */
/*  This rexx reads the unloaded dataset written from the standard    */
/*  program DFH$MOLS WHICH PRINTS SMF110 CICS PERFORMANCE RECORD.     */
/*                                                                    */
/*  The output of DFH$MOLS unfortunately is not easy for analysis.    */
/*                                                                    */
/*  This Rexx provide a CSV dataset (I like Excel), with Transaction  */
/*  ID, ELAPSED AND CPU TIME ASSOCIATED WITH THE NUMBER OF DB2        */
/*  requests. This is useful to have quickly a performance indicator  */
/*  of your information system to compare (which is mainly CICS and   */
/*  DB2 ...). As SMF110 includes DB2 time, all your consumption is    */
/*  here.                                                             */
/*                                                                    */
/*  More detailed than SMF30                                          */
/*  More convenient than SMF101 (in my shop SMF101 is not collected   */
/*  for CICS transactions because it is really huge)                  */
/*                                                                    */
/*  Prereq : Execute DFHMNDUP then DFH$MOLS with the UNLOAD option    */
/*                                                                    */
/*Rexx*/
numeric digits 15
/*-------------------------------------------------------------*/
/* Report Transaction performance Data                         */
/* Validated for CICS TS 5.3                                   */
/* Extract smf 110 records output from dfh$mols unload file    */
/*                                      ndt.db2Ã gmail.com      */
/*  10 Jun 2016     Release 1.0  for CICS 5.2                  */
/*  23 Nov 2016     Release 1.1  for CICS 5.3                  */
/*-------------------------------------------------------------*/
/*Comment : Change datasets high level identifier              */
/*-------------------------------------------------------------*/
ARG  hlq
reci=0
reco=0
mintime='24:60:00'
maxtime='00:00:00'
totcpu=0
totelap=0
totdb2r=0

/* Input file : SMF extract sorted */
oufl = hlq || '.report.cicmol'
"ALLOC DD(INP) DS('"oufl"') ,
                       SHR REU bufno(20)"

/* Report dataset on output */
oufl = "'" || hlq || '.report.tran' || "'"
"DELETE" oufl "PURGE"

"ALLOC FI(OUFL) DA("oufl") NEW CATALOG REUSE" ,
"LRECL(600) RECFM(V B) TRACKS SPACE(600,600)"
rcalloc = rc
if rcalloc <> 0 then Do
     say "**********************************************"
     say "   Error allocating Tran Report file" rcalloc
     say "   Abnormal end  "
     say "**********************************************"
     Exit 8
end
/* WRITE report header */
CALL write_header

/* START PROCESSING */
DO FOREVER
  /* read input */
  "EXECIO 1 DISKR INP"
  IF RC > 0 THEN DO
            if rc =  2 then
             do
              SAY 'End of Input file rc=' RC
              rcalloc = rc
             end
             else do
              SAY 'Error while reading Input file rc=' RC
              rcalloc = 8
             end
              leave
            END
  PARSE PULL INPUT_REC
  reci=reci+1
  Call DECODE
  Call write_report
END
/* End of processing - close file */
"EXECIO" queued() "DISKW OUFL ( FINIS"
rcwrite = rc
if rcwrite<> 0 then Do
   say "**********************************************"
   say "   Error writting OUFL file: " rcwrite
   say "   Abnormal end   "
   say "**********************************************"
   Exit 8
end
"EXECIO 0 DISKR INP (STEM INL. FINIS"
"FREE DD(INP)"
"FREE DD(OUFL)"

say "Input records =" reci
say "Output records=" reco
say 'Periode processed' tsdate ' betweeen ' mintime maxtime
say '    Total Transactions   ' reci
say '    Total cpu =          ' totcpu
say '    Total Elapsed        ' totelap
say '    Total db2requests =  ' totdb2r

EXIT rcalloc


/* MAP from dfhsamp(DFHMNPDA) */
decode:
  jobname  = SUBSTR(INPUT_REC,1,8)
  applid   = SUBSTR(INPUT_REC,9,8)
  SysId    = SUBSTR(INPUT_REC,25,4)
  /* ...*/

  TranId   = SUBSTR(INPUT_REC,93,4)
  UserId   = SUBSTR(INPUT_REC,101,8)
  /* task start PDRATTT*/
  tunits   = SUBSTR(INPUT_REC,113,8)
  call stck tunits
  startt=tstime
  startts=tots
  /* task stop  PDRDETT*/
  tunits   = SUBSTR(INPUT_REC,121,8)
  call stck tunits
  stopt=tstime
  stopts=tots
  /* pdrdist/ transaction dispatch time  */
  offs   = 2329 /* check with the manual corresponding to */
                /* the CICS version */
  usrdisp  = c2x(SUBSTR(INPUT_REC,offs,8))
  usrdisp  = x2d(SUBSTR(usrdisp,1,13)) * 0.000001
  /* pdrcput/ usrcput tcb cpu transaction */
  offs = offs+12
  usrcput  = c2x(SUBSTR(INPUT_REC,offs,8))
  usrcput  = x2d(SUBSTR(usrcput,1,13)) * 0.000001
  /* PDRSUST  User suspend time           */
  offs = offs+36
  usrsusp  = c2x(SUBSTR(INPUT_REC,offs,8))
  usrsusp  = x2d(SUBSTR(usrsusp,1,13)) * 0.000001
  /* PDRDWT   User Dispatch Wait time     */
  offs = offs+12
  usrwt    = c2x(SUBSTR(INPUT_REC,offs,8))
  usrwt    = x2d(SUBSTR(usrwt  ,1,13)) * 0.000001
  /* PDRQRDSP QR   Dispatch      time     */
  offs = offs+12
  usrqrdp  = c2x(SUBSTR(INPUT_REC,offs,8))
  usrqrdp  = x2d(SUBSTR(usrqrdp,1,13)) * 0.000001
  /* PDRQRCPU QR   CPU           time     */
  offs = offs+12
  usrqrcpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrqrcpu = x2d(SUBSTR(usrqrcpu,1,13)) * 0.000001
  /* PDRMSDSP Other mode Disp    time     */
  offs = offs+12
  usrotdp  = c2x(SUBSTR(INPUT_REC,offs,8))
  usrotdp  = x2d(SUBSTR(usrotdp ,1,13)) * 0.000001
  /* PDRMSCPU Other mode Cpu     time     */
  offs = offs+12
  usrotcpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrotcpu = x2d(SUBSTR(usrotcpu,1,13)) * 0.000001
  /* PDRRODSP RO    mode Disp    time     */
  offs = offs+12
  usrROdp  = c2x(SUBSTR(INPUT_REC,offs,8))
  usrROdp  = x2d(SUBSTR(usrrodp ,1,13)) * 0.000001
  /* PDRROCPU RO    mode Cpu     time     */
  offs = offs+12
  usrrocpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrrocpu = x2d(SUBSTR(usrrocpu,1,13)) * 0.000001
  /* PDRKY8DS Key8  mode Disp    time     */
  offs = offs+12
  usrk8dp  = c2x(SUBSTR(INPUT_REC,offs,8))
  usrk8dp  = x2d(SUBSTR(usrk8dp ,1,13)) * 0.000001
  /* PDRKY8CP Key8  mode Cpu     time     */
  offs = offs+12
  usrk8cpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrk8cpu = x2d(SUBSTR(usrk8cpu,1,13)) * 0.000001
  /* PDRKY9DS Key9  mode Disp    time     */
  offs = offs+12
  usrk9dp  = c2x(SUBSTR(INPUT_REC,offs,8))
  usrk9dp  = x2d(SUBSTR(usrk9dp ,1,13)) * 0.000001
  /* PDRKY9CP Key9  mode Cpu     time     */
  offs = offs+12
  usrk9cpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrk9cpu = x2d(SUBSTR(usrk9cpu,1,13)) * 0.000001
  /* PDRL8CPU L8    mode Cpu     time     */
  offs = offs+12
  usrl8cpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrl8cpu = x2d(SUBSTR(usrl8cpu,1,13)) * 0.000001
  /* PDRL9CPU L9    mode Cpu     time     */
  offs = offs+12
  usrl9cpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrl9cpu = x2d(SUBSTR(usrl9cpu,1,13)) * 0.000001
  /* PDRS8CPU S8    mode Cpu     time     */
  offs = offs+12
  usrs8cpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrs8cpu = x2d(SUBSTR(usrs8cpu,1,13)) * 0.000001
  /* PDRX8CPU X8    mode Cpu     time     */
  offs = offs+12
  usrx8cpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrx8cpu = x2d(SUBSTR(usrx8cpu,1,13)) * 0.000001
  /* PDRX9CPU X9    mode Cpu     time     */
  offs = offs+12
  usrx9cpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrx9cpu = x2d(SUBSTR(usrx9cpu,1,13)) * 0.000001
  /* PDRT9CPU T9    mode Cpu     time     */
  offs = offs+12
  usrt9cpu = c2x(SUBSTR(INPUT_REC,offs,8))
  usrt9cpu = x2d(SUBSTR(usrt9cpu,1,13)) * 0.000001

  /* response time */
  resp=stopts-startts
  if resp < 0 then
  do
      resp=resp* (-1)
  end
  /* sometimes start time is greater than stop time , swap values */
  if startt > stopt then
  do
      m=startt
      startt=stopt
      stopt =m
  end
  /*          PDRDB2RC db2 requests */
  offs   = 2133
  db2reqt  = c2d(SUBSTR(INPUT_REC,offs,4))
  offs   = offs   + 4
  mqreqt   = c2d(SUBSTR(INPUT_REC,offs,4))
  Return

write_header:
  say 'CSV file ' oufl     ' will be produced'
  queue "Date,Sysid,Applid,Tran,userid,startt,stopt,Resp,CPU,",
        "DB2req,MQreq,",
        "UsrDisp,",
        "UsrSusp, " ,
        "UsrWait," ,
        "usrQRdp, " ,
        "usrQRcpu," ,
        "usrOTdp ," ,
        "usrOTcpu," ,
        "usrROdp ," ,
        "usrROcpu," ,
        "usrK8dp ," ,
        "usrK8cpu," ,
        "usrK9dp ," ,
        "usrK9cpu," ,
        "usrL8cpu," ,
        "usrL9cpu," ,
        "usrS8cpu," ,
        "usrX8cpu," ,
        "usrX9cpu," ,
        "usrT9cpu"

  "EXECIO" queued() "DISKW OUFL"
  return

write_report:
    if startt < mintime then mintime=startt
    if stopt  > maxtime then maxtime=stopt
    totcpu=totcpu + usrcput
    totdb2r = totdb2r + db2reqt
    totelap=totelap+resp
    reco= reco+ 1
    /*rows in excel format */
    queue tsdate   || ',' || sysid    || ','  ,
    || applid   || ','   ,
    || Tranid       || ','   ,
    || userid       || ','   ,
    || '"' || startt || '"'           || ','   ,
    || '"' || stopt  || '"'           || ','   ,
    || resp             || ','   ,
    || usrcput           || ','   ,
    || db2reqt        || ','   ,
    || mqreqt         || ','   ,
    ||  usrdisp     || ','   ,
    ||  usrsusp     || ','   ,
    ||  usrwt       || ','   ,
    ||  usrqrdp     || ','   ,
    ||  usrqrcpu    || ','   ,
    ||  usrotdp     || ','   ,
    ||  usrotcpu    || ','   ,
    ||  usrROdp || ','   ,
    ||  usrROcpu || ','   ,
    ||  usrk8dp || ','   ,
    ||  usrk8cpu || ','   ,
    ||  usrk9dp || ','   ,
    ||  usrk9cpu || ','   ,
    ||  usrl8cpu || ','   ,
    ||  usrl9cpu || ','   ,
    ||  usrs8cpu || ','   ,
    ||  usrx8cpu || ','   ,
    ||  usrx9cpu || ','   ,
    ||  usrt9cpu

   "EXECIO" queued() "DISKW OUFL"
return
stck:
Arg TUNITS
  TIMESTAMP = Copies(0,26)  /* force result length=26 */
  Address linkpgm "BLSUXTOD TUNITS TIMESTAMP"
  /* variable Timestamp has the value of timestamp */
  TSDate=substr(timestamp,1,10)
  TSTime=substr(timestamp,12,15)
  hh=substr(tstime,1,2)
  mm=substr(tstime,4,2)
  ss=substr(tstime,7,2)
  cc=substr(tstime,10,6)*0.000001
  tots=hh*3600+60*60+ss+cc
  return
//xxxxxxxx JOB ACCT,MSGCLASS=2,REGION=0M,CLASS=1,NOTIFY=&SYSUID
/*JOBPARM SYSAFF=*
//*
//* INPUT : &HLQ..SMFEXTS (EXTRACT SMF STATS ONLY)
//*                          VOIR JOB EXTSMF
//* X'64' = 100
//*
// SET HLQ=xxxxxx.yyyyyyy
//*
//* INPUT : &HLQ..REPORT.CICMOL
//* OUTPUT1: &HLQ..REPORT.TRAN
//* ARGUMENT 1 : PREFIX FOR DATASET NAME (HLQ VALUE)
//REX110    EXEC PGM=IKJEFT01,DYNAMNBR=5,REGION=0M,COND=(4,LT),
//    PARM='S110CSV &HLQ'
//SYSEXEC  DD DISP=SHR,DSN=xxxxx
//SYSTSPRT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD DUMMY
//
