PARMS AND OPTIONS IN THE COPYMODS PROGRAM    -   AS OF LEVEL 50
----- --- ------- -- --- -------- -------

 COPYMODS can be run in default mode, without any parms or options.
 Options can be entered in the PARM field of the EXEC card.  If
 SYSIN is one of the parms, then COPYMODS reads SYSIN cards too.
 If SYSIN is coded in the PARM field, then you have to define a
 SYSIN ddname that points to a card-image file.

 As of Level 049 of COPYMODS, PARM=SYSIN gets turned on if a SYSIN
 DD card is present, and it gets turned off, if a SYSIN DD card is
 absent from the JCL.  Therefore, the mere presence (or absence)
 of a //SYSIN DD card in the JCL, determines whether SYSIN is opened
 and scanned for parm values.  It's now automatic.

 As of Level 050 of COPYMODS, PARM=STRIP will strip the labels off
 an SL tape, to create output NL tapes.  If you want to preserve the
 tape labels, and perhaps combine them back later, using a LABADDIN
 operation, you may code PARM=LABLDUMP and code a //LABLDUMP DD
 card in the COPYMODS execution JCL, to preserve all the tape labels
 into the dataset pointed to, by the //LABLDUMP DD card.

 Options in COPYMODS are driven mostly by a parm table, at label
 PARMTABL in the code.  The parm table is first scanned for defaults,
 and then the PARM field of the EXEC card is scanned.  Finally, if
 SYSIN is one of the parms in the EXEC card, then the SYSIN card-image
 file is scanned.  ANY PARM (except SYSIN) which is scanned later in
 the operation, overrides its opposite that occurred earlier.


 1.  COPYMODS by default will make an exact copy of all the files
     in an input tape, pointed to by the IN ddname, to the output
     tapes, pointed to by ddnames OUT1 through OUT16.  The only
     default is to report a VOL1 record, if the input tape is SL.

 2.  COPYMODS now has many other options.  Most of these will alter
     the output tapes slightly, from being exact copies of the input
     tape.  For example, the option CHGVOL will cause the volser in
     VOL1 tape labels of the output tapes, to be overridden by the JCL
     volume serial, instead of the volume serial of the input tape.

 3.  COPYMODS can now copy some strange tapes.  For example, COPYMODS
     can copy an input tape with leading tape marks.  The parm LTMSKIP
     will skip these in the output tapes, whereas the parm of LTMCOPY
     will copy them.  COPYMODS can copy IEHINITTed tapes.  With a parm
     of CHGVOL, the output tapes can all get different volume serials,
     so that you don't have to IEHINITT all of them to init them.

 4.  If the input tape has standard labels, you can choose to print
     an interpretation of all of them, or only some of them.  Each
     type of label can be picked in a parm--for example, HDR2, or EOF1.
     If you want to print all of the label types, you use a parm of
     LABELS, and it turns all the different flags for all the label
     types, on.

 5.  You can choose to make the COPYMODS report exactly equal to the
     report of the old COPYMODS program, by using the parm of NOVOLLBL,
     which will skip the reporting of a VOL1 label if found in the
     input tape.

 6.  Since COPYMODS now has label reporting, you may just want it to
     read a tape and not copy it.  Therefore, the parm of READ or
     READONLY tells COPYMODS not to open any output tapes.  Therefore,
     if you are running COPYMODS with a parm of READ, you do not have
     to code any output tape ddnames in the JCL.

 7.  EOV2EOF is an option of COPYMODS that will work on an input tape
     which is a composite.  If the input tape had been created by a
     program which splices tape files together, such as the COPYFILE
     program, and one of the tapes in the file has EOV1 and EOV2 labels,
     even though it isn't the last file on the tape, COPYMODS can fix
     the situation by changing these embedded EOV labels to EOF labels.

 8.  LABLDUMP and LABADDIN allows you to have complete control over the
     tape labels in copied tapes.  LABLDUMP dumps all standard labels,
     including standard user labels, to an output FB-80 file with the
     ddname of LABLDUMP.  The LABLDUMP file contains special control
     cards that mark "end of header", "end of trailer", and "end of
     volume" conditions in each label set.

     LABADDIN allows you to merge a set of labels that were created by
     the LABLDUMP option of COPYMODS, into an NL version of the original
     tape.  This NL version of the original tape can be created by the
     COPYSLNL program, which strips the labels off copied tapes, and
     which can copy selected files.  Therefore, you can create a label
     file for a tape using LABLDUMP, edit this label file using a text
     editor, and then merge the new labels back with a stripped version
     of the same tape, to create a new SL tape with your own customized
     labels.  You can even create any SUL tape by editing in your own
     user labels (UHL1, UHL2,... , UTL1, UTL2,...), and then using
     LABADDIN to create a copy of the NL tape, which has these new
     labels.  It actually works!

 9.  The parm of BLKCNT applies during a LABADDIN operation, to make
     sure that the block count in the EOF1 and EOV1 labels of the output
     tapes, matches the actual block count in each tape file.  You can
     easily mess this up, when you're editing a file of labels, and
     BLKCNT fixes the error.  BLKCNT is a default.  You override it with
     NOBLKCNT.

10.  The parm of PRADDLBL will print all labels being added to an NL
     tape by LABADDIN.  VOL1, HDR1, EOF1, HDR2, EOF2 labels are
     formatted.  Standard User Labels are printed in their entirety.

11.  The parm of CORRBLKS will make sure that block counts in all output
     tapes match the correct block counts read in the input tape.  This
     action is for a regular tape copy (not a LABADDIN), and it is not
     the default.  (That's why I used a different parm, because BLKCNT
     is the default.  If you'll think about it, the reasons are kind of
     obvious.)

12.  If you want all SL output tapes to have a default volser that is
     different from either that of the input tape, or from the volser
     in the JCL, you have to do this with a SYSIN card.  Code SYSIN
     in the parm field of the exec card, and put a card with the
     following keyword:  OUTVOLALL=volser , starting in column 1.
     When COPYMODS sees this, it will overlay all volser values in all
     the output tapes, with this volser value.  The OUTVOLALL= card
     will not be scanned for parm input, but it can be mixed with other
     cards in the SYSIN stream.  The other cards will be scanned for
     parm input.

13.  Most parms that work for normal tape copy operations, either will
     also work during a LABADDIN operation (CHGVOL will, and so will
     EOF2EOV), or they have corresponding other parms.  For example,
     LABELS will format the labels during a copy operation, while
     PRADDLBL will do the corresponding thing during LABADDIN.

14.  Default action of LABADDIN is "label driven".  That is, if there
     are fewer label sets (i.e. a set of HDRs and EOFs for a file)
     in the external label dataset than NL tape files, then COPYMODS
     is controlled by the external label file, and the output tapes
     will contain only as many files as there are label sets.  On the
     other hand, if there are more label sets than NL input files, the
     default action of COPYMODS is to add null SL files to the end of
     the output tape(s), to correspond to the extra label sets.

     A new parm, NOEXNULL (no extra null SL files) will cause COPYMODS
     to stop writing to the output tapes as soon as it exhausts the
     NL files on the input tape.  With this parm, COPYMODS will write
     no extra null SL files at the end of the output tape(s).

15.  COPYMODS can now INIT tapes without using an input tape.  Just
     code the parm of INITVOLS with optionally OUTVOLALL= and
     TAPEOWNER= keywords in SYSIN.  SYSIN (after Level 048) does
     not have to be a PARM keyword.  The presence of a //SYSIN DD
     card will turn PARM=SYSIN on automatically.  When using INITVOLS,
     CHGVOL is the default, so the volume serial of the initted tape
     will equal the JCL volser.

     A TAPEOWNER=tapeowner card in SYSIN will alter the tape owner
     field in copied VOL1 labels, if a VOL1 label is found in the
     input tape.  This is true for copying tapes, copying an initted
     tape, or initting tapes without an input tape.

     You can leave out the //IN dd card if INITVOLS is specified
     as a parm.  For other COPYMODS functions, you need an input
     tape, and the program will prompt you for it, if you've left
     its DD card out of the JCL.

16.  COPYMODS will count bytes from files on the input tape, if you
     use a parm of BYTES.  If you use a parm of CUMTOT, besides the
     byte count for each file, you will get a running total of bytes
     counted for all the files read on the tape, as of each file.

     Total bytes at the end of the tape are broken into:  grand total,
     total bytes coming from labels, and total bytes without labels.

     If you use a PARM of CUMSEP instead of CUMTOT (as of Level 049),
     then the total label bytes are cumulatively reported separately
     from the cumulative data bytes, as more files are read into the
     COPYMODS program.

17.  COPYMODS will limit the number of files copied from the input
     tape, if you code a SYSIN card with FILELIMIT=nnn starting in
     column 1.  This nnn number is mulitplied by 3 if the input tape
     is SL, so you don't have to do any calculation or compensation
     for having NL or SL.  It all works intuitively and automatically.

18.  COPYMODS can limit the number of labels copied from the external
     label file.  Each set of HDR1, HDR2, ENDOFLABELHEADER, EOF1, EOF2,
     and ENDOFLABELTRAILER cards in the external label file is called
     a LABEL SET.  The SYSIN card containing LABELIMIT=nnn starting in
     column 1, will limit the number of label sets counted in the
     external label file, and will limit the number of files created
     by LABADDIN processing, if nnn is less than the number of label
     sets in the external label file.

